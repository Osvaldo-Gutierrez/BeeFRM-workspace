/* Generated By:JavaCC: Do not edit this line. FLGParserConstants.java */
package cl.bee.genfrmjava.flgparser;


/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface FLGParserConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int SINGLE_LINE_COMMENT = 6;
  /** RegularExpression Id. */
  int FORM = 9;
  /** RegularExpression Id. */
  int TEXT = 10;
  /** RegularExpression Id. */
  int ATTRIBUTE_DEFAULTS = 11;
  /** RegularExpression Id. */
  int FIELD = 12;
  /** RegularExpression Id. */
  int ORDER = 13;
  /** RegularExpression Id. */
  int NAMED_DATA = 14;
  /** RegularExpression Id. */
  int END_OF_FORM = 15;
  /** RegularExpression Id. */
  int NAME = 16;
  /** RegularExpression Id. */
  int EQUAL = 17;
  /** RegularExpression Id. */
  int SEMICOLON = 18;
  /** RegularExpression Id. */
  int STRING = 19;
  /** RegularExpression Id. */
  int AREA_TO_CLEAR = 20;
  /** RegularExpression Id. */
  int BACKGROUND = 21;
  /** RegularExpression Id. */
  int CURRENT = 22;
  /** RegularExpression Id. */
  int HIGHLIGHT = 23;
  /** RegularExpression Id. */
  int REVERSE_FORM = 24;
  /** RegularExpression Id. */
  int HELP_FORM = 25;
  /** RegularExpression Id. */
  int NAME_ST_FORM = 26;
  /** RegularExpression Id. */
  int PRE_HELP_ACTION_ROUTINE = 27;
  /** RegularExpression Id. */
  int POST_HELP_ACTION_ROUTINE = 28;
  /** RegularExpression Id. */
  int WIDTH = 29;
  /** RegularExpression Id. */
  int COLON_ST_FORM = 30;
  /** RegularExpression Id. */
  int EQUAL_ST_FORM = 31;
  /** RegularExpression Id. */
  int SEMICOLON_ST_FORM = 32;
  /** RegularExpression Id. */
  int INTEGER_ST_FORM = 33;
  /** RegularExpression Id. */
  int STRING_ST_FORM = 34;
  /** RegularExpression Id. */
  int BOLD_TEXT = 35;
  /** RegularExpression Id. */
  int BLINK = 36;
  /** RegularExpression Id. */
  int AMPERSAND = 37;
  /** RegularExpression Id. */
  int COMMA_ST_TEXT = 38;
  /** RegularExpression Id. */
  int LPAR_ST_TEXT = 39;
  /** RegularExpression Id. */
  int RPAR_ST_TEXT = 40;
  /** RegularExpression Id. */
  int SEMICOLON_ST_TEXT = 41;
  /** RegularExpression Id. */
  int INTEGER_ST_TEXT = 42;
  /** RegularExpression Id. */
  int STRING_ST_TEXT = 43;
  /** RegularExpression Id. */
  int BLANK_FILL = 44;
  /** RegularExpression Id. */
  int CLEAR_CHARACTER = 45;
  /** RegularExpression Id. */
  int DEF = 46;
  /** RegularExpression Id. */
  int DISPLAY_ONLY = 47;
  /** RegularExpression Id. */
  int ECHO = 48;
  /** RegularExpression Id. */
  int FIXED_DECIMAL = 49;
  /** RegularExpression Id. */
  int HELP = 50;
  /** RegularExpression Id. */
  int INDEX_ST_FIELD = 51;
  /** RegularExpression Id. */
  int LEFT_JUSTIFIED = 52;
  /** RegularExpression Id. */
  int NAME_ST_FIELD = 53;
  /** RegularExpression Id. */
  int NOAUTOTAB = 54;
  /** RegularExpression Id. */
  int NOBLINKING = 55;
  /** RegularExpression Id. */
  int NOBOLD = 56;
  /** RegularExpression Id. */
  int NODISPLAY_ONLY = 57;
  /** RegularExpression Id. */
  int NOECHO = 58;
  /** RegularExpression Id. */
  int NOFIXED_DECIMAL = 59;
  /** RegularExpression Id. */
  int NOREVERSE = 60;
  /** RegularExpression Id. */
  int NOSUPERVISOR_ONLY = 61;
  /** RegularExpression Id. */
  int NOSUPPRESS = 62;
  /** RegularExpression Id. */
  int NOUNDERLINE = 63;
  /** RegularExpression Id. */
  int NOUPPERCASE = 64;
  /** RegularExpression Id. */
  int PICTURE = 65;
  /** RegularExpression Id. */
  int RESPONSE_REQUIRED = 66;
  /** RegularExpression Id. */
  int REVERSE = 67;
  /** RegularExpression Id. */
  int RIGHT_JUSTIFIED = 68;
  /** RegularExpression Id. */
  int SUPPRESS = 69;
  /** RegularExpression Id. */
  int ZERO_FILL = 70;
  /** RegularExpression Id. */
  int BOLD_FIELD = 71;
  /** RegularExpression Id. */
  int UNDERLINE = 72;
  /** RegularExpression Id. */
  int COLON_ST_FIELD = 73;
  /** RegularExpression Id. */
  int COMMA_ST_FIELD = 74;
  /** RegularExpression Id. */
  int EQUAL_ST_FIELD = 75;
  /** RegularExpression Id. */
  int LPAR_ST_FIELD = 76;
  /** RegularExpression Id. */
  int RPAR_ST_FIELD = 77;
  /** RegularExpression Id. */
  int SEMICOLON_ST_FIELD = 78;
  /** RegularExpression Id. */
  int INTEGER_ST_FIELD = 79;
  /** RegularExpression Id. */
  int STRING_ST_FIELD = 80;
  /** RegularExpression Id. */
  int BEGIN_WITH = 81;
  /** RegularExpression Id. */
  int NAME_ST_ORDER = 82;
  /** RegularExpression Id. */
  int EQUAL_ST_ORDER = 83;
  /** RegularExpression Id. */
  int SEMICOLON_ST_ORDER = 84;
  /** RegularExpression Id. */
  int INTEGER_ST_ORDER = 85;
  /** RegularExpression Id. */
  int STRING_ST_ORDER = 86;
  /** RegularExpression Id. */
  int INDEX_ST_NAMED_DATA = 87;
  /** RegularExpression Id. */
  int DATA = 88;
  /** RegularExpression Id. */
  int NAME_ST_NAMED_DATA = 89;
  /** RegularExpression Id. */
  int EQUAL_ST_NAMED_DATA = 90;
  /** RegularExpression Id. */
  int SEMICOLON_ST_NAMED_DATA = 91;
  /** RegularExpression Id. */
  int INTEGER_ST_NAMED_DATA = 92;
  /** RegularExpression Id. */
  int STRING_ST_NAMED_DATA = 93;

  /** Lexical state. */
  int NAMED_DATA_STATE = 0;
  /** Lexical state. */
  int ORDER_STATE = 1;
  /** Lexical state. */
  int FIELD_STATE = 2;
  /** Lexical state. */
  int TEXT_STATE = 3;
  /** Lexical state. */
  int FORM_STATE = 4;
  /** Lexical state. */
  int COMMENT_STATE = 5;
  /** Lexical state. */
  int DEFAULT = 6;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\t\"",
    "\"\\n\"",
    "\"\\r\"",
    "\"\\f\"",
    "<SINGLE_LINE_COMMENT>",
    "<token of kind 7>",
    "\"!\"",
    "\"FORM\"",
    "\"TEXT\"",
    "\"ATTRIBUTE_DEFAULTS\"",
    "\"FIELD\"",
    "\"ORDER\"",
    "\"NAMED_DATA\"",
    "\"END_OF_FORM\"",
    "\"NAME\"",
    "\"=\"",
    "\";\"",
    "<STRING>",
    "\"AREA_TO_CLEAR\"",
    "\"BACKGROUND\"",
    "\"CURRENT\"",
    "\"HIGHLIGHT\"",
    "\"REVERSE\"",
    "\"HELP_FORM\"",
    "\"NAME\"",
    "\"PRE_HELP_ACTION_ROUTINE\"",
    "\"POST_HELP_ACTION_ROUTINE\"",
    "\"WIDTH\"",
    "\":\"",
    "\"=\"",
    "\";\"",
    "<INTEGER_ST_FORM>",
    "<STRING_ST_FORM>",
    "\"BOLD\"",
    "\"BLINK\"",
    "\"&\"",
    "\",\"",
    "\"(\"",
    "\")\"",
    "\";\"",
    "<INTEGER_ST_TEXT>",
    "<STRING_ST_TEXT>",
    "\"BLANK_FILL\"",
    "\"CLEAR_CHARACTER\"",
    "\"DEFAULT\"",
    "\"DISPLAY_ONLY\"",
    "\"ECHO\"",
    "\"FIXED_DECIMAL\"",
    "\"HELP\"",
    "\"INDEX\"",
    "\"LEFT_JUSTIFIED\"",
    "\"NAME\"",
    "\"NOAUTOTAB\"",
    "\"NOBLINKING\"",
    "\"NOBOLD\"",
    "\"NODISPLAY_ONLY\"",
    "\"NOECHO\"",
    "\"NOFIXED_DECIMAL\"",
    "\"NOREVERSE\"",
    "\"NOSUPERVISOR_ONLY\"",
    "\"NOSUPPRESS\"",
    "\"NOUNDERLINE\"",
    "\"NOUPPERCASE\"",
    "\"PICTURE\"",
    "\"RESPONSE_REQUIRED\"",
    "\"REVERSE\"",
    "\"RIGHT_JUSTIFIED\"",
    "\"SUPPRESS\"",
    "\"ZERO_FILL\"",
    "\"BOLD\"",
    "\"UNDERLINE\"",
    "\":\"",
    "\",\"",
    "\"=\"",
    "\"(\"",
    "\")\"",
    "\";\"",
    "<INTEGER_ST_FIELD>",
    "<STRING_ST_FIELD>",
    "\"BEGIN_WITH\"",
    "\"NAME\"",
    "\"=\"",
    "\";\"",
    "<INTEGER_ST_ORDER>",
    "<STRING_ST_ORDER>",
    "\"INDEX\"",
    "\"DATA\"",
    "\"NAME\"",
    "\"=\"",
    "\";\"",
    "<INTEGER_ST_NAMED_DATA>",
    "<STRING_ST_NAMED_DATA>",
  };

}
