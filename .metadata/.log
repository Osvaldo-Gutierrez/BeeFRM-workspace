!SESSION 2020-07-28 09:56:06.182 -----------------------------------------------
eclipse.buildId=4.16.0.I20200604-0540
java.version=1.8.0_181
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_GB
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.jface 2 0 2020-07-28 09:56:15.914
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2020-07-28 09:56:15.914
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@1171ba7e,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@56872fcb,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2020-07-28 09:56:28.112
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\osval'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2020-07-28 16:12:52.224 -----------------------------------------------
eclipse.buildId=4.16.0.I20200604-0540
java.version=1.8.0_181
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_GB
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.jface 2 0 2020-07-28 16:13:06.077
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2020-07-28 16:13:06.077
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@4beae1e3,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@3c488b34,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2020-07-28 16:13:11.847
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\osval'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2020-07-28 16:16:15.385 -----------------------------------------------
eclipse.buildId=4.16.0.I20200604-0540
java.version=1.8.0_181
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_GB
Framework arguments:  -product org.eclipse.epp.package.java.product -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product -data file:/C:/Users/osval/eclipse-workspace/ -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.jface 2 0 2020-07-28 16:16:20.062
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2020-07-28 16:16:20.063
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@4fdac2a7,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@8debe42,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2020-07-28 16:16:25.357
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\osval'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.

!ENTRY JavaCC 1 0 2020-07-28 16:19:38.717
!MESSAGE File L/TestParser/src/PrepTex.jj created

!ENTRY JavaCC 1 0 2020-07-28 16:19:38.739
!MESSAGE Initializing JavaCC project preferences

!ENTRY JavaCC 4 0 2020-07-28 16:32:26.937
!MESSAGE Sorry for this bug; submit to support your grammar file and this message (Properties or Right-Click then Copy)
 Plugin JavaCC, version 1.5.33
 context data : <23>, <33>,
!STACK 0
org.eclipse.jface.text.BadLocationException
	at org.eclipse.jface.text.TreeLineTracker.fail(TreeLineTracker.java:1054)
	at org.eclipse.jface.text.TreeLineTracker.offsetByLine(TreeLineTracker.java:335)
	at org.eclipse.jface.text.TreeLineTracker.getLineOffset(TreeLineTracker.java:1111)
	at org.eclipse.jface.text.AbstractLineTracker.getLineOffset(AbstractLineTracker.java:161)
	at org.eclipse.jface.text.AbstractDocument.getLineOffset(AbstractDocument.java:877)
	at org.eclipse.core.internal.filebuffers.SynchronizableDocument.getLineOffset(SynchronizableDocument.java:323)
	at sf.eclipse.javacc.editors.TextHover.getHoverInfo2(TextHover.java:104)
	at sf.eclipse.javacc.editors.TextHover.getHoverInfo2(TextHover.java:1)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY JavaCC 1 0 2020-07-28 16:39:04.816
!MESSAGE File L/TestParser/src/MyNewGrammar.jj created
!SESSION 2020-07-28 16:40:13.793 -----------------------------------------------
eclipse.buildId=4.16.0.I20200604-0540
java.version=1.8.0_181
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_GB
Framework arguments:  -product org.eclipse.epp.package.java.product -product org.eclipse.epp.package.java.product -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product -product org.eclipse.epp.package.java.product -data file:/C:/Users/osval/eclipse-workspace/ -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.jface 2 0 2020-07-28 16:40:19.375
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2020-07-28 16:40:19.375
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@644947ee,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@25421809,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.core.runtime 4 0 2020-07-28 16:40:22.541
!MESSAGE Invalid input url:platform:/plugin/sf.eclipse.javacc/icons/jj_jj_file.gif
!STACK 0
java.io.IOException: Unable to resolve plug-in "sf.eclipse.javacc".
	at org.eclipse.core.internal.runtime.PlatformURLPluginConnection.parse(PlatformURLPluginConnection.java:64)
	at org.eclipse.core.internal.runtime.FindSupport.find(FindSupport.java:293)
	at org.eclipse.core.runtime.FileLocator.find(FileLocator.java:206)
	at org.eclipse.jface.resource.URLImageDescriptor.getFilePath(URLImageDescriptor.java:228)
	at org.eclipse.jface.resource.URLImageDescriptor.access$2(URLImageDescriptor.java:220)
	at org.eclipse.jface.resource.URLImageDescriptor$URLImageFileNameProvider.getImagePath(URLImageDescriptor.java:57)
	at org.eclipse.swt.internal.DPIUtil.validateAndGetImagePathAtZoom(DPIUtil.java:419)
	at org.eclipse.swt.graphics.Image.<init>(Image.java:687)
	at org.eclipse.jface.resource.URLImageDescriptor.createImage(URLImageDescriptor.java:263)
	at org.eclipse.jface.resource.ImageDescriptor.createResource(ImageDescriptor.java:204)
	at org.eclipse.jface.resource.DeviceResourceManager.allocate(DeviceResourceManager.java:55)
	at org.eclipse.jface.resource.AbstractResourceManager.create(AbstractResourceManager.java:88)
	at org.eclipse.jface.resource.ResourceManager.createImageWithDefault(ResourceManager.java:195)
	at org.eclipse.jface.resource.ImageRegistry.get(ImageRegistry.java:206)
	at org.eclipse.e4.ui.workbench.renderers.swt.SWTPartRenderer.getImageFromURI(SWTPartRenderer.java:219)
	at org.eclipse.e4.ui.workbench.renderers.swt.SWTPartRenderer.getImage(SWTPartRenderer.java:229)
	at org.eclipse.e4.ui.workbench.renderers.swt.StackRenderer.createTab(StackRenderer.java:879)
	at org.eclipse.e4.ui.workbench.renderers.swt.LazyStackRenderer.processContents(LazyStackRenderer.java:145)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:674)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:766)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.access$0(PartRenderingEngine.java:737)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:731)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:715)
	at org.eclipse.e4.ui.workbench.renderers.swt.SWTPartRenderer.processContents(SWTPartRenderer.java:71)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:674)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$1.run(PartRenderingEngine.java:545)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:529)
	at org.eclipse.e4.ui.workbench.renderers.swt.ElementReferenceRenderer.createWidget(ElementReferenceRenderer.java:73)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createWidget(PartRenderingEngine.java:1000)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:660)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:766)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.access$0(PartRenderingEngine.java:737)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:731)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:715)
	at org.eclipse.e4.ui.workbench.renderers.swt.SWTPartRenderer.processContents(SWTPartRenderer.java:71)
	at org.eclipse.e4.ui.workbench.renderers.swt.SashRenderer.processContents(SashRenderer.java:148)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:674)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:766)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.access$0(PartRenderingEngine.java:737)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:731)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:715)
	at org.eclipse.e4.ui.workbench.renderers.swt.SWTPartRenderer.processContents(SWTPartRenderer.java:71)
	at org.eclipse.e4.ui.workbench.renderers.swt.SashRenderer.processContents(SashRenderer.java:148)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:674)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:766)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.access$0(PartRenderingEngine.java:737)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:731)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:715)
	at org.eclipse.e4.ui.workbench.renderers.swt.SWTPartRenderer.processContents(SWTPartRenderer.java:71)
	at org.eclipse.e4.ui.workbench.renderers.swt.SashRenderer.processContents(SashRenderer.java:148)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:674)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:766)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.access$0(PartRenderingEngine.java:737)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:731)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:715)
	at org.eclipse.e4.ui.workbench.renderers.swt.SWTPartRenderer.processContents(SWTPartRenderer.java:71)
	at org.eclipse.e4.ui.workbench.renderers.swt.PerspectiveRenderer.processContents(PerspectiveRenderer.java:51)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:674)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:766)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.access$0(PartRenderingEngine.java:737)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:731)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:715)
	at org.eclipse.e4.ui.workbench.renderers.swt.PerspectiveStackRenderer.showTab(PerspectiveStackRenderer.java:82)
	at org.eclipse.e4.ui.workbench.renderers.swt.LazyStackRenderer.postProcess(LazyStackRenderer.java:105)
	at org.eclipse.e4.ui.workbench.renderers.swt.PerspectiveStackRenderer.postProcess(PerspectiveStackRenderer.java:64)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:678)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:766)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.access$0(PartRenderingEngine.java:737)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:731)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:715)
	at org.eclipse.e4.ui.workbench.renderers.swt.SWTPartRenderer.processContents(SWTPartRenderer.java:71)
	at org.eclipse.e4.ui.workbench.renderers.swt.SashRenderer.processContents(SashRenderer.java:148)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:674)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:766)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.access$0(PartRenderingEngine.java:737)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:731)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:715)
	at org.eclipse.e4.ui.workbench.renderers.swt.SWTPartRenderer.processContents(SWTPartRenderer.java:71)
	at org.eclipse.e4.ui.workbench.renderers.swt.WBWRenderer.processContents(WBWRenderer.java:666)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:674)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:766)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.access$0(PartRenderingEngine.java:737)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:731)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:715)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1084)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1047)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:658)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:557)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:154)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:150)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:137)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:107)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:657)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:594)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1447)

!ENTRY org.eclipse.jface 4 0 2020-07-28 16:40:22.548
!MESSAGE Unable to resolve plug-in "sf.eclipse.javacc".
!STACK 0
java.io.IOException: Unable to resolve plug-in "sf.eclipse.javacc".
	at org.eclipse.core.internal.runtime.PlatformURLPluginConnection.parse(PlatformURLPluginConnection.java:64)
	at org.eclipse.core.internal.runtime.PlatformURLPluginConnection.resolve(PlatformURLPluginConnection.java:73)
	at org.eclipse.core.internal.boot.PlatformURLHandler.openConnection(PlatformURLHandler.java:69)
	at org.eclipse.osgi.internal.url.URLStreamHandlerProxy.openConnection(URLStreamHandlerProxy.java:123)
	at java.net.URL.openConnection(URL.java:979)
	at org.eclipse.core.internal.runtime.PlatformURLConverter.toFileURL(PlatformURLConverter.java:34)
	at org.eclipse.core.runtime.FileLocator.toFileURL(FileLocator.java:261)
	at org.eclipse.jface.resource.URLImageDescriptor.getFilePath(URLImageDescriptor.java:232)
	at org.eclipse.jface.resource.URLImageDescriptor.access$2(URLImageDescriptor.java:220)
	at org.eclipse.jface.resource.URLImageDescriptor$URLImageFileNameProvider.getImagePath(URLImageDescriptor.java:57)
	at org.eclipse.swt.internal.DPIUtil.validateAndGetImagePathAtZoom(DPIUtil.java:419)
	at org.eclipse.swt.graphics.Image.<init>(Image.java:687)
	at org.eclipse.jface.resource.URLImageDescriptor.createImage(URLImageDescriptor.java:263)
	at org.eclipse.jface.resource.ImageDescriptor.createResource(ImageDescriptor.java:204)
	at org.eclipse.jface.resource.DeviceResourceManager.allocate(DeviceResourceManager.java:55)
	at org.eclipse.jface.resource.AbstractResourceManager.create(AbstractResourceManager.java:88)
	at org.eclipse.jface.resource.ResourceManager.createImageWithDefault(ResourceManager.java:195)
	at org.eclipse.jface.resource.ImageRegistry.get(ImageRegistry.java:206)
	at org.eclipse.e4.ui.workbench.renderers.swt.SWTPartRenderer.getImageFromURI(SWTPartRenderer.java:219)
	at org.eclipse.e4.ui.workbench.renderers.swt.SWTPartRenderer.getImage(SWTPartRenderer.java:229)
	at org.eclipse.e4.ui.workbench.renderers.swt.StackRenderer.createTab(StackRenderer.java:879)
	at org.eclipse.e4.ui.workbench.renderers.swt.LazyStackRenderer.processContents(LazyStackRenderer.java:145)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:674)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:766)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.access$0(PartRenderingEngine.java:737)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:731)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:715)
	at org.eclipse.e4.ui.workbench.renderers.swt.SWTPartRenderer.processContents(SWTPartRenderer.java:71)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:674)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$1.run(PartRenderingEngine.java:545)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:529)
	at org.eclipse.e4.ui.workbench.renderers.swt.ElementReferenceRenderer.createWidget(ElementReferenceRenderer.java:73)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createWidget(PartRenderingEngine.java:1000)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:660)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:766)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.access$0(PartRenderingEngine.java:737)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:731)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:715)
	at org.eclipse.e4.ui.workbench.renderers.swt.SWTPartRenderer.processContents(SWTPartRenderer.java:71)
	at org.eclipse.e4.ui.workbench.renderers.swt.SashRenderer.processContents(SashRenderer.java:148)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:674)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:766)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.access$0(PartRenderingEngine.java:737)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:731)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:715)
	at org.eclipse.e4.ui.workbench.renderers.swt.SWTPartRenderer.processContents(SWTPartRenderer.java:71)
	at org.eclipse.e4.ui.workbench.renderers.swt.SashRenderer.processContents(SashRenderer.java:148)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:674)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:766)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.access$0(PartRenderingEngine.java:737)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:731)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:715)
	at org.eclipse.e4.ui.workbench.renderers.swt.SWTPartRenderer.processContents(SWTPartRenderer.java:71)
	at org.eclipse.e4.ui.workbench.renderers.swt.SashRenderer.processContents(SashRenderer.java:148)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:674)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:766)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.access$0(PartRenderingEngine.java:737)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:731)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:715)
	at org.eclipse.e4.ui.workbench.renderers.swt.SWTPartRenderer.processContents(SWTPartRenderer.java:71)
	at org.eclipse.e4.ui.workbench.renderers.swt.PerspectiveRenderer.processContents(PerspectiveRenderer.java:51)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:674)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:766)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.access$0(PartRenderingEngine.java:737)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:731)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:715)
	at org.eclipse.e4.ui.workbench.renderers.swt.PerspectiveStackRenderer.showTab(PerspectiveStackRenderer.java:82)
	at org.eclipse.e4.ui.workbench.renderers.swt.LazyStackRenderer.postProcess(LazyStackRenderer.java:105)
	at org.eclipse.e4.ui.workbench.renderers.swt.PerspectiveStackRenderer.postProcess(PerspectiveStackRenderer.java:64)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:678)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:766)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.access$0(PartRenderingEngine.java:737)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:731)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:715)
	at org.eclipse.e4.ui.workbench.renderers.swt.SWTPartRenderer.processContents(SWTPartRenderer.java:71)
	at org.eclipse.e4.ui.workbench.renderers.swt.SashRenderer.processContents(SashRenderer.java:148)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:674)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:766)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.access$0(PartRenderingEngine.java:737)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:731)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:715)
	at org.eclipse.e4.ui.workbench.renderers.swt.SWTPartRenderer.processContents(SWTPartRenderer.java:71)
	at org.eclipse.e4.ui.workbench.renderers.swt.WBWRenderer.processContents(WBWRenderer.java:666)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:674)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:766)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.access$0(PartRenderingEngine.java:737)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:731)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:715)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1084)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1047)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:658)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:557)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:154)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:150)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:137)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:107)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:657)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:594)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1447)

!ENTRY org.eclipse.core.runtime 4 0 2020-07-28 16:40:22.556
!MESSAGE Invalid input url:platform:/plugin/sf.eclipse.javacc/icons/jj_jj_file.gif
!STACK 0
java.io.IOException: Unable to resolve plug-in "sf.eclipse.javacc".
	at org.eclipse.core.internal.runtime.PlatformURLPluginConnection.parse(PlatformURLPluginConnection.java:64)
	at org.eclipse.core.internal.runtime.FindSupport.find(FindSupport.java:293)
	at org.eclipse.core.runtime.FileLocator.find(FileLocator.java:206)
	at org.eclipse.jface.resource.URLImageDescriptor.getStream(URLImageDescriptor.java:155)
	at org.eclipse.jface.resource.URLImageDescriptor.getImageData(URLImageDescriptor.java:123)
	at org.eclipse.jface.resource.URLImageDescriptor.access$3(URLImageDescriptor.java:121)
	at org.eclipse.jface.resource.URLImageDescriptor$URLImageDataProvider.getImageData(URLImageDescriptor.java:77)
	at org.eclipse.swt.internal.DPIUtil.validateAndGetImageDataAtZoom(DPIUtil.java:404)
	at org.eclipse.swt.graphics.Image.<init>(Image.java:732)
	at org.eclipse.jface.resource.URLImageDescriptor.createImage(URLImageDescriptor.java:271)
	at org.eclipse.jface.resource.ImageDescriptor.createResource(ImageDescriptor.java:204)
	at org.eclipse.jface.resource.DeviceResourceManager.allocate(DeviceResourceManager.java:55)
	at org.eclipse.jface.resource.AbstractResourceManager.create(AbstractResourceManager.java:88)
	at org.eclipse.jface.resource.ResourceManager.createImageWithDefault(ResourceManager.java:195)
	at org.eclipse.jface.resource.ImageRegistry.get(ImageRegistry.java:206)
	at org.eclipse.e4.ui.workbench.renderers.swt.SWTPartRenderer.getImageFromURI(SWTPartRenderer.java:219)
	at org.eclipse.e4.ui.workbench.renderers.swt.SWTPartRenderer.getImage(SWTPartRenderer.java:229)
	at org.eclipse.e4.ui.workbench.renderers.swt.StackRenderer.createTab(StackRenderer.java:879)
	at org.eclipse.e4.ui.workbench.renderers.swt.LazyStackRenderer.processContents(LazyStackRenderer.java:145)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:674)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:766)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.access$0(PartRenderingEngine.java:737)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:731)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:715)
	at org.eclipse.e4.ui.workbench.renderers.swt.SWTPartRenderer.processContents(SWTPartRenderer.java:71)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:674)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$1.run(PartRenderingEngine.java:545)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:529)
	at org.eclipse.e4.ui.workbench.renderers.swt.ElementReferenceRenderer.createWidget(ElementReferenceRenderer.java:73)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createWidget(PartRenderingEngine.java:1000)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:660)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:766)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.access$0(PartRenderingEngine.java:737)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:731)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:715)
	at org.eclipse.e4.ui.workbench.renderers.swt.SWTPartRenderer.processContents(SWTPartRenderer.java:71)
	at org.eclipse.e4.ui.workbench.renderers.swt.SashRenderer.processContents(SashRenderer.java:148)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:674)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:766)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.access$0(PartRenderingEngine.java:737)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:731)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:715)
	at org.eclipse.e4.ui.workbench.renderers.swt.SWTPartRenderer.processContents(SWTPartRenderer.java:71)
	at org.eclipse.e4.ui.workbench.renderers.swt.SashRenderer.processContents(SashRenderer.java:148)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:674)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:766)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.access$0(PartRenderingEngine.java:737)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:731)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:715)
	at org.eclipse.e4.ui.workbench.renderers.swt.SWTPartRenderer.processContents(SWTPartRenderer.java:71)
	at org.eclipse.e4.ui.workbench.renderers.swt.SashRenderer.processContents(SashRenderer.java:148)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:674)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:766)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.access$0(PartRenderingEngine.java:737)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:731)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:715)
	at org.eclipse.e4.ui.workbench.renderers.swt.SWTPartRenderer.processContents(SWTPartRenderer.java:71)
	at org.eclipse.e4.ui.workbench.renderers.swt.PerspectiveRenderer.processContents(PerspectiveRenderer.java:51)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:674)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:766)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.access$0(PartRenderingEngine.java:737)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:731)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:715)
	at org.eclipse.e4.ui.workbench.renderers.swt.PerspectiveStackRenderer.showTab(PerspectiveStackRenderer.java:82)
	at org.eclipse.e4.ui.workbench.renderers.swt.LazyStackRenderer.postProcess(LazyStackRenderer.java:105)
	at org.eclipse.e4.ui.workbench.renderers.swt.PerspectiveStackRenderer.postProcess(PerspectiveStackRenderer.java:64)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:678)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:766)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.access$0(PartRenderingEngine.java:737)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:731)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:715)
	at org.eclipse.e4.ui.workbench.renderers.swt.SWTPartRenderer.processContents(SWTPartRenderer.java:71)
	at org.eclipse.e4.ui.workbench.renderers.swt.SashRenderer.processContents(SashRenderer.java:148)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:674)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:766)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.access$0(PartRenderingEngine.java:737)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:731)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:715)
	at org.eclipse.e4.ui.workbench.renderers.swt.SWTPartRenderer.processContents(SWTPartRenderer.java:71)
	at org.eclipse.e4.ui.workbench.renderers.swt.WBWRenderer.processContents(WBWRenderer.java:666)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:674)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:766)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.access$0(PartRenderingEngine.java:737)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:731)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:715)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1084)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1047)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:658)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:557)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:154)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:150)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:137)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:107)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:657)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:594)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1447)

!ENTRY org.eclipse.jface 2 0 2020-07-28 16:40:22.564
!MESSAGE The image could not be loaded: URLImageDescriptor(platform:/plugin/sf.eclipse.javacc/icons/jj_jj_file.gif)
!STACK 0
org.eclipse.jface.resource.DeviceResourceException: Unable to create resource URLImageDescriptor(platform:/plugin/sf.eclipse.javacc/icons/jj_jj_file.gif)
	at org.eclipse.jface.resource.ImageDescriptor.createResource(ImageDescriptor.java:206)
	at org.eclipse.jface.resource.DeviceResourceManager.allocate(DeviceResourceManager.java:55)
	at org.eclipse.jface.resource.AbstractResourceManager.create(AbstractResourceManager.java:88)
	at org.eclipse.jface.resource.ResourceManager.createImageWithDefault(ResourceManager.java:195)
	at org.eclipse.jface.resource.ImageRegistry.get(ImageRegistry.java:206)
	at org.eclipse.e4.ui.workbench.renderers.swt.SWTPartRenderer.getImageFromURI(SWTPartRenderer.java:219)
	at org.eclipse.e4.ui.workbench.renderers.swt.SWTPartRenderer.getImage(SWTPartRenderer.java:229)
	at org.eclipse.e4.ui.workbench.renderers.swt.StackRenderer.createTab(StackRenderer.java:879)
	at org.eclipse.e4.ui.workbench.renderers.swt.LazyStackRenderer.processContents(LazyStackRenderer.java:145)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:674)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:766)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.access$0(PartRenderingEngine.java:737)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:731)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:715)
	at org.eclipse.e4.ui.workbench.renderers.swt.SWTPartRenderer.processContents(SWTPartRenderer.java:71)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:674)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$1.run(PartRenderingEngine.java:545)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:529)
	at org.eclipse.e4.ui.workbench.renderers.swt.ElementReferenceRenderer.createWidget(ElementReferenceRenderer.java:73)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createWidget(PartRenderingEngine.java:1000)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:660)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:766)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.access$0(PartRenderingEngine.java:737)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:731)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:715)
	at org.eclipse.e4.ui.workbench.renderers.swt.SWTPartRenderer.processContents(SWTPartRenderer.java:71)
	at org.eclipse.e4.ui.workbench.renderers.swt.SashRenderer.processContents(SashRenderer.java:148)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:674)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:766)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.access$0(PartRenderingEngine.java:737)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:731)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:715)
	at org.eclipse.e4.ui.workbench.renderers.swt.SWTPartRenderer.processContents(SWTPartRenderer.java:71)
	at org.eclipse.e4.ui.workbench.renderers.swt.SashRenderer.processContents(SashRenderer.java:148)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:674)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:766)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.access$0(PartRenderingEngine.java:737)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:731)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:715)
	at org.eclipse.e4.ui.workbench.renderers.swt.SWTPartRenderer.processContents(SWTPartRenderer.java:71)
	at org.eclipse.e4.ui.workbench.renderers.swt.SashRenderer.processContents(SashRenderer.java:148)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:674)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:766)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.access$0(PartRenderingEngine.java:737)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:731)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:715)
	at org.eclipse.e4.ui.workbench.renderers.swt.SWTPartRenderer.processContents(SWTPartRenderer.java:71)
	at org.eclipse.e4.ui.workbench.renderers.swt.PerspectiveRenderer.processContents(PerspectiveRenderer.java:51)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:674)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:766)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.access$0(PartRenderingEngine.java:737)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:731)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:715)
	at org.eclipse.e4.ui.workbench.renderers.swt.PerspectiveStackRenderer.showTab(PerspectiveStackRenderer.java:82)
	at org.eclipse.e4.ui.workbench.renderers.swt.LazyStackRenderer.postProcess(LazyStackRenderer.java:105)
	at org.eclipse.e4.ui.workbench.renderers.swt.PerspectiveStackRenderer.postProcess(PerspectiveStackRenderer.java:64)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:678)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:766)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.access$0(PartRenderingEngine.java:737)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:731)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:715)
	at org.eclipse.e4.ui.workbench.renderers.swt.SWTPartRenderer.processContents(SWTPartRenderer.java:71)
	at org.eclipse.e4.ui.workbench.renderers.swt.SashRenderer.processContents(SashRenderer.java:148)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:674)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:766)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.access$0(PartRenderingEngine.java:737)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:731)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:715)
	at org.eclipse.e4.ui.workbench.renderers.swt.SWTPartRenderer.processContents(SWTPartRenderer.java:71)
	at org.eclipse.e4.ui.workbench.renderers.swt.WBWRenderer.processContents(WBWRenderer.java:666)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:674)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:766)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.access$0(PartRenderingEngine.java:737)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:731)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:715)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1084)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1047)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:658)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:557)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:154)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:150)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:137)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:107)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:657)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:594)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1447)

!ENTRY org.eclipse.core.runtime 4 0 2020-07-28 16:40:23.239
!MESSAGE Invalid input url:platform:/plugin/sf.eclipse.javacc/icons/jj_console.gif
!STACK 0
java.io.IOException: Unable to resolve plug-in "sf.eclipse.javacc".
	at org.eclipse.core.internal.runtime.PlatformURLPluginConnection.parse(PlatformURLPluginConnection.java:64)
	at org.eclipse.core.internal.runtime.FindSupport.find(FindSupport.java:293)
	at org.eclipse.core.runtime.FileLocator.find(FileLocator.java:206)
	at org.eclipse.jface.resource.URLImageDescriptor.getFilePath(URLImageDescriptor.java:228)
	at org.eclipse.jface.resource.URLImageDescriptor.access$2(URLImageDescriptor.java:220)
	at org.eclipse.jface.resource.URLImageDescriptor$URLImageFileNameProvider.getImagePath(URLImageDescriptor.java:57)
	at org.eclipse.swt.internal.DPIUtil.validateAndGetImagePathAtZoom(DPIUtil.java:419)
	at org.eclipse.swt.graphics.Image.<init>(Image.java:687)
	at org.eclipse.jface.resource.URLImageDescriptor.createImage(URLImageDescriptor.java:263)
	at org.eclipse.jface.resource.ImageDescriptor.createResource(ImageDescriptor.java:204)
	at org.eclipse.jface.resource.DeviceResourceManager.allocate(DeviceResourceManager.java:55)
	at org.eclipse.jface.resource.AbstractResourceManager.create(AbstractResourceManager.java:88)
	at org.eclipse.jface.resource.ResourceManager.createImageWithDefault(ResourceManager.java:195)
	at org.eclipse.jface.resource.ImageRegistry.get(ImageRegistry.java:206)
	at org.eclipse.e4.ui.workbench.renderers.swt.SWTPartRenderer.getImageFromURI(SWTPartRenderer.java:219)
	at org.eclipse.e4.ui.workbench.renderers.swt.SWTPartRenderer.getImage(SWTPartRenderer.java:229)
	at org.eclipse.e4.ui.workbench.renderers.swt.StackRenderer.createTab(StackRenderer.java:879)
	at org.eclipse.e4.ui.workbench.renderers.swt.LazyStackRenderer.processContents(LazyStackRenderer.java:145)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:674)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:766)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.access$0(PartRenderingEngine.java:737)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:731)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:715)
	at org.eclipse.e4.ui.workbench.renderers.swt.SWTPartRenderer.processContents(SWTPartRenderer.java:71)
	at org.eclipse.e4.ui.workbench.renderers.swt.SashRenderer.processContents(SashRenderer.java:148)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:674)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:766)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.access$0(PartRenderingEngine.java:737)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:731)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:715)
	at org.eclipse.e4.ui.workbench.renderers.swt.SWTPartRenderer.processContents(SWTPartRenderer.java:71)
	at org.eclipse.e4.ui.workbench.renderers.swt.SashRenderer.processContents(SashRenderer.java:148)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:674)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:766)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.access$0(PartRenderingEngine.java:737)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:731)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:715)
	at org.eclipse.e4.ui.workbench.renderers.swt.SWTPartRenderer.processContents(SWTPartRenderer.java:71)
	at org.eclipse.e4.ui.workbench.renderers.swt.PerspectiveRenderer.processContents(PerspectiveRenderer.java:51)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:674)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:766)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.access$0(PartRenderingEngine.java:737)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:731)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:715)
	at org.eclipse.e4.ui.workbench.renderers.swt.PerspectiveStackRenderer.showTab(PerspectiveStackRenderer.java:82)
	at org.eclipse.e4.ui.workbench.renderers.swt.LazyStackRenderer.postProcess(LazyStackRenderer.java:105)
	at org.eclipse.e4.ui.workbench.renderers.swt.PerspectiveStackRenderer.postProcess(PerspectiveStackRenderer.java:64)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:678)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:766)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.access$0(PartRenderingEngine.java:737)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:731)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:715)
	at org.eclipse.e4.ui.workbench.renderers.swt.SWTPartRenderer.processContents(SWTPartRenderer.java:71)
	at org.eclipse.e4.ui.workbench.renderers.swt.SashRenderer.processContents(SashRenderer.java:148)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:674)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:766)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.access$0(PartRenderingEngine.java:737)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:731)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:715)
	at org.eclipse.e4.ui.workbench.renderers.swt.SWTPartRenderer.processContents(SWTPartRenderer.java:71)
	at org.eclipse.e4.ui.workbench.renderers.swt.WBWRenderer.processContents(WBWRenderer.java:666)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:674)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:766)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.access$0(PartRenderingEngine.java:737)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:731)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:715)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1084)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1047)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:658)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:557)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:154)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:150)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:137)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:107)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:657)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:594)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1447)

!ENTRY org.eclipse.jface 4 0 2020-07-28 16:40:23.245
!MESSAGE Unable to resolve plug-in "sf.eclipse.javacc".
!STACK 0
java.io.IOException: Unable to resolve plug-in "sf.eclipse.javacc".
	at org.eclipse.core.internal.runtime.PlatformURLPluginConnection.parse(PlatformURLPluginConnection.java:64)
	at org.eclipse.core.internal.runtime.PlatformURLPluginConnection.resolve(PlatformURLPluginConnection.java:73)
	at org.eclipse.core.internal.boot.PlatformURLHandler.openConnection(PlatformURLHandler.java:69)
	at org.eclipse.osgi.internal.url.URLStreamHandlerProxy.openConnection(URLStreamHandlerProxy.java:123)
	at java.net.URL.openConnection(URL.java:979)
	at org.eclipse.core.internal.runtime.PlatformURLConverter.toFileURL(PlatformURLConverter.java:34)
	at org.eclipse.core.runtime.FileLocator.toFileURL(FileLocator.java:261)
	at org.eclipse.jface.resource.URLImageDescriptor.getFilePath(URLImageDescriptor.java:232)
	at org.eclipse.jface.resource.URLImageDescriptor.access$2(URLImageDescriptor.java:220)
	at org.eclipse.jface.resource.URLImageDescriptor$URLImageFileNameProvider.getImagePath(URLImageDescriptor.java:57)
	at org.eclipse.swt.internal.DPIUtil.validateAndGetImagePathAtZoom(DPIUtil.java:419)
	at org.eclipse.swt.graphics.Image.<init>(Image.java:687)
	at org.eclipse.jface.resource.URLImageDescriptor.createImage(URLImageDescriptor.java:263)
	at org.eclipse.jface.resource.ImageDescriptor.createResource(ImageDescriptor.java:204)
	at org.eclipse.jface.resource.DeviceResourceManager.allocate(DeviceResourceManager.java:55)
	at org.eclipse.jface.resource.AbstractResourceManager.create(AbstractResourceManager.java:88)
	at org.eclipse.jface.resource.ResourceManager.createImageWithDefault(ResourceManager.java:195)
	at org.eclipse.jface.resource.ImageRegistry.get(ImageRegistry.java:206)
	at org.eclipse.e4.ui.workbench.renderers.swt.SWTPartRenderer.getImageFromURI(SWTPartRenderer.java:219)
	at org.eclipse.e4.ui.workbench.renderers.swt.SWTPartRenderer.getImage(SWTPartRenderer.java:229)
	at org.eclipse.e4.ui.workbench.renderers.swt.StackRenderer.createTab(StackRenderer.java:879)
	at org.eclipse.e4.ui.workbench.renderers.swt.LazyStackRenderer.processContents(LazyStackRenderer.java:145)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:674)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:766)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.access$0(PartRenderingEngine.java:737)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:731)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:715)
	at org.eclipse.e4.ui.workbench.renderers.swt.SWTPartRenderer.processContents(SWTPartRenderer.java:71)
	at org.eclipse.e4.ui.workbench.renderers.swt.SashRenderer.processContents(SashRenderer.java:148)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:674)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:766)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.access$0(PartRenderingEngine.java:737)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:731)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:715)
	at org.eclipse.e4.ui.workbench.renderers.swt.SWTPartRenderer.processContents(SWTPartRenderer.java:71)
	at org.eclipse.e4.ui.workbench.renderers.swt.SashRenderer.processContents(SashRenderer.java:148)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:674)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:766)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.access$0(PartRenderingEngine.java:737)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:731)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:715)
	at org.eclipse.e4.ui.workbench.renderers.swt.SWTPartRenderer.processContents(SWTPartRenderer.java:71)
	at org.eclipse.e4.ui.workbench.renderers.swt.PerspectiveRenderer.processContents(PerspectiveRenderer.java:51)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:674)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:766)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.access$0(PartRenderingEngine.java:737)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:731)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:715)
	at org.eclipse.e4.ui.workbench.renderers.swt.PerspectiveStackRenderer.showTab(PerspectiveStackRenderer.java:82)
	at org.eclipse.e4.ui.workbench.renderers.swt.LazyStackRenderer.postProcess(LazyStackRenderer.java:105)
	at org.eclipse.e4.ui.workbench.renderers.swt.PerspectiveStackRenderer.postProcess(PerspectiveStackRenderer.java:64)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:678)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:766)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.access$0(PartRenderingEngine.java:737)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:731)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:715)
	at org.eclipse.e4.ui.workbench.renderers.swt.SWTPartRenderer.processContents(SWTPartRenderer.java:71)
	at org.eclipse.e4.ui.workbench.renderers.swt.SashRenderer.processContents(SashRenderer.java:148)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:674)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:766)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.access$0(PartRenderingEngine.java:737)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:731)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:715)
	at org.eclipse.e4.ui.workbench.renderers.swt.SWTPartRenderer.processContents(SWTPartRenderer.java:71)
	at org.eclipse.e4.ui.workbench.renderers.swt.WBWRenderer.processContents(WBWRenderer.java:666)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:674)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:766)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.access$0(PartRenderingEngine.java:737)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:731)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:715)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1084)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1047)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:658)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:557)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:154)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:150)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:137)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:107)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:657)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:594)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1447)

!ENTRY org.eclipse.core.runtime 4 0 2020-07-28 16:40:23.251
!MESSAGE Invalid input url:platform:/plugin/sf.eclipse.javacc/icons/jj_console.gif
!STACK 0
java.io.IOException: Unable to resolve plug-in "sf.eclipse.javacc".
	at org.eclipse.core.internal.runtime.PlatformURLPluginConnection.parse(PlatformURLPluginConnection.java:64)
	at org.eclipse.core.internal.runtime.FindSupport.find(FindSupport.java:293)
	at org.eclipse.core.runtime.FileLocator.find(FileLocator.java:206)
	at org.eclipse.jface.resource.URLImageDescriptor.getStream(URLImageDescriptor.java:155)
	at org.eclipse.jface.resource.URLImageDescriptor.getImageData(URLImageDescriptor.java:123)
	at org.eclipse.jface.resource.URLImageDescriptor.access$3(URLImageDescriptor.java:121)
	at org.eclipse.jface.resource.URLImageDescriptor$URLImageDataProvider.getImageData(URLImageDescriptor.java:77)
	at org.eclipse.swt.internal.DPIUtil.validateAndGetImageDataAtZoom(DPIUtil.java:404)
	at org.eclipse.swt.graphics.Image.<init>(Image.java:732)
	at org.eclipse.jface.resource.URLImageDescriptor.createImage(URLImageDescriptor.java:271)
	at org.eclipse.jface.resource.ImageDescriptor.createResource(ImageDescriptor.java:204)
	at org.eclipse.jface.resource.DeviceResourceManager.allocate(DeviceResourceManager.java:55)
	at org.eclipse.jface.resource.AbstractResourceManager.create(AbstractResourceManager.java:88)
	at org.eclipse.jface.resource.ResourceManager.createImageWithDefault(ResourceManager.java:195)
	at org.eclipse.jface.resource.ImageRegistry.get(ImageRegistry.java:206)
	at org.eclipse.e4.ui.workbench.renderers.swt.SWTPartRenderer.getImageFromURI(SWTPartRenderer.java:219)
	at org.eclipse.e4.ui.workbench.renderers.swt.SWTPartRenderer.getImage(SWTPartRenderer.java:229)
	at org.eclipse.e4.ui.workbench.renderers.swt.StackRenderer.createTab(StackRenderer.java:879)
	at org.eclipse.e4.ui.workbench.renderers.swt.LazyStackRenderer.processContents(LazyStackRenderer.java:145)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:674)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:766)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.access$0(PartRenderingEngine.java:737)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:731)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:715)
	at org.eclipse.e4.ui.workbench.renderers.swt.SWTPartRenderer.processContents(SWTPartRenderer.java:71)
	at org.eclipse.e4.ui.workbench.renderers.swt.SashRenderer.processContents(SashRenderer.java:148)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:674)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:766)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.access$0(PartRenderingEngine.java:737)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:731)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:715)
	at org.eclipse.e4.ui.workbench.renderers.swt.SWTPartRenderer.processContents(SWTPartRenderer.java:71)
	at org.eclipse.e4.ui.workbench.renderers.swt.SashRenderer.processContents(SashRenderer.java:148)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:674)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:766)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.access$0(PartRenderingEngine.java:737)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:731)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:715)
	at org.eclipse.e4.ui.workbench.renderers.swt.SWTPartRenderer.processContents(SWTPartRenderer.java:71)
	at org.eclipse.e4.ui.workbench.renderers.swt.PerspectiveRenderer.processContents(PerspectiveRenderer.java:51)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:674)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:766)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.access$0(PartRenderingEngine.java:737)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:731)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:715)
	at org.eclipse.e4.ui.workbench.renderers.swt.PerspectiveStackRenderer.showTab(PerspectiveStackRenderer.java:82)
	at org.eclipse.e4.ui.workbench.renderers.swt.LazyStackRenderer.postProcess(LazyStackRenderer.java:105)
	at org.eclipse.e4.ui.workbench.renderers.swt.PerspectiveStackRenderer.postProcess(PerspectiveStackRenderer.java:64)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:678)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:766)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.access$0(PartRenderingEngine.java:737)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:731)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:715)
	at org.eclipse.e4.ui.workbench.renderers.swt.SWTPartRenderer.processContents(SWTPartRenderer.java:71)
	at org.eclipse.e4.ui.workbench.renderers.swt.SashRenderer.processContents(SashRenderer.java:148)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:674)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:766)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.access$0(PartRenderingEngine.java:737)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:731)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:715)
	at org.eclipse.e4.ui.workbench.renderers.swt.SWTPartRenderer.processContents(SWTPartRenderer.java:71)
	at org.eclipse.e4.ui.workbench.renderers.swt.WBWRenderer.processContents(WBWRenderer.java:666)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:674)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:766)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.access$0(PartRenderingEngine.java:737)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:731)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:715)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1084)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1047)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:658)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:557)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:154)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:150)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:137)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:107)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:657)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:594)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1447)

!ENTRY org.eclipse.jface 2 0 2020-07-28 16:40:23.260
!MESSAGE The image could not be loaded: URLImageDescriptor(platform:/plugin/sf.eclipse.javacc/icons/jj_console.gif)
!STACK 0
org.eclipse.jface.resource.DeviceResourceException: Unable to create resource URLImageDescriptor(platform:/plugin/sf.eclipse.javacc/icons/jj_console.gif)
	at org.eclipse.jface.resource.ImageDescriptor.createResource(ImageDescriptor.java:206)
	at org.eclipse.jface.resource.DeviceResourceManager.allocate(DeviceResourceManager.java:55)
	at org.eclipse.jface.resource.AbstractResourceManager.create(AbstractResourceManager.java:88)
	at org.eclipse.jface.resource.ResourceManager.createImageWithDefault(ResourceManager.java:195)
	at org.eclipse.jface.resource.ImageRegistry.get(ImageRegistry.java:206)
	at org.eclipse.e4.ui.workbench.renderers.swt.SWTPartRenderer.getImageFromURI(SWTPartRenderer.java:219)
	at org.eclipse.e4.ui.workbench.renderers.swt.SWTPartRenderer.getImage(SWTPartRenderer.java:229)
	at org.eclipse.e4.ui.workbench.renderers.swt.StackRenderer.createTab(StackRenderer.java:879)
	at org.eclipse.e4.ui.workbench.renderers.swt.LazyStackRenderer.processContents(LazyStackRenderer.java:145)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:674)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:766)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.access$0(PartRenderingEngine.java:737)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:731)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:715)
	at org.eclipse.e4.ui.workbench.renderers.swt.SWTPartRenderer.processContents(SWTPartRenderer.java:71)
	at org.eclipse.e4.ui.workbench.renderers.swt.SashRenderer.processContents(SashRenderer.java:148)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:674)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:766)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.access$0(PartRenderingEngine.java:737)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:731)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:715)
	at org.eclipse.e4.ui.workbench.renderers.swt.SWTPartRenderer.processContents(SWTPartRenderer.java:71)
	at org.eclipse.e4.ui.workbench.renderers.swt.SashRenderer.processContents(SashRenderer.java:148)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:674)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:766)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.access$0(PartRenderingEngine.java:737)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:731)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:715)
	at org.eclipse.e4.ui.workbench.renderers.swt.SWTPartRenderer.processContents(SWTPartRenderer.java:71)
	at org.eclipse.e4.ui.workbench.renderers.swt.PerspectiveRenderer.processContents(PerspectiveRenderer.java:51)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:674)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:766)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.access$0(PartRenderingEngine.java:737)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:731)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:715)
	at org.eclipse.e4.ui.workbench.renderers.swt.PerspectiveStackRenderer.showTab(PerspectiveStackRenderer.java:82)
	at org.eclipse.e4.ui.workbench.renderers.swt.LazyStackRenderer.postProcess(LazyStackRenderer.java:105)
	at org.eclipse.e4.ui.workbench.renderers.swt.PerspectiveStackRenderer.postProcess(PerspectiveStackRenderer.java:64)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:678)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:766)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.access$0(PartRenderingEngine.java:737)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:731)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:715)
	at org.eclipse.e4.ui.workbench.renderers.swt.SWTPartRenderer.processContents(SWTPartRenderer.java:71)
	at org.eclipse.e4.ui.workbench.renderers.swt.SashRenderer.processContents(SashRenderer.java:148)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:674)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:766)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.access$0(PartRenderingEngine.java:737)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:731)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:715)
	at org.eclipse.e4.ui.workbench.renderers.swt.SWTPartRenderer.processContents(SWTPartRenderer.java:71)
	at org.eclipse.e4.ui.workbench.renderers.swt.WBWRenderer.processContents(WBWRenderer.java:666)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:674)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:766)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.access$0(PartRenderingEngine.java:737)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:731)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:715)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1084)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1047)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:658)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:557)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:154)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:150)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:137)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:107)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:657)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:594)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1447)

!ENTRY org.eclipse.egit.ui 2 0 2020-07-28 16:40:24.397
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\osval'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.

!ENTRY org.eclipse.e4.ui.workbench 2 0 2020-07-28 16:40:24.434
!MESSAGE Removing PartDescriptorImpl with the "sf.eclipse.javacc.Console" id and the "JavaCC Console" label.It points to the non available "bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView" class. Bundle might have been uninstalled

!ENTRY org.eclipse.e4.ui.workbench 2 0 2020-07-28 16:40:24.443
!MESSAGE Removing PartDescriptorImpl with the "sf.eclipse.javacc.CallHierarchy" id and the "JavaCC Call Hierarchy" label.It points to the non available "bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView" class. Bundle might have been uninstalled
!SESSION 2020-07-28 16:42:15.818 -----------------------------------------------
eclipse.buildId=4.16.0.I20200604-0540
java.version=1.8.0_181
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_GB
Framework arguments:  -product org.eclipse.epp.package.java.product -product org.eclipse.epp.package.java.product -product org.eclipse.epp.package.java.product -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product -product org.eclipse.epp.package.java.product -product org.eclipse.epp.package.java.product -data file:/C:/Users/osval/eclipse-workspace/ -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.jface 2 0 2020-07-28 16:42:20.373
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2020-07-28 16:42:20.373
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@4cf230bf,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@3dc55719,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2020-07-28 16:42:24.851
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\osval'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.

!ENTRY JavaCC 1 0 2020-07-28 16:44:46.505
!MESSAGE File L/PrepTex/src/BEE/test.jj created

!ENTRY JavaCC 1 0 2020-07-28 16:44:46.531
!MESSAGE Initializing JavaCC project preferences

!ENTRY JavaCC 4 0 2020-07-28 17:07:58.704
!MESSAGE Sorry for this bug; submit to support your grammar file and this message (Properties or Right-Click then Copy)
 Plugin JavaCC, version 1.5.33

!STACK 0
org.eclipse.jface.text.BadLocationException
	at org.eclipse.jface.text.TreeLineTracker.fail(TreeLineTracker.java:1054)
	at org.eclipse.jface.text.TreeLineTracker.offsetByLine(TreeLineTracker.java:335)
	at org.eclipse.jface.text.TreeLineTracker.getLineOffset(TreeLineTracker.java:1111)
	at org.eclipse.jface.text.AbstractLineTracker.getLineOffset(AbstractLineTracker.java:161)
	at org.eclipse.jface.text.AbstractDocument.getLineOffset(AbstractDocument.java:877)
	at org.eclipse.core.internal.filebuffers.SynchronizableDocument.getLineOffset(SynchronizableDocument.java:323)
	at sf.eclipse.javacc.head.ConsoleHyperlink.linkActivated(ConsoleHyperlink.java:109)
	at sf.eclipse.javacc.head.ConsoleHyperlink$1.mouseUp(ConsoleHyperlink.java:219)
	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:224)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4213)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1037)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:4030)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3630)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1158)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1047)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:658)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:557)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:154)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:150)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:137)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:107)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:657)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:594)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1447)

!ENTRY JavaCC 4 0 2020-07-28 17:14:15.361
!MESSAGE Sorry for this bug; submit to support your grammar file and this message (Properties or Right-Click then Copy)
 Plugin JavaCC, version 1.5.33
 context data : <25>, <25>,
!STACK 0
org.eclipse.jface.text.BadLocationException
	at org.eclipse.jface.text.TreeLineTracker.fail(TreeLineTracker.java:1054)
	at org.eclipse.jface.text.TreeLineTracker.offsetByLine(TreeLineTracker.java:335)
	at org.eclipse.jface.text.TreeLineTracker.getLineOffset(TreeLineTracker.java:1111)
	at org.eclipse.jface.text.AbstractLineTracker.getLineOffset(AbstractLineTracker.java:161)
	at org.eclipse.jface.text.AbstractDocument.getLineOffset(AbstractDocument.java:877)
	at org.eclipse.core.internal.filebuffers.SynchronizableDocument.getLineOffset(SynchronizableDocument.java:323)
	at sf.eclipse.javacc.editors.TextHover.getHoverInfo2(TextHover.java:104)
	at sf.eclipse.javacc.editors.TextHover.getHoverInfo2(TextHover.java:1)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY JavaCC 4 0 2020-07-28 17:15:44.721
!MESSAGE Sorry for this bug; submit to support your grammar file and this message (Properties or Right-Click then Copy)
 Plugin JavaCC, version 1.5.33
 context data : <25>, <25>,
!STACK 0
org.eclipse.jface.text.BadLocationException
	at org.eclipse.jface.text.TreeLineTracker.fail(TreeLineTracker.java:1054)
	at org.eclipse.jface.text.TreeLineTracker.offsetByLine(TreeLineTracker.java:335)
	at org.eclipse.jface.text.TreeLineTracker.getLineOffset(TreeLineTracker.java:1111)
	at org.eclipse.jface.text.AbstractLineTracker.getLineOffset(AbstractLineTracker.java:161)
	at org.eclipse.jface.text.AbstractDocument.getLineOffset(AbstractDocument.java:877)
	at org.eclipse.core.internal.filebuffers.SynchronizableDocument.getLineOffset(SynchronizableDocument.java:323)
	at sf.eclipse.javacc.editors.TextHover.getHoverInfo2(TextHover.java:104)
	at sf.eclipse.javacc.editors.TextHover.getHoverInfo2(TextHover.java:1)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY JavaCC 4 0 2020-07-28 17:15:46.174
!MESSAGE Sorry for this bug; submit to support your grammar file and this message (Properties or Right-Click then Copy)
 Plugin JavaCC, version 1.5.33
 context data : <25>, <25>,
!STACK 0
org.eclipse.jface.text.BadLocationException
	at org.eclipse.jface.text.TreeLineTracker.fail(TreeLineTracker.java:1054)
	at org.eclipse.jface.text.TreeLineTracker.offsetByLine(TreeLineTracker.java:335)
	at org.eclipse.jface.text.TreeLineTracker.getLineOffset(TreeLineTracker.java:1111)
	at org.eclipse.jface.text.AbstractLineTracker.getLineOffset(AbstractLineTracker.java:161)
	at org.eclipse.jface.text.AbstractDocument.getLineOffset(AbstractDocument.java:877)
	at org.eclipse.core.internal.filebuffers.SynchronizableDocument.getLineOffset(SynchronizableDocument.java:323)
	at sf.eclipse.javacc.editors.TextHover.getHoverInfo2(TextHover.java:104)
	at sf.eclipse.javacc.editors.TextHover.getHoverInfo2(TextHover.java:1)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)
!SESSION 2020-07-29 11:12:12.992 -----------------------------------------------
eclipse.buildId=4.16.0.I20200604-0540
java.version=1.8.0_181
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_GB
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.jface 2 0 2020-07-29 11:12:23.664
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2020-07-29 11:12:23.664
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@285bf5ac,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@3739f3c9,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2020-07-29 11:12:28.890
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\osval'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2020-07-30 09:53:23.564 -----------------------------------------------
eclipse.buildId=4.16.0.I20200604-0540
java.version=1.8.0_181
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_GB
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.jface 2 0 2020-07-30 09:53:32.494
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2020-07-30 09:53:32.494
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@18989e0,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@2a120c88,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2020-07-30 09:53:38.091
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\osval'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.

!ENTRY org.eclipse.ui 4 0 2020-07-30 09:58:02.033
!MESSAGE Unhandled event loop exception
!STACK 0
org.eclipse.swt.SWTException: Graphic is disposed
	at org.eclipse.swt.SWT.error(SWT.java:4723)
	at org.eclipse.swt.SWT.error(SWT.java:4638)
	at org.eclipse.swt.SWT.error(SWT.java:4609)
	at org.eclipse.swt.graphics.Image.getImageData(Image.java:1367)
	at org.eclipse.swt.internal.ImageList.set(ImageList.java:365)
	at org.eclipse.swt.internal.ImageList.add(ImageList.java:52)
	at org.eclipse.swt.widgets.Tree.imageIndex(Tree.java:3633)
	at org.eclipse.swt.widgets.Tree.wmNotifyChild(Tree.java:7316)
	at org.eclipse.swt.widgets.Control.wmNotify(Control.java:5794)
	at org.eclipse.swt.widgets.Composite.wmNotify(Composite.java:1950)
	at org.eclipse.swt.widgets.Control.WM_NOTIFY(Control.java:5362)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4796)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:4923)
	at org.eclipse.swt.internal.win32.OS.CallWindowProc(Native Method)
	at org.eclipse.swt.widgets.Tree.callWindowProc(Tree.java:1546)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4841)
	at org.eclipse.swt.widgets.Tree.windowProc(Tree.java:5935)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:4931)
	at org.eclipse.swt.internal.win32.OS.DispatchMessage(Native Method)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3628)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1158)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1047)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:658)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:557)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:154)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:150)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:137)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:107)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:657)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:594)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1447)
!SESSION 2020-08-03 11:53:58.263 -----------------------------------------------
eclipse.buildId=4.16.0.I20200604-0540
java.version=1.8.0_181
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_GB
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.jface 2 0 2020-08-03 11:54:22.084
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2020-08-03 11:54:22.084
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@1410d645,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@4ccdacf5,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2020-08-03 11:54:27.855
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\osval'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2020-08-04 10:09:29.553 -----------------------------------------------
eclipse.buildId=4.16.0.I20200604-0540
java.version=1.8.0_181
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_GB
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.jface 2 0 2020-08-04 10:09:38.754
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2020-08-04 10:09:38.754
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@640a8f93,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@6335f04a,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2020-08-04 10:09:44.787
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\osval'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2020-08-05 16:42:20.833 -----------------------------------------------
eclipse.buildId=4.16.0.I20200604-0540
java.version=1.8.0_181
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_GB
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.jface 2 0 2020-08-05 16:42:31.674
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2020-08-05 16:42:31.674
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@1410d645,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@4ccdacf5,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2020-08-05 16:42:39.017
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\osval'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2020-10-29 10:54:26.769 -----------------------------------------------
eclipse.buildId=4.16.0.I20200604-0540
java.version=1.8.0_181
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_GB
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.core.resources 2 10035 2020-10-29 10:54:35.057
!MESSAGE The workspace exited with unsaved changes in the previous session; refreshing workspace to recover changes.

!ENTRY org.eclipse.jface 2 0 2020-10-29 10:54:38.465
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2020-10-29 10:54:38.465
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@5dae5a70,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@7686f701,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2020-10-29 10:54:46.300
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\osval'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2020-10-29 17:22:47.114 -----------------------------------------------
eclipse.buildId=4.16.0.I20200604-0540
java.version=1.8.0_181
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_GB
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.jface 2 0 2020-10-29 17:22:53.159
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2020-10-29 17:22:53.159
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@5aa6da2,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@1a0d313,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2020-10-29 17:22:59.654
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\osval'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2020-11-05 15:03:07.834 -----------------------------------------------
eclipse.buildId=4.16.0.I20200604-0540
java.version=1.8.0_181
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_GB
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.jface 2 0 2020-11-05 15:03:18.677
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2020-11-05 15:03:18.677
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@5c8b10b4,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@1410d645,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2020-11-05 15:03:25.576
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\osval'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.

!ENTRY JavaCC 1 0 2020-11-05 16:46:21.601
!MESSAGE File L/BeeFRM/src/FLGParser.jj created

!ENTRY JavaCC 1 0 2020-11-05 16:46:21.620
!MESSAGE Initializing JavaCC project preferences

!ENTRY org.eclipse.ui 4 0 2020-11-05 17:09:15.023
!MESSAGE Unhandled event loop exception
!STACK 0
java.lang.NullPointerException
	at org.eclipse.ui.texteditor.AbstractTextEditor.markInNavigationHistory(AbstractTextEditor.java:6376)
	at sf.eclipse.javacc.editors.JJEditor.updateContentDependentActions(JJEditor.java:240)
	at org.eclipse.ui.texteditor.AbstractTextEditor$TextListener.lambda$0(AbstractTextEditor.java:615)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:185)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4005)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3633)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1158)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1047)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:658)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:557)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:154)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:150)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:137)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:107)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:657)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:594)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1447)

!ENTRY org.eclipse.ui 4 0 2020-11-05 17:09:15.061
!MESSAGE Unhandled event loop exception
!STACK 0
java.lang.IllegalStateException: Need an underlying widget to be able to set the input.(Has the widget been disposed?)
	at org.eclipse.jface.viewers.StructuredViewer.setInput(StructuredViewer.java:1629)
	at sf.eclipse.javacc.editors.OutlinePage.setNodes(OutlinePage.java:200)
	at sf.eclipse.javacc.editors.JJEditor.updateOutlinePage(JJEditor.java:404)
	at sf.eclipse.javacc.editors.JJEditor.performUpdates(JJEditor.java:362)
	at sf.eclipse.javacc.editors.ReconcilingStrategy$1.run(ReconcilingStrategy.java:166)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:185)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4005)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3633)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1158)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1047)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:658)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:557)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:154)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:150)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:137)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:107)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:657)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:594)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1447)

!ENTRY JavaCC 4 0 2020-11-05 17:09:15.213
!MESSAGE Null AnnotationModel, unable to checkSpelling() in ReconcilingStrategy ; please report this message with the actions which led to it
 Plugin JavaCC, version 1.5.33


!ENTRY org.eclipse.ui 4 0 2020-11-05 17:09:15.221
!MESSAGE Unhandled event loop exception
!STACK 0
java.lang.NullPointerException
	at sf.eclipse.javacc.editors.ReconcilingStrategy$2.run(ReconcilingStrategy.java:182)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:185)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4005)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3633)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1158)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1047)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:658)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:557)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:154)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:150)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:137)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:107)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:657)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:594)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1447)
!SESSION 2020-11-06 08:59:56.136 -----------------------------------------------
eclipse.buildId=4.16.0.I20200604-0540
java.version=1.8.0_181
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_GB
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.jface 2 0 2020-11-06 09:00:07.357
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2020-11-06 09:00:07.357
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@13908f9c,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@329b331f,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2020-11-06 09:00:14.814
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\osval'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.

!ENTRY org.eclipse.ui.workbench.texteditor 4 0 2020-11-06 23:19:49.305
!MESSAGE 
!STACK 0
java.lang.NullPointerException
	at org.eclipse.ui.texteditor.AbstractTextEditor$TextEditorSavable.isDirty(AbstractTextEditor.java:7212)
	at org.eclipse.ui.internal.Workbench.getFilteredSaveables(Workbench.java:3481)
	at org.eclipse.ui.internal.Workbench.saveAll(Workbench.java:3454)
	at org.eclipse.ui.ide.IDE$1.run(IDE.java:1494)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.ui.ide.IDE.saveAllEditors(IDE.java:1482)
	at org.eclipse.debug.internal.ui.launchConfigurations.SaveScopeResourcesHandler.doSave(SaveScopeResourcesHandler.java:228)
	at org.eclipse.debug.internal.ui.launchConfigurations.SaveScopeResourcesHandler.handleStatus(SaveScopeResourcesHandler.java:182)
	at org.eclipse.debug.internal.ui.sourcelookup.Prompter.lambda$0(Prompter.java:73)
	at org.eclipse.ui.internal.PendingSyncExec.run(PendingSyncExec.java:68)
	at org.eclipse.ui.internal.UILockListener.doPendingWork(UILockListener.java:171)
	at org.eclipse.ui.internal.UISynchronizer.lambda$0(UISynchronizer.java:139)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:185)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4005)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3633)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1158)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1047)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:658)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:557)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:154)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:150)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:137)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:107)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:657)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:594)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1447)

!ENTRY org.eclipse.ui.workbench.texteditor 4 0 2020-11-06 23:20:24.493
!MESSAGE 
!STACK 0
java.lang.NullPointerException
	at org.eclipse.ui.texteditor.AbstractTextEditor$TextEditorSavable.isDirty(AbstractTextEditor.java:7212)
	at org.eclipse.ui.internal.Workbench.getFilteredSaveables(Workbench.java:3481)
	at org.eclipse.ui.internal.Workbench.saveAll(Workbench.java:3454)
	at org.eclipse.ui.ide.IDE$1.run(IDE.java:1494)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.ui.ide.IDE.saveAllEditors(IDE.java:1482)
	at org.eclipse.debug.internal.ui.launchConfigurations.SaveScopeResourcesHandler.doSave(SaveScopeResourcesHandler.java:228)
	at org.eclipse.debug.internal.ui.launchConfigurations.SaveScopeResourcesHandler.handleStatus(SaveScopeResourcesHandler.java:182)
	at org.eclipse.debug.internal.ui.sourcelookup.Prompter.lambda$0(Prompter.java:73)
	at org.eclipse.ui.internal.PendingSyncExec.run(PendingSyncExec.java:68)
	at org.eclipse.ui.internal.UILockListener.doPendingWork(UILockListener.java:171)
	at org.eclipse.ui.internal.UISynchronizer.lambda$0(UISynchronizer.java:139)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:185)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4005)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3633)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1158)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1047)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:658)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:557)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:154)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:150)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:137)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:107)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:657)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:594)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1447)

!ENTRY org.eclipse.ui.workbench.texteditor 4 0 2020-11-06 23:21:22.034
!MESSAGE 
!STACK 0
java.lang.NullPointerException
	at org.eclipse.ui.texteditor.AbstractTextEditor$TextEditorSavable.isDirty(AbstractTextEditor.java:7212)
	at org.eclipse.ui.internal.Workbench.getFilteredSaveables(Workbench.java:3481)
	at org.eclipse.ui.internal.Workbench.saveAll(Workbench.java:3454)
	at org.eclipse.ui.ide.IDE$1.run(IDE.java:1494)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.ui.ide.IDE.saveAllEditors(IDE.java:1482)
	at org.eclipse.debug.internal.ui.launchConfigurations.SaveScopeResourcesHandler.doSave(SaveScopeResourcesHandler.java:228)
	at org.eclipse.debug.internal.ui.launchConfigurations.SaveScopeResourcesHandler.handleStatus(SaveScopeResourcesHandler.java:182)
	at org.eclipse.debug.internal.ui.sourcelookup.Prompter.lambda$0(Prompter.java:73)
	at org.eclipse.ui.internal.PendingSyncExec.run(PendingSyncExec.java:68)
	at org.eclipse.ui.internal.UILockListener.doPendingWork(UILockListener.java:171)
	at org.eclipse.ui.internal.UISynchronizer.lambda$0(UISynchronizer.java:139)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:185)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4005)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3633)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1158)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1047)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:658)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:557)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:154)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:150)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:137)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:107)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:657)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:594)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1447)

!ENTRY org.eclipse.ui.workbench.texteditor 4 0 2020-11-06 23:22:10.545
!MESSAGE 
!STACK 0
java.lang.NullPointerException
	at org.eclipse.ui.texteditor.AbstractTextEditor$TextEditorSavable.isDirty(AbstractTextEditor.java:7212)
	at org.eclipse.ui.internal.Workbench.getFilteredSaveables(Workbench.java:3481)
	at org.eclipse.ui.internal.Workbench.saveAll(Workbench.java:3454)
	at org.eclipse.ui.ide.IDE$1.run(IDE.java:1494)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.ui.ide.IDE.saveAllEditors(IDE.java:1482)
	at org.eclipse.debug.internal.ui.launchConfigurations.SaveScopeResourcesHandler.doSave(SaveScopeResourcesHandler.java:228)
	at org.eclipse.debug.internal.ui.launchConfigurations.SaveScopeResourcesHandler.handleStatus(SaveScopeResourcesHandler.java:182)
	at org.eclipse.debug.internal.ui.sourcelookup.Prompter.lambda$0(Prompter.java:73)
	at org.eclipse.ui.internal.PendingSyncExec.run(PendingSyncExec.java:68)
	at org.eclipse.ui.internal.UILockListener.doPendingWork(UILockListener.java:171)
	at org.eclipse.ui.internal.UISynchronizer.lambda$0(UISynchronizer.java:139)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:185)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4005)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3633)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1158)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1047)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:658)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:557)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:154)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:150)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:137)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:107)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:657)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:594)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1447)

!ENTRY org.eclipse.ui.workbench.texteditor 4 0 2020-11-06 23:22:32.902
!MESSAGE 
!STACK 0
java.lang.NullPointerException
	at org.eclipse.ui.texteditor.AbstractTextEditor$TextEditorSavable.isDirty(AbstractTextEditor.java:7212)
	at org.eclipse.ui.internal.Workbench.getFilteredSaveables(Workbench.java:3481)
	at org.eclipse.ui.internal.Workbench.saveAll(Workbench.java:3454)
	at org.eclipse.ui.ide.IDE$1.run(IDE.java:1494)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.ui.ide.IDE.saveAllEditors(IDE.java:1482)
	at org.eclipse.debug.internal.ui.launchConfigurations.SaveScopeResourcesHandler.doSave(SaveScopeResourcesHandler.java:228)
	at org.eclipse.debug.internal.ui.launchConfigurations.SaveScopeResourcesHandler.handleStatus(SaveScopeResourcesHandler.java:182)
	at org.eclipse.debug.internal.ui.sourcelookup.Prompter.lambda$0(Prompter.java:73)
	at org.eclipse.ui.internal.PendingSyncExec.run(PendingSyncExec.java:68)
	at org.eclipse.ui.internal.UILockListener.doPendingWork(UILockListener.java:171)
	at org.eclipse.ui.internal.UISynchronizer.lambda$0(UISynchronizer.java:139)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:185)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4005)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3633)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1158)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1047)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:658)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:557)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:154)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:150)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:137)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:107)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:657)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:594)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1447)

!ENTRY org.eclipse.ui.workbench.texteditor 4 0 2020-11-06 23:24:34.273
!MESSAGE 
!STACK 0
java.lang.NullPointerException
	at org.eclipse.ui.texteditor.AbstractTextEditor$TextEditorSavable.isDirty(AbstractTextEditor.java:7212)
	at org.eclipse.ui.internal.Workbench.getFilteredSaveables(Workbench.java:3481)
	at org.eclipse.ui.internal.Workbench.saveAll(Workbench.java:3454)
	at org.eclipse.ui.ide.IDE$1.run(IDE.java:1494)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.ui.ide.IDE.saveAllEditors(IDE.java:1482)
	at org.eclipse.debug.internal.ui.launchConfigurations.SaveScopeResourcesHandler.doSave(SaveScopeResourcesHandler.java:228)
	at org.eclipse.debug.internal.ui.launchConfigurations.SaveScopeResourcesHandler.handleStatus(SaveScopeResourcesHandler.java:182)
	at org.eclipse.debug.internal.ui.sourcelookup.Prompter.lambda$0(Prompter.java:73)
	at org.eclipse.ui.internal.PendingSyncExec.run(PendingSyncExec.java:68)
	at org.eclipse.ui.internal.UILockListener.doPendingWork(UILockListener.java:171)
	at org.eclipse.ui.internal.UISynchronizer.lambda$0(UISynchronizer.java:139)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:185)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4005)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3633)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1158)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1047)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:658)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:557)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:154)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:150)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:137)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:107)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:657)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:594)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1447)

!ENTRY org.eclipse.ui.workbench.texteditor 4 0 2020-11-06 23:25:26.763
!MESSAGE 
!STACK 0
java.lang.NullPointerException
	at org.eclipse.ui.texteditor.AbstractTextEditor$TextEditorSavable.isDirty(AbstractTextEditor.java:7212)
	at org.eclipse.ui.internal.Workbench.getFilteredSaveables(Workbench.java:3481)
	at org.eclipse.ui.internal.Workbench.saveAll(Workbench.java:3454)
	at org.eclipse.ui.ide.IDE$1.run(IDE.java:1494)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.ui.ide.IDE.saveAllEditors(IDE.java:1482)
	at org.eclipse.debug.internal.ui.launchConfigurations.SaveScopeResourcesHandler.doSave(SaveScopeResourcesHandler.java:228)
	at org.eclipse.debug.internal.ui.launchConfigurations.SaveScopeResourcesHandler.handleStatus(SaveScopeResourcesHandler.java:182)
	at org.eclipse.debug.internal.ui.sourcelookup.Prompter.lambda$0(Prompter.java:73)
	at org.eclipse.ui.internal.PendingSyncExec.run(PendingSyncExec.java:68)
	at org.eclipse.ui.internal.UILockListener.doPendingWork(UILockListener.java:171)
	at org.eclipse.ui.internal.UISynchronizer.lambda$0(UISynchronizer.java:139)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:185)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4005)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3633)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1158)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1047)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:658)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:557)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:154)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:150)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:137)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:107)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:657)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:594)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1447)

!ENTRY org.eclipse.ui.workbench.texteditor 4 0 2020-11-06 23:26:03.148
!MESSAGE 
!STACK 0
java.lang.NullPointerException
	at org.eclipse.ui.texteditor.AbstractTextEditor$TextEditorSavable.isDirty(AbstractTextEditor.java:7212)
	at org.eclipse.ui.internal.Workbench.getFilteredSaveables(Workbench.java:3481)
	at org.eclipse.ui.internal.Workbench.saveAll(Workbench.java:3454)
	at org.eclipse.ui.ide.IDE$1.run(IDE.java:1494)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.ui.ide.IDE.saveAllEditors(IDE.java:1482)
	at org.eclipse.debug.internal.ui.launchConfigurations.SaveScopeResourcesHandler.doSave(SaveScopeResourcesHandler.java:228)
	at org.eclipse.debug.internal.ui.launchConfigurations.SaveScopeResourcesHandler.handleStatus(SaveScopeResourcesHandler.java:182)
	at org.eclipse.debug.internal.ui.sourcelookup.Prompter.lambda$0(Prompter.java:73)
	at org.eclipse.ui.internal.PendingSyncExec.run(PendingSyncExec.java:68)
	at org.eclipse.ui.internal.UILockListener.doPendingWork(UILockListener.java:171)
	at org.eclipse.ui.internal.UISynchronizer.lambda$0(UISynchronizer.java:139)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:185)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4005)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3633)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1158)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1047)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:658)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:557)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:154)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:150)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:137)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:107)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:657)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:594)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1447)

!ENTRY org.eclipse.ui.workbench.texteditor 4 0 2020-11-06 23:28:15.550
!MESSAGE 
!STACK 0
java.lang.NullPointerException
	at org.eclipse.ui.texteditor.AbstractTextEditor$TextEditorSavable.isDirty(AbstractTextEditor.java:7212)
	at org.eclipse.ui.internal.Workbench.getFilteredSaveables(Workbench.java:3481)
	at org.eclipse.ui.internal.Workbench.saveAll(Workbench.java:3454)
	at org.eclipse.ui.ide.IDE$1.run(IDE.java:1494)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.ui.ide.IDE.saveAllEditors(IDE.java:1482)
	at org.eclipse.debug.internal.ui.launchConfigurations.SaveScopeResourcesHandler.doSave(SaveScopeResourcesHandler.java:228)
	at org.eclipse.debug.internal.ui.launchConfigurations.SaveScopeResourcesHandler.handleStatus(SaveScopeResourcesHandler.java:182)
	at org.eclipse.debug.internal.ui.sourcelookup.Prompter.lambda$0(Prompter.java:73)
	at org.eclipse.ui.internal.PendingSyncExec.run(PendingSyncExec.java:68)
	at org.eclipse.ui.internal.UILockListener.doPendingWork(UILockListener.java:171)
	at org.eclipse.ui.internal.UISynchronizer.lambda$0(UISynchronizer.java:139)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:185)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4005)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3633)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1158)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1047)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:658)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:557)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:154)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:150)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:137)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:107)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:657)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:594)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1447)

!ENTRY org.eclipse.ui.workbench.texteditor 4 0 2020-11-06 23:28:22.123
!MESSAGE 
!STACK 0
java.lang.NullPointerException
	at org.eclipse.ui.texteditor.AbstractTextEditor$TextEditorSavable.isDirty(AbstractTextEditor.java:7212)
	at org.eclipse.ui.internal.Workbench.getFilteredSaveables(Workbench.java:3481)
	at org.eclipse.ui.internal.Workbench.saveAll(Workbench.java:3454)
	at org.eclipse.ui.ide.IDE$1.run(IDE.java:1494)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.ui.ide.IDE.saveAllEditors(IDE.java:1482)
	at org.eclipse.debug.internal.ui.launchConfigurations.SaveScopeResourcesHandler.doSave(SaveScopeResourcesHandler.java:228)
	at org.eclipse.debug.internal.ui.launchConfigurations.SaveScopeResourcesHandler.handleStatus(SaveScopeResourcesHandler.java:182)
	at org.eclipse.debug.internal.ui.sourcelookup.Prompter.lambda$0(Prompter.java:73)
	at org.eclipse.ui.internal.PendingSyncExec.run(PendingSyncExec.java:68)
	at org.eclipse.ui.internal.UILockListener.doPendingWork(UILockListener.java:171)
	at org.eclipse.ui.internal.UISynchronizer.lambda$0(UISynchronizer.java:139)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:185)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4005)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3633)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1158)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1047)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:658)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:557)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:154)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:150)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:137)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:107)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:657)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:594)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1447)

!ENTRY org.eclipse.ui.workbench.texteditor 4 0 2020-11-06 23:30:14.071
!MESSAGE 
!STACK 0
java.lang.NullPointerException
	at org.eclipse.ui.texteditor.AbstractTextEditor$TextEditorSavable.isDirty(AbstractTextEditor.java:7212)
	at org.eclipse.ui.internal.Workbench.getFilteredSaveables(Workbench.java:3481)
	at org.eclipse.ui.internal.Workbench.saveAll(Workbench.java:3454)
	at org.eclipse.ui.ide.IDE$1.run(IDE.java:1494)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.ui.ide.IDE.saveAllEditors(IDE.java:1482)
	at org.eclipse.debug.internal.ui.launchConfigurations.SaveScopeResourcesHandler.doSave(SaveScopeResourcesHandler.java:228)
	at org.eclipse.debug.internal.ui.launchConfigurations.SaveScopeResourcesHandler.handleStatus(SaveScopeResourcesHandler.java:182)
	at org.eclipse.debug.internal.ui.sourcelookup.Prompter.lambda$0(Prompter.java:73)
	at org.eclipse.ui.internal.PendingSyncExec.run(PendingSyncExec.java:68)
	at org.eclipse.ui.internal.UILockListener.doPendingWork(UILockListener.java:171)
	at org.eclipse.ui.internal.UISynchronizer.lambda$0(UISynchronizer.java:139)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:185)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4005)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3633)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1158)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1047)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:658)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:557)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:154)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:150)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:137)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:107)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:657)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:594)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1447)

!ENTRY org.eclipse.ui.workbench.texteditor 4 0 2020-11-06 23:32:34.597
!MESSAGE 
!STACK 0
java.lang.NullPointerException
	at org.eclipse.ui.texteditor.AbstractTextEditor$TextEditorSavable.isDirty(AbstractTextEditor.java:7212)
	at org.eclipse.ui.internal.Workbench.getFilteredSaveables(Workbench.java:3481)
	at org.eclipse.ui.internal.Workbench.saveAll(Workbench.java:3454)
	at org.eclipse.ui.ide.IDE$1.run(IDE.java:1494)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.ui.ide.IDE.saveAllEditors(IDE.java:1482)
	at org.eclipse.debug.internal.ui.launchConfigurations.SaveScopeResourcesHandler.doSave(SaveScopeResourcesHandler.java:228)
	at org.eclipse.debug.internal.ui.launchConfigurations.SaveScopeResourcesHandler.handleStatus(SaveScopeResourcesHandler.java:182)
	at org.eclipse.debug.internal.ui.sourcelookup.Prompter.lambda$0(Prompter.java:73)
	at org.eclipse.ui.internal.PendingSyncExec.run(PendingSyncExec.java:68)
	at org.eclipse.ui.internal.UILockListener.doPendingWork(UILockListener.java:171)
	at org.eclipse.ui.internal.UISynchronizer.lambda$0(UISynchronizer.java:139)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:185)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4005)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3633)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1158)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1047)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:658)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:557)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:154)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:150)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:137)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:107)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:657)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:594)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1447)

!ENTRY org.eclipse.ui.workbench.texteditor 4 0 2020-11-06 23:33:00.266
!MESSAGE 
!STACK 0
java.lang.NullPointerException
	at org.eclipse.ui.texteditor.AbstractTextEditor$TextEditorSavable.isDirty(AbstractTextEditor.java:7212)
	at org.eclipse.ui.internal.Workbench.getFilteredSaveables(Workbench.java:3481)
	at org.eclipse.ui.internal.Workbench.saveAll(Workbench.java:3454)
	at org.eclipse.ui.ide.IDE$1.run(IDE.java:1494)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.ui.ide.IDE.saveAllEditors(IDE.java:1482)
	at org.eclipse.debug.internal.ui.launchConfigurations.SaveScopeResourcesHandler.doSave(SaveScopeResourcesHandler.java:228)
	at org.eclipse.debug.internal.ui.launchConfigurations.SaveScopeResourcesHandler.handleStatus(SaveScopeResourcesHandler.java:182)
	at org.eclipse.debug.internal.ui.sourcelookup.Prompter.lambda$0(Prompter.java:73)
	at org.eclipse.ui.internal.PendingSyncExec.run(PendingSyncExec.java:68)
	at org.eclipse.ui.internal.UILockListener.doPendingWork(UILockListener.java:171)
	at org.eclipse.ui.internal.UISynchronizer.lambda$0(UISynchronizer.java:139)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:185)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4005)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3633)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1158)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1047)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:658)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:557)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:154)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:150)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:137)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:107)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:657)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:594)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1447)
!SESSION 2020-11-08 11:39:23.629 -----------------------------------------------
eclipse.buildId=4.16.0.I20200604-0540
java.version=1.8.0_181
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_GB
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.jface 2 0 2020-11-08 11:39:32.079
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2020-11-08 11:39:32.079
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@1a0d313,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@13908f9c,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2020-11-08 11:39:38.012
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\osval'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2020-11-09 09:40:53.546 -----------------------------------------------
eclipse.buildId=4.16.0.I20200604-0540
java.version=1.8.0_181
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_GB
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.jface 2 0 2020-11-09 09:41:03.039
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2020-11-09 09:41:03.039
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@642c72cf,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@4e6cbdf1,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2020-11-09 09:41:09.333
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\osval'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.

!ENTRY org.eclipse.jdt.debug 4 125 2020-11-09 10:27:17.030
!MESSAGE Internal error logged from JDI Debug: 
!STACK 0
com.sun.jdi.VMDisconnectedException: Got IOException from Virtual Machine
	at org.eclipse.jdi.internal.connect.PacketSendManager.sendPacket(PacketSendManager.java:93)
	at org.eclipse.jdi.internal.MirrorImpl.requestVM(MirrorImpl.java:190)
	at org.eclipse.jdi.internal.MirrorImpl.requestVM(MirrorImpl.java:230)
	at org.eclipse.jdi.internal.MirrorImpl.requestVM(MirrorImpl.java:262)
	at org.eclipse.jdi.internal.ClassTypeImpl.superclass(ClassTypeImpl.java:309)
	at org.eclipse.jdt.internal.debug.core.model.JDIClassType.getSuperclass(JDIClassType.java:145)
	at org.eclipse.jdt.internal.debug.core.logicalstructures.JavaLogicalStructures.getLogicalStructureTypes(JavaLogicalStructures.java:297)
	at org.eclipse.debug.internal.core.LogicalStructureProvider.getLogicalStructures(LogicalStructureProvider.java:59)
	at org.eclipse.debug.internal.core.LogicalStructureManager.getLogicalStructureTypes(LogicalStructureManager.java:98)
	at org.eclipse.debug.core.DebugPlugin.getLogicalStructureTypes(DebugPlugin.java:817)
	at org.eclipse.jdt.internal.debug.ui.JDIModelPresentation.computeLogicalStructureAdornmentFlags(JDIModelPresentation.java:1171)
	at org.eclipse.jdt.internal.debug.ui.JDIModelPresentation.getVariableImage(JDIModelPresentation.java:945)
	at org.eclipse.jdt.internal.debug.ui.JDIModelPresentation.getImage(JDIModelPresentation.java:713)
	at org.eclipse.debug.internal.ui.LazyModelPresentation.getImage(LazyModelPresentation.java:129)
	at org.eclipse.debug.internal.ui.DelegatingModelPresentation.getImage(DelegatingModelPresentation.java:138)
	at org.eclipse.debug.internal.ui.views.launch.DebugElementHelper.getImageDescriptor(DebugElementHelper.java:73)
	at org.eclipse.debug.internal.ui.model.elements.DebugElementLabelProvider.getImageDescriptor(DebugElementLabelProvider.java:80)
	at org.eclipse.debug.internal.ui.model.elements.VariableLabelProvider.getImageDescriptor(VariableLabelProvider.java:67)
	at org.eclipse.debug.internal.ui.model.elements.ElementLabelProvider.getImageDescriptor(ElementLabelProvider.java:274)
	at org.eclipse.debug.internal.ui.model.elements.ElementLabelProvider.retrieveLabel(ElementLabelProvider.java:201)
	at org.eclipse.jdt.internal.debug.ui.variables.JavaVariableLabelProvider.retrieveLabel(JavaVariableLabelProvider.java:186)
	at org.eclipse.debug.internal.ui.model.elements.ElementLabelProvider$LabelUpdater.run(ElementLabelProvider.java:147)
	at org.eclipse.debug.internal.ui.model.elements.ElementLabelProvider$LabelJob.run(ElementLabelProvider.java:74)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.debug 4 125 2020-11-09 10:27:17.037
!MESSAGE Internal error logged from JDI Debug: 
!STACK 0
com.sun.jdi.VMDisconnectedException: Got IOException from Virtual Machine
	at org.eclipse.jdi.internal.connect.PacketSendManager.sendPacket(PacketSendManager.java:93)
	at org.eclipse.jdi.internal.MirrorImpl.requestVM(MirrorImpl.java:190)
	at org.eclipse.jdi.internal.MirrorImpl.requestVM(MirrorImpl.java:230)
	at org.eclipse.jdi.internal.MirrorImpl.requestVM(MirrorImpl.java:262)
	at org.eclipse.jdi.internal.ClassTypeImpl.superclass(ClassTypeImpl.java:309)
	at org.eclipse.jdt.internal.debug.core.model.JDIClassType.getSuperclass(JDIClassType.java:145)
	at org.eclipse.jdt.internal.debug.core.logicalstructures.JavaLogicalStructures.getLogicalStructureTypes(JavaLogicalStructures.java:297)
	at org.eclipse.debug.internal.core.LogicalStructureProvider.getLogicalStructures(LogicalStructureProvider.java:59)
	at org.eclipse.debug.internal.core.LogicalStructureManager.getLogicalStructureTypes(LogicalStructureManager.java:98)
	at org.eclipse.debug.core.DebugPlugin.getLogicalStructureTypes(DebugPlugin.java:817)
	at org.eclipse.jdt.internal.debug.ui.JDIModelPresentation.computeLogicalStructureAdornmentFlags(JDIModelPresentation.java:1171)
	at org.eclipse.jdt.internal.debug.ui.JDIModelPresentation.getVariableImage(JDIModelPresentation.java:945)
	at org.eclipse.jdt.internal.debug.ui.JDIModelPresentation.getImage(JDIModelPresentation.java:713)
	at org.eclipse.debug.internal.ui.LazyModelPresentation.getImage(LazyModelPresentation.java:129)
	at org.eclipse.debug.internal.ui.DelegatingModelPresentation.getImage(DelegatingModelPresentation.java:138)
	at org.eclipse.debug.internal.ui.views.launch.DebugElementHelper.getImageDescriptor(DebugElementHelper.java:73)
	at org.eclipse.debug.internal.ui.model.elements.DebugElementLabelProvider.getImageDescriptor(DebugElementLabelProvider.java:80)
	at org.eclipse.debug.internal.ui.model.elements.VariableLabelProvider.getImageDescriptor(VariableLabelProvider.java:67)
	at org.eclipse.debug.internal.ui.model.elements.ElementLabelProvider.getImageDescriptor(ElementLabelProvider.java:274)
	at org.eclipse.debug.internal.ui.model.elements.ElementLabelProvider.retrieveLabel(ElementLabelProvider.java:201)
	at org.eclipse.jdt.internal.debug.ui.variables.JavaVariableLabelProvider.retrieveLabel(JavaVariableLabelProvider.java:186)
	at org.eclipse.debug.internal.ui.model.elements.ElementLabelProvider$LabelUpdater.run(ElementLabelProvider.java:147)
	at org.eclipse.debug.internal.ui.model.elements.ElementLabelProvider$LabelJob.run(ElementLabelProvider.java:74)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.debug 4 125 2020-11-09 10:27:17.042
!MESSAGE Internal error logged from JDI Debug: 
!STACK 0
com.sun.jdi.VMDisconnectedException: Got IOException from Virtual Machine
	at org.eclipse.jdi.internal.connect.PacketSendManager.sendPacket(PacketSendManager.java:93)
	at org.eclipse.jdi.internal.MirrorImpl.requestVM(MirrorImpl.java:190)
	at org.eclipse.jdi.internal.MirrorImpl.requestVM(MirrorImpl.java:230)
	at org.eclipse.jdi.internal.MirrorImpl.requestVM(MirrorImpl.java:262)
	at org.eclipse.jdi.internal.ClassTypeImpl.superclass(ClassTypeImpl.java:309)
	at org.eclipse.jdt.internal.debug.core.model.JDIClassType.getSuperclass(JDIClassType.java:145)
	at org.eclipse.jdt.internal.debug.core.logicalstructures.JavaLogicalStructures.getLogicalStructureTypes(JavaLogicalStructures.java:297)
	at org.eclipse.debug.internal.core.LogicalStructureProvider.getLogicalStructures(LogicalStructureProvider.java:59)
	at org.eclipse.debug.internal.core.LogicalStructureManager.getLogicalStructureTypes(LogicalStructureManager.java:98)
	at org.eclipse.debug.core.DebugPlugin.getLogicalStructureTypes(DebugPlugin.java:817)
	at org.eclipse.jdt.internal.debug.ui.JDIModelPresentation.computeLogicalStructureAdornmentFlags(JDIModelPresentation.java:1171)
	at org.eclipse.jdt.internal.debug.ui.JDIModelPresentation.getVariableImage(JDIModelPresentation.java:945)
	at org.eclipse.jdt.internal.debug.ui.JDIModelPresentation.getImage(JDIModelPresentation.java:713)
	at org.eclipse.debug.internal.ui.LazyModelPresentation.getImage(LazyModelPresentation.java:129)
	at org.eclipse.debug.internal.ui.DelegatingModelPresentation.getImage(DelegatingModelPresentation.java:138)
	at org.eclipse.debug.internal.ui.views.launch.DebugElementHelper.getImageDescriptor(DebugElementHelper.java:73)
	at org.eclipse.debug.internal.ui.model.elements.DebugElementLabelProvider.getImageDescriptor(DebugElementLabelProvider.java:80)
	at org.eclipse.debug.internal.ui.model.elements.VariableLabelProvider.getImageDescriptor(VariableLabelProvider.java:67)
	at org.eclipse.debug.internal.ui.model.elements.ElementLabelProvider.getImageDescriptor(ElementLabelProvider.java:274)
	at org.eclipse.debug.internal.ui.model.elements.ElementLabelProvider.retrieveLabel(ElementLabelProvider.java:201)
	at org.eclipse.jdt.internal.debug.ui.variables.JavaVariableLabelProvider.retrieveLabel(JavaVariableLabelProvider.java:186)
	at org.eclipse.debug.internal.ui.model.elements.ElementLabelProvider$LabelUpdater.run(ElementLabelProvider.java:147)
	at org.eclipse.debug.internal.ui.model.elements.ElementLabelProvider$LabelJob.run(ElementLabelProvider.java:74)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.debug 4 125 2020-11-09 10:27:17.047
!MESSAGE Internal error logged from JDI Debug: 
!STACK 0
com.sun.jdi.VMDisconnectedException: Got IOException from Virtual Machine
	at org.eclipse.jdi.internal.connect.PacketSendManager.sendPacket(PacketSendManager.java:93)
	at org.eclipse.jdi.internal.MirrorImpl.requestVM(MirrorImpl.java:190)
	at org.eclipse.jdi.internal.MirrorImpl.requestVM(MirrorImpl.java:230)
	at org.eclipse.jdi.internal.MirrorImpl.requestVM(MirrorImpl.java:262)
	at org.eclipse.jdi.internal.ClassTypeImpl.superclass(ClassTypeImpl.java:309)
	at org.eclipse.jdt.internal.debug.core.model.JDIClassType.getSuperclass(JDIClassType.java:145)
	at org.eclipse.jdt.internal.debug.core.logicalstructures.JavaLogicalStructures.getLogicalStructureTypes(JavaLogicalStructures.java:297)
	at org.eclipse.debug.internal.core.LogicalStructureProvider.getLogicalStructures(LogicalStructureProvider.java:59)
	at org.eclipse.debug.internal.core.LogicalStructureManager.getLogicalStructureTypes(LogicalStructureManager.java:98)
	at org.eclipse.debug.core.DebugPlugin.getLogicalStructureTypes(DebugPlugin.java:817)
	at org.eclipse.jdt.internal.debug.ui.JDIModelPresentation.computeLogicalStructureAdornmentFlags(JDIModelPresentation.java:1171)
	at org.eclipse.jdt.internal.debug.ui.JDIModelPresentation.getVariableImage(JDIModelPresentation.java:945)
	at org.eclipse.jdt.internal.debug.ui.JDIModelPresentation.getImage(JDIModelPresentation.java:713)
	at org.eclipse.debug.internal.ui.LazyModelPresentation.getImage(LazyModelPresentation.java:129)
	at org.eclipse.debug.internal.ui.DelegatingModelPresentation.getImage(DelegatingModelPresentation.java:138)
	at org.eclipse.debug.internal.ui.views.launch.DebugElementHelper.getImageDescriptor(DebugElementHelper.java:73)
	at org.eclipse.debug.internal.ui.model.elements.DebugElementLabelProvider.getImageDescriptor(DebugElementLabelProvider.java:80)
	at org.eclipse.debug.internal.ui.model.elements.VariableLabelProvider.getImageDescriptor(VariableLabelProvider.java:67)
	at org.eclipse.debug.internal.ui.model.elements.ElementLabelProvider.getImageDescriptor(ElementLabelProvider.java:274)
	at org.eclipse.debug.internal.ui.model.elements.ElementLabelProvider.retrieveLabel(ElementLabelProvider.java:201)
	at org.eclipse.jdt.internal.debug.ui.variables.JavaVariableLabelProvider.retrieveLabel(JavaVariableLabelProvider.java:186)
	at org.eclipse.debug.internal.ui.model.elements.ElementLabelProvider$LabelUpdater.run(ElementLabelProvider.java:147)
	at org.eclipse.debug.internal.ui.model.elements.ElementLabelProvider$LabelJob.run(ElementLabelProvider.java:74)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.debug 4 125 2020-11-09 10:27:17.053
!MESSAGE Internal error logged from JDI Debug: 
!STACK 0
com.sun.jdi.VMDisconnectedException: Got IOException from Virtual Machine
	at org.eclipse.jdi.internal.connect.PacketSendManager.sendPacket(PacketSendManager.java:93)
	at org.eclipse.jdi.internal.MirrorImpl.requestVM(MirrorImpl.java:190)
	at org.eclipse.jdi.internal.MirrorImpl.requestVM(MirrorImpl.java:230)
	at org.eclipse.jdi.internal.MirrorImpl.requestVM(MirrorImpl.java:262)
	at org.eclipse.jdi.internal.ClassTypeImpl.superclass(ClassTypeImpl.java:309)
	at org.eclipse.jdt.internal.debug.core.model.JDIClassType.getSuperclass(JDIClassType.java:145)
	at org.eclipse.jdt.internal.debug.core.logicalstructures.JavaLogicalStructures.getLogicalStructureTypes(JavaLogicalStructures.java:297)
	at org.eclipse.debug.internal.core.LogicalStructureProvider.getLogicalStructures(LogicalStructureProvider.java:59)
	at org.eclipse.debug.internal.core.LogicalStructureManager.getLogicalStructureTypes(LogicalStructureManager.java:98)
	at org.eclipse.debug.core.DebugPlugin.getLogicalStructureTypes(DebugPlugin.java:817)
	at org.eclipse.jdt.internal.debug.ui.JDIModelPresentation.computeLogicalStructureAdornmentFlags(JDIModelPresentation.java:1171)
	at org.eclipse.jdt.internal.debug.ui.JDIModelPresentation.getVariableImage(JDIModelPresentation.java:945)
	at org.eclipse.jdt.internal.debug.ui.JDIModelPresentation.getImage(JDIModelPresentation.java:713)
	at org.eclipse.debug.internal.ui.LazyModelPresentation.getImage(LazyModelPresentation.java:129)
	at org.eclipse.debug.internal.ui.DelegatingModelPresentation.getImage(DelegatingModelPresentation.java:138)
	at org.eclipse.debug.internal.ui.views.launch.DebugElementHelper.getImageDescriptor(DebugElementHelper.java:73)
	at org.eclipse.debug.internal.ui.model.elements.DebugElementLabelProvider.getImageDescriptor(DebugElementLabelProvider.java:80)
	at org.eclipse.debug.internal.ui.model.elements.VariableLabelProvider.getImageDescriptor(VariableLabelProvider.java:67)
	at org.eclipse.debug.internal.ui.model.elements.ElementLabelProvider.getImageDescriptor(ElementLabelProvider.java:274)
	at org.eclipse.debug.internal.ui.model.elements.ElementLabelProvider.retrieveLabel(ElementLabelProvider.java:201)
	at org.eclipse.jdt.internal.debug.ui.variables.JavaVariableLabelProvider.retrieveLabel(JavaVariableLabelProvider.java:186)
	at org.eclipse.debug.internal.ui.model.elements.ElementLabelProvider$LabelUpdater.run(ElementLabelProvider.java:147)
	at org.eclipse.debug.internal.ui.model.elements.ElementLabelProvider$LabelJob.run(ElementLabelProvider.java:74)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.debug 4 125 2020-11-09 10:27:17.059
!MESSAGE Internal error logged from JDI Debug: 
!STACK 0
com.sun.jdi.VMDisconnectedException: Got IOException from Virtual Machine
	at org.eclipse.jdi.internal.connect.PacketSendManager.sendPacket(PacketSendManager.java:93)
	at org.eclipse.jdi.internal.MirrorImpl.requestVM(MirrorImpl.java:190)
	at org.eclipse.jdi.internal.MirrorImpl.requestVM(MirrorImpl.java:230)
	at org.eclipse.jdi.internal.MirrorImpl.requestVM(MirrorImpl.java:262)
	at org.eclipse.jdi.internal.ClassTypeImpl.superclass(ClassTypeImpl.java:309)
	at org.eclipse.jdt.internal.debug.core.model.JDIClassType.getSuperclass(JDIClassType.java:145)
	at org.eclipse.jdt.internal.debug.core.logicalstructures.JavaLogicalStructures.getLogicalStructureTypes(JavaLogicalStructures.java:297)
	at org.eclipse.debug.internal.core.LogicalStructureProvider.getLogicalStructures(LogicalStructureProvider.java:59)
	at org.eclipse.debug.internal.core.LogicalStructureManager.getLogicalStructureTypes(LogicalStructureManager.java:98)
	at org.eclipse.debug.core.DebugPlugin.getLogicalStructureTypes(DebugPlugin.java:817)
	at org.eclipse.jdt.internal.debug.ui.JDIModelPresentation.computeLogicalStructureAdornmentFlags(JDIModelPresentation.java:1171)
	at org.eclipse.jdt.internal.debug.ui.JDIModelPresentation.getVariableImage(JDIModelPresentation.java:945)
	at org.eclipse.jdt.internal.debug.ui.JDIModelPresentation.getImage(JDIModelPresentation.java:713)
	at org.eclipse.debug.internal.ui.LazyModelPresentation.getImage(LazyModelPresentation.java:129)
	at org.eclipse.debug.internal.ui.DelegatingModelPresentation.getImage(DelegatingModelPresentation.java:138)
	at org.eclipse.debug.internal.ui.views.launch.DebugElementHelper.getImageDescriptor(DebugElementHelper.java:73)
	at org.eclipse.debug.internal.ui.model.elements.DebugElementLabelProvider.getImageDescriptor(DebugElementLabelProvider.java:80)
	at org.eclipse.debug.internal.ui.model.elements.VariableLabelProvider.getImageDescriptor(VariableLabelProvider.java:67)
	at org.eclipse.debug.internal.ui.model.elements.ElementLabelProvider.getImageDescriptor(ElementLabelProvider.java:274)
	at org.eclipse.debug.internal.ui.model.elements.ElementLabelProvider.retrieveLabel(ElementLabelProvider.java:201)
	at org.eclipse.jdt.internal.debug.ui.variables.JavaVariableLabelProvider.retrieveLabel(JavaVariableLabelProvider.java:186)
	at org.eclipse.debug.internal.ui.model.elements.ElementLabelProvider$LabelUpdater.run(ElementLabelProvider.java:147)
	at org.eclipse.debug.internal.ui.model.elements.ElementLabelProvider$LabelJob.run(ElementLabelProvider.java:74)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.debug 4 125 2020-11-09 10:27:17.072
!MESSAGE Internal error logged from JDI Debug: 
!STACK 0
com.sun.jdi.VMDisconnectedException: Got IOException from Virtual Machine
	at org.eclipse.jdi.internal.connect.PacketSendManager.sendPacket(PacketSendManager.java:93)
	at org.eclipse.jdi.internal.MirrorImpl.requestVM(MirrorImpl.java:190)
	at org.eclipse.jdi.internal.MirrorImpl.requestVM(MirrorImpl.java:230)
	at org.eclipse.jdi.internal.MirrorImpl.requestVM(MirrorImpl.java:262)
	at org.eclipse.jdi.internal.ClassTypeImpl.superclass(ClassTypeImpl.java:309)
	at org.eclipse.jdt.internal.debug.core.model.JDIClassType.getSuperclass(JDIClassType.java:145)
	at org.eclipse.jdt.internal.debug.core.logicalstructures.JavaLogicalStructures.getLogicalStructureTypes(JavaLogicalStructures.java:297)
	at org.eclipse.debug.internal.core.LogicalStructureProvider.getLogicalStructures(LogicalStructureProvider.java:59)
	at org.eclipse.debug.internal.core.LogicalStructureManager.getLogicalStructureTypes(LogicalStructureManager.java:98)
	at org.eclipse.debug.core.DebugPlugin.getLogicalStructureTypes(DebugPlugin.java:817)
	at org.eclipse.debug.internal.ui.model.elements.VariableContentProvider.getLogicalValue(VariableContentProvider.java:212)
	at org.eclipse.debug.internal.ui.model.elements.VariableContentProvider.getLogicalValue(VariableContentProvider.java:115)
	at org.eclipse.debug.internal.ui.model.elements.VariableContentProvider.getValueChildren(VariableContentProvider.java:133)
	at org.eclipse.debug.internal.ui.model.elements.VariableContentProvider.getAllChildren(VariableContentProvider.java:78)
	at org.eclipse.jdt.internal.debug.ui.variables.JavaVariableContentProvider.getAllChildren(JavaVariableContentProvider.java:144)
	at org.eclipse.debug.internal.ui.model.elements.VariableContentProvider.getChildCount(VariableContentProvider.java:49)
	at org.eclipse.jdt.internal.debug.ui.variables.JavaVariableContentProvider.getChildCount(JavaVariableContentProvider.java:73)
	at org.eclipse.debug.internal.ui.model.elements.ElementContentProvider.retrieveChildCount(ElementContentProvider.java:126)
	at org.eclipse.debug.internal.ui.model.elements.ElementContentProvider$2.run(ElementContentProvider.java:76)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.debug 4 125 2020-11-09 10:27:17.078
!MESSAGE Internal error logged from JDI Debug: 
!STACK 0
com.sun.jdi.VMDisconnectedException: Got IOException from Virtual Machine
	at org.eclipse.jdi.internal.connect.PacketSendManager.sendPacket(PacketSendManager.java:93)
	at org.eclipse.jdi.internal.MirrorImpl.requestVM(MirrorImpl.java:190)
	at org.eclipse.jdi.internal.MirrorImpl.requestVM(MirrorImpl.java:230)
	at org.eclipse.jdi.internal.MirrorImpl.requestVM(MirrorImpl.java:262)
	at org.eclipse.jdi.internal.ClassTypeImpl.superclass(ClassTypeImpl.java:309)
	at org.eclipse.jdt.internal.debug.core.model.JDIClassType.getSuperclass(JDIClassType.java:145)
	at org.eclipse.jdt.internal.debug.core.logicalstructures.JavaLogicalStructures.getLogicalStructureTypes(JavaLogicalStructures.java:297)
	at org.eclipse.debug.internal.core.LogicalStructureProvider.getLogicalStructures(LogicalStructureProvider.java:59)
	at org.eclipse.debug.internal.core.LogicalStructureManager.getLogicalStructureTypes(LogicalStructureManager.java:98)
	at org.eclipse.debug.core.DebugPlugin.getLogicalStructureTypes(DebugPlugin.java:817)
	at org.eclipse.jdt.internal.debug.ui.JDIModelPresentation.computeLogicalStructureAdornmentFlags(JDIModelPresentation.java:1171)
	at org.eclipse.jdt.internal.debug.ui.JDIModelPresentation.getVariableImage(JDIModelPresentation.java:945)
	at org.eclipse.jdt.internal.debug.ui.JDIModelPresentation.getImage(JDIModelPresentation.java:713)
	at org.eclipse.debug.internal.ui.LazyModelPresentation.getImage(LazyModelPresentation.java:129)
	at org.eclipse.debug.internal.ui.DelegatingModelPresentation.getImage(DelegatingModelPresentation.java:138)
	at org.eclipse.debug.internal.ui.views.launch.DebugElementHelper.getImageDescriptor(DebugElementHelper.java:73)
	at org.eclipse.debug.internal.ui.model.elements.DebugElementLabelProvider.getImageDescriptor(DebugElementLabelProvider.java:80)
	at org.eclipse.debug.internal.ui.model.elements.VariableLabelProvider.getImageDescriptor(VariableLabelProvider.java:67)
	at org.eclipse.debug.internal.ui.model.elements.ElementLabelProvider.getImageDescriptor(ElementLabelProvider.java:274)
	at org.eclipse.debug.internal.ui.model.elements.ElementLabelProvider.retrieveLabel(ElementLabelProvider.java:201)
	at org.eclipse.jdt.internal.debug.ui.variables.JavaVariableLabelProvider.retrieveLabel(JavaVariableLabelProvider.java:186)
	at org.eclipse.debug.internal.ui.model.elements.ElementLabelProvider$LabelUpdater.run(ElementLabelProvider.java:147)
	at org.eclipse.debug.internal.ui.model.elements.ElementLabelProvider$LabelJob.run(ElementLabelProvider.java:74)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.debug 4 125 2020-11-09 10:27:17.084
!MESSAGE Internal error logged from JDI Debug: 
!STACK 0
com.sun.jdi.VMDisconnectedException: Got IOException from Virtual Machine
	at org.eclipse.jdi.internal.connect.PacketSendManager.sendPacket(PacketSendManager.java:93)
	at org.eclipse.jdi.internal.MirrorImpl.requestVM(MirrorImpl.java:190)
	at org.eclipse.jdi.internal.MirrorImpl.requestVM(MirrorImpl.java:230)
	at org.eclipse.jdi.internal.MirrorImpl.requestVM(MirrorImpl.java:262)
	at org.eclipse.jdi.internal.ClassTypeImpl.superclass(ClassTypeImpl.java:309)
	at org.eclipse.jdt.internal.debug.core.model.JDIClassType.getSuperclass(JDIClassType.java:145)
	at org.eclipse.jdt.internal.debug.core.logicalstructures.JavaLogicalStructures.getLogicalStructureTypes(JavaLogicalStructures.java:297)
	at org.eclipse.debug.internal.core.LogicalStructureProvider.getLogicalStructures(LogicalStructureProvider.java:59)
	at org.eclipse.debug.internal.core.LogicalStructureManager.getLogicalStructureTypes(LogicalStructureManager.java:98)
	at org.eclipse.debug.core.DebugPlugin.getLogicalStructureTypes(DebugPlugin.java:817)
	at org.eclipse.jdt.internal.debug.ui.JDIModelPresentation.computeLogicalStructureAdornmentFlags(JDIModelPresentation.java:1171)
	at org.eclipse.jdt.internal.debug.ui.JDIModelPresentation.getVariableImage(JDIModelPresentation.java:945)
	at org.eclipse.jdt.internal.debug.ui.JDIModelPresentation.getImage(JDIModelPresentation.java:713)
	at org.eclipse.debug.internal.ui.LazyModelPresentation.getImage(LazyModelPresentation.java:129)
	at org.eclipse.debug.internal.ui.DelegatingModelPresentation.getImage(DelegatingModelPresentation.java:138)
	at org.eclipse.debug.internal.ui.views.launch.DebugElementHelper.getImageDescriptor(DebugElementHelper.java:73)
	at org.eclipse.debug.internal.ui.model.elements.DebugElementLabelProvider.getImageDescriptor(DebugElementLabelProvider.java:80)
	at org.eclipse.debug.internal.ui.model.elements.VariableLabelProvider.getImageDescriptor(VariableLabelProvider.java:67)
	at org.eclipse.debug.internal.ui.model.elements.ElementLabelProvider.getImageDescriptor(ElementLabelProvider.java:274)
	at org.eclipse.debug.internal.ui.model.elements.ElementLabelProvider.retrieveLabel(ElementLabelProvider.java:201)
	at org.eclipse.jdt.internal.debug.ui.variables.JavaVariableLabelProvider.retrieveLabel(JavaVariableLabelProvider.java:186)
	at org.eclipse.debug.internal.ui.model.elements.ElementLabelProvider$LabelUpdater.run(ElementLabelProvider.java:147)
	at org.eclipse.debug.internal.ui.model.elements.ElementLabelProvider$LabelJob.run(ElementLabelProvider.java:74)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.ui.workbench.texteditor 4 0 2020-11-09 12:23:47.521
!MESSAGE 
!STACK 0
java.lang.NullPointerException
	at org.eclipse.ui.texteditor.AbstractTextEditor$TextEditorSavable.isDirty(AbstractTextEditor.java:7212)
	at org.eclipse.ui.internal.Workbench.getFilteredSaveables(Workbench.java:3481)
	at org.eclipse.ui.internal.Workbench.saveAll(Workbench.java:3454)
	at org.eclipse.ui.ide.IDE$1.run(IDE.java:1494)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.ui.ide.IDE.saveAllEditors(IDE.java:1482)
	at org.eclipse.debug.internal.ui.launchConfigurations.SaveScopeResourcesHandler.doSave(SaveScopeResourcesHandler.java:228)
	at org.eclipse.debug.internal.ui.launchConfigurations.SaveScopeResourcesHandler.handleStatus(SaveScopeResourcesHandler.java:182)
	at org.eclipse.debug.internal.ui.sourcelookup.Prompter.lambda$0(Prompter.java:73)
	at org.eclipse.ui.internal.PendingSyncExec.run(PendingSyncExec.java:68)
	at org.eclipse.ui.internal.UILockListener.doPendingWork(UILockListener.java:171)
	at org.eclipse.ui.internal.UISynchronizer.lambda$0(UISynchronizer.java:139)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:185)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4005)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3633)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1158)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1047)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:658)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:557)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:154)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:150)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:137)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:107)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:657)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:594)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1447)

!ENTRY org.eclipse.ui.workbench.texteditor 4 0 2020-11-09 12:34:19.708
!MESSAGE 
!STACK 0
java.lang.NullPointerException
	at org.eclipse.ui.texteditor.AbstractTextEditor$TextEditorSavable.isDirty(AbstractTextEditor.java:7212)
	at org.eclipse.ui.internal.Workbench.getFilteredSaveables(Workbench.java:3481)
	at org.eclipse.ui.internal.Workbench.saveAll(Workbench.java:3454)
	at org.eclipse.ui.ide.IDE$1.run(IDE.java:1494)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.ui.ide.IDE.saveAllEditors(IDE.java:1482)
	at org.eclipse.debug.internal.ui.launchConfigurations.SaveScopeResourcesHandler.doSave(SaveScopeResourcesHandler.java:228)
	at org.eclipse.debug.internal.ui.launchConfigurations.SaveScopeResourcesHandler.handleStatus(SaveScopeResourcesHandler.java:182)
	at org.eclipse.debug.internal.ui.sourcelookup.Prompter.lambda$0(Prompter.java:73)
	at org.eclipse.ui.internal.PendingSyncExec.run(PendingSyncExec.java:68)
	at org.eclipse.ui.internal.UILockListener.doPendingWork(UILockListener.java:171)
	at org.eclipse.ui.internal.UISynchronizer.lambda$0(UISynchronizer.java:139)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:185)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4005)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3633)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1158)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1047)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:658)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:557)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:154)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:150)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:137)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:107)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:657)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:594)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1447)

!ENTRY org.eclipse.ui.workbench.texteditor 4 0 2020-11-09 12:52:56.582
!MESSAGE 
!STACK 0
java.lang.NullPointerException
	at org.eclipse.ui.texteditor.AbstractTextEditor$TextEditorSavable.isDirty(AbstractTextEditor.java:7212)
	at org.eclipse.ui.internal.Workbench.getFilteredSaveables(Workbench.java:3481)
	at org.eclipse.ui.internal.Workbench.saveAll(Workbench.java:3454)
	at org.eclipse.ui.ide.IDE$1.run(IDE.java:1494)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.ui.ide.IDE.saveAllEditors(IDE.java:1482)
	at org.eclipse.debug.internal.ui.launchConfigurations.SaveScopeResourcesHandler.doSave(SaveScopeResourcesHandler.java:228)
	at org.eclipse.debug.internal.ui.launchConfigurations.SaveScopeResourcesHandler.handleStatus(SaveScopeResourcesHandler.java:182)
	at org.eclipse.debug.internal.ui.sourcelookup.Prompter.lambda$0(Prompter.java:73)
	at org.eclipse.ui.internal.PendingSyncExec.run(PendingSyncExec.java:68)
	at org.eclipse.ui.internal.UILockListener.doPendingWork(UILockListener.java:171)
	at org.eclipse.ui.internal.UISynchronizer.lambda$0(UISynchronizer.java:139)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:185)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4005)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3633)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1158)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1047)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:658)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:557)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:154)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:150)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:137)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:107)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:657)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:594)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1447)

!ENTRY org.eclipse.ui.workbench.texteditor 4 0 2020-11-09 12:54:43.158
!MESSAGE 
!STACK 0
java.lang.NullPointerException
	at org.eclipse.ui.texteditor.AbstractTextEditor$TextEditorSavable.isDirty(AbstractTextEditor.java:7212)
	at org.eclipse.ui.internal.Workbench.getFilteredSaveables(Workbench.java:3481)
	at org.eclipse.ui.internal.Workbench.saveAll(Workbench.java:3454)
	at org.eclipse.ui.ide.IDE$1.run(IDE.java:1494)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.ui.ide.IDE.saveAllEditors(IDE.java:1482)
	at org.eclipse.debug.internal.ui.launchConfigurations.SaveScopeResourcesHandler.doSave(SaveScopeResourcesHandler.java:228)
	at org.eclipse.debug.internal.ui.launchConfigurations.SaveScopeResourcesHandler.handleStatus(SaveScopeResourcesHandler.java:182)
	at org.eclipse.debug.internal.ui.sourcelookup.Prompter.lambda$0(Prompter.java:73)
	at org.eclipse.ui.internal.PendingSyncExec.run(PendingSyncExec.java:68)
	at org.eclipse.ui.internal.UILockListener.doPendingWork(UILockListener.java:171)
	at org.eclipse.ui.internal.UISynchronizer.lambda$0(UISynchronizer.java:139)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:185)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4005)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3633)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1158)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1047)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:658)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:557)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:154)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:150)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:137)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:107)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:657)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:594)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1447)

!ENTRY org.eclipse.ui.workbench.texteditor 4 0 2020-11-09 12:55:01.547
!MESSAGE 
!STACK 0
java.lang.NullPointerException
	at org.eclipse.ui.texteditor.AbstractTextEditor$TextEditorSavable.isDirty(AbstractTextEditor.java:7212)
	at org.eclipse.ui.internal.Workbench.getFilteredSaveables(Workbench.java:3481)
	at org.eclipse.ui.internal.Workbench.saveAll(Workbench.java:3454)
	at org.eclipse.ui.ide.IDE$1.run(IDE.java:1494)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.ui.ide.IDE.saveAllEditors(IDE.java:1482)
	at org.eclipse.debug.internal.ui.launchConfigurations.SaveScopeResourcesHandler.doSave(SaveScopeResourcesHandler.java:228)
	at org.eclipse.debug.internal.ui.launchConfigurations.SaveScopeResourcesHandler.handleStatus(SaveScopeResourcesHandler.java:182)
	at org.eclipse.debug.internal.ui.sourcelookup.Prompter.lambda$0(Prompter.java:73)
	at org.eclipse.ui.internal.PendingSyncExec.run(PendingSyncExec.java:68)
	at org.eclipse.ui.internal.UILockListener.doPendingWork(UILockListener.java:171)
	at org.eclipse.ui.internal.UISynchronizer.lambda$0(UISynchronizer.java:139)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:185)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4005)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3633)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1158)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1047)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:658)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:557)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:154)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:150)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:137)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:107)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:657)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:594)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1447)

!ENTRY org.eclipse.ui.workbench.texteditor 4 0 2020-11-09 12:56:07.059
!MESSAGE 
!STACK 0
java.lang.NullPointerException
	at org.eclipse.ui.texteditor.AbstractTextEditor$TextEditorSavable.isDirty(AbstractTextEditor.java:7212)
	at org.eclipse.ui.internal.Workbench.getFilteredSaveables(Workbench.java:3481)
	at org.eclipse.ui.internal.Workbench.saveAll(Workbench.java:3454)
	at org.eclipse.ui.ide.IDE$1.run(IDE.java:1494)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.ui.ide.IDE.saveAllEditors(IDE.java:1482)
	at org.eclipse.debug.internal.ui.launchConfigurations.SaveScopeResourcesHandler.doSave(SaveScopeResourcesHandler.java:228)
	at org.eclipse.debug.internal.ui.launchConfigurations.SaveScopeResourcesHandler.handleStatus(SaveScopeResourcesHandler.java:182)
	at org.eclipse.debug.internal.ui.sourcelookup.Prompter.lambda$0(Prompter.java:73)
	at org.eclipse.ui.internal.PendingSyncExec.run(PendingSyncExec.java:68)
	at org.eclipse.ui.internal.UILockListener.doPendingWork(UILockListener.java:171)
	at org.eclipse.ui.internal.UISynchronizer.lambda$0(UISynchronizer.java:139)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:185)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4005)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3633)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1158)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1047)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:658)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:557)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:154)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:150)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:137)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:107)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:657)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:594)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1447)

!ENTRY org.eclipse.ui.workbench.texteditor 4 0 2020-11-09 15:31:23.079
!MESSAGE 
!STACK 0
java.lang.NullPointerException
	at org.eclipse.ui.texteditor.AbstractTextEditor$TextEditorSavable.isDirty(AbstractTextEditor.java:7212)
	at org.eclipse.ui.internal.Workbench.getFilteredSaveables(Workbench.java:3481)
	at org.eclipse.ui.internal.Workbench.saveAll(Workbench.java:3454)
	at org.eclipse.ui.ide.IDE$1.run(IDE.java:1494)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.ui.ide.IDE.saveAllEditors(IDE.java:1482)
	at org.eclipse.debug.internal.ui.launchConfigurations.SaveScopeResourcesHandler.doSave(SaveScopeResourcesHandler.java:228)
	at org.eclipse.debug.internal.ui.launchConfigurations.SaveScopeResourcesHandler.handleStatus(SaveScopeResourcesHandler.java:182)
	at org.eclipse.debug.internal.ui.sourcelookup.Prompter.lambda$0(Prompter.java:73)
	at org.eclipse.ui.internal.PendingSyncExec.run(PendingSyncExec.java:68)
	at org.eclipse.ui.internal.UILockListener.doPendingWork(UILockListener.java:171)
	at org.eclipse.ui.internal.UISynchronizer.lambda$0(UISynchronizer.java:139)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:185)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4005)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3633)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1158)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1047)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:658)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:557)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:154)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:150)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:137)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:107)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:657)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:594)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1447)

!ENTRY org.eclipse.ui.workbench.texteditor 4 0 2020-11-09 15:33:20.610
!MESSAGE 
!STACK 0
java.lang.NullPointerException
	at org.eclipse.ui.texteditor.AbstractTextEditor$TextEditorSavable.isDirty(AbstractTextEditor.java:7212)
	at org.eclipse.ui.internal.Workbench.getFilteredSaveables(Workbench.java:3481)
	at org.eclipse.ui.internal.Workbench.saveAll(Workbench.java:3454)
	at org.eclipse.ui.ide.IDE$1.run(IDE.java:1494)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.ui.ide.IDE.saveAllEditors(IDE.java:1482)
	at org.eclipse.debug.internal.ui.launchConfigurations.SaveScopeResourcesHandler.doSave(SaveScopeResourcesHandler.java:228)
	at org.eclipse.debug.internal.ui.launchConfigurations.SaveScopeResourcesHandler.handleStatus(SaveScopeResourcesHandler.java:182)
	at org.eclipse.debug.internal.ui.sourcelookup.Prompter.lambda$0(Prompter.java:73)
	at org.eclipse.ui.internal.PendingSyncExec.run(PendingSyncExec.java:68)
	at org.eclipse.ui.internal.UILockListener.doPendingWork(UILockListener.java:171)
	at org.eclipse.ui.internal.UISynchronizer.lambda$0(UISynchronizer.java:139)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:185)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4005)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3633)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1158)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1047)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:658)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:557)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:154)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:150)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:137)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:107)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:657)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:594)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1447)

!ENTRY org.eclipse.ui.workbench.texteditor 4 0 2020-11-09 15:33:44.214
!MESSAGE 
!STACK 0
java.lang.NullPointerException
	at org.eclipse.ui.texteditor.AbstractTextEditor$TextEditorSavable.isDirty(AbstractTextEditor.java:7212)
	at org.eclipse.ui.internal.Workbench.getFilteredSaveables(Workbench.java:3481)
	at org.eclipse.ui.internal.Workbench.saveAll(Workbench.java:3454)
	at org.eclipse.ui.ide.IDE$1.run(IDE.java:1494)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.ui.ide.IDE.saveAllEditors(IDE.java:1482)
	at org.eclipse.debug.internal.ui.launchConfigurations.SaveScopeResourcesHandler.doSave(SaveScopeResourcesHandler.java:228)
	at org.eclipse.debug.internal.ui.launchConfigurations.SaveScopeResourcesHandler.handleStatus(SaveScopeResourcesHandler.java:182)
	at org.eclipse.debug.internal.ui.sourcelookup.Prompter.lambda$0(Prompter.java:73)
	at org.eclipse.ui.internal.PendingSyncExec.run(PendingSyncExec.java:68)
	at org.eclipse.ui.internal.UILockListener.doPendingWork(UILockListener.java:171)
	at org.eclipse.ui.internal.UISynchronizer.lambda$0(UISynchronizer.java:139)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:185)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4005)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3633)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1158)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1047)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:658)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:557)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:154)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:150)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:137)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:107)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:657)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:594)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1447)

!ENTRY org.eclipse.ui.workbench.texteditor 4 0 2020-11-09 15:36:39.152
!MESSAGE 
!STACK 0
java.lang.NullPointerException
	at org.eclipse.ui.texteditor.AbstractTextEditor$TextEditorSavable.isDirty(AbstractTextEditor.java:7212)
	at org.eclipse.ui.internal.Workbench.getFilteredSaveables(Workbench.java:3481)
	at org.eclipse.ui.internal.Workbench.saveAll(Workbench.java:3454)
	at org.eclipse.ui.ide.IDE$1.run(IDE.java:1494)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.ui.ide.IDE.saveAllEditors(IDE.java:1482)
	at org.eclipse.debug.internal.ui.launchConfigurations.SaveScopeResourcesHandler.doSave(SaveScopeResourcesHandler.java:228)
	at org.eclipse.debug.internal.ui.launchConfigurations.SaveScopeResourcesHandler.handleStatus(SaveScopeResourcesHandler.java:182)
	at org.eclipse.debug.internal.ui.sourcelookup.Prompter.lambda$0(Prompter.java:73)
	at org.eclipse.ui.internal.PendingSyncExec.run(PendingSyncExec.java:68)
	at org.eclipse.ui.internal.UILockListener.doPendingWork(UILockListener.java:171)
	at org.eclipse.ui.internal.UISynchronizer.lambda$0(UISynchronizer.java:139)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:185)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4005)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3633)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1158)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1047)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:658)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:557)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:154)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:150)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:137)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:107)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:657)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:594)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1447)

!ENTRY org.eclipse.ui.workbench.texteditor 4 0 2020-11-09 15:37:21.172
!MESSAGE 
!STACK 0
java.lang.NullPointerException
	at org.eclipse.ui.texteditor.AbstractTextEditor$TextEditorSavable.isDirty(AbstractTextEditor.java:7212)
	at org.eclipse.ui.internal.Workbench.getFilteredSaveables(Workbench.java:3481)
	at org.eclipse.ui.internal.Workbench.saveAll(Workbench.java:3454)
	at org.eclipse.ui.ide.IDE$1.run(IDE.java:1494)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.ui.ide.IDE.saveAllEditors(IDE.java:1482)
	at org.eclipse.debug.internal.ui.launchConfigurations.SaveScopeResourcesHandler.doSave(SaveScopeResourcesHandler.java:228)
	at org.eclipse.debug.internal.ui.launchConfigurations.SaveScopeResourcesHandler.handleStatus(SaveScopeResourcesHandler.java:182)
	at org.eclipse.debug.internal.ui.sourcelookup.Prompter.lambda$0(Prompter.java:73)
	at org.eclipse.ui.internal.PendingSyncExec.run(PendingSyncExec.java:68)
	at org.eclipse.ui.internal.UILockListener.doPendingWork(UILockListener.java:171)
	at org.eclipse.ui.internal.UISynchronizer.lambda$0(UISynchronizer.java:139)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:185)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4005)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3633)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1158)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1047)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:658)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:557)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:154)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:150)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:137)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:107)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:657)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:594)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1447)

!ENTRY org.eclipse.ui.workbench.texteditor 4 0 2020-11-09 15:52:44.747
!MESSAGE 
!STACK 0
java.lang.NullPointerException
	at org.eclipse.ui.texteditor.AbstractTextEditor$TextEditorSavable.isDirty(AbstractTextEditor.java:7212)
	at org.eclipse.ui.internal.Workbench.getFilteredSaveables(Workbench.java:3481)
	at org.eclipse.ui.internal.Workbench.saveAll(Workbench.java:3454)
	at org.eclipse.ui.ide.IDE$1.run(IDE.java:1494)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.ui.ide.IDE.saveAllEditors(IDE.java:1482)
	at org.eclipse.debug.internal.ui.launchConfigurations.SaveScopeResourcesHandler.doSave(SaveScopeResourcesHandler.java:228)
	at org.eclipse.debug.internal.ui.launchConfigurations.SaveScopeResourcesHandler.handleStatus(SaveScopeResourcesHandler.java:182)
	at org.eclipse.debug.internal.ui.sourcelookup.Prompter.lambda$0(Prompter.java:73)
	at org.eclipse.ui.internal.PendingSyncExec.run(PendingSyncExec.java:68)
	at org.eclipse.ui.internal.UILockListener.doPendingWork(UILockListener.java:171)
	at org.eclipse.ui.internal.UISynchronizer.lambda$0(UISynchronizer.java:139)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:185)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4005)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3633)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1158)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1047)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:658)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:557)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:154)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:150)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:137)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:107)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:657)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:594)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1447)

!ENTRY org.eclipse.ui.workbench.texteditor 4 0 2020-11-09 15:52:56.447
!MESSAGE 
!STACK 0
java.lang.NullPointerException
	at org.eclipse.ui.texteditor.AbstractTextEditor$TextEditorSavable.isDirty(AbstractTextEditor.java:7212)
	at org.eclipse.ui.internal.Workbench.getFilteredSaveables(Workbench.java:3481)
	at org.eclipse.ui.internal.Workbench.saveAll(Workbench.java:3454)
	at org.eclipse.ui.ide.IDE$1.run(IDE.java:1494)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.ui.ide.IDE.saveAllEditors(IDE.java:1482)
	at org.eclipse.debug.internal.ui.launchConfigurations.SaveScopeResourcesHandler.doSave(SaveScopeResourcesHandler.java:228)
	at org.eclipse.debug.internal.ui.launchConfigurations.SaveScopeResourcesHandler.handleStatus(SaveScopeResourcesHandler.java:182)
	at org.eclipse.debug.internal.ui.sourcelookup.Prompter.lambda$0(Prompter.java:73)
	at org.eclipse.ui.internal.PendingSyncExec.run(PendingSyncExec.java:68)
	at org.eclipse.ui.internal.UILockListener.doPendingWork(UILockListener.java:171)
	at org.eclipse.ui.internal.UISynchronizer.lambda$0(UISynchronizer.java:139)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:185)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4005)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3633)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1158)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1047)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:658)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:557)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:154)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:150)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:137)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:107)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:657)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:594)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1447)

!ENTRY org.eclipse.ui.workbench.texteditor 4 0 2020-11-09 16:07:07.006
!MESSAGE 
!STACK 0
java.lang.NullPointerException
	at org.eclipse.ui.texteditor.AbstractTextEditor$TextEditorSavable.isDirty(AbstractTextEditor.java:7212)
	at org.eclipse.ui.internal.Workbench.getFilteredSaveables(Workbench.java:3481)
	at org.eclipse.ui.internal.Workbench.saveAll(Workbench.java:3454)
	at org.eclipse.ui.ide.IDE$1.run(IDE.java:1494)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.ui.ide.IDE.saveAllEditors(IDE.java:1482)
	at org.eclipse.debug.internal.ui.launchConfigurations.SaveScopeResourcesHandler.doSave(SaveScopeResourcesHandler.java:228)
	at org.eclipse.debug.internal.ui.launchConfigurations.SaveScopeResourcesHandler.handleStatus(SaveScopeResourcesHandler.java:182)
	at org.eclipse.debug.internal.ui.sourcelookup.Prompter.lambda$0(Prompter.java:73)
	at org.eclipse.ui.internal.PendingSyncExec.run(PendingSyncExec.java:68)
	at org.eclipse.ui.internal.UILockListener.doPendingWork(UILockListener.java:171)
	at org.eclipse.ui.internal.UISynchronizer.lambda$0(UISynchronizer.java:139)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:185)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4005)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3633)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1158)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1047)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:658)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:557)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:154)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:150)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:137)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:107)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:657)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:594)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1447)

!ENTRY org.eclipse.ui.workbench.texteditor 4 0 2020-11-09 16:08:31.489
!MESSAGE 
!STACK 0
java.lang.NullPointerException
	at org.eclipse.ui.texteditor.AbstractTextEditor$TextEditorSavable.isDirty(AbstractTextEditor.java:7212)
	at org.eclipse.ui.internal.Workbench.getFilteredSaveables(Workbench.java:3481)
	at org.eclipse.ui.internal.Workbench.saveAll(Workbench.java:3454)
	at org.eclipse.ui.ide.IDE$1.run(IDE.java:1494)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.ui.ide.IDE.saveAllEditors(IDE.java:1482)
	at org.eclipse.debug.internal.ui.launchConfigurations.SaveScopeResourcesHandler.doSave(SaveScopeResourcesHandler.java:228)
	at org.eclipse.debug.internal.ui.launchConfigurations.SaveScopeResourcesHandler.handleStatus(SaveScopeResourcesHandler.java:182)
	at org.eclipse.debug.internal.ui.sourcelookup.Prompter.lambda$0(Prompter.java:73)
	at org.eclipse.ui.internal.PendingSyncExec.run(PendingSyncExec.java:68)
	at org.eclipse.ui.internal.UILockListener.doPendingWork(UILockListener.java:171)
	at org.eclipse.ui.internal.UISynchronizer.lambda$0(UISynchronizer.java:139)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:185)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4005)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3633)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1158)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1047)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:658)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:557)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:154)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:150)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:137)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:107)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:657)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:594)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1447)

!ENTRY org.eclipse.ui.workbench.texteditor 4 0 2020-11-09 16:15:26.143
!MESSAGE 
!STACK 0
java.lang.NullPointerException
	at org.eclipse.ui.texteditor.AbstractTextEditor$TextEditorSavable.isDirty(AbstractTextEditor.java:7212)
	at org.eclipse.ui.internal.Workbench.getFilteredSaveables(Workbench.java:3481)
	at org.eclipse.ui.internal.Workbench.saveAll(Workbench.java:3454)
	at org.eclipse.ui.ide.IDE$1.run(IDE.java:1494)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.ui.ide.IDE.saveAllEditors(IDE.java:1482)
	at org.eclipse.debug.internal.ui.launchConfigurations.SaveScopeResourcesHandler.doSave(SaveScopeResourcesHandler.java:228)
	at org.eclipse.debug.internal.ui.launchConfigurations.SaveScopeResourcesHandler.handleStatus(SaveScopeResourcesHandler.java:182)
	at org.eclipse.debug.internal.ui.sourcelookup.Prompter.lambda$0(Prompter.java:73)
	at org.eclipse.ui.internal.PendingSyncExec.run(PendingSyncExec.java:68)
	at org.eclipse.ui.internal.UILockListener.doPendingWork(UILockListener.java:171)
	at org.eclipse.ui.internal.UISynchronizer.lambda$0(UISynchronizer.java:139)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:185)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4005)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3633)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1158)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1047)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:658)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:557)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:154)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:150)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:137)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:107)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:657)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:594)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1447)

!ENTRY org.eclipse.ui.workbench.texteditor 4 0 2020-11-09 16:17:19.236
!MESSAGE 
!STACK 0
java.lang.NullPointerException
	at org.eclipse.ui.texteditor.AbstractTextEditor$TextEditorSavable.isDirty(AbstractTextEditor.java:7212)
	at org.eclipse.ui.internal.Workbench.getFilteredSaveables(Workbench.java:3481)
	at org.eclipse.ui.internal.Workbench.saveAll(Workbench.java:3454)
	at org.eclipse.ui.ide.IDE$1.run(IDE.java:1494)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.ui.ide.IDE.saveAllEditors(IDE.java:1482)
	at org.eclipse.debug.internal.ui.launchConfigurations.SaveScopeResourcesHandler.doSave(SaveScopeResourcesHandler.java:228)
	at org.eclipse.debug.internal.ui.launchConfigurations.SaveScopeResourcesHandler.handleStatus(SaveScopeResourcesHandler.java:182)
	at org.eclipse.debug.internal.ui.sourcelookup.Prompter.lambda$0(Prompter.java:73)
	at org.eclipse.ui.internal.PendingSyncExec.run(PendingSyncExec.java:68)
	at org.eclipse.ui.internal.UILockListener.doPendingWork(UILockListener.java:171)
	at org.eclipse.ui.internal.UISynchronizer.lambda$0(UISynchronizer.java:139)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:185)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4005)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3633)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1158)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1047)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:658)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:557)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:154)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:150)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:137)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:107)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:657)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:594)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1447)

!ENTRY org.eclipse.ui.workbench.texteditor 4 0 2020-11-09 16:18:06.406
!MESSAGE 
!STACK 0
java.lang.NullPointerException
	at org.eclipse.ui.texteditor.AbstractTextEditor$TextEditorSavable.isDirty(AbstractTextEditor.java:7212)
	at org.eclipse.ui.internal.Workbench.getFilteredSaveables(Workbench.java:3481)
	at org.eclipse.ui.internal.Workbench.saveAll(Workbench.java:3454)
	at org.eclipse.ui.ide.IDE$1.run(IDE.java:1494)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.ui.ide.IDE.saveAllEditors(IDE.java:1482)
	at org.eclipse.debug.internal.ui.launchConfigurations.SaveScopeResourcesHandler.doSave(SaveScopeResourcesHandler.java:228)
	at org.eclipse.debug.internal.ui.launchConfigurations.SaveScopeResourcesHandler.handleStatus(SaveScopeResourcesHandler.java:182)
	at org.eclipse.debug.internal.ui.sourcelookup.Prompter.lambda$0(Prompter.java:73)
	at org.eclipse.ui.internal.PendingSyncExec.run(PendingSyncExec.java:68)
	at org.eclipse.ui.internal.UILockListener.doPendingWork(UILockListener.java:171)
	at org.eclipse.ui.internal.UISynchronizer.lambda$0(UISynchronizer.java:139)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:185)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4005)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3633)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1158)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1047)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:658)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:557)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:154)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:150)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:137)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:107)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:657)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:594)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1447)

!ENTRY org.eclipse.ui.workbench.texteditor 4 0 2020-11-09 16:26:31.102
!MESSAGE 
!STACK 0
java.lang.NullPointerException
	at org.eclipse.ui.texteditor.AbstractTextEditor$TextEditorSavable.isDirty(AbstractTextEditor.java:7212)
	at org.eclipse.ui.internal.Workbench.getFilteredSaveables(Workbench.java:3481)
	at org.eclipse.ui.internal.Workbench.saveAll(Workbench.java:3454)
	at org.eclipse.ui.ide.IDE$1.run(IDE.java:1494)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.ui.ide.IDE.saveAllEditors(IDE.java:1482)
	at org.eclipse.debug.internal.ui.launchConfigurations.SaveScopeResourcesHandler.doSave(SaveScopeResourcesHandler.java:228)
	at org.eclipse.debug.internal.ui.launchConfigurations.SaveScopeResourcesHandler.handleStatus(SaveScopeResourcesHandler.java:182)
	at org.eclipse.debug.internal.ui.sourcelookup.Prompter.lambda$0(Prompter.java:73)
	at org.eclipse.ui.internal.PendingSyncExec.run(PendingSyncExec.java:68)
	at org.eclipse.ui.internal.UILockListener.doPendingWork(UILockListener.java:171)
	at org.eclipse.ui.internal.UISynchronizer.lambda$0(UISynchronizer.java:139)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:185)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4005)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3633)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1158)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1047)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:658)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:557)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:154)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:150)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:137)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:107)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:657)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:594)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1447)

!ENTRY org.eclipse.ui.workbench.texteditor 4 0 2020-11-09 16:30:07.434
!MESSAGE 
!STACK 0
java.lang.NullPointerException
	at org.eclipse.ui.texteditor.AbstractTextEditor$TextEditorSavable.isDirty(AbstractTextEditor.java:7212)
	at org.eclipse.ui.internal.Workbench.getFilteredSaveables(Workbench.java:3481)
	at org.eclipse.ui.internal.Workbench.saveAll(Workbench.java:3454)
	at org.eclipse.ui.ide.IDE$1.run(IDE.java:1494)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.ui.ide.IDE.saveAllEditors(IDE.java:1482)
	at org.eclipse.debug.internal.ui.launchConfigurations.SaveScopeResourcesHandler.doSave(SaveScopeResourcesHandler.java:228)
	at org.eclipse.debug.internal.ui.launchConfigurations.SaveScopeResourcesHandler.handleStatus(SaveScopeResourcesHandler.java:182)
	at org.eclipse.debug.internal.ui.sourcelookup.Prompter.lambda$0(Prompter.java:73)
	at org.eclipse.ui.internal.PendingSyncExec.run(PendingSyncExec.java:68)
	at org.eclipse.ui.internal.UILockListener.doPendingWork(UILockListener.java:171)
	at org.eclipse.ui.internal.UISynchronizer.lambda$0(UISynchronizer.java:139)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:185)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4005)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3633)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1158)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1047)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:658)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:557)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:154)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:150)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:137)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:107)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:657)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:594)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1447)

!ENTRY org.eclipse.ui.workbench.texteditor 4 0 2020-11-09 16:33:41.440
!MESSAGE 
!STACK 0
java.lang.NullPointerException
	at org.eclipse.ui.texteditor.AbstractTextEditor$TextEditorSavable.isDirty(AbstractTextEditor.java:7212)
	at org.eclipse.ui.internal.Workbench.getFilteredSaveables(Workbench.java:3481)
	at org.eclipse.ui.internal.Workbench.saveAll(Workbench.java:3454)
	at org.eclipse.ui.ide.IDE$1.run(IDE.java:1494)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.ui.ide.IDE.saveAllEditors(IDE.java:1482)
	at org.eclipse.debug.internal.ui.launchConfigurations.SaveScopeResourcesHandler.doSave(SaveScopeResourcesHandler.java:228)
	at org.eclipse.debug.internal.ui.launchConfigurations.SaveScopeResourcesHandler.handleStatus(SaveScopeResourcesHandler.java:182)
	at org.eclipse.debug.internal.ui.sourcelookup.Prompter.lambda$0(Prompter.java:73)
	at org.eclipse.ui.internal.PendingSyncExec.run(PendingSyncExec.java:68)
	at org.eclipse.ui.internal.UILockListener.doPendingWork(UILockListener.java:171)
	at org.eclipse.ui.internal.UISynchronizer.lambda$0(UISynchronizer.java:139)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:185)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4005)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3633)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1158)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1047)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:658)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:557)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:154)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:150)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:137)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:107)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:657)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:594)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1447)

!ENTRY org.eclipse.ui.workbench.texteditor 4 0 2020-11-09 16:35:05.048
!MESSAGE 
!STACK 0
java.lang.NullPointerException
	at org.eclipse.ui.texteditor.AbstractTextEditor$TextEditorSavable.isDirty(AbstractTextEditor.java:7212)
	at org.eclipse.ui.internal.Workbench.getFilteredSaveables(Workbench.java:3481)
	at org.eclipse.ui.internal.Workbench.saveAll(Workbench.java:3454)
	at org.eclipse.ui.ide.IDE$1.run(IDE.java:1494)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.ui.ide.IDE.saveAllEditors(IDE.java:1482)
	at org.eclipse.debug.internal.ui.launchConfigurations.SaveScopeResourcesHandler.doSave(SaveScopeResourcesHandler.java:228)
	at org.eclipse.debug.internal.ui.launchConfigurations.SaveScopeResourcesHandler.handleStatus(SaveScopeResourcesHandler.java:182)
	at org.eclipse.debug.internal.ui.sourcelookup.Prompter.lambda$0(Prompter.java:73)
	at org.eclipse.ui.internal.PendingSyncExec.run(PendingSyncExec.java:68)
	at org.eclipse.ui.internal.UILockListener.doPendingWork(UILockListener.java:171)
	at org.eclipse.ui.internal.UISynchronizer.lambda$0(UISynchronizer.java:139)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:185)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4005)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3633)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1158)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1047)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:658)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:557)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:154)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:150)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:137)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:107)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:657)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:594)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1447)

!ENTRY org.eclipse.ui.workbench.texteditor 4 0 2020-11-09 16:35:18.520
!MESSAGE 
!STACK 0
java.lang.NullPointerException
	at org.eclipse.ui.texteditor.AbstractTextEditor$TextEditorSavable.isDirty(AbstractTextEditor.java:7212)
	at org.eclipse.ui.internal.Workbench.getFilteredSaveables(Workbench.java:3481)
	at org.eclipse.ui.internal.Workbench.saveAll(Workbench.java:3454)
	at org.eclipse.ui.ide.IDE$1.run(IDE.java:1494)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.ui.ide.IDE.saveAllEditors(IDE.java:1482)
	at org.eclipse.debug.internal.ui.launchConfigurations.SaveScopeResourcesHandler.doSave(SaveScopeResourcesHandler.java:228)
	at org.eclipse.debug.internal.ui.launchConfigurations.SaveScopeResourcesHandler.handleStatus(SaveScopeResourcesHandler.java:182)
	at org.eclipse.debug.internal.ui.sourcelookup.Prompter.lambda$0(Prompter.java:73)
	at org.eclipse.ui.internal.PendingSyncExec.run(PendingSyncExec.java:68)
	at org.eclipse.ui.internal.UILockListener.doPendingWork(UILockListener.java:171)
	at org.eclipse.ui.internal.UISynchronizer.lambda$0(UISynchronizer.java:139)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:185)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4005)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3633)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1158)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1047)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:658)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:557)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:154)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:150)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:137)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:107)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:657)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:594)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1447)

!ENTRY org.eclipse.ui.workbench.texteditor 4 0 2020-11-09 16:35:46.523
!MESSAGE 
!STACK 0
java.lang.NullPointerException
	at org.eclipse.ui.texteditor.AbstractTextEditor$TextEditorSavable.isDirty(AbstractTextEditor.java:7212)
	at org.eclipse.ui.internal.Workbench.getFilteredSaveables(Workbench.java:3481)
	at org.eclipse.ui.internal.Workbench.saveAll(Workbench.java:3454)
	at org.eclipse.ui.ide.IDE$1.run(IDE.java:1494)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.ui.ide.IDE.saveAllEditors(IDE.java:1482)
	at org.eclipse.debug.internal.ui.launchConfigurations.SaveScopeResourcesHandler.doSave(SaveScopeResourcesHandler.java:228)
	at org.eclipse.debug.internal.ui.launchConfigurations.SaveScopeResourcesHandler.handleStatus(SaveScopeResourcesHandler.java:182)
	at org.eclipse.debug.internal.ui.sourcelookup.Prompter.lambda$0(Prompter.java:73)
	at org.eclipse.ui.internal.PendingSyncExec.run(PendingSyncExec.java:68)
	at org.eclipse.ui.internal.UILockListener.doPendingWork(UILockListener.java:171)
	at org.eclipse.ui.internal.UISynchronizer.lambda$0(UISynchronizer.java:139)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:185)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4005)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3633)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1158)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1047)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:658)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:557)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:154)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:150)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:137)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:107)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:657)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:594)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1447)

!ENTRY org.eclipse.ui.workbench.texteditor 4 0 2020-11-09 16:36:34.998
!MESSAGE 
!STACK 0
java.lang.NullPointerException
	at org.eclipse.ui.texteditor.AbstractTextEditor$TextEditorSavable.isDirty(AbstractTextEditor.java:7212)
	at org.eclipse.ui.internal.Workbench.getFilteredSaveables(Workbench.java:3481)
	at org.eclipse.ui.internal.Workbench.saveAll(Workbench.java:3454)
	at org.eclipse.ui.ide.IDE$1.run(IDE.java:1494)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.ui.ide.IDE.saveAllEditors(IDE.java:1482)
	at org.eclipse.debug.internal.ui.launchConfigurations.SaveScopeResourcesHandler.doSave(SaveScopeResourcesHandler.java:228)
	at org.eclipse.debug.internal.ui.launchConfigurations.SaveScopeResourcesHandler.handleStatus(SaveScopeResourcesHandler.java:182)
	at org.eclipse.debug.internal.ui.sourcelookup.Prompter.lambda$0(Prompter.java:73)
	at org.eclipse.ui.internal.PendingSyncExec.run(PendingSyncExec.java:68)
	at org.eclipse.ui.internal.UILockListener.doPendingWork(UILockListener.java:171)
	at org.eclipse.ui.internal.UISynchronizer.lambda$0(UISynchronizer.java:139)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:185)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4005)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3633)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1158)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1047)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:658)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:557)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:154)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:150)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:137)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:107)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:657)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:594)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1447)

!ENTRY org.eclipse.ui.workbench.texteditor 4 0 2020-11-09 16:39:02.961
!MESSAGE 
!STACK 0
java.lang.NullPointerException
	at org.eclipse.ui.texteditor.AbstractTextEditor$TextEditorSavable.isDirty(AbstractTextEditor.java:7212)
	at org.eclipse.ui.internal.Workbench.getFilteredSaveables(Workbench.java:3481)
	at org.eclipse.ui.internal.Workbench.saveAll(Workbench.java:3454)
	at org.eclipse.ui.ide.IDE$1.run(IDE.java:1494)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.ui.ide.IDE.saveAllEditors(IDE.java:1482)
	at org.eclipse.debug.internal.ui.launchConfigurations.SaveScopeResourcesHandler.doSave(SaveScopeResourcesHandler.java:228)
	at org.eclipse.debug.internal.ui.launchConfigurations.SaveScopeResourcesHandler.handleStatus(SaveScopeResourcesHandler.java:182)
	at org.eclipse.debug.internal.ui.sourcelookup.Prompter.lambda$0(Prompter.java:73)
	at org.eclipse.ui.internal.PendingSyncExec.run(PendingSyncExec.java:68)
	at org.eclipse.ui.internal.UILockListener.doPendingWork(UILockListener.java:171)
	at org.eclipse.ui.internal.UISynchronizer.lambda$0(UISynchronizer.java:139)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:185)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4005)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3633)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1158)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1047)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:658)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:557)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:154)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:150)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:137)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:107)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:657)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:594)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1447)

!ENTRY org.eclipse.ui.workbench.texteditor 4 0 2020-11-09 16:39:42.946
!MESSAGE 
!STACK 0
java.lang.NullPointerException
	at org.eclipse.ui.texteditor.AbstractTextEditor$TextEditorSavable.isDirty(AbstractTextEditor.java:7212)
	at org.eclipse.ui.internal.Workbench.getFilteredSaveables(Workbench.java:3481)
	at org.eclipse.ui.internal.Workbench.saveAll(Workbench.java:3454)
	at org.eclipse.ui.ide.IDE$1.run(IDE.java:1494)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.ui.ide.IDE.saveAllEditors(IDE.java:1482)
	at org.eclipse.debug.internal.ui.launchConfigurations.SaveScopeResourcesHandler.doSave(SaveScopeResourcesHandler.java:228)
	at org.eclipse.debug.internal.ui.launchConfigurations.SaveScopeResourcesHandler.handleStatus(SaveScopeResourcesHandler.java:182)
	at org.eclipse.debug.internal.ui.sourcelookup.Prompter.lambda$0(Prompter.java:73)
	at org.eclipse.ui.internal.PendingSyncExec.run(PendingSyncExec.java:68)
	at org.eclipse.ui.internal.UILockListener.doPendingWork(UILockListener.java:171)
	at org.eclipse.ui.internal.UISynchronizer.lambda$0(UISynchronizer.java:139)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:185)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4005)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3633)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1158)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1047)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:658)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:557)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:154)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:150)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:137)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:107)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:657)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:594)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1447)

!ENTRY org.eclipse.ui.workbench.texteditor 4 0 2020-11-09 16:42:46.891
!MESSAGE 
!STACK 0
java.lang.NullPointerException
	at org.eclipse.ui.texteditor.AbstractTextEditor$TextEditorSavable.isDirty(AbstractTextEditor.java:7212)
	at org.eclipse.ui.internal.Workbench.getFilteredSaveables(Workbench.java:3481)
	at org.eclipse.ui.internal.Workbench.saveAll(Workbench.java:3454)
	at org.eclipse.ui.ide.IDE$1.run(IDE.java:1494)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.ui.ide.IDE.saveAllEditors(IDE.java:1482)
	at org.eclipse.debug.internal.ui.launchConfigurations.SaveScopeResourcesHandler.doSave(SaveScopeResourcesHandler.java:228)
	at org.eclipse.debug.internal.ui.launchConfigurations.SaveScopeResourcesHandler.handleStatus(SaveScopeResourcesHandler.java:182)
	at org.eclipse.debug.internal.ui.sourcelookup.Prompter.lambda$0(Prompter.java:73)
	at org.eclipse.ui.internal.PendingSyncExec.run(PendingSyncExec.java:68)
	at org.eclipse.ui.internal.UILockListener.doPendingWork(UILockListener.java:171)
	at org.eclipse.ui.internal.UISynchronizer.lambda$0(UISynchronizer.java:139)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:185)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4005)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3633)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1158)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1047)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:658)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:557)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:154)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:150)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:137)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:107)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:657)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:594)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1447)

!ENTRY org.eclipse.ui.workbench.texteditor 4 0 2020-11-09 16:44:37.221
!MESSAGE 
!STACK 0
java.lang.NullPointerException
	at org.eclipse.ui.texteditor.AbstractTextEditor$TextEditorSavable.isDirty(AbstractTextEditor.java:7212)
	at org.eclipse.ui.internal.Workbench.getFilteredSaveables(Workbench.java:3481)
	at org.eclipse.ui.internal.Workbench.saveAll(Workbench.java:3454)
	at org.eclipse.ui.ide.IDE$1.run(IDE.java:1494)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.ui.ide.IDE.saveAllEditors(IDE.java:1482)
	at org.eclipse.debug.internal.ui.launchConfigurations.SaveScopeResourcesHandler.doSave(SaveScopeResourcesHandler.java:228)
	at org.eclipse.debug.internal.ui.launchConfigurations.SaveScopeResourcesHandler.handleStatus(SaveScopeResourcesHandler.java:182)
	at org.eclipse.debug.internal.ui.sourcelookup.Prompter.lambda$0(Prompter.java:73)
	at org.eclipse.ui.internal.PendingSyncExec.run(PendingSyncExec.java:68)
	at org.eclipse.ui.internal.UILockListener.doPendingWork(UILockListener.java:171)
	at org.eclipse.ui.internal.UISynchronizer.lambda$0(UISynchronizer.java:139)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:185)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4005)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3633)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1158)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1047)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:658)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:557)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:154)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:150)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:137)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:107)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:657)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:594)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1447)

!ENTRY org.eclipse.ui.workbench.texteditor 4 0 2020-11-09 16:48:08.381
!MESSAGE 
!STACK 0
java.lang.NullPointerException
	at org.eclipse.ui.texteditor.AbstractTextEditor$TextEditorSavable.isDirty(AbstractTextEditor.java:7212)
	at org.eclipse.ui.internal.Workbench.getFilteredSaveables(Workbench.java:3481)
	at org.eclipse.ui.internal.Workbench.saveAll(Workbench.java:3454)
	at org.eclipse.ui.ide.IDE$1.run(IDE.java:1494)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.ui.ide.IDE.saveAllEditors(IDE.java:1482)
	at org.eclipse.debug.internal.ui.launchConfigurations.SaveScopeResourcesHandler.doSave(SaveScopeResourcesHandler.java:228)
	at org.eclipse.debug.internal.ui.launchConfigurations.SaveScopeResourcesHandler.handleStatus(SaveScopeResourcesHandler.java:182)
	at org.eclipse.debug.internal.ui.sourcelookup.Prompter.lambda$0(Prompter.java:73)
	at org.eclipse.ui.internal.PendingSyncExec.run(PendingSyncExec.java:68)
	at org.eclipse.ui.internal.UILockListener.doPendingWork(UILockListener.java:171)
	at org.eclipse.ui.internal.UISynchronizer.lambda$0(UISynchronizer.java:139)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:185)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4005)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3633)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1158)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1047)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:658)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:557)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:154)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:150)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:137)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:107)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:657)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:594)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1447)

!ENTRY org.eclipse.ui.workbench.texteditor 4 0 2020-11-09 16:48:59.602
!MESSAGE 
!STACK 0
java.lang.NullPointerException
	at org.eclipse.ui.texteditor.AbstractTextEditor$TextEditorSavable.isDirty(AbstractTextEditor.java:7212)
	at org.eclipse.ui.internal.Workbench.getFilteredSaveables(Workbench.java:3481)
	at org.eclipse.ui.internal.Workbench.saveAll(Workbench.java:3454)
	at org.eclipse.ui.ide.IDE$1.run(IDE.java:1494)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.ui.ide.IDE.saveAllEditors(IDE.java:1482)
	at org.eclipse.debug.internal.ui.launchConfigurations.SaveScopeResourcesHandler.doSave(SaveScopeResourcesHandler.java:228)
	at org.eclipse.debug.internal.ui.launchConfigurations.SaveScopeResourcesHandler.handleStatus(SaveScopeResourcesHandler.java:182)
	at org.eclipse.debug.internal.ui.sourcelookup.Prompter.lambda$0(Prompter.java:73)
	at org.eclipse.ui.internal.PendingSyncExec.run(PendingSyncExec.java:68)
	at org.eclipse.ui.internal.UILockListener.doPendingWork(UILockListener.java:171)
	at org.eclipse.ui.internal.UISynchronizer.lambda$0(UISynchronizer.java:139)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:185)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4005)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3633)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1158)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1047)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:658)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:557)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:154)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:150)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:137)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:107)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:657)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:594)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1447)

!ENTRY org.eclipse.ui.workbench.texteditor 4 0 2020-11-09 16:49:52.131
!MESSAGE 
!STACK 0
java.lang.NullPointerException
	at org.eclipse.ui.texteditor.AbstractTextEditor$TextEditorSavable.isDirty(AbstractTextEditor.java:7212)
	at org.eclipse.ui.internal.Workbench.getFilteredSaveables(Workbench.java:3481)
	at org.eclipse.ui.internal.Workbench.saveAll(Workbench.java:3454)
	at org.eclipse.ui.ide.IDE$1.run(IDE.java:1494)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.ui.ide.IDE.saveAllEditors(IDE.java:1482)
	at org.eclipse.debug.internal.ui.launchConfigurations.SaveScopeResourcesHandler.doSave(SaveScopeResourcesHandler.java:228)
	at org.eclipse.debug.internal.ui.launchConfigurations.SaveScopeResourcesHandler.handleStatus(SaveScopeResourcesHandler.java:182)
	at org.eclipse.debug.internal.ui.sourcelookup.Prompter.lambda$0(Prompter.java:73)
	at org.eclipse.ui.internal.PendingSyncExec.run(PendingSyncExec.java:68)
	at org.eclipse.ui.internal.UILockListener.doPendingWork(UILockListener.java:171)
	at org.eclipse.ui.internal.UISynchronizer.lambda$0(UISynchronizer.java:139)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:185)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4005)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3633)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1158)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1047)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:658)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:557)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:154)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:150)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:137)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:107)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:657)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:594)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1447)

!ENTRY org.eclipse.ui.workbench.texteditor 4 0 2020-11-09 16:50:15.184
!MESSAGE 
!STACK 0
java.lang.NullPointerException
	at org.eclipse.ui.texteditor.AbstractTextEditor$TextEditorSavable.isDirty(AbstractTextEditor.java:7212)
	at org.eclipse.ui.internal.Workbench.getFilteredSaveables(Workbench.java:3481)
	at org.eclipse.ui.internal.Workbench.saveAll(Workbench.java:3454)
	at org.eclipse.ui.ide.IDE$1.run(IDE.java:1494)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.ui.ide.IDE.saveAllEditors(IDE.java:1482)
	at org.eclipse.debug.internal.ui.launchConfigurations.SaveScopeResourcesHandler.doSave(SaveScopeResourcesHandler.java:228)
	at org.eclipse.debug.internal.ui.launchConfigurations.SaveScopeResourcesHandler.handleStatus(SaveScopeResourcesHandler.java:182)
	at org.eclipse.debug.internal.ui.sourcelookup.Prompter.lambda$0(Prompter.java:73)
	at org.eclipse.ui.internal.PendingSyncExec.run(PendingSyncExec.java:68)
	at org.eclipse.ui.internal.UILockListener.doPendingWork(UILockListener.java:171)
	at org.eclipse.ui.internal.UISynchronizer.lambda$0(UISynchronizer.java:139)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:185)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4005)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3633)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1158)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1047)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:658)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:557)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:154)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:150)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:137)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:107)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:657)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:594)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1447)

!ENTRY org.eclipse.ui.workbench.texteditor 4 0 2020-11-09 16:50:47.969
!MESSAGE 
!STACK 0
java.lang.NullPointerException
	at org.eclipse.ui.texteditor.AbstractTextEditor$TextEditorSavable.isDirty(AbstractTextEditor.java:7212)
	at org.eclipse.ui.internal.Workbench.getFilteredSaveables(Workbench.java:3481)
	at org.eclipse.ui.internal.Workbench.saveAll(Workbench.java:3454)
	at org.eclipse.ui.ide.IDE$1.run(IDE.java:1494)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.ui.ide.IDE.saveAllEditors(IDE.java:1482)
	at org.eclipse.debug.internal.ui.launchConfigurations.SaveScopeResourcesHandler.doSave(SaveScopeResourcesHandler.java:228)
	at org.eclipse.debug.internal.ui.launchConfigurations.SaveScopeResourcesHandler.handleStatus(SaveScopeResourcesHandler.java:182)
	at org.eclipse.debug.internal.ui.sourcelookup.Prompter.lambda$0(Prompter.java:73)
	at org.eclipse.ui.internal.PendingSyncExec.run(PendingSyncExec.java:68)
	at org.eclipse.ui.internal.UILockListener.doPendingWork(UILockListener.java:171)
	at org.eclipse.ui.internal.UISynchronizer.lambda$0(UISynchronizer.java:139)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:185)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4005)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3633)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1158)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1047)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:658)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:557)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:154)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:150)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:137)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:107)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:657)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:594)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1447)

!ENTRY org.eclipse.ui.workbench.texteditor 4 0 2020-11-09 16:50:58.438
!MESSAGE 
!STACK 0
java.lang.NullPointerException
	at org.eclipse.ui.texteditor.AbstractTextEditor$TextEditorSavable.isDirty(AbstractTextEditor.java:7212)
	at org.eclipse.ui.internal.Workbench.getFilteredSaveables(Workbench.java:3481)
	at org.eclipse.ui.internal.Workbench.saveAll(Workbench.java:3454)
	at org.eclipse.ui.ide.IDE$1.run(IDE.java:1494)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.ui.ide.IDE.saveAllEditors(IDE.java:1482)
	at org.eclipse.debug.internal.ui.launchConfigurations.SaveScopeResourcesHandler.doSave(SaveScopeResourcesHandler.java:228)
	at org.eclipse.debug.internal.ui.launchConfigurations.SaveScopeResourcesHandler.handleStatus(SaveScopeResourcesHandler.java:182)
	at org.eclipse.debug.internal.ui.sourcelookup.Prompter.lambda$0(Prompter.java:73)
	at org.eclipse.ui.internal.PendingSyncExec.run(PendingSyncExec.java:68)
	at org.eclipse.ui.internal.UILockListener.doPendingWork(UILockListener.java:171)
	at org.eclipse.ui.internal.UISynchronizer.lambda$0(UISynchronizer.java:139)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:185)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4005)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3633)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1158)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1047)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:658)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:557)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:154)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:150)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:137)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:107)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:657)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:594)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1447)

!ENTRY org.eclipse.ui.workbench.texteditor 4 0 2020-11-09 16:53:47.679
!MESSAGE 
!STACK 0
java.lang.NullPointerException
	at org.eclipse.ui.texteditor.AbstractTextEditor$TextEditorSavable.isDirty(AbstractTextEditor.java:7212)
	at org.eclipse.ui.internal.Workbench.getFilteredSaveables(Workbench.java:3481)
	at org.eclipse.ui.internal.Workbench.saveAll(Workbench.java:3454)
	at org.eclipse.ui.ide.IDE$1.run(IDE.java:1494)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.ui.ide.IDE.saveAllEditors(IDE.java:1482)
	at org.eclipse.debug.internal.ui.launchConfigurations.SaveScopeResourcesHandler.doSave(SaveScopeResourcesHandler.java:228)
	at org.eclipse.debug.internal.ui.launchConfigurations.SaveScopeResourcesHandler.handleStatus(SaveScopeResourcesHandler.java:182)
	at org.eclipse.debug.internal.ui.sourcelookup.Prompter.lambda$0(Prompter.java:73)
	at org.eclipse.ui.internal.PendingSyncExec.run(PendingSyncExec.java:68)
	at org.eclipse.ui.internal.UILockListener.doPendingWork(UILockListener.java:171)
	at org.eclipse.ui.internal.UISynchronizer.lambda$0(UISynchronizer.java:139)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:185)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4005)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3633)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1158)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1047)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:658)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:557)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:154)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:150)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:137)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:107)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:657)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:594)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1447)

!ENTRY org.eclipse.ui.workbench.texteditor 4 0 2020-11-09 16:54:21.852
!MESSAGE 
!STACK 0
java.lang.NullPointerException
	at org.eclipse.ui.texteditor.AbstractTextEditor$TextEditorSavable.isDirty(AbstractTextEditor.java:7212)
	at org.eclipse.ui.internal.Workbench.getFilteredSaveables(Workbench.java:3481)
	at org.eclipse.ui.internal.Workbench.saveAll(Workbench.java:3454)
	at org.eclipse.ui.ide.IDE$1.run(IDE.java:1494)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.ui.ide.IDE.saveAllEditors(IDE.java:1482)
	at org.eclipse.debug.internal.ui.launchConfigurations.SaveScopeResourcesHandler.doSave(SaveScopeResourcesHandler.java:228)
	at org.eclipse.debug.internal.ui.launchConfigurations.SaveScopeResourcesHandler.handleStatus(SaveScopeResourcesHandler.java:182)
	at org.eclipse.debug.internal.ui.sourcelookup.Prompter.lambda$0(Prompter.java:73)
	at org.eclipse.ui.internal.PendingSyncExec.run(PendingSyncExec.java:68)
	at org.eclipse.ui.internal.UILockListener.doPendingWork(UILockListener.java:171)
	at org.eclipse.ui.internal.UISynchronizer.lambda$0(UISynchronizer.java:139)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:185)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4005)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3633)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1158)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1047)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:658)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:557)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:154)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:150)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:137)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:107)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:657)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:594)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1447)

!ENTRY org.eclipse.ui.workbench.texteditor 4 0 2020-11-09 16:54:38.781
!MESSAGE 
!STACK 0
java.lang.NullPointerException
	at org.eclipse.ui.texteditor.AbstractTextEditor$TextEditorSavable.isDirty(AbstractTextEditor.java:7212)
	at org.eclipse.ui.internal.Workbench.getFilteredSaveables(Workbench.java:3481)
	at org.eclipse.ui.internal.Workbench.saveAll(Workbench.java:3454)
	at org.eclipse.ui.ide.IDE$1.run(IDE.java:1494)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.ui.ide.IDE.saveAllEditors(IDE.java:1482)
	at org.eclipse.debug.internal.ui.launchConfigurations.SaveScopeResourcesHandler.doSave(SaveScopeResourcesHandler.java:228)
	at org.eclipse.debug.internal.ui.launchConfigurations.SaveScopeResourcesHandler.handleStatus(SaveScopeResourcesHandler.java:182)
	at org.eclipse.debug.internal.ui.sourcelookup.Prompter.lambda$0(Prompter.java:73)
	at org.eclipse.ui.internal.PendingSyncExec.run(PendingSyncExec.java:68)
	at org.eclipse.ui.internal.UILockListener.doPendingWork(UILockListener.java:171)
	at org.eclipse.ui.internal.UISynchronizer.lambda$0(UISynchronizer.java:139)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:185)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4005)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3633)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1158)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1047)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:658)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:557)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:154)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:150)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:137)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:107)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:657)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:594)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1447)

!ENTRY org.eclipse.ui.workbench.texteditor 4 0 2020-11-09 16:59:51.938
!MESSAGE 
!STACK 0
java.lang.NullPointerException
	at org.eclipse.ui.texteditor.AbstractTextEditor$TextEditorSavable.isDirty(AbstractTextEditor.java:7212)
	at org.eclipse.ui.internal.Workbench.getFilteredSaveables(Workbench.java:3481)
	at org.eclipse.ui.internal.Workbench.saveAll(Workbench.java:3454)
	at org.eclipse.ui.ide.IDE$1.run(IDE.java:1494)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.ui.ide.IDE.saveAllEditors(IDE.java:1482)
	at org.eclipse.debug.internal.ui.launchConfigurations.SaveScopeResourcesHandler.doSave(SaveScopeResourcesHandler.java:228)
	at org.eclipse.debug.internal.ui.launchConfigurations.SaveScopeResourcesHandler.handleStatus(SaveScopeResourcesHandler.java:182)
	at org.eclipse.debug.internal.ui.sourcelookup.Prompter.lambda$0(Prompter.java:73)
	at org.eclipse.ui.internal.PendingSyncExec.run(PendingSyncExec.java:68)
	at org.eclipse.ui.internal.UILockListener.doPendingWork(UILockListener.java:171)
	at org.eclipse.ui.internal.UISynchronizer.lambda$0(UISynchronizer.java:139)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:185)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4005)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3633)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1158)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1047)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:658)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:557)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:154)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:150)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:137)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:107)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:657)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:594)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1447)

!ENTRY org.eclipse.ui.workbench.texteditor 4 0 2020-11-09 17:00:05.157
!MESSAGE 
!STACK 0
java.lang.NullPointerException
	at org.eclipse.ui.texteditor.AbstractTextEditor$TextEditorSavable.isDirty(AbstractTextEditor.java:7212)
	at org.eclipse.ui.internal.Workbench.getFilteredSaveables(Workbench.java:3481)
	at org.eclipse.ui.internal.Workbench.saveAll(Workbench.java:3454)
	at org.eclipse.ui.ide.IDE$1.run(IDE.java:1494)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.ui.ide.IDE.saveAllEditors(IDE.java:1482)
	at org.eclipse.debug.internal.ui.launchConfigurations.SaveScopeResourcesHandler.doSave(SaveScopeResourcesHandler.java:228)
	at org.eclipse.debug.internal.ui.launchConfigurations.SaveScopeResourcesHandler.handleStatus(SaveScopeResourcesHandler.java:182)
	at org.eclipse.debug.internal.ui.sourcelookup.Prompter.lambda$0(Prompter.java:73)
	at org.eclipse.ui.internal.PendingSyncExec.run(PendingSyncExec.java:68)
	at org.eclipse.ui.internal.UILockListener.doPendingWork(UILockListener.java:171)
	at org.eclipse.ui.internal.UISynchronizer.lambda$0(UISynchronizer.java:139)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:185)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4005)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3633)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1158)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1047)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:658)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:557)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:154)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:150)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:137)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:107)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:657)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:594)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1447)

!ENTRY org.eclipse.ui.workbench.texteditor 4 0 2020-11-09 17:00:38.780
!MESSAGE 
!STACK 0
java.lang.NullPointerException
	at org.eclipse.ui.texteditor.AbstractTextEditor$TextEditorSavable.isDirty(AbstractTextEditor.java:7212)
	at org.eclipse.ui.internal.Workbench.getFilteredSaveables(Workbench.java:3481)
	at org.eclipse.ui.internal.Workbench.saveAll(Workbench.java:3454)
	at org.eclipse.ui.ide.IDE$1.run(IDE.java:1494)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.ui.ide.IDE.saveAllEditors(IDE.java:1482)
	at org.eclipse.debug.internal.ui.launchConfigurations.SaveScopeResourcesHandler.doSave(SaveScopeResourcesHandler.java:228)
	at org.eclipse.debug.internal.ui.launchConfigurations.SaveScopeResourcesHandler.handleStatus(SaveScopeResourcesHandler.java:182)
	at org.eclipse.debug.internal.ui.sourcelookup.Prompter.lambda$0(Prompter.java:73)
	at org.eclipse.ui.internal.PendingSyncExec.run(PendingSyncExec.java:68)
	at org.eclipse.ui.internal.UILockListener.doPendingWork(UILockListener.java:171)
	at org.eclipse.ui.internal.UISynchronizer.lambda$0(UISynchronizer.java:139)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:185)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4005)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3633)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1158)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1047)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:658)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:557)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:154)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:150)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:137)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:107)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:657)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:594)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1447)

!ENTRY org.eclipse.ui.workbench.texteditor 4 0 2020-11-09 17:00:52.613
!MESSAGE 
!STACK 0
java.lang.NullPointerException
	at org.eclipse.ui.texteditor.AbstractTextEditor$TextEditorSavable.isDirty(AbstractTextEditor.java:7212)
	at org.eclipse.ui.internal.Workbench.getFilteredSaveables(Workbench.java:3481)
	at org.eclipse.ui.internal.Workbench.saveAll(Workbench.java:3454)
	at org.eclipse.ui.ide.IDE$1.run(IDE.java:1494)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.ui.ide.IDE.saveAllEditors(IDE.java:1482)
	at org.eclipse.debug.internal.ui.launchConfigurations.SaveScopeResourcesHandler.doSave(SaveScopeResourcesHandler.java:228)
	at org.eclipse.debug.internal.ui.launchConfigurations.SaveScopeResourcesHandler.handleStatus(SaveScopeResourcesHandler.java:182)
	at org.eclipse.debug.internal.ui.sourcelookup.Prompter.lambda$0(Prompter.java:73)
	at org.eclipse.ui.internal.PendingSyncExec.run(PendingSyncExec.java:68)
	at org.eclipse.ui.internal.UILockListener.doPendingWork(UILockListener.java:171)
	at org.eclipse.ui.internal.UISynchronizer.lambda$0(UISynchronizer.java:139)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:185)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4005)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3633)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1158)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1047)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:658)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:557)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:154)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:150)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:137)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:107)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:657)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:594)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1447)

!ENTRY org.eclipse.ui.workbench.texteditor 4 0 2020-11-09 17:01:52.846
!MESSAGE 
!STACK 0
java.lang.NullPointerException
	at org.eclipse.ui.texteditor.AbstractTextEditor$TextEditorSavable.isDirty(AbstractTextEditor.java:7212)
	at org.eclipse.ui.internal.Workbench.getFilteredSaveables(Workbench.java:3481)
	at org.eclipse.ui.internal.Workbench.saveAll(Workbench.java:3454)
	at org.eclipse.ui.ide.IDE$1.run(IDE.java:1494)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.ui.ide.IDE.saveAllEditors(IDE.java:1482)
	at org.eclipse.debug.internal.ui.launchConfigurations.SaveScopeResourcesHandler.doSave(SaveScopeResourcesHandler.java:228)
	at org.eclipse.debug.internal.ui.launchConfigurations.SaveScopeResourcesHandler.handleStatus(SaveScopeResourcesHandler.java:182)
	at org.eclipse.debug.internal.ui.sourcelookup.Prompter.lambda$0(Prompter.java:73)
	at org.eclipse.ui.internal.PendingSyncExec.run(PendingSyncExec.java:68)
	at org.eclipse.ui.internal.UILockListener.doPendingWork(UILockListener.java:171)
	at org.eclipse.ui.internal.UISynchronizer.lambda$0(UISynchronizer.java:139)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:185)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4005)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3633)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1158)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1047)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:658)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:557)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:154)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:150)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:137)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:107)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:657)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:594)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1447)

!ENTRY org.eclipse.ui.workbench.texteditor 4 0 2020-11-09 17:02:27.054
!MESSAGE 
!STACK 0
java.lang.NullPointerException
	at org.eclipse.ui.texteditor.AbstractTextEditor$TextEditorSavable.isDirty(AbstractTextEditor.java:7212)
	at org.eclipse.ui.internal.Workbench.getFilteredSaveables(Workbench.java:3481)
	at org.eclipse.ui.internal.Workbench.saveAll(Workbench.java:3454)
	at org.eclipse.ui.ide.IDE$1.run(IDE.java:1494)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.ui.ide.IDE.saveAllEditors(IDE.java:1482)
	at org.eclipse.debug.internal.ui.launchConfigurations.SaveScopeResourcesHandler.doSave(SaveScopeResourcesHandler.java:228)
	at org.eclipse.debug.internal.ui.launchConfigurations.SaveScopeResourcesHandler.handleStatus(SaveScopeResourcesHandler.java:182)
	at org.eclipse.debug.internal.ui.sourcelookup.Prompter.lambda$0(Prompter.java:73)
	at org.eclipse.ui.internal.PendingSyncExec.run(PendingSyncExec.java:68)
	at org.eclipse.ui.internal.UILockListener.doPendingWork(UILockListener.java:171)
	at org.eclipse.ui.internal.UISynchronizer.lambda$0(UISynchronizer.java:139)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:185)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4005)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3633)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1158)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1047)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:658)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:557)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:154)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:150)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:137)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:107)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:657)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:594)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1447)

!ENTRY org.eclipse.ui.workbench.texteditor 4 0 2020-11-09 17:03:19.073
!MESSAGE 
!STACK 0
java.lang.NullPointerException
	at org.eclipse.ui.texteditor.AbstractTextEditor$TextEditorSavable.isDirty(AbstractTextEditor.java:7212)
	at org.eclipse.ui.internal.Workbench.getFilteredSaveables(Workbench.java:3481)
	at org.eclipse.ui.internal.Workbench.saveAll(Workbench.java:3454)
	at org.eclipse.ui.ide.IDE$1.run(IDE.java:1494)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.ui.ide.IDE.saveAllEditors(IDE.java:1482)
	at org.eclipse.debug.internal.ui.launchConfigurations.SaveScopeResourcesHandler.doSave(SaveScopeResourcesHandler.java:228)
	at org.eclipse.debug.internal.ui.launchConfigurations.SaveScopeResourcesHandler.handleStatus(SaveScopeResourcesHandler.java:182)
	at org.eclipse.debug.internal.ui.sourcelookup.Prompter.lambda$0(Prompter.java:73)
	at org.eclipse.ui.internal.PendingSyncExec.run(PendingSyncExec.java:68)
	at org.eclipse.ui.internal.UILockListener.doPendingWork(UILockListener.java:171)
	at org.eclipse.ui.internal.UISynchronizer.lambda$0(UISynchronizer.java:139)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:185)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4005)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3633)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1158)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1047)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:658)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:557)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:154)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:150)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:137)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:107)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:657)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:594)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1447)

!ENTRY org.eclipse.ui.workbench.texteditor 4 0 2020-11-09 17:04:02.908
!MESSAGE 
!STACK 0
java.lang.NullPointerException
	at org.eclipse.ui.texteditor.AbstractTextEditor$TextEditorSavable.isDirty(AbstractTextEditor.java:7212)
	at org.eclipse.ui.internal.Workbench.getFilteredSaveables(Workbench.java:3481)
	at org.eclipse.ui.internal.Workbench.saveAll(Workbench.java:3454)
	at org.eclipse.ui.ide.IDE$1.run(IDE.java:1494)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.ui.ide.IDE.saveAllEditors(IDE.java:1482)
	at org.eclipse.debug.internal.ui.launchConfigurations.SaveScopeResourcesHandler.doSave(SaveScopeResourcesHandler.java:228)
	at org.eclipse.debug.internal.ui.launchConfigurations.SaveScopeResourcesHandler.handleStatus(SaveScopeResourcesHandler.java:182)
	at org.eclipse.debug.internal.ui.sourcelookup.Prompter.lambda$0(Prompter.java:73)
	at org.eclipse.ui.internal.PendingSyncExec.run(PendingSyncExec.java:68)
	at org.eclipse.ui.internal.UILockListener.doPendingWork(UILockListener.java:171)
	at org.eclipse.ui.internal.UISynchronizer.lambda$0(UISynchronizer.java:139)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:185)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4005)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3633)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1158)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1047)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:658)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:557)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:154)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:150)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:137)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:107)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:657)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:594)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1447)

!ENTRY org.eclipse.ui.workbench.texteditor 4 0 2020-11-09 17:04:33.950
!MESSAGE 
!STACK 0
java.lang.NullPointerException
	at org.eclipse.ui.texteditor.AbstractTextEditor$TextEditorSavable.isDirty(AbstractTextEditor.java:7212)
	at org.eclipse.ui.internal.Workbench.getFilteredSaveables(Workbench.java:3481)
	at org.eclipse.ui.internal.Workbench.saveAll(Workbench.java:3454)
	at org.eclipse.ui.ide.IDE$1.run(IDE.java:1494)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.ui.ide.IDE.saveAllEditors(IDE.java:1482)
	at org.eclipse.debug.internal.ui.launchConfigurations.SaveScopeResourcesHandler.doSave(SaveScopeResourcesHandler.java:228)
	at org.eclipse.debug.internal.ui.launchConfigurations.SaveScopeResourcesHandler.handleStatus(SaveScopeResourcesHandler.java:182)
	at org.eclipse.debug.internal.ui.sourcelookup.Prompter.lambda$0(Prompter.java:73)
	at org.eclipse.ui.internal.PendingSyncExec.run(PendingSyncExec.java:68)
	at org.eclipse.ui.internal.UILockListener.doPendingWork(UILockListener.java:171)
	at org.eclipse.ui.internal.UISynchronizer.lambda$0(UISynchronizer.java:139)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:185)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4005)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3633)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1158)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1047)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:658)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:557)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:154)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:150)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:137)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:107)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:657)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:594)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1447)

!ENTRY org.eclipse.ui.workbench.texteditor 4 0 2020-11-09 17:41:02.067
!MESSAGE 
!STACK 0
java.lang.NullPointerException
	at org.eclipse.ui.texteditor.AbstractTextEditor$TextEditorSavable.isDirty(AbstractTextEditor.java:7212)
	at org.eclipse.ui.internal.Workbench.getFilteredSaveables(Workbench.java:3481)
	at org.eclipse.ui.internal.Workbench.saveAll(Workbench.java:3454)
	at org.eclipse.ui.ide.IDE$1.run(IDE.java:1494)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.ui.ide.IDE.saveAllEditors(IDE.java:1482)
	at org.eclipse.debug.internal.ui.launchConfigurations.SaveScopeResourcesHandler.doSave(SaveScopeResourcesHandler.java:228)
	at org.eclipse.debug.internal.ui.launchConfigurations.SaveScopeResourcesHandler.handleStatus(SaveScopeResourcesHandler.java:182)
	at org.eclipse.debug.internal.ui.sourcelookup.Prompter.lambda$0(Prompter.java:73)
	at org.eclipse.ui.internal.PendingSyncExec.run(PendingSyncExec.java:68)
	at org.eclipse.ui.internal.UILockListener.doPendingWork(UILockListener.java:171)
	at org.eclipse.ui.internal.UISynchronizer.lambda$0(UISynchronizer.java:139)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:185)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4005)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3633)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1158)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1047)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:658)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:557)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:154)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:150)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:137)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:107)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:657)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:594)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1447)

!ENTRY org.eclipse.ui.workbench.texteditor 4 0 2020-11-09 17:42:20.837
!MESSAGE 
!STACK 0
java.lang.NullPointerException
	at org.eclipse.ui.texteditor.AbstractTextEditor$TextEditorSavable.isDirty(AbstractTextEditor.java:7212)
	at org.eclipse.ui.internal.Workbench.getFilteredSaveables(Workbench.java:3481)
	at org.eclipse.ui.internal.Workbench.saveAll(Workbench.java:3454)
	at org.eclipse.ui.ide.IDE$1.run(IDE.java:1494)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.ui.ide.IDE.saveAllEditors(IDE.java:1482)
	at org.eclipse.debug.internal.ui.launchConfigurations.SaveScopeResourcesHandler.doSave(SaveScopeResourcesHandler.java:228)
	at org.eclipse.debug.internal.ui.launchConfigurations.SaveScopeResourcesHandler.handleStatus(SaveScopeResourcesHandler.java:182)
	at org.eclipse.debug.internal.ui.sourcelookup.Prompter.lambda$0(Prompter.java:73)
	at org.eclipse.ui.internal.PendingSyncExec.run(PendingSyncExec.java:68)
	at org.eclipse.ui.internal.UILockListener.doPendingWork(UILockListener.java:171)
	at org.eclipse.ui.internal.UISynchronizer.lambda$0(UISynchronizer.java:139)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:185)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4005)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3633)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1158)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1047)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:658)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:557)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:154)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:150)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:137)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:107)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:657)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:594)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1447)

!ENTRY org.eclipse.ui.workbench.texteditor 4 0 2020-11-09 17:43:52.849
!MESSAGE 
!STACK 0
java.lang.NullPointerException
	at org.eclipse.ui.texteditor.AbstractTextEditor$TextEditorSavable.isDirty(AbstractTextEditor.java:7212)
	at org.eclipse.ui.internal.Workbench.getFilteredSaveables(Workbench.java:3481)
	at org.eclipse.ui.internal.Workbench.saveAll(Workbench.java:3454)
	at org.eclipse.ui.ide.IDE$1.run(IDE.java:1494)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.ui.ide.IDE.saveAllEditors(IDE.java:1482)
	at org.eclipse.debug.internal.ui.launchConfigurations.SaveScopeResourcesHandler.doSave(SaveScopeResourcesHandler.java:228)
	at org.eclipse.debug.internal.ui.launchConfigurations.SaveScopeResourcesHandler.handleStatus(SaveScopeResourcesHandler.java:182)
	at org.eclipse.debug.internal.ui.sourcelookup.Prompter.lambda$0(Prompter.java:73)
	at org.eclipse.ui.internal.PendingSyncExec.run(PendingSyncExec.java:68)
	at org.eclipse.ui.internal.UILockListener.doPendingWork(UILockListener.java:171)
	at org.eclipse.ui.internal.UISynchronizer.lambda$0(UISynchronizer.java:139)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:185)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4005)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3633)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1158)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1047)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:658)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:557)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:154)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:150)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:137)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:107)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:657)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:594)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1447)

!ENTRY org.eclipse.ui.workbench.texteditor 4 0 2020-11-09 17:45:56.809
!MESSAGE 
!STACK 0
java.lang.NullPointerException
	at org.eclipse.ui.texteditor.AbstractTextEditor$TextEditorSavable.isDirty(AbstractTextEditor.java:7212)
	at org.eclipse.ui.internal.Workbench.getFilteredSaveables(Workbench.java:3481)
	at org.eclipse.ui.internal.Workbench.saveAll(Workbench.java:3454)
	at org.eclipse.ui.ide.IDE$1.run(IDE.java:1494)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.ui.ide.IDE.saveAllEditors(IDE.java:1482)
	at org.eclipse.debug.internal.ui.launchConfigurations.SaveScopeResourcesHandler.doSave(SaveScopeResourcesHandler.java:228)
	at org.eclipse.debug.internal.ui.launchConfigurations.SaveScopeResourcesHandler.handleStatus(SaveScopeResourcesHandler.java:182)
	at org.eclipse.debug.internal.ui.sourcelookup.Prompter.lambda$0(Prompter.java:73)
	at org.eclipse.ui.internal.PendingSyncExec.run(PendingSyncExec.java:68)
	at org.eclipse.ui.internal.UILockListener.doPendingWork(UILockListener.java:171)
	at org.eclipse.ui.internal.UISynchronizer.lambda$0(UISynchronizer.java:139)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:185)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4005)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3633)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1158)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1047)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:658)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:557)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:154)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:150)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:137)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:107)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:657)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:594)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1447)

!ENTRY org.eclipse.ui.workbench.texteditor 4 0 2020-11-09 17:46:53.574
!MESSAGE 
!STACK 0
java.lang.NullPointerException
	at org.eclipse.ui.texteditor.AbstractTextEditor$TextEditorSavable.isDirty(AbstractTextEditor.java:7212)
	at org.eclipse.ui.internal.Workbench.getFilteredSaveables(Workbench.java:3481)
	at org.eclipse.ui.internal.Workbench.saveAll(Workbench.java:3454)
	at org.eclipse.ui.ide.IDE$1.run(IDE.java:1494)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.ui.ide.IDE.saveAllEditors(IDE.java:1482)
	at org.eclipse.debug.internal.ui.launchConfigurations.SaveScopeResourcesHandler.doSave(SaveScopeResourcesHandler.java:228)
	at org.eclipse.debug.internal.ui.launchConfigurations.SaveScopeResourcesHandler.handleStatus(SaveScopeResourcesHandler.java:182)
	at org.eclipse.debug.internal.ui.sourcelookup.Prompter.lambda$0(Prompter.java:73)
	at org.eclipse.ui.internal.PendingSyncExec.run(PendingSyncExec.java:68)
	at org.eclipse.ui.internal.UILockListener.doPendingWork(UILockListener.java:171)
	at org.eclipse.ui.internal.UISynchronizer.lambda$0(UISynchronizer.java:139)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:185)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4005)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3633)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1158)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1047)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:658)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:557)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:154)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:150)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:137)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:107)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:657)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:594)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1447)

!ENTRY org.eclipse.ui.workbench.texteditor 4 0 2020-11-09 17:52:57.309
!MESSAGE 
!STACK 0
java.lang.NullPointerException
	at org.eclipse.ui.texteditor.AbstractTextEditor$TextEditorSavable.isDirty(AbstractTextEditor.java:7212)
	at org.eclipse.ui.internal.Workbench.getFilteredSaveables(Workbench.java:3481)
	at org.eclipse.ui.internal.Workbench.saveAll(Workbench.java:3454)
	at org.eclipse.ui.ide.IDE$1.run(IDE.java:1494)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.ui.ide.IDE.saveAllEditors(IDE.java:1482)
	at org.eclipse.debug.internal.ui.launchConfigurations.SaveScopeResourcesHandler.doSave(SaveScopeResourcesHandler.java:228)
	at org.eclipse.debug.internal.ui.launchConfigurations.SaveScopeResourcesHandler.handleStatus(SaveScopeResourcesHandler.java:182)
	at org.eclipse.debug.internal.ui.sourcelookup.Prompter.lambda$0(Prompter.java:73)
	at org.eclipse.ui.internal.PendingSyncExec.run(PendingSyncExec.java:68)
	at org.eclipse.ui.internal.UILockListener.doPendingWork(UILockListener.java:171)
	at org.eclipse.ui.internal.UISynchronizer.lambda$0(UISynchronizer.java:139)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:185)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4005)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3633)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1158)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1047)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:658)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:557)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:154)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:150)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:137)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:107)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:657)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:594)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1447)

!ENTRY org.eclipse.ui.workbench.texteditor 4 0 2020-11-09 17:54:22.327
!MESSAGE 
!STACK 0
java.lang.NullPointerException
	at org.eclipse.ui.texteditor.AbstractTextEditor$TextEditorSavable.isDirty(AbstractTextEditor.java:7212)
	at org.eclipse.ui.internal.Workbench.getFilteredSaveables(Workbench.java:3481)
	at org.eclipse.ui.internal.Workbench.saveAll(Workbench.java:3454)
	at org.eclipse.ui.ide.IDE$1.run(IDE.java:1494)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.ui.ide.IDE.saveAllEditors(IDE.java:1482)
	at org.eclipse.debug.internal.ui.launchConfigurations.SaveScopeResourcesHandler.doSave(SaveScopeResourcesHandler.java:228)
	at org.eclipse.debug.internal.ui.launchConfigurations.SaveScopeResourcesHandler.handleStatus(SaveScopeResourcesHandler.java:182)
	at org.eclipse.debug.internal.ui.sourcelookup.Prompter.lambda$0(Prompter.java:73)
	at org.eclipse.ui.internal.PendingSyncExec.run(PendingSyncExec.java:68)
	at org.eclipse.ui.internal.UILockListener.doPendingWork(UILockListener.java:171)
	at org.eclipse.ui.internal.UISynchronizer.lambda$0(UISynchronizer.java:139)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:185)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4005)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3633)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1158)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1047)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:658)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:557)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:154)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:150)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:137)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:107)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:657)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:594)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1447)

!ENTRY org.eclipse.ui.workbench.texteditor 4 0 2020-11-09 17:54:56.031
!MESSAGE 
!STACK 0
java.lang.NullPointerException
	at org.eclipse.ui.texteditor.AbstractTextEditor$TextEditorSavable.isDirty(AbstractTextEditor.java:7212)
	at org.eclipse.ui.internal.Workbench.getFilteredSaveables(Workbench.java:3481)
	at org.eclipse.ui.internal.Workbench.saveAll(Workbench.java:3454)
	at org.eclipse.ui.ide.IDE$1.run(IDE.java:1494)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.ui.ide.IDE.saveAllEditors(IDE.java:1482)
	at org.eclipse.debug.internal.ui.launchConfigurations.SaveScopeResourcesHandler.doSave(SaveScopeResourcesHandler.java:228)
	at org.eclipse.debug.internal.ui.launchConfigurations.SaveScopeResourcesHandler.handleStatus(SaveScopeResourcesHandler.java:182)
	at org.eclipse.debug.internal.ui.sourcelookup.Prompter.lambda$0(Prompter.java:73)
	at org.eclipse.ui.internal.PendingSyncExec.run(PendingSyncExec.java:68)
	at org.eclipse.ui.internal.UILockListener.doPendingWork(UILockListener.java:171)
	at org.eclipse.ui.internal.UISynchronizer.lambda$0(UISynchronizer.java:139)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:185)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4005)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3633)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1158)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1047)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:658)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:557)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:154)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:150)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:137)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:107)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:657)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:594)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1447)

!ENTRY org.eclipse.ui.workbench.texteditor 4 0 2020-11-09 17:56:04.594
!MESSAGE 
!STACK 0
java.lang.NullPointerException
	at org.eclipse.ui.texteditor.AbstractTextEditor$TextEditorSavable.isDirty(AbstractTextEditor.java:7212)
	at org.eclipse.ui.internal.Workbench.getFilteredSaveables(Workbench.java:3481)
	at org.eclipse.ui.internal.Workbench.saveAll(Workbench.java:3454)
	at org.eclipse.ui.ide.IDE$1.run(IDE.java:1494)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.ui.ide.IDE.saveAllEditors(IDE.java:1482)
	at org.eclipse.debug.internal.ui.launchConfigurations.SaveScopeResourcesHandler.doSave(SaveScopeResourcesHandler.java:228)
	at org.eclipse.debug.internal.ui.launchConfigurations.SaveScopeResourcesHandler.handleStatus(SaveScopeResourcesHandler.java:182)
	at org.eclipse.debug.internal.ui.sourcelookup.Prompter.lambda$0(Prompter.java:73)
	at org.eclipse.ui.internal.PendingSyncExec.run(PendingSyncExec.java:68)
	at org.eclipse.ui.internal.UILockListener.doPendingWork(UILockListener.java:171)
	at org.eclipse.ui.internal.UISynchronizer.lambda$0(UISynchronizer.java:139)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:185)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4005)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3633)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1158)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1047)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:658)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:557)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:154)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:150)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:137)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:107)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:657)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:594)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1447)
!SESSION 2020-11-10 11:53:10.992 -----------------------------------------------
eclipse.buildId=4.16.0.I20200604-0540
java.version=1.8.0_181
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_GB
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.jface 2 0 2020-11-10 11:53:36.760
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2020-11-10 11:53:36.760
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@74ce7fdf,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@1f26b992,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2020-11-10 11:53:44.634
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\osval'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2020-11-11 09:21:20.331 -----------------------------------------------
eclipse.buildId=4.16.0.I20200604-0540
java.version=1.8.0_181
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_GB
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.jface 2 0 2020-11-11 09:22:06.046
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2020-11-11 09:22:06.046
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@4e6cbdf1,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@67fac095,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2020-11-11 09:22:13.549
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\osval'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.

!ENTRY org.eclipse.jdt.core 4 4 2020-11-11 16:53:05.002
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
/*
 *   Copyright (c) 2007 by BEE S.A. All Rights Reserved.
 *   THIS IS UNPUBLISHED PROPRIETARY SOURCE CODE OF BEE S.A.
 *   The copyright notice above does not evidence any actual or intended
 *   publication of such source code.
 */

package cl.bee.genfrmjava;


import java.io.*;

import java.text.*;

import java.util.*;

import cl.bee.genfrmjava.config.*;
import cl.bee.genfrmjava.config.impl.*;

import cl.bee.genfrmjava.adddef.schema.*;
import cl.bee.genfrmjava.rangedef.schema.*;
import cl.bee.genfrmjava.domaindef.schema.*;

import cl.bee.genfrmjava.util.*;

import org.apache.log4j.*;

import org.apache.xmlbeans.*;


/**
 * @author  alarrayea@bee.cl
 * @version 1.0
 */
public class GenFrm {

    /** TODO_javadoc. */
    private static Logger logger = Logger.getLogger(GenFrm.class);

    /** TODO_javadoc. */
    private final static int[] KEY_TYPES = new int[] { FieldDef.IKY, FieldDef.MKY, FieldDef.AKY };

    /** TODO_javadoc. */
    private static final SimpleDateFormat formdate_gen = new SimpleDateFormat("dd-MMM-yy hh:mm aa", new Locale("es", "CL")); //07-Nov-18 09:48 AM

    //

    /** TODO_javadoc. */
    public static final int UNDEF = -1;

    /** TODO_javadoc. */
    private static final int BA_ACTION = 1;

    /** TODO_javadoc. */
    private static final int BQ_ACTION = 2;

    /** TODO_javadoc. */
    private static final int BU_ACTION = 3;

    /** TODO_javadoc. */
    private static final String action_names[] = { "", "BA", "BQ", "BU" };

    //

    /** TODO_javadoc. */
    private static PrintStream gen = null;

    /** TODO_javadoc. */
    private static HashMap<String, String> addit_hash = null;

    /** TODO_javadoc. */
    private static HashMap<String, DomainRangeDef> ranges_hash = null;

    /** TODO_javadoc. */
    private static HashMap<String, DomainRangeDef> domains_hash = null;

    /** TODO_javadoc. */
    private static String systemName = null;

    /** TODO_javadoc. */
    private static String entityName = null;

    //

    /** TODO_javadoc. */
    private static int action = UNDEF;

    /******************************************************************************
     * main
     ******************************************************************************/
    /**
     *
     * @param args TODO_javadoc.
     *
     */
    public static void main(String args[]) {

    	BasicConfigurator.configure();
        logger.info("Inicio GenFrm.java ");
        try {

            String configClass = null;

            for (int idx = 0; idx < args.length - 1; idx++) {

                if (args[idx].equalsIgnoreCase("-system")) {
                    systemName = args[++idx].toUpperCase();
                }

                if (args[idx].equalsIgnoreCase("-entity")) {
                    entityName = args[++idx].toUpperCase();
                }

                if (args[idx].equalsIgnoreCase("-action")) {

                    String s = args[++idx].toUpperCase();

                    for (int i = 1; i < action_names.length; i++) {

                        if (s.equals(action_names[i])) {

                            action = i;

                            break;
                        }
                    }
                }

                if (args[idx].equalsIgnoreCase("-configClass")) {
                    configClass = args[++idx];
                }
            }

            logger.debug("systemName: " + systemName);
            logger.debug("entityName: " + entityName);
            logger.debug("action:     " + action_names[action]);

            if (configClass == null) {
                throw new RuntimeException("configClass debe estar definido.");
            }

            //

            ArrayList<Object>  fields = new ArrayList<Object>();
            ArrayList<TextDef> texts  = new ArrayList<TextDef>();
            FormDef            forms = new FormDef();

            //

            Config config = (Config) (Class.forName(configClass).newInstance());

            config.getInfoFromXML("data/form/form_" +   systemName.toLowerCase() + "_" + entityName.toLowerCase() + ".xml", fields, texts, forms);

            //

            addit_hash = new HashMap<String, String>();

            getAdditFromXML(       "data/addit/addit_" + systemName.toLowerCase() + "_" + entityName.toLowerCase() + "_" + action_names[action].toLowerCase() + ".xml");

            //

            ranges_hash  = new HashMap<String, DomainRangeDef>();
            domains_hash = new HashMap<String, DomainRangeDef>();

            getRangesFromXML ("data/domain-range/range_"  + systemName.toLowerCase() + ".xml");
            getDomainsFromXML("data/domain-range/domain_" + systemName.toLowerCase() + ".xml");

            //

            ArrayList<String> subsystems = getSubsystemsFromFields(fields);

            //

            gen = new PrintStream(new FileOutputStream("data/gen/" + systemName + action_names[action] + entityName + ".SRCAIU"));

            gen.println("      *");
            gen.println("      * " + systemName + action_names[action] + entityName);
            gen.println("      * " + Utils.NOMBRE_GENEDADOR + " " + Utils.VERSION_GENEDADOR);
            gen.println("      * " + formdate_gen.format(new Date()).toUpperCase());
            gen.println("      *");
            gen.println("       SET-TAG-" + systemName + action_names[action] + entityName + " SECTION.");
            gen.println("       INI-SET-TAG-" + systemName + action_names[action] + entityName + ".");
            gen.println("           MOVE");

          //gen.println("           '<IDNMOD NOM=$" + systemName + action_names[action] + entityName + "$ VSN=${VSN" + action_names[action] + "}$ VGM=$3.0.1$");
            gen.println("           '<IDNMOD NOM=$" + systemName + action_names[action] + entityName + "$ VSN=$09.08.27$ VGM=$3.0.1$");

          //gen.println("      -    'GEN=$07-Nov-18 09:48 AM$ FNC=${FNC" + action_names[action] + "}$/>'");
            gen.println("      -    'GEN=$07-Nov-18 09:48 AM$ FNC=$090802$/>'");

            gen.println("               TO WSS-CVT-ITEM.");
            gen.println("       FIN-SET-TAG-" + systemName + action_names[action] + entityName + ".");
            gen.println("           EXIT.");
            gen.println();

            /////////////////////////////////////////////////////////////////////////////////////
            
            //ogb glosas
            HashMap<String, Integer>  gls  = getGlsFromFields(fields);
           //ogb
            

            if (action == BQ_ACTION) {

                genPUT_ALL_entity(entityName, subsystems);

                for (String subsys : subsystems) {

                    if (!subsys.equals(FieldDef.FRM)) {
                        genPUT_subsys_entity(subsys, entityName, fields, gls);
                    }
                }

                genKEY_ALL_entity(entityName, subsystems);

                for (String subsys : subsystems) {

                    if (!subsys.equals(FieldDef.FRM)) {
                        genKEY_subsys_entity(subsys, entityName, fields);
                    }
                }

                genSCR_CLRA_entity(entityName, fields, subsystems);

                for (String subsys : subsystems) {

                    if (!subsys.equals(FieldDef.FRM)) {
                        genCLR_subsys_entity(subsys, entityName, fields);
                    }
                }

                genFST_KEY_entity(entityName, fields);

                genFST_FLD_entity(entityName, fields);

                genPRO_KEY_entity(entityName, fields);

                genUNP_KEY_entity(entityName, fields);

                genUNP_FLD_entity(entityName, fields, subsystems);

                for (String subsys : subsystems) {

                    if (!subsys.equals(FieldDef.FRM)) {
                        genUNP_subsys_entity(subsys, entityName, fields);
                    }
                }

                genVAL_KEY_entity(entityName, fields, gls);

                genVAL_CON_KEY_entity(entityName, fields);

                genVAL_CON_IKY_entity(entityName, fields);

                genVAL_NUM_KEY_entity(entityName, fields);

                genVAL_NUM_FLD_entity(entityName, fields);

                genEDT_KEY_entity(entityName, fields);

                genEDT_FLD_entity(entityName, fields);
            }

            /////////////////////////////////////////////////////////////////////////////////////

            if (action == BU_ACTION) {

                genRET_ALL_entity(entityName, subsystems);

                for (String subsys : subsystems) {

                    if (!subsys.equals(FieldDef.FRM)) {
                        genRET_subsys_entity(subsys, entityName, fields);
                    }
                }

                genKEY_ALL_entity(entityName, subsystems);

                for (String subsys : subsystems) {

                    if (!subsys.equals(FieldDef.FRM)) {
                        genKEY_subsys_entity(subsys, entityName, fields);
                    }
                }

                genSCR_CLRA_entity(entityName, fields, subsystems);

                for (String subsys : subsystems) {

                    if (!subsys.equals(FieldDef.FRM)) {
                        genCLR_subsys_entity(subsys, entityName, fields);
                    }
                }

                genFST_KEY_entity(entityName, fields);

                genFST_FLD_entity(entityName, fields);

                genPRO_KEY_entity(entityName, fields);

                genPRO_FLD_entity(entityName, fields, subsystems);

                for (String subsys : subsystems) {

                    if (!subsys.equals(FieldDef.FRM)) {
                        genPRO_subsys_entity(subsys, entityName, fields);
                    }
                }

                genUNP_KEY_entity(entityName, fields);

                genUNP_FLD_entity(entityName, fields, subsystems);

                for (String subsys : subsystems) {

                    if (!subsys.equals(FieldDef.FRM)) {
                        genUNP_subsys_entity(subsys, entityName, fields);
                    }
                }

                genVAL_MKY_entity(entityName, fields);

                genVAL_FLD_entity( entityName, fields, gls);

                ///////////////

                iniSection("VAL-CON-FLD-" + entityName, "VAL_CON_FLD_" + entityName);
                finSection("VAL-CON-FLD-" + entityName);

                iniSection("VAL-CON-" + entityName); // TODO_ALA: revisar
                finSection("VAL-CON-" + entityName);

                genVAL_NUM_KEY_entity(entityName, fields);

                genVAL_NUM_FLD_entity(entityName, fields);

                genEDT_KEY_entity(entityName, fields);

                genEDT_FLD_entity(entityName, fields);
            }

            //

            String ident = "EOF_" + action_names[action];

            if (addit_hash.containsKey    (ident)) {
                gen.println(addit_hash.get(ident));
            }

            ident = "EOF";

            if (addit_hash.containsKey    (ident)) {
                gen.println(addit_hash.get(ident));
            }

            //

            gen.close();

        } catch (Throwable e) {
            logger.fatal(Utils.printStackTrace(e));
        }
    }

    /******************************************************************************
     * genPUT_ALL_entity
     ******************************************************************************/
    /**
     *
     * TODO_javadoc.
     *
     *
     * @param entityName TODO_javadoc.
     * @param subsystems TODO_javadoc.
     *
     * @since 1.0
     *
     */
    private static void genPUT_ALL_entity(String entityName, ArrayList<String> subsystems) {

        iniSection("PUT-ALL-" + entityName);

        for (String subsys : subsystems) {

            if (!subsys.equals(FieldDef.FRM)) {
                gen.println("           PERFORM PUT-" + subsys + "-" + entityName + ".");
            }
        }

        finSection("PUT-ALL-" + entityName);
    }

    /******************************************************************************
     * genPUT_subsys_entity
     ******************************************************************************/
    /**
     *
     * TODO_javadoc.
     *
     *
     * @param subsys TODO_javadoc.
     * @param entityName TODO_javadoc.
     * @param fields TODO_javadoc.
     *
     * @since 1.0
     *
     */
    private static void genPUT_subsys_entity(String subsys, String entityName, ArrayList<Object> fields,  HashMap<String, Integer> gls) {

        iniSection("PUT-" + subsys + "-" + entityName);

        gen.println("           IF PGM-STAT-" + subsys + "-NUL");
        gen.println("               GO TO FIN-PUT-" + subsys + "-" + entityName + ".");

        //

        gen.println("           IF NOT PGM-STAT-" + subsys + "-OKS");
        gen.println("               PERFORM CLR-" + subsys + "-" + entityName);

        /*
        if (subsys.equals(entityName)) { // TODO_ALA: revisar
            gen.println("               PERFORM CLR-FRM-" + entityName);
        }
        */

        gen.println("               GO TO FIN-PUT-" + subsys + "-" + entityName + ".");

        //

        ArrayList<Object>     vars  = getSubsysVarsFromFields(subsys, fields);
        ArrayList<ElementDef> array = null;
        


        for (int i = 0; i < vars.size(); i++) {

            if (vars.get(i) instanceof FieldDef) {

                FieldDef fd = (FieldDef) vars.get(i);

                get_put_field(subsys, entityName, fd, -1);
            }
            else if (vars.get(i) instanceof ArrayList) {

                array = (ArrayList<ElementDef>) vars.get(i);

                for (int j = 0; j < array.size(); j++) {

                    gen.println("      *");
                    gen.println("      *    CAMPO INDEXADO   " + array.get(j).field.name);

                    for (int k = 0; k < array.get(j).index.size(); k++) {

                        get_put_field(subsys, entityName, array.get(j).field, k + 1);
                    }
                }
            }
        }

        for (int i = 0; i < vars.size(); i++) {

            if (vars.get(i) instanceof FieldDef) {

                FieldDef fd = (FieldDef) vars.get(i);

                if (!fd.fmsname.substring(3, 8).equals("_IND_")) { ///////// validar
                    domain_range_validation_search(entityName, fd, -1, gls, "PUT");
                }
            }
            else {
                //////////////
            }
        }

        finSection("PUT-" + subsys + "-" + entityName);
    }

    /******************************************************************************
     * get_put_field
     ******************************************************************************/
    /**
     *
     * TODO_javadoc.
     *
     *
     * @param subsys TODO_javadoc.
     * @param entityName TODO_javadoc.
     * @param fd TODO_javadoc.
     * @param idx TODO_javadoc.
     *
     * @since 1.0
     *
     */
    private static void get_put_field(String subsys, String entityName, FieldDef fd, int idx) {

        if (fd.replaced != null) {

            for (FieldDef fr : fd.replaced) {
                get_put_field(subsys, entityName, fr, idx);
            }
        }
        else {
            gen.println("           MOVE " + fd.name + " IN " + subsys + (idx != -1 ? "(" + idx + ")" : "") + " TO " + fd.name + " IN " + entityName + "-FLD" + (idx != -1 ? "(" + idx + ")" : "") + ".");
        }
    }

    /******************************************************************************
     * genKEY_ALL_entity
     ******************************************************************************/
    /**
     *
     * TODO_javadoc.
     *
     *
     * @param entityName TODO_javadoc.
     * @param subsystems TODO_javadoc.
     *
     * @since 1.0
     *
     */
    private static void genKEY_ALL_entity(String entityName, ArrayList<String> subsystems) {

        iniSection("KEY-ALL-" + entityName);

        for (String subsys : subsystems) {

            if (!subsys.equals(FieldDef.FRM)) {
                gen.println("           PERFORM KEY-" + subsys + "-" + entityName + "."); // solo aquellos que tengan KEY ???
            }
        }

        finSection("KEY-ALL-" + entityName);
    }

    /******************************************************************************
     * genKEY_subsys_entity
     ******************************************************************************/
    /**
     *
     * TODO_javadoc.
     *
     *
     * @param subsys TODO_javadoc.
     * @param entityName TODO_javadoc.
     * @param fields TODO_javadoc.
     *
     * @since 1.0
     *
     */
    private static void genKEY_subsys_entity(String subsys, String entityName, ArrayList<Object> fields) {

        iniSection("KEY-" + subsys + "-" + entityName);

        ArrayList<Object> vars = getSubsysVarsFromFields(subsys, fields);

        for (int i = 0; i < vars.size(); i++) {

            if (vars.get(i) instanceof FieldDef) {

                FieldDef fd = (FieldDef) vars.get(i);

                if (Utils.searchIntInArray(fd.modifier, KEY_TYPES) >= 0) {
                    get_ret_field(subsys, entityName, fd, -1);
                }
            }
            else {
                //////////////
            }
        }

        finSection("KEY-" + subsys + "-" + entityName);
    }

    /******************************************************************************
     * get_ret_field
     ******************************************************************************/
    /**
     *
     * TODO_javadoc.
     *
     *
     * @param subsys TODO_javadoc.
     * @param entityName TODO_javadoc.
     * @param fd TODO_javadoc.
     * @param idx TODO_javadoc.
     *
     * @since 1.0
     *
     */
    private static void get_ret_field(String subsys, String entityName, FieldDef fd, int idx) {

        if (fd.replaced != null) {

            for (FieldDef fr : fd.replaced) {
                get_ret_field(subsys, entityName, fr, idx);
            }
        }
        else {
            gen.println("           MOVE " + fd.name + " IN " + entityName + "-FLD" + (idx != -1 ? "(" + idx + ")" : "") + " TO " + fd.name + " IN " + subsys + (idx != -1 ? "(" + idx + ")" : "") + ".");
        }
    }

    /******************************************************************************
     * genSCR_CLRA_entity
     ******************************************************************************/
    /**
     *
     * TODO_javadoc.
     *
     *
     * @param entityName TODO_javadoc.
     * @param fields TODO_javadoc.
     * @param subsystems TODO_javadoc.
     *
     * @since 1.0
     *
     */
    private static void genSCR_CLRA_entity(String entityName, ArrayList<Object> fields, ArrayList<String> subsystems) {

        iniSection("SCR-CLRA-" + entityName);

        gen.println("           PERFORM CLR-KEY-" + entityName + ".");
        gen.println("           PERFORM CLR-FLD-" + entityName + ".");

        finSection("SCR-CLRA-" + entityName);

        //

        iniSection("CLR-KEY-" + entityName);

        for (int i = 0; i < fields.size(); i++) {

            if (fields.get(i) instanceof FieldDef) {

                FieldDef fd = (FieldDef) fields.get(i);

                if (Utils.searchIntInArray(fd.modifier, KEY_TYPES) >= 0) {
                    get_clear_field(entityName, fd, -1);
                }
            }
            else {
                //////////////
            }
        }

        finSection("CLR-KEY-" + entityName);

        //

        iniSection("CLR-FLD-" + entityName);

        ArrayList<ElementDef> array = null;

        for (int i = 0; i < fields.size(); i++) {

            if (fields.get(i) instanceof FieldDef) {

                FieldDef fd = (FieldDef) fields.get(i);

                if (fd.fmsname.substring(0, 3).equals(FieldDef.FRM)) {
                    get_clear_field(entityName, fd, -1);
                }
            }
            else if (fields.get(i) instanceof ArrayList) {

                array = (ArrayList<ElementDef>) fields.get(i);

                for (int j = 0; j < array.size(); j++) {

                    if (array.get(j).field.name.substring(0, 3).equals(FieldDef.FRM)) {

                        for (int k = 0; k < array.get(j).index.size(); k++) {
                            get_clear_field(entityName, array.get(j).field, k + 1);
                        }
                    }
                }
            }
        }

        for (String subsys : subsystems) {

            if (!subsys.equals(FieldDef.FRM)) {
                gen.println("           PERFORM CLR-" + subsys + "-" + entityName + ".");
            }
        }

        finSection("CLR-FLD-" + entityName);
    }

    /******************************************************************************
     * get_clear_field
     ******************************************************************************/
    /**
     *
     * TODO_javadoc.
     *
     *
     * @param entityName TODO_javadoc.
     * @param fd TODO_javadoc.
     * @param idx TODO_javadoc.
     *
     * @since 1.0
     *
     */
    private static void get_clear_field(String entityName, FieldDef fd, int idx) {

        if (fd.replaced != null && fd.type != FieldDef.DATE) {

            for (FieldDef fr : fd.replaced) {
                get_clear_field(entityName, fr, idx);
            }
        }
        else {

            switch (fd.type) {

            case FieldDef.INTEGER :
            case FieldDef.LONG :
            case FieldDef.DOUBLE :
            case FieldDef.DATE :
                gen.println("           MOVE ZEROES TO " + fd.name + " IN " + entityName + "-FLD" + (idx != -1 ? "(" + idx + ")" : "") + ".");
                break;
            case FieldDef.CHAR :
            case FieldDef.BOOLEAN :
            case FieldDef.STRING :
                gen.println("           MOVE SPACES TO " + fd.name + " IN " + entityName + "-FLD" + (idx != -1 ? "(" + idx + ")" : "") + ".");
                break;
            }
        }
    }

    /******************************************************************************
     * genCLR_subsys_entity
     ******************************************************************************/
    /**
     *
     * TODO_javadoc.
     *
     *
     * @param subsys TODO_javadoc.
     * @param entityName TODO_javadoc.
     * @param fields TODO_javadoc.
     *
     * @since 1.0
     *
     */
    private static void genCLR_subsys_entity(String subsys, String entityName, ArrayList<Object> fields) {

        iniSection("CLR-" + subsys + "-" + entityName);

        ArrayList<Object>     vars  = getSubsysVarsFromFields(subsys, fields);
        ArrayList<ElementDef> array = null;

        for (int i = 0; i < vars.size(); i++) {

            if (vars.get(i) instanceof FieldDef) {

                FieldDef fd = (FieldDef) vars.get(i);

                if (Utils.searchIntInArray(fd.modifier, KEY_TYPES) < 0) {
                    get_clear_field(entityName, fd, -1);
                }
            }
            else if (vars.get(i) instanceof ArrayList) {

                array = (ArrayList<ElementDef>) vars.get(i);

                for (int j = 0; j < array.size(); j++) {

                    for (int k = 0; k < array.get(j).index.size(); k++) {

                        if (Utils.searchIntInArray(array.get(j).field.modifier, KEY_TYPES) < 0) {
                            get_clear_field(entityName, array.get(j).field, k + 1);
                        }
                    }
                }
            }
       }

        finSection("CLR-" + subsys + "-" + entityName);
    }

    /******************************************************************************
     * genFST_KEY_entity
     ******************************************************************************/
    /**
     *
     * TODO_javadoc.
     *
     *
     * @param entityName TODO_javadoc.
     * @param fields TODO_javadoc.
     *
     * @since 1.0
     *
     */
    private static void genFST_KEY_entity(String entityName, ArrayList<Object> fields) {

        iniSection("FST-KEY-" + entityName);

        for (int i = 0; i < fields.size(); i++) {

            if (fields.get(i) instanceof FieldDef) {

                FieldDef fd = (FieldDef) fields.get(i);

              //if (Utils.searchIntInArray(fd.modifier, KEY_TYPES) >= 0) {
                if (Utils.searchIntInArray(fd.modifier, new int[] { FieldDef.IKY }) >= 0 && FieldDef.absenceAttribute(fd.attributes, FieldDef.DISPLAY_ONLY_ATTR)) {

                     gen_pos_cursor(entityName, fd, -1);

                     break;
                }
            }
            else {
                //////////////
            }
        }

        finSection("FST-KEY-" + entityName);
    }

    /******************************************************************************
     * gen_pos_cursor
     ******************************************************************************/
    /**
     *
     * TODO_javadoc.
     *
     *
     * @param entityName TODO_javadoc.
     * @param fd TODO_javadoc.
     * @param size TODO_javadoc.
     *
     * @since 1.0
     *
     */
    private static void gen_pos_cursor(String entityName, FieldDef fd, int size) {
        gen.println("           MOVE -1 TO " + fd.name + "-LEN IN " + entityName + "-FLD" + (size != -1 ? "(1)": "") + ".");
    }

    /******************************************************************************
     * genFST_KEY_entity
     ******************************************************************************/
    /**
     *
     * TODO_javadoc.
     *
     *
     * @param entityName TODO_javadoc.
     * @param fields TODO_javadoc.
     *
     * @since 1.0
     *
     */
    private static void genFST_FLD_entity(String entityName, ArrayList<Object> fields) {

        iniSection("FST-FLD-" + entityName);

        ArrayList<ElementDef> array = null;

        for (int i = 0; i < fields.size(); i++) {

            if (fields.get(i) instanceof FieldDef) {

                FieldDef fd = (FieldDef) fields.get(i);

                if (fd.modifier == FieldDef.FLD && FieldDef.absenceAttribute(fd.attributes, FieldDef.DISPLAY_ONLY_ATTR)) {

                    gen_pos_cursor(entityName, fd, -1);

                    break;
                }
            }
            else if (fields.get(i) instanceof ArrayList) {

                array = (ArrayList<ElementDef>) fields.get(i);

                for (int j = 0; j < array.size(); j++) {

                    if (array.get(j).field.modifier == FieldDef.FLD && FieldDef.absenceAttribute(array.get(j).field.attributes, FieldDef.DISPLAY_ONLY_ATTR)) {

                        gen_pos_cursor(entityName, array.get(j).field, array.get(j).index.size());

                        break;
                    }
                }
            }
        }

        finSection("FST-FLD-" + entityName);
    }

    /******************************************************************************
     * genPRO_KEY_entity
     ******************************************************************************/
    /**
     *
     * TODO_javadoc.
     *
     *
     * @param entityName TODO_javadoc.
     * @param fields TODO_javadoc.
     *
     * @since 1.0
     *
     */
    private static void genPRO_KEY_entity(String entityName, ArrayList<Object> fields) {

        iniSection("PRO-KEY-" + entityName);

        if (action == BQ_ACTION) {
            gen.println("           PERFORM PRO-IKY-" + entityName + ".");
            gen.println("           PERFORM PRO-AKY-" + entityName + ".");
        }

        gen.println("           PERFORM PRO-MKY-" + entityName + ".");

        finSection("PRO-KEY-" + entityName);

        //

        if (action == BQ_ACTION) {

            iniSection("PRO-IKY-" + entityName);

            for (int i = 0; i < fields.size(); i++) {

                if (fields.get(i) instanceof FieldDef) {

                    FieldDef fd = (FieldDef) fields.get(i);

                    if (fd.modifier == FieldDef.IKY && FieldDef.absenceAttribute(fd.attributes, FieldDef.DISPLAY_ONLY_ATTR)) {
                        gen_set_field_attr(entityName, fd, "FRM-CPIM-AEY", false, -1);
                    }
                }
                else {
                    //////////////
                }
            }

            finSection("PRO-IKY-" + entityName);

            //

            iniSection("PRO-MKY-" + entityName);

            for (int i = 0; i < fields.size(); i++) {

                if (fields.get(i) instanceof FieldDef) {

                    FieldDef fd = (FieldDef) fields.get(i);

                    if (fd.modifier == FieldDef.MKY && FieldDef.absenceAttribute(fd.attributes, FieldDef.DISPLAY_ONLY_ATTR)) {
                        gen_set_field_attr(entityName, fd, "FRM-CPIM-AEY", false, -1);
                    }
                }
                else {
                    //////////////
                }
            }

            finSection("PRO-MKY-" + entityName);

            //

            iniSection("PRO-AKY-" + entityName);

            for (int i = 0; i < fields.size(); i++) {

                if (fields.get(i) instanceof FieldDef) {

                    FieldDef fd = (FieldDef) fields.get(i);

                    if (fd.modifier == FieldDef.AKY && FieldDef.absenceAttribute(fd.attributes, FieldDef.DISPLAY_ONLY_ATTR)) {
                        gen_set_field_attr(entityName, fd, "FRM-CPIM-AEY", false, -1);
                    }
                }
                else {
                    //////////////
                }
            }

            finSection("PRO-AKY-" + entityName);
        }
        else {

            iniSection("PRO-MKY-" + entityName);

            for (int i = 0; i < fields.size(); i++) {

                if (fields.get(i) instanceof FieldDef) {

                    FieldDef fd = (FieldDef) fields.get(i);

                    if (fd.modifier == FieldDef.MKY) {
                        gen_set_field_attr(entityName, fd, "FRM-CPIM-AEY", false, -1);
                    }
                }
                else {
                    //////////////
                }
            }

            finSection("PRO-MKY-" + entityName);
        }
    }

    /******************************************************************************
     * gen_set_field_attr
     ******************************************************************************/
    /**
     *
     * TODO_javadoc.
     *
     *
     * @param entityName TODO_javadoc.
     * @param fd TODO_javadoc.
     * @param attr TODO_javadoc.
     * @param withRecord TODO_javadoc.
     * @param idx TODO_javadoc.
     *
     * @since 1.0
     *
     */
    private static void gen_set_field_attr(String entityName, FieldDef fd, String attr, boolean withoutRecord, int idx) { // TODO_ALA:

        if (fd.replaced != null && fd.type != FieldDef.DATE) {

            for (FieldDef fr : fd.replaced) {
                gen_set_field_attr(entityName, fr, attr, withoutRecord, idx);
            }
        }
        else {
            gen.println("           MOVE " + attr + " TO " + fd.name + "-ATR" + (withoutRecord ? "" : " IN " + entityName + "-FLD") + (idx != -1 ? "(" + idx + ")" : "") + ".");
        }
    }

    /******************************************************************************
     * genUNP_KEY_entity
     ******************************************************************************/
    /**
     *
     * TODO_javadoc.
     *
     *
     * @param entityName TODO_javadoc.
     * @param fields TODO_javadoc.
     *
     * @since 1.0
     *
     */
    private static void genUNP_KEY_entity(String entityName, ArrayList<Object> fields) {

        iniSection("UNP-KEY-" + entityName);

        gen.println("           PERFORM UNP-IKY-" + entityName + ".");
        gen.println("           PERFORM UNP-AKY-" + entityName + ".");
        gen.println("           PERFORM UNP-MKY-" + entityName + ".");

        finSection("UNP-KEY-" + entityName);

        //

        iniSection("UNP-IKY-" + entityName);

        for (int i = 0; i < fields.size(); i++) {

            if (fields.get(i) instanceof FieldDef) {

                FieldDef fd = (FieldDef) fields.get(i);

                if (fd.modifier == FieldDef.IKY && FieldDef.absenceAttribute(fd.attributes, FieldDef.DISPLAY_ONLY_ATTR) ) {
                    gen_set_field_attr(entityName, fd, "FRM-CPIM-UBY", true, -1); ///// verificar con B?
                }
            }
            else {
                //////////////
            }
        }

        finSection("UNP-IKY-" + entityName);

        //

        iniSection("UNP-MKY-" + entityName);

        for (int i = 0; i < fields.size(); i++) {

            if (fields.get(i) instanceof FieldDef) {

                FieldDef fd = (FieldDef) fields.get(i);

                if (fd.modifier == FieldDef.MKY && FieldDef.absenceAttribute(fd.attributes, FieldDef.DISPLAY_ONLY_ATTR)) {
                    gen_set_field_attr(entityName, fd, "FRM-CPIM-UBY", false, -1);
                }
            }
            else {
                //////////////
            }
        }

        finSection("UNP-MKY-" + entityName);

        //

        iniSection("UNP-AKY-" + entityName);

        for (int i = 0; i < fields.size(); i++) {

            if (fields.get(i) instanceof FieldDef) {

                FieldDef fd = (FieldDef) fields.get(i);

                if (fd.modifier == FieldDef.AKY && FieldDef.absenceAttribute(fd.attributes, FieldDef.DISPLAY_ONLY_ATTR)) {
                    gen_set_field_attr(entityName, fd, "FRM-CPIM-UBY", true, -1);
                }
            }
            else {
                //////////////
            }
        }

        finSection("UNP-AKY-" + entityName);
    }

    /******************************************************************************
     * genPRO_FLD_entity
     ******************************************************************************/
    /**
     *
     * TODO_javadoc.
     *
     *
     * @param entityName TODO_javadoc.
     * @param fields TODO_javadoc.
     * @param subsystems TODO_javadoc.
     *
     * @since 1.0
     *
     */
    private static void genPRO_FLD_entity(String entityName, ArrayList<Object> fields, ArrayList<String> subsystems) {

        iniSection("PRO-FLD-" + entityName);

        for (int i = 0; i < fields.size(); i++) {

            if (fields.get(i) instanceof FieldDef) {

                FieldDef fd = (FieldDef) fields.get(i);

                if (fd.fmsname.substring(0, 3).equals(FieldDef.FRM) && FieldDef.absenceAttribute(fd.attributes, FieldDef.DISPLAY_ONLY_ATTR)) {
                    gen_set_field_attr(entityName, fd, "FRM-CPIM-AEY", false, -1);
                }
            }
            else {
                //////////////
            }
        }

        for (String subsys : subsystems) {

            if (!subsys.equals(FieldDef.FRM)) {
                gen.println("           PERFORM PRO-" + subsys + "-" + entityName + ".");
            }
        }

        finSection("PRO-FLD-" + entityName);
    }

    /******************************************************************************
     * genPRO_subsys_entity
     ******************************************************************************/
    /**
     *
     * TODO_javadoc.
     *
     *
     * @param subsys TODO_javadoc.
     * @param entityName TODO_javadoc.
     * @param fields TODO_javadoc.
     *
     * @since 1.0
     *
     */
    private static void genPRO_subsys_entity(String subsys, String entityName, ArrayList<Object> fields) {

        iniSection("PRO-" + subsys + "-" + entityName);

        ArrayList<Object>     vars  = getSubsysVarsFromFields(subsys, fields);
        ArrayList<ElementDef> array = null;

        for (int i = 0; i < vars.size(); i++) {

            if (vars.get(i) instanceof FieldDef) {

                FieldDef fd = (FieldDef) vars.get(i);

                if (Utils.searchIntInArray(fd.modifier, KEY_TYPES) < 0 && FieldDef.absenceAttribute(fd.attributes, FieldDef.DISPLAY_ONLY_ATTR)) {
                    gen_set_field_attr(entityName, fd, "FRM-CPIM-AEY", false, -1);
                }
            }
            else if (vars.get(i) instanceof ArrayList) {

                array = (ArrayList<ElementDef>) vars.get(i);

                for (int j = 0; j < array.size(); j++) {

                    for (int k = 0; k < array.get(j).index.size(); k++) {

                        if (Utils.searchIntInArray(array.get(j).field.modifier, KEY_TYPES) < 0 && FieldDef.absenceAttribute(array.get(j).field.attributes, FieldDef.DISPLAY_ONLY_ATTR)) {
                            gen_set_field_attr(entityName, array.get(j).field, "FRM-CPIM-AEY", false, k + 1);
                        }
                    }
                }
            }
       }

        finSection("PRO-" + subsys + "-" + entityName);
    }

    /******************************************************************************
     * genUNP_FLD_entity
     ******************************************************************************/
    /**
     *
     * TODO_javadoc.
     *
     *
     * @param entityName TODO_javadoc.
     * @param fields TODO_javadoc.
     * @param subsystems TODO_javadoc.
     *
     * @since 1.0
     *
     */
    private static void genUNP_FLD_entity(String entityName, ArrayList<Object> fields, ArrayList<String> subsystems) {

        iniSection("UNP-FLD-" + entityName);

        for (int i = 0; i < fields.size(); i++) {

            if (fields.get(i) instanceof FieldDef) {

                FieldDef fd = (FieldDef) fields.get(i);

                if (fd.fmsname.substring(0, 3).equals(FieldDef.FRM) && FieldDef.absenceAttribute(fd.attributes, FieldDef.DISPLAY_ONLY_ATTR)) {
                    gen_set_field_attr(entityName, fd, "FRM-CPIM-UBY", false, -1);
                }
            }
            else {
                //////////////
            }
        }

        for (String subsys : subsystems) {

            if (!subsys.equals(FieldDef.FRM)) {
                gen.println("           PERFORM UNP-" + subsys + "-" + entityName + ".");
            }
        }

        finSection("UNP-FLD-" + entityName);
    }

    /******************************************************************************
     * genUNP_subsys_entity
     ******************************************************************************/
    /**
     *
     * TODO_javadoc.
     *
     *
     * @param subsys TODO_javadoc.
     * @param entityName TODO_javadoc.
     * @param fields TODO_javadoc.
     *
     * @since 1.0
     *
     */
    private static void genUNP_subsys_entity(String subsys, String entityName, ArrayList<Object> fields) {

        iniSection("UNP-" + subsys + "-" + entityName);

        ArrayList<Object>     vars  = getSubsysVarsFromFields(subsys, fields);
        ArrayList<ElementDef> array = null;

        for (int i = 0; i < vars.size(); i++) {

            if (vars.get(i) instanceof FieldDef) {

                FieldDef fd = (FieldDef) vars.get(i);

                if (Utils.searchIntInArray(fd.modifier, KEY_TYPES) < 0 && FieldDef.absenceAttribute(fd.attributes, FieldDef.DISPLAY_ONLY_ATTR)) {
                    gen_set_field_attr(entityName, fd, "FRM-CPIM-UBY", false, -1);
                }
            }
            else if (vars.get(i) instanceof ArrayList) {

                array = (ArrayList<ElementDef>) vars.get(i);

                for (int j = 0; j < array.size(); j++) {

                    for (int k = 0; k < array.get(j).index.size(); k++) {

                        if (Utils.searchIntInArray(array.get(j).field.modifier, KEY_TYPES) < 0 && FieldDef.absenceAttribute(array.get(j).field.attributes, FieldDef.DISPLAY_ONLY_ATTR)) {
                            gen_set_field_attr(entityName, array.get(j).field, "FRM-CPIM-UBY", false, k + 1);
                        }
                    }
                }
            }
       }

        finSection("UNP-" + subsys + "-" + entityName);
    }

    /******************************************************************************
     * genVAL_KEY_entity
     ******************************************************************************/
    /**
     *
     * TODO_javadoc.
     *
     *
     * @param entityName TODO_javadoc.
     * @param fields TODO_javadoc.
     *
     * @since 1.0
     *
     */
    private static void genVAL_KEY_entity(String entityName, ArrayList<Object> fields,HashMap<String, Integer> gls ) {

        iniSection("VAL-KEY-" + entityName);

        gen.println("           PERFORM VAL-IKY-" + entityName + ".");
        gen.println("           PERFORM VAL-MKY-" + entityName + ".");
        gen.println("           PERFORM VAL-AKY-" + entityName + ".");

        finSection("VAL-KEY-" + entityName);

        //

        iniSection("VAL-IKY-" + entityName);

        for (int i = 0; i < fields.size(); i++) {

            if (fields.get(i) instanceof FieldDef) {

                FieldDef fd = (FieldDef) fields.get(i);

                if (fd.modifier == FieldDef.IKY) {
                    perform_and_validation(entityName, fd, "VAL-IKY", true, -1);
                }
            }
            else {
                //////////////
            }
        }

        finSection("VAL-IKY-" + entityName);

        //

        genVAL_MKY_entity(entityName, fields);

        //

        iniSection("VAL-AKY-" + entityName);

        for (int i = 0; i < fields.size(); i++) {

            if (fields.get(i) instanceof FieldDef) {

                FieldDef fd = (FieldDef) fields.get(i);

                if (fd.modifier == FieldDef.AKY) {
                    perform_and_validation(entityName, fd, "VAL-AKY", false, -1);
                }
            }
            else {
                //////////////
            }
        }

        finSection("VAL-AKY-" + entityName);

        //

        for (int i = 0; i < fields.size(); i++) {

            if (fields.get(i) instanceof FieldDef) {

                FieldDef fd = (FieldDef) fields.get(i);

                if (Utils.searchIntInArray(fd.modifier, KEY_TYPES) >= 0) {
                    genVAL_field(entityName, fd, -1, gls);
                }
            }
            else {
                //////////////
            }
        }
    }

    /******************************************************************************
     * perform_and_validation
     ******************************************************************************/
    /**
     *
     * TODO_javadoc.
     *
     *
     * @param entityName TODO_javadoc.
     * @param fd TODO_javadoc.
     * @param sectionName TODO_javadoc.
     * @param size TODO_javadoc.
     *
     * @since 1.0
     *
     */
    private static void perform_and_validation(String entityName, FieldDef fd, String sectionName, boolean withLineFeed, int size) {

        if (fd.replaced != null && fd.type != FieldDef.DATE) {

            for (FieldDef fr : fd.replaced) {
                perform_and_validation(entityName, fr, sectionName, true, size); /// verificar 'true'
            }
        }
        else {

            gen.print  ("           PERFORM VAL-" + fd.name);

            if (size != -1) {

                gen.println();
                gen.println("            VARYING FRM-IFLD FROM 1 BY 1 UNTIL FRM-IFLD > " + size);
                gen.println("                OR FRM-SUAR = FRM-SUAR-MAL");
                gen.println("                OR FRM-SUAR = FRM-SUAR-CLR.");
            }
            else {
                gen.println(".");
            }

            gen.println("           IF FRM-SUAR = FRM-SUAR-MAL OR FRM-SUAR = FRM-SUAR-CLR");

            if (size != -1) {
                gen.println("                SUBTRACT 1 FROM FRM-IFLD");
            }

          //if (withLineFeed) {
          //    gen.println("                MOVE FRM-IND-ERRO TO " + fd.name + "-LEN IN " + entityName + "-FLD" + (size != -1 ? "(FRM-IFLD)" : ""));
          //}
          //else {
                gen.println("                MOVE FRM-IND-ERRO TO " + fd.name + "-LEN IN " + entityName + "-FLD" + (size != -1 ? "(FRM-IFLD)" : ""));
          //}

            gen.println("                GO TO FIN-" + sectionName + "-" + entityName + ".");
        }
    }

    /******************************************************************************
     * genVAL_field
     ******************************************************************************/
    /**
     *
     * TODO_javadoc.
     *
     *
     * @param entityName TODO_javadoc.
     * @param fd TODO_javadoc.
     * @param size TODO_javadoc.
     *
     * @since 1.0
     *
     */
    private static void genVAL_field(String entityName, FieldDef fd, int size, HashMap<String, Integer> gls) {

        if (fd.replaced != null && fd.type != FieldDef.DATE) {

            for (FieldDef fr : fd.replaced) {
                genVAL_field(entityName, fr, size, gls);
            }
        }
        else {

            gen.println("       VAL-" + fd.name + " SECTION.");
            gen.println("       INI-VAL-" + fd.name + ".");

            //

            if (fd.type == FieldDef.DATE) {

                validation_response_required(entityName, fd, size);

                if (FieldDef.absenceAttribute(fd.attributes, FieldDef.DISPLAY_ONLY_ATTR)) {

                    gen.println("           MOVE " + fd.name + " IN " + entityName + "-FLD TO FEC-FECH.");
                    gen.println("           MOVE FEC-FORM-FEC TO FEC-FORM.");
                    gen.println("           MOVE FEC-FBLK-S  TO FEC-FBLK.");
                    gen.println("           MOVE FEC-CHOY-LE TO FEC-CHOY.");
                    gen.println("           MOVE FEC-VHBL-S TO FEC-VHBL.");
                }
            }

            String ident = "INI_" + fd.name.replace('-', '_');

            if (addit_hash.containsKey    (ident)) {
                gen.println(addit_hash.get(ident));
            }

            //

            if (FieldDef.absenceAttribute(fd.attributes, FieldDef.DISPLAY_ONLY_ATTR) && fd.special != FieldDef.GLS_IDC && fd.type != FieldDef.DATE) { //  &&
                validation_response_required(entityName, fd, size);
            }

            if (fd.special == FieldDef.GLS_IDC) {

                String glosaField = fd.name.substring(0, 3) + "-GLS-" + fd.name.substring(8);

                gen.println("           IF " + glosaField + " IN " + entityName + "-FLD NOT > IDC-INIC-GLS");
                gen.println("              MOVE IDC-INIC-GLS TO " + glosaField + " IN " + entityName + "-FLD.");
                gen.println("      *VAL-GLS para IDC valida glosa ( extension ) de identificador");
                gen.println("           MOVE " + glosaField + " IN " + entityName + "-FLD TO IDC-GLS-RUTV.");
                gen.println("           PERFORM VAL-GLS.");
                gen.println("           MOVE IDC-GLS-RUTV TO " + glosaField + " IN " + entityName + "-FLD.");
            }
            else if (fd.type == FieldDef.STRING && fd.special == FieldDef.VRF) {
           //     validation_response_required(entityName, fd, size);
           //OGB , se agrega validacion de VAL-RUT 	
                gen.println("      *VAL-RUT Valida Rut para campo IDC");
                gen.println("           MOVE IDC-ZERO-S TO IDC-ZERO.");
                gen.println("           MOVE " + fd.name.substring(0, 3) + "-NUM-" + fd.name.substring(8) + " IN " + entityName + "-FLD TO IDC-NUM-RUTV.");
                gen.println("           MOVE " + fd.name + " IN " + entityName + "-FLD TO IDC-VRF-RUTV.");
                gen.println("           PERFORM VAL-RUT.");
            }
            else if (fd.type == FieldDef.STRING && fd.special == FieldDef.IDC) {
            	
                gen.println("      *VAL-IDC Valida identificador");
                gen.println("           MOVE "+ fd.name +" IN " + entityName + "-FLD TO IDC-IND-RUTV.");
                gen.println("           PERFORM VAL-IDC.");
                gen.println("           MOVE IDC-IND-RUTV TO "+ fd.name +" IN " + entityName + "-FLD.");
            	
            }
            // probando ...

            //String ident = "INI_" + fd.name.replace('-', '_');
            //
            //if (addit_hash.containsKey    (ident)) {
            //    gen.println(addit_hash.get(ident));
            //}

            //

            if (fd.type == FieldDef.DATE) {

                if (FieldDef.absenceAttribute(fd.attributes, FieldDef.DISPLAY_ONLY_ATTR)) {

                    gen.println("           MOVE FEC-VAL-FEC TO FEC-CMND.");
                    gen.println("           PERFORM PRO-FEC.");
                    gen.println("           IF FEC-STAT-OKS");
                    gen.println("               MOVE FEC-FECH TO " + fd.name + " IN " + entityName + "-FLD");
                    gen.println("           ELSE");
                    gen.println("               MOVE FRM-SUAR-MAL TO FRM-SUAR");
                    gen.println("               MOVE FEC-MENS     TO FRM-MENS");
                    gen.println("               GO TO FIN-VAL-" + fd.name + ".");
                }
            }

            //

            ident = fd.name.replace('-', '_');

            if (addit_hash.containsKey    (ident)) {
                gen.println(addit_hash.get(ident));
            }

            //

            if (FieldDef.absenceAttribute(fd.attributes, FieldDef.DISPLAY_ONLY_ATTR) && fd.special != FieldDef.GLS_IDC) {
                domain_range_validation_search(entityName, fd, size, gls, "VAL");
            }

            //

            //if (fd.fmsname.substring(3, 8).equals("_COD_")) { ///////// validar
            //    domain_range_validation_search(entityName, fd, -1, gls, "VAL");
           // }

            //

            finSection("VAL-" + fd.name, "FIN_" + fd.name.replace('-', '_'));
        }
    }

    /******************************************************************************
     * domain_range_validation_search
     ******************************************************************************/
    /**
     *
     * TODO_javadoc.
     *
     *
     * @param entityName TODO_javadoc.
     * @param fd TODO_javadoc.
     * @param size TODO_javadoc.
     *
     * @since 1.0
     *
     */
    private static void domain_range_validation_search(String entityName, FieldDef fd, int size, HashMap<String, Integer> gls,  String sectionType) {


        //ogb-ini
        
        if ( ranges_hash.containsKey(fd.name)) {

            DomainRangeDef range = ranges_hash.get(fd.name);

            //logger.debug("range (" + fd.name + ") --> domain : '" + range.getDomain() + "'");

            if (domains_hash.containsKey(range.getDomain())) {

                DomainRangeDef domain = domains_hash.get(range.getDomain());

              //logger.debug("domain (" + range.getDomain() + ") --> validation : '" + domain.getValidation() + "'");

                ////////////////////////////////////////////////
                //si esta formando secciones PUT y el campo posee glosa tipo FRM-GLS-
                if (sectionType.equals("PUT") && gls.containsKey(fd.name.substring(8,12))) {
                
	                if (range.getSearch().equals("BUSTAB") /*&&*/|| domain.getSearch().equals("BUSTAB")) {
	
                        gen.println("      *BUS-TAB busca glosa de codigo en tabla");
	                	
	                    switch (fd.type) {
	
	                    case FieldDef.INTEGER :
	                    case FieldDef.LONG :
	                    case FieldDef.DOUBLE :
	                    case FieldDef.DATE :
	
	                        gen.println("           IF " + fd.name + " IN " + entityName + "-FLD > ZEROES");
	
	                        break;
	
	                    case FieldDef.CHAR :
	                    case FieldDef.BOOLEAN :
	                    case FieldDef.STRING :
	
	                        gen.println("           IF " + fd.name + " IN " + entityName + "-FLD > SPACES");
	
	                        break;
	                    }
	
	                    gen.println("               MOVE '" + domain.getSystem() + "' TO TAB-COD-SIST");
	                    gen.println("               MOVE '" + domain.getTable()  + "' TO TAB-COD-TTAB IN TAB");
	                    gen.println("               MOVE " + fd.name + " IN " + entityName + "-FLD TO TAB-COD-CTAB IN TAB");
	                    gen.println("               PERFORM BUS-TAB");
	                    
	                    int glsSize = gls.get(fd.name.substring(8,12));
	                    
	                    if (glsSize == 0 || glsSize > 12)
		                    gen.println("               MOVE TAB-GLS-DESC IN TAB TO");
	                    else if(glsSize > 5)
		                    gen.println("               MOVE TAB-GLS-DCOR IN TAB TO");
	                    else 
		                    gen.println("               MOVE TAB-GLS-ABRV IN TAB TO");
	                    
	                    gen.println("                    FRM-GLS-" + fd.name.substring(8) + " IN " + entityName + "-FLD");            // revisar que exista el campo FRM-GLS-" + fd.name.substring(8) //  && existField("FRM-GLS-" + fd.name.substring(8))
	                    gen.println("           ELSE");
	                    gen.println("               MOVE SPACES TO FRM-GLS-" + fd.name.substring(8) + " IN " + entityName + "-FLD."); // revisar que exista el campo FRM-GLS-" + fd.name.substring(8) //  && existField("FRM-GLS-" + fd.name.substring(8))
	                }
	                
	                if (range.getSearch().equals("BUSMSC") /*&&*/|| domain.getSearch().equals("BUSMSC")) { ///// verificar
	                	
                        gen.println("      *BUS-MSC busca glosa de miscelaneo en tabla");
	                    gen.println("           IF " + fd.name + " IN " + entityName + "-FLD > SPACES");
		                gen.println("               MOVE '" + domain.getSystem() + "' TO MSC-COD-SIST");
	                    gen.println("               MOVE '" + domain.getTable()  + "' TO MSC-COD-TMSC IN MSC");
	                    gen.println("               MOVE " + fd.name + " IN " + entityName + "-FLD TO MSC-COD-CMSC IN MSC");
	                    gen.println("               PERFORM BUS-MSC");
	                    
	                    int glsSize = gls.get(fd.name.substring(8,12));
	                    
	                    if (glsSize == 0 || glsSize > 12)
		                    gen.println("               MOVE MSC-GLS-DESC IN MSC TO");
	                    else if(glsSize > 5)
		                    gen.println("               MOVE MSC-GLS-DCOR IN MSC TO");
	                    else 
		                    gen.println("               MOVE MSC-GLS-ABRV IN MSC TO");
	                    
	                    gen.println("                    FRM-GLS-" + fd.name.substring(8) + " IN " + entityName + "-FLD"); 
	                    gen.println("           ELSE");
	                    gen.println("               MOVE SPACES TO"); 
	                    gen.println("                    FRM-GLS-" + fd.name.substring(8) + " IN " + entityName + "-FLD.");

	                }
	                if (range.getSearch().equals("BUSOFI") /*&&*/|| domain.getSearch().equals("BUSOFI")) {
	                	
                        gen.println("      *BUS-OFI busca oficina en tablas");
	                    gen.println("           IF " + fd.name + " IN " + entityName + "-FLD > SPACES");
	                    gen.println("               MOVE " + fd.name + " IN " + entityName + "-FLD TO OFI-COD-OFIC IN OFI");
	                    gen.println("               PERFORM BUS-OFI");
	                    
	                    int glsSize = gls.get(fd.name.substring(8,12));
	                    
	                    if (glsSize == 0 || glsSize > 5)
		                    gen.println("               MOVE OFI-GLS-DESC IN OFI TO FRM-GLS-" + fd.name.substring(8) + " IN " + entityName + "-FLD");
	                    else 
		                    gen.println("               MOVE OFI-GLS-ABRV IN OFI TO FRM-GLS-" + fd.name.substring(8) + " IN " + entityName + "-FLD");
	                    gen.println("           ELSE");
	                    gen.println("               MOVE SPACES TO FRM-GLS-" + fd.name.substring(8) + " IN " + entityName + "-FLD."); 

	                }
	                if (range.getSearch().equals("BUSUSR") /*&&*/|| domain.getSearch().equals("BUSUSR")) {
	                	
                        gen.println("      *BUS-USR busca usuario en tablas");
	                    gen.println("           IF " + fd.name + " IN " + entityName + "-FLD > SPACES");
	                    gen.println("               MOVE " + fd.name + " IN " + entityName + "-FLD TO USR-COD-USER IN USR");
	                    gen.println("               PERFORM BUS-USR");
	                    
	                    int glsSize = gls.get(fd.name.substring(8,12));
	                    
	                    if (glsSize == 0 || glsSize > 12)
		                    gen.println("               MOVE USR-GLS-DESC IN USR TO FRM-GLS-" + fd.name.substring(8) + " IN " + entityName + "-FLD");
	                    else if(glsSize > 5)
		                    gen.println("               MOVE USR-GLS-DCOR IN USR TO FRM-GLS-" + fd.name.substring(8) + " IN " + entityName + "-FLD");
	                    else 
		                    gen.println("               MOVE USR-GLS-ABRV IN USR TO FRM-GLS-" + fd.name.substring(8) + " IN " + entityName + "-FLD");
	                    gen.println("           ELSE");
	                    gen.println("               MOVE SPACES TO FRM-GLS-" + fd.name.substring(8) + " IN " + entityName + "-FLD."); 

	                }
                }
                else if (sectionType.equals("VAL")) {
                	if (domain.getValidation().equals("VALCOD")) {
                		
                        gen.println("      *VAL-COD Valida codigo de tabla");
                        gen.println("           MOVE '" + domain.getSystem() + "' TO TAB-COD-SIST.");
                        gen.println("           MOVE '" + domain.getTable() +  "' TO TAB-COD-TTAB IN TAB.");
                        gen.println("           MOVE " + fd.name + " IN " + entityName + "-FLD" + (size != -1 ? "(FRM-IFLD)" : "") + " TO TAB-COD-CTAB IN TAB.");
                        gen.println("           PERFORM VAL-COD.");
                        
                        if(gls.containsKey(fd.name.substring(8,12))) {
                        	
    	                    int glsSize = gls.get(fd.name.substring(8,12));
                        	
                            gen.println("           IF MSG-COD-MENS = 'COD    NEX' OR");
    	                    gen.println("             " + fd.name + " IN " + entityName + "-FLD NOT > SPACES");
    	                    gen.println("               MOVE SPACES TO FRM-GLS-" + fd.name.substring(8) + " IN " + entityName + "-FLD");
    	                    gen.println("           ELSE");
    	                    if (glsSize == 0 || glsSize > 12) 
    	                    	gen.println("               MOVE TAB-GLS-DESC IN TAB TO");
    	                    else if (glsSize > 5)
    	                    	gen.println("               MOVE TAB-GLS-DCOR IN TAB TO");
    	                    else
    	                    	gen.println("               MOVE TAB-GLS-ABRV IN TAB TO");
    	                    
	                    	gen.println("                   FRM-GLS-"+ fd.name.substring(8) + " IN " + entityName + "-FLD.");
    	                    
                        }
                	}
                	if (domain.getValidation().equals("VALIND")) {

                        gen.println("      *VAL-IND Valida miscelaneo de tabla");
                        gen.println("           MOVE '" + domain.getSystem() + "' TO MSC-COD-SIST.");
                        gen.println("           MOVE '" + domain.getTable() +  "' TO MSC-COD-TMSC IN MSC.");
                        gen.println("           MOVE " + fd.name + " IN " + entityName + "-FLD" + (size != -1 ? "(FRM-IFLD)" : "") + " TO MSC-COD-CMSC IN MSC.");
                        gen.println("           PERFORM VAL-IND.");
                        
                        if(gls.containsKey(fd.name.substring(8,12))) {
                        	
    	                    int glsSize = gls.get(fd.name.substring(8,12));
                        	
                            gen.println("           IF MSG-COD-MENS = 'COD    NEX' OR");
    	                    gen.println("             " + fd.name + " IN " + entityName + "-FLD NOT > SPACES");
    	                    gen.println("               MOVE SPACES TO FRM-GLS-" + fd.name.substring(8) + " IN " + entityName + "-FLD");
    	                    gen.println("           ELSE");
    	                    if (glsSize == 0 || glsSize > 12) 
    	                    	gen.println("               MOVE MSC-GLS-DESC IN MSC TO");
    	                    else if (glsSize > 5)
    	                    	gen.println("               MOVE MSC-GLS-DCOR IN MSC TO");
    	                    else
    	                    	gen.println("               MOVE MSC-GLS-ABRV IN MSC TO");
    	                    
	                    	gen.println("                   FRM-GLS-"+ fd.name.substring(8) + " IN " + entityName + "-FLD.");
                        
                        }
                	}
                	if (domain.getValidation().equals("VALOFI")) {
                        gen.println("      *VAL-OFI Valida codigo de Oficina en TABLAS");
                        gen.println("           MOVE " + fd.name + " IN " + entityName + "-FLD" + (size != -1 ? "(FRM-IFLD)" : "") + " TO OFI-COD-OFIC IN OFI.");
                        gen.println("           PERFORM VAL-OFI.");
                        gen.println("           IF MSG-COD-MENS NOT = SPACES");
                        gen.println("               MOVE MSG-GLS-DESC TO FRM-MENS");
                        gen.println("               MOVE FRM-SUAR-MAL TO FRM-SUAR.");
                        if(gls.containsKey(fd.name.substring(8,12))) {
    	                    int glsSize = gls.get(fd.name.substring(8,12));
                        	
                            gen.println("           IF MSG-COD-MENS = 'COD    NEX'");
    	                    gen.println("               MOVE SPACES TO FRM-GLS-" + fd.name.substring(8) + " IN " + entityName + "-FLD");
    	                    gen.println("           ELSE");
    	                    if (glsSize == 0 || glsSize > 5)
    	                    	gen.println("           MOVE OFI-GLS-DESC IN OFI TO FRM-GLS-"+ fd.name.substring(8) + " IN " + entityName + "-FLD.");
    	                    else
    	                    	gen.println("           MOVE OFI-GLS-ABRV IN OFI TO FRM-GLS-"+ fd.name.substring(8) + " IN " + entityName + "-FLD.");
                        }
                        
                	}
                	if (domain.getValidation().equals("VALUSR")) {
                        gen.println("      *VAL-USR Valida Usuario");
                        gen.println("           MOVE " + fd.name + " IN " + entityName + "-FLD" + (size != -1 ? "(FRM-IFLD)" : "") + " TO USR-COD-USER IN USR.");
                        gen.println("           PERFORM VAL-USR.");
                        gen.println("           IF MSG-COD-MENS > SPACES");
                        gen.println("               MOVE MSG-GLS-DESC TO FRM-MENS");
                        gen.println("               MOVE FRM-SUAR-MAL TO FRM-SUAR.");
                        if(gls.containsKey(fd.name.substring(8,12))) {
    	                    int glsSize = gls.get(fd.name.substring(8,12));
                        	
                            gen.println("           IF MSG-COD-MENS = 'COD    NEX'");
    	                    if (glsSize == 0 || glsSize > 12)
    	                    	gen.println("           MOVE USR-GLS-DESC IN USR TO FRM-GLS-"+ fd.name.substring(8) + " IN " + entityName + "-FLD.");
    	                    else if (glsSize > 5)
    	                    	gen.println("           MOVE USR-GLS-DCOR IN USR TO FRM-GLS-"+ fd.name.substring(8) + " IN " + entityName + "-FLD.");
    	                    else
    	                    	gen.println("           MOVE USR-GLS-ABRV IN USR TO FRM-GLS-"+ fd.name.substring(8) + " IN " + entityName + "-FLD.");
                            gen.println("           ELSE");
    	                    gen.println("               MOVE SPACES TO FRM-GLS-" + fd.name.substring(8) + " IN " + entityName + "-FLD");

                        }
                	}
                	if (domain.getValidation().equals("VALTDU")) {
                        gen.println("      *VAL-TDU Valida Tipo de Usuario");
                        gen.println("           MOVE '" + domain.getTable() +  "'        TO USR-COD-TTAB IN USR.");
                        gen.println("           MOVE " + fd.name + " IN " + entityName + "-FLD" + (size != -1 ? "(FRM-IFLD)" : "") + " TO USR-COD-USER IN USR.");
                        gen.println("           PERFORM VAL-TDU.");
                        gen.println("           IF MSG-COD-MENS > SPACES");
                        gen.println("               MOVE MSG-GLS-DESC TO FRM-MENS");
                        gen.println("               MOVE FRM-SUAR-MAL TO FRM-SUAR.");
                        if(gls.containsKey(fd.name.substring(8,12))) {
    	                    int glsSize = gls.get(fd.name.substring(8,12));
                            gen.println("           IF MSG-COD-MENS = 'COD    NEX' AND");
    	                    gen.println("             " + fd.name + " IN " + entityName + "-FLD > SPACES");
    	                    if (glsSize == 0 || glsSize > 12)
    	                    	gen.println("           MOVE USR-GLS-DESC IN USR TO FRM-GLS-"+ fd.name.substring(8) + " IN " + entityName + "-FLD.");
    	                    else if (glsSize > 5)
    	                    	gen.println("           MOVE USR-GLS-DCOR IN USR TO FRM-GLS-"+ fd.name.substring(8) + " IN " + entityName + "-FLD.");
    	                    else
    	                    	gen.println("           MOVE USR-GLS-ABRV IN USR TO FRM-GLS-"+ fd.name.substring(8) + " IN " + entityName + "-FLD.");
                            gen.println("           ELSE");
    	                    gen.println("               MOVE SPACES TO FRM-GLS-" + fd.name.substring(8) + " IN " + entityName + "-FLD");
                        }
                        
                	}
                	
                
                }
                
            }

        	
        }
        //ogb-fin
        
        
        //


    }

    /******************************************************************************
     * validation_response_required
     ******************************************************************************/
    /**
     *
     * TODO_javadoc.
     *
     *
     * @param entityName TODO_javadoc.
     * @param fd TODO_javadoc.
     * @param size TODO_javadoc.
     *
     * @since 1.0
     *
     */
    private static void validation_response_required(String entityName, FieldDef fd, int size) {

        switch (fd.type) {

        case FieldDef.INTEGER :
        case FieldDef.LONG :
        case FieldDef.DOUBLE :
        case FieldDef.DATE :

            if (FieldDef.hasAttribute(fd.attributes, FieldDef.RESPONSE_REQUIRED_ATTR)) {

                gen.println("           IF " + fd.name + " IN " + entityName + "-FLD" + (size != -1 ? "(FRM-IFLD)" : "") + " = ZEROES");
                gen.println("                PERFORM ERR-GLS");
                gen.println("                GO TO FIN-VAL-" + fd.name + ".");
            }
            else {

                gen.println("           IF " + fd.name + " IN " + entityName + "-FLD" + (size != -1 ? "(FRM-IFLD)" : "") + " NOT > ZEROES");
                gen.println("              MOVE ZEROES TO " + fd.name + " IN " + entityName + "-FLD" + (size != -1 ? "(FRM-IFLD)" : "") + ".");
            }

            break;

        case FieldDef.CHAR :
        case FieldDef.BOOLEAN :
        case FieldDef.STRING :

            if (FieldDef.hasAttribute(fd.attributes, FieldDef.RESPONSE_REQUIRED_ATTR)) {

                gen.println("           IF " + fd.name + " IN " + entityName + "-FLD" + (size != -1 ? "(FRM-IFLD)" : "") + " NOT > SPACES"); // 1902_06 02 07 diff liq.docx (mail 03-09-2019 18:49)
                gen.println("                PERFORM ERR-GLS");
                gen.println("                GO TO FIN-VAL-" + fd.name + ".");
            }
            else {

                gen.println("           IF " + fd.name + " IN " + entityName + "-FLD" + (size != -1 ? "(FRM-IFLD)" : "") + " NOT > SPACES");
                gen.println("              MOVE SPACES TO " + fd.name + " IN " + entityName + "-FLD" + (size != -1 ? "(FRM-IFLD)" : "") + ".");
            }

            break;
        }
    }

    /******************************************************************************
     * genVAL_MKY_entity
     ******************************************************************************/
    /**
     *
     * TODO_javadoc.
     *
     *
     * @param entityName TODO_javadoc.
     * @param fields TODO_javadoc.
     *
     * @since 1.0
     *
     */
    private static void genVAL_MKY_entity(String entityName, ArrayList<Object> fields) {

        iniSection("VAL-MKY-" + entityName);

        for (int i = 0; i < fields.size(); i++) {

            if (fields.get(i) instanceof FieldDef) {

                FieldDef fd = (FieldDef) fields.get(i);

                if (fd.modifier == FieldDef.MKY && action == BQ_ACTION) {
                    perform_and_validation(entityName, fd, "VAL-MKY", true, -1);
                }
            }
            else {
                //////////////
            }
        }

        finSection("VAL-MKY-" + entityName);
    }

    /******************************************************************************
     * genVAL_CON_KEY_entity
     ******************************************************************************/
    /**
     *
     * TODO_javadoc.
     *
     *
     * @param entityName TODO_javadoc.
     * @param fields TODO_javadoc.
     *
     * @since 1.0
     *
     */
    private static void genVAL_CON_KEY_entity(String entityName, ArrayList<Object> fields) {

        iniSection("VAL-CON-KEY-" + entityName);

        boolean first = true;

        for (int i = 0; i < fields.size(); i++) {

            if (fields.get(i) instanceof FieldDef) {

                FieldDef fd = (FieldDef) fields.get(i);

                first = gen_cond_val_key(entityName, fd, first, KEY_TYPES);
            }
            else {
                //////////////
            }
        }

        gen.println("                PERFORM ERR-KEY");
        gen.println("                PERFORM FST-KEY-" + entityName + ".");

        finSection("VAL-CON-KEY-" + entityName);
    }

    /******************************************************************************
     * gen_cond_val_key
     ******************************************************************************/
    /**
     *
     * TODO_javadoc.
     *
     *
     * @param entityName TODO_javadoc.
     * @param fd TODO_javadoc.
     * @param first TODO_javadoc.
     *
     * @since 1.0
     *
     */
    private static boolean gen_cond_val_key(String entityName, FieldDef fd, boolean first, int[] keys) {

        if (fd.replaced != null) {

            for (FieldDef fr : fd.replaced) {
                first = gen_cond_val_key(entityName, fr, first, keys);
            }
        }
        else {

            if (Utils.searchIntInArray(fd.modifier, keys) >= 0) {

                if (first) {

                    gen.print  ("           IF    ");

                    first = false;
                }
                else {
                    gen.print  ("              AND");
                }

                //

                switch (fd.type) {

                case FieldDef.INTEGER :
                case FieldDef.LONG :
                case FieldDef.DOUBLE :
                case FieldDef.DATE :

                    gen.println(" " + fd.name + " IN " + entityName + "-FLD NOT > ZEROES");

                    break;

                case FieldDef.CHAR :
                case FieldDef.BOOLEAN :
                case FieldDef.STRING :

                    if (fd.special == FieldDef.GLS_IDC) {
                        gen.println(" " + fd.name + " IN " + entityName + "-FLD NOT > IDC-INIC-GLS");
                    }
                    else {
                        gen.println(" " + fd.name + " IN " + entityName + "-FLD NOT > SPACES");
                    }

                    break;
                }
            }
        }

        return first;
    }

    /******************************************************************************
     * genVAL_CON_IKY_entity
     ******************************************************************************/
    /**
     *
     * TODO_javadoc.
     *
     *
     * @param entityName TODO_javadoc.
     * @param fields TODO_javadoc.
     *
     * @since 1.0
     *
     */
    private static void genVAL_CON_IKY_entity(String entityName, ArrayList<Object> fields) {

        iniSection("VAL-CON-IKY-" + entityName);

        boolean first = true;

        for (int i = 0; i < fields.size(); i++) {

            if (fields.get(i) instanceof FieldDef) {

                FieldDef fd = (FieldDef) fields.get(i);

                first = gen_cond_val_key(entityName, fd, first, new int[] { FieldDef.IKY });
            }
            else {
                //////////////
            }
        }

        gen.println("                PERFORM ERR-KEY");
        gen.println("                PERFORM FST-KEY-" + entityName + ".");

        finSection("VAL-CON-IKY-" + entityName);
    }

    /******************************************************************************
     * genVAL_NUM_KEY_entity
     ******************************************************************************/
    /**
     *
     * TODO_javadoc.
     *
     *
     * @param entityName TODO_javadoc.
     * @param fields TODO_javadoc.
     *
     * @since 1.0
     *
     */
    private static void genVAL_NUM_KEY_entity(String entityName, ArrayList<Object> fields) {

        iniSection("VAL-NUM-KEY-" + entityName);

        gen.println("           PERFORM VAL-NUM-IKY-" + entityName + ".");
        gen.println("           PERFORM VAL-NUM-MKY-" + entityName + ".");
        gen.println("           PERFORM VAL-NUM-AKY-" + entityName + ".");

        finSection("VAL-NUM-KEY-" + entityName);

        //

        iniSection("VAL-NUM-IKY-" + entityName);

        for (int i = 0; i < fields.size(); i++) {

            if (fields.get(i) instanceof FieldDef) {

                FieldDef fd = (FieldDef) fields.get(i);

                if (fd.modifier == FieldDef.IKY) {

                    switch (fd.type) {

                    case FieldDef.INTEGER :
                    case FieldDef.LONG :
                    case FieldDef.DOUBLE :
                  //case FieldDef.DATE : // TODO_ALA: revisar

                        gen_num_validation(entityName, fd, "VAL-NUM-IKY", -1);

                        break;
                    }
                    
                    if (fd.replaced != null && fd.special == FieldDef.VRF) {
                        for (FieldDef fr : fd.replaced) {
                        	
                            switch (fr.type) {

                            case FieldDef.INTEGER :
                            case FieldDef.LONG :
                            case FieldDef.DOUBLE :

                                gen_num_validation(entityName, fr, "VAL-NUM-MKY", -1);

                                break;
                            }
                        }
                    }
                }
            }
            else {
                //////////////
            }
        }

        finSection("VAL-NUM-IKY-" + entityName);

        //

        iniSection("VAL-NUM-MKY-" + entityName);

        for (int i = 0; i < fields.size(); i++) {

            if (fields.get(i) instanceof FieldDef) {

                FieldDef fd = (FieldDef) fields.get(i);

                if (fd.modifier == FieldDef.MKY) {

                    switch (fd.type) {

                    case FieldDef.INTEGER :
                    case FieldDef.LONG :
                    case FieldDef.DOUBLE :
                  //case FieldDef.DATE : // TODO_ALA: revisar

                        gen_num_validation(entityName, fd, "VAL-NUM-MKY", -1);

                        break;
                    }
                    
                    if (fd.replaced != null && fd.special == FieldDef.VRF) {
                        for (FieldDef fr : fd.replaced) {
                        	
                            switch (fr.type) {

                            case FieldDef.INTEGER :
                            case FieldDef.LONG :
                            case FieldDef.DOUBLE :

                                gen_num_validation(entityName, fr, "VAL-NUM-MKY", -1);

                                break;
                            }
                        }
                    }
                    
                }
                
            }
            else {
                //////////////
            }
        }
        
        finSection("VAL-NUM-MKY-" + entityName);

        //

        iniSection("VAL-NUM-AKY-" + entityName);

        for (int i = 0; i < fields.size(); i++) {

            if (fields.get(i) instanceof FieldDef) {

                FieldDef fd = (FieldDef) fields.get(i);

                if (fd.modifier == FieldDef.AKY) {

                    switch (fd.type) {

                    case FieldDef.INTEGER :
                    case FieldDef.LONG :
                    case FieldDef.DOUBLE :
                  //case FieldDef.DATE : // TODO_ALA: revisar

                        gen_num_validation(entityName, fd, "VAL-NUM-AKY", -1);

                        break;
                    }
                    
                    if (fd.replaced != null && fd.special == FieldDef.VRF) {
                        for (FieldDef fr : fd.replaced) {
                        	
                            switch (fr.type) {

                            case FieldDef.INTEGER :
                            case FieldDef.LONG :
                            case FieldDef.DOUBLE :

                                gen_num_validation(entityName, fr, "VAL-NUM-MKY", -1);

                                break;
                            }
                        }
                    }
                }
            }
            else {
                //////////////
            }
        }

        finSection("VAL-NUM-AKY-" + entityName);

    }

    /******************************************************************************
     * gen_num_validation
     ******************************************************************************/
    /**
     *
     * TODO_javadoc.
     *
     *
     * @param entityName TODO_javadoc.
     * @param fd TODO_javadoc.
     * @param sectionName TODO_javadoc.
     * @param idx TODO_javadoc.
     *
     * @since 1.0
     *
     */
    private static void gen_num_validation(String entityName, FieldDef fd, String sectionName, int idx) {

        gen.println("       VAL-NUM-" + fd.name + (idx != -1 ? "-" + idx : "") + ".");
        gen.println("           MOVE " + fd.name + "-ALF IN " + entityName + "-FLD" + (idx != -1 ? "(" + idx + ")" : "") + " TO NUM-NUME.");
        gen.println("           MOVE NUM-ZERO-S TO NUM-ZERO."); // TODO_ALA: revisar
        gen.println("           MOVE NUM-SGNO-" + (fd.sign ? "S" : "N") + " TO NUM-SGNO.");
        gen.println("           MOVE " + (fd.sign ? fd.integers - 1 : fd.integers) + " TO NUM-NENT.");
        gen.println("           MOVE " + fd.decimals +                               " TO NUM-NDCM.");
        gen.println("           PERFORM VAL-NUM.");
        gen.println("           IF NUM-STAT-OKS");
        gen.println("                MOVE NUM-N" + (fd.sign ? "S" : "N") + "9" + (fd.decimals == 0 ? "N" : "V") + " TO " + fd.name + " IN " + entityName + "-FLD" + (idx != -1 ? "(" + idx + ")" : ""));
        gen.println("           ELSE");
        gen.println("                MOVE NUM-MENS     TO FRM-MENS");
        gen.println("                MOVE FRM-SUAR-MAL TO FRM-SUAR");
        gen.println("                MOVE -9 TO " + fd.name + "-LEN IN " + entityName + "-FLD" + (idx != -1 ? "(" + idx + ")" : ""));
        gen.println("                GO TO FIN-" + sectionName + "-" + entityName + ".");
    }

    /******************************************************************************
     * genVAL_NUM_FLD_entity
     ******************************************************************************/
    /**
     *
     * TODO_javadoc.
     *
     *
     * @param entityName TODO_javadoc.
     * @param fields TODO_javadoc.
     *
     * @since 1.0
     *
     */
    private static void genVAL_NUM_FLD_entity(String entityName, ArrayList<Object> fields) {

        iniSection("VAL-NUM-FLD-" + entityName);

        ArrayList<ElementDef> array = null;

        for (int i = 0; i < fields.size(); i++) {

            if (fields.get(i) instanceof FieldDef) {

                FieldDef fd = (FieldDef) fields.get(i);

                val_numerica(entityName, fd, -1);
            }
            else if (fields.get(i) instanceof ArrayList) {

                array = (ArrayList<ElementDef>) fields.get(i);

                for (int j = 0; j < array.size(); j++) {

                    if (array.get(j).field.name.substring(0, 3).equals(FieldDef.FRM)) {

                        if (array.get(j).field.special != FieldDef.FEC) {

                            for (int k = 0; k < array.get(j).index.size(); k++) {
                                val_numerica(entityName, array.get(j).field, k + 1);
                            }
                        }
                    }
                }
            }
        }

        finSection("VAL-NUM-FLD-" + entityName);
    }

    /******************************************************************************
     * val_numerica
     ******************************************************************************/
    /**
     *
     * TODO_javadoc.
     *
     *
     * @param entityName TODO_javadoc.
     * @param fd TODO_javadoc.
     * @param idx TODO_javadoc.
     *
     * @since 1.0
     *
     */
    private static void val_numerica(String entityName, FieldDef fd, int idx) {

        if (fd.replaced != null && fd.type != FieldDef.DATE) {

            for (FieldDef fr : fd.replaced) {
                val_numerica(entityName, fr, idx);
            }
        }
        else {

            if (Utils.searchIntInArray(fd.modifier, KEY_TYPES) < 0) {

                switch (fd.type) {

                case FieldDef.INTEGER :
                case FieldDef.LONG :
                case FieldDef.DOUBLE :
              //case FieldDef.DATE : // TODO_ALA: revisar

                    gen_num_validation(entityName, fd, "VAL-NUM-FLD", idx);

                    break;
                }
            }
        }
    }

    /******************************************************************************
     * genEDT_KEY_entity
     ******************************************************************************/
    /**
     *
     * TODO_javadoc.
     *
     *
     * @param entityName TODO_javadoc.
     * @param fields TODO_javadoc.
     *
     * @since 1.0
     *
     */
    private static void genEDT_KEY_entity(String entityName, ArrayList<Object> fields) {

        iniSection("EDT-KEY-" + entityName);

        gen.println("           PERFORM EDT-IKY-" + entityName + ".");
        gen.println("           PERFORM EDT-MKY-" + entityName + ".");
        gen.println("           PERFORM EDT-AKY-" + entityName + ".");

        finSection("EDT-KEY-" + entityName);

        //

        iniSection("EDT-IKY-" + entityName);

        for (int i = 0; i < fields.size(); i++) {

            if (fields.get(i) instanceof FieldDef) {

                FieldDef fd = (FieldDef) fields.get(i);

                if (fd.modifier == FieldDef.IKY) {

                    switch (fd.type) {

                    case FieldDef.INTEGER :
                    case FieldDef.LONG :
                    case FieldDef.DOUBLE :
                  //case FieldDef.DATE : // TODO_ALA: revisar

                        prepare_num_edition(entityName, fd, "EDT-IKY", -1);

                        break;
                    }
                    
                    if (fd.replaced != null && fd.special == FieldDef.VRF) {
                        for (FieldDef fr : fd.replaced) {
                        	
                            switch (fr.type) {

                            case FieldDef.INTEGER :
                            case FieldDef.LONG :
                            case FieldDef.DOUBLE :

                            	prepare_num_edition(entityName, fr, "EDT-MKY", -1);

                                break;
                            }
                        }
                    }
                }
            }
            else {
                //////////////
            }
        }

        finSection("EDT-IKY-" + entityName);

        //

        iniSection("EDT-MKY-" + entityName);

        for (int i = 0; i < fields.size(); i++) {

            if (fields.get(i) instanceof FieldDef) {

                FieldDef fd = (FieldDef) fields.get(i);

                if (fd.modifier == FieldDef.MKY) {

                    switch (fd.type) {

                    case FieldDef.INTEGER :
                    case FieldDef.LONG :
                    case FieldDef.DOUBLE :
                  //case FieldDef.DATE : // TODO_ALA: revisar

                        prepare_num_edition(entityName, fd, "EDT-MKY", -1);

                        break;
                    }
                    
                    if (fd.replaced != null && fd.special == FieldDef.VRF) {
                        for (FieldDef fr : fd.replaced) {
                        	
                            switch (fr.type) {

                            case FieldDef.INTEGER :
                            case FieldDef.LONG :
                            case FieldDef.DOUBLE :

                            	prepare_num_edition(entityName, fr, "EDT-MKY", -1);

                                break;
                            }
                        }
                    }
                    
                    
                }
            }
            else {
                //////////////
            }
        }

        finSection("EDT-MKY-" + entityName);

        //

        iniSection("EDT-AKY-" + entityName);

        for (int i = 0; i < fields.size(); i++) {

            if (fields.get(i) instanceof FieldDef) {

                FieldDef fd = (FieldDef) fields.get(i);

                if (fd.modifier == FieldDef.AKY) {

                    switch (fd.type) {

                    case FieldDef.INTEGER :
                    case FieldDef.LONG :
                    case FieldDef.DOUBLE :
                  //case FieldDef.DATE : // TODO_ALA: revisar

                        prepare_num_edition(entityName, fd, "EDT-AKY", -1);

                        break;
                    }
                    
                    if (fd.replaced != null && fd.special == FieldDef.VRF) {
                        for (FieldDef fr : fd.replaced) {
                        	
                            switch (fr.type) {

                            case FieldDef.INTEGER :
                            case FieldDef.LONG :
                            case FieldDef.DOUBLE :

                            	prepare_num_edition(entityName, fr, "EDT-MKY", -1);

                                break;
                            }
                        }
                    }
                }
            }
            else {
                //////////////
            }
        }

        finSection("EDT-AKY-" + entityName);

    }

    /******************************************************************************
     * prepare_num_edition
     ******************************************************************************/
    /**
     *
     * TODO_javadoc.
     *
     *
     * @param entityName TODO_javadoc.
     * @param fd TODO_javadoc.
     * @param sectionName TODO_javadoc.
     * @param idx TODO_javadoc.
     *
     * @since 1.0
     *
     */
    private static void prepare_num_edition(String entityName, FieldDef fd, String sectionName, int idx) {

        gen.println("           IF " + fd.name + "-LEN IN " + entityName + "-FLD" + (idx != -1 ? "(" + idx + ")" : "") + " = FRM-ERR-NUME");
        gen.println("                MOVE FRM-IND-ERRO TO " + fd.name + "-LEN IN " + entityName + "-FLD" + (idx != -1 ? "(" + idx + ")" : ""));
        gen.println("                GO TO FIN-" + sectionName + "-" + entityName + ".");

      //gen.println("           MOVE " + fd.name + " IN " + entityName + "-FLD" + (idx != -1 ? "(" + idx + ")" : "") + " TO " + fd.name + "-EDT IN " + entityName + "-EDT.");
        gen.println("           MOVE " + fd.name + " IN " + entityName + "-FLD" + (idx != -1 ? "(" + idx + ")" : "") + " TO");
        gen.println("                " + fd.name + "-EDT IN " + entityName + "-EDT.");

        gen.println("           MOVE " + fd.name + "-EDT IN " + entityName + "-EDT TO");
        gen.println("                " + fd.name + "-ALF IN " + entityName + "-FLD" + (idx != -1 ? "(" + idx + ")" : "") + ".");
    }

    /******************************************************************************
     * genEDT_FLD_entity
     ******************************************************************************/
    /**
     *
     * TODO_javadoc.
     *
     *
     * @param entityName TODO_javadoc.
     * @param fields TODO_javadoc.
     *
     * @since 1.0
     *
     */
    private static void genEDT_FLD_entity(String entityName, ArrayList<Object> fields) {

        iniSection("EDT-FLD-" + entityName);

        ArrayList<ElementDef> array = null;

        for (int i = 0; i < fields.size(); i++) {

            if (fields.get(i) instanceof FieldDef) {

                FieldDef fd = (FieldDef) fields.get(i);

                field_prepare_num_edition(entityName, fd, -1);
            }
            else if (fields.get(i) instanceof ArrayList) {

                array = (ArrayList<ElementDef>) fields.get(i);

                for (int j = 0; j < array.size(); j++) {

                    if (array.get(j).field.special != FieldDef.FEC) {

                        for (int k = 0; k < array.get(j).index.size(); k++) {
                            field_prepare_num_edition(entityName, array.get(j).field, k + 1);
                        }
                    }
                }
            }
        }

        finSection("EDT-FLD-" + entityName);
    }

    /******************************************************************************
     * field_prepare_num_edition
     ******************************************************************************/
    /**
     *
     * TODO_javadoc.
     *
     *
     * @param entityName TODO_javadoc.
     * @param fd TODO_javadoc.
     * @param idx TODO_javadoc.
     *
     * @since 1.0
     *
     */
    private static void field_prepare_num_edition(String entityName, FieldDef fd, int idx) {

      //logger.debug("entrando a 'field_prepare_num_edition(" + fd.name + "," + FieldDef.getTypeString(fd.type) + "," + FieldDef.getSpecialString(fd.special) + "," + idx + ")' ...");

        if (fd.replaced != null && fd.type != FieldDef.DATE) {

            for (FieldDef fr : fd.replaced) {
                field_prepare_num_edition(entityName, fr, idx);
            }
        }
        else {

            if (Utils.searchIntInArray(fd.modifier, KEY_TYPES) < 0) {

                switch (fd.type) {

                case FieldDef.INTEGER :
                case FieldDef.LONG :
                case FieldDef.DOUBLE :
              //case FieldDef.DATE : // TODO_ALA: revisar

                    prepare_num_edition(entityName, fd, "EDT-FLD", idx);

                    break;
                }
            }
        }
    }

    /******************************************************************************
     * genRET_ALL_entity
     ******************************************************************************/
    /**
     *
     * TODO_javadoc.
     *
     *
     * @param entityName TODO_javadoc.
     * @param subsystems TODO_javadoc.
     *
     * @since 1.0
     *
     */
    private static void genRET_ALL_entity(String entityName, ArrayList<String> subsystems) {

        iniSection("RET-ALL-" + entityName);

        gen.println("           PERFORM KEY-ALL-" + entityName + ".");

        for (String subsys : subsystems) {

            if (!subsys.equals(FieldDef.FRM)) {
                gen.println("           PERFORM RET-" + subsys + "-" + entityName + ".");
            }
        }

        finSection("RET-ALL-" + entityName);
    }

    /******************************************************************************
     * genRET_subsys_entity
     ******************************************************************************/
    /**
     *
     * TODO_javadoc.
     *
     *
     * @param subsys TODO_javadoc.
     * @param entityName TODO_javadoc.
     * @param fields TODO_javadoc.
     *
     * @since 1.0
     *
     */
    private static void genRET_subsys_entity(String subsys, String entityName, ArrayList<Object> fields) {

        iniSection("RET-" + subsys + "-" + entityName);

        ArrayList<Object>     vars  = getSubsysVarsFromFields(subsys, fields);
        ArrayList<ElementDef> array = null;

        for (int i = 0; i < vars.size(); i++) {

            if (vars.get(i) instanceof FieldDef) {

                FieldDef fd = (FieldDef) vars.get(i);

                if (Utils.searchIntInArray(fd.modifier, KEY_TYPES) < 0) {
                    get_ret_field(subsys, entityName, fd, -1);
                }
            }
            else if (vars.get(i) instanceof ArrayList) {

                array = (ArrayList<ElementDef>) vars.get(i);

                for (int j = 0; j < array.size(); j++) {

                    gen.println("      *");
                    gen.println("      *    CAMPO INDEXADO   " + array.get(j).field.name);

                    for (int k = 0; k < array.get(j).index.size(); k++) {

                        if (Utils.searchIntInArray(array.get(j).field.modifier, KEY_TYPES) < 0) {
                            get_ret_field(subsys, entityName, array.get(j).field, k + 1);
                        }
                    }
                }
            }
        }

        finSection("RET-" + subsys + "-" + entityName);
    }

    /******************************************************************************
     * genVAL_FLD_entity
     ******************************************************************************/
    /**
     *
     * TODO_javadoc.
     *
     *
     * @param entityName TODO_javadoc.
     * @param fields TODO_javadoc.
     *
     * @since 1.0
     *
     */
    private static void genVAL_FLD_entity(String entityName, ArrayList<Object> fields, HashMap<String, Integer> gls) {

        iniSection("VAL-FLD-" + entityName);

        ArrayList<ElementDef> array = null;

        for (int i = 0; i < fields.size(); i++) {

            if (fields.get(i) instanceof FieldDef) {

                FieldDef fd = (FieldDef) fields.get(i);

                (fd.modifier == FieldDef.MKY && action == BQ_ACTION)
                if (Utils.searchIntInArray(fd.modifier, KEY_TYPES) < 0) {
                    perform_and_validation(entityName, fd, "VAL-FLD", false, -1); ///// verificar
                }
            }
            else if (fields.get(i) instanceof ArrayList) {

                array = (ArrayList<ElementDef>) fields.get(i);

                for (int j = 0; j < array.size(); j++) {

                    if (Utils.searchIntInArray(array.get(j).field.modifier, KEY_TYPES) < 0) {
                        perform_and_validation(entityName, array.get(j).field, "VAL-FLD", false, array.get(j).index.size());
                    }
                }
            }
        }

        finSection("VAL-FLD-" + entityName);

        //

        for (int i = 0; i < fields.size(); i++) {

            if (fields.get(i) instanceof FieldDef) {

                FieldDef fd = (FieldDef) fields.get(i);

                if (Utils.searchIntInArray(fd.modifier, KEY_TYPES) < 0) {
                    genVAL_field(entityName, fd, -1, gls);
                }
            }
            else if (fields.get(i) instanceof ArrayList) {

                array = (ArrayList<ElementDef>) fields.get(i);

                for (int j = 0; j < array.size(); j++) {

                    if (Utils.searchIntInArray(array.get(j).field.modifier, KEY_TYPES) < 0) {
                        genVAL_field(entityName, array.get(j).field, array.get(j).index.size(), gls);
                    }
                }
            }
        }
    }

    /******************************************************************************
     * iniSection
     ******************************************************************************/
    /**
     *
     * TODO_javadoc.
     *
     *
     * @param sectionName TODO_javadoc.
     *
     * @since 1.0
     *
     */
    private static void iniSection(String sectionName) {
        iniSection(sectionName, null);
    }

    /******************************************************************************
     * iniSection
     ******************************************************************************/
    /**
     *
     * TODO_javadoc.
     *
     *
     * @param sectionName TODO_javadoc.
     * @param additName TODO_javadoc.
     *
     * @since 1.0
     *
     */
    private static void iniSection(String sectionName, String additName) {

        gen.println("       " + sectionName + " SECTION.");
        gen.println("       INI-" + sectionName + ".");

        String ident = additName != null ? additName : "INI_" + sectionName.replace('-', '_');

      //logger.debug("seccion '" + sectionName + "', ident '" + ident + "' (" + (addit_hash.containsKey(ident) ? "OK" : "NO") + ")");

        if (addit_hash.containsKey    (ident)) {
            gen.println(addit_hash.get(ident));
        }
    }

    /******************************************************************************
     * finSection
     ******************************************************************************/
    /**
     *
     * TODO_javadoc.
     *
     *
     * @param sectionName TODO_javadoc.
     *
     * @since 1.0
     *
     */
    private static void finSection(String sectionName) {
        finSection(sectionName, null);
    }

    /******************************************************************************
     * finSection
     ******************************************************************************/
    /**
     *
     * TODO_javadoc.
     *
     *
     * @param sectionName TODO_javadoc.
     * @param additName TODO_javadoc.
     *
     * @since 1.0
     *
     */
    private static void finSection(String sectionName, String additName) {

        String ident = additName != null ? additName : "FIN_" + sectionName.replace('-', '_');

        if (addit_hash.containsKey    (ident)) {
            gen.println(addit_hash.get(ident));
        }
        else {

        }

        gen.println("       FIN-" + sectionName + ".");
        gen.println("           EXIT.");
        gen.println();
    }

    /******************************************************************************
     * getAdditFromXML
     ******************************************************************************/
    /**
     *
     * TODO_javadoc.
     *
     *
     * @param filename TODO_javadoc.
     *
     * @throws Exception TODO_javadoc.
     *
     * @since 1.0
     *
     */
    private static void getAdditFromXML(String filename) throws Exception {

        ArrayList  errors = new ArrayList();
        XmlOptions opts   = new XmlOptions();

        opts.setErrorListener(errors);

        AdditionalDocument root = AdditionalDocument.Factory.parse(new File(filename), opts);

        if (root.validate(opts)) {

            AdditionalDocument.Additional addit = root.getAdditional();

            for (SectionDocument.Section section : addit.getSectionArray()) {
                addit_hash.put(section.getName(), section.getCode());
            }

        } else {

            for (Object error : errors) {
                logger.fatal(error);
            }

            throw new XmlException(filename + " es invalido.");
        }
    }

    /******************************************************************************
     * getRangesFromXML
     ******************************************************************************/
    /**
     *
     * TODO_javadoc.
     *
     *
     * @param filename TODO_javadoc.
     *
     * @throws Exception TODO_javadoc.
     *
     * @since 1.0
     *
     */
    private static void getRangesFromXML(String filename) throws Exception {

        ArrayList  errors = new ArrayList();
        XmlOptions opts   = new XmlOptions();

        opts.setErrorListener(errors);

        RangesDocument root = RangesDocument.Factory.parse(new File(filename), opts);

        if (root.validate(opts)) {

            RangesDocument.Ranges ranges = root.getRanges();

            for (FieldDocument.Field field : ranges.getFieldArray()) {
                                                     // name,            domain,            system,            registry,            table, validation,            search
                DomainRangeDef drd = new DomainRangeDef(field.getName(), field.getDomain(), field.getSystem(), field.getRegistry(), "",    field.getValidation(), field.getSearch());

              //logger.debug(drd);

                ranges_hash.put(field.getName(), drd);
            }

        } else {

            for (Object error : errors) {
                logger.fatal(error);
            }

            throw new XmlException(filename + " es invalido.");
        }
    }

    /******************************************************************************
     * getDomainsFromXML
     ******************************************************************************/
    /**
     *
     * TODO_javadoc.
     *
     *
     * @param filename TODO_javadoc.
     *
     * @throws Exception TODO_javadoc.
     *
     * @since 1.0
     *
     */
    private static void getDomainsFromXML(String filename) throws Exception {

        ArrayList  errors = new ArrayList();
        XmlOptions opts   = new XmlOptions();

        opts.setErrorListener(errors);

        DomainsDocument root = DomainsDocument.Factory.parse(new File(filename), opts);

        if (root.validate(opts)) {

            DomainsDocument.Domains domains = root.getDomains();

            for (DomainDocument.Domain domain : domains.getDomainArray()) {
                                                     // name,             domain, system,             registry,             table,             validation,             search
                DomainRangeDef drd = new DomainRangeDef(domain.getName(), "",     domain.getSystem(), domain.getRegistry(), domain.getTable(), domain.getValidation(), domain.getSearch());

              //logger.debug(drd);

                domains_hash.put(domain.getName(), drd);
            }

        } else {

            for (Object error : errors) {
                logger.fatal(error);
            }

            throw new XmlException(filename + " es invalido.");
        }
    }

    /******************************************************************************
     * getSubsystemsFromFields
     ******************************************************************************/
    /**
     *
     * TODO_javadoc.
     *
     * @param fields TODO_javadoc.
     *
     * @return TODO_javadoc.
     *
     * @since 1.0
     *
     */
    private static ArrayList<String> getSubsystemsFromFields(ArrayList<Object> fields) {

        ArrayList<String> subsystems = new ArrayList<String>();

        String subsys = null;

        for (int i = 0; i < fields.size(); i++) {

            if (fields.get(i) instanceof FieldDef) {

                FieldDef fd = (FieldDef) fields.get(i);

                subsys = fd.fmsname.substring(0, 3);

                if (!subsystems.contains(subsys)) { // !subsys.equals(FieldDef.FRM) &&
                    subsystems.add(subsys);
                }
            }
            else {
                //////////////
            }
        }

        return subsystems;
    }

    /******************************************************************************
     * getSubsysVarsFromFields
     ******************************************************************************/
    /**
     *
     * TODO_javadoc.
     *
     * @param subsys TODO_javadoc.
     * @param fields TODO_javadoc.
     *
     * @return TODO_javadoc.
     *
     * @since 1.0
     *
     */
    private static ArrayList<Object> getSubsysVarsFromFields(String subsys, ArrayList<Object> fields) {

        ArrayList<Object>     vars  = new ArrayList<Object>();
        ArrayList<ElementDef> array = null;

        for (int i = 0; i < fields.size(); i++) {

            if (fields.get(i) instanceof FieldDef) {

                FieldDef fd = (FieldDef) fields.get(i);

                if (fd.fmsname.substring(0, 3).equals(subsys)) {
                    vars.add(fd);
                }
            }
            else if (fields.get(i) instanceof ArrayList) {

                array = (ArrayList<ElementDef>) fields.get(i);

                ArrayList<ElementDef> valid = new ArrayList<ElementDef>();

                for (int j = 0; j < array.size(); j++) {

                    if (array.get(j).field.name.substring(0, 3).equals(subsys)) {
                        valid.add(array.get(j));
                    }
                }

                vars.add(valid);
            }
        }

        return vars;
    }
    
    /******************************************************************************
     * getGlsFromFields
     ******************************************************************************/
    /**
     *
     * TODO_javadoc.
     *
     * @param fields TODO_javadoc.
     *
     * @return TODO_javadoc.
     *
     * @since 1.0
     *
     */
    private static HashMap<String, Integer> getGlsFromFields(ArrayList<Object> fields) {

    	HashMap<String, Integer> gls = new HashMap<String, Integer>();

        String glosa = null;

        for (int i = 0; i < fields.size(); i++) {

            if (fields.get(i) instanceof FieldDef) {

                FieldDef fd = (FieldDef) fields.get(i);

                glosa = fd.name.substring(0, 7);

                if (!gls.containsKey(fd.name) && glosa.equals("FRM-GLS")) { // !subsys.equals(FieldDef.FRM) &&
                	gls.put((fd.name.substring(8,12)),fd.size);
                }
            }
        }

        return gls;
    }

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2011)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3750)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1372)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2944)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2203)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1372)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2944)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2193)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2965)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3302)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:450)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:268)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1138)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:736)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:802)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1315)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2020-11-11 16:53:05.082
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2011)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3750)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1372)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2944)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2203)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1372)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2944)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2193)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2965)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3302)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:450)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:268)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1138)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:736)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:802)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1315)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2020-11-11 16:53:05.089
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2011)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3750)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1372)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2944)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2203)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1372)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2944)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2193)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2965)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3302)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:450)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:268)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1138)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:736)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:802)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1315)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2020-11-11 16:53:05.836
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
/*
 *   Copyright (c) 2007 by BEE S.A. All Rights Reserved.
 *   THIS IS UNPUBLISHED PROPRIETARY SOURCE CODE OF BEE S.A.
 *   The copyright notice above does not evidence any actual or intended
 *   publication of such source code.
 */

package cl.bee.genfrmjava;


import java.io.*;

import java.text.*;

import java.util.*;

import cl.bee.genfrmjava.config.*;
import cl.bee.genfrmjava.config.impl.*;

import cl.bee.genfrmjava.adddef.schema.*;
import cl.bee.genfrmjava.rangedef.schema.*;
import cl.bee.genfrmjava.domaindef.schema.*;

import cl.bee.genfrmjava.util.*;

import org.apache.log4j.*;

import org.apache.xmlbeans.*;


/**
 * @author  alarrayea@bee.cl
 * @version 1.0
 */
public class GenFrm {

    /** TODO_javadoc. */
    private static Logger logger = Logger.getLogger(GenFrm.class);

    /** TODO_javadoc. */
    private final static int[] KEY_TYPES = new int[] { FieldDef.IKY, FieldDef.MKY, FieldDef.AKY };

    /** TODO_javadoc. */
    private static final SimpleDateFormat formdate_gen = new SimpleDateFormat("dd-MMM-yy hh:mm aa", new Locale("es", "CL")); //07-Nov-18 09:48 AM

    //

    /** TODO_javadoc. */
    public static final int UNDEF = -1;

    /** TODO_javadoc. */
    private static final int BA_ACTION = 1;

    /** TODO_javadoc. */
    private static final int BQ_ACTION = 2;

    /** TODO_javadoc. */
    private static final int BU_ACTION = 3;

    /** TODO_javadoc. */
    private static final String action_names[] = { "", "BA", "BQ", "BU" };

    //

    /** TODO_javadoc. */
    private static PrintStream gen = null;

    /** TODO_javadoc. */
    private static HashMap<String, String> addit_hash = null;

    /** TODO_javadoc. */
    private static HashMap<String, DomainRangeDef> ranges_hash = null;

    /** TODO_javadoc. */
    private static HashMap<String, DomainRangeDef> domains_hash = null;

    /** TODO_javadoc. */
    private static String systemName = null;

    /** TODO_javadoc. */
    private static String entityName = null;

    //

    /** TODO_javadoc. */
    private static int action = UNDEF;

    /******************************************************************************
     * main
     ******************************************************************************/
    /**
     *
     * @param args TODO_javadoc.
     *
     */
    public static void main(String args[]) {

    	BasicConfigurator.configure();
        logger.info("Inicio GenFrm.java ");
        try {

            String configClass = null;

            for (int idx = 0; idx < args.length - 1; idx++) {

                if (args[idx].equalsIgnoreCase("-system")) {
                    systemName = args[++idx].toUpperCase();
                }

                if (args[idx].equalsIgnoreCase("-entity")) {
                    entityName = args[++idx].toUpperCase();
                }

                if (args[idx].equalsIgnoreCase("-action")) {

                    String s = args[++idx].toUpperCase();

                    for (int i = 1; i < action_names.length; i++) {

                        if (s.equals(action_names[i])) {

                            action = i;

                            break;
                        }
                    }
                }

                if (args[idx].equalsIgnoreCase("-configClass")) {
                    configClass = args[++idx];
                }
            }

            logger.debug("systemName: " + systemName);
            logger.debug("entityName: " + entityName);
            logger.debug("action:     " + action_names[action]);

            if (configClass == null) {
                throw new RuntimeException("configClass debe estar definido.");
            }

            //

            ArrayList<Object>  fields = new ArrayList<Object>();
            ArrayList<TextDef> texts  = new ArrayList<TextDef>();
            FormDef            forms = new FormDef();

            //

            Config config = (Config) (Class.forName(configClass).newInstance());

            config.getInfoFromXML("data/form/form_" +   systemName.toLowerCase() + "_" + entityName.toLowerCase() + ".xml", fields, texts, forms);

            //

            addit_hash = new HashMap<String, String>();

            getAdditFromXML(       "data/addit/addit_" + systemName.toLowerCase() + "_" + entityName.toLowerCase() + "_" + action_names[action].toLowerCase() + ".xml");

            //

            ranges_hash  = new HashMap<String, DomainRangeDef>();
            domains_hash = new HashMap<String, DomainRangeDef>();

            getRangesFromXML ("data/domain-range/range_"  + systemName.toLowerCase() + ".xml");
            getDomainsFromXML("data/domain-range/domain_" + systemName.toLowerCase() + ".xml");

            //

            ArrayList<String> subsystems = getSubsystemsFromFields(fields);

            //

            gen = new PrintStream(new FileOutputStream("data/gen/" + systemName + action_names[action] + entityName + ".SRCAIU"));

            gen.println("      *");
            gen.println("      * " + systemName + action_names[action] + entityName);
            gen.println("      * " + Utils.NOMBRE_GENEDADOR + " " + Utils.VERSION_GENEDADOR);
            gen.println("      * " + formdate_gen.format(new Date()).toUpperCase());
            gen.println("      *");
            gen.println("       SET-TAG-" + systemName + action_names[action] + entityName + " SECTION.");
            gen.println("       INI-SET-TAG-" + systemName + action_names[action] + entityName + ".");
            gen.println("           MOVE");

          //gen.println("           '<IDNMOD NOM=$" + systemName + action_names[action] + entityName + "$ VSN=${VSN" + action_names[action] + "}$ VGM=$3.0.1$");
            gen.println("           '<IDNMOD NOM=$" + systemName + action_names[action] + entityName + "$ VSN=$09.08.27$ VGM=$3.0.1$");

          //gen.println("      -    'GEN=$07-Nov-18 09:48 AM$ FNC=${FNC" + action_names[action] + "}$/>'");
            gen.println("      -    'GEN=$07-Nov-18 09:48 AM$ FNC=$090802$/>'");

            gen.println("               TO WSS-CVT-ITEM.");
            gen.println("       FIN-SET-TAG-" + systemName + action_names[action] + entityName + ".");
            gen.println("           EXIT.");
            gen.println();

            /////////////////////////////////////////////////////////////////////////////////////
            
            //ogb glosas
            HashMap<String, Integer>  gls  = getGlsFromFields(fields);
           //ogb
            

            if (action == BQ_ACTION) {

                genPUT_ALL_entity(entityName, subsystems);

                for (String subsys : subsystems) {

                    if (!subsys.equals(FieldDef.FRM)) {
                        genPUT_subsys_entity(subsys, entityName, fields, gls);
                    }
                }

                genKEY_ALL_entity(entityName, subsystems);

                for (String subsys : subsystems) {

                    if (!subsys.equals(FieldDef.FRM)) {
                        genKEY_subsys_entity(subsys, entityName, fields);
                    }
                }

                genSCR_CLRA_entity(entityName, fields, subsystems);

                for (String subsys : subsystems) {

                    if (!subsys.equals(FieldDef.FRM)) {
                        genCLR_subsys_entity(subsys, entityName, fields);
                    }
                }

                genFST_KEY_entity(entityName, fields);

                genFST_FLD_entity(entityName, fields);

                genPRO_KEY_entity(entityName, fields);

                genUNP_KEY_entity(entityName, fields);

                genUNP_FLD_entity(entityName, fields, subsystems);

                for (String subsys : subsystems) {

                    if (!subsys.equals(FieldDef.FRM)) {
                        genUNP_subsys_entity(subsys, entityName, fields);
                    }
                }

                genVAL_KEY_entity(entityName, fields, gls);

                genVAL_CON_KEY_entity(entityName, fields);

                genVAL_CON_IKY_entity(entityName, fields);

                genVAL_NUM_KEY_entity(entityName, fields);

                genVAL_NUM_FLD_entity(entityName, fields);

                genEDT_KEY_entity(entityName, fields);

                genEDT_FLD_entity(entityName, fields);
            }

            /////////////////////////////////////////////////////////////////////////////////////

            if (action == BU_ACTION) {

                genRET_ALL_entity(entityName, subsystems);

                for (String subsys : subsystems) {

                    if (!subsys.equals(FieldDef.FRM)) {
                        genRET_subsys_entity(subsys, entityName, fields);
                    }
                }

                genKEY_ALL_entity(entityName, subsystems);

                for (String subsys : subsystems) {

                    if (!subsys.equals(FieldDef.FRM)) {
                        genKEY_subsys_entity(subsys, entityName, fields);
                    }
                }

                genSCR_CLRA_entity(entityName, fields, subsystems);

                for (String subsys : subsystems) {

                    if (!subsys.equals(FieldDef.FRM)) {
                        genCLR_subsys_entity(subsys, entityName, fields);
                    }
                }

                genFST_KEY_entity(entityName, fields);

                genFST_FLD_entity(entityName, fields);

                genPRO_KEY_entity(entityName, fields);

                genPRO_FLD_entity(entityName, fields, subsystems);

                for (String subsys : subsystems) {

                    if (!subsys.equals(FieldDef.FRM)) {
                        genPRO_subsys_entity(subsys, entityName, fields);
                    }
                }

                genUNP_KEY_entity(entityName, fields);

                genUNP_FLD_entity(entityName, fields, subsystems);

                for (String subsys : subsystems) {

                    if (!subsys.equals(FieldDef.FRM)) {
                        genUNP_subsys_entity(subsys, entityName, fields);
                    }
                }

                genVAL_MKY_entity(entityName, fields);

                genVAL_FLD_entity( entityName, fields, gls);

                ///////////////

                iniSection("VAL-CON-FLD-" + entityName, "VAL_CON_FLD_" + entityName);
                finSection("VAL-CON-FLD-" + entityName);

                iniSection("VAL-CON-" + entityName); // TODO_ALA: revisar
                finSection("VAL-CON-" + entityName);

                genVAL_NUM_KEY_entity(entityName, fields);

                genVAL_NUM_FLD_entity(entityName, fields);

                genEDT_KEY_entity(entityName, fields);

                genEDT_FLD_entity(entityName, fields);
            }

            //

            String ident = "EOF_" + action_names[action];

            if (addit_hash.containsKey    (ident)) {
                gen.println(addit_hash.get(ident));
            }

            ident = "EOF";

            if (addit_hash.containsKey    (ident)) {
                gen.println(addit_hash.get(ident));
            }

            //

            gen.close();

        } catch (Throwable e) {
            logger.fatal(Utils.printStackTrace(e));
        }
    }

    /******************************************************************************
     * genPUT_ALL_entity
     ******************************************************************************/
    /**
     *
     * TODO_javadoc.
     *
     *
     * @param entityName TODO_javadoc.
     * @param subsystems TODO_javadoc.
     *
     * @since 1.0
     *
     */
    private static void genPUT_ALL_entity(String entityName, ArrayList<String> subsystems) {

        iniSection("PUT-ALL-" + entityName);

        for (String subsys : subsystems) {

            if (!subsys.equals(FieldDef.FRM)) {
                gen.println("           PERFORM PUT-" + subsys + "-" + entityName + ".");
            }
        }

        finSection("PUT-ALL-" + entityName);
    }

    /******************************************************************************
     * genPUT_subsys_entity
     ******************************************************************************/
    /**
     *
     * TODO_javadoc.
     *
     *
     * @param subsys TODO_javadoc.
     * @param entityName TODO_javadoc.
     * @param fields TODO_javadoc.
     *
     * @since 1.0
     *
     */
    private static void genPUT_subsys_entity(String subsys, String entityName, ArrayList<Object> fields,  HashMap<String, Integer> gls) {

        iniSection("PUT-" + subsys + "-" + entityName);

        gen.println("           IF PGM-STAT-" + subsys + "-NUL");
        gen.println("               GO TO FIN-PUT-" + subsys + "-" + entityName + ".");

        //

        gen.println("           IF NOT PGM-STAT-" + subsys + "-OKS");
        gen.println("               PERFORM CLR-" + subsys + "-" + entityName);

        /*
        if (subsys.equals(entityName)) { // TODO_ALA: revisar
            gen.println("               PERFORM CLR-FRM-" + entityName);
        }
        */

        gen.println("               GO TO FIN-PUT-" + subsys + "-" + entityName + ".");

        //

        ArrayList<Object>     vars  = getSubsysVarsFromFields(subsys, fields);
        ArrayList<ElementDef> array = null;
        


        for (int i = 0; i < vars.size(); i++) {

            if (vars.get(i) instanceof FieldDef) {

                FieldDef fd = (FieldDef) vars.get(i);

                get_put_field(subsys, entityName, fd, -1);
            }
            else if (vars.get(i) instanceof ArrayList) {

                array = (ArrayList<ElementDef>) vars.get(i);

                for (int j = 0; j < array.size(); j++) {

                    gen.println("      *");
                    gen.println("      *    CAMPO INDEXADO   " + array.get(j).field.name);

                    for (int k = 0; k < array.get(j).index.size(); k++) {

                        get_put_field(subsys, entityName, array.get(j).field, k + 1);
                    }
                }
            }
        }

        for (int i = 0; i < vars.size(); i++) {

            if (vars.get(i) instanceof FieldDef) {

                FieldDef fd = (FieldDef) vars.get(i);

                if (!fd.fmsname.substring(3, 8).equals("_IND_")) { ///////// validar
                    domain_range_validation_search(entityName, fd, -1, gls, "PUT");
                }
            }
            else {
                //////////////
            }
        }

        finSection("PUT-" + subsys + "-" + entityName);
    }

    /******************************************************************************
     * get_put_field
     ******************************************************************************/
    /**
     *
     * TODO_javadoc.
     *
     *
     * @param subsys TODO_javadoc.
     * @param entityName TODO_javadoc.
     * @param fd TODO_javadoc.
     * @param idx TODO_javadoc.
     *
     * @since 1.0
     *
     */
    private static void get_put_field(String subsys, String entityName, FieldDef fd, int idx) {

        if (fd.replaced != null) {

            for (FieldDef fr : fd.replaced) {
                get_put_field(subsys, entityName, fr, idx);
            }
        }
        else {
            gen.println("           MOVE " + fd.name + " IN " + subsys + (idx != -1 ? "(" + idx + ")" : "") + " TO " + fd.name + " IN " + entityName + "-FLD" + (idx != -1 ? "(" + idx + ")" : "") + ".");
        }
    }

    /******************************************************************************
     * genKEY_ALL_entity
     ******************************************************************************/
    /**
     *
     * TODO_javadoc.
     *
     *
     * @param entityName TODO_javadoc.
     * @param subsystems TODO_javadoc.
     *
     * @since 1.0
     *
     */
    private static void genKEY_ALL_entity(String entityName, ArrayList<String> subsystems) {

        iniSection("KEY-ALL-" + entityName);

        for (String subsys : subsystems) {

            if (!subsys.equals(FieldDef.FRM)) {
                gen.println("           PERFORM KEY-" + subsys + "-" + entityName + "."); // solo aquellos que tengan KEY ???
            }
        }

        finSection("KEY-ALL-" + entityName);
    }

    /******************************************************************************
     * genKEY_subsys_entity
     ******************************************************************************/
    /**
     *
     * TODO_javadoc.
     *
     *
     * @param subsys TODO_javadoc.
     * @param entityName TODO_javadoc.
     * @param fields TODO_javadoc.
     *
     * @since 1.0
     *
     */
    private static void genKEY_subsys_entity(String subsys, String entityName, ArrayList<Object> fields) {

        iniSection("KEY-" + subsys + "-" + entityName);

        ArrayList<Object> vars = getSubsysVarsFromFields(subsys, fields);

        for (int i = 0; i < vars.size(); i++) {

            if (vars.get(i) instanceof FieldDef) {

                FieldDef fd = (FieldDef) vars.get(i);

                if (Utils.searchIntInArray(fd.modifier, KEY_TYPES) >= 0) {
                    get_ret_field(subsys, entityName, fd, -1);
                }
            }
            else {
                //////////////
            }
        }

        finSection("KEY-" + subsys + "-" + entityName);
    }

    /******************************************************************************
     * get_ret_field
     ******************************************************************************/
    /**
     *
     * TODO_javadoc.
     *
     *
     * @param subsys TODO_javadoc.
     * @param entityName TODO_javadoc.
     * @param fd TODO_javadoc.
     * @param idx TODO_javadoc.
     *
     * @since 1.0
     *
     */
    private static void get_ret_field(String subsys, String entityName, FieldDef fd, int idx) {

        if (fd.replaced != null) {

            for (FieldDef fr : fd.replaced) {
                get_ret_field(subsys, entityName, fr, idx);
            }
        }
        else {
            gen.println("           MOVE " + fd.name + " IN " + entityName + "-FLD" + (idx != -1 ? "(" + idx + ")" : "") + " TO " + fd.name + " IN " + subsys + (idx != -1 ? "(" + idx + ")" : "") + ".");
        }
    }

    /******************************************************************************
     * genSCR_CLRA_entity
     ******************************************************************************/
    /**
     *
     * TODO_javadoc.
     *
     *
     * @param entityName TODO_javadoc.
     * @param fields TODO_javadoc.
     * @param subsystems TODO_javadoc.
     *
     * @since 1.0
     *
     */
    private static void genSCR_CLRA_entity(String entityName, ArrayList<Object> fields, ArrayList<String> subsystems) {

        iniSection("SCR-CLRA-" + entityName);

        gen.println("           PERFORM CLR-KEY-" + entityName + ".");
        gen.println("           PERFORM CLR-FLD-" + entityName + ".");

        finSection("SCR-CLRA-" + entityName);

        //

        iniSection("CLR-KEY-" + entityName);

        for (int i = 0; i < fields.size(); i++) {

            if (fields.get(i) instanceof FieldDef) {

                FieldDef fd = (FieldDef) fields.get(i);

                if (Utils.searchIntInArray(fd.modifier, KEY_TYPES) >= 0) {
                    get_clear_field(entityName, fd, -1);
                }
            }
            else {
                //////////////
            }
        }

        finSection("CLR-KEY-" + entityName);

        //

        iniSection("CLR-FLD-" + entityName);

        ArrayList<ElementDef> array = null;

        for (int i = 0; i < fields.size(); i++) {

            if (fields.get(i) instanceof FieldDef) {

                FieldDef fd = (FieldDef) fields.get(i);

                if (fd.fmsname.substring(0, 3).equals(FieldDef.FRM)) {
                    get_clear_field(entityName, fd, -1);
                }
            }
            else if (fields.get(i) instanceof ArrayList) {

                array = (ArrayList<ElementDef>) fields.get(i);

                for (int j = 0; j < array.size(); j++) {

                    if (array.get(j).field.name.substring(0, 3).equals(FieldDef.FRM)) {

                        for (int k = 0; k < array.get(j).index.size(); k++) {
                            get_clear_field(entityName, array.get(j).field, k + 1);
                        }
                    }
                }
            }
        }

        for (String subsys : subsystems) {

            if (!subsys.equals(FieldDef.FRM)) {
                gen.println("           PERFORM CLR-" + subsys + "-" + entityName + ".");
            }
        }

        finSection("CLR-FLD-" + entityName);
    }

    /******************************************************************************
     * get_clear_field
     ******************************************************************************/
    /**
     *
     * TODO_javadoc.
     *
     *
     * @param entityName TODO_javadoc.
     * @param fd TODO_javadoc.
     * @param idx TODO_javadoc.
     *
     * @since 1.0
     *
     */
    private static void get_clear_field(String entityName, FieldDef fd, int idx) {

        if (fd.replaced != null && fd.type != FieldDef.DATE) {

            for (FieldDef fr : fd.replaced) {
                get_clear_field(entityName, fr, idx);
            }
        }
        else {

            switch (fd.type) {

            case FieldDef.INTEGER :
            case FieldDef.LONG :
            case FieldDef.DOUBLE :
            case FieldDef.DATE :
                gen.println("           MOVE ZEROES TO " + fd.name + " IN " + entityName + "-FLD" + (idx != -1 ? "(" + idx + ")" : "") + ".");
                break;
            case FieldDef.CHAR :
            case FieldDef.BOOLEAN :
            case FieldDef.STRING :
                gen.println("           MOVE SPACES TO " + fd.name + " IN " + entityName + "-FLD" + (idx != -1 ? "(" + idx + ")" : "") + ".");
                break;
            }
        }
    }

    /******************************************************************************
     * genCLR_subsys_entity
     ******************************************************************************/
    /**
     *
     * TODO_javadoc.
     *
     *
     * @param subsys TODO_javadoc.
     * @param entityName TODO_javadoc.
     * @param fields TODO_javadoc.
     *
     * @since 1.0
     *
     */
    private static void genCLR_subsys_entity(String subsys, String entityName, ArrayList<Object> fields) {

        iniSection("CLR-" + subsys + "-" + entityName);

        ArrayList<Object>     vars  = getSubsysVarsFromFields(subsys, fields);
        ArrayList<ElementDef> array = null;

        for (int i = 0; i < vars.size(); i++) {

            if (vars.get(i) instanceof FieldDef) {

                FieldDef fd = (FieldDef) vars.get(i);

                if (Utils.searchIntInArray(fd.modifier, KEY_TYPES) < 0) {
                    get_clear_field(entityName, fd, -1);
                }
            }
            else if (vars.get(i) instanceof ArrayList) {

                array = (ArrayList<ElementDef>) vars.get(i);

                for (int j = 0; j < array.size(); j++) {

                    for (int k = 0; k < array.get(j).index.size(); k++) {

                        if (Utils.searchIntInArray(array.get(j).field.modifier, KEY_TYPES) < 0) {
                            get_clear_field(entityName, array.get(j).field, k + 1);
                        }
                    }
                }
            }
       }

        finSection("CLR-" + subsys + "-" + entityName);
    }

    /******************************************************************************
     * genFST_KEY_entity
     ******************************************************************************/
    /**
     *
     * TODO_javadoc.
     *
     *
     * @param entityName TODO_javadoc.
     * @param fields TODO_javadoc.
     *
     * @since 1.0
     *
     */
    private static void genFST_KEY_entity(String entityName, ArrayList<Object> fields) {

        iniSection("FST-KEY-" + entityName);

        for (int i = 0; i < fields.size(); i++) {

            if (fields.get(i) instanceof FieldDef) {

                FieldDef fd = (FieldDef) fields.get(i);

              //if (Utils.searchIntInArray(fd.modifier, KEY_TYPES) >= 0) {
                if (Utils.searchIntInArray(fd.modifier, new int[] { FieldDef.IKY }) >= 0 && FieldDef.absenceAttribute(fd.attributes, FieldDef.DISPLAY_ONLY_ATTR)) {

                     gen_pos_cursor(entityName, fd, -1);

                     break;
                }
            }
            else {
                //////////////
            }
        }

        finSection("FST-KEY-" + entityName);
    }

    /******************************************************************************
     * gen_pos_cursor
     ******************************************************************************/
    /**
     *
     * TODO_javadoc.
     *
     *
     * @param entityName TODO_javadoc.
     * @param fd TODO_javadoc.
     * @param size TODO_javadoc.
     *
     * @since 1.0
     *
     */
    private static void gen_pos_cursor(String entityName, FieldDef fd, int size) {
        gen.println("           MOVE -1 TO " + fd.name + "-LEN IN " + entityName + "-FLD" + (size != -1 ? "(1)": "") + ".");
    }

    /******************************************************************************
     * genFST_KEY_entity
     ******************************************************************************/
    /**
     *
     * TODO_javadoc.
     *
     *
     * @param entityName TODO_javadoc.
     * @param fields TODO_javadoc.
     *
     * @since 1.0
     *
     */
    private static void genFST_FLD_entity(String entityName, ArrayList<Object> fields) {

        iniSection("FST-FLD-" + entityName);

        ArrayList<ElementDef> array = null;

        for (int i = 0; i < fields.size(); i++) {

            if (fields.get(i) instanceof FieldDef) {

                FieldDef fd = (FieldDef) fields.get(i);

                if (fd.modifier == FieldDef.FLD && FieldDef.absenceAttribute(fd.attributes, FieldDef.DISPLAY_ONLY_ATTR)) {

                    gen_pos_cursor(entityName, fd, -1);

                    break;
                }
            }
            else if (fields.get(i) instanceof ArrayList) {

                array = (ArrayList<ElementDef>) fields.get(i);

                for (int j = 0; j < array.size(); j++) {

                    if (array.get(j).field.modifier == FieldDef.FLD && FieldDef.absenceAttribute(array.get(j).field.attributes, FieldDef.DISPLAY_ONLY_ATTR)) {

                        gen_pos_cursor(entityName, array.get(j).field, array.get(j).index.size());

                        break;
                    }
                }
            }
        }

        finSection("FST-FLD-" + entityName);
    }

    /******************************************************************************
     * genPRO_KEY_entity
     ******************************************************************************/
    /**
     *
     * TODO_javadoc.
     *
     *
     * @param entityName TODO_javadoc.
     * @param fields TODO_javadoc.
     *
     * @since 1.0
     *
     */
    private static void genPRO_KEY_entity(String entityName, ArrayList<Object> fields) {

        iniSection("PRO-KEY-" + entityName);

        if (action == BQ_ACTION) {
            gen.println("           PERFORM PRO-IKY-" + entityName + ".");
            gen.println("           PERFORM PRO-AKY-" + entityName + ".");
        }

        gen.println("           PERFORM PRO-MKY-" + entityName + ".");

        finSection("PRO-KEY-" + entityName);

        //

        if (action == BQ_ACTION) {

            iniSection("PRO-IKY-" + entityName);

            for (int i = 0; i < fields.size(); i++) {

                if (fields.get(i) instanceof FieldDef) {

                    FieldDef fd = (FieldDef) fields.get(i);

                    if (fd.modifier == FieldDef.IKY && FieldDef.absenceAttribute(fd.attributes, FieldDef.DISPLAY_ONLY_ATTR)) {
                        gen_set_field_attr(entityName, fd, "FRM-CPIM-AEY", false, -1);
                    }
                }
                else {
                    //////////////
                }
            }

            finSection("PRO-IKY-" + entityName);

            //

            iniSection("PRO-MKY-" + entityName);

            for (int i = 0; i < fields.size(); i++) {

                if (fields.get(i) instanceof FieldDef) {

                    FieldDef fd = (FieldDef) fields.get(i);

                    if (fd.modifier == FieldDef.MKY && FieldDef.absenceAttribute(fd.attributes, FieldDef.DISPLAY_ONLY_ATTR)) {
                        gen_set_field_attr(entityName, fd, "FRM-CPIM-AEY", false, -1);
                    }
                }
                else {
                    //////////////
                }
            }

            finSection("PRO-MKY-" + entityName);

            //

            iniSection("PRO-AKY-" + entityName);

            for (int i = 0; i < fields.size(); i++) {

                if (fields.get(i) instanceof FieldDef) {

                    FieldDef fd = (FieldDef) fields.get(i);

                    if (fd.modifier == FieldDef.AKY && FieldDef.absenceAttribute(fd.attributes, FieldDef.DISPLAY_ONLY_ATTR)) {
                        gen_set_field_attr(entityName, fd, "FRM-CPIM-AEY", false, -1);
                    }
                }
                else {
                    //////////////
                }
            }

            finSection("PRO-AKY-" + entityName);
        }
        else {

            iniSection("PRO-MKY-" + entityName);

            for (int i = 0; i < fields.size(); i++) {

                if (fields.get(i) instanceof FieldDef) {

                    FieldDef fd = (FieldDef) fields.get(i);

                    if (fd.modifier == FieldDef.MKY) {
                        gen_set_field_attr(entityName, fd, "FRM-CPIM-AEY", false, -1);
                    }
                }
                else {
                    //////////////
                }
            }

            finSection("PRO-MKY-" + entityName);
        }
    }

    /******************************************************************************
     * gen_set_field_attr
     ******************************************************************************/
    /**
     *
     * TODO_javadoc.
     *
     *
     * @param entityName TODO_javadoc.
     * @param fd TODO_javadoc.
     * @param attr TODO_javadoc.
     * @param withRecord TODO_javadoc.
     * @param idx TODO_javadoc.
     *
     * @since 1.0
     *
     */
    private static void gen_set_field_attr(String entityName, FieldDef fd, String attr, boolean withoutRecord, int idx) { // TODO_ALA:

        if (fd.replaced != null && fd.type != FieldDef.DATE) {

            for (FieldDef fr : fd.replaced) {
                gen_set_field_attr(entityName, fr, attr, withoutRecord, idx);
            }
        }
        else {
            gen.println("           MOVE " + attr + " TO " + fd.name + "-ATR" + (withoutRecord ? "" : " IN " + entityName + "-FLD") + (idx != -1 ? "(" + idx + ")" : "") + ".");
        }
    }

    /******************************************************************************
     * genUNP_KEY_entity
     ******************************************************************************/
    /**
     *
     * TODO_javadoc.
     *
     *
     * @param entityName TODO_javadoc.
     * @param fields TODO_javadoc.
     *
     * @since 1.0
     *
     */
    private static void genUNP_KEY_entity(String entityName, ArrayList<Object> fields) {

        iniSection("UNP-KEY-" + entityName);

        gen.println("           PERFORM UNP-IKY-" + entityName + ".");
        gen.println("           PERFORM UNP-AKY-" + entityName + ".");
        gen.println("           PERFORM UNP-MKY-" + entityName + ".");

        finSection("UNP-KEY-" + entityName);

        //

        iniSection("UNP-IKY-" + entityName);

        for (int i = 0; i < fields.size(); i++) {

            if (fields.get(i) instanceof FieldDef) {

                FieldDef fd = (FieldDef) fields.get(i);

                if (fd.modifier == FieldDef.IKY && FieldDef.absenceAttribute(fd.attributes, FieldDef.DISPLAY_ONLY_ATTR) ) {
                    gen_set_field_attr(entityName, fd, "FRM-CPIM-UBY", true, -1); ///// verificar con B?
                }
            }
            else {
                //////////////
            }
        }

        finSection("UNP-IKY-" + entityName);

        //

        iniSection("UNP-MKY-" + entityName);

        for (int i = 0; i < fields.size(); i++) {

            if (fields.get(i) instanceof FieldDef) {

                FieldDef fd = (FieldDef) fields.get(i);

                if (fd.modifier == FieldDef.MKY && FieldDef.absenceAttribute(fd.attributes, FieldDef.DISPLAY_ONLY_ATTR)) {
                    gen_set_field_attr(entityName, fd, "FRM-CPIM-UBY", false, -1);
                }
            }
            else {
                //////////////
            }
        }

        finSection("UNP-MKY-" + entityName);

        //

        iniSection("UNP-AKY-" + entityName);

        for (int i = 0; i < fields.size(); i++) {

            if (fields.get(i) instanceof FieldDef) {

                FieldDef fd = (FieldDef) fields.get(i);

                if (fd.modifier == FieldDef.AKY && FieldDef.absenceAttribute(fd.attributes, FieldDef.DISPLAY_ONLY_ATTR)) {
                    gen_set_field_attr(entityName, fd, "FRM-CPIM-UBY", true, -1);
                }
            }
            else {
                //////////////
            }
        }

        finSection("UNP-AKY-" + entityName);
    }

    /******************************************************************************
     * genPRO_FLD_entity
     ******************************************************************************/
    /**
     *
     * TODO_javadoc.
     *
     *
     * @param entityName TODO_javadoc.
     * @param fields TODO_javadoc.
     * @param subsystems TODO_javadoc.
     *
     * @since 1.0
     *
     */
    private static void genPRO_FLD_entity(String entityName, ArrayList<Object> fields, ArrayList<String> subsystems) {

        iniSection("PRO-FLD-" + entityName);

        for (int i = 0; i < fields.size(); i++) {

            if (fields.get(i) instanceof FieldDef) {

                FieldDef fd = (FieldDef) fields.get(i);

                if (fd.fmsname.substring(0, 3).equals(FieldDef.FRM) && FieldDef.absenceAttribute(fd.attributes, FieldDef.DISPLAY_ONLY_ATTR)) {
                    gen_set_field_attr(entityName, fd, "FRM-CPIM-AEY", false, -1);
                }
            }
            else {
                //////////////
            }
        }

        for (String subsys : subsystems) {

            if (!subsys.equals(FieldDef.FRM)) {
                gen.println("           PERFORM PRO-" + subsys + "-" + entityName + ".");
            }
        }

        finSection("PRO-FLD-" + entityName);
    }

    /******************************************************************************
     * genPRO_subsys_entity
     ******************************************************************************/
    /**
     *
     * TODO_javadoc.
     *
     *
     * @param subsys TODO_javadoc.
     * @param entityName TODO_javadoc.
     * @param fields TODO_javadoc.
     *
     * @since 1.0
     *
     */
    private static void genPRO_subsys_entity(String subsys, String entityName, ArrayList<Object> fields) {

        iniSection("PRO-" + subsys + "-" + entityName);

        ArrayList<Object>     vars  = getSubsysVarsFromFields(subsys, fields);
        ArrayList<ElementDef> array = null;

        for (int i = 0; i < vars.size(); i++) {

            if (vars.get(i) instanceof FieldDef) {

                FieldDef fd = (FieldDef) vars.get(i);

                if (Utils.searchIntInArray(fd.modifier, KEY_TYPES) < 0 && FieldDef.absenceAttribute(fd.attributes, FieldDef.DISPLAY_ONLY_ATTR)) {
                    gen_set_field_attr(entityName, fd, "FRM-CPIM-AEY", false, -1);
                }
            }
            else if (vars.get(i) instanceof ArrayList) {

                array = (ArrayList<ElementDef>) vars.get(i);

                for (int j = 0; j < array.size(); j++) {

                    for (int k = 0; k < array.get(j).index.size(); k++) {

                        if (Utils.searchIntInArray(array.get(j).field.modifier, KEY_TYPES) < 0 && FieldDef.absenceAttribute(array.get(j).field.attributes, FieldDef.DISPLAY_ONLY_ATTR)) {
                            gen_set_field_attr(entityName, array.get(j).field, "FRM-CPIM-AEY", false, k + 1);
                        }
                    }
                }
            }
       }

        finSection("PRO-" + subsys + "-" + entityName);
    }

    /******************************************************************************
     * genUNP_FLD_entity
     ******************************************************************************/
    /**
     *
     * TODO_javadoc.
     *
     *
     * @param entityName TODO_javadoc.
     * @param fields TODO_javadoc.
     * @param subsystems TODO_javadoc.
     *
     * @since 1.0
     *
     */
    private static void genUNP_FLD_entity(String entityName, ArrayList<Object> fields, ArrayList<String> subsystems) {

        iniSection("UNP-FLD-" + entityName);

        for (int i = 0; i < fields.size(); i++) {

            if (fields.get(i) instanceof FieldDef) {

                FieldDef fd = (FieldDef) fields.get(i);

                if (fd.fmsname.substring(0, 3).equals(FieldDef.FRM) && FieldDef.absenceAttribute(fd.attributes, FieldDef.DISPLAY_ONLY_ATTR)) {
                    gen_set_field_attr(entityName, fd, "FRM-CPIM-UBY", false, -1);
                }
            }
            else {
                //////////////
            }
        }

        for (String subsys : subsystems) {

            if (!subsys.equals(FieldDef.FRM)) {
                gen.println("           PERFORM UNP-" + subsys + "-" + entityName + ".");
            }
        }

        finSection("UNP-FLD-" + entityName);
    }

    /******************************************************************************
     * genUNP_subsys_entity
     ******************************************************************************/
    /**
     *
     * TODO_javadoc.
     *
     *
     * @param subsys TODO_javadoc.
     * @param entityName TODO_javadoc.
     * @param fields TODO_javadoc.
     *
     * @since 1.0
     *
     */
    private static void genUNP_subsys_entity(String subsys, String entityName, ArrayList<Object> fields) {

        iniSection("UNP-" + subsys + "-" + entityName);

        ArrayList<Object>     vars  = getSubsysVarsFromFields(subsys, fields);
        ArrayList<ElementDef> array = null;

        for (int i = 0; i < vars.size(); i++) {

            if (vars.get(i) instanceof FieldDef) {

                FieldDef fd = (FieldDef) vars.get(i);

                if (Utils.searchIntInArray(fd.modifier, KEY_TYPES) < 0 && FieldDef.absenceAttribute(fd.attributes, FieldDef.DISPLAY_ONLY_ATTR)) {
                    gen_set_field_attr(entityName, fd, "FRM-CPIM-UBY", false, -1);
                }
            }
            else if (vars.get(i) instanceof ArrayList) {

                array = (ArrayList<ElementDef>) vars.get(i);

                for (int j = 0; j < array.size(); j++) {

                    for (int k = 0; k < array.get(j).index.size(); k++) {

                        if (Utils.searchIntInArray(array.get(j).field.modifier, KEY_TYPES) < 0 && FieldDef.absenceAttribute(array.get(j).field.attributes, FieldDef.DISPLAY_ONLY_ATTR)) {
                            gen_set_field_attr(entityName, array.get(j).field, "FRM-CPIM-UBY", false, k + 1);
                        }
                    }
                }
            }
       }

        finSection("UNP-" + subsys + "-" + entityName);
    }

    /******************************************************************************
     * genVAL_KEY_entity
     ******************************************************************************/
    /**
     *
     * TODO_javadoc.
     *
     *
     * @param entityName TODO_javadoc.
     * @param fields TODO_javadoc.
     *
     * @since 1.0
     *
     */
    private static void genVAL_KEY_entity(String entityName, ArrayList<Object> fields,HashMap<String, Integer> gls ) {

        iniSection("VAL-KEY-" + entityName);

        gen.println("           PERFORM VAL-IKY-" + entityName + ".");
        gen.println("           PERFORM VAL-MKY-" + entityName + ".");
        gen.println("           PERFORM VAL-AKY-" + entityName + ".");

        finSection("VAL-KEY-" + entityName);

        //

        iniSection("VAL-IKY-" + entityName);

        for (int i = 0; i < fields.size(); i++) {

            if (fields.get(i) instanceof FieldDef) {

                FieldDef fd = (FieldDef) fields.get(i);

                if (fd.modifier == FieldDef.IKY) {
                    perform_and_validation(entityName, fd, "VAL-IKY", true, -1);
                }
            }
            else {
                //////////////
            }
        }

        finSection("VAL-IKY-" + entityName);

        //

        genVAL_MKY_entity(entityName, fields);

        //

        iniSection("VAL-AKY-" + entityName);

        for (int i = 0; i < fields.size(); i++) {

            if (fields.get(i) instanceof FieldDef) {

                FieldDef fd = (FieldDef) fields.get(i);

                if (fd.modifier == FieldDef.AKY) {
                    perform_and_validation(entityName, fd, "VAL-AKY", false, -1);
                }
            }
            else {
                //////////////
            }
        }

        finSection("VAL-AKY-" + entityName);

        //

        for (int i = 0; i < fields.size(); i++) {

            if (fields.get(i) instanceof FieldDef) {

                FieldDef fd = (FieldDef) fields.get(i);

                if (Utils.searchIntInArray(fd.modifier, KEY_TYPES) >= 0) {
                    genVAL_field(entityName, fd, -1, gls);
                }
            }
            else {
                //////////////
            }
        }
    }

    /******************************************************************************
     * perform_and_validation
     ******************************************************************************/
    /**
     *
     * TODO_javadoc.
     *
     *
     * @param entityName TODO_javadoc.
     * @param fd TODO_javadoc.
     * @param sectionName TODO_javadoc.
     * @param size TODO_javadoc.
     *
     * @since 1.0
     *
     */
    private static void perform_and_validation(String entityName, FieldDef fd, String sectionName, boolean withLineFeed, int size) {

        if (fd.replaced != null && fd.type != FieldDef.DATE) {

            for (FieldDef fr : fd.replaced) {
                perform_and_validation(entityName, fr, sectionName, true, size); /// verificar 'true'
            }
        }
        else {

            gen.print  ("           PERFORM VAL-" + fd.name);

            if (size != -1) {

                gen.println();
                gen.println("            VARYING FRM-IFLD FROM 1 BY 1 UNTIL FRM-IFLD > " + size);
                gen.println("                OR FRM-SUAR = FRM-SUAR-MAL");
                gen.println("                OR FRM-SUAR = FRM-SUAR-CLR.");
            }
            else {
                gen.println(".");
            }

            gen.println("           IF FRM-SUAR = FRM-SUAR-MAL OR FRM-SUAR = FRM-SUAR-CLR");

            if (size != -1) {
                gen.println("                SUBTRACT 1 FROM FRM-IFLD");
            }

          //if (withLineFeed) {
          //    gen.println("                MOVE FRM-IND-ERRO TO " + fd.name + "-LEN IN " + entityName + "-FLD" + (size != -1 ? "(FRM-IFLD)" : ""));
          //}
          //else {
                gen.println("                MOVE FRM-IND-ERRO TO " + fd.name + "-LEN IN " + entityName + "-FLD" + (size != -1 ? "(FRM-IFLD)" : ""));
          //}

            gen.println("                GO TO FIN-" + sectionName + "-" + entityName + ".");
        }
    }

    /******************************************************************************
     * genVAL_field
     ******************************************************************************/
    /**
     *
     * TODO_javadoc.
     *
     *
     * @param entityName TODO_javadoc.
     * @param fd TODO_javadoc.
     * @param size TODO_javadoc.
     *
     * @since 1.0
     *
     */
    private static void genVAL_field(String entityName, FieldDef fd, int size, HashMap<String, Integer> gls) {

        if (fd.replaced != null && fd.type != FieldDef.DATE) {

            for (FieldDef fr : fd.replaced) {
                genVAL_field(entityName, fr, size, gls);
            }
        }
        else {

            gen.println("       VAL-" + fd.name + " SECTION.");
            gen.println("       INI-VAL-" + fd.name + ".");

            //

            if (fd.type == FieldDef.DATE) {

                validation_response_required(entityName, fd, size);

                if (FieldDef.absenceAttribute(fd.attributes, FieldDef.DISPLAY_ONLY_ATTR)) {

                    gen.println("           MOVE " + fd.name + " IN " + entityName + "-FLD TO FEC-FECH.");
                    gen.println("           MOVE FEC-FORM-FEC TO FEC-FORM.");
                    gen.println("           MOVE FEC-FBLK-S  TO FEC-FBLK.");
                    gen.println("           MOVE FEC-CHOY-LE TO FEC-CHOY.");
                    gen.println("           MOVE FEC-VHBL-S TO FEC-VHBL.");
                }
            }

            String ident = "INI_" + fd.name.replace('-', '_');

            if (addit_hash.containsKey    (ident)) {
                gen.println(addit_hash.get(ident));
            }

            //

            if (FieldDef.absenceAttribute(fd.attributes, FieldDef.DISPLAY_ONLY_ATTR) && fd.special != FieldDef.GLS_IDC && fd.type != FieldDef.DATE) { //  &&
                validation_response_required(entityName, fd, size);
            }

            if (fd.special == FieldDef.GLS_IDC) {

                String glosaField = fd.name.substring(0, 3) + "-GLS-" + fd.name.substring(8);

                gen.println("           IF " + glosaField + " IN " + entityName + "-FLD NOT > IDC-INIC-GLS");
                gen.println("              MOVE IDC-INIC-GLS TO " + glosaField + " IN " + entityName + "-FLD.");
                gen.println("      *VAL-GLS para IDC valida glosa ( extension ) de identificador");
                gen.println("           MOVE " + glosaField + " IN " + entityName + "-FLD TO IDC-GLS-RUTV.");
                gen.println("           PERFORM VAL-GLS.");
                gen.println("           MOVE IDC-GLS-RUTV TO " + glosaField + " IN " + entityName + "-FLD.");
            }
            else if (fd.type == FieldDef.STRING && fd.special == FieldDef.VRF) {
           //     validation_response_required(entityName, fd, size);
           //OGB , se agrega validacion de VAL-RUT 	
                gen.println("      *VAL-RUT Valida Rut para campo IDC");
                gen.println("           MOVE IDC-ZERO-S TO IDC-ZERO.");
                gen.println("           MOVE " + fd.name.substring(0, 3) + "-NUM-" + fd.name.substring(8) + " IN " + entityName + "-FLD TO IDC-NUM-RUTV.");
                gen.println("           MOVE " + fd.name + " IN " + entityName + "-FLD TO IDC-VRF-RUTV.");
                gen.println("           PERFORM VAL-RUT.");
            }
            else if (fd.type == FieldDef.STRING && fd.special == FieldDef.IDC) {
            	
                gen.println("      *VAL-IDC Valida identificador");
                gen.println("           MOVE "+ fd.name +" IN " + entityName + "-FLD TO IDC-IND-RUTV.");
                gen.println("           PERFORM VAL-IDC.");
                gen.println("           MOVE IDC-IND-RUTV TO "+ fd.name +" IN " + entityName + "-FLD.");
            	
            }
            // probando ...

            //String ident = "INI_" + fd.name.replace('-', '_');
            //
            //if (addit_hash.containsKey    (ident)) {
            //    gen.println(addit_hash.get(ident));
            //}

            //

            if (fd.type == FieldDef.DATE) {

                if (FieldDef.absenceAttribute(fd.attributes, FieldDef.DISPLAY_ONLY_ATTR)) {

                    gen.println("           MOVE FEC-VAL-FEC TO FEC-CMND.");
                    gen.println("           PERFORM PRO-FEC.");
                    gen.println("           IF FEC-STAT-OKS");
                    gen.println("               MOVE FEC-FECH TO " + fd.name + " IN " + entityName + "-FLD");
                    gen.println("           ELSE");
                    gen.println("               MOVE FRM-SUAR-MAL TO FRM-SUAR");
                    gen.println("               MOVE FEC-MENS     TO FRM-MENS");
                    gen.println("               GO TO FIN-VAL-" + fd.name + ".");
                }
            }

            //

            ident = fd.name.replace('-', '_');

            if (addit_hash.containsKey    (ident)) {
                gen.println(addit_hash.get(ident));
            }

            //

            if (FieldDef.absenceAttribute(fd.attributes, FieldDef.DISPLAY_ONLY_ATTR) && fd.special != FieldDef.GLS_IDC) {
                domain_range_validation_search(entityName, fd, size, gls, "VAL");
            }

            //

            //if (fd.fmsname.substring(3, 8).equals("_COD_")) { ///////// validar
            //    domain_range_validation_search(entityName, fd, -1, gls, "VAL");
           // }

            //

            finSection("VAL-" + fd.name, "FIN_" + fd.name.replace('-', '_'));
        }
    }

    /******************************************************************************
     * domain_range_validation_search
     ******************************************************************************/
    /**
     *
     * TODO_javadoc.
     *
     *
     * @param entityName TODO_javadoc.
     * @param fd TODO_javadoc.
     * @param size TODO_javadoc.
     *
     * @since 1.0
     *
     */
    private static void domain_range_validation_search(String entityName, FieldDef fd, int size, HashMap<String, Integer> gls,  String sectionType) {


        //ogb-ini
        
        if ( ranges_hash.containsKey(fd.name)) {

            DomainRangeDef range = ranges_hash.get(fd.name);

            //logger.debug("range (" + fd.name + ") --> domain : '" + range.getDomain() + "'");

            if (domains_hash.containsKey(range.getDomain())) {

                DomainRangeDef domain = domains_hash.get(range.getDomain());

              //logger.debug("domain (" + range.getDomain() + ") --> validation : '" + domain.getValidation() + "'");

                ////////////////////////////////////////////////
                //si esta formando secciones PUT y el campo posee glosa tipo FRM-GLS-
                if (sectionType.equals("PUT") && gls.containsKey(fd.name.substring(8,12))) {
                
	                if (range.getSearch().equals("BUSTAB") /*&&*/|| domain.getSearch().equals("BUSTAB")) {
	
                        gen.println("      *BUS-TAB busca glosa de codigo en tabla");
	                	
	                    switch (fd.type) {
	
	                    case FieldDef.INTEGER :
	                    case FieldDef.LONG :
	                    case FieldDef.DOUBLE :
	                    case FieldDef.DATE :
	
	                        gen.println("           IF " + fd.name + " IN " + entityName + "-FLD > ZEROES");
	
	                        break;
	
	                    case FieldDef.CHAR :
	                    case FieldDef.BOOLEAN :
	                    case FieldDef.STRING :
	
	                        gen.println("           IF " + fd.name + " IN " + entityName + "-FLD > SPACES");
	
	                        break;
	                    }
	
	                    gen.println("               MOVE '" + domain.getSystem() + "' TO TAB-COD-SIST");
	                    gen.println("               MOVE '" + domain.getTable()  + "' TO TAB-COD-TTAB IN TAB");
	                    gen.println("               MOVE " + fd.name + " IN " + entityName + "-FLD TO TAB-COD-CTAB IN TAB");
	                    gen.println("               PERFORM BUS-TAB");
	                    
	                    int glsSize = gls.get(fd.name.substring(8,12));
	                    
	                    if (glsSize == 0 || glsSize > 12)
		                    gen.println("               MOVE TAB-GLS-DESC IN TAB TO");
	                    else if(glsSize > 5)
		                    gen.println("               MOVE TAB-GLS-DCOR IN TAB TO");
	                    else 
		                    gen.println("               MOVE TAB-GLS-ABRV IN TAB TO");
	                    
	                    gen.println("                    FRM-GLS-" + fd.name.substring(8) + " IN " + entityName + "-FLD");            // revisar que exista el campo FRM-GLS-" + fd.name.substring(8) //  && existField("FRM-GLS-" + fd.name.substring(8))
	                    gen.println("           ELSE");
	                    gen.println("               MOVE SPACES TO FRM-GLS-" + fd.name.substring(8) + " IN " + entityName + "-FLD."); // revisar que exista el campo FRM-GLS-" + fd.name.substring(8) //  && existField("FRM-GLS-" + fd.name.substring(8))
	                }
	                
	                if (range.getSearch().equals("BUSMSC") /*&&*/|| domain.getSearch().equals("BUSMSC")) { ///// verificar
	                	
                        gen.println("      *BUS-MSC busca glosa de miscelaneo en tabla");
	                    gen.println("           IF " + fd.name + " IN " + entityName + "-FLD > SPACES");
		                gen.println("               MOVE '" + domain.getSystem() + "' TO MSC-COD-SIST");
	                    gen.println("               MOVE '" + domain.getTable()  + "' TO MSC-COD-TMSC IN MSC");
	                    gen.println("               MOVE " + fd.name + " IN " + entityName + "-FLD TO MSC-COD-CMSC IN MSC");
	                    gen.println("               PERFORM BUS-MSC");
	                    
	                    int glsSize = gls.get(fd.name.substring(8,12));
	                    
	                    if (glsSize == 0 || glsSize > 12)
		                    gen.println("               MOVE MSC-GLS-DESC IN MSC TO");
	                    else if(glsSize > 5)
		                    gen.println("               MOVE MSC-GLS-DCOR IN MSC TO");
	                    else 
		                    gen.println("               MOVE MSC-GLS-ABRV IN MSC TO");
	                    
	                    gen.println("                    FRM-GLS-" + fd.name.substring(8) + " IN " + entityName + "-FLD"); 
	                    gen.println("           ELSE");
	                    gen.println("               MOVE SPACES TO"); 
	                    gen.println("                    FRM-GLS-" + fd.name.substring(8) + " IN " + entityName + "-FLD.");

	                }
	                if (range.getSearch().equals("BUSOFI") /*&&*/|| domain.getSearch().equals("BUSOFI")) {
	                	
                        gen.println("      *BUS-OFI busca oficina en tablas");
	                    gen.println("           IF " + fd.name + " IN " + entityName + "-FLD > SPACES");
	                    gen.println("               MOVE " + fd.name + " IN " + entityName + "-FLD TO OFI-COD-OFIC IN OFI");
	                    gen.println("               PERFORM BUS-OFI");
	                    
	                    int glsSize = gls.get(fd.name.substring(8,12));
	                    
	                    if (glsSize == 0 || glsSize > 5)
		                    gen.println("               MOVE OFI-GLS-DESC IN OFI TO FRM-GLS-" + fd.name.substring(8) + " IN " + entityName + "-FLD");
	                    else 
		                    gen.println("               MOVE OFI-GLS-ABRV IN OFI TO FRM-GLS-" + fd.name.substring(8) + " IN " + entityName + "-FLD");
	                    gen.println("           ELSE");
	                    gen.println("               MOVE SPACES TO FRM-GLS-" + fd.name.substring(8) + " IN " + entityName + "-FLD."); 

	                }
	                if (range.getSearch().equals("BUSUSR") /*&&*/|| domain.getSearch().equals("BUSUSR")) {
	                	
                        gen.println("      *BUS-USR busca usuario en tablas");
	                    gen.println("           IF " + fd.name + " IN " + entityName + "-FLD > SPACES");
	                    gen.println("               MOVE " + fd.name + " IN " + entityName + "-FLD TO USR-COD-USER IN USR");
	                    gen.println("               PERFORM BUS-USR");
	                    
	                    int glsSize = gls.get(fd.name.substring(8,12));
	                    
	                    if (glsSize == 0 || glsSize > 12)
		                    gen.println("               MOVE USR-GLS-DESC IN USR TO FRM-GLS-" + fd.name.substring(8) + " IN " + entityName + "-FLD");
	                    else if(glsSize > 5)
		                    gen.println("               MOVE USR-GLS-DCOR IN USR TO FRM-GLS-" + fd.name.substring(8) + " IN " + entityName + "-FLD");
	                    else 
		                    gen.println("               MOVE USR-GLS-ABRV IN USR TO FRM-GLS-" + fd.name.substring(8) + " IN " + entityName + "-FLD");
	                    gen.println("           ELSE");
	                    gen.println("               MOVE SPACES TO FRM-GLS-" + fd.name.substring(8) + " IN " + entityName + "-FLD."); 

	                }
                }
                else if (sectionType.equals("VAL")) {
                	if (domain.getValidation().equals("VALCOD")) {
                		
                        gen.println("      *VAL-COD Valida codigo de tabla");
                        gen.println("           MOVE '" + domain.getSystem() + "' TO TAB-COD-SIST.");
                        gen.println("           MOVE '" + domain.getTable() +  "' TO TAB-COD-TTAB IN TAB.");
                        gen.println("           MOVE " + fd.name + " IN " + entityName + "-FLD" + (size != -1 ? "(FRM-IFLD)" : "") + " TO TAB-COD-CTAB IN TAB.");
                        gen.println("           PERFORM VAL-COD.");
                        
                        if(gls.containsKey(fd.name.substring(8,12))) {
                        	
    	                    int glsSize = gls.get(fd.name.substring(8,12));
                        	
                            gen.println("           IF MSG-COD-MENS = 'COD    NEX' OR");
    	                    gen.println("             " + fd.name + " IN " + entityName + "-FLD NOT > SPACES");
    	                    gen.println("               MOVE SPACES TO FRM-GLS-" + fd.name.substring(8) + " IN " + entityName + "-FLD");
    	                    gen.println("           ELSE");
    	                    if (glsSize == 0 || glsSize > 12) 
    	                    	gen.println("               MOVE TAB-GLS-DESC IN TAB TO");
    	                    else if (glsSize > 5)
    	                    	gen.println("               MOVE TAB-GLS-DCOR IN TAB TO");
    	                    else
    	                    	gen.println("               MOVE TAB-GLS-ABRV IN TAB TO");
    	                    
	                    	gen.println("                   FRM-GLS-"+ fd.name.substring(8) + " IN " + entityName + "-FLD.");
    	                    
                        }
                	}
                	if (domain.getValidation().equals("VALIND")) {

                        gen.println("      *VAL-IND Valida miscelaneo de tabla");
                        gen.println("           MOVE '" + domain.getSystem() + "' TO MSC-COD-SIST.");
                        gen.println("           MOVE '" + domain.getTable() +  "' TO MSC-COD-TMSC IN MSC.");
                        gen.println("           MOVE " + fd.name + " IN " + entityName + "-FLD" + (size != -1 ? "(FRM-IFLD)" : "") + " TO MSC-COD-CMSC IN MSC.");
                        gen.println("           PERFORM VAL-IND.");
                        
                        if(gls.containsKey(fd.name.substring(8,12))) {
                        	
    	                    int glsSize = gls.get(fd.name.substring(8,12));
                        	
                            gen.println("           IF MSG-COD-MENS = 'COD    NEX' OR");
    	                    gen.println("             " + fd.name + " IN " + entityName + "-FLD NOT > SPACES");
    	                    gen.println("               MOVE SPACES TO FRM-GLS-" + fd.name.substring(8) + " IN " + entityName + "-FLD");
    	                    gen.println("           ELSE");
    	                    if (glsSize == 0 || glsSize > 12) 
    	                    	gen.println("               MOVE MSC-GLS-DESC IN MSC TO");
    	                    else if (glsSize > 5)
    	                    	gen.println("               MOVE MSC-GLS-DCOR IN MSC TO");
    	                    else
    	                    	gen.println("               MOVE MSC-GLS-ABRV IN MSC TO");
    	                    
	                    	gen.println("                   FRM-GLS-"+ fd.name.substring(8) + " IN " + entityName + "-FLD.");
                        
                        }
                	}
                	if (domain.getValidation().equals("VALOFI")) {
                        gen.println("      *VAL-OFI Valida codigo de Oficina en TABLAS");
                        gen.println("           MOVE " + fd.name + " IN " + entityName + "-FLD" + (size != -1 ? "(FRM-IFLD)" : "") + " TO OFI-COD-OFIC IN OFI.");
                        gen.println("           PERFORM VAL-OFI.");
                        gen.println("           IF MSG-COD-MENS NOT = SPACES");
                        gen.println("               MOVE MSG-GLS-DESC TO FRM-MENS");
                        gen.println("               MOVE FRM-SUAR-MAL TO FRM-SUAR.");
                        if(gls.containsKey(fd.name.substring(8,12))) {
    	                    int glsSize = gls.get(fd.name.substring(8,12));
                        	
                            gen.println("           IF MSG-COD-MENS = 'COD    NEX'");
    	                    gen.println("               MOVE SPACES TO FRM-GLS-" + fd.name.substring(8) + " IN " + entityName + "-FLD");
    	                    gen.println("           ELSE");
    	                    if (glsSize == 0 || glsSize > 5)
    	                    	gen.println("           MOVE OFI-GLS-DESC IN OFI TO FRM-GLS-"+ fd.name.substring(8) + " IN " + entityName + "-FLD.");
    	                    else
    	                    	gen.println("           MOVE OFI-GLS-ABRV IN OFI TO FRM-GLS-"+ fd.name.substring(8) + " IN " + entityName + "-FLD.");
                        }
                        
                	}
                	if (domain.getValidation().equals("VALUSR")) {
                        gen.println("      *VAL-USR Valida Usuario");
                        gen.println("           MOVE " + fd.name + " IN " + entityName + "-FLD" + (size != -1 ? "(FRM-IFLD)" : "") + " TO USR-COD-USER IN USR.");
                        gen.println("           PERFORM VAL-USR.");
                        gen.println("           IF MSG-COD-MENS > SPACES");
                        gen.println("               MOVE MSG-GLS-DESC TO FRM-MENS");
                        gen.println("               MOVE FRM-SUAR-MAL TO FRM-SUAR.");
                        if(gls.containsKey(fd.name.substring(8,12))) {
    	                    int glsSize = gls.get(fd.name.substring(8,12));
                        	
                            gen.println("           IF MSG-COD-MENS = 'COD    NEX'");
    	                    if (glsSize == 0 || glsSize > 12)
    	                    	gen.println("           MOVE USR-GLS-DESC IN USR TO FRM-GLS-"+ fd.name.substring(8) + " IN " + entityName + "-FLD.");
    	                    else if (glsSize > 5)
    	                    	gen.println("           MOVE USR-GLS-DCOR IN USR TO FRM-GLS-"+ fd.name.substring(8) + " IN " + entityName + "-FLD.");
    	                    else
    	                    	gen.println("           MOVE USR-GLS-ABRV IN USR TO FRM-GLS-"+ fd.name.substring(8) + " IN " + entityName + "-FLD.");
                            gen.println("           ELSE");
    	                    gen.println("               MOVE SPACES TO FRM-GLS-" + fd.name.substring(8) + " IN " + entityName + "-FLD");

                        }
                	}
                	if (domain.getValidation().equals("VALTDU")) {
                        gen.println("      *VAL-TDU Valida Tipo de Usuario");
                        gen.println("           MOVE '" + domain.getTable() +  "'        TO USR-COD-TTAB IN USR.");
                        gen.println("           MOVE " + fd.name + " IN " + entityName + "-FLD" + (size != -1 ? "(FRM-IFLD)" : "") + " TO USR-COD-USER IN USR.");
                        gen.println("           PERFORM VAL-TDU.");
                        gen.println("           IF MSG-COD-MENS > SPACES");
                        gen.println("               MOVE MSG-GLS-DESC TO FRM-MENS");
                        gen.println("               MOVE FRM-SUAR-MAL TO FRM-SUAR.");
                        if(gls.containsKey(fd.name.substring(8,12))) {
    	                    int glsSize = gls.get(fd.name.substring(8,12));
                            gen.println("           IF MSG-COD-MENS = 'COD    NEX' AND");
    	                    gen.println("             " + fd.name + " IN " + entityName + "-FLD > SPACES");
    	                    if (glsSize == 0 || glsSize > 12)
    	                    	gen.println("           MOVE USR-GLS-DESC IN USR TO FRM-GLS-"+ fd.name.substring(8) + " IN " + entityName + "-FLD.");
    	                    else if (glsSize > 5)
    	                    	gen.println("           MOVE USR-GLS-DCOR IN USR TO FRM-GLS-"+ fd.name.substring(8) + " IN " + entityName + "-FLD.");
    	                    else
    	                    	gen.println("           MOVE USR-GLS-ABRV IN USR TO FRM-GLS-"+ fd.name.substring(8) + " IN " + entityName + "-FLD.");
                            gen.println("           ELSE");
    	                    gen.println("               MOVE SPACES TO FRM-GLS-" + fd.name.substring(8) + " IN " + entityName + "-FLD");
                        }
                        
                	}
                	
                
                }
                
            }

        	
        }
        //ogb-fin
        
        
        //


    }

    /******************************************************************************
     * validation_response_required
     ******************************************************************************/
    /**
     *
     * TODO_javadoc.
     *
     *
     * @param entityName TODO_javadoc.
     * @param fd TODO_javadoc.
     * @param size TODO_javadoc.
     *
     * @since 1.0
     *
     */
    private static void validation_response_required(String entityName, FieldDef fd, int size) {

        switch (fd.type) {

        case FieldDef.INTEGER :
        case FieldDef.LONG :
        case FieldDef.DOUBLE :
        case FieldDef.DATE :

            if (FieldDef.hasAttribute(fd.attributes, FieldDef.RESPONSE_REQUIRED_ATTR)) {

                gen.println("           IF " + fd.name + " IN " + entityName + "-FLD" + (size != -1 ? "(FRM-IFLD)" : "") + " = ZEROES");
                gen.println("                PERFORM ERR-GLS");
                gen.println("                GO TO FIN-VAL-" + fd.name + ".");
            }
            else {

                gen.println("           IF " + fd.name + " IN " + entityName + "-FLD" + (size != -1 ? "(FRM-IFLD)" : "") + " NOT > ZEROES");
                gen.println("              MOVE ZEROES TO " + fd.name + " IN " + entityName + "-FLD" + (size != -1 ? "(FRM-IFLD)" : "") + ".");
            }

            break;

        case FieldDef.CHAR :
        case FieldDef.BOOLEAN :
        case FieldDef.STRING :

            if (FieldDef.hasAttribute(fd.attributes, FieldDef.RESPONSE_REQUIRED_ATTR)) {

                gen.println("           IF " + fd.name + " IN " + entityName + "-FLD" + (size != -1 ? "(FRM-IFLD)" : "") + " NOT > SPACES"); // 1902_06 02 07 diff liq.docx (mail 03-09-2019 18:49)
                gen.println("                PERFORM ERR-GLS");
                gen.println("                GO TO FIN-VAL-" + fd.name + ".");
            }
            else {

                gen.println("           IF " + fd.name + " IN " + entityName + "-FLD" + (size != -1 ? "(FRM-IFLD)" : "") + " NOT > SPACES");
                gen.println("              MOVE SPACES TO " + fd.name + " IN " + entityName + "-FLD" + (size != -1 ? "(FRM-IFLD)" : "") + ".");
            }

            break;
        }
    }

    /******************************************************************************
     * genVAL_MKY_entity
     ******************************************************************************/
    /**
     *
     * TODO_javadoc.
     *
     *
     * @param entityName TODO_javadoc.
     * @param fields TODO_javadoc.
     *
     * @since 1.0
     *
     */
    private static void genVAL_MKY_entity(String entityName, ArrayList<Object> fields) {

        iniSection("VAL-MKY-" + entityName);

        for (int i = 0; i < fields.size(); i++) {

            if (fields.get(i) instanceof FieldDef) {

                FieldDef fd = (FieldDef) fields.get(i);

                if (fd.modifier == FieldDef.MKY && action == BQ_ACTION) {
                    perform_and_validation(entityName, fd, "VAL-MKY", true, -1);
                }
            }
            else {
                //////////////
            }
        }

        finSection("VAL-MKY-" + entityName);
    }

    /******************************************************************************
     * genVAL_CON_KEY_entity
     ******************************************************************************/
    /**
     *
     * TODO_javadoc.
     *
     *
     * @param entityName TODO_javadoc.
     * @param fields TODO_javadoc.
     *
     * @since 1.0
     *
     */
    private static void genVAL_CON_KEY_entity(String entityName, ArrayList<Object> fields) {

        iniSection("VAL-CON-KEY-" + entityName);

        boolean first = true;

        for (int i = 0; i < fields.size(); i++) {

            if (fields.get(i) instanceof FieldDef) {

                FieldDef fd = (FieldDef) fields.get(i);

                first = gen_cond_val_key(entityName, fd, first, KEY_TYPES);
            }
            else {
                //////////////
            }
        }

        gen.println("                PERFORM ERR-KEY");
        gen.println("                PERFORM FST-KEY-" + entityName + ".");

        finSection("VAL-CON-KEY-" + entityName);
    }

    /******************************************************************************
     * gen_cond_val_key
     ******************************************************************************/
    /**
     *
     * TODO_javadoc.
     *
     *
     * @param entityName TODO_javadoc.
     * @param fd TODO_javadoc.
     * @param first TODO_javadoc.
     *
     * @since 1.0
     *
     */
    private static boolean gen_cond_val_key(String entityName, FieldDef fd, boolean first, int[] keys) {

        if (fd.replaced != null) {

            for (FieldDef fr : fd.replaced) {
                first = gen_cond_val_key(entityName, fr, first, keys);
            }
        }
        else {

            if (Utils.searchIntInArray(fd.modifier, keys) >= 0) {

                if (first) {

                    gen.print  ("           IF    ");

                    first = false;
                }
                else {
                    gen.print  ("              AND");
                }

                //

                switch (fd.type) {

                case FieldDef.INTEGER :
                case FieldDef.LONG :
                case FieldDef.DOUBLE :
                case FieldDef.DATE :

                    gen.println(" " + fd.name + " IN " + entityName + "-FLD NOT > ZEROES");

                    break;

                case FieldDef.CHAR :
                case FieldDef.BOOLEAN :
                case FieldDef.STRING :

                    if (fd.special == FieldDef.GLS_IDC) {
                        gen.println(" " + fd.name + " IN " + entityName + "-FLD NOT > IDC-INIC-GLS");
                    }
                    else {
                        gen.println(" " + fd.name + " IN " + entityName + "-FLD NOT > SPACES");
                    }

                    break;
                }
            }
        }

        return first;
    }

    /******************************************************************************
     * genVAL_CON_IKY_entity
     ******************************************************************************/
    /**
     *
     * TODO_javadoc.
     *
     *
     * @param entityName TODO_javadoc.
     * @param fields TODO_javadoc.
     *
     * @since 1.0
     *
     */
    private static void genVAL_CON_IKY_entity(String entityName, ArrayList<Object> fields) {

        iniSection("VAL-CON-IKY-" + entityName);

        boolean first = true;

        for (int i = 0; i < fields.size(); i++) {

            if (fields.get(i) instanceof FieldDef) {

                FieldDef fd = (FieldDef) fields.get(i);

                first = gen_cond_val_key(entityName, fd, first, new int[] { FieldDef.IKY });
            }
            else {
                //////////////
            }
        }

        gen.println("                PERFORM ERR-KEY");
        gen.println("                PERFORM FST-KEY-" + entityName + ".");

        finSection("VAL-CON-IKY-" + entityName);
    }

    /******************************************************************************
     * genVAL_NUM_KEY_entity
     ******************************************************************************/
    /**
     *
     * TODO_javadoc.
     *
     *
     * @param entityName TODO_javadoc.
     * @param fields TODO_javadoc.
     *
     * @since 1.0
     *
     */
    private static void genVAL_NUM_KEY_entity(String entityName, ArrayList<Object> fields) {

        iniSection("VAL-NUM-KEY-" + entityName);

        gen.println("           PERFORM VAL-NUM-IKY-" + entityName + ".");
        gen.println("           PERFORM VAL-NUM-MKY-" + entityName + ".");
        gen.println("           PERFORM VAL-NUM-AKY-" + entityName + ".");

        finSection("VAL-NUM-KEY-" + entityName);

        //

        iniSection("VAL-NUM-IKY-" + entityName);

        for (int i = 0; i < fields.size(); i++) {

            if (fields.get(i) instanceof FieldDef) {

                FieldDef fd = (FieldDef) fields.get(i);

                if (fd.modifier == FieldDef.IKY) {

                    switch (fd.type) {

                    case FieldDef.INTEGER :
                    case FieldDef.LONG :
                    case FieldDef.DOUBLE :
                  //case FieldDef.DATE : // TODO_ALA: revisar

                        gen_num_validation(entityName, fd, "VAL-NUM-IKY", -1);

                        break;
                    }
                    
                    if (fd.replaced != null && fd.special == FieldDef.VRF) {
                        for (FieldDef fr : fd.replaced) {
                        	
                            switch (fr.type) {

                            case FieldDef.INTEGER :
                            case FieldDef.LONG :
                            case FieldDef.DOUBLE :

                                gen_num_validation(entityName, fr, "VAL-NUM-MKY", -1);

                                break;
                            }
                        }
                    }
                }
            }
            else {
                //////////////
            }
        }

        finSection("VAL-NUM-IKY-" + entityName);

        //

        iniSection("VAL-NUM-MKY-" + entityName);

        for (int i = 0; i < fields.size(); i++) {

            if (fields.get(i) instanceof FieldDef) {

                FieldDef fd = (FieldDef) fields.get(i);

                if (fd.modifier == FieldDef.MKY) {

                    switch (fd.type) {

                    case FieldDef.INTEGER :
                    case FieldDef.LONG :
                    case FieldDef.DOUBLE :
                  //case FieldDef.DATE : // TODO_ALA: revisar

                        gen_num_validation(entityName, fd, "VAL-NUM-MKY", -1);

                        break;
                    }
                    
                    if (fd.replaced != null && fd.special == FieldDef.VRF) {
                        for (FieldDef fr : fd.replaced) {
                        	
                            switch (fr.type) {

                            case FieldDef.INTEGER :
                            case FieldDef.LONG :
                            case FieldDef.DOUBLE :

                                gen_num_validation(entityName, fr, "VAL-NUM-MKY", -1);

                                break;
                            }
                        }
                    }
                    
                }
                
            }
            else {
                //////////////
            }
        }
        
        finSection("VAL-NUM-MKY-" + entityName);

        //

        iniSection("VAL-NUM-AKY-" + entityName);

        for (int i = 0; i < fields.size(); i++) {

            if (fields.get(i) instanceof FieldDef) {

                FieldDef fd = (FieldDef) fields.get(i);

                if (fd.modifier == FieldDef.AKY) {

                    switch (fd.type) {

                    case FieldDef.INTEGER :
                    case FieldDef.LONG :
                    case FieldDef.DOUBLE :
                  //case FieldDef.DATE : // TODO_ALA: revisar

                        gen_num_validation(entityName, fd, "VAL-NUM-AKY", -1);

                        break;
                    }
                    
                    if (fd.replaced != null && fd.special == FieldDef.VRF) {
                        for (FieldDef fr : fd.replaced) {
                        	
                            switch (fr.type) {

                            case FieldDef.INTEGER :
                            case FieldDef.LONG :
                            case FieldDef.DOUBLE :

                                gen_num_validation(entityName, fr, "VAL-NUM-MKY", -1);

                                break;
                            }
                        }
                    }
                }
            }
            else {
                //////////////
            }
        }

        finSection("VAL-NUM-AKY-" + entityName);

    }

    /******************************************************************************
     * gen_num_validation
     ******************************************************************************/
    /**
     *
     * TODO_javadoc.
     *
     *
     * @param entityName TODO_javadoc.
     * @param fd TODO_javadoc.
     * @param sectionName TODO_javadoc.
     * @param idx TODO_javadoc.
     *
     * @since 1.0
     *
     */
    private static void gen_num_validation(String entityName, FieldDef fd, String sectionName, int idx) {

        gen.println("       VAL-NUM-" + fd.name + (idx != -1 ? "-" + idx : "") + ".");
        gen.println("           MOVE " + fd.name + "-ALF IN " + entityName + "-FLD" + (idx != -1 ? "(" + idx + ")" : "") + " TO NUM-NUME.");
        gen.println("           MOVE NUM-ZERO-S TO NUM-ZERO."); // TODO_ALA: revisar
        gen.println("           MOVE NUM-SGNO-" + (fd.sign ? "S" : "N") + " TO NUM-SGNO.");
        gen.println("           MOVE " + (fd.sign ? fd.integers - 1 : fd.integers) + " TO NUM-NENT.");
        gen.println("           MOVE " + fd.decimals +                               " TO NUM-NDCM.");
        gen.println("           PERFORM VAL-NUM.");
        gen.println("           IF NUM-STAT-OKS");
        gen.println("                MOVE NUM-N" + (fd.sign ? "S" : "N") + "9" + (fd.decimals == 0 ? "N" : "V") + " TO " + fd.name + " IN " + entityName + "-FLD" + (idx != -1 ? "(" + idx + ")" : ""));
        gen.println("           ELSE");
        gen.println("                MOVE NUM-MENS     TO FRM-MENS");
        gen.println("                MOVE FRM-SUAR-MAL TO FRM-SUAR");
        gen.println("                MOVE -9 TO " + fd.name + "-LEN IN " + entityName + "-FLD" + (idx != -1 ? "(" + idx + ")" : ""));
        gen.println("                GO TO FIN-" + sectionName + "-" + entityName + ".");
    }

    /******************************************************************************
     * genVAL_NUM_FLD_entity
     ******************************************************************************/
    /**
     *
     * TODO_javadoc.
     *
     *
     * @param entityName TODO_javadoc.
     * @param fields TODO_javadoc.
     *
     * @since 1.0
     *
     */
    private static void genVAL_NUM_FLD_entity(String entityName, ArrayList<Object> fields) {

        iniSection("VAL-NUM-FLD-" + entityName);

        ArrayList<ElementDef> array = null;

        for (int i = 0; i < fields.size(); i++) {

            if (fields.get(i) instanceof FieldDef) {

                FieldDef fd = (FieldDef) fields.get(i);

                val_numerica(entityName, fd, -1);
            }
            else if (fields.get(i) instanceof ArrayList) {

                array = (ArrayList<ElementDef>) fields.get(i);

                for (int j = 0; j < array.size(); j++) {

                    if (array.get(j).field.name.substring(0, 3).equals(FieldDef.FRM)) {

                        if (array.get(j).field.special != FieldDef.FEC) {

                            for (int k = 0; k < array.get(j).index.size(); k++) {
                                val_numerica(entityName, array.get(j).field, k + 1);
                            }
                        }
                    }
                }
            }
        }

        finSection("VAL-NUM-FLD-" + entityName);
    }

    /******************************************************************************
     * val_numerica
     ******************************************************************************/
    /**
     *
     * TODO_javadoc.
     *
     *
     * @param entityName TODO_javadoc.
     * @param fd TODO_javadoc.
     * @param idx TODO_javadoc.
     *
     * @since 1.0
     *
     */
    private static void val_numerica(String entityName, FieldDef fd, int idx) {

        if (fd.replaced != null && fd.type != FieldDef.DATE) {

            for (FieldDef fr : fd.replaced) {
                val_numerica(entityName, fr, idx);
            }
        }
        else {

            if (Utils.searchIntInArray(fd.modifier, KEY_TYPES) < 0) {

                switch (fd.type) {

                case FieldDef.INTEGER :
                case FieldDef.LONG :
                case FieldDef.DOUBLE :
              //case FieldDef.DATE : // TODO_ALA: revisar

                    gen_num_validation(entityName, fd, "VAL-NUM-FLD", idx);

                    break;
                }
            }
        }
    }

    /******************************************************************************
     * genEDT_KEY_entity
     ******************************************************************************/
    /**
     *
     * TODO_javadoc.
     *
     *
     * @param entityName TODO_javadoc.
     * @param fields TODO_javadoc.
     *
     * @since 1.0
     *
     */
    private static void genEDT_KEY_entity(String entityName, ArrayList<Object> fields) {

        iniSection("EDT-KEY-" + entityName);

        gen.println("           PERFORM EDT-IKY-" + entityName + ".");
        gen.println("           PERFORM EDT-MKY-" + entityName + ".");
        gen.println("           PERFORM EDT-AKY-" + entityName + ".");

        finSection("EDT-KEY-" + entityName);

        //

        iniSection("EDT-IKY-" + entityName);

        for (int i = 0; i < fields.size(); i++) {

            if (fields.get(i) instanceof FieldDef) {

                FieldDef fd = (FieldDef) fields.get(i);

                if (fd.modifier == FieldDef.IKY) {

                    switch (fd.type) {

                    case FieldDef.INTEGER :
                    case FieldDef.LONG :
                    case FieldDef.DOUBLE :
                  //case FieldDef.DATE : // TODO_ALA: revisar

                        prepare_num_edition(entityName, fd, "EDT-IKY", -1);

                        break;
                    }
                    
                    if (fd.replaced != null && fd.special == FieldDef.VRF) {
                        for (FieldDef fr : fd.replaced) {
                        	
                            switch (fr.type) {

                            case FieldDef.INTEGER :
                            case FieldDef.LONG :
                            case FieldDef.DOUBLE :

                            	prepare_num_edition(entityName, fr, "EDT-MKY", -1);

                                break;
                            }
                        }
                    }
                }
            }
            else {
                //////////////
            }
        }

        finSection("EDT-IKY-" + entityName);

        //

        iniSection("EDT-MKY-" + entityName);

        for (int i = 0; i < fields.size(); i++) {

            if (fields.get(i) instanceof FieldDef) {

                FieldDef fd = (FieldDef) fields.get(i);

                if (fd.modifier == FieldDef.MKY) {

                    switch (fd.type) {

                    case FieldDef.INTEGER :
                    case FieldDef.LONG :
                    case FieldDef.DOUBLE :
                  //case FieldDef.DATE : // TODO_ALA: revisar

                        prepare_num_edition(entityName, fd, "EDT-MKY", -1);

                        break;
                    }
                    
                    if (fd.replaced != null && fd.special == FieldDef.VRF) {
                        for (FieldDef fr : fd.replaced) {
                        	
                            switch (fr.type) {

                            case FieldDef.INTEGER :
                            case FieldDef.LONG :
                            case FieldDef.DOUBLE :

                            	prepare_num_edition(entityName, fr, "EDT-MKY", -1);

                                break;
                            }
                        }
                    }
                    
                    
                }
            }
            else {
                //////////////
            }
        }

        finSection("EDT-MKY-" + entityName);

        //

        iniSection("EDT-AKY-" + entityName);

        for (int i = 0; i < fields.size(); i++) {

            if (fields.get(i) instanceof FieldDef) {

                FieldDef fd = (FieldDef) fields.get(i);

                if (fd.modifier == FieldDef.AKY) {

                    switch (fd.type) {

                    case FieldDef.INTEGER :
                    case FieldDef.LONG :
                    case FieldDef.DOUBLE :
                  //case FieldDef.DATE : // TODO_ALA: revisar

                        prepare_num_edition(entityName, fd, "EDT-AKY", -1);

                        break;
                    }
                    
                    if (fd.replaced != null && fd.special == FieldDef.VRF) {
                        for (FieldDef fr : fd.replaced) {
                        	
                            switch (fr.type) {

                            case FieldDef.INTEGER :
                            case FieldDef.LONG :
                            case FieldDef.DOUBLE :

                            	prepare_num_edition(entityName, fr, "EDT-MKY", -1);

                                break;
                            }
                        }
                    }
                }
            }
            else {
                //////////////
            }
        }

        finSection("EDT-AKY-" + entityName);

    }

    /******************************************************************************
     * prepare_num_edition
     ******************************************************************************/
    /**
     *
     * TODO_javadoc.
     *
     *
     * @param entityName TODO_javadoc.
     * @param fd TODO_javadoc.
     * @param sectionName TODO_javadoc.
     * @param idx TODO_javadoc.
     *
     * @since 1.0
     *
     */
    private static void prepare_num_edition(String entityName, FieldDef fd, String sectionName, int idx) {

        gen.println("           IF " + fd.name + "-LEN IN " + entityName + "-FLD" + (idx != -1 ? "(" + idx + ")" : "") + " = FRM-ERR-NUME");
        gen.println("                MOVE FRM-IND-ERRO TO " + fd.name + "-LEN IN " + entityName + "-FLD" + (idx != -1 ? "(" + idx + ")" : ""));
        gen.println("                GO TO FIN-" + sectionName + "-" + entityName + ".");

      //gen.println("           MOVE " + fd.name + " IN " + entityName + "-FLD" + (idx != -1 ? "(" + idx + ")" : "") + " TO " + fd.name + "-EDT IN " + entityName + "-EDT.");
        gen.println("           MOVE " + fd.name + " IN " + entityName + "-FLD" + (idx != -1 ? "(" + idx + ")" : "") + " TO");
        gen.println("                " + fd.name + "-EDT IN " + entityName + "-EDT.");

        gen.println("           MOVE " + fd.name + "-EDT IN " + entityName + "-EDT TO");
        gen.println("                " + fd.name + "-ALF IN " + entityName + "-FLD" + (idx != -1 ? "(" + idx + ")" : "") + ".");
    }

    /******************************************************************************
     * genEDT_FLD_entity
     ******************************************************************************/
    /**
     *
     * TODO_javadoc.
     *
     *
     * @param entityName TODO_javadoc.
     * @param fields TODO_javadoc.
     *
     * @since 1.0
     *
     */
    private static void genEDT_FLD_entity(String entityName, ArrayList<Object> fields) {

        iniSection("EDT-FLD-" + entityName);

        ArrayList<ElementDef> array = null;

        for (int i = 0; i < fields.size(); i++) {

            if (fields.get(i) instanceof FieldDef) {

                FieldDef fd = (FieldDef) fields.get(i);

                field_prepare_num_edition(entityName, fd, -1);
            }
            else if (fields.get(i) instanceof ArrayList) {

                array = (ArrayList<ElementDef>) fields.get(i);

                for (int j = 0; j < array.size(); j++) {

                    if (array.get(j).field.special != FieldDef.FEC) {

                        for (int k = 0; k < array.get(j).index.size(); k++) {
                            field_prepare_num_edition(entityName, array.get(j).field, k + 1);
                        }
                    }
                }
            }
        }

        finSection("EDT-FLD-" + entityName);
    }

    /******************************************************************************
     * field_prepare_num_edition
     ******************************************************************************/
    /**
     *
     * TODO_javadoc.
     *
     *
     * @param entityName TODO_javadoc.
     * @param fd TODO_javadoc.
     * @param idx TODO_javadoc.
     *
     * @since 1.0
     *
     */
    private static void field_prepare_num_edition(String entityName, FieldDef fd, int idx) {

      //logger.debug("entrando a 'field_prepare_num_edition(" + fd.name + "," + FieldDef.getTypeString(fd.type) + "," + FieldDef.getSpecialString(fd.special) + "," + idx + ")' ...");

        if (fd.replaced != null && fd.type != FieldDef.DATE) {

            for (FieldDef fr : fd.replaced) {
                field_prepare_num_edition(entityName, fr, idx);
            }
        }
        else {

            if (Utils.searchIntInArray(fd.modifier, KEY_TYPES) < 0) {

                switch (fd.type) {

                case FieldDef.INTEGER :
                case FieldDef.LONG :
                case FieldDef.DOUBLE :
              //case FieldDef.DATE : // TODO_ALA: revisar

                    prepare_num_edition(entityName, fd, "EDT-FLD", idx);

                    break;
                }
            }
        }
    }

    /******************************************************************************
     * genRET_ALL_entity
     ******************************************************************************/
    /**
     *
     * TODO_javadoc.
     *
     *
     * @param entityName TODO_javadoc.
     * @param subsystems TODO_javadoc.
     *
     * @since 1.0
     *
     */
    private static void genRET_ALL_entity(String entityName, ArrayList<String> subsystems) {

        iniSection("RET-ALL-" + entityName);

        gen.println("           PERFORM KEY-ALL-" + entityName + ".");

        for (String subsys : subsystems) {

            if (!subsys.equals(FieldDef.FRM)) {
                gen.println("           PERFORM RET-" + subsys + "-" + entityName + ".");
            }
        }

        finSection("RET-ALL-" + entityName);
    }

    /******************************************************************************
     * genRET_subsys_entity
     ******************************************************************************/
    /**
     *
     * TODO_javadoc.
     *
     *
     * @param subsys TODO_javadoc.
     * @param entityName TODO_javadoc.
     * @param fields TODO_javadoc.
     *
     * @since 1.0
     *
     */
    private static void genRET_subsys_entity(String subsys, String entityName, ArrayList<Object> fields) {

        iniSection("RET-" + subsys + "-" + entityName);

        ArrayList<Object>     vars  = getSubsysVarsFromFields(subsys, fields);
        ArrayList<ElementDef> array = null;

        for (int i = 0; i < vars.size(); i++) {

            if (vars.get(i) instanceof FieldDef) {

                FieldDef fd = (FieldDef) vars.get(i);

                if (Utils.searchIntInArray(fd.modifier, KEY_TYPES) < 0) {
                    get_ret_field(subsys, entityName, fd, -1);
                }
            }
            else if (vars.get(i) instanceof ArrayList) {

                array = (ArrayList<ElementDef>) vars.get(i);

                for (int j = 0; j < array.size(); j++) {

                    gen.println("      *");
                    gen.println("      *    CAMPO INDEXADO   " + array.get(j).field.name);

                    for (int k = 0; k < array.get(j).index.size(); k++) {

                        if (Utils.searchIntInArray(array.get(j).field.modifier, KEY_TYPES) < 0) {
                            get_ret_field(subsys, entityName, array.get(j).field, k + 1);
                        }
                    }
                }
            }
        }

        finSection("RET-" + subsys + "-" + entityName);
    }

    /******************************************************************************
     * genVAL_FLD_entity
     ******************************************************************************/
    /**
     *
     * TODO_javadoc.
     *
     *
     * @param entityName TODO_javadoc.
     * @param fields TODO_javadoc.
     *
     * @since 1.0
     *
     */
    private static void genVAL_FLD_entity(String entityName, ArrayList<Object> fields, HashMap<String, Integer> gls) {

        iniSection("VAL-FLD-" + entityName);

        ArrayList<ElementDef> array = null;

        for (int i = 0; i < fields.size(); i++) {

            if (fields.get(i) instanceof FieldDef) {

                FieldDef fd = (FieldDef) fields.get(i);

                (fd.modifier == FieldDef.MKY && action == BQ_ACTION)
                if (Utils.searchIntInArray(fd.modifier, KEY_TYPES) < 0) {
                    perform_and_validation(entityName, fd, "VAL-FLD", false, -1); ///// verificar
                }
            }
            else if (fields.get(i) instanceof ArrayList) {

                array = (ArrayList<ElementDef>) fields.get(i);

                for (int j = 0; j < array.size(); j++) {

                    if (Utils.searchIntInArray(array.get(j).field.modifier, KEY_TYPES) < 0) {
                        perform_and_validation(entityName, array.get(j).field, "VAL-FLD", false, array.get(j).index.size());
                    }
                }
            }
        }

        finSection("VAL-FLD-" + entityName);

        //

        for (int i = 0; i < fields.size(); i++) {

            if (fields.get(i) instanceof FieldDef) {

                FieldDef fd = (FieldDef) fields.get(i);

                if (Utils.searchIntInArray(fd.modifier, KEY_TYPES) < 0) {
                    genVAL_field(entityName, fd, -1, gls);
                }
            }
            else if (fields.get(i) instanceof ArrayList) {

                array = (ArrayList<ElementDef>) fields.get(i);

                for (int j = 0; j < array.size(); j++) {

                    if (Utils.searchIntInArray(array.get(j).field.modifier, KEY_TYPES) < 0) {
                        genVAL_field(entityName, array.get(j).field, array.get(j).index.size(), gls);
                    }
                }
            }
        }
    }

    /******************************************************************************
     * iniSection
     ******************************************************************************/
    /**
     *
     * TODO_javadoc.
     *
     *
     * @param sectionName TODO_javadoc.
     *
     * @since 1.0
     *
     */
    private static void iniSection(String sectionName) {
        iniSection(sectionName, null);
    }

    /******************************************************************************
     * iniSection
     ******************************************************************************/
    /**
     *
     * TODO_javadoc.
     *
     *
     * @param sectionName TODO_javadoc.
     * @param additName TODO_javadoc.
     *
     * @since 1.0
     *
     */
    private static void iniSection(String sectionName, String additName) {

        gen.println("       " + sectionName + " SECTION.");
        gen.println("       INI-" + sectionName + ".");

        String ident = additName != null ? additName : "INI_" + sectionName.replace('-', '_');

      //logger.debug("seccion '" + sectionName + "', ident '" + ident + "' (" + (addit_hash.containsKey(ident) ? "OK" : "NO") + ")");

        if (addit_hash.containsKey    (ident)) {
            gen.println(addit_hash.get(ident));
        }
    }

    /******************************************************************************
     * finSection
     ******************************************************************************/
    /**
     *
     * TODO_javadoc.
     *
     *
     * @param sectionName TODO_javadoc.
     *
     * @since 1.0
     *
     */
    private static void finSection(String sectionName) {
        finSection(sectionName, null);
    }

    /******************************************************************************
     * finSection
     ******************************************************************************/
    /**
     *
     * TODO_javadoc.
     *
     *
     * @param sectionName TODO_javadoc.
     * @param additName TODO_javadoc.
     *
     * @since 1.0
     *
     */
    private static void finSection(String sectionName, String additName) {

        String ident = additName != null ? additName : "FIN_" + sectionName.replace('-', '_');

        if (addit_hash.containsKey    (ident)) {
            gen.println(addit_hash.get(ident));
        }
        else {

        }

        gen.println("       FIN-" + sectionName + ".");
        gen.println("           EXIT.");
        gen.println();
    }

    /******************************************************************************
     * getAdditFromXML
     ******************************************************************************/
    /**
     *
     * TODO_javadoc.
     *
     *
     * @param filename TODO_javadoc.
     *
     * @throws Exception TODO_javadoc.
     *
     * @since 1.0
     *
     */
    private static void getAdditFromXML(String filename) throws Exception {

        ArrayList  errors = new ArrayList();
        XmlOptions opts   = new XmlOptions();

        opts.setErrorListener(errors);

        AdditionalDocument root = AdditionalDocument.Factory.parse(new File(filename), opts);

        if (root.validate(opts)) {

            AdditionalDocument.Additional addit = root.getAdditional();

            for (SectionDocument.Section section : addit.getSectionArray()) {
                addit_hash.put(section.getName(), section.getCode());
            }

        } else {

            for (Object error : errors) {
                logger.fatal(error);
            }

            throw new XmlException(filename + " es invalido.");
        }
    }

    /******************************************************************************
     * getRangesFromXML
     ******************************************************************************/
    /**
     *
     * TODO_javadoc.
     *
     *
     * @param filename TODO_javadoc.
     *
     * @throws Exception TODO_javadoc.
     *
     * @since 1.0
     *
     */
    private static void getRangesFromXML(String filename) throws Exception {

        ArrayList  errors = new ArrayList();
        XmlOptions opts   = new XmlOptions();

        opts.setErrorListener(errors);

        RangesDocument root = RangesDocument.Factory.parse(new File(filename), opts);

        if (root.validate(opts)) {

            RangesDocument.Ranges ranges = root.getRanges();

            for (FieldDocument.Field field : ranges.getFieldArray()) {
                                                     // name,            domain,            system,            registry,            table, validation,            search
                DomainRangeDef drd = new DomainRangeDef(field.getName(), field.getDomain(), field.getSystem(), field.getRegistry(), "",    field.getValidation(), field.getSearch());

              //logger.debug(drd);

                ranges_hash.put(field.getName(), drd);
            }

        } else {

            for (Object error : errors) {
                logger.fatal(error);
            }

            throw new XmlException(filename + " es invalido.");
        }
    }

    /******************************************************************************
     * getDomainsFromXML
     ******************************************************************************/
    /**
     *
     * TODO_javadoc.
     *
     *
     * @param filename TODO_javadoc.
     *
     * @throws Exception TODO_javadoc.
     *
     * @since 1.0
     *
     */
    private static void getDomainsFromXML(String filename) throws Exception {

        ArrayList  errors = new ArrayList();
        XmlOptions opts   = new XmlOptions();

        opts.setErrorListener(errors);

        DomainsDocument root = DomainsDocument.Factory.parse(new File(filename), opts);

        if (root.validate(opts)) {

            DomainsDocument.Domains domains = root.getDomains();

            for (DomainDocument.Domain domain : domains.getDomainArray()) {
                                                     // name,             domain, system,             registry,             table,             validation,             search
                DomainRangeDef drd = new DomainRangeDef(domain.getName(), "",     domain.getSystem(), domain.getRegistry(), domain.getTable(), domain.getValidation(), domain.getSearch());

              //logger.debug(drd);

                domains_hash.put(domain.getName(), drd);
            }

        } else {

            for (Object error : errors) {
                logger.fatal(error);
            }

            throw new XmlException(filename + " es invalido.");
        }
    }

    /******************************************************************************
     * getSubsystemsFromFields
     ******************************************************************************/
    /**
     *
     * TODO_javadoc.
     *
     * @param fields TODO_javadoc.
     *
     * @return TODO_javadoc.
     *
     * @since 1.0
     *
     */
    private static ArrayList<String> getSubsystemsFromFields(ArrayList<Object> fields) {

        ArrayList<String> subsystems = new ArrayList<String>();

        String subsys = null;

        for (int i = 0; i < fields.size(); i++) {

            if (fields.get(i) instanceof FieldDef) {

                FieldDef fd = (FieldDef) fields.get(i);

                subsys = fd.fmsname.substring(0, 3);

                if (!subsystems.contains(subsys)) { // !subsys.equals(FieldDef.FRM) &&
                    subsystems.add(subsys);
                }
            }
            else {
                //////////////
            }
        }

        return subsystems;
    }

    /******************************************************************************
     * getSubsysVarsFromFields
     ******************************************************************************/
    /**
     *
     * TODO_javadoc.
     *
     * @param subsys TODO_javadoc.
     * @param fields TODO_javadoc.
     *
     * @return TODO_javadoc.
     *
     * @since 1.0
     *
     */
    private static ArrayList<Object> getSubsysVarsFromFields(String subsys, ArrayList<Object> fields) {

        ArrayList<Object>     vars  = new ArrayList<Object>();
        ArrayList<ElementDef> array = null;

        for (int i = 0; i < fields.size(); i++) {

            if (fields.get(i) instanceof FieldDef) {

                FieldDef fd = (FieldDef) fields.get(i);

                if (fd.fmsname.substring(0, 3).equals(subsys)) {
                    vars.add(fd);
                }
            }
            else if (fields.get(i) instanceof ArrayList) {

                array = (ArrayList<ElementDef>) fields.get(i);

                ArrayList<ElementDef> valid = new ArrayList<ElementDef>();

                for (int j = 0; j < array.size(); j++) {

                    if (array.get(j).field.name.substring(0, 3).equals(subsys)) {
                        valid.add(array.get(j));
                    }
                }

                vars.add(valid);
            }
        }

        return vars;
    }
    
    /******************************************************************************
     * getGlsFromFields
     ******************************************************************************/
    /**
     *
     * TODO_javadoc.
     *
     * @param fields TODO_javadoc.
     *
     * @return TODO_javadoc.
     *
     * @since 1.0
     *
     */
    private static HashMap<String, Integer> getGlsFromFields(ArrayList<Object> fields) {

    	HashMap<String, Integer> gls = new HashMap<String, Integer>();

        String glosa = null;

        for (int i = 0; i < fields.size(); i++) {

            if (fields.get(i) instanceof FieldDef) {

                FieldDef fd = (FieldDef) fields.get(i);

                glosa = fd.name.substring(0, 7);

                if (!gls.containsKey(fd.name) && glosa.equals("FRM-GLS")) { // !subsys.equals(FieldDef.FRM) &&
                	gls.put((fd.name.substring(8,12)),fd.size);
                }
            }
        }

        return gls;
    }

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2011)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3750)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1372)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2944)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2203)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1372)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2944)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2193)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2965)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3302)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:271)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:263)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:196)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:139)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:118)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2020-11-11 16:53:05.876
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2011)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3750)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1372)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2944)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2203)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1372)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2944)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2193)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2965)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3302)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:271)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:263)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:196)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:139)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:118)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2020-11-11 16:53:05.881
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2011)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3750)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1372)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2944)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2203)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1372)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2944)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2193)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2965)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3302)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:271)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:263)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:196)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:139)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:118)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core 4 4 2020-11-11 16:53:05.916
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
/*
 *   Copyright (c) 2007 by BEE S.A. All Rights Reserved.
 *   THIS IS UNPUBLISHED PROPRIETARY SOURCE CODE OF BEE S.A.
 *   The copyright notice above does not evidence any actual or intended
 *   publication of such source code.
 */

package cl.bee.genfrmjava;


import java.io.*;

import java.text.*;

import java.util.*;

import cl.bee.genfrmjava.config.*;
import cl.bee.genfrmjava.config.impl.*;

import cl.bee.genfrmjava.adddef.schema.*;
import cl.bee.genfrmjava.rangedef.schema.*;
import cl.bee.genfrmjava.domaindef.schema.*;

import cl.bee.genfrmjava.util.*;

import org.apache.log4j.*;

import org.apache.xmlbeans.*;


/**
 * @author  alarrayea@bee.cl
 * @version 1.0
 */
public class GenFrm {

    /** TODO_javadoc. */
    private static Logger logger = Logger.getLogger(GenFrm.class);

    /** TODO_javadoc. */
    private final static int[] KEY_TYPES = new int[] { FieldDef.IKY, FieldDef.MKY, FieldDef.AKY };

    /** TODO_javadoc. */
    private static final SimpleDateFormat formdate_gen = new SimpleDateFormat("dd-MMM-yy hh:mm aa", new Locale("es", "CL")); //07-Nov-18 09:48 AM

    //

    /** TODO_javadoc. */
    public static final int UNDEF = -1;

    /** TODO_javadoc. */
    private static final int BA_ACTION = 1;

    /** TODO_javadoc. */
    private static final int BQ_ACTION = 2;

    /** TODO_javadoc. */
    private static final int BU_ACTION = 3;

    /** TODO_javadoc. */
    private static final String action_names[] = { "", "BA", "BQ", "BU" };

    //

    /** TODO_javadoc. */
    private static PrintStream gen = null;

    /** TODO_javadoc. */
    private static HashMap<String, String> addit_hash = null;

    /** TODO_javadoc. */
    private static HashMap<String, DomainRangeDef> ranges_hash = null;

    /** TODO_javadoc. */
    private static HashMap<String, DomainRangeDef> domains_hash = null;

    /** TODO_javadoc. */
    private static String systemName = null;

    /** TODO_javadoc. */
    private static String entityName = null;

    //

    /** TODO_javadoc. */
    private static int action = UNDEF;

    /******************************************************************************
     * main
     ******************************************************************************/
    /**
     *
     * @param args TODO_javadoc.
     *
     */
    public static void main(String args[]) {

    	BasicConfigurator.configure();
        logger.info("Inicio GenFrm.java ");
        try {

            String configClass = null;

            for (int idx = 0; idx < args.length - 1; idx++) {

                if (args[idx].equalsIgnoreCase("-system")) {
                    systemName = args[++idx].toUpperCase();
                }

                if (args[idx].equalsIgnoreCase("-entity")) {
                    entityName = args[++idx].toUpperCase();
                }

                if (args[idx].equalsIgnoreCase("-action")) {

                    String s = args[++idx].toUpperCase();

                    for (int i = 1; i < action_names.length; i++) {

                        if (s.equals(action_names[i])) {

                            action = i;

                            break;
                        }
                    }
                }

                if (args[idx].equalsIgnoreCase("-configClass")) {
                    configClass = args[++idx];
                }
            }

            logger.debug("systemName: " + systemName);
            logger.debug("entityName: " + entityName);
            logger.debug("action:     " + action_names[action]);

            if (configClass == null) {
                throw new RuntimeException("configClass debe estar definido.");
            }

            //

            ArrayList<Object>  fields = new ArrayList<Object>();
            ArrayList<TextDef> texts  = new ArrayList<TextDef>();
            FormDef            forms = new FormDef();

            //

            Config config = (Config) (Class.forName(configClass).newInstance());

            config.getInfoFromXML("data/form/form_" +   systemName.toLowerCase() + "_" + entityName.toLowerCase() + ".xml", fields, texts, forms);

            //

            addit_hash = new HashMap<String, String>();

            getAdditFromXML(       "data/addit/addit_" + systemName.toLowerCase() + "_" + entityName.toLowerCase() + "_" + action_names[action].toLowerCase() + ".xml");

            //

            ranges_hash  = new HashMap<String, DomainRangeDef>();
            domains_hash = new HashMap<String, DomainRangeDef>();

            getRangesFromXML ("data/domain-range/range_"  + systemName.toLowerCase() + ".xml");
            getDomainsFromXML("data/domain-range/domain_" + systemName.toLowerCase() + ".xml");

            //

            ArrayList<String> subsystems = getSubsystemsFromFields(fields);

            //

            gen = new PrintStream(new FileOutputStream("data/gen/" + systemName + action_names[action] + entityName + ".SRCAIU"));

            gen.println("      *");
            gen.println("      * " + systemName + action_names[action] + entityName);
            gen.println("      * " + Utils.NOMBRE_GENEDADOR + " " + Utils.VERSION_GENEDADOR);
            gen.println("      * " + formdate_gen.format(new Date()).toUpperCase());
            gen.println("      *");
            gen.println("       SET-TAG-" + systemName + action_names[action] + entityName + " SECTION.");
            gen.println("       INI-SET-TAG-" + systemName + action_names[action] + entityName + ".");
            gen.println("           MOVE");

          //gen.println("           '<IDNMOD NOM=$" + systemName + action_names[action] + entityName + "$ VSN=${VSN" + action_names[action] + "}$ VGM=$3.0.1$");
            gen.println("           '<IDNMOD NOM=$" + systemName + action_names[action] + entityName + "$ VSN=$09.08.27$ VGM=$3.0.1$");

          //gen.println("      -    'GEN=$07-Nov-18 09:48 AM$ FNC=${FNC" + action_names[action] + "}$/>'");
            gen.println("      -    'GEN=$07-Nov-18 09:48 AM$ FNC=$090802$/>'");

            gen.println("               TO WSS-CVT-ITEM.");
            gen.println("       FIN-SET-TAG-" + systemName + action_names[action] + entityName + ".");
            gen.println("           EXIT.");
            gen.println();

            /////////////////////////////////////////////////////////////////////////////////////
            
            //ogb glosas
            HashMap<String, Integer>  gls  = getGlsFromFields(fields);
           //ogb
            

            if (action == BQ_ACTION) {

                genPUT_ALL_entity(entityName, subsystems);

                for (String subsys : subsystems) {

                    if (!subsys.equals(FieldDef.FRM)) {
                        genPUT_subsys_entity(subsys, entityName, fields, gls);
                    }
                }

                genKEY_ALL_entity(entityName, subsystems);

                for (String subsys : subsystems) {

                    if (!subsys.equals(FieldDef.FRM)) {
                        genKEY_subsys_entity(subsys, entityName, fields);
                    }
                }

                genSCR_CLRA_entity(entityName, fields, subsystems);

                for (String subsys : subsystems) {

                    if (!subsys.equals(FieldDef.FRM)) {
                        genCLR_subsys_entity(subsys, entityName, fields);
                    }
                }

                genFST_KEY_entity(entityName, fields);

                genFST_FLD_entity(entityName, fields);

                genPRO_KEY_entity(entityName, fields);

                genUNP_KEY_entity(entityName, fields);

                genUNP_FLD_entity(entityName, fields, subsystems);

                for (String subsys : subsystems) {

                    if (!subsys.equals(FieldDef.FRM)) {
                        genUNP_subsys_entity(subsys, entityName, fields);
                    }
                }

                genVAL_KEY_entity(entityName, fields, gls);

                genVAL_CON_KEY_entity(entityName, fields);

                genVAL_CON_IKY_entity(entityName, fields);

                genVAL_NUM_KEY_entity(entityName, fields);

                genVAL_NUM_FLD_entity(entityName, fields);

                genEDT_KEY_entity(entityName, fields);

                genEDT_FLD_entity(entityName, fields);
            }

            /////////////////////////////////////////////////////////////////////////////////////

            if (action == BU_ACTION) {

                genRET_ALL_entity(entityName, subsystems);

                for (String subsys : subsystems) {

                    if (!subsys.equals(FieldDef.FRM)) {
                        genRET_subsys_entity(subsys, entityName, fields);
                    }
                }

                genKEY_ALL_entity(entityName, subsystems);

                for (String subsys : subsystems) {

                    if (!subsys.equals(FieldDef.FRM)) {
                        genKEY_subsys_entity(subsys, entityName, fields);
                    }
                }

                genSCR_CLRA_entity(entityName, fields, subsystems);

                for (String subsys : subsystems) {

                    if (!subsys.equals(FieldDef.FRM)) {
                        genCLR_subsys_entity(subsys, entityName, fields);
                    }
                }

                genFST_KEY_entity(entityName, fields);

                genFST_FLD_entity(entityName, fields);

                genPRO_KEY_entity(entityName, fields);

                genPRO_FLD_entity(entityName, fields, subsystems);

                for (String subsys : subsystems) {

                    if (!subsys.equals(FieldDef.FRM)) {
                        genPRO_subsys_entity(subsys, entityName, fields);
                    }
                }

                genUNP_KEY_entity(entityName, fields);

                genUNP_FLD_entity(entityName, fields, subsystems);

                for (String subsys : subsystems) {

                    if (!subsys.equals(FieldDef.FRM)) {
                        genUNP_subsys_entity(subsys, entityName, fields);
                    }
                }

                genVAL_MKY_entity(entityName, fields);

                genVAL_FLD_entity( entityName, fields, gls);

                ///////////////

                iniSection("VAL-CON-FLD-" + entityName, "VAL_CON_FLD_" + entityName);
                finSection("VAL-CON-FLD-" + entityName);

                iniSection("VAL-CON-" + entityName); // TODO_ALA: revisar
                finSection("VAL-CON-" + entityName);

                genVAL_NUM_KEY_entity(entityName, fields);

                genVAL_NUM_FLD_entity(entityName, fields);

                genEDT_KEY_entity(entityName, fields);

                genEDT_FLD_entity(entityName, fields);
            }

            //

            String ident = "EOF_" + action_names[action];

            if (addit_hash.containsKey    (ident)) {
                gen.println(addit_hash.get(ident));
            }

            ident = "EOF";

            if (addit_hash.containsKey    (ident)) {
                gen.println(addit_hash.get(ident));
            }

            //

            gen.close();

        } catch (Throwable e) {
            logger.fatal(Utils.printStackTrace(e));
        }
    }

    /******************************************************************************
     * genPUT_ALL_entity
     ******************************************************************************/
    /**
     *
     * TODO_javadoc.
     *
     *
     * @param entityName TODO_javadoc.
     * @param subsystems TODO_javadoc.
     *
     * @since 1.0
     *
     */
    private static void genPUT_ALL_entity(String entityName, ArrayList<String> subsystems) {

        iniSection("PUT-ALL-" + entityName);

        for (String subsys : subsystems) {

            if (!subsys.equals(FieldDef.FRM)) {
                gen.println("           PERFORM PUT-" + subsys + "-" + entityName + ".");
            }
        }

        finSection("PUT-ALL-" + entityName);
    }

    /******************************************************************************
     * genPUT_subsys_entity
     ******************************************************************************/
    /**
     *
     * TODO_javadoc.
     *
     *
     * @param subsys TODO_javadoc.
     * @param entityName TODO_javadoc.
     * @param fields TODO_javadoc.
     *
     * @since 1.0
     *
     */
    private static void genPUT_subsys_entity(String subsys, String entityName, ArrayList<Object> fields,  HashMap<String, Integer> gls) {

        iniSection("PUT-" + subsys + "-" + entityName);

        gen.println("           IF PGM-STAT-" + subsys + "-NUL");
        gen.println("               GO TO FIN-PUT-" + subsys + "-" + entityName + ".");

        //

        gen.println("           IF NOT PGM-STAT-" + subsys + "-OKS");
        gen.println("               PERFORM CLR-" + subsys + "-" + entityName);

        /*
        if (subsys.equals(entityName)) { // TODO_ALA: revisar
            gen.println("               PERFORM CLR-FRM-" + entityName);
        }
        */

        gen.println("               GO TO FIN-PUT-" + subsys + "-" + entityName + ".");

        //

        ArrayList<Object>     vars  = getSubsysVarsFromFields(subsys, fields);
        ArrayList<ElementDef> array = null;
        


        for (int i = 0; i < vars.size(); i++) {

            if (vars.get(i) instanceof FieldDef) {

                FieldDef fd = (FieldDef) vars.get(i);

                get_put_field(subsys, entityName, fd, -1);
            }
            else if (vars.get(i) instanceof ArrayList) {

                array = (ArrayList<ElementDef>) vars.get(i);

                for (int j = 0; j < array.size(); j++) {

                    gen.println("      *");
                    gen.println("      *    CAMPO INDEXADO   " + array.get(j).field.name);

                    for (int k = 0; k < array.get(j).index.size(); k++) {

                        get_put_field(subsys, entityName, array.get(j).field, k + 1);
                    }
                }
            }
        }

        for (int i = 0; i < vars.size(); i++) {

            if (vars.get(i) instanceof FieldDef) {

                FieldDef fd = (FieldDef) vars.get(i);

                if (!fd.fmsname.substring(3, 8).equals("_IND_")) { ///////// validar
                    domain_range_validation_search(entityName, fd, -1, gls, "PUT");
                }
            }
            else {
                //////////////
            }
        }

        finSection("PUT-" + subsys + "-" + entityName);
    }

    /******************************************************************************
     * get_put_field
     ******************************************************************************/
    /**
     *
     * TODO_javadoc.
     *
     *
     * @param subsys TODO_javadoc.
     * @param entityName TODO_javadoc.
     * @param fd TODO_javadoc.
     * @param idx TODO_javadoc.
     *
     * @since 1.0
     *
     */
    private static void get_put_field(String subsys, String entityName, FieldDef fd, int idx) {

        if (fd.replaced != null) {

            for (FieldDef fr : fd.replaced) {
                get_put_field(subsys, entityName, fr, idx);
            }
        }
        else {
            gen.println("           MOVE " + fd.name + " IN " + subsys + (idx != -1 ? "(" + idx + ")" : "") + " TO " + fd.name + " IN " + entityName + "-FLD" + (idx != -1 ? "(" + idx + ")" : "") + ".");
        }
    }

    /******************************************************************************
     * genKEY_ALL_entity
     ******************************************************************************/
    /**
     *
     * TODO_javadoc.
     *
     *
     * @param entityName TODO_javadoc.
     * @param subsystems TODO_javadoc.
     *
     * @since 1.0
     *
     */
    private static void genKEY_ALL_entity(String entityName, ArrayList<String> subsystems) {

        iniSection("KEY-ALL-" + entityName);

        for (String subsys : subsystems) {

            if (!subsys.equals(FieldDef.FRM)) {
                gen.println("           PERFORM KEY-" + subsys + "-" + entityName + "."); // solo aquellos que tengan KEY ???
            }
        }

        finSection("KEY-ALL-" + entityName);
    }

    /******************************************************************************
     * genKEY_subsys_entity
     ******************************************************************************/
    /**
     *
     * TODO_javadoc.
     *
     *
     * @param subsys TODO_javadoc.
     * @param entityName TODO_javadoc.
     * @param fields TODO_javadoc.
     *
     * @since 1.0
     *
     */
    private static void genKEY_subsys_entity(String subsys, String entityName, ArrayList<Object> fields) {

        iniSection("KEY-" + subsys + "-" + entityName);

        ArrayList<Object> vars = getSubsysVarsFromFields(subsys, fields);

        for (int i = 0; i < vars.size(); i++) {

            if (vars.get(i) instanceof FieldDef) {

                FieldDef fd = (FieldDef) vars.get(i);

                if (Utils.searchIntInArray(fd.modifier, KEY_TYPES) >= 0) {
                    get_ret_field(subsys, entityName, fd, -1);
                }
            }
            else {
                //////////////
            }
        }

        finSection("KEY-" + subsys + "-" + entityName);
    }

    /******************************************************************************
     * get_ret_field
     ******************************************************************************/
    /**
     *
     * TODO_javadoc.
     *
     *
     * @param subsys TODO_javadoc.
     * @param entityName TODO_javadoc.
     * @param fd TODO_javadoc.
     * @param idx TODO_javadoc.
     *
     * @since 1.0
     *
     */
    private static void get_ret_field(String subsys, String entityName, FieldDef fd, int idx) {

        if (fd.replaced != null) {

            for (FieldDef fr : fd.replaced) {
                get_ret_field(subsys, entityName, fr, idx);
            }
        }
        else {
            gen.println("           MOVE " + fd.name + " IN " + entityName + "-FLD" + (idx != -1 ? "(" + idx + ")" : "") + " TO " + fd.name + " IN " + subsys + (idx != -1 ? "(" + idx + ")" : "") + ".");
        }
    }

    /******************************************************************************
     * genSCR_CLRA_entity
     ******************************************************************************/
    /**
     *
     * TODO_javadoc.
     *
     *
     * @param entityName TODO_javadoc.
     * @param fields TODO_javadoc.
     * @param subsystems TODO_javadoc.
     *
     * @since 1.0
     *
     */
    private static void genSCR_CLRA_entity(String entityName, ArrayList<Object> fields, ArrayList<String> subsystems) {

        iniSection("SCR-CLRA-" + entityName);

        gen.println("           PERFORM CLR-KEY-" + entityName + ".");
        gen.println("           PERFORM CLR-FLD-" + entityName + ".");

        finSection("SCR-CLRA-" + entityName);

        //

        iniSection("CLR-KEY-" + entityName);

        for (int i = 0; i < fields.size(); i++) {

            if (fields.get(i) instanceof FieldDef) {

                FieldDef fd = (FieldDef) fields.get(i);

                if (Utils.searchIntInArray(fd.modifier, KEY_TYPES) >= 0) {
                    get_clear_field(entityName, fd, -1);
                }
            }
            else {
                //////////////
            }
        }

        finSection("CLR-KEY-" + entityName);

        //

        iniSection("CLR-FLD-" + entityName);

        ArrayList<ElementDef> array = null;

        for (int i = 0; i < fields.size(); i++) {

            if (fields.get(i) instanceof FieldDef) {

                FieldDef fd = (FieldDef) fields.get(i);

                if (fd.fmsname.substring(0, 3).equals(FieldDef.FRM)) {
                    get_clear_field(entityName, fd, -1);
                }
            }
            else if (fields.get(i) instanceof ArrayList) {

                array = (ArrayList<ElementDef>) fields.get(i);

                for (int j = 0; j < array.size(); j++) {

                    if (array.get(j).field.name.substring(0, 3).equals(FieldDef.FRM)) {

                        for (int k = 0; k < array.get(j).index.size(); k++) {
                            get_clear_field(entityName, array.get(j).field, k + 1);
                        }
                    }
                }
            }
        }

        for (String subsys : subsystems) {

            if (!subsys.equals(FieldDef.FRM)) {
                gen.println("           PERFORM CLR-" + subsys + "-" + entityName + ".");
            }
        }

        finSection("CLR-FLD-" + entityName);
    }

    /******************************************************************************
     * get_clear_field
     ******************************************************************************/
    /**
     *
     * TODO_javadoc.
     *
     *
     * @param entityName TODO_javadoc.
     * @param fd TODO_javadoc.
     * @param idx TODO_javadoc.
     *
     * @since 1.0
     *
     */
    private static void get_clear_field(String entityName, FieldDef fd, int idx) {

        if (fd.replaced != null && fd.type != FieldDef.DATE) {

            for (FieldDef fr : fd.replaced) {
                get_clear_field(entityName, fr, idx);
            }
        }
        else {

            switch (fd.type) {

            case FieldDef.INTEGER :
            case FieldDef.LONG :
            case FieldDef.DOUBLE :
            case FieldDef.DATE :
                gen.println("           MOVE ZEROES TO " + fd.name + " IN " + entityName + "-FLD" + (idx != -1 ? "(" + idx + ")" : "") + ".");
                break;
            case FieldDef.CHAR :
            case FieldDef.BOOLEAN :
            case FieldDef.STRING :
                gen.println("           MOVE SPACES TO " + fd.name + " IN " + entityName + "-FLD" + (idx != -1 ? "(" + idx + ")" : "") + ".");
                break;
            }
        }
    }

    /******************************************************************************
     * genCLR_subsys_entity
     ******************************************************************************/
    /**
     *
     * TODO_javadoc.
     *
     *
     * @param subsys TODO_javadoc.
     * @param entityName TODO_javadoc.
     * @param fields TODO_javadoc.
     *
     * @since 1.0
     *
     */
    private static void genCLR_subsys_entity(String subsys, String entityName, ArrayList<Object> fields) {

        iniSection("CLR-" + subsys + "-" + entityName);

        ArrayList<Object>     vars  = getSubsysVarsFromFields(subsys, fields);
        ArrayList<ElementDef> array = null;

        for (int i = 0; i < vars.size(); i++) {

            if (vars.get(i) instanceof FieldDef) {

                FieldDef fd = (FieldDef) vars.get(i);

                if (Utils.searchIntInArray(fd.modifier, KEY_TYPES) < 0) {
                    get_clear_field(entityName, fd, -1);
                }
            }
            else if (vars.get(i) instanceof ArrayList) {

                array = (ArrayList<ElementDef>) vars.get(i);

                for (int j = 0; j < array.size(); j++) {

                    for (int k = 0; k < array.get(j).index.size(); k++) {

                        if (Utils.searchIntInArray(array.get(j).field.modifier, KEY_TYPES) < 0) {
                            get_clear_field(entityName, array.get(j).field, k + 1);
                        }
                    }
                }
            }
       }

        finSection("CLR-" + subsys + "-" + entityName);
    }

    /******************************************************************************
     * genFST_KEY_entity
     ******************************************************************************/
    /**
     *
     * TODO_javadoc.
     *
     *
     * @param entityName TODO_javadoc.
     * @param fields TODO_javadoc.
     *
     * @since 1.0
     *
     */
    private static void genFST_KEY_entity(String entityName, ArrayList<Object> fields) {

        iniSection("FST-KEY-" + entityName);

        for (int i = 0; i < fields.size(); i++) {

            if (fields.get(i) instanceof FieldDef) {

                FieldDef fd = (FieldDef) fields.get(i);

              //if (Utils.searchIntInArray(fd.modifier, KEY_TYPES) >= 0) {
                if (Utils.searchIntInArray(fd.modifier, new int[] { FieldDef.IKY }) >= 0 && FieldDef.absenceAttribute(fd.attributes, FieldDef.DISPLAY_ONLY_ATTR)) {

                     gen_pos_cursor(entityName, fd, -1);

                     break;
                }
            }
            else {
                //////////////
            }
        }

        finSection("FST-KEY-" + entityName);
    }

    /******************************************************************************
     * gen_pos_cursor
     ******************************************************************************/
    /**
     *
     * TODO_javadoc.
     *
     *
     * @param entityName TODO_javadoc.
     * @param fd TODO_javadoc.
     * @param size TODO_javadoc.
     *
     * @since 1.0
     *
     */
    private static void gen_pos_cursor(String entityName, FieldDef fd, int size) {
        gen.println("           MOVE -1 TO " + fd.name + "-LEN IN " + entityName + "-FLD" + (size != -1 ? "(1)": "") + ".");
    }

    /******************************************************************************
     * genFST_KEY_entity
     ******************************************************************************/
    /**
     *
     * TODO_javadoc.
     *
     *
     * @param entityName TODO_javadoc.
     * @param fields TODO_javadoc.
     *
     * @since 1.0
     *
     */
    private static void genFST_FLD_entity(String entityName, ArrayList<Object> fields) {

        iniSection("FST-FLD-" + entityName);

        ArrayList<ElementDef> array = null;

        for (int i = 0; i < fields.size(); i++) {

            if (fields.get(i) instanceof FieldDef) {

                FieldDef fd = (FieldDef) fields.get(i);

                if (fd.modifier == FieldDef.FLD && FieldDef.absenceAttribute(fd.attributes, FieldDef.DISPLAY_ONLY_ATTR)) {

                    gen_pos_cursor(entityName, fd, -1);

                    break;
                }
            }
            else if (fields.get(i) instanceof ArrayList) {

                array = (ArrayList<ElementDef>) fields.get(i);

                for (int j = 0; j < array.size(); j++) {

                    if (array.get(j).field.modifier == FieldDef.FLD && FieldDef.absenceAttribute(array.get(j).field.attributes, FieldDef.DISPLAY_ONLY_ATTR)) {

                        gen_pos_cursor(entityName, array.get(j).field, array.get(j).index.size());

                        break;
                    }
                }
            }
        }

        finSection("FST-FLD-" + entityName);
    }

    /******************************************************************************
     * genPRO_KEY_entity
     ******************************************************************************/
    /**
     *
     * TODO_javadoc.
     *
     *
     * @param entityName TODO_javadoc.
     * @param fields TODO_javadoc.
     *
     * @since 1.0
     *
     */
    private static void genPRO_KEY_entity(String entityName, ArrayList<Object> fields) {

        iniSection("PRO-KEY-" + entityName);

        if (action == BQ_ACTION) {
            gen.println("           PERFORM PRO-IKY-" + entityName + ".");
            gen.println("           PERFORM PRO-AKY-" + entityName + ".");
        }

        gen.println("           PERFORM PRO-MKY-" + entityName + ".");

        finSection("PRO-KEY-" + entityName);

        //

        if (action == BQ_ACTION) {

            iniSection("PRO-IKY-" + entityName);

            for (int i = 0; i < fields.size(); i++) {

                if (fields.get(i) instanceof FieldDef) {

                    FieldDef fd = (FieldDef) fields.get(i);

                    if (fd.modifier == FieldDef.IKY && FieldDef.absenceAttribute(fd.attributes, FieldDef.DISPLAY_ONLY_ATTR)) {
                        gen_set_field_attr(entityName, fd, "FRM-CPIM-AEY", false, -1);
                    }
                }
                else {
                    //////////////
                }
            }

            finSection("PRO-IKY-" + entityName);

            //

            iniSection("PRO-MKY-" + entityName);

            for (int i = 0; i < fields.size(); i++) {

                if (fields.get(i) instanceof FieldDef) {

                    FieldDef fd = (FieldDef) fields.get(i);

                    if (fd.modifier == FieldDef.MKY && FieldDef.absenceAttribute(fd.attributes, FieldDef.DISPLAY_ONLY_ATTR)) {
                        gen_set_field_attr(entityName, fd, "FRM-CPIM-AEY", false, -1);
                    }
                }
                else {
                    //////////////
                }
            }

            finSection("PRO-MKY-" + entityName);

            //

            iniSection("PRO-AKY-" + entityName);

            for (int i = 0; i < fields.size(); i++) {

                if (fields.get(i) instanceof FieldDef) {

                    FieldDef fd = (FieldDef) fields.get(i);

                    if (fd.modifier == FieldDef.AKY && FieldDef.absenceAttribute(fd.attributes, FieldDef.DISPLAY_ONLY_ATTR)) {
                        gen_set_field_attr(entityName, fd, "FRM-CPIM-AEY", false, -1);
                    }
                }
                else {
                    //////////////
                }
            }

            finSection("PRO-AKY-" + entityName);
        }
        else {

            iniSection("PRO-MKY-" + entityName);

            for (int i = 0; i < fields.size(); i++) {

                if (fields.get(i) instanceof FieldDef) {

                    FieldDef fd = (FieldDef) fields.get(i);

                    if (fd.modifier == FieldDef.MKY) {
                        gen_set_field_attr(entityName, fd, "FRM-CPIM-AEY", false, -1);
                    }
                }
                else {
                    //////////////
                }
            }

            finSection("PRO-MKY-" + entityName);
        }
    }

    /******************************************************************************
     * gen_set_field_attr
     ******************************************************************************/
    /**
     *
     * TODO_javadoc.
     *
     *
     * @param entityName TODO_javadoc.
     * @param fd TODO_javadoc.
     * @param attr TODO_javadoc.
     * @param withRecord TODO_javadoc.
     * @param idx TODO_javadoc.
     *
     * @since 1.0
     *
     */
    private static void gen_set_field_attr(String entityName, FieldDef fd, String attr, boolean withoutRecord, int idx) { // TODO_ALA:

        if (fd.replaced != null && fd.type != FieldDef.DATE) {

            for (FieldDef fr : fd.replaced) {
                gen_set_field_attr(entityName, fr, attr, withoutRecord, idx);
            }
        }
        else {
            gen.println("           MOVE " + attr + " TO " + fd.name + "-ATR" + (withoutRecord ? "" : " IN " + entityName + "-FLD") + (idx != -1 ? "(" + idx + ")" : "") + ".");
        }
    }

    /******************************************************************************
     * genUNP_KEY_entity
     ******************************************************************************/
    /**
     *
     * TODO_javadoc.
     *
     *
     * @param entityName TODO_javadoc.
     * @param fields TODO_javadoc.
     *
     * @since 1.0
     *
     */
    private static void genUNP_KEY_entity(String entityName, ArrayList<Object> fields) {

        iniSection("UNP-KEY-" + entityName);

        gen.println("           PERFORM UNP-IKY-" + entityName + ".");
        gen.println("           PERFORM UNP-AKY-" + entityName + ".");
        gen.println("           PERFORM UNP-MKY-" + entityName + ".");

        finSection("UNP-KEY-" + entityName);

        //

        iniSection("UNP-IKY-" + entityName);

        for (int i = 0; i < fields.size(); i++) {

            if (fields.get(i) instanceof FieldDef) {

                FieldDef fd = (FieldDef) fields.get(i);

                if (fd.modifier == FieldDef.IKY && FieldDef.absenceAttribute(fd.attributes, FieldDef.DISPLAY_ONLY_ATTR) ) {
                    gen_set_field_attr(entityName, fd, "FRM-CPIM-UBY", true, -1); ///// verificar con B?
                }
            }
            else {
                //////////////
            }
        }

        finSection("UNP-IKY-" + entityName);

        //

        iniSection("UNP-MKY-" + entityName);

        for (int i = 0; i < fields.size(); i++) {

            if (fields.get(i) instanceof FieldDef) {

                FieldDef fd = (FieldDef) fields.get(i);

                if (fd.modifier == FieldDef.MKY && FieldDef.absenceAttribute(fd.attributes, FieldDef.DISPLAY_ONLY_ATTR)) {
                    gen_set_field_attr(entityName, fd, "FRM-CPIM-UBY", false, -1);
                }
            }
            else {
                //////////////
            }
        }

        finSection("UNP-MKY-" + entityName);

        //

        iniSection("UNP-AKY-" + entityName);

        for (int i = 0; i < fields.size(); i++) {

            if (fields.get(i) instanceof FieldDef) {

                FieldDef fd = (FieldDef) fields.get(i);

                if (fd.modifier == FieldDef.AKY && FieldDef.absenceAttribute(fd.attributes, FieldDef.DISPLAY_ONLY_ATTR)) {
                    gen_set_field_attr(entityName, fd, "FRM-CPIM-UBY", true, -1);
                }
            }
            else {
                //////////////
            }
        }

        finSection("UNP-AKY-" + entityName);
    }

    /******************************************************************************
     * genPRO_FLD_entity
     ******************************************************************************/
    /**
     *
     * TODO_javadoc.
     *
     *
     * @param entityName TODO_javadoc.
     * @param fields TODO_javadoc.
     * @param subsystems TODO_javadoc.
     *
     * @since 1.0
     *
     */
    private static void genPRO_FLD_entity(String entityName, ArrayList<Object> fields, ArrayList<String> subsystems) {

        iniSection("PRO-FLD-" + entityName);

        for (int i = 0; i < fields.size(); i++) {

            if (fields.get(i) instanceof FieldDef) {

                FieldDef fd = (FieldDef) fields.get(i);

                if (fd.fmsname.substring(0, 3).equals(FieldDef.FRM) && FieldDef.absenceAttribute(fd.attributes, FieldDef.DISPLAY_ONLY_ATTR)) {
                    gen_set_field_attr(entityName, fd, "FRM-CPIM-AEY", false, -1);
                }
            }
            else {
                //////////////
            }
        }

        for (String subsys : subsystems) {

            if (!subsys.equals(FieldDef.FRM)) {
                gen.println("           PERFORM PRO-" + subsys + "-" + entityName + ".");
            }
        }

        finSection("PRO-FLD-" + entityName);
    }

    /******************************************************************************
     * genPRO_subsys_entity
     ******************************************************************************/
    /**
     *
     * TODO_javadoc.
     *
     *
     * @param subsys TODO_javadoc.
     * @param entityName TODO_javadoc.
     * @param fields TODO_javadoc.
     *
     * @since 1.0
     *
     */
    private static void genPRO_subsys_entity(String subsys, String entityName, ArrayList<Object> fields) {

        iniSection("PRO-" + subsys + "-" + entityName);

        ArrayList<Object>     vars  = getSubsysVarsFromFields(subsys, fields);
        ArrayList<ElementDef> array = null;

        for (int i = 0; i < vars.size(); i++) {

            if (vars.get(i) instanceof FieldDef) {

                FieldDef fd = (FieldDef) vars.get(i);

                if (Utils.searchIntInArray(fd.modifier, KEY_TYPES) < 0 && FieldDef.absenceAttribute(fd.attributes, FieldDef.DISPLAY_ONLY_ATTR)) {
                    gen_set_field_attr(entityName, fd, "FRM-CPIM-AEY", false, -1);
                }
            }
            else if (vars.get(i) instanceof ArrayList) {

                array = (ArrayList<ElementDef>) vars.get(i);

                for (int j = 0; j < array.size(); j++) {

                    for (int k = 0; k < array.get(j).index.size(); k++) {

                        if (Utils.searchIntInArray(array.get(j).field.modifier, KEY_TYPES) < 0 && FieldDef.absenceAttribute(array.get(j).field.attributes, FieldDef.DISPLAY_ONLY_ATTR)) {
                            gen_set_field_attr(entityName, array.get(j).field, "FRM-CPIM-AEY", false, k + 1);
                        }
                    }
                }
            }
       }

        finSection("PRO-" + subsys + "-" + entityName);
    }

    /******************************************************************************
     * genUNP_FLD_entity
     ******************************************************************************/
    /**
     *
     * TODO_javadoc.
     *
     *
     * @param entityName TODO_javadoc.
     * @param fields TODO_javadoc.
     * @param subsystems TODO_javadoc.
     *
     * @since 1.0
     *
     */
    private static void genUNP_FLD_entity(String entityName, ArrayList<Object> fields, ArrayList<String> subsystems) {

        iniSection("UNP-FLD-" + entityName);

        for (int i = 0; i < fields.size(); i++) {

            if (fields.get(i) instanceof FieldDef) {

                FieldDef fd = (FieldDef) fields.get(i);

                if (fd.fmsname.substring(0, 3).equals(FieldDef.FRM) && FieldDef.absenceAttribute(fd.attributes, FieldDef.DISPLAY_ONLY_ATTR)) {
                    gen_set_field_attr(entityName, fd, "FRM-CPIM-UBY", false, -1);
                }
            }
            else {
                //////////////
            }
        }

        for (String subsys : subsystems) {

            if (!subsys.equals(FieldDef.FRM)) {
                gen.println("           PERFORM UNP-" + subsys + "-" + entityName + ".");
            }
        }

        finSection("UNP-FLD-" + entityName);
    }

    /******************************************************************************
     * genUNP_subsys_entity
     ******************************************************************************/
    /**
     *
     * TODO_javadoc.
     *
     *
     * @param subsys TODO_javadoc.
     * @param entityName TODO_javadoc.
     * @param fields TODO_javadoc.
     *
     * @since 1.0
     *
     */
    private static void genUNP_subsys_entity(String subsys, String entityName, ArrayList<Object> fields) {

        iniSection("UNP-" + subsys + "-" + entityName);

        ArrayList<Object>     vars  = getSubsysVarsFromFields(subsys, fields);
        ArrayList<ElementDef> array = null;

        for (int i = 0; i < vars.size(); i++) {

            if (vars.get(i) instanceof FieldDef) {

                FieldDef fd = (FieldDef) vars.get(i);

                if (Utils.searchIntInArray(fd.modifier, KEY_TYPES) < 0 && FieldDef.absenceAttribute(fd.attributes, FieldDef.DISPLAY_ONLY_ATTR)) {
                    gen_set_field_attr(entityName, fd, "FRM-CPIM-UBY", false, -1);
                }
            }
            else if (vars.get(i) instanceof ArrayList) {

                array = (ArrayList<ElementDef>) vars.get(i);

                for (int j = 0; j < array.size(); j++) {

                    for (int k = 0; k < array.get(j).index.size(); k++) {

                        if (Utils.searchIntInArray(array.get(j).field.modifier, KEY_TYPES) < 0 && FieldDef.absenceAttribute(array.get(j).field.attributes, FieldDef.DISPLAY_ONLY_ATTR)) {
                            gen_set_field_attr(entityName, array.get(j).field, "FRM-CPIM-UBY", false, k + 1);
                        }
                    }
                }
            }
       }

        finSection("UNP-" + subsys + "-" + entityName);
    }

    /******************************************************************************
     * genVAL_KEY_entity
     ******************************************************************************/
    /**
     *
     * TODO_javadoc.
     *
     *
     * @param entityName TODO_javadoc.
     * @param fields TODO_javadoc.
     *
     * @since 1.0
     *
     */
    private static void genVAL_KEY_entity(String entityName, ArrayList<Object> fields,HashMap<String, Integer> gls ) {

        iniSection("VAL-KEY-" + entityName);

        gen.println("           PERFORM VAL-IKY-" + entityName + ".");
        gen.println("           PERFORM VAL-MKY-" + entityName + ".");
        gen.println("           PERFORM VAL-AKY-" + entityName + ".");

        finSection("VAL-KEY-" + entityName);

        //

        iniSection("VAL-IKY-" + entityName);

        for (int i = 0; i < fields.size(); i++) {

            if (fields.get(i) instanceof FieldDef) {

                FieldDef fd = (FieldDef) fields.get(i);

                if (fd.modifier == FieldDef.IKY) {
                    perform_and_validation(entityName, fd, "VAL-IKY", true, -1);
                }
            }
            else {
                //////////////
            }
        }

        finSection("VAL-IKY-" + entityName);

        //

        genVAL_MKY_entity(entityName, fields);

        //

        iniSection("VAL-AKY-" + entityName);

        for (int i = 0; i < fields.size(); i++) {

            if (fields.get(i) instanceof FieldDef) {

                FieldDef fd = (FieldDef) fields.get(i);

                if (fd.modifier == FieldDef.AKY) {
                    perform_and_validation(entityName, fd, "VAL-AKY", false, -1);
                }
            }
            else {
                //////////////
            }
        }

        finSection("VAL-AKY-" + entityName);

        //

        for (int i = 0; i < fields.size(); i++) {

            if (fields.get(i) instanceof FieldDef) {

                FieldDef fd = (FieldDef) fields.get(i);

                if (Utils.searchIntInArray(fd.modifier, KEY_TYPES) >= 0) {
                    genVAL_field(entityName, fd, -1, gls);
                }
            }
            else {
                //////////////
            }
        }
    }

    /******************************************************************************
     * perform_and_validation
     ******************************************************************************/
    /**
     *
     * TODO_javadoc.
     *
     *
     * @param entityName TODO_javadoc.
     * @param fd TODO_javadoc.
     * @param sectionName TODO_javadoc.
     * @param size TODO_javadoc.
     *
     * @since 1.0
     *
     */
    private static void perform_and_validation(String entityName, FieldDef fd, String sectionName, boolean withLineFeed, int size) {

        if (fd.replaced != null && fd.type != FieldDef.DATE) {

            for (FieldDef fr : fd.replaced) {
                perform_and_validation(entityName, fr, sectionName, true, size); /// verificar 'true'
            }
        }
        else {

            gen.print  ("           PERFORM VAL-" + fd.name);

            if (size != -1) {

                gen.println();
                gen.println("            VARYING FRM-IFLD FROM 1 BY 1 UNTIL FRM-IFLD > " + size);
                gen.println("                OR FRM-SUAR = FRM-SUAR-MAL");
                gen.println("                OR FRM-SUAR = FRM-SUAR-CLR.");
            }
            else {
                gen.println(".");
            }

            gen.println("           IF FRM-SUAR = FRM-SUAR-MAL OR FRM-SUAR = FRM-SUAR-CLR");

            if (size != -1) {
                gen.println("                SUBTRACT 1 FROM FRM-IFLD");
            }

          //if (withLineFeed) {
          //    gen.println("                MOVE FRM-IND-ERRO TO " + fd.name + "-LEN IN " + entityName + "-FLD" + (size != -1 ? "(FRM-IFLD)" : ""));
          //}
          //else {
                gen.println("                MOVE FRM-IND-ERRO TO " + fd.name + "-LEN IN " + entityName + "-FLD" + (size != -1 ? "(FRM-IFLD)" : ""));
          //}

            gen.println("                GO TO FIN-" + sectionName + "-" + entityName + ".");
        }
    }

    /******************************************************************************
     * genVAL_field
     ******************************************************************************/
    /**
     *
     * TODO_javadoc.
     *
     *
     * @param entityName TODO_javadoc.
     * @param fd TODO_javadoc.
     * @param size TODO_javadoc.
     *
     * @since 1.0
     *
     */
    private static void genVAL_field(String entityName, FieldDef fd, int size, HashMap<String, Integer> gls) {

        if (fd.replaced != null && fd.type != FieldDef.DATE) {

            for (FieldDef fr : fd.replaced) {
                genVAL_field(entityName, fr, size, gls);
            }
        }
        else {

            gen.println("       VAL-" + fd.name + " SECTION.");
            gen.println("       INI-VAL-" + fd.name + ".");

            //

            if (fd.type == FieldDef.DATE) {

                validation_response_required(entityName, fd, size);

                if (FieldDef.absenceAttribute(fd.attributes, FieldDef.DISPLAY_ONLY_ATTR)) {

                    gen.println("           MOVE " + fd.name + " IN " + entityName + "-FLD TO FEC-FECH.");
                    gen.println("           MOVE FEC-FORM-FEC TO FEC-FORM.");
                    gen.println("           MOVE FEC-FBLK-S  TO FEC-FBLK.");
                    gen.println("           MOVE FEC-CHOY-LE TO FEC-CHOY.");
                    gen.println("           MOVE FEC-VHBL-S TO FEC-VHBL.");
                }
            }

            String ident = "INI_" + fd.name.replace('-', '_');

            if (addit_hash.containsKey    (ident)) {
                gen.println(addit_hash.get(ident));
            }

            //

            if (FieldDef.absenceAttribute(fd.attributes, FieldDef.DISPLAY_ONLY_ATTR) && fd.special != FieldDef.GLS_IDC && fd.type != FieldDef.DATE) { //  &&
                validation_response_required(entityName, fd, size);
            }

            if (fd.special == FieldDef.GLS_IDC) {

                String glosaField = fd.name.substring(0, 3) + "-GLS-" + fd.name.substring(8);

                gen.println("           IF " + glosaField + " IN " + entityName + "-FLD NOT > IDC-INIC-GLS");
                gen.println("              MOVE IDC-INIC-GLS TO " + glosaField + " IN " + entityName + "-FLD.");
                gen.println("      *VAL-GLS para IDC valida glosa ( extension ) de identificador");
                gen.println("           MOVE " + glosaField + " IN " + entityName + "-FLD TO IDC-GLS-RUTV.");
                gen.println("           PERFORM VAL-GLS.");
                gen.println("           MOVE IDC-GLS-RUTV TO " + glosaField + " IN " + entityName + "-FLD.");
            }
            else if (fd.type == FieldDef.STRING && fd.special == FieldDef.VRF) {
           //     validation_response_required(entityName, fd, size);
           //OGB , se agrega validacion de VAL-RUT 	
                gen.println("      *VAL-RUT Valida Rut para campo IDC");
                gen.println("           MOVE IDC-ZERO-S TO IDC-ZERO.");
                gen.println("           MOVE " + fd.name.substring(0, 3) + "-NUM-" + fd.name.substring(8) + " IN " + entityName + "-FLD TO IDC-NUM-RUTV.");
                gen.println("           MOVE " + fd.name + " IN " + entityName + "-FLD TO IDC-VRF-RUTV.");
                gen.println("           PERFORM VAL-RUT.");
            }
            else if (fd.type == FieldDef.STRING && fd.special == FieldDef.IDC) {
            	
                gen.println("      *VAL-IDC Valida identificador");
                gen.println("           MOVE "+ fd.name +" IN " + entityName + "-FLD TO IDC-IND-RUTV.");
                gen.println("           PERFORM VAL-IDC.");
                gen.println("           MOVE IDC-IND-RUTV TO "+ fd.name +" IN " + entityName + "-FLD.");
            	
            }
            // probando ...

            //String ident = "INI_" + fd.name.replace('-', '_');
            //
            //if (addit_hash.containsKey    (ident)) {
            //    gen.println(addit_hash.get(ident));
            //}

            //

            if (fd.type == FieldDef.DATE) {

                if (FieldDef.absenceAttribute(fd.attributes, FieldDef.DISPLAY_ONLY_ATTR)) {

                    gen.println("           MOVE FEC-VAL-FEC TO FEC-CMND.");
                    gen.println("           PERFORM PRO-FEC.");
                    gen.println("           IF FEC-STAT-OKS");
                    gen.println("               MOVE FEC-FECH TO " + fd.name + " IN " + entityName + "-FLD");
                    gen.println("           ELSE");
                    gen.println("               MOVE FRM-SUAR-MAL TO FRM-SUAR");
                    gen.println("               MOVE FEC-MENS     TO FRM-MENS");
                    gen.println("               GO TO FIN-VAL-" + fd.name + ".");
                }
            }

            //

            ident = fd.name.replace('-', '_');

            if (addit_hash.containsKey    (ident)) {
                gen.println(addit_hash.get(ident));
            }

            //

            if (FieldDef.absenceAttribute(fd.attributes, FieldDef.DISPLAY_ONLY_ATTR) && fd.special != FieldDef.GLS_IDC) {
                domain_range_validation_search(entityName, fd, size, gls, "VAL");
            }

            //

            //if (fd.fmsname.substring(3, 8).equals("_COD_")) { ///////// validar
            //    domain_range_validation_search(entityName, fd, -1, gls, "VAL");
           // }

            //

            finSection("VAL-" + fd.name, "FIN_" + fd.name.replace('-', '_'));
        }
    }

    /******************************************************************************
     * domain_range_validation_search
     ******************************************************************************/
    /**
     *
     * TODO_javadoc.
     *
     *
     * @param entityName TODO_javadoc.
     * @param fd TODO_javadoc.
     * @param size TODO_javadoc.
     *
     * @since 1.0
     *
     */
    private static void domain_range_validation_search(String entityName, FieldDef fd, int size, HashMap<String, Integer> gls,  String sectionType) {


        //ogb-ini
        
        if ( ranges_hash.containsKey(fd.name)) {

            DomainRangeDef range = ranges_hash.get(fd.name);

            //logger.debug("range (" + fd.name + ") --> domain : '" + range.getDomain() + "'");

            if (domains_hash.containsKey(range.getDomain())) {

                DomainRangeDef domain = domains_hash.get(range.getDomain());

              //logger.debug("domain (" + range.getDomain() + ") --> validation : '" + domain.getValidation() + "'");

                ////////////////////////////////////////////////
                //si esta formando secciones PUT y el campo posee glosa tipo FRM-GLS-
                if (sectionType.equals("PUT") && gls.containsKey(fd.name.substring(8,12))) {
                
	                if (range.getSearch().equals("BUSTAB") /*&&*/|| domain.getSearch().equals("BUSTAB")) {
	
                        gen.println("      *BUS-TAB busca glosa de codigo en tabla");
	                	
	                    switch (fd.type) {
	
	                    case FieldDef.INTEGER :
	                    case FieldDef.LONG :
	                    case FieldDef.DOUBLE :
	                    case FieldDef.DATE :
	
	                        gen.println("           IF " + fd.name + " IN " + entityName + "-FLD > ZEROES");
	
	                        break;
	
	                    case FieldDef.CHAR :
	                    case FieldDef.BOOLEAN :
	                    case FieldDef.STRING :
	
	                        gen.println("           IF " + fd.name + " IN " + entityName + "-FLD > SPACES");
	
	                        break;
	                    }
	
	                    gen.println("               MOVE '" + domain.getSystem() + "' TO TAB-COD-SIST");
	                    gen.println("               MOVE '" + domain.getTable()  + "' TO TAB-COD-TTAB IN TAB");
	                    gen.println("               MOVE " + fd.name + " IN " + entityName + "-FLD TO TAB-COD-CTAB IN TAB");
	                    gen.println("               PERFORM BUS-TAB");
	                    
	                    int glsSize = gls.get(fd.name.substring(8,12));
	                    
	                    if (glsSize == 0 || glsSize > 12)
		                    gen.println("               MOVE TAB-GLS-DESC IN TAB TO");
	                    else if(glsSize > 5)
		                    gen.println("               MOVE TAB-GLS-DCOR IN TAB TO");
	                    else 
		                    gen.println("               MOVE TAB-GLS-ABRV IN TAB TO");
	                    
	                    gen.println("                    FRM-GLS-" + fd.name.substring(8) + " IN " + entityName + "-FLD");            // revisar que exista el campo FRM-GLS-" + fd.name.substring(8) //  && existField("FRM-GLS-" + fd.name.substring(8))
	                    gen.println("           ELSE");
	                    gen.println("               MOVE SPACES TO FRM-GLS-" + fd.name.substring(8) + " IN " + entityName + "-FLD."); // revisar que exista el campo FRM-GLS-" + fd.name.substring(8) //  && existField("FRM-GLS-" + fd.name.substring(8))
	                }
	                
	                if (range.getSearch().equals("BUSMSC") /*&&*/|| domain.getSearch().equals("BUSMSC")) { ///// verificar
	                	
                        gen.println("      *BUS-MSC busca glosa de miscelaneo en tabla");
	                    gen.println("           IF " + fd.name + " IN " + entityName + "-FLD > SPACES");
		                gen.println("               MOVE '" + domain.getSystem() + "' TO MSC-COD-SIST");
	                    gen.println("               MOVE '" + domain.getTable()  + "' TO MSC-COD-TMSC IN MSC");
	                    gen.println("               MOVE " + fd.name + " IN " + entityName + "-FLD TO MSC-COD-CMSC IN MSC");
	                    gen.println("               PERFORM BUS-MSC");
	                    
	                    int glsSize = gls.get(fd.name.substring(8,12));
	                    
	                    if (glsSize == 0 || glsSize > 12)
		                    gen.println("               MOVE MSC-GLS-DESC IN MSC TO");
	                    else if(glsSize > 5)
		                    gen.println("               MOVE MSC-GLS-DCOR IN MSC TO");
	                    else 
		                    gen.println("               MOVE MSC-GLS-ABRV IN MSC TO");
	                    
	                    gen.println("                    FRM-GLS-" + fd.name.substring(8) + " IN " + entityName + "-FLD"); 
	                    gen.println("           ELSE");
	                    gen.println("               MOVE SPACES TO"); 
	                    gen.println("                    FRM-GLS-" + fd.name.substring(8) + " IN " + entityName + "-FLD.");

	                }
	                if (range.getSearch().equals("BUSOFI") /*&&*/|| domain.getSearch().equals("BUSOFI")) {
	                	
                        gen.println("      *BUS-OFI busca oficina en tablas");
	                    gen.println("           IF " + fd.name + " IN " + entityName + "-FLD > SPACES");
	                    gen.println("               MOVE " + fd.name + " IN " + entityName + "-FLD TO OFI-COD-OFIC IN OFI");
	                    gen.println("               PERFORM BUS-OFI");
	                    
	                    int glsSize = gls.get(fd.name.substring(8,12));
	                    
	                    if (glsSize == 0 || glsSize > 5)
		                    gen.println("               MOVE OFI-GLS-DESC IN OFI TO FRM-GLS-" + fd.name.substring(8) + " IN " + entityName + "-FLD");
	                    else 
		                    gen.println("               MOVE OFI-GLS-ABRV IN OFI TO FRM-GLS-" + fd.name.substring(8) + " IN " + entityName + "-FLD");
	                    gen.println("           ELSE");
	                    gen.println("               MOVE SPACES TO FRM-GLS-" + fd.name.substring(8) + " IN " + entityName + "-FLD."); 

	                }
	                if (range.getSearch().equals("BUSUSR") /*&&*/|| domain.getSearch().equals("BUSUSR")) {
	                	
                        gen.println("      *BUS-USR busca usuario en tablas");
	                    gen.println("           IF " + fd.name + " IN " + entityName + "-FLD > SPACES");
	                    gen.println("               MOVE " + fd.name + " IN " + entityName + "-FLD TO USR-COD-USER IN USR");
	                    gen.println("               PERFORM BUS-USR");
	                    
	                    int glsSize = gls.get(fd.name.substring(8,12));
	                    
	                    if (glsSize == 0 || glsSize > 12)
		                    gen.println("               MOVE USR-GLS-DESC IN USR TO FRM-GLS-" + fd.name.substring(8) + " IN " + entityName + "-FLD");
	                    else if(glsSize > 5)
		                    gen.println("               MOVE USR-GLS-DCOR IN USR TO FRM-GLS-" + fd.name.substring(8) + " IN " + entityName + "-FLD");
	                    else 
		                    gen.println("               MOVE USR-GLS-ABRV IN USR TO FRM-GLS-" + fd.name.substring(8) + " IN " + entityName + "-FLD");
	                    gen.println("           ELSE");
	                    gen.println("               MOVE SPACES TO FRM-GLS-" + fd.name.substring(8) + " IN " + entityName + "-FLD."); 

	                }
                }
                else if (sectionType.equals("VAL")) {
                	if (domain.getValidation().equals("VALCOD")) {
                		
                        gen.println("      *VAL-COD Valida codigo de tabla");
                        gen.println("           MOVE '" + domain.getSystem() + "' TO TAB-COD-SIST.");
                        gen.println("           MOVE '" + domain.getTable() +  "' TO TAB-COD-TTAB IN TAB.");
                        gen.println("           MOVE " + fd.name + " IN " + entityName + "-FLD" + (size != -1 ? "(FRM-IFLD)" : "") + " TO TAB-COD-CTAB IN TAB.");
                        gen.println("           PERFORM VAL-COD.");
                        
                        if(gls.containsKey(fd.name.substring(8,12))) {
                        	
    	                    int glsSize = gls.get(fd.name.substring(8,12));
                        	
                            gen.println("           IF MSG-COD-MENS = 'COD    NEX' OR");
    	                    gen.println("             " + fd.name + " IN " + entityName + "-FLD NOT > SPACES");
    	                    gen.println("               MOVE SPACES TO FRM-GLS-" + fd.name.substring(8) + " IN " + entityName + "-FLD");
    	                    gen.println("           ELSE");
    	                    if (glsSize == 0 || glsSize > 12) 
    	                    	gen.println("               MOVE TAB-GLS-DESC IN TAB TO");
    	                    else if (glsSize > 5)
    	                    	gen.println("               MOVE TAB-GLS-DCOR IN TAB TO");
    	                    else
    	                    	gen.println("               MOVE TAB-GLS-ABRV IN TAB TO");
    	                    
	                    	gen.println("                   FRM-GLS-"+ fd.name.substring(8) + " IN " + entityName + "-FLD.");
    	                    
                        }
                	}
                	if (domain.getValidation().equals("VALIND")) {

                        gen.println("      *VAL-IND Valida miscelaneo de tabla");
                        gen.println("           MOVE '" + domain.getSystem() + "' TO MSC-COD-SIST.");
                        gen.println("           MOVE '" + domain.getTable() +  "' TO MSC-COD-TMSC IN MSC.");
                        gen.println("           MOVE " + fd.name + " IN " + entityName + "-FLD" + (size != -1 ? "(FRM-IFLD)" : "") + " TO MSC-COD-CMSC IN MSC.");
                        gen.println("           PERFORM VAL-IND.");
                        
                        if(gls.containsKey(fd.name.substring(8,12))) {
                        	
    	                    int glsSize = gls.get(fd.name.substring(8,12));
                        	
                            gen.println("           IF MSG-COD-MENS = 'COD    NEX' OR");
    	                    gen.println("             " + fd.name + " IN " + entityName + "-FLD NOT > SPACES");
    	                    gen.println("               MOVE SPACES TO FRM-GLS-" + fd.name.substring(8) + " IN " + entityName + "-FLD");
    	                    gen.println("           ELSE");
    	                    if (glsSize == 0 || glsSize > 12) 
    	                    	gen.println("               MOVE MSC-GLS-DESC IN MSC TO");
    	                    else if (glsSize > 5)
    	                    	gen.println("               MOVE MSC-GLS-DCOR IN MSC TO");
    	                    else
    	                    	gen.println("               MOVE MSC-GLS-ABRV IN MSC TO");
    	                    
	                    	gen.println("                   FRM-GLS-"+ fd.name.substring(8) + " IN " + entityName + "-FLD.");
                        
                        }
                	}
                	if (domain.getValidation().equals("VALOFI")) {
                        gen.println("      *VAL-OFI Valida codigo de Oficina en TABLAS");
                        gen.println("           MOVE " + fd.name + " IN " + entityName + "-FLD" + (size != -1 ? "(FRM-IFLD)" : "") + " TO OFI-COD-OFIC IN OFI.");
                        gen.println("           PERFORM VAL-OFI.");
                        gen.println("           IF MSG-COD-MENS NOT = SPACES");
                        gen.println("               MOVE MSG-GLS-DESC TO FRM-MENS");
                        gen.println("               MOVE FRM-SUAR-MAL TO FRM-SUAR.");
                        if(gls.containsKey(fd.name.substring(8,12))) {
    	                    int glsSize = gls.get(fd.name.substring(8,12));
                        	
                            gen.println("           IF MSG-COD-MENS = 'COD    NEX'");
    	                    gen.println("               MOVE SPACES TO FRM-GLS-" + fd.name.substring(8) + " IN " + entityName + "-FLD");
    	                    gen.println("           ELSE");
    	                    if (glsSize == 0 || glsSize > 5)
    	                    	gen.println("           MOVE OFI-GLS-DESC IN OFI TO FRM-GLS-"+ fd.name.substring(8) + " IN " + entityName + "-FLD.");
    	                    else
    	                    	gen.println("           MOVE OFI-GLS-ABRV IN OFI TO FRM-GLS-"+ fd.name.substring(8) + " IN " + entityName + "-FLD.");
                        }
                        
                	}
                	if (domain.getValidation().equals("VALUSR")) {
                        gen.println("      *VAL-USR Valida Usuario");
                        gen.println("           MOVE " + fd.name + " IN " + entityName + "-FLD" + (size != -1 ? "(FRM-IFLD)" : "") + " TO USR-COD-USER IN USR.");
                        gen.println("           PERFORM VAL-USR.");
                        gen.println("           IF MSG-COD-MENS > SPACES");
                        gen.println("               MOVE MSG-GLS-DESC TO FRM-MENS");
                        gen.println("               MOVE FRM-SUAR-MAL TO FRM-SUAR.");
                        if(gls.containsKey(fd.name.substring(8,12))) {
    	                    int glsSize = gls.get(fd.name.substring(8,12));
                        	
                            gen.println("           IF MSG-COD-MENS = 'COD    NEX'");
    	                    if (glsSize == 0 || glsSize > 12)
    	                    	gen.println("           MOVE USR-GLS-DESC IN USR TO FRM-GLS-"+ fd.name.substring(8) + " IN " + entityName + "-FLD.");
    	                    else if (glsSize > 5)
    	                    	gen.println("           MOVE USR-GLS-DCOR IN USR TO FRM-GLS-"+ fd.name.substring(8) + " IN " + entityName + "-FLD.");
    	                    else
    	                    	gen.println("           MOVE USR-GLS-ABRV IN USR TO FRM-GLS-"+ fd.name.substring(8) + " IN " + entityName + "-FLD.");
                            gen.println("           ELSE");
    	                    gen.println("               MOVE SPACES TO FRM-GLS-" + fd.name.substring(8) + " IN " + entityName + "-FLD");

                        }
                	}
                	if (domain.getValidation().equals("VALTDU")) {
                        gen.println("      *VAL-TDU Valida Tipo de Usuario");
                        gen.println("           MOVE '" + domain.getTable() +  "'        TO USR-COD-TTAB IN USR.");
                        gen.println("           MOVE " + fd.name + " IN " + entityName + "-FLD" + (size != -1 ? "(FRM-IFLD)" : "") + " TO USR-COD-USER IN USR.");
                        gen.println("           PERFORM VAL-TDU.");
                        gen.println("           IF MSG-COD-MENS > SPACES");
                        gen.println("               MOVE MSG-GLS-DESC TO FRM-MENS");
                        gen.println("               MOVE FRM-SUAR-MAL TO FRM-SUAR.");
                        if(gls.containsKey(fd.name.substring(8,12))) {
    	                    int glsSize = gls.get(fd.name.substring(8,12));
                            gen.println("           IF MSG-COD-MENS = 'COD    NEX' AND");
    	                    gen.println("             " + fd.name + " IN " + entityName + "-FLD > SPACES");
    	                    if (glsSize == 0 || glsSize > 12)
    	                    	gen.println("           MOVE USR-GLS-DESC IN USR TO FRM-GLS-"+ fd.name.substring(8) + " IN " + entityName + "-FLD.");
    	                    else if (glsSize > 5)
    	                    	gen.println("           MOVE USR-GLS-DCOR IN USR TO FRM-GLS-"+ fd.name.substring(8) + " IN " + entityName + "-FLD.");
    	                    else
    	                    	gen.println("           MOVE USR-GLS-ABRV IN USR TO FRM-GLS-"+ fd.name.substring(8) + " IN " + entityName + "-FLD.");
                            gen.println("           ELSE");
    	                    gen.println("               MOVE SPACES TO FRM-GLS-" + fd.name.substring(8) + " IN " + entityName + "-FLD");
                        }
                        
                	}
                	
                
                }
                
            }

        	
        }
        //ogb-fin
        
        
        //


    }

    /******************************************************************************
     * validation_response_required
     ******************************************************************************/
    /**
     *
     * TODO_javadoc.
     *
     *
     * @param entityName TODO_javadoc.
     * @param fd TODO_javadoc.
     * @param size TODO_javadoc.
     *
     * @since 1.0
     *
     */
    private static void validation_response_required(String entityName, FieldDef fd, int size) {

        switch (fd.type) {

        case FieldDef.INTEGER :
        case FieldDef.LONG :
        case FieldDef.DOUBLE :
        case FieldDef.DATE :

            if (FieldDef.hasAttribute(fd.attributes, FieldDef.RESPONSE_REQUIRED_ATTR)) {

                gen.println("           IF " + fd.name + " IN " + entityName + "-FLD" + (size != -1 ? "(FRM-IFLD)" : "") + " = ZEROES");
                gen.println("                PERFORM ERR-GLS");
                gen.println("                GO TO FIN-VAL-" + fd.name + ".");
            }
            else {

                gen.println("           IF " + fd.name + " IN " + entityName + "-FLD" + (size != -1 ? "(FRM-IFLD)" : "") + " NOT > ZEROES");
                gen.println("              MOVE ZEROES TO " + fd.name + " IN " + entityName + "-FLD" + (size != -1 ? "(FRM-IFLD)" : "") + ".");
            }

            break;

        case FieldDef.CHAR :
        case FieldDef.BOOLEAN :
        case FieldDef.STRING :

            if (FieldDef.hasAttribute(fd.attributes, FieldDef.RESPONSE_REQUIRED_ATTR)) {

                gen.println("           IF " + fd.name + " IN " + entityName + "-FLD" + (size != -1 ? "(FRM-IFLD)" : "") + " NOT > SPACES"); // 1902_06 02 07 diff liq.docx (mail 03-09-2019 18:49)
                gen.println("                PERFORM ERR-GLS");
                gen.println("                GO TO FIN-VAL-" + fd.name + ".");
            }
            else {

                gen.println("           IF " + fd.name + " IN " + entityName + "-FLD" + (size != -1 ? "(FRM-IFLD)" : "") + " NOT > SPACES");
                gen.println("              MOVE SPACES TO " + fd.name + " IN " + entityName + "-FLD" + (size != -1 ? "(FRM-IFLD)" : "") + ".");
            }

            break;
        }
    }

    /******************************************************************************
     * genVAL_MKY_entity
     ******************************************************************************/
    /**
     *
     * TODO_javadoc.
     *
     *
     * @param entityName TODO_javadoc.
     * @param fields TODO_javadoc.
     *
     * @since 1.0
     *
     */
    private static void genVAL_MKY_entity(String entityName, ArrayList<Object> fields) {

        iniSection("VAL-MKY-" + entityName);

        for (int i = 0; i < fields.size(); i++) {

            if (fields.get(i) instanceof FieldDef) {

                FieldDef fd = (FieldDef) fields.get(i);

                if (fd.modifier == FieldDef.MKY && action == BQ_ACTION) {
                    perform_and_validation(entityName, fd, "VAL-MKY", true, -1);
                }
            }
            else {
                //////////////
            }
        }

        finSection("VAL-MKY-" + entityName);
    }

    /******************************************************************************
     * genVAL_CON_KEY_entity
     ******************************************************************************/
    /**
     *
     * TODO_javadoc.
     *
     *
     * @param entityName TODO_javadoc.
     * @param fields TODO_javadoc.
     *
     * @since 1.0
     *
     */
    private static void genVAL_CON_KEY_entity(String entityName, ArrayList<Object> fields) {

        iniSection("VAL-CON-KEY-" + entityName);

        boolean first = true;

        for (int i = 0; i < fields.size(); i++) {

            if (fields.get(i) instanceof FieldDef) {

                FieldDef fd = (FieldDef) fields.get(i);

                first = gen_cond_val_key(entityName, fd, first, KEY_TYPES);
            }
            else {
                //////////////
            }
        }

        gen.println("                PERFORM ERR-KEY");
        gen.println("                PERFORM FST-KEY-" + entityName + ".");

        finSection("VAL-CON-KEY-" + entityName);
    }

    /******************************************************************************
     * gen_cond_val_key
     ******************************************************************************/
    /**
     *
     * TODO_javadoc.
     *
     *
     * @param entityName TODO_javadoc.
     * @param fd TODO_javadoc.
     * @param first TODO_javadoc.
     *
     * @since 1.0
     *
     */
    private static boolean gen_cond_val_key(String entityName, FieldDef fd, boolean first, int[] keys) {

        if (fd.replaced != null) {

            for (FieldDef fr : fd.replaced) {
                first = gen_cond_val_key(entityName, fr, first, keys);
            }
        }
        else {

            if (Utils.searchIntInArray(fd.modifier, keys) >= 0) {

                if (first) {

                    gen.print  ("           IF    ");

                    first = false;
                }
                else {
                    gen.print  ("              AND");
                }

                //

                switch (fd.type) {

                case FieldDef.INTEGER :
                case FieldDef.LONG :
                case FieldDef.DOUBLE :
                case FieldDef.DATE :

                    gen.println(" " + fd.name + " IN " + entityName + "-FLD NOT > ZEROES");

                    break;

                case FieldDef.CHAR :
                case FieldDef.BOOLEAN :
                case FieldDef.STRING :

                    if (fd.special == FieldDef.GLS_IDC) {
                        gen.println(" " + fd.name + " IN " + entityName + "-FLD NOT > IDC-INIC-GLS");
                    }
                    else {
                        gen.println(" " + fd.name + " IN " + entityName + "-FLD NOT > SPACES");
                    }

                    break;
                }
            }
        }

        return first;
    }

    /******************************************************************************
     * genVAL_CON_IKY_entity
     ******************************************************************************/
    /**
     *
     * TODO_javadoc.
     *
     *
     * @param entityName TODO_javadoc.
     * @param fields TODO_javadoc.
     *
     * @since 1.0
     *
     */
    private static void genVAL_CON_IKY_entity(String entityName, ArrayList<Object> fields) {

        iniSection("VAL-CON-IKY-" + entityName);

        boolean first = true;

        for (int i = 0; i < fields.size(); i++) {

            if (fields.get(i) instanceof FieldDef) {

                FieldDef fd = (FieldDef) fields.get(i);

                first = gen_cond_val_key(entityName, fd, first, new int[] { FieldDef.IKY });
            }
            else {
                //////////////
            }
        }

        gen.println("                PERFORM ERR-KEY");
        gen.println("                PERFORM FST-KEY-" + entityName + ".");

        finSection("VAL-CON-IKY-" + entityName);
    }

    /******************************************************************************
     * genVAL_NUM_KEY_entity
     ******************************************************************************/
    /**
     *
     * TODO_javadoc.
     *
     *
     * @param entityName TODO_javadoc.
     * @param fields TODO_javadoc.
     *
     * @since 1.0
     *
     */
    private static void genVAL_NUM_KEY_entity(String entityName, ArrayList<Object> fields) {

        iniSection("VAL-NUM-KEY-" + entityName);

        gen.println("           PERFORM VAL-NUM-IKY-" + entityName + ".");
        gen.println("           PERFORM VAL-NUM-MKY-" + entityName + ".");
        gen.println("           PERFORM VAL-NUM-AKY-" + entityName + ".");

        finSection("VAL-NUM-KEY-" + entityName);

        //

        iniSection("VAL-NUM-IKY-" + entityName);

        for (int i = 0; i < fields.size(); i++) {

            if (fields.get(i) instanceof FieldDef) {

                FieldDef fd = (FieldDef) fields.get(i);

                if (fd.modifier == FieldDef.IKY) {

                    switch (fd.type) {

                    case FieldDef.INTEGER :
                    case FieldDef.LONG :
                    case FieldDef.DOUBLE :
                  //case FieldDef.DATE : // TODO_ALA: revisar

                        gen_num_validation(entityName, fd, "VAL-NUM-IKY", -1);

                        break;
                    }
                    
                    if (fd.replaced != null && fd.special == FieldDef.VRF) {
                        for (FieldDef fr : fd.replaced) {
                        	
                            switch (fr.type) {

                            case FieldDef.INTEGER :
                            case FieldDef.LONG :
                            case FieldDef.DOUBLE :

                                gen_num_validation(entityName, fr, "VAL-NUM-MKY", -1);

                                break;
                            }
                        }
                    }
                }
            }
            else {
                //////////////
            }
        }

        finSection("VAL-NUM-IKY-" + entityName);

        //

        iniSection("VAL-NUM-MKY-" + entityName);

        for (int i = 0; i < fields.size(); i++) {

            if (fields.get(i) instanceof FieldDef) {

                FieldDef fd = (FieldDef) fields.get(i);

                if (fd.modifier == FieldDef.MKY) {

                    switch (fd.type) {

                    case FieldDef.INTEGER :
                    case FieldDef.LONG :
                    case FieldDef.DOUBLE :
                  //case FieldDef.DATE : // TODO_ALA: revisar

                        gen_num_validation(entityName, fd, "VAL-NUM-MKY", -1);

                        break;
                    }
                    
                    if (fd.replaced != null && fd.special == FieldDef.VRF) {
                        for (FieldDef fr : fd.replaced) {
                        	
                            switch (fr.type) {

                            case FieldDef.INTEGER :
                            case FieldDef.LONG :
                            case FieldDef.DOUBLE :

                                gen_num_validation(entityName, fr, "VAL-NUM-MKY", -1);

                                break;
                            }
                        }
                    }
                    
                }
                
            }
            else {
                //////////////
            }
        }
        
        finSection("VAL-NUM-MKY-" + entityName);

        //

        iniSection("VAL-NUM-AKY-" + entityName);

        for (int i = 0; i < fields.size(); i++) {

            if (fields.get(i) instanceof FieldDef) {

                FieldDef fd = (FieldDef) fields.get(i);

                if (fd.modifier == FieldDef.AKY) {

                    switch (fd.type) {

                    case FieldDef.INTEGER :
                    case FieldDef.LONG :
                    case FieldDef.DOUBLE :
                  //case FieldDef.DATE : // TODO_ALA: revisar

                        gen_num_validation(entityName, fd, "VAL-NUM-AKY", -1);

                        break;
                    }
                    
                    if (fd.replaced != null && fd.special == FieldDef.VRF) {
                        for (FieldDef fr : fd.replaced) {
                        	
                            switch (fr.type) {

                            case FieldDef.INTEGER :
                            case FieldDef.LONG :
                            case FieldDef.DOUBLE :

                                gen_num_validation(entityName, fr, "VAL-NUM-MKY", -1);

                                break;
                            }
                        }
                    }
                }
            }
            else {
                //////////////
            }
        }

        finSection("VAL-NUM-AKY-" + entityName);

    }

    /******************************************************************************
     * gen_num_validation
     ******************************************************************************/
    /**
     *
     * TODO_javadoc.
     *
     *
     * @param entityName TODO_javadoc.
     * @param fd TODO_javadoc.
     * @param sectionName TODO_javadoc.
     * @param idx TODO_javadoc.
     *
     * @since 1.0
     *
     */
    private static void gen_num_validation(String entityName, FieldDef fd, String sectionName, int idx) {

        gen.println("       VAL-NUM-" + fd.name + (idx != -1 ? "-" + idx : "") + ".");
        gen.println("           MOVE " + fd.name + "-ALF IN " + entityName + "-FLD" + (idx != -1 ? "(" + idx + ")" : "") + " TO NUM-NUME.");
        gen.println("           MOVE NUM-ZERO-S TO NUM-ZERO."); // TODO_ALA: revisar
        gen.println("           MOVE NUM-SGNO-" + (fd.sign ? "S" : "N") + " TO NUM-SGNO.");
        gen.println("           MOVE " + (fd.sign ? fd.integers - 1 : fd.integers) + " TO NUM-NENT.");
        gen.println("           MOVE " + fd.decimals +                               " TO NUM-NDCM.");
        gen.println("           PERFORM VAL-NUM.");
        gen.println("           IF NUM-STAT-OKS");
        gen.println("                MOVE NUM-N" + (fd.sign ? "S" : "N") + "9" + (fd.decimals == 0 ? "N" : "V") + " TO " + fd.name + " IN " + entityName + "-FLD" + (idx != -1 ? "(" + idx + ")" : ""));
        gen.println("           ELSE");
        gen.println("                MOVE NUM-MENS     TO FRM-MENS");
        gen.println("                MOVE FRM-SUAR-MAL TO FRM-SUAR");
        gen.println("                MOVE -9 TO " + fd.name + "-LEN IN " + entityName + "-FLD" + (idx != -1 ? "(" + idx + ")" : ""));
        gen.println("                GO TO FIN-" + sectionName + "-" + entityName + ".");
    }

    /******************************************************************************
     * genVAL_NUM_FLD_entity
     ******************************************************************************/
    /**
     *
     * TODO_javadoc.
     *
     *
     * @param entityName TODO_javadoc.
     * @param fields TODO_javadoc.
     *
     * @since 1.0
     *
     */
    private static void genVAL_NUM_FLD_entity(String entityName, ArrayList<Object> fields) {

        iniSection("VAL-NUM-FLD-" + entityName);

        ArrayList<ElementDef> array = null;

        for (int i = 0; i < fields.size(); i++) {

            if (fields.get(i) instanceof FieldDef) {

                FieldDef fd = (FieldDef) fields.get(i);

                val_numerica(entityName, fd, -1);
            }
            else if (fields.get(i) instanceof ArrayList) {

                array = (ArrayList<ElementDef>) fields.get(i);

                for (int j = 0; j < array.size(); j++) {

                    if (array.get(j).field.name.substring(0, 3).equals(FieldDef.FRM)) {

                        if (array.get(j).field.special != FieldDef.FEC) {

                            for (int k = 0; k < array.get(j).index.size(); k++) {
                                val_numerica(entityName, array.get(j).field, k + 1);
                            }
                        }
                    }
                }
            }
        }

        finSection("VAL-NUM-FLD-" + entityName);
    }

    /******************************************************************************
     * val_numerica
     ******************************************************************************/
    /**
     *
     * TODO_javadoc.
     *
     *
     * @param entityName TODO_javadoc.
     * @param fd TODO_javadoc.
     * @param idx TODO_javadoc.
     *
     * @since 1.0
     *
     */
    private static void val_numerica(String entityName, FieldDef fd, int idx) {

        if (fd.replaced != null && fd.type != FieldDef.DATE) {

            for (FieldDef fr : fd.replaced) {
                val_numerica(entityName, fr, idx);
            }
        }
        else {

            if (Utils.searchIntInArray(fd.modifier, KEY_TYPES) < 0) {

                switch (fd.type) {

                case FieldDef.INTEGER :
                case FieldDef.LONG :
                case FieldDef.DOUBLE :
              //case FieldDef.DATE : // TODO_ALA: revisar

                    gen_num_validation(entityName, fd, "VAL-NUM-FLD", idx);

                    break;
                }
            }
        }
    }

    /******************************************************************************
     * genEDT_KEY_entity
     ******************************************************************************/
    /**
     *
     * TODO_javadoc.
     *
     *
     * @param entityName TODO_javadoc.
     * @param fields TODO_javadoc.
     *
     * @since 1.0
     *
     */
    private static void genEDT_KEY_entity(String entityName, ArrayList<Object> fields) {

        iniSection("EDT-KEY-" + entityName);

        gen.println("           PERFORM EDT-IKY-" + entityName + ".");
        gen.println("           PERFORM EDT-MKY-" + entityName + ".");
        gen.println("           PERFORM EDT-AKY-" + entityName + ".");

        finSection("EDT-KEY-" + entityName);

        //

        iniSection("EDT-IKY-" + entityName);

        for (int i = 0; i < fields.size(); i++) {

            if (fields.get(i) instanceof FieldDef) {

                FieldDef fd = (FieldDef) fields.get(i);

                if (fd.modifier == FieldDef.IKY) {

                    switch (fd.type) {

                    case FieldDef.INTEGER :
                    case FieldDef.LONG :
                    case FieldDef.DOUBLE :
                  //case FieldDef.DATE : // TODO_ALA: revisar

                        prepare_num_edition(entityName, fd, "EDT-IKY", -1);

                        break;
                    }
                    
                    if (fd.replaced != null && fd.special == FieldDef.VRF) {
                        for (FieldDef fr : fd.replaced) {
                        	
                            switch (fr.type) {

                            case FieldDef.INTEGER :
                            case FieldDef.LONG :
                            case FieldDef.DOUBLE :

                            	prepare_num_edition(entityName, fr, "EDT-MKY", -1);

                                break;
                            }
                        }
                    }
                }
            }
            else {
                //////////////
            }
        }

        finSection("EDT-IKY-" + entityName);

        //

        iniSection("EDT-MKY-" + entityName);

        for (int i = 0; i < fields.size(); i++) {

            if (fields.get(i) instanceof FieldDef) {

                FieldDef fd = (FieldDef) fields.get(i);

                if (fd.modifier == FieldDef.MKY) {

                    switch (fd.type) {

                    case FieldDef.INTEGER :
                    case FieldDef.LONG :
                    case FieldDef.DOUBLE :
                  //case FieldDef.DATE : // TODO_ALA: revisar

                        prepare_num_edition(entityName, fd, "EDT-MKY", -1);

                        break;
                    }
                    
                    if (fd.replaced != null && fd.special == FieldDef.VRF) {
                        for (FieldDef fr : fd.replaced) {
                        	
                            switch (fr.type) {

                            case FieldDef.INTEGER :
                            case FieldDef.LONG :
                            case FieldDef.DOUBLE :

                            	prepare_num_edition(entityName, fr, "EDT-MKY", -1);

                                break;
                            }
                        }
                    }
                    
                    
                }
            }
            else {
                //////////////
            }
        }

        finSection("EDT-MKY-" + entityName);

        //

        iniSection("EDT-AKY-" + entityName);

        for (int i = 0; i < fields.size(); i++) {

            if (fields.get(i) instanceof FieldDef) {

                FieldDef fd = (FieldDef) fields.get(i);

                if (fd.modifier == FieldDef.AKY) {

                    switch (fd.type) {

                    case FieldDef.INTEGER :
                    case FieldDef.LONG :
                    case FieldDef.DOUBLE :
                  //case FieldDef.DATE : // TODO_ALA: revisar

                        prepare_num_edition(entityName, fd, "EDT-AKY", -1);

                        break;
                    }
                    
                    if (fd.replaced != null && fd.special == FieldDef.VRF) {
                        for (FieldDef fr : fd.replaced) {
                        	
                            switch (fr.type) {

                            case FieldDef.INTEGER :
                            case FieldDef.LONG :
                            case FieldDef.DOUBLE :

                            	prepare_num_edition(entityName, fr, "EDT-MKY", -1);

                                break;
                            }
                        }
                    }
                }
            }
            else {
                //////////////
            }
        }

        finSection("EDT-AKY-" + entityName);

    }

    /******************************************************************************
     * prepare_num_edition
     ******************************************************************************/
    /**
     *
     * TODO_javadoc.
     *
     *
     * @param entityName TODO_javadoc.
     * @param fd TODO_javadoc.
     * @param sectionName TODO_javadoc.
     * @param idx TODO_javadoc.
     *
     * @since 1.0
     *
     */
    private static void prepare_num_edition(String entityName, FieldDef fd, String sectionName, int idx) {

        gen.println("           IF " + fd.name + "-LEN IN " + entityName + "-FLD" + (idx != -1 ? "(" + idx + ")" : "") + " = FRM-ERR-NUME");
        gen.println("                MOVE FRM-IND-ERRO TO " + fd.name + "-LEN IN " + entityName + "-FLD" + (idx != -1 ? "(" + idx + ")" : ""));
        gen.println("                GO TO FIN-" + sectionName + "-" + entityName + ".");

      //gen.println("           MOVE " + fd.name + " IN " + entityName + "-FLD" + (idx != -1 ? "(" + idx + ")" : "") + " TO " + fd.name + "-EDT IN " + entityName + "-EDT.");
        gen.println("           MOVE " + fd.name + " IN " + entityName + "-FLD" + (idx != -1 ? "(" + idx + ")" : "") + " TO");
        gen.println("                " + fd.name + "-EDT IN " + entityName + "-EDT.");

        gen.println("           MOVE " + fd.name + "-EDT IN " + entityName + "-EDT TO");
        gen.println("                " + fd.name + "-ALF IN " + entityName + "-FLD" + (idx != -1 ? "(" + idx + ")" : "") + ".");
    }

    /******************************************************************************
     * genEDT_FLD_entity
     ******************************************************************************/
    /**
     *
     * TODO_javadoc.
     *
     *
     * @param entityName TODO_javadoc.
     * @param fields TODO_javadoc.
     *
     * @since 1.0
     *
     */
    private static void genEDT_FLD_entity(String entityName, ArrayList<Object> fields) {

        iniSection("EDT-FLD-" + entityName);

        ArrayList<ElementDef> array = null;

        for (int i = 0; i < fields.size(); i++) {

            if (fields.get(i) instanceof FieldDef) {

                FieldDef fd = (FieldDef) fields.get(i);

                field_prepare_num_edition(entityName, fd, -1);
            }
            else if (fields.get(i) instanceof ArrayList) {

                array = (ArrayList<ElementDef>) fields.get(i);

                for (int j = 0; j < array.size(); j++) {

                    if (array.get(j).field.special != FieldDef.FEC) {

                        for (int k = 0; k < array.get(j).index.size(); k++) {
                            field_prepare_num_edition(entityName, array.get(j).field, k + 1);
                        }
                    }
                }
            }
        }

        finSection("EDT-FLD-" + entityName);
    }

    /******************************************************************************
     * field_prepare_num_edition
     ******************************************************************************/
    /**
     *
     * TODO_javadoc.
     *
     *
     * @param entityName TODO_javadoc.
     * @param fd TODO_javadoc.
     * @param idx TODO_javadoc.
     *
     * @since 1.0
     *
     */
    private static void field_prepare_num_edition(String entityName, FieldDef fd, int idx) {

      //logger.debug("entrando a 'field_prepare_num_edition(" + fd.name + "," + FieldDef.getTypeString(fd.type) + "," + FieldDef.getSpecialString(fd.special) + "," + idx + ")' ...");

        if (fd.replaced != null && fd.type != FieldDef.DATE) {

            for (FieldDef fr : fd.replaced) {
                field_prepare_num_edition(entityName, fr, idx);
            }
        }
        else {

            if (Utils.searchIntInArray(fd.modifier, KEY_TYPES) < 0) {

                switch (fd.type) {

                case FieldDef.INTEGER :
                case FieldDef.LONG :
                case FieldDef.DOUBLE :
              //case FieldDef.DATE : // TODO_ALA: revisar

                    prepare_num_edition(entityName, fd, "EDT-FLD", idx);

                    break;
                }
            }
        }
    }

    /******************************************************************************
     * genRET_ALL_entity
     ******************************************************************************/
    /**
     *
     * TODO_javadoc.
     *
     *
     * @param entityName TODO_javadoc.
     * @param subsystems TODO_javadoc.
     *
     * @since 1.0
     *
     */
    private static void genRET_ALL_entity(String entityName, ArrayList<String> subsystems) {

        iniSection("RET-ALL-" + entityName);

        gen.println("           PERFORM KEY-ALL-" + entityName + ".");

        for (String subsys : subsystems) {

            if (!subsys.equals(FieldDef.FRM)) {
                gen.println("           PERFORM RET-" + subsys + "-" + entityName + ".");
            }
        }

        finSection("RET-ALL-" + entityName);
    }

    /******************************************************************************
     * genRET_subsys_entity
     ******************************************************************************/
    /**
     *
     * TODO_javadoc.
     *
     *
     * @param subsys TODO_javadoc.
     * @param entityName TODO_javadoc.
     * @param fields TODO_javadoc.
     *
     * @since 1.0
     *
     */
    private static void genRET_subsys_entity(String subsys, String entityName, ArrayList<Object> fields) {

        iniSection("RET-" + subsys + "-" + entityName);

        ArrayList<Object>     vars  = getSubsysVarsFromFields(subsys, fields);
        ArrayList<ElementDef> array = null;

        for (int i = 0; i < vars.size(); i++) {

            if (vars.get(i) instanceof FieldDef) {

                FieldDef fd = (FieldDef) vars.get(i);

                if (Utils.searchIntInArray(fd.modifier, KEY_TYPES) < 0) {
                    get_ret_field(subsys, entityName, fd, -1);
                }
            }
            else if (vars.get(i) instanceof ArrayList) {

                array = (ArrayList<ElementDef>) vars.get(i);

                for (int j = 0; j < array.size(); j++) {

                    gen.println("      *");
                    gen.println("      *    CAMPO INDEXADO   " + array.get(j).field.name);

                    for (int k = 0; k < array.get(j).index.size(); k++) {

                        if (Utils.searchIntInArray(array.get(j).field.modifier, KEY_TYPES) < 0) {
                            get_ret_field(subsys, entityName, array.get(j).field, k + 1);
                        }
                    }
                }
            }
        }

        finSection("RET-" + subsys + "-" + entityName);
    }

    /******************************************************************************
     * genVAL_FLD_entity
     ******************************************************************************/
    /**
     *
     * TODO_javadoc.
     *
     *
     * @param entityName TODO_javadoc.
     * @param fields TODO_javadoc.
     *
     * @since 1.0
     *
     */
    private static void genVAL_FLD_entity(String entityName, ArrayList<Object> fields, HashMap<String, Integer> gls) {

        iniSection("VAL-FLD-" + entityName);

        ArrayList<ElementDef> array = null;

        for (int i = 0; i < fields.size(); i++) {

            if (fields.get(i) instanceof FieldDef) {

                FieldDef fd = (FieldDef) fields.get(i);

                (fd.modifier == FieldDef.MKY && action == BQ_ACTION)
                if (Utils.searchIntInArray(fd.modifier, KEY_TYPES) < 0) {
                    perform_and_validation(entityName, fd, "VAL-FLD", false, -1); ///// verificar
                }
            }
            else if (fields.get(i) instanceof ArrayList) {

                array = (ArrayList<ElementDef>) fields.get(i);

                for (int j = 0; j < array.size(); j++) {

                    if (Utils.searchIntInArray(array.get(j).field.modifier, KEY_TYPES) < 0) {
                        perform_and_validation(entityName, array.get(j).field, "VAL-FLD", false, array.get(j).index.size());
                    }
                }
            }
        }

        finSection("VAL-FLD-" + entityName);

        //

        for (int i = 0; i < fields.size(); i++) {

            if (fields.get(i) instanceof FieldDef) {

                FieldDef fd = (FieldDef) fields.get(i);

                if (Utils.searchIntInArray(fd.modifier, KEY_TYPES) < 0) {
                    genVAL_field(entityName, fd, -1, gls);
                }
            }
            else if (fields.get(i) instanceof ArrayList) {

                array = (ArrayList<ElementDef>) fields.get(i);

                for (int j = 0; j < array.size(); j++) {

                    if (Utils.searchIntInArray(array.get(j).field.modifier, KEY_TYPES) < 0) {
                        genVAL_field(entityName, array.get(j).field, array.get(j).index.size(), gls);
                    }
                }
            }
        }
    }

    /******************************************************************************
     * iniSection
     ******************************************************************************/
    /**
     *
     * TODO_javadoc.
     *
     *
     * @param sectionName TODO_javadoc.
     *
     * @since 1.0
     *
     */
    private static void iniSection(String sectionName) {
        iniSection(sectionName, null);
    }

    /******************************************************************************
     * iniSection
     ******************************************************************************/
    /**
     *
     * TODO_javadoc.
     *
     *
     * @param sectionName TODO_javadoc.
     * @param additName TODO_javadoc.
     *
     * @since 1.0
     *
     */
    private static void iniSection(String sectionName, String additName) {

        gen.println("       " + sectionName + " SECTION.");
        gen.println("       INI-" + sectionName + ".");

        String ident = additName != null ? additName : "INI_" + sectionName.replace('-', '_');

      //logger.debug("seccion '" + sectionName + "', ident '" + ident + "' (" + (addit_hash.containsKey(ident) ? "OK" : "NO") + ")");

        if (addit_hash.containsKey    (ident)) {
            gen.println(addit_hash.get(ident));
        }
    }

    /******************************************************************************
     * finSection
     ******************************************************************************/
    /**
     *
     * TODO_javadoc.
     *
     *
     * @param sectionName TODO_javadoc.
     *
     * @since 1.0
     *
     */
    private static void finSection(String sectionName) {
        finSection(sectionName, null);
    }

    /******************************************************************************
     * finSection
     ******************************************************************************/
    /**
     *
     * TODO_javadoc.
     *
     *
     * @param sectionName TODO_javadoc.
     * @param additName TODO_javadoc.
     *
     * @since 1.0
     *
     */
    private static void finSection(String sectionName, String additName) {

        String ident = additName != null ? additName : "FIN_" + sectionName.replace('-', '_');

        if (addit_hash.containsKey    (ident)) {
            gen.println(addit_hash.get(ident));
        }
        else {

        }

        gen.println("       FIN-" + sectionName + ".");
        gen.println("           EXIT.");
        gen.println();
    }

    /******************************************************************************
     * getAdditFromXML
     ******************************************************************************/
    /**
     *
     * TODO_javadoc.
     *
     *
     * @param filename TODO_javadoc.
     *
     * @throws Exception TODO_javadoc.
     *
     * @since 1.0
     *
     */
    private static void getAdditFromXML(String filename) throws Exception {

        ArrayList  errors = new ArrayList();
        XmlOptions opts   = new XmlOptions();

        opts.setErrorListener(errors);

        AdditionalDocument root = AdditionalDocument.Factory.parse(new File(filename), opts);

        if (root.validate(opts)) {

            AdditionalDocument.Additional addit = root.getAdditional();

            for (SectionDocument.Section section : addit.getSectionArray()) {
                addit_hash.put(section.getName(), section.getCode());
            }

        } else {

            for (Object error : errors) {
                logger.fatal(error);
            }

            throw new XmlException(filename + " es invalido.");
        }
    }

    /******************************************************************************
     * getRangesFromXML
     ******************************************************************************/
    /**
     *
     * TODO_javadoc.
     *
     *
     * @param filename TODO_javadoc.
     *
     * @throws Exception TODO_javadoc.
     *
     * @since 1.0
     *
     */
    private static void getRangesFromXML(String filename) throws Exception {

        ArrayList  errors = new ArrayList();
        XmlOptions opts   = new XmlOptions();

        opts.setErrorListener(errors);

        RangesDocument root = RangesDocument.Factory.parse(new File(filename), opts);

        if (root.validate(opts)) {

            RangesDocument.Ranges ranges = root.getRanges();

            for (FieldDocument.Field field : ranges.getFieldArray()) {
                                                     // name,            domain,            system,            registry,            table, validation,            search
                DomainRangeDef drd = new DomainRangeDef(field.getName(), field.getDomain(), field.getSystem(), field.getRegistry(), "",    field.getValidation(), field.getSearch());

              //logger.debug(drd);

                ranges_hash.put(field.getName(), drd);
            }

        } else {

            for (Object error : errors) {
                logger.fatal(error);
            }

            throw new XmlException(filename + " es invalido.");
        }
    }

    /******************************************************************************
     * getDomainsFromXML
     ******************************************************************************/
    /**
     *
     * TODO_javadoc.
     *
     *
     * @param filename TODO_javadoc.
     *
     * @throws Exception TODO_javadoc.
     *
     * @since 1.0
     *
     */
    private static void getDomainsFromXML(String filename) throws Exception {

        ArrayList  errors = new ArrayList();
        XmlOptions opts   = new XmlOptions();

        opts.setErrorListener(errors);

        DomainsDocument root = DomainsDocument.Factory.parse(new File(filename), opts);

        if (root.validate(opts)) {

            DomainsDocument.Domains domains = root.getDomains();

            for (DomainDocument.Domain domain : domains.getDomainArray()) {
                                                     // name,             domain, system,             registry,             table,             validation,             search
                DomainRangeDef drd = new DomainRangeDef(domain.getName(), "",     domain.getSystem(), domain.getRegistry(), domain.getTable(), domain.getValidation(), domain.getSearch());

              //logger.debug(drd);

                domains_hash.put(domain.getName(), drd);
            }

        } else {

            for (Object error : errors) {
                logger.fatal(error);
            }

            throw new XmlException(filename + " es invalido.");
        }
    }

    /******************************************************************************
     * getSubsystemsFromFields
     ******************************************************************************/
    /**
     *
     * TODO_javadoc.
     *
     * @param fields TODO_javadoc.
     *
     * @return TODO_javadoc.
     *
     * @since 1.0
     *
     */
    private static ArrayList<String> getSubsystemsFromFields(ArrayList<Object> fields) {

        ArrayList<String> subsystems = new ArrayList<String>();

        String subsys = null;

        for (int i = 0; i < fields.size(); i++) {

            if (fields.get(i) instanceof FieldDef) {

                FieldDef fd = (FieldDef) fields.get(i);

                subsys = fd.fmsname.substring(0, 3);

                if (!subsystems.contains(subsys)) { // !subsys.equals(FieldDef.FRM) &&
                    subsystems.add(subsys);
                }
            }
            else {
                //////////////
            }
        }

        return subsystems;
    }

    /******************************************************************************
     * getSubsysVarsFromFields
     ******************************************************************************/
    /**
     *
     * TODO_javadoc.
     *
     * @param subsys TODO_javadoc.
     * @param fields TODO_javadoc.
     *
     * @return TODO_javadoc.
     *
     * @since 1.0
     *
     */
    private static ArrayList<Object> getSubsysVarsFromFields(String subsys, ArrayList<Object> fields) {

        ArrayList<Object>     vars  = new ArrayList<Object>();
        ArrayList<ElementDef> array = null;

        for (int i = 0; i < fields.size(); i++) {

            if (fields.get(i) instanceof FieldDef) {

                FieldDef fd = (FieldDef) fields.get(i);

                if (fd.fmsname.substring(0, 3).equals(subsys)) {
                    vars.add(fd);
                }
            }
            else if (fields.get(i) instanceof ArrayList) {

                array = (ArrayList<ElementDef>) fields.get(i);

                ArrayList<ElementDef> valid = new ArrayList<ElementDef>();

                for (int j = 0; j < array.size(); j++) {

                    if (array.get(j).field.name.substring(0, 3).equals(subsys)) {
                        valid.add(array.get(j));
                    }
                }

                vars.add(valid);
            }
        }

        return vars;
    }
    
    /******************************************************************************
     * getGlsFromFields
     ******************************************************************************/
    /**
     *
     * TODO_javadoc.
     *
     * @param fields TODO_javadoc.
     *
     * @return TODO_javadoc.
     *
     * @since 1.0
     *
     */
    private static HashMap<String, Integer> getGlsFromFields(ArrayList<Object> fields) {

    	HashMap<String, Integer> gls = new HashMap<String, Integer>();

        String glosa = null;

        for (int i = 0; i < fields.size(); i++) {

            if (fields.get(i) instanceof FieldDef) {

                FieldDef fd = (FieldDef) fields.get(i);

                glosa = fd.name.substring(0, 7);

                if (!gls.containsKey(fd.name) && glosa.equals("FRM-GLS")) { // !subsys.equals(FieldDef.FRM) &&
                	gls.put((fd.name.substring(8,12)),fd.size);
                }
            }
        }

        return gls;
    }

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2011)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3750)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1372)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2944)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2203)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1372)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2944)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2193)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2965)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3302)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:271)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:263)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:196)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoveredASTNode(JavadocHover.java:1015)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getInfoText(JavadocHover.java:811)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo(JavadocHover.java:755)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.internalGetHoverInfo(JavadocHover.java:678)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo2(JavadocHover.java:670)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2020-11-11 16:53:05.963
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2011)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3750)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1372)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2944)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2203)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1372)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2944)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2193)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2965)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3302)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:271)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:263)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:196)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoveredASTNode(JavadocHover.java:1015)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getInfoText(JavadocHover.java:811)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo(JavadocHover.java:755)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.internalGetHoverInfo(JavadocHover.java:678)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo2(JavadocHover.java:670)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2020-11-11 16:53:05.966
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2011)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3750)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1372)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2944)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2203)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1372)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2944)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2193)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2965)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3302)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:271)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:263)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:196)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoveredASTNode(JavadocHover.java:1015)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getInfoText(JavadocHover.java:811)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo(JavadocHover.java:755)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.internalGetHoverInfo(JavadocHover.java:678)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo2(JavadocHover.java:670)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)
!SESSION 2020-11-12 10:10:01.734 -----------------------------------------------
eclipse.buildId=4.16.0.I20200604-0540
java.version=1.8.0_181
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_GB
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.jface 2 0 2020-11-12 10:10:11.081
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2020-11-12 10:10:11.081
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@631bc9f4,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@642c72cf,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2020-11-12 10:10:18.034
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\osval'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.

!ENTRY org.eclipse.ui.workbench.texteditor 4 0 2020-11-12 14:35:30.233
!MESSAGE 
!STACK 0
java.lang.NullPointerException
	at org.eclipse.ui.texteditor.AbstractTextEditor$TextEditorSavable.isDirty(AbstractTextEditor.java:7212)
	at org.eclipse.ui.internal.Workbench.getFilteredSaveables(Workbench.java:3481)
	at org.eclipse.ui.internal.Workbench.saveAll(Workbench.java:3454)
	at org.eclipse.ui.ide.IDE$1.run(IDE.java:1494)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.ui.ide.IDE.saveAllEditors(IDE.java:1482)
	at org.eclipse.debug.internal.ui.launchConfigurations.SaveScopeResourcesHandler.doSave(SaveScopeResourcesHandler.java:228)
	at org.eclipse.debug.internal.ui.launchConfigurations.SaveScopeResourcesHandler.handleStatus(SaveScopeResourcesHandler.java:182)
	at org.eclipse.debug.internal.ui.sourcelookup.Prompter.lambda$0(Prompter.java:73)
	at org.eclipse.ui.internal.PendingSyncExec.run(PendingSyncExec.java:68)
	at org.eclipse.ui.internal.UILockListener.doPendingWork(UILockListener.java:171)
	at org.eclipse.ui.internal.UISynchronizer.lambda$0(UISynchronizer.java:139)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:185)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4005)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3633)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1158)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1047)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:658)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:557)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:154)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:150)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:137)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:107)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:657)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:594)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1447)

!ENTRY org.eclipse.ui.workbench.texteditor 4 0 2020-11-12 15:01:27.979
!MESSAGE 
!STACK 0
java.lang.NullPointerException
	at org.eclipse.ui.texteditor.AbstractTextEditor$TextEditorSavable.isDirty(AbstractTextEditor.java:7212)
	at org.eclipse.ui.internal.Workbench.getFilteredSaveables(Workbench.java:3481)
	at org.eclipse.ui.internal.Workbench.saveAll(Workbench.java:3454)
	at org.eclipse.ui.ide.IDE$1.run(IDE.java:1494)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.ui.ide.IDE.saveAllEditors(IDE.java:1482)
	at org.eclipse.debug.internal.ui.launchConfigurations.SaveScopeResourcesHandler.doSave(SaveScopeResourcesHandler.java:228)
	at org.eclipse.debug.internal.ui.launchConfigurations.SaveScopeResourcesHandler.handleStatus(SaveScopeResourcesHandler.java:182)
	at org.eclipse.debug.internal.ui.sourcelookup.Prompter.lambda$0(Prompter.java:73)
	at org.eclipse.ui.internal.PendingSyncExec.run(PendingSyncExec.java:68)
	at org.eclipse.ui.internal.UILockListener.doPendingWork(UILockListener.java:171)
	at org.eclipse.ui.internal.UISynchronizer.lambda$0(UISynchronizer.java:139)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:185)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4005)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3633)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1158)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1047)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:658)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:557)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:154)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:150)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:137)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:107)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:657)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:594)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1447)

!ENTRY org.eclipse.ui.workbench.texteditor 4 0 2020-11-12 15:01:44.053
!MESSAGE 
!STACK 0
java.lang.NullPointerException
	at org.eclipse.ui.texteditor.AbstractTextEditor$TextEditorSavable.isDirty(AbstractTextEditor.java:7212)
	at org.eclipse.ui.internal.Workbench.getFilteredSaveables(Workbench.java:3481)
	at org.eclipse.ui.internal.Workbench.saveAll(Workbench.java:3454)
	at org.eclipse.ui.ide.IDE$1.run(IDE.java:1494)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.ui.ide.IDE.saveAllEditors(IDE.java:1482)
	at org.eclipse.debug.internal.ui.launchConfigurations.SaveScopeResourcesHandler.doSave(SaveScopeResourcesHandler.java:228)
	at org.eclipse.debug.internal.ui.launchConfigurations.SaveScopeResourcesHandler.handleStatus(SaveScopeResourcesHandler.java:182)
	at org.eclipse.debug.internal.ui.sourcelookup.Prompter.lambda$0(Prompter.java:73)
	at org.eclipse.ui.internal.PendingSyncExec.run(PendingSyncExec.java:68)
	at org.eclipse.ui.internal.UILockListener.doPendingWork(UILockListener.java:171)
	at org.eclipse.ui.internal.UISynchronizer.lambda$0(UISynchronizer.java:139)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:185)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4005)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3633)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1158)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1047)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:658)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:557)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:154)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:150)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:137)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:107)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:657)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:594)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1447)

!ENTRY org.eclipse.ui.workbench.texteditor 4 0 2020-11-12 15:03:15.551
!MESSAGE 
!STACK 0
java.lang.NullPointerException
	at org.eclipse.ui.texteditor.AbstractTextEditor$TextEditorSavable.isDirty(AbstractTextEditor.java:7212)
	at org.eclipse.ui.internal.Workbench.getFilteredSaveables(Workbench.java:3481)
	at org.eclipse.ui.internal.Workbench.saveAll(Workbench.java:3454)
	at org.eclipse.ui.ide.IDE$1.run(IDE.java:1494)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.ui.ide.IDE.saveAllEditors(IDE.java:1482)
	at org.eclipse.debug.internal.ui.launchConfigurations.SaveScopeResourcesHandler.doSave(SaveScopeResourcesHandler.java:228)
	at org.eclipse.debug.internal.ui.launchConfigurations.SaveScopeResourcesHandler.handleStatus(SaveScopeResourcesHandler.java:182)
	at org.eclipse.debug.internal.ui.sourcelookup.Prompter.lambda$0(Prompter.java:73)
	at org.eclipse.ui.internal.PendingSyncExec.run(PendingSyncExec.java:68)
	at org.eclipse.ui.internal.UILockListener.doPendingWork(UILockListener.java:171)
	at org.eclipse.ui.internal.UISynchronizer.lambda$0(UISynchronizer.java:139)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:185)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4005)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3633)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1158)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1047)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:658)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:557)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:154)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:150)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:137)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:107)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:657)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:594)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1447)

!ENTRY org.eclipse.ui.workbench.texteditor 4 0 2020-11-12 15:04:26.794
!MESSAGE 
!STACK 0
java.lang.NullPointerException
	at org.eclipse.ui.texteditor.AbstractTextEditor$TextEditorSavable.isDirty(AbstractTextEditor.java:7212)
	at org.eclipse.ui.internal.Workbench.getFilteredSaveables(Workbench.java:3481)
	at org.eclipse.ui.internal.Workbench.saveAll(Workbench.java:3454)
	at org.eclipse.ui.ide.IDE$1.run(IDE.java:1494)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.ui.ide.IDE.saveAllEditors(IDE.java:1482)
	at org.eclipse.debug.internal.ui.launchConfigurations.SaveScopeResourcesHandler.doSave(SaveScopeResourcesHandler.java:228)
	at org.eclipse.debug.internal.ui.launchConfigurations.SaveScopeResourcesHandler.handleStatus(SaveScopeResourcesHandler.java:182)
	at org.eclipse.debug.internal.ui.sourcelookup.Prompter.lambda$0(Prompter.java:73)
	at org.eclipse.ui.internal.PendingSyncExec.run(PendingSyncExec.java:68)
	at org.eclipse.ui.internal.UILockListener.doPendingWork(UILockListener.java:171)
	at org.eclipse.ui.internal.UISynchronizer.lambda$0(UISynchronizer.java:139)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:185)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4005)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3633)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1158)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1047)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:658)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:557)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:154)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:150)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:137)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:107)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:657)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:594)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1447)

!ENTRY org.eclipse.ui.workbench.texteditor 4 0 2020-11-12 16:01:07.758
!MESSAGE 
!STACK 0
java.lang.NullPointerException
	at org.eclipse.ui.texteditor.AbstractTextEditor$TextEditorSavable.isDirty(AbstractTextEditor.java:7212)
	at org.eclipse.ui.internal.Workbench.getFilteredSaveables(Workbench.java:3481)
	at org.eclipse.ui.internal.Workbench.saveAll(Workbench.java:3454)
	at org.eclipse.ui.ide.IDE$1.run(IDE.java:1494)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.ui.ide.IDE.saveAllEditors(IDE.java:1482)
	at org.eclipse.debug.internal.ui.launchConfigurations.SaveScopeResourcesHandler.doSave(SaveScopeResourcesHandler.java:228)
	at org.eclipse.debug.internal.ui.launchConfigurations.SaveScopeResourcesHandler.handleStatus(SaveScopeResourcesHandler.java:182)
	at org.eclipse.debug.internal.ui.sourcelookup.Prompter.lambda$0(Prompter.java:73)
	at org.eclipse.ui.internal.PendingSyncExec.run(PendingSyncExec.java:68)
	at org.eclipse.ui.internal.UILockListener.doPendingWork(UILockListener.java:171)
	at org.eclipse.ui.internal.UISynchronizer.lambda$0(UISynchronizer.java:139)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:185)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4005)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3633)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1158)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1047)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:658)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:557)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:154)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:150)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:137)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:107)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:657)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:594)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1447)

!ENTRY org.eclipse.ui.workbench.texteditor 4 0 2020-11-12 16:03:48.025
!MESSAGE 
!STACK 0
java.lang.NullPointerException
	at org.eclipse.ui.texteditor.AbstractTextEditor$TextEditorSavable.isDirty(AbstractTextEditor.java:7212)
	at org.eclipse.ui.internal.Workbench.getFilteredSaveables(Workbench.java:3481)
	at org.eclipse.ui.internal.Workbench.saveAll(Workbench.java:3454)
	at org.eclipse.ui.ide.IDE$1.run(IDE.java:1494)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.ui.ide.IDE.saveAllEditors(IDE.java:1482)
	at org.eclipse.debug.internal.ui.launchConfigurations.SaveScopeResourcesHandler.doSave(SaveScopeResourcesHandler.java:228)
	at org.eclipse.debug.internal.ui.launchConfigurations.SaveScopeResourcesHandler.handleStatus(SaveScopeResourcesHandler.java:182)
	at org.eclipse.debug.internal.ui.sourcelookup.Prompter.lambda$0(Prompter.java:73)
	at org.eclipse.ui.internal.PendingSyncExec.run(PendingSyncExec.java:68)
	at org.eclipse.ui.internal.UILockListener.doPendingWork(UILockListener.java:171)
	at org.eclipse.ui.internal.UISynchronizer.lambda$0(UISynchronizer.java:139)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:185)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4005)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3633)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1158)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1047)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:658)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:557)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:154)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:150)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:137)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:107)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:657)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:594)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1447)

!ENTRY org.eclipse.ui.workbench.texteditor 4 0 2020-11-12 16:05:21.756
!MESSAGE 
!STACK 0
java.lang.NullPointerException
	at org.eclipse.ui.texteditor.AbstractTextEditor$TextEditorSavable.isDirty(AbstractTextEditor.java:7212)
	at org.eclipse.ui.internal.Workbench.getFilteredSaveables(Workbench.java:3481)
	at org.eclipse.ui.internal.Workbench.saveAll(Workbench.java:3454)
	at org.eclipse.ui.ide.IDE$1.run(IDE.java:1494)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.ui.ide.IDE.saveAllEditors(IDE.java:1482)
	at org.eclipse.debug.internal.ui.launchConfigurations.SaveScopeResourcesHandler.doSave(SaveScopeResourcesHandler.java:228)
	at org.eclipse.debug.internal.ui.launchConfigurations.SaveScopeResourcesHandler.handleStatus(SaveScopeResourcesHandler.java:182)
	at org.eclipse.debug.internal.ui.sourcelookup.Prompter.lambda$0(Prompter.java:73)
	at org.eclipse.ui.internal.PendingSyncExec.run(PendingSyncExec.java:68)
	at org.eclipse.ui.internal.UILockListener.doPendingWork(UILockListener.java:171)
	at org.eclipse.ui.internal.UISynchronizer.lambda$0(UISynchronizer.java:139)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:185)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4005)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3633)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1158)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1047)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:658)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:557)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:154)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:150)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:137)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:107)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:657)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:594)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1447)

!ENTRY org.eclipse.ui.workbench.texteditor 4 0 2020-11-12 16:58:23.824
!MESSAGE 
!STACK 0
java.lang.NullPointerException
	at org.eclipse.ui.texteditor.AbstractTextEditor$TextEditorSavable.isDirty(AbstractTextEditor.java:7212)
	at org.eclipse.ui.internal.Workbench.getFilteredSaveables(Workbench.java:3481)
	at org.eclipse.ui.internal.Workbench.saveAll(Workbench.java:3454)
	at org.eclipse.ui.ide.IDE$1.run(IDE.java:1494)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.ui.ide.IDE.saveAllEditors(IDE.java:1482)
	at org.eclipse.debug.internal.ui.launchConfigurations.SaveScopeResourcesHandler.doSave(SaveScopeResourcesHandler.java:228)
	at org.eclipse.debug.internal.ui.launchConfigurations.SaveScopeResourcesHandler.handleStatus(SaveScopeResourcesHandler.java:182)
	at org.eclipse.debug.internal.ui.sourcelookup.Prompter.lambda$0(Prompter.java:73)
	at org.eclipse.ui.internal.PendingSyncExec.run(PendingSyncExec.java:68)
	at org.eclipse.ui.internal.UILockListener.doPendingWork(UILockListener.java:171)
	at org.eclipse.ui.internal.UISynchronizer.lambda$0(UISynchronizer.java:139)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:185)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4005)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3633)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1158)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1047)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:658)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:557)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:154)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:150)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:137)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:107)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:657)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:594)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1447)

!ENTRY org.eclipse.core.jobs 2 2 2020-11-12 17:32:22.094
!MESSAGE Job found still running after platform shutdown.  Jobs should be canceled by the plugin that scheduled them during shutdown: org.eclipse.debug.internal.ui.DebugUIPlugin$2

!ENTRY org.eclipse.core.jobs 2 2 2020-11-12 17:32:22.102
!MESSAGE Job found still running after platform shutdown.  Jobs should be canceled by the plugin that scheduled them during shutdown: org.eclipse.debug.internal.ui.model.elements.ElementContentProvider$1

!ENTRY org.eclipse.core.jobs 2 2 2020-11-12 17:32:22.108
!MESSAGE Job found still running after platform shutdown.  Jobs should be canceled by the plugin that scheduled them during shutdown: org.eclipse.debug.core.DebugPlugin$EventDispatchJob

!ENTRY org.eclipse.core.jobs 2 2 2020-11-12 17:32:22.113
!MESSAGE Job found still running after platform shutdown.  Jobs should be canceled by the plugin that scheduled them during shutdown: org.eclipse.debug.internal.ui.model.elements.ElementContentProvider$2

!ENTRY org.eclipse.core.jobs 2 2 2020-11-12 17:32:22.119
!MESSAGE Job found still running after platform shutdown.  Jobs should be canceled by the plugin that scheduled them during shutdown: org.eclipse.debug.internal.ui.DebugUIPlugin$2
!SESSION 2020-11-12 17:32:28.453 -----------------------------------------------
eclipse.buildId=4.16.0.I20200604-0540
java.version=1.8.0_181
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_GB
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.jface 2 0 2020-11-12 17:32:38.632
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2020-11-12 17:32:38.632
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@210a26b,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@2dc21583,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2020-11-12 17:32:45.712
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\osval'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2020-11-12 20:57:40.504 -----------------------------------------------
eclipse.buildId=4.16.0.I20200604-0540
java.version=1.8.0_181
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_GB
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.jface 2 0 2020-11-12 20:57:45.759
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2020-11-12 20:57:45.759
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@210a26b,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@2dc21583,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2020-11-12 20:57:51.594
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\osval'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2020-11-13 16:52:07.446 -----------------------------------------------
eclipse.buildId=4.16.0.I20200604-0540
java.version=1.8.0_181
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_GB
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.jface 2 0 2020-11-13 16:52:16.228
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2020-11-13 16:52:16.228
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@586728e8,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@3316527e,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2020-11-13 16:52:23.359
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\osval'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2020-11-16 09:33:12.510 -----------------------------------------------
eclipse.buildId=4.16.0.I20200604-0540
java.version=1.8.0_181
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_GB
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.jface 2 0 2020-11-16 09:33:23.671
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2020-11-16 09:33:23.671
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@6cbdd1c5,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@60816371,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2020-11-16 09:33:31.955
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\osval'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2020-11-16 09:44:42.879 -----------------------------------------------
eclipse.buildId=4.16.0.I20200604-0540
java.version=1.8.0_181
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_GB
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.jface 2 0 2020-11-16 09:44:50.595
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2020-11-16 09:44:50.595
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@6dd20ec9,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@20dd5870,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2020-11-16 09:44:56.797
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\osval'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.

!ENTRY org.eclipse.jdt.debug.ui 4 150 2020-11-16 11:12:56.880
!MESSAGE Editor annotation with non existing marker found: text: null, type: org.eclipse.debug.core.breakpoint, Marker [on: /BeeFRM/src/cl/bee/preptex/util/PrepTexStream.java, not found]
!STACK 1
org.eclipse.core.internal.resources.ResourceException: Marker id 10437 not found.
	at org.eclipse.core.internal.resources.Marker.checkInfo(Marker.java:63)
	at org.eclipse.core.internal.resources.Marker.getType(Marker.java:214)
	at org.eclipse.core.internal.resources.Marker.isSubtypeOf(Marker.java:237)
	at org.eclipse.jdt.internal.debug.ui.actions.ToggleBreakpointAdapter.findExistingBreakpoint(ToggleBreakpointAdapter.java:1380)
	at org.eclipse.jdt.internal.debug.ui.actions.ToggleBreakpointAdapter.toggleFieldOrMethodBreakpoints(ToggleBreakpointAdapter.java:1409)
	at org.eclipse.jdt.internal.debug.ui.actions.ToggleBreakpointAdapter.toggleBreakpoints(ToggleBreakpointAdapter.java:1343)
	at org.eclipse.jdt.internal.debug.ui.actions.ToggleBreakpointAdapter.toggleBreakpointsWithEvent(ToggleBreakpointAdapter.java:1573)
	at org.eclipse.debug.ui.actions.ToggleBreakpointAction.doIt(ToggleBreakpointAction.java:105)
	at org.eclipse.debug.ui.actions.ToggleBreakpointAction.runWithEvent(ToggleBreakpointAction.java:83)
	at org.eclipse.debug.ui.actions.RulerToggleBreakpointActionDelegate.runWithEvent(RulerToggleBreakpointActionDelegate.java:116)
	at org.eclipse.ui.internal.handlers.ActionDelegateHandlerProxy.execute(ActionDelegateHandlerProxy.java:281)
	at org.eclipse.core.commands.Command.executeWithChecks(Command.java:488)
	at org.eclipse.core.commands.ParameterizedCommand.executeWithChecks(ParameterizedCommand.java:487)
	at org.eclipse.ui.actions.ContributedAction.runWithEvent(ContributedAction.java:176)
	at org.eclipse.ui.texteditor.AbstractTextEditor$1.triggerAction(AbstractTextEditor.java:3037)
	at org.eclipse.ui.texteditor.AbstractTextEditor$1.mouseDoubleClick(AbstractTextEditor.java:3063)
	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:200)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4213)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1037)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:4030)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3630)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1158)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1047)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:658)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:557)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:154)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:150)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:137)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:107)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:657)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:594)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1447)
!SUBENTRY 1 org.eclipse.core.resources 4 376 2020-11-16 11:12:56.882
!MESSAGE Marker id 10437 not found.

!ENTRY org.eclipse.ui.workbench 4 2 2020-11-17 00:34:24.974
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.ui.workbench".
!STACK 0
java.lang.NullPointerException
	at org.eclipse.jface.text.source.AnnotationPainter.setAnnotationTypeColor(AnnotationPainter.java:1088)
	at org.eclipse.ui.texteditor.SourceViewerDecorationSupport.handlePreferenceStoreChanged(SourceViewerDecorationSupport.java:588)
	at org.eclipse.ui.preferences.ScopedPreferenceStore$2.run(ScopedPreferenceStore.java:325)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.ui.preferences.ScopedPreferenceStore.firePropertyChangeEvent(ScopedPreferenceStore.java:322)
	at org.eclipse.ui.preferences.ScopedPreferenceStore.lambda$0(ScopedPreferenceStore.java:171)
	at org.eclipse.core.internal.preferences.EclipsePreferences$2.run(EclipsePreferences.java:849)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.core.internal.preferences.EclipsePreferences.firePreferenceEvent(EclipsePreferences.java:852)
	at org.eclipse.core.internal.preferences.EclipsePreferences.remove(EclipsePreferences.java:959)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$StylingPreferencesHandler.resetOverriddenPreferences(PartRenderingEngine.java:1451)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$StylingPreferencesHandler.resetOverriddenPreferences(PartRenderingEngine.java:1445)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$StylingPreferencesHandler.lambda$0(PartRenderingEngine.java:1434)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4213)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4205)
	at org.eclipse.swt.widgets.Display.release(Display.java:3677)
	at org.eclipse.swt.graphics.Device.dispose(Device.java:276)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:166)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:137)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:107)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:657)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:594)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1447)

!ENTRY org.eclipse.jface 4 0 2020-11-17 00:34:24.984
!MESSAGE Error notifying a preference change listener. Check the log for details.
!STACK 0
java.lang.NullPointerException
	at org.eclipse.jface.text.source.AnnotationPainter.setAnnotationTypeColor(AnnotationPainter.java:1088)
	at org.eclipse.ui.texteditor.SourceViewerDecorationSupport.handlePreferenceStoreChanged(SourceViewerDecorationSupport.java:588)
	at org.eclipse.ui.preferences.ScopedPreferenceStore$2.run(ScopedPreferenceStore.java:325)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.ui.preferences.ScopedPreferenceStore.firePropertyChangeEvent(ScopedPreferenceStore.java:322)
	at org.eclipse.ui.preferences.ScopedPreferenceStore.lambda$0(ScopedPreferenceStore.java:171)
	at org.eclipse.core.internal.preferences.EclipsePreferences$2.run(EclipsePreferences.java:849)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.core.internal.preferences.EclipsePreferences.firePreferenceEvent(EclipsePreferences.java:852)
	at org.eclipse.core.internal.preferences.EclipsePreferences.remove(EclipsePreferences.java:959)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$StylingPreferencesHandler.resetOverriddenPreferences(PartRenderingEngine.java:1451)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$StylingPreferencesHandler.resetOverriddenPreferences(PartRenderingEngine.java:1445)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$StylingPreferencesHandler.lambda$0(PartRenderingEngine.java:1434)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4213)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4205)
	at org.eclipse.swt.widgets.Display.release(Display.java:3677)
	at org.eclipse.swt.graphics.Device.dispose(Device.java:276)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:166)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:137)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:107)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:657)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:594)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1447)

!ENTRY org.eclipse.ui.workbench 4 2 2020-11-17 00:34:24.991
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.ui.workbench".
!STACK 0
java.lang.NullPointerException
	at org.eclipse.jface.text.source.AnnotationPainter.setAnnotationTypeColor(AnnotationPainter.java:1088)
	at org.eclipse.ui.texteditor.SourceViewerDecorationSupport.handlePreferenceStoreChanged(SourceViewerDecorationSupport.java:588)
	at org.eclipse.ui.preferences.ScopedPreferenceStore$2.run(ScopedPreferenceStore.java:325)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.ui.preferences.ScopedPreferenceStore.firePropertyChangeEvent(ScopedPreferenceStore.java:322)
	at org.eclipse.ui.preferences.ScopedPreferenceStore.lambda$0(ScopedPreferenceStore.java:171)
	at org.eclipse.core.internal.preferences.EclipsePreferences$2.run(EclipsePreferences.java:849)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.core.internal.preferences.EclipsePreferences.firePreferenceEvent(EclipsePreferences.java:852)
	at org.eclipse.core.internal.preferences.EclipsePreferences.remove(EclipsePreferences.java:959)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$StylingPreferencesHandler.resetOverriddenPreferences(PartRenderingEngine.java:1451)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$StylingPreferencesHandler.resetOverriddenPreferences(PartRenderingEngine.java:1445)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$StylingPreferencesHandler.lambda$0(PartRenderingEngine.java:1434)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4213)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4205)
	at org.eclipse.swt.widgets.Display.release(Display.java:3677)
	at org.eclipse.swt.graphics.Device.dispose(Device.java:276)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:166)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:137)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:107)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:657)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:594)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1447)

!ENTRY org.eclipse.jface 4 0 2020-11-17 00:34:24.997
!MESSAGE Error notifying a preference change listener. Check the log for details.
!STACK 0
java.lang.NullPointerException
	at org.eclipse.jface.text.source.AnnotationPainter.setAnnotationTypeColor(AnnotationPainter.java:1088)
	at org.eclipse.ui.texteditor.SourceViewerDecorationSupport.handlePreferenceStoreChanged(SourceViewerDecorationSupport.java:588)
	at org.eclipse.ui.preferences.ScopedPreferenceStore$2.run(ScopedPreferenceStore.java:325)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.ui.preferences.ScopedPreferenceStore.firePropertyChangeEvent(ScopedPreferenceStore.java:322)
	at org.eclipse.ui.preferences.ScopedPreferenceStore.lambda$0(ScopedPreferenceStore.java:171)
	at org.eclipse.core.internal.preferences.EclipsePreferences$2.run(EclipsePreferences.java:849)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.core.internal.preferences.EclipsePreferences.firePreferenceEvent(EclipsePreferences.java:852)
	at org.eclipse.core.internal.preferences.EclipsePreferences.remove(EclipsePreferences.java:959)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$StylingPreferencesHandler.resetOverriddenPreferences(PartRenderingEngine.java:1451)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$StylingPreferencesHandler.resetOverriddenPreferences(PartRenderingEngine.java:1445)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$StylingPreferencesHandler.lambda$0(PartRenderingEngine.java:1434)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4213)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4205)
	at org.eclipse.swt.widgets.Display.release(Display.java:3677)
	at org.eclipse.swt.graphics.Device.dispose(Device.java:276)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:166)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:137)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:107)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:657)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:594)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1447)

!ENTRY org.eclipse.ui.workbench 4 2 2020-11-17 00:34:25.004
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.ui.workbench".
!STACK 0
java.lang.NullPointerException
	at org.eclipse.jface.text.source.AnnotationPainter.setAnnotationTypeColor(AnnotationPainter.java:1088)
	at org.eclipse.ui.texteditor.SourceViewerDecorationSupport.handlePreferenceStoreChanged(SourceViewerDecorationSupport.java:588)
	at org.eclipse.ui.preferences.ScopedPreferenceStore$2.run(ScopedPreferenceStore.java:325)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.ui.preferences.ScopedPreferenceStore.firePropertyChangeEvent(ScopedPreferenceStore.java:322)
	at org.eclipse.ui.preferences.ScopedPreferenceStore.lambda$0(ScopedPreferenceStore.java:171)
	at org.eclipse.core.internal.preferences.EclipsePreferences$2.run(EclipsePreferences.java:849)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.core.internal.preferences.EclipsePreferences.firePreferenceEvent(EclipsePreferences.java:852)
	at org.eclipse.core.internal.preferences.EclipsePreferences.remove(EclipsePreferences.java:959)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$StylingPreferencesHandler.resetOverriddenPreferences(PartRenderingEngine.java:1451)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$StylingPreferencesHandler.resetOverriddenPreferences(PartRenderingEngine.java:1445)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$StylingPreferencesHandler.lambda$0(PartRenderingEngine.java:1434)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4213)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4205)
	at org.eclipse.swt.widgets.Display.release(Display.java:3677)
	at org.eclipse.swt.graphics.Device.dispose(Device.java:276)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:166)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:137)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:107)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:657)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:594)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1447)

!ENTRY org.eclipse.jface 4 0 2020-11-17 00:34:25.009
!MESSAGE Error notifying a preference change listener. Check the log for details.
!STACK 0
java.lang.NullPointerException
	at org.eclipse.jface.text.source.AnnotationPainter.setAnnotationTypeColor(AnnotationPainter.java:1088)
	at org.eclipse.ui.texteditor.SourceViewerDecorationSupport.handlePreferenceStoreChanged(SourceViewerDecorationSupport.java:588)
	at org.eclipse.ui.preferences.ScopedPreferenceStore$2.run(ScopedPreferenceStore.java:325)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.ui.preferences.ScopedPreferenceStore.firePropertyChangeEvent(ScopedPreferenceStore.java:322)
	at org.eclipse.ui.preferences.ScopedPreferenceStore.lambda$0(ScopedPreferenceStore.java:171)
	at org.eclipse.core.internal.preferences.EclipsePreferences$2.run(EclipsePreferences.java:849)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.core.internal.preferences.EclipsePreferences.firePreferenceEvent(EclipsePreferences.java:852)
	at org.eclipse.core.internal.preferences.EclipsePreferences.remove(EclipsePreferences.java:959)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$StylingPreferencesHandler.resetOverriddenPreferences(PartRenderingEngine.java:1451)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$StylingPreferencesHandler.resetOverriddenPreferences(PartRenderingEngine.java:1445)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$StylingPreferencesHandler.lambda$0(PartRenderingEngine.java:1434)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4213)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4205)
	at org.eclipse.swt.widgets.Display.release(Display.java:3677)
	at org.eclipse.swt.graphics.Device.dispose(Device.java:276)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:166)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:137)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:107)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:657)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:594)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1447)

!ENTRY org.eclipse.ui.workbench 4 2 2020-11-17 00:34:25.015
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.ui.workbench".
!STACK 0
java.lang.NullPointerException
	at org.eclipse.jface.text.source.AnnotationPainter.setAnnotationTypeColor(AnnotationPainter.java:1088)
	at org.eclipse.ui.texteditor.SourceViewerDecorationSupport.handlePreferenceStoreChanged(SourceViewerDecorationSupport.java:588)
	at org.eclipse.ui.preferences.ScopedPreferenceStore$2.run(ScopedPreferenceStore.java:325)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.ui.preferences.ScopedPreferenceStore.firePropertyChangeEvent(ScopedPreferenceStore.java:322)
	at org.eclipse.ui.preferences.ScopedPreferenceStore.lambda$0(ScopedPreferenceStore.java:171)
	at org.eclipse.core.internal.preferences.EclipsePreferences$2.run(EclipsePreferences.java:849)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.core.internal.preferences.EclipsePreferences.firePreferenceEvent(EclipsePreferences.java:852)
	at org.eclipse.core.internal.preferences.EclipsePreferences.remove(EclipsePreferences.java:959)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$StylingPreferencesHandler.resetOverriddenPreferences(PartRenderingEngine.java:1451)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$StylingPreferencesHandler.resetOverriddenPreferences(PartRenderingEngine.java:1445)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$StylingPreferencesHandler.lambda$0(PartRenderingEngine.java:1434)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4213)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4205)
	at org.eclipse.swt.widgets.Display.release(Display.java:3677)
	at org.eclipse.swt.graphics.Device.dispose(Device.java:276)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:166)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:137)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:107)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:657)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:594)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1447)

!ENTRY org.eclipse.jface 4 0 2020-11-17 00:34:25.020
!MESSAGE Error notifying a preference change listener. Check the log for details.
!STACK 0
java.lang.NullPointerException
	at org.eclipse.jface.text.source.AnnotationPainter.setAnnotationTypeColor(AnnotationPainter.java:1088)
	at org.eclipse.ui.texteditor.SourceViewerDecorationSupport.handlePreferenceStoreChanged(SourceViewerDecorationSupport.java:588)
	at org.eclipse.ui.preferences.ScopedPreferenceStore$2.run(ScopedPreferenceStore.java:325)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.ui.preferences.ScopedPreferenceStore.firePropertyChangeEvent(ScopedPreferenceStore.java:322)
	at org.eclipse.ui.preferences.ScopedPreferenceStore.lambda$0(ScopedPreferenceStore.java:171)
	at org.eclipse.core.internal.preferences.EclipsePreferences$2.run(EclipsePreferences.java:849)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.core.internal.preferences.EclipsePreferences.firePreferenceEvent(EclipsePreferences.java:852)
	at org.eclipse.core.internal.preferences.EclipsePreferences.remove(EclipsePreferences.java:959)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$StylingPreferencesHandler.resetOverriddenPreferences(PartRenderingEngine.java:1451)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$StylingPreferencesHandler.resetOverriddenPreferences(PartRenderingEngine.java:1445)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$StylingPreferencesHandler.lambda$0(PartRenderingEngine.java:1434)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4213)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4205)
	at org.eclipse.swt.widgets.Display.release(Display.java:3677)
	at org.eclipse.swt.graphics.Device.dispose(Device.java:276)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:166)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:137)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:107)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:657)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:594)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1447)

!ENTRY org.eclipse.ui.workbench 4 2 2020-11-17 00:34:25.026
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.ui.workbench".
!STACK 0
java.lang.NullPointerException
	at org.eclipse.jface.text.source.AnnotationPainter.setAnnotationTypeColor(AnnotationPainter.java:1088)
	at org.eclipse.ui.texteditor.SourceViewerDecorationSupport.handlePreferenceStoreChanged(SourceViewerDecorationSupport.java:588)
	at org.eclipse.ui.preferences.ScopedPreferenceStore$2.run(ScopedPreferenceStore.java:325)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.ui.preferences.ScopedPreferenceStore.firePropertyChangeEvent(ScopedPreferenceStore.java:322)
	at org.eclipse.ui.preferences.ScopedPreferenceStore.lambda$0(ScopedPreferenceStore.java:171)
	at org.eclipse.core.internal.preferences.EclipsePreferences$2.run(EclipsePreferences.java:849)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.core.internal.preferences.EclipsePreferences.firePreferenceEvent(EclipsePreferences.java:852)
	at org.eclipse.core.internal.preferences.EclipsePreferences.remove(EclipsePreferences.java:959)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$StylingPreferencesHandler.resetOverriddenPreferences(PartRenderingEngine.java:1451)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$StylingPreferencesHandler.resetOverriddenPreferences(PartRenderingEngine.java:1445)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$StylingPreferencesHandler.lambda$0(PartRenderingEngine.java:1434)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4213)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4205)
	at org.eclipse.swt.widgets.Display.release(Display.java:3677)
	at org.eclipse.swt.graphics.Device.dispose(Device.java:276)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:166)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:137)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:107)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:657)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:594)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1447)

!ENTRY org.eclipse.jface 4 0 2020-11-17 00:34:25.033
!MESSAGE Error notifying a preference change listener. Check the log for details.
!STACK 0
java.lang.NullPointerException
	at org.eclipse.jface.text.source.AnnotationPainter.setAnnotationTypeColor(AnnotationPainter.java:1088)
	at org.eclipse.ui.texteditor.SourceViewerDecorationSupport.handlePreferenceStoreChanged(SourceViewerDecorationSupport.java:588)
	at org.eclipse.ui.preferences.ScopedPreferenceStore$2.run(ScopedPreferenceStore.java:325)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.ui.preferences.ScopedPreferenceStore.firePropertyChangeEvent(ScopedPreferenceStore.java:322)
	at org.eclipse.ui.preferences.ScopedPreferenceStore.lambda$0(ScopedPreferenceStore.java:171)
	at org.eclipse.core.internal.preferences.EclipsePreferences$2.run(EclipsePreferences.java:849)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.core.internal.preferences.EclipsePreferences.firePreferenceEvent(EclipsePreferences.java:852)
	at org.eclipse.core.internal.preferences.EclipsePreferences.remove(EclipsePreferences.java:959)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$StylingPreferencesHandler.resetOverriddenPreferences(PartRenderingEngine.java:1451)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$StylingPreferencesHandler.resetOverriddenPreferences(PartRenderingEngine.java:1445)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$StylingPreferencesHandler.lambda$0(PartRenderingEngine.java:1434)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4213)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4205)
	at org.eclipse.swt.widgets.Display.release(Display.java:3677)
	at org.eclipse.swt.graphics.Device.dispose(Device.java:276)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:166)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:137)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:107)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:657)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:594)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1447)

!ENTRY org.eclipse.ui.workbench 4 2 2020-11-17 00:34:25.040
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.ui.workbench".
!STACK 0
java.lang.NullPointerException
	at org.eclipse.jface.text.source.AnnotationPainter.setAnnotationTypeColor(AnnotationPainter.java:1088)
	at org.eclipse.ui.texteditor.SourceViewerDecorationSupport.handlePreferenceStoreChanged(SourceViewerDecorationSupport.java:588)
	at org.eclipse.ui.preferences.ScopedPreferenceStore$2.run(ScopedPreferenceStore.java:325)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.ui.preferences.ScopedPreferenceStore.firePropertyChangeEvent(ScopedPreferenceStore.java:322)
	at org.eclipse.ui.preferences.ScopedPreferenceStore.lambda$0(ScopedPreferenceStore.java:171)
	at org.eclipse.core.internal.preferences.EclipsePreferences$2.run(EclipsePreferences.java:849)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.core.internal.preferences.EclipsePreferences.firePreferenceEvent(EclipsePreferences.java:852)
	at org.eclipse.core.internal.preferences.EclipsePreferences.remove(EclipsePreferences.java:959)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$StylingPreferencesHandler.resetOverriddenPreferences(PartRenderingEngine.java:1451)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$StylingPreferencesHandler.resetOverriddenPreferences(PartRenderingEngine.java:1445)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$StylingPreferencesHandler.lambda$0(PartRenderingEngine.java:1434)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4213)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4205)
	at org.eclipse.swt.widgets.Display.release(Display.java:3677)
	at org.eclipse.swt.graphics.Device.dispose(Device.java:276)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:166)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:137)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:107)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:657)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:594)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1447)

!ENTRY org.eclipse.jface 4 0 2020-11-17 00:34:25.045
!MESSAGE Error notifying a preference change listener. Check the log for details.
!STACK 0
java.lang.NullPointerException
	at org.eclipse.jface.text.source.AnnotationPainter.setAnnotationTypeColor(AnnotationPainter.java:1088)
	at org.eclipse.ui.texteditor.SourceViewerDecorationSupport.handlePreferenceStoreChanged(SourceViewerDecorationSupport.java:588)
	at org.eclipse.ui.preferences.ScopedPreferenceStore$2.run(ScopedPreferenceStore.java:325)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.ui.preferences.ScopedPreferenceStore.firePropertyChangeEvent(ScopedPreferenceStore.java:322)
	at org.eclipse.ui.preferences.ScopedPreferenceStore.lambda$0(ScopedPreferenceStore.java:171)
	at org.eclipse.core.internal.preferences.EclipsePreferences$2.run(EclipsePreferences.java:849)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.core.internal.preferences.EclipsePreferences.firePreferenceEvent(EclipsePreferences.java:852)
	at org.eclipse.core.internal.preferences.EclipsePreferences.remove(EclipsePreferences.java:959)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$StylingPreferencesHandler.resetOverriddenPreferences(PartRenderingEngine.java:1451)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$StylingPreferencesHandler.resetOverriddenPreferences(PartRenderingEngine.java:1445)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$StylingPreferencesHandler.lambda$0(PartRenderingEngine.java:1434)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4213)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4205)
	at org.eclipse.swt.widgets.Display.release(Display.java:3677)
	at org.eclipse.swt.graphics.Device.dispose(Device.java:276)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:166)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:137)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:107)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:657)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:594)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1447)

!ENTRY org.eclipse.ui.workbench 4 2 2020-11-17 00:34:25.051
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.ui.workbench".
!STACK 0
java.lang.NullPointerException
	at org.eclipse.jface.text.source.AnnotationPainter.setAnnotationTypeColor(AnnotationPainter.java:1088)
	at org.eclipse.ui.texteditor.SourceViewerDecorationSupport.handlePreferenceStoreChanged(SourceViewerDecorationSupport.java:588)
	at org.eclipse.ui.preferences.ScopedPreferenceStore$2.run(ScopedPreferenceStore.java:325)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.ui.preferences.ScopedPreferenceStore.firePropertyChangeEvent(ScopedPreferenceStore.java:322)
	at org.eclipse.ui.preferences.ScopedPreferenceStore.lambda$0(ScopedPreferenceStore.java:171)
	at org.eclipse.core.internal.preferences.EclipsePreferences$2.run(EclipsePreferences.java:849)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.core.internal.preferences.EclipsePreferences.firePreferenceEvent(EclipsePreferences.java:852)
	at org.eclipse.core.internal.preferences.EclipsePreferences.remove(EclipsePreferences.java:959)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$StylingPreferencesHandler.resetOverriddenPreferences(PartRenderingEngine.java:1451)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$StylingPreferencesHandler.resetOverriddenPreferences(PartRenderingEngine.java:1445)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$StylingPreferencesHandler.lambda$0(PartRenderingEngine.java:1434)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4213)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4205)
	at org.eclipse.swt.widgets.Display.release(Display.java:3677)
	at org.eclipse.swt.graphics.Device.dispose(Device.java:276)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:166)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:137)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:107)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:657)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:594)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1447)

!ENTRY org.eclipse.jface 4 0 2020-11-17 00:34:25.056
!MESSAGE Error notifying a preference change listener. Check the log for details.
!STACK 0
java.lang.NullPointerException
	at org.eclipse.jface.text.source.AnnotationPainter.setAnnotationTypeColor(AnnotationPainter.java:1088)
	at org.eclipse.ui.texteditor.SourceViewerDecorationSupport.handlePreferenceStoreChanged(SourceViewerDecorationSupport.java:588)
	at org.eclipse.ui.preferences.ScopedPreferenceStore$2.run(ScopedPreferenceStore.java:325)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.ui.preferences.ScopedPreferenceStore.firePropertyChangeEvent(ScopedPreferenceStore.java:322)
	at org.eclipse.ui.preferences.ScopedPreferenceStore.lambda$0(ScopedPreferenceStore.java:171)
	at org.eclipse.core.internal.preferences.EclipsePreferences$2.run(EclipsePreferences.java:849)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.core.internal.preferences.EclipsePreferences.firePreferenceEvent(EclipsePreferences.java:852)
	at org.eclipse.core.internal.preferences.EclipsePreferences.remove(EclipsePreferences.java:959)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$StylingPreferencesHandler.resetOverriddenPreferences(PartRenderingEngine.java:1451)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$StylingPreferencesHandler.resetOverriddenPreferences(PartRenderingEngine.java:1445)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$StylingPreferencesHandler.lambda$0(PartRenderingEngine.java:1434)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4213)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4205)
	at org.eclipse.swt.widgets.Display.release(Display.java:3677)
	at org.eclipse.swt.graphics.Device.dispose(Device.java:276)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:166)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:137)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:107)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:657)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:594)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1447)

!ENTRY org.eclipse.ui.workbench 4 2 2020-11-17 00:34:25.063
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.ui.workbench".
!STACK 0
java.lang.NullPointerException
	at org.eclipse.ui.texteditor.AbstractTextEditor.initializeViewerColors(AbstractTextEditor.java:3932)
	at org.eclipse.ui.texteditor.AbstractTextEditor.handlePreferenceStoreChanged(AbstractTextEditor.java:4597)
	at org.eclipse.ui.texteditor.AbstractDecoratedTextEditor.handlePreferenceStoreChanged(AbstractDecoratedTextEditor.java:893)
	at org.eclipse.ui.editors.text.TextEditor.handlePreferenceStoreChanged(TextEditor.java:194)
	at org.eclipse.ui.texteditor.AbstractTextEditor$PropertyChangeListener.propertyChange(AbstractTextEditor.java:701)
	at org.eclipse.ui.preferences.ScopedPreferenceStore$2.run(ScopedPreferenceStore.java:325)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.ui.preferences.ScopedPreferenceStore.firePropertyChangeEvent(ScopedPreferenceStore.java:322)
	at org.eclipse.ui.preferences.ScopedPreferenceStore.lambda$0(ScopedPreferenceStore.java:171)
	at org.eclipse.core.internal.preferences.EclipsePreferences$2.run(EclipsePreferences.java:849)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.core.internal.preferences.EclipsePreferences.firePreferenceEvent(EclipsePreferences.java:852)
	at org.eclipse.core.internal.preferences.EclipsePreferences.remove(EclipsePreferences.java:959)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$StylingPreferencesHandler.resetOverriddenPreferences(PartRenderingEngine.java:1451)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$StylingPreferencesHandler.resetOverriddenPreferences(PartRenderingEngine.java:1445)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$StylingPreferencesHandler.lambda$0(PartRenderingEngine.java:1434)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4213)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4205)
	at org.eclipse.swt.widgets.Display.release(Display.java:3677)
	at org.eclipse.swt.graphics.Device.dispose(Device.java:276)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:166)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:137)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:107)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:657)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:594)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1447)

!ENTRY org.eclipse.jface 4 0 2020-11-17 00:34:25.068
!MESSAGE Error notifying a preference change listener. Check the log for details.
!STACK 0
java.lang.NullPointerException
	at org.eclipse.ui.texteditor.AbstractTextEditor.initializeViewerColors(AbstractTextEditor.java:3932)
	at org.eclipse.ui.texteditor.AbstractTextEditor.handlePreferenceStoreChanged(AbstractTextEditor.java:4597)
	at org.eclipse.ui.texteditor.AbstractDecoratedTextEditor.handlePreferenceStoreChanged(AbstractDecoratedTextEditor.java:893)
	at org.eclipse.ui.editors.text.TextEditor.handlePreferenceStoreChanged(TextEditor.java:194)
	at org.eclipse.ui.texteditor.AbstractTextEditor$PropertyChangeListener.propertyChange(AbstractTextEditor.java:701)
	at org.eclipse.ui.preferences.ScopedPreferenceStore$2.run(ScopedPreferenceStore.java:325)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.ui.preferences.ScopedPreferenceStore.firePropertyChangeEvent(ScopedPreferenceStore.java:322)
	at org.eclipse.ui.preferences.ScopedPreferenceStore.lambda$0(ScopedPreferenceStore.java:171)
	at org.eclipse.core.internal.preferences.EclipsePreferences$2.run(EclipsePreferences.java:849)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.core.internal.preferences.EclipsePreferences.firePreferenceEvent(EclipsePreferences.java:852)
	at org.eclipse.core.internal.preferences.EclipsePreferences.remove(EclipsePreferences.java:959)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$StylingPreferencesHandler.resetOverriddenPreferences(PartRenderingEngine.java:1451)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$StylingPreferencesHandler.resetOverriddenPreferences(PartRenderingEngine.java:1445)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$StylingPreferencesHandler.lambda$0(PartRenderingEngine.java:1434)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4213)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4205)
	at org.eclipse.swt.widgets.Display.release(Display.java:3677)
	at org.eclipse.swt.graphics.Device.dispose(Device.java:276)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:166)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:137)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:107)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:657)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:594)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1447)

!ENTRY org.eclipse.ui.workbench 4 2 2020-11-17 00:34:25.073
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.ui.workbench".
!STACK 0
java.lang.NullPointerException
	at org.eclipse.ui.texteditor.AbstractTextEditor.initializeViewerColors(AbstractTextEditor.java:3932)
	at org.eclipse.ui.texteditor.AbstractTextEditor.handlePreferenceStoreChanged(AbstractTextEditor.java:4597)
	at org.eclipse.ui.texteditor.AbstractDecoratedTextEditor.handlePreferenceStoreChanged(AbstractDecoratedTextEditor.java:893)
	at org.eclipse.ui.editors.text.TextEditor.handlePreferenceStoreChanged(TextEditor.java:194)
	at org.eclipse.ui.texteditor.AbstractTextEditor$PropertyChangeListener.propertyChange(AbstractTextEditor.java:701)
	at org.eclipse.ui.preferences.ScopedPreferenceStore$2.run(ScopedPreferenceStore.java:325)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.ui.preferences.ScopedPreferenceStore.firePropertyChangeEvent(ScopedPreferenceStore.java:322)
	at org.eclipse.ui.preferences.ScopedPreferenceStore.lambda$0(ScopedPreferenceStore.java:171)
	at org.eclipse.core.internal.preferences.EclipsePreferences$2.run(EclipsePreferences.java:849)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.core.internal.preferences.EclipsePreferences.firePreferenceEvent(EclipsePreferences.java:852)
	at org.eclipse.core.internal.preferences.EclipsePreferences.remove(EclipsePreferences.java:959)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$StylingPreferencesHandler.resetOverriddenPreferences(PartRenderingEngine.java:1451)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$StylingPreferencesHandler.resetOverriddenPreferences(PartRenderingEngine.java:1445)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$StylingPreferencesHandler.lambda$0(PartRenderingEngine.java:1434)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4213)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4205)
	at org.eclipse.swt.widgets.Display.release(Display.java:3677)
	at org.eclipse.swt.graphics.Device.dispose(Device.java:276)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:166)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:137)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:107)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:657)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:594)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1447)

!ENTRY org.eclipse.jface 4 0 2020-11-17 00:34:25.078
!MESSAGE Error notifying a preference change listener. Check the log for details.
!STACK 0
java.lang.NullPointerException
	at org.eclipse.ui.texteditor.AbstractTextEditor.initializeViewerColors(AbstractTextEditor.java:3932)
	at org.eclipse.ui.texteditor.AbstractTextEditor.handlePreferenceStoreChanged(AbstractTextEditor.java:4597)
	at org.eclipse.ui.texteditor.AbstractDecoratedTextEditor.handlePreferenceStoreChanged(AbstractDecoratedTextEditor.java:893)
	at org.eclipse.ui.editors.text.TextEditor.handlePreferenceStoreChanged(TextEditor.java:194)
	at org.eclipse.ui.texteditor.AbstractTextEditor$PropertyChangeListener.propertyChange(AbstractTextEditor.java:701)
	at org.eclipse.ui.preferences.ScopedPreferenceStore$2.run(ScopedPreferenceStore.java:325)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.ui.preferences.ScopedPreferenceStore.firePropertyChangeEvent(ScopedPreferenceStore.java:322)
	at org.eclipse.ui.preferences.ScopedPreferenceStore.lambda$0(ScopedPreferenceStore.java:171)
	at org.eclipse.core.internal.preferences.EclipsePreferences$2.run(EclipsePreferences.java:849)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.core.internal.preferences.EclipsePreferences.firePreferenceEvent(EclipsePreferences.java:852)
	at org.eclipse.core.internal.preferences.EclipsePreferences.remove(EclipsePreferences.java:959)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$StylingPreferencesHandler.resetOverriddenPreferences(PartRenderingEngine.java:1451)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$StylingPreferencesHandler.resetOverriddenPreferences(PartRenderingEngine.java:1445)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$StylingPreferencesHandler.lambda$0(PartRenderingEngine.java:1434)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4213)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4205)
	at org.eclipse.swt.widgets.Display.release(Display.java:3677)
	at org.eclipse.swt.graphics.Device.dispose(Device.java:276)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:166)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:137)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:107)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:657)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:594)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1447)

!ENTRY org.eclipse.ui.workbench 4 2 2020-11-17 00:34:25.085
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.ui.workbench".
!STACK 0
java.lang.NullPointerException
	at org.eclipse.ui.texteditor.AbstractTextEditor.initializeViewerColors(AbstractTextEditor.java:3932)
	at org.eclipse.ui.texteditor.AbstractTextEditor.handlePreferenceStoreChanged(AbstractTextEditor.java:4597)
	at org.eclipse.ui.texteditor.AbstractDecoratedTextEditor.handlePreferenceStoreChanged(AbstractDecoratedTextEditor.java:893)
	at org.eclipse.ui.editors.text.TextEditor.handlePreferenceStoreChanged(TextEditor.java:194)
	at org.eclipse.ui.texteditor.AbstractTextEditor$PropertyChangeListener.propertyChange(AbstractTextEditor.java:701)
	at org.eclipse.ui.preferences.ScopedPreferenceStore$2.run(ScopedPreferenceStore.java:325)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.ui.preferences.ScopedPreferenceStore.firePropertyChangeEvent(ScopedPreferenceStore.java:322)
	at org.eclipse.ui.preferences.ScopedPreferenceStore.lambda$0(ScopedPreferenceStore.java:171)
	at org.eclipse.core.internal.preferences.EclipsePreferences$2.run(EclipsePreferences.java:849)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.core.internal.preferences.EclipsePreferences.firePreferenceEvent(EclipsePreferences.java:852)
	at org.eclipse.core.internal.preferences.EclipsePreferences.remove(EclipsePreferences.java:959)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$StylingPreferencesHandler.resetOverriddenPreferences(PartRenderingEngine.java:1451)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$StylingPreferencesHandler.resetOverriddenPreferences(PartRenderingEngine.java:1445)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$StylingPreferencesHandler.lambda$0(PartRenderingEngine.java:1434)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4213)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4205)
	at org.eclipse.swt.widgets.Display.release(Display.java:3677)
	at org.eclipse.swt.graphics.Device.dispose(Device.java:276)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:166)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:137)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:107)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:657)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:594)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1447)

!ENTRY org.eclipse.jface 4 0 2020-11-17 00:34:25.091
!MESSAGE Error notifying a preference change listener. Check the log for details.
!STACK 0
java.lang.NullPointerException
	at org.eclipse.ui.texteditor.AbstractTextEditor.initializeViewerColors(AbstractTextEditor.java:3932)
	at org.eclipse.ui.texteditor.AbstractTextEditor.handlePreferenceStoreChanged(AbstractTextEditor.java:4597)
	at org.eclipse.ui.texteditor.AbstractDecoratedTextEditor.handlePreferenceStoreChanged(AbstractDecoratedTextEditor.java:893)
	at org.eclipse.ui.editors.text.TextEditor.handlePreferenceStoreChanged(TextEditor.java:194)
	at org.eclipse.ui.texteditor.AbstractTextEditor$PropertyChangeListener.propertyChange(AbstractTextEditor.java:701)
	at org.eclipse.ui.preferences.ScopedPreferenceStore$2.run(ScopedPreferenceStore.java:325)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.ui.preferences.ScopedPreferenceStore.firePropertyChangeEvent(ScopedPreferenceStore.java:322)
	at org.eclipse.ui.preferences.ScopedPreferenceStore.lambda$0(ScopedPreferenceStore.java:171)
	at org.eclipse.core.internal.preferences.EclipsePreferences$2.run(EclipsePreferences.java:849)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.core.internal.preferences.EclipsePreferences.firePreferenceEvent(EclipsePreferences.java:852)
	at org.eclipse.core.internal.preferences.EclipsePreferences.remove(EclipsePreferences.java:959)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$StylingPreferencesHandler.resetOverriddenPreferences(PartRenderingEngine.java:1451)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$StylingPreferencesHandler.resetOverriddenPreferences(PartRenderingEngine.java:1445)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$StylingPreferencesHandler.lambda$0(PartRenderingEngine.java:1434)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4213)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4205)
	at org.eclipse.swt.widgets.Display.release(Display.java:3677)
	at org.eclipse.swt.graphics.Device.dispose(Device.java:276)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:166)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:137)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:107)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:657)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:594)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1447)

!ENTRY org.eclipse.ui.workbench 4 2 2020-11-17 00:34:25.098
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.ui.workbench".
!STACK 0
java.lang.NullPointerException
	at org.eclipse.ui.texteditor.AbstractTextEditor.initializeViewerColors(AbstractTextEditor.java:3932)
	at org.eclipse.ui.texteditor.AbstractTextEditor.handlePreferenceStoreChanged(AbstractTextEditor.java:4597)
	at org.eclipse.ui.texteditor.AbstractDecoratedTextEditor.handlePreferenceStoreChanged(AbstractDecoratedTextEditor.java:893)
	at org.eclipse.ui.editors.text.TextEditor.handlePreferenceStoreChanged(TextEditor.java:194)
	at org.eclipse.ui.texteditor.AbstractTextEditor$PropertyChangeListener.propertyChange(AbstractTextEditor.java:701)
	at org.eclipse.ui.preferences.ScopedPreferenceStore$2.run(ScopedPreferenceStore.java:325)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.ui.preferences.ScopedPreferenceStore.firePropertyChangeEvent(ScopedPreferenceStore.java:322)
	at org.eclipse.ui.preferences.ScopedPreferenceStore.lambda$0(ScopedPreferenceStore.java:171)
	at org.eclipse.core.internal.preferences.EclipsePreferences$2.run(EclipsePreferences.java:849)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.core.internal.preferences.EclipsePreferences.firePreferenceEvent(EclipsePreferences.java:852)
	at org.eclipse.core.internal.preferences.EclipsePreferences.remove(EclipsePreferences.java:959)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$StylingPreferencesHandler.resetOverriddenPreferences(PartRenderingEngine.java:1451)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$StylingPreferencesHandler.resetOverriddenPreferences(PartRenderingEngine.java:1445)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$StylingPreferencesHandler.lambda$0(PartRenderingEngine.java:1434)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4213)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4205)
	at org.eclipse.swt.widgets.Display.release(Display.java:3677)
	at org.eclipse.swt.graphics.Device.dispose(Device.java:276)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:166)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:137)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:107)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:657)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:594)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1447)

!ENTRY org.eclipse.jface 4 0 2020-11-17 00:34:25.104
!MESSAGE Error notifying a preference change listener. Check the log for details.
!STACK 0
java.lang.NullPointerException
	at org.eclipse.ui.texteditor.AbstractTextEditor.initializeViewerColors(AbstractTextEditor.java:3932)
	at org.eclipse.ui.texteditor.AbstractTextEditor.handlePreferenceStoreChanged(AbstractTextEditor.java:4597)
	at org.eclipse.ui.texteditor.AbstractDecoratedTextEditor.handlePreferenceStoreChanged(AbstractDecoratedTextEditor.java:893)
	at org.eclipse.ui.editors.text.TextEditor.handlePreferenceStoreChanged(TextEditor.java:194)
	at org.eclipse.ui.texteditor.AbstractTextEditor$PropertyChangeListener.propertyChange(AbstractTextEditor.java:701)
	at org.eclipse.ui.preferences.ScopedPreferenceStore$2.run(ScopedPreferenceStore.java:325)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.ui.preferences.ScopedPreferenceStore.firePropertyChangeEvent(ScopedPreferenceStore.java:322)
	at org.eclipse.ui.preferences.ScopedPreferenceStore.lambda$0(ScopedPreferenceStore.java:171)
	at org.eclipse.core.internal.preferences.EclipsePreferences$2.run(EclipsePreferences.java:849)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.core.internal.preferences.EclipsePreferences.firePreferenceEvent(EclipsePreferences.java:852)
	at org.eclipse.core.internal.preferences.EclipsePreferences.remove(EclipsePreferences.java:959)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$StylingPreferencesHandler.resetOverriddenPreferences(PartRenderingEngine.java:1451)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$StylingPreferencesHandler.resetOverriddenPreferences(PartRenderingEngine.java:1445)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$StylingPreferencesHandler.lambda$0(PartRenderingEngine.java:1434)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4213)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4205)
	at org.eclipse.swt.widgets.Display.release(Display.java:3677)
	at org.eclipse.swt.graphics.Device.dispose(Device.java:276)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:166)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:137)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:107)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:657)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:594)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1447)

!ENTRY org.eclipse.ui.workbench 4 2 2020-11-17 00:34:25.108
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.ui.workbench".
!STACK 0
java.lang.NullPointerException
	at org.eclipse.ui.texteditor.AbstractTextEditor.initializeViewerColors(AbstractTextEditor.java:3933)
	at org.eclipse.ui.texteditor.AbstractTextEditor.handlePreferenceStoreChanged(AbstractTextEditor.java:4597)
	at org.eclipse.ui.texteditor.AbstractDecoratedTextEditor.handlePreferenceStoreChanged(AbstractDecoratedTextEditor.java:893)
	at org.eclipse.ui.editors.text.TextEditor.handlePreferenceStoreChanged(TextEditor.java:194)
	at org.eclipse.ui.texteditor.AbstractTextEditor$PropertyChangeListener.propertyChange(AbstractTextEditor.java:701)
	at org.eclipse.ui.preferences.ScopedPreferenceStore$2.run(ScopedPreferenceStore.java:325)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.ui.preferences.ScopedPreferenceStore.firePropertyChangeEvent(ScopedPreferenceStore.java:322)
	at org.eclipse.ui.preferences.ScopedPreferenceStore.lambda$0(ScopedPreferenceStore.java:171)
	at org.eclipse.core.internal.preferences.EclipsePreferences$2.run(EclipsePreferences.java:849)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.core.internal.preferences.EclipsePreferences.firePreferenceEvent(EclipsePreferences.java:852)
	at org.eclipse.core.internal.preferences.EclipsePreferences.remove(EclipsePreferences.java:959)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$StylingPreferencesHandler.resetOverriddenPreferences(PartRenderingEngine.java:1451)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$StylingPreferencesHandler.resetOverriddenPreferences(PartRenderingEngine.java:1445)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$StylingPreferencesHandler.lambda$0(PartRenderingEngine.java:1434)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4213)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4205)
	at org.eclipse.swt.widgets.Display.release(Display.java:3677)
	at org.eclipse.swt.graphics.Device.dispose(Device.java:276)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:166)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:137)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:107)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:657)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:594)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1447)

!ENTRY org.eclipse.jface 4 0 2020-11-17 00:34:25.113
!MESSAGE Error notifying a preference change listener. Check the log for details.
!STACK 0
java.lang.NullPointerException
	at org.eclipse.ui.texteditor.AbstractTextEditor.initializeViewerColors(AbstractTextEditor.java:3933)
	at org.eclipse.ui.texteditor.AbstractTextEditor.handlePreferenceStoreChanged(AbstractTextEditor.java:4597)
	at org.eclipse.ui.texteditor.AbstractDecoratedTextEditor.handlePreferenceStoreChanged(AbstractDecoratedTextEditor.java:893)
	at org.eclipse.ui.editors.text.TextEditor.handlePreferenceStoreChanged(TextEditor.java:194)
	at org.eclipse.ui.texteditor.AbstractTextEditor$PropertyChangeListener.propertyChange(AbstractTextEditor.java:701)
	at org.eclipse.ui.preferences.ScopedPreferenceStore$2.run(ScopedPreferenceStore.java:325)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.ui.preferences.ScopedPreferenceStore.firePropertyChangeEvent(ScopedPreferenceStore.java:322)
	at org.eclipse.ui.preferences.ScopedPreferenceStore.lambda$0(ScopedPreferenceStore.java:171)
	at org.eclipse.core.internal.preferences.EclipsePreferences$2.run(EclipsePreferences.java:849)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.core.internal.preferences.EclipsePreferences.firePreferenceEvent(EclipsePreferences.java:852)
	at org.eclipse.core.internal.preferences.EclipsePreferences.remove(EclipsePreferences.java:959)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$StylingPreferencesHandler.resetOverriddenPreferences(PartRenderingEngine.java:1451)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$StylingPreferencesHandler.resetOverriddenPreferences(PartRenderingEngine.java:1445)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$StylingPreferencesHandler.lambda$0(PartRenderingEngine.java:1434)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4213)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4205)
	at org.eclipse.swt.widgets.Display.release(Display.java:3677)
	at org.eclipse.swt.graphics.Device.dispose(Device.java:276)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:166)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:137)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:107)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:657)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:594)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1447)

!ENTRY org.eclipse.ui.workbench 4 2 2020-11-17 00:34:25.119
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.ui.workbench".
!STACK 0
java.lang.NullPointerException
	at org.eclipse.ui.texteditor.AbstractTextEditor.initializeViewerColors(AbstractTextEditor.java:3933)
	at org.eclipse.ui.texteditor.AbstractTextEditor.handlePreferenceStoreChanged(AbstractTextEditor.java:4597)
	at org.eclipse.ui.texteditor.AbstractDecoratedTextEditor.handlePreferenceStoreChanged(AbstractDecoratedTextEditor.java:893)
	at org.eclipse.ui.editors.text.TextEditor.handlePreferenceStoreChanged(TextEditor.java:194)
	at org.eclipse.ui.texteditor.AbstractTextEditor$PropertyChangeListener.propertyChange(AbstractTextEditor.java:701)
	at org.eclipse.ui.preferences.ScopedPreferenceStore$2.run(ScopedPreferenceStore.java:325)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.ui.preferences.ScopedPreferenceStore.firePropertyChangeEvent(ScopedPreferenceStore.java:322)
	at org.eclipse.ui.preferences.ScopedPreferenceStore.lambda$0(ScopedPreferenceStore.java:171)
	at org.eclipse.core.internal.preferences.EclipsePreferences$2.run(EclipsePreferences.java:849)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.core.internal.preferences.EclipsePreferences.firePreferenceEvent(EclipsePreferences.java:852)
	at org.eclipse.core.internal.preferences.EclipsePreferences.remove(EclipsePreferences.java:959)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$StylingPreferencesHandler.resetOverriddenPreferences(PartRenderingEngine.java:1451)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$StylingPreferencesHandler.resetOverriddenPreferences(PartRenderingEngine.java:1445)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$StylingPreferencesHandler.lambda$0(PartRenderingEngine.java:1434)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4213)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4205)
	at org.eclipse.swt.widgets.Display.release(Display.java:3677)
	at org.eclipse.swt.graphics.Device.dispose(Device.java:276)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:166)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:137)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:107)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:657)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:594)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1447)

!ENTRY org.eclipse.jface 4 0 2020-11-17 00:34:25.125
!MESSAGE Error notifying a preference change listener. Check the log for details.
!STACK 0
java.lang.NullPointerException
	at org.eclipse.ui.texteditor.AbstractTextEditor.initializeViewerColors(AbstractTextEditor.java:3933)
	at org.eclipse.ui.texteditor.AbstractTextEditor.handlePreferenceStoreChanged(AbstractTextEditor.java:4597)
	at org.eclipse.ui.texteditor.AbstractDecoratedTextEditor.handlePreferenceStoreChanged(AbstractDecoratedTextEditor.java:893)
	at org.eclipse.ui.editors.text.TextEditor.handlePreferenceStoreChanged(TextEditor.java:194)
	at org.eclipse.ui.texteditor.AbstractTextEditor$PropertyChangeListener.propertyChange(AbstractTextEditor.java:701)
	at org.eclipse.ui.preferences.ScopedPreferenceStore$2.run(ScopedPreferenceStore.java:325)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.ui.preferences.ScopedPreferenceStore.firePropertyChangeEvent(ScopedPreferenceStore.java:322)
	at org.eclipse.ui.preferences.ScopedPreferenceStore.lambda$0(ScopedPreferenceStore.java:171)
	at org.eclipse.core.internal.preferences.EclipsePreferences$2.run(EclipsePreferences.java:849)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.core.internal.preferences.EclipsePreferences.firePreferenceEvent(EclipsePreferences.java:852)
	at org.eclipse.core.internal.preferences.EclipsePreferences.remove(EclipsePreferences.java:959)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$StylingPreferencesHandler.resetOverriddenPreferences(PartRenderingEngine.java:1451)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$StylingPreferencesHandler.resetOverriddenPreferences(PartRenderingEngine.java:1445)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$StylingPreferencesHandler.lambda$0(PartRenderingEngine.java:1434)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4213)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4205)
	at org.eclipse.swt.widgets.Display.release(Display.java:3677)
	at org.eclipse.swt.graphics.Device.dispose(Device.java:276)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:166)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:137)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:107)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:657)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:594)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1447)

!ENTRY org.eclipse.ui.workbench 4 2 2020-11-17 00:34:25.131
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.ui.workbench".
!STACK 0
java.lang.NullPointerException
	at org.eclipse.ui.texteditor.AbstractTextEditor.initializeViewerColors(AbstractTextEditor.java:3933)
	at org.eclipse.ui.texteditor.AbstractTextEditor.handlePreferenceStoreChanged(AbstractTextEditor.java:4597)
	at org.eclipse.ui.texteditor.AbstractDecoratedTextEditor.handlePreferenceStoreChanged(AbstractDecoratedTextEditor.java:893)
	at org.eclipse.ui.editors.text.TextEditor.handlePreferenceStoreChanged(TextEditor.java:194)
	at org.eclipse.ui.texteditor.AbstractTextEditor$PropertyChangeListener.propertyChange(AbstractTextEditor.java:701)
	at org.eclipse.ui.preferences.ScopedPreferenceStore$2.run(ScopedPreferenceStore.java:325)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.ui.preferences.ScopedPreferenceStore.firePropertyChangeEvent(ScopedPreferenceStore.java:322)
	at org.eclipse.ui.preferences.ScopedPreferenceStore.lambda$0(ScopedPreferenceStore.java:171)
	at org.eclipse.core.internal.preferences.EclipsePreferences$2.run(EclipsePreferences.java:849)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.core.internal.preferences.EclipsePreferences.firePreferenceEvent(EclipsePreferences.java:852)
	at org.eclipse.core.internal.preferences.EclipsePreferences.remove(EclipsePreferences.java:959)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$StylingPreferencesHandler.resetOverriddenPreferences(PartRenderingEngine.java:1451)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$StylingPreferencesHandler.resetOverriddenPreferences(PartRenderingEngine.java:1445)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$StylingPreferencesHandler.lambda$0(PartRenderingEngine.java:1434)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4213)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4205)
	at org.eclipse.swt.widgets.Display.release(Display.java:3677)
	at org.eclipse.swt.graphics.Device.dispose(Device.java:276)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:166)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:137)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:107)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:657)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:594)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1447)

!ENTRY org.eclipse.jface 4 0 2020-11-17 00:34:25.135
!MESSAGE Error notifying a preference change listener. Check the log for details.
!STACK 0
java.lang.NullPointerException
	at org.eclipse.ui.texteditor.AbstractTextEditor.initializeViewerColors(AbstractTextEditor.java:3933)
	at org.eclipse.ui.texteditor.AbstractTextEditor.handlePreferenceStoreChanged(AbstractTextEditor.java:4597)
	at org.eclipse.ui.texteditor.AbstractDecoratedTextEditor.handlePreferenceStoreChanged(AbstractDecoratedTextEditor.java:893)
	at org.eclipse.ui.editors.text.TextEditor.handlePreferenceStoreChanged(TextEditor.java:194)
	at org.eclipse.ui.texteditor.AbstractTextEditor$PropertyChangeListener.propertyChange(AbstractTextEditor.java:701)
	at org.eclipse.ui.preferences.ScopedPreferenceStore$2.run(ScopedPreferenceStore.java:325)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.ui.preferences.ScopedPreferenceStore.firePropertyChangeEvent(ScopedPreferenceStore.java:322)
	at org.eclipse.ui.preferences.ScopedPreferenceStore.lambda$0(ScopedPreferenceStore.java:171)
	at org.eclipse.core.internal.preferences.EclipsePreferences$2.run(EclipsePreferences.java:849)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.core.internal.preferences.EclipsePreferences.firePreferenceEvent(EclipsePreferences.java:852)
	at org.eclipse.core.internal.preferences.EclipsePreferences.remove(EclipsePreferences.java:959)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$StylingPreferencesHandler.resetOverriddenPreferences(PartRenderingEngine.java:1451)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$StylingPreferencesHandler.resetOverriddenPreferences(PartRenderingEngine.java:1445)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$StylingPreferencesHandler.lambda$0(PartRenderingEngine.java:1434)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4213)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4205)
	at org.eclipse.swt.widgets.Display.release(Display.java:3677)
	at org.eclipse.swt.graphics.Device.dispose(Device.java:276)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:166)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:137)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:107)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:657)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:594)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1447)

!ENTRY org.eclipse.ui.workbench 4 2 2020-11-17 00:34:25.139
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.ui.workbench".
!STACK 0
java.lang.NullPointerException
	at org.eclipse.ui.texteditor.AbstractTextEditor.initializeViewerColors(AbstractTextEditor.java:3933)
	at org.eclipse.ui.texteditor.AbstractTextEditor.handlePreferenceStoreChanged(AbstractTextEditor.java:4597)
	at org.eclipse.ui.texteditor.AbstractDecoratedTextEditor.handlePreferenceStoreChanged(AbstractDecoratedTextEditor.java:893)
	at org.eclipse.ui.editors.text.TextEditor.handlePreferenceStoreChanged(TextEditor.java:194)
	at org.eclipse.ui.texteditor.AbstractTextEditor$PropertyChangeListener.propertyChange(AbstractTextEditor.java:701)
	at org.eclipse.ui.preferences.ScopedPreferenceStore$2.run(ScopedPreferenceStore.java:325)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.ui.preferences.ScopedPreferenceStore.firePropertyChangeEvent(ScopedPreferenceStore.java:322)
	at org.eclipse.ui.preferences.ScopedPreferenceStore.lambda$0(ScopedPreferenceStore.java:171)
	at org.eclipse.core.internal.preferences.EclipsePreferences$2.run(EclipsePreferences.java:849)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.core.internal.preferences.EclipsePreferences.firePreferenceEvent(EclipsePreferences.java:852)
	at org.eclipse.core.internal.preferences.EclipsePreferences.remove(EclipsePreferences.java:959)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$StylingPreferencesHandler.resetOverriddenPreferences(PartRenderingEngine.java:1451)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$StylingPreferencesHandler.resetOverriddenPreferences(PartRenderingEngine.java:1445)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$StylingPreferencesHandler.lambda$0(PartRenderingEngine.java:1434)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4213)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4205)
	at org.eclipse.swt.widgets.Display.release(Display.java:3677)
	at org.eclipse.swt.graphics.Device.dispose(Device.java:276)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:166)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:137)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:107)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:657)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:594)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1447)

!ENTRY org.eclipse.jface 4 0 2020-11-17 00:34:25.143
!MESSAGE Error notifying a preference change listener. Check the log for details.
!STACK 0
java.lang.NullPointerException
	at org.eclipse.ui.texteditor.AbstractTextEditor.initializeViewerColors(AbstractTextEditor.java:3933)
	at org.eclipse.ui.texteditor.AbstractTextEditor.handlePreferenceStoreChanged(AbstractTextEditor.java:4597)
	at org.eclipse.ui.texteditor.AbstractDecoratedTextEditor.handlePreferenceStoreChanged(AbstractDecoratedTextEditor.java:893)
	at org.eclipse.ui.editors.text.TextEditor.handlePreferenceStoreChanged(TextEditor.java:194)
	at org.eclipse.ui.texteditor.AbstractTextEditor$PropertyChangeListener.propertyChange(AbstractTextEditor.java:701)
	at org.eclipse.ui.preferences.ScopedPreferenceStore$2.run(ScopedPreferenceStore.java:325)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.ui.preferences.ScopedPreferenceStore.firePropertyChangeEvent(ScopedPreferenceStore.java:322)
	at org.eclipse.ui.preferences.ScopedPreferenceStore.lambda$0(ScopedPreferenceStore.java:171)
	at org.eclipse.core.internal.preferences.EclipsePreferences$2.run(EclipsePreferences.java:849)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.core.internal.preferences.EclipsePreferences.firePreferenceEvent(EclipsePreferences.java:852)
	at org.eclipse.core.internal.preferences.EclipsePreferences.remove(EclipsePreferences.java:959)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$StylingPreferencesHandler.resetOverriddenPreferences(PartRenderingEngine.java:1451)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$StylingPreferencesHandler.resetOverriddenPreferences(PartRenderingEngine.java:1445)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$StylingPreferencesHandler.lambda$0(PartRenderingEngine.java:1434)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4213)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4205)
	at org.eclipse.swt.widgets.Display.release(Display.java:3677)
	at org.eclipse.swt.graphics.Device.dispose(Device.java:276)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:166)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:137)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:107)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:657)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:594)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1447)

!ENTRY org.eclipse.ui.workbench 4 2 2020-11-17 00:34:25.147
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.ui.workbench".
!STACK 0
java.lang.NullPointerException
	at org.eclipse.ui.texteditor.AbstractTextEditor.initializeFindScopeColor(AbstractTextEditor.java:3989)
	at org.eclipse.ui.texteditor.AbstractTextEditor.handlePreferenceStoreChanged(AbstractTextEditor.java:4600)
	at org.eclipse.ui.texteditor.AbstractDecoratedTextEditor.handlePreferenceStoreChanged(AbstractDecoratedTextEditor.java:893)
	at org.eclipse.ui.editors.text.TextEditor.handlePreferenceStoreChanged(TextEditor.java:194)
	at org.eclipse.ui.texteditor.AbstractTextEditor$PropertyChangeListener.propertyChange(AbstractTextEditor.java:701)
	at org.eclipse.ui.preferences.ScopedPreferenceStore$2.run(ScopedPreferenceStore.java:325)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.ui.preferences.ScopedPreferenceStore.firePropertyChangeEvent(ScopedPreferenceStore.java:322)
	at org.eclipse.ui.preferences.ScopedPreferenceStore.lambda$0(ScopedPreferenceStore.java:171)
	at org.eclipse.core.internal.preferences.EclipsePreferences$2.run(EclipsePreferences.java:849)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.core.internal.preferences.EclipsePreferences.firePreferenceEvent(EclipsePreferences.java:852)
	at org.eclipse.core.internal.preferences.EclipsePreferences.remove(EclipsePreferences.java:959)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$StylingPreferencesHandler.resetOverriddenPreferences(PartRenderingEngine.java:1451)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$StylingPreferencesHandler.resetOverriddenPreferences(PartRenderingEngine.java:1445)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$StylingPreferencesHandler.lambda$0(PartRenderingEngine.java:1434)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4213)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4205)
	at org.eclipse.swt.widgets.Display.release(Display.java:3677)
	at org.eclipse.swt.graphics.Device.dispose(Device.java:276)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:166)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:137)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:107)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:657)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:594)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1447)

!ENTRY org.eclipse.jface 4 0 2020-11-17 00:34:25.156
!MESSAGE Error notifying a preference change listener. Check the log for details.
!STACK 0
java.lang.NullPointerException
	at org.eclipse.ui.texteditor.AbstractTextEditor.initializeFindScopeColor(AbstractTextEditor.java:3989)
	at org.eclipse.ui.texteditor.AbstractTextEditor.handlePreferenceStoreChanged(AbstractTextEditor.java:4600)
	at org.eclipse.ui.texteditor.AbstractDecoratedTextEditor.handlePreferenceStoreChanged(AbstractDecoratedTextEditor.java:893)
	at org.eclipse.ui.editors.text.TextEditor.handlePreferenceStoreChanged(TextEditor.java:194)
	at org.eclipse.ui.texteditor.AbstractTextEditor$PropertyChangeListener.propertyChange(AbstractTextEditor.java:701)
	at org.eclipse.ui.preferences.ScopedPreferenceStore$2.run(ScopedPreferenceStore.java:325)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.ui.preferences.ScopedPreferenceStore.firePropertyChangeEvent(ScopedPreferenceStore.java:322)
	at org.eclipse.ui.preferences.ScopedPreferenceStore.lambda$0(ScopedPreferenceStore.java:171)
	at org.eclipse.core.internal.preferences.EclipsePreferences$2.run(EclipsePreferences.java:849)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.core.internal.preferences.EclipsePreferences.firePreferenceEvent(EclipsePreferences.java:852)
	at org.eclipse.core.internal.preferences.EclipsePreferences.remove(EclipsePreferences.java:959)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$StylingPreferencesHandler.resetOverriddenPreferences(PartRenderingEngine.java:1451)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$StylingPreferencesHandler.resetOverriddenPreferences(PartRenderingEngine.java:1445)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$StylingPreferencesHandler.lambda$0(PartRenderingEngine.java:1434)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4213)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4205)
	at org.eclipse.swt.widgets.Display.release(Display.java:3677)
	at org.eclipse.swt.graphics.Device.dispose(Device.java:276)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:166)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:137)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:107)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:657)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:594)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1447)

!ENTRY org.eclipse.ui.workbench 4 2 2020-11-17 00:34:25.164
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.ui.workbench".
!STACK 0
java.lang.NullPointerException
	at org.eclipse.jface.text.source.AnnotationPainter.setAnnotationTypeColor(AnnotationPainter.java:1088)
	at org.eclipse.ui.texteditor.SourceViewerDecorationSupport.handlePreferenceStoreChanged(SourceViewerDecorationSupport.java:588)
	at org.eclipse.ui.preferences.ScopedPreferenceStore$2.run(ScopedPreferenceStore.java:325)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.ui.preferences.ScopedPreferenceStore.firePropertyChangeEvent(ScopedPreferenceStore.java:322)
	at org.eclipse.ui.preferences.ScopedPreferenceStore.lambda$0(ScopedPreferenceStore.java:171)
	at org.eclipse.core.internal.preferences.EclipsePreferences$2.run(EclipsePreferences.java:849)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.core.internal.preferences.EclipsePreferences.firePreferenceEvent(EclipsePreferences.java:852)
	at org.eclipse.core.internal.preferences.EclipsePreferences.remove(EclipsePreferences.java:959)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$StylingPreferencesHandler.resetOverriddenPreferences(PartRenderingEngine.java:1451)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$StylingPreferencesHandler.resetOverriddenPreferences(PartRenderingEngine.java:1445)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$StylingPreferencesHandler.lambda$0(PartRenderingEngine.java:1434)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4213)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4205)
	at org.eclipse.swt.widgets.Display.release(Display.java:3677)
	at org.eclipse.swt.graphics.Device.dispose(Device.java:276)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:166)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:137)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:107)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:657)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:594)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1447)

!ENTRY org.eclipse.jface 4 0 2020-11-17 00:34:25.170
!MESSAGE Error notifying a preference change listener. Check the log for details.
!STACK 0
java.lang.NullPointerException
	at org.eclipse.jface.text.source.AnnotationPainter.setAnnotationTypeColor(AnnotationPainter.java:1088)
	at org.eclipse.ui.texteditor.SourceViewerDecorationSupport.handlePreferenceStoreChanged(SourceViewerDecorationSupport.java:588)
	at org.eclipse.ui.preferences.ScopedPreferenceStore$2.run(ScopedPreferenceStore.java:325)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.ui.preferences.ScopedPreferenceStore.firePropertyChangeEvent(ScopedPreferenceStore.java:322)
	at org.eclipse.ui.preferences.ScopedPreferenceStore.lambda$0(ScopedPreferenceStore.java:171)
	at org.eclipse.core.internal.preferences.EclipsePreferences$2.run(EclipsePreferences.java:849)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.core.internal.preferences.EclipsePreferences.firePreferenceEvent(EclipsePreferences.java:852)
	at org.eclipse.core.internal.preferences.EclipsePreferences.remove(EclipsePreferences.java:959)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$StylingPreferencesHandler.resetOverriddenPreferences(PartRenderingEngine.java:1451)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$StylingPreferencesHandler.resetOverriddenPreferences(PartRenderingEngine.java:1445)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$StylingPreferencesHandler.lambda$0(PartRenderingEngine.java:1434)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4213)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4205)
	at org.eclipse.swt.widgets.Display.release(Display.java:3677)
	at org.eclipse.swt.graphics.Device.dispose(Device.java:276)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:166)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:137)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:107)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:657)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:594)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1447)

!ENTRY org.eclipse.ui.workbench 4 2 2020-11-17 00:34:25.176
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.ui.workbench".
!STACK 0
java.lang.NullPointerException
	at org.eclipse.jface.text.source.AnnotationPainter.setAnnotationTypeColor(AnnotationPainter.java:1088)
	at org.eclipse.ui.texteditor.SourceViewerDecorationSupport.handlePreferenceStoreChanged(SourceViewerDecorationSupport.java:588)
	at org.eclipse.ui.preferences.ScopedPreferenceStore$2.run(ScopedPreferenceStore.java:325)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.ui.preferences.ScopedPreferenceStore.firePropertyChangeEvent(ScopedPreferenceStore.java:322)
	at org.eclipse.ui.preferences.ScopedPreferenceStore.lambda$0(ScopedPreferenceStore.java:171)
	at org.eclipse.core.internal.preferences.EclipsePreferences$2.run(EclipsePreferences.java:849)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.core.internal.preferences.EclipsePreferences.firePreferenceEvent(EclipsePreferences.java:852)
	at org.eclipse.core.internal.preferences.EclipsePreferences.remove(EclipsePreferences.java:959)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$StylingPreferencesHandler.resetOverriddenPreferences(PartRenderingEngine.java:1451)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$StylingPreferencesHandler.resetOverriddenPreferences(PartRenderingEngine.java:1445)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$StylingPreferencesHandler.lambda$0(PartRenderingEngine.java:1434)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4213)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4205)
	at org.eclipse.swt.widgets.Display.release(Display.java:3677)
	at org.eclipse.swt.graphics.Device.dispose(Device.java:276)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:166)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:137)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:107)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:657)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:594)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1447)

!ENTRY org.eclipse.jface 4 0 2020-11-17 00:34:25.183
!MESSAGE Error notifying a preference change listener. Check the log for details.
!STACK 0
java.lang.NullPointerException
	at org.eclipse.jface.text.source.AnnotationPainter.setAnnotationTypeColor(AnnotationPainter.java:1088)
	at org.eclipse.ui.texteditor.SourceViewerDecorationSupport.handlePreferenceStoreChanged(SourceViewerDecorationSupport.java:588)
	at org.eclipse.ui.preferences.ScopedPreferenceStore$2.run(ScopedPreferenceStore.java:325)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.ui.preferences.ScopedPreferenceStore.firePropertyChangeEvent(ScopedPreferenceStore.java:322)
	at org.eclipse.ui.preferences.ScopedPreferenceStore.lambda$0(ScopedPreferenceStore.java:171)
	at org.eclipse.core.internal.preferences.EclipsePreferences$2.run(EclipsePreferences.java:849)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.core.internal.preferences.EclipsePreferences.firePreferenceEvent(EclipsePreferences.java:852)
	at org.eclipse.core.internal.preferences.EclipsePreferences.remove(EclipsePreferences.java:959)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$StylingPreferencesHandler.resetOverriddenPreferences(PartRenderingEngine.java:1451)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$StylingPreferencesHandler.resetOverriddenPreferences(PartRenderingEngine.java:1445)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$StylingPreferencesHandler.lambda$0(PartRenderingEngine.java:1434)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4213)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4205)
	at org.eclipse.swt.widgets.Display.release(Display.java:3677)
	at org.eclipse.swt.graphics.Device.dispose(Device.java:276)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:166)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:137)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:107)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:657)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:594)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1447)

!ENTRY org.eclipse.ui.workbench 4 2 2020-11-17 00:34:25.190
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.ui.workbench".
!STACK 0
java.lang.NullPointerException
	at org.eclipse.jface.text.source.AnnotationPainter.setAnnotationTypeColor(AnnotationPainter.java:1088)
	at org.eclipse.ui.texteditor.SourceViewerDecorationSupport.handlePreferenceStoreChanged(SourceViewerDecorationSupport.java:588)
	at org.eclipse.ui.preferences.ScopedPreferenceStore$2.run(ScopedPreferenceStore.java:325)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.ui.preferences.ScopedPreferenceStore.firePropertyChangeEvent(ScopedPreferenceStore.java:322)
	at org.eclipse.ui.preferences.ScopedPreferenceStore.lambda$0(ScopedPreferenceStore.java:171)
	at org.eclipse.core.internal.preferences.EclipsePreferences$2.run(EclipsePreferences.java:849)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.core.internal.preferences.EclipsePreferences.firePreferenceEvent(EclipsePreferences.java:852)
	at org.eclipse.core.internal.preferences.EclipsePreferences.remove(EclipsePreferences.java:959)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$StylingPreferencesHandler.resetOverriddenPreferences(PartRenderingEngine.java:1451)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$StylingPreferencesHandler.resetOverriddenPreferences(PartRenderingEngine.java:1445)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$StylingPreferencesHandler.lambda$0(PartRenderingEngine.java:1434)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4213)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4205)
	at org.eclipse.swt.widgets.Display.release(Display.java:3677)
	at org.eclipse.swt.graphics.Device.dispose(Device.java:276)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:166)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:137)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:107)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:657)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:594)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1447)

!ENTRY org.eclipse.jface 4 0 2020-11-17 00:34:25.198
!MESSAGE Error notifying a preference change listener. Check the log for details.
!STACK 0
java.lang.NullPointerException
	at org.eclipse.jface.text.source.AnnotationPainter.setAnnotationTypeColor(AnnotationPainter.java:1088)
	at org.eclipse.ui.texteditor.SourceViewerDecorationSupport.handlePreferenceStoreChanged(SourceViewerDecorationSupport.java:588)
	at org.eclipse.ui.preferences.ScopedPreferenceStore$2.run(ScopedPreferenceStore.java:325)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.ui.preferences.ScopedPreferenceStore.firePropertyChangeEvent(ScopedPreferenceStore.java:322)
	at org.eclipse.ui.preferences.ScopedPreferenceStore.lambda$0(ScopedPreferenceStore.java:171)
	at org.eclipse.core.internal.preferences.EclipsePreferences$2.run(EclipsePreferences.java:849)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.core.internal.preferences.EclipsePreferences.firePreferenceEvent(EclipsePreferences.java:852)
	at org.eclipse.core.internal.preferences.EclipsePreferences.remove(EclipsePreferences.java:959)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$StylingPreferencesHandler.resetOverriddenPreferences(PartRenderingEngine.java:1451)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$StylingPreferencesHandler.resetOverriddenPreferences(PartRenderingEngine.java:1445)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$StylingPreferencesHandler.lambda$0(PartRenderingEngine.java:1434)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4213)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4205)
	at org.eclipse.swt.widgets.Display.release(Display.java:3677)
	at org.eclipse.swt.graphics.Device.dispose(Device.java:276)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:166)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:137)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:107)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:657)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:594)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1447)

!ENTRY org.eclipse.ui.workbench 4 2 2020-11-17 00:34:25.203
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.ui.workbench".
!STACK 0
java.lang.NullPointerException
	at org.eclipse.jface.text.source.AnnotationPainter.setAnnotationTypeColor(AnnotationPainter.java:1088)
	at org.eclipse.ui.texteditor.SourceViewerDecorationSupport.handlePreferenceStoreChanged(SourceViewerDecorationSupport.java:588)
	at org.eclipse.ui.preferences.ScopedPreferenceStore$2.run(ScopedPreferenceStore.java:325)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.ui.preferences.ScopedPreferenceStore.firePropertyChangeEvent(ScopedPreferenceStore.java:322)
	at org.eclipse.ui.preferences.ScopedPreferenceStore.lambda$0(ScopedPreferenceStore.java:171)
	at org.eclipse.core.internal.preferences.EclipsePreferences$2.run(EclipsePreferences.java:849)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.core.internal.preferences.EclipsePreferences.firePreferenceEvent(EclipsePreferences.java:852)
	at org.eclipse.core.internal.preferences.EclipsePreferences.remove(EclipsePreferences.java:959)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$StylingPreferencesHandler.resetOverriddenPreferences(PartRenderingEngine.java:1451)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$StylingPreferencesHandler.resetOverriddenPreferences(PartRenderingEngine.java:1445)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$StylingPreferencesHandler.lambda$0(PartRenderingEngine.java:1434)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4213)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4205)
	at org.eclipse.swt.widgets.Display.release(Display.java:3677)
	at org.eclipse.swt.graphics.Device.dispose(Device.java:276)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:166)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:137)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:107)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:657)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:594)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1447)

!ENTRY org.eclipse.jface 4 0 2020-11-17 00:34:25.209
!MESSAGE Error notifying a preference change listener. Check the log for details.
!STACK 0
java.lang.NullPointerException
	at org.eclipse.jface.text.source.AnnotationPainter.setAnnotationTypeColor(AnnotationPainter.java:1088)
	at org.eclipse.ui.texteditor.SourceViewerDecorationSupport.handlePreferenceStoreChanged(SourceViewerDecorationSupport.java:588)
	at org.eclipse.ui.preferences.ScopedPreferenceStore$2.run(ScopedPreferenceStore.java:325)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.ui.preferences.ScopedPreferenceStore.firePropertyChangeEvent(ScopedPreferenceStore.java:322)
	at org.eclipse.ui.preferences.ScopedPreferenceStore.lambda$0(ScopedPreferenceStore.java:171)
	at org.eclipse.core.internal.preferences.EclipsePreferences$2.run(EclipsePreferences.java:849)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.core.internal.preferences.EclipsePreferences.firePreferenceEvent(EclipsePreferences.java:852)
	at org.eclipse.core.internal.preferences.EclipsePreferences.remove(EclipsePreferences.java:959)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$StylingPreferencesHandler.resetOverriddenPreferences(PartRenderingEngine.java:1451)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$StylingPreferencesHandler.resetOverriddenPreferences(PartRenderingEngine.java:1445)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$StylingPreferencesHandler.lambda$0(PartRenderingEngine.java:1434)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4213)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4205)
	at org.eclipse.swt.widgets.Display.release(Display.java:3677)
	at org.eclipse.swt.graphics.Device.dispose(Device.java:276)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:166)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:137)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:107)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:657)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:594)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1447)

!ENTRY org.eclipse.ui.workbench 4 2 2020-11-17 00:34:25.215
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.ui.workbench".
!STACK 0
java.lang.NullPointerException
	at org.eclipse.jface.text.source.AnnotationPainter.setAnnotationTypeColor(AnnotationPainter.java:1088)
	at org.eclipse.ui.texteditor.SourceViewerDecorationSupport.handlePreferenceStoreChanged(SourceViewerDecorationSupport.java:588)
	at org.eclipse.ui.preferences.ScopedPreferenceStore$2.run(ScopedPreferenceStore.java:325)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.ui.preferences.ScopedPreferenceStore.firePropertyChangeEvent(ScopedPreferenceStore.java:322)
	at org.eclipse.ui.preferences.ScopedPreferenceStore.lambda$0(ScopedPreferenceStore.java:171)
	at org.eclipse.core.internal.preferences.EclipsePreferences$2.run(EclipsePreferences.java:849)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.core.internal.preferences.EclipsePreferences.firePreferenceEvent(EclipsePreferences.java:852)
	at org.eclipse.core.internal.preferences.EclipsePreferences.remove(EclipsePreferences.java:959)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$StylingPreferencesHandler.resetOverriddenPreferences(PartRenderingEngine.java:1451)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$StylingPreferencesHandler.resetOverriddenPreferences(PartRenderingEngine.java:1445)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$StylingPreferencesHandler.lambda$0(PartRenderingEngine.java:1434)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4213)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4205)
	at org.eclipse.swt.widgets.Display.release(Display.java:3677)
	at org.eclipse.swt.graphics.Device.dispose(Device.java:276)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:166)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:137)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:107)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:657)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:594)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1447)

!ENTRY org.eclipse.jface 4 0 2020-11-17 00:34:25.220
!MESSAGE Error notifying a preference change listener. Check the log for details.
!STACK 0
java.lang.NullPointerException
	at org.eclipse.jface.text.source.AnnotationPainter.setAnnotationTypeColor(AnnotationPainter.java:1088)
	at org.eclipse.ui.texteditor.SourceViewerDecorationSupport.handlePreferenceStoreChanged(SourceViewerDecorationSupport.java:588)
	at org.eclipse.ui.preferences.ScopedPreferenceStore$2.run(ScopedPreferenceStore.java:325)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.ui.preferences.ScopedPreferenceStore.firePropertyChangeEvent(ScopedPreferenceStore.java:322)
	at org.eclipse.ui.preferences.ScopedPreferenceStore.lambda$0(ScopedPreferenceStore.java:171)
	at org.eclipse.core.internal.preferences.EclipsePreferences$2.run(EclipsePreferences.java:849)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.core.internal.preferences.EclipsePreferences.firePreferenceEvent(EclipsePreferences.java:852)
	at org.eclipse.core.internal.preferences.EclipsePreferences.remove(EclipsePreferences.java:959)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$StylingPreferencesHandler.resetOverriddenPreferences(PartRenderingEngine.java:1451)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$StylingPreferencesHandler.resetOverriddenPreferences(PartRenderingEngine.java:1445)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$StylingPreferencesHandler.lambda$0(PartRenderingEngine.java:1434)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4213)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4205)
	at org.eclipse.swt.widgets.Display.release(Display.java:3677)
	at org.eclipse.swt.graphics.Device.dispose(Device.java:276)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:166)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:137)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:107)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:657)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:594)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1447)

!ENTRY org.eclipse.ui.workbench 4 2 2020-11-17 00:34:25.225
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.ui.workbench".
!STACK 0
java.lang.NullPointerException
	at org.eclipse.jface.text.source.AnnotationPainter.setAnnotationTypeColor(AnnotationPainter.java:1088)
	at org.eclipse.ui.texteditor.SourceViewerDecorationSupport.handlePreferenceStoreChanged(SourceViewerDecorationSupport.java:588)
	at org.eclipse.ui.preferences.ScopedPreferenceStore$2.run(ScopedPreferenceStore.java:325)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.ui.preferences.ScopedPreferenceStore.firePropertyChangeEvent(ScopedPreferenceStore.java:322)
	at org.eclipse.ui.preferences.ScopedPreferenceStore.lambda$0(ScopedPreferenceStore.java:171)
	at org.eclipse.core.internal.preferences.EclipsePreferences$2.run(EclipsePreferences.java:849)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.core.internal.preferences.EclipsePreferences.firePreferenceEvent(EclipsePreferences.java:852)
	at org.eclipse.core.internal.preferences.EclipsePreferences.remove(EclipsePreferences.java:959)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$StylingPreferencesHandler.resetOverriddenPreferences(PartRenderingEngine.java:1451)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$StylingPreferencesHandler.resetOverriddenPreferences(PartRenderingEngine.java:1445)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$StylingPreferencesHandler.lambda$0(PartRenderingEngine.java:1434)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4213)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4205)
	at org.eclipse.swt.widgets.Display.release(Display.java:3677)
	at org.eclipse.swt.graphics.Device.dispose(Device.java:276)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:166)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:137)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:107)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:657)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:594)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1447)

!ENTRY org.eclipse.jface 4 0 2020-11-17 00:34:25.229
!MESSAGE Error notifying a preference change listener. Check the log for details.
!STACK 0
java.lang.NullPointerException
	at org.eclipse.jface.text.source.AnnotationPainter.setAnnotationTypeColor(AnnotationPainter.java:1088)
	at org.eclipse.ui.texteditor.SourceViewerDecorationSupport.handlePreferenceStoreChanged(SourceViewerDecorationSupport.java:588)
	at org.eclipse.ui.preferences.ScopedPreferenceStore$2.run(ScopedPreferenceStore.java:325)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.ui.preferences.ScopedPreferenceStore.firePropertyChangeEvent(ScopedPreferenceStore.java:322)
	at org.eclipse.ui.preferences.ScopedPreferenceStore.lambda$0(ScopedPreferenceStore.java:171)
	at org.eclipse.core.internal.preferences.EclipsePreferences$2.run(EclipsePreferences.java:849)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.core.internal.preferences.EclipsePreferences.firePreferenceEvent(EclipsePreferences.java:852)
	at org.eclipse.core.internal.preferences.EclipsePreferences.remove(EclipsePreferences.java:959)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$StylingPreferencesHandler.resetOverriddenPreferences(PartRenderingEngine.java:1451)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$StylingPreferencesHandler.resetOverriddenPreferences(PartRenderingEngine.java:1445)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$StylingPreferencesHandler.lambda$0(PartRenderingEngine.java:1434)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4213)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4205)
	at org.eclipse.swt.widgets.Display.release(Display.java:3677)
	at org.eclipse.swt.graphics.Device.dispose(Device.java:276)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:166)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:137)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:107)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:657)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:594)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1447)

!ENTRY org.eclipse.ui.workbench 4 2 2020-11-17 00:34:25.234
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.ui.workbench".
!STACK 0
java.lang.NullPointerException
	at org.eclipse.jface.text.source.AnnotationPainter.setAnnotationTypeColor(AnnotationPainter.java:1088)
	at org.eclipse.ui.texteditor.SourceViewerDecorationSupport.handlePreferenceStoreChanged(SourceViewerDecorationSupport.java:588)
	at org.eclipse.ui.preferences.ScopedPreferenceStore$2.run(ScopedPreferenceStore.java:325)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.ui.preferences.ScopedPreferenceStore.firePropertyChangeEvent(ScopedPreferenceStore.java:322)
	at org.eclipse.ui.preferences.ScopedPreferenceStore.lambda$0(ScopedPreferenceStore.java:171)
	at org.eclipse.core.internal.preferences.EclipsePreferences$2.run(EclipsePreferences.java:849)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.core.internal.preferences.EclipsePreferences.firePreferenceEvent(EclipsePreferences.java:852)
	at org.eclipse.core.internal.preferences.EclipsePreferences.remove(EclipsePreferences.java:959)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$StylingPreferencesHandler.resetOverriddenPreferences(PartRenderingEngine.java:1451)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$StylingPreferencesHandler.resetOverriddenPreferences(PartRenderingEngine.java:1445)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$StylingPreferencesHandler.lambda$0(PartRenderingEngine.java:1434)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4213)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4205)
	at org.eclipse.swt.widgets.Display.release(Display.java:3677)
	at org.eclipse.swt.graphics.Device.dispose(Device.java:276)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:166)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:137)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:107)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:657)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:594)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1447)

!ENTRY org.eclipse.jface 4 0 2020-11-17 00:34:25.240
!MESSAGE Error notifying a preference change listener. Check the log for details.
!STACK 0
java.lang.NullPointerException
	at org.eclipse.jface.text.source.AnnotationPainter.setAnnotationTypeColor(AnnotationPainter.java:1088)
	at org.eclipse.ui.texteditor.SourceViewerDecorationSupport.handlePreferenceStoreChanged(SourceViewerDecorationSupport.java:588)
	at org.eclipse.ui.preferences.ScopedPreferenceStore$2.run(ScopedPreferenceStore.java:325)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.ui.preferences.ScopedPreferenceStore.firePropertyChangeEvent(ScopedPreferenceStore.java:322)
	at org.eclipse.ui.preferences.ScopedPreferenceStore.lambda$0(ScopedPreferenceStore.java:171)
	at org.eclipse.core.internal.preferences.EclipsePreferences$2.run(EclipsePreferences.java:849)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.core.internal.preferences.EclipsePreferences.firePreferenceEvent(EclipsePreferences.java:852)
	at org.eclipse.core.internal.preferences.EclipsePreferences.remove(EclipsePreferences.java:959)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$StylingPreferencesHandler.resetOverriddenPreferences(PartRenderingEngine.java:1451)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$StylingPreferencesHandler.resetOverriddenPreferences(PartRenderingEngine.java:1445)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$StylingPreferencesHandler.lambda$0(PartRenderingEngine.java:1434)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4213)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4205)
	at org.eclipse.swt.widgets.Display.release(Display.java:3677)
	at org.eclipse.swt.graphics.Device.dispose(Device.java:276)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:166)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:137)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:107)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:657)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:594)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1447)

!ENTRY org.eclipse.ui.workbench 4 2 2020-11-17 00:34:25.246
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.ui.workbench".
!STACK 0
java.lang.NullPointerException
	at org.eclipse.jface.text.source.AnnotationPainter.setAnnotationTypeColor(AnnotationPainter.java:1088)
	at org.eclipse.ui.texteditor.SourceViewerDecorationSupport.handlePreferenceStoreChanged(SourceViewerDecorationSupport.java:588)
	at org.eclipse.ui.preferences.ScopedPreferenceStore$2.run(ScopedPreferenceStore.java:325)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.ui.preferences.ScopedPreferenceStore.firePropertyChangeEvent(ScopedPreferenceStore.java:322)
	at org.eclipse.ui.preferences.ScopedPreferenceStore.lambda$0(ScopedPreferenceStore.java:171)
	at org.eclipse.core.internal.preferences.EclipsePreferences$2.run(EclipsePreferences.java:849)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.core.internal.preferences.EclipsePreferences.firePreferenceEvent(EclipsePreferences.java:852)
	at org.eclipse.core.internal.preferences.EclipsePreferences.remove(EclipsePreferences.java:959)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$StylingPreferencesHandler.resetOverriddenPreferences(PartRenderingEngine.java:1451)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$StylingPreferencesHandler.resetOverriddenPreferences(PartRenderingEngine.java:1445)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$StylingPreferencesHandler.lambda$0(PartRenderingEngine.java:1434)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4213)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4205)
	at org.eclipse.swt.widgets.Display.release(Display.java:3677)
	at org.eclipse.swt.graphics.Device.dispose(Device.java:276)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:166)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:137)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:107)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:657)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:594)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1447)

!ENTRY org.eclipse.jface 4 0 2020-11-17 00:34:25.253
!MESSAGE Error notifying a preference change listener. Check the log for details.
!STACK 0
java.lang.NullPointerException
	at org.eclipse.jface.text.source.AnnotationPainter.setAnnotationTypeColor(AnnotationPainter.java:1088)
	at org.eclipse.ui.texteditor.SourceViewerDecorationSupport.handlePreferenceStoreChanged(SourceViewerDecorationSupport.java:588)
	at org.eclipse.ui.preferences.ScopedPreferenceStore$2.run(ScopedPreferenceStore.java:325)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.ui.preferences.ScopedPreferenceStore.firePropertyChangeEvent(ScopedPreferenceStore.java:322)
	at org.eclipse.ui.preferences.ScopedPreferenceStore.lambda$0(ScopedPreferenceStore.java:171)
	at org.eclipse.core.internal.preferences.EclipsePreferences$2.run(EclipsePreferences.java:849)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.core.internal.preferences.EclipsePreferences.firePreferenceEvent(EclipsePreferences.java:852)
	at org.eclipse.core.internal.preferences.EclipsePreferences.remove(EclipsePreferences.java:959)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$StylingPreferencesHandler.resetOverriddenPreferences(PartRenderingEngine.java:1451)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$StylingPreferencesHandler.resetOverriddenPreferences(PartRenderingEngine.java:1445)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$StylingPreferencesHandler.lambda$0(PartRenderingEngine.java:1434)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4213)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4205)
	at org.eclipse.swt.widgets.Display.release(Display.java:3677)
	at org.eclipse.swt.graphics.Device.dispose(Device.java:276)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:166)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:137)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:107)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:657)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:594)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1447)

!ENTRY org.eclipse.ui.workbench 4 2 2020-11-17 00:34:25.258
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.ui.workbench".
!STACK 0
java.lang.NullPointerException
	at org.eclipse.jface.text.source.AnnotationPainter.setAnnotationTypeColor(AnnotationPainter.java:1088)
	at org.eclipse.ui.texteditor.SourceViewerDecorationSupport.handlePreferenceStoreChanged(SourceViewerDecorationSupport.java:588)
	at org.eclipse.ui.preferences.ScopedPreferenceStore$2.run(ScopedPreferenceStore.java:325)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.ui.preferences.ScopedPreferenceStore.firePropertyChangeEvent(ScopedPreferenceStore.java:322)
	at org.eclipse.ui.preferences.ScopedPreferenceStore.lambda$0(ScopedPreferenceStore.java:171)
	at org.eclipse.core.internal.preferences.EclipsePreferences$2.run(EclipsePreferences.java:849)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.core.internal.preferences.EclipsePreferences.firePreferenceEvent(EclipsePreferences.java:852)
	at org.eclipse.core.internal.preferences.EclipsePreferences.remove(EclipsePreferences.java:959)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$StylingPreferencesHandler.resetOverriddenPreferences(PartRenderingEngine.java:1451)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$StylingPreferencesHandler.resetOverriddenPreferences(PartRenderingEngine.java:1445)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$StylingPreferencesHandler.lambda$0(PartRenderingEngine.java:1434)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4213)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4205)
	at org.eclipse.swt.widgets.Display.release(Display.java:3677)
	at org.eclipse.swt.graphics.Device.dispose(Device.java:276)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:166)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:137)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:107)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:657)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:594)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1447)

!ENTRY org.eclipse.jface 4 0 2020-11-17 00:34:25.263
!MESSAGE Error notifying a preference change listener. Check the log for details.
!STACK 0
java.lang.NullPointerException
	at org.eclipse.jface.text.source.AnnotationPainter.setAnnotationTypeColor(AnnotationPainter.java:1088)
	at org.eclipse.ui.texteditor.SourceViewerDecorationSupport.handlePreferenceStoreChanged(SourceViewerDecorationSupport.java:588)
	at org.eclipse.ui.preferences.ScopedPreferenceStore$2.run(ScopedPreferenceStore.java:325)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.ui.preferences.ScopedPreferenceStore.firePropertyChangeEvent(ScopedPreferenceStore.java:322)
	at org.eclipse.ui.preferences.ScopedPreferenceStore.lambda$0(ScopedPreferenceStore.java:171)
	at org.eclipse.core.internal.preferences.EclipsePreferences$2.run(EclipsePreferences.java:849)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.core.internal.preferences.EclipsePreferences.firePreferenceEvent(EclipsePreferences.java:852)
	at org.eclipse.core.internal.preferences.EclipsePreferences.remove(EclipsePreferences.java:959)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$StylingPreferencesHandler.resetOverriddenPreferences(PartRenderingEngine.java:1451)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$StylingPreferencesHandler.resetOverriddenPreferences(PartRenderingEngine.java:1445)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$StylingPreferencesHandler.lambda$0(PartRenderingEngine.java:1434)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4213)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4205)
	at org.eclipse.swt.widgets.Display.release(Display.java:3677)
	at org.eclipse.swt.graphics.Device.dispose(Device.java:276)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:166)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:137)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:107)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:657)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:594)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1447)

!ENTRY org.eclipse.ui.workbench 4 2 2020-11-17 00:34:25.268
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.ui.workbench".
!STACK 0
java.lang.NullPointerException
	at org.eclipse.jface.text.source.AnnotationPainter.setAnnotationTypeColor(AnnotationPainter.java:1088)
	at org.eclipse.ui.texteditor.SourceViewerDecorationSupport.showAnnotations(SourceViewerDecorationSupport.java:832)
	at org.eclipse.ui.texteditor.SourceViewerDecorationSupport.handlePreferenceStoreChanged(SourceViewerDecorationSupport.java:599)
	at org.eclipse.ui.preferences.ScopedPreferenceStore$2.run(ScopedPreferenceStore.java:325)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.ui.preferences.ScopedPreferenceStore.firePropertyChangeEvent(ScopedPreferenceStore.java:322)
	at org.eclipse.ui.preferences.ScopedPreferenceStore.lambda$0(ScopedPreferenceStore.java:171)
	at org.eclipse.core.internal.preferences.EclipsePreferences$2.run(EclipsePreferences.java:849)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.core.internal.preferences.EclipsePreferences.firePreferenceEvent(EclipsePreferences.java:852)
	at org.eclipse.core.internal.preferences.EclipsePreferences.remove(EclipsePreferences.java:959)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$StylingPreferencesHandler.resetOverriddenPreferences(PartRenderingEngine.java:1451)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$StylingPreferencesHandler.resetOverriddenPreferences(PartRenderingEngine.java:1445)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$StylingPreferencesHandler.lambda$0(PartRenderingEngine.java:1434)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4213)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4205)
	at org.eclipse.swt.widgets.Display.release(Display.java:3677)
	at org.eclipse.swt.graphics.Device.dispose(Device.java:276)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:166)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:137)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:107)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:657)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:594)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1447)

!ENTRY org.eclipse.jface 4 0 2020-11-17 00:34:25.273
!MESSAGE Error notifying a preference change listener. Check the log for details.
!STACK 0
java.lang.NullPointerException
	at org.eclipse.jface.text.source.AnnotationPainter.setAnnotationTypeColor(AnnotationPainter.java:1088)
	at org.eclipse.ui.texteditor.SourceViewerDecorationSupport.showAnnotations(SourceViewerDecorationSupport.java:832)
	at org.eclipse.ui.texteditor.SourceViewerDecorationSupport.handlePreferenceStoreChanged(SourceViewerDecorationSupport.java:599)
	at org.eclipse.ui.preferences.ScopedPreferenceStore$2.run(ScopedPreferenceStore.java:325)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.ui.preferences.ScopedPreferenceStore.firePropertyChangeEvent(ScopedPreferenceStore.java:322)
	at org.eclipse.ui.preferences.ScopedPreferenceStore.lambda$0(ScopedPreferenceStore.java:171)
	at org.eclipse.core.internal.preferences.EclipsePreferences$2.run(EclipsePreferences.java:849)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.core.internal.preferences.EclipsePreferences.firePreferenceEvent(EclipsePreferences.java:852)
	at org.eclipse.core.internal.preferences.EclipsePreferences.remove(EclipsePreferences.java:959)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$StylingPreferencesHandler.resetOverriddenPreferences(PartRenderingEngine.java:1451)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$StylingPreferencesHandler.resetOverriddenPreferences(PartRenderingEngine.java:1445)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$StylingPreferencesHandler.lambda$0(PartRenderingEngine.java:1434)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4213)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4205)
	at org.eclipse.swt.widgets.Display.release(Display.java:3677)
	at org.eclipse.swt.graphics.Device.dispose(Device.java:276)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:166)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:137)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:107)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:657)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:594)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1447)

!ENTRY org.eclipse.ui.workbench 4 2 2020-11-17 00:34:25.279
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.ui.workbench".
!STACK 0
java.lang.NullPointerException
	at org.eclipse.jface.text.source.AnnotationPainter.setAnnotationTypeColor(AnnotationPainter.java:1088)
	at org.eclipse.ui.texteditor.SourceViewerDecorationSupport.showAnnotations(SourceViewerDecorationSupport.java:832)
	at org.eclipse.ui.texteditor.SourceViewerDecorationSupport.handlePreferenceStoreChanged(SourceViewerDecorationSupport.java:599)
	at org.eclipse.ui.preferences.ScopedPreferenceStore$2.run(ScopedPreferenceStore.java:325)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.ui.preferences.ScopedPreferenceStore.firePropertyChangeEvent(ScopedPreferenceStore.java:322)
	at org.eclipse.ui.preferences.ScopedPreferenceStore.lambda$0(ScopedPreferenceStore.java:171)
	at org.eclipse.core.internal.preferences.EclipsePreferences$2.run(EclipsePreferences.java:849)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.core.internal.preferences.EclipsePreferences.firePreferenceEvent(EclipsePreferences.java:852)
	at org.eclipse.core.internal.preferences.EclipsePreferences.remove(EclipsePreferences.java:959)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$StylingPreferencesHandler.resetOverriddenPreferences(PartRenderingEngine.java:1451)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$StylingPreferencesHandler.resetOverriddenPreferences(PartRenderingEngine.java:1445)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$StylingPreferencesHandler.lambda$0(PartRenderingEngine.java:1434)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4213)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4205)
	at org.eclipse.swt.widgets.Display.release(Display.java:3677)
	at org.eclipse.swt.graphics.Device.dispose(Device.java:276)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:166)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:137)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:107)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:657)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:594)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1447)

!ENTRY org.eclipse.jface 4 0 2020-11-17 00:34:25.284
!MESSAGE Error notifying a preference change listener. Check the log for details.
!STACK 0
java.lang.NullPointerException
	at org.eclipse.jface.text.source.AnnotationPainter.setAnnotationTypeColor(AnnotationPainter.java:1088)
	at org.eclipse.ui.texteditor.SourceViewerDecorationSupport.showAnnotations(SourceViewerDecorationSupport.java:832)
	at org.eclipse.ui.texteditor.SourceViewerDecorationSupport.handlePreferenceStoreChanged(SourceViewerDecorationSupport.java:599)
	at org.eclipse.ui.preferences.ScopedPreferenceStore$2.run(ScopedPreferenceStore.java:325)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.ui.preferences.ScopedPreferenceStore.firePropertyChangeEvent(ScopedPreferenceStore.java:322)
	at org.eclipse.ui.preferences.ScopedPreferenceStore.lambda$0(ScopedPreferenceStore.java:171)
	at org.eclipse.core.internal.preferences.EclipsePreferences$2.run(EclipsePreferences.java:849)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.core.internal.preferences.EclipsePreferences.firePreferenceEvent(EclipsePreferences.java:852)
	at org.eclipse.core.internal.preferences.EclipsePreferences.remove(EclipsePreferences.java:959)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$StylingPreferencesHandler.resetOverriddenPreferences(PartRenderingEngine.java:1451)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$StylingPreferencesHandler.resetOverriddenPreferences(PartRenderingEngine.java:1445)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$StylingPreferencesHandler.lambda$0(PartRenderingEngine.java:1434)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4213)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4205)
	at org.eclipse.swt.widgets.Display.release(Display.java:3677)
	at org.eclipse.swt.graphics.Device.dispose(Device.java:276)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:166)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:137)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:107)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:657)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:594)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1447)

!ENTRY org.eclipse.ui.workbench 4 2 2020-11-17 00:34:25.288
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.ui.workbench".
!STACK 0
java.lang.NullPointerException
	at org.eclipse.jface.text.source.AnnotationPainter.setAnnotationTypeColor(AnnotationPainter.java:1088)
	at org.eclipse.ui.texteditor.SourceViewerDecorationSupport.handlePreferenceStoreChanged(SourceViewerDecorationSupport.java:588)
	at org.eclipse.ui.preferences.ScopedPreferenceStore$2.run(ScopedPreferenceStore.java:325)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.ui.preferences.ScopedPreferenceStore.firePropertyChangeEvent(ScopedPreferenceStore.java:322)
	at org.eclipse.ui.preferences.ScopedPreferenceStore.lambda$0(ScopedPreferenceStore.java:171)
	at org.eclipse.core.internal.preferences.EclipsePreferences$2.run(EclipsePreferences.java:849)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.core.internal.preferences.EclipsePreferences.firePreferenceEvent(EclipsePreferences.java:852)
	at org.eclipse.core.internal.preferences.EclipsePreferences.remove(EclipsePreferences.java:959)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$StylingPreferencesHandler.resetOverriddenPreferences(PartRenderingEngine.java:1451)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$StylingPreferencesHandler.resetOverriddenPreferences(PartRenderingEngine.java:1445)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$StylingPreferencesHandler.lambda$0(PartRenderingEngine.java:1434)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4213)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4205)
	at org.eclipse.swt.widgets.Display.release(Display.java:3677)
	at org.eclipse.swt.graphics.Device.dispose(Device.java:276)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:166)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:137)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:107)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:657)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:594)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1447)

!ENTRY org.eclipse.jface 4 0 2020-11-17 00:34:25.292
!MESSAGE Error notifying a preference change listener. Check the log for details.
!STACK 0
java.lang.NullPointerException
	at org.eclipse.jface.text.source.AnnotationPainter.setAnnotationTypeColor(AnnotationPainter.java:1088)
	at org.eclipse.ui.texteditor.SourceViewerDecorationSupport.handlePreferenceStoreChanged(SourceViewerDecorationSupport.java:588)
	at org.eclipse.ui.preferences.ScopedPreferenceStore$2.run(ScopedPreferenceStore.java:325)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.ui.preferences.ScopedPreferenceStore.firePropertyChangeEvent(ScopedPreferenceStore.java:322)
	at org.eclipse.ui.preferences.ScopedPreferenceStore.lambda$0(ScopedPreferenceStore.java:171)
	at org.eclipse.core.internal.preferences.EclipsePreferences$2.run(EclipsePreferences.java:849)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.core.internal.preferences.EclipsePreferences.firePreferenceEvent(EclipsePreferences.java:852)
	at org.eclipse.core.internal.preferences.EclipsePreferences.remove(EclipsePreferences.java:959)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$StylingPreferencesHandler.resetOverriddenPreferences(PartRenderingEngine.java:1451)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$StylingPreferencesHandler.resetOverriddenPreferences(PartRenderingEngine.java:1445)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$StylingPreferencesHandler.lambda$0(PartRenderingEngine.java:1434)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4213)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4205)
	at org.eclipse.swt.widgets.Display.release(Display.java:3677)
	at org.eclipse.swt.graphics.Device.dispose(Device.java:276)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:166)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:137)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:107)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:657)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:594)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1447)

!ENTRY org.eclipse.ui.workbench 4 2 2020-11-17 00:34:25.297
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.ui.workbench".
!STACK 0
java.lang.NullPointerException
	at org.eclipse.jface.text.source.AnnotationPainter.setAnnotationTypeColor(AnnotationPainter.java:1088)
	at org.eclipse.ui.texteditor.SourceViewerDecorationSupport.showAnnotations(SourceViewerDecorationSupport.java:832)
	at org.eclipse.ui.texteditor.SourceViewerDecorationSupport.handlePreferenceStoreChanged(SourceViewerDecorationSupport.java:599)
	at org.eclipse.ui.preferences.ScopedPreferenceStore$2.run(ScopedPreferenceStore.java:325)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.ui.preferences.ScopedPreferenceStore.firePropertyChangeEvent(ScopedPreferenceStore.java:322)
	at org.eclipse.ui.preferences.ScopedPreferenceStore.lambda$0(ScopedPreferenceStore.java:171)
	at org.eclipse.core.internal.preferences.EclipsePreferences$2.run(EclipsePreferences.java:849)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.core.internal.preferences.EclipsePreferences.firePreferenceEvent(EclipsePreferences.java:852)
	at org.eclipse.core.internal.preferences.EclipsePreferences.remove(EclipsePreferences.java:959)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$StylingPreferencesHandler.resetOverriddenPreferences(PartRenderingEngine.java:1451)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$StylingPreferencesHandler.resetOverriddenPreferences(PartRenderingEngine.java:1445)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$StylingPreferencesHandler.lambda$0(PartRenderingEngine.java:1434)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4213)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4205)
	at org.eclipse.swt.widgets.Display.release(Display.java:3677)
	at org.eclipse.swt.graphics.Device.dispose(Device.java:276)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:166)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:137)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:107)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:657)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:594)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1447)

!ENTRY org.eclipse.jface 4 0 2020-11-17 00:34:25.303
!MESSAGE Error notifying a preference change listener. Check the log for details.
!STACK 0
java.lang.NullPointerException
	at org.eclipse.jface.text.source.AnnotationPainter.setAnnotationTypeColor(AnnotationPainter.java:1088)
	at org.eclipse.ui.texteditor.SourceViewerDecorationSupport.showAnnotations(SourceViewerDecorationSupport.java:832)
	at org.eclipse.ui.texteditor.SourceViewerDecorationSupport.handlePreferenceStoreChanged(SourceViewerDecorationSupport.java:599)
	at org.eclipse.ui.preferences.ScopedPreferenceStore$2.run(ScopedPreferenceStore.java:325)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.ui.preferences.ScopedPreferenceStore.firePropertyChangeEvent(ScopedPreferenceStore.java:322)
	at org.eclipse.ui.preferences.ScopedPreferenceStore.lambda$0(ScopedPreferenceStore.java:171)
	at org.eclipse.core.internal.preferences.EclipsePreferences$2.run(EclipsePreferences.java:849)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.core.internal.preferences.EclipsePreferences.firePreferenceEvent(EclipsePreferences.java:852)
	at org.eclipse.core.internal.preferences.EclipsePreferences.remove(EclipsePreferences.java:959)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$StylingPreferencesHandler.resetOverriddenPreferences(PartRenderingEngine.java:1451)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$StylingPreferencesHandler.resetOverriddenPreferences(PartRenderingEngine.java:1445)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$StylingPreferencesHandler.lambda$0(PartRenderingEngine.java:1434)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4213)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4205)
	at org.eclipse.swt.widgets.Display.release(Display.java:3677)
	at org.eclipse.swt.graphics.Device.dispose(Device.java:276)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:166)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:137)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:107)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:657)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:594)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1447)

!ENTRY org.eclipse.ui.workbench 4 2 2020-11-17 00:34:25.312
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.ui.workbench".
!STACK 0
java.lang.NullPointerException
	at org.eclipse.jface.text.source.AnnotationPainter.setAnnotationTypeColor(AnnotationPainter.java:1088)
	at org.eclipse.ui.texteditor.SourceViewerDecorationSupport.handlePreferenceStoreChanged(SourceViewerDecorationSupport.java:588)
	at org.eclipse.ui.preferences.ScopedPreferenceStore$2.run(ScopedPreferenceStore.java:325)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.ui.preferences.ScopedPreferenceStore.firePropertyChangeEvent(ScopedPreferenceStore.java:322)
	at org.eclipse.ui.preferences.ScopedPreferenceStore.lambda$0(ScopedPreferenceStore.java:171)
	at org.eclipse.core.internal.preferences.EclipsePreferences$2.run(EclipsePreferences.java:849)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.core.internal.preferences.EclipsePreferences.firePreferenceEvent(EclipsePreferences.java:852)
	at org.eclipse.core.internal.preferences.EclipsePreferences.remove(EclipsePreferences.java:959)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$StylingPreferencesHandler.resetOverriddenPreferences(PartRenderingEngine.java:1451)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$StylingPreferencesHandler.resetOverriddenPreferences(PartRenderingEngine.java:1445)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$StylingPreferencesHandler.lambda$0(PartRenderingEngine.java:1434)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4213)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4205)
	at org.eclipse.swt.widgets.Display.release(Display.java:3677)
	at org.eclipse.swt.graphics.Device.dispose(Device.java:276)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:166)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:137)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:107)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:657)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:594)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1447)

!ENTRY org.eclipse.jface 4 0 2020-11-17 00:34:25.320
!MESSAGE Error notifying a preference change listener. Check the log for details.
!STACK 0
java.lang.NullPointerException
	at org.eclipse.jface.text.source.AnnotationPainter.setAnnotationTypeColor(AnnotationPainter.java:1088)
	at org.eclipse.ui.texteditor.SourceViewerDecorationSupport.handlePreferenceStoreChanged(SourceViewerDecorationSupport.java:588)
	at org.eclipse.ui.preferences.ScopedPreferenceStore$2.run(ScopedPreferenceStore.java:325)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.ui.preferences.ScopedPreferenceStore.firePropertyChangeEvent(ScopedPreferenceStore.java:322)
	at org.eclipse.ui.preferences.ScopedPreferenceStore.lambda$0(ScopedPreferenceStore.java:171)
	at org.eclipse.core.internal.preferences.EclipsePreferences$2.run(EclipsePreferences.java:849)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.core.internal.preferences.EclipsePreferences.firePreferenceEvent(EclipsePreferences.java:852)
	at org.eclipse.core.internal.preferences.EclipsePreferences.remove(EclipsePreferences.java:959)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$StylingPreferencesHandler.resetOverriddenPreferences(PartRenderingEngine.java:1451)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$StylingPreferencesHandler.resetOverriddenPreferences(PartRenderingEngine.java:1445)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$StylingPreferencesHandler.lambda$0(PartRenderingEngine.java:1434)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4213)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4205)
	at org.eclipse.swt.widgets.Display.release(Display.java:3677)
	at org.eclipse.swt.graphics.Device.dispose(Device.java:276)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:166)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:137)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:107)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:657)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:594)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1447)

!ENTRY org.eclipse.ui.workbench 4 2 2020-11-17 00:34:25.326
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.ui.workbench".
!STACK 0
java.lang.NullPointerException
	at org.eclipse.jface.text.source.AnnotationPainter.setAnnotationTypeColor(AnnotationPainter.java:1088)
	at org.eclipse.ui.texteditor.SourceViewerDecorationSupport.handlePreferenceStoreChanged(SourceViewerDecorationSupport.java:588)
	at org.eclipse.ui.preferences.ScopedPreferenceStore$2.run(ScopedPreferenceStore.java:325)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.ui.preferences.ScopedPreferenceStore.firePropertyChangeEvent(ScopedPreferenceStore.java:322)
	at org.eclipse.ui.preferences.ScopedPreferenceStore.lambda$0(ScopedPreferenceStore.java:171)
	at org.eclipse.core.internal.preferences.EclipsePreferences$2.run(EclipsePreferences.java:849)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.core.internal.preferences.EclipsePreferences.firePreferenceEvent(EclipsePreferences.java:852)
	at org.eclipse.core.internal.preferences.EclipsePreferences.remove(EclipsePreferences.java:959)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$StylingPreferencesHandler.resetOverriddenPreferences(PartRenderingEngine.java:1451)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$StylingPreferencesHandler.resetOverriddenPreferences(PartRenderingEngine.java:1445)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$StylingPreferencesHandler.lambda$0(PartRenderingEngine.java:1434)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4213)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4205)
	at org.eclipse.swt.widgets.Display.release(Display.java:3677)
	at org.eclipse.swt.graphics.Device.dispose(Device.java:276)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:166)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:137)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:107)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:657)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:594)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1447)

!ENTRY org.eclipse.jface 4 0 2020-11-17 00:34:25.335
!MESSAGE Error notifying a preference change listener. Check the log for details.
!STACK 0
java.lang.NullPointerException
	at org.eclipse.jface.text.source.AnnotationPainter.setAnnotationTypeColor(AnnotationPainter.java:1088)
	at org.eclipse.ui.texteditor.SourceViewerDecorationSupport.handlePreferenceStoreChanged(SourceViewerDecorationSupport.java:588)
	at org.eclipse.ui.preferences.ScopedPreferenceStore$2.run(ScopedPreferenceStore.java:325)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.ui.preferences.ScopedPreferenceStore.firePropertyChangeEvent(ScopedPreferenceStore.java:322)
	at org.eclipse.ui.preferences.ScopedPreferenceStore.lambda$0(ScopedPreferenceStore.java:171)
	at org.eclipse.core.internal.preferences.EclipsePreferences$2.run(EclipsePreferences.java:849)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.core.internal.preferences.EclipsePreferences.firePreferenceEvent(EclipsePreferences.java:852)
	at org.eclipse.core.internal.preferences.EclipsePreferences.remove(EclipsePreferences.java:959)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$StylingPreferencesHandler.resetOverriddenPreferences(PartRenderingEngine.java:1451)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$StylingPreferencesHandler.resetOverriddenPreferences(PartRenderingEngine.java:1445)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$StylingPreferencesHandler.lambda$0(PartRenderingEngine.java:1434)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4213)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4205)
	at org.eclipse.swt.widgets.Display.release(Display.java:3677)
	at org.eclipse.swt.graphics.Device.dispose(Device.java:276)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:166)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:137)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:107)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:657)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:594)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1447)

!ENTRY org.eclipse.ui.workbench 4 2 2020-11-17 00:34:25.344
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.ui.workbench".
!STACK 0
java.lang.NullPointerException
	at org.eclipse.jface.text.source.AnnotationPainter.setAnnotationTypeColor(AnnotationPainter.java:1088)
	at org.eclipse.ui.texteditor.SourceViewerDecorationSupport.handlePreferenceStoreChanged(SourceViewerDecorationSupport.java:588)
	at org.eclipse.ui.preferences.ScopedPreferenceStore$2.run(ScopedPreferenceStore.java:325)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.ui.preferences.ScopedPreferenceStore.firePropertyChangeEvent(ScopedPreferenceStore.java:322)
	at org.eclipse.ui.preferences.ScopedPreferenceStore.lambda$0(ScopedPreferenceStore.java:171)
	at org.eclipse.core.internal.preferences.EclipsePreferences$2.run(EclipsePreferences.java:849)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.core.internal.preferences.EclipsePreferences.firePreferenceEvent(EclipsePreferences.java:852)
	at org.eclipse.core.internal.preferences.EclipsePreferences.remove(EclipsePreferences.java:959)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$StylingPreferencesHandler.resetOverriddenPreferences(PartRenderingEngine.java:1451)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$StylingPreferencesHandler.resetOverriddenPreferences(PartRenderingEngine.java:1445)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$StylingPreferencesHandler.lambda$0(PartRenderingEngine.java:1434)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4213)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4205)
	at org.eclipse.swt.widgets.Display.release(Display.java:3677)
	at org.eclipse.swt.graphics.Device.dispose(Device.java:276)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:166)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:137)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:107)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:657)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:594)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1447)

!ENTRY org.eclipse.jface 4 0 2020-11-17 00:34:25.351
!MESSAGE Error notifying a preference change listener. Check the log for details.
!STACK 0
java.lang.NullPointerException
	at org.eclipse.jface.text.source.AnnotationPainter.setAnnotationTypeColor(AnnotationPainter.java:1088)
	at org.eclipse.ui.texteditor.SourceViewerDecorationSupport.handlePreferenceStoreChanged(SourceViewerDecorationSupport.java:588)
	at org.eclipse.ui.preferences.ScopedPreferenceStore$2.run(ScopedPreferenceStore.java:325)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.ui.preferences.ScopedPreferenceStore.firePropertyChangeEvent(ScopedPreferenceStore.java:322)
	at org.eclipse.ui.preferences.ScopedPreferenceStore.lambda$0(ScopedPreferenceStore.java:171)
	at org.eclipse.core.internal.preferences.EclipsePreferences$2.run(EclipsePreferences.java:849)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.core.internal.preferences.EclipsePreferences.firePreferenceEvent(EclipsePreferences.java:852)
	at org.eclipse.core.internal.preferences.EclipsePreferences.remove(EclipsePreferences.java:959)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$StylingPreferencesHandler.resetOverriddenPreferences(PartRenderingEngine.java:1451)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$StylingPreferencesHandler.resetOverriddenPreferences(PartRenderingEngine.java:1445)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$StylingPreferencesHandler.lambda$0(PartRenderingEngine.java:1434)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4213)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4205)
	at org.eclipse.swt.widgets.Display.release(Display.java:3677)
	at org.eclipse.swt.graphics.Device.dispose(Device.java:276)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:166)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:137)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:107)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:657)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:594)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1447)
!SESSION 2020-11-17 09:59:40.257 -----------------------------------------------
eclipse.buildId=4.16.0.I20200604-0540
java.version=1.8.0_181
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_GB
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.jface 2 0 2020-11-17 09:59:49.242
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2020-11-17 09:59:49.242
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@3973b6d4,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@18dd7767,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2020-11-17 09:59:58.765
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\osval'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
