*% NO_HDR_CST = TRUE
*% INCLUDE 'GARSRC:FNCSIS.SRC'
*% IF LDC_SI AND PGM_IBM 
*% LARGO_MI_COMMAREA = 600
*% ELSE
*% LARGO_MI_COMMAREA = 100
*% END
*%!ISP+FLB 
*%!ISP+FLB ==================================
*%!ISP+FLB AQUI EMPIEZA EL CODIGO DE ENGANCHE
*%!ISP+FLB ==================================
*%!ISP+FLB 
*% IF LDC_SI AND PGM_IBM AND FIN_SCR_VARI
      *<<<<  LDC_SI AND PGM_IBM AND FIN_SCR_VARI
       COPY LDCWGENG.
           03 SCR-CLF     VALUE SPACES            PIC X(64).
           03 SCR-LDC     VALUE SPACES            PIC X(100).
           03 SCR-ARG     VALUE SPACES            PIC X(50).
      *>>>>
*% END
*% IF LDC_SI AND PGM_IBM AND WSS 
      *<<<< LDC_SI AND PGM_IBM AND WSS 

       COPY LDCWGPMP.

      *>>>> WSS 
*% END
*% IF LDC_SI AND PGM_IBM AND FIN_SCR_TRL
      *<<<< LDC_SI AND PGM_IBM AND FIN_SCR_TRL
           IF SCR-IND-ENG IN SCR-VEC-ENG(SCR-IPRO) = 'S'
               MOVE 'F10GDGNINFIA' TO MSG-COD-MENS
               PERFORM MSG-PF10.
      *>>>>
*% END
*% IF LDC_SI AND PGM_IBM AND INI_PRO_CONF
      *<<<< LDC_SI AND PGM_IBM AND INI_PRO_CONF
           IF SCR-IND-ENG IN SCR-VEC-ENG(SCR-IPRO) = 'S'
               MOVE 'F10GDGSINFIA' TO MSG-COD-MENS
               PERFORM MSG-PF10.
      *>>>>
*% END
*% IF LDC_SI AND PGM_IBM AND ( FIN_SCR_GIKY OR FIN_SCR_GCNF OR FIN_SCR_GFLD )
      *<<<< LDC_SI AND PGM_IBM AND (FIN_SCR_GIKY OR FIN_SCR_GCNF OR FIN_SCR_GFLD)
           IF FRM-FFLD = FRM-FFLD-PF3 AND
              SCR-IND-ENG IN SCR-VEC-ENG(SCR-IPRO) = 'S' 
      *       AND SCR-IND-COL = 'C'
               PERFORM EGR-FTER-CIC.
      *>>>>
*% END
*% IF LDC_SI AND PGM_IBM AND FIN_CMN_ING 
      *<<<< LDC_SI AND PGM_IBM AND FIN_CMN_ING
           IF SCR-IND-ENG IN SCR-VEC-ENG(SCR-IPRO) = 'S' 
                PERFORM EGR-FPEN-CIC.
      *>>>>
*% END
*% IF LDC_SI AND PGM_IBM AND INI_FIO AND PGM_BMS
      *<<<< LDC_SI AND PGM_IBM AND INI_FIO AND PGM_BMS
           IF SCR-DESDE-CMN
               MOVE SPACES TO SCR-VEC-ENG
               MOVE 1 TO SCR-IPRO
               GO TO FIN-INI-FIO.
           IF SCR-INST-EXT = WSS-INST-FPEN-CIC
               MOVE WSS-INST-NULL TO SCR-INST-EXT
               MOVE 'GNS' TO MSG-COD-SIST
               MOVE 'FLDING' TO MSG-COD-MENS
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO SCR-MENS-EXT
               PERFORM ING-FPEN-CIC.
       FIN-INI-FIO.
      *>>>>
*% END
*% IF LDC_SI AND PGM_IBM AND FIN_HBL_IKY
      *<<<< LDC_SI AND PGM_IBM AND FIN_HBL_IKY
           IF SCR-IND-ENG IN SCR-VEC-ENG(SCR-IPRO) = 'S'
               PERFORM HBL-KEY-GDG.
      *>>>>
*% END
*% IF LDC_SI AND PGM_IBM AND EOF
      *<<<< LDC_SI AND PGM_IBM AND EOF
       MSG-PF10 SECTION.
       INI-MSG-PF10.
      *GET-MSG Busca mensaje en tabla
           MOVE 'DEU' TO MSG-COD-SIST.
           PERFORM GET-MSG.
           MOVE MSG-GLS-DESC TO FRM-MEN2.
           MOVE FRM-MEN2     TO GDG-GLS-MEN2 IN GDG-FLD.
       FIN-MSG-PF10.
           EXIT.

       HBL-KEY-GDG SECTION.
       INI-HBL-KEY-GDG.
           MOVE SCR-INST-GKY TO SCR-INST.
      *ISP   25-JUL-1990 DEBE SER REEMPLAZADO POR VARIABLE
      *     INHIBE MOVE FRM-CPSF TO FRM-CPIM-AEY
           MOVE '1' TO FRM-CPIM-AEY.
           MOVE FRM-CPIM-AEY TO GDG-NUM-SIS-ATR IN GDG-FLD.
           MOVE FRM-CPIM-AEY TO GDG-COD-CRR-ATR IN GDG-FLD.
           PERFORM SCR-CLRA-GDG.
      * ISP SCR-DMSG LIMPIA TODO Y HACE STP-EXIT
           MOVE PGM-NO-LIMPIAR-NADA TO PGM-ICLR.
           MOVE SCR-CAI-IGAR IN SCR-VARI TO GDG-NUM-SIS  IN GDG-FLD.
           MOVE SCR-IIC-IGAR IN SCR-VARI TO GDG-COD-CRR  IN GDG-FLD.
           MOVE +4 TO GDG-NUM-SIS-LEN                    IN GDG-FLD.
           MOVE -1 TO GDG-TIP-OPE-LEN                    IN GDG-FLD.
      *
           PERFORM EDT-KEY-GDG.
           PERFORM EDT-FLD-GDG.

           MOVE 'F10GDGNINFIA' TO MSG-COD-MENS.
           PERFORM MSG-PF10.

           IF SCR-IND-FST IN SCR-VEC-FST(SCR-IPRO) = 'S'
               MOVE SPACES TO SCR-IND-FST IN SCR-VEC-FST(SCR-IPRO)
               PERFORM SCR-INIT
               PERFORM SCR-EXIT
           ELSE
               PERFORM SCR-PUTA.
       FIN-HBL-KEY-CLF.
           EXIT.

      *  CODIGO ADICIONAL PARA ENGANCHE PROGRAMAS
       ING-FPEN-CIC SECTION.
       INI-ING-FPEN-CIC.
           PERFORM ING-SETE.
           PERFORM SCR-CLRA-GDG.
           MOVE SCR-MENS-EXT TO GDG-GLS-MENS.
           PERFORM HBL-IKY.
       FIN-ING-FPEN-CIC.
           EXIT.

       ING-SETE SECTION.
       INI-ING-SETE.
           PERFORM CRG-TBL-ENG.
           MOVE WSS-NTRN(SCR-IPRO)     TO SCR-NTRN.
           MOVE WSS-PROG(SCR-IPRO)     TO SCR-PROG.
           MOVE WSS-NMAP(SCR-IPRO)     TO SCR-NMAP.
           MOVE WSS-NLIB(SCR-IPRO)     TO SCR-NLIB.

           MOVE WSS-NTRV(SCR-IPRO)     TO SCR-NTRV.
           MOVE WSS-PROV(SCR-IPRO)     TO SCR-PROV.
       FIN-ING-SETE.
           EXIT.

       EGR-FPEN-CIC SECTION.
       INI-EGR-FPEN-CIC.
           PERFORM CRG-TBL-ENG.
           ADD 1 TO SCR-IPRO.
           IF SCR-IPRO > WSS-TOT-IIDX
                  PERFORM EGR-FTER-CIC
                  GO TO FIN-EGR-FPEN-CIC.
           IF SCR-IND-ENG IN SCR-VEC-ENG(SCR-IPRO) = SPACES
               GO TO INI-EGR-FPEN-CIC.
           MOVE WSS-INST-FPEN-CIC TO SCR-INST-EXT.
           MOVE WSS-PROG(SCR-IPRO) TO SYS-PROG.
           MOVE SCR-VARI TO SYS-CMMA.
           MOVE SCR-TCMA TO SYS-TCMA.
           MOVE SYS-XCTL TO SYS-CMND.
           PERFORM GNS-PRO-SYS.
       FIN-EGR-FPEN-CIC.
           EXIT.

       EGR-FTER-CIC SECTION.
       INI-EGR-FTER-CIC.
           PERFORM CRG-TBL-ENG.
           MOVE WSS-IDX-ILDC TO SCR-IPRO.
           MOVE 'S' TO SCR-IND-ENG IN SCR-VEC-ENG(SCR-IPRO).
           MOVE 'S' TO SCR-IND-FST IN SCR-VEC-FST(SCR-IPRO).
           MOVE WSS-INST-FPEN-CIC TO SCR-INST-EXT.
           MOVE WSS-PROG(SCR-IPRO) TO SYS-PROG.
           MOVE SCR-VARI TO SYS-CMMA.
           MOVE SCR-TCMA TO SYS-TCMA.
           MOVE SYS-XCTL TO SYS-CMND.
           PERFORM GNS-PRO-SYS.
       FIN-EGR-FTER-CIC.
           EXIT.

       SCR-INIT SECTION.
       INI-SCR-INIT.
           MOVE 3  TO FRM-PLIN.
           MOVE 19 TO FRM-NLIN.
           MOVE FRM-CLR-FRM TO FRM-CMND.
           PERFORM GNS-PRO-FRM.
           MOVE FRM-SINI-DBNF TO FRM-SINI.
           MOVE SCR-NMAP TO FRM-NAME.
           MOVE SCR-NLIB TO FRM-NLIB.
           MOVE GDG-FLD TO FRM-DFLD.
           MOVE FRM-INI TO FRM-CMND.
           PERFORM GNS-PRO-FRM.
       FIN-SCR-INIT.
           EXIT.

       COPY LDCBGMPT.

      *>>>>
*% END
*%!ISP+FLB 
*%!ISP+FLB ==================================
*%!ISP+FLB AQUI TERMINA EL CODIGO DE ENGANCHE
*%!ISP+FLB ==================================
*%!ISP+FLB 
*% IF PGM_DTC AND PGM_UVS
*% INCLUDE 'GARSRC:GNSVSIDTC.SRC'
*% END
*%! HASTA AQUI PARA MANEJAR VSAM EN AMBIENTE DTC
*%! CODIGO ADICIONAL PARA ARCHIVO
*% FRM = "GDG"
*% INCLUDE 'GARSRC:PFSALLALL.SRC'
*% PGM_HIJ = TRUE
*% PAD = 'DBC'
*% RPH = 'GDD'
*% HIJ = 'GDG'
*% REG = 'GDG'
*% KEYHIJ = 'GDG-COD-CRR'
*% IF PGM_CHI 
*% PICPAD = 'ZEROES'
*% END
*% IF PGM_PER
*% PICPAD = 'SPACES'
*% END
*% PICHIJ = 'ZEROES'
*% CAIREG = 'GAR-NUM-SIS'
*% CAIFLD = 'GDG-NUM-SIS'
*% IICREG = 'GAR-COD-CRR'
*% IICFLD = 'GDG-COD-CRR'
*% KEYHIJHIJ = 'GAR-CLV-GDG-1'
*% KEYHIJRPH = 'GAR-CLV-GDD-2'
*% KEYRPHRPH = 'GAR-CLV-GDD-1'
*% KEYPADRPH = 'GDD-CIC-ICLI'
*% KEYPADPAD = 'DBC-KEY-IDBC'
*% ING_SBR_HIJ = FALSE
*% SISPAD = 'SGC'
*% SISHIJ = 'GAR'
*% SISREG = 'GAR'
*% KEYPAD = 'DBC-IDC-ICLI'
*% KEYPADALT = 'DBC-GLS-NOMC'
*%! SCRKEYPAD = 'IDC'
*% SCRKEYALT = 'NOM'
*% MNECORPAD = 'CLI'
*% UNS_FLD = TRUE 
*% COMMODACT = 'MGA'
*% ESTACT = 'AGA'
*% CMN_ACT_1 = TRUE
*% CMN_ACT_2 = TRUE
*% CMNACT1 = 'ALZ'
*% CMNACT2 = 'EJE'
*% IF FIN_SCR_VARI
*% INCLUDE CMAVARI OF 'GARSRC:PGMMAN.SRC'
      *<<<< FIN_SCR_VARI
              05 {CAIREG}      VALUE SPACES      PIC X(04).
              05 {IICREG}      VALUE ZEROES      PIC X(08).
              05 GAR-IND-CPL      VALUE SPACES      PIC X(01).
              05 GAR-IND-EXI-GAP  VALUE SPACES      PIC X(01).
              05 GAR-IND-VTO      VALUE SPACES      PIC X(01).
              05 GAR-PCT-PON      VALUE ZEROES      PIC S9(03)V9(02).
              05 GAR-PCT-AJT-SUP  VALUE ZEROES      PIC S9(03)V9(02).
              05 WSS-EST-ANT      VALUE SPACES      PIC X(02).
              05 WSS-ES1-1        VALUE SPACES      PIC X(02).
              05 WSS-ES1-2        VALUE SPACES      PIC X(02).
              05 WSS-ES1-3        VALUE SPACES      PIC X(02).
              05 WSS-ES1-4        VALUE SPACES      PIC X(02).
              05 CMA-IND-DAP      VALUE SPACES      PIC X(01).
              05 FRM-CAI-IOPD     VALUE SPACES      PIC X(04).
              05 FRM-IIC-IOPD     VALUE ZEROES      PIC X(08).
              05 SCR-IND-V001     VALUE SPACES      PIC X(01).
              05 CMA-GLS-DISP     VALUE SPACES      PIC X(13).
      *>>>>
*% END
*% IF WSS
      *<<<< WSS
*% INCLUDE WSS OF 'GARSRC:PGMMAN.SRC'
       01  WSS-VARI.
           03  WSS-IND-EXI-GDO                      PIC X(01).

*% IF PGM_CHI
      *<<<< PGM_CHI
       COPY GARWGDAP.

       COPY DAPBROPD.
       COPY DAPBRRCC.
*% IF PGM_DTC
      *<<<< PGM_DTC
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-OPD-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-RCC-REQA==.
      *>>>>
*% END
      *>>>>
*% END
*%!
*%! VMS Y DTC LLAMAN A SUBRUTINA GARPSELI
*%! VSI TIENE COPY PARA ELIMINAR, PORQUE HUBO PROBLEMAS EN GARPSELI
*%! DB2 QUEDO COMO VSI POR HERENCIA
*% IF PGM_VMS OR PGM_DTC
      *<<<< PGM_VMS OR PGM_DTC
*%!
*% IF PGM_CHI
*%!
*% RA1 = "GMO"
*% RA2 = "TAG"
*% RA3 = "GDO"
*% NRA = 3
*%!
*% ELSE
*%!
*% RA1 = "GMO"
*% RA2 = "TAG"
*% NRA = 2
*%!
*% END
*% FOR I = 1 TO {NRA}
       COPY GARBR{RA{I}}.
*% IF PGM_DTC
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-{RA{I}}-REQA==.
*% END
*% NEXT I
      *>>>>
*% END
*%!
*% IF ( PGM_VSI OR PGM_DB2 ) AND PGM_PU
      *<<<< ( PGM_VSI OR PGM_DB2 ) AND PGM_PU
*% RA1 = "GAP"
*% RA2 = "GDO"
*% RA3 = "GDP"
*% RA4 = "GES"
*% RA5 = "GIN"
*% RA6 = "GLE"
*% RA7 = "GSE"
*% RA8 = "GSI"
*% RA9 = "GTP"
*% RA10 = "GUB"
*% RA11 = "GVT"
*% RA12 = "GMO"
*% RA13 = "TAG"
*% NRA = 13
*% FOR I = 1 TO {NRA}
*% IF PGM_VSI
       COPY GARBR{RA{I}}.
*% ELSE
*% IF I < 13
           EXEC SQL INCLUDE GARBR{RA{I}} END-EXEC.
       COPY GNSWGRQS REPLACING ==SQL-REQA== BY ==SQL-{RA{I}}-REQA==.
*% ELSE
       COPY GARBRTAG.
*% END
*% END
*% NEXT I
      *>>>>
*% END
*% IF PGM_PU
      *<<<< PGM_PU
       COPY GARWGVCG.
*% IF PGM_CHI
      *<<<< PGM_CHI
       COPY GARWGIDP.
      *>>>>
*% END
*% IF NOT ( PGM_VSI OR PGM_DB2 )
      *<<<< NOT ( PGM_VSI OR PGM_DB2 )
       COPY GARWGELI.
      *>>>>
*% END
       01  WSS-VARI-ADI.     
           03 WSS-REG                             PIC X(03).
           03 WSS-COD-CTA.
              05 WSS-CLA-OPE-SUP                  PIC X(03).
              05 WSS-VCB.
                 07 WSS-TIP-VCB                   PIC X(01).
                 07 WSS-COD-VCB                   PIC X(03).
                 07 WSS-TIP-CMB                   PIC X(02).

*% IF PGM_ARG
      *<<<< PGM_ARG
       COPY GNSWCVRF.
       COPY GNSWVVRF.
      *>>>>
*% END
      *>>>>
*% END
*% IF PGM_CHI
      *<<<< PGM_CHI
           COPY USPC113.
      *>>>>
*% END
      *>>>>
*% END
*% IF INI_FIO AND PGM_VMS
      *<<<< INI_FIO

           MOVE FIO-ACCS-UPD TO FIO-ACCS.
           MOVE FIO-ACC      TO FIO-CMND.
           MOVE 'GNS'        TO FIO-SIST.
           PERFORM GNS-FIO-CIC.
           MOVE FIO-UPD TO FIO-CMND.
           PERFORM GNS-FIO-CIC.

           MOVE FIO-ACCS-UPD TO FIO-ACCS.
           MOVE FIO-ACC      TO FIO-CMND.
           MOVE 'TAB'        TO FIO-SIST.
           PERFORM GNS-FIO-TAB.
           MOVE FIO-INP TO FIO-CMND.
           PERFORM GNS-FIO-TAB.

           MOVE FIO-ACCS-UPD TO FIO-ACCS.
           MOVE FIO-ACC      TO FIO-CMND.
           MOVE 'TAB'        TO FIO-SIST.
           PERFORM TAB-FIO-OFI.
           MOVE FIO-INP TO FIO-CMND.
           PERFORM TAB-FIO-OFI.

           MOVE FIO-ACCS-UPD TO FIO-ACCS.
           MOVE FIO-ACC      TO FIO-CMND.
           MOVE 'TAB'        TO FIO-SIST.
           PERFORM TAB-FIO-USR.
           MOVE FIO-INP TO FIO-CMND.
           PERFORM TAB-FIO-USR.

           MOVE FIO-ACCS-UPD TO FIO-ACCS.
           MOVE FIO-ACC      TO FIO-CMND.
           MOVE 'SGC'        TO FIO-SIST.
           PERFORM SGC-FIO-DBC.
           MOVE FIO-INP TO FIO-CMND.
           PERFORM SGC-FIO-DBC.

           MOVE FIO-ACCS-UPD TO FIO-ACCS.
           MOVE FIO-ACC      TO FIO-CMND.
           MOVE 'SGC'        TO FIO-SIST.
           PERFORM SGC-FIO-TAB.
           MOVE FIO-INP TO FIO-CMND.
           PERFORM SGC-FIO-TAB.

           MOVE FIO-ACCS-UPD TO FIO-ACCS.
           MOVE FIO-ACC      TO FIO-CMND.
           MOVE 'GAR'        TO FIO-SIST.
           PERFORM GAR-FIO-GDD.
           MOVE FIO-UPD TO FIO-CMND.
           PERFORM GAR-FIO-GDD.

           MOVE FIO-ACCS-UPD TO FIO-ACCS.
           MOVE FIO-ACC      TO FIO-CMND.
           MOVE 'GAR'        TO FIO-SIST.
           PERFORM GAR-FIO-GDO.
           MOVE FIO-UPD TO FIO-CMND.
           PERFORM GAR-FIO-GDO.

           MOVE FIO-INP TO FIO-CMND.
           PERFORM GAR-FIO-TAG.

           MOVE FIO-ACCS-UPD TO FIO-ACCS.
           MOVE FIO-ACC      TO FIO-CMND.
           MOVE 'GAR'        TO FIO-SIST.
           PERFORM GAR-FIO-GMO.
           MOVE FIO-UPD TO FIO-CMND.
           PERFORM GAR-FIO-GMO.

           MOVE FIO-ACCS-UPD TO FIO-ACCS.
           MOVE FIO-ACC      TO FIO-CMND.
           MOVE 'DAP'        TO FIO-SIST.
           PERFORM DAP-FIO-OPD.
           MOVE FIO-UPD TO FIO-CMND.
           PERFORM DAP-FIO-OPD.

           MOVE FIO-ACCS-UPD TO FIO-ACCS.
           MOVE FIO-ACC      TO FIO-CMND.
           MOVE 'DAP'        TO FIO-SIST.
           PERFORM DAP-FIO-RCC.
           MOVE FIO-UPD TO FIO-CMND.
           PERFORM DAP-FIO-RCC.

      *>>>> INI_FIO
*% END
*% IF FIN_HBL_KEY
      *<<<< FIN_HBL_KEY
           IF SCR-CCPP NOT = 'ING'
               MOVE FRM-CPIM-AEY TO GDG-TIP-OPE-ATR IN {FRM}-FLD
               MOVE FRM-CPIM-AEY TO GDG-STP-OPE-ATR IN {FRM}-FLD.
      *>>>>
*% END
*% IF INI_FND_KEY
*% INCLUDE INGFNDKEY OF 'GARSRC:PGMMAN.SRC'
*% INCLUDE BUSNXTPRV OF 'GARSRC:PGMMAN.SRC'
*% INCLUDE FNDIRECTO OF 'GARSRC:PGMMAN.SRC'
*% INCLUDE BUSPADHIJ OF 'GARSRC:PGMMAN.SRC'
*% END
*% IF FIN_FND_KEY
*% INCLUDE FINFNDKEY OF 'GARSRC:PGMMAN.SRC'
*% INCLUDE EXACMNSTA OF 'GARSRC:PGMMAN.SRC'
*% INCLUDE ERRFNDKEY OF 'GARSRC:PGMMAN.SRC'
*% END
*% IF INI_CMN_ING
*% INCLUDE 'GARSRC:LIMFLD.SRC'
*% INCLUDE 'GARSRC:STDFLD.SRC'
           MOVE SPACES TO GAR-ES2      IN GDG.
           MOVE SPACES TO GAR-IND-CPL  IN GDG.
           MOVE SPACES TO GAR-IND-RST-ALZ IN GDG.
           MOVE SPACES TO GAR-IIV-AUT-ES1 IN GDG.
           MOVE SPACES TO GAR-IND-EXI-GDG IN GDG.
           MOVE SPACES TO GAR-IND-EXI-GDD IN GDG.
           MOVE SPACES TO GAR-IND-EXI-GES IN GDG.
           MOVE SPACES TO GAR-IND-EXI-GLE IN GDG.
           MOVE SPACES TO GAR-IND-EXI-GDO IN GDG.
           MOVE SPACES TO GAR-IND-EXI-GSE IN GDG.
           MOVE SPACES TO GAR-IND-EXI-GVT IN GDG.
           MOVE SPACES TO GAR-IND-EXI-GTP IN GDG.
           MOVE SPACES TO GAR-IND-EXI-GUB IN GDG.
           MOVE SPACES TO GAR-IND-EXI-GAP IN GDG.
           MOVE SPACES TO GAR-IND-EXI-GIN IN GDG.
           MOVE SPACES TO GAR-IND-EXI-GSI IN GDG.
           MOVE SPACES TO GAR-IND-EXI-GDP IN GDG.
           MOVE SPACES TO GAR-COD-TIP-ESP IN GDG.
           MOVE ZEROES TO GAR-FEC-ALZ IN GDG.
           MOVE ZEROES TO GAR-COD-TSN  IN GDG.
           MOVE SPACES TO GDG-GLS-DISP IN GDG. 
*% IF PGM_ARG
      *<<<< PGM_ARG
           MOVE ZEROES TO GAR-FEC-ACOM IN GDG.
           MOVE ZEROES TO GAR-FEC-AGTO IN GDG.
           MOVE ZEROES TO GAR-FEC-AIMP IN GDG.
      *>>>>
*% END
      *>>>>
*% END
*% IF CMN_ING
      *<<<< CMN_ING
*% INCLUDE CMNING OF 'GARSRC:PGMMAN.SRC'
*%!
*% IF PGM_CHI
      *<<<< PGM_CHI

           IF CMA-IND-DAP IN CMA-VARI = 'S'
               MOVE SPACES TO MSG-COD-MENS
               MOVE {CAIFLD} IN GDG-FLD TO {CAIREG}
                                               IN CMA-VARI
               MOVE {IICFLD} IN GDG-FLD TO {IICREG}
                                               IN CMA-VARI
               MOVE FRM-CAI-IOPD IN GDG-FLD TO FRM-CAI-IOPD
                                               IN CMA-VARI
               MOVE FRM-IIC-IOPD IN GDG-FLD TO FRM-IIC-IOPD
                                               IN CMA-VARI
               PERFORM GAR-PRO-IDP
               IF MSG-COD-MENS > SPACES
                   PERFORM GET-MSG
                   MOVE MSG-GLS-DESC TO FRM-MEN1
                   MOVE FRM-SUAR-MAL TO FRM-SUAR
                   GO TO FIN-CMN-ING
               ELSE
                   MOVE 1   TO GAR-COD-TSN     IN GDG
                   MOVE 'S' TO GAR-IND-EXI-GDO IN GDG
                   MOVE 'S' TO GAR-IND-EXI-GVT IN GDG.

      *>>>>
*% END
      *>>>>
*% END
*% IF FIN_CMN_ING
*% INCLUDE FINCMNING OF 'GARSRC:PGMMAN.SRC'
*% END
*% IF CMN_MOD_RET
*% INCLUDE CMNMODRET OF 'GARSRC:PGMMAN.SRC'
*% END
*% IF CMN_MOD
      *<<<< CMN_MOD
*% INCLUDE 'GARSRC:STDFLD.SRC'
           IF SCR-CMND NOT = 'ALZ'
               GO TO SIG-FIN-CMN-MOD.

*% IF PGM_CHI
      *<<<< PGM_CHI
      *DAD ini  16-JAN-1995
      *     IF CMA-IND-DAP IN CMA-VARI = 'S'
           IF CMA-IND-DAP IN CMA-VARI = 'S' AND
              GDG-FEC-ING-SIS IN GDG > '19950115'
      *DAD fin  16-JAN-1995
               PERFORM BUS-GDO-OPD
               IF MSG-COD-MENS = SPACES
                   MOVE FIO-GET-KEY-UPD TO FIO-CMND
                   PERFORM DAP-FIO-OPD
                   MOVE 'N' TO OPD-COD-GARA IN OPD
                   MOVE FIO-MOD TO FIO-CMND
                   PERFORM DAP-FIO-OPD
                   IF NOT FIO-STAT-OKS
                       MOVE FIO-MENS TO FRM-MENS
                       MOVE FRM-SUAR-MAL TO FRM-SUAR
                       GO TO FIN-CMN-MOD
                   ELSE
                       NEXT SENTENCE
               ELSE
                   PERFORM GET-MSG
                   MOVE MSG-GLS-DESC TO FRM-MENS
                   MOVE FRM-SUAR-MAL TO FRM-SUAR
                   GO TO FIN-CMN-MOD.
      *>>>>
*% END

           MOVE HOY-FHOY TO GAR-FEC-MOV IN GMO.
           MOVE HOY-HHOY TO GAR-HOR-MOV IN GMO.
      *FLB CST  13-OCT-1993 
           MOVE SCR-OTRN TO GAR-TML-MOV     IN GMO.
           MOVE SCR-USER TO GMO-IDN-USU-ING IN GMO.

           MOVE HOY-FHOY TO GMO-FEC-ING-SIS IN GMO.
           MOVE {CAIREG} IN GDG TO {CAIREG} IN GMO.
           MOVE {IICREG} IN GDG TO {IICREG} IN GMO.
           MOVE ZEROES             TO GAR-CRR-MOV IN GMO.
           MOVE '3'                TO GAR-COD-MOV IN GMO.
           MOVE GAR-COD-TSN IN GDG TO GAR-COD-TSN IN GMO.
           MOVE 'GDG001'           TO GAR-COD-CPO IN GMO.
           MOVE 'N'                TO GAR-IND-VAL IN GMO.
           MOVE 'S'                TO GAR-IND-CLV IN GMO.
           MOVE SPACES             TO GAR-GLS-CPO-ANT IN GMO.
           MOVE ZEROES             TO GAR-VAL-CPO-ANT IN GMO.
           MOVE GAR-ES1 IN GDG     TO GAR-COD-CLV-NVO IN GMO.
           MOVE SPACES             TO GAR-GLS-CPO-NVO IN GMO.
           MOVE ZEROES             TO GAR-VAL-CPO-NVO IN GMO.
           MOVE GAR-COD-OFI IN GDG TO GAR-COD-OFI-MOV IN GMO.
           MOVE FIO-PUT TO FIO-CMND.
           PERFORM GAR-FIO-GMO.

       SIG-FIN-CMN-MOD.
      *>>>>
*% END
*% IF FIN_CMN_MOD
*% INCLUDE FINCMNMOD OF 'GARSRC:PGMMAN.SRC'
*% END
*% IF INI_CMN_ACC
      *<<<< INI_CMN_ACC
*% IF PGM_VMS
      *<<<< PGM_VMS
           MOVE 'GDG' TO WSS-REG.
      *>>>>
*% END
           MOVE {CAIFLD} IN GDG-FLD TO {CAIREG} IN CMA-VARI.
           MOVE {IICFLD} IN GDG-FLD TO {IICREG} IN CMA-VARI.
           PERFORM GAR-PRO-VCG.
           GO TO FIN-CMN-ACC.
      *>>>>
*% END
*% IF CMN_ELI
      *<<<< CMN_ELI
*% IF ( PGM_VSI OR PGM_DB2 ) AND PGM_PU AND NOT PGM_VMS
      *<<<< ( PGM_VSI OR PGM_DB2 ) AND PGM_PU AND NOT PGM_VMS
           PERFORM ELI-GAP.
           PERFORM ELI-GDO.
           PERFORM ELI-GDP.
           PERFORM ELI-GES.
           PERFORM ELI-GIN.
           PERFORM ELI-GLE.
           PERFORM ELI-GSE.
           PERFORM ELI-GSI.
           PERFORM ELI-GTP.
           PERFORM ELI-GUB.
           PERFORM ELI-GVT.
*% ELSE
      *<<<< NOT (( PGM_VSI OR PGM_DB2 ) AND PGM_PU AND NOT PGM_VMS )
           PERFORM GAR-PRO-ELI.
      *>>>>
*% END
      *>>>>
*% END
*% IF FIN_CMN_ELI
*% INCLUDE FINCMNELI OF 'GARSRC:PGMMAN.SRC'
*% END
*% IF EOF
*% INCLUDE EOFPQPU OF 'GARSRC:PGMMAN.SRC'
*%!
*% IF PGM_CHI
      *<<<< PGM_CHI
*% INCLUDE 'GARSRC:BUSGDOOPD.SRC'
*% END
      *>>>>
*% END
*% IF EOF AND PGM_PU
      *<<<< EOF AND PGM_PU

*% IF NOT ( PGM_VSI OR PGM_DB2 ) AND PGM_PU
      *<<<< ( PGM_VSI OR PGM_DB2 )  AND PGM_PU
       COPY GARBFGMO.
      *>>>>
*% END
*% IF ( PGM_VSI OR PGM_DB2 ) 
      *<<<< ( PGM_VSI OR PGM_DB2 ) 
*% RA1 = "GAP"
*% RA2 = "GDO"
*% RA3 = "GDP"
*% RA4 = "GES"
*% RA5 = "GIN"
*% RA6 = "GLE"
*% RA7 = "GSE"
*% RA8 = "GSI"
*% RA9 = "GTP"
*% RA10 = "GUB"
*% RA11 = "GVT"
*% RA12 = "GMO"
*% NRA = 12
*% FOR I = 1 TO {NRA}
*% IF PGM_VSI
       COPY GARBF{RA{I}}.
*% ELSE
*% IF PGM_DB2 
           EXEC SQL INCLUDE GARBF{RA{I}} END-EXEC.
*% END
*% END
*% NEXT I
      *>>>>
*% END
*%!
*% IF PGM_CHI AND PGM_PU AND NOT PGM_VMS
      *<<<< PGM_CHI AND PGM_PU AND NOT PGM_VMS
      * SOLO POR DEP A PLAZO PROPIO
       PUT-DBC-GDG SECTION.
       INI-PUT-DBC-GDG.
           IF DBC-KEY-IDBC IN CMA-VARI > SPACES
               MOVE DBC-KEY-IDBC IN CMA-VARI TO DBC-CIC-ICLI IN DBC
               MOVE 'DBC-KEY-IDBC'  TO FIO-AKEY
               MOVE FIO-GET-KEY TO FIO-CMND
               PERFORM SGC-FIO-DBC
               MOVE FIO-STAT TO PGM-STAT-DBC
           ELSE
               MOVE FIO-STAT-NEX TO PGM-STAT-DBC.
           IF PGM-STAT-DBC-NUL
               GO TO FIN-PUT-DBC-GDG.
           IF NOT PGM-STAT-DBC-OKS
               PERFORM CLR-DBC-GDG
               GO TO FIN-PUT-DBC-GDG.
           MOVE DBC-CAI-ICLI IN DBC TO DBC-CAI-ICLI IN GDG-FLD.
           MOVE DBC-IIC-ICLI IN DBC TO DBC-IIC-ICLI IN GDG-FLD.
           MOVE DBC-GLS-NOMC IN DBC TO DBC-GLS-NOMC IN GDG-FLD.
           MOVE DBC-IND-ICLI IN DBC TO DBC-IND-ICLI IN GDG-FLD.
           MOVE DBC-GLS-ICLI IN DBC TO DBC-GLS-ICLI IN GDG-FLD.
           MOVE DBC-NUM-ICLI IN DBC TO DBC-NUM-ICLI IN GDG-FLD.
           MOVE DBC-VRF-ICLI IN DBC TO DBC-VRF-ICLI IN GDG-FLD.
           MOVE DBC-GLS-NOMC IN DBC TO CPT-STRN.
           PERFORM CPT-BLKS.
           MOVE CPT-STRN TO DBC-GLS-NOMC IN GDG-FLD.
       FIN-PUT-DBC-GDG.
           EXIT.
      *>>>>
*% END
      *>>>>
*% END
*% IF EOF AND PGM_PQ
      *<<<< EOF AND PGM_PQ
*% INCLUDE EOFPQ OF 'GARSRC:PGMMAN.SRC'

*% IF PGM_CHI
      *<<<< PGM_CHI
       COPY GARBGEDP.
      *>>>>
*% END
      *>>>>
*% END
*% IF EOF AND PGM_PU
      *<<<< EOF AND PGM_PU
*% INCLUDE EOFPU OF 'GARSRC:PGMMAN.SRC'

       VAL-USR-OFI SECTION.
       INI-VAL-USR-OFI.
           COPY USPC143.
       FIN-VAL-USR-OFI.
           EXIT.

       COPY GARBGVCG.
       COPY GARBKVCG.
*% PGM_GDG = TRUE
*% IF PGM_CHI AND PGM_PU
      *<<<< PGM_CHI AND PGM_PU
       COPY GARBGIDP.
       COPY GARBKIDP.
      *>>>>
*% END
*% IF ( PGM_VSI OR PGM_DB2 ) AND PGM_PU
      *<<<< ( PGM_VSI OR PGM_DB2 ) AND PGM_PU 
       COPY GARBGVC2.
      *>>>>
*% END
*% IF NOT ( PGM_VSI OR PGM_DB2 ) AND PGM_PU
      *<<<< NOT ( PGM_VSI OR PGM_DB2 ) AND PGM_PU
       COPY GARBGELI.
       COPY GARBKELI.
      *>>>>
*% END
      *>>>>
*% END
*% IF EOF
      *<<<< EOF

       COPY GARBFTAG.

*% IF PGM_CHI
      *<<<< PGM_CHI
       COPY GARBFGDO.

       COPY DAPBFOPD.
       COPY DAPBFRCC.

      *>>>>
*% END
*% IF PGM_VMS
      *<<<< PGM_VMS
       COPY SGCBFTAB.
      *>>>>
*% END
      *DAD ini  16-JAN-1995
      * COPY TABBVTDU.
      *DAD fin  16-JAN-1995
      *>>>>
*% END
