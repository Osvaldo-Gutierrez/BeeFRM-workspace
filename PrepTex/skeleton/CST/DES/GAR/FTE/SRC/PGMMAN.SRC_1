*% IF CMAVARI
      *<<<< CMAVARI
*% IF PGM_VMS
      *<<<< PGM_VMS
       01  SCR-VARI-AUX.
      *>>>>
*% END
           03 CMA-VARI.
              05 SCR-IND-M{RPH}     VALUE SPACES      PIC X(01).
                 88 MULTIPLES-{RPH}      VALUE 'M'.
              05 {KEYPADPAD}.
                 07 {PAD}-CAI-I{MNECORPAD}  VALUE SPACES      PIC X(04).
                 07 {PAD}-IIC-I{MNECORPAD}  VALUE ZEROES      PIC 9(08).
              05 CMA-IND-KPAD     VALUE SPACES      PIC X(01).
              05 {KEYRPHRPH}.
                 07 {KEYPADRPH}  VALUE SPACES      PIC X(12).
                 07 {KEYHIJRPH}  VALUE SPACES      PIC X(12).
  
      *>>>>
*% END
*% IF WSS
      *<<<< WSS
       01  PGM-VAR-ADIC.
           03 PGM-STAT-ADIC.
              05 PGM-STAT-{RPH}.
                 88 PGM-STAT-{RPH}-NUL VALUE '  '.
                 07 PGM-STT1-{RPH}        VALUE '2' PIC X(01).
                    88 PGM-STAT-{RPH}-OKS VALUE '0'.
                 07 PGM-STT2-{RPH}        VALUE '3' PIC X(01).
       01  WSS-BUS-VARI.
           03 WSS-IBUS                 VALUE 0      PIC 9(01).
           03 WSS-IBUS-{HIJ}           VALUE 0      PIC 9(01).
*% IF ING_SBR_HIJ
      *<<<< ING_SBR_HIJ
           03 WSS-ILST                 VALUE 0      PIC 9(01).
      *>>>>
*% END
       01  WSS-{RPH}-VARI.
              03 WSS-M{RPH}              VALUE 0      PIC 9(01).
                 88 WSS-MISMO-{RPH}      VALUE 0.
                 88 WSS-OTRO-{RPH}       VALUE 1.
                 88 WSS-PRIMER-{RPH}     VALUE 2.
              03 WSS-MISMO               VALUE 0    PIC 9(01).
              03 WSS-OTRO                VALUE 1    PIC 9(01).
              03 WSS-PRIMER              VALUE 2    PIC 9(01).
       COPY {SISPAD}BR{PAD}.
       COPY {SISHIJ}BR{RPH}.
*% IF PGM_PU OR NOT NO_CIC_PQ
      *<<<< PGM_PU OR NOT NO_CIC_PQ
       COPY GNSBRCIC.
       COPY GNSWGCIC.
*% IF PGM_DTC
      *<<<< PGM_DTC
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-CIC-REQA==.
      *>>>>
*% END
      *>>>>
*% END
*% IF UNS_FLD
      *<<<< UNS_FLD
       COPY GNSWGCPT.
       COPY GNSWGSTR.
      *>>>>
*% END
*% IF PGM_DTC
      *<<<< PGM_DTC
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-{RPH}-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-{PAD}-REQA==.
      *>>>>
*% END
      *>>>>
*% END
*% IF INGFNDKEY
      *<<<< INGFNDKEY
      * CODIGO AGREGADO PARA M:N
           IF SCR-CCPP = 'ING' 
               IF {IICFLD} IN {FRM}-FLD > {PICHIJ}
                   MOVE 1 TO WSS-IBUS-{HIJ}
                   MOVE {CAIFLD} IN {FRM}-FLD TO
                        {CAIREG} IN {HIJ}
                   MOVE {IICFLD} IN {FRM}-FLD TO
                        {IICREG} IN {HIJ}
                   MOVE FIO-GET-KEY TO FIO-CMND
                   PERFORM {SISREG}-FIO-{HIJ}
                   IF FIO-STAT-OKS
*% IF NOT ING_SBR_HIJ
      *<<<< NOT ING_SBR_HIJ
      *            se encontro el hijo : error
      *            no ingresa sobre el hijo encontrado
                       MOVE '00' TO PGM-STAT-{HIJ}
                       MOVE '{HIJ}    EXT' TO MSG-COD-MENS
                       GO TO ERR-FND-KEY
                   ELSE
                       MOVE '23' TO FIO-STAT
                       GO TO FIN-FND-KEY
      *>>>>
*% ELSE
      *<<<< ING_SBR_HIJ
      *            se encontro el hijo
      *            ingresa sobre el hijo encontrado
                       MOVE 1 TO WSS-ILST
                       MOVE FIO-STAT-NEX TO FIO-STAT
                       GO TO FIN-FND-KEY
                   ELSE
                       MOVE '23' TO FIO-STAT
                       GO TO FIN-FND-KEY
      *>>>>
*% END
               ELSE
                   PERFORM FND-DIRECTO
                   GO TO FIN-FND-KEY.    
      * CODIGO AGREGADO PARA M:N

      *>>>>
*% END
*% IF BUSNXTPRV
      *<<<< BUSNXTPRV
           MOVE SPACES TO MSG-COD-MENS.
           MOVE 0 TO WSS-IBUS.
           MOVE 0 TO WSS-IBUS-{HIJ}.
           MOVE '23' TO PGM-STAT-{RPH}.

           IF ( FRM-FFLD = FRM-FFLD-PF6 OR FRM-FFLD-PF5 ) AND
              {KEYHIJRPH} IN CMA-VARI > SPACES
               PERFORM LEE-NXT-PRV-X{RPH}
*% IF LEE_PAD_F56
      *<<<< LEE_PAD_F56
               MOVE {KEYPADPAD} IN CMA-VARI TO {KEYPADPAD} IN {PAD}
               MOVE FIO-GET-KEY TO FIO-CMND
               PERFORM {SISPAD}-FIO-{PAD}
               MOVE FIO-STAT TO PGM-STAT-{PAD}

      *>>>>
*% END
               IF WSS-IBUS = 3
                   PERFORM SCR-CLRA-{FRM}
                   GO TO EXA-COM-STAT
               ELSE
                   MOVE PGM-SNUL TO PGM-STAT-{HIJ}
                   MOVE PGM-SNUL TO PGM-STAT-{PAD}
                   IF FRM-FFLD = FRM-FFLD-PF5
                       MOVE '{RPH}    NOPRV' TO MSG-COD-MENS
                       GO TO ERR-FND-KEY
                   ELSE
                       MOVE '{RPH}    NONXT' TO MSG-COD-MENS
                       GO TO ERR-FND-KEY
           ELSE
           IF FRM-FFLD = FRM-FFLD-PF6 OR FRM-FFLD-PF5
               MOVE '{RPH}    NEX' TO MSG-COD-MENS
               GO TO ERR-FND-KEY.

           IF FRM-FFLD = FRM-FFLD-PF8 
              OR FRM-FFLD-PF7
               PERFORM LEE-NXT-PRV-X{PAD}
               IF WSS-IBUS = 1
                   GO TO CON-BUS-{PAD}
               ELSE
                   MOVE PGM-SNUL TO PGM-STAT-{HIJ}
                   MOVE PGM-SNUL TO PGM-STAT-{PAD}
                   IF FRM-FFLD = FRM-FFLD-PF7
                       MOVE '{PAD}    NOPRV' TO MSG-COD-MENS
                       GO TO ERR-FND-KEY
                   ELSE
                       MOVE '{PAD}    NONXT' TO MSG-COD-MENS
                       GO TO ERR-FND-KEY.
      *>>>>
*% END
*% IF FNDIRECTO
      *<<<< FNDIRECTO
           IF {IICFLD} IN {FRM}-FLD > {PICHIJ} AND
              {PAD}-NUM-I{MNECORPAD} IN {FRM}-FLD = {PICPAD} AND
              {PAD}-GLS-NOMC IN {FRM}-FLD NOT > SPACES
      *       se digito lo necesario para buscar directo
      * Buscara Cliente por medio de NOM cuando PF7 O PF8
               MOVE 'N' TO CMA-IND-KPAD IN CMA-VARI
               PERFORM FND-DIRECTO
               IF FIO-STAT-OKS
                   MOVE 2 TO WSS-IBUS
      *            para buscar RPH y PAD
                   PERFORM GET-CUR-{RPH}
                   IF FIO-STAT-OKS
                       MOVE 3 TO WSS-IBUS
                       MOVE {KEYPADRPH} IN {RPH} TO
                            {KEYPADPAD} IN {PAD}
                        MOVE FIO-GET-KEY TO FIO-CMND
                        PERFORM {SISPAD}-FIO-{PAD}
                        MOVE FIO-STAT TO PGM-STAT-{PAD}
                        IF FIO-STAT-OKS
                            GO TO EXA-COM-STAT
                        ELSE
                            MOVE '{RPH}    NO{PAD}' TO MSG-COD-MENS
                            GO TO EXA-COM-STAT 
                   ELSE
                       MOVE '{RPH}    NEX' TO MSG-COD-MENS
                       GO TO EXA-COM-STAT
               ELSE
                   MOVE SPACES TO {KEYHIJRPH} IN CMA-VARI
                   MOVE SPACES TO {KEYPADRPH} IN CMA-VARI
                   MOVE SPACES TO {KEYPADPAD} IN CMA-VARI
                   MOVE '{HIJ}    NEX' TO MSG-COD-MENS
                   GO TO ERR-FND-KEY.

      *>>>>
*% END
*% IF BUSPADHIJ
      *<<<< BUSPADHIJ

      *FLB CST  4-MAY-1994 
           MOVE SPACES TO {KEYHIJRPH} IN CMA-VARI.
           MOVE SPACES TO {KEYPADRPH} IN CMA-VARI.
           MOVE SPACES TO {KEYPADPAD} IN CMA-VARI.

      *    pudo haberse digitadp el campo llave del hijo o no
      *    busca el padre por alguna de las llaves (la digitada)
           IF {PAD}-NUM-I{MNECORPAD} IN {FRM}-FLD NOT = {PICPAD}
      *IDC-CLI Busca Cliente por medio de IdC
      *IDC-CLI lo busco y valido al leer llaves
               MOVE 'I' TO CMA-IND-KPAD IN CMA-VARI
               MOVE 1 TO WSS-IBUS
               GO TO CON-BUS-{PAD}.
           IF {PAD}-GLS-NOMC IN {FRM}-FLD > SPACES
      *NOM-CLI Busca Cliente por medio del Nombre
               MOVE 'N' TO CMA-IND-KPAD IN CMA-VARI
*% IF UNS_FLD
      *<<<< UNS_FLD
               MOVE {KEYPADALT} IN {FRM}-FLD TO STR-GLS-GSTR
               PERFORM STR-UNS
               MOVE STR-GLS-FUNS IN STR-VARI(1) TO 
                    {PAD}-GLS-APAT IN {PAD}
               MOVE STR-GLS-FUNS IN STR-VARI(2) TO 
                    {PAD}-GLS-AMAT IN {PAD}
               MOVE STR-GLS-FUNS IN STR-VARI(3) TO 
                    {PAD}-GLS-NOMB IN {PAD}
      *>>>>
*% ELSE
      *<<<< NOT UNS_FLD
               MOVE {KEYPADALT} IN {FRM}-FLD TO
                    {KEYPADALT} IN {PAD}
      *>>>>
*% END
               MOVE '{KEYPADALT}'   TO FIO-AKEY
               MOVE FIO-GET-NLS TO FIO-CMND
               PERFORM GET-{MNECORPAD}
               IF MSG-COD-MENS NOT > SPACES
                   MOVE 1 TO WSS-IBUS.

      * SI SE PROCESA SUBENTIDAD, LA BUSQUEDA POR LLAVE ALTERNATIVA
      *  DEBE SER UN PARRAFO CON LOOP

           IF WSS-IBUS = 0
               MOVE '{PAD}    NEX' TO MSG-COD-MENS
               GO TO ERR-FND-KEY.

       CON-BUS-{PAD}.
      *    se encontro el padre y busca el {HIJ}
           MOVE '00' TO PGM-STAT-{PAD}.

      * Para permitir Ant/Sig aunque padre no tenga operaciones
           MOVE {KEYPADPAD} IN {PAD} TO {KEYPADPAD} IN CMA-VARI.

      *    se digito tambien el hijo, se busca directamente {RPH}
           IF {IICFLD} IN {FRM}-FLD > {PICHIJ} AND
              NOT (FRM-FFLD = FRM-FFLD-PF8 OR FRM-FFLD-PF7)
      *        Buscara Cliente por medio de NOM cuando PF7 O PF8
               MOVE 'N' TO CMA-IND-KPAD IN CMA-VARI
               PERFORM GET-{RPH}
               IF WSS-IBUS = 1
                   MOVE '{RPH}    NEX' TO MSG-COD-MENS
                   GO TO ERR-FND-KEY
               ELSE
               IF WSS-IBUS = 2
                   MOVE '{HIJ}    NEX' TO MSG-COD-MENS
                   GO TO ERR-FND-KEY
               ELSE
      *            se encontro el hijo
                   GO TO EXA-COM-STAT
           ELSE
      *    no se digito el hijo, se busca el ultimo
               PERFORM BUS-ULT-{HIJ}
               IF WSS-IBUS = 3
      *            se encontro el hijo
                   GO TO EXA-COM-STAT
               ELSE
                   MOVE '{RPH}    NEX' TO MSG-COD-MENS
                   GO TO ERR-FND-KEY.

       FND-DIRECTO.
           MOVE 1 TO WSS-IBUS-{HIJ}.

      *>>>>
*% END
*% IF FINFNDKEY
      *<<<< FINFNDKEY

       EXA-COM-STAT.
*% IF NOT PGM_VMS
      *<<<< NOT PGM_VMS
           MOVE {REG}-FEC-ULT-ACT IN {REG} TO SCR-UMOD.
      *     MOVE {REG}-HOR-ACT IN {REG} TO SCR-UMOD-HOR.
      *>>>>
*% END

           IF WSS-IBUS = 2 OR 3
      *        se encontro el hijo
*% IF PGM_HIJ
      *<<<< PGM_HIJ
               MOVE '00' TO PGM-STAT-{HIJ}
      *>>>>
*% END
      *FLB CST 20-09-1993
      *        MOVE {KEYHIJRPH} IN {RPH} TO {KEYHIJRPH} IN CMA-VARI.
               MOVE {KEYHIJHIJ} IN {HIJ} TO {KEYHIJRPH} IN CMA-VARI.

           IF WSS-IBUS = 3
      *        se encontro la relacion completa
               MOVE '00' TO PGM-STAT-{RPH}
               MOVE {KEYPADRPH} IN {RPH} TO {KEYPADRPH} IN CMA-VARI
               MOVE '00' TO PGM-STAT-{PAD}
               MOVE {KEYPADRPH} IN {RPH} TO {KEYPADPAD} IN CMA-VARI
           ELSE
      *       {reg} incompleto
               MOVE '23' TO PGM-STAT-{RPH}
               MOVE '23' TO PGM-STAT-{PAD}
      *FLB CST 20-09-1993
      *        MOVE SPACES TO {KEYPADRPH} IN CMA-VARI
      *        MOVE SPACES TO {KEYPADPAD} IN CMA-VARI
               MOVE SPACES TO {PAD}-CAI-I{MNECORPAD} IN CMA-VARI
               MOVE ZEROES TO {PAD}-IIC-I{MNECORPAD} IN CMA-VARI
               MOVE {KEYPADPAD} IN CMA-VARI TO {KEYPADRPH} IN CMA-VARI
      *FLB CST 20-09-1993
               GO TO ANL-{REG}.

      * Determina si tiene multiples padres para comando consulta
           IF NOT ( SCR-CCPP = 'ACC' AND SCR-STAT = SCR-STAT-CON )
               GO TO ANL-{REG}.

           MOVE SPACES TO MSG-COD-SIST.
           MOVE SPACES TO MSG-COD-MENS.

      * Se posiciona por la llave del hijo
           MOVE '{KEYHIJRPH}' TO FIO-AKEY.
           MOVE FIO-GET-NLS TO FIO-CMND.
           PERFORM {SISREG}-FIO-{RPH}.

      *    Busca siguiente por la llave del hijo
           MOVE '{KEYHIJRPH}' TO FIO-AKEY.
           MOVE FIO-GET-NXT TO FIO-CMND.

           PERFORM {SISREG}-FIO-{RPH}.
           IF FIO-STAT-OKS AND
              {KEYHIJHIJ}  IN {HIJ} = {KEYHIJRPH}  IN {RPH}
                MOVE 'M' TO SCR-IND-M{RPH}
*% IF MUL_FLD
      *<<<< MUL_FLD
                MOVE 'MULTIPLES' TO FRM-GLS-MULT IN {FRM}-FLD
      *>>>>
*% ELSE
      *<<<< NOT MUL_FLD
*% INCLUDE MUL_MSG OF '{SISHIJ}SRC:PGMMAN{FRM}.SRC'
      *>>>>
*% END
           ELSE
*% IF MUL_FLD
      *<<<< MUL_FLD
                MOVE SPACES      TO FRM-GLS-MULT IN {FRM}-FLD
      *>>>>
*% END
                MOVE SPACES TO SCR-IND-M{RPH}.

           IF FIO-STAT-OKS
               MOVE '{KEYHIJRPH}' TO FIO-AKEY
               MOVE FIO-END-BRW TO FIO-CMND
               PERFORM {SISREG}-FIO-{RPH}.

           MOVE {KEYPADRPH} IN CMA-VARI TO {KEYPADRPH} IN {RPH}.
           MOVE {KEYHIJRPH} IN CMA-VARI TO {KEYHIJRPH} IN {RPH}.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM {SISREG}-FIO-{RPH}.

       ANL-{REG}.
*% IF ANL_REG
*% INCLUDE ANL_{REG} OF '{SISHIJ}SRC:PGMMAN{FRM}.SRC'
*% END
       FIN-ANL-{REG}.
           MOVE PGM-STAT-{HIJ} TO FIO-STAT. 

      *>>>>
*% END
*% IF EXACMNSTA
      *<<<< EXACMNSTA
      * EXAMINA STATUS DE REGISTRO

           IF SCR-CCPP = 'ACC' AND SCR-STPP = SCR-STAT-CON
               GO TO FIN-FND-KEY.

*% INCLUDE EXA_CMN_ACC OF '{SISHIJ}SRC:PGMMAN{FRM}.SRC'

           IF SCR-CMND = '{ESTACT}'
               MOVE SCR-STAT-SON TO SCR-STAT.

           IF {REG}-MSC-STAT IN {REG} = 'E'
               MOVE '{REG}   EXTING' TO MSG-COD-MENS
               GO TO ERR-FND-KEY.

           IF {REG}-MSC-STAT IN {REG} = 'A' AND SCR-CMND = '{COMMODACT}'
*% IF CMN_ACT_1
           OR {REG}-MSC-STAT IN {REG} = 'A' AND SCR-CMND = '{CMNACT1}'
*% END
*% IF CMN_ACT_2
           OR {REG}-MSC-STAT IN {REG} = 'A' AND SCR-CMND = '{CMNACT2}'
*% END
*% IF CMN_ACT_3
           OR {REG}-MSC-STAT IN {REG} = 'A' AND SCR-CMND = '{CMNACT3}'
*% END
*% IF CMN_ACT_4
           OR {REG}-MSC-STAT IN {REG} = 'A' AND SCR-CMND = '{CMNACT4}'
*% END
                   GO TO FIN-FND-KEY.

           IF {REG}-MSC-STAT IN {REG} = 'A'
               MOVE '{REG}    {ESTACT}YA' TO MSG-COD-MENS
               GO TO ERR-FND-KEY.

           IF {REG}-MSC-STAT IN {REG} = 'I' AND SCR-CMND = 'MOD'
           OR {REG}-MSC-STAT IN {REG} = 'I' AND SCR-CMND = '{ESTACT}'
           OR {REG}-MSC-STAT IN {REG} = 'I' AND SCR-CCPP = 'ELI'

*% IF CMN_NAC_1
           OR {REG}-MSC-STAT IN {REG} = 'I' AND SCR-CMND = '{CMNNAC1}'
*% END
*% IF CMN_NAC_2
           OR {REG}-MSC-STAT IN {REG} = 'I' AND SCR-CMND = '{CMNNAC2}'
*% END
*% IF CMN_NAC_3
           OR {REG}-MSC-STAT IN {REG} = 'I' AND SCR-CMND = '{CMNNAC3}'
*% END
*% IF CMN_NAC_4
           OR {REG}-MSC-STAT IN {REG} = 'I' AND SCR-CMND = '{CMNNAC4}'
*% END
                   GO TO FIN-FND-KEY.

           IF {REG}-MSC-STAT IN {REG} = 'I'
               MOVE '{REG}    NO{ESTACT}' TO MSG-COD-MENS
               GO TO ERR-FND-KEY.

           IF {REG}-MSC-STAT IN {REG} = 'E'
               MOVE '{REG}    EXTGD' TO MSG-COD-MENS
           ELSE
               MOVE '{REG}    NOEST' TO MSG-COD-MENS.

      *>>>>
*% END
*% IF ERRFNDKEY
      *<<<< ERRFNDKEY
       ERR-FND-KEY.
           IF WSS-IBUS = 0 AND WSS-IBUS-{HIJ} = 0
      *        busco por padre y no encontro padre
               MOVE SPACES TO PGM-STAT
               MOVE 'TAB' TO MSG-COD-SIST
               MOVE '23' TO PGM-STAT-{PAD}
           ELSE
      *     IF MSG-COD-MENS = 'USRNODEOFI'
      *         MOVE 'TAB' TO MSG-COD-SIST
      *     ELSE
      *        todos otros casos: el error pertenece al sistema {sisreg}
               MOVE '{SISREG}' TO MSG-COD-SIST.
           PERFORM GET-MSG.
           MOVE MSG-GLS-DESC TO FRM-MENS.

           MOVE SCR-STAT-CON TO SCR-STAT.
           MOVE '00' TO FIO-STAT.       
           IF FRM-FFLD = FRM-FFLD-PF6 OR
              FRM-FFLD = FRM-FFLD-PF5 OR
              SCR-CCPP = 'ING'
               GO TO FIN-FND-KEY.

           IF PGM-STAT-{PAD}-OKS 
      *        Despliega solo datos del {PAD}

*% IF PGM_VMS
      *<<<< PGM_VMS
               DISPLAY PGM-NCUR WITH NO ADVANCING
      *>>>>
*% END
               PERFORM SCR-CLRA-{FRM}
*% IF PGM_VMS
      *<<<< PGM_VMS
               DISPLAY PGM-SCUR WITH NO ADVANCING
               INITIALIZE {FRM}-DFLD
      *>>>>
*% END
*% IF PGM_VMS
      *<<<< PGM_VMS
               PERFORM SCR-DSP-MSSG
      *>>>>
*% END
           ELSE
           IF FRM-FFLD = FRM-FFLD-PF8
              OR FRM-FFLD-PF7
               GO TO FIN-FND-KEY
           ELSE
           IF PGM-STAT-{HIJ}-OKS 
               MOVE PGM-SNUL TO PGM-STAT-{HIJ}
           ELSE
               MOVE '23' TO FIO-STAT.

           GO TO FIN-FND-KEY.
      *>>>>
*% END
*% IF EOFPQ
      *<<<< EOFPQ
       LEE-NXT-PRV-X{RPH} SECTION.
       INI-LEE-NXT-PRV-X{RPH}.
           MOVE {KEYRPHRPH} IN CMA-VARI TO {KEYRPHRPH} IN {RPH}. 
           IF FRM-FFLD = FRM-FFLD-PF5
*% IF PGM_VMS
      *<<<< PGM_VMS
               MOVE '{RPH}-KEY-PRV' TO FIO-AKEY
               MOVE FIO-GET-NLS TO FIO-CMND
      *>>>>
*% ELSE
      *<<<< NOT PGM_VMS
               MOVE FIO-GET-LEQ TO FIO-CMND
      *>>>>
*% END
               PERFORM {SISREG}-FIO-{RPH}
               MOVE FIO-GET-PRV TO FIO-CMND
           ELSE
               MOVE FIO-GET-NLS TO FIO-CMND
               PERFORM {SISREG}-FIO-{RPH}
               MOVE FIO-GET-NXT TO FIO-CMND.

           PERFORM {SISREG}-FIO-{RPH}.
           MOVE FIO-STAT TO PGM-STAT-{RPH}.
           IF FIO-STAT-OKS 
               MOVE FIO-END-BRW TO FIO-CMND
               PERFORM {SISREG}-FIO-{RPH}.
           IF PGM-STAT-{RPH}-OKS AND
              {KEYPADRPH} IN {RPH} = {KEYPADPAD} IN CMA-VARI
               MOVE {KEYHIJRPH} IN {RPH} TO {KEYHIJHIJ} IN {HIJ}
               MOVE FIO-GET-KEY TO FIO-CMND
               PERFORM {SISHIJ}-FIO-{HIJ}
               IF FIO-STAT-OKS
                   MOVE 3 TO WSS-IBUS
                   MOVE {CAIREG} IN {HIJ} TO {CAIFLD} IN {FRM}-FLD
                   MOVE {IICREG} IN {HIJ} TO {IICFLD} IN {FRM}-FLD
               ELSE
                   MOVE 'DAT ERR' TO MSG-COD-MENS
                   MOVE '{SISREG}' TO MSG-COD-SIST
                   PERFORM GET-MSG
                   MOVE MSG-GLS-DESC TO FRM-MENS
           ELSE
               MOVE '23' TO FIO-STAT.

       FIN-LEE-NXT-PRV-X{RPH}.
           EXIT.

       LEE-NXT-PRV-X{PAD} SECTION.
       INI-LEE-NXT-PRV-X{PAD}.
           MOVE {KEYPADPAD} IN CMA-VARI TO {KEYPADPAD} IN {PAD}.
           MOVE FIO-GET-KEY    TO FIO-CMND.
           PERFORM {SISPAD}-FIO-{PAD}.
           IF CMA-IND-KPAD IN CMA-VARI = 'I'
               MOVE '{KEYPAD}'  TO FIO-AKEY
           ELSE
               MOVE '{KEYPADALT}'  TO FIO-AKEY.

      *FLB CST  13-OCT-1993 
           MOVE FIO-GET-NLS TO FIO-CMND.
           PERFORM {SISPAD}-FIO-{PAD}.
      * BUSCA POR LLAVE SECUNDARIA EL REGISTRO DE PANTALLA ANTERIOR
           PERFORM BUS-{PAD}-ANT UNTIL
                FIO-STAT-OKS AND
                {KEYPADPAD} IN {PAD} = {KEYPADPAD} IN CMA-VARI OR
                NOT FIO-STAT-OKS.

           MOVE 0 TO WSS-IBUS.
           MOVE '23' TO PGM-STAT-{PAD}.
           IF FIO-STAT-OKS 
               PERFORM LEE-NXT-PRV-{PAD}
               IF FRM-FFLD = FRM-FFLD-PF7
                   MOVE '{SISHIJ}'      TO FIO-SIST
                   MOVE 'VSN '     TO TAB-COD-TTAB IN TAB
*% IF PGM_ARG
      *<<<< PGM_ARG
                   MOVE 'SISNOVSI'   TO TAB-COD-CTAB IN TAB
                   MOVE FIO-GET-KEY TO FIO-CMND
                   PERFORM GNS-FIO-TAB
                   IF FIO-STAT-OKS AND
                      TAB-IND-VIGE IN TAB = 'S'
                       NEXT SENTENCE
                   ELSE
                       MOVE 0 TO WSS-IBUS
                       MOVE '23' TO PGM-STAT-{PAD}
                       PERFORM LEE-NXT-PRV-{PAD}.
      *>>>>
*% ELSE
      *<<<< NOT PGM_ARG
                   MOVE 'SISVSI'   TO TAB-COD-CTAB IN TAB
                   MOVE FIO-GET-KEY TO FIO-CMND
                   PERFORM GNS-FIO-TAB
                   IF FIO-STAT-OKS AND
                      TAB-IND-VIGE IN TAB = 'S'
                       MOVE 0 TO WSS-IBUS
                       MOVE '23' TO PGM-STAT-{PAD}
                       PERFORM LEE-NXT-PRV-{PAD}.
      *>>>>
*% END
      *FLB CST  13-OCT-1993 
       FIN-LEE-NXT-PRV-X{PAD}.
           EXIT.

       BUS-{PAD}-ANT SECTION.
       INI-BUS-{PAD}-ANT.
           IF CMA-IND-KPAD IN CMA-VARI = 'I'
               MOVE '{KEYPAD}'  TO FIO-AKEY
           ELSE
               MOVE '{KEYPADALT}'  TO FIO-AKEY.
           MOVE FIO-GET-NXT TO FIO-CMND.
           PERFORM {SISPAD}-FIO-{PAD}.
       FIN-BUS-{PAD}-ANT.
           EXIT.

       LEE-NXT-PRV-{PAD} SECTION.
       INI-LEE-NXT-PRV-{PAD}.
           IF FRM-FFLD = FRM-FFLD-PF7
*% IF PGM_VMS
      *<<<< PGM_VMS
               MOVE '{PAD}-GLS-NOMD' TO FIO-AKEY
      *>>>>
*% END
               MOVE FIO-GET-PRV TO FIO-CMND
           ELSE
               MOVE FIO-GET-NXT TO FIO-CMND.
*% IF PGM_VMS
      *<<<< PGM_VMS
           IF FRM-FFLD = FRM-FFLD-PF8
      *>>>>
*% END
           IF CMA-IND-KPAD IN CMA-VARI = 'I'
               MOVE '{KEYPAD}'  TO FIO-AKEY
           ELSE
               MOVE '{KEYPADALT}'  TO FIO-AKEY.
           PERFORM {SISPAD}-FIO-{PAD}.
           MOVE FIO-STAT TO PGM-STAT-{PAD}.
           IF FIO-STAT-OKS
               MOVE 1 TO WSS-IBUS.
       FIN-LEE-NXT-PRV-{PAD}.
           EXIT.

       BUS-ULT-{HIJ} SECTION.
       INI-BUS-ULT-{HIJ}.
*% IF PGM_VMS
      *<<<< PGM_VMS
           STRING {KEYPADPAD} IN {PAD}
                  '999999999999' DELIMITED BY SIZE
              INTO {RPH}-KEY-PRV IN {RPH}.
      *    se busca el ultimo hijo, luego de encontrar el padre
           MOVE '{RPH}-KEY-PRV' TO FIO-AKEY.
           MOVE FIO-GET-PRV TO FIO-CMND.
      *>>>>
*% END
*% IF PGM_DTC OR PGM_DB2
      *<<<< PGM_DTC OR PGM_DB2
           MOVE {KEYPADPAD} IN {PAD} TO {KEYPADRPH} IN {RPH}.
      *    se busca el ultimo hijo, luego de encontrar el padre
           MOVE '999999999999' TO {KEYHIJRPH} IN {RPH}.
           MOVE FIO-GET-LEQ TO FIO-CMND.
      *>>>>
*% END
*% IF NOT PGM_VSI
      *<<<< NOT PGM_VSI
           PERFORM {SISREG}-FIO-{RPH}.
           IF FIO-STAT-OKS AND 
              {KEYPADRPH} IN {RPH} = {KEYPADPAD} IN {PAD}
               MOVE {KEYHIJRPH} IN {RPH} TO {KEYHIJHIJ} IN {HIJ}
               MOVE FIO-GET-KEY TO FIO-CMND
               PERFORM {SISHIJ}-FIO-{HIJ}
               IF FIO-STAT-OKS
                   MOVE 3 TO WSS-IBUS
                   MOVE {CAIREG} IN {HIJ} TO {CAIFLD} IN {FRM}-FLD
                   MOVE {IICREG} IN {HIJ} TO {IICFLD} IN {FRM}-FLD.
      *>>>>
*% END
*% IF PGM_VSI
      *<<<< PGM_VSI
      *    se busca el ultimo hijo, luego de encontrar el padre
           MOVE {KEYPADPAD} IN {PAD} TO {KEYPADRPH} IN {RPH}.
           MOVE SPACES               TO {KEYHIJRPH} IN {RPH}.
           MOVE SPACES               TO {KEYHIJHIJ} IN {HIJ}.
           MOVE FIO-GET-NLS TO FIO-CMND.
           PERFORM {SISREG}-FIO-{RPH}.
           IF NOT (
               FIO-STAT-OKS AND 
              {KEYPADRPH} IN {RPH} = {KEYPADPAD} IN {PAD}
                  )
               MOVE '{RPH}    NEX' TO MSG-COD-MENS
               GO TO FIN-BUS-ULT-{HIJ}.
       LUP-BUS-ULT-{HIJ}.
           MOVE {KEYHIJRPH} IN {RPH} TO {KEYHIJHIJ} IN {HIJ}.
           MOVE FIO-GET-NXT TO FIO-CMND.
           PERFORM {SISREG}-FIO-{RPH}.
           IF FIO-STAT-OKS AND 
              {KEYPADRPH} IN {RPH} = {KEYPADPAD} IN {PAD}
               GO TO LUP-BUS-ULT-{HIJ}.
           IF FIO-STAT-OKS 
               MOVE FIO-END-BRW TO FIO-CMND
               PERFORM {SISREG}-FIO-{RPH}.
           IF {KEYHIJHIJ} IN {HIJ} > SPACES
               MOVE FIO-GET-KEY TO FIO-CMND
               PERFORM {SISHIJ}-FIO-{HIJ}
               IF FIO-STAT-OKS
                   MOVE 3 TO WSS-IBUS
                   MOVE {CAIREG} IN {HIJ} TO {CAIFLD} IN {FRM}-FLD
                   MOVE {IICREG} IN {HIJ} TO {IICFLD} IN {FRM}-FLD.

           MOVE {KEYPADPAD} IN {PAD} TO {KEYPADRPH} IN {RPH}.
           MOVE {KEYHIJHIJ} IN {HIJ} TO {KEYHIJRPH} IN {RPH}.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM {SISREG}-FIO-{RPH}.
      *>>>>
*% END
       FIN-BUS-ULT-{HIJ}.
           EXIT.
      *>>>>
*% END
*% IF EOFPU
      *<<<< EOFPU

       ANL-KEY-ALL SECTION.
       INI-ANL-KEY-ALL.
       FIN-ANL-KEY-ALL.
           EXIT.

       BCK-OUT SECTION.
       INI-BCK-OUT.
*% IF NOT PGM_VMS
      *<<<< NOT PGM_VMS
           MOVE FIO-BCK-OUT TO FIO-CMND.
           PERFORM {SISREG}-FIO-{RPH}.
           IF FIO-STAT-OKS
      *        Para informar que el backout se realizo con exito
               MOVE '49' TO FIO-STAT.
      *>>>>
*% END
       FIN-BCK-OUT.
           EXIT.                                                                
 
      * INIT
      * ====

       INI-REG-{RPH} SECTION.
       INI-INI-REG-{RPH}.
*% INCLUDE INI_RPH OF '{SISHIJ}SRC:PGMMAN{FRM}.SRC'
       FIN-INI-REG-{RPH}.
           EXIT.

      * GET-UPD
      * =======

       GET-UPD-{RPH} SECTION.
       INI-GET-UPD-{RPH}.
           MOVE {CAIFLD} IN {FRM}-FLD TO {CAIREG} IN {RPH}.
           MOVE {IICFLD} IN {FRM}-FLD TO {IICREG} IN {RPH}.
           MOVE '{KEYHIJRPH}'  TO FIO-AKEY.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM {SISREG}-FIO-{RPH}.
           IF NOT FIO-STAT-OKS
                MOVE WSS-PRIMER TO WSS-M{RPH}
      *FLB CST 22-SEP-1993
      *         MOVE FIO-MENS TO FRM-MENS
                GO TO FIN-GET-UPD-{RPH}.

           MOVE FIO-GET-KEY-UPD TO FIO-CMND.
           PERFORM {SISREG}-FIO-{RPH}.

           IF {PAD}-CAI-I{MNECORPAD} IN {FRM}-FLD = 
              {RPH}-CAI-I{MNECORPAD} IN {RPH} AND

              {PAD}-IIC-I{MNECORPAD} IN {FRM}-FLD = 
              {RPH}-IIC-I{MNECORPAD} IN {RPH}
               MOVE WSS-MISMO TO WSS-M{RPH}
               MOVE FIO-ULK-REC TO FIO-CMND
               PERFORM {SISREG}-FIO-{RPH}
           ELSE
               MOVE WSS-OTRO  TO WSS-M{RPH}.
       FIN-GET-UPD-{RPH}.
           EXIT.

      * PUT
      * ===

       PUT-{RPH} SECTION.
       INI-PUT-{RPH}.
           IF {PAD}-IND-I{MNECORPAD} IN {FRM}-FLD NOT = 'M'
               PERFORM INI-REG-{RPH}
               MOVE SCR-USER TO {RPH}-IDN-USU-ING IN {RPH}
               MOVE SCR-OTRN TO {RPH}-TML-ACT     IN {RPH}
               MOVE HOY-FHOY TO {RPH}-FEC-ULT-ACT IN {RPH}
               MOVE HOY-HHOY TO {RPH}-HOR-ACT     IN {RPH}
               MOVE HOY-FHOY TO {RPH}-FEC-ING-SIS IN {RPH}
               MOVE 'I'      TO {RPH}-MSC-TACC    IN {RPH}
               MOVE {PAD}-CAI-I{MNECORPAD} IN {FRM}-FLD TO 
                    {RPH}-CAI-I{MNECORPAD} IN {RPH}
               MOVE {PAD}-IIC-I{MNECORPAD} IN {FRM}-FLD TO 
                    {RPH}-IIC-I{MNECORPAD} IN {RPH}
               MOVE {CAIREG} IN {HIJ} TO {CAIREG} IN {RPH}
               MOVE {IICREG} IN {HIJ} TO {IICREG} IN {RPH}
*% IF PGM_VMS
      *<<<< PGM_VMS
               MOVE {KEYRPHRPH} IN {RPH} TO {RPH}-KEY-PRV.
      *>>>>
*% END
               MOVE FIO-PUT TO FIO-CMND
               PERFORM {SISREG}-FIO-{RPH}
               IF NOT FIO-STAT-OKS
      *        Error inconsistencia en el ingreso : hacer LOGTB e informar      
                   MOVE FIO-MENS TO FRM-MENS
                   PERFORM BCK-OUT.
       FIN-PUT-{RPH}.
           EXIT.

      * MOD
      * ===

       MOD-{RPH} SECTION.
       INI-MOD-{RPH}.
           IF {PAD}-IND-I{MNECORPAD} IN {FRM}-FLD = 'M' OR 
              WSS-MISMO-{RPH}
               GO TO FIN-MOD-{RPH}.
           MOVE FIO-DEL TO FIO-CMND.
           PERFORM {SISREG}-FIO-{RPH}.
           IF NOT FIO-STAT-OKS
      *    Error inconsistencia en la eliminacion : hacer LOGTB e informar  
               MOVE FIO-MENS TO FRM-MENS
               PERFORM BCK-OUT
               GO TO FIN-MOD-{RPH}
           ELSE
               PERFORM PUT-{RPH}.
           IF NOT FIO-STAT-OKS
      *        Error inconsistencia en la eliminacion : hacer LOGTB e informar  
               MOVE FIO-MENS TO FRM-MENS
               PERFORM BCK-OUT
               GO TO FIN-MOD-{RPH}.
       FIN-MOD-{RPH}.
           EXIT.

      *DELETE
      *======

       DEL-{RPH} SECTION.
       INI-DEL-{RPH}.
           MOVE {KEYHIJHIJ} IN {HIJ} TO {KEYHIJRPH} IN {RPH}.
           MOVE '{KEYHIJRPH}' TO FIO-AKEY.
           MOVE FIO-GET-NLS TO FIO-CMND.
           PERFORM {SISREG}-FIO-{RPH}.
           IF NOT ( FIO-STAT-OKS AND
              {KEYHIJRPH} IN {RPH} = {KEYHIJHIJ} IN {HIJ} )
               MOVE '00' TO FIO-STAT
               IF FIO-STAT-OKS 
                   MOVE '{KEYHIJRPH}' TO FIO-AKEY
                   MOVE FIO-END-BRW TO FIO-CMND
                   PERFORM {SISREG}-FIO-{RPH}
                   GO TO FIN-DEL-{RPH}
               ELSE
                   GO TO FIN-DEL-{RPH}.
       LUP-DEL-{RPH}.
           MOVE '{KEYHIJRPH}' TO FIO-AKEY.
           MOVE FIO-END-BRW TO FIO-CMND.
           PERFORM {SISREG}-FIO-{RPH}.

           MOVE FIO-GET-KEY-UPD TO FIO-CMND.
           PERFORM {SISREG}-FIO-{RPH}.
           IF NOT FIO-STAT-OKS
               GO TO FIN-DEL-{RPH}.
           MOVE FIO-DEL TO FIO-CMND.
           PERFORM {SISREG}-FIO-{RPH}.
           IF NOT FIO-STAT-OKS
               GO TO FIN-DEL-{RPH}.

           MOVE {KEYPADRPH} IN CMA-VARI TO {KEYPADRPH} IN {RPH}.
           MOVE '{KEYHIJRPH}' TO FIO-AKEY.
*% IF NOT PGM_DB2
      *<<<< NOT PGM_DB2
           MOVE FIO-GET-NLS TO FIO-CMND.
      *>>>>
*% ELSE
      *<<<< PGM_DB2
           MOVE FIO-GET-NXT TO FIO-CMND.
      *>>>>
*% END
           PERFORM {SISREG}-FIO-{RPH}.
           IF FIO-STAT-OKS AND
              {KEYHIJHIJ} IN {HIJ} = {KEYHIJRPH} IN {RPH}
               GO TO LUP-DEL-{RPH}.
           MOVE '00' TO FIO-STAT.
       FIN-DEL-{RPH}.
           EXIT.

      *>>>>
*% END
*% IF EOFPQPU
      *<<<< EOFPQPU

       GET-{RPH} SECTION.
       INI-GET-{RPH}.
           MOVE {KEYPADPAD} IN {PAD} TO {KEYPADRPH} IN {RPH}.
           MOVE {CAIFLD} IN {FRM}-FLD TO {CAIREG} IN {RPH}.
           MOVE {IICFLD} IN {FRM}-FLD TO {IICREG} IN {RPH}.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM {SISREG}-FIO-{RPH}.
           IF FIO-STAT-OKS AND 
              {KEYPADRPH} IN {RPH} = {KEYPADPAD} IN {PAD}
               MOVE {KEYHIJRPH} IN {RPH} TO {KEYHIJHIJ} IN {HIJ}
               MOVE 2 TO WSS-IBUS
               MOVE FIO-GET-KEY TO FIO-CMND
               PERFORM {SISHIJ}-FIO-{HIJ}
               IF FIO-STAT-OKS
                   MOVE 3 TO WSS-IBUS.
       FIN-GET-{RPH}.
           EXIT.

       GET-CUR-{RPH} SECTION.
       INI-GET-CUR-{RPH}.
           MOVE {KEYHIJHIJ} IN {HIJ} TO {KEYHIJRPH} IN {RPH}.
           MOVE '{KEYHIJRPH}' TO FIO-AKEY.
           MOVE FIO-GET-NLS TO FIO-CMND.
           PERFORM {SISREG}-FIO-{RPH}.
           IF FIO-STAT-OKS
               MOVE '{KEYHIJRPH}' TO FIO-AKEY
               MOVE FIO-END-BRW TO FIO-CMND
               PERFORM {SISREG}-FIO-{RPH}.
           IF NOT
              {KEYHIJHIJ} IN {HIJ} = {KEYHIJRPH} IN {RPH}
               MOVE '23' TO FIO-STAT.
       FIN-GET-CUR-{RPH}.
           EXIT.

       COPY {SISPAD}BF{PAD}.
       COPY {SISREG}BF{RPH}.
       COPY {SISPAD}BG{MNECORPAD}.

*% IF PGM_PU OR NOT NO_CIC_PQ
      *<<<< PGM_PU OR NOT NO_CIC_PQ
       COPY GNSBFCIC.
      *>>>>
*% END
*% IF PGM_PU
      *<<<< PGM_PU
       COPY GNSBGCIC.
      *>>>>
*% END
*% IF UNS_FLD
      *<<<< UNS_FLD
       COPY GNSBGCPT.
       COPY GNSBGSTR.
      *>>>>
*% END

      *>>>>
*% END
*% IF CMNMODRET
      *<<<< CMN_MOD_RET

           IF NOT (
              {PAD}-IND-I{MNECORPAD} IN {FRM}-FLD = 'M' OR
              ( {PAD}-CAI-I{MNECORPAD} IN {FRM}-FLD = SPACES AND
*% IF NOT PGM_ARG
      *<<<< NOT PGM_ARG
                 {PAD}-IIC-I{MNECORPAD} IN {FRM}-FLD = ZEROES ) OR
      *>>>>
*% ELSE
      *<<<< PGM_ARG
                 {PAD}-IIC-I{MNECORPAD} IN {FRM}-FLD NOT > SPACES ) OR
      *>>>>
*% END
              ( {CAIFLD} IN {FRM}-FLD = SPACES AND
                {IICFLD} IN {FRM}-FLD = {PICHIJ} ))
              
               PERFORM GET-UPD-{RPH}
*% INCLUDE GET_UPD_RPH OF '{SISHIJ}SRC:PGMMAN{FRM}.SRC'
           ELSE
      *        No modifica ni ingresa porque no hay {RPH}
               MOVE WSS-MISMO TO WSS-M{RPH}.

      *>>>>
*% END
*% IF FINCMNMOD
      *<<<< FIN_CMN_MOD

           IF NOT FIO-STAT-OKS                                                  
      *        Error inconsistencia en la modificacion : informar               
               MOVE FIO-MENS TO FRM-MENS
               GO TO FIN-CMN-MOD.

           IF WSS-OTRO-{RPH}
               PERFORM MOD-{RPH}
               IF NOT FIO-STAT-OKS
                   MOVE '{RPH}MODERR' TO MSG-COD-MENS
                   MOVE '{SISHIJ}' TO MSG-COD-SIST
                   PERFORM GET-MSG
                   MOVE MSG-GLS-MENS TO FRM-MENS
                   GO TO FIN-CMN-MOD
               ELSE
                   NEXT SENTENCE
           ELSE
           IF WSS-PRIMER-{RPH}
               PERFORM PUT-{RPH}
               IF NOT FIO-STAT-OKS
                   MOVE '{RPH}INGERR' TO MSG-COD-MENS
                   MOVE '{SISHIJ}' TO MSG-COD-SIST
                   PERFORM GET-MSG
                   MOVE MSG-GLS-MENS TO FRM-MENS
                   GO TO FIN-CMN-MOD.
      *>>>>
*% END
*% IF STDFLD AND NO_HDR_CST
      *<<<< STDFLD AND NO_HDR_CST
*% INCLUDE 'GARSRC:STDFLD.SRC'
      *>>>>
*% END
*% IF INICMNING AND NO_HDR_CST 
      *<<<< INICMNING AND NO_HDR_CST 
*% INCLUDE 'GARSRC:LIMFLD.SRC'
      *>>>>
*% END
*% IF CMNING
*% INCLUDE 'GARSRC:GETCICONL.SRC'
           IF NOT ( {PAD}-IND-I{MNECORPAD} IN {FRM}-FLD = 'M' OR
               ( {PAD}-CAI-I{MNECORPAD} IN {FRM}-FLD NOT > SPACES AND
*% IF NOT PGM_ARG
      *<<<< NOT PGM_ARG
                 {PAD}-IIC-I{MNECORPAD} IN {FRM}-FLD NOT > ZEROES )
      *>>>>
*% ELSE
      *<<<< PGM_ARG
                 {PAD}-IIC-I{MNECORPAD} IN {FRM}-FLD NOT > SPACES ) 
      *>>>>
*% END
                  )
*% INCLUDE ESC_RPH OF '{SISHIJ}SRC:PGMMAN{FRM}.SRC'
               PERFORM PUT-{RPH}
               IF NOT FIO-STAT-OKS
                   GO TO FIN-CMN-ING.

*% INCLUDE MOD_HIJ OF '{SISHIJ}SRC:PGMMAN{FRM}.SRC'
*% END
*% IF FINCMNING
      *<<<< FIN_CMN_ING
           IF NOT FIO-STAT-OKS                                                  
      *        Error inconsistencia en el ingreso : informar                    
               MOVE FIO-MENS TO FRM-MENS
               GO TO FIN-CMN-ING.                                               
      *>>>>
*% END
*% IF FINCMNELI
      *<<<< FIN_CMN_ELI
           IF NOT FIO-STAT-OKS
      *        Error inconsistencia en la eliminacion : informar
               MOVE FIO-MENS TO FRM-MENS
               GO TO FIN-CMN-ELI.

           PERFORM DEL-{RPH}.
           IF NOT FIO-STAT-OKS
               GO TO FIN-CMN-ELI.
      *>>>>
*% END
