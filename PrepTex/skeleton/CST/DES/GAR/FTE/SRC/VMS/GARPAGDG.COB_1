       IDENTIFICATION DIVISION.
      *========================
       PROGRAM-ID. GARPAGDG.
       AUTHOR.     CONSIST.
       DATE-WRITTEN. 07-Jul-93 03:59 PM.

      * ACTUALIZA ARCHIVO GARGDG EN FORMA INTERACTIVA.

       ENVIRONMENT DIVISION.
      *=====================
       CONFIGURATION SECTION.
      *----------------------
       SPECIAL-NAMES.
               DECIMAL-POINT IS COMMA.

       DATA DIVISION.
      *==============

       WORKING-STORAGE SECTION.
      *------------------------
       COPY GARBRGDG.
       COPY GNSBRTAB.
       COPY GNSBRMSC.
       COPY GNSBRMSG.
       COPY GNSWCFIO.
       COPY GNSWVFIO.
       COPY GNSWGFRM.
       COPY GNSWGSCR.



      *<<<< CMAVARI
      *<<<< NOT PGM_IBM
       01  SCR-VARI-AUX.
      *>>>>
           03 CMA-VARI.
              05 SCR-IND-MGDD     VALUE SPACES      PIC X(01).
                 88 MULTIPLES-GDD      VALUE 'M'.
              05 DBC-KEY-IDBC.
                 07 DBC-CAI-ICLI                    PIC X(04).
                 07 DBC-IIC-ICLI                    PIC 9(08).
              05 CMA-IND-KPAD     VALUE SPACES      PIC X(01).
              05 GAR-CLV-GDD-1.
                 07 GDD-CIC-ICLI  VALUE SPACES      PIC X(12).
                 07 GAR-CLV-GDD-2  VALUE SPACES      PIC X(12).
  
      *>>>>
      *<<<< FIN_SCR_VARI
              05 GAR-NUM-SIS                        PIC X(04).
              05 GAR-COD-CRR                        PIC X(08).
              05 GAR-IND-CPL                        PIC X(01).
              05 GAR-IND-EXI-GAP                    PIC X(01).
              05 GAR-IND-VTO                        PIC X(01).
              05 GAR-PCT-PON                        PIC S9(03)V9(02).
              05 GAR-PCT-AJT-SUP                    PIC S9(03)V9(02).
              05 WSS-EST-ANT                        PIC X(02).
              05 WSS-ES1-1                          PIC X(02).
              05 WSS-ES1-2                          PIC X(02).
              05 WSS-ES1-3                          PIC X(02).
              05 WSS-ES1-4                          PIC X(02).
              05 CMA-IND-DAP                        PIC X(01).
              05 FRM-CAI-IOPD                       PIC X(04).
              05 FRM-IIC-IOPD                       PIC X(08).
              05 SCR-IND-V001                       PIC X(01).
              05 CMA-GLS-DISP                       PIC X(13).
      *>>>>
       COPY GARWIGDG.
       COPY GNSWGFEC.
       COPY GNSWGHOY.
       COPY GNSWCVRF.
       COPY GNSWVVRF.
       COPY GNSWGIDC.
       COPY GNSWGSYS.
       COPY TABBROFI.
       COPY TABBRUSR.

      *<<<< WSS
      *<<<< WSS
       01  PGM-VAR-ADIC.
           03 PGM-STAT-ADIC.
              05 PGM-STAT-GDD.
                 88 PGM-STAT-GDD-NUL VALUE '  '.
                 07 PGM-STT1-GDD        VALUE '2' PIC X(01).
                    88 PGM-STAT-GDD-OKS VALUE '0'.
                 07 PGM-STT2-GDD        VALUE '3' PIC X(01).
       01  WSS-BUS-VARI.
           03 WSS-IBUS                 VALUE 0      PIC 9(01).
           03 WSS-IBUS-GDG           VALUE 0      PIC 9(01).
       01  WSS-GDD-VARI.
              03 WSS-MGDD              VALUE 0      PIC 9(01).
                 88 WSS-MISMO-GDD      VALUE 0.
                 88 WSS-OTRO-GDD       VALUE 1.
                 88 WSS-PRIMER-GDD     VALUE 2.
              03 WSS-MISMO               VALUE 0    PIC 9(01).
              03 WSS-OTRO                VALUE 1    PIC 9(01).
              03 WSS-PRIMER              VALUE 2    PIC 9(01).
       COPY SGCBRDBC.
       COPY GARBRGDD.
      *<<<< UNS_FLD
       COPY GNSWGCPT.
       COPY GNSWGSTR.
      *>>>>
      *>>>>
       01  WSS-VARI.
           03  WSS-IND-EXI-GDO                      PIC X(01).

      *<<<< PGM_VMS OR ( PGM_ AND PGM_DTC )
       COPY GARWGDAP.

       COPY DAPBROPD.
       COPY DAPBRRCC.
      *>>>>
      *<<<< PGM_VMS OR PGM_DTC
       COPY GARBRGMO.
       COPY GARBRTAG.
       COPY GARBRGDO.
      *>>>>
      *<<<< PGM_PU
       COPY GARWGVCG.
      *<<<< PGM_VMS OR ( PGM_ AND PGM_DTC )
       COPY GARWGIDP.
      *>>>>
      *<<<< NOT ( PGM_VSI OR PGM_DB2 )
       COPY GARWGELI.
      *>>>>
       01  WSS-VARI-ADI.     
           03 WSS-REG                             PIC X(03).
           03 WSS-VCB.
               05 WSS-TIP-VCB                     PIC X(01).
               05 WSS-COD-VCB                     PIC X(03).
               05 WSS-TIP-CMB                     PIC X(02).

       COPY GNSBRCIC.
       COPY GNSWGCIC.
      *>>>>
      *>>>>

       01  PGM-VARI.
           03 PGM-ICLR                  VALUE ' '       PIC X(01).
           03 PGM-LIMPIAR-TODO          VALUE ' '       PIC X(01).
           03 PGM-LIMPIAR-LLAVES        VALUE 'K'       PIC X(01).
           03 PGM-LIMPIAR-CAMPOS        VALUE 'F'       PIC X(01).
           03 PGM-NO-LIMPIAR-NADA       VALUE 'N'       PIC X(01).
           03 PGM-STAT.
              05 PGM-STAT-GDG.
                 88 PGM-STAT-GDG-NUL    VALUE '  '.
                 07 PGM-STT1-GDG        VALUE '2' PIC X(01).
                    88 PGM-STAT-GDG-OKS VALUE '0'.
                 07 PGM-STT2-GDG        VALUE '3' PIC X(01).
              05 PGM-STAT-DBC.
                 88 PGM-STAT-DBC-NUL    VALUE '  '.
                 07 PGM-STT1-DBC        VALUE '2' PIC X(01).
                    88 PGM-STAT-DBC-OKS VALUE '0'.
                 07 PGM-STT2-DBC        VALUE '3' PIC X(01).
           03 PGM-SRNF                  VALUE '23'      PIC X(02).
           03 PGM-SOKS                  VALUE '00'      PIC X(02).
           03 PGM-SNUL                  VALUE '  '      PIC X(02).
           03 PGM-NCUR                  VALUE "[?25l" PIC X(06).
           03 PGM-SCUR                  VALUE "[?25h" PIC X(06).

       PROCEDURE DIVISION.
      *===================

       MAIN SECTION.
       INI-MAIN.
           PERFORM INI.
       LUP-MAIN.
           IF SCR-INST = SCR-INST-HCM
                 PERFORM SCR-COM.
           IF SCR-CCPP = 'MOD'
                 PERFORM SCR-MOD
           ELSE
           IF SCR-CCPP = 'ING'
                 PERFORM SCR-ING
           ELSE
           IF SCR-CCPP = 'ACC'
                 PERFORM SCR-ACC
           ELSE
           IF SCR-CCPP = 'ELI'
                 PERFORM SCR-ELI
           ELSE
           IF SCR-CCPP = 'ACT'
                 PERFORM SCR-ACT
           ELSE
           IF SCR-CCPP = 'PGM'
                 PERFORM SCR-PGM
           ELSE
                 MOVE SCR-INST-HCM TO SCR-INST.

           GO TO LUP-MAIN.
       FIN-MAIN.
           EXIT.

       INI SECTION.
       INI-INI.

           MOVE 'GARPAGDG' TO SCR-PROG.
           CALL 'GNSPPHDR'.
           MOVE SCR-INST-HKY TO SCR-INST.

           MOVE FIO-ACCS-UPD TO FIO-ACCS.
           MOVE FIO-ACC      TO FIO-CMND.
           MOVE 'GNS'        TO FIO-SIST.
           PERFORM GNS-FIO-MSG.
           MOVE FIO-INP TO FIO-CMND.
           MOVE 'GNS'   TO FIO-SIST.
           PERFORM GNS-FIO-MSG.

           MOVE 'GAR'        TO FIO-SIST.
           MOVE FIO-ACC      TO FIO-CMND.
           MOVE FIO-ACCS-UPD TO FIO-ACCS.
           PERFORM GNS-FIO-TAB.
           MOVE 'GAR'   TO FIO-SIST.
           MOVE FIO-INP TO FIO-CMND.
           PERFORM GNS-FIO-TAB.


      *<<<< INI_FIO

           MOVE FIO-ACCS-UPD TO FIO-ACCS.
           MOVE FIO-ACC      TO FIO-CMND.
           MOVE 'GNS'        TO FIO-SIST.
           PERFORM GNS-FIO-CIC.
           MOVE FIO-UPD TO FIO-CMND.
           PERFORM GNS-FIO-CIC.

           MOVE FIO-ACCS-UPD TO FIO-ACCS.
           MOVE FIO-ACC      TO FIO-CMND.
           MOVE 'TAB'        TO FIO-SIST.
           PERFORM GNS-FIO-TAB.
           MOVE FIO-INP TO FIO-CMND.
           PERFORM GNS-FIO-TAB.

           MOVE FIO-ACCS-UPD TO FIO-ACCS.
           MOVE FIO-ACC      TO FIO-CMND.
           MOVE 'TAB'        TO FIO-SIST.
           PERFORM TAB-FIO-OFI.
           MOVE FIO-INP TO FIO-CMND.
           PERFORM TAB-FIO-OFI.

           MOVE FIO-ACCS-UPD TO FIO-ACCS.
           MOVE FIO-ACC      TO FIO-CMND.
           MOVE 'TAB'        TO FIO-SIST.
           PERFORM TAB-FIO-USR.
           MOVE FIO-INP TO FIO-CMND.
           PERFORM TAB-FIO-USR.

           MOVE FIO-ACCS-UPD TO FIO-ACCS.
           MOVE FIO-ACC      TO FIO-CMND.
           MOVE 'SGC'        TO FIO-SIST.
           PERFORM SGC-FIO-DBC.
           MOVE FIO-INP TO FIO-CMND.
           PERFORM SGC-FIO-DBC.

           MOVE FIO-ACCS-UPD TO FIO-ACCS.
           MOVE FIO-ACC      TO FIO-CMND.
           MOVE 'SGC'        TO FIO-SIST.
           PERFORM SGC-FIO-TAB.
           MOVE FIO-INP TO FIO-CMND.
           PERFORM SGC-FIO-TAB.

           MOVE FIO-ACCS-UPD TO FIO-ACCS.
           MOVE FIO-ACC      TO FIO-CMND.
           MOVE 'GAR'        TO FIO-SIST.
           PERFORM GAR-FIO-GDD.
           MOVE FIO-UPD TO FIO-CMND.
           PERFORM GAR-FIO-GDD.

           MOVE FIO-ACCS-UPD TO FIO-ACCS.
           MOVE FIO-ACC      TO FIO-CMND.
           MOVE 'GAR'        TO FIO-SIST.
           PERFORM GAR-FIO-GDO.
           MOVE FIO-UPD TO FIO-CMND.
           PERFORM GAR-FIO-GDO.

           MOVE FIO-INP TO FIO-CMND.
           PERFORM GAR-FIO-TAG.

           MOVE FIO-ACCS-UPD TO FIO-ACCS.
           MOVE FIO-ACC      TO FIO-CMND.
           MOVE 'GAR'        TO FIO-SIST.
           PERFORM GAR-FIO-GMO.
           MOVE FIO-UPD TO FIO-CMND.
           PERFORM GAR-FIO-GMO.

           MOVE FIO-ACCS-UPD TO FIO-ACCS.
           MOVE FIO-ACC      TO FIO-CMND.
           MOVE 'DAP'        TO FIO-SIST.
           PERFORM DAP-FIO-OPD.
           MOVE FIO-UPD TO FIO-CMND.
           PERFORM DAP-FIO-OPD.

           MOVE FIO-ACCS-UPD TO FIO-ACCS.
           MOVE FIO-ACC      TO FIO-CMND.
           MOVE 'DAP'        TO FIO-SIST.
           PERFORM DAP-FIO-RCC.
           MOVE FIO-UPD TO FIO-CMND.
           PERFORM DAP-FIO-RCC.

      *>>>> INI_FIO
           MOVE FIO-ACCS-UPD TO FIO-ACCS.
           MOVE FIO-ACC      TO FIO-CMND.
           PERFORM GAR-FIO-GDG.
           MOVE FIO-UPD TO FIO-CMND.
           PERFORM GAR-FIO-GDG.
      *    MOVE SCR-NLIB TO FRM-NLIB.
      *    MOVE SCR-NMAP TO FRM-NAME.
           MOVE 'GARFMS' TO FRM-NLIB.
           MOVE 'GDG' TO FRM-NAME.
           MOVE FRM-SINI-DBNF TO FRM-SINI.
           MOVE FRM-INI TO FRM-CMND.
           PERFORM GNS-PRO-FRM.
       CMN-INI.
           MOVE SCR-INST-HCM TO SCR-INST.
           INITIALIZE GDG-DFLD.
           INITIALIZE GDG-DFLD-ATR.
           INITIALIZE GDG-DFLD-LEN.
           MOVE GDG-CFLD TO FRM-CFLD.
       FIN-INI.
           EXIT.

       SCR-COM SECTION.
       INI-SCR-COM.

      *     MOVE FRM-MSG TO FRM-CMND.
      *     MOVE GDG-GLS-MENS TO FRM-MENS.
      *     PERFORM GNS-PRO-FRM.
           MOVE SPACES TO FRM-MENS.
      *     PERFORM SCR-CLRA-GDG.
           CALL 'GNSPPCMN'.
       FIN-SCR-COM.
           EXIT.

       SCR-MOD SECTION.
       INI-SCR-MOD.

           PERFORM SCR-RST.
           PERFORM HBL-KEY.
           PERFORM SCR-KEY.
           IF SCR-STAT = SCR-STAT-ABT
               PERFORM DESSCRTRL
               GO TO FIN-SCR-MOD.
       TRL-SCR-MOD.
           PERFORM SCR-TRL.
           IF SCR-INST = SCR-INST-GFL
                PERFORM GET-FLD.
           IF SCR-INST = SCR-INST-GCS
                PERFORM GET-ACC.
           IF SCR-INST = SCR-INST-GAB
                PERFORM GET-CON.
           PERFORM DESSCRTRL.
           IF SCR-FFLD-BSP
               GO TO TRL-SCR-MOD.
      *<<<< PFS_SCR_MOD
           IF ( FRM-FFLD = FRM-FFLD-PF5 OR FRM-FFLD-PF6 OR
                           FRM-FFLD-PF7 OR FRM-FFLD-PF8 ) AND
              SCR-STAT = SCR-STAT-CON
               PERFORM VAL-NUM-KEY-GDG
               PERFORM VAL-NUM-FLD-GDG.
           IF FRM-FFLD = FRM-FFLD-PF5 OR FRM-FFLD-PF6 OR
                         FRM-FFLD-PF7 OR FRM-FFLD-PF8
               PERFORM RST-STAT
               PERFORM FND-SCR-KEY THRU FIN-SCR-KEY
               IF SCR-STAT NOT = SCR-STAT-ABT
                   GO TO TRL-SCR-MOD
               ELSE
                   PERFORM DESSCRTRL
                   GO TO FIN-SCR-MOD.
      *>>>>

       MSG-SCR-MOD.
           IF SCR-STAT = SCR-STAT-CON
               MOVE SPACES TO FRM-MENS
           ELSE
           IF SCR-STAT = SCR-STAT-ABT OR SCR-VFLD = SCR-VFLD-NOT
               MOVE 'MODNOT    ' TO MSG-COD-MENS
               MOVE 'GNS' TO MSG-COD-SIST
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS
           ELSE
               MOVE SPACES TO FRM-MENS
               PERFORM CMN-MOD
               IF FIO-STAT-OKS
                   IF FRM-MENS NOT > SPACES
                       MOVE 'MODYES    ' TO MSG-COD-MENS
                       MOVE 'GNS' TO MSG-COD-SIST
                       PERFORM GET-MSG
                       MOVE MSG-GLS-DESC TO FRM-MENS
                   ELSE
                       NEXT SENTENCE
               ELSE
               IF FRM-MENS NOT > SPACES
                   MOVE 'FIOSTAT' TO MSG-COD-TMSG
                   MOVE FIO-STAT  TO MSG-COD-CMSG
                   MOVE 'GNS'     TO MSG-COD-SIST
                   PERFORM GET-MSG
                   MOVE MSG-GLS-DESC TO FRM-MENS.
       FIN-SCR-MOD.
           PERFORM SCR-DMSG.


       SCR-ING SECTION.
       INI-SCR-ING.

           PERFORM SCR-RST.
           PERFORM HBL-IKY.
           PERFORM GET-IKY.

           IF FRM-STAT-ABT
               MOVE SPACES TO FRM-MENS
               PERFORM DESSCRTRL
               GO TO FIN-SCR-ING.

           MOVE SPACES TO FRM-MENS.
           PERFORM FND-KEY.
           IF FIO-STAT-OKS OR FIO-STAT = FIO-STAT-NEX
               MOVE PGM-NO-LIMPIAR-NADA TO PGM-ICLR
               IF FRM-MENS NOT > SPACES
                   MOVE 'REGEXI    ' TO MSG-COD-MENS
                   MOVE 'GNS' TO MSG-COD-SIST
                   PERFORM GET-MSG
                   MOVE MSG-GLS-DESC TO FRM-MENS
                   MOVE SCR-STAT-ABT TO SCR-STAT
                   PERFORM DESSCRTRL
                   GO TO FIN-SCR-ING
               ELSE
                   MOVE SCR-STAT-ABT TO SCR-STAT
                   PERFORM DESSCRTRL
                   GO TO FIN-SCR-ING.
           MOVE PGM-LIMPIAR-TODO TO PGM-ICLR.
       TRL-SCR-ING.
           PERFORM SCR-TRL.
           IF SCR-INST = SCR-INST-GFL
                PERFORM GET-FLD.
           IF SCR-INST = SCR-INST-GCS
                PERFORM GET-ACC.
           IF SCR-INST = SCR-INST-GAB
                PERFORM GET-CON.
           PERFORM DESSCRTRL.
           IF SCR-FFLD-BSP
               GO TO TRL-SCR-ING.

       MSG-SCR-ING.
           IF SCR-STAT = SCR-STAT-CON
               MOVE SPACES TO FRM-MENS
           ELSE
           IF SCR-STAT = SCR-STAT-ABT OR SCR-VFLD = SCR-VFLD-NOT
               MOVE 'INGNOT    ' TO MSG-COD-MENS
               MOVE 'GNS' TO MSG-COD-SIST
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS
           ELSE
               MOVE SPACES TO FRM-MENS
               PERFORM CMN-ING
               IF FIO-STAT-OKS
                   IF FRM-MENS NOT > SPACES
                       MOVE 'INGYES    ' TO MSG-COD-MENS
                       MOVE 'GNS' TO MSG-COD-SIST
                       PERFORM GET-MSG
                       MOVE MSG-GLS-DESC TO FRM-MENS
                   ELSE
                       NEXT SENTENCE
               ELSE
               IF FRM-MENS NOT > SPACES
                   MOVE 'FIOSTAT' TO MSG-COD-TMSG
                   MOVE FIO-STAT  TO MSG-COD-CMSG
                   MOVE 'GNS'     TO MSG-COD-SIST
                   PERFORM GET-MSG
                   MOVE MSG-GLS-DESC TO FRM-MENS.
       FIN-SCR-ING.
           PERFORM SCR-DMSG.


       SCR-ACC SECTION.
       INI-SCR-ACC.

           PERFORM SCR-RST.
           PERFORM HBL-KEY.
           PERFORM SCR-KEY.
           IF SCR-STAT = SCR-STAT-ABT
               PERFORM DESSCRTRL
               GO TO FIN-SCR-ACC.
       TRL-SCR-ACC.
           PERFORM SCR-TRL.
           IF SCR-INST = SCR-INST-GFL
                PERFORM GET-FLD.
           IF SCR-INST = SCR-INST-GCS
                PERFORM GET-ACC.
           IF SCR-INST = SCR-INST-GAB
                PERFORM GET-CON.
           PERFORM DESSCRTRL.
           IF SCR-FFLD-BSP
               GO TO TRL-SCR-ACC.
      *<<<< PFS_SCR_ACC
           IF FRM-FFLD = FRM-FFLD-PF5 OR FRM-FFLD-PF6 OR
                         FRM-FFLD-PF7 OR FRM-FFLD-PF8
               PERFORM VAL-NUM-KEY-GDG
               PERFORM VAL-NUM-FLD-GDG
               PERFORM RST-STAT
               PERFORM FND-SCR-KEY THRU FIN-SCR-KEY
               IF SCR-STAT NOT = SCR-STAT-ABT
                   GO TO TRL-SCR-ACC
               ELSE
                   PERFORM DESSCRTRL
                   GO TO FIN-SCR-ACC.
      *>>>>

           MOVE SPACES TO FRM-MENS.
           IF SCR-STAT NOT = SCR-STAT-CON
               PERFORM CMN-ACC.
       FIN-SCR-ACC.
           PERFORM SCR-DMSG.


       SCR-ELI SECTION.
       INI-SCR-ELI.

           PERFORM SCR-RST.
           PERFORM HBL-KEY.
           PERFORM SCR-KEY.
           IF SCR-STAT = SCR-STAT-ABT
               PERFORM DESSCRTRL
               GO TO FIN-SCR-ELI.
       TRL-SCR-ELI.
           PERFORM SCR-TRL.
           IF SCR-INST = SCR-INST-GCS
                PERFORM GET-ACC.
           IF SCR-INST = SCR-INST-GAB
                PERFORM GET-CON.
           PERFORM DESSCRTRL.
      *<<<< PFS_SCR_ELI
           IF FRM-FFLD = FRM-FFLD-PF5 OR FRM-FFLD-PF6 OR
                         FRM-FFLD-PF7 OR FRM-FFLD-PF8
               PERFORM VAL-NUM-KEY-GDG
               PERFORM VAL-NUM-FLD-GDG
               PERFORM RST-STAT
               PERFORM FND-SCR-KEY THRU FIN-SCR-KEY
               IF SCR-STAT NOT = SCR-STAT-ABT
                   GO TO TRL-SCR-ELI
               ELSE
                   PERFORM DESSCRTRL
                   GO TO FIN-SCR-ELI.
      *>>>>

           IF SCR-STAT = SCR-STAT-CON
               MOVE SPACES TO FRM-MENS
           ELSE
           IF SCR-STAT = SCR-STAT-ABT OR SCR-VFLD = SCR-VFLD-NOT
               MOVE 'ELINOT    ' TO MSG-COD-MENS
               MOVE 'GNS' TO MSG-COD-SIST
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS
           ELSE
               MOVE SPACES TO FRM-MENS
               PERFORM CMN-ELI
               IF FIO-STAT-OKS
                   IF FRM-MENS NOT > SPACES
                       MOVE 'ELIYES    ' TO MSG-COD-MENS
                       MOVE 'GNS' TO MSG-COD-SIST
                       PERFORM GET-MSG
                       MOVE MSG-GLS-DESC TO FRM-MENS
                   ELSE
                       NEXT SENTENCE
               ELSE
               IF FRM-MENS NOT > SPACES
                   MOVE 'FIOSTAT' TO MSG-COD-TMSG
                   MOVE FIO-STAT  TO MSG-COD-CMSG
                   MOVE 'GNS'     TO MSG-COD-SIST
                   PERFORM GET-MSG
                   MOVE MSG-GLS-DESC TO FRM-MENS.
       FIN-SCR-ELI.
           PERFORM SCR-DMSG.


       SCR-ACT SECTION.
       INI-SCR-ACT.

           PERFORM SCR-RST.
           PERFORM HBL-KEY.
           PERFORM GET-KEY.

           IF FRM-STAT-ABT
               MOVE SPACES TO FRM-MENS
               PERFORM DESSCRTRL
               GO TO FIN-SCR-ACT.

           MOVE SPACES TO FRM-MENS.
           PERFORM FND-KEY.
           IF FIO-STAT-OKS
               MOVE PGM-LIMPIAR-TODO TO PGM-ICLR
               MOVE SCR-ACTU-MOD TO SCR-ACTU
               PERFORM PUT-SCR
           ELSE
           MOVE PGM-NO-LIMPIAR-NADA TO PGM-ICLR
           IF FIO-STAT-EOF
               IF FRM-MENS NOT > SPACES
                   MOVE 'REGEOF    ' TO MSG-COD-MENS
                   MOVE 'GNS' TO MSG-COD-SIST
                   PERFORM GET-MSG
                   MOVE MSG-GLS-DESC TO FRM-MENS
                   MOVE SCR-STAT-ABT TO SCR-STAT
                   PERFORM DESSCRTRL
                   GO TO FIN-SCR-ACT
               ELSE
                   MOVE SCR-STAT-ABT TO SCR-STAT
                   PERFORM DESSCRTRL
                   GO TO FIN-SCR-ACT
           ELSE
           IF FIO-STAT = FIO-STAT-NEX
               IF FRM-MENS NOT > SPACES
                   MOVE 'REGNEX    ' TO MSG-COD-MENS
                   MOVE 'GNS' TO MSG-COD-SIST
                   PERFORM GET-MSG
                   MOVE MSG-GLS-DESC TO FRM-MENS
                   MOVE SCR-STAT-ABT TO SCR-STAT
                   PERFORM DESSCRTRL
                   GO TO FIN-SCR-ACT
               ELSE
                   MOVE SCR-STAT-ABT TO SCR-STAT
                   PERFORM DESSCRTRL
                   GO TO FIN-SCR-ACT
           ELSE
               MOVE PGM-LIMPIAR-TODO TO PGM-ICLR
               MOVE SCR-ACTU-ING TO SCR-ACTU.
       TRL-SCR-ACT.
           PERFORM SCR-TRL.
           IF SCR-INST = SCR-INST-GFL
                PERFORM GET-FLD.
           IF SCR-INST = SCR-INST-GCS
                PERFORM GET-ACC.
           IF SCR-INST = SCR-INST-GAB
                PERFORM GET-CON.
           PERFORM DESSCRTRL.
           IF SCR-FFLD-BSP
               GO TO TRL-SCR-ACT.
      *<<<< PFS_SCR_ACT
           IF ( FRM-FFLD = FRM-FFLD-PF5 OR FRM-FFLD-PF6 OR
                           FRM-FFLD-PF7 OR FRM-FFLD-PF8 ) AND
              SCR-STAT = SCR-STAT-CON
               PERFORM VAL-NUM-KEY-GDG
               PERFORM VAL-NUM-FLD-GDG.
           IF FRM-FFLD = FRM-FFLD-PF5 OR FRM-FFLD-PF6 OR
                         FRM-FFLD-PF7 OR FRM-FFLD-PF8
               PERFORM RST-STAT
               PERFORM FND-SCR-KEY THRU FIN-SCR-KEY
               IF SCR-STAT NOT = SCR-STAT-ABT
                   GO TO TRL-SCR-ACT
               ELSE
                   PERFORM DESSCRTRL
                   GO TO FIN-SCR-ACT.
      *>>>>

           IF SCR-ACTU = SCR-ACTU-MOD
                  PERFORM MSG-SCR-MOD
           ELSE
                  PERFORM MSG-SCR-ING.
       FIN-SCR-ACT.
           PERFORM SCR-DMSG.


       SCR-PGM SECTION.
       INI-SCR-PGM.

           PERFORM SCR-RST.
           PERFORM HBL-KEY.
           PERFORM GET-KEY.

           IF FRM-STAT-ABT
               MOVE SPACES TO FRM-MENS
               PERFORM DESSCRTRL
               GO TO FIN-SCR-PGM.

           MOVE SPACES TO FRM-MENS.
           PERFORM FND-KEY.
           IF FIO-STAT = FIO-STAT-NEX
               IF FRM-MENS NOT > SPACES
                   MOVE 'REGNEX    ' TO MSG-COD-MENS
                   MOVE 'GNS' TO MSG-COD-SIST
                   PERFORM GET-MSG
                   MOVE MSG-GLS-DESC TO FRM-MENS
                   MOVE SCR-STAT-ABT TO SCR-STAT
                   PERFORM DESSCRTRL
                   GO TO FIN-SCR-PGM
               ELSE
                   MOVE SCR-STAT-ABT TO SCR-STAT
                   PERFORM DESSCRTRL
                   GO TO FIN-SCR-PGM.

       TRL-SCR-PGM.
           PERFORM DESSCRTRL.

           MOVE SPACES TO FRM-MENS.
           IF SCR-STAT NOT = SCR-STAT-CON
               PERFORM CMN-PGM.
       FIN-SCR-PGM.
           PERFORM SCR-DMSG.


       SCR-DMSG SECTION.
       INI-SCR-DMSG.
           IF PGM-ICLR = PGM-NO-LIMPIAR-NADA
               PERFORM SCR-DSP-MSSG
           ELSE
           IF PGM-ICLR = PGM-LIMPIAR-TODO
               DISPLAY PGM-NCUR WITH NO ADVANCING
               PERFORM SCR-CLRA-GDG
               PERFORM SCR-DSP-MSSG
               DISPLAY PGM-SCUR WITH NO ADVANCING
           ELSE
           IF PGM-ICLR = PGM-LIMPIAR-LLAVES
               PERFORM CLR-KEY-GDG
               PERFORM SCR-MSSG
               PERFORM SCR-PUTA
           ELSE
               PERFORM CLR-FLD-GDG
               PERFORM SCR-MSSG
               PERFORM SCR-PUTA.
       FIN-SCR-DMSG.
           EXIT.

       SCR-KEY SECTION.
       INI-SCR-KEY.
           PERFORM GET-KEY.
           IF FRM-STAT-ABT
               MOVE SPACES TO FRM-MENS
               PERFORM SCR-MSSG
               GO TO FIN-SCR-KEY.
       FND-SCR-KEY.
           MOVE SPACES TO FRM-MENS.
           PERFORM FND-KEY.
           IF FIO-STAT-OKS
               PERFORM PUT-SCR
               MOVE PGM-LIMPIAR-TODO TO PGM-ICLR
               GO TO FIN-SCR-KEY.
       ERR-SCR-KEY.
           MOVE PGM-NO-LIMPIAR-NADA TO PGM-ICLR.
           IF FRM-MENS NOT > SPACES
               IF FIO-STAT-EOF
                   MOVE 'REGEOF    ' TO MSG-COD-MENS
                   MOVE 'GNS' TO MSG-COD-SIST
                   PERFORM GET-MSG
                   MOVE MSG-GLS-DESC TO FRM-MENS
               ELSE
               IF FIO-STAT = FIO-STAT-NEX
                   MOVE 'REGNEX    ' TO MSG-COD-MENS
                   MOVE 'GNS' TO MSG-COD-SIST
                   PERFORM GET-MSG
                   MOVE MSG-GLS-DESC TO FRM-MENS
               ELSE
                   MOVE 'FIOSTAT' TO MSG-COD-TMSG
                   MOVE FIO-STAT  TO MSG-COD-CMSG
                   MOVE 'GNS'     TO MSG-COD-SIST
                   PERFORM GET-MSG
                   MOVE MSG-GLS-DESC TO FRM-MENS.
           PERFORM SCR-MSSG.
           MOVE SCR-STAT-ABT TO SCR-STAT.
        FIN-SCR-KEY.
           EXIT.

       SCR-RST SECTION.
       INI-SCR-RST.
           MOVE SPACES       TO PGM-ICLR.
           MOVE SPACES       TO SCR-ACTU.
           MOVE SCR-STPP     TO SCR-STAT.
           MOVE SCR-MFLD-NOT TO SCR-MFLD.

           INITIALIZE           GDG-DFLD.
           MOVE PGM-SRNF TO PGM-STAT-GDG.
           MOVE PGM-SRNF TO PGM-STAT-DBC.
       FIN-SCR-RST.
           EXIT.

       GET-KEY SECTION.
       INI-GET-KEY.

           PERFORM SCR-GKEY.
           IF FRM-STAT-ABT
               MOVE SCR-STAT-ABT TO SCR-STAT.
       FIN-GET-KEY.
           EXIT.

       GET-IKY SECTION.
       INI-GET-IKY.

           PERFORM SCR-GIKY.
           IF FRM-STAT-ABT
               MOVE SCR-STAT-ABT TO SCR-STAT.
       FIN-GET-IKY.
           EXIT.

       FND-KEY SECTION.
       INI-FND-KEY.

      *<<<< INGFNDKEY
      * CODIGO AGREGADO PARA M:N
           IF SCR-CCPP = 'ING' 
               IF GDG-COD-CRR IN GDG-FLD > ZEROES
                   MOVE 1 TO WSS-IBUS-GDG
                   MOVE GDG-NUM-SIS IN GDG-FLD TO
                        GAR-NUM-SIS IN GDG
                   MOVE GDG-COD-CRR IN GDG-FLD TO
                        GAR-COD-CRR IN GDG
                   MOVE FIO-GET-KEY TO FIO-CMND
                   PERFORM GAR-FIO-GDG
                   IF FIO-STAT-OKS
      *<<<< NOT ING_SBR_HIJ
      *            se encontro el hijo : error
      *            no ingresa sobre el hijo encontrado
                       MOVE 'GDG    EXT' TO MSG-COD-MENS
                       GO TO ERR-FND-KEY
                   ELSE
                       MOVE '23' TO FIO-STAT
                       GO TO FIN-FND-KEY
      *>>>>
               ELSE
                   PERFORM FND-DIRECTO
                   GO TO FIN-FND-KEY.    
      * CODIGO AGREGADO PARA M:N

      *>>>>
      *<<<< BUSNXTPRV
           MOVE SPACES TO MSG-COD-MENS.
           MOVE 0 TO WSS-IBUS.
           MOVE 0 TO WSS-IBUS-GDG.
           MOVE '23' TO PGM-STAT-GDD.

           IF FRM-FFLD = FRM-FFLD-PF6
              OR FRM-FFLD-PF5
               PERFORM LEE-NXT-PRV-XGDD
               IF WSS-IBUS = 3
                   PERFORM SCR-CLRA-GDG
                   GO TO EXA-COM-STAT
               ELSE
                   IF FRM-FFLD = FRM-FFLD-PF5
                       MOVE 'GDD    NOPRV' TO MSG-COD-MENS
                       GO TO ERR-FND-KEY
                   ELSE
                       MOVE 'GDD    NONXT' TO MSG-COD-MENS
                       GO TO ERR-FND-KEY.

           IF FRM-FFLD = FRM-FFLD-PF8 
              OR FRM-FFLD-PF7
               PERFORM LEE-NXT-PRV-XDBC
               IF WSS-IBUS = 1
                   GO TO CON-BUS-DBC
               ELSE
                   IF FRM-FFLD = FRM-FFLD-PF7
                       MOVE 'DBC    NOPRV' TO MSG-COD-MENS
                       GO TO ERR-FND-KEY
                   ELSE
                       MOVE 'DBC    NONXT' TO MSG-COD-MENS
                       GO TO ERR-FND-KEY.
      *>>>>
      *<<<< FNDIRECTO
           IF GDG-COD-CRR IN GDG-FLD > ZEROES AND
              DBC-NUM-ICLI IN GDG-FLD NOT > ZEROES AND
              DBC-GLS-NOMC IN GDG-FLD NOT > SPACES
      *       se digito lo necesario para buscar directo
      * Buscara Cliente por medio de NOM cuando PF7 O PF8
               MOVE 'N' TO CMA-IND-KPAD IN CMA-VARI
               PERFORM FND-DIRECTO
               IF FIO-STAT-OKS
                   MOVE 2 TO WSS-IBUS
      *            para buscar RPH y PAD
                   PERFORM GET-CUR-GDD
                   IF FIO-STAT-OKS
                       MOVE 3 TO WSS-IBUS
                       MOVE GDD-CIC-ICLI IN GDD TO
                            DBC-KEY-IDBC IN DBC
                        MOVE 'DBC-KEY-IDBC' TO FIO-AKEY
                        MOVE FIO-GET-KEY TO FIO-CMND
                        PERFORM SGC-FIO-DBC
                        MOVE FIO-STAT TO PGM-STAT-DBC
                        IF FIO-STAT-OKS
                            GO TO EXA-COM-STAT
                        ELSE
                            MOVE 'GDD    NODBC' TO MSG-COD-MENS
                            GO TO EXA-COM-STAT 
                   ELSE
                       MOVE 'GDD    NEX' TO MSG-COD-MENS
                       GO TO EXA-COM-STAT
               ELSE
                   MOVE SPACES TO GAR-CLV-GDD-2 IN CMA-VARI
                   MOVE SPACES TO GDD-CIC-ICLI IN CMA-VARI
                   MOVE SPACES TO DBC-KEY-IDBC IN CMA-VARI
                   MOVE 'GDG    NEX' TO MSG-COD-MENS
                   GO TO ERR-FND-KEY.

      *>>>>
      *<<<< BUSPADHIJ

      *    pudo haberse digitadp el campo llave del hijo o no
      *    busca el padre por alguna de las llaves (la digitada)
           IF DBC-NUM-ICLI IN GDG-FLD > ZEROES
      *IDC-CLI Busca Cliente por medio de IdC
      *IDC-CLI lo busco y valido al leer llaves
               MOVE 'I' TO CMA-IND-KPAD IN CMA-VARI
               MOVE 1 TO WSS-IBUS
               GO TO CON-BUS-DBC.
           IF DBC-GLS-NOMC IN GDG-FLD > SPACES
      *NOM-CLI Busca Cliente por medio del Nombre
               MOVE 'N' TO CMA-IND-KPAD IN CMA-VARI
      *<<<< UNS_FLD
               MOVE DBC-GLS-NOMC IN GDG-FLD TO STR-GLS-GSTR
               PERFORM STR-UNS
               MOVE STR-GLS-FUNS IN STR-VARI(1) TO 
                    DBC-GLS-APAT IN DBC
               MOVE STR-GLS-FUNS IN STR-VARI(2) TO 
                    DBC-GLS-AMAT IN DBC
               MOVE STR-GLS-FUNS IN STR-VARI(3) TO 
                    DBC-GLS-NOMB IN DBC
      *>>>>
               MOVE 'DBC-GLS-NOMC'   TO FIO-AKEY
               MOVE FIO-GET-NLS TO FIO-CMND
               PERFORM GET-CLI
               IF MSG-COD-MENS NOT > SPACES
                   MOVE 1 TO WSS-IBUS.

      * SI SE PROCESA SUBENTIDAD, LA BUSQUEDA POR LLAVE ALTERNATIVA
      *  DEBE SER UN PARRAFO CON LOOP

           IF WSS-IBUS = 0
               MOVE 'DBC    NEX' TO MSG-COD-MENS
               GO TO ERR-FND-KEY.

       CON-BUS-DBC.
      *    se encontro el padre y busca el GDG
           MOVE '00' TO PGM-STAT-DBC.

      * Para permitir Ant/Sig aunque padre no tenga operaciones
           MOVE DBC-KEY-IDBC IN DBC TO DBC-KEY-IDBC IN CMA-VARI.

      *    se digito tambien el hijo, se busca directamente GDD
           IF GDG-COD-CRR IN GDG-FLD > ZEROES AND
              NOT (FRM-FFLD = FRM-FFLD-PF8 OR FRM-FFLD-PF7)
      *        Buscara Cliente por medio de NOM cuando PF7 O PF8
               MOVE 'N' TO CMA-IND-KPAD IN CMA-VARI
               PERFORM GET-GDD
               IF WSS-IBUS = 1
                   MOVE 'GDD    NEX' TO MSG-COD-MENS
                   GO TO ERR-FND-KEY
               ELSE
               IF WSS-IBUS = 2
                   MOVE 'GDG    NEX' TO MSG-COD-MENS
                   GO TO ERR-FND-KEY
               ELSE
      *            se encontro el hijo
                   GO TO EXA-COM-STAT
           ELSE
      *    no se digito el hijo, se busca el ultimo
               PERFORM BUS-ULT-GDG
               IF WSS-IBUS = 3
      *            se encontro el hijo
                   GO TO EXA-COM-STAT
               ELSE
                   MOVE 'GDD    NEX' TO MSG-COD-MENS
                   GO TO ERR-FND-KEY.

       FND-DIRECTO.
           MOVE 1 TO WSS-IBUS-GDG.

      *>>>>
           PERFORM KEY-ALL-GDG.

           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM GAR-FIO-GDG.
           MOVE FIO-STAT TO PGM-STAT-GDG.

      *<<<< FINFNDKEY

       EXA-COM-STAT.

           IF WSS-IBUS = 2 OR 3
      *        se encontro el hijo
      *<<<< PGM_HIJ
               MOVE '00' TO PGM-STAT-GDG
      *>>>>
               MOVE GAR-CLV-GDD-2 IN GDD TO GAR-CLV-GDD-2 IN CMA-VARI.

           IF WSS-IBUS = 3
      *        se encontro la relacion completa
               MOVE '00' TO PGM-STAT-GDD
               MOVE GDD-CIC-ICLI IN GDD TO GDD-CIC-ICLI IN CMA-VARI
               MOVE '00' TO PGM-STAT-DBC
               MOVE GDD-CIC-ICLI IN GDD TO DBC-KEY-IDBC IN CMA-VARI
           ELSE
      *       GDG incompleto
               MOVE '23' TO PGM-STAT-GDD
               MOVE SPACES TO GDD-CIC-ICLI IN CMA-VARI
               MOVE '23' TO PGM-STAT-DBC
               MOVE SPACES TO DBC-KEY-IDBC IN CMA-VARI
               GO TO ANL-GDG.

      * Determina si tiene multiples padres para comando consulta
           IF NOT ( SCR-CCPP = 'ACC' AND SCR-STAT = SCR-STAT-CON )
               GO TO ANL-GDG.

           MOVE SPACES TO MSG-COD-SIST.
           MOVE SPACES TO MSG-COD-MENS.

      * Se posiciona por la llave del hijo
           MOVE 'GAR-CLV-GDD-2' TO FIO-AKEY.
           MOVE FIO-GET-NLS TO FIO-CMND.
           PERFORM GAR-FIO-GDD.

      *    Busca siguiente por la llave del hijo
           MOVE 'GAR-CLV-GDD-2' TO FIO-AKEY.
           MOVE FIO-GET-NXT TO FIO-CMND.

           PERFORM GAR-FIO-GDD.
           IF FIO-STAT-OKS AND
              GAR-CLV-GDG-1  IN GDG = GAR-CLV-GDD-2  IN GDD
                MOVE 'M' TO SCR-IND-MGDD
      *<<<< NOT MUL_FLD
      *>>>>
           ELSE
                MOVE SPACES TO SCR-IND-MGDD.

           IF FIO-STAT-OKS
               MOVE 'GAR-CLV-GDD-2' TO FIO-AKEY
               MOVE FIO-END-BRW TO FIO-CMND
               PERFORM GAR-FIO-GDD.

           MOVE GDD-CIC-ICLI IN CMA-VARI TO GDD-CIC-ICLI IN GDD.
           MOVE GAR-CLV-GDD-2 IN CMA-VARI TO GAR-CLV-GDD-2 IN GDD.
           MOVE 'GAR-CLV-GDD-1' TO FIO-AKEY.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM GAR-FIO-GDD.

       ANL-GDG.
       FIN-ANL-GDG.
           MOVE PGM-STAT-GDG TO FIO-STAT. 

      *>>>>
      *<<<< EXACMNSTA
      * EXAMINA STATUS DE REGISTRO

           IF SCR-CCPP = 'ACC' AND SCR-STPP = SCR-STAT-CON
               GO TO FIN-FND-KEY.

           IF SCR-CCPP = 'ACC' 
               MOVE SCR-STAT-SON TO SCR-STAT.

           IF GDG-MSC-STAT IN GDG = 'E'
               MOVE 'GDG   EXTING' TO MSG-COD-MENS
               GO TO ERR-FND-KEY.

           IF GDG-MSC-STAT IN GDG = 'A' AND SCR-CMND = 'MGA'
           OR GDG-MSC-STAT IN GDG = 'A' AND SCR-CMND = 'ALZ'
           OR GDG-MSC-STAT IN GDG = 'A' AND SCR-CMND = 'EJE'
                   GO TO FIN-FND-KEY.

           IF GDG-MSC-STAT IN GDG = 'A'
               MOVE 'GDG    AGAYA' TO MSG-COD-MENS
               GO TO ERR-FND-KEY.

           IF GDG-MSC-STAT IN GDG = 'I' AND SCR-CMND = 'MOD'
           OR GDG-MSC-STAT IN GDG = 'I' AND SCR-CMND = 'AGA'
           OR GDG-MSC-STAT IN GDG = 'I' AND SCR-CCPP = 'ELI'

                   GO TO FIN-FND-KEY.

           IF GDG-MSC-STAT IN GDG = 'I'
               MOVE 'GDG    NOAGA' TO MSG-COD-MENS
               GO TO ERR-FND-KEY.

           IF GDG-MSC-STAT IN GDG = 'E'
               MOVE 'GDG    EXTGD' TO MSG-COD-MENS
           ELSE
               MOVE 'GDG    NOEST' TO MSG-COD-MENS.

      *>>>>
      *<<<< ERRFNDKEY
       ERR-FND-KEY.
           IF WSS-IBUS = 0 AND WSS-IBUS-GDG = 0
      *        busco por padre y no encontro padre
               MOVE SPACES TO PGM-STAT
               MOVE 'SGC' TO MSG-COD-SIST
               MOVE '23' TO PGM-STAT-DBC
           ELSE
      *        todos otros casos: el error pertenece al sistema GAR
               MOVE 'GAR' TO MSG-COD-SIST.
           PERFORM GET-MSG.
           MOVE MSG-GLS-DESC TO FRM-MENS.

           MOVE SCR-STAT-CON TO SCR-STAT.
           MOVE '00' TO FIO-STAT.       
           IF FRM-FFLD = FRM-FFLD-PF6 OR
              FRM-FFLD = FRM-FFLD-PF5 OR
              SCR-CCPP = 'ING'
               GO TO FIN-FND-KEY.

           IF PGM-STAT-DBC-OKS 
      *        Despliega solo datos del DBC

      *<<<< PGM_VMS
               DISPLAY PGM-NCUR WITH NO ADVANCING
      *>>>>
               PERFORM SCR-CLRA-GDG
      *<<<< PGM_VMS
               DISPLAY PGM-SCUR WITH NO ADVANCING
               INITIALIZE GDG-DFLD
      *>>>>
               PERFORM PUT-DBC-GDG
      *<<<< PGM_VMS
               PERFORM SCR-DSP-MSSG
      *>>>>
           ELSE
           IF FRM-FFLD = FRM-FFLD-PF8
              OR FRM-FFLD-PF7
               GO TO FIN-FND-KEY
           ELSE
           IF PGM-STAT-GDG-OKS 
               MOVE PGM-SNUL TO PGM-STAT-GDG
           ELSE
               MOVE '23' TO FIO-STAT.

           GO TO FIN-FND-KEY.
      *>>>>
       FIN-FND-KEY.
           EXIT.

       PUT-SCR SECTION.
       INI-PUT-SCR.

           PERFORM PUT-ALL-GDG.
       FIN-PUT-SCR.
           EXIT.

       GET-FLD SECTION.
       INI-GET-FLD.

           PERFORM SCR-GFLD.
           IF FRM-STAT-ABT
               MOVE SCR-STAT-ABT TO SCR-STAT.
       FIN-GET-FLD.
           EXIT.

       CMN-MOD SECTION.
       INI-CMN-MOD.

           PERFORM KEY-ALL-GDG.
           MOVE FIO-GET-KEY-UPD TO FIO-CMND.
           PERFORM GAR-FIO-GDG.
           IF NOT FIO-STAT-OKS
               GO TO FIN-CMN-MOD.

      *<<<< CMN_MOD_RET

           IF NOT (
              DBC-IND-ICLI IN GDG-FLD = 'M' OR
              ( DBC-CAI-ICLI IN GDG-FLD = SPACES AND
      *<<<< NOT PGM_ARG
                 DBC-IIC-ICLI IN GDG-FLD = ZEROES ) OR
      *>>>>
              ( GDG-NUM-SIS IN GDG-FLD = SPACES AND
                GDG-COD-CRR IN GDG-FLD = ZEROES ))
              
               PERFORM GET-UPD-GDD
           ELSE
      *        No modifica ni ingresa porque no hay GDD
               MOVE WSS-MISMO TO WSS-MGDD.

      *>>>>
           PERFORM RET-ALL-GDG.

      *<<<< CMN_MOD
           PERFORM GET-FHOY.
           MOVE HOY-FHOY TO GDG-FEC-ULT-ACT.
           MOVE HOY-HHOY TO GDG-HOR-ACT.
           MOVE HOY-FHOY TO GDG-FEC-ING-SIS IN GDG.
           IF SCR-CCPP = 'ING'
               MOVE 'I'      TO GDG-MSC-TACC    IN GDG

           ELSE
               MOVE 'M'      TO GDG-MSC-TACC    IN GDG.
           IF SCR-CMND NOT = 'ALZ'
               GO TO SIG-FIN-CMN-MOD.

      *<<<< PGM_VMS OR ( PGM_ AND PGM_DTC )

           IF CMA-IND-DAP IN CMA-VARI = 'S'
               PERFORM BUS-GDO-OPD
               IF MSG-COD-MENS = SPACES
                   MOVE FIO-GET-KEY-UPD TO FIO-CMND
                   PERFORM DAP-FIO-OPD
                   MOVE 'N' TO OPD-COD-GARA IN OPD
                   MOVE FIO-MOD TO FIO-CMND
                   PERFORM DAP-FIO-OPD
                   IF NOT FIO-STAT-OKS
                       MOVE FIO-MENS TO FRM-MENS
                       MOVE FRM-SUAR-MAL TO FRM-SUAR
                       GO TO FIN-CMN-MOD
                   ELSE
                       NEXT SENTENCE
               ELSE
                   PERFORM GET-MSG
                   MOVE MSG-GLS-DESC TO FRM-MENS
                   MOVE FRM-SUAR-MAL TO FRM-SUAR
                   GO TO FIN-CMN-MOD.
      *>>>>

           MOVE HOY-FHOY TO GAR-FEC-MOV IN GMO.
           MOVE HOY-HHOY TO GAR-HOR-MOV IN GMO.
      * FALTA ESCRIBIR TERMINAL Y USUARIO
           MOVE HOY-FHOY TO GMO-FEC-ING-SIS IN GMO.
           MOVE GAR-NUM-SIS IN GDG TO GAR-NUM-SIS IN GMO.
           MOVE GAR-COD-CRR IN GDG TO GAR-COD-CRR IN GMO.
           MOVE ZEROES             TO GAR-CRR-MOV IN GMO.
           MOVE '3'                TO GAR-COD-MOV IN GMO.
           MOVE GAR-COD-TSN IN GDG TO GAR-COD-TSN IN GMO.
           MOVE 'GDG001'           TO GAR-COD-CPO IN GMO.
           MOVE 'N'                TO GAR-IND-VAL IN GMO.
           MOVE 'S'                TO GAR-IND-CLV IN GMO.
           MOVE SPACES             TO GAR-GLS-CPO-ANT IN GMO.
           MOVE ZEROES             TO GAR-VAL-CPO-ANT IN GMO.
           MOVE GAR-ES1 IN GDG     TO GAR-COD-CLV-NVO IN GMO.
           MOVE SPACES             TO GAR-GLS-CPO-NVO IN GMO.
           MOVE ZEROES             TO GAR-VAL-CPO-NVO IN GMO.
           MOVE GAR-COD-OFI IN GDG TO GAR-COD-OFI-MOV IN GMO.
           MOVE FIO-PUT TO FIO-CMND.
           PERFORM GAR-FIO-GMO.

       SIG-FIN-CMN-MOD.
      *>>>>
           MOVE FIO-MOD TO FIO-CMND.
           PERFORM GAR-FIO-GDG.

      *<<<< FIN_CMN_MOD

           IF NOT FIO-STAT-OKS                                                  
      *        Error inconsistencia en la modificacion : informar               
               MOVE FIO-MENS TO FRM-MENS
               GO TO FIN-CMN-MOD.

           IF WSS-OTRO-GDD
               PERFORM MOD-GDD
               IF NOT FIO-STAT-OKS
                   MOVE 'GDDMODERR' TO MSG-COD-MENS
                   MOVE 'GAR' TO MSG-COD-SIST
                   PERFORM GET-MSG
                   MOVE MSG-GLS-MENS TO FRM-MENS
                   GO TO FIN-CMN-MOD
               ELSE
                   NEXT SENTENCE
           ELSE
           IF WSS-PRIMER-GDD
               PERFORM PUT-GDD
               IF NOT FIO-STAT-OKS
                   MOVE 'GDDINGERR' TO MSG-COD-MENS
                   MOVE 'GAR' TO MSG-COD-SIST
                   PERFORM GET-MSG
                   MOVE MSG-GLS-MENS TO FRM-MENS
                   GO TO FIN-CMN-MOD.
      *>>>>
       FIN-CMN-MOD.
           EXIT.

       CMN-ING SECTION.
       INI-CMN-ING.
           INITIALIZE GDG.

           MOVE SPACES TO GDG-GLS-FLAG IN GDG.
           MOVE SPACES TO GDG-MSC-TACC IN GDG.
           MOVE SPACES TO GDG-TML-ACT  IN GDG.
           MOVE SPACES TO GDG-IDN-USU-ING IN GDG.
           MOVE SPACES TO GDG-IDN-USU-ACT IN GDG.
           MOVE 'I'    TO GDG-MSC-STAT IN GDG.

           PERFORM GET-FHOY.
           MOVE HOY-FHOY TO GDG-FEC-ULT-ACT.
           MOVE HOY-HHOY TO GDG-HOR-ACT.
           MOVE HOY-FHOY TO GDG-FEC-ING-SIS IN GDG.
           IF SCR-CCPP = 'ING'
               MOVE 'I'      TO GDG-MSC-TACC    IN GDG

           ELSE
               MOVE 'M'      TO GDG-MSC-TACC    IN GDG.
           MOVE SPACES TO GAR-ES2      IN GDG.
           MOVE SPACES TO GAR-IND-CPL  IN GDG.
           MOVE SPACES TO GAR-IND-RST-ALZ IN GDG.
           MOVE SPACES TO GAR-IIV-AUT-ES1 IN GDG.
           MOVE SPACES TO GAR-IND-EXI-GDG IN GDG.
           MOVE SPACES TO GAR-IND-EXI-GDD IN GDG.
           MOVE SPACES TO GAR-IND-EXI-GES IN GDG.
           MOVE SPACES TO GAR-IND-EXI-GLE IN GDG.
           MOVE SPACES TO GAR-IND-EXI-GDO IN GDG.
           MOVE SPACES TO GAR-IND-EXI-GSE IN GDG.
           MOVE SPACES TO GAR-IND-EXI-GVT IN GDG.
           MOVE SPACES TO GAR-IND-EXI-GTP IN GDG.
           MOVE SPACES TO GAR-IND-EXI-GUB IN GDG.
           MOVE SPACES TO GAR-IND-EXI-GAP IN GDG.
           MOVE SPACES TO GAR-IND-EXI-GIN IN GDG.
           MOVE SPACES TO GAR-IND-EXI-GSI IN GDG.
           MOVE SPACES TO GAR-IND-EXI-GDP IN GDG.
           MOVE SPACES TO GAR-COD-TIP-ESP IN GDG.
           MOVE ZEROES TO GAR-FEC-ALZ IN GDG.
           MOVE ZEROES TO GAR-COD-TSN  IN GDG.
           MOVE SPACES TO GDG-GLS-DISP IN GDG. 
      *>>>>
           PERFORM RET-ALL-GDG.

      *<<<< CMN_ING
      *<<<< PGM_VMS OR ( PGM_ AND PGM_DTC )

           IF CMA-IND-DAP IN CMA-VARI = 'S'
               MOVE SPACES TO MSG-COD-MENS
               MOVE GDG-NUM-SIS IN GDG-FLD TO GAR-NUM-SIS
                                               IN CMA-VARI
               MOVE GDG-COD-CRR IN GDG-FLD TO GAR-COD-CRR
                                               IN CMA-VARI
               MOVE FRM-CAI-IOPD IN GDG-FLD TO FRM-CAI-IOPD
                                               IN CMA-VARI
               MOVE FRM-IIC-IOPD IN GDG-FLD TO FRM-IIC-IOPD
                                               IN CMA-VARI
               PERFORM GAR-PRO-IDP
               IF MSG-COD-MENS > SPACES
                   PERFORM GET-MSG
                   MOVE MSG-GLS-DESC TO FRM-MENS
                   MOVE FRM-SUAR-MAL TO FRM-SUAR
                   GO TO FIN-CMN-ING
               ELSE
                   MOVE 1   TO GAR-COD-TSN     IN GDG
                   MOVE 'S' TO GAR-IND-EXI-GDO IN GDG
                   MOVE 'S' TO GAR-IND-EXI-GVT IN GDG.

      *>>>>
      *<<<< CMN_ING
      *GET-CIC Obtener CIC
           IF GDG-NUM-SIS IN GDG-FLD NOT > SPACES AND
              GDG-COD-CRR IN GDG-FLD NOT > ZEROES
               MOVE SPACES TO CIC-CAI-ICIC IN CIC
               MOVE CIC-GET TO CIC-CMND
               PERFORM PRO-CIC
               IF CIC-STAT NOT = CIC-STAT-OKS
                   MOVE CIC-MENS TO FRM-MENS
                   MOVE FIO-STAT-NEX TO FIO-STAT
                   GO TO FIN-CMN-ING
               ELSE
                   MOVE CIC-CAI-ICIC TO GAR-NUM-SIS IN GDG
                   MOVE CIC-IIC-ICIC TO GAR-COD-CRR IN GDG
                   MOVE 'GNS' TO MSG-COD-SIST
                   MOVE 'INGYES' TO MSG-COD-MENS
                   PERFORM GET-MSG
                   STRING MSG-GLS-DESC
                          GDG-NUM-SIS IN GDG-FLD
                          GDG-COD-CRR IN GDG-FLD
                          MSG-GLS-DESC DELIMITED BY SIZE
                     INTO FRM-MENS.

           IF NOT ( DBC-IND-ICLI IN GDG-FLD = 'M' OR
               ( DBC-CAI-ICLI IN GDG-FLD NOT > SPACES AND
      *<<<< NOT PGM_ARG
                 DBC-IIC-ICLI IN GDG-FLD NOT > ZEROES )
      *>>>>
                  )
                AND
      *       no se ingreso el cliente en GAR-PRO-IDP
              NOT ( CMA-IND-DAP IN CMA-VARI = 'S' AND
                    FRM-COD-DEUD IN GDG-FLD = 'S' )
               PERFORM PUT-GDD
               IF NOT FIO-STAT-OKS
                   GO TO FIN-CMN-ING.

           MOVE GAR-ES1 IN GDG TO GAR-EST-ANT IN GDG.
           IF DBC-NUM-ICLI IN GDG-FLD > ZEROES
               MOVE 'S' TO GAR-IND-EXI-GDD IN GDG.

      *>>>>
      *>>>>
           MOVE FIO-PUT TO FIO-CMND.
           PERFORM GAR-FIO-GDG.

      *<<<< FIN_CMN_ING
           IF NOT FIO-STAT-OKS                                                  
      *        Error inconsistencia en el ingreso : informar                    
               MOVE FIO-MENS TO FRM-MENS
               GO TO FIN-CMN-ING.                                               
      *>>>>
       FIN-CMN-ING.
           EXIT.

       CMN-ACC SECTION.
       INI-CMN-ACC.
           IF SCR-STAT = SCR-STAT-ABT OR SCR-VFLD = SCR-VFLD-NOT
               MOVE 'ACCION NO REALIZADA' TO FRM-MENS

               GO TO FIN-CMN-ACC.

      *<<<< INI_CMN_ACC
      *<<<< PGM_VMS
           MOVE 'GDG' TO WSS-REG.
      *>>>>
           MOVE GDG-NUM-SIS IN GDG-FLD TO GAR-NUM-SIS IN CMA-VARI.
           MOVE GDG-COD-CRR IN GDG-FLD TO GAR-COD-CRR IN CMA-VARI.
           PERFORM GAR-PRO-VCG.
           GO TO FIN-CMN-ACC.
      *>>>>

           PERFORM RET-ALL-GDG.

       FIN-CMN-ACC.
           EXIT.

       CMN-ELI SECTION.
       INI-CMN-ELI.

           PERFORM KEY-ALL-GDG.

      *<<<< CMN_ELI
      *<<<< NOT (( PGM_VSI OR PGM_DB2 ) AND PGM_PU AND NOT PGM_VMS )
           PERFORM GAR-PRO-ELI.
      *>>>>
      *>>>>
           MOVE FIO-DEL TO FIO-CMND.
           PERFORM GAR-FIO-GDG.

      *<<<< FIN_CMN_ELI
           IF NOT FIO-STAT-OKS
      *        Error inconsistencia en la eliminacion : informar
               MOVE FIO-MENS TO FRM-MENS
               GO TO FIN-CMN-ELI.

           PERFORM DEL-GDD.
           IF NOT FIO-STAT-OKS
               GO TO FIN-CMN-ELI.
      *>>>>
       FIN-CMN-ELI.
           EXIT.

       CMN-PGM SECTION.
       INI-CMN-PGM.

           PERFORM RET-ALL-GDG.

       FIN-CMN-PGM.
           EXIT.

       SCR-EXIT SECTION.
       INI-SCR-EXIT.
           MOVE SPACES TO FRM-MENS.
       FIN-SCR-EXIT.
           EXIT.

       SCR-PUTA SECTION.
       INI-SCR-PUTA.
           DISPLAY PGM-NCUR WITH NO ADVANCING.
           MOVE GDG-FLD TO FRM-DFLD.
           MOVE FRM-PUT-ALL TO FRM-CMND.
           PERFORM GNS-PRO-FRM.
           MOVE GDG-GLS-MENS TO FRM-MENS.
           MOVE FRM-MSG TO FRM-CMND.
           PERFORM GNS-PRO-FRM.
           DISPLAY PGM-SCUR WITH NO ADVANCING.
       FIN-SCR-PUTA.
           EXIT.

       SCR-DSP-MSSG SECTION.
       INI-SCR-DSP-MSSG.
           IF FRM-MEN1 NOT > SPACES
               MOVE SPACES TO FRM-MEN1.
           IF FRM-MEN2 NOT > SPACES
               MOVE SPACES TO FRM-MEN2.
           MOVE FRM-MENS TO GDG-GLS-MENS.
           MOVE FRM-MSG TO FRM-CMND.
           PERFORM GNS-PRO-FRM.
       FIN-SCR-DSP-MSSG.
           EXIT.

       SCR-MSSG SECTION.
       INI-SCR-MSSG.
           IF FRM-MEN1 NOT > SPACES
               MOVE SPACES TO FRM-MEN1.
           IF FRM-MEN2 NOT > SPACES
               MOVE SPACES TO FRM-MEN2.
           MOVE FRM-MENS TO GDG-GLS-MENS.
      *    MOVE FRM-MSG TO FRM-CMND.
      *    PERFORM GNS-PRO-FRM.
       FIN-SCR-MSSG.
           EXIT.

       SCR-GKEY SECTION.
       INI-SCR-GKEY.
           MOVE GDG-NFLD       TO FRM-VNOM.
           MOVE 1 TO FRM-IFLD.
       LUP-SCR-GKEY.
           MOVE GDG-DFLD-ATR   TO FRM-VATR.
           MOVE GDG-DFLD-LEN   TO FRM-VLEN.
           MOVE FRM-GET-MAP      TO FRM-CMND.
           PERFORM GNS-PRO-FRM.
           MOVE SPACES TO FRM-MENS.
           IF NOT ( FRM-FFLD = FRM-FFLD-RET  OR FRM-FFLD-PF10 OR
                               FRM-FFLD-PF12 OR FRM-FFLD-PF3 )

               MOVE 'PFSINV    ' TO MSG-COD-MENS
               MOVE 'GNS' TO MSG-COD-SIST
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS
               PERFORM FST-KEY-GDG
               MOVE FRM-MSG TO FRM-CMND
               PERFORM GNS-PRO-FRM
               MOVE SPACES TO FRM-MENS
               GO TO LUP-SCR-GKEY.
           MOVE FRM-DFLD TO GDG-DFLD.
           IF FRM-STAT-ABT
               GO TO FIN-SCR-GKEY.
           MOVE FRM-SUAR-OKS TO FRM-SUAR.
           INITIALIZE GDG-DFLD-LEN.
           PERFORM VAL-NUM-KEY-GDG.
           IF FRM-SUAR EQUAL FRM-SUAR-MAL OR FRM-SUAR-CLR
               GO TO ERR-SCR-GKEY.
      *JSS

           PERFORM VAL-IKY-GDG.
           IF FRM-SUAR EQUAL FRM-SUAR-MAL OR FRM-SUAR-CLR
               GO TO ERR-SCR-GKEY.

           PERFORM VAL-MKY-GDG.
           IF FRM-SUAR EQUAL FRM-SUAR-MAL OR FRM-SUAR-CLR
               GO TO ERR-SCR-GKEY.

           PERFORM VAL-AKY-GDG.
           IF FRM-SUAR EQUAL FRM-SUAR-MAL OR FRM-SUAR-CLR
               GO TO ERR-SCR-GKEY.

           PERFORM VAL-CON-KEY-GDG.
           IF FRM-SUAR EQUAL FRM-SUAR-MAL OR FRM-SUAR-CLR
               PERFORM FST-KEY-GDG
           ELSE
               GO TO FIN-SCR-GKEY.
       ERR-SCR-GKEY.
           MOVE FRM-MSG TO FRM-CMND.
           PERFORM GNS-PRO-FRM.
           MOVE SPACES TO FRM-MENS.
           GO TO LUP-SCR-GKEY.
       FIN-SCR-GKEY.

           PERFORM SCR-MSSG.

       SCR-GIKY SECTION.
       INI-SCR-GIKY.
           MOVE GDG-NFLD       TO FRM-VNOM.
           MOVE 1 TO FRM-IFLD.
       LUP-SCR-GIKY.
           MOVE GDG-DFLD-ATR   TO FRM-VATR.
           MOVE GDG-DFLD-LEN   TO FRM-VLEN.
           MOVE FRM-GET-MAP      TO FRM-CMND.
           PERFORM GNS-PRO-FRM.
           MOVE SPACES TO FRM-MENS.
           IF NOT ( FRM-FFLD = FRM-FFLD-RET  OR FRM-FFLD-PF10 OR
                               FRM-FFLD-PF12 OR FRM-FFLD-PF3 )

               MOVE 'PFSINV    ' TO MSG-COD-MENS
               MOVE 'GNS' TO MSG-COD-SIST
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS
               PERFORM FST-KEY-GDG
               MOVE FRM-MSG TO FRM-CMND
               PERFORM GNS-PRO-FRM
               MOVE SPACES TO FRM-MENS
               GO TO LUP-SCR-GIKY.
           MOVE FRM-DFLD TO GDG-DFLD.
           IF FRM-STAT-ABT
               GO TO FIN-SCR-GIKY.
           MOVE FRM-SUAR-OKS TO FRM-SUAR.
           INITIALIZE GDG-DFLD-LEN.
           PERFORM VAL-NUM-IKY-GDG.
           IF FRM-SUAR EQUAL FRM-SUAR-MAL OR FRM-SUAR-CLR
               GO TO ERR-SCR-GIKY.
      *JSS

           PERFORM VAL-IKY-GDG.
           IF FRM-SUAR EQUAL FRM-SUAR-MAL OR FRM-SUAR-CLR
               GO TO ERR-SCR-GIKY.

           PERFORM VAL-CON-IKY-GDG.
           IF FRM-SUAR EQUAL FRM-SUAR-MAL OR FRM-SUAR-CLR
               PERFORM FST-KEY-GDG
           ELSE
               GO TO FIN-SCR-GIKY.
       ERR-SCR-GIKY.
           MOVE FRM-MSG TO FRM-CMND.
           PERFORM GNS-PRO-FRM.
           MOVE SPACES TO FRM-MENS.
           GO TO LUP-SCR-GIKY.
       FIN-SCR-GIKY.

           PERFORM SCR-MSSG.

       SCR-GFLD SECTION.
       INI-SCR-GFLD.
           MOVE GDG-NFLD       TO FRM-VNOM.
           MOVE 1 TO FRM-IFLD.
       LUP-SCR-GFLD.
           MOVE GDG-DFLD-ATR   TO FRM-VATR.
           MOVE GDG-DFLD-LEN   TO FRM-VLEN.
           MOVE FRM-GET-MAP      TO FRM-CMND.
           PERFORM GNS-PRO-FRM.
           MOVE SPACES TO FRM-MENS.
           IF NOT ( FRM-FFLD = FRM-FFLD-RET  OR FRM-FFLD-PF10 OR
                               FRM-FFLD-PF12 OR FRM-FFLD-PF3 )
      *<<<< PFS_SCR_GFLD
           IF NOT ( ( SCR-CCPP = 'MOD' OR  SCR-CCPP = 'ACC' OR
                      SCR-CCPP = 'ELI'                      OR
                    ( SCR-CCPP = 'ACT' AND SCR-ACTU = SCR-ACTU-MOD ) )
                      AND ( FRM-FFLD = FRM-FFLD-PF8 OR
                            FRM-FFLD = FRM-FFLD-PF7 OR
                            FRM-FFLD = FRM-FFLD-PF5 OR
                            FRM-FFLD = FRM-FFLD-PF6 ) )
      *>>>>

               MOVE 'PFSINV    ' TO MSG-COD-MENS
               MOVE 'GNS' TO MSG-COD-SIST
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS
               PERFORM FST-FLD-GDG
               MOVE FRM-MSG TO FRM-CMND
               PERFORM GNS-PRO-FRM
               MOVE SPACES TO FRM-MENS
               GO TO LUP-SCR-GFLD.
           MOVE FRM-DFLD TO GDG-DFLD.
           IF FRM-STAT-ABT
               GO TO FIN-SCR-GFLD.
           MOVE FRM-SUAR-OKS TO FRM-SUAR.
           INITIALIZE GDG-DFLD-LEN.
           PERFORM VAL-NUM-KEY-GDG.
           IF FRM-SUAR EQUAL FRM-SUAR-MAL OR FRM-SUAR-CLR
               GO TO ERR-SCR-GFLD.
           PERFORM VAL-NUM-FLD-GDG.
           IF FRM-SUAR EQUAL FRM-SUAR-MAL OR FRM-SUAR-CLR
               GO TO ERR-SCR-GFLD.

           PERFORM VAL-MKY-GDG.
           IF FRM-SUAR EQUAL FRM-SUAR-MAL OR FRM-SUAR-CLR
               GO TO ERR-SCR-GFLD.

           PERFORM VAL-FLD-GDG.
           IF FRM-SUAR EQUAL FRM-SUAR-MAL OR FRM-SUAR-CLR
               GO TO ERR-SCR-GFLD.

           PERFORM VAL-CON-FLD-GDG.
           IF NOT ( FRM-SUAR EQUAL FRM-SUAR-MAL OR FRM-SUAR-CLR )
               GO TO FIN-SCR-GFLD.
           MOVE 1 TO FRM-IFLD.
           PERFORM FST-FLD-GDG.
       ERR-SCR-GFLD.
           PERFORM SCR-MSSG.
           PERFORM SCR-PUTA.
           GO TO LUP-SCR-GFLD.
       FIN-SCR-GFLD.

           MOVE SCR-STAT-MOD TO SCR-STAT.

       GET-ACC SECTION.
       INI-GET-ACC.
      *    MOVE FDV-WAIT TO FRM-CMND.
           MOVE 0 TO FRM-PLIN.
      *    MOVE FRM-MENS TO FRM-PRMT.
           MOVE GDG-GLS-MENS TO FRM-PRMT.
           MOVE FDV-GETDL TO FRM-CMND.
           PERFORM GNS-PRO-FRM.
           IF NOT ( FRM-FFLD = FRM-FFLD-RET  OR FRM-FFLD-PF10 OR
                               FRM-FFLD-PF12 OR FRM-FFLD-PF3 )
      *<<<< PFS_GET_CON OR PFS_GET_ACC
           IF NOT
              ( FRM-FFLD = FRM-FFLD-PF5 OR FRM-FFLD = FRM-FFLD-PF6 OR
                FRM-FFLD = FRM-FFLD-PF7 OR FRM-FFLD = FRM-FFLD-PF8 )
      *>>>>

               MOVE 'PFSINV    ' TO MSG-COD-MENS
               MOVE 'GNS' TO MSG-COD-SIST
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC          TO GDG-GLS-MEN2
               MOVE SCR-GLS-PRMT( SCR-I ) TO GDG-GLS-MEN1
               MOVE GDG-GLS-MENS TO FRM-MENS
               GO TO INI-GET-ACC.
           MOVE FRM-VFLD TO SCR-VFLD.
           MOVE FRM-VFLD TO SCR-VFLD.
           IF FRM-FFLD = FRM-FFLD-RET
               IF SCR-VFLD = SCR-VFLD-NOT
                   MOVE FRM-FFLD-PF12 TO FRM-FFLD
               ELSE
                   PERFORM VAL-NUM-KEY-GDG
                   PERFORM VAL-NUM-FLD-GDG
           ELSE
               IF SCR-VFLD = SCR-VFLD-YES
                   MOVE FRM-FFLD-PF10 TO FRM-FFLD
                   PERFORM VAL-NUM-KEY-GDG
                   PERFORM VAL-NUM-FLD-GDG.
           DISPLAY '' LINE 24 COLUMN 1 WITH NO ADVANCING.

       FIN-GET-ACC.
           MOVE SCR-STAT-SON TO SCR-STAT.

       GET-CON SECTION.
       INI-GET-CON.
           MOVE FDV-WAIT TO FRM-CMND.
           PERFORM GNS-PRO-FRM.
           IF NOT ( FRM-FFLD = FRM-FFLD-RET OR FRM-FFLD-PF3 )
      *<<<< PFS_GET_CON OR PFS_GET_ACC
           IF NOT
              ( FRM-FFLD = FRM-FFLD-PF5 OR FRM-FFLD = FRM-FFLD-PF6 OR
                FRM-FFLD = FRM-FFLD-PF7 OR FRM-FFLD = FRM-FFLD-PF8 )
      *>>>>

               MOVE 'PFSINV    ' TO MSG-COD-MENS
               MOVE 'GNS' TO MSG-COD-SIST
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC          TO GDG-GLS-MEN2
               MOVE SCR-GLS-PRMT( SCR-I ) TO GDG-GLS-MEN1
               MOVE FRM-MSG TO FRM-CMND
               PERFORM GNS-PRO-FRM
               MOVE SPACES TO FRM-MENS
               GO TO INI-GET-CON.

       FIN-GET-CON.
           MOVE SCR-STAT-CON TO SCR-STAT.

       CLR-MSG SECTION.
       INI-CLR-MSG.
           MOVE SPACES TO GDG-GLS-MENS.
       FIN-CLR-MSG.
           EXIT.

       HBL-IKY SECTION.
       INI-HBL-IKY.

           PERFORM PRO-FLD-GDG.
           PERFORM PRO-MKY-GDG.
           PERFORM PRO-AKY-GDG.
           PERFORM UNP-IKY-GDG.
           PERFORM FST-KEY-GDG.

       FIN-HBL-IKY.
           EXIT.

       HBL-KEY SECTION.
       INI-HBL-KEY.

           PERFORM PRO-FLD-GDG.
           PERFORM UNP-KEY-GDG.
           PERFORM FST-KEY-GDG.

      *<<<< FIN_HBL_KEY
           IF SCR-CCPP NOT = 'ING'
               MOVE FRM-CPIM-AEY TO GDG-TIP-OPE-ATR IN GDG-FLD
               MOVE FRM-CPIM-AEY TO GDG-STP-OPE-ATR IN GDG-FLD.
      *>>>>
       FIN-HBL-KEY.
           EXIT.

       HBL-FLD SECTION.
       INI-HBL-FLD.

           PERFORM PRO-IKY-GDG.
           PERFORM PRO-AKY-GDG.
           PERFORM UNP-MKY-GDG.
           PERFORM UNP-FLD-GDG.
           PERFORM FST-FLD-GDG.

       FIN-HBL-FLD.
           EXIT.

       FST-MSG SECTION.
       INI-FST-MSG.
           MOVE -1 TO GDG-GLS-MENS-LEN.
       FIN-FST-MSG.
           EXIT.

       PRO-ALL SECTION.
       INI-PRO-ALL.
           PERFORM PRO-KEY-GDG.
           PERFORM PRO-FLD-GDG.
           PERFORM FST-MSG.
       FIN-PRO-ALL.
           EXIT.

       SCR-TRL SECTION.
       INI-SCR-TRL.

           IF FRM-MEN1 NOT > SPACES
               MOVE SCR-GLS-PRMT( SCR-I ) TO FRM-MEN1.

           IF SCR-STAT = SCR-STAT-MOD
               MOVE SCR-INST-GFL TO SCR-INST
               PERFORM HBL-FLD
               PERFORM SCR-MSSG
               IF FRM-FFLD NOT = FRM-FFLD-BSP
                   PERFORM SCR-PUTA
                   PERFORM SCR-EXIT
                   GO TO FIN-SCR-TRL
               ELSE
                   MOVE FRM-MSG TO FRM-CMND
                   PERFORM GNS-PRO-FRM
                   PERFORM SCR-EXIT
                   GO TO FIN-SCR-TRL.
           IF SCR-STAT = SCR-STAT-SON
               MOVE SCR-INST-GCS TO SCR-INST
               PERFORM PRO-ALL
               PERFORM SCR-MSSG
               IF FRM-FFLD NOT = FRM-FFLD-BSP
                   PERFORM SCR-PUTA
                   PERFORM SCR-EXIT
                   GO TO FIN-SCR-TRL
               ELSE
                   MOVE FRM-MSG TO FRM-CMND
                   PERFORM GNS-PRO-FRM
                   PERFORM SCR-EXIT
                   GO TO FIN-SCR-TRL.
      *ASUME SCR-STAT-CON.
           MOVE SCR-STAT-CON TO SCR-STAT.
           MOVE SCR-INST-GAB TO SCR-INST.
           PERFORM PRO-ALL.
           PERFORM SCR-MSSG.
           IF FRM-FFLD NOT = FRM-FFLD-BSP
               PERFORM SCR-PUTA
               PERFORM SCR-EXIT
           ELSE
               MOVE FRM-MSG TO FRM-CMND
               PERFORM GNS-PRO-FRM
               PERFORM SCR-EXIT.
       FIN-SCR-TRL.
           EXIT.

       DESSCRTRL SECTION.
       INI-DESSCRTRL.
           IF SCR-INST = SCR-INST-GCF
                  PERFORM SCR-GCNF
                  GO TO FIN-DESSCRTRL.
           MOVE SCR-VFLD-NOT TO SCR-VFLD.
           MOVE FRM-FFLD TO SCR-FFLD.
           IF SCR-STAT = SCR-STAT-ABT OR SCR-STAT-CON
                  GO TO FIN-DESSCRTRL.
           IF SCR-FFLD-RET OR SCR-FFLD-PF10
                  MOVE SCR-VFLD-YES TO SCR-VFLD
                  PERFORM PRO-CONF
                  IF SCR-INST = SCR-INST-GCF
                      GO TO INI-DESSCRTRL.
       FIN-DESSCRTRL.
           IF SCR-FFLD-PF10 OR SCR-FFLD-PF3
                 MOVE SCR-INST-HCM TO SCR-INST
           ELSE
                 MOVE SCR-INST-HKY TO SCR-INST.
       EXT-DESSCRTRL.
           EXIT.

       PRO-CONF SECTION.
       INI-PRO-CONF.

           IF FRM-MENS NOT > SPACES
               IF SCR-GLS-CONF( SCR-I ) NOT > SPACES
                   GO TO FIN-PRO-CONF
               ELSE
                   MOVE SCR-GLS-CONF( SCR-I ) TO FRM-MENS
           ELSE
               IF FRM-MEN1 NOT > SPACES
                   MOVE SCR-GLS-CONF( SCR-I ) TO FRM-MEN1.
           MOVE SCR-INST-GCF TO SCR-INST.
           PERFORM SCR-MSSG.
           PERFORM PRO-KEY-GDG.
           PERFORM PRO-FLD-GDG.
           PERFORM FST-MSG.
      *JSS PERFORM SCR-PUTA.
           DISPLAY PGM-NCUR WITH NO ADVANCING.
           MOVE GDG-FLD TO FRM-DFLD.
           MOVE FRM-PUT-ALL TO FRM-CMND.
           PERFORM GNS-PRO-FRM.
           DISPLAY PGM-SCUR WITH NO ADVANCING.
       FIN-PRO-CONF.
           EXIT.

       SCR-GCNF SECTION.
       INI-SCR-GCNF.
      *    MOVE FDV-WAIT TO FRM-CMND.
           MOVE 0 TO FRM-PLIN.
           MOVE FRM-MENS  TO FRM-PRMT.
           MOVE FDV-GETDL TO FRM-CMND.
           PERFORM GNS-PRO-FRM.
           IF NOT ( FRM-FFLD = FRM-FFLD-RET OR FRM-FFLD-PF4 OR
                               FRM-FFLD-BSP )

               MOVE 'PFSINV    ' TO MSG-COD-MENS
               MOVE 'GNS' TO MSG-COD-SIST
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC          TO GDG-GLS-MEN2
               MOVE SCR-GLS-CONF( SCR-I ) TO GDG-GLS-MEN1
               MOVE GDG-GLS-MENS TO FRM-MENS
               GO TO INI-SCR-GCNF.
           MOVE FRM-VFLD TO SCR-VFLD.
           IF NOT ( SCR-VFLD = SCR-VFLD-YES OR SCR-VFLD-NOT OR SPACES )
               MOVE 'CNF    INV' TO MSG-COD-MENS
               MOVE 'GNS' TO MSG-COD-SIST
               PERFORM GET-MSG
               STRING MSG-GLS-DCOR SCR-GLS-CONF( SCR-I )
                      DELIMITED BY SIZE INTO GDG-GLS-MENS
               MOVE GDG-GLS-MENS TO FRM-MENS
               GO TO INI-SCR-GCNF.
           IF FRM-FFLD = FRM-FFLD-RET
               IF SCR-VFLD = SCR-VFLD-NOT
                   MOVE FRM-FFLD-PF12 TO FRM-FFLD
               ELSE
                   MOVE SCR-VFLD-YES TO SCR-VFLD
                   PERFORM VAL-NUM-KEY-GDG
                   PERFORM VAL-NUM-FLD-GDG
           ELSE
           IF FRM-FFLD = FRM-FFLD-PF4
               IF SCR-VFLD = SCR-VFLD-YES
                   MOVE FRM-FFLD-PF10 TO FRM-FFLD
                   PERFORM VAL-NUM-KEY-GDG
                   PERFORM VAL-NUM-FLD-GDG
               ELSE
                   MOVE SCR-VFLD-NOT TO SCR-VFLD
           ELSE
               MOVE SCR-STPP TO SCR-STAT
               IF SCR-STAT NOT = SCR-STAT-MOD
                   MOVE FRM-FFLD-RET TO FRM-FFLD
                   MOVE SCR-VFLD-NOT TO SCR-VFLD.
           MOVE FRM-FFLD TO SCR-FFLD.
           MOVE SPACES TO FRM-MENS.
           DISPLAY '' LINE 24 COLUMN 1 WITH NO ADVANCING.

       FIN-SCR-GCNF.
           EXIT.

       COPY GARBMGDG.
       COPY GARBFGDG.
       COPY GNSBFMSG.
       COPY GNSBGSYS.
       COPY GNSBGFRM.
       COPY GNSBGMSG.
       COPY GNSBEKEY.
       COPY GNSBIABT.
       COPY GNSBBTAB.
       COPY GNSBVCOD.
       COPY GNSBVTAB.
       COPY GNSBFTAB.
       COPY GNSBVIND.
       COPY GNSBVMSC.
       COPY GNSBFMSC.
       COPY GNSBVIDC.
       COPY GNSBPVRF.
       COPY GNSBEGLS.
       COPY GNSBGFEC.
       COPY GNSBGHOY.
       COPY TABBBOFI.
       COPY TABBVOFI.
       COPY TABBFOFI.
       COPY TABBBUSR.
       COPY TABBVUSR.
       COPY TABBFUSR.

      *<<<< EOF
       RST-STAT SECTION.
       INI-RST-STAT.
           MOVE SCR-STPP     TO SCR-STAT.
           MOVE SCR-MFLD-NOT TO SCR-MFLD.
       FIN-RST-STAT.
           EXIT.

      *<<<< EOFPQPU

       GET-GDD SECTION.
       INI-GET-GDD.
           MOVE DBC-KEY-IDBC IN DBC TO GDD-CIC-ICLI IN GDD.
           MOVE GDG-NUM-SIS IN GDG-FLD TO GAR-NUM-SIS IN GDD.
           MOVE GDG-COD-CRR IN GDG-FLD TO GAR-COD-CRR IN GDD.
           MOVE 'GAR-CLV-GDD-1' TO FIO-AKEY.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM GAR-FIO-GDD.
           IF FIO-STAT-OKS AND 
              GDD-CIC-ICLI IN GDD = DBC-KEY-IDBC IN DBC
               MOVE GAR-CLV-GDD-2 IN GDD TO GAR-CLV-GDG-1 IN GDG
               MOVE 2 TO WSS-IBUS
               MOVE FIO-GET-KEY TO FIO-CMND
               PERFORM GAR-FIO-GDG
               IF FIO-STAT-OKS
                   MOVE 3 TO WSS-IBUS.
       FIN-GET-GDD.
           EXIT.

       GET-CUR-GDD SECTION.
       INI-GET-CUR-GDD.
           MOVE GAR-CLV-GDG-1 IN GDG TO GAR-CLV-GDD-2 IN GDD.
           MOVE 'GAR-CLV-GDD-2' TO FIO-AKEY.
           MOVE FIO-GET-NLS TO FIO-CMND.
           PERFORM GAR-FIO-GDD.
           IF FIO-STAT-OKS
               MOVE 'GAR-CLV-GDD-2' TO FIO-AKEY
               MOVE FIO-END-BRW TO FIO-CMND
               PERFORM GAR-FIO-GDD.
           IF NOT
              GAR-CLV-GDG-1 IN GDG = GAR-CLV-GDD-2 IN GDD
               MOVE '23' TO FIO-STAT.
       FIN-GET-CUR-GDD.
           EXIT.

       COPY SGCBFDBC.
       COPY GARBFGDD.
       COPY SGCBGCLI.
      *<<<< UNS_FLD
       COPY GNSBGCPT.
       COPY GNSBGSTR.
      *>>>>

      *>>>>
      *<<<< PGM_VMS OR ( PGM_ AND PGM_DTC )
       BUS-GDO-OPD SECTION.
       INI-BUS-GDO-OPD.
           MOVE SPACES TO MSG-COD-MENS.
           MOVE GDG-NUM-SIS IN GDG-FLD TO GAR-NUM-SIS IN GDO.
           MOVE GDG-COD-CRR IN GDG-FLD TO GAR-COD-CRR IN GDO.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM GAR-FIO-GDO.
           IF NOT FIO-STAT-OKS
               MOVE 'GAR'          TO MSG-COD-SIST
               MOVE 'GDO    NEX'   TO MSG-COD-MENS
           ELSE
               MOVE GAR-COD-DOC IN GDO TO OPD-CIC-IOPD IN DAP-VARI
               MOVE OPD-CAI-IOPD IN DAP-VARI TO OPD-CAI-IOPD IN OPD
               MOVE OPD-IIC-IOPD IN DAP-VARI TO OPD-IIC-IOPD IN OPD
               MOVE FIO-GET-KEY TO FIO-CMND
               PERFORM DAP-FIO-OPD
               IF NOT FIO-STAT-OKS
                   MOVE 'GAR'          TO MSG-COD-SIST
                   MOVE 'OPD    NEX'   TO MSG-COD-MENS
               ELSE
               IF OPD-COD-STAT IN OPD NOT = 'G'
                   MOVE 'GAR'            TO MSG-COD-SIST
                   MOVE 'OPD    NOVIG'   TO MSG-COD-MENS.
       FIN-BUS-GDO-OPD.
           EXIT.

      *>>>>
      *<<<< EOF AND PGM_PU

      *>>>>
      *<<<< EOF AND PGM_PQ
      *<<<< EOFPQ
       LEE-NXT-PRV-XGDD SECTION.
       INI-LEE-NXT-PRV-XGDD.
           MOVE GAR-CLV-GDD-1 IN CMA-VARI TO GAR-CLV-GDD-1 IN GDD. 
           MOVE 'GAR-CLV-GDD-1' TO FIO-AKEY.
      *<<<< PGM_VMS
           MOVE FIO-GET-NLS TO FIO-CMND.
      *>>>>
           PERFORM GAR-FIO-GDD.
           IF FRM-FFLD = FRM-FFLD-PF5
      *<<<< PGM_VMS
               MOVE 'GDD-KEY-PRV' TO FIO-AKEY
      *>>>>
               MOVE FIO-GET-PRV TO FIO-CMND
           ELSE
               MOVE FIO-GET-NXT TO FIO-CMND.
           PERFORM GAR-FIO-GDD.
           MOVE FIO-STAT TO PGM-STAT-GDD.
           IF FIO-STAT-OKS 
               MOVE FIO-END-BRW TO FIO-CMND
               PERFORM GAR-FIO-GDD.
           IF PGM-STAT-GDD-OKS AND
              GDD-CIC-ICLI IN GDD = DBC-KEY-IDBC IN CMA-VARI
               MOVE GAR-CLV-GDD-2 IN GDD TO GAR-CLV-GDG-1 IN GDG
               MOVE FIO-GET-KEY TO FIO-CMND
               PERFORM GAR-FIO-GDG
               IF FIO-STAT-OKS
                   MOVE 3 TO WSS-IBUS
                   MOVE GAR-NUM-SIS IN GDG TO GDG-NUM-SIS IN GDG-FLD
                   MOVE GAR-COD-CRR IN GDG TO GDG-COD-CRR IN GDG-FLD
               ELSE
                   MOVE 'DAT ERR' TO MSG-COD-MENS
                   MOVE 'GAR' TO MSG-COD-SIST
                   PERFORM GET-MSG
                   MOVE MSG-GLS-DESC TO FRM-MENS
           ELSE
               MOVE '23' TO FIO-STAT.

       FIN-LEE-NXT-PRV-XGDD.
           EXIT.

       LEE-NXT-PRV-XDBC SECTION.
       INI-LEE-NXT-PRV-XDBC.
           MOVE DBC-KEY-IDBC IN CMA-VARI TO DBC-KEY-IDBC IN DBC.
           MOVE FIO-GET-KEY    TO FIO-CMND.
           PERFORM SGC-FIO-DBC.
           IF CMA-IND-KPAD IN CMA-VARI = 'I'
               MOVE 'DBC-IDC-ICLI'  TO FIO-AKEY
           ELSE
               MOVE 'DBC-GLS-NOMC'  TO FIO-AKEY.
               MOVE FIO-GET-NLS TO FIO-CMND
               PERFORM SGC-FIO-DBC
               PERFORM LEE-NXT-PRV-DBC.
       FIN-LEE-NXT-PRV-XDBC.
           EXIT.

       LEE-NXT-PRV-DBC SECTION.
       INI-LEE-NXT-PRV-DBC.
           IF FRM-FFLD = FRM-FFLD-PF7
      *<<<< PGM_VMS
               MOVE 'DBC-GLS-NOMD' TO FIO-AKEY
      *>>>>
               MOVE FIO-GET-PRV TO FIO-CMND
           ELSE
               MOVE FIO-GET-NXT TO FIO-CMND.
      *<<<< PGM_VMS
           IF FRM-FFLD = FRM-FFLD-PF8
      *>>>>
           IF CMA-IND-KPAD IN CMA-VARI = 'I'
               MOVE 'DBC-IDC-ICLI'  TO FIO-AKEY
           ELSE
               MOVE 'DBC-GLS-NOMC'  TO FIO-AKEY.
           PERFORM SGC-FIO-DBC.
           MOVE FIO-STAT TO PGM-STAT-DBC.
           IF FIO-STAT-OKS
               MOVE 1 TO WSS-IBUS.
       FIN-LEE-NXT-PRV-DBC.
           EXIT.

       BUS-ULT-GDG SECTION.
       INI-BUS-ULT-GDG.
      *<<<< PGM_VMS
           STRING DBC-KEY-IDBC IN DBC
                  '999999999999' DELIMITED BY SIZE
              INTO GDD-KEY-PRV IN GDD.
      *    se busca el ultimo hijo, luego de encontrar el padre
           MOVE 'GDD-KEY-PRV' TO FIO-AKEY.
           MOVE FIO-GET-PRV TO FIO-CMND.
      *>>>>
      *<<<< NOT PGM_VSI
           PERFORM GAR-FIO-GDD.
           IF FIO-STAT-OKS AND 
              GDD-CIC-ICLI IN GDD = DBC-KEY-IDBC IN DBC
               MOVE GAR-CLV-GDD-2 IN GDD TO GAR-CLV-GDG-1 IN GDG
               MOVE FIO-GET-KEY TO FIO-CMND
               PERFORM GAR-FIO-GDG
               IF FIO-STAT-OKS
                   MOVE 3 TO WSS-IBUS
                   MOVE GAR-NUM-SIS IN GDG TO GDG-NUM-SIS IN GDG-FLD
                   MOVE GAR-COD-CRR IN GDG TO GDG-COD-CRR IN GDG-FLD.
      *>>>>
       FIN-BUS-ULT-GDG.
           EXIT.
      *>>>>

      *<<<< PGM_VMS OR ( PGM_ AND PGM_DTC )
       COPY GARBGEDP.
      *>>>>
      *>>>>
      *<<<< EOF AND PGM_PU
      *<<<< EOFPU

       ANL-KEY-ALL SECTION.
       INI-ANL-KEY-ALL.
       FIN-ANL-KEY-ALL.
           EXIT.

       BCK-OUT SECTION.
       INI-BCK-OUT.
       FIN-BCK-OUT.
           EXIT.                                                                
 
      * INIT
      * ====

       INI-REG-GDD SECTION.
       INI-INI-REG-GDD.
       FIN-INI-REG-GDD.
           EXIT.

      * GET-UPD
      * =======

       GET-UPD-GDD SECTION.
       INI-GET-UPD-GDD.
           MOVE GDG-NUM-SIS IN GDG-FLD TO GAR-NUM-SIS IN GDD.
           MOVE GDG-COD-CRR IN GDG-FLD TO GAR-COD-CRR IN GDD.
           MOVE 'GAR-CLV-GDD-2'  TO FIO-AKEY.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM GAR-FIO-GDD.
           IF NOT FIO-STAT-OKS
                MOVE WSS-PRIMER TO WSS-MGDD
                MOVE FIO-MENS TO FRM-MENS
                GO TO FIN-GET-UPD-GDD.

           MOVE FIO-GET-KEY-UPD TO FIO-CMND.
           PERFORM GAR-FIO-GDD.

           IF DBC-CAI-ICLI IN GDG-FLD = 
              GDD-CAI-ICLI IN GDD AND

              DBC-IIC-ICLI IN GDG-FLD = 
              GDD-IIC-ICLI IN GDD
               MOVE WSS-MISMO TO WSS-MGDD
               MOVE FIO-ULK-REC TO FIO-CMND
               PERFORM GAR-FIO-GDD
           ELSE
               MOVE WSS-OTRO  TO WSS-MGDD.
       FIN-GET-UPD-GDD.
           EXIT.

      * PUT
      * ===

       PUT-GDD SECTION.
       INI-PUT-GDD.
           IF DBC-IND-ICLI IN GDG-FLD NOT = 'M'
               PERFORM INI-REG-GDD
               MOVE HOY-FHOY TO GDD-FEC-ULT-ACT
               MOVE HOY-HHOY TO GDD-HOR-ACT
               MOVE HOY-FHOY TO GDD-FEC-ING-SIS
               MOVE 'I'    TO GDD-MSC-TACC IN GDD
               MOVE DBC-CAI-ICLI IN GDG-FLD TO 
                    GDD-CAI-ICLI IN GDD
               MOVE DBC-IIC-ICLI IN GDG-FLD TO 
                    GDD-IIC-ICLI IN GDD
               MOVE GAR-NUM-SIS IN GDG TO GAR-NUM-SIS IN GDD
               MOVE GAR-COD-CRR IN GDG TO GAR-COD-CRR IN GDD
      *<<<< PGM_VMS
               MOVE GAR-CLV-GDD-1 IN GDD TO GDD-KEY-PRV.
      *>>>>
               MOVE FIO-PUT TO FIO-CMND
               PERFORM GAR-FIO-GDD
               IF NOT FIO-STAT-OKS
      *        Error inconsistencia en el ingreso : hacer LOGTB e informar      
                   MOVE FIO-MENS TO FRM-MENS
                   PERFORM BCK-OUT.
       FIN-PUT-GDD.
           EXIT.

      * MOD
      * ===

       MOD-GDD SECTION.
       INI-MOD-GDD.
           IF DBC-IND-ICLI IN GDG-FLD = 'M' OR 
              WSS-MISMO-GDD
               GO TO FIN-MOD-GDD.
           MOVE FIO-DEL TO FIO-CMND.
           PERFORM GAR-FIO-GDD.
           IF NOT FIO-STAT-OKS
      *    Error inconsistencia en la eliminacion : hacer LOGTB e informar  
               MOVE FIO-MENS TO FRM-MENS
               PERFORM BCK-OUT
               GO TO FIN-MOD-GDD
           ELSE
               PERFORM PUT-GDD.
           IF NOT FIO-STAT-OKS
      *        Error inconsistencia en la eliminacion : hacer LOGTB e informar  
               MOVE FIO-MENS TO FRM-MENS
               PERFORM BCK-OUT
               GO TO FIN-MOD-GDD.
       FIN-MOD-GDD.
           EXIT.

      *DELETE
      *======

       DEL-GDD SECTION.
       INI-DEL-GDD.
           MOVE GAR-CLV-GDG-1 IN GDG TO GAR-CLV-GDD-2 IN GDD.
           MOVE 'GAR-CLV-GDD-2' TO FIO-AKEY.
           MOVE FIO-GET-NLS TO FIO-CMND.
           PERFORM GAR-FIO-GDD.
           IF NOT ( FIO-STAT-OKS AND
              GAR-CLV-GDD-2 IN GDD = GAR-CLV-GDG-1 IN GDG )
               MOVE '00' TO FIO-STAT
               IF FIO-STAT-OKS 
                   MOVE 'GAR-CLV-GDD-2' TO FIO-AKEY
                   MOVE FIO-END-BRW TO FIO-CMND
                   PERFORM GAR-FIO-GDD
                   GO TO FIN-DEL-GDD
               ELSE
                   GO TO FIN-DEL-GDD.
       LUP-DEL-GDD.
           MOVE 'GAR-CLV-GDD-2' TO FIO-AKEY.
           MOVE FIO-END-BRW TO FIO-CMND.
           PERFORM GAR-FIO-GDD.

           MOVE 'GAR-CLV-GDD-1' TO FIO-AKEY.
           MOVE FIO-GET-KEY-UPD TO FIO-CMND.
           PERFORM GAR-FIO-GDD.
           IF NOT FIO-STAT-OKS
               GO TO FIN-DEL-GDD.
           MOVE 'GAR-CLV-GDD-1' TO FIO-AKEY.
           MOVE FIO-DEL TO FIO-CMND.
           PERFORM GAR-FIO-GDD.
           IF NOT FIO-STAT-OKS
               GO TO FIN-DEL-GDD.

           MOVE GDD-CIC-ICLI IN CMA-VARI TO GDD-CIC-ICLI IN GDD.
           MOVE 'GAR-CLV-GDD-2' TO FIO-AKEY.
           MOVE FIO-GET-NLS TO FIO-CMND.
           PERFORM GAR-FIO-GDD.
           IF FIO-STAT-OKS AND
              GAR-CLV-GDG-1 IN GDG = GAR-CLV-GDD-2 IN GDD
               GO TO LUP-DEL-GDD.
           MOVE '00' TO FIO-STAT.
       FIN-DEL-GDD.
           EXIT.

      *>>>>

       COPY GARBGVCG.
       COPY GARBKVCG.
      *<<<< PGM_VMS OR ( PGM_ AND PGM_DTC AND PGM_PU )
       COPY GARBGIDP.
       COPY GARBKIDP.
      *>>>>
      *<<<< NOT ( PGM_VSI OR PGM_DB2 ) AND PGM_PU
       COPY GARBGELI.
       COPY GARBKELI.
      *>>>>
      *>>>>
      *<<<< EOF

       COPY GARBFGMO.
       COPY GARBFTAG.

      *<<<< PGM_VMS OR ( PGM_ AND PGM_DTC )
       COPY GARBFGDO.

       COPY DAPBFOPD.
       COPY DAPBFRCC.

      *>>>>
      *<<<< PGM_VMS
       COPY SGCBFTAB.
      *>>>>

       COPY TABBVTDU.

      *<<<< PGM_PU
       COPY GNSBFCIC.

       COPY GNSBGCIC.
      *>>>>

      *>>>>

