*%! Codigo adicional para archivo
*% LARGO_DE_MI_COMMAREA = 3000
*%! RVM: 30-03-92 VSI NO MANEJA PFS DEPENDIENTES DE DTC
*% IF PGM_DTC
*% RA1 = "DBC"
*% NRA = 1
*% FRM = "CAP"
*% TBL = "CAP"
*% TCA = 3000
*% INCLUDE 'PFSCONALL'
*% END
*% IF WSS_DTC
      *<<<< WSS_DTC
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-REC-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-CCM-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-DBC-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-RCE-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-EDP-REQA==.
      *>>>>
*% END
*% IF WSS_IBM
      *<<<< WSS_IBM
       COPY SGCBRDBC.
       COPY SGCBRREC.
       COPY SGCBRCCM.
       COPY SGCBREDP.
       COPY GNSWGCPT.
       COPY GNSWGSTR.
       COPY GNSWGQUE.
       COPY GNSBRRCE.
        01  WSS-VARI.
           03  WSS-COD-MENS.
               05 WSS-GLS-MENS                            PIC X(09).
               05 WSS-IND-RSTR                            PIC X(01).
               05 WSS-IND-CMTR                            PIC X(01).
      *ALD/4-JUL-1989
           03  WSS-COD-IPOD.
      *
               05 WSS-GLS-IPO1                            PIC X(01).
               05 WSS-GLS-IPO2                            PIC X(02).
           03  WSS-GLS-NOMB.
               05 FILLER                 VALUE SPACES     PIC X(10).
               05 WSS-NOMB                                PIC X(50).
           03  WSS-GLS-IENT.
               05  WSS-CAI-IMDT                           PIC X(04).
               05  WSS-IIC-IMDT                           PIC X(08).
               05  WSS-NUM-IEDP                           PIC 9(03).
               05  WSS-IND-PODE                           PIC X(03).
               05  WSS-FIL-IENT                           PIC X(12).
           03  WSS-ICOR                  VALUE 0          PIC 9(01).
               88 NO-ASIGNE-CORRELATIVO  VALUE 0.
           03  WSS-IMAX                  VALUE 5          PIC 9(01).
           03  WSS-CIC-ICLI                               PIC X(12).
           03  WSS-I                                      PIC 9(01).
           03  WSS-K                                      PIC 9(01).
           03  WSS-NUM-DIGI                               PIC 9(02).
           03  WSS-ITEM.
               05  WSS-NUM-ITEM                           PIC 9(03).
               05  WSS-NUM-IMAX                           PIC 9(03).
           03  WSS-KEY-IREC                               PIC X(03).
      *>>>>
*% END
*% IF INI_FND_KEY
      *<<<< INI_FND_KEY
*%! RVM: 30-03-92 VSI NO MANEJA PFS DEPENDIENTES DE DTC
*% IF PGM_DTC
           IF FRM-FFLD = FRM-FFLD-PF7 OR FRM-FFLD-PF8
               GO TO NXT-FND-KEY.
*% END
           PERFORM BUS-CIC-CLI.
           IF NOT FIO-STAT-OKS
               MOVE MSG-GLS-DESC TO FRM-MENS
               MOVE '00'         TO FIO-STAT
               MOVE SCR-STAT-CON TO SCR-STAT
               GO TO FIN-FND-KEY.
           IF ADP-NUM-IEDP IN CAP-FLD NOT > ZEROES
               PERFORM BUS-COR-EDP
               IF NOT FIO-STAT-OKS
                   MOVE 'SGC'        TO MSG-COD-SIST
                   MOVE 'ADP    NEX' TO MSG-COD-MENS
                   PERFORM GET-MSG
                   MOVE MSG-GLS-DESC TO FRM-MENS
                   MOVE '00'         TO FIO-STAT
                   MOVE SCR-STAT-CON TO SCR-STAT
                   GO TO FIN-FND-KEY.
           IF FRM-COD-IPOD IN CAP-FLD NOT > SPACES
               PERFORM BUS-ADP
               IF NOT FIO-STAT-OKS
                   MOVE 'SGC'        TO MSG-COD-SIST
                   MOVE 'ADP    NEX' TO MSG-COD-MENS
                   PERFORM GET-MSG
                   MOVE MSG-GLS-DESC TO FRM-MENS
                   MOVE '00'         TO FIO-STAT
                   MOVE SCR-STAT-CON TO SCR-STAT
                   GO TO FIN-FND-KEY.
           MOVE DBC-CIC-ICLI IN DBC TO EDP-CIC-IMDT IN EDP.
           MOVE 'F'                 TO EDP-IND-TINF IN EDP.
           MOVE ADP-NUM-IEDP IN CAP-FLD TO EDP-NUM-IEDP IN EDP.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM SGC-FIO-EDP.
           IF NOT FIO-STAT-OKS
               MOVE DBC-CIC-ICLI IN DBC TO EDP-CIC-IMDT IN EDP
               MOVE 'P'                 TO EDP-IND-TINF IN EDP
               MOVE ADP-NUM-IEDP IN CAP-FLD TO EDP-NUM-IEDP IN EDP
               MOVE FIO-GET-KEY TO FIO-CMND
               PERFORM SGC-FIO-EDP
               IF NOT FIO-STAT-OKS
                   MOVE 'SGC'        TO MSG-COD-SIST
                   MOVE 'EDP    NEX' TO MSG-COD-MENS
                   PERFORM GET-MSG
                   MOVE MSG-GLS-DESC TO FRM-MENS
                   MOVE '00'         TO FIO-STAT
                   MOVE SCR-STAT-CON TO SCR-STAT
                   GO TO FIN-FND-KEY.

           MOVE FRM-COD-IPOD IN CAP-FLD TO WSS-COD-IPOD IN WSS-VARI.
           IF WSS-GLS-IPO2 NOT > SPACES
               IF ( WSS-GLS-IPO1 NOT < '0' AND WSS-GLS-IPO1 NOT > '9' )
                  OR
                  ( WSS-GLS-IPO1 NOT < 'A' AND WSS-GLS-IPO1 NOT > 'Z' )
                     GO TO NO-VAL-TFAC.
           MOVE 'SGC'                   TO TAB-COD-SIST.
           MOVE 'FAC'                   TO TAB-COD-TTAB IN TAB.
           MOVE FRM-COD-IPOD IN CAP-FLD TO TAB-COD-CTAB IN TAB.
           PERFORM VAL-COD.
           MOVE TAB-COD-DAT2(1) TO NUM-NUME.
           MOVE NUM-ZERO-N TO NUM-ZERO.
           MOVE NUM-SGNO-N TO NUM-SGNO.
           MOVE 2          TO NUM-NENT.
           MOVE 0          TO NUM-NDCM.
           CALL 'GNSPVNUM' USING NUM-VARI.
           IF NUM-STAT-OKS
               MOVE NUM-NN9N TO WSS-NUM-DIGI
               MOVE EDP-IND-PODE IN EDP(WSS-NUM-DIGI) TO
                                 ADP-COD-IPOD IN CAP-FLD
           ELSE
               MOVE 'SGC'         TO MSG-COD-SIST
               MOVE 'FACINDNONUM' TO MSG-COD-MENS
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS
               MOVE '00'         TO FIO-STAT
               MOVE SCR-STAT-CON TO SCR-STAT
               GO TO FIN-FND-KEY.
       NO-VAL-TFAC.
           IF EDP-IND-TINF IN EDP = 'P'
               PERFORM KEY-ALL-CAP
               GO TO CON-FND-KEY.
           PERFORM BUS-IPOD.
           IF NOT FIO-STAT-OKS
               MOVE 'SGC'        TO MSG-COD-SIST
               MOVE 'ADP    NEX' TO MSG-COD-MENS
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS
               MOVE '00'         TO FIO-STAT
               MOVE SCR-STAT-CON TO SCR-STAT
               GO TO FIN-FND-KEY
           ELSE
               GO TO CON-FND-KEY.
       NXT-FND-KEY.
      *>>>>
*% END
*% IF FND_KEY
      *<<<< FND_KEY
*%! RVM: 30-03-92 VSI NO MANEJA PFS DEPENDIENTES DE DTC
*% IF PGM_DTC
           IF FRM-FFLD = FRM-FFLD-PF7 OR FRM-FFLD-PF8
               PERFORM LEE-NXT-PRV
               IF FIO-STAT-OKS
                   PERFORM SCR-CLRA-CAP
                   PERFORM PUT-DBC
                   PERFORM BUS-COR-EDP
                   IF NOT FIO-STAT-OKS
                       MOVE 'SGC'        TO MSG-COD-SIST
                       MOVE 'ADP    NEX' TO MSG-COD-MENS
                       PERFORM GET-MSG
                       MOVE MSG-GLS-DESC TO FRM-MENS
                       MOVE '00'         TO FIO-STAT
                       MOVE SCR-STAT-CON TO SCR-STAT
                       GO TO FIN-FND-KEY
                   ELSE
                       PERFORM BUS-ADP
                       IF NOT FIO-STAT-OKS
                           MOVE 'SGC'        TO MSG-COD-SIST
                           MOVE 'ADP    NEX' TO MSG-COD-MENS
                           PERFORM GET-MSG
                           MOVE MSG-GLS-DESC TO FRM-MENS
                           MOVE '00'         TO FIO-STAT
                           MOVE SCR-STAT-CON TO SCR-STAT
                           GO TO FIN-FND-KEY
                       ELSE
                           GO TO CON-FND-KEY
               ELSE
                   MOVE SPACES TO PGM-STAT
                   IF FRM-FFLD = FRM-FFLD-PF7
                       MOVE 'SGC'          TO MSG-COD-SIST
                       MOVE 'ADP    NOPRV' TO MSG-COD-MENS
                       PERFORM GET-MSG
                       MOVE MSG-GLS-DESC TO FRM-MENS
                       MOVE '00'         TO FIO-STAT
                       MOVE SCR-STAT-CON TO SCR-STAT
                       GO TO FIN-FND-KEY
                   ELSE
                       MOVE 'SGC'          TO MSG-COD-SIST
                       MOVE 'ADP    NONXT' TO MSG-COD-MENS
                       PERFORM GET-MSG
                       MOVE MSG-GLS-DESC TO FRM-MENS
                       MOVE '00'         TO FIO-STAT
                       MOVE SCR-STAT-CON TO SCR-STAT
                       GO TO FIN-FND-KEY.
*% END
           GO TO CON-FND-KEY.
      *>>>>
*% END
*% IF FIN_FND_KEY
      *<<<< FIN_FND_KEY
       CON-FND-KEY.
           IF NOT FIO-STAT-OKS
               GO TO FIN-FND-KEY.
           MOVE ADP-KEY-IEDP IN ADP TO EDP-KEY-IEDP IN EDP.
           MOVE 'F'                 TO EDP-IND-TINF IN EDP.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM SGC-FIO-EDP.
           MOVE FIO-STAT TO PGM-STAT-EDP.
           IF NOT FIO-STAT-OKS
               GO TO BUS-POR-EDP.
           IF EDP-MSC-STAT IN EDP = 'A' AND
              SCR-CMND = 'CNV'
               MOVE 'SGC'          TO MSG-COD-SIST
               MOVE 'EDP    YAACA' TO MSG-COD-MENS
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS
               MOVE '00'         TO FIO-STAT
               MOVE SCR-STAT-CON TO SCR-STAT
               GO TO FIN-FND-KEY.

           IF EDP-MSC-STAT IN EDP NOT = 'A' AND
              SCR-CMND = 'CON'
               MOVE 'SGC'          TO MSG-COD-SIST
               MOVE 'EDP    NOACA' TO MSG-COD-MENS
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS
               MOVE '00'         TO FIO-STAT
               MOVE SCR-STAT-CON TO SCR-STAT
               GO TO FIN-FND-KEY.

           PERFORM PUT-TAB-FAC.
           IF WSS-NUM-IMAX IN WSS-VARI NOT > 1
               MOVE 'SGC'        TO MSG-COD-SIST
               MOVE 'ADP    NEX' TO MSG-COD-MENS
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS
               MOVE '00'         TO FIO-STAT
               MOVE SCR-STAT-CON TO SCR-STAT
               GO TO FIN-FND-KEY.
           PERFORM PUT-TAB.
           IF WSS-NUM-IMAX IN WSS-VARI NOT > 2
               MOVE 'CLI    N+ADP' TO MSG-COD-MENS
           ELSE
               MOVE 'ADP    SIG' TO MSG-COD-MENS.
           MOVE 'SGC' TO MSG-COD-SIST.
           PERFORM GET-MSG.
           MOVE MSG-GLS-DESC TO FRM-MENS.
           PERFORM KEY-ALL-CAP.
           MOVE '00' TO FIO-STAT.
           GO TO FIN-FND-KEY.
       BUS-POR-EDP.
           PERFORM PUT-TAB-EDP.
           IF WSS-NUM-IMAX IN WSS-VARI NOT > 1
               MOVE 'SGC'        TO MSG-COD-SIST
               MOVE 'ADP    NEX' TO MSG-COD-MENS
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS
               MOVE '00'         TO FIO-STAT
               MOVE SCR-STAT-CON TO SCR-STAT
               GO TO FIN-FND-KEY.
           PERFORM PUT-TAB.
           IF WSS-NUM-IMAX IN WSS-VARI NOT > 2
               MOVE 'CLI    N+ADP' TO MSG-COD-MENS
           ELSE
               MOVE 'ADP    SIG' TO MSG-COD-MENS.
           MOVE 'SGC' TO MSG-COD-SIST.
           PERFORM GET-MSG.
           MOVE MSG-GLS-DESC TO FRM-MENS.
           PERFORM KEY-ALL-CAP.
           MOVE '00' TO FIO-STAT.
           MOVE FIO-STAT TO PGM-STAT-EDP.
      *>>>>
*% END
*% IF EOF
      *<<<< EOF
      *  MANEJO DE COLAS
       SET-QUE SECTION.
       INI-SET-QUE.
           PERFORM GNS-ERR-QUE.
           MOVE EIBTRMID TO QUE-TERM.
           COMPUTE QUE-LITM = 7 + 111.
           MOVE 'KEY' TO QUE-TYPE.
           MOVE 'ENT' TO QUE-IKEY.
           MOVE +111  TO QUE-LDAT.
           MOVE +0    TO QUE-PCUR.
           MOVE +1    TO QUE-NITM.
           MOVE 'CFP'                   TO KEY-COD-ENTI.
           MOVE DBC-GLS-NOMC IN CAP-FLD TO KEY-GLS-NOMC.
           MOVE DBC-NUM-ICLI IN CAP-FLD TO KEY-NUM-ICLI.
           MOVE DBC-VRF-ICLI IN CAP-FLD TO KEY-VRF-ICLI.
           MOVE DBC-IND-ICLI IN CAP-FLD TO KEY-IND-ICLI.
           MOVE DBC-GLS-ICLI IN CAP-FLD TO KEY-GLS-ICLI.
           MOVE SPACES                  TO KEY-CAI-IOPE.
           MOVE SPACES                  TO KEY-IIC-IOPE.
           MOVE ZEROES                  TO KEY-FEC-FENT.
           MOVE ADP-NUM-IEDP IN CAP-FLD TO KEY-NUM-IENT.
           MOVE ADP-COD-IPOD IN CAP-FLD TO KEY-COD-IENT.
           MOVE ZEROES                  TO KEY-FEC-FCMT.
           MOVE EDP-NUM-DINF IN CAP-FLD TO KEY-NUM-DCMT.
           MOVE EDP-NUM-MINF IN CAP-FLD TO KEY-NUM-MCMT.
           MOVE EDP-NUM-SINF IN CAP-FLD TO KEY-NUM-SCMT.
           MOVE EDP-NUM-AINF IN CAP-FLD TO KEY-NUM-ACMT.
           MOVE ZEROES                  TO KEY-NUM-GCMT.
           MOVE KEY-VARI TO QUE-DATA.
       FIN-SET-QUE.
           EXIT.
      *>>>>
*% END
*% IF EOF_IBM
      *<<<< EOF_IBM
*%! RVM: 30-03-92 VSI NO MANEJA PFS DEPENDIENTES DE DTC
*% IF PGM_DTC
       LEE-NXT-PRV SECTION.
       INI-LEE-NXT-PRV.
           MOVE SPACES TO MSG-COD-MENS.
           IF SCR-DBC-REQA > SPACES
               PERFORM LEE-NXT-PRV-DBC
           ELSE
               PERFORM LEE-NXT-PRV-NOM.
       FIN-LEE-NXT-PRV.
           EXIT.

       LEE-NXT-PRV-DBC SECTION.
       INI-LEE-NXT-PRV-DBC.
           MOVE FIO-KDEF-S TO FIO-KDEF.
           MOVE SCR-DBC-REQA TO ADR-DBC-REQA.
           IF FRM-FFLD = FRM-FFLD-PF7
               MOVE FIO-GET-PRV TO FIO-CMND
           ELSE
               MOVE FIO-GET-NXT TO FIO-CMND.
       LUP-LEE-NXT-PRV-DBC.
           MOVE 'DBC-GLS-NOMC'  TO FIO-AKEY.
           PERFORM SGC-FIO-DBC.
           MOVE FIO-STAT TO PGM-STAT-DBC.
           IF NOT FIO-STAT-OKS
               MOVE 'DBCNO' TO MSG-COD-MENS
               GO TO FIN-LEE-NXT-PRV-DBC.
           MOVE ADR-DBC-REQA TO SCR-DBC-REQA.
       FIN-LEE-NXT-PRV-DBC.
           EXIT.

       LEE-NXT-PRV-NOM SECTION.
       INI-LEE-NXT-PRV-NOM.
           IF DBC-GLS-NOMC IN DBC > SPACES
               MOVE FIO-GET-KEY    TO FIO-CMND
               MOVE 'DBC-GLS-NOMC' TO FIO-AKEY
               PERFORM SGC-FIO-DBC
               IF FIO-STAT-OKS
                   IF FRM-FFLD = FRM-FFLD-PF7
                       MOVE FIO-GET-PRV TO FIO-CMND
                   ELSE
                       MOVE FIO-GET-NXT TO FIO-CMND
               ELSE
                   IF FRM-FFLD = FRM-FFLD-PF7
                       MOVE FIO-GET-LEQ TO FIO-CMND
                   ELSE
                       MOVE FIO-GET-NLS TO FIO-CMND
           ELSE
               IF FRM-FFLD = FRM-FFLD-PF7
                   MOVE FIO-GET-LEQ TO FIO-CMND
               ELSE
                   MOVE FIO-GET-NLS TO FIO-CMND.
       LUP-LEE-NXT-PRV-NOM.
           MOVE 'DBC-GLS-NOMC'  TO FIO-AKEY.
           PERFORM SGC-FIO-DBC.
           MOVE FIO-STAT TO PGM-STAT-DBC.
           IF NOT FIO-STAT-OKS
               MOVE 'DBCNO' TO MSG-COD-MENS
               GO TO FIN-LEE-NXT-PRV-NOM.
           MOVE ADR-DBC-REQA TO SCR-DBC-REQA.
       FIN-LEE-NXT-PRV-NOM.
           EXIT.
*% END

       BUS-ADP SECTION.
       INI-BUS-ADP.
           MOVE SPACES              TO ADP-KEY-IADP IN ADP.
           MOVE DBC-CAI-ICLI IN DBC TO ADP-CAI-IMDT IN ADP.
           MOVE DBC-IIC-ICLI IN DBC TO ADP-IIC-IMDT IN ADP.
           MOVE 'P'                 TO ADP-IND-TINF IN ADP.
           MOVE ADP-NUM-IEDP IN CAP-FLD TO ADP-NUM-IEDP IN ADP.
           MOVE SPACES TO ADP-COD-IPOD IN ADP.
           MOVE ZEROES TO ADP-NUM-IGRP IN ADP.
           MOVE ZEROES TO ADP-NUM-ICMP IN ADP.
           MOVE FIO-GET-NLS    TO FIO-CMND.
       NXT-ADP-ADP.
           PERFORM SGC-FIO-ADP.
           IF FIO-STAT-OKS AND
              ADP-CIC-IMDT IN ADP = DBC-CIC-ICLI IN DBC AND
              ADP-NUM-IEDP IN ADP = ADP-NUM-IEDP IN CAP-FLD AND
              ADP-IND-TINF IN ADP = 'P'
               MOVE ADP-COD-IPOD IN ADP TO ADP-COD-IPOD IN CAP-FLD
               MOVE ADP-COD-IPOD IN ADP TO FRM-COD-IPOD IN CAP-FLD
               MOVE '00' TO PGM-STAT-ADP
               GO TO AUX-BUS-ADP.
           MOVE FIO-STAT-NEX TO FIO-STAT.
      *RVM: 3-JUL-1992  
       AUX-BUS-ADP.
           IF FIO-STAT-OKS
               MOVE FIO-END-BRW TO FIO-CMND
               PERFORM SGC-FIO-ADP.
       FIN-BUS-ADP.
      *RVM:
           EXIT.

       BUS-IPOD SECTION.
       INI-BUS-IPOD.
           MOVE SPACES              TO ADP-KEY-IADP IN ADP.
           MOVE DBC-CAI-ICLI IN DBC TO ADP-CAI-IMDT IN ADP.
           MOVE DBC-IIC-ICLI IN DBC TO ADP-IIC-IMDT IN ADP.
           MOVE 'P'                 TO ADP-IND-TINF IN ADP.
           MOVE ADP-NUM-IEDP IN CAP-FLD TO ADP-NUM-IEDP IN ADP.
           MOVE ADP-COD-IPOD IN CAP-FLD TO ADP-COD-IPOD IN ADP.
           MOVE ZEROES TO ADP-NUM-IGRP IN ADP.
           MOVE ZEROES TO ADP-NUM-ICMP IN ADP.
           MOVE FIO-GET-NLS    TO FIO-CMND.
       NXT-IPOD-ADP.
           PERFORM SGC-FIO-ADP.
           IF FIO-STAT-OKS AND
              ADP-CIC-IMDT IN ADP = DBC-CIC-ICLI IN DBC AND
              ADP-NUM-IEDP IN ADP = ADP-NUM-IEDP IN CAP-FLD AND
              ADP-COD-IPOD IN ADP = ADP-COD-IPOD IN CAP-FLD AND
              ADP-IND-TINF IN ADP = 'P'
               MOVE ADP-COD-IPOD IN ADP TO ADP-COD-IPOD IN CAP-FLD
               MOVE '00' TO PGM-STAT-ADP
               GO TO FIN-BUS-IPOD.
           MOVE FIO-STAT-NEX TO FIO-STAT.
       FIN-BUS-IPOD.
           EXIT.

       PUT-DBC SECTION.
       INI-PUT-DBC.
           MOVE DBC-GLS-NOMC IN DBC TO CPT-STRN.
           PERFORM CPT-BLKS.
           MOVE CPT-STRN TO DBC-GLS-NOMC IN CAP-FLD.

           MOVE DBC-NUM-ICLI IN DBC TO DBC-NUM-ICLI IN CAP-FLD.
           MOVE DBC-VRF-ICLI IN DBC TO DBC-VRF-ICLI IN CAP-FLD.
           MOVE DBC-IND-ICLI IN DBC TO DBC-IND-ICLI IN CAP-FLD.
           MOVE DBC-GLS-ICLI IN DBC TO DBC-GLS-ICLI IN CAP-FLD.
           MOVE DBC-CAI-ICLI IN DBC TO ADP-CAI-IMDT IN CAP-FLD.
           MOVE DBC-IIC-ICLI IN DBC TO ADP-IIC-IMDT IN CAP-FLD.
       FIN-PUT-DBC.
           EXIT.

       BUS-CIC-CLI SECTION.
       INI-BUS-CIC-CLI.
           IF DBC-NUM-ICLI IN CAP-FLD > ZEROES
      *IDC-CLI Busca Cliente por medio de IdC
               MOVE DBC-NUM-ICLI IN CAP-FLD TO DBC-NUM-ICLI IN DBC
               MOVE DBC-IND-ICLI IN CAP-FLD TO DBC-IND-ICLI IN DBC
               MOVE DBC-GLS-ICLI IN CAP-FLD TO DBC-GLS-ICLI IN DBC
               MOVE 'DBC-IDC-ICLI'  TO FIO-AKEY
               MOVE FIO-GET-KEY     TO FIO-CMND
               PERFORM SGC-FIO-DBC
               IF NOT FIO-STAT-OKS
                   MOVE 'CLI    NEX' TO MSG-COD-MENS
                   MOVE 'SGC'        TO MSG-COD-SIST
                   PERFORM GET-MSG
                   MOVE MSG-GLS-DESC IN MSG TO FRM-MENS
                   MOVE FIO-STAT-NEX        TO FIO-STAT
                   GO TO FIN-BUS-CIC-CLI
               ELSE
                   MOVE '00' TO PGM-STAT-DBC

                   MOVE DBC-GLS-NOMC IN DBC TO CPT-STRN
                   PERFORM CPT-BLKS
                   MOVE CPT-STRN TO DBC-GLS-NOMC IN CAP-FLD

*%! RVM: 30-03-92 VSI NO MANEJA PFS DEPENDIENTES DE DTC
*% IF PGM_DTC
                   MOVE ADR-DBC-REQA TO SCR-DBC-REQA
*% END
                   MOVE DBC-CAI-ICLI IN DBC TO ADP-CAI-IMDT IN CAP-FLD
                   MOVE DBC-IIC-ICLI IN DBC TO ADP-IIC-IMDT IN CAP-FLD
           ELSE
           IF DBC-GLS-NOMC IN CAP-FLD > SPACES
               MOVE SPACES TO DBC-GLS-NOMC IN DBC
      *NOM-CLI Busca Cliente por medio del Nombre

               MOVE DBC-GLS-NOMC IN CAP-FLD TO STR-GLS-GSTR
               PERFORM STR-UNS
               MOVE STR-GLS-FUNS IN STR-VARI(1) TO DBC-GLS-APAT IN DBC
               MOVE STR-GLS-FUNS IN STR-VARI(2) TO DBC-GLS-AMAT IN DBC
               MOVE STR-GLS-FUNS IN STR-VARI(3) TO DBC-GLS-NOMB IN DBC

               MOVE 'DBC-GLS-NOMC'  TO FIO-AKEY
               MOVE FIO-GET-NLS     TO FIO-CMND
               PERFORM SGC-FIO-DBC
               IF NOT FIO-STAT-OKS
                   MOVE 'CLI    NEX' TO MSG-COD-MENS
                   MOVE 'SGC'        TO MSG-COD-SIST
                   PERFORM GET-MSG
                   MOVE MSG-GLS-DESC IN MSG TO FRM-MENS
                   MOVE FIO-STAT-NEX        TO FIO-STAT
                   GO TO FIN-BUS-CIC-CLI
               ELSE
                   MOVE '00'         TO PGM-STAT-DBC
*%! RVM: 30-03-92 VSI NO MANEJA PFS DEPENDIENTES DE DTC
*% IF PGM_DTC
                   MOVE ADR-DBC-REQA TO SCR-DBC-REQA
*% END

                   MOVE DBC-GLS-NOMC IN DBC TO CPT-STRN
                   PERFORM CPT-BLKS
                   MOVE CPT-STRN TO DBC-GLS-NOMC IN CAP-FLD

                   MOVE DBC-NUM-ICLI IN DBC TO DBC-NUM-ICLI IN CAP-FLD
                   MOVE DBC-VRF-ICLI IN DBC TO DBC-VRF-ICLI IN CAP-FLD
                   MOVE DBC-IND-ICLI IN DBC TO DBC-IND-ICLI IN CAP-FLD
                   MOVE DBC-GLS-ICLI IN DBC TO DBC-GLS-ICLI IN CAP-FLD
                   MOVE DBC-CAI-ICLI IN DBC TO ADP-CAI-IMDT IN CAP-FLD
                   MOVE DBC-IIC-ICLI IN DBC TO ADP-IIC-IMDT IN CAP-FLD.
           MOVE 'P' TO ADP-IND-TINF IN ADP.
       FIN-BUS-CIC-CLI.
           EXIT.

       SCRL-TAB-CAP SECTION.
       INI-SCRL-TAB-CAP.
           MOVE SPACES TO MSG-COD-MENS.
           IF FRM-FFLD = FRM-FFLD-PF6
               IF FRM-NUM-IAPO IN CAP-FLD(WSS-IMAX) > ZEROES OR
                  FRM-COD-CLAP IN CAP-FLD(WSS-IMAX) > SPACES
                   PERFORM PUT-TAB-ASC
               ELSE
                   MOVE 'CLI    N+ADP' TO MSG-COD-MENS
           ELSE
               IF FRM-NUM-IAPO IN CAP-FLD(1) > ZEROES OR
                  FRM-COD-CLAP IN CAP-FLD(1) > SPACES
                   PERFORM PUT-TAB-DSC
               ELSE
                   MOVE 'CLI    N-ADP' TO MSG-COD-MENS.
           IF MSG-COD-MENS > SPACES
               MOVE 'SGC'        TO MSG-COD-SIST
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MEN1.
       FIN-SCRL-TAB-CAP.
           EXIT.

       BUS-COR-EDP SECTION.
       INI-BUS-COR-EDP.
           MOVE DBC-CIC-ICLI IN DBC TO EDP-CIC-IMDT IN EDP.
           MOVE 'F'                 TO EDP-IND-TINF IN EDP.
           MOVE 99                  TO EDP-NUM-IEDP IN EDP.
           MOVE FIO-GET-LEQ TO FIO-CMND.
           PERFORM SGC-FIO-EDP.
           IF FIO-STAT-OKS AND
              EDP-CIC-IMDT IN EDP = DBC-CIC-ICLI IN DBC AND
              EDP-IND-TINF IN EDP = 'F'
               MOVE EDP-NUM-IEDP IN EDP TO ADP-NUM-IEDP IN CAP-FLD
           ELSE
               MOVE ZEROES TO ADP-NUM-IEDP IN CAP-FLD.

           IF FIO-STAT-OKS
               MOVE FIO-END-BRW TO FIO-CMND
               PERFORM SGC-FIO-EDP.

           MOVE DBC-CIC-ICLI IN DBC TO EDP-CIC-IMDT IN EDP.
           MOVE 'P'                 TO EDP-IND-TINF IN EDP.
           MOVE 99                  TO EDP-NUM-IEDP IN EDP.
           MOVE FIO-GET-LEQ TO FIO-CMND.
           PERFORM SGC-FIO-EDP.
           IF FIO-STAT-OKS AND
              EDP-CIC-IMDT IN EDP = DBC-CIC-ICLI IN DBC AND
              EDP-IND-TINF IN EDP = 'P'
               MOVE EDP-NUM-IEDP IN EDP TO ADP-NUM-IEDP IN ADP
           ELSE
               MOVE ZEROES TO ADP-NUM-IEDP IN ADP.

           IF FIO-STAT-OKS
               MOVE FIO-END-BRW TO FIO-CMND
               PERFORM SGC-FIO-EDP.

           IF ADP-NUM-IEDP IN     ADP NOT > ZEROES AND
              ADP-NUM-IEDP IN CAP-FLD NOT > ZEROES
               MOVE FIO-STAT-NEX TO FIO-STAT
               GO TO FIN-BUS-COR-EDP.
           IF ADP-NUM-IEDP IN ADP NOT < ADP-NUM-IEDP IN CAP-FLD
               MOVE ADP-NUM-IEDP IN ADP TO ADP-NUM-IEDP IN CAP-FLD
           ELSE
               MOVE ADP-NUM-IEDP IN CAP-FLD TO ADP-NUM-IEDP IN ADP.
       FIN-BUS-COR-EDP.
           EXIT.

       PUT-TAB-DBC-REC SECTION.
       INI-PUT-TAB-DBC-REC.
           MOVE REC-CIC-IREL IN REC TO DBC-CIC-ICLI.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM SGC-FIO-DBC.

           MOVE DBC-GLS-NOMC IN DBC TO CPT-STRN.
           PERFORM CPT-BLKS.
           MOVE CPT-STRN TO WSS-NOMB IN WSS-VARI.

           MOVE WSS-GLS-NOMB IN WSS-VARI TO FRM-GLS-NAPO IN
                                            CAP-FLD(WSS-I).
           MOVE DBC-NUM-ICLI IN DBC TO FRM-NUM-IAPO IN
                                            CAP-FLD(WSS-I).
           MOVE DBC-VRF-ICLI IN DBC TO FRM-VRF-IAPO IN
                                            CAP-FLD(WSS-I).
           MOVE DBC-IND-ICLI IN DBC TO FRM-IND-IAPO IN
                                            CAP-FLD(WSS-I).
           MOVE DBC-GLS-ICLI IN DBC TO FRM-GLS-IAPO IN
                                            CAP-FLD(WSS-I).
           MOVE SPACES TO FRM-COD-CLAP IN CAP-FLD(WSS-I).
           MOVE ZEROES TO FRM-NUM-APAR IN CAP-FLD(WSS-I).
           MOVE SPACES TO FRM-GLS-CONE IN CAP-FLD(WSS-I).
       FIN-PUT-TAB-DBC-REC.
           EXIT.

       PUT-TAB SECTION.
       INI-PUT-TAB.
           MOVE 1                TO QUE-NITM.
           MOVE EIBTRMID         TO QUE-TERM.
           MOVE 'CAP'            TO QUE-TYPE.
           MOVE +6               TO QUE-LITM.
           MOVE QUE-GET TO QUE-CMND.
           PERFORM GNS-PRO-QUE.
           MOVE QUE-ITEM TO WSS-ITEM IN WSS-VARI.
           IF WSS-NUM-IMAX IN WSS-VARI NOT > 1
               MOVE 'NEXTMP' TO MSG-COD-MENS
               GO TO FIN-PUT-TAB.
           ADD 1 TO QUE-NITM.
           MOVE EIBTRMID         TO QUE-TERM.
           MOVE 'CAP'            TO QUE-TYPE.
           MOVE +900             TO QUE-LITM.
           MOVE QUE-GET TO QUE-CMND
           PERFORM GNS-PRO-QUE.

           MOVE QUE-ITEM TO FRM-GLS-NAPO-TBL.
           MOVE QUE-NITM TO WSS-NUM-ITEM.
           MOVE 1 TO QUE-NITM.
           MOVE EIBTRMID         TO QUE-TERM.
           MOVE 'CAP'            TO QUE-TYPE.
           MOVE +6               TO QUE-LITM.
           MOVE WSS-ITEM IN WSS-VARI TO QUE-ITEM.
           MOVE QUE-MOD TO QUE-CMND
           PERFORM GNS-PRO-QUE.
       FIN-PUT-TAB.
           EXIT.

       PUT-TAB-ASC SECTION.
       INI-PUT-TAB-ASC.
           PERFORM GNS-ERR-QUE.
           MOVE 1 TO QUE-NITM.
           MOVE EIBTRMID         TO QUE-TERM.
           MOVE 'CAP'            TO QUE-TYPE.
           MOVE +6               TO QUE-LITM.
           MOVE QUE-GET TO QUE-CMND
           PERFORM GNS-PRO-QUE.
           MOVE QUE-ITEM TO WSS-ITEM IN WSS-VARI.
           MOVE WSS-NUM-ITEM TO QUE-NITM.
           ADD 1 TO QUE-NITM.
           IF QUE-NITM > WSS-NUM-IMAX IN WSS-VARI
               MOVE 'CLI    N+ADP' TO MSG-COD-MENS
               GO TO FIN-PUT-TAB-ASC.
           IF QUE-NITM = WSS-NUM-IMAX IN WSS-VARI
               MOVE 'CLI    N+ADP' TO MSG-COD-MENS
           ELSE
               MOVE 'ADP    SIG' TO MSG-COD-MENS.
           MOVE EIBTRMID         TO QUE-TERM.
           MOVE 'CAP'            TO QUE-TYPE.
           MOVE +900             TO QUE-LITM.
           MOVE QUE-GET TO QUE-CMND
           PERFORM GNS-PRO-QUE.
           MOVE QUE-ITEM TO FRM-GLS-NAPO-TBL.
           MOVE QUE-NITM TO WSS-NUM-ITEM.

           MOVE 1 TO QUE-NITM.
           MOVE EIBTRMID         TO QUE-TERM.
           MOVE 'CAP'            TO QUE-TYPE.
           MOVE +6               TO QUE-LITM.
           MOVE WSS-ITEM IN WSS-VARI TO QUE-ITEM.
           MOVE QUE-MOD TO QUE-CMND
           PERFORM GNS-PRO-QUE.
       FIN-PUT-TAB-ASC.
           EXIT.

       PUT-TAB-DSC SECTION.
       INI-PUT-TAB-DSC.
           PERFORM GNS-ERR-QUE.
           MOVE 1 TO QUE-NITM.
           MOVE EIBTRMID         TO QUE-TERM.
           MOVE 'CAP'            TO QUE-TYPE.
           MOVE +6               TO QUE-LITM.
           MOVE QUE-GET TO QUE-CMND
           PERFORM GNS-PRO-QUE.
           MOVE QUE-ITEM TO WSS-ITEM IN WSS-VARI.
           MOVE WSS-NUM-ITEM TO QUE-NITM.
           SUBTRACT 1 FROM QUE-NITM.
           IF QUE-NITM < 2
               MOVE 'CLI    N-ADP' TO MSG-COD-MENS
               GO TO FIN-PUT-TAB-DSC.
           IF QUE-NITM = 2
               MOVE 'CLI    N-ADP' TO MSG-COD-MENS
           ELSE
               MOVE 'ADP    ANT' TO MSG-COD-MENS.
           MOVE EIBTRMID         TO QUE-TERM.
           MOVE 'CAP'            TO QUE-TYPE.
           MOVE +900             TO QUE-LITM.
           MOVE QUE-GET TO QUE-CMND
           PERFORM GNS-PRO-QUE.
           MOVE QUE-ITEM TO FRM-GLS-NAPO-TBL.
           MOVE QUE-NITM TO WSS-NUM-ITEM.

           MOVE 1 TO QUE-NITM.
           MOVE EIBTRMID         TO QUE-TERM.
           MOVE 'CAP'            TO QUE-TYPE.
           MOVE +6               TO QUE-LITM.
           MOVE WSS-ITEM IN WSS-VARI TO QUE-ITEM.
           MOVE QUE-MOD TO QUE-CMND
           PERFORM GNS-PRO-QUE.
       FIN-PUT-TAB-DSC.
           EXIT.

       PUT-TAB-EDP SECTION.
       INI-PUT-TAB-EDP.
           MOVE ADP-CAI-IMDT IN CAP-FLD TO EDP-CAI-IMDT IN EDP.
           MOVE ADP-IIC-IMDT IN CAP-FLD TO EDP-IIC-IMDT IN EDP.
           MOVE 'F'                     TO EDP-IND-TINF IN EDP.
           MOVE 99                      TO EDP-NUM-IEDP IN EDP.
           MOVE FIO-GET-LEQ TO FIO-CMND.
       CON-SIG-PUT-TAB-EDP.
           PERFORM SGC-FIO-EDP.
           IF FIO-STAT-OKS AND
              EDP-CAI-IMDT IN EDP = ADP-CAI-IMDT IN ADP AND
              EDP-IIC-IMDT IN EDP = ADP-IIC-IMDT IN ADP AND
              EDP-IND-TINF IN EDP = 'F'
               IF EDP-MSC-STAT IN EDP = 'A'
                   GO TO SIG-PUT-TAB-EDP
               ELSE
                   MOVE FIO-GET-PRV TO FIO-CMND
                   GO TO CON-SIG-PUT-TAB-EDP
           ELSE
               MOVE ZEROES TO EDP-NUM-IEDP IN EDP.

       SIG-PUT-TAB-EDP.
      *RVM:  3-JUL-1992 
           IF FIO-STAT-OKS
               MOVE FIO-END-BRW TO FIO-CMND
               PERFORM SGC-FIO-EDP.
      *RVM:
           PERFORM GNS-ERR-QUE.
           PERFORM DEL-TMP-STRG.
           PERFORM PUT-TMP-STR1.
           MOVE 0                       TO WSS-I   IN WSS-VARI.
           MOVE 1                       TO WSS-NUM-IMAX IN WSS-VARI.
           MOVE ADP-CAI-IMDT IN CAP-FLD TO EDP-CAI-IMDT IN EDP.
           MOVE ADP-IIC-IMDT IN CAP-FLD TO EDP-IIC-IMDT IN EDP.
           MOVE 'P'                     TO EDP-IND-TINF IN EDP.
      *    MOVE ZEROES                  TO EDP-NUM-IEDP IN EDP.
           MOVE FIO-GET-NLS TO FIO-CMND.
           PERFORM SGC-FIO-EDP.
           IF NOT ( FIO-STAT-OKS AND
              EDP-CAI-IMDT IN EDP = ADP-CAI-IMDT IN ADP AND
              EDP-IIC-IMDT IN EDP = ADP-IIC-IMDT IN ADP AND
              EDP-IND-TINF IN EDP = 'P' )
               GO TO GET-NXT-EDP.
           IF EDP-MSC-STAT IN EDP = 'A'  AND
              SCR-CMND = 'CNV'
               GO TO GET-NXT-EDP.
           IF EDP-MSC-STAT IN EDP NOT = 'A'  AND
              SCR-CMND = 'CON'
               GO TO GET-NXT-EDP.
       LEE-REG-EDP.
           MOVE EDP-NUM-IEDP IN EDP TO ADP-NUM-IEDP IN ADP.
           MOVE EDP-NUM-IEDP IN EDP TO ADP-NUM-IEDP IN CAP-FLD.
           MOVE FRM-COD-IPOD IN CAP-FLD TO WSS-COD-IPOD IN WSS-VARI.
           IF WSS-GLS-IPO2 NOT > SPACES
               IF ( WSS-GLS-IPO1 NOT < '0' AND WSS-GLS-IPO1 NOT > '9' )
                  OR
                  ( WSS-GLS-IPO1 NOT < 'A' AND WSS-GLS-IPO1 NOT > 'Z' )
                     GO TO CON-PUT-TAB-EDP.
           MOVE 'SGC'                   TO TAB-COD-SIST.
           MOVE 'FAC'                   TO TAB-COD-TTAB IN TAB.
           MOVE FRM-COD-IPOD IN CAP-FLD TO TAB-COD-CTAB IN TAB.
           PERFORM VAL-COD.
           MOVE TAB-COD-DAT2(1) TO NUM-NUME.
           MOVE NUM-ZERO-N TO NUM-ZERO.
           MOVE NUM-SGNO-N TO NUM-SGNO.
           MOVE 2          TO NUM-NENT.
           MOVE 0          TO NUM-NDCM.
           CALL 'GNSPVNUM' USING NUM-VARI.
           IF NUM-STAT-OKS
               MOVE NUM-NN9N TO WSS-NUM-DIGI
               MOVE EDP-IND-PODE IN EDP(WSS-NUM-DIGI) TO
                                 ADP-COD-IPOD IN CAP-FLD
           ELSE
               MOVE 'SGC'         TO MSG-COD-SIST
               MOVE 'FACINDNONUM' TO MSG-COD-MENS
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS
               MOVE '00'         TO FIO-STAT
               MOVE SCR-STAT-CON TO SCR-STAT
               GO TO FIN-PUT-TAB-EDP.
       CON-PUT-TAB-EDP.
           MOVE ADP-COD-IPOD IN CAP-FLD TO ADP-COD-IPOD IN ADP.
           MOVE ZEROES                  TO ADP-NUM-IGRP IN ADP.
           MOVE ZEROES                  TO ADP-NUM-ICMP IN ADP.
           MOVE FIO-GET-NLS TO FIO-CMND.
           PERFORM SGC-FIO-ADP.
           IF NOT ( FIO-STAT-OKS AND
              ADP-CAI-IMDT IN ADP = ADP-CAI-IMDT IN CAP-FLD AND
              ADP-IIC-IMDT IN ADP = ADP-IIC-IMDT IN CAP-FLD AND
              ADP-NUM-IEDP IN ADP = ADP-NUM-IEDP IN CAP-FLD AND
              ADP-COD-IPOD IN ADP = ADP-COD-IPOD IN CAP-FLD AND
              ADP-IND-TINF IN ADP = 'P' )
               GO TO GET-NXT-EDP.
           IF WSS-I IN WSS-VARI > ZEROES
               MOVE 'SGC' TO TAB-COD-SIST
               MOVE 'CNX' TO TAB-COD-TTAB IN TAB
               MOVE 'O'   TO TAB-COD-CTAB IN TAB
               PERFORM BUS-TAB
               MOVE TAB-GLS-DESC IN TAB TO FRM-GLS-CONE IN
                                           CAP-FLD(WSS-I).
       LUP-PUT-TAB-EDP.
           ADD 1  TO WSS-I.
           IF WSS-I > WSS-IMAX
               PERFORM PUT-TMP-STRG
               MOVE 0 TO WSS-I
               GO TO LUP-PUT-TAB-EDP.
           PERFORM PUT-TAB-CAP.
           IF WSS-KEY-IREC > SPACES
               PERFORM PUT-TAB-REC.
           MOVE FIO-GET-NXT TO FIO-CMND.
           PERFORM SGC-FIO-ADP.
           IF FIO-STAT-OKS AND
              ADP-CAI-IMDT IN ADP = ADP-CAI-IMDT IN CAP-FLD AND
              ADP-IIC-IMDT IN ADP = ADP-IIC-IMDT IN CAP-FLD AND
              ADP-NUM-IEDP IN ADP = ADP-NUM-IEDP IN CAP-FLD AND
              ADP-COD-IPOD IN ADP = ADP-COD-IPOD IN CAP-FLD AND
              ADP-IND-TINF IN ADP = 'P'
               IF WSS-I IN WSS-VARI = WSS-IMAX IN WSS-VARI
                   PERFORM MOV-CNX-CAP
                   GO TO LUP-PUT-TAB-EDP
               ELSE
                   GO TO LUP-PUT-TAB-EDP.
       GET-NXT-EDP.
           MOVE FIO-GET-NXT TO FIO-CMND.
           PERFORM SGC-FIO-EDP.
           IF NOT ( FIO-STAT-OKS AND
              EDP-CAI-IMDT IN EDP = ADP-CAI-IMDT IN CAP-FLD AND
              EDP-IIC-IMDT IN EDP = ADP-IIC-IMDT IN CAP-FLD )
               GO TO NXT-PUT-TAB-EDP.
           IF EDP-IND-TINF IN EDP NOT = 'P'
               GO TO GET-NXT-EDP.
           IF EDP-MSC-STAT IN EDP = 'A'  AND
              SCR-CMND = 'CNV'
               GO TO GET-NXT-EDP.
           IF EDP-MSC-STAT IN EDP NOT = 'A'  AND
              SCR-CMND = 'CON'
               GO TO GET-NXT-EDP.
           GO TO LEE-REG-EDP.
       NXT-PUT-TAB-EDP.
      *     IF WSS-KEY-IREC > SPACES AND
      *        WSS-I = WSS-IMAX
      *         PERFORM PUT-TMP-STRG.
           IF WSS-I IN WSS-VARI > ZEROES AND
              WSS-I IN WSS-VARI NOT > WSS-IMAX IN WSS-VARI
               ADD 1 TO WSS-I
               PERFORM CLR-TAB-CAP VARYING WSS-I FROM WSS-I BY 1
                                       UNTIL WSS-I > WSS-IMAX
               PERFORM PUT-TMP-STRG.
           PERFORM MOD-TMP-STR1.
       FIN-PUT-TAB-EDP.
           EXIT.

       PUT-TAB-FAC SECTION.
       INI-PUT-TAB-FAC.
           PERFORM GNS-ERR-QUE.
           PERFORM DEL-TMP-STRG.
           PERFORM PUT-TMP-STR1.
           MOVE 0                       TO WSS-I   IN WSS-VARI.
           MOVE 1                       TO WSS-NUM-IMAX IN WSS-VARI.
           MOVE ADP-CAI-IMDT IN CAP-FLD TO ADP-CAI-IMDT IN ADP.
           MOVE ADP-IIC-IMDT IN CAP-FLD TO ADP-IIC-IMDT IN ADP.
           MOVE 'P'                     TO ADP-IND-TINF IN ADP.
           MOVE ADP-NUM-IEDP IN CAP-FLD TO ADP-NUM-IEDP IN ADP
           MOVE ADP-COD-IPOD IN CAP-FLD TO ADP-COD-IPOD IN ADP
           MOVE ZEROES                  TO ADP-NUM-IGRP IN ADP.
           MOVE ZEROES                  TO ADP-NUM-ICMP IN ADP.
           MOVE FIO-GET-NLS TO FIO-CMND.
           PERFORM SGC-FIO-ADP.
           IF NOT ( FIO-STAT-OKS AND
              ADP-CAI-IMDT IN ADP = ADP-CAI-IMDT IN CAP-FLD AND
              ADP-IIC-IMDT IN ADP = ADP-IIC-IMDT IN CAP-FLD AND
              ADP-NUM-IEDP IN ADP = ADP-NUM-IEDP IN CAP-FLD AND
              ADP-COD-IPOD IN ADP = ADP-COD-IPOD IN CAP-FLD AND
              ADP-IND-TINF IN ADP = 'P' )
               GO TO FIN-PUT-TAB-FAC.
       LUP-PUT-TAB-FAC.
           ADD 1  TO WSS-I.
           IF WSS-I > WSS-IMAX
               PERFORM PUT-TMP-STRG
               MOVE 0 TO WSS-I
               GO TO LUP-PUT-TAB-FAC.
           PERFORM PUT-TAB-CAP.
           IF WSS-KEY-IREC > SPACES
               PERFORM PUT-TAB-REC.
           MOVE FIO-GET-NXT TO FIO-CMND.
           PERFORM SGC-FIO-ADP.
           IF FIO-STAT-OKS AND
              ADP-CAI-IMDT IN ADP = ADP-CAI-IMDT IN CAP-FLD AND
              ADP-IIC-IMDT IN ADP = ADP-IIC-IMDT IN CAP-FLD AND
              ADP-NUM-IEDP IN ADP = ADP-NUM-IEDP IN CAP-FLD AND
              ADP-COD-IPOD IN ADP = ADP-COD-IPOD IN CAP-FLD AND
              ADP-IND-TINF IN ADP = 'P'
               IF WSS-I IN WSS-VARI = WSS-IMAX IN WSS-VARI
                   PERFORM MOV-CNX-CAP
                   GO TO LUP-PUT-TAB-FAC
               ELSE
                   GO TO LUP-PUT-TAB-FAC.
      *     IF WSS-KEY-IREC > SPACES AND
      *        WSS-I = WSS-IMAX
      *         PERFORM PUT-TMP-STRG.
           IF WSS-I IN WSS-VARI > ZEROES AND
              WSS-I IN WSS-VARI NOT > WSS-IMAX IN WSS-VARI
               ADD 1 TO WSS-I
               PERFORM CLR-TAB-CAP VARYING WSS-I FROM WSS-I BY 1
                                       UNTIL WSS-I > WSS-IMAX
               PERFORM PUT-TMP-STRG.
           PERFORM MOD-TMP-STR1.
       FIN-PUT-TAB-FAC.
           EXIT.

       MOV-CNX-CAP SECTION.
       INI-MOV-CNX-CAP.
           MOVE 'SGC'               TO TAB-COD-SIST.
           MOVE 'CNX'               TO TAB-COD-TTAB IN TAB.
           MOVE ADP-IND-CONE IN ADP TO TAB-COD-CTAB IN TAB.
           PERFORM BUS-TAB.
           IF NOT ( TAB-CIC-CTAB IN TAB = 'O' OR
              TAB-CIC-CTAB IN TAB = 'Y' )
               GO TO FIN-MOV-CNX-CAP.
           IF TAB-CIC-CTAB IN TAB = 'O'
                MOVE TAB-GLS-DESC IN TAB TO FRM-GLS-CONE IN
                                           CAP-FLD(WSS-IMAX).
           IF TAB-CIC-CTAB IN TAB = 'Y'
               MOVE TAB-GLS-DESC IN TAB TO FRM-GLS-CONE IN
                                           CAP-FLD(WSS-IMAX).
       FIN-MOV-CNX-CAP.
           EXIT.

       PUT-TAB-CAP SECTION.
       INI-PUT-TAB-CAP.
           MOVE SPACES TO WSS-KEY-IREC IN WSS-VARI.
           IF ADP-CIC-IAPO IN ADP > SPACES
               MOVE ADP-CIC-IAPO IN ADP TO DBC-CIC-ICLI IN DBC
               MOVE FIO-GET-KEY TO FIO-CMND
               PERFORM SGC-FIO-DBC
               IF FIO-STAT-OKS

                   MOVE DBC-GLS-NOMC IN DBC TO CPT-STRN
                   PERFORM CPT-BLKS
                   MOVE CPT-STRN TO FRM-GLS-NAPO IN CAP-FLD(WSS-I)

                   MOVE DBC-NUM-ICLI IN DBC TO FRM-NUM-IAPO IN
                                             CAP-FLD(WSS-I)
                   MOVE DBC-VRF-ICLI IN DBC TO FRM-VRF-IAPO IN
                                             CAP-FLD(WSS-I)
                   MOVE DBC-IND-ICLI IN DBC TO FRM-IND-IAPO IN
                                             CAP-FLD(WSS-I)
                   MOVE DBC-GLS-ICLI IN DBC TO FRM-GLS-IAPO IN
                                             CAP-FLD(WSS-I)
               ELSE
                   MOVE SPACES TO FRM-GLS-NAPO IN CAP-FLD(WSS-I)
                   MOVE ZEROES TO FRM-NUM-IAPO IN CAP-FLD(WSS-I)
                   MOVE SPACES TO FRM-VRF-IAPO IN CAP-FLD(WSS-I)
                   MOVE SPACES TO FRM-IND-IAPO IN CAP-FLD(WSS-I)
                   MOVE SPACES TO FRM-GLS-IAPO IN CAP-FLD(WSS-I)
           ELSE
               MOVE 'REC' TO WSS-KEY-IREC IN WSS-VARI
               MOVE SPACES TO FRM-GLS-NAPO IN CAP-FLD(WSS-I)
               MOVE ZEROES TO FRM-NUM-IAPO IN CAP-FLD(WSS-I)
               MOVE SPACES TO FRM-VRF-IAPO IN CAP-FLD(WSS-I)
               MOVE SPACES TO FRM-IND-IAPO IN CAP-FLD(WSS-I)
               MOVE SPACES TO FRM-GLS-IAPO IN CAP-FLD(WSS-I)
               MOVE ADP-COD-CLAP IN ADP TO FRM-COD-CLAP IN
                                              CAP-FLD(WSS-I)
               MOVE ADP-NUM-APAR IN ADP TO FRM-NUM-APAR IN
                                              CAP-FLD(WSS-I).
           IF ADP-IND-CONE IN ADP NOT > SPACES
               GO TO FIN-PUT-TAB-CAP.
           MOVE 'SGC'               TO TAB-COD-SIST.
           MOVE 'CNX'               TO TAB-COD-TTAB IN TAB.
           MOVE ADP-IND-CONE IN ADP TO TAB-COD-CTAB IN TAB.
           PERFORM BUS-TAB.
           IF NOT ( TAB-CIC-CTAB IN TAB = 'O' OR
              TAB-CIC-CTAB IN TAB = 'Y' )
               GO TO FIN-PUT-TAB-CAP.
           IF TAB-CIC-CTAB IN TAB = 'O'
               IF WSS-I > 1
                   SUBTRACT 1 FROM WSS-I GIVING WSS-K IN WSS-VARI
                   MOVE TAB-GLS-DESC IN TAB TO FRM-GLS-CONE IN
                                                CAP-FLD(WSS-K).
           IF TAB-CIC-CTAB IN TAB = 'Y'
               IF WSS-I > 1
                   SUBTRACT 1 FROM WSS-I GIVING WSS-K IN WSS-VARI
                   MOVE TAB-GLS-DESC IN TAB TO FRM-GLS-CONE IN
                                                CAP-FLD(WSS-K).
       FIN-PUT-TAB-CAP.
           EXIT.

       PUT-TAB-REC SECTION.
       INI-PUT-TAB-REC.
           MOVE SPACES                   TO REC-KEY-IREC IN REC.
           MOVE ADP-CIC-IMDT IN ADP      TO REC-CIC-ICLI IN REC.
           MOVE REC-COD-OPOD IN REC-VARI TO REC-COD-TREC IN REC.
           MOVE FIO-GET-NLS TO FIO-CMND.
       LUP-PUT-TAB-REC.
           PERFORM SGC-FIO-REC.
           IF NOT ( FIO-STAT-OKS AND
              ADP-CIC-IMDT IN ADP = REC-CIC-ICLI IN REC AND
              REC-COD-OPOD IN REC-VARI = REC-COD-TREC IN REC)
               GO TO FIN-PUT-TAB-REC.
           IF NOT (REC-NUM-TREC IN REC = ADP-NUM-IEDP IN ADP AND
               REC-COD-AREC IN REC = ADP-COD-CLAP IN ADP  AND
               REC-IND-VIGE IN REC NOT = 'N' )
               MOVE FIO-GET-NXT TO FIO-CMND
               GO TO LUP-PUT-TAB-REC.
       LUP-GEN-REC.
           ADD 1 TO WSS-I.
           IF WSS-I > WSS-IMAX
               PERFORM PUT-TMP-STRG
               MOVE 0 TO WSS-I
               GO TO LUP-GEN-REC.
           PERFORM PUT-TAB-DBC-REC.
           MOVE FIO-GET-NXT TO FIO-CMND.
       LUP-BUS-SIG-REC.
           PERFORM SGC-FIO-REC.
           IF NOT ( FIO-STAT-OKS AND
              ADP-CIC-IMDT IN ADP = REC-CIC-ICLI IN REC AND
              REC-COD-OPOD IN REC-VARI = REC-COD-TREC IN REC)
      *         IF WSS-I =  WSS-IMAX
      *             PERFORM PUT-TMP-STRG
      *             MOVE 0 TO WSS-I
      *             GO TO FIN-PUT-TAB-REC
      *         ELSE
                   GO TO FIN-PUT-TAB-REC.
           IF NOT (REC-NUM-TREC IN REC = ADP-NUM-IEDP IN ADP AND
               REC-COD-AREC IN REC = ADP-COD-CLAP IN ADP  AND
               REC-IND-VIGE IN REC NOT = 'N' )
               MOVE FIO-GET-NXT TO FIO-CMND
               GO TO LUP-BUS-SIG-REC.
           GO TO LUP-GEN-REC.
       FIN-PUT-TAB-REC.
           EXIT.

       PUT-TMP-STRG SECTION.
       INI-PUT-TMP-STRG.
           ADD 1 TO WSS-NUM-IMAX IN WSS-VARI.
           MOVE EIBTRMID         TO QUE-TERM.
           MOVE 'CAP'            TO QUE-TYPE.
           MOVE WSS-NUM-IMAX IN WSS-VARI TO QUE-NITM.
           MOVE FRM-GLS-NAPO-TBL TO QUE-ITEM.
           MOVE +900             TO QUE-LITM.
           MOVE QUE-PUT          TO QUE-CMND.
           PERFORM GNS-PRO-QUE.
           PERFORM CLR-TAB-CAP VARYING WSS-I FROM 1 BY 1
                                       UNTIL WSS-I > WSS-IMAX.
       FIN-PUT-TMP-STRG.
           EXIT.

       MOD-TMP-STRG SECTION.
       INI-MOD-TMP-STRG.
           SUBTRACT 1 FROM WSS-NUM-IMAX IN WSS-VARI GIVING WSS-K IN
                                                           WSS-VARI.
           MOVE EIBTRMID         TO QUE-TERM.
           MOVE 'CAP'            TO QUE-TYPE.
           MOVE +900             TO QUE-LITM.
           MOVE WSS-K IN WSS-VARI TO QUE-NITM.
           MOVE QUE-GET TO QUE-CMND
           PERFORM GNS-PRO-QUE.
           MOVE QUE-ITEM TO FRM-GLS-NAPO-TBL.
           MOVE 'SGC'               TO TAB-COD-SIST.
           MOVE 'CNX'               TO TAB-COD-TTAB IN TAB.
           MOVE ADP-IND-CONE IN ADP TO TAB-COD-CTAB IN TAB.
           PERFORM BUS-TAB.
           MOVE TAB-GLS-DESC IN TAB TO FRM-GLS-CONE IN
                                                CAP-FLD(WSS-IMAX).
           MOVE EIBTRMID         TO QUE-TERM.
           MOVE 'CAP'            TO QUE-TYPE.
           MOVE FRM-GLS-NAPO-TBL TO QUE-ITEM.
           MOVE +900             TO QUE-LITM.
           MOVE WSS-K IN WSS-VARI TO QUE-NITM.
           MOVE QUE-MOD          TO QUE-CMND.
           PERFORM GNS-PRO-QUE.
       FIN-MOD-TMP-STRG.
           EXIT.

       MOD-TMP-STR1 SECTION.
       INI-MOD-TMP-STR1.
           MOVE ZEROES               TO WSS-NUM-ITEM IN WSS-VARI.
           MOVE EIBTRMID             TO QUE-TERM.
           MOVE 'CAP'                TO QUE-TYPE.
           MOVE  1                   TO QUE-NITM.
           MOVE WSS-ITEM IN WSS-VARI TO QUE-ITEM.
           MOVE +6                   TO QUE-LITM.
           MOVE QUE-MOD              TO QUE-CMND.
           PERFORM GNS-PRO-QUE.
       FIN-MOD-TMP-STR1.
           EXIT.

       PUT-TMP-STR1 SECTION.
       INI-PUT-TMP-STR1.
           MOVE ZEROES               TO WSS-NUM-IMAX IN WSS-VARI.
           MOVE 1                    TO WSS-NUM-ITEM IN WSS-VARI.
           MOVE EIBTRMID             TO QUE-TERM.
           MOVE 'CAP'                TO QUE-TYPE.
           MOVE  1                   TO QUE-NITM.
           MOVE WSS-ITEM IN WSS-VARI TO QUE-ITEM.
           MOVE +6                   TO QUE-LITM.
           MOVE QUE-PUT              TO QUE-CMND.
           PERFORM GNS-PRO-QUE.
       FIN-PUT-TMP-STR1.
           EXIT.

       CLR-TAB-CAP SECTION.
       INI-CLR-TAB-CAP.
           MOVE SPACES TO FRM-GLS-NAPO IN CAP-FLD(WSS-I).
           MOVE ZEROES TO FRM-NUM-IAPO IN CAP-FLD(WSS-I).
           MOVE SPACES TO FRM-VRF-IAPO IN CAP-FLD(WSS-I).
           MOVE SPACES TO FRM-IND-IAPO IN CAP-FLD(WSS-I).
           MOVE SPACES TO FRM-GLS-IAPO IN CAP-FLD(WSS-I).
           MOVE SPACES TO FRM-COD-CLAP IN CAP-FLD(WSS-I).
           MOVE ZEROES TO FRM-NUM-APAR IN CAP-FLD(WSS-I).
           MOVE SPACES TO FRM-GLS-CONE IN CAP-FLD(WSS-I).
       FIN-CLR-TAB-CAP.
           EXIT.

       DEL-TMP-STRG SECTION.
       INI-DEL-TMP-STRG.
           MOVE EIBTRMID         TO QUE-TERM.
           MOVE 'CAP'            TO QUE-TYPE.
           MOVE QUE-DEL          TO QUE-CMND.
           PERFORM GNS-PRO-QUE.
       FIN-DEL-TMP-STRG.
           EXIT.

       COPY SGCBFDBC.
       COPY SGCBFREC.
       COPY SGCBFCCM.
       COPY GNSBFRCE.
       COPY SGCBFEDP.
       COPY GNSBGCPT.
       COPY GNSBGSTR.
       COPY GNSBGQUE.
      *>>>>
*% END
