*%! Codigo adicional para archivo
*%! RVM: 20-04-92 VSI NO MANEJA PFS DEPENDIENTES DE DTC
*% IF PGM_DTC
*% RA1 = "DBC"
*% FRM = "CCC"
*% NRA = 1
*% INCLUDE "PFSALLF78"
*% END
*% IF WSS_DTC
      *<<<< WSS_DTC
*% IF PGM_CHI
      *ALD/21-JUL-1988
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-RBS-REQA==.
*% END
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-REC-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-DCP-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-RCD-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-CIC-REQA==.
      *>>>>
*% END
*% IF WSS
      *<<<< WSS
*% IF PGM_CHI
      *ALD/21-JUL-1988
       COPY SGCBRRBS.
*% END
       COPY SGCBRREC.
       COPY SGCBRDCP.
       COPY SGCBRRCD.
       COPY GNSBRCIC.
       COPY TABBRPAI.
       COPY TABWGLOC.
       COPY GNSWGCIC.
       COPY SGCWVPPU.
       01  WSS-VARI.
           03 WSS-COD-CTCA.
              05 WSS-COD-TREC                   PIC X(02).
      *DAD ini  26-JUL-1993
              05 WSS-COD-AREC                   PIC X(05).
      *DAD fin  26-JUL-1993
          03 WSS-COD-LUGA.
              05 WSS-COD-COMU                   PIC X(04).
              05 WSS-GLS-PAIS REDEFINES WSS-COD-COMU.
                 07 WSS-IND-PAIS                PIC X(01).
                 07 WSS-COD-PAIS                PIC X(03).
           03 WSS-COD-TUSR                      PIC X(05).
           03 WSS-SIND.
              05 I                              PIC 9(03).
*% IF PGM_VMS
       01  SCR-UMOD           PIC X(14).
       01  SCR-OTRN           PIC X(04).
       01  SCR-USER           PIC X(12).
*% END
      *>>>>
*% END
*% IF FND_KEY
      *<<<< FND_KEY
*%! RVM: 20-04-92 VSI NO MANEJA PFS DEPENDIENTES DE DTC
*% IF PGM_DTC
           IF FRM-FFLD = FRM-FFLD-PF7 OR FRM-FFLD-PF8
               PERFORM LEE-NXT-PRV
               IF FIO-STAT-OKS
                   PERFORM SCR-CLRA-CCC
                   GO TO CON-FND-KEY
               ELSE
                   MOVE SPACES TO PGM-STAT
                   IF FRM-FFLD = FRM-FFLD-PF7
                       MOVE 'SGC' TO MSG-COD-SIST
                       MOVE 'DBP    NOPRV' TO MSG-COD-MENS
                       PERFORM GET-MSG
                       MOVE MSG-GLS-DESC TO FRM-MENS
                       MOVE '00' TO FIO-STAT
                       MOVE SCR-STAT-CON TO SCR-STAT
                       GO TO FIN-FND-KEY
                   ELSE
                       MOVE 'SGC' TO MSG-COD-SIST
                       MOVE 'DBP    NONXT' TO MSG-COD-MENS
                       PERFORM GET-MSG
                       MOVE MSG-GLS-DESC TO FRM-MENS
                       MOVE '00' TO FIO-STAT
                       MOVE SCR-STAT-CON TO SCR-STAT
                       GO TO FIN-FND-KEY.
*% END

           IF DBC-NUM-ICLI IN CCC-FLD = ZEROES
               PERFORM BUS-CLI-PER
               IF NOT FIO-STAT-OKS
                   MOVE FIO-STAT-NEX TO FIO-STAT
                   GO TO FIN-FND-KEY
               ELSE
                   MOVE DBC-KEY-IDBC IN DBC TO DCP-KEY-IDCP IN DCP
                   MOVE DBC-KEY-IDBC IN DBC TO RCD-KEY-IRCD IN RCD
                   MOVE 01                  TO RCD-NUM-DIRE IN RCD
                   GO TO CON-FND-KEY.
           MOVE DBC-NUM-ICLI IN CCC-FLD TO DBC-NUM-ICLI IN DBC.
           MOVE DBC-IND-ICLI IN CCC-FLD TO DBC-IND-ICLI IN DBC.
           MOVE DBC-GLS-ICLI IN CCC-FLD TO DBC-GLS-ICLI IN DBC.
           MOVE 'DBC-IDC-ICLI' TO FIO-AKEY.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM SGC-FIO-DBC.
*%! RVM: 20-04-92 VSI NO MANEJA PFS DEPENDIENTES DE DTC
*% IF PGM_DTC
           MOVE 'IDC' TO SCR-KEY-IDBC.
*% END
           MOVE FIO-STAT TO PGM-STAT-DBC.
           IF FIO-STAT-OKS
               IF NOT ( DBC-IND-TICL IN DBC = 'P' )
                   MOVE 'TAB' TO MSG-COD-SIST
                   MOVE 'CLI    EMP' TO MSG-COD-MENS
                   PERFORM GET-MSG
                   MOVE MSG-GLS-DESC TO FRM-MENS
                   MOVE FIO-STAT-NEX TO FIO-STAT
                   GO TO FIN-FND-KEY
               ELSE
                   MOVE DBC-KEY-IDBC IN DBC TO DCP-KEY-IDCP IN DCP
                   MOVE DBC-KEY-IDBC IN DBC TO RCD-KEY-IRCD IN RCD
                   MOVE 01                  TO RCD-NUM-DIRE IN RCD.
           GO TO CON-FND-KEY.
      *>>>>
*% END
*% IF FIN_FND_KEY
      *<<<< FIN_FND_KEY
       CON-FND-KEY.
           IF NOT FIO-STAT-OKS
               GO TO FIN-FND-KEY.
      *OJO
           MOVE DBC-KEY-IDBC IN DBC TO DCP-KEY-IDCP IN DCP.
           MOVE DBC-KEY-IDBC IN DBC TO RCD-KEY-IRCD IN RCD.
           PERFORM BUS-DOM.
           IF RCD-GLS-DIRE IN RCD NOT > SPACES
               MOVE 01 TO RCD-NUM-DIRE IN RCD.
           MOVE DBC-CIC-ICLI IN DBC TO RCD-CIC-ICLI IN RCD.
           MOVE '00' TO PGM-STAT-DBC.
*%! RVM: 20-04-92 VSI NO MANEJA PFS DEPENDIENTES DE DTC
*% IF PGM_DTC
           MOVE ADR-DBC-REQA TO SCR-DBC-REQA.
*% END
      *    Se guarda en Common Area la fecha de la ultima modificacion
           MOVE DBC-STP-ITRN IN DBC TO SCR-UMOD.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM SGC-FIO-DCP.
           MOVE FIO-STAT TO PGM-STAT-DCP
           IF FIO-STAT-OKS
               MOVE FIO-GET-KEY TO FIO-CMND
               PERFORM SGC-FIO-RCD
               MOVE FIO-STAT TO PGM-STAT-RCD
               IF FIO-STAT-OKS
                   GO TO FIN-FND-KEY
               ELSE
                   MOVE
                   'ERROR : Existe cliente en DBC, DCP pero no en RCD'
                                                           TO FRM-MENS
           ELSE
               MOVE 'ERROR : Existe cliente en DBC pero no en DCP'
                    TO FRM-MENS.
           MOVE '00' TO FIO-STAT.
           MOVE SCR-STAT-CON TO SCR-STAT.
      *>>>>
*% END
*% IF CMN_MOD
      *<<<< CMN_MOD
      *    Compara codigo ult. modificacion con el que tiene en la COMMON AREA
           IF DBC-STP-ITRN IN DBC NOT = SCR-UMOD
      *GET-MSG Busca mensaje en tabla
               MOVE 'GNS' TO MSG-COD-SIST
               MOVE 'UPD    SIMUL' TO MSG-COD-MENS
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS
               GO TO FIN-CMN-MOD.
           MOVE DBC-CIC-ICLI IN DBC TO DCP-CIC-ICLI IN DCP.
           MOVE FIO-GET-KEY-UPD TO FIO-CMND.
           PERFORM SGC-FIO-DCP.
           IF NOT FIO-STAT-OKS
      *        Como la transaccion Termina no es necesario hacer UNLOCK de
      *        DBC
      *        Comunicar que no se pudo actualizar con mensaje pertinente
               MOVE FIO-MENS TO FRM-MENS
               GO TO FIN-CMN-MOD.
           PERFORM RET-DCP-CCC.
           PERFORM BUS-DOM.
           IF RCD-GLS-DIRE IN RCD NOT > SPACES
               MOVE 01                  TO RCD-NUM-DIRE IN RCD.
           MOVE DBC-CIC-ICLI IN DBC TO RCD-CIC-ICLI IN RCD.
           MOVE FIO-GET-KEY-UPD TO FIO-CMND.
           PERFORM SGC-FIO-RCD.
           IF NOT FIO-STAT-OKS
      *        Como la transaccion Termina no es necesario hacer UNLOCK de
      *        DBC y DCP
      *        Comunicar que no se pudo actualizar con mensaje pertinente
               MOVE FIO-MENS TO FRM-MENS
               GO TO FIN-CMN-MOD.
           PERFORM RET-RCD-CCC.
           PERFORM RET-HDR-DBC.
      *>>>>
*% END
*% IF FIN_CMN_MOD
      *<<<< FIN_CMN_MOD
           IF NOT FIO-STAT-OKS
      *        Error inconsistencia en la modificacion : informar
               MOVE FIO-MENS TO FRM-MENS
               GO TO FIN-CMN-MOD.
           MOVE DBC-STP-ITRN IN DBC TO DCP-STP-ITRN IN DCP.
           PERFORM RET-HDR-DCP.
           MOVE FIO-MOD TO FIO-CMND.
           PERFORM SGC-FIO-DCP.
           IF NOT FIO-STAT-OKS
      *        Error inconsistencia en la modificacion : hacer LOGTB e informar
               MOVE FIO-MENS TO FRM-MENS
               PERFORM BCK-OUT
               GO TO FIN-CMN-MOD.
           MOVE DBC-STP-ITRN IN DBC TO RCD-STP-ITRN IN RCD.
           PERFORM RET-HDR-RCD.
           MOVE FIO-MOD TO FIO-CMND.
           PERFORM SGC-FIO-RCD.
           IF NOT FIO-STAT-OKS
      *        Error inconsistencia en la modificacion : hacer LOGTB e informar
               MOVE FIO-MENS TO FRM-MENS
               PERFORM BCK-OUT
               GO TO FIN-CMN-MOD.
      *>>>>
*% END
*% IF INI_CMN_ING
      *<<<< INI_CMN_ING
           MOVE SPACES TO DBC.
           MOVE ZEROES TO DBC-STP-ITRN IN DBC.
           MOVE ZEROES TO DBC-NUM-DCOR IN DBC.
*% IF PGM_CHI
           MOVE ZEROES TO DBC-FEC-FA85 IN DBC.
*% END
           MOVE ZEROES TO DBC-FEC-FUPI IN DBC.
           MOVE ZEROES TO DBC-FEC-FSCL IN DBC.
           MOVE ZEROES TO DBC-NUM-TDIR IN DBC.
           MOVE ZEROES TO DBC-NUM-TCMT IN DBC.
           MOVE ZEROES TO DBC-FEC-FIOP IN DBC.
           MOVE ZEROES TO DBC-FEC-FTOP IN DBC.
           MOVE ZEROES TO DBC-NUM-OFTN IN DBC.
           MOVE ZEROES TO DBC-FEC-FINP IN DBC.
           MOVE SPACES TO RCD.
           MOVE ZEROES TO RCD-NUM-DIRE IN RCD.
           MOVE ZEROES TO RCD-STP-ITRN IN RCD.
           MOVE ZEROES TO RCD-FEC-FVRF IN RCD.
           MOVE SPACES TO DCP.
           MOVE ZEROES TO DCP-STP-ITRN IN DCP.
           MOVE ZEROES TO DCP-FEC-FNAC IN DCP.
      *>>>>
*% END
*% IF CMN_ING
      *<<<< CMN_ING
           MOVE 1      TO DBC-NUM-TDIR IN DBC.
           MOVE 1      TO DBC-NUM-DCOR IN DBC.
           MOVE 'D'    TO RCD-MSC-TDIR IN RCD.
           MOVE 'C'    TO RCD-MSC-SDIR IN RCD.
           MOVE 'P'    TO DBC-IND-TICL IN DBC.
           MOVE 'CL'   TO DBC-COD-TICL IN DBC.
           MOVE ZEROES TO DBC-NUM-TCMT IN DBC.
      *GET-CIC Obtener CIC
           MOVE SPACES TO CIC-CAI-ICIC IN CIC.
           MOVE CIC-GET TO CIC-CMND.
           PERFORM PRO-CIC.
           IF CIC-STAT NOT = CIC-STAT-OKS
               MOVE CIC-MENS TO FRM-MENS
               GO TO FIN-CMN-ING.
           MOVE CIC-CIC-ICIC TO DBC-CIC-ICLI IN DBC.
      *ALD
      *    MOVE DBC-IDC-ICLI IN DBC TO DBC-CIC-ICLI IN DBC.
           PERFORM RET-HDR-DBC.
      *>>>>
*% END
*% IF FIN_CMN_ING
      *<<<< FIN_CMN_ING
           IF NOT FIO-STAT-OKS
      *        Error inconsistencia en el ingreso : informar
               MOVE FIO-MENS TO FRM-MENS
               GO TO FIN-CMN-ING.
           MOVE DBC-CIC-ICLI IN DBC TO DCP-CIC-ICLI IN DCP.
           MOVE DBC-STP-ITRN IN DBC TO DCP-STP-ITRN IN DCP.
           PERFORM RET-HDR-DCP.
           MOVE FIO-PUT TO FIO-CMND.
           PERFORM SGC-FIO-DCP.
           IF NOT FIO-STAT-OKS
      *        Error inconsistencia en el ingreso : hacer LOGTB e informar
               MOVE FIO-MENS TO FRM-MENS
               PERFORM BCK-OUT
               GO TO FIN-CMN-ING.
           MOVE DBC-CIC-ICLI IN DBC TO RCD-CIC-ICLI IN RCD.
           MOVE 01                  TO RCD-NUM-DIRE IN RCD.
           MOVE DBC-STP-ITRN IN DBC TO RCD-STP-ITRN IN RCD.
           PERFORM RET-HDR-RCD.
           MOVE FIO-PUT TO FIO-CMND.
           PERFORM SGC-FIO-RCD.
           IF NOT FIO-STAT-OKS
      *        Error inconsistencia en el ingreso : hacer LOGTB e informar
               MOVE FIO-MENS TO FRM-MENS
               PERFORM BCK-OUT
               GO TO FIN-CMN-ING.
*% IF PGM_CHI
      *ALD/21-JUL-1988
           MOVE DBC-NUM-ICLI IN DBC TO RBS-NUM-RUTS IN RBS.
           MOVE DBC-VRF-ICLI IN DBC TO RBS-VRF-RUTS IN RBS.
           MOVE 'RBS-GLS-ICLS' TO FIO-AKEY.
           MOVE FIO-GET-KEY-UPD TO FIO-CMND.
           PERFORM SGC-FIO-RBS.
           IF NOT FIO-STAT-OKS
               MOVE '00' TO FIO-STAT
               GO TO FIN-CMN-ING.
           MOVE DBC-STP-ITRN IN DBC TO RBS-STP-ITRN IN RBS.
           MOVE DBC-CIC-ICLI IN DBC TO RBS-CIC-ICLI IN RBS.
           MOVE 'RBS-GLS-ICLS' TO FIO-AKEY.
           PERFORM RET-HDR-RBS.
           MOVE FIO-MOD TO FIO-CMND.
           PERFORM SGC-FIO-RBS.
           IF NOT FIO-STAT-OKS
               MOVE '00' TO FIO-STAT
               GO TO FIN-CMN-ING.
*% END
      *>>>>
*% END
*% IF CMN_ELI
      *<<<< CMN_ELI
      *    Compara codigo ult. modificacion con el que tiene en la COMMON AREA
           IF DBC-STP-ITRN IN DBC NOT = SCR-UMOD
      *GET-MSG Busca mensaje en tabla
               MOVE 'GNS' TO MSG-COD-SIST
               MOVE 'UPD    SIMUL' TO MSG-COD-MENS
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS
               GO TO FIN-CMN-ELI.
           MOVE DBC-CIC-ICLI IN DBC TO DCP-CIC-ICLI IN DCP.
           MOVE FIO-GET-KEY-UPD TO FIO-CMND.
           PERFORM SGC-FIO-DCP.
           IF NOT FIO-STAT-OKS
      *        Como la transaccion Termina no es necesario hacer UNLOCK de
      *        DBC
      *        Comunicar que no se pudo eliminar con mensaje pertinente
               MOVE FIO-MENS TO FRM-MENS
               GO TO FIN-CMN-ELI.
           PERFORM BUS-DOM.
           IF RCD-GLS-DIRE IN RCD NOT > SPACES
               MOVE 01                  TO RCD-NUM-DIRE IN RCD.
           MOVE DBC-CIC-ICLI IN DBC TO RCD-CIC-ICLI IN RCD.
           MOVE FIO-GET-KEY-UPD TO FIO-CMND.
           PERFORM SGC-FIO-RCD.
           IF NOT FIO-STAT-OKS
      *        Como la transaccion Termina no es necesario hacer UNLOCK de
      *        DBC y DCP
      *        Comunicar que no se pudo eliminar con mensaje pertinente
               MOVE FIO-MENS TO FRM-MENS
               GO TO FIN-CMN-ELI.
      *>>>>
*% END
*% IF FIN_CMN_ELI
      *<<<< FIN_CMN_ELI
           IF NOT FIO-STAT-OKS
      *        Error inconsistencia en la eliminacion : informar
               MOVE FIO-MENS TO FRM-MENS
               GO TO FIN-CMN-ELI.
           MOVE FIO-DEL TO FIO-CMND.
           PERFORM SGC-FIO-DCP.
           IF NOT FIO-STAT-OKS
      *        Error inconsistencia en la eliminacion : hacer LOGTB e informar
               MOVE FIO-MENS TO FRM-MENS
               PERFORM BCK-OUT
               GO TO FIN-CMN-ELI.
           MOVE DBC-STP-ITRN IN DBC TO RCD-STP-ITRN IN RCD.
           MOVE FIO-DEL TO FIO-CMND.
           PERFORM SGC-FIO-RCD.
           IF NOT FIO-STAT-OKS
      *        Error inconsistencia en la eliminacion : hacer LOGTB e informar
               MOVE FIO-MENS TO FRM-MENS
               PERFORM BCK-OUT
               GO TO FIN-CMN-ELI.
      *>>>>
*% END
*% IF FIN_HBL_FLD
      *<<<< FIN_HBL_FLD
      *     IF SCR-CCPP = 'ING' OR ( SCR-CCPP = 'ACT' AND
      *                              SCR-ACTU = SCR-ACTU-ING )
      *         MOVE 01 TO DBC-NUM-DCOR IN CCC-FLD.
      *>>>>
*% END
*% IF EOF
      *<<<< EOF
       BUS-CLI-PER SECTION.
       INI-BUS-CLI-PER.
*%! RVM: 20-04-92 VSI NO MANEJA PFS DEPENDIENTES DE DTC
*% IF PGM_DTC
           MOVE 'NOM' TO SCR-KEY-IDBC.
*% END
           MOVE FIO-GET-NLS TO FIO-CMND.
       LUP-BUS-CLI-PER.
           MOVE 'DBC-GLS-NOMC' TO FIO-AKEY.
           PERFORM SGC-FIO-DBC.
           IF FIO-STAT-OKS AND DBC-IND-TICL IN DBC NOT = 'P'
               MOVE FIO-GET-NXT TO FIO-CMND
               GO TO LUP-BUS-CLI-PER.
       FIN-BUS-CLI-PER.
           EXIT.

       BCK-OUT SECTION.
       INI-BCK-OUT.
           MOVE FIO-BCK-OUT TO FIO-CMND.
           PERFORM SGC-FIO-DBC.
           IF FIO-STAT-OKS
      *        Para informar que el backout se realizo con exito
               MOVE '49' TO FIO-STAT.
       FIN-BCK-OUT.
           EXIT.
      *>>>>
*% END
*% IF EOF AND PGM_PU
      *<<<< EOF AND PGM_PU
       RET-HDR-DBC SECTION.
       INI-RET-HDR-DBC.
           PERFORM GET-FHOY.
      *    Fecha Transaccion
           MOVE HOY-FHOY TO DBC-FEC-FTRN IN DBC.
      *    Hora Transaccion
           MOVE HOY-HHOY TO DBC-HRA-HRTR IN DBC.
      *    Codigo Origen transaccion
           MOVE SCR-OTRN TO DBC-COD-OTRN IN DBC.
      *    Autor Transaccion
           MOVE SCR-USER TO DBC-COD-ATRN IN DBC.
           IF SCR-CCPP = 'ING'
               MOVE 'I' TO DBC-MSC-TACC IN DBC
               MOVE 'I' TO DBC-MSC-STAT IN DBC
           ELSE
           IF SCR-CCPP = 'MOD'
               MOVE 'M' TO DBC-MSC-TACC IN DBC
               MOVE 'M' TO DBC-MSC-STAT IN DBC.
       FIN-RET-HDR-DBC.
           EXIT.

       RET-HDR-DCP SECTION.
       INI-RET-HDR-DCP.
           PERFORM GET-FHOY.
      *    Fecha Transaccion
           MOVE HOY-FHOY TO DCP-FEC-FTRN IN DCP.
      *    Hora Transaccion
           MOVE HOY-HHOY TO DCP-HRA-HRTR IN DCP.
      *    Codigo Origen transaccion
           MOVE SCR-OTRN TO DCP-COD-OTRN IN DCP.
      *    Autor Transaccion
           MOVE SCR-USER TO DCP-COD-ATRN IN DCP.
           IF SCR-CCPP = 'ING'
               MOVE 'I' TO DCP-MSC-TACC IN DCP
               MOVE 'I' TO DCP-MSC-STAT IN DCP
           ELSE
           IF SCR-CCPP = 'MOD'
               MOVE 'M' TO DCP-MSC-TACC IN DCP
               MOVE 'M' TO DCP-MSC-STAT IN DCP.
       FIN-RET-HDR-DCP.
           EXIT.

       RET-HDR-RCD SECTION.
       INI-RET-HDR-RCD.
           PERFORM GET-FHOY.
      *    Fecha Transaccion
           MOVE HOY-FHOY TO RCD-FEC-FTRN IN RCD.
      *    Hora Transaccion
           MOVE HOY-HHOY TO RCD-HRA-HRTR IN RCD.
      *    Codigo Origen transaccion
           MOVE SCR-OTRN TO RCD-COD-OTRN IN RCD.
      *    Autor Transaccion
           MOVE SCR-USER TO RCD-COD-ATRN IN RCD.
           IF SCR-CCPP = 'ING'
               MOVE 'I' TO RCD-MSC-TACC IN RCD
               MOVE 'I' TO RCD-MSC-STAT IN RCD
           ELSE
           IF SCR-CCPP = 'MOD'
               MOVE 'M' TO RCD-MSC-TACC IN RCD
               MOVE 'M' TO RCD-MSC-STAT IN RCD.
       FIN-RET-HDR-RCD.
           EXIT.
*% IF PGM_CHI

       RET-HDR-RBS SECTION.
       INI-RET-HDR-RBS.
           PERFORM GET-FHOY.
      *    Fecha Transaccion
           MOVE HOY-FHOY TO RBS-FEC-FTRN IN RBS.
      *    Hora Transaccion
           MOVE HOY-HHOY TO RBS-HRA-HRTR IN RBS.
      *    Codigo Origen transaccion
           MOVE SCR-OTRN TO RBS-COD-OTRN IN RBS.
      *    Autor Transaccion
           MOVE SCR-USER TO RBS-COD-ATRN IN RBS.
           IF SCR-CCPP = 'ING'
               MOVE 'I' TO RBS-MSC-TACC IN RBS
               MOVE 'I' TO RBS-MSC-STAT IN RBS
           ELSE
           IF SCR-CCPP = 'MOD'
               MOVE 'M' TO RBS-MSC-TACC IN RBS
               MOVE 'M' TO RBS-MSC-STAT IN RBS.
       FIN-RET-HDR-RBS.
           EXIT.
*% END
      *>>>>
*% END
*% IF EOF
      *<<<< EOF
*%! RVM: 20-04-92 VSI NO MANEJA PFS DEPENDIENTES DE DTC
*% IF PGM_DTC
       LEE-NXT-PRV SECTION.
       INI-LEE-NXT-PRV.
           IF SCR-DBC-REQA > SPACES
               PERFORM LEE-NXT-PRV-DBC
           ELSE
               PERFORM LEE-NXT-PRV-NOM.
       FIN-LEE-NXT-PRV.
           EXIT.

       LEE-NXT-PRV-DBC SECTION.
       INI-LEE-NXT-PRV-DBC.
           MOVE SCR-DBC-REQA TO ADR-DBC-REQA.
           MOVE FIO-KDEF-S TO FIO-KDEF.
           IF FRM-FFLD = FRM-FFLD-PF7
               MOVE FIO-GET-PRV TO FIO-CMND
           ELSE
               MOVE FIO-GET-NXT TO FIO-CMND.
       LUP-LEE-NXT-PRV-DBC.
           IF SCR-KEY-IDBC = 'NOM'
               MOVE 'DBC-GLS-NOMC' TO FIO-AKEY
           ELSE
               MOVE 'DBC-IDC-ICLI' TO FIO-AKEY.
           PERFORM SGC-FIO-DBC.
           MOVE FIO-STAT TO PGM-STAT-DBC.
           IF FIO-STAT-OKS AND DBC-IND-TICL NOT = 'P'
               IF FRM-FFLD = FRM-FFLD-PF7
                   MOVE FIO-GET-PRV TO FIO-CMND
                   GO TO LUP-LEE-NXT-PRV-DBC
               ELSE
                   MOVE FIO-GET-NXT TO FIO-CMND
                   GO TO LUP-LEE-NXT-PRV-DBC.
           IF FIO-STAT-OKS
               MOVE ADR-DBC-REQA TO SCR-DBC-REQA.
       FIN-LEE-NXT-PRV-DBC.
           EXIT.

       LEE-NXT-PRV-NOM SECTION.
       INI-LEE-NXT-PRV-NOM.
           MOVE 'NOM' TO SCR-KEY-IDBC.
           IF DBC-GLS-NOMC IN DBC > SPACES
               MOVE FIO-GET-KEY    TO FIO-CMND
               MOVE 'DBC-GLS-NOMC' TO FIO-AKEY
               PERFORM SGC-FIO-DBC
               IF FIO-STAT-OKS
                   IF FRM-FFLD = FRM-FFLD-PF7
                       MOVE FIO-GET-PRV TO FIO-CMND
                   ELSE
                       MOVE FIO-GET-NXT TO FIO-CMND
               ELSE
                   IF FRM-FFLD = FRM-FFLD-PF7
                       MOVE FIO-GET-LEQ TO FIO-CMND
                   ELSE
                       MOVE FIO-GET-NLS TO FIO-CMND
           ELSE
               IF FRM-FFLD = FRM-FFLD-PF7
                   MOVE FIO-GET-LEQ TO FIO-CMND
               ELSE
                   MOVE FIO-GET-NLS TO FIO-CMND.
       LUP-LEE-NXT-PRV-NOM.
           MOVE 'DBC-GLS-NOMC'  TO FIO-AKEY.
           PERFORM SGC-FIO-DBC.
           MOVE FIO-STAT TO PGM-STAT-DBC.
           IF FIO-STAT-OKS AND DBC-IND-TICL NOT = 'P'
               IF FRM-FFLD = FRM-FFLD-PF7
                   MOVE FIO-GET-PRV TO FIO-CMND
                   GO TO LUP-LEE-NXT-PRV-NOM
               ELSE
                   MOVE FIO-GET-NXT TO FIO-CMND
                   GO TO LUP-LEE-NXT-PRV-NOM.
           IF FIO-STAT-OKS
               MOVE ADR-DBC-REQA TO SCR-DBC-REQA.
       FIN-LEE-NXT-PRV-NOM.
           EXIT.
*% END
*% IF PGM_CHI

      *ALD/21-JUL-1988
       COPY SGCBFRBS.
*% END
       COPY SGCBFREC.
       COPY SGCBFDCP.
       COPY SGCBFRCD.
       COPY TABBVUSR.
       COPY GNSBBMSC.
       COPY GNSBGCIC.
       COPY GNSBFCIC.
       COPY GNSBGPPU.
       COPY SGCBGPPU.
       COPY SGCBGRCU.
       COPY SGCBGDOM.
       COPY TABBBLOC.
       COPY TABBVLOC.
      *>>>>
*% END
