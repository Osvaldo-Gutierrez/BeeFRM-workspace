*%! Codigo adicional para archivo
*% NO_HDR_CST = TRUE
*%!
*% IF PGM_ARG
*% INCLUDE 'GNSSRC:MANEJO_VSI.SRC'
*% FRM = "DBP"
*% PADRE = "DBC"
*% KEY_PADRE = "DBC-GLS-NOMC"
*% LARGO_KEY_PADRE = 75
*% FIO_PADRE = "SGC-FIO-DBC"
*% SIST_PADRE = "SGC"
*% KEY_BROWSE_PADRE = "DBC-GLS-NOMC"
*% ORG_PADRE_VSI = TRUE
*% INICIALIZAR_VARIABLES = FALSE
*% 
*% ACEPTE_PF7 = TRUE
*% ACEPTE_PF8 = TRUE
*% COLAR_ENT = TRUE
*%
*% INCLUDE 'PFSCONENT.SRC'
*% END
*%! ISP: LO SIGUIENTES 2 LABELS PTX DEBEN ESTAR 
*%!      ANTES QUE INCLUDE "PFSALLF78"
*%!      PARA QUE FUNCIONEN, DE OTRA FORMA PFSALLF78 LOS INHIBE
*% IF PFS_SCR_GIKY OR PFS_SCR_GKEY OR PFS_GET_CON OR PFS_SCR_GFLD OR PFS_GET_ACC 
      *<<<< PFS_SCR_GIKY OR PFS_SCR_GKEY OR PFS_GET_CON OR
      *<<<< PFS_SCR_GFLD OR PFS_GET_ACC 
*% IF NOT PGM_VMS
      *<<<< NOT PGM_VMS
      *DAD ini  05-JUN-1992 / 13-MAY-1992
*% IF PGM_PER
      *AMP: BAJO COMANDO MDA Y IDA PERMITE SOLO TECLAS <ENTER> Y <PF11>
           OR (( SCR-CMND = WSS-CMND-DBP-MDA OR WSS-CMND-DBP-IDA ) AND
*% ELSE
      *ISP: BAJO COMANDO ICD Y CCL PERMITE SOLO TECLAS <ENTER> Y <PF11>
           OR (( SCR-CMND = WSS-CMND-DBP-ICD OR WSS-CMND-DBP-CCL ) AND
*% END
      *DAD fin  05-JUN-1992
                NOT ( FRM-FFLD = FRM-FFLD-RET OR
                      FRM-FFLD = FRM-FFLD-PF11 ))
      *DAD fin  13-MAY-1992
      *>>>>
*% END
      *>>>>
*% END
*% IF PFS_SCR_GCNF 
      *<<<< PFS_SCR_GCNF 
*% IF NOT PGM_VMS
      *<<<< NOT PGM_VMS
      *DAD ini  05-JUN-1992 / 13-MAY-1992
*% IF PGM_PER
      *AMP: BAJO COMANDO MDA Y IDA PERMITE SOLO TECLAS <ENTER> Y <PF11>
           OR (( SCR-CMND = WSS-CMND-DBP-MDA OR WSS-CMND-DBP-IDA ) AND
*% ELSE
      *ISP: BAJO COMANDO ICD Y CCL PERMITE SOLO TECLAS <ENTER> Y <PF11>
           OR (( SCR-CMND = WSS-CMND-DBP-ICD OR WSS-CMND-DBP-CCL ) AND
*% END
      *DAD fin  05-JUN-1992
                NOT ( FRM-FFLD = FRM-FFLD-RET  OR
                      FRM-FFLD = FRM-FFLD-PF11 OR
                      FRM-FFLD = FRM-FFLD-PF12 ))
      *DAD fin  13-MAY-1992
      *>>>>
*% END
      *>>>>
*% END
*%! RVM: 27-03-92 VSI NO MANEJA PFS DEPENDIENTES DE DTC
*% IF PGM_DTC
*% RA1 = "DBC"
*% FRM = "DBP"
*% NRA = 1
*% INCLUDE "PFSALLF78"
*% END
*% IF WSS_DTC
      *<<<< WSS_DTC
*% IF PGM_CHI OR PGM_ARG
      *ALD/21-JUL-1988
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-RBS-REQA==.
*% END
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-MNP-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-REC-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-DCP-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-DCE-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-RCD-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-CIC-REQA==.
      *>>>>
*% END
*% IF MI_COMMAREA AND PGM_PER
      *<<<< MI_COMMAREA AND PGM_PER
           03 SCR-CIC-ICLI.
              05 SCR-CAI-ICLI      PIC X(04).
              05 SCR-IIC-ICLI      PIC 9(08).
      *>>>>
*% END
*% IF WSS
      *<<<< WSS
*% IF PGM_CHI OR PGM_ARG
      *ALD/21-JUL-1988
       COPY SGCBRRBS.
*% END
*% IF PGM_ARG
       COPY SGCWGCUI.
*% END
       01  WSS-CMND-DBP.
           03  WSS-CMND-DBP-CCL               VALUE 'CCL'   PIC X(03).
           03  WSS-CMND-DBP-DEP               VALUE 'DEP'   PIC X(03).
           03  WSS-CMND-DBP-ICD               VALUE 'ICD'   PIC X(03).
           03  WSS-CMND-DBP-IDA               VALUE 'IDA'   PIC X(03).
           03  WSS-CMND-DBP-INC               VALUE 'INC'   PIC X(03).
           03  WSS-CMND-DBP-MDA               VALUE 'MDA'   PIC X(03).
           03  WSS-CMND-DBP-MIC               VALUE 'MIC'   PIC X(03).
           03  WSS-CMND-DBP-MNC               VALUE 'MNC'   PIC X(03).
           03  WSS-CMND-DBP-PAE               VALUE 'PAE'   PIC X(03).
           03  WSS-CMND-DBP-VRF               VALUE 'VRF'   PIC X(03).
       COPY SGCBRREC.
       COPY SGCBRDCP.
       COPY SGCBRDCE.
       COPY SGCBRRCD.
       COPY GNSBRCIC.
       COPY TABBRPAI.
*%! IF PGM_PER
       COPY TABWGLOC.
*%! END
*% IF PGM_BCI
      *<<<< PGM_BCI
       COPY SBTBRMNP.
      *>>>>
*% ELSE
       01  MNP.
           03  MNP-GLS-NOMB        PIC X(01).
*% END
       COPY GNSWGCIC.
       COPY GNSWGCPT.
       COPY SGCWVPPU.
       COPY SGCWGVEC.

       01  WSS-VARI.
*% IF NOT PGM_PER
      * MARCA SI EXISTE DOMICILIO PARA COMANDO ICD
           03 WSS-ICD-DOMI VALUE  'S'                PIC X(01).
*% END
           03 WSS-COD-CTCA.
              05 WSS-COD-TREC                           PIC X(02).
*% IF PGM_PER
              05 WSS-COD-AREC                           PIC X(03).
*% ELSE
      *DAD ini  26-JUL-1993
              05 WSS-COD-AREC                           PIC X(05).
      *DAD fin  26-JUL-1993
*% END
      *DAD ini  09-FEB-1994
      *     03 WSS-COD-LUGA.
      *        05 WSS-COD-COMU                           PIC X(04).
      *        05 WSS-GLS-PAIS REDEFINES WSS-COD-COMU.
      *           07 WSS-IND-PAIS                        PIC X(01).
      *           07 WSS-COD-PAIS                        PIC X(03).
      *DAD fin  09-FEB-1994
           03 WSS-COD-TUSR                              PIC X(05).
           03 WSS-SIND.
              05 I                                      PIC 9(03).

           03 WSS-GLS-NOM1                              PIC X(25).
           03 WSS-VEC-NOM1 REDEFINES WSS-GLS-NOM1
                              OCCURS 25                 PIC X(01).

           03 WSS-GLS-NOM2                              PIC X(25).
           03 WSS-VEC-NOM2 REDEFINES WSS-GLS-NOM2
                              OCCURS 25                 PIC X(01).

           03 WSS-IND-NOM1                              PIC 9(02).
           03 WSS-IND-NOM2                              PIC 9(02).
      *DAD ini 26-FEB-1991
           03 WSS-NUM-NMSG                              PIC X(04).
      *DAD fin 26-FEB-1991
      *DAD ini  05-JUN-1992
           03 WSS-IND                                   PIC 9(02).
           03 WSS-IND-STAT                              PIC X(01).
           03 WSS-GLS-FONO.
              05 WSS-NUM-FONO         OCCURS 12         PIC X(01).
      *DAD fin  05-JUN-1992
      *DAD ini  13-MAY-1992
           03 WSS-CIC-TICL                              PIC X(02).
           03 WSS-COD-OFIC                              PIC X(03).
           03 WSS-COD-EJEC                              PIC X(12).
*% IF PGM_BCI
      *<<<< NOT PGM_VMS
           COPY USPC113.
      *>>>>
*% END
      *DAD fin  13-MAY-1992
      *>>>>
*% END
*% IF INI_FIO AND PGM_VMS
      *<<<< INI_FIO AND PGM_VMS

           MOVE FIO-ACCS-UPD TO FIO-ACCS.
           MOVE FIO-ACC      TO FIO-CMND.
           MOVE 'GNS'        TO FIO-SIST.
           PERFORM GNS-FIO-CIC.
           MOVE FIO-UPD TO FIO-CMND.
           PERFORM GNS-FIO-CIC.

           MOVE FIO-ACCS-UPD TO FIO-ACCS.
           MOVE FIO-ACC      TO FIO-CMND.
           MOVE 'TAB'        TO FIO-SIST.
           PERFORM GNS-FIO-TAB.
           MOVE FIO-INP TO FIO-CMND.
           PERFORM GNS-FIO-TAB.

           MOVE FIO-ACCS-UPD TO FIO-ACCS.
           MOVE FIO-ACC      TO FIO-CMND.
           MOVE 'TAB'        TO FIO-SIST.
           PERFORM TAB-FIO-OFI.
           MOVE FIO-INP TO FIO-CMND.
           PERFORM TAB-FIO-OFI.

           MOVE FIO-ACCS-UPD TO FIO-ACCS.
           MOVE FIO-ACC      TO FIO-CMND.
           MOVE 'TAB'        TO FIO-SIST.
           PERFORM TAB-FIO-USR.
           MOVE FIO-INP TO FIO-CMND.
           PERFORM TAB-FIO-USR.
*% IF PGM_CHI OR PGM_ARG

           MOVE FIO-ACCS-UPD TO FIO-ACCS.
           MOVE FIO-ACC      TO FIO-CMND.
           MOVE 'SGC'        TO FIO-SIST.
           PERFORM SGC-FIO-RBS.
           MOVE FIO-UPD TO FIO-CMND.
           PERFORM SGC-FIO-RBS.

*% END
           MOVE FIO-ACCS-UPD TO FIO-ACCS.
           MOVE FIO-ACC      TO FIO-CMND.
           MOVE 'SGC'        TO FIO-SIST.
           PERFORM SGC-FIO-REC.
           MOVE FIO-UPD TO FIO-CMND.
           PERFORM SGC-FIO-REC.

           MOVE FIO-ACCS-UPD TO FIO-ACCS.
           MOVE FIO-ACC      TO FIO-CMND.
           MOVE 'SGC'        TO FIO-SIST.
           PERFORM SGC-FIO-DCP.
           MOVE FIO-UPD TO FIO-CMND.
           PERFORM SGC-FIO-DCP.

           MOVE FIO-ACCS-UPD TO FIO-ACCS.
           MOVE FIO-ACC      TO FIO-CMND.
           MOVE 'SGC'        TO FIO-SIST.
           PERFORM SGC-FIO-DCE.
           MOVE FIO-UPD TO FIO-CMND.
           PERFORM SGC-FIO-DCE.

           MOVE FIO-ACCS-UPD TO FIO-ACCS.
           MOVE FIO-ACC      TO FIO-CMND.
           MOVE 'SGC'        TO FIO-SIST.
           PERFORM SGC-FIO-RCD.
           MOVE FIO-UPD TO FIO-CMND.
           PERFORM SGC-FIO-RCD.

      *>>>>
*% END
*% IF PGM_INI
      *<<<< PGM_INI
      *DAD ini  13-MAY-1992
      *     SE PREGUNTA POR CONSTANTES, PUES EN ESTE PUNTO NO ESTAN
      *     INICIALIZADAS VARIABLES FRM-FFLD
           MOVE DFHCOMMAREA TO SCR-VARI.
      *DAD ini  05-JUN-1992
*% IF PGM_PER
      *AMP: BAJO COMANDO MDA Y IDA PERMITE SOLO TECLAS <ENTER> Y <PF11>
           IF SCR-CMND = WSS-CMND-DBP-MDA OR WSS-CMND-DBP-IDA 
*% ELSE
      *ISP: BAJO COMANDO ICD Y CCL PERMITE SOLO TECLAS <ENTER> Y <PF11>
           IF SCR-CMND = WSS-CMND-DBP-ICD OR WSS-CMND-DBP-CCL
*% END
      *DAD fin  05-JUN-1992
               IF NOT ( EIBAID = '1' OR 'A' OR '#' OR '.' )
                   MOVE ' ' TO EIBAID.
      *DAD fin  13-MAY-1992
      *>>>>
*% END
*% IF FND_KEY
      *<<<< FND_KEY
*%! RVM: 27-03-92 VSI NO MANEJA PFS DEPENDIENTES DE DTC
*% IF PGM_DTC
           IF FRM-FFLD = FRM-FFLD-PF7 OR FRM-FFLD-PF8
               PERFORM LEE-NXT-PRV
               IF FIO-STAT-OKS
                   PERFORM SCR-CLRA-DBP
                   GO TO CON-FND-KEY
               ELSE
                   MOVE SPACES TO PGM-STAT
                   IF FRM-FFLD = FRM-FFLD-PF7
                       MOVE 'SGC' TO MSG-COD-SIST
                       MOVE 'DBP    NOPRV' TO MSG-COD-MENS
                       PERFORM GET-MSG
                       MOVE MSG-GLS-DESC TO FRM-MENS
                       MOVE '00' TO FIO-STAT
                       MOVE SCR-STAT-CON TO SCR-STAT
                       GO TO FIN-FND-KEY
                   ELSE
                       MOVE 'SGC' TO MSG-COD-SIST
                       MOVE 'DBP    NONXT' TO MSG-COD-MENS
                       PERFORM GET-MSG
                       MOVE MSG-GLS-DESC TO FRM-MENS
                       MOVE '00' TO FIO-STAT
                       MOVE SCR-STAT-CON TO SCR-STAT
                       GO TO FIN-FND-KEY.
*% END
           IF DBC-NUM-ICLI IN DBP-FLD = ZEROES
               PERFORM BUS-CLI-PER
               IF NOT FIO-STAT-OKS
                   MOVE FIO-STAT-NEX TO FIO-STAT
                   GO TO FIN-FND-KEY
               ELSE
                   MOVE DBC-KEY-IDBC IN DBC TO DCP-KEY-IDCP IN DCP
                   MOVE DBC-KEY-IDBC IN DBC TO RCD-KEY-IRCD IN RCD
                   MOVE 01                  TO RCD-NUM-DIRE IN RCD
                   GO TO CON-FND-KEY.
           MOVE DBC-NUM-ICLI IN DBP-FLD TO DBC-NUM-ICLI IN DBC.
           MOVE DBC-IND-ICLI IN DBP-FLD TO DBC-IND-ICLI IN DBC.
           MOVE DBC-GLS-ICLI IN DBP-FLD TO DBC-GLS-ICLI IN DBC.
           MOVE 'DBC-IDC-ICLI' TO FIO-AKEY.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM SGC-FIO-DBC.
*%! RVM: 27-03-92 VSI NO MANEJA PFS DEPENDIENTES DE DTC
*% IF PGM_DTC
           MOVE 'IDC' TO SCR-KEY-IDBC.
*% END
           MOVE FIO-STAT TO PGM-STAT-DBC.
           IF FIO-STAT-OKS
               IF NOT ( DBC-IND-TICL IN DBC = 'P' )
                   MOVE 'TAB' TO MSG-COD-SIST
                   MOVE 'CLI    EMP' TO MSG-COD-MENS
                   PERFORM GET-MSG
                   MOVE MSG-GLS-DESC TO FRM-MENS
                   MOVE FIO-STAT-NEX TO FIO-STAT
                   GO TO FIN-FND-KEY
               ELSE
                   MOVE DBC-KEY-IDBC IN DBC TO DCP-KEY-IDCP IN DCP
                   MOVE DBC-KEY-IDBC IN DBC TO RCD-KEY-IRCD IN RCD
                   MOVE 01                  TO RCD-NUM-DIRE IN RCD.
           GO TO CON-FND-KEY.
      *>>>>
*% END
*% IF FIN_FND_KEY
      *<<<< FIN_FND_KEY
       CON-FND-KEY.
           IF NOT FIO-STAT-OKS
               GO TO FIN-FND-KEY.
      *OJO
           MOVE DBC-KEY-IDBC IN DBC TO DCP-KEY-IDCP IN DCP.
           MOVE DBC-KEY-IDBC IN DBC TO RCD-KEY-IRCD IN RCD.
           PERFORM BUS-DOM.
           IF RCD-GLS-DIRE IN RCD NOT > SPACES
               MOVE 01 TO RCD-NUM-DIRE IN RCD.
           MOVE DBC-CIC-ICLI IN DBC TO RCD-CIC-ICLI IN RCD.
           MOVE '00' TO PGM-STAT-DBC.
*%! RVM: 27-03-92 VSI NO MANEJA PFS DEPENDIENTES DE DTC
*% IF PGM_DTC
           MOVE ADR-DBC-REQA TO SCR-DBC-REQA.
*% END
      *    Se guarda en Common Area la fecha de la ultima modificacion
*% IF NOT PGM_VMS
      *<<<< NOT PGM_VMS
           MOVE DBC-STP-ITRN IN DBC TO SCR-UMOD.
      *>>>>
*% END
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM SGC-FIO-DCP.
           MOVE FIO-STAT TO PGM-STAT-DCP
           IF FIO-STAT-OKS
               MOVE FIO-GET-KEY TO FIO-CMND
               PERFORM SGC-FIO-RCD
               MOVE FIO-STAT TO PGM-STAT-RCD
               IF FIO-STAT-OKS
                   GO TO FIN-FND-KEY
               ELSE
                   MOVE
                   'ERROR : Existe cliente en DBC, DCP pero no en RCD'
                                                           TO FRM-MENS
           ELSE
               MOVE 'ERROR : Existe cliente en DBC pero no en DCP'
                    TO FRM-MENS.
           MOVE '00' TO FIO-STAT.
           MOVE SCR-STAT-CON TO SCR-STAT.
      *>>>>
*% END
*% IF PUT_SCR
      *<<<< PUT_SCR
      *ASM-INI FECHA 
           IF SCR-CCPP = 'ELI'
               MOVE 'SGC' TO FIO-SIST
               MOVE 'VSN' TO TAB-COD-TTAB IN TAB
               MOVE 'SGCTESTENTID' TO TAB-COD-CTAB IN TAB
               MOVE FIO-GET-KEY TO FIO-CMND
               PERFORM GNS-FIO-TAB
               IF FIO-STAT-OKS AND TAB-MSC-STAT IN TAB = 'S'
                   MOVE DBC-CIC-ICLI IN DBC TO VEC-ICLI
                   MOVE FIO-MSFL TO VEC-MSFL
                   MOVE 'SGCPPVEC' TO SYS-PROG
                   MOVE VEC-CMMA TO SYS-CMMA
                   MOVE VEC-TCMA TO SYS-TCMA
                   MOVE SYS-LINK TO SYS-CMND
                   PERFORM GNS-PRO-SYS
                   MOVE SYS-CMMA TO VEC-CMMA
                   MOVE VEC-MSFL TO FIO-MSFL
                   IF VEC-CMSG > SPACES
                       MOVE VEC-CMSG TO MSG-COD-MENS
                       MOVE 'SGC'    TO MSG-COD-SIST
                       PERFORM GET-MSG
                       MOVE MSG-GLS-DESC TO FRM-MEN1
                       MOVE VEC-MEN2     TO FRM-MEN2
                       MOVE SCR-STAT-CON TO SCR-STAT.
      *ASM-FIN FECHA 
      *>>>>
*% END
*% IF PUT_SCR AND PGM_ARG
           MOVE DBC-KEY-IDBC IN DBC TO DCP-KEY-IDCP IN DCP.
           MOVE DBC-KEY-IDBC IN DBC TO RCD-KEY-IRCD IN RCD.
           PERFORM BUS-DOM.
           IF RCD-GLS-DIRE IN RCD NOT > SPACES
               MOVE 01 TO RCD-NUM-DIRE IN RCD.
           MOVE DBC-CIC-ICLI IN DBC TO RCD-CIC-ICLI IN RCD.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM SGC-FIO-DCP.
           MOVE FIO-STAT TO PGM-STAT-DCP
           IF FIO-STAT-OKS
               MOVE FIO-GET-KEY TO FIO-CMND
               PERFORM SGC-FIO-RCD
               MOVE FIO-STAT TO PGM-STAT-RCD
               IF FIO-STAT-OKS
                  NEXT SENTENCE
               ELSE
                   MOVE
                   'ERROR : Existe cliente en DBC, DCP pero no en RCD'
                                                           TO FRM-MENS
           ELSE
               MOVE 'ERROR : Existe cliente en DBC pero no en DCP'
                    TO FRM-MENS.
*% END
*% IF FIN_HBL_FLD
      *<<<< FIN_HBL_FLD
*% IF PGM_BCI OR PGM_ARG
      *DAD ini  13-MAY-1992
           MOVE 'SGC'          TO FIO-SIST.
           MOVE 'VSN'          TO TAB-COD-TTAB IN TAB.
           MOVE 'DBCDCOR  DBP' TO TAB-COD-CTAB IN TAB.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM GNS-FIO-TAB.
           IF NOT ( FIO-STAT-OKS AND
                    TAB-MSC-STAT IN TAB = 'S' )
               MOVE FRM-CPIM-AEY TO DBC-NUM-DCOR-ATR IN DBP-FLD
               MOVE ZEROES       TO DBC-NUM-DCOR     IN DBP-FLD
               MOVE 'N'          TO FRM-IND-VERS     IN DBP-FLD
           ELSE
               MOVE TAB-GLS-DCOR IN TAB TO FRM-GLS-DCOR IN DBP-FLD
               MOVE 'S'                 TO FRM-IND-VERS IN DBP-FLD
               IF  SCR-CCPP = 'ING' OR
                 ( SCR-CCPP = 'ACT' AND SCR-ACTU = SCR-ACTU-ING )
                   MOVE 01 TO DBC-NUM-DCOR IN DBP-FLD.

           MOVE 'SGC'          TO FIO-SIST.
           MOVE 'VSN'          TO TAB-COD-TTAB IN TAB.
           MOVE 'DCPCSEC  DBP' TO TAB-COD-CTAB IN TAB.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM GNS-FIO-TAB.
           IF NOT ( FIO-STAT-OKS AND
                    TAB-MSC-STAT IN TAB = 'S' )
               MOVE FRM-CPIM-AEY TO DCP-COD-CSEC-ATR IN DBP-FLD
               MOVE SPACES       TO DCP-COD-CSEC     IN DBP-FLD
                                    FRM-GLS-CSEC     IN DBP-FLD
           ELSE
               MOVE TAB-GLS-DCOR IN TAB TO FRM-GLS-CATS IN DBP-FLD.
*% END
           IF SCR-CMND = WSS-CMND-DBP-ICD
*% IF PGM_PER
               MOVE 'CA'                     TO DBC-COD-TICL IN DBP-FLD
*% ELSE
*% IF PGM_BCI
               PERFORM SET-FRM-ICD.
*%ELSE
               MOVE 'CA'                     TO DBC-COD-TICL IN DBP-FLD.
*% END
*% END
*% IF PGM_PER
               MOVE FRM-CPIM-AEY TO DBC-COD-TICL-ATR IN DBP-FLD.
*% END

      *DAD ini  05-JUN-1992
           IF SCR-CMND = WSS-CMND-DBP-CCL
               MOVE 'CL'         TO DBC-COD-TICL     IN DBP-FLD
               MOVE FRM-CPIM-AEY TO DBC-COD-TICL-ATR IN DBP-FLD.
      *DAD fin  05-JUN-1992

      *DAD ini  05-JUN-1992
      *     IF SCR-CMND = WSS-CMND-DBP-CCL
      *DAD fin  05-JUN-1992
           IF SCR-CMND = WSS-CMND-DBP-ICD
               MOVE 'DAP'        TO MSG-COD-SIST
               MOVE 'CMNDICDFLD' TO MSG-COD-MENS
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS.
      *DAD fin  13-MAY-1992

      *ALD/9-NOV-1989
           IF SCR-CMND = WSS-CMND-DBP-MIC OR
              WSS-CMND-DBP-MNC OR WSS-CMND-DBP-INC
*% IF PGM_CHI OR PGM_ARG
              OR DBC-IND-ICLI IN DBP-FLD = 'A'
*% END
               PERFORM PRO-KEY-DBP
               PERFORM PRO-FLD-DBP.
      *
           IF SCR-CMND = WSS-CMND-DBP-MIC
               PERFORM UNP-IKY-DBP
               MOVE 0  TO DBC-GLS-APAT-LEN IN DBP-FLD
*% IF PGM_ARG
               MOVE -1 TO DBC-GLS-ICLI-LEN IN DBP-FLD.
*% ELSE
               MOVE -1 TO DBC-NUM-ICLI-LEN IN DBP-FLD.
*% END

           IF SCR-CMND = WSS-CMND-DBP-MNC
               PERFORM UNP-MKY-DBP
      *DAD ini 26-FEB-1991
               MOVE FRM-CPIM-UBY TO DCP-NUM-NMSG-ATR
               MOVE FRM-CPIM-UBY TO MNP-GLS-NOMB-ATR
           ELSE
               MOVE FRM-CPIM-AEY TO DCP-NUM-NMSG-ATR
               MOVE FRM-CPIM-AEY TO MNP-GLS-NOMB-ATR.
      *DAD fin 26-FEB-1991

           IF SCR-CMND = WSS-CMND-DBP-INC
*% IF PGM_CHI OR PGM_ARG
              OR DBC-IND-ICLI IN DBP-FLD = 'A'
*% END
               PERFORM UNP-MKY-DBP
               MOVE FRM-CPIM-UBY TO RCD-GLS-DIRE-ATR IN DBP-FLD
               MOVE FRM-CPIM-UBY TO DBC-COD-OFIC-ATR IN DBP-FLD
               MOVE FRM-CPIM-UBY TO DBC-COD-TICL-ATR IN DBP-FLD
*% IF PGM_ARG
               MOVE FRM-CPIM-UBY TO DBC-GLS-CUIT-ATR IN DBP-FLD
               MOVE FRM-CPIM-UBY TO DBC-NUM-CUIT-ATR IN DBP-FLD
               MOVE FRM-CPIM-UBY TO DBC-VRF-CUIT-ATR IN DBP-FLD
*% IF NOT PGM_BRB
               MOVE FRM-CPIM-UBY TO DBC-IND-CUIT-ATR IN DBP-FLD
*% END
*% END
               IF DBC-COD-TICL IN DBP-FLD NOT > SPACES
                   MOVE 'NC'     TO DBC-COD-TICL     IN DBP-FLD.
*% IF NOT PGM_PER
           IF SCR-CMND NOT = WSS-CMND-DBP-ICD
*% END
           IF  SCR-CCPP = 'MOD' OR
             ( SCR-CCPP = 'ACT' AND SCR-ACTU = SCR-ACTU-MOD )
               PERFORM PRO-MKY-DBP
               MOVE 0  TO DBC-GLS-APAT-LEN IN DBP-FLD
*% IF NOT PGM_ARG
               MOVE -1 TO RCD-GLS-DIRE-LEN IN DBP-FLD.
*% ELSE
               MOVE -1 TO DBC-GLS-PADR-LEN IN DBP-FLD.
*% END
*% IF PGM_ARG
           IF  SCR-CCPP = 'ING' 
               MOVE FRM-CPIM-AEY TO DBC-NUM-DCOR-ATR.
*% END
      *>>>>
*% END
*% IF CMN_MOD_RET
*% IF PGM_BCI OR PGM_ARG
      *<<<< CMN_MOD_RET
      *DAD ini  13-MAY-1992
           IF FRM-IND-VERS IN DBP-FLD = 'N'
               MOVE DBC-NUM-DCOR IN DBC TO DBC-NUM-DCOR IN DBP-FLD.
      *DAD fin  13-MAY-1992
      *>>>>
*% END
*% END
*% IF CMN_MOD
      *<<<< CMN_MOD
      *    Compara codigo ult. modificacion con el que tiene en la COMMON AREA
*% IF NOT PGM_VMS
      *<<<< NOT PGM_VMS
           IF DBC-STP-ITRN IN DBC NOT = SCR-UMOD
      *GET-MSG Busca mensaje en tabla
               MOVE 'GNS' TO MSG-COD-SIST
               MOVE 'UPD    SIMUL' TO MSG-COD-MENS
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS
               GO TO FIN-CMN-MOD.
      *>>>>
*% END

      *    PERFORM KEY-DCP-DBP.
           MOVE DBC-CIC-ICLI IN DBC TO DCP-CIC-ICLI IN DCP.
           MOVE FIO-GET-KEY-UPD TO FIO-CMND.
           PERFORM SGC-FIO-DCP.
           IF NOT FIO-STAT-OKS
      *        Como la transaccion Termina no es necesario hacer UNLOCK de
      *        DBC
      *        Comunicar que no se pudo actualizar con mensaje pertinente
               MOVE FIO-MENS TO FRM-MENS
               GO TO FIN-CMN-MOD.
*% IF PGM_BCI
      *DAD ini  13-MAY-1992
           IF FRM-IND-VERS IN DBP-FLD = 'N'
               MOVE DCP-COD-CSEC IN DCP TO DCP-COD-CSEC IN DBP-FLD.
      *DAD fin  13-MAY-1992
*% END
           PERFORM RET-DCP-DBP.
      *    PERFORM KEY-RCD-DBP.
           PERFORM BUS-DOM.
           IF RCD-GLS-DIRE IN RCD NOT > SPACES
*% IF PGM_PER
               MOVE 01                  TO RCD-NUM-DIRE IN RCD.
*% ELSE
               MOVE 01                  TO RCD-NUM-DIRE IN RCD
      * SI NO HAY DOMICILIO LO DEJA MARCADO PARA COMANDO WSS-CMND-DBP-ICD
      *    LA DIRECCION INGRESADA EN IOCD QUEDA COMO DOMICILIO
               MOVE 'N' TO WSS-ICD-DOMI.
*% END
           MOVE DBC-CIC-ICLI IN DBC TO RCD-CIC-ICLI IN RCD.
           MOVE FIO-GET-KEY-UPD TO FIO-CMND.
           PERFORM SGC-FIO-RCD.
           IF NOT FIO-STAT-OKS
      *        Como la transaccion Termina no es necesario hacer UNLOCK de
      *        DBC y DCP
      *        Comunicar que no se pudo actualizar con mensaje pertinente
               MOVE FIO-MENS TO FRM-MENS
               GO TO FIN-CMN-MOD.
           PERFORM RET-RCD-DBP.
           PERFORM RET-HDR-DBC.
      *>>>>
*% END
*% IF FIN_CMN_MOD
      *<<<< FIN_CMN_MOD
           IF NOT FIO-STAT-OKS
      *        Error inconsistencia en la modificacion : informar
               MOVE FIO-MENS TO FRM-MENS
               GO TO FIN-CMN-MOD.
           MOVE DBC-STP-ITRN IN DBC TO DCP-STP-ITRN IN DCP.
           PERFORM RET-HDR-DCP.
           MOVE FIO-MOD TO FIO-CMND.
           PERFORM SGC-FIO-DCP.
           IF NOT FIO-STAT-OKS
      *        Error inconsistencia en la modificacion : hacer LOGTB e informar
               MOVE FIO-MENS TO FRM-MENS
               PERFORM BCK-OUT
               GO TO FIN-CMN-MOD.
           MOVE DBC-STP-ITRN IN DBC TO RCD-STP-ITRN IN RCD.
           PERFORM RET-HDR-RCD.
*% IF NOT PGM_PER
           IF SCR-CMND = WSS-CMND-DBP-ICD AND
              WSS-ICD-DOMI = 'N'
                MOVE 'D'    TO RCD-MSC-TDIR IN RCD.
*% END
           MOVE FIO-MOD TO FIO-CMND.
           PERFORM SGC-FIO-RCD.
           IF NOT FIO-STAT-OKS
      *        Error inconsistencia en la modificacion : hacer LOGTB e informar
               MOVE FIO-MENS TO FRM-MENS
               PERFORM BCK-OUT
               GO TO FIN-CMN-MOD.
      *AVM 11-JUN-1990 19:00 Hrs.
      *    PERFORM ACT-MNP.
      *    IF NOT FIO-STAT-OKS
      *        Error inconsistencia en la modificacion : hacer LOGTB e informar
      *        PERFORM BCK-OUT
      *        GO TO FIN-CMN-MOD.
      *>>>>
*% END
*% IF INI_PRO_CONF
      *<<<< INI_PRO_CONF
      *DAD ini  13-MAY-1992
      *DAD ini  05-JUN-1992
      *     IF SCR-CMND = WSS-CMND-DBP-CCL
      *DAD fin  05-JUN-1992
           IF SCR-CMND = WSS-CMND-DBP-ICD
               MOVE 'DAP'        TO MSG-COD-SIST
               MOVE 'CMNDICDCNF' TO MSG-COD-MENS
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS.
      *DAD fin  13-MAY-1992
      *>>>>
*% END
*% IF INI_CMN_ING
      *<<<< INI_CMN_ING
           MOVE DBC-NUM-ICLI IN DBP-FLD TO DBC-NUM-ICLI IN DBC.
           MOVE DBC-IND-ICLI IN DBP-FLD TO DBC-IND-ICLI IN DBC.
           MOVE DBC-GLS-ICLI IN DBP-FLD TO DBC-GLS-ICLI IN DBC.
           MOVE 'DBC-IDC-ICLI' TO FIO-AKEY.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM SGC-FIO-DBC.
           IF FIO-STAT-OKS
               MOVE 'SGC' TO MSG-COD-SIST
               MOVE 'DBCIDCYAEX' TO MSG-COD-MENS
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS
               GO TO FIN-CMN-ING.
           MOVE SPACES TO DBC.
           MOVE ZEROES TO DBC-STP-ITRN IN DBC.
           MOVE ZEROES TO DBC-NUM-DCOR IN DBC.
*% IF PGM_CHI OR PGM_ARG
           MOVE ZEROES TO DBC-FEC-FA85 IN DBC.
*% END
           MOVE ZEROES TO DBC-FEC-FUPI IN DBC.
           MOVE ZEROES TO DBC-FEC-FSCL IN DBC.
           MOVE ZEROES TO DBC-NUM-TDIR IN DBC.
           MOVE ZEROES TO DBC-NUM-TCMT IN DBC.
*% IF PGM_CHI OR PGM_ARG
           MOVE ZEROES TO DBC-FEC-FIOP IN DBC.
           MOVE ZEROES TO DBC-FEC-FTOP IN DBC.
*% END
           MOVE ZEROES TO DBC-NUM-OFTN IN DBC.
           MOVE ZEROES TO DBC-FEC-FINP IN DBC.
           MOVE SPACES TO RCD.
           MOVE ZEROES TO RCD-NUM-DIRE IN RCD.
           MOVE ZEROES TO RCD-STP-ITRN IN RCD.
           MOVE ZEROES TO RCD-FEC-FVRF IN RCD.
           MOVE SPACES TO DCP.
           MOVE ZEROES TO DCP-STP-ITRN IN DCP.
           MOVE ZEROES TO DCP-FEC-FNAC IN DCP.
      *>>>>
*% END
*% IF CMN_ING
      *<<<< CMN_ING
           PERFORM RET-HDR-DBC.
           MOVE 1      TO DBC-NUM-TDIR IN DBC.
           MOVE 'D'    TO RCD-MSC-TDIR IN RCD.
           MOVE 'C'    TO RCD-MSC-SDIR IN RCD.
           MOVE 'P'    TO DBC-IND-TICL IN DBC.
           MOVE ZEROES TO DBC-NUM-TCMT IN DBC.
*% IF PGM_ARG
           MOVE SPACES TO DBC-GLS-AMAT IN DBC.
           MOVE SPACES TO DCP-IND-RCNY IN DCP.
*% END
      *GET-CIC Obtener CIC
*% IF PGM_PER
           IF SCR-IIC-ICLI NOT > ZEROES
               MOVE SPACES TO CIC-CAI-ICIC IN CIC
               MOVE CIC-GET TO CIC-CMND
               PERFORM PRO-CIC
               IF CIC-STAT NOT = CIC-STAT-OKS
                   MOVE CIC-MENS TO FRM-MENS
                   GO TO FIN-CMN-ING
               ELSE
                   NEXT SENTENCE
           ELSE
               MOVE SCR-CIC-ICLI TO CIC-CIC-ICIC.
*% ELSE
           MOVE SPACES TO CIC-CAI-ICIC IN CIC.
           MOVE CIC-GET TO CIC-CMND.
           PERFORM PRO-CIC.
           IF CIC-STAT NOT = CIC-STAT-OKS
               MOVE CIC-MENS TO FRM-MENS
               GO TO FIN-CMN-ING.
*% END
           MOVE CIC-CIC-ICIC TO DBC-CIC-ICLI IN DBC.
      *ALD
      *    MOVE DBC-IDC-ICLI IN DBC TO DBC-CIC-ICLI IN DBC.
      *>>>>
*% END
*% IF FIN_CMN_ING
      *<<<< FIN_CMN_ING
           IF NOT FIO-STAT-OKS
      *        Error inconsistencia en el ingreso : informar
               MOVE FIO-MENS TO FRM-MENS
               GO TO FIN-CMN-ING.
      *    PERFORM KEY-DCP-DBP.
           MOVE DBC-CIC-ICLI IN DBC TO DCP-CIC-ICLI IN DCP.
           MOVE DBC-STP-ITRN IN DBC TO DCP-STP-ITRN IN DCP.
           PERFORM RET-HDR-DCP.
           MOVE FIO-PUT TO FIO-CMND.
           PERFORM SGC-FIO-DCP.
           IF NOT FIO-STAT-OKS
      *        Error inconsistencia en el ingreso : hacer LOGTB e informar
               MOVE FIO-MENS TO FRM-MENS
               PERFORM BCK-OUT
               GO TO FIN-CMN-ING.
           MOVE DBC-CIC-ICLI IN DBC TO RCD-CIC-ICLI IN RCD.
           MOVE 01                  TO RCD-NUM-DIRE IN RCD.
      *    PERFORM KEY-RCD-DBP.
           MOVE DBC-STP-ITRN IN DBC TO RCD-STP-ITRN IN RCD.
           PERFORM RET-HDR-RCD.
           MOVE FIO-PUT TO FIO-CMND.
           PERFORM SGC-FIO-RCD.
           IF NOT FIO-STAT-OKS
      *        Error inconsistencia en el ingreso : hacer LOGTB e informar
               MOVE FIO-MENS TO FRM-MENS
               PERFORM BCK-OUT
               GO TO FIN-CMN-ING.
*% IF PGM_CHI OR PGM_ARG
      *ALD/21-JUL-1988
           MOVE DBC-NUM-ICLI IN DBC TO RBS-NUM-RUTS IN RBS.
           MOVE DBC-VRF-ICLI IN DBC TO RBS-VRF-RUTS IN RBS.
           MOVE 'RBS-GLS-ICLS' TO FIO-AKEY.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM SGC-FIO-RBS.

           IF NOT FIO-STAT-OKS
               MOVE '00' TO FIO-STAT
      *DAD ini  13-MAY-1992
               GO TO EXT-CMN-ING.
      *DAD fin  13-MAY-1992

      * ISP:  2-FEB-1993 FIO-GET-KEY ( LLAVE ALT ) + 
      *                  FIO-GET-KEY-UPD ( LLAVE PRINCIPAL )
      *       PARA COMPATIBILDAD VSAM

           MOVE FIO-GET-KEY-UPD TO FIO-CMND.
           PERFORM SGC-FIO-RBS.


           MOVE DBC-STP-ITRN IN DBC TO RBS-STP-ITRN IN RBS.
           MOVE DBC-CIC-ICLI IN DBC TO RBS-CIC-ICLI IN RBS.
           PERFORM RET-HDR-RBS.
           MOVE FIO-MOD TO FIO-CMND.
           PERFORM SGC-FIO-RBS.
           IF NOT FIO-STAT-OKS
               MOVE '00' TO FIO-STAT
      *DAD ini  13-MAY-1992
               GO TO EXT-CMN-ING.
      *DAD fin  13-MAY-1992
*% END
      *DAD ini  13-MAY-1992
       EXT-CMN-ING.
      *DAD ini  05-JUN-1992
      *     IF SCR-CMND = WSS-CMND-DBP-CCL
      *DAD fin  05-JUN-1992
           IF SCR-CMND = WSS-CMND-DBP-ICD
               MOVE 'DAP'        TO MSG-COD-SIST
               MOVE 'CMNDICDING' TO MSG-COD-MENS
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS.
      *DAD fin  13-MAY-1992

      *AVM 11-JUN-1990 19:00 Hrs.
      *    PERFORM ACT-MNP.
      *    IF NOT FIO-STAT-OKS
      *        Error inconsistencia en la modificacion : hacer LOGTB e informar
      *        PERFORM BCK-OUT
      *        GO TO FIN-CMN-ING.
      *
      *>>>>
*% END
*% IF CMN_ELI
      *<<<< CMN_ELI
      *    Compara codigo ult. modificacion con el que tiene en la COMMON AREA
*% IF NOT PGM_VMS
      *<<<< NOT PGM_VMS
           IF DBC-STP-ITRN IN DBC NOT = SCR-UMOD
      *>>>>
*% END
      *GET-MSG Busca mensaje en tabla
               MOVE 'GNS' TO MSG-COD-SIST
               MOVE 'UPD    SIMUL' TO MSG-COD-MENS
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS
               GO TO FIN-CMN-ELI.
      *    PERFORM KEY-DCP-DBP.
           MOVE DBC-CIC-ICLI IN DBC TO DCP-CIC-ICLI IN DCP.
           MOVE FIO-GET-KEY-UPD TO FIO-CMND.
           PERFORM SGC-FIO-DCP.
           IF NOT FIO-STAT-OKS
      *        Como la transaccion Termina no es necesario hacer UNLOCK de
      *        DBC
      *        Comunicar que no se pudo eliminar con mensaje pertinente
               MOVE FIO-MENS TO FRM-MENS
               GO TO FIN-CMN-ELI.
      *    PERFORM KEY-RCD-DBP.
           PERFORM BUS-DOM.
           IF RCD-GLS-DIRE IN RCD NOT > SPACES
               MOVE 01                  TO RCD-NUM-DIRE IN RCD.
           MOVE DBC-CIC-ICLI IN DBC TO RCD-CIC-ICLI IN RCD.
           MOVE FIO-GET-KEY-UPD TO FIO-CMND.
           PERFORM SGC-FIO-RCD.
           IF NOT FIO-STAT-OKS
      *        Como la transaccion Termina no es necesario hacer UNLOCK de
      *        DBC y DCP
      *        Comunicar que no se pudo eliminar con mensaje pertinente
               MOVE FIO-MENS TO FRM-MENS
               GO TO FIN-CMN-ELI.
      *>>>>
*% END
*% IF FIN_CMN_ELI
      *<<<< FIN_CMN_ELI
           IF NOT FIO-STAT-OKS
      *        Error inconsistencia en la eliminacion : informar
               MOVE FIO-MENS TO FRM-MENS
               GO TO FIN-CMN-ELI.
           MOVE FIO-DEL TO FIO-CMND.
           PERFORM SGC-FIO-DCP.
           IF NOT FIO-STAT-OKS
      *        Error inconsistencia en la eliminacion : hacer LOGTB e informar
               MOVE FIO-MENS TO FRM-MENS
               PERFORM BCK-OUT
               GO TO FIN-CMN-ELI.
           MOVE DBC-STP-ITRN IN DBC TO RCD-STP-ITRN IN RCD.
           MOVE FIO-DEL TO FIO-CMND.
           PERFORM SGC-FIO-RCD.
           IF NOT FIO-STAT-OKS
      *        Error inconsistencia en la eliminacion : hacer LOGTB e informar
               MOVE FIO-MENS TO FRM-MENS
               PERFORM BCK-OUT
               GO TO FIN-CMN-ELI.
      *>>>>
*% END
*% IF INI_CMN_ACC
      *<<<< INI_CMN_ACC
           IF SCR-CMND = WSS-CMND-DBP-MIC
               PERFORM KEY-DBC-DBP
               MOVE 'DBC-IDC-ICLI' TO FIO-AKEY
               MOVE FIO-GET-KEY TO FIO-CMND
               PERFORM SGC-FIO-DBC
               IF FIO-STAT-OKS
                   MOVE 'SGC' TO MSG-COD-SIST
                   MOVE 'DBCIDCYAEX' TO MSG-COD-MENS
                   PERFORM GET-MSG
                   MOVE MSG-GLS-DESC TO FRM-MENS
                   GO TO FIN-CMN-ACC
               ELSE
                   NEXT SENTENCE
           ELSE
               IF SCR-CMND = WSS-CMND-DBP-PAE
                   PERFORM CMB-PRS-EMP
                   GO TO FIN-CMN-ACC.
      *>>>>
*% END
*% IF CMN_ACC
      *<<<< CMN_ACC
           PERFORM RET-HDR-DBC.
           MOVE FIO-MOD TO FIO-CMND.
           PERFORM SGC-FIO-DBC.
           IF FIO-STAT-OKS
               MOVE 'MODYES    ' TO MSG-COD-MENS
      *DAD ini 26-FEB-1991
               IF SCR-CMND = WSS-CMND-DBP-MNC
                   MOVE DBC-CIC-ICLI IN DBC TO DCP-CIC-ICLI IN DCP
                   MOVE FIO-GET-KEY-UPD TO FIO-CMND
                   PERFORM SGC-FIO-DCP
                   PERFORM RET-DCP-DBP
                   PERFORM RET-HDR-DCP
                   MOVE FIO-MOD TO FIO-CMND
                   PERFORM SGC-FIO-DCP
               ELSE
                   NEXT SENTENCE
      *DAD fin 26-FEB-1991
           ELSE
               MOVE 'MODNOT    ' TO MSG-COD-MENS.
           MOVE 'GNS' TO MSG-COD-SIST.
           PERFORM GET-MSG.
           MOVE MSG-GLS-DESC TO FRM-MENS.
*% IF PGM_CHI OR PGM_ARG
      *DAD ini  29-SEP-1993
           IF SCR-CMND = WSS-CMND-DBP-MIC
               MOVE DBC-CIC-ICLI IN DBC TO RBS-CIC-ICLI IN RBS
               MOVE 'RBS-CIC-ICLI'  TO FIO-AKEY
               MOVE FIO-GET-KEY-UPD TO FIO-CMND
               PERFORM SGC-FIO-RBS
               IF NOT FIO-STAT-OKS
                   MOVE '00' TO FIO-STAT
                   GO TO FIN-CMN-ACC
               ELSE
                   MOVE DBC-STP-ITRN IN DBC TO RBS-STP-ITRN IN RBS
                   MOVE DBC-NUM-ICLI IN DBC TO RBS-NUM-RUTS IN RBS
                   MOVE DBC-VRF-ICLI IN DBC TO RBS-VRF-RUTS IN RBS
                   PERFORM RET-HDR-RBS
                   MOVE FIO-MOD TO FIO-CMND
                   PERFORM SGC-FIO-RBS
                   IF NOT FIO-STAT-OKS
                       MOVE '00' TO FIO-STAT.
      *DAD fin  29-SEP-1993
*% END
      *>>>>
*% END
*% IF EOF_PQ 
      *<<<< EOF_PQ
*% IF PGM_ARG
       COLAR-ENTIDAD SECTION.
       INI-COLAR-ENTIDAD.
           IF DBC-IND-TICL IN DBC = 'E'
              MOVE 'S' TO WSS-PFS-COLAR
           ELSE
              MOVE 'N' TO WSS-PFS-COLAR.
       FIN-COLAR-ENTIDAD.
           EXIT. 
*% END
       PRO-FLD-DBP SECTION.
       INI-PRO-FLD-DBP.
           PERFORM PRO-DBC-DBP.
           PERFORM PRO-RCD-DBP.
           PERFORM PRO-DCP-DBP.
           PERFORM PRO-MNP-DBP.
       FIN-PRO-FLD-DBP.
           EXIT.
       
       PRO-DBC-DBP SECTION.
       INI-PRO-DBC-DBP.
*% IF PGM_PER
           MOVE FRM-CPIM-AEY TO DCP-NUM-IRUC-ATR IN DBP-FLD.
           MOVE FRM-CPIM-AEY TO DCP-VRF-IRUC-ATR IN DBP-FLD.
           MOVE FRM-CPIM-AEY TO DBC-IND-RESI-ATR IN DBP-FLD.
           MOVE FRM-CPIM-AEY TO DBC-IND-MEMP-ATR IN DBP-FLD.
           MOVE FRM-CPIM-AEY TO DBC-NUM-RMER-ATR IN DBP-FLD.
*% END
           MOVE FRM-CPIM-AEY TO DBC-NUM-DCOR-ATR IN DBP-FLD.
           MOVE FRM-CPIM-AEY TO DBC-COD-TICL-ATR IN DBP-FLD.
           MOVE FRM-CPIM-AEY TO DBC-COD-EJEC-ATR IN DBP-FLD.
           MOVE FRM-CPIM-AEY TO DBC-COD-OFIC-ATR IN DBP-FLD.
*% IF PGM_PER
           MOVE FRM-CPIM-AEY TO DBC-IND-TBCA-ATR IN DBP-FLD.
*% ELSE
           MOVE FRM-CPIM-AEY TO DBC-IND-OOFI-ATR IN DBP-FLD.
*% END
           MOVE FRM-CPIM-AEY TO DBC-COD-ACTI-ATR IN DBP-FLD.
*% IF PGM_CHI OR PGM_ARG
           MOVE FRM-CPIM-AEY TO DBC-COD-ODSE-ATR IN DBP-FLD.
*% END
*% IF PGM_ARG
      *ini rda-cst 08-11-93
           MOVE FRM-CPIM-AEY TO DBC-COD-CATE-ATR IN DBP-FLD.
           MOVE FRM-CPIM-AEY TO DBC-IND-AINF-ATR IN DBP-FLD.
           MOVE FRM-CPIM-AEY TO DBC-GLS-PADR-ATR IN DBP-FLD.
           MOVE FRM-CPIM-AEY TO DBC-GLS-MADR-ATR IN DBP-FLD.
           MOVE FRM-CPIM-AEY TO DBC-GLS-CUIT-ATR IN DBP-FLD.
           MOVE FRM-CPIM-AEY TO DBC-NUM-CUIT-ATR IN DBP-FLD.
           MOVE FRM-CPIM-AEY TO DBC-VRF-CUIT-ATR IN DBP-FLD.
           MOVE FRM-CPIM-AEY TO DBC-IND-CUIT-ATR IN DBP-FLD.
           MOVE FRM-CPIM-AEY TO DBC-MSC-SCLI-ATR IN DBP-FLD.
      *fin rda-cst 08-11-93
*% END
       FIN-PRO-DBC-DBP.
           EXIT.
       
       PRO-RCD-DBP SECTION.
       INI-PRO-RCD-DBP.
           MOVE FRM-CPIM-AEY TO RCD-GLS-DIRE-ATR IN DBP-FLD.
           MOVE FRM-CPIM-AEY TO RCD-COD-LUGA-ATR IN DBP-FLD.
           MOVE FRM-CPIM-AEY TO RCD-GLS-FONO-ATR IN DBP-FLD.
       FIN-PRO-RCD-DBP.
           EXIT.
       
       PRO-DCP-DBP SECTION.
       INI-PRO-DCP-DBP.
*% IF PGM_PER
           MOVE FRM-CPIM-AEY TO DCP-IND-UCTA-ATR IN DBP-FLD.
*% END
*% IF PGM_CHI OR PGM_ARG
           MOVE FRM-CPIM-AEY TO DCP-NUM-CIDE-ATR IN DBP-FLD.
           MOVE FRM-CPIM-AEY TO DCP-VRF-CIDE-ATR IN DBP-FLD.
           MOVE FRM-CPIM-AEY TO DCP-COD-TBAN-ATR IN DBP-FLD.
*% END
           MOVE FRM-CPIM-AEY TO DCP-COD-CSEC-ATR IN DBP-FLD.
           MOVE FRM-CPIM-AEY TO DCP-COD-ACTS-ATR IN DBP-FLD.
           MOVE FRM-CPIM-AEY TO DCP-IND-NEDU-ATR IN DBP-FLD.
           MOVE FRM-CPIM-AEY TO DCP-COD-PROF-ATR IN DBP-FLD.
           MOVE FRM-CPIM-AEY TO DCP-FEC-FNAC-ATR IN DBP-FLD.
           MOVE FRM-CPIM-AEY TO DCP-IND-SEXO-ATR IN DBP-FLD.
           MOVE FRM-CPIM-AEY TO DCP-NUM-NMSG-ATR IN DBP-FLD.
           MOVE FRM-CPIM-AEY TO DCP-IND-ECIV-ATR IN DBP-FLD.
           MOVE FRM-CPIM-AEY TO DCP-COD-PNAC-ATR IN DBP-FLD.
           MOVE FRM-CPIM-AEY TO DCP-IND-SLAB-ATR IN DBP-FLD.
           MOVE FRM-CPIM-AEY TO DCP-IND-CASA-ATR IN DBP-FLD.
*% IF PGM_CHI
           MOVE FRM-CPIM-AEY TO DCP-IND-RCNY-ATR IN DBP-FLD.
      *DAD ini  18-FEB-1994
           MOVE FRM-CPIM-AEY TO DCP-COD-TPLN-ATR IN DBP-FLD.
      *DAD fin  18-FEB-1994
*% END
       FIN-PRO-DCP-DBP.
           EXIT.
       
       PRO-MNP-DBP SECTION.
       INI-PRO-MNP-DBP.
           MOVE FRM-CPIM-AEY TO MNP-GLS-NOMB-ATR IN DBP-FLD.
       FIN-PRO-MNP-DBP.
           EXIT.
      *>>>>
*% END
*% IF EOF_PU OR (EOF AND PGM_VMS)
      *<<<< EOF_PU OR (EOF AND PGM_VMS)
       RET-HDR-DCP SECTION.
       INI-RET-HDR-DCP.
           PERFORM GET-FHOY.
      *    Fecha Transaccion
           MOVE HOY-FHOY TO DCP-FEC-FTRN IN DCP.
      *    Hora Transaccion
           MOVE HOY-HHOY TO DCP-HRA-HRTR IN DCP.
*% IF NOT PGM_VMS
      *<<<< NOT PGM_VMS
      *    Codigo Origen transaccion
           MOVE SCR-OTRN TO DCP-COD-OTRN IN DCP.
      *    Autor Transaccion
           MOVE SCR-USER TO DCP-COD-ATRN IN DCP.
      *>>>>
*% END
           IF SCR-CCPP = 'ING'
               MOVE 'I' TO DCP-MSC-TACC IN DCP
               MOVE 'I' TO DCP-MSC-STAT IN DCP
           ELSE
           IF SCR-CCPP = 'MOD'
               MOVE 'M' TO DCP-MSC-TACC IN DCP
               MOVE 'M' TO DCP-MSC-STAT IN DCP.
       FIN-RET-HDR-DCP.
           EXIT.

       RET-HDR-RCD SECTION.
       INI-RET-HDR-RCD.
           PERFORM GET-FHOY.
      *    Fecha Transaccion
           MOVE HOY-FHOY TO RCD-FEC-FTRN IN RCD.
      *    Hora Transaccion
           MOVE HOY-HHOY TO RCD-HRA-HRTR IN RCD.
*% IF NOT PGM_VMS
      *<<<< NOT PGM_VMS
      *    Codigo Origen transaccion
           MOVE SCR-OTRN TO RCD-COD-OTRN IN RCD.
      *    Autor Transaccion
           MOVE SCR-USER TO RCD-COD-ATRN IN RCD.
      *>>>>
*% END
           IF SCR-CCPP = 'ING'
               MOVE 'I' TO RCD-MSC-TACC IN RCD
               MOVE 'I' TO RCD-MSC-STAT IN RCD
           ELSE
           IF SCR-CCPP = 'MOD'
               MOVE 'M' TO RCD-MSC-TACC IN RCD
               MOVE 'M' TO RCD-MSC-STAT IN RCD.
       FIN-RET-HDR-RCD.
           EXIT.

       RET-HDR-DCE SECTION.
       INI-RET-HDR-DCE.
           PERFORM GET-FHOY.
      *    Fecha Transaccion
           MOVE HOY-FHOY TO DCE-FEC-FTRN IN DCE.
      *    Hora Transaccion
           MOVE HOY-HHOY TO DCE-HRA-HRTR IN DCE.
*% IF NOT PGM_VMS
      *<<<< NOT PGM_VMS
      *    Codigo Origen transaccion
           MOVE SCR-OTRN TO DCE-COD-OTRN IN DCE.
      *    Autor Transaccion
           MOVE SCR-USER TO DCE-COD-ATRN IN DCE.
      *>>>>
*% END
           IF SCR-CCPP = 'ING'
               MOVE 'I' TO DCE-MSC-TACC IN DCE
               MOVE 'I' TO DCE-MSC-STAT IN DCE
           ELSE
           IF SCR-CCPP = 'MOD'
               MOVE 'M' TO DCE-MSC-TACC IN DCE
               MOVE 'M' TO DCE-MSC-STAT IN DCE.
       FIN-RET-HDR-DCE.
           EXIT.
*% IF PGM_CHI OR PGM_ARG

       RET-HDR-RBS SECTION.
       INI-RET-HDR-RBS.
           PERFORM GET-FHOY.
      *    Fecha Transaccion
           MOVE HOY-FHOY TO RBS-FEC-FTRN IN RBS.
      *    Hora Transaccion
           MOVE HOY-HHOY TO RBS-HRA-HRTR IN RBS.
*% IF NOT PGM_VMS
      *<<<< NOT PGM_VMS
      *    Codigo Origen transaccion
           MOVE SCR-OTRN TO RBS-COD-OTRN IN RBS.
      *    Autor Transaccion
           MOVE SCR-USER TO RBS-COD-ATRN IN RBS.
      *>>>>
*% END
           IF SCR-CCPP = 'ING'
               MOVE 'I' TO RBS-MSC-TACC IN RBS
               MOVE 'I' TO RBS-MSC-STAT IN RBS
           ELSE
           IF SCR-CCPP = 'MOD'
               MOVE 'M' TO RBS-MSC-TACC IN RBS
               MOVE 'M' TO RBS-MSC-STAT IN RBS.
       FIN-RET-HDR-RBS.
           EXIT.

*% END
       RET-HDR-DBC SECTION.
       INI-RET-HDR-DBC.
           PERFORM GET-FHOY.
      *    Fecha Transaccion
           MOVE HOY-FHOY TO DBC-FEC-FTRN IN DBC.
      *    Hora Transaccion
           MOVE HOY-HHOY TO DBC-HRA-HRTR IN DBC.
*% IF NOT PGM_VMS
      *<<<< NOT PGM_VMS
      *    Codigo Origen transaccion
           MOVE SCR-OTRN TO DBC-COD-OTRN IN DBC.
      *    Autor Transaccion
           MOVE SCR-USER TO DBC-COD-ATRN IN DBC.
      *>>>>
*% END
*% IF PGM_PER
           IF SCR-CMND = WSS-CMND-DBP-VRF
               MOVE 'M' TO DBC-MSC-TACC IN DBC
               MOVE 'V' TO DBC-MSC-STAT IN DBC
           ELSE
*% END
           IF SCR-CCPP = 'ING'
               MOVE 'I' TO DBC-MSC-TACC IN DBC
               MOVE 'I' TO DBC-MSC-STAT IN DBC
           ELSE
           IF SCR-CCPP = 'MOD'
               MOVE 'M' TO DBC-MSC-TACC IN DBC
               MOVE 'M' TO DBC-MSC-STAT IN DBC.
       FIN-RET-HDR-DBC.
           EXIT.

*% IF NOT PGM_VMS
      *<<<< NOT PGM_VMS
       VAL-IKY-DBP SECTION.
       INI-VAL-IKY-DBP.
           PERFORM VAL-DBC-CAI-ICLI.
           IF FRM-SUAR = FRM-SUAR-MAL OR FRM-SUAR = FRM-SUAR-CLR
                MOVE -1 TO DBC-CAI-ICLI-LEN IN DBP-FLD
                GO TO FIN-VAL-IKY-DBP.
           PERFORM VAL-DBC-IIC-ICLI.
           IF FRM-SUAR = FRM-SUAR-MAL OR FRM-SUAR = FRM-SUAR-CLR
                MOVE -1 TO DBC-IIC-ICLI-LEN IN DBP-FLD
                GO TO FIN-VAL-IKY-DBP.
           PERFORM VAL-DBC-IND-ICLI.
           IF FRM-SUAR = FRM-SUAR-MAL OR FRM-SUAR = FRM-SUAR-CLR
                MOVE -1 TO DBC-IND-ICLI-LEN IN DBP-FLD
                GO TO FIN-VAL-IKY-DBP.
           PERFORM VAL-DBC-GLS-ICLI.
           IF FRM-SUAR = FRM-SUAR-MAL OR FRM-SUAR = FRM-SUAR-CLR
                MOVE -1 TO DBC-GLS-ICLI-LEN IN DBP-FLD
                GO TO FIN-VAL-IKY-DBP.
           PERFORM VAL-DBC-NUM-ICLI.
           IF FRM-SUAR = FRM-SUAR-MAL OR FRM-SUAR = FRM-SUAR-CLR
                MOVE -1 TO DBC-NUM-ICLI-LEN IN DBP-FLD
                GO TO FIN-VAL-IKY-DBP.
           PERFORM VAL-DBC-VRF-ICLI.
           IF FRM-SUAR = FRM-SUAR-MAL OR FRM-SUAR = FRM-SUAR-CLR
                MOVE -1 TO DBC-VRF-ICLI-LEN IN DBP-FLD
                GO TO FIN-VAL-IKY-DBP.
       FIN-VAL-IKY-DBP.
           EXIT.

       VAL-DBC-CAI-ICLI SECTION.
       INI-VAL-DBC-CAI-ICLI.
       FIN-VAL-DBC-CAI-ICLI.
           EXIT.
       
       VAL-DBC-IIC-ICLI SECTION.
       INI-VAL-DBC-IIC-ICLI.
       FIN-VAL-DBC-IIC-ICLI.
           EXIT.
       
       VAL-DBC-NUM-ICLI SECTION.
       INI-VAL-DBC-NUM-ICLI.
       FIN-VAL-DBC-NUM-ICLI.
           EXIT.
       
       VAL-DBC-VRF-ICLI SECTION.
       INI-VAL-DBC-VRF-ICLI.
           IF DBC-VRF-ICLI IN DBP-FLD NOT > SPACES
              MOVE SPACES TO DBC-VRF-ICLI IN DBP-FLD.
      *VAL-RUT Valida Rut para campo IDC
           MOVE IDC-ZERO-S TO IDC-ZERO.
           MOVE DBC-NUM-ICLI IN DBP-FLD TO IDC-NUM-RUTV.
           MOVE DBC-VRF-ICLI IN DBP-FLD TO IDC-VRF-RUTV.
*% IF PGM_PER
           PERFORM VAL-RUT.
           MOVE IDC-NUM-RUTV TO DBC-NUM-ICLI IN DBP-FLD.
           MOVE IDC-VRF-RUTV TO DBC-VRF-ICLI IN DBP-FLD.
*% END
*% IF NOT PGM_PER
      *<<<< INI_DBC_VRF_ICLI
      *DAD ini  13-MAY-1992
           IF ( WSS-CIC-TICL IN WSS-VARI = 'CL' OR 'EE' OR 'CO' OR
                                           'PV' OR 'CA' ) AND
              DBC-VRF-ICLI IN DBP-FLD NOT > SPACES
               PERFORM ERR-GLS
               GO TO FIN-VAL-DBC-VRF-ICLI.
      *DAD fin  13-MAY-1992
      *>>>>
           PERFORM VAL-RUT.
*% END
      *<<<< DBC_VRF_ICLI
           IF SCR-CMND = WSS-CMND-DBP-MIC AND SCR-INST = SCR-INST-GFL
               PERFORM KEY-DBC-DBP
               MOVE 'DBC-IDC-ICLI' TO FIO-AKEY
               MOVE FIO-GET-KEY    TO FIO-CMND
               PERFORM SGC-FIO-DBC
               IF FIO-STAT-OKS
                   MOVE 'SGC'        TO MSG-COD-SIST
                   MOVE 'DBCIDCYAEX' TO MSG-COD-MENS
                   PERFORM GET-MSG
                   MOVE MSG-GLS-DESC TO FRM-MENS
                   MOVE FRM-SUAR-MAL TO FRM-SUAR
                   GO TO FIN-VAL-DBC-VRF-ICLI.
      *>>>>
       FIN-VAL-DBC-VRF-ICLI.
           EXIT.
       
       VAL-DBC-IND-ICLI SECTION.
       INI-VAL-DBC-IND-ICLI.
           IF DBC-IND-ICLI IN DBP-FLD NOT > SPACES
              MOVE SPACES TO DBC-IND-ICLI IN DBP-FLD.
*%! ESTO ES UNA INCOMPATIBILIDAD A NIVEL DE GENESIS, PUES OBLIGA AL PROGRAMADOR
*%! A ESCRIBIR CODIGO GENERICO DEPENDIENDO DEL PAIS
*% IF NOT PGM_ARG
*% IF PGM_PER
      *<<<< PGM_PER
           IF SCR-CMND = WSS-CMND-DBP-MIC
               MOVE IDC-BLCO-N TO IDC-BLCO.
      *>>>>
*% END
      *VAL-IDC Valida identificador
           MOVE DBC-IND-ICLI IN DBP-FLD TO IDC-IND-RUTV.
           PERFORM VAL-IDC.
           MOVE IDC-IND-RUTV TO DBC-IND-ICLI IN DBP-FLD.
*% END
       FIN-VAL-DBC-IND-ICLI.
           EXIT.
       
       VAL-DBC-GLS-ICLI SECTION.
       INI-VAL-DBC-GLS-ICLI.
*%! ESTO ES UNA INCOMPATIBILIDAD A NIVEL DE GENESIS, PUES OBLIGA AL PROGRAMADOR
*%! A ESCRIBIR CODIGO GENERICO DEPENDIENDO DEL PAIS
*% IF PGM_ARG
           IF DBC-GLS-ICLI IN DBP-FLD NOT > ZEROES
              MOVE ZEROES TO DBC-GLS-ICLI IN DBP-FLD.
      *VAL-IDC Valida identificador
           MOVE DBC-GLS-ICLI IN DBP-FLD TO IDC-IND-RUTV.
           PERFORM VAL-IDC.
           MOVE IDC-IND-RUTV TO DBC-GLS-ICLI IN DBP-FLD.
*% ELSE
           IF DBC-GLS-ICLI IN DBP-FLD NOT > SPACES
              MOVE SPACES TO DBC-GLS-ICLI IN DBP-FLD.
      *VAL-GLS para IDC valida glosa ( extension ) de identificador
           MOVE DBC-GLS-ICLI IN DBP-FLD TO IDC-GLS-RUTV.
           PERFORM VAL-GLS.
           MOVE IDC-GLS-RUTV TO DBC-GLS-ICLI IN DBP-FLD.
*% END
       FIN-VAL-DBC-GLS-ICLI.
           EXIT.
      *>>>>
*% END

       CMB-PRS-EMP SECTION.
       INI-CMB-PRS-EMP.
           PERFORM KEY-DBC-DBP.
      * ISP : LEE POR RUT Y ACTUALIZA POR CIC ==> ERROR VSAM
      *       EL CIC ESTA EN LA PANTALLA
      *     MOVE 'DBC-IDC-ICLI'  TO FIO-AKEY.
           MOVE FIO-GET-KEY-UPD TO FIO-CMND.
           PERFORM SGC-FIO-DBC.
           IF NOT FIO-STAT-OKS
               MOVE 'GNS'    TO MSG-COD-SIST
               MOVE 'REGNEX' TO MSG-COD-MENS
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS
               GO TO FIN-CMB-PRS-EMP.
*% IF NOT PGM_VMS
      *<<<< NOT PGM_VMS
           IF DBC-STP-ITRN IN DBC NOT = SCR-UMOD
               MOVE 'GNS'          TO MSG-COD-SIST
               MOVE 'UPD    SIMUL' TO MSG-COD-MENS
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS
               GO TO FIN-CMB-PRS-EMP.
      *>>>>
*% END
           MOVE DBC-CIC-ICLI IN DBC TO DCP-CIC-ICLI IN DCP.
           MOVE FIO-GET-KEY-UPD TO FIO-CMND.
           PERFORM SGC-FIO-DCP.
           IF NOT FIO-STAT-OKS
               MOVE FIO-MENS TO FRM-MENS
               GO TO FIN-CMB-PRS-EMP.
           PERFORM LLN-REG-DBP.
           MOVE DBC-CIC-ICLI IN DBC TO DCE-CIC-ICLI IN DCE.
           MOVE DBC-STP-ITRN IN DBC TO DCE-STP-ITRN IN DCE.
           PERFORM RET-HDR-DCE.
           MOVE FIO-PUT TO FIO-CMND.
           PERFORM SGC-FIO-DCE.
           IF NOT FIO-STAT-OKS
               MOVE FIO-MENS TO FRM-MENS
               PERFORM BCK-OUT
               GO TO FIN-CMB-PRS-EMP.
           MOVE DBC-CIC-ICLI IN DBC TO DCP-CIC-ICLI IN DCP.
           MOVE FIO-DEL TO FIO-CMND.
           PERFORM SGC-FIO-DCP.
           IF NOT FIO-STAT-OKS
               MOVE FIO-MENS TO FRM-MENS
               PERFORM BCK-OUT
               GO TO FIN-CMB-PRS-EMP.
           PERFORM RET-HDR-DBC.
           MOVE FIO-MOD TO FIO-CMND.
           PERFORM SGC-FIO-DBC.
           IF NOT FIO-STAT-OKS
               MOVE 'SGC'           TO MSG-COD-SIST
               MOVE 'UPD    ERRDBC' TO MSG-COD-MENS
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS
*% IF PGM_PER
               PERFORM BCK-OUT
           ELSE
               MOVE 'SGC'          TO MSG-COD-SIST
               MOVE 'DBC PAE   OK' TO MSG-COD-MENS
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS.
*% ELSE
               PERFORM BCK-OUT.
*% END
       FIN-CMB-PRS-EMP.
           EXIT.
      *>>>>
*% END
*% IF EOF
      *<<<< EOF
*% IF PGM_BCI
       SET-FRM-ICD SECTION.
       INI-SET-FRM-ICD.
           MOVE FRM-CPIM-AEY TO DBC-COD-TICL-ATR IN DBP-FLD.
           PERFORM UNP-MKY-DBP.
           MOVE -1 TO DBC-GLS-APAT-LEN IN DBP-FLD.
           PERFORM BUS-SCR-USER.
           IF DBC-COD-TICL IN DBP-FLD NOT > SPACES
                MOVE 'CA' TO DBC-COD-TICL IN DBP-FLD.

           IF DBC-COD-OFIC IN DBP-FLD NOT > SPACES
                MOVE WSS-COD-OFIC TO DBC-COD-OFIC IN DBP-FLD.

           IF DBC-COD-EJEC IN DBP-FLD NOT > SPACES
                MOVE WSS-COD-EJEC TO DBC-COD-EJEC IN DBP-FLD.

           MOVE 'SGC'                   TO FIO-SIST.
           MOVE 'TCL'                   TO TAB-COD-TTAB.
           MOVE DBC-COD-TICL IN DBP-FLD TO TAB-COD-CTAB IN TAB.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM GNS-FIO-TAB.
           IF FIO-STAT-OKS
           MOVE TAB-CIC-CTAB IN TAB TO WSS-CIC-TICL.
           IF NOT
               ( WSS-CIC-TICL = 'CA' OR 'CL' OR 'EE' OR 'CO' )
                  MOVE 'CA' TO DBC-COD-TICL IN DBP-FLD.
       FIN-SET-FRM-ICD.
           EXIT.

      *DAD ini  13-MAY-1992
       BUS-SCR-USER SECTION.
       INI-BUS-SCR-USER.
      *<<<< NOT PGM_VMS
           COPY USPC143.
           MOVE USP-COD-OFICINA TO WSS-COD-OFIC IN WSS-VARI
                                   OFI-COD-OFIC IN OFI.
           PERFORM BUS-OFI.
           MOVE OFI-COD-JFOF IN OFI TO WSS-COD-EJEC IN WSS-VARI.
      *>>>>
       FIN-BUS-SCR-USER.
           EXIT.
      *DAD fin  13-MAY-1992

*% END
       LLN-REG-DBP SECTION.
       INI-LLN-REG-DBP.
           MOVE SPACES TO DCE.
           MOVE ZEROES TO DCE-STP-ITRN IN DCE.
           MOVE ZEROES TO DCE-FEC-FCTT IN DCE.
           MOVE ZEROES TO DCE-FEC-FUME IN DCE.
           MOVE ZEROES TO DCE-FEC-FCAD IN DCE. 
           MOVE 'E'    TO DBC-IND-TICL IN DBC.
           PERFORM GET-FHOY.
           MOVE HOY-DHOY IN HOY-VARI TO DBC-NUM-DTRN IN DBC.
           MOVE HOY-MHOY IN HOY-VARI TO DBC-NUM-MTRN IN DBC.
           MOVE HOY-AHOY IN HOY-VARI TO DBC-NUM-ATRN IN DBC.
           MOVE HOY-SHOY IN HOY-VARI TO DBC-NUM-STRN IN DBC.
           MOVE HOY-HHOY IN HOY-VARI TO DBC-HRA-HRTR IN DBC.
           MOVE DBC-GLS-NOMC IN DBC TO CPT-STRN.
           PERFORM CPT-BLKS.
           MOVE CPT-STRN TO DBC-GLS-NOMC IN DBC.
       FIN-LLN-REG-DBP.
           EXIT.

       BUS-CLI-PER SECTION.
       INI-BUS-CLI-PER.
*%! RVM: 27-03-92 VSI NO MANEJA PFS DEPENDIENTES DE DTC
*% IF PGM_DTC
           MOVE 'NOM' TO SCR-KEY-IDBC.
*% END
           MOVE FIO-GET-NLS TO FIO-CMND.
       LUP-BUS-CLI-PER.
           MOVE 'DBC-GLS-NOMC' TO FIO-AKEY.
           PERFORM SGC-FIO-DBC.
           IF FIO-STAT-OKS AND DBC-IND-TICL IN DBC NOT = 'P'
               MOVE FIO-GET-NXT TO FIO-CMND
               GO TO LUP-BUS-CLI-PER.
       FIN-BUS-CLI-PER.
           EXIT.

       BCK-OUT SECTION.
       INI-BCK-OUT.
           MOVE FIO-BCK-OUT TO FIO-CMND.
           PERFORM SGC-FIO-DBC.
           IF FIO-STAT-OKS
      *        Para informar que el backout se realizo con exito
               MOVE '49' TO FIO-STAT.
       FIN-BCK-OUT.
           EXIT.

      *AVM 11-JUN-1990 19:00 Hrs.
       OBT-GLS-NOMB SECTION.
       INI-OBT-GLS-NOMB.
           MOVE ZEROES TO WSS-IND-NOM1 , WSS-IND-NOM2.
           MOVE SPACES TO WSS-GLS-NOM2.
       LOO-OBT-GLS-NOMB.
           ADD 1 TO WSS-IND-NOM1.
           IF WSS-IND-NOM1 > 25 OR
                  WSS-VEC-NOM1(WSS-IND-NOM1) NOT > SPACES
               GO TO FIN-OBT-GLS-NOMB.
           ADD 1 TO WSS-IND-NOM2.
           MOVE WSS-VEC-NOM1(WSS-IND-NOM1) TO
                WSS-VEC-NOM2(WSS-IND-NOM2).
           GO TO LOO-OBT-GLS-NOMB.
       FIN-OBT-GLS-NOMB.
           EXIT.
      *>>>>
*% END
*% IF EOF
      *<<<< EOF
*%! RVM: 27-03-92 VSI NO MANEJA PFS DEPENDIENTES DE DTC
*% IF PGM_DTC
       LEE-NXT-PRV SECTION.
       INI-LEE-NXT-PRV.
           IF SCR-DBC-REQA > SPACES
               PERFORM LEE-NXT-PRV-DBC
           ELSE
               PERFORM LEE-NXT-PRV-NOM.
       FIN-LEE-NXT-PRV.
           EXIT.

       LEE-NXT-PRV-DBC SECTION.
       INI-LEE-NXT-PRV-DBC.
           MOVE SCR-DBC-REQA TO ADR-DBC-REQA.
           MOVE FIO-KDEF-S TO FIO-KDEF.
           IF FRM-FFLD = FRM-FFLD-PF7
               MOVE FIO-GET-PRV TO FIO-CMND
           ELSE
               MOVE FIO-GET-NXT TO FIO-CMND.
       LUP-LEE-NXT-PRV-DBC.
           IF SCR-KEY-IDBC = 'NOM'
               MOVE 'DBC-GLS-NOMC' TO FIO-AKEY
           ELSE
               MOVE 'DBC-IDC-ICLI' TO FIO-AKEY.
           PERFORM SGC-FIO-DBC.
           MOVE FIO-STAT TO PGM-STAT-DBC.
           IF FIO-STAT-OKS AND DBC-IND-TICL NOT = 'P'
               IF FRM-FFLD = FRM-FFLD-PF7
                   MOVE FIO-GET-PRV TO FIO-CMND
                   GO TO LUP-LEE-NXT-PRV-DBC
               ELSE
                   MOVE FIO-GET-NXT TO FIO-CMND
                   GO TO LUP-LEE-NXT-PRV-DBC.
           IF FIO-STAT-OKS
               MOVE ADR-DBC-REQA TO SCR-DBC-REQA.
       FIN-LEE-NXT-PRV-DBC.
           EXIT.

       LEE-NXT-PRV-NOM SECTION.
       INI-LEE-NXT-PRV-NOM.
           MOVE 'NOM' TO SCR-KEY-IDBC.
           IF DBC-GLS-NOMC IN DBC > SPACES
               MOVE FIO-GET-KEY    TO FIO-CMND
               MOVE 'DBC-GLS-NOMC' TO FIO-AKEY
               PERFORM SGC-FIO-DBC
               IF FIO-STAT-OKS
                   IF FRM-FFLD = FRM-FFLD-PF7
                       MOVE FIO-GET-PRV TO FIO-CMND
                   ELSE
                       MOVE FIO-GET-NXT TO FIO-CMND
               ELSE
                   IF FRM-FFLD = FRM-FFLD-PF7
                       MOVE FIO-GET-LEQ TO FIO-CMND
                   ELSE
                       MOVE FIO-GET-NLS TO FIO-CMND
           ELSE
               IF FRM-FFLD = FRM-FFLD-PF7
                   MOVE FIO-GET-LEQ TO FIO-CMND
               ELSE
                   MOVE FIO-GET-NLS TO FIO-CMND.
       LUP-LEE-NXT-PRV-NOM.
           MOVE 'DBC-GLS-NOMC'  TO FIO-AKEY.
           PERFORM SGC-FIO-DBC.
           MOVE FIO-STAT TO PGM-STAT-DBC.
           IF FIO-STAT-OKS AND DBC-IND-TICL NOT = 'P'
               IF FRM-FFLD = FRM-FFLD-PF7
                   MOVE FIO-GET-PRV TO FIO-CMND
                   GO TO LUP-LEE-NXT-PRV-NOM
               ELSE
                   MOVE FIO-GET-NXT TO FIO-CMND
                   GO TO LUP-LEE-NXT-PRV-NOM.
           IF FIO-STAT-OKS
               MOVE ADR-DBC-REQA TO SCR-DBC-REQA.
       FIN-LEE-NXT-PRV-NOM.
           EXIT.
*% END
*% IF PGM_CHI OR PGM_ARG

      *ALD/21-JUL-1988
       COPY SGCBFRBS.
*% END
       COPY SGCBFREC.
       COPY SGCBFDCP.
       COPY SGCBFDCE.
       COPY SGCBFRCD.
       COPY TABBVUSR.
      *
*% IF PGM_BCI
      *<<<<
      *AVM/12-JUN-1990 18:00 Hrs.
       COPY SBTBFMNP.
      *
      *>>>>
*% END
       COPY GNSBGCIC.
       COPY GNSBFCIC.
       COPY GNSBGCPT.
       COPY GNSBGPPU.
*% IF NOT PGM_ARG
       COPY GNSBEGLS.
*% END
       COPY SGCBGPPU.
       COPY SGCBGRCU.
       COPY SGCBGDOM.
*%! IF PGM_PER
       COPY TABBBLOC.
       COPY TABBVLOC.
*%! END
      *>>>>
*% END
