*%! Codigo adicional
*% NO_TIENE_TIME_STAMP = TRUE
*% NO_HDR_CST = FALSE
*% PGM_PTC = TRUE
*% GEN_MFC = TRUE
*% IF PGM_PQ
*% CLRMFC = "SGCZQCMT"
*% ELSE
*% CLRMFC = "SGCZUCMT"
*% END
*% GNSTCA = 3502
*% IF WSS_DTC
      *<<<< WSS_DTC
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-DBC-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-OFI-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-USR-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-OPE-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-RCE-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-CIC-REQA==.
      *>>>>
*% END
*% IF WSS
      *<<<< WSS

       COPY SGCBRDBC.
       COPY TABBROFI.
       COPY TABBRUSR.
       COPY GNSBRRCE.
       COPY GNSBRCIC.
       COPY GNSWGCIC.
       COPY GNSWGSTR.
       COPY GNSWGCPT.
       01  WSS-VARI.
           03  WSS-GLS-IENT.
               05  WSS-CIC-ICLI.
                   07  WSS-CAI-ICLI                 PIC X(04).
                   07  WSS-IIC-ICLI                 PIC X(08).
               05  WSS-FIL-IENT                     PIC X(18).

           03  WSS-GLS-IENT-RED REDEFINES WSS-GLS-IENT.
               05  WSS-CHR-IENT       OCCURS 30     PIC X(01).
           03  WSS-NENT                             PIC 9(02).
           03  WSS-LENT               VALUE  30     PIC 9(02).
      *
           03  WSS-NUM-UBIC                         PIC 9(01).
           03  WSS-IMAX               VALUE   6     PIC 9(02).
      *
           03  WSS-YA-BUSQUE-GLOSAS   VALUE 'S'     PIC X(01).
           03  WSS-COD-CTAB.
               05  WSS-COD-TENT                     PIC X(03).
               05  WSS-COD-ENTI                     PIC X(04).
               05  WSS-COD-CORR                     PIC X(02).
               05  FILLER                           PIC X(03).
           03  WSS-GLS-NORD                         PIC X(02).
           03  WSS-NUM-NORD REDEFINES WSS-GLS-NORD  PIC 9(02).
           03  WSS-STRN.
               05  WSS-CHR-STRN       OCCURS 12     PIC X(01).
           03  WSS-CIC-STRN REDEFINES WSS-STRN.
               05  WSS-CAI-STRN                     PIC X(04).
               05  WSS-IIC-STRN                     PIC X(08).
           03  WSS-FEC-STRN REDEFINES WSS-STRN.
               05  WSS-NUM-SSTR                     PIC X(02).
               05  WSS-NUM-ASTR                     PIC X(02).
               05  WSS-NUM-MSTR                     PIC X(02).
               05  WSS-NUM-DSTR                     PIC X(02).
               05  FILLER                           PIC X(04).
           03  WSS-NM3-STRN REDEFINES WSS-STRN.
               05  WSS-NUM-NUM3                     PIC 9(03).
               05  FILLER                           PIC X(09).
           03  WSS-NKEY               VALUE 5       PIC 9(02).
           03  WSS-LKEY                             PIC 9(02).
           03  WSS-NORD                             PIC 9(02).
           03  WSS-ICOR                     VALUE 0 PIC 9(01).
               88 WSS-NO-ASIGNE-CORRELATIVO VALUE 0.
               88 WSS-ASIGNE-CORRELATIVO    VALUE 1.
           03  WSS-IDX1                     VALUE 0 PIC 9(02).
           03  WSS-IDX2                     VALUE 0 PIC 9(02).
           03  WSS-NRCM                     VALUE 4 PIC 9(02).
           03  WSS-IFLD                             PIC 9(02).
           03  WSS-CIC-IENT                         PIC X(12).


      *>>>>
*% END
*% TCA = 2475
*%! RVM: 01-04-92 VSI NO MANEJA PFS DEPENDIENTES DE DTC
*% IF PGM_DTC
*% FRM = "CMT"
*% RA1 = "RCE"
*% RA2 = "CMT"
*% RA3 = "DBC"
*% NRA = 3
*% INCLUDE 'PFSALLALL'
*% END
*% IF FIN_SCR_VARI
      *<<<< FIN_SCR_VARI
*% IF PGM_DOS OR PGM_MVS
           02 SCR-IINS                           PIC X(01).
           02 SCR-IRCE                           PIC X(01).
              88 SCR-EXISTE-RCE        VALUE 'S'.
              88 SCR-NO-EXISTE-RCE     VALUE 'N'.
           02 WSS-BUS-AUTC             VALUE 'N' PIC X(01).
*% END
*% IF PGM_VMS
           03 SCR-IINS                           PIC X(01).
           03 SCR-IRCE                           PIC X(01).
              88 SCR-EXISTE-RCE        VALUE 'S'.
              88 SCR-NO-EXISTE-RCE     VALUE 'N'.
           03 WSS-BUS-AUTC             VALUE 'N' PIC X(01).
*% END
      *>>>>
*% END
*% IF INI_FIO AND PGM_VMS
      *<<<< INI_FIO AND PGM_VMS

           MOVE FIO-ACCS-UPD TO FIO-ACCS.
           MOVE FIO-ACC      TO FIO-CMND.
           MOVE 'GNS'        TO FIO-SIST.
           PERFORM GNS-FIO-RCE.
           MOVE FIO-UPD TO FIO-CMND.
           PERFORM GNS-FIO-RCE.

           MOVE FIO-ACCS-UPD TO FIO-ACCS.
           MOVE FIO-ACC      TO FIO-CMND.
           MOVE 'GNS'        TO FIO-SIST.
           PERFORM GNS-FIO-CIC.
           MOVE FIO-UPD TO FIO-CMND.
           PERFORM GNS-FIO-CIC.

           MOVE FIO-ACCS-UPD TO FIO-ACCS.
           MOVE FIO-ACC      TO FIO-CMND.
           MOVE 'TAB'        TO FIO-SIST.
           PERFORM TAB-FIO-USR.
           MOVE FIO-INP TO FIO-CMND.
           PERFORM TAB-FIO-USR.

           MOVE FIO-ACCS-UPD TO FIO-ACCS.
           MOVE FIO-ACC      TO FIO-CMND.
           MOVE 'TAB'        TO FIO-SIST.
           PERFORM GNS-FIO-TAB.
           MOVE FIO-INP TO FIO-CMND.
           PERFORM GNS-FIO-TAB.

           MOVE FIO-ACCS-UPD TO FIO-ACCS.
           MOVE FIO-ACC      TO FIO-CMND.
           MOVE 'TAB'        TO FIO-SIST.
           PERFORM TAB-FIO-OFI.
           MOVE FIO-INP TO FIO-CMND.
           PERFORM TAB-FIO-OFI.

           MOVE FIO-ACCS-UPD TO FIO-ACCS.
           MOVE FIO-ACC      TO FIO-CMND.
           MOVE 'SGC'        TO FIO-SIST.
           PERFORM SGC-FIO-DBC.
           MOVE FIO-INP TO FIO-CMND.
           PERFORM SGC-FIO-DBC.

      *>>>>
*% END
*% IF INI_SCR_COM
      *<<<< INI_SCR_COM
*% IF PGM_DOS OR PGM_MVS
      *     PERFORM GNS-ERR-QUE.                                        
           MOVE EIBTRMID TO QUE-TERM.
           MOVE 'KEY' TO QUE-TYPE.
           MOVE QUE-DEL TO QUE-CMND.
           PERFORM GNS-PRO-QUE.
*% END
      *>>>>
*% END
*% IF SCR_COM
      *<<<< SCR_COM
*% IF PGM_DOS OR PGM_MVS
           PERFORM ERR-QUE.
           MOVE EIBTRMID TO QUE-TERM.
           MOVE 'PF2' TO QUE-TYPE.
           MOVE 1 TO QUE-NITM.
           MOVE QUE-GET TO QUE-CMND.
           PERFORM GNS-PRO-QUE.
           IF QUE-STAT = QUE-STAT-OKS
                IF QUE-IKEY = 'MAP'
                    MOVE QUE-DATA TO FRM-DFLD
                    MOVE 'PF2' TO QUE-TYPE
                    MOVE 2 TO QUE-NITM
                    MOVE QUE-GET TO QUE-CMND
                    PERFORM GNS-PRO-QUE
                    IF QUE-STAT = QUE-STAT-OKS
                        IF QUE-IKEY = 'CMA'
                        MOVE QUE-DATA TO SCR-VARI
                        MOVE 'PF2' TO QUE-TYPE
                        MOVE QUE-DEL TO QUE-CMND
                        PERFORM GNS-PRO-QUE

                        MOVE SCR-NMAP TO FRM-NAME
                        MOVE SCR-NLIB TO FRM-NLIB
                        MOVE FRM-PUT-ALL TO FRM-CMND
                        PERFORM GNS-PRO-FRM
                        PERFORM SCR-EXIT.
*% END
      *>>>>
*% END
*% IF PFS_SCR_MOD AND PGM_PQ
      *<<<< PFS_SCR_MOD
           IF ( FRM-FFLD = FRM-FFLD-PF5 OR FRM-FFLD-PF6 OR              
                           FRM-FFLD-PF7 OR FRM-FFLD-PF8 ) AND           
              SCR-STAT = SCR-STAT-CON                                   
               PERFORM VAL-NUM-KEY-CMT                                  
               PERFORM VAL-NUM-FLD-CMT.                                 
           IF FRM-FFLD = FRM-FFLD-PF5 OR FRM-FFLD-PF6 OR                
                         FRM-FFLD-PF7 OR FRM-FFLD-PF8                   
               PERFORM RST-STAT                                         
               PERFORM FND-SCR-KEY THRU FIN-SCR-KEY                     
               IF SCR-STAT NOT = SCR-STAT-ABT                           
                   PERFORM SCR-TRL                                      
               ELSE                                                     
                   PERFORM GNS-CLR-RQA                                  
                   PERFORM DESSCRTRL                                    
                   GO TO FIN-SCR-MOD.                                   
           PERFORM GNS-CLR-RQA.                                         
      *>>>>
*% END
*% IF INI_FIO
      *<<<< INI_FIO
           IF SCR-SISG NOT > SPACES
               MOVE SCR-SIST TO SCR-SISG.
      *>>>>
*% END
*% IF FIN_HBL_KEY OR FIN_HBL_IKY
      *<<<< FIN_HBL_KEY OR FIN_HBL_IKY
*% IF PGM_DOS OR PGM_MVS
           PERFORM PRO-KEY-CMT.
           PERFORM BUS-KEY-QUE.
           PERFORM BUS-FRM-NORD.
           IF QUE-STAT = QUE-STAT-OKS
      *ISP   30-AUG-1990 DEBE SER REEMPLAZADO POR VARIABLE
      *     INHIBE MOVE FRM-CPSF TO FRM-CPIM-AEY
                MOVE '1' TO FRM-CPIM-AEY
                MOVE FRM-CPIM-AEY TO RCE-COD-ENTI-ATR IN CMT-FLD
                MOVE +3 TO RCE-COD-ENTI-LEN IN CMT-FLD
                MOVE -1 TO DBC-GLS-NOMC-LEN IN CMT-FLD
                PERFORM VAL-RCE-COD-ENTI
                PERFORM EDT-KEY-CMT
                MOVE PGM-NO-LIMPIAR-NADA TO PGM-ICLR
           ELSE
                MOVE FRM-CPIM-UBY TO RCE-COD-ENTI-ATR IN CMT-FLD
                MOVE 'N' TO SCR-IINS.
*% END
      *>>>>
*% END
*% IF FIN_HBL_FLD
      *<<<< FIN_HBL_FLD
      *LRH ini 17-JUN-1994
           IF SCR-CMND = 'COP'
      *        PERFORM UNP-IKY-CMT
               MOVE FRM-CPIM-AEY TO RCE-COD-ENTI-ATR IN CMT-FLD
      * desprotege llaves segun dato adicional asociado a RCE-COD-ENTI
               PERFORM BUS-FRM-NORD.
      *LRH fin 17-JUN-1994
      *>>>>
*% END
*% IF ERR_SCR_GKEY OR ERR_SCR_GIKY
      *<<<< ERR_SCR_GKEY OR ERR_SCR_GIKY
*% IF PGM_DOS OR PGM_MVS
           IF RCE-COD-ENTI-LEN IN CMT-FLD = -1 AND
              SCR-IINS = WSS-YA-BUSQUE-GLOSAS
               MOVE  0 TO RCE-COD-ENTI-LEN IN CMT-FLD
               IF SCR-CCPP = 'ING'
                   IF FRM-GLS-TIDC IN CMT-FLD > SPACES
                       MOVE -1 TO DBC-NUM-ICLI-LEN IN CMT-FLD
                   ELSE
                   IF FRM-GLS-TOPE IN CMT-FLD > SPACES
                       MOVE -1 TO FRM-CAI-IOPE-LEN IN CMT-FLD
                   ELSE
                   IF FRM-GLS-TFEC IN CMT-FLD > SPACES
                       MOVE -1 TO FRM-FEC-FENT-LEN IN CMT-FLD
                   ELSE
                   IF FRM-GLS-TNRO IN CMT-FLD > SPACES
                       MOVE -1 TO FRM-NUM-IENT-LEN IN CMT-FLD
                   ELSE
                   IF FRM-GLS-TCOD IN CMT-FLD > SPACES
                       MOVE -1 TO FRM-COD-IENT-LEN IN CMT-FLD
                   ELSE
                       MOVE -1 TO CMT-FEC-FCMT-LEN IN CMT-FLD
               ELSE
                   IF FRM-GLS-TNOM IN CMT-FLD > SPACES
                       MOVE -1 TO DBC-GLS-NOMC-LEN IN CMT-FLD
                   ELSE
                   IF FRM-GLS-TIDC IN CMT-FLD > SPACES
                       MOVE -1 TO DBC-NUM-ICLI-LEN IN CMT-FLD
                   ELSE
                   IF FRM-GLS-TOPE IN CMT-FLD > SPACES
                       MOVE -1 TO FRM-CAI-IOPE-LEN IN CMT-FLD
                   ELSE
                   IF FRM-GLS-TFEC IN CMT-FLD > SPACES
                       MOVE -1 TO FRM-FEC-FENT-LEN IN CMT-FLD
                   ELSE
                   IF FRM-GLS-TNRO IN CMT-FLD > SPACES
                       MOVE -1 TO FRM-NUM-IENT-LEN IN CMT-FLD
                   ELSE
                   IF FRM-GLS-TCOD IN CMT-FLD > SPACES
                       MOVE -1 TO FRM-COD-IENT-LEN IN CMT-FLD
                   ELSE
                       MOVE -1 TO CMT-FEC-FCMT-LEN IN CMT-FLD.
*% END
      *>>>>
*% END
*% IF INI_FND_KEY
      *<<<< INI_FND_KEY
           PERFORM KEY-ALL-CMT.
*%! RVM: 01-04-92 VSI NO MANEJA PFS DEPENDIENTES DE DTC
*% IF PGM_DTC
           IF FRM-FFLD = FRM-FFLD-PF5 OR FRM-FFLD-PF6
               PERFORM LEE-NXT-PRV-F56
               IF MSG-COD-MENS = 'CMTSI'
      *JSS         PERFORM SCR-CLRA-CMT
                   PERFORM CLR-FLD-CMT
                   GO TO CON-FND-KEY
               ELSE
                   MOVE SPACES TO PGM-STAT
                   IF FRM-FFLD = FRM-FFLD-PF5
                       MOVE 'GNS' TO MSG-COD-SIST
                       MOVE 'CMT    NOPRV' TO MSG-COD-MENS
                       PERFORM GET-MSG
                       MOVE MSG-GLS-DESC TO FRM-MENS
                       MOVE '00' TO FIO-STAT
                       MOVE SCR-STAT-CON TO SCR-STAT
                       GO TO FIN-FND-KEY
                           ELSE
                       MOVE 'GNS' TO MSG-COD-SIST
                       MOVE 'CMT    NONXT' TO MSG-COD-MENS
                       PERFORM GET-MSG
                       MOVE MSG-GLS-DESC TO FRM-MENS
                       MOVE '00' TO FIO-STAT
                       MOVE SCR-STAT-CON TO SCR-STAT
                       GO TO FIN-FND-KEY.

           IF FRM-FFLD = FRM-FFLD-PF7 OR FRM-FFLD-PF8
               PERFORM LEE-NXT-PRV-F78
               IF FIO-STAT-OKS
                   PERFORM SCR-CLRA-CMT
                   PERFORM PUT-KEY-RCE
                   PERFORM BUS-CMT
                   IF NOT FIO-STAT-OKS
                       MOVE 'GNS'        TO MSG-COD-SIST
                       MOVE 'CMT    NEX' TO MSG-COD-MENS
                       PERFORM GET-MSG
                       MOVE MSG-GLS-DESC TO FRM-MENS
                       MOVE '00' TO FIO-STAT
                       MOVE SCR-STAT-CON TO SCR-STAT
                       GO TO FIN-FND-KEY
                   ELSE
                       GO TO CON-FND-KEY
               ELSE
               IF MSG-COD-MENS NOT > SPACES
                   MOVE SPACES TO PGM-STAT
                   IF FRM-FFLD = FRM-FFLD-PF7
                       MOVE 'GNS' TO MSG-COD-SIST
                       MOVE 'RCE    NOPRV' TO MSG-COD-MENS
                       PERFORM GET-MSG
                       MOVE MSG-GLS-DESC TO FRM-MENS
                       MOVE '00' TO FIO-STAT
                       MOVE SCR-STAT-CON TO SCR-STAT
                       GO TO FIN-FND-KEY
                   ELSE
                       MOVE 'SGC' TO MSG-COD-SIST
                       MOVE 'RCE    NONXT' TO MSG-COD-MENS
                       PERFORM GET-MSG
                       MOVE MSG-GLS-DESC TO FRM-MENS
                       MOVE '00' TO FIO-STAT
                       MOVE SCR-STAT-CON TO SCR-STAT
                       GO TO FIN-FND-KEY
               ELSE
                   MOVE 'GNS' TO MSG-COD-SIST
                   PERFORM GET-MSG
                   MOVE MSG-GLS-DESC TO FRM-MENS
                   MOVE '00' TO FIO-STAT
                   MOVE SCR-STAT-CON TO SCR-STAT
                   GO TO FIN-FND-KEY.
*% END

           IF DBC-NUM-ICLI IN CMT-FLD NOT = ZEROES
      *IDC-CLI Busca Cliente por medio de IdC
               MOVE DBC-NUM-ICLI IN CMT-FLD TO DBC-NUM-ICLI IN DBC
               MOVE DBC-IND-ICLI IN CMT-FLD TO DBC-IND-ICLI IN DBC
               MOVE DBC-GLS-ICLI IN CMT-FLD TO DBC-GLS-ICLI IN DBC
               MOVE 'DBC-IDC-ICLI' TO FIO-AKEY
               MOVE FIO-GET-KEY    TO FIO-CMND
               PERFORM GET-CLI
               IF MSG-COD-MENS > SPACES
                   MOVE SPACES TO DBC-CAI-ICLI IN CMT-FLD
                   MOVE SPACES TO DBC-IIC-ICLI IN CMT-FLD
                   MOVE SPACES TO DBC-GLS-NOMC IN CMT-FLD
                   MOVE FIO-STAT-NEX TO FIO-STAT
                   MOVE MSG-GLS-DESC TO FRM-MENS
                   GO TO FIN-FND-KEY
               ELSE
                   MOVE DBC-CAI-ICLI IN DBC TO DBC-CAI-ICLI IN CMT-FLD
                   MOVE DBC-IIC-ICLI IN DBC TO DBC-IIC-ICLI IN CMT-FLD
                   MOVE DBC-GLS-NOMC IN DBC TO CPT-STRN
                   PERFORM CPT-BLKS
                   MOVE CPT-STRN TO DBC-GLS-NOMC IN CMT-FLD
*%! RVM: 01-04-92 VSI NO MANEJA PFS DEPENDIENTES DE DTC
*% IF PGM_DTC
                   MOVE ADR-DBC-REQA TO SCR-DBC-REQA
*% END
                   MOVE '00' TO PGM-STAT-DBC
           ELSE
           IF DBC-GLS-NOMC IN CMT-FLD > SPACES
      *NOM-CLI Busca Cliente por medio del Nombre

               MOVE DBC-GLS-NOMC IN CMT-FLD TO STR-GLS-GSTR
               PERFORM STR-UNS
               MOVE STR-GLS-FUNS IN STR-VARI(1) TO DBC-GLS-APAT IN DBC
               MOVE STR-GLS-FUNS IN STR-VARI(2) TO DBC-GLS-AMAT IN DBC
               MOVE STR-GLS-FUNS IN STR-VARI(3) TO DBC-GLS-NOMB IN DBC

               MOVE 'DBC-GLS-NOMC' TO FIO-AKEY
               MOVE FIO-GET-NLS    TO FIO-CMND
               PERFORM GET-CLI
               IF MSG-COD-MENS > SPACES
                   MOVE ZEROES TO DBC-NUM-ICLI IN CMT-FLD
                   MOVE SPACES TO DBC-VRF-ICLI IN CMT-FLD
                   MOVE SPACES TO DBC-IND-ICLI IN CMT-FLD
                   MOVE SPACES TO DBC-GLS-ICLI IN CMT-FLD
                   MOVE SPACES TO DBC-CAI-ICLI IN CMT-FLD
                   MOVE SPACES TO DBC-IIC-ICLI IN CMT-FLD
                   MOVE FIO-STAT-NEX TO FIO-STAT
                   MOVE MSG-GLS-DESC TO FRM-MENS
                   GO TO FIN-FND-KEY
               ELSE
                   MOVE DBC-GLS-NOMC IN DBC TO CPT-STRN
                   PERFORM CPT-BLKS
                   MOVE CPT-STRN TO DBC-GLS-NOMC IN CMT-FLD
                   MOVE DBC-NUM-ICLI IN DBC TO DBC-NUM-ICLI IN CMT-FLD
                   MOVE DBC-VRF-ICLI IN DBC TO DBC-VRF-ICLI IN CMT-FLD
                   MOVE DBC-IND-ICLI IN DBC TO DBC-IND-ICLI IN CMT-FLD
                   MOVE DBC-GLS-ICLI IN DBC TO DBC-GLS-ICLI IN CMT-FLD
                   MOVE DBC-CAI-ICLI IN DBC TO DBC-CAI-ICLI IN CMT-FLD
                   MOVE DBC-IIC-ICLI IN DBC TO DBC-IIC-ICLI IN CMT-FLD
*%! RVM: 01-04-92 VSI NO MANEJA PFS DEPENDIENTES DE DTC
*% IF PGM_DTC
                   MOVE ADR-DBC-REQA TO SCR-DBC-REQA
*% END
                   MOVE '00' TO PGM-STAT-DBC.

           PERFORM KEY-RCE-CMT.
           PERFORM STR-KEYS.
           MOVE WSS-GLS-IENT TO RCE-GLS-IENT IN RCE.
           MOVE 'RCE-KEY-IENT' TO FIO-AKEY.
           MOVE FIO-GET-KEY    TO FIO-CMND.
           PERFORM GNS-FIO-RCE.
           MOVE FIO-STAT TO PGM-STAT-RCE.
           IF FIO-STAT-OKS
               MOVE 'S' TO SCR-IRCE
               MOVE RCE-CIC-IENT IN RCE TO CMT-CIC-IENT IN CMT-FLD
*%! RVM: 01-04-92 VSI NO MANEJA PFS DEPENDIENTES DE DTC
*% IF PGM_DTC
               MOVE ADR-RCE-REQA TO SCR-RCE-REQA
*% END
           ELSE
      * Se asume que si no esta RCE no puede estar el registro CMT
               MOVE 'N' TO SCR-IRCE
               IF SCR-CCPP = 'ACT' AND
                  ( CMT-NUM-GCMT IN CMT-FLD > ZEROES OR
                    CMT-FEC-FCMT IN CMT-FLD NOT > ZEROES )
                   MOVE FIO-STAT-NEX TO FIO-STAT
                   GO TO FIN-FND-KEY
               ELSE
                   MOVE 1   TO CMT-NUM-GCMT IN CMT-FLD
                   MOVE 1   TO CMT-NUM-CCMT IN CMT-FLD
                   GO TO FIN-FND-KEY.

           IF SCR-CCPP = 'ING'
               PERFORM BUS-COR-CMT
               IF FIO-STAT = FIO-STAT-NEX
                   GO TO FIN-FND-KEY
               ELSE
                   NEXT SENTENCE
           ELSE
           IF CMT-NUM-GCMT IN CMT-FLD NOT > ZEROES
               PERFORM BUS-COR-CMT
               IF FIO-STAT = FIO-STAT-NEX
                   GO TO FIN-FND-KEY
               ELSE
                   NEXT SENTENCE.
      *>>>>
*% END
*% IF FIN_FND_KEY
      *<<<< FIN_FND_KEY
       CON-FND-KEY.
*%! RVM: 01-04-92 VSI NO MANEJA PFS DEPENDIENTES DE DTC
*% IF PGM_DTC
           IF FIO-STAT-OKS
               MOVE ADR-CMT-REQA TO SCR-CMT-REQA.
*% END
      *>>>>
*% END
*% IF PUT_SCR
      *<<<<< PUT_SCR
           IF PGM-STAT = SPACES
               GO TO FIN-PUT-SCR.
           PERFORM PUT-ALL-CMT.
           PERFORM PUT-SCR-CMT.
           GO TO FIN-PUT-SCR.
      *>>>>
*% END
*% IF CMN_ING
      *<<<< CMN_ING
           IF SCR-NO-EXISTE-RCE
      *GET-CIC Obtener CIC
      *PVG INI 12-DIC-2013
      *        MOVE SPACES TO CIC-CAI-ICIC IN CIC                       
               MOVE 'IENT' TO CIC-CAI-ICIC IN CIC                       
      *PVG FIN 12-DIC-2013
               MOVE SPACES TO CIC-CAI-ICIC IN CIC
               MOVE CIC-GET TO CIC-CMND
               PERFORM PRO-CIC
               IF CIC-STAT NOT = CIC-STAT-OKS
                   MOVE CIC-MENS TO FRM-MENS
                   GO TO FIN-CMN-ING
               ELSE
                   MOVE CIC-CIC-ICIC IN CIC TO CMT-CIC-IENT IN CMT-FLD
                   MOVE CIC-CIC-ICIC IN CIC TO CMT-CIC-IENT IN CMT
                   MOVE CIC-CIC-ICIC IN CIC TO RCE-CIC-IENT IN RCE

                   PERFORM STR-KEYS
                   MOVE WSS-GLS-IENT TO RCE-GLS-IENT IN RCE

                   MOVE FIO-PUT TO FIO-CMND
                   PERFORM GNS-FIO-RCE
                   IF NOT FIO-STAT-OKS
                       MOVE FIO-MENS TO FRM-MENS
                       GO TO FIN-CMN-ING.
           PERFORM GET-FHOY.
           MOVE HOY-STP-ITRN IN HOY-VARI TO CMT-STP-ITRN IN CMT.
      *>>>>
*% END
*% IF FIN_CMN_ING
      *<<<< FIN_CMN_ING
           IF NOT FIO-STAT-OKS
               MOVE FIO-MENS TO FRM-MENS
               IF SCR-NO-EXISTE-RCE
      *JSS Corresponderia Hacer Back-out para deshacer el PUT en el archivo RCE
      *    ( pero que pasa con el archivo CIC ? )
      *            MOVE FIO-BCK-OUT TO FIO-CMND
      *            PERFORM GNS-FIO-RCE
                   GO TO FIN-CMN-ING
               ELSE
                   GO TO FIN-CMN-ING.
           PERFORM ING-CMT.
      *>>>>
*% END
*% IF ABT_CMN_ACC
      *<<<< ABT_CMN_ACC
      *LRH ini 17-JUN-1994
               IF SCR-CMND = 'COP'
                   MOVE 'GNS'          TO MSG-COD-SIST
                   MOVE 'REG    NOCOP' TO MSG-COD-MENS
                   PERFORM GET-MSG
                   MOVE MSG-GLS-DESC   TO FRM-MENS
                   GO TO FIN-CMN-ACC
               ELSE
      *LRH fin 17-JUN-1994
      *>>>>
*% END
*% IF INI_CMN_ACC
      *<<<< INI_CMN_ACC
      *LRH ini 17-JUN-1994
           IF SCR-CMND = 'COP'
               PERFORM CMN-ING
               IF FIO-STAT-OKS
                   MOVE 'GNS'          TO MSG-COD-SIST
                   MOVE 'REG    SICOP' TO MSG-COD-MENS
                   PERFORM GET-MSG
                   MOVE MSG-GLS-DESC   TO FRM-MENS
                   GO TO FIN-CMN-ACC
               ELSE
                   MOVE 'GNS'          TO MSG-COD-SIST
                   MOVE 'REG    ERCOP' TO MSG-COD-MENS
                   PERFORM GET-MSG
                   MOVE MSG-GLS-DESC   TO FRM-MENS
                   GO TO FIN-CMN-ACC.
      *LRH fin 17-JUN-1994
      *>>>>
*% END
*% IF CMN_MOD
      *<<<< CMN_MOD
           PERFORM GET-FHOY.
           MOVE HOY-STP-ITRN IN HOY-VARI TO CMT-STP-ITRN IN CMT.
      *>>>>
*% END
*% IF FIN_CMN_MOD
      *<<<< FIN_CMN_MOD
           IF NOT FIO-STAT-OKS
               MOVE FIO-MENS TO FRM-MENS
               GO TO FIN-CMN-MOD.
           PERFORM MOD-CMT.
      *>>>>
*% END
*% IF FIN_CMN_ELI
      *<<<< FIN_CMN_ELI
           IF NOT FIO-STAT-OKS
               MOVE FIO-MENS TO FRM-MENS
               GO TO FIN-CMN-ELI.

           MOVE 'GNS'    TO MSG-COD-SIST.
           MOVE 'ELIYES' TO MSG-COD-MENS.
           PERFORM GET-MSG.
           MOVE MSG-GLS-DESC TO FRM-MENS.

       LUP-CMN-ELI.
           ADD 1 TO CMT-NUM-CCMT IN CMT.
           IF CMT-NUM-CCMT IN CMT > WSS-NRCM
               MOVE '00' TO FIO-STAT
               GO TO CON-CMN-ELI.
           MULTIPLY CMT-NUM-CCMT IN CMT BY 2 GIVING WSS-IDX1.
           SUBTRACT 3 FROM WSS-IDX1.
           ADD 1 WSS-IDX1 GIVING WSS-IDX2.
           IF FRM-GLS-CMTR IN CMT-FLD(WSS-IDX1) NOT > SPACES AND
              FRM-GLS-CMTR IN CMT-FLD(WSS-IDX2) NOT > SPACES
               GO TO LUP-CMN-ELI.

           MOVE FIO-GET-KEY-UPD TO FIO-CMND.
           PERFORM GNS-FIO-CMT.
           IF NOT FIO-STAT-OKS
               GO TO LUP-CMN-ELI.

           MOVE FIO-DEL TO FIO-CMND.
           PERFORM GNS-FIO-CMT.
           GO TO LUP-CMN-ELI.
       CON-CMN-ELI.
           MOVE SPACES                  TO CMT-KEY-ICMT IN CMT.
           MOVE CMT-CIC-IENT IN CMT-FLD TO CMT-CIC-IENT IN CMT.
           MOVE FIO-GET-NLS TO FIO-CMND.
           PERFORM GNS-FIO-CMT.
           IF FIO-STAT-OKS AND
              CMT-CIC-IENT IN CMT = CMT-CIC-IENT IN CMT-FLD
               GO TO FIN-CMN-ELI.
           MOVE CMT-CIC-IENT IN CMT-FLD TO RCE-CIC-IENT IN RCE.
           MOVE FIO-GET-KEY-UPD TO FIO-CMND.
           PERFORM GNS-FIO-RCE.
           IF NOT FIO-STAT-OKS
               MOVE FIO-MENS TO FRM-MENS
               MOVE FIO-BCK-OUT TO FIO-CMND
               PERFORM GNS-FIO-CMT
               GO TO FIN-CMN-ELI.
           MOVE FIO-DEL TO FIO-CMND.
           PERFORM GNS-FIO-RCE.
      *>>>>
*% END
*% IF EOF
      *<<<< EOF
       BUS-COR-CMT SECTION.
       INI-BUS-COR-CMT.
           MOVE 0 TO CMT-NUM-GCMT IN CMT-FLD.
           MOVE CMT-CIC-IENT IN CMT-FLD TO CMT-CIC-IENT IN CMT.
           IF CMT-FEC-FCMT IN CMT-FLD NOT > ZEROES
               MOVE '99999999' TO CMT-FEC-FCMT IN CMT
           ELSE
               MOVE CMT-NUM-SCMT IN CMT-FLD TO CMT-NUM-SCMT IN CMT
               MOVE CMT-NUM-ACMT IN CMT-FLD TO CMT-NUM-ACMT IN CMT
               MOVE CMT-NUM-MCMT IN CMT-FLD TO CMT-NUM-MCMT IN CMT
               MOVE CMT-NUM-DCMT IN CMT-FLD TO CMT-NUM-DCMT IN CMT.
*% IF PGM_DOS OR PGM_MVS
           MOVE 99 TO CMT-NUM-ICMT IN CMT.
           MOVE FIO-GET-LEQ TO FIO-CMND.
           PERFORM GNS-FIO-CMT.

           IF ( ( NOT FIO-STAT-OKS ) OR
              CMT-CIC-IENT IN CMT NOT = CMT-CIC-IENT IN CMT-FLD ) AND
              CMT-FEC-FCMT IN CMT-FLD NOT > ZEROES
               MOVE FIO-STAT-NEX TO FIO-STAT
               GO TO FIN-BUS-COR-CMT.

*% END
*% IF PGM_VMS
           MOVE FIO-GET-NLS TO FIO-CMND.
           PERFORM GNS-FIO-CMT.
           IF NOT ( FIO-STAT-OKS AND
              CMT-CIC-IENT IN CMT-FLD = CMT-CIC-IENT IN CMT )
              GO TO FIN-BUS-COR-CMT.
       LUP-CMT.
           MOVE CMT-CIC-IENT IN CMT TO WSS-CIC-IENT IN WSS-VARI 
           MOVE FIO-GET-NXT TO FIO-CMND.
           PERFORM GNS-FIO-CMT.
           IF FIO-STAT-OKS AND
              CMT-CIC-IENT IN CMT-FLD = CMT-CIC-IENT IN CMT
               GO TO LUP-CMT.

           MOVE WSS-CIC-IENT IN WSS-VARI  TO CMT-CIC-IENT IN CMT
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM GNS-FIO-CMT.
*% END
           IF CMT-FEC-FCMT IN CMT-FLD NOT > ZEROES
               MOVE CMT-NUM-SCMT IN CMT TO CMT-NUM-SCMT IN CMT-FLD
               MOVE CMT-NUM-ACMT IN CMT TO CMT-NUM-ACMT IN CMT-FLD
               MOVE CMT-NUM-MCMT IN CMT TO CMT-NUM-MCMT IN CMT-FLD
               MOVE CMT-NUM-DCMT IN CMT TO CMT-NUM-DCMT IN CMT-FLD.

           IF FIO-STAT-OKS AND
              CMT-CIC-IENT IN CMT = CMT-CIC-IENT IN CMT-FLD AND
              CMT-NUM-SCMT IN CMT = CMT-NUM-SCMT IN CMT-FLD AND
              CMT-NUM-ACMT IN CMT = CMT-NUM-ACMT IN CMT-FLD AND
              CMT-NUM-MCMT IN CMT = CMT-NUM-MCMT IN CMT-FLD AND
              CMT-NUM-DCMT IN CMT = CMT-NUM-DCMT IN CMT-FLD
              IF SCR-CCPP = 'ING' OR SCR-CCPP = 'ACT'
                  ADD 1 TO CMT-NUM-GCMT IN CMT
                  MOVE SPACES TO CMT-COD-UBIC IN CMT
                  MOVE SPACES TO CMT-COD-AUTC IN CMT
                  MOVE SPACES TO CMT-GLS-REFE IN CMT
                  MOVE SPACES TO CMT-GLS-FILL IN CMT
                  MOVE CMT-NUM-GCMT IN CMT TO CMT-NUM-GCMT IN CMT-FLD
                  MOVE 1 TO CMT-NUM-CCMT IN CMT-FLD
              ELSE
                  MOVE CMT-NUM-GCMT IN CMT TO CMT-NUM-GCMT IN CMT-FLD
                  MOVE 1 TO CMT-NUM-CCMT IN CMT-FLD
           ELSE
               MOVE 1 TO CMT-NUM-GCMT IN CMT-FLD
               MOVE 1 TO CMT-NUM-CCMT IN CMT-FLD
               PERFORM KEY-CMT-CMT
               MOVE SPACES TO CMT-COD-UBIC IN CMT
               MOVE SPACES TO CMT-COD-AUTC IN CMT
               MOVE SPACES TO CMT-GLS-RCMT IN CMT
               MOVE SPACES TO CMT-GLS-REFE IN CMT
               MOVE SPACES TO CMT-GLS-FILL IN CMT.
           MOVE 1 TO WSS-ICOR.
       FIN-BUS-COR-CMT.
           EXIT.

       PUT-SCR-CMT SECTION.
       INI-PUT-SCR-CMT.
           PERFORM KEY-CMT-CMT.
           MOVE 2 TO CMT-NUM-CCMT IN CMT.
           MOVE FIO-GET-NLS TO FIO-CMND.
       LUP-PUT-SCR-CMT.
           PERFORM GNS-FIO-CMT.
           IF FIO-STAT-OKS AND
              CMT-CIC-IENT IN CMT = CMT-CIC-IENT IN CMT-FLD AND
              CMT-NUM-SCMT IN CMT = CMT-NUM-SCMT IN CMT-FLD AND
              CMT-NUM-ACMT IN CMT = CMT-NUM-ACMT IN CMT-FLD AND
              CMT-NUM-MCMT IN CMT = CMT-NUM-MCMT IN CMT-FLD AND
              CMT-NUM-DCMT IN CMT = CMT-NUM-DCMT IN CMT-FLD AND
              CMT-NUM-GCMT IN CMT = CMT-NUM-GCMT IN CMT-FLD
               MOVE CMT-NUM-CCMT IN CMT TO FRM-IFLD
           ELSE
               GO TO FIN-PUT-SCR-CMT.

           MULTIPLY FRM-IFLD BY 2 GIVING WSS-IDX1.
           SUBTRACT 3 FROM WSS-IDX1.
           ADD 1 WSS-IDX1 GIVING WSS-IDX2.

           MOVE CMT-GLS-CMTR IN CMT(1) TO
                                FRM-GLS-CMTR IN CMT-FLD(WSS-IDX1).
           ADD 1 TO FRM-IFLD.
           MOVE CMT-GLS-CMTR IN CMT(2) TO
                                FRM-GLS-CMTR IN CMT-FLD(WSS-IDX2).
           MOVE FIO-GET-NXT TO FIO-CMND.
           GO TO LUP-PUT-SCR-CMT.
       FIN-PUT-SCR-CMT.
           EXIT.

       MOD-CMT SECTION.
       INI-MOD-CMT.
           MOVE 2 TO FRM-IFLD.
       LUP-MOD-CMT.

           MULTIPLY FRM-IFLD BY 2 GIVING WSS-IDX1.
           SUBTRACT 3 FROM WSS-IDX1.
           ADD 1 WSS-IDX1 GIVING WSS-IDX2.

           MOVE FRM-IFLD TO CMT-NUM-CCMT IN CMT.
           MOVE FIO-GET-KEY-UPD TO FIO-CMND.
           PERFORM GNS-FIO-CMT.
           IF FIO-STAT-OKS
               IF FRM-GLS-CMTR IN CMT-FLD(WSS-IDX1) NOT > SPACES AND
                  FRM-GLS-CMTR IN CMT-FLD(WSS-IDX2) NOT > SPACES
                   MOVE FIO-DEL TO FIO-CMND
                   PERFORM GNS-FIO-CMT
                   IF NOT FIO-STAT-OKS
                       MOVE FIO-MENS TO FRM-MENS
                       MOVE FIO-BCK-OUT TO FIO-CMND
                       PERFORM GNS-FIO-CMT
                       GO TO FIN-MOD-CMT
                   ELSE
                       NEXT SENTENCE
               ELSE
                   PERFORM RET-ALL-CMT
                   MOVE FRM-IFLD TO CMT-NUM-CCMT IN CMT
                   MOVE FRM-GLS-CMTR IN CMT-FLD(WSS-IDX1) TO
                        CMT-GLS-CMTR IN CMT(1)
                   MOVE FRM-GLS-CMTR IN CMT-FLD(WSS-IDX2) TO
                        CMT-GLS-CMTR IN CMT(2)
                   MOVE HOY-STP-ITRN IN HOY-VARI TO CMT-STP-ITRN IN CMT
                   MOVE FIO-MOD TO FIO-CMND
                   PERFORM GNS-FIO-CMT
                   IF NOT FIO-STAT-OKS
                       MOVE FIO-MENS TO FRM-MENS
                       MOVE FIO-BCK-OUT TO FIO-CMND
                       PERFORM GNS-FIO-CMT
                       GO TO FIN-MOD-CMT
                   ELSE
                       NEXT SENTENCE
           ELSE
               IF FRM-GLS-CMTR IN CMT-FLD(WSS-IDX1) NOT > SPACES AND
                  FRM-GLS-CMTR IN CMT-FLD(WSS-IDX2) NOT > SPACES
                   NEXT SENTENCE
               ELSE
                   PERFORM RET-ALL-CMT
                   MOVE FRM-IFLD TO CMT-NUM-CCMT IN CMT
                   MOVE FRM-GLS-CMTR IN CMT-FLD(WSS-IDX1) TO
                        CMT-GLS-CMTR IN CMT(1)
                   MOVE FRM-GLS-CMTR IN CMT-FLD(WSS-IDX2) TO
                        CMT-GLS-CMTR IN CMT(2)
                   MOVE HOY-STP-ITRN IN HOY-VARI TO CMT-STP-ITRN IN CMT
                   MOVE FIO-PUT TO FIO-CMND
                   PERFORM GNS-FIO-CMT
                   IF NOT FIO-STAT-OKS
                       MOVE FIO-MENS TO FRM-MENS
                       MOVE FIO-BCK-OUT TO FIO-CMND
                       PERFORM GNS-FIO-CMT
                       GO TO FIN-MOD-CMT.
           ADD 1 TO FRM-IFLD.
           IF FRM-IFLD NOT > WSS-NRCM
               GO TO LUP-MOD-CMT.
           MOVE '00' TO FIO-STAT.
       FIN-MOD-CMT.
           EXIT.

       ING-CMT SECTION.
       INI-ING-CMT.
           MOVE 2 TO FRM-IFLD.
       LUP-ING-CMT.

           MULTIPLY FRM-IFLD BY 2 GIVING WSS-IDX1.
           SUBTRACT 3 FROM WSS-IDX1.
           ADD 1 WSS-IDX1 GIVING WSS-IDX2.

           IF FRM-GLS-CMTR IN CMT-FLD(WSS-IDX1) > SPACES OR
              FRM-GLS-CMTR IN CMT-FLD(WSS-IDX2) > SPACES
               MOVE FRM-IFLD TO CMT-NUM-CCMT IN CMT
               MOVE FRM-GLS-CMTR IN CMT-FLD(WSS-IDX1) TO
                    CMT-GLS-CMTR IN CMT(1)
               MOVE FRM-GLS-CMTR IN CMT-FLD(WSS-IDX2) TO
                    CMT-GLS-CMTR IN CMT(2)
                   MOVE HOY-STP-ITRN IN HOY-VARI TO CMT-STP-ITRN IN CMT
                   MOVE FIO-PUT TO FIO-CMND
                   PERFORM GNS-FIO-CMT.

           ADD 1 TO FRM-IFLD.
           IF FRM-IFLD NOT > WSS-NRCM
               GO TO LUP-ING-CMT.
       FIN-ING-CMT.
           EXIT.

       STR-KEYS SECTION.
       INI-STR-KEYS.
           MOVE SPACES TO WSS-GLS-IENT.
           MOVE 1 TO WSS-NENT.
           MOVE 1 TO WSS-NORD.
       LUP-STR-KEYS.
           MOVE 0 TO WSS-IFLD.
           MOVE SPACES TO WSS-STRN.
           PERFORM BUS-ORDN VARYING FRM-IFLD FROM 1 BY 1 UNTIL
               FRM-IFLD > WSS-NKEY OR WSS-IFLD > 0.
           IF WSS-IFLD = 1
               PERFORM MOV-CLTE
           ELSE
           IF WSS-IFLD = 2
               PERFORM MOV-OPER
           ELSE
           IF WSS-IFLD = 3
               PERFORM MOV-FENT
           ELSE
           IF WSS-IFLD = 4
               PERFORM MOV-NENT
           ELSE
           IF WSS-IFLD = 5
               PERFORM MOV-CENT.
       NXT-STR-KEYS.
           ADD 1 TO WSS-NORD.
           IF WSS-NORD NOT > WSS-NKEY
               GO TO LUP-STR-KEYS.
       FIN-STR-KEYS.
           EXIT.

       BUS-ORDN SECTION.
       INI-BUS-ORDN.
           IF WSS-NORD = FRM-NUM-NORD(FRM-IFLD)
               MOVE FRM-IFLD TO WSS-IFLD.
       FIN-BUS-ORDN.
           EXIT.

       MOV-CLTE SECTION.
       INI-MOV-CLTE.
      *LRH ini 17-JUN-1994
           IF SCR-CMND = 'COP' AND
              DBC-NUM-ICLI IN CMT-FLD > SPACES
               MOVE DBC-NUM-ICLI IN CMT-FLD TO DBC-NUM-ICLI IN DBC
               MOVE DBC-IND-ICLI IN CMT-FLD TO DBC-IND-ICLI IN DBC
               MOVE DBC-GLS-ICLI IN CMT-FLD TO DBC-GLS-ICLI IN DBC
               MOVE FIO-GET-KEY             TO FIO-CMND
               MOVE 'DBC-IDC-ICLI'          TO FIO-AKEY
               PERFORM SGC-FIO-DBC
               MOVE DBC-CAI-ICLI IN DBC TO DBC-CAI-ICLI IN CMT-FLD
               MOVE DBC-IIC-ICLI IN DBC TO DBC-IIC-ICLI IN CMT-FLD.
      *LRH fin 17-JUN-1994
           MOVE DBC-CAI-ICLI IN CMT-FLD TO WSS-CAI-STRN IN WSS-VARI.
           MOVE DBC-IIC-ICLI IN CMT-FLD TO WSS-IIC-STRN IN WSS-VARI.
           MOVE 12 TO WSS-LKEY.
           PERFORM MOV-STRN VARYING FRM-IFLD FROM 1 BY 1 UNTIL
                            FRM-IFLD > WSS-LKEY.
       FIN-MOV-CLTE.
           EXIT.

       MOV-OPER SECTION.
       INI-MOV-OPER.
           MOVE FRM-CAI-IOPE IN CMT-FLD TO WSS-CAI-STRN IN WSS-VARI.
           MOVE FRM-IIC-IOPE IN CMT-FLD TO WSS-IIC-STRN IN WSS-VARI.
           MOVE 12 TO WSS-LKEY.
           PERFORM MOV-STRN VARYING FRM-IFLD FROM 1 BY 1 UNTIL
                            FRM-IFLD > WSS-LKEY.
       FIN-MOV-OPER.
           EXIT.

       MOV-FENT SECTION.
       INI-MOV-FENT.
           MOVE FRM-NUM-DENT IN CMT-FLD TO WSS-NUM-DSTR IN WSS-VARI.
           MOVE FRM-NUM-MENT IN CMT-FLD TO WSS-NUM-MSTR IN WSS-VARI.
           MOVE FRM-NUM-SENT IN CMT-FLD TO WSS-NUM-SSTR IN WSS-VARI.
           MOVE FRM-NUM-AENT IN CMT-FLD TO WSS-NUM-ASTR IN WSS-VARI.
           MOVE 8 TO WSS-LKEY.
           PERFORM MOV-STRN VARYING FRM-IFLD FROM 1 BY 1 UNTIL
                            FRM-IFLD > WSS-LKEY.
       FIN-MOV-FENT.
           EXIT.

       MOV-NENT SECTION.
       INI-MOV-NENT.
           MOVE FRM-NUM-IENT IN CMT-FLD TO WSS-NUM-NUM3 IN WSS-VARI.
           MOVE 3 TO WSS-LKEY.
           PERFORM MOV-STRN VARYING FRM-IFLD FROM 1 BY 1 UNTIL
                            FRM-IFLD > WSS-LKEY.
       FIN-MOV-NENT.
           EXIT.

       MOV-CENT SECTION.
       INI-MOV-CENT.
           MOVE FRM-COD-IENT IN CMT-FLD TO WSS-STRN IN WSS-VARI.
           MOVE 3 TO WSS-LKEY.
           PERFORM MOV-STRN VARYING FRM-IFLD FROM 1 BY 1 UNTIL
                            FRM-IFLD > WSS-LKEY.
       FIN-MOV-CENT.
           EXIT.

       MOV-STRN SECTION.
       INI-MOV-STRN.
           IF WSS-NENT > WSS-LENT
               ADD 1 WSS-LKEY GIVING FRM-IFLD
               GO TO FIN-MOV-STRN.
           MOVE WSS-CHR-STRN( FRM-IFLD ) TO WSS-CHR-IENT( WSS-NENT ).
           ADD 1 TO WSS-NENT.
       FIN-MOV-STRN.
           EXIT.

       COPY GNSBBTAB.
       COPY GNSBVCOD.
       COPY GNSBVTAB.
       COPY GNSBFRCE.
       COPY SGCBFDBC.
       COPY TABBBOFI.
       COPY TABBFOFI.
       COPY TABBFUSR.
       COPY GNSBFCIC.
       COPY GNSBGCIC.
       COPY GNSBGSTR.
       COPY GNSBGCPT.
       COPY GNSBEGLS.
       COPY GNSBBMSC.
       COPY TABBBUSR.
       COPY TABBVTDU.
       COPY SGCBGCLI.

*%! RVM: 01-04-92 VSI NO MANEJA PFS DEPENDIENTES DE DTC
*% IF PGM_DTC
       LEE-NXT-PRV-F56 SECTION.
       INI-LEE-NXT-PRV-F56.
           MOVE SPACES TO MSG-COD-MENS.
           IF SCR-CMT-REQA > SPACES
               PERFORM LEE-NXT-PRV-CMT
           ELSE
               MOVE 'CMTNO' TO MSG-COD-MENS.
       FIN-LEE-NXT-PRV-F56.
           EXIT.

       LEE-NXT-PRV-CMT SECTION.
       INI-LEE-NXT-PRV-CMT.
           MOVE SCR-CMT-REQA TO ADR-CMT-REQA.
           MOVE ADR-VKEY IN ADR-CMT-REQA TO WSS-CIC-IENT IN WSS-VARI.
           MOVE FIO-KDEF-S TO FIO-KDEF.
           IF FRM-FFLD = FRM-FFLD-PF5
               MOVE FIO-GET-PRV TO FIO-CMND
           ELSE
               MOVE FIO-GET-NXT TO FIO-CMND.
       LUP-LEE-NXT-PRV-CMT.
           PERFORM GNS-FIO-CMT.
           IF FIO-STAT-OKS AND
              CMT-CIC-IENT IN CMT = WSS-CIC-IENT IN WSS-VARI AND
              CMT-NUM-CCMT IN CMT NOT = 1
               GO TO LUP-LEE-NXT-PRV-CMT.

           IF FIO-STAT-OKS AND
              CMT-CIC-IENT IN CMT = WSS-CIC-IENT IN WSS-VARI
               MOVE SPACES TO PGM-STAT-RCE
               MOVE '00'   TO PGM-STAT-CMT
               MOVE ADR-CMT-REQA TO SCR-CMT-REQA
               MOVE 'CMTSI' TO MSG-COD-MENS
               GO TO FIN-LEE-NXT-PRV-CMT.
           MOVE 'CMTNO' TO MSG-COD-MENS.
       FIN-LEE-NXT-PRV-CMT.
           EXIT.

       LEE-NXT-PRV-F78 SECTION.
       INI-LEE-NXT-PRV-F78.
           MOVE SPACES TO MSG-COD-MENS.
           IF SCR-RCE-REQA > SPACES
               PERFORM LEE-NXT-PRV-RCE
           ELSE
           IF SCR-DBC-REQA > SPACES
               PERFORM LEE-NXT-PRV-DBC
           ELSE
               PERFORM LEE-NXT-PRV-ENT.
       FIN-LEE-NXT-PRV-F78.
           EXIT.

       LEE-NXT-PRV-RCE SECTION.
       INI-LEE-NXT-PRV-RCE.
           IF FRM-NUM-NORD IN CMT-FLD(1) = 1
               MOVE DBC-IIC-ICLI IN CMT-FLD TO WSS-IIC-ICLI
               MOVE DBC-CAI-ICLI IN CMT-FLD TO WSS-CAI-ICLI.

           MOVE SCR-RCE-REQA TO ADR-RCE-REQA.
           MOVE FIO-KDEF-S TO FIO-KDEF.
           IF FRM-FFLD = FRM-FFLD-PF7
               MOVE FIO-GET-PRV TO FIO-CMND
           ELSE
               MOVE FIO-GET-NXT TO FIO-CMND.
       LUP-LEE-NXT-PRV-RCE.
           MOVE 'RCE-KEY-IENT' TO FIO-AKEY.
           PERFORM GNS-FIO-RCE.
           IF FRM-NUM-NORD IN CMT-FLD(1) = 1
               IF FIO-STAT-OKS AND
                  RCE-COD-ENTI IN RCE = RCE-COD-ENTI IN CMT-FLD   AND
                  RCE-COD-SIST IN RCE = SCR-SISG
                   MOVE RCE-GLS-IENT IN RCE TO DBC-CIC-ICLI IN DBC
                   IF DBC-CIC-ICLI IN DBC = WSS-CIC-ICLI IN WSS-VARI
                       GO TO STT-LEE-NXT-PRV-RCE
                   ELSE
                       PERFORM LEE-NXT-PRV-DBC
                       GO TO FIN-LEE-NXT-PRV-RCE
               ELSE
                   PERFORM LEE-NXT-PRV-DBC
                   GO TO FIN-LEE-NXT-PRV-RCE.

           IF FIO-STAT-OKS AND RCE-COD-SIST IN RCE NOT = SCR-SISG
               IF FRM-FFLD = FRM-FFLD-PF7
                   MOVE FIO-GET-PRV TO FIO-CMND
                   GO TO LUP-LEE-NXT-PRV-RCE
               ELSE
                   MOVE FIO-GET-NXT TO FIO-CMND
                   GO TO LUP-LEE-NXT-PRV-RCE.
      *******************************************
           IF FIO-STAT-OKS AND
              RCE-COD-ENTI IN RCE NOT = RCE-COD-ENTI IN CMT-FLD
               MOVE RCE-COD-ENTI IN RCE TO RCE-COD-ENTI IN CMT-FLD
               PERFORM BUS-GLS-ENTI
               IF FRM-NUM-NORD IN CMT-FLD(1) = 1
                   IF FRM-FFLD = FRM-FFLD-PF8
                       MOVE SPACES TO DBC-GLS-NOMC IN DBC
                       PERFORM LEE-NXT-PRV-NOM
                       GO TO FIN-LEE-NXT-PRV-RCE
                   ELSE
      *                MOVE HIGH-VALUES TO DBC-GLS-NOMC IN DBC
                       MOVE
           '99999999999999999999999999999999999999999999999999999999999'
                                             TO DBC-GLS-NOMC IN DBC
                                                DBC-GLS-NOMC IN CMT-FLD
                       PERFORM LEE-NXT-PRV-NOM
                       GO TO FIN-LEE-NXT-PRV-RCE
               ELSE
                   MOVE '00' TO FIO-STAT.
      *******************************************
       STT-LEE-NXT-PRV-RCE.
           MOVE FIO-STAT TO PGM-STAT-RCE.
           IF FIO-STAT-OKS
               MOVE ADR-RCE-REQA TO SCR-RCE-REQA.
       FIN-LEE-NXT-PRV-RCE.
           EXIT.

       LEE-NXT-PRV-DBC SECTION.
       INI-LEE-NXT-PRV-DBC.
           MOVE SCR-DBC-REQA TO ADR-DBC-REQA.
           MOVE FIO-KDEF-S TO FIO-KDEF.
           IF FRM-FFLD = FRM-FFLD-PF7
               MOVE FIO-GET-PRV TO FIO-CMND
           ELSE
               MOVE FIO-GET-NXT TO FIO-CMND.
           PERFORM SGC-FIO-DBC.
           MOVE FIO-STAT TO PGM-STAT-DBC.
           IF FIO-STAT-OKS
               MOVE ADR-DBC-REQA TO SCR-DBC-REQA
               PERFORM BUS-DBC-RCE
           ELSE
               IF FRM-FFLD = FRM-FFLD-PF7
                   MOVE 'DBC    NOPRV' TO MSG-COD-MENS
               ELSE
                   MOVE 'DBC    NONXT' TO MSG-COD-MENS.
       FIN-LEE-NXT-PRV-DBC.
           EXIT.

       LEE-NXT-PRV-ENT SECTION.
       INI-LEE-NXT-PRV-ENT.
           IF FRM-NUM-NORD IN CMT-FLD(1) = 1
               IF DBC-NUM-ICLI IN DBC NOT = ZEROES
                   PERFORM LEE-NXT-PRV-IDC
                   GO TO FIN-LEE-NXT-PRV-ENT
               ELSE
                   PERFORM LEE-NXT-PRV-NOM.
                   GO TO FIN-LEE-NXT-PRV-ENT.

           MOVE FIO-GET-NLS    TO FIO-CMND.
       LUP-LEE-NXT-PRV-ENT.
           MOVE 'RCE-KEY-IENT' TO FIO-AKEY.
           PERFORM GNS-FIO-RCE.
           MOVE FIO-STAT TO PGM-STAT-RCE.

           IF FIO-STAT-OKS AND RCE-COD-SIST IN RCE NOT = SCR-SISG
               IF FRM-FFLD = FRM-FFLD-PF7
                   MOVE FIO-GET-PRV TO FIO-CMND
                   GO TO LUP-LEE-NXT-PRV-ENT
               ELSE
                   MOVE FIO-GET-NXT TO FIO-CMND
                   GO TO LUP-LEE-NXT-PRV-ENT.

           IF FIO-STAT-OKS
               MOVE ADR-RCE-REQA TO SCR-RCE-REQA.
       FIN-LEE-NXT-PRV-ENT.
           EXIT.

       LEE-NXT-PRV-IDC SECTION.
       INI-LEE-NXT-PRV-IDC.
           IF DBC-IDC-ICLI IN DBC > ZEROES
               MOVE FIO-GET-KEY    TO FIO-CMND
               MOVE 'DBC-IDC-ICLI' TO FIO-AKEY
               PERFORM SGC-FIO-DBC
               IF FIO-STAT-OKS
                   GO TO STT-LEE-NXT-PRV-IDC
               ELSE
                   IF FRM-FFLD = FRM-FFLD-PF7
                       MOVE FIO-GET-LEQ TO FIO-CMND
                   ELSE
                       MOVE FIO-GET-NLS TO FIO-CMND
           ELSE
               IF FRM-FFLD = FRM-FFLD-PF7
                   MOVE FIO-GET-LEQ TO FIO-CMND
               ELSE
                   MOVE FIO-GET-NLS TO FIO-CMND.
           MOVE 'DBC-IDC-ICLI' TO FIO-AKEY.
           PERFORM SGC-FIO-DBC.
       STT-LEE-NXT-PRV-IDC.
           MOVE FIO-STAT TO PGM-STAT-DBC.
           IF FIO-STAT-OKS
               MOVE ADR-DBC-REQA TO SCR-DBC-REQA
               PERFORM BUS-DBC-RCE
           ELSE
               IF FRM-FFLD = FRM-FFLD-PF7
                   MOVE 'DBC    NOPRV' TO MSG-COD-MENS
               ELSE
                   MOVE 'DBC    NONXT' TO MSG-COD-MENS.
       FIN-LEE-NXT-PRV-IDC.
           EXIT.

       LEE-NXT-PRV-NOM SECTION.
       INI-LEE-NXT-PRV-NOM.
           IF DBC-GLS-NOMC IN DBC > SPACES

               MOVE DBC-GLS-NOMC IN CMT-FLD TO STR-GLS-GSTR
               PERFORM STR-UNS
               MOVE STR-GLS-FUNS IN STR-VARI(1) TO DBC-GLS-APAT IN DBC
               MOVE STR-GLS-FUNS IN STR-VARI(2) TO DBC-GLS-AMAT IN DBC
               MOVE STR-GLS-FUNS IN STR-VARI(3) TO DBC-GLS-NOMB IN DBC

               MOVE FIO-GET-KEY    TO FIO-CMND
               MOVE 'DBC-GLS-NOMC' TO FIO-AKEY
               PERFORM SGC-FIO-DBC
               IF FIO-STAT-OKS
                   GO TO STT-LEE-NXT-PRV-NOM
               ELSE
                   IF FRM-FFLD = FRM-FFLD-PF7
                       MOVE FIO-GET-LEQ TO FIO-CMND
                   ELSE
                       MOVE FIO-GET-NLS TO FIO-CMND
           ELSE
               IF FRM-FFLD = FRM-FFLD-PF7
                   MOVE FIO-GET-LEQ TO FIO-CMND
               ELSE
                   MOVE FIO-GET-NLS TO FIO-CMND.
           MOVE 'DBC-GLS-NOMC' TO FIO-AKEY.
           PERFORM SGC-FIO-DBC.
       STT-LEE-NXT-PRV-NOM.
           MOVE FIO-STAT TO PGM-STAT-DBC.
           IF FIO-STAT-OKS
               MOVE ADR-DBC-REQA TO SCR-DBC-REQA
               PERFORM BUS-DBC-RCE
           ELSE
               IF FRM-FFLD = FRM-FFLD-PF7
                   MOVE 'DBC    NOPRV' TO MSG-COD-MENS
               ELSE
                   MOVE 'DBC    NONXT' TO MSG-COD-MENS.
       FIN-LEE-NXT-PRV-NOM.
           EXIT.
*% END

       BUS-DBC-RCE SECTION.
       INI-BUS-DBC-RCE.
           PERFORM KEY-RCE-CMT.
           MOVE DBC-CIC-ICLI IN DBC TO WSS-GLS-IENT IN WSS-VARI.

*%! RVM: 01-04-92 VSI NO MANEJA PFS DEPENDIENTES DE DTC
*% IF PGM_DTC
           IF FRM-FFLD = FRM-FFLD-PF7
               MOVE '999999999999999999' TO WSS-FIL-IENT IN WSS-VARI
               MOVE FIO-GET-LEQ TO FIO-CMND
           ELSE
               MOVE SPACES TO WSS-FIL-IENT IN WSS-VARI
               MOVE FIO-GET-NLS TO FIO-CMND.
           MOVE WSS-GLS-IENT IN WSS-VARI TO RCE-GLS-IENT IN RCE.
*% END

           MOVE 'RCE-KEY-IENT' TO FIO-AKEY.
           PERFORM GNS-FIO-RCE.
           IF FIO-STAT-OKS
               MOVE RCE-GLS-IENT IN RCE TO WSS-CIC-ICLI IN WSS-VARI
               IF RCE-COD-SIST IN RCE = SCR-SISG                 AND
                  RCE-COD-ENTI IN RCE = RCE-COD-ENTI IN CMT-FLD  AND
                  WSS-CIC-ICLI IN WSS-VARI = DBC-CIC-ICLI IN DBC
*%! RVM: 01-04-92 VSI NO MANEJA PFS DEPENDIENTES DE DTC
*% IF PGM_DTC
                   MOVE ADR-RCE-REQA TO SCR-RCE-REQA
*% END
                   MOVE FIO-STAT TO PGM-STAT-RCE
                   GO TO FIN-BUS-DBC-RCE.

           MOVE '23' TO FIO-STAT.
           MOVE FIO-STAT TO PGM-STAT-RCE.
*%! RVM: 01-04-92 VSI NO MANEJA PFS DEPENDIENTES DE DTC
*% IF PGM_DTC
           MOVE SPACES TO SCR-RCE-REQA.
           MOVE SPACES TO SCR-CMT-REQA.
*% END
           PERFORM PUT-DBC.
           MOVE 'DBC    NORCE' TO MSG-COD-MENS.
           PERFORM CLR-FLD-FRM.
       FIN-BUS-DBC-RCE.
           EXIT.

       PUT-DBC SECTION.
       INI-PUT-DBC.
           MOVE DBC-GLS-NOMC IN DBC TO CPT-STRN.
           PERFORM CPT-BLKS.
           MOVE CPT-STRN TO DBC-GLS-NOMC IN CMT-FLD.
           MOVE DBC-NUM-ICLI IN DBC TO DBC-NUM-ICLI IN CMT-FLD.
           MOVE DBC-VRF-ICLI IN DBC TO DBC-VRF-ICLI IN CMT-FLD.
           MOVE DBC-IND-ICLI IN DBC TO DBC-IND-ICLI IN CMT-FLD.
           MOVE DBC-GLS-ICLI IN DBC TO DBC-GLS-ICLI IN CMT-FLD.
           MOVE DBC-CAI-ICLI IN DBC TO DBC-CAI-ICLI IN CMT-FLD.
           MOVE DBC-IIC-ICLI IN DBC TO DBC-IIC-ICLI IN CMT-FLD.
       FIN-PUT-DBC.
           EXIT.

       CLR-FLD-FRM SECTION.
       INI-CLR-FLD-FRM.
           MOVE SPACES TO FRM-CAI-IOPE IN CMT-FLD.
           MOVE SPACES TO FRM-IIC-IOPE IN CMT-FLD.
           MOVE SPACES TO FRM-FEC-FENT IN CMT-FLD.
           MOVE ZEROES TO FRM-NUM-IENT IN CMT-FLD.
           MOVE SPACES TO FRM-COD-IENT IN CMT-FLD.
           MOVE SPACES TO FRM-GLS-IENT IN CMT-FLD.
           MOVE SPACES TO CMT-CIC-IENT IN CMT-FLD.
           MOVE SPACES TO CMT-FEC-FCMT IN CMT-FLD.
           MOVE ZEROES TO CMT-NUM-GCMT IN CMT-FLD.
           MOVE ZEROES TO FRM-NUM-CCMT IN CMT-FLD.
           MOVE ZEROES TO CMT-NUM-CCMT IN CMT-FLD.
           MOVE SPACES TO FRM-GLS-UBIC IN CMT-FLD.
           MOVE SPACES TO FRM-GLS-AUTC IN CMT-FLD.
           MOVE 1 TO FRM-IFLD.
       LUP-CLR-FLD-FRM.
           MOVE SPACES TO FRM-GLS-CMTR IN CMT-FLD(FRM-IFLD).
           ADD 1 TO FRM-IFLD.
           IF FRM-IFLD NOT > WSS-IMAX
               GO TO LUP-CLR-FLD-FRM.
       FIN-CLR-FLD-FRM.
           EXIT.

       BUS-CMT SECTION.
       INI-BUS-CMT.
           MOVE SPACES              TO CMT-KEY-ICMT IN CMT.
           MOVE RCE-CIC-IENT IN RCE TO CMT-CIC-IENT IN CMT.
           MOVE FIO-GET-NLS TO FIO-CMND.
*%! RVM: 01-04-92 VSI NO MANEJA PFS DEPENDIENTES DE DTC
*% IF PGM_DTC
           IF FRM-FFLD = FRM-FFLD-PF7
               MOVE '999999999' TO CMT-FEC-FCMT IN CMT
               MOVE '99'        TO CMT-NUM-ICMT IN CMT
               MOVE FIO-GET-LEQ TO FIO-CMND.
*% END
       LUP-BUS-CMT.
           PERFORM GNS-FIO-CMT.
           IF FIO-STAT-OKS AND
              ( FIO-CMND = FIO-GET-LEQ OR FIO-GET-PRV ) AND
              CMT-CIC-IENT IN CMT = RCE-CIC-IENT IN RCE AND
              CMT-NUM-CCMT IN CMT NOT = 1
               MOVE FIO-GET-PRV TO FIO-CMND
               PERFORM LUP-BUS-CMT.

           IF FIO-STAT-OKS AND 
              CMT-CIC-IENT IN CMT = RCE-CIC-IENT IN RCE
               MOVE '00' TO PGM-STAT-CMT
*%! RVM: 01-04-92 VSI NO MANEJA PFS DEPENDIENTES DE DTC
*% IF PGM_DTC
               MOVE ADR-CMT-REQA TO SCR-CMT-REQA
*% END
               GO TO FIN-BUS-CMT.
*%! RVM: 01-04-92 VSI NO MANEJA PFS DEPENDIENTES DE DTC
*% IF PGM_DTC
           MOVE SPACES TO SCR-CMT-REQA.
*% END
           MOVE FIO-STAT-NEX TO FIO-STAT.
       FIN-BUS-CMT.
           EXIT.

       PUT-KEY-RCE SECTION.
       INI-PUT-KEY-RCE.
      *************************************************
           IF RCE-COD-ENTI IN RCE NOT = RCE-COD-ENTI IN CMT-FLD
               MOVE RCE-COD-ENTI IN RCE TO RCE-COD-ENTI IN CMT-FLD
               PERFORM BUS-GLS-ENTI.
      *************************************************
           MOVE RCE-GLS-IENT IN RCE TO WSS-GLS-IENT.
           MOVE 1 TO WSS-NENT.
           MOVE 1 TO WSS-NORD.
       LUP-PUT-KEY-RCE.
           MOVE 0 TO WSS-IFLD.
           MOVE SPACES TO WSS-STRN.
           PERFORM BUS-ORDN VARYING FRM-IFLD FROM 1 BY 1 UNTIL
               FRM-IFLD > WSS-NKEY OR WSS-IFLD > 0.
           IF WSS-IFLD = 1
               PERFORM PUT-CLTE
           ELSE
           IF WSS-IFLD = 2
               PERFORM PUT-OPER
           ELSE
           IF WSS-IFLD = 3
               PERFORM PUT-FENT
           ELSE
           IF WSS-IFLD = 4
               PERFORM PUT-NENT
           ELSE
           IF WSS-IFLD = 5
               PERFORM PUT-CENT.
       NXT-PUT-KEY-RCE.
           ADD 1 TO WSS-NORD.
           IF WSS-NORD NOT > WSS-NKEY
               GO TO LUP-PUT-KEY-RCE.
      * OJO : =========
      *     IF FRM-NUM-NORD IN CMT-FLD(1) NOT = 1
      *         MOVE SPACES TO SCR-DBC-REQA.
       FIN-PUT-KEY-RCE.
           EXIT.

       BUS-GLS-ENTI SECTION.
       INI-BUS-GLS-ENTI.
           PERFORM CLR-KEY-KFRM.

           MOVE SCR-SISG TO TAB-COD-SIST FIO-SIST.
           MOVE 'ENT' TO TAB-COD-TTAB IN TAB.
           MOVE RCE-COD-ENTI IN CMT-FLD TO TAB-COD-CTAB IN TAB.
           PERFORM BUS-TAB.
           MOVE TAB-GLS-DESC IN TAB TO FRM-GLS-ENTI IN CMT-FLD.

           MOVE SPACES TO WSS-COD-CTAB.
           MOVE 'CMT'  TO WSS-COD-TENT.
           MOVE RCE-COD-ENTI IN CMT-FLD TO WSS-COD-ENTI.

           MOVE SCR-SISG     TO TAB-COD-SIST FIO-SIST.
           MOVE 'FRM'        TO TAB-COD-TTAB IN TAB.
           MOVE WSS-COD-CTAB TO TAB-COD-CTAB IN TAB.
           MOVE FIO-GET-NLS TO FIO-CMND.
       LUP-BUS-GLS-ENTI.
           PERFORM GNS-FIO-TAB.
      *PVG INI 11-DIC-2013
           IF FIO-STAT-EOF
               GO TO FIN-BUS-GLS-ENTI.                                  
      *PVG FIN 11-DIC-2013
           IF NOT FIO-STAT-OKS
               IF FIO-CMND = FIO-GET-NXT
                   MOVE SCR-SISG TO TAB-COD-SIST FIO-SIST
                   MOVE FIO-END-BRW TO FIO-CMND
                   PERFORM GNS-FIO-TAB
               ELSE
                   NEXT SENTENCE
           ELSE
               MOVE TAB-COD-CTAB IN TAB TO WSS-COD-CTAB
               IF WSS-COD-ENTI NOT = RCE-COD-ENTI IN CMT-FLD
                   MOVE SCR-SISG TO TAB-COD-SIST FIO-SIST
                   MOVE FIO-END-BRW TO FIO-CMND
                   PERFORM GNS-FIO-TAB.

           MOVE TAB-COD-CTAB IN TAB TO WSS-COD-CTAB.
           IF NOT ( FIO-STAT-OKS AND WSS-COD-TENT = 'CMT' AND
                    WSS-COD-ENTI = RCE-COD-ENTI IN CMT-FLD )
               GO TO FIN-BUS-GLS-ENTI.

           IF TAB-GLS-DESC IN TAB NOT > SPACES OR
              TAB-MSC-STAT IN TAB = 'N'
               GO TO NXT-BUS-GLS-ENTI.

           MOVE TAB-GLS-DATA IN TAB TO WSS-GLS-NORD.

           IF WSS-COD-CORR = '01'
               MOVE TAB-GLS-DCOR TO FRM-GLS-TNOM IN CMT-FLD
               MOVE WSS-NUM-NORD TO FRM-NUM-NORD(1)
           ELSE
           IF WSS-COD-CORR = '02'
               MOVE TAB-GLS-DCOR TO FRM-GLS-TIDC IN CMT-FLD
               MOVE WSS-NUM-NORD TO FRM-NUM-NORD(1)
           ELSE
           IF WSS-COD-CORR = '03'
               MOVE TAB-GLS-DCOR TO FRM-GLS-TOPE IN CMT-FLD
               MOVE WSS-NUM-NORD TO FRM-NUM-NORD(2)
           ELSE
           IF WSS-COD-CORR = '04'
               MOVE TAB-GLS-DCOR TO FRM-GLS-TFEC IN CMT-FLD
               MOVE WSS-NUM-NORD TO FRM-NUM-NORD(3)
           ELSE
           IF WSS-COD-CORR = '05'
               MOVE TAB-GLS-ABRV TO FRM-GLS-TNRO IN CMT-FLD
               MOVE WSS-NUM-NORD TO FRM-NUM-NORD(4)
           ELSE
           IF WSS-COD-CORR = '06'
               MOVE TAB-GLS-DCOR TO FRM-GLS-TCOD IN CMT-FLD
               MOVE WSS-NUM-NORD TO FRM-NUM-NORD(5).
       NXT-BUS-GLS-ENTI.
           MOVE FIO-GET-NXT TO FIO-CMND.
           GO TO LUP-BUS-GLS-ENTI.
       FIN-BUS-GLS-ENTI.
           EXIT.

       PUT-CLTE SECTION.
       INI-PUT-CLTE.
           MOVE 12 TO WSS-LKEY.
           PERFORM PUT-STRN VARYING FRM-IFLD FROM 1 BY 1 UNTIL
                            FRM-IFLD > WSS-LKEY.
           MOVE WSS-CAI-STRN IN WSS-VARI TO DBC-CAI-ICLI IN CMT-FLD.
           MOVE WSS-IIC-STRN IN WSS-VARI TO DBC-IIC-ICLI IN CMT-FLD.
      *Busca el cliente en DBC
           MOVE DBC-CAI-ICLI IN CMT-FLD TO DBC-CAI-ICLI IN DBC.
           MOVE DBC-IIC-ICLI IN CMT-FLD TO DBC-IIC-ICLI IN DBC.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM SGC-FIO-DBC.
           MOVE FIO-STAT TO PGM-STAT-DBC.
           IF NOT FIO-STAT-OKS
               MOVE 'SGC' TO MSG-COD-SIST
               MOVE 'CLI    NEX' TO MSG-COD-MENS
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO DBC-GLS-NOMC IN DBC
               MOVE SPACES       TO DBC-CAI-ICLI IN DBC
               MOVE SPACES       TO DBC-IIC-ICLI IN DBC
               MOVE ZEROES       TO DBC-NUM-ICLI IN DBC
               MOVE SPACES       TO DBC-VRF-ICLI IN DBC
               MOVE SPACES       TO DBC-IND-ICLI IN DBC
           ELSE
               MOVE DBC-GLS-NOMC IN DBC TO CPT-STRN
               PERFORM CPT-BLKS
               MOVE CPT-STRN TO DBC-GLS-NOMC IN DBC.
       FIN-PUT-CLTE.
           EXIT.

       PUT-OPER SECTION.
       INI-PUT-OPER.
           MOVE 12 TO WSS-LKEY.
           PERFORM PUT-STRN VARYING FRM-IFLD FROM 1 BY 1 UNTIL
                            FRM-IFLD > WSS-LKEY.
           MOVE WSS-CAI-STRN IN WSS-VARI TO FRM-CAI-IOPE IN CMT-FLD.
           MOVE WSS-IIC-STRN IN WSS-VARI TO FRM-IIC-IOPE IN CMT-FLD.
       FIN-PUT-OPER.
           EXIT.

       PUT-FENT SECTION.
       INI-PUT-FENT.
           MOVE 8 TO WSS-LKEY.
           PERFORM PUT-STRN VARYING FRM-IFLD FROM 1 BY 1 UNTIL
                            FRM-IFLD > WSS-LKEY.
           MOVE WSS-NUM-DSTR IN WSS-VARI TO FRM-NUM-DENT IN CMT-FLD.
           MOVE WSS-NUM-MSTR IN WSS-VARI TO FRM-NUM-MENT IN CMT-FLD.
           MOVE WSS-NUM-SSTR IN WSS-VARI TO FRM-NUM-SENT IN CMT-FLD.
           MOVE WSS-NUM-ASTR IN WSS-VARI TO FRM-NUM-AENT IN CMT-FLD.
       FIN-PUT-FENT.
           EXIT.

       PUT-NENT SECTION.
       INI-PUT-NENT.
           MOVE 3 TO WSS-LKEY.
           PERFORM PUT-STRN VARYING FRM-IFLD FROM 1 BY 1 UNTIL
                            FRM-IFLD > WSS-LKEY.
           MOVE WSS-NUM-NUM3 IN WSS-VARI TO FRM-NUM-IENT IN CMT-FLD.
       FIN-PUT-NENT.
           EXIT.

       PUT-CENT SECTION.
       INI-PUT-CENT.
           MOVE 3 TO WSS-LKEY.
           PERFORM PUT-STRN VARYING FRM-IFLD FROM 1 BY 1 UNTIL
                            FRM-IFLD > WSS-LKEY.
           MOVE WSS-STRN IN WSS-VARI TO FRM-COD-IENT IN CMT-FLD.
       FIN-PUT-CENT.
           EXIT.

       PUT-STRN SECTION.
       INI-PUT-STRN.
           IF WSS-NENT > WSS-LENT
               ADD 1 WSS-LKEY GIVING FRM-IFLD
               GO TO FIN-PUT-STRN.
           MOVE WSS-CHR-IENT( WSS-NENT ) TO WSS-CHR-STRN( FRM-IFLD ).
           ADD 1 TO WSS-NENT.
       FIN-PUT-STRN.
           EXIT.
      *>>>>
*% END
*% IF EOF
      *<<<< EOF
*% IF PGM_DOS OR PGM_MVS
      *INI-PENTA TUXEDO ORACLE
      *CHK-QUEU SECTION.                                                
      *INI-CHK-QUEU.                                                    
      *    MOVE 1 TO QUE-NITM.                                          
      *    MOVE QUE-GET TO QUE-CMND.                                    
      *    PERFORM GNS-PRO-QUE.                                         
      *FIN-CHK-QUEU.                                                    
      *    EXIT.                                                        
      *                                                                 
      *QUE-EOQ SECTION.                                                 
      *INI-QUE-EOQ.                                                     
      *    MOVE QUE-STAT-EOQ TO QUE-STAT.                               
      *    GO TO FIN-GNS-PRO-QUE.                                       
      *FIN-QUE-EOQ.                                                     
      *    EXIT.                                                        
      *                                                                 
      *QUE-NEX SECTION.                                                 
      *INI-QUE-NEX.                                                     
      *    MOVE QUE-STAT-NEX TO QUE-STAT.                               
      *    GO TO FIN-GNS-PRO-QUE.                                       
      *FIN-QUE-NEX.                                                     
      *    EXIT.                                                        
      *                                                                 
      **************************************************************   
      *                                                                 
      *ERR-QUE SECTION.                                                 
      *INI-ERR-QUE.                                                     
      *    EXEC CICS HANDLE CONDITION                                   
      *              QIDERR (QUE-NEX)                                   
      *              ITEMERR(QUE-EOQ)                                   
      *    END-EXEC.                                                    
      *FIN-ERR-QUE.                                                     
      *    EXIT.                                                        
      *                                                                 
      *GNS-PRO-QUE SECTION.                                             
      *INI-GNS-PRO-QUE.                                                 
      *    IF QUE-CMND = QUE-PUT                                        
      *        GO TO PUT-QUE                                            
      *    ELSE                                                         
      *    IF QUE-CMND = QUE-GET                                        
      *        GO TO GET-QUE                                            
      *    ELSE                                                         
      *    IF QUE-CMND = QUE-MOD                                        
      *        GO TO MOD-QUE                                            
      *    ELSE                                                         
      *    IF QUE-CMND = QUE-DEL                                        
      *        GO TO DEL-QUE.                                           
      *    MOVE 'Comando invalido :' TO QUE-MEN1.                       
      *    MOVE QUE-CMND             TO QUE-MEN2.                       
      *    EXEC CICS XCTL                                               
      *              PROGRAM('GNSPPABT')                                
      *              COMMAREA(QUE-MENS)                                 
      *              LENGTH(+79)                                        
      *    END-EXEC.                                                    
                                                                       
      *    MOVE +79                  TO LEN.
      *    MOVE "CARRAY"             TO REC-TYPE.
      *    MOVE 'GNSPPABT'           TO SERVICE-NAME.
      *    CALL "TPFORWARD" USING TPSVCDEF-REC
      *                           TPTYPE-REC
      *                           QUE-MENS
      *                           TPSTATUS-REC.
      *    GOBACK.
      *                                                                 
      *PUT-QUE.                                                         
      *    EXEC CICS WRITEQ TS                                          
      *              QUEUE(QUE-COLA)                                    
      *              FROM(QUE-ITEM)                                     
      *              LENGTH(QUE-LITM)                                   
      *              AUXILIARY                                          
      *    END-EXEC.                                                    
      *    MOVE QUE-CMND TO QUE-COM-SEND.
      *    MOVE SPACES   TO QUE-NAM-SEND.
      *    MOVE QUE-COLA TO QUE-NAM-SEND.
      *    MOVE ZEROES   TO QUE-NUM-SEND.
      *    MOVE QUE-LITM TO QUE-LAR-SEND.
      *    MOVE SPACES   TO QUE-TRX-SEND.
      *    MOVE QUE-ITEM TO QUE-DAT-SEND.
      *    PERFORM GNS-MSJ-QUE.
      *FIN-PUT-QUE.                                                     
      *    GO TO FIN-GNS-PRO-QUE.                                       
      *                                                                 
      *GET-QUE.                                                         
      *    EXEC CICS READQ TS                                           
      *              QUEUE(QUE-COLA)                                    
      *              INTO(QUE-ITEM)                                     
      *              LENGTH(QUE-LITM)                                   
      *              ITEM(QUE-NITM)                                     
      *    END-EXEC.                                                    
      *    MOVE QUE-CMND TO QUE-COM-SEND.
      *    MOVE SPACES   TO QUE-NAM-SEND.
      *    MOVE QUE-COLA TO QUE-NAM-SEND.
      *    MOVE QUE-NITM TO QUE-NUM-SEND.
      *    MOVE QUE-LITM TO QUE-LAR-SEND.
      *    MOVE SPACES   TO QUE-TRX-SEND.
      *    MOVE SPACES   TO QUE-DAT-SEND.
      *    PERFORM GNS-MSJ-QUE.
      *FIN-GET-QUE.                                                     
      *    GO TO FIN-GNS-PRO-QUE.                                       
      *                                                                 
      *MOD-QUE.                                                         
      *    EXEC CICS WRITEQ TS                                          
      *              QUEUE(QUE-COLA)                                    
      *              FROM(QUE-ITEM)                                     
      *              LENGTH(QUE-LITM)                                   
      *              ITEM(QUE-NITM)                                     
      *              REWRITE                                            
      *    END-EXEC.                                                    
      *    MOVE QUE-CMND TO QUE-COM-SEND.
      *    MOVE SPACES   TO QUE-NAM-SEND.
      *    MOVE QUE-COLA TO QUE-NAM-SEND.
      *    MOVE QUE-NITM TO QUE-NUM-SEND.
      *    MOVE QUE-LITM TO QUE-LAR-SEND.
      *    MOVE SPACES   TO QUE-TRX-SEND.
      *    MOVE QUE-ITEM TO QUE-DAT-SEND.
      *    PERFORM GNS-MSJ-QUE.
      *FIN-MOD-QUE.                                                     
      *    GO TO FIN-GNS-PRO-QUE.                                       
      *                                                                 
      *DEL-QUE.                                                         
      *    EXEC CICS DELETEQ TS                                         
      *              QUEUE(QUE-COLA)                                    
      *    END-EXEC.                                                    
      *    MOVE QUE-CMND TO QUE-COM-SEND.
      *    MOVE SPACES   TO QUE-NAM-SEND
      *    MOVE QUE-COLA TO QUE-NAM-SEND.
      *    MOVE ZEROES   TO QUE-NUM-SEND.
      *    MOVE ZEROES   TO QUE-LAR-SEND.
      *    MOVE SPACES   TO QUE-TRX-SEND.
      *    MOVE SPACES   TO QUE-DAT-SEND.
      *    PERFORM GNS-MSJ-QUE.
      *FIN-DEL-QUE.                                                     
      *    GO TO FIN-GNS-PRO-QUE.                                       
      *                                                                 
      *FIN-GNS-PRO-QUE.                                                 
      *    EXIT.                                                        
      *FIN-PENTA TUXEDO ORACLE

*% END
      *>>>>
*% END
*% IF EOF_PQ
      *<<<< EOF_PQ
       RET-ALL-CMT SECTION.
       INI-RET-ALL-CMT.
           PERFORM KEY-ALL-CMT.
           PERFORM RET-RCE-CMT.
           PERFORM RET-DBC-CMT.
           PERFORM RET-CMT-CMT.
       FIN-RET-ALL-CMT.
           EXIT.
       
       RET-RCE-CMT SECTION.
       INI-RET-RCE-CMT.
       FIN-RET-RCE-CMT.
           EXIT.
       
       RET-DBC-CMT SECTION.
       INI-RET-DBC-CMT.
       FIN-RET-DBC-CMT.
           EXIT.
       
       RET-CMT-CMT SECTION.
       INI-RET-CMT-CMT.
           MOVE CMT-COD-UBIC IN CMT-FLD TO CMT-COD-UBIC IN CMT.
           MOVE CMT-COD-AUTC IN CMT-FLD TO CMT-COD-AUTC IN CMT.
           MOVE CMT-GLS-REFE IN CMT-FLD TO CMT-GLS-REFE IN CMT.
           MOVE CMT-GLS-FILL IN CMT-FLD TO CMT-GLS-FILL IN CMT.
       FIN-RET-CMT-CMT.
           EXIT.
      *>>>>
*% END
*% IF EOF_PU
      *<<<< EOF_PU
       VAL-RCE-COD-ENTI SECTION.
       INI-VAL-RCE-COD-ENTI.
           IF RCE-COD-ENTI IN CMT-FLD NOT > SPACES
              MOVE SPACES TO RCE-COD-ENTI IN CMT-FLD.
      *<<<< RCE_COD_ENTI
           IF SCR-IINS = WSS-YA-BUSQUE-GLOSAS
               GO TO FIN-VAL-RCE-COD-ENTI.
           IF SCR-SISG NOT > SPACES
               MOVE SCR-SIST TO TAB-COD-SIST
           ELSE
               MOVE SCR-SISG TO TAB-COD-SIST.
           IF RCE-COD-ENTI IN CMT-FLD > SPACES
               GO TO CON-VAL-RCE-COD-ENTI.

*%! RVM: 01-04-92 VSI NO MANEJA PFS DEPENDIENTES DE DTC
*% IF PGM_DTC
           IF NOT ( FRM-FFLD = FRM-FFLD-PF7 OR FRM-FFLD-PF8 )
               PERFORM ERR-GLS
               GO TO FIN-VAL-RCE-COD-ENTI.
*% END
           MOVE 'ENT'  TO TAB-COD-TTAB IN TAB.
           MOVE SPACES TO TAB-COD-CTAB IN TAB.
           MOVE TAB-COD-SIST TO FIO-SIST.
           MOVE FIO-GET-NLS  TO FIO-CMND.
       LUP-VAL-RCE-COD-ENTI.
           PERFORM GNS-FIO-TAB.
           IF FIO-STAT-OKS AND TAB-COD-TTAB IN TAB = 'ENT'
               IF TAB-COD-CTAB IN TAB > SPACES AND
                  TAB-MSC-STAT IN TAB NOT = 'N'
                   MOVE TAB-COD-CTAB IN TAB TO RCE-COD-ENTI IN CMT-FLD
                   MOVE TAB-GLS-DESC IN TAB TO FRM-GLS-ENTI IN CMT-FLD
                   PERFORM BUS-FRM-NORD
                   PERFORM BUS-KEY-QUE
                   GO TO FIN-VAL-RCE-COD-ENTI
               ELSE
                   MOVE FIO-GET-NXT TO FIO-CMND
                   GO TO LUP-VAL-RCE-COD-ENTI
           ELSE
               MOVE 'GNS'        TO MSG-COD-SIST
               MOVE 'CODCTABNEX' TO MSG-COD-MENS
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS
               MOVE FRM-SUAR-MAL TO FRM-SUAR
               GO TO FIN-VAL-RCE-COD-ENTI.
       CON-VAL-RCE-COD-ENTI.
      *    Valida codigo de tabla
           MOVE 'ENT' TO TAB-COD-TTAB IN TAB.
           MOVE RCE-COD-ENTI IN CMT-FLD TO TAB-COD-CTAB IN TAB.
           PERFORM VAL-COD.
           IF MSG-COD-MENS NOT = 'COD    NEX' AND
              RCE-COD-ENTI IN CMT-FLD > SPACES
               MOVE TAB-GLS-DESC IN TAB TO FRM-GLS-ENTI IN CMT-FLD
           ELSE
               MOVE SPACES TO FRM-GLS-ENTI IN CMT-FLD.
           IF FRM-SUAR = FRM-SUAR-MAL
               GO TO FIN-VAL-RCE-COD-ENTI.
           PERFORM CLR-KEY-KFRM.
           PERFORM BUS-FRM-NORD.
           PERFORM BUS-KEY-QUE.

*%! RVM: 01-04-92 VSI NO MANEJA PFS DEPENDIENTES DE DTC
*% IF PGM_DTC
           IF FRM-FFLD = FRM-FFLD-PF7 OR FRM-FFLD-PF8
               GO TO FIN-VAL-RCE-COD-ENTI.
*% END
      *ISP   30-AUG-1990 DEBE SER REEMPLAZADO POR VARIABLE
      *     INHIBE MOVE FRM-CPSF TO FRM-CPIM-AEY
           MOVE '1' TO FRM-CPIM-AEY.
           MOVE FRM-CPIM-AEY TO RCE-COD-ENTI-ATR IN CMT-FLD.
           IF SCR-CCPP = 'ING'
               MOVE FRM-CPIM-UBY TO CMT-FEC-FCMT-ATR IN CMT-FLD
           ELSE
               MOVE FRM-CPIM-UBY TO CMT-FEC-FCMT-ATR IN CMT-FLD
               MOVE FRM-CPIM-UBY TO CMT-NUM-GCMT-ATR IN CMT-FLD.
           MOVE 'GNS' TO MSG-COD-SIST.
           MOVE 'GKY    KEYS+' TO MSG-COD-MENS.
           PERFORM GET-MSG.
           MOVE MSG-GLS-DESC TO FRM-MENS.
           MOVE FRM-SUAR-MAL TO FRM-SUAR.
           MOVE WSS-YA-BUSQUE-GLOSAS TO SCR-IINS.
       FIN-VAL-RCE-COD-ENTI.
           EXIT.
      *>>>>
*% END
