*%! Codigo adicional para archivo
*% IF INI_PUT_ALL_EDA
      *<<<< INI_PUT_ALL_EDA
           MOVE EDP-VEC-PODE IN EDP TO WSS-VCT-PODE.
           MOVE SPACES TO EDP-VEC-PODE.
           MOVE WSS-ELM-PODE IN WSS-VCT-PODE(1) TO
                EDP-IND-PODE IN EDP(1).
           MOVE WSS-ELM-PODE IN WSS-VCT-PODE(6) TO
                EDP-IND-PODE IN EDP(2).
           MOVE WSS-ELM-PODE IN WSS-VCT-PODE(2) TO
                EDP-IND-PODE IN EDP(3).
           MOVE WSS-ELM-PODE IN WSS-VCT-PODE(34) TO
                EDP-IND-PODE IN EDP(4).
           MOVE WSS-ELM-PODE IN WSS-VCT-PODE(5) TO
                EDP-IND-PODE IN EDP(5).
           MOVE WSS-ELM-PODE IN WSS-VCT-PODE(10) TO
                EDP-IND-PODE IN EDP(6).
           MOVE WSS-ELM-PODE IN WSS-VCT-PODE(33) TO
                EDP-IND-PODE IN EDP(7).
           MOVE WSS-ELM-PODE IN WSS-VCT-PODE(55) TO
                EDP-IND-PODE IN EDP(8).
           MOVE WSS-ELM-PODE IN WSS-VCT-PODE(56) TO
                EDP-IND-PODE IN EDP(9).
           MOVE WSS-ELM-PODE IN WSS-VCT-PODE(14) TO
                EDP-IND-PODE IN EDP(10).
           MOVE WSS-ELM-PODE IN WSS-VCT-PODE(53) TO
                EDP-IND-PODE IN EDP(11).
           MOVE WSS-ELM-PODE IN WSS-VCT-PODE(57) TO
                EDP-IND-PODE IN EDP(12).
           MOVE WSS-ELM-PODE IN WSS-VCT-PODE(9) TO
                EDP-IND-PODE IN EDP(13).
           MOVE WSS-ELM-PODE IN WSS-VCT-PODE(58) TO
                EDP-IND-PODE IN EDP(14).
           MOVE WSS-ELM-PODE IN WSS-VCT-PODE(4) TO
                EDP-IND-PODE IN EDP(15).
           MOVE WSS-ELM-PODE IN WSS-VCT-PODE(59) TO
                EDP-IND-PODE IN EDP(16).
           MOVE WSS-ELM-PODE IN WSS-VCT-PODE(13) TO
                EDP-IND-PODE IN EDP(17).
           MOVE WSS-ELM-PODE IN WSS-VCT-PODE(60) TO
                EDP-IND-PODE IN EDP(18).
           MOVE WSS-ELM-PODE IN WSS-VCT-PODE(8) TO
                EDP-IND-PODE IN EDP(19).
           MOVE WSS-ELM-PODE IN WSS-VCT-PODE(61) TO
                EDP-IND-PODE IN EDP(20).
           MOVE WSS-ELM-PODE IN WSS-VCT-PODE(17) TO
                EDP-IND-PODE IN EDP(21).
           MOVE WSS-ELM-PODE IN WSS-VCT-PODE(18) TO
                EDP-IND-PODE IN EDP(22).
           MOVE WSS-ELM-PODE IN WSS-VCT-PODE(12) TO
                EDP-IND-PODE IN EDP(23).
           MOVE WSS-ELM-PODE IN WSS-VCT-PODE(38) TO
                EDP-IND-PODE IN EDP(24).
           MOVE WSS-ELM-PODE IN WSS-VCT-PODE(21) TO
                EDP-IND-PODE IN EDP(25).
           MOVE WSS-ELM-PODE IN WSS-VCT-PODE(22) TO
                EDP-IND-PODE IN EDP(26).
           MOVE WSS-ELM-PODE IN WSS-VCT-PODE(31) TO
                EDP-IND-PODE IN EDP(27).
           MOVE WSS-ELM-PODE IN WSS-VCT-PODE(42) TO
                EDP-IND-PODE IN EDP(28).
           MOVE WSS-ELM-PODE IN WSS-VCT-PODE(24) TO
                EDP-IND-PODE IN EDP(29).
           MOVE WSS-ELM-PODE IN WSS-VCT-PODE(32) TO
                EDP-IND-PODE IN EDP(30).
           MOVE WSS-ELM-PODE IN WSS-VCT-PODE(35) TO
                EDP-IND-PODE IN EDP(31).
           MOVE WSS-ELM-PODE IN WSS-VCT-PODE(46) TO
                EDP-IND-PODE IN EDP(32).
           MOVE WSS-ELM-PODE IN WSS-VCT-PODE(36) TO
                EDP-IND-PODE IN EDP(33).
           MOVE WSS-ELM-PODE IN WSS-VCT-PODE(39) TO
                EDP-IND-PODE IN EDP(34).
           MOVE WSS-ELM-PODE IN WSS-VCT-PODE(62) TO
                EDP-IND-PODE IN EDP(35).
           MOVE WSS-ELM-PODE IN WSS-VCT-PODE(3) TO
                EDP-IND-PODE IN EDP(36).
           MOVE WSS-ELM-PODE IN WSS-VCT-PODE(40) TO
                EDP-IND-PODE IN EDP(37).
           MOVE WSS-ELM-PODE IN WSS-VCT-PODE(43) TO
                EDP-IND-PODE IN EDP(38).
           MOVE WSS-ELM-PODE IN WSS-VCT-PODE(63) TO
                EDP-IND-PODE IN EDP(39).
           MOVE WSS-ELM-PODE IN WSS-VCT-PODE(7) TO
                EDP-IND-PODE IN EDP(40).
           MOVE WSS-ELM-PODE IN WSS-VCT-PODE(44) TO
                EDP-IND-PODE IN EDP(41).
           MOVE WSS-ELM-PODE IN WSS-VCT-PODE(47) TO
                EDP-IND-PODE IN EDP(42).
           MOVE WSS-ELM-PODE IN WSS-VCT-PODE(64) TO
                EDP-IND-PODE IN EDP(43).
           MOVE WSS-ELM-PODE IN WSS-VCT-PODE(11) TO
                EDP-IND-PODE IN EDP(44).
           MOVE WSS-ELM-PODE IN WSS-VCT-PODE(48) TO
                EDP-IND-PODE IN EDP(45).
           MOVE WSS-ELM-PODE IN WSS-VCT-PODE(51) TO
                EDP-IND-PODE IN EDP(46).
           MOVE WSS-ELM-PODE IN WSS-VCT-PODE(50) TO
                EDP-IND-PODE IN EDP(47).
           MOVE WSS-ELM-PODE IN WSS-VCT-PODE(15) TO
                EDP-IND-PODE IN EDP(48).
           MOVE WSS-ELM-PODE IN WSS-VCT-PODE(52) TO
                EDP-IND-PODE IN EDP(49).
           MOVE WSS-ELM-PODE IN WSS-VCT-PODE(16) TO
                EDP-IND-PODE IN EDP(50).
           MOVE WSS-ELM-PODE IN WSS-VCT-PODE(65) TO
                EDP-IND-PODE IN EDP(51).
           MOVE WSS-ELM-PODE IN WSS-VCT-PODE(19) TO
                EDP-IND-PODE IN EDP(52).
           MOVE WSS-ELM-PODE IN WSS-VCT-PODE(54) TO
                EDP-IND-PODE IN EDP(53).
           MOVE WSS-ELM-PODE IN WSS-VCT-PODE(20) TO
                EDP-IND-PODE IN EDP(54).
           MOVE WSS-ELM-PODE IN WSS-VCT-PODE(27) TO
                EDP-IND-PODE IN EDP(55).
      *>>>>
*% END
*% IF FIN_PUT_ALL_EDA
      *<<<< FIN_PUT_ALL_EDA
           PERFORM SET-QUE.
           MOVE QUE-MOD TO QUE-CMND.
           PERFORM GNS-PRO-QUE.
           IF QUE-STAT NOT = QUE-STAT-OKS
               PERFORM SET-QUE
               MOVE QUE-PUT TO QUE-CMND
               PERFORM GNS-PRO-QUE.
           MOVE EDP-CAI-IMDT IN EDA-FLD TO CCM-CAI-IMDT IN CCM.
           MOVE EDP-IIC-IMDT IN EDA-FLD TO CCM-IIC-IMDT IN CCM.
           MOVE 'P'                     TO CCM-IND-TINF IN CCM.
           MOVE EDP-NUM-IEDP IN EDA-FLD TO CCM-NUM-IEDP IN CCM.
           MOVE SPACES                  TO CCM-COD-IPOD IN CCM.
           MOVE ZEROES                  TO CCM-NUM-IGRP IN CCM.
           MOVE ZEROES                  TO CCM-NUM-ICCM IN CCM.
           MOVE FIO-GET-NLS TO FIO-CMND.
           PERFORM SGC-FIO-CCM.
           IF FIO-STAT-OKS AND
              EDP-CAI-IMDT IN EDA-FLD = CCM-CAI-IMDT IN CCM AND
              EDP-IIC-IMDT IN EDA-FLD = CCM-IIC-IMDT IN CCM AND
              CCM-IND-TINF IN CCM     = 'P'  AND
              EDP-NUM-IEDP IN EDA-FLD = CCM-NUM-IEDP IN CCM
               MOVE 'S' TO WSS-IND-RSTR IN WSS-VARI
           ELSE
               MOVE 'N' TO WSS-IND-RSTR IN WSS-VARI.
           MOVE EDP-CAI-IMDT IN EDA-FLD TO WSS-CAI-IMDT.
           MOVE EDP-IIC-IMDT IN EDA-FLD TO WSS-IIC-IMDT.
           MOVE EDP-NUM-IEDP IN EDA-FLD TO WSS-NUM-IEDP.
           MOVE SPACES                  TO WSS-IND-PODE.
      *ALD
      *    MOVE SCR-SIST                TO RCE-COD-SIST IN RCE.
           MOVE 'SGC'                   TO RCE-COD-SIST IN RCE.
           MOVE 'CFP'                   TO RCE-COD-ENTI IN RCE.
           MOVE WSS-GLS-IENT            TO RCE-GLS-IENT IN RCE.
           MOVE 'RCE-KEY-IENT' TO FIO-AKEY.
           MOVE FIO-GET-NLS TO FIO-CMND.
           PERFORM GNS-FIO-RCE.
           MOVE RCE-GLS-IENT TO WSS-GLS-IENT.
           MOVE 'N' TO WSS-IND-CMTR IN WSS-VARI.
           IF     FIO-STAT-OKS
      *ALD
      *       AND RCE-COD-SIST = SCR-SIST
              AND RCE-COD-SIST = 'SGC'
              AND RCE-COD-ENTI = 'CFP'
              IF     WSS-CAI-IMDT = EDP-CAI-IMDT IN EDA-FLD 
                 AND WSS-IIC-IMDT = EDP-IIC-IMDT IN EDA-FLD
                 AND WSS-NUM-IEDP = EDP-NUM-IEDP IN EDA-FLD 
                 MOVE 'S' TO WSS-IND-CMTR IN WSS-VARI.
            MOVE 'SGC'          TO MSG-COD-SIST.
            MOVE 'EDPRSTCMT'    TO WSS-GLS-MENS IN WSS-VARI.
            MOVE WSS-COD-MENS IN WSS-VARI TO MSG-COD-MENS.
            PERFORM GET-MSG.
            MOVE MSG-GLS-DESC TO FRM-MEN2.

           IF SCR-CMND = 'CON'
               MOVE 'SGC'          TO FIO-SIST
               MOVE 'VSN'          TO TAB-COD-TTAB IN TAB
               MOVE 'FECEDP'       TO TAB-COD-CTAB IN TAB
               MOVE FIO-GET-KEY TO FIO-CMND
               PERFORM GNS-FIO-TAB
               IF FIO-STAT-OKS AND
                  TAB-MSC-STAT IN TAB = 'S'
                   MOVE TAB-GLS-DCOR IN TAB TO WSS-FEC-FEDP
                   IF EDP-FEC-FTRN IN EDP > WSS-FEC-FEDP
                       PERFORM CLR-FLD-EDA
                       MOVE 'SGC'          TO MSG-COD-SIST
                       MOVE 'EDPFTRN>FVSN' TO MSG-COD-MENS
                       PERFORM GET-MSG
                       MOVE MSG-GLS-DESC TO FRM-MENS
                   ELSE
                       NEXT SENTENCE
               ELSE
                   NEXT SENTENCE.
      *>>>>
*% END
*% IF EDP_FEC_FINF
      *<<<< EDP_FEC_FINF
           IF EDP-FEC-FINF IN EDA-FLD NOT > ZEROES
               PERFORM GET-FHOY
               MOVE HOY-DHOY TO EDP-NUM-DINF IN EDA-FLD
               MOVE HOY-MHOY TO EDP-NUM-MINF IN EDA-FLD
               MOVE HOY-SHOY TO EDP-NUM-SINF IN EDA-FLD
               MOVE HOY-AHOY TO EDP-NUM-AINF IN EDA-FLD.
      *>>>>
*% END
*% IF FRM_GLS_NMDR
      *<<<< FRM_GLS_NMDR
           IF NOT (FRM-GLS-NMDR IN EDA-FLD > SPACES AND
              FRM-NUM-IMDR IN EDA-FLD NOT > ZEROES )
               GO TO FIN-VAL-FRM-GLS-NMDR.
           MOVE SPACES TO DBC-GLS-NOMC IN DBC.
      *NOM-CLI Busca Cliente por medio del Nombre

           MOVE FRM-GLS-NMDR IN EDA-FLD TO STR-GLS-GSTR
           PERFORM STR-UNS
           MOVE STR-GLS-FUNS IN STR-VARI(1) TO DBC-GLS-APAT IN DBC
           MOVE STR-GLS-FUNS IN STR-VARI(2) TO DBC-GLS-AMAT IN DBC
           MOVE STR-GLS-FUNS IN STR-VARI(3) TO DBC-GLS-NOMB IN DBC.

           MOVE 'DBC-GLS-NOMC'  TO FIO-AKEY.
           MOVE FIO-GET-NLS TO FIO-CMND.
           PERFORM SGC-FIO-DBC.
           IF NOT FIO-STAT-OKS
               MOVE 'CLI    NEX' TO MSG-COD-MENS
               MOVE 'SGC'        TO MSG-COD-SIST
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS
               MOVE FRM-SUAR-MAL TO FRM-SUAR
               GO TO FIN-VAL-FRM-GLS-NMDR.
           MOVE DBC-GLS-NOMC IN DBC TO CPT-STRN.
           PERFORM CPT-BLKS.
           MOVE CPT-STRN TO FRM-GLS-NMDR IN EDA-FLD.
           MOVE DBC-NUM-ICLI IN DBC TO FRM-NUM-IMDR IN EDA-FLD.
           MOVE DBC-VRF-ICLI IN DBC TO FRM-VRF-IMDR IN EDA-FLD.
           MOVE DBC-IND-ICLI IN DBC TO FRM-IND-IMDR IN EDA-FLD.
           MOVE DBC-GLS-ICLI IN DBC TO FRM-GLS-IMDR IN EDA-FLD.
           IF EDP-CAI-IMDT IN EDA-FLD = DBC-CAI-ICLI IN DBC AND
              EDP-IIC-IMDT IN EDA-FLD = DBC-IIC-ICLI IN DBC 
               MOVE 'SGC' TO MSG-COD-SIST
               MOVE 'CICIMDTIMDR=' TO MSG-COD-MENS
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS
               MOVE FRM-SUAR-MAL TO FRM-SUAR
               GO TO FIN-VAL-FRM-GLS-NMDR.
           MOVE DBC-CAI-ICLI IN DBC TO ADP-CAI-IAPO IN EDA-FLD.
           MOVE DBC-IIC-ICLI IN DBC TO ADP-IIC-IAPO IN EDA-FLD.
      *>>>>
*% END
*% IF FRM_VRF_IMDR
      *<<<< FRM_VRF_IMDR
           IF FRM-SUAR = FRM-SUAR-MAL OR FRM-SUAR-CLR
               GO TO FIN-VAL-FRM-VRF-IMDR.
           IF FRM-NUM-IMDR IN EDA-FLD NOT > ZEROES
               MOVE SPACES TO FRM-IND-IMDR IN EDA-FLD
               MOVE SPACES TO FRM-GLS-IMDR IN EDA-FLD
               MOVE SPACES TO FRM-VRF-IMDR IN EDA-FLD
               MOVE SPACES TO FRM-GLS-NMDR IN EDA-FLD
               GO TO FIN-VAL-FRM-VRF-IMDR.
           MOVE FRM-NUM-IMDR IN EDA-FLD TO DBC-NUM-ICLI IN DBC.
           MOVE FRM-IND-IMDR IN EDA-FLD TO DBC-IND-ICLI IN DBC.
           MOVE FRM-GLS-IMDR IN EDA-FLD TO DBC-GLS-ICLI IN DBC.
           MOVE 'DBC-IDC-ICLI'  TO FIO-AKEY.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM SGC-FIO-DBC.
           MOVE FIO-STAT TO PGM-STAT-DBC.
           IF NOT FIO-STAT-OKS
               MOVE 'CLI    NEX' TO MSG-COD-MENS
               MOVE 'SGC'        TO MSG-COD-SIST
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS
               MOVE FRM-SUAR-MAL TO FRM-SUAR
               GO TO FIN-VAL-FRM-VRF-IMDR
           ELSE
               MOVE DBC-GLS-NOMC IN DBC TO CPT-STRN
               PERFORM CPT-BLKS
               MOVE CPT-STRN TO FRM-GLS-NMDR IN EDA-FLD.
           IF EDP-CAI-IMDT IN EDA-FLD = DBC-CAI-ICLI IN DBC AND
              EDP-IIC-IMDT IN EDA-FLD = DBC-IIC-ICLI IN DBC 
               MOVE 'SGC' TO MSG-COD-SIST
               MOVE 'CICIMDTIMDR=' TO MSG-COD-MENS
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS
               MOVE FRM-SUAR-MAL TO FRM-SUAR
               GO TO FIN-VAL-FRM-VRF-IMDR.
           MOVE DBC-CAI-ICLI IN DBC TO ADP-CAI-IAPO IN EDA-FLD.
           MOVE DBC-IIC-ICLI IN DBC TO ADP-IIC-IAPO IN EDA-FLD.
      *>>>>
*% END 
*% IF FIN_PUT_DBC_EDA
      *<<<< FIN_PUT_DBC_EDA
            MOVE DBC-GLS-NOMC IN DBC TO CPT-STRN.
            PERFORM CPT-BLKS.
            MOVE CPT-STRN TO DBC-GLS-NOMC IN EDA-FLD.
      *>>>>
*% END 
*% IF INI_KEY_EDA_EDA
      *<<<< INI_KEY_EDA_EDA
           MOVE 'P' TO EDP-IND-TINF IN EDP.
      *>>>>
*% END 
*% IF EDP_IND_PODE
      *<<<< EDP_IND_PODE
           IF EDP-IND-PODE IN EDA-FLD(FRM-IFLD) NOT > SPACES
               MOVE 'N' TO EDP-IND-PODE IN EDA-FLD(FRM-IFLD)
               GO TO FIN-VAL-EDP-IND-PODE.
      *>>>>
*% END
*% IF INI_VAL_CON_KEY_EDA
      *<<<< INI_VAL_CON_KEY_EDA
           IF FRM-FFLD = FRM-FFLD-PF7 OR FRM-FFLD-PF8
               GO TO FIN-VAL-CON-KEY-EDA.
      *>>>>
*% END
*% IF FIN_VAL_CON_KEY_EDA
      *<<<< FIN_VAL_CON_KEY_EDA
           IF NOT ( ( ( DBC-GLS-NOMC IN EDA-FLD     > SPACES     OR
                        DBC-NUM-ICLI IN EDA-FLD     > ZEROES )   AND
                        EDP-NUM-IEDP IN EDA-FLD     > ZEROES )   OR
                    ( ( DBC-GLS-NOMC IN EDA-FLD     > SPACES     OR
                        DBC-NUM-ICLI IN EDA-FLD     > ZEROES )   AND
                        EDP-NUM-IEDP IN EDA-FLD NOT > ZEROES ) ) 
                MOVE 'GNS' TO MSG-COD-SIST
                MOVE 'VALCONKEY' TO MSG-COD-MENS
                PERFORM GET-MSG
                MOVE MSG-GLS-DESC TO FRM-MENS
                MOVE FRM-SUAR-MAL TO FRM-SUAR
                GO TO FIN-VAL-CON-KEY-EDA.
      *>>>>
*% END
*% IF VAL_CON_FLD_EDA
      *<<<< VAL_CON_FLD_EDA
           IF FRM-GLS-NMDR IN EDA-FLD NOT > SPACES  AND
              FRM-NUM-IMDR IN EDA-FLD NOT > ZEROES  AND
              ADP-COD-CLAP IN EDA-FLD NOT > SPACES  AND
              ADP-NUM-APAR IN EDA-FLD NOT > ZEROES  
               MOVE 'SGC' TO MSG-COD-SIST
               MOVE 'ADP    BLK' TO MSG-COD-MENS
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC   TO FRM-MENS
               MOVE FRM-SUAR-MAL   TO FRM-SUAR
               GO TO FIN-VAL-CON-FLD-EDA.
           IF NOT ( ( ( FRM-GLS-NMDR IN EDA-FLD > SPACES       OR
                        FRM-NUM-IMDR IN EDA-FLD > ZEROES )     AND
                        ADP-COD-CLAP IN EDA-FLD NOT > SPACES   AND
                        ADP-NUM-APAR IN EDA-FLD NOT > ZEROES ) OR
                      ( FRM-GLS-NMDR IN EDA-FLD NOT > SPACES   AND
                        FRM-NUM-IMDR IN EDA-FLD NOT > ZEROES   AND
                      ( ADP-COD-CLAP IN EDA-FLD > SPACES       OR 
                        ADP-NUM-APAR IN EDA-FLD > ZEROES ) ) )
               MOVE 'SGC'          TO MSG-COD-SIST
               MOVE 'ADP    NOCON' TO MSG-COD-MENS
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC   TO FRM-MENS
               MOVE FRM-SUAR-MAL   TO FRM-SUAR
               GO TO FIN-VAL-CON-FLD-EDA.
           IF ( FRM-GLS-NMDR IN EDA-FLD NOT > SPACES   AND
                FRM-NUM-IMDR IN EDA-FLD NOT > ZEROES   AND
                ADP-COD-CLAP IN EDA-FLD     > SPACES   AND
                ADP-NUM-APAR IN EDA-FLD NOT > ZEROES ) OR
              ( FRM-GLS-NMDR IN EDA-FLD NOT > SPACES   AND
                FRM-NUM-IMDR IN EDA-FLD NOT > ZEROES   AND
                ADP-COD-CLAP IN EDA-FLD NOT > SPACES   AND
                ADP-NUM-APAR IN EDA-FLD     > ZEROES ) 
               MOVE 'SGC'          TO MSG-COD-SIST
               MOVE 'CODCLAPNOCON' TO MSG-COD-MENS
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC   TO FRM-MENS
               MOVE FRM-SUAR-MAL   TO FRM-SUAR
               GO TO FIN-VAL-CON-FLD-EDA.
      *>>>>
*% END
