       IDENTIFICATION DIVISION.
      *========================
       PROGRAM-ID.   TABPUCAM.
       AUTHOR.       CONSIST.
       DATE-WRITTEN. 27-Aug-93 10:01 PM.

      * NOMBRE PROGRAMA                   TABPUCAM
      * VERSION                           3.1
      * OPCION                            UPD
      * ARCHIVO BASE                      TABCAM
      * PANTALLA                          TABCAM
      * INP/OUT                           DATACOM
      * TAMANO COMMAREA                   250

      *<<<< PGM_VMS OR PGM_MVS
      *>>>> END
      *<<<< PGM_VMS OR PGM_MVS
      *>>>> END

       ENVIRONMENT DIVISION.
      *=====================
       CONFIGURATION SECTION.
      *----------------------
       SPECIAL-NAMES.
               DECIMAL-POINT IS COMMA.

       DATA DIVISION.
      *==============

       WORKING-STORAGE SECTION.
      *------------------------
      * COPY GNSWGSCR.
       COPY GNSWCSCR.
       COPY GNSWVSCR.
      *<<<< PGM_VMS OR PGM_MVS
      *>>>> END
      *<<<< PGM_VMS OR PGM_MVS
      *>>>> END
       COPY TABWICAM.
       COPY TABBRCAM.


       COPY GNSWVIDD.
       COPY GNSWGRQA.
       COPY GNSWGUIB.
       COPY GNSWGELS.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-CAM-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-TAB-REQA==.
       COPY GNSBRTAB.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-MSG-REQA==.
       COPY GNSBRMSG.
       COPY GNSWCFIO.
       COPY GNSWVFIO.
       COPY GNSWGFRM.
       COPY GNSWVNUM.
       COPY GNSWCNUM.
       COPY GNSWGFEC.
       COPY GNSWGHOY.
       COPY GNSWGSYS.

      *<<<< WSS
      *<<<< PGM_PU
       COPY TABWGVCT.
      *    Valor de Cambio auxiliar para conversion comp-3 -> comp
       01  WSS-SGV-VCAM                      PIC S9(18).
      *>>>>
       COPY TABBRUSR.
       COPY TABBRVLR.
       COPY GNSBRMSC.
       01  WSS-VARI.
           03 WSS-COD-CAMB.
              05 WSS-COD-VCAM OCCURS 2 TIMES.
                 07 WSS-MSC-TVAL         PIC X(01).
                 07 WSS-COD-CVAL         PIC X(03).
                 07 WSS-COD-TCAM         PIC X(02).
           03  WSS-FEC-FCAM OCCURS 2 TIMES.
               05 WSS-NUM-SCAM           PIC 9(02).
               05 WSS-NUM-ACAM           PIC 9(02).
               05 WSS-NUM-MCAM           PIC 9(02).
               05 WSS-NUM-DCAM           PIC 9(02).
      *>>>>
      *<<<< PGM_VMS OR PGM_MVS
      *>>>> END
      *<<<< WSS_DTC
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-VLR-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-USR-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-MSC-REQA==.
      *>>>>
      *<<<< PGM_VMS OR PGM_MVS
      *>>>> END
      *<<<< PGM_VMS OR PGM_MVS
      *>>>> END
       01  PGM-VARI.
           03 PGM-ICLR                  VALUE ' '       PIC X(01).
           03 PGM-LIMPIAR-TODO          VALUE ' '       PIC X(01).
           03 PGM-LIMPIAR-LLAVES        VALUE 'K'       PIC X(01).
           03 PGM-LIMPIAR-CAMPOS        VALUE 'F'       PIC X(01).
           03 PGM-NO-LIMPIAR-NADA       VALUE 'N'       PIC X(01).
           03 PGM-PROG                                  PIC X(08).
           03 PGM-NTRN                                  PIC X(04).
           03 PGM-STAT.
              05 PGM-STAT-TAB.
                 88 PGM-STAT-TAB-NUL    VALUE '  '.
                 07 PGM-STT1-TAB        VALUE '2' PIC X(01).
                    88 PGM-STAT-TAB-OKS VALUE '0'.
                 07 PGM-STT2-TAB        VALUE '3' PIC X(01).
              05 PGM-STAT-CAM.
                 88 PGM-STAT-CAM-NUL    VALUE '  '.
                 07 PGM-STT1-CAM        VALUE '2' PIC X(01).
                    88 PGM-STAT-CAM-OKS VALUE '0'.
                 07 PGM-STT2-CAM        VALUE '3' PIC X(01).
           03 PGM-SRNF                  VALUE '23'      PIC X(02).
           03 PGM-SOKS                  VALUE '00'      PIC X(02).
           03 PGM-SNUL                  VALUE '  '      PIC X(02).
           03 PGM-SUAR                  VALUE SPACES    PIC X(15).

       LINKAGE SECTION.
      *----------------
       01  DFHCOMMAREA.
           02 FILLER                    PIC X(250).
       COPY GNSLGFIO.

       PROCEDURE DIVISION.
      *===================

       MAIN SECTION.
       INI-MAIN.
           PERFORM INI.
       LUP-MAIN.
           IF SCR-INST = SCR-INST-HCM
                 PERFORM SCR-COM.
           IF SCR-CCPP = 'MOD'
                 PERFORM SCR-MOD
           ELSE
           IF SCR-CCPP = 'ING'
                 PERFORM SCR-ING
           ELSE
           IF SCR-CCPP = 'ACC'
                 PERFORM SCR-ACC
           ELSE
           IF SCR-CCPP = 'ELI'
                 PERFORM SCR-ELI
           ELSE
           IF SCR-CCPP = 'ACT'
                 PERFORM SCR-ACT
           ELSE
                 MOVE SCR-INST-HCM TO SCR-INST.
      *<<<< PGM_VMS OR PGM_MVS
      *>>>> END
           GO TO LUP-MAIN.
       FIN-MAIN.
           EXIT.

       INI SECTION.
       INI-INI.
       COPY GNSBGEIB.
      *<<<< PGM_VMS OR PGM_MVS
      *>>>> END
       COPY GNSBGEDB.
           MOVE LOW-VALUES TO CAM-FLD.
           PERFORM GNS-PRO-RCK.
           PERFORM GNS-BUS-VCA.
           PERFORM GNS-HDL-SYS.
           PERFORM GNS-HDL-FRM.
           MOVE 'TABPUCAM' TO FIO-PROG.
           PERFORM GNS-BUS-IDD.
      *<<<< PGM_VMS OR PGM_MVS
      *>>>> END
      *<<<< INI_FIO
           IF SCR-INST = SCR-INST-HKY
              MOVE 'TAB' TO TAB-COD-SIST
              MOVE 'CAM' TO TAB-COD-TTAB IN TAB
              PERFORM ERR-TAB.
      *>>>>
      *<<<< PGM_VMS OR PGM_MVS
      *>>>> END
       FIN-INI.
           EXIT.

       COPY GNSBHSYS.
       COPY GNSBHFRM.
       COPY GNSBPRCK.
       COPY GNSBBVCA.
       COPY GNSBBIDD.

       SCR-COM SECTION.
       INI-SCR-COM.
      *<<<< PGM_VMS OR PGM_MVS
      *>>>> END
           PERFORM STP-EXIT.
           MOVE FRM-CPSF-AEY TO FRM-CPIM-AEY.
           PERFORM PRO-ALL.
           PERFORM SCR-CLRA-CAM.
           PERFORM EDT-KEY-CAM.
           PERFORM EDT-FLD-CAM.
           PERFORM SCR-PUTA.
           MOVE SCR-INST-HCM TO SCR-INST.
           MOVE SCR-CMNP     TO SYS-PROG.
           MOVE SCR-VARI     TO SYS-CMMA.
           MOVE SCR-TCMA     TO SYS-TCMA.
           MOVE SYS-XCTL     TO SYS-CMND.
           PERFORM GNS-PRO-SYS.
       XCT-ERR.
           MOVE 'XCTERR    ' TO MSG-COD-MENS.
           MOVE 'GNS'        TO MSG-COD-SIST.
           PERFORM GET-MSG.
           MOVE MSG-GLS-DESC TO SYS-MEN1.
           MOVE SYS-PROG     TO SYS-MEN2.
           MOVE SYS-ABOR     TO SYS-CMND.
           PERFORM GNS-PRO-SYS.
       COPY GNSBGGBK.
       FIN-SCR-COM.
           EXIT.

       SCR-MOD SECTION.
       INI-SCR-MOD.
      *<<<< PGM_VMS OR PGM_MVS
      *>>>> END
           IF SCR-INST = SCR-INST-HKY
               MOVE SCR-INST-GKY TO SCR-INST
               PERFORM HBL-KEY
               PERFORM SCR-DMSG
           ELSE
           IF SCR-INST = SCR-INST-GFL
               PERFORM GET-FLD
           ELSE
           IF SCR-INST = SCR-INST-GCS
               PERFORM GET-ACC.
           IF FRM-FFLD = FRM-FFLD-PF7 OR FRM-FFLD-PF8 OR
                         FRM-FFLD-PF5 OR FRM-FFLD-PF6
               PERFORM XCT-PRGP.
           PERFORM DESSCRTRL.
       MSG-SCR-MOD.
           IF SCR-STAT = SCR-STAT-CON
               MOVE SPACES TO FRM-MENS
           ELSE
           IF SCR-STAT = SCR-STAT-ABT OR SCR-VFLD = SCR-VFLD-NOT
               MOVE 'MODNOT    ' TO MSG-COD-MENS
               MOVE 'GNS' TO MSG-COD-SIST
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS
           ELSE
               MOVE SPACES TO FRM-MENS
               PERFORM CMN-MOD
               IF FIO-STAT-OKS
                   IF FRM-MENS NOT > SPACES
                       MOVE 'MODYES    ' TO MSG-COD-MENS
                       MOVE 'GNS' TO MSG-COD-SIST
                       PERFORM GET-MSG
                       MOVE MSG-GLS-DESC TO FRM-MENS
                   ELSE
                       NEXT SENTENCE
               ELSE
               IF FRM-MENS NOT > SPACES
                   MOVE 'FIOSTAT' TO MSG-COD-TMSG
                   MOVE FIO-STAT  TO MSG-COD-CMSG
                   MOVE 'GNS'     TO MSG-COD-SIST
                   PERFORM GET-MSG
                   MOVE MSG-GLS-DESC TO FRM-MENS.
           PERFORM SCR-MSSG.
       FIN-SCR-MOD.
      *<<<< PGM_VMS OR PGM_MVS
      *>>>> END
           EXIT.

       SCR-ING SECTION.
       INI-SCR-ING.
      *<<<< PGM_VMS OR PGM_MVS
      *>>>> END
           IF SCR-INST = SCR-INST-HKY
               MOVE SCR-INST-GKY TO SCR-INST
               PERFORM HBL-IKY
               PERFORM SCR-DMSG
           ELSE
           IF SCR-INST = SCR-INST-GFL
                PERFORM GET-FLD
           ELSE
           IF SCR-INST = SCR-INST-GCS
                PERFORM GET-ACC.
           PERFORM DESSCRTRL.
       MSG-SCR-ING.
           IF SCR-STAT = SCR-STAT-CON
               MOVE SPACES TO FRM-MENS
           ELSE
           IF SCR-STAT = SCR-STAT-ABT OR SCR-VFLD = SCR-VFLD-NOT
               MOVE 'INGNOT    ' TO MSG-COD-MENS
               MOVE 'GNS' TO MSG-COD-SIST
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS
           ELSE
               MOVE SPACES TO FRM-MENS
               PERFORM CMN-ING
               IF FIO-STAT-OKS
                   IF FRM-MENS NOT > SPACES
                       MOVE 'INGYES    ' TO MSG-COD-MENS
                       MOVE 'GNS' TO MSG-COD-SIST
                       PERFORM GET-MSG
                       MOVE MSG-GLS-DESC TO FRM-MENS
                   ELSE
                       NEXT SENTENCE
               ELSE
               IF FRM-MENS NOT > SPACES
                   MOVE 'FIOSTAT' TO MSG-COD-TMSG
                   MOVE FIO-STAT  TO MSG-COD-CMSG
                   MOVE 'GNS'     TO MSG-COD-SIST
                   PERFORM GET-MSG
                   MOVE MSG-GLS-DESC TO FRM-MENS.
           PERFORM SCR-MSSG.
       FIN-SCR-ING.
      *<<<< PGM_VMS OR PGM_MVS
      *>>>> END
           EXIT.

       SCR-ACC SECTION.
       INI-SCR-ACC.
      *<<<< PGM_VMS OR PGM_MVS
      *>>>> END
           IF SCR-INST = SCR-INST-HKY
               MOVE SCR-INST-GKY TO SCR-INST
               PERFORM HBL-KEY
               PERFORM SCR-DMSG
           ELSE
           IF SCR-INST = SCR-INST-GFL
                PERFORM GET-FLD
           ELSE
           IF SCR-INST = SCR-INST-GCS
                PERFORM GET-ACC.
           IF FRM-FFLD = FRM-FFLD-PF7 OR FRM-FFLD-PF8 OR
                         FRM-FFLD-PF5 OR FRM-FFLD-PF6
               PERFORM XCT-PRGP.
           PERFORM DESSCRTRL.
           MOVE SPACES TO FRM-MENS.
           IF SCR-STAT NOT = SCR-STAT-CON
               PERFORM CMN-ACC.
           PERFORM SCR-MSSG.
       FIN-SCR-ACC.
      *<<<< PGM_VMS OR PGM_MVS
      *>>>> END
           EXIT.

       SCR-ELI SECTION.
       INI-SCR-ELI.
      *<<<< PGM_VMS OR PGM_MVS
      *>>>> END
           IF SCR-INST = SCR-INST-HKY
               MOVE SCR-INST-GKY TO SCR-INST
               PERFORM HBL-KEY
               PERFORM SCR-DMSG
           ELSE
           IF SCR-INST = SCR-INST-GCS
                PERFORM GET-ACC.
           IF FRM-FFLD = FRM-FFLD-PF7 OR FRM-FFLD-PF8 OR
                         FRM-FFLD-PF5 OR FRM-FFLD-PF6
               PERFORM XCT-PRGP.
           PERFORM DESSCRTRL.
           IF SCR-STAT = SCR-STAT-CON
               MOVE SPACES TO FRM-MENS
           ELSE
           IF SCR-STAT = SCR-STAT-ABT OR SCR-VFLD = SCR-VFLD-NOT
               MOVE 'ELINOT    ' TO MSG-COD-MENS
               MOVE 'GNS' TO MSG-COD-SIST
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS
           ELSE
               MOVE SPACES TO FRM-MENS
               PERFORM CMN-ELI
               IF FIO-STAT-OKS
                   IF FRM-MENS NOT > SPACES
                       MOVE 'ELIYES    ' TO MSG-COD-MENS
                       MOVE 'GNS' TO MSG-COD-SIST
                       PERFORM GET-MSG
                       MOVE MSG-GLS-DESC TO FRM-MENS
                   ELSE
                       NEXT SENTENCE
               ELSE
               IF FRM-MENS NOT > SPACES
                   MOVE 'FIOSTAT' TO MSG-COD-TMSG
                   MOVE FIO-STAT  TO MSG-COD-CMSG
                   MOVE 'GNS'     TO MSG-COD-SIST
                   PERFORM GET-MSG
                   MOVE MSG-GLS-DESC TO FRM-MENS.
           PERFORM SCR-MSSG.
       FIN-SCR-ELI.
      *<<<< PGM_VMS OR PGM_MVS
      *>>>> END
           EXIT.

       SCR-ACT SECTION.
       INI-SCR-ACT.
      *<<<< PGM_VMS OR PGM_MVS
      *>>>> END
           IF SCR-INST = SCR-INST-HKY
               MOVE SCR-INST-GKY TO SCR-INST
               PERFORM HBL-KEY
               PERFORM SCR-DMSG
           ELSE
           IF SCR-INST = SCR-INST-GFL
                PERFORM GET-FLD
           ELSE
           IF SCR-INST = SCR-INST-GCS
                PERFORM GET-ACC.
           IF ( FRM-FFLD = FRM-FFLD-PF7 OR FRM-FFLD-PF8  OR
                           FRM-FFLD-PF5 OR FRM-FFLD-PF6 ) AND
              SCR-ACTU = SCR-ACTU-MOD
               PERFORM XCT-PRGP.
           PERFORM DESSCRTRL.
           IF SCR-ACTU = SCR-ACTU-MOD
                  PERFORM MSG-SCR-MOD
           ELSE
                  PERFORM MSG-SCR-ING.
       FIN-SCR-ACT.
      *<<<< PGM_VMS OR PGM_MVS
      *>>>> END
           EXIT.


       SCR-DMSG SECTION.
       INI-SCR-DMSG.
           IF PGM-ICLR = PGM-NO-LIMPIAR-NADA
               NEXT SENTENCE
           ELSE
           IF PGM-ICLR = PGM-LIMPIAR-TODO
               PERFORM SCR-CLRA-CAM
               PERFORM EDT-KEY-CAM
               PERFORM EDT-FLD-CAM
           ELSE
           IF PGM-ICLR = PGM-LIMPIAR-LLAVES
               PERFORM CLR-KEY-CAM
               PERFORM EDT-KEY-CAM
           ELSE
               PERFORM CLR-FLD-CAM
               PERFORM EDT-FLD-CAM.
           PERFORM STP-EXIT.
           PERFORM SCR-PUTA.
           PERFORM SCR-EXIT.
       FIN-SCR-DMSG.
           EXIT.

       XCT-PRGP SECTION.
       INI-XCT-PRGP.
           MOVE SCR-INST-BRW TO SCR-INST.
           PERFORM STP-EXIT.
           MOVE FRM-FFLD   TO SCR-FFLD.
      *
           MOVE SCR-PROG     TO SYS-PROG.
           MOVE SCR-VARI     TO SYS-CMMA.
           MOVE SCR-TCMA     TO SYS-TCMA.
           MOVE SYS-XCTL     TO SYS-CMND.
           PERFORM GNS-PRO-SYS.
           PERFORM XCT-ERR.
       FIN-XCT-PRGP.
           EXIT.

       SCR-RST SECTION.
       INI-SCR-RST.
           MOVE SPACES       TO PGM-ICLR.
           MOVE SPACES       TO SCR-ACTU.
           MOVE SCR-STPP     TO SCR-STAT.
           MOVE SCR-MFLD-NOT TO SCR-MFLD.
           MOVE LOW-VALUES   TO CAM-FLD.
      *<<<< PGM_VMS OR PGM_MVS
      *>>>> END
       FIN-SCR-RST.
           EXIT.

       GET-FLD SECTION.
       INI-GET-FLD.
      *<<<< PGM_VMS OR PGM_MVS
      *>>>> END
           PERFORM SCR-GFLD.
           IF FRM-STAT-ABT
               MOVE SCR-STAT-ABT TO SCR-STAT.
       FIN-GET-FLD.
           EXIT.

       CMN-MOD SECTION.
       INI-CMN-MOD.
      *<<<< PGM_VMS OR PGM_MVS
      *>>>> END
           PERFORM KEY-ALL-CAM.
           MOVE FIO-GET-KEY-UPD TO FIO-CMND.
           PERFORM TAB-FIO-CAM.
           IF NOT FIO-STAT-OKS
               GO TO FIN-CMN-MOD.
      *<<<< PGM_VMS OR PGM_MVS
      *>>>> END
           PERFORM RET-HDR-CAM.
           PERFORM RET-ALL-CAM.
      *<<<< CMN_ING OR CMN_MOD
           PERFORM GET-FHOY.
           MOVE HOY-STP-ITRN TO CAM-STP-ITRN IN CAM.
      *>>>>
      *<<<< PGM_VMS OR PGM_MVS
      *>>>> END
           MOVE FIO-MOD TO FIO-CMND.
           PERFORM TAB-FIO-CAM.
      *<<<< PGM_VMS OR PGM_MVS
      *>>>> END
       FIN-CMN-MOD.
           EXIT.

       CMN-ING SECTION.
       INI-CMN-ING.
      *<<<< PGM_VMS OR PGM_MVS
      *>>>> END
           PERFORM RET-HDR-CAM.
           PERFORM RET-ALL-CAM.
      *<<<< CMN_ING OR CMN_MOD
           PERFORM GET-FHOY.
           MOVE HOY-STP-ITRN TO CAM-STP-ITRN IN CAM.
      *>>>>
      *<<<< PGM_VMS OR PGM_MVS
      *>>>> END
           MOVE FIO-PUT TO FIO-CMND.
           PERFORM TAB-FIO-CAM.
      *<<<< PGM_VMS OR PGM_MVS
      *>>>> END
       FIN-CMN-ING.
           EXIT.

       CMN-ACC SECTION.
       INI-CMN-ACC.
           IF SCR-STAT = SCR-STAT-ABT OR SCR-VFLD = SCR-VFLD-NOT
               MOVE 'ACCION NO REALIZADA' TO FRM-MENS
      *<<<< PGM_VMS OR PGM_MVS
      *>>>> END
      *<<<< ABT_CMN_ACC
               IF SCR-CMND = 'VRF'
                   MOVE 'VIGENCIA NO MODIFICADA' TO FRM-MENS
                   GO TO FIN-CMN-ACC
               ELSE
               IF SCR-CMND = 'COP'
                   MOVE 'GNS'          TO MSG-COD-SIST
                   MOVE 'REG    NOCOP' TO MSG-COD-MENS
                   PERFORM GET-MSG
                   MOVE MSG-GLS-DESC   TO FRM-MENS
                   GO TO FIN-CMN-ACC
               ELSE
      *>>>>
               GO TO FIN-CMN-ACC.
      *<<<< PGM_VMS OR PGM_MVS
      *>>>> END
      *<<<< INI_CMN_ACC
           IF SCR-CMND = 'COP'
               PERFORM CMN-ING
               IF FIO-STAT-OKS
                   MOVE 'GNS'          TO MSG-COD-SIST
                   MOVE 'REG    SICOP' TO MSG-COD-MENS
                   PERFORM GET-MSG
                   MOVE MSG-GLS-DESC   TO FRM-MENS
                   GO TO FIN-CMN-ACC
               ELSE
                   MOVE FRM-CPIM-UBY   TO CAM-FEC-FCAM-ATR IN CAM-FLD(1)
                   MOVE FRM-CPIM-UBY   TO CAM-FEC-FCAM-ATR IN CAM-FLD(2)
                   MOVE 'GNS'          TO MSG-COD-SIST
                   MOVE 'REG    ERCOP' TO MSG-COD-MENS
                   PERFORM GET-MSG
                   MOVE MSG-GLS-DESC   TO FRM-MENS
                   GO TO FIN-CMN-ACC.
      *>>>>
           PERFORM KEY-ALL-CAM.
           MOVE FIO-GET-KEY-UPD TO FIO-CMND.
           PERFORM TAB-FIO-CAM.
           IF NOT FIO-STAT-OKS
               GO TO FIN-CMN-ACC.
      *<<<< PGM_VMS OR PGM_MVS
      *>>>> END
           PERFORM RET-ALL-CAM.
      *<<<< PGM_VMS OR PGM_MVS
      *>>>> END
      *<<<< CMN_ACC
           IF SCR-CMND = 'VRF'
              PERFORM GET-FHOY
              MOVE HOY-STP-ITRN TO CAM-STP-ITRN IN CAM
              MOVE FIO-MOD  TO FIO-CMND
              PERFORM TAB-FIO-CAM
              IF FIO-STAT-OKS AND
                 CAM-IND-VIGE IN CAM = 'S'
                  PERFORM PUT-FLD-TDM
                  IF WSS-TDM-MENS NOT > SPACES
                      MOVE 'VIG    ACT  ' TO MSG-COD-MENS
                      MOVE 'TAB' TO MSG-COD-SIST
                      PERFORM GET-MSG
                      MOVE MSG-GLS-DESC TO FRM-MENS
                   ELSE
                      NEXT SENTENCE
              ELSE
                  MOVE 'FIOSTAT' TO MSG-COD-TMSG
                  MOVE FIO-STAT  TO MSG-COD-CMSG
                  MOVE 'GNS'     TO MSG-COD-SIST
                  PERFORM GET-MSG
                  MOVE MSG-GLS-DESC TO FRM-MENS.
      *>>>>
      *>>>>
       FIN-CMN-ACC.
           EXIT.

       CMN-ELI SECTION.
       INI-CMN-ELI.
      *<<<< PGM_VMS OR PGM_MVS
      *>>>> END
           PERFORM KEY-ALL-CAM.
           MOVE FIO-GET-KEY-UPD TO FIO-CMND.
           PERFORM TAB-FIO-CAM.
           IF NOT FIO-STAT-OKS
               GO TO FIN-CMN-ELI.
      *<<<< PGM_VMS OR PGM_MVS
      *>>>> END
           MOVE FIO-DEL TO FIO-CMND.
           PERFORM TAB-FIO-CAM.
      *<<<< PGM_VMS OR PGM_MVS
      *<<<< FIN_CMN_ELI
           IF FIO-STAT-OKS
               PERFORM PUT-FLD-TDM.
      *>>>> END
      *>>>> END
       FIN-CMN-ELI.
           EXIT.


       STP-EXIT SECTION.
       INI-STP-EXIT.
      *<<<< PGM_VMS OR PGM_MVS
      *>>>> END
           MOVE SCR-PROG TO PGM-PROG.
           MOVE SCR-NTRN TO PGM-NTRN.

           MOVE SCR-PROV TO SCR-PROG.
           MOVE SCR-NTRV TO SCR-NTRN.

           MOVE PGM-PROG TO SCR-PROV
           MOVE PGM-NTRN TO SCR-NTRV.
      *<<<< PGM_VMS OR PGM_MVS
      *>>>> END
       FIN-STP-EXIT.
           EXIT.

       SCR-EXIT SECTION.
       INI-SCR-EXIT.
           MOVE 'P'      TO SCR-ICMN.
           MOVE SCR-NTRN TO SYS-NTRN.
           MOVE SCR-VARI TO SYS-CMMA.
           MOVE SCR-TCMA TO SYS-TCMA.
           MOVE SYS-RTRN TO SYS-CMND.
           PERFORM GNS-PRO-SYS.
       FIN-SCR-EXIT.
           EXIT.

       SCR-PUTA SECTION.
       INI-SCR-PUTA.
           MOVE SCR-NMAP TO FRM-NAME.
           MOVE SCR-NLIB TO FRM-NLIB.
           MOVE CAM-FLD TO FRM-DFLD.
           MOVE FRM-PUT-ALL TO FRM-CMND.
           PERFORM GNS-PRO-FRM.
       FIN-SCR-PUTA.
           EXIT.

       SCR-MSSG SECTION.
       INI-SCR-MSSG.
           IF FRM-MEN1 NOT > SPACES
               MOVE SPACES TO FRM-MEN1.
           IF FRM-MEN2 NOT > SPACES
               MOVE SPACES TO FRM-MEN2.
           MOVE FRM-MENS TO CAM-GLS-MENS.
       FIN-SCR-MSSG.
           EXIT.

       SCR-GFLD SECTION.
       INI-SCR-GFLD.
           MOVE SCR-NMAP TO FRM-NAME.
           MOVE SCR-NLIB TO FRM-NLIB.
           MOVE FRM-GET-ALL TO FRM-CMND.
           PERFORM GNS-PRO-FRM.
           MOVE SPACES TO FRM-MENS.
           IF NOT ( FRM-FFLD = FRM-FFLD-RET  OR FRM-FFLD-PF10 OR
                               FRM-FFLD-PF12 OR FRM-FFLD-PF3 )
      *<<<< PGM_VMS OR PGM_MVS
      *>>>> END
               MOVE 'PFSINV    ' TO MSG-COD-MENS
               MOVE 'GNS' TO MSG-COD-SIST
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS
               PERFORM FST-FLD-CAM
               PERFORM SCR-MSSG
               PERFORM SCR-PUTA
               PERFORM SCR-EXIT.
           MOVE FRM-DFLD TO CAM-FLD.
           IF FRM-STAT-ABT
               GO TO FIN-SCR-GFLD.
           MOVE FRM-SUAR-OKS TO FRM-SUAR.
           PERFORM VAL-NUM-KEY-CAM.
           IF FRM-SUAR EQUAL FRM-SUAR-MAL OR FRM-SUAR-CLR
               PERFORM SCR-MSSG
               PERFORM EDT-KEY-CAM
               PERFORM SCR-PUTA
               PERFORM SCR-EXIT.
           PERFORM VAL-NUM-FLD-CAM.
           IF FRM-SUAR EQUAL FRM-SUAR-MAL OR FRM-SUAR-CLR
               PERFORM SCR-MSSG
               PERFORM EDT-KEY-CAM
               PERFORM EDT-FLD-CAM
               PERFORM SCR-PUTA
               PERFORM SCR-EXIT.
      *<<<< PGM_VMS OR PGM_MVS
      *>>>> END
           PERFORM VAL-MKY-CAM.
           IF FRM-SUAR EQUAL FRM-SUAR-MAL OR FRM-SUAR-CLR
               GO TO ERR-SCR-GFLD.
      *<<<< PGM_VMS OR PGM_MVS
      *>>>> END
           PERFORM VAL-FLD-CAM.
           IF FRM-SUAR EQUAL FRM-SUAR-MAL OR FRM-SUAR-CLR
               GO TO ERR-SCR-GFLD.
      *<<<< PGM_VMS OR PGM_MVS
      *>>>> END
           PERFORM VAL-CON-FLD-CAM.
           IF NOT ( FRM-SUAR EQUAL FRM-SUAR-MAL OR FRM-SUAR-CLR )
               GO TO FIN-SCR-GFLD.
           IF FRM-UCUR NOT > SPACES
               PERFORM FST-FLD-CAM.
       ERR-SCR-GFLD.
      *<<<< PGM_VMS OR PGM_MVS
      *>>>> END
           PERFORM SCR-MSSG.
           PERFORM EDT-KEY-CAM.
           PERFORM EDT-FLD-CAM.
           PERFORM SCR-PUTA.
           PERFORM SCR-EXIT.
       FIN-SCR-GFLD.
      *<<<< PGM_VMS OR PGM_MVS
      *>>>> END
           MOVE SCR-STAT-MOD TO SCR-STAT.

       GET-ACC SECTION.
       INI-GET-ACC.
           MOVE SCR-NMAP TO FRM-NAME.
           MOVE SCR-NLIB TO FRM-NLIB.
           MOVE FRM-GET-ALL TO FRM-CMND.
           PERFORM GNS-PRO-FRM.
           IF NOT ( FRM-FFLD = FRM-FFLD-RET  OR FRM-FFLD-PF10 OR
                               FRM-FFLD-PF12 OR FRM-FFLD-PF3 )
      *<<<< PGM_VMS OR PGM_MVS
      *>>>> END
               MOVE 'PFSINV    ' TO MSG-COD-MENS
               MOVE 'GNS' TO MSG-COD-SIST
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO CAM-GLS-MEN2
               MOVE SCR-PRMT     TO CAM-GLS-MEN1
               PERFORM FST-MSG
               PERFORM SCR-PUTA
               PERFORM SCR-EXIT.
           MOVE FRM-DFLD TO CAM-FLD.
           IF NOT ( ( FRM-FFLD = FRM-FFLD-PF12 OR FRM-FFLD-PF3 ) OR
                      SCR-CONF > SPACES )
               PERFORM VAL-NUM-KEY-CAM
               PERFORM VAL-NUM-FLD-CAM.
      *<<<< PGM_VMS OR PGM_MVS
      *>>>> END
       FIN-GET-ACC.
           MOVE SCR-STAT-SON TO SCR-STAT.

       GET-CON SECTION.
       INI-GET-CON.
           MOVE SCR-NMAP TO FRM-NAME.
           MOVE SCR-NLIB TO FRM-NLIB.
           MOVE FRM-GET-ALL TO FRM-CMND.
           PERFORM GNS-PRO-FRM.
           IF NOT ( FRM-FFLD = FRM-FFLD-RET  OR FRM-FFLD-PF10 OR
                               FRM-FFLD-PF12 OR FRM-FFLD-PF3 )
      *<<<< PGM_VMS OR PGM_MVS
      *>>>> END
               MOVE 'PFSINV    ' TO MSG-COD-MENS
               MOVE 'GNS' TO MSG-COD-SIST
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO CAM-GLS-MEN2
               MOVE SCR-PRMT     TO CAM-GLS-MEN1
               PERFORM FST-MSG
               PERFORM SCR-PUTA
               PERFORM SCR-EXIT.
           MOVE FRM-DFLD TO CAM-FLD.
      *<<<< PGM_VMS OR PGM_MVS
      *>>>> END
       FIN-GET-CON.
           MOVE SCR-STAT-CON TO SCR-STAT.

       CLR-MSG SECTION.
       INI-CLR-MSG.
           MOVE SPACES TO CAM-GLS-MENS.
       FIN-CLR-MSG.
           EXIT.

       HBL-IKY SECTION.
       INI-HBL-IKY.
      *<<<< PGM_VMS OR PGM_MVS
      *>>>> END
           IF SCR-DESDE-CMN
               MOVE CAM-GLS-MENS TO FRM-MENS
               MOVE LOW-VALUES TO CAM-FLD
               IF FRM-MENS < SPACES
                   MOVE LOW-VALUES TO CAM-GLS-MENS
               ELSE
                   MOVE FRM-MENS TO CAM-GLS-MENS.
           MOVE FRM-CPSF-AEY TO FRM-CPIM-AEY.
           PERFORM PRO-FLD-CAM.
           PERFORM PRO-MKY-CAM.
           PERFORM UNP-IKY-CAM.
           PERFORM FST-KEY-CAM.
           MOVE '1' TO FRM-CPIM-AEY.
      *<<<< PGM_VMS OR PGM_MVS
      *>>>> END
       FIN-HBL-IKY.
           EXIT.

       HBL-KEY SECTION.
       INI-HBL-KEY.
      *<<<< PGM_VMS OR PGM_MVS
      *>>>> END
           IF SCR-DESDE-CMN
               MOVE CAM-GLS-MENS TO FRM-MENS
               MOVE LOW-VALUES TO CAM-FLD
               IF FRM-MENS < SPACES
                   MOVE LOW-VALUES TO CAM-GLS-MENS
               ELSE
                   MOVE FRM-MENS TO CAM-GLS-MENS.
           MOVE FRM-CPSF-AEY TO FRM-CPIM-AEY.
           PERFORM PRO-FLD-CAM.
           PERFORM UNP-KEY-CAM.
           PERFORM FST-KEY-CAM.
           MOVE '1' TO FRM-CPIM-AEY.
      *<<<< PGM_VMS OR PGM_MVS
      *>>>> END
       FIN-HBL-KEY.
           EXIT.

       HBL-FLD SECTION.
       INI-HBL-FLD.
      *<<<< PGM_VMS OR PGM_MVS
      *>>>> END
           PERFORM UNP-MKY-CAM.
           PERFORM UNP-FLD-CAM.
           PERFORM FST-FLD-CAM.
      *<<<< FIN_HBL_FLD
           IF SCR-CCPP = 'ING' OR 'MOD' OR 'ACT'
               PERFORM PRO-IND-VIGE
               MOVE 'N' TO CAM-IND-VIGE IN CAM-FLD.
           IF SCR-CMND = 'VRF'
      *         PERFORM PRO-FLD-CAM
               MOVE FRM-CPIM-AEY TO CAM-SGV-VCAM-ATR IN CAM-FLD
               MOVE FRM-CPIM-UBY TO CAM-IND-VIGE-ATR IN CAM-FLD
               PERFORM FST-IND-VIGE.

           IF SCR-CMND = 'COP'
               MOVE FRM-CPIM-AEY TO CAM-SGV-VCAM-ATR IN CAM-FLD
               MOVE FRM-CPIM-AEY TO CAM-IND-VIGE-ATR IN CAM-FLD
               MOVE FRM-CPIM-UBY TO CAM-FEC-FCAM-ATR IN CAM-FLD(1)
               MOVE FRM-CPIM-UBY TO CAM-FEC-FCAM-ATR IN CAM-FLD(2)
               MOVE ZEROES       TO CAM-SGV-VCAM-LEN
               MOVE -1           TO CAM-FEC-FCAM-LEN IN CAM-FLD(1).
      *>>>>
      *<<<< PGM_VMS OR PGM_MVS
      *>>>> END
       FIN-HBL-FLD.
           EXIT.

       FST-MSG SECTION.
       INI-FST-MSG.
           MOVE -1 TO CAM-GLS-MENS-LEN.
       FIN-FST-MSG.
           EXIT.

       PRO-ALL SECTION.
       INI-PRO-ALL.
           PERFORM PRO-KEY-CAM.
           PERFORM PRO-FLD-CAM.
           PERFORM FST-MSG.
       FIN-PRO-ALL.
           EXIT.

       SCR-TRL SECTION.
       INI-SCR-TRL.
      *<<<< PGM_VMS OR PGM_MVS
      *>>>> END
      *<<<< PGM_VMS OR PGM_MVS
      *>>>> END
           IF FRM-MEN1 NOT > SPACES
               MOVE SCR-PRMT TO FRM-MEN1.
      *<<<< PGM_VMS OR PGM_MVS
      *>>>> END
           IF SCR-STAT = SCR-STAT-MOD
               MOVE SCR-INST-GFL TO SCR-INST
               PERFORM HBL-FLD
               PERFORM SCR-MSSG
               PERFORM EDT-KEY-CAM
               PERFORM EDT-FLD-CAM
               PERFORM SCR-PUTA
               PERFORM SCR-EXIT.
           IF SCR-STAT = SCR-STAT-SON
               MOVE SCR-INST-GCS TO SCR-INST
               PERFORM PRO-ALL
               PERFORM SCR-MSSG
               PERFORM EDT-KEY-CAM
               PERFORM EDT-FLD-CAM
               PERFORM SCR-PUTA
               PERFORM SCR-EXIT.
      *ASUME SCR-STAT-CON.
           MOVE SCR-STAT-CON TO SCR-STAT.
           MOVE SCR-INST-GAB TO SCR-INST.
      *    MOVE FRM-CPSF-AEY TO FRM-CPIM-AEY.
           PERFORM PRO-ALL.
           PERFORM SCR-MSSG.
           PERFORM EDT-KEY-CAM.
           PERFORM EDT-FLD-CAM.
           PERFORM SCR-PUTA.
           PERFORM SCR-EXIT.
       FIN-SCR-TRL.
           EXIT.

       DESSCRTRL SECTION.
       INI-DESSCRTRL.
           IF SCR-INST = SCR-INST-GCF
                  PERFORM SCR-GCNF
                  GO TO FIN-DESSCRTRL.
           MOVE SCR-VFLD-NOT TO SCR-VFLD.
           MOVE FRM-FFLD TO SCR-FFLD.
           IF SCR-STAT = SCR-STAT-ABT OR SCR-STAT-CON
                  GO TO FIN-DESSCRTRL.
           IF SCR-FFLD-RET OR SCR-FFLD-PF10
                  MOVE SCR-VFLD-YES TO SCR-VFLD
                  PERFORM PRO-CONF.
       FIN-DESSCRTRL.
           IF SCR-FFLD-PF10 OR SCR-FFLD-PF3
                 MOVE SCR-INST-HCM TO SCR-INST
           ELSE
                 MOVE SCR-INST-HKY TO SCR-INST.
       EXT-DESSCRTRL.
           EXIT.

       PRO-CONF SECTION.
       INI-PRO-CONF.
      *<<<< PGM_VMS OR PGM_MVS
      *>>>> END
           IF FRM-MENS NOT > SPACES
               IF SCR-CONF NOT > SPACES
                   GO TO FIN-PRO-CONF
               ELSE
                   MOVE SCR-CONF TO FRM-MENS
           ELSE
               IF FRM-MEN1 NOT > SPACES
                   MOVE SCR-CONF TO FRM-MEN1.
           MOVE SCR-INST-GCF TO SCR-INST.
           PERFORM SCR-MSSG.
           PERFORM PRO-KEY-CAM.
           PERFORM PRO-FLD-CAM.
           PERFORM FST-MSG.
           IF SCR-STAT = SCR-STAT-MOD
               PERFORM EDT-KEY-CAM
               PERFORM EDT-FLD-CAM.
           PERFORM SCR-PUTA.
           PERFORM SCR-EXIT.
       FIN-PRO-CONF.
           EXIT.

       SCR-GCNF SECTION.
       INI-SCR-GCNF.
           MOVE SCR-NMAP TO FRM-NAME.
           MOVE SCR-NLIB TO FRM-NLIB.
           MOVE FRM-GET-ALL TO FRM-CMND.
           PERFORM GNS-PRO-FRM.
           IF NOT ( FRM-FFLD = FRM-FFLD-RET  OR FRM-FFLD-PF10 OR
                               FRM-FFLD-PF12 OR FRM-FFLD-PF3  OR
                               FRM-FFLD-PF4 )
      *<<<< PGM_VMS OR PGM_MVS
      *>>>> END
               MOVE 'PFSINV    ' TO MSG-COD-MENS
               MOVE 'GNS' TO MSG-COD-SIST
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO CAM-GLS-MEN2
               MOVE SCR-CONF     TO CAM-GLS-MEN1
               PERFORM FST-MSG
               PERFORM SCR-PUTA
               PERFORM SCR-EXIT.
           MOVE FRM-DFLD TO CAM-FLD.
           MOVE FRM-FFLD TO SCR-FFLD.
           IF FRM-FFLD = FRM-FFLD-PF3
               MOVE SCR-VFLD-NOT TO SCR-VFLD
           ELSE
           IF FRM-FFLD = FRM-FFLD-RET OR FRM-FFLD-PF10 OR FRM-FFLD-PF4
               MOVE SCR-VFLD-YES TO SCR-VFLD
               PERFORM VAL-NUM-KEY-CAM
               PERFORM VAL-NUM-FLD-CAM
           ELSE
           IF FRM-FFLD = FRM-FFLD-PF12
               MOVE SCR-STPP TO SCR-STAT
               IF SCR-STAT = SCR-STAT-MOD
                   PERFORM VAL-NUM-KEY-CAM
                   PERFORM VAL-NUM-FLD-CAM
                   PERFORM SCR-TRL
               ELSE
                   MOVE SCR-VFLD-NOT TO SCR-VFLD.
      *<<<< PGM_VMS OR PGM_MVS
      *>>>> END
       FIN-SCR-GCNF.
           EXIT.

       RET-HDR-CAM SECTION.
       INI-RET-HDR-CAM.
           PERFORM GET-FHOY.
      *    Fecha Transaccion
           MOVE HOY-FHOY TO CAM-FEC-FTRN IN CAM.
      *    Hora Transaccion
           MOVE HOY-HHOY TO CAM-HRA-HRTR IN CAM.
      *    Codigo Origen transaccion
      *<<<< NOT PGM_VMS
           MOVE SCR-OTRN TO CAM-COD-OTRN IN CAM.
      *    Autor Transaccion
           MOVE SCR-USER TO CAM-COD-ATRN IN CAM.
      *>>>>
           IF SCR-CCPP = 'ING'
               MOVE 'I' TO CAM-MSC-TACC IN CAM
               MOVE 'I' TO CAM-MSC-STAT IN CAM
           ELSE
           IF SCR-CCPP = 'MOD'
               MOVE 'M' TO CAM-MSC-TACC IN CAM
               MOVE 'M' TO CAM-MSC-STAT IN CAM.
       FIN-RET-HDR-CAM.
           EXIT.

       COPY TABBUCAM.
       COPY GNSBVNUM.
       COPY TABBFCAM.
       COPY GNSBFMSG.
       COPY GNSBGSYS.
       COPY GNSBGDTC.
       COPY GNSBGFRM.
       COPY GNSBGMSG.
       COPY GNSBEKEY.
       COPY GNSBIABT.
       COPY GNSBVCOD.
       COPY GNSBVTAB.
       COPY GNSBFTAB.
       COPY GNSBGFEC.
       COPY GNSBGHOY.

      *<<<< PGM_VMS OR PGM_MVS
      *>>>> END
      *<<<< EOF

       FST-IND-VIGE SECTION.
       INI-FST-IND-VIGE.
           MOVE ZEROES TO CAM-SGV-VCAM-LEN.
           MOVE -1 TO CAM-IND-VIGE-LEN.
       FIN-FST-IND-VIGE.
           EXIT.
       PRO-IND-VIGE SECTION.
       INI-PRO-IND-VIGE.
           MOVE FRM-CPIM-AEY TO CAM-IND-VIGE-ATR.
       FIN-PRO-IND-VIGE.
           EXIT.

       COPY GNSBBTAB.
       COPY GNSBBMSC.
       COPY GNSBVMSC.
       COPY GNSBFMSC.
       COPY GNSBVIND.
       COPY GNSBEGLS.
       COPY GNSBETAB.
       COPY TABBFVLR.
       COPY TABBBUSR.
       COPY TABBVUSR.
       COPY TABBFUSR.
      *>>>>
      *<<<< PGM_VMS OR PGM_MVS
      *>>>> END
      *<<<< PGM_VMS OR PGM_MVS
      *>>>> END
      *<<<< PGM_VMS OR PGM_MVS
      *>>>> END
      *<<<< EOF_PU
       VAL-KEY-CAM SECTION.
       INI-VAL-KEY-CAM.
           PERFORM VAL-IKY-CAM.
           PERFORM VAL-MKY-CAM.
           PERFORM VAL-AKY-CAM.
       FIN-VAL-KEY-CAM.
           EXIT.
       
       VAL-IKY-CAM SECTION.
       INI-VAL-IKY-CAM.
           PERFORM VAL-TAB-COD-CTAB.
           IF FRM-SUAR = FRM-SUAR-MAL OR FRM-SUAR = FRM-SUAR-CLR
                MOVE -1 TO TAB-COD-CTAB-LEN IN CAM-FLD
                GO TO FIN-VAL-IKY-CAM.
           PERFORM VAL-CAM-MSC-TVAL VARYING FRM-IFLD
                FROM 1 BY 1 UNTIL FRM-IFLD > 2
                OR FRM-SUAR = FRM-SUAR-MAL
                OR FRM-SUAR = FRM-SUAR-CLR.
           IF FRM-SUAR = FRM-SUAR-MAL OR FRM-SUAR = FRM-SUAR-CLR
                SUBTRACT 1 FROM FRM-IFLD
                MOVE -1 TO CAM-MSC-TVAL-LEN(FRM-IFLD)
                GO TO FIN-VAL-IKY-CAM.
           PERFORM VAL-CAM-COD-CVAL VARYING FRM-IFLD
                FROM 1 BY 1 UNTIL FRM-IFLD > 2
                OR FRM-SUAR = FRM-SUAR-MAL
                OR FRM-SUAR = FRM-SUAR-CLR.
           IF FRM-SUAR = FRM-SUAR-MAL OR FRM-SUAR = FRM-SUAR-CLR
                SUBTRACT 1 FROM FRM-IFLD
                MOVE -1 TO CAM-COD-CVAL-LEN(FRM-IFLD)
                GO TO FIN-VAL-IKY-CAM.
           PERFORM VAL-CAM-COD-TCAM VARYING FRM-IFLD
                FROM 1 BY 1 UNTIL FRM-IFLD > 2
                OR FRM-SUAR = FRM-SUAR-MAL
                OR FRM-SUAR = FRM-SUAR-CLR.
           IF FRM-SUAR = FRM-SUAR-MAL OR FRM-SUAR = FRM-SUAR-CLR
                SUBTRACT 1 FROM FRM-IFLD
                MOVE -1 TO CAM-COD-TCAM-LEN(FRM-IFLD)
                GO TO FIN-VAL-IKY-CAM.
           PERFORM VAL-CAM-FEC-FCAM VARYING FRM-IFLD
                FROM 1 BY 1 UNTIL FRM-IFLD > 2
                OR FRM-SUAR = FRM-SUAR-MAL
                OR FRM-SUAR = FRM-SUAR-CLR.
           IF FRM-SUAR = FRM-SUAR-MAL OR FRM-SUAR = FRM-SUAR-CLR
                SUBTRACT 1 FROM FRM-IFLD
                MOVE -1 TO CAM-FEC-FCAM-LEN(FRM-IFLD)
                GO TO FIN-VAL-IKY-CAM.
       FIN-VAL-IKY-CAM.
           EXIT.
       
       VAL-AKY-CAM SECTION.
       INI-VAL-AKY-CAM.
       FIN-VAL-AKY-CAM.
           EXIT.

       VAL-TAB-COD-CTAB SECTION.
       INI-VAL-TAB-COD-CTAB.
           IF TAB-COD-CTAB IN CAM-FLD NOT > SPACES
              MOVE SPACES TO TAB-COD-CTAB IN CAM-FLD.
      *<<<< TAB_COD_CTAB
           MOVE 'TAB' TO TAB-COD-SIST.
           MOVE 'SVC' TO TAB-COD-TTAB IN TAB.
           MOVE TAB-COD-CTAB IN CAM-FLD TO TAB-COD-CTAB IN TAB.
           PERFORM VAL-COD.
           IF MSG-COD-MENS = SPACES
               MOVE TAB-CIC-CTAB IN TAB TO WSS-COD-CAMB

               MOVE WSS-MSC-TVAL IN WSS-COD-VCAM(1) TO
                    CAM-MSC-TVAL IN CAM-FLD(1)
               MOVE WSS-COD-CVAL IN WSS-COD-VCAM(1) TO
                    CAM-COD-CVAL IN CAM-FLD(1)
               MOVE WSS-COD-TCAM IN WSS-COD-VCAM(1) TO
                    CAM-COD-TCAM IN CAM-FLD(1)

               MOVE WSS-MSC-TVAL IN WSS-COD-VCAM(2) TO
                    CAM-MSC-TVAL IN CAM-FLD(2)
               MOVE WSS-COD-CVAL IN WSS-COD-VCAM(2) TO
                    CAM-COD-CVAL IN CAM-FLD(2)
               MOVE WSS-COD-TCAM IN WSS-COD-VCAM(2) TO
                    CAM-COD-TCAM IN CAM-FLD(2)

               PERFORM VLD-CAM-MSC-TVAL VARYING FRM-IFLD
                       FROM 1 BY 1 UNTIL FRM-IFLD > 2.
      *>>>>
       FIN-VAL-TAB-COD-CTAB.
           EXIT.
       
       VAL-CAM-MSC-TVAL SECTION.
       INI-VAL-CAM-MSC-TVAL.
       FIN-VAL-CAM-MSC-TVAL.
           EXIT.
       
       VAL-CAM-COD-CVAL SECTION.
       INI-VAL-CAM-COD-CVAL.
       FIN-VAL-CAM-COD-CVAL.
           EXIT.
       
       VAL-CAM-COD-TCAM SECTION.
       INI-VAL-CAM-COD-TCAM.
       FIN-VAL-CAM-COD-TCAM.
           EXIT.
       
       VAL-CAM-FEC-FCAM SECTION.
       INI-VAL-CAM-FEC-FCAM.
      *VAL-FEC Validar Fecha
           MOVE CAM-FEC-FCAM IN CAM-FLD(FRM-IFLD) TO FEC-FECH.
           MOVE FEC-FORM-FEC TO FEC-FORM.
           MOVE FEC-FBLK-S  TO FEC-FBLK.
           MOVE FEC-CHOY-LE TO FEC-CHOY.
           MOVE FEC-VHBL-S TO FEC-VHBL.
      *DAD
      *<<<< INI_CAM_FEC_FCAM
           MOVE CAM-FEC-FCAM IN CAM-FLD(FRM-IFLD) TO FEC-FECH.
           MOVE FEC-FORM-FEC TO FEC-FORM.
           IF FRM-IFLD = 1
               MOVE FEC-FBLK-N TO FEC-FBLK
           ELSE
               MOVE FEC-FBLK-S TO FEC-FBLK.
           MOVE FEC-VAL-FEC TO FEC-CMND.
           MOVE FEC-CHOY-N  TO FEC-CHOY.
           MOVE FEC-VHBL-N  TO FEC-VHBL.
           PERFORM PRO-FEC.
           IF FEC-STAT-OKS
               MOVE FEC-FECH TO CAM-FEC-FCAM IN CAM-FLD(FRM-IFLD)
               IF FRM-IFLD = 2 AND FEC-STAT-BLK
                   MOVE CAM-FEC-FCAM IN CAM-FLD(1) TO
                        CAM-FEC-FCAM IN CAM-FLD(2)
               ELSE
                   NEXT SENTENCE
           ELSE
               MOVE FRM-SUAR-MAL TO FRM-SUAR
               MOVE FEC-MENS     TO FRM-MENS.
           GO TO FIN-VAL-CAM-FEC-FCAM.
      *
      *>>>>
           MOVE FEC-VAL-FEC TO FEC-CMND.
           PERFORM PRO-FEC.
           IF FEC-STAT-OKS
               MOVE FEC-FECH TO CAM-FEC-FCAM IN CAM-FLD(FRM-IFLD)
           ELSE
               MOVE FRM-SUAR-MAL TO FRM-SUAR
               MOVE FEC-MENS     TO FRM-MENS
               GO TO FIN-VAL-CAM-FEC-FCAM.
      *<<<< CAM_FEC_FCAM
      *>>>>
       FIN-VAL-CAM-FEC-FCAM.
           EXIT.
      *>>>>
      *<<<< EOF_PU

       PUT-FLD-TDM SECTION.
       INI-PUT-FLD-TDM.

           MOVE SPACES TO WSS-TDM-MENS.
           MOVE FIO-GET-KEY TO FIO-CMND.
           MOVE 'TAB' TO FIO-SIST.
           MOVE 'VSN'     TO TAB-COD-TTAB IN TAB.
           MOVE 'LINKTDM' TO TAB-COD-CTAB IN TAB.
           PERFORM GNS-FIO-TAB.
           IF FIO-STAT-OKS AND
              TAB-IND-VIGE IN TAB = 'S'
                GO TO FIN-PUT-FLD-TDM.
           MOVE '00' TO FIO-STAT.

           MOVE CAM-FEC-FCAM IN CAM(1) TO WSS-TDM-FEC-FCAM.
           PERFORM FNC-FEC-TDM.
           MOVE WSS-FEC-T              TO VCB-FEC-1.

           MOVE CAM-FEC-FCAM IN CAM(2) TO WSS-TDM-FEC-FCAM.
           PERFORM FNC-FEC-TDM.
           MOVE WSS-FEC-T              TO VCB-FEC-2.

           MOVE CAM-FEC-FTRN IN CAM    TO WSS-TDM-FEC-FCAM.
           PERFORM FNC-FEC-TDM.
           MOVE WSS-FEC-T              TO VCB-FEC-TRN.

           MOVE CAM-COD-VCAM IN CAM(1) TO VCB-1.

           MOVE CAM-COD-VCAM IN CAM(2) TO VCB-2.

           MOVE CAM-HRA-HRTR           TO VCB-HRA-TRN.

           MOVE CAM-MSC-TACC IN CAM    TO VCB-TIP-ACC.

           MOVE CAM-IND-VIGE IN CAM    TO VCB-IND-VIG.

           MOVE CAM-MSC-TTRN IN CAM    TO VCB-IND-ORN-TRN.

           MOVE CAM-COD-TTRN IN CAM    TO VCB-TIP-ORN-TRN.

           MOVE CAM-COD-ATRN IN CAM    TO VCB-IDN-USU-TRN.

           MULTIPLY CAM-SGV-VCAM IN CAM BY 10000
               GIVING WSS-SGV-VCAM.

           MOVE WSS-SGV-VCAM           TO VCB-VAL.

           IF SCR-CMND = 'ING'
               MOVE 'I' TO VCB-OPC.

           IF SCR-CMND = 'MOD'
               MOVE 'M' TO VCB-OPC.

           IF SCR-CMND = 'ELI'
               MOVE 'E' TO VCB-OPC.

           MOVE SYS-LINK       TO SYS-CMND.
           MOVE 'HCICSS01'     TO SYS-PROG.
           MOVE HCOM-MAX-LAR   TO SYS-TCMA.
           MOVE HCOM-COMM-AREA TO SYS-CMMA.
           PERFORM GNS-PRO-SYS.
           MOVE DFHCOMMAREA TO HCOM-COMM-AREA.
           IF HCOM-COD-RET NOT = SPACES
               MOVE 'CODRET1'               TO MSG-COD-MENS
           ELSE
           IF HCOM-COD-RET-43 NOT = '000'
               MOVE 'CODRET2'               TO MSG-COD-MENS
           ELSE
           IF HCOM-MSG-VTA-CTROL-CERR NOT = '00'
               MOVE 'CODRET3'               TO MSG-COD-MENS.
           IF MSG-COD-MENS > SPACES
               MOVE 'TAB'        TO MSG-COD-SIST
               MOVE MSG-COD-MENS TO MSG-COD-MENS
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS.

       FIN-PUT-FLD-TDM.
           EXIT.

       FNC-FEC-TDM SECTION.
       INI-FNC-FEC-TDM.
      * ISP:  18-MAR-1992 SE INHIBE ESTA FORMA DE PASAR PARAMETROS
      *       OPTANDOSE POR LA DE MAS ABAJO
      *     IF WSS-TDM-FEC-FCAM IS NOT NUMERIC OR
      *        WSS-TDM-FEC-FCAM = ZEROES
      *          MOVE ZEROES TO WSS-FEC-R-SS
      *          MOVE 1      TO WSS-FEC-R-AA
      *          MOVE 1      TO WSS-FEC-R-MM
      *          MOVE 1      TO WSS-FEC-R-DD
      *      ELSE
      *          MOVE CAM-NUM-SCAM IN CAM(1) TO WSS-FEC-R-SS
      *          MOVE CAM-NUM-ACAM IN CAM(1) TO WSS-FEC-R-AA
      *          MOVE CAM-NUM-MCAM IN CAM(1) TO WSS-FEC-R-MM
      *          MOVE CAM-NUM-DCAM IN CAM(1) TO WSS-FEC-R-DD.
      *     MOVE WSS-FEC-R-AAAA   TO WSS-FEC-T-AAAA.
      *     MOVE WSS-FEC-R-MM     TO WSS-CAMPO-COM.
      *     MOVE WSS-CAMPO-BIN-X1 TO WSS-FEC-T-MM.
      *     MOVE WSS-FEC-R-DD     TO WSS-CAMPO-COM.
      *     MOVE WSS-CAMPO-BIN-X1 TO WSS-FEC-T-DD.
           MOVE WSS-TDM-NUM-SCAM  TO WSS-NUM-ST.
           MOVE WSS-TDM-NUM-ACAM  TO WSS-NUM-AT.
           MOVE WSS-TDM-NUM-MCAM  TO WSS-NUM-MT.
           MOVE WSS-TDM-NUM-DCAM  TO WSS-NUM-DT.
       FIN-FNC-FEC-TDM.
           EXIT.

      *>>>>
