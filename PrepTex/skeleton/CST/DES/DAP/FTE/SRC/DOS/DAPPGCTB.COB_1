//ICATALDO  JOB ,,CLASS=A,MSGCLASS=X,USER=ICATALD,PASSWORD=CTLSPT,
//            REGION=4M
/*ROUTE PRINT MVS
//STEP1  EXEC PGM=AFOLIBR
//STEPLIB  DD DSN=ADR.LIB.V38.LOAD,DISP=SHR
//MASTER   DD DSN=DAPCL.FUENTES,DISP=SHR
//OSJOB    DD DUMMY
//SYSPRINT DD SYSOUT=X
//SYSIN    DD *
-ADD DAPPGCTB,PSWD=CONS,ARC
     DUMMY
-EMOD
-SEL DAPPGCTB,CONS
-REP ALL
       IDENTIFICATION DIVISION.
      *=======================
       PROGRAM-ID.      DAPPGCTB.
       AUTHOR.          CONSIST.
       DATE-WRITTEN.    10-Jul-91 12:53 PM.

      * Programa Generador Interfaz Contabilidad CTB sin Sort.

       ENVIRONMENT DIVISION.
      *====================
       CONFIGURATION SECTION.
      *---------------------
       SPECIAL-NAMES.
            DECIMAL-POINT IS COMMA.
       INPUT-OUTPUT SECTION.
      *--------------------
       FILE-CONTROL.

       DATA DIVISION.
      *=============
       FILE SECTION.
      *------------

       WORKING-STORAGE SECTION.
      *-----------------------
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-TAB-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-MSG-REQA==.
       COPY DAPBROPD.

       COPY GNSWGRQA.
       COPY GNSWGUIB.
       COPY GNSWGELS.
       COPY GNSWGIFD.
       COPY GNSWCFIO.
       COPY GNSWVFIO.
      * COPY GNSWVIDD.
       COPY GNSBRTAB.
       COPY GNSBRMSG.

       COPY GNSWGSYS.
      *<<<< WSS
      *Entidades de GNS
       COPY GNSBRCIC.
       COPY GNSWGCIC.
       COPY GNSWGFEC.
       COPY GNSWGHOY.
       COPY GNSWCVRF.
       COPY GNSWVVRF.

      *Entidades de DAP
       COPY DAPBRCPP.
       COPY DAPBRDCC.
       COPY DAPBRLIQ.
       COPY DAPBRVEN.
       COPY DAPBRCT1.
       COPY DAPBRCT2.
       COPY DAPBRMC1.
       COPY DAPBRMC2.
       COPY DAPBRMC3.

       01  WSS-VARI.
           03  WSS-NUM-ROPD                          PIC 9(05).
           03  WSS-NUM-RLIQ                          PIC 9(05).
           03  WSS-NUM-RVEN                          PIC 9(05).
           03  WSS-CT1           VALUE ZEROES        PIC 9(05).
           03  WSS-CT2           VALUE ZEROES        PIC 9(05).
           03  WSS-I                                 PIC 9(02).
           03  WSS-FEC-FINP.
               05  WSS-NUM-DINP                      PIC 9(02).
               05  WSS-NUM-MINP                      PIC 9(02).
               05  WSS-NUM-SINP                      PIC 9(02).
               05  WSS-NUM-AINP                      PIC 9(02).
           03  WSS-FEC-FPRO.
               05  WSS-NUM-SPRO                      PIC 9(02).
               05  WSS-NUM-APRO                      PIC 9(02).
               05  WSS-NUM-MPRO                      PIC 9(02).
               05  WSS-NUM-DPRO                      PIC 9(02).

           03  WSS-COD-CCOS.
               05 WSS-COD-CVAL                       PIC X(03).
               05 WSS-COD-OFIC                       PIC X(03).
      *Entidades de GNS
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-CIC-REQA==.
      *Entidades de DAP
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-OPD-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-CPP-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-DCC-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-LIQ-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-VEN-REQA==.

       PROCEDURE DIVISION.
      *==================

       MAIN SECTION.
      *------------
       INI-MAIN.
       COPY GNSBGEDB.
           MOVE 'DAPPGCTB' TO FIO-PROG.
           PERFORM BUS-FSIS.
       INI-INP-SRT.
      *<<<< INI_INP
           DISPLAY 'INICIO CAPTURA PARAMETROS '.
           DISPLAY 'INGRESE FECHA DE PROCESO (DDMMSSAA) : '.
           ACCEPT WSS-FEC-FINP IN WSS-VARI.
           DISPLAY WSS-FEC-FINP IN WSS-VARI.

      *VAL-FEC Valida Fecha de Inicio
           MOVE WSS-FEC-FINP IN WSS-VARI TO FEC-FECH.
           MOVE FEC-FORM-FEC TO FEC-FORM.
           MOVE FEC-FBLK-N TO FEC-FBLK.
           MOVE FEC-CHOY-N TO FEC-CHOY.
           MOVE FEC-VHBL-N TO FEC-VHBL.
           MOVE FEC-VAL-FEC TO FEC-CMND.
           PERFORM PRO-FEC.
           IF NOT FEC-STAT-OKS
               DISPLAY FEC-MENS
               GO TO FIN-MAIN.
 
           MOVE WSS-NUM-DINP TO WSS-NUM-DPRO.
           MOVE WSS-NUM-MINP TO WSS-NUM-MPRO.
           MOVE WSS-NUM-SINP TO WSS-NUM-SPRO.
           MOVE WSS-NUM-AINP TO WSS-NUM-APRO.

           MOVE FIO-INP TO FIO-CMND.
           PERFORM DAP-FIO-OPD.

           MOVE FIO-UPD TO FIO-CMND.
           PERFORM DAP-FIO-CT1.
           IF NOT FIO-STAT-OKS
               DISPLAY 'ERROR FIO-UPD CT1, FIO-STAT : ' FIO-STAT
               GO TO FIN-MAIN.

           MOVE FIO-UPD TO FIO-CMND.
           PERFORM DAP-FIO-CT2.
           IF NOT FIO-STAT-OKS
               DISPLAY 'ERROR FIO-UPD CT2, FIO-STAT : ' FIO-STAT
               GO TO FIN-MAIN.
           MOVE ZEROES TO WSS-CT1 WSS-CT2.

       LUP-MAIN.
           IF NOT FIO-STAT-OKS
                GO TO FIN-MAIN.
           MOVE ZEROES TO WSS-NUM-ROPD WSS-NUM-RLIQ WSS-NUM-RVEN.
           PERFORM PRO-OPD.
           DISPLAY 'TOTAL REGISTROS OPD PROCESADOS : ' WSS-NUM-ROPD.
           PERFORM PRO-LIQ.
           DISPLAY 'TOTAL REGISTROS LIQ PROCESADOS : ' WSS-NUM-RLIQ.
           PERFORM PRO-VEN.
           DISPLAY 'TOTAL REGISTROS VEN PROCESADOS : ' WSS-NUM-RVEN.
       FIN-MAIN.


           DISPLAY 'TOTAL REGISTROS GRABADOS CT1 : ' WSS-CT1.
           DISPLAY 'TOTAL REGISTROS GRABADOS CT2 : ' WSS-CT2.

           MOVE FIO-CLO TO FIO-CMND.
           PERFORM DAP-FIO-OPD.
           MOVE FIO-CLO TO FIO-CMND.
           PERFORM DAP-FIO-CT1.
           MOVE FIO-CLO TO FIO-CMND.
           PERFORM DAP-FIO-CT2.
           PERFORM GNS-PRO-END.

       PRO-OPD SECTION.
       INI-PRO-OPD.
      * RECORRER OPD POR FECHA COMPUTACIONAL Y CONTABILIZAR SOLAMENTE LAS
      * OPERACIONES CUYA FECHA COMPUTACIONAL SEA IGUAL A LA FECHA CONTABLE
      * OPD-FEC-FCMP IN OPD = OPD-FEC-FCTB IN OPD
           MOVE WSS-FEC-FPRO TO OPD-FEC-FCMP IN OPD.
           MOVE 'OPD-FEC-FCMP' TO FIO-AKEY.
           MOVE FIO-GET-NLS TO FIO-CMND.
           PERFORM DAP-FIO-OPD.
           IF NOT FIO-STAT-OKS OR 
              OPD-FEC-FCMP IN OPD > WSS-FEC-FPRO
               DISPLAY 'NO HAY REG OPD PARA LA FECHA DE PROCESO : '
                       WSS-FEC-FPRO 
               GO TO FIN-PRO-OPD.
       LUP-PRO-OPD.
           IF OPD-FEC-FCMP IN OPD NOT = OPD-FEC-FCTB IN OPD
      *        NO SE CONTABILIZA
               GO TO NXT-PRO-OPD.

           IF OPD-COD-STAT IN OPD = 'A'
               MOVE 'ING' TO  CPP-COD-MVTO IN CPP 
               ADD 1 TO WSS-NUM-ROPD
               PERFORM PRO-CPP.

       NXT-PRO-OPD.
           MOVE 'OPD-FEC-FCMP' TO FIO-AKEY.
           MOVE FIO-GET-NXT TO FIO-CMND.
           PERFORM DAP-FIO-OPD.
           IF FIO-STAT-OKS AND 
              OPD-FEC-FCMP IN OPD NOT > WSS-FEC-FPRO 
               GO TO LUP-PRO-OPD.
       FIN-PRO-OPD.
           EXIT.

       PRO-LIQ SECTION.
       INI-PRO-LIQ.
      * RECORRER LIQ POR FECHA COMPUTACIONAL
           MOVE WSS-FEC-FPRO TO LIQ-FEC-FCMP IN LIQ.
           MOVE 'LIQ-FEC-FCMP' TO FIO-AKEY.
           MOVE FIO-GET-NLS TO FIO-CMND.
           PERFORM DAP-FIO-LIQ.
           IF NOT FIO-STAT-OKS OR
              LIQ-FEC-FCMP IN LIQ > WSS-FEC-FPRO
               DISPLAY 'NO HAY REG LIQ PARA LA FECHA DE PROCESO : '
                       WSS-FEC-FPRO 
               GO TO FIN-PRO-LIQ.
       LUP-PRO-LIQ.
      * LEER OPD PARA DISPONER DE TODOS LOS DATOS ASOCIADOS A LA LIQ
           MOVE LIQ-CIC-IOPD IN LIQ TO OPD-CIC-IOPD IN OPD.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM DAP-FIO-OPD.           
           IF NOT FIO-STAT-OKS
               DISPLAY 'OPD INEXISTENTE PARA LIQ : CIC=' 
                        LIQ-CIC-IOPD IN LIQ
               GO TO NXT-PRO-LIQ.

           IF LIQ-COD-STAT IN LIQ = 'A'
               IF LIQ-COD-LIQU IN LIQ = 'RC'
                   MOVE 'RSC' TO CPP-COD-MVTO IN CPP 
                   ADD 1 TO WSS-NUM-RLIQ
                   PERFORM PRO-CPP
               ELSE
               IF LIQ-COD-LIQU IN LIQ = 'LT'
                   MOVE 'LTO' TO CPP-COD-MVTO IN CPP 
                   ADD 1 TO WSS-NUM-RLIQ
                   PERFORM PRO-CPP
               ELSE
               IF LIQ-COD-LIQU IN LIQ = 'LP'
                   MOVE 'LPA' TO CPP-COD-MVTO IN CPP 
                   ADD 1 TO WSS-NUM-RLIQ
                   PERFORM PRO-CPP.

       NXT-PRO-LIQ.
           MOVE 'LIQ-FEC-FCMP' TO FIO-AKEY.
           MOVE FIO-GET-NXT TO FIO-CMND.
           PERFORM DAP-FIO-LIQ.
           IF FIO-STAT-OKS AND
              LIQ-FEC-FCMP IN LIQ NOT > WSS-FEC-FPRO
               GO TO LUP-PRO-LIQ.
       FIN-PRO-LIQ.
           EXIT.

       PRO-VEN SECTION.
       INI-PRO-VEN.
      * RECORRER VEN POR FECHA VENCIMIENTO
           MOVE WSS-FEC-FPRO TO VEN-FEC-FVEN IN VEN.
           MOVE 'VEN-FEC-FVEN' TO FIO-AKEY.
           MOVE FIO-GET-NLS TO FIO-CMND.
           PERFORM DAP-FIO-VEN.
           IF NOT FIO-STAT-OKS OR
              VEN-FEC-FVEN IN VEN > WSS-FEC-FPRO
               DISPLAY 'NO HAY REG VEN PARA LA FECHA DE PROCESO : '
                       WSS-FEC-FPRO 
               GO TO FIN-PRO-VEN.
       LUP-PRO-VEN.
      * LEER OPD PARA DISPONER DE TODOS LOS DATOS ASOCIADOS AL VEN
           MOVE VEN-CIC-IOPD IN VEN TO OPD-CIC-IOPD IN OPD.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM DAP-FIO-OPD.           
           IF NOT FIO-STAT-OKS
               DISPLAY 'OPD INEXISTENTE PARA VEN : CIC=' 
                        VEN-CIC-IOPD IN VEN
               GO TO NXT-PRO-VEN.

           IF VEN-VAL-SCAP IN VEN > ZEROES
               MOVE 'VCT' TO CPP-COD-MVTO IN CPP 
               ADD 1 TO WSS-NUM-RVEN                                      
               PERFORM PRO-CPP
               GO TO NXT-PRO-VEN.

      * ACCESO A LIQ PARA VER SI EXISTE UNA LIQ PARA EL VEN
           MOVE VEN-CIC-IOPD IN VEN TO LIQ-CIC-IOPD IN LIQ.
           MOVE VEN-NUM-IVEN IN VEN TO LIQ-NUM-ILIQ IN LIQ.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM DAP-FIO-LIQ.
           IF NOT FIO-STAT-OKS
               DISPLAY 'LIQ INEXISTENTE PARA VEN : CIC=' 
                        VEN-CIC-IOPD IN VEN
               GO TO NXT-PRO-VEN.

           IF LIQ-FEC-FCMP IN LIQ NOT < VEN-FEC-FVEN IN VEN
               MOVE 'VCT' TO CPP-COD-MVTO IN CPP 
               ADD 1 TO WSS-NUM-RVEN                                      
               PERFORM PRO-CPP
               GO TO NXT-PRO-VEN.
                      
       NXT-PRO-VEN.
           MOVE 'VEN-FEC-FVEN' TO FIO-AKEY.
           MOVE FIO-GET-NXT TO FIO-CMND.
           PERFORM DAP-FIO-VEN.
           IF FIO-STAT-OKS AND
              VEN-FEC-FVEN IN VEN NOT > WSS-FEC-FPRO
               GO TO LUP-PRO-VEN.
       FIN-PRO-VEN.
           EXIT.

       PRO-CPP SECTION.
       INI-PRO-CPP.
      *     IF CPP-COD-MVTO IN CPP = 'ING'
               MOVE OPD-COD-VCAM IN OPD TO CPP-COD-VCAM IN CPP.
               MOVE OPD-COD-COPD IN OPD TO CPP-COD-COPD IN CPP.
               MOVE OPD-COD-SCTB IN OPD TO CPP-COD-SCTB IN CPP.
               MOVE FIO-GET-KEY TO FIO-CMND.
               PERFORM DAP-FIO-CPP.
               IF NOT FIO-STAT-OKS
                   DISPLAY 'CPP INEXISTENTE PARA'
                            ' MVTO=' CPP-COD-MVTO IN CPP
                            ' VCAM=' CPP-COD-VCAM IN CPP
                            ' COPD=' CPP-COD-COPD IN CPP
                            ' SCTB=' CPP-COD-SCTB IN CPP
                   GO TO FIN-PRO-CPP
               ELSE
                   PERFORM PRO-TRIO-CPP VARYING WSS-I
                           FROM 1 BY 1 UNTIL WSS-I > 20.
       FIN-PRO-CPP.
           EXIT.
    
       PRO-TRIO-CPP SECTION.
       INI-PRO-TRIO-CPP.
           IF CPP-COD-TCCT IN CPP(WSS-I) NOT > SPACES OR
              CPP-COD-DBHB IN CPP(WSS-I) NOT > SPACES OR
              CPP-COD-TALG IN CPP(WSS-I) NOT > SPACES
               GO TO FIN-PRO-TRIO-CPP.
      * ACCESO A DCC
           MOVE 'DCC'                      TO DCC-COD-TTAB IN DCC.
           MOVE CPP-COD-TCCT IN CPP(WSS-I) TO DCC-COD-TCCT IN DCC.
           MOVE CPP-COD-VCAM IN CPP        TO DCC-COD-VCAM IN DCC.
           MOVE CPP-COD-COPD IN CPP        TO DCC-COD-COPD IN DCC.
           MOVE OPD-COD-PLZO IN OPD        TO DCC-COD-PLZO IN DCC.
      *     MOVE SPACES                     TO DCC-COD-PLZO IN DCC.
           MOVE CPP-COD-SCTB IN CPP        TO DCC-COD-SCTB IN DCC.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM DAP-FIO-DCC.
           IF NOT FIO-STAT-OKS
               DISPLAY 'DCC INEXISTENTE PARA : '
                       ' TCCT=' CPP-COD-TCCT IN CPP(WSS-I)
                       ' VCAM=' CPP-COD-VCAM IN CPP
                       ' COPD=' CPP-COD-COPD IN CPP
                       ' PLZO=' OPD-COD-PLZO IN OPD
                       ' SCTB=' CPP-COD-SCTB IN CPP
               GO TO FIN-PRO-TRIO-CPP.
      *    Grabacion Interfaz de Contabilidad
           PERFORM LOAD-MCD.                       
       FIN-PRO-TRIO-CPP.
           EXIT.

       LOAD-MCD SECTION.
       INI-LOAD-MCD.
      *    MCD Registro 1
           MOVE SPACES TO MC1.
      *
      *    Identificacion Archivo
           MOVE 'PT' TO MC1-COD-IDAR IN MC1.
      *
      *    Numero Secuencial Diario
      *GET-CIC Obtener CIC
           MOVE 'GCTB ' TO CIC-CAI-ICIC IN CIC.
           MOVE CIC-GET TO CIC-CMND.
           PERFORM PRO-CIC.
           IF CIC-STAT NOT = CIC-STAT-OKS
               DISPLAY 'CIC NO ENCONTRADO : ' CIC-MENS
               GO TO FIN-LOAD-MCD
           ELSE
           IF CIC-NUM-ICIC IN CIC  NOT > 9999
               MOVE CIC-NUM-ICIC IN CIC TO MC1-NUM-ITEM IN MC1
           ELSE
               DISPLAY 'CIC OVERFLOW : ' CIC-NUM-ICIC IN CIC 
               GO TO FIN-LOAD-MCD.
      *
      *       Identificador Tipo de Registro
           MOVE 1 TO MC1-COD-IDRE IN MC1.
      *
      *       Indicador Debe Haber
           IF CPP-COD-DBHB IN CPP(WSS-I) = 'D'
      *        DEBE
               MOVE 10 TO MC1-IND-DBHB IN MC1
           ELSE
      *        HABER
               MOVE 60 TO MC1-IND-DBHB IN MC1.
      *
      *       Indicador de Moneda
      *       Centro Costo
           IF OPD-MSC-TVAL IN OPD = '0'
               MOVE 'BCI'  TO MC1-IND-MONE IN MC1
               MOVE OPD-COD-OFIC IN OPD TO MC1-COD-CCOS IN MC1
           ELSE
               MOVE 'BCIX' TO MC1-IND-MONE IN MC1
               MOVE OPD-COD-CVAL IN OPD TO WSS-COD-CVAL IN WSS-VARI
               MOVE OPD-COD-OFIC IN OPD TO WSS-COD-OFIC IN WSS-VARI
               MOVE WSS-COD-CCOS IN WSS-VARI TO MC1-COD-CCOS IN MC1
      *
      *       Numero Cuenta Contable
           MOVE DCC-GLS-CCSB IN DCC TO MC1-NUM-CCTB IN MC1.
      *
      *       Codigo del Sistema
           MOVE 'DPZ' TO MC1-COD-SIST IN MC1.
      *
      *       Fecha Movimiento
           MOVE OPD-NUM-DCMP IN OPD TO MC1-NUM-DMOV IN MC1.
           MOVE OPD-NUM-MCMP IN OPD TO MC1-NUM-MMOV IN MC1.
           MOVE OPD-NUM-ACMP IN OPD TO MC1-NUM-AMOV IN MC1.
      *
      *       Monto
           IF CPP-COD-TALG IN CPP(WSS-I) = 'A'
      *        Capital de la Operacion
               MOVE OPD-VAL-CAPT IN OPD TO MC1-VAL-MONT IN MC1
           ELSE
           IF CPP-COD-TALG IN CPP(WSS-I) = 'B'
      *        Intereses Devengados
               MOVE OPD-VAL-INTD IN OPD TO MC1-VAL-MONT IN MC1
           ELSE
           IF CPP-COD-TALG IN CPP(WSS-I) = 'C'
      *        Reajustes Devengados
               MOVE OPD-VAL-READ IN OPD TO MC1-VAL-MONT IN MC1
           ELSE
           IF CPP-COD-TALG IN CPP(WSS-I) = 'D'
      *        Capital de Cuota
      *        CHEQUEAR 
               MOVE ZEROES              TO MC1-VAL-MONT IN MC1
           ELSE
           IF CPP-COD-TALG IN CPP(WSS-I) = 'E'
      *        Nuevo Capital
      *        CHEQUEAR 
               MOVE ZEROES              TO MC1-VAL-MONT IN MC1
           ELSE
           IF CPP-COD-TALG IN CPP(WSS-I) = 'F'
      *        Saldo de Capital 
               MOVE OPD-VAL-SCAP IN OPD TO MC1-VAL-MONT IN MC1
           ELSE
           IF CPP-COD-TALG IN CPP(WSS-I) = 'G'
      *        Valor Liquidado
               MOVE LIQ-SGV-TPAG IN LIQ TO MC1-VAL-MONT IN MC1.
      *
           MOVE MC1 TO CT1 CT2.
      *     PERFORM EXHIBIT-MC1.
           PERFORM PUT-CTB.
      *
      *    MCD Registro 2
           MOVE SPACES TO MC2.
      *
      *       Identificacion Archivo
           MOVE 'PT' TO MC2-COD-IDAR IN MC2.
      *
      *       Nro. Secuencial Diario
           MOVE CIC-NUM-ICIC IN CIC TO MC2-NUM-ITEM IN MC2.
      *
      *       Identificacion Tipo Registro
           MOVE 2 TO MC2-COD-IDRE IN MC2.
      *
      *       Descripcion
      *           Cod. Int. Comp. Operacion DAP
           MOVE OPD-CIC-IOPD IN OPD TO MC2-CIC-IOPD IN MC2.
      *
      *           Cod. Int. Comp. Serial CDP
           MOVE OPD-CIC-ISER IN OPD TO MC2-CIC-ISER IN MC2.
      *
      *           Valor de Cambio Operacion DAP        TAB VLR
           MOVE OPD-COD-VCAM IN OPD TO MC2-COD-VCAM IN MC2.
      *
      *           Codigo Clase Operacion DAP           TAB AUX
           MOVE OPD-COD-COPD IN OPD TO MC2-COD-COPD IN MC2.
      *
      *           Valor Tasa 
           MOVE OPD-SGV-TINT IN OPD TO MC2-SGV-TINT IN MC2.
      *
      *       Codigo Proyecto
           MOVE SPACES TO MC2-COD-PROY IN MC2
      *
           MOVE MC2 TO CT1 CT2.
      *     PERFORM EXHIBIT-MC2.
           PERFORM PUT-CTB.
      *
      *    MCD Registro 3
           MOVE SPACES TO MC3.
      *
      *       Identificacion Archivo
           MOVE 'PT' TO MC3-COD-IDAR IN MC3.
      *
      *       Nro. Secuencial Diario
           MOVE CIC-NUM-ICIC IN CIC TO MC3-NUM-ITEM IN MC3.
      *
      *       Identificacion Tipo Registro
           MOVE 3 TO MC3-COD-IDRE IN MC3.
      *
      *       Monto Para Estadistica
           MOVE ZEROES TO MC3-VAL-MEST IN MC3.
      *
      *       Codigo Moneda Super
           MOVE OPD-COD-CVAL TO MC3-COD-MONE IN MC3
      *
      *       Monto Conversion
           MOVE ZEROES TO MC3-VAL-MCON IN MC3.
      *
      *       Valor Cambio
           MOVE ZEROES TO MC3-VAL-VCAM IN MC3.
      *
           MOVE MC3 TO CT1 CT2.
      *     PERFORM EXHIBIT-MC3.
           PERFORM PUT-CTB.
       FIN-LOAD-MCD.
           EXIT.

       PUT-CTB SECTION.
       INI-PUT-CTB.
           MOVE FIO-PUT TO FIO-CMND.
           IF OPD-MSC-TVAL IN OPD = '0'
      *        Interfaz Contabilidad en Moneda Chilena
               PERFORM DAP-FIO-CT1
               IF NOT FIO-STAT-OKS
                   DISPLAY 'ERROR FIO-PUT CT1, FIO-STAT : ' FIO-STAT
               ELSE
                  ADD 1 TO WSS-CT1
           ELSE
      *        Interfaz Contabilidad en Moneda Extranjera
               PERFORM DAP-FIO-CT2
               IF NOT FIO-STAT-OKS
                   DISPLAY 'ERROR FIO-PUT CT2, FIO-STAT : ' FIO-STAT
               ELSE
                  ADD 1 TO WSS-CT2.
       FIN-PUT-CTB.
           EXIT.

       COPY DAPBFOPD.
       COPY GNSBGDTC.
       COPY GNSBGIFD.
       COPY GNSBTABT.
       COPY GNSBBSYS.
       COPY GNSBFTAB.
       COPY GNSBFMSG.
       COPY GNSBGEND.

      *Entidades  de GNS
       COPY GNSBFCIC.
       COPY GNSBGCIC.
       COPY GNSBGFEC.
       COPY GNSBPFEC.
       COPY GNSBGHOY.
       COPY GNSBBMSG.

      *Entidades  de DAP
       COPY DAPBFCPP.
       COPY DAPBFDCC.
       COPY DAPBFLIQ.
       COPY DAPBFVEN.
       COPY DAPBFCT1.
       COPY DAPBFCT2.

       EXHIBIT-MC1 SECTION.
       INI-EXHIBIT-MC1.
           EXHIBIT NAMED MC1-COD-IDAR.
           EXHIBIT NAMED MC1-NUM-ITEM.
           EXHIBIT NAMED MC1-COD-IDRE.
           EXHIBIT NAMED MC1-IND-DBHB.
           EXHIBIT NAMED MC1-IND-MONE.
           EXHIBIT NAMED MC1-NUM-CCTB.
           EXHIBIT NAMED MC1-COD-CCOS.
           EXHIBIT NAMED MC1-COD-SIST.
           EXHIBIT NAMED MC1-FEC-FMOV.
           EXHIBIT NAMED MC1-VAL-MONT.
       FIN-EXHIBIT-MC1.
           EXIT.

       EXHIBIT-MC2 SECTION.
       INI-EXHIBIT-MC2.
           EXHIBIT NAMED MC2-COD-IDAR.
           EXHIBIT NAMED MC2-NUM-ITEM.
           EXHIBIT NAMED MC2-COD-IDRE.
           EXHIBIT NAMED MC2-CIC-IOPD.
           EXHIBIT NAMED MC2-CIC-ISER.
           EXHIBIT NAMED MC2-COD-VCAM.
           EXHIBIT NAMED MC2-COD-COPD.
           EXHIBIT NAMED MC2-SGV-TINT.
           EXHIBIT NAMED MC2-COD-PROY.
       FIN-EXHIBIT-MC2.
           EXIT.

       EXHIBIT-MC3 SECTION.
       INI-EXHIBIT-MC3.
           EXHIBIT NAMED MC3-COD-IDAR.
           EXHIBIT NAMED MC3-NUM-ITEM.
           EXHIBIT NAMED MC3-COD-IDRE.
           EXHIBIT NAMED MC3-VAL-MEST.
           EXHIBIT NAMED MC3-COD-MONE.
           EXHIBIT NAMED MC3-VAL-MCON.
           EXHIBIT NAMED MC3-VAL-VCAM.
       FIN-EXHIBIT-MC3.
           EXIT.
      *>>>>
-END
/*
//STEP1  EXEC COBUCL,PARM.COB='APOST,LIB,BUF=15000,FLOW=20,STATE'
//COB.SYSPRINT DD SYSOUT=*
//COB.SYSLIB   DD DSN=ADR.DB75.SOURCE.DESA,DISP=SHR,SUBSYS=LAM
//             DD DSN=GNSCL.FUENTES.V31,DISP=SHR,SUBSYS=LAM
//             DD DSN=GNSCL.FUENTES.V30,DISP=SHR,SUBSYS=LAM
//             DD DSN=GNSCL.FUENTES,DISP=SHR,SUBSYS=LAM
//             DD DSN=GNSCL.FIO.BATCH,DISP=SHR,SUBSYS=LAM
//             DD DSN=TABCL.FUENTES,DISP=SHR,SUBSYS=LAM
//             DD DSN=TABCL.FIO.BATCH,DISP=SHR,SUBSYS=LAM
//             DD DSN=SGCCL.FUENTES,DISP=SHR,SUBSYS=LAM
//             DD DSN=SGCCL.FIO.BATCH,DISP=SHR,SUBSYS=LAM
//             DD DSN=DEUCL.FUENTES,DISP=SHR,SUBSYS=LAM
//             DD DSN=DEUCL.FIO.BATCH,DISP=SHR,SUBSYS=LAM
//             DD DSN=COLCL.FUENTES,DISP=SHR,SUBSYS=LAM
//             DD DSN=COLCL.FIO.BATCH,DISP=SHR,SUBSYS=LAM
//             DD DSN=SUPCL.FUENTES,DISP=SHR,SUBSYS=LAM
//             DD DSN=SUPCL.FIO.BATCH,DISP=SHR,SUBSYS=LAM
//             DD DSN=DAPCL.FUENTES,DISP=SHR,SUBSYS=LAM
//             DD DSN=DAPCL.FIO.BATCH,DISP=SHR,SUBSYS=LAM
//             DD DSN=SBTCL.FUENTES,DISP=SHR,SUBSYS=LAM
//             DD DSN=SBTCL.FIO.BATCH,DISP=SHR,SUBSYS=LAM
//             DD DSN=DAPCL.FUENTES,DISP=SHR,SUBSYS=LAM
//COB.SYSIN    DD DSN=DAPCL.FUENTES(DAPPGCTB),
//             DISP=SHR,SUBSYS=(LAM,'PSWD=CONS')
//LKED.SYSLIN  DD DSN=&&LOADSET,DISP=(OLD,DELETE)
//             DD DDNAME=SYSIN
//LKED.SYSLMOD DD DSN=DAPCM.LINEA(DAPPGCTB),
//             DISP=SHR
//LKED.SYSLIB  DD DSN=CICS.V211.LOADLIB,DISP=SHR
//             DD DSN=GNSCM.RUTINAS.CONSIST,DISP=SHR
//             DD DSN=DAPCM.LINEA,DISP=SHR
//             DD DSN=COB.VSCLLIB,DISP=SHR
//LKED.OBJLIB  DD DSN=TABST.OBJECT,DISP=SHR
//             DD DSN=DAPCT.OBJECT,DISP=SHR
//             DD DSN=ADR.DB75.OBJECT.DESA,DISP=SHR
//LKED.SYSIN   DD *
 INCLUDE OBJLIB(DAPCGCTB)
 ENTRY BEGIN
 NAME DAPPGCTB(R)
/*
//
