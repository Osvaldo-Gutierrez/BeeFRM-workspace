       IDENTIFICATION DIVISION.
      *========================
       PROGRAM-ID.   DAPPQCMR.
       AUTHOR.       CONSIST.
       DATE-WRITTEN. 28-Aug-09 04:30 PM.

      * NOMBRE PROGRAMA                   DAPPQCMR
      * VERSION PGM                       3.1
      * VERSION SKL                       07.08.21
      * OPCION                            CON
      * ARCHIVO BASE                      DAPCMR
      * PANTALLA                          DAPCMR
      * INP/OUT                           DATACOM
      * TAMANO COMMAREA                   250


       ENVIRONMENT DIVISION.
      *=====================
       CONFIGURATION SECTION.
      *----------------------
       SPECIAL-NAMES.
               DECIMAL-POINT IS COMMA.
       DATA DIVISION.
      *==============

       WORKING-STORAGE SECTION.
      *------------------------
      * COPY GNSWGSCR.
       COPY GNSWGCVT.
       77  WSS-TAG-DAPPQCMR-INI PIC X(125) VALUE                        
           '<IDNPGM NOM=$DAPPQCMR$ SKL=$07.08.21$ VSN=${vsnpq}$        
      -    'GEN=$28-Aug-09 04:30 PM$ FNC=${fncpq}$/>'.    

       COPY GNSWCSCR.
       COPY GNSWVSCR.
      *<<<< FIN_SCR_VARI

           02 CMA-VARI.
              05  WSS-POS-ACT            COMP-3       PIC S9(5).
              05  WSS-IND-ACUM          VALUE 0      PIC 9(01).
                  88 DESPLIEGA           VALUE 0.
                  88 ACUMULA             VALUE 0.
                  88 SOLO-ACUMULA        VALUE 1.
                  88 YA-ACUMULO          VALUE 1.
              05  WSS-CLV-INI.
                  07 CMR-KEY-IPAD-INI                 PIC X(17).
                  07 CMR-COD-COPD-INI                 PIC X(06).
              05  WSS-CLV-FIN.
                  07 CMR-KEY-IPAD                     PIC X(17).
                  07 CMR-COD-COPD-FIN                 PIC X(06).
      *>>>>
       COPY DAPWICMR.

       COPY DAPBRCMR.


       COPY GNSWVIDD.
       COPY GNSWGRQA.
       COPY GNSWGUIB.
       COPY GNSWGELS.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-CMR-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-TAB-REQA==.
       COPY GNSBRTAB.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-MSG-REQA==.
       COPY GNSBRMSG.
       COPY GNSWCFIO.
       COPY GNSWVFIO.
       COPY GNSWGFRM.
       COPY GNSWVNUM.
       COPY GNSWCNUM.
       COPY GNSWGFEC.
       COPY GNSWGHOY.
       COPY GNSWGSYS.

      *<<<< WSS

      * Define 01  WSS-VARI de PGM1ANIDX
       01  WSS-VARI.
           03  WSS-IMAX               VALUE 13     PIC 9(02).
           03  CMR-KEY-ICMR.
               05 CMR-KEY-IPAD                        PIC X(17).
               05 CMR-COD-COPD                        PIC X(06).
      * PARA USAR GARSRC:ERRFNDKEY.SRC
           03  WSS-IBUS                               PIC 9(01).
           03  WSS-IBUS-CMR                           PIC 9(01).
           03  WSS-YA-ACUMULO         VALUE 1         PIC 9(01).
           03  WSS-GLS-COPD.
               05  WSS-GLS-ABR1             PIC X(12) VALUE SPACES.
               05  WSS-GLS-BLCO             PIC X(01) VALUE SPACES.
               05  WSS-GLS-ABR2             PIC X(12) VALUE SPACES.
      *>>>>
       01  PGM-VARI.
           03 PGM-ICLR                  VALUE ' '       PIC X(01).
           03 PGM-LIMPIAR-TODO          VALUE ' '       PIC X(01).
           03 PGM-LIMPIAR-LLAVES        VALUE 'K'       PIC X(01).
           03 PGM-LIMPIAR-CAMPOS        VALUE 'F'       PIC X(01).
           03 PGM-NO-LIMPIAR-NADA       VALUE 'N'       PIC X(01).
           03 PGM-PROG                                  PIC X(08).
           03 PGM-NTRN                                  PIC X(04).
           03 PGM-STAT.
              05 PGM-STAT-CMR.
                 88 PGM-STAT-CMR-NUL    VALUE '  '.
                 07 PGM-STT1-CMR        VALUE '2' PIC X(01).
                    88 PGM-STAT-CMR-OKS VALUE '0'.
                 07 PGM-STT2-CMR        VALUE '3' PIC X(01).
           03 PGM-SRNF                  VALUE '23'      PIC X(02).
           03 PGM-SOKS                  VALUE '00'      PIC X(02).
           03 PGM-SNUL                  VALUE '  '      PIC X(02).
           03 PGM-SUAR                  VALUE SPACES    PIC X(15).

       LINKAGE SECTION.
      *----------------
       01  DFHCOMMAREA.
           02 FILLER                    PIC X(250).
       COPY GNSLGFIO.

       PROCEDURE DIVISION.
      *===================

       MAIN SECTION.
       INI-MAIN.
           PERFORM INI.
       LUP-MAIN.
           IF SCR-INST = SCR-INST-HCM
                 PERFORM SCR-COM.
           IF SCR-CCPP = 'ACC'
                 PERFORM SCR-ACC
           ELSE
                 MOVE SCR-INST-HCM TO SCR-INST.
           GO TO LUP-MAIN.
       FIN-MAIN.
           EXIT.

       INI SECTION.
       INI-INI.
       COPY GNSBGEIB.
       COPY GNSBGEDB.
           MOVE LOW-VALUES TO CMR-FLD.
           MOVE LOW-VALUES TO CMR-EDT.
           PERFORM GNS-PRO-RCK.
           PERFORM GNS-BUS-VCA.
           PERFORM GNS-HDL-SYS.
           PERFORM GNS-HDL-FRM.
           MOVE 'DAPPQCMR' TO FIO-PROG.
           PERFORM GNS-BUS-IDD.
      *<<<< INI_FIO
           MOVE +320 TO SCR-TCMA.
           PERFORM GNS-HDL-VSM.
      *>>>>
       FIN-INI.
           EXIT.

       COPY GNSBHSYS.
       COPY GNSBHFRM.
       COPY GNSBPRCK.
       COPY GNSBBVCA.
       COPY GNSBBIDD.

       SCR-COM SECTION.
       INI-SCR-COM.
           MOVE FRM-CPSF-AEY TO FRM-CPIM-AEY.
           PERFORM PRO-ALL.
           PERFORM SCR-CLRA-CMR.
           PERFORM EDT-KEY-CMR.
           PERFORM EDT-FLD-CMR.
           PERFORM SCR-PUTA.
           MOVE SCR-INST-HCM TO SCR-INST.
           MOVE SCR-CMNP     TO SYS-PROG.
           MOVE SCR-VARI     TO SYS-CMMA.
           MOVE SCR-TCMA     TO SYS-TCMA.
           MOVE SYS-XCTL     TO SYS-CMND.
           PERFORM GNS-PRO-SYS.
       XCT-ERR.
           MOVE 'XCTERR    ' TO MSG-COD-MENS.
           MOVE 'GNS'        TO MSG-COD-SIST.
           PERFORM GET-MSG.
           MOVE MSG-GLS-DESC TO SYS-MEN1.
           MOVE SYS-PROG     TO SYS-MEN2.
           MOVE SYS-ABOR     TO SYS-CMND.
           PERFORM GNS-PRO-SYS.
       COPY GNSBGGBK.
       FIN-SCR-COM.
           EXIT.



       SCR-ACC SECTION.
       INI-SCR-ACC.
           IF SCR-INST = SCR-INST-HKY
               PERFORM HBL-KEY
               MOVE SCR-INST-GKY TO SCR-INST
               PERFORM SCR-DMSG
           ELSE
           IF SCR-INST = SCR-INST-GKY
                PERFORM SCR-KEY
                IF SCR-STAT NOT = SCR-STAT-ABT
                        PERFORM SCR-TRL
                ELSE
                        PERFORM DESSCRTRL
                        GO TO FIN-SCR-ACC
           ELSE
           IF SCR-INST = SCR-INST-GAB
                PERFORM GET-CON
           ELSE
           IF SCR-INST = SCR-INST-BRW
               MOVE SCR-FFLD TO FRM-FFLD
               PERFORM BRW-SCR-ACC.
           PERFORM DESSCRTRL.
      *<<<< PFS_SCR_ACC
           IF FRM-FFLD = FRM-FFLD-PF6
                    OR   FRM-FFLD-PF5
               PERFORM VAL-NUM-KEY-CMR
               PERFORM VAL-NUM-FLD-CMR
               PERFORM RST-STAT
               PERFORM FND-SCR-KEY THRU FIN-SCR-KEY
               IF SCR-STAT NOT = SCR-STAT-ABT
                   PERFORM SCR-TRL
               ELSE
                   PERFORM DESSCRTRL
                   GO TO FIN-SCR-ACC.
      *>>>>
           MOVE SPACES TO FRM-MENS.
           PERFORM SCR-MSSG.
       FIN-SCR-ACC.
           EXIT.

       BRW-SCR-ACC SECTION.
       INI-BRW-SCR-ACC.
       FIN-BRW-SCR-ACC.
           EXIT.




       SCR-DMSG SECTION.
       INI-SCR-DMSG.
           IF PGM-ICLR = PGM-NO-LIMPIAR-NADA
               NEXT SENTENCE
           ELSE
           IF PGM-ICLR = PGM-LIMPIAR-TODO
               PERFORM SCR-CLRA-CMR
               PERFORM EDT-KEY-CMR
               PERFORM EDT-FLD-CMR
           ELSE
           IF PGM-ICLR = PGM-LIMPIAR-LLAVES
               PERFORM CLR-KEY-CMR
               PERFORM EDT-KEY-CMR
           ELSE
               PERFORM CLR-FLD-CMR
               PERFORM EDT-FLD-CMR.
           PERFORM SCR-PUTA.
           PERFORM SCR-EXIT.
       FIN-SCR-DMSG.
           EXIT.

       SCR-KEY SECTION.
       INI-SCR-KEY.
           PERFORM SCR-RST.
           PERFORM GET-KEY.
           IF FRM-STAT-ABT
                   MOVE SPACES TO FRM-MENS
                   PERFORM SCR-MSSG
                   GO TO FIN-SCR-KEY.
       FND-SCR-KEY.
           MOVE SPACES TO FRM-MENS.
           PERFORM FND-KEY.
           IF FIO-STAT-OKS
               PERFORM PUT-SCR
               MOVE PGM-LIMPIAR-TODO TO PGM-ICLR
               GO TO FIN-SCR-KEY.
      *JSS ELSE
      *        PERFORM CLR-FLD-CMR.
       ERR-SCR-KEY.
           MOVE PGM-LIMPIAR-CAMPOS TO PGM-ICLR.
           IF FRM-MENS NOT > SPACES
               IF FIO-STAT-EOF
                   MOVE 'REGEOF    ' TO MSG-COD-MENS
                   MOVE 'GNS' TO MSG-COD-SIST
                   PERFORM GET-MSG
                   MOVE MSG-GLS-DESC TO FRM-MENS
               ELSE
               IF FIO-STAT = FIO-STAT-NEX
                   MOVE 'REGNEX    ' TO MSG-COD-MENS
                   MOVE 'GNS' TO MSG-COD-SIST
                   PERFORM GET-MSG
                   MOVE MSG-GLS-DESC TO FRM-MENS
               ELSE
                   MOVE 'FIOSTAT' TO MSG-COD-TMSG
                   MOVE FIO-STAT  TO MSG-COD-CMSG
                   MOVE 'GNS'     TO MSG-COD-SIST
                   PERFORM GET-MSG
                   MOVE MSG-GLS-DESC TO FRM-MENS.
           PERFORM SCR-MSSG.
           MOVE SCR-STAT-ABT TO SCR-STAT.
       FIN-SCR-KEY.
           EXIT.

       SCR-RST SECTION.
       INI-SCR-RST.
           MOVE SPACES       TO PGM-ICLR.
           MOVE SPACES       TO SCR-ACTU.
           MOVE SCR-STPP     TO SCR-STAT.
           MOVE SCR-MFLD-NOT TO SCR-MFLD.
           MOVE LOW-VALUES   TO CMR-FLD.
           MOVE LOW-VALUES TO CMR-EDT.
       FIN-SCR-RST.
           EXIT.

       GET-KEY SECTION.
       INI-GET-KEY.
           PERFORM SCR-GKEY.
           IF FRM-STAT-ABT
               MOVE SCR-STAT-ABT TO SCR-STAT.
       FIN-GET-KEY.
           EXIT.

       GET-IKY SECTION.
       INI-GET-IKY.
           PERFORM SCR-GIKY.
           IF FRM-STAT-ABT
               MOVE SCR-STAT-ABT TO SCR-STAT.
       FIN-GET-IKY.
           EXIT.

       FND-KEY SECTION.
       INI-FND-KEY.
      *<<<< INI_FND_KEY
      * WSS-POS-ACT CONTIENE LA POSICION ALCANZADA AL LLENAR LA PANTALLA

      * ASUME MENSAJE DEL SISTEMA DEL HIJO EN ERRFNDKEY.SRC
           MOVE 1 TO WSS-IBUS, WSS-IBUS-CMR.

           IF FRM-FFLD = FRM-FFLD-PF5
               MOVE WSS-CLV-INI TO CMR-KEY-ICMR IN CMR
               MOVE FIO-GET-NLS TO FIO-CMND
               MOVE 'CMR-KEY-ICMR' TO FIO-AKEY
               PERFORM DAP-FIO-CMR
               IF NOT FIO-STAT-OKS
                   MOVE 'PGM    ERR' TO MSG-COD-MENS
                   GO TO ERR-FND-KEY
               ELSE
                   MOVE 'CMR-KEY-ICMR' TO FIO-AKEY
                   MOVE FIO-GET-PRV TO FIO-CMND
                   PERFORM DAP-FIO-CMR
                   MOVE FIO-GET-PRV TO FIO-CMND
                   MOVE 'CMR-KEY-ICMR' TO FIO-AKEY
                   GO TO LEE-CMR
           ELSE
           IF FRM-FFLD = FRM-FFLD-PF6
               IF WSS-POS-ACT < WSS-IMAX
                   MOVE 'CMR    NONXT' TO MSG-COD-MENS
                   GO TO ERR-FND-KEY
               ELSE
                   MOVE WSS-CLV-FIN TO CMR-KEY-ICMR IN CMR
                   MOVE FIO-GET-NLS TO FIO-CMND
                   MOVE 'CMR-KEY-ICMR' TO FIO-AKEY
                   PERFORM DAP-FIO-CMR
                   MOVE FIO-GET-NXT TO FIO-CMND
                   GO TO LEE-CMR.

      * INICIALIZA POSICION DE PUNTERO Y LLAVES
           MOVE ZEROES TO WSS-POS-ACT, WSS-IND-ACUM.
           MOVE SPACES TO WSS-CLV-INI, WSS-CLV-FIN.
           MOVE FRM-FFLD-PF6 TO FRM-FFLD.

           GO TO LEE-PAD-CMR.
      *>>>>
           PERFORM KEY-ALL-CMR.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM DAP-FIO-CMR.
           MOVE FIO-STAT TO PGM-STAT-CMR.
      *<<<< FIN_FND_KEY
       LEE-PAD-CMR.
      *<<< LEEPAD
           MOVE CMR-NUM-DCMR IN CMR-FLD TO CMR-NUM-DCMR IN CMR.
           MOVE CMR-NUM-MCMR IN CMR-FLD TO CMR-NUM-MCMR IN CMR.
           MOVE CMR-NUM-SCMR IN CMR-FLD TO CMR-NUM-SCMR IN CMR.
           MOVE CMR-NUM-ACMR IN CMR-FLD TO CMR-NUM-ACMR IN CMR.
           MOVE SPACES                  TO CMR-COD-OFIC IN CMR.
           MOVE CMR-COD-VCAM IN CMR-FLD TO CMR-COD-VCAM IN CMR.
           MOVE LOW-VALUES              TO CMR-COD-COPD IN CMR.
           MOVE FIO-GET-NLS TO FIO-CMND.
           PERFORM DAP-FIO-CMR.
           IF FIO-STAT-OKS                                  AND
              CMR-NUM-DCMR IN CMR-FLD = CMR-NUM-DCMR IN CMR AND
              CMR-NUM-MCMR IN CMR-FLD = CMR-NUM-MCMR IN CMR AND
              CMR-NUM-SCMR IN CMR-FLD = CMR-NUM-SCMR IN CMR AND
              CMR-NUM-ACMR IN CMR-FLD = CMR-NUM-ACMR IN CMR AND
              CMR-COD-VCAM IN CMR-FLD = CMR-COD-VCAM IN CMR
                 MOVE '00' TO FIO-STAT
                              PGM-STAT-CMR
           ELSE
                 MOVE '23' TO FIO-STAT
                 MOVE FIO-STAT TO PGM-STAT-CMR.

           IF NOT FIO-STAT-OKS
               MOVE 'CMR    NEX' TO MSG-COD-MENS
               GO TO ERR-FND-KEY.

           MOVE FIO-END-BRW TO FIO-CMND.
           PERFORM DAP-FIO-CMR.

           MOVE CMR-KEY-IPAD IN CMR TO CMR-KEY-IPAD
                                        IN CMA-VARI.
           MOVE CMR-KEY-IPAD IN CMR TO CMR-KEY-IPAD-INI
                                        IN CMA-VARI.

           MOVE CMR-KEY-IPAD IN CMR TO CMR-KEY-IPAD IN WSS-VARI.
           MOVE LOW-VALUES            TO CMR-COD-COPD
                                        IN CMR-KEY-ICMR IN WSS-VARI.
           MOVE CMR-KEY-ICMR IN WSS-VARI TO CMR-KEY-ICMR IN CMR.
           MOVE FIO-GET-NLS TO FIO-CMND.
       LEE-CMR.
           PERFORM DAP-FIO-CMR.
           MOVE CMR-KEY-ICMR IN CMR TO CMR-KEY-ICMR IN WSS-VARI.
           IF NOT FIO-STAT-OKS OR
              CMR-KEY-IPAD IN WSS-VARI NOT = CMR-KEY-IPAD IN CMA-VARI
               IF WSS-POS-ACT = ZEROES
                   MOVE 'CMR    NEX' TO MSG-COD-MENS
                   GO TO ERR-FND-KEY
               ELSE
                   IF FRM-FFLD = FRM-FFLD-PF5
                       MOVE 'CMR    NOPRV' TO MSG-COD-MENS
                       GO TO ERR-FND-KEY
                   ELSE
                       MOVE 'CMR    NONXT' TO MSG-COD-MENS
                       GO TO ERR-FND-KEY.
       CARGA-CMR.
      *    INICIALIZA POSICION DEL INDICE DEL GRUPO DE OCURRENCIAS
           IF FRM-FFLD = FRM-FFLD-PF6
               MOVE ZEROES TO FRM-IFLD
           ELSE
               ADD 1 , WSS-IMAX GIVING FRM-IFLD.

           MOVE SPACES TO MSG-COD-MENS.
           PERFORM PUT-TAB-CMR.

           MOVE WSS-YA-ACUMULO TO WSS-IND-ACUM.
           IF FRM-FFLD = FRM-FFLD-PF5
               MOVE WSS-IMAX TO WSS-POS-ACT
           ELSE
           IF FRM-FFLD = FRM-FFLD-PF6
               ADD 1 TO FRM-IFLD
               PERFORM LIM-RES-LIN UNTIL FRM-IFLD > WSS-IMAX
               IF WSS-POS-ACT > WSS-IMAX
                   MOVE WSS-IMAX TO WSS-POS-ACT.

      * MUEVE ACUMULADORES A CMR-FLD

           IF MSG-COD-MENS > SPACES
               MOVE 'DAP' TO FIO-SIST
               MOVE SPACES TO FIO-AKEY
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS.

           MOVE '00' TO FIO-STAT.
           GO TO FIN-FND-KEY.

       ERR-FND-KEY.
               MOVE 'DAP' TO MSG-COD-SIST.
           PERFORM GET-MSG.
           MOVE MSG-GLS-DESC TO FRM-MENS.
           MOVE SCR-STAT-CON TO SCR-STAT.
           MOVE '00' TO FIO-STAT.
           GO TO FIN-FND-KEY.
      *>>>>
       FIN-FND-KEY.
           EXIT.
 
       PUT-SCR SECTION.
       INI-PUT-SCR.
           PERFORM PUT-ALL-CMR.
       FIN-PUT-SCR.
           EXIT.

       STP-EXIT SECTION.
       INI-STP-EXIT.
           MOVE SCR-PROG TO PGM-PROG.
           MOVE SCR-NTRN TO PGM-NTRN.

           MOVE SCR-PROV TO SCR-PROG.
           MOVE SCR-NTRV TO SCR-NTRN.

           MOVE PGM-PROG TO SCR-PROV
           MOVE PGM-NTRN TO SCR-NTRV.
       FIN-STP-EXIT.
           EXIT.

       SCR-EXIT SECTION.
       INI-SCR-EXIT.
           MOVE 'P'      TO SCR-ICMN.
           MOVE SCR-NTRN TO SYS-NTRN.
           MOVE SCR-VARI TO SYS-CMMA.
           MOVE SCR-TCMA TO SYS-TCMA.
           MOVE SYS-RTRN TO SYS-CMND.
           PERFORM GNS-PRO-SYS.
       FIN-SCR-EXIT.
           EXIT.

       SCR-PUTA SECTION.
       INI-SCR-PUTA.
           MOVE SCR-NMAP TO FRM-NAME.
           MOVE SCR-NLIB TO FRM-NLIB.
           MOVE CMR-FLD TO FRM-DFLD.
           MOVE FRM-PUT-ALL TO FRM-CMND.
           PERFORM GNS-PRO-FRM.
       FIN-SCR-PUTA.
           EXIT.

       SCR-MSSG SECTION.
       INI-SCR-MSSG.
           IF FRM-MEN1 NOT > SPACES
               MOVE SPACES TO FRM-MEN1.
           IF FRM-MEN2 NOT > SPACES
               MOVE SPACES TO FRM-MEN2.
           MOVE FRM-MENS TO CMR-GLS-MENS.
       FIN-SCR-MSSG.
           EXIT.

       SCR-GKEY SECTION.
       INI-SCR-GKEY.
           MOVE SCR-NMAP TO FRM-NAME.
           MOVE SCR-NLIB TO FRM-NLIB.
           MOVE FRM-GET-ALL TO FRM-CMND.
           PERFORM GNS-PRO-FRM.
           MOVE SPACES TO FRM-MENS.
           IF NOT ( FRM-FFLD = FRM-FFLD-RET  OR FRM-FFLD-PF10 OR
                               FRM-FFLD-PF12 OR FRM-FFLD-PF3 )
               MOVE 'PFSINV    ' TO MSG-COD-MENS
               MOVE 'GNS' TO MSG-COD-SIST
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS
               PERFORM FST-KEY-CMR
               PERFORM SCR-MSSG
               PERFORM SCR-PUTA
               PERFORM SCR-EXIT.
           MOVE FRM-DFLD TO CMR-FLD.
           IF FRM-STAT-ABT
               GO TO FIN-SCR-GKEY.
           MOVE FRM-SUAR-OKS TO FRM-SUAR.
           PERFORM VAL-NUM-KEY-CMR.
           IF FRM-SUAR EQUAL FRM-SUAR-MAL OR FRM-SUAR-CLR
               PERFORM SCR-MSSG
               PERFORM EDT-KEY-CMR
               PERFORM SCR-PUTA
               PERFORM SCR-EXIT.
      *JSS
           PERFORM CLR-FLD-CMR.
           PERFORM VAL-IKY-CMR.
           IF FRM-SUAR EQUAL FRM-SUAR-MAL OR FRM-SUAR-CLR
               GO TO ERR-SCR-GKEY.
           PERFORM VAL-MKY-CMR.
           IF FRM-SUAR EQUAL FRM-SUAR-MAL OR FRM-SUAR-CLR
               GO TO ERR-SCR-GKEY.
           PERFORM VAL-AKY-CMR.
           IF FRM-SUAR EQUAL FRM-SUAR-MAL OR FRM-SUAR-CLR
               GO TO ERR-SCR-GKEY.
           PERFORM VAL-CON-KEY-CMR.
           IF NOT ( FRM-SUAR EQUAL FRM-SUAR-MAL OR FRM-SUAR-CLR )
               GO TO FIN-SCR-GKEY.
           IF FRM-UCUR NOT > SPACES
               PERFORM FST-KEY-CMR.
       ERR-SCR-GKEY.
           PERFORM SCR-MSSG.
           PERFORM EDT-KEY-CMR.
           PERFORM SCR-PUTA.
           PERFORM SCR-EXIT.
       FIN-SCR-GKEY.
           PERFORM SCR-MSSG.

       SCR-GIKY SECTION.
       INI-SCR-GIKY.
           MOVE SCR-NMAP TO FRM-NAME.
           MOVE SCR-NLIB TO FRM-NLIB.
           MOVE FRM-GET-ALL TO FRM-CMND.
           PERFORM GNS-PRO-FRM.
           MOVE SPACES TO FRM-MENS.
           IF NOT ( FRM-FFLD = FRM-FFLD-RET  OR FRM-FFLD-PF10 OR
                               FRM-FFLD-PF12 OR FRM-FFLD-PF3 )
               MOVE 'PFSINV    ' TO MSG-COD-MENS
               MOVE 'GNS' TO MSG-COD-SIST
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS
               PERFORM FST-KEY-CMR
               PERFORM SCR-MSSG
               PERFORM SCR-PUTA
               PERFORM SCR-EXIT.
           MOVE FRM-DFLD TO CMR-FLD.
           IF FRM-STAT-ABT
               GO TO FIN-SCR-GIKY.
           MOVE FRM-SUAR-OKS TO FRM-SUAR.
           PERFORM VAL-NUM-KEY-CMR.
           IF FRM-SUAR EQUAL FRM-SUAR-MAL OR FRM-SUAR-CLR
               PERFORM SCR-MSSG
               PERFORM EDT-IKY-CMR
               PERFORM SCR-PUTA
               PERFORM SCR-EXIT.
      *JSS
           PERFORM CLR-FLD-CMR.
           PERFORM VAL-IKY-CMR.
           IF FRM-SUAR EQUAL FRM-SUAR-MAL OR FRM-SUAR-CLR
               GO TO ERR-SCR-GIKY.
           PERFORM VAL-CON-IKY-CMR.
           IF NOT ( FRM-SUAR EQUAL FRM-SUAR-MAL OR FRM-SUAR-CLR )
               GO TO FIN-SCR-GIKY.
           IF FRM-UCUR NOT > SPACES
               PERFORM FST-KEY-CMR.
       ERR-SCR-GIKY.
           PERFORM SCR-MSSG.
           PERFORM EDT-IKY-CMR.
           PERFORM SCR-PUTA.
           PERFORM SCR-EXIT.
       FIN-SCR-GIKY.
           PERFORM SCR-MSSG.

       GET-CON SECTION.
       INI-GET-CON.
           MOVE SCR-NMAP TO FRM-NAME.
           MOVE SCR-NLIB TO FRM-NLIB.
           MOVE FRM-GET-ALL TO FRM-CMND.
           PERFORM GNS-PRO-FRM.
           IF NOT ( FRM-FFLD = FRM-FFLD-RET  OR FRM-FFLD-PF10 OR
                               FRM-FFLD-PF12 OR FRM-FFLD-PF3 )
      *<<<< PFS_GET_CON OR PFS_GET_ACC
           IF NOT ( FRM-FFLD = FRM-FFLD-PF6
                          OR   FRM-FFLD-PF5
                  )
      *>>>>
               MOVE 'PFSINV    ' TO MSG-COD-MENS
               MOVE 'GNS' TO MSG-COD-SIST
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO CMR-GLS-MEN2
               MOVE SCR-PRMT     TO CMR-GLS-MEN1
               PERFORM FST-MSG
               PERFORM SCR-PUTA
               PERFORM SCR-EXIT.
           MOVE FRM-DFLD TO CMR-FLD.
       FIN-GET-CON.
           MOVE SCR-STAT-CON TO SCR-STAT.

       CLR-MSG SECTION.
       INI-CLR-MSG.
           MOVE SPACES TO CMR-GLS-MENS.
       FIN-CLR-MSG.
           EXIT.

       HBL-IKY SECTION.
       INI-HBL-IKY.
           IF SCR-DESDE-CMN
               MOVE CMR-GLS-MENS TO FRM-MENS
               MOVE LOW-VALUES TO CMR-FLD
      * FLB  7-NOV-1994
               PERFORM CLR-KEY-CMR

               IF FRM-MENS < SPACES
                   MOVE LOW-VALUES TO CMR-GLS-MENS
               ELSE
                   MOVE FRM-MENS TO CMR-GLS-MENS.
           PERFORM PRO-MKY-CMR.
           PERFORM PRO-AKY-CMR.
           PERFORM UNP-IKY-CMR.
           PERFORM FST-KEY-CMR.
       FIN-HBL-IKY.
           EXIT.

       HBL-KEY SECTION.
       INI-HBL-KEY.
           IF SCR-DESDE-CMN
               MOVE CMR-GLS-MENS TO FRM-MENS
               MOVE LOW-VALUES TO CMR-FLD
               IF FRM-MENS < SPACES
                   MOVE LOW-VALUES TO CMR-GLS-MENS
               ELSE
                   MOVE FRM-MENS TO CMR-GLS-MENS.
           PERFORM UNP-KEY-CMR.
           PERFORM FST-KEY-CMR.
       FIN-HBL-KEY.
           EXIT.

       HBL-FLD SECTION.
       INI-HBL-FLD.
           PERFORM PRO-IKY-CMR.
           PERFORM PRO-AKY-CMR.
           PERFORM UNP-MKY-CMR.
           PERFORM UNP-FLD-CMR.
           PERFORM FST-FLD-CMR.
       FIN-HBL-FLD.
           EXIT.

       FST-MSG SECTION.
       INI-FST-MSG.
           MOVE -1 TO CMR-GLS-MENS-LEN.
       FIN-FST-MSG.
           EXIT.

       PRO-ALL SECTION.
       INI-PRO-ALL.
           PERFORM PRO-KEY-CMR.
           PERFORM FST-MSG.
       FIN-PRO-ALL.
           EXIT.

       SCR-TRL SECTION.
       INI-SCR-TRL.
           IF FRM-MEN1 NOT > SPACES
               MOVE SCR-PRMT TO FRM-MEN1.
           IF SCR-STAT = SCR-STAT-MOD
               PERFORM HBL-FLD
               PERFORM SCR-MSSG
               PERFORM EDT-KEY-CMR
               PERFORM EDT-FLD-CMR
               PERFORM SCR-PUTA
               PERFORM STP-EXIT
               MOVE SCR-INST-GFL TO SCR-INST
               PERFORM SCR-EXIT.
           IF SCR-STAT = SCR-STAT-SON
               PERFORM PRO-ALL
               PERFORM SCR-MSSG
               PERFORM EDT-KEY-CMR
               PERFORM EDT-FLD-CMR
               PERFORM SCR-PUTA
               PERFORM STP-EXIT
               MOVE SCR-INST-GCS TO SCR-INST
               PERFORM SCR-EXIT.
      *ASUME SCR-STAT-CON.
           MOVE SCR-STAT-CON TO SCR-STAT.
      *    MOVE FRM-CPSF-AEY TO FRM-CPIM-AEY.
           PERFORM PRO-ALL.
           PERFORM SCR-MSSG.
           PERFORM EDT-KEY-CMR.
           PERFORM EDT-FLD-CMR.
           PERFORM SCR-PUTA.
           MOVE SCR-INST-GAB TO SCR-INST.
           PERFORM SCR-EXIT.
       FIN-SCR-TRL.
           EXIT.

       DESSCRTRL SECTION.
       INI-DESSCRTRL.
           MOVE SCR-VFLD-NOT TO SCR-VFLD.
           MOVE FRM-FFLD TO SCR-FFLD.
       FIN-DESSCRTRL.
           IF SCR-FFLD-PF10 OR SCR-FFLD-PF3
                 MOVE SCR-INST-HCM TO SCR-INST
           ELSE
                 MOVE SCR-INST-HKY TO SCR-INST.
       EXT-DESSCRTRL.
           EXIT.

      * PGM-EBR-ALL SECTION.
      * INI-PGM-EBR-ALL.
      *     MOVE 'GNS' TO FIO-SIST.
      *     MOVE FIO-EBR-ALL TO FIO-CMND.
      *     PERFORM GNS-FIO-TAB.
      * FIN-PGM-EBR-ALL.
      *     EXIT.

       COPY DAPBQCMR.
       COPY GNSBVNUM.
       COPY DAPBFCMR.
       COPY GNSBFMSG.
       COPY GNSBGSYS.
       COPY GNSBGDTC.
       COPY GNSBGFRM.
       COPY GNSBGMSG.
       COPY GNSBEKEY.
       COPY GNSBIABT.
       COPY GNSBBTAB.
       COPY GNSBVCOD.
       COPY GNSBVTAB.
       COPY GNSBFTAB.
       COPY GNSBGFEC.
       COPY GNSBGHOY.

      *<<<< EOF
       RST-STAT SECTION.
       INI-RST-STAT.
           MOVE SCR-STPP     TO SCR-STAT.
           MOVE SCR-MFLD-NOT TO SCR-MFLD.
       FIN-RST-STAT.
           EXIT.
      *>>>>
      *<<<< EOF
       PUT-TAB-CMR SECTION.
       INI-PUT-TAB-CMR.

           IF FRM-FFLD = FRM-FFLD-PF5
               SUBTRACT 1 FROM FRM-IFLD
               IF FRM-IFLD = 1
                   MOVE CMR-COD-COPD IN CMR TO
                        CMR-COD-COPD-INI IN WSS-CLV-INI
               ELSE
               IF FRM-IFLD = WSS-IMAX
                   MOVE CMR-COD-COPD IN CMR TO
                        CMR-COD-COPD-FIN IN WSS-CLV-FIN
               ELSE
                   NEXT SENTENCE
           ELSE
               ADD 1 TO WSS-POS-ACT
               IF ACUMULA AND WSS-POS-ACT > WSS-IMAX
      *        SOLO ACUMULA, SIN DESPLEGAR
                   GO TO DSPL-O-ACUM
               ELSE
                   ADD 1 TO FRM-IFLD
                   IF FRM-IFLD = 1
                       MOVE CMR-COD-COPD IN CMR TO
                            CMR-COD-COPD-INI IN WSS-CLV-INI
                       MOVE CMR-COD-COPD IN CMR TO
                            CMR-COD-COPD-FIN IN WSS-CLV-FIN
                   ELSE
                   IF FRM-IFLD NOT > WSS-IMAX
                       MOVE CMR-COD-COPD IN CMR TO
                            CMR-COD-COPD-FIN IN WSS-CLV-FIN.

           MOVE CMR-VAL-CAPT IN CMR TO FRM-VAL-CAPI IN
                                                CMR-FLD (FRM-IFLD).
           MOVE CMR-NUM-TDOC IN CMR TO FRM-NUM-CDOC IN
                                                CMR-FLD (FRM-IFLD).
           MOVE CMR-VAL-INTE IN CMR TO FRM-VAL-INTE IN
                                                CMR-FLD (FRM-IFLD).


      *BUS-TAB busca glosa de codigo en tabla
           MOVE 'TAB'               TO FIO-SIST.
           MOVE 'TIO'               TO TAB-COD-TTAB IN TAB.
           MOVE CMR-COD-TOPD IN CMR TO TAB-COD-CTAB IN TAB.
           MOVE FIO-GET-KEY         TO FIO-CMND.
           PERFORM GNS-FIO-TAB.
           IF NOT FIO-STAT-OKS
               MOVE SPACES TO WSS-GLS-ABR1 IN WSS-VARI
           ELSE
               MOVE TAB-GLS-DCOR IN TAB TO WSS-GLS-ABR1 IN WSS-VARI.

           MOVE 'TAB'               TO FIO-SIST.
           MOVE 'AUX'               TO TAB-COD-TTAB IN TAB.
           MOVE CMR-COD-COPD IN CMR TO TAB-COD-CTAB IN TAB.
           MOVE FIO-GET-KEY         TO FIO-CMND.
           PERFORM GNS-FIO-TAB.
           IF NOT FIO-STAT-OKS
               MOVE SPACES TO WSS-GLS-ABR2 IN WSS-VARI
           ELSE
               MOVE TAB-GLS-DCOR IN TAB TO WSS-GLS-ABR2 IN WSS-VARI.

           MOVE WSS-GLS-COPD IN WSS-VARI TO FRM-GLS-DESC IN
                                                CMR-FLD (FRM-IFLD).

       DSPL-O-ACUM.

       NXT-PUT-TAB-CMR.
           IF FRM-FFLD = FRM-FFLD-PF5
               IF FRM-IFLD > 1
                   MOVE FIO-GET-PRV TO FIO-CMND
                   MOVE 'CMR-KEY-ICMR' TO FIO-AKEY
               ELSE
                   GO TO FIN-PUT-TAB-CMR
           ELSE
           IF YA-ACUMULO
               IF FRM-IFLD < WSS-IMAX
                   MOVE 'CMR-KEY-ICMR' TO FIO-AKEY
                   MOVE FIO-GET-NXT TO FIO-CMND
               ELSE
                   GO TO FIN-PUT-TAB-CMR
           ELSE
               MOVE 'CMR-KEY-ICMR' TO FIO-AKEY
               MOVE FIO-GET-NXT TO FIO-CMND.

           PERFORM DAP-FIO-CMR.
           MOVE CMR-KEY-ICMR IN CMR TO CMR-KEY-ICMR IN WSS-VARI.
           IF FIO-STAT-OKS AND
               CMR-KEY-IPAD IN CMA-VARI = CMR-KEY-IPAD IN WSS-VARI
               GO TO INI-PUT-TAB-CMR.

       FIN-PUT-TAB-CMR.
           EXIT.

       LIM-RES-LIN SECTION.
       INI-LIM-RES-LIN.

           MOVE SPACES TO FRM-GLS-DESC IN CMR-FLD(FRM-IFLD).

           MOVE ZEROES TO FRM-VAL-CAPI IN CMR-FLD (FRM-IFLD),
                          FRM-NUM-CDOC IN CMR-FLD (FRM-IFLD),
                          FRM-VAL-INTE IN CMR-FLD (FRM-IFLD).
           ADD 1 TO FRM-IFLD.
       FIN-LIM-RES-LIN.
           EXIT.

       COPY GNSBGVSM.
       COPY GNSBHVSM.
      *>>>>
