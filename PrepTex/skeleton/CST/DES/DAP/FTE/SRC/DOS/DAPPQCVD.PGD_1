       IDENTIFICATION DIVISION.
      *========================
       PROGRAM-ID.   DAPPQCVD.
       AUTHOR.       BEE.
       DATE-WRITTEN. 07-Jan-09 11:31 PM.

      * NOMBRE PROGRAMA                   DAPPQCVD
      * VERSION PGM                       3.1
      * VERSION SKL                       07.08.21
      * OPCION                            CON
      * ARCHIVO BASE                      DAPOPD
      * PANTALLA                          DAPCVD
      * INP/OUT                           DATACOM
      * TAMANO COMMAREA                   250




       ENVIRONMENT DIVISION.
      *=====================
       CONFIGURATION SECTION.
      *----------------------
       SPECIAL-NAMES.
               DECIMAL-POINT IS COMMA.
       DATA DIVISION.
      *==============

       WORKING-STORAGE SECTION.
      *------------------------
      * COPY GNSWGSCR.
       COPY GNSWGCVT.

       77  WSS-TAG-DAPPQCVD-INI PIC X(125) VALUE                        
           '<IDNPGM NOM=$DAPPQCVD$ SKL=$07.08.21$ VSN=$07.08.24$        
      -    'GEN=$07-Jan-09 11:31 PM$ FNC=$DAPNVA$/>'.    

       COPY GNSWCSCR.
      *PTC-INI
      *PTC-SUB
      * COPY GNSWVSCR.
       COPY GNSWV3CR.
      *PTC-FIN

      *<<<< FIN-SCR-VARI
           03  SCR-NUM-PANT                         PIC 9(03).
           03  SCR-TOT-OCCU    VALUE 0              PIC 9(03).
      *>>>>

       COPY DAPWICVD.

       COPY DAPBROPD.


       COPY GNSWVIDD.
       COPY GNSWGRQA.
       COPY GNSWGUIB.
       COPY GNSWGELS.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-OPD-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-TAB-REQA==.
       COPY GNSBRTAB.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-MSC-REQA==.
       COPY GNSBRMSC.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-MSG-REQA==.
       COPY GNSBRMSG.
       COPY GNSWCFIO.
       COPY GNSWVFIO.
      *PTC-INI
      *PTC-SUB
      * ISP  10-MAY-2001 13:46:35 
      * COPY GNSWGFRM.
       COPY GNSWG3CF.
       COPY GNSWGTSK.
       COPY GNSWGQUE.
      *PTC-FIN
       COPY GNSWVNUM.
       COPY GNSWCNUM.
       COPY GNSWGFEC.
       COPY GNSWGHOY.
       COPY GNSWCVRF.
       COPY GNSWVVRF.
       COPY GNSWGIDC.
       COPY GNSWGSYS.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-OFI-REQA==.
       COPY TABBROFI.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-USR-REQA==.
       COPY TABBRUSR.

      *<<<< WSS
       COPY DAPWXCVD.
       01  WSS-VARI-PFS-QUE.
           03 WSS-HAY-ERRO     VALUE 'N'            PIC X(01).
           03 WSS-FRM-FFLD     VALUE SPACES         PIC X(01).
           03 WSS-MAX-PANT     VALUE 3 PIC 9(05).
           03 WSS-IND-PANT     VALUE 1              PIC 9(05).
           03 WSS-IND-HMAS     VALUE 'N'            PIC X(01).
      *>>>> WSS

      *<<<< WSS
       01  WSS-VARI.
           03 WSS-IND-EMLT     VALUE SPACES        PIC X(01).
           03 WSS-CIC-ICLI                         PIC X(12).
       01  WSS-FRM-GLS-PROD VALUE SPACES.                               
           03  WSS-FRM-GLS-TOPD                    PIC X(16).           
           03  FILLER                              PIC X(01).           
           03  WSS-FRM-GLS-AOPD                    PIC X(16).           
           03  FILLER                              PIC X(01).           
           03  WSS-FRM-GLS-VCAM                    PIC X(06).           

       COPY SGCBRDBC.
       COPY DAPBRVEN.
       COPY DAPBRRCC.
       COPY DAPBRCAD.
       COPY DAPBRLIQ.
       COPY TABBRCAM.
       COPY GNSWGCPT.
       COPY GNSWGSTR.
       COPY GNSWGPES.
       COPY GNSWGINT.
       COPY DAPWGVEN.
       01  WSS-PGM-STAT.
              05 PGM-STAT-RCC.
                 88 PGM-STAT-RCC-NUL    VALUE '  '.
                 07 PGM-STT1-RCC        VALUE '2' PIC X(01).
                    88 PGM-STAT-RCC-OKS VALUE '0'.
                 07 PGM-STT2-RCC        VALUE '3' PIC X(01).
      
              05 PGM-STAT-DBC.
                 88 PGM-STAT-DBC-NUL    VALUE '  '.
                 07 PGM-STT1-DBC        VALUE '2' PIC X(01).
                    88 PGM-STAT-DBC-OKS VALUE '0'.
                 07 PGM-STT2-DBC        VALUE '3' PIC X(01).
      *>>>> WSS

      *<<<< WSS_DTC
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-DBC-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-VEN-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-RCC-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-CAD-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-LIQ-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-CAM-REQA==.
      *>>>> WSS_DTC

       01  PGM-VARI.
           03 PGM-ICLR                  VALUE ' '       PIC X(01).
           03 PGM-LIMPIAR-TODO          VALUE ' '       PIC X(01).
           03 PGM-LIMPIAR-LLAVES        VALUE 'K'       PIC X(01).
           03 PGM-LIMPIAR-CAMPOS        VALUE 'F'       PIC X(01).
           03 PGM-NO-LIMPIAR-NADA       VALUE 'N'       PIC X(01).
           03 PGM-PROG                                  PIC X(08).
           03 PGM-NTRN                                  PIC X(04).
           03 PGM-STAT.
              05 PGM-STAT-OPD.
                 88 PGM-STAT-OPD-NUL    VALUE '  '.
                 07 PGM-STT1-OPD        VALUE '2' PIC X(01).
                    88 PGM-STAT-OPD-OKS VALUE '0'.
                 07 PGM-STT2-OPD        VALUE '3' PIC X(01).
              05 PGM-STAT-VEN.
                 88 PGM-STAT-VEN-NUL    VALUE '  '.
                 07 PGM-STT1-VEN        VALUE '2' PIC X(01).
                    88 PGM-STAT-VEN-OKS VALUE '0'.
                 07 PGM-STT2-VEN        VALUE '3' PIC X(01).

           03 PGM-SRNF                  VALUE '23'      PIC X(02).
           03 PGM-SOKS                  VALUE '00'      PIC X(02).
           03 PGM-SNUL                  VALUE '  '      PIC X(02).
           03 PGM-SUAR                  VALUE SPACES    PIC X(15).

       LINKAGE SECTION.
      *----------------
       01  DFHCOMMAREA.
           02 FILLER                    PIC X(256).
       COPY GNSLGFIO.

       PROCEDURE DIVISION.
      *===================

       MAIN SECTION.
       INI-MAIN.
           PERFORM INI.
       LUP-MAIN.
           IF SCR-INST = SCR-INST-HCM
                 PERFORM SCR-COM.
           IF SCR-CCPP = 'MOD'
                 PERFORM SCR-MOD
           ELSE
           IF SCR-CCPP = 'ING'
                 PERFORM SCR-ING
           ELSE
           IF SCR-CCPP = 'ACC'
                 PERFORM SCR-ACC
           ELSE
           IF SCR-CCPP = 'ELI'
                 PERFORM SCR-ELI
           ELSE
           IF SCR-CCPP = 'ACT'
                 PERFORM SCR-ACT
           ELSE
           IF SCR-CCPP = 'PGM'
                 PERFORM SCR-PGM
           ELSE
                 MOVE SCR-INST-HCM TO SCR-INST.

           GO TO LUP-MAIN.
       FIN-MAIN.
           EXIT.

       INI SECTION.
       INI-INI.

       COPY GNSBGEIB.

       COPY GNSBGEDB.
           MOVE LOW-VALUES TO CVD-FLD.
           MOVE LOW-VALUES TO CVD-EDT.

           PERFORM GNS-PRO-RCK.

           PERFORM GNS-BUS-VCA.

           MOVE +256 TO SCR-TCMA.
           PERFORM GNS-HDL-SYS.
           PERFORM GNS-HDL-FRM.
           MOVE 'DAPPQCVD' TO FIO-PROG.
           PERFORM GNS-BUS-IDD.
      *PTC-INI
           PERFORM GNS-ERR-QUE.
           PERFORM GET-TSK-TERM.
      *PTC-FIN

      *<<<< INI_FIO
           IF SCR-OFRM-SRV
                MOVE TSK-TERM-ALF TO CVD-COD-TERM
                MOVE TSK-TERM-ALF TO CVD-COD-TERM-MAS
           ELSE
                MOVE EIBTRMID     TO CVD-COD-TERM
                MOVE EIBTRMID     TO CVD-COD-TERM-MAS.

           IF FRM-FFLD = FRM-FFLD-PF5 AND
              SCR-INST = SCR-INST-GAB
                MOVE FRM-FFLD-PF5 TO WSS-FRM-FFLD
                MOVE FRM-FFLD-RET TO FRM-FFLD
                MOVE SCR-INST-GKY TO SCR-INST
           ELSE
           IF FRM-FFLD = FRM-FFLD-PF6 AND
              SCR-INST = SCR-INST-GAB
                MOVE FRM-FFLD-PF6 TO WSS-FRM-FFLD
                MOVE FRM-FFLD-RET TO FRM-FFLD
                MOVE SCR-INST-GKY TO SCR-INST
           ELSE
                MOVE FRM-FFLD-RET TO WSS-FRM-FFLD.
      *>>>>

      *<<<< INI_FIO

      *>>>>
       FIN-INI.
           EXIT.

       COPY GNSBHSYS.
       COPY GNSBHFRM.
       COPY GNSBPRCK.
       COPY GNSBBVCA.
       COPY GNSBBIDD.

       SCR-COM SECTION.
       INI-SCR-COM.
      *<<<< INI_SCR_COM
           PERFORM DEL-QUE-CVD.
      *>>>>

           MOVE FRM-CPSF-AEY TO FRM-CPIM-AEY.
           PERFORM PRO-ALL.
           PERFORM SCR-CLRA-CVD.
           PERFORM EDT-KEY-CVD.
           PERFORM EDT-FLD-CVD.
           PERFORM SCR-PUTA.
           MOVE SCR-INST-HCM TO SCR-INST.
           MOVE SCR-CMNP     TO SYS-PROG.
           MOVE SCR-VARI     TO SYS-CMMA.
           MOVE SCR-TCMA     TO SYS-TCMA.
           MOVE SYS-XCTL     TO SYS-CMND.
      *PTC-INI
           IF NOT SCR-OFRM-SRV
      *PTC-FIN
           PERFORM GNS-PRO-SYS.
       XCT-ERR.
           MOVE 'XCTERR    ' TO MSG-COD-MENS.
           MOVE 'GNS'        TO MSG-COD-SIST.
           PERFORM GET-MSG.
           MOVE MSG-GLS-DESC TO SYS-MEN1.
           MOVE SYS-PROG     TO SYS-MEN2.
           MOVE SYS-ABOR     TO SYS-CMND.
      *PTC-INI
           IF NOT SCR-OFRM-SRV
      *PTC-FIN
           PERFORM GNS-PRO-SYS.
       COPY GNSBGGBK.
       FIN-SCR-COM.
           EXIT.

       SCR-MOD SECTION.
       INI-SCR-MOD.

           IF SCR-INST = SCR-INST-HKY
               PERFORM HBL-KEY
               MOVE SCR-INST-GKY TO SCR-INST
               PERFORM SCR-DMSG
           ELSE
           IF SCR-INST = SCR-INST-GKY
                PERFORM SCR-KEY
                IF SCR-STAT NOT = SCR-STAT-ABT
                        PERFORM SCR-TRL
                ELSE
                        PERFORM DESSCRTRL
                        GO TO FIN-SCR-MOD
           ELSE
           IF SCR-INST = SCR-INST-GAB
                PERFORM GET-CON
           ELSE
           IF SCR-INST = SCR-INST-BRW
               MOVE SCR-FFLD TO FRM-FFLD
               PERFORM BRW-SCR-MOD.
           PERFORM DESSCRTRL.

       MSG-SCR-MOD.
           MOVE SPACES TO FRM-MENS.
           PERFORM SCR-MSSG.
       FIN-SCR-MOD.

           EXIT.

       BRW-SCR-MOD SECTION.
       INI-BRW-SCR-MOD.

       FIN-BRW-SCR-MOD.
           EXIT.

       SCR-ING SECTION.
       INI-SCR-ING.

           IF SCR-INST = SCR-INST-HKY
               PERFORM HBL-IKY
               MOVE SCR-INST-GKY TO SCR-INST
      *PTC-INI
               IF NOT SCR-OFRM-SRV
                   PERFORM SCR-DMSG
               ELSE
                   PERFORM SCR-PUTA
      *PTC-FIN
           ELSE
           IF SCR-INST = SCR-INST-GKY
                PERFORM SCR-RST
                PERFORM GET-IKY
                IF NOT FRM-STAT-ABT
                        MOVE SPACES TO FRM-MENS
                        PERFORM FND-KEY
                        IF NOT FIO-STAT-OKS AND
                           FIO-STAT NOT = FIO-STAT-NEX
      *JSS                  PERFORM CLR-FLD-CVD
                            MOVE PGM-LIMPIAR-TODO TO PGM-ICLR
                            PERFORM SCR-TRL
                        ELSE
      *PTC-INI
                        MOVE 'S' TO SCR-IERR
      *PTC-FIN
                        MOVE PGM-LIMPIAR-CAMPOS TO PGM-ICLR
                        IF FRM-MENS NOT > SPACES
                            MOVE 'REGEXI    ' TO MSG-COD-MENS
                            MOVE 'GNS' TO MSG-COD-SIST
                            PERFORM GET-MSG
                            MOVE MSG-GLS-DESC TO FRM-MENS
                            PERFORM SCR-MSSG
                            MOVE SCR-STAT-ABT TO SCR-STAT
                            PERFORM DESSCRTRL
                            GO TO FIN-SCR-ING
                        ELSE
                            PERFORM SCR-MSSG
                            MOVE SCR-STAT-ABT TO SCR-STAT
                            PERFORM DESSCRTRL
                            GO TO FIN-SCR-ING
                ELSE
                        MOVE SPACES TO FRM-MENS
                        PERFORM SCR-MSSG
                        PERFORM DESSCRTRL
                        GO TO FIN-SCR-ING
           ELSE
           IF SCR-INST = SCR-INST-GAB
                PERFORM GET-CON.
           PERFORM DESSCRTRL.

       MSG-SCR-ING.
           MOVE SPACES TO FRM-MENS.
           PERFORM SCR-MSSG.
       FIN-SCR-ING.

           EXIT.

       SCR-ACC SECTION.
       INI-SCR-ACC.

           IF SCR-INST = SCR-INST-HKY
               PERFORM HBL-KEY
               MOVE SCR-INST-GKY TO SCR-INST
               PERFORM SCR-DMSG
           ELSE
           IF SCR-INST = SCR-INST-GKY
                PERFORM SCR-KEY
                IF SCR-STAT NOT = SCR-STAT-ABT
                        PERFORM SCR-TRL
                ELSE
                        PERFORM DESSCRTRL
                        GO TO FIN-SCR-ACC
           ELSE
           IF SCR-INST = SCR-INST-GAB
                PERFORM GET-CON
           ELSE
           IF SCR-INST = SCR-INST-BRW
               MOVE SCR-FFLD TO FRM-FFLD
               PERFORM BRW-SCR-ACC.
           PERFORM DESSCRTRL.

           MOVE SPACES TO FRM-MENS.
           PERFORM SCR-MSSG.
       FIN-SCR-ACC.

           EXIT.

       BRW-SCR-ACC SECTION.
       INI-BRW-SCR-ACC.

       FIN-BRW-SCR-ACC.
           EXIT.

       SCR-ELI SECTION.
       INI-SCR-ELI.

           IF SCR-INST = SCR-INST-HKY
               PERFORM HBL-KEY
               MOVE SCR-INST-GKY TO SCR-INST
               PERFORM SCR-DMSG
           ELSE
           IF SCR-INST = SCR-INST-GKY
                PERFORM SCR-KEY
                IF SCR-STAT NOT = SCR-STAT-ABT
                        PERFORM SCR-TRL
                ELSE
                        PERFORM DESSCRTRL
                        GO TO FIN-SCR-ELI
           ELSE
           IF SCR-INST = SCR-INST-GAB
                PERFORM GET-CON
           ELSE
           IF SCR-INST = SCR-INST-BRW
               MOVE SCR-FFLD TO FRM-FFLD
               PERFORM BRW-SCR-ELI.
           PERFORM DESSCRTRL.

           MOVE SPACES TO FRM-MENS.
           PERFORM SCR-MSSG.
       FIN-SCR-ELI.

           EXIT.

       BRW-SCR-ELI SECTION.
       INI-BRW-SCR-ELI.

       FIN-BRW-SCR-ELI.
           EXIT.

       SCR-ACT SECTION.
       INI-SCR-ACT.

           IF SCR-INST = SCR-INST-HKY
               PERFORM HBL-KEY
               MOVE SCR-INST-GKY TO SCR-INST
               PERFORM SCR-DMSG
           ELSE
           IF SCR-INST = SCR-INST-GKY
                PERFORM SCR-RST
                PERFORM GET-KEY
                IF NOT FRM-STAT-ABT
                        MOVE SPACES TO FRM-MENS
                        PERFORM FND-KEY
                        IF FIO-STAT-OKS
                            MOVE SCR-ACTU-MOD TO SCR-ACTU
                            PERFORM PUT-SCR
                            MOVE PGM-LIMPIAR-TODO TO PGM-ICLR
                            PERFORM SCR-TRL
                        ELSE
                        MOVE PGM-LIMPIAR-CAMPOS TO PGM-ICLR
                        IF FIO-STAT-EOF
                            IF FRM-MENS NOT > SPACES
                                MOVE 'REGEOF    ' TO MSG-COD-MENS
                                MOVE 'GNS' TO MSG-COD-SIST
                                PERFORM GET-MSG
                                MOVE MSG-GLS-DESC TO FRM-MENS
                                PERFORM SCR-MSSG
                                MOVE SCR-STAT-ABT TO SCR-STAT
                                PERFORM DESSCRTRL
                                GO TO FIN-SCR-ACT
                            ELSE
                                PERFORM SCR-MSSG
                                MOVE SCR-STAT-ABT TO SCR-STAT
                                PERFORM DESSCRTRL
                                GO TO FIN-SCR-ACT
                        ELSE
                        IF FIO-STAT = FIO-STAT-NEX
                            IF FRM-MENS NOT > SPACES
                                MOVE 'REGNEX    ' TO MSG-COD-MENS
                                MOVE 'GNS' TO MSG-COD-SIST
                                PERFORM GET-MSG
                                MOVE MSG-GLS-DESC TO FRM-MENS
                                PERFORM SCR-MSSG
                                MOVE SCR-STAT-ABT TO SCR-STAT
                                PERFORM DESSCRTRL
                                GO TO FIN-SCR-ACT
                            ELSE
                                PERFORM SCR-MSSG
                                MOVE SCR-STAT-ABT TO SCR-STAT
                                PERFORM DESSCRTRL
                                GO TO FIN-SCR-ACT
                        ELSE
                            MOVE SCR-ACTU-ING TO SCR-ACTU
      *JSS                  PERFORM CLR-FLD-CVD
                            MOVE PGM-LIMPIAR-TODO TO PGM-ICLR
                            PERFORM SCR-TRL
                ELSE
                        MOVE SPACES TO FRM-MENS
                        PERFORM SCR-MSSG
                        PERFORM DESSCRTRL
                        GO TO FIN-SCR-ACT
           ELSE
           IF SCR-INST = SCR-INST-GAB
                PERFORM GET-CON
           ELSE
           IF SCR-INST = SCR-INST-BRW
               MOVE SCR-FFLD TO FRM-FFLD
               PERFORM BRW-SCR-ACT.
           PERFORM DESSCRTRL.

           MOVE SPACES TO FRM-MENS.
           PERFORM SCR-MSSG.
       FIN-SCR-ACT.

           EXIT.

       BRW-SCR-ACT SECTION.
       INI-BRW-SCR-ACT.

       FIN-BRW-SCR-ACT.
           EXIT.

       SCR-PGM SECTION.
       INI-SCR-PGM.

           IF SCR-INST = SCR-INST-HKY
               PERFORM HBL-KEY
               MOVE SCR-INST-GKY TO SCR-INST
               PERFORM SCR-DMSG
           ELSE
           IF SCR-INST = SCR-INST-GKY
                PERFORM SCR-RST
                PERFORM GET-KEY
                IF FRM-STAT-ABT
                    MOVE SPACES TO FRM-MENS
                    PERFORM SCR-MSSG
                    PERFORM DESSCRTRL
                    GO TO FIN-SCR-PGM
                ELSE
                    MOVE SPACES TO FRM-MENS
                    PERFORM FND-KEY
                    IF FIO-STAT = FIO-STAT-NEX
                        IF FRM-MENS NOT > SPACES
                            MOVE 'REGNEX    ' TO MSG-COD-MENS
                            MOVE 'GNS' TO MSG-COD-SIST
                            PERFORM GET-MSG
                            MOVE MSG-GLS-DESC TO FRM-MENS
                            PERFORM SCR-MSSG
                            MOVE SCR-STAT-ABT TO SCR-STAT
                            PERFORM DESSCRTRL
                            GO TO FIN-SCR-PGM
                        ELSE
                            PERFORM SCR-MSSG
                            MOVE SCR-STAT-ABT TO SCR-STAT
                            PERFORM DESSCRTRL
                            GO TO FIN-SCR-PGM
                    ELSE
                        MOVE PGM-LIMPIAR-TODO TO PGM-ICLR
                        PERFORM SCR-TRL
           ELSE
           IF SCR-INST = SCR-INST-GAB
                PERFORM GET-CON
           ELSE
           IF SCR-INST = SCR-INST-BRW
               MOVE SCR-FFLD TO FRM-FFLD
               PERFORM BRW-SCR-PGM.
       TRL-SCR-PGM.
           PERFORM DESSCRTRL.

           MOVE SPACES TO FRM-MENS.
           PERFORM SCR-MSSG.
       FIN-SCR-PGM.

           EXIT.

       BRW-SCR-PGM SECTION.
       INI-BRW-SCR-PGM.

       FIN-BRW-SCR-PGM.
           EXIT.

       SCR-DMSG SECTION.
       INI-SCR-DMSG.

           IF PGM-ICLR = PGM-NO-LIMPIAR-NADA
               NEXT SENTENCE
           ELSE
           IF PGM-ICLR = PGM-LIMPIAR-TODO
               PERFORM SCR-CLRA-CVD
               PERFORM EDT-KEY-CVD
               PERFORM EDT-FLD-CVD
           ELSE
           IF PGM-ICLR = PGM-LIMPIAR-LLAVES
               PERFORM CLR-KEY-CVD
               PERFORM EDT-KEY-CVD
           ELSE
               PERFORM CLR-FLD-CVD
               PERFORM EDT-FLD-CVD.
           PERFORM SCR-PUTA.
           PERFORM SCR-EXIT.
       FIN-SCR-DMSG.
           EXIT.

       SCR-KEY SECTION.
       INI-SCR-KEY.
           PERFORM SCR-RST.
           PERFORM GET-KEY.
           IF FRM-STAT-ABT
                   MOVE SPACES TO FRM-MENS
                   PERFORM SCR-MSSG
                   GO TO FIN-SCR-KEY.
       FND-SCR-KEY.
           MOVE SPACES TO FRM-MENS.
           PERFORM FND-KEY.
           IF FIO-STAT-OKS
               PERFORM PUT-SCR
               MOVE PGM-LIMPIAR-TODO TO PGM-ICLR
               GO TO FIN-SCR-KEY.
      *JSS ELSE
      *        PERFORM CLR-FLD-CVD.
       ERR-SCR-KEY.
      *PTC-INI
           MOVE 'S' TO SCR-IERR.
      *PTC-FIN
           MOVE PGM-LIMPIAR-CAMPOS TO PGM-ICLR.
           IF FRM-MENS NOT > SPACES
               IF FIO-STAT-EOF
                   MOVE 'REGEOF    ' TO MSG-COD-MENS
                   MOVE 'GNS' TO MSG-COD-SIST
                   PERFORM GET-MSG
                   MOVE MSG-GLS-DESC TO FRM-MENS
               ELSE
               IF FIO-STAT = FIO-STAT-NEX
                   MOVE 'REGNEX    ' TO MSG-COD-MENS
                   MOVE 'GNS' TO MSG-COD-SIST
                   PERFORM GET-MSG
                   MOVE MSG-GLS-DESC TO FRM-MENS
               ELSE
                   MOVE 'FIOSTAT' TO MSG-COD-TMSG
                   MOVE FIO-STAT  TO MSG-COD-CMSG
                   MOVE 'GNS'     TO MSG-COD-SIST

                   PERFORM GET-MSG
                   MOVE MSG-GLS-DESC TO FRM-MENS.
           PERFORM SCR-MSSG.
           MOVE SCR-STAT-ABT TO SCR-STAT.
       FIN-SCR-KEY.
           EXIT.

       SCR-RST SECTION.
       INI-SCR-RST.
           MOVE SPACES       TO PGM-ICLR.
           MOVE SPACES       TO SCR-ACTU.
           MOVE SCR-STPP     TO SCR-STAT.
           MOVE SCR-MFLD-NOT TO SCR-MFLD.
           MOVE LOW-VALUES   TO CVD-FLD.
           MOVE LOW-VALUES TO CVD-EDT.

       FIN-SCR-RST.
           EXIT.

       GET-KEY SECTION.
       INI-GET-KEY.

           PERFORM SCR-GKEY.
           IF FRM-STAT-ABT
               MOVE SCR-STAT-ABT TO SCR-STAT.
       FIN-GET-KEY.
           EXIT.

       GET-IKY SECTION.
       INI-GET-IKY.

           PERFORM SCR-GIKY.
           IF FRM-STAT-ABT
               MOVE SCR-STAT-ABT TO SCR-STAT.
       FIN-GET-IKY.
           EXIT.

       FND-KEY SECTION.
       INI-FND-KEY.
      *<<<< INI_FND_KEY
           IF WSS-FRM-FFLD = FRM-FFLD-PF5 OR
              WSS-FRM-FFLD = FRM-FFLD-PF6
              MOVE '00' TO FIO-STAT
              GO TO FIN-FND-KEY.
           PERFORM DEL-QUE-CVD.
           PERFORM CVD-ANL-KEY.
           MOVE 1 TO SCR-NUM-PANT.
           GO TO FIN-FND-KEY.
           MOVE ZEROES TO SCR-TOT-OCCU.
      *>>>>

           PERFORM KEY-ALL-CVD.

           MOVE FIO-GET-KEY TO FIO-CMND.

           PERFORM DAP-FIO-OPD.
           IF FIO-STAT-OKS
               MOVE OPD-STP-ITRN IN OPD TO SCR-UMOD.
           MOVE FIO-STAT TO PGM-STAT-OPD.

      *<<<< IF FIN_FND_KEY
      *     IF FIO-STAT-OKS
      *         MOVE OPD-SGV-TCAS IN OPD TO FRM-SGV-TCAS IN CVD-FLD.
      *>>>>
       FIN-FND-KEY.
           IF FIO-STAT = FIO-STAT-NEX
               MOVE 'S' TO SCR-IERR.
       EXT-FND-KEY.
           EXIT.
 
       PUT-SCR SECTION.
       INI-PUT-SCR.
           IF PGM-STAT-OPD-OKS
               MOVE OPD-STP-ITRN IN OPD TO SCR-UMOD.
      *<<<< PUT_SCR
           IF WSS-FRM-FFLD = FRM-FFLD-PF5 OR
              WSS-FRM-FFLD = FRM-FFLD-PF6
              GO TO EXT-PUT-SCR.
           PERFORM CVD-PUT-SCR.
       EXT-PUT-SCR.
      *>>>>

           PERFORM PUT-ALL-CVD.
      *<<<< FIN_PUT_SCR
      * AQUI MOVER LOS DATOS DE TS-CVD A PANTALLA
           MOVE SCR-TOT-OCCU TO CVD-MAS-NUM-TOCC.
           MOVE WSS-IND-HMAS TO CVD-MAS-IND-HMAS.
           IF WSS-FRM-FFLD = FRM-FFLD-RET
                 MOVE ZEROES TO QUE-NITM
           ELSE
           IF WSS-FRM-FFLD = FRM-FFLD-PF6
                 COMPUTE QUE-NITM = (SCR-NUM-PANT * WSS-MAX-PANT)
                 IF QUE-NITM NOT < SCR-TOT-OCCU
                     MOVE 'S' TO WSS-HAY-ERRO
                     MOVE 'DAP' TO MSG-COD-SIST
                     MOVE 'CVDPF6 NEX' TO MSG-COD-MENS
                     PERFORM GET-MSG
                     MOVE MSG-GLS-DESC TO FRM-MENS
                     COMPUTE QUE-NITM =
                       (SCR-NUM-PANT * WSS-MAX-PANT) - WSS-MAX-PANT 
                 ELSE
                     ADD 1 TO SCR-NUM-PANT
           ELSE
           IF WSS-FRM-FFLD = FRM-FFLD-PF5
                 COMPUTE QUE-NITM = 
                    (SCR-NUM-PANT * WSS-MAX-PANT) - 
                    (2 * WSS-MAX-PANT - 1)
                 IF QUE-NITM < 1
                    MOVE 'S' TO WSS-HAY-ERRO
                    MOVE 'DAP' TO MSG-COD-SIST
                    MOVE 'CVDPF5 NEX' TO MSG-COD-MENS
                    PERFORM GET-MSG
                    MOVE MSG-GLS-DESC TO FRM-MENS
                    COMPUTE QUE-NITM =
                     (SCR-NUM-PANT * WSS-MAX-PANT) - WSS-MAX-PANT 
                 ELSE
                    SUBTRACT 1 FROM QUE-NITM
                    SUBTRACT 1 FROM SCR-NUM-PANT.
           MOVE CVD-NOM-TSCVD TO QUE-COLA.
           MOVE CVD-LEN-TSCVD TO QUE-LITM.
       CVD-CIC-LEE-TS.
           ADD 1 TO QUE-NITM.
           MOVE QUE-GET TO QUE-CMND.
           PERFORM GNS-PRO-QUE.
           IF QUE-STAT = QUE-STAT-OKS
               MOVE QUE-ITEM TO CVD-ITEM
               PERFORM CVD-MOV-TS-FRM
               GO TO CVD-CIC-LEE-TS
           ELSE
           IF QUE-NITM = 1
               MOVE 'DAP' TO MSG-COD-SIST
               MOVE 'CVD    NEX' TO MSG-COD-MENS
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS.
      *>>>>

       FIN-PUT-SCR.
           EXIT.

       STP-EXIT SECTION.
       INI-STP-EXIT.

           MOVE SCR-PROG TO PGM-PROG.
           MOVE SCR-NTRN TO PGM-NTRN.

           MOVE SCR-PROV TO SCR-PROG.
           MOVE SCR-NTRV TO SCR-NTRN.

           MOVE PGM-PROG TO SCR-PROV
           MOVE PGM-NTRN TO SCR-NTRV.

       FIN-STP-EXIT.
           EXIT.

       SCR-EXIT SECTION.
       INI-SCR-EXIT.
           MOVE 'P'      TO SCR-ICMN.
           MOVE SCR-NTRN TO SYS-NTRN.

           MOVE SCR-VARI TO SYS-CMMA.
           MOVE SCR-TCMA TO SYS-TCMA.
           MOVE SYS-RTRN TO SYS-CMND.
      *PTC-INI
           IF NOT SCR-OFRM-SRV
      *PTC-FIN
           PERFORM GNS-PRO-SYS.
       FIN-SCR-EXIT.
           EXIT.

       SCR-PUTA SECTION.
       INI-SCR-PUTA.
      *<<<<<< 
      *>>>>>>       

      *PTC-INI
           IF FRM-SUAR EQUAL FRM-SUAR-MAL OR FRM-SUAR-CLR
               MOVE 'S' TO SCR-IERR.
      *PTC-FIN
           MOVE SCR-NMAP TO FRM-NAME.
           MOVE SCR-NLIB TO FRM-NLIB.
           MOVE CVD-FLD TO FRM-DFLD.
           MOVE FRM-PUT-ALL TO FRM-CMND.
           PERFORM GNS-PRO-FRM.
       FIN-SCR-PUTA.
           EXIT.

       SCR-MSSG SECTION.
       INI-SCR-MSSG.
           IF FRM-MEN1 NOT > SPACES
               MOVE SPACES TO FRM-MEN1.
           IF FRM-MEN2 NOT > SPACES
               MOVE SPACES TO FRM-MEN2.
           MOVE FRM-MENS TO CVD-GLS-MENS.
       FIN-SCR-MSSG.
           EXIT.

       SCR-GKEY SECTION.
       INI-SCR-GKEY.
           MOVE SCR-NMAP TO FRM-NAME.
           MOVE SCR-NLIB TO FRM-NLIB.
           MOVE FRM-GET-ALL TO FRM-CMND.
           PERFORM GNS-PRO-FRM.
           MOVE SPACES TO FRM-MENS.
      *<<<< PFS_SCR_GKEY_PREV
           IF WSS-FRM-FFLD = FRM-FFLD-PF5 OR
              WSS-FRM-FFLD = FRM-FFLD-PF6
                 IF FRM-FFLD = FRM-FFLD-PF5
                     MOVE FRM-FFLD-RET TO FRM-FFLD
              ELSE
                 IF FRM-FFLD = FRM-FFLD-PF6
                     MOVE FRM-FFLD-RET TO FRM-FFLD.
      *>>>>

           IF NOT ( FRM-FFLD = FRM-FFLD-RET  OR FRM-FFLD-PF10 OR
                               FRM-FFLD-PF12 OR FRM-FFLD-PF3 )

               MOVE 'PFSINV    ' TO MSG-COD-MENS
               MOVE 'GNS' TO MSG-COD-SIST
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS
               PERFORM FST-KEY-CVD
               PERFORM SCR-MSSG
               PERFORM SCR-PUTA
               PERFORM SCR-EXIT.
           MOVE FRM-DFLD TO CVD-FLD.
           IF FRM-STAT-ABT
               GO TO FIN-SCR-GKEY.
           MOVE FRM-SUAR-OKS TO FRM-SUAR.
           PERFORM VAL-NUM-KEY-CVD.
           PERFORM VAL-NUM-FLD-CVD.
           IF FRM-SUAR EQUAL FRM-SUAR-MAL OR FRM-SUAR-CLR
      *PTC-INI
               MOVE 'S' TO SCR-IERR
      *PTC-FIN
               PERFORM SCR-MSSG
               PERFORM EDT-KEY-CVD
               PERFORM SCR-PUTA
               PERFORM SCR-EXIT.
      *JSS
           PERFORM CLR-FLD-CVD.

           PERFORM VAL-IKY-CVD.
           IF FRM-SUAR EQUAL FRM-SUAR-MAL OR FRM-SUAR-CLR
               GO TO ERR-SCR-GKEY.

           PERFORM VAL-MKY-CVD.
           IF FRM-SUAR EQUAL FRM-SUAR-MAL OR FRM-SUAR-CLR
               GO TO ERR-SCR-GKEY.

           PERFORM VAL-AKY-CVD.
           IF FRM-SUAR EQUAL FRM-SUAR-MAL OR FRM-SUAR-CLR
               GO TO ERR-SCR-GKEY.

           PERFORM VAL-CON-KEY-CVD.
           IF NOT ( FRM-SUAR EQUAL FRM-SUAR-MAL OR FRM-SUAR-CLR )
               GO TO FIN-SCR-GKEY.
           IF FRM-UCUR NOT > SPACES
               PERFORM FST-KEY-CVD.
       ERR-SCR-GKEY.
      *PTC-INI
           MOVE 'S' TO SCR-IERR.
      *PTC-FIN

           PERFORM SCR-MSSG.
           PERFORM EDT-KEY-CVD.
           PERFORM SCR-PUTA.
           PERFORM SCR-EXIT.
       FIN-SCR-GKEY.

           PERFORM SCR-MSSG.

       SCR-GIKY SECTION.
       INI-SCR-GIKY.
           MOVE SCR-NMAP TO FRM-NAME.
           MOVE SCR-NLIB TO FRM-NLIB.
           MOVE FRM-GET-ALL TO FRM-CMND.
           PERFORM GNS-PRO-FRM.
           MOVE SPACES TO FRM-MENS.
           IF NOT ( FRM-FFLD = FRM-FFLD-RET  OR FRM-FFLD-PF10 OR
                               FRM-FFLD-PF12 OR FRM-FFLD-PF3 )

               MOVE 'PFSINV    ' TO MSG-COD-MENS
               MOVE 'GNS' TO MSG-COD-SIST
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS
               PERFORM FST-KEY-CVD
               PERFORM SCR-MSSG
               PERFORM SCR-PUTA
               PERFORM SCR-EXIT.
           MOVE FRM-DFLD TO CVD-FLD.
           IF FRM-STAT-ABT
               GO TO FIN-SCR-GIKY.
           MOVE FRM-SUAR-OKS TO FRM-SUAR.
           PERFORM VAL-NUM-KEY-CVD.
           IF FRM-SUAR EQUAL FRM-SUAR-MAL OR FRM-SUAR-CLR
      *PTC-INI
               MOVE 'S' TO SCR-IERR
      *PTC-FIN
               PERFORM SCR-MSSG
               PERFORM EDT-IKY-CVD
               PERFORM SCR-PUTA
               PERFORM SCR-EXIT.
      *JSS
           PERFORM CLR-FLD-CVD.

           PERFORM VAL-IKY-CVD.
           IF FRM-SUAR EQUAL FRM-SUAR-MAL OR FRM-SUAR-CLR
               GO TO ERR-SCR-GIKY.

           PERFORM VAL-CON-IKY-CVD.
           IF NOT ( FRM-SUAR EQUAL FRM-SUAR-MAL OR FRM-SUAR-CLR )
               GO TO FIN-SCR-GIKY.
           IF FRM-UCUR NOT > SPACES
               PERFORM FST-KEY-CVD.
       ERR-SCR-GIKY.
      *PTC-INI
           MOVE 'S' TO SCR-IERR.
      *PTC-FIN

           PERFORM SCR-MSSG.
           PERFORM EDT-IKY-CVD.
           PERFORM SCR-PUTA.
           PERFORM SCR-EXIT.
       FIN-SCR-GIKY.

           PERFORM SCR-MSSG.

       GET-CON SECTION.
       INI-GET-CON.
           MOVE SCR-NMAP TO FRM-NAME.
           MOVE SCR-NLIB TO FRM-NLIB.
           MOVE FRM-GET-ALL TO FRM-CMND.
           PERFORM GNS-PRO-FRM.
           IF NOT ( FRM-FFLD = FRM-FFLD-RET  OR FRM-FFLD-PF10 OR
                               FRM-FFLD-PF12 OR FRM-FFLD-PF3 )

               MOVE 'PFSINV    ' TO MSG-COD-MENS
               MOVE 'GNS' TO MSG-COD-SIST
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO CVD-GLS-MEN2
               MOVE SCR-PRMT     TO CVD-GLS-MEN1
               PERFORM FST-MSG
               PERFORM SCR-PUTA
               PERFORM SCR-EXIT.
           MOVE FRM-DFLD TO CVD-FLD.

       FIN-GET-CON.
           MOVE SCR-STAT-CON TO SCR-STAT.

       CLR-MSG SECTION.
       INI-CLR-MSG.
           MOVE SPACES TO CVD-GLS-MENS.
       FIN-CLR-MSG.
           EXIT.

       HBL-IKY SECTION.
       INI-HBL-IKY.

      *PTC-INI
           IF NOT SCR-OFRM-SRV
      *PTC-FIN
           IF SCR-DESDE-CMN
               MOVE CVD-GLS-MENS TO FRM-MENS
               MOVE LOW-VALUES TO CVD-FLD
      * FLB  7-NOV-1994
               PERFORM CLR-KEY-CVD

               IF FRM-MENS < SPACES
                   MOVE LOW-VALUES TO CVD-GLS-MENS
               ELSE
                   MOVE FRM-MENS TO CVD-GLS-MENS.
           PERFORM PRO-MKY-CVD.
           PERFORM PRO-AKY-CVD.
           PERFORM UNP-IKY-CVD.
           PERFORM FST-KEY-CVD.

       FIN-HBL-IKY.
           EXIT.

       HBL-KEY SECTION.
       INI-HBL-KEY.

      *PTC-INI
           IF NOT SCR-OFRM-SRV
      *PTC-FIN
           IF SCR-DESDE-CMN
               MOVE CVD-GLS-MENS TO FRM-MENS
               MOVE LOW-VALUES TO CVD-FLD
               IF FRM-MENS < SPACES
                   MOVE LOW-VALUES TO CVD-GLS-MENS
               ELSE
                   MOVE FRM-MENS TO CVD-GLS-MENS.
           PERFORM UNP-KEY-CVD.
           PERFORM FST-KEY-CVD.

       FIN-HBL-KEY.
           EXIT.

       HBL-FLD SECTION.
       INI-HBL-FLD.

           PERFORM PRO-IKY-CVD.
           PERFORM PRO-AKY-CVD.
           PERFORM UNP-MKY-CVD.
           PERFORM UNP-FLD-CVD.
           PERFORM FST-FLD-CVD.

       FIN-HBL-FLD.
           EXIT.

       FST-MSG SECTION.
       INI-FST-MSG.
           MOVE -1 TO CVD-GLS-MENS-LEN.
       FIN-FST-MSG.
           EXIT.

       PRO-ALL SECTION.
       INI-PRO-ALL.

           PERFORM PRO-KEY-CVD.
           PERFORM FST-MSG.

       FIN-PRO-ALL.
           EXIT.

       SCR-TRL SECTION.
       INI-SCR-TRL.


      *PTC-INI
           IF SCR-STAT NOT = SCR-STPP
               MOVE 'S' TO SCR-IERR.
      *PTC-FIN
           IF FRM-MEN1 NOT > SPACES
               MOVE SCR-PRMT TO FRM-MEN1.

           IF SCR-STAT = SCR-STAT-MOD
               PERFORM HBL-FLD
               PERFORM SCR-MSSG
               PERFORM EDT-KEY-CVD
               PERFORM EDT-FLD-CVD
               PERFORM SCR-PUTA
               PERFORM STP-EXIT
               MOVE SCR-INST-GFL TO SCR-INST
               PERFORM SCR-EXIT.
           IF SCR-STAT = SCR-STAT-SON
               PERFORM PRO-ALL
               PERFORM SCR-MSSG
               PERFORM EDT-KEY-CVD
               PERFORM EDT-FLD-CVD
               PERFORM SCR-PUTA
               PERFORM STP-EXIT
               MOVE SCR-INST-GCS TO SCR-INST
               PERFORM SCR-EXIT.
      *ASUME SCR-STAT-CON.
           MOVE SCR-STAT-CON TO SCR-STAT.
      *    MOVE FRM-CPSF-AEY TO FRM-CPIM-AEY.
           PERFORM PRO-ALL.
           PERFORM SCR-MSSG.
           PERFORM EDT-KEY-CVD.
           PERFORM EDT-FLD-CVD.
           PERFORM SCR-PUTA.
           MOVE SCR-INST-GAB TO SCR-INST.
           PERFORM SCR-EXIT.
       FIN-SCR-TRL.
           EXIT.

       DESSCRTRL SECTION.
       INI-DESSCRTRL.
           MOVE SCR-VFLD-NOT TO SCR-VFLD.
           MOVE FRM-FFLD TO SCR-FFLD.
       FIN-DESSCRTRL.
           IF SCR-FFLD-PF10 OR SCR-FFLD-PF3
                 MOVE SCR-INST-HCM TO SCR-INST
           ELSE
                 MOVE SCR-INST-HKY TO SCR-INST.
       EXT-DESSCRTRL.
           EXIT.

      * PGM-EBR-ALL SECTION.
      * INI-PGM-EBR-ALL.
      *     MOVE 'GNS' TO FIO-SIST.
      *     MOVE FIO-EBR-ALL TO FIO-CMND.
      *     PERFORM GNS-FIO-TAB.
      * FIN-PGM-EBR-ALL.
      *     EXIT.

       COPY DAPBQCVD.
       COPY GNSBVNUM.
       COPY DAPBFOPD.
       COPY GNSBFMSG.
       COPY GNSBGSYS.
       COPY GNSBGDTC.
      *PTC-INI
      *PTC-SUB
      * ISP  10-MAY-2001 13:46:35 
      * COPY GNSBGFRM.
       COPY GNSBG3CF.
      *PTC-FIN
       COPY GNSBGMSG.
       COPY GNSBEKEY.
       COPY GNSBIABT.
       COPY GNSBBTAB.
       COPY GNSBFTAB.
       COPY GNSBVIND.
       COPY GNSBVMSC.
       COPY GNSBFMSC.
       COPY GNSBVIDC.
       COPY GNSBPVRF.
       COPY GNSBGFEC.
       COPY GNSBGHOY.
       COPY TABBBOFI.
       COPY TABBFOFI.
       COPY TABBBUSR.
       COPY TABBFUSR.
      *PTC-INI
       COPY GNSBGQUE.
       COPY GNSBGTSK.
      *PTC-FIN


      *<<<< EOF

       DEL-QUE-CVD SECTION.
       INI-DEL-QUE-CVD.
           MOVE CVD-NOM-TSCVD TO QUE-COLA.
      * MODIFICADO POR ISP EL  28-NOV-2006 17:24:06 PARA
      * IGUALAR CODIGO DAP-CVD
           MOVE 1 TO SCR-NUM-PANT.
           MOVE ZEROES TO SCR-TOT-OCCU.
           MOVE QUE-DEL TO QUE-CMND.
           PERFORM GNS-PRO-QUE.
       FIN-DEL-QUE-CVD.
           EXIT.

       CVD-MOV-TS-FRM SECTION.
       INI-CVD-MOV-TS-FRM.
           IF SCR-OFRM-SRV
               GO TO FIN-CVD-MOV-TS-FRM
           ELSE
               IF WSS-IND-PANT > WSS-MAX-PANT
                   GO TO FIN-CVD-MOV-TS-FRM.
           PERFORM CVD-MOV-TS-FRM-ELM.
      *     MOVE CVD-FLD01 TO
      *                FLD01 IN CVD-FLD(WSS-IND-PANT).
           ADD 1 TO WSS-IND-PANT.
       FIN-CVD-MOV-TS-FRM.
           EXIT.
      *<<<< EOF
      * INI CODIGO PROGRAMADOR PARA PFS

       CVD-PUT-SCR SECTION.
       INI-CVD-PUT-SCR.
      *    MOVE 'CVDPUT1' TO QUE-COLA.
      *    MOVE +100 TO QUE-LITM.
      *    MOVE SPACES TO QUE-ITEM.
      *    MOVE QUE-PUT TO QUE-CMND.
      *    PERFORM GNS-PRO-QUE.
      
      *    IF PGM-STAT-OPD-OKS
      *         MOVE 'CVDPUT2' TO QUE-COLA
      *         MOVE +100 TO QUE-LITM
      *         MOVE SPACES TO QUE-ITEM
      *         MOVE QUE-PUT TO QUE-CMND
      *         PERFORM GNS-PRO-QUE
      
               PERFORM GET-RCC.
       FIN-CVD-PUT-SCR.
           EXIT.

       CVD-ANL-KEY SECTION.
       INI-CVD-ANL-KEY.
           MOVE CVD-NOM-TSCVD  TO QUE-COLA.
           MOVE QUE-DEL TO QUE-CMND.
           PERFORM GNS-PRO-QUE.

           PERFORM KEY-ALL-CVD.

           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM DAP-FIO-OPD.
           IF FIO-STAT-OKS
      *        MOVE 100 TO OPD-SGV-MPRE IN OPD
               MOVE OPD-STP-ITRN IN OPD TO SCR-UMOD.
           MOVE FIO-STAT TO PGM-STAT-OPD.
           IF NOT FIO-STAT-OKS
               GO TO FIN-CVD-ANL-KEY.
           IF OPD-COD-MORE IN OPD NOT = 'PI'
               MOVE 'CVDSOLOPI' TO MSG-COD-MENS
               MOVE 'DAP' TO MSG-COD-SIST
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS
               MOVE FIO-STAT-NEX TO FIO-STAT
               GO TO FIN-CVD-ANL-KEY.
           IF FIO-STAT-OKS
              PERFORM EXP-VEN
              MOVE PGM-STAT-OPD TO FIO-STAT
              IF MSG-COD-MENS > SPACES
                  MOVE MSG-GLS-DESC TO FRM-MENS.
       FIN-CVD-ANL-KEY.
           EXIT.

       EXP-VEN SECTION.
       INI-EXP-VEN.
           MOVE SPACES TO MSG-COD-MENS.
           PERFORM GET-COD-CIC-OPD.
           IF MSG-COD-MENS > SPACES
               GO TO FIN-EXP-VEN.
      
           MOVE FIO-GET-FST TO FIO-CMND.
       CIC-EXP-VEN.
           MOVE SPACES TO CVD-ITEM.
           MOVE ZEROES TO
                   CVD-FRM-NUM-IVCT
                   CVD-FRM-FEC-FVEN
                   CVD-FRM-VAL-INTC
                   CVD-FRM-VAL-SCAP
                   CVD-FRM-VAL-TOTA
                   CVD-FRM-SGV-KOPD
                   CVD-FRM-SGV-IACU
                   CVD-FRM-SGV-RTOT
                   CVD-FRM-SGV-TCAX
                   CVD-FRM-SGV-TREX
                   CVD-FRM-SGV-CAST
                   CVD-FRM-SGV-LIQU
                   CVD-FRM-SGV-RENT.

           PERFORM GEN-PRX-RTR.
           IF MSG-COD-MENS > SPACES
               GO TO FIN-EXP-VEN.
           IF DAP-VEN-STAT-OKS
      *        PERFORM CAL-CAST
      *        PERFORM CAL-RENT
              PERFORM PUT-TSN-ALF
              MOVE FIO-GET-NXT TO FIO-CMND
              GO TO CIC-EXP-VEN.
      
       FIN-EXP-VEN.
           EXIT.

      * FIN CODIGO PROGRAMADOR PARA PFS

       CVD-MOV-TS-FRM-ELM SECTION.
       INI-CVD-MOV-TS-FRM-ELM.
           MOVE CVD-FRM-NUM-IVCT TO
                    FRM-NUM-IVCT IN CVD-FLD(WSS-IND-PANT).
           MOVE CVD-FRM-IND-LIQU TO
                    FRM-IND-LIQU IN CVD-FLD(WSS-IND-PANT).
           MOVE CVD-FRM-FEC-FVEN TO
                    FRM-FEC-FVEN IN CVD-FLD(WSS-IND-PANT).
           MOVE CVD-FRM-VAL-INTC TO
                    FRM-VAL-INTC IN CVD-FLD(WSS-IND-PANT).
           MOVE CVD-FRM-VAL-SCAP TO
                    FRM-VAL-SCAP IN CVD-FLD(WSS-IND-PANT).
           MOVE CVD-FRM-VAL-TOTA TO
                    FRM-VAL-TOTA IN CVD-FLD(WSS-IND-PANT).
           MOVE CVD-FRM-SGV-KOPD TO
                    FRM-SGV-KOPD IN CVD-FLD(WSS-IND-PANT).
           MOVE CVD-FRM-SGV-IACU TO
                    FRM-SGV-IACU IN CVD-FLD(WSS-IND-PANT).
           MOVE CVD-FRM-SGV-RTOT TO
                    FRM-SGV-RTOT IN CVD-FLD(WSS-IND-PANT).
           MOVE CVD-FRM-SGV-TCAX TO
                    FRM-SGV-TCAX IN CVD-FLD(WSS-IND-PANT).
           MOVE CVD-FRM-SGV-TREX TO
                    FRM-SGV-TREX IN CVD-FLD(WSS-IND-PANT).
           MOVE CVD-FRM-SGV-CAST TO
                    FRM-SGV-CAST IN CVD-FLD(WSS-IND-PANT).
           MOVE CVD-FRM-SGV-LIQU TO
                    FRM-SGV-LIQU IN CVD-FLD(WSS-IND-PANT).
           MOVE CVD-FRM-SGV-RENT TO
                    FRM-SGV-RENT IN CVD-FLD(WSS-IND-PANT).
       FIN-CVD-MOV-TS-FRM-ELM.
           EXIT.
      

       PUT-TSN-ALF SECTION.
       INI-PUT-TSN-ALF.
      
               ADD 1 TO SCR-TOT-OCCU.
      *DBG        MOVE 6 TO SCR-TOT-OCCU
      
      *DBG     MOVE 1 TO CVD-FRM-NUM-IVCT IN CVD-ITEM.
      *DBG     MOVE 'A' TO CVD-FRM-IND-LIQU IN CVD-ITEM.
      *DBG     MOVE '11112004' TO CVD-FRM-FEC-FVEN IN CVD-ITEM.
      *DBG     MOVE ZEROES TO CVD-FRM-VAL-INTC IN CVD-ITEM.
      *DBG     MOVE ZEROES TO CVD-FRM-VAL-SCAP IN CVD-ITEM.
      *DBG     MOVE ZEROES TO CVD-FRM-VAL-TOTA IN CVD-ITEM.
      *DBG     MOVE ZEROES TO CVD-FRM-SGV-CAST IN CVD-ITEM.
      *DBG     MOVE ZEROES TO CVD-FRM-SGV-LIQU IN CVD-ITEM.
      
      *DBG     MOVE CVD-NOM-TSCVD  TO QUE-COLA.
      *DBG     MOVE CVD-LEN-TSCVD  TO QUE-LITM.
      *DBG     MOVE CVD-ITEM       TO QUE-ITEM.
      *DBG     MOVE QUE-PUT        TO QUE-CMND.
      *DBG     PERFORM GNS-PRO-QUE.
      
      *DBG     MOVE 2 TO CVD-FRM-NUM-IVCT IN CVD-ITEM.
      *DBG     MOVE 'B' TO CVD-FRM-IND-LIQU IN CVD-ITEM.
      *DBG     MOVE '11112004' TO CVD-FRM-FEC-FVEN IN CVD-ITEM.
      *DBG     MOVE ZEROES TO CVD-FRM-VAL-INTC IN CVD-ITEM.
      *DBG     MOVE ZEROES TO CVD-FRM-VAL-SCAP IN CVD-ITEM.
      *DBG     MOVE ZEROES TO CVD-FRM-VAL-TOTA IN CVD-ITEM.
      *DBG     MOVE ZEROES TO CVD-FRM-SGV-CAST IN CVD-ITEM.
      *DBG     MOVE ZEROES TO CVD-FRM-SGV-LIQU IN CVD-ITEM.
      
      *DBG     MOVE CVD-NOM-TSCVD  TO QUE-COLA.
      *DBG     MOVE CVD-LEN-TSCVD  TO QUE-LITM.
      *DBG     MOVE CVD-ITEM       TO QUE-ITEM.
      *DBG     MOVE QUE-PUT        TO QUE-CMND.
      *DBG     PERFORM GNS-PRO-QUE.
      
      *DBG     MOVE 3 TO CVD-FRM-NUM-IVCT IN CVD-ITEM.
      *DBG     MOVE 'C' TO CVD-FRM-IND-LIQU IN CVD-ITEM.
      *DBG     MOVE '11112004' TO CVD-FRM-FEC-FVEN IN CVD-ITEM.
      *DBG     MOVE ZEROES TO CVD-FRM-VAL-INTC IN CVD-ITEM.
      *DBG     MOVE ZEROES TO CVD-FRM-VAL-SCAP IN CVD-ITEM.
      *DBG     MOVE ZEROES TO CVD-FRM-VAL-TOTA IN CVD-ITEM.
      *DBG     MOVE ZEROES TO CVD-FRM-SGV-CAST IN CVD-ITEM.
      *DBG     MOVE ZEROES TO CVD-FRM-SGV-LIQU IN CVD-ITEM.
      
      *DBG     MOVE CVD-NOM-TSCVD  TO QUE-COLA.
      *DBG     MOVE CVD-LEN-TSCVD  TO QUE-LITM.
      *DBG     MOVE CVD-ITEM       TO QUE-ITEM.
      *DBG     MOVE QUE-PUT        TO QUE-CMND.
      *DBG     PERFORM GNS-PRO-QUE.
      
      *DBG     MOVE 4 TO CVD-FRM-NUM-IVCT IN CVD-ITEM.
      *DBG     MOVE 'D' TO CVD-FRM-IND-LIQU IN CVD-ITEM.
      *DBG     MOVE '11112004' TO CVD-FRM-FEC-FVEN IN CVD-ITEM.
      *DBG     MOVE ZEROES TO CVD-FRM-VAL-INTC IN CVD-ITEM.
      *DBG     MOVE ZEROES TO CVD-FRM-VAL-SCAP IN CVD-ITEM.
      *DBG     MOVE ZEROES TO CVD-FRM-VAL-TOTA IN CVD-ITEM.
      *DBG     MOVE ZEROES TO CVD-FRM-SGV-CAST IN CVD-ITEM.
      *DBG     MOVE ZEROES TO CVD-FRM-SGV-LIQU IN CVD-ITEM.
      
      *DBG     MOVE CVD-NOM-TSCVD  TO QUE-COLA.
      *DBG     MOVE CVD-LEN-TSCVD  TO QUE-LITM.
      *DBG     MOVE CVD-ITEM       TO QUE-ITEM.
      *DBG     MOVE QUE-PUT        TO QUE-CMND.
      *DBG     PERFORM GNS-PRO-QUE.
      
      *DBG     MOVE 5 TO CVD-FRM-NUM-IVCT IN CVD-ITEM.
      *DBG     MOVE 'E' TO CVD-FRM-IND-LIQU IN CVD-ITEM.
      *DBG     MOVE '11112004' TO CVD-FRM-FEC-FVEN IN CVD-ITEM.
      *DBG     MOVE ZEROES TO CVD-FRM-VAL-INTC IN CVD-ITEM.
      *DBG     MOVE ZEROES TO CVD-FRM-VAL-SCAP IN CVD-ITEM.
      *DBG     MOVE ZEROES TO CVD-FRM-VAL-TOTA IN CVD-ITEM.
      *DBG     MOVE ZEROES TO CVD-FRM-SGV-CAST IN CVD-ITEM.
      *DBG     MOVE ZEROES TO CVD-FRM-SGV-LIQU IN CVD-ITEM.
      
      *DBG     MOVE CVD-NOM-TSCVD  TO QUE-COLA.
      *DBG     MOVE CVD-LEN-TSCVD  TO QUE-LITM.
      *DBG     MOVE CVD-ITEM       TO QUE-ITEM.
      *DBG     MOVE QUE-PUT        TO QUE-CMND.
      *DBG     PERFORM GNS-PRO-QUE.
      
      *DBG     MOVE 6 TO CVD-FRM-NUM-IVCT IN CVD-ITEM.
      *DBG     MOVE 'F' TO CVD-FRM-IND-LIQU IN CVD-ITEM.
      *DBG     MOVE '11112004' TO CVD-FRM-FEC-FVEN IN CVD-ITEM.
      *DBG     MOVE ZEROES TO CVD-FRM-VAL-INTC IN CVD-ITEM.
      *DBG     MOVE ZEROES TO CVD-FRM-VAL-SCAP IN CVD-ITEM.
      *DBG     MOVE ZEROES TO CVD-FRM-VAL-TOTA IN CVD-ITEM.
      *DBG     MOVE ZEROES TO CVD-FRM-SGV-CAST IN CVD-ITEM.
      *DBG     MOVE ZEROES TO CVD-FRM-SGV-LIQU IN CVD-ITEM.
      
      
      *    MOVE 'VENPUT1' TO QUE-COLA.
      *    MOVE +100 TO QUE-LITM.
      *    MOVE SPACES TO QUE-ITEM.
      *    MOVE QUE-PUT TO QUE-CMND.
      *    PERFORM GNS-PRO-QUE.
      
           MOVE OPD-NUM-IVEN IN OPD TO CVD-FRM-NUM-IVCT IN CVD-ITEM.
           MOVE SPACES              TO CVD-FRM-IND-LIQU IN CVD-ITEM.
           MOVE VEN-NUM-DVEN IN VEN TO CVD-FRM-NUM-DVEN IN CVD-ITEM.
           MOVE VEN-NUM-MVEN IN VEN TO CVD-FRM-NUM-MVEN IN CVD-ITEM.
           MOVE VEN-NUM-SVEN IN VEN TO CVD-FRM-NUM-SVEN IN CVD-ITEM.
           MOVE VEN-NUM-AVEN IN VEN TO CVD-FRM-NUM-AVEN IN CVD-ITEM.
      
      
      *    MOVE 'VENPUT2' TO QUE-COLA.
      *    MOVE +100 TO QUE-LITM.
      *    MOVE SPACES TO QUE-ITEM.
      *    MOVE QUE-PUT TO QUE-CMND.
      *    PERFORM GNS-PRO-QUE.
      
           IF VEN-VAL-CAPI IN VEN NOT NUMERIC
               MOVE ZEROES TO VEN-VAL-CAPI IN VEN.
           MOVE VEN-VAL-CAPI IN VEN TO CVD-FRM-VAL-SCAP IN CVD-ITEM.
      * ZEROES
            MOVE ZEROES TO CVD-FRM-VAL-SCAP IN CVD-ITEM.
      * ZEROES
      
      *    MOVE 'VENPUT3' TO QUE-COLA.
      *    MOVE +100 TO QUE-LITM.
      *    MOVE SPACES TO QUE-ITEM.
      *    MOVE QUE-PUT TO QUE-CMND.
      *    PERFORM GNS-PRO-QUE.
      
           IF VEN-VAL-FINA IN VEN NOT NUMERIC
               MOVE ZEROES TO VEN-VAL-FINA IN VEN.
           MOVE VEN-VAL-FINA IN VEN TO CVD-FRM-VAL-TOTA IN CVD-ITEM.
      
      *    MOVE 'VENPUT4' TO QUE-COLA.
      *    MOVE +100 TO QUE-LITM.
      *    MOVE SPACES TO QUE-ITEM.
      *    MOVE QUE-PUT TO QUE-CMND.
      *    PERFORM GNS-PRO-QUE.
      
           COMPUTE CVD-FRM-VAL-INTC IN CVD-ITEM =
              VEN-VAL-FINA IN VEN -
              VEN-VAL-CAPI IN VEN.
      
           MOVE OPD-VAL-SCAP IN OPD TO CVD-FRM-SGV-KOPD.
           
           MOVE WSS-SGV-TAJUS-DSP TO CVD-FRM-SGV-TCAX.
           
           MOVE WSS-SGV-TEFEC-DSP TO CVD-FRM-SGV-TREX.
           
           MOVE WSS-SGV-IACU TO CVD-FRM-SGV-IACU.
           
           IF OPD-SGV-MPRE IN OPD = 100
           COMPUTE CVD-FRM-SGV-RTOT = CVD-FRM-VAL-INTC +
                                      CVD-FRM-SGV-IACU
           ELSE
           COMPUTE CVD-FRM-SGV-RTOT = DAP-WSS-SGV-INTE-0 +
                                      CVD-FRM-SGV-IACU.
      
      * ZEROES
           MOVE ZEROES TO CVD-FRM-SGV-IACU.
      * ZEROES
      * ZEROES
           MOVE ZEROES TO CVD-FRM-VAL-INTC.
      * ZEROES

           MOVE DAP-MTO-CAST TO CVD-FRM-SGV-CAST.

           MOVE DAP-MTO-LIQU TO CVD-FRM-SGV-LIQU.

           MOVE WSS-RENT-REAL-ACUM TO CVD-FRM-SGV-RENT.

      *    MOVE 'VENPUT5' TO QUE-COLA.
      *    MOVE +100 TO QUE-LITM.
      *    MOVE SPACES TO QUE-ITEM.
      *    MOVE QUE-PUT TO QUE-CMND.
      *    PERFORM GNS-PRO-QUE.
      
           IF SCR-OFRM-SRV
      
               MOVE CVD-FRM-VAL-INTC     TO     FRM-VAL-INTC-EDT
               MOVE     FRM-VAL-INTC-EDT TO CVD-FRM-VAL-INTC-ALF
      
               MOVE CVD-FRM-VAL-SCAP     TO     FRM-VAL-SCAP-EDT
               MOVE     FRM-VAL-SCAP-EDT TO CVD-FRM-VAL-SCAP-ALF
      
               MOVE CVD-FRM-VAL-TOTA     TO     FRM-VAL-TOTA-EDT
               MOVE     FRM-VAL-TOTA-EDT TO CVD-FRM-VAL-TOTA-ALF
      
               MOVE CVD-FRM-SGV-KOPD     TO     FRM-SGV-KOPD-EDT
               MOVE     FRM-SGV-KOPD-EDT TO CVD-FRM-SGV-KOPD-ALF
      
               MOVE CVD-FRM-SGV-IACU     TO     FRM-SGV-IACU-EDT
               MOVE     FRM-SGV-IACU-EDT TO CVD-FRM-SGV-IACU-ALF
      
               MOVE CVD-FRM-SGV-RTOT     TO     FRM-SGV-RTOT-EDT
               MOVE     FRM-SGV-RTOT-EDT TO CVD-FRM-SGV-RTOT-ALF
      
               MOVE CVD-FRM-SGV-TCAX     TO     FRM-SGV-TCAX-EDT
               MOVE     FRM-SGV-TCAX-EDT TO CVD-FRM-SGV-TCAX-ALF
      
               MOVE CVD-FRM-SGV-TREX     TO     FRM-SGV-TREX-EDT
               MOVE     FRM-SGV-TREX-EDT TO CVD-FRM-SGV-TREX-ALF
      
               MOVE CVD-FRM-SGV-CAST     TO     FRM-SGV-CAST-EDT
               MOVE     FRM-SGV-CAST-EDT TO CVD-FRM-SGV-CAST-ALF
      
               MOVE CVD-FRM-SGV-LIQU     TO     FRM-SGV-LIQU-EDT
               MOVE     FRM-SGV-LIQU-EDT TO CVD-FRM-SGV-LIQU-ALF

               MOVE CVD-FRM-SGV-RENT     TO     FRM-SGV-RENT-EDT
               MOVE     FRM-SGV-RENT-EDT TO CVD-FRM-SGV-RENT-ALF.

      *    MOVE ZEROES TO CVD-FRM-SGV-CAST IN CVD-ITEM.
      *    MOVE ZEROES TO CVD-FRM-SGV-LIQU IN CVD-ITEM.
      
           MOVE CVD-NOM-TSCVD  TO QUE-COLA.
           MOVE CVD-LEN-TSCVD  TO QUE-LITM.
           MOVE CVD-ITEM       TO QUE-ITEM.
      *     DISPLAY 'DAPPQCVD GRABA COLA ' QUE-COLA '-' QUE-ITEM.
           MOVE QUE-PUT        TO QUE-CMND.
           PERFORM GNS-PRO-QUE.

       FIN-PUT-TSN-ALF.
           EXIT.

       COPY SGCBFDBC.
       COPY DAPBFVEN.
       COPY DAPBFRCC.
       COPY DAPBFCAD.
       COPY DAPBFLIQ.

       COPY GNSBGCPT.
       COPY GNSBGSTR.
       COPY GNSBBMSC.
       COPY GNSBPFEC.

       GNX-PRO-QUE SECTION.
       INI-GNX-PRO-QUE.
      *      PERFORM GNS-PRO-QUE.
       FIN-GNX-PRO-QUE.
           EXIT.

      * PGM-EBR-ALL SECTION.
      * INI-PGM-EBR-ALL.
      *     MOVE FIO-EBR-ALL TO FIO-CMND.
      *     PERFORM DAP-FIO-DAP.
      * FIN-PGM-EBR-ALL.
      *     EXIT.

       GET-RCC SECTION.
       INI-GET-RCC.
           MOVE 'CVDPUT3' TO QUE-COLA.
           MOVE +100 TO QUE-LITM.
           MOVE SPACES TO QUE-ITEM.
           MOVE QUE-PUT TO QUE-CMND.
           PERFORM GNS-PRO-QUE.
      
           PERFORM GET-CUR-RCC.
           IF FIO-STAT-OKS
               PERFORM GET-NXT-RCC.
       FIN-GET-RCC.
           EXIT.
      
       GET-CUR-RCC SECTION.
       INI-GET-CUR-RCC.
           MOVE OPD-CIC-IOPD IN OPD TO RCC-CIC-IOPD IN RCC.
           MOVE 'RCC-KEY-IOPD' TO FIO-AKEY.
           MOVE FIO-GET-NLS TO FIO-CMND.
           PERFORM DAP-FIO-RCC.
           IF NOT (FIO-STAT-OKS AND
                OPD-CIC-IOPD IN OPD = RCC-CIC-IOPD IN RCC)
      *           MOVE 'CLINEX' TO QUE-COLA
      *           MOVE +100 TO QUE-LITM
      *           MOVE SPACES TO QUE-ITEM
      *           MOVE QUE-PUT TO QUE-CMND
      *           PERFORM GNS-PRO-QUE
      
               MOVE SPACES TO FRM-GLS-CTE1
               MOVE ZEROES TO FRM-NUM-CLT1
               MOVE SPACES TO FRM-VRF-CLT1
               MOVE SPACES TO FRM-IND-CLT1
               MOVE SPACES TO FRM-GLS-CLT1
               MOVE '23' TO FIO-STAT
           ELSE
               MOVE RCC-CIC-ICLI IN RCC TO DBC-CIC-ICLI IN DBC
               MOVE FIO-GET-KEY TO FIO-CMND
               PERFORM SGC-FIO-DBC
               IF FIO-STAT-OKS
                   MOVE DBC-CIC-ICLI IN DBC TO WSS-CIC-ICLI
                   MOVE DBC-GLS-NOMC IN DBC TO CPT-STRN
                   PERFORM CPT-BLKS
                   MOVE CPT-STRN            TO DBC-GLS-NOMC IN DBC
                   MOVE DBC-GLS-NOMC IN DBC TO FRM-GLS-CTE1
      *           MOVE 'CLIEXI' TO QUE-COLA
      *           MOVE +100 TO QUE-LITM
      *           MOVE FRM-GLS-CTE1 TO QUE-ITEM
      *           MOVE QUE-PUT TO QUE-CMND
      *           PERFORM GNS-PRO-QUE
      
               MOVE DBC-NUM-ICLI IN DBC TO FRM-NUM-CLT1
               MOVE DBC-VRF-ICLI IN DBC TO FRM-VRF-CLT1
               MOVE DBC-IND-ICLI IN DBC TO FRM-IND-CLT1
               MOVE DBC-GLS-ICLI IN DBC TO FRM-GLS-CLT1.
      
           MOVE FIO-STAT TO PGM-STAT-RCC.
       FIN-GET-CUR-RCC.
           EXIT.
      
       GET-NXT-RCC SECTION.
       INI-GET-NXT-RCC.
           MOVE 'RCC-KEY-IOPD' TO FIO-AKEY.
           MOVE FIO-GET-NXT TO FIO-CMND.
           PERFORM DAP-FIO-RCC.
           IF FIO-STAT-OKS AND
              OPD-CIC-IOPD IN OPD = RCC-CIC-IOPD IN RCC
               MOVE RCC-CIC-ICLI IN RCC TO DBC-CIC-ICLI IN DBC
               MOVE FIO-GET-KEY TO FIO-CMND
               PERFORM SGC-FIO-DBC
               IF FIO-STAT-OKS
      
                MOVE DBC-GLS-NOMC IN DBC TO CPT-STRN
                PERFORM CPT-BLKS
                MOVE CPT-STRN            TO DBC-GLS-NOMC IN DBC
                MOVE DBC-GLS-NOMC IN DBC TO FRM-GLS-CTE2
                MOVE DBC-NUM-ICLI IN DBC TO FRM-NUM-CLT2
                MOVE DBC-VRF-ICLI IN DBC TO FRM-VRF-CLT2
                MOVE DBC-IND-ICLI IN DBC TO FRM-IND-CLT2
                MOVE DBC-GLS-ICLI IN DBC TO FRM-GLS-CLT2
                MOVE '00' TO PGM-STAT-DBC
           ELSE
               MOVE SPACES TO FRM-GLS-CTE2
               MOVE ZEROES TO FRM-NUM-CLT2
               MOVE SPACES TO FRM-VRF-CLT2
               MOVE SPACES TO FRM-IND-CLT2
               MOVE SPACES TO FRM-GLS-CLT2.
       FIN-GET-NXT-RCC.
           EXIT.
       COPY DAPBGVEN.
       COPY GNSBGPES.
       COPY TABBFCAM.
       COPY GNSBVTAB.
       COPY GNSBGINT.
      *DBG>*Tasa Interes             : INT-TIPT
      *DBG>*Valor Tasa Informada     : INT-TINT
      *DBG>*Valor de Cambio          : INT-VCAM
      *DBG>*Fecha Colocacion         : INT-FCOL
      *DBG>*Fecha Inicial Periodo    : INT-FUNO
      *DBG>*Fecha Final   Periodo    : INT-FDOS
      *DBG>*Fecha Basa Tasa Variable : INT-FBTV ( opcional )
      *DBG>*Fecha de Proceso         : INT-FPRO ( la rutina la obtiene)
      *DBG>*
      *DBG>*devuelve:
      *DBG>*INT-TIPE                 : Tasa calculada para el periodo
      *DBG>*INT-CMSG, INT-MENS       : Codigo y mensaje
      *DBG>*INT-IETB                 : Indicador de existencia de tasa base
      *DBG> GNS-CAL-INT SECTION.
      *DBG> INI-GNS-CAL-INT.
      *DBG>     MOVE SPACES TO INT-CMSG INT-MENS INT-IETB.
      *DBG>*Para sumar o multiplicar tasas segun sea simple o compuesta
      *DBG>     IF INT-SPBT = 'S'
      *DBG>         MOVE 0 TO INT-TIPA
      *DBG>     ELSE
      *DBG>         MOVE 1 TO INT-TIPA.
      *DBG>*Obtiene fecha de hoy para el chequeo de tasa variable
      *DBG>     IF INT-CVTI > SPACES
      *DBG>         PERFORM GET-FHOY
      *DBG>         MOVE HOY-DHOY TO INT-DPRO
      *DBG>         MOVE HOY-MHOY TO INT-MPRO
      *DBG>         MOVE HOY-SHOY TO INT-SPRO
      *DBG>         MOVE HOY-AHOY TO INT-APRO
      *DBG>         MOVE HOY-HHHY TO INT-HHPR
      *DBG>         MOVE HOY-MMHY TO INT-MMPR
      *DBG>         MOVE HOY-SSHY TO INT-SSPR.
      *DBG>*
      *DBG>     IF NOT ( INT-PREP > ZEROES AND INT-TFPR = 'C' )
      *DBG>     
      *DBG>          MOVE  'Q11' TO QUE-COLA
      *DBG>               MOVE +12 TO QUE-LITM
      *DBG>               MOVE INT-FUNO TO QUE-ITEM
      *DBG>               MOVE QUE-PUT TO QUE-CMND
      *DBG>               PERFORM GNS-PRO-QUE
      *DBG>     
      *DBG>               MOVE  'Q12' TO QUE-COLA
      *DBG>               MOVE +12 TO QUE-LITM
      *DBG>               MOVE INT-FDOS TO QUE-ITEM
      *DBG>               MOVE QUE-PUT TO QUE-CMND
      *DBG>               PERFORM GNS-PRO-QUE
      *DBG>     
      *DBG>         MOVE INT-DUNO TO FEC-DEC1
      *DBG>         MOVE INT-MUNO TO FEC-MEC1
      *DBG>         MOVE INT-SUNO TO FEC-SEC1
      *DBG>         MOVE INT-AUNO TO FEC-AEC1
      *DBG>         MOVE INT-DDOS TO FEC-DEC2
      *DBG>         MOVE INT-MDOS TO FEC-MEC2
      *DBG>         MOVE INT-SDOS TO FEC-SEC2
      *DBG>         MOVE INT-ADOS TO FEC-AEC2
      *DBG>         MOVE FEC-FORM-FEC TO FEC-FORM
      *DBG>         MOVE FEC-DIF-DIA  TO FEC-CMND
      *DBG>*Para GENESIS version 3.1
      *DBG>*        PERFORM PRO-FEC
      *DBG>         PERFORM CAL-FEC
      *DBG>         IF NOT FEC-STAT-OKS
      *DBG>             MOVE 'IN1FEC1FEC2-' TO INT-CMSG
      *DBG>             GO TO FIN-GNS-CAL-INT
      *DBG>         ELSE
      *DBG>             MOVE FEC-NDIA TO INT-SEPD
      *DBG>             MOVE INT-DUNO TO INT-DDMA
      *DBG>             MOVE INT-MUNO TO INT-MDMA
      *DBG>             MOVE INT-SUNO TO INT-SDMA
      *DBG>             MOVE INT-AUNO TO INT-ADMA
      *DBG>             PERFORM GNS-CAL-TPE
      *DBG>             GO TO FIN-GNS-CAL-INT.
      *DBG>     MOVE INT-DCOL TO FEC-ITM1 INT-DDMA.
      *DBG>     MOVE INT-MCOL TO FEC-ITM2 INT-MDMA.
      *DBG>     MOVE INT-SCOL TO FEC-ITM3 INT-SDMA.
      *DBG>     MOVE INT-ACOL TO FEC-ITM4 INT-ADMA.
      *DBG>     IF INT-SPR2 > 0
      *DBG>         MOVE INT-TINT TO INT-TINC
      *DBG>         MOVE INT-SPR2 TO INT-TINT
      *DBG>         MOVE INT-TINC TO INT-SPR2
      *DBG>     ELSE
      *DBG>         MOVE INT-TINT TO INT-SPR2.
      *DBG> SUM-GNS-CAL-INT.
      *DBG>     IF INT-UTPR = 'D'
      *DBG>         MOVE INT-PREP    TO FEC-NDIA
      *DBG>         MOVE FEC-SUM-DIA TO FEC-CMND
      *DBG>     ELSE
      *DBG>     IF INT-UTPR = 'M'
      *DBG>         MOVE INT-PREP    TO FEC-NMES
      *DBG>         MOVE FEC-SUM-MES TO FEC-CMND
      *DBG>     ELSE
      *DBG>         MOVE INT-PREP    TO FEC-NANO
      *DBG>         MOVE FEC-SUM-ANO TO FEC-CMND.
      *DBG>     MOVE FEC-FORM-FEC TO FEC-FORM.
      *DBG>*Para GENESIS version 3.1
      *DBG>*    PERFORM PRO-FEC.
      *DBG>     PERFORM CAL-FEC.
      *DBG>     IF NOT FEC-STAT-OKS
      *DBG>         MOVE 'INTFCOLPREP+' TO INT-CMSG
      *DBG>         GO TO FIN-GNS-CAL-INT.
      *DBG>     MOVE FEC-ITM1 TO INT-DAU1.
      *DBG>     MOVE FEC-ITM2 TO INT-MAU1.
      *DBG>     MOVE FEC-ITM3 TO INT-SAU1.
      *DBG>     MOVE FEC-ITM4 TO INT-AAU1.
      *DBG>     MOVE INT-DUNO TO INT-DAU2.
      *DBG>     MOVE INT-MUNO TO INT-MAU2.
      *DBG>     MOVE INT-SUNO TO INT-SAU2.
      *DBG>     MOVE INT-AUNO TO INT-AAU2.
      *DBG>     IF INT-FAU1 < INT-FAU2
      *DBG>         MOVE FEC-ITM1 TO INT-DDMA
      *DBG>         MOVE FEC-ITM2 TO INT-MDMA
      *DBG>         MOVE FEC-ITM3 TO INT-SDMA
      *DBG>         MOVE FEC-ITM4 TO INT-ADMA
      *DBG>         GO TO SUM-GNS-CAL-INT
      *DBG>     ELSE
      *DBG>     IF INT-FAU1 = INT-FAU2
      *DBG>         MOVE FEC-ITM1 TO INT-DDMA
      *DBG>         MOVE FEC-ITM2 TO INT-MDMA
      *DBG>         MOVE FEC-ITM3 TO INT-SDMA
      *DBG>         MOVE FEC-ITM4 TO INT-ADMA.
      *DBG>**********************************
      *DBG>*Obtener interes entre INT-DUNO y MIN(FECH,FDOS)
      *DBG>     MOVE INT-DUNO TO FEC-DEC1.
      *DBG>     MOVE INT-MUNO TO FEC-MEC1.
      *DBG>     MOVE INT-SUNO TO FEC-SEC1.
      *DBG>     MOVE INT-AUNO TO FEC-AEC1.
      *DBG> CON-GNS-CAL-INT.
      *DBG>     MOVE FEC-ITM1 TO INT-DAU1.
      *DBG>     MOVE FEC-ITM2 TO INT-MAU1.
      *DBG>     MOVE FEC-ITM3 TO INT-SAU1.
      *DBG>     MOVE FEC-ITM4 TO INT-AAU1.
      *DBG>     MOVE INT-DDOS TO INT-DAU2.
      *DBG>     MOVE INT-MDOS TO INT-MAU2.
      *DBG>     MOVE INT-SDOS TO INT-SAU2.
      *DBG>     MOVE INT-ADOS TO INT-AAU2.
      *DBG>     IF INT-FAU1 < INT-FAU2
      *DBG>         MOVE INT-DAU1 TO FEC-DEC2
      *DBG>         MOVE INT-MAU1 TO FEC-MEC2
      *DBG>         MOVE INT-SAU1 TO FEC-SEC2
      *DBG>         MOVE INT-AAU1 TO FEC-AEC2
      *DBG>     ELSE
      *DBG>         MOVE INT-DAU2 TO FEC-DEC2
      *DBG>         MOVE INT-MAU2 TO FEC-MEC2
      *DBG>         MOVE INT-SAU2 TO FEC-SEC2
      *DBG>         MOVE INT-AAU2 TO FEC-AEC2.
      *DBG>     MOVE FEC-DIF-DIA TO FEC-CMND.
      *DBG>     
      *DBG>     
      *DBG>*              MOVE  'Q21' TO QUE-COLA
      *DBG>*              MOVE +12 TO QUE-LITM
      *DBG>*              MOVE INT-FUNO TO QUE-ITEM
      *DBG>*              MOVE QUE-PUT TO QUE-CMND
      *DBG>*              PERFORM GNS-PRO-QUE
      *DBG>           
      *DBG>           
      *DBG>           
      *DBG>*              MOVE  'Q22' TO QUE-COLA
      *DBG>*              MOVE +12 TO QUE-LITM
      *DBG>*              MOVE INT-FDOS TO QUE-ITEM
      *DBG>*              MOVE QUE-PUT TO QUE-CMND
      *DBG>*              PERFORM GNS-PRO-QUE
      *DBG>           
      *DBG>           
      *DBG>           
      *DBG>*Para GENESIS version 3.1
      *DBG>*    PERFORM PRO-FEC.
      *DBG>     PERFORM CAL-FEC.
      *DBG>     IF NOT FEC-STAT-OKS
      *DBG>         MOVE 'IN2FEC1FEC2-' TO INT-CMSG
      *DBG>         GO TO FIN-GNS-CAL-INT.
      *DBG>     MOVE FEC-NDIA TO INT-SEPD.
      *DBG>     PERFORM GNS-CAL-TPE.
      *DBG>     IF INT-CMSG > SPACES
      *DBG>*         DISPLAY 'INT-CMSG : ' INT-CMSG
      *DBG>*         DISPLAY 'INT-MENS : ' INT-MENS
      *DBG>         GO TO FIN-GNS-CAL-INT.
      *DBG>*     DISPLAY 'FEC-FEC1 - FEC-FEC2 : ' FEC-FEC1 ' - ' FEC-FEC2.
      *DBG>*     DISPLAY 'FEC-NDIA            : ' FEC-NDIA.
      *DBG>*     DISPLAY 'INT-TIPE            : ' INT-TIPE WITH CONVERSION.
      *DBG>*     DISPLAY '------------------------------------------------'.
      *DBG>     MOVE INT-SPR2 TO INT-TINT.
      *DBG>*Se suma o se multiplica segun sea simple o compuesta
      *DBG>     IF INT-SPBT = 'S'
      *DBG>         ADD INT-TIPE TO INT-TIPA
      *DBG>     ELSE
      *DBG>         ADD 1 TO INT-TIPE
      *DBG>         MULTIPLY INT-TIPE BY INT-TIPA GIVING INT-TIPA.
      *DBG>*
      *DBG>*Se termina si la fecha sumada es mayor que la fecha Dos
      *DBG>     IF ( INT-FAU1 NOT < INT-FAU2 )
      *DBG>         IF INT-SPBT = 'S'
      *DBG>             MOVE INT-TIPA TO INT-TIPE
      *DBG>             GO TO FIN-GNS-CAL-INT
      *DBG>         ELSE
      *DBG>             SUBTRACT 1 FROM INT-TIPA GIVING INT-TIPE
      *DBG>             GO TO FIN-GNS-CAL-INT.
      *DBG>     MOVE INT-DAU1 TO FEC-ITM1.
      *DBG>     MOVE INT-MAU1 TO FEC-ITM2.
      *DBG>     MOVE INT-SAU1 TO FEC-ITM3.
      *DBG>     MOVE INT-AAU1 TO FEC-ITM4.
      *DBG>     IF INT-UTPR = 'D'
      *DBG>         MOVE INT-PREP    TO FEC-NDIA
      *DBG>         MOVE FEC-SUM-DIA TO FEC-CMND
      *DBG>     ELSE
      *DBG>     IF INT-UTPR = 'M'
      *DBG>         MOVE INT-PREP    TO FEC-NMES
      *DBG>         MOVE FEC-SUM-MES TO FEC-CMND
      *DBG>     ELSE
      *DBG>         MOVE INT-PREP    TO FEC-NANO
      *DBG>         MOVE FEC-SUM-ANO TO FEC-CMND.
      *DBG>     MOVE FEC-FORM-FEC TO FEC-FORM.
      *DBG>*Para GENESIS version 3.1
      *DBG>*    PERFORM PRO-FEC.
      *DBG>     PERFORM CAL-FEC.
      *DBG>     IF NOT FEC-STAT-OKS
      *DBG>         MOVE 'INTFCOLPREP+' TO INT-CMSG
      *DBG>         GO TO FIN-GNS-CAL-INT.
      *DBG>     MOVE INT-DAU1 TO FEC-DEC1 INT-DDMA.
      *DBG>     MOVE INT-MAU1 TO FEC-MEC1 INT-MDMA.
      *DBG>     MOVE INT-SAU1 TO FEC-SEC1 INT-SDMA.
      *DBG>     MOVE INT-AAU1 TO FEC-AEC1 INT-ADMA.
      *DBG>     GO TO CON-GNS-CAL-INT.
      *DBG> FIN-GNS-CAL-INT.
      *DBG>     MOVE ZEROES TO INT-FBTV.
      *DBG>     MOVE 0      TO INT-SPR2.
      *DBG> EXT-GNS-CAL-INT.
      *DBG>     EXIT.
      *DBG>           
      *DBG>*Transforma INT-SEPA segun Tipo de Periodo INT-IPER
      *DBG>* 07-MAY-1990 14:55
      *DBG> PRO-IPER SECTION.
      *DBG> INI-PRO-IPER.
      *DBG>*Busca el CIC de INT-IPER en MSC IPER de sistema TAB
      *DBG>     MOVE SPACES TO INT-CMSG INT-MENS.
      *DBG>     MOVE 'TAB'    TO MSC-COD-SIST FIO-SIST.
      *DBG>     MOVE 'IPER'   TO MSC-COD-TMSC IN MSC.
      *DBG>     MOVE INT-IPER TO MSC-COD-CMSC IN MSC.
      *DBG>     MOVE FIO-GET-KEY TO FIO-CMND.
      *DBG>     PERFORM GNS-FIO-MSC.
      *DBG>     IF FIO-STAT-OKS
      *DBG>         MOVE MSC-CIC-CMSC IN MSC TO INT-IPER
      *DBG>     ELSE
      *DBG>         MOVE 'CICIPERNEX' TO INT-CMSG.
      *DBG> FIN-PRO-IPER.
      *DBG>     EXIT.
      *DBG>           
      *DBG>*Obtiene tasa de interes dado un periodo, un tipo de tasa y
      *DBG>*un valor de tasa
      *DBG> OBT-VTIN SECTION.
      *DBG> INI-OBT-VTIN.
      *DBG>*Obtiene fecha de hoy para el chequeo de tasa variable
      *DBG>     IF INT-CVTI > SPACES
      *DBG>         PERFORM GET-FHOY
      *DBG>         MOVE HOY-DHOY TO INT-DPRO
      *DBG>         MOVE HOY-MHOY TO INT-MPRO
      *DBG>         MOVE HOY-SHOY TO INT-SPRO
      *DBG>         MOVE HOY-AHOY TO INT-APRO
      *DBG>         MOVE HOY-HHHY TO INT-HHPR
      *DBG>         MOVE HOY-MMHY TO INT-MMPR
      *DBG>         MOVE HOY-SSHY TO INT-SSPR.
      *DBG>     PERFORM GNS-CAL-TPE.
      *DBG> FIN-OBT-VTIN.
      *DBG>     EXIT.
      *DBG>     
      *DBG>GNS-CAL-TPE SECTION.
      *DBG> INI-GNS-CAL-TPE.
      *DBG>     PERFORM OBT-SEPA.
      *DBG>     IF INT-CMSG > SPACES
      *DBG>         GO TO FIN-GNS-CAL-TPE.
      *DBG>     PERFORM OBT-TINT.
      *DBG>     IF INT-CMSG > SPACES
      *DBG>         GO TO FIN-GNS-CAL-TPE.
      *DBG>     PERFORM OBT-TIPE.
      *DBG>     IF INT-CMSG > SPACES
      *DBG>         GO TO FIN-GNS-CAL-TPE.
      *DBG> FIN-GNS-CAL-TPE.
      *DBG>     EXIT.
      *DBG>     
      *DBG>*    Descripcion     : Separacion Periodo Interes
      *DBG>*    Observaciones   :
      *DBG>*      - Ampliar otros casos Periodo Base ( futuro ? )
      *DBG> OBT-SEPA SECTION.
      *DBG> INI-OBT-SEPA.
      *DBG>     MOVE SPACES TO INT-CMSG INT-MENS.
      *DBG>     IF INT-PBTI = 'D'
      *DBG>*JSS     MOVE 0 TO INT-S30D , INT-SMES , INT-S360 , INT-SANO
      *DBG>         MOVE 0 TO INT-S30D , INT-S360
      *DBG>         MOVE INT-SEPD TO INT-SDIA
      *DBG>     ELSE
      *DBG>     IF INT-PBTI = 'T' OR 'M'
      *DBG>*JSS     MOVE 0 TO INT-SANO , INT-SMES , INT-S360
      *DBG>         MOVE 0 TO INT-S360
      *DBG>         DIVIDE 30 INTO INT-SEPD GIVING INT-S30D
      *DBG>             REMAINDER INT-SDIA
      *DBG>     ELSE
      *DBG>     IF INT-PBTI = 'X' OR 'A'
      *DBG>*JSS     MOVE 0 TO INT-S30D , INT-SMES , INT-SANO
      *DBG>         MOVE 0 TO INT-S30D
      *DBG>         DIVIDE 360 INTO INT-SEPD GIVING INT-S360
      *DBG>             REMAINDER INT-SDIA
      *DBG>     ELSE
      *DBG>         MOVE 'INTPBTIINV' TO INT-CMSG.
      *DBG> FIN-OBT-SEPA.
      *DBG>     EXIT.
      *DBG>     
      *DBG>*    Descripcion     : Preparacion Tasas Formula Unica
      *DBG>*    Observaciones   :
      *DBG>*
      *DBG> OBT-TINT SECTION.
      *DBG> INI-OBT-TINT.
      *DBG>     MOVE SPACES TO INT-CMSG INT-MENS.
      *DBG>     IF INT-PBTI = 'D'
      *DBG>         MOVE INT-SPBT TO INT-MCTI
      *DBG>     ELSE
      *DBG>     IF INT-PBTI = 'T' OR 'M'
      *DBG>         IF INT-SEPD > 30
      *DBG>             MOVE INT-SPBT TO INT-MCTI
      *DBG>         ELSE
      *DBG>             MOVE INT-BPBT TO INT-MCTI
      *DBG>     ELSE
      *DBG>     IF INT-PBTI = 'X' OR 'A'
      *DBG>         IF INT-SEPD > 360
      *DBG>             MOVE INT-SPBT TO INT-MCTI
      *DBG>         ELSE
      *DBG>             MOVE INT-BPBT TO INT-MCTI
      *DBG>     ELSE
      *DBG>         MOVE 'INTPBTIINV' TO INT-CMSG
      *DBG>         GO TO FIN-OBT-TINT.
      *DBG>     MOVE INT-TINT TO INT-TINC.
      *DBG>     
      *DBG>*Si es tasa variable
      *DBG>*      IF ( INT-CVTI > SPACES ) AND
      *DBG>*         ( INT-IBTV NOT = INT-IBTV-NADA-MAS )
      *DBG>     IF ( INT-CVTI > SPACES )
      *DBG>          MOVE INT-FINT TO CAM-FEC-FCAM IN CAM(1)
      *DBG>          MOVE INT-FINT TO CAM-FEC-FCAM IN CAM(2)
      *DBG>     
      *DBG>          MOVE 'I'      TO CAM-MSC-TVAL IN CAM(1)
      *DBG>          MOVE INT-CVTI TO CAM-COD-CVAL IN CAM(1)
      *DBG>          MOVE INT-PBTI TO CAM-COD-TCAM IN CAM(1)
      *DBG>     
      *DBG>          MOVE INT-VCAM TO CAM-COD-VCAM IN CAM(2)
      *DBG>      
      *DBG>          MOVE FIO-GET-KEY TO FIO-CMND
      *DBG>          PERFORM TAB-FIO-CAM
      *DBG>     
      *DBG>          IF ( NOT FIO-STAT-OKS ) OR
      *DBG>             ( CAM-MSC-STAT IN CAM NOT = 'S' )
      *DBG>              PERFORM GNS-CHK-BTV
      *DBG>              IF INT-CMSG > SPACES
      *DBG>                  GO TO FIN-OBT-TINT
      *DBG>              ELSE
      *DBG>                  ADD CAM-SGV-VCAM IN CAM TO INT-TINC
      *DBG>          ELSE
      *DBG>              ADD CAM-SGV-VCAM IN CAM TO INT-TINC.
      *DBG>*     IF INT-CVTI > SPACES AND INT-IBTV = INT-IBTV-UNA-VEZ
      *DBG>*         ADD CAM-SGV-VCAM IN CAM TO INT-TINT
      *DBG>*         MOVE INT-IBTV-NADA-MAS TO INT-IBTV.
      *DBG>     
      *DBG>     IF INT-BCTI = 'A'
      *DBG>         COMPUTE INT-TINC ROUNDED =
      *DBG>             ( INT-TINC * 100 ) / ( 100 - INT-TINC ).
      *DBG>     
      *DBG>     IF INT-PBTI = 'D'
      *DBG>         COMPUTE INT-TDIA = INT-TINC / 100
      *DBG>         COMPUTE INT-T30D = INT-TINC * 30 / 100
      *DBG>         COMPUTE INT-T360 = INT-TINC * 360 / 100
      *DBG>     ELSE
      *DBG>     IF INT-PBTI = 'T' OR 'M'
      *DBG>         COMPUTE INT-T30D = INT-TINC / 100
      *DBG>         COMPUTE INT-T360 = INT-TINC * 12 / 100
      *DBG>         IF INT-MCTI = 'D'
      *DBG>             COMPUTE INT-TDIA =
      *DBG>                 ( 1 + ( INT-TINC / 100 ) )**( 1 / 30 ) - 1
      *DBG>         ELSE
      *DBG>             COMPUTE INT-TDIA = INT-TINC / 3000
      *DBG>     ELSE
      *DBG>     IF INT-PBTI = 'X' OR 'A'
      *DBG>         COMPUTE INT-T30D = INT-TINC / 1200
      *DBG>         COMPUTE INT-T360 = INT-TINC / 100
      *DBG>         IF INT-MCTI = 'D'
      *DBG>             COMPUTE INT-TDIA =
      *DBG>                 ( 1 + ( INT-TINC / 100 ) )**( 1 / 360 ) - 1
      *DBG>         ELSE
      *DBG>             COMPUTE INT-TDIA = INT-TINC / 36000
      *DBG>     ELSE
      *DBG>         MOVE 'INTPBTIINV' TO INT-CMSG.
      *DBG> FIN-OBT-TINT.
      *DBG>     EXIT.
      *DBG>     
      *DBG> GNS-CHK-BTV SECTION.
      *DBG> INI-GNS-CHK-BTV.
      *DBG>     MOVE 'N' TO INT-IETB.
      *DBG>     IF NOT FIO-STAT-OKS
      *DBG>         MOVE 'CAMBTSANXABT'      TO INT-CMSG
      *DBG>         MOVE CAM-KEY-CAMB IN CAM TO INT-MEN2
      *DBG>     ELSE
      *DBG>         MOVE 'CAMBTSANVABT'      TO INT-CMSG
      *DBG>         MOVE CAM-KEY-CAMB IN CAM TO INT-MEN2.
      *DBG>     IF ( CAM-FEC-FCAM IN CAM(1) < INT-FPRO ) OR
      *DBG>        ( CAM-FEC-FCAM IN CAM(1) = INT-FPRO AND
      *DBG>          INT-HPRO > '120000' )
      *DBG>         GO TO FIN-GNS-CHK-BTV.
      *DBG>     IF INT-FBTV NOT > ZEROES
      *DBG>         GO TO FIN-GNS-CHK-BTV.
      *DBG>*
      *DBG>     MOVE INT-DBTV TO CAM-NUM-DCAM IN CAM(1)
      *DBG>                      CAM-NUM-DCAM IN CAM(2).
      *DBG>     MOVE INT-MBTV TO CAM-NUM-MCAM IN CAM(1)
      *DBG>                      CAM-NUM-MCAM IN CAM(2).
      *DBG>     MOVE INT-SBTV TO CAM-NUM-SCAM IN CAM(1)
      *DBG>                      CAM-NUM-SCAM IN CAM(2).
      *DBG>     MOVE INT-ABTV TO CAM-NUM-ACAM IN CAM(1)
      *DBG>                      CAM-NUM-ACAM IN CAM(2).
      *DBG>     MOVE FIO-GET-KEY TO FIO-CMND.
      *DBG>     PERFORM TAB-FIO-CAM.
      *DBG>     IF NOT FIO-STAT-OKS
      *DBG>         MOVE 'CAMBTSANXABT'      TO INT-CMSG
      *DBG>         MOVE CAM-KEY-CAMB IN CAM TO INT-MEN2
      *DBG>     ELSE
      *DBG>     IF CAM-MSC-STAT IN CAM NOT = 'S'
      *DBG>         MOVE 'CAMBTSANVABT'      TO INT-CMSG
      *DBG>         MOVE CAM-KEY-CAMB IN CAM TO INT-MEN2
      *DBG>     ELSE
      *DBG>         MOVE SPACES              TO INT-CMSG
      *DBG>         MOVE SPACES              TO INT-MENS.
      *DBG> FIN-GNS-CHK-BTV.
      *DBG>     EXIT.
      *DBG>     
      *DBG>*    Descripcion     : Obtencion Tasa del Periodo
      *DBG>*    Observaciones   :
      *DBG>*      - Modificar el calculo para Interes Compuesto considerando
      *DBG>*        Base de Calculo para Bajo y Sobre Periodo Expresion Tasa
      *DBG> OBT-TIPE SECTION.
      *DBG> INI-OBT-TIPE.
      *DBG>     MOVE SPACES TO INT-CMSG INT-MENS.
      *DBG>     
      *DBG>     IF INT-MCTI = 'S'
      *DBG>         COMPUTE INT-TIPE ROUNDED =
      *DBG>             INT-TDIA * INT-SDIA + INT-T30D * INT-S30D +
      *DBG>             INT-T360 * INT-S360
      *DBG>     ELSE
      *DBG>     IF INT-MCTI = 'C'
      *DBG>         IF INT-PBTI = 'D'
      *DBG>             COMPUTE INT-TIPE ROUNDED =
      *DBG>                 ( INT-TDIA + 1 ) ** INT-SDIA - 1
      *DBG>         ELSE
      *DBG>         IF INT-PBTI = 'T' OR 'M'
      *DBG>             COMPUTE INT-TIPE ROUNDED =
      *DBG>                 ( INT-T30D + 1 ) ** INT-S30D *
      *DBG>                 ( INT-SDIA * INT-TDIA + 1 ) - 1
      *DBG>         ELSE
      *DBG>         IF INT-PBTI = 'X' OR 'A'
      *DBG>             COMPUTE INT-TIPE ROUNDED =
      *DBG>                 ( INT-T360 + 1 ) ** INT-S360 *
      *DBG>                 ( INT-SDIA * INT-TDIA + 1 ) - 1
      *DBG>         ELSE
      *DBG>             MOVE 'INTPBTIINV' TO INT-CMSG
      *DBG>             GO TO FIN-OBT-TIPE
      *DBG>     ELSE
      *DBG>     IF INT-MCTI = 'D'
      *DBG>         COMPUTE INT-TIPE ROUNDED =
      *DBG>             ( INT-TDIA + 1 ) ** INT-SEPD - 1
      *DBG>     ELSE
      *DBG>         MOVE 'INTMCTIINV' TO INT-CMSG
      *DBG>         GO TO FIN-OBT-TIPE.
      *DBG> FIN-OBT-TIPE.
      *DBG>     EXIT.
      
       COPY GNSBGVSM.



