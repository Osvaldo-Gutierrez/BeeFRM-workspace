       IDENTIFICATION DIVISION.
      *========================
       PROGRAM-ID.   DAPPUOP4.
       AUTHOR.       BEE.
       DATE-WRITTEN. 28-Feb-01 10:43 AM.

      * NOMBRE PROGRAMA                   DAPPUOP4
      * VERSION                           3.1
      * OPCION                            UPD
      * ARCHIVO BASE                      DAPOPD
      * PANTALLA                          DAPOPD
      * INP/OUT                           DATACOM
      * TAMANO COMMAREA                   250

      *-----------------------------------------------------------------
      * MANTENCION : 1811_04 BCI DAP PY 54057 Liquidacion
      *               WEB en doble instancia
      * ETIQUETA   : "ISP-INI 19-nOV-2018 1811_04 Liquidacion WEB"
      * OBJETIVO   : Liquidacion WEB en doble instancia
      *              Version base DAPPUOP3 01-01
      * FECHA      : 19/11/2018
      * RESPONSABLE: CIMA-ISP
      *=============================================================*
      *-----------------------------------------------------------------
      * MANTENCION : 1905_03 BCI DAP PY 54057 Liquidacion
      *               WEB en doble instancia
      * ETIQUETA   : "ISP-INI 10-May-2019 1905_03 Liquidacion WEB"
      * OBJETIVO   : Liquidacion WEB en doble instancia
      *              Saldo en cero OPD
      * FECHA      : 10/05/2019
      * RESPONSABLE: CIMA-ISP
      *=============================================================*

       ENVIRONMENT DIVISION.
      *=====================
       CONFIGURATION SECTION.
      *----------------------
       SPECIAL-NAMES.
               DECIMAL-POINT IS COMMA.

       DATA DIVISION.
      *==============
       WORKING-STORAGE SECTION.
      *------------------------
      * COPY GNSWGSCR.
       COPY GNSWGCVT.
       77  WSS-TAG-DAPPUOP4-INI PIC X(125) VALUE
           '<IDNPGM NOM=$DAPPUOP4$ SKL=$E01$ VSN=$01-01$
      -    'GEN=$08-May-19 12:00 PM$ FNC=$1905_03$/>'.

       COPY GNSWCSCR.
      * PTC-INI-AUT
      * COPY GNSWVSCR.
       COPY GNSWV3CR.
      * PTC-FIN-AUT
      *<<<< FIN_SCR_VARI
      * ISP: VARIABLES EN CMMA, COMUNES PARA ENGANCHE PROGRAMAS OPD-RCC-
       COPY DAPWGENG.
      * ISP: VARIABLES EN CMMA, COMUNES PARA PROGRAMAS PI,PQ,PU (OPD)
       COPY DAPWG005.
      *AFRI-INI 13-ABR-2011 INTEGRACION MC2
       COPY MC2WGDPM.
       COPY MC2WGRCC.
       COPY MC2BRROC.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-ROC-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-AUX-REQA==.

       77  WSS-MC2-TOT-ERR-INT   VALUE ZEROES       PIC 9(03).
       77  WSS-MC2-TOT-ERR-PPC   VALUE ZEROES       PIC 9(03).

       77  WSS-MC2-CLI1-ASG-TPIZ VALUE 'N'          PIC X(01).
       77  WSS-MC2-IDX-IDC       VALUE ZEROES       PIC 9(02).
       77  WSS-MC2-COD-CPTO      VALUE SPACES       PIC X(03).

       01  WSS-MC2-COD-OTRN.
           03 WSS-MC2-COD-MODO                      PIC X(01).
           03 WSS-MC2-COD-CNAL                      PIC X(03).

       01  WSS-MC2-PTDD.
           03 WSS-MC2-FIJO       VALUE 'MC2PTD'    PIC X(06).
           03 WSS-MC2-MONE       VALUE SPACES      PIC X(06).

      *KEY Rut Cliente + Indicador o Calificador + Extension
       01  WSS-MC2-IDC.
           03  WSS-MC2-IDC-ICLI OCCURS 4 TIMES.
      *
      *        RUT Cliente
               05  WSS-MC2-NUM-ICLI                 PIC X(08).
      *
      *        D.V.
               05  WSS-MC2-VRF-ICLI                 PIC X(01).
      *
      *        Indicador Tipo RUT
               05  WSS-MC2-IND-ICLI                 PIC X(01).
      *
      *        Extension del RUT
               05  WSS-MC2-GLS-ICLI                 PIC X(03).
      *      *AFRI-FIN 13-ABR-2011 INTEGRACION MC2
      *>>>>
      * INI-ISP-INI 19-Nov-2018 1811_04 Liquidacion WEB

        77  WSS-IND-RCC     VALUE SPACES            PIC X(01).
        77  WSS-CTE-RCC-X   VALUE 'X'               PIC X(01).

        77  WSS-WAIT-TOTS   VALUE ZEROES            PIC 9(05).
        77  WSS-WAIT-CONT   VALUE ZEROES            PIC 9(05).
        77  WSS-WAIT-PASO   VALUE SPACES            PIC X(10).
        77  WSS-WAIT-TRAN   VALUE SPACES            PIC X(04).
        77  WSS-IND-LIQ-UPD VALUE        'N'        PIC X(01).
        77  WSS-CTE-PMSO-P  VALUE 'P'               PIC X(01).
        77  WSS-CTE-LIQ-UPD-YES    VALUE 'S'        PIC X(01).
        77  WSS-CTE-LIQ-UPD-NOT    VALUE 'N'        PIC X(01).
        77  WSS-CTE-1              VALUE 1          PIC 9(01).
        77  WSS-CTE-RLR            VALUE 'RLR'      PIC X(03).
        77  WSS-CTE-S              VALUE 'S'        PIC X(01).
        77  WSS-CTE-00             VALUE '00'       PIC X(02).
        77  WSS-IND-E-LIQ          VALUE 'NO'       PIC X(02).
        77  WSS-CTE-E-LIQ-NO       VALUE 'NO'       PIC X(02).
        77  WSS-CTE-E-LIQ-SI       VALUE 'SI'       PIC X(02).
        77  WSS-IND-L-2PASO        VALUE 'P1'       PIC X(02).
        77  WSS-CTE-L-2PASO-P1     VALUE 'P1'       PIC X(02).
        77  WSS-CTE-L-2PASO-P2     VALUE 'P2'       PIC X(02).
        77  WSS-CTE-L2-L2          VALUE 'L2'       PIC X(02).
        77  WSS-CTE-RC             VALUE 'RC'       PIC X(02).
        77  WSS-CTE-RX             VALUE 'RX'       PIC X(02).
        77  WSS-CTE-T              VALUE 'T'        PIC X(01).
        77  WSS-CTE-P              VALUE 'P'        PIC X(01).

        77  WSS-VEN-COD-STAT-RDL VALUE SPACES       PIC X(01).
        77  WSS-VEN-COD-STAT-RLR VALUE SPACES       PIC X(01).

      * FIN-ISP-FIN 19-Nov-2018 1811_04 Liquidacion WEB
      * ISP-INI 17-ABR-2018 COMANDO RDP
       77  WSS-CTE-RDP       VALUE 'RDP'            PIC X(03).
       77  WSS-CTE-VRF       VALUE 'VRF'            PIC X(03).
       77  WSS-CTE-110       VALUE '110'            PIC X(03).
       77  WSS-CTE-STATG     VALUE 'G'              PIC X(01).
       77  WSS-CTE-STATI     VALUE 'I'              PIC X(01).
       77  WSS-CTE-DAPPUOP4  VALUE 'DAPPUOP4'       PIC X(08).
      * ISP-FIN 17-ABR-2018 COMANDO RDP
      *OGB-INI 13-ENE-2017 BALANCE OPTIMO DAP
       COPY DAPWGCXS.
      *OGB-FIN 13-ENE-2017 BALANCE OPTIMO DAP
       COPY DAPWIOPD.
       COPY DAPBROPD.
JFH1   COPY SGCWGRCD.
       COPY GNSWVIDD.
       COPY GNSWGRQA.
       COPY GNSWGUIB.
       COPY GNSWGELS.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-OPD-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-TAB-REQA==.
       COPY GNSBRTAB.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-MSC-REQA==.
       COPY GNSBRMSC.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-MSG-REQA==.
      *OGB-INI 13-ENE-2017 BALANCE OPTIMO DAP
       COPY DAPWGPPD.
       COPY MC2BRPPD.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-PPD-REQA==.
      *OGB-FIN 13-ENE-2017 BALANCE OPTIMO DAP

       77 WSS-CIC-CTAB-AUX        VALUE SPACES        PIC X(06).
       77 WSS-POD-TTAB-RPC        VALUE 'RPC'         PIC X(03).
       77 WSS-POD-STAT-RPC        VALUE 'N'           PIC X(01).
       77 WSS-POD-I                                   PIC 9(05).
       77 WSS-POD-CNAL                                PIC X(03).
       77 WSS-DDE-LIMI            VALUE ZEROES        PIC 9(11).
       77 WSS-DDE-ERRO            VALUE 'N'           PIC X(01).
       77 WSS-CIC-EMAIL           VALUE '7'           PIC X(01).
       77 WSS-COD-EMAIL           VALUE SPACES        PIC X(01).
       77 WSS-PF4150              VALUE 'N'           PIC X(01).
       77 WSS-IND-LDF-VSAM        VALUE 'N'           PIC X(01).
       77 WSS-LOG-MC2             VALUE 'N'           PIC X(01).
       77 WSS-DIA-MC2             VALUE 'N'           PIC X(01).

       77  WSS-TAG-DAPWGCXS           PIC X(0125) VALUE
           '<IDNMOD NOM=$DAPWGCXS$ VSN=$11.08.09$ GEN=$14-06-05
      -    '17:16$ FNC=$110334$/>'.

      * Variables para Servicio Canales DAP
       01  CXS-GLS-TAB.
      *---------------------------------------------------
      * 01-DOCC Datos Obligatorios Cliente en captacion
      * ( DAPBQOPD )
           03  CXS-IND-01-DOCC.
               05 CXS-IND-01 VALUE SPACES   PIC X(01).
                  88 SI-OBLIG-DCLI-EN-CAPT       VALUE 'S'.
                  88 NO-OBLIG-DCLI-EN-CAPT       VALUE 'N'.
      *---------------------------------------------------
      * 02-CAEJ Manejo Especial de caja para Portal
      * ( DAPBULIQ )
           03  CXS-IND-02-CAEJ.
               05 CXS-IND-02 VALUE SPACES   PIC X(01).
                  88 SI-CAJA-ESPECIAL-PORTAL     VALUE 'S'.
                  88 NO-CAJA-ESPECIAL-PORTAL     VALUE 'N'.
      *---------------------------------------------------
      * 03-PERM Manejo Especial de permiso para Portal
      * ( DAPBUOPD )
           03  CXS-IND-03-PERM.
               05 CXS-IND-03 VALUE SPACES   PIC X(01).
                  88 SI-PERMISO-PORTAL-USU       VALUE 'S'.
                  88 NO-PERMISO-PORTAL-USU       VALUE 'N'.
      * 04-LERR Uso error
      * ( DAPBUOPD )
           03  CXS-IND-04-LERR.
               05 CXS-IND-04 VALUE SPACES   PIC X(01).
                  88 SI-ERROR-LIQ-CUSTO-ELECTRO  VALUE 'S'.
                  88 NO-ERROR-LIQ-CUSTO-ELECTRO  VALUE 'N'.
      * 05-TFRNG Manejo Especial de tasa fuera rango
      * ( DAPBUOPD )
           03  CXS-IND-05-TFRNG.
               05 CXS-IND-05 VALUE SPACES   PIC X(01).
                  88 SI-TASA-FUERA-RANGO         VALUE 'S'.
                  88 NO-TASA-FUERA-RANGO         VALUE 'N'.
      *---------------------------------------------------
      * 06-CMREV Manejo Especial comando REV
      * ( DAPPQLIQ )
           03  CXS-IND-06-CMREV.
               05 CXS-IND-06 VALUE SPACES   PIC X(01).
                  88 SI-MANEJO-COMANDO-REV       VALUE 'S'.
                  88 NO-MANEJO-COMANDO-REV       VALUE 'N'.
      *---------------------------------------------------
      * 07-CANAL PARA MC2
      * ( DAPBUOPD,DAPPUOP2 )
           03  CXS-IND-07-CMC2 VALUE SPACES   PIC X(03).
      *
      *---------------------------------------------------
      * DISPONIBLE
           03  CXS-GLS-DISP                 PIC X(91).
      *
       01  CNN-GLS-TAB-RED REDEFINES CXS-GLS-TAB.
           03  CXS-GLS-DESC                 PIC X(40).
           03  CXS-GLS-DATA                 PIC X(60).

       01  WSS-POD-CTAB.
           03 WSS-POD-CTAB-VCAM                       PIC X(06).
           03 WSS-POD-CTAB-TOPD                       PIC X(03).
           03 WSS-POD-CTAB-AOPD                       PIC X(03).

       01  WSS-POD-TAB.
           03 WSS-POD-TAB-DESC                        PIC X(40).
           03 WSS-POD-TAB-DATA                        PIC X(60).

       01  WSS-POD-TAB-RED REDEFINES
           WSS-POD-TAB.
           03 WSS-POD-TAB-TBL OCCURS 33 TIMES.
              05 WSS-POD-TAB-ELM                      PIC X(03).
           03 WSS-POD-TAB-TBL-CPL                     PIC X(01).

       01  WSS-RUP.
           03 WSS-RUP-PROG                            PIC X(09).
           03 WSS-RUP-PROD                            PIC X(02).
           03 WSS-RUP-FAMI                            PIC X(01).

      * se incorpora copy, gnsbrmsg en pgm, pues esta solo en deso
      *COPY GNSBRMSG.
      *    Registro Generico de Mensajes
      *    -----------------------------
      *
      *    Nombre Registro : MSG
      *    Clave(s)        : MSG-COD-TABL(UU), MSG-STP-ITRN(UU),
      *                      MSG-CIC-TABL(UU), MSG-EXT-TABL(UU)
      *    Largo           : 194
      *    Bloqueo         : 2
      *    Observaciones   :
      *
       01  MSG.
      *
      *    Filler Compatibilidad VSAM/MVS
           03  MSG-GLS-FLAG                             PIC X(01).
      *
      *    Clave Primaria Registro
           03  MSG-KEY-IREG.
      *
      *KEY     Tipo + Codigo (LLave Primaria)
               05  MSG-COD-TABL.
      *
      *            Codigo Tipo Tabla
                   07  MSG-COD-TTAB                     PIC X(03).
      *
      *            Codigo Mensaje
                   07  MSG-COD-MENS.
      *
      *                Tipo Mensaje
                       09  MSG-COD-TMSG                 PIC X(07).
      *
      *                Codigo Mensaje
                       09  MSG-COD-CMSG                 PIC X(05).
      *
      *        Time Stamp Transaccion
               05  MSG-STP-ITRN.
      *
      *            Fecha Transaccion
                   07  MSG-FEC-FTRN.
                       09  MSG-NUM-STRN                 PIC 9(02).
                       09  MSG-NUM-ATRN                 PIC 9(02).
                       09  MSG-NUM-MTRN                 PIC 9(02).
                       09  MSG-NUM-DTRN                 PIC 9(02).
      *
      *            Hora Transaccion
                   07  MSG-HRA-HRTR.
                       09  MSG-NUM-HHTR                 PIC 9(02).
                       09  MSG-NUM-MMTR                 PIC 9(02).
                       09  MSG-NUM-SSTR                 PIC 9(02).
      *
      *    Indicador Tipo Accion
           03  MSG-MSC-TACC                             PIC X(01).
      *
      *    Indicador Status
           03  MSG-MSC-STAT                             PIC X(01).
      *
      *    Indicador Vigencia                           GNS VIGE
           03  MSG-IND-VIGE  REDEFINES  MSG-MSC-STAT    PIC X(01).
      *
      *    Codigo Origen Transaccion
           03  MSG-COD-OTRN.
      *
      *        Indicador Tipo Origen
               05  MSG-MSC-TTRN                         PIC X(01).
      *
      *        Codigo Tipo Origen
               05  MSG-COD-TTRN                         PIC X(03).
      *
      *    Autor Transaccion
           03  MSG-COD-ATRN                             PIC X(12).
      *
      *KEY Tipo + Codigo (Interno Computacional)
           03  MSG-CIC-TABL.
      *
      *        Codigo Tipo Tabla
               05  MSG-CIC-TTAB                         PIC X(03).
      *
      *        Codigo Mensaje
               05  MSG-CIC-MENS.
      *
      *            Tipo Mensaje
                   07  MSG-CIC-TMSG                     PIC X(07).
      *
      *            Codigo Mensaje
                   07  MSG-CIC-CMSG                     PIC X(05).
      *
      *    Codigo Externo
           03  MSG-EXT-TABL.
      *
      *        Codigo Tipo Tabla
               05  MSG-EXT-TTAB                         PIC X(03).
      *
      *        Codigo Tabla
               05  MSG-EXT-CTAB                         PIC X(05).
      *
      *    Descripcion Corta
           03  MSG-GLS-DCOR                             PIC X(12).
      *
      *    Abreviacion Descripcion
           03  MSG-GLS-ABRV                             PIC X(05).
      *
      *    Descripcion del Codigo
           03  MSG-GLS-DESC.
               05  MSG-GLS-DES1                         PIC X(20).
               05  MSG-GLS-DES2                         PIC X(20).
      *
      *    Datos Anexos
           03  MSG-GLS-DATA.
      *
      *        Glosa Mensaje
               05  MSG-GLS-MENS                         PIC X(40).
      *
      *        Disponible
               05  MSG-GLS-DISP                         PIC X(20).
      *
      *    Clave Soundex
           03  MSG-SNX-TABL.
               05  MSG-SNX-TTAB                         PIC X(03).
               05  MSG-SNX-MENS                         PIC X(03).
      *
      *    Variables de Mensajes
       01  MSG-VARI.
      *
      *    Nombre de Programa FIO para Mensajes
           03  MSG-GLS-FMSG.
      *
      *        Codigo Sistema
               05  MSG-COD-SIST                         PIC X(03).
      *
      *        Nombre 'fijo' de FIO Mensajes
               05  MSG-COD-FMSG           VALUE 'PFTAB' PIC X(05).
      *
      *    VARIABLES DE MENSAJES POR CANAL
       01  MSG-CNAL.
      *
           03 MSG-GLS-DACN.
      *
              05 MSG-COD-DAC1                         PIC X(57).
      *
              05 MSG-COD-DAC2                         PIC X(03).
      *
           03 MSG-GLS-CNAL.
      *
      *          FIJO CN
              05 MSG-COD-INDC                         PIC X(02).
      *          CI= CODIGO INEX   NI = NUMERO INVALIDO
      *          NV= CODIGO NOVIG  SPACES = SIN CLASIFICAR
              05 MSG-COD-SIDC                         PIC X(02).
      *
              05 MSG-COD-DEST                         PIC X(03).
      *
              05 MSG-COD-SISC                         PIC X(03).
      *
              05 MSG-COD-CODC                         PIC X(12).
              05 MSG-COD-CODC-RED REDEFINES MSG-COD-CODC.
                 07 MSG-COD-CODC-01                   PIC X(01).
                 07 MSG-COD-CODC-02                   PIC X(01).
                 07 MSG-COD-CODC-03                   PIC X(01).
                 07 MSG-COD-CODC-04                   PIC X(01).
                 07 MSG-COD-CODC-05                   PIC X(01).
                 07 MSG-COD-CODC-06                   PIC X(01).
                 07 MSG-COD-CODC-07                   PIC X(01).
                 07 MSG-COD-CODC-08                   PIC X(01).
                 07 MSG-COD-CODC-09                   PIC X(01).
                 07 MSG-COD-CODC-10                   PIC X(01).
                 07 MSG-COD-CODC-11                   PIC X(01).
                 07 MSG-COD-CODC-12                   PIC X(01).
      *
              05 MSG-GLS-CICF.
                 07 MSG-GLS-CICF-DESC.
                     09 MSG-GLS-CI01                  PIC X(03).
                     09 MSG-GLS-CI02                  PIC X(12).
                     09 MSG-GLS-CI03                  PIC X(03).
                     09 MSG-GLS-CI04                  PIC X(22).
      *
      *
              05 MSG-GLS-NVCF REDEFINES MSG-GLS-CICF.
                 07 MSG-GLS-NV01                      PIC X(03).
                 07 MSG-GLS-NV02                      PIC X(12).
                 07 MSG-GLS-NV03                      PIC X(03).
                 07 MSG-GLS-NV04                      PIC X(22).
      *
              05 MSG-GLS-NICF REDEFINES MSG-GLS-CICF.
                 07 MSG-GLS-NI04                      PIC X(40).

              05 MSG-GLS-CICF-DATA                    PIC X(60).
      *
           03 MSG-CNAL-RED REDEFINES MSG-GLS-CNAL.
              05 MSG-CNAL-RED-DESC                    PIC X(40).
              05 MSG-CNAL-RED-DATA                    PIC X(40).

       01  WSS-CVB.
           03 WSS-COD-CTAB        VALUE SPACES        PIC X(12).
           03 WSS-COD-CAUX REDEFINES
              WSS-COD-CTAB.
              05 WSS-COD-CTAB-1                       PIC X(03).
              05 WSS-COD-DATA-2                       PIC X(09).

       01 WSS-CIC-CAUX.
          03 WSS-CIC-CAUX-TIO                         PIC X(03).
          03 WSS-CIC-CAUX-AUX                         PIC X(03).

       01  WSS-NUM-0108.
           03 WSS-NUM-0102                            PIC 9(02).
           03 WSS-NUM-0308                            PIC 9(06).

       COPY GNSWCFIO.
       COPY GNSWVFIO.
      * PTC-INI-AUT
      * COPY GNSWGFRM.
       COPY GNSWG3CF.
       COPY GNSWGQUE.
       COPY GNSWGTSK.
      * PTC-FIN-AUT
       COPY GNSWVNUM.
       COPY GNSWCNUM.
       COPY GNSWGFEC.
       COPY GNSWGHOY.
       COPY GNSWCVRF.
       COPY GNSWVVRF.
       COPY GNSWGIDC.
       COPY GNSWGSYS.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-OFI-REQA==.
       COPY TABBROFI.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-USR-REQA==.
       COPY TABBRUSR.
      *<<<< WSS
      * PTC-INI-ADIC  (RRM)  5-DEC-2002
       COPY DAPMXW05.
      * PTC-FIN-ADIC  (RRM)  5-DEC-2002
       COPY DAPWG008.
       COPY DAPWGVEN.
      *CIMA-INI 27-MAY-2016 INCONSISTENCIA PLAZO DAP WEB UF
       COPY DAPWGPLZ.
      *CIMA-FIN 27-MAY-2016 INCONSISTENCIA PLAZO DAP WEB UF

       01 WSS-BKP-OPD             VALUE SPACES        PIC X(500).
       01 WSS-BKP-VEN             VALUE SPACES        PIC X(300).
       01 WSS-COD-CMSC-CHOBC                          PIC X(08).

       01 WSS-GLS-DATA-CHOBC.
          03 WSS-GLS-DATA-CHOBC-FIL1                  PIC X(33).
          03 WSS-GLS-DATA-CHOBC-NUM-RETD              PIC X(02).
          03 WSS-GLS-DATA-CHOBC-IND-RETD              PIC X(01).

      *Entidades de GNS
      *<<<< PGM_PU
       COPY GNSBRCIC.
       COPY GNSWGCIC.
       COPY GNSWGTDQ.
      *>>>> PGM_PU
       COPY DAPWG006.
      *Entidades de TAB
       COPY TABBRCAM.
      *Entidades de SGC
       COPY SGCBRDBC.
       COPY SGCBRDCC.
       COPY SGCBRDCP.
       COPY SGCBRRCD.
       COPY SGCBROPE.
       COPY SGCBRRCO.
      *Entidades de DAP
      *<<<< PGM_PU
       COPY DAPBRLIC.
       COPY DAPBRLND.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-LND-REQA==.
      * DAPR0021-INI(ISP)  1-FEB-2000
       COPY DAPWGCCL.
       COPY DAPBRCCL.
      * DAPR0021-FIN(ISP)  1-FEB-2000
       COPY DAPBRSTA.
       COPY DAPWGATE.
       COPY USPC117.
      *>>>> PGM_PU
       COPY DAPBRLIQ.
       COPY DAPBRCAD.
       COPY DAPBRCAD REPLACING ==CAD== BY ==AUT==.
      * COPY DAPBRAUT.
       COPY DAPBRPOD.
      * COPY DAPBRCPD.
       COPY DAPBRRCC.

       01 WSS-RCC-1                                   PIC X(92).
       01 WSS-RCC-2                                   PIC X(92).

       COPY DAPBRVEN.
       COPY DAPBRPTD.
      *<<<< PGM_PU
       COPY DAPBRIMP.
       COPY DAPBRJNL.
      *JCT-INI 09-JUL-2012 DPM FUNCIONALIDAD DOF OPERACIONES>450UF
       COPY DAPBRUCT.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-UCT-REQA==.

       COPY DAPBRLDF.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-LDF-REQA==.
      *JCT-FIN 09-JUL-2012
      *>>>> PGM_PU
      *
       COPY GNSWGCPT.
       COPY GNSWGSTR.
       COPY GNSWGPES.
      *<<<< PGM_PU
       COPY GNSWGINT.
       COPY DAPWGLPD.
      * DAPR0005-INI(ISP) 11-10-1999
       COPY DAPWGRVI.
      * DAPR0005-FIN(ISP) 11-10-1999
      *>>>> PGM_PU
       COPY DAPWGPMP.

       01  WSS-ENG-VARI.
      * TRANSACCION A ENGANCHARSE PARA INGRESO
           03 WSS-ITRN            VALUE 'PUP2'        PIC X(04).
           03 WSS-IPGM            VALUE 'DAPPUOP2'    PIC X(08).

      * 77 WSS-TWALENG             COMP                PIC S9(04).

       01 WSS-TED-CTAB.
          03 WSS-TED-VCAM                             PIC X(06).
          03 WSS-TED-PLZO                             PIC 9(04).

       01 WSS-SGV-CORT            VALUE ZEROES        PIC 9(11).
       01 WSS-SGV-DESC            VALUE ZEROES        PIC 9(02)V9(02).
       01 WSS-COD-DCTO.
          03 WSS-COD-DCTO-MOD                         PIC X(01).
          03 WSS-COD-DCTO-NUM-D1                      PIC X(05).
          03 WSS-COD-DCTO-NUM-D2                      PIC X(05).

       01 WSS-GLS-PROD.
          03 WSS-GLS-PROD-1                           PIC X(03).
          03 WSS-GLS-PROD-2                           PIC X(03).
          03 WSS-GLS-PROD-3                           PIC X(03).
          03 WSS-GLS-PROD-4                           PIC X(03).

       01 WSS-CIC-CTAB.
          03 WSS-CIC-CTAB-4                           PIC X(04).
          03 WSS-CIC-CTAB-5                           PIC X(01).


       01  BKP-DPM-VARI.
      *PARAMETROS DE ENTRADA
           03  BKP-DPM-INP-VARI.
      *        CODIGO DE EVENTO
               05  BKP-DPM-COD-EVEN             PIC  X(03).
      *        CODIGO DE CONCEPTO
               05  BKP-DPM-COD-CPTO             PIC  X(03).
      *        CODIGO TIPO DE CONSULTA
               05  BKP-DPM-COD-TCON             PIC  X(03).
      *        IDENTIFICACION OPERACION
               05  BKP-DPM-CIC-IOPE.
                   07  BKP-DPM-CAI-IOPE         PIC  X(04).
                   07  BKP-DPM-IIC-IOPE         PIC  X(08).
                   07  BKP-DPM-EXT-IOPE         PIC  X(04).
      *        IDC CLIENTE
               05  BKP-DPM-IDC-ICLI.
                   07  BKP-DPM-NUM-ICLI         PIC  9(08).
                   07  BKP-DPM-VRF-ICLI         PIC  X(01).
                   07  BKP-DPM-IND-ICLI         PIC  X(01).
                   07  BKP-DPM-GLS-ICLI         PIC  X(03).
      *        INDICADOR DE RENTABILIDAD DEL CLIENTE
               05  BKP-DPM-IND-RTBL             PIC  X(03).
      *        INDICADOR DE COMPORTAMIENTO DEL CLIENTE
               05  BKP-DPM-IND-COMP             PIC  X(03).
      *        CODIGO TIPO DE CANAL
               05  BKP-DPM-COD-TCNL             PIC  X(03).
      *        CODIGO SUBTIPO DE CANAL
               05  BKP-DPM-COD-CNAL             PIC  X(03).
      *        CODIGO MONEDA DEL PRODUCTO
               05  BKP-DPM-COD-VCOC.
                   07  BKP-DPM-MSC-TVOC         PIC  X(01).
                   07  BKP-DPM-COD-CVOC         PIC  X(03).
                   07  BKP-DPM-COD-TCOC         PIC  X(02).
      *        CODIGO TIO-AUX DEL PRODUCTO
               05  BKP-DPM-COD-COOC.
                   07  BKP-DPM-COD-TOOC         PIC  X(03).
                   07  BKP-DPM-COD-AOOC         PIC  X(03).
      *        MONTO DE LA OPERACION
               05  BKP-DPM-VAL-MOPE             PIC S9(11)V9(04).
      *        MONEDA MONTO DE LA OPERACION
               05  BKP-DPM-COD-VCMO.
                   07  BKP-DPM-MSC-TVMO         PIC  X(01).
                   07  BKP-DPM-COD-CVMO         PIC  X(03).
                   07  BKP-DPM-COD-TCMO         PIC  X(02).
      *        MONTO SALDO DE LA OPERACION
               05  BKP-DPM-VAL-SOPE             PIC S9(11)V9(04).
      *        MONEDA MONTO SALDO DE LA OPERACION
               05  BKP-DPM-COD-VSOP.
                   07  BKP-DPM-MSC-TVOP         PIC  X(01).
                   07  BKP-DPM-COD-CVOP         PIC  X(03).
                   07  BKP-DPM-COD-TCOP         PIC  X(02).
      *        MONTO FINAL DE LA OPERACION
               05  BKP-DPM-VAL-FINA             PIC S9(11)V9(04).
      *        MONEDA MONTO FINAL DE LA OPERACION
               05  BKP-DPM-COD-VCFN.
                   07  BKP-DPM-MSC-TVFN         PIC  X(01).
                   07  BKP-DPM-COD-CVFN         PIC  X(03).
                   07  BKP-DPM-COD-TCFN         PIC  X(02).
      *        MONTO INTERESES DE LA OPERACION
               05  BKP-DPM-VAL-INTE             PIC S9(11)V9(04).
      *        MONEDA MONTO INTERESES DE LA OPERACION
               05  BKP-DPM-COD-VCIN.
                   07  BKP-DPM-MSC-TVIN         PIC  X(01).
                   07  BKP-DPM-COD-CVIN         PIC  X(03).
                   07  BKP-DPM-COD-TCIN         PIC  X(02).
      *        MONTO ADICIONAL DE LA OPERACION
               05  BKP-DPM-VAL-VASG             PIC S9(11)V9(04).
      *        MONEDA MONTO ADICIONAL DE LA OPERACION
               05  BKP-DPM-COD-VCVA.
                   07  BKP-DPM-MSC-TVVA         PIC  X(01).
                   07  BKP-DPM-COD-CVVA         PIC  X(03).
                   07  BKP-DPM-COD-TCVA         PIC  X(02).
      *        PLAZO DE LA OPERACION
               05  BKP-DPM-NUM-PLZO             PIC  9(05).
      *        EXPRESION DEL PLAZO DE LA OPERACION
               05  BKP-DPM-MSC-UTPZ             PIC  X(01).
      *        FECHA DE LA CONSULTA
               05  BKP-DPM-FEC-FCON.
                   07  BKP-DPM-NUM-SCON         PIC  9(02).
                   07  BKP-DPM-NUM-ACON         PIC  9(02).
                   07  BKP-DPM-NUM-MCON         PIC  9(02).
                   07  BKP-DPM-NUM-DCON         PIC  9(02).
      *        FECHA VENCIMIENTO DE LA OPERACION
               05  BKP-DPM-FEC-FUNO.
                   07  BKP-DPM-NUM-SUNO         PIC  9(02).
                   07  BKP-DPM-NUM-AUNO         PIC  9(02).
                   07  BKP-DPM-NUM-MUNO         PIC  9(02).
                   07  BKP-DPM-NUM-DUNO         PIC  9(02).
      *        CODIGO TIPO DE CARGO
               05  BKP-DPM-COD-TCAR             PIC  X(03).
      *----------------------------------------------------------------*
      *PARAMETROS DE SALIDA
           03  BKP-DPM-OUT-VARI.
      *        RESPUESTA-CPTO-PPC
      *        MONTO MINIMO
               05  BKP-DPM-PPC-SGV-MMIN         PIC S9(11)V9(04).
      *        MONEDA MONTO MINIMO
               05  BKP-DPM-PPC-COD-VCMI         PIC X(06).
      *        MONTO MAXIMO
               05  BKP-DPM-PPC-SGV-MMAX         PIC S9(11)V9(04).
      *        MONEDA MONTO MAXIMO
               05  BKP-DPM-PPC-COD-VCMA         PIC X(06).
      *----------------------------------------------------------------*
      *        RESPUESTA-CPTO-INT
      *        TASA PIZARRA
               05  BKP-DPM-INT-SGV-TPIZ         PIC S9(04)V9(04).
      *        TASA MAXIMA AUTOMATICA
               05  BKP-DPM-INT-SGV-TMAX         PIC S9(04)V9(04).
      *        TASA MARGEN
               05  BKP-DPM-INT-SGV-TMAR         PIC S9(04)V9(04).
      *        TASA TOPE
               05  BKP-DPM-INT-SGV-TTOP         PIC S9(04)V9(04).
      *----------------------------------------------------------------*
      *VARIABLES DE TRABAJO
           03  BKP-DPM-TSDPM.
               05  BKP-DPM-NOM-TSDPM.
                   07  BKP-DPM-COD-TYPE-DPM VALUE 'RSGS'   PIC  X(04).
                   07  BKP-DPM-COD-TERM-DPM VALUE SPACES   PIC  X(04).
               05  BKP-DPM-LEN-TSDPM VALUE +200 COMP       PIC S9(04).

           03  BKP-DPM-R                      VALUE ZEROES PIC  9(02).
           03  BKP-DPM-RMAX                   VALUE 25     PIC  9(02).
           03  BKP-DPM-VAL-MTDF-MAX   VALUE 99999999999    PIC  9(11).

           03  BKP-DPM-MC2-VEC OCCURS 25.
               05  BKP-DPM-MC2-COD-SIST                    PIC X(03).
               05  BKP-DPM-MC2-COD-EVEN                    PIC X(03).
               05  BKP-DPM-MC2-COD-CPTO                    PIC X(03).
               05  BKP-DPM-MC2-COD-SCPT                    PIC X(03).
               05  BKP-DPM-MC2-COD-OCOB                    PIC X(03).
               05  BKP-DPM-MC2-CIC-PLNT.
                   07  BKP-DPM-MC2-CAI-PLNT                PIC X(04).
                   07  BKP-DPM-MC2-IIC-PLNT                PIC X(08).
               05  BKP-DPM-MC2-COD-MONE                    PIC X(06).
               05  BKP-DPM-MC2-IND-TPLN                    PIC X(01).
               05  BKP-DPM-MC2-FEC-PLNT.
                   07  BKP-DPM-MC2-NUM-SPLN                PIC 9(02).
                   07  BKP-DPM-MC2-NUM-APLN                PIC 9(02).
                   07  BKP-DPM-MC2-NUM-MPLN                PIC 9(02).
                   07  BKP-DPM-MC2-NUM-DPLN                PIC 9(02).
               05  BKP-DPM-MC2-HRA-PLNT.
                   07  BKP-DPM-MC2-NUM-HHPN                PIC 9(02).
                   07  BKP-DPM-MC2-NUM-MMPN                PIC 9(02).
                   07  BKP-DPM-MC2-NUM-SSPN                PIC 9(02).
               05  BKP-DPM-MC2-IND-SELE                    PIC X(01).

               05  BKP-DPM-MC2-SGV-TAMO           PIC S9(11)V9(04).
               05  BKP-DPM-MC2-SGV-MMAX REDEFINES
                   BKP-DPM-MC2-SGV-TAMO           PIC S9(11)V9(04).
               05  BKP-DPM-MC2-COD-VCOC           PIC X(06).
               05  BKP-DPM-MC2-IND-CPTO           PIC X(03).
               05  BKP-DPM-MC2-VAL-MNTO           PIC S9(11)V9(04).
               05  BKP-DPM-MC2-VAL-MMIN REDEFINES
                   BKP-DPM-MC2-VAL-MNTO           PIC S9(11)V9(04).
               05  BKP-DPM-MC2-VAL-MONE           PIC X(06).
               05  BKP-DPM-MC2-CIC-IPTI.
                   07  BKP-DPM-MC2-CAI-IPTI.
                       09  BKP-DPM-MC2-IND-IPTI            PIC X(01).
                       09  BKP-DPM-MC2-GLS-IPTI            PIC X(03).
                   07  BKP-DPM-MC2-IIC-IPTI                PIC X(08).
               05  BKP-DPM-MC2-NUM-IPTI                    PIC 9(03).
               05  BKP-DPM-MC2-IND-DCTO                    PIC X(01).
               05  BKP-DPM-MC2-IND-CAAB                    PIC X(01).
               05  BKP-DPM-MC2-COD-IPVC                    PIC X(12).
               05  BKP-DPM-MC2-COD-TINT.
                   07  BKP-DPM-MC2-MSC-BCTI                PIC X(01).
                   07  BKP-DPM-MC2-MSC-PBTI                PIC X(01).
                   07  BKP-DPM-MC2-MSC-BPBT                PIC X(01).
                   07  BKP-DPM-MC2-MSC-SPBT                PIC X(01).
                   07  BKP-DPM-MC2-COD-CVTI                PIC X(03).
                   07  BKP-DPM-MC2-MSC-TFPR                PIC X(01).
                   07  BKP-DPM-MC2-NUM-PREP                PIC 9(03).
                   07  BKP-DPM-MC2-MSC-UTPR                PIC X(01).
               05  BKP-DPM-MC2-SGV-CSTF          PIC S9(04)V9(04).
               05  BKP-DPM-MC2-SGV-TMAX          PIC S9(04)V9(04).
               05  BKP-DPM-MC2-VAL-FRIE          PIC S9(03).
               05  BKP-DPM-MC2-VAL-PMIN          PIC S9(04)V9(04).
               05  BKP-DPM-MC2-VAL-PMAX          PIC S9(04)V9(04).
               05  BKP-DPM-MC2-VAL-PPRO          PIC S9(04)V9(04).
      *----------------------------------------------------------------*
      *----------------------------------------------------------------*
           03  BKP-DPM-ROC-MC2 OCCURS 25.
               05  BKP-DPM-ROC-CAI-IOPC                    PIC X(04).
               05  BKP-DPM-ROC-IIC-IOPC                    PIC 9(08).
               05  BKP-DPM-ROC-EXT-IOPC                    PIC 9(04).
               05  BKP-DPM-ROC-COD-SIST                    PIC X(03).
               05  BKP-DPM-ROC-COD-EVEN                    PIC X(03).
               05  BKP-DPM-ROC-NUM-IROC                    PIC 9(03).
               05  BKP-DPM-ROC-COD-CPTO                    PIC X(03).
               05  BKP-DPM-ROC-COD-SCPT                    PIC X(03).
               05  BKP-DPM-ROC-COD-MODL                    PIC X(03).
               05  BKP-DPM-ROC-COD-OCOB                    PIC X(03).
               05  BKP-DPM-ROC-CAI-PLAN                    PIC X(04).
               05  BKP-DPM-ROC-IIC-PLAN                    PIC X(08).
               05  BKP-DPM-ROC-IND-TPLT                    PIC X(01).
               05  BKP-DPM-ROC-COD-VCOC                    PIC X(06).
               05  BKP-DPM-ROC-FEC-PLAN.
                   07  BKP-DPM-ROC-NUM-DLAN                PIC 9(02).
                   07  BKP-DPM-ROC-NUM-MLAN                PIC 9(02).
                   07  BKP-DPM-ROC-NUM-SLAN                PIC 9(02).
                   07  BKP-DPM-ROC-NUM-ALAN                PIC 9(02).
               05  BKP-DPM-ROC-HRA-PLAN                    PIC 9(06).
               05  BKP-DPM-ROC-IND-VIGE                    PIC X(01).
               05  BKP-DPM-ROC-COD-ANUL                    PIC X(02).
               05  BKP-DPM-ROC-FEC-FUNO.
                   07  BKP-DPM-ROC-NUM-DUNO                PIC 9(02).
                   07  BKP-DPM-ROC-NUM-MUNO                PIC 9(02).
                   07  BKP-DPM-ROC-NUM-SUNO                PIC 9(02).
                   07  BKP-DPM-ROC-NUM-AUNO                PIC 9(02).
               05  BKP-DPM-ROC-NUM-ADIC                    PIC 9(08).
               05  BKP-DPM-ROC-VRF-ADIC                    PIC X(01).
               05  BKP-DPM-ROC-IND-ADIC                    PIC X(01).
               05  BKP-DPM-ROC-GLS-ADIC                    PIC X(03).
               05  BKP-DPM-ROC-FEC-FDOS.
                   07  BKP-DPM-ROC-NUM-DDOS                PIC 9(02).
                   07  BKP-DPM-ROC-NUM-MDOS                PIC 9(02).
                   07  BKP-DPM-ROC-NUM-SDOS                PIC 9(02).
                   07  BKP-DPM-ROC-NUM-ADOS                PIC 9(02).
               05  BKP-DPM-ROC-SGV-TCAL             PIC S9(11)V9(04).
               05  BKP-DPM-ROC-MSC-BCTI                    PIC X(01).
               05  BKP-DPM-ROC-MSC-PBTI                    PIC X(01).
               05  BKP-DPM-ROC-MSC-BPBT                    PIC X(01).
               05  BKP-DPM-ROC-MSC-SPBT                    PIC X(01).
               05  BKP-DPM-ROC-SGV-TINF             PIC S9(11)V9(04).
               05  BKP-DPM-ROC-COD-CVTI                    PIC X(03).
               05  BKP-DPM-ROC-MSC-TFPR                    PIC X(01).
               05  BKP-DPM-ROC-NUM-PREP                    PIC 9(03).
               05  BKP-DPM-ROC-MSC-UTPR                    PIC X(01).
               05  BKP-DPM-ROC-SGV-CFON             PIC S9(03)V9(04).
               05  BKP-DPM-ROC-SGV-FRIE             PIC S9(03)V9(04).
      *----------------------------------------------------------------*



       01 WSS-VARI.
      *BEE-INI-NGA-12-AGO-2013 TRANSACCIONES LENTAS
      * CONSTANTES.
           03  WSS-CONSTANTES.
               05  WSS-CT-L       VALUE 'L'           PIC X(01).
               05  WSS-CT-CAN     VALUE 'CAN'         PIC X(03).
               05  WSS-CT-N       VALUE 'N'           PIC X(01).
               05  WSS-CT-S       VALUE 'S'           PIC X(01).
      *BEE-FIN-NGA-12-AGO-2013 TRANSACCIONES LENTAS
           03  WSS-ROC-ID-CLI     VALUE '1'           PIC X(01).
      *AFRI-INI 13-ABR-2011 INTEGRACION MC2
      *        CORRELATIVO ROC
           03  WSS-NUM-CORR                        PIC 9(03).
      *    RESPUESTA-CPTO-INT (MULTIPLES DEUDORES)

      *        TASA PIZARRA
           03  WSS-INT-SGV-TPIZ                    PIC S9(04)V9(04).
      *        INDICADOR GRABAR RCC CUANDO OPD CAN
      *BEE-INI-NGA-12-AGO-2013 TRANSACCIONES LENTAS
           03  WSS-IND-GRCC         VALUE 'N'      PIC X(01).
      *BEE-FIN-NGA-12-AGO-2013 TRANSACCIONES LENTAS
      *        TASA PIZARRA VALIDACION
           03  WSS-INT-SGV-TPIZ-VALI               PIC S9(04)V9(04).

      *        TASA MAXIMA AUTOMATICA
           03  WSS-INT-SGV-TMAX                    PIC S9(04)V9(04).
      *        TASA MAXIMA AUTOMATICA VALIDACION
           03  WSS-INT-SGV-TMAX-VALI               PIC S9(04)V9(04).

      *        TASA MARGEN
           03  WSS-INT-SGV-TMAR                    PIC S9(04)V9(04).
      *        TASA MARGEN VALIDACION
           03  WSS-INT-SGV-TMAR-VALI               PIC S9(04)V9(04).


      *        TASA TOPE
           03  WSS-INT-SGV-TTOP                    PIC S9(04)V9(04).
      *        TASA TOPE VALIDACION
           03  WSS-INT-SGV-TTOP-VALI               PIC S9(04)V9(04).

      *    RESPUESTA-CPTO-PPC
      *        MONTO MINIMO
           03  WSS-PPC-SGV-MMIN                    PIC S9(11)V9(04).
      *        MONEDA MONTO MINIMO
           03  WSS-PPC-COD-VCMI                    PIC X(06).
      *        MONTO MAXIMO
           03  WSS-PPC-SGV-MMAX                    PIC S9(11)V9(04).
      *        MONEDA MONTO MAXIMO
           03  WSS-PPC-COD-VCMA                    PIC X(06).
      *AFRI-FIN 13-ABR-2011 INTEGRACION MC2
      * ISP: GUARDA EL DATO ANEXO DEL CODIGO DE CONDICION
      *      DE GARANTIA DE ENTIDAD OPD.
           03 WSS-OPD-COD-GARA-MDA-OPD  VALUE SPACES PIC X(01).

      *       var aux para respaldar CIC Cliente RCC
           03 WSS-BKP-CIC-ICLI                  PIC X(12).
      *ADA-INI 24-SEP-2001
      **       VAR AUX PARA APROX ULTIMO DECIMAL CANTIDADES NO PESOS
      *     03 WSS-VAL-FORI                      PIC 9(11)V9(05).
      ** ISP:  VALOR DE INTERESES PARA RDL
      *     03 WSS-SGV-RDL-INTE                  PIC 9(11)V9(04).
      *     03 WSS-SGV-RDL-INTE-PESO             PIC 9(11)V9(04).
      ** ISP:  VALOR DE TODO PARA RDL
      *     03 WSS-SGV-RDL-TODO                  PIC 9(11)V9(04).
      *     03 WSS-SGV-RDL-TODO-PESO             PIC 9(11)V9(04).
      *
      *     03 WSS-SGV-MPRE                  PIC 9(11)V9(04).
      *************************************************************
      *       var aux para aprox ultimo decimal cantidades no pesos
           03 WSS-VAL-FORI                      PIC S9(11)V9(05).
      * ISP:  VALOR DE INTERESES PARA RDL
           03 WSS-SGV-RDL-INTE                  PIC S9(11)V9(04).
           03 WSS-SGV-RDL-INTE-PESO             PIC S9(11)V9(04).
      * ISP:  VALOR DE TODO PARA RDL
           03 WSS-SGV-RDL-TODO                  PIC S9(11)V9(04).
           03 WSS-SGV-RDL-TODO-PESO             PIC S9(11)V9(04).

           03 WSS-SGV-MPRE                  PIC S9(11)V9(04).
      *ADA-FIN 24-SEP-2001
      * SUMATORIA DE PORCENTAJES PARA 'PC' DEBE SER <= 100%
           03 WSS-SGV-TSPC                  PIC 9(11)V9(04).
      * 'INTE' CUANDO EL USUARIO HA ESPECIFICADO RETIRO 100% INTERESES E
      * 'MNTO' CUANDO EL USUARIO HA ESPECIFICADO MONTO INTERESES EN RDL
      * 'TODO' CUANDO EL USUARIO HA INFORMADO LIQUIDACION TOTAL EN RDL
      *     O RENUEVA TODO
           03 WSS-SW-RRDL                   PIC X(04).
           03 WSS-FACT                      PIC 9(04).
      * OFICINA PARA LNK-DDT
           03 WSS-NUM-OFIC                  PIC 9(03).
           03 WSS-NUM-PNTE                  PIC 9(05).
           03 WSS-NUM-PMIN                  PIC 9(05).
           03 WSS-NUM-PMAX                  PIC 9(05).
           03 WSS-NUM-DURV                  PIC 9(05).
           03 WSS-IND-PMIN                  PIC X(01).
           03 WSS-IND-PMAX                  PIC X(01).
           03 WSS-IND-DURV                  PIC X(01).
      *    total vctos - 1
           03 WSS-TVEN-1                          PIC 9(04).
      *    duracion vctos - 1o.
           03 WSS-DURV-1                          PIC 9(04).
      *    fecha termino opd
           03 WSS-FEC-FTER.
              05 WSS-NUM-DTER                     PIC 9(02).
              05 WSS-NUM-MTER                     PIC 9(02).
              05 WSS-NUM-STER                     PIC 9(02).
              05 WSS-NUM-ATER                     PIC 9(02).
           03 WSS-FEC-FLIQ.
              05 WSS-NUM-DLIQ                     PIC 9(02).
              05 WSS-NUM-MLIQ                     PIC 9(02).
              05 WSS-NUM-SLIQ                     PIC 9(02).
              05 WSS-NUM-ALIQ                     PIC 9(02).
      *    cantidad de operaciones vigentes de un cliente
           03 WSS-OPDV                            PIC 9(04).

           03 WSS-VAL-CAPI                        PIC 9(11)V9(04).
           03 WSS-VAL-CAPI-L2                     PIC 9(11)V9(04).
           03 WSS-VAL-FINA-L2                     PIC 9(11)V9(04).

      *    VAR-VRF-CAD
           03 WSS-TOT-CLI  VALUE ZEROES           PIC 9(02).
      * ISP: NUMERO DE CADS VACIAS
           03 WSS-TOT-CADV                        PIC 9(02).

      * ISP: NUMERO DE CADS CAJA
           03 WSS-TOT-CAJA                        PIC 9(02).

      * ISP: NUMERO DE CADS AUTOMATICO
           03 WSS-TOT-AUTO                        PIC 9(02).

      * ISP: MONTO DE CAPTACION OBTENIDO DESDE PANTALLA
      *      WSS-VAL-CAPT <-- FRM-VAL-IPES (SI FRM-VAL-IPES NOT = ZEROE
      *      WSS-VAL-CAPT <-- OPD-VAL-IPES (SI FRM-VAL-IPES     = ZEROE
           03 WSS-VAL-CAPT                        PIC 9(11)V9(04).

      * ISP: SUMATORIA DE MONTOS DE CADS
      *ADA-INI 24-SEP-2001
      *    03 WSS-VAL-SCAD                        PIC 9(11)V9(04).
           03 WSS-SGV-SCAD                        PIC S9(11)V9(04).
      *ADA-FIN 24-SEP-2001

      * ISP: SUMATORIA DE MONTOS DE CADS QUE SON CAJA
      *ADA-INI 24-SEP-2001
      *    03 WSS-VAL-CAJA                        PIC 9(11)V9(04).
           03 WSS-SGV-CAJA                        PIC S9(11)V9(04).
      *ADA-FIN 24-SEP-2001

      * ISP: SUMATORIA DE MONTOS DE CADS QUE SON CTA CTE
      *ADA-INI 24-SEP-2001
      *    03 WSS-VAL-CCTE                        PIC 9(11)V9(04).
           03 WSS-SGV-CCTE                        PIC S9(11)V9(04).
      *ADA-FIN 24-SEP-2001

      * ISP: NUMERO DE CTA CTE PARA HACER EL CARGO O ABONO EN
      *      LINEA (RDL)
           03 WSS-CIC-CCTE.
              05 WSS-CAI-CCTE                     PIC X(04).
              05 WSS-IIC-CCTE                     PIC 9(08).

      * ISP: TIPO DE CTA (Ahorro o CuentaCorrienTe)
           03 WSS-IND-TCTA                        PIC X(03).

      * ISP: GRUPO AL QUE PERTENECE TIPO DE CARGO ABONO
      *      CAJA, AUTOMATICO O MANUAL.
           03 WSS-IND-GCAD                        PIC X(01).

      *       ind validacion de cliente
           03 WSS-IND-VCLI                        PIC X(01).

           03 WSS-NUM-JUL        VALUE 0          PIC 9(06).
           03 WSS-NDIA                            PIC 9(04).
           03 WSS-TRM-DIA                         PIC 9(04).
           03 WSS-TRM-MTO                         PIC 9(04).
           03 WSS-IND-TDIA                        PIC X(01).
           03 WSS-IND-TMTO                        PIC X(01).
           03 WSS-IDX-INT                         PIC 9(04).
           03 WSS-GLS-MRNG.
              05 WSS-GLS-1RNG                PIC X(30).
              05 WSS-GLS-2RNG                PIC ---.---.---.--9,9999.
              05 WSS-GLS-3RNG VALUE ' <--> ' PIC X(06).
              05 WSS-GLS-4RNG                PIC ---.---.---.---,----.
           03 WSS-CPT-NOMB VALUE SPACES.
              05  WSS-CPT-DESC              PIC X(27).
              05  WSS-CPT-CAI               PIC X(04).
              05  WSS-CPT-IIC               PIC X(08).
           03  WSS-CPT-NOMB-R  REDEFINES  WSS-CPT-NOMB PIC X(39).
           03 WSS-GLS-CADV.
              05 WSS-CAD-GLS-MEN0            PIC X(39).
              05 WSS-CAD-GLS-MENS            PIC X(05).
              05 WSS-CAD-SGV-LIQU-EDT        PIC ---.---.--9,99.
              05 FILLER       VALUE  SPACES  PIC X(01).
              05 WSS-CAD-IND-TCAD            PIC X(05).
              05 FILLER       VALUE  SPACES  PIC X(01).
              05 WSS-CAD-CIC-ICAD.
                 07 WSS-CAD-CAI-ICAD            PIC X(04).
                 07 WSS-CAD-IIC-ICAD            PIC ZZZZZZZZ.
           03 WSS-CAD-VARI.
              05 WSS-CAD-KEY-ICAD            PIC X(16).
      *        05 WSS-CAD-SGV-LIQU            PIC 9(11)V9(04).
           03 WSS-GLS-PZO.
              05 WSS-GLS-PZO1                PIC X(50).
              05 WSS-GLS-PZO2                PIC ZZZZ.
              05 FILLER VALUE SPACES         PIC X(01).
              05 WSS-GLS-PZO3                PIC X(01).
              05 FILLER VALUE ' <--> '       PIC X(06).
              05 WSS-GLS-PZO4                PIC ZZZZ.
              05 FILLER VALUE SPACES         PIC X(01).
              05 WSS-GLS-PZO5                PIC X(01).
           03 WSS-IND-CTA                         PIC X(01).
      *       ind cta mismo u otro cliente
           03 WSS-IND-MUOC                        PIC X(01).
           03 WSS-VAL-IPES                        PIC 9(11)V9(04).
           03 WSS-FEC-FPVC.
              05 WSS-NUM-DPVC                     PIC 9(02).
              05 WSS-NUM-MPVC                     PIC 9(02).
              05 WSS-NUM-SPVC                     PIC 9(02).
              05 WSS-NUM-APVC                     PIC 9(02).
           03 WSS-FEC-FUNO.
              05 WSS-NUM-SUNO                     PIC 9(02).
              05 WSS-NUM-AUNO                     PIC 9(02).
              05 WSS-NUM-MUNO                     PIC 9(02).
              05 WSS-NUM-DUNO                     PIC 9(02).
           03 WSS-FEC-FDOS.
              05 WSS-NUM-SDOS                     PIC 9(02).
              05 WSS-NUM-ADOS                     PIC 9(02).
              05 WSS-NUM-MDOS                     PIC 9(02).
              05 WSS-NUM-DDOS                     PIC 9(02).
           03 WSS-CIC-PER                         PIC X(01).
           03 WSS-OPD-CAI-ISER                    PIC 9(04).
           03 WSS-NUM-PER                         PIC 9(05).
           03 WSS-IND-PVEN                        PIC X(01).
      * JVM: Mantencion 11/06/1992
           03 WSS-IND-ISER          VALUE ZEROS   PIC 9(01).
           03 WSS-IND-TCAD          VALUE SPACES  PIC X(01).
      * JVM: Fin
      *LRH ini 30-AGO-1994
           03 WSS-INI-PESO                        PIC 9(11)V9(4).
           03 WSS-FIN-PESO                        PIC 9(11)V9(4).
      *LRH fin 30-AGO-1994
      *RVM-ADA-INI 22.02.2001
           03  OKS-PLZO-CTB                          PIC X(01).
           03  OKS-IMP-OPD                           PIC X(01).
           03  WSS-VEC-PLZO.
               05  WSS-NUM-PLZO     OCCURS 6 TIMES   PIC 9(04).
               05  WSS-COD-PLZO     OCCURS 6 TIMES   PIC X(12).
           03  WSS-TOT-PLZO VALUE ZEROES             PIC 9(02).
           03  WSS-GLS-DATA.
               05  WSS-GLS-DATA-FILL                 PIC X(01).
               05  WSS-GLS-PZO-DAP                   PIC X(01).
      *RVM-ADA-FIN 22.02.2001
           03 PGM-STAT-VEN           VALUE '23'      PIC X(02).
              88 PGM-STAT-VEN-OKS    VALUE '00'.
              88 PGM-STAT-VEN-NUL    VALUE '  '.
           03 PGM-STAT-AUT           VALUE '23'      PIC X(02).
              88 PGM-STAT-AUT-OKS    VALUE '00'.
              88 PGM-STAT-AUT-NUL    VALUE '  '.
           03 PGM-STAT-IMP           VALUE '23'      PIC X(02).
              88 PGM-STAT-IMP-OKS    VALUE '00'.
              88 PGM-STAT-IMP-NUL    VALUE '  '.

      * COMPONE MENSAJE DE ACUERDO A :
      *    ENTIDA A PROCESAR                 (OPD)
      *    COMANDO QUE SE PROCESA            (ING O MOD)
      *    ESTADO DESPUES DE APLICAR COMANDO (I O V)
      *    ASIGNACION O NO DE CIC            (S O N)
      *    DEBEN EXISTIR LAS COMBINACIONES DE MENSAJES RESPECTIVAS
           03 WSS-MSG-OPD.
              05 WSS-MSG-OPD-OPD                      PIC X(03).
              05 WSS-MSG-OPD-CMD                      PIC X(03).
              05 WSS-MSG-OPD-STS                      PIC X(01).
              05 WSS-MSG-OPD-CIC                      PIC X(01).
           03 WSS-ENT-UBFD.
              05 WSS-TBL-UBFD                         PIC X(03).
              05 WSS-COD-UBFD                         PIC X(06).
      *LRH 28-JUN-1994 contador de CADs
           03 WSS-TOT-CADS                            PIC 9(02).
           03 STE-PERMISO                             PIC X(01).
      *RVM-CST-INI 28-AUG-1996
           03 WSS-CAI-ISER.
              05 WSS-CAI-ISER-1                       PIC X(01).
              05 WSS-CAI-ISER-2                       PIC X(03).
      *RVM-CST-FIN 28-AUG-1996
      *<<<< INI_WSS_FO
           03 WSS-AXTT.
              05 WSS-BCTI                             PIC X(01).
              05 WSS-PBTI                             PIC X(01).
              05 WSS-BPBT                             PIC X(01).
              05 WSS-SPBT                             PIC X(01).
              05 WSS-CVTI                             PIC X(03).
              05 WSS-TFPR                             PIC X(01).
              05 WSS-PREP                             PIC 9(03).
              05 WSS-UTPR                             PIC X(01).
           03 WSS-EEVC            OCCURS 1.
              05 WSS-REVC                             PIC X(105).
              05 WSS-SPVE                             PIC 9(04).
              05 WSS-UTPV                             PIC X(01).
              05 WSS-SEVE                             PIC 9(04).
              05 WSS-UTSV                             PIC X(01).
              05 WSS-VIGU                             PIC 9(03).
              05 WSS-FPVC.
                 07 WSS-SPVC                          PIC 9(02).
                 07 WSS-APVC                          PIC 9(02).
                 07 WSS-MPVC                          PIC 9(02).
                 07 WSS-DPVC                          PIC 9(02).
              05 WSS-FFPV.
                 07 WSS-SFPV                          PIC 9(02).
                 07 WSS-AFPV                          PIC 9(02).
                 07 WSS-MFPV                          PIC 9(02).
                 07 WSS-DFPV                          PIC 9(02).
              05 WSS-DVEN                             PIC 9(02).
           03 WSS-LEFO            VALUE 1             PIC 9(02).
           03 WSS-MEFO            VALUE 1             PIC 9(02).
           03 WSS-FAVC.
              05 WSS-SAVC                             PIC 9(02).
              05 WSS-AAVC                             PIC 9(02).
              05 WSS-MAVC                             PIC 9(02).
              05 WSS-DAVC                             PIC 9(02).
           03 WSS-FMVC.
              05 WSS-SMVC                             PIC 9(02).
              05 WSS-AMVC                             PIC 9(02).
              05 WSS-MMVC                             PIC 9(02).
              05 WSS-DMVC                             PIC 9(02).
           03 WSS-IMVC                                PIC 9(02).
           03 WSS-VAL-TEVC        COMP-3              PIC 9(11)V9(05).
           03 WSS-IETB            VALUE SPACES        PIC X(01).
           03 WSS-PESO            VALUE ' '           PIC X(01).
              88 WSS-PESO-SI      VALUE 'S'.
              88 WSS-PESO-NO      VALUE 'N'.
           03 WSS-VAL-SCYA        COMP-3              PIC 9(11)V9(05).
           03 WSS-CVI-TCAP        COMP-3              PIC 9(11)V9(05).
           03 WSS-CVI-IDNI        COMP-3              PIC 9(11)V9(04).
           03 WSS-I                                   PIC 9(02).
           03 WSS-VCVC OCCURS 10.
              05 WSS-BCCR                             PIC X(01).
              05 WSS-VICR                             PIC X(01).
      *RVM-ADA-INI 04.06.2002
           03 WSS-DATA-OPD-OKS                        PIC X(01).
      *RVM-ADA-FIN 04.06.2002
      *JCT-INI 09-JUL-2012 DPM FUNCIONALIDAD DOF OPERACIONES>450UF
       77  WSS-AVISO-DOF-MTI    VALUE 'N'             PIC X(01).
       01  WSS-VARI-DOF.
           03 WSS-VAL-CAMB   VALUE ZEROES     PIC 9(08)V9(05).
           03 WSS-MTO-CAPT   VALUE ZEROES     PIC 9(11)V9(04).
           03 WSS-CLI-HAB                     PIC X(01).
           03 WSS-FEC-FPAR.
              05 WSS-NUM-SPAR                       PIC 9(02).
              05 WSS-NUM-APAR                       PIC 9(02).
              05 WSS-NUM-MPAR                       PIC 9(02).
              05 WSS-NUM-DPAR                       PIC 9(02).
           03 WSS-HHOY                         PIC 9(06).
           03 WSS-HHOY-RED REDEFINES WSS-HHOY.
              07 WSS-HHHY                      PIC 9(02).
              07 WSS-MMHY                      PIC 9(02).
              07 WSS-SSHY                      PIC 9(02).
           03 WSS-FEC-PROC-3.
              05 WSS-NUM-SPRO-3                     PIC 9(02).
              05 WSS-NUM-APRO-3                     PIC 9(02).
              05 WSS-NUM-MPRO-3                     PIC 9(02).
              05 WSS-NUM-DPRO-3                     PIC 9(02).
           03 WSS-FEC-PROC.
              05 WSS-NUM-SPRO                       PIC 9(02).
              05 WSS-NUM-APRO                       PIC 9(02).
              05 WSS-NUM-MPRO                       PIC 9(02).
              05 WSS-NUM-DPRO                       PIC 9(02).
           03 WSS-CIC-IOPD.
              05 WSS-CAI-IOPD                       PIC X(04).
              05 WSS-IIC-IOPD                       PIC X(08).
           03 WSS-COD-ICLA                          PIC X(01).
      *JCT-FIN 09-JUL-2012
      *CIMA-INI 17-ABR-2014 CORRECCION INCIDENDTES DAP HITO 3
           03 WSS-CTES.
              05 WSS-GLS-RDLO VALUE 'RDLTRDFNODPF'  PIC X(12).
              05 WSS-GLS-RDLV VALUE 'RDLNRDFSFVEN'  PIC X(12).
              05 WSS-CTE-DAP  VALUE 'DAP'           PIC X(03).
              05 WSS-CTE-RDL  VALUE 'RDL'           PIC X(03).
              05 WSS-CTE-TODO VALUE 'TODO'          PIC X(04).

      *CIMA-FIN 17-ABR-2014 CORRECCION INCIDENDTES DAP HITO 3
      *CIMA-INI 20-OCT-2014 CORRECCION INCIDENTES DAP GRUPO 1 HITO 2
           03 WSS-NUM-TASA            PIC --.---.---.--9,9999.
           03 WSS-NUM-VALO            PIC --.---.---.--9,9999.
           03 WSS-CT-RDL   VALUE 'RDL'              PIC X(03).
           03 WSS-CT-M     VALUE 'M'                PIC X(01).
           03 WSS-CT-ANT   VALUE 'ANT'              PIC X(03).
           03 WSS-CT-DES   VALUE 'DES'              PIC X(03).
           03 WSS-CT-1     VALUE 1                  PIC 9(01).
           03 WSS-CT-2     VALUE 2                  PIC 9(01).
           03 WSS-CT-VERS  VALUE '1.0'              PIC X(03).
           03 WSS-CT-OPD   VALUE 'OPD'              PIC X(03).
      *CIMA-FIN 20-OCT-2014 CORRECCION INCIDENTES DAP GRUPO 1 HITO 2
      *CIMA-INI 26-ENE-2015 CUSTODIA DAP - IMPRESION
           03 WSS-CT-CDE   VALUE 'CDE'              PIC X(03).
           03 WSS-CT-MNEX  VALUE 'COD    NEX'       PIC X(10).
      *CIMA-FIN 26-ENE-2015 CUSTODIA DAP - IMPRESION
      *CIMA-INI 12-JUN-2015 MEJORAS SERVICIOS DAP
           03 WSS-CT-100   VALUE '100'              PIC X(03).
           03 WSS-CT-110   VALUE '110'              PIC X(03).
      *CIMA-FIN 12-JUN-2015 MEJORAS SERVICIOS DAP
       COPY GNSWGCVI.
      *
      *<<<< FIN_WSS_FO
      * ISP: VARIABLES WSS-PTD
       COPY DAPWG004.
      * DAPR0021-INI(ISP)  1-FEB-2000
       01 WSS-NUM-TERM                                PIC 9(04).
      * DAPR0021-FIN(ISP)  1-FEB-2000

       01  WSS-MCAD.
      * Codigo de mensaje
           03 WSS-MCAD-CMSG       VALUE SPACES        PIC X(40).
      * Total multiples CAD en cero (a lo mas uno)
           03 WSS-NUM-MCAD-TZER   VALUE ZEROES        PIC 9(02).
      * Suma de montos CAD abonos
           03 WSS-NUM-MCAD-TCAD   VALUE ZEROES        PIC S9(11)V9(04).
      * Monto CAD en la moneda
           03 WSS-NUM-MCAD-MONE   VALUE ZEROES        PIC S9(11)V9(04).
      * Monto CAD en la pesos
           03 WSS-NUM-MCAD-PESO   VALUE ZEROES        PIC S9(11).
      * @ Hay abonos grabados?
           03 WSS-MCAD-LIQ-IAL    VALUE 'NO'          PIC X(02).
      * @ Hay abonos CAJA?
           03 WSS-MCAD-LIQ-CAJA   VALUE 'NO'          PIC X(02).
      * @ Hay abonos CTBL?
           03 WSS-MCAD-LIQ-CTBL   VALUE 'NO'          PIC X(02).
      * @ Hay abonos PROF?
           03 WSS-MCAD-LIQ-PROF   VALUE 'NO'          PIC X(02).
      * ? Hay abonos CCMA?
           03 WSS-MCAD-LIQ-CCMA   VALUE 'NO'          PIC X(02).
      * Monto de abono a cta cte
           03 WSS-MCAD-CCTE       VALUE ZEROES        PIC S9(11)V9(04).
      * Monto de abono a caja
           03 WSS-MCAD-CAJA       VALUE ZEROES        PIC S9(11)V9(04).
      * Identificacion de CAD con codigo CCMA
           03 WSS-KEY-CCMA-MCAD   VALUE SPACES.
              05 WSS-CAI-CCMA-MCAD                    PIC X(04).
              05 WSS-IIC-CCMA-MCAD                    PIC X(08).
              05 WSS-NUM-CCMA-MCAD                    PIC X(01).
      * Identificacion de CAD con CERO
           03 WSS-KEY-ZERO-MCAD   VALUE SPACES.
              05 WSS-CAI-ZERO-MCAD                    PIC X(04).
              05 WSS-IIC-ZERO-MCAD                    PIC X(08).
              05 WSS-NUM-ZERO-MCAD                    PIC X(01).

      *>>>> WSS
      *<<<< WSS_DTC
      *Entidades de GNS
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-CIC-REQA==.
      *Entidades de TAB
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-CAM-REQA==.
      *Entidades de SGC
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-DBC-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-DCC-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-DCP-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-RCD-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-OPE-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-RCO-REQA==.
      *Entidades de DAP
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-LIQ-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-LIC-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-CAD-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-AUT-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-POD-REQA==.
      *COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-CPD-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-RCC-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-VEN-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-IMP-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-PTD-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-JNL-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-STA-REQA==.
      *>>>>
       01 PGM-VARI.
          03 PGM-ICLR                  VALUE ' '      PIC X(01).
          03 PGM-LIMPIAR-TODO          VALUE ' '      PIC X(01).
          03 PGM-LIMPIAR-LLAVES        VALUE 'K'      PIC X(01).
          03 PGM-LIMPIAR-CAMPOS        VALUE 'F'      PIC X(01).
          03 PGM-NO-LIMPIAR-NADA       VALUE 'N'      PIC X(01).
          03 PGM-PROG                                 PIC X(08).
          03 PGM-NTRN                                 PIC X(04).
          03 PGM-STAT.
             05 PGM-STAT-OPD.
                88 PGM-STAT-OPD-NUL    VALUE '  '.
                07 PGM-STT1-OPD        VALUE '2'      PIC X(01).
                   88 PGM-STAT-OPD-OKS VALUE '0'.
                07 PGM-STT2-OPD        VALUE '3'      PIC X(01).
             05 PGM-STAT-RCC.
                88 PGM-STAT-RCC-NUL    VALUE '  '.
                07 PGM-STT1-RCC        VALUE '2'      PIC X(01).
                   88 PGM-STAT-RCC-OKS VALUE '0'.
                07 PGM-STT2-RCC        VALUE '3'      PIC X(01).
             05 PGM-STAT-CAD.
                88 PGM-STAT-CAD-NUL    VALUE '  '.
                07 PGM-STT1-CAD        VALUE '2'      PIC X(01).
                   88 PGM-STAT-CAD-OKS VALUE '0'.
                07 PGM-STT2-CAD        VALUE '3'      PIC X(01).
             05 PGM-STAT-DBC.
                88 PGM-STAT-DBC-NUL    VALUE '  '.
                07 PGM-STT1-DBC        VALUE '2'      PIC X(01).
                   88 PGM-STAT-DBC-OKS VALUE '0'.
                07 PGM-STT2-DBC        VALUE '3'      PIC X(01).
             05 PGM-STAT-DCC.
                88 PGM-STAT-DCC-NUL    VALUE '  '.
                07 PGM-STT1-DCC        VALUE '2'      PIC X(01).
                   88 PGM-STAT-DCC-OKS VALUE '0'.
                07 PGM-STT2-DCC        VALUE '3'      PIC X(01).
             05 PGM-STAT-RCD.
                88 PGM-STAT-RCD-NUL    VALUE '  '.
                07 PGM-STT1-RCD        VALUE '2'      PIC X(01).
                   88 PGM-STAT-RCD-OKS VALUE '0'.
                07 PGM-STT2-RCD        VALUE '3'      PIC X(01).
          03 PGM-SRNF                  VALUE '23'     PIC X(02).
          03 PGM-SOKS                  VALUE '00'     PIC X(02).
          03 PGM-SNUL                  VALUE '  '     PIC X(02).
          03 PGM-SUAR                  VALUE SPACES   PIC X(15).

       LINKAGE SECTION.
      *----------------
       01  DFHCOMMAREA.
           02 FILLER                                  PIC X(750).
      * DAPR0021-INI(ISP)  1-FEB-2000
      *<<<< BLLCELLS
       COPY DAPLGCCL.
      *>>>> BLLCELLS
      * DAPR0021-FIN(ISP)  1-FEB-2000

       PROCEDURE DIVISION.
      *===================
       MAIN SECTION.
       INI-MAIN.
           PERFORM INI.
       LUP-MAIN.
           IF SCR-INST = SCR-INST-HCM
                 PERFORM SCR-COM.
           IF SCR-CCPP = 'MOD'
                 PERFORM SCR-MOD
           ELSE
           IF SCR-CCPP = 'ING'
                 PERFORM SCR-ING
           ELSE
           IF SCR-CCPP = 'ACC'
                 PERFORM SCR-ACC
           ELSE
           IF SCR-CCPP = 'ELI'
                 PERFORM SCR-ELI
           ELSE
           IF SCR-CCPP = 'ACT'
                 PERFORM SCR-ACT
           ELSE
           IF SCR-CCPP = 'PGM'
                 PERFORM SCR-PGM
           ELSE
                 MOVE SCR-INST-HCM TO SCR-INST.
           GO TO LUP-MAIN.
       FIN-MAIN.
           EXIT.

       INI SECTION.
       INI-INI.
       COPY GNSBGEIB.
       COPY GNSBGEDB.
           MOVE LOW-VALUES TO OPD-FLD.
           MOVE LOW-VALUES TO OPD-EDT.
           PERFORM GNS-PRO-RCK.
      * PTC-INI-AUT
           PERFORM GNS-ERR-QUE.
           PERFORM GET-TSK-TERM.
      * PTC-FIN-AUT
           PERFORM GNS-BUS-VCA.
           MOVE +750 TO SCR-TCMA.
           PERFORM GNS-HDL-SYS.
           PERFORM GNS-HDL-FRM.
           MOVE 'DAPPUOP2' TO FIO-PROG.
           PERFORM GNS-BUS-IDD.
      *<<<< INI_FIO
      *<<<< PGM_PU
      * ISP-INI 31-07-1998 INICIALIZA CAMPOS DE REGISTROS
           PERFORM CLR-REG-AUT.
           PERFORM CLR-REG-CAD.
           PERFORM CLR-REG-IMP.
           PERFORM CLR-REG-JNL.
           PERFORM CLR-REG-LIC.
           PERFORM CLR-REG-LIQ.
           PERFORM CLR-REG-OPD.
           PERFORM CLR-REG-RCC.
           PERFORM CLR-REG-VEN.
      * ISP-FIN 31-07-1998 INICIALIZA CAMPOS DE REGISTROS
           MOVE 'DAP' TO FIO-SIST.
           MOVE 'VSN' TO TAB-COD-TTAB IN TAB.
           MOVE 'CNAL' TO TAB-COD-CTAB IN TAB.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM GNS-FIO-TAB.
           IF FIO-STAT-OKS
      * INDICA GRABA LOG MC2 EN TSS
      * P-cpt-m-cy-t
      *
      * P     = fijo
      * cpt   = "INT","PPC"
      * m     = "I",O"
      * cy    = "BU","PU"
      * T     = "U","M"

               MOVE TAB-GLS-DCOR TO WSS-LOG-MC2.

           IF FIO-STAT-OKS AND TAB-IND-VIGE IN TAB = 'S'
               MOVE TAB-GLS-DESC TO SCR-CNAL
               MOVE TAB-GLS-ABRV TO SCR-MODO.

      *OGB-INI 13-ENE-2017 BALANCE OPTIMO DAP
           MOVE SCR-CNAL TO WSS-CXS-DAP-CNAL.
           PERFORM CNX-CNN.
      *OGB-FIN 13-ENE-2017 BALANCE OPTIMO DAP

           MOVE 'DAP' TO FIO-SIST.
           MOVE 'VSN' TO TAB-COD-TTAB IN TAB.
           MOVE 'PF4150' TO TAB-COD-CTAB IN TAB.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM GNS-FIO-TAB.
           IF FIO-STAT-OKS AND TAB-IND-VIGE IN TAB = 'S'
               MOVE 'S' TO WSS-PF4150.

           PERFORM GET-FHOY.

      *AFRI-FIN 13-ABR-2011 INTEGRACION MC2
      *CIMA-INI 27-MAY-2016 INCONSISTENCIA PLAZO DAP WEB UF
           PERFORM CARGA-TAB-PZO.
           IF PLZ-COD-MENS IN PLZ-VARI > SPACES
               MOVE PLZ-COD-MENS IN PLZ-VARI TO MSG-COD-MENS
               MOVE 'DAP' TO MSG-COD-SIST
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS.
      *CIMA-FIN 27-MAY-2016 INCONSISTENCIA PLAZO DAP WEB UF
      *>>>>
      *>>>> INI_FIO
       FIN-INI.
           EXIT.

       COPY GNSBHSYS.
       COPY GNSBHFRM.
       COPY GNSBPRCK.
       COPY GNSBBVCA.
       COPY GNSBBIDD.

       SCR-COM SECTION.
       INI-SCR-COM.
           PERFORM STP-EXIT.
           MOVE FRM-CPSF-AEY TO FRM-CPIM-AEY.
           PERFORM PRO-ALL.
           PERFORM SCR-CLRA-OPD.
           PERFORM EDT-KEY-OPD.
           PERFORM EDT-FLD-OPD.
           PERFORM SCR-PUTA.
           MOVE SCR-INST-HCM TO SCR-INST.
           MOVE SCR-CMNP     TO SYS-PROG.
           MOVE SCR-VARI     TO SYS-CMMA.
           MOVE SCR-TCMA     TO SYS-TCMA.
           MOVE SYS-XCTL     TO SYS-CMND.
      * PTC-INI-AUT
           IF NOT SCR-OFRM-SRV
      * PTC-FIN-AUT
           PERFORM GNS-PRO-SYS.
       XCT-ERR.
           MOVE 'XCTERR    ' TO MSG-COD-MENS.
           MOVE 'GNS'        TO MSG-COD-SIST.
           PERFORM GET-MSG.
           MOVE MSG-GLS-DESC TO SYS-MEN1.
           MOVE SYS-PROG     TO SYS-MEN2.
           MOVE SYS-ABOR     TO SYS-CMND.
      * PTC-INI-AUT
           IF NOT SCR-OFRM-SRV
      * PTC-FIN-AUT
           PERFORM GNS-PRO-SYS.
       COPY GNSBGGBK.
       FIN-SCR-COM.
           EXIT.

       SCR-MOD SECTION.
       INI-SCR-MOD.
           IF SCR-INST = SCR-INST-HKY
               PERFORM HBL-KEY
               MOVE SCR-INST-GKY TO SCR-INST
               PERFORM SCR-DMSG
           ELSE
           IF SCR-INST = SCR-INST-GFL
               PERFORM GET-FLD
           ELSE
           IF SCR-INST = SCR-INST-GCS
               PERFORM GET-ACC.
           PERFORM DESSCRTRL.
           IF FRM-FFLD = FRM-FFLD-PF7 OR FRM-FFLD-PF8
               PERFORM XCT-PRGP.
           IF NOT (FRM-FFLD = FRM-FFLD-PF5 OR FRM-FFLD-PF6)
               GO TO MSG-SCR-MOD.
       MSG-SCR-MOD.
           IF SCR-STAT = SCR-STAT-CON
               MOVE SPACES TO FRM-MENS
           ELSE
           IF SCR-STAT = SCR-STAT-ABT OR SCR-VFLD = SCR-VFLD-NOT
               MOVE 'MODNOT    ' TO MSG-COD-MENS
               MOVE 'GNS' TO MSG-COD-SIST
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS
           ELSE
               MOVE SPACES TO FRM-MENS
               PERFORM CMN-MOD
               IF FIO-STAT-OKS
                   IF FRM-MEN1 NOT > SPACES
                       MOVE 'MODYES    ' TO MSG-COD-MENS
                       MOVE 'GNS' TO MSG-COD-SIST
                       PERFORM GET-MSG
                       MOVE MSG-GLS-DESC TO FRM-MEN1
                   ELSE
                       NEXT SENTENCE
               ELSE
               IF FRM-MENS NOT > SPACES
                   MOVE 'FIOSTAT' TO MSG-COD-TMSG
                   MOVE FIO-STAT  TO MSG-COD-CMSG
                   MOVE 'GNS'     TO MSG-COD-SIST
                   PERFORM GET-MSG
                   MOVE MSG-GLS-DESC TO FRM-MENS.
           PERFORM SCR-MSSG.
       FIN-SCR-MOD.
           EXIT.

       SCR-ING SECTION.
       INI-SCR-ING.
           IF SCR-INST = SCR-INST-HKY
               PERFORM HBL-IKY
               MOVE SCR-INST-GKY TO SCR-INST
      * PTC-INI-AUT
               IF NOT SCR-OFRM-SRV
                   PERFORM SCR-DMSG
               ELSE
                   PERFORM EDT-KEY-OPD
                   PERFORM EDT-FLD-OPD
                   PERFORM SCR-PUTA
      * PTC-FIN-AUT
           ELSE
           IF SCR-INST = SCR-INST-GFL
                PERFORM GET-FLD
           ELSE
           IF SCR-INST = SCR-INST-GCS
                PERFORM GET-ACC.
           PERFORM DESSCRTRL.
       MSG-SCR-ING.
           IF SCR-STAT = SCR-STAT-CON
               MOVE SPACES TO FRM-MENS
           ELSE
           IF SCR-STAT = SCR-STAT-ABT OR SCR-VFLD = SCR-VFLD-NOT
               MOVE 'INGNOT    ' TO MSG-COD-MENS
               MOVE 'GNS' TO MSG-COD-SIST
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS
           ELSE
               MOVE SPACES TO FRM-MENS
               PERFORM CMN-ING
               IF FIO-STAT-OKS
                   IF FRM-MEN1 NOT > SPACES
                       MOVE 'INGYES    ' TO MSG-COD-MENS
                       MOVE 'GNS' TO MSG-COD-SIST
                       PERFORM GET-MSG
                       MOVE MSG-GLS-DESC TO FRM-MEN1
                   ELSE
                       NEXT SENTENCE
               ELSE
               IF FRM-MENS NOT > SPACES
                   MOVE 'FIOSTAT' TO MSG-COD-TMSG
                   MOVE FIO-STAT  TO MSG-COD-CMSG
                   MOVE 'GNS'     TO MSG-COD-SIST
                   PERFORM GET-MSG
                   MOVE MSG-GLS-DESC TO FRM-MENS.
           PERFORM SCR-MSSG.
       FIN-SCR-ING.
           EXIT.

       SCR-ACC SECTION.
       INI-SCR-ACC.
           IF SCR-INST = SCR-INST-HKY
               PERFORM HBL-KEY
               MOVE SCR-INST-GKY TO SCR-INST
               PERFORM SCR-DMSG
           ELSE
           IF SCR-INST = SCR-INST-GFL
                PERFORM GET-FLD
           ELSE
           IF SCR-INST = SCR-INST-GCS
                PERFORM GET-ACC.
           PERFORM DESSCRTRL.
           IF FRM-FFLD = FRM-FFLD-PF7 OR FRM-FFLD-PF8 OR
                         FRM-FFLD-PF5 OR FRM-FFLD-PF6
               PERFORM XCT-PRGP.
           MOVE SPACES TO FRM-MENS.
           IF SCR-STAT NOT = SCR-STAT-CON
               PERFORM CMN-ACC.
           PERFORM SCR-MSSG.
       FIN-SCR-ACC.
           EXIT.

       SCR-ELI SECTION.
       INI-SCR-ELI.
           IF SCR-INST = SCR-INST-HKY
               PERFORM HBL-KEY
               MOVE SCR-INST-GKY TO SCR-INST
               PERFORM SCR-DMSG
           ELSE
           IF SCR-INST = SCR-INST-GCS
                PERFORM GET-ACC.
           PERFORM DESSCRTRL.
           IF FRM-FFLD = FRM-FFLD-PF7 OR FRM-FFLD-PF8 OR
                         FRM-FFLD-PF5 OR FRM-FFLD-PF6
               PERFORM XCT-PRGP.
           IF SCR-STAT = SCR-STAT-CON
               MOVE SPACES TO FRM-MENS
           ELSE
           IF SCR-STAT = SCR-STAT-ABT OR SCR-VFLD = SCR-VFLD-NOT
               MOVE 'ELINOT    ' TO MSG-COD-MENS
               MOVE 'GNS' TO MSG-COD-SIST
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS
           ELSE
               MOVE SPACES TO FRM-MENS
               PERFORM CMN-ELI
               IF FIO-STAT-OKS
                   IF FRM-MEN1 NOT > SPACES
                       MOVE 'ELIYES    ' TO MSG-COD-MENS
                       MOVE 'GNS' TO MSG-COD-SIST
                       PERFORM GET-MSG
                       MOVE MSG-GLS-DESC TO FRM-MEN1
                   ELSE
                       NEXT SENTENCE
               ELSE
               IF FRM-MENS NOT > SPACES
                   MOVE 'FIOSTAT' TO MSG-COD-TMSG
                   MOVE FIO-STAT  TO MSG-COD-CMSG
                   MOVE 'GNS'     TO MSG-COD-SIST
                   PERFORM GET-MSG
                   MOVE MSG-GLS-DESC TO FRM-MENS.
           PERFORM SCR-MSSG.
       FIN-SCR-ELI.
           EXIT.

       SCR-ACT SECTION.
       INI-SCR-ACT.
           IF SCR-INST = SCR-INST-HKY
               PERFORM HBL-KEY
               MOVE SCR-INST-GKY TO SCR-INST
               PERFORM SCR-DMSG
           ELSE
           IF SCR-INST = SCR-INST-GFL
                PERFORM GET-FLD
           ELSE
           IF SCR-INST = SCR-INST-GCS
                PERFORM GET-ACC.
           PERFORM DESSCRTRL.
           IF (FRM-FFLD = FRM-FFLD-PF7 OR FRM-FFLD-PF8  OR
                          FRM-FFLD-PF5 OR FRM-FFLD-PF6) AND
              SCR-ACTU = SCR-ACTU-MOD
               PERFORM XCT-PRGP.
           IF SCR-ACTU = SCR-ACTU-MOD
              PERFORM MSG-SCR-MOD
           ELSE
              PERFORM MSG-SCR-ING.
       FIN-SCR-ACT.
           EXIT.

       SCR-PGM SECTION.
       INI-SCR-PGM.
           IF SCR-INST = SCR-INST-HKY
               PERFORM HBL-KEY
               MOVE SCR-INST-GKY TO SCR-INST
               PERFORM SCR-DMSG
           ELSE
           IF SCR-INST = SCR-INST-GFL
                PERFORM GET-FLD
           ELSE
           IF SCR-INST = SCR-INST-GCS
                PERFORM GET-ACC.
       TRL-SCR-PGM.
           PERFORM DESSCRTRL.
           IF FRM-FFLD = FRM-FFLD-PF7 OR FRM-FFLD-PF8 OR
                         FRM-FFLD-PF5 OR FRM-FFLD-PF6
               PERFORM XCT-PRGP.
           MOVE SPACES TO FRM-MENS.
           IF SCR-STAT NOT = SCR-STAT-CON
               PERFORM CMN-PGM.
           PERFORM SCR-MSSG.
       FIN-SCR-PGM.
           EXIT.

       SCR-DMSG SECTION.
       INI-SCR-DMSG.
           IF PGM-ICLR = PGM-NO-LIMPIAR-NADA
               NEXT SENTENCE
           ELSE
           IF PGM-ICLR = PGM-LIMPIAR-TODO
               PERFORM SCR-CLRA-OPD
               PERFORM EDT-KEY-OPD
               PERFORM EDT-FLD-OPD
           ELSE
           IF PGM-ICLR = PGM-LIMPIAR-LLAVES
               PERFORM CLR-KEY-OPD
               PERFORM EDT-KEY-OPD
           ELSE
               PERFORM CLR-FLD-OPD
               PERFORM EDT-FLD-OPD.
           PERFORM STP-EXIT.
           PERFORM SCR-PUTA.
           PERFORM SCR-EXIT.
       FIN-SCR-DMSG.
           EXIT.

       XCT-PRGP SECTION.
       INI-XCT-PRGP.
           MOVE SCR-INST-BRW TO SCR-INST.
           PERFORM STP-EXIT.
           MOVE FRM-FFLD   TO SCR-FFLD.
      *
           MOVE SCR-PROG     TO SYS-PROG.
           MOVE SCR-VARI     TO SYS-CMMA.
           MOVE SCR-TCMA     TO SYS-TCMA.
           MOVE SYS-XCTL     TO SYS-CMND.
      * PTC-INI-AUT
           IF NOT SCR-OFRM-SRV
      * PTC-FIN-AUT
           PERFORM GNS-PRO-SYS.
           PERFORM XCT-ERR.
       FIN-XCT-PRGP.
           EXIT.

       SCR-RST SECTION.
       INI-SCR-RST.
           MOVE SPACES       TO PGM-ICLR.
           MOVE SPACES       TO SCR-ACTU.
           MOVE SCR-STPP     TO SCR-STAT.
           MOVE SCR-MFLD-NOT TO SCR-MFLD.
           MOVE LOW-VALUES   TO OPD-FLD.
       FIN-SCR-RST.
           EXIT.

       GET-FLD SECTION.
       INI-GET-FLD.
           PERFORM SCR-GFLD.
           IF FRM-STAT-ABT
               MOVE SCR-STAT-ABT TO SCR-STAT.
       FIN-GET-FLD.
           EXIT.

       CMN-MOD SECTION.
       INI-CMN-MOD.


           MOVE 'DAP' TO FIO-SIST.
           MOVE 'VSN' TO TAB-COD-TTAB IN TAB.
           MOVE 'WAIT' TO TAB-COD-CTAB IN TAB.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM GNS-FIO-TAB.
           IF FIO-STAT-OKS AND TAB-IND-VIGE IN TAB = 'S'
               MOVE TAB-GLS-ABRV IN TAB TO WSS-WAIT-TOTS
               MOVE TAB-GLS-DCOR IN TAB TO WSS-WAIT-PASO
               MOVE TAB-GLS-DATA IN TAB TO WSS-WAIT-TRAN.

           MOVE OPD-CAI-IOPD IN OPD-FLD TO LIQ-CAI-IOPD IN LIQ.
           MOVE OPD-IIC-IOPD IN OPD-FLD TO LIQ-IIC-IOPD IN LIQ.
           MOVE WSS-CTE-1               TO LIQ-NUM-ILIQ IN LIQ.

           MOVE ZEROES TO WSS-WAIT-CONT.
       CIC-WAIT-PASO-03.

           IF WSS-WAIT-TRAN NOT = '*' AND
              WSS-WAIT-TRAN NOT = EIBTRNID
               GO TO END-WAIT-PASO-03.

           IF WSS-WAIT-PASO NOT = 'PASO-PU-03'
               GO TO END-WAIT-PASO-03.

           IF WSS-WAIT-CONT NOT < WSS-WAIT-TOTS
               GO TO END-WAIT-PASO-03.

           EXEC CICS DELAY INTERVAL(000001)
           END-EXEC.
           ADD 1 TO WSS-WAIT-CONT.
           GO TO CIC-WAIT-PASO-03.
       END-WAIT-PASO-03.

           MOVE FIO-GET-KEY-UPD TO FIO-CMND.
           PERFORM DAP-FIO-LIQ.



           MOVE ZEROES TO WSS-WAIT-CONT.
       CIC-WAIT-PASO-04.

           IF WSS-WAIT-TRAN NOT = '*' AND
              WSS-WAIT-TRAN NOT = EIBTRNID
               GO TO END-WAIT-PASO-04.

           IF WSS-WAIT-PASO NOT = 'PASO-PU-04'
               GO TO END-WAIT-PASO-04.

           IF WSS-WAIT-CONT NOT < WSS-WAIT-TOTS
               GO TO END-WAIT-PASO-04.

           EXEC CICS DELAY INTERVAL(000001)
           END-EXEC.
           ADD 1 TO WSS-WAIT-CONT.
           GO TO CIC-WAIT-PASO-04.
       END-WAIT-PASO-04.



      * Detecta LIQ 'RX' futura, es decir debe procesar etapa 2
           IF FIO-STAT-OKS
              MOVE WSS-CTE-LIQ-UPD-YES TO WSS-IND-LIQ-UPD

              MOVE WSS-CTE-E-LIQ-SI TO WSS-IND-E-LIQ

              IF OPD-CAI-IOPD IN OPD-FLD = LIQ-CAI-IOPD IN LIQ AND
                 OPD-IIC-IOPD IN OPD-FLD = LIQ-IIC-IOPD IN LIQ AND
                 LIQ-GLS-DISP IN LIQ = WSS-CTE-L2-L2           AND
                 LIQ-COD-LIQU IN LIQ = WSS-CTE-RX
                   MOVE WSS-CTE-L-2PASO-P1 TO WSS-IND-L-2PASO
                       MOVE LIQ-CIC-IOPD IN LIQ TO
                            CAD-CIC-IOPD IN CAD
                       MOVE LIQ-NUM-ILIQ IN LIQ TO
                            CAD-NUM-ILIQ IN CAD
                       MOVE WSS-CTE-1       TO
                            CAD-NUM-ICAD IN CAD
                       MOVE FIO-GET-KEY-UPD TO FIO-CMND
                       PERFORM DAP-FIO-CAD

              ELSE
                   MOVE WSS-CTE-L-2PASO-P2 TO WSS-IND-L-2PASO.


      * RLR SIN LIQUIDACION 'RX' ni 'LT' ==>> ERROR

           IF SCR-CMND = WSS-CTE-RLR           AND
              WSS-IND-E-LIQ = WSS-CTE-E-LIQ-NO
                MOVE '110RLRERR05' TO MSG-COD-MENS
                PERFORM MSG-DAP
                MOVE 'S' TO SCR-IERR
                GO TO FIN-CMN-MOD.

      * RDL CON LIQ EN PASO 2 ERROR
           IF SCR-CMND = WSS-CTE-RDL           AND
              WSS-IND-E-LIQ = WSS-CTE-E-LIQ-SI AND
              WSS-IND-L-2PASO = WSS-CTE-L-2PASO-P2
                MOVE '110RLRERR06' TO MSG-COD-MENS
                PERFORM MSG-DAP
                MOVE 'S' TO SCR-IERR
                GO TO FIN-CMN-MOD.

      * RLR con LIQ en P1, Borra LIQ y CAD

           IF SCR-CMND = WSS-CTE-RLR           AND
              WSS-IND-E-LIQ = WSS-CTE-E-LIQ-SI AND
              WSS-IND-L-2PASO = WSS-CTE-L-2PASO-P1

                   MOVE FIO-DEL TO FIO-CMND
                   PERFORM DAP-FIO-LIQ

                   IF NOT FIO-STAT-OKS
                       MOVE '110RLRERR02' TO MSG-COD-MENS
                       PERFORM MSG-DAP
                       MOVE 'S' TO SCR-IERR
                       GO TO FIN-CMN-MOD
                  ELSE
      *                MOVE LIQ-CIC-IOPD IN LIQ TO
      *                     CAD-CIC-IOPD IN CAD
      *                MOVE LIQ-NUM-ILIQ IN LIQ TO
      *                      CAD-NUM-ILIQ IN CAD
      *                 MOVE 1                   TO
      *                      CAD-NUM-ICAD IN CAD
      *                 MOVE FIO-GET-KEY-UPD TO FIO-CMND
      *                 PERFORM DAP-FIO-CAD


                       IF FIO-STAT-OKS
                            MOVE FIO-DEL TO FIO-CMND
                            PERFORM DAP-FIO-CAD
                            MOVE WSS-CTE-LIQ-UPD-NOT TO WSS-IND-LIQ-UPD
                            MOVE '110RLROKS01' TO MSG-COD-MENS
                            PERFORM MSG-DAP

                            GO TO FIN-CMN-MOD
                       ELSE
                            MOVE WSS-CTE-00 TO FIO-STAT
                            GO TO FIN-CMN-MOD.

      * RDL SIN LIQ ==>> Genera LIQ PASO P1
           IF SCR-CMND = WSS-CTE-RDL AND
              WSS-IND-E-LIQ = WSS-CTE-E-LIQ-NO
                PERFORM GEN-LIQ-RDL
                 GO TO FIN-CMN-MOD.

           PERFORM LEE-CLI.

           PERFORM KEY-ALL-OPD.

      * FIN-ISP-INI 19-nOV-2018 1811_04 Liquidacion WEB
           PERFORM KEY-ALL-OPD.
           MOVE FIO-GET-KEY-UPD TO FIO-CMND.
           PERFORM DAP-FIO-OPD.
           IF FIO-STAT-OKS AND SCR-CMND NOT = WSS-CTE-RLR AND
              OPD-STP-ITRN IN OPD NOT = SCR-UMOD
               MOVE FIO-ULK-REC TO FIO-CMND
               PERFORM DAP-FIO-OPD
               MOVE FIO-BCK-OUT TO FIO-CMND
               PERFORM DAP-FIO-OPD
               MOVE 'GNS' TO MSG-COD-SIST
               MOVE 'GNSACCSSIMUL' TO MSG-COD-MENS
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS
               MOVE 'S' TO SCR-IERR
               GO TO FIN-CMN-MOD.


           MOVE ZEROES TO WSS-WAIT-CONT.
       CIC-WAIT-PASO-05.

           IF WSS-WAIT-TRAN NOT = '*' AND
              WSS-WAIT-TRAN NOT = EIBTRNID
               GO TO END-WAIT-PASO-05.

           IF SCR-CMND = WSS-CTE-RLR
               GO TO END-WAIT-PASO-05.

           IF WSS-WAIT-PASO NOT = 'PASO-PU-05'
               GO TO END-WAIT-PASO-05.

           IF WSS-WAIT-CONT NOT < WSS-WAIT-TOTS
               GO TO END-WAIT-PASO-05.

           EXEC CICS DELAY INTERVAL(000001)
           END-EXEC.
           ADD 1 TO WSS-WAIT-CONT.
           GO TO CIC-WAIT-PASO-05.
       END-WAIT-PASO-05.




       OP4-LEE-OPD-OK.

           IF NOT FIO-STAT-OKS

                GO TO FIN-CMN-MOD.
      *<<<< CMN_MOD_RET

           IF SCR-CMND = 'RLR'
               PERFORM KEY-LIQ-RDL.

           PERFORM GET-WSS-VAL-CAPT.
           PERFORM HDR-OPD.

           IF SCR-CMND = 'MOD' OR 'RDL'
               MOVE SCR-SGV-TPER TO OPD-VAL-SINT IN OPD.

      *    MOVE OPD-VAL-CAPT IN OPD-FLD TO OPD-VAL-SCAP IN OPD.
           MOVE OPD-FEC-FREA IN OPD     TO OPD-FEC-FDEV IN OPD.

           PERFORM GET-UPD-VEN.
           IF PGM-STAT-VEN-OKS
               PERFORM RET-VEN-OPD

               PERFORM MOD-VEN
               IF NOT FIO-STAT-OKS
                   GO TO FIN-CMN-MOD.

       NOT-MOD-MDA.


           IF SCR-CMND = 'RDL' AND
              OPD-VAL-CAPT IN OPD-FLD NOT > ZEROES
                MOVE 'L'    TO OPD-COD-STAT IN OPD-FLD
                IF FRM-CAI-ICAD IN OPD-FLD > SPACES OR
                   FRM-IIC-ICAD IN OPD-FLD > ZEROES
                      MOVE 'CAN' TO OPD-COD-SCTB IN OPD-FLD
                ELSE
                      NEXT SENTENCE
           ELSE
           IF SCR-CMND = 'RLR'
                MOVE 'VIG' TO OPD-COD-SCTB IN OPD-FLD
                MOVE 'G'   TO OPD-COD-STAT IN OPD-FLD.

           IF SCR-CMND = WSS-CT-RDL AND
              OPD-SGV-MPRE IN OPD-FLD NOT > ZEROES
                 PERFORM PUT-LND-ANT-RDL.
           PERFORM RET-ALL-OPD.


           IF SCR-CMND = 'RLR'
               MOVE VEN-VAL-CAPI IN VEN TO OPD-VAL-CAPT IN OPD
               MOVE VEN-VAL-CAPI IN VEN TO OPD-VAL-SCAP IN OPD
               MOVE LIQ-SGV-PESO IN LIQ TO OPD-VAL-IPES IN OPD.

           PERFORM VALIDA-DATA-OPD.
           IF WSS-DATA-OPD-OKS NOT = 'S'
               PERFORM BCK-OUT
               MOVE 'ERRDATAOPD  ' TO MSG-COD-MENS
               PERFORM MSG-DAP
               MOVE '23' TO FIO-STAT
               GO TO FIN-CMN-MOD
           END-IF.
           
      * ISP-INI 10-May-2019 1905_03 Liquidacion WEB
           IF SCR-CMND = 'RDL' AND
              OPD-SGV-MPRE IN OPD-FLD > ZEROES
                 MOVE ZEROES TO OPD-VAL-SCAP IN OPD.
      * ISP-FIN 10-May-2019 1905_03 Liquidacion WEB           

           MOVE FIO-MOD TO FIO-CMND.
           PERFORM DAP-FIO-OPD.

           MOVE FIO-STAT TO PGM-STAT-OPD.
           IF NOT FIO-STAT-OKS
      *        Error inconsistencia en la modificacion : informar
               MOVE FIO-MENS TO FRM-MENS
               GO TO FIN-CMN-MOD.


           IF SCR-CMND = WSS-CTE-RDL
                MOVE WSS-CTE-RCC-X TO WSS-IND-RCC.

           IF SCR-CMND = WSS-CTE-RLR
                MOVE SPACES        TO WSS-IND-RCC.

           PERFORM LIQ-RCC.


           IF SCR-CMND = WSS-CT-RDL AND
              OPD-SGV-MPRE IN OPD-FLD NOT > ZEROES
                 PERFORM PUT-LND-DES-RDL.

           IF SCR-CMND = 'RDL' AND
              OPD-SGV-MPRE IN OPD-FLD > ZEROES
                 PERFORM PRO-LIQ-RDL
           ELSE
           IF SCR-CMND = 'RLR'
                 PERFORM PRO-ELI-REG-LND
                 PERFORM PRO-LIQ-RLR.

           MOVE ZEROES TO WSS-WAIT-CONT.
       CIC-WAIT-PASO-06.

           IF WSS-WAIT-TRAN NOT = '*' AND
              WSS-WAIT-TRAN NOT = EIBTRNID
               GO TO END-WAIT-PASO-06.

           IF WSS-WAIT-PASO NOT = 'PASO-PU-06'
               GO TO END-WAIT-PASO-06.

           IF WSS-WAIT-CONT NOT < WSS-WAIT-TOTS
               GO TO END-WAIT-PASO-06.

           EXEC CICS DELAY INTERVAL(000001)
           END-EXEC.
           ADD 1 TO WSS-WAIT-CONT.
           GO TO CIC-WAIT-PASO-06.
       END-WAIT-PASO-06.



       FIN-CMN-MOD.
           EXIT.

       CMN-ING SECTION.
       INI-CMN-ING.
           MOVE SPACES TO OPD.
      *<<<< INI_CMN_ING
      *OGB-INI 13-ENE-2017 BALANCE OPTIMO DAP
           MOVE ZEROES TO OPD-SGV-SPRD IN OPD.
      *OGB-FIN 13-ENE-2017 BALANCE OPTIMO DAP
      *GET-CIC Obtener CIC
       CIC-GET-CIC.
           IF OPD-IIC-IOPD IN OPD-FLD > ZEROES
      *        INDICA QUE NO INVOCO A RUTINA OBTENCION CIC
               MOVE 'N' TO SCR-IND-OCIC
           ELSE
      *        INDICA QUE SI INVOCO A RUTINA OBTENCION CIC
               MOVE 'S' TO SCR-IND-OCIC
               MOVE '0710' TO CIC-CAI-ICIC IN CIC
               MOVE CIC-GET TO CIC-CMND
               PERFORM PRO-CIC
               IF CIC-STAT NOT = CIC-STAT-OKS
                   MOVE CIC-MENS TO FRM-MENS
                   MOVE FIO-STAT-NEX TO FIO-STAT
                   GO TO FIN-CMN-ING
               ELSE
                   MOVE CIC-CIC-ICIC TO OPD-CIC-IOPD IN OPD
                   MOVE FIO-GET-KEY TO FIO-CMND
                   PERFORM DAP-FIO-OPD
                   IF FIO-STAT-OKS
                       GO TO CIC-GET-CIC
                   ELSE
                       MOVE CIC-CAI-ICIC TO OPD-CAI-IOPD IN OPD-FLD
                       MOVE CIC-IIC-ICIC TO OPD-IIC-IOPD IN OPD-FLD.

           PERFORM HDR-OPD.
           PERFORM LEE-CLI.
           PERFORM CLR-CAD.
           PERFORM CLR-AUT.
           PERFORM CLR-RCC.
      *>>>> INI_CMN_ING
           PERFORM RET-ALL-OPD.
      *<<<< CMN_ING
           PERFORM GET-WSS-VAL-CAPT.

           IF SCR-IND-MCLI = 'M'
               MOVE 'S' TO OPD-IND-MCLI IN OPD
           ELSE
               MOVE 'N' TO OPD-IND-MCLI IN OPD.

           IF SCR-CMND = 'ODB'
               MOVE 'S' TO OPD-IND-IDIF IN OPD
           ELSE
               MOVE 'N' TO OPD-IND-IDIF IN OPD.

           IF SCR-IND-MCLI = 'M' OR
              CAD-IND-TCAD IN OPD-FLD = 'M'
                MOVE 'I' TO OPD-COD-STAT IN OPD
           ELSE
                IF OPD-IND-IDIF IN OPD = 'N'
                    MOVE 'A' TO OPD-COD-STAT IN OPD
                ELSE
                    MOVE 'G' TO OPD-COD-STAT IN OPD.

           MOVE SPACES                  TO OPD-GLS-FLAG IN OPD.
      * ISP:  16-NOV-1992
      *     MOVE ZEROES                  TO OPD-VAL-READ IN OPD.
           MOVE ZEROES                  TO OPD-VAL-INTD IN OPD.
      * JVM: AHORA SE GRABA TASA PERIODO
      *     MOVE ZEROES                  TO OPD-VAL-SINT IN OPD.
           MOVE OPD-VAL-CAPT IN OPD-FLD TO OPD-VAL-SCAP IN OPD
                                           OPD-VAL-READ IN OPD.
           MOVE ZEROES                  TO OPD-NUM-VSLQ IN OPD.
           MOVE FRM-NUM-TVEN IN OPD-FLD TO OPD-NUM-VNLQ IN OPD.
           MOVE 1                       TO OPD-NUM-IVEN IN OPD.
           MOVE ZEROES                  TO OPD-VAL-CAJA IN OPD.
           MOVE SPACES                  TO OPD-GLS-SAFE IN OPD.
           MOVE OPD-FEC-FREA IN OPD     TO OPD-FEC-FDEV IN OPD.
           MOVE OPD-FEC-FREA IN OPD     TO OPD-FEC-FPCO IN OPD.
      * DAPR0009-INI(RRM) 30-09-1999
           MOVE OPD-COD-CUST IN OPD TO OPD-COD-CUSO IN OPD.
      * DAPR0009-FIN(RRM) 30-09-1999
           IF OPD-COD-STAT IN OPD = 'G'
               MOVE 'VIG'  TO OPD-COD-SCTB IN OPD
           ELSE
               MOVE SPACES TO OPD-COD-SCTB IN OPD.
           MOVE SPACES                  TO OPD-CAI-GREN IN OPD.
           MOVE ZEROES                  TO OPD-IIC-GREN IN OPD.
      *    ACCESO A POD
           MOVE OPD-COD-VCAM IN OPD-FLD TO POD-COD-VCAM IN POD.
           MOVE OPD-COD-TOPD IN OPD-FLD TO POD-COD-TOPD IN POD.
           MOVE OPD-COD-AOPD IN OPD-FLD TO POD-COD-AOPD IN POD.
           MOVE ZEROES                  TO POD-NUM-IPOD IN POD.
           PERFORM GET-POD.
      *OGB-INI 13-ENE-2017 BALANCE OPTIMO DAP
           IF MSG-COD-MENS > SPACES
              GO TO FIN-CMN-ING.
      *OGB-FIN 13-ENE-2017 BALANCE OPTIMO DAP
      *    HERENCIA CAMPOS POD A OPD
           MOVE POD-COD-ENDO IN POD     TO OPD-COD-ENDO IN OPD.
           MOVE POD-COD-RENO IN POD     TO OPD-COD-RENO IN OPD.
           MOVE POD-COD-TINT IN POD     TO OPD-COD-TINT IN OPD.
           MOVE POD-COD-TCDP IN POD     TO OPD-COD-TCDP IN OPD.
           MOVE POD-COD-RESC IN POD     TO OPD-COD-RESC IN OPD.
           MOVE POD-COD-PLPA IN POD     TO OPD-COD-PLPA IN OPD.
           MOVE POD-NUM-PLRE IN POD     TO OPD-NUM-PLRE IN OPD.
           MOVE POD-IND-PLRE IN POD     TO OPD-IND-PLRE IN OPD.
           MOVE POD-COD-AFER IN POD     TO OPD-COD-AFER IN OPD.
           MOVE POD-NUM-PNTE IN POD     TO OPD-NUM-PNTE IN OPD.
           MOVE POD-IND-PNTE IN POD     TO OPD-IND-PNTE IN OPD.
           MOVE POD-COD-AACC IN POD     TO OPD-COD-AACC IN OPD.

           MOVE OPD-CAI-IOPD IN OPD TO OPD-CAI-ORIG IN OPD.
           MOVE OPD-IIC-IOPD IN OPD TO OPD-IIC-ORIG IN OPD.
           MOVE ZEROES TO OPD-SGV-TCAS IN OPD.
           IF SCR-CIC-MORE = 'PI'
               PERFORM BUS-TCAS
               IF MSG-COD-MENS > SPACES
                   MOVE 'S' TO SCR-IERR
                   MOVE FIO-STAT-NEX TO FIO-STAT
                   GO TO FIN-CMN-ING
               ELSE
                   MOVE CAM-SGV-VCAM IN CAM TO OPD-SGV-TCAS IN OPD.
      *RVM-ADA-INI 22.02.2001
           PERFORM GET-PLZO.
      *RVM-ADA-FIN 22.02.2001
           PERFORM PUT-CAD.
           IF NOT FIO-STAT-OKS
               MOVE 'ERRPUT CAD' TO MSG-COD-MENS
               PERFORM MSG-DAP
               GO TO FIN-CMN-ING.

           PERFORM PUT-AUT.
           IF NOT FIO-STAT-OKS
               MOVE 'ERRPUT AUT' TO MSG-COD-MENS
               PERFORM MSG-DAP
               GO TO FIN-CMN-ING.

           PERFORM PUT-RCC.
           PERFORM HDR-RCC.
           IF NOT FIO-STAT-OKS
               MOVE 'ERRPUT RCC' TO MSG-COD-MENS
               PERFORM MSG-DAP
               GO TO FIN-CMN-ING.

           PERFORM PUT-VEN.
           IF NOT FIO-STAT-OKS
               MOVE 'ERRPUT VEN' TO MSG-COD-MENS
               PERFORM MSG-DAP
               GO TO FIN-CMN-ING.

      *AFRI-INI 13-ABR-2011 INTEGRACION MC2
           IF DBC-IND-ICLI IN OPD-FLD = 'M'
                GO TO CMN-ING-MCLI.


      *    BUSCA PRECIOS INTERES UNITARIO
      *    SE LIMPIAN VARIABLES
           PERFORM LIM-REG-DPM.

           MOVE 'INT' TO WSS-MC2-COD-CPTO.
           MOVE 1 TO WSS-MC2-IDX-IDC.
           MOVE DBC-NUM-ICLI IN OPD-FLD TO
                WSS-MC2-NUM-ICLI IN WSS-MC2-IDC(WSS-MC2-IDX-IDC).

           MOVE DBC-VRF-ICLI IN OPD-FLD TO
                WSS-MC2-VRF-ICLI IN WSS-MC2-IDC(WSS-MC2-IDX-IDC).

           MOVE DBC-IND-ICLI IN OPD-FLD TO
                WSS-MC2-IND-ICLI IN WSS-MC2-IDC(WSS-MC2-IDX-IDC).

           MOVE DBC-GLS-ICLI IN OPD-FLD TO
                WSS-MC2-GLS-ICLI IN WSS-MC2-IDC(WSS-MC2-IDX-IDC).

           PERFORM MOV-MC2.
      *    PERFORM MOVMC2-INT-1C

           PERFORM CON-MC2-MDPM.

           IF RCC-COD-MENS IN RCC-VARI > SPACES
                MOVE 'TAB'        TO MSG-COD-SIST
                MOVE RCC-COD-MENS TO MSG-COD-MENS
                PERFORM GET-MSG
                MOVE MSG-GLS-DESC TO FRM-MENS
                MOVE FRM-SUAR-MAL TO FRM-SUAR
                GO TO FIN-CMN-ING
           END-IF.

           IF NOT ( SCR-CNAL = '100' OR
                    SCR-CNAL = '110' )

           IF WSS-DIA-MC2 NOT = 'S' AND
              ( DPM-ROC-NUM-DLAN IN DPM-VARI(1) NOT = HOY-DHOY OR
                DPM-ROC-NUM-MLAN IN DPM-VARI(1) NOT = HOY-MHOY OR
                DPM-ROC-NUM-SLAN IN DPM-VARI(1) NOT = HOY-SHOY OR
                DPM-ROC-NUM-ALAN IN DPM-VARI(1) NOT = HOY-AHOY
              )
                  MOVE 'DAP'          TO MSG-COD-SIST
                  MOVE 'MMC2INTNODIA' TO MSG-COD-MENS
                  PERFORM GET-MSG
                  MOVE MSG-GLS-DESC   TO FRM-MENS
                  MOVE FRM-SUAR-MAL   TO FRM-SUAR
                  GO TO FIN-CMN-ING
           ELSE
                PERFORM GRB-VROC
                IF MSG-COD-MENS > SPACES
                     PERFORM MSG-DAP
                     GO TO FIN-CMN-ING.

      *    BUSCA PRECIOS MTO MINIMO UNITARIO

           PERFORM LIM-REG-DPM
           MOVE 'PPC' TO WSS-MC2-COD-CPTO
           MOVE 1 TO WSS-MC2-IDX-IDC
           MOVE DBC-NUM-ICLI IN OPD-FLD TO
                WSS-MC2-NUM-ICLI IN WSS-MC2-IDC(WSS-MC2-IDX-IDC)

           MOVE DBC-VRF-ICLI IN OPD-FLD TO
                WSS-MC2-VRF-ICLI IN WSS-MC2-IDC(WSS-MC2-IDX-IDC)

           MOVE DBC-IND-ICLI IN OPD-FLD TO
                WSS-MC2-IND-ICLI IN WSS-MC2-IDC(WSS-MC2-IDX-IDC)

           MOVE DBC-GLS-ICLI IN OPD-FLD TO
                WSS-MC2-GLS-ICLI IN WSS-MC2-IDC(WSS-MC2-IDX-IDC)

           PERFORM MOV-MC2
      *    PERFORM MOVMC2-PPC-1C

           PERFORM CON-MC2-MDPM
           IF RCC-COD-MENS IN RCC-VARI > SPACES
               MOVE 'TAB'        TO MSG-COD-SIST
               MOVE RCC-COD-MENS TO MSG-COD-MENS
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS
               MOVE FRM-SUAR-MAL TO FRM-SUAR
               GO TO FIN-CMN-ING
           ELSE
               PERFORM GRB-VROC
               IF MSG-COD-MENS > SPACES
                   PERFORM MSG-DAP
                   GO TO FIN-CMN-ING.
      *AFRI-FIN 13-ABR-2011 INTEGRACION MC2

       CMN-ING-MCLI.

           IF DBC-IND-ICLI IN OPD-FLD = 'M'
               MOVE 'S'    TO SCR-IND-ENG IN SCR-VEC-ENG(WSS-IDX-IRCC)
               MOVE 'S'    TO SCR-IND-FST IN SCR-VEC-FST(WSS-IDX-IRCC)
           ELSE
               MOVE SPACES TO SCR-IND-ENG IN SCR-VEC-ENG(WSS-IDX-IRCC)
               MOVE SPACES TO SCR-IND-FST IN SCR-VEC-FST(WSS-IDX-IRCC).

           IF CAD-IND-TCAD IN OPD-FLD = 'M'
               MOVE 'S'    TO SCR-IND-ENG IN SCR-VEC-ENG(WSS-IDX-ICAD)
               MOVE 'S'    TO SCR-IND-FST IN SCR-VEC-FST(WSS-IDX-ICAD)
           ELSE
               MOVE SPACES TO SCR-IND-ENG IN SCR-VEC-ENG(WSS-IDX-ICAD)
               MOVE SPACES TO SCR-IND-FST IN SCR-VEC-FST(WSS-IDX-ICAD).
      * JVM: Mantencion 11/06/1992
           MOVE SCR-SGV-TPER TO OPD-VAL-SINT IN OPD.
      * JVM: Fin
           IF (DBC-IND-ICLI IN OPD-FLD = 'M'  OR
               CAD-IND-TCAD IN OPD-FLD = 'M') OR
      *       (NOT SCR-OFRM-SRV AND
              (NOT SCR-OFRM-SRV AND
      *       (SCR-CCPP = 'ING' AND
               SCR-CCPP = 'ING' AND
               SCR-CMND = 'ODL' AND
               SCR-CIC-MORE = 'PI')

      *     DISPLAY 'DAPPUOP2 A1 CMN-ING SCR-OFRM     ' SCR-OFRM
      *     DISPLAY 'DAPPUOP2 B2 CMN-ING SCR-CCPP     ' SCR-CCPP
      *     DISPLAY 'DAPPUOP2 C3 CMN-ING SCR-CMND     ' SCR-CMND
      *     DISPLAY 'DAPPUOP2 D4 CMN-ING SCR-CIC-MORE ' SCR-CIC-MORE
      *     DISPLAY 'DAPPUOP2 E5 CMN-ING OPD-COD-STAT '
                MOVE 'I' TO OPD-COD-STAT IN OPD
      *RVM-ADA-INI 04.06.2002
                PERFORM VALIDA-DATA-OPD
                IF WSS-DATA-OPD-OKS NOT = 'S'
      *              DISPLAY 'DAPPUOP2 ERROR EN VALIDA-DATA-OPD'
                    PERFORM BCK-OUT
                    MOVE 'ERRDATAOPD  ' TO MSG-COD-MENS
                    PERFORM MSG-DAP
                    MOVE '23' TO FIO-STAT
                    GO TO FIN-CMN-ING
                END-IF
      *RVM-ADA-FIN 04.06.2002
      *          DISPLAY 'DAPPUOP2 1 GRABANDO OPD ' OPD-CIC-IOPD IN OPD
                MOVE FIO-PUT TO FIO-CMND
                PERFORM DAP-FIO-OPD
                IF FIO-STAT-OKS
      *              DISPLAY 'DAPPUOP2 2 GRABO OPD ' OPD-CIC-IOPD IN OPD
                    PERFORM PUT-LPD
                    MOVE '00' TO FIO-STAT
      *              DISPLAY 'DAPPUOP2 3 GRABO LPD ' OPD-CIC-IOPD IN OPD
                    PERFORM EGR-FPEN-CIC
      *              DISPLAY 'DAPPUOP2 4 FUE A EGR-FPEN-CIC'
      * PTC-INI-ADIC (RRM) 5-DEC-2002
                    PERFORM PUT-QUE-KEY-OPD
                    PERFORM MSG-ADA-PI
      *JCT-INI 09-JUL-2012 DPM FUNCIONALIDAD DOF OPERACIONES>450UF
      *        INSTANCIA DE GRABACION LOG DOF
                    PERFORM WRT-FUN-DOF
      *JCT-FIN 09-JUL-2012
                    GO TO FIN-CMN-ING
      * PTC-FIN-ADIC (RRM) 5-DEC-2002
                ELSE
      *              DISPLAY 'DAPPUOP2 5 FUE A PUT-QUE-KEY-OPD'
                    GO TO FIN-CMN-ING
           ELSE
               PERFORM FND-KEY-CAD
               PERFORM PRO-PAGO
               IF MSG-COD-MENS NOT > SPACES
      *OGB-INI 13-ENE-2017 BALANCE OPTIMO DAP
      *            PERFORM PRO-EMI.
                   PERFORM PRO-EMI
                   IF MSG-COD-MENS > SPACES
                      GO TO FIN-CMN-ING.
      *OGB-FIN 13-ENE-2017 BALANCE OPTIMO DAP
      *RVM-ADA-INI 04.06.2002
           PERFORM VALIDA-DATA-OPD.
           IF WSS-DATA-OPD-OKS NOT = 'S'
               PERFORM BCK-OUT
               MOVE 'ERRDATAOPD  ' TO MSG-COD-MENS
               PERFORM MSG-DAP
               MOVE '23' TO FIO-STAT
               GO TO FIN-CMN-ING
           END-IF.
      *RVM-ADA-FIN 04.06.2002
           MOVE FIO-PUT TO FIO-CMND.
           PERFORM DAP-FIO-OPD.
      *<<<< FIN_CMN_ING
           IF NOT FIO-STAT-OKS
      *        Error inconsistencia en el ingreso : informar
               MOVE FIO-MENS TO FRM-MENS
               GO TO FIN-CMN-ING.

      *JCT-INI 09-JUL-2012 DPM FUNCIONALIDAD DOF OPERACIONES>450UF
      *        INSTANCIA DE GRABACION LOG DOF
               PERFORM WRT-FUN-DOF.
      *JCT-FIN 09-JUL-2012

      *RVM-ADA-INI 22.02.2001
           IF OPD-COD-CUST IN OPD-FLD = SCR-COD-CUST-E
               PERFORM PRO-CUST-E
      *RVM-ADA-FIN 22.02.2001
      *RVM-ADA-INI 04.06.2002
               IF MSG-COD-MENS > SPACES
                   PERFORM BCK-OUT
                   PERFORM MSG-DAP
                   GO TO FIN-CMN-ING
               END-IF.
      *RVM-ADA-FIN 04.06.2002
           MOVE FIO-STAT TO PGM-STAT-OPD.
      *ADA-INI 18-AGO-2000 DAPR0051
           PERFORM BLOQUEAR-STA.
           IF MSG-COD-MENS > SPACES
               MOVE 'DAP' TO MSG-COD-SIST
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MEN1
               PERFORM BCK-OUT
               GO TO FIN-CMN-ING.
      *ADA-FIN 18-AGO-2000 DAPR0051
           PERFORM PUT-QUE-KEY-OPD.
           IF PGM-STAT-OPD-OKS
               MOVE 'OPD'               TO WSS-MSG-OPD-OPD
               MOVE SCR-CCPP            TO WSS-MSG-OPD-CMD
               MOVE OPD-COD-STAT IN OPD TO WSS-MSG-OPD-STS
               MOVE SCR-IND-OCIC        TO WSS-MSG-OPD-CIC
               MOVE 'DAP'       TO MSG-COD-SIST
               MOVE WSS-MSG-OPD TO MSG-COD-MENS
               PERFORM GET-MSG
               IF SCR-IND-OCIC = 'S'
                   MOVE OPD-CAI-IOPD IN OPD-FLD TO WSS-CPT-CAI
                   MOVE OPD-IIC-IOPD IN OPD-FLD TO WSS-CPT-IIC
                   PERFORM MSG-ADA
               ELSE
                   PERFORM MSG-ADA.

           IF PGM-STAT-OPD-OKS AND
              (OPD-COD-STAT IN OPD = 'A' OR 'S' OR 'F' OR 'W' OR 'G')
               PERFORM PRO-JNL.
           PERFORM PUT-LPD.
      *>>>>
       FIN-CMN-ING.
           EXIT.

       CMN-ACC SECTION.
       INI-CMN-ACC.
           IF SCR-STAT = SCR-STAT-ABT OR SCR-VFLD = SCR-VFLD-NOT
               MOVE 'ACCION NO REALIZADA' TO FRM-MENS
               GO TO FIN-CMN-ACC.
           PERFORM KEY-ALL-OPD.
           MOVE FIO-GET-KEY-UPD TO FIO-CMND.
           PERFORM DAP-FIO-OPD.
           IF FIO-STAT-OKS AND
              OPD-STP-ITRN IN OPD NOT = SCR-UMOD
               MOVE FIO-ULK-REC TO FIO-CMND
               PERFORM DAP-FIO-OPD
               MOVE FIO-BCK-OUT TO FIO-CMND
               PERFORM DAP-FIO-OPD
               MOVE 'GNS' TO MSG-COD-SIST
               MOVE 'GNSACCSSIMUL' TO MSG-COD-MENS
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS
               GO TO FIN-CMN-ACC.
           IF NOT FIO-STAT-OKS
               GO TO FIN-CMN-ACC.
      * ISP-INI 17-ABR-2018 COMANDO RDP
      *<<<< CMN_ACC_RET
           IF SCR-CMND = WSS-CTE-RDP
               MOVE WSS-CTE-STATI TO OPD-COD-STAT IN OPD
               MOVE FIO-MOD TO FIO-CMND
               PERFORM DAP-FIO-OPD
               MOVE FIO-STAT TO PGM-STAT-OPD
               IF NOT FIO-STAT-OKS
                   MOVE 'S' TO SCR-IERR
                   MOVE 'CMNRDPERR   ' TO MSG-COD-MENS
                   PERFORM MSG-DAP
                   MOVE '23' TO FIO-STAT
                   GO TO FIN-CMN-ACC
               ELSE
                   MOVE 'CMNRDPOKS   ' TO MSG-COD-MENS
                   PERFORM MSG-DAP
                   GO TO FIN-CMN-ACC.


           IF SCR-CMND = WSS-CTE-VRF
               MOVE WSS-CTE-STATG TO OPD-COD-STAT IN OPD
               MOVE FIO-MOD TO FIO-CMND
               PERFORM DAP-FIO-OPD
               MOVE FIO-STAT TO PGM-STAT-OPD
               IF NOT FIO-STAT-OKS
                   MOVE 'S' TO SCR-IERR
                   MOVE 'CMNVRFERR110' TO MSG-COD-MENS
                   PERFORM MSG-DAP
                   MOVE '23' TO FIO-STAT
                   GO TO FIN-CMN-ACC
               ELSE
                   MOVE 'CMNVRFOKS110' TO MSG-COD-MENS
                   PERFORM MSG-DAP
                   GO TO FIN-CMN-ACC.
      * ISP-FIN 17-ABR-2018 COMANDO RDP
      *>>>> CMN_ACC_RET

           PERFORM RET-ALL-OPD.

      *<<<< CMN_ACC
           PERFORM GET-WSS-VAL-CAPT.
           MOVE SPACES TO WSS-CAD-GLS-MENS.
           MOVE SPACES TO MSG-COD-MENS.
           IF OPD-IND-IDIF IN OPD = 'N'
               MOVE 'A' TO OPD-COD-STAT IN OPD
           ELSE
               MOVE 'G' TO OPD-COD-STAT IN OPD.
           IF OPD-COD-STAT IN OPD = 'G'
               MOVE 'VIG'  TO OPD-COD-SCTB IN OPD
           ELSE
               MOVE SPACES TO OPD-COD-SCTB IN OPD.

      *JVM: INICIO MANTENCION
           MOVE OPD-CAI-IOPD IN OPD-FLD TO OPD-CAI-IOPD IN OPD.
           MOVE OPD-IIC-IOPD IN OPD-FLD TO OPD-IIC-IOPD IN OPD.

      *AFRI-INI 13-ABR-2011 INTEGRACION MC2
           MOVE ZEROES TO WSS-INT-SGV-TPIZ      IN WSS-VARI.
           MOVE ZEROES TO WSS-INT-SGV-TPIZ-VALI IN WSS-VARI.

           MOVE ZEROES TO WSS-INT-SGV-TMAX      IN WSS-VARI.
           MOVE ZEROES TO WSS-INT-SGV-TMAX-VALI IN WSS-VARI.

           MOVE ZEROES TO WSS-INT-SGV-TMAR      IN WSS-VARI.
           MOVE ZEROES TO WSS-INT-SGV-TMAR-VALI IN WSS-VARI.

           MOVE ZEROES TO WSS-INT-SGV-TTOP      IN WSS-VARI.
           MOVE ZEROES TO WSS-INT-SGV-TTOP-VALI IN WSS-VARI.


           MOVE ZEROES TO WSS-PPC-SGV-MMIN IN WSS-VARI.
           MOVE SPACES TO WSS-PPC-COD-VCMI IN WSS-VARI.
           MOVE ZEROES TO WSS-PPC-SGV-MMAX IN WSS-VARI.
           MOVE SPACES TO WSS-PPC-COD-VCMA IN WSS-VARI.
      *AFRI-FIN 13-ABR-2011 INTEGRACION MC2
           PERFORM GET-CUR-RCC.
           IF NOT PGM-STAT-RCC-OKS
      *        OPD no tiene cliente asociado
               MOVE 'S' TO SCR-IERR
               MOVE 'DAP' TO MSG-COD-SIST
               MOVE 'OPD    NORCC' TO MSG-COD-MENS
               MOVE SCR-STAT-CON TO SCR-STAT
               GO TO ERR-ACC.

           MOVE RCC TO WSS-RCC-1.
           MOVE RCC-CIC-ICLI IN RCC TO DBC-CIC-ICLI IN DBC.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM SGC-FIO-DBC.
           MOVE FIO-STAT TO PGM-STAT-DBC.
           IF NOT FIO-STAT-OKS
      *        cliente inexistente
               MOVE 'S' TO SCR-IERR
               MOVE 'DAP' TO MSG-COD-SIST
               MOVE 'CLI    NEX' TO MSG-COD-MENS
               MOVE '00'         TO FIO-STAT
               MOVE SCR-STAT-CON TO SCR-STAT
               GO TO ERR-ACC.

           PERFORM GET-NXT-RCC.
           PERFORM PUT-DBC-OPD.
           PERFORM FND-KEY-CAD.

      *     IF SCR-CMND = 'VRF' AND
      *        OPD-FEC-FREA IN OPD-FLD NOT = OPD-FEC-FCMP IN OPD-FLD
      *          IF WSS-TOT-AUTO > ZEROES
      *               MOVE 'TCADAUTO' TO MSG-COD-MENS
      *               GO TO ERR-ACC.

           IF SCR-CMND = 'VRF'
               PERFORM VAL-MUL-DPM
               IF MSG-COD-MENS > SPACES
                   MOVE 'S' TO SCR-IERR
                   GO TO ERR-ACC
               ELSE
               IF WSS-TOT-CADV > 1
                   MOVE 'S' TO SCR-IERR
                   MOVE SPACES TO WSS-CAD-GLS-MENS
                   MOVE 'TOTCADV>1' TO MSG-COD-MENS
                   GO TO ERR-ACC
               ELSE
               IF WSS-TOT-CLI = ZEROES
                   MOVE 'S' TO SCR-IERR
                   MOVE SPACES TO WSS-CAD-GLS-MENS
                   MOVE 'OPD    NORCC' TO MSG-COD-MENS
                   GO TO ERR-ACC
               ELSE
               IF WSS-TOT-CLI = 3
                   MOVE 'S' TO SCR-IERR
                   MOVE SPACES TO WSS-CAD-GLS-MENS
                   MOVE 'TOTCLI >2' TO MSG-COD-MENS
                   GO TO ERR-ACC
               ELSE
               IF OPD-IND-MCLI IN OPD = 'S' AND
                  WSS-TOT-CLI < 2
                   MOVE 'S' TO SCR-IERR
                   MOVE SPACES TO WSS-CAD-GLS-MENS
                   MOVE 'NOMULCLI' TO MSG-COD-MENS
                   GO TO ERR-ACC
               ELSE
               IF WSS-TOT-CAJA > 1
                   MOVE 'S' TO SCR-IERR
                   MOVE SPACES TO WSS-CAD-GLS-MENS
                   MOVE 'TOTCAJA>1' TO MSG-COD-MENS
                   GO TO ERR-ACC
               ELSE
               IF WSS-TOT-AUTO > 1
                   MOVE 'S' TO SCR-IERR
                   MOVE SPACES TO WSS-CAD-GLS-MENS
                   MOVE 'TOTAUTO>1' TO MSG-COD-MENS
                   GO TO ERR-ACC
               ELSE
               IF OPD-IND-IDIF IN OPD = 'S' AND
                  (WSS-TOT-AUTO > ZEROES OR WSS-TOT-CAJA > ZEROES)
                   MOVE 'S' TO SCR-IERR
                   MOVE SPACES TO WSS-CAD-GLS-MENS
                   MOVE 'SOLOMNLODB' TO MSG-COD-MENS
                   GO TO ERR-ACC
               ELSE
      *LRH ini 28-JUN-1994
               IF WSS-TOT-CADS = 1
                  MOVE FIO-GET-KEY-UPD TO FIO-CMND
                  PERFORM DAP-FIO-CAD
                  IF NOT FIO-STAT-OKS
                      MOVE 'S' TO SCR-IERR
                      MOVE SPACES TO WSS-CAD-GLS-MENS
                      MOVE 'CADNEX UNICA' TO MSG-COD-MENS
                      GO TO ERR-ACC
                  ELSE
                      MOVE WSS-VAL-CAPT TO CAD-SGV-LIQU IN CAD
                      MOVE FIO-MOD TO FIO-CMND
                      PERFORM DAP-FIO-CAD
                      IF NOT FIO-STAT-OKS
                         MOVE 'S' TO SCR-IERR
                         MOVE 'CADMOD UNICA' TO MSG-COD-MENS
                         GO TO ERR-ACC
                      ELSE
                         NEXT SENTENCE
      *LRH fin 28-JUN-1994
               ELSE
               IF WSS-VAL-CAPT < WSS-SGV-SCAD
                   MOVE 'S' TO SCR-IERR
                   MOVE SPACES TO WSS-CAD-GLS-MENS
                   MOVE 'VALCAPT<SCAD' TO MSG-COD-MENS
                   GO TO ERR-ACC
               ELSE
               IF WSS-VAL-CAPT NOT = WSS-SGV-SCAD
                  IF WSS-TOT-CADV NOT = 1
                       MOVE 'S' TO SCR-IERR
                       MOVE SPACES TO WSS-CAD-GLS-MENS
                       MOVE 'VALCAPT<>CAD' TO MSG-COD-MENS
                       GO TO ERR-ACC
                  ELSE
                      MOVE WSS-CAD-KEY-ICAD TO CAD-KEY-ICAD IN CAD
                      MOVE FIO-GET-KEY-UPD TO FIO-CMND
                      PERFORM DAP-FIO-CAD
                      IF NOT FIO-STAT-OKS
                          MOVE SPACES TO WSS-CAD-GLS-MENS
                          MOVE 'CADNEX VACIA' TO MSG-COD-MENS
                          GO TO ERR-ACC
                      ELSE
                          SUBTRACT WSS-SGV-SCAD FROM
                          WSS-VAL-CAPT GIVING
                          CAD-SGV-LIQU IN CAD
                          MOVE CAD-SGV-LIQU IN CAD TO
                               WSS-CAD-SGV-LIQU-EDT
                          MOVE CAD-SGV-LIQU IN CAD TO
                               WSS-SGV-CCTE
                          MOVE FIO-MOD TO FIO-CMND
                          PERFORM DAP-FIO-CAD.

      *JVM: FIN MANTENCION
           IF SCR-CMND = 'VRF'
               PERFORM PRO-PAGO
               IF MSG-COD-MENS NOT > SPACES
                   PERFORM PRO-EMI
               ELSE
                   MOVE 'S' TO SCR-IERR
                   MOVE SPACES TO WSS-CAD-GLS-MENS
                   MOVE 'VRFERR' TO MSG-COD-MENS
                   PERFORM BCK-OUT
                   GO TO ERR-ACC.
      *OGB-INI 13-ENE-2017 BALANCE OPTIMO DAP
           IF MSG-COD-MENS > SPACES
              GO TO FIN-CMN-ACC.
      *OGB-FIN 13-ENE-2017 BALANCE OPTIMO DAP
      *RVM-ADA-INI 04.06.2002
           PERFORM VALIDA-DATA-OPD.
           IF WSS-DATA-OPD-OKS NOT = 'S'
               MOVE 'S' TO SCR-IERR
               PERFORM BCK-OUT
               MOVE 'ERRDATAOPD  ' TO MSG-COD-MENS
               PERFORM MSG-DAP
               MOVE '23' TO FIO-STAT
               GO TO FIN-CMN-ACC
           END-IF.
      *RVM-ADA-FIN 04.06.2002
      *AFRI-INI 13-ABR-2011 INTEGRACION MC2
           IF SCR-CMND = 'VRF'
                   IF WSS-ROC-ID-CLI = '1'
                      MOVE BKP-DPM-VARI TO DPM-VARI
                   END-IF
                   PERFORM GRB-VROC
      *            MOVE ADR-AUX-REQA TO ADR-OPD-REQA
                   IF MSG-COD-MENS > SPACES
                       MOVE 'DAP' TO MSG-COD-SIST
                       PERFORM GET-MSG
                       MOVE MSG-GLS-DESC TO FRM-MENS
                       MOVE FRM-SUAR-MAL TO FRM-SUAR
                       PERFORM BCK-OUT
                       GO TO FIN-CMN-ACC.

      *AFRI-FIN 13-ABR-2011 INTEGRACION MC2
           MOVE FIO-MOD TO FIO-CMND.
           PERFORM DAP-FIO-OPD.
           MOVE FIO-STAT TO PGM-STAT-OPD.

      *     DISPLAY 'DAPPUOP2 ANTES DE PRO-CUST-E-PI'.
           PERFORM PRO-CUST-E-PI.
      *ADA-INI 23-AGO-2000 DAPR0051
      *En estado I o V se puede cambiar al cliente, por lo tanto
      *al ser un estado distinto ya no se podra cambiar al cliente
      *y se puede bloquear STA si es que existe.
           IF PGM-STAT-OPD-OKS AND
              OPD-COD-STAT IN OPD NOT = 'I' AND
              OPD-COD-STAT IN OPD NOT = 'V'
               PERFORM BLOQUEAR-STA
               IF MSG-COD-MENS > SPACES
                   MOVE 'DAP' TO MSG-COD-SIST
                   PERFORM GET-MSG
                   MOVE MSG-GLS-DESC TO FRM-MEN1
                   PERFORM BCK-OUT
                   GO TO FIN-CMN-ACC.
      *ADA-FIN 23-AGO-2000 DAPR0051
      *ADA-INI 23-AGO-2000 DAPR0051
      *    IF FIO-STAT-OKS
           IF PGM-STAT-OPD-OKS
      *ADA-FIN 23-AGO-2000 DAPR0051
               MOVE 'ACOPDOK' TO MSG-COD-TMSG
               MOVE OPD-COD-STAT IN OPD TO MSG-COD-CMSG
           ELSE
               MOVE 'ACOPDER' TO MSG-COD-TMSG
               MOVE OPD-COD-STAT IN OPD TO MSG-COD-CMSG.
           MOVE SCR-INST-HCM TO SCR-INST.

       ERR-ACC.
      *GET-MSG Busca mensaje en tabla
           MOVE 'DAP' TO MSG-COD-SIST.
           PERFORM GET-MSG.
           PERFORM MSG-ADA.
           MOVE OPD-CAI-IOPD IN OPD-FLD TO WSS-CPT-CAI.
           MOVE OPD-IIC-IOPD IN OPD-FLD TO WSS-CPT-IIC.
           IF WSS-CAD-GLS-MENS > SPACES
               MOVE FRM-MENS TO WSS-CAD-GLS-MEN0
               MOVE WSS-GLS-CADV TO FRM-MENS.
           IF PGM-STAT-OPD-OKS AND
              (OPD-COD-STAT IN OPD = 'A' OR 'S' OR 'F' OR 'W' OR 'G')
               PERFORM GET-FHOY
               PERFORM PRO-JNL.
      *>>>>
       FIN-CMN-ACC.
           EXIT.

       CMN-ELI SECTION.
       INI-CMN-ELI.
           PERFORM KEY-ALL-OPD.
           MOVE FIO-GET-KEY-UPD TO FIO-CMND.
           PERFORM DAP-FIO-OPD.
           IF FIO-STAT-OKS AND
              OPD-STP-ITRN IN OPD NOT = SCR-UMOD
               MOVE FIO-ULK-REC TO FIO-CMND
               PERFORM DAP-FIO-OPD
               MOVE FIO-BCK-OUT TO FIO-CMND
               PERFORM DAP-FIO-OPD
               MOVE 'GNS' TO MSG-COD-SIST
               MOVE 'GNSACCSSIMUL' TO MSG-COD-MENS
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS
               GO TO FIN-CMN-ELI.
           IF NOT FIO-STAT-OKS
               GO TO FIN-CMN-ELI.
      *<<<< CMN_ELI
      *     PERFORM GET-UPD-RCC.
      *     IF NOT FIO-STAT-OKS
      *         GO TO FIN-CMN-ELI.
      *     IF PGM-STAT-RCC-OKS
      *         PERFORM DEL-RCC
      *         IF NOT FIO-STAT-OKS
      *            GO TO FIN-CMN-ELI.

      *     PERFORM GET-UPD-CAD.
      *     IF PGM-STAT-CAD-OKS
      *         PERFORM DEL-CAD
      *         IF NOT FIO-STAT-OKS
      *            GO TO FIN-CMN-ELI.

           PERFORM GET-UPD-AUT.
           IF PGM-STAT-AUT-OKS
               PERFORM DEL-AUT
               IF NOT FIO-STAT-OKS
                  GO TO FIN-CMN-ELI.
      *>>>>
           MOVE FIO-DEL TO FIO-CMND.
           PERFORM DAP-FIO-OPD.
      *<<<< FIN_CMN_ELI
           IF NOT FIO-STAT-OKS
      *        Error inconsistencia en la eliminacion : informar
               MOVE FIO-MENS TO FRM-MENS
               GO TO FIN-CMN-ELI.

      *    si habilitamos el sgte. codigo debemos deshabilitar
      *    el del-cad anterior
           PERFORM DEL-MUL-CAD.
           IF NOT FIO-STAT-OKS
               PERFORM BCK-OUT
               GO TO FIN-CMN-ELI.

      *    si habilitamos el sgte. codigo debemos deshabilitar
      *    el del-rcc anterior
           PERFORM DEL-MUL-RCC.
           IF NOT FIO-STAT-OKS
               PERFORM BCK-OUT
               GO TO FIN-CMN-ELI.

           PERFORM DEL-MUL-VEN.
           IF NOT FIO-STAT-OKS
               PERFORM BCK-OUT
               GO TO FIN-CMN-ELI.
           PERFORM DEL-MUL-IMP.
      *>>>>
       FIN-CMN-ELI.
           EXIT.

       CMN-PGM SECTION.
       INI-CMN-PGM.
           PERFORM RET-ALL-OPD.
       FIN-CMN-PGM.
           EXIT.

       STP-EXIT SECTION.
       INI-STP-EXIT.
           MOVE SCR-PROG TO PGM-PROG.
           MOVE SCR-NTRN TO PGM-NTRN.

           MOVE SCR-PROV TO SCR-PROG.
           MOVE SCR-NTRV TO SCR-NTRN.

           MOVE PGM-PROG TO SCR-PROV
           MOVE PGM-NTRN TO SCR-NTRV.
       FIN-STP-EXIT.
           EXIT.

       SCR-EXIT SECTION.
       INI-SCR-EXIT.
           MOVE 'P'      TO SCR-ICMN.
           MOVE SCR-NTRN TO SYS-NTRN.
           MOVE SCR-VARI TO SYS-CMMA.
           MOVE SCR-TCMA TO SYS-TCMA.
           MOVE SYS-RTRN TO SYS-CMND.
      * PTC-INI-AUT
           IF NOT SCR-OFRM-SRV
      * PTC-FIN-AUT
           PERFORM GNS-PRO-SYS.
       FIN-SCR-EXIT.
           EXIT.

       SCR-PUTA SECTION.
       INI-SCR-PUTA.
      * PTC-INI-AUT
           IF FRM-SUAR EQUAL FRM-SUAR-MAL OR FRM-SUAR-CLR
               MOVE 'S' TO SCR-IERR.
           IF WSS-AVISO-DOF-MTI = 'S'
               MOVE 'N' TO SCR-IERR.
      * PTC-FIN-AUT
           MOVE SCR-NMAP TO FRM-NAME.
           MOVE SCR-NLIB TO FRM-NLIB.
           MOVE OPD-FLD TO FRM-DFLD.
           MOVE FRM-PUT-ALL TO FRM-CMND.
           PERFORM GNS-PRO-FRM.
       FIN-SCR-PUTA.
           EXIT.

       SCR-MSSG SECTION.
       INI-SCR-MSSG.
           IF FRM-MEN1 NOT > SPACES
               MOVE SPACES TO FRM-MEN1.
           IF FRM-MEN2 NOT > SPACES
               MOVE SPACES TO FRM-MEN2.
           MOVE FRM-MENS TO OPD-GLS-MENS.
       FIN-SCR-MSSG.
           EXIT.

       SCR-GFLD SECTION.
       INI-SCR-GFLD.
           MOVE SCR-NMAP TO FRM-NAME.
           MOVE SCR-NLIB TO FRM-NLIB.
           MOVE FRM-GET-ALL TO FRM-CMND.
           PERFORM GNS-PRO-FRM.
           MOVE SPACES TO FRM-MENS.
           IF NOT (FRM-FFLD = FRM-FFLD-RET  OR FRM-FFLD-PF10 OR
                              FRM-FFLD-PF12 OR FRM-FFLD-PF3)
               MOVE 'PFSINV    ' TO MSG-COD-MENS
               MOVE 'GNS' TO MSG-COD-SIST
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS
               PERFORM FST-FLD-OPD
               PERFORM SCR-MSSG
               PERFORM SCR-PUTA
               PERFORM SCR-EXIT.
           MOVE FRM-DFLD TO OPD-FLD.
           IF FRM-STAT-ABT
               GO TO FIN-SCR-GFLD.
           MOVE FRM-SUAR-OKS TO FRM-SUAR.
           PERFORM VAL-NUM-KEY-OPD.
           IF FRM-SUAR EQUAL FRM-SUAR-MAL OR FRM-SUAR-CLR
               PERFORM SCR-MSSG
               PERFORM EDT-KEY-OPD
               PERFORM SCR-PUTA
               PERFORM SCR-EXIT.
           PERFORM VAL-NUM-FLD-OPD.
           IF FRM-SUAR EQUAL FRM-SUAR-MAL OR FRM-SUAR-CLR
               PERFORM SCR-MSSG
               PERFORM EDT-KEY-OPD
               PERFORM EDT-FLD-OPD
               PERFORM SCR-PUTA
               PERFORM SCR-EXIT.
           PERFORM VAL-MKY-OPD.
           IF FRM-SUAR EQUAL FRM-SUAR-MAL OR FRM-SUAR-CLR
               GO TO ERR-SCR-GFLD.
      *<<<< SCR_GFLD_VAL_FLD
      *    SI DAP EN MONEDA CHILENA REAJUSTABLE, ENTONCES CONVERTIR A PE
      *    BUSCA VALOR DE CAMBIO
      *     IF SCR-SGV-VCAM NOT = 1
      *         IF SCR-CIC-TVAL = PDB-CIC-MNAC AND
      *            SCR-CIC-VCAM NOT = PDB-CIC-0999
      *            PERFORM LEE-VCAM
      *            IF MSG-COD-MENS > SPACES
      *                MOVE 'DAP' TO MSG-COD-SIST
      *                PERFORM GET-MSG
      *                MOVE MSG-GLS-DESC TO FRM-MENS
      *                MOVE FRM-SUAR-MAL TO FRM-SUAR
      *                GO TO ERR-SCR-GFLD.

      *ISP ES NECESARIO TENER LOS DATOS DE LA OPERACION
      *    PARA LA VALIDACION DE CAMPOS
           IF SCR-CMND = 'MDA'
               MOVE OPD-CAI-IOPD IN OPD-FLD TO OPD-CAI-IOPD IN OPD
               MOVE OPD-IIC-IOPD IN OPD-FLD TO OPD-IIC-IOPD IN OPD
               MOVE FIO-GET-KEY TO FIO-CMND
               PERFORM DAP-FIO-OPD
               IF NOT FIO-STAT-OKS
                   MOVE 'DAP' TO MSG-COD-SIST
                   MOVE 'OPD    NEX' TO MSG-COD-MENS
                   PERFORM GET-MSG
                   MOVE MSG-GLS-DESC TO FRM-MENS
                   MOVE FRM-SUAR-MAL TO FRM-SUAR
                   GO TO ERR-SCR-GFLD.

           IF SCR-CMND = 'RDL' OR 'RLR'
               MOVE OPD-CAI-IOPD IN OPD-FLD TO OPD-CAI-IOPD IN OPD
               MOVE OPD-IIC-IOPD IN OPD-FLD TO OPD-IIC-IOPD IN OPD
               MOVE FIO-GET-KEY TO FIO-CMND
               PERFORM DAP-FIO-OPD
               IF NOT FIO-STAT-OKS
                   MOVE 'DAP' TO MSG-COD-SIST
                   MOVE 'OPD    NEX' TO MSG-COD-MENS
                   PERFORM GET-MSG
                   MOVE MSG-GLS-DESC TO FRM-MENS
                   MOVE FRM-SUAR-MAL TO FRM-SUAR
                   GO TO ERR-SCR-GFLD
               ELSE
                   MOVE OPD-VAL-CAPT IN OPD TO WSS-SGV-RDL-TODO
                   PERFORM GET-VEN-GREN
                   IF NOT FIO-STAT-OKS
                       MOVE 'DAP' TO MSG-COD-SIST
                       MOVE 'VENGRENNEX' TO MSG-COD-MENS
                       PERFORM GET-MSG
                       MOVE MSG-GLS-DESC TO FRM-MENS
                       MOVE FRM-SUAR-MAL TO FRM-SUAR
                       GO TO ERR-SCR-GFLD
                   ELSE
                       SUBTRACT VEN-VAL-CAPI IN VEN FROM
                                VEN-VAL-FINA IN VEN
                       GIVING WSS-SGV-RDL-INTE.
      *>>>>
           PERFORM VAL-FLD-OPD.
           IF FRM-SUAR EQUAL FRM-SUAR-MAL OR FRM-SUAR-CLR
               GO TO ERR-SCR-GFLD.
           PERFORM GET-TS-TPER.
           PERFORM VAL-CON-FLD-OPD.
           IF NOT (FRM-SUAR EQUAL FRM-SUAR-MAL OR FRM-SUAR-CLR)
               GO TO FIN-SCR-GFLD.
           IF FRM-UCUR NOT > SPACES
               PERFORM FST-FLD-OPD.
       ERR-SCR-GFLD.
      *<<<< ERR_SCR_GFLD
           IF SCR-CMND = 'ODL' OR 'ODB'
              PERFORM UNP-FLD-OPD
              PERFORM PRO-OPD-POD.

      *>>>> ERR_SCR_GFLD
           PERFORM SCR-MSSG.
           PERFORM EDT-KEY-OPD.
           PERFORM EDT-FLD-OPD.
           PERFORM SCR-PUTA.
           PERFORM SCR-EXIT.
       FIN-SCR-GFLD.
           MOVE SCR-STAT-MOD TO SCR-STAT.

       GET-ACC SECTION.
       INI-GET-ACC.
           MOVE SCR-NMAP TO FRM-NAME.
           MOVE SCR-NLIB TO FRM-NLIB.
           MOVE FRM-GET-ALL TO FRM-CMND.
           PERFORM GNS-PRO-FRM.
           IF NOT (FRM-FFLD = FRM-FFLD-RET  OR FRM-FFLD-PF10 OR
                              FRM-FFLD-PF12 OR FRM-FFLD-PF3)
               MOVE 'PFSINV    ' TO MSG-COD-MENS
               MOVE 'GNS' TO MSG-COD-SIST
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO OPD-GLS-MEN2
               MOVE SCR-PRMT     TO OPD-GLS-MEN1
               PERFORM FST-MSG
               PERFORM SCR-PUTA
               PERFORM SCR-EXIT.
           MOVE FRM-DFLD TO OPD-FLD.
           IF NOT ((FRM-FFLD = FRM-FFLD-PF12 OR FRM-FFLD-PF3) OR
                    SCR-CONF > SPACES)
               PERFORM VAL-NUM-KEY-OPD
               PERFORM VAL-NUM-FLD-OPD.
       FIN-GET-ACC.
           MOVE SCR-STAT-SON TO SCR-STAT.

       GET-CON SECTION.
       INI-GET-CON.
           MOVE SCR-NMAP TO FRM-NAME.
           MOVE SCR-NLIB TO FRM-NLIB.
           MOVE FRM-GET-ALL TO FRM-CMND.
           PERFORM GNS-PRO-FRM.
           IF NOT (FRM-FFLD = FRM-FFLD-RET  OR FRM-FFLD-PF10 OR
                              FRM-FFLD-PF12 OR FRM-FFLD-PF3)
               MOVE 'PFSINV    ' TO MSG-COD-MENS
               MOVE 'GNS' TO MSG-COD-SIST
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO OPD-GLS-MEN2
               MOVE SCR-PRMT     TO OPD-GLS-MEN1
               PERFORM FST-MSG
               PERFORM SCR-PUTA
               PERFORM SCR-EXIT.
           MOVE FRM-DFLD TO OPD-FLD.
       FIN-GET-CON.
           MOVE SCR-STAT-CON TO SCR-STAT.

       CLR-MSG SECTION.
       INI-CLR-MSG.
           MOVE SPACES TO OPD-GLS-MENS.
       FIN-CLR-MSG.
           EXIT.

       HBL-IKY SECTION.
       INI-HBL-IKY.
      *<<<< INI_HBL_IKY OR INI_HBL_KEY
           MOVE SPACES TO SCR-CIC-VCAM
                          SCR-IND-MCLI
                          SCR-IND-MCAD.
           MOVE 1      TO SCR-SGV-VCAM.

      *>>>>
      * PTC-INI-AUT
           IF NOT SCR-OFRM-SRV
      * PTC-FIN-AUT
           IF SCR-DESDE-CMN
               MOVE OPD-GLS-MENS TO FRM-MENS
               MOVE LOW-VALUES TO OPD-FLD
      * FLB  7-NOV-1994
               PERFORM CLR-KEY-OPD
               IF FRM-MENS < SPACES
                   MOVE LOW-VALUES TO OPD-GLS-MENS
               ELSE
                   MOVE FRM-MENS TO OPD-GLS-MENS.
           PERFORM PRO-FLD-OPD.
           PERFORM PRO-MKY-OPD.
           PERFORM UNP-IKY-OPD.
           PERFORM FST-KEY-OPD.
      *<<<< FIN_HBL_IKY OR FIN_HBL_KEY
      * ISP: ACCESO POR CLIENTE INHIBIDO PARA RDL
           IF SCR-CMND = 'RDL' OR 'RLR'
               MOVE FRM-CPIM-AEY TO DBC-GLS-NOMC-ATR IN OPD-FLD
               MOVE FRM-CPIM-AEY TO DBC-IND-ICLI-ATR IN OPD-FLD
               MOVE FRM-CPIM-AEY TO DBC-GLS-ICLI-ATR IN OPD-FLD
               MOVE FRM-CPIM-AEY TO DBC-NUM-ICLI-ATR IN OPD-FLD
               MOVE FRM-CPIM-AEY TO DBC-VRF-ICLI-ATR IN OPD-FLD.
      *>>>>
      *<<<< FIN_HBL_IKY
      *    habilitar (desproteger) campos no-llave que son
      *    llave en la POD (plantilla)
           MOVE FRM-CPIM-UBY TO OPD-COD-TOPD-ATR IN OPD-FLD.
           MOVE FRM-CPIM-UBY TO OPD-COD-VCAM-ATR IN OPD-FLD.
           MOVE FRM-CPIM-UBY TO OPD-COD-AOPD-ATR IN OPD-FLD.
           MOVE -1           TO OPD-COD-TOPD-LEN IN OPD-FLD.
      *>>>> FIN_HBL_IKY
       FIN-HBL-IKY.
           EXIT.

       HBL-KEY SECTION.
       INI-HBL-KEY.
      *<<<< INI_HBL_IKY OR INI_HBL_KEY
           MOVE SPACES TO SCR-CIC-VCAM
                          SCR-IND-MCLI
                          SCR-IND-MCAD.
           MOVE 1      TO SCR-SGV-VCAM.

      *>>>>
      * PTC-INI-AUT
           IF NOT SCR-OFRM-SRV
      * PTC-FIN-AUT
           IF SCR-DESDE-CMN
               MOVE OPD-GLS-MENS TO FRM-MENS
               MOVE LOW-VALUES TO OPD-FLD
               IF FRM-MENS < SPACES
                   MOVE LOW-VALUES TO OPD-GLS-MENS
               ELSE
                   MOVE FRM-MENS TO OPD-GLS-MENS.
           MOVE FRM-CPSF-AEY TO FRM-CPIM-AEY.
           PERFORM PRO-FLD-OPD.
           MOVE '1' TO FRM-CPIM-AEY.
           PERFORM UNP-KEY-OPD.
           PERFORM FST-KEY-OPD.
      *<<<< FIN_HBL_IKY OR FIN_HBL_KEY
      * ISP: ACCESO POR CLIENTE INHIBIDO PARA RDL
           IF SCR-CMND = 'RDL' OR 'RLR'
               MOVE FRM-CPIM-AEY TO DBC-GLS-NOMC-ATR IN OPD-FLD
               MOVE FRM-CPIM-AEY TO DBC-IND-ICLI-ATR IN OPD-FLD
               MOVE FRM-CPIM-AEY TO DBC-GLS-ICLI-ATR IN OPD-FLD
               MOVE FRM-CPIM-AEY TO DBC-NUM-ICLI-ATR IN OPD-FLD
               MOVE FRM-CPIM-AEY TO DBC-VRF-ICLI-ATR IN OPD-FLD.
      *>>>>
       FIN-HBL-KEY.
           EXIT.

       HBL-FLD SECTION.
       INI-HBL-FLD.
           PERFORM UNP-MKY-OPD.
           PERFORM UNP-FLD-OPD.
           PERFORM FST-FLD-OPD.
      *<<<< FIN_HBL_FLD
      *    acceso a pod
           MOVE OPD-COD-VCAM IN OPD-FLD TO POD-COD-VCAM IN POD.
           MOVE OPD-COD-TOPD IN OPD-FLD TO POD-COD-TOPD IN POD.
           MOVE OPD-COD-AOPD IN OPD-FLD TO POD-COD-AOPD IN POD.
           MOVE ZEROES                  TO POD-NUM-IPOD IN POD.
           PERFORM GET-POD.
      * ISP: DAPBG001
      *     PERFORM VAL-POD.
      *     IF SCR-STAT = SCR-STAT-CON
      *         GO TO END-SCR-TRL.

       ERR-HBL-FLD.
           IF MSG-COD-MENS > SPACES
      *GET-MSG Busca mensaje en tabla
               MOVE 'DAP' TO MSG-COD-SIST
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS
               MOVE SCR-STAT-CON TO SCR-STAT
               GO TO FIN-HBL-FLD.

       END-HBL-FLD.
      *    deshabilitar (proteger) campos no-llave que son
      *    llave en la POD (plantilla)
      *     MOVE FRM-CPIM-AEY TO OPD-COD-TOPD-ATR IN OPD-FLD.
      *     MOVE FRM-CPIM-AEY TO OPD-COD-VCAM-ATR IN OPD-FLD.
      *     MOVE FRM-CPIM-AEY TO OPD-COD-AOPD-ATR IN OPD-FLD.
      *     MOVE 0            TO OPD-COD-TOPD-LEN IN OPD-FLD.
      *     MOVE -1           TO OPD-COD-OFIC-LEN IN OPD-FLD.

           IF SCR-CMND = 'MDA'
               PERFORM PRO-FLD-OPD
               PERFORM PRO-MKY-OPD
               MOVE FRM-CPIM-UBY TO RCC-NUM-DIRE-ATR IN OPD-FLD
               MOVE FRM-CPIM-UBY TO OPD-COD-EJEC-ATR IN OPD-FLD
      *HZF-INI 17-05-2002
      *        MOVE FRM-CPIM-UBY TO OPD-COD-CUST-ATR IN OPD-FLD
               MOVE OPD-CAI-IOPD IN OPD-FLD TO OPD-CAI-IOPD IN OPD
               MOVE OPD-IIC-IOPD IN OPD-FLD TO OPD-IIC-IOPD IN OPD
               MOVE FIO-GET-KEY TO FIO-CMND
               PERFORM DAP-FIO-OPD
               IF NOT FIO-STAT-OKS
                   MOVE 'DAP' TO MSG-COD-SIST
                   MOVE 'OPD    NEX' TO MSG-COD-MENS
                   PERFORM GET-MSG
                   MOVE MSG-GLS-DESC TO FRM-MENS
                   MOVE FRM-SUAR-MAL TO FRM-SUAR
                   GO TO FIN-HBL-FLD
               END-IF
               IF OPD-COD-CUST IN OPD NOT = SCR-COD-CUST-E
                  MOVE FRM-CPIM-UBY TO OPD-COD-CUST-ATR IN OPD-FLD
               END-IF
      *        MOVE FRM-CPIM-UBY TO OPD-COD-GARA-ATR IN OPD-FLD
      *HZF-FIN 17-05-2002
               MOVE FRM-CPIM-UBY TO OPD-NUM-RETD-ATR IN OPD-FLD
               MOVE FRM-CPIM-UBY TO OPD-IND-RETD-ATR IN OPD-FLD
               MOVE FRM-CPIM-UBY TO OPD-COD-UBFD-ATR IN OPD-FLD.

           IF SCR-CMND = 'RDL' OR 'RLR'
               PERFORM PRO-FLD-OPD
               PERFORM PRO-MKY-OPD
               IF SCR-CMND = 'RDL'
                   MOVE FRM-CPIM-UBY TO OPD-COD-EATE-ATR IN OPD-FLD
                   MOVE FRM-CPIM-UNY TO FRM-COD-EATE-ATR IN OPD-FLD
                   MOVE FRM-CPIM-UBY TO OPD-SGV-TINT-ATR IN OPD-FLD
                   MOVE FRM-CPIM-UBY TO FRM-CAI-ICAD-ATR IN OPD-FLD
                   MOVE FRM-CPIM-UBY TO FRM-IIC-ICAD-ATR IN OPD-FLD
                   MOVE FRM-CPIM-UBY TO OPD-SGV-MPRE-ATR IN OPD-FLD
      *RVM-CST-INI 26-AUG-1996
                   IF OPD-COD-EJEC IN OPD-FLD > SPACES
                       MOVE OPD-COD-EJEC IN OPD-FLD TO
                            USR-COD-USER IN USR
                       PERFORM VAL-USR
                       IF MSG-COD-MENS > SPACES
                           MOVE FRM-CPIM-UBY TO
                                OPD-COD-EJEC-ATR IN OPD-FLD
                           MOVE -1 TO OPD-COD-EJEC-LEN IN OPD-FLD.
      *RVM-CST-FIN 26-AUG-1996
      *    deshabilitar (proteger) campos que son de la POD (plantilla)
      * ISP: DAPBG002.
           PERFORM PRO-OPD-POD.

       CON-HBL-FLD.
           IF DBC-IND-ICLI IN OPD-FLD = 'M' AND
              SCR-IND-MCLI = 'M'
               MOVE FRM-CPIM-AEY TO DBC-IND-ICLI-ATR IN OPD-FLD
               MOVE FRM-CPIM-AEY TO DBC-GLS-ICLI-ATR IN OPD-FLD
               MOVE FRM-CPIM-AEY TO DBC-NUM-ICLI-ATR IN OPD-FLD
               MOVE FRM-CPIM-AEY TO DBC-VRF-ICLI-ATR IN OPD-FLD
               MOVE FRM-CPIM-AEY TO DBC-GLS-NOMC-ATR IN OPD-FLD
               MOVE FRM-CPIM-AEY TO RCC-NUM-DIRE-ATR IN OPD-FLD.

           IF CAD-IND-TCAD IN OPD-FLD = 'M' AND
              SCR-IND-MCAD = 'M'
               MOVE FRM-CPIM-AEY TO CAD-IND-TCAD-ATR IN OPD-FLD
               MOVE FRM-CPIM-AEY TO CAD-CAI-ICAD-ATR IN OPD-FLD
               MOVE FRM-CPIM-AEY TO CAD-IIC-ICAD-ATR IN OPD-FLD.
      *>>>> FIN_HBL_FLD
       FIN-HBL-FLD.
           EXIT.

       FST-MSG SECTION.
       INI-FST-MSG.
           MOVE -1 TO OPD-GLS-MENS-LEN.
       FIN-FST-MSG.
           EXIT.

       PRO-ALL SECTION.
       INI-PRO-ALL.
           PERFORM PRO-KEY-OPD.
           PERFORM PRO-FLD-OPD.
           PERFORM FST-MSG.
       FIN-PRO-ALL.
           EXIT.

       SCR-TRL SECTION.
       INI-SCR-TRL.
      * PTC-INI-AUT
           IF SCR-STAT NOT = SCR-STPP
               MOVE FRM-SUAR-MAL TO FRM-SUAR.
      * PTC-FIN-AUT
           IF FRM-MEN1 NOT > SPACES
               MOVE SCR-PRMT TO FRM-MEN1.
      *<<<< FIN_SCR_TRL
           MOVE SPACES TO MSG-COD-MENS.

           IF SCR-CCPP = 'ING'
               GO TO END-SCR-TRL.

      *LRH ini 28-JUL-1994
           IF SCR-CMND = 'EDE'
               PERFORM GET-FHOY
      *RVM-CST-INI 20-NOV-1996
      *PARA ELIMIRAR DAP DEL DIA SE COMPARA FECHA DE CAPTACION ORIGINAL
      *         IF HOY-FHOY NOT = OPD-FEC-FTRN IN OPD
               IF HOY-FHOY NOT = OPD-FEC-FPCO IN OPD
      *RVM-CST-FIN 20-NOV-1996
                   MOVE 'DAPNOESDEHOY' TO MSG-COD-MENS
                   GO TO ERR-SCR-TRL
               ELSE
                   GO TO END-SCR-TRL.
      *LRH fin 28-JUL-1994

           IF OPD-COD-STAT IN OPD-FLD = 'W'
      *        opd esperando SAFE Y CTA CTE
               MOVE 'OPD    SYC' TO MSG-COD-MENS
               GO TO ERR-SCR-TRL.

           IF OPD-COD-STAT IN OPD-FLD = 'S'
      *        opd esperando SAFE
               MOVE 'OPD    SAF' TO MSG-COD-MENS
               GO TO ERR-SCR-TRL.

           IF OPD-COD-STAT IN OPD-FLD = 'F' AND
              SCR-CMND NOT = 'VRF'
      *        opd esperando CTA CTE
               MOVE 'OPD    CTE' TO MSG-COD-MENS
               GO TO ERR-SCR-TRL.

           IF OPD-COD-STAT IN OPD-FLD = 'X'
      *        opd rechazado por falta de fondos
               MOVE 'OPD    RFF' TO MSG-COD-MENS
               GO TO ERR-SCR-TRL.

      *     IF OPD-COD-STAT IN OPD-FLD = 'N'
      *        opd ANULADA
      *         MOVE 'OPD    NUL' TO MSG-COD-MENS
      *         GO TO ERR-SCR-TRL.

           IF NOT (SCR-CMND = 'RDL' OR
                   SCR-CMND = 'RLR' OR
                   SCR-CMND = 'MDA')
           IF OPD-COD-IONP IN OPD-FLD = 'S'
      *        opd con onp
               MOVE 'OPD    ONP' TO MSG-COD-MENS
               GO TO ERR-SCR-TRL.
      *JUS-INI 4-JAN-1996 OJO: ESTE CODIGO FUE ANULADO TEMPORALMENTE
      *JUS-INI 6-NOV-1995
      *     IF NOT (SCR-CMND = 'RDL' OR
      *             SCR-CMND = 'RLR' OR
      *             SCR-CMND = 'MDA')
      *     IF OPD-COD-CUST IN OPD-FLD = 'S'
      *         MOVE 'OPD   CUST' TO MSG-COD-MENS
      *         GO TO ERR-SCR-TRL.
      *JUS-FIN
      *JUS-FIN 4-JAN-1996
           IF (SCR-CMND = 'MOD' OR SCR-CCPP = 'ELI') AND
              (OPD-COD-STAT IN OPD-FLD NOT = 'I')
      *        AND OPD-COD-STAT IN OPD-FLD NOT = 'V'
      *        opd no ('I' o 'V')
               MOVE 'OPD    NI' TO MSG-COD-MENS
               GO TO ERR-SCR-TRL.

           IF SCR-CMND = 'VRF' AND
              NOT (OPD-COD-STAT IN OPD-FLD = 'I' OR 'F')
      *        opd no ('I' o 'F')
               MOVE 'OPD    NIC' TO MSG-COD-MENS
               GO TO ERR-SCR-TRL.

           IF FRM-FFLD NOT = FRM-FFLD-PF12 AND
              SCR-CMND = 'MDA'
      *JUS-INI 4-JAN-1996 OJO: ESTE GODIGO SE ANULARA TEMPORALMENTE
      *          IF OPD-COD-STAT IN OPD NOT = 'G'
      *JUS-FIN 4-JAN-1996
      *
      *JUS-INI 4-JAN-1996 OJO: ESTE GODIGO ESTABA ANULADO
      *                        AHORA SE ACTIVARA TEMPORALMENTE
                IF NOT ((OPD-COD-STAT IN OPD = 'A' OR
                         OPD-COD-STAT IN OPD = 'G') OR
                        (OPD-COD-STAT IN OPD = 'L' AND
                         OPD-COD-RENO IN OPD = 'N'))
      *JUS-FIN 4-JAN-1996
      *        opd no 'I'
               MOVE 'OPD    NAE' TO MSG-COD-MENS
               GO TO ERR-SCR-TRL.

      *     IF SCR-CMND = 'RDL' AND
      *        OPD-COD-STAT IN OPD-FLD NOT = 'G'
      *        opd no ('G')
      *         MOVE 'OPD    NE' TO MSG-COD-MENS
      *         GO TO ERR-SCR-TRL.

      * ISP: PONIA FECHA COMPUTACIONAL EN DESPLIEGUE DE DATOS
      *     PERFORM GET-FHOY.
      *     MOVE HOY-FHOY TO OPD-FEC-FCMP IN OPD.
      *     MOVE HOY-DHOY TO OPD-NUM-DCMP IN OPD-FLD.
      *     MOVE HOY-MHOY TO OPD-NUM-MCMP IN OPD-FLD.
      *     MOVE HOY-SHOY TO OPD-NUM-SCMP IN OPD-FLD.
      *     MOVE HOY-AHOY TO OPD-NUM-ACMP IN OPD-FLD.

      *     IF SCR-CMND = 'ADA'
      *         IF OPD-FEC-FREA IN OPD NOT = OPD-FEC-FCMP IN OPD
      *             MOVE 'FREA<>FCMP' TO MSG-COD-MENS
      *             GO TO ERR-SCR-TRL
      *         ELSE
      *             NEXT SENTENCE
      *     ELSE
      *     IF SCR-CMND = 'ADO'
       ERR-SCR-TRL.
           IF MSG-COD-MENS > SPACES
      *GET-MSG Busca mensaje en tabla
               MOVE 'DAP' TO MSG-COD-SIST
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS
               MOVE SCR-STAT-CON TO SCR-STAT.

       END-SCR-TRL.
      *<<<< PGM_PU
      * DAPR0005-INI(ISP) 11-10-1999
           IF RVI-GLS-MENS > SPACES
               MOVE RVI-GLS-MENS TO FRM-MEN2.
      * DAPR0005-FIN(ISP) 11-10-1999
      *>>>>
      *>>>>
           IF SCR-STAT = SCR-STAT-MOD
               PERFORM HBL-FLD
               PERFORM SCR-MSSG
               PERFORM EDT-KEY-OPD
               PERFORM EDT-FLD-OPD
               PERFORM SCR-PUTA
               MOVE SCR-INST-GFL TO SCR-INST
               PERFORM SCR-EXIT.
           IF SCR-STAT = SCR-STAT-SON
               PERFORM PRO-ALL
               PERFORM SCR-MSSG
               PERFORM EDT-KEY-OPD
               PERFORM EDT-FLD-OPD
               PERFORM SCR-PUTA
               MOVE SCR-INST-GCS TO SCR-INST
               PERFORM SCR-EXIT.
      *ASUME SCR-STAT-CON.
           MOVE SCR-STAT-CON TO SCR-STAT.
      *    MOVE FRM-CPSF-AEY TO FRM-CPIM-AEY.
           PERFORM PRO-ALL.
           PERFORM SCR-MSSG.
           PERFORM EDT-KEY-OPD.
           PERFORM EDT-FLD-OPD.
           PERFORM SCR-PUTA.
           MOVE SCR-INST-GAB TO SCR-INST.
           PERFORM SCR-EXIT.
       FIN-SCR-TRL.
           EXIT.

      *BEE-INI-NGA-12-AGO-2013 TRANSACCIONES LENTAS
       LIQ-RCC SECTION.
       INI-LIQ-RCC.
           MOVE SPACES                         TO RCC-CIC-ICLI IN RCC.
           MOVE OPD-CIC-IOPD IN OPD            TO RCC-CIC-IOPD IN RCC.
           MOVE FIO-GET-NLS                    TO FIO-CMND.
           MOVE 'RCC-KEY-IOPD'                 TO FIO-AKEY.
           PERFORM DAP-FIO-RCC.
           IF NOT FIO-STAT-OKS
              GO TO FIN-LIQ-RCC.
       LUP-LIQ-RCC.
           IF   OPD-CIC-IOPD IN OPD     NOT =  RCC-CIC-IOPD IN RCC
                   GO TO FIN-LIQ-RCC.

           MOVE FIO-GET-KEY-UPD          TO FIO-CMND.
           PERFORM DAP-FIO-RCC.
           IF NOT FIO-STAT-OKS
               GO TO FIN-LIQ-RCC.
           MOVE  FIO-MOD TO FIO-CMND.
           MOVE WSS-IND-RCC TO RCC-MSC-STAT IN RCC.
           PERFORM DAP-FIO-RCC.
           IF FIO-STAT-OKS
                MOVE FIO-GET-KEY TO FIO-CMND
                PERFORM DAP-FIO-RCC
                GO TO  NXT-RCC
           ELSE
                MOVE FIO-ULK-REC TO FIO-CMND
                PERFORM DAP-FIO-RCC
                GO TO FIN-LIQ-RCC.
       NXT-RCC.
           MOVE 'RCC-KEY-IOPD'                 TO FIO-AKEY.
           MOVE FIO-GET-NXT TO FIO-CMND
           PERFORM DAP-FIO-RCC.
           GO TO LUP-LIQ-RCC.
       FIN-LIQ-RCC.
           EXIT.


       DESSCRTRL SECTION.
       INI-DESSCRTRL.
           IF SCR-INST = SCR-INST-GCF
                  PERFORM SCR-GCNF
                  GO TO FIN-DESSCRTRL.
           MOVE SCR-VFLD-NOT TO SCR-VFLD.
           MOVE FRM-FFLD TO SCR-FFLD.
           IF SCR-STAT = SCR-STAT-ABT OR SCR-STAT-CON
                  GO TO FIN-DESSCRTRL.
           IF SCR-FFLD-RET OR SCR-FFLD-PF10
                  MOVE SCR-VFLD-YES TO SCR-VFLD
                  PERFORM PRO-CONF.
       FIN-DESSCRTRL.
           IF SCR-FFLD-PF10 OR SCR-FFLD-PF3
                 MOVE SCR-INST-HCM TO SCR-INST
           ELSE
                 MOVE SCR-INST-HKY TO SCR-INST.
       EXT-DESSCRTRL.
           EXIT.

       PRO-CONF SECTION.
       INI-PRO-CONF.
      * PTC-INI-AUT
           IF SCR-OFRM-SRV AND
               SCR-CONF NOT > SPACES
               MOVE SPACES TO FRM-MENS.
      * PTC-FIN-AUT
           IF FRM-MENS NOT > SPACES
               IF SCR-CONF NOT > SPACES
                   GO TO FIN-PRO-CONF
               ELSE
                   MOVE SCR-CONF TO FRM-MENS
           ELSE
               IF FRM-MEN1 NOT > SPACES
                   MOVE SCR-CONF TO FRM-MEN1.
           PERFORM PRO-KEY-OPD.
           PERFORM PRO-FLD-OPD.
           PERFORM FST-MSG.
           PERFORM SCR-MSSG.
           IF SCR-STAT = SCR-STAT-MOD
               PERFORM EDT-KEY-OPD
               PERFORM EDT-FLD-OPD.
           PERFORM SCR-PUTA.
           MOVE SCR-INST-GCF TO SCR-INST.
           PERFORM SCR-EXIT.
       FIN-PRO-CONF.
           EXIT.

       SCR-GCNF SECTION.
       INI-SCR-GCNF.
           MOVE SCR-NMAP TO FRM-NAME.
           MOVE SCR-NLIB TO FRM-NLIB.
           MOVE FRM-GET-ALL TO FRM-CMND.
           PERFORM GNS-PRO-FRM.
           IF NOT (FRM-FFLD = FRM-FFLD-RET  OR FRM-FFLD-PF10 OR
                              FRM-FFLD-PF12 OR FRM-FFLD-PF3  OR
                              FRM-FFLD-PF4)
               MOVE 'PFSINV    ' TO MSG-COD-MENS
               MOVE 'GNS' TO MSG-COD-SIST
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO OPD-GLS-MEN2
               MOVE SCR-CONF     TO OPD-GLS-MEN1
               PERFORM FST-MSG
               PERFORM SCR-PUTA
               PERFORM SCR-EXIT.
           MOVE FRM-DFLD TO OPD-FLD.
           MOVE FRM-FFLD TO SCR-FFLD.
           IF FRM-FFLD = FRM-FFLD-PF3
               MOVE SCR-VFLD-NOT TO SCR-VFLD
           ELSE
           IF FRM-FFLD = FRM-FFLD-RET OR FRM-FFLD-PF10 OR FRM-FFLD-PF4
               MOVE SCR-VFLD-YES TO SCR-VFLD
               PERFORM VAL-NUM-KEY-OPD
               PERFORM VAL-NUM-FLD-OPD
           ELSE
           IF FRM-FFLD = FRM-FFLD-PF12
               MOVE SCR-STPP TO SCR-STAT
               IF SCR-STAT = SCR-STAT-MOD
                   PERFORM VAL-NUM-KEY-OPD
                   PERFORM VAL-NUM-FLD-OPD
                   PERFORM SCR-TRL
               ELSE
                   MOVE SCR-VFLD-NOT TO SCR-VFLD.
       FIN-SCR-GCNF.
           EXIT.

      * PGM-EBR-ALL SECTION.
      * INI-PGM-EBR-ALL.
      *     MOVE FIO-EBR-ALL TO FIO-CMND.
      *     PERFORM DAP-FIO-OPD.
      * FIN-PGM-EBR-ALL.
      *     EXIT.

       COPY DAPBUOP4.
       COPY GNSBVNUM.
       COPY DAPBFOPD.
       COPY GNSBFMSG.
       COPY GNSBGSYS.
       COPY GNSBGDTC.
      * PTC-INI-AUT
      * COPY GNSBGFRM.
       COPY GNSBG3CF.
       COPY GNSBGQUE.
       COPY GNSBGTSK.
      * PTC-FIN-AUT
      * se incorpora copy, gnsbGmsX en pgm, pues esta solo en deso
      *COPY GNSBGMSG.

      * Obtencion de Mensaje
       GET-MSG SECTION.
       INI-GET-MSG.
           MOVE SCR-SIST TO FIO-SIST.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM GNS-FIO-MSG.
           IF FIO-STAT-OKS AND MSG-IND-VIGE NOT = 'N'
               GO TO FIN-GET-MSG.
           IF MSG-COD-SIST NOT = SCR-SIST
               MOVE MSG-COD-SIST TO FIO-SIST
               MOVE FIO-GET-KEY TO FIO-CMND
               PERFORM GNS-FIO-MSG.
           IF NOT FIO-STAT-OKS
               MOVE MSG-COD-MENS           TO MSG-GLS-DES1
               MOVE ' MENSAJE INEXISTENTE' TO MSG-GLS-DES2
           ELSE
               IF MSG-IND-VIGE = 'N'
                   MOVE MSG-COD-MENS          TO MSG-GLS-DES1
                   MOVE ' MENSAJE NO VIGENTE' TO MSG-GLS-DES2.
       FIN-GET-MSG.
           IF SCR-CNAL > SPACES
               MOVE MSG-GLS-DATA IN MSG TO MSG-GLS-DACN
               IF MSG-COD-DAC2 > SPACES
                    MOVE 'CN'                TO MSG-COD-INDC
                    MOVE 'CN'                TO MSG-COD-SIDC
                    MOVE MSG-GLS-DESC IN MSG TO MSG-GLS-CICF-DESC
                    MOVE MSG-COD-DAC2        TO MSG-COD-DEST
                    MOVE SPACES              TO MSG-COD-DAC2
                    MOVE MSG-GLS-DACN        TO MSG-GLS-CICF-DATA
                    MOVE FIO-SIST            TO MSG-COD-SISC
                    MOVE MSG-COD-MENS        TO MSG-COD-CODC
                    PERFORM SET-PNT-MSG
                    MOVE MSG-CNAL-RED-DESC   TO MSG-GLS-DESC
                    MOVE MSG-CNAL-RED-DATA   TO MSG-GLS-DATA.
       EXT-GET-MSG.
           EXIT.

       SET-PNT-MSG SECTION.
       INI-SET-PNT-MSG.
           IF MSG-COD-CODC-01 NOT > SPACES
               MOVE '.' TO MSG-COD-CODC-01.
           IF MSG-COD-CODC-02 NOT > SPACES
               MOVE '.' TO MSG-COD-CODC-02.
           IF MSG-COD-CODC-03 NOT > SPACES
               MOVE '.' TO MSG-COD-CODC-03.
           IF MSG-COD-CODC-04 NOT > SPACES
               MOVE '.' TO MSG-COD-CODC-04.
           IF MSG-COD-CODC-05 NOT > SPACES
               MOVE '.' TO MSG-COD-CODC-05.
           IF MSG-COD-CODC-06 NOT > SPACES
               MOVE '.' TO MSG-COD-CODC-06.
           IF MSG-COD-CODC-07 NOT > SPACES
               MOVE '.' TO MSG-COD-CODC-07.
           IF MSG-COD-CODC-08 NOT > SPACES
               MOVE '.' TO MSG-COD-CODC-08.
           IF MSG-COD-CODC-09 NOT > SPACES
               MOVE '.' TO MSG-COD-CODC-09.
           IF MSG-COD-CODC-10 NOT > SPACES
               MOVE '.' TO MSG-COD-CODC-10.
           IF MSG-COD-CODC-11 NOT > SPACES
               MOVE '.' TO MSG-COD-CODC-11.
           IF MSG-COD-CODC-12 NOT > SPACES
               MOVE '.' TO MSG-COD-CODC-12.
       FIN-SET-PNT-MSG.
           EXIT.

       COPY GNSBEKEY.
       COPY GNSBIABT.
       COPY GNSBBTAB.
       COPY GNSBVCOD.
       COPY GNSBVTAB.
       COPY GNSBFTAB.
       COPY GNSBBMSC.
       COPY GNSBVIND.
       COPY GNSBVMSC.
       COPY GNSBFMSC.
       COPY GNSBVIDC.
       COPY GNSBPVRF.
       COPY GNSBEGLS.
       COPY GNSBGFEC.
       COPY GNSBGHOY.
       COPY TABBBOFI.
       COPY TABBVOFI.
       COPY TABBFOFI.
       COPY TABBBUSR.
       COPY TABBVUSR.
       COPY TABBFUSR.

      *<<<< EOF
      *<<<< PGM_PU
      * ISP-INI 31-07-1998 INICIALIZA CAMPOS DE REGISTROS
       COPY DAPBCAUT.
       COPY DAPBCCAD.
       COPY DAPBCIMP.
       COPY DAPBCJNL.
       COPY DAPBCLIC.
       COPY DAPBCLIQ.
       COPY DAPBCOPD.
       COPY DAPBCRCC.
       COPY DAPBCVEN.
      * ISP-FIN 31-07-1998 INICIALIZA CAMPOS DE REGISTROS
      *>>>>
      *OGB-INI 13-ENE-2017 BALANCE OPTIMO DAP
       COPY DAPBGCXS.
      *OGB-FIN 13-ENE-2017 BALANCE OPTIMO DAP
       COPY DAPBGMPT.
      *Entidades de TAB
       COPY TABBFCAM.
      *Entidades de SGC
       COPY SGCBFDBC.
       COPY SGCBFDCC.
       COPY SGCBFDCP.
       COPY SGCBFRCD.
       COPY SGCBGCLI.
      *Entidades de DAP
       COPY DAPBFLIQ.
       COPY DAPBFCAD.
       COPY DAPBFAUT.
       COPY DAPBFPOD.
      * COPY DAPBFCPD.
       COPY DAPBFRCC.
       COPY DAPBFVEN.
      *OGB-INI 13-ENE-2017 BALANCE OPTIMO DAP
      *COPY DAPBG011.
       COPY DAPBG013.
      *OGB-FIN 13-ENE-2017 BALANCE OPTIMO DAP
       COPY DAPBG002.
       COPY DAPBG003.
       COPY DAPBG004.
       COPY GNSBGCAM.
       COPY GNSBGCPT.
       COPY GNSBGSTR.
       COPY GNSBGPES.
      *CIMA-INI 27-MAY-2016 INCONSISTENCIA PLAZO DAP WEB UF
       COPY DAPBGPPD.
       COPY MC2BFPPD.
       COPY DAPBGPLZ.
      *CIMA-FIN 27-MAY-2016 INCONSISTENCIA PLAZO DAP WEB UF

       KEY-LIQ-RDL SECTION.
       INI-KEY-LIQ-RDL.
           IF OPD-COD-STAT IN OPD = 'G'
               MOVE OPD-CIC-GREN IN OPD TO LIQ-CIC-IOPD IN LIQ
               MOVE 1                   TO LIQ-NUM-ILIQ IN LIQ
           ELSE
               MOVE OPD-CIC-IOPD IN OPD TO LIQ-CIC-IOPD IN LIQ
               MOVE 1                   TO LIQ-NUM-ILIQ IN LIQ.
       FIN-KEY-LIQ-RDL.
           EXIT.

      *ADA-INI 18-AGO-2000 DAPR0051
       BLOQUEAR-STA SECTION.
       INI-BLOQUEAR-STA.
           MOVE SPACES TO MSG-COD-MENS.
      *Pregunta si realizo validacion contra sobretasa
           IF SCR-KEY-ISTA > SPACES
               MOVE SCR-KEY-ISTA TO STA-KEY-ISTA IN STA
               MOVE FIO-GET-KEY-UPD TO FIO-CMND
               PERFORM DAP-FIO-STA
               IF FIO-STAT-OKS
      *Si la operacion esta llena y es diferente al DAP en curse
      *entonces el registro STA ya fue utilizado
                   IF STA-IIC-IOPD IN STA > ZEROES AND
                      STA-CAI-IOPD IN STA NOT =
                      OPD-CAI-IOPD IN OPD-FLD AND
                      STA-IIC-IOPD IN STA NOT =
                      OPD-IIC-IOPD IN OPD-FLD
                       MOVE 'STAUTILIZADO' TO MSG-COD-MENS
                       MOVE STA-CIC-IOPD IN STA TO FRM-MEN2
                       GO TO FIN-BLOQUEAR-STA
                   ELSE
                       PERFORM GET-FHOY
                       MOVE HOY-STP-ITRN TO STA-STP-ITRN IN STA
                       MOVE 'M'          TO STA-MSC-TACC IN STA
                       MOVE 'U'          TO STA-MSC-STAT IN STA
                       MOVE SCR-OTRN     TO STA-COD-OTRN IN STA
                       MOVE SCR-USER     TO STA-COD-ATRN IN STA
                       MOVE OPD-CAI-IOPD IN OPD-FLD
                                         TO STA-CAI-IOPD IN STA
                       MOVE OPD-IIC-IOPD IN OPD-FLD
                                         TO STA-IIC-IOPD IN STA
                       MOVE FIO-MOD TO FIO-CMND
                       PERFORM DAP-FIO-STA
                       IF NOT FIO-STAT-OKS
                           MOVE 'STA    NOMOD' TO MSG-COD-MENS
                           MOVE STA-KEY-ISTA IN STA TO FRM-MEN2
                           GO TO FIN-BLOQUEAR-STA
                       ELSE
                           NEXT SENTENCE
               ELSE
                   MOVE 'STA    NOGKU' TO MSG-COD-MENS
                   MOVE SCR-KEY-ISTA TO FRM-MEN2
                   GO TO FIN-BLOQUEAR-STA.
       FIN-BLOQUEAR-STA.
           EXIT.
      *ADA-FIN 18-AGO-2000 DAPR0051

      * COPY GNSBGTDQ.
      *Modulo Generico Manejo de Transient Data
      * Le falta el accesar transient datas de otros CICS
       GNS-CHK-TDQ SECTION.
       INI-GNS-CHK-TDQ.
           MOVE TDQ-GET TO TDQ-CMND.
           PERFORM GNS-PRO-TDQ.
       FIN-GNS-CHK-TDQ.
           EXIT.

      **************************************************************
       GNS-ERR-TDQ SECTION.
       INI-GNS-ERR-TDQ.
           EXEC CICS HANDLE CONDITION
                     IOERR   (GNS-TDQ-IOE)
                     LENGERR (GNS-TDQ-LEN)
                     NOSPACE (GNS-TDQ-NOS)
                     NOTOPEN (GNS-TDQ-NOT)
                     QIDERR  (GNS-TDQ-QID)
                     QZERO   (GNS-TDQ-QZE)
           END-EXEC.
       FIN-GNS-ERR-TDQ.
           EXIT.

       GNS-TDQ-IOE.
           MOVE 'IOERR EN TRANSIENT DATA ' TO FRM-MEN1.
           MOVE TDQ-COLA TO FRM-MEN2.
           GO TO TDQ-ERR-ABT.

       GNS-TDQ-LEN.
           MOVE 'ERROR DE LARGO EN TRANSIENT DATA ' TO FRM-MEN1.
           MOVE TDQ-COLA TO FRM-MEN2.
           GO TO TDQ-ERR-ABT.

       GNS-TDQ-NOS.
           MOVE 'ERROR DE ESPACIO EN TRANSIENT DATA ' TO FRM-MEN1.
           MOVE TDQ-COLA TO FRM-MEN2.
           GO TO TDQ-ERR-ABT.

       GNS-TDQ-NOT.
           MOVE 'ERROR : TRANSIENT DATA NO ABIERTA ' TO FRM-MEN1.
           MOVE TDQ-COLA TO FRM-MEN2.
           GO TO TDQ-ERR-ABT.

       GNS-TDQ-QID.
           MOVE 'NO EXISTE TRANSIENT DATA ' TO FRM-MEN1.
           MOVE TDQ-COLA TO FRM-MEN2.
           GO TO TDQ-ERR-ABT.

       GNS-TDQ-QZE.
           MOVE TDQ-STAT-QZE TO TDQ-STAT.
           GO TO FIN-GNS-PRO-TDQ.

       TDQ-ERR-ABT.
           MOVE 'GNSPPABT' TO SYS-PROG.
           MOVE +79        TO SYS-TCMA.
      *    MOVE FRM-MENS   TO SYS-CMMA.
           EXEC CICS XCTL
                     PROGRAM(SYS-PROG)
                     COMMAREA(SYS-MENS)
                     LENGTH(SYS-TCMA)
           END-EXEC.

       GNS-PRO-TDQ SECTION.
       INI-GNS-PRO-TDQ.
           MOVE TDQ-STAT-OKS TO TDQ-STAT.
           IF TDQ-CMND = TDQ-PUT
               GO TO GNS-PUT-TDQ
           ELSE
           IF TDQ-CMND = TDQ-GET
               GO TO GNS-GET-TDQ
           ELSE
           IF TDQ-CMND = TDQ-DEL
               GO TO GNS-DEL-TDQ.
           MOVE 'Comando invalido :' TO TDQ-MEN1.
           MOVE TDQ-CMND             TO TDQ-MEN2.
           EXEC CICS XCTL
                     PROGRAM('GNSPPABT')
                     COMMAREA(TDQ-MENS)
                     LENGTH(+79)
           END-EXEC.
       GNS-PUT-TDQ.
           EXEC CICS WRITEQ TD
                     QUEUE(TDQ-COLA)
                     FROM(TDQ-ITEM)
                     LENGTH(TDQ-LITM)
           END-EXEC.
       FIN-GNS-PUT-TDQ.
           GO TO FIN-GNS-PRO-TDQ.

       GNS-GET-TDQ.
           EXEC CICS READQ TD
                     QUEUE(TDQ-COLA)
                     INTO(TDQ-ITEM)
                     LENGTH(TDQ-LITM)
           END-EXEC.
       FIN-GNS-GET-TDQ.
           GO TO FIN-GNS-PRO-TDQ.

       GNS-DEL-TDQ.
           EXEC CICS DELETEQ TD
                     QUEUE(TDQ-COLA)
           END-EXEC.
       FIN-GNS-DEL-TDQ.
           GO TO FIN-GNS-PRO-TDQ.
       FIN-GNS-PRO-TDQ.
           EXIT.

       COPY GNSBPFEC.

       CPT-NOMB SECTION.
       INI-CPT-NOMB.
           MOVE DBC-GLS-NOMC IN DBC TO CPT-STRN.
           PERFORM CPT-BLKS.
           MOVE CPT-STRN            TO DBC-GLS-NOMC IN DBC.
       FIN-CPT-NOMB.
           EXIT.

       GET-RCC-OPD SECTION.
       INI-GET-RCC-OPD.
           MOVE SPACES TO MSG-COD-MENS.
           IF DBC-NUM-ICLI IN OPD-FLD > ZEROES
      *IDC-CLI Busca Cliente por medio de IdC
               MOVE DBC-NUM-ICLI IN OPD-FLD TO DBC-NUM-ICLI IN DBC
               MOVE DBC-IND-ICLI IN OPD-FLD TO DBC-IND-ICLI IN DBC
               MOVE DBC-GLS-ICLI IN OPD-FLD TO DBC-GLS-ICLI IN DBC
               MOVE 'DBC-IDC-ICLI' TO FIO-AKEY
               MOVE FIO-GET-KEY    TO FIO-CMND
               PERFORM GET-CLI
               IF MSG-COD-MENS > SPACES
                   MOVE SPACES       TO DBC-GLS-NOMC IN OPD-FLD
                   MOVE FIO-STAT-NEX TO FIO-STAT
                   MOVE '39'         TO PGM-STAT-DBC
                   MOVE MSG-GLS-DESC TO FRM-MENS
               ELSE
                   MOVE '00'         TO PGM-STAT-DBC
                   PERFORM CPT-NOMB
           ELSE
           IF DBC-GLS-NOMC IN OPD-FLD > SPACES
      *NOM-CLI Busca Cliente por medio del Nombre
               MOVE DBC-GLS-NOMC IN OPD-FLD TO STR-GLS-GSTR
               PERFORM STR-UNS
               MOVE STR-GLS-FUNS IN STR-VARI(1) TO DBC-GLS-APAT IN DBC
               MOVE STR-GLS-FUNS IN STR-VARI(2) TO DBC-GLS-AMAT IN DBC
               MOVE STR-GLS-FUNS IN STR-VARI(3) TO DBC-GLS-NOMB IN DBC
               MOVE 'DBC-GLS-NOMC' TO FIO-AKEY
               MOVE FIO-GET-NLS    TO FIO-CMND
               PERFORM GET-CLI
               IF MSG-COD-MENS > SPACES
                   MOVE ZEROES       TO DBC-NUM-ICLI IN OPD-FLD
                   MOVE SPACES       TO DBC-VRF-ICLI IN OPD-FLD
                   MOVE SPACES       TO DBC-IND-ICLI IN OPD-FLD
                   MOVE SPACES       TO DBC-GLS-ICLI IN OPD-FLD
                   MOVE FIO-STAT-NEX TO FIO-STAT
                   MOVE '39'         TO PGM-STAT-DBC
                   MOVE MSG-GLS-DESC TO FRM-MENS
               ELSE
                   MOVE '00'         TO PGM-STAT-DBC
                   MOVE DBC-GLS-NOMC IN DBC TO CPT-STRN
                   PERFORM CPT-BLKS
                   MOVE CPT-STRN     TO DBC-GLS-NOMC IN DBC.

           IF MSG-COD-MENS NOT > SPACES
               MOVE DBC-CIC-ICLI IN DBC TO RCC-CIC-ICLI IN RCC
               MOVE HIGH-VALUES         TO RCC-CIC-IOPD IN RCC
               PERFORM SET-CAI-RCC
               MOVE FIO-GET-LEQ TO FIO-CMND
               PERFORM DAP-FIO-RCC
               IF DBC-CIC-ICLI IN DBC NOT = RCC-CIC-ICLI IN RCC
                   MOVE 'DAP' TO MSG-COD-SIST
                   MOVE 'OPDNORCC' TO MSG-COD-MENS
                   PERFORM GET-MSG
                   MOVE MSG-GLS-DESC TO FRM-MENS
               ELSE
                   MOVE RCC-CAI-IOPD IN RCC TO OPD-CAI-IOPD IN OPD-FLD
                   MOVE RCC-IIC-IOPD IN RCC TO OPD-IIC-IOPD IN OPD-FLD
                   MOVE RCC-CIC-IOPD IN RCC TO OPD-CIC-IOPD IN OPD.
       FIN-GET-RCC-OPD.
           EXIT.

       SET-CAI-RCC SECTION.
       INI-SET-CAI-RCC.
           IF SCR-NEMO = 'EXCACTOPD   '
              MOVE '0711' TO RCC-CAI-IOPD IN RCC
           ELSE
              IF SCR-NEMO = 'OPDACTOPD   '
                 MOVE '0710' TO RCC-CAI-IOPD IN RCC.
       FIN-SET-CAI-RCC.
           EXIT.

       GET-CUR-RCC SECTION.
       INI-GET-CUR-RCC.
           MOVE OPD-CIC-IOPD IN OPD TO RCC-CIC-IOPD IN RCC.
           MOVE 'RCC-KEY-IOPD' TO FIO-AKEY.
           MOVE FIO-GET-NLS    TO FIO-CMND.
           PERFORM DAP-FIO-RCC.
           IF NOT (FIO-STAT-OKS AND
                  OPD-CIC-IOPD IN OPD = RCC-CIC-IOPD IN RCC)
                  MOVE '23' TO FIO-STAT.
           MOVE FIO-STAT TO PGM-STAT-RCC.
           IF FIO-STAT-OKS
               MOVE 1 TO WSS-TOT-CLI
      *AFRI-INI 13-ABR-2011 INTEGRACION MC2
               IF DBC-IND-ICLI IN OPD-FLD = 'M'
                  PERFORM BUS-MUL-IDC-MC2.
      *AFRI-FIN 13-ABR-2011 INTEGRACION MC2

       FIN-GET-CUR-RCC.
           EXIT.

       GET-NXT-RCC SECTION.
       INI-GET-NXT-RCC.
           MOVE SPACES TO MSG-COD-SIST.
           MOVE SPACES TO MSG-COD-MENS.
           MOVE 'RCC-KEY-IOPD' TO FIO-AKEY.
           MOVE FIO-GET-NXT TO FIO-CMND.
           PERFORM DAP-FIO-RCC.
           IF FIO-STAT-OKS AND
              OPD-CIC-IOPD IN OPD = RCC-CIC-IOPD IN RCC
                ADD 1 TO WSS-TOT-CLI
      *AFRI-INI 13-ABR-2011 INTEGRACION MC2
                PERFORM BUS-MUL-IDC-MC2
      *AFRI-FIN 13-ABR-2011 INTEGRACION MC2
                MOVE RCC-CIC-ICLI IN RCC TO
                           WSS-BKP-CIC-ICLI IN WSS-VARI
                MOVE RCC TO WSS-RCC-2
                MOVE 'M' TO SCR-IND-MCLI
                MOVE 'RCC-KEY-IOPD' TO FIO-AKEY
                MOVE FIO-GET-NXT TO FIO-CMND
                PERFORM DAP-FIO-RCC
                IF FIO-STAT-OKS AND
                    OPD-CIC-IOPD IN OPD = RCC-CIC-IOPD IN RCC
                    ADD 1 TO WSS-TOT-CLI
                    PERFORM GET-CUR-RCC
                ELSE
                    NEXT SENTENCE
           ELSE
                MOVE SPACES TO SCR-IND-MCLI
                PERFORM GET-CUR-RCC.
       FIN-GET-NXT-RCC.
           EXIT.

       GET-CUR-AUT SECTION.
       INI-GET-CUR-AUT.
           MOVE 'CAD-KEY-ICAD' TO FIO-AKEY.
           MOVE 1              TO CAD-NUM-ICAD IN AUT.
           MOVE FIO-GET-KEY TO FIO-CMND.
           IF (SCR-CMND = 'RDL' OR 'RLR' OR 'MDA' OR 'CON') AND
               OPD-CIC-GREN IN OPD > SPACES
               MOVE OPD-CIC-GREN IN OPD TO CAD-CIC-IOPD IN AUT
               MOVE '001'               TO CAD-NUM-ILIQ IN AUT
           ELSE
               MOVE OPD-CIC-IOPD IN OPD TO CAD-CIC-IOPD IN AUT
               MOVE 'AUT'               TO CAD-NUM-ILIQ IN AUT.
           PERFORM DAP-FIO-AUT.
           MOVE FIO-STAT TO PGM-STAT-AUT.
       FIN-GET-CUR-AUT.
           EXIT.

       GET-CUR-VEN SECTION.
       INI-GET-CUR-VEN.
           PERFORM CRG-KEY-VEN.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM DAP-FIO-VEN.
           MOVE FIO-STAT TO PGM-STAT-VEN.
       FIN-GET-CUR-VEN.
           EXIT.

       LEE-CLI SECTION.
       INI-LEE-CLI.
           IF DBC-IND-ICLI IN OPD-FLD = 'M'
               GO TO FIN-LEE-CLI.
           MOVE DBC-NUM-ICLI IN OPD-FLD TO DBC-NUM-ICLI IN DBC.
           MOVE DBC-IND-ICLI IN OPD-FLD TO DBC-IND-ICLI IN DBC.
           MOVE DBC-GLS-ICLI IN OPD-FLD TO DBC-GLS-ICLI IN DBC.
           MOVE 'DBC-IDC-ICLI' TO FIO-AKEY.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM SGC-FIO-DBC.
       FIN-LEE-CLI.
           EXIT.

       PUT-RCC SECTION.
       INI-PUT-RCC.
           IF DBC-IND-ICLI IN OPD-FLD = 'M'
               GO TO FIN-PUT-RCC.
           PERFORM CLR-RCC.
      *    busca cic-icli a partir de num-icli.
           MOVE DBC-CIC-ICLI IN DBC     TO RCC-CIC-ICLI IN RCC.
           MOVE OPD-CAI-IOPD IN OPD-FLD TO RCC-CAI-IOPD IN RCC.
           MOVE OPD-IIC-IOPD IN OPD-FLD TO RCC-IIC-IOPD IN RCC.
           MOVE OPD-COD-TOPD IN OPD-FLD TO RCC-COD-TOPD IN RCC.
           MOVE OPD-COD-AOPD IN OPD-FLD TO RCC-COD-AOPD IN RCC.
           MOVE RCC-NUM-DIRE IN OPD-FLD TO RCC-NUM-DIRE IN RCC.
           MOVE 100                     TO RCC-VAL-PRCO IN RCC.
           MOVE RCC TO WSS-RCC-1.
           MOVE FIO-PUT TO FIO-CMND.
           PERFORM DAP-FIO-RCC.
           IF NOT FIO-STAT-OKS
      *        Error inconsistencia en el ingreso : hacer LOGTB e inform
               MOVE FIO-MENS TO FRM-MENS
               PERFORM BCK-OUT.
       FIN-PUT-RCC.
           EXIT.

       CRG-KEY-VEN SECTION.
       INI-CRG-KEY-VEN.
           MOVE OPD-CIC-IOPD IN OPD TO VEN-CIC-IOPD IN VEN.
           MOVE '001'               TO VEN-NUM-IVEN IN VEN.
       FIN-CRG-KEY-VEN.
           EXIT.

       CLR-CAD SECTION.
       INI-CLR-CAD.
           MOVE SPACES TO CAD.
           MOVE ZEROES TO CAD-SGV-LIQU IN CAD.
       FIN-CLR-CAD.
           EXIT.

       CLR-AUT SECTION.
       INI-CLR-AUT.
           MOVE SPACES TO AUT.
           MOVE ZEROES TO CAD-SGV-LIQU IN AUT.
       FIN-CLR-AUT.
           EXIT.

       CLR-RCC SECTION.
       INI-CLR-RCC.
           MOVE SPACES TO RCC.
           MOVE SYS-TSTP TO RCC-STP-ITRN IN RCC.
       FIN-CLR-RCC.
           EXIT.

       CLR-VEN SECTION.
       INI-CLR-VEN.
           MOVE SPACES TO VEN.
           MOVE SYS-TSTP TO RCC-STP-ITRN IN RCC.
       FIN-CLR-VEN.
           EXIT.

       BCK-OUT SECTION.
       INI-BCK-OUT.
           MOVE FIO-BCK-OUT TO FIO-CMND.
      *     PERFORM DAP-FIO-CAD.
           MOVE 'DAP' TO FIO-SIST.
           PERFORM GNS-FIO-TAB.
           IF FIO-STAT-OKS
      *        Para informar que el backout se realizo con exito
               MOVE '49' TO FIO-STAT.
       FIN-BCK-OUT.
           EXIT.

      * BFR-RFSH SECTION.
      * INI-BFR-RFSH.
      *     MOVE 'RCC-KEY-IOPD' TO FIO-AKEY.
      *     MOVE FIO-BFR-RFH    TO FIO-CMND.
      *     PERFORM DAP-FIO-RCC.
      *
      *     MOVE 'OPD-CIC-ISER' TO FIO-AKEY.
      *     MOVE FIO-BFR-RFH    TO FIO-CMND.
      *     PERFORM DAP-FIO-OPD.
      *
      *     MOVE 'OPD-FEC-FREA' TO FIO-AKEY.
      *     MOVE FIO-BFR-RFH    TO FIO-CMND.
      *     PERFORM DAP-FIO-OPD.
      *
      *     MOVE 'OPD-FEC-FCTB' TO FIO-AKEY.
      *     MOVE FIO-BFR-RFH    TO FIO-CMND.
      *     PERFORM DAP-FIO-OPD.
      * FIN-BFR-RFSH.
      *     EXIT.

       FND-KEY-CAD SECTION.
       INI-FND-KEY-CAD.
           MOVE ZEROES TO WSS-TOT-CADV.
           MOVE ZEROES TO WSS-TOT-CAJA.
           MOVE ZEROES TO WSS-TOT-AUTO.
           MOVE ZEROES TO WSS-SGV-SCAD.
           MOVE ZEROES TO WSS-SGV-CAJA.
           MOVE ZEROES TO WSS-SGV-CCTE.
           MOVE SPACES TO WSS-CIC-CCTE.
           MOVE SPACES TO WSS-IND-TCTA.
      *LRH ini 28-JUN-1994
           MOVE ZERO TO WSS-TOT-CADS.
      *LRH fin 28-JUN-1994

           PERFORM FST-CAD-CAD.
           PERFORM DAP-FIO-CAD.
           IF NOT (FIO-STAT-OKS AND
              OPD-CAI-IOPD IN OPD-FLD = CAD-CAI-IOPD IN CAD AND
              OPD-IIC-IOPD IN OPD-FLD = CAD-IIC-IOPD IN CAD AND
              CAD-NUM-ILIQ IN CAD     = ZEROES)
               MOVE '23' TO PGM-STAT-CAD
               GO TO FIN-FND-KEY-CAD.

       LUP-FND-KEY-CAD.
      *LRH ini 28-JUN-1994
           ADD 1 TO WSS-TOT-CADS.
      *LRH fin 28-JUN-1994
      *    sumatoria de montos cargos  (para vrf)
           ADD  CAD-SGV-LIQU IN CAD TO WSS-SGV-SCAD.
           IF CAD-SGV-LIQU IN CAD NOT > ZEROES
               ADD 1 TO WSS-TOT-CADV
               IF WSS-TOT-CADV > 1
                   MOVE SPACES TO WSS-CAD-GLS-MENS
               ELSE
                   MOVE 'DAP' TO MSG-COD-SIST
                   MOVE 'CAD    VACIA' TO MSG-COD-MENS
                   PERFORM GET-MSG
                   MOVE MSG-GLS-DESC TO WSS-CAD-GLS-MENS
                   MOVE CAD-KEY-ICAD IN CAD TO WSS-CAD-KEY-ICAD
                   MOVE CAD-IND-TCAD IN CAD TO WSS-CAD-IND-TCAD
                   MOVE CAD-CAI-ICAD IN CAD TO WSS-CAD-CAI-ICAD
                   MOVE CAD-IIC-ICAD IN CAD TO WSS-CAD-IIC-ICAD.

      *BUS-MSC busca miscelaneo en tabla
           MOVE 'TAB'  TO MSC-COD-SIST.
           MOVE 'TCYA' TO MSC-COD-TMSC IN MSC.
           MOVE CAD-IND-TCAD IN CAD TO MSC-COD-CMSC IN MSC.
           PERFORM BUS-MSC.
           MOVE MSC-COD-DAT2 IN MSC(5) TO WSS-IND-GCAD.
           IF WSS-IND-GCAD = 'A'
      *        incrementa contador cargos 'automaticos' (maximo 1)
               ADD 1 TO WSS-TOT-AUTO
      *        monto de cargo automatico
               MOVE CAD-SGV-LIQU IN CAD TO WSS-SGV-CCTE.

           IF MSC-CIC-MSCL IN MSC = 'TCYACAJA'
      *        incrementa contador cargos 'caja' (maximo 1)
               ADD 1 TO WSS-TOT-CAJA
      *        monto a enterar en 'caja'
               MOVE CAD-SGV-LIQU IN CAD TO WSS-SGV-CAJA
           ELSE
           IF (MSC-CIC-MSCL IN MSC = 'TCYACC'  OR
               MSC-CIC-MSCL IN MSC = 'TCYACA') AND
              WSS-IND-GCAD = 'A'
      *        cuenta cte de cargo
               MOVE CAD-CIC-ICAD IN CAD TO WSS-CIC-CCTE
               IF MSC-CIC-MSCL IN MSC = 'TCYACC'
      *           informa que es cta cte
                  MOVE 'CCT' TO WSS-IND-TCTA
               ELSE
      *           informa que es cta aho
                  MOVE 'AHO' TO WSS-IND-TCTA.

           MOVE FIO-GET-NXT TO FIO-CMND.
           PERFORM DAP-FIO-CAD.
           IF FIO-STAT-OKS AND
              OPD-CAI-IOPD IN OPD-FLD = CAD-CAI-IOPD IN CAD AND
              OPD-IIC-IOPD IN OPD-FLD = CAD-IIC-IOPD IN CAD AND
              CAD-NUM-ILIQ IN CAD     = ZEROES
               MOVE 'M' TO SCR-IND-MCAD
               GO TO LUP-FND-KEY-CAD.
       FIN-LUP-FND-KEY-CAD.
      *     IF SCR-IND-MCAD NOT = 'M'
            PERFORM FST-CAD-CAD.
            PERFORM DAP-FIO-CAD.
      *         MOVE CAD-IND-TCAD IN CAD TO CAD-IND-TCAD IN CAN-FLD
      *         MOVE CAD-CAI-ICAD IN CAD TO CAD-CAI-ICAD IN CAN-FLD
      *         MOVE CAD-IIC-ICAD IN CAD TO CAD-IIC-ICAD IN CAN-FLD.

           MOVE FIO-STAT TO PGM-STAT-CAD.
       FIN-FND-KEY-CAD.
           EXIT.

       FST-CAD-CAD SECTION.
       INI-FST-CAD-CAD.
           MOVE OPD-CAI-IOPD IN OPD-FLD TO CAD-CAI-IOPD IN CAD.
           MOVE OPD-IIC-IOPD IN OPD-FLD TO CAD-IIC-IOPD IN CAD.
           MOVE ZEROES                  TO CAD-NUM-ILIQ IN CAD.
           MOVE SPACES                  TO CAD-NUM-ICAD IN CAD.
           MOVE FIO-GET-NLS TO FIO-CMND.
       FIN-FST-CAD-CAD.
           EXIT.
      *>>>> EOF
      *<<<< EOF_PU

       USPC107 SECTION.
       INI-USPC107.
      *    COPY USPC107.
      *********************************************
      *           MODULO   USPC107                *
      *********************************************
      *     PARRAFO DE LLAMADA RUTINA USDR107     *
      *********************************************
           EXEC CICS LINK PROGRAM('USDR107')
                          COMMAREA (USP-VARIABLES)
                          LENGTH(31)
           END-EXEC.
      *
      *********************************************
      *           FIN   MODULO   USPC107          *
      *********************************************
       FIN-USPC107.
           EXIT.

       COPY TABBVTDU.
      *<<<< INI_BM_FO
      * calcula valores finales por operacion (FO)
      * A = monto retiro
      * VP= valor presente (monto captacion)
      * i = tasa de interes / 100
      * n = numero de retiros (cantidad de vctos)
      * +--------------------+
      * |    VP*(i*(1+i)^n)  |
      * |A = --------------  |
      * |    (1+i)^n - 1)    |
      * +--------------------+
       PRO-VFIN-FO SECTION.
       INI-PRO-VFIN-FO.
           MOVE 0  TO WSS-VAL-TEVC
                      WSS-VAL-SCYA.

      *     MOVE 'LIQCVC NEX' TO MSG-COD-MENS.
      *     MOVE WSS-MSC-TCVE IN WSS-VARI TO FRM-MEN2.
      *JSS-TRC.
      *     MOVE 'INI-PRO-VFIN-FO' TO DSP-GLS-MENS.
      *     PERFORM GNS-DSP-MENS.
      *     PERFORM CHK-SUM-EVC.
      *     IF INT-CMSG > SPACES
      *         GO TO FIN-PRO-VFIN-FO.
      *COL     SUBTRACT WSS-VAL-TEVC FROM OPC-VAL-CRED IN OPC GIVING
      *COL              CVI-VCAP.
      *COL     SUBTRACT WSS-VAL-TEVC FROM OPD-VAL-CAPT IN OPD-FLD GIVING
      *COL              CVI-VCAP.
           MOVE OPD-VAL-CAPT IN OPD-FLD TO CVI-VCAP.
      *JSS-TRC.
      *     MOVE 'CAPITAL CON EL QUE TRABAJARA FO :' TO DSP-GLS-MEN1.
      *     MOVE CVI-VCAP                            TO DSP-SV1-13V4.
      *     PERFORM GNS-DSP-MENS.

           PERFORM BUS-VPER-EVC.
           IF INT-CMSG > SPACES
               GO TO FIN-PRO-VFIN-FO.

           MOVE 1 TO CVI-QTAN.
           MOVE 0 TO CVI-SUMA CVI-FTOR.
           MOVE 1 TO CVI-FOLD CVI-NVVG.
      *COL           MOVE OPC-FEC-FCOL IN OPC TO WSS-FAVC.
           MOVE OPD-NUM-DREA IN OPD-FLD TO WSS-DAVC.
           MOVE OPD-NUM-MREA IN OPD-FLD TO WSS-MAVC.
           MOVE OPD-NUM-SREA IN OPD-FLD TO WSS-SAVC.
           MOVE OPD-NUM-AREA IN OPD-FLD TO WSS-AAVC.
           MOVE OPD-COD-AFER IN OPD-FLD TO INT-AFER.
           IF INT-AFER-YES
               PERFORM CHK-AFER-EVC
               IF INT-CMSG > SPACES
                   GO TO FIN-PRO-VFIN-FO.
       LUP-PRO-VFIN-FO.

      *JSS-TRC.
      *     MOVE 'LUP-PRO-VFIN-FO' TO DSP-GLS-MENS.
      *     PERFORM GNS-DSP-MENS.

           PERFORM BUS-MEVC.
           IF WSS-IMVC = ZEROES
      *JSS    Se acabaron los vencimientos
               GO TO CAL-PRO-VFIN-FO.
           SUBTRACT 1 FROM WSS-VIGU(WSS-IMVC).

      *JSS CALCULAR ENTRE WSS-FAVC y WSS-FMVC.
           MOVE WSS-DAVC TO FEC-DEC1.
           MOVE WSS-MAVC TO FEC-MEC1.
           MOVE WSS-SAVC TO FEC-SEC1.
           MOVE WSS-AAVC TO FEC-AEC1.

           MOVE WSS-DMVC TO FEC-DEC2.
           MOVE WSS-MMVC TO FEC-MEC2.
           MOVE WSS-SMVC TO FEC-SEC2.
           MOVE WSS-AMVC TO FEC-AEC2.

           MOVE FEC-FORM-FEC TO FEC-FORM.
           MOVE FEC-DIF-DIA  TO FEC-CMND.
      *COL PERFORM PRO-FEC.
           PERFORM CAL-FEC.
           IF NOT FEC-STAT-OKS
               MOVE MSG-COD-MENS TO INT-CMSG
               GO TO FIN-PRO-VFIN-FO.
           MOVE FEC-NDIA TO INT-SEPD.

      *JSS-TRC.
      *     MOVE 'FECHAS/EVC' TO DSP-GLS-MENS.
      *     MOVE WSS-FAVC     TO DSP-GLS-MENB.
      *     MOVE WSS-FMVC     TO DSP-GLS-MENC.
      *     MOVE WSS-IMVC     TO DSP-SV2-13V4.
      *     PERFORM GNS-DSP-MENS.
           MOVE WSS-DAVC TO INT-DUNO.
           MOVE WSS-MAVC TO INT-MUNO.
           MOVE WSS-SAVC TO INT-SUNO.
           MOVE WSS-AAVC TO INT-AUNO.
           MOVE WSS-DMVC TO INT-DDOS.
           MOVE WSS-MMVC TO INT-MDOS.
           MOVE WSS-SMVC TO INT-SDOS.
           MOVE WSS-AMVC TO INT-ADOS.
      *COL     MOVE OPC-FEC-FCOL IN OPC-FLD TO INT-FBTV.
           MOVE OPD-FEC-FREA IN OPD-FLD TO INT-FBTV
                                           INT-FCOL.
           MOVE POD-COD-TINT IN POD     TO INT-TIPT.
           MOVE OPD-SGV-TINT IN OPD-FLD TO INT-TINT.
           MOVE OPD-COD-VCAM IN OPD-FLD TO INT-VCAM.

      *    PERFORM OBT-VTIN.
           PERFORM GNS-CAL-INT.
           IF INT-IETB > SPACES AND CVI-NVVG = 1
               MOVE INT-IETB TO WSS-IETB.
      *     IF INT-CVTI > SPACES AND INT-TFPR = 'F'
      *         MOVE WSS-DMVC TO INT-DDMA
      *         MOVE WSS-MMVC TO INT-MDMA
      *         MOVE WSS-SMVC TO INT-SDMA
      *         MOVE WSS-AMVC TO INT-ADMA.

      *JSS-TRC.
      *     MOVE 'DIAS SEPA./T.INTERES :' TO DSP-GLS-MENS.
      *     MOVE FEC-NDIA                 TO DSP-SV1-13V4.
      *     MOVE INT-TIPE                 TO DSP-SV2-13V4.
      *     PERFORM GNS-DSP-MENS.

           IF INT-CMSG > SPACES
               MOVE FRM-SUAR-MAL TO FRM-SUAR
      *GET-MSG Busca mensaje en tabla
               MOVE 'DAP' TO MSG-COD-SIST
               MOVE INT-CMSG TO MSG-COD-MENS
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MEN1
               MOVE INT-MEN2 TO FRM-MEN2
               GO TO FIN-PRO-VFIN-FO.

           COMPUTE CVI-SUMA = CVI-SUMA + (1 + INT-TIPE) ** CVI-NVVG.
           COMPUTE CVI-FTOR = CVI-FTOR +
                              1 / (CVI-FOLD * (1 + INT-TIPE)).
           COMPUTE CVI-FOLD = CVI-FOLD * (1 + INT-TIPE).
           IF CVI-QTAN = CVI-NVVG
               MOVE INT-TIPE TO CVI-TIQN.

           ADD 1 TO CVI-NVVG.
      *    MOVE WSS-FFPV TO WSS-FAVC.
           MOVE WSS-DFPV(WSS-IMVC) TO WSS-DAVC.
           MOVE WSS-MFPV(WSS-IMVC) TO WSS-MAVC.
           MOVE WSS-SFPV(WSS-IMVC) TO WSS-SAVC.
           MOVE WSS-AFPV(WSS-IMVC) TO WSS-AAVC.

           IF WSS-VIGU(WSS-IMVC) = ZEROES
               GO TO LUP-PRO-VFIN-FO.
      *JSS Desplazar WSS-FPVC(WSS-IMVC) en WSS-SEVE(WSS-IMVC) segun
      *                                    WSS-UTSV(WSS-IMVC)
      *    Considerando analisis de feriado si corresponde.
           IF WSS-UTSV(WSS-IMVC) = 'D'
               MOVE FEC-SUM-DIA        TO FEC-CMND
               MOVE WSS-SEVE(WSS-IMVC) TO FEC-NDIA
           ELSE
           IF WSS-UTSV(WSS-IMVC) = 'M'
               MOVE FEC-SUM-MES        TO FEC-CMND
               MOVE WSS-SEVE(WSS-IMVC) TO FEC-NMES
           ELSE
           IF WSS-UTSV(WSS-IMVC) = 'A'
               MOVE FEC-SUM-ANO        TO FEC-CMND
               MOVE WSS-SEVE(WSS-IMVC) TO FEC-NANO
           ELSE
               MOVE 'INTIPERINV' TO INT-CMSG
               GO TO FIN-PRO-VFIN-FO.

           MOVE WSS-DPVC(WSS-IMVC) TO FEC-ITM1.
           MOVE WSS-MPVC(WSS-IMVC) TO FEC-ITM2.
           MOVE WSS-SPVC(WSS-IMVC) TO FEC-ITM3.
           MOVE WSS-APVC(WSS-IMVC) TO FEC-ITM4.
           MOVE FEC-FORM-FEC TO FEC-FORM.
      *JSS PERFORM CAL-FEC
      *COL     PERFORM PRO-FEC.
           PERFORM CAL-FEC.
           IF NOT FEC-STAT-OKS
               MOVE MSG-COD-MENS TO INT-CMSG
               GO TO FIN-PRO-VFIN-FO.

           MOVE WSS-DVEN(WSS-IMVC) TO CVI-DVEN.
           IF NOT ((WSS-UTSV(WSS-IMVC) = 'M' OR 'A') AND
              CVI-DVEN > ZEROES AND FEC-ITM1 < CVI-DVEN)
               GO TO FER-PRO-VFIN-FO.
           IF CVI-DVEN > FEC-DMES(FEC-ITM2)
               MOVE FEC-DMES(FEC-ITM2) TO FEC-ITM1
           ELSE
               MOVE CVI-DVEN TO FEC-ITM1.
           IF FEC-ITM2 = 2
               DIVIDE FEC-ITM4 BY 4 GIVING FEC-REST REMAINDER FEC-REST
               IF (FEC-REST NOT = 0) AND (FEC-ITM1 > 28)
                   MOVE 28 TO FEC-ITM1.
       FER-PRO-VFIN-FO.
           MOVE FEC-ITM1 TO WSS-DPVC(WSS-IMVC).
           MOVE FEC-ITM2 TO WSS-MPVC(WSS-IMVC).
           MOVE FEC-ITM3 TO WSS-SPVC(WSS-IMVC).
           MOVE FEC-ITM4 TO WSS-APVC(WSS-IMVC).

           IF NOT INT-AFER-YES
               GO TO FPV-PRO-VFIN-FO.

           MOVE FEC-FBLK-N  TO FEC-FBLK.
           MOVE FEC-CHOY-N  TO FEC-CHOY.
           MOVE FEC-VHBL-S  TO FEC-VHBL.
           MOVE FEC-VAL-FEC TO FEC-CMND.
      *JSS PERFORM CAL-FEC.
      *COL     PERFORM PRO-FEC.
      *ISP
      *     PERFORM CAL-FEC.
           PERFORM PRO-FEC.
           IF NOT FEC-STAT-OKS AND NOT FEC-STAT-FER
               MOVE MSG-COD-MENS TO INT-CMSG
               GO TO FIN-PRO-VFIN-FO.
           IF NOT FEC-STAT-FER
               GO TO FPV-PRO-VFIN-FO.

           MOVE FEC-FORM-FEC TO FEC-FORM.
           MOVE FEC-SIG-HBL  TO FEC-CMND.
      *JSS PERFORM CAL-FEC.
      *COL     PERFORM PRO-FEC.
           PERFORM CAL-FEC.
           IF NOT FEC-STAT-OKS
               MOVE MSG-COD-MENS TO INT-CMSG
               GO TO FIN-PRO-VFIN-FO.
       FPV-PRO-VFIN-FO.
      *JSS-TRC.
      *     MOVE 'FPV-PRO-VFIN-FO' TO DSP-GLS-MENS.
      *     PERFORM GNS-DSP-MENS.

           MOVE FEC-ITM1 TO WSS-DFPV(WSS-IMVC).
           MOVE FEC-ITM2 TO WSS-MFPV(WSS-IMVC).
           MOVE FEC-ITM3 TO WSS-SFPV(WSS-IMVC).
           MOVE FEC-ITM4 TO WSS-AFPV(WSS-IMVC).
           GO TO LUP-PRO-VFIN-FO.

       CAL-PRO-VFIN-FO.
      *JSS-TRC.
      *     MOVE 'CAL-PRO-VFIN-FO' TO DSP-GLS-MENS.
      *     PERFORM GNS-DSP-MENS.
      *JSS
           MOVE 'P' TO INT-OPEC.
           IF INT-OPEC = 'D'
      *JSS     COMPUTE CVI-VCAP ROUNDED = CVI-VFIN / CVI-SUMA
               DIVIDE CVI-VFIN BY CVI-SUMA GIVING CVI-VCAP ROUNDED
           ELSE
      *JSS     COMPUTE CVI-VFIN ROUNDED = CVI-VCAP * CVI-SUMA.
      *JSS     COMPUTE CVI-VFIN ROUNDED = CVI-VCAP / CVI-FTOR.
               DIVIDE CVI-VCAP BY CVI-FTOR GIVING CVI-VFIN ROUNDED.
      *Se redondea y se deja sin decimales el valor final
           IF SCR-CIC-TVAL = '0'
             MOVE 'S' TO WSS-PESO
           ELSE
             MOVE 'N' TO WSS-PESO.
           IF WSS-PESO-SI
               MOVE CVI-VFIN TO PES-SGV-DECI IN PES-VARI
               PERFORM PES-SCTV
               MOVE PES-SGV-ENTE IN PES-VARI TO CVI-VFIN.
      *
      *CALCULO DE INTERES SOBRE EL VALOR CAPITAL
      *     MULTIPLY CVI-VCAP BY CVI-TIQN GIVING CVI-VCAP.
      *RESTA EL SALDO YA AMORTIZADO PARA EL CALCULO DE LOS INTERESES
      *COL     SUBTRACT WSS-VAL-SCYA FROM OPC-VAL-CRED IN OPC
      *COL              GIVING WSS-CVI-TCAP.
      *COL     SUBTRACT WSS-VAL-SCYA FROM OPD-VAL-CAPT IN OPD-FLD
      *COL              GIVING WSS-CVI-TCAP.
      *COL     MULTIPLY WSS-CVI-TCAP BY CVI-TIQN GIVING CVI-VCAP ROUNDED
           MULTIPLY OPD-VAL-CAPT IN OPD-FLD BY CVI-TIQN GIVING
                    CVI-VCAP ROUNDED.
           IF CVI-VCAP NOT > CVI-VFIN
               SUBTRACT CVI-VCAP FROM CVI-VFIN GIVING CVI-VCAP
           ELSE
               ADD CVI-VCAP      TO   WSS-CVI-IDNI
               SUBTRACT CVI-VFIN FROM WSS-CVI-IDNI
               MOVE 0 TO CVI-VCAP.
       FIN-PRO-VFIN-FO.
           EXIT.

       BUS-VPER-EVC SECTION.
       INI-BUS-VPER-EVC.
      *JSS-TRC.
      *     MOVE 'INI-BUS-VPER-EVC' TO DSP-GLS-MENS.
      *     PERFORM GNS-DSP-MENS.
           MOVE 0 TO WSS-I.
       LUP-BUS-VPER-EVC.
      *JSS-TRC.
      *     MOVE 'LUP-BUS-VPER-EVC' TO DSP-GLS-MENS.
      *     PERFORM GNS-DSP-MENS.

           ADD 1 TO WSS-I.
           IF WSS-I > WSS-MEFO
               GO TO FIN-BUS-VPER-EVC.

      *COL     MOVE WSS-REVC(WSS-I) TO EVC.

      *COL     MOVE EVC-IND-UTSV IN EVC TO INT-IPER.
           MOVE OPD-IND-SEVE IN OPD-FLD TO INT-IPER.

      *COL     MOVE EVC-NUM-DPVE IN EVC TO CVI-DVEN.
           MOVE 0 TO CVI-DVEN.

           PERFORM PRO-IPER.
           IF INT-CMSG > SPACES
               GO TO FIN-BUS-VPER-EVC.
      *COL     MOVE EVC-NUM-SEVE IN EVC TO WSS-SEVE(WSS-I).
           MOVE OPD-NUM-SEVE IN OPD-FLD TO WSS-SEVE(WSS-I).

           MOVE INT-IPER            TO WSS-UTSV(WSS-I).
      *COL     MOVE EVC-NUM-VIGU IN EVC TO WSS-VIGU(WSS-I).
           MOVE FRM-NUM-TVEN IN OPD-FLD TO WSS-VIGU(WSS-I).

      *COL     MOVE EVC-NUM-DPVC IN EVC TO WSS-DPVC(WSS-I).
      *COL     MOVE EVC-NUM-MPVC IN EVC TO WSS-MPVC(WSS-I).
      *COL     MOVE EVC-NUM-SPVC IN EVC TO WSS-SPVC(WSS-I).
      *COL     MOVE EVC-NUM-APVC IN EVC TO WSS-APVC(WSS-I).
           MOVE OPD-NUM-DPVC IN OPD-FLD TO WSS-DPVC(WSS-I).
           MOVE OPD-NUM-MPVC IN OPD-FLD TO WSS-MPVC(WSS-I).
           MOVE OPD-NUM-SPVC IN OPD-FLD TO WSS-SPVC(WSS-I).
           MOVE OPD-NUM-APVC IN OPD-FLD TO WSS-APVC(WSS-I).
           MOVE WSS-FPVC(WSS-I) TO WSS-FFPV(WSS-I).
           MOVE CVI-DVEN        TO WSS-DVEN(WSS-I).

      *Diferencia en dias entre Fecha Colocacion y EVC-FEC-FPVC
      *     MOVE OPC-NUM-DCOL IN OPC TO FEC-DEC1.
      *     MOVE OPC-NUM-MCOL IN OPC TO FEC-MEC1.
      *     MOVE OPC-NUM-SCOL IN OPC TO FEC-SEC1.
      *     MOVE OPC-NUM-ACOL IN OPC TO FEC-AEC1.
      *     MOVE EVC-NUM-DPVC IN EVC TO FEC-DEC2.
      *     MOVE EVC-NUM-MPVC IN EVC TO FEC-MEC2.
      *     MOVE EVC-NUM-SPVC IN EVC TO FEC-SEC2.
      *     MOVE EVC-NUM-APVC IN EVC TO FEC-AEC2.
      *     MOVE FEC-FORM-FEC TO FEC-FORM.
      *     MOVE FEC-DIF-DIA  TO FEC-CMND.
      *     PERFORM PRO-FEC.
      *     IF NOT FEC-STAT-OKS
      *         MOVE MSG-COD-MENS TO INT-CMSG
      *         GO TO FIN-BUS-VPER-EVC.
      *     MOVE FEC-NDIA     TO WSS-SPVE(WSS-I).
      *     MOVE 'D'          TO WSS-UTPV(WSS-I).
           GO TO LUP-BUS-VPER-EVC.
       FIN-BUS-VPER-EVC.
           EXIT.

       CHK-AFER-EVC SECTION.
       INI-CHK-AFER-EVC.
           MOVE 0 TO WSS-I.
       LUP-CHK-AFER-EVC.
           ADD 1 TO WSS-I.
           IF WSS-I > WSS-MEFO
               GO TO FIN-CHK-AFER-EVC.

           MOVE WSS-DPVC(WSS-I) TO FEC-ITM1.
           MOVE WSS-MPVC(WSS-I) TO FEC-ITM2.
           MOVE WSS-SPVC(WSS-I) TO FEC-ITM3.
           MOVE WSS-APVC(WSS-I) TO FEC-ITM4.

           MOVE FEC-VHBL-S   TO FEC-VHBL.
           MOVE FEC-FBLK-N   TO FEC-FBLK.
           MOVE FEC-CHOY-N   TO FEC-CHOY.
           MOVE FEC-FORM-FEC TO FEC-FORM.
           MOVE FEC-VAL-FEC  TO FEC-CMND.
           PERFORM PRO-FEC.
           IF (NOT FEC-STAT-OKS) AND (NOT FEC-STAT-FER)
               MOVE MSG-COD-MENS TO INT-CMSG
               GO TO FIN-CHK-AFER-EVC.
           IF FEC-STAT-FER
               MOVE FEC-FORM-FEC TO FEC-FORM
               MOVE FEC-SIG-HBL  TO FEC-CMND
      *               PERFORM PRO-FEC
               PERFORM CAL-FEC
               IF FEC-STAT-OKS
                   MOVE FEC-ITM1 TO WSS-DFPV(WSS-I)
                   MOVE FEC-ITM2 TO WSS-MFPV(WSS-I)
                   MOVE FEC-ITM3 TO WSS-SFPV(WSS-I)
                   MOVE FEC-ITM4 TO WSS-AFPV(WSS-I)
               ELSE
                   MOVE MSG-COD-MENS TO INT-CMSG
                   GO TO FIN-CHK-AFER-EVC.
           GO TO LUP-CHK-AFER-EVC.
       FIN-CHK-AFER-EVC.
           EXIT.

       BUS-MEVC SECTION.
       INI-BUS-MEVC.
      *JSS-TRC.
      *     MOVE 'INI-BUS-MEVC' TO DSP-GLS-MENS.
      *     PERFORM GNS-DSP-MENS.

           MOVE ZEROES TO WSS-FMVC.
           MOVE ZEROES TO WSS-IMVC.
           MOVE 0 TO WSS-I.
       LUP-BUS-MEVC.
      *JSS-TRC.
      *     MOVE 'LUP-BUS-MEVC' TO DSP-GLS-MENS.
      *     PERFORM GNS-DSP-MENS.
           ADD 1 TO WSS-I.
           IF WSS-I > WSS-MEFO
               GO TO FIN-BUS-MEVC.

      *NO SE CONSIDERAN ESTOS TIPOS YA QUE LA RUTINA DE PROYECCION
      *NO AMORTIZA PARA ELLOS Y SE LOS SALTA PARA EL CALCULO DE INTERESE
      *COL     IF WSS-VCVC(WSS-I) = 'IC' OR 'IN' OR 'IF' OR 'FE'
      *COL         GO TO LUP-BUS-MEVC.

           IF (WSS-FFPV(WSS-I) < WSS-FMVC OR WSS-FMVC = ZEROES) AND
              WSS-VIGU(WSS-I) > ZEROES
               MOVE WSS-FFPV(WSS-I) TO WSS-FMVC
               MOVE WSS-I           TO WSS-IMVC.
           GO TO LUP-BUS-MEVC.
       FIN-BUS-MEVC.
           EXIT.

      *<<<< FIN_BM_FO
       GET-VEN-GREN SECTION.
       INI-GET-VEN-GREN.
           MOVE OPD-CIC-GREN IN OPD TO VEN-CIC-IOPD IN VEN.
           MOVE 1                   TO VEN-NUM-IVEN IN VEN.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM DAP-FIO-VEN.
       FIN-GET-VEN-GREN.
           EXIT.

      * MOD-OPD-LIQ SECTION.
      * INI-MOD-OPD-LIQ.
      *     MOVE SCR-OPD-CIC-IOPD TO OPD-CIC-IOPD IN OPD.
      *     MOVE FIO-GET-KEY-UPD TO FIO-CMND.
      *     PERFORM DAP-FIO-OPD.
      *     MOVE 'L' TO OPD-COD-STAT IN OPD.
      *     MOVE FIO-MOD TO FIO-CMND.
      *     PERFORM DAP-FIO-OPD.
      * FIN-MOD-OPD-LIQ.
      *     EXIT.

       COPY SGCBGDOM.
       COPY SGCBGBCE.
       COPY DAPBFPTD.
       COPY DAPBFLIC.
       COPY DAPBFLND.
       COPY DAPBFIMP.
       COPY DAPBFJNL.
       COPY DAPBFSTA.

      * VRF-MCAD-LIQ SECTION.
      * INI-VRF-MCAD-LIQ.
      ** Verifica las CAD grabadas por programa DAPPUCAD
      ** bajo comando IAL
      *     MOVE SPACES TO WSS-MCAD-CMSG.
      *     MOVE 'NO' TO WSS-MCAD-LIQ-CAJA.
      *     MOVE 'NO' TO WSS-MCAD-LIQ-CCMA.
      *     MOVE 'NO' TO WSS-MCAD-LIQ-CTBL.
      *     MOVE 'NO' TO WSS-MCAD-LIQ-PROF.
      *     MOVE 'NO' TO WSS-MCAD-LIQ-IAL.
      *     MOVE SPACES TO WSS-CAI-ZERO-MCAD.
      *     MOVE SPACES TO WSS-IIC-ZERO-MCAD.
      *     MOVE SPACES TO WSS-NUM-ZERO-MCAD.
      *     MOVE ZEROES TO WSS-NUM-MCAD-TZER.
      *     MOVE ZEROES TO WSS-NUM-MCAD-TCAD.
      *     MOVE FIO-GET-NLS TO FIO-CMND.

      * CIC-VRF-MCAD-LIQ.
      *     PERFORM DAP-FIO-CAD.
      *     IF FIO-STAT-OKS AND
      *        LIQ-CIC-IOPD IN LIQ = CAD-CIC-IOPD IN CAD AND
      *        LIQ-NUM-ILIQ IN LIQ = CAD-NUM-ILIQ IN CAD AND
      *        'R'                 = CAD-COD-STAT IN CAD
      *          MOVE 'SI' TO WSS-MCAD-LIQ-IAL
      *          PERFORM CHK-MCAD-LIQ
      *          MOVE FIO-GET-NXT TO FIO-CMND
      *          GO TO CIC-VRF-MCAD-LIQ.

      *     IF WSS-MCAD-LIQ-IAL = 'NO'
      *         GO TO FIN-VRF-MCAD-LIQ.
      *     IF WSS-NUM-MCAD-TZER > 1
      *         MOVE 'MCADZERO>1' TO WSS-MCAD-CMSG
      *         GO TO FIN-VRF-MCAD-LIQ.
      *     IF WSS-NUM-MCAD-TCAD > OPD-SGV-MPRE IN OPD-FLD
      *         MOVE 'MCADSUMA>OPD' TO WSS-MCAD-CMSG
      *         GO TO FIN-VRF-MCAD-LIQ.

      ** isp-2008-07-15 (no hay ambiente de desarrollo)
      *    IF WSS-NUM-MCAD-TCAD < OPD-SGV-MPRE IN OPD-FLD AND
      *      WSS-NUM-MCAD-TZER  = ZEROES
      *      MOVE 'MCADSUMA<OPD' TO WSS-MCAD-CMSG
      *         GO TO FIN-VRF-MCAD-LIQ.

      *     IF WSS-NUM-MCAD-TCAD = OPD-SGV-MPRE IN OPD-FLD
      *     IF WSS-NUM-MCAD-TZER = 1
      *        MOVE 'MCADZEROERR' TO WSS-MCAD-CMSG
      *        GO TO FIN-VRF-MCAD-LIQ.

      *     IF WSS-NUM-MCAD-TZER = 1
      *         MOVE WSS-CAI-ZERO-MCAD   TO CAD-CAI-IOPD IN CAD
      *         MOVE WSS-IIC-ZERO-MCAD   TO CAD-IIC-IOPD IN CAD
      *         MOVE LIQ-NUM-ILIQ IN LIQ TO CAD-NUM-ILIQ IN CAD
      *         MOVE WSS-NUM-ZERO-MCAD   TO CAD-NUM-ICAD IN CAD
      *         MOVE FIO-GET-KEY-UPD TO FIO-CMND
      *         PERFORM DAP-FIO-CAD
      *         IF NOT FIO-STAT-OKS
      *             MOVE 'MCADZEROERR' TO WSS-MCAD-CMSG
      *             GO TO FIN-VRF-MCAD-LIQ
      *         ELSE
      *             SUBTRACT WSS-NUM-MCAD-TCAD FROM
      *             OPD-SGV-MPRE IN OPD-FLD GIVING
      *             CAD-SGV-LIQU IN CAD
      *             MOVE FIO-MOD TO FIO-CMND
      *             PERFORM DAP-FIO-CAD
      *             IF CAD-IND-TCAD IN CAD = 'CCMA'
      *                 MOVE 'SI' TO WSS-MCAD-LIQ-CCMA
      *                 MOVE CAD-CAI-ICAD IN CAD TO WSS-CAI-CCTE
      *                 MOVE CAD-IIC-ICAD IN CAD TO WSS-IIC-CCTE
      *                 MOVE CAD-CAI-IOPD IN CAD TO WSS-CAI-CCMA-MCAD
      *                 MOVE CAD-IIC-IOPD IN CAD TO WSS-IIC-CCMA-MCAD
      *                 MOVE CAD-NUM-ICAD IN CAD TO WSS-NUM-CCMA-MCAD
      *                 MOVE CAD-SGV-LIQU IN CAD TO WSS-MCAD-CCTE.
      * FIN-VRF-MCAD-LIQ.
      *     EXIT.

      * CHK-MCAD-LIQ SECTION.
      * INI-CHK-MCAD-LIQ.
      *     ADD  CAD-SGV-LIQU IN CAD TO WSS-NUM-MCAD-TCAD.
      *     MOVE CAD-SGV-LIQU IN CAD TO WSS-NUM-MCAD-MONE.
      *    MOVE CAD-SGV-LIQU IN CAD TO WSS-NUM-MCAD-PESO.
      *     IF SCR-CIC-TVAL = PDB-CIC-MEXT
      *        MOVE SCR-CIC-VCAM TO PES-CIC-VCAM.
      *     MOVE CAD-SGV-LIQU IN CAD TO PES-SGV-DECI.
      *     PERFORM PES-SCTV.
      *     MOVE PES-SGV-ENTE TO WSS-NUM-MCAD-PESO.
      *     IF CAD-IND-TCAD IN CAD = 'CAJA'
      *         MOVE 'SI' TO WSS-MCAD-LIQ-CAJA
      *         IF SCR-CIC-TVAL = PDB-CIC-MNAC
      *             ADD WSS-NUM-MCAD-PESO TO WSS-MCAD-CAJA
      *         ELSE
      *             ADD WSS-NUM-MCAD-MONE TO WSS-MCAD-CAJA
      *        END-IF
      *    ELSE
      *    IF CAD-IND-TCAD IN CAD = 'CCMA'
      *        MOVE 'SI' TO WSS-MCAD-LIQ-CCMA
      *        MOVE CAD-CAI-ICAD IN CAD TO WSS-CAI-CCTE
      *        MOVE CAD-IIC-ICAD IN CAD TO WSS-IIC-CCTE
      *         MOVE CAD-CAI-IOPD IN CAD TO WSS-CAI-CCMA-MCAD
      *         MOVE CAD-IIC-IOPD IN CAD TO WSS-IIC-CCMA-MCAD
      *         MOVE CAD-NUM-ICAD IN CAD TO WSS-NUM-CCMA-MCAD
      *         MOVE LIQ-SGV-PESO IN LIQ TO WSS-MCAD-CCTE
      *     ELSE
      *     IF CAD-IND-TCAD IN CAD = 'CTBL'
      *         MOVE 'SI' TO WSS-MCAD-LIQ-CTBL
      *     ELSE
      *     IF CAD-IND-TCAD IN CAD = 'PROF'
      *         MOVE 'SI' TO WSS-MCAD-LIQ-PROF.

      *     IF CAD-SGV-LIQU IN CAD = ZEROES
      *         ADD 1 TO WSS-NUM-MCAD-TZER
      *         MOVE CAD-CAI-IOPD IN CAD TO WSS-CAI-ZERO-MCAD
      *         MOVE CAD-IIC-IOPD IN CAD TO WSS-IIC-ZERO-MCAD
      *         MOVE CAD-NUM-ICAD IN CAD TO WSS-NUM-ZERO-MCAD.
      * FIN-CHK-MCAD-LIQ.
      *     EXIT.

       PRO-LIQ-RDL SECTION.
       INI-PRO-LIQ-RDL.
      * ISP: YA TIENE NUEVA OPD, CON ESTADO 'L' Y A ESTA SE LE ASOCIA
      *      LA LIQUIDACION
           PERFORM HDR-LIQ.
           PERFORM KEY-LIQ-RDL.
           MOVE SCR-COD-OFIC            TO LIQ-COD-OFIC IN LIQ.
           MOVE OPD-COD-EJEC IN OPD-FLD TO LIQ-COD-EJEC IN LIQ.
           MOVE ZEROES                  TO LIQ-SGV-REAJ IN LIQ.
           IF SCR-CIC-TVAL = PDB-CIC-MNAC
               MOVE OPD-SGV-MPRE IN OPD-FLD TO LIQ-SGV-PESO IN LIQ
               IF SCR-CIC-VCAM NOT = PDB-CIC-0999
                   DIVIDE OPD-SGV-MPRE IN OPD-FLD BY
                     SCR-SGV-VCAM GIVING LIQ-SGV-TPAG IN LIQ
                   ROUNDED
               ELSE
                   MOVE OPD-SGV-MPRE IN OPD-FLD TO LIQ-SGV-TPAG IN LIQ
           ELSE
               MOVE OPD-SGV-MPRE IN OPD-FLD TO LIQ-SGV-TPAG IN LIQ
               MOVE ZEROES                  TO LIQ-SGV-PESO IN LIQ.
               MOVE LIQ-SGV-TPAG IN LIQ     TO LIQ-SGV-CAPI IN LIQ.

           IF OPD-VAL-CAPT IN OPD-FLD > ZEROES
               MOVE 'LP'                TO LIQ-COD-LIQU IN LIQ
           ELSE
               MOVE 'LT'                TO LIQ-COD-LIQU IN LIQ.
           MOVE LIQ-FEC-FTRN IN LIQ     TO LIQ-FEC-FCMP IN LIQ.
           MOVE HOY-DHOY TO WSS-NUM-DLIQ.
           MOVE HOY-MHOY TO WSS-NUM-MLIQ.
           MOVE HOY-SHOY TO WSS-NUM-SLIQ.
           MOVE HOY-AHOY TO WSS-NUM-ALIQ.
           MOVE WSS-FEC-FLIQ TO FEC-FECH.
           MOVE FEC-FORM-FEC TO FEC-FORM.
           MOVE FEC-FBLK-S  TO FEC-FBLK.
           MOVE FEC-CHOY-LE TO FEC-CHOY.
           MOVE FEC-VHBL-S TO FEC-VHBL.
           MOVE FEC-VAL-FEC TO FEC-CMND.
           PERFORM PRO-FEC.
           IF HOY-HHHY NOT < 16 AND
              (SCR-CNAL = '100' OR
               SCR-CNAL = '110')
               PERFORM SIG-HBL-FCMP-LIQ
           ELSE
           IF SCR-MODO = 'T'
                PERFORM SIG-HBL-FCMP-LIQ
           ELSE
           IF (SCR-CNAL = '100' OR
               SCR-CNAL = '110')
                 IF NOT FEC-STAT-HBL
                    PERFORM SIG-HBL-FCMP-LIQ.

           MOVE OPD-FEC-FREA IN OPD     TO LIQ-FEC-FREA IN LIQ
                                           LIQ-FEC-FCTB IN LIQ.
           IF SCR-CNAL = '100' OR
              SCR-CNAL = '110'
               MOVE LIQ-FEC-FCMP IN LIQ TO LIQ-FEC-FREA IN LIQ
               MOVE LIQ-FEC-FCMP IN LIQ TO LIQ-FEC-FCTB IN LIQ.

           MOVE ZEROES                  TO LIQ-SGV-GAST IN LIQ.
           IF FRM-CAI-ICAD IN OPD-FLD > SPACES OR
              FRM-IIC-ICAD IN OPD-FLD > ZEROES
                MOVE 'A' TO LIQ-COD-STAT IN LIQ
           ELSE
                MOVE 'S' TO LIQ-COD-STAT IN LIQ.

      *ADA-INI JSS 11-JUN-2004
           MOVE SCR-USER TO LIQ-COD-ATRN IN LIQ.
           IF NOT SCR-OFRM-SRV
               PERFORM VER-USUARIO-CELULA-VTAS
               IF USP-PERMISO = 'P'
                   MOVE 'T' TO LIQ-COD-CNAL IN LIQ
               ELSE
                   MOVE 'C' TO LIQ-COD-CNAL IN LIQ
           ELSE
               MOVE 'S' TO LIQ-COD-CNAL IN LIQ.
           IF (SCR-CNAL = '100' OR
               SCR-CNAL = '110')
                MOVE FRM-CAI-ICAD IN OPD-FLD TO OPE-CAI-IOPE IN OPE
                MOVE FRM-IIC-ICAD IN OPD-FLD TO OPE-IIC-IOPE IN OPE
                PERFORM SGC-FIO-OPE
                IF FIO-STAT-OKS
                     MOVE OPE-COD-OFOP IN OPE TO LIQ-COD-OFIC IN LIQ.

      *ADA-FIN JSS 11-JUN-2004
           MOVE FIO-PUT TO FIO-CMND.

           MOVE FIO-MOD TO FIO-CMND.
           PERFORM DAP-FIO-LIQ.
           IF NOT FIO-STAT-OKS
               MOVE 'PUTLIQRDLERR' TO MSG-COD-MENS
               PERFORM ERR-PRO-LIQ-RDL
               GO TO FIN-PRO-LIQ-RDL.



      *CIMA-INI 20-OCT-2014 CORRECCION INCIDENTES DAP GRUPO 1 HITO 2
           IF OPD-VAL-CAPT IN OPD-FLD > ZEROES
                 PERFORM PRO-ING-REG-LND.
      *CIMA-FIN 20-OCT-2014 CORRECCION INCIDENTES DAP GRUPO 1 HITO 2

           PERFORM HDR-CAD.
           MOVE LIQ-CIC-IOPD IN LIQ TO CAD-CIC-IOPD IN CAD.
           MOVE LIQ-NUM-ILIQ IN LIQ TO CAD-NUM-ILIQ IN CAD.
           MOVE 1                   TO CAD-NUM-ICAD IN CAD.



           IF FRM-CAI-ICAD IN OPD-FLD > SPACES OR
              FRM-IIC-ICAD IN OPD-FLD > ZEROES
               MOVE 'CMCA'  TO CAD-IND-TCAD IN CAD
               MOVE 'S' TO CAD-IND-MAUT IN CAD
           ELSE
               MOVE 'N' TO CAD-IND-MAUT IN CAD
               MOVE 'CAJA'  TO CAD-IND-TCAD IN CAD.

           MOVE FRM-CAI-ICAD IN OPD-FLD TO CAD-CAI-ICAD IN CAD.
           MOVE FRM-IIC-ICAD IN OPD-FLD TO CAD-IIC-ICAD IN CAD.
           MOVE OPD-SGV-MPRE IN OPD-FLD TO CAD-SGV-LIQU IN CAD.
           MOVE OPD-COD-OFIC IN OPD     TO CAD-COD-OFIC IN CAD.
           MOVE FIO-PUT TO FIO-CMND.
           MOVE FIO-MOD TO FIO-CMND.

           PERFORM DAP-FIO-CAD.
           IF NOT FIO-STAT-OKS
               MOVE 'PUTCADRDLERR' TO MSG-COD-MENS
               PERFORM ERR-PRO-LIQ-RDL
               GO TO FIN-PRO-LIQ-RDL.


           MOVE '110RDLOKS02' TO MSG-COD-MENS.
           PERFORM MSG-DAP.

       FIN-PRO-LIQ-RDL.
           EXIT.

       GEN-LIQ-RDL SECTION.
       INI-GEN-LIQ-RDL.

           MOVE SPACES TO MSG-COD-MENS.
           MOVE SPACES TO LIQ.

           MOVE OPD-CAI-IOPD IN OPD-FLD TO LIQ-CAI-IOPD IN LIQ.
           MOVE OPD-IIC-IOPD IN OPD-FLD TO LIQ-IIC-IOPD IN LIQ.
           MOVE WSS-CTE-1               TO LIQ-NUM-ILIQ IN LIQ.
           PERFORM HDR-LIQ.

           MOVE SCR-COD-OFIC            TO LIQ-COD-OFIC IN LIQ.
           MOVE OPD-COD-EJEC IN OPD-FLD TO LIQ-COD-EJEC IN LIQ.
           MOVE ZEROES                  TO LIQ-SGV-REAJ IN LIQ.

           MOVE OPD-SGV-MPRE IN OPD-FLD TO LIQ-SGV-PESO IN LIQ.
           MOVE OPD-SGV-MPRE IN OPD-FLD TO LIQ-SGV-TPAG IN LIQ.
           MOVE LIQ-SGV-TPAG IN LIQ     TO LIQ-SGV-CAPI IN LIQ.
           MOVE ZEROES                  TO LIQ-SGV-GAST IN LIQ.

           MOVE SCR-USER TO LIQ-COD-ATRN IN LIQ.
           MOVE 'S' TO LIQ-COD-CNAL IN LIQ.

           MOVE WSS-CTE-RX    TO LIQ-COD-LIQU.
           MOVE WSS-CTE-P     TO LIQ-COD-STAT.

           MOVE WSS-CTE-L2-L2 TO LIQ-GLS-DISP.
           MOVE '21000101'    TO LIQ-FEC-FREA
                                 LIQ-FEC-FCMP
                                 LIQ-FEC-FCTB
                                 LIQ-FEC-FTRN.

           MOVE FIO-PUT TO FIO-CMND.

           PERFORM DAP-FIO-LIQ.
           IF NOT FIO-STAT-OKS
               MOVE 'PUTLIQRDLERR' TO MSG-COD-MENS
               PERFORM MSG-GEN-LIQ-RDL
               GO TO MSG-GEN-LIQ-RDL.



           IF OPD-VAL-CAPT IN OPD-FLD > ZEROES
                 PERFORM PRO-ING-REG-LND.

           PERFORM HDR-CAD.
           MOVE LIQ-CIC-IOPD IN LIQ TO CAD-CIC-IOPD IN CAD.
           MOVE LIQ-NUM-ILIQ IN LIQ TO CAD-NUM-ILIQ IN CAD.
           MOVE WSS-CTE-1           TO CAD-NUM-ICAD IN CAD.

           IF FRM-CAI-ICAD IN OPD-FLD > SPACES OR
              FRM-IIC-ICAD IN OPD-FLD > ZEROES
               MOVE 'CMCA'  TO CAD-IND-TCAD IN CAD
               MOVE 'S' TO CAD-IND-MAUT IN CAD
           ELSE
               MOVE 'N' TO CAD-IND-MAUT IN CAD
               MOVE 'CAJA'  TO CAD-IND-TCAD IN CAD.

           MOVE FRM-CAI-ICAD IN OPD-FLD TO CAD-CAI-ICAD IN CAD.
           MOVE FRM-IIC-ICAD IN OPD-FLD TO CAD-IIC-ICAD IN CAD.
           MOVE OPD-SGV-MPRE IN OPD-FLD TO CAD-SGV-LIQU IN CAD.
           MOVE OPD-COD-OFIC IN OPD     TO CAD-COD-OFIC IN CAD.
           MOVE FIO-PUT TO FIO-CMND.

           PERFORM DAP-FIO-CAD.
           IF NOT FIO-STAT-OKS
               MOVE 'PUTCADRDLERR' TO MSG-COD-MENS
               PERFORM MSG-GEN-LIQ-RDL
               GO TO MSG-GEN-LIQ-RDL.


       MSG-GEN-LIQ-RDL.

           IF MSG-COD-MENS > SPACES
               MOVE 'S' TO SCR-IERR
           ELSE
               MOVE '110RDLOKS01' TO MSG-COD-MENS.

           PERFORM MSG-DAP.

       FIN-GEN-LIQ-RDL.
           EXIT.




       ERR-PRO-LIQ-RDL SECTION.
       INI-ERR-PRO-LIQ-RDL.
           MOVE 'S' TO SCR-IERR.
           MOVE 'DAP' TO MSG-COD-SIST.
           PERFORM GET-MSG.
           MOVE MSG-GLS-DESC TO FRM-MENS.
           PERFORM BCK-OUT.
       FIN-ERR-PRO-LIQ-RDL.
           EXIT.

       PRO-LIQ-RLR SECTION.
       INI-PRO-LIQ-RLR.

           IF WSS-IND-LIQ-UPD = WSS-CTE-LIQ-UPD-NOT
               MOVE FIO-GET-KEY-UPD TO FIO-CMND
               PERFORM DAP-FIO-LIQ

               IF NOT FIO-STAT-OKS
      *        Error inconsistencia en la eliminacion : hacer LOGTB e in
                   MOVE FIO-MENS TO FRM-MENS
                   PERFORM BCK-OUT
                   GO TO FIN-PRO-LIQ-RLR
               ELSE
                   MOVE WSS-CTE-00 TO FIO-STAT
                   MOVE WSS-CTE-LIQ-UPD-YES TO WSS-IND-LIQ-UPD.

           MOVE LIQ-CIC-IOPD IN LIQ TO CAD-CIC-IOPD IN CAD.
           MOVE LIQ-NUM-ILIQ IN LIQ TO CAD-NUM-ILIQ IN CAD.
           MOVE 1                   TO CAD-NUM-ICAD IN CAD.
           MOVE FIO-GET-KEY-UPD TO FIO-CMND.
           PERFORM DAP-FIO-CAD.
           IF NOT FIO-STAT-OKS
               MOVE FIO-MENS TO FRM-MENS
               PERFORM BCK-OUT
               GO TO FIN-PRO-LIQ-RLR.

           MOVE FIO-DEL TO FIO-CMND.
           PERFORM DAP-FIO-CAD.
           IF NOT FIO-STAT-OKS
               MOVE FIO-MENS TO FRM-MENS
               PERFORM BCK-OUT
               GO TO FIN-PRO-LIQ-RLR.


           MOVE FIO-DEL TO FIO-CMND.
           PERFORM DAP-FIO-LIQ.
           IF NOT FIO-STAT-OKS
               MOVE FIO-MENS TO FRM-MENS
               PERFORM BCK-OUT
               GO TO FIN-PRO-LIQ-RLR.

           MOVE '110RLROKS02' TO MSG-COD-MENS.
           PERFORM MSG-DAP.

       FIN-PRO-LIQ-RLR.
           EXIT.

       RET-VEN-OPD SECTION.
       INI-RET-VEN-OPD.
           MOVE 'I'      TO VEN-COD-STAT IN VEN.

           IF SCR-CMND = WSS-CTE-RDL
                MOVE SCR-CAPI TO VEN-VAL-CAPI IN VEN
                MOVE SCR-CAPI TO VEN-VAL-SCAP IN VEN.


           MOVE SCR-IDNI TO VEN-VAL-IDNI IN VEN.

           MOVE FRM-VAL-FORI IN OPD-FLD TO VEN-VAL-FINA IN VEN.
           MOVE FRM-VAL-FORI IN OPD-FLD TO VEN-VAL-SFIN IN VEN.
           MOVE OPD-FEC-FPVC IN OPD TO VEN-FEC-FVEN IN VEN.
       FIN-RET-VEN-OPD.
           EXIT.

       PUT-VEN SECTION.
       INI-PUT-VEN.
           PERFORM CLR-VEN.
           PERFORM CRG-KEY-VEN.
           PERFORM HDR-VEN.

           PERFORM RET-VEN-OPD.
           MOVE SPACES TO VEN-COD-SCTB IN VEN.
           MOVE FIO-PUT TO FIO-CMND.
           PERFORM DAP-FIO-VEN.
           IF NOT FIO-STAT-OKS
      *        Error inconsistencia en el ingreso : hacer LOGTB e inform
               MOVE FIO-MENS TO FRM-MENS
               PERFORM BCK-OUT.
       FIN-PUT-VEN.
           EXIT.

       MOD-RCC SECTION.
       INI-MOD-RCC.
      *     IF DBC-IND-ICLI IN OPD-FLD = 'M'
           IF SCR-IND-MCLI = 'M'
               GO TO FIN-MOD-RCC.
           MOVE FIO-DEL TO FIO-CMND.
           PERFORM DAP-FIO-RCC.
           PERFORM CLR-RCC.
           PERFORM PUT-RCC.
           IF NOT FIO-STAT-OKS
      *        Error inconsistencia en la eliminacion : hacer LOGTB e in
               MOVE FIO-MENS TO FRM-MENS
               PERFORM BCK-OUT.
       FIN-MOD-RCC.
           EXIT.

       MOD-CAD SECTION.
       INI-MOD-CAD.
           IF CAD-IND-TCAD IN OPD-FLD NOT = 'M'
               MOVE FIO-MOD TO FIO-CMND
               PERFORM DAP-FIO-CAD
               IF NOT FIO-STAT-OKS
      *        Error inconsistencia en la modificacion : hacer LOGTB e i
                   MOVE FIO-MENS TO FRM-MENS
                   PERFORM BCK-OUT.
       FIN-MOD-CAD.
           EXIT.

       MOD-VEN SECTION.
       INI-MOD-VEN.



           IF SCR-CMND = 'RLR'
                 MOVE VEN-GLS-DISP IN VEN TO WSS-VEN-COD-STAT-RLR.

           IF SCR-CMND = 'RDL'
           IF WSS-VEN-COD-STAT-RDL = 'N'
                 MOVE WSS-VEN-COD-STAT-RDL TO VEN-GLS-DISP IN VEN.


           IF SCR-CMND = 'RLR'
              IF WSS-VEN-COD-STAT-RLR = 'N'
                  MOVE SPACES TO VEN-GLS-DISP IN VEN
                  MOVE OPD-FEC-FREA IN OPD TO VEN-FEC-FVEN IN VEN
                  MOVE 'N' TO VEN-COD-STAT IN VEN
                  MOVE WSS-VAL-CAPI-L2     TO VEN-VAL-CAPI IN VEN
                  MOVE VEN-VAL-CAPI IN VEN TO VEN-VAL-SCAP IN VEN
                  MOVE VEN-VAL-CAPI IN VEN TO OPD-VAL-CAPT IN OPD
                  MOVE VEN-VAL-CAPI IN VEN TO OPD-VAL-SCAP IN OPD

      *           MOVE WSS-VAL-FINA-L2 TO VEN-VAL-FINA IN VEN
                  MOVE ZEROES          TO VEN-VAL-SFIN IN VEN
                  MOVE ZEROES          TO VEN-VAL-FINA IN VEN
              ELSE
                  MOVE WSS-VAL-CAPI-L2     TO VEN-VAL-CAPI IN VEN
                  MOVE WSS-VAL-FINA-L2     TO VEN-VAL-FINA IN VEN
                  MOVE VEN-VAL-CAPI IN VEN TO OPD-VAL-CAPT IN OPD
                  MOVE VEN-VAL-CAPI IN VEN TO OPD-VAL-SCAP IN OPD

                  MOVE VEN-VAL-CAPI IN VEN TO VEN-VAL-SCAP IN VEN
                  MOVE VEN-VAL-FINA IN VEN TO VEN-VAL-SFIN IN VEN.

           IF SCR-CMND = 'RDL'
               MOVE WSS-VAL-CAPI-L2 TO VEN-VAL-CAPI IN VEN
               MOVE WSS-VAL-FINA-L2 TO VEN-VAL-FINA IN VEN
               MOVE ZEROES TO VEN-VAL-SCAP IN VEN

               MOVE ZEROES TO VEN-VAL-SFIN IN VEN.




           MOVE FIO-MOD TO FIO-CMND.
           PERFORM DAP-FIO-VEN.
           IF NOT FIO-STAT-OKS
      *        Error inconsistencia en la modificacion : hacer LOGTB e i
               MOVE FIO-MENS TO FRM-MENS
               PERFORM BCK-OUT.
       FIN-MOD-VEN.
           EXIT.

       MOD-AUT SECTION.
       INI-MOD-AUT.
           IF WSS-IND-L-2PASO = WSS-CTE-L-2PASO-P1
                MOVE WSS-CTE-00 TO FIO-STAT
                GO TO FIN-MOD-AUT.
           MOVE FIO-MOD TO FIO-CMND.
           PERFORM DAP-FIO-AUT.
           IF NOT FIO-STAT-OKS
      *        Error inconsistencia en la modificacion : hacer LOGTB e i
               MOVE FIO-MENS TO FRM-MENS
               PERFORM BCK-OUT.
       FIN-MOD-AUT.
           EXIT.

       GET-UPD-VEN SECTION.
       INI-GET-UPD-VEN.
           PERFORM CRG-KEY-VEN.
           PERFORM SET-CMND-UPD
           PERFORM DAP-FIO-VEN.
           MOVE FIO-STAT TO PGM-STAT-VEN.
           IF FIO-STAT-OKS
                MOVE VEN-VAL-CAPI IN VEN TO WSS-VAL-CAPI-L2
                MOVE VEN-VAL-FINA IN VEN TO WSS-VAL-FINA-L2.

           IF SCR-CMND = 'RLR'
                 MOVE VEN-GLS-DISP IN VEN TO WSS-VEN-COD-STAT-RLR.


           IF SCR-CMND = 'RDL'
           IF VEN-COD-STAT IN VEN = 'N'
                 MOVE VEN-COD-STAT IN VEN TO WSS-VEN-COD-STAT-RDL.


       FIN-GET-UPD-VEN.
           EXIT.

       CRG-KEY-IMP SECTION.
       INI-CRG-KEY-IMP.
           MOVE OPD-CIC-IOPD IN OPD TO IMP-CIC-IOPD IN IMP.
       FIN-CRG-KEY-IMP.
           EXIT.

       GET-UPD-IMP SECTION.
       INI-GET-UPD-IMP.
           PERFORM CRG-KEY-IMP.
           MOVE FIO-GET-KEY-UPD TO FIO-CMND.
           PERFORM DAP-FIO-IMP.
           MOVE FIO-STAT TO PGM-STAT-IMP.
       FIN-GET-UPD-IMP.
           EXIT.

       GET-UPD-CAD SECTION.
       INI-GET-UPD-CAD.
           IF CAD-IND-TCAD IN OPD-FLD NOT = 'M'
               MOVE OPD-CIC-IOPD IN OPD TO CAD-CIC-IOPD IN CAD
               MOVE ZEROES              TO CAD-NUM-ILIQ IN CAD
               MOVE 1                   TO CAD-NUM-ICAD IN CAD
               MOVE FIO-GET-KEY-UPD TO FIO-CMND
               PERFORM DAP-FIO-CAD
               IF NOT FIO-STAT-OKS
                   MOVE '23' TO PGM-STAT-CAD
      *        como la transaccion Termina no es necesario hacer UNLOCK
      *        CAD
      *        comunicar que no se pudo actualizar con mensaje pertinent
               ELSE
                   MOVE '00' TO PGM-STAT-CAD.
       FIN-GET-UPD-CAD.
           EXIT.

       SET-CMND-UPD SECTION.
       INI-SET-CMND-UPD.
           MOVE FIO-GET-KEY-UPD TO FIO-CMND.
       FIN-SET-CMND-UPD.
           EXIT.

       GET-UPD-AUT SECTION.
       INI-GET-UPD-AUT.
           MOVE OPD-CIC-IOPD IN OPD TO CAD-CIC-IOPD IN AUT.
           MOVE 'AUT'               TO CAD-NUM-ILIQ IN AUT.
           MOVE 1                   TO CAD-NUM-ICAD IN AUT.
           MOVE FIO-GET-KEY-UPD TO FIO-CMND.
           PERFORM DAP-FIO-AUT.
           IF NOT FIO-STAT-OKS
               MOVE '23' TO PGM-STAT-AUT
      *        como la transaccion Termina no es necesario hacer UNLOCK
      *        CAD
      *        comunicar que no se pudo actualizar con mensaje pertinent
           ELSE
               MOVE '00' TO PGM-STAT-AUT.
       FIN-GET-UPD-AUT.
           EXIT.

       GET-UPD-RCC SECTION.
       INI-GET-UPD-RCC.
      *     IF DBC-IND-ICLI IN OPD-FLD = 'M'
           IF SCR-IND-MCLI = 'M'
               GO TO FIN-GET-UPD-RCC.
           MOVE OPD-CAI-IOPD IN OPD-FLD TO RCC-CIC-IOPD IN RCC.
           MOVE OPD-IIC-IOPD IN OPD-FLD TO RCC-IIC-IOPD IN RCC.
           MOVE 'RCC-KEY-IOPD'  TO FIO-AKEY.
      *rfu     MOVE FIO-GET-KEY TO FIO-CMND.
           MOVE FIO-GET-NLS TO FIO-CMND.
           PERFORM DAP-FIO-RCC.
      *if x rfu
           IF NOT (FIO-STAT-OKS AND
                  OPD-CAI-IOPD IN OPD-FLD = RCC-CAI-IOPD IN RCC AND
                  OPD-IIC-IOPD IN OPD-FLD = RCC-IIC-IOPD IN RCC)
                  MOVE '23' TO FIO-STAT.
           MOVE FIO-STAT TO PGM-STAT-RCC.
           IF NOT FIO-STAT-OKS
      *        Como la transaccion Termina no es necesario hacer UNLOCK
      *        RCC
      *        comunicar que no se pudo actualizar con mensaje pertinent
                MOVE FIO-MENS TO FRM-MENS
           ELSE
                MOVE FIO-GET-KEY-UPD TO FIO-CMND
                PERFORM DAP-FIO-RCC.
       FIN-GET-UPD-RCC.
           EXIT.

       PUT-CAD SECTION.
       INI-PUT-CAD.
           IF CAD-IND-TCAD IN OPD-FLD NOT = 'M'
               PERFORM HDR-CAD
               MOVE OPD-CIC-IOPD IN OPD     TO CAD-CIC-IOPD IN CAD
               MOVE ZEROES                  TO CAD-NUM-ILIQ IN CAD
               MOVE 1                       TO CAD-NUM-ICAD IN CAD
               MOVE WSS-VAL-CAPT TO CAD-SGV-LIQU IN CAD
               MOVE FIO-PUT TO FIO-CMND
               PERFORM DAP-FIO-CAD
               IF NOT FIO-STAT-OKS
      *        Error inconsistencia en el ingreso : hacer LOGTB e inform
                   MOVE FIO-MENS TO FRM-MENS
                   PERFORM BCK-OUT.
       FIN-PUT-CAD.
           EXIT.

       PUT-AUT SECTION.
       INI-PUT-AUT.
           IF FRM-CAI-ICAD IN OPD-FLD > SPACES OR
              FRM-IIC-ICAD IN OPD-FLD > ZEROES
                PERFORM HDR-AUT
                MOVE OPD-CIC-IOPD IN OPD TO CAD-CIC-IOPD IN AUT
                MOVE 'AUT'               TO CAD-NUM-ILIQ IN AUT
                MOVE 'CCMA'              TO CAD-IND-TCAD IN CAD
                MOVE 1                   TO CAD-NUM-ICAD IN AUT
                MOVE FRM-CAI-ICAD IN OPD-FLD TO CAD-CAI-ICAD IN AUT
                MOVE FRM-IIC-ICAD IN OPD-FLD TO CAD-IIC-ICAD IN AUT
                MOVE FIO-PUT TO FIO-CMND
                PERFORM DAP-FIO-AUT
                IF NOT FIO-STAT-OKS
      *        Error inconsistencia en el ingreso : hacer LOGTB e inform
                    MOVE FIO-MENS TO FRM-MENS
                    PERFORM BCK-OUT.
       FIN-PUT-AUT.
           EXIT.

       HDR-OPD SECTION.
       INI-HDR-OPD.
           PERFORM GET-FHOY.
           MOVE HOY-FHOY TO OPD-FEC-FTRN IN OPD.
           MOVE HOY-HHOY TO OPD-HRA-HRTR IN OPD.
           MOVE 'I'      TO OPD-COD-TACC IN OPD.
           MOVE 'I'      TO OPD-COD-OTRN IN OPD.
           MOVE SCR-OTRN TO OPD-COD-OTRN IN OPD.
           IF SCR-OFRM-SRV
               MOVE SCR-ORIG TO OPD-COD-OTRN IN OPD.

      *ADA-INI JSS 11-NOV-2002
           MOVE SCR-USER TO OPD-COD-ATRN IN OPD.
      *ADA-FIN JSS 11-NOV-2002
      *ADA-INI JSS 11-JUN-2004
           IF NOT SCR-OFRM-SRV
               PERFORM VER-USUARIO-CELULA-VTAS
               IF USP-PERMISO = 'P'
                   MOVE 'T' TO OPD-COD-CNAL IN OPD
               ELSE
                   MOVE 'C' TO OPD-COD-CNAL IN OPD
           ELSE
               MOVE 'S' TO OPD-COD-CNAL IN OPD.
      *ADA-FIN JSS 11-JUN-2004
       FIN-HDR-OPD.
           EXIT.

      *ADA-INI JSS 11-JUN-2004
       VER-USUARIO-CELULA-VTAS SECTION.
       INI-VER-USUARIO-CELULA-VTAS.
           MOVE WSS-IDN-SIST   TO USP-SISTEMA.
           MOVE SPACES         TO USP-PERMISO.
           MOVE 'DAP'          TO USP-GRUPO.
           MOVE SCR-USER       TO USP-USUARIO.
           MOVE 'DAPUSERS/CEN' TO USP-STRING.
           PERFORM USPC107.
       FIN-VER-USUARIO-CELULA-VTAS.
           EXIT.
      *ADA-FIN JSS 11-JUN-2004

       HDR-VEN SECTION.
       INI-HDR-VEN.
           MOVE HOY-FHOY TO VEN-FEC-FTRN IN VEN.
           MOVE HOY-HHOY TO VEN-HRA-HRTR IN VEN.
           MOVE 'I'      TO VEN-COD-TACC IN VEN.
           MOVE SCR-OTRN TO VEN-COD-OTRN IN VEN.

           IF SCR-OFRM-SRV
               MOVE SCR-ORIG TO VEN-COD-OTRN IN VEN.
           MOVE SCR-USER TO VEN-COD-ATRN IN VEN.
       FIN-HDR-VEN.
           EXIT.

       HDR-RCC SECTION.
       INI-HDR-RCC.
           MOVE HOY-FHOY TO RCC-FEC-FTRN IN RCC.
           MOVE HOY-HHOY TO RCC-HRA-HRTR IN RCC.
           MOVE 'I'      TO RCC-COD-STAT IN RCC.
           MOVE SCR-OTRN TO RCC-COD-OTRN IN RCC.
           IF SCR-OFRM-SRV
               MOVE SCR-ORIG TO RCC-COD-OTRN IN RCC.
           MOVE SCR-USER TO RCC-COD-ATRN IN RCC.
       FIN-HDR-RCC.
           EXIT.

       HDR-LIQ SECTION.
       INI-HDR-LIQ.
           MOVE SPACES   TO LIQ-GLS-FLAG IN LIQ.
           MOVE HOY-FHOY TO LIQ-FEC-FTRN IN LIQ.
           MOVE HOY-HHOY TO LIQ-HRA-HRTR IN LIQ.
           MOVE 'I'      TO LIQ-COD-TACC IN LIQ.
           MOVE 'I'      TO LIQ-COD-OTRN IN LIQ.
           MOVE SCR-OTRN TO LIQ-COD-OTRN IN LIQ.
           MOVE EIBTRMID TO LIQ-COD-OTRN IN LIQ.
           IF SCR-OFRM-SRV
                MOVE SCR-ORIG TO LIQ-COD-OTRN IN LIQ.
           MOVE SPACES   TO LIQ-GLS-DISP IN LIQ.
           MOVE ZEROES   TO LIQ-SGV-MCAS IN LIQ.
           MOVE ZEROES   TO LIQ-SGV-TLVP IN LIQ.
      *    MOVE 'R'      TO LIQ-COD-CMND IN LIQ.
       FIN-HDR-LIQ.
           EXIT.

       HDR-CAD SECTION.
       INI-HDR-CAD.
      * ISP-INI 17-ABR-2018 COMANDO RDP
           MOVE WSS-CTE-DAPPUOP4 TO CAD-COD-ATRN IN CAD.
      * ISP-FIN 17-ABR-2018 COMANDO RDP
           MOVE SPACES   TO CAD-GLS-FLAG IN CAD.
           MOVE HOY-FHOY TO CAD-FEC-FTRN IN CAD.
           MOVE HOY-HHOY TO CAD-HRA-HRTR IN CAD.
           MOVE 'I'      TO CAD-COD-TACC IN CAD.
           MOVE 'I'      TO CAD-COD-OTRN IN CAD.
           MOVE SCR-OTRN TO CAD-COD-OTRN IN CAD.
           IF SCR-OFRM-SRV
               MOVE SCR-ORIG TO CAD-COD-OTRN IN CAD.
           MOVE SPACES   TO CAD-GLS-DISP IN CAD.
       FIN-HDR-CAD.
           EXIT.

       HDR-AUT SECTION.
       INI-HDR-AUT.
           MOVE SPACES   TO CAD-GLS-FLAG IN AUT.
           MOVE HOY-FHOY TO CAD-FEC-FTRN IN AUT.
           MOVE HOY-HHOY TO CAD-HRA-HRTR IN AUT.
           MOVE 'I'      TO CAD-COD-TACC IN AUT.
           MOVE 'I'      TO CAD-COD-OTRN IN AUT.
           MOVE SCR-OTRN TO CAD-COD-OTRN IN AUT.

           IF SCR-OFRM-SRV
               MOVE SCR-ORIG TO CAD-COD-OTRN IN AUT.
           MOVE SPACES   TO CAD-GLS-DISP IN AUT.
       FIN-HDR-AUT.
           EXIT.

       MOD-LIC SECTION.
       INI-MOD-LIC.
           IF SCR-CIC-TVAL = PDB-CIC-MNAC
               ADD LIQ-SGV-PESO IN LIQ TO LIC-SGV-TPAG IN LIC
           ELSE
               ADD LIQ-SGV-TPAG IN LIQ TO LIC-SGV-TPAG IN LIC.
           MOVE FIO-MOD TO FIO-CMND.
           PERFORM DAP-FIO-LIC.
       FIN-MOD-LIC.
           EXIT.

       PUT-LIC-RDL SECTION.
       INI-PUT-LIC-RDL.
           MOVE SPACES              TO LIQ-GLS-FLAG.
           MOVE LIQ-FEC-FTRN IN LIQ TO LIC-FEC-FLIQ IN LIC.
           MOVE 'S'                 TO LIC-COD-STAT.
           MOVE OPD-COD-OFIC IN OPD TO LIC-COD-OFIC IN LIC.
           MOVE OPD-COD-VCAM IN OPD TO LIC-COD-VCAM IN LIC.
           MOVE OPD-CIC-IOPD IN OPD TO LIC-CIC-IOPD IN LIC.

           MOVE OPD-SGV-MPRE IN OPD-FLD TO LIC-SGV-TPAG IN LIC.
           MOVE SPACES              TO LIC-GLS-DISP.
           MOVE FIO-PUT TO FIO-CMND.
           PERFORM DAP-FIO-LIC.
       FIN-PUT-LIC-RDL.
           EXIT.

       DEL-CAD SECTION.
       INI-DEL-CAD.
           IF CAD-IND-TCAD IN OPD-FLD NOT = 'M'
               MOVE FIO-DEL TO FIO-CMND
               PERFORM DAP-FIO-CAD
               IF NOT FIO-STAT-OKS
      *        Error inconsistencia en la eliminacion : hacer LOGTB e in
                   MOVE FIO-MENS TO FRM-MENS
                   PERFORM BCK-OUT
                   GO TO FIN-DEL-CAD
               ELSE
                   GO TO FIN-DEL-CAD.
       FIN-DEL-CAD.
           EXIT.

      * eliminacion de multiples cargos asociados a la opd
       DEL-MUL-CAD SECTION.
       INI-DEL-MUL-CAD.
           MOVE OPD-CIC-IOPD IN OPD TO CAD-CIC-IOPD IN CAD.
           MOVE SPACES              TO CAD-NUM-ILIQ IN CAD.
           MOVE SPACES              TO CAD-NUM-ICAD IN CAD.
       LUP-DEL-MUL-CAD.
           MOVE FIO-GET-NLS TO FIO-CMND.
           PERFORM DAP-FIO-CAD.
           IF NOT (FIO-STAT-OKS AND
              OPD-CIC-IOPD IN OPD = CAD-CIC-IOPD IN CAD)
               MOVE '00' TO FIO-STAT
               GO TO FIN-DEL-MUL-CAD.
           MOVE FIO-GET-KEY-UPD TO FIO-CMND.
           PERFORM DAP-FIO-CAD.
           IF NOT FIO-STAT-OKS
               GO TO FIN-DEL-MUL-CAD.
           MOVE FIO-DEL TO FIO-CMND.
           PERFORM DAP-FIO-CAD.
           IF NOT FIO-STAT-OKS
               GO TO FIN-DEL-MUL-CAD.
      *rfu     MOVE FIO-GET-NXT TO FIO-CMND.
           GO TO LUP-DEL-MUL-CAD.
       FIN-DEL-MUL-CAD.
           EXIT.

       DEL-AUT SECTION.
       INI-DEL-AUT.
           IF CAD-IND-TCAD IN OPD-FLD NOT = 'M'
               MOVE FIO-DEL TO FIO-CMND
               PERFORM DAP-FIO-AUT
               IF NOT FIO-STAT-OKS
      *        Error inconsistencia en la eliminacion : hacer LOGTB e in
                   MOVE FIO-MENS TO FRM-MENS
                   PERFORM BCK-OUT.
       FIN-DEL-AUT.
           EXIT.

       DEL-RCC SECTION.
       INI-DEL-RCC.
           MOVE FIO-DEL TO FIO-CMND.
           PERFORM DAP-FIO-RCC.
           IF NOT FIO-STAT-OKS
      *        Error inconsistencia en la eliminacion : hacer LOGTB e in
               MOVE FIO-MENS TO FRM-MENS
               PERFORM BCK-OUT.
       FIN-DEL-RCC.
           EXIT.

       DEL-MUL-RCC SECTION.
       INI-DEL-MUL-RCC.
           MOVE OPD-CIC-IOPD IN OPD TO RCC-CIC-IOPD IN RCC.
       LUP-DEL-MUL-RCC.
           MOVE FIO-GET-NLS TO FIO-CMND.
           MOVE 'RCC-KEY-IOPD' TO FIO-AKEY.
           PERFORM DAP-FIO-RCC.
           IF NOT (FIO-STAT-OKS AND
              OPD-CIC-IOPD IN OPD = RCC-CIC-IOPD IN RCC)
               MOVE '00' TO FIO-STAT
               GO TO FIN-DEL-MUL-RCC.
           MOVE FIO-GET-KEY-UPD TO FIO-CMND.
           PERFORM DAP-FIO-RCC.
           IF NOT FIO-STAT-OKS
               GO TO FIN-DEL-MUL-RCC.
           MOVE FIO-DEL TO FIO-CMND.
           PERFORM DAP-FIO-RCC.
           IF NOT FIO-STAT-OKS
               GO TO FIN-DEL-MUL-RCC.
      *rfu     MOVE FIO-GET-NXT TO FIO-CMND.
           GO TO LUP-DEL-MUL-RCC.
       FIN-DEL-MUL-RCC.
           EXIT.

       DEL-MUL-VEN SECTION.
       INI-DEL-MUL-VEN.
           PERFORM GET-UPD-VEN.
           IF FIO-STAT-OKS
               MOVE FIO-DEL TO FIO-CMND
               PERFORM DAP-FIO-VEN.
       FIN-DEL-MUL-VEN.
           EXIT.

       DEL-MUL-IMP SECTION.
       INI-DEL-MUL-IMP.
           PERFORM GET-UPD-IMP.
           IF FIO-STAT-OKS
               MOVE FIO-DEL TO FIO-CMND
               PERFORM DAP-FIO-IMP.
       FIN-DEL-MUL-IMP.
           EXIT.

      * DAPR0021-INI(ISP)  1-FEB-2000
      * Link al Disparador de Transacciones
      * GRABAR TD PARA Disparador de Transacciones
       LNK-CCL SECTION.
       INI-LNK-CCL.
      * ISP: DEJO ESTE CODIGO ASI PARA QUE PROXIMA COMPILACION DE ERROR
      *      Y NO PREVIO SE ELIMINEN LINEAS SIGUIENTES
      *      EN BCI   EXEC CICS ADDRESS DEBE IR ANTES DE GO TO
           EXEC CICS ADDRESS
                 TWA(ADDRESS OF TWA-CCL)
           END-EXEC.
           MOVE SPACES TO MSG-COD-MENS.
           MOVE SPACES TO CCL-MENS.
           MOVE SPACES TO CCL.

           MOVE 'DAP' TO FIO-SIST.
           MOVE 'VSN' TO TAB-COD-TTAB IN TAB.
           MOVE 'LNKCCLOPD' TO TAB-COD-CTAB IN TAB.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM GNS-FIO-TAB.
           IF FIO-STAT-OKS AND TAB-IND-VIGE IN TAB = 'S'
               IF TAB-GLS-ABRV IN TAB = 'DESAR'
                MOVE '00' TO TWA-COD-RETR
                GO TO FIN-LNK-CCL.

           IF FIO-STAT-OKS AND TAB-IND-VIGE IN TAB = 'S'
               IF TAB-GLS-ABRV IN TAB = 'CCOLD'
                MOVE '00' TO TWA-COD-RETR
                GO TO SIG-LNK-CCL.

      *OGB-INI 13-ENE-2017 BALANCE OPTIMO DAP
      *     IF SCR-OFRM-SRV AND
      *       (SCR-CNAL = '100' OR
      *        SCR-CNAL = '110')
      *         MOVE '00' TO TWA-COD-RETR
      *         GO TO FIN-LNK-CCL.
           IF SCR-OFRM-SRV
             IF WSS-CXS-DAP-ELM IN
                WSS-CXS-DAP-TBL(WSS-CXS-DAP-CPA-IDX-043)
                    NOT =
                WSS-CXS-DAP-CPA-VAL-043-S

                   MOVE '00' TO TWA-COD-RETR
                   GO TO FIN-LNK-CCL.
      *OGB-FIN 13-ENE-2017 BALANCE OPTIMO DAP

       SIG-LNK-CCL.
      *             MOVE  '00' TO TWA-COD-RETR.
      *             GO TO FIN-LNK-CCL.
           IF SCR-CMND = 'ODL' OR 'ODB' OR 'VRF'
      *    Codigo De Transaccion De Cargo
      *                                      MVO-COD-TRN-CAR(MVO-BCI)
                 MOVE '0670 '             TO CCL-COD-TRCR IN CCL

      *    Indicador Orden Proceso Movimiento
      *                                      MVO-IND-ORD-PRC(MVO-BCI)
                 MOVE '3'                 TO CCL-IND-OPMV IN CCL

      *    Codigo Operacion de Cargo
      *                                      MVO-COP-CAR(MVO-BCI)
                 MOVE WSS-CIC-CCTE        TO CCL-CIC-OPCR IN CCL

      *    Serial Documento de Cargo
      *                                      MVO-SRL-CAR(MVO-BCI)
      *RVM-ADA-INI 30.08.2001
      *          MOVE OPD-CIC-IOPD IN OPD TO CCL-COD-SDCR IN CCL
                 MOVE '00000000007K'      TO CCL-COD-SDCR IN CCL
      *RVM-ADA-FIN 30.08.2001
           ELSE
      *    Codigo de Transaccion de Abono
      *                                      MVO-COD-TRN-ABO(MVO-BCI)
                 MOVE '0770 '             TO CCL-COD-TRAB IN CCL
      *    Indicador Orden Proceso Movimiento
      *                                      MVO-IND-ORD-PRC(MVO-BCI)
                 MOVE '4'                 TO CCL-IND-OPMV IN CCL
      *    Codigo Operacion de Abono
      *                                      MVO-COP-ABO(MVO-BCI)
                 MOVE WSS-CIC-CCTE        TO CCL-CIC-OPAB IN CCL
      *    Serial Documento Abono
      *                                      MVO-SRL-ABO(MVO-BCI)
      *RVM-ADA-INI 30.08.2001
      *          MOVE OPD-CIC-IOPD IN OPD TO CCL-COD-SDAB IN CCL.
                 MOVE '00000000005E'      TO CCL-COD-SDAB IN CCL.
      *RVM-ADA-FIN 30.08.2001
           MOVE OPD-COD-OFIC IN OPD TO WSS-NUM-OFIC.
           ADD 1100 WSS-NUM-OFIC GIVING WSS-NUM-TERM.
      *    Identificacion Terminal Fisico
      *                         MVO-TML(MVO-BCI)
           MOVE WSS-NUM-TERM TO CCL-COD-TERM IN CCL.
      * ASI LO HACE EL SISTEMA COL
      *     MOVE OPD-COD-OFIC IN OPD TO CCL-OFIC.
      *     CALL 'RCTU2120' USING DFHEIBLK DFHCOMMAREA CCL-LINK.
      *     MOVE CCL-TERM            TO CCL-COD-TERM IN CCL.
      *    Indicador Llave Supervisor Transaccion de Cargo
      *                MVO-IND-SVS-CAR(MVO-BCI)
           MOVE 'N' TO CCL-IND-KESC IN CCL.
      *    Indicador Modo tarde
      *                 MVO-IND-MOD-TDE(MVO-BCI)
      *DAD INI 15-07-02 SE LIMPIA INDICADOR MODO TARDE
      *     MOVE '1' TO CCL-IND-MTRD IN CCL.
      *OGB-INI 13-ENE-2017 BALANCE OPTIMO DAP
            MOVE SPACE TO CCL-IND-MTRD IN CCL.
            IF WSS-CXS-DAP-ELM IN
               WSS-CXS-DAP-TBL(WSS-CXS-DAP-CMT-IDX-045)
                    = WSS-CXS-DAP-CMT-VAL-045-S
                IF  HOY-HHHY NOT < 16 OR
                    NOT FEC-STAT-HBL
                    MOVE '1' TO CCL-IND-MTRD IN CCL
                ELSE
                IF SCR-MODO = 'T'
                    MOVE '1' TO CCL-IND-MTRD IN CCL.
      *OGB-FIN 13-ENE-2017 BALANCE OPTIMO DAP
      *DAD FIN 15-07-02
      *    Glosa uno Transaccion de Cargo
      *                 MVO-GLS-CAR-1(MVO-BCI)
      *     MOVE ??? TO CCL-GLS-TCR1 IN CCL.
      *
      *    monto de la operacion
           PERFORM SET-CCTE.
      *
      *    Valor del Movimiento
      *                         MVO-VAL(MVO-BCI)
           MOVE WSS-SGV-CCTE TO CCL-SGV-VCCL IN CCL.
      *    Indicador Llave Supervisor Transaccion Abono
      *                MVO-IND-SVS-ABO(MVO-BCI)
           MOVE 'N' TO CCL-IND-KESA IN CCL.
      *    Glosa uno Transaccion Abono
      *                   MVO-GLS-ABO-1(MVO-BCI)
           MOVE SPACES TO CCL-GLS-TAB1 IN CCL.
      *    Numero Unico Operacion
      *                   MVO-NUO(MVO-BCI)
           MOVE SPACES TO CCL-CIC-NUOP IN CCL.
      *    Tipo Usuario Autorizador Movimiento
      *                   MVO-COD-TUS(MVO-BCI)
           MOVE SPACES TO CCL-COD-TAUT IN CCL.
      * no se requieren mas datos, fecha de proceso, mvo-orig ??
           MOVE CCL                 TO TWA-CCL.
      *    Indicador Orden Proceso Movimiento
           MOVE CCL-IND-OPMV IN CCL TO TWA-IND-OPMV.
           MOVE SPACES   TO SYS-CMMA.
           MOVE +0       TO SYS-TCMA.
           MOVE CCL-PROG TO SYS-PROG.
           MOVE SYS-LINK TO SYS-CMND.
           PERFORM GNS-PRO-SYS.
           IF TWA-COD-RETR NOT = '00'
                MOVE 'S' TO SCR-IERR.
       FIN-LNK-CCL.
           EXIT.

       MSG-CCL SECTION.
       INI-MSG-CCL.
           MOVE 'CCTE   '    TO CCL-COD-TMSG.
           MOVE TWA-COD-RETR TO CCL-COD-CMSG.
           MOVE CCL-COD-MENS TO MSG-COD-MENS IN MSG.
           MOVE 'DAP' TO MSG-COD-SIST.
           PERFORM GET-MSG.
           MOVE MSG-GLS-DESC TO CCL-MEN2.
       FIN-MSG-CCL.
           EXIT.

      * DAPR0021-FIN(ISP)  1-FEB-2000
       MSG-ADA SECTION.
       INI-MSG-ADA.
           MOVE MSG-GLS-DESC   TO WSS-CPT-DESC.
           MOVE WSS-CPT-NOMB-R TO CPT-STRN.
           PERFORM CPT-BLKS.
           MOVE CPT-STRN       TO FRM-MENS.
           IF CCL-MEN2 > SPACES
                MOVE CCL-MEN2 TO FRM-MEN2.
       FIN-MSG-ADA.
           EXIT.

       MSG-DAP SECTION.
       INI-MSG-DAP.
           MOVE 'DAP' TO MSG-COD-SIST.
           PERFORM GET-MSG.
           MOVE MSG-GLS-DESC TO FRM-MENS.
       FIN-MSG-DAP.
           EXIT.

       PRO-PAGO SECTION.
       INI-PRO-PAGO.
           MOVE SPACES TO MSG-COD-MENS.
           IF WSS-TOT-AUTO = 1
      * DAPR0021-INI(ISP)  1-FEB-2000
              PERFORM LNK-CCL
      *        MOVE TWA-COD-RETR TO OPD-GLS-DISP IN OPD
              IF TWA-COD-RETR = '00'
                  MOVE 'A' TO OPD-COD-STAT IN OPD
              ELSE
                  PERFORM MSG-CCL.
      * DAPR0021-FIN(ISP)  1-FEB-2000
           IF MSG-COD-MENS > SPACES
               MOVE 'I' TO OPD-COD-STAT IN OPD
               GO TO FIN-PRO-PAGO.

           IF WSS-TOT-CAJA = 1
               PERFORM SET-CAJA
               MOVE WSS-SGV-CAJA TO OPD-VAL-CAJA IN OPD
               IF OPD-COD-STAT IN OPD = 'A'
                   MOVE 'S' TO OPD-COD-STAT IN OPD
               ELSE
               IF OPD-COD-STAT IN OPD = 'F'
                   MOVE 'W' TO OPD-COD-STAT IN OPD.
       FIN-PRO-PAGO.
           EXIT.

       SET-CAJA SECTION.
       INI-SET-CAJA.
           IF SCR-IND-MCAD NOT = 'M'
              IF FRM-VAL-IPES IN OPD-FLD > ZEROES
                  MOVE FRM-VAL-IPES IN OPD-FLD TO WSS-SGV-CAJA
              ELSE
                  MOVE OPD-VAL-CAPT IN OPD-FLD TO WSS-SGV-CAJA.
       FIN-SET-CAJA.
           EXIT.

       SET-CCTE SECTION.
       INI-SET-CCTE.
           IF SCR-CMND = 'ODL' OR 'ODB'
               IF SCR-IND-MCAD NOT = 'M'
                  IF FRM-VAL-IPES IN OPD-FLD > ZEROES
                     MOVE FRM-VAL-IPES IN OPD-FLD TO WSS-SGV-CCTE
                  ELSE
                     MOVE OPD-VAL-CAPT IN OPD-FLD TO WSS-SGV-CCTE
               ELSE
                  NEXT SENTENCE
           ELSE
      *ISP : PARA 'VRF' YA CARGO WSS-SGV-CCTE
           IF SCR-CMND NOT = 'VRF'
                MOVE OPD-SGV-MPRE IN OPD-FLD TO WSS-SGV-CCTE.
       FIN-SET-CCTE.
           EXIT.

       GET-WSS-VAL-CAPT SECTION.
       INI-GET-WSS-VAL-CAPT.
           IF FRM-VAL-IPES IN OPD-FLD > ZEROES
               MOVE FRM-VAL-IPES IN OPD-FLD TO WSS-VAL-CAPT
           ELSE
               MOVE OPD-VAL-CAPT IN OPD-FLD TO WSS-VAL-CAPT.
       FIN-GET-WSS-VAL-CAPT.
           EXIT.

      * GENESIS
       COPY GNSBFCIC.
       COPY GNSBGCIC.

      *  CODIGO ADICIONAL PARA ENGANCHE PROGRAMAS
       EGR-FPEN-CIC SECTION.
       INI-EGR-FPEN-CIC.
           IF NOT (DBC-IND-ICLI IN OPD-FLD = 'M' OR
                   CAD-IND-TCAD IN OPD-FLD = 'M')
               GO TO FIN-EGR-FPEN-CIC.

           MOVE OPD-CAI-IOPD IN OPD-FLD TO SCR-CAI-IOPD.
           MOVE OPD-IIC-IOPD IN OPD-FLD TO SCR-IIC-IOPD.
           MOVE ZEROES       TO SCR-NUM-ILIQ.
           PERFORM CRG-TBL-ENG.
           ADD 1 TO SCR-IPRO.
           IF SCR-IND-ENG IN SCR-VEC-ENG(SCR-IPRO) = SPACES
               GO TO INI-EGR-FPEN-CIC.
           MOVE WSS-INST-FPEN-CIC TO SCR-INST-EXT.
           MOVE WSS-PROG(SCR-IPRO) TO SYS-PROG.
           MOVE SCR-VARI TO SYS-CMMA.
           MOVE SCR-TCMA TO SYS-TCMA.
           MOVE SYS-XCTL TO SYS-CMND.
      * PTC-INI-AUT
           IF NOT SCR-OFRM-SRV
      * PTC-FIN-AUT
           PERFORM GNS-PRO-SYS.
       FIN-EGR-FPEN-CIC.
           EXIT.

       COPY GNSBGINT.

      * proceso impresion
       PRO-EMI SECTION.
       INI-PRO-EMI.
           MOVE SPACES TO MSG-COD-MENS.
           IF OPD-IND-IDIF IN OPD = 'S'
               GO TO FIN-PRO-EMI.
           PERFORM CRG-KEY-IMP.
           MOVE FIO-GET-KEY-UPD TO FIO-CMND.
           PERFORM DAP-FIO-IMP.
           MOVE FIO-STAT TO PGM-STAT-IMP.
           MOVE SPACES TO IMP-GLS-FLAG IN IMP.
           MOVE OPD-CIC-ISER IN OPD TO IMP-CIC-ISER IN IMP.
      *LRH ini 28-JUN-1994
           PERFORM GET-FHOY.
      *LRH fin 28-JUN-1994
           MOVE HOY-FHOY TO IMP-FEC-FTRN IN IMP.
           MOVE HOY-HHOY TO IMP-HRA-HRTR IN IMP.
           MOVE 'I' TO IMP-COD-TACC IN IMP.
           IF OPD-COD-STAT IN OPD = 'A'
               MOVE 'A' TO IMP-COD-STAT IN IMP
           ELSE
           IF OPD-COD-STAT IN OPD = 'S' OR 'F' OR 'W'
               MOVE 'S' TO IMP-COD-STAT IN IMP
           ELSE
               MOVE SPACES TO IMP-COD-STAT IN IMP.
           MOVE SCR-OTRN TO IMP-COD-OTRN IN IMP.
           IF SCR-OFRM-SRV
               MOVE SCR-ORIG TO IMP-COD-OTRN IN IMP.

           MOVE SCR-USER TO IMP-COD-ATRN IN IMP.
           MOVE OPD-COD-TCDP IN OPD TO IMP-COD-TCDP IN IMP.
           MOVE OPD-COD-COPD IN OPD TO IMP-COD-COPD IN IMP.
           MOVE OPD-COD-OFIC IN OPD TO IMP-COD-OFIC IN IMP.
           MOVE OPD-COD-OFIC IN OPD TO OFI-COD-OFIC IN OFI.
           PERFORM BUS-OFI.
           MOVE OFI-GLS-DESC IN OFI TO IMP-GLS-OFIC IN IMP.
           MOVE OPD-FEC-FREA IN OPD TO IMP-FEC-FREA IN IMP.
           MOVE OPD-VAL-CAPT IN OPD TO IMP-VAL-CAPT IN IMP.
           MOVE FRM-VAL-IPES IN OPD-FLD TO IMP-VAL-VPES IN IMP.
           MOVE ZEROES                  TO IMP-SGV-SPRD IN IMP.
           MOVE OPD-SGV-TINT IN OPD TO IMP-SGV-TINT IN IMP.

      * JVM: Mantencion 11/06/1992
           MOVE OPD-VAL-SINT IN OPD TO IMP-SGV-TPER IN IMP.
      * JVM: Fin
           MOVE FRM-VAL-FORI IN OPD-FLD TO IMP-VAL-VFIN IN IMP.
           IF OPD-COD-MORE IN OPD = 'PI'
               PERFORM PRO-EMI-PI
           ELSE
               MOVE OPD-NUM-DURV IN OPD TO IMP-NUM-DURV IN IMP
               MOVE OPD-IND-DURV IN OPD TO IMP-IND-DURV IN IMP
               SUBTRACT IMP-VAL-CAPT IN IMP FROM
      *ADA-INI 24-SEP-2001
      *             IMP-VAL-VFIN IN IMP GIVING IMP-VAL-INTP IN IMP.
                    IMP-VAL-VFIN IN IMP GIVING IMP-SGV-INTP IN IMP.
      *ADA-FIN 24-SEP-2001
      *OGB-INI 13-ENE-2017 BALANCE OPTIMO DAP
           IF MSG-COD-MENS > SPACES
              PERFORM BCK-OUT
              GO TO FIN-PRO-EMI.
      *OGB-FIN 13-ENE-2017 BALANCE OPTIMO DAP
           PERFORM GET-CUR-RCC.
           MOVE RCC-CIC-ICLI IN RCC TO DBC-CIC-ICLI IN DBC.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM SGC-FIO-DBC.
           IF FIO-STAT-OKS
               PERFORM CPT-NOMB
               MOVE 1 TO IMP-NUM-NCLI IN IMP
               MOVE DBC-IDC-ICLI IN DBC TO IMP-IDC-ICL1 IN IMP
               MOVE DBC-VRF-ICLI IN DBC TO IMP-VRF-ICL1 IN IMP
               MOVE DBC-GLS-NOMC IN DBC TO IMP-GLS-NOM1 IN IMP.

           PERFORM GET-NXT-RCC.
           IF SCR-IND-MCLI NOT = 'M'
               MOVE ZEROES TO IMP-NUM-ICL2 IN IMP
               MOVE SPACES TO IMP-VRF-ICL2 IN IMP
               MOVE SPACES TO IMP-IND-ICL2 IN IMP
               MOVE SPACES TO IMP-GLS-ICL2 IN IMP
               MOVE SPACES TO IMP-GLS-NOM2 IN IMP
           ELSE
               MOVE WSS-BKP-CIC-ICLI IN WSS-VARI TO DBC-CIC-ICLI IN DBC
               MOVE FIO-GET-KEY TO FIO-CMND
               PERFORM SGC-FIO-DBC
               IF FIO-STAT-OKS
                   PERFORM CPT-NOMB
                   MOVE 2 TO IMP-NUM-NCLI IN IMP
                   MOVE DBC-IDC-ICLI IN DBC TO IMP-IDC-ICL2 IN IMP
                   MOVE DBC-VRF-ICLI IN DBC TO IMP-VRF-ICL2 IN IMP
                   MOVE DBC-GLS-NOMC IN DBC TO IMP-GLS-NOM2 IN IMP.

           MOVE OPD-COD-GARA IN OPD TO IMP-COD-GARA IN IMP.
           MOVE OPD-FEC-FPVC IN OPD TO IMP-FEC-FPVC IN IMP.
           MOVE OPD-NUM-RETD IN OPD TO IMP-NUM-RETD IN IMP.
           MOVE OPD-IND-RETD IN OPD TO IMP-IND-RETD IN IMP.
           MOVE OPD-COD-CUST IN OPD TO IMP-COD-CUST IN IMP.
           MOVE OPD-COD-RENO IN OPD TO IMP-COD-RENO IN IMP.
           MOVE OPD-COD-ENDO IN OPD TO IMP-COD-ENDO IN IMP.
           MOVE OPD-FEC-FTER IN OPD TO IMP-FEC-FTER IN IMP.
           MOVE SPACES              TO IMP-COD-PLZO IN IMP.
      * DAPR0009-INI(RRM) 30-09-1999
           MOVE OPD-COD-CUSO IN OPD TO IMP-COD-CUSO IN IMP.
      * DAPR0009-FIN(RRM) 30-09-1999
           MOVE SPACES TO IMP-GLS-SAFE IN IMP.
           MOVE SPACES TO IMP-GLS-DISP IN IMP.
           IF PGM-STAT-IMP-OKS
               MOVE FIO-MOD TO FIO-CMND
           ELSE
               MOVE FIO-PUT TO FIO-CMND.
           PERFORM DAP-FIO-IMP.
           IF NOT FIO-STAT-OKS
               MOVE 'DAP' TO MSG-COD-SIST
               MOVE 'EMI    ERR' TO MSG-COD-MENS
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS
               PERFORM BCK-OUT.
       FIN-PRO-EMI.
           EXIT.

       PRO-EMI-PI SECTION.
       INI-PRO-EMI-PI.
      *    ACCESO A POD
           MOVE OPD-COD-VCAM IN OPD-FLD TO POD-COD-VCAM IN POD.
           MOVE OPD-COD-TOPD IN OPD-FLD TO POD-COD-TOPD IN POD.
           MOVE OPD-COD-AOPD IN OPD-FLD TO POD-COD-AOPD IN POD.
           MOVE ZEROES                  TO POD-NUM-IPOD IN POD.
           PERFORM GET-POD.
      *OGB-INI 13-ENE-2017 BALANCE OPTIMO DAP
           IF MSG-COD-MENS > SPACES
              GO TO FIN-PRO-EMI-PI.
      *OGB-FIN 13-ENE-2017 BALANCE OPTIMO DAP
            IF (POD-NUM-VMIN IN POD = POD-NUM-VMAX IN POD) AND
               (POD-IND-PMIN IN POD = POD-IND-PMAX IN POD)
                MOVE POD-NUM-VMIN IN POD TO IMP-NUM-DURV IN IMP
                MOVE POD-IND-PMIN IN POD TO IMP-IND-DURV IN IMP
                PERFORM EXP-VEN.
       FIN-PRO-EMI-PI.
           EXIT.

       EXP-VEN SECTION.
       INI-EXP-VEN.
           MOVE OPD TO WSS-BKP-OPD.
           MOVE VEN TO WSS-BKP-VEN.
           MOVE SPACES TO MSG-COD-MENS.
           PERFORM GET-COD-CIC-OPD.
           IF MSG-COD-MENS > SPACES
               GO TO FIN-EXP-VEN.

           MOVE FIO-GET-FST TO FIO-CMND.
       CIC-EXP-VEN.
           PERFORM GEN-PRX-RTR.
           IF MSG-COD-MENS > SPACES
               GO TO FIN-EXP-VEN.
           IF DAP-VEN-STAT-OKS
              IF OPD-NUM-VNLQ IN OPD = ZEROES
                  PERFORM SET-VLR-IMP-PI
              ELSE
                  MOVE FIO-GET-NXT TO FIO-CMND
                  GO TO CIC-EXP-VEN.

       FIN-EXP-VEN.
           MOVE WSS-BKP-OPD TO OPD.
           MOVE WSS-BKP-VEN TO VEN.
           MOVE FIO-GET-KEY-UPD TO FIO-CMND.
           PERFORM DAP-FIO-VEN.
           IF FIO-STAT-OKS
               MOVE IMP-VAL-VFIN IN IMP TO VEN-VAL-FFLE IN VEN
               MOVE FIO-MOD TO FIO-CMND
               PERFORM DAP-FIO-VEN.
       END-EXP-VEN.
           EXIT.

       SET-VLR-IMP-PI SECTION.
       INI-SET-VLR-IMP-PI.
           IF OPD-COD-AOPD IN OPD = 'ERN' OR
              OPD-COD-AOPD IN OPD = 'NRN'
                COMPUTE IMP-SGV-INTP IN IMP =
                   WSS-SGV-IACU +
                   (VEN-VAL-FINA IN VEN -
                    VEN-VAL-CAPI IN VEN)
           ELSE
                COMPUTE IMP-SGV-INTP IN IMP =
                   (VEN-VAL-FINA IN VEN -
                    VEN-VAL-CAPI IN VEN).
           COMPUTE IMP-VAL-VFIN IN IMP =
                   IMP-VAL-CAPT IN IMP +
                   IMP-SGV-INTP IN IMP.
       FIN-SET-VLR-IMP-PI.
           EXIT.

       COPY SGCBFOPE.
       COPY SGCBFRCO.
       COPY DAPBGLPD.
      * DAPR0005-INI(ISP) 11-10-1999
       COPY DAPBGRVI.
      * DAPR0005-FIN(ISP) 11-10-1999

      * proceso journal
       PRO-JNL SECTION.
       INI-PRO-JNL.
           MOVE SPACES TO JNL.
           MOVE ZEROES TO JNL-FEC-CTB
                          JNL-VAL-1
                          JNL-VAL-2
                          JNL-FEC-EMI
                          JNL-FEC-LIQ
                          JNL-TAS-INT
                          JNL-NUM-LIQ
                          JNL-FEC-VTO.

      * DATOS CONSTANTES
      *    TIPO DE REGISTRO (E/S)
           MOVE 'S' TO JNL-TIP-REG.
      *    CANT. DE REGISTROS POR REG. LOGICO
           MOVE '0' TO JNL-CTD-REG.
      *    CODIGO DE SECUENCIA DEL REG. (0)
           MOVE '0' TO JNL-COD-SEC-REG.
      *    FECHA DE PROCESO
           MOVE HOY-FHOY TO JNL-FEC-PRC.
      *    HORA DE PROCESO
           MOVE HOY-HHOY TO JNL-HOR-PRC.
      *    NUMERO DE SEGUIMIENTO
      *     MOVE '1800' TO CIC-CAI-ICIC IN CIC.
      *     MOVE CIC-GET TO CIC-CMND.
      *     PERFORM PRO-CIC.
      *     IF CIC-STAT NOT = CIC-STAT-OKS
      *         MOVE CIC-MENS TO FRM-MENS
      *         MOVE FIO-STAT-NEX TO FIO-STAT
      *         GO TO FIN-PRO-JNL
      *     ELSE
      *        CENTRO DE ASIGNACION SEGUIM.
      *         MOVE CIC-CAI-ICIC TO JNL-CAI-SGM
      *        NUMERO SECUENCIAL DENTRO CEN. ASG.
      *         MOVE CIC-IIC-ICIC TO JNL-IIC-SGM.
           MOVE SPACES TO JNL-CAI-SGM.
           MOVE ZEROES TO JNL-IIC-SGM.

      *    CODIGO DE SISTEMA DE LA TRN
           MOVE 'DAP' TO JNL-COD-SIS-TRN.

      *    CODIGO DE TRANSACCION
           MOVE 'DAP' TO TAB-COD-SIST.
           MOVE 'EVT' TO TAB-COD-TTAB IN TAB.
           MOVE SCR-CMND TO TAB-COD-CTAB IN TAB.
           PERFORM BUS-TAB.
           MOVE TAB-CIC-CTAB IN TAB TO JNL-COD-TRN.

      *    CODIGO DE TRANSACCION
           MOVE SPACES TO JNL-COD-AUX-TRN.

      *    AMBIENTE GENERACION (SAFE,CICS,ETC)
           MOVE 'I' TO JNL-COD-AMB.

      *    MODALIDAD (LINEA,FUERA DE LINEA)
           MOVE 'L' TO JNL-COD-MOD.

           MOVE SCR-USER TO JNL-IDN-USU-OPR.

           MOVE SCR-OTRN TO JNL-TML.
           IF SCR-OFRM-SRV
               MOVE SCR-ORIG TO JNL-TML.

           MOVE SPACES TO JNL-COD-TUS-AUT.
           MOVE OPD-COD-EATE IN OPD TO JNL-IDN-USU-AUT.

      *    CODIGO DE PRODUCTO
      *    OPD-COD-COPD -> TO JNL-COD-PDT
      *    CODIGO DE ESTADO DE PROCESAMIENTO
           MOVE 'P' TO JNL-COD-EST-PRC.
      *    TIPO ORIGEN PARA CUADRAT. (OFI/INT)
           MOVE SPACES TO JNL-TIP-ORN-CUA.
      *    CODIGO DE CUADRATURA
           MOVE SPACES TO JNL-COD-CUA.
      *    FECHA CONTABLE
           MOVE HOY-FHOY TO JNL-FEC-CTB.

      * DATOS VARIABLES
      *    CODIGO OFICINA ORIGEN
      *    CODIGO OFICINA DESTINO
           MOVE OPD-COD-OFIC IN OPD TO JNL-COD-OFI-ORN
                                       JNL-COD-OFI-DST.
      *    EJECUTIVO DEL DAP (NOTA 4)
           MOVE OPD-STP-ITRN IN OPD TO JNL-STP-ITRN.
      *    CODIGO OPERACION
           MOVE OPD-CIC-IOPD IN OPD TO JNL-COP.
      *     MOVE OPD-CAI-IOPD IN OPD TO JNL-NUM-SIS.
      *     MOVE OPD-CAI-IOPD IN OPD TO JNL-COD-CRR.

      *    CLASE DE OPERACION
           MOVE OPD-COD-COPD IN OPD TO JNL-CLA-OPE.
      *     MOVE OPD-COD-TOPD IN OPD TO JNL-TIP-OPE.
      *     MOVE OPD-COD-AOPD IN OPD TO JNL-STP-OPE.

      *    CIC DEL CLIENTE 'M'
      *    RCC-CIC-ICLI -> JNL-CIC-CLI.
      *     IF SCR-IND-MCLI NOT = 'M'
           MOVE RCC-CIC-ICLI IN RCC TO JNL-CIC-CLI IN JNL.

      *    VALOR DE CAMBIO OPERACION
           MOVE OPD-COD-VCAM IN OPD TO JNL-VCB-OPE.

      *    MONTO 1
           MOVE OPD-VAL-CAPT IN OPD TO JNL-VAL-1.

      *    MONTO 2
      *    LIQ-SGV-TPAG -> JNL-VAL-2

      *    EJECUTIVO QUE ATIENDE AL CLIENTE.
           MOVE OPD-COD-EJEC IN OPD TO JNL-COD-EJE.

      *    FECHA EMISION
           MOVE OPD-FEC-FREA IN OPD TO JNL-FEC-EMI.

      *    FECHA LIQUIDACION
      *    LIQ-FEC-FREA -> JNL-FEC-LIQ.

      *    TIPO TASA DE INTERES.
           MOVE OPD-COD-TINT IN OPD TO JNL-TIP-TAS-INT.

      *    TASA DE INTERES
           MOVE OPD-SGV-TINT IN OPD TO JNL-TAS-INT.

      *    NUMERO DE LIQUIDACION
      *    LIQ-NUM-ILIQ -> JNL-NUM-LIQ

      *    FECHA VENCIMIENTO
           MOVE OPD-FEC-FTER IN OPD TO JNL-FEC-VTO.

      *    CODIGO OPERACION ABONO.
           MOVE CAD-CAI-ICAD IN OPD-FLD TO CAD-CAI-ICAD IN CAD.
           MOVE CAD-IIC-ICAD IN OPD-FLD TO CAD-IIC-ICAD IN CAD.
           MOVE CAD-CIC-ICAD IN CAD TO JNL-COP-ABO.

      *    EJECUTIVO LIQUIDACION.
      *    LIQ-COD-EJEC -> JNL-COD-EJE-LIQ

      *    SERIAL DOCUMENTO.
           MOVE OPD-CIC-ISER IN OPD TO JNL-SRL-DOC.

      *    MOTIVO ONP.
      *    ONP-COD-MONP -> JNL-COD-MOT-ONP
           MOVE OPD-COD-IONP IN OPD TO JNL-COD-MOT-ONP IN JNL.

      *    INDICADOR MULTIPLES CLIENTES.
           MOVE 'N'     TO JNL-IND-MUL-CLI.
           IF SCR-IND-MCLI = 'M'
               MOVE 'S' TO JNL-IND-MUL-CLI.

       PUT-JNL.
           MOVE FIO-PUT TO FIO-CMND.
           PERFORM DAP-FIO-JNL.
           IF NOT FIO-STAT-OKS
      *        Error al grabar el journal
               MOVE 'DAP' TO MSG-COD-SIST
               MOVE 'JNL    ERR' TO MSG-COD-MENS
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS
               PERFORM BCK-OUT.
       FIN-PRO-JNL.
           EXIT.

      *RVM-ADA-INI 22.02.2001
       GET-PLZO SECTION.
       INI-GET-PLZO.
      *CIMA-INI 27-MAY-2016 INCONSISTENCIA PLAZO DAP WEB UF
      *    MOVE ZEROES TO WSS-TOT-PLZO.
      *    MOVE 'TAB'  TO FIO-SIST.
      *    MOVE 'PZO'  TO TAB-COD-TTAB.
      *    MOVE SPACES TO TAB-COD-CTAB.
      *    MOVE FIO-GET-NLS TO FIO-CMND.
      *    PERFORM GNS-FIO-TAB.
      *    PERFORM BUS-PLZO UNTIL
      *          NOT (FIO-STAT-OKS AND
      *               TAB-COD-TTAB IN TAB = 'PZO').
      *
      *    PERFORM PLZO-CTB.
      *    IF OKS-PLZO-CTB = 'N'
      *       MOVE 'N' TO OKS-IMP-OPD
      *       MOVE FIO-ULK-REC TO FIO-CMND
      *       PERFORM DAP-FIO-OPD
      *       GO TO FIN-GET-PLZO.
           MOVE OPD-FEC-FTER IN OPD TO PLZ-FEC-FTER IN PLZ-VARI.
           MOVE OPD-FEC-FREA IN OPD TO PLZ-FEC-FREA IN PLZ-VARI.
           MOVE OPD-NUM-PVEN IN OPD TO PLZ-NUM-PDAP IN PLZ-VARI.
           MOVE OPD-IND-PVEN IN OPD TO PLZ-IND-PDAP IN PLZ-VARI.
           PERFORM CHK-PLZO-CTB.

           MOVE PLZ-COD-PCTB IN PLZ-VARI TO OPD-COD-PLZO IN OPD.
           MOVE PLZ-COD-SCTB IN PLZ-VARI TO OPD-COD-SCTB IN OPD.
      *CIMA-FIN 27-MAY-2016 INCONSISTENCIA PLAZO DAP WEB UF
       FIN-GET-PLZO.
           EXIT.

       BUS-PLZO SECTION.
       INI-BUS-PLZO.
           MOVE TAB-GLS-DATA IN TAB TO WSS-GLS-DATA
           IF NOT (TAB-IND-VIGE IN TAB = 'S' AND
                   WSS-GLS-PZO-DAP = 'S')
                MOVE FIO-GET-NXT TO FIO-CMND
                PERFORM GNS-FIO-TAB
           ELSE
                MOVE TAB-GLS-ABRV IN TAB TO NUM-NUME
                MOVE NUM-ZERO-N TO NUM-ZERO
                MOVE NUM-SGNO-N TO NUM-SGNO
                MOVE 5 TO NUM-NENT
                MOVE 0 TO NUM-NDCM
                PERFORM VAL-NUM
                IF NUM-STAT-OKS
                    ADD 1 TO WSS-TOT-PLZO
                    MOVE NUM-NN9N TO WSS-NUM-PLZO IN
                                     WSS-VEC-PLZO(WSS-TOT-PLZO)
                    MOVE TAB-COD-CTAB IN TAB TO
                                     WSS-COD-PLZO IN
                                     WSS-VEC-PLZO(WSS-TOT-PLZO)
                    MOVE FIO-GET-NXT TO FIO-CMND
                    PERFORM GNS-FIO-TAB.
      *         ELSE
      *             DISPLAY ' PARAMETRO DE PLAZO CONTABLE NO NUMERICO'
      *             PERFORM GNS-PRO-ABT.
       FIN-BUS-PLZO.
           EXIT.

       PLZO-CTB SECTION.
       INI-PLZO-CTB.
           MOVE 'S' TO OKS-PLZO-CTB.
           MOVE OPD-NUM-DREA IN OPD TO FEC-DEC1.
           MOVE OPD-NUM-MREA IN OPD TO FEC-MEC1.
           MOVE OPD-NUM-SREA IN OPD TO FEC-SEC1.
           MOVE OPD-NUM-AREA IN OPD TO FEC-AEC1.
           MOVE OPD-NUM-DTER IN OPD TO FEC-DEC2.
           MOVE OPD-NUM-MTER IN OPD TO FEC-MEC2.
           MOVE OPD-NUM-STER IN OPD TO FEC-SEC2.
           MOVE OPD-NUM-ATER IN OPD TO FEC-AEC2.

           MOVE FEC-FORM-FEC TO FEC-FORM.
           MOVE FEC-DIF-DIA  TO FEC-CMND.
           PERFORM CAL-FEC.
           IF NOT FEC-STAT-OKS
      *         DISPLAY ' '
      *         DISPLAY ' PROCESO CANCELADO '
      *         DISPLAY ' ERROR EN DIFERENCIA DIAS PERIODO'
      *         DISPLAY ' CALCULO PLAZO CONTABLE'
      *                   FEC-STAT ' : ' FEC-MENS
               MOVE SPACES TO OPD-COD-PLZO IN OPD
           ELSE
               PERFORM PLZO-VEC VARYING WSS-I FROM 1 BY 1 UNTIL
                     WSS-I > WSS-TOT-PLZO OR
                     FEC-NDIA NOT > WSS-NUM-PLZO(WSS-I).

           IF FEC-STAT-OKS
               IF WSS-I > WSS-TOT-PLZO
      *             DISPLAY ' '
      *             DISPLAY ' PROCESO CANCELADO '
      *             DISPLAY OPD-CIC-IOPD IN OPD
      *             DISPLAY ' OPERACION FUERA DE RANGO DE '
      *                     'PLAZOS CONTABLES'
      *             PERFORM GNS-PRO-ABT
                   MOVE SPACES TO OPD-COD-PLZO IN OPD
               ELSE
                   MOVE WSS-COD-PLZO IN WSS-VEC-PLZO(WSS-I) TO
                        OPD-COD-PLZO IN OPD
                   MOVE 'VIG' TO OPD-COD-SCTB IN OPD.
       FIN-PLZO-CTB.
           EXIT.

       PLZO-VEC SECTION.
       INI-PLZO-VEC.
       FIN-PLZO-VEC.
           EXIT.
      * ISP-INI 17-ABR-2018 COMANDO RDP
       PRO-STAT-I SECTION.
       INI-PRO-STAT-I.
      * ISP-INI 17-ABR-2018 COMANDO RDP
           IF SCR-CNAL = WSS-CTE-110 AND
              OPD-COD-STAT IN OPD = WSS-CTE-STATG
                 MOVE WSS-CTE-STATI TO OPD-COD-STAT IN OPD.
      * ISP-FIN 17-ABR-2018 COMANDO RDP
       FIN-PRO-STAT-I.
           EXIT.
      * ISP-FIN 17-ABR-2018 COMANDO RDP

       PRO-CUST-E SECTION.
       INI-PRO-CUST-E.
           MOVE SPACES TO MSG-COD-MENS.
           IF SCR-CCPP = 'ING'
      *LLAVE ESTA EN REGISTRO, NO EN PANTALLA
               NEXT SENTENCE
           ELSE
               MOVE OPD-CAI-IOPD IN OPD-FLD TO OPD-CAI-IOPD IN OPD
               MOVE OPD-IIC-IOPD IN OPD-FLD TO OPD-IIC-IOPD IN OPD
           END-IF.

           MOVE FIO-GET-KEY-UPD TO FIO-CMND.
           PERFORM DAP-FIO-OPD.
           IF NOT FIO-STAT-OKS
               GO TO FIN-PRO-CUST-E
           ELSE
               IF OPD-COD-STAT IN OPD NOT = 'A' AND
                  OPD-CAI-ISER IN OPD NOT = '0712'
                   MOVE FIO-ULK-REC TO FIO-CMND
                   PERFORM DAP-FIO-OPD
                   GO TO FIN-PRO-CUST-E
               ELSE
                   MOVE '0712' TO CIC-CAI-ICIC IN CIC
                   MOVE CIC-GET TO CIC-CMND
                   PERFORM PRO-CIC
                   IF CIC-STAT NOT = CIC-STAT-OKS
                       MOVE FIO-ULK-REC TO FIO-CMND
                       PERFORM DAP-FIO-OPD
                       GO TO FIN-PRO-CUST-E
                   ELSE
                       MOVE OPD-CAI-IOPD IN OPD TO IMP-CAI-IOPD IN IMP
                       MOVE OPD-IIC-IOPD IN OPD TO IMP-IIC-IOPD IN IMP
                       MOVE FIO-GET-KEY-UPD TO FIO-CMND
                       PERFORM DAP-FIO-IMP
                       IF NOT FIO-STAT-OKS
                           GO TO FIN-PRO-CUST-E
                       ELSE
                         MOVE CIC-CIC-ICIC TO IMP-CIC-ISER IN IMP
                         MOVE 'G' TO IMP-COD-STAT IN IMP
                         MOVE FIO-MOD TO FIO-CMND
                         PERFORM DAP-FIO-IMP
                         MOVE IMP-CIC-ISER IN IMP TO OPD-CIC-ISER IN OPD
                         MOVE 'G' TO OPD-COD-STAT IN OPD
                         MOVE 'VIG' TO OPD-COD-SCTB IN OPD
                         PERFORM GET-FHOY
                         MOVE HOY-FHOY TO OPD-FEC-FTRN IN OPD
                         MOVE HOY-HHOY TO OPD-HRA-HRTR IN OPD
                         MOVE FIO-MOD TO FIO-CMND
      *RVM-ADA-INI 04.06.2002
                         PERFORM VALIDA-DATA-OPD
                         IF WSS-DATA-OPD-OKS NOT = 'S'
                             MOVE 'ERRDATAOPD  ' TO MSG-COD-MENS
                             GO TO FIN-PRO-CUST-E
                         END-IF
      * ISP-INI 17-ABR-2018 COMANDO RDP
                         PERFORM PRO-STAT-I
      * ISP-FIN 17-ABR-2018 COMANDO RDP
      *RVM-ADA-FIN 04.06.2002
                         PERFORM DAP-FIO-OPD.
       FIN-PRO-CUST-E.
           EXIT.
      *RVM-ADA-FIN 22.02.2001

       SET-OPD-STAT-CE SECTION.
       INI-SET-OPD-STAT-CE.
           MOVE 'G' TO OPD-COD-STAT IN OPD.
           IF NOT SCR-OFRM-SRV AND
                  SCR-CCPP = 'ING' AND
                  SCR-CMND = 'ODL' AND
                  SCR-CIC-MORE = 'PI'
                      MOVE 'I' TO OPD-COD-STAT IN OPD.
      *     DISPLAY 'SET-OPD-STAT-CE OPD-COD-STAT ' OPD-COD-STAT IN OPD.
       FIN-SET-OPD-STAT-CE.
           EXIT.

       SET-IMP-STAT-CE SECTION.
       INI-SET-IMP-STAT-CE.
           MOVE 'G' TO IMP-COD-STAT IN IMP.
           IF NOT SCR-OFRM-SRV AND
                  SCR-CCPP = 'ING' AND
                  SCR-CMND = 'ODL' AND
                  SCR-CIC-MORE = 'PI'
                      MOVE 'I' TO IMP-COD-STAT IN IMP.
      *     DISPLAY 'SET-IMP-STAT-CE IMP-COD-STAT ' IMP-COD-STAT IN IMP.
       FIN-SET-IMP-STAT-CE.
           EXIT.

      *RVM-ADA-INI 04.06.2002
       VALIDA-DATA-OPD SECTION.
       INI-VALIDA-DATA-OPD.
      *VALIDA LA CONSISTENCIA DE LOS DATOS OPD, JUSTO ANTES DE GRABAR
           MOVE 'N' TO WSS-DATA-OPD-OKS.
           IF OPD-FEC-FREA IN OPD NOT > ZEROES
               GO TO FIN-VALIDA-DATA-OPD
           END-IF.
           IF OPD-FEC-FCTB IN OPD NOT > ZEROES
               GO TO FIN-VALIDA-DATA-OPD
           END-IF.
           IF OPD-FEC-FCMP IN OPD NOT > ZEROES
               GO TO FIN-VALIDA-DATA-OPD
           END-IF.
           IF OPD-FEC-FPVC IN OPD NOT > ZEROES
               GO TO FIN-VALIDA-DATA-OPD
           END-IF.
           IF SCR-CCPP NOT = 'ING'
               MOVE 'S' TO WSS-DATA-OPD-OKS
               GO TO FIN-VALIDA-DATA-OPD
           END-IF.
           IF OPD-VAL-CAPT IN OPD NOT > ZEROES
               GO TO FIN-VALIDA-DATA-OPD
           END-IF.
           IF OPD-VAL-SCAP IN OPD NOT > ZEROES
               GO TO FIN-VALIDA-DATA-OPD
           END-IF.
           MOVE 'S' TO WSS-DATA-OPD-OKS.
       FIN-VALIDA-DATA-OPD.
           EXIT.
      *RVM-ADA-FIN 04.06.2002

      * PTC-INI-ADIC (RRM) 5-DEC-2002
       PUT-QUE-KEY-OPD SECTION.
       INI-PUT-QUE-KEY-OPD.
           IF SCR-OFRM-SRV
               MOVE PTC-OPD-TYPE TO QUE-TYPE
               MOVE TSK-TERM-ALF TO QUE-TERM
               MOVE QUE-DEL      TO QUE-CMND
               PERFORM GNS-PRO-QUE

               MOVE PTC-OPD-TYPE TO QUE-TYPE
               MOVE TSK-TERM-ALF TO QUE-TERM
               MOVE PTC-OPD-LENG TO QUE-LITM
               MOVE QUE-PUT      TO QUE-CMND
               MOVE OPD-CAI-IOPD IN OPD TO PTC-OPD-OPD-CAI-IOPD
               MOVE OPD-IIC-IOPD IN OPD TO PTC-OPD-OPD-IIC-IOPD
               MOVE PTC-OPD-ITEM TO QUE-ITEM
               PERFORM GNS-PRO-QUE.
      * PTC-FIN-ADIC (RRM) 5-DEC-2002
       FIN-PUT-QUE-KEY-OPD.
           EXIT.

       GET-TS-TPER SECTION.
       INI-GET-TS-TPER.
           MOVE TSK-TERM-ALF  TO QUE-TERM.
           MOVE PTC-TPER-TYPE TO QUE-TYPE.
           MOVE PTC-TPER-LENG TO QUE-LITM.
           MOVE 1 TO QUE-NITM.
           MOVE QUE-GET TO QUE-CMND.
           PERFORM GNS-PRO-QUE.
           IF QUE-STAT = QUE-STAT-OKS
               MOVE QUE-DEL TO QUE-CMND
               PERFORM GNS-PRO-QUE
               MOVE QUE-PUT TO QUE-CMND
               IF SCR-SGV-TPER NUMERIC
                   MOVE SCR-SGV-TPER TO PTC-TPER-SGV-TPER
                   MOVE PTC-TPER-ITEM TO QUE-ITEM
                   PERFORM GNS-PRO-QUE
               ELSE
                   MOVE ZEROES TO PTC-TPER-SGV-TPER
                   MOVE PTC-TPER-ITEM TO QUE-ITEM
                   PERFORM GNS-PRO-QUE.
       FIN-GET-TS-TPER.
           EXIT.

       BUS-TCAS SECTION.
       INI-BUS-TCAS.
           MOVE SPACES TO MSG-COD-MENS.
           MOVE 'TAB'    TO TAB-COD-SIST.
           MOVE 'VLR'    TO TAB-CIC-TTAB IN TAB.
           MOVE 'ITCA'              TO WSS-CIC-CTAB-4.
           MOVE POD-COD-PBTI IN POD TO WSS-CIC-CTAB-5.
           MOVE WSS-CIC-CTAB TO TAB-CIC-CTAB IN TAB.
           MOVE 'TAB-CIC-TABL' TO FIO-AKEY.
           PERFORM BUS-TAB.

           IF MSG-COD-MENS > SPACES
               MOVE 'DAP' TO MSG-COD-SIST
               MOVE 'CICITCANEX' TO MSG-COD-MENS
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS
                    GO TO FIN-BUS-TCAS
           ELSE
               MOVE TAB-COD-CTAB IN TAB     TO CAM-COD-VCAM IN CAM(1)
               MOVE OPD-COD-VCAM IN OPD-FLD TO CAM-COD-VCAM IN CAM(2)
               MOVE HOY-DHOY                TO CAM-NUM-DCAM IN CAM(1)
               MOVE HOY-MHOY                TO CAM-NUM-MCAM IN CAM(1)
               MOVE HOY-SHOY                TO CAM-NUM-SCAM IN CAM(1)
               MOVE HOY-AHOY                TO CAM-NUM-ACAM IN CAM(1)
               MOVE HOY-DHOY                TO CAM-NUM-DCAM IN CAM(2)
               MOVE HOY-MHOY                TO CAM-NUM-MCAM IN CAM(2)
               MOVE HOY-SHOY                TO CAM-NUM-SCAM IN CAM(2)
               MOVE HOY-AHOY                TO CAM-NUM-ACAM IN CAM(2)

               PERFORM TAB-FIO-CAM
               IF NOT (FIO-STAT-OKS AND
                       CAM-MSC-STAT = 'S')
                   MOVE 'DAP' TO MSG-COD-SIST
                   MOVE 'TCASCAMNEX' TO MSG-COD-MENS
                   PERFORM GET-MSG
                   MOVE MSG-GLS-DESC TO FRM-MENS
                   GO TO FIN-BUS-TCAS.
       FIN-BUS-TCAS.
           EXIT.

       PRO-CUST-E-PI SECTION.
       INI-PRO-CUST-E-PI.
      *       IF NOT SCR-OFRM-SRV AND
              IF SCR-CMND = 'VRF' AND
                 OPD-COD-MORE IN OPD = 'PI'
                    PERFORM PRO-CUST-E.
       FIN-PRO-CUST-E-PI.
           EXIT.

       MSG-ADA-PI SECTION.
       INI-MSG-ADA-PI.
           MOVE 'OPD'               TO WSS-MSG-OPD-OPD.
           MOVE SCR-CMND            TO WSS-MSG-OPD-CMD.
           MOVE OPD-COD-STAT IN OPD TO WSS-MSG-OPD-STS.
           MOVE SCR-IND-OCIC        TO WSS-MSG-OPD-CIC.
           MOVE 'DAP'       TO MSG-COD-SIST.
           MOVE WSS-MSG-OPD TO MSG-COD-MENS.
           PERFORM GET-MSG.
           IF SCR-IND-OCIC = 'S'
                MOVE OPD-CAI-IOPD IN OPD-FLD TO WSS-CPT-CAI
                MOVE OPD-IIC-IOPD IN OPD-FLD TO WSS-CPT-IIC
                PERFORM MSG-ADA
           ELSE
                PERFORM MSG-ADA.
       FIN-MSG-ADA-PI.
           EXIT.

       SIG-HBL-FCMP-LIQ SECTION.
       INI-SIG-HBL-FCMP-LIQ.
           MOVE WSS-FEC-FLIQ TO FEC-FECH.

       CIC-SIG-HBL-FCMP-LIQ.
           MOVE FEC-FORM-FEC TO FEC-FORM.
           MOVE FEC-SUM-DIA  TO FEC-CMND.
           MOVE 1            TO FEC-NDIA.
           PERFORM CAL-FEC.
           MOVE FEC-FORM-FEC TO FEC-FORM.
           MOVE FEC-FBLK-N   TO FEC-FBLK.
           MOVE FEC-CHOY-N   TO FEC-CHOY.
           MOVE FEC-VHBL-S   TO FEC-VHBL.
           MOVE FEC-VAL-FEC  TO FEC-CMND.
           PERFORM PRO-FEC.
           IF NOT FEC-STAT-HBL
                GO TO CIC-SIG-HBL-FCMP-LIQ.
           MOVE FEC-ITM1 TO LIQ-NUM-DCMP IN LIQ.
           MOVE FEC-ITM2 TO LIQ-NUM-MCMP IN LIQ.
           MOVE FEC-ITM3 TO LIQ-NUM-SCMP IN LIQ.
           MOVE FEC-ITM4 TO LIQ-NUM-ACMP IN LIQ.
       FIN-SIG-HBL-FCMP-LIQ.
           EXIT.

       COPY DAPBG008.
       COPY DAPBGVEN.
      *AFRI-INI 13-ABR-2011 INTEGRACION MC2
       COPY MC2BFROC.
       COPY MC2BGDPM.
       COPY TABBKRCC.
      *AFRI-FIN 13-ABR-2011 INTEGRACION MC2
      *>>>> EOF_PU
       COPY GNSBGVSM.

      *INI-CAF-052009
       PUT-LND-ANT SECTION.
       INI-MOD-ANT-REG-LND.
           MOVE SPACES TO LND.
           MOVE 'MDA'  TO LND-COD-EVEN IN LND.
           MOVE 'M'    TO LND-COD-TACC IN LND
                          LND-COD-STAT IN LND.
           MOVE 'ANT'  TO LND-COD-INST IN LND.
           MOVE 1 TO LND-NUM-CLND IN LND
                     LND-NUM-COPD IN LND
                     LND-NUM-CCLI IN LND
                     LND-NUM-CAUT IN LND.
           PERFORM PRO-GRABA-REG-LND.
       FIN-MOD-ANT-REG-LND.
            EXIT.

       PUT-LND-DES SECTION.
       INI-MOD-DES-REG-LND.
           MOVE SPACES TO LND.
           MOVE 'MDA'  TO LND-COD-EVEN IN LND.
           MOVE 'M'    TO LND-COD-TACC IN LND
                          LND-COD-STAT IN LND.
           MOVE 'DES'  TO LND-COD-INST IN LND.
           MOVE 2 TO LND-NUM-CLND IN LND
                     LND-NUM-COPD IN LND
                     LND-NUM-CCLI IN LND
                     LND-NUM-CAUT IN LND.
           PERFORM PRO-GRABA-REG-LND.
       FIN-MOD-DES-REG-LND.
           EXIT.
      *
       PRO-ING-REG-LND SECTION.
       INI-ING-REG-LND.
           MOVE SPACES TO LND.
           MOVE 'ING'  TO LND-COD-EVEN IN LND.
           MOVE 'I'    TO LND-COD-TACC IN LND
                          LND-COD-STAT IN LND.
           MOVE 'N/A'  TO LND-COD-INST IN LND.
           MOVE 1 TO LND-NUM-CLND IN LND
                     LND-NUM-COPD IN LND
                     LND-NUM-CCLI IN LND
                     LND-NUM-CAUT IN LND.
           PERFORM PRO-GRABA-REG-LND.
       FIN-ING-REG-LND.
           EXIT.
      *
       PRO-ELI-REG-LND SECTION.
       INI-ELI-REG-LND.
           MOVE SPACES TO LND.
           MOVE 'ELI'  TO LND-COD-EVEN IN LND.
           MOVE 'E'    TO LND-COD-TACC IN LND
                          LND-COD-STAT IN LND.
           MOVE 'N/A'  TO LND-COD-INST IN LND.
           MOVE 1 TO LND-NUM-CLND IN LND
                     LND-NUM-COPD IN LND
                     LND-NUM-CCLI IN LND
                     LND-NUM-CAUT IN LND.
           PERFORM PRO-GRABA-REG-LND.
       FIN-ELI-REG-LND.
           EXIT.
      *
       PRO-GRABA-REG-LND SECTION.
       INI-GRABA-REG-LND.
           MOVE '1.0' TO LND-COD-VERS IN LND.
           MOVE 'OPD' TO LND-COD-ENTF IN LND
                         LND-COD-ENTO IN LND
                         LND-COD-ENTC IN LND
                         LND-COD-ENTA IN LND
                         LND-COD-ENTI IN LND.
           MOVE HOY-FHOY TO LND-FEC-FTRN IN LND
                            LND-FEC-FLND IN LND
                            LND-FEC-FOPD IN LND
                            LND-FEC-FCLI IN LND
                            LND-FEC-FAUT IN LND.
           MOVE HOY-HHOY TO LND-HRA-HRTR IN LND
                            LND-HRA-HHND IN LND
                            LND-HRA-HOPD IN LND
                            LND-HRA-HCLI IN LND
                            LND-HRA-HAUT IN LND.
           MOVE OPD-CIC-IOPD IN OPD TO LND-CIC-IOPD IN LND.
           MOVE EIBTRMID            TO LND-COD-OTRN IN LND.
           MOVE SCR-USER            TO LND-COD-ATRN IN LND
                                       LND-COD-AUTO IN LND.
           MOVE EIBTRNID            TO LND-COD-TCIC IN LND.
      *CIMA-INI 20-OCT-2014 CORRECCION INCIDENTES DAP GRUPO 1 HITO 2
      *    MOVE 'MDA'               TO LND-COD-CMND IN LND.
           MOVE SCR-CMND            TO LND-COD-CMND IN LND.
      *CIMA-FIN 20-OCT-2014 CORRECCION INCIDENTES DAP GRUPO 1 HITO 2
           PERFORM PUT-LND-MDA
      *    PERFORM GET-CUR-RCC-MDA.
      *CIMA-INI 20-OCT-2014 CORRECCION INCIDENTES DAP GRUPO 1 HITO 2
           PERFORM GET-CUR-RCC-MDA.
      *CIMA-FIN 20-OCT-2014 CORRECCION INCIDENTES DAP GRUPO 1 HITO 2
      *    PERFORM GET-CUR-RCC.
      *    IF PGM-STAT-RCC-OKS
      *CIMA-INI 20-OCT-2014 CORRECCION INCIDENTES DAP GRUPO 1 HITO 2
           IF PGM-STAT-RCC-OKS
      *CIMA-FIN 20-OCT-2014 CORRECCION INCIDENTES DAP GRUPO 1 HITO 2
              MOVE RCC-CIC-ICLI IN RCC TO LND-CIC-ICLI IN LND.
           MOVE FIO-PUT TO FIO-CMND.
           PERFORM DAP-FIO-LND.
      *     IF PGM-STAT-RCC-OKS
      *        PERFORM GET-NXT-RCC-MDA
      *        PERFORM GET-NXT-RCC
      *        IF PGM-STAT-RCC-OKS
      *           ADD 1 TO LND-NUM-CLND IN LND
      *                    LND-NUM-COPD IN LND
      *                    LND-NUM-CCLI IN LND
      *                    LND-NUM-CAUT IN LND
      *           MOVE RCC-CIC-ICLI IN RCC TO LND-CIC-ICLI IN LND
      *           MOVE FIO-PUT TO FIO-CMND
      *           PERFORM DAP-FIO-LND.
      *     IF NOT PGM-STAT-RCC-OKS
      *        MOVE SPACES TO FIO-STAT.
       FIN-GRABA-REG-LND.
           EXIT.

       PUT-LND-MDA SECTION.
       INI-PUT-LND-MDA.
           MOVE RCC-NUM-DIRE IN RCC TO LND-COD-LN01 IN LND.
      *Comprobar que ya existe RCC-NUM-DIRE para ambas
      *invocaciones antes y despues.
           MOVE OPD-COD-EJEC IN OPD TO LND-COD-LN02 IN LND.
           MOVE OPD-COD-UBFD IN OPD TO LND-COD-LN03 IN LND.
           MOVE OPD-COD-CUST IN OPD TO LND-COD-LN04 IN LND.
           MOVE OPD-NUM-RETD IN OPD TO LND-COD-LN05 IN LND.
           MOVE OPD-IND-RETD IN OPD TO LND-COD-LN06 IN LND.
      *CIMA-INI 20-OCT-2014 CORRECCION INCIDENTES DAP GRUPO 1 HITO 2
           MOVE OPD-SGV-TINT IN OPD TO WSS-NUM-TASA.
           MOVE WSS-NUM-TASA        TO LND-COD-LN07 IN LND.
           MOVE OPD-VAL-CAPT IN OPD TO WSS-NUM-VALO.
           MOVE WSS-NUM-VALO        TO LND-COD-LN08 IN LND.
           MOVE OPD-SGV-MPRE IN OPD TO WSS-NUM-VALO.
           MOVE WSS-NUM-VALO        TO LND-COD-LN09 IN LND.
      *CIMA-FIN 20-OCT-2014 CORRECCION INCIDENTES DAP GRUPO 1 HITO 2
       FIN-PUT-LND-MDA.
           EXIT.

       GET-CUR-RCC-MDA SECTION.
       INI-GET-CUR-RCC-MDA.
           MOVE OPD-CIC-IOPD IN OPD TO RCC-CIC-IOPD IN RCC.
           MOVE 'RCC-KEY-IOPD' TO FIO-AKEY.
           MOVE FIO-GET-NLS    TO FIO-CMND.
           PERFORM DAP-FIO-RCC.
           IF NOT (FIO-STAT-OKS AND
                   OPD-CIC-IOPD IN OPD = RCC-CIC-IOPD IN RCC)
                   MOVE '23' TO FIO-STAT.
           MOVE FIO-STAT TO PGM-STAT-RCC.
       FIN-GET-CUR-RCC-MDA.
           EXIT.

       GET-NXT-RCC-MDA SECTION.
       INI-GET-NXT-RCC-MDA.
           MOVE SPACES TO MSG-COD-SIST.
           MOVE SPACES TO MSG-COD-MENS.
           MOVE 'RCC-KEY-IOPD' TO FIO-AKEY.
           MOVE FIO-GET-NXT TO FIO-CMND.
           PERFORM DAP-FIO-RCC.
           IF NOT (FIO-STAT-OKS AND
                   OPD-CIC-IOPD IN OPD = RCC-CIC-IOPD IN RCC)
              MOVE '23' TO FIO-STAT.
           MOVE FIO-STAT TO PGM-STAT-RCC.
       FIN-GET-NXT-RCC-MDA.
           EXIT.
      *FIN-CAF-052009

      *JCT-INI 09-JUL-2012 DPM FUNCIONALIDAD DOF OPERACIONES>450UF
       VAL-FUN-DOF SECTION.
       INI-VAL-FUN-DOF.
           PERFORM OBT-VAL-CAPT.


           IF WSS-MTO-CAPT IN WSS-VARI-DOF NOT < 450
              IF NOT SCR-OFRM-SRV  OR
                 SCR-CNAL  = '150' OR
                 SCR-CNAL  = '151'
                 PERFORM CON-LOG-AVI
                 IF NOT FIO-STAT-OKS
                    PERFORM CON-REG-UCT
                    IF NOT FIO-STAT-OKS OR
                      (FIO-STAT-OKS AND UCT-FEC-FCAP IN UCT <
                                  WSS-FEC-PROC-3 IN WSS-VARI-DOF)
                      PERFORM CON-CTA-CTE
                      IF WSS-CLI-HAB IN WSS-VARI-DOF = 'N'
                         PERFORM GEN-REG-LOG
                         IF NOT SCR-OFRM-SRV  AND
                           ( SCR-CMND = 'ODL' OR
                             SCR-CMND = 'ODB' )
                            PERFORM DSP-AVI-SCRT
                         ELSE
                            IF SCR-CNAL = '150' OR
                               SCR-CNAL = '151'
                               PERFORM SND-AVI-PRTL.
       FIN-VAL-FUN-DOF.
           EXIT.

       OBT-CAL-FEC SECTION.
       INI-OBT-CAL-FEC.
           MOVE HOY-SHOY  TO WSS-NUM-SPRO IN WSS-VARI-DOF.
           MOVE HOY-AHOY  TO WSS-NUM-APRO IN WSS-VARI-DOF.
           MOVE HOY-MHOY  TO WSS-NUM-MPRO IN WSS-VARI-DOF.
           MOVE HOY-DHOY  TO WSS-NUM-DPRO IN WSS-VARI-DOF.

           MOVE HOY-DHOY TO FEC-ITM1.
           MOVE HOY-MHOY TO FEC-ITM2.
           MOVE HOY-SHOY TO FEC-ITM3.
           MOVE HOY-AHOY TO FEC-ITM4.
           MOVE FEC-FORM-FEC TO FEC-FORM.
           MOVE FEC-FBLK-N   TO FEC-FBLK.
           MOVE FEC-CHOY-N   TO FEC-CHOY.
           MOVE FEC-VHBL-N   TO FEC-VHBL.
           MOVE 3            TO FEC-NMES.
           MOVE FEC-RST-MES  TO FEC-CMND.
           PERFORM CAL-FEC.
           MOVE FEC-ITM3         TO WSS-NUM-SPRO-3 IN WSS-VARI-DOF.
           MOVE FEC-ITM4         TO WSS-NUM-APRO-3 IN WSS-VARI-DOF.
           MOVE FEC-ITM2         TO WSS-NUM-MPRO-3 IN WSS-VARI-DOF.
           MOVE FEC-ITM1         TO WSS-NUM-DPRO-3 IN WSS-VARI-DOF.
       FIN-OBT-CAL-FEC.
           EXIT.

       CON-LOG-AVI SECTION.
       INI-CON-LOG-AVI.
           MOVE 'DAP'                   TO FIO-SIST.
           MOVE HOY-DHOY                TO LDF-NUM-DFE0 IN LDF.
           MOVE HOY-MHOY                TO LDF-NUM-MFE0 IN LDF.
           MOVE HOY-SHOY                TO LDF-NUM-SFE0 IN LDF.
           MOVE HOY-AHOY                TO LDF-NUM-AFE0 IN LDF.
           MOVE DBC-CIC-ICLI IN DBC     TO LDF-CIC-ICL0 IN LDF.
           MOVE OPD-COD-OFIC IN OPD-FLD TO LDF-COD-IOF0 IN LDF.
           MOVE OPD-COD-EJEC IN OPD-FLD TO LDF-COD-IEJ0 IN LDF.


           MOVE SPACES      TO FIO-AKEY.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM DAP-FIO-LDF.
       FIN-CON-LOG-AVI.
           EXIT.

       GEN-REG-LOG SECTION.
       INI-GEN-REG-LOG.
           MOVE SPACES                   TO LDF.
           MOVE HOY-SHOY                 TO WSS-NUM-SPAR.
           MOVE HOY-AHOY                 TO WSS-NUM-APAR.
           MOVE HOY-MHOY                 TO WSS-NUM-MPAR.
           MOVE HOY-DHOY                 TO WSS-NUM-DPAR.
           MOVE HOY-HHHY                 TO WSS-HHHY.
           MOVE HOY-MMHY                 TO WSS-MMHY.
           MOVE HOY-SSHY                 TO WSS-SSHY.
           MOVE ' '                      TO     LDF-GLS-FLAG IN LDF.
           MOVE WSS-FEC-FPAR IN WSS-VARI-DOF TO LDF-FEC-FFE0 IN LDF.
           MOVE DBC-CIC-ICLI IN DBC      TO     LDF-CIC-ICL0 IN LDF.
           MOVE OPD-COD-OFIC IN OPD-FLD  TO     LDF-COD-IOF0 IN LDF.
           MOVE OPD-COD-EJEC IN OPD-FLD  TO     LDF-COD-IEJ0 IN LDF.

           MOVE OPD-COD-OFIC IN OPD-FLD  TO     LDF-COD-IOF1 IN LDF.
           MOVE WSS-FEC-FPAR IN WSS-VARI-DOF TO LDF-FEC-FOFI IN LDF.

           MOVE DBC-CIC-ICLI IN DBC      TO     LDF-CIC-ICLI IN LDF.
           MOVE WSS-FEC-FPAR IN WSS-VARI-DOF TO LDF-FEC-FCLI IN LDF.

           MOVE OPD-COD-EJEC IN OPD-FLD  TO     LDF-COD-IEJ3 IN LDF.
           MOVE WSS-FEC-FPAR IN WSS-VARI-DOF TO LDF-FEC-FAUT IN LDF.

           MOVE WSS-FEC-FPAR IN WSS-VARI-DOF TO LDF-FEC-FTRN IN LDF.
           MOVE WSS-HHOY-RED IN WSS-VARI-DOF TO LDF-HRA-HRTR IN LDF.
           MOVE 'I'                      TO     LDF-COD-TACC IN LDF.
           MOVE 'A'                      TO     LDF-COD-STAT IN LDF.
           MOVE SCR-CNAL                 TO     LDF-COD-OTRN IN LDF.
           MOVE SCR-USER                 TO     LDF-COD-ATRN IN LDF.
           MOVE SCR-CMND                 TO     LDF-COD-CMND IN LDF.
      **
           MOVE OPD-CAI-IOPD IN OPD-FLD  TO WSS-CAI-IOPD
                                            IN WSS-VARI-DOF.
           MOVE OPD-IIC-IOPD IN OPD-FLD  TO WSS-IIC-IOPD
                                            IN WSS-VARI-DOF.

           MOVE WSS-CIC-IOPD IN WSS-VARI-DOF TO LDF-CIC-IOPD IN LDF.
           MOVE 'S'                      TO     LDF-COD-ICLA IN LDF.

           MOVE FIO-PUT                  TO FIO-CMND.
           PERFORM DAP-FIO-LDF.
       FIN-GEN-REG-LOG.
           EXIT.

       CON-REG-UCT SECTION.
       INI-CON-REG-UCT.
           MOVE 'DAP'                   TO FIO-SIST.
           MOVE 'CAP'                   TO UCT-COD-TREG IN UCT.
           MOVE DBC-CIC-ICLI IN DBC     TO UCT-CIC-ICLI IN UCT.
           MOVE SPACES                  TO FIO-AKEY.
           MOVE FIO-GET-KEY             TO FIO-CMND.
           PERFORM DAP-FIO-UCT.
       FIN-CON-REG-UCT.
           EXIT.

       GEN-REG-UCT SECTION.
       INI-GEN-REG-UCT.
           MOVE SPACES   TO UCT.
           MOVE HOY-SHOY TO WSS-NUM-SPAR.
           MOVE HOY-AHOY TO WSS-NUM-APAR.
           MOVE HOY-MHOY TO WSS-NUM-MPAR.
           MOVE HOY-DHOY TO WSS-NUM-DPAR.
           MOVE HOY-HHHY TO WSS-HHHY.
           MOVE HOY-MMHY TO WSS-MMHY.
           MOVE HOY-SSHY TO WSS-SSHY.
           PERFORM CON-REG-UCT.
           IF NOT FIO-STAT-OKS
              MOVE ' '                      TO UCT-GLS-FLAG IN UCT
              MOVE 'CAP'                    TO UCT-COD-TREG IN UCT
              MOVE DBC-CIC-ICLI IN DBC      TO UCT-CIC-ICLI IN UCT
              MOVE WSS-FEC-FPAR IN WSS-VARI-DOF TO UCT-FEC-FTRN IN UCT
              MOVE WSS-HHOY-RED IN WSS-VARI-DOF TO UCT-HRA-HTRN IN UCT
              MOVE WSS-FEC-FPAR IN WSS-VARI-DOF TO UCT-FEC-FCAP IN UCT
              MOVE OPD-CAI-IOPD IN OPD-FLD TO WSS-CAI-IOPD
                                              IN WSS-VARI-DOF
              MOVE OPD-IIC-IOPD IN OPD-FLD TO WSS-IIC-IOPD
                                              IN WSS-VARI-DOF
              MOVE WSS-CIC-IOPD IN WSS-VARI-DOF TO UCT-CIC-IOPD IN UCT
              MOVE SPACES                   TO UCT-GLS-DISP IN UCT
              MOVE FIO-PUT TO FIO-CMND
              PERFORM DAP-FIO-UCT
           ELSE
              MOVE FIO-GET-KEY-UPD TO FIO-CMND
              PERFORM DAP-FIO-UCT
              IF FIO-STAT-OKS
               MOVE WSS-FEC-FPAR IN WSS-VARI-DOF TO UCT-FEC-FTRN IN UCT
               MOVE WSS-HHOY-RED IN WSS-VARI-DOF TO UCT-HRA-HTRN IN UCT
               MOVE WSS-FEC-FPAR IN WSS-VARI-DOF TO UCT-FEC-FCAP IN UCT
               MOVE OPD-CAI-IOPD IN OPD-FLD  TO WSS-CAI-IOPD
                                                IN WSS-VARI-DOF
               MOVE OPD-IIC-IOPD IN OPD-FLD  TO WSS-IIC-IOPD
                                                IN WSS-VARI-DOF
               MOVE WSS-CIC-IOPD IN WSS-VARI-DOF TO UCT-CIC-IOPD IN UCT
               MOVE FIO-MOD TO FIO-CMND
               PERFORM DAP-FIO-UCT.
       FIN-GEN-REG-UCT.
           EXIT.

       CON-CTA-CTE SECTION.
       INI-CON-CTA-CTE.
           MOVE 'N'                 TO WSS-CLI-HAB IN WSS-VARI-DOF.
      *JCT-INI 09-JUL-2012 DPM FUNCIONALIDAD DOF OPERACIONES>450UF
      *    MOVE 'DAP'               TO FIO-SIST.
      *    MOVE DBC-CIC-ICLI IN DBC TO RCC-CIC-ICLI IN RCC.
           MOVE 'SGC'               TO FIO-SIST.
           MOVE DBC-CIC-ICLI IN DBC TO RCO-CIC-ICLI IN RCO.

           MOVE SPACES              TO RCO-CIC-IOPE IN RCO.
      *JCT-FIN 09-JUL-2012

           MOVE SPACES              TO FIO-AKEY.
           MOVE FIO-GET-NLS         TO FIO-CMND.
       LUP-CON-CTA-CTE.
      *JCT-INI 09-JUL-2012 DPM FUNCIONALIDAD DOF OPERACIONES>450UF
      *    PERFORM DAP-FIO-RCC.
           PERFORM SGC-FIO-RCO.
      *JCT-FIN 09-JUL-2012
           IF NOT ( FIO-STAT-OKS AND
      *JCT-INI 09-JUL-2012 DPM FUNCIONALIDAD DOF OPERACIONES>450UF
      *             RCC-CIC-ICLI IN RCC = DBC-CIC-ICLI IN DBC )
                    RCO-CIC-ICLI IN RCO = DBC-CIC-ICLI IN DBC )
      *JCT-FIN 09-JUL-2012
                    GO TO FIN-CON-CTA-CTE.

           MOVE 'SGC'               TO FIO-SIST.
      *JCT-INI 09-JUL-2012 DPM FUNCIONALIDAD DOF OPERACIONES>450UF
      *    MOVE RCC-CIC-IOPD IN RCC TO OPE-CIC-IOPE IN OPE.
           MOVE RCO-CIC-IOPE IN RCO TO OPE-CIC-IOPE IN OPE.
      *JCT-FIN 09-JUL-2012
           MOVE FIO-GET-KEY    TO FIO-CMND.
           PERFORM SGC-FIO-OPE.
           IF FIO-STAT-OKS
              IF OPE-COD-TOPR IN OPE = 'CCT'
                 MOVE 'S'           TO WSS-CLI-HAB IN WSS-VARI-DOF
                 GO TO FIN-CON-CTA-CTE.

       SIG-CON-CTA-CTE.
      *JCT-INI 09-JUL-2012 DPM FUNCIONALIDAD DOF OPERACIONES>450UF
      *    MOVE 'DAP'               TO FIO-SIST.
           MOVE 'SGC'               TO FIO-SIST.
      *JCT-FIN 09-JUL-2012
           MOVE FIO-GET-NXT         TO FIO-CMND.
           GO TO LUP-CON-CTA-CTE.
       FIN-CON-CTA-CTE.
           EXIT.

       DSP-AVI-SCRT SECTION.
       INI-DSP-AVI-SCRT.
           MOVE +9998               TO EIBCPOSN.
           MOVE SCR-VARI            TO SYS-CMMA.
           MOVE +3000               TO SYS-TCMA.
           MOVE 'GNSPPPK4'          TO SYS-PROG.
           MOVE SYS-XCTL            TO SYS-CMND.
           PERFORM GNS-PRO-SYS.
       FIN-DSP-AVI-SCRT.
           EXIT.

       SND-AVI-PRTL SECTION.
       INI-SND-AVI-PRTL.
           MOVE 'DAP'          TO MSG-COD-SIST.
           MOVE 'DECLDOFOBL  ' TO MSG-COD-MENS.
           PERFORM GET-MSG.
           MOVE MSG-GLS-DESC TO FRM-MENS.
           MOVE MSG-GLS-DESC TO OPD-GLS-MENS.
           MOVE FRM-SUAR-MAL TO FRM-SUAR.
           MOVE 'S' TO WSS-AVISO-DOF-MTI.
           MOVE 'S' TO SCR-IERR.
       FIN-SND-AVI-PRTL.
           EXIT.

       COPY DAPBFUCT.

       COPY DAPBFLDF.


       WRT-FUN-DOF SECTION.
       INI-WRT-FUN-DOF.
           PERFORM OBT-VAL-CAPT.

           MOVE 'N'   TO WSS-COD-ICLA IN WSS-VARI-DOF.
           IF WSS-MTO-CAPT IN WSS-VARI-DOF NOT < 450
              IF NOT SCR-OFRM-SRV  OR
                 SCR-CNAL  = '150' OR
                 SCR-CNAL  = '151'
                 PERFORM CON-REG-UCT
                 IF NOT FIO-STAT-OKS OR
                      (FIO-STAT-OKS AND UCT-FEC-FCAP IN UCT <
                                  WSS-FEC-PROC-3 IN WSS-VARI-DOF)
                    PERFORM CON-CTA-CTE
                    IF WSS-CLI-HAB IN WSS-VARI-DOF = 'N'
                       MOVE 'S'    TO WSS-COD-ICLA IN WSS-VARI-DOF.
           PERFORM MOD-REG-LOG.
           PERFORM GEN-REG-UCT.
       FIN-WRT-FUN-DOF.
           EXIT.

       MOD-REG-LOG SECTION.
       INI-MOD-REG-LOG.
           PERFORM CON-LOG-AVI.
           IF FIO-STAT-OKS AND
             (LDF-IIC-IOPD IN LDF = SPACES OR
              LDF-IIC-IOPD IN LDF = ZEROES)
              MOVE FIO-GET-KEY-UPD TO FIO-CMND
              PERFORM DAP-FIO-LDF
              MOVE OPD-CAI-IOPD IN OPD-FLD TO WSS-CAI-IOPD
                                              IN WSS-VARI-DOF
              MOVE OPD-IIC-IOPD IN OPD-FLD TO WSS-IIC-IOPD
                                              IN WSS-VARI-DOF
              MOVE WSS-CIC-IOPD IN WSS-VARI-DOF TO LDF-CIC-IOPD IN LDF
              MOVE 'M'                      TO LDF-COD-TACC IN LDF
              MOVE WSS-COD-ICLA IN WSS-VARI-DOF TO LDF-COD-ICLA IN LDF
              MOVE FIO-MOD         TO FIO-CMND
              PERFORM DAP-FIO-LDF.
       FIN-MOD-REG-LOG.
           EXIT.

       OBT-VAL-CAPT SECTION.
       INI-OBT-VAL-CAPT.
      * CALCULO DE FECHA DE PROCESO MENOS 3 MESES
           PERFORM GET-FHOY.
           PERFORM OBT-CAL-FEC.
      * OBTENER VALOR DE CAMBIO A LA FECHA DE PROCESO
           MOVE OPD-VAL-CAPT IN OPD-FLD TO WSS-MTO-CAPT IN WSS-VARI-DOF.

      *JCT-INI 04-01-2013 DPM FUNCIONALIDAD DOF OPERACIONES>450UF
           IF OPD-COD-VCAM IN OPD-FLD = '0998  '
              GO TO FIN-OBT-VAL-CAPT.

           IF OPD-COD-VCAM IN OPD-FLD NOT = '0999  '
              MOVE 'TAB'    TO TAB-COD-SIST FIO-SIST
              MOVE OPD-COD-VCAM IN OPD-FLD TO CAM-COD-VCAM IN CAM(1)
              MOVE '01'                    TO CAM-COD-TCAM IN CAM(1)
              MOVE '0999  '                TO CAM-COD-VCAM IN CAM(2)
              MOVE HOY-DHOY                TO CAM-NUM-DCAM IN CAM(1)
              MOVE HOY-MHOY                TO CAM-NUM-MCAM IN CAM(1)
              MOVE HOY-SHOY                TO CAM-NUM-SCAM IN CAM(1)
              MOVE HOY-AHOY                TO CAM-NUM-ACAM IN CAM(1)
              MOVE HOY-DHOY                TO CAM-NUM-DCAM IN CAM(2)
              MOVE HOY-MHOY                TO CAM-NUM-MCAM IN CAM(2)
              MOVE HOY-SHOY                TO CAM-NUM-SCAM IN CAM(2)
              MOVE HOY-AHOY                TO CAM-NUM-ACAM IN CAM(2)
              MOVE FIO-GET-KEY        TO FIO-CMND
              PERFORM TAB-FIO-CAM
              IF NOT (FIO-STAT-OKS AND
                      CAM-MSC-STAT = 'S')
                 MOVE 'DAP' TO MSG-COD-SIST
                 MOVE 'TCASCAMNEX' TO MSG-COD-MENS
                 PERFORM GET-MSG
                 MOVE MSG-GLS-DESC TO FRM-MENS
                 GO TO FIN-OBT-VAL-CAPT
              ELSE
                 MOVE CAM-SGV-VCAM IN CAM TO WSS-VAL-CAMB
                                             IN WSS-VARI-DOF
                 COMPUTE WSS-MTO-CAPT IN WSS-VARI-DOF =
                   OPD-VAL-CAPT IN OPD-FLD * WSS-VAL-CAMB
                                             IN WSS-VARI-DOF.

      *     IF OPD-COD-VCAM IN OPD-FLD = '0999  '
      *JCT-FIN 04-01-2013
              MOVE 'TAB'    TO TAB-COD-SIST FIO-SIST
              MOVE '0998  '                TO CAM-COD-VCAM IN CAM(1)
      *JCT-INI 04-01-2013 DPM FUNCIONALIDAD DOF OPERACIONES>450UF
      *       MOVE OPD-COD-VCAM IN OPD-FLD TO CAM-COD-VCAM IN CAM(2)
              MOVE '0999  '                TO CAM-COD-VCAM IN CAM(2)
      *JCT-FIN 04-01-2013
              MOVE HOY-DHOY                TO CAM-NUM-DCAM IN CAM(1)
              MOVE HOY-MHOY                TO CAM-NUM-MCAM IN CAM(1)
              MOVE HOY-SHOY                TO CAM-NUM-SCAM IN CAM(1)
              MOVE HOY-AHOY                TO CAM-NUM-ACAM IN CAM(1)
              MOVE HOY-DHOY                TO CAM-NUM-DCAM IN CAM(2)
              MOVE HOY-MHOY                TO CAM-NUM-MCAM IN CAM(2)
              MOVE HOY-SHOY                TO CAM-NUM-SCAM IN CAM(2)
              MOVE HOY-AHOY                TO CAM-NUM-ACAM IN CAM(2)
              MOVE FIO-GET-KEY        TO FIO-CMND
              PERFORM TAB-FIO-CAM
              IF NOT (FIO-STAT-OKS AND
                      CAM-MSC-STAT = 'S')
                 MOVE 'DAP' TO MSG-COD-SIST
                 MOVE 'TCASCAMNEX' TO MSG-COD-MENS
                 PERFORM GET-MSG
                 MOVE MSG-GLS-DESC TO FRM-MENS
                 GO TO FIN-OBT-VAL-CAPT
              ELSE
                 MOVE CAM-SGV-VCAM IN CAM TO WSS-VAL-CAMB
                                             IN WSS-VARI-DOF
                 COMPUTE WSS-MTO-CAPT IN WSS-VARI-DOF =
      *JCT-INI 04-01-2013 DPM FUNCIONALIDAD DOF OPERACIONES>450UF
      *            OPD-VAL-CAPT IN OPD-FLD / WSS-VAL-CAMB
                   WSS-MTO-CAPT IN WSS-VARI-DOF / WSS-VAL-CAMB
      *JCT-FIN 04-01-2013
                                             IN WSS-VARI-DOF.

       FIN-OBT-VAL-CAPT.
           EXIT.
      *JCT-FIN 09-JUL-2012
      *AFRI-INI 13-ABR-2011 INTEGRACION MC2
      *--------------------------------------------------------------
       GRB-VROC SECTION.
       INI-GRB-VROC.

           MOVE SPACES TO MSG-COD-MENS.
           MOVE 1 TO DPM-R.

       LUP-GRB-VROC.
           IF (DPM-R > 25)
                GO TO FIN-GRB-VROC.

           IF (DPM-ROC-COD-CPTO(DPM-R) NOT > SPACES )
                GO TO FIN-GRB-VROC.

           IF (DPM-ROC-COD-EVEN(DPM-R) NOT > SPACES )
                GO TO FIN-GRB-VROC.

           IF (DPM-ROC-COD-SIST(DPM-R) NOT > SPACES )
                GO TO FIN-GRB-VROC.

           PERFORM PUT-VROC.
           ADD 1 TO DPM-R.
           GO TO LUP-GRB-VROC.

       FIN-GRB-VROC.
           EXIT.
      *--------------------------------------------------------------
       PUT-VROC SECTION.
       INI-PUT-VROC.

           PERFORM BUS-ULT-CORR.

           MOVE SPACES                   TO ROC-GLS-FLAG IN ROC.

           MOVE OPD-CAI-IOPD IN OPD-FLD  TO ROC-CAI-IOPC IN ROC.
           MOVE OPD-IIC-IOPD IN OPD-FLD  TO ROC-IIC-IOPC IN ROC.

           MOVE DPM-ROC-EXT-IOPC(DPM-R)  TO ROC-EXT-IOPC IN ROC.
           MOVE DPM-ROC-COD-SIST(DPM-R)  TO ROC-COD-SIST IN ROC.
           MOVE DPM-ROC-COD-EVEN(DPM-R)  TO ROC-COD-EVEN IN ROC.
           MOVE WSS-NUM-CORR IN WSS-VARI TO ROC-NUM-IROC IN ROC.


           MOVE FEC-FHOY                TO ROC-FEC-FTRN IN ROC.
           MOVE FEC-HHOY                TO ROC-HRA-HRTR IN ROC.
           MOVE 'I'                     TO ROC-MSC-TACC IN ROC.
           MOVE DPM-ROC-IND-VIGE(DPM-R) TO ROC-IND-VIGE IN ROC.
           MOVE SCR-CNAL                TO ROC-COD-OTRN IN ROC.
           MOVE 'DAPPUOPD'              TO ROC-COD-ATRN IN ROC.
           MOVE DPM-ROC-COD-CPTO(DPM-R) TO ROC-COD-CPTO IN ROC.
           MOVE DPM-ROC-COD-SCPT(DPM-R) TO ROC-COD-SCPT IN ROC.
           MOVE DPM-ROC-COD-MODL(DPM-R) TO ROC-COD-MODL IN ROC.
           MOVE DPM-ROC-COD-OCOB(DPM-R) TO ROC-COD-OCOB IN ROC.
           MOVE DPM-ROC-CAI-PLAN(DPM-R) TO ROC-CAI-PLAN IN ROC.
           MOVE DPM-ROC-IIC-PLAN(DPM-R) TO ROC-IIC-PLAN IN ROC.
           MOVE DPM-ROC-IND-TPLT(DPM-R) TO ROC-IND-TPLT IN ROC.
           MOVE DPM-ROC-NUM-DLAN(DPM-R) TO ROC-NUM-DLAN IN ROC.
           MOVE DPM-ROC-NUM-MLAN(DPM-R) TO ROC-NUM-MLAN IN ROC.
           MOVE DPM-ROC-NUM-SLAN(DPM-R) TO ROC-NUM-SLAN IN ROC.
           MOVE DPM-ROC-NUM-ALAN(DPM-R) TO ROC-NUM-ALAN IN ROC.
           MOVE DPM-ROC-HRA-PLAN(DPM-R) TO ROC-HRA-PLAN IN ROC.
           MOVE DPM-ROC-COD-VCOC(DPM-R) TO ROC-COD-VCOC IN ROC.
           MOVE DPM-ROC-NUM-ADIC(DPM-R) TO ROC-NUM-ADIC IN ROC.
           MOVE DPM-ROC-IND-ADIC(DPM-R) TO ROC-IND-ADIC IN ROC.
           MOVE DPM-ROC-GLS-ADIC(DPM-R) TO ROC-GLS-ADIC IN ROC.
           MOVE DPM-ROC-VRF-ADIC(DPM-R) TO ROC-VRF-ADIC IN ROC.
           MOVE DPM-ROC-FEC-FUNO(DPM-R) TO ROC-FEC-FUNO IN ROC.
           MOVE DPM-ROC-FEC-FDOS(DPM-R) TO ROC-FEC-FDOS IN ROC.
           MOVE DPM-ROC-COD-ANUL(DPM-R) TO ROC-COD-ANUL IN ROC.
           MOVE DPM-ROC-SGV-TCAL(DPM-R) TO ROC-SGV-TCAL IN ROC.
           MOVE DPM-ROC-MSC-BCTI(DPM-R) TO ROC-MSC-BCTI IN ROC.
           MOVE DPM-ROC-MSC-PBTI(DPM-R) TO ROC-MSC-PBTI IN ROC.
           MOVE DPM-ROC-MSC-BPBT(DPM-R) TO ROC-MSC-BPBT IN ROC.
           MOVE DPM-ROC-MSC-SPBT(DPM-R) TO ROC-MSC-SPBT IN ROC.
           MOVE DPM-ROC-COD-CVTI(DPM-R) TO ROC-COD-CVTI IN ROC.
           MOVE DPM-ROC-MSC-TFPR(DPM-R) TO ROC-MSC-TFPR IN ROC.
           MOVE DPM-ROC-NUM-PREP(DPM-R) TO ROC-NUM-PREP IN ROC.
           MOVE DPM-ROC-MSC-UTPR(DPM-R) TO ROC-MSC-UTPR IN ROC.

           MOVE DPM-ROC-SGV-TINF(DPM-R) TO ROC-SGV-TINF IN ROC.
           MOVE DPM-ROC-SGV-CFON(DPM-R) TO ROC-SGV-CFON IN ROC.
           MOVE DPM-ROC-SGV-FRIE(DPM-R) TO ROC-SGV-FRIE IN ROC.
           MOVE SPACES                  TO ROC-GLS-DISP IN ROC.


           MOVE FIO-PUT TO FIO-CMND.
           PERFORM MC2-FIO-ROC.
           IF NOT FIO-STAT-OKS
               MOVE 'DAP' TO MSG-COD-SIST
               MOVE 'ROCMC2 ERR' TO MSG-COD-MENS
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS
               PERFORM BCK-OUT.

       FIN-PUT-VROC.
           EXIT.
      *--------------------------------------------------------------
       BUS-ULT-CORR SECTION.
       INI-BUS-ULT-CORR.


           MOVE ZEROES TO WSS-NUM-CORR IN WSS-VARI.

      *    CARGA LLAVE
           MOVE OPD-CAI-IOPD IN OPD-FLD TO ROC-CAI-IOPC IN ROC.
           MOVE OPD-IIC-IOPD IN OPD-FLD TO ROC-IIC-IOPC IN ROC.
           MOVE DPM-ROC-EXT-IOPC(DPM-R) TO ROC-EXT-IOPC IN ROC.
           MOVE DPM-ROC-COD-SIST(DPM-R) TO ROC-COD-SIST IN ROC.
           MOVE DPM-ROC-COD-EVEN(DPM-R) TO ROC-COD-EVEN IN ROC.
           MOVE 999                     TO ROC-NUM-IROC IN ROC.


           MOVE FIO-GET-LEQ              TO FIO-CMND.
           PERFORM MC2-FIO-ROC.
           IF NOT (FIO-STAT-OKS AND
                   OPD-CAI-IOPD IN OPD-FLD = ROC-CAI-IOPC IN ROC AND
                   OPD-IIC-IOPD IN OPD-FLD = ROC-IIC-IOPC IN ROC AND
                   DPM-ROC-EXT-IOPC(DPM-R) = ROC-EXT-IOPC IN ROC AND
                   DPM-ROC-COD-SIST(DPM-R) = ROC-COD-SIST IN ROC AND
                   DPM-ROC-COD-EVEN(DPM-R) = ROC-COD-EVEN IN ROC)
                    ADD  1  TO WSS-NUM-CORR IN WSS-VARI
                    GO TO FIN-BUS-ULT-CORR.

           COMPUTE WSS-NUM-CORR IN WSS-VARI = ROC-NUM-IROC IN ROC + 1.

       FIN-BUS-ULT-CORR.
           EXIT.
      *--------------------------------------------------------------
       BUS-MC2-PMIN SECTION.
       INI-BUS-MC2-PMIN.

      *    SE LIMPIAN VARIABLES
           PERFORM LIM-REG-DPM.

      *    SE CARGAN VALORES PARA INVOCAR RUTINA PRECIOS
           MOVE 'PPC' TO WSS-MC2-COD-CPTO.
      *    PERFORM MOVMC2-PPC-MC.
           PERFORM MOV-MC2.

      *    SE INVOCA RUTINA PRECIOS
           PERFORM CON-MC2-MDPM.

           IF RCC-COD-MENS IN RCC-VARI > SPACES
              MOVE 'TAB'        TO MSG-COD-SIST
              MOVE RCC-COD-MENS TO MSG-COD-MENS
              PERFORM GET-MSG
              MOVE MSG-GLS-DESC TO FRM-MENS
              MOVE FRM-SUAR-MAL TO FRM-SUAR
              GO TO FIN-BUS-MC2-PMIN.

           IF WSS-PPC-SGV-MMIN IN WSS-VARI NOT >
              DPM-PPC-SGV-MMIN IN DPM-VARI
               MOVE DPM-PPC-SGV-MMIN IN DPM-VARI TO
                    WSS-PPC-SGV-MMIN IN WSS-VARI.

           IF WSS-PPC-SGV-MMAX IN WSS-VARI NOT >
              DPM-PPC-SGV-MMAX IN DPM-VARI
               MOVE DPM-PPC-SGV-MMAX IN DPM-VARI TO
                    WSS-PPC-SGV-MMAX IN WSS-VARI.

       FIN-BUS-MC2-PMIN.
           EXIT.

       BUS-MC2-TINT SECTION.
       INI-BUS-MC2-TINT.

      *    SE LIMPIAN VARIABLES
           PERFORM LIM-REG-DPM.

      *    SE CARGAN VALORES PARA INVOCAR RUTINA PRECIOS
           MOVE 'INT' TO WSS-MC2-COD-CPTO.
           PERFORM MOV-MC2.
      *    PERFORM MOVMC2-INT-MC.

      *    SE INVOCA RUTINA PRECIOS
           PERFORM CON-MC2-MDPM.

           IF RCC-COD-MENS IN RCC-VARI > SPACES
              MOVE 'TAB'        TO MSG-COD-SIST
              MOVE RCC-COD-MENS TO MSG-COD-MENS
              PERFORM GET-MSG
              MOVE MSG-GLS-DESC TO FRM-MENS
              MOVE FRM-SUAR-MAL TO FRM-SUAR
              GO TO FIN-BUS-MC2-TINT.

           IF WSS-DIA-MC2 NOT = 'S' AND
                  DPM-ROC-NUM-DLAN IN DPM-VARI(1) NOT = HOY-DHOY AND
                  DPM-ROC-NUM-MLAN IN DPM-VARI(1) NOT = HOY-MHOY AND
                  DPM-ROC-NUM-SLAN IN DPM-VARI(1) NOT = HOY-SHOY AND
                  DPM-ROC-NUM-ALAN IN DPM-VARI(1) NOT = HOY-AHOY
                   MOVE 'DAP'        TO MSG-COD-SIST
                   MOVE 'MC2  NODIA' TO MSG-COD-MENS
                   PERFORM GET-MSG
                   MOVE MSG-GLS-DESC TO FRM-MENS
                   MOVE FRM-SUAR-MAL TO FRM-SUAR
                   GO TO FIN-BUS-MC2-TINT.

           IF  WSS-INT-SGV-TPIZ IN WSS-VARI  <
               DPM-INT-SGV-TPIZ IN DPM-VARI
                MOVE DPM-INT-SGV-TPIZ IN DPM-VARI TO
                     WSS-INT-SGV-TPIZ IN WSS-VARI.

           IF  WSS-INT-SGV-TMAX IN WSS-VARI  <
               DPM-INT-SGV-TMAX IN DPM-VARI
                MOVE DPM-INT-SGV-TMAX IN DPM-VARI TO
                     WSS-INT-SGV-TMAX IN WSS-VARI.

           IF  WSS-INT-SGV-TMAR IN WSS-VARI  <
               DPM-INT-SGV-TMAR IN DPM-VARI
                MOVE DPM-INT-SGV-TMAR IN DPM-VARI TO
                     WSS-INT-SGV-TMAR IN WSS-VARI.

           IF  WSS-INT-SGV-TTOP IN WSS-VARI <
               DPM-INT-SGV-TTOP IN DPM-VARI
                MOVE DPM-INT-SGV-TTOP IN DPM-VARI TO
                     WSS-INT-SGV-TTOP IN WSS-VARI.

       FIN-BUS-MC2-TINT.
           EXIT.
      *--------------------------------------------------------------
      *--------------------------------------------------------------
       BUS-MUL-IDC-MC2 SECTION.
       INI-BUS-MUL-IDC-MC2.

           MOVE RCC-CIC-ICLI IN RCC TO DBC-CIC-ICLI IN DBC.
           MOVE FIO-GET-KEY         TO FIO-CMND.
           PERFORM SGC-FIO-DBC.
           MOVE FIO-STAT            TO PGM-STAT-DBC.
           IF NOT FIO-STAT-OKS
      *        CLIENTE INEXISTENTE
               MOVE 'S' TO SCR-IERR
               MOVE 'DAP' TO MSG-COD-SIST
               MOVE 'CLI    NEX' TO MSG-COD-MENS
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS
               MOVE FRM-SUAR-MAL TO FRM-SUAR
               GO TO FIN-BUS-MUL-IDC-MC2
           ELSE
               IF WSS-TOT-CLI > ZEROES AND
                  WSS-TOT-CLI < 3
                   MOVE DBC-IDC-ICLI IN DBC TO
                        WSS-MC2-IDC-ICLI IN WSS-MC2-IDC(WSS-TOT-CLI).
      *         PERFORM BUS-MC2-TINT
      *         PERFORM BUS-MC2-PMIN.

       FIN-BUS-MUL-IDC-MC2.
           EXIT.

      *---------------------------------------------------------------
      *AFRI-INI 13-ABR-2011 INTEGRACION MC2
      *---------------------------------------------------------------
       MOV-MC2 SECTION.
       INI-MOV-MC2.

           MOVE SPACES                  TO DPM-COD-EVEN IN DPM-VARI.
      * CIMA-INI 21-JUL-2014 OPTIMIZACION INTEGRACION MC2
      *     IF SCR-CMND = 'ODL' OR 'ODB' OR 'VRF'
      *         MOVE 'CUR'               TO DPM-COD-EVEN IN DPM-VARI
      *     ELSE
      *     IF SCR-CMND = 'RDL'
      *        MOVE 'REN'               TO DPM-COD-EVEN IN DPM-VARI.

           MOVE 'CUR'                   TO DPM-COD-EVEN IN DPM-VARI.
           MOVE SPACES    TO TAB.
           MOVE 'DAP'     TO FIO-SIST.
           MOVE 'ACE'     TO TAB-COD-TTAB IN TAB.
           MOVE SCR-CMND  TO TAB-COD-CTAB IN TAB.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM GNS-FIO-TAB.
           IF FIO-STAT-OKS AND TAB-IND-VIGE IN TAB = 'S'
             MOVE TAB-GLS-DATA IN TAB(1:3) TO DPM-COD-EVEN IN DPM-VARI.
      * CIMA-FIN 21-JUL-2014 OPTIMIZACION INTEGRACION MC2

           MOVE WSS-MC2-COD-CPTO        TO DPM-COD-CPTO IN DPM-VARI.
           MOVE SPACES                  TO DPM-COD-TCON IN DPM-VARI.
           MOVE OPD-CAI-IOPD IN OPD-FLD TO DPM-CAI-IOPE IN DPM-VARI.
           MOVE OPD-IIC-IOPD IN OPD-FLD TO DPM-IIC-IOPE IN DPM-VARI.
           MOVE SPACES                  TO DPM-EXT-IOPE IN DPM-VARI.

           MOVE WSS-MC2-NUM-ICLI IN WSS-MC2-IDC(WSS-MC2-IDX-IDC) TO
                    DPM-NUM-ICLI IN DPM-VARI.

           MOVE WSS-MC2-VRF-ICLI IN WSS-MC2-IDC(WSS-MC2-IDX-IDC) TO
                    DPM-VRF-ICLI IN DPM-VARI.

           MOVE WSS-MC2-IND-ICLI IN WSS-MC2-IDC(WSS-MC2-IDX-IDC) TO
                    DPM-IND-ICLI IN DPM-VARI.

           MOVE WSS-MC2-GLS-ICLI IN WSS-MC2-IDC(WSS-MC2-IDX-IDC) TO
                    DPM-GLS-ICLI IN DPM-VARI.

           MOVE SPACES                  TO DPM-IND-RTBL IN DPM-VARI.
           MOVE SPACES                  TO DPM-IND-COMP IN DPM-VARI.

           MOVE 'DAP' TO TAB-COD-SIST.
           MOVE 'DAP' TO FIO-SIST.
           MOVE 'CNN' TO TAB-COD-TTAB IN TAB.
           MOVE SCR-CNAL TO TAB-COD-CTAB IN TAB.
           IF NOT SCR-OFRM-SRV
                   MOVE '327' TO TAB-COD-CTAB IN TAB.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM GNS-FIO-TAB.
           IF FIO-STAT-OKS AND
              TAB-IND-VIGE IN TAB = 'S'
                 MOVE TAB-GLS-DESC IN TAB TO CXS-GLS-DESC
                 MOVE TAB-GLS-DATA IN TAB TO CXS-GLS-DATA
                 MOVE CXS-IND-07-CMC2 TO DPM-COD-TCNL IN DPM-VARI.

           MOVE OPD-COD-OFIC IN OPD-FLD TO DPM-COD-CNAL IN DPM-VARI.
           MOVE OPD-COD-VCAM IN OPD-FLD TO DPM-COD-VCOC IN DPM-VARI.
           MOVE OPD-COD-TOPD IN OPD-FLD TO DPM-COD-TOOC IN DPM-VARI.
           MOVE OPD-COD-AOPD IN OPD-FLD TO DPM-COD-AOOC IN DPM-VARI.
           MOVE OPD-VAL-CAPT IN OPD-FLD TO DPM-VAL-MOPE IN DPM-VARI.
           MOVE OPD-COD-VCAM IN OPD-FLD TO DPM-COD-VCMO IN DPM-VARI.
           MOVE OPD-VAL-SCAP IN OPD     TO DPM-VAL-SOPE IN DPM-VARI.
           MOVE OPD-COD-VCAM IN OPD-FLD TO DPM-COD-VSOP IN DPM-VARI.

           IF FRM-NUM-TVEN IN OPD-FLD > ZEROES
               MOVE FRM-NUM-TVEN IN OPD-FLD TO DPM-VAL-FINA IN DPM-VARI
           ELSE
               MOVE 1                   TO DPM-VAL-FINA IN DPM-VARI.

           MOVE OPD-COD-VCAM IN OPD-FLD TO DPM-COD-VCFN IN DPM-VARI.
           MOVE OPD-VAL-INTD IN OPD     TO DPM-VAL-INTE IN DPM-VARI.
           MOVE OPD-COD-VCAM IN OPD-FLD TO DPM-COD-VCIN IN DPM-VARI.
           MOVE ZEROES                  TO DPM-VAL-VASG IN DPM-VARI.
           MOVE SPACES                  TO DPM-COD-VCVA IN DPM-VARI.
           MOVE OPD-NUM-PVEN IN OPD-FLD TO DPM-NUM-PLZO IN DPM-VARI.
           MOVE OPD-IND-PVEN IN OPD-FLD TO DPM-MSC-UTPZ IN DPM-VARI.
           MOVE HOY-FHOY                TO DPM-FEC-FCON IN DPM-VARI.
           MOVE OPD-FEC-FPVC IN OPD-FLD TO DPM-FEC-FUNO IN DPM-VARI.
           MOVE SPACES                  TO DPM-COD-TCAR IN DPM-VARI.
       FIN-MOV-MC2.
           EXIT.

      *---------------------------------------------------------------

       LIM-REG-DPM SECTION.
       INI-LIM-REG-DPM.

           MOVE SPACES                  TO DPM-INP-VARI.
           MOVE SPACES                  TO DPM-OUT-VARI.

           MOVE ZEROES                  TO DPM-NUM-ICLI IN DPM-VARI
                                           DPM-VAL-MOPE IN DPM-VARI
                                           DPM-VAL-SOPE IN DPM-VARI
                                           DPM-VAL-FINA IN DPM-VARI
                                           DPM-VAL-INTE IN DPM-VARI
                                           DPM-VAL-VASG IN DPM-VARI
                                           DPM-NUM-PLZO IN DPM-VARI
                                           DPM-FEC-FCON IN DPM-VARI
                                           DPM-FEC-FUNO IN DPM-VARI.

           MOVE ZEROES                  TO DPM-PPC-SGV-MMIN IN DPM-VARI
                                           DPM-PPC-SGV-MMAX IN DPM-VARI
                                           DPM-INT-SGV-TPIZ IN DPM-VARI
                                           DPM-INT-SGV-TMAX IN DPM-VARI
                                           DPM-INT-SGV-TMAR IN DPM-VARI
                                           DPM-INT-SGV-TTOP IN DPM-VARI.
       FIN-LIM-REG-DPM.
           EXIT.
       VAL-MUL-DPM SECTION.
       INI-VAL-MUL-DPM.

           MOVE SPACES TO MSG-COD-MENS.

      *    SI DAP NOT POSEE MULTIPLE DEUDOR SE VALIDA EN CURSE
           IF DBC-IND-ICLI IN OPD-FLD NOT = 'M'
               GO TO FIN-VAL-MUL-DPM.


      * VALIDACIONES MONTO MINIMO :
      * ===========================

           MOVE ZEROES TO WSS-MC2-TOT-ERR-PPC.

      *++++++++++++++++++++++++++++++++++
      * MONTO MINIMO CLIENTE 1
      *++++++++++++++++++++++++++++++++++

           MOVE 'PPC' TO WSS-MC2-COD-CPTO.
           MOVE 1 TO WSS-MC2-IDX-IDC.
      * Los IDC ya estan cargados en area de memoria
      *    MOVE DBC-NUM-ICLI IN OPD-FLD TO
      *     WSS-MC2-NUM-ICLI IN WSS-MC2-IDC(WSS-MC2-IDX-IDC).

      *    MOVE DBC-VRF-ICLI IN OPD-FLD TO
      *      WSS-MC2-VRF-ICLI IN WSS-MC2-IDC(WSS-MC2-IDX-IDC).

      *    MOVE DBC-IND-ICLI IN OPD-FLD TO
      *      WSS-MC2-IND-ICLI IN WSS-MC2-IDC(WSS-MC2-IDX-IDC).

      *    MOVE DBC-GLS-ICLI IN OPD-FLD TO
      *     WSS-MC2-GLS-ICLI IN WSS-MC2-IDC(WSS-MC2-IDX-IDC).

           PERFORM MOV-MC2.
      *    PERFORM MOVMC2-PPC-1C.

           PERFORM CON-MC2-MDPM
           PERFORM RET-MUL-MC2

           IF WSS-PPC-SGV-MMIN IN WSS-VARI > ZEROES AND
              OPD-VAL-CAPT IN OPD-FLD < WSS-PPC-SGV-MMIN IN WSS-VARI
                 ADD 1 TO WSS-MC2-TOT-ERR-PPC.






      *++++++++++++++++++++++++++++++++++
      * MONTO MINIMO CLIENTE 2
      *++++++++++++++++++++++++++++++++++

           MOVE 'PPC' TO WSS-MC2-COD-CPTO.
           MOVE 2 TO WSS-MC2-IDX-IDC.
      * Los IDC ya estan cargados en area de memoria
      *    MOVE DBC-NUM-ICLI IN OPD-FLD TO
      *     WSS-MC2-NUM-ICLI IN WSS-MC2-IDC(WSS-MC2-IDX-IDC).

      *    MOVE DBC-VRF-ICLI IN OPD-FLD TO
      *      WSS-MC2-VRF-ICLI IN WSS-MC2-IDC(WSS-MC2-IDX-IDC).

      *    MOVE DBC-IND-ICLI IN OPD-FLD TO
      *      WSS-MC2-IND-ICLI IN WSS-MC2-IDC(WSS-MC2-IDX-IDC).

      *    MOVE DBC-GLS-ICLI IN OPD-FLD TO
      *     WSS-MC2-GLS-ICLI IN WSS-MC2-IDC(WSS-MC2-IDX-IDC).

           PERFORM MOV-MC2.
      *    PERFORM MOVMC2-PPC-1C.

           PERFORM CON-MC2-MDPM
           PERFORM RET-MUL-MC2

           IF WSS-PPC-SGV-MMIN IN WSS-VARI > ZEROES AND
              OPD-VAL-CAPT IN OPD-FLD < WSS-PPC-SGV-MMIN IN WSS-VARI
                 ADD 1 TO WSS-MC2-TOT-ERR-PPC.

      * ambos clientes fallaron
           IF WSS-MC2-TOT-ERR-PPC > 1
                   MOVE 'CAPT    FRNG' TO MSG-COD-MENS
                   MOVE 'DAP' TO MSG-COD-SIST
                   PERFORM GET-MSG
                   MOVE MSG-GLS-DESC        TO WSS-GLS-1RNG IN WSS-VARI
                   MOVE WSS-PPC-SGV-MMIN IN WSS-VARI TO
                        WSS-GLS-2RNG IN WSS-VARI
                   MOVE WSS-PPC-SGV-MMAX IN WSS-VARI TO
                        WSS-GLS-4RNG IN WSS-VARI
                   GO TO FIN-VAL-MUL-DPM.


      * ===========================
      * VALIDACIONES TASA INTERES :
      * ===========================

           MOVE ZEROES TO WSS-MC2-TOT-ERR-INT.
           MOVE 'N' TO WSS-MC2-CLI1-ASG-TPIZ.

      *++++++++++++++++++++++++++++++++++
      * TASA INTERES CLIENTE 1
      *++++++++++++++++++++++++++++++++++
           MOVE 'INT' TO WSS-MC2-COD-CPTO.
           MOVE 1 TO WSS-MC2-IDX-IDC.
      * Los IDC ya estan cargados en area de memoria
      *    MOVE DBC-NUM-ICLI IN OPD-FLD TO
      *     WSS-MC2-NUM-ICLI IN WSS-MC2-IDC(WSS-MC2-IDX-IDC).

      *    MOVE DBC-VRF-ICLI IN OPD-FLD TO
      *      WSS-MC2-VRF-ICLI IN WSS-MC2-IDC(WSS-MC2-IDX-IDC).

      *    MOVE DBC-IND-ICLI IN OPD-FLD TO
      *      WSS-MC2-IND-ICLI IN WSS-MC2-IDC(WSS-MC2-IDX-IDC).

      *    MOVE DBC-GLS-ICLI IN OPD-FLD TO
      *     WSS-MC2-GLS-ICLI IN WSS-MC2-IDC(WSS-MC2-IDX-IDC).

           PERFORM MOV-MC2.
      *    PERFORM MOVMC2-PPC-1C.

           PERFORM CON-MC2-MDPM
           PERFORM RET-MUL-MC2
           MOVE DPM-VARI TO BKP-DPM-VARI.


      *REPLANTEA PREGUNTA APUNTANDO A VARIABLE PRECIOS WSS-INT-SGV-TMAX
      * DEJA USUARIO QUE AUTORIZA Y PSWD VACIO
           MOVE OPD-COD-OTRN IN OPD TO WSS-MC2-COD-OTRN.

      *    IF OPD-SGV-TINT IN OPD-FLD NOT > WSS-INT-SGV-TMAX IN WSS-VARI
      *         IF WSS-MC2-COD-CNAL NOT = '100' AND
      *            WSS-MC2-COD-CNAL NOT = '110'
      *             MOVE SPACES TO OPD-COD-EATE IN OPD-FLD
      *             MOVE SPACES TO FRM-COD-EATE IN OPD-FLD
      *             MOVE 'N' TO ATE-IND-ATEE.


      * TASA PIZARRA CLIENTE 1

           MOVE WSS-INT-SGV-TPIZ TO
                WSS-INT-SGV-TPIZ-VALI.

           MOVE WSS-INT-SGV-TMAX TO
                WSS-INT-SGV-TMAX-VALI.

           MOVE WSS-INT-SGV-TMAR TO
                WSS-INT-SGV-TMAR-VALI.

           MOVE WSS-INT-SGV-TTOP TO
                WSS-INT-SGV-TTOP-VALI.

      *   1. VALOR TASA NO > 0 => ASIGNA TASA PIZARRA
           IF OPD-SGV-TINT IN OPD NOT > ZEROES
                MOVE 'S' TO WSS-MC2-CLI1-ASG-TPIZ
                MOVE WSS-INT-SGV-TPIZ IN WSS-VARI TO
                         OPD-SGV-TINT IN OPD
                MOVE WSS-INT-SGV-TPIZ IN WSS-VARI TO
                     OPD-SGV-TINT IN OPD-FLD.


      * OPD-SGV-TINT IN OPD-FLD CLIENTE 1

      *   2. CANAL ES 100 O 110 => COMPARA CONTRA TASA T/M
           IF ( WSS-MC2-COD-CNAL = '100' OR
                WSS-MC2-COD-CNAL = '110')
              IF ( OPD-SGV-TINT IN OPD-FLD <
                   WSS-INT-SGV-TPIZ IN WSS-VARI OR
                   OPD-SGV-TINT IN OPD-FLD >
                   WSS-INT-SGV-TMAX IN WSS-VARI )
                    ADD 1 TO WSS-MC2-TOT-ERR-INT
                    PERFORM SET-DPM-RNG
                    MOVE 'DAP'        TO MSG-COD-SIST
                    PERFORM GET-MSG
                    MOVE MSG-GLS-DESC TO WSS-GLS-1RNG IN WSS-VARI
                    MOVE WSS-INT-SGV-TPIZ IN WSS-VARI TO
                         WSS-GLS-2RNG IN WSS-VARI
                    IF VERSION-CST = 'S'
                        MOVE WSS-INT-SGV-TMAX IN WSS-VARI     TO
                             WSS-GLS-4RNG IN WSS-VARI
                    ELSE
                       MOVE SPACES TO WSS-GLS-3RNG
                            MOVE ZEROES TO WSS-GLS-4RNG
                   END-IF
                   GO TO CIC-VAL-MUL-DPM
               ELSE
                   GO TO CIC-VAL-MUL-DPM.

      *   3. VALOR TASA >0 Y EATE=SPACES => VALIDA CONTRA TASA MAX-AUT
      *      SI ESTA FUERA DE RANGO ENVIA ERROR
           IF ( OPD-SGV-TINT IN OPD > ZEROES AND
                OPD-COD-EATE IN OPD NOT > SPACES)
               IF (OPD-SGV-TINT IN OPD <
                   WSS-INT-SGV-TPIZ IN WSS-VARI OR
                   OPD-SGV-TINT IN OPD-FLD >
                   WSS-INT-SGV-TMAX IN WSS-VARI)
                    ADD 1 TO WSS-MC2-TOT-ERR-INT
                    PERFORM SET-DPM-RNG
                    MOVE 'DAP'        TO MSG-COD-SIST
                    PERFORM GET-MSG
                    MOVE MSG-GLS-DESC TO WSS-GLS-1RNG IN WSS-VARI
                    MOVE WSS-INT-SGV-TPIZ IN WSS-VARI TO
                         WSS-GLS-2RNG IN WSS-VARI
                    IF VERSION-CST = 'S'
                        MOVE WSS-INT-SGV-TMAX IN WSS-VARI     TO
                             WSS-GLS-4RNG IN WSS-VARI
                    ELSE
                       MOVE SPACES TO WSS-GLS-3RNG
                            MOVE ZEROES TO WSS-GLS-4RNG
                    END-IF
                    GO TO CIC-VAL-MUL-DPM
               ELSE
                    GO TO CIC-VAL-MUL-DPM.

      *   4. VALOR TASA >0 Y EATE>SPACES => VALIDA CONTRA TASA T/M   T
      *      SI ESTA FUERA DE RANGO ENVIA ERROR
           IF ( OPD-SGV-TINT IN OPD > ZEROES AND
                OPD-COD-EATE IN OPD > SPACES)
                IF ( OPD-SGV-TINT IN OPD <
                     WSS-INT-SGV-TPIZ IN WSS-VARI ) OR
                   ( OPD-SGV-TINT IN OPD >
                     WSS-INT-SGV-TTOP IN WSS-VARI AND
                     OPD-SGV-TINT IN OPD-FLD >
                     WSS-INT-SGV-TMAR IN WSS-VARI )

                     ADD 1 TO WSS-MC2-TOT-ERR-INT
                     PERFORM SET-DPM-RNG
                     MOVE 'DAP'        TO MSG-COD-SIST
                     PERFORM GET-MSG
                     MOVE MSG-GLS-DESC TO WSS-GLS-1RNG IN WSS-VARI
                     MOVE WSS-INT-SGV-TPIZ IN WSS-VARI TO
                          WSS-GLS-2RNG IN WSS-VARI
                     IF VERSION-CST = 'S' AND
                        WSS-INT-SGV-TTOP IN WSS-VARI >
                        WSS-INT-SGV-TMAR IN WSS-VARI
                         MOVE WSS-INT-SGV-TTOP IN WSS-VARI     TO
                              WSS-GLS-4RNG IN WSS-VARI
                     END-IF
                     IF VERSION-CST = 'S' AND
                        WSS-INT-SGV-TTOP IN WSS-VARI NOT >
                        WSS-INT-SGV-TMAR IN WSS-VARI
                         MOVE WSS-INT-SGV-TMAR IN WSS-VARI     TO
                              WSS-GLS-4RNG IN WSS-VARI
                     END-IF
                     IF VERSION-CST NOT = 'S'
                         MOVE SPACES TO WSS-GLS-3RNG
                              MOVE ZEROES TO WSS-GLS-4RNG
                     END-IF
                     GO TO CIC-VAL-MUL-DPM
               ELSE
                     GO TO CIC-VAL-MUL-DPM.
      *++++++++++++++++++++++++++++++++++
      * TASA INTERES CLIENTE 2
      *++++++++++++++++++++++++++++++++++

       CIC-VAL-MUL-DPM.

           MOVE 'INT' TO WSS-MC2-COD-CPTO.
           MOVE 2 TO WSS-MC2-IDX-IDC.
      * Los IDC ya estan cargados en area de memoria
      *    MOVE DBC-NUM-ICLI IN OPD-FLD TO
      *     WSS-MC2-NUM-ICLI IN WSS-MC2-IDC(WSS-MC2-IDX-IDC).

      *    MOVE DBC-VRF-ICLI IN OPD-FLD TO
      *      WSS-MC2-VRF-ICLI IN WSS-MC2-IDC(WSS-MC2-IDX-IDC).

      *    MOVE DBC-IND-ICLI IN OPD-FLD TO
      *      WSS-MC2-IND-ICLI IN WSS-MC2-IDC(WSS-MC2-IDX-IDC).

      *    MOVE DBC-GLS-ICLI IN OPD-FLD TO
      *     WSS-MC2-GLS-ICLI IN WSS-MC2-IDC(WSS-MC2-IDX-IDC).

           PERFORM MOV-MC2.
      *    PERFORM MOVMC2-PPC-1C.

           PERFORM CON-MC2-MDPM
           PERFORM RET-MUL-MC2
           IF WSS-INT-SGV-TPIZ < WSS-INT-SGV-TPIZ-VALI
                  MOVE WSS-INT-SGV-TPIZ TO WSS-INT-SGV-TPIZ-VALI.

           IF WSS-INT-SGV-TMAX > WSS-INT-SGV-TMAX-VALI
                  MOVE '2' TO WSS-ROC-ID-CLI
                  MOVE WSS-INT-SGV-TMAX TO WSS-INT-SGV-TMAX-VALI.

      *    IF WSS-INT-SGV-TMAR > WSS-INT-SGV-TMAR-VALI
      *           MOVE '2' TO WSS-ROC-ID-CLI
      *           MOVE WSS-INT-SGV-TMAR TO WSS-INT-SGV-TMAR-VALI.
      *
      *    IF WSS-INT-SGV-TTOP > WSS-INT-SGV-TTOP-VALI
      *           MOVE '2' TO WSS-ROC-ID-CLI
      *           MOVE WSS-INT-SGV-TTOP TO WSS-INT-SGV-TTOP-VALI.


      *REPLANTEA PREGUNTA APUNTANDO A VARIABLE PRECIOS WSS-INT-SGV-TMAX
      * DEJA USUARIO QUE AUTORIZA Y PSWD VACIO
           MOVE OPD-COD-OTRN IN OPD TO WSS-MC2-COD-OTRN.

      *     IF OPD-SGV-TINT IN OPD-FLD NOT > WSS-INT-SGV-TMAX IN WSS-VARI
      *         IF WSS-MC2-COD-CNAL NOT = '100' AND
      *            WSS-MC2-COD-CNAL NOT = '110'
      *             MOVE SPACES TO OPD-COD-EATE IN OPD-FLD
      *             MOVE SPACES TO FRM-COD-EATE IN OPD-FLD
      *             MOVE 'N' TO ATE-IND-ATEE.

      *   1. VALOR TASA NO > 0 => ASIGNA TASA PIZARRA


      * TASA PIZARRA CLIENTE 2

           IF WSS-MC2-CLI1-ASG-TPIZ = 'S'
              IF WSS-INT-SGV-TPIZ > OPD-SGV-TINT IN OPD
      * Asigna nueva tasa pizarra
                  MOVE WSS-INT-SGV-TPIZ IN WSS-VARI TO
                       OPD-SGV-TINT IN OPD
                  MOVE WSS-INT-SGV-TPIZ IN WSS-VARI TO
                       OPD-SGV-TINT IN OPD-FLD

      * OPD-SGV-TINT IN OPD-FLD CLIENTE 1

                  GO TO CAL-VAL-MUL-DPM.

      *   2. CANAL ES 100 O 110 => COMPARA CONTRA TASA T/M
           IF ( WSS-MC2-COD-CNAL = '100' OR
                WSS-MC2-COD-CNAL = '110')
              IF ( OPD-SGV-TINT IN OPD-FLD <
                   WSS-INT-SGV-TPIZ-VALI IN WSS-VARI OR
                   OPD-SGV-TINT IN OPD-FLD >
                   WSS-INT-SGV-TMAX-VALI IN WSS-VARI)
                    ADD 1 TO WSS-MC2-TOT-ERR-INT
                    PERFORM SET-DPM-RNG
                    MOVE 'DAP'        TO MSG-COD-SIST
                    PERFORM GET-MSG
                    MOVE MSG-GLS-DESC TO WSS-GLS-1RNG IN WSS-VARI
                    MOVE WSS-INT-SGV-TPIZ IN WSS-VARI TO
                         WSS-GLS-2RNG IN WSS-VARI
                    IF VERSION-CST = 'S'
                        MOVE WSS-INT-SGV-TMAX IN WSS-VARI     TO
                             WSS-GLS-4RNG IN WSS-VARI
                    ELSE
                       MOVE SPACES TO WSS-GLS-3RNG
                            MOVE ZEROES TO WSS-GLS-4RNG
                   END-IF
                   GO TO FIN-VAL-MUL-DPM
               ELSE
                   GO TO FIN-VAL-MUL-DPM.

      *   3. VALOR TASA >0 Y EATE=SPACES => VALIDA CONTRA TASA MAX-AUT
      *      SI ESTA FUERA DE RANGO ENVIA ERROR
           IF ( OPD-SGV-TINT IN OPD > ZEROES AND
                OPD-COD-EATE IN OPD NOT > SPACES)
               IF (OPD-SGV-TINT IN OPD <
                   WSS-INT-SGV-TPIZ-VALI IN WSS-VARI OR
                   OPD-SGV-TINT IN OPD-FLD >
                   WSS-INT-SGV-TMAX-VALI IN WSS-VARI)
                    ADD 1 TO WSS-MC2-TOT-ERR-INT
                    PERFORM SET-DPM-RNG
                    MOVE 'DAP'        TO MSG-COD-SIST
                    PERFORM GET-MSG
                    MOVE MSG-GLS-DESC TO WSS-GLS-1RNG IN WSS-VARI
                    MOVE WSS-INT-SGV-TPIZ IN WSS-VARI TO
                         WSS-GLS-2RNG IN WSS-VARI
                    IF VERSION-CST = 'S'
                        MOVE WSS-INT-SGV-TMAX IN WSS-VARI     TO
                             WSS-GLS-4RNG IN WSS-VARI
                    ELSE
                       MOVE SPACES TO WSS-GLS-3RNG
                            MOVE ZEROES TO WSS-GLS-4RNG
                    END-IF
                    GO TO FIN-VAL-MUL-DPM
               ELSE
                    GO TO FIN-VAL-MUL-DPM.

      *   4. VALOR TASA >0 Y EATE>SPACES => VALIDA CONTRA TASA T/M   T
      *      SI ESTA FUERA DE RANGO ENVIA ERROR
           IF ( OPD-SGV-TINT IN OPD > ZEROES AND
                OPD-COD-EATE IN OPD > SPACES)
                IF (OPD-SGV-TINT IN OPD <
                   WSS-INT-SGV-TPIZ IN WSS-VARI) OR
                   (OPD-SGV-TINT IN OPD >
                    WSS-INT-SGV-TTOP-VALI IN WSS-VARI AND
                    OPD-SGV-TINT IN OPD-FLD >
                    WSS-INT-SGV-TMAR-VALI IN WSS-VARI)
                    ADD 1 TO WSS-MC2-TOT-ERR-INT
                     PERFORM SET-DPM-RNG
                     MOVE 'DAP'        TO MSG-COD-SIST
                     PERFORM GET-MSG
                     MOVE MSG-GLS-DESC TO WSS-GLS-1RNG IN WSS-VARI
                     MOVE WSS-INT-SGV-TPIZ IN WSS-VARI TO
                          WSS-GLS-2RNG IN WSS-VARI
                     IF VERSION-CST = 'S' AND
                        WSS-INT-SGV-TTOP-VALI IN WSS-VARI >
                        WSS-INT-SGV-TMAR-VALI IN WSS-VARI
                         MOVE WSS-INT-SGV-TTOP-VALI IN WSS-VARI     TO
                              WSS-GLS-4RNG IN WSS-VARI
                     END-IF
                     IF VERSION-CST = 'S' AND
                        WSS-INT-SGV-TTOP-VALI IN WSS-VARI NOT >
                        WSS-INT-SGV-TMAR-VALI IN WSS-VARI
                         MOVE WSS-INT-SGV-TMAR-VALI IN WSS-VARI     TO
                              WSS-GLS-4RNG IN WSS-VARI
                     END-IF
                     IF VERSION-CST NOT = 'S'
                         MOVE SPACES TO WSS-GLS-3RNG
                              MOVE ZEROES TO WSS-GLS-4RNG
                     END-IF
                     GO TO FIN-VAL-MUL-DPM
               ELSE
                     GO TO FIN-VAL-MUL-DPM.

       CAL-VAL-MUL-DPM.


              PERFORM CAL-MLT-FORI.
              IF MSG-COD-MENS > SPACES
                  MOVE MSG-GLS-DESC TO WSS-GLS-1RNG IN WSS-VARI
                  GO TO FIN-VAL-MUL-DPM.
       FIN-VAL-MUL-DPM.

           EXIT.
      *--------------------------------------------------------------
       SET-DPM-RNG SECTION.
       INI-SET-DPM-RNG.
           MOVE 'TINT    FRNG' TO MSG-COD-MENS.
           IF SCR-CNAL = '150'
                IF OPD-COD-EATE IN OPD-FLD > SPACES
                    MOVE 'TINT    FRNG' TO MSG-COD-MENS
                ELSE
                    MOVE 'TINTEATEFRNG' TO MSG-COD-MENS.
       FIN-SET-DPM-RNG.
           EXIT.
      *--------------------------------------------------------------
       CAL-MLT-FORI SECTION.
       INI-CAL-MLT-FORI.

      *NOTED     IF SCR-CNAL NOT = '110' AND
      *NOTED        SCR-CNAL NOT = '100'
      *NOTED         GO TO CON-CAL-MLT-FORI.

      *NOTED     MOVE OPD-FEC-FREA IN OPD-FLD TO FEC-FEC1.
      *NOTED     MOVE OPD-FEC-FPVC IN OPD-FLD TO FEC-FEC2.
      *NOTED     MOVE FEC-FORM-FEC TO FEC-FORM.
      *NOTED     MOVE FEC-DIF-DIA TO FEC-CMND.
      *NOTED     PERFORM CAL-FEC.
      *NOTED     IF FEC-STAT-OKS
      *NOTED         MOVE FEC-NDIA TO WSS-TED-PLZO
      *NOTED     ELSE
      *NOTED         GO TO CON-CAL-MLT-FORI

      * TASA EQUILIBRIO DAP
      *NOTED     MOVE 'DAP' TO FIO-SIST.
      *NOTED     MOVE 'TED' TO TAB-COD-TTAB IN TAB.
      *NOTED     MOVE OPD-COD-VCAM IN OPD-FLD TO WSS-TED-VCAM.
      *NOTED     MOVE WSS-TED-CTAB TO TAB-COD-CTAB IN TAB.
      *NOTED     MOVE FIO-GET-NLS TO FIO-CMND.
      *NOTED     PERFORM GNS-FIO-TAB.

      *NOTED     IF NOT (FIO-STAT-OKS AND TAB-COD-TTAB IN TAB = 'TED' AND
      *NOTED             TAB-IND-VIGE = 'S' )
      *NOTED         GO TO CON-CAL-MLT-FORI.

      *NOTED     MOVE TAB-GLS-DATA IN TAB TO NUM-NUME.
      *NOTED     MOVE NUM-ZERO-S TO NUM-ZERO.
      *NOTED     MOVE NUM-SGNO-N TO NUM-SGNO.
      *NOTED     MOVE 03 TO NUM-NENT.
      *NOTED     MOVE 04 TO NUM-NDCM.
      *NOTED     PERFORM VAL-NUM.
      *NOTED     IF NOT NUM-STAT-OKS
      *NOTED         GO TO CON-CAL-MLT-FORI.

      *NOTED     IF NUM-NS9V < OPD-SGV-TINT IN OPD-FLD
      *NOTED         MOVE NUM-NS9V TO OPD-SGV-TINT IN OPD-FLD.

       CON-CAL-MLT-FORI.

      *    ACCESO A POD
           MOVE OPD-COD-VCAM IN OPD-FLD TO POD-COD-VCAM IN POD.
           MOVE OPD-COD-TOPD IN OPD-FLD TO POD-COD-TOPD IN POD.
           MOVE OPD-COD-AOPD IN OPD-FLD TO POD-COD-AOPD IN POD.
           MOVE ZEROES                  TO POD-NUM-IPOD IN POD.
           PERFORM GET-POD.
      *OGB-INI 13-ENE-2017 BALANCE OPTIMO DAP
           IF MSG-COD-MENS > SPACES
              GO TO FIN-CAL-MLT-FORI.
      *OGB-FIN 13-ENE-2017 BALANCE OPTIMO DAP

      *ISP CALCULA VALOR FINAL DE LA OPERACION
           MOVE OPD-FEC-FREA IN OPD-FLD TO INT-FUNO.
           MOVE OPD-FEC-FPVC IN OPD-FLD TO INT-FDOS.
           MOVE OPD-COD-VCAM IN OPD-FLD TO INT-VCAM.
           MOVE OPD-FEC-FREA IN OPD-FLD TO INT-FCOL.
           MOVE OPD-FEC-FREA IN OPD-FLD TO INT-FBTV.
           MOVE OPD-SGV-TINT IN OPD-FLD TO INT-TINT.
           MOVE POD-COD-TINT IN POD     TO INT-TIPT.

           PERFORM GNS-CAL-INT.
           IF INT-CMSG > SPACES
               MOVE FRM-SUAR-MAL TO FRM-SUAR
               MOVE 'DAP' TO MSG-COD-SIST
               MOVE INT-CMSG TO MSG-COD-MENS
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS
               GO TO FIN-CAL-MLT-FORI.

           MOVE OPD-VAL-CAPT IN OPD-FLD TO WSS-VAL-CAPI.
           MOVE SPACES TO MSG-COD-MENS.
           MOVE ZEROES TO SCR-CAPI SCR-INTE.

      * BUSCA AQUI EL CODIGO INTERNO COMPUTACIONAL OPD-COD-MORE
           MOVE 'DAP' TO TAB-COD-SIST.
           MOVE 'MDR' TO TAB-COD-TTAB IN TAB.
           MOVE OPD-COD-MORE IN OPD-FLD TO TAB-COD-CTAB IN TAB.
           PERFORM VAL-COD.
           IF MSG-COD-MENS = 'COD    NEX' OR
              OPD-COD-MORE IN OPD-FLD NOT > SPACES
               MOVE SPACES TO FRM-GLS-MORE IN OPD-FLD
           ELSE
               MOVE TAB-CIC-CTAB IN TAB TO SCR-CIC-MORE.


      *    CALCULA CAPITAL E INTERESES
           PERFORM CAL-CAP-INT.
           IF MSG-COD-MENS > SPACES
               MOVE FRM-SUAR-MAL TO FRM-SUAR
               MOVE 'DAP' TO MSG-COD-SIST
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS
               GO TO FIN-CAL-MLT-FORI.

           MOVE ZEROES TO WSS-VAL-FORI.
           ADD SCR-INTE TO WSS-VAL-FORI.
           ADD SCR-CAPI TO WSS-VAL-FORI.

           MULTIPLY INT-TIPE BY 100 GIVING SCR-SGV-TPER.

            MOVE WSS-VAL-FORI TO FRM-VAL-FORI IN OPD-FLD.

      *    APROXIMACIONES DE CANTIDADES EN PESOS
            MOVE FRM-VAL-FORI IN OPD-FLD TO PES-SGV-DECI.
            MOVE SCR-CIC-VCAM TO PES-CIC-VCAM.
            PERFORM PES-SCTV.
            MOVE PES-SGV-ENTE TO FRM-VAL-FORI IN OPD-FLD.

            MOVE OPD-SGV-MPRE IN OPD-FLD TO PES-SGV-DECI.
            MOVE SCR-CIC-VCAM TO PES-CIC-VCAM.
            PERFORM PES-SCTV.
            MOVE PES-SGV-ENTE TO OPD-SGV-MPRE IN OPD-FLD.

            MOVE SCR-IDNI TO PES-SGV-DECI.
            MOVE SCR-CIC-VCAM TO PES-CIC-VCAM.
            PERFORM PES-SCTV.
            MOVE PES-SGV-ENTE TO SCR-IDNI.
      *-----------------------------------
           MOVE FRM-VAL-FORI IN OPD-FLD TO VEN-VAL-FINA IN VEN.
           MOVE FRM-VAL-FORI IN OPD-FLD TO VEN-VAL-SFIN IN VEN.
           PERFORM GET-UPD-VEN.
           IF PGM-STAT-VEN-OKS
               PERFORM RET-VEN-OPD
               PERFORM MOD-VEN
               IF NOT FIO-STAT-OKS
                   MOVE FRM-SUAR-MAL TO FRM-SUAR
                   MOVE 'DAP' TO MSG-COD-SIST
                   MOVE FIO-MENS TO MSG-COD-MENS
                   PERFORM GET-MSG
                   MOVE MSG-GLS-DESC TO FRM-MENS
                   GO TO FIN-CAL-MLT-FORI.

       FIN-CAL-MLT-FORI.
           EXIT.
      *--------------------------------------------------------------
      *AFRI-FIN 13-ABR-2011 INTEGRACION MC2


       RET-MUL-MC2 SECTION.
       INI-RET-MUL-MC2.

           IF DPM-COD-CPTO IN DPM-VARI = 'PPC'
               GO TO PPC-RET-MUL-MC2.

           MOVE DPM-INT-SGV-TPIZ TO
                WSS-INT-SGV-TPIZ.

           MOVE DPM-INT-SGV-TMAX TO
                WSS-INT-SGV-TMAX.

           MOVE DPM-INT-SGV-TMAR TO
                WSS-INT-SGV-TMAR.

           MOVE DPM-INT-SGV-TTOP TO
                WSS-INT-SGV-TTOP.

           GO TO FIN-RET-MUL-MC2.

       PPC-RET-MUL-MC2.
           MOVE DPM-PPC-SGV-MMIN TO
                WSS-PPC-SGV-MMIN.

           MOVE DPM-PPC-COD-VCMI TO
                WSS-PPC-COD-VCMI.

           MOVE DPM-PPC-SGV-MMAX TO
                WSS-PPC-SGV-MMAX.

           MOVE DPM-PPC-COD-VCMA TO
                WSS-PPC-COD-VCMA.

       FIN-RET-MUL-MC2.
           EXIT.
      *
      *CIMA-INI 20-OCT-2014 CORRECCION INCIDENTES DAP GRUPO 1 HITO 2
       PUT-LND-ANT-RDL SECTION.
       INI-PUT-LND-ANT-RDL.
           MOVE SPACES TO LND.
           MOVE WSS-CT-RDL  TO LND-COD-EVEN IN LND.
           MOVE WSS-CT-M    TO LND-COD-TACC IN LND
                               LND-COD-STAT IN LND.
           MOVE WSS-CT-ANT  TO LND-COD-INST IN LND.
           MOVE WSS-CT-1     TO LND-NUM-CLND IN LND
                                LND-NUM-COPD IN LND
                                LND-NUM-CCLI IN LND
                                LND-NUM-CAUT IN LND.
           PERFORM PRO-GRABA-REG-LND-RDL.
       FIN-PUT-LND-ANT-RDL.
            EXIT.

       PUT-LND-DES-RDL SECTION.
       INI-PUT-LND-DES-RDL.
           MOVE SPACES TO LND.
           MOVE WSS-CT-RDL  TO LND-COD-EVEN IN LND.
           MOVE WSS-CT-M    TO LND-COD-TACC IN LND
                               LND-COD-STAT IN LND.
           MOVE WSS-CT-DES  TO LND-COD-INST IN LND.
           MOVE WSS-CT-2 TO LND-NUM-CLND IN LND
                            LND-NUM-COPD IN LND
                            LND-NUM-CCLI IN LND
                            LND-NUM-CAUT IN LND.
           PERFORM PRO-GRABA-REG-LND-RDL.
       FIN-PUT-LND-DES-RDL.
           EXIT.

       PRO-GRABA-REG-LND-RDL SECTION.
       INI-GRABA-REG-LND-RDL.
           MOVE WSS-CT-VERS TO LND-COD-VERS IN LND.
           MOVE WSS-CT-OPD  TO LND-COD-ENTF IN LND
                               LND-COD-ENTO IN LND
                               LND-COD-ENTC IN LND
                               LND-COD-ENTA IN LND
                               LND-COD-ENTI IN LND.
           MOVE HOY-FHOY TO LND-FEC-FTRN IN LND
                            LND-FEC-FLND IN LND
                            LND-FEC-FOPD IN LND
                            LND-FEC-FCLI IN LND
                            LND-FEC-FAUT IN LND.
           MOVE HOY-HHOY TO LND-HRA-HRTR IN LND
                            LND-HRA-HHND IN LND
                            LND-HRA-HOPD IN LND
                            LND-HRA-HCLI IN LND
                            LND-HRA-HAUT IN LND.
           MOVE OPD-CIC-IOPD IN OPD TO LND-CIC-IOPD IN LND.
           MOVE EIBTRMID            TO LND-COD-OTRN IN LND.
           MOVE SCR-USER            TO LND-COD-ATRN IN LND
                                       LND-COD-AUTO IN LND.
           MOVE EIBTRNID            TO LND-COD-TCIC IN LND.
           MOVE SCR-CMND            TO LND-COD-CMND IN LND.
      * CAMPOS
           MOVE OPD-SGV-TINT IN OPD TO WSS-NUM-TASA.
           MOVE WSS-NUM-TASA        TO LND-COD-LN01 IN LND.
           MOVE OPD-COD-EJEC IN OPD TO LND-COD-LN02 IN LND.
           MOVE OPD-VAL-CAPT IN OPD TO WSS-NUM-VALO.
           MOVE WSS-NUM-VALO        TO LND-COD-LN03 IN LND.
           MOVE OPD-SGV-MPRE IN OPD TO WSS-NUM-VALO.
           MOVE WSS-NUM-VALO        TO LND-COD-LN04 IN LND.
           MOVE OPD-NUM-RETD IN OPD TO LND-COD-LN05 IN LND.
           MOVE OPD-IND-RETD IN OPD TO LND-COD-LN06 IN LND.
      *
           PERFORM GET-CUR-RCC-MDA.
           IF PGM-STAT-RCC-OKS
              MOVE RCC-CIC-ICLI IN RCC TO LND-CIC-ICLI IN LND.
           MOVE RCC-CIC-ICLI IN RCC TO LND-CIC-ICLI IN LND.
           MOVE FIO-PUT TO FIO-CMND.
           PERFORM DAP-FIO-LND.
       FIN-GRABA-REG-LND-RDL.
           EXIT.
      *CIMA-FIN 20-OCT-2014 CORRECCION INCIDENTES DAP GRUPO 1 HITO 2
