*%! Codigo adicional para RCC
*% GEN_MFC = TRUE
*% IF PGM_PQ
*% CLRMFC = "DAPZQRCC"
*% ELSE
*% CLRMFC = "DAPZURCC"
*% END
*% LARGO_MI_COMMAREA = 550
*% PGM_PTC = TRUE
*% NO_HDR_CST = TRUE
*% NO_TIENE_TIMESTAMP = TRUE
*% IF PGM_INI_NO
      *<<<< PGM_INI_NO ESTO AHORA SE INHIBE POR TABLA DE CONGELAMIENTO
      *ISP: SI PF11 EN ENGANCHE ( FUNCION NEMO DISTINTA A RCC )
      *     IF EIBAID = '#' OR '.'
      *         MOVE DFHCOMMAREA TO SCR-VARI
      *         IF SCR-NEMO NOT = 'DAPACTRCC   '
      *             MOVE ' ' TO EIBAID.
      *>>>>
*% END
*% IF CMT_ID
*% IF PGM_PU
      * -----------------------------------------------------------*
      * 19-OCT-2009, CimaGroup Ltda.
      * Mantencion:
      * Grabar log de negocios en tabla LND. (log RCC/MDC),
      * incorporando codigo de programa DAPPUOPD.para log OPD/MDA
      * Marca     : JFH1
      * -----------------------------------------------------------*
*% END
*% END
*% IF FIN_SCR_VARI
      *<<<< FIN_SCR_VARI
       COPY DAPWGENG.
      * ISP: VARIABLES EN CMMA, COMUNES PARA PROGRAMAS PI,PQ,PU ( OPD )
      *      OPD DEBE MANTENERLAS EN ENGANCHE
       COPY DAPWG005.
       COPY GNSWGRQA REPLACING
                     ==01  ADR-REQA== BY ==02  SCR-RCC-REQA==.
           02 SCR-KEY-IRCC                     PIC X(03).
           02 SCR-CIC-ICLI                     PIC X(12).
           02 SCR-IND-BUSQ                     PIC X(01).
      *>>>>
*% END
*% IF INI_FIO
      *<<<< INI_FIO
           IF SCR-DESDE-CMN
               PERFORM GNS-CLR-RQA.
      *>>>>
*% END
*% IF PGM_POS_EDB
      *<<<< PGM_POS_EDB
*% IF PGM_PU
      * ISP-INI 31-07-1998 INICIALIZA CAMPOS DE REGISTROS
           PERFORM CLR-REG-RCC.
      * ISP-FIN 31-07-1998 INICIALIZA CAMPOS DE REGISTROS

JFH1  *    guardar Fecha y Hora de Transaccion para log MDC
JFH1       PERFORM GET-FHOY.
JFH1       MOVE HOY-FHOY TO WSS-FHOY.
JFH1       MOVE HOY-HHOY TO WSS-HHOY.
      *>>>>
*% END
*% END
*% IF PGM_POS_RCK
      *<<<< PGM_POS_RCK
      *>>>>
*% END
*% IF SCR_GIKY_VAL_IKY
      *<<<< SCR_GIKY_VAL_IKY
      * PTC-INI (RRM)  3-DEC-2002
           IF SCR-OFRM-SRV

              MOVE PTC-OPD-TYPE TO QUE-TYPE
              MOVE TSK-TERM-ALF TO QUE-TERM
              MOVE PTC-OPD-LENG TO QUE-LITM
              MOVE 1            TO  QUE-NITM
              MOVE QUE-GET        TO QUE-CMND
              PERFORM GNS-PRO-QUE
              IF QUE-STAT = QUE-STAT-OKS
                  MOVE QUE-ITEM TO PTC-OPD-ITEM
                  MOVE PTC-OPD-OPD-CAI-IOPD TO RCC-CAI-IOPD IN RCC-FLD
                  MOVE PTC-OPD-OPD-IIC-IOPD TO RCC-IIC-IOPD IN RCC-FLD.
      * PTC-FIN (RRM)  3-DEC-2002
      *>>>>
*% END
*% IF CMN_MOD_RET
      *<<<< CMN_MOD_RET
JFH1       IF SCR-CMND = 'MDC'
JFH1             PERFORM PUT-LND-ANT.
      *>>>>
*% END
*% IF PFS_SCR_MOD
      *<<<< PFS_SCR_MOD

      *>>>>
*% END
*% IF FIN_PUT_SCR
      *<<<< FIN_PUT_SCR
      *PTC-INI:  (RRM)  22-NOV-2002
           IF SCR-CMND = 'CON' AND
              SCR-OFRM-SRV

                 MOVE TSK-TERM-ALF TO QUE-TERM
                 MOVE PTC-RCC-TYPE TO QUE-TYPE
                 MOVE QUE-DEL TO QUE-CMND
                 PERFORM GNS-PRO-QUE


                 MOVE 'RCC-KEY-IOPD' TO FIO-AKEY
                 MOVE RCC-CAI-IOPD IN RCC-FLD TO RCC-CAI-IOPD IN RCC
                 MOVE RCC-IIC-IOPD IN RCC-FLD TO RCC-IIC-IOPD IN RCC

      *BEE-INI 28-11-2001
                 MOVE '23' TO PGM-STAT-RCC
      *BEE-FIN 28-11-2001

                 MOVE ZEROES TO QUE-NITM
                 MOVE FIO-GET-NLS TO FIO-CMND.

       CIC-PTC-RCC.
           IF SCR-CMND = 'CON' AND
              SCR-OFRM-SRV
                 PERFORM DAP-FIO-RCC
                 IF FIO-STAT-OKS AND
                    RCC-CAI-IOPD IN RCC = RCC-CAI-IOPD IN RCC-FLD AND
                    RCC-IIC-IOPD IN RCC = RCC-IIC-IOPD IN RCC-FLD
                     MOVE FIO-STAT TO PGM-STAT-RCC
                     PERFORM BUS-CLI-CON-RCC
                     PERFORM BUS-RCD
                     PERFORM BUS-LUGA

                     PERFORM PUT-RCC-RCC

                     MOVE DBC-GLS-NOMC IN RCC-FLD TO
                                              PTC-RCC-DBC-GLS-NOMC
                     MOVE DBC-NUM-ICLI IN RCC-FLD TO
                                              PTC-RCC-DBC-NUM-ICLI-EDT
                     MOVE DBC-VRF-ICLI IN RCC-FLD TO
                                              PTC-RCC-DBC-VRF-ICLI
                     MOVE DBC-IND-ICLI IN RCC-FLD TO
                                              PTC-RCC-DBC-IND-ICLI
                     MOVE DBC-GLS-ICLI IN RCC-FLD TO
                                              PTC-RCC-DBC-GLS-ICLI
                     MOVE RCC-NUM-DIRE IN RCC     TO
                                              PTC-RCC-RCC-NUM-DIRE-EDT
                     MOVE RCD-GLS-DIRE IN RCC-FLD TO
                                              PTC-RCC-RCD-GLS-DIRE
                     MOVE RCD-GLS-FONO IN RCC-FLD TO
                                              PTC-RCC-RCD-GLS-FONO
                     MOVE FRM-GLS-LUGA IN RCC-FLD TO
                                              PTC-RCC-FRM-GLS-LUGA
                     ADD 1 TO QUE-NITM
                     MOVE TSK-TERM-ALF TO QUE-TERM
                     MOVE PTC-RCC-TYPE TO QUE-TYPE
                     MOVE PTC-RCC-ITEM TO QUE-ITEM
                     MOVE PTC-RCC-LENG TO QUE-LITM
                     MOVE QUE-PUT  TO QUE-CMND
                     PERFORM GNS-PRO-QUE

                     MOVE FIO-GET-NXT TO FIO-CMND
                     MOVE 'RCC-KEY-IOPD' TO FIO-AKEY
                     GO TO CIC-PTC-RCC.

      *PTC-FIN:  (RRM)  22-NOV-2002
      *>>>>
*% END
*% IF EOF
      *<<<< EOF
       RST-STAT SECTION.
       INI-RST-STAT.
           MOVE SCR-STPP     TO SCR-STAT.
           MOVE SCR-MFLD-NOT TO SCR-MFLD.
       FIN-RST-STAT.
           EXIT.

       GNS-CLR-RQA SECTION.
       INI-GNS-CLR-RQA.
           MOVE SPACES TO SCR-RCC-REQA.
           MOVE SPACES TO SCR-KEY-IRCC.
       FIN-GNS-CLR-RQA.
           EXIT.
      *>>>> EOF
*% END
*% IF PFS_GET_CON
      *<<<< PFS_GET_CON
      *     IF NOT ( FRM-FFLD = FRM-FFLD-PF5 OR FRM-FFLD-PF6 OR 
      *                         FRM-FFLD-PF7 OR FRM-FFLD-PF8 )

           IF NOT ( FRM-FFLD = FRM-FFLD-PF5 OR FRM-FFLD-PF6 )
      *>>>>
*% END
*% IF PFS_SCR_ACC
      *<<<< PFS_SCR_ACC
           IF FRM-FFLD = FRM-FFLD-PF5 OR FRM-FFLD-PF6 OR 
                         FRM-FFLD-PF7 OR FRM-FFLD-PF8
               PERFORM VAL-NUM-KEY-RCC
               PERFORM VAL-NUM-FLD-RCC
               PERFORM RST-STAT
               PERFORM PGM-PRO-PFS
               IF SCR-STAT NOT = SCR-STAT-ABT
                   PERFORM SCR-TRL
               ELSE
                   PERFORM GNS-CLR-RQA
                   PERFORM DESSCRTRL
                   GO TO FIN-SCR-ACC.
           PERFORM GNS-CLR-RQA.
      *>>>>
*% END
*% IF FIN_HBL_KEY
      *<<<< FIN_HBL_KEY
           MOVE '1' TO FRM-CPIM-AEY.
      *>>>>
*% END
*% IF EOF
      *<<<< EOF
       PGM-PRO-PFS SECTION.
       INI-PGM-PRO-PFS.
           MOVE SPACES TO FRM-MENS.
           PERFORM PRO-SCRL-PFS.
           PERFORM PUT-SCR.
           MOVE PGM-LIMPIAR-TODO TO PGM-ICLR.
           PERFORM SCR-MSSG.
       FIN-PGM-PRO-PFS.
           EXIT.

      *JSS: esto es programado por el usuario *
       PRO-SCRL-PFS SECTION.
       INI-PRO-SCRL-PFS.
           IF FRM-FFLD = FRM-FFLD-PF5
               PERFORM PRO-SCRL-PF5
           ELSE
           IF FRM-FFLD = FRM-FFLD-PF6
               PERFORM PRO-SCRL-PF6
           ELSE
           IF FRM-FFLD = FRM-FFLD-PF7
               PERFORM PRO-SCRL-PF7
           ELSE
               PERFORM PRO-SCRL-PF8.
       FIN-PRO-SCRL-PFS.
           EXIT.

       PRO-SCRL-PF5 SECTION.
       INI-PRO-SCRL-PF5.
           MOVE PGM-SNUL TO PGM-STAT-OPD.
           MOVE SCR-RCC-REQA TO ADR-RCC-REQA.
           MOVE FIO-KDEF-S  TO FIO-KDEF.
           MOVE FIO-GET-PRV TO FIO-CMND.
           PERFORM DAP-FIO-RCC.
           IF SCR-IND-BUSQ = 'O'
               IF NOT ( FIO-STAT-OKS AND
                  RCC-CAI-IOPD IN RCC = RCC-CAI-IOPD IN RCC-FLD AND
                  RCC-IIC-IOPD IN RCC = RCC-IIC-IOPD IN RCC-FLD )
                   MOVE PGM-SNUL TO PGM-STAT-RCC
                   MOVE PGM-SNUL TO PGM-STAT-DBC
                   MOVE PGM-SNUL TO PGM-STAT-RCD
                   MOVE 'DAP'          TO MSG-COD-SIST
                   MOVE 'RCCCLI NOPRV' TO MSG-COD-MENS
                   PERFORM GET-MSG
                   MOVE MSG-GLS-DESC TO FRM-MEN2
*% IF PGM_PQ
                   MOVE FRM-MEN2     TO RCC-GLS-MEN2 IN RCC-FLD
*% END
                   GO TO FIN-PRO-SCRL-PF5
               ELSE
                   NEXT SENTENCE
           ELSE
               IF NOT ( FIO-STAT-OKS AND
                  RCC-CIC-ICLI IN RCC = SCR-CIC-ICLI )
                   MOVE PGM-SNUL TO PGM-STAT-RCC
                   MOVE PGM-SNUL TO PGM-STAT-DBC
                   MOVE PGM-SNUL TO PGM-STAT-RCD
                   MOVE 'DAP'          TO MSG-COD-SIST
                   MOVE 'RCCOPD NOPRV' TO MSG-COD-MENS
                   PERFORM GET-MSG
                   MOVE MSG-GLS-DESC TO FRM-MEN2
*% IF PGM_PQ
                   MOVE FRM-MEN2     TO RCC-GLS-MEN2 IN RCC-FLD
*% END
                   GO TO FIN-PRO-SCRL-PF5.
           MOVE FIO-STAT     TO PGM-STAT-RCC.
           MOVE ADR-RCC-REQA TO SCR-RCC-REQA.
           PERFORM BUS-CLI-CON-RCC.
       FIN-PRO-SCRL-PF5.
           EXIT.

       PRO-SCRL-PF6 SECTION.
       INI-PRO-SCRL-PF6.
           MOVE PGM-SNUL TO PGM-STAT-OPD.
           MOVE SCR-RCC-REQA TO ADR-RCC-REQA.
           MOVE FIO-KDEF-S TO FIO-KDEF.
           MOVE FIO-GET-NXT TO FIO-CMND.
           PERFORM DAP-FIO-RCC.
           IF SCR-IND-BUSQ = 'O'
               IF NOT ( FIO-STAT-OKS AND
                  RCC-CAI-IOPD IN RCC = RCC-CAI-IOPD IN RCC-FLD AND
                  RCC-IIC-IOPD IN RCC = RCC-IIC-IOPD IN RCC-FLD )
                   MOVE PGM-SNUL TO PGM-STAT-RCC
                   MOVE PGM-SNUL TO PGM-STAT-DBC
                   MOVE PGM-SNUL TO PGM-STAT-RCD
                   MOVE 'DAP'          TO MSG-COD-SIST
                   MOVE 'RCCCLI NONXT' TO MSG-COD-MENS
                   PERFORM GET-MSG
                   MOVE MSG-GLS-DESC TO FRM-MEN2
*% IF PGM_PQ
                   MOVE FRM-MEN2     TO RCC-GLS-MEN2 IN RCC-FLD
*% END
                   GO TO FIN-PRO-SCRL-PF6
               ELSE
                   NEXT SENTENCE
           ELSE
               IF NOT ( FIO-STAT-OKS AND
                  RCC-CIC-ICLI IN RCC = SCR-CIC-ICLI )
                   MOVE PGM-SNUL TO PGM-STAT-RCC
                   MOVE PGM-SNUL TO PGM-STAT-DBC
                   MOVE PGM-SNUL TO PGM-STAT-RCD
                   MOVE 'DAP'          TO MSG-COD-SIST
                   MOVE 'RCCOPD NONXT' TO MSG-COD-MENS
                   PERFORM GET-MSG
                   MOVE MSG-GLS-DESC TO FRM-MEN2
*% IF PGM_PQ
                   MOVE FRM-MEN2     TO RCC-GLS-MEN2 IN RCC-FLD
*% END
                   GO TO FIN-PRO-SCRL-PF6.
           MOVE FIO-STAT     TO PGM-STAT-RCC.
           MOVE ADR-RCC-REQA TO SCR-RCC-REQA.
           PERFORM BUS-CLI-CON-RCC.
       FIN-PRO-SCRL-PF6.
           EXIT.

       PRO-SCRL-PF7 SECTION.
       INI-PRO-SCRL-PF7.
           MOVE RCC-CAI-IOPD IN RCC-FLD TO OPD-CAI-IOPD IN OPD.
           MOVE RCC-IIC-IOPD IN RCC-FLD TO OPD-IIC-IOPD IN OPD.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM DAP-FIO-OPD.
           IF NOT FIO-STAT-OKS
               MOVE 'OPD    NEX' TO MSG-COD-MENS
               GO TO MSG-PRO-SCRL-PF7.
           MOVE FIO-GET-PRV TO FIO-CMND.
           PERFORM DAP-FIO-OPD.
           MOVE FIO-STAT TO PGM-STAT-OPD.
           IF NOT FIO-STAT-OKS
               MOVE PGM-SNUL TO PGM-STAT-RCC
               MOVE PGM-SNUL TO PGM-STAT-DBC
               MOVE PGM-SNUL TO PGM-STAT-OPD
               MOVE PGM-SNUL TO PGM-STAT-RCD
               MOVE 'OPD    NOPRV' TO MSG-COD-MENS
               GO TO MSG-PRO-SCRL-PF7.
           PERFORM BUS-RCC-CON-OPD.
           IF FIO-STAT = FIO-STAT-NEX
               GO TO FIN-PRO-SCRL-PF7.
           PERFORM BUS-CLI-CON-RCC.
       MSG-PRO-SCRL-PF7.
           IF MSG-COD-MENS > SPACES
               MOVE 'DAP' TO MSG-COD-SIST
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MEN2.
       FIN-PRO-SCRL-PF7.
           EXIT.

       PRO-SCRL-PF8 SECTION.
       INI-PRO-SCRL-PF8.
           MOVE RCC-CAI-IOPD IN RCC-FLD TO OPD-CAI-IOPD IN OPD.
           MOVE RCC-IIC-IOPD IN RCC-FLD TO OPD-IIC-IOPD IN OPD.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM DAP-FIO-OPD.
           IF NOT FIO-STAT-OKS
               MOVE 'OPD    NEX' TO MSG-COD-MENS
               GO TO MSG-PRO-SCRL-PF8.
           MOVE FIO-GET-NXT TO FIO-CMND.
           PERFORM DAP-FIO-OPD.
           MOVE FIO-STAT TO PGM-STAT-OPD.
           IF NOT FIO-STAT-OKS
               MOVE PGM-SNUL TO PGM-STAT-RCC
               MOVE PGM-SNUL TO PGM-STAT-DBC
               MOVE PGM-SNUL TO PGM-STAT-OPD
               MOVE PGM-SNUL TO PGM-STAT-RCD
               MOVE 'OPD    NONXT' TO MSG-COD-MENS
               GO TO MSG-PRO-SCRL-PF8.
           PERFORM BUS-RCC-CON-OPD.
           IF FIO-STAT = FIO-STAT-NEX
               GO TO FIN-PRO-SCRL-PF8.
           PERFORM BUS-CLI-CON-RCC.
       MSG-PRO-SCRL-PF8.
           IF MSG-COD-MENS > SPACES
               MOVE 'DAP' TO MSG-COD-SIST
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MEN2.
       FIN-PRO-SCRL-PF8.
           EXIT.
      *>>>>
*% END
*%!-----------------------------------------------------------------
*% IF WSS
      *<<<< WSS
*% IF PGM_PQ      
      *PTC-INI (RRM) 3-DEC-2002
       COPY DAPMXW03.
       COPY DAPMXW05.
      *PTC-FIN (RRM) 3-DEC-2002
*% END
*% IF PGM_PU
JFH1   COPY DAPBRLND.
JFH1   COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-LND-REQA==.
*% END
      *Entidades de GNS
       COPY GNSWGCPT.
       COPY GNSWGSTR.
       COPY GNSWGHOY.

      *Entidades de SGC
       COPY SGCBRDBC.
       COPY SGCBRRCD.
      *Entidades de DAP
       COPY DAPWGPMP.
       COPY DAPBROPD.
       01  WSS-VARI.
           03 WSS-IND-IOPD                               PIC X(01).
           03 WSS-COD-LUGA.
              05 WSS-IND-LUGA                            PIC X(01).
              05 WSS-COD-PAIS                            PIC X(03).
*% IF PGM_PU
JFH1       03 WSS-QUE-CLND                               PIC 9(03).
JFH1       03 WSS-FHOY                                   PIC X(08).
JFH1       03 WSS-HHOY                                   PIC X(06).
*% END
      *>>>> WSS
*% END
*% IF WSS_DTC
      *<<<< WSS_DTC
      *Entidades de SGC
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-DBC-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-RCD-REQA==.
      *Entidades de DAP
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-OPD-REQA==.
      *>>>>
*% END
*% IF FIN_SCR_GIKY OR FIN_SCR_GCNF OR FIN_SCR_GFLD
      *<<<< FIN_SCR_GIKY OR FIN_SCR_GCNF OR FIN_SCR_GFLD
           IF FRM-FFLD = FRM-FFLD-PF3 AND
              SCR-IND-ENG IN SCR-VEC-ENG(SCR-IPRO) = 'S'
               PERFORM EGR-FTER-CIC.
      *>>>>
*% END
*% IF SCR_GIKY_VAL_CON_IKY OR FIN_CMN_ING
      *<<<< SCR_GIKY_VAL_CON_IKY OR FIN_CMN_ING
           IF FRM-FFLD = FRM-FFLD-PF10 AND
              SCR-IND-ENG IN SCR-VEC-ENG(SCR-IPRO) = 'S'
               PERFORM EGR-FPEN-CIC.
      *>>>>
*% END
*% IF INI_FIO
      *<<<< INI_FIO
           IF SCR-DESDE-CMN
               MOVE SPACES TO SCR-VEC-ENG
               MOVE 1 TO SCR-IPRO
               GO TO FIN-INI-FIO.
           IF SCR-INST-EXT = WSS-INST-FPEN-CIC
               MOVE WSS-INST-NULL TO SCR-INST-EXT
               MOVE 'GNS' TO MSG-COD-SIST
               MOVE 'MSGKEY' TO MSG-COD-MENS
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO SCR-MENS-EXT
               PERFORM ING-FPEN-CIC.
       FIN-INI-FIO.
      *>>>>
*% END
*% IF FIN_HBL_IKY
      *<<<< FIN_HBL_IKY
           MOVE '1' TO FRM-CPIM-AEY.
           IF SCR-IND-ENG IN SCR-VEC-ENG(SCR-IPRO) = 'S'
               PERFORM HBL-KEY-RCC.
      *>>>>
*% END
*% IF FND_KEY
      *<<<< FND_KEY
           IF ( RCC-CAI-IOPD IN RCC-FLD NOT > SPACES AND
                RCC-IIC-IOPD IN RCC-FLD NOT > ZEROES ) 
                MOVE 'C' TO SCR-IND-BUSQ
                PERFORM BUS-POR-CLI
                GO TO FIN-FND-KEY
           ELSE
           IF ( DBC-NUM-ICLI IN RCC-FLD NOT > ZEROES )
                MOVE 'O' TO SCR-IND-BUSQ
                PERFORM BUS-POR-OPD
                GO TO FIN-FND-KEY.
      *>>>>
*% END
*% IF PUT_SCR
      *<<<< PUT_SCR
           IF PGM-STAT-RCC-OKS
              PERFORM BUS-RCD.
      *>>>>
*% END
*% IF EOF
      *<<<< EOF
       BUS-POR-CLI SECTION.
       INI-BUS-POR-CLI.
           IF DBC-NUM-ICLI IN RCC-FLD > ZEROES
      *IDC-CLI Busca Cliente por medio de IdC
               MOVE DBC-NUM-ICLI IN RCC-FLD TO DBC-NUM-ICLI IN DBC
               MOVE DBC-IND-ICLI IN RCC-FLD TO DBC-IND-ICLI IN DBC
               MOVE DBC-GLS-ICLI IN RCC-FLD TO DBC-GLS-ICLI IN DBC
               MOVE 'DBC-IDC-ICLI' TO FIO-AKEY
               MOVE FIO-GET-KEY    TO FIO-CMND
               PERFORM GET-CLI
               IF MSG-COD-MENS > SPACES
                   MOVE 'SGC'        TO MSG-COD-SIST
                   MOVE 'CLI    NEX' TO MSG-COD-MENS
                   PERFORM GET-MSG
                   MOVE MSG-GLS-DESC TO FRM-MENS
                   MOVE FIO-STAT-NEX TO FIO-STAT
                   GO TO FIN-BUS-POR-CLI
               ELSE
                   NEXT SENTENCE
           ELSE
      *NOM-CLI Busca Cliente por medio del Nombre
               MOVE DBC-GLS-NOMC IN RCC-FLD TO STR-GLS-GSTR
               PERFORM STR-UNS
               MOVE STR-GLS-FUNS IN STR-VARI(1) TO DBC-GLS-APAT IN DBC
               MOVE STR-GLS-FUNS IN STR-VARI(2) TO DBC-GLS-AMAT IN DBC
               MOVE STR-GLS-FUNS IN STR-VARI(3) TO DBC-GLS-NOMB IN DBC
               MOVE 'DBC-GLS-NOMC' TO FIO-AKEY
               MOVE FIO-GET-NLS    TO FIO-CMND
               PERFORM GET-CLI
               IF MSG-COD-MENS > SPACES
                   MOVE 'SGC'        TO MSG-COD-SIST
                   MOVE 'CLI    NEX' TO MSG-COD-MENS
                   PERFORM GET-MSG
                   MOVE MSG-GLS-DESC TO FRM-MENS
                   MOVE FIO-STAT-NEX TO FIO-STAT
                   GO TO FIN-BUS-POR-CLI.
      *Ya tiene el cliente leido ( sea por RUT o NOMBRE )
           MOVE '00' TO PGM-STAT-DBC.
           MOVE DBC-GLS-NOMC IN DBC TO CPT-STRN.
           PERFORM CPT-BLKS.
           MOVE CPT-STRN TO DBC-GLS-NOMC IN RCC-FLD
                            DBC-GLS-NOMC IN DBC.
           MOVE DBC-NUM-ICLI IN DBC TO DBC-NUM-ICLI IN RCC-FLD.
           MOVE DBC-VRF-ICLI IN DBC TO DBC-VRF-ICLI IN RCC-FLD.
           MOVE DBC-IND-ICLI IN DBC TO DBC-IND-ICLI IN RCC-FLD.
           MOVE DBC-GLS-ICLI IN DBC TO DBC-GLS-ICLI IN RCC-FLD.
           MOVE DBC-CAI-ICLI IN DBC TO RCC-CAI-ICLI IN RCC-FLD.
           MOVE DBC-IIC-ICLI IN DBC TO RCC-IIC-ICLI IN RCC-FLD.
           MOVE DBC-CIC-ICLI IN DBC TO SCR-CIC-ICLI.
           PERFORM BUS-RCC-CON-CLI.
           IF FIO-STAT = FIO-STAT-NEX
               GO TO FIN-BUS-POR-CLI.
           PERFORM BUS-OPD-CON-RCC.
       FIN-BUS-POR-CLI.
           EXIT.

       BUS-RCC-CON-CLI SECTION.
       INI-BUS-RCC-CON-CLI.
           MOVE DBC-CIC-ICLI IN DBC TO RCC-CIC-ICLI IN RCC.
           MOVE HIGH-VALUES         TO RCC-CIC-IOPD IN RCC.
           MOVE FIO-GET-LEQ TO FIO-CMND.
           PERFORM DAP-FIO-RCC.

           IF NOT ( FIO-STAT-OKS AND
                    RCC-CAI-ICLI IN RCC = DBC-CAI-ICLI IN DBC AND
                    RCC-IIC-ICLI IN RCC = DBC-IIC-ICLI IN DBC )
               MOVE 'DAP'        TO MSG-COD-SIST
               MOVE 'RCC    NEX' TO MSG-COD-MENS
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS
               MOVE FIO-STAT-NEX TO FIO-STAT
           ELSE
               MOVE ADR-RCC-REQA TO SCR-RCC-REQA
               MOVE FIO-STAT TO PGM-STAT-RCC.
       FIN-BUS-RCC-CON-CLI.
           EXIT.

       BUS-OPD-CON-RCC SECTION.
       INI-BUS-OPD-CON-RCC.
           MOVE RCC-CAI-IOPD IN RCC TO OPD-CAI-IOPD IN OPD.
           MOVE RCC-IIC-IOPD IN RCC TO OPD-IIC-IOPD IN OPD.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM DAP-FIO-OPD.
           MOVE FIO-STAT TO PGM-STAT-OPD.
           IF NOT FIO-STAT-OKS
               MOVE 'DAP'        TO MSG-COD-SIST
               MOVE 'OPD    NEX' TO MSG-COD-MENS
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS
               MOVE FIO-STAT-NEX TO FIO-STAT.
       FIN-BUS-OPD-CON-RCC.
           EXIT.

       BUS-POR-OPD SECTION.
       INI-BUS-POR-OPD.
           MOVE RCC-CAI-IOPD IN RCC-FLD TO OPD-CAI-IOPD IN OPD.
           MOVE RCC-IIC-IOPD IN RCC-FLD TO OPD-IIC-IOPD IN OPD.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM DAP-FIO-OPD.
           MOVE FIO-STAT TO PGM-STAT-OPD.
           IF NOT FIO-STAT-OKS
               MOVE 'DAP'        TO MSG-COD-SIST
               MOVE 'OPD    NEX' TO MSG-COD-MENS
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS
               MOVE FIO-STAT-NEX TO FIO-STAT
               GO TO FIN-BUS-POR-OPD.
           PERFORM BUS-RCC-CON-OPD.
           IF FIO-STAT = FIO-STAT-NEX
               GO TO FIN-BUS-POR-OPD.
           PERFORM BUS-CLI-CON-RCC.
       FIN-BUS-POR-OPD.
           EXIT.

       BUS-RCC-CON-OPD SECTION.
       INI-BUS-RCC-CON-OPD.
           MOVE OPD-CAI-IOPD IN OPD TO RCC-CAI-IOPD IN RCC.
           MOVE OPD-IIC-IOPD IN OPD TO RCC-IIC-IOPD IN RCC.
           MOVE 'RCC-KEY-IOPD' TO FIO-AKEY.
           MOVE FIO-GET-NLS TO FIO-CMND.
           PERFORM DAP-FIO-RCC.
           IF NOT ( FIO-STAT-OKS AND
                    RCC-CAI-IOPD IN RCC = OPD-CAI-IOPD IN OPD AND
                    RCC-IIC-IOPD IN RCC = OPD-IIC-IOPD IN OPD )
               MOVE 'DAP'        TO MSG-COD-SIST
               MOVE 'RCC    NEX' TO MSG-COD-MENS
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS
               MOVE FIO-STAT-NEX TO FIO-STAT
           ELSE
               MOVE ADR-RCC-REQA TO SCR-RCC-REQA
               MOVE FIO-STAT TO PGM-STAT-RCC.
       FIN-BUS-RCC-CON-OPD.
           EXIT.

       BUS-CLI-CON-RCC SECTION.
       INI-BUS-CLI-CON-RCC.
           MOVE RCC-CAI-ICLI IN RCC TO DBC-CAI-ICLI IN DBC.
           MOVE RCC-IIC-ICLI IN RCC TO DBC-IIC-ICLI IN DBC.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM SGC-FIO-DBC.
           MOVE FIO-STAT TO PGM-STAT-DBC.
           IF NOT FIO-STAT-OKS
               MOVE 'SGC'        TO MSG-COD-SIST
               MOVE 'CLI    NEX' TO MSG-COD-MENS
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS
               MOVE FIO-STAT-NEX TO FIO-STAT
           ELSE
               MOVE '00'  TO PGM-STAT-DBC
               MOVE DBC-GLS-NOMC IN DBC TO CPT-STRN
               PERFORM CPT-BLKS
               MOVE CPT-STRN TO DBC-GLS-NOMC IN RCC-FLD
                                DBC-GLS-NOMC IN DBC
               MOVE DBC-NUM-ICLI IN DBC TO DBC-NUM-ICLI IN RCC-FLD
               MOVE DBC-VRF-ICLI IN DBC TO DBC-VRF-ICLI IN RCC-FLD
               MOVE DBC-IND-ICLI IN DBC TO DBC-IND-ICLI IN RCC-FLD
               MOVE DBC-GLS-ICLI IN DBC TO DBC-GLS-ICLI IN RCC-FLD
               MOVE DBC-CAI-ICLI IN DBC TO RCC-CAI-ICLI IN RCC-FLD
               MOVE DBC-IIC-ICLI IN DBC TO RCC-IIC-ICLI IN RCC-FLD
               MOVE DBC-CIC-ICLI IN DBC TO SCR-CIC-ICLI.
       FIN-BUS-CLI-CON-RCC.
           EXIT.
      *>>>> EOF
*% END
*% IF FIN_SCR_TRL
      *<<<< FIN_SCR_TRL
           IF SCR-IND-ENG IN SCR-VEC-ENG(SCR-IPRO) = 'S'
              IF SCR-IND-ENG IN SCR-VEC-ENG(WSS-IDX-ICAD) = 'S'
                  MOVE 'F10RCCNINCAD' TO MSG-COD-MENS
                  PERFORM MSG-PF10
              ELSE
                  MOVE 'F10RCCNINOPD' TO MSG-COD-MENS
                  PERFORM MSG-PF10.
      *>>>>
*% END
*% IF INI_PRO_CONF
      *<<<< INI_PRO_CONF
           IF SCR-IND-ENG IN SCR-VEC-ENG(SCR-IPRO) = 'S'
              IF SCR-IND-ENG IN SCR-VEC-ENG(WSS-IDX-ICAD) = 'S'
                  MOVE 'F10RCCSINCAD' TO MSG-COD-MENS
                  PERFORM MSG-PF10
              ELSE
                  MOVE 'F10RCCSINOPD' TO MSG-COD-MENS
                  PERFORM MSG-PF10.
      *>>>>
*% END
*% IF FIN_SCR_TRL AND PGM_PQ
      *<<<< FIN_SCR_TRL AND PGM_PQ
           IF SCR-CMND NOT = 'MDC'
           IF NOT ( OPD-COD-STAT IN OPD = 'I' OR
                    OPD-COD-STAT IN OPD = 'V' )
      * RGD-INI PENTA
               MOVE 'S' TO SCR-IERR
      * RGD-FIN PENTA
               MOVE 'DAP' TO MSG-COD-SIST
               MOVE 'OPD    NIV' TO MSG-COD-MENS
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MEN1
               MOVE SCR-STAT-CON TO SCR-STAT.
      *>>>>
*% END
*% IF FIN_CMN_ING OR FIN_CMN_MOD
      *<<<< FIN_CMN_ING OR FIN_CMN_MOD
      
*% IF FIN_CMN_MOD
      *<<<< FIN_CMN_MOD
           IF SCR-CMND = 'MDC'
JFH1          PERFORM PUT-LND-DES
               GO TO FIN-CMN-MOD.
      *>>>>
*% END
           MOVE RCC-CIC-IOPD IN RCC TO OPD-CIC-IOPD IN OPD.
           MOVE FIO-GET-KEY-UPD TO FIO-CMND.
           PERFORM DAP-FIO-OPD.
           IF FIO-STAT-OKS
               MOVE 'I' TO OPD-COD-STAT IN OPD
               MOVE FIO-MOD TO FIO-CMND
               PERFORM DAP-FIO-OPD.
      *>>>>
*% END
*% IF FIN_CMN_ING OR FIN_CMN_MOD OR FIN_CMN_ELI
      *<<<< FIN_CMN_ING OR FIN_CMN_MOD OR FIN_CMN_ELI
      *     IF FIO-STAT-OKS
      *         PERFORM BFR-RFSH.
      *>>>>
*% END
*% IF FND_KEY_NO
      *<<<< FND_KEY
           MOVE 'N' TO WSS-IND-IOPD.
           IF RCC-IIC-ICLI IN RCC-FLD NOT > SPACES
               MOVE 'S' TO WSS-IND-IOPD
               MOVE 'RCC-KEY-IOPD' TO FIO-AKEY
               MOVE FIO-GET-NLS TO FIO-CMND
               PERFORM DAP-FIO-RCC
               MOVE FIO-STAT TO PGM-STAT-RCC
               IF FIO-STAT-OKS
                   IF NOT (
                       RCC-CAI-IOPD IN RCC-FLD = RCC-CAI-IOPD IN RCC AND
                       RCC-IIC-IOPD IN RCC-FLD = RCC-IIC-IOPD IN RCC )
                        MOVE '23' TO FIO-STAT
                        MOVE '23' TO PGM-STAT-RCC
                   ELSE
                       MOVE RCC-CIC-ICLI IN RCC TO DBC-CIC-ICLI IN DBC
                       MOVE FIO-GET-KEY TO FIO-CMND
                       PERFORM SGC-FIO-DBC
                       MOVE FIO-STAT TO PGM-STAT-DBC
                       IF PGM-STAT-DBC-OKS
                           MOVE DBC-GLS-NOMC IN DBC TO CPT-STRN
                           PERFORM CPT-BLKS
                           MOVE CPT-STRN TO DBC-GLS-NOMC IN DBC
                                            DBC-GLS-NOMC IN RCC-FLD.
           IF WSS-IND-IOPD = 'S' 
               GO TO END-FND-KEY.
               
      *>>>>
*% END
*% IF FIN_FND_KEY
      *<<<< FIN_FND_KEY
       END-FND-KEY.
      *>>>>
*% END
*% IF INI_SCR_TRL_PQ
      *<<<< INI_SCR_TRL_PQ
      *NOTA, ESTA ETIQUETA REEMPLAZA A LA GENERADA (PTC-INI)
      * PTC-INI-AUT
           IF SCR-STAT NOT = SCR-STPP
               MOVE FRM-SUAR-MAL TO FRM-SUAR.
      * PTC-FIN-AUT
      *>>>>
*% END
*% IF CMN_ING OR CMN_MOD
      *<<<< CMN_ING OR CMN_MOD
           PERFORM RET-HDR.
      *>>>>
*% END
*% IF EOF
      *<<<< EOF
      *Entidades de GNS
       COPY GNSBVCOD.
       COPY GNSBVTAB.
       COPY GNSBGCPT.
       COPY GNSBGSTR.
       COPY GNSBGHOY.
      *Entidades de SGC
       COPY SGCBFDBC.
       COPY SGCBFRCD.
       COPY SGCBGDOM.
       COPY SGCBGCLI.
      *Entidades de DAP
       COPY DAPBFOPD.
       COPY DAPBGMPT.

       MSG-PF10 SECTION.
       INI-MSG-PF10.
      *GET-MSG Busca mensaje en tabla
           MOVE 'DAP' TO MSG-COD-SIST.
           PERFORM GET-MSG.
           MOVE MSG-GLS-DESC TO FRM-MEN2.
           MOVE FRM-MEN2     TO RCC-GLS-MEN2.
       FIN-MSG-PF10.
           EXIT.

      * BFR-RFSH SECTION.
      * INI-BFR-RFSH.
      *     MOVE 'RCC-KEY-IOPD' TO FIO-AKEY.
      *     MOVE FIO-BFR-RFH    TO FIO-CMND.
      *     PERFORM DAP-FIO-RCC.
      * FIN-BFR-RFSH.
      *     EXIT.

       BUS-RCD SECTION.
       INI-BUS-RCD.
           IF RCC-NUM-DIRE IN RCC > ZEROES
               MOVE RCC-CAI-ICLI IN RCC TO RCD-CAI-ICLI IN RCD
               MOVE RCC-IIC-ICLI IN RCC TO RCD-IIC-ICLI IN RCD
               MOVE RCC-NUM-DIRE IN RCC TO RCD-NUM-DIRE IN RCD
               MOVE 'RCD-KEY-IRCD' TO FIO-AKEY
               MOVE FIO-GET-KEY TO FIO-CMND
               PERFORM SGC-FIO-RCD
               IF FIO-STAT-OKS
                    MOVE '00' TO PGM-STAT-RCD
               ELSE
                    MOVE  SPACES TO RCD-GLS-DIRE IN RCD
           ELSE
              PERFORM BUS-DOM.
           IF RCD-GLS-DIRE IN RCD > SPACES
               MOVE '00' TO PGM-STAT-RCD
               PERFORM BUS-LUGA
               MOVE RCD-NUM-DIRE IN RCD TO RCC-NUM-DIRE IN RCC-FLD
               PERFORM PUT-RCD-RCC.
       FIN-BUS-RCD.
           EXIT.

       BUS-LUGA SECTION.
       INI-BUS-LUGA.
           MOVE RCD-COD-LUGA IN RCD TO WSS-COD-LUGA IN WSS-VARI.
           IF WSS-IND-LUGA IN WSS-VARI = 'P'
               MOVE 'PAI' TO TAB-COD-TTAB
               MOVE WSS-COD-PAIS IN WSS-VARI TO TAB-COD-CTAB IN TAB
           ELSE
               MOVE 'COM' TO TAB-COD-TTAB
               MOVE WSS-COD-LUGA IN WSS-VARI TO TAB-COD-CTAB IN TAB.
           MOVE 'TAB' TO TAB-COD-SIST.
           PERFORM BUS-TAB.
           MOVE TAB-GLS-DESC TO FRM-GLS-LUGA IN RCC-FLD.
       FIN-BUS-LUGA.
           EXIT.

       HBL-KEY-RCC SECTION.
       INI-HBL-KEY-RCC.
           MOVE SCR-INST-GKY TO SCR-INST.
      *ISP   25-JUL-1990 DEBE SER REEMPLAZADO POR VARIABLE
      *     INHIBE MOVE FRM-CPSF TO FRM-CPIM-AEY
           MOVE '1' TO FRM-CPIM-AEY.
           MOVE FRM-CPIM-AEY TO RCC-CAI-IOPD-ATR IN RCC-FLD.
           MOVE FRM-CPIM-AEY TO RCC-IIC-IOPD-ATR IN RCC-FLD.
           PERFORM FST-KEY-RCC.
      *     MOVE +4           TO RCC-CAI-IOPD-LEN IN RCC-FLD.
      *     MOVE -1           TO DBC-NUM-ICLI-LEN IN RCC-FLD.
           PERFORM SCR-CLRA-RCC.
           MOVE SCR-CAI-IOPD TO RCC-CAI-IOPD IN RCC-FLD.
           MOVE SCR-IIC-IOPD TO RCC-IIC-IOPD IN RCC-FLD.

      * ISP SCR-DMSG LIMPIA TODO Y HACE STP-EXIT
           MOVE PGM-NO-LIMPIAR-NADA TO PGM-ICLR.

      *ISP SIEMPRE VA A BUSCAR DATOS DE OPD Y LOS CARGA
           MOVE SCR-CAI-IOPD IN SCR-VARI TO OPD-CAI-IOPD IN OPD.
           MOVE SCR-IIC-IOPD IN SCR-VARI TO OPD-IIC-IOPD IN OPD.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM DAP-FIO-OPD.
           MOVE FIO-STAT TO PGM-STAT-OPD.
           IF NOT FIO-STAT-OKS
               MOVE 'COL' TO MSG-COD-SIST
               MOVE 'OPD    NEX' TO MSG-COD-MENS
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS
               MOVE SCR-STAT-CON TO SCR-STAT
               PERFORM CLR-OPD-RCC
           ELSE
               PERFORM PUT-OPD-RCC.
           PERFORM EDT-KEY-RCC.
           PERFORM EDT-FLD-RCC.

           IF SCR-IND-ENG IN SCR-VEC-ENG(WSS-IDX-ICAD) = 'S'
               MOVE 'F10RCCNINCAD' TO MSG-COD-MENS
           ELSE
               MOVE 'F10RCCNINOPD' TO MSG-COD-MENS.
           PERFORM MSG-PF10.
           IF SCR-IND-FST IN SCR-VEC-FST(SCR-IPRO) = 'S'
               MOVE SPACES TO SCR-IND-FST IN SCR-VEC-FST(SCR-IPRO)
               PERFORM SCR-INIT
               PERFORM SCR-EXIT
           ELSE
               PERFORM SCR-PUTA.

       FIN-HBL-KEY-RCC.
           EXIT.

      *  CODIGO ADICIONAL PARA ENGANCHE PROGRAMAS
       ING-FPEN-CIC SECTION.
       INI-ING-FPEN-CIC.
           PERFORM ING-SETE.
           MOVE SCR-MENS-EXT TO RCC-GLS-MENS.
           PERFORM HBL-IKY.
       FIN-ING-FPEN-CIC.
           EXIT.

       ING-SETE SECTION.
       INI-ING-SETE.
           PERFORM CRG-TBL-ENG.
           MOVE WSS-NTRN(SCR-IPRO)     TO SCR-NTRN.
           MOVE WSS-PROG(SCR-IPRO)     TO SCR-PROG.
           MOVE WSS-NMAP(SCR-IPRO)     TO SCR-NMAP.
           MOVE WSS-NLIB(SCR-IPRO)     TO SCR-NLIB.
      *     MOVE WSS-NEMO(WSS-IDX-IRCC) TO SCR-NEMO.

           MOVE WSS-NTRV(SCR-IPRO)     TO SCR-NTRV.
           MOVE WSS-PROV(SCR-IPRO)     TO SCR-PROV.
       FIN-ING-SETE.
           EXIT.

       EGR-FPEN-CIC SECTION.
       INI-EGR-FPEN-CIC.
*% IF PGM_PU
      * PTC-INI-ADIC (RRM) 3-DEC-2002
           IF SCR-OFRM-SRV
               GO TO FIN-EGR-FPEN-CIC.
      * PTC-FIN-ADIC (RRM) 3-DEC-2002
*% END
           PERFORM CRG-TBL-ENG.
           ADD 1 TO SCR-IPRO.
           IF SCR-IPRO > WSS-TOT-IIDX
                  PERFORM EGR-FTER-CIC
                  GO TO FIN-EGR-FPEN-CIC.
           IF SCR-IND-ENG IN SCR-VEC-ENG(SCR-IPRO) = SPACES
               GO TO INI-EGR-FPEN-CIC.
           MOVE WSS-INST-FPEN-CIC TO SCR-INST-EXT.
           MOVE WSS-PROG(SCR-IPRO) TO SYS-PROG.
           MOVE SCR-VARI TO SYS-CMMA.
           MOVE SCR-TCMA TO SYS-TCMA.
           MOVE SYS-XCTL TO SYS-CMND.
      * PTC-INI-AUT
           IF NOT SCR-OFRM-SRV
      * PTC-FIN-AUT
           PERFORM GNS-PRO-SYS.
       FIN-EGR-FPEN-CIC.
           EXIT.

       EGR-FTER-CIC SECTION.
       INI-EGR-FTER-CIC.
*% IF PGM_PU
      * PTC-INI-ADIC (RRM)  3-DEC-2002
           IF SCR-OFRM-SRV
               GO TO FIN-EGR-FTER-CIC.
      * PTC-FIN-ADIC (RRM)  3-DEC-2002
*% END
           PERFORM CRG-TBL-ENG.
           MOVE WSS-IDX-IOPD TO SCR-IPRO.
           MOVE WSS-INST-FTER-CIC TO SCR-INST-EXT.
           MOVE WSS-PROG(SCR-IPRO) TO SYS-PROG.
           MOVE SCR-VARI TO SYS-CMMA.
           MOVE SCR-TCMA TO SYS-TCMA.
           MOVE SYS-XCTL TO SYS-CMND.
      * PTC-INI-AUT
           IF NOT SCR-OFRM-SRV
      * PTC-FIN-AUT
           PERFORM GNS-PRO-SYS.
       FIN-EGR-FTER-CIC.
           EXIT.

       SCR-INIT SECTION.
       INI-SCR-INIT.
           MOVE 3  TO FRM-PLIN.
           MOVE 19 TO FRM-NLIN.
           MOVE FRM-CLR-FRM TO FRM-CMND.
           PERFORM GNS-PRO-FRM.
           MOVE FRM-SINI-DBNF TO FRM-SINI.
           MOVE SCR-NMAP TO FRM-NAME.
           MOVE SCR-NLIB TO FRM-NLIB.
           MOVE RCC-FLD TO FRM-DFLD.
           MOVE FRM-INI TO FRM-CMND.
           PERFORM GNS-PRO-FRM.
       FIN-SCR-INIT.
           EXIT.
      *>>>>
*% END
*% IF EOF_PU
      *<<<< EOF_PU
JFH1   COPY DAPBFLND.
      
       RET-HDR SECTION.
       INI-RET-HDR.
           PERFORM GET-FHOY.
      *    Fecha Transaccion
           MOVE HOY-FHOY TO RCC-FEC-FTRN IN RCC.
      *    Hora Transaccion
           MOVE HOY-HHOY TO RCC-HRA-HRTR IN RCC.
      *    Codigo Origen transaccion
           MOVE SCR-OTRN TO RCC-COD-OTRN IN RCC.
      *    Autor Transaccion
           MOVE SCR-USER TO RCC-COD-ATRN IN RCC.
           IF SCR-CCPP = 'ING'
               MOVE 'I' TO RCC-MSC-TACC IN RCC
           ELSE
           IF SCR-CCPP = 'MOD'
               MOVE 'M' TO RCC-MSC-TACC IN RCC.
       FIN-RET-HDR.
           EXIT.

       PUT-SCR SECTION.
       INI-PUT-SCR.
           IF PGM-STAT-RCC-OKS
              PERFORM BUS-RCD.
       FIN-PUT-SCR.
           EXIT.

       PUT-OPD-RCC SECTION.
       INI-PUT-OPD-RCC.
           IF PGM-STAT-OPD-NUL
               GO TO FIN-PUT-OPD-RCC.
           IF NOT PGM-STAT-OPD-OKS
               PERFORM CLR-OPD-RCC
               GO TO FIN-PUT-OPD-RCC.
           MOVE OPD-COD-VCAM IN OPD TO OPD-COD-VCAM IN RCC-FLD.
           MOVE OPD-COD-TOPD IN OPD TO OPD-COD-TOPD IN RCC-FLD.
           MOVE OPD-COD-AOPD IN OPD TO OPD-COD-AOPD IN RCC-FLD.
      *BUS-TAB busca glosa de codigo en tabla
           IF OPD-COD-VCAM IN RCC-FLD > SPACES
               MOVE 'TAB' TO TAB-COD-SIST
               MOVE 'VLR' TO TAB-COD-TTAB IN TAB
               MOVE OPD-COD-VCAM IN RCC-FLD TO TAB-COD-CTAB IN TAB
               PERFORM BUS-TAB
               MOVE TAB-GLS-DESC IN TAB TO
                    FRM-GLS-VCAM IN RCC-FLD.
      *BUS-TAB busca glosa de codigo en tabla
           IF OPD-COD-TOPD IN RCC-FLD > SPACES
               MOVE 'TAB' TO TAB-COD-SIST
               MOVE 'TIO' TO TAB-COD-TTAB IN TAB
               MOVE OPD-COD-TOPD IN RCC-FLD TO TAB-COD-CTAB IN TAB
               PERFORM BUS-TAB
               MOVE TAB-GLS-DESC IN TAB TO
                    FRM-GLS-TOPD IN RCC-FLD.
      *<<<< FIN_PUT_OPD_RCC
      *VAL-COD Valida codigo de tabla
           MOVE 'TAB' TO TAB-COD-SIST.
           MOVE 'AUX' TO TAB-COD-TTAB IN TAB.
           MOVE OPD-COD-COPD IN OPD TO TAB-COD-CTAB IN TAB.
           PERFORM BUS-TAB.
           MOVE TAB-GLS-DESC IN TAB TO FRM-GLS-AOPD IN RCC-FLD.
      *>>>>
       FIN-PUT-OPD-RCC.
           EXIT.
       
       PUT-RCD-RCC SECTION.
       INI-PUT-RCD-RCC.
           IF PGM-STAT-RCD-NUL
               GO TO FIN-PUT-RCD-RCC.
           IF NOT PGM-STAT-RCD-OKS
               PERFORM CLR-RCD-RCC
               GO TO FIN-PUT-RCD-RCC.
           MOVE RCD-COD-LUGA IN RCD TO RCD-COD-LUGA IN RCC-FLD.
           MOVE RCD-GLS-DIRE IN RCD TO RCD-GLS-DIRE IN RCC-FLD.
           MOVE RCD-GLS-FONO IN RCD TO RCD-GLS-FONO IN RCC-FLD.
       FIN-PUT-RCD-RCC.
           EXIT.

      * ISP-INI 31-07-1998 INICIALIZA CAMPOS DE REGISTROS
       COPY DAPBCRCC.
      * ISP-FIN 31-07-1998 INICIALIZA CAMPOS DE REGISTROS

JFH1  *INICIO: Codigo para Log RCC/MDC.
       PUT-LND-ANT SECTION.
       INI-MOD-ANT-REG-LND.
           MOVE SPACES TO LND.
           MOVE 'MDC'  TO LND-COD-EVEN IN LND.
           MOVE 'M'    TO LND-COD-TACC IN LND
                          LND-COD-STAT IN LND.
           MOVE 'ANT'  TO LND-COD-INST IN LND.
           MOVE 1 TO LND-NUM-CLND IN LND
                     LND-NUM-COPD IN LND
                     LND-NUM-CCLI IN LND
                     LND-NUM-CAUT IN LND.
           PERFORM PRO-GRABA-REG-LND.
       FIN-MOD-ANT-REG-LND.
            EXIT.

       PUT-LND-DES SECTION.
       INI-MOD-DES-REG-LND.
           MOVE SPACES TO LND.
           MOVE 'MDC'  TO LND-COD-EVEN IN LND.
           MOVE 'M'    TO LND-COD-TACC IN LND
                          LND-COD-STAT IN LND.
           MOVE 'DES'  TO LND-COD-INST IN LND.
           MOVE 2 TO LND-NUM-CLND IN LND
                     LND-NUM-COPD IN LND
                     LND-NUM-CCLI IN LND
                     LND-NUM-CAUT IN LND.
           PERFORM PRO-GRABA-REG-LND.
       FIN-MOD-DES-REG-LND.
           EXIT.

       PRO-ING-REG-LND SECTION.
       INI-ING-REG-LND.
           MOVE SPACES TO LND.
           MOVE 'ING'  TO LND-COD-EVEN IN LND.
           MOVE 'I'    TO LND-COD-TACC IN LND
                          LND-COD-STAT IN LND.
           MOVE 'N/A'  TO LND-COD-INST IN LND.
           MOVE 1 TO LND-NUM-CLND IN LND
                     LND-NUM-COPD IN LND
                     LND-NUM-CCLI IN LND
                     LND-NUM-CAUT IN LND.
           PERFORM PRO-GRABA-REG-LND.
       FIN-ING-REG-LND.
           EXIT.

       PRO-GRABA-REG-LND SECTION.
       INI-GRABA-REG-LND.
           MOVE '1.0'    TO LND-COD-VERS IN LND.
           MOVE 'OPD'    TO LND-COD-ENTF IN LND
                            LND-COD-ENTO IN LND
                            LND-COD-ENTC IN LND
                            LND-COD-ENTA IN LND
                            LND-COD-ENTI IN LND.
JFH1       MOVE WSS-FHOY TO LND-FEC-FTRN IN LND
                            LND-FEC-FLND IN LND
                            LND-FEC-FOPD IN LND
                            LND-FEC-FCLI IN LND
                            LND-FEC-FAUT IN LND.
JFH1       MOVE WSS-HHOY TO LND-HRA-HRTR IN LND
                            LND-HRA-HHND IN LND
                            LND-HRA-HOPD IN LND
                            LND-HRA-HCLI IN LND
                            LND-HRA-HAUT IN LND.
           MOVE RCC-CIC-IOPD IN RCC TO LND-CIC-IOPD IN LND.
           MOVE EIBTRMID            TO LND-COD-OTRN IN LND.
           MOVE SCR-USER            TO LND-COD-ATRN IN LND
                                       LND-COD-AUTO IN LND.
           MOVE EIBTRNID            TO LND-COD-TCIC IN LND.
           MOVE 'MDC'               TO LND-COD-CMND IN LND.
           PERFORM PUT-LND-MDC.
           MOVE RCC-CIC-ICLI IN RCC TO LND-CIC-ICLI IN LND.
           MOVE FIO-PUT TO FIO-CMND.
           PERFORM DAP-FIO-LND.
       FIN-GRABA-REG-LND.
           EXIT.
       PUT-LND-MDC SECTION.
       INI-PUT-LND-MDC.
      *    MOVE RCC-NUM-DIRE IN RCC-FLD TO LND-COD-LN01 IN LND.
      * ISP 10-11-2009
           MOVE RCC-NUM-DIRE IN RCC     TO LND-COD-LN01 IN LND.
       FIN-PUT-LND-MDC.
           EXIT.
      *>>>>
*% END
