*% PFSQUECOPY = "DAPWXCVD"
*% LARGO_MI_COMMAREA = 0
*% PFSQUEMAXPAN= "3"
*% PFSQUEENT = "CVD"
*% PFSQUEPRV = "PF5"
*% PFSQUENXT = "PF6"
*% PFSQUESIS = "DAP"
*% PFSVARIPQ = "GAB"
*% INCLUDE 'GNSSRC:PFSCONQUE.SRC'
*% PGM_PTC = TRUE
*% IF WSS
      *<<<< WSS
       01  WSS-VARI.
           03 WSS-IND-EMLT     VALUE SPACES        PIC X(01).
           03 WSS-CIC-ICLI                         PIC X(12).

       COPY SGCBRDBC.
       COPY DAPBRVEN.
       COPY DAPBRRCC.
       COPY DAPBRCAD.
       COPY DAPBRLIQ.
       COPY TABBRCAM.
       COPY GNSWGCPT.
       COPY GNSWGSTR.
       COPY GNSWGPES.
       COPY GNSWGINT.
       COPY DAPWGVEN.
       01  WSS-PGM-STAT.
              05 PGM-STAT-RCC.
                 88 PGM-STAT-RCC-NUL    VALUE '  '.
                 07 PGM-STT1-RCC        VALUE '2' PIC X(01).
                    88 PGM-STAT-RCC-OKS VALUE '0'.
                 07 PGM-STT2-RCC        VALUE '3' PIC X(01).
      
              05 PGM-STAT-DBC.
                 88 PGM-STAT-DBC-NUL    VALUE '  '.
                 07 PGM-STT1-DBC        VALUE '2' PIC X(01).
                    88 PGM-STAT-DBC-OKS VALUE '0'.
                 07 PGM-STT2-DBC        VALUE '3' PIC X(01).
       77  WSS-VAL-EDIT                 PIC   Z.ZZZ.ZZZ.ZZ9,99999999.
       77  WSS-VAL-EDIT1                 PIC   ZZZ.ZZZ.ZZZ.ZZ9,99999.
       77  WSS-VAL-EDIT2                 PIC   ZZZ.ZZZ.ZZZ.ZZ9,99999.
       77  WSS-SGV-IACU   VALUE ZEROES  COMP-3 PIC S9(11)V9(04).
       77  WSS-SGV-RENT   VALUE ZEROES  COMP-3 PIC S9(11)V9(04).
       77  WSS-SWI-RENT-1 VALUE 'S'     PIC X(01).
       
       77  WSS-SGV-TASA                 COMP-3 PIC S9(03)V9(12).
       77  WSS-SGV-TASA-4               COMP-3 PIC S9(03)V9(12).
       77  WSS-SGV-TAJUS                COMP-3 PIC S9(03)V9(12).
       77  WSS-SGV-TAJUS-DSP            COMP-3 PIC S9(03)V9(04).
       77  WSS-SGV-TEFEC                COMP-3 PIC S9(03)V9(12).
       77  WSS-SGV-TEFEC-DSP            COMP-3 PIC S9(03)V9(04).
       77  WSS-TOT-CUO                         PIC 9(05).
       77  WSS-SGV-INTE   VALUE ZEROES  COMP-3 PIC S9(11)V9(04).
       77  WSS-TOT-CUO-M1                      PIC 9(05).
      *>>>> WSS
*% END
*% IF WSS_DTC
      *<<<< WSS_DTC
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-DBC-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-VEN-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-RCC-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-CAD-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-LIQ-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-CAM-REQA==.
      *>>>> WSS_DTC
*% END
*% IF INI_FIO
      *<<<< INI_FIO

      *>>>>
*% END
*% IF FIN_FND_KEY
      *<<<< IF FIN_FND_KEY
      *     IF FIO-STAT-OKS
      *         MOVE OPD-SGV-TCAS IN OPD TO FRM-SGV-TCAS IN CVD-FLD.
      *>>>>
*% END
*% IF EOF
      *<<<< EOF
      * INI CODIGO PROGRAMADOR PARA PFS

       CVD-PUT-SCR SECTION.
       INI-CVD-PUT-SCR.
      *    MOVE 'CVDPUT1' TO QUE-COLA.
      *    MOVE +100 TO QUE-LITM.
      *    MOVE SPACES TO QUE-ITEM.
      *    MOVE QUE-PUT TO QUE-CMND.
      *    PERFORM GNS-PRO-QUE.
      
           IF PGM-STAT-OPD-OKS
               MOVE 'CVDPUT2' TO QUE-COLA
               MOVE +100 TO QUE-LITM
               MOVE SPACES TO QUE-ITEM
               MOVE QUE-PUT TO QUE-CMND
               PERFORM GNS-PRO-QUE
      
               PERFORM GET-RCC.
       FIN-CVD-PUT-SCR.
           EXIT.

       CVD-ANL-KEY SECTION.
       INI-CVD-ANL-KEY.
           MOVE CVD-NOM-TSCVD  TO QUE-COLA.
           MOVE QUE-DEL TO QUE-CMND.
           PERFORM GNS-PRO-QUE.
           PERFORM KEY-ALL-CVD.

           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM DAP-FIO-OPD.
           IF FIO-STAT-OKS
       XX        MOVE 100 TO OPD-SGV-MPRE IN OPD
               MOVE OPD-STP-ITRN IN OPD TO SCR-UMOD.
           MOVE FIO-STAT TO PGM-STAT-OPD.
           IF NOT FIO-STAT-OKS
               GO TO FIN-CVD-ANL-KEY.
           IF FIO-STAT-OKS
              PERFORM EXP-VEN
              MOVE PGM-STAT-OPD TO FIO-STAT
              IF MSG-COD-MENS > SPACES
                  MOVE MSG-GLS-DESC TO FRM-MENS.
       FIN-CVD-ANL-KEY.
           EXIT.

       EXP-VEN SECTION.
       INI-EXP-VEN.
           MOVE SPACES TO MSG-COD-MENS.
           PERFORM GET-COD-CIC-OPD.
           IF MSG-COD-MENS > SPACES
               GO TO FIN-EXP-VEN.
      
           MOVE FIO-GET-FST TO FIO-CMND.
       CIC-EXP-VEN.
           MOVE SPACES TO CVD-ITEM.
           MOVE ZEROES TO
                   CVD-FRM-NUM-IVCT
                   CVD-FRM-FEC-FVEN
                   CVD-FRM-VAL-INTC
                   CVD-FRM-VAL-SCAP
                   CVD-FRM-VAL-TOTA
                   CVD-FRM-SGV-KOPD
                   CVD-FRM-SGV-IACU
                   CVD-FRM-SGV-TCAX
                   CVD-FRM-SGV-TREX
                   CVD-FRM-SGV-CAST
                   CVD-FRM-SGV-LIQU
                   CVD-FRM-SGV-RENT.

           PERFORM GEN-PRX-RTR.
           IF MSG-COD-MENS > SPACES
               GO TO FIN-EXP-VEN.
           IF DAP-VEN-STAT-OKS
              PERFORM CAL-CAST
              PERFORM CAL-RENT
              PERFORM PUT-TSN-ALF
              MOVE FIO-GET-NXT TO FIO-CMND
              GO TO CIC-EXP-VEN.
      
       FIN-EXP-VEN.
           EXIT.

       CAL-RENT SECTION.
       INI-CAL-RENT.
           IF WSS-SWI-RENT-1 = 'S'
               MOVE 'N' TO WSS-SWI-RENT-1
           ELSE
           COMPUTE WSS-SGV-IACU  = 
                   WSS-SGV-IACU + 
                    ( VEN-VAL-FINA IN VEN -
                      VEN-VAL-CAPI IN VEN ).

           COMPUTE WSS-SGV-RENT  =
                  WSS-SGV-IACU -
                  CVD-FRM-SGV-CAST IN CVD-ITEM.
       FIN-CAL-RENT.
           EXIT.

      * FIN CODIGO PROGRAMADOR PARA PFS

       CVD-MOV-TS-FRM-ELM SECTION.
       INI-CVD-MOV-TS-FRM-ELM.
           MOVE CVD-FRM-NUM-IVCT TO
                    FRM-NUM-IVCT IN CVD-FLD(WSS-IND-PANT).
           MOVE CVD-FRM-IND-LIQU TO
                    FRM-IND-LIQU IN CVD-FLD(WSS-IND-PANT).
           MOVE CVD-FRM-FEC-FVEN TO
                    FRM-FEC-FVEN IN CVD-FLD(WSS-IND-PANT).
           MOVE CVD-FRM-VAL-INTC TO
                    FRM-VAL-INTC IN CVD-FLD(WSS-IND-PANT).
           MOVE CVD-FRM-VAL-SCAP TO
                    FRM-VAL-SCAP IN CVD-FLD(WSS-IND-PANT).
           MOVE CVD-FRM-VAL-TOTA TO
                    FRM-VAL-TOTA IN CVD-FLD(WSS-IND-PANT).
           MOVE CVD-FRM-SGV-KOPD TO
                    FRM-SGV-KOPD IN CVD-FLD(WSS-IND-PANT).
           MOVE CVD-FRM-SGV-IACU TO
                    FRM-SGV-IACU IN CVD-FLD(WSS-IND-PANT).
           MOVE CVD-FRM-SGV-TCAX TO
                    FRM-SGV-TCAX IN CVD-FLD(WSS-IND-PANT).
           MOVE CVD-FRM-SGV-TREX TO
                    FRM-SGV-TREX IN CVD-FLD(WSS-IND-PANT).
           MOVE CVD-FRM-SGV-CAST TO
                    FRM-SGV-CAST IN CVD-FLD(WSS-IND-PANT).
           MOVE CVD-FRM-SGV-LIQU TO
                    FRM-SGV-LIQU IN CVD-FLD(WSS-IND-PANT).
           MOVE CVD-FRM-SGV-RENT TO
                    FRM-SGV-RENT IN CVD-FLD(WSS-IND-PANT).
       FIN-CVD-MOV-TS-FRM-ELM.
           EXIT.
      

       PUT-TSN-ALF SECTION.
       INI-PUT-TSN-ALF.
      
               ADD 1 TO SCR-TOT-OCCU.
      *DBG        MOVE 6 TO SCR-TOT-OCCU
      
      *DBG     MOVE 1 TO CVD-FRM-NUM-IVCT IN CVD-ITEM.
      *DBG     MOVE 'A' TO CVD-FRM-IND-LIQU IN CVD-ITEM.
      *DBG     MOVE '11112004' TO CVD-FRM-FEC-FVEN IN CVD-ITEM.
      *DBG     MOVE ZEROES TO CVD-FRM-VAL-INTC IN CVD-ITEM.
      *DBG     MOVE ZEROES TO CVD-FRM-VAL-SCAP IN CVD-ITEM.
      *DBG     MOVE ZEROES TO CVD-FRM-VAL-TOTA IN CVD-ITEM.
      *DBG     MOVE ZEROES TO CVD-FRM-SGV-CAST IN CVD-ITEM.
      *DBG     MOVE ZEROES TO CVD-FRM-SGV-LIQU IN CVD-ITEM.
      
      *DBG     MOVE CVD-NOM-TSCVD  TO QUE-COLA.
      *DBG     MOVE CVD-LEN-TSCVD  TO QUE-LITM.
      *DBG     MOVE CVD-ITEM       TO QUE-ITEM.
      *DBG     MOVE QUE-PUT        TO QUE-CMND.
      *DBG     PERFORM GNS-PRO-QUE.
      
      *DBG     MOVE 2 TO CVD-FRM-NUM-IVCT IN CVD-ITEM.
      *DBG     MOVE 'B' TO CVD-FRM-IND-LIQU IN CVD-ITEM.
      *DBG     MOVE '11112004' TO CVD-FRM-FEC-FVEN IN CVD-ITEM.
      *DBG     MOVE ZEROES TO CVD-FRM-VAL-INTC IN CVD-ITEM.
      *DBG     MOVE ZEROES TO CVD-FRM-VAL-SCAP IN CVD-ITEM.
      *DBG     MOVE ZEROES TO CVD-FRM-VAL-TOTA IN CVD-ITEM.
      *DBG     MOVE ZEROES TO CVD-FRM-SGV-CAST IN CVD-ITEM.
      *DBG     MOVE ZEROES TO CVD-FRM-SGV-LIQU IN CVD-ITEM.
      
      *DBG     MOVE CVD-NOM-TSCVD  TO QUE-COLA.
      *DBG     MOVE CVD-LEN-TSCVD  TO QUE-LITM.
      *DBG     MOVE CVD-ITEM       TO QUE-ITEM.
      *DBG     MOVE QUE-PUT        TO QUE-CMND.
      *DBG     PERFORM GNS-PRO-QUE.
      
      *DBG     MOVE 3 TO CVD-FRM-NUM-IVCT IN CVD-ITEM.
      *DBG     MOVE 'C' TO CVD-FRM-IND-LIQU IN CVD-ITEM.
      *DBG     MOVE '11112004' TO CVD-FRM-FEC-FVEN IN CVD-ITEM.
      *DBG     MOVE ZEROES TO CVD-FRM-VAL-INTC IN CVD-ITEM.
      *DBG     MOVE ZEROES TO CVD-FRM-VAL-SCAP IN CVD-ITEM.
      *DBG     MOVE ZEROES TO CVD-FRM-VAL-TOTA IN CVD-ITEM.
      *DBG     MOVE ZEROES TO CVD-FRM-SGV-CAST IN CVD-ITEM.
      *DBG     MOVE ZEROES TO CVD-FRM-SGV-LIQU IN CVD-ITEM.
      
      *DBG     MOVE CVD-NOM-TSCVD  TO QUE-COLA.
      *DBG     MOVE CVD-LEN-TSCVD  TO QUE-LITM.
      *DBG     MOVE CVD-ITEM       TO QUE-ITEM.
      *DBG     MOVE QUE-PUT        TO QUE-CMND.
      *DBG     PERFORM GNS-PRO-QUE.
      
      *DBG     MOVE 4 TO CVD-FRM-NUM-IVCT IN CVD-ITEM.
      *DBG     MOVE 'D' TO CVD-FRM-IND-LIQU IN CVD-ITEM.
      *DBG     MOVE '11112004' TO CVD-FRM-FEC-FVEN IN CVD-ITEM.
      *DBG     MOVE ZEROES TO CVD-FRM-VAL-INTC IN CVD-ITEM.
      *DBG     MOVE ZEROES TO CVD-FRM-VAL-SCAP IN CVD-ITEM.
      *DBG     MOVE ZEROES TO CVD-FRM-VAL-TOTA IN CVD-ITEM.
      *DBG     MOVE ZEROES TO CVD-FRM-SGV-CAST IN CVD-ITEM.
      *DBG     MOVE ZEROES TO CVD-FRM-SGV-LIQU IN CVD-ITEM.
      
      *DBG     MOVE CVD-NOM-TSCVD  TO QUE-COLA.
      *DBG     MOVE CVD-LEN-TSCVD  TO QUE-LITM.
      *DBG     MOVE CVD-ITEM       TO QUE-ITEM.
      *DBG     MOVE QUE-PUT        TO QUE-CMND.
      *DBG     PERFORM GNS-PRO-QUE.
      
      *DBG     MOVE 5 TO CVD-FRM-NUM-IVCT IN CVD-ITEM.
      *DBG     MOVE 'E' TO CVD-FRM-IND-LIQU IN CVD-ITEM.
      *DBG     MOVE '11112004' TO CVD-FRM-FEC-FVEN IN CVD-ITEM.
      *DBG     MOVE ZEROES TO CVD-FRM-VAL-INTC IN CVD-ITEM.
      *DBG     MOVE ZEROES TO CVD-FRM-VAL-SCAP IN CVD-ITEM.
      *DBG     MOVE ZEROES TO CVD-FRM-VAL-TOTA IN CVD-ITEM.
      *DBG     MOVE ZEROES TO CVD-FRM-SGV-CAST IN CVD-ITEM.
      *DBG     MOVE ZEROES TO CVD-FRM-SGV-LIQU IN CVD-ITEM.
      
      *DBG     MOVE CVD-NOM-TSCVD  TO QUE-COLA.
      *DBG     MOVE CVD-LEN-TSCVD  TO QUE-LITM.
      *DBG     MOVE CVD-ITEM       TO QUE-ITEM.
      *DBG     MOVE QUE-PUT        TO QUE-CMND.
      *DBG     PERFORM GNS-PRO-QUE.
      
      *DBG     MOVE 6 TO CVD-FRM-NUM-IVCT IN CVD-ITEM.
      *DBG     MOVE 'F' TO CVD-FRM-IND-LIQU IN CVD-ITEM.
      *DBG     MOVE '11112004' TO CVD-FRM-FEC-FVEN IN CVD-ITEM.
      *DBG     MOVE ZEROES TO CVD-FRM-VAL-INTC IN CVD-ITEM.
      *DBG     MOVE ZEROES TO CVD-FRM-VAL-SCAP IN CVD-ITEM.
      *DBG     MOVE ZEROES TO CVD-FRM-VAL-TOTA IN CVD-ITEM.
      *DBG     MOVE ZEROES TO CVD-FRM-SGV-CAST IN CVD-ITEM.
      *DBG     MOVE ZEROES TO CVD-FRM-SGV-LIQU IN CVD-ITEM.
      
      
      *    MOVE 'VENPUT1' TO QUE-COLA.
      *    MOVE +100 TO QUE-LITM.
      *    MOVE SPACES TO QUE-ITEM.
      *    MOVE QUE-PUT TO QUE-CMND.
      *    PERFORM GNS-PRO-QUE.
      
           MOVE OPD-NUM-IVEN IN OPD TO CVD-FRM-NUM-IVCT IN CVD-ITEM.
           MOVE SPACES              TO CVD-FRM-IND-LIQU IN CVD-ITEM.
           MOVE VEN-NUM-DVEN IN VEN TO CVD-FRM-NUM-DVEN IN CVD-ITEM.
           MOVE VEN-NUM-MVEN IN VEN TO CVD-FRM-NUM-MVEN IN CVD-ITEM.
           MOVE VEN-NUM-SVEN IN VEN TO CVD-FRM-NUM-SVEN IN CVD-ITEM.
           MOVE VEN-NUM-AVEN IN VEN TO CVD-FRM-NUM-AVEN IN CVD-ITEM.
      
      
      *    MOVE 'VENPUT2' TO QUE-COLA.
      *    MOVE +100 TO QUE-LITM.
      *    MOVE SPACES TO QUE-ITEM.
      *    MOVE QUE-PUT TO QUE-CMND.
      *    PERFORM GNS-PRO-QUE.
      
           IF VEN-VAL-CAPI IN VEN NOT NUMERIC
               MOVE ZEROES TO VEN-VAL-CAPI IN VEN.
           MOVE VEN-VAL-CAPI IN VEN TO CVD-FRM-VAL-SCAP IN CVD-ITEM.
      
      *    MOVE 'VENPUT3' TO QUE-COLA.
      *    MOVE +100 TO QUE-LITM.
      *    MOVE SPACES TO QUE-ITEM.
      *    MOVE QUE-PUT TO QUE-CMND.
      *    PERFORM GNS-PRO-QUE.
      
           IF VEN-VAL-FINA IN VEN NOT NUMERIC
               MOVE ZEROES TO VEN-VAL-FINA IN VEN.
           MOVE VEN-VAL-FINA IN VEN TO CVD-FRM-VAL-TOTA IN CVD-ITEM.
      
      *    MOVE 'VENPUT4' TO QUE-COLA.
      *    MOVE +100 TO QUE-LITM.
      *    MOVE SPACES TO QUE-ITEM.
      *    MOVE QUE-PUT TO QUE-CMND.
      *    PERFORM GNS-PRO-QUE.
      
           COMPUTE CVD-FRM-VAL-INTC IN CVD-ITEM =
              VEN-VAL-FINA IN VEN -
              VEN-VAL-CAPI IN VEN.
      
           MOVE OPD-VAL-SCAP IN OPD TO CVD-FRM-SGV-KOPD.
           
           MOVE WSS-SGV-TAJUS-DSP TO CVD-FRM-SGV-TCAX.
           
           MOVE WSS-SGV-TEFEC-DSP TO CVD-FRM-SGV-TREX.
           
           MOVE WSS-SGV-IACU TO CVD-FRM-SGV-IACU.

           MOVE WSS-SGV-RENT TO CVD-FRM-SGV-RENT.

      *    MOVE 'VENPUT5' TO QUE-COLA.
      *    MOVE +100 TO QUE-LITM.
      *    MOVE SPACES TO QUE-ITEM.
      *    MOVE QUE-PUT TO QUE-CMND.
      *    PERFORM GNS-PRO-QUE.
      
           IF SCR-OFRM-SRV
      
               MOVE CVD-FRM-VAL-INTC     TO     FRM-VAL-INTC-EDT
               MOVE     FRM-VAL-INTC-EDT TO CVD-FRM-VAL-INTC-ALF
      
               MOVE CVD-FRM-VAL-SCAP     TO     FRM-VAL-SCAP-EDT
               MOVE     FRM-VAL-SCAP-EDT TO CVD-FRM-VAL-SCAP-ALF
      
               MOVE CVD-FRM-VAL-TOTA     TO     FRM-VAL-TOTA-EDT
               MOVE     FRM-VAL-TOTA-EDT TO CVD-FRM-VAL-TOTA-ALF
      
               MOVE CVD-FRM-SGV-KOPD     TO     FRM-SGV-KOPD-EDT
               MOVE     FRM-SGV-KOPD-EDT TO CVD-FRM-SGV-KOPD-ALF
      
               MOVE CVD-FRM-SGV-IACU     TO     FRM-SGV-IACU-EDT
               MOVE     FRM-SGV-IACU-EDT TO CVD-FRM-SGV-IACU-ALF
      
               MOVE CVD-FRM-SGV-TCAX     TO     FRM-SGV-TCAX-EDT
               MOVE     FRM-SGV-TCAX-EDT TO CVD-FRM-SGV-TCAX-ALF
      
               MOVE CVD-FRM-SGV-TREX     TO     FRM-SGV-TREX-EDT
               MOVE     FRM-SGV-TREX-EDT TO CVD-FRM-SGV-TREX-ALF
      
               MOVE CVD-FRM-SGV-CAST     TO     FRM-SGV-CAST-EDT
               MOVE     FRM-SGV-CAST-EDT TO CVD-FRM-SGV-CAST-ALF
      
               MOVE CVD-FRM-SGV-LIQU     TO     FRM-SGV-LIQU-EDT
               MOVE     FRM-SGV-LIQU-EDT TO CVD-FRM-SGV-LIQU-ALF

               MOVE CVD-FRM-SGV-RENT     TO     FRM-SGV-RENT-EDT
               MOVE     FRM-SGV-RENT-EDT TO CVD-FRM-SGV-RENT-ALF.

      *    MOVE ZEROES TO CVD-FRM-SGV-CAST IN CVD-ITEM.
      *    MOVE ZEROES TO CVD-FRM-SGV-LIQU IN CVD-ITEM.
      
           MOVE CVD-NOM-TSCVD  TO QUE-COLA.
           MOVE CVD-LEN-TSCVD  TO QUE-LITM.
           MOVE CVD-ITEM       TO QUE-ITEM.
           MOVE QUE-PUT        TO QUE-CMND.
           PERFORM GNS-PRO-QUE.
       FIN-PUT-TSN-ALF.
           EXIT.

       COPY SGCBFDBC.
       COPY DAPBFVEN.
       COPY DAPBFRCC.
       COPY DAPBFCAD.
       COPY DAPBFLIQ.

       COPY GNSBGCPT.
       COPY GNSBGSTR.
       COPY GNSBBMSC.
       COPY GNSBPFEC.

       GNX-PRO-QUE SECTION.
       INI-GNX-PRO-QUE.
      *      PERFORM GNS-PRO-QUE.
       FIN-GNX-PRO-QUE.
           EXIT.

      * PGM-EBR-ALL SECTION.
      * INI-PGM-EBR-ALL.
      *     MOVE FIO-EBR-ALL TO FIO-CMND.
      *     PERFORM DAP-FIO-DAP.
      * FIN-PGM-EBR-ALL.
      *     EXIT.

       GET-RCC SECTION.
       INI-GET-RCC.
           MOVE 'CVDPUT3' TO QUE-COLA.
           MOVE +100 TO QUE-LITM.
           MOVE SPACES TO QUE-ITEM.
           MOVE QUE-PUT TO QUE-CMND.
           PERFORM GNS-PRO-QUE.
      
           PERFORM GET-CUR-RCC.
           IF FIO-STAT-OKS
               PERFORM GET-NXT-RCC.
       FIN-GET-RCC.
           EXIT.
      
       GET-CUR-RCC SECTION.
       INI-GET-CUR-RCC.
           MOVE OPD-CIC-IOPD IN OPD TO RCC-CIC-IOPD IN RCC.
           MOVE 'RCC-KEY-IOPD' TO FIO-AKEY.
           MOVE FIO-GET-NLS TO FIO-CMND.
           PERFORM DAP-FIO-RCC.
           IF NOT (FIO-STAT-OKS AND
                OPD-CIC-IOPD IN OPD = RCC-CIC-IOPD IN RCC)
                 MOVE 'CLINEX' TO QUE-COLA
                 MOVE +100 TO QUE-LITM
                 MOVE SPACES TO QUE-ITEM
                 MOVE QUE-PUT TO QUE-CMND
                 PERFORM GNS-PRO-QUE
      
               MOVE SPACES TO FRM-GLS-CTE1
               MOVE ZEROES TO FRM-NUM-CLT1
               MOVE SPACES TO FRM-VRF-CLT1
               MOVE SPACES TO FRM-IND-CLT1
               MOVE SPACES TO FRM-GLS-CLT1
               MOVE '23' TO FIO-STAT
           ELSE
               MOVE RCC-CIC-ICLI IN RCC TO DBC-CIC-ICLI IN DBC
               MOVE FIO-GET-KEY TO FIO-CMND
               PERFORM SGC-FIO-DBC
               IF FIO-STAT-OKS
                   MOVE DBC-CIC-ICLI IN DBC TO WSS-CIC-ICLI
                   MOVE DBC-GLS-NOMC IN DBC TO CPT-STRN
                   PERFORM CPT-BLKS
                   MOVE CPT-STRN            TO DBC-GLS-NOMC IN DBC
                   MOVE DBC-GLS-NOMC IN DBC TO FRM-GLS-CTE1
                 MOVE 'CLIEXI' TO QUE-COLA
                 MOVE +100 TO QUE-LITM
                 MOVE FRM-GLS-CTE1 TO QUE-ITEM
                 MOVE QUE-PUT TO QUE-CMND
                 PERFORM GNS-PRO-QUE
      
               MOVE DBC-NUM-ICLI IN DBC TO FRM-NUM-CLT1
               MOVE DBC-VRF-ICLI IN DBC TO FRM-VRF-CLT1
               MOVE DBC-IND-ICLI IN DBC TO FRM-IND-CLT1
               MOVE DBC-GLS-ICLI IN DBC TO FRM-GLS-CLT1.
      
           MOVE FIO-STAT TO PGM-STAT-RCC.
       FIN-GET-CUR-RCC.
           EXIT.
      
       GET-NXT-RCC SECTION.
       INI-GET-NXT-RCC.
           MOVE 'RCC-KEY-IOPD' TO FIO-AKEY.
           MOVE FIO-GET-NXT TO FIO-CMND.
           PERFORM DAP-FIO-RCC.
           IF FIO-STAT-OKS AND
              OPD-CIC-IOPD IN OPD = RCC-CIC-IOPD IN RCC
               MOVE RCC-CIC-ICLI IN RCC TO DBC-CIC-ICLI IN DBC
               MOVE FIO-GET-KEY TO FIO-CMND
               PERFORM SGC-FIO-DBC
               IF FIO-STAT-OKS
      
                MOVE DBC-GLS-NOMC IN DBC TO CPT-STRN
                PERFORM CPT-BLKS
                MOVE CPT-STRN            TO DBC-GLS-NOMC IN DBC
                MOVE DBC-GLS-NOMC IN DBC TO FRM-GLS-CTE2
                MOVE DBC-NUM-ICLI IN DBC TO FRM-NUM-CLT2
                MOVE DBC-VRF-ICLI IN DBC TO FRM-VRF-CLT2
                MOVE DBC-IND-ICLI IN DBC TO FRM-IND-CLT2
                MOVE DBC-GLS-ICLI IN DBC TO FRM-GLS-CLT2
                MOVE '00' TO PGM-STAT-DBC
           ELSE
               MOVE SPACES TO FRM-GLS-CTE2
               MOVE ZEROES TO FRM-NUM-CLT2
               MOVE SPACES TO FRM-VRF-CLT2
               MOVE SPACES TO FRM-IND-CLT2
               MOVE SPACES TO FRM-GLS-CLT2.
       FIN-GET-NXT-RCC.
           EXIT.
       COPY DAPBGVEN.
       COPY GNSBGPES.
       COPY TABBFCAM.
       COPY GNSBVTAB.
      *COPY GNSBGINT.
      *Tasa Interes             : INT-TIPT
      *Valor Tasa Informada     : INT-TINT
      *Valor de Cambio          : INT-VCAM
      *Fecha Colocacion         : INT-FCOL
      *Fecha Inicial Periodo    : INT-FUNO
      *Fecha Final   Periodo    : INT-FDOS
      *Fecha Basa Tasa Variable : INT-FBTV ( opcional )
      *Fecha de Proceso         : INT-FPRO ( la rutina la obtiene)
      *
      *devuelve:
      *INT-TIPE                 : Tasa calculada para el periodo
      *INT-CMSG, INT-MENS       : Codigo y mensaje
      *INT-IETB                 : Indicador de existencia de tasa base
       GNS-CAL-INT SECTION.
       INI-GNS-CAL-INT.
           MOVE SPACES TO INT-CMSG INT-MENS INT-IETB.
      *Para sumar o multiplicar tasas segun sea simple o compuesta
           IF INT-SPBT = 'S'
               MOVE 0 TO INT-TIPA
           ELSE
               MOVE 1 TO INT-TIPA.
      *Obtiene fecha de hoy para el chequeo de tasa variable
           IF INT-CVTI > SPACES
               PERFORM GET-FHOY
               MOVE HOY-DHOY TO INT-DPRO
               MOVE HOY-MHOY TO INT-MPRO
               MOVE HOY-SHOY TO INT-SPRO
               MOVE HOY-AHOY TO INT-APRO
               MOVE HOY-HHHY TO INT-HHPR
               MOVE HOY-MMHY TO INT-MMPR
               MOVE HOY-SSHY TO INT-SSPR.
      *
           IF NOT ( INT-PREP > ZEROES AND INT-TFPR = 'C' )
      
                     MOVE  'Q11' TO QUE-COLA
                     MOVE +12 TO QUE-LITM
                     MOVE INT-FUNO TO QUE-ITEM
                     MOVE QUE-PUT TO QUE-CMND
                     PERFORM GNS-PRO-QUE
      
                     MOVE  'Q12' TO QUE-COLA
                     MOVE +12 TO QUE-LITM
                     MOVE INT-FDOS TO QUE-ITEM
                     MOVE QUE-PUT TO QUE-CMND
                     PERFORM GNS-PRO-QUE
      
               MOVE INT-DUNO TO FEC-DEC1
               MOVE INT-MUNO TO FEC-MEC1
               MOVE INT-SUNO TO FEC-SEC1
               MOVE INT-AUNO TO FEC-AEC1
               MOVE INT-DDOS TO FEC-DEC2
               MOVE INT-MDOS TO FEC-MEC2
               MOVE INT-SDOS TO FEC-SEC2
               MOVE INT-ADOS TO FEC-AEC2
               MOVE FEC-FORM-FEC TO FEC-FORM
               MOVE FEC-DIF-DIA  TO FEC-CMND
      *Para GENESIS version 3.1
      *        PERFORM PRO-FEC
               PERFORM CAL-FEC
               IF NOT FEC-STAT-OKS
                   MOVE 'IN1FEC1FEC2-' TO INT-CMSG
                   GO TO FIN-GNS-CAL-INT
               ELSE
                   MOVE FEC-NDIA TO INT-SEPD
                   MOVE INT-DUNO TO INT-DDMA
                   MOVE INT-MUNO TO INT-MDMA
                   MOVE INT-SUNO TO INT-SDMA
                   MOVE INT-AUNO TO INT-ADMA
                   PERFORM GNS-CAL-TPE
                   GO TO FIN-GNS-CAL-INT.
           MOVE INT-DCOL TO FEC-ITM1 INT-DDMA.
           MOVE INT-MCOL TO FEC-ITM2 INT-MDMA.
           MOVE INT-SCOL TO FEC-ITM3 INT-SDMA.
           MOVE INT-ACOL TO FEC-ITM4 INT-ADMA.
           IF INT-SPR2 > 0
               MOVE INT-TINT TO INT-TINC
               MOVE INT-SPR2 TO INT-TINT
               MOVE INT-TINC TO INT-SPR2
           ELSE
               MOVE INT-TINT TO INT-SPR2.
       SUM-GNS-CAL-INT.
           IF INT-UTPR = 'D'
               MOVE INT-PREP    TO FEC-NDIA
               MOVE FEC-SUM-DIA TO FEC-CMND
           ELSE
           IF INT-UTPR = 'M'
               MOVE INT-PREP    TO FEC-NMES
               MOVE FEC-SUM-MES TO FEC-CMND
           ELSE
               MOVE INT-PREP    TO FEC-NANO
               MOVE FEC-SUM-ANO TO FEC-CMND.
           MOVE FEC-FORM-FEC TO FEC-FORM.
      *Para GENESIS version 3.1
      *    PERFORM PRO-FEC.
           PERFORM CAL-FEC.
           IF NOT FEC-STAT-OKS
               MOVE 'INTFCOLPREP+' TO INT-CMSG
               GO TO FIN-GNS-CAL-INT.
           MOVE FEC-ITM1 TO INT-DAU1.
           MOVE FEC-ITM2 TO INT-MAU1.
           MOVE FEC-ITM3 TO INT-SAU1.
           MOVE FEC-ITM4 TO INT-AAU1.
           MOVE INT-DUNO TO INT-DAU2.
           MOVE INT-MUNO TO INT-MAU2.
           MOVE INT-SUNO TO INT-SAU2.
           MOVE INT-AUNO TO INT-AAU2.
           IF INT-FAU1 < INT-FAU2
               MOVE FEC-ITM1 TO INT-DDMA
               MOVE FEC-ITM2 TO INT-MDMA
               MOVE FEC-ITM3 TO INT-SDMA
               MOVE FEC-ITM4 TO INT-ADMA
               GO TO SUM-GNS-CAL-INT
           ELSE
           IF INT-FAU1 = INT-FAU2
               MOVE FEC-ITM1 TO INT-DDMA
               MOVE FEC-ITM2 TO INT-MDMA
               MOVE FEC-ITM3 TO INT-SDMA
               MOVE FEC-ITM4 TO INT-ADMA.
      **********************************
      *Obtener interes entre INT-DUNO y MIN(FECH,FDOS)
           MOVE INT-DUNO TO FEC-DEC1.
           MOVE INT-MUNO TO FEC-MEC1.
           MOVE INT-SUNO TO FEC-SEC1.
           MOVE INT-AUNO TO FEC-AEC1.
       CON-GNS-CAL-INT.
           MOVE FEC-ITM1 TO INT-DAU1.
           MOVE FEC-ITM2 TO INT-MAU1.
           MOVE FEC-ITM3 TO INT-SAU1.
           MOVE FEC-ITM4 TO INT-AAU1.
           MOVE INT-DDOS TO INT-DAU2.
           MOVE INT-MDOS TO INT-MAU2.
           MOVE INT-SDOS TO INT-SAU2.
           MOVE INT-ADOS TO INT-AAU2.
           IF INT-FAU1 < INT-FAU2
               MOVE INT-DAU1 TO FEC-DEC2
               MOVE INT-MAU1 TO FEC-MEC2
               MOVE INT-SAU1 TO FEC-SEC2
               MOVE INT-AAU1 TO FEC-AEC2
           ELSE
               MOVE INT-DAU2 TO FEC-DEC2
               MOVE INT-MAU2 TO FEC-MEC2
               MOVE INT-SAU2 TO FEC-SEC2
               MOVE INT-AAU2 TO FEC-AEC2.
           MOVE FEC-DIF-DIA TO FEC-CMND.
      
      
      *              MOVE  'Q21' TO QUE-COLA
      *              MOVE +12 TO QUE-LITM
      *              MOVE INT-FUNO TO QUE-ITEM
      *              MOVE QUE-PUT TO QUE-CMND
      *              PERFORM GNS-PRO-QUE
      
      
      
      *              MOVE  'Q22' TO QUE-COLA
      *              MOVE +12 TO QUE-LITM
      *              MOVE INT-FDOS TO QUE-ITEM
      *              MOVE QUE-PUT TO QUE-CMND
      *              PERFORM GNS-PRO-QUE
      
      
      
      *Para GENESIS version 3.1
      *    PERFORM PRO-FEC.
           PERFORM CAL-FEC.
           IF NOT FEC-STAT-OKS
               MOVE 'IN2FEC1FEC2-' TO INT-CMSG
               GO TO FIN-GNS-CAL-INT.
           MOVE FEC-NDIA TO INT-SEPD.
           PERFORM GNS-CAL-TPE.
           IF INT-CMSG > SPACES
      *         DISPLAY 'INT-CMSG : ' INT-CMSG
      *         DISPLAY 'INT-MENS : ' INT-MENS
               GO TO FIN-GNS-CAL-INT.
      *     DISPLAY 'FEC-FEC1 - FEC-FEC2 : ' FEC-FEC1 ' - ' FEC-FEC2.
      *     DISPLAY 'FEC-NDIA            : ' FEC-NDIA.
      *     DISPLAY 'INT-TIPE            : ' INT-TIPE WITH CONVERSION.
      *     DISPLAY '------------------------------------------------'.
           MOVE INT-SPR2 TO INT-TINT.
      *Se suma o se multiplica segun sea simple o compuesta
           IF INT-SPBT = 'S'
               ADD INT-TIPE TO INT-TIPA
           ELSE
               ADD 1 TO INT-TIPE
               MULTIPLY INT-TIPE BY INT-TIPA GIVING INT-TIPA.
      *
      *Se termina si la fecha sumada es mayor que la fecha Dos
           IF ( INT-FAU1 NOT < INT-FAU2 )
               IF INT-SPBT = 'S'
                   MOVE INT-TIPA TO INT-TIPE
                   GO TO FIN-GNS-CAL-INT
               ELSE
                   SUBTRACT 1 FROM INT-TIPA GIVING INT-TIPE
                   GO TO FIN-GNS-CAL-INT.
           MOVE INT-DAU1 TO FEC-ITM1.
           MOVE INT-MAU1 TO FEC-ITM2.
           MOVE INT-SAU1 TO FEC-ITM3.
           MOVE INT-AAU1 TO FEC-ITM4.
           IF INT-UTPR = 'D'
               MOVE INT-PREP    TO FEC-NDIA
               MOVE FEC-SUM-DIA TO FEC-CMND
           ELSE
           IF INT-UTPR = 'M'
               MOVE INT-PREP    TO FEC-NMES
               MOVE FEC-SUM-MES TO FEC-CMND
           ELSE
               MOVE INT-PREP    TO FEC-NANO
               MOVE FEC-SUM-ANO TO FEC-CMND.
           MOVE FEC-FORM-FEC TO FEC-FORM.
      *Para GENESIS version 3.1
      *    PERFORM PRO-FEC.
           PERFORM CAL-FEC.
           IF NOT FEC-STAT-OKS
               MOVE 'INTFCOLPREP+' TO INT-CMSG
               GO TO FIN-GNS-CAL-INT.
           MOVE INT-DAU1 TO FEC-DEC1 INT-DDMA.
           MOVE INT-MAU1 TO FEC-MEC1 INT-MDMA.
           MOVE INT-SAU1 TO FEC-SEC1 INT-SDMA.
           MOVE INT-AAU1 TO FEC-AEC1 INT-ADMA.
           GO TO CON-GNS-CAL-INT.
       FIN-GNS-CAL-INT.
           MOVE ZEROES TO INT-FBTV.
           MOVE 0      TO INT-SPR2.
       EXT-GNS-CAL-INT.
           EXIT.
      
      *Transforma INT-SEPA segun Tipo de Periodo INT-IPER
      * 07-MAY-1990 14:55
       PRO-IPER SECTION.
       INI-PRO-IPER.
      *Busca el CIC de INT-IPER en MSC IPER de sistema TAB
           MOVE SPACES TO INT-CMSG INT-MENS.
           MOVE 'TAB'    TO MSC-COD-SIST FIO-SIST.
           MOVE 'IPER'   TO MSC-COD-TMSC IN MSC.
           MOVE INT-IPER TO MSC-COD-CMSC IN MSC.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM GNS-FIO-MSC.
           IF FIO-STAT-OKS
               MOVE MSC-CIC-CMSC IN MSC TO INT-IPER
           ELSE
               MOVE 'CICIPERNEX' TO INT-CMSG.
       FIN-PRO-IPER.
           EXIT.
      
      *Obtiene tasa de interes dado un periodo, un tipo de tasa y
      *un valor de tasa
       OBT-VTIN SECTION.
       INI-OBT-VTIN.
      *Obtiene fecha de hoy para el chequeo de tasa variable
           IF INT-CVTI > SPACES
               PERFORM GET-FHOY
               MOVE HOY-DHOY TO INT-DPRO
               MOVE HOY-MHOY TO INT-MPRO
               MOVE HOY-SHOY TO INT-SPRO
               MOVE HOY-AHOY TO INT-APRO
               MOVE HOY-HHHY TO INT-HHPR
               MOVE HOY-MMHY TO INT-MMPR
               MOVE HOY-SSHY TO INT-SSPR.
           PERFORM GNS-CAL-TPE.
       FIN-OBT-VTIN.
           EXIT.
      
       GNS-CAL-TPE SECTION.
       INI-GNS-CAL-TPE.
           PERFORM OBT-SEPA.
           IF INT-CMSG > SPACES
               GO TO FIN-GNS-CAL-TPE.
           PERFORM OBT-TINT.
           IF INT-CMSG > SPACES
               GO TO FIN-GNS-CAL-TPE.
           PERFORM OBT-TIPE.
           IF INT-CMSG > SPACES
               GO TO FIN-GNS-CAL-TPE.
       FIN-GNS-CAL-TPE.
           EXIT.
      
      *    Descripcion     : Separacion Periodo Interes
      *    Observaciones   :
      *      - Ampliar otros casos Periodo Base ( futuro ? )
       OBT-SEPA SECTION.
       INI-OBT-SEPA.
           MOVE SPACES TO INT-CMSG INT-MENS.
           IF INT-PBTI = 'D'
      *JSS     MOVE 0 TO INT-S30D , INT-SMES , INT-S360 , INT-SANO
               MOVE 0 TO INT-S30D , INT-S360
               MOVE INT-SEPD TO INT-SDIA
           ELSE
           IF INT-PBTI = 'T' OR 'M'
      *JSS     MOVE 0 TO INT-SANO , INT-SMES , INT-S360
               MOVE 0 TO INT-S360
               DIVIDE 30 INTO INT-SEPD GIVING INT-S30D
                   REMAINDER INT-SDIA
           ELSE
           IF INT-PBTI = 'X' OR 'A'
      *JSS     MOVE 0 TO INT-S30D , INT-SMES , INT-SANO
               MOVE 0 TO INT-S30D
               DIVIDE 360 INTO INT-SEPD GIVING INT-S360
                   REMAINDER INT-SDIA
           ELSE
               MOVE 'INTPBTIINV' TO INT-CMSG.
       FIN-OBT-SEPA.
           EXIT.
      
      *    Descripcion     : Preparacion Tasas Formula Unica
      *    Observaciones   :
      *
       OBT-TINT SECTION.
       INI-OBT-TINT.
           MOVE SPACES TO INT-CMSG INT-MENS.
           IF INT-PBTI = 'D'
               MOVE INT-SPBT TO INT-MCTI
           ELSE
           IF INT-PBTI = 'T' OR 'M'
               IF INT-SEPD > 30
                   MOVE INT-SPBT TO INT-MCTI
               ELSE
                   MOVE INT-BPBT TO INT-MCTI
           ELSE
           IF INT-PBTI = 'X' OR 'A'
               IF INT-SEPD > 360
                   MOVE INT-SPBT TO INT-MCTI
               ELSE
                   MOVE INT-BPBT TO INT-MCTI
           ELSE
               MOVE 'INTPBTIINV' TO INT-CMSG
               GO TO FIN-OBT-TINT.
           MOVE INT-TINT TO INT-TINC.
      
      *Si es tasa variable
      *      IF ( INT-CVTI > SPACES ) AND
      *         ( INT-IBTV NOT = INT-IBTV-NADA-MAS )
           IF ( INT-CVTI > SPACES )
                MOVE INT-FINT TO CAM-FEC-FCAM IN CAM(1)
                MOVE INT-FINT TO CAM-FEC-FCAM IN CAM(2)
      
                MOVE 'I'      TO CAM-MSC-TVAL IN CAM(1)
                MOVE INT-CVTI TO CAM-COD-CVAL IN CAM(1)
                MOVE INT-PBTI TO CAM-COD-TCAM IN CAM(1)
      
                MOVE INT-VCAM TO CAM-COD-VCAM IN CAM(2)
      
                MOVE FIO-GET-KEY TO FIO-CMND
                PERFORM TAB-FIO-CAM
      
                IF ( NOT FIO-STAT-OKS ) OR
                   ( CAM-MSC-STAT IN CAM NOT = 'S' )
                    PERFORM GNS-CHK-BTV
                    IF INT-CMSG > SPACES
                        GO TO FIN-OBT-TINT
                    ELSE
                        ADD CAM-SGV-VCAM IN CAM TO INT-TINC
                ELSE
                    ADD CAM-SGV-VCAM IN CAM TO INT-TINC.
      *     IF INT-CVTI > SPACES AND INT-IBTV = INT-IBTV-UNA-VEZ
      *         ADD CAM-SGV-VCAM IN CAM TO INT-TINT
      *         MOVE INT-IBTV-NADA-MAS TO INT-IBTV.
      
           IF INT-BCTI = 'A'
               COMPUTE INT-TINC ROUNDED =
                   ( INT-TINC * 100 ) / ( 100 - INT-TINC ).
      
           IF INT-PBTI = 'D'
               COMPUTE INT-TDIA = INT-TINC / 100
               COMPUTE INT-T30D = INT-TINC * 30 / 100
               COMPUTE INT-T360 = INT-TINC * 360 / 100
           ELSE
           IF INT-PBTI = 'T' OR 'M'
               COMPUTE INT-T30D = INT-TINC / 100
               COMPUTE INT-T360 = INT-TINC * 12 / 100
               IF INT-MCTI = 'D'
                   COMPUTE INT-TDIA =
                       ( 1 + ( INT-TINC / 100 ) )**( 1 / 30 ) - 1
               ELSE
                   COMPUTE INT-TDIA = INT-TINC / 3000
           ELSE
           IF INT-PBTI = 'X' OR 'A'
               COMPUTE INT-T30D = INT-TINC / 1200
               COMPUTE INT-T360 = INT-TINC / 100
               IF INT-MCTI = 'D'
                   COMPUTE INT-TDIA =
                       ( 1 + ( INT-TINC / 100 ) )**( 1 / 360 ) - 1
               ELSE
                   COMPUTE INT-TDIA = INT-TINC / 36000
           ELSE
               MOVE 'INTPBTIINV' TO INT-CMSG.
       FIN-OBT-TINT.
           EXIT.
      
       GNS-CHK-BTV SECTION.
       INI-GNS-CHK-BTV.
           MOVE 'N' TO INT-IETB.
           IF NOT FIO-STAT-OKS
               MOVE 'CAMBTSANXABT'      TO INT-CMSG
               MOVE CAM-KEY-CAMB IN CAM TO INT-MEN2
           ELSE
               MOVE 'CAMBTSANVABT'      TO INT-CMSG
               MOVE CAM-KEY-CAMB IN CAM TO INT-MEN2.
           IF ( CAM-FEC-FCAM IN CAM(1) < INT-FPRO ) OR
              ( CAM-FEC-FCAM IN CAM(1) = INT-FPRO AND
                INT-HPRO > '120000' )
               GO TO FIN-GNS-CHK-BTV.
           IF INT-FBTV NOT > ZEROES
               GO TO FIN-GNS-CHK-BTV.
      *
           MOVE INT-DBTV TO CAM-NUM-DCAM IN CAM(1)
                            CAM-NUM-DCAM IN CAM(2).
           MOVE INT-MBTV TO CAM-NUM-MCAM IN CAM(1)
                            CAM-NUM-MCAM IN CAM(2).
           MOVE INT-SBTV TO CAM-NUM-SCAM IN CAM(1)
                            CAM-NUM-SCAM IN CAM(2).
           MOVE INT-ABTV TO CAM-NUM-ACAM IN CAM(1)
                            CAM-NUM-ACAM IN CAM(2).
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM TAB-FIO-CAM.
           IF NOT FIO-STAT-OKS
               MOVE 'CAMBTSANXABT'      TO INT-CMSG
               MOVE CAM-KEY-CAMB IN CAM TO INT-MEN2
           ELSE
           IF CAM-MSC-STAT IN CAM NOT = 'S'
               MOVE 'CAMBTSANVABT'      TO INT-CMSG
               MOVE CAM-KEY-CAMB IN CAM TO INT-MEN2
           ELSE
               MOVE SPACES              TO INT-CMSG
               MOVE SPACES              TO INT-MENS.
       FIN-GNS-CHK-BTV.
           EXIT.
      
      *    Descripcion     : Obtencion Tasa del Periodo
      *    Observaciones   :
      *      - Modificar el calculo para Interes Compuesto considerando
      *        Base de Calculo para Bajo y Sobre Periodo Expresion Tasa
       OBT-TIPE SECTION.
       INI-OBT-TIPE.
           MOVE SPACES TO INT-CMSG INT-MENS.
      
           IF INT-MCTI = 'S'
               COMPUTE INT-TIPE ROUNDED =
                   INT-TDIA * INT-SDIA + INT-T30D * INT-S30D +
                   INT-T360 * INT-S360
           ELSE
           IF INT-MCTI = 'C'
               IF INT-PBTI = 'D'
                   COMPUTE INT-TIPE ROUNDED =
                       ( INT-TDIA + 1 ) ** INT-SDIA - 1
               ELSE
               IF INT-PBTI = 'T' OR 'M'
                   COMPUTE INT-TIPE ROUNDED =
                       ( INT-T30D + 1 ) ** INT-S30D *
                       ( INT-SDIA * INT-TDIA + 1 ) - 1
               ELSE
               IF INT-PBTI = 'X' OR 'A'
                   COMPUTE INT-TIPE ROUNDED =
                       ( INT-T360 + 1 ) ** INT-S360 *
                       ( INT-SDIA * INT-TDIA + 1 ) - 1
               ELSE
                   MOVE 'INTPBTIINV' TO INT-CMSG
                   GO TO FIN-OBT-TIPE
           ELSE
           IF INT-MCTI = 'D'
               COMPUTE INT-TIPE ROUNDED =
                   ( INT-TDIA + 1 ) ** INT-SEPD - 1
           ELSE
               MOVE 'INTMCTIINV' TO INT-CMSG
               GO TO FIN-OBT-TIPE.
       FIN-OBT-TIPE.
           EXIT.
      
      
       CAL-CAST SECTION.
       INI-CAL-CAST.
      *    MOVE 'CAST' TO QUE-COLA.
      *    MOVE +100 TO QUE-LITM.
      *    MOVE SPACES TO QUE-ITEM.
      *    MOVE QUE-PUT TO QUE-CMND.
      *    PERFORM GNS-PRO-QUE.
      
      
      
      *    MOVE 'MPRE' TO QUE-COLA.
      *    MOVE +100 TO QUE-LITM.
      *    MOVE OPD-SGV-MPRE IN OPD TO WSS-VAL-EDIT.
      *    MOVE WSS-VAL-EDIT TO QUE-ITEM.
      *    MOVE QUE-PUT TO QUE-CMND.
      *    PERFORM GNS-PRO-QUE.
      
      
      
           MOVE 'VNLQ' TO QUE-COLA.
           MOVE +100 TO QUE-LITM.
           MOVE OPD-NUM-VNLQ IN OPD TO WSS-VAL-EDIT.
           MOVE WSS-VAL-EDIT TO QUE-ITEM.
           MOVE QUE-PUT TO QUE-CMND.
           PERFORM GNS-PRO-QUE.
      
      
      
      *    MOVE 'VSLQ' TO QUE-COLA.
      *    MOVE +100 TO QUE-LITM.
      *    MOVE OPD-NUM-VSLQ IN OPD TO WSS-VAL-EDIT.
      *    MOVE WSS-VAL-EDIT TO QUE-ITEM.
      *    MOVE QUE-PUT TO QUE-CMND.
      *    PERFORM GNS-PRO-QUE.
      
      
      
      *    MOVE 'IVEN' TO QUE-COLA.
      *    MOVE +100 TO QUE-LITM.
      *    MOVE OPD-NUM-IVEN IN OPD TO WSS-VAL-EDIT.
      *    MOVE WSS-VAL-EDIT TO QUE-ITEM.
      *    MOVE QUE-PUT TO QUE-CMND.
      *    PERFORM GNS-PRO-QUE.
      
      
      
      *    MOVE 'SCAP' TO QUE-COLA.
      *    MOVE +100 TO QUE-LITM.
      *    MOVE OPD-VAL-SCAP IN OPD TO WSS-VAL-EDIT.
      *    MOVE WSS-VAL-EDIT TO QUE-ITEM.
      *    MOVE QUE-PUT TO QUE-CMND.
      *    PERFORM GNS-PRO-QUE.
      
      
      
           COMPUTE DAP-INT-EFEC = DAP-INT-TIPE -
                                  DAP-INT-CAST.      
      
           MOVE DAP-INT-TIPE TO    WSS-VAL-EDIT.
      *    DISPLAY 'DAP-INT-TIPE:' WSS-VAL-EDIT ':'.

           MOVE DAP-INT-CAST       TO WSS-VAL-EDIT1.
      *     DISPLAY 'DAP-INT-CAST:' WSS-VAL-EDIT ':'.

           MOVE DAP-INT-EFEC       TO WSS-VAL-EDIT2.

      *     DISPLAY 'PACT CAST EFEC:' WSS-VAL-EDIT ':'
      *     WSS-VAL-EDIT1 ':' WSS-VAL-EDIT2.

           COMPUTE WSS-TOT-CUO = OPD-NUM-VNLQ IN OPD +
                                 OPD-NUM-VSLQ IN OPD.
           COMPUTE WSS-TOT-CUO-M1 = WSS-TOT-CUO - 1.
           
           MOVE OPD-VAL-SCAP IN OPD TO WSS-VAL-EDIT.
      *     DISPLAY 'OPD-VAL-SCAP ' WSS-VAL-EDIT.
           
           MOVE OPD-NUM-IVEN IN OPD TO WSS-VAL-EDIT.
      *     DISPLAY 'OPD-NUM-IVEN ' WSS-VAL-EDIT.

           MOVE WSS-TOT-CUO  TO WSS-VAL-EDIT.
      *     DISPLAY 'OPD-TOT-CUO ' WSS-VAL-EDIT.
           
           MOVE WSS-TOT-CUO-M1 TO WSS-VAL-EDIT.
      *     DISPLAY 'OPD-TOT-CUO-M1 ' WSS-VAL-EDIT.
           
           
           COMPUTE WSS-SGV-TASA = WSS-TOT-CUO - OPD-NUM-IVEN.
           MOVE WSS-SGV-TASA TO WSS-VAL-EDIT.
           DISPLAY ' WSS-VAL-1 ' WSS-VAL-EDIT.
           
           COMPUTE WSS-SGV-TASA = WSS-SGV-TASA / WSS-TOT-CUO-M1.
           MOVE WSS-SGV-TASA TO WSS-VAL-EDIT.
           DISPLAY ' WSS-VAL-2 ' WSS-VAL-EDIT.
           
           COMPUTE WSS-SGV-TASA = WSS-SGV-TASA * DAP-INT-CAST.
           MOVE WSS-SGV-TASA TO WSS-VAL-EDIT.
           DISPLAY ' WSS-VAL-3 ' WSS-VAL-EDIT.
           

           COMPUTE WSS-SGV-TASA-4 ROUNDED = DAP-INT-TIPE -
                                            WSS-SGV-TASA.
           MOVE WSS-SGV-TASA-4 TO WSS-VAL-EDIT.
           DISPLAY ' WSS-VAL-4 TASA 4 DEC  ' WSS-VAL-EDIT.
           MOVE WSS-SGV-TASA-4 TO WSS-SGV-TEFEC.

           COMPUTE WSS-SGV-TEFEC-DSP ROUNDED = ( 100 * WSS-SGV-TEFEC ).
           MOVE WSS-SGV-TEFEC-DSP TO WSS-VAL-EDIT.
           DISPLAY ' TASA EFECTIVA DESPLIEGUE ' WSS-VAL-EDIT.

           
           COMPUTE WSS-SGV-TASA = 1 + WSS-SGV-TASA-4.
           MOVE WSS-SGV-TASA TO WSS-VAL-EDIT.
           DISPLAY ' TASA MAS 1 ' WSS-VAL-EDIT.
           
           COMPUTE  WSS-SGV-TASA-4 ROUNDED = DAP-INT-TIPE  -
                                             WSS-SGV-TEFEC.
           MOVE WSS-SGV-TASA-4 TO WSS-SGV-TAJUS.
           MOVE WSS-SGV-TAJUS TO WSS-VAL-EDIT.
           DISPLAY ' TASA AJUSTE CALCULO ' WSS-VAL-EDIT.
           

                             
           COMPUTE  WSS-SGV-TASA-4 ROUNDED =   ( 100 * DAP-INT-TIPE ) -
                                               ( WSS-SGV-TEFEC-DSP ).
           MOVE WSS-SGV-TASA-4 TO WSS-SGV-TAJUS-DSP.
           MOVE WSS-SGV-TAJUS-DSP TO WSS-VAL-EDIT.
           DISPLAY ' TASA AJUSTE DESPLIEGUE ' WSS-VAL-EDIT.
           
           



           DISPLAY 'OPD-NUM-IVEN ' OPD-NUM-IVEN IN OPD.
           
           COMPUTE WSS-SGV-INTE  ROUNDED = OPD-VAL-CAPT IN  OPD * 
                                          WSS-SGV-TASA **
                                          ( OPD-NUM-IVEN IN OPD - 1).
           MOVE WSS-SGV-INTE TO WSS-VAL-EDIT.
           DISPLAY ' WSS-VAL-6.1 ' WSS-VAL-EDIT.

           IF DAP-VEN-CIC-VCAM = PDB-CIC-0999
                MOVE WSS-SGV-INTE TO PES-SGV-DECI
                PERFORM PES-SCTV
                MOVE PES-SGV-ENTE TO WSS-SGV-INTE.
                           
      *     COMPUTE WSS-SGV-INTE = WSS-SGV-INTE - OPD-VAL-SCAP IN OPD.
      *     MOVE WSS-SGV-INTE TO WSS-VAL-EDIT.
      *     DISPLAY ' WSS-VAL-7 ' WSS-VAL-EDIT.
      *     DISPLAY '***************'.
                     
           
      *     COMPUTE WSS-SGV-TASA =
      *       
      *        (
      *          
      *               (  OPD-VAL-SCAP IN  OPD *         
      *                  (  1 +
      *                     (
      *                         DAP-INT-TIPE -
      *                            (
      *                               DAP-INT-CAST *
      *                                  (
      *                                   ( WSS-TOT-CUO - OPD-NUM-IVEN )
      *                                                  /
      *                                          WSS-TOT-CUO-M1        
      *                                  )
      *                            )
      *                             
      *                     )
      *                     
      *                  )   
      *                  
      *                  ** OPD-NUM-IVEN IN OPD
      *               )
      *        )
      *        
      *        
      *        - OPD-VAL-SCAP IN OPD.
            
              
      *     MOVE WSS-SGV-TASA TO WSS-VAL-EDIT.
      *     DISPLAY 'TASA AJUSTE ' WSS-VAL-EDIT.
      
      * PAGO AL VCTO
           IF OPD-SGV-MPRE IN OPD = ZEROES
               MOVE ZEROES TO CVD-FRM-SGV-CAST IN CVD-ITEM
           ELSE
               COMPUTE CVD-FRM-SGV-CAST IN CVD-ITEM ROUNDED =
                 ( DAP-INT-CAST * (  ( OPD-NUM-VNLQ IN OPD +
                                       OPD-NUM-VSLQ IN OPD
                                     )
                                     -
                                     ( OPD-NUM-IVEN IN OPD - 1
                                     )
      
                                   )
                                   /
                                  ( ( OPD-NUM-VNLQ IN OPD +
                                      OPD-NUM-VSLQ IN OPD
                                    )
                                  -
                                     1
                                  )
                        * ( OPD-NUM-IVEN IN OPD - 1)
                        * OPD-VAL-SCAP IN OPD
                 )
               IF DAP-VEN-CIC-VCAM = PDB-CIC-0999
                   MOVE CVD-FRM-SGV-CAST IN CVD-ITEM TO PES-SGV-DECI
                   PERFORM PES-SCTV
                   MOVE PES-SGV-ENTE TO CVD-FRM-SGV-CAST IN CVD-ITEM.
      
           IF OPD-SGV-MPRE IN OPD = 100
               COMPUTE CVD-FRM-SGV-LIQU IN CVD-ITEM =
                  OPD-VAL-SCAP IN OPD -
                  CVD-FRM-SGV-CAST IN CVD-ITEM
           ELSE
               COMPUTE CVD-FRM-SGV-LIQU IN CVD-ITEM =
                  WSS-SGV-INTE.
       FIN-CAL-CAST.
           EXIT.
       COPY GNSBGVSM.
*% END
