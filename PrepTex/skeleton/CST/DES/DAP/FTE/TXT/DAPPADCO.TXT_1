*%! Codigo adicional para DCO
*% PGM_PTC = TRUE
*% NO_HDR_CST = TRUE
*% NO_TIENE_TIMESTAMP = TRUE
*% IF CMT_ID
      *<<<<CMT_ID
      ****************************************************************
      * PROYECTO: Registro de Simulaciones Web en LOG de DAP - 
      *           Pantalla DCO
      * OBJETIVO: Administrar la Entidad DCO
      * NUB: 54023
      * FECHA   : ENE-2019
      * AUTOR   : BEE - MPB
      ****************************************************************
      *>>>>
*% END
*% IF FIN_SCR_VARI
      *<<<< FIN_SCR_VARI
      *>>>>
*% END
*% IF INI_FIO
      *<<<< INI_FIO
      *>>>>
*% END
*% IF PGM_POS_EDB
      *<<<< PGM_POS_EDB
*% IF PGM_PU
      *>>>>
*% END
*% END
*% IF PGM_POS_RCK
      *<<<< PGM_POS_RCK
      *>>>>
*% END
*% IF SCR_GIKY_VAL_IKY
      *<<<< SCR_GIKY_VAL_IKY
      *>>>>
*% END
*% IF CMN_MOD_RET
      *<<<< CMN_MOD_RET
           IF SCR-CMND = 'MOD'
               PERFORM PUT-LAD-ANT.
      *>>>>
*% END
*% IF PFS_SCR_MOD
      *<<<< PFS_SCR_MOD

      *>>>>
*% END
*% IF FIN_PUT_SCR
      *<<<< FIN_PUT_SCR
           IF PGM-STAT-DCO-OKS
               MOVE DCO-KEY-IDCO IN DCO TO SCR-KEY-IDCO-ACTU.
      *>>>>
*% END
*% IF INI_SCR_DMSG
*% IF PGM_PQ
      *<<<< INI_SCR_DMSG
      * Con este codigo logramos que una vez terminada la consulta
      * las claves no se borren de la pantalla
           IF SCR-CMND = WSS-CON
                AND
              SCR-INST = SCR-INST-GKY
                AND
              FRM-FFLD NOT = FRM-FFLD-RET
                  MOVE PGM-NO-LIMPIAR-NADA TO PGM-ICLR.
      *>>>> INI_SCR_DMSG
*% END
*% END
*% IF EOF
      *<<<< EOF
      *>>>> EOF
*% END
*% IF PFS_GET_CON
      *<<<< PFS_GET_CON
           IF NOT ( FRM-FFLD = FRM-FFLD-PF5 OR FRM-FFLD-PF6 
                    OR FRM-FFLD-PF7)
      *>>>>
*% END
*% IF PFS_SCR_ACC
      *<<<< PFS_SCR_ACC
           IF FRM-FFLD = FRM-FFLD-PF5 OR FRM-FFLD-PF6 OR 
                         FRM-FFLD-PF7 
               PERFORM VAL-NUM-KEY-DCO
               PERFORM VAL-NUM-FLD-DCO
               PERFORM PGM-PRO-PFS
               PERFORM SCR-TRL.
      *>>>>
*% END
*% IF FIN_HBL_KEY
      *<<<< FIN_HBL_KEY
           MOVE '1' TO FRM-CPIM-AEY.
      *>>>>
*% END
*% IF EOF
      *<<<< EOF
*% IF PGM_PQ
       PGM-PRO-PFS SECTION.
       INI-PGM-PRO-PFS.
           MOVE SPACES TO FRM-MENS.
           PERFORM PRO-SCRL-PFS.
           MOVE PGM-LIMPIAR-TODO TO PGM-ICLR.
           PERFORM SCR-MSSG.
       FIN-PGM-PRO-PFS.
           EXIT.

       PRO-SCRL-PFS SECTION.
       INI-PRO-SCRL-PFS.
           IF FRM-FFLD = FRM-FFLD-PF5
               PERFORM PRO-SCRL-PF5
           ELSE
           IF FRM-FFLD = FRM-FFLD-PF6
               PERFORM PRO-SCRL-PF6
           ELSE
           IF FRM-FFLD = FRM-FFLD-PF7
               PERFORM PRO-SCRL-PF7.

       FIN-PRO-SCRL-PFS.
           EXIT.

       PRO-SCRL-PF5 SECTION.
       INI-PRO-SCRL-PF5.
           PERFORM KEY-DCO-DCO.
           MOVE DCO-KEY-IDCO IN DCO TO SCR-KEY-IDCO-ACTU.

           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM DAP-FIO-DCO.

           IF NOT FIO-STAT-OKS
               MOVE WSS-DCOCURRNEX TO MSG-COD-MENS
               GO TO MSG-PRO-SCRL-PF5.
       PRV-PRO-SCRL-PF5.
           MOVE 'DCO-CIC-IOPD' TO FIO-AKEY.

           MOVE FIO-GET-PRV TO FIO-CMND.

           PERFORM DAP-FIO-DCO.
           IF NOT FIO-STAT-OKS
               MOVE WSS-DCOCLINOPRV TO MSG-COD-MENS
               GO TO MSG-PRO-SCRL-PF5.
           MOVE FIO-STAT TO PGM-STAT-DCO.

           IF     (  DCO-CAI-IOPD IN DCO NOT = 
                     DCO-CAI-IOPD IN DCO-FLD OR
                     DCO-IIC-IOPD IN DCO NOT =
                     DCO-IIC-IOPD IN DCO-FLD)
 


               MOVE SPACES TO DCO

               MOVE SCR-KEY-IDCO-ACTU TO DCO
               MOVE 'DCO-CIC-IOPD' TO FIO-AKEY
               MOVE FIO-GET-KEY TO FIO-CMND
               PERFORM DAP-FIO-DCO
               MOVE FIO-STAT TO PGM-STAT-DCO
      

               MOVE WSS-DCOCLINOPRV TO MSG-COD-MENS
               GO TO MSG-PRO-SCRL-PF5.     

           PERFORM BUS-OPD-CON-DCO.               
           PERFORM SCR-CLRA-DCO.
           PERFORM PUT-SCR.
           GO TO FIN-PRO-SCRL-PF5.
       MSG-PRO-SCRL-PF5.
           MOVE 'DAP' TO MSG-COD-SIST.
           PERFORM GET-MSG.
           MOVE MSG-GLS-DESC TO FRM-MEN2.
       FIN-PRO-SCRL-PF5.
           EXIT.

       PRO-SCRL-PF6 SECTION.
       INI-PRO-SCRL-PF6.
           PERFORM KEY-DCO-DCO.
           MOVE DCO-KEY-IDCO IN DCO TO SCR-KEY-IDCO-ACTU.

           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM DAP-FIO-DCO.

           IF NOT FIO-STAT-OKS
               MOVE WSS-DCOCURRNEX TO MSG-COD-MENS
               GO TO MSG-PRO-SCRL-PF6.
       PRV-PRO-SCRL-PF6.
           MOVE 'DCO-CIC-IOPD' TO FIO-AKEY.

           MOVE FIO-GET-NXT TO FIO-CMND.

           PERFORM DAP-FIO-DCO.
           IF NOT FIO-STAT-OKS
               MOVE WSS-DCOCLINONXT TO MSG-COD-MENS
               GO TO MSG-PRO-SCRL-PF6.
           MOVE FIO-STAT TO PGM-STAT-DCO.

           IF     (  DCO-CAI-IOPD IN DCO NOT = 
                     DCO-CAI-IOPD IN DCO-FLD OR
                     DCO-IIC-IOPD IN DCO NOT =
                     DCO-IIC-IOPD IN DCO-FLD)
 


               MOVE SPACES TO DCO

               MOVE SCR-KEY-IDCO-ACTU TO DCO
               MOVE 'DCO-CIC-IOPD' TO FIO-AKEY
               MOVE FIO-GET-KEY TO FIO-CMND
               PERFORM DAP-FIO-DCO
               MOVE FIO-STAT TO PGM-STAT-DCO
      

               MOVE WSS-DCOCLINONXT TO MSG-COD-MENS
               GO TO MSG-PRO-SCRL-PF6.     

           PERFORM BUS-OPD-CON-DCO.               
           PERFORM SCR-CLRA-DCO.
           PERFORM PUT-SCR.
           GO TO FIN-PRO-SCRL-PF6.
       MSG-PRO-SCRL-PF6.
           MOVE 'DAP' TO MSG-COD-SIST.
           PERFORM GET-MSG.
           MOVE MSG-GLS-DESC TO FRM-MEN2.
       FIN-PRO-SCRL-PF6.
           EXIT.

       PRO-SCRL-PF7 SECTION.
       INI-PRO-SCRL-PF7.
      
           PERFORM KEY-DCO-DCO.
           MOVE DCO-KEY-IDCO IN DCO TO SCR-KEY-IDCO-ACTU.

           IF ( OPD-CAI-GREN IN DCO-FLD NOT > SPACES OR
                OPD-IIC-GREN IN DCO-FLD NOT > ZEROES)      
               MOVE WSS-DCONEXREN TO MSG-COD-MENS
               GO TO MSG-PRO-SCRL-PF7.
               
           MOVE OPD-CAI-GREN IN DCO-FLD TO
                      DCO-CAI-IOPD IN DCO-FLD.
           MOVE OPD-IIC-GREN IN DCO-FLD TO
                      DCO-IIC-IOPD IN DCO-FLD.

      *SE BUSCA OPD - DCO - DBC                
           IF ( DCO-CAI-IOPD IN DCO-FLD > SPACES AND
                DCO-IIC-IOPD IN DCO-FLD > ZEROES )
               MOVE ZEROES TO DBC-NUM-ICLI IN DCO-FLD
               MOVE SPACES TO DBC-VRF-ICLI IN DCO-FLD
               MOVE SPACES TO DBC-IND-ICLI IN DCO-FLD
               MOVE SPACES TO DBC-GLS-ICLI IN DCO-FLD
               MOVE SPACES TO DCO-CAI-ICLI IN DCO-FLD
               MOVE SPACES TO DCO-IIC-ICLI IN DCO-FLD
               MOVE SPACES TO DCO-CAI-ICLI IN DCO
               MOVE SPACES TO DCO-IIC-ICLI IN DCO
               PERFORM BUS-POR-OPD
            ELSE
               MOVE ZEROES TO DBC-NUM-ICLI IN DCO-FLD
               MOVE SPACES TO DBC-VRF-ICLI IN DCO-FLD
               MOVE SPACES TO DBC-IND-ICLI IN DCO-FLD
               MOVE SPACES TO DBC-GLS-ICLI IN DCO-FLD
               MOVE SPACES TO DCO-CAI-ICLI IN DCO-FLD
               MOVE SPACES TO DCO-IIC-ICLI IN DCO-FLD            
               MOVE WSS-DCORENNEX TO MSG-COD-MENS
               GO TO MSG-PRO-SCRL-PF7.

           IF FIO-STAT = FIO-STAT-NEX
               MOVE WSS-DCORENNEX TO MSG-COD-MENS
               PERFORM CLR-FLD-DCO
               GO TO MSG-PRO-SCRL-PF7.

           MOVE FIO-STAT TO PGM-STAT-DCO.
           
           PERFORM SCR-CLRA-DCO.
           PERFORM PUT-SCR.
           GO TO FIN-PRO-SCRL-PF7.
      
       MSG-PRO-SCRL-PF7.
           IF MSG-COD-MENS > SPACES
               MOVE 'DAP' TO MSG-COD-SIST
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MEN2.
       FIN-PRO-SCRL-PF7.
           EXIT.

      *>>>>
*% END
*% END
*%!-----------------------------------------------------------------
*% IF WSS
      *<<<< WSS
*% IF PGM_PQ      
*% END
*% IF PGM_PU
       COPY DAPBRLAD.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-LAD-REQA==.
*% END
      *Entidades de GNS
       COPY GNSWGCPT.
       COPY GNSWGSTR.

      *Entidades de SGC
       COPY SGCBRDBC.

      *Entidades de DAP
       COPY DAPBROPD.
       COPY DAPBRRCC.
       
       01  WSS-VARI.
           03  SCR-VARI-PFS.
               05  SCR-KEY-IDCO-ACTU      PIC X(24).
*% IF PGM_PU
           03 WSS-FHOY                                   PIC X(08).
           03 WSS-HHOY                                   PIC X(06).
*% END
           03 WSS-CMT-LAD                        PIC X(35)
                  VALUE 'REGISTRO GENERADO VIA PANTALLA DCO'.       
           03 WSS-DAP        VALUE 'DAP'         PIC X(03).
           03 WSS-CON        VALUE 'CON'         PIC X(03).
           03 WSS-00         VALUE '00'          PIC X(02).           
           03 WSS-ERRORPUTLAD VALUE 'ERRORPUTLAD' PIC X(12).
           03 WSS-FEC-FAMD.
               05 WSS-NUM-SAMD                      PIC X(02).
               05 WSS-NUM-AAMD                      PIC X(02).
               05 WSS-NUM-MAMD                      PIC X(02).
               05 WSS-NUM-DAMD                      PIC X(02).
           03 WSS-DCOPF7 VALUE 'DCOPF7'  PIC X(06).                           
*% IF PGM_PQ           
           03 WSS-DCOCURRNEX VALUE 'DCOCURRNEX'  PIC X(10). 
           03 WSS-DCONOPRV VALUE 'DCO    NOPRV'  PIC X(12). 
           03 WSS-DCONONXT VALUE 'DCO    NONXT'  PIC X(12).
           03 WSS-DCOCLINOPRV VALUE 'DCOCLINOPRV' PIC X(12). 
           03 WSS-DCOCLINONXT VALUE 'DCOCLINONXT' PIC X(12).
           03 WSS-DCONEXREN VALUE 'DCONEXREN'    PIC X(09).
           03 WSS-DCORENNEX VALUE 'DCORENNEX'    PIC X(09).

           
*% END
*% IF PGM_PU
           03 WSS-UNO        VALUE 1          PIC 9(01).
           03 WSS-DOS        VALUE 2          PIC 9(01).
           03 WSS-ING     VALUE 'ING'         PIC X(03).
           03 WSS-MOD     VALUE 'MOD'         PIC X(03).
           03 WSS-ELI     VALUE 'ELI'         PIC X(03).
           03 WSS-ANT     VALUE 'ANT'         PIC X(03).
           03 WSS-DES     VALUE 'DES'         PIC X(03).
           03 WSS-NA      VALUE 'N/A'         PIC X(03).
           03 WSS-I       VALUE 'I'           PIC X(01).
           03 WSS-M       VALUE 'M'           PIC X(01).
           03 WSS-E       VALUE 'E'           PIC X(01).
           03 WSS-1PT0    VALUE '1.0'         PIC X(03).
           03 WSS-DCO     VALUE 'DCO'         PIC X(03).
*% END
      *>>>> WSS
*% END
*% IF WSS_DTC
      *<<<< WSS_DTC
      *Entidades de SGC
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-DBC-REQA==.
      *Entidades de DAP
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-OPD-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-RCC-REQA==.
      *>>>>
*% END
*% IF FIN_SCR_GIKY OR FIN_SCR_GCNF OR FIN_SCR_GFLD
      *<<<< FIN_SCR_GIKY OR FIN_SCR_GCNF OR FIN_SCR_GFLD
      *>>>>
*% END
*% IF SCR_GIKY_VAL_CON_IKY OR FIN_CMN_ING
      *<<<< SCR_GIKY_VAL_CON_IKY OR FIN_CMN_ING
      *>>>>
*% END
*% IF INI_FIO
      *<<<< INI_FIO
      *>>>>
*% END
*% IF FIN_HBL_IKY
      *<<<< FIN_HBL_IKY
      *>>>>
*% END
*% IF FND_KEY
      *<<<< FND_KEY
           IF ( DBC-NUM-ICLI IN DCO-FLD NOT > ZEROES )
                PERFORM BUS-POR-OPD
                GO TO FIN-FND-KEY.
      *>>>>
*% END
*% IF PUT_SCR
      *<<<< PUT_SCR
           IF PGM-STAT-DCO-OKS
               MOVE DCO-KEY-IDCO IN DCO TO SCR-KEY-IDCO-ACTU.
      *>>>>
*% END
*% IF EOF_PQ
      *<<<< EOF_PQ
       BUS-POR-OPD SECTION.
       INI-BUS-POR-OPD.
           MOVE DCO-CAI-IOPD IN DCO-FLD TO OPD-CAI-IOPD IN OPD.
           MOVE DCO-IIC-IOPD IN DCO-FLD TO OPD-IIC-IOPD IN OPD.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM DAP-FIO-OPD.
           MOVE FIO-STAT TO PGM-STAT-OPD.
           IF NOT FIO-STAT-OKS
               MOVE 'DAP'        TO MSG-COD-SIST
               MOVE 'OPD    NEX' TO MSG-COD-MENS
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS
               MOVE FIO-STAT-NEX TO FIO-STAT
               GO TO FIN-BUS-POR-OPD.
           PERFORM BUS-DCO-CON-OPD.
           IF FIO-STAT = FIO-STAT-NEX
               GO TO FIN-BUS-POR-OPD.
           PERFORM BUS-CLI-CON-DCO.
           IF FIO-STAT = FIO-STAT-NEX
               GO TO FIN-BUS-POR-OPD.
       FIN-BUS-POR-OPD.
           EXIT.

       BUS-RCC-CON-OPD SECTION.
       INI-BUS-RCC-CON-OPD.
           MOVE DCO-CAI-ICLI IN DCO-FLD TO RCC-CAI-ICLI IN RCC.
           MOVE DCO-IIC-ICLI IN DCO-FLD TO RCC-IIC-ICLI IN RCC. 
           MOVE DCO-CAI-IOPD IN DCO-FLD TO RCC-CAI-IOPD IN RCC.
           MOVE DCO-IIC-IOPD IN DCO-FLD TO RCC-IIC-IOPD IN RCC.

           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM DAP-FIO-RCC.
           IF NOT ( FIO-STAT-OKS )
               MOVE 'DAP'        TO MSG-COD-SIST
               MOVE 'OPD    NORCC' TO MSG-COD-MENS
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS
               MOVE FIO-STAT-NEX TO FIO-STAT
               GO TO FIN-BUS-RCC-CON-OPD.
           
       FIN-BUS-RCC-CON-OPD.
           EXIT.
           
       BUS-DCO-CON-OPD SECTION.
       INI-BUS-DCO-CON-OPD.
           MOVE OPD-CAI-IOPD IN OPD TO DCO-CAI-IOPD IN DCO.
           MOVE OPD-IIC-IOPD IN OPD TO DCO-IIC-IOPD IN DCO.
           MOVE 'DCO-CIC-IOPD' TO FIO-AKEY.
           MOVE FIO-GET-NLS TO FIO-CMND.
           PERFORM DAP-FIO-DCO.
           IF NOT ( FIO-STAT-OKS AND
                    DCO-CAI-IOPD IN DCO = OPD-CAI-IOPD IN OPD AND
                    DCO-IIC-IOPD IN DCO = OPD-IIC-IOPD IN OPD )
               MOVE 'DAP'        TO MSG-COD-SIST
               MOVE WSS-DCOCURRNEX TO MSG-COD-MENS
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS
               MOVE FIO-STAT-NEX TO FIO-STAT
           ELSE
               MOVE FIO-STAT TO PGM-STAT-DCO.
       FIN-BUS-DCO-CON-OPD.
           EXIT.

       BUS-OPD-CON-DCO SECTION.
       INI-BUS-OPD-CON-DCO.
           MOVE DCO-CAI-IOPD IN DCO TO OPD-CAI-IOPD IN OPD.
           MOVE DCO-IIC-IOPD IN DCO TO OPD-IIC-IOPD IN OPD.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM DAP-FIO-OPD.
           MOVE FIO-STAT TO PGM-STAT-OPD.
           IF NOT FIO-STAT-OKS
               MOVE 'DAP'        TO MSG-COD-SIST
               MOVE 'OPD    NEX' TO MSG-COD-MENS
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS
               MOVE FIO-STAT-NEX TO FIO-STAT
               GO TO FIN-BUS-OPD-CON-DCO.
           PERFORM BUS-CLI-CON-DCO.
           IF FIO-STAT = FIO-STAT-NEX
               GO TO FIN-BUS-OPD-CON-DCO.
       FIN-BUS-OPD-CON-DCO.
           EXIT.
           
       BUS-CLI-CON-DCO SECTION.
       INI-BUS-CLI-CON-DCO.
           MOVE DCO-CAI-ICLI IN DCO TO DBC-CAI-ICLI IN DBC.
           MOVE DCO-IIC-ICLI IN DCO TO DBC-IIC-ICLI IN DBC.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM SGC-FIO-DBC.
           MOVE FIO-STAT TO PGM-STAT-DBC.
           IF NOT FIO-STAT-OKS
               MOVE 'DAP'        TO MSG-COD-SIST
               MOVE 'CLI DBCNEX  ' TO MSG-COD-MENS
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS
               MOVE FIO-STAT-NEX TO FIO-STAT
           ELSE
               MOVE WSS-00  TO PGM-STAT-DBC
               MOVE DBC-GLS-NOMC IN DBC TO CPT-STRN
               PERFORM CPT-BLKS
               MOVE CPT-STRN TO DBC-GLS-NOMC IN DCO-FLD
                                DBC-GLS-NOMC IN DBC
               MOVE DBC-NUM-ICLI IN DBC TO DBC-NUM-ICLI IN DCO-FLD
               MOVE DBC-VRF-ICLI IN DBC TO DBC-VRF-ICLI IN DCO-FLD
               MOVE DBC-IND-ICLI IN DBC TO DBC-IND-ICLI IN DCO-FLD
               MOVE DBC-GLS-ICLI IN DBC TO DBC-GLS-ICLI IN DCO-FLD
               MOVE DBC-CAI-ICLI IN DBC TO DCO-CAI-ICLI IN DCO-FLD
               MOVE DBC-IIC-ICLI IN DBC TO DCO-IIC-ICLI IN DCO-FLD.
       FIN-BUS-CLI-CON-DCO.
           EXIT.
      *>>>> EOF
*% END
*% IF FIN_SCR_TRL
      *<<<< FIN_SCR_TRL
           IF PGM-STAT-DCO-OKS AND SCR-CMND = WSS-CON
               MOVE WSS-DCOPF7 TO MSG-COD-MENS
               MOVE 'DAP' TO MSG-COD-SIST
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MEN2.
      *>>>>
*% END
*% IF INI_PRO_CONF
      *<<<< INI_PRO_CONF
      *>>>>
*% END
*% IF FIN_SCR_TRL AND PGM_PQ
      *<<<< FIN_SCR_TRL AND PGM_PQ
      *>>>>
*% END
*% IF FIN_CMN_ING OR FIN_CMN_MOD
      *<<<< FIN_CMN_ING OR FIN_CMN_MOD
      
*% IF FIN_CMN_MOD
      *<<<< FIN_CMN_MOD
           IF SCR-CMND = 'MOD'
JFH1          PERFORM PUT-LAD-DES
               GO TO FIN-CMN-MOD.
      *>>>>
*% END
      *>>>>
*% END
*% IF FIN_CMN_ING OR FIN_CMN_MOD OR FIN_CMN_ELI
*% END
*% IF FND_KEY_NO
      *<<<< FND_KEY
      *>>>>
*% END
*% IF FIN_FND_KEY
      *<<<< FIN_FND_KEY
       END-FND-KEY.
      *>>>>
*% END
*% IF INI_SCR_TRL_PQ
      *<<<< INI_SCR_TRL_PQ
      *>>>>
*% END
*% IF CMN_ING
      *<<<< CMN_ING
           PERFORM RET-HDR.
           PERFORM PRO-ING-REG-LAD.           
      *>>>>
*% END
*% IF CMN_MOD
      *<<<< CMN_MOD
           PERFORM RET-HDR.
      *>>>>
*% END
*% IF CMN_ELI
      *<<<< CMN_ELI
           PERFORM PRO-ELI-REG-LAD.
      *>>>>
*% END
*% IF EOF
      *<<<< EOF
      *Entidades de GNS
       COPY GNSBVCOD.
       COPY GNSBVTAB.
       COPY GNSBGCPT.
       COPY GNSBGSTR.
      *Entidades de SGC
       COPY SGCBFDBC.
       COPY SGCBGCLI.
      *Entidades de DAP
       COPY DAPBFOPD.
       COPY DAPBFRCC.

       MSG-PF10 SECTION.
       INI-MSG-PF10.
      *GET-MSG Busca mensaje en tabla
           MOVE 'DAP' TO MSG-COD-SIST.
           PERFORM GET-MSG.
           MOVE MSG-GLS-DESC TO FRM-MEN2.
           MOVE FRM-MEN2     TO DCO-GLS-MEN2.
       FIN-MSG-PF10.
           EXIT.
      *>>>>
*% END
*% IF EOF_PU
      *<<<< EOF_PU
JFH1   COPY DAPBFLAD.
      
       RET-HDR SECTION.
       INI-RET-HDR.
           MOVE SPACES TO DCO-GLS-FLAG IN DCO.
           PERFORM GET-FHOY.
      *    Fecha Transaccion
           IF DCO-FEC-FTRN IN DCO-FLD NOT > ZEROES
               MOVE HOY-FHOY TO DCO-FEC-FTRN IN DCO
           ELSE
               MOVE DCO-NUM-DTRN IN DCO-FLD TO WSS-NUM-DAMD
               MOVE DCO-NUM-MTRN IN DCO-FLD TO WSS-NUM-MAMD
               MOVE DCO-NUM-STRN IN DCO-FLD TO WSS-NUM-SAMD
               MOVE DCO-NUM-ATRN IN DCO-FLD TO WSS-NUM-AAMD
               MOVE WSS-FEC-FAMD TO DCO-FEC-FTRN IN DCO.
      *    Hora Transaccion
           IF DCO-FEC-FTRN IN DCO-FLD NOT > ZEROES AND 
              DCO-HRA-HRTR IN DCO-FLD NOT > ZEROES
               MOVE HOY-HHOY TO DCO-HRA-HRTR IN DCO.
      *    Codigo Origen transaccion
           IF DCO-COD-OTRN IN DCO-FLD NOT > SPACES
               MOVE SCR-OTRN TO DCO-COD-OTRN IN DCO.
      *    Autor Transaccion
           IF DCO-COD-ATRN IN DCO-FLD NOT > SPACES
               MOVE SCR-USER TO DCO-COD-ATRN IN DCO.
           IF DCO-COD-TACC IN DCO-FLD NOT > SPACES AND
              SCR-CCPP = WSS-ING
               MOVE WSS-I TO DCO-COD-TACC IN DCO.
           IF DCO-COD-TACC IN DCO-FLD NOT > SPACES AND
              SCR-CCPP = WSS-MOD
               MOVE WSS-M TO DCO-COD-TACC IN DCO.
       FIN-RET-HDR.
           EXIT.

JFH1  *INICIO: Codigo para Log LAD/ING/MOD/ELI.
       PUT-LAD-ANT SECTION.
       INI-MOD-ANT-REG-LAD.
           MOVE SPACES TO LAD.
           MOVE WSS-MOD TO LAD-COD-EVEN IN LAD.
           MOVE WSS-M   TO LAD-COD-TACC IN LAD
                          LAD-COD-STAT IN LAD.
           MOVE WSS-ANT TO LAD-COD-INST IN LAD.
           MOVE WSS-UNO TO LAD-NUM-CLAD IN LAD
                     LAD-NUM-COPD IN LAD
                     LAD-NUM-CCLI IN LAD
                     LAD-NUM-CAUT IN LAD.
           PERFORM PRO-GRABA-REG-LAD.
       FIN-MOD-ANT-REG-LAD.
            EXIT.

       PUT-LAD-DES SECTION.
       INI-MOD-DES-REG-LAD.
           MOVE SPACES TO LAD.
           MOVE WSS-MOD TO LAD-COD-EVEN IN LAD.
           MOVE WSS-M   TO LAD-COD-TACC IN LAD
                          LAD-COD-STAT IN LAD.
           MOVE WSS-DES TO LAD-COD-INST IN LAD.
           MOVE WSS-DOS TO LAD-NUM-CLAD IN LAD
                     LAD-NUM-COPD IN LAD
                     LAD-NUM-CCLI IN LAD
                     LAD-NUM-CAUT IN LAD.
           PERFORM PRO-GRABA-REG-LAD.
       FIN-MOD-DES-REG-LAD.
           EXIT.

       PRO-ING-REG-LAD SECTION.
       INI-ING-REG-LAD.
           MOVE SPACES TO LAD.
           MOVE WSS-ING TO LAD-COD-EVEN IN LAD.
           MOVE WSS-I   TO LAD-COD-TACC IN LAD
                          LAD-COD-STAT IN LAD.
           MOVE WSS-NA  TO LAD-COD-INST IN LAD.
           MOVE WSS-UNO TO LAD-NUM-CLAD IN LAD
                     LAD-NUM-COPD IN LAD
                     LAD-NUM-CCLI IN LAD
                     LAD-NUM-CAUT IN LAD.
           PERFORM PRO-GRABA-REG-LAD.
       FIN-ING-REG-LAD.
           EXIT.

       PRO-ELI-REG-LAD SECTION.
       INI-ING-REG-LAD.
           MOVE SPACES TO LAD.
           MOVE WSS-ELI TO LAD-COD-EVEN IN LAD.
           MOVE WSS-E   TO LAD-COD-TACC IN LAD
                          LAD-COD-STAT IN LAD.
           MOVE WSS-NA  TO LAD-COD-INST IN LAD.
           MOVE WSS-UNO TO LAD-NUM-CLAD IN LAD
                     LAD-NUM-COPD IN LAD
                     LAD-NUM-CCLI IN LAD
                     LAD-NUM-CAUT IN LAD.
           PERFORM PRO-GRABA-REG-LAD.
       FIN-ELI-REG-LAD.
           EXIT.           

       PRO-GRABA-REG-LAD SECTION.
       INI-GRABA-REG-LAD.
           MOVE WSS-1PT0 TO LAD-COD-VERS IN LAD.
           MOVE WSS-DCO  TO LAD-COD-ENTF IN LAD
                            LAD-COD-ENTO IN LAD
                            LAD-COD-ENTC IN LAD
                            LAD-COD-ENTA IN LAD
                            LAD-COD-ENTI IN LAD.
           PERFORM GET-FHOY.                            
           MOVE HOY-FHOY TO LAD-FEC-FTRN IN LAD
                            LAD-FEC-FLAD IN LAD
                            LAD-FEC-FOPD IN LAD
                            LAD-FEC-FCLI IN LAD
                            LAD-FEC-FAUT IN LAD.
           MOVE HOY-HHOY TO LAD-HRA-HRTR IN LAD
                            LAD-HRA-HLAD IN LAD
                            LAD-HRA-HOPD IN LAD
                            LAD-HRA-HCLI IN LAD
                            LAD-HRA-HAUT IN LAD.
           MOVE DCO-CIC-IOPD IN DCO TO LAD-CIC-IOPD IN LAD.
           MOVE EIBTRMID            TO LAD-COD-OTRN IN LAD.
           MOVE SCR-USER            TO LAD-COD-ATRN IN LAD
                                       LAD-COD-AUTO IN LAD.
           MOVE EIBTRNID            TO LAD-COD-TCIC IN LAD.
           MOVE SCR-CMND            TO LAD-COD-CMND IN LAD.
           MOVE DCO-CIC-ICLI IN DCO TO LAD-CIC-ICLI IN LAD.
           MOVE WSS-CMT-LAD         TO  LAD-COD-COME IN LAD.
           MOVE DCO                 TO  LAD-COD-CONT IN LAD.
           MOVE FIO-PUT TO FIO-CMND.
           PERFORM DAP-FIO-LAD.
           IF NOT FIO-STAT-OKS
               MOVE WSS-ERRORPUTLAD TO MSG-COD-MENS
               MOVE 'DAP' TO MSG-COD-SIST
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MEN2
               GO TO FIN-GRABA-REG-LAD.
       FIN-GRABA-REG-LAD.
           EXIT.
      *>>>>
*% END
