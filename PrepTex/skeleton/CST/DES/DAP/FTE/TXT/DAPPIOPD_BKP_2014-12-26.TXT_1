*%! Codigo adicional para DAPPIOPD
*%! PGM_PTC = TRUE
*% LARGO_MI_COMMAREA = 500
*% IF FIN_SCR_VARI
      *<<<< FIN_SCR_VARI
      * ISP: VARIABLES EN CMMA, COMUNES PARA ENGANCHE PROGRAMAS OPD-RCC-CAD
       COPY DAPWGENG.
      * ISP: VARIABLES EN CMMA, COMUNES PARA PROGRAMAS PI,PQ,PU ( OPD )
       COPY DAPWG005.
      *>>>> 
*% END
*% IF WSS
      *<<<< WSS
       COPY DAPBRMSC.
       COPY DAPBRPOD.
       COPY DAPBRCAD.
       COPY DAPBRRCC.
       COPY SGCBRDBC.
       COPY SGCBRRCD.
       COPY SGCBROPE.
       COPY DAPWGPMP.
       COPY GNSWGCPT.
       COPY GNSWGSTR.
       COPY GNSWGPES.

       01  WSS-VARI.
      * TRANSACCION A ENGANCHARSE PARA INGRESO
           03 WSS-ITRN        VALUE 'PU09'        PIC X(04).
           03 WSS-IPGM        VALUE 'DAPPUOPD'    PIC X(08).
      *>>>> END WSS
*% END
*% IF WSS_DTC
      *<<<< WSS_DTC
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-POD-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-CAD-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-RCC-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-DBC-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-RCD-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-OPE-REQA==.
      *>>>> END WSS_DTC
*% END
*%! NO INCLUYE PROXIMO LABEL VUELVE SIEMPRE A PQ BAJO 'VRF' (AUNQUE ABORTE PF3)
*% IF WSS_ENGANCHE
      *<<<< WSS_ENGANCHE 
      * COMPONE MENSAJE DE ACUERDO A :
      *    ENTIDA A PROCESAR                 ( OPD )
      *    COMANDO QUE SE PROCESA            ( ING O MOD )
      *    ESTADO DESPUES DE APLICAR COMANDO ( I O V )
      *    ASIGNACION O NO DE CIC            ( S O N )
      *    DEBEN EXISTIR LAS COMBINACIONES DE MENSAJES RESPECTIVAS
           03  WSS-MSG-OPD.
               05 WSS-MSG-OPD-OPD                  PIC X(03).
               05 WSS-MSG-OPD-CMD                  PIC X(03).
               05 WSS-MSG-OPD-STS                  PIC X(01).
               05 WSS-MSG-OPD-CIC                  PIC X(01).
           03  WSS-CPT-NOMB VALUE SPACES.
               05  WSS-CPT-DESC                    PIC X(40).
               05  WSS-CPT-CAI                     PIC X(04).
               05  WSS-CPT-IIC                     PIC X(08).
               05  WSS-GLS-DATA                    PIC X(28).
           03  WSS-CPT-NOMB-R  REDEFINES  WSS-CPT-NOMB PIC X(80).
      *>>>> END WSS_ENGANCHE
*% END
*% IF INI_FIO
      *<<<< INI_FIO
      *     IF SCR-INST = SCR-INST-HKY
      *          PERFORM BUS-OFI-CSSN.

      * ASUME QUE VALOR DE CAMBIO VALE 1, PARA PODER MULTIPLICAR/DIVIDIR
      * SIN PREOCUPARSE DE LA MONEDA
           IF SCR-DESDE-CMN
               PERFORM GET-V001
               PERFORM BUS-OFI-CSSN
               PERFORM GET-SON
               PERFORM GET-TAD
               PERFORM GET-GARA-N
               PERFORM GET-CUST-E
               MOVE 1 TO SCR-SGV-VCAM
               MOVE SPACES TO SCR-OPD-VIGE
                              SCR-CIC-VCAM.

      * NO SE TOMAN LOS DATOS DESDE ARCHIVO RPF
           MOVE WSS-IPGM TO SCR-PROV.
           MOVE WSS-ITRN TO SCR-NTRV.

           IF SCR-DESDE-CMN
               MOVE 'O' TO SCR-IND-OOD
               MOVE 1 TO SCR-IPRO
           ELSE
               MOVE SCR-NEMO TO FRM-COD-OPCI IN OPD-FLD.
      *     ELSE
      *     IF SCR-INST-EXT = WSS-INST-FTER-CIC
      *         MOVE WSS-INST-NULL TO SCR-INST-EXT
      *         PERFORM ING-FTER-CIC.
       FIN-INI-FIO.
      *>>>> END INI_FIO
*% END
*% IF INI_HBL_IKY OR INI_HBL_KEY
      *<<<< INI_HBL_IKY OR INI_HBL_KEY
           MOVE SPACES TO SCR-CIC-VCAM
                          SCR-IND-MCLI
                          SCR-IND-MCAD.
           MOVE 1      TO SCR-SGV-VCAM.
      *>>>>
*% END
*% IF FIN_HBL_FLD
      *<<<< FIN_HBL_FLD
      * ISP: DAPBG003
           PERFORM MOV-POD.

           MOVE OPD-FEC-FCMP IN OPD-FLD TO OPD-FEC-FREA IN OPD-FLD.
           MOVE OPD-FEC-FCMP IN OPD-FLD TO OPD-FEC-FCTB IN OPD-FLD.

      * ISP: DAPBG002
           PERFORM PRO-OPD-POD.
           MOVE FRM-CPIM-UBY TO OPD-COD-TOPD-ATR IN OPD-FLD
                                OPD-COD-AOPD-ATR IN OPD-FLD
                                OPD-COD-VCAM-ATR IN OPD-FLD.
           MOVE 'N'   TO OPD-COD-IONP IN OPD-FLD.
      * JVM: Mantencion 11/06/1992
           IF OPD-NUM-RETD IN OPD-FLD > ZEROES
              MOVE 'D'   TO OPD-IND-RETD IN OPD-FLD.
      * JVM: Fin

           MOVE SCR-COD-OFIC TO OPD-COD-OFIC     IN OPD-FLD.
           MOVE FRM-CPIM-AEY TO OPD-COD-OFIC-ATR IN OPD-FLD.
      *<<<< END FIN_HBL_FLD
*% END
*% IF EOF
      *<<<< EOF

       BUS-OFI-CSSN SECTION.           
       INI-BUS-OFI-CSSN.
      *ISP: ELIMINAR ESTE CODIGO AL ENTREGAR AL BANCO, SOLO PARA DESARROLLO
      *     IF SCR-IND-V001 = 'C'
                IF SCR-USER NOT > SPACES
                     MOVE 'RJUNCO' TO SCR-USER.

           MOVE SCR-USER TO USR-COD-USER IN USR.
           PERFORM VAL-USR.
           IF MSG-COD-MENS > SPACES
               MOVE 'USRCSSNNEX' TO MSG-COD-MENS
               PERFORM GOTO-CMN
           ELSE
               MOVE USR-COD-OFUS IN USR TO OFI-COD-OFIC IN OFI
               PERFORM BUS-OFI
               IF MSG-COD-MENS > SPACES
                   MOVE 'OFICSSNNEX' TO MSG-COD-MENS
                   PERFORM GOTO-CMN
               ELSE
                   MOVE USR-COD-OFUS IN USR TO SCR-COD-OFIC.
       FIN-BUS-OFI-CSSN.
           EXIT.

       GET-SON SECTION.
       INI-GET-SON.
           MOVE 'GNS' TO TAB-COD-SIST.
           MOVE 'SON' TO TAB-CIC-TTAB IN TAB.
           MOVE 'S'   TO TAB-CIC-CTAB IN TAB.
           MOVE 'TAB-CIC-TABL' TO FIO-AKEY.
           PERFORM BUS-TAB.
           IF MSG-COD-MENS > SPACES
               MOVE 'GNSSONSNEX' TO MSG-COD-MENS
               PERFORM GOTO-CMN
           ELSE
               MOVE TAB-COD-CTAB IN TAB TO SCR-SON-S.

           MOVE 'GNS' TO TAB-COD-SIST.
           MOVE 'SON' TO TAB-CIC-TTAB IN TAB.
           MOVE 'N'   TO TAB-CIC-CTAB IN TAB.
           MOVE 'TAB-CIC-TABL' TO FIO-AKEY.
           PERFORM BUS-TAB.
           IF MSG-COD-MENS > SPACES
               MOVE 'GNSSONNNEX' TO MSG-COD-MENS
               PERFORM GOTO-CMN
           ELSE
               MOVE TAB-COD-CTAB IN TAB TO SCR-SON-N.
       FIN-GET-SON.
           EXIT.

       GET-TAD SECTION.
       INI-GET-TAD.
           MOVE 'DAP' TO TAB-COD-SIST.
           MOVE 'TAD' TO TAB-CIC-TTAB IN TAB.
           MOVE 'M'   TO TAB-CIC-CTAB IN TAB.
           MOVE 'TAB-CIC-TABL' TO FIO-AKEY.
           PERFORM BUS-TAB.
           IF MSG-COD-MENS > SPACES
               MOVE 'DAPTADMNEX' TO MSG-COD-MENS
               PERFORM GOTO-CMN
           ELSE
               MOVE TAB-COD-CTAB IN TAB TO SCR-TAD-M.

           MOVE 'DAP' TO TAB-COD-SIST.
           MOVE 'TAD' TO TAB-CIC-TTAB IN TAB.
           MOVE 'T'   TO TAB-CIC-CTAB IN TAB.
           MOVE 'TAB-CIC-TABL' TO FIO-AKEY.
           PERFORM BUS-TAB.
           IF MSG-COD-MENS > SPACES
               MOVE 'DAPTADTNEX' TO MSG-COD-MENS
               PERFORM GOTO-CMN
           ELSE
               MOVE TAB-COD-CTAB IN TAB TO SCR-TAD-T.
       FIN-GET-TAD.
           EXIT.

       GET-V001 SECTION.
       INI-GET-V001.
           MOVE 'DAP' TO TAB-COD-SIST.
           MOVE 'VSN' TO TAB-COD-TTAB IN TAB.
           MOVE '001' TO TAB-COD-CTAB IN TAB.
           PERFORM BUS-TAB.
           IF MSG-COD-MENS > SPACES
      * ISP: VERSION 'B'ANCO
                MOVE 'B' TO SCR-IND-V001
           ELSE
      * ISP: VERSION 'C'ONSIST
                MOVE 'C' TO SCR-IND-V001.

       FIN-GET-V001.
           EXIT.

       GET-GARA-N SECTION.
       INI-GET-GARA-N.
           MOVE 'DAP' TO TAB-COD-SIST.
           MOVE 'GAR' TO TAB-CIC-TTAB IN TAB.
           MOVE 'N'   TO TAB-CIC-CTAB IN TAB.
           MOVE 'TAB-CIC-TABL' TO FIO-AKEY.
           PERFORM BUS-TAB.
           IF MSG-COD-MENS > SPACES
               MOVE 'DAPGARN' TO MSG-COD-MENS
               PERFORM GOTO-CMN
           ELSE
               MOVE TAB-COD-CTAB IN TAB TO SCR-COD-GARA-N.
       FIN-GET-GARA-N.
           EXIT.

       GET-CUST-E SECTION.
       INI-GET-CUST-E.
           MOVE 'DAP' TO TAB-COD-SIST.
           MOVE 'CUS' TO TAB-CIC-TTAB IN TAB.
           MOVE 'E'   TO TAB-CIC-CTAB IN TAB.
           MOVE 'TAB-CIC-TABL' TO FIO-AKEY.
           PERFORM BUS-TAB.
           IF MSG-COD-MENS > SPACES
               MOVE 'CICCUSENEX' TO MSG-COD-MENS
               PERFORM GOTO-CMN
           ELSE
               MOVE TAB-COD-CTAB IN TAB TO SCR-COD-CUST-E.
       FIN-GET-CUST-E.
           EXIT.

       GOTO-CMN SECTION.
       INI-GOTO-CMN.
           MOVE 'DAP' TO MSG-COD-SIST.
           PERFORM GET-MSG.
           MOVE MSG-GLS-DESC TO FRM-MENS.
           PERFORM SCR-MSSG.
           MOVE SCR-INST-HCM TO SCR-INST.
           PERFORM SCR-COM.
       FIN-GOTO-CMN.
           EXIT.

       COPY DAPBG001.
       COPY DAPBG002.
       COPY DAPBG003.
       COPY DAPBGMPT.
       COPY DAPBFPOD.
       COPY DAPBFCAD.
       COPY DAPBFRCC.
       COPY SGCBFDBC.
       COPY SGCBFRCD.
       COPY SGCBFOPE.
      *>>>> END EOF
*% END
*%! NO INCLUYE PROXIMO LABEL
*% IF EOF_ENGANCHE
      *<<<< EOF_ENGANCHE

      * MSG-ADA SECTION.
      * INI-MSG-ADA.
      *     MOVE MSG-GLS-DESC   TO WSS-CPT-DESC.
      *     MOVE WSS-CPT-NOMB-R TO CPT-STRN.
      *     PERFORM CPT-BLKS.
      *     MOVE CPT-STRN       TO FRM-MENS.
      * FIN-MSG-ADA.
      *     EXIT.
      * COPY GNSBGCPT.
      * COPY GNSBGSTR.
      *  CODIGO ADICIONAL PARA ENGANCHE PROGRAMAS

      * ING-FTER-CIC SECTION.
      * INI-ING-FTER-CIC.
      *     PERFORM ING-SETE.
      *     MOVE SCR-INST-GKY TO SCR-INST.
      *     PERFORM HBL-KEY.
      *     PERFORM SCR-CLRA-OPD.
      *     PERFORM EDT-KEY-OPD.
      *     PERFORM EDT-FLD-OPD.

      *     MOVE 'OPD'         TO WSS-MSG-OPD-OPD.
      *     MOVE SCR-CCPP      TO WSS-MSG-OPD-CMD.
      *     MOVE 'I'           TO WSS-MSG-OPD-STS.
      *     MOVE SCR-IND-OCIC  TO WSS-MSG-OPD-CIC.
      *     MOVE 'DAP'       TO MSG-COD-SIST.
      *     MOVE WSS-MSG-OPD TO MSG-COD-MENS.
      *     PERFORM GET-MSG.
      *     IF SCR-IND-OCIC = 'S'
      *         MOVE SCR-CAI-IOPD TO WSS-CPT-CAI
      *         MOVE SCR-IIC-IOPD TO WSS-CPT-IIC.
      *     PERFORM MSG-ADA.

      *     MOVE FRM-MENS TO OPD-GLS-MENS IN OPD-FLD.
      *     MOVE SPACES TO SCR-CIC-IOPD
      *                    SCR-VEC-ENG
      *                    SCR-VEC-FST
      *                    SCR-IND-EOV
      *                    SCR-INST-EXT
      *                    SCR-MENS-EXT.
      *     MOVE WSS-NEMO(1) TO SCR-NEMO.
      *     PERFORM SCR-INIT.
      *     PERFORM SCR-EXIT.
      * FIN-ING-FTER-CIC.
      *     EXIT.

      * ING-SETE SECTION.
      * INI-ING-SETE.
      *     PERFORM CRG-TBL-ENG.
      *     MOVE WSS-NTRN(SCR-IPRO) TO SCR-NTRN.
      *     MOVE WSS-PROG(SCR-IPRO) TO SCR-PROG.
      *     MOVE WSS-NMAP(SCR-IPRO) TO SCR-NMAP.
      *     MOVE WSS-NLIB(SCR-IPRO) TO SCR-NLIB.
      * FIN-ING-SETE.
      *     EXIT.

      * SCR-INIT SECTION.
      * INI-SCR-INIT.
      *     MOVE 3  TO FRM-PLIN.
      *     MOVE 19 TO FRM-NLIN.
      *     MOVE FRM-CLR-FRM TO FRM-CMND.
      *     PERFORM GNS-PRO-FRM.
      *     MOVE FRM-SINI-DBNF TO FRM-SINI.
      *     MOVE SCR-NMAP TO FRM-NAME.
      *     MOVE SCR-NLIB TO FRM-NLIB.
      *     MOVE OPD-FLD TO FRM-DFLD.
      *     MOVE FRM-INI TO FRM-CMND.
      *     PERFORM GNS-PRO-FRM.
      * FIN-SCR-INIT.
      *     EXIT.

      *>>>> END EOF_ENGANCHE
*% END
