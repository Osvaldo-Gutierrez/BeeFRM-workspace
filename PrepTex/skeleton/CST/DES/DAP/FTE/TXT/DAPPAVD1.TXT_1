*%! Codigo adicional para DAPPAVD1
*% INC_FIO = TRUE
*% IF SETTAG
*% FNCPQ = "080311"
*% VSNPQ = "08.09.03"
*% FNCPU = "080311"
*% VSNPU = "08.09.03"
*% END
*% NO_TIENE_TIMESTAMP = TRUE
*% NO_HDR_CST = TRUE
*% PGM_PTC = TRUE
*% INCLUDE 'GNSSRC:MANEJO_VSI.SRC'
*% IF WSS
      *<<<< WSS
       COPY DAPWXVD1.
       77  WSS-CTE-IXG-PES            VALUE  1 PIC 9(02).
       77  WSS-CTE-IXV-PES-PES        VALUE  1 PIC 9(02).

       77  WSS-CTE-IXG-UFS            VALUE  2 PIC 9(02).
       77  WSS-CTE-IXV-UFS-UFS        VALUE  3 PIC 9(02).
       77  WSS-CTE-IXV-UFS-PES        VALUE  4 PIC 9(02).

       77  WSS-CTE-IXG-ICP            VALUE  3 PIC 9(02).
       77  WSS-CTE-IXV-ICP-ICP        VALUE  5 PIC 9(02).
       77  WSS-CTE-IXV-ICP-PES        VALUE  6 PIC 9(02).

       77  WSS-CTE-IXG-DOL            VALUE  4 PIC 9(02).
       77  WSS-CTE-IXV-DOL-DOL        VALUE  7 PIC 9(02).
       77  WSS-CTE-IXV-DOL-PES        VALUE  8 PIC 9(02).

       77  WSS-CTE-IXG-EUR            VALUE  5 PIC 9(02).
       77  WSS-CTE-IXV-EUR-EUR        VALUE  9 PIC 9(02).
       77  WSS-CTE-IXV-EUR-PES        VALUE 10 PIC 9(02).

       77  WSS-CTE-IXG-FSU            VALUE  6 PIC 9(02).
       77  WSS-CTE-IXV-FSU-FSU        VALUE 11 PIC 9(02).
       77  WSS-CTE-IXV-FSU-PES        VALUE 12 PIC 9(02).

       77  WSS-CTE-MAX-MTR-MON        VALUE   12  PIC 9(03).
       01  WSS-MTR-MON.
           03  WSS-VEC-MON.
               05 WSS-VEC-MON-ELM      OCCURS 12 TIMES.
                  07 WSS-MTR-VCAM      PIC X(06).
                  07 WSS-MTR-MONE      PIC X(06).
                  07 WSS-MTR-TOTO      PIC 9(05).
                  07 WSS-MTR-TOTM      PIC 9999999999999V9999.
                  07 WSS-MTR-TOTP      PIC 9999999999999V9999.

       77  WSS-VD1-NUM-CORR VALUE ZEROES PIC 9(05).
       77  WSS-AKEY  VALUE 'KEY-NUL'        PIC X(32).
       77  WSS-OFIO  VALUE SPACES           PIC X(03).
      * FECHAS DESDE HASTA DE PANTALLA PARA COMPARAR
       01  WSS-FEC-FRM.
           05 WSS-FRM-FEC-FDES.
              07 WSS-FRM-NUM-SDES           PIC 9(02).
              07 WSS-FRM-NUM-ADES           PIC 9(02).
              07 WSS-FRM-NUM-MDES           PIC 9(02).
              07 WSS-FRM-NUM-DDES           PIC 9(02).

           05 WSS-FRM-FEC-FHAS.
              07 WSS-FRM-NUM-SHAS           PIC 9(02).
              07 WSS-FRM-NUM-AHAS           PIC 9(02).
              07 WSS-FRM-NUM-MHAS           PIC 9(02).
              07 WSS-FRM-NUM-DHAS           PIC 9(02).


      *>>>> WSS
*% END
*% IF WSS_DTC
      *<<<< WSS_DTC
      *>>>> WSS_DTC
*% END
*% IF INI_FIO
      *<<<< INI_FIO
           MOVE TSK-TERM-ALF    TO VX1-COD-TERM.

*% IF PGM_PQ
           MOVE '0999  ' TO 
                 WSS-MTR-VCAM  IN WSS-MTR-MON ( WSS-CTE-IXG-PES ).
           MOVE '$     ' TO
                 WSS-MTR-MONE  IN WSS-MTR-MON ( WSS-CTE-IXG-PES ).

           MOVE '0998  ' TO
                 WSS-MTR-VCAM  IN WSS-MTR-MON ( WSS-CTE-IXG-UFS ).
           MOVE 'UF    ' TO
                 WSS-MTR-MONE  IN WSS-MTR-MON ( WSS-CTE-IXG-UFS ).

           MOVE '0993  ' TO
                 WSS-MTR-VCAM  IN WSS-MTR-MON ( WSS-CTE-IXG-ICP ).
           MOVE 'ICP   ' TO
                 WSS-MTR-MONE  IN WSS-MTR-MON ( WSS-CTE-IXG-ICP ).

           MOVE '1013  ' TO
                 WSS-MTR-VCAM  IN WSS-MTR-MON ( WSS-CTE-IXG-DOL ).
           MOVE 'US$   ' TO
                 WSS-MTR-MONE  IN WSS-MTR-MON ( WSS-CTE-IXG-DOL ).

           MOVE '1142  ' TO
                 WSS-MTR-VCAM  IN WSS-MTR-MON ( WSS-CTE-IXG-EUR ).
           MOVE 'E     ' TO
                 WSS-MTR-MONE  IN WSS-MTR-MON ( WSS-CTE-IXG-EUR ).

           PERFORM CLR-TOT VARYING FRM-IFLD FROM 1 BY 1 UNTIL 
                                   FRM-IFLD > WSS-CTE-MAX-MTR-MON.

*% END
      *>>>> INI_FIO
*% END
*% IF SCR_GKEY_VAL_IKY OR SCR_GIKY_VAL_IKY OR FIN_GET_CON OR SCR_GFLD_VAL_MKY OR FIN_GET_ACC OR FIN_GET_CON OR FIN_SCR_GCNF
           PERFORM SET-KEY.
*% END
*% IF FND_KEY
      *<<<< FND_KEY
      * INICIO DE BUSQUEDA DE PRIMER REGISTRO BAJO MTI
      
           MOVE FRM-NUM-DDES  IN VD1-FLD TO WSS-FRM-NUM-DDES.
           MOVE FRM-NUM-MDES  IN VD1-FLD TO WSS-FRM-NUM-MDES.
           MOVE FRM-NUM-SDES  IN VD1-FLD TO WSS-FRM-NUM-SDES.
           MOVE FRM-NUM-ADES  IN VD1-FLD TO WSS-FRM-NUM-ADES.
      
           MOVE FRM-NUM-DHAS  IN VD1-FLD TO WSS-FRM-NUM-DHAS.
           MOVE FRM-NUM-MHAS  IN VD1-FLD TO WSS-FRM-NUM-MHAS.
           MOVE FRM-NUM-SHAS  IN VD1-FLD TO WSS-FRM-NUM-SHAS.
           MOVE FRM-NUM-AHAS  IN VD1-FLD TO WSS-FRM-NUM-AHAS.
      
           IF NOT ( SCR-CMND = 'CON' AND
                   ( SCR-OFRM-SRV OR
                     FRM-IND-FMTI IN VD1-FLD = 'S'
                    )
                   )
           GO TO NOT-FND-KEY.
      
           PERFORM SET-KEY.
           MOVE FIO-GET-NLS TO FIO-CMND.
           PERFORM DAP-FIO-VD1.
           IF NOT FIO-STAT-OKS
               MOVE '23' TO FIO-STAT
               MOVE FIO-STAT TO PGM-STAT-VD1
               GO TO FIN-FND-KEY.
      
           IF WSS-OFIO > SPACES
              IF NOT ( WSS-OFIO =
                       VD1-COD-OFIO IN VD1 
                           AND
                       VD1-FEC-FVEE IN VD1 NOT <
                   WSS-FRM-FEC-FDES
                          AND
                       VD1-FEC-FVEE IN VD1 NOT >
                   WSS-FRM-FEC-FHAS
                     )
                   MOVE '23' TO FIO-STAT
                   MOVE FIO-STAT TO PGM-STAT-VD1
                   GO TO FIN-FND-KEY.
      
           IF WSS-OFIO NOT > SPACES
               IF NOT ( VD1-COD-EJEE IN VD1-FLD =
                        VD1-COD-EJEE IN VD1 
                           AND
                       VD1-FEC-FVEE IN VD1 NOT <
                   WSS-FRM-FEC-FDES
                          AND
                       VD1-FEC-FVEE IN VD1 NOT >
                   WSS-FRM-FEC-FHAS
                      )
                   MOVE '23' TO FIO-STAT
                   MOVE FIO-STAT TO PGM-STAT-VD1
                   GO TO FIN-FND-KEY.
      
       NOT-FND-KEY.
      
      
      *>>>> FND_KEY
*% END
*% IF FIN_FND_KEY
      *<<<< FIN_FND_KEY
           IF FIO-STAT-OKS
               MOVE FIO-GET-NLS TO FIO-CMND
               PERFORM DAP-FIO-VD1.
      *>>>> FIN_FND_KEY
*% END
*% IF FIN_PUT_SCR
      *<<<< FIN_PUT_SCR

           IF SCR-CMND NOT = 'CON'
                GO TO END-PUT-SCR.

           MOVE 'N' TO FRM-COD-HMAS IN VD1-FLD.

           IF NOT ( SCR-OFRM-SRV OR
                    FRM-IND-FMTI IN VD1-FLD = 'S' )
                    GO TO END-PUT-SCR.

      * BUSCA EL PRIMER REGISTRO EN SOLICITUD
      * DE HAY MAS
           IF ( SCR-OFRM-SRV OR
                FRM-IND-FMTI = 'S' )
                  IF FRM-CAI-IOPD IN VD1-FLD NOT > SPACES
                      PERFORM PRO-VD1
                  ELSE
                      MOVE FIO-GET-NXT TO FIO-CMND
                      PERFORM DAP-FIO-VD1
                      IF NOT FIO-STAT-OKS
                          MOVE 'DAP' TO MSG-COD-SIST
                          MOVE 'VD1NONXT' TO MSG-COD-MENS
                          PERFORM GET-MSG
                          MOVE MSG-GLS-DESC TO FRM-MENS
                          MOVE FRM-SUAR-MAL TO FRM-SUAR
                          MOVE 'S' TO SCR-IERR
                          GO TO FIN-PUT-SCR
                      ELSE
                          PERFORM PRO-VD1.

       CIC-PUT-SCR.
           MOVE FIO-GET-NXT TO FIO-CMND.
           PERFORM DAP-FIO-VD1.
           IF NOT FIO-STAT-OKS
               GO TO EXT-PUT-SCR.
      
           IF WSS-OFIO  > SPACES
              IF ( WSS-OFIO =
                   VD1-COD-OFIO IN VD1
                           AND
                   VD1-COD-EJEO IN VD1-FLD =
                   VD1-COD-EJEO IN VD1 
                           AND
                       VD1-FEC-FVEE IN VD1 NOT <
                   WSS-FRM-FEC-FDES
                          AND
                       VD1-FEC-FVEE IN VD1 NOT >
                   WSS-FRM-FEC-FHAS
                  )
                      PERFORM PRO-VD1
                      IF VX1-IDX-VX1-OCC = VX1-TOT-VX1-OCC
                          PERFORM PRO-ULT-VD1
                     ELSE
                         GO TO CIC-PUT-SCR.
      
           IF WSS-OFIO NOT > SPACES
               IF ( VD1-COD-EJEO IN VD1-FLD =
                    VD1-COD-EJEO IN VD1
                           AND
                       VD1-FEC-FVEE IN VD1 NOT <
                   WSS-FRM-FEC-FDES
                          AND
                       VD1-FEC-FVEE IN VD1 NOT >
                   WSS-FRM-FEC-FHAS
                  )
                      PERFORM PRO-VD1
                      IF VX1-IDX-VX1-OCC = VX1-TOT-VX1-OCC
                          PERFORM PRO-ULT-VD1
                     ELSE
                         GO TO CIC-PUT-SCR.
       EXT-PUT-SCR.

           MOVE VX1-IDX-VX1-OCC TO FRM-NUM-TOCC IN VD1-FLD.

           IF VX1-PUT-QUE = 'S' AND
              FRM-IND-FMTI IN VD1-FLD NOT = 'T'
                 PERFORM PUT-TS-VX1.

           MOVE WSS-MTR-MONE IN WSS-MTR-MON ( WSS-CTE-IXG-PES ) TO 
                FRM-GLS-TOT1.

           MOVE WSS-MTR-MONE IN WSS-MTR-MON ( WSS-CTE-IXG-UFS ) TO
                FRM-GLS-TOT2.

           MOVE WSS-MTR-MONE IN WSS-MTR-MON ( WSS-CTE-IXG-ICP ) TO
                FRM-GLS-TOT3.

           MOVE WSS-MTR-MONE IN WSS-MTR-MON ( WSS-CTE-IXG-DOL ) TO
                FRM-GLS-TOT4.

           MOVE WSS-MTR-MONE IN WSS-MTR-MON ( WSS-CTE-IXG-EUR ) TO
               FRM-GLS-TOT5.

           MOVE WSS-MTR-TOTO IN WSS-MTR-MON ( WSS-CTE-IXG-PES ) TO
                FRM-NUM-TOP1.

           MOVE WSS-MTR-TOTO IN WSS-MTR-MON ( WSS-CTE-IXG-UFS ) TO
                FRM-NUM-TOP2.

           MOVE WSS-MTR-TOTO IN WSS-MTR-MON ( WSS-CTE-IXG-ICP ) TO
                FRM-NUM-TOP3.

           MOVE WSS-MTR-TOTO IN WSS-MTR-MON ( WSS-CTE-IXG-DOL ) TO
                FRM-NUM-TOP4.

           MOVE WSS-MTR-TOTO IN WSS-MTR-MON ( WSS-CTE-IXG-EUR ) TO
                FRM-NUM-TOP5.

           MOVE WSS-MTR-TOTM IN WSS-MTR-MON ( WSS-CTE-IXV-PES-PES ) TO
                FRM-VAL-TOT1.

           MOVE WSS-MTR-TOTM IN WSS-MTR-MON ( WSS-CTE-IXV-UFS-UFS ) TO
                FRM-VAL-TOT3.

           MOVE WSS-MTR-TOTM IN WSS-MTR-MON ( WSS-CTE-IXV-UFS-PES ) TO
                FRM-VAL-TOT4.

           MOVE WSS-MTR-TOTM IN WSS-MTR-MON ( WSS-CTE-IXV-ICP-ICP ) TO
                FRM-VAL-TOT5.

           MOVE WSS-MTR-TOTM IN WSS-MTR-MON ( WSS-CTE-IXV-ICP-PES ) TO
                FRM-VAL-TOT6.

           MOVE WSS-MTR-TOTM IN WSS-MTR-MON ( WSS-CTE-IXV-DOL-DOL ) TO
                FRM-VAL-TOT7.

           MOVE WSS-MTR-TOTM IN WSS-MTR-MON ( WSS-CTE-IXV-DOL-PES ) TO
                FRM-VAL-TOT8.

           MOVE WSS-MTR-TOTM IN WSS-MTR-MON ( WSS-CTE-IXV-EUR-EUR ) TO
                FRM-VAL-TOT9.

           MOVE WSS-MTR-TOTM IN WSS-MTR-MON ( WSS-CTE-IXV-EUR-PES ) TO
                FRM-VAL-TOTA.

       END-PUT-SCR.

      *>>>> FIN_PUT_SCR
*% END
*% IF FIO
      *<<<< FIO
      *COPY DAPBFVD1.
       COPY DAPIOVD1.
      *>>>> FIO
*% END
*% IF EOF
      *<<<< EOF
       SET-KEY SECTION.
       INI-SET-KEY.
           MOVE VD1-COD-OFIO IN VD1-FLD TO WSS-OFIO.
           IF VD1-COD-OFIO IN VD1-FLD > SPACES
               MOVE 'VD1-KEY-OFIO' TO WSS-AKEY
           ELSE
               MOVE 'VD1-KEY-EJEE' TO WSS-AKEY.
       FIN-SET-KEY.
           EXIT.
      *>>>> EOF
*% END
*% IF EOF_PQ
      *<<<< EOF_PQ
       CLR-TOT SECTION.
       INI-CLR-TOT.
           MOVE ZEROES TO 
                  WSS-MTR-TOTO IN WSS-MTR-MON ( FRM-IFLD )
                  WSS-MTR-TOTM IN WSS-MTR-MON ( FRM-IFLD )
                  WSS-MTR-TOTP IN WSS-MTR-MON ( FRM-IFLD ).
       FIN-CLR-TOT.
           EXIT.


       PRO-ULT-VD1 SECTION.
       INI-PRO-ULT-VD1.
      
           MOVE FIO-GET-NXT TO FIO-CMND.
           PERFORM DAP-FIO-VD1.
      
           IF NOT FIO-STAT-OKS
               GO TO FIN-PRO-ULT-VD1.
      
           IF WSS-OFIO > SPACES
              IF ( WSS-OFIO =
                   VD1-COD-OFIO IN VD1
                           AND
                   VD1-COD-EJEO IN VD1-FLD =
                   VD1-COD-EJEO IN VD1
                           AND
                       VD1-FEC-FVEO IN VD1 NOT <
                   WSS-FRM-FEC-FDES
                           AND
                       VD1-FEC-FVEO IN VD1 NOT >
                   WSS-FRM-FEC-FHAS
                 )
                     MOVE VD1-CAI-IOPO IN VD1 TO FRM-CAI-UOM1 IN VD1-FLD
                     MOVE VD1-IIC-IOPO IN VD1 TO FRM-IIC-UOM1 IN VD1-FLD
                     MOVE 'S' TO FRM-COD-HMAS IN VD1-FLD
                     GO TO FIN-PRO-ULT-VD1.
      
           IF WSS-OFIO NOT > SPACES
              IF ( VD1-COD-EJEE IN VD1-FLD =
                   VD1-COD-EJEE IN VD1
                           AND
                       VD1-FEC-FVEE IN VD1 NOT <
                   WSS-FRM-FEC-FDES
                          AND
                       VD1-FEC-FVEE IN VD1 NOT >
                   WSS-FRM-FEC-FHAS
                 )
                     MOVE VD1-CAI-IOPE IN VD1 TO FRM-CAI-UOM1 IN VD1-FLD
                     MOVE VD1-IIC-IOPE IN VD1 TO FRM-IIC-UOM1 IN VD1-FLD
                     MOVE 'S' TO FRM-COD-HMAS IN VD1-FLD
                     GO TO FIN-PRO-ULT-VD1.
      
       FIN-PRO-ULT-VD1.
           EXIT.
       PRO-VD1 SECTION.
       INI-PRO-VD1.
           ADD 1 TO VX1-IDX-VX1-TSQ.
           ADD 1 TO VX1-IDX-VX1-OCC.
      
           IF VD1-COD-VCAM IN VD1 =
              WSS-MTR-VCAM IN WSS-MTR-MON    ( WSS-CTE-IXG-PES )
                ADD 1                   TO
                 WSS-MTR-TOTO IN WSS-MTR-MON ( WSS-CTE-IXG-PES )
                ADD VD1-VAL-CAPT IN VD1 TO
                 WSS-MTR-TOTM IN WSS-MTR-MON ( WSS-CTE-IXV-PES-PES )
                ADD VD1-VAL-IPES IN VD1 TO
                 WSS-MTR-TOTP IN WSS-MTR-MON ( WSS-CTE-IXV-PES-PES )
           ELSE
           IF VD1-COD-VCAM IN VD1 =
              WSS-MTR-VCAM  IN WSS-MTR-MON   ( WSS-CTE-IXG-UFS )
                ADD 1                   TO
                 WSS-MTR-TOTO IN WSS-MTR-MON ( WSS-CTE-IXG-UFS )
                ADD VD1-VAL-CAPT IN VD1 TO
                 WSS-MTR-TOTM IN WSS-MTR-MON ( WSS-CTE-IXV-UFS-UFS )
                ADD VD1-VAL-IPES IN VD1 TO
                 WSS-MTR-TOTP IN WSS-MTR-MON ( WSS-CTE-IXV-UFS-PES )
           ELSE
           IF VD1-COD-VCAM IN VD1 =
              WSS-MTR-VCAM  IN WSS-MTR-MON   ( WSS-CTE-IXG-ICP )
                ADD 1                   TO
                 WSS-MTR-TOTO IN WSS-MTR-MON ( WSS-CTE-IXG-ICP )
                ADD VD1-VAL-CAPT IN VD1 TO
                 WSS-MTR-TOTM IN WSS-MTR-MON ( WSS-CTE-IXV-ICP-ICP )
                ADD VD1-VAL-IPES IN VD1 TO
                 WSS-MTR-TOTP IN WSS-MTR-MON ( WSS-CTE-IXV-ICP-PES )
           ELSE
           IF VD1-COD-VCAM IN VD1 =
              WSS-MTR-VCAM  IN WSS-MTR-MON   ( WSS-CTE-IXG-DOL )
                ADD 1                   TO
                 WSS-MTR-TOTO IN WSS-MTR-MON ( WSS-CTE-IXG-DOL )
                ADD VD1-VAL-CAPT IN VD1 TO
                 WSS-MTR-TOTM IN WSS-MTR-MON ( WSS-CTE-IXV-DOL-DOL )
                ADD VD1-VAL-IPES IN VD1 TO
                 WSS-MTR-TOTP IN WSS-MTR-MON ( WSS-CTE-IXV-DOL-PES )
           ELSE
           IF VD1-COD-VCAM IN VD1 =
              WSS-MTR-VCAM  IN WSS-MTR-MON   ( WSS-CTE-IXG-EUR )
                ADD 1                   TO
                 WSS-MTR-TOTO IN WSS-MTR-MON ( WSS-CTE-IXG-EUR )
                ADD VD1-VAL-CAPT IN VD1 TO
                 WSS-MTR-TOTM IN WSS-MTR-MON ( WSS-CTE-IXV-EUR-EUR )
                ADD VD1-VAL-IPES IN VD1 TO
                 WSS-MTR-TOTP IN WSS-MTR-MON ( WSS-CTE-IXV-EUR-PES ).
      
           IF WSS-OFIO > SPACES
               MOVE VD1-CAI-IOPO IN VD1 TO FRM-CAI-UOPD IN VD1-FLD
               MOVE VD1-IIC-IOPO IN VD1 TO FRM-IIC-UOPD IN VD1-FLD.
      
           IF WSS-OFIO NOT > SPACES
               MOVE VD1-CAI-IOPE IN VD1 TO FRM-CAI-UOPD IN VD1-FLD
               MOVE VD1-IIC-IOPE IN VD1 TO FRM-IIC-UOPD IN VD1-FLD.
      
           MOVE 'S' TO VX1-PUT-QUE.
      
           MOVE VD1-COD-OFIC IN VD1
             TO VX1-COD-OFIC IN
                VX1-MTI-VARI ( VX1-IDX-VX1-TSQ ).
      
           MOVE VD1-COD-EJEC IN VD1
             TO VX1-COD-BANQ IN
                VX1-MTI-VARI ( VX1-IDX-VX1-TSQ ).
      
           MOVE VD1-COD-EJEC IN VD1
             TO VX1-COD-EJEC IN
                VX1-MTI-VARI ( VX1-IDX-VX1-TSQ ).
      
           MOVE VD1-GLS-NOMC IN VD1
             TO VX1-GLS-NOMC IN
                VX1-MTI-VARI ( VX1-IDX-VX1-TSQ ).
      
           MOVE VD1-NUM-ICLI IN VD1
             TO VX1-NUM-ICLI-EDT.
           MOVE VX1-NUM-ICLI-EDT
             TO VX1-NUM-ICLI-ALF IN
                VX1-MTI-VARI ( VX1-IDX-VX1-TSQ ).
           MOVE VD1-VRF-ICLI IN VD1
             TO VX1-VRF-ICLI IN
                VX1-MTI-VARI ( VX1-IDX-VX1-TSQ ).
      
           MOVE VD1-IND-ICLI IN VD1
             TO VX1-IND-ICLI IN
                VX1-MTI-VARI ( VX1-IDX-VX1-TSQ ).
      
           MOVE VD1-GLS-ICLI IN VD1
             TO VX1-GLS-ICLI IN
                VX1-MTI-VARI ( VX1-IDX-VX1-TSQ ).
      
           MOVE VD1-COD-TOPD IN VD1
             TO VX1-COD-TOPD IN
                VX1-MTI-VARI ( VX1-IDX-VX1-TSQ ).
      
           MOVE VD1-COD-AOPD IN VD1
             TO VX1-COD-AOPD IN
                VX1-MTI-VARI ( VX1-IDX-VX1-TSQ ).
      
           MOVE VD1-GLS-COPD IN VD1
             TO VX1-GLS-COPD IN
                VX1-MTI-VARI ( VX1-IDX-VX1-TSQ ).
      
           MOVE VD1-COD-VCAM IN VD1
             TO VX1-COD-VCAM IN
                VX1-MTI-VARI ( VX1-IDX-VX1-TSQ ).
      
           MOVE VD1-GLS-VCAM IN VD1
             TO VX1-GLS-VCAM IN
                VX1-MTI-VARI ( VX1-IDX-VX1-TSQ ).
      
           MOVE VD1-NUM-DREA IN VD1
             TO VX1-NUM-DREA IN
                VX1-MTI-VARI ( VX1-IDX-VX1-TSQ ).

           MOVE VD1-NUM-MREA IN VD1
             TO VX1-NUM-MREA IN
                VX1-MTI-VARI ( VX1-IDX-VX1-TSQ ).

           MOVE VD1-NUM-SREA IN VD1
             TO VX1-NUM-SREA IN
                VX1-MTI-VARI ( VX1-IDX-VX1-TSQ ).

           MOVE VD1-NUM-AREA IN VD1
             TO VX1-NUM-AREA IN
                VX1-MTI-VARI ( VX1-IDX-VX1-TSQ ).
      
           MOVE VD1-NUM-DVEO IN VD1
             TO VX1-NUM-DVEO IN
                VX1-MTI-VARI ( VX1-IDX-VX1-TSQ ).
      
           MOVE VD1-NUM-MVEO IN VD1
             TO VX1-NUM-MVEO IN
                VX1-MTI-VARI ( VX1-IDX-VX1-TSQ ).
      
           MOVE VD1-NUM-SVEO IN VD1
             TO VX1-NUM-SVEO IN
                VX1-MTI-VARI ( VX1-IDX-VX1-TSQ ).
      
           MOVE VD1-NUM-AVEO IN VD1
             TO VX1-NUM-AVEO IN
                VX1-MTI-VARI ( VX1-IDX-VX1-TSQ ).
      
           MOVE VD1-CAI-IOPO IN VD1
             TO VX1-CAI-IOPO IN
                VX1-MTI-VARI ( VX1-IDX-VX1-TSQ ).
      
           MOVE VD1-IIC-IOPO IN VD1
             TO VX1-IIC-IOPO  IN
                VX1-MTI-VARI ( VX1-IDX-VX1-TSQ ).
      
           MOVE VD1-NUM-DVEE IN VD1
             TO VX1-NUM-DVEE IN
                VX1-MTI-VARI ( VX1-IDX-VX1-TSQ ).
      
           MOVE VD1-NUM-MVEE IN VD1
             TO VX1-NUM-MVEE IN
                VX1-MTI-VARI ( VX1-IDX-VX1-TSQ ).
      
           MOVE VD1-NUM-SVEE IN VD1
             TO VX1-NUM-SVEE IN
                VX1-MTI-VARI ( VX1-IDX-VX1-TSQ ).
      
           MOVE VD1-NUM-AVEE IN VD1
             TO VX1-NUM-AVEE IN
                VX1-MTI-VARI ( VX1-IDX-VX1-TSQ ).
      
           MOVE VD1-CAI-IOPE IN VD1
             TO VX1-CAI-IOPE IN
                VX1-MTI-VARI ( VX1-IDX-VX1-TSQ ).
      
           MOVE VD1-IIC-IOPE IN VD1
             TO VX1-IIC-IOPE IN
                VX1-MTI-VARI ( VX1-IDX-VX1-TSQ ).
      
           MOVE VD1-NUM-PVEN IN VD1
             TO VX1-NUM-PVEN-EDT.
           MOVE VX1-NUM-PVEN-EDT
             TO VX1-NUM-PVEN-ALF IN
                VX1-MTI-VARI ( VX1-IDX-VX1-TSQ ).
      
           MOVE VD1-IND-PVEN IN VD1
             TO VX1-IND-PVEN IN
                VX1-MTI-VARI ( VX1-IDX-VX1-TSQ ).
      
           MOVE VD1-COD-CUST IN VD1
             TO VX1-COD-CUST IN
                VX1-MTI-VARI ( VX1-IDX-VX1-TSQ ).
      
           MOVE VD1-COD-GARA IN VD1
             TO VX1-COD-GARA IN
                VX1-MTI-VARI ( VX1-IDX-VX1-TSQ ).
      
           MOVE VD1-SGV-TINT IN VD1
             TO VX1-SGV-TINT-EDT.
           MOVE VX1-SGV-TINT-EDT
             TO VX1-SGV-TINT-ALF IN
                VX1-MTI-VARI ( VX1-IDX-VX1-TSQ ).
      
           MOVE VD1-VAL-FINA IN VD1
             TO VX1-VAL-FINA-EDT.
           MOVE VX1-VAL-FINA-EDT
             TO VX1-VAL-FINA-ALF IN
                VX1-MTI-VARI ( VX1-IDX-VX1-TSQ ).
      
           IF VX1-IDX-VX1-TSQ = VX1-TOT-VX1-TSQ
                MOVE ZEROES TO VX1-IDX-VX1-TSQ
                PERFORM PUT-TS-VX1.
       FIN-PRO-VD1.
           EXIT.

       PUT-TS-VX1 SECTION.
       INI-PUT-TS-VX1.
           MOVE VX1-TSVD1 TO QUE-COLA.
           MOVE VX1-LEN-TSVX1  TO QUE-LITM.
           MOVE VX1-MTI-VARI   TO QUE-ITEM.
           MOVE QUE-PUT TO QUE-CMND.
           IF FRM-IND-FMTI IN VD1-FLD = 'T'
               MOVE QUE-STAT-OKS TO QUE-STAT
           ELSE
               PERFORM GNS-PRO-QUE.
           MOVE SPACES TO VX1-MTI-VARI.
           MOVE 'N' TO VX1-PUT-QUE.
       FIN-PUT-TS-VX1.
           EXIT.

      *>>>> EOF_PQ
*% END
*% IF CMN_MOD
      *<<<< CMN_MOD
           MOVE VD1-VAL-FINA IN VD1 TO VD1-VAL-CAPT IN VD1
                                       VD1-VAL-READ IN VD1
                                       VD1-VAL-SCAP IN VD1
                                       VD1-VAL-IPES IN VD1
                                       VD1-VAL-CAPI IN VD1
                                       VD1-VAL-IDNI IN VD1
                                       VD1-VAL-SFIN IN VD1.
      *>>>> CMN_MOD
*% END
