*%! Codigo adicional para DAPPAOPD
*% NO_HDR_CST = TRUE
*% IF CMT_ID
      *  23-APR-1993 20:25:01 
      * ==>> SE PUEDE DAR RDL,RLR,MDA A OPERACIONES CON ONP
      *      RDL, SOLO PARA NEGOCIAR TASA
*% END
*% PGM_PTC = FALSE
*% IF MI_COMMAREA
      *<<<< FIN_SCR_VARI
      * ISP: VARIABLES EN CMMA, COMUNES PARA ENGANCHE PROGRAMAS OPD-RCC-CAD
       COPY DAPWGENG.
      * ISP: VARIABLES EN CMMA, COMUNES PARA PROGRAMAS PI,PQ,PU ( OPD )
       COPY DAPWG005.
      *>>>>
*% END
*% LARGO_MI_COMMAREA = 500
*% IF INI_FIO
      *<<<< INI_FIO

*% IF PGM_PQ
      *<<<< PGM_PQ
           IF SCR-DESDE-CMN
               MOVE ZEROES TO SCR-IDNI
                              SCR-CAPI
                              SCR-INTE
                              SCR-SGV-MPRE
      * JVM: Mantencion 11/06/1992
                              SCR-SGV-TPER
      * JVM: Fin
               MOVE 1 TO      SCR-SGV-VCAM
               MOVE SPACES TO SCR-OPD-VIGE
               PERFORM GET-V001
               PERFORM BUS-OFI-CSSN
               PERFORM GET-SON
               PERFORM GET-TAD
               PERFORM GET-GARA-N
               PERFORM GET-CUST-E.

      * NO SE TOMAN LOS DATOS DESDE ARCHIVO RPF
           IF SCR-CMND = 'VRF'
             
               MOVE WSS-IPGM TO SCR-PROV
               MOVE WSS-ITRN TO SCR-NTRV.

      * ASUME QUE VALOR DE CAMBIO VALE 1, PARA PODER MULTIPLICAR/DIVIDIR
      * SIN PREOCUPARSE DE LA MONEDA
           IF SCR-DESDE-CMN OR
              FRM-FFLD = FRM-FFLD-PF12 
               MOVE 1 TO SCR-SGV-VCAM
               MOVE ZEROES TO SCR-INTE
                              SCR-CAPI.
           IF SCR-INST-EXT = WSS-INST-FTER-CIC
               MOVE WSS-INST-NULL TO SCR-INST-EXT
               PERFORM ING-FTER-CIC.
       FIN-INI-FIO.
      *>>>> PGM_PQ
*% END
      *>>>> INI_FIO
*% END
*% IF PGM_INI_NO
      *<<<< PGM_INI_NO
      *ISP: SI PF11 EN 'VRF' ==> ERROR
           IF EIBAID = '#' OR '.'
               MOVE DFHCOMMAREA TO SCR-VARI
               IF SCR-CMND = 'VRF'
                   MOVE ' ' TO EIBAID.
      *>>>>
*% END
*% IF WSS
      *<<<< WSS
      *Entidades de GNS
*% IF PGM_PU
      *<<<< PGM_PU
       COPY GNSBRCIC.
       COPY GNSWGCIC.
       COPY GNSWGTDQ.
      *>>>> PGM_PU
*% END
       COPY DAPWG006.
      *Entidades de TAB
       COPY TABBRCAM.
      *Entidades de SGC
       COPY SGCBRDBC.
       COPY SGCBRDCP.
       COPY SGCBRRCD.
       COPY SGCBROPE.
       COPY SGCBRRCO.
      *Entidades de DAP
*% IF PGM_PU
      *<<<< PGM_PU
       COPY DAPBRLIC.
       COPY DAPWGDDT.
       COPY DAPWGATE.
       COPY USPC117.
      *>>>> PGM_PU
*% END
       COPY DAPBRLIQ.
       COPY DAPBRCAD.
       COPY DAPBRCAD REPLACING ==CAD== BY ==AUT==.
      * COPY DAPBRAUT.
       COPY DAPBRPOD.
       COPY DAPBRRCC.
       01  WSS-RCC-1                        PIC X(92).
       01  WSS-RCC-2                        PIC X(92).
       COPY DAPBRVEN.
       COPY DAPBRPTD.
*% IF PGM_PU
      *<<<< PGM_PU
       COPY DAPBRIMP.
       COPY DAPBRJNL.
      *>>>> PGM_PU
*% END
      *
       COPY GNSWGCPT.
       COPY GNSWGSTR.
       COPY GNSWGPES.
*% IF PGM_PU
      *<<<< PGM_PU
       COPY GNSWGINT.
      *>>>> PGM_PU
*% END
       COPY DAPWGPMP.
       01  WSS-ENG-VARI.
      * TRANSACCION A ENGANCHARSE PARA INGRESO
           03 WSS-ITRN        VALUE 'PU09'        PIC X(04).
           03 WSS-IPGM        VALUE 'DAPPUOPD'    PIC X(08).

      * 77  WSS-TWALENG         COMP         PIC S9(04).

       01  WSS-VARI.

      * ISP: GUARDA EL DATO ANEXO DEL CODIGO DE CONDICION
      *      DE GARANTIA DE ENTIDAD OPD.
           03 WSS-OPD-COD-GARA-MDA-OPD  VALUE SPACES PIC X(01).

      *       var aux para respaldar CIC Cliente RCC
           03 WSS-BKP-CIC-ICLI                  PIC X(12).
      *       var aux para aprox ultimo decimal cantidades no pesos
           03 WSS-VAL-FORI                      PIC 9(11)V9(05).
      * ISP:  VALOR DE INTERESES PARA RDL
           03 WSS-SGV-RDL-INTE                  PIC 9(11)V9(04).
           03 WSS-SGV-RDL-INTE-PESO             PIC 9(11)V9(04).
      * ISP:  VALOR DE TODO PARA RDL
           03 WSS-SGV-RDL-TODO                  PIC 9(11)V9(04).
           03 WSS-SGV-RDL-TODO-PESO             PIC 9(11)V9(04).
    
           03 WSS-SGV-MPRE                  PIC 9(11)V9(04).
      * SUMATORIA DE PORCENTAJES PARA 'PC' DEBE SER <= 100%
           03 WSS-SGV-TSPC                  PIC 9(11)V9(04).
      * 'INTE' CUANDO EL USUARIO HA ESPECIFICADO RETIRO 100% INTERESES EN RDL
      * 'MNTO' CUANDO EL USUARIO HA ESPECIFICADO MONTO INTERESES EN RDL
      * 'TODO' CUANDO EL USUARIO HA INFORMADO LIQUIDACION TOTAL EN RDL
      *     O RENUEVA TODO
           03 WSS-SW-RRDL                   PIC X(04).
           03 WSS-FACT                      PIC 9(04).
      * OFICINA PARA LNK-DDT
           03 WSS-NUM-OFIC                  PIC 9(03).
           03 WSS-NUM-PNTE                  PIC 9(05).
           03 WSS-NUM-PMIN                  PIC 9(05).
           03 WSS-NUM-PMAX                  PIC 9(05).
           03 WSS-NUM-DURV                  PIC 9(05).
           03 WSS-IND-PMIN                  PIC X(01).
           03 WSS-IND-PMAX                  PIC X(01).
           03 WSS-IND-DURV                  PIC X(01).
      *    total vctos - 1
           03 WSS-TVEN-1                          PIC 9(04).
      *    duracion vctos - 1o.
           03 WSS-DURV-1                          PIC 9(04).
      *    fecha termino opd
           03 WSS-FEC-FTER.
              05 WSS-NUM-DTER                     PIC 9(02).
              05 WSS-NUM-MTER                     PIC 9(02).
              05 WSS-NUM-STER                     PIC 9(02).
              05 WSS-NUM-ATER                     PIC 9(02).
      *    cantidad de operaciones vigentes de un cliente
           03 WSS-OPDV                            PIC 9(04).

           03 WSS-VAL-CAPI                        PIC 9(11)V9(04).

      *    VAR-VRF-CAD
           03 WSS-TOT-CLI  VALUE ZEROES           PIC 9(02).
      * ISP: NUMERO DE CADS VACIAS
           03 WSS-TOT-CADV                        PIC 9(02).

      * ISP: NUMERO DE CADS CAJA
           03 WSS-TOT-CAJA                        PIC 9(02).

      * ISP: NUMERO DE CADS AUTOMATICO
           03 WSS-TOT-AUTO                        PIC 9(02).

      * ISP: MONTO DE CAPTACION OBTENIDO DESDE PANTALLA
      *      WSS-VAL-CAPT <-- FRM-VAL-IPES ( SI FRM-VAL-IPES NOT = ZEROES )
      *      WSS-VAL-CAPT <-- OPD-VAL-IPES ( SI FRM-VAL-IPES     = ZEROES )
           03 WSS-VAL-CAPT                        PIC 9(11)V9(04).

      * ISP: SUMATORIA DE MONTOS DE CADS
           03 WSS-VAL-SCAD                        PIC 9(11)V9(04).

      * ISP: SUMATORIA DE MONTOS DE CADS QUE SON CAJA
           03 WSS-VAL-CAJA                        PIC 9(11)V9(04).

      * ISP: SUMATORIA DE MONTOS DE CADS QUE SON CTA CTE
           03 WSS-VAL-CCTE                        PIC 9(11)V9(04).

      * ISP: NUMERO DE CTA CTE PARA HACER EL CARGO O ABONO EN
      *      LINEA ( RDL )
           03 WSS-CIC-CCTE.
              05 WSS-CAI-CCTE                     PIC X(04).
              05 WSS-IIC-CCTE                     PIC 9(08).
              

      * ISP: TIPO DE CTA ( AHOrro o CuentaCorrienTe )
           03 WSS-IND-TCTA                        PIC X(03).

      * ISP: GRUPO AL QUE PERTENECE TIPO DE CARGO ABONO
      *      CAJA, AUTOMATICO O MANUAL.
           03 WSS-IND-GCAD                        PIC X(01).

      *       ind validacion de cliente
           03 WSS-IND-VCLI                        PIC X(01).

           03 WSS-NUM-JUL        VALUE 0          PIC 9(06).
           03 WSS-NDIA                            PIC 9(04).
           03 WSS-TRM-DIA                         PIC 9(04).
           03 WSS-TRM-MTO                         PIC 9(04).
           03 WSS-IND-TDIA                        PIC X(01).
           03 WSS-IND-TMTO                        PIC X(01).
           03 WSS-IDX-INT                         PIC 9(04).
           03 WSS-GLS-MRNG.
              05 WSS-GLS-1RNG                PIC X(30).
              05 WSS-GLS-2RNG                PIC ---.---.---.--9,9999.
              05 WSS-GLS-3RNG VALUE ' <--> ' PIC X(06).
              05 WSS-GLS-4RNG                PIC ---.---.---.--9,9999.
           03 WSS-CPT-NOMB VALUE SPACES.
              05  WSS-CPT-DESC              PIC X(27).
              05  WSS-CPT-CAI               PIC X(04).
              05  WSS-CPT-IIC               PIC X(08).
           03  WSS-CPT-NOMB-R  REDEFINES  WSS-CPT-NOMB PIC X(39).
           03 WSS-GLS-CADV.
              05 WSS-CAD-GLS-MEN0            PIC X(39).
              05 WSS-CAD-GLS-MENS            PIC X(05).
              05 WSS-CAD-SGV-LIQU-EDT        PIC ---.---.--9,99.
              05 FILLER       VALUE  SPACES  PIC X(01).
              05 WSS-CAD-IND-TCAD            PIC X(05).
              05 FILLER       VALUE  SPACES  PIC X(01).
              05 WSS-CAD-CIC-ICAD.
                 07 WSS-CAD-CAI-ICAD            PIC X(04).
                 07 WSS-CAD-IIC-ICAD            PIC ZZZZZZZZ.

           03 WSS-CAD-VARI.
              05 WSS-CAD-KEY-ICAD            PIC X(16).
      *        05 WSS-CAD-SGV-LIQU            PIC 9(11)V9(04).

           03 WSS-GLS-PZO.
              05 WSS-GLS-PZO1                PIC X(50).
              05 WSS-GLS-PZO2                PIC ZZZZ.
              05 FILLER VALUE SPACES         PIC X(01).
              05 WSS-GLS-PZO3                PIC X(01).
              05 FILLER VALUE ' <--> '       PIC X(06).
              05 WSS-GLS-PZO4                PIC ZZZZ.
              05 FILLER VALUE SPACES         PIC X(01).
              05 WSS-GLS-PZO5                PIC X(01).
           03 WSS-IND-CTA                         PIC X(01).
      *       ind cta mismo u otro cliente
           03 WSS-IND-MUOC                        PIC X(01).
           03 WSS-VAL-IPES                        PIC 9(11)V9(04).

           03 WSS-FEC-FPVC.
              05 WSS-NUM-DPVC                     PIC 9(02).
              05 WSS-NUM-MPVC                     PIC 9(02).
              05 WSS-NUM-SPVC                     PIC 9(02).
              05 WSS-NUM-APVC                     PIC 9(02).

           03 WSS-FEC-FUNO.
              05 WSS-NUM-SUNO                     PIC 9(02).
              05 WSS-NUM-AUNO                     PIC 9(02).
              05 WSS-NUM-MUNO                     PIC 9(02).
              05 WSS-NUM-DUNO                     PIC 9(02).

           03 WSS-FEC-FDOS.
              05 WSS-NUM-SDOS                     PIC 9(02).
              05 WSS-NUM-ADOS                     PIC 9(02).
              05 WSS-NUM-MDOS                     PIC 9(02).
              05 WSS-NUM-DDOS                     PIC 9(02).

           03 WSS-CIC-PER                         PIC X(01).
           03 WSS-OPD-CAI-ISER                    PIC 9(04).
           03 WSS-NUM-PER                         PIC 9(05).
           03 WSS-IND-PVEN                        PIC X(01).
      * JVM: Mantencion 11/06/1992
           03 WSS-IND-ISER          VALUE ZEROS   PIC 9(01).
           03 WSS-IND-TCAD          VALUE SPACES  PIC X(01).
      * JVM: Fin
      *LRH ini 30-AGO-1994
           03 WSS-INI-PESO                        PIC 9(11)V9(4).
           03 WSS-FIN-PESO                        PIC 9(11)V9(4).
      *LRH fin 30-AGO-1994

           03 PGM-STAT-VEN           VALUE '23'      PIC X(02).
                 88 PGM-STAT-VEN-OKS    VALUE '00'.
                 88 PGM-STAT-VEN-NUL    VALUE '  '.

           03 PGM-STAT-AUT           VALUE '23'      PIC X(02).
                 88 PGM-STAT-AUT-OKS    VALUE '00'.
                 88 PGM-STAT-AUT-NUL    VALUE '  '.

           03 PGM-STAT-IMP           VALUE '23'      PIC X(02).
                 88 PGM-STAT-IMP-OKS    VALUE '00'.
                 88 PGM-STAT-IMP-NUL    VALUE '  '.


      * COMPONE MENSAJE DE ACUERDO A :
      *    ENTIDA A PROCESAR                 ( OPD )
      *    COMANDO QUE SE PROCESA            ( ING O MOD )
      *    ESTADO DESPUES DE APLICAR COMANDO ( I O V )
      *    ASIGNACION O NO DE CIC            ( S O N )
      *    DEBEN EXISTIR LAS COMBINACIONES DE MENSAJES RESPECTIVAS
           03  WSS-MSG-OPD.
               05 WSS-MSG-OPD-OPD                  PIC X(03).
               05 WSS-MSG-OPD-CMD                  PIC X(03).
               05 WSS-MSG-OPD-STS                  PIC X(01).
               05 WSS-MSG-OPD-CIC                  PIC X(01).
           03 WSS-ENT-UBFD.
              05  WSS-TBL-UBFD                     PIC X(03).
              05  WSS-COD-UBFD                     PIC X(06).

      *LRH 28-JUN-1994 contador de CADs
           03 WSS-TOT-CADS                         PIC 9(02).
           03 STE-PERMISO                          PIC X(01).
      *RVM-CST-INI 28-AUG-1996
           03 WSS-CAI-ISER.
              05 WSS-CAI-ISER-1                    PIC X(01).
              05 WSS-CAI-ISER-2                    PIC X(03).
      *RVM-CST-FIN 28-AUG-1996
*% IF PGM_PU
*% INCLUDE 'DAPTXT:DAPPAOPDFO.TXT'
*% END
      * ISP: VARIABLES WSS-PTD
       COPY DAPWG004.

      *>>>> WSS
*% END
*% IF WSS_DTC
      *<<<< WSS_DTC
      *Entidades de GNS
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-CIC-REQA==.
      *Entidades de TAB
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-CAM-REQA==.
      *Entidades de SGC
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-DBC-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-DCP-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-RCD-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-OPE-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-RCO-REQA==.
      *Entidades de DAP
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-LIQ-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-LIC-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-CAD-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-AUT-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-POD-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-RCC-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-VEN-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-IMP-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-PTD-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-JNL-REQA==.
      *>>>>
*% END
*%! BLLCELLS_USR = TRUE
*% IF BLLCELLS_NO
      *<<<< LKS
      *01  BLLCELLS.
      *     02 FILLER           PIC S9(08) COMP.
      *     02 FIO-PNT0         PIC S9(08) COMP.
      *     02 LKS-WAPTR        PIC S9(08) COMP.
      * 01  FIO-BUF0.
      *     02 FILLER           PIC X(1536).
      * 01  WORKAREA.
      *     02 LKS-DDT          PIC X(226).
      *>>>>
*% END
*% IF FIN_SCR_TRL
      *<<<< FIN_SCR_TRL
           MOVE SPACES TO MSG-COD-MENS.

           IF SCR-CCPP = 'ING'
               GO TO END-SCR-TRL.

      *LRH ini 28-JUL-1994
           IF SCR-CMND = 'EDE'
               PERFORM GET-FHOY
      *RVM-CST-INI 20-NOV-1996
      *PARA ELIMIRAR DAP DEL DIA SE COMPARA FECHA DE CAPTACION ORIGINAL
      *         IF HOY-FHOY NOT = OPD-FEC-FTRN IN OPD
               IF HOY-FHOY NOT = OPD-FEC-FPCO IN OPD
      *RVM-CST-FIN 20-NOV-1996
                   MOVE 'DAPNOESDEHOY' TO MSG-COD-MENS
                   GO TO ERR-SCR-TRL
               ELSE
                   GO TO END-SCR-TRL.
      *LRH fin 28-JUL-1994
 
           IF OPD-COD-STAT IN OPD-FLD = 'W'
      *        opd esperando SAFE Y CTA CTE
               MOVE 'OPD    SYC' TO MSG-COD-MENS
               GO TO ERR-SCR-TRL.

           IF OPD-COD-STAT IN OPD-FLD = 'S'
      *        opd esperando SAFE
               MOVE 'OPD    SAF' TO MSG-COD-MENS
               GO TO ERR-SCR-TRL.

           IF OPD-COD-STAT IN OPD-FLD = 'F' AND
              SCR-CMND NOT = 'VRF'
      *        opd esperando CTA CTE
               MOVE 'OPD    CTE' TO MSG-COD-MENS
               GO TO ERR-SCR-TRL.

           IF OPD-COD-STAT IN OPD-FLD = 'X'
      *        opd rechazado por falta de fondos
               MOVE 'OPD    RFF' TO MSG-COD-MENS
               GO TO ERR-SCR-TRL.

      *     IF OPD-COD-STAT IN OPD-FLD = 'N'
      *        opd ANULADA
      *         MOVE 'OPD    NUL' TO MSG-COD-MENS
      *         GO TO ERR-SCR-TRL.

           IF NOT ( SCR-CMND = 'RDL' OR
                    SCR-CMND = 'RLR' OR
                    SCR-CMND = 'MDA' )
           IF OPD-COD-IONP IN OPD-FLD = 'S'
      *        opd con onp
               MOVE 'OPD    ONP' TO MSG-COD-MENS
               GO TO ERR-SCR-TRL.
      *JUS-INI 4-JAN-1996 OJO: ESTE CODIGO FUE ANULADO TEMPORALMENTE
      *JUS-INI 6-NOV-1995
      *     IF NOT ( SCR-CMND = 'RDL' OR
      *              SCR-CMND = 'RLR' OR
      *              SCR-CMND = 'MDA' )
      *     IF OPD-COD-CUST IN OPD-FLD = 'S'
      *         MOVE 'OPD   CUST' TO MSG-COD-MENS
      *         GO TO ERR-SCR-TRL.
      *JUS-FIN
      *JUS-FIN 4-JAN-1996
           IF ( SCR-CMND = 'MOD' OR SCR-CCPP = 'ELI' ) AND
                ( OPD-COD-STAT IN OPD-FLD NOT = 'I' )
      *        AND OPD-COD-STAT IN OPD-FLD NOT = 'V'
      *        opd no ( 'I' o 'V' )
               MOVE 'OPD    NI' TO MSG-COD-MENS
               GO TO ERR-SCR-TRL.

           IF SCR-CMND = 'VRF' AND
              NOT ( OPD-COD-STAT IN OPD-FLD = 'I' OR 'F' )
      *        opd no ( 'I' o 'F' )
               MOVE 'OPD    NIC' TO MSG-COD-MENS
               GO TO ERR-SCR-TRL.

           IF FRM-FFLD NOT = FRM-FFLD-PF12 AND
              SCR-CMND = 'MDA'
      *JUS-INI 4-JAN-1996 OJO: ESTE GODIGO SE ANULARA TEMPORALMENTE
      *          IF OPD-COD-STAT IN OPD NOT = 'G'
      *JUS-FIN 4-JAN-1996
      *
      *JUS-INI 4-JAN-1996 OJO: ESTE GODIGO ESTABA ANULADO
      *                        AHORA SE ACTIVARA TEMPORALMENTE
                IF NOT ( ( OPD-COD-STAT IN OPD = 'A' OR
                           OPD-COD-STAT IN OPD = 'G' ) OR
                         ( OPD-COD-STAT IN OPD = 'L' AND
                           OPD-COD-RENO IN OPD = 'N' )
                       )
      *JUS-FIN 4-JAN-1996
      *        opd no 'I' 
               MOVE 'OPD    NAE' TO MSG-COD-MENS
               GO TO ERR-SCR-TRL.

      *     IF SCR-CMND = 'RDL' AND
      *        OPD-COD-STAT IN OPD-FLD NOT = 'G'
      *        opd no ( 'G' )
      *         MOVE 'OPD    NE' TO MSG-COD-MENS
      *         GO TO ERR-SCR-TRL.
*% IF PGM_PQ
      *<<<< PGM_PQ
           IF SCR-CMND = 'RLR' AND
              FRM-FFLD NOT = FRM-FFLD-PF12
                 PERFORM VAL-LIQ-RDL
                 IF MSG-COD-MENS > SPACES
                    GO TO ERR-SCR-TRL.

           IF SCR-CMND = 'RDL' AND
              FRM-FFLD NOT = FRM-FFLD-PF12
               IF OPD-FEC-FREA IN OPD = OPD-FEC-FPCO IN OPD OR
                  OPD-COD-STAT IN OPD-FLD NOT = 'G'
                   MOVE 'OPDNO  REN' TO MSG-COD-MENS
                   GO TO ERR-SCR-TRL
               ELSE
                   MOVE SPACES TO MSG-COD-MENS
                   PERFORM VAL-PER-REN
                   IF MSG-COD-MENS > SPACES
                       GO TO ERR-SCR-TRL.

      *<<<< END
*% END

      * ISP: PONIA FECHA COMPUTACIONAL EN DESPLIEGUE DE DATOS
      *     PERFORM GET-FHOY.
      *     MOVE HOY-FHOY TO OPD-FEC-FCMP IN OPD.
      *     MOVE HOY-DHOY TO OPD-NUM-DCMP IN OPD-FLD.
      *     MOVE HOY-MHOY TO OPD-NUM-MCMP IN OPD-FLD.
      *     MOVE HOY-SHOY TO OPD-NUM-SCMP IN OPD-FLD.
      *     MOVE HOY-AHOY TO OPD-NUM-ACMP IN OPD-FLD.

      *     IF SCR-CMND = 'ADA'
      *         IF OPD-FEC-FREA IN OPD NOT = OPD-FEC-FCMP IN OPD
      *             MOVE 'FREA<>FCMP' TO MSG-COD-MENS
      *             GO TO ERR-SCR-TRL
      *         ELSE
      *             NEXT SENTENCE
      *     ELSE
      *     IF SCR-CMND = 'ADO'
       ERR-SCR-TRL.
           IF MSG-COD-MENS > SPACES
      *GET-MSG Busca mensaje en tabla
               MOVE 'DAP' TO MSG-COD-SIST
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS
               MOVE SCR-STAT-CON TO SCR-STAT.

       END-SCR-TRL.
      *>>>>
*% END
*% IF INI_HBL_IKY OR INI_HBL_KEY
      *<<<< INI_HBL_IKY OR INI_HBL_KEY
           MOVE SPACES TO SCR-CIC-VCAM
                          SCR-IND-MCLI
                          SCR-IND-MCAD.
           MOVE 1      TO SCR-SGV-VCAM.

      *>>>>
*% END
*% IF FIN_HBL_IKY OR FIN_HBL_KEY
      *<<<< FIN_HBL_IKY OR FIN_HBL_KEY
      * ISP: ACCESO POR CLIENTE INHIBIDO PARA RDL
           IF SCR-CMND = 'RDL' OR 'RLR'
               MOVE FRM-CPIM-AEY TO DBC-GLS-NOMC-ATR IN OPD-FLD
               MOVE FRM-CPIM-AEY TO DBC-IND-ICLI-ATR IN OPD-FLD
               MOVE FRM-CPIM-AEY TO DBC-GLS-ICLI-ATR IN OPD-FLD
               MOVE FRM-CPIM-AEY TO DBC-NUM-ICLI-ATR IN OPD-FLD
               MOVE FRM-CPIM-AEY TO DBC-VRF-ICLI-ATR IN OPD-FLD.
      *>>>>
*% END
*% IF FIN_HBL_FLD
      *<<<< FIN_HBL_FLD
      *    acceso a pod

           MOVE OPD-COD-VCAM IN OPD-FLD TO POD-COD-VCAM IN POD.
           MOVE OPD-COD-TOPD IN OPD-FLD TO POD-COD-TOPD IN POD.
           MOVE OPD-COD-AOPD IN OPD-FLD TO POD-COD-AOPD IN POD.
           MOVE ZEROES                  TO POD-NUM-IPOD IN POD.
           PERFORM GET-POD.
      * ISP: DAPBG001
      *     PERFORM VAL-POD.
      *     IF SCR-STAT = SCR-STAT-CON
      *         GO TO END-SCR-TRL.


       ERR-HBL-FLD.
           IF MSG-COD-MENS > SPACES
      *GET-MSG Busca mensaje en tabla
*% IF PGM_PTC
      *PTC-INI
               MOVE 'S' TO SCR-IERR
      *PTC-FIN
*% END
               MOVE 'DAP' TO MSG-COD-SIST
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS
               MOVE SCR-STAT-CON TO SCR-STAT
               GO TO FIN-HBL-FLD.

       END-HBL-FLD.
           
      *    deshabilitar (proteger) campos no-llave que son 
      *    llave en la POD (plantilla)
      *     MOVE FRM-CPIM-AEY TO OPD-COD-TOPD-ATR IN OPD-FLD.
      *     MOVE FRM-CPIM-AEY TO OPD-COD-VCAM-ATR IN OPD-FLD.
      *     MOVE FRM-CPIM-AEY TO OPD-COD-AOPD-ATR IN OPD-FLD.

      *     MOVE 0            TO OPD-COD-TOPD-LEN IN OPD-FLD.
      *     MOVE -1           TO OPD-COD-OFIC-LEN IN OPD-FLD.

           IF SCR-CMND = 'MDA'
               PERFORM PRO-FLD-OPD
               PERFORM PRO-MKY-OPD
               MOVE FRM-CPIM-UBY TO RCC-NUM-DIRE-ATR IN OPD-FLD
               MOVE FRM-CPIM-UBY TO OPD-COD-EJEC-ATR IN OPD-FLD
               MOVE FRM-CPIM-UBY TO OPD-COD-CUST-ATR IN OPD-FLD
               MOVE FRM-CPIM-UBY TO OPD-COD-GARA-ATR IN OPD-FLD
               MOVE FRM-CPIM-UBY TO OPD-NUM-RETD-ATR IN OPD-FLD
               MOVE FRM-CPIM-UBY TO OPD-IND-RETD-ATR IN OPD-FLD
               MOVE FRM-CPIM-UBY TO OPD-COD-UBFD-ATR IN OPD-FLD.

           IF SCR-CMND = 'RDL' OR 'RLR'
               PERFORM PRO-FLD-OPD
               PERFORM PRO-MKY-OPD
               IF SCR-CMND = 'RDL'
                   MOVE FRM-CPIM-UBY TO OPD-COD-EATE-ATR IN OPD-FLD
                   MOVE FRM-CPIM-UNY TO FRM-COD-EATE-ATR IN OPD-FLD
                   MOVE FRM-CPIM-UBY TO OPD-SGV-TINT-ATR IN OPD-FLD
                   MOVE FRM-CPIM-UBY TO FRM-CAI-ICAD-ATR IN OPD-FLD
                   MOVE FRM-CPIM-UBY TO FRM-IIC-ICAD-ATR IN OPD-FLD
                   MOVE FRM-CPIM-UBY TO OPD-SGV-MPRE-ATR IN OPD-FLD
      *RVM-CST-INI 26-AUG-1996
                   IF OPD-COD-EJEC IN OPD-FLD > SPACES
                       MOVE OPD-COD-EJEC IN OPD-FLD TO
                            USR-COD-USER IN USR
                       PERFORM VAL-USR
                       IF MSG-COD-MENS > SPACES
                           MOVE FRM-CPIM-UBY TO
                                OPD-COD-EJEC-ATR IN OPD-FLD
                           MOVE -1 TO OPD-COD-EJEC-LEN IN OPD-FLD.
      *RVM-CST-FIN 26-AUG-1996

      *    deshabilitar (proteger) campos que son de la POD (plantilla)
      * ISP: DAPBG002.
           PERFORM PRO-OPD-POD.

       CON-HBL-FLD.
           IF DBC-IND-ICLI IN OPD-FLD = 'M' AND
              SCR-IND-MCLI = 'M'
               MOVE FRM-CPIM-AEY TO DBC-IND-ICLI-ATR IN OPD-FLD
               MOVE FRM-CPIM-AEY TO DBC-GLS-ICLI-ATR IN OPD-FLD
               MOVE FRM-CPIM-AEY TO DBC-NUM-ICLI-ATR IN OPD-FLD
               MOVE FRM-CPIM-AEY TO DBC-VRF-ICLI-ATR IN OPD-FLD
               MOVE FRM-CPIM-AEY TO DBC-GLS-NOMC-ATR IN OPD-FLD
               MOVE FRM-CPIM-AEY TO RCC-NUM-DIRE-ATR IN OPD-FLD.

           IF CAD-IND-TCAD IN OPD-FLD = 'M' AND
              SCR-IND-MCAD = 'M'
               MOVE FRM-CPIM-AEY TO CAD-IND-TCAD-ATR IN OPD-FLD
               MOVE FRM-CPIM-AEY TO CAD-CAI-ICAD-ATR IN OPD-FLD
               MOVE FRM-CPIM-AEY TO CAD-IIC-ICAD-ATR IN OPD-FLD.
      *>>>> FIN_HBL_FLD
*% END
*% IF ERR_SCR_GFLD
      *<<<< ERR_SCR_GFLD
           IF SCR-CMND = 'ODL' OR 'ODB'
              PERFORM UNP-FLD-OPD
              PERFORM PRO-OPD-POD.
      *>>>> ERR_SCR_GFLD
*% END
*% IF FIN_HBL_IKY
      *<<<< FIN_HBL_IKY
      *    habilitar (desproteger) campos no-llave que son 
      *    llave en la POD (plantilla)
           MOVE FRM-CPIM-UBY TO OPD-COD-TOPD-ATR IN OPD-FLD.
           MOVE FRM-CPIM-UBY TO OPD-COD-VCAM-ATR IN OPD-FLD.
           MOVE FRM-CPIM-UBY TO OPD-COD-AOPD-ATR IN OPD-FLD.
           MOVE -1           TO OPD-COD-TOPD-LEN IN OPD-FLD.
      *>>>> FIN_HBL_IKY
*% END
*% IF SCR_GFLD_VAL_FLD
      *<<<< SCR_GFLD_VAL_FLD
      *    SI DAP EN MONEDA CHILENA REAJUSTABLE, ENTONCES CONVERTIR A PESOS
      *    BUSCA VALOR DE CAMBIO
      *     IF SCR-SGV-VCAM NOT = 1
      *         IF SCR-CIC-TVAL = PDB-CIC-MNAC AND 
      *            SCR-CIC-VCAM NOT = PDB-CIC-0999
      *            PERFORM LEE-VCAM
      *            IF MSG-COD-MENS > SPACES
      *                MOVE 'DAP' TO MSG-COD-SIST
      *                PERFORM GET-MSG
      *                MOVE MSG-GLS-DESC TO FRM-MENS
      *                MOVE FRM-SUAR-MAL TO FRM-SUAR
      *                GO TO ERR-SCR-GFLD.

      *ISP ES NECESARIO TENER LOS DATOS DE LA OPERACION
      *    PARA LA VALIDACION DE CAMPOS

           IF SCR-CMND = 'MDA'
               MOVE OPD-CAI-IOPD IN OPD-FLD TO OPD-CAI-IOPD IN OPD
               MOVE OPD-IIC-IOPD IN OPD-FLD TO OPD-IIC-IOPD IN OPD
               MOVE FIO-GET-KEY TO FIO-CMND
               PERFORM DAP-FIO-OPD
               IF NOT FIO-STAT-OKS
                   MOVE 'DAP' TO MSG-COD-SIST
                   MOVE 'OPD    NEX' TO MSG-COD-MENS
                   PERFORM GET-MSG
                   MOVE MSG-GLS-DESC TO FRM-MENS
                   MOVE FRM-SUAR-MAL TO FRM-SUAR
                   GO TO ERR-SCR-GFLD.

           IF SCR-CMND = 'RDL' OR 'RLR'
               MOVE OPD-CAI-IOPD IN OPD-FLD TO OPD-CAI-IOPD IN OPD
               MOVE OPD-IIC-IOPD IN OPD-FLD TO OPD-IIC-IOPD IN OPD
               MOVE FIO-GET-KEY TO FIO-CMND
               PERFORM DAP-FIO-OPD
               IF NOT FIO-STAT-OKS
                   MOVE 'DAP' TO MSG-COD-SIST
                   MOVE 'OPD    NEX' TO MSG-COD-MENS
                   PERFORM GET-MSG
                   MOVE MSG-GLS-DESC TO FRM-MENS
                   MOVE FRM-SUAR-MAL TO FRM-SUAR
                   GO TO ERR-SCR-GFLD
               ELSE
                   MOVE OPD-VAL-CAPT IN OPD TO WSS-SGV-RDL-TODO

                       PERFORM GET-VEN-GREN
                       IF NOT FIO-STAT-OKS
                           MOVE 'DAP' TO MSG-COD-SIST
                           MOVE 'VENGRENNEX' TO MSG-COD-MENS
                           PERFORM GET-MSG
                           MOVE MSG-GLS-DESC TO FRM-MENS
                           MOVE FRM-SUAR-MAL TO FRM-SUAR
                           GO TO ERR-SCR-GFLD
                       ELSE
                           SUBTRACT VEN-VAL-CAPI IN VEN FROM
                                    VEN-VAL-FINA IN VEN
                           GIVING WSS-SGV-RDL-INTE.
      *>>>>
*% END
*% IF INI_CMN_ING
      *<<<< INI_CMN_ING
      *GET-CIC Obtener CIC
       CIC-GET-CIC.
           IF OPD-IIC-IOPD IN OPD-FLD > ZEROES
      *        INDICA QUE NO INVOCO A RUTINA OBTENCION CIC
               MOVE 'N' TO SCR-IND-OCIC
           ELSE
      *        INDICA QUE SI INVOCO A RUTINA OBTENCION CIC
               MOVE 'S' TO SCR-IND-OCIC
               MOVE '0710' TO CIC-CAI-ICIC IN CIC
               MOVE CIC-GET TO CIC-CMND
               PERFORM PRO-CIC
               IF CIC-STAT NOT = CIC-STAT-OKS
                   MOVE CIC-MENS TO FRM-MENS
                   MOVE FIO-STAT-NEX TO FIO-STAT
                   GO TO FIN-CMN-ING
               ELSE
                   MOVE CIC-CIC-ICIC TO OPD-CIC-IOPD IN OPD
                   MOVE FIO-GET-KEY TO FIO-CMND
                   PERFORM DAP-FIO-OPD
                   IF FIO-STAT-OKS
                       GO TO CIC-GET-CIC
                   ELSE
                       MOVE CIC-CAI-ICIC TO OPD-CAI-IOPD IN OPD-FLD
                       MOVE CIC-IIC-ICIC TO OPD-IIC-IOPD IN OPD-FLD.

           PERFORM HDR-OPD.
           PERFORM LEE-CLI.
           PERFORM CLR-CAD.
           PERFORM CLR-AUT.
           PERFORM CLR-RCC.
      *>>>> INI_CMN_ING
*% END
*% IF CMN_ING
      *<<<< CMN_ING
           PERFORM GET-WSS-VAL-CAPT.

           IF SCR-IND-MCLI = 'M'
               MOVE 'S' TO OPD-IND-MCLI IN OPD
           ELSE
               MOVE 'N' TO OPD-IND-MCLI IN OPD.

           IF SCR-CMND = 'ODB'
               MOVE 'S' TO OPD-IND-IDIF IN OPD
           ELSE
               MOVE 'N' TO OPD-IND-IDIF IN OPD.

           IF SCR-IND-MCLI = 'M' OR
              CAD-IND-TCAD IN OPD-FLD = 'M'
                MOVE 'I' TO OPD-COD-STAT IN OPD
           ELSE
                IF OPD-IND-IDIF IN OPD = 'N'
                    MOVE 'A' TO OPD-COD-STAT IN OPD
                ELSE
                    MOVE 'G' TO OPD-COD-STAT IN OPD.

           MOVE SPACES                  TO OPD-GLS-FLAG IN OPD.
      * ISP:  16-NOV-1992 
      *     MOVE ZEROES                  TO OPD-VAL-READ IN OPD.
           MOVE ZEROES                  TO OPD-VAL-INTD IN OPD.
      * JVM: AHORA SE GRABA TASA PERIODO
      *     MOVE ZEROES                  TO OPD-VAL-SINT IN OPD.
           MOVE OPD-VAL-CAPT IN OPD-FLD TO OPD-VAL-SCAP IN OPD
                                           OPD-VAL-READ IN OPD.
           MOVE ZEROES                  TO OPD-NUM-VSLQ IN OPD.
           MOVE FRM-NUM-TVEN IN OPD-FLD TO OPD-NUM-VNLQ IN OPD.
           MOVE 1                       TO OPD-NUM-IVEN IN OPD.
           MOVE ZEROES                  TO OPD-VAL-CAJA IN OPD.
           MOVE SPACES                  TO OPD-GLS-SAFE IN OPD.
           MOVE OPD-FEC-FREA IN OPD     TO OPD-FEC-FDEV IN OPD.
           MOVE OPD-FEC-FREA IN OPD     TO OPD-FEC-FPCO IN OPD.
           IF OPD-COD-STAT IN OPD = 'G'
               MOVE 'VIG'  TO OPD-COD-SCTB IN OPD
           ELSE
               MOVE SPACES TO OPD-COD-SCTB IN OPD.
           MOVE SPACES                  TO OPD-CAI-GREN IN OPD.
           MOVE ZEROES                  TO OPD-IIC-GREN IN OPD.
      *    ACCESO A POD
           MOVE OPD-COD-VCAM IN OPD-FLD TO POD-COD-VCAM IN POD.
           MOVE OPD-COD-TOPD IN OPD-FLD TO POD-COD-TOPD IN POD.
           MOVE OPD-COD-AOPD IN OPD-FLD TO POD-COD-AOPD IN POD.
           MOVE ZEROES                  TO POD-NUM-IPOD IN POD.
           PERFORM GET-POD.
      *    HERENCIA CAMPOS POD A OPD
           MOVE POD-COD-ENDO IN POD     TO OPD-COD-ENDO IN OPD.
           MOVE POD-COD-RENO IN POD     TO OPD-COD-RENO IN OPD.
           MOVE POD-COD-TINT IN POD     TO OPD-COD-TINT IN OPD.
           MOVE POD-COD-TCDP IN POD     TO OPD-COD-TCDP IN OPD.
           MOVE POD-COD-RESC IN POD     TO OPD-COD-RESC IN OPD.
           MOVE POD-COD-PLPA IN POD     TO OPD-COD-PLPA IN OPD.
           MOVE POD-NUM-PLRE IN POD     TO OPD-NUM-PLRE IN OPD.
           MOVE POD-IND-PLRE IN POD     TO OPD-IND-PLRE IN OPD.
           MOVE POD-COD-AFER IN POD     TO OPD-COD-AFER IN OPD.
           MOVE POD-NUM-PNTE IN POD     TO OPD-NUM-PNTE IN OPD.
           MOVE POD-IND-PNTE IN POD     TO OPD-IND-PNTE IN OPD.
           MOVE POD-COD-AACC IN POD     TO OPD-COD-AACC IN OPD.

           MOVE OPD-CAI-IOPD IN OPD TO OPD-CAI-ORIG IN OPD.
           MOVE OPD-IIC-IOPD IN OPD TO OPD-IIC-ORIG IN OPD.

           PERFORM PUT-CAD.
           IF NOT FIO-STAT-OKS
               MOVE 'ERRPUT CAD' TO MSG-COD-MENS
               PERFORM MSG-DAP
               GO TO FIN-CMN-ING.

           PERFORM PUT-AUT.
           IF NOT FIO-STAT-OKS
               MOVE 'ERRPUT AUT' TO MSG-COD-MENS
               PERFORM MSG-DAP
               GO TO FIN-CMN-ING.

           PERFORM PUT-RCC.
           PERFORM HDR-RCC.
           IF NOT FIO-STAT-OKS
               MOVE 'ERRPUT RCC' TO MSG-COD-MENS
               PERFORM MSG-DAP
               GO TO FIN-CMN-ING.

           PERFORM PUT-VEN.
           IF NOT FIO-STAT-OKS
               MOVE 'ERRPUT VEN' TO MSG-COD-MENS
               PERFORM MSG-DAP
               GO TO FIN-CMN-ING.

           IF DBC-IND-ICLI IN OPD-FLD = 'M'
               MOVE 'S'    TO SCR-IND-ENG IN SCR-VEC-ENG(WSS-IDX-IRCC)
               MOVE 'S'    TO SCR-IND-FST IN SCR-VEC-FST(WSS-IDX-IRCC)
           ELSE
               MOVE SPACES TO SCR-IND-ENG IN SCR-VEC-ENG(WSS-IDX-IRCC)
               MOVE SPACES TO SCR-IND-FST IN SCR-VEC-FST(WSS-IDX-IRCC).

           IF CAD-IND-TCAD IN OPD-FLD = 'M'
               MOVE 'S'    TO SCR-IND-ENG IN SCR-VEC-ENG(WSS-IDX-ICAD)
               MOVE 'S'    TO SCR-IND-FST IN SCR-VEC-FST(WSS-IDX-ICAD)
           ELSE
               MOVE SPACES TO SCR-IND-ENG IN SCR-VEC-ENG(WSS-IDX-ICAD)
               MOVE SPACES TO SCR-IND-FST IN SCR-VEC-FST(WSS-IDX-ICAD).

      * JVM: Mantencion 11/06/1992
           MOVE SCR-SGV-TPER TO OPD-VAL-SINT IN OPD.
      * JVM: Fin
           IF DBC-IND-ICLI IN OPD-FLD = 'M' OR
              CAD-IND-TCAD IN OPD-FLD = 'M'
                MOVE FIO-PUT TO FIO-CMND
                PERFORM DAP-FIO-OPD
                IF FIO-STAT-OKS
                    PERFORM EGR-FPEN-CIC
                ELSE
                    GO TO FIN-CMN-ING
           ELSE
               PERFORM FND-KEY-CAD
               PERFORM PRO-PAGO
               IF MSG-COD-MENS NOT > SPACES
                   PERFORM PRO-EMI.

      *>>>>
*% END
*% IF FIN_CMN_ING
      *<<<< FIN_CMN_ING
           MOVE FIO-STAT TO PGM-STAT-OPD.
           IF FIO-STAT-OKS
               MOVE 'OPD'               TO WSS-MSG-OPD-OPD
               MOVE SCR-CCPP            TO WSS-MSG-OPD-CMD
               MOVE OPD-COD-STAT IN OPD TO WSS-MSG-OPD-STS
               MOVE SCR-IND-OCIC        TO WSS-MSG-OPD-CIC
               MOVE 'DAP'       TO MSG-COD-SIST
               MOVE WSS-MSG-OPD TO MSG-COD-MENS
               PERFORM GET-MSG
               IF SCR-IND-OCIC = 'S'
                   MOVE OPD-CAI-IOPD IN OPD-FLD TO WSS-CPT-CAI
                   MOVE OPD-IIC-IOPD IN OPD-FLD TO WSS-CPT-IIC
                   PERFORM MSG-ADA
               ELSE
                   PERFORM MSG-ADA.

           IF PGM-STAT-OPD-OKS AND
              ( OPD-COD-STAT IN OPD = 'A' OR 'S' OR 'F' OR 'W' OR 'G' )
               PERFORM PRO-JNL.
*% IF PGM_CST
           IF PGM-STAT-OPD-OKS AND
              ( OPD-COD-STAT IN OPD = 'A' OR 'S' OR 'F' OR 'W' OR 'G' )
               PERFORM PUT-OPE-RCO.
*% END
      *>>>>
*% END
*% IF INI_CMN_MOD
      *<<<< INI_CMN_MOD
           PERFORM LEE-CLI.
           MOVE 'N' TO SCR-IND-OCIC.
      *>>>>
*% END
*% IF CMN_MOD_RET
      *<<<< CMN_MOD_RET

               
      * DEJA CARGADAS LAS LLAVES DE LIQ A MODIFICAR ANTES DE
      * PISARSE OPD-COD-STAT PARA RLR
           IF SCR-CMND = 'RLR'
               PERFORM KEY-LIQ-RDL.

           PERFORM GET-WSS-VAL-CAPT.
           PERFORM HDR-OPD.
      * JVM: Mantencion 11/06/1992
           IF SCR-CMND = 'MOD' OR 'RDL'
               MOVE SCR-SGV-TPER TO OPD-VAL-SINT IN OPD.
      * JVM: Fin
           IF SCR-CMND = 'MOD'
      *        IF DBC-IND-ICLI IN OPD-FLD NOT = 'M' AND
      *         IF SCR-IND-MCLI NOT = 'M' AND
      *            CAD-IND-TCAD IN OPD-FLD NOT = 'M'
      *              MOVE 'V' TO OPD-COD-STAT IN OPD-FLD
      *         ELSE
                    MOVE 'I' TO OPD-COD-STAT IN OPD-FLD.
      *     ELSE
      *     IF SCR-CMND = 'MDA'
      *         IF OPD-COD-STAT IN OPD = 'G' AND
      *            OPD-CAI-ISER IN OPD = OPD-CAI-ISER IN OPD-FLD AND
      *            OPD-IIC-ISER IN OPD = OPD-IIC-ISER IN OPD-FLD
      *             MOVE 'G' TO OPD-COD-STAT IN OPD-FLD
      *         ELSE
      *             MOVE 'A' TO OPD-COD-STAT IN OPD-FLD.
      *     ELSE
      *     IF SCR-CMND = 'RDL'
      *          MOVE 'G' TO OPD-COD-STAT IN OPD-FLD.

           MOVE OPD-VAL-CAPT IN OPD-FLD TO OPD-VAL-SCAP IN OPD.
           MOVE OPD-FEC-FREA IN OPD     TO OPD-FEC-FDEV IN OPD.

           
           IF SCR-CMND NOT = 'RDL' AND
              SCR-CMND NOT = 'RLR' 
              PERFORM GET-UPD-RCC
              IF NOT FIO-STAT-OKS
                  GO TO FIN-CMN-MOD.
      
           IF SCR-CMND = 'MDA'
               GO TO NOT-MOD-MDA.
      *EN 'RDL' Y 'RLR' SE MODIFICA CAD POR CAMBIO MONTO CAPTACION
           PERFORM GET-UPD-CAD.
           IF PGM-STAT-CAD-OKS
               PERFORM RET-CAD-OPD 
               MOVE WSS-VAL-CAPT TO CAD-SGV-LIQU IN CAD
               PERFORM MOD-CAD
               IF NOT FIO-STAT-OKS
                   GO TO FIN-CMN-MOD.

           PERFORM GET-UPD-VEN.
           IF PGM-STAT-VEN-OKS
               PERFORM RET-VEN-OPD
               
               PERFORM MOD-VEN
               IF NOT FIO-STAT-OKS
                   GO TO FIN-CMN-MOD.

           IF SCR-CMND NOT = 'RDL' AND
              SCR-CMND NOT = 'RLR'
               PERFORM GET-UPD-AUT
               IF NOT PGM-STAT-AUT-OKS
                   PERFORM PUT-AUT
               ELSE
                   MOVE FRM-CAI-ICAD IN OPD-FLD TO CAD-CAI-ICAD IN AUT
                   MOVE FRM-IIC-ICAD IN OPD-FLD TO CAD-IIC-ICAD IN AUT
                   PERFORM MOD-AUT
                   IF NOT FIO-STAT-OKS
                       GO TO FIN-CMN-MOD.
       NOT-MOD-MDA.

           IF SCR-CMND = 'RDL' AND
              OPD-VAL-CAPT IN OPD-FLD NOT > ZEROES
                MOVE 'L'    TO OPD-COD-STAT IN OPD-FLD
      *JUS-INI 8-JAN-1996
      *          MOVE ZEROES TO OPD-VAL-IPES IN OPD
      *JUS-FIN
           ELSE
           IF SCR-CMND = 'RLR'
                MOVE 'VIG' TO OPD-COD-SCTB IN OPD-FLD
                MOVE 'G'   TO OPD-COD-STAT IN OPD-FLD.
      *>>>>
*% END
*% IF FIN_CMN_MOD
      *<<<< FIN_CMN_MOD
           MOVE FIO-STAT TO PGM-STAT-OPD.
           IF NOT FIO-STAT-OKS                 
      *        Error inconsistencia en la modificacion : informar               
               MOVE FIO-MENS TO FRM-MENS
               GO TO FIN-CMN-MOD.

           IF SCR-CMND = 'MDA'
               MOVE OPD-CIC-IOPD IN OPD TO IMP-CIC-IOPD IN IMP
               MOVE FIO-GET-KEY-UPD TO FIO-CMND
               PERFORM DAP-FIO-IMP
               IF FIO-STAT-OKS
                   MOVE OPD-COD-CUST IN OPD TO IMP-COD-CUST IN IMP
                   MOVE FIO-MOD TO FIO-CMND
                   PERFORM DAP-FIO-IMP.

           IF SCR-CMND NOT = 'RDL' AND
              SCR-CMND NOT = 'RLR'
               IF PGM-STAT-RCC-OKS
                   PERFORM MOD-RCC
                   IF NOT FIO-STAT-OKS
                       GO TO FIN-CMN-MOD.

      *     IF ( SCR-CMND = 'RDL' OR 'RDB' )
      *           PERFORM MOD-OPD-LIQ.

           IF SCR-CMND = 'RDL' AND
              OPD-SGV-MPRE IN OPD-FLD > ZEROES
                 PERFORM PRO-LIQ-RDL
           ELSE
           IF SCR-CMND = 'RLR'
                 PERFORM PRO-LIQ-RLR.

      *     IF DBC-IND-ICLI IN OPD-FLD NOT = 'M' AND
      *     IF SCR-IND-MCLI NOT = 'M' AND
      *        CAD-IND-TCAD IN OPD-FLD NOT = 'M'
      *          MOVE 'V' TO OPD-COD-STAT IN OPD
      *     ELSE
      *          MOVE 'I' TO OPD-COD-STAT IN OPD.
      *     MOVE 'I' TO OPD-COD-STAT IN OPD.
           IF FIO-STAT-OKS
               MOVE 'OPD'               TO WSS-MSG-OPD-OPD
               MOVE SCR-CMND            TO WSS-MSG-OPD-CMD
               MOVE OPD-COD-STAT IN OPD TO WSS-MSG-OPD-STS
               MOVE SCR-IND-OCIC        TO WSS-MSG-OPD-CIC
               MOVE 'DAP'       TO MSG-COD-SIST
               MOVE WSS-MSG-OPD TO MSG-COD-MENS
               PERFORM GET-MSG
               IF SCR-IND-OCIC = 'S'
                   MOVE OPD-CAI-IOPD IN OPD-FLD TO WSS-CPT-CAI
                   MOVE OPD-IIC-IOPD IN OPD-FLD TO WSS-CPT-IIC
                   PERFORM MSG-ADA
               ELSE
                   PERFORM MSG-ADA.

           IF PGM-STAT-OPD-OKS AND
              ( OPD-COD-STAT IN OPD = 'A' OR 'S' OR 'F' OR 'W' OR 'G' )
               PERFORM PRO-JNL.
      *>>>>
*% END
*% IF CMN_ELI
      *<<<< CMN_ELI
      *     PERFORM GET-UPD-RCC.
      *     IF NOT FIO-STAT-OKS
      *         GO TO FIN-CMN-ELI.
      *     IF PGM-STAT-RCC-OKS
      *         PERFORM DEL-RCC
      *         IF NOT FIO-STAT-OKS
      *            GO TO FIN-CMN-ELI.

      *     PERFORM GET-UPD-CAD.
      *     IF PGM-STAT-CAD-OKS
      *         PERFORM DEL-CAD
      *         IF NOT FIO-STAT-OKS
      *            GO TO FIN-CMN-ELI.

           PERFORM GET-UPD-AUT.
           IF PGM-STAT-AUT-OKS
               PERFORM DEL-AUT
               IF NOT FIO-STAT-OKS
                  GO TO FIN-CMN-ELI.
      *>>>>
*% END
*% IF FIN_CMN_ELI
      *<<<< FIN_CMN_ELI
           IF NOT FIO-STAT-OKS
      *        Error inconsistencia en la eliminacion : informar
               MOVE FIO-MENS TO FRM-MENS
               GO TO FIN-CMN-ELI.

      *    si habilitamos el sgte. codigo debemos deshabilitar
      *    el del-cad anterior
           PERFORM DEL-MUL-CAD.
           IF NOT FIO-STAT-OKS
               PERFORM BCK-OUT
               GO TO FIN-CMN-ELI.

      *    si habilitamos el sgte. codigo debemos deshabilitar
      *    el del-rcc anterior
           PERFORM DEL-MUL-RCC.
           IF NOT FIO-STAT-OKS
               PERFORM BCK-OUT
               GO TO FIN-CMN-ELI.

           PERFORM DEL-MUL-VEN.
           IF NOT FIO-STAT-OKS
               PERFORM BCK-OUT
               GO TO FIN-CMN-ELI.

           PERFORM DEL-MUL-IMP.
      *>>>>
*% END
*% IF CMN_ACC
      *<<<< CMN_ACC

           PERFORM GET-WSS-VAL-CAPT.

           MOVE SPACES TO WSS-CAD-GLS-MENS.
           MOVE SPACES TO MSG-COD-MENS.
           IF OPD-IND-IDIF IN OPD = 'N'
               MOVE 'A' TO OPD-COD-STAT IN OPD
           ELSE
               MOVE 'G' TO OPD-COD-STAT IN OPD.

           IF OPD-COD-STAT IN OPD = 'G'
               MOVE 'VIG'  TO OPD-COD-SCTB IN OPD
           ELSE
               MOVE SPACES TO OPD-COD-SCTB IN OPD.

      *JVM: INICIO MANTENCION 
           MOVE OPD-CAI-IOPD IN OPD-FLD TO OPD-CAI-IOPD IN OPD.
           MOVE OPD-IIC-IOPD IN OPD-FLD TO OPD-IIC-IOPD IN OPD.

           PERFORM GET-CUR-RCC.
           IF NOT PGM-STAT-RCC-OKS
      *        OPD no tiene cliente asociado
               MOVE 'DAP' TO MSG-COD-SIST
               MOVE 'OPD    NORCC' TO MSG-COD-MENS
               MOVE SCR-STAT-CON TO SCR-STAT
               GO TO ERR-ACC.

           MOVE RCC TO WSS-RCC-1.

           MOVE RCC-CIC-ICLI IN RCC TO DBC-CIC-ICLI IN DBC.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM SGC-FIO-DBC.
           MOVE FIO-STAT TO PGM-STAT-DBC.
           IF NOT FIO-STAT-OKS
      *        cliente inexistente
               MOVE 'DAP' TO MSG-COD-SIST
               MOVE 'CLI    NEX' TO MSG-COD-MENS
               MOVE '00'         TO FIO-STAT
               MOVE SCR-STAT-CON TO SCR-STAT
               GO TO ERR-ACC.

           PERFORM GET-NXT-RCC.
           PERFORM PUT-DBC-OPD.
           PERFORM FND-KEY-CAD.
      
      *     IF SCR-CMND = 'VRF' AND
      *        OPD-FEC-FREA IN OPD-FLD NOT = OPD-FEC-FCMP IN OPD-FLD
      *          IF WSS-TOT-AUTO > ZEROES
      *               MOVE 'TCADAUTO' TO MSG-COD-MENS
      *               GO TO ERR-ACC.

           IF SCR-CMND = 'VRF'
               IF WSS-TOT-CADV > 1
                   MOVE SPACES TO WSS-CAD-GLS-MENS
                   MOVE 'TOTCADV>1' TO MSG-COD-MENS
                   GO TO ERR-ACC
               ELSE
               IF WSS-TOT-CLI = ZEROES
                   MOVE SPACES TO WSS-CAD-GLS-MENS
                   MOVE 'OPD    NORCC' TO MSG-COD-MENS
                   GO TO ERR-ACC
               ELSE
               IF WSS-TOT-CLI = 3
                   MOVE SPACES TO WSS-CAD-GLS-MENS
                   MOVE 'TOTCLI >2' TO MSG-COD-MENS
                   GO TO ERR-ACC
               ELSE
               IF OPD-IND-MCLI IN OPD = 'S' AND
                  WSS-TOT-CLI < 2
                   MOVE SPACES TO WSS-CAD-GLS-MENS
                   MOVE 'NOMULCLI' TO MSG-COD-MENS
                   GO TO ERR-ACC
               ELSE
               IF WSS-TOT-CAJA > 1
                   MOVE SPACES TO WSS-CAD-GLS-MENS
                   MOVE 'TOTCAJA>1' TO MSG-COD-MENS
                   GO TO ERR-ACC
               ELSE
               IF WSS-TOT-AUTO > 1
                   MOVE SPACES TO WSS-CAD-GLS-MENS
                   MOVE 'TOTAUTO>1' TO MSG-COD-MENS
                   GO TO ERR-ACC
               ELSE
               IF OPD-IND-IDIF IN OPD = 'S' AND
                  ( WSS-TOT-AUTO > ZEROES OR WSS-TOT-CAJA > ZEROES )
                   MOVE SPACES TO WSS-CAD-GLS-MENS
                   MOVE 'SOLOMNLODB' TO MSG-COD-MENS
                   GO TO ERR-ACC
               ELSE
      *LRH ini 28-JUN-1994
               IF WSS-TOT-CADS = 1
                      MOVE FIO-GET-KEY-UPD TO FIO-CMND
                      PERFORM DAP-FIO-CAD
                      IF NOT FIO-STAT-OKS
                          MOVE SPACES TO WSS-CAD-GLS-MENS
                          MOVE 'CADNEX UNICA' TO MSG-COD-MENS
                          GO TO ERR-ACC
                      ELSE
                          MOVE WSS-VAL-CAPT TO CAD-SGV-LIQU IN CAD
                          MOVE FIO-MOD TO FIO-CMND
                          PERFORM DAP-FIO-CAD
                          IF NOT FIO-STAT-OKS
                             MOVE 'CADMOD UNICA' TO MSG-COD-MENS
                             GO TO ERR-ACC
                          ELSE
                             NEXT SENTENCE
      *LRH fin 28-JUN-1994
               ELSE
               IF WSS-VAL-CAPT < WSS-VAL-SCAD
                   MOVE SPACES TO WSS-CAD-GLS-MENS
                   MOVE 'VALCAPT<SCAD' TO MSG-COD-MENS
                   GO TO ERR-ACC
               ELSE
               IF WSS-VAL-CAPT NOT = WSS-VAL-SCAD
                  IF WSS-TOT-CADV NOT = 1
                       MOVE SPACES TO WSS-CAD-GLS-MENS
                       MOVE 'VALCAPT<>CAD' TO MSG-COD-MENS
                       GO TO ERR-ACC
                  ELSE
                      MOVE WSS-CAD-KEY-ICAD TO CAD-KEY-ICAD IN CAD
                      MOVE FIO-GET-KEY-UPD TO FIO-CMND
                      PERFORM DAP-FIO-CAD
                      IF NOT FIO-STAT-OKS
                          MOVE SPACES TO WSS-CAD-GLS-MENS
                          MOVE 'CADNEX VACIA' TO MSG-COD-MENS
                          GO TO ERR-ACC
                      ELSE
                          SUBTRACT WSS-VAL-SCAD FROM
                          WSS-VAL-CAPT GIVING 
                          CAD-SGV-LIQU IN CAD
                          MOVE CAD-SGV-LIQU IN CAD TO
                               WSS-CAD-SGV-LIQU-EDT
                          MOVE CAD-SGV-LIQU IN CAD TO
                               WSS-VAL-CCTE
                          MOVE FIO-MOD TO FIO-CMND
                          PERFORM DAP-FIO-CAD.

      *JVM: FIN MANTENCION 

           IF SCR-CMND = 'VRF'
               PERFORM PRO-PAGO
               IF MSG-COD-MENS NOT > SPACES
                   PERFORM PRO-EMI.

           MOVE FIO-MOD TO FIO-CMND.
           PERFORM DAP-FIO-OPD.
           MOVE FIO-STAT TO PGM-STAT-OPD.
           IF FIO-STAT-OKS
               MOVE 'ACOPDOK' TO MSG-COD-TMSG
               MOVE OPD-COD-STAT IN OPD TO MSG-COD-CMSG
           ELSE
               MOVE 'ACOPDER' TO MSG-COD-TMSG
               MOVE OPD-COD-STAT IN OPD TO MSG-COD-CMSG.

           MOVE SCR-INST-HCM TO SCR-INST.

       ERR-ACC.
*% IF PGM_PTC
      *PTC-INI
           MOVE 'S' TO SCR-IERR.
      *PTC-FIN
*% END
      *GET-MSG Busca mensaje en tabla
           MOVE 'DAP' TO MSG-COD-SIST.
           PERFORM GET-MSG.
           PERFORM MSG-ADA.
           MOVE OPD-CAI-IOPD IN OPD-FLD TO WSS-CPT-CAI.
           MOVE OPD-IIC-IOPD IN OPD-FLD TO WSS-CPT-IIC.
           IF WSS-CAD-GLS-MENS > SPACES
               MOVE FRM-MENS TO WSS-CAD-GLS-MEN0
               MOVE WSS-GLS-CADV TO FRM-MENS.
           IF PGM-STAT-OPD-OKS AND
              ( OPD-COD-STAT IN OPD = 'A' OR 'S' OR 'F' OR 'W' OR 'G' )
               PERFORM GET-FHOY
               PERFORM PRO-JNL.
*% IF PGM_CST
           IF PGM-STAT-OPD-OKS AND
              ( OPD-COD-STAT IN OPD = 'A' OR 'S' OR 'F' OR 'W' OR 'G' )
               PERFORM GET-FHOY
               PERFORM PUT-OPE-RCO.
*% END
      *>>>>
*% END
*% IF FND_KEY
      *<<<< FND_KEY
           MOVE SPACES TO SCR-IND-MCLI.
           IF NOT ( SCR-CMND = 'ODL' OR SCR-CMND = 'ODB' )
               IF ( OPD-CAI-IOPD IN OPD-FLD NOT > SPACES AND
                    OPD-IIC-IOPD IN OPD-FLD NOT > ZEROES )
                      IF OPD-IIC-ISER IN OPD-FLD > ZEROES
                          PERFORM GET-SER-OPD
                      ELSE
                      IF DBC-GLS-NOMC IN OPD-FLD > SPACES OR
                         DBC-NUM-ICLI IN OPD-FLD > ZEROES
                           PERFORM GET-RCC-OPD
                           IF MSG-COD-MENS > SPACES
                                 MOVE '00' TO FIO-STAT
                                 MOVE SCR-STAT-CON TO SCR-STAT
                                 GO TO FIN-FND-KEY.
      *>>>>
*% END
*% IF FIN_FND_KEY
      *<<<< FIN_FND_KEY
           IF NOT FIO-STAT-OKS
               GO TO FIN-FND-KEY.

           MOVE '00' TO PGM-STAT-OPD.
           IF SCR-CCPP = 'ING'
               GO TO REC-OPD-STAT.
      * ISP: DEVUELVE LLAVES DE OPD A OPD-FLD EN CASO
      *      DE HABER LEIDO POR SERIAL O CLIENTE
           MOVE OPD-CAI-IOPD IN OPD TO OPD-CAI-IOPD IN OPD-FLD.
           MOVE OPD-IIC-IOPD IN OPD TO OPD-IIC-IOPD IN OPD-FLD.

           PERFORM GET-CUR-RCC.
           IF NOT PGM-STAT-RCC-OKS
      *        OPD no tiene cliente asociado
               MOVE 'DAP' TO MSG-COD-SIST
               MOVE 'OPD    NORCC' TO MSG-COD-MENS
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS
               MOVE SCR-STAT-CON TO SCR-STAT
               GO TO FIN-FND-KEY.

           MOVE RCC-CIC-ICLI IN RCC TO DBC-CIC-ICLI IN DBC.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM SGC-FIO-DBC.
           MOVE FIO-STAT TO PGM-STAT-DBC.
           IF NOT FIO-STAT-OKS
      *        cliente inexistente
               MOVE 'DAP' TO MSG-COD-SIST
               MOVE 'CLI    NEX' TO MSG-COD-MENS
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS
               MOVE '00'         TO FIO-STAT
               MOVE SCR-STAT-CON TO SCR-STAT
               GO TO FIN-FND-KEY.

           PERFORM GET-NXT-RCC.
           PERFORM PUT-DBC-OPD.

           PERFORM FND-KEY-CAD.
           IF NOT PGM-STAT-CAD-OKS
      *        OPD no tiene CAD asociado
               MOVE 'DAP' TO MSG-COD-SIST
               MOVE 'OPD    NOCAD' TO MSG-COD-MENS
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS
               MOVE SCR-STAT-CON TO SCR-STAT
               GO TO FIN-FND-KEY.

           PERFORM GET-CUR-AUT.
           IF PGM-STAT-AUT-OKS
               MOVE CAD-CAI-ICAD IN AUT TO FRM-CAI-ICAD IN OPD-FLD
               MOVE CAD-IIC-ICAD IN AUT TO FRM-IIC-ICAD IN OPD-FLD.

           PERFORM GET-CUR-VEN.
       REC-OPD-STAT.
           MOVE PGM-STAT-OPD TO FIO-STAT.
      *>>>>
*% END
*% IF EOF_PQ
      *<<<< EOF_PQ

      *  CODIGO ADICIONAL PARA ENGANCHE PROGRAMAS

       ING-FTER-CIC SECTION.
       INI-ING-FTER-CIC.
           PERFORM ING-SETE.
           MOVE SCR-INST-GKY TO SCR-INST.
           MOVE 'VRF' TO SCR-CMND.
           MOVE 'ACC' TO SCR-CCPP.
           MOVE 'A'   TO SCR-STPP.
           PERFORM HBL-KEY.
           PERFORM SCR-CLRA-OPD.
           MOVE SCR-CAI-IOPD TO OPD-CAI-IOPD IN OPD-FLD.
           MOVE SCR-IIC-IOPD TO OPD-IIC-IOPD IN OPD-FLD.
           PERFORM EDT-KEY-OPD.
           PERFORM EDT-FLD-OPD.

           MOVE 'DAP'       TO MSG-COD-SIST.
           MOVE 'VRFOPDENG' TO MSG-COD-MENS.
           PERFORM GET-MSG.
           MOVE MSG-GLS-DESC TO OPD-GLS-MENS IN OPD-FLD.

           MOVE 'DAP'        TO MSG-COD-SIST.
           MOVE 'OPDPRMTVRF' TO MSG-COD-MENS.
           PERFORM GET-MSG.
           MOVE MSG-GLS-DESC TO SCR-PRMT.
           MOVE SCR-NEMO TO FRM-COD-OPCI IN OPD-FLD.
           MOVE SPACES TO SCR-CIC-IOPD
                          SCR-VEC-ENG
                          SCR-VEC-FST
                          SCR-IND-EOV
                          SCR-INST-EXT
                          SCR-MENS-EXT.
      *     MOVE WSS-NEMO(1) TO SCR-NEMO.
           PERFORM SCR-INIT.
           PERFORM SCR-EXIT.
       FIN-ING-FTER-CIC.
           EXIT.

       ING-SETE SECTION.
       INI-ING-SETE.
           PERFORM CRG-TBL-ENG.
           MOVE WSS-NTRN(SCR-IPRO) TO SCR-NTRN.
           MOVE WSS-PROG(SCR-IPRO) TO SCR-PROG.
           MOVE WSS-NMAP(SCR-IPRO) TO SCR-NMAP.
           MOVE WSS-NLIB(SCR-IPRO) TO SCR-NLIB.
       FIN-ING-SETE.
           EXIT.

       SCR-INIT SECTION.
       INI-SCR-INIT.
           MOVE 3  TO FRM-PLIN.
           MOVE 19 TO FRM-NLIN.
           MOVE FRM-CLR-FRM TO FRM-CMND.
           PERFORM GNS-PRO-FRM.
           MOVE FRM-SINI-DBNF TO FRM-SINI.
           MOVE SCR-NMAP TO FRM-NAME.
           MOVE SCR-NLIB TO FRM-NLIB.
           MOVE OPD-FLD TO FRM-DFLD.
           MOVE FRM-INI TO FRM-CMND.
           PERFORM GNS-PRO-FRM.
       FIN-SCR-INIT.
           EXIT.

       PRO-FLD-OPD SECTION.
       INI-PRO-FLD-OPD.
           MOVE FRM-CPIM-AEY TO FRM-VAL-IPES-ATR IN OPD-FLD.
           MOVE FRM-CPIM-AEY TO FRM-CAI-ICAD-ATR IN OPD-FLD.
           MOVE FRM-CPIM-AEY TO FRM-IIC-ICAD-ATR IN OPD-FLD.
           MOVE FRM-CPIM-AEY TO OPD-NUM-PVEN-ATR IN OPD-FLD.
           MOVE FRM-CPIM-AEY TO OPD-IND-PVEN-ATR IN OPD-FLD.
           MOVE FRM-CPIM-AEY TO FRM-NUM-TVEN-ATR IN OPD-FLD.
           PERFORM PRO-OPD-OPD.
           PERFORM PRO-DBC-OPD.
           PERFORM PRO-RCC-OPD.
           PERFORM PRO-CAD-OPD.
       FIN-PRO-FLD-OPD.
           EXIT.
       
       PRO-OPD-OPD SECTION.
       INI-PRO-OPD-OPD.
           MOVE FRM-CPIM-AEY TO OPD-COD-VCAM-ATR IN OPD-FLD.
           MOVE FRM-CPIM-AEY TO OPD-COD-TOPD-ATR IN OPD-FLD.
           MOVE FRM-CPIM-AEY TO OPD-COD-AOPD-ATR IN OPD-FLD.
           MOVE FRM-CPIM-AEY TO OPD-COD-EJEC-ATR IN OPD-FLD.
           MOVE FRM-CPIM-AEY TO OPD-COD-OFIC-ATR IN OPD-FLD.
           MOVE FRM-CPIM-AEY TO OPD-SGV-TINT-ATR IN OPD-FLD.
           MOVE FRM-CPIM-AEY TO OPD-VAL-CAPT-ATR IN OPD-FLD.
           MOVE FRM-CPIM-AEY TO OPD-COD-EATE-ATR IN OPD-FLD.
           MOVE FRM-CPIM-AEY TO FRM-COD-EATE-ATR IN OPD-FLD.
           MOVE FRM-CPIM-AEY TO OPD-FEC-FTER-ATR IN OPD-FLD.
           MOVE FRM-CPIM-AEY TO OPD-COD-CUST-ATR IN OPD-FLD.
           MOVE FRM-CPIM-AEY TO OPD-FEC-FREA-ATR IN OPD-FLD.
           MOVE FRM-CPIM-AEY TO OPD-FEC-FCTB-ATR IN OPD-FLD.
           MOVE FRM-CPIM-AEY TO OPD-FEC-FPVC-ATR IN OPD-FLD.
           MOVE FRM-CPIM-AEY TO OPD-NUM-DURV-ATR IN OPD-FLD.
           MOVE FRM-CPIM-AEY TO OPD-IND-DURV-ATR IN OPD-FLD.
           MOVE FRM-CPIM-AEY TO OPD-NUM-SEVE-ATR IN OPD-FLD.
           MOVE FRM-CPIM-AEY TO OPD-IND-SEVE-ATR IN OPD-FLD.
           MOVE FRM-CPIM-AEY TO OPD-COD-MORE-ATR IN OPD-FLD.
           MOVE FRM-CPIM-AEY TO OPD-SGV-MPRE-ATR IN OPD-FLD.
           MOVE FRM-CPIM-AEY TO OPD-NUM-RETD-ATR IN OPD-FLD.
           MOVE FRM-CPIM-AEY TO OPD-IND-RETD-ATR IN OPD-FLD.
           MOVE FRM-CPIM-AEY TO OPD-COD-UBFD-ATR IN OPD-FLD.
           MOVE FRM-CPIM-AEY TO OPD-COD-DEVL-ATR IN OPD-FLD.
           MOVE FRM-CPIM-AEY TO OPD-COD-AFER-ATR IN OPD-FLD.
       FIN-PRO-OPD-OPD.
           EXIT.
       
       PRO-DBC-OPD SECTION.
       INI-PRO-DBC-OPD.
       FIN-PRO-DBC-OPD.
           EXIT.
       
       PRO-RCC-OPD SECTION.
       INI-PRO-RCC-OPD.
           MOVE FRM-CPIM-AEY TO RCC-NUM-DIRE-ATR IN OPD-FLD.
       FIN-PRO-RCC-OPD.
           EXIT.
       
       PRO-CAD-OPD SECTION.
       INI-PRO-CAD-OPD.
           MOVE FRM-CPIM-AEY TO CAD-IND-TCAD-ATR IN OPD-FLD.
           MOVE FRM-CPIM-AEY TO CAD-CAI-ICAD-ATR IN OPD-FLD.
           MOVE FRM-CPIM-AEY TO CAD-IIC-ICAD-ATR IN OPD-FLD.
       FIN-PRO-CAD-OPD.
           EXIT.

       GET-V001 SECTION.
       INI-GET-V001.
           MOVE 'DAP' TO TAB-COD-SIST.
           MOVE 'VSN' TO TAB-COD-TTAB IN TAB.
           MOVE '001' TO TAB-COD-CTAB IN TAB.
           PERFORM BUS-TAB.
           IF MSG-COD-MENS > SPACES
      * ISP: VERSION 'B'ANCO
                MOVE 'B' TO SCR-IND-V001
           ELSE
      * ISP: VERSION 'C'ONSIST
                MOVE 'C' TO SCR-IND-V001.

       FIN-GET-V001.
           EXIT.

       BUS-OFI-CSSN SECTION.           
       INI-BUS-OFI-CSSN.
      *     MOVE SCR-USER TO USR-COD-USER IN USR.
      * JVM : Mantencion 11/06/1992
           IF SCR-USER NOT > SPACES
               MOVE 'RJUNCO' TO SCR-USER.

           MOVE SCR-USER TO USR-COD-USER IN USR.
      * JVM : Fin
           PERFORM VAL-USR.
           IF MSG-COD-MENS > SPACES
               MOVE 'USRCSSNNEX' TO MSG-COD-MENS
               PERFORM GOTO-CMN
           ELSE
               MOVE USR-COD-OFUS IN USR TO OFI-COD-OFIC IN OFI
               PERFORM BUS-OFI
               IF MSG-COD-MENS > SPACES
                   MOVE 'OFICSSNNEX' TO MSG-COD-MENS
                   PERFORM GOTO-CMN
               ELSE
                   MOVE USR-COD-OFUS IN USR TO SCR-COD-OFIC.
       FIN-BUS-OFI-CSSN.
           EXIT.

       GET-SON SECTION.
       INI-GET-SON.
           MOVE 'GNS' TO TAB-COD-SIST.
           MOVE 'SON' TO TAB-CIC-TTAB IN TAB.
           MOVE 'S'   TO TAB-CIC-CTAB IN TAB.
           MOVE 'TAB-CIC-TABL' TO FIO-AKEY.
           PERFORM BUS-TAB.
           IF MSG-COD-MENS > SPACES
               MOVE 'GNSSONSNEX' TO MSG-COD-MENS
               PERFORM GOTO-CMN
           ELSE
               MOVE TAB-COD-CTAB IN TAB TO SCR-SON-S.

           MOVE 'GNS' TO TAB-COD-SIST.
           MOVE 'SON' TO TAB-CIC-TTAB IN TAB.
           MOVE 'N'   TO TAB-CIC-CTAB IN TAB.
           MOVE 'TAB-CIC-TABL' TO FIO-AKEY.
           PERFORM BUS-TAB.
           IF MSG-COD-MENS > SPACES
               MOVE 'GNSSONNNEX' TO MSG-COD-MENS
               PERFORM GOTO-CMN
           ELSE
               MOVE TAB-COD-CTAB IN TAB TO SCR-SON-N.
       FIN-GET-SON.
           EXIT.

       GET-TAD SECTION.
       INI-GET-TAD.
           MOVE 'DAP' TO TAB-COD-SIST.
           MOVE 'TAD' TO TAB-CIC-TTAB IN TAB.
           MOVE 'M'   TO TAB-CIC-CTAB IN TAB.
           MOVE 'TAB-CIC-TABL' TO FIO-AKEY.
           PERFORM BUS-TAB.
           IF MSG-COD-MENS > SPACES
               MOVE 'DAPTADMNEX' TO MSG-COD-MENS
               PERFORM GOTO-CMN
           ELSE
               MOVE TAB-COD-CTAB IN TAB TO SCR-TAD-M.

           MOVE 'DAP' TO TAB-COD-SIST.
           MOVE 'TAD' TO TAB-CIC-TTAB IN TAB.
           MOVE 'T'   TO TAB-CIC-CTAB IN TAB.
           MOVE 'TAB-CIC-TABL' TO FIO-AKEY.
           PERFORM BUS-TAB.
           IF MSG-COD-MENS > SPACES
               MOVE 'DAPTADTNEX' TO MSG-COD-MENS
               PERFORM GOTO-CMN
           ELSE
               MOVE TAB-COD-CTAB IN TAB TO SCR-TAD-T.
       FIN-GET-TAD.
           EXIT.

       GET-GARA-N SECTION.
       INI-GET-GARA-N.
           MOVE 'DAP' TO TAB-COD-SIST.
           MOVE 'GAR' TO TAB-CIC-TTAB IN TAB.
           MOVE 'N'   TO TAB-CIC-CTAB IN TAB.
           MOVE 'TAB-CIC-TABL' TO FIO-AKEY.
           PERFORM BUS-TAB.
           IF MSG-COD-MENS > SPACES
               MOVE 'DAPGARN' TO MSG-COD-MENS
               PERFORM GOTO-CMN
           ELSE
               MOVE TAB-COD-CTAB IN TAB TO SCR-COD-GARA-N.
       FIN-GET-GARA-N.
           EXIT.

       GET-CUST-E SECTION.
       INI-GET-CUST-E.
           MOVE 'DAP' TO TAB-COD-SIST.
           MOVE 'CUS' TO TAB-CIC-TTAB IN TAB.
           MOVE 'E'   TO TAB-CIC-CTAB IN TAB.
           MOVE 'TAB-CIC-TABL' TO FIO-AKEY.
           PERFORM BUS-TAB.
           IF MSG-COD-MENS > SPACES
               MOVE 'CICCUSENEX' TO MSG-COD-MENS
               PERFORM GOTO-CMN
           ELSE
               MOVE TAB-COD-CTAB IN TAB TO SCR-COD-CUST-E.
       FIN-GET-CUST-E.
           EXIT.

       GOTO-CMN SECTION.
       INI-GOTO-CMN.
           MOVE 'DAP' TO MSG-COD-SIST.
           PERFORM GET-MSG.
           MOVE MSG-GLS-DESC TO FRM-MENS.
           PERFORM SCR-MSSG.
           MOVE SCR-INST-HCM TO SCR-INST.
           PERFORM SCR-COM.
       FIN-GOTO-CMN.
           EXIT.

       GET-SER-OPD SECTION.
       INI-GET-SER-OPD.
      * ISP: FND-KEY YA PUSO LAS LLAVES DEL SERIAL EN OPD
      *     MOVE 0 TO WSS-IND-ISER IN WSS-VARI.
      *     MOVE FIO-GET-NLS TO FIO-CMND.
      * CIC-GET-SER-OPD.
      *     MOVE 'OPD-CIC-ISER' TO FIO-AKEY.
      *     PERFORM DAP-FIO-OPD.
      *     MOVE '23' TO PGM-STAT-OPD.
      *     IF FIO-STAT-OKS
      *         IF OPD-CAI-ISER IN OPD-FLD = OPD-CAI-ISER IN OPD AND
      *            OPD-IIC-ISER IN OPD-FLD = OPD-IIC-ISER IN OPD
      *              IF OPD-COD-STAT IN OPD = 'G'
      *                  MOVE '00' TO PGM-STAT-OPD
      *                  MOVE OPD-CAI-IOPD IN OPD TO
      *                       OPD-CAI-IOPD IN OPD-FLD
      *                  MOVE OPD-IIC-IOPD IN OPD TO
      *                       OPD-IIC-IOPD IN OPD
      *              ELSE
      *                  MOVE 1 TO WSS-IND-ISER IN WSS-VARI
      *                  MOVE FIO-GET-NXT TO FIO-CMND
      *                  GO TO CIC-GET-SER-OPD
      * JVM: Mantencion 11/06/1992
      *         ELSE
      *             IF WSS-IND-ISER IN WSS-VARI = 1
      *                MOVE OPD-CAI-ISER IN OPD-FLD TO 
      *                     OPD-CAI-ISER IN OPD 
      *                MOVE OPD-IIC-ISER IN OPD-FLD TO 
      *                     OPD-IIC-ISER IN OPD
      *                MOVE 'OPD-CIC-ISER' TO FIO-AKEY
      *                MOVE FIO-GET-KEY TO FIO-CMND
      *                PERFORM DAP-FIO-OPD.
      * JVM: Fin

      * ISP: FND-KEY YA PUSO LAS LLAVES DEL SERIAL EN OPD
      *     MOVE 0 TO WSS-IND-ISER IN WSS-VARI.
           MOVE FIO-GET-KEY TO FIO-CMND.
           MOVE 'OPD-CIC-ISER' TO FIO-AKEY.
           PERFORM DAP-FIO-OPD.
           MOVE FIO-STAT TO PGM-STAT-OPD.
           IF FIO-STAT-OKS
               MOVE OPD-CAI-IOPD IN OPD TO OPD-CAI-IOPD IN OPD-FLD
               MOVE OPD-IIC-IOPD IN OPD TO OPD-IIC-IOPD IN OPD-FLD.
       FIN-GET-SER-OPD.
           EXIT.


      *>>>>
*% END
*% IF EOF
      *<<<< EOF

       COPY DAPBGMPT.

      *Entidades de TAB
       COPY TABBFCAM.
      *Entidades de SGC
       COPY SGCBFDBC.
       COPY SGCBFDCP.
       COPY SGCBFRCD.
       COPY SGCBGCLI.
      *Entidades de DAP
       COPY DAPBFLIQ.
       COPY DAPBFCAD.
       COPY DAPBFAUT.
       COPY DAPBFPOD.
       COPY DAPBFRCC.
       COPY DAPBFVEN.
       COPY DAPBG001.
       COPY DAPBG002.
       COPY DAPBG003.
       COPY DAPBG004.

       COPY GNSBGCAM.
       COPY GNSBGCPT.
       COPY GNSBGSTR.
       COPY GNSBGPES.

       KEY-LIQ-RDL SECTION.
       INI-KEY-LIQ-RDL.
           IF OPD-COD-STAT IN OPD = 'G'
               MOVE OPD-CIC-GREN IN OPD TO LIQ-CIC-IOPD IN LIQ
               MOVE 1                   TO LIQ-NUM-ILIQ IN LIQ
           ELSE
               MOVE OPD-CIC-IOPD IN OPD TO LIQ-CIC-IOPD IN LIQ
               MOVE 1                   TO LIQ-NUM-ILIQ IN LIQ.
       FIN-KEY-LIQ-RDL.
           EXIT.

*% IF PGM_PU

      * COPY GNSBGTDQ.
      *Modulo Generico Manejo de Transient Data
      * Le falta el accesar transient datas de otros CICS
       GNS-CHK-TDQ SECTION.
       INI-GNS-CHK-TDQ.
           MOVE TDQ-GET TO TDQ-CMND.
           PERFORM GNS-PRO-TDQ.
       FIN-GNS-CHK-TDQ.
           EXIT.

      **************************************************************

       GNS-ERR-TDQ SECTION.
       INI-GNS-ERR-TDQ.
           EXEC CICS HANDLE CONDITION
                     IOERR     (GNS-TDQ-IOE)
                     LENGERR   (GNS-TDQ-LEN)
                     NOSPACE   (GNS-TDQ-NOS)
                     NOTOPEN   (GNS-TDQ-NOT)
                     QIDERR    (GNS-TDQ-QID)
                     QZERO     (GNS-TDQ-QZE)
           END-EXEC.
       FIN-GNS-ERR-TDQ.
           EXIT.

       GNS-TDQ-IOE.
           MOVE 'IOERR EN TRANSIENT DATA ' TO FRM-MEN1.
           MOVE TDQ-COLA TO FRM-MEN2.
           GO TO TDQ-ERR-ABT.

       GNS-TDQ-LEN.
           MOVE 'ERROR DE LARGO EN TRANSIENT DATA ' TO FRM-MEN1.
           MOVE TDQ-COLA TO FRM-MEN2.
           GO TO TDQ-ERR-ABT.

       GNS-TDQ-NOS.
           MOVE 'ERROR DE ESPACIO EN TRANSIENT DATA ' TO FRM-MEN1.
           MOVE TDQ-COLA TO FRM-MEN2.
           GO TO TDQ-ERR-ABT.

       GNS-TDQ-NOT.
           MOVE 'ERROR : TRANSIENT DATA NO ABIERTA ' TO FRM-MEN1.
           MOVE TDQ-COLA TO FRM-MEN2.
           GO TO TDQ-ERR-ABT.

       GNS-TDQ-QID.
           MOVE 'NO EXISTE TRANSIENT DATA ' TO FRM-MEN1.
           MOVE TDQ-COLA TO FRM-MEN2.
           GO TO TDQ-ERR-ABT.

       GNS-TDQ-QZE.
           MOVE TDQ-STAT-QZE TO TDQ-STAT.
           GO TO FIN-GNS-PRO-TDQ.

       TDQ-ERR-ABT.
           MOVE 'GNSPPABT' TO SYS-PROG.
           MOVE +79        TO SYS-TCMA.
      *    MOVE FRM-MENS   TO SYS-CMMA.
           EXEC CICS XCTL
                     PROGRAM(SYS-PROG)
                     COMMAREA(SYS-MENS)
                     LENGTH(SYS-TCMA)
           END-EXEC.

       GNS-PRO-TDQ SECTION.
       INI-GNS-PRO-TDQ.
           MOVE TDQ-STAT-OKS TO TDQ-STAT.
           IF TDQ-CMND = TDQ-PUT
               GO TO GNS-PUT-TDQ
           ELSE
           IF TDQ-CMND = TDQ-GET
               GO TO GNS-GET-TDQ
           ELSE
           IF TDQ-CMND = TDQ-DEL
               GO TO GNS-DEL-TDQ.
           MOVE 'Comando invalido :' TO TDQ-MEN1.
           MOVE TDQ-CMND             TO TDQ-MEN2.
           EXEC CICS XCTL
                     PROGRAM('GNSPPABT')
                     COMMAREA(TDQ-MENS)
                     LENGTH(+79)
           END-EXEC.

       GNS-PUT-TDQ.
           EXEC CICS WRITEQ TD
                     QUEUE(TDQ-COLA)
                     FROM(TDQ-ITEM)
                     LENGTH(TDQ-LITM)
           END-EXEC.
       FIN-GNS-PUT-TDQ.
           GO TO FIN-GNS-PRO-TDQ.

       GNS-GET-TDQ.
           EXEC CICS READQ TD
                     QUEUE(TDQ-COLA)
                     INTO(TDQ-ITEM)
                     LENGTH(TDQ-LITM)
           END-EXEC.
       FIN-GNS-GET-TDQ.
           GO TO FIN-GNS-PRO-TDQ.

       GNS-DEL-TDQ.
           EXEC CICS DELETEQ TD
                     QUEUE(TDQ-COLA)
           END-EXEC.
       FIN-GNS-DEL-TDQ.
           GO TO FIN-GNS-PRO-TDQ.

       FIN-GNS-PRO-TDQ.
           EXIT.

*% END
       COPY GNSBPFEC.


*% IF PGM_PQ
       VAL-PER-REN SECTION.
       INI-VAL-PER-REN.
           PERFORM KEY-LIQ-RDL.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM DAP-FIO-LIQ.
           IF FIO-STAT-OKS
               MOVE 'OPDYA  NEG' TO MSG-COD-MENS
               GO TO FIN-VAL-PER-REN.

           MOVE ZEROES TO WSS-NUM-PNTE.
           MOVE OPD-NUM-DREA IN OPD TO FEC-ITM1.
           MOVE OPD-NUM-MREA IN OPD TO FEC-ITM2.
           MOVE OPD-NUM-SREA IN OPD TO FEC-ITM3.
           MOVE OPD-NUM-AREA IN OPD TO FEC-ITM4.

       BUS-INI-PER-REN.
      * ISP: SE POSICIONA EN PRIMERA FECHA HABIL A PARTIR DE
      *      FECHA DE CAPTACION ( INCLUSIVE )
      *      LA DEJA CARGADA EN FEC-FECH
      
           MOVE FEC-FBLK-S TO FEC-FBLK.
           MOVE FEC-CHOY-N TO FEC-CHOY.
           MOVE FEC-VHBL-S TO FEC-VHBL.
           MOVE FEC-VAL-FEC TO FEC-CMND.
           MOVE FEC-FORM-FEC TO FEC-FORM.
           PERFORM PRO-FEC.
           IF NOT FEC-STAT-HBL
               MOVE FEC-SUM-DIA            TO FEC-CMND
               MOVE 1                      TO FEC-NDIA
               MOVE FEC-FORM-FEC TO FEC-FORM
               PERFORM CAL-FEC
               GO TO BUS-INI-PER-REN.

       CIC-VAL-PER-REN.
           MOVE FEC-SUM-DIA            TO FEC-CMND.
           MOVE 1                      TO FEC-NDIA.
           MOVE FEC-FORM-FEC TO FEC-FORM.
           PERFORM CAL-FEC.

      *VAL-FEC Validar Fecha
           MOVE FEC-FBLK-S TO FEC-FBLK.
           MOVE FEC-CHOY-N TO FEC-CHOY.
           MOVE FEC-VHBL-S TO FEC-VHBL.
           MOVE FEC-VAL-FEC TO FEC-CMND.
           MOVE FEC-FORM-FEC TO FEC-FORM.
           PERFORM PRO-FEC.
           IF FEC-STAT-HBL
               ADD 1 TO WSS-NUM-PNTE.
           IF WSS-NUM-PNTE < OPD-NUM-PNTE IN OPD
                GO TO CIC-VAL-PER-REN.
           MOVE FEC-ITM1 TO WSS-NUM-DUNO.
           MOVE FEC-ITM2 TO WSS-NUM-MUNO.
           MOVE FEC-ITM3 TO WSS-NUM-SUNO.
           MOVE FEC-ITM4 TO WSS-NUM-AUNO.
           PERFORM GET-FHOY.
           IF HOY-FHOY > WSS-FEC-FUNO
               MOVE 'PERRENOINV' TO MSG-COD-MENS.
       FIN-VAL-PER-REN.
           EXIT.

       VAL-LIQ-RDL SECTION.
       INI-VAL-LIQ-RDL.
           MOVE SPACES TO MSG-COD-MENS.
           PERFORM KEY-LIQ-RDL.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM DAP-FIO-LIQ.
           IF NOT FIO-STAT-OKS
               MOVE 'LIQRDL NEX' TO MSG-COD-MENS
               GO TO FIN-VAL-LIQ-RDL.

           IF LIQ-COD-STAT IN LIQ NOT = 'S'
               MOVE 'LIQRDL NS' TO MSG-COD-MENS
               GO TO FIN-VAL-LIQ-RDL.
           
           PERFORM GET-FHOY.
           IF LIQ-FEC-FTRN IN LIQ NOT = HOY-FHOY
               MOVE 'LIQRDL NHOY' TO MSG-COD-MENS
               GO TO FIN-VAL-LIQ-RDL.

           ADD LIQ-SGV-TPAG IN LIQ TO OPD-VAL-CAPT IN OPD-FLD.
           MOVE ZEROES             TO FRM-VAL-FORI IN OPD-FLD.
           MOVE ZEROES             TO OPD-SGV-MPRE IN OPD-FLD.
           MOVE SPACES             TO FRM-CAI-ICAD IN OPD-FLD.
           MOVE ZEROES             TO FRM-IIC-ICAD IN OPD-FLD.
           MOVE ZEROES             TO FRM-VAL-IPES IN OPD-FLD.

       FIN-VAL-LIQ-RDL.
           EXIT.

*% END
       CPT-NOMB SECTION.
       INI-CPT-NOMB.
           MOVE DBC-GLS-NOMC IN DBC TO CPT-STRN.
           PERFORM CPT-BLKS.
           MOVE CPT-STRN            TO DBC-GLS-NOMC IN DBC.
       FIN-CPT-NOMB.
           EXIT.

       GET-RCC-OPD SECTION.
       INI-GET-RCC-OPD.
           MOVE SPACES TO MSG-COD-MENS.
           IF DBC-NUM-ICLI IN OPD-FLD > ZEROES
      *IDC-CLI Busca Cliente por medio de IdC
               MOVE DBC-NUM-ICLI IN OPD-FLD TO DBC-NUM-ICLI IN DBC
               MOVE DBC-IND-ICLI IN OPD-FLD TO DBC-IND-ICLI IN DBC
               MOVE DBC-GLS-ICLI IN OPD-FLD TO DBC-GLS-ICLI IN DBC
               MOVE 'DBC-IDC-ICLI' TO FIO-AKEY
               MOVE FIO-GET-KEY    TO FIO-CMND
               PERFORM GET-CLI
               IF MSG-COD-MENS > SPACES
                   MOVE SPACES       TO DBC-GLS-NOMC IN OPD-FLD
                   MOVE FIO-STAT-NEX TO FIO-STAT
                   MOVE '39'         TO PGM-STAT-DBC
                   MOVE MSG-GLS-DESC TO FRM-MENS
               ELSE
                   MOVE '00'         TO PGM-STAT-DBC
                   PERFORM CPT-NOMB
           ELSE
           IF DBC-GLS-NOMC IN OPD-FLD > SPACES
      *NOM-CLI Busca Cliente por medio del Nombre
               MOVE DBC-GLS-NOMC IN OPD-FLD TO STR-GLS-GSTR
               PERFORM STR-UNS
               MOVE STR-GLS-FUNS IN STR-VARI(1) TO DBC-GLS-APAT IN DBC
               MOVE STR-GLS-FUNS IN STR-VARI(2) TO DBC-GLS-AMAT IN DBC
               MOVE STR-GLS-FUNS IN STR-VARI(3) TO DBC-GLS-NOMB IN DBC
               MOVE 'DBC-GLS-NOMC' TO FIO-AKEY
               MOVE FIO-GET-NLS    TO FIO-CMND
               PERFORM GET-CLI
               IF MSG-COD-MENS > SPACES
                   MOVE ZEROES       TO DBC-NUM-ICLI IN OPD-FLD
                   MOVE SPACES       TO DBC-VRF-ICLI IN OPD-FLD
                   MOVE SPACES       TO DBC-IND-ICLI IN OPD-FLD
                   MOVE SPACES       TO DBC-GLS-ICLI IN OPD-FLD
                   MOVE FIO-STAT-NEX TO FIO-STAT
                   MOVE '39'         TO PGM-STAT-DBC
                   MOVE MSG-GLS-DESC TO FRM-MENS
               ELSE
                   MOVE '00'         TO PGM-STAT-DBC
                   MOVE DBC-GLS-NOMC IN DBC TO CPT-STRN
                   PERFORM CPT-BLKS
                   MOVE CPT-STRN            TO DBC-GLS-NOMC IN DBC.

           IF MSG-COD-MENS NOT > SPACES
               MOVE DBC-CIC-ICLI IN DBC TO RCC-CIC-ICLI IN RCC
               MOVE HIGH-VALUES         TO RCC-CIC-IOPD IN RCC
               PERFORM SET-CAI-RCC   
               MOVE FIO-GET-LEQ TO FIO-CMND
               PERFORM DAP-FIO-RCC
               IF DBC-CIC-ICLI IN DBC NOT = RCC-CIC-ICLI IN RCC
                   MOVE 'DAP' TO MSG-COD-SIST
                   MOVE 'OPDNORCC' TO MSG-COD-MENS
                   PERFORM GET-MSG
                   MOVE MSG-GLS-DESC TO FRM-MENS
               ELSE
                   MOVE RCC-CAI-IOPD IN RCC TO OPD-CAI-IOPD IN OPD-FLD
                   MOVE RCC-IIC-IOPD IN RCC TO OPD-IIC-IOPD IN OPD-FLD
                   MOVE RCC-CIC-IOPD IN RCC TO OPD-CIC-IOPD IN OPD.
       FIN-GET-RCC-OPD.
           EXIT.

       SET-CAI-RCC SECTION.
       INI-SET-CAI-RCC.
           IF SCR-NEMO = 'EXCACTOPD   ' 
              MOVE '0711' TO RCC-CAI-IOPD IN RCC
           ELSE
              IF SCR-NEMO = 'OPDACTOPD   ' 
                 MOVE '0710' TO RCC-CAI-IOPD IN RCC.
       FIN-SET-CAI-RCC.
           EXIT.

       GET-CUR-RCC SECTION.
       INI-GET-CUR-RCC.
           MOVE OPD-CIC-IOPD IN OPD TO RCC-CIC-IOPD IN RCC.
           MOVE 'RCC-KEY-IOPD' TO FIO-AKEY.
           MOVE FIO-GET-NLS    TO FIO-CMND.
           PERFORM DAP-FIO-RCC.
           IF NOT (FIO-STAT-OKS AND
                  OPD-CIC-IOPD IN OPD = RCC-CIC-IOPD IN RCC)          
                  MOVE '23' TO FIO-STAT.
           MOVE FIO-STAT TO PGM-STAT-RCC.
           IF FIO-STAT-OKS
               MOVE 1 TO WSS-TOT-CLI.
       FIN-GET-CUR-RCC.
           EXIT.

       GET-NXT-RCC SECTION.
       INI-GET-NXT-RCC.
           MOVE SPACES TO MSG-COD-SIST.
           MOVE SPACES TO MSG-COD-MENS.
           MOVE 'RCC-KEY-IOPD' TO FIO-AKEY.
           MOVE FIO-GET-NXT TO FIO-CMND.
           PERFORM DAP-FIO-RCC.
           IF FIO-STAT-OKS AND
              OPD-CIC-IOPD IN OPD = RCC-CIC-IOPD IN RCC
                ADD 1 TO WSS-TOT-CLI
                MOVE RCC-CIC-ICLI IN RCC TO 
                           WSS-BKP-CIC-ICLI IN WSS-VARI
                MOVE RCC TO WSS-RCC-2
                MOVE 'M' TO SCR-IND-MCLI
                MOVE 'RCC-KEY-IOPD' TO FIO-AKEY
                MOVE FIO-GET-NXT TO FIO-CMND
                PERFORM DAP-FIO-RCC
                IF FIO-STAT-OKS AND
                    OPD-CIC-IOPD IN OPD = RCC-CIC-IOPD IN RCC
                    ADD 1 TO WSS-TOT-CLI
                    PERFORM GET-CUR-RCC
                ELSE
                    NEXT SENTENCE
           ELSE
                MOVE SPACES TO SCR-IND-MCLI
                PERFORM GET-CUR-RCC.
       FIN-GET-NXT-RCC.
           EXIT.

       GET-CUR-AUT SECTION.
       INI-GET-CUR-AUT.
           MOVE 'CAD-KEY-ICAD' TO FIO-AKEY.
           MOVE OPD-CIC-IOPD IN OPD TO CAD-CIC-IOPD IN AUT.
           MOVE 'AUT'               TO CAD-NUM-ILIQ IN AUT.
           MOVE 1                   TO CAD-NUM-ICAD IN AUT.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM DAP-FIO-AUT.
           MOVE FIO-STAT TO PGM-STAT-AUT.
       FIN-GET-CUR-AUT.
           EXIT.

       GET-CUR-VEN SECTION.
       INI-GET-CUR-VEN.
           PERFORM CRG-KEY-VEN.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM DAP-FIO-VEN.
           MOVE FIO-STAT TO PGM-STAT-VEN.
       FIN-GET-CUR-VEN.
           EXIT.

       LEE-CLI SECTION.
       INI-LEE-CLI.
           IF DBC-IND-ICLI IN OPD-FLD = 'M'
               GO TO FIN-LEE-CLI.
           MOVE DBC-NUM-ICLI IN OPD-FLD TO DBC-NUM-ICLI IN DBC.
           MOVE DBC-IND-ICLI IN OPD-FLD TO DBC-IND-ICLI IN DBC.
           MOVE DBC-GLS-ICLI IN OPD-FLD TO DBC-GLS-ICLI IN DBC.
           MOVE 'DBC-IDC-ICLI' TO FIO-AKEY.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM SGC-FIO-DBC.
       FIN-LEE-CLI.
           EXIT.

       PUT-RCC SECTION.
       INI-PUT-RCC.
           IF DBC-IND-ICLI IN OPD-FLD = 'M'
               GO TO FIN-PUT-RCC.
           PERFORM CLR-RCC.
      *    busca cic-icli a partir de num-icli.
           MOVE DBC-CIC-ICLI IN DBC     TO RCC-CIC-ICLI IN RCC.
           MOVE OPD-CAI-IOPD IN OPD-FLD TO RCC-CAI-IOPD IN RCC.
           MOVE OPD-IIC-IOPD IN OPD-FLD TO RCC-IIC-IOPD IN RCC.
           MOVE OPD-COD-TOPD IN OPD-FLD TO RCC-COD-TOPD IN RCC.
           MOVE OPD-COD-AOPD IN OPD-FLD TO RCC-COD-AOPD IN RCC.
           MOVE RCC-NUM-DIRE IN OPD-FLD TO RCC-NUM-DIRE IN RCC.
           MOVE 100                     TO RCC-VAL-PRCO IN RCC.
           MOVE RCC TO WSS-RCC-1.
           MOVE FIO-PUT TO FIO-CMND.
           PERFORM DAP-FIO-RCC.
           IF NOT FIO-STAT-OKS
      *        Error inconsistencia en el ingreso : hacer LOGTB e informar ?
               MOVE FIO-MENS TO FRM-MENS
               PERFORM BCK-OUT.
       FIN-PUT-RCC.
           EXIT.

       CRG-KEY-VEN SECTION.
       INI-CRG-KEY-VEN.
           MOVE OPD-CIC-IOPD IN OPD TO VEN-CIC-IOPD IN VEN.
           MOVE '001'               TO VEN-NUM-IVEN IN VEN.
       FIN-CRG-KEY-VEN.
           EXIT.

       CLR-CAD SECTION.
       INI-CLR-CAD.
           MOVE SPACES TO CAD.
           MOVE ZEROES TO CAD-SGV-LIQU IN CAD.
       FIN-CLR-CAD.
           EXIT.

       CLR-AUT SECTION.
       INI-CLR-AUT.
           MOVE SPACES TO AUT.
           MOVE ZEROES TO CAD-SGV-LIQU IN AUT.
       FIN-CLR-AUT.
           EXIT.

       CLR-RCC SECTION.
       INI-CLR-RCC.
           MOVE SPACES TO RCC.
           MOVE SYS-TSTP TO RCC-STP-ITRN IN RCC.
       FIN-CLR-RCC.
           EXIT.


       CLR-VEN SECTION.
       INI-CLR-VEN.
           MOVE SPACES TO VEN.
           MOVE SYS-TSTP TO RCC-STP-ITRN IN RCC.
       FIN-CLR-VEN.
           EXIT.

       BCK-OUT SECTION.
       INI-BCK-OUT.
           MOVE FIO-BCK-OUT TO FIO-CMND.
      *     PERFORM DAP-FIO-CAD.
           MOVE 'DAP' TO FIO-SIST.
           PERFORM GNS-FIO-TAB.
           IF FIO-STAT-OKS
      *        Para informar que el backout se realizo con exito
               MOVE '49' TO FIO-STAT.
       FIN-BCK-OUT.
           EXIT.

      * BFR-RFSH SECTION.
      * INI-BFR-RFSH.
      *     MOVE 'RCC-KEY-IOPD' TO FIO-AKEY.
      *     MOVE FIO-BFR-RFH    TO FIO-CMND.
      *     PERFORM DAP-FIO-RCC.
      *
      *     MOVE 'OPD-CIC-ISER' TO FIO-AKEY.
      *     MOVE FIO-BFR-RFH    TO FIO-CMND.
      *     PERFORM DAP-FIO-OPD.
      *
      *     MOVE 'OPD-FEC-FREA' TO FIO-AKEY.
      *     MOVE FIO-BFR-RFH    TO FIO-CMND.
      *     PERFORM DAP-FIO-OPD.
      *
      *     MOVE 'OPD-FEC-FCTB' TO FIO-AKEY.
      *     MOVE FIO-BFR-RFH    TO FIO-CMND.
      *     PERFORM DAP-FIO-OPD.
      * FIN-BFR-RFSH.
      *     EXIT.

       FND-KEY-CAD SECTION.
       INI-FND-KEY-CAD.
           MOVE ZEROES TO WSS-TOT-CADV.
           MOVE ZEROES TO WSS-TOT-CAJA.
           MOVE ZEROES TO WSS-TOT-AUTO.
           MOVE ZEROES TO WSS-VAL-SCAD.
           MOVE ZEROES TO WSS-VAL-CAJA.
           MOVE ZEROES TO WSS-VAL-CCTE.
           MOVE SPACES TO WSS-CIC-CCTE.
           MOVE SPACES TO WSS-IND-TCTA.
      *LRH ini 28-JUN-1994
           MOVE ZERO TO WSS-TOT-CADS.
      *LRH fin 28-JUN-1994

           PERFORM FST-CAD-CAD.
           PERFORM DAP-FIO-CAD.
           IF NOT ( FIO-STAT-OKS AND
              OPD-CAI-IOPD IN OPD-FLD = CAD-CAI-IOPD IN CAD AND
              OPD-IIC-IOPD IN OPD-FLD = CAD-IIC-IOPD IN CAD AND
              CAD-NUM-ILIQ IN CAD     = ZEROES )
               MOVE '23' TO PGM-STAT-CAD
               GO TO FIN-FND-KEY-CAD.

       LUP-FND-KEY-CAD.
      *LRH ini 28-JUN-1994
           ADD 1 TO WSS-TOT-CADS.
      *LRH fin 28-JUN-1994
      *    sumatoria de montos cargos  ( para vrf )
           ADD  CAD-SGV-LIQU IN CAD TO WSS-VAL-SCAD.
           IF CAD-SGV-LIQU IN CAD NOT > ZEROES
               ADD 1 TO WSS-TOT-CADV
               IF WSS-TOT-CADV > 1
                   MOVE SPACES TO WSS-CAD-GLS-MENS
               ELSE
                   MOVE 'DAP' TO MSG-COD-SIST
                   MOVE 'CAD    VACIA' TO MSG-COD-MENS
                   PERFORM GET-MSG
                   MOVE MSG-GLS-DESC TO WSS-CAD-GLS-MENS
                   MOVE CAD-KEY-ICAD IN CAD TO WSS-CAD-KEY-ICAD
                   MOVE CAD-IND-TCAD IN CAD TO WSS-CAD-IND-TCAD
                   MOVE CAD-CAI-ICAD IN CAD TO WSS-CAD-CAI-ICAD
                   MOVE CAD-IIC-ICAD IN CAD TO WSS-CAD-IIC-ICAD.

      *BUS-MSC busca miscelaneo en tabla
           MOVE 'TAB'  TO MSC-COD-SIST.
           MOVE 'TCYA' TO MSC-COD-TMSC IN MSC.
           MOVE CAD-IND-TCAD IN CAD TO MSC-COD-CMSC IN MSC.
           PERFORM BUS-MSC.
           MOVE MSC-COD-DAT2 IN MSC(5) TO WSS-IND-GCAD.
           IF WSS-IND-GCAD = 'A'
      *        incrementa contador cargos 'automaticos' (maximo 1)
               ADD 1 TO WSS-TOT-AUTO
      *        monto de cargo automatico
               MOVE CAD-SGV-LIQU IN CAD TO WSS-VAL-CCTE.

           IF MSC-CIC-MSCL IN MSC = 'TCYACAJA'
      *        incrementa contador cargos 'caja' (maximo 1)
               ADD 1 TO WSS-TOT-CAJA
      *        monto a enterar en 'caja'
               MOVE CAD-SGV-LIQU IN CAD TO WSS-VAL-CAJA
           ELSE
           IF ( MSC-CIC-MSCL IN MSC = 'TCYACC'  OR 
                MSC-CIC-MSCL IN MSC = 'TCYACA' ) AND
              WSS-IND-GCAD = 'A'
      *        cuenta cte de cargo
               MOVE CAD-CIC-ICAD IN CAD TO WSS-CIC-CCTE
               IF MSC-CIC-MSCL IN MSC = 'TCYACC'
      *           informa que es cta cte
                  MOVE 'CCT' TO WSS-IND-TCTA
               ELSE
      *           informa que es cta aho
                  MOVE 'AHO' TO WSS-IND-TCTA.

           MOVE FIO-GET-NXT TO FIO-CMND.
           PERFORM DAP-FIO-CAD.
           IF FIO-STAT-OKS AND
              OPD-CAI-IOPD IN OPD-FLD = CAD-CAI-IOPD IN CAD AND
              OPD-IIC-IOPD IN OPD-FLD = CAD-IIC-IOPD IN CAD AND
              CAD-NUM-ILIQ IN CAD     = ZEROES
               MOVE 'M' TO SCR-IND-MCAD 
               GO TO LUP-FND-KEY-CAD.
       FIN-LUP-FND-KEY-CAD.

      *     IF SCR-IND-MCAD NOT = 'M'
            PERFORM FST-CAD-CAD.
            PERFORM DAP-FIO-CAD.
      *         MOVE CAD-IND-TCAD IN CAD TO CAD-IND-TCAD IN CAN-FLD
      *         MOVE CAD-CAI-ICAD IN CAD TO CAD-CAI-ICAD IN CAN-FLD
      *         MOVE CAD-IIC-ICAD IN CAD TO CAD-IIC-ICAD IN CAN-FLD.

           MOVE FIO-STAT TO PGM-STAT-CAD.
       FIN-FND-KEY-CAD.
           EXIT.

       FST-CAD-CAD SECTION.
       INI-FST-CAD-CAD.
           MOVE OPD-CAI-IOPD IN OPD-FLD TO CAD-CAI-IOPD IN CAD.
           MOVE OPD-IIC-IOPD IN OPD-FLD TO CAD-IIC-IOPD IN CAD.
           MOVE ZEROES                  TO CAD-NUM-ILIQ IN CAD.
           MOVE SPACES                  TO CAD-NUM-ICAD IN CAD.
           MOVE FIO-GET-NLS TO FIO-CMND.
       FIN-FST-CAD-CAD.
           EXIT.
      *>>>> EOF
*% END
*% IF EOF_PU
      *<<<< EOF_PU

       USPC107 SECTION.
       INI-USPC107.
           COPY USPC107.
       FIN-USPC107.
           EXIT.

       COPY TABBVTDU.

*% INCLUDE 'DAPTXT:DAPBMOPDFO.TXT'

       GET-VEN-GREN SECTION.
       INI-GET-VEN-GREN.
           MOVE OPD-CIC-GREN IN OPD TO VEN-CIC-IOPD IN VEN.
           MOVE 1                   TO VEN-NUM-IVEN IN VEN.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM DAP-FIO-VEN.
       FIN-GET-VEN-GREN.
           EXIT.

      * MOD-OPD-LIQ SECTION.
      * INI-MOD-OPD-LIQ.
      *     MOVE SCR-OPD-CIC-IOPD TO OPD-CIC-IOPD IN OPD.
      *     MOVE FIO-GET-KEY-UPD TO FIO-CMND.
      *     PERFORM DAP-FIO-OPD.
      *     MOVE 'L' TO OPD-COD-STAT IN OPD.
      *     MOVE FIO-MOD TO FIO-CMND.
      *     PERFORM DAP-FIO-OPD.
      * FIN-MOD-OPD-LIQ.
      *     EXIT.

       COPY SGCBGDOM.
       COPY DAPBFPTD.
       COPY DAPBFLIC.
       COPY DAPBFIMP.
       COPY DAPBFJNL.

       PRO-LIQ-RDL SECTION.
       INI-PRO-LIQ-RDL.
      * ISP: YA TIENE NUEVA OPD, CON ESTADO 'L' Y A ESTA SE LE ASOCIA
      *      LA LIQUIDACION
           PERFORM HDR-LIQ.

           PERFORM KEY-LIQ-RDL.
           MOVE SCR-COD-OFIC            TO LIQ-COD-OFIC IN LIQ.
           MOVE OPD-COD-EJEC IN OPD-FLD TO LIQ-COD-EJEC IN LIQ.
           MOVE ZEROES                  TO LIQ-SGV-REAJ IN LIQ.
           IF SCR-CIC-TVAL = PDB-CIC-MNAC
               MOVE OPD-SGV-MPRE IN OPD-FLD TO LIQ-SGV-PESO IN LIQ
               IF SCR-CIC-VCAM NOT = PDB-CIC-0999
                   DIVIDE OPD-SGV-MPRE IN OPD-FLD BY
                     SCR-SGV-VCAM GIVING LIQ-SGV-TPAG IN LIQ
                   ROUNDED
               ELSE
                   MOVE OPD-SGV-MPRE IN OPD-FLD TO LIQ-SGV-TPAG IN LIQ
           ELSE
               MOVE OPD-SGV-MPRE IN OPD-FLD TO LIQ-SGV-TPAG IN LIQ
               MOVE ZEROES                  TO LIQ-SGV-PESO IN LIQ.

               MOVE LIQ-SGV-TPAG IN LIQ     TO LIQ-SGV-CAPI IN LIQ.

           IF OPD-VAL-CAPT IN OPD-FLD > ZEROES
               MOVE 'LP'                TO LIQ-COD-LIQU IN LIQ
           ELSE
               MOVE 'LT'                TO LIQ-COD-LIQU IN LIQ.

           MOVE LIQ-FEC-FTRN IN LIQ     TO LIQ-FEC-FCMP IN LIQ.
           MOVE OPD-FEC-FREA IN OPD     TO LIQ-FEC-FREA IN LIQ
                                           LIQ-FEC-FCTB IN LIQ.
           MOVE ZEROES                  TO LIQ-SGV-GAST IN LIQ.
           IF FRM-CAI-ICAD IN OPD-FLD > SPACES OR
              FRM-IIC-ICAD IN OPD-FLD > ZEROES
                MOVE 'A' TO LIQ-COD-STAT IN LIQ
           ELSE
                MOVE 'S' TO LIQ-COD-STAT IN LIQ.

           MOVE FIO-PUT TO FIO-CMND.
           PERFORM DAP-FIO-LIQ.
           IF NOT FIO-STAT-OKS
               MOVE 'PUTLIQRDLERR' TO MSG-COD-MENS
               PERFORM ERR-PRO-LIQ-RDL
               GO TO FIN-PRO-LIQ-RDL.

           PERFORM HDR-CAD.
           MOVE LIQ-CIC-IOPD IN LIQ TO CAD-CIC-IOPD IN CAD.
           MOVE LIQ-NUM-ILIQ IN LIQ TO CAD-NUM-ILIQ IN CAD.
           MOVE 1                   TO CAD-NUM-ICAD IN CAD.
      *ISP: DEBEN PONERSE CICS, PENDIENTE MIENTRAS NO SE ACLARE
      *     LA INCONSISTENCIA EN MSC TCYA DE TAB
           IF FRM-CAI-ICAD IN OPD-FLD > SPACES OR
              FRM-IIC-ICAD IN OPD-FLD > ZEROES
      *         MOVE 'CMCA'  TO MSC-CIC-CMSC IN MSC
               MOVE 'CMCA'  TO CAD-IND-TCAD IN CAD
               MOVE 'S' TO CAD-IND-MAUT IN CAD
           ELSE
               MOVE 'N' TO CAD-IND-MAUT IN CAD
      *         MOVE 'CAJA'  TO MSC-CIC-CMSC IN MSC.
               MOVE 'CAJA'  TO CAD-IND-TCAD IN CAD.

      *     MOVE 'TAB'  TO MSC-COD-SIST.
      *     MOVE 'TCYA' TO MSC-CIC-TMSC IN MSC.
      *     MOVE 'MSC-CIC-TABL' TO FIO-AKEY.
      *     PERFORM BUS-MSC.
      *     IF MSG-COD-MENS = SPACES
      *         MOVE MSC-COD-CMSC IN MSC TO CAD-IND-TCAD IN CAD
      *     ELSE
      *         MOVE 'TCYACMCANEX' TO MSG-COD-MENS
      *         PERFORM ERR-PRO-LIQ-RDL
      *         GO TO FIN-PRO-LIQ-RDL.

           MOVE FRM-CAI-ICAD IN OPD-FLD TO CAD-CAI-ICAD IN CAD.
           MOVE FRM-IIC-ICAD IN OPD-FLD TO CAD-IIC-ICAD IN CAD.
           MOVE OPD-SGV-MPRE IN OPD-FLD TO CAD-SGV-LIQU IN CAD.
           MOVE OPD-COD-OFIC IN OPD     TO CAD-COD-OFIC IN CAD.
           MOVE FIO-PUT TO FIO-CMND.
           PERFORM DAP-FIO-CAD.
           IF NOT FIO-STAT-OKS
               MOVE 'PUTCADRDLERR' TO MSG-COD-MENS
               PERFORM ERR-PRO-LIQ-RDL
               GO TO FIN-PRO-LIQ-RDL.

           IF FRM-CAI-ICAD IN OPD-FLD > SPACES OR
              FRM-IIC-ICAD IN OPD-FLD > ZEROES
                  MOVE FRM-CAI-ICAD IN OPD-FLD TO WSS-CAI-CCTE
                  MOVE FRM-IIC-ICAD IN OPD-FLD TO WSS-IIC-CCTE
                  PERFORM LNK-DDT
            ELSE
                  MOVE OPD-CIC-ISER IN OPD TO LIC-CIC-ISER IN LIC
                  MOVE FIO-GET-KEY-UPD TO FIO-CMND
                  PERFORM DAP-FIO-LIC
                  IF FIO-STAT-OKS
                      PERFORM MOD-LIC
                      IF NOT FIO-STAT-OKS
                          MOVE 'MODLICRDLERR' TO MSG-COD-MENS
                          PERFORM ERR-PRO-LIQ-RDL
                      ELSE
                          NEXT SENTENCE
                  ELSE
                      PERFORM PUT-LIC-RDL
                      IF NOT FIO-STAT-OKS
                          MOVE 'PUTLICRDLERR' TO MSG-COD-MENS
                          PERFORM ERR-PRO-LIQ-RDL.

       FIN-PRO-LIQ-RDL.
           EXIT.

       ERR-PRO-LIQ-RDL SECTION.
       INI-ERR-PRO-LIQ-RDL.
           MOVE 'DAP' TO MSG-COD-SIST.
           PERFORM GET-MSG.
           MOVE MSG-GLS-DESC TO FRM-MENS.
           PERFORM BCK-OUT.
       FIN-ERR-PRO-LIQ-RDL.
           EXIT.

       PRO-LIQ-RLR SECTION.
       INI-PRO-LIQ-RLR.
           MOVE FIO-GET-KEY-UPD TO FIO-CMND.
           PERFORM DAP-FIO-LIQ.
           IF NOT FIO-STAT-OKS
      *        Error inconsistencia en la eliminacion : hacer LOGTB e informar  
               MOVE FIO-MENS TO FRM-MENS
               PERFORM BCK-OUT
               GO TO FIN-PRO-LIQ-RLR.

           MOVE LIQ-CIC-IOPD IN LIQ TO CAD-CIC-IOPD IN CAD.
           MOVE LIQ-NUM-ILIQ IN LIQ TO CAD-NUM-ILIQ IN CAD.
           MOVE 1                   TO CAD-NUM-ICAD IN CAD.
           MOVE FIO-GET-KEY-UPD TO FIO-CMND.
           PERFORM DAP-FIO-CAD.
           IF NOT FIO-STAT-OKS
               MOVE FIO-MENS TO FRM-MENS
               PERFORM BCK-OUT
               GO TO FIN-PRO-LIQ-RLR.

           MOVE FIO-DEL TO FIO-CMND.
           PERFORM DAP-FIO-CAD.
           IF NOT FIO-STAT-OKS
               MOVE FIO-MENS TO FRM-MENS
               PERFORM BCK-OUT
               GO TO FIN-PRO-LIQ-RLR.

           MOVE OPD-CIC-ISER IN OPD TO LIC-CIC-ISER IN LIC.
           MOVE FIO-GET-KEY-UPD TO FIO-CMND.
           PERFORM DAP-FIO-LIC.
           IF NOT FIO-STAT-OKS
               MOVE FIO-MENS TO FRM-MENS
               PERFORM BCK-OUT
               GO TO FIN-PRO-LIQ-RLR.

           IF LIC-COD-STAT IN LIC NOT = 'S'
               MOVE 'DAP' TO MSG-COD-SIST
               MOVE 'RLRLIC NS' TO MSG-COD-MENS
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS
               PERFORM BCK-OUT
               GO TO FIN-PRO-LIQ-RLR.

           IF SCR-CIC-TVAL = PDB-CIC-MNAC
               SUBTRACT LIQ-SGV-PESO IN LIQ FROM LIC-SGV-TPAG IN LIC
           ELSE
               SUBTRACT LIQ-SGV-TPAG IN LIQ FROM LIC-SGV-TPAG IN LIC.

           IF LIC-SGV-TPAG IN LIC NOT = ZEROES
               MOVE 'DAP' TO MSG-COD-SIST
               MOVE 'RLRLIC N0' TO MSG-COD-MENS
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS
               PERFORM BCK-OUT
               GO TO FIN-PRO-LIQ-RLR.

           MOVE FIO-DEL TO FIO-CMND.
           PERFORM DAP-FIO-LIC.
           IF NOT FIO-STAT-OKS
               MOVE FIO-MENS TO FRM-MENS
               PERFORM BCK-OUT
               GO TO FIN-PRO-LIQ-RLR.

           MOVE FIO-DEL TO FIO-CMND.
           PERFORM DAP-FIO-LIQ.
           IF NOT FIO-STAT-OKS
               MOVE FIO-MENS TO FRM-MENS
               PERFORM BCK-OUT
               GO TO FIN-PRO-LIQ-RLR.

       FIN-PRO-LIQ-RLR.
           EXIT.

       RET-VEN-OPD SECTION.
       INI-RET-VEN-OPD.
           MOVE 'I'      TO VEN-COD-STAT IN VEN.
           MOVE SCR-CAPI TO VEN-VAL-CAPI IN VEN.
           MOVE SCR-CAPI TO VEN-VAL-SCAP IN VEN.
           MOVE SCR-IDNI TO VEN-VAL-IDNI IN VEN.

           MOVE FRM-VAL-FORI IN OPD-FLD TO VEN-VAL-FINA IN VEN.

           MOVE FRM-VAL-FORI IN OPD-FLD TO VEN-VAL-SFIN IN VEN.

           MOVE OPD-FEC-FPVC IN OPD TO VEN-FEC-FVEN IN VEN.
       FIN-RET-VEN-OPD.
           EXIT.

       PUT-VEN SECTION.
       INI-PUT-VEN.
           PERFORM CLR-VEN.
           PERFORM CRG-KEY-VEN.
           PERFORM HDR-VEN.
 
           PERFORM RET-VEN-OPD.
           MOVE SPACES TO VEN-COD-SCTB IN VEN.
           MOVE FIO-PUT TO FIO-CMND.
           PERFORM DAP-FIO-VEN.
           IF NOT FIO-STAT-OKS
      *        Error inconsistencia en el ingreso : hacer LOGTB e informar ?
               MOVE FIO-MENS TO FRM-MENS
               PERFORM BCK-OUT.
       FIN-PUT-VEN.
           EXIT.

       MOD-RCC SECTION.
       INI-MOD-RCC.
      *     IF DBC-IND-ICLI IN OPD-FLD = 'M'
           IF SCR-IND-MCLI = 'M'
               GO TO FIN-MOD-RCC.
           MOVE FIO-DEL TO FIO-CMND.
           PERFORM DAP-FIO-RCC.
           PERFORM CLR-RCC.
           PERFORM PUT-RCC.

           IF NOT FIO-STAT-OKS
      *        Error inconsistencia en la eliminacion : hacer LOGTB e informar  
               MOVE FIO-MENS TO FRM-MENS
               PERFORM BCK-OUT.
       FIN-MOD-RCC.
           EXIT.

       MOD-CAD SECTION.
       INI-MOD-CAD.
           IF CAD-IND-TCAD IN OPD-FLD NOT = 'M'
               MOVE FIO-MOD TO FIO-CMND
               PERFORM DAP-FIO-CAD
               IF NOT FIO-STAT-OKS
      *        Error inconsistencia en la modificacion : hacer LOGTB e informar 
                   MOVE FIO-MENS TO FRM-MENS
                   PERFORM BCK-OUT.
       FIN-MOD-CAD.
           EXIT.

       MOD-VEN SECTION.
       INI-MOD-VEN.
           IF SCR-CMND = 'RLR' AND
              OPD-SGV-TINT IN OPD-FLD NOT > ZEROES
               MOVE OPD-FEC-FREA IN OPD TO VEN-FEC-FVEN IN VEN
               MOVE 'N' TO VEN-COD-STAT IN VEN
               MOVE ZEROES TO VEN-VAL-SFIN IN VEN
               MOVE ZEROES TO VEN-VAL-FINA IN VEN.
 
           MOVE FIO-MOD TO FIO-CMND.
           PERFORM DAP-FIO-VEN.
           IF NOT FIO-STAT-OKS
      *        Error inconsistencia en la modificacion : hacer LOGTB e informar 
               MOVE FIO-MENS TO FRM-MENS
               PERFORM BCK-OUT.
       FIN-MOD-VEN.
           EXIT.

       MOD-AUT SECTION.
       INI-MOD-AUT.
           MOVE FIO-MOD TO FIO-CMND.
           PERFORM DAP-FIO-AUT.
           IF NOT FIO-STAT-OKS
      *        Error inconsistencia en la modificacion : hacer LOGTB e informar 
               MOVE FIO-MENS TO FRM-MENS
               PERFORM BCK-OUT.
       FIN-MOD-AUT.
           EXIT.

       GET-UPD-VEN SECTION.
       INI-GET-UPD-VEN.
           PERFORM CRG-KEY-VEN.
           MOVE FIO-GET-KEY-UPD TO FIO-CMND.
           PERFORM DAP-FIO-VEN.
           MOVE FIO-STAT TO PGM-STAT-VEN.
       FIN-GET-UPD-VEN.
           EXIT.

       CRG-KEY-IMP SECTION.
       INI-CRG-KEY-IMP.
           MOVE OPD-CIC-IOPD IN OPD TO IMP-CIC-IOPD IN IMP.
       FIN-CRG-KEY-IMP.
           EXIT.

       GET-UPD-IMP SECTION.
       INI-GET-UPD-IMP.
           PERFORM CRG-KEY-IMP.
           MOVE FIO-GET-KEY-UPD TO FIO-CMND.
           PERFORM DAP-FIO-IMP.
           MOVE FIO-STAT TO PGM-STAT-IMP.
       FIN-GET-UPD-VEN.
           EXIT.

       GET-UPD-CAD SECTION.
       INI-GET-UPD-CAD.
           IF CAD-IND-TCAD IN OPD-FLD NOT = 'M'
               MOVE OPD-CIC-IOPD IN OPD TO CAD-CIC-IOPD IN CAD
               MOVE ZEROES              TO CAD-NUM-ILIQ IN CAD
               MOVE 1                   TO CAD-NUM-ICAD IN CAD
               MOVE FIO-GET-KEY-UPD TO FIO-CMND
               PERFORM DAP-FIO-CAD
               IF NOT FIO-STAT-OKS
                   MOVE '23' TO PGM-STAT-CAD
      *        como la transaccion Termina no es necesario hacer UNLOCK de
      *        CAD
      *        comunicar que no se pudo actualizar con mensaje pertinente
               ELSE
                   MOVE '00' TO PGM-STAT-CAD.
       FIN-GET-UPD-CAD.
           EXIT.

       GET-UPD-AUT SECTION.
       INI-GET-UPD-AUT.
           MOVE OPD-CIC-IOPD IN OPD TO CAD-CIC-IOPD IN AUT.
           MOVE 'AUT'               TO CAD-NUM-ILIQ IN AUT.
           MOVE 1                   TO CAD-NUM-ICAD IN AUT.
           MOVE FIO-GET-KEY-UPD TO FIO-CMND.
           PERFORM DAP-FIO-AUT.
           IF NOT FIO-STAT-OKS
               MOVE '23' TO PGM-STAT-AUT
      *        como la transaccion Termina no es necesario hacer UNLOCK de
      *        CAD
      *        comunicar que no se pudo actualizar con mensaje pertinente
           ELSE
               MOVE '00' TO PGM-STAT-AUT.
       FIN-GET-UPD-AUT.
           EXIT.

       GET-UPD-RCC SECTION.
       INI-GET-UPD-RCC.
      *     IF DBC-IND-ICLI IN OPD-FLD = 'M'
           IF SCR-IND-MCLI = 'M'
               GO TO FIN-GET-UPD-RCC.
           MOVE OPD-CAI-IOPD IN OPD-FLD TO RCC-CIC-IOPD IN RCC.
           MOVE OPD-IIC-IOPD IN OPD-FLD TO RCC-IIC-IOPD IN RCC.
           MOVE 'RCC-KEY-IOPD'  TO FIO-AKEY.
      *rfu     MOVE FIO-GET-KEY TO FIO-CMND.
           MOVE FIO-GET-NLS TO FIO-CMND.
           PERFORM DAP-FIO-RCC.
      *if x rfu
           IF NOT (FIO-STAT-OKS AND
                  OPD-CAI-IOPD IN OPD-FLD = RCC-CAI-IOPD IN RCC AND
                  OPD-IIC-IOPD IN OPD-FLD = RCC-IIC-IOPD IN RCC)
                  MOVE '23' TO FIO-STAT.
           MOVE FIO-STAT TO PGM-STAT-RCC.
           IF NOT FIO-STAT-OKS
      *        Como la transaccion Termina no es necesario hacer UNLOCK de      
      *        RCC
      *        comunicar que no se pudo actualizar con mensaje pertinente       
                MOVE FIO-MENS TO FRM-MENS
           ELSE
                MOVE FIO-GET-KEY-UPD TO FIO-CMND
                PERFORM DAP-FIO-RCC.
       FIN-GET-UPD-RCC.
           EXIT.

       PUT-CAD SECTION.
       INI-PUT-CAD.
           IF CAD-IND-TCAD IN OPD-FLD NOT = 'M'
               PERFORM HDR-CAD
               MOVE OPD-CIC-IOPD IN OPD     TO CAD-CIC-IOPD IN CAD
               MOVE ZEROES                  TO CAD-NUM-ILIQ IN CAD
               MOVE 1                       TO CAD-NUM-ICAD IN CAD
               MOVE WSS-VAL-CAPT TO CAD-SGV-LIQU IN CAD
               MOVE FIO-PUT TO FIO-CMND
               PERFORM DAP-FIO-CAD
               IF NOT FIO-STAT-OKS
      *        Error inconsistencia en el ingreso : hacer LOGTB e informar      
                   MOVE FIO-MENS TO FRM-MENS
                   PERFORM BCK-OUT.
       FIN-PUT-CAD.
           EXIT.

       PUT-AUT SECTION.
       INI-PUT-AUT.
           IF FRM-CAI-ICAD IN OPD-FLD > SPACES OR
              FRM-IIC-ICAD IN OPD-FLD > ZEROES
                PERFORM HDR-AUT
                MOVE OPD-CIC-IOPD IN OPD TO CAD-CIC-IOPD IN AUT
                MOVE 'AUT'               TO CAD-NUM-ILIQ IN AUT
                MOVE 1                   TO CAD-NUM-ICAD IN AUT
                MOVE FRM-CAI-ICAD IN OPD-FLD TO CAD-CAI-ICAD IN AUT
                MOVE FRM-IIC-ICAD IN OPD-FLD TO CAD-IIC-ICAD IN AUT
                MOVE FIO-PUT TO FIO-CMND
                PERFORM DAP-FIO-AUT
                IF NOT FIO-STAT-OKS
      *        Error inconsistencia en el ingreso : hacer LOGTB e informar      
                    MOVE FIO-MENS TO FRM-MENS
                    PERFORM BCK-OUT.
       FIN-PUT-AUT.
           EXIT.

       HDR-OPD SECTION.
       INI-HDR-OPD.
           PERFORM GET-FHOY.
           MOVE HOY-FHOY TO OPD-FEC-FTRN IN OPD.
           MOVE HOY-HHOY TO OPD-HRA-HRTR IN OPD.
           MOVE 'I'      TO OPD-COD-TACC IN OPD.
           MOVE 'I'      TO OPD-COD-OTRN IN OPD.
           MOVE SCR-OTRN TO OPD-COD-OTRN IN OPD.
       FIN-HDR-OPD.
           EXIT.

       HDR-VEN SECTION.
       INI-HDR-VEN.
           MOVE HOY-FHOY TO VEN-FEC-FTRN IN VEN.
           MOVE HOY-HHOY TO VEN-HRA-HRTR IN VEN.
           MOVE 'I'      TO VEN-COD-TACC IN VEN.
           MOVE SCR-OTRN TO VEN-COD-OTRN IN VEN.
           MOVE SCR-USER TO VEN-COD-ATRN IN VEN.
       FIN-HDR-VEN.
           EXIT.

       HDR-RCC SECTION.
       INI-HDR-RCC.
           MOVE HOY-FHOY TO RCC-FEC-FTRN IN RCC.
           MOVE HOY-HHOY TO RCC-HRA-HRTR IN RCC.
           MOVE 'I'      TO RCC-COD-STAT IN RCC.
           MOVE SCR-OTRN TO RCC-COD-OTRN IN RCC.
           MOVE SCR-USER TO RCC-COD-ATRN IN RCC.
       FIN-HDR-RCC.
           EXIT.

       HDR-LIQ SECTION.
       INI-HDR-LIQ.
           MOVE SPACES   TO LIQ-GLS-FLAG IN LIQ.
           MOVE HOY-FHOY TO LIQ-FEC-FTRN IN LIQ.
           MOVE HOY-HHOY TO LIQ-HRA-HRTR IN LIQ.
           MOVE 'I'      TO LIQ-COD-TACC IN LIQ.
           MOVE 'I'      TO LIQ-COD-OTRN IN LIQ.
           MOVE SCR-OTRN TO LIQ-COD-OTRN IN LIQ.
           MOVE SPACES   TO LIQ-GLS-DISP IN LIQ.
       FIN-HDR-LIQ.
           EXIT.

       HDR-CAD SECTION.
       INI-HDR-CAD.
           MOVE SPACES   TO CAD-GLS-FLAG IN CAD.
           MOVE HOY-FHOY TO CAD-FEC-FTRN IN CAD.
           MOVE HOY-HHOY TO CAD-HRA-HRTR IN CAD.
           MOVE 'I'      TO CAD-COD-TACC IN CAD.
           MOVE 'I'      TO CAD-COD-OTRN IN CAD.
           MOVE SCR-OTRN TO CAD-COD-OTRN IN CAD.
           MOVE SPACES   TO CAD-GLS-DISP IN CAD.
       FIN-HDR-CAD.
           EXIT.

       HDR-AUT SECTION.
       INI-HDR-AUT.
           MOVE SPACES   TO CAD-GLS-FLAG IN AUT.
           MOVE HOY-FHOY TO CAD-FEC-FTRN IN AUT.
           MOVE HOY-HHOY TO CAD-HRA-HRTR IN AUT.
           MOVE 'I'      TO CAD-COD-TACC IN AUT.
           MOVE 'I'      TO CAD-COD-OTRN IN AUT.
           MOVE SCR-OTRN TO CAD-COD-OTRN IN AUT.
           MOVE SPACES   TO CAD-GLS-DISP IN AUT.
       FIN-HDR-AUT.
           EXIT.

       MOD-LIC SECTION.
       INI-MOD-LIC.
           IF SCR-CIC-TVAL = PDB-CIC-MNAC
               ADD LIQ-SGV-PESO IN LIQ TO LIC-SGV-TPAG IN LIC
           ELSE
               ADD LIQ-SGV-TPAG IN LIQ TO LIC-SGV-TPAG IN LIC.
           MOVE FIO-MOD TO FIO-CMND.
           PERFORM DAP-FIO-LIC.
       FIN-MOD-LIC.
           EXIT.

       PUT-LIC-RDL SECTION.
       INI-PUT-LIC-RDL.
           MOVE SPACES              TO LIQ-GLS-FLAG.
           MOVE LIQ-FEC-FTRN IN LIQ TO LIC-FEC-FLIQ IN LIC.
           MOVE 'S'                 TO LIC-COD-STAT.
           MOVE OPD-COD-OFIC IN OPD TO LIC-COD-OFIC IN LIC.
           MOVE OPD-COD-VCAM IN OPD TO LIC-COD-VCAM IN LIC.
           MOVE OPD-CIC-IOPD IN OPD TO LIC-CIC-IOPD IN LIC.

           MOVE OPD-SGV-MPRE IN OPD-FLD TO LIC-SGV-TPAG IN LIC.
           MOVE SPACES              TO LIC-GLS-DISP.
           MOVE FIO-PUT TO FIO-CMND.
           PERFORM DAP-FIO-LIC.
       FIN-PUT-LIC-RDL.
           EXIT.

       DEL-CAD SECTION.
       INI-DEL-CAD.
           IF CAD-IND-TCAD IN OPD-FLD NOT = 'M'
               MOVE FIO-DEL TO FIO-CMND
               PERFORM DAP-FIO-CAD
               IF NOT FIO-STAT-OKS
      *        Error inconsistencia en la eliminacion : hacer LOGTB e informar  
                   MOVE FIO-MENS TO FRM-MENS
                   PERFORM BCK-OUT
                   GO TO FIN-DEL-CAD
               ELSE
                   GO TO FIN-DEL-CAD.
       FIN-DEL-CAD.
           EXIT.

      * eliminacion de multiples cargos asociados a la opd
       DEL-MUL-CAD SECTION.
       INI-DEL-MUL-CAD.
           MOVE OPD-CIC-IOPD IN OPD TO CAD-CIC-IOPD IN CAD.
           MOVE SPACES              TO CAD-NUM-ILIQ IN CAD.
           MOVE SPACES              TO CAD-NUM-ICAD IN CAD.
       LUP-DEL-MUL-CAD.
           MOVE FIO-GET-NLS TO FIO-CMND.
           PERFORM DAP-FIO-CAD.
           IF NOT ( FIO-STAT-OKS AND
              OPD-CIC-IOPD IN OPD = CAD-CIC-IOPD IN CAD )
               MOVE '00' TO FIO-STAT
               GO TO FIN-DEL-MUL-CAD.
           MOVE FIO-GET-KEY-UPD TO FIO-CMND.
           PERFORM DAP-FIO-CAD.
           IF NOT FIO-STAT-OKS
               GO TO FIN-DEL-MUL-CAD.
           MOVE FIO-DEL TO FIO-CMND.
           PERFORM DAP-FIO-CAD.
           IF NOT FIO-STAT-OKS
               GO TO FIN-DEL-MUL-CAD.
      *rfu     MOVE FIO-GET-NXT TO FIO-CMND.
           GO TO LUP-DEL-MUL-CAD.
       FIN-DEL-MUL-CAD.
           EXIT.

       DEL-AUT SECTION.
       INI-DEL-AUT.
           IF CAD-IND-TCAD IN OPD-FLD NOT = 'M'
               MOVE FIO-DEL TO FIO-CMND
               PERFORM DAP-FIO-AUT
               IF NOT FIO-STAT-OKS
      *        Error inconsistencia en la eliminacion : hacer LOGTB e informar  
                   MOVE FIO-MENS TO FRM-MENS
                   PERFORM BCK-OUT.
       FIN-DEL-AUT.
           EXIT.

       DEL-RCC SECTION.
       INI-DEL-RCC.
           MOVE FIO-DEL TO FIO-CMND.
           PERFORM DAP-FIO-RCC.
           IF NOT FIO-STAT-OKS
      *        Error inconsistencia en la eliminacion : hacer LOGTB e informar  
               MOVE FIO-MENS TO FRM-MENS
               PERFORM BCK-OUT.
       FIN-DEL-RCC.
           EXIT.

       DEL-MUL-RCC SECTION.
       INI-DEL-MUL-RCC.
           MOVE OPD-CIC-IOPD IN OPD TO RCC-CIC-IOPD IN RCC.
       LUP-DEL-MUL-RCC.
           MOVE FIO-GET-NLS TO FIO-CMND.
           MOVE 'RCC-KEY-IOPD' TO FIO-AKEY.
           PERFORM DAP-FIO-RCC.
           IF NOT ( FIO-STAT-OKS AND
              OPD-CIC-IOPD IN OPD = RCC-CIC-IOPD IN RCC )
               MOVE '00' TO FIO-STAT
               GO TO FIN-DEL-MUL-RCC.
           MOVE FIO-GET-KEY-UPD TO FIO-CMND.
           PERFORM DAP-FIO-RCC.
           IF NOT FIO-STAT-OKS
               GO TO FIN-DEL-MUL-RCC.
           MOVE FIO-DEL TO FIO-CMND.
           PERFORM DAP-FIO-RCC.
           IF NOT FIO-STAT-OKS
               GO TO FIN-DEL-MUL-RCC.
      *rfu     MOVE FIO-GET-NXT TO FIO-CMND.
           GO TO LUP-DEL-MUL-RCC.
       FIN-DEL-MUL-RCC.
           EXIT.

       DEL-MUL-VEN SECTION.
       INI-DEL-MUL-VEN.
           PERFORM GET-UPD-VEN.
           IF FIO-STAT-OKS
               MOVE FIO-DEL TO FIO-CMND
               PERFORM DAP-FIO-VEN.
       FIN-DEL-MUL-VEN.
           EXIT.

       DEL-MUL-IMP SECTION.
       INI-DEL-MUL-IMP.
           PERFORM GET-UPD-IMP.
           IF FIO-STAT-OKS
               MOVE FIO-DEL TO FIO-CMND
               PERFORM DAP-FIO-IMP.
       FIN-DEL-MUL-IMP.
           EXIT.

      * Link al Disparador de Transacciones
      * GRABAR TD PARA Disparador de Transacciones
       LNK-DDT SECTION.
       INI-LNK-DDT.
           MOVE SPACES TO MSG-COD-MENS.
      * 
      *    fecha proceso
           MOVE HOY-SHOY IN HOY-VARI TO DDT-NUM-SPRO.
           MOVE HOY-AHOY IN HOY-VARI TO DDT-NUM-APRO.
           MOVE HOY-MHOY IN HOY-VARI TO DDT-NUM-MPRO.
           MOVE HOY-DHOY IN HOY-VARI TO DDT-NUM-DPRO.
      * 
      *    numero unico de operacion
           MOVE SPACES TO DDT-NUM-NUOP.
      * 
      *    ambiente
           MOVE 'S' TO DDT-GLS-AMBT.
      *    
      *    sistema
           MOVE 'DAP' TO DDT-GLS-SIST.
      *    
      *    modalidad
           MOVE 'L'   TO DDT-GLS-MODA.
      *    
      *    identificacion del operador
           MOVE SPACES TO DDT-GLS-IDOP.
      *    
      *    codigo terminal
      *     MOVE 'DAP' TO FIO-SIST.
      *     MOVE 'PDT' TO TAB-COD-TTAB IN TAB.
      *     MOVE 'DDTNUMITER' TO TAB-COD-CTAB IN TAB.
      *     MOVE FIO-GET-KEY TO FIO-CMND.
      *     PERFORM GNS-FIO-TAB.
      *     IF FIO-STAT-OKS
      *         MOVE TAB-GLS-ABRV TO DDT-NUM-ITER
      *     ELSE
      *        el mismo que usa sbt para modo tarde ICU     
      *         MOVE 40 TO DDT-NUM-ITER.
           MOVE OPD-COD-OFIC IN OPD TO WSS-NUM-OFIC.
           ADD 1100 WSS-NUM-OFIC GIVING DDT-NUM-ITER.

      *    sistema
      *     MOVE WSS-IND-TCTA TO DDT-COD-SIST
           MOVE 'CCT' TO DDT-COD-SIST.
      *    
      *    codigo sistema 1
           MOVE 'CCT' TO DDT-COD-SIS1.
      *    
      *    codigo sistema 2
           MOVE SPACES TO DDT-COD-SIS2.
      *
      *    codigo transaccion 2
           MOVE SPACES TO DDT-COD-TRN2.
      *
      *    solicitud
           MOVE '00' TO DDT-GLS-SOLI.
      *
      *    tipo de formato
           MOVE SPACES TO DDT-COD-FORM.
      *
      *    tipo de documento
           MOVE SPACES TO DDT-COD-TDOC.
      *
      *    numero de cuenta giradora
           MOVE WSS-CIC-CCTE TO DDT-NUM-CGIR.
      *
      *    codigo transaccion 1
           MOVE '08600' TO DDT-COD-TRN1.
      *
      *    oficina origen
           MOVE '000' TO DDT-COD-OFIC.
      *
      *    numero de cuenta deposito
           MOVE SPACES TO DDT-NUM-CDEP.
      *
      *    indicador de llave de supervisor
           MOVE ZEROES TO DDT-IND-SUPE.
      *
      *    nivel de rechazo
           MOVE SPACES TO DDT-IND-NRCH.
      *
      *    codigos de rechazo (10 codigod de 3 bytes c/u)
           MOVE SPACES TO DDT-VEC-RCHZ.
      *
      *    fecha del rechazo
           MOVE ZEROES TO DDT-FEC-FRCH.
      *
      *    numero correlativo de ingreso
           MOVE ZEROES TO DDT-NUM-INGR.
      *
      *    numero de lote
           MOVE ZEROES TO DDT-NUM-LOTE.
      *
      *    monto 1
           MOVE '000000000000' TO DDT-NUM-MNT1.
      *
      *    monto 2
           MOVE '000000000000' TO DDT-NUM-MNT2.
      *
      *    indicador de modo tarde
           MOVE '0' TO DDT-IND-TARD.
      *
      *     MOVE +226 TO WSS-TWALENG.
      *     EXEC CICS ASSIGN TWALENG(WSS-TWALENG) END-EXEC.
      *        IF WSS-TWALENG > 0 THEN
      *     EXEC CICS ADDRESS TWA(LKS-WAPTR) END-EXEC.
      *     MOVE DDT-VARI TO LKS-DDT.
      *     EXEC CICS LINK PROGRAM ('DSTLINK') END-EXEC.
      *     MOVE LKS-DDT TO DDT-VARI.
      *
      *
      *    numero de operacion
           MOVE OPD-CIC-IOPD IN OPD TO DDT-CIC-IOPD.
      *
      *    transaccion
           IF SCR-CMND = 'ODL' OR 'ODB' OR 'VRF'
               MOVE '06700'        TO DDT-COD-TRAN
               MOVE '00000000007K' TO DDT-GLS-SERI
            ELSE
               MOVE '07700'        TO DDT-COD-TRAN
               MOVE '00000000005E' TO DDT-GLS-SERI.

      *
      *    monto de la operacion
           PERFORM SET-CCTE.

           MOVE WSS-VAL-CCTE TO DDT-VAL-MONT.
      *
           PERFORM GNS-ERR-TDQ THRU FIN-GNS-ERR-TDQ.
           MOVE TDQ-PUT  TO TDQ-CMND.
           MOVE 'DST3'   TO TDQ-COLA.
           MOVE +226     TO TDQ-LITM.
           MOVE DDT-VARI TO TDQ-ITEM.
           PERFORM GNS-PRO-TDQ.
           IF TDQ-STAT NOT = TDQ-STAT-OKS
               MOVE 'DAP' TO MSG-COD-SIST
               MOVE 'TDQPUT ERR' TO MSG-COD-MENS
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS
               PERFORM BCK-OUT.

      *     EXEC CICS WRITEQ TD
      *               QUEUE('DST3')
      *               FROM(DDT-VARI)
      *               LENGTH(+226)
      *     END-EXEC.

      *    SIMULACION DE LNK-ERRONEO POR SALDO INSUFICIENTE EN CTA CTE
      *     IF WSS-CIC-CCTE = '    11111119'
      *         MOVE 'RCH' TO DDT-COD-SIST.
           
      *    analizar retorno  DDT-COD-RCHZ(1-->10)
      *     IF DDT-COD-SIST = 'RCH'
      *         MOVE HOY-FHOY TO DDT-FEC-FRCH
      *         MOVE 'DAP'        TO MSG-COD-SIST
      *         MOVE 'DDT    RCH' TO MSG-COD-MENS
      *         PERFORM GET-MSG
      *         MOVE MSG-GLS-DESC TO WSS-GLS-DATA
      *     ELSE
      *         MOVE SPACES       TO WSS-GLS-DATA.
       FIN-LNK-DDT.       
           EXIT.

       MSG-ADA SECTION.
       INI-MSG-ADA.
           MOVE MSG-GLS-DESC   TO WSS-CPT-DESC.
           MOVE WSS-CPT-NOMB-R TO CPT-STRN.
           PERFORM CPT-BLKS.
           MOVE CPT-STRN       TO FRM-MENS.
       FIN-MSG-ADA.
           EXIT.

       MSG-DAP SECTION.
       INI-MSG-DAP.
           MOVE 'DAP' TO MSG-COD-SIST.
           PERFORM GET-MSG.
           MOVE MSG-GLS-DESC TO FRM-MENS.
       FIN-MSG-DAP.
           EXIT.

       PRO-PAGO SECTION.
       INI-PRO-PAGO.
           IF WSS-TOT-AUTO = 1
      *ASUME QUE ESPERARA CTA CTE
              MOVE 'F' TO OPD-COD-STAT IN OPD
              PERFORM LNK-DDT
              IF MSG-COD-MENS > SPACES
                  MOVE 'I' TO OPD-COD-STAT IN OPD
                  GO TO FIN-PRO-PAGO.

           IF WSS-TOT-CAJA = 1
               PERFORM SET-CAJA
               MOVE WSS-VAL-CAJA TO OPD-VAL-CAJA IN OPD
               IF OPD-COD-STAT IN OPD = 'A'
                   MOVE 'S' TO OPD-COD-STAT IN OPD
               ELSE
               IF OPD-COD-STAT IN OPD = 'F'
                   MOVE 'W' TO OPD-COD-STAT IN OPD.
       FIN-PRO-PAGO.
           EXIT.

       SET-CAJA SECTION.
       INI-SET-CAJA.
           IF SCR-IND-MCAD NOT = 'M'
              IF FRM-VAL-IPES IN OPD-FLD > ZEROES
                  MOVE FRM-VAL-IPES IN OPD-FLD TO WSS-VAL-CAJA
              ELSE
                  MOVE OPD-VAL-CAPT IN OPD-FLD TO WSS-VAL-CAJA.
       FIN-SET-CAJA.
           EXIT.

       SET-CCTE SECTION.
       INI-SET-CCTE.
           IF SCR-CMND = 'ODL' OR 'ODB'
               IF SCR-IND-MCAD NOT = 'M'
                  IF FRM-VAL-IPES IN OPD-FLD > ZEROES
                     MOVE FRM-VAL-IPES IN OPD-FLD TO WSS-VAL-CCTE
                  ELSE
                     MOVE OPD-VAL-CAPT IN OPD-FLD TO WSS-VAL-CCTE
               ELSE
                  NEXT SENTENCE
           ELSE
           IF SCR-CMND NOT = 'VRF'
                MOVE OPD-SGV-MPRE IN OPD-FLD TO WSS-VAL-CCTE.
      *ISP : PARA 'VRF' YA CARGO WSS-VAL-CCTE
       FIN-SET-CCTE.
           EXIT.

       GET-WSS-VAL-CAPT SECTION.
       INI-GET-WSS-VAL-CAPT.
           IF FRM-VAL-IPES IN OPD-FLD > ZEROES
               MOVE FRM-VAL-IPES IN OPD-FLD TO WSS-VAL-CAPT
           ELSE
               MOVE OPD-VAL-CAPT IN OPD-FLD TO WSS-VAL-CAPT.
       FIN-GET-WSS-VAL-CAPT.
           EXIT.

      * GENESIS
       COPY GNSBFCIC.
       COPY GNSBGCIC.

      *  CODIGO ADICIONAL PARA ENGANCHE PROGRAMAS

       EGR-FPEN-CIC SECTION.
       INI-EGR-FPEN-CIC.
           MOVE OPD-CAI-IOPD IN OPD-FLD TO SCR-CAI-IOPD.
           MOVE OPD-IIC-IOPD IN OPD-FLD TO SCR-IIC-IOPD.
           MOVE ZEROES       TO SCR-NUM-ILIQ.
           PERFORM CRG-TBL-ENG.
           ADD 1 TO SCR-IPRO.
           IF SCR-IND-ENG IN SCR-VEC-ENG(SCR-IPRO) = SPACES
               GO TO INI-EGR-FPEN-CIC.
           MOVE WSS-INST-FPEN-CIC TO SCR-INST-EXT.
           MOVE WSS-PROG(SCR-IPRO) TO SYS-PROG.
           MOVE SCR-VARI TO SYS-CMMA.
           MOVE SCR-TCMA TO SYS-TCMA.
           MOVE SYS-XCTL TO SYS-CMND.
           PERFORM GNS-PRO-SYS.
       FIN-EGR-FPEN-CIC.
           EXIT.

       COPY GNSBGINT.


      * proceso impresion
       PRO-EMI SECTION.
       INI-PRO-EMI.
           MOVE SPACES TO MSG-COD-MENS.
           IF OPD-IND-IDIF IN OPD = 'S'
               GO TO FIN-PRO-EMI.
           PERFORM CRG-KEY-IMP.
           MOVE FIO-GET-KEY-UPD TO FIO-CMND.
           PERFORM DAP-FIO-IMP.
           MOVE FIO-STAT TO PGM-STAT-IMP.
           MOVE SPACES TO IMP-GLS-FLAG IN IMP.
           MOVE OPD-CIC-ISER IN OPD TO IMP-CIC-ISER IN IMP.
      *LRH ini 28-JUN-1994
           PERFORM GET-FHOY.
      *LRH fin 28-JUN-1994
           MOVE HOY-FHOY TO IMP-FEC-FTRN IN IMP.
           MOVE HOY-HHOY TO IMP-HRA-HRTR IN IMP.
           MOVE 'I' TO IMP-COD-TACC IN IMP.
           IF OPD-COD-STAT IN OPD = 'A'
               MOVE 'A' TO IMP-COD-STAT IN IMP
           ELSE
           IF OPD-COD-STAT IN OPD = 'S' OR 'F' OR 'W'
               MOVE 'S' TO IMP-COD-STAT IN IMP
           ELSE
               MOVE SPACES TO IMP-COD-STAT IN IMP.
           MOVE SCR-OTRN TO IMP-COD-OTRN IN IMP.
           MOVE SCR-USER TO IMP-COD-ATRN IN IMP.
           MOVE OPD-COD-TCDP IN OPD TO IMP-COD-TCDP IN IMP.
           MOVE OPD-COD-COPD IN OPD TO IMP-COD-COPD IN IMP.

           MOVE OPD-COD-OFIC IN OPD TO IMP-COD-OFIC IN IMP.
           MOVE OPD-COD-OFIC IN OPD TO OFI-COD-OFIC IN OFI.
           PERFORM BUS-OFI.
           MOVE OFI-GLS-DESC IN OFI TO IMP-GLS-OFIC IN IMP.

           MOVE OPD-FEC-FREA IN OPD TO IMP-FEC-FREA IN IMP.
           MOVE OPD-VAL-CAPT IN OPD TO IMP-VAL-CAPT IN IMP.
           MOVE FRM-VAL-IPES IN OPD-FLD TO IMP-VAL-VPES IN IMP.
           MOVE ZEROES                  TO IMP-SGV-SPRD IN IMP.
           MOVE OPD-SGV-TINT IN OPD TO IMP-SGV-TINT IN IMP.

      * JVM: Mantencion 11/06/1992
           MOVE OPD-VAL-SINT IN OPD TO IMP-SGV-TPER IN IMP.
      * JVM: Fin

           MOVE FRM-VAL-FORI IN OPD-FLD TO IMP-VAL-VFIN IN IMP.
           SUBTRACT IMP-VAL-CAPT IN IMP FROM
                    IMP-VAL-VFIN IN IMP GIVING IMP-VAL-INTP IN IMP.
           PERFORM GET-CUR-RCC.
           MOVE RCC-CIC-ICLI IN RCC TO DBC-CIC-ICLI IN DBC.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM SGC-FIO-DBC.
           IF FIO-STAT-OKS
               PERFORM CPT-NOMB
               MOVE 1 TO IMP-NUM-NCLI IN IMP
               MOVE DBC-IDC-ICLI IN DBC TO IMP-IDC-ICL1 IN IMP
               MOVE DBC-VRF-ICLI IN DBC TO IMP-VRF-ICL1 IN IMP
               MOVE DBC-GLS-NOMC IN DBC TO IMP-GLS-NOM1 IN IMP.

           PERFORM GET-NXT-RCC.
           IF SCR-IND-MCLI NOT = 'M'
               MOVE ZEROES TO IMP-NUM-ICL2 IN IMP
               MOVE SPACES TO IMP-VRF-ICL2 IN IMP
               MOVE SPACES TO IMP-IND-ICL2 IN IMP
               MOVE SPACES TO IMP-GLS-ICL2 IN IMP
               MOVE SPACES TO IMP-GLS-NOM2 IN IMP
           ELSE
               MOVE WSS-BKP-CIC-ICLI IN WSS-VARI TO DBC-CIC-ICLI IN DBC
               MOVE FIO-GET-KEY TO FIO-CMND
               PERFORM SGC-FIO-DBC
               IF FIO-STAT-OKS
                   PERFORM CPT-NOMB
                   MOVE 2 TO IMP-NUM-NCLI IN IMP
                   MOVE DBC-IDC-ICLI IN DBC TO IMP-IDC-ICL2 IN IMP
                   MOVE DBC-VRF-ICLI IN DBC TO IMP-VRF-ICL2 IN IMP
                   MOVE DBC-GLS-NOMC IN DBC TO IMP-GLS-NOM2 IN IMP.

           MOVE OPD-COD-GARA IN OPD TO IMP-COD-GARA IN IMP.
           MOVE OPD-FEC-FPVC IN OPD TO IMP-FEC-FPVC IN IMP.
           MOVE OPD-NUM-RETD IN OPD TO IMP-NUM-RETD IN IMP.
           MOVE OPD-IND-RETD IN OPD TO IMP-IND-RETD IN IMP.
           MOVE OPD-COD-CUST IN OPD TO IMP-COD-CUST IN IMP.
           MOVE OPD-COD-RENO IN OPD TO IMP-COD-RENO IN IMP.
           MOVE OPD-COD-ENDO IN OPD TO IMP-COD-ENDO IN IMP.
           MOVE OPD-NUM-DURV IN OPD TO IMP-NUM-DURV IN IMP.
           MOVE OPD-IND-DURV IN OPD TO IMP-IND-DURV IN IMP.
           MOVE OPD-FEC-FTER IN OPD TO IMP-FEC-FTER IN IMP.
           MOVE SPACES              TO IMP-COD-PLZO IN IMP.
           MOVE SPACES TO IMP-GLS-SAFE IN IMP.
           MOVE SPACES TO IMP-GLS-DISP IN IMP.
           IF PGM-STAT-IMP-OKS
               MOVE FIO-MOD TO FIO-CMND
           ELSE
               MOVE FIO-PUT TO FIO-CMND.
           PERFORM DAP-FIO-IMP.
           IF NOT FIO-STAT-OKS
               MOVE 'DAP' TO MSG-COD-SIST
               MOVE 'EMI    ERR' TO MSG-COD-MENS
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS
               PERFORM BCK-OUT.
       FIN-PRO-EMI.
           EXIT.

       COPY SGCBFOPE.
       COPY SGCBFRCO.

*% IF PGM_CST
       PUT-OPE-RCO SECTION.
       INI-PUT-OPE-RCO.
           MOVE OPD-GLS-FLAG IN OPD TO OPE-GLS-FLAG IN OPE.
           MOVE OPD-CIC-IOPD IN OPD TO OPE-CIC-IOPE IN OPE.
           MOVE OPD-STP-ITRN IN OPD TO OPE-STP-ITRN IN OPE.
           MOVE OPD-COD-TACC IN OPD TO OPE-MSC-TACC IN OPE.
           MOVE OPD-COD-STAT IN OPD TO OPE-MSC-STAT IN OPE.
           MOVE OPD-COD-OTRN IN OPD TO OPE-COD-OTRN IN OPE.
           MOVE OPD-COD-ATRN IN OPD TO OPE-COD-ATRN IN OPE.
           MOVE OPD-COD-STAT IN OPD TO OPE-COD-STAT IN OPE.
           MOVE OPD-COD-VCAM IN OPD TO OPE-COD-VCOP IN OPE.
           MOVE OPD-COD-COPD IN OPD TO OPE-COD-COPR IN OPE.
           MOVE OPD-COD-OFIC IN OPD TO OPE-COD-OFOP IN OPE.
           MOVE OPD-COD-EJEC IN OPD TO OPE-COD-EJOP IN OPE.
           MOVE OPD-FEC-FREA IN OPD TO OPE-FEC-FIOP IN OPE.
           MOVE ZEROES              TO OPE-FEC-FTOP IN OPE.
           MOVE SPACES              TO OPE-COD-MOTT IN OPE.
           MOVE ZEROES              TO OPE-FEC-FROP IN OPE.
           IF SCR-IND-MCLI = 'M'
                 MOVE SCR-SON-S TO OPE-IND-MCLI IN OPE
           ELSE
                 MOVE SCR-SON-N TO OPE-IND-MCLI IN OPE.
           MOVE SPACES              TO OPE-COD-TCOM IN OPE.

           MOVE SPACES TO OPE-CAI-ICAR IN OPE.
           MOVE ZEROES TO OPE-IIC-ICAR IN OPE.
           IF SCR-IND-MCAD = 'M'
                 IF WSS-TOT-AUTO = 1
                     MOVE WSS-CIC-CCTE TO OPE-CIC-ICAR IN OPE
                 ELSE
                     NEXT SENTENCE
           ELSE
                 IF CAD-CAI-ICAD IN OPD-FLD > SPACES OR
                    CAD-IIC-ICAD IN OPD-FLD > ZEROES
                      MOVE CAD-CAI-ICAD IN OPD-FLD TO
                           OPE-CAI-ICAR IN OPE
                      MOVE CAD-IIC-ICAD IN OPD-FLD TO
                           OPE-IIC-ICAR IN OPE.

           MOVE FIO-PUT TO FIO-CMND.
           PERFORM SGC-FIO-OPE.
           IF NOT FIO-STAT-OKS
               MOVE FIO-MENS TO FRM-MENS
               PERFORM BCK-OUT.

           MOVE WSS-RCC-1 TO RCO.
           MOVE FIO-PUT TO FIO-CMND.
           PERFORM SGC-FIO-RCO.
           IF NOT FIO-STAT-OKS
               MOVE FIO-MENS TO FRM-MENS
               PERFORM BCK-OUT.

           IF SCR-IND-MCLI = 'M'
                 MOVE WSS-RCC-2 TO RCO
                 MOVE FIO-PUT TO FIO-CMND
                 PERFORM SGC-FIO-RCO
                 IF NOT FIO-STAT-OKS
                     MOVE FIO-MENS TO FRM-MENS
                     PERFORM BCK-OUT.
       FIN-PUT-OPE-RCO.
           EXIT.

*% END
      * proceso journal
       PRO-JNL SECTION.
       INI-PRO-JNL.
           MOVE SPACES TO JNL.
           MOVE ZEROES TO JNL-FEC-CTB
                          JNL-VAL-1
                          JNL-VAL-2
                          JNL-FEC-EMI
                          JNL-FEC-LIQ
                          JNL-TAS-INT
                          JNL-NUM-LIQ
                          JNL-FEC-VTO.

      * DATOS CONSTANTES

      *    TIPO DE REGISTRO (E/S)
           MOVE 'S' TO JNL-TIP-REG.

      *    CANT. DE REGISTROS POR REG. LOGICO
           MOVE '0' TO JNL-CTD-REG.

      *    CODIGO DE SECUENCIA DEL REG. (0)
           MOVE '0' TO JNL-COD-SEC-REG.

      *    FECHA DE PROCESO
           MOVE HOY-FHOY TO JNL-FEC-PRC.

      *    HORA DE PROCESO
           MOVE HOY-HHOY TO JNL-HOR-PRC.

      *    NUMERO DE SEGUIMIENTO 
      *     MOVE '1800' TO CIC-CAI-ICIC IN CIC.
      *     MOVE CIC-GET TO CIC-CMND.
      *     PERFORM PRO-CIC.
      *     IF CIC-STAT NOT = CIC-STAT-OKS
      *         MOVE CIC-MENS TO FRM-MENS
      *         MOVE FIO-STAT-NEX TO FIO-STAT
      *         GO TO FIN-PRO-JNL
      *     ELSE
      *        CENTRO DE ASIGNACION SEGUIM.
      *         MOVE CIC-CAI-ICIC TO JNL-CAI-SGM
      *        NUMERO SECUENCIAL DENTRO CEN. ASG.
      *         MOVE CIC-IIC-ICIC TO JNL-IIC-SGM.
           MOVE SPACES TO JNL-CAI-SGM.
           MOVE ZEROES TO JNL-IIC-SGM.

      *    CODIGO DE SISTEMA DE LA TRN
           MOVE 'DAP' TO JNL-COD-SIS-TRN.

      *    CODIGO DE TRANSACCION
           MOVE 'DAP' TO TAB-COD-SIST.
           MOVE 'EVT' TO TAB-COD-TTAB IN TAB.
           MOVE SCR-CMND TO TAB-COD-CTAB IN TAB.
           PERFORM BUS-TAB.
           MOVE TAB-CIC-CTAB IN TAB TO JNL-COD-TRN.

      *    CODIGO DE TRANSACCION
           MOVE SPACES TO JNL-COD-AUX-TRN.

      *    AMBIENTE GENERACION (SAFE,CICS,ETC) 
           MOVE 'I' TO JNL-COD-AMB.

      *    MODALIDAD (LINEA,FUERA DE LINEA)
           MOVE 'L' TO JNL-COD-MOD.

           MOVE SCR-USER TO JNL-IDN-USU-OPR.

           MOVE SCR-OTRN TO JNL-TML.

           MOVE SPACES TO JNL-COD-TUS-AUT.

           MOVE OPD-COD-EATE IN OPD TO JNL-IDN-USU-AUT.

      *    CODIGO DE PRODUCTO                  
      *    OPD-COD-COPD -> TO JNL-COD-PDT  

      *    CODIGO DE ESTADO DE PROCESAMIENTO
           MOVE 'P' TO JNL-COD-EST-PRC.

      *    TIPO ORIGEN PARA CUADRAT. (OFI/INT) 
           MOVE SPACES TO JNL-TIP-ORN-CUA.

      *    CODIGO DE CUADRATURA
           MOVE SPACES TO JNL-COD-CUA.

      *    FECHA CONTABLE                
           MOVE HOY-FHOY TO JNL-FEC-CTB.

      * DATOS VARIABLES

      *    CODIGO OFICINA ORIGEN               
      *    CODIGO OFICINA DESTINO
           MOVE OPD-COD-OFIC IN OPD TO JNL-COD-OFI-ORN
                                       JNL-COD-OFI-DST.
                                       
      *    EJECUTIVO DEL DAP (NOTA 4)
           MOVE OPD-STP-ITRN IN OPD TO JNL-STP-ITRN.

      *    CODIGO OPERACION                    
           MOVE OPD-CIC-IOPD IN OPD TO JNL-COP.
      *     MOVE OPD-CAI-IOPD IN OPD TO JNL-NUM-SIS.
      *     MOVE OPD-CAI-IOPD IN OPD TO JNL-COD-CRR.

      *    CLASE DE OPERACION                  
           MOVE OPD-COD-COPD IN OPD TO JNL-CLA-OPE.
      *     MOVE OPD-COD-TOPD IN OPD TO JNL-TIP-OPE.
      *     MOVE OPD-COD-AOPD IN OPD TO JNL-STP-OPE.

      *    CIC DEL CLIENTE 'M'
      *    RCC-CIC-ICLI -> JNL-CIC-CLI.
      *     IF SCR-IND-MCLI NOT = 'M'
           MOVE RCC-CIC-ICLI IN RCC TO JNL-CIC-CLI IN JNL.

      *    VALOR DE CAMBIO OPERACION           
           MOVE OPD-COD-VCAM IN OPD TO JNL-VCB-OPE.

      *    MONTO 1                             
           MOVE OPD-VAL-CAPT IN OPD TO JNL-VAL-1.

      *    MONTO 2                             
      *    LIQ-SGV-TPAG -> JNL-VAL-2    

      *    EJECUTIVO QUE ATIENDE AL CLIENTE.   
           MOVE OPD-COD-EJEC IN OPD TO JNL-COD-EJE.

      *    FECHA EMISION                       
           MOVE OPD-FEC-FREA IN OPD TO JNL-FEC-EMI.

      *    FECHA LIQUIDACION                   
      *    LIQ-FEC-FREA -> JNL-FEC-LIQ.

      *    TIPO TASA DE INTERES.               
           MOVE OPD-COD-TINT IN OPD TO JNL-TIP-TAS-INT.

      *    TASA DE INTERES                     
           MOVE OPD-SGV-TINT IN OPD TO JNL-TAS-INT.

      *    NUMERO DE LIQUIDACION               
      *    LIQ-NUM-ILIQ -> JNL-NUM-LIQ 

      *    FECHA VENCIMIENTO                   
           MOVE OPD-FEC-FTER IN OPD TO JNL-FEC-VTO.

      *    CODIGO OPERACION ABONO.             
           MOVE CAD-CAI-ICAD IN OPD-FLD TO CAD-CAI-ICAD IN CAD.
           MOVE CAD-IIC-ICAD IN OPD-FLD TO CAD-IIC-ICAD IN CAD.
           MOVE CAD-CIC-ICAD IN CAD TO JNL-COP-ABO.

      *    EJECUTIVO LIQUIDACION.              
      *    LIQ-COD-EJEC -> JNL-COD-EJE-LIQ  

      *    SERIAL DOCUMENTO.                   
           MOVE OPD-CIC-ISER IN OPD TO JNL-SRL-DOC.

      *    MOTIVO ONP.                         
      *    ONP-COD-MONP -> JNL-COD-MOT-ONP
           MOVE OPD-COD-IONP IN OPD TO JNL-COD-MOT-ONP IN JNL.

      *    INDICADOR MULTIPLES CLIENTES.       
           MOVE 'N'     TO JNL-IND-MUL-CLI.
           IF SCR-IND-MCLI = 'M'
               MOVE 'S' TO JNL-IND-MUL-CLI.

       PUT-JNL.
           MOVE FIO-PUT TO FIO-CMND.
           PERFORM DAP-FIO-JNL.
           IF NOT FIO-STAT-OKS
      *        Error al grabar el journal
               MOVE 'DAP' TO MSG-COD-SIST
               MOVE 'JNL    ERR' TO MSG-COD-MENS
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS
               PERFORM BCK-OUT.
       FIN-PRO-JNL.
           EXIT.
      *>>>> EOF_PU
*% END
