*%! Codigo adicional para DAPPQCCC
*% CMA_USR = TRUE
*% IF FIN_SCR_VARI
      *<<<< FIN_SCR_VARI
       COPY GNSWGRQA REPLACING
                     ==01  ADR-REQA== BY ==02  SCR-DBC-REQA==.
           02 SCR-KEY-IDBC                     PIC X(03).
           02 SCR-CIC-ICLI                     PIC X(12).
      *>>>>
*% END
*% IF CMA
      *<<<< CMA
           02 FILLER                      PIC X(1200).
      *>>>>
*% END
*% IF INI_FIO
      *<<<< INI_FIO
           MOVE +1200 TO SCR-TCMA.
           IF SCR-DESDE-CMN
               PERFORM GNS-CLR-RQA.
      *>>>>
*% END
*% IF PFS_GET_CON
      *<<<< PFS_GET_CON
           IF NOT ( FRM-FFLD = FRM-FFLD-PF5 OR FRM-FFLD-PF6 )
      *>>>>
*% END
*% IF PFS_GET_CON OR PFS_SCR_GKEY
      *<<<< PFS_GET_CON OR PFS_SCR_GKEY
           IF NOT ( FRM-FFLD = FRM-FFLD-PF8 OR FRM-FFLD = FRM-FFLD-PF7 )
      *>>>>
*% END
*% IF PFS_SCR_ACC
      *<<<< PFS_SCR_ACC
           IF FRM-FFLD = FRM-FFLD-PF8 OR FRM-FFLD-PF7
               PERFORM VAL-NUM-KEY-CCC
               PERFORM VAL-NUM-FLD-CCC
               PERFORM RST-STAT
               PERFORM FND-SCR-KEY THRU FIN-SCR-KEY
               IF SCR-STAT NOT = SCR-STAT-ABT
                   PERFORM SCR-TRL
               ELSE
                   PERFORM GNS-CLR-RQA
                   PERFORM DESSCRTRL
                   GO TO FIN-SCR-ACC.
           IF FRM-FFLD = FRM-FFLD-PF5 OR FRM-FFLD-PF6
               PERFORM VAL-NUM-KEY-CCC
               PERFORM VAL-NUM-FLD-CCC
               PERFORM SCRL-TAB-CCC
               PERFORM SCR-TRL.
      *>>>>
*% END
*% IF EOF
      *<<<< EOF
       RST-STAT SECTION.
       INI-RST-STAT.
           MOVE SCR-STPP     TO SCR-STAT.
           MOVE SCR-MFLD-NOT TO SCR-MFLD.
       FIN-RST-STAT.
           EXIT.

       GNS-CLR-RQA SECTION.
       INI-GNS-CLR-RQA.
           MOVE SPACES TO SCR-DBC-REQA.
           MOVE SPACES TO SCR-KEY-IDBC.
       FIN-GNS-CLR-RQA.
           EXIT.

       SCRL-TAB-CCC SECTION.
       INI-SCRL-TAB-CCC.
           IF FRM-FFLD = FRM-FFLD-PF6
               PERFORM SCRL-ASCE
           ELSE
               PERFORM SCRL-DESC.
       FIN-SCRL-TAB-CCC.
           EXIT.

       SCRL-ASCE SECTION.
       INI-SCRL-ASCE.
           IF FRM-CAI-IOPD IN CCC-FLD(11) > SPACES OR
              FRM-IIC-IOPD IN CCC-FLD(11) > ZEROES
                MOVE FRM-CAI-IOPD IN CCC-FLD(11) TO
                     RCC-CAI-IOPD IN RCC
                MOVE FRM-IIC-IOPD IN CCC-FLD(11) TO
                     RCC-IIC-IOPD IN RCC
                MOVE SCR-CIC-ICLI TO RCC-CIC-ICLI
                MOVE FIO-GET-KEY TO FIO-CMND
                PERFORM DAP-FIO-RCC
                MOVE FIO-GET-NXT TO FIO-CMND
                PERFORM DAP-FIO-RCC
                IF NOT FIO-STAT-OKS OR
                   SCR-CIC-ICLI NOT = RCC-CIC-ICLI IN RCC
                   PERFORM MSG-ASCE
                ELSE
                    MOVE 'NO' TO LEO
                    PERFORM PRO-RCC
           ELSE
                PERFORM MSG-ASCE.
       FIN-SCRL-ASCE.
           EXIT.

       MSG-ASCE SECTION.
       INI-MSG-ASCE.
           MOVE 'RCC    NONXT' TO MSG-COD-MENS.
           PERFORM MSG-ASDE.
       FIN-MSG-ASCE.
           EXIT.

       MSG-DESC SECTION.
       INI-MSG-DESC.
           MOVE 'RCC    NOPRV' TO MSG-COD-MENS.
           PERFORM MSG-ASDE.
       FIN-MSG-DESC.
           EXIT.

       MSG-ASDE SECTION.
       INI-MSG-ASDE.
           MOVE 'DAP' TO MSG-COD-SIST.
           PERFORM GET-MSG.
           MOVE MSG-GLS-DESC TO FRM-MEN2.
       FIN-MSG-ASDE.
           EXIT.

       SCRL-DESC SECTION.
       INI-SCRL-DESC.
           IF FRM-CAI-IOPD IN CCC-FLD(1) > SPACES OR
              FRM-IIC-IOPD IN CCC-FLD(1) > ZEROES
                 MOVE FRM-CAI-IOPD IN CCC-FLD(1) TO
                                             RCC-CAI-IOPD IN RCC
                 MOVE FRM-IIC-IOPD IN CCC-FLD(1) TO
                                             RCC-IIC-IOPD IN RCC
                 MOVE SCR-CIC-ICLI TO RCC-CIC-ICLI
                 MOVE FIO-GET-KEY TO FIO-CMND
                 PERFORM DAP-FIO-RCC
                 MOVE FIO-GET-PRV TO FIO-CMND
                 PERFORM DAP-FIO-RCC
                 IF NOT FIO-STAT-OKS OR
                    SCR-CIC-ICLI NOT = RCC-CIC-ICLI IN RCC
                    PERFORM MSG-DESC
                 ELSE
                    MOVE 'NO' TO LEO
                    PERFORM PRO-RCC-PREV
           ELSE
                PERFORM MSG-DESC.
       FIN-SCRL-DESC.
           EXIT.
      *>>>>
*% END
*% IF INI_FIO
      *<<<< INI_FIO
           PERFORM GNS-HDL-VSM.
      *>>>>
*% END
*% IF EOF
      *<<<< EOF
       COPY GNSBGVSM.
       COPY GNSBHVSM.
      *>>>>
*% END
*% IF WSS
      *<<<< WSS
      *Entidades de DAP
       COPY DAPBROPD.
       COPY DAPBRRCC.
      *
       COPY GNSWGCPT.
       COPY GNSWGSTR.

       01  WSS-VARI.
           03  WSS-TOT-OPER                 PIC 9(03).
           03  WSS-NUM-OPER                 PIC 9(03).
           03  WSS-IND-MONE                 PIC X(01).
           03  WSS-TOT-MONE                 PIC 9(03).
           03  WSS-NUM-MONE                 PIC 9(03).
           03  WSS-IDX-MONE                 PIC 9(03).
      *
           03 WSS-LTAB                       VALUE 13 PIC 9(02).
           03 WSS-I                                   PIC 9(02).
           03 WSS-J                          VALUE 00 PIC 9(02).
           03 WSS-IMAX               VALUE 5          PIC 9(02).
      *    Codigo Clase Operacion DAP
           03  WSS-GLS-COPD.
      *          
      *        Codigo Tipo Operacion
               05  WSS-GLS-TOPD                         PIC X(12).
      *
      *        Separacion
               05  WSS-GLS-SEPA  VALUE SPACES           PIC X(01).
      *
      *        Codigo Auxiliar Operacion                
               05  WSS-GLS-AOPD                         PIC X(12).
      *
           03 WSS-STAT.
              05 LEO                                    PIC X(02).
                 88 LEO-TODOS  VALUE      'SI'.
      *>>>> WSS
*% END
*% IF WSS_DTC
      *<<<< WSS_DTC
      *Entidades de OPD
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-OPD-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-RCC-REQA==.
      *>>>>
*% END
*% IF INI_FND_KEY
      *<<<< INI_FND_KEY
           IF PGM-STAT-DBC-OKS
               GO TO FIN-FND-KEY.
      *>>>>
*% END
*% IF FND_KEY
      *<<<< FND_KEY
           IF FRM-FFLD = FRM-FFLD-PF7 OR FRM-FFLD-PF8
               PERFORM LEE-NXT-PRV
               IF FIO-STAT-OKS
                   PERFORM SCR-CLRA-CCC
                   
                   MOVE DBC-GLS-NOMC IN DBC TO CPT-STRN
                   PERFORM CPT-BLKS
                   MOVE CPT-STRN            TO DBC-GLS-NOMC IN DBC
                   GO TO FIN-FND-KEY
               ELSE
                   MOVE SPACES TO PGM-STAT
                   IF FRM-FFLD = FRM-FFLD-PF7
                       MOVE 'SGC'          TO MSG-COD-SIST
                       MOVE 'DBC    NOPRV' TO MSG-COD-MENS
                       PERFORM GET-MSG
                       MOVE MSG-GLS-DESC   TO FRM-MENS
                       MOVE '00'           TO FIO-STAT
                       MOVE SCR-STAT-CON   TO SCR-STAT
                       GO TO FIN-FND-KEY
                   ELSE
                       MOVE 'SGC'          TO MSG-COD-SIST
                       MOVE 'DBC    NONXT' TO MSG-COD-MENS
                       PERFORM GET-MSG
                       MOVE MSG-GLS-DESC   TO FRM-MENS
                       MOVE '00'           TO FIO-STAT
                       MOVE SCR-STAT-CON   TO SCR-STAT
                       GO TO FIN-FND-KEY.
      *     ELSE
      *     IF DBC-NUM-ICLI IN CCC-FLD > ZEROES
      **IDC-CLI Busca Cliente por medio de IdC
      *         MOVE DBC-NUM-ICLI IN CCC-FLD TO DBC-NUM-ICLI IN DBC
      *         MOVE DBC-IND-ICLI IN CCC-FLD TO DBC-IND-ICLI IN DBC
      *         MOVE DBC-GLS-ICLI IN CCC-FLD TO DBC-GLS-ICLI IN DBC
      *         MOVE 'DBC-IDC-ICLI' TO FIO-AKEY
      *         MOVE FIO-GET-KEY    TO FIO-CMND
      *         PERFORM SGC-FIO-DBC
      *         IF NOT FIO-STAT-OKS
      *             MOVE FIO-STAT-NEX TO FIO-STAT
      *             MOVE '39'         TO PGM-STAT-DBC
      *             MOVE 'SGC'        TO MSG-COD-SIST
      *             MOVE 'CLI    NEX' TO MSG-COD-MENS
      *             PERFORM GET-MSG
      *             MOVE MSG-GLS-DESC IN MSG TO FRM-MENS
      *         ELSE
      *             MOVE SPACES TO MSG-COD-MENS
      *             MOVE '00'                TO PGM-STAT-DBC
      *             MOVE DBC-GLS-NOMC IN DBC TO CPT-STRN
      *             PERFORM CPT-BLKS
      *             MOVE CPT-STRN            TO DBC-GLS-NOMC IN DBC
      *     ELSE
      *     IF DBC-GLS-NOMC IN CCC-FLD > SPACES
      **NOM-CLI Busca Cliente por medio del Nombre
      *         MOVE DBC-GLS-NOMC IN CCC-FLD TO STR-GLS-GSTR
      *         PERFORM STR-UNS
      *         MOVE STR-GLS-FUNS IN STR-VARI(1) TO DBC-GLS-APAT IN DBC
      *         MOVE STR-GLS-FUNS IN STR-VARI(2) TO DBC-GLS-AMAT IN DBC
      *         MOVE STR-GLS-FUNS IN STR-VARI(3) TO DBC-GLS-NOMB IN DBC
      *         MOVE 'DBC-GLS-NOMC' TO FIO-AKEY
      *         MOVE FIO-GET-NLS    TO FIO-CMND
      *         PERFORM SGC-FIO-DBC
      *         IF NOT FIO-STAT-OKS
      *             MOVE FIO-STAT-NEX TO FIO-STAT
      *             MOVE '39'         TO PGM-STAT-DBC
      *             MOVE 'SGC'        TO MSG-COD-SIST
      *             MOVE 'CLI    NEX' TO MSG-COD-MENS
      *             PERFORM GET-MSG
      *             MOVE MSG-GLS-DESC IN MSG TO FRM-MENS
      *             MOVE ZEROES       TO DBC-NUM-ICLI IN CCC-FLD
      *             MOVE SPACES       TO DBC-VRF-ICLI IN CCC-FLD
      *             MOVE SPACES       TO DBC-IND-ICLI IN CCC-FLD
      *             MOVE SPACES       TO DBC-GLS-ICLI IN CCC-FLD
      *         ELSE
      *             MOVE SPACES TO MSG-COD-MENS
      *             MOVE '00'         TO PGM-STAT-DBC
      *             MOVE DBC-GLS-NOMC IN DBC TO CPT-STRN
      *             PERFORM CPT-BLKS
      *             MOVE CPT-STRN            TO DBC-GLS-NOMC IN DBC.
      *     PERFORM BKP-CIC-CLI.
      *     GO TO FIN-FND-KEY.
      *>>>>
*% END
*% IF PUT_SCR
      *<<<< PUT_SCR
           MOVE ZEROES TO WSS-TOT-MONE.
           MOVE SCR-CIC-ICLI TO RCC-CIC-ICLI IN RCC.
           MOVE SPACES TO RCC-CAI-IOPD IN RCC.
           MOVE ZEROES TO RCC-IIC-IOPD IN RCC.
           MOVE FIO-GET-NLS TO FIO-CMND.
           PERFORM DAP-FIO-RCC.
           IF NOT FIO-STAT-OKS OR
               SCR-CIC-ICLI NOT = RCC-CIC-ICLI IN RCC
               MOVE 'DAP' TO MSG-COD-SIST
               MOVE 'CLI    NORCC' TO MSG-COD-MENS
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS
           ELSE
                MOVE 'SI' TO LEO
                PERFORM PRO-RCC
                PERFORM PUT-GLS-MONE VARYING WSS-NUM-MONE
                  FROM 1 BY 1 UNTIL WSS-NUM-MONE > WSS-TOT-MONE.
      *     PERFORM UNP-OPCI VARYING FRM-IFLD FROM 1 BY 1
      *             UNTIL FRM-IFLD > 11.
      *>>>>
*% END
*% IF EOF
      *<<<< EOF
       PRO-RCC SECTION.
       INI-PRO-RCC.
           MOVE ZEROES TO WSS-TOT-OPER.
       LUP-PRO-RCC.
           MOVE RCC-CIC-IOPD IN RCC TO OPD-CIC-IOPD IN OPD.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM DAP-FIO-OPD.
           IF NOT FIO-STAT-OKS
               GO TO NXT-PRO-RCC.
           IF  NOT (  OPD-COD-STAT IN OPD = 'G' OR 
                      ( OPD-COD-STAT IN OPD = 'L' AND
                        OPD-COD-SCTB = 'VCD' AND
                        OPD-COD-RENO IN OPD = 'N'
                      )
                  )
               GO TO NXT-PRO-RCC.
           ADD 1 TO WSS-TOT-OPER.
           IF WSS-TOT-OPER < 12
               PERFORM PUT-ELM
           ELSE
               IF NOT LEO-TODOS
                   GO TO END-PRO-RCC.

           IF LEO-TODOS
               PERFORM PRO-TOT.

       NXT-PRO-RCC.
           MOVE FIO-GET-NXT TO FIO-CMND.
           PERFORM DAP-FIO-RCC
           IF FIO-STAT-OKS AND
              SCR-CIC-ICLI = RCC-CIC-ICLI IN RCC
               GO TO LUP-PRO-RCC.
       END-PRO-RCC.
           IF WSS-TOT-OPER = 0
              PERFORM MSG-ASCE
              GO TO FIN-PRO-RCC.
           IF WSS-TOT-OPER > 0 AND
              WSS-TOT-OPER < 12
               MOVE 'DAP'          TO MSG-COD-SIST
               MOVE 'CLI    N+OPD' TO MSG-COD-MENS
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MEN2
           ELSE
               MOVE 'DAP' TO MSG-COD-SIST
               MOVE 'CLI    DGPF6' TO MSG-COD-MENS
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MEN2.
           ADD 1 TO WSS-TOT-OPER.
           PERFORM CLR-TBL-CCC VARYING FRM-IFLD FROM WSS-TOT-OPER BY 1
                        UNTIL FRM-IFLD > 11.
       FIN-PRO-RCC.
           EXIT.

       PRO-RCC-PREV SECTION.
       INI-PRO-RCC-PREV.
           MOVE ZEROES TO WSS-TOT-OPER.
       LUP-PRO-RCC-PREV.
           MOVE RCC-CIC-IOPD IN RCC TO OPD-CIC-IOPD IN OPD.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM DAP-FIO-OPD.
           IF NOT FIO-STAT-OKS
               GO TO NXT-PRO-RCC-PREV.
           IF  NOT (  OPD-COD-STAT IN OPD = 'G' OR 
                      ( OPD-COD-STAT IN OPD = 'L' AND
                        OPD-COD-SCTB = 'VCD' AND
                        OPD-COD-RENO IN OPD = 'N'
                      )
                  )
           ADD 1 TO WSS-TOT-OPER.
           IF WSS-TOT-OPER < 12
               SUBTRACT 12 FROM WSS-TOT-OPER GIVING WSS-J
               PERFORM PUT-ELM-PREV
           ELSE
               IF NOT LEO-TODOS
                   GO TO END-PRO-RCC-PREV.

           IF LEO-TODOS
               PERFORM PRO-TOT.

       NXT-PRO-RCC-PREV.
           MOVE FIO-GET-PRV TO FIO-CMND.
           PERFORM DAP-FIO-RCC
           IF FIO-STAT-OKS AND
              SCR-CIC-ICLI = RCC-CIC-ICLI IN RCC
               GO TO LUP-PRO-RCC-PREV.
       END-PRO-RCC-PREV.
           IF WSS-TOT-OPER = 0
              PERFORM MSG-DESC
              GO TO FIN-PRO-RCC-PREV.
           ADD 1 TO WSS-TOT-OPER.
           PERFORM CLR-TBL-CCC VARYING FRM-IFLD FROM WSS-TOT-OPER BY 1
                        UNTIL FRM-IFLD > 11.
       FIN-PRO-RCC-PREV.
           EXIT.

       PRO-TOT SECTION.
       INI-PRO-TOT.
           MOVE 'N' TO WSS-IND-MONE.
           PERFORM PRO-MONE VARYING WSS-NUM-MONE FROM 1 BY 1
                   UNTIL WSS-NUM-MONE > WSS-TOT-MONE OR
                         WSS-IND-MONE = 'S'.

           IF WSS-IND-MONE = 'N'
               ADD 1 TO WSS-TOT-MONE
               MOVE WSS-TOT-MONE TO WSS-IDX-MONE.

           ADD OPD-VAL-CAPT IN OPD TO
                   FRM-VAL-TOTA IN CCC-FLD(WSS-IDX-MONE).
           MOVE OPD-COD-VCAM IN OPD TO
                   FRM-GLS-TOTA IN CCC-FLD(WSS-IDX-MONE).

       FIN-PRO-TOT.
           EXIT.

       CLR-TBL-CCC SECTION.
       INI-CLR-TBL-CCC.
           MOVE SPACES TO FRM-CAI-IOPD IN CCC-FLD(FRM-IFLD).
           MOVE ZEROES TO FRM-IIC-IOPD IN CCC-FLD(FRM-IFLD).
           MOVE SPACES TO FRM-IND-VENC IN CCC-FLD(FRM-IFLD).
           MOVE ZEROES TO FRM-VAL-CAPT IN CCC-FLD(FRM-IFLD).
           MOVE SPACES TO FRM-FEC-FREA IN CCC-FLD(FRM-IFLD).
           MOVE SPACES TO FRM-FEC-FPVC IN CCC-FLD(FRM-IFLD).
           MOVE SPACES TO FRM-GLS-VCAM IN CCC-FLD(FRM-IFLD).
           MOVE SPACES TO FRM-GLS-COPD IN CCC-FLD(FRM-IFLD).
       FIN-CLR-TBL-CCC.
           EXIT.

       PUT-ELM SECTION.
       INI-PUT-ELM.
           MOVE OPD-CAI-IOPD TO FRM-CAI-IOPD IN CCC-FLD(WSS-TOT-OPER).
           MOVE OPD-IIC-IOPD TO FRM-IIC-IOPD IN CCC-FLD(WSS-TOT-OPER).
           IF  OPD-COD-STAT IN OPD = 'L' AND
               OPD-COD-SCTB = 'VCD' AND
               OPD-COD-RENO IN OPD = 'N'
                  MOVE 'V' TO FRM-IND-VENC IN CCC-FLD(WSS-TOT-OPER)
               ELSE
                  MOVE ' ' TO FRM-IND-VENC IN CCC-FLD(WSS-TOT-OPER).
           MOVE OPD-VAL-CAPT TO FRM-VAL-CAPT IN CCC-FLD(WSS-TOT-OPER).
           MOVE OPD-NUM-DREA TO FRM-NUM-DREA IN CCC-FLD(WSS-TOT-OPER).
           MOVE OPD-NUM-MREA TO FRM-NUM-MREA IN CCC-FLD(WSS-TOT-OPER).
           MOVE OPD-NUM-SREA TO FRM-NUM-SREA IN CCC-FLD(WSS-TOT-OPER).
           MOVE OPD-NUM-AREA TO FRM-NUM-AREA IN CCC-FLD(WSS-TOT-OPER).
           MOVE OPD-NUM-DPVC TO FRM-NUM-DPVC IN CCC-FLD(WSS-TOT-OPER).
           MOVE OPD-NUM-MPVC TO FRM-NUM-MPVC IN CCC-FLD(WSS-TOT-OPER).
           MOVE OPD-NUM-SPVC TO FRM-NUM-SPVC IN CCC-FLD(WSS-TOT-OPER).
           MOVE OPD-NUM-APVC TO FRM-NUM-APVC IN CCC-FLD(WSS-TOT-OPER).
           MOVE 'TAB' TO TAB-COD-SIST.
           MOVE 'VLR' TO TAB-COD-TTAB IN TAB.
           MOVE OPD-COD-VCAM IN OPD TO TAB-COD-CTAB IN TAB.
           PERFORM BUS-TAB.
           MOVE TAB-GLS-DCOR TO FRM-GLS-VCAM IN CCC-FLD(WSS-TOT-OPER).

           MOVE 'TAB' TO TAB-COD-SIST.
           MOVE 'TIO' TO TAB-COD-TTAB IN TAB.
           MOVE OPD-COD-TOPD IN OPD TO TAB-COD-CTAB IN TAB.
           PERFORM BUS-TAB.
           MOVE TAB-GLS-DCOR TO WSS-GLS-TOPD.

           MOVE 'TAB' TO TAB-COD-SIST.
           MOVE 'AUX' TO TAB-COD-TTAB IN TAB.
           MOVE OPD-COD-COPD IN OPD TO TAB-COD-CTAB IN TAB.
           PERFORM BUS-TAB.
           MOVE TAB-GLS-DCOR TO WSS-GLS-AOPD.

           MOVE WSS-GLS-COPD TO FRM-GLS-COPD IN CCC-FLD(WSS-TOT-OPER).
       FIN-PUT-ELM.
           EXIT.

       PUT-ELM-PREV SECTION.
       INI-PUT-ELM-PREV.
           MOVE OPD-CAI-IOPD TO FRM-CAI-IOPD IN CCC-FLD(WSS-J).
           MOVE OPD-IIC-IOPD TO FRM-IIC-IOPD IN CCC-FLD(WSS-J).
           IF  OPD-COD-STAT IN OPD = 'L' AND
               OPD-COD-SCTB = 'VCD' AND
               OPD-COD-RENO IN OPD = 'N'
                  MOVE 'V' TO FRM-IND-VENC IN CCC-FLD(WSS-J)
               ELSE
                  MOVE ' ' TO FRM-IND-VENC IN CCC-FLD(WSS-J).
           MOVE OPD-VAL-CAPT TO FRM-VAL-CAPT IN CCC-FLD(WSS-J).
           MOVE OPD-NUM-DREA TO FRM-NUM-DREA IN CCC-FLD(WSS-J).
           MOVE OPD-NUM-MREA TO FRM-NUM-MREA IN CCC-FLD(WSS-J).
           MOVE OPD-NUM-SREA TO FRM-NUM-SREA IN CCC-FLD(WSS-J).
           MOVE OPD-NUM-AREA TO FRM-NUM-AREA IN CCC-FLD(WSS-J).
           MOVE OPD-NUM-DPVC TO FRM-NUM-DPVC IN CCC-FLD(WSS-J).
           MOVE OPD-NUM-MPVC TO FRM-NUM-MPVC IN CCC-FLD(WSS-J).
           MOVE OPD-NUM-SPVC TO FRM-NUM-SPVC IN CCC-FLD(WSS-J).
           MOVE OPD-NUM-APVC TO FRM-NUM-APVC IN CCC-FLD(WSS-J).
           MOVE 'TAB' TO TAB-COD-SIST.
           MOVE 'VLR' TO TAB-COD-TTAB IN TAB.
           MOVE OPD-COD-VCAM IN OPD TO TAB-COD-CTAB IN TAB.
           PERFORM BUS-TAB.
           MOVE TAB-GLS-DCOR TO FRM-GLS-VCAM IN CCC-FLD(WSS-J).

           MOVE 'TAB' TO TAB-COD-SIST.
           MOVE 'TIO' TO TAB-COD-TTAB IN TAB.
           MOVE OPD-COD-TOPD IN OPD TO TAB-COD-CTAB IN TAB.
           PERFORM BUS-TAB.
           MOVE TAB-GLS-DCOR TO WSS-GLS-TOPD.

           MOVE 'TAB' TO TAB-COD-SIST.
           MOVE 'AUX' TO TAB-COD-TTAB IN TAB.
           MOVE OPD-COD-COPD IN OPD TO TAB-COD-CTAB IN TAB.
           PERFORM BUS-TAB.
           MOVE TAB-GLS-DCOR TO WSS-GLS-AOPD.

           MOVE WSS-GLS-COPD TO FRM-GLS-COPD IN CCC-FLD(WSS-J).
       FIN-PUT-ELM-PREV.
           EXIT.

       PRO-MONE SECTION.
       INI-PRO-MONE.
           IF OPD-COD-VCAM IN OPD =
              FRM-GLS-TOTA IN CCC-FLD(WSS-NUM-MONE)
                MOVE 'S' TO WSS-IND-MONE
                MOVE WSS-NUM-MONE TO WSS-IDX-MONE.
       FIN-PRO-MONE.
           EXIT.

       PUT-GLS-MONE SECTION.
       INI-PUT-GLS-MONE.
           MOVE 'TAB' TO TAB-COD-SIST.
           MOVE 'VLR' TO TAB-COD-TTAB IN TAB.
           MOVE FRM-GLS-TOTA IN CCC-FLD(WSS-NUM-MONE) TO
                TAB-COD-CTAB IN TAB.
           PERFORM BUS-TAB.
           MOVE TAB-GLS-DCOR TO
                FRM-GLS-TOTA IN CCC-FLD(WSS-NUM-MONE).
       FIN-PUT-GLS-MONE.
           EXIT.

      * UNP-OPCI SECTION.
      * INI-UNP-OPCI.
      *     MOVE FRM-CPIM-UBY TO FRM-COD-OPCI-ATR IN CCC-FLD(FRM-IFLD).
      * FIN-UNP-OPCI.
      *     EXIT.

       BKP-CIC-CLI SECTION.
       INI-BKP-CIC-CLI.
           IF PGM-STAT-DBC-OKS
              MOVE DBC-CIC-ICLI IN DBC TO SCR-CIC-ICLI.
       FIN-BKP-CIC-CLI.
           EXIT.

      * Modulo para Busqueda con PF7(prv) y PF8(nxt) por DBC(reqa) o Nombre.
       LEE-NXT-PRV SECTION.
       INI-LEE-NXT-PRV.
           IF SCR-DBC-REQA > SPACES
               PERFORM LEE-NXT-PRV-DBC
           ELSE
               PERFORM LEE-NXT-PRV-NOM.
           PERFORM BKP-CIC-CLI.
       FIN-LEE-NXT-PRV.
           EXIT.

      * Modulo Efectua Busqueda por DBC(reqa) con PF7(prv) y PF8(nxt).
       LEE-NXT-PRV-DBC SECTION.
       INI-LEE-NXT-PRV-DBC.
           MOVE SCR-DBC-REQA TO ADR-DBC-REQA.
           MOVE FIO-KDEF-S   TO FIO-KDEF.
           IF FRM-FFLD = FRM-FFLD-PF7
               MOVE FIO-GET-PRV TO FIO-CMND
           ELSE
               MOVE FIO-GET-NXT TO FIO-CMND.
           MOVE 'DBC-GLS-NOMC' TO FIO-AKEY.
           PERFORM SGC-FIO-DBC.
           MOVE FIO-STAT TO PGM-STAT-DBC.
           IF FIO-STAT-OKS
               MOVE ADR-DBC-REQA TO SCR-DBC-REQA.
       FIN-LEE-NXT-PRV-DBC.
           EXIT.

      * Modulo Efectua Busqueda por Nombre con PF7(prv) y PF8(nxt).
       LEE-NXT-PRV-NOM SECTION.
       INI-LEE-NXT-PRV-NOM.
           IF DBC-GLS-NOMC IN DBC > SPACES
               MOVE FIO-GET-KEY    TO FIO-CMND
               MOVE 'DBC-GLS-NOMC' TO FIO-AKEY
               PERFORM SGC-FIO-DBC
               IF FIO-STAT-OKS
                   IF FRM-FFLD = FRM-FFLD-PF7
                       MOVE FIO-GET-PRV TO FIO-CMND
                   ELSE
                       MOVE FIO-GET-NXT TO FIO-CMND
               ELSE
                   IF FRM-FFLD = FRM-FFLD-PF7
                       MOVE FIO-GET-LEQ TO FIO-CMND
                   ELSE
                       MOVE FIO-GET-NLS TO FIO-CMND
           ELSE
               IF FRM-FFLD = FRM-FFLD-PF7
                   MOVE FIO-GET-LEQ TO FIO-CMND
               ELSE
                   MOVE FIO-GET-NLS TO FIO-CMND.
           MOVE 'DBC-GLS-NOMC' TO FIO-AKEY.
           PERFORM SGC-FIO-DBC.
           MOVE FIO-STAT TO PGM-STAT-DBC.
           IF FIO-STAT-OKS
               MOVE ADR-DBC-REQA TO SCR-DBC-REQA.
       FIN-LEE-NXT-PRV-NOM.
           EXIT.
      **************************************************************************
      *Entidades de DAP
       COPY DAPBFOPD.
       COPY DAPBFRCC.

       COPY GNSBGCPT.
       COPY GNSBGSTR.
      * COPY SGCBGCLI.
       COPY GNSBBTAB.
      *>>>>
*% END
