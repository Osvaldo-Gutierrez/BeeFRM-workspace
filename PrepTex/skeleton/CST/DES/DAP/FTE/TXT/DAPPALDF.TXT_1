*%! Codigo adicional para programa LDF
*% IF SETTAG
*% FNCPQ = "120412"
*% VSNPQ = "12.08.27"
*% FNCPU = "120412"
*% VSNPU = "12.08.27"
*% END
*% NO_HDR_CST = TRUE
*% PGM_PTC = TRUE
*%
*%! IF PGM_PQ
*%!  FRM = "LDF"
*%!  PADRE = "LND"
*%!  KEY_PADRE = "LND-KEY-FLND"
*%!  LARGO_KEY_PADRE = 20
*%!  FIO_PADRE = "DAP-FIO-LND"
*%!  SIST_PADRE = "DAP"
*%!  KEY_BROWSE_PADRE = "LND-KEY-FLND"
*%!
*%!  ACEPTE_PF7 = TRUE
*%!  ACEPTE_PF8 = TRUE
*%! INCLUDE 'GNSSRC:PFSCONENT.SRC'
*%!
*%!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
*%! END
*% IF WSS
      *<<<< WSS
       77  WSS-IND-LDF-VSAM VALUE 'N'   PIC X(01).
       77  WSS-LEE-DBC-DESDE-LDF  VALUE 'N'   PIC X(01).
       77  WSS-CIC-ICLI    VALUE SPACES PIC X(12).
       77  WSS-YA-LEI-REG-2 VALUE 'N' PIC X(01).
       77  WSS-COMPARA      VALUE 'N' PIC X(01).
      *          03 FRM-CPIM.
      * AEY = Protegido, normal
      *             05 FRM-CPIM-AEY         PIC X(01) VALUE '1'.
      * UBY = Desprotegido, brillante
      *             05 FRM-CPIM-UBY         PIC X(01) VALUE 'I'.
      * ANY = Protegido, non-display
      *             05 FRM-CPIM-ANY         PIC X(01) VALUE '_'.
      * UNY = Desprotegido, non-display
      *             05 FRM-CPIM-UNY         PIC X(01) VALUE '('.
      * ANY = Protegido, normal
      *             05 FRM-CPSF-AEY         PIC X(01) VALUE '-'.
      * ABY = Protegido, brillante
      *             05 FRM-CPIM-ABY         PIC X(01) VALUE '9'.
      * UST = Virtual para BMS, pues es campo STOPPER en UNISYS
      *             05 FRM-CPIM-UST         PIC X(01) VALUE SPACES.
       COPY DAPBROPD.
       COPY DAPBROPD REPLACING OPD BY OPD-CPR.
       COPY DAPBRRCC.
       COPY DAPWXLDF.
       COPY SGCBRDBC.
       COPY GNSWGCPT.
       COPY GNSWGSTR.
       01 WSS-VAR-TAB.
          03 WSS-TAB-CTAB-03           VALUE SPACES   PIC X(03).
          03 WSS-COD-CTAB.
             05 WSS-TAB-CTAB           VALUE SPACES   PIC X(03).
             05 WSS-NUM-CTAB           VALUE ZEROES   PIC 9(02).
             05 WSS-FIL-CTAB           VALUE SPACES   PIC X(07).
             05 WSS-LUP-LDFD           VALUE 'S'      PIC X(01).
             05 WSS-LDF-LDFD           VALUE 'N'      PIC X(01).
             05 WSS-IDX                VALUE 1        PIC 9(02).
             05 WSV-COD-CMND                          PIC X(03).
             05 WSV-COD-OTRN                          PIC X(04).
             05 WSV-NUM-CORR     OCCURS 12 TIMES.
                07 WSV-GLS-CFLA                       PIC X(20).
                07 WSV-GLS-CFLD                       PIC X(20).
      
      * Variable para llenado de Log.
             05 WSS-QUE-LDFD                          PIC 9(03).
      *>>>>
*% END
*% IF WSS_DTC
      *<<<< WSS_DTC
      *Entidades de SGC
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-OPD-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-RCC-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-DBC-REQA==.
      *
       01   VAR-PROGRAMA.
            03 PGM-COD-CREB              VALUE ' '       PIC X(03).
            03 PGM-STAT-RCC.
               88 PGM-STAT-RCC-NUL       VALUE '  '.
               07 PGM-STT1-RCC           VALUE '2'       PIC X(01).
                  88 PGM-STAT-RCC-OKS    VALUE '0'.
               07 PGM-STT2-RCC           VALUE '3'       PIC X(01).
      *>>>>
*% END
*% IF INI_FIO_IBM
      *<<<< INI_FIO
           PERFORM GET-FHOY.
           IF ( FRM-FFLD = FRM-FFLD-PF8 OR
                FRM-FFLD = FRM-FFLD-PF7 )
                  MOVE 'GKY' TO SCR-INST.
           MOVE 'DAP' TO FIO-SIST.
           MOVE 'VSN'    TO TAB-COD-TTAB IN TAB.
           MOVE 'LDFVSM' TO TAB-COD-CTAB IN TAB.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM GNS-FIO-TAB.
           IF FIO-STAT-OKS
               MOVE TAB-MSC-STAT IN TAB TO WSS-IND-LDF-VSAM.
      *>>>> INI_FIO_IBM
*% END
*% IF FND_KEY_CMND
      *<<<< FND_KEY_CMND
      *>>>> FND_KEY_CMND
*% END
*% IF FIN_SCR_ACC
      *<<<< FIN_SCR_ACC
           IF FRM-FFLD = FRM-FFLD-PF12
              PERFORM SCR-CLRA-LDF
              PERFORM EDT-KEY-LDF
              PERFORM EDT-FLD-LDF.
      *>>>> FIN_SCR_ACC
*% END
*% IF INI_SCR_DMSG
*% IF PGM_PQ
      *<<<< INI_SCR_DMSG
      * Con este codigo logramos que una vez terminada la consulta
      * las claves no se borren de la pantalla
           IF SCR-CMND = 'CON' AND
              SCR-INST = SCR-INST-GKY AND
              FRM-FFLD NOT = FRM-FFLD-RET
                  MOVE PGM-NO-LIMPIAR-NADA TO PGM-ICLR.
      *>>>> INI_SCR_DMSG
*% END
*% END
*% IF FND_KEY
      *<<<< FND_KEY
           MOVE FIO-GET-KEY TO FIO-CMND.
           MOVE 'FND-KEY1' TO QUE-COLA.
           MOVE LDF TO QUE-ITEM.
           MOVE +200 TO QUE-LITM.
           MOVE QUE-PUT TO QUE-CMND.
           PERFORM GNX-PRO-QUE.

      *<<<< FND_KEY_CMND
      *     IF FRM-COD-CREB IN LDF-FLD = 'CLI'
           IF DBC-NUM-ICLI IN LDF-FLD > ZEROES

               MOVE 'FND-KEY2' TO QUE-COLA
               MOVE  DBC-NUM-ICLI IN LDF-FLD TO QUE-ITEM
               MOVE +200 TO QUE-LITM
               MOVE QUE-PUT TO QUE-CMND
               PERFORM GNX-PRO-QUE

               MOVE 'N' TO WSS-LEE-DBC-DESDE-LDF
               PERFORM OBTENER-NOMBRE-DBC
               IF PGM-STAT-DBC-OKS
                    MOVE DBC-CIC-ICLI IN DBC TO LDF-CIC-ICL0
                                                LDF-CIC-ICLI.
      * PARA PRIMERA CONSULTA
           IF NOT ( FRM-FFLD = FRM-FFLD-PF7 OR
                    FRM-FFLD = FRM-FFLD-PF8 )
               PERFORM SET-KEY-LDF.

           IF FRM-FFLD = FRM-FFLD-PF7 OR
              FRM-FFLD = FRM-FFLD-PF8
                MOVE FIO-GET-KEY TO FIO-CMND
           ELSE
                 MOVE FIO-GET-NLS TO FIO-CMND.
      *>>>> FND_KEY_CMND
           PERFORM DAP-FIO-LDF.
           IF FIO-STAT-OKS
               MOVE LDF-STP-ITRN IN LDF TO SCR-UMOD.

           MOVE 'FND-KEY4' TO QUE-COLA.
           MOVE LDF TO QUE-ITEM.
           MOVE +200 TO QUE-LITM.
           MOVE QUE-PUT TO QUE-CMND.
           PERFORM GNX-PRO-QUE.

           MOVE FIO-STAT TO PGM-STAT-LDF.
           GO TO LUP-FND-KEY.
      *>>>> FND_KEY
*% END
*% IF FIN_FND_KEY
      *<<<< FIN_FND_KEY
       LUP-FND-KEY.
           IF NOT FIO-STAT-OKS
              GO TO FIN-FND-KEY.

      
           IF FRM-COD-CREB IN LDF-FLD NOT = 'CLI'
               MOVE 'S' TO WSS-LEE-DBC-DESDE-LDF
               PERFORM OBTENER-NOMBRE-DBC.

           MOVE LDF-CIC-ICL0 IN LDF TO WSS-CIC-ICLI.

           IF FRM-COD-CREB IN LDF-FLD = 'OFI'
               IF LDF-COD-IOF0 IN LDF-FLD NOT = LDF-COD-IOF1 IN LDF
                    MOVE PGM-NO-LIMPIAR-NADA TO PGM-ICLR
                    MOVE '23' TO FIO-STAT
                    MOVE '23' TO PGM-STAT-LDF
                    MOVE '23' TO PGM-STAT-DBC
                    MOVE 'LDFNONXTOOFI' TO MSG-COD-MENS
                    MOVE 'DAP' TO MSG-COD-SIST
                    PERFORM GET-MSG
                    MOVE MSG-GLS-DESC TO FRM-MENS
                    GO TO FIN-FND-KEY.

           IF FRM-COD-CREB IN LDF-FLD = 'AUT'
               IF LDF-COD-IEJ0 IN LDF-FLD NOT = LDF-COD-IEJ3 IN LDF
                    MOVE PGM-NO-LIMPIAR-NADA TO PGM-ICLR
                    MOVE '23' TO FIO-STAT
                    MOVE '23' TO PGM-STAT-LDF
                    MOVE '23' TO PGM-STAT-DBC
                    MOVE 'LDFNONXTOAUT' TO MSG-COD-MENS
                    MOVE 'DAP' TO MSG-COD-SIST
                    PERFORM GET-MSG
                    MOVE MSG-GLS-DESC TO FRM-MENS
                    GO TO FIN-FND-KEY.


           IF FRM-COD-CREB IN LDF-FLD = 'CLI'
               IF LDF-CIC-ICL0 IN LDF NOT = DBC-CIC-ICLI IN DBC
                    MOVE PGM-NO-LIMPIAR-NADA TO PGM-ICLR
                    MOVE '23' TO FIO-STAT
                    MOVE '23' TO PGM-STAT-LDF
                    MOVE 'LDFNONXTOCLI' TO MSG-COD-MENS
                    MOVE 'DAP' TO MSG-COD-SIST
                    PERFORM GET-MSG
                    MOVE MSG-GLS-DESC TO FRM-MENS
                    GO TO FIN-FND-KEY.

           IF NOT FIO-STAT-OKS
              GO TO FIN-FND-KEY.

           IF NOT (FRM-FFLD = FRM-FFLD-PF7 OR
                   FRM-FFLD = FRM-FFLD-PF8)
              PERFORM LEE-OTR-LDFD.

           IF SCR-CMND = 'CON'
              IF FRM-FFLD = FRM-FFLD-PF8
                    PERFORM SET-KEY-LDF
                    PERFORM PRO-PF8
              ELSE
                 IF FRM-FFLD = FRM-FFLD-PF7
                    PERFORM SET-KEY-LDF
                    PERFORM PRO-PF7.
       
           IF FRM-FFLD = FRM-FFLD-PF7 OR
              FRM-FFLD = FRM-FFLD-PF8
               MOVE 'S' TO WSS-LEE-DBC-DESDE-LDF
               PERFORM OBTENER-NOMBRE-DBC.
      
      *>>>> FIN_FND_KEY

           MOVE 'S' TO WSS-LUP-LDFD.
*% END
*% IF FIN_PUT_SCR
      *<<<< PUT_SCR
           IF SCR-OFRM-SRV
               PERFORM PRO-LDF-MTI.
      *>>>> PUT_SCR
*% END
*% IF FIN_PUT_SCR
      *<<<< FIN_PUT_SCR
      *>>>> FIN_PUT_SCR
*% END
*% IF FIN_SCR_TRL
      *<<<< FIN_SCR_TRL
           IF PGM-STAT-LDF-OKS
               MOVE 'LDFFPF7PF8 ' TO MSG-COD-MENS
               MOVE 'GNS' TO MSG-COD-SIST
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MEN2.
      *>>>> FIN_SCR_TRL
*% END
*% IF PFS_SCR_GKEY_PREV
      *<<<< PFS_SCR_GKEY_PREV
           IF NOT (FRM-FFLD = FRM-FFLD-PF7)
           IF NOT (FRM-FFLD = FRM-FFLD-PF8)
      *>>>> PFS_SCR_GKEY_PREV
*% END
*% IF PFS_GET_CON
      *<<<< PFS_GET_CON
           IF NOT (FRM-FFLD = FRM-FFLD-PF7)
           IF NOT (FRM-FFLD = FRM-FFLD-PF8)
      *>>>> PFS_GET_CON
*% END
*% IF POST_SCR_PUTA
      *<<<< POST_SCR_PUTA
       FIN-AT-DES.
           MOVE LDF-FLD TO FRM-DFLD.
      *>>>> POST_SCR_PUTA
*% END
*% IF EOF
      *<<<< EOF

       LEE-OTR-LDFD SECTION.
       INI-LEE-OTR-LDFD.
           MOVE 'N' TO WSS-LDF-LDFD.
      *     IF WSS-LUP-LDFD = 'S'
      *        PERFORM LDF-OCC-LDF.
      *     PERFORM PUT-OCC-LDF.
       FIN-LEE-OTR-LDFD.
           EXIT.

      
       SET-KEY-LDF SECTION.
       INI-SET-KEY-LDF.
           IF FRM-COD-CREB IN LDF-FLD = 'OFI'
              MOVE 'LDF-KEY-LDF1' TO FIO-AKEY
           ELSE
           IF FRM-COD-CREB IN LDF-FLD = 'CLI'
              MOVE 'LDF-KEY-LDF2' TO FIO-AKEY
           ELSE
           IF FRM-COD-CREB IN LDF-FLD = 'AUT'
              MOVE 'LDF-KEY-LDF3' TO FIO-AKEY.
       FIN-SET-KEY-LDF.
           EXIT.
      
       OBTENER-NOMBRE-DBC  SECTION.
      *----------------------------
       INI-OBTENER-NOMBRE-DBC.
      
           MOVE 'DBC1DBC ' TO QUE-COLA.
           MOVE DBC TO QUE-ITEM.
           MOVE +200 TO QUE-LITM.
           MOVE QUE-PUT TO QUE-CMND.
           PERFORM GNX-PRO-QUE.

           IF WSS-LEE-DBC-DESDE-LDF = 'S'



               MOVE LDF-CIC-ICL0 IN LDF TO DBC-CIC-ICLI IN DBC

               MOVE 'DBC2DBCL' TO QUE-COLA
               MOVE DBC TO QUE-ITEM
               MOVE +200 TO QUE-LITM
               MOVE QUE-PUT TO QUE-CMND
               PERFORM GNX-PRO-QUE

               GO TO CIC-OBTENER-NOMBRE-DBC.

           IF FRM-COD-CREB IN LDF-FLD = 'OFI' AND
               LDF-COD-IOF0 IN LDF-FLD = SPACES
               GO TO FIN-OBTENER-NOMBRE-DBC.

           IF  FRM-COD-CREB IN LDF-FLD = 'AUT' AND
               LDF-COD-IEJ0 IN LDF-FLD = SPACES
               GO TO FIN-OBTENER-NOMBRE-DBC.

           IF FRM-COD-CREB IN LDF-FLD = 'CLI'
                        AND
               NOT PGM-STAT-DBC-OKS
               MOVE 'DBC-IDC-ICLI' TO FIO-AKEY.


      *    IF FRM-COD-CREB IN LDF-FLD = 'FEC'
      *                 AND
           IF DBC-NUM-ICLI IN LDF-FLD > ZEROES
               PERFORM KEY-DBC-LDF
               MOVE 'DBC-IDC-ICLI' TO FIO-AKEY.

       CIC-OBTENER-NOMBRE-DBC.

           MOVE 'DBC3AKEY' TO QUE-COLA.
           MOVE FIO-AKEY TO QUE-ITEM.
           MOVE +200 TO QUE-LITM.
           MOVE QUE-PUT TO QUE-CMND.
           PERFORM GNX-PRO-QUE.

           MOVE 'DBC4DBC ' TO QUE-COLA.
           MOVE DBC TO QUE-ITEM.
           MOVE +200 TO QUE-LITM.
           MOVE QUE-PUT TO QUE-CMND.
           PERFORM GNX-PRO-QUE.



           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM SGC-FIO-DBC.
           MOVE FIO-STAT TO PGM-STAT-DBC.

           MOVE 'DBC5STAT' TO QUE-COLA.
           MOVE FIO-STAT TO QUE-ITEM.
           MOVE +20 TO QUE-LITM.
           MOVE QUE-PUT TO QUE-CMND.
           PERFORM GNX-PRO-QUE.

           MOVE 'DBC6DBC ' TO QUE-COLA.
           MOVE DBC TO QUE-ITEM.
           MOVE +200 TO QUE-LITM.
           MOVE QUE-PUT TO QUE-CMND.
           PERFORM GNX-PRO-QUE.

           IF FIO-STAT-OKS
                MOVE DBC-CIC-ICLI IN DBC TO
                     LDF-CIC-ICL0 IN LDF
                     LDF-CIC-ICLI IN LDF
                PERFORM CPT-NOMB.

       FIN-OBTENER-NOMBRE-DBC.
           EXIT.
      *
       GET-CUR-RCC SECTION.
      *--------------------
       INI-GET-CUR-RCC.
           MOVE   'RCC-KEY-IOPD'           TO FIO-AKEY.
           MOVE    FIO-GET-NLS             TO FIO-CMND.
           PERFORM DAP-FIO-RCC.
           IF NOT (FIO-STAT-OKS     AND
                  LDF-CIC-ICLI IN LDF   = RCC-CIC-IOPD IN RCC )
                  MOVE '23' TO FIO-STAT.
           MOVE   FIO-STAT  TO PGM-STAT-RCC.
       FIN-GET-CUR-RCC.
           EXIT.
          
       COPY GNSBBTAB.
       COPY DAPBFOPD.
       COPY DAPBFRCC.
       COPY SGCBFDBC.
       COPY GNSBGCPT.
       COPY GNSBGSTR.
       CPT-NOMB SECTION.
       INI-CPT-NOMB.
           MOVE DBC-GLS-NOMC IN DBC TO CPT-STRN.
           PERFORM CPT-BLKS.
           MOVE CPT-STRN            TO DBC-GLS-NOMC IN DBC.
       FIN-CPT-NOMB.
           EXIT.

       PRO-PF7 SECTION.
       INI-PRO-PF7.
           PERFORM SET-KEY-LDF.
           MOVE FIO-GET-PRV TO FIO-CMND.
           PERFORM DAP-FIO-LDF.
           MOVE FIO-STAT TO PGM-STAT-LDF.
           IF NOT FIO-STAT-OKS OR
             (FIO-STAT-OKS AND
             (FRM-COD-CREB IN LDF-FLD = 'OFI' AND
              LDF-COD-IOF0 IN LDF-FLD NOT = LDF-COD-IOF1 IN LDF)) OR
             (FIO-STAT-OKS AND
             (FRM-COD-CREB IN LDF-FLD = 'AUT' AND
              LDF-COD-IEJ0 IN LDF-FLD NOT = LDF-COD-IEJ3 IN LDF)) OR
             (FIO-STAT-OKS AND
             (FRM-COD-CREB IN LDF-FLD = 'CLI' AND
              LDF-CIC-ICL0 IN LDF NOT = WSS-CIC-ICLI))
              IF FIO-STAT-OKS
                 PERFORM SET-KEY-LDF
                 MOVE FIO-GET-NXT TO FIO-CMND
                 PERFORM DAP-FIO-LDF
              ELSE
      *          PERFORM SET-KEY-LDF
                 MOVE FIO-GET-KEY TO FIO-CMND
                 PERFORM DAP-FIO-LDF
                 MOVE FIO-STAT TO PGM-STAT-LDF
              END-IF
              MOVE 'S' TO WSS-LDF-LDFD
              PERFORM EDT-FLD-LDF
              MOVE 'LDFNOPRV' TO MSG-COD-MENS
              MOVE 'DAP' TO MSG-COD-SIST
              PERFORM GET-MSG
              MOVE MSG-GLS-DESC TO FRM-MENS.
       FIN-PRO-PF7.
           EXIT.

       PRO-PF8 SECTION.
       INI-PRO-PF8.
           MOVE 'INI-PF8' TO QUE-COLA.
           MOVE SPACES TO QUE-ITEM.
           MOVE +50 TO QUE-LITM.
           MOVE QUE-PUT TO QUE-CMND.
           PERFORM GNX-PRO-QUE.

           PERFORM SET-KEY-LDF.
           MOVE FIO-GET-NXT TO FIO-CMND.
           PERFORM DAP-FIO-LDF.
           MOVE FIO-STAT TO PGM-STAT-LDF.
           IF NOT FIO-STAT-OKS OR
             (FIO-STAT-OKS AND
             (FRM-COD-CREB IN LDF-FLD = 'OFI' AND
              LDF-COD-IOF0 IN LDF-FLD NOT = LDF-COD-IOF1 IN LDF)) OR
             (FIO-STAT-OKS AND
             (FRM-COD-CREB IN LDF-FLD = 'AUT' AND
              LDF-COD-IEJ0 IN LDF-FLD NOT = LDF-COD-IEJ3 IN LDF)) OR
             (FIO-STAT-OKS AND
             (FRM-COD-CREB IN LDF-FLD = 'CLI' AND
              LDF-CIC-ICL0 IN LDF NOT = WSS-CIC-ICLI))
              IF FIO-STAT-OKS
                 PERFORM SET-KEY-LDF
                 MOVE FIO-GET-PRV TO FIO-CMND
                 PERFORM DAP-FIO-LDF
                 MOVE FIO-STAT TO PGM-STAT-LDF
              ELSE
      *          PERFORM SET-KEY-LDF
                 MOVE FIO-GET-KEY TO FIO-CMND
                 PERFORM DAP-FIO-LDF
                 MOVE FIO-STAT TO PGM-STAT-LDF
              END-IF
              MOVE 'S' TO WSS-LDF-LDFD
              PERFORM EDT-FLD-LDF
              MOVE 'LDFNONXT' TO MSG-COD-MENS
              MOVE 'DAP' TO MSG-COD-SIST
              PERFORM GET-MSG
              MOVE MSG-GLS-DESC TO FRM-MENS.

       FIN-PRO-PF8.
           EXIT.

       PRO-LDF SECTION.
       INI-PRO-LDF.
      *    PERFORM PUT-OCC-LDF.
           PERFORM SET-KEY-LDF.
           MOVE FIO-GET-NXT TO FIO-CMND.
           PERFORM DAP-FIO-LDF.
           IF NOT FIO-STAT-OKS
              MOVE 'S' TO WSS-LDF-LDFD
              PERFORM EDT-FLD-LDF
              MOVE 'LDFNONXT' TO MSG-COD-MENS
              MOVE 'DAP' TO MSG-COD-SIST
              PERFORM GET-MSG
              MOVE MSG-GLS-DESC TO FRM-MENS
              GO TO FIN-PRO-LDF.
           PERFORM SET-KEY-LDF.
           MOVE FIO-GET-PRV TO FIO-CMND.
              PERFORM DAP-FIO-LDF.
       FIN-PRO-LDF.
           EXIT.
      
       GET-GLS-TAB SECTION.
       INI-GET-GLS-TAB.
       FIN-GET-GLS-TAB.
           EXIT.
      
       PUT-GLS-LDF SECTION.
       INI-PUT-GLS-LDF.
       FIN-PUT-GLS-LDF.
           EXIT.
       COPY GNSBGVSM.
       GNX-PRO-QUE SECTION.
       INI-GNX-PRO-QUE.
      *     PERFORM GNS-PRO-QUE.
       FIN-GNX-PRO-QUE.
           EXIT.
      *>>>> EOF

       PRO-LDF-MTI SECTION.
       INI-PRO-LDF-MTI.
      *     MOVE ZEROES TO WSS-TOT-OPER.
      *     MOVE ZEROES TO WSS-TOT-OPER-MTX.
      *     MOVE ZEROES TO WSS-TOT-LEYO-MTX.
      *     MOVE SPACES TO TS-LDF-OCC.
       LUP-PRO-LDF-MTI.


       NXT-PRO-LDF-MTI.

       END-PRO-LDF-MTI.

       FIN-PRO-LDF-MTI.
           EXIT.

*% END
