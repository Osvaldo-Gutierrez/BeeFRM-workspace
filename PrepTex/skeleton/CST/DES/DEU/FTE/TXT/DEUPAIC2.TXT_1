*%! Codigo adicional
*% NO_TIENE_TIMESTAMP = FALSE
*% NO_HDR_CST = FALSE
*% LARGO_TOTAL_COMMAREA = 3000
*% FMT_CHI = TRUE
*% GEN_BCI = TRUE
*% PGM_PTC = TRUE
*% PGM_STAT_CLF = TRUE
*% GEN_MFC = TRUE
*% IF PGM_PQ
*% CLRMFC = "DEUZQIC2"
*% ELSE
*% CLRMFC = "DEUZUIC2"
*% END
*% IF MI_COMMAREA
*% END
*% IF CMT_ID_PU
      *****************************************************************
      * PROYECTO: GENERACION Y EMISION DE CERTIFICADOS
      * AUTOR: AFRI-CGC
      * MANTENCION: CORREGIR AUTOR DE LA TRANSACCION PARA CMD INGRESO
      * ETIQUETA: *AFRI-INI 06-AGO-2014 CORREGIR INGRESO
      *****************************************************************
*% END
*% IF WSS
      *<<<< WSS
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-CAM-REQA==.
       COPY TABBRCAM.

       01 WSS-VARI.
          03 WSS-FEC-FEC1.
             05 WSS-NU1-SIG     VALUE ZEROES     PIC 9(02).
             05 WSS-NU1-ANO     VALUE ZEROES     PIC 9(02).
             05 WSS-NU1-MES     VALUE ZEROES     PIC 9(02).
             05 WSS-NU1-DIA     VALUE ZEROES     PIC 9(02).

          03 WSS-FEC-FEC2.
             05 WSS-NU2-SIG     VALUE ZEROES     PIC 9(02).
             05 WSS-NU2-ANO     VALUE ZEROES     PIC 9(02).
             05 WSS-NU2-MES     VALUE ZEROES     PIC 9(02).
             05 WSS-NU2-DIA     VALUE ZEROES     PIC 9(02).

          03 WSS-NOM-PROG       VALUE 'DEUPQIC2' PIC X(08).
          03 WCC-DL20130        VALUE 'DL-20130' PIC X(08).
          03 WCC-O              VALUE 'O'        PIC X(01).
          03 WCC-E              VALUE 'E'        PIC X(01).
          03 WCC-A              VALUE 'A'        PIC X(01).
          03 WCC-CEOE           VALUE 'CEO '     PIC X(04).
          03 WCC-IPTE           VALUE 'IPT '     PIC X(04).
          03 WCC-NOEE           VALUE 'NOE '     PIC X(04).
          03 WCC-CIP            VALUE 'CIP '     PIC X(04).
          03 WCC-HIS            VALUE 'HIS'      PIC X(03).
          03 WCC-MSG            VALUE 'MSG'      PIC X(03).
          03 WCC-COL            VALUE 'COL'      PIC X(03).
          03 WCC-IPTEXC         VALUE 'IPTEXC'   PIC X(06).
          03 WCC-ERRVALTRM      VALUE 'ERRVALTRM '  PIC X(10).
          03 WCC-ERRVALNEXC     VALUE 'ERRVALNEXC'  PIC X(10).
          03 WCC-CIPNOEXISTE    VALUE 'CIPNOEXISTE'  PIC X(11).
          03 WCC-PESOS          VALUE '0999  '   PIC X(06).
          03 WCC-I              VALUE 'I'        PIC X(01).
          03 WCC-S              VALUE 'S'        PIC X(01).
          03 WCC-N              VALUE 'N'        PIC X(01).
          03 WCC-C1             VALUE '1'        PIC X(01).
          03 WCC-3              VALUE '3'        PIC X(01).
          03 WCC-0              VALUE '0'        PIC X(01).
          03 WCC-PGM-PQ         VALUE 'DEUPQIC2' PIC X(08).
          03 WCC-PGM-PU         VALUE 'DEUPUIC2' PIC X(08).
*% IF PGM_PQ
          03 WCC-PGM-PU-IC2     VALUE 'DEUPUICT' PIC X(08).
*% END
          03 WCC-1              VALUE 1          PIC 9(01).
          03 WCC-S1             VALUE -1         PIC S9(01).
          03 WCC-ELI            VALUE 'ELI'      PIC X(03).
          03 WCC-MOD            VALUE 'MOD'      PIC X(03).
          03 WCC-ING            VALUE 'ING'      PIC X(03).
          03 WCC-CON            VALUE 'CON'      PIC X(03).
          03 WCC-GNS            VALUE 'GNS'      PIC X(03).
          03 WCC-FLDING         VALUE 'FLDING'   PIC X(06).
          03 WCC-DQ50           VALUE 'DQ50'     PIC X(04).
          03 WCC-DEUFIC2        VALUE 'DEUFIC2'  PIC X(07).
          03 WCC-DEUAIC2        VALUE 'DEUAIC2'  PIC X(07).
          03 WCC-DU50           VALUE 'DU50'     PIC X(04).
          03 WCC-S4             VALUE +4         PIC S9(01).
          03 WCC-N3             VALUE 3          PIC 9(01).
          03 WCC-N19            VALUE 19         PIC 9(02).
          03 WCC-999            VALUE 999        PIC 9(03).
          03 WCC-14             VALUE 14         PIC 9(02).
          03 WCC-DEU            VALUE 'DEU'      PIC X(03).
          03 WCC-CERTIENUSO     VALUE 'CERTI EN USO' PIC X(12).
*% IF PGM_PQ
          03 WCC-CERTIEMITI     VALUE 'CERTIEMITIDO' PIC X(12).
*% END
          03 WCC-MEN1           VALUE 'CURSE>TERMIN' PIC X(12).
          03 WCC-MEN2           VALUE 'INICIO>TERMI' PIC X(12).
          03 WCC-MEN3           VALUE 'AFECTOPERI0 ' PIC X(12).
          03 WCC-MEN4           VALUE 'AFECTOTASA0 ' PIC X(12).
          03 WCC-MEN5           VALUE 'TTRAMO>TOPE ' PIC X(12).
          03 WCC-MEN6           VALUE 'MONTO<SALDO ' PIC X(12).
          03 WSS-GLS-DATA.
             05 WSS-NUM-MAXI    VALUE ZEROES     PIC 9(02).
             05 WSS-GLS-DISP    VALUE SPACES     PIC X(08).

          03 WSS-CAM-MOD.
             05 WSS-CIC-ICLI                     PIC X(12).
             05 WSS-NUM-ICLI                     PIC 9(08).
             05 WSS-VRF-ICLI                     PIC X(01).
             05 WSS-IND-ICLI                     PIC X(01).
             05 WSS-GLS-ICLI                     PIC X(03).
             05 WSS-GLS-NOMC                     PIC X(75).
             05 WSS-FEC-FVIG                     PIC 9(08).
             05 WSS-FEC-FEMI                     PIC 9(08).
             05 WSS-COD-IEMI                     PIC X(10).
             05 WSS-COD-ICIE                     PIC X(18).
             05 WSS-FEC-FLIQ                     PIC 9(08).
             05 WSS-COD-OPCO                     PIC X(20).
             05 WSS-COD-MONE                     PIC X(06).
             05 WSS-CAI-IORI                     PIC X(04).
             05 WSS-IIC-IORI                     PIC 9(08).
             05 WSS-SGV-MORI                     PIC 9(11)V9(04).
             05 WSS-VAL-3475                     PIC 9(11)V9(04).
             05 WSS-VAL-TPAG                     PIC 9(11)V9(04).
             05 WSS-IND-DUSO                     PIC X(01).
      *>>>>
*% END
*% IF FIN_SCR_VARI
      *<<<< FIN_SCR_VARI
      *ISP DEBE QUEDAR PRIMERO QUE EL OTRO LABEL FIN_SCR_VARI
       COPY DEUWGENG.
      *>>>>
*% END
*% IF INI_FIO
      *<<<< INI_FIO
           IF FIO-PROG = WSS-NOM-PROG
             IF SCR-INST-EXT = WCC-3
               MOVE WCC-0  TO SCR-INST-EXT
               MOVE WCC-GNS TO MSG-COD-SIST
               MOVE WCC-FLDING TO MSG-COD-MENS
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO SCR-MENS-EXT
               PERFORM ING-FPEN-CIC.
      *>>>>
*% END
*% IF PFS_SCR_ACC
      *<<<< PFS_SCR_ACC
      *>>>>
*% END
*% IF FND_KEY
      *<<<< FND_KEY
           IF SCR-CCPP = WCC-ING
               IF CIP-COD-ATRN IN CIP NOT = WCC-PGM-PU AND
                  CIP-COD-ATRN IN CIP NOT = WCC-PGM-PU-IC2 AND
                  CIP-COD-ATRN IN CIP NOT = SPACES
                   PERFORM BUS-COR-CIP
                   GO TO FIN-FND-KEY.

           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM DEU-FIO-CIP.
           IF FIO-STAT-OKS
               MOVE CIP-STP-ITRN IN CIP TO SCR-UMOD.
           MOVE FIO-STAT TO PGM-STAT-CIP.

           IF NOT FIO-STAT-OKS
               GO TO FIN-FND-KEY.

           IF SCR-CMND = WCC-MOD OR WCC-ELI
               IF CIP-COD-ATRN IN CIP NOT = WCC-PGM-PU AND
                  CIP-COD-ATRN IN CIP NOT = WCC-PGM-PU-IC2 AND
                  CIP-COD-ATRN IN CIP NOT = SPACES
                   MOVE WCC-CERTIEMITI TO MSG-COD-MENS
                   MOVE WCC-DEU TO MSG-COD-SIST
                   PERFORM GET-MSG
                   MOVE MSG-GLS-DESC TO FRM-MEN1
                    SET FIO-STAT-ERR TO TRUE.

           GO TO EXT-FND-KEY.
      *>>>>
*% END
*% IF FIN_FND_KEY
      *<<<< FIN_FND_KEY
      *>>>>
*% END
*% IF INI_PUT_SCR
      *<<<< INI_PUT_SCR
           IF PGM-STAT-CIP-OKS
               MOVE CIP-STP-ITRN IN CIP TO SCR-UMOD.
      *>>>>
*% END
*% IF FIN_HBL_IKY
      *<<<< FIN_HBL_IKY
           IF FIO-PROG = WSS-NOM-PROG
             IF SCR-IND-ENG = WCC-S
               PERFORM HBL-KEY-IC2.
      *>>>>
*% END
*% IF EOF
      *<<<< EOF
       COPY TABBFCAM.

      *  CODIGO ADICIONAL PARA ENGANCHE PROGRAMAS
       ING-FPEN-CIC SECTION.
       INI-ING-FPEN-CIC.
           PERFORM ING-SETE.
           MOVE SCR-MENS-EXT TO IC2-GLS-MENS.
           PERFORM HBL-IKY.
      *PTC INI
           IF SCR-OFRM-SRV
               EXEC CICS
               RETURN
           END-EXEC.
      *PTC FIN
       FIN-ING-FPEN-CIC.
           EXIT.

       HBL-KEY-IC2 SECTION.
       INI-HBL-KEY-IC2.
           PERFORM SCR-CLRA-IC2.
           MOVE WCC-S4 TO CIP-CAI-ICER-LEN IN IC2-FLD.
           MOVE SCR-CAI-ICER IN SCR-VARI TO CIP-CAI-ICER IN IC2-FLD.
           MOVE SCR-IIC-ICER IN SCR-VARI TO CIP-IIC-ICER IN IC2-FLD.
           MOVE SCR-NUM-ICIP IN SCR-VARI TO CIP-NUM-ICIP IN IC2-FLD.
           MOVE SCR-CAI-ICER IN SCR-VARI TO CIP-CAI-ICER IN CIP.
           MOVE SCR-IIC-ICER IN SCR-VARI TO CIP-IIC-ICER IN CIP.
           MOVE SCR-NUM-ICIP IN SCR-VARI TO CIP-NUM-ICIP IN CIP.
           MOVE WCC-C1 TO FRM-CPIM-AEY.
           PERFORM HBL-FLD.
           MOVE SCR-INST-GFL TO SCR-INST.
           MOVE SCR-CAI-ICER IN SCR-VARI TO CIP-CAI-ICER IN IC2-FLD.
           MOVE SCR-IIC-ICER IN SCR-VARI TO CIP-IIC-ICER IN IC2-FLD.
           MOVE SCR-NUM-ICIP IN SCR-VARI TO CIP-NUM-ICIP IN IC2-FLD.
           MOVE SCR-CAI-ICER IN SCR-VARI TO CIP-CAI-ICER IN CIP.
           MOVE SCR-IIC-ICER IN SCR-VARI TO CIP-IIC-ICER IN CIP.
           MOVE SCR-NUM-ICIP IN SCR-VARI TO CIP-NUM-ICIP IN CIP.
           PERFORM EDT-KEY-IC2.
           PERFORM EDT-FLD-IC2.
           PERFORM SCR-INIT.
           PERFORM STP-EXIT.
           PERFORM SCR-EXIT.
       FIN-HBL-KEY-IC2.
           EXIT.

       ING-SETE SECTION.
       INI-ING-SETE.

           MOVE WCC-DQ50 TO SCR-NTRN.
           MOVE WCC-PGM-PQ TO SCR-PROG.
           MOVE WCC-DEUFIC2 TO SCR-NMAP.
           MOVE WCC-DEUAIC2 TO SCR-NLIB.
           MOVE WCC-DU50 TO SCR-NTRV.
           MOVE WCC-PGM-PU TO SCR-PROV.

       FIN-ING-SETE.
           EXIT.

       SCR-INIT SECTION.                                                
       INI-SCR-INIT.                                                    
           MOVE WCC-N3  TO FRM-PLIN.                                    
           MOVE WCC-N19 TO FRM-NLIN.                                    
           MOVE FRM-CLR-FRM TO FRM-CMND.                                
           PERFORM GNS-PRO-FRM.                                         
           MOVE FRM-SINI-DBNF TO FRM-SINI.                              
           MOVE SCR-NMAP TO FRM-NAME.                                   
           MOVE SCR-NLIB TO FRM-NLIB.                                   
           MOVE IC2-FLD TO FRM-DFLD.                                    
           MOVE FRM-INI TO FRM-CMND.                                    
           PERFORM GNS-PRO-FRM.                                         
       FIN-SCR-INIT.                                                    
           EXIT. 
*% IF PGM_PQ                                                       
      *<<<< EOF_PQ
       BUS-COR-CIP SECTION.
       INI-BUS-COR-CIP.
           MOVE WCC-999 TO CIP-NUM-ICIP IN CIP.
           MOVE FIO-GET-LEQ TO FIO-CMND.
           PERFORM DEU-FIO-CIP.
           IF NOT (FIO-STAT-OKS AND
              CIP-CAI-ICER IN IC2-FLD = CIP-CAI-ICER IN CIP AND
              CIP-IIC-ICER IN IC2-FLD = CIP-IIC-ICER IN CIP)
               PERFORM KEY-ALL-IC2
               MOVE ZEROES TO CIP-NUM-ICIP IN CIP
               MOVE WCC-S TO SCR-IERR
               MOVE WCC-CIPNOEXISTE TO MSG-COD-MENS
               MOVE WCC-DEU TO MSG-COD-SIST
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS
               GO TO FIN-BUS-COR-CIP.

           IF CIP-NUM-ICIP IN CIP = WCC-1 AND
              CIP-IND-DUSO IN CIP = WCC-I
               MOVE CIP-NUM-ICIP IN CIP TO CIP-NUM-ICIP IN IC2-FLD
               MOVE WCC-14 TO FIO-STAT
               GO TO FIN-BUS-COR-CIP.

           IF SCR-CMND = WCC-MOD OR WCC-ELI OR SCR-CMND = WCC-ING
               IF CIP-COD-ATRN IN CIP NOT = WCC-PGM-PU AND
                  CIP-COD-ATRN IN CIP NOT = WCC-PGM-PU-IC2 AND
                  CIP-COD-ATRN IN CIP NOT = SPACES
                   MOVE WCC-CERTIEMITI TO MSG-COD-MENS
                   MOVE WCC-DEU TO MSG-COD-SIST
                   PERFORM GET-MSG
                   MOVE MSG-GLS-DESC TO FRM-MEN1
                   MOVE ZEROES TO FIO-STAT
                   GO TO FIN-BUS-COR-CIP.

           COMPUTE CIP-NUM-ICIP IN IC2-FLD = WCC-1 +
                                                 CIP-NUM-ICIP IN CIP.
           ADD WCC-1 TO CIP-NUM-ICIP IN CIP.

           MOVE WCC-14 TO FIO-STAT.

       FIN-BUS-COR-CIP.
           EXIT.
*% END
*% IF PGM_PU

      *----------------------------------------------------------------
       MAN-LLA-IC2 SECTION.
       INI-MAN-LLA-IC2.
           MOVE SCR-MENS-EXT TO IC2-GLS-MENS.
           PERFORM PRO-FLD-IC2.
           PERFORM PRO-MKY-IC2.
           PERFORM SCR-CLRA-IC2.
           MOVE CIP-CAI-ICER IN CIP TO CIP-CAI-ICER IN IC2-FLD.
           MOVE CIP-IIC-ICER IN CIP TO CIP-IIC-ICER IN IC2-FLD.
           COMPUTE CIP-NUM-ICIP IN IC2-FLD =
                                   CIP-NUM-ICIP IN CIP + WCC-1.
           MOVE WCC-S4 TO CIP-CAI-ICER-LEN IN IC2-FLD.
           MOVE WCC-C1 TO FRM-CPIM-AEY.
           PERFORM HBL-FLD.
           MOVE SCR-INST-GFL TO SCR-INST.
           MOVE CIP-CAI-ICER IN CIP TO CIP-CAI-ICER IN IC2-FLD.
           MOVE CIP-IIC-ICER IN CIP TO CIP-IIC-ICER IN IC2-FLD.
           COMPUTE CIP-NUM-ICIP IN IC2-FLD =
                                   CIP-NUM-ICIP IN CIP + WCC-1.
           MOVE CIP-NUM-ICIP IN IC2-FLD TO CIP-NUM-ICIP IN CIP.
           PERFORM EDT-KEY-IC2.
           PERFORM EDT-FLD-IC2.
           PERFORM SCR-INIT.
           MOVE SCR-PROG TO SCR-PROV.
           MOVE SCR-NTRN TO SCR-NTRV.
           PERFORM STP-EXIT.
           PERFORM SCR-EXIT.
       FIN-MAN-LLA-IC2.
      *----------------------------------------------------------------
      *<<<< EOF_PU
       BUS-INF-ENC SECTION.
       INI-BUS-INF-ENC.
           MOVE SPACES TO CIP.
           MOVE WCC-1 TO CIP-NUM-ICIP IN CIP.
           MOVE CIP-CAI-ICER IN IC2-FLD TO CIP-CAI-ICER IN CIP.
           MOVE CIP-IIC-ICER IN IC2-FLD TO CIP-IIC-ICER IN CIP.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM DEU-FIO-CIP.

           MOVE CIP-CIC-ICLI IN CIP TO WSS-CIC-ICLI IN WSS-VARI.
           MOVE CIP-NUM-ICLI IN CIP TO WSS-NUM-ICLI IN WSS-VARI.
           MOVE CIP-VRF-ICLI IN CIP TO WSS-VRF-ICLI IN WSS-VARI.
           MOVE CIP-IND-ICLI IN CIP TO WSS-IND-ICLI IN WSS-VARI.
           MOVE CIP-GLS-ICLI IN CIP TO WSS-GLS-ICLI IN WSS-VARI.
           MOVE CIP-GLS-NOMC IN CIP TO WSS-GLS-NOMC IN WSS-VARI.
           MOVE CIP-FEC-FVIG IN CIP TO WSS-FEC-FVIG IN WSS-VARI.
           MOVE CIP-FEC-FEMI IN CIP TO WSS-FEC-FEMI IN WSS-VARI.
           MOVE CIP-COD-IEMI IN CIP TO WSS-COD-IEMI IN WSS-VARI.
           MOVE CIP-COD-ICIE IN CIP TO WSS-COD-ICIE IN WSS-VARI.
           MOVE CIP-FEC-FLIQ IN CIP TO WSS-FEC-FLIQ IN WSS-VARI.
           MOVE CIP-COD-OPCO IN CIP TO WSS-COD-OPCO IN WSS-VARI.
           MOVE CIP-COD-MONE IN CIP TO WSS-COD-MONE IN WSS-VARI.
           MOVE CIP-CAI-IORI IN CIP TO WSS-CAI-IORI IN WSS-VARI.
           MOVE CIP-IIC-IORI IN CIP TO WSS-IIC-IORI IN WSS-VARI.
           MOVE CIP-VAL-MCRE IN CIP TO WSS-SGV-MORI IN WSS-VARI.
           MOVE CIP-VAL-3475 IN CIP TO WSS-VAL-3475 IN WSS-VARI.
           MOVE CIP-VAL-TPAG IN CIP TO WSS-VAL-TPAG IN WSS-VARI.
           MOVE CIP-IND-DUSO IN CIP TO WSS-IND-DUSO IN WSS-VARI.

       FIN-BUS-INF-ENC.
           EXIT.

       MOV-VARI-CIP SECTION.
       INI-MOV-VARI-CIP.
           MOVE WSS-CIC-ICLI IN WSS-VARI TO CIP-CIC-ICLI IN CIP.
           MOVE WSS-NUM-ICLI IN WSS-VARI TO CIP-NUM-ICLI IN CIP.
           MOVE WSS-VRF-ICLI IN WSS-VARI TO CIP-VRF-ICLI IN CIP
           MOVE WSS-IND-ICLI IN WSS-VARI TO CIP-IND-ICLI IN CIP.
           MOVE WSS-GLS-ICLI IN WSS-VARI TO CIP-GLS-ICLI IN CIP.
           MOVE WSS-GLS-NOMC IN WSS-VARI TO CIP-GLS-NOMC IN CIP.
           MOVE WSS-FEC-FVIG IN WSS-VARI TO CIP-FEC-FVIG IN CIP.
           MOVE WSS-FEC-FEMI IN WSS-VARI TO CIP-FEC-FEMI IN CIP.
           MOVE WSS-COD-IEMI IN WSS-VARI TO CIP-COD-IEMI IN CIP.
           MOVE WSS-COD-ICIE IN WSS-VARI TO CIP-COD-ICIE IN CIP.
           MOVE WSS-FEC-FLIQ IN WSS-VARI TO CIP-FEC-FLIQ IN CIP.
           MOVE WSS-COD-OPCO IN WSS-VARI TO CIP-COD-OPCO IN CIP.
           MOVE WSS-COD-MONE IN WSS-VARI TO CIP-COD-MONE IN CIP.
           MOVE WSS-COD-MONE IN WSS-VARI TO CIP-COD-VCOC IN CIP.
           MOVE WSS-CAI-IORI IN WSS-VARI TO CIP-CAI-IORI IN CIP.
           MOVE WSS-IIC-IORI IN WSS-VARI TO CIP-IIC-IORI IN CIP.
           MOVE WSS-SGV-MORI IN WSS-VARI TO CIP-VAL-MCRE IN CIP.
           MOVE WSS-VAL-3475 IN WSS-VARI TO CIP-VAL-3475 IN CIP.
           MOVE WSS-VAL-TPAG IN WSS-VARI TO CIP-VAL-TPAG IN CIP.
           MOVE WSS-IND-DUSO IN WSS-VARI TO CIP-IND-DUSO IN CIP.
       FIN-MOV-VARI-CIP.
           EXIT.

       MOV-VLR-DEFE SECTION.
       INI-MOV-VLR-DEFE.
           MOVE SPACES TO CIP-CIC-IOPC IN CIP.
           MOVE SPACES TO CIP-COD-EVEN IN CIP.
           MOVE ZEROES TO CIP-NUM-ICAN IN CIP.
           MOVE SPACES TO CIP-COD-CPTO IN CIP.
           MOVE ZEROES TO CIP-NUM-CPTO IN CIP.
           MOVE ZEROES TO CIP-FEC-FTRN IN CIP.
           MOVE ZEROES TO CIP-HRA-HRTR IN CIP.
           MOVE SPACES TO CIP-MSC-TACC IN CIP.
           MOVE SPACES TO CIP-COD-OTRN IN CIP.
           MOVE SPACES TO CIP-CIC-IORI IN CIP.
           MOVE ZEROES TO CIP-FEC-FINI IN CIP.
           MOVE ZEROES TO CIP-SGV-TUNI IN CIP.
           MOVE ZEROES TO CIP-SGV-TINT IN CIP.
           MOVE ZEROES TO CIP-VAL-CTRA IN CIP.
           MOVE ZEROES TO CIP-FEC-FTER IN CIP.
           MOVE ZEROES TO CIP-FEC-FMAV IN CIP.
           MOVE ZEROES TO CIP-FEC-FCOL IN CIP.
           MOVE ZEROES TO CIP-NUM-IVEN IN CIP.
           MOVE ZEROES TO CIP-SGV-CUOT IN CIP.
           MOVE SPACES TO CIP-IND-CXE1 IN CIP.
           MOVE ZEROES TO CIP-NUM-CPRO IN CIP.
           MOVE SPACES TO CIP-CIC-ORIG IN CIP.
           MOVE SPACES TO CIP-COD-TIPO IN CIP.
           MOVE ZEROES TO CIP-NUM-PTRM IN CIP.
           MOVE ZEROES TO CIP-FEC-FORI IN CIP.
           MOVE ZEROES TO CIP-SGV-TOPE IN CIP.
           MOVE ZEROES TO CIP-SGV-TACU IN CIP.
           MOVE ZEROES TO CIP-NUM-FOLI IN CIP.
           MOVE SPACES TO CIP-GLS-NORM IN CIP.
           MOVE ZEROES TO CIP-NUM-PDES IN CIP.
           MOVE ZEROES TO CIP-SGV-VDES IN CIP.
      *    MOVE SPACES TO CIP-COD-VCOC IN CIP.
           MOVE SPACES TO CIP-COD-ITRU IN CIP.
           MOVE SPACES TO CIP-COD-TDOC IN CIP.
           MOVE SPACES TO CIP-MSC-TIMP IN CIP.
           MOVE ZEROES TO CIP-VAL-CAMO IN CIP.
           MOVE ZEROES TO CIP-VAL-INTN IN CIP.
           MOVE ZEROES TO CIP-VAL-CPRE IN CIP.
           MOVE ZEROES TO CIP-VAL-CFOG IN CIP.
           MOVE ZEROES TO CIP-VAL-CMOR IN CIP.
           MOVE SPACES TO CIP-GLS-DISP IN CIP.
           MOVE ZEROES TO CIP-VAL-MCRE IN CIP.
           MOVE ZEROES TO CIP-VAL-SIMO IN CIP.
           MOVE ZEROES TO CIP-SGV-TINT IN CIP.
       FIN-MOV-VLR-DEFE.
           EXIT.
      *>>>>
*% END
      *>>>>
*% END
*% IF INI_CMN_MOD
      *<<<< INI_CMN_MOD
           PERFORM KEY-ALL-IC2.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM DEU-FIO-CIP.
           IF CIP-IND-DUSO IN CIP = WCC-S
               MOVE WCC-DEU TO MSG-COD-SIST
               MOVE WCC-CERTIENUSO TO MSG-COD-MENS
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS
               GO TO FIN-CMN-MOD.

           PERFORM KEY-ALL-IC2.
           MOVE FIO-GET-KEY-UPD TO FIO-CMND.
           PERFORM DEU-FIO-CIP.
           IF FIO-STAT-OKS AND
              CIP-STP-ITRN IN CIP NOT = SCR-UMOD
               MOVE FIO-ULK-REC TO FIO-CMND
               PERFORM DEU-FIO-CIP
               MOVE FIO-BCK-OUT TO FIO-CMND
               PERFORM DEU-FIO-CIP
               MOVE 'GNS' TO MSG-COD-SIST
               MOVE 'GNSACCSSIMUL' TO MSG-COD-MENS
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS
               GO TO FIN-CMN-MOD.
           IF NOT FIO-STAT-OKS
               GO TO FIN-CMN-MOD.
           PERFORM RET-STT-CIP.
           PERFORM RET-ALL-IC2.
           PERFORM RET-HDR-CIP.
           MOVE WCC-PGM-PU TO CIP-COD-ATRN IN CIP.
           MOVE FIO-MOD TO FIO-CMND.
           PERFORM DEU-FIO-CIP.
               GO TO FIN-CMN-MOD.
      *>>>>
*% END
*% IF INI_CMN_ING
      *<<<< INI_CMN_ING
           PERFORM KEY-ALL-IC2.
           MOVE WCC-1 TO CIP-NUM-ICIP IN CIP.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM DEU-FIO-CIP.
           IF CIP-IND-DUSO IN CIP = WCC-S
               MOVE WCC-DEU TO MSG-COD-SIST
               MOVE WCC-CERTIENUSO TO MSG-COD-MENS
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS
               GO TO FIN-CMN-ING.
           GO TO ING-PRM-REG.
           MOVE SPACES TO CIP.
      *>>>>
*% END
*% IF FIN_CMN_ING
      *<<<< FIN_CMN_ING
       ING-PRM-REG.
           PERFORM RET-STT-CIP.
           PERFORM RET-ALL-IC2.
           PERFORM RET-HDR-CIP.
           IF CIP-NUM-ICIP IN IC2-FLD = WCC-1
               MOVE FIO-GET-KEY-UPD TO FIO-CMND
               PERFORM DEU-FIO-CIP
               PERFORM RET-ALL-IC2
      *AFRI-INI 06-AGO-2014 CORREGIR INGRESO
               MOVE WCC-PGM-PU TO CIP-COD-ATRN IN CIP
      *AFRI-FIN 06-AGO-2014 CORREGIR INGRESO
               MOVE FIO-MOD TO FIO-CMND
               PERFORM DEU-FIO-CIP
           ELSE
               PERFORM BUS-INF-ENC
               MOVE SPACES TO CIP
               PERFORM MOV-VLR-DEFE
               PERFORM MOV-VARI-CIP
               PERFORM RET-ALL-IC2
      *AFRI-INI 06-AGO-2014 CORREGIR INGRESO
               MOVE WCC-PGM-PU TO CIP-COD-ATRN IN CIP
      *AFRI-FIN 06-AGO-2014 CORREGIR INGRESO
               MOVE FIO-PUT TO FIO-CMND
               PERFORM DEU-FIO-CIP.
           IF FIO-STAT-OKS
               PERFORM MAN-LLA-IC2.
      *>>>>
*% END
*% IF INI_CMN_ELI
      *<<<< INI_CMN_ELI
           PERFORM KEY-ALL-IC2.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM DEU-FIO-CIP.
           IF CIP-IND-DUSO IN CIP = WCC-S
               MOVE WCC-DEU TO MSG-COD-SIST
               MOVE WCC-CERTIENUSO TO MSG-COD-MENS
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS
               GO TO FIN-CMN-ELI.
      *>>>>
*% END
