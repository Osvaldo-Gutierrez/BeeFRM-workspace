       CAL-DEU SECTION.
       INI-CAL-DEU.
           PERFORM BUS-RDC.
           IF DEU-STAT NOT = DEU-STAT-OKS
               GO TO FIN-CAL-DEU.
      *    IF DEU-DDIR = DEU-DDIR-YES
               PERFORM BUS-COM
               IF DEU-STAT NOT = DEU-STAT-OKS
                   GO TO FIN-CAL-DEU.
           PERFORM BUS-FIA.
           IF DEU-STAT NOT = DEU-STAT-OKS
               GO TO FIN-CAL-DEU.
           IF DEU-DFIA = DEU-DFIA-YES OR DEU-DCOM = DEU-DCOM-YES
               PERFORM CAL-FYC
               IF DEU-STAT NOT = DEU-STAT-OKS
                   GO TO FIN-CAL-DEU.
           PERFORM SRT-RDE.
       FIN-CAL-DEU.
           EXIT.
       BUS-RDC SECTION.
       INI-BUS-RDC.
           MOVE ZERO TO DEU-IMAX
                        DEU-RMAX.
           MOVE 1    TO DEU-LMAX.
           MOVE DEU-STAT-OKS TO DEU-STAT.
           MOVE DEU-CIC-ICLI TO AUX-CIC-ICLI IN DEU(DEU-LMAX).
           MOVE SPACES TO DEU-TIPD
      *                   DEU-DDIR
                          DEU-DFIA
                          DEU-HFIA
                          DEU-DCOM.
           PERFORM PUT-RDC.
       FIN-BUS-RDC.
           EXIT.
       PUT-RDC SECTION.
       INI-PUT-RDC.
           MOVE AUX-CIC-ICLI IN DEU(DEU-LMAX) TO
                RDC-CIC-ICLI IN RDC.
           MOVE SPACES TO RDC-KEY-IDLC IN RDC.
           MOVE FIO-GET-NLS TO FIO-CMND.
       LUP-PUT-RDC.
           PERFORM COL-FIO-RDC.
           IF NOT ( FIO-STAT-OKS AND
                    RDC-CIC-ICLI IN RDC = AUX-CIC-ICLI IN DEU(DEU-LMAX))
               GO TO FIN-PUT-RDC.
           IF RDC-NUM-IDLC IN RDC = ZEROES
                   PERFORM PUT-DIR
           ELSE
                   PERFORM PUT-IND.
           IF DEU-STAT NOT = DEU-STAT-OKS
               GO TO FIN-PUT-RDC.
           MOVE FIO-GET-NXT TO FIO-CMND.
           GO TO LUP-PUT-RDC.
       FIN-PUT-RDC.
           EXIT.
       PUT-DIR SECTION.
       INI-PUT-DIR.
           MOVE RDC-CIC-IOPC IN RDC TO OPC-CIC-IOPC IN OPC.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM COL-FIO-OPC.
           IF NOT FIO-STAT-OKS
               MOVE 'RDCOPC NOCON'      TO DEU-STAT
               MOVE OPC-CIC-IOPC IN OPC TO DEU-MEN2
               GO TO FIN-PUT-DIR.
           IF ( DEU-FPRO-REA AND
                DEU-FEC-FPRO < OPC-FEC-FCOL IN OPC ) OR
              ( DEU-FPRO-CMP AND
                DEU-FEC-FPRO < OPC-FEC-FINP IN OPC ) OR
              ( OPC-MSC-STAT IN OPC NOT = 'A')       OR
              ( OPC-VAL-SCRE IN OPC NOT > 0 )
      *       ( OPC-VAL-SCRE IN OPC NOT > 0 AND
      *       ( OPC-MSC-?    IN OPC = ?     OR
      *         OPC-MSC-?    IN OPC = SPACES
      *         OPC-MSC-?    IN OPC = ? ))
               MOVE DEU-PUT-NOT TO DEU-PUT
               GO TO FIN-PUT-DIR.
      *DAD ini  20-NOV-1992
      *     IF OPC-COD-VCOC IN OPC NOT = DEU-COD-VCAM
           IF OPC-COD-VCOC IN OPC NOT = CAM-COD-MNAC
      *DAD fin  20-NOV-1992
               MOVE OPC-COD-VCOC IN OPC TO CAM-COD-VCAM IN CAM(1)
               PERFORM GET-CAM
               IF NOT FIO-STAT-OKS OR CAM-IND-VIGE = 'N'
                   MOVE 'CODVCAMOPCNE'      TO DEU-STAT
                   MOVE OPC-COD-VCOC IN OPC TO DEU-MEN2
                   GO TO FIN-PUT-DIR.
           MOVE OPC-CIC-IOPC IN OPC TO DLC-CIC-IOPC IN DLC.
           MOVE ZEROES              TO DLC-NUM-IDLC IN DLC.
           MOVE FIO-GET-NLS TO FIO-CMND.
           PERFORM COL-FIO-DLC.
           IF NOT ( FIO-STAT-OKS AND
                    DLC-CIC-IOPC IN DLC = OPC-CIC-IOPC IN OPC )
               MOVE 'OPCDLC NOCON'      TO DEU-STAT
               MOVE OPC-CIC-IOPC IN OPC TO DEU-MEN2
               GO TO FIN-PUT-DIR.
      *    MOVE DEU-DDIR-YES TO DEU-DDIR.
           MOVE DEU-PUT-YES  TO DEU-PUT.
           MOVE DEU-TIPD-DIR TO DEU-TIPD.
       LUP-PUT-DIR.
           MOVE ZEROES TO DEU-VAL-SRDT IN DEU.
           MOVE DLC-CAI-IOPC IN DLC TO RDT-CAI-IOPC IN RDT.
           MOVE DLC-IIC-IOPC IN DLC TO RDT-IIC-IOPC IN RDT.
           MOVE DLC-NUM-IDLC IN DLC TO RDT-NUM-IDLC IN RDT.
           MOVE SPACES              TO RDT-IND-SCTB IN RDT.
           MOVE FIO-GET-NLS         TO FIO-CMND.
       NXT-PUT-DIR.
           PERFORM COL-FIO-RDT.
           IF FIO-STAT-OKS AND
              DLC-CAI-IOPC IN DLC = RDT-CAI-IOPC IN RDT AND
              DLC-IIC-IOPC IN DLC = RDT-IIC-IOPC IN RDT AND
              DLC-NUM-IDLC IN DLC = RDT-NUM-IDLC IN RDT
               MOVE 'RDT    SI' TO DEU-STAT
           ELSE
               MOVE SPACES TO DEU-STAT.
           PERFORM PUT-DLC.
           IF NOT (DEU-STAT = DEU-STAT-OKS OR
              DEU-STAT = 'RDT    SI')
               IF DEU-STAT = 'RDT    NO'
                   MOVE SPACES TO DEU-STAT
                   GO TO CON-PUT-DIR
               ELSE
                   GO TO FIN-PUT-DIR.
           IF RDC-CIC-ICLI IN RDC = DEU-CIC-ICLI
               PERFORM PUT-RDE
               IF NOT (DEU-STAT = DEU-STAT-OKS OR
                  DEU-STAT = 'RDT    SI')
                  GO TO FIN-PUT-DIR
               ELSE
                   IF DEU-STAT = 'RDT    SI'
                       MOVE FIO-GET-NXT TO FIO-CMND
                       GO TO NXT-PUT-DIR.
           IF DEU-STAT = 'RDT    SI'
               MOVE FIO-GET-NXT TO FIO-CMND
               GO TO NXT-PUT-DIR.
       CON-PUT-DIR.
           MOVE FIO-GET-NXT TO FIO-CMND.
           PERFORM COL-FIO-DLC.
           IF FIO-STAT-OKS AND DLC-CIC-IOPC IN DLC = RDC-CIC-IOPC IN RDC
               GO TO LUP-PUT-DIR.
       FIN-PUT-DIR.
           EXIT.
       PUT-IND SECTION.
       INI-PUT-IND.
           IF RDC-CIC-IOPC IN RDC = OPC-CIC-IOPC IN OPC
               IF DEU-PUT  = DEU-PUT-YES
                   GO TO YES-PUT-IND
               ELSE
                   GO TO FIN-PUT-IND.
           MOVE RDC-CIC-IOPC IN RDC TO OPC-CIC-IOPC IN OPC.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM COL-FIO-OPC.
           IF NOT FIO-STAT-OKS
               MOVE 'RDCOPC NOCON'      TO DEU-STAT
               MOVE OPC-CIC-IOPC IN OPC TO DEU-MEN2
               GO TO FIN-PUT-IND.
           IF ( DEU-FPRO-REA AND
                DEU-FEC-FPRO < OPC-FEC-FCOL IN OPC ) OR
              ( DEU-FPRO-CMP AND
                DEU-FEC-FPRO < OPC-FEC-FINP IN OPC ) OR
              ( OPC-MSC-STAT IN OPC NOT = 'A')       OR
              ( OPC-VAL-SCRE IN OPC NOT > 0 )
      *       ( OPC-VAL-SCRE IN OPC NOT > 0 AND
      *       ( OPC-MSC-?    IN OPC = ?     OR
      *         OPC-MSC-?    IN OPC = SPACES
      *         OPC-MSC-?    IN OPC = ? ))
               MOVE DEU-PUT-NOT TO DEU-PUT
               GO TO FIN-PUT-IND.
       YES-PUT-IND.
      *DAD ini  20-NOV-1992
      *     IF OPC-COD-VCOC IN OPC NOT = DEU-COD-VCAM
           IF OPC-COD-VCOC IN OPC NOT = CAM-COD-MNAC
      *DAD fin  20-NOV-1992
               MOVE OPC-COD-VCOC IN OPC TO CAM-COD-VCAM IN CAM(1)
               PERFORM GET-CAM
               IF NOT FIO-STAT-OKS OR CAM-IND-VIGE = 'N'
                   MOVE 'CODVCAMOPCNE'      TO DEU-STAT
                   MOVE OPC-COD-VCOC IN OPC TO DEU-MEN2
                   GO TO FIN-PUT-IND.
           MOVE RDC-KEY-IDLC IN RDC TO DLC-KEY-IDLC IN DLC.
           MOVE FIO-GET-KEY  TO FIO-CMND.
           PERFORM COL-FIO-DLC.
           IF NOT FIO-STAT-OKS
               MOVE 'RDCDLC NOCON'      TO DEU-STAT
               MOVE DLC-KEY-IDLC IN DLC TO DEU-MEN2
               GO TO FIN-PUT-IND.
           MOVE DEU-PUT-YES  TO DEU-PUT.
           MOVE DEU-TIPD-IND TO DEU-TIPD.
           MOVE ZEROES TO DEU-VAL-SRDT IN DEU.
           MOVE DLC-CAI-IOPC IN DLC TO RDT-CAI-IOPC IN RDT.
           MOVE DLC-IIC-IOPC IN DLC TO RDT-IIC-IOPC IN RDT.
           MOVE DLC-NUM-IDLC IN DLC TO RDT-NUM-IDLC IN RDT.
           MOVE SPACES              TO RDT-IND-SCTB IN RDT.
           MOVE FIO-GET-NLS         TO FIO-CMND.
       LUP-PUT-IND.
           PERFORM COL-FIO-RDT.
           IF FIO-STAT-OKS AND
              DLC-CAI-IOPC IN DLC = RDT-CAI-IOPC IN RDT AND
              DLC-IIC-IOPC IN DLC = RDT-IIC-IOPC IN RDT AND
              DLC-NUM-IDLC IN DLC = RDT-NUM-IDLC IN RDT
               MOVE 'RDT    SI' TO DEU-STAT
           ELSE
               MOVE SPACES TO DEU-STAT.
           PERFORM PUT-DLC.
           IF NOT (DEU-STAT = DEU-STAT-OKS OR
              DEU-STAT = 'RDT    SI')
               IF DEU-STAT = 'RDT    NO'
                   MOVE SPACES TO DEU-STAT
                   GO TO FIN-PUT-IND
               ELSE
                   GO TO FIN-PUT-IND.
           IF RDC-CIC-ICLI IN RDC = DEU-CIC-ICLI
               PERFORM PUT-RDE
               IF NOT (DEU-STAT = DEU-STAT-OKS OR
                  DEU-STAT = 'RDT    SI')
                  GO TO FIN-PUT-IND
              ELSE
                  IF DEU-STAT = 'RDT    SI'
                      MOVE FIO-GET-NXT TO FIO-CMND
                      GO TO LUP-PUT-IND.
           IF DEU-STAT = 'RDT    SI'
               MOVE FIO-GET-NXT TO FIO-CMND
               GO TO LUP-PUT-IND.
       FIN-PUT-IND.
           EXIT.
       PUT-DLC SECTION.
       INI-PUT-DLC.
           ADD 1 TO DEU-IMAX.
           IF DEU-IMAX > DEU-MAX-IMAX
               MOVE 'MAXRDC OVRFL' TO DEU-STAT
               MOVE DEU-MAX-IMAX   TO DEU-MEN2
               GO TO FIN-PUT-DLC.
           IF DEU-STAT = 'RDT    SI'
               MOVE RDT-IND-SCTB IN RDT TO
                              DLC-IND-SCTB IN DEU(DEU-IMAX)
               MOVE RDT-VAL-SRDT IN RDT TO DEU-VAL-SDLC IN DEU
               ADD  RDT-VAL-SRDT IN RDT TO DEU-VAL-SRDT IN DEU
           ELSE
               MOVE SPACES TO DEU-STAT
               SUBTRACT DEU-VAL-SRDT IN DEU FROM DLC-VAL-SDLC IN DLC
                        GIVING DEU-VAL-SDLC IN DEU
               IF DEU-VAL-SDLC IN DEU NOT > ZEROES
                   MOVE 'RDT    NO' TO DEU-STAT
                   SUBTRACT 1 FROM DEU-IMAX
                   GO TO FIN-PUT-DLC
               ELSE
                   IF DLC-IND-SCTB IN DLC = 'MUL'
                       MOVE SPACES TO DLC-IND-SCTB IN DEU(DEU-IMAX)
                   ELSE
                       MOVE DLC-IND-SCTB IN DLC TO
                                 DLC-IND-SCTB IN DEU(DEU-IMAX).
           MOVE RDC-CIC-ICLI IN RDC TO RDC-CIC-ICLI IN DEU(DEU-IMAX).
           MOVE DLC-KEY-IDLC IN DLC TO DLC-KEY-IDLC IN DEU(DEU-IMAX).
           MOVE DEU-TIPD            TO RDC-IND-TDEU IN DEU(DEU-IMAX).
           MOVE RDC-VAL-LIMD IN RDC TO RDC-VAL-LIMD IN DEU(DEU-IMAX).
           MOVE DLC-IND-SCRT IN DLC TO DLC-IND-SCRT IN DEU(DEU-IMAX).
           MOVE DLC-IND-SCBZ IN DLC TO DLC-IND-SCBZ IN DEU(DEU-IMAX).
           MOVE OPC-COD-COOC IN OPC TO OPC-COD-COOC IN DEU(DEU-IMAX).
           MOVE OPC-COD-VCOC IN OPC TO OPC-COD-VCOC IN DEU(DEU-IMAX).
           MOVE OPC-COD-OFOC IN OPC TO OPC-COD-OFOC IN DEU(DEU-IMAX).
           MOVE OPC-COD-CDOC IN OPC TO OPC-COD-CDOC IN DEU(DEU-IMAX).
           MOVE OPC-FEC-FCOL IN OPC TO OPC-FEC-FCOL IN DEU(DEU-IMAX).
           MOVE OPC-FEC-FINP IN OPC TO OPC-FEC-FINP IN DEU(DEU-IMAX).
           IF DEU-FPRO-REA
               MOVE OPC-FEC-FCOL IN OPC TO
                    RDC-FEC-FINI IN DEU(DEU-IMAX)
           ELSE
               MOVE OPC-FEC-FINP IN OPC TO
                    RDC-FEC-FINI IN DEU(DEU-IMAX).
           MOVE DLC-FEC-FMAV IN DLC TO DLC-FEC-FMAV IN DEU(DEU-IMAX).
      *    MOVE DLC-VAL-SDLC IN DLC TO DLC-VAL-SDLC IN DEU(DEU-IMAX).
           IF RDC-VAL-LIMD IN RDC = 100
               MOVE DEU-VAL-SDLC IN DEU TO
                    RDC-VAL-LDLC IN DEU(DEU-IMAX)
           ELSE
      *ALD/27-FEB-1990
      *         MULTIPLY DLC-VAL-SDLC IN DLC
      *               BY RDC-VAL-LIMD IN RDC
      *           GIVING RDC-VAL-LDLC IN DEU(DEU-IMAX) ROUNDED
      *         DIVIDE 100 INTO RDC-VAL-LDLC IN DEU(DEU-IMAX).
               DIVIDE 100 INTO DEU-VAL-SDLC IN DEU GIVING
                      RDC-VAL-LDLC IN DEU(DEU-IMAX) ROUNDED
               MULTIPLY RDC-VAL-LDLC IN DEU(DEU-IMAX)
                     BY RDC-VAL-LIMD IN RDC
                 GIVING RDC-VAL-LDLC IN DEU(DEU-IMAX) ROUNDED.
      *
      *DAD ini  20-NOV-1992
      *     IF OPC-COD-VCOC IN OPC = DEU-COD-VCAM
           IF OPC-COD-VCOC IN OPC = CAM-COD-MNAC
      *DAD fin  20-NOV-1992
      *        MOVE DLC-VAL-SDLC IN DEU(DEU-IMAX) TO
      *             DLC-VAL-SPES IN DEU(DEU-IMAX)
      *ALD
      *        MOVE RDC-VAL-LDLC IN DEU(DEU-IMAX) TO
      *             RDC-VAL-LPES IN DEU(DEU-IMAX)
               MOVE DLC-VAL-SDLC IN DLC           TO
                    RDC-VAL-LPES IN DEU(DEU-IMAX)
           ELSE
      *        MULTIPLY DLC-VAL-SDLC IN DEU(DEU-IMAX)
      *              BY CAM-SGV-VCAM IN CAM
      *          GIVING DLC-VAL-SPES IN DEU(DEU-IMAX) ROUNDED
      *ALD     MULTIPLY RDC-VAL-LDLC IN DEU(DEU-IMAX)
               MULTIPLY DLC-VAL-SDLC IN DLC
                     BY CAM-SGV-VCAM IN CAM
                 GIVING RDC-VAL-LPES IN DEU(DEU-IMAX) ROUNDED.
       FIN-PUT-DLC.
           EXIT.
       PUT-RDE SECTION.
       INI-PUT-RDE.
           PERFORM BUS-RDE VARYING DEU-R FROM 1 BY 1 UNTIL
               DEU-R > DEU-RMAX OR
                     ( DEU-TIPD = RDE-IND-TIPD IN DEU(DEU-R)
                   AND DLC-IND-SCRT IN DEU(DEU-IMAX) =
                       RDE-IND-SCRT IN DEU(DEU-R)
                   AND DLC-IND-SCTB IN DEU(DEU-IMAX) =
                       RDE-IND-SCTB IN DEU(DEU-R)
                   AND DLC-IND-SCBZ IN DEU(DEU-IMAX) =
                       RDE-IND-SCBZ IN DEU(DEU-R)
                   AND OPC-COD-COOC IN DEU(DEU-IMAX) =
                       RDE-COD-COCR IN DEU(DEU-R)
                   AND OPC-COD-VCOC IN DEU(DEU-IMAX) =
                       RDE-COD-VCCR IN DEU(DEU-R)).
      *ALD
      *            AND OPC-COD-OFOC IN DEU(DEU-IMAX) =
      *                RDE-COD-OFCR IN DEU(DEU-R)).
      *FIN-ALD
           IF DEU-R NOT > DEU-RMAX
               GO TO MOD-PUT-RDE.
           ADD 1 TO DEU-RMAX.
           IF DEU-RMAX > DEU-MAX-RMAX
               MOVE 'MAXRDE OVRFL' TO DEU-STAT
               MOVE DEU-MAX-RMAX   TO DEU-MEN2
               GO TO FIN-PUT-RDE.
           MOVE DEU-TIPD TO RDE-IND-TIPD IN DEU(DEU-RMAX).
           MOVE DLC-IND-SCRT IN DEU(DEU-IMAX) TO
                RDE-IND-SCRT IN DEU(DEU-RMAX).
           MOVE DLC-IND-SCTB IN DEU(DEU-IMAX) TO
                RDE-IND-SCTB IN DEU(DEU-RMAX).
           MOVE DLC-IND-SCBZ IN DEU(DEU-IMAX) TO
                RDE-IND-SCBZ IN DEU(DEU-RMAX).
           MOVE OPC-COD-COOC IN DEU(DEU-IMAX) TO
                RDE-COD-COCR IN DEU(DEU-RMAX).
           MOVE OPC-COD-VCOC IN DEU(DEU-IMAX) TO
                RDE-COD-VCCR IN DEU(DEU-RMAX).
           MOVE OPC-COD-OFOC IN DEU(DEU-IMAX) TO
                RDE-COD-OFCR IN DEU(DEU-RMAX).
           MOVE RDC-VAL-LDLC IN DEU(DEU-IMAX) TO
                RDE-VAL-DEUD IN DEU(DEU-RMAX).
           GO TO FIN-PUT-RDE.
       MOD-PUT-RDE.
           ADD  RDC-VAL-LDLC IN DEU(DEU-IMAX) TO
                RDE-VAL-DEUD IN DEU(DEU-R).
       FIN-PUT-RDE.
           EXIT.
       BUS-RDE SECTION.
       INI-BUS-RDE.
           EXIT.
       BUS-COM SECTION.
       INI-BUS-COM.
           MOVE SPACES          TO REC-KEY-IREC IN REC.
      *ALD
      *    MOVE DEU-CIC-ICLI    TO REC-CIC-ICLI IN REC.
           MOVE DEU-IIC-ICLI    TO REC-IIC-ICLI IN REC.
           MOVE REC-COD-DCOM    TO REC-COD-TREC IN REC.
           MOVE FIO-GET-NLS     TO FIO-CMND.
      *JSS-IBM
           MOVE 'N' TO REC-AUX-EBRW.
       LUP-BUS-COM.
           PERFORM SGC-FIO-REC.
      *JSS-IBM
           IF FIO-STAT-OKS
               MOVE 'S' TO REC-AUX-EBRW.
           IF NOT ( FIO-STAT-OKS AND
      *ALD          REC-CIC-ICLI IN REC = DEU-CIC-ICLI
                    REC-IIC-ICLI IN REC = DEU-IIC-ICLI
                AND REC-COD-TREC IN REC = REC-COD-DCOM )
               GO TO FIN-BUS-COM.
      *ALD
      *    IF ( DEU-FPRO-REA AND
      *       ( DEU-FEC-FPRO < REC-FEC-FINI IN REC ) OR
      *       ( DEU-FEC-FPRO > REC-FEC-FTER IN REC AND
      *                        REC-IND-VIGE = 'N' )) OR
      *       ( DEU-FPRO-CMP AND
      *       ( DEU-FEC-FPRO < REC-FEC-FINP IN REC ) OR
      *       ( DEU-FEC-FPRO > REC-FEC-FOUT IN REC AND
      *                        REC-IND-VIGE = 'N' )) OR
      *         REC-SGV-AREC IN REC NOT > 2
      *    IF ( DEU-FPRO-REA AND
      *       ( DEU-FEC-FPRO < REC-FEC-FINI IN REC )) OR
      *         REC-SGV-AREC IN REC NOT > 2
      * Parametrizar ?                    ^
      *    OR ( REC-MSC-STAT IN REC NOT = 'S' AND
      *         REC-MSC-STAT IN REC NOT = 'V' )
      *        GO TO NXT-BUS-COM.
           MOVE DEU-DCOM-YES TO DEU-DCOM.
           ADD 1 TO DEU-CMAX.
           IF DEU-CMAX > DEU-MAX-CMAX
               MOVE 'MAXCOM OVRFL' TO DEU-STAT
               MOVE DEU-MAX-CMAX   TO DEU-MEN2
               GO TO FIN-BUS-COM.
      *ALD
      *    MOVE REC-CIC-ICLI IN REC TO REC-CIC-ICLI IN DEU(DEU-CMAX).
           MOVE SPACES              TO REC-CAI-ICLI IN DEU(DEU-CMAX).
           MOVE REC-IIC-ICLI IN REC TO REC-IIC-ICLI IN DEU(DEU-CMAX).
      *
      *ALD
      *    MOVE REC-CIC-IREL IN REC TO REC-CIC-IREL IN DEU(DEU-CMAX).
           MOVE SPACES              TO REC-CAI-IREL IN DEU(DEU-CMAX).
           MOVE REC-IIC-IREL IN REC TO REC-IIC-IREL IN DEU(DEU-CMAX).
      *
           MOVE REC-SGV-AREC IN REC TO REC-SGV-AREC IN DEU(DEU-CMAX).
           PERFORM CHK-CLI VARYING DEU-L FROM 1 BY 1 UNTIL
               DEU-L > DEU-LMAX OR
               REC-IIC-IREL IN REC = AUX-IIC-ICLI IN DEU(DEU-L).
      *ALD
      *        REC-CIC-IREL IN REC = AUX-CIC-ICLI IN DEU(DEU-L).
           IF DEU-L NOT > DEU-LMAX
               GO TO NXT-BUS-COM.
           ADD 1 TO DEU-LMAX.
           IF DEU-LMAX > DEU-MAX-LMAX
               MOVE 'MAXDEU OVRFL' TO DEU-STAT
               MOVE DEU-MAX-LMAX   TO DEU-MEN2
               GO TO FIN-BUS-COM.
      *ALD
      *    MOVE REC-CIC-IREL IN REC TO AUX-CIC-ICLI(DEU-LMAX).
           MOVE SPACES              TO AUX-CAI-ICLI(DEU-LMAX).
           MOVE REC-IIC-IREL IN REC TO AUX-IIC-ICLI(DEU-LMAX).
      *
           PERFORM PUT-RDC.
           IF DEU-STAT NOT = DEU-STAT-OKS
               GO TO FIN-BUS-COM.
       NXT-BUS-COM.
           MOVE FIO-GET-NXT TO FIO-CMND.
           GO TO LUP-BUS-COM.
       FIN-BUS-COM.
      *JSS-IBM
           IF REC-AUX-EBRW = 'S'
               MOVE FIO-END-BRW TO FIO-CMND
               PERFORM SGC-FIO-REC.
       EXT-BUS-COM.
           EXIT.
       BUS-FIA SECTION.
       INI-BUS-FIA.
           MOVE ZERO TO DEU-JMAX
                        DEU-MMAX.
       LUP-BUS-FIA.
           ADD 1 DEU-MMAX GIVING DEU-MMIN.
           MOVE DEU-LMAX TO DEU-MMAX.
           IF DEU-MMIN NOT > DEU-MMAX
               PERFORM PUT-FIA VARYING DEU-M FROM DEU-MMIN
                   BY 1 UNTIL DEU-M > DEU-MMAX
               IF DEU-STAT = DEU-STAT-OKS
                   GO TO LUP-BUS-FIA.
       FIN-BUS-FIA.
           EXIT.
       PUT-FIA SECTION.
       INI-PUT-FIA.
           MOVE AUX-CIC-ICLI IN DEU(DEU-M) TO FIA-CIC-ICFS IN FIA.
           MOVE FIO-GET-NLS     TO FIO-CMND.
       LUP-PUT-FIA.
           MOVE 'FIA-CIC-ICFS'  TO FIO-AKEY.
           PERFORM DEU-FIO-FIA.
           IF NOT ( FIO-STAT-OKS AND
                    FIA-CIC-ICFS IN FIA = AUX-CIC-ICLI IN DEU(DEU-M))
               GO TO FIN-PUT-FIA.
      *FLB CST  6-JAN-1995
           MOVE 'TAB' TO FIO-SIST.
           MOVE 'TIO ' TO TAB-COD-TTAB IN TAB.
           MOVE FIA-COD-TOFS IN FIA TO TAB-COD-CTAB IN TAB.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM GNS-FIO-TAB.

      *JSS-IBM
           IF ( DEU-FPRO-REA AND
                DEU-FEC-FPRO        > FIA-FEC-FALZ IN FIA AND
                FIA-FEC-FALZ IN FIA > ZEROES ) OR
              ( DEU-FPRO-CMP AND
                DEU-FEC-FPRO        > FIA-FEC-FOUT IN FIA AND
                FIA-FEC-FOUT IN FIA > ZEROES )
           OR ( FIA-MSC-STAT IN FIA NOT = 'S' AND
                FIA-MSC-STAT IN FIA NOT = 'V' )
      *FLB CST  6-JAN-1995
           OR TAB-CIC-CTAB IN TAB = 'AVL'
               GO TO NXT-PUT-FIA.
           MOVE FIA-CIC-IESC IN FIA TO ESC-CIC-IESC IN ESC.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM DEU-FIO-ESC.
           IF NOT FIO-STAT-OKS
               MOVE 'FIAESC NOCON'      TO DEU-STAT
               MOVE ESC-CIC-IESC IN ESC TO DEU-MEN2
               MOVE DEU-MMAX            TO DEU-M
               GO TO FIN-PUT-FIA.
           IF ( DEU-FPRO-REA AND
                DEU-FEC-FPRO < ESC-FEC-FCTT IN ESC ) OR
              ( DEU-FPRO-CMP AND
                DEU-FEC-FPRO < ESC-FEC-FINP IN ESC )
      *     OR ( ESC-MSC-STAT IN ESC NOT = 'S' AND
      *          ESC-MSC-STAT IN ESC NOT = 'V' )
               GO TO NXT-PUT-FIA.
           IF FIA-CIC-ICFS IN FIA = DEU-CIC-ICLI
               MOVE DEU-DFIA-YES TO DEU-DFIA.
           MOVE DEU-HFIA-YES TO DEU-HFIA.
           ADD 1 TO DEU-JMAX.
           IF DEU-JMAX > DEU-MAX-JMAX
               MOVE 'MAXFIA OVRFL' TO DEU-STAT
               MOVE DEU-MAX-JMAX   TO DEU-MEN2
               GO TO FIN-BUS-FIA.
           MOVE FIA-KEY-IFIA IN FIA TO FIA-KEY-IFIA IN DEU(DEU-JMAX).
           MOVE FIA-GLS-ICYF IN FIA TO FIA-GLS-ICYF IN DEU(DEU-JMAX).
           IF FIA-VAL-LIMF IN FIA > ZEROES
               IF FIA-COD-VCLF IN FIA = CAM-COD-PORC
                   MOVE DEU-LIMI-PCT TO
                        FIA-COD-LIMF IN DEU(DEU-JMAX)
                   MOVE FIA-VAL-LIMF IN FIA TO
                        FIA-VAL-LIMF IN DEU(DEU-JMAX)
               ELSE
               MOVE DEU-LIMI-NCN TO FIA-COD-LIMF IN DEU(DEU-JMAX)
      *DAD ini  20-NOV-1992
      *         IF FIA-COD-VCLF IN FIA = DEU-COD-VCAM
               IF FIA-COD-VCLF IN FIA = CAM-COD-MNAC
      *DAD fin  20-NOV-1992
                   MOVE FIA-VAL-LIMF IN FIA TO
                        FIA-VAL-LIMF IN DEU(DEU-JMAX)
               ELSE
                   MOVE FIA-COD-VCLF IN FIA TO CAM-COD-VCAM IN CAM(1)
                   PERFORM GET-CAM
                   IF NOT FIO-STAT-OKS OR CAM-IND-VIGE = 'N'
                       MOVE 'CODVCAMFIANE'      TO DEU-STAT
                       MOVE FIA-COD-VCLF IN FIA TO DEU-MEN2
                       MOVE DEU-MMAX            TO DEU-M
                       GO TO FIN-PUT-FIA
                   ELSE
                       MULTIPLY FIA-VAL-LIMF IN FIA
                             BY CAM-SGV-VCAM IN CAM
                         GIVING FIA-VAL-LIMF IN DEU(DEU-JMAX) ROUNDED
           ELSE
               MOVE ZEROES TO FIA-VAL-LIMF IN DEU(DEU-JMAX).
           MOVE ZEROES TO FIA-VAL-DEUF IN DEU(DEU-JMAX).
           PERFORM PUT-AMF.
           IF DEU-STAT NOT = DEU-STAT-OKS
               MOVE DEU-MMAX TO DEU-M
               GO TO FIN-PUT-FIA.
           PERFORM CHK-CLI VARYING DEU-L FROM 1 BY 1 UNTIL
              DEU-L > DEU-LMAX OR
                      FIA-CIC-ICLI IN FIA = AUX-CIC-ICLI IN DEU(DEU-L).
           IF DEU-L NOT > DEU-LMAX
               GO TO NXT-PUT-FIA.
           ADD 1 TO DEU-LMAX.
           IF DEU-LMAX > DEU-MAX-LMAX
               MOVE 'MAXDEU OVRFL' TO DEU-STAT
               MOVE DEU-MAX-LMAX   TO DEU-MEN2
               GO TO FIN-PUT-FIA.
           MOVE FIA-CIC-ICLI IN FIA TO AUX-CIC-ICLI IN DEU(DEU-LMAX).
           PERFORM PUT-RDC.
           IF DEU-STAT NOT = DEU-STAT-OKS
               MOVE DEU-MMAX TO DEU-M
               GO TO FIN-PUT-FIA.
       NXT-PUT-FIA.
           MOVE 'FIA-CIC-ICFS' TO FIO-AKEY.
           MOVE FIO-GET-NXT TO FIO-CMND.
           GO TO LUP-PUT-FIA.
       FIN-PUT-FIA.
           EXIT.
       CHK-CLI SECTION.
       INI-CHK-CLI.
           EXIT.
       PUT-AMF SECTION.
       INI-PUT-AMF.
           MOVE ZERO TO DEU-KMAX(DEU-JMAX).
           MOVE FIA-KEY-IFIA IN FIA TO AMF-KEY-IFIA IN AMF.
           MOVE ZEROES              TO AMF-NUM-IAMF IN AMF.
           MOVE FIO-GET-NLS  TO FIO-CMND.
       LUP-PUT-AMF.
           PERFORM DEU-FIO-AMF.
           IF NOT ( FIO-STAT-OKS AND
                    FIA-KEY-IFIA IN FIA = AMF-KEY-IFIA IN AMF )
               GO TO FIN-PUT-AMF.
           ADD 1 TO DEU-KMAX(DEU-JMAX).
           IF DEU-KMAX(DEU-JMAX) > DEU-MAX-KMAX
               MOVE 'MAXAMF OVRFL' TO DEU-STAT
               MOVE DEU-MAX-KMAX   TO DEU-MEN2
               GO TO FIN-PUT-AMF.
           MOVE DEU-KMAX(DEU-JMAX)  TO DEU-K.
           MOVE AMF-CIC-IOCA IN AMF TO
                AMF-CIC-IOCA IN DEU(DEU-JMAX, DEU-K).
           MOVE AMF-COD-VCOA IN AMF TO
                AMF-COD-VCOA IN DEU(DEU-JMAX, DEU-K).
           MOVE AMF-COD-COOA IN AMF TO
                AMF-COD-COOA IN DEU(DEU-JMAX, DEU-K).
           MOVE AMF-COD-CDOA IN AMF TO
                AMF-COD-CDOA IN DEU(DEU-JMAX, DEU-K).
           MOVE AMF-IND-TDEU IN AMF TO
                AMF-IND-TDEU IN DEU(DEU-JMAX, DEU-K).
           IF AMF-VAL-LIMA IN AMF > ZEROES
               IF AMF-COD-VCLA IN AMF = CAM-COD-PORC
                   MOVE DEU-LIMI-PCT TO
                        AMF-COD-LIMA IN DEU(DEU-JMAX, DEU-K)
                   MOVE AMF-VAL-LIMA IN AMF TO
                        AMF-VAL-LIMA IN DEU(DEU-JMAX, DEU-K)
               ELSE
               MOVE DEU-LIMI-NCN TO
                    AMF-COD-LIMA IN DEU(DEU-JMAX, DEU-K)
      *DAD ini  20-NOV-1992
      *         IF AMF-COD-VCLA IN AMF = DEU-COD-VCAM
               IF AMF-COD-VCLA IN AMF = CAM-COD-MNAC
      *DAD fin  20-NOV-1992
                   MOVE AMF-VAL-LIMA IN AMF TO
                        AMF-VAL-LIMA IN DEU(DEU-JMAX, DEU-K)
               ELSE
                   MOVE AMF-COD-VCLA IN AMF TO CAM-COD-VCAM IN CAM(1)
                   PERFORM GET-CAM
                   IF NOT FIO-STAT-OKS OR CAM-IND-VIGE = 'N'
                       MOVE 'CODVCAMAMFNE'      TO DEU-STAT
                       MOVE AMF-COD-VCLA IN AMF TO DEU-MEN2
                       GO TO FIN-PUT-AMF
                   ELSE
                       MULTIPLY AMF-VAL-LIMA IN AMF
                             BY CAM-SGV-VCAM IN CAM
                         GIVING AMF-VAL-LIMA IN DEU(DEU-JMAX, DEU-K)
                         ROUNDED
           ELSE
               MOVE ZEROES TO AMF-VAL-LIMA IN DEU(DEU-JMAX, DEU-K).
           MOVE ZEROES TO AMF-VAL-DEUA IN DEU(DEU-JMAX, DEU-K).
           MOVE FIO-GET-NXT TO FIO-CMND.
           GO TO LUP-PUT-AMF.
       FIN-PUT-AMF.
           EXIT.
       CAL-FYC SECTION.
       INI-CAL-FYC.
           PERFORM INI-RDE.
           IF DEU-STAT NOT = DEU-STAT-OKS
               GO TO FIN-CAL-FYC.
      *    IF DEU-FIA-MTO
      *        PERFORM SRT-DLC.
           PERFORM SRT-RDC.
           PERFORM PRO-RDC VARYING DEU-I FROM 1 BY 1 UNTIL
               DEU-I > DEU-IMAX.
       FIN-CAL-FYC.
           EXIT.
       INI-RDE SECTION.
       INI-INI-RDE.
           IF DEU-DFIA = DEU-DFIA-YES
               MOVE DEU-TIPD-FIA TO DEU-TIPD
               PERFORM RST-RDE
               IF DEU-STAT NOT = DEU-STAT-OKS
                   GO TO FIN-INI-RDE
               ELSE
                   MOVE DEU-RMAX TO DEU-RFIA.
           IF DEU-DCOM = DEU-DCOM-YES
               MOVE DEU-TIPD-COM TO DEU-TIPD
               PERFORM RST-RDE
               IF DEU-STAT NOT = DEU-STAT-OKS
                   GO TO FIN-INI-RDE
               ELSE
                   MOVE DEU-RMAX TO DEU-RCOM.
       FIN-INI-RDE.
           EXIT.
       RST-RDE SECTION.
       INI-RST-RDE.
           ADD 1 TO DEU-RMAX.
           IF DEU-RMAX > DEU-MAX-RMAX
               MOVE 'MAXRDE OVRFL' TO DEU-STAT
               MOVE DEU-MAX-RMAX   TO DEU-MEN2
               GO TO FIN-RST-RDE.
           MOVE DEU-TIPD     TO RDE-IND-TIPD IN DEU(DEU-RMAX).
           MOVE SPACES       TO RDE-IND-SCRT IN DEU(DEU-RMAX)
                                RDE-IND-SCTB IN DEU(DEU-RMAX)
                                RDE-IND-SCBZ IN DEU(DEU-RMAX)
                                RDE-COD-COCR IN DEU(DEU-RMAX)
                                RDE-COD-VCCR IN DEU(DEU-RMAX)
                                RDE-COD-OFCR IN DEU(DEU-RMAX).
           MOVE ZEROES       TO RDE-VAL-DEUD IN DEU(DEU-RMAX).
       FIN-RST-RDE.
           EXIT.
       SRT-RDC SECTION.
       INI-SRT-RDC.
           SUBTRACT 1 FROM DEU-IMAX GIVING DEU-SMAX.
           PERFORM INC-RDC VARYING DEU-S FROM 1 BY 1
               UNTIL DEU-S > DEU-SMAX.
       FIN-SRT-RDC.
           EXIT.
       INC-RDC SECTION.
       INI-INC-RDC.
           ADD 1 DEU-S GIVING DEU-SMIN.
           PERFORM SWT-RDC VARYING DEU-SAUX FROM DEU-SMIN BY 1
               UNTIL DEU-SAUX > DEU-IMAX.
       FIN-INC-RDC.
           EXIT.
       SWT-RDC SECTION.
       INI-SWT-RDC.
           IF RDC-KEY-IRDC IN DEU(DEU-S) > RDC-KEY-IRDC IN DEU(DEU-SAUX)
               MOVE RDC-VEC-IRDC(DEU-S)    TO DEU-AUXI
               MOVE RDC-VEC-IRDC(DEU-SAUX) TO RDC-VEC-IRDC(DEU-S)
               MOVE DEU-AUXI               TO RDC-VEC-IRDC(DEU-SAUX).
       FIN-SWT-RDC.
           EXIT.
       PRO-RDC SECTION.
       INI-PRO-RDC.
           MOVE ZERO TO DEU-LMAX
                        DEU-MMAX.
           PERFORM PRO-DLC VARYING DEU-N FROM DEU-I BY 1 UNTIL
               DEU-N > DEU-IMAX OR DLC-KEY-IDLC IN DEU(DEU-N) NOT =
                                   DLC-KEY-IDLC IN DEU(DEU-I).
           SUBTRACT 1 FROM DEU-N GIVING DEU-I.
           IF DEU-HFIA NOT = DEU-HFIA-YES
               GO TO COM-PRO-RDC.
       FIA-PRO-RDC.
           ADD 1 DEU-MMAX GIVING DEU-MMIN.
           MOVE DEU-LMAX TO DEU-MMAX.
           IF DEU-MMIN NOT > DEU-MMAX
               PERFORM PRO-FIA VARYING DEU-M FROM DEU-MMIN
                   BY 1 UNTIL DEU-M > DEU-MMAX
               GO TO FIA-PRO-RDC.
       COM-PRO-RDC.
           IF DEU-DCOM = DEU-DCOM-YES
               MOVE DEU-LMAX TO DEU-MMAX
               PERFORM PRO-COM VARYING DEU-M FROM 1 BY 1 UNTIL
                   DEU-M > DEU-MMAX.
       FIN-PRO-RDC.
           EXIT.
       PRO-DLC SECTION.
       INI-PRO-DLC.
           ADD 1 TO DEU-LMAX.
           MOVE RDC-CIC-ICLI IN DEU(DEU-N) TO
                AUX-CIC-ICLI IN DEU(DEU-LMAX).
      *    MOVE RDC-VAL-LDLC IN DEU(DEU-N) TO
           MOVE RDC-VAL-LPES IN DEU(DEU-N) TO
                AUX-VAL-LDLC IN DEU(DEU-LMAX).
       FIN-PRO-DLC.
           EXIT.
       PRO-FIA SECTION.
       INI-PRO-FIA.
           MOVE ZERO TO DEU-J.
       LUP-PRO-FIA.
           ADD 1 TO DEU-J.
           PERFORM GET-FIA VARYING DEU-J FROM DEU-J BY 1 UNTIL
               DEU-J > DEU-JMAX OR
               AUX-CIC-ICLI IN DEU(DEU-M) = FIA-CIC-ICLI IN DEU(DEU-J).
           IF DEU-J > DEU-JMAX
               GO TO FIN-PRO-FIA.
           IF DEU-KMAX(DEU-J) > 0
               PERFORM CHK-AMF VARYING DEU-K FROM 1 BY 1 UNTIL
                                  DEU-K   >  DEU-KMAX(DEU-J) OR
               (( AMF-CIC-IOCA IN DEU(DEU-J, DEU-K) = SPACES OR
                  AMF-CIC-IOCA IN DEU(DEU-J, DEU-K) =
                  DLC-CIC-IOPC IN DEU(DEU-I))
            AND ( AMF-MSC-TVOA IN DEU(DEU-J, DEU-K) = SPACES OR
                  AMF-MSC-TVOA IN DEU(DEU-J, DEU-K) =
                  OPC-MSC-TVOC IN DEU(DEU-I))
            AND ( AMF-COD-CVOA IN DEU(DEU-J, DEU-K) = SPACES OR
                  AMF-COD-CVOA IN DEU(DEU-J, DEU-K) =
                  OPC-COD-CVOC IN DEU(DEU-I))
            AND ( AMF-COD-TCOA IN DEU(DEU-J, DEU-K) = SPACES OR
                  AMF-COD-TCOA IN DEU(DEU-J, DEU-K) =
                  OPC-COD-TCOC IN DEU(DEU-I))
            AND ( AMF-COD-TOOA IN DEU(DEU-J, DEU-K) = SPACES OR
                  AMF-COD-TOOA IN DEU(DEU-J, DEU-K) =
                  OPC-COD-TOOC IN DEU(DEU-I))
            AND ( AMF-COD-AOOA IN DEU(DEU-J, DEU-K) = SPACES OR
                  AMF-COD-AOOA IN DEU(DEU-J, DEU-K) =
                  OPC-COD-AOOC IN DEU(DEU-I))
            AND ( AMF-COD-CDOA IN DEU(DEU-J, DEU-K) = SPACES OR
                  AMF-COD-CDOA IN DEU(DEU-J, DEU-K) =
                  OPC-COD-CDOC IN DEU(DEU-I))
            AND ( AMF-IND-TDEU IN DEU(DEU-J, DEU-K) = SPACES OR
                  AMF-IND-TDEU IN DEU(DEU-J, DEU-K) =
                  RDC-IND-TDEU IN DEU(DEU-I)))
               IF DEU-K > DEU-KMAX(DEU-J)
                   GO TO LUP-PRO-FIA.
           IF FIA-COD-LIMF IN DEU(DEU-J)     = DEU-LIMI-PCT AND
              FIA-VAL-LIMF IN DEU(DEU-J) NOT = 100
      *ALD/27-FEB-1990 11:17:23
      *         MULTIPLY FIA-VAL-LIMF IN DEU(DEU-J) BY
      *                  AUX-VAL-LDLC IN DEU(DEU-M)
      *           GIVING DEU-VAL-VVEC ROUNDED
      *         DIVIDE 100 INTO DEU-VAL-VVEC ROUNDED
               DIVIDE 100 INTO AUX-VAL-LDLC IN DEU(DEU-M) GIVING
                      DEU-VAL-VVEC ROUNDED
               MULTIPLY FIA-VAL-LIMF IN DEU(DEU-J) BY
                        DEU-VAL-VVEC
                 GIVING DEU-VAL-VVEC ROUNDED
      *
           ELSE
               MOVE AUX-VAL-LDLC IN DEU(DEU-M) TO DEU-VAL-VVEC.
           MOVE DEU-VAL-VVEC TO DEU-VAL-DDEU.
           PERFORM CHK-CLI VARYING DEU-L FROM DEU-LMAX BY -1
               UNTIL DEU-L < 1 OR
               FIA-CIC-ICFS IN DEU(DEU-J) = AUX-CIC-ICLI IN DEU(DEU-L).
           IF DEU-L NOT < 1
               SUBTRACT AUX-VAL-LDLC IN DEU(DEU-L) FROM DEU-VAL-DDEU
               IF DEU-VAL-DDEU NOT > 0
                   GO TO LUP-PRO-FIA.
      * Esta incluido caso Fianza sin Limite ?
           IF FIA-COD-LIMF IN DEU(DEU-J) NOT = DEU-LIMI-PCT AND
              FIA-VAL-LIMF IN DEU(DEU-J) > ZEROES
               PERFORM GET-LIM
           ELSE
               MOVE ZERO TO DEU-VAL-DRLF.
           IF DEU-VAL-DDEU NOT > ZEROES
               GO TO LUP-PRO-FIA.
           ADD DEU-VAL-DDEU TO FIA-VAL-DEUF IN DEU(DEU-J).
           ADD 1 TO DEU-LMAX.
           MOVE FIA-CIC-ICFS IN DEU(DEU-J) TO
                AUX-CIC-ICLI IN DEU(DEU-LMAX).
           SUBTRACT DEU-VAL-DRLF FROM DEU-VAL-VVEC
             GIVING AUX-VAL-LDLC IN DEU(DEU-LMAX).
           IF AUX-CIC-ICLI IN DEU(DEU-LMAX) = DEU-CIC-ICLI
               ADD DEU-VAL-DDEU TO RDE-VAL-DEUD IN DEU(DEU-RFIA).
           GO TO LUP-PRO-FIA.
       FIN-PRO-FIA.
           EXIT.
       GET-FIA SECTION.
       INI-GET-FIA.
           EXIT.
       CHK-AMF SECTION.
       INI-CHK-AMF.
           EXIT.
       GET-LIM SECTION.
       INI-GET-LIM.
           SUBTRACT FIA-VAL-DEUF IN DEU(DEU-J) FROM
                    FIA-VAL-LIMF IN DEU(DEU-J)
             GIVING DEU-VAL-DDIF.
           IF DEU-VAL-DDIF NOT > ZERO
               MOVE DEU-VAL-DDEU TO DEU-VAL-DRLF
               MOVE ZERO         TO DEU-VAL-DDEU
           ELSE
           IF DEU-VAL-DDIF < DEU-VAL-DDEU
               SUBTRACT DEU-VAL-DDIF FROM DEU-VAL-DDEU
                 GIVING DEU-VAL-DRLF
               MOVE DEU-VAL-DDIF TO DEU-VAL-DDEU
           ELSE
               MOVE ZERO TO DEU-VAL-DRLF.
       FIN-GET-LIM.
           EXIT.
       PRO-COM SECTION.
       INI-PRO-COM.
           MOVE ZERO TO DEU-C.
       LUP-PRO-COM.
           ADD 1 TO DEU-C.
           PERFORM GET-COM VARYING DEU-C FROM DEU-C BY 1 UNTIL
               DEU-C > DEU-CMAX OR
               AUX-CIC-ICLI IN DEU(DEU-M) = REC-CIC-IREL IN DEU(DEU-C).
           IF DEU-C > DEU-CMAX
               GO TO FIN-PRO-COM.
           IF REC-SGV-AREC IN DEU(DEU-C) NOT > 50
      * Parametrizar ?                         ^
      *ALD/27-FEB-1990
      *         MULTIPLY REC-SGV-AREC IN DEU(DEU-C) BY
      *                  AUX-VAL-LDLC IN DEU(DEU-M)
      *           GIVING DEU-VAL-VVEC ROUNDED
      *         DIVIDE 100 INTO DEU-VAL-VVEC ROUNDED
               DIVIDE 100 INTO AUX-VAL-LDLC IN DEU(DEU-M) GIVING
                      DEU-VAL-VVEC ROUNDED
               MULTIPLY REC-SGV-AREC IN DEU(DEU-C) BY
                        DEU-VAL-VVEC
                 GIVING DEU-VAL-VVEC ROUNDED
      *
           ELSE
               MOVE AUX-VAL-LDLC IN DEU(DEU-M) TO DEU-VAL-VVEC.
           MOVE DEU-VAL-VVEC TO DEU-VAL-DDEU.
           PERFORM CHK-CLI VARYING DEU-L FROM DEU-LMAX BY -1
               UNTIL DEU-L < 1 OR
               REC-CIC-ICLI IN DEU(DEU-C) = AUX-CIC-ICLI IN DEU(DEU-L).
           IF DEU-L NOT < 1
               SUBTRACT AUX-VAL-LDLC IN DEU(DEU-L) FROM DEU-VAL-DDEU
               IF DEU-VAL-DDEU NOT > 0
                   GO TO LUP-PRO-COM.
           ADD 1 TO DEU-LMAX.
           MOVE REC-CIC-ICLI IN DEU(DEU-C) TO
                AUX-CIC-ICLI IN DEU(DEU-LMAX).
           MOVE DEU-VAL-VVEC TO AUX-VAL-LDLC IN DEU(DEU-LMAX).
           IF AUX-CIC-ICLI IN DEU(DEU-LMAX) = DEU-CIC-ICLI
               ADD DEU-VAL-DDEU TO RDE-VAL-DEUD IN DEU(DEU-RCOM).
           GO TO LUP-PRO-COM.
       FIN-PRO-COM.
           EXIT.
       GET-COM SECTION.
       INI-GET-COM.
           EXIT.
       SRT-RDE SECTION.
       INI-SRT-RDE.
           SUBTRACT 1 FROM DEU-RMAX GIVING DEU-SMAX.
           PERFORM INC-RDE VARYING DEU-S FROM 1 BY 1
               UNTIL DEU-S > DEU-SMAX.
       FIN-SRT-RDE.
           EXIT.
       INC-RDE SECTION.
       INI-INC-RDE.
           ADD 1 DEU-S GIVING DEU-SMIN.
           PERFORM SWT-RDE VARYING DEU-SAUX FROM DEU-SMIN BY 1
               UNTIL DEU-SAUX > DEU-RMAX.
       FIN-INC-RDE.
           EXIT.
       SWT-RDE SECTION.
       INI-SWT-RDE.
           IF RDE-KEY-IRDE IN DEU(DEU-S) > RDE-KEY-IRDE IN DEU(DEU-SAUX)
               MOVE RDE-VEC-IRDE(DEU-S)    TO DEU-AUXI
               MOVE RDE-VEC-IRDE(DEU-SAUX) TO RDE-VEC-IRDE(DEU-S)
               MOVE DEU-AUXI               TO RDE-VEC-IRDE(DEU-SAUX).
       FIN-SWT-RDE.
           EXIT.


