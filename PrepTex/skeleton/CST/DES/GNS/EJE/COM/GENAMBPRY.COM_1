$	@GNSCOM:MNUSYSLNM.COM
$ P1:
$	IF P1 .NES. "" THEN GOTO P2
$	IF F$MODE() .EQS. "BATCH" THEN EXIT
$	WRITE SYS$OUTPUT "--------------------------------------------------------------------------------"
$	WRITE SYS$OUTPUT "Ingrese codigo de proyecto con 3 caracteres"
$	INQUIRE P1 "Proyecto ? "
$	IF P1 .EQS. "" THEN EXIT
$ P2:
$	IF P2 .NES. "" THEN GOTO P3
$	IF F$MODE() .EQS. "BATCH" THEN GOTO P2BLK
$	WRITE SYS$OUTPUT "--------------------------------------------------------------------------------"
$	WRITE SYS$OUTPUT "Ingrese lenguaje para el Proyecto, asume CBL( COBOL )"
$	INQUIRE P2 "Lenguaje [CBL] ? "
$ P2BLK:
$	IF P2 .EQS. "" THEN P2 = "CBL"
$ P3:
$	IF P3 .NES. "" THEN GOTO P4
$	IF F$MODE() .EQS. "BATCH" THEN GOTO P3BLK
$	WRITE SYS$OUTPUT "--------------------------------------------------------------------------------"
$	WRITE SYS$OUTPUT "Ingrese Sistema Operativo, puede ser : DOS,VSE,VMS,MVS,MCP,D20"
$	INQUIRE P3 "Sistema Operativo [MVS] ? "
$ P3BLK:
$	IF P3 .EQS. "" THEN P3 = "MVS"
$ P4:
$	IF P4 .NES. "" THEN GOTO P5
$	IF F$MODE() .EQS. "BATCH" THEN GOTO P4BLK
$	WRITE SYS$OUTPUT "--------------------------------------------------------------------------------"
$	WRITE SYS$OUTPUT "Ingrese ambientes de I/O, si es mas de uno separelos por coma"
$	IF P3 .EQS. "MVS" .OR. P3 .EQS. "DOS" THEN WRITE SYS$OUTPUT "Puede ser DTC(datacom) ,VSI(Vsam Interactivo), VSB(Vsam Batch)"
$	IF P3 .EQS. "MVS"                     THEN WRITE SYS$OUTPUT "DB2."
$	IF P3 .EQS. "MVS" .OR. P3 .EQS. "DOS" THEN WRITE SYS$OUTPUT "               asume DTC,VSI,VSB"
$	IF P3 .EQS. "VMS"                     THEN WRITE SYS$OUTPUT "Solo puede ser RMS"
$	IF P3 .EQS. "VMS"                     THEN WRITE SYS$OUTPUT "               asume RMS"
$	IF P3 .EQS. "VSE"                     THEN WRITE SYS$OUTPUT "Puede ser VSI(Vsam Interactivo), VSB(Vsam Batch)"
$	IF P3 .EQS. "VSE"                     THEN WRITE SYS$OUTPUT "               asume VSI,VSB"
$	IF P3 .EQS. "MCP"                     THEN WRITE SYS$OUTPUT "Puede ser DMS, KE2"
$	IF P3 .EQS. "MCP"                     THEN WRITE SYS$OUTPUT "               asume DMS,KE2"
$	IF P3 .EQS. "D20"                     THEN WRITE SYS$OUTPUT "Puede ser ENS, SQL"
$	IF P3 .EQS. "D20"                     THEN WRITE SYS$OUTPUT "               asume ENS,SQL"
$	INQUIRE P4 "Ambientes de Input Output (separados por ,) ? "
$ P4BLK:
$	IF P4 .EQS. "" .AND P3 .EQS. "MVS" THEN P4 = "DTC,VSI,VSB"
$	IF P4 .EQS. "" .AND P3 .EQS. "DOS" THEN P4 = "DTC,VSI,VSB"
$	IF P4 .EQS. "" .AND P3 .EQS. "VMS" THEN P4 = "RMS"
$	IF P4 .EQS. "" .AND P3 .EQS. "VSE" THEN P4 = "VSI,VSB"
$	IF P4 .EQS. "" .AND P3 .EQS. "MCP" THEN P4 = "DMS,KE2"
$	IF P4 .EQS. "" .AND P3 .EQS. "D20" THEN P4 = "ENS,SQL"
$ P5:
$	IF P5 .NES. "" THEN GOTO P6
$	IF F$MODE() .EQS. "BATCH" THEN GOTO P5BLK
$	WRITE SYS$OUTPUT "--------------------------------------------------------------------------------"
$	WRITE SYS$OUTPUT "Ingrese ambientes de interfaz usuaria, si es mas de uno separelos por coma"
$	IF P3 .EQS. "MVS" .OR. P3 .EQS. "DOS" THEN WRITE SYS$OUTPUT "Puede ser BMS(Macros BMS para CICS), VRS(Voice Response)"
$	IF P3 .EQS. "MVS" .OR. P3 .EQS. "DOS" THEN WRITE SYS$OUTPUT "          VBS(Visual Basic)"
$	IF P3 .EQS. "MVS" .OR. P3 .EQS. "DOS" THEN WRITE SYS$OUTPUT "               asume BMS"
$	IF P3 .EQS. "VMS"                     THEN WRITE SYS$OUTPUT "Solo puede ser FMS(Form Management System)"
$	IF P3 .EQS. "VMS"                     THEN WRITE SYS$OUTPUT "               asume FMS"
$	IF P3 .EQS. "VSE"                     THEN WRITE SYS$OUTPUT "Solo puede ser BMS(Macros BMS para CICS), VBS(Visual Basic)"
$	IF P3 .EQS. "VSE"                     THEN WRITE SYS$OUTPUT "               asume BMS"
$	IF P3 .EQS. "MCP"                     THEN WRITE SYS$OUTPUT "Puede ser SDF(Screen Design Facilities), VBS(Visual Basic)"
$	IF P3 .EQS. "MCP"                     THEN WRITE SYS$OUTPUT "               asume SDF"
$	IF P3 .EQS. "D20"                     THEN WRITE SYS$OUTPUT "Solo puede ser SCC(Screen Cobol)"
$	IF P3 .EQS. "D20"                     THEN WRITE SYS$OUTPUT "               asume SCC"
$	INQUIRE P5 "Ambientes de Interfaz Usuario (separados por ,) ? "
$ P5BLK:
$	IF P5 .EQS. "" .AND P3 .EQS. "MVS" THEN P5 = "BMS"
$	IF P5 .EQS. "" .AND P3 .EQS. "DOS" THEN P5 = "BMS"
$	IF P5 .EQS. "" .AND P3 .EQS. "VMS" THEN P5 = "FMS"
$	IF P5 .EQS. "" .AND P3 .EQS. "VSE" THEN P5 = "BMS"
$	IF P5 .EQS. "" .AND P3 .EQS. "MCP" THEN P5 = "SDF"
$	IF P5 .EQS. "" .AND P3 .EQS. "D20" THEN P5 = "SCC"
$ P6:
$	IF P6 .NES. "" THEN GOTO MAIN
$	IF F$MODE() .EQS. "BATCH" THEN GOTO P6BLK
$	WRITE SYS$OUTPUT "--------------------------------------------------------------------------------"
$	WRITE SYS$OUTPUT "Ingrese disco y directorio bajo el cual se creara el proyecto"
$	WRITE SYS$OUTPUT "        Asume ''GNS$DSKQUO':''GNS$ROTPRY'DES]"
$	INQUIRE P6 "Directorio Raiz ( Disco:[directorio] ) ? "
$ P6BLK:
$	IF P6 .EQS. "" THEN P6 = "''GNS$DSKQUO':''GNS$ROTPRY'DES]"
$ MAIN:
$	write sys$output "[1mGENAMBPRY : GENERACION DE AMBIENTE DE PROYECTO[0m"
$	write sys$output "[1mProyecto          : ''p1'[0m"
$	write sys$output "[1mLenguaje          : ''p2'[0m"
$	write sys$output "[1mSistema Operativo : ''p3'[0m"
$	write sys$output "[1mAmbiente de I/O   : ''p4'[0m"
$	write sys$output "[1mAmbiente Interfaz : ''p5'[0m"
$	write sys$output "[1mDirectorio Raiz   : ''p6'[0m"
$
$	LNG = P2
$	SOP = P3
$	SO  = P3
$	IF ( P3 .EQS. "VSE" ) .OR. ( P3 .EQS. "MVS" ) THEN SOP = "DOS"
$	LGJ = LNG
$
$	GOSUB VALPAR
$
$	write sys$output "[5m[1mGenerando ambiente ...[0m"
$	ON WARNING   THEN GOTO ERR
$	ON CONTROL_Y THEN GOTO FIN
$	IF F$MODE() .EQS. "BATCH" THEN 'BAT'
$!	ASS PRYCRE'P1'.LOG SYS$OUTPUT
$!	ASS PRYCRE'P1'.LOG SYS$ERROR
$	NOD =	F$PARSE("[]",,,"NODE")
$	DEV =	F$PARSE("[]",,,"DEVICE")
$	DIR =	F$PARSE("[]",,,"DIRECTORY")
$	SET DEF 'P6'
$
$!===============================================================
$!	Crea Directorio del Proyecto
$!===============================================================
$	CREATE/DIR [.'P1']
$
$	SET FILE/ACL=(ID='P1'_PGM,OPTIONS=DEF+PROT,ACC=R+E)       'P1'.DIR
$	SET FILE/ACL=(ID='P1'_PGM,OPTIONS=PROT,    ACC=R+E)       'P1'.DIR
$
$	SET FILE/ACL=(ID='P1'_JDP,OPTIONS=DEF+PROT,ACC=R+W+E+D+C) 'P1'.DIR
$	SET FILE/ACL=(ID='P1'_JDP,OPTIONS=PROT,    ACC=R+W+E)     'P1'.DIR
$	SET FILE/OWNER='P1'_DES					  'P1'.DIR
$
$!===============================================================
$!	Crea Directorios EJE, FIL, FTE y WRK del Proyecto
$!===============================================================
$	CREATE/DIR [.'P1'.EJE]
$	CREATE/DIR [.'P1'.FIL]
$	CREATE/DIR [.'P1'.FTE]
$	CREATE/DIR [.'P1'.WRK]
$	SET FILE/OWNER='P1'_WRK [.'P1']WRK.DIR
$
$!===============================================================
$!	Crea Directorio EJE.COM, EXE, FDL y PAR del Proyecto
$!===============================================================
$
$	CREATE/DIR [.'P1'.EJE.FDL]
$	CREATE/DIR [.'P1'.EJE.PAR]
$	IF F$SEARC("[.''P1'.EJE.PAR]''P1'RPF.PAR") .EQS. "" THEN CREATE/FDL=GNSFDL:RPF [.'P1'.EJE.PAR]'P1'RPF.PAR
$	SET FILE/ACL=(IDENT='P1'_PGM)/REPLACE=(IDENT='P1'_PGM,OPT=PROT,ACC=READ+WRITE+EXECUTE) [.'P1'.EJE.PAR]'P1'RPF.PAR
$
$	IF ( P3 .EQS. "VSE" ) .OR. ( P3 .EQS. "MVS" ) THEN SOP = P3
$	CREATE/DIR [.'P1'.EJE.COM]
$	CREATE/DIR [.'P1'.EJE.COM.'LGJ']
$	CREATE/DIR [.'P1'.EJE.COM.'LGJ'.'SOP']
$	I = 0
$ LUP_COMAIO:
$	AIO = F$ELEMENT(I,",",P4)
$	I = I + 1
$	IF AIO .NES. "," THEN CREATE/DIR [.'P1'.EJE.COM.'LGJ'.'SOP'.'AIO']
$	IF AIO .NES. "," THEN GOTO LUP_COMAIO
$
$	I = 0
$ LUP_COMAIU:
$	AIU = F$ELEMENT(I,",",P5)
$	I = I + 1
$	IF AIU .NES. "," THEN CREATE/DIR [.'P1'.EJE.COM.'LGJ'.'SOP'.'AIU']
$	IF AIU .NES. "," THEN GOTO LUP_COMAIU
$	IF ( P3 .EQS. "VSE" ) .OR. ( P3 .EQS. "MVS" ) THEN SOP = "DOS"
$
$	IF LNG .EQS. "CBL" .OR. LNG .EQS. "ALG" THEN LGJ = "EXE"
$	CREATE/DIR [.'P1'.EJE.'LGJ']
$	CREATE/DIR [.'P1'.EJE.'LGJ'.'SOP']
$	I = 0
$ LUP_EXEAIO:
$	AIO = F$ELEMENT(I,",",P4)
$	I = I + 1
$	IF AIO .NES. "," THEN CREATE/DIR [.'P1'.EJE.'LGJ'.'SOP'.'AIO']
$	IF AIO .NES. "," THEN GOTO LUP_EXEAIO
$
$	I = 0
$ LUP_EXEAIU:
$	AIU = F$ELEMENT(I,",",P5)
$	I = I + 1
$	IF AIU .NES. "," THEN CREATE/DIR [.'P1'.EJE.'LGJ'.'SOP'.'AIU']
$	IF AIU .NES. "," THEN GOTO LUP_EXEAIU
$	LJG = LNG
$
$!===============================================================
$!	Crea Nodo de CDD para el Proyecto
$!===============================================================
$!JSS	CDDCRE [.'P1'.EJE]...
$!JSS	SET FILE/ACL/DELETE [.'P1'.EJE]...
$!JSS	SET FILE/ACL=(ID='P1'_JDP,OPTIONS=PROT,ACC=R+W+E) [.'P1'.EJE]...
$
$!===============================================================
$!	Crea Libreria de Formularios para el Proyecto
$!===============================================================
$
$	ON ERROR THEN CONTINUE
$	IF F$SEARC("[.''P1'.EJE]''P1'.FLB") .NES. "" THEN GOTO HLP
$	FMS/LIBRARY/CREATE  [.'P1'.EJE]'P1'.FLB;1 GNSFMS/FORM=HDR
$	FMS/LIBRARY/DELETE  [.'P1'.EJE]'P1'.FLB/FORM=HDR
$	SET FILE/ACL/DELETE [.'P1'.EJE]'P1'.FLB
$	SET FILE/ACL=(ID='P1'_JDP,OPTIONS=PROT,ACC=R+W+E+D) [.'P1'.EJE]'P1'.FLB
$
$!===============================================================
$!	Crea Libreria de Help para el Proyecto
$!===============================================================
$ HLP:
$	ON ERROR THEN CONTINUE
$	IF F$SEARC("[.''P1'.EJE]''P1'.HLB") .NES. "" THEN GOTO FIL
$	LIBRARY/HELP/CREATE  [.'P1'.EJE]'P1'.HLB;1
$	SET FILE/ACL/DELETE  [.'P1'.EJE]'P1'.HLB
$	SET FILE/ACL=(ID='P1'_JDP,OPTIONS=PROT,ACC=R+W+E+D) [.'P1'.EJE]'P1'.HLB
$
$!===============================================================
$!	Crea Directorio FIL.MAE, REP y TMP del Proyecto
$!===============================================================
$ FIL:
$	CREATE/DIR [.'P1'.FIL.MAE]
$	CREATE/DIR [.'P1'.FIL.REP]
$	CREATE/DIR [.'P1'.FIL.TMP]
$
$!===============================================================
$!	Crea Directorio FTE.DOC, GNS GEN TXT y SRC del Proyecto
$!===============================================================
$	CREATE/DIR [.'P1'.FTE.DOC]
$	CREATE/DIR [.'P1'.FTE.GNS]
$	IF F$SEARC("[.''P1'.FTE.GNS]''P1'RPR.GNS") .EQS. "" THEN CREATE/FDL=GNSFDL:RPR [.'P1'.FTE.GNS]'P1'RPR.GNS
$	SET FILE/ACL=(IDENT='P1'_PGM)/REPLACE=(IDENT='P1'_PGM,OPT=PROT,ACC=READ+WRITE+EXECUTE) [.'P1'.FTE.GNS]'P1'RPR.GNS
$
$	IF LNG .EQS. "CBL" .OR. LNG .EQS. "ALG" THEN LGJ = "GEN"
$	CREATE/DIR [.'P1'.FTE.GNS.'LGJ']
$	CREATE/DIR [.'P1'.FTE.GNS.'LGJ'.'SOP']
$	I = 0
$ LUP_GENAIO:
$	AIO = F$ELEMENT(I,",",P4)
$	I = I + 1
$	IF AIO .NES. "," THEN CREATE/DIR [.'P1'.FTE.GNS.'LGJ'.'SOP'.'AIO']
$	IF AIO .NES. "," THEN GOTO LUP_GENAIO
$
$	I = 0
$ LUP_GENAIU:
$	AIU = F$ELEMENT(I,",",P5)
$	I = I + 1
$	IF AIU .NES. "," THEN CREATE/DIR [.'P1'.FTE.GNS.'LGJ'.'SOP'.'AIU']
$	IF AIU .NES. "," THEN GOTO LUP_GENAIU
$	LJG = LNG
$
$	IF LNG .EQS. "CBL" .OR. LNG .EQS. "ALG" THEN LGJ = "TXT"
$	CREATE/DIR [.'P1'.FTE.'LGJ']
$	CREATE/DIR [.'P1'.FTE.'LGJ'.'SOP']
$	I = 0
$ LUP_TXTAIO:
$	AIO = F$ELEMENT(I,",",P4)
$	I = I + 1
$	IF AIO .NES. "," THEN CREATE/DIR [.'P1'.FTE.'LGJ'.'SOP'.'AIO']
$	IF AIO .NES. "," THEN GOTO LUP_TXTAIO
$
$	I = 0
$ LUP_TXTAIU:
$	AIU = F$ELEMENT(I,",",P5)
$	I = I + 1
$	IF AIU .NES. "," THEN CREATE/DIR [.'P1'.FTE.'LGJ'.'SOP'.'AIU']
$	IF AIU .NES. "," THEN GOTO LUP_TXTAIU
$	LJG = LNG
$
$	IF LNG .EQS. "CBL" .OR. LNG .EQS. "ALG" THEN LGJ = "SRC"
$	CREATE/DIR [.'P1'.FTE.'LGJ']
$	CREATE/DIR [.'P1'.FTE.'LGJ'.'SOP']
$	I = 0
$ LUP_SRCAIO:
$	AIO = F$ELEMENT(I,",",P4)
$	I = I + 1
$	IF AIO .NES. "," THEN CREATE/DIR [.'P1'.FTE.'LGJ'.'SOP'.'AIO']
$	IF AIO .NES. "," THEN GOTO LUP_SRCAIO
$
$	I = 0
$ LUP_SRCAIU:
$	AIU = F$ELEMENT(I,",",P5)
$	I = I + 1
$	IF AIU .NES. "," THEN CREATE/DIR [.'P1'.FTE.'LGJ'.'SOP'.'AIU']
$	IF AIU .NES. "," THEN GOTO LUP_SRCAIU
$	LJG = LNG
$
$!===============================================================
$!	Crea Libreria de Modulos Objetos para el Proyecto
$!===============================================================
$	ON ERROR THEN CONTINUE
$	IF F$SEARC("[.''P1'.FTE]''P1'.OLB") .NES. "" THEN GOTO RPT
$	LIBRARY/OBJ/CREATE  [.'P1'.FTE]'P1'.OLB;1
$	SET FILE/ACL/DELETE [.'P1'.FTE]'P1'.OLB
$	SET FILE/ACL=(ID='P1'_JDP,OPTIONS=PROT,ACC=R+W+E+D) [.'P1'.FTE]'P1'.OLB
$
$!===============================================================
$!	Crea Libreria de Reportes para el Proyecto
$!===============================================================
$ RPT:
$	ON ERROR THEN CONTINUE
$	IF F$SEARC("[.''P1'.FTE]RPT.FLB") .NES. "" THEN GOTO WRK
$	FMS/LIBRARY/CREATE  [.'P1'.FTE]RPT.FLB;1 GNSRPT/FORM=GNSRPT
$	FMS/LIBRARY/DELETE  [.'P1'.FTE]RPT.FLB/FORM=GNSRPT
$	SET FILE/ACL/DELETE [.'P1'.FTE]RPT.FLB
$	SET FILE/ACL=(ID='P1'_JDP,OPTIONS=PROT,ACC=R+W+E+D) [.'P1'.FTE]RPT.FLB
$
$!===============================================================
$!	Crea Directorio WRK.JDP, PGM, y RES del Proyecto
$!===============================================================
$ WRK:
$	CREATE/DIR [.'P1'.WRK.JDP]
$	CREATE/DIR [.'P1'.WRK.PGM]
$	CREATE/DIR [.'P1'.WRK.RES]
$	SET FILE/ACL=(ID='P1'_PGM,OPT=DEF+PROT,ACC=R+W+E+D) [.'P1'.WRK]RES.DIR
$	SET FILE/ACL=(ID='P1'_PGM,OPT=PROT,    ACC=R+W+E)   [.'P1'.WRK]RES.DIR
$	SET FILE/ACL=(ID='P1'_JDP,OPT=DEF+PROT,ACC=R+W+E+D+C) -
		[.'P1'.WRK]JDP.DIR,[.'P1'.WRK]PGM.DIR,[.'P1'.WRK]RES.DIR
$	SET FILE/ACL=(ID='P1'_JDP,OPT=PROT,    ACC=R+W+E+C)   -
		[.'P1'.WRK]JDP.DIR,[.'P1'.WRK]PGM.DIR,[.'P1'.WRK]RES.DIR
$
$! Solo se debe generar dominio y recorrido para RAIZ de nivel superior ".DES]"
$	IF F$LOCATE(".DES]",P6) .EQS. F$LENGTH(P6) THEN GOTO CON
$
$	IF F$SEARC("[.''P1'.WRK.RES]''P1'RCR.GNS") .EQS. "" THEN -
		CREATE/FDL=GNSFDL:RCR.FDL [.'P1'.WRK.RES]'P1'RCR.GNS
$	IF F$SEARC("[.''P1'.WRK.RES]''P1'DMN.GNS") .EQS. "" THEN -
		CREATE/FDL=GNSFDL:DMN.FDL [.'P1'.WRK.RES]'P1'DMN.GNS
$	SET PROT=(S:RWE,O:RWE,G:RE,W) [.'P1'.WRK.RES]'P1'RCR.GNS
$	SET PROT=(S:RWE,O:RWE,G:RE,W) [.'P1'.WRK.RES]'P1'DMN.GNS
$
$	SET FILE/ACL=(ID='P1'_JDP,OPTIONS=PROT,ACC=R+W+E+C) -
					[.'P1'.WRK.RES]'P1'RCR.GNS
$	SET FILE/ACL=(ID='P1'_PGM,OPTIONS=PROT,ACC=R+W+E) -
					[.'P1'.WRK.RES]'P1'RCR.GNS
$	SET FILE/ACL=(ID='P1'_JDP,OPTIONS=PROT,ACC=R+W+E+C) -
					[.'P1'.WRK.RES]'P1'DMN.GNS
$	SET FILE/ACL=(ID='P1'_PGM,OPTIONS=PROT,ACC=R+W+E) -
					[.'P1'.WRK.RES]'P1'DMN.GNS
$
$	SET FILE/OWNER='P1'_DES [.'P1'.WRK.RES]'P1'RCR.GNS
$	SET FILE/OWNER='P1'_DES [.'P1'.WRK.RES]'P1'DMN.GNS
$ CON:
$
$ FIN:
$ 	ON WARNING THEN CONTINUE
$	SET NOCONTROL_Y
$	SET DEF 'NOD''DEV''DIR'
$!	DEASS SYS$OUTPUT
$!	DEASS SYS$ERROR
$!	DELETE/NOLOG/NOCONFIRM PRYCRE'P1'.LOG.*
$	SET CONTROL_Y
$	EXIT
$ ERR:
$!	DEASS SYS$OUTPUT
$!	DEASS SYS$ERROR
$!	TYPE PRYCRE'P1'.LOG
$	EXIT
$
$ VALPAR:
$!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
$!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
$!!!!!!!!!!!!!!!!!!!!!!!  VALIDA COMBINACION DE PARAMETROS !!!!!!!!!!!!!!!!!!!!!
$!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
$!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
$
$	MSG :== ""
$
$	IF LNG .NES. "CBL" .AND. LNG .NES. "ALG" THEN -
		MSG :== "Valor ''LNG' Invalido como Lenguaje"
$
$	IF SOP .NES. "VMS" .AND. SOP .NES. "DOS" .AND. -
	   SOP .NES. "VSE" .AND. SOP .NES. "MVS" .AND. -
           SOP .NES. "MCP" .AND. SOP .NES. "D20" THEN -
		MSG :== "Valor ''SOP' Invalido como Sistema Operativo"
$
$	IF MSG .NES. "" THEN WRITE SYS$OUTPUT MSG
$	IF MSG .NES. "" THEN EXIT
$
$	IF SO .EQS. "DOS" THEN GOTO SOPDOS
$	IF SO .EQS. "VSE" THEN GOTO SOPVSE
$	IF SO .EQS. "VMS" THEN GOTO SOPVMS
$	IF SO .EQS. "MVS" THEN GOTO SOPMVS
$	IF SO .EQS. "MCP" THEN GOTO SOPMCP
$	IF SO .EQS. "D20" THEN GOTO SOPD20
$	
$ SOPDOS:
$	I = 0
$ DOSVALPAR_AIO:
$	AIO = F$ELEMENT(I,",",P4)
$	I = I + 1
$	IF AIO .NES. "," THEN -
        IF AIO .NES. "VSI" .AND. AIO .NES. "VSB" .AND. AIO .NES. "DTC" THEN -
              MSG :== "Combinacion invalida LNG=''LNG', SOP=''SOP', AIO=''AIO'"
$	IF MSG .NES. "" THEN WRITE SYS$OUTPUT MSG
$	IF MSG .NES. "" THEN EXIT
$	IF AIO .NES. "," THEN GOTO DOSVALPAR_AIO
$	I = 0
$ DOSVALPAR_AIU:
$	AIU = F$ELEMENT(I,",",P5)
$	I = I + 1
$	IF AIU .NES. ","   THEN -
	IF AIU .NES. "BMS" .AND. AIU .NES. "VRS" .AND. AIU .NES. "VBS" THEN -
              MSG :== "Combinacion invalida LNG=''LNG', SOP=''SOP', AIU=''AIU'"
$	IF MSG .NES. "" THEN WRITE SYS$OUTPUT MSG
$	IF MSG .NES. "" THEN EXIT
$	IF AIU .NES. "," THEN GOTO DOSVALPAR_AIU
$	RETURN
$-------------------------------------------------------------------------
$
$ SOPVSE:
$	IF ( AIO .NES. "" .AND. AIO .NES. "VSI" .AND. AIO .NES. "VSB" ) .OR. -
	   ( AIU .NES. "" .AND. AIU .NES. "BMS" .AND. AIU .NES. "VRS" .AND. -
             AIU .NES. "VBS" ) THEN -
	MSG :== "Combinacion invalida LNG=''LNG', SOP=''SOP', AIO=''AIO', AIU=''AIU'"
$	IF MSG .NES. "" THEN WRITE SYS$OUTPUT MSG
$	IF MSG .NES. "" THEN EXIT
$	RETURN
$-------------------------------------------------------------------------
$
$ SOPVMS:
$	I = 0
$ VMSVALPAR_AIO:
$	AIO = F$ELEMENT(I,",",P4)
$	I = I + 1
$	IF AIO .NES. "," THEN -
	IF ( AIO .NES. "" .AND. AIO .NES. "RMS" ) THEN -
	MSG :== "Combinacion invalida LNG=''LNG', SOP=''SOP', AIO=''AIO', AIU=''AIU'"
$	IF MSG .NES. "" THEN WRITE SYS$OUTPUT MSG
$	IF MSG .NES. "" THEN EXIT
$	IF AIO .NES. "," THEN GOTO VMSVALPAR_AIO
$	I = 0
$ VMSVALPAR_AIU:
$	AIU = F$ELEMENT(I,",",P5)
$	I = I + 1
$	IF AIU .NES. ","   THEN -
	IF AIU .NES. "FMS" THEN -
              MSG :== "Combinacion invalida LNG=''LNG', SOP=''SOP', AIU=''AIU'"
$	IF MSG .NES. "" THEN WRITE SYS$OUTPUT MSG
$	IF MSG .NES. "" THEN EXIT
$	IF AIU .NES. "," THEN GOTO VMSVALPAR_AIU
$	RETURN
$-------------------------------------------------------------------------
$
$ SOPMVS:
$	I = 0
$ MVSVALPAR_AIO:
$	AIO = F$ELEMENT(I,",",P4)
$	I = I + 1
$	IF AIO .NES. "," THEN -
        IF AIO .NES. "VSI" .AND. AIO .NES. "VSB" .AND. AIO .NES. "DTC" .AND. -
           AIO .NES. "DB2" THEN -
              MSG :== "Combinacion invalida LNG=''LNG', SOP=''SOP', AIO=''AIO'"
$	IF MSG .NES. "" THEN WRITE SYS$OUTPUT MSG
$	IF MSG .NES. "" THEN EXIT
$	IF AIO .NES. "," THEN GOTO MVSVALPAR_AIO
$	I = 0
$ MVSVALPAR_AIU:
$	AIU = F$ELEMENT(I,",",P5)
$	I = I + 1
$	IF AIU .NES. ","   THEN -
	IF AIU .NES. "BMS" .AND. AIU .NES. "VRS" .AND. AIU .NES. "VBS" THEN -
              MSG :== "Combinacion invalida LNG=''LNG', SOP=''SOP', AIU=''AIU'"
$	IF MSG .NES. "" THEN WRITE SYS$OUTPUT MSG
$	IF MSG .NES. "" THEN EXIT
$	IF AIU .NES. "," THEN GOTO MVSVALPAR_AIU
$	RETURN
$-------------------------------------------------------------------------
$
$ SOPMCP:
$	I = 0
$ MCPVALPAR_AIO:
$	AIO = F$ELEMENT(I,",",P4)
$	I = I + 1
$	IF AIO .NES. "," THEN -
        IF AIO .NES. "DMS" .AND. AIO .NES. "KE2" THEN -
              MSG :== "Combinacion invalida LNG=''LNG', SOP=''SOP', AIO=''AIO'"
$	IF MSG .NES. "" THEN WRITE SYS$OUTPUT MSG
$	IF MSG .NES. "" THEN EXIT
$	IF AIO .NES. "," THEN GOTO MCPVALPAR_AIO
$	I = 0
$ MCPVALPAR_AIU:
$	AIU = F$ELEMENT(I,",",P5)
$	I = I + 1
$	IF AIU .NES. ","   THEN -
	IF ( AIU .NES. "SDF" .AND. AIU .NES. "VBS" ) THEN -
              MSG :== "Combinacion invalida LNG=''LNG', SOP=''SOP', AIU=''AIU'"
$	IF MSG .NES. "" THEN WRITE SYS$OUTPUT MSG
$	IF MSG .NES. "" THEN EXIT
$	IF AIU .NES. "," THEN GOTO MCPVALPAR_AIU
$	RETURN
$-------------------------------------------------------------------------
$
$ SOPD20:
$	I = 0
$ D20VALPAR_AIO:
$	AIO = F$ELEMENT(I,",",P4)
$	I = I + 1
$	IF AIO .NES. "," THEN -
        IF AIO .NES. "ENS" .AND. AIO .NES. "SQL" THEN -
              MSG :== "Combinacion invalida LNG=''LNG', SOP=''SOP', AIO=''AIO'"
$	IF MSG .NES. "" THEN WRITE SYS$OUTPUT MSG
$	IF MSG .NES. "" THEN EXIT
$	IF AIO .NES. "," THEN GOTO D20VALPAR_AIO
$	I = 0
$ D20VALPAR_AIU:
$	AIU = F$ELEMENT(I,",",P5)
$	I = I + 1
$	IF AIU .NES. ","   THEN -
	IF AIU .NES. "SCC" THEN -
              MSG :== "Combinacion invalida LNG=''LNG', SOP=''SOP', AIU=''AIU'"
$	IF MSG .NES. "" THEN WRITE SYS$OUTPUT MSG
$	IF MSG .NES. "" THEN EXIT
$	IF AIU .NES. "," THEN GOTO D20VALPAR_AIU
$	RETURN
