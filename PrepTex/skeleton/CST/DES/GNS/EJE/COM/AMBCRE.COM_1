$ P1:
$	IF P1 .NES. "" THEN GOTO P2
$	IF F$MODE() .EQS. "BATCH" THEN EXIT
$	INQUIRE P1 "Proyecto ? "
$	GOTO P1
$ P2:
$	IF P2 .NES. "" THEN GOTO P3
$	IF F$MODE() .EQS. "BATCH" THEN EXIT
$	INQUIRE P2 "Directorio Raiz ( Disco:[directorio] ) ? "
$	GOTO P2
$
$ P3:
$	IF P3 .NES. "" THEN GOTO P4
$	IF F$MODE() .EQS. "BATCH" THEN EXIT
$	INQUIRE P3 "Lenguaje ? "
$	GOTO P3
$ P4:
$	IF P4 .NES. "" THEN GOTO P5
$	IF F$MODE() .EQS. "BATCH" THEN EXIT
$	INQUIRE P4 "Sistema Operativo ? "
$	GOTO P4
$ P5:
$	IF P5 .NES. "" THEN GOTO P6
$	IF F$MODE() .EQS. "BATCH" THEN EXIT
$	INQUIRE P5 "Ambientes de Input Output (separados por ,) ? "
$	GOTO P5
$ P6:
$	IF P6 .NES. "" THEN GOTO MAIN
$	IF F$MODE() .EQS. "BATCH" THEN EXIT
$	INQUIRE P6 "Ambientes de Interfaz Usuario (separado por ,) ? "
$	GOTO P6
$
$ MAIN:
$
$	LNG = P3
$	SOP = P4
$	IF ( P4 .EQS. "VSE" ) .OR. ( P4 .EQS. "MVS" ) THEN SOP = "DOS"
$	LGJ = LNG
$
$	GOSUB VALPAR
$
$	ON WARNING   THEN GOTO ERR
$	ON CONTROL_Y THEN GOTO FIN
$	IF F$MODE() .EQS. "BATCH" THEN 'BAT'
$!	ASS PRYCRE'P1'.LOG SYS$OUTPUT
$!	ASS PRYCRE'P1'.LOG SYS$ERROR
$	NOD =	F$PARSE("[]",,,"NODE")
$	DEV =	F$PARSE("[]",,,"DEVICE")
$	DIR =	F$PARSE("[]",,,"DIRECTORY")
$	IF P2 .NES. "" THEN SET DEF 'P2'
$
$!===============================================================
$!	Crea Directorio del Proyecto
$!===============================================================
$	CREATE/DIR [.'P1']
$
$	SET FILE/ACL=(ID='P1'_PGM,OPTIONS=DEF+PROT,ACC=R+E)       'P1'.DIR
$	SET FILE/ACL=(ID='P1'_PGM,OPTIONS=PROT,    ACC=R+E)       'P1'.DIR
$
$	SET FILE/ACL=(ID='P1'_JDP,OPTIONS=DEF+PROT,ACC=R+W+E+D+C) 'P1'.DIR
$	SET FILE/ACL=(ID='P1'_JDP,OPTIONS=PROT,    ACC=R+W+E)     'P1'.DIR
$	SET FILE/OWNER='P1'_DES					  'P1'.DIR
$
$!===============================================================
$!	Crea Directorios EJE, FIL, FTE y WRK del Proyecto
$!===============================================================
$	CREATE/DIR [.'P1'.EJE]
$	CREATE/DIR [.'P1'.FIL]
$	CREATE/DIR [.'P1'.FTE]
$	CREATE/DIR [.'P1'.WRK]
$	SET FILE/OWNER='P1'_WRK [.'P1']WRK.DIR
$
$!===============================================================
$!	Crea Directorio EJE.COM, EXE, FDL y PAR del Proyecto
$!===============================================================
$
$	CREATE/DIR [.'P1'.EJE.FDL]
$	CREATE/DIR [.'P1'.EJE.PAR]
$
$	IF ( P4 .EQS. "VSE" ) .OR. ( P4 .EQS. "MVS" ) THEN SOP = P4
$	CREATE/DIR [.'P1'.EJE.COM]
$	CREATE/DIR [.'P1'.EJE.COM.'LGJ']
$	CREATE/DIR [.'P1'.EJE.COM.'LGJ'.'SOP']
$	I = 0
$ LUP_COMAIO:
$	AIO = F$ELEMENT(I,",",P5)
$	I = I + 1
$	IF AIO .NES. "," THEN CREATE/DIR [.'P1'.EJE.COM.'LGJ'.'SOP'.'AIO']
$	IF AIO .NES. "," THEN GOTO LUP_COMAIO
$
$	I = 0
$ LUP_COMAIU:
$	AIU = F$ELEMENT(I,",",P6)
$	I = I + 1
$	IF AIU .NES. "," THEN CREATE/DIR [.'P1'.EJE.COM.'LGJ'.'SOP'.'AIU']
$	IF AIU .NES. "," THEN GOTO LUP_COMAIU
$	IF ( P4 .EQS. "VSE" ) .OR. ( P4 .EQS. "MVS" ) THEN SOP = "DOS"
$
$	IF LNG .EQS. "CBL" THEN LGJ = "EXE"
$	CREATE/DIR [.'P1'.EJE.'LGJ']
$	CREATE/DIR [.'P1'.EJE.'LGJ'.'SOP']
$	I = 0
$ LUP_EXEAIO:
$	AIO = F$ELEMENT(I,",",P5)
$	I = I + 1
$	IF AIO .NES. "," THEN CREATE/DIR [.'P1'.EJE.'LGJ'.'SOP'.'AIO']
$	IF AIO .NES. "," THEN GOTO LUP_EXEAIO
$
$	I = 0
$ LUP_EXEAIU:
$	AIU = F$ELEMENT(I,",",P6)
$	I = I + 1
$	IF AIU .NES. "," THEN CREATE/DIR [.'P1'.EJE.'LGJ'.'SOP'.'AIU']
$	IF AIU .NES. "," THEN GOTO LUP_EXEAIU
$	LJG = LNG
$
$!===============================================================
$!	Crea Nodo de CDD para el Proyecto
$!===============================================================
$!JSS	CDDCRE [.'P1'.EJE]...
$!JSS	SET FILE/ACL/DELETE [.'P1'.EJE]...
$!JSS	SET FILE/ACL=(ID='P1'_JDP,OPTIONS=PROT,ACC=R+W+E) [.'P1'.EJE]...
$
$!===============================================================
$!	Crea Libreria de Formularios para el Proyecto
$!===============================================================
$
$!JSS	ASS 'GNS$DSKGNS''GNS$ROTPRY'EXP.GNS.EJE]GNS.FLB GNSFMS
$	ASS DUA3:[PGV.EXP.GNS.EJE]GNS.FLB GNSFMS
$
$	ON ERROR THEN CONTINUE
$	FMS/LIBRARY/CREATE  [.'P1'.EJE]'P1'.FLB;1 GNSFMS/FORM=HDR
$	FMS/LIBRARY/DELETE  [.'P1'.EJE]'P1'.FLB/FORM=HDR
$	SET FILE/ACL/DELETE [.'P1'.EJE]'P1'.FLB
$	SET FILE/ACL=(ID='P1'_JDP,OPTIONS=PROT,ACC=R+W+E+D) [.'P1'.EJE]'P1'.FLB
$
$!===============================================================
$!	Crea Libreria de Help para el Proyecto
$!===============================================================
$	ON ERROR THEN CONTINUE
$	LIBRARY/HELP/CREATE  [.'P1'.EJE]'P1'.HLB;1
$	SET FILE/ACL/DELETE  [.'P1'.EJE]'P1'.HLB
$	SET FILE/ACL=(ID='P1'_JDP,OPTIONS=PROT,ACC=R+W+E+D) [.'P1'.EJE]'P1'.HLB
$
$!===============================================================
$!	Crea Directorio FIL.MAE, REP y TMP del Proyecto
$!===============================================================
$	CREATE/DIR [.'P1'.FIL.MAE]
$	CREATE/DIR [.'P1'.FIL.REP]
$	CREATE/DIR [.'P1'.FIL.TMP]
$
$!===============================================================
$!	Crea Directorio FTE.DOC, GNS GEN TXT y SRC del Proyecto
$!===============================================================
$	CREATE/DIR [.'P1'.FTE.DOC]
$	CREATE/DIR [.'P1'.FTE.GNS]
$
$	IF LNG .EQS. "CBL" THEN LGJ = "GEN"
$	CREATE/DIR [.'P1'.FTE.GNS.'LGJ']
$	CREATE/DIR [.'P1'.FTE.GNS.'LGJ'.'SOP']
$	I = 0
$ LUP_GENAIO:
$	AIO = F$ELEMENT(I,",",P5)
$	I = I + 1
$	IF AIO .NES. "," THEN CREATE/DIR [.'P1'.FTE.GNS.'LGJ'.'SOP'.'AIO']
$	IF AIO .NES. "," THEN GOTO LUP_GENAIO
$
$	I = 0
$ LUP_GENAIU:
$	AIU = F$ELEMENT(I,",",P6)
$	I = I + 1
$	IF AIU .NES. "," THEN CREATE/DIR [.'P1'.FTE.GNS.'LGJ'.'SOP'.'AIU']
$	IF AIU .NES. "," THEN GOTO LUP_GENAIU
$	LJG = LNG
$
$	IF LNG .EQS. "CBL" THEN LGJ = "TXT"
$	CREATE/DIR [.'P1'.FTE.'LGJ']
$	CREATE/DIR [.'P1'.FTE.'LGJ'.'SOP']
$	I = 0
$ LUP_TXTAIO:
$	AIO = F$ELEMENT(I,",",P5)
$	I = I + 1
$	IF AIO .NES. "," THEN CREATE/DIR [.'P1'.FTE.'LGJ'.'SOP'.'AIO']
$	IF AIO .NES. "," THEN GOTO LUP_TXTAIO
$
$	I = 0
$ LUP_TXTAIU:
$	AIU = F$ELEMENT(I,",",P6)
$	I = I + 1
$	IF AIU .NES. "," THEN CREATE/DIR [.'P1'.FTE.'LGJ'.'SOP'.'AIU']
$	IF AIU .NES. "," THEN GOTO LUP_TXTAIU
$	LJG = LNG
$
$	IF LNG .EQS. "CBL" THEN LGJ = "SRC"
$	CREATE/DIR [.'P1'.FTE.'LGJ']
$	CREATE/DIR [.'P1'.FTE.'LGJ'.'SOP']
$	I = 0
$ LUP_SRCAIO:
$	AIO = F$ELEMENT(I,",",P5)
$	I = I + 1
$	IF AIO .NES. "," THEN CREATE/DIR [.'P1'.FTE.'LGJ'.'SOP'.'AIO']
$	IF AIO .NES. "," THEN GOTO LUP_SRCAIO
$
$	I = 0
$ LUP_SRCAIU:
$	AIU = F$ELEMENT(I,",",P6)
$	I = I + 1
$	IF AIU .NES. "," THEN CREATE/DIR [.'P1'.FTE.'LGJ'.'SOP'.'AIU']
$	IF AIU .NES. "," THEN GOTO LUP_SRCAIU
$	LJG = LNG
$
$!===============================================================
$!	Crea Libreria de Modulos Objetos para el Proyecto
$!===============================================================
$	ON ERROR THEN CONTINUE
$	LIBRARY/OBJ/CREATE  [.'P1'.FTE]'P1'.OLB;1
$	SET FILE/ACL/DELETE [.'P1'.FTE]'P1'.OLB
$	SET FILE/ACL=(ID='P1'_JDP,OPTIONS=PROT,ACC=R+W+E+D) [.'P1'.FTE]'P1'.OLB
$
$!===============================================================
$!	Crea Libreria de Reportes para el Proyecto
$!===============================================================
$
$!JSS	ASS 'GNS$DSKGNS''GNS$ROTPRY'EXP.GNS.FTE]RPT.FLB GNSRPT
$	ASS DUA3:[PGV.EXP.GNS.FTE]RPT.FLB GNSRPT
$
$	ON ERROR THEN CONTINUE
$	FMS/LIBRARY/CREATE  [.'P1'.FTE]RPT.FLB;1 GNSRPT/FORM=GNSRPT
$	FMS/LIBRARY/DELETE  [.'P1'.FTE]RPT.FLB/FORM=GNSRPT
$	SET FILE/ACL/DELETE [.'P1'.FTE]RPT.FLB
$	SET FILE/ACL=(ID='P1'_JDP,OPTIONS=PROT,ACC=R+W+E+D) [.'P1'.FTE]RPT.FLB
$
$!===============================================================
$!	Crea Directorio WRK.JDP, PGM, y RES del Proyecto
$!===============================================================
$	CREATE/DIR [.'P1'.WRK.JDP]
$	CREATE/DIR [.'P1'.WRK.PGM]
$	CREATE/DIR [.'P1'.WRK.RES]
$	SET FILE/ACL=(ID='P1'_PGM,OPT=DEF+PROT,ACC=R+W+E+D) [.'P1'.WRK]RES.DIR
$	SET FILE/ACL=(ID='P1'_PGM,OPT=PROT,    ACC=R+W+E)   [.'P1'.WRK]RES.DIR
$	SET FILE/ACL=(ID='P1'_JDP,OPT=DEF+PROT,ACC=R+W+E+D+C) -
		[.'P1'.WRK]JDP.DIR,[.'P1'.WRK]PGM.DIR,[.'P1'.WRK]RES.DIR
$	SET FILE/ACL=(ID='P1'_JDP,OPT=PROT,    ACC=R+W+E+C)   -
		[.'P1'.WRK]JDP.DIR,[.'P1'.WRK]PGM.DIR,[.'P1'.WRK]RES.DIR
$
$!JSS	ASS 'GNS$DSKGNS''GNS$ROTPRY'EXP.GNS.EJE.FDL] GNSFDL
$	ASS DUA3:[PGV.EXP.GNS.EJE.FDL] GNSFDL
$	CREATE/FDL=GNSFDL:RCR.FDL [.'P1'.WRK.RES]'P1'RCR.GNS
$	CREATE/FDL=GNSFDL:DMN.FDL [.'P1'.WRK.RES]'P1'DMN.GNS
$	SET PROT=(S:RWE,O:RWE,G:RE,W) [.'P1'.WRK.RES]'P1'RCR.GNS
$	SET PROT=(S:RWE,O:RWE,G:RE,W) [.'P1'.WRK.RES]'P1'DMN.GNS
$
$	SET FILE/ACL=(ID='P1'_JDP,OPTIONS=PROT,ACC=R+W+E+C) -
					[.'P1'.WRK.RES]'P1'RCR.GNS
$	SET FILE/ACL=(ID='P1'_PGM,OPTIONS=PROT,ACC=R+W+E) -
					[.'P1'.WRK.RES]'P1'RCR.GNS
$	SET FILE/ACL=(ID='P1'_JDP,OPTIONS=PROT,ACC=R+W+E+C) -
					[.'P1'.WRK.RES]'P1'DMN.GNS
$	SET FILE/ACL=(ID='P1'_PGM,OPTIONS=PROT,ACC=R+W+E) -
					[.'P1'.WRK.RES]'P1'DMN.GNS
$
$	SET FILE/OWNER='P1'_DES [.'P1'.WRK.RES]'P1'RCR.GNS
$	SET FILE/OWNER='P1'_DES [.'P1'.WRK.RES]'P1'DMN.GNS
$
$ FIN:
$ 	ON WARNING THEN CONTINUE
$	SET NOCONTROL_Y
$	SET DEF 'NOD''DEV''DIR'
$!	DEASS SYS$OUTPUT
$!	DEASS SYS$ERROR
$!	DELETE/NOLOG/NOCONFIRM PRYCRE'P1'.LOG.*
$	SET CONTROL_Y
$	EXIT
$ ERR:
$!	DEASS SYS$OUTPUT
$!	DEASS SYS$ERROR
$!	TYPE PRYCRE'P1'.LOG
$	EXIT
$
$ VALPAR:
$!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
$!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
$!!!!!!!!!!!!!!!!!!!!!!!  VALIDA COMBINACION DE PARAMETROS !!!!!!!!!!!!!!!!!!!!!
$!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
$!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
$
$	MSG = ""
$
$	IF LNG .NES. "CBL" THEN -
		MSG = "Valor ''LNG' Invalido como Lenguaje"
$
$	IF SOP .NES. "VMS" .AND. SOP .NES. "DOS" .AND. -
	   SOP .NES. "VSE" .AND. SOP .NES. "MVS"  THEN -
		MSG = "Valor ''SOP' Invalido como Sistema Operativo"
$
$	IF MSG .NES. "" THEN WRITE SYS$OUTPUT MSG
$	IF MSG .NES. "" THEN EXIT
$
$	IF SOP .EQS. "DOS" THEN GOTO SOPDOS
$	IF SOP .EQS. "VSE" THEN GOTO SOPVSE
$	IF SOP .EQS. "VMS" THEN GOTO SOPVMS
$	IF SOP .EQS. "MVS" THEN GOTO SOPMVS
$	
$ SOPDOS:
$	I = 0
$ DOSVALPAR_AIO:
$	AIO = F$ELEMENT(I,",",P5)
$	I = I + 1
$	IF AIO .NES. "," THEN -
        IF AIO .NES. "VSI" .AND. AIO .NES. "VSB" .AND. AIO .NES. "DTC" THEN -
              MSG = "Combinacion invalida LNG=''LNG', SOP=''SOP', AIO=''AIO'"
$	IF MSG .NES. "" THEN WRITE SYS$OUTPUT MSG
$	IF MSG .NES. "" THEN EXIT
$	IF AIO .NES. "," THEN GOTO DOSVALPAR_AIO
$	I = 0
$ DOSVALPAR_AIU:
$	AIU = F$ELEMENT(I,",",P6)
$	I = I + 1
$	IF AIU .NES. ","   THEN -
	IF AIU .NES. "BMS" .AND. AIU .NES. "VRS" .AND. AIU .NES. "VBS" THEN -
              MSG = "Combinacion invalida LNG=''LNG', SOP=''SOP', AIU=''AIU'"
$	IF MSG .NES. "" THEN WRITE SYS$OUTPUT MSG
$	IF MSG .NES. "" THEN EXIT
$	IF AIU .NES. "," THEN GOTO DOSVALPAR_AIU
$	RETURN
$-------------------------------------------------------------------------
$
$ SOPVSE:
$	IF ( AIO .NES. "" .AND. AIO .NES. "VSI" .AND. AIO .NES. "VSB" ) .OR. -
	   ( AIU .NES. "" .AND. AIU .NES. "BMS" .AND. AIU .NES. "VRS" .AND. -
             AIU .NES. "VBS" ) THEN -
	MSG = "Combinacion invalida LNG=''LNG', SOP=''SOP', AIO=''AIO', AIU=''AIU'"
$	IF MSG .NES. "" THEN WRITE SYS$OUTPUT MSG
$	IF MSG .NES. "" THEN EXIT
$	RETURN
$-------------------------------------------------------------------------
$
$ SOPVMS:
$	I = 0
$ VMSVALPAR_AIO:
$	AIO = F$ELEMENT(I,",",P5)
$	I = I + 1
$	IF AIO .NES. "," THEN -
	IF ( AIO .NES. "" .AND. AIO .NES. "RMS" ) THEN -
	MSG = "Combinacion invalida LNG=''LNG', SOP=''SOP', AIO=''AIO', AIU=''AIU'"
$	IF MSG .NES. "" THEN WRITE SYS$OUTPUT MSG
$	IF MSG .NES. "" THEN EXIT
$	IF AIO .NES. "," THEN GOTO VMSVALPAR_AIO
$	I = 0
$ VMSVALPAR_AIU:
$	AIU = F$ELEMENT(I,",",P6)
$	I = I + 1
$	IF AIU .NES. ","   THEN -
	IF AIU .NES. "FMS" THEN -
              MSG = "Combinacion invalida LNG=''LNG', SOP=''SOP', AIU=''AIU'"
$	IF MSG .NES. "" THEN WRITE SYS$OUTPUT MSG
$	IF MSG .NES. "" THEN EXIT
$	IF AIU .NES. "," THEN GOTO VMSVALPAR_AIU
$	RETURN
$
$ SOPMVS:
$	IF ( AIO .NES. "" .AND. AIO .NES. "VSI" .AND. AIO .NES. "VSB" .AND. -
	     AIO .NES. "DTC" ) .OR. -
	   ( AIU .NES. "" .AND. AIU .NES. "BMS" .AND. AIU .NES. "VRS" .AND. -
             AIU .NES. "VBS" ) THEN -
	MSG = "Combinacion invalida LNG=''LNG', SOP=''SOP', AIO=''AIO', AIU=''AIU'"
$	IF MSG .NES. "" THEN WRITE SYS$OUTPUT MSG
$	IF MSG .NES. "" THEN EXIT
$	RETURN
