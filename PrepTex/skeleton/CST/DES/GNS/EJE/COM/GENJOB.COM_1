$ P1:
$	SET NOVER
$	IF P1 .NES. "" THEN GOTO MAIN
$	IF F$MODE() .NES. "BATCH" THEN GOTO INQ
$	WRITE SYS$OUTPUT ""
$	WRITE SYS$OUTPUT ESC,"[1m%DCL-W-INSFPRM, missing command parameters - supply all required parameters ",ESC,"[0m"
$	WRITE SYS$OUTPUT ""
$	EXIT
$ INQ:
$	INQUIRE P1 "Archivo(s) ? "
$	GOTO P1
$ MAIN:
$	IF F$MODE() .EQS. "BATCH" THEN 'BAT'
$	TIM = F$TIME()
$	HRA = F$ELEMENT(1," ",F$ELEMENT(0,":",TIM))
$	MIN = F$ELEMENT(1,":",TIM)
$	SEG = F$ELEMENT(0,".",F$ELEMENT(2,":",TIM))
$	DSG = F$ELEMENT(1,".",TIM)
$	LIS = "''HRA'''MIN'''SEG'''DSG'"
$	DIRECTORY/NOTRAILING/NOHEADER/NOOWNER/NOPROTECTION/NODATE/NOSIZE -
		/COLUMN=1/VERSION=1/OUTPUT='LIS'.LIS/EXC='LIS'.LIS 'P1'
$	IF F$FILE_ATTRIBUTES("''LIS'.LIS","ALQ") .NE.  0 THEN GOTO CONT
$	EXIT
$	
$ CONT:
$	WRITE SYS$OUTPUT ESC,"[5m",ESC,-
	"[1m		Generando...",ESC,"[0m"
$	IF P2 .EQS. "" THEN P2 = "VTI.JOB"
$	@GNSCOM:FIL 'P2'
$	GNSCOMSOP = F$TRNLNM("GNSCOMSOP")
$!	ASS JOB'LIS'.LOG SYS$OUTPUT
$	@GNSCOM:FIL GNSCOMSOP:GNSJCLHDR.COMSOP
$!Para procesar el Header
$	IF GNS$SOP .NES. "MCP" THEN EDTJOB "GNSCOMSOP:GNSJCLHDR.COMSOP"
$	ON ERROR THEN GOTO ERR
$	OPEN RECO 'LIS'.LIS
$ L1:
$	READ/END_OF_FILE=L2 RECO BUF
$	@GNSCOM:FIL 'BUF'
$	EXT = GNS$EXT
$	VER = GNS$VER
$	IF GNS$SOP .EQS. "MCP" THEN GOTO MCP
$	IF EXT .EQS. "MAP" .OR. EXT .EQS. "TXT" .OR. EXT .EQS. "COB" .OR. -
           EXT .EQS. "PGI" .OR. EXT .EQS. "PGD"                           -
							THEN EDTJOB 'BUF'
$	IF EXT .EQS. "AIO" .OR. EXT .EQS. "AIU"    .OR. EXT .EQS. "SOP" .OR. -
	   EXT .EQS. "RHL" .OR. EXT .EQS. "SRCAIU" .OR. EXT .EQS. "TXTSOP"   -
							THEN EDTJOB 'BUF'
$	GOTO L1
$ MCP:
$	WRITE SYS$OUTPUT "Procesando modulo " + BUF
$	@GNSCOM:COPYREP 'BUF'
$	SEARCH 'BUF' "GOBACK","-ALT","RETURN-CODE","SORT-RETURN","SYS011-UR",-
	"RELEASE SRT","FIO-CLO","UT-S-RPT","   PRO-FLD-"
$	ASS EDIT.LOG SYS$OUTPUT
$	ON WARNING   THEN GOTO EXT
$	ON CONTROL_Y THEN GOTO EXT
$	EDITT/COMM=GNSCOMSOP:EDTJOB.COMSOP/out='BUF' 'BUF'
$	DEASS SYS$OUTPUT
$	WRITE SYS$OUTPUT " "
$	DELETE/NOLOG/NOCONF EDIT.LOG;
$	MDEL = GNS$NOD + GNS$DEV + GNS$DIR + GNS$FIL + "." + GNS$EXT + ";-1"
$	DEL/NOLOG 'MDEL'
$	MDEL = GNS$NOD + GNS$DEV + GNS$DIR + GNS$FIL + "." + GNS$EXT
$	REN/NOLOG 'MDEL' ;-1
$	GOTO L1
$ L2:
$	CLOSE RECO
$ L3:
$   IF GNS$SOP .NES. "MCP" THEN -
	COPY/NOLOG GNSJCLHDR.COMSOP'LIS' 'P2'
$   IF F$SEARCH("*.MAP''LIS'")    .NES. "" THEN APPEND/NOLOG *.MAP'LIS'    'P2'
$   IF F$SEARCH("*.TXT''LIS'")    .NES. "" THEN APPEND/NOLOG *.TXT'LIS'    'P2'
$   IF F$SEARCH("*.AIO''LIS'")    .NES. "" THEN APPEND/NOLOG *.AIO'LIS'    'P2'
$   IF F$SEARCH("*.AIU''LIS'")    .NES. "" THEN APPEND/NOLOG *.AIU'LIS'    'P2'
$   IF F$SEARCH("*.SOP''LIS'")    .NES. "" THEN APPEND/NOLOG *.SOP'LIS'    'P2'
$   IF F$SEARCH("*.RHL''LIS'")    .NES. "" THEN APPEND/NOLOG *.RHL'LIS'    'P2'
$   IF F$SEARCH("*.SRCAIU''LIS'") .NES. "" THEN APPEND/NOLOG *.SRCAIU'LIS' 'P2'
$   IF F$SEARCH("*.TXTSOP''LIS'") .NES. "" THEN APPEND/NOLOG *.TXTSOP'LIS' 'P2'
$   IF F$SEARCH("*.COB''LIS'")    .NES. "" THEN APPEND/NOLOG *.COB'LIS'    'P2'
$   IF F$SEARCH("*.PGI''LIS'")    .NES. "" THEN APPEND/NOLOG *.PGI'LIS'    'P2'
$   IF F$SEARCH("*.PGD''LIS'")    .NES. "" THEN APPEND/NOLOG *.PGD'LIS'    'P2'
$   IF GNS$SOP .NES. "MCP" THEN -
	APPEND/NOLOG GNSCOMSOP:GNSJCLTRL.COMSOP 'P2'
$ L5:
$   IF GNS$SOP .NES. "MCP" THEN -
	DELET/NOLOG/NOCON *.*'LIS'.*
$	DELET/NOLOG/NOCON  'LIS'.LIS;*
$!	DEASS SYS$OUTPUT
$!	DELET/NOLOG/NOCON JOB'LIS'.LOG.*
$	WRITE SYS$OUTPUT ESC,"[A",ESC,"[2K"
$   IF GNS$SOP .NES. "MCP" THEN -
	WRITE SYS$OUTPUT ESC,"[1m			",-
		P2," Generado",ESC,"[0m"
$   IF GNS$SOP .EQS. "MCP" THEN -
	WRITE SYS$OUTPUT ESC,"[1m			",-
		"Modulos Actualizados para MCP ",ESC,"[0m"
$	EXIT
$ ERR:
$	CLOSE RECO
$!	DEASS SYS$OUTPUT
$	WRITE SYS$OUTPUT ESC,"[5m",ESC,-
	"[1m		ERROR................",ESC,"[0m"
$!	TYPE JOB'LIS'.LOG
