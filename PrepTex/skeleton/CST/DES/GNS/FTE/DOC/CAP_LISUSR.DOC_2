
CAPACITACIÓN GÉNESIS

MODULO IX 
GENERADOR DE PROGRAMAS LISTADORES 


LIS




Índice

Introducción					3
Definición					3
Programa					3
Autor						3
Archivo Base				3
Indicador de Sort				4
Reporte 					4
Generación					4
Código Adicional				5
 


Generador de programas listadores LIS


Introduccióneí "Introduccion"

La generación de un programa listador consta de las etapas  siguientes :

a) Definición de atributos y características del programa que se desea generar. (Comando DEFLIS )

b) Generación del programa definido en a).	( Comando GENLIS )


Definicióneí "Definicion"

El comando DEFLIS permite a través de un programa interactivo 	ingresar, modificar y eliminar las  diferentes  características de  un programa listador, estas  quedan grabadas  en un archivo con  nombre lógico RPR.

	Sintaxis:	DEFLIS


Programa

En esta opción se debe ingresar en forma obligatoria el nombre del programa a generar, de la forma :

		{sis}{nombre_libre}

Autor 

En esta opción se debe ingresar en forma obligatoria el nombre del autor del programa.

Archivo Baseeí "Arc_Base"

Se debe ingresar en forma obligatoria el nombre del Archivo Base sobre el que será emitido el reporte, en la forma : 

		{sis}{reg}

Este nombre de archivo es una especificación lógica, no física y se usa para deducir registro y FIO a utilizar.

Este archivo será recorrido secuencialmente en forma completa.

Indicador de Sorteí "Ind_Sort"

En esta opción se debe ingresar S o N para indicar si el programa tiene o no sort.

Reporteeí "Reporte"


En esta opción se debe ingresar en forma obligatoria el nombre del reporte que será emitido.

Este debe haber sido definido y generado  por  medio de los comandos DEFRPT y GENRPT respectivamente.

En base a esta definición el programa producirá un archivo de nombre lógico RPT{nombre_reporte}. El usuario puede definir este nombre lógico como lo estime conveniente, pero esto debe realizarse antes de ejecutar el programa. 

Por default el archivo físico se llama RPT{nombre_logico}.DAT.


Generacióneí "Generacion"

El comando GENLIS permite generar un Programa Listador.

A fin de producir el programa, se generan los módulos .TEM y .COB. 
La idea es permitir la incorporación de código adicional, preparado por el usuario en el modulo .TXT. Este ultimo es opcional. 

La operatoria con estos módulos es la siguiente :

	{nombre_programa}.TEM 	Contiene %INCLUDE de PREPTEX.
		  + 
	{nombre_programa}.TXT	Código adicional del usuario
		  |              ( *% IF y *% END IF + COBOL )   
		  |
		  V
	{nombre_programa}.COB   Programa Listador, COBOL puro.

Los módulos TEM y COB residen en la cuenta del usuario. El modulo TXT puede estar en la cuenta del usuario o en la librería TXT del proyecto.

Sintaxis :

           GENLIS {nombre_programa}
Código Adicionaleí "Codigo_Adicional"

A cada programa listador generado es posible incorporarle código adicional en  lugares específicos,  además del código generado automáticamente en la etapa de generación.

Este  código adicional, escrito  por el usuario, se puede incorporar, en los siguientes lugares.

- Cualquier dato que se desee definir en WORKING-STORAGE SECTION.

	  *% IF WSS
		codigo_usuario
	  *% END	

- Antes de ejecutarse un PAGE FOOTING para el {reporte}.

	  *% IF PF_{reporte}
		codigo_usuario
	  *% END	

- Antes de ejecutarse FINAL HEADING para el {reporte}.

	  *% IF FH_{reporte}
		codigo_usuario
	  *% END	

- Antes de ejecutarse FINAL FOOTING para el {reporte}.

	  *% IF FF_{reporte}
		codigo_usuario
	  *% END	

- Antes de ejecutarse un CONTROL HEADING para un {campo} del {reporte}.

	  *% IF CH_{reporte}_{campo}
		codigo_usuario
	  *% END	

- Antes de ejecutarse un CONTROL FOOTING para un {campo} del {reporte}.

	  *% IF CF_{reporte}_{campo}
		codigo_usuario
	  *% END	





- Inmediatamente antes de iniciarse el proceso

	  *% IF INI_MAIN
		codigo_usuario
	  *% END	

- Inmediatamente antes de abrir el {archivo_base}.

	  *% IF INI_INP
		codigo_usuario
	  *% END	

- Inmediatamente después de leer cada uno de los registros del {archivo_base}.

	  *% IF LUP_INP
		codigo_usuario
	  *% END	

- Inmediatamente antes de cerrar el {archivo_base}.

	  *% IF FIN_INP
		codigo_usuario
	  *% END	

- Inmediatamente antes de abrir el archivo de {reporte}.

	  *% IF INI_OUT
		codigo_usuario
	  *% END	

- Inmediatamente antes de imprimir cada línea de detalle.

	  *% IF LUP_OUT
		codigo_usuario
	  *% END	

- Inmediatamente antes de cerrar el archivo de {reporte}.

	  *% IF FIN_OUT
		codigo_usuario
	  *% END	

- Para incorporar los párrafos de uso general, escritos por el programador.

	  *% IF EOF
		codigo_usuario
	  *% END	

