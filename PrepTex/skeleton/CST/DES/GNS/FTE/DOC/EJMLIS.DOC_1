I
I
I	C O N S I S T 
I
I
I
I
I
I
I
I
I
I
I
I
I
I
I
I
I
I
I
I
I
I
I			EJEMPLO DE USO DE LA HERRAMIENTA
I
I	
I	   			   GENESIS
I
I
I
I    			    PROGRAMA LISTADOR
I
I
I
I
I
I
I
I
I
I
I
I
I
I
I
I
I
I
I
I
I				MAYO 1990
#
T01              Ejemplo Construccion de un programa LISTADOR.
P                --------------------------------------------
1 Ejemplo_genlis

	            Construccion de un programa LISTADOR.

 1. Reporte.

   1.1. Definicion del Formato (Comando DEFRPT).

	$ DEFRPT {nom-rpt}

	Ejemplo : $ DEFRPT DM2

	Nota 1:	Los  campos deben nombrarse de acuerdo a normas de Genesis.

	Nota 2: Se  pueden  especificar ciertos parametros de control en el 
		HELP de cada del campo.

		Mas informacion sobre estas normas y parametros de control,
	        ver topico RPT_reportes


   1.2. Generacion de codigo a partir de la definicion anterior.

	$ [B]GENRPT {nom-rpt}

	Ejemplo : $ [B]GENRPT DM2

	El  resultado  de  esta  generacion es una serie de modulos que son 
	incluidos  con COPY dentro del programa listador. Los generados son
	los siguientes (tomado como base el ejemplo):

	TSTRMDM2.SOP : Instrucciones MOVE  necesarias para mover los campos 
		       de los diferentes  archivos   a los campos asociados 
		       en el registro SORT.

	TSTRRDM2.SOP : Descripcion Cobol del registro SORT.

	TSTRSDM2.SOP : Ordenamiento para el SORT

	TSTRTDM2.SOP : Especificacion de las lineas que componen el reporte.

	TSTRWDM2.SOP : Definicion de variables Working Storage presentes en 
		       el Reporte.

	Si en su instalacion existe el generador de reportes utilizando
        Report Writer, se generan los siguiente modulos :

		TSTRDDM2.SOP : Declarativas Report Writer para el reporte.

		TSTRFDM2.SOP : Definicion  del  reporte  en  la  Report
			       Section del programa listador.

	Si en su instalacion existe el generador de reportes sin utilizar
	Report Writer, se generan los siguientes modulos :

		TSTRNDM2.SOP : Reg. Sort de trabajo

		TSTRODM2.SOP : Reg. Sort de trabajo

		TSTREDM2.SOP : Rutina para el manejo de impresion de lineas
                               cortes de control, etc.

 2. Programa Listador.

   2.1. Definicion (Comando DEFLIS).

	$ DEFLIS
         
	Este comando lo llevara a una pantalla interactiva que le permitira
	hacer la definicion de su programa listador. Aqui debe  especificar 
	el Nombre del Programa, Autor, Archivo Base, Indicacion de Sort,  y
	Nombre del Reporte.

	Ejemplo :

	1.- Programa	:	TSTPLDM2
	
	2.- Autor	:	CONSIST
	
	3.- Arc Base	:	TSTDM2
	
	4.- Ind Sort	:	S
	
	5.- Reporte	: 	TSTDM2
	

   2.2. Codigo Adicional (Programa listador).

        Si su programa requiere codigo adicional usted debera escribir este 
	codigo en un  archivo  aparte  cuyo  nombre  debe  cumplir  con  la
	siguiente norma :

         {nom-sist}PL{nom-reporte}.TXT

	Ejemplo : TSTPLDM2.TXT


   2.3. Generacion (Comando GENLIS).

	$ [B]GENLIS {nom-sist}PL{nom-reporte}

	Ejemplo : $ [B]GENLIS TSTPLDM2

	Este comando procesa el modulo de codigo adicional (si existe)
 	y genera el programa listador definitivo con nombre :

		 {sist}pl{rpt}.COB

		Ejemplo: TSTPLDM2.COB

	Otros   resultados producidos  por este comando: 

		el modulo  TSTPLDM2.TXT se copia al area TXT
		el modulo  TSTRDDM2.SOP se copia al area SOP
		Se genera un modulo con nombre TSTPLDM2.TEM

	Este modulo  .TEM  contiene   el  esqueleto  del  programa listador
	con una serie de 'labels' en los cuales es posible ingresar codigo
	adicional.


   2.4. Generacion de Label para escribir codigo adicional (Comando GENLAB).

	$ GENLAB {sist}PL{rpt}

	Ejemplo : $ GENLAB TSTPLDM2

	Este  comando permite generar el archivo TSTPLDM2.TXT en el cual es
	posible  escribir  codigo  adicional. Este comando es muy utilizado
	por  usuarios  que  comienzan   en el uso de esta herramienta, pues
	contiene  todos  los label's en los cuales se puede escribir codigo
	adicional. Debe  tenerse  en  cuenta  que una vez escrito el codigo
	adicional, se  debe generar nuevamente el programa con GENLIS.

 3. Compilacion y obtencion del Programa Ejecutable.

	Si  Ud. esta trabajando en ambiente VAX, siga las instrucciones del
	punto 3.1 y 3.2. Si  Ud.  esta trabajando en ambiente IBM, siga las
	instrucciones del punto 3.4.

   3.1. Compilacion.

	$ COB {sist}PL{rpt}

	Ejemplo: $ COB TSTPLDM2

	Este  comando  permite  compilar  su  programa  y  crear un archivo 
	TSTPLDM2.OBJ (solo si el programa se compilo bien).

   3.2. Linkage Edicion.

	Para  obtener el programa  ejecutable  se debe crar  un  archivo de 
	nombre  {nom-sist}PA{nom-reporte}.OPT,    que   debe  contener  las
        referencias a todas las subrutinas de tablas usadas por el programa.

	Ejemplo: TSTPLDM2.OPT 

	Este archivo debe contener lo siguiente :

	TSTPLDM2,GNSOBJ/INCLUDE=(GNSPFTAB,TABPFTAB,TSTPFTAB)

	Una  vez  creado este archivo ejecute el siguiente comando :

	$ LIN {sist}PL{rpt}

	Ejemplo : $ LIN TSTPLDM2

	El resultado de este comando es el modulo ejecutable:
	{sist}PL{rpt}.EXE  (TSTPLDM2.EXE).


   3.3	Prueba.

	Para probar el programa debe usar el comado RUN.

	$ RUN {sist}PL{rpt}

	Ejemplo : $ RUN TSTPLDM2


   3.4. Generacion y envio de JOB'S a IBM.

	Si  Ud.  esta  trabajando  en ambiente IBM, debe generar sus job's.
	Para  esto,  GENESIS  dispone  de  dos comandos que permite generar
	automaticamente  los  job  de insercion y compilacion y enviarlos a
	IBM. ( En caso que su ambiente de AIO es Datacom, Ud. debe generar
        la URT ).

   3.4.1. Generacion de la URT (Comando GENURT).

	$ [B]GENURT {sist}PL{rpt}.COB

	Ejemplo : $ [B]GENURT TSTPLDM2.COB

	El resultado de este comando es el modulo TSTCLDM2.AIO


   3.4.2. Generacion de Job's (Comando GENJOB).

	$ GENJOB {modulo-1},{modulo-2},...,{modulo-n}

	Ejemplo:

	$ [B]GENJOB TSTPLDM2.AIO,*.SOP,TSTCLDM2.AIO PL.JOB

	Permite  generar  un  job  que  insertara el programa listador, los
	modulos asociados al reporte (*.SOP) y la URT.

   3.4.3. Enviar Job's (Comando RJE).

	$ RJE {modulo}

	Este comando permite enviar a IBM los job's generados.

	Ejemplo:$ RJE PL.JOB

	Permite  enviar  el  job  que  insertara  el programa listador, los 
	modulos asociados al reporte (*.SOP) y la URT.

	Una  vez  insertados  los  modulos en IBM, debe compilarse la URT y
	luego el programa listador.
