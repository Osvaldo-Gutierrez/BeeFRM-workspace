I
I
I
I
I
I
I
I
I
I
I	CAPACITACION GENESIS
I	---------------------
I
I
I	
I
I
I
I
I	MODULO IX GENERADOR DE PROGRAMAS LISTADORES LIS
I	-----------------------------------------------
I
I
I
I
I
I
I
I
I
I
I
I
I
I
I
I
I
I							Consist.
I
I
I
I
I
I
I
1 PGM_listador
H		   Generador de programas listadores LIS
H		    
T01		   Generador de programas listadores LIS
P		   -------------------------------------
I
I			Indice
I			======
I
T2 Introduccion


	La generacion de un programa listador consta de las etapas
	siguientes :

	a) Definicion de atributos y caracteristicas del
	   programa que se desea generar.		( Comando DEFLIS )

	b) Generacion del programa definido en a).	( Comando GENLIS )

#
2 Definicion
T2 Definicion

	El comando DEFLIS permite a traves de un programa interactivo
	ingresar, modificar y eliminar las  diferentes  caracteristicas
	de  un programa listador, estas  quedan grabadas  en un archivo
	con  nombre logico RPR.

	Sintaxis:	DEFLIS
3 Programa
C	Programa

	En esta opcion se debe ingresar en forma obligatoria el
	nombre del programa a generar, de la forma :

		{sis}{nombre_libre}

3 Autor 
C	Autor 

	En esta opcion se debe ingresar en forma obligatoria el
	nombre del autor del programa.

3 Arc_Base
C	Arc_Base

	Se debe ingresar en forma obligatoria el nombre del Archivo
	Base sobre el que sera emitido el reporte, en la forma : 

		{sis}{reg}

	Este nombre de archivo es una especificacion logica, no fisica y
	se usa para deducir registro y FIO a utilizar.

	Este archivo sera recorrido secuencialmente en forma completa.

3 Ind_Sort
C	Ind_Sort

	En esta opcion se debe ingresar S o N para indicar si el
	programa tiene o no sort.

3 Reporte
C	Reporte

	En esta opcion se debe ingresar en forma obligatoria el
	nombre del reporte que sera emitido.

	Este debe haber sido definido y generado  por  medio de
	los comandos DEFRPT y GENRPT respectivamente.

	En base a esta definicion el programa producira un archivo de
	nombre logico RPT{nombre_reporte}. El usuario puede definir es-
	te nombre logico como lo estime conveniente, pero esto debe rea-
	lizarse antes de ejecutar el programa. 

	Por default el archivo fisico se llama RPT{nombre_logico}.DAT.


#

2 Generacion
T2 Generacion

	El comando GENLIS permite generar un Programa Listador.

	A fin de producir el programa, se generan los modulos .TEM y .COB. 
	La idea es permitir la incorporacion de codigo adicional, preparado 
	por el usuario en el modulo .TXT. Este ultimo es opcional. 

	La operatoria con estos modulos es la siguiente :

		{nombre_programa}.TEM 	Contiene %INCLUDE de PREPTEX.
			  + 
		{nombre_programa}.TXT	Codigo adicional del usuario
			  |              ( *% IF y *% END IF + COBOL )   
			  |
			  V
		{nombre_programa}.COB   Programa Listador, COBOL puro.

	Los modulos TEM y COB residen en la cuenta del usuario. El mo-
	dulo TXT puede estar en la cuenta del usuario o en la libreria
	TXT del proyecto.

	Sintaxis :

	           GENLIS {nombre_programa}

#
2 Codigo_Adicional
T2 Codigo Adicional

	A cada programa listador generado es posible incorporarle
	codigo adicional en  lugares especificos,  ademas del codigo
	generado automaticamente en la etapa de generacion.

	Este  codigo adicional, escrito  por el usuario, se puede
	incorporar, en los siguientes lugares.

	- Cualquier dato que se desee definir en WORKING-STORAGE SECTION.

		  *% IF WSS
			codigo_usuario
		  *% END	

	- Antes de ejecutarse un PAGE FOOTING para el {reporte}.

		  *% IF PF_{reporte}
			codigo_usuario
		  *% END	


	- Antes de ejecutarse FINAL HEADING para el {reporte}.

		  *% IF FH_{reporte}
			codigo_usuario
		  *% END	

	- Antes de ejecutarse FINAL FOOTING para el {reporte}.

		  *% IF FF_{reporte}
			codigo_usuario
		  *% END	


	- Antes de ejecutarse un CONTROL HEADING para un {campo} del
	  {reporte}.

		  *% IF CH_{reporte}_{campo}
			codigo_usuario
		  *% END	

	- Antes de ejecutarse un CONTROL FOOTING para un {campo} del
	  {reporte}.

		  *% IF CF_{reporte}_{campo}
			codigo_usuario
		  *% END	
#

	- Inmediatamente antes de iniciarse el proceso

		  *% IF INI_MAIN
			codigo_usuario
		  *% END	

	- Inmediatamente antes de abrir el {archivo_base}.

		  *% IF INI_INP
			codigo_usuario
		  *% END	

	- Inmediatamente despues de leer cada uno de los registros del
	  {archivo_base}.

		  *% IF LUP_INP
			codigo_usuario
		  *% END	

	- Inmediatamente antes de cerrar el {archivo_base}.

		  *% IF FIN_INP
			codigo_usuario
		  *% END	

	- Inmediatamente antes de abrir el archivo de {reporte}.

		  *% IF INI_OUT
			codigo_usuario
		  *% END	

	- Inmediatamente antes de imprimir cada linea de detalle.

		  *% IF LUP_OUT
			codigo_usuario
		  *% END	

	- Inmediatamente antes de cerrar el archivo de {reporte}.

		  *% IF FIN_OUT
			codigo_usuario
		  *% END	

	- Para incorporar los parrafos de uso general, escritos por el
	  programador.

		  *% IF EOF
			codigo_usuario
		  *% END	
