I
I
I
I
I
I
I
I
I
I
I	CAPACITACION GENESIS
I	---------------------
I
I
I	
I
I
I
I
I	MODULO VIII GENERADOR DE REPORTES RPT
I	-------------------------------------
I
I
I
I
I
I
I
I
I
I
I
I
I
I
I
I
I
I							Consist.
I
I
I
I
I
I
I
1 RPT_reportes
H		   Generador de reportes RPT
#
H		    
T01		   Generador de reportes RPT
P		    ------------------------
I
I			Indice
I			======
I
T2 Objetivos


	   El  producto RPT permite definir y generar reportes en base a es-
	pecificaciones de alto nivel. Para esto se  describen los siguientes
	modulos.

	a) DEFRPT

	   Permite  que un usuario final especifique sus reportes 'pintando'
	en una pantalla con FMS sus requerimientos. 

	   Lo fundamental es que estas especificaciones son formales, y uni-
	cas.

	b) GENRPT

	   Permite que  un  programador ( eventualmente un usuario ), genere
	ciertos  modulos, a partir de las especificaciones anteriores. Estos
	modulos reflejan fielmente  el  reporte 'pintado' por el usuario, ya
	que son producidos en forma automatizada.

	   Adicionalmente, existe  otra  componente  de GENESIS, el producto
	LIS, el  cual  permite generar programas listadores, a partir de los
	modulos ya generados. Ambos modulos se complementan estrechamente.

	Observaciones

	- Se da por entendido que el usuario final posee un conocimiento ba-
	sico de FMS/EDIT, a fin de usar el modulo DEFRPT.

	- Por  otra parte, los elementos de software generados estan basados
	  en el REPORT WRITER de COBOL, de ahi que es fundamental su conoci-
	  miento a fin de obtener buenos resultados con modulos RPT y LIS.
#

2 Definicion
T2 Definicion

	El  comando  DEFRPT  permite dibujar el reporte deseado a traves del 
	Form Editor de FMS.

	Sintaxis :

		DEFRPT {fil} [{reporte_base}]

	donde :

	{fil}   Corresponde a la especificacion del archivo que se ge-
		nerara conteniendo la definicion del reporte en formato .FRM

	{reporte_base} Es un reporte sobre el cual se basara el nuevo. Si se
	        omite, se asume el reporte GNSRPT.

		Aunque el uso del {reporte_base} es opcional, su utilizacion
		en forma adecuada, permite a la organizacion la ESTANDARIZA-
		CION de  los  header de todos sus reportes, en una forma ex-
		traordinariamente simple.

		La especificacion del {reporte_base} puede ser :

			- {fil} 
			- {biblioteca}/FORM={nombre_reporte_base}
	
	   El  reporte  especificado  es catalogado  por FMS con el valor de
	Form Name  en   la biblioteca de reportes del proyecto (RPT), por lo
	tanto  al dibujar un nuevo reporte basado en uno ya existente en di-
	cha  biblioteca, es necesario cambiar el nombre de reporte
	(Form Name) del nuevo reporte para no perder el antiguo. 

	   Esto se hace ingresando a traves de la opcion FORM del Form
	Editor Menu.

	   Los campos deben definirse con el nombre que tienen en la defini-
	cion de registro de cada archivo de acuerdo con  la norma :

		{reg}_{tipo}_{nombre}


	Observaciones :

  	* La unica  variacion  de  nomenclatura para  definir  un campo, por
	  una restriccion  del  producto FMS, en un formulario que este aso-
	  ciado a un campo de un registro, es que para el formulario se debe
	  utilizar "_"en vez de "-".
	
	
	  Ejemplo :

        	Campo en el formulario            : OFI_COD_SUCU
	
	  	Campo asociado en registro OFI    : OFI-COD-SUCU

#
3 GNSRPT
T3 GNSRPT
	   El reporte GNSRPT corresponde a un header standard de reporte que
	tiene predefinidos los siguientes campos :

	- Glosa de Sistema :
		La obtiene del registro con llave  'SIS' del ARCHIVO MNU del
		sistema.
		Asume  espacios  en  caso  de no existir el archivo MNU o el
		registro de sistema.

	- Glosa de Programa :
		Es suministrada automaticamente por el programa generado.

	- Fecha (dd-mm-aaaa) :
		Puede ser especificada por medio de las variables RPT-FDMA o
		RPT-FAMD  en  los  formatos  respectivos. Si estas variables
		contienen nulos, la obtiene de la variable DATE.

	- Contador de Paginas ( PAGE-COUNTER )
#

3 Menu
T3 Menu
H    RPT interpreta las diferentes opciones de [1mForm Editor Menu[0m como:
C    RPT interpreta las diferentes opciones de Form Editor Menu como:

H [1m			     Form Editor Menu[0m
H			     Phase Choise:  [4m{opcion}[0m
H (0	lqqqqqqqqk(B
H (0	x(B Form   (0x(B  Caracteristicas del reporte
H (0	x(B Layout (0x(B  Dibujo de texto y campos
H (0	x(B Assign (0x(B  Especificaciones de control y atributos de campos
H (0	x(B Data   (0x(B  Especificacion de secciones del reporte
H (0	x(B Order  (0x(B  No usado por RPT
H (0	x(B Test   (0x(B  Vision del reporte
H (0	x(B Exit   (0x(B  Fin de la sesion FMS/EDIT
H (0	mqqqqqqqqj(B
C
C			     Form Editor Menu
C			     Phase Choise:  {opcion}
C	
C	Form   		Caracteristicas del reporte
C	Layout 		Dibujo de texto y campos
C	Assign 		Especificaciones de control y atributos de campos
C	Data   		Especificacion de secciones del reporte
C	Order  		No usado por RPT
C	Test   		Vision del reporte
C	Exit   		Fin de la sesion FMS/EDIT
C	
4 Form
T4 Form
	En Form se especifica basicamente el nombre del reporte y el
	ancho de la pantalla. El resto de los atributos no se usan.

H                   [1m         Assign Form Attributes [0m
H               Form Name: [4m{nombre reporte}                 [0m
H               Help Form Name: [4mTexto de Documentacion      [0m
C                            Assign Form Attributes
C               Form Name: {nombre reporte}                 
C               Help Form Name: Texto de Documentacion      
		
H                            [1m  Screen Width:[0m[4m3[0m
C                              Screen Width:
                               1. As Is
                               2. 80 Columns
                               3. 132 Columns
4 Layout
T4 Layout

	En Layout se especifica graficamente, a traves de un dibujo,
	la ubicacion de los textos y campos dentro del reporte que se
	generara.

	El reporte generado correspondera a una imagen exacta de su
	definicion  considerando la  posicion  relativa de las lineas
	dibujadas.

	Los caracteres de insercion que permite FMS en la especifica-
	cion de campos son traspasados igualmente al programa COBOL en
	la medida de que sean validos para el, de otro modo son elimi-
	nados.

	Los textos se especifican escribiendo literales en modo TXT.

	Los campos  se especifican  en modo FLD, dependiendo  de su
	tipo, de la siguiente forma:
	
	Especificacion de un campo alfanumerico de largo n

	  PIC X(n)         (0qq>(B      XXXXX.........XXX
H (0		                    mqqqqqq (Bn (0qqqqqqj	(B
C			            !------ n ------!

	  Especificacion de un  campo numerico compuesto de n enteros
	y m decimales	

	  PIC 9(n)V9(m)    (0qq>(B      9999....999,9999....999
H (0			            mqqq (Bn (0qqqj(B (0mqqq (Bm (0qqqj(B
C			            !--- n ---! !--- m ---!
#
4 Assign
T4 Assign
	  En Assign se especifican los atributos de cada campo.

	  a) Especificacion del nombre del campo 

H		Field Name: [4m{nombre campo}        [0m
C		Field Name: {nombre campo}

	     Teniendo en cuenta la siguiente Norma :

	     {nombre campo} = {reg}_{tipo}_{nombre libre}

	     El sistema reconoce los siguientes tipos de {reg}
	     como especiales:

		WSS:	Campo perteneciente a la Working Storage
			Section ( se genera automaticamente su
			definicion )

		SUM:	Campo para SUMA.

	  b) Edicion de campos numericos.

	     - 	Para generar un campo numerico con picture ZZZ......ZZZZ
		se deben  marcar  los atributos RIGHT JUTIFY, ZERO FILL,  
		ZERO SUPPRESS y CLEAR CHARACTER = 0.

	     - 	Para generar un campo numerico con picture ZZZ......ZZZ9
		se deben marcar los atributos FIXED DECIMAL, ZERO FILL, y 
		ZERO SUPRESS y CLEAR CHARACTER = 0.

	  c) Especificacion de valores de inicializacion :

	     Si el nombre del campo comienza con WSS se define como
	     perteneciente  a  la  Working  Storage  Section, y  es
	     inicializado con el  valor de defecto .Cero o espacios
	     segun corresponda.

#
	  d) Especificacion de control del campo y otras caracteristicas

	     En el HELP de cada campo se especifica con esta sintaxis :
H(0
H qwqqq NS qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqwq>
H  x                                                                         x
H  tqqq SUM qqqqq (B{EXPRESION SUM} (0qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqu
H  x                                                                         x
H  mwqqqqw(B{PS}(0wqqqwwqqqqqqqqqqqqqqqqqqqqqqqwqwqqqqqqqqqqqqqqqqqqqqqqwqwqqqqwqj
H   m GI j    t A ux                       x x                      x x    x
H             m D jmq CH (B{L1} : {L2} (0wqqqqwj mq CF (B{L3} : {L4}(0wqqqqwj m NC j
H                                    m NP j                   m NP j(B
H (B
! Aqui se debe acoplar el dibujo de sintaxis
C
C
C
C
C
C
C
C
C
C
C
C
C
C
C
C
C
C
C
C
C
	donde :

	NS   : No inclusion en el archivo sort 

	SUM  : Especificacion de campo SUM ( El tipo de {reg} en nombre
	       de campo en 'Field Name:' debe ser SUM )

	GI   : Indicador de GROUP INDICATE

	{PS} : Prioridad del campo en el sort

	A    : Clasificacion ascendente del campo en el sort
	       (valor de defecto)

	D    : Clasificacion descendente del campo en el sort 

	CH   : Especifica que el campo es CONTROL HEADING

	{L1} : Indica, con un numero entero, la linea inicial del rango 
	       en el dibujo que compone el CONTROL HEADING

	{L2} : Indica, con un numero entero, la linea final   del rango
	       en el dibujo que compone el CONTROL HEADING

	NP   : Para un  CONTROL HEADING significa que el rango de lineas
	       asociadas en el dibujo, seran impresas en una nueva pagina.
	       Para un  CONTROL FOOTING significa que el rango de lineas
	       asociadas en el dibujo seran impresas y posteriormente se
	       saltara una pagina.

#
	CF   : Especifica que el campo es CONTROL FOOTING

	{L3} : Indica, con un numero entero, la linea inicial del rango
	       que compone el CONTROL FOOTING

	{L4} : Indica, con un numero entero, la linea final   del rango
	       que compone el CONTROL FOOTING

	NC   : No impresion del campo . Opcion COLUMN de REPORT eWRITER.

		Los parametros entre "{" y "}" exigen un valor proporcionado
		por el usuario.
		
		Los parametros opcionales estan indicados entre "[" y "]".
	
			
5 Ejemplos
C	Ejemplos
 Default Value:
H [4m                                                                                [0m
H Help Text:
H [4m 2 CF 16:17                                                                     [0m
C
CHelp Text:
C 2 CF 16:17

	- ( 2 )   tiene la segunda prioridad en el sort
	-         asume clasificacion ascendente
	-	  no es CONTROL HEADING ( no aparece CH {L1} : {L2} )
	- ( CF )  es CONTROL FOOTING
	- (16:17) despues de producirse un corte de control de este 
		  campo se imprimiran las lineas 16 y 17 del dibujo

 Default Value:
H [4m                                                                                [0m
H Help Text:
H [4m 1 D CH 11:14  NP CF 16:17                                              [0m
C
CHelp Text:
C 1 D CH 11:14  NP CF 16:17

	- ( 1 )     primera prioridad en el sort
	- ( D )     clasificacion descendente
	- ( CH )    es CONTROL HEADING
	- ( 11:14 ) antes de producirse  un corte de  control de este 
		    campo se imprimiran las lineas 11 a 14 del dibujo
	- ( CF )    es CONTROL FOOTING
	- ( 16:17 ) despues de producirse un corte de control de este 
		    campo se imprimiran las lineas 16 y 17 del dibujo
#
4 Data
T4 Data
	En cada Named Data se especifica el rango de lineas que abarca
	cada  una  de las diferentes  secciones de  un reporte que usa
	REPORT WRITER.

		PAGE HEADING

		PAGE FOOTING

		FINAL HEADING

		FINAL FOOTING

		DETAIL LINES {nombre1}

		DETAIL LINES {nombre2}

		etc, etc ...

5 Ejemplos
C	Ejemplos
				  Named Data

H 1   [7mName[0m [4mPAGE HEADING                 [0m
H [4m 1:7                                                                            [0m
C 1   Name PAGE HEADING                 
C 1:7                                     


H 2   [7mName[0m [4mPAGE FOOTING                 [0m
H [4m 8:8                                                                            [0m
C 2   Name PAGE FOOTING                 
C 8:8


H 3   [7mName[0m [4mFINAL HEADING                [0m
H [4m 18:19                                                                          [0m
C 3   Name FINAL HEADING
C 18:19


H 4   [7mName[0m [4mFINAL FOOTING                [0m
H [4m 18:19                                                                          [0m
C 4   Name FINAL FOOTING
C 18:19


H 5   [7mName[0m [4mDETAIL LINES DL01            [0m
H [4m 12:12                                                                          [0m
C 5   Name DETAIL LINES DL01            
C 12:12

H 6   [7mName[0m [4mDETAIL LINES DL02            [0m
H [4m 14:15                                                                          [0m
C 6   Name DETAIL LINES DL02            
C 14:15

	Se puede omitir el nombre para una DETAIL LINE, para la que se
	asume el nombre del reporte.

#
4 Test
T4 Test

	Consiste en ver la estructura del reporte con la asignacion
	de  atributos  apropiados  para  cada  campo ( Zero Suppress,
	ubicacion del punto decimal, etc... )

4 Exit
T4 Exit

	Indica que se desea dar termino al proceso de definicion
	del reporte. El sistema confirma si se desea  grabar  esta
	definicion,  si  se contesta  afirmativamente se creara un
	archivo:

		{fil}.RPT

2 Generacion
T2 Generacion

	El comando GENRPT permite generar los diferentes modulos REPORT
	WRITER que especifican un reporte.

	Genera modulos REPORT WRITER que seran usados por los programas
	listadores que emitan el reporte.

	Sintaxis :

  	   GENRPT {fil}
	
	Donde  {fil} corresponde a la especificacion de un archivo
	que contiene la definicion de un reporte.

	Asume extension .RPT

#
	Modulos generados :

		$ {sis}R%{nombre reporte}

	Para la definicion y generacion del programa listador, vease
	topico LIS.

3 {sis}RW{rpt}
C	{sis}RW{rpt}

	El modulo {sis}RW{rpt} contiene la definicion de las variables
	WSS definidas para el Reporte.

3 {sis}RF{rpt}
C	{sis}RF{rpt}

	El modulo {sis}RF{rpt} contiene la definicion del reporte en la
	REPORT SECTION de COBOL.

3 {sis}RT{rpt}
C	{sis}RT{rpt}

	El modulo {sis}RT{rpt} contiene la definicion de las
	lineas que especifican el reporte en la REPORT SECTION.

3 {sis}RD{rpt}
C	{sis}RD{rpt}

	El modulo {sis}RD{rpt} contiene las Declarativas
	REPORT WRITER necesarias para el Reporte.

3 {sis}RS{rpt}
C	{sis}RS{rpt}

	El modulo {sis}RS{rpt} contiene el ordenamiento de
	campos para el SORT ( si existe ) asociado al reporte.

3 {sis}RR{rpt}
C	{sis}RR{rpt}

	El modulo {sis}RR{rpt} contiene la descripcion de
	registro COBOL para el archivo de SORT ( este registro
	siempre	se genera, en la medida que existan campos que no
	tengan la opcion NS, independiente de si existe SORT o no,
	asociado al Reporte ).

3 {sis}RM{rpt}
C	{sis}RM{rpt}

	El modulo {sis}RM{rpt}  contiene todas las instruciones
	MOVE necesarias para mover los campos de los distintos archivos
	a los campos asociados en el registro SORT, que es de donde el
	REPORT WRITER los 'toma' para su impresion.

#
2 Compatibilidad
T2 Compatibilidad

	Un reporte para REPORT WRITER VAX o IBM, presenta las siguientes
	diferencias, las cuales es importante tener presente.

3 Declarativas
T3 Declarativas.

	En VAX si existe la declarativa para la DETAIL LINE.
	En IBM no existe la declarativa para la DETAIL LINE.
	En VAX no existe la declarativa para el PAGE HEADING.
	En IBM si existe la declarativa para el PAGE HEADING.

	VAX no permite hacer PERFORM dentro de una declarativa.
	IBM si permite hacer PERFORM dentro de una declarativa.

	Se recomienda, cuando se requiera, programar en labels preptex
	especificos el codigo no compatible. Ejemplo :

	*% IF CH_OPC_IIC_IOPC
	           MOVE 'COL' TO TAB-COD-SIST.
		   MOVE 'CDC' TO TAB-COD-TTAB IN TAB.
		   MOVE OPC-COD-TIOP TO TAB-COD-CTAB IN TAB.
	*% IF PGM_VAX
		   CALL 'GNSPFTAB' USING FIO-VARI TAB
	*%  ELSE
		   PERFOM GNS-FIO-TAB.
	*% END
	*% END

3 Variables
T3 Variables

	En IBM es posible alterar los valores a variables del REPORT WRITER,
	como por ejemplo,  PAGE-COUNTER  y  LINE-COUNTER. Esto en VAX no se 
	permite.

!Se debe incorporar a .prt, por mientras solo se deje en Help
H3 Otros
H
H	Consideraciones Sobre Version GENRPT VAX-IBM Compatible.
H	--------------------------------------------------------
H
H   1.-	Campos SUM.
H
H	En ambas versiones se aceptan campos SUM solo en CONTROL FOOTING
H	report group.
H
H	En VAX la expresion asociada a un campo SUM debe terminar
H	con un "."
H
H   2.-	Caracteres de edicion para fechas.
H	Si se desea poner la variable RPT-FDMA con caracteres de edicion
H	Es conveniente usar "/" o "." o "B" pues estos caracteres son 
H	compatibles VAX-IBM, no asi el caracter "-", en IBM genera un
H	blanco y en VAX arroja errores de compilacion.
H	Si se desea que aparezcan "-" separando las fechas, se deben poner
H	los campos hijos de RPT-FDMA como campos individuales.
H
H	
H   3.- No olvidar que :
H        En VAX las declarativas no permiten hacer PERFORM, a diferencia
H        de IBM.
H	 Esto presenta problemas por Ejemplo en la busquedas de codigos
H        en cortes de control, etc.
H
H   4.-	Es conveniente que los programas listadores previo a hacer un 
H        ACCEPT, depliegen un mensaje con con el dato a recibir, pues
H        ademas de servir como documentacion, en VAX los programas
H        listadores pueden ser ejecutados desde el terminal.
H
H   5.-	Existe diferencia con los caracteres de insercion de VAX-IBM.
H
H	Ejemplo :
H
H		IBM ( Valido )		VAX ( No Valido )
H
H		PIC XX.XXX.XX
H		SOURCE CTB-NUM-ICTB IN SRT.
H
H   6.-	En VAX no se deben modificar las variables standar de REPORT WRITER
H	Ejemplo :
H
H	
H		PAGE-COUNTER
H		LINE-COUNTER
H
H	A las cuales en IBM es posible darle valores para asi por ejemplo
H	simular una nueva pagina.
H
H	Ej :
H
H	MOVE 66 TO LINE COUNTER. ( IBM ok, VAX error de compilacion )
H
H
H   7.- En VAX existen declarativas para la linea de detalle no asi en IBM.
H
H       Es importante tomar en consideracion los puntos anteriores, si se
H       piensa en una posible conversion de los sistema que actualmente
H       se estan construyendo en IBM a VAX.
H
H2 Restricciones
H
H	GENRPT no genera declarativas para seciones especificadas en la
H	NAMED DATA de acuerdo a la siguiente tablas :
H
H
H	Generacion VAX		!		Generacion IBM
H	======================================================
H	PH			!
H				!		DL
H
H2 Fechas
H
H	Las Fechas en los reportes deben definirse en la siguiente
H	forma :
H
H                        XX XX XXXX
H                        ^  ^  ^ ^
H                        !  !  ! !_
H                       DIA !  ! ANO
H                          MES !
H                            SIGLO
H
H2 Numeros
H	Los numeros en los reportes deben definirse en la siguiente forma :
H
H	- para editar : ZZZ.ZZZ,ZZ  o  ----.---,--
H
H	  el campo se debe dibujar como 999.999,99 o NNNN.NNN,NN
H	  respectivamente y usar los siguientes atributos :
H
H	  RIGHT JUSTIFY / ZERO FILL / ZERO SUPPRESS / CLEAR CHARACTER 0
H
H	- para editar : ZZZ.ZZ9,99  o  ----.--9,99
H
H	  el campo se debe dibujar como 999.999,99 o NNNN.NNN,NN
H	  respectivamente y usar los siguientes atributos :
H
H	  FIXED DECIMAL / ZERO FILL / ZERO SUPPRESS / CLEAR CHARACTER 0
H
H2 Nuevas
H
H	1.- Fecha de generacion para cada modulo.
H
H	2.- de la sintaxis en la DATA se obtiene :
H
H	  a)
H
H	    PAGE HEADING
H	   {l1} : {l2}
H
H	   la primera linea para el page heading se obtiene de {l1}
H
H	   la primera linea de detalle se obtiene de {l2} + 1
H
H	  b) Es posible especificar en la DATA el limite de paginas de la
H	    forma:
H
H	    PAGE LIMIT
H	    {l3}
H
H	    Si no se especifica asume 66.
H
H	3.- Es posible especificar un campo no numerico con atributo
H	    RIGHT_JUSTIFIED y es definido asi en SRT o WSS.
H
H	4.- PAGE COUNTER aparece cualificado al reporte, para programas
H	    con multiples reportes.
H
H
H	5.- Los campos WS* con autotab, se definen con su valor de default
H	    del dibujo. Sin autotab se definien con valores de default ZEROES
H	    o SPACES segun su picture.
H
H
H	6.- Eliminacion de moves redundantes para campos SRT ( BOLD ).

