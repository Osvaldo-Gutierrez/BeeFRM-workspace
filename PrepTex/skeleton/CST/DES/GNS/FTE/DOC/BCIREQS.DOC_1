	REQUERIMIENTO ANTECEDENTES EVALUACION GENESIS
	---------------------------------------------



	01) APLICABILIDAD 

	    GENESIS esta  orientado a los Sistemas Administrativos PERMANENTES,
	    tipicos de una  Unidad de Desarrollo y Mantencion de Sistemas, con
	    especial enfasis en los Sistemas Interactivos.

	    La  cobertura  del  Ciclo de Vida de un sistema es muy amplia, par-
	    tiendo  desde la Definicion Inicial hasta la Explotacion Interacti-
	    va  de  los sistemas, incentivando una activa participacion de los 
	    Usuarios Finales, en cada fase.

	    No hay restriccion para el tamano de los sistemas. Es posible cons-
	    truir desde UN PROGRAMA SIMPLE,  hasta  VARIOS SISTEMAS INTEGRADOS,
	    de alta COMPLEJIDAD, como TABLAS-CLIENTES-DEUDORES-COLOCACIONES.

	    Es  posible  tener INTERFASES con todo tipo de sistemas existentes
	    y nuevos,  con  la unica condicion de que sus datos se puedan acce-
	    der desde COBOL.  Hay  LIBERTAD para hacer todo tipo de MEZCLAS de 
	    metodos de acceso ( VSAM, SAM, DATACOM, DB/2, etc ... ).  De hecho
	    nos estamos conectando a :

		- GARANTIAS
		- CUENTAS CORRIENTES
		- CONTABILIDAD
	        - SAFE Batch y Realtime

	    Actualmente NO PROVEE : 

		- Apoyo  al  Centro  de  Informacion, con lenguaje de Querys.

		- Apoyo importante al desarrollo de sistemas Batch, con progra-
		  mas  Pareadores  o Actualizadores Batch. Al respecto, provee
		  rutinaje de  I/O que aisla a los programas de un ambiente es-
	          pecifico de manejo de Archivos o Bases de Datos.

		El que GENESIS en el futuro apoye los aspectos anteriores solo
	        dependera  de  los requerimientos que tengamos al respecto. No 
	 	existen limitaciones tecnicas.

	        A manera de ejemplo,  la AFP SUMMA nos ha solicitado el manejo 
	        de programas batch,  tipo Pareadores o Actualizadores. Por con-
	    	trato, nos hemos comprometido a proveer una solucion a este re-
		querimiento en un plazo maximo de un ano.

	02) REQUERIMIENTOS HARDWARE Y SOFTWARE

	    a)  Computador VAX, toda la familia, incluyendo MicroVAX 2000,
		Sistema Operativo VAX/VMS.

		FMS          : Manejador de Formularios. DIGITAL.
		PREPTEX      : Preprocesador de Textos. SONDA.
		COBOL/VAX    : Compilador estandar. DIGITAL.
		BASIC/VAX    : Compilador estandar. DIGITAL.
		RJE          : Facilidades de Hardware y Software para
			       Remote Job Entry. DIGITAL-SONDA.

	    b)  Conexion a Computador IBM, familia 43XX o 30XX, Sistemas
	        Operativos DOS/VSE o MVS.

		BIMSBMT      : Submision al Batch desde CICS. BINARIA. (DOS)
		CICSPRINT    : Submision al Batch desde CICS. IBM. (DOS-MVS)
		VSAM         : Manejador de Archivos. IBM.
		COBOL/CICS   : Compilador estandar. IBM.
		CMS o VOLLIE : Editor y Compilaciones. IBM o ADR.
		RJE          : Facilidades de Hardware y Software para
			       Remote Job Entry. IBM.
		Bibliotecas  : Source : IBM, o Librarian : ADR
	  	             : Relocatable. IBM.
		 	     : Core Image. IBM.

	03) CARGA AL SISTEMA OPERATIVO. 

	    Hay tres instancias de comunicacion con los Sistemas Operativos :

	    a) Etapa Desarrollo,  computador VAX.

	       La carga del sistema operativo es minima, pues la VAX se utiliza
	       basicamente en edicion  y preparacion de trabajos para enviar al
	       IBM.

	    b) Etapa Desarrollo,  computador IBM.

	       La carga  es  la  proveniente de las Compilaciones Batch, que no 
	       tienen  caracteristicas  especiales  que sobrecarguen al Sistema 
	       Operativo. 

	       Estas compilaciones en IBM se pueden minimizar, pues hemos imple-
	       mentado  la  facilidad  de  compilar  en  VAX,  bajo un ambiente 
	       VAX/IBM COMPATIBLE,  con  la cual es posible DEPURAR un programa 
	       para IBM en el computador VAX,  con  todas las ventajas que esto
	       significa en cuanto a COSTOS.

	       Ademas,  el hecho que los programas sean COMPATIBLES faculta al
	       disenador de elejir donde IMPLANTAR el sistema.

	    c) Etapa Explotacion, computador IBM.	    

	       En casos muy especiales podemos tener un programa COBOL de un ta-
	       mano del orden de 130 K. Normalmente los programas seran de tama-
	       no menor a 100 K.

	04) COBERTURA APLICACIONES BCI

	    Estimamos que GENESIS permite cubrir TODAS las Aplicaciones Adminis-
	    trativas,  Operativas y de  Gestion del banco. A manera de ejemplo, 
	    basta analizar los sistemas que hemos construido para el banco.

	05) DOCUMENTACION DEL PRODUCTO

	    A partir del 1ro de Agosto de 1988  hemos  iniciando el Proyecto de
	    Documentacion de GENESIS, como parte del Contrato de Arrendamiento,
	    suscrito con la AFP SUMMA.

	    la documentacion estara formada por :

		- Help Online
		- Manual del Usuario
		- Folleto Ventas  

	    Esta documentacion estara disponible antes de fin de ano. Les hare-
	    mos  llegar versiones de cada documento, en la medida en que se va-
	    yan construyendo. 

	06) SOPORTE TECNICO PREVIO Y POSTERIOR

	    Estamos en condiciones de entregar Capacitacion en cualquier etapa.
	    Al respecto, como parte de nuestro Contrato mencionado  antes,  es-
	    tamos realizando  Charlas  y  Cursos, durante Septiembre y Octubre,
	    segun se detalla a continuacion :

	    a) Nivel Gerencial

		- 2 sesiones de 2 horas cada una.

		  Descripcion General del GENESIS.

                - Fecha : 1ra semama.
			
	    b) Nivel Usuario Final

		- 5 sesiones teorico/practicas de 2 horas cada una.

		  Ambiente de Trabajo. Uso de MAIL y HELP.
		  Definicion Pantallas y Reportes.
		  Operacion de Menus y Programas Batch.
		  Creacion y Mantencion Tablas de Codigos.
		  Resumen y Control de Privilegios.
			  
		- Fecha : 2da semama.

	    c) Nivel Computacional

		- 10 sesiones teoricas  de 2 horas cada una.
		- 10 sesiones practicas de 2 horas cada una.

		  Descripcion de cada modulo.
		  Ejemplos practicos de utilizacion.

		- Fecha : 1 sesion diaria en 3ra, 4ta, 5ta y 6ta semana.

	    Adicionalmente a la Capacitacion ofrecemos un Soporte Tecnico ade-
	    cuado,  para lo cual contamos con el apoyo de SONDA, a fin de pre-
	    parar  personal  de  su dependencia, que sirva de respaldo y even-
	    tualmente  de  complemento a nuestra labor.  De  una u otra forma 
	    existira el  Soporte  Tecnico que un producto de la naturaleza de 
	    GENESIS requiere.

	07) HERRAMIENTAS DE AYUDA A GRUPOS DE TRABAJO EN PARALELO
		
	    GENESIS, a diferencia de otros productos, reconoce los siguientes
	    aspectos, que estimamos FUNDAMENTALES, para el exito de un proyec-
	    to de construccion de sistemas :

	    - La existencia de un Grupo de Trabajo, que necesita COORDINACION.

	      Para implementar esta Coordinacion, GENESIS reconoce la existen-
	      cia de dos tipos de personas, en el proyecto :
		
	      JDP : Jefe de Proyecto
	
		    Que define, asigna, eventualmente construye, y aprueba o
	            rechaza componentes del sistema.

	      PGM : Programador

		    Que eventualmente define, recibe, construye y entrega 
	            componentes del sistema.

	      Todo lo  anterior  es  apoyado COMPUTACIONALMENTE, con areas espe-
	      ciales en disco,  autorizaciones y COMANDOS, para que cada uno de-
	      sarrolle eficientemente sus actividades.

	    - Control de Calidad y Control de Versiones de Componentes.

	      Para apoyar lo anterior GENESIS, define distintas areas de almace-
	      namiento y controles asociados, para ir trasladando una componen-
	      te segun el estado de avance y revision en que se encuentre, con-
	      trolando que nunca existan dos versiones de una componente en un 
	      mismo estado.

	    - Control de Trabajo pendiente y definitivo.

	      Existen  areas predefinidas y estandares para ir dejando las com-
	      ponentes definitivas del sistema. Solo la categoria JDP puede ac-
	      tualizar. Otras categorias ( PGM, OPR ) pueden leer solamente.

	      Los programadores  tienen  un  ambiente propio de trabajo, donde 
	      crean  o modifican las componentes del sistema, las que son tras-
	      pasadas  al  JDP para revision, correccion u observacion. El JDP
	      en todo momento puede conocer la  cantidad  de trabajo pendiente 
	      de cada persona,  incluso  la propia. De esta forma puede reasig-
	      nar trabajos a fin de no sobrecargar a algun PGM en particualar.

	08) NORMALIZACION Y ESTANDARIZACION

	    GENESIS nacio de aplicar, en forma sistematica, normas y estanda-
	    res.  Las tipicas etapas que hemos seguido en el proceso de auto-
	    matizacion del desarrollo son :

		- NORMALIZACION

		- PARAMETRIZACION

		- GENERALIZACION
	
		- y finalmente AUTOMATIZACION 
	    
            Que el GENESIS exiga la existencia de Normas no significa que estas
	    sean inamovibles.  De hecho,  la version actual de GENESIS, ha sido 
	    adaptada a las Normas del BCI,  cuando estas existian, o se ha basa-
	    do en normas nuestras que hemos  entregado  al BCI insertas en nues-
	    tros desarrollos. 

	    En todo caso,  estamos llanos a estudiar cualquier adaptacion sobre 
	    el tema,  ya  que  la  implementacion de las Normas en GENESIS esta 
	    siempre  suficientemente  aislada y parametrizada por lo  que no es
	    dificil para nosotros realizar modificaciones.

	09) FACILIDAD DE USO

	    GENESIS trabaja basicamente en una VAX, que provee en forma natural
	    un ambiente de trabajo muy amistoso.  Las componentes de GENESIS ha-
	    cen que este ambiente sea aun mas amistoso, de ahi que las facilida-
	    des de uso son muy altas.

	    Sin embargo, nosotros hemos detectado que el nivel de conceptos que
	    utiliza GENESIS,  esta por sobre el nivel de la programacion normal,
	    por lo que estimamos se requiere una  Documentacion de muy buena ca-
	    lidad, con la que creemos que  no existira ningun problema en utili-
	    zar el producto.  Como  ya  anticipamos, se esta iniciando en pocos
	    dias la completacion de dicha documentacion.

	10) CALIDAD SOFTWARE GENERADO

	    La Calidad del sofware generado esta fuera de toda duda :

	    a) CONFIABILIDAD

	       GENESIS promueve fuertemente la MODULARIDAD de los sistemas.
             
	       MODULOS GENERICOS

               Existen muchos Modulos Genericos, que realizan funciones espe-
	       cificas, como 'editar un campo numerico', 'validar una fecha',
               'validar un digito verificador', etc ... Estos modulos se ha-
	       cen una sola vez,  y  despues  de  una  adecuada  depuracion 
	       NO PRESENTAN FALLAS ... y se pueden usar con confianza.

	       MODULOS GENERADOS

	       Ademas de los Modulos Genericos existen Modulos GENERADOS, que
               en funcion de parametros,  a  partir  de un ESQUELETO, se cons-
	       truyen para una funcion especifica. De nuevo la misma idea, se
	       construyen  los  esqueletos ...  se  depuran y despues tampoco
               presentan fallas. 

	       Los tipicos modulos de este tipo son :

			Funciones de Input/Output 
			Manejo de Pantallas

	       OTROS MODULOS

	       Ademas,  tambien existen Esqueletos de Programas, revisados, y 
	       depurados - SIN ERRORES,  a  los  cuales se adiciona un modulo,
	       que llamamos Codigo Adicional,  con la programacion especifica
	       y complementaria  para  la construccion de un programa particu-
	       lar. Los errores,  de existir,  hay que buscarlos en dichos mo-
	       dulos de Codigo Adicional.  Por otra parte, los errores que se
	       cometen son tipicos, por lo que se sabe rapidamente en que par-
	       te del Codigo Adicional revisar.

	       Finalmente,  ante cualquier anomalia que eventualmente presente
	       un Modulo Generico o un Modulo Generado ocurriran dos cosas :

			- El problema  se  DETECTARA FACILMENTE, pues en ambos
			  casos  la  anomalia sera SISTEMATICA,  ya sea porque
		 	  se  trata de un Modulo Generico utilizado por muchos
			  programas  o de un Modulo Generado, siempre generado
			  de la misma forma.

		        - El problema  se corregira en forma simple, pues solo
                          hay  que  corregir UN MODULO GENERICO O UN ESQUELETO,
	                  y regenerar los programas y/o modulos afectados. 

		  	  Incluso  normalmente  podran coexistir programas con 
			  modulos antiguos y nuevos,  con lo cual el cambio se
			  puede hacer en forma planificada y sin trastornos.

            b) COMPLETITUD.

               No tenemos claro el alcance de este punto. Favor aclarar.

	    c) EFICIENCIA

	       Con GENESIS no existen problemas de eficiencia, ya que genera
	       programas :
		
		- COBOL compilado ( no hay lenguaje interpretado )
                - Muy modulares ( Un programa es una coleccion de modulos )
                - Estructura estandarizada, lo que permite eventualmente la
                  correccion de problemas en forma sistematizada.

	       Estimamos que no es equitativo dejarse llevar por algunos proble-
               mas presentados por el banco sobre el tema en :

		- Programa Calculo Deudas REALTIME,  ya que la funcionalidad de
                  este excede con creces al estandar para un programa.

	        - Rutinas de Input/Output ( FIOS ), por antecedentes entregados
                  en nuestro memo respuesta.
	
	11) PRODUCTIVIDAD

	    GENESIS provee un aumento significativo de la Productividad del
            Desarrollo y la Mantencion de los Sistemas. Aunque no tenemos un
            analisis comparativo ni cifras al respecto, detallamos a continua-
            cion nuestro trabajo :

	    Desde 01/03/87 y hasta el 30/10/1988, aproximadamente, tendremos 
	    construido :

		    SISTEMA DE TABLAS Y PARAMETROS
		    SUBSISTEMA SUPER
	    	    SISTEMA GENERAL DE CLIENTES
            	    SUBSISTEMA INFORMES
            	    SISTEMA DE DEUDORES
   	    	    SISTEMA DE COLOCACIONES
	            SISTEMA DE LINEAS DE CREDITO	

	            SISTEMA DE CONTABILIDAD ( AFP SUMMA )
 	            SISTEMA GENESIS-DATACOM-MVS

	    con el siguiente equipo tecnico : 

		    1 1/2 Jefe de Proyecto
                    2     Analistas-Programadores
                    3 1/2 Programadores

	    Todo lo anterior en CICS pseudo-conversacional, con una nueva 
	    Base de Datos, Sistemas Realtime, DOS-MVS Compatibles.

	    Hay dos factores claves en el aumento de Productividad :

		a) Uso de Componentes GENERICAS, que NO es necesario CONSTRUIR,
	           cada vez que se empieza un nuevo sistema, por ejemplo :
			
			Programas Productos :

			- Menus e Interfaz Usuario-Sistema
			- Tablas Internas 
			- Contro Interactivo de Programas y Procesos Batch

			Rutinas :

			Existe un CONJUNTO CRECIENTE de rutinas de uso general,
			que pueden ser utilizadas por los nuevos sistemas, o por
			los antiguos, cuando se les hace mantencion, por ej :

			- Validacion Digito Verificador
			- Validacion Identificacion de Clientes
			- Validacion Fechas
			- Validacion, Edicion Campos Numericos
			- Acceso de Tablas Generales e Internas
			- Conversion de Monedas
			- Busqueda de Codigos
			- Busqueda de Glosas
			- Manejo de Teclas Especiales
			- etc, etc ...

			Todos los productos y rutinas anteriores funcionan en 
			forma absolutamente STAND ALONE, ( no requieren nada de
			GENESIS ), tanto en el IBM como en la VAX ... 

			y SOLO hay que USARLAS 

		b) Todo el trabajo REPETITIVO esta envasado en ESQUELETOS, y los
		   Usuarios de GENESIS ya  no  tienen que andar programando Des-
		   pliegues de Mapas, Captura y Proceso de Comandos del Usuario,
		   Manejo de Confirmacion, Manejo de Archivo Base, Proteccion
		   y Desproteccion de Campos, Limpieza de Campos, Manejo de 
		   Mensajes, Manejo de Campos Claves, Delimitadores de Campos,
		   etc, etc ... 

		   Los Usuarios de GENESIS se dedican a aquello que es especial
		   en su programa, como por ejemplo, el Calculo del Valor Liqui-
		   do del Credito, una Validacion de Consistencia entre fechas,
		   etc, etc ... es decir, se dedican a implementar aquellas fun-
		   cionalidades vitales del sistema, que justifican su existen-
		   cia, y que no pueden ser ( todavia ) GENERICOS o GENERABLES.

	12) INTEGRACION CON SOFTWARE BCI

	    Como vimos en punto 01) no existe ninguna restriccion, sujeto a 
	    la condicion de que los datos sean accesibles por COBOL.

	13) FACILIDADES DE DOCUMENTACION DEL SOFTWARE GENERADO

	    Las Facilidades de Documentacion Computacional que provee GENESIS 
	    son las siguientes :
		
	    - Construccion AUTOMATIZADA, en archivos magneticos, procesables
	      por software, para diversos fines, tales como : 

		- Obtencion Reporte Impacto de Cambios,
		- Recompilazion o Regeneracion Automatizada de componentes.
		- Emision de Reportes, para confeccion de Manuales.

	      Estos archivos forman parte del DICCIONARIO DE DATOS del sistema,
	      que permite ademas generar software y apoyar a la administracion.

	    - Construccion INCREMENTAL, DURANTE el desarrollo del sistema y 
              no al final, obteniendo de esta forma beneficios adicionales, a
	      los de la Mantencion del sistema.

	    - Software de Apoyo para documentacion complementaria que no es
	      posible generar en forma automatizada.

	    - Areas especiales  y  estandares,  que facilitan la administra-
	      cion  y comunicacion entre las distintas unidades usuarias de
	      la Documentacion, como Unidades de Mantencion y Auditoria.

	14) APOYO AL CICLO DE DESARROLLO DE APLICACIONES

	    - FACILIDADES GENERACION DE PANTALLAS
	    - FACILIDADES PROTOTIPEO
	    - FACILIDADES PROGRAMACION ( LINEA, BATCH )
	    - FACILIDADES DOCUMENTACION
	    - FACILIDADES DEPURACION
	    - FACILIDADES MANTENCION DE APLICACIONES
	    - CAPACIDADES CONSTRUCCION DE REPORTES BATCH
	    - CAPACIDADES CONSTRUCCION DE ACTUALIZADORES BATCH

	      Para lo anterior  proponemos  la  Capacitacion y Documentacion, 
	      ya descrita anteriormente.

	    - RESPETO AL ESQUEMA MODELAMIENTO DE DATOS BCI

	      En general, GENESIS no tiene restricciones respecto a esquemas 
	      de modelamiento. 

	      En todo caso, solicitamos mayor informacion sobre este punto.




	15) INDEPENDENCIA HARDWARE Y SOFTWARE

	    Por nuestra cuenta proponemos este punto,  que  consideramos FUNDA-
	    MENTAL en una herramienta moderna, ya que los cambios tecnologicos
	    son de tal magnitud y estan sucediendo a tal velocidad,  que no es 
	    razonable  NO APROVECHARLOS,  como ocurre actualmente debido a los 
	    PROHIBITIVOS COSTOS DE CONVERSION  en que tipicamente debiera incu-
	    rrirse ...

	    GENESIS provee  una  notable INDEPENDENCIA del HARDWARE y SOFTWARE 
	    asi como una gran  CAPACIDAD  DE  ADAPTACION  Y CRECIMIENTO que le 
	    permitiran  utilizar  las nuevas tecnologias que provea el mercado,
	    para beneficio de sus USUARIOS ...  Esto se debe a que GENESIS tra-
	    baja con CONCEPTOS PUROS,  por  sobre las facilidades particulares 
	    que ofrece un ambiente computacional. Los conceptos son del tipo :
			
		- Modularidad
		- Parametrizacion
		- Normalizacion 
		- Uso de Estandares 
	        - Flexibilidad
		- Independencia 
		- Estructuracion

	    A continuacion veamos como GENESIS implementa la independencia a
	    nivel de :

		* PROGRAMAS 

		  AISLANDO aspectos tales como :

		  - Acceso Base de Datos ( VSAM, DATACOM, RMS )
		  - Comunicacion Terminal-Aplicacion-Usuario ( CICS, FMS )
		  - Caracteristicas del Sistema Operativo ( DOS, MVS, VAX/VMS )

		  por lo que es posible CONVERTIR los sistemas a otros Ambientes
	          Operativos, en PLAZOS y COSTOS muy bajos. Por ejemplo a :

		  - Otra Base de Datos : IBM/DB2, ORACLE, etc 
		  - Otros Computadores : IBM AS400, UNISYS, etc 
		  
		* PARAMETROS

		  Almacenamiento en Archivos, externo a los programas de :

		  - MENUS
		  - MENSAJES
                  - ERRORES
                  - VALIDACIONES
                  - CODIGOS INTERNOS Y EXTERNOS
                  - VALORES
		  - PRIVILEGIOS
		  - DOCUMENTACION                   
		
		  los cuales tambien es posible cambiar de ambiente en forma 
		  simple, pues basta :

		  - Crear o Convertir ARCHIVOS
		  - Crear o Convertir MODULOS GENERICOS DE MANEJO

		Todo lo anterior incorpora un VALOR ADICIONAL a los SISTEMAS.

