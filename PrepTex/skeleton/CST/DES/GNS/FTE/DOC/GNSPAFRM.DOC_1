*% IF WSS
      *<<<< WSS
      * DOC: WSS
      *	Objetivo  : Incluir Codigo en la WORKING STORAGE SECTION
      *		    Variables, etc.
      *	Ejemplo :
      *
      *    01  WSS-VARI.
      *        03  WSS-NUM-CONT           PIC 9(02).
      *>>>> END WSS
*% END
*% IF INI_FIO_VAX
      *<<<< INI_FIO_VAX ( VAX )
      * DOC: INI_FIO_VAX
      *	Objetivo  : Abrir Archivos anexos
      *	Instancia : Inicio del Programa, antes de abrir Archivo Base
      *>>>> END INI_FIO_VAX
*% END
*% IF INI_FRM
      *<<<< INI_FRM
      * DOC: INI_FRM
      *	Objetivo  : Incluir inicializaciones de Formularios anexos	
      *	Instancia : Despues de Inicializar Formulario Principal
      *>>>> END INI_FRM
*% END
*% IF SCR_PGM
      *<<<< SCR_PGM
      * DOC: SCR_PGM
      *	Objetivo  : Codigo para decidir las  acciones asociadas a los
      *		    comandos del Programador,  construidos sobre  PGM
      *		    ( FIO-STAT  indica  resultado  de  la  lectura  y
      *		    SCR-CMND el comando del programador ).
      *	Instancia : Inmediatamente despues de leer en Archivo Base el
      *		    registro requerido.
      *>>>> END SCR_PGM
*% END
*% IF SCR_RST
      *<<<< SCR_RST
      * DOC: SCR_RST
      *	Objetivo  : Resetear variables, contadores, etc.
      *	Instancia : Antes de Iniciar o Reiniciar el Proceso sobre
      *		    el  Archivo  Base  ( Modificacion, Ingreso,
      *		    Consulta, etc. )
      *>>>> END SCR_RST
*% END
*% IF GET_KEY
      *<<<< GET_KEY
      * DOC: GET_KEY
      *	Objetivo  : Ninguno especifico
      *	Instancia : Antes de capturar llaves desde la pantalla.
      *>>>> END GET_KEY
*% END
*% IF INI_FND_KEY
      *<<<< INI_FND_KEY
      * DOC: INI_FND_KEY
      *	Objetivo  : Leer otros archivos, Complementar llave, etc.
      *	Instancia : Previo a hacer un KEY-ALL-{FRM} y previo a
      * 		    leer el archivo base.
      *>>>> END INI_FND_KEY
*% END
*% IF FND_KEY
      *<<<< FND_KEY
      * DOC: FND_KEY
      *	Objetivo  : Leer otros archivos, Complementar llave, etc.
      *	Instancia : Posterior a hacer un KEY-ALL-{FRM} y previo a
      *		    leer el archivo base.
      *>>>> END FND_KEY
*% END
*% IF FIN_FND_KEY
      *<<<< FIN_FND_KEY
      * DOC: FIN_FND_KEY
      *	Objetivo  : Leer otros archivos, Complementar llave, etc.
      *	Instancia : Posterior a hacer un KEY-ALL-{FRM} y posterior a
      *		    leer el archivo base.
      *>>>> END FIN_FND_KEY
*% END
*% IF PUT_SCR
      *<<<< PUT_SCR
      * DOC: PUT_SCR
      *	Objetivo  : Llenar campos anexos del formulario, leer Tablas,
      *		    etc.
      *	Instancia : Antes de desplegar formulario despues de leer
      *		    registro ( cuando corresponda )
      *>>>> END PUT_SCR
*% END
*% IF GET_FLD
      *<<<< GET_FLD      
      * DOC: GET_FLD
      *	Objetivo  : Ninguno especifico
      *	Instancia : Antes de leer los campos del formulario en caso de
      *		    Ingresar un nuevo registro
      *>>>> END GET_FLD
*% END
*% IF INI_CMN_ING
      *<<<< INI_CMN_ING
      * DOC: INI_CMN_ING
      *	Objetivo  : Incorporar calculos, datos en el registro a
      *		    ingresar, etc.
      *	Instancia : Previo a hacer un RET-ALL-{FRM}.
      *		    Previo a grabar el registro del archivo base.
      *			( {sis}-FIO-{fil} con comando FIO-PUT )
      *>>>> END INI_CMN_ING
*% END
*% IF CMN_ING
      *<<<< CMN_ING
      * DOC: CMN_ING
      *	Objetivo  : Incorporar calculos, datos en el registro a
      *		    ingresar, etc.
      *	Instancia : Posterior a hacer un RET-ALL-{FRM}.
      *		    Previo a grabar el registro del archivo base.
      *			( {sis}-FIO-{fil} con comando FIO-PUT )
      *>>>> END CMN_ING
*% END
*% IF FIN_CMN_ING
      *<<<< FIN_CMN_ING
      * DOC: FIN_CMN_ING
      *	Objetivo  : Tomar el control despues de haber grabado el registro.
      *		    
      *	Instancia : Posterior a hacer un RET-ALL-{FRM}.
      *		    Posterior a grabar el registro del archivo base.
      *			( {sis}-FIO-{fil} con comando FIO-PUT )
      *>>>> END FIN_CMN_ING
*% END
*% IF INI_CMN_MOD
      *<<<< INI_CMN_MOD
      * DOC: INI_CMN_MOD
      *	Objetivo  : Incorporar calculos, datos en el registro a
      *		    modificar, etc.
      *	Instancia : Previo a hacer un KEY-ALL-{FRM}.
      *		    Previo a leer el registro a modificar.
      *		    ( {sis}-FIO-{fil} con comando FIO-GET-KEY-UPD )
      *		    Previo a hacer un  RET-ALL-{FRM}.
      *		    Previo a modificar  el registro vigente.
      *		    ( {sis}-FIO-{fil} con comando FIO-MOD )
      *>>>> END INI_CMN_MOD
*% END
*% IF CMN_MOD_RET
      *<<<< CMN_MOD_RET
      * DOC: CMN_MOD_RET
      *	Objetivo  : Incorporar calculos, datos en el registro a
      *		    modificar, etc.
      *	Instancia : Posterior a hacer un KEY-ALL-{FRM}.
      *		    Posterior a leer el registro a modificar.
      *		    ( {sis}-FIO-{fil} con comando FIO-GET-KEY-UPD )
      *		    Previo a hacer un  RET-ALL-{FRM}.
      *		    Previo a modificar  el registro vigente.
      *		    ( {sis}-FIO-{fil} con comando FIO-MOD )
      *>>>> END CMN_MOD_RET
*% END
*% IF CMN_MOD
      *<<<< CMN_MOD
      * DOC: CMN_MOD
      *	Objetivo  : Incorporar calculos, datos en el registro a
      *		    modificar, etc.
      *	Instancia : Posterior a hacer un KEY-ALL-{FRM}.
      *		    Posterior a leer el registro a modificar.
      *		    ( {sis}-FIO-{fil} con comando FIO-GET-KEY-UPD )
      *		    Posterior a hacer un  RET-ALL-{FRM}.
      *		    Previo a modificar  el registro vigente.
      *		    ( {sis}-FIO-{fil} con comando FIO-MOD )
      *>>>> END CMN_MOD
*% END
*% IF FIN_CMN_MOD
      *<<<< FIN_CMN_MOD
      * DOC: FIN_CMN_MOD
      *	Objetivo  : Incorporar calculos, datos en el registro a
      *		    modificar, etc.
      *	Instancia : Posterior a hacer un KEY-ALL-{FRM}.
      *		    Posterior a leer el registro a modificar.
      *		    ( {sis}-FIO-{fil} con comando FIO-GET-KEY-UPD )
      *		    Posterior a hacer un  RET-ALL-{FRM}.
      *		    Posterior a modificar  el registro vigente.
      *		    ( {sis}-FIO-{fil} con comando FIO-MOD )
      *>>>> END FIN_CMN_MOD
*% END
*% IF INI_CMN_ELI
      *<<<< INI_CMN_ELI
      * DOC: INI_CMN_ELI
      *	Objetivo  : Tomar el control antes de eliminar.
      *	Instancia : Previo a hacer un KEY-ALL-{FRM}
      *		    Previo a leer el registro a eliminar.
      *		    ( {sis}-FIO-{fil} con comando FIO-GET-KEY-UPD )
      *		    Previo a eliminar el registro.
      *		    ( {sis}-FIO-{fil} con comando FIO-DEL )
      *>>>> END INI_CMN_ELI
*% END
*% IF CMN_ELI
      *<<<< CMN_ELI
      * DOC: CMN_ELI
      *	Objetivo  : Tomar el control antes de eliminar.
      *	Instancia : Posterior a hacer un KEY-ALL-{FRM}
      *		    Posterior a leer el registro a eliminar.
      *		    ( {sis}-FIO-{fil} con comando FIO-GET-KEY-UPD )
      *		    Previo a eliminar el registro.
      *		    ( {sis}-FIO-{fil} con comando FIO-DEL )
      *>>>> END CMN_ELI
*% END
*% IF FIN_CMN_ELI
      *<<<< FIN_CMN_ELI
      * DOC: FIN_CMN_ELI
      *	Objetivo  : Tomar el control despues de eliminar.
      *	Instancia : Posterior a hacer un KEY-ALL-{FRM}
      *		    Posterior a leer el registro a eliminar.
      *		    ( {sis}-FIO-{fil} con comando FIO-GET-KEY-UPD )
      *		    Posterior a eliminar el registro.
      *		    ( {sis}-FIO-{fil} con comando FIO-DEL )
      *>>>> END FIN_CMN_ELI
*% END
*% IF CMN_ACC
      *<<<< CMN_ACC
      * DOC: CMN_ACC
      *	Objetivo  : Programar  la  accion a realizar sobre el registro,
      *		    segun  el  comando  del programador  ( SCR-CMND ) y
      *		    la   confirmacion   o   rechazo   (  SCR-VFLD-YES o
      *		    SCR-VFLD-NOT ) de la accion.
      *	Instancia : Despues  de confirmar la  accion, a  realizar sobre
      *		    el registro  requerido del Archivo Base,  aplicable
      *		    solo a aquellos comandos creados por el programador
      *		    que actuan sobre registros existentes ( ACC ).
      *>>>> END CMN_ACC
*% END
*% IF CMN_PGM
      *<<<< CMN_PGM
      * DOC: CMN_PGM
      *	Objetivo  : Programar la accion a realizar, segun el comando del
      *		    programador ( SCR-CMND ) y la confirmacion o rechazo
      *		    ( SCR-VFLD-YES o SCR-VFLD-NOT ) de la accion.
      *	Instancia : Despues de confirmar o rechazar la accion a rea-
      *		    lizar, cuando  corresponda,  en  el  caso  de  
      *		    comandos  del programador construidos sobre PGM.
      *>>>> END CMN_PGM
*% END
*% IF EOF
      *<<<< EOF
      * DOC: EOF
      *	Objetivo  : Incluir Parrafos de uso General por parte del
      *		    Programador
      *>>>> END EOF
*% END
