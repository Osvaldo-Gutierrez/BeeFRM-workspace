       IDENTIFICATION DIVISION.
      *========================
       PROGRAM-ID. GNSPPMEN.
       AUTHOR. CONSIST.

       DATE-WRITTEN.  4-MAR-1992 18:29:28
      * PROCESA MENUS Y COMANDOS CON MANEJO DE PRIVILEGIOS.

       ENVIRONMENT DIVISION.
      *=====================
       CONFIGURATION SECTION.
      *----------------------
       SOURCE-COMPUTER. T16.
       OBJECT-COMPUTER. T16 TERMINAL IS T16-6530.
       SPECIAL-NAMES.
               KF1      IS F1,
               KF2      IS F2,
               KF3      IS F3,
               KF4      IS F4,
               KF5      IS F5,
               KF6      IS F6,
               KF7      IS F7,
               KF8      IS F8,
               KF9      IS F9,
               KF10     IS F10,
               KF11     IS F11,
               KF12     IS F12,
               BLINK    IS BLINK,
               DECIMAL-POINT IS COMMA.

       INPUT-OUTPUT SECTION.
      *====================
       SCREEN-CONTROL.
      *--------------
           ERROR-ENHANCEMENT IS BLINK IN ALL.

       DATA DIVISION.
      *==============

       WORKING-STORAGE SECTION.
      *------------------------
       COPY GNSBRMNU.
       COPY GNSBRRPF.
       COPY GNSWCSCR.
       COPY GNSWVSCR.
       COPY GNSWGTSC.
       COPY GNSWVFIO.
       COPY GNSWCFIO.
       COPY GNSWCFRM.
       COPY GNSWVFRM.
      * COPY GNSBRTAB.
      *    Registro Generico de Tablas
      *    ---------------------------
      * 
      *    Nombre Registro : TAB  
      *    Clave(s)        : TAB-COD-TABL(UU), TAB-STP-ITRN(UU),
      *                      TAB-CIC-TABL(UU), TAB-EXT-TABL(DC)
      *    Largo           : 194
      *    Bloqueo         : 2
      *    Observaciones   : 
      *
       01  TBL. 
      *
      *    Filler Compatibilidad VSAM/MVS
           03  TAB-GLS-FLAG                             PIC X(01).      
      *
      *    Clave Primaria Registro
           03  TAB-KEY-IREG.
      *
      *KEY     Tipo + Codigo ( LLave Primaria )
               05  TAB-COD-TABL.
      *
      *            Codigo Tipo Tabla
                   07  TAB-COD-TTAB                     PIC X(03).
      *
      *            Codigo Tabla
                   07  TAB-COD-CTAB                     PIC X(12).
      *
      *        Time Stamp Transaccion
               05  TAB-STP-ITRN.
      *
      *            Fecha Transaccion
                   07  TAB-FEC-FTRN.
                       09  TAB-NUM-STRN                 PIC 9(02).
                       09  TAB-NUM-ATRN                 PIC 9(02).
                       09  TAB-NUM-MTRN                 PIC 9(02).
                       09  TAB-NUM-DTRN                 PIC 9(02).
      *
      *            Hora Transaccion
                   07  TAB-HRA-HRTR.
                       09  TAB-NUM-HHTR                 PIC 9(02).
                       09  TAB-NUM-MMTR                 PIC 9(02).
                       09  TAB-NUM-SSTR                 PIC 9(02).
      *
      *    Indicador Tipo Accion
           03  TAB-MSC-TACC                             PIC X(01).
      *
      *    Indicador Status
           03  TAB-MSC-STAT                             PIC X(01).
      *
      *    Indicador Vigencia                           GNS VIGE
           03  TAB-IND-VIGE  REDEFINES  TAB-MSC-STAT    PIC X(01).
      *
      *    Codigo Origen Transaccion
           03  TAB-COD-OTRN.
      *
      *        Indicador Tipo Origen
               05  TAB-MSC-TTRN                         PIC X(01).
      *
      *        Codigo Tipo Origen
               05  TAB-COD-TTRN                         PIC X(03).
      *
      *    Autor Transaccion
           03  TAB-COD-ATRN                             PIC X(12).            
      *
      *KEY Tipo + Codigo ( Interno Computacional )
           03  TAB-CIC-TABL.
      *
      *        Codigo Tipo Tabla
               05  TAB-CIC-TTAB                         PIC X(03).
      *
      *        Codigo Tabla
               05  TAB-CIC-CTAB                         PIC X(12).
      *
      *    Codigo Externo
           03  TAB-EXT-TABL.
      *
      *        Codigo Tipo Tabla
               05  TAB-EXT-TTAB                         PIC X(03).
      *
      *        Codigo Tabla
               05  TAB-EXT-CTAB                         PIC X(05).
      *
      *    Descripcion Corta
           03  TAB-GLS-DCOR                             PIC X(12).
      *
      *    Abreviacion Descripcion
           03  TAB-GLS-ABRV                             PIC X(05).
      *
      *    Descripcion del Codigo
           03  TAB-GLS-DESC                             PIC X(40).
      *
      *    Datos Anexos
           03  TAB-GLS-DATA.
               05  TAB-GLS-DAT1.
                   07  TAB-COD-DAT1     OCCURS 10       PIC X(01).
               05  TAB-GLS-DAT2.
                   07  TAB-COD-DAT2     OCCURS 10       PIC X(02).
               05  TAB-GLS-DAT3.
                   07  TAB-COD-DAT3     OCCURS 10       PIC X(03).
      *
      *    Clave Soundex
           03  TAB-SNX-TABL.
               05  TAB-SNX-TTAB                         PIC X(03).
               05  TAB-SNX-CTAB                         PIC X(03).
      *
      *    Variables de Tablas
       01  TAB-VARI.
      *
      *    Nombre de Programa FIO para TABlas
           03  TAB-GLS-FTAB.
      *
      *        Codigo Sistema
               05  TAB-COD-SIST                         PIC X(03).
      *
      *        Nombre "fijo" de FIO Tab
               05  TAB-COD-FTAB.
                   07 FILLER                VALUE "P"   PIC X(01).
                   07 TAB-COD-STAB                      PIC X(01).
                   07 FILLER                VALUE "TAB" PIC X(03).
      *
       COPY GNSBRMSG.
       COPY GNSWGHOY.
       COPY GNSWGSYS.
       COPY GNSLGUYP.
      *
       01  HDR-MAPA.
       COPY GNSWIHDR.
       COPY GNSWITRL.
      *
       01  OPC-MAPA.
           03 OPC-MHDR               PIC X(132).
       COPY GNSWIOPC.
           03 OPC-MTRL               PIC X(260).
      *
       01  OP1-MAPA.
           03 OP1-MHDR               PIC X(132).
       COPY GNSWIOP1.
           03 OP1-MTRL               PIC X(260).
      *
       01  CMN-VARI.
           03 CMN-SIND.
              05 CMN-I                PIC 9(02).
              05 CMN-K                PIC 9(02).
           03 CMN-IDX-CCMN    VALUE SPACES.
              05 CMN-VEC-CCMN OCCURS 10.
                 07 CMN-COD-CCMN      PIC X(03).
                 07 FILLER            PIC X(01).
      *
       01  RFN-VARI.
           03  RFN-COLA.
               05  RFN-TYPE VALUE "GRET"            PIC X(04).
               05  RFN-TERM                         PIC X(04).
           03  RFN-LITM     COMP                    PIC S9(04).
           03  RFN-ITEM.
               05  RFN-PROG                         PIC X(08).
               05  RFN-FUNC.
                   07  RFN-SIST                     PIC X(03).
                   07  RFN-SISG                     PIC X(03).
                   07  RFN-NEMO                     PIC X(12).
                   07  RFN-CMND                     PIC X(03).
      *
       01  WSS-VARI.
           03 WSS-IND-PRIV                  VALUE "N" PIC X(01).
           03 WSS-SCOD                                PIC X(02).
           03 WSS-SEFN                                PIC X(02).
           03 WSS-SXCT               COMP VALUE +3588 PIC S9(04).
           03 WSS-SXCT-RED         REDEFINES WSS-SXCT PIC X(02).
           03 WSS-CCOD                   VALUE SPACES PIC X(05).
              88 WSS-CCOD-APCT           VALUE "APCT".
              88 WSS-CCOD-ABM0           VALUE "ABM0".
           03 WSS-DFLD.
              05 WSS-NTRN                             PIC X(04).
              05 WSS-CAXC.
                 07 WSS-SIST.
                    09 WSS-CSIS OCCURS 3              PIC X(01).
                 07 WSS-FILL                          PIC X(01).
                 07 WSS-SISG                          PIC X(03).
                 07 WSS-DISP                          PIC X(09).
           03 WSS-FUNC.
              05 WSS-FCHR OCCURS 11                   PIC X(01).
           03 WSS-AFUN.
              05 WSS-ACHR OCCURS 11                   PIC X(01).
           03 WSS-OPCI.
              05 WSS-COPC OCCURS 3                    PIC X(01).
           03 WSS-CMND.
              05 WSS-CCMD OCCURS 3                    PIC X(01).
           03 WSS-MAUT.
              05 WSS-FILA OCCURS 12.
                 07 WSS-COLU OCCURS 09.
                    09 WSS-AUTO                  PIC 9(02).
           03 WSS-MAUT-RED REDEFINES WSS-MAUT.
              05 WSS-ITM1                        PIC X(18).
              05 WSS-ITM2                        PIC X(18).
              05 WSS-ITM3                        PIC X(18).
              05 WSS-ITM4                        PIC X(18).
              05 WSS-ITM5                        PIC X(18).
              05 WSS-ITM6                        PIC X(18).
              05 WSS-ITM7                        PIC X(18).
              05 WSS-ITM8                        PIC X(18).
              05 WSS-ITM9                        PIC X(18).
              05 WSS-ITMA                        PIC X(18).
              05 WSS-ITMB                        PIC X(18).
              05 WSS-ITMC                        PIC X(18).
           03 WSS-STDO                   VALUE 1 PIC 9(02).
           03 WSS-ISIS                   VALUE 0 PIC 9(02).
           03 WSS-IOPC                   VALUE 0 PIC 9(02).
           03 WSS-ICMD                   VALUE 0 PIC 9(02).
           03 WSS-IMAX                   VALUE 0 PIC 9(02).
           03 WSS-IVAL                   VALUE 9 PIC 9(02).
              88 FUNCION-INVALIDA        VALUE 0.
              88 FUNCION-VALIDA          VALUE 1.
           03 WSS-SIND.
              05 WSS-I                           PIC 9(02).
              05 WSS-J                           PIC 9(02).
              05 WSS-K                           PIC 9(02).
              05 WSS-L                           PIC 9(02).
              05 WSS-M                           PIC 9(02).
           03 WSS-AUXI                           PIC X(03).
           03 UYP-PRTA.
              05 UYP-PROG                        PIC X(08).
              05 FILLER                VALUE "/" PIC X(01).
              05 UYP-CMND                        PIC X(03).
           03 WSS-MENS.
              05 WSS-MEN1                        PIC X(40).
              05 WSS-MEN2                        PIC X(79).
           03 WSS-COD-MENS.
              05 WSS-COD-TMSG.
                 07 WSS-COD-TMN1                 PIC X(03).
                 07 WSS-COD-TMN2                 PIC X(03).
                 07 WSS-COD-TMN3                 PIC X(01).
              05 WSS-COD-CMSG                    PIC X(05).
           03 WSS-ICMN                           PIC X(01).
              88 WSS-DESDE-CMN VALUE "K".
      *************************************************************
           03 WSS-IND-CMND             VALUE 0   PIC 9(01).
              88 WSS-EXISTE-COMANDO    VALUE 1.
              88 WSS-COMANDO-SINPRV    VALUE 2.
      *
           03 WSS-AUX-CMNP                       PIC X(08).
           03 WSS-AUX-PRMC                       PIC X(25).
           03 WSS-AUX-CMND                       PIC X(03).
           03 WSS-AUX-CRPF.
              05 WSS-TABL OCCURS 10.
                 07 WSS-COD-CMND                 PIC X(03).
                 07 WSS-COD-CCPP                 PIC X(03).
                 07 WSS-IND-STPP                 PIC X(01).
                 07 WSS-GLS-PRMT                 PIC X(25).
                 07 WSS-GLS-CONF                 PIC X(25).
                 07 WSS-GLS-UARC                 PIC X(12).
           03 WSS-IPRV                           PIC X(01).
              88 WSS-IPRV-TODO        VALUE "*".
              88 WSS-IPRV-TODOS-MENUS VALUE "*", "O", "U", "Q".
              88 WSS-IPRV-TODOS-MAN   VALUE "*", "U", "M".
              88 WSS-IPRV-TODOS-CON   VALUE "*", "Q", "C".
           03 WSS-KNMO VALUE SPACES.
              05 WSS-KNMO-SIST                   PIC X(03).
              05 WSS-KNMO-SISG                   PIC X(03).
              05 WSS-KNMO-NEMO                   PIC X(12).
              05 WSS-KNMO-CMND                   PIC X(03).
              05 WSS-KNMO-PROG                   PIC X(08).
      *JSS-INI 27-APR-1994
           03 WSS-PSCM.
              05 WSS-MAPS                        PIC X(07).
              05 FILLER                VALUE "/" PIC X(01).
              05 WSS-COMA                        PIC X(03).
      *JSS-FIN 27-APR-1994

      * Variables que vienen de GNSPPMEN
       01  WSS-VOPC.
           03 WSS-STAT              VALUE 0        PIC 9(01).
              88 WSS-STAT-OKS       VALUE 0.
              88 WSS-STAT-WRN       VALUE 1.
              88 WSS-STAT-MAL       VALUE 2.
           03 WSS-SIND.
              05 I                                 PIC 9(02).
              05 J                                 PIC 9(02).
              05 K                  VALUE 0        PIC 9(02).
              05 L                  VALUE 0        PIC 9(02).
              05 IMIN               VALUE 0        PIC 9(02).
              05 IMAX               VALUE 0        PIC 9(02).
           03 WSS-RMNU                             PIC X(490).
           03 WSS-NSIS                             PIC X(003).
           03 WSS-MENU                             PIC X(003).
           03 WSS-NEMO                             PIC X(012).
           03 WSS-NEMO-RED REDEFINES WSS-NEMO.
              05 WSS-NEMO-CHR OCCURS 12            PIC X(01).
           03 WSS-IFRM                   VALUE "0" PIC X(01).
      *Variables para GNSSCRHDR
       01  HEA-VARI.
           03 HEA-SIMP              VALUE SPACES.
              05 HEA-GLS-SIMP       OCCURS 31      PIC X(01).
           03 HEA-DOBL              VALUE SPACES.
              05 HEA-GLS-DOBL       OCCURS 61      PIC X(01).
           03 HEA-FEC-DMSA.
              05 HEA-NUM-DMSA                      PIC 9(02).
              05 HEA-GLS-SLA1                      PIC X(01).
              05 HEA-NUM-MMSA                      PIC 9(02).
              05 HEA-GLS-SLA2                      PIC X(01).
              05 HEA-NUM-SMSA                      PIC 9(02).
              05 HEA-NUM-AMSA                      PIC 9(02).
       01  AUX-VARI.
           03 AUX-UARC.
              05 AUX-RPRG                        PIC X(08).
              05 AUX-RTRN                        PIC X(04).
           03 AUX-PRGM.
              05 AUX-PROG                        PIC X(08).
              05 AUX-NTRN                        PIC X(04).
      *POR MIENTRAS POR EL XCONTROL QUE SE HACE DESDE MENU
       01  WSS-CMMA.
           03 WSS-RFUN                             PIC X(300).
           03 WSS-NSXC                             PIC X(003).
           03 WSS-GSXC                             PIC X(003).
           03 FILLER                               PIC X(011).
      *
       01  WSS-CHK-SIST                  VALUE " " PIC X(01).
           88 WSS-CHK-SIST-SI            VALUE "S".
       01  IFD.
           03  FILLER                            PIC X(01).
           03  IFD-COD-CIFD                      PIC X(12).
           03  IFD-GLS-DATA                      PIC X(210).
           03  FILLER                            PIC X(18).
       01  WSS-PPPV.
           03 WSS-PROV                                  PIC X(08).
           03 FILLER                                    PIC X(01).
           03 WSS-NTRV                                  PIC X(04).
       01  WSS-TSC-AUXI.
           03 FILLER                                    PIC X(05).
           03 WSS-CMA-OPCI                              PIC X(03).
           03 FILLER                                    PIC X(57).
           03 WSS-TSC-OPCI                              PIC X(03).
       01  WSS-COD-NEMO                    VALUE SPACES PIC X(12).
      *Commarea para verificacion de password
       01  CICRACF-COMMAREA.
           03 RACF-USERID             PIC X(12).
           03 RACF-PASSWORD           PIC X(12).
           03 RACF-RETURN-CODE        PIC X(01).
       01  FIO-MSGO-RMNU.
           03  FIO-OUTP-RMNU                    PIC X(1689).
           03  WSS-TBL-RMNU.
               05 WSS-REG-RMNU        OCCURS 40 PIC X(490).
               05 WSS-NUM-RMNU        VALUE   0 PIC  9(02).
       01  FIO-MSGO-RRPF.
           03  FIO-OUTP-RRPF                    PIC X(1689).
           03  WSS-TBL-RRPF.
               05 WSS-REG-RRPF        OCCURS 10 PIC  X(92).
               05 WSS-NUM-RRPF        VALUE   0 PIC  9(02).

       SCREEN SECTION.
      *---------------
       01  GNSFMSG BASE SIZE 24, 80.
           03 FILLER       AT 10, 02 VALUE "F1 : continue".

       PROCEDURE DIVISION.
      *===================

       MAIN SECTION.
       INI-MAIN.
           DISPLAY BASE GNSFMSG.
           ACCEPT GNSFMSG UNTIL
               KF1,  KF2,  KF3,  KF4,  KF5,  KF6,  KF7, KF8,
               KF9,  KF10, KF11, KF12.
           PERFORM INI-SIST.
           PERFORM PRO-RMNU.
       LEE-MAIN.
           PERFORM LEE-CMND.
           GO TO LEE-MAIN.
       FIN-MAIN.
           EXIT.

       INI-SIST SECTION.
       INI-INI-SIST.
           MOVE "GNS"  TO WSS-SIST.
           MOVE SPACES TO WSS-SISG.
      *
           MOVE WSS-SIST TO TSC-SIST SCR-SIST.
           MOVE WSS-SISG TO TSC-SISG.
           MOVE "SIS" TO MNU-COD-NEMO.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM VID-MNU.
           IF NOT FIO-STAT-OKS
               MOVE "GNS" TO MSG-COD-SIST
               MOVE "CODNEMOSISNX" TO MSG-COD-MENS
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS
               MOVE FRM-MSG      TO FRM-CMND
               MOVE "GNSAOPC"    TO FRM-NLIB
               MOVE "GNSFOPC"    TO FRM-NAME
               PERFORM GNS-PRO-FRM
      *JSS 2-SEP-1992 12:19:36 GOBACK
               STOP RUN
           ELSE
               MOVE TSC-SIST TO MNU-COD-SIST IN MNU.
           PERFORM CHK-PRV-SIST.
       FIN-INI-SIST.
           EXIT.

       CHK-PRV-CMND SECTION.
       INI-CHK-PRV-CMND.
           MOVE 0 TO WSS-I.
       LUP-CHK-PRV-CMND.
           ADD 1 TO WSS-I.
           IF WSS-I > 10
               GO TO FIN-CHK-PRV-CMND.
           IF WSS-COD-CMND( WSS-I ) NOT > SPACES
               GO TO LUP-CHK-PRV-CMND.
      * llamada a la rutina de verificacion de permisos para verificar
      * un comando a la vez
           MOVE "GI"                  TO UYP-COD-TDPU.
           MOVE SPACES                TO UYP-COD-PREG.
           MOVE MNU-COD-SIST IN MNU   TO UYP-COD-SIST.
           MOVE MNU-COD-NEMO IN MNU   TO UYP-COD-NEMO.
           MOVE WSS-COD-CMND( WSS-I ) TO UYP-COD-CMND.
           MOVE "GNSPPPRV" TO SYS-PROG.
           MOVE UYP-VARI   TO SYS-CMMA.
           MOVE +47        TO SYS-TCMA.
           MOVE SYS-LINK   TO SYS-CMND.
           PERFORM GNS-PRO-SYS.
           MOVE SYS-CMMA   TO UYP-VARI.
           IF ( UYP-IND-RESP NOT = "S" )        AND
              ( MNU-COD-CMND IN MNU > SPACES ) AND
              ( MNU-COD-CMND IN MNU = WSS-COD-CMND( WSS-I ) )
               MOVE 2 TO WSS-IND-CMND.
           IF UYP-IND-RESP NOT = "S"
               MOVE SPACES TO WSS-TABL( WSS-I )
               MOVE SPACES TO WSS-GLS-UARC( WSS-I )
               MOVE SPACES TO WSS-GLS-PRMT( WSS-I )
               MOVE SPACES TO WSS-GLS-CONF( WSS-I ).
           GO TO LUP-CHK-PRV-CMND.
       FIN-CHK-PRV-CMND.
           EXIT.

       PRO-CMND SECTION.
       INI-PRO-CMND.
           PERFORM PUT-DCMN.
           PERFORM CMN-PUTA.
           PERFORM CAL-PROG.
           IF MSG-COD-MENS > SPACES 
               MOVE SPACES TO MSG-COD-MENS
               MOVE TSC-VARI-BKP TO TSC-VARI.
           PERFORM HBL-CMN.
       FIN-PRO-CMND.
           EXIT.

       LEE-CMND SECTION.
       INI-LEE-CMND.
           PERFORM GET-CMND.
           MOVE SPACES TO TRL-GLS-MENS.
           MOVE TRL-COD-CACC TO WSS-FUNC.
           IF FRM-FFLD = FRM-FFLD-PA2 OR FRM-FFLD-PA1
               MOVE "SIS" TO MNU-COD-NEMO
               MOVE FIO-GET-KEY TO FIO-CMND
               MOVE TSC-SIST    TO FIO-SIST
               PERFORM GNS-FIO-MNU
               IF NOT FIO-STAT-OKS
                   MOVE "CODNEMOSISNX" TO MSG-COD-MENS
                   PERFORM ERR-LEE-CMND
                   GO TO INI-LEE-CMND
               ELSE
                   GO TO TCT-LEE-CMND.
       RET-LEE-CMND.
           IF WSS-FUNC NOT > SPACES
               IF FRM-FFLD = FRM-FFLD-RET
                   MOVE "CAC    BLK" TO MSG-COD-MENS
                   PERFORM ERR-LEE-CMND
                   GO TO INI-LEE-CMND
               ELSE
               IF FRM-FFLD = FRM-FFLD-PF3
                   MOVE TSC-FRET    TO MNU-COD-NEMO
                   MOVE FIO-GET-KEY TO FIO-CMND
                   MOVE TSC-SIST    TO FIO-SIST
                   PERFORM GNS-FIO-MNU
                   IF NOT FIO-STAT-OKS
                       MOVE "CODFRETNEXST" TO MSG-COD-MENS
                       PERFORM ERR-LEE-CMND
                       GO TO INI-LEE-CMND
                   ELSE
                       MOVE MNU-COD-OPCI IN MNU TO WSS-FUNC.
           PERFORM SHF-CACC.
           PERFORM INI-AUTO.
           PERFORM PRO-AUTO VARYING WSS-I FROM 1 BY 1
                            UNTIL WSS-I > 11.
           IF FUNCION-INVALIDA
               MOVE "FUN    INV" TO MSG-COD-MENS
               PERFORM ERR-LEE-CMND
               GO TO INI-LEE-CMND.
           PERFORM UNS-CACC.
      *Decidir en Base a Teclas ENTER y PF3........
      *Si existe sistema o si existe opcion
           IF WSS-ISIS > 0 OR WSS-IOPC > 0 OR FRM-FFLD = FRM-FFLD-PF3
               PERFORM PRO-TCTL
               IF MSG-COD-MENS > SPACES
                   PERFORM ERR-LEE-CMND
                   GO TO INI-LEE-CMND
               ELSE
                   GO TO FIN-LEE-CMND.
           PERFORM BUS-CMND.
           IF MSG-COD-MENS NOT > SPACES
      *        En este caso el string es un comando
               MOVE CMN-I TO TSC-I
               MOVE FRM-FFLD TO TSC-FFLD
               PERFORM VRF-PSSW-CMND
               IF MSG-COD-MENS > SPACES
                   PERFORM ERR-LEE-CMND
                   GO TO INI-LEE-CMND
               ELSE
                   PERFORM PRO-CMND
                   GO TO FIN-LEE-CMND
           ELSE
      *        En este caso el string es una opcion
               MOVE SPACES TO MSG-COD-MENS.
       TCT-LEE-CMND.
           PERFORM PRO-TCTL.
           IF MSG-COD-MENS > SPACES
               PERFORM ERR-LEE-CMND
               GO TO INI-LEE-CMND.
       FIN-LEE-CMND.
           EXIT.

       GET-CMND SECTION.
       INI-GET-CMND.
           IF TSC-PASW = "S" AND FRM-FFLD = FRM-FFLD-PF12
               MOVE SPACES TO TRL-COD-CACC
               MOVE SPACES TO TSC-PASW
               MOVE SPACES TO TSC-OACC
               MOVE "MENPASWRESET" TO MSG-COD-MENS
               PERFORM ERR-LEE-CMND
               GO TO INI-GET-CMND.
           IF NOT ( FRM-FFLD = FRM-FFLD-RET OR FRM-FFLD-PF3 OR
                               FRM-FFLD-PA2 OR FRM-FFLD-PA1 )
               MOVE "PFSINV" TO MSG-COD-MENS
               PERFORM ERR-LEE-CMND
               GO TO INI-GET-CMND.

           MOVE FRM-DFLD TO TRL-COD-CACC.
           IF FRM-FFLD = FRM-FFLD-PA2 OR FRM-FFLD-PA1 OR FRM-FFLD-PF3
               MOVE SPACES TO TSC-OACC
               IF TSC-PASW = "S"
                   MOVE SPACES TO TSC-PASW
                   MOVE SPACES TO TRL-COD-CACC
               ELSE
                   MOVE SPACES TO TSC-PASW.
           IF FRM-FFLD = FRM-FFLD-PA2 OR FRM-FFLD-PA1
               MOVE "SIS" TO TRL-COD-CACC.
           IF TSC-PASW = "S"
               PERFORM VAL-PSSW
               IF MSG-COD-MENS > SPACES
                   MOVE "GNS" TO MSG-COD-SIST
                   PERFORM ERR-LEE-CMND
                   GO TO INI-GET-CMND.
       FIN-GET-CMND.
           EXIT.

       VRF-PSSW-CMND SECTION.
       INI-VRF-PSSW-CMND.
           MOVE SPACES TO MSG-COD-MENS.
      *
           IF TSC-PASW = "O"
               MOVE SPACES TO TSC-PASW
               GO TO FIN-VRF-PSSW-CMND.
           IF MNU-GLS-NFRM IN MNU > SPACES
               MOVE MNU-GLS-NFRM IN MNU TO WSS-MAPS
           ELSE
           IF TSC-NMAP > SPACES
               MOVE TSC-NMAP TO WSS-MAPS
           ELSE
               GO TO FIN-VRF-PSSW-CMND.
           IF WSS-CMND > SPACES
               MOVE WSS-CMND TO WSS-COMA
           ELSE
           IF WSS-OPCI > SPACES
               MOVE WSS-OPCI TO WSS-COMA
           ELSE
               GO TO FIN-VRF-PSSW-CMND.
           IF WSS-SIST > SPACES
               MOVE WSS-SIST TO FIO-SIST
           ELSE
           IF TSC-SIST > SPACES
               MOVE TSC-SIST TO FIO-SIST
           ELSE
               GO TO FIN-VRF-PSSW-CMND.
           MOVE "PPC"       TO TAB-COD-TTAB IN TBL.
           MOVE WSS-PSCM    TO TAB-COD-CTAB IN TBL.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM GNS-FIO-TAB.
           IF NOT ( FIO-STAT-OKS AND TAB-MSC-STAT IN TBL = "S" )
               MOVE SPACES TO TSC-PASW
               MOVE SPACES TO TSC-OACC
               GO TO FIN-VRF-PSSW-CMND.
           MOVE "MENINGRPASSW" TO MSG-COD-MENS.
           MOVE "S"            TO TSC-PASW.
           MOVE TRL-COD-CACC   TO TSC-OACC.
           MOVE SPACES         TO TRL-COD-CACC.
       FIN-VRF-PSSW-CMND.
           EXIT.

       VAL-PSSW SECTION.
       INI-VAL-PSSW.
           MOVE SPACES TO MSG-COD-MENS.
           MOVE TSC-USER     TO RACF-USERID.
           MOVE TRL-COD-CACC TO RACF-PASSWORD.
           MOVE "X"          TO RACF-RETURN-CODE.
           MOVE "CICRACF"        TO SYS-PROG.
           MOVE CICRACF-COMMAREA TO SYS-CMMA.
           MOVE +25              TO SYS-TCMA.
           MOVE SYS-LINK         TO SYS-CMND.
           PERFORM GNS-PRO-SYS.
           MOVE SYS-CMMA TO CICRACF-COMMAREA.
           IF RACF-RETURN-CODE = LOW-VALUES
               MOVE TSC-OACC TO TRL-COD-CACC
               MOVE "O"    TO TSC-PASW
               MOVE SPACES TO TSC-OACC
               GO TO FIN-VAL-PSSW.
           MOVE "ERRPASW"        TO MSG-COD-TMSG.
           IF RACF-RETURN-CODE = HIGH-VALUES
               MOVE SPACES TO MSG-COD-CMSG
           ELSE
               MOVE RACF-RETURN-CODE TO MSG-COD-CMSG.
           MOVE SPACES TO TRL-COD-CACC.
       FIN-VAL-PSSW.
           EXIT.

       PRO-TCTL SECTION.
       INI-PRO-TCTL.
           IF WSS-SIST > SPACES AND TSC-SIST NOT = WSS-SIST
               PERFORM CHK-SIST
               IF MSG-COD-MENS > SPACES
                   GO TO FIN-PRO-TCTL
               ELSE
                   NEXT SENTENCE
           ELSE
               MOVE TSC-SIST TO WSS-SIST.
      *
           IF WSS-OPCI > SPACES
               PERFORM CHK-OPC
               IF MSG-COD-MENS > SPACES
                   GO TO FIN-PRO-TCTL
               ELSE
                   PERFORM ANL-OPC
                   IF MSG-COD-MENS > SPACES
                       GO TO FIN-PRO-TCTL
                   ELSE
                       NEXT SENTENCE
           ELSE
           IF TSC-SIST = WSS-SIST
               IF TSC-NEMO = "SIS"
                   MOVE "FUN    ACT" TO MSG-COD-MENS
                   GO TO FIN-PRO-TCTL
               ELSE
                   MOVE TSC-SIST    TO FIO-SIST
                   MOVE "SIS"       TO MNU-COD-NEMO
                   MOVE FIO-GET-KEY TO FIO-CMND
                   PERFORM GNS-FIO-MNU
                   IF NOT FIO-STAT-OKS
                       MOVE "CODNEMOSISNX" TO MSG-COD-MENS
                       GO TO FIN-PRO-TCTL.
           MOVE WSS-SIST TO MNU-COD-SIST IN MNU.
      * Con el MNU que se tiene hay que procesar
           IF ( MNU-COD-SIST IN MNU NOT > SPACES OR
                MNU-COD-SIST IN MNU = TSC-SIST ) AND
                MNU-COD-NEMO = TSC-NEMO
              MOVE "FUN    ACT" TO MSG-COD-MENS
              GO TO FIN-PRO-TCTL.
           PERFORM PRO-FIN.
       FIN-PRO-TCTL.
           EXIT.

       CHK-SIST SECTION.
       INI-CHK-SIST.
           MOVE SPACES TO MSG-COD-MENS.

           IF WSS-IND-PRIV NOT = "S"
               GO TO CON-CHK-SIST.

           MOVE "GI"     TO UYP-COD-TDPU.
           MOVE SPACES   TO UYP-COD-PREG.
           MOVE WSS-SIST TO UYP-COD-SIST.
           MOVE "GNSPPPRV" TO SYS-PROG.
           MOVE UYP-VARI   TO SYS-CMMA.
           MOVE +47        TO SYS-TCMA.
           MOVE SYS-LINK   TO SYS-CMND.
           PERFORM GNS-PRO-SYS.
           MOVE SYS-CMMA   TO UYP-VARI.
           IF UYP-IND-RESP NOT = "S"
               MOVE "SIS    NOPRV" TO MSG-COD-MENS
               GO TO FIN-CHK-SIST.
       CON-CHK-SIST.
           MOVE WSS-SIST TO FIO-SIST.
           IF WSS-COD-NEMO > SPACES
               MOVE WSS-COD-NEMO TO MNU-COD-NEMO
           ELSE
               MOVE "SIS" TO MNU-COD-NEMO.
           MOVE FIO-GET-KEY TO FIO-CMND.
      *    PERFORM GNS-FIO-MNU.
           MOVE FIO-CMND TO FIO-IAKY FIO-IGET.
           MOVE MNU TO FIO-DFLD.
           MOVE FIO-SIST TO MNU-COD-STMA IN MNU-VARI.
           MOVE "S"      TO MNU-COD-SMNU IN MNU-VARI.
           SEND FIO-VARI TO MNU-GLS-FMNU IN MNU-VARI
                REPLY CODE 0 YIELDS FIO-MSGO-RMNU
                ON ERROR GO TO ERR-CHK-SIST.
           MOVE FIO-OUTP-RMNU TO FIO-VARI.
           IF TERMINATION-STATUS = 1 AND
              FIO-STAT-OKS AND FIO-IGET-YES
                   MOVE FIO-DFLD TO MNU
           ELSE
           IF NOT FIO-STAT-OKS
               MOVE FIO-SIST TO FIO-MENS-SIS
               MOVE "MNU"    TO FIO-MENS-REG
               IF FIO-STAT-FTL
                   PERFORM GNS-PRG-ABT.
      *
           IF FIO-STAT-OKS
               PERFORM CHK-PRV-SIST
               GO TO FIN-CHK-SIST.
           MOVE "CODNEMOSISNX" TO MSG-COD-MENS.
           GO TO FIN-CHK-SIST.
       ERR-CHK-SIST.
           MOVE "SIS    NEXST" TO MSG-COD-MENS.
       FIN-CHK-SIST.
           EXIT.

       CHK-PRV-SIST SECTION.
       INI-CHK-PRV-SIST.
           MOVE SPACES TO TSC-IPRV.
       FIN-CHK-PRV-SIST.
           EXIT.

       CHK-OPC SECTION.
       INI-CHK-OPC.
           MOVE SPACES TO MSG-COD-MENS.
           MOVE WSS-SIST        TO FIO-SIST.
           MOVE WSS-OPCI        TO MNU-COD-OPCI IN MNU.
           MOVE FIO-GET-KEY     TO FIO-CMND.
           MOVE "MNU-COD-OPCI"  TO FIO-AKEY.
           PERFORM GNS-FIO-MNU.
           IF NOT FIO-STAT-OKS
               MOVE "CODOPCINEXST" TO MSG-COD-MENS.
       FIN-CHK-OPC.
           EXIT.

       ANL-OPC SECTION.
       INI-ANL-OPC.
           IF WSS-CMND > SPACES
               MOVE WSS-CMND TO MNU-COD-CMND IN MNU.
           IF ( MNU-COD-SIST IN MNU > SPACES AND
                MNU-COD-SIST IN MNU NOT = TSC-SIST )
              AND
              ( NOT ( WSS-SIST > SPACES AND TSC-SIST NOT = WSS-SIST ) )
               MOVE MNU-COD-SIST IN MNU TO WSS-SIST
      *JSS-INI 20-DEC-1994
               IF MNU-COD-FRET IN MNU > SPACES
                   MOVE MNU-COD-FRET IN MNU TO WSS-COD-NEMO
                   PERFORM CHK-SIST
               ELSE
                   MOVE "SIS" TO WSS-COD-NEMO
      *JSS-FIN 20-DEC-1994
               PERFORM CHK-SIST.
       FIN-ANL-OPC.
           EXIT.

       PRO-FIN SECTION.
       INI-PRO-FIN.
           MOVE SPACES TO MSG-COD-MENS.

           IF MNU-COD-TFUN IN MNU = "NUL"
               MOVE "MNUTFUNNUL" TO MSG-COD-MENS
               GO TO FIN-PRO-FIN.
      * llamada a la rutina de verificacion de permisos para verificar
      * una funcion
      * considera que la funcion puede ser el llamado a otro sistema, si no
      * es asi entonces :
      * considera que la funcion puede ser un menu con lo cual muestra
      * de todas formas las opciones que ese menu tiene ( ya que "puede"
      * tener privilegio para una de las opciones de ese menu, y en caso
      * que no tenga no importa, ya que se validara privilegio al intentar
      * llamar a la opcion ).
           IF WSS-IND-PRIV NOT = "S"
               MOVE "S" TO UYP-IND-RESP
               GO TO SKP-PRO-FIN.

           MOVE "GI"                TO UYP-COD-TDPU.
           MOVE SPACES              TO UYP-COD-PREG.
           IF MNU-COD-SIST IN MNU = TSC-SIST OR
              MNU-COD-SIST IN MNU NOT > SPACES
               MOVE TSC-SIST            TO UYP-COD-SIST
               MOVE MNU-COD-NEMO IN MNU TO UYP-COD-NEMO
               IF MNU-COD-TFUN IN MNU = "MEN"
                   MOVE "S" TO UYP-IND-RESP
                   GO TO SKP-PRO-FIN
               ELSE
                   NEXT SENTENCE
           ELSE
               MOVE MNU-COD-SIST IN MNU TO UYP-COD-SIST.
           MOVE "GNSPPPRV" TO SYS-PROG.
           MOVE UYP-VARI   TO SYS-CMMA.
           MOVE +47        TO SYS-TCMA.
           MOVE SYS-LINK   TO SYS-CMND.
           PERFORM GNS-PRO-SYS.
           MOVE SYS-CMMA   TO UYP-VARI.
           IF UYP-IND-RESP NOT = "S"
               MOVE "FUN    NOPRV" TO MSG-COD-MENS
               GO TO FIN-PRO-FIN.
      * Que pasa IF MNU-COD-CMND IN MNU > SPACES ??????
       SKP-PRO-FIN.
           IF MNU-COD-SIST IN MNU NOT > SPACES
               MOVE TSC-SIST TO MNU-COD-SIST IN MNU.
           IF MNU-COD-CMND IN MNU > SPACES
               PERFORM BUS-CRPF
      *Chequear privilegios para el comando, YA ESTA HECHO
               IF WSS-COMANDO-SINPRV
                   MOVE "CMD    NOPRV" TO MSG-COD-MENS
                   GO TO FIN-PRO-FIN
               ELSE
               IF NOT WSS-EXISTE-COMANDO
                   MOVE "CMD    NEXST" TO MSG-COD-MENS
                   GO TO FIN-PRO-FIN
               ELSE
      *JSS-INI 27-APR-1994
                   PERFORM VRF-PSSW-CMND
                   IF MSG-COD-MENS > SPACES
                       GO TO FIN-PRO-FIN
                   ELSE
      *JSS-FIN 27-APR-1994
                       PERFORM CRG-VSCR.
           IF MNU-COD-SIST IN MNU NOT > SPACES OR
              MNU-COD-SIST IN MNU =     TSC-SIST
               MOVE TSC-SIST TO MNU-COD-SIST IN MNU
               MOVE TSC-SISG TO WSS-SISG
               MOVE SPACES   TO WSS-NSIS
               GO TO CON-PRO-FIN.
           IF TSC-SIST NOT = "GNS" AND MNU-COD-SIST IN MNU = "GNS"
               MOVE TSC-SIST TO TSC-SISG
           ELSE
               MOVE SPACES TO TSC-SISG.
           MOVE MNU-COD-SIST IN MNU TO TSC-SIST SCR-SIST.
       CON-PRO-FIN.
           MOVE MNU TO WSS-RMNU.
           IF MNU-COD-TFUN = "PGI" OR "PRO" OR "MEN" OR "HMC" OR
                             "HMX" OR "XMC" OR "XMX" OR "RET" OR
                             "PTC" OR "NPC"
               PERFORM PRO-RMNU
           ELSE
               PERFORM GNS-PUT-FRT
               IF MSG-COD-MENS > SPACES
                   GO TO FIN-PRO-FIN
               ELSE
               IF MNU-COD-TFUN = "CCA"
                   PERFORM PRO-RMNU
               ELSE
      *POR MIENTRAS SE HACE CON XCTROL, SE DEBE ANALIZAR ( MNU-COD-TCTL
      *MNU-COD-TINF )
                   MOVE MNU-GLS-PROG TO SYS-PROG
                   MOVE LOW-VALUES   TO SYS-CMMA
                   MOVE 0            TO SYS-TCMA
                   MOVE SYS-XCTL     TO SYS-CMND
                   PERFORM GNS-PRO-SYS.
       FIN-PRO-FIN.
           EXIT.

       PRO-RMNU SECTION.
       INI-PRO-RMNU.
           MOVE TSC-VARI TO TSC-VARI-BKP.

           MOVE SPACES TO MSG-COD-MENS.
      *JSS
           MOVE TSC-IPRV TO MNU-IND-IPRV.
      *
           MOVE MNU-COD-SIST IN MNU TO TSC-SIST SCR-SIST.
           MOVE MNU-COD-OPCI TO TSC-OPCI.
           MOVE MNU-COD-NEMO TO TSC-NEMO.
      *
           MOVE MNU-GLS-TRAN TO TSC-NTRN.
           MOVE MNU-GLS-PROG TO TSC-PROG.
           MOVE MNU-GLS-LFRM TO TSC-NLIB.
           MOVE MNU-GLS-NFRM TO TSC-NMAP.
           MOVE MNU-GLS-LDOC TO TSC-LDOC.
           MOVE MNU-GLS-NDOC TO TSC-NDOC.
           MOVE MNU-COD-FRET TO TSC-FRET.
           MOVE MNU-IND-IPRV TO TSC-IPRV.
           MOVE MNU-COD-INST TO TSC-TINS.
           MOVE MNU-COD-TCTL TO TSC-TCTL.
           MOVE MNU-COD-TINF TO TSC-TINF.
           MOVE MNU-COD-TFUN TO TSC-TFUN.
           MOVE MNU-COD-CIFD TO TSC-CIDD.
           MOVE +250         TO TSC-TCMA.
      *JSS-INI 23-DEC-1994
           MOVE MNU-COD-AMPG TO TSC-AMPG.
           MOVE MNU-COD-ASCR TO TSC-ASCR.
           MOVE MNU-GLS-NMHD TO TSC-NMHD.
           MOVE MNU-GLS-LMHD TO TSC-LMHD.
           MOVE MNU-COD-AMHD TO TSC-AMHD.
           MOVE MNU-GLS-NMCM TO TSC-NMCM.
           MOVE MNU-GLS-LMCM TO TSC-LMCM.
           MOVE MNU-COD-AMCM TO TSC-AMCM.
           MOVE MNU-COD-MSAL TO TSC-MSAL.
      *JSS-FIN 23-DEC-1994
           IF MNU-COD-TFUN = "MEN"
               PERFORM BUS-CRPF
               PERFORM CRG-VSCR
               MOVE MNU TO WSS-RMNU
               PERFORM PRO-MENU
               MOVE WSS-RMNU TO MNU
               PERFORM PUT-MHDR
               PERFORM PUT-MSCR
               GO TO CON-PRO-RMNU.
      *
           MOVE 2 TO WSS-IFRM.
           PERFORM GET-PROV.
           IF MNU-COD-TFUN NOT = "CCA"
               MOVE LOW-VALUES TO OPC-FLD
               MOVE LOW-VALUES TO OP1-FLD
               PERFORM PUT-MHDR
               PERFORM PUT-MSCR
           ELSE
           IF MNU-COD-CMND IN MNU > SPACES
               MOVE MNU-COD-CMND TO WSS-OPCI
               PERFORM BUS-CMND
               IF MSG-COD-MENS > SPACES
                   MOVE TSC-VARI-BKP TO TSC-VARI
                   GO TO FIN-PRO-RMNU
               ELSE
                   PERFORM PUT-DCMN
                   PERFORM CAL-PROG
                   IF MSG-COD-MENS > SPACES 
                       MOVE TSC-VARI-BKP TO TSC-VARI
                       GO TO FIN-PRO-RMNU
                   ELSE
                       NEXT SENTENCE
           ELSE
               PERFORM BUS-CRPF
               PERFORM CRG-VSCR
               PERFORM CAL-PROG
               IF MSG-COD-MENS > SPACES 
                   MOVE TSC-VARI-BKP TO TSC-VARI
                   GO TO FIN-PRO-RMNU.

           IF MNU-COD-CMND IN MNU > SPACES
      *JSS-INI 23-DEC-1994
               IF TSC-TFUN = "HMX" OR "XMX" OR
                  ( TSC-AMCM = "N" )
      *JSS-FIN 23-DEC-1994
      *Solo para cargar datos de COMMON AREA asociado al comando,
      *no se despliega MAPA
                   MOVE MNU-COD-CMND TO WSS-OPCI
                   PERFORM BUS-CMND
                   IF MSG-COD-MENS > SPACES 
                       MOVE TSC-VARI-BKP TO TSC-VARI
                       GO TO FIN-PRO-RMNU
                   ELSE
                       PERFORM PUT-DCMN
                       PERFORM CAL-PROG
                       IF MSG-COD-MENS > SPACES 
                           MOVE TSC-VARI-BKP TO TSC-VARI
                           GO TO FIN-PRO-RMNU
                       ELSE
                           NEXT SENTENCE
               ELSE
                   MOVE MNU-COD-CMND TO WSS-OPCI
                   PERFORM BUS-CMND
                   IF MSG-COD-MENS > SPACES 
                       MOVE TSC-VARI-BKP TO TSC-VARI
                       GO TO FIN-PRO-RMNU
                   ELSE
                       PERFORM PUT-DCMN
                       PERFORM CMN-PUTA
                       PERFORM CAL-PROG
                       IF MSG-COD-MENS > SPACES 
                           MOVE TSC-VARI-BKP TO TSC-VARI
                           GO TO FIN-PRO-RMNU
                       ELSE
                           GO TO CON-PRO-RMNU.
           PERFORM BUS-CRPF.
           PERFORM CRG-VSCR.
       CON-PRO-RMNU.
           MOVE SCR-INST-GFL TO TSC-INST
           PERFORM HBL-CMN.
       FIN-PRO-RMNU.
           EXIT.

       ERR-LEE-CMND SECTION.
       INI-ERR-LEE-CMND.
           MOVE "GNS" TO MSG-COD-SIST.
           PERFORM GET-MSG.
           IF FRM-MENS NOT > SPACES
               MOVE MSG-GLS-DESC TO FRM-MENS
           ELSE
           IF FRM-MEN1 NOT > SPACES
               MOVE MSG-GLS-DESC TO FRM-MEN1
           ELSE
           IF FRM-MEN2 NOT > SPACES
               MOVE MSG-GLS-DESC TO FRM-MEN2.
           PERFORM CMN-MSSG.
           PERFORM CMN-PUTA.
           PERFORM CMN-EXIT.
           MOVE SPACES TO FRM-MENS.
       FIN-ERR-LEE-CMND.
           EXIT.

       SHF-CACC SECTION.
       INI-SHF-CACC.
           MOVE SPACES TO WSS-AFUN.
           MOVE 1 TO WSS-I WSS-L.
       LUP-SHF-CACC.
           IF WSS-FCHR( WSS-I ) > SPACES
               MOVE WSS-FCHR( WSS-I ) TO WSS-ACHR( WSS-L )
               ADD 1 TO WSS-L.
           ADD 1 TO WSS-I.
           IF WSS-I NOT > 11
               GO TO LUP-SHF-CACC.
           MOVE WSS-AFUN TO WSS-FUNC.
       FIN-SHF-CACC.
           EXIT.

       INI-AUTO SECTION.
       INI-INI-AUTO.
           MOVE "000002020000000100" TO WSS-ITM1.
           MOVE "010003030000090800" TO WSS-ITM2.
           MOVE "010004040000090800" TO WSS-ITM3.
           MOVE "010000000505090400" TO WSS-ITM4.
           MOVE "010006060000000500" TO WSS-ITM5.
           MOVE "010007070000090800" TO WSS-ITM6.
           MOVE "010008080000090800" TO WSS-ITM7.
           MOVE "010000000000090800" TO WSS-ITM8.
           MOVE "000010100000000900" TO WSS-ITM9.
           MOVE "010011110000001200" TO WSS-ITMA.
           MOVE "010012120000001200" TO WSS-ITMB.
           MOVE "010000000000001200" TO WSS-ITMC.
           MOVE 1 TO WSS-STDO.
           MOVE 0 TO WSS-ISIS.
           MOVE 0 TO WSS-IOPC.
           MOVE 0 TO WSS-ICMD.
       FIN-INI-AUTO.
           EXIT.

       PRO-AUTO SECTION.
       INI-PRO-AUTO.
           IF WSS-FCHR( WSS-I ) NOT > SPACES
               MOVE 12 TO WSS-I
               GO TO FIN-PRO-AUTO.
           MOVE WSS-I TO WSS-IMAX.
           IF WSS-FCHR( WSS-I ) NOT < "A" AND
              WSS-FCHR( WSS-I ) NOT > "Z"
               MOVE 3 TO WSS-J
           ELSE
           IF WSS-FCHR( WSS-I ) NOT < "0" AND
              WSS-FCHR( WSS-I ) NOT > "9"
               MOVE 4 TO WSS-J
           ELSE
           IF WSS-FCHR( WSS-I ) = ":" OR "-"
               MOVE 5 TO WSS-J
               MOVE WSS-I TO WSS-ISIS
           ELSE
           IF WSS-FCHR( WSS-I ) = "/"
               MOVE 6 TO WSS-J
               MOVE WSS-I TO WSS-ISIS
           ELSE
           IF WSS-FCHR( WSS-I ) = "," OR "."
               MOVE 7 TO WSS-J
               MOVE WSS-I TO WSS-IOPC
               MOVE WSS-I TO WSS-ICMD
           ELSE
           IF WSS-FCHR( WSS-I ) NOT > SPACES
               MOVE 8 TO WSS-J
           ELSE
               MOVE 9 TO WSS-J.
           MOVE WSS-AUTO( WSS-STDO , WSS-J ) TO WSS-STDO.
           IF WSS-STDO NOT = 0
               MOVE WSS-AUTO( WSS-STDO , 1 ) TO WSS-IVAL
           ELSE
               MOVE 0 TO WSS-IVAL
               MOVE 12 TO WSS-I.
       FIN-PRO-AUTO.
           EXIT.

       UNS-CACC SECTION.
       INI-UNS-CACC.
           MOVE SPACES TO WSS-SIST WSS-OPCI WSS-CMND.
           IF WSS-ISIS > 0
               MOVE 0 TO WSS-K
               SUBTRACT 1 FROM WSS-ISIS GIVING WSS-J
               PERFORM MOV-SIST VARYING WSS-I FROM 1 BY 1
                                UNTIL   WSS-I > WSS-J
               ADD 1 WSS-ISIS GIVING WSS-L
           ELSE
               MOVE 1 TO WSS-L.
           IF WSS-ICMD > 0
               MOVE 0 TO WSS-K
               ADD 1 WSS-ICMD GIVING WSS-J
               PERFORM MOV-CMND VARYING WSS-I FROM WSS-J BY 1
                                UNTIL   WSS-I >    WSS-IMAX
               SUBTRACT 1 FROM WSS-ICMD GIVING WSS-M
           ELSE
               MOVE WSS-IMAX TO WSS-M.
           MOVE 0 TO WSS-K.
           PERFORM MOV-OPCI VARYING WSS-I FROM WSS-L BY 1
                            UNTIL   WSS-I > WSS-M.
       FIN-UNS-CACC.
           EXIT.

       MOV-SIST SECTION.
       INI-MOV-SIST.
           IF WSS-FCHR(WSS-I) > SPACES
               ADD 1 TO WSS-K
               MOVE WSS-FCHR(WSS-I) TO WSS-CSIS(WSS-K).
       FIN-MOV-SIST.
           EXIT.

       MOV-OPCI SECTION.
       INI-MOV-OPCI.
           IF WSS-FCHR(WSS-I) > SPACES
               ADD 1 TO WSS-K
               MOVE WSS-FCHR(WSS-I) TO WSS-COPC(WSS-K).
       FIN-MOV-OPCI.
           EXIT.

       MOV-CMND SECTION.
       INI-MOV-CMND.
           IF WSS-FCHR(WSS-I) > SPACES
               ADD 1 TO WSS-K
               MOVE WSS-FCHR(WSS-I) TO WSS-CCMD(WSS-K).
       FIN-MOV-CMND.
           EXIT.


       CRG-VSCR SECTION.
       INI-CRG-VSCR.
           MOVE MNU-GLS-PROG TO TSC-PROG.
           MOVE WSS-AUX-CRPF TO TSC-CRPF.
           MOVE WSS-AUX-CMNP TO TSC-CMNP.
           MOVE WSS-AUX-PRMC TO TSC-PRMC.
           MOVE WSS-AUX-CMND TO TSC-CMND.
           MOVE MNU-COD-TFUN TO TSC-TFUN.
       FIN-CRG-VSCR.
           EXIT.

       CMN-MSSG SECTION.
       INI-CMN-MSSG.
           MOVE FRM-MENS TO TRL-GLS-MENS.
       FIN-CMN-MSSG.
           EXIT.

       COPY GNSBPFRM.
       COPY GNSBSMNU.
       COPY GNSBSRPF.
       COPY GNSBGMSG.
       COPY GNSBSTAB.
       COPY GNSBSMSG.
       COPY GNSBGHOY.
       COPY GNSBIABT.
       COPY GNSBPSYS.

       PRO-MENU SECTION.
       INI-PRO-MENU.
           MOVE MNU-COD-MENU TO WSS-MENU.
           MOVE MNU-COD-NEMO TO WSS-NEMO.
           PERFORM BUS-MENU.
           IF NOT WSS-STAT-OKS
               MOVE LOW-VALUES TO OPC-FLD
               MOVE LOW-VALUES TO OP1-FLD
               MOVE FRM-MENS   TO OPC-GLS-MENS
               MOVE FRM-MENS   TO OP1-GLS-MENS
               GO TO FIN-PRO-MENU.
      *
           PERFORM BUS-TBL-RMNU.
      *
           MOVE SPACES TO OP1-MAPA.
           MOVE 0      TO OP1-GLS-MENS-LEN.
           MOVE SPACES TO OPC-MAPA.
           MOVE 0      TO OPC-GLS-MENS-LEN.
           PERFORM INI-OPCD VARYING J FROM 1 BY 1 UNTIL J > 20.
           PERFORM BUS-FUNC VARYING J FROM 1 BY 1 UNTIL
                                    J > WSS-NUM-RMNU.

           IF NOT WSS-STAT-OKS
               MOVE LOW-VALUES TO OPC-FLD
               MOVE LOW-VALUES TO OP1-FLD
               MOVE FRM-MENS   TO OPC-GLS-MENS
               MOVE FRM-MENS   TO OP1-GLS-MENS.
       FIN-PRO-MENU.
           MOVE SPACES TO MSG-COD-MENS.
       EXT-PRO-MENU.
           EXIT.

       BUS-MENU SECTION.
       INI-BUS-MENU.
           MOVE SPACES         TO MNU-COD-IMEN.
           MOVE MNU-COD-MENU   TO MNU-COD-CMEN.
           MOVE "MNU-COD-IMEN" TO FIO-AKEY.
           MOVE FIO-GET-NLS    TO FIO-CMND.
           PERFORM VID-MNU.
           IF FIO-STAT-OKS AND ( MNU-COD-CMEN = WSS-MENU )
               GO TO FIN-BUS-MENU.
           IF WSS-NEMO = "SIS"
               MOVE "GNS" TO MSG-COD-SIST
               MOVE "MNUSIS NOOPC" TO MSG-COD-MENS
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS
               MOVE 2 TO WSS-STAT
           ELSE
               MOVE "GNS" TO MSG-COD-SIST
               MOVE "MNU    NOOPC" TO MSG-COD-MENS
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS
               MOVE 1 TO WSS-STAT.
       FIN-BUS-MENU.
           EXIT.

       BUS-TBL-RMNU SECTION.
       INI-BUS-TBL-RMNU.
      *El FIO-CMND = 45 le indica al servidor que cargue tabla
      *                 WSS-TBL-RMNU con MENU
           MOVE 45 TO FIO-CMND.
           PERFORM VID-MNU.
       FIN-BUS-TBL-RMNU.
           EXIT.

       INI-OPCD SECTION.
       INI-INI-OPCD.
           MOVE 0      TO OPC-COD-OPCI-LEN( J ).
           MOVE SPACES TO OPC-COD-OPCI-ATR( J ).
           MOVE SPACES TO OPC-COD-OPCI( J ).

           MOVE 0      TO OPC-GLS-FMEN-LEN( J ).
           MOVE SPACES TO OPC-GLS-FMEN-ATR( J ).
           MOVE SPACES TO OPC-GLS-FMEN( J ).

           ADD 20 J GIVING I.

           MOVE 0      TO OPC-COD-OPCI-LEN( I ).
           MOVE SPACES TO OPC-COD-OPCI-ATR( I ).
           MOVE SPACES TO OPC-COD-OPCI( I ).

           MOVE 0      TO OPC-GLS-FMEN-LEN( I ).
           MOVE SPACES TO OPC-GLS-FMEN-ATR( I ).
           MOVE SPACES TO OPC-GLS-FMEN( I ).

           MOVE 0      TO OP1-COD-OPCI-LEN( J ).
           MOVE SPACES TO OP1-COD-OPCI-ATR( J ).
           MOVE SPACES TO OP1-COD-OPCI( J ).

           MOVE 0      TO OP1-GLS-FMEN-LEN( J ).
           MOVE SPACES TO OP1-GLS-FMEN-ATR( J ).
           MOVE SPACES TO OP1-GLS-FMEN( J ).
       FIN-INI-OPCD.
           EXIT.

       BUS-FUNC SECTION.
       INI-BUS-FUNC.
           MOVE WSS-REG-RMNU( J ) TO MNU.
      * llamada a la rutina de verificacion de permisos para verificar
      * un funcion
      * considera que la funcion puede ser el llamado a otro sistema, si no
      * es asi entonces :
      * considera que la funcion puede ser un menu con lo cual muestra
      * de todas formas las opciones que ese menu tiene ( ya que "puede"
      * tener privilegio para una de las opciones de ese menu, y en caso
      * que no tenga no importa, ya que se validara privilegio al intentar
      * llamar a la opcion ).
           IF WSS-IND-PRIV NOT = "S"
               MOVE "S" TO UYP-IND-RESP
               GO TO CON-BUS-FUNC.

           MOVE "GI"                TO UYP-COD-TDPU.
           MOVE SPACES              TO UYP-COD-PREG.
           IF MNU-COD-SIST IN MNU = TSC-SIST OR
              MNU-COD-SIST IN MNU NOT > SPACES
               MOVE TSC-SIST            TO UYP-COD-SIST
               MOVE MNU-COD-NEMO IN MNU TO UYP-COD-NEMO
               IF MNU-COD-TFUN IN MNU = "MEN"
                   MOVE "S" TO UYP-IND-RESP
                   GO TO CON-BUS-FUNC
               ELSE
                   NEXT SENTENCE
           ELSE
               MOVE MNU-COD-SIST IN MNU TO UYP-COD-SIST.
           MOVE "GNSPPPRV" TO SYS-PROG.
           MOVE UYP-VARI   TO SYS-CMMA.
           MOVE +47        TO SYS-TCMA.
           MOVE SYS-LINK   TO SYS-CMND.
           PERFORM GNS-PRO-SYS.
           MOVE SYS-CMMA   TO UYP-VARI.
       CON-BUS-FUNC.
           IF MNU-NUM-FILA < 3 OR MNU-NUM-FILA > 22
               MOVE "GNS" TO MSG-COD-SIST
               MOVE "MNUFILAINV" TO MSG-COD-MENS
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS
               MOVE 1 TO WSS-STAT
               GO TO FIN-BUS-FUNC.
           SUBTRACT 2 FROM MNU-NUM-FILA.
           IF MNU-NUM-COLU = 1
                MOVE "0" TO WSS-IFRM
                MULTIPLY MNU-NUM-FILA BY 2 GIVING I
                SUBTRACT 1 FROM I
                MOVE MNU-COD-OPCI TO OPC-COD-OPCI( I )
                MOVE MNU-GLS-FMEN TO OPC-GLS-FMEN( I )
           ELSE
           IF MNU-NUM-COLU = 41
                MOVE "0" TO WSS-IFRM
                MULTIPLY MNU-NUM-FILA BY 2 GIVING I
                MOVE MNU-COD-OPCI TO OPC-COD-OPCI( I )
                MOVE MNU-GLS-FMEN TO OPC-GLS-FMEN( I )
           ELSE
           IF MNU-NUM-COLU = 24
                MOVE "1" TO WSS-IFRM
                MOVE MNU-COD-OPCI TO OP1-COD-OPCI(MNU-NUM-FILA)
                MOVE MNU-GLS-FMEN TO OP1-GLS-FMEN(MNU-NUM-FILA)
           ELSE
               MOVE "GNS" TO MSG-COD-SIST
               MOVE "MNUCOLUINV" TO MSG-COD-MENS
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS
               MOVE 1 TO WSS-STAT
               GO TO FIN-BUS-FUNC.
           IF WSS-IFRM = 0 AND UYP-IND-RESP NOT = "S"
      *DFHBMASK
               MOVE "0" TO OPC-COD-OPCI-ATR( I )
           ELSE
           IF WSS-IFRM = 1 AND UYP-IND-RESP NOT = "S"
      *DFHBMASK
               MOVE "0" TO OP1-COD-OPCI-ATR(MNU-NUM-FILA).
       FIN-BUS-FUNC.
           EXIT.

      ******************************************************************

       BUS-CRPF SECTION.
       INI-BUS-CRPF.
           MOVE 0 TO WSS-IND-CMND.
           MOVE MNU-GLS-PROG TO WSS-SIST.
           IF WSS-SIST NOT = "GNS"
               MOVE MNU-COD-SIST TO WSS-SIST.
           MOVE SPACES       TO WSS-AUX-CRPF.
      *
           IF MNU-GLS-PROG NOT > SPACES
                MOVE "GNSPPMEN" TO WSS-AUX-CMNP
                PERFORM BUS-PRMC
                GO TO FIN-BUS-CRPF.
      *
           MOVE MNU-GLS-PROG TO RPF-KEY-DPRO.
           MOVE "C "         TO RPF-KEY-TRYC.
           MOVE SPACES       TO RPF-KEY-DARC.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM VID-RPF.
           IF NOT FIO-STAT-OKS
                MOVE "GNSPPMEN" TO WSS-AUX-CMNP
                PERFORM BUS-PRMC
                GO TO FIN-BUS-CRPF.
           IF RPF-GLS-PRMT NOT > SPACES
               PERFORM BUS-PRMC
           ELSE
           IF RPF-GLS-PRMT NOT = "NOMSG"
               MOVE RPF-GLS-PRMT TO WSS-AUX-PRMC
           ELSE
               MOVE SPACES TO WSS-AUX-PRMC.
           IF RPF-GLS-UARC NOT > SPACES
                MOVE "GNSPPMEN" TO WSS-AUX-CMNP
           ELSE
                MOVE RPF-GLS-UARC TO WSS-AUX-CMNP.
           MOVE MNU-GLS-PROG TO RPF-KEY-DPRO.
           MOVE "C0"         TO RPF-KEY-TRYC.
           MOVE FIO-GET-NLS  TO FIO-CMND.
           PERFORM VID-RPF.
           IF NOT FIO-STAT-OKS
                 GO TO FIN-BUS-CRPF.
      *
           PERFORM BUS-TBL-RRPF.
      *
           PERFORM LEE-CRPF VARYING J FROM 1 BY 1 UNTIL
                                    J > WSS-NUM-RRPF.
           PERFORM BUS-GLOS VARYING I FROM 1 BY 1 UNTIL I > 10.
           IF WSS-IND-PRIV = "S"
               PERFORM CHK-PRV-CMND.
       FIN-BUS-CRPF.
           MOVE SPACES TO MSG-COD-MENS.
       EXT-BUS-CRPF.
           EXIT.

       BUS-TBL-RRPF SECTION.
       INI-BUS-TBL-RRPF.
      *El FIO-CMND = 45 le indica al servidor que cargue tabla
      *                 WSS-TBL-RRPF con Rregistros RPF
           MOVE 45 TO FIO-CMND.
           PERFORM VID-RPF.
       FIN-BUS-TBL-RRPF.
           EXIT.

       LEE-CRPF SECTION.
       INI-LEE-CRPF.
           MOVE WSS-REG-RRPF( J ) TO RPF.
           IF NOT ( RPF-KEY-DPRO = MNU-GLS-PROG AND
                    RPF-KEY-TREG = "C" )
                   GO TO FIN-LEE-CRPF.
           IF MNU-COD-CMND IN MNU > SPACES AND
              MNU-COD-CMND = RPF-COD-CCMN
               MOVE MNU-COD-CMND TO WSS-AUX-CMND
               MOVE 1            TO WSS-IND-CMND.
           MOVE RPF-KEY-CORR TO I.
           ADD 1 I GIVING K.
           MOVE RPF-COD-CCMN TO WSS-COD-CMND( K ).
           MOVE RPF-COD-CCPP TO WSS-COD-CCPP( K ).
           MOVE RPF-IND-STPP TO WSS-IND-STPP( K ).
           MOVE RPF-GLS-PRMT TO WSS-GLS-PRMT( K ).
           MOVE RPF-GLS-CONF TO WSS-GLS-CONF( K ).
           MOVE RPF-GLS-UARC TO WSS-GLS-UARC( K ).
       FIN-LEE-CRPF.
           EXIT.

       BUS-MGKY SECTION.
       INI-BUS-MGKY.
           MOVE "MSGKEY" TO MSG-COD-MENS.
           MOVE "GNS"    TO MSG-COD-SIST.
           PERFORM GET-MSG.
      *    MOVE MSG-GLS-DESC TO SCR-MGKY.
       FIN-BUS-MGKY.
           EXIT.
       BUS-PRMC SECTION.
       INI-BUS-PRMC.
           IF MNU-COD-TFUN = "MEN"
               MOVE "PRMMEN" TO MSG-COD-MENS
           ELSE
               MOVE "PRMPGI" TO MSG-COD-MENS.
           MOVE "GNS"    TO MSG-COD-SIST.
           PERFORM GET-MSG.
           MOVE MSG-GLS-DESC TO WSS-AUX-PRMC.
       FIN-BUS-PRMC.
           EXIT.
       BUS-GLOS SECTION.
       INI-BUS-GLOS.
           IF WSS-COD-CMND( I ) NOT > SPACES
               GO TO FIN-BUS-GLOS.
           IF WSS-GLS-PRMT( I ) NOT > SPACES
               MOVE SPACES TO WSS-COD-MENS
               IF WSS-GLS-UARC( I ) NOT > SPACES
                   MOVE "GNS"             TO MSG-COD-SIST
                   MOVE "FLD"             TO WSS-COD-TMN1
                   MOVE WSS-COD-CCPP( I ) TO WSS-COD-TMN2
                   MOVE WSS-COD-MENS      TO MSG-COD-MENS
                   PERFORM GET-MSG
                   MOVE MSG-GLS-DESC TO WSS-GLS-PRMT( I )
               ELSE
                   MOVE "GNS"             TO MSG-COD-SIST
                   MOVE "SUB"             TO WSS-COD-TMN1
                   MOVE WSS-COD-CCPP( I ) TO WSS-COD-TMN2
                   MOVE WSS-COD-MENS      TO MSG-COD-MENS
                   PERFORM GET-MSG
                   MOVE MSG-GLS-DESC TO WSS-GLS-PRMT( I )
           ELSE
           IF WSS-GLS-PRMT( I ) = "NOMSG"
               MOVE SPACES TO WSS-GLS-PRMT( I ).
           IF WSS-GLS-CONF( I ) NOT > SPACES
               MOVE SPACES TO WSS-COD-MENS
               MOVE "GNS"             TO MSG-COD-SIST
               MOVE "CNF"             TO WSS-COD-TMN1
               MOVE WSS-COD-CCPP( I ) TO WSS-COD-TMN2
               MOVE WSS-COD-MENS      TO MSG-COD-MENS
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO WSS-GLS-CONF( I )
           ELSE
           IF WSS-GLS-CONF( I ) = "NOMSG"
               MOVE SPACES TO WSS-GLS-CONF( I ).
       FIN-BUS-GLOS.
           EXIT.
      ******************************************************************
       VID-MNU SECTION.
       INI-VID-MNU.
           MOVE TSC-SIST TO FIO-SIST.
           PERFORM GNS-FIO-MNU.
       FIN-VID-MNU.
           EXIT.
       VID-RPF SECTION.
       INI-VID-RPF.
           MOVE WSS-SIST TO FIO-SIST.
           PERFORM GNS-FIO-RPF.
       FIN-VID-RPF.
           EXIT.
      ******************************************************************
       PUT-MHDR SECTION.
       INI-PUT-MHDR.
           IF ( TSC-TFUN = "XMC" OR "XMX" ) OR
              ( TSC-AMHD = "N" )
               IF ( TSC-ASCR NOT > SPACES OR TSC-ASCR = "C" OR
                    TSC-ASCR = "L" )
                   MOVE "GNSAOPC"    TO FRM-NLIB
                   MOVE "GNSFOPC"    TO FRM-NAME
                   MOVE FRM-CLR-FRM TO FRM-CMND
                   PERFORM GNS-PRO-FRM
                   GO TO FIN-PUT-MHDR
               ELSE
                   GO TO FIN-PUT-MHDR.
           IF ( TSC-NMHD NOT > SPACES ) OR ( TSC-NMHD = "GNSFHDR" )
               PERFORM GNSSCRHDR
           ELSE
               MOVE LOW-VALUES TO HDR-FLD.
       FIN-PUT-MHDR.
           EXIT.
       GNSSCRHDR SECTION.
       INI-GNSSCRHDR.
           MOVE SPACES       TO HEA-DOBL.
           MOVE MNU-GLS-FPRO TO HEA-SIMP.
           PERFORM HDR-TITU.
           MOVE TSC-SIST     TO HDR-COD-SIST.
           MOVE MNU-COD-OPCI TO HDR-GLS-NFRM.
           MOVE HEA-DOBL     TO HDR-GLS-FPRO.
           PERFORM GET-FHOY.
           MOVE HOY-DHOY TO HEA-NUM-DMSA IN HEA-FEC-DMSA.
           MOVE HOY-MHOY TO HEA-NUM-MMSA IN HEA-FEC-DMSA.
           MOVE HOY-SHOY TO HEA-NUM-SMSA IN HEA-FEC-DMSA.
           MOVE HOY-AHOY TO HEA-NUM-AMSA IN HEA-FEC-DMSA.
           MOVE "/"      TO HEA-GLS-SLA1 HEA-GLS-SLA2.
           MOVE HEA-FEC-DMSA TO HDR-FEC-DMSA IN HDR-FLD.
           IF TSC-SIST = "GNS"
               MOVE TSC-SISG TO HDR-COD-FUNC
           ELSE
               MOVE SPACES TO HDR-COD-FUNC.
           MOVE SPACES TO HDR-GLS-GLS1
                          HDR-GLS-GLS2
                          HDR-GLS-GLS3.
       FIN-GNSSCRHDR.
           EXIT.
       HDR-TITU SECTION.
       INI-HDR-TITU.
           IF HEA-SIMP = SPACES
                      GO TO FIN-HDR-TITU.
           PERFORM BUS-LIMI VARYING IMIN FROM 1 BY 1
                      UNTIL HEA-GLS-SIMP(IMIN) NOT = SPACES.
           PERFORM BUS-LIMI VARYING IMAX FROM 31 BY -1
                      UNTIL HEA-GLS-SIMP(IMAX) NOT = SPACES.
           IF MNU-IND-EXGL IN MNU = "N"
               COMPUTE L = ( 61 - ( IMAX - IMIN + 1 ) ) / 2
               MOVE 1 TO I
           ELSE
               COMPUTE
                  L = ( 61 - ( 2 * ( IMAX - IMIN + 1 ) - 1 ) ) / 2 + 1
               MOVE 2 TO I.
           PERFORM PUT-TITU
                   VARYING K FROM IMIN BY 1 UNTIL K > IMAX.
       FIN-HDR-TITU.
           EXIT.
       BUS-LIMI SECTION.
       INI-BUS-LIMI.
       FIN-BUS-LIMI.
           EXIT.
       PUT-TITU SECTION.
       INI-PUT-TITU.
           MOVE HEA-GLS-SIMP( K ) TO HEA-GLS-DOBL( L ).
           ADD I TO L.
       FIN-PUT-TITU.
           EXIT.
      ******************************************************************
       PUT-MSCR SECTION.
       INI-PUT-MSCR.
           IF TSC-AMPG = "N"
               MOVE SPACES TO TSC-NMAP TSC-NLIB
               GO TO FIN-PUT-MSCR.
           IF TSC-NMAP NOT > SPACES AND TSC-NLIB NOT > SPACES
               IF WSS-IFRM = "0"
                   MOVE "GNSFOPC" TO TSC-NMAP
                   MOVE "GNSAOPC" TO TSC-NLIB
               ELSE
                   MOVE "GNSFOP1" TO TSC-NMAP
                   MOVE "GNSAOPC" TO TSC-NLIB.
           IF TSC-NMAP NOT > SPACES
               MOVE TSC-NLIB TO TSC-NMAP.
           IF TSC-NLIB NOT > SPACES
               MOVE TSC-NMAP TO TSC-NLIB.
       FIN-PUT-MSCR.
           EXIT.
      ******************************************************************
       HBL-CMN SECTION.
       INI-HBL-CMN.
      *JSS-INI 23-DEC-1994
           IF ( TSC-TFUN = "HMX" OR "XMX" ) OR
              ( TSC-AMCM = "N" )
      *JSS-FIN 23-DEC-1994
               MOVE LOW-VALUES TO TRL-GLS-TERM IN TRL-FLD
               MOVE LOW-VALUES TO TRL-COD-CMND IN TRL-FLD
               MOVE LOW-VALUES TO TRL-GLS-PRMT IN TRL-FLD
               MOVE LOW-VALUES TO TRL-COD-CACC IN TRL-FLD
               GO TO CON-HBL-CMN.
           PERFORM PUT-CMND VARYING CMN-K FROM 1 BY 1 UNTIL CMN-K > 10.
           IF TSC-TFUN = "MEN"
               MOVE "PFSMEN" TO MSG-COD-MENS
           ELSE
               MOVE "PFSCMN" TO MSG-COD-MENS.
           MOVE "GNS" TO MSG-COD-SIST.
           PERFORM GET-MSG.
           MOVE MSG-GLS-DESC TO WSS-MEN1.
           MOVE MSG-GLS-MENS TO WSS-MEN2.
           MOVE WSS-MENS TO TRL-GLS-TERM.
           MOVE CMN-IDX-CCMN TO TRL-COD-CMND.
           MOVE TSC-PRMC     TO TRL-GLS-PRMT.
           MOVE SPACES       TO TRL-COD-CACC.
       CON-HBL-CMN.
           MOVE FRM-CPIM-UBY TO TRL-COD-CACC-ATR.
           PERFORM CMN-PUTA.
           PERFORM CMN-EXIT.
       FIN-HBL-CMN.
           EXIT.
       PUT-CMND SECTION.
       INI-PUT-CMND.
           MOVE TSC-CCMN ( CMN-K ) TO CMN-COD-CCMN ( CMN-K ).
       FIN-PUT-CMND.
             EXIT.
      ******************************************************************
       CMN-PUTA SECTION.
       INI-CMN-PUTA.
           MOVE FRM-POS-CURS TO TRL-COD-CACC-LEN.
           MOVE FRM-CPSF-AEY TO TRL-GLS-MENS-ATR.
      *JSS-INI 27-APR-1994
           IF TSC-PASW = "S"
               MOVE FRM-CPIM-UNY TO TRL-COD-CACC-ATR
           ELSE
           IF TRL-COD-CACC-ATR NOT = FRM-CPIM-AEY AND
              TRL-COD-CACC-ATR NOT = FRM-CPSF-AEY
               MOVE FRM-CPIM-UBY TO TRL-COD-CACC-ATR.
      *JSS-FIN 27-APR-1994
           IF WSS-IFRM = "0"
               MOVE "GNSFOPC" TO TSC-NMAP
               MOVE "GNSAOPC" TO TSC-NLIB
               MOVE FRM-MENS TO OPC-GLS-MENS TRL-GLS-MENS
               MOVE HDR-FLD  TO OPC-MHDR
               MOVE TRL-FLD  TO OPC-MTRL
               MOVE OPC-MAPA TO FRM-DFLD
           ELSE
           IF WSS-IFRM = "1"
               MOVE "GNSFOP1" TO TSC-NMAP
               MOVE "GNSAOPC" TO TSC-NLIB
               MOVE FRM-MENS TO OP1-GLS-MENS TRL-GLS-MENS
               MOVE HDR-FLD  TO OP1-MHDR
               MOVE TRL-FLD  TO OP1-MTRL
               MOVE OP1-MAPA TO FRM-DFLD
           ELSE
               MOVE FRM-MENS TO TRL-GLS-MENS
               MOVE HDR-MAPA TO FRM-DFLD.

           MOVE TSC-NMAP TO FRM-NAME.
           MOVE TSC-NLIB TO FRM-NLIB.
      *     MOVE FRM-PUT-ALL TO FRM-CMND.
      *     PERFORM GNS-PRO-FRM.
           MOVE SPACES TO FRM-MENS.
       FIN-CMN-PUTA.
           EXIT.

       CMN-EXIT SECTION.
       INI-CMN-EXIT.
           IF WSS-IFRM = "0"
               MOVE "GNSFOPC" TO TSC-NMAP
               MOVE "GNSAOPC" TO TSC-NLIB
           ELSE
           IF WSS-IFRM = "1"
               MOVE "GNSFOP1" TO TSC-NMAP
               MOVE "GNSAOPC" TO TSC-NLIB.
      *
           MOVE TSC-NMAP TO FRM-NAME.
           MOVE TSC-NLIB TO FRM-NLIB.
           MOVE FRM-GET-ALL TO FRM-CMND.
      *    PERFORM GNS-PRO-FRM.
           CALL FRM-NLIB USING SCR-VARI FRM-VARI
                         ON ERROR GO TO ERR-CMN-EXIT.
      *
           MOVE SPACES   TO MSG-COD-MENS FRM-MENS.
           MOVE FRM-DFLD TO TRL-COD-CACC.
           GO TO FIN-CMN-EXIT.
       ERR-CMN-EXIT.
           MOVE "XCTERR    " TO MSG-COD-MENS.
           MOVE FRM-NLIB     TO FRM-MEN2.
       FIN-CMN-EXIT.
           EXIT.
      ******************************************************************
       BUS-CMND SECTION.
       INI-BUS-CMND.
           MOVE "CMD    NEXST" TO MSG-COD-MENS.
           MOVE 1 TO CMN-I.
       LUP-BUS-CMND.
           IF TSC-CCMN( CMN-I ) = WSS-OPCI
               MOVE SPACES TO MSG-COD-MENS
               GO TO FIN-BUS-CMND.
           ADD 1 TO CMN-I.
           IF CMN-I NOT > 10
               GO TO LUP-BUS-CMND.
       FIN-BUS-CMND.
           EXIT.

       PUT-DCMN SECTION.
       INI-PUT-DCMN.
           MOVE CMN-I TO TSC-I.
           MOVE TSC-CCMN( TSC-I ) TO TSC-CMND.
           IF ( TSC-TFUN = "HMX" OR "XMX" ) OR
              ( TSC-AMCM = "N" )
               MOVE LOW-VALUES TO TRL-GLS-TERM IN TRL-FLD
               MOVE LOW-VALUES TO TRL-COD-CMND IN TRL-FLD
               MOVE LOW-VALUES TO TRL-GLS-PRMT IN TRL-FLD
               MOVE LOW-VALUES TO TRL-COD-CACC IN TRL-FLD
               MOVE SPACES     TO TRL-GLS-MENS IN TRL-FLD
               GO TO CON-PUT-DCMN.
           MOVE SPACES                TO CMN-IDX-CCMN.
           MOVE TSC-CCMN( TSC-I ) TO CMN-COD-CCMN( TSC-I ).
           MOVE CMN-IDX-CCMN          TO TRL-COD-CMND.
           MOVE SPACES                TO TRL-GLS-PRMT TRL-COD-CACC.
           MOVE "GNS"                 TO MSG-COD-SIST.
           MOVE SPACES                TO WSS-COD-MENS.
           MOVE "PFSPGI"              TO WSS-COD-TMSG.
           MOVE TSC-STPP( TSC-I ) TO WSS-COD-TMN3.
           MOVE WSS-COD-MENS          TO MSG-COD-MENS.
           PERFORM GET-MSG.
           MOVE MSG-GLS-DESC TO WSS-MEN1.
           MOVE MSG-GLS-MENS TO WSS-MEN2.
           MOVE WSS-MENS TO TRL-GLS-TERM.
           PERFORM BUS-MGKY.
           MOVE MSG-GLS-DESC TO TRL-GLS-MENS.
       CON-PUT-DCMN.
           MOVE FRM-CPSF-AEY TO TRL-COD-CACC-ATR.
       FIN-PUT-DCMN.
           EXIT.

       GET-PROV SECTION.
       INI-GET-PROV.
           MOVE SPACES TO TSC-PROV.
           MOVE SPACES TO TSC-NTRV.
           IF TSC-TFUN NOT = "PTC"
               GO TO FIN-GET-PROV.
           MOVE TSC-PROG     TO RPF-KEY-DPRO.
           MOVE "C "         TO RPF-KEY-TRYC.
           MOVE SPACES       TO RPF-KEY-DARC.
      *
           MOVE TSC-PROG TO FIO-SIST.
           IF FIO-SIST NOT = "GNS"
               MOVE TSC-SIST TO FIO-SIST.
      *
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM GNS-FIO-RPF.
           IF NOT FIO-STAT-OKS
               GO TO FIN-GET-PROV.
           MOVE RPF-GLS-ABRT IN RPF TO WSS-PPPV.
           MOVE WSS-PROV            TO TSC-PROV.
           MOVE WSS-NTRV            TO TSC-NTRV.
       FIN-GET-PROV.
           EXIT.

       GNS-PUT-TSC SECTION.
       INI-GNS-PUT-TSC.
      *     EXEC CICS HANDLE CONDITION
      *               QIDERR (PUT-GNS-PUT-TSC)
      *               ITEMERR(PUT-GNS-PUT-TSC)
      *     END-EXEC.
      **
      *     MOVE EIBTRMID TO TSC-TERM.
      **    MOVE +720     TO TSC-LITM.
      *     MOVE TSC-TTSC TO TSC-LITM.
      *     MOVE +1 TO QUE-NITM
      *     EXEC CICS WRITEQ TS
      *               QUEUE(TSC-COLA)
      *               FROM(TSC-ITEM)
      *               LENGTH(TSC-LITM)
      *               ITEM(QUE-NITM)
      *               REWRITE
      *     END-EXEC.
      *     GO TO FIN-GNS-PUT-TSC.
      * PUT-GNS-PUT-TSC.
      *     EXEC CICS WRITEQ TS
      *               QUEUE(TSC-COLA)
      *               FROM(TSC-ITEM)
      *               LENGTH(TSC-LITM)
      *     END-EXEC.
       FIN-GNS-PUT-TSC.
           EXIT.

       CAL-PROG SECTION.
       INI-CAL-PROG.
           IF TSC-UARC( TSC-I ) > SPACES
               MOVE TSC-UARC( TSC-I ) TO AUX-UARC
               MOVE TSC-PROG TO AUX-PROG
               MOVE TSC-NTRN TO AUX-NTRN
               MOVE AUX-PRGM TO TSC-UARC( TSC-I )
               MOVE AUX-RPRG TO TSC-PROG
               MOVE AUX-RTRN TO TSC-NTRN.

           MOVE "P"          TO TSC-ICMN.
           MOVE SCR-INST-HCM TO TSC-INST.

           PERFORM PRO-MOVE-SCR2.
           PERFORM PRO-MOVE-VSYS.
           PERFORM PRO-CALL-LINK.
       FIN-CAL-PROG.
           EXIT.

       PRO-MOVE-SCR2 SECTION.
       INI-PRO-MOVE-SCR2.
           MOVE +250               TO SCR-TCMA.
           MOVE TSC-SIST           TO SCR-SIST.
           MOVE TSC-SISG           TO SCR-SISG.
           MOVE TSC-NTRN           TO SCR-NTRN.
           MOVE TSC-PROG           TO SCR-PROG.
           MOVE TSC-NTRV           TO SCR-NTRV.
           MOVE TSC-PROV           TO SCR-PROV.
           MOVE TSC-NLIB           TO SCR-NLIB.
           MOVE TSC-NMAP           TO SCR-NMAP.
           IF TSC-TINS > SPACES
               MOVE TSC-TINS       TO SCR-INST
           ELSE
               MOVE SCR-INST-HKY   TO SCR-INST.
           MOVE TSC-CMNP           TO SCR-CMNP.
      *    MOVE TSC-CMND           TO SCR-CMND.
           MOVE TSC-CCMN( TSC-I )  TO SCR-CMND.
           MOVE TSC-CCPP( TSC-I )  TO SCR-CCPP.
           MOVE TSC-STPP( TSC-I )  TO SCR-STPP.
           MOVE TSC-PRMT( TSC-I )  TO SCR-PRMT.
           MOVE TSC-CONF( TSC-I )  TO SCR-CONF.
           MOVE TSC-USER           TO SCR-USER.
           MOVE TSC-OTRN           TO SCR-OTRN.
           MOVE "C"                TO SCR-ICMN.
      *                                SCR-QIDD
      *                                SCR-LIDD
           MOVE TSC-NEMO           TO SCR-NEMO.
           MOVE TSC-LDOC           TO SCR-LDOC.
           MOVE TSC-NDOC           TO SCR-NDOC.
           MOVE TSC-FRET           TO SCR-FRET.
           MOVE TSC-IPRV           TO SCR-IPRV.
           MOVE TSC-FFLD           TO SCR-FFLD.
       FIN-PRO-MOVE-SCR2.
           EXIT.

       PRO-MOVE-VSYS SECTION.
       INI-PRO-MOVE-VSYS.
               MOVE SCR-VARI TO SYS-CMMA
               MOVE SCR-TCMA TO SYS-TCMA
           MOVE TSC-PROG TO SYS-PROG.
           MOVE TSC-NTRN TO SYS-NTRN.
       FIN-PRO-MOVE-VSYS.
           EXIT.

       PRO-CALL-LINK SECTION.
       INI-PRO-CALL-LINK.
      *    MOVE FRM-MENS TO TRL-GLS-MENS.
           MOVE HDR-MAPA TO FRM-DFLD.
           MOVE SPACES TO MSG-COD-MENS.
           CALL SCR-NLIB USING SCR-VARI FRM-VARI
                         ON ERROR GO TO ERR-PRO-CALL-LINK.
           GO TO FIN-PRO-CALL-LINK.
       ERR-PRO-CALL-LINK.
           MOVE "XCTERR    " TO MSG-COD-MENS.
           MOVE SCR-NLIB     TO FRM-MEN2.
       FIN-PRO-CALL-LINK.
           EXIT.

       GNS-PUT-FRT SECTION.
       INI-GNS-PUT-FRT.
      *     EXEC CICS HANDLE CONDITION
      *               QIDERR (QNX-GNS-PUT-FRT)
      *     END-EXEC.
      *     MOVE EIBTRMID TO RFN-TERM.
      *     EXEC CICS DELETEQ
      *               QUEUE(RFN-COLA)
      *     END-EXEC.
      * QNX-GNS-PUT-FRT.
      *     MOVE TSC-CMNP                TO RFN-PROG.
      *     MOVE MNU-COD-SIST IN MNU     TO RFN-SIST.
      *     MOVE TSC-SISG                TO RFN-SISG.
      *     IF MNU-COD-TFUN = "CCA"
      *         MOVE TSC-NEMO TO MNU-COD-FRET IN MNU.
      *     MOVE MNU-COD-FRET IN MNU TO RFN-NEMO.
      *     MOVE SPACES              TO RFN-CMND.
      *     MOVE +29 TO RFN-LITM.
      *     EXEC CICS WRITEQ TS
      *               QUEUE(RFN-COLA)
      *               FROM(RFN-ITEM)
      *               LENGTH(RFN-LITM)
      *               AUXILIARY
      *     END-EXEC.
       FIN-GNS-PUT-FRT.
           EXIT.
