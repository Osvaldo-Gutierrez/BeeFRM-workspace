100
 !!! IPT 
 !!! ARCHIVOS PREPTEX MODULO DE MANEJO IPTBM
 !!! 001  PUT
 !!! 002  RET Y KEY
 !!! 003  CLR ( FLD Y KEY )
 !!! 004  FST-KEY Y FST-FLD
 !!! 005  PRO
 !!! 006  UNP
 !!! 007  PERFORM VAL-{FLD}
 !!! 008  VAL-{FLD} SECTION
 !!! 009  VAL-CON
 !!! 010  VAL-NUM
 !!! 011  EDT-NUM
 !!! ARCHIVOS PREPTEX REGISTRO IMAGEN IPTWI
 !!! 001  VRF
 !!! 001  IDC
 !!! 001  FEC
 !!! WF NO REQUIERE EDICION
 !!! ARCHIVOS PREPTEX REGISTRO IMAGEN IPTWF
 !!! 001  VRF
 !!! 001  IDC
 !!! 001  FEC
 !!! 004  EDT
 !!! ARCHIVOS PREPTEX MAPA IPTMAP
 !!! 001  FLD
 !!!   y la Tabla en RCR_GLS_FIMP
	COMMON ( FIO_VARI ) STRING FILLER=26,FIO_STAT=1,FIO_INFO=1,	&
				   FIO_ACCS=1,FILL
        RECORD DMN
               STRING  DMN_COD_DOMI=32
               STRING  DMN_COD_SIST=03
               STRING  DMN_COD_REGI=03
               STRING  DMN_COD_TABL=04
               STRING  DMN_COD_TIPO=01
               STRING  DMN_MSC_FMTO=01
               STRING  DMN_NUM_LARG=03
               STRING  DMN_GLS_FIMP=20
               STRING  DMN_GLS_VALI=16
               STRING  DMN_GLS_BUSQ=16
               STRING  DMN_GLS_DISP=59
	END RECORD DMN
	COMMON ( DMN ) DMN DMN
	RECORD	RCR
               STRING  RCR_COD_RECO=32
               STRING  RCR_COD_DOMI=32
               STRING  RCR_COD_SIST=03
               STRING  RCR_COD_REGI=03
               STRING  RCR_GLS_FIMP=20
               STRING  RCR_GLS_DISP=68
	END RECORD RCR
	COMMON ( RCR ) RCR RCR

 !!! FLB
   DECLARE INTEGER                      			 &
	MAP_CNL_FPTX 						,&
	MAP_CNL_FUYS 						,&
	MAP_CNL_FKYH 						,&
        KYM_POSI						,&
        VAX_COLU 						,&
	KYH_POS_TXT(150)					,&
        KYM_POS_INI						,&
        KYM_NUM_PIC						,&
        HLP_POSI

 !!! FLB
   DECLARE STRING 						 &
        KYH_REG							,&
        KYH_GLS_NOMC						,&
        KYH_NUM_POSC						,&
        KYH_NUM_LENC						,&
        HLP_SIST						,&
        HLP_TABL						,&
        HLP_NUM_POSC

   DECLARE INTEGER                      			 &
	NUMTOKEN           					,&
	SZTOKEN            					,&
	TOKEN              					,&
	P_P                					,&
	P_Q                					,&
	SZ_I_B

   DECLARE   STRING						 &
	C_Q                					,&
	VALTOKEN           					,&
	STRTOKEN

   DECLARE INTEGER   CONSTANT					 &
	KEYTOK = 1,         		IDNTOK = 2		,&
	NUMTOK = 3,         		STRTOK = 4		,&
	CHRTOK = 5,         		EOLTOK = 6		,&
	ETXTOK = 7,         		HTAB   = 9

200
 !!! FGEN ASIMILADO A {SIS}BU{FRM}
   DECLARE INTEGER						 &
	MAP_CNL_FDMN,			MAP_CNL_FRCR		,&
	MAP_CNL_FBMS,			MAP_TOT_CMPO		,&
	MAP_CNL_FGEN,			MAP_TOT_CIDX		,&
	MAP_CNL_FFLG,			MAP_TOT_FILE		,&
	MAP_CNL_FTXT,			MAP_CNL_FGBU		,&
					MAP_NUM_PICT		,&
	MAP_NUM_LINE_FRM,		MAP_NUM_FILA_FRM	,&
	MAP_SWI_FILE,        		MAP_NUM_LINE        	,&
	MAP_SWI_PFLD,			MAP_NUM_COLU		,&
	MAP_SWI_FEC,			MAP_NUM_CORR		,&
	MAP_SWI_VRF,			MAP_NUM_TTEX		,&
	MAP_SWI_CFRM,			MAP_NUM_INFE        	,&
	MAP_SWI_GLOS,			MAP_NUM_SUPE		,&
	MAP_SWI_ERRO,			MAP_IND_OVER		,&
	MAP_IND_CMPO						,&
	WBMS_NUM_SOR						,&
	WTXT_NUM_SOR,       		MAP_IND_NUM		,&
	MAP_VEC_UNDE(10)					,&
	MAP_VEC_FICO(150,2),		MAP_MAT_SCRN(24,80) 	,&
	MAP_VEC_TFLD(150)					,&
	MAP_VEC_DSPL(150),		MAP_VEC_DERI(150)	,&
	MAP_VEC_DSPL_SDF(150)					,&
	MAP_VEC_PFLD(150),  		MAP_VEC_MOVE(150)  	,&
	MAP_VEC_SCLR(150), 		MAP_VEC_LGLS(150)	,&
	OVR_NUM_COL,        		MAP_NUM_VSZ        ,&
	OVR_NUM_FIL,        MAP_NUM_ASC        ,&
	MAP_NUM_BAS			        ,&
	BMS_NUM_DPZ,        BMS_NUM_PIC        ,&
	ANT_INDEX,          NIV_INDEX          ,&
	TMP_INDEX,          MAP_VEC_PROT(150)  ,&
	ACT_INDEX,          MAP_VEC_TIDX(150)        ,&
	MAP_VEC_VALI(150),   MAP_VEC_PKEY(150)  ,&
	MAP_NUM_NCS,        MAP_NUM_NCI        ,&
	MAP_VEC_NUME(150) ,&
	MAP_NUM_TFEC,       OVR_NUM_LEN        ,&
	OVR_NUM_ADI,        MAP_VEC_ENT(150)   ,&
	MAP_VEC_DECM(150),   MAP_VEC_BYA(150)  ,&
	MAP_VEC_VAUT(150),  MAP_VEC_GLOS(150)  ,&
	MAP_VEC_FECH(150),	MAP_TOT_NOMB   ,&
	MAP_TOT_REPE	,	MAP_VEC_IOV(150),&
	MAP_VEC_BUS(150),	MAP_IND_TFLD	,&
	MAP_VEC_TVAL(150),	MAP_VEC_NORM(150),&
	VALIDA_VRF_IDX				,&
      MAP_VEC_CGEN(150)			     ,&
      MAP_VEC_CGEN_SDF(150)			     ,&
        MAP_VEC_GLS_VRF(150)	,&
	PTX_TOT_ELM

   DECLARE   STRING                           &
      MAP_ASC_BEL,        MAP_ASC_NWL        ,&
      MAP_FIL_BMS,        MAP_FIL_FLG        ,&
      MAP_FIL_DMN,        MAP_FIL_RCR        ,&
      MAP_GLS_WRIT,       MAP_GLS_FLG        ,&
      WRT_GLS_LIN,        WRT_GLS_COL        ,&
      WRT_GLS_COR,        MAP_GLS_PIC        ,&
      WRT_GLS_DAT,        MAP_GLS_DEF        ,&
      MAP_GLS_MAPA,       MAP_GLS_PROY       ,&
	MAPUYS					,&
      MAP_GLS_PBM,        MAP_GLS_TYP        ,&
      MAP_GLS_L11,        MAP_GLS_L12        ,&
      MAP_GLS_L13,        MAP_GLS_CMP        ,&
      MAP_GLS_L21,        MAP_GLS_L31        ,&
      MAP_GLS_FIL,        MAP_VEC_OBLI(150)   ,&
      MAP_VEC_PAI(150)   		     ,&
      MAP_GLS_COL,        MAP_GLS_VIX(150)   ,&
      MAP_GLS_POS,        MAP_GLS_BMS        ,&
      MAP_GLS_TXT,        MAP_GLS_PXZ        ,&
      MAP_GLS_STP,        MAP_FIL_GEN        ,&
      MAP_VEC_CMP(150),   MAP_VEC_REGI(150)   ,&
      MAP_VEC_TIPO(150),   MAP_VEC_NOMB(150)   ,&
      MAP_VEC_REGI_REG(150),   MAP_VEC_REGI_FRM(150)   ,&
      MAP_VEC_NOMB_AUX(150)   			,&
      V_ANSI(6),          MAP_FIL_TXT        ,&
	MAP_FIL_PTX		,&
	MAP_FIL_UYS		,&
      MAP_VEC_FIL(50),    MAP_GLS_HLP        ,&
      IN_FRM_FLD,        MAP_GLS_MST        ,&
      IN_FRM_EDT			,&
      MAP_VEC_BLK(10),	  WRT_BM	     ,&
      MAP_VEC_RRTN(150),   MAP_GLS_RED       ,&
      MAP_VEC_FRTN(150)			     ,&
      MAP_VEC_NIDX(150)			     ,&
      MAP_VEC_FRTN_SDF(150)		     ,&
      MAP_VEC_LENG_SDF(150)		     ,&
      SGN_LEAD,           MAP_VEC_TAB(150)   ,&
      MAP_VEC_DMSA(5),    MAP_GLS_PRE        ,&
      MAP_GLS_SFEC,       MAP_GLS_DLD        ,&
      MAP_GLS_DLI			     ,&
      MAP_GLS_NOMB,        MAP_GLS_OCC        ,&
      MAP_GLS_MAT,	  MAP_GLS_EDTN	     ,&
      NIVFLD,    SPAFLD    ,&
      NIVHJO,    MAP_GLS_SPA_HJO    ,&
      MAP_SEPA_PIC,       MAP_SEPA_LEN       ,&
      MAP_SEPA_ATR,       GEN_GLS_PRT        ,&
      MAP_VEC_NMR(150),   GEN_GLS_VAL        ,&
      MAP_GLS_PIC_ALF,    MAP_GLS_PIC_EDT    ,&
      MAP_VEC_ISG(150),	  MAP_GLS_DARK	     ,&
      FIO_CMND				     ,&
      MAP_GLS_VCOD,       MAP_GLS_VIND       ,&
      MAP_GLS_GCOD,       MAP_GLS_GIND       ,&
      MAP_GLS_IDEN,	  MAP_VEC_REPE(300)  ,&
      MAP_GLS_SECC,	  MAP_GLS_IZR	     ,&
      MAP_VEC_FCMP(150),  MAP_VEC_TCMP(150)  ,&
      MAP_OPT_GEN,	  MAP_GLS_BU	     ,&
      MAP_OPT_HLP,	  MAP_GLS_TFLD	     ,&
      MAP_GLS_BQ,         MAP_GLS_BA	     ,&
      MAP_GLS_BP			     ,&
      MAP_COD_PAI,	  PUT_HDR_EDT		,&
      MAP_COD_CLI		,&
      MAP_COD_SOP		,&
      MAP_COD_AIU		,&
	PTX_ISFL		,&
	PTX_ISVR		,&
	PTX_IFLD		,&
	PTX_FILN		,&
	PTX_FILH		,&
	PTX_COLN		,&
	PTX_COLH		,&
	PTX_TEX1		,&
	SDF_TEX1		,&
	PTX_TEX2		,&
	SDF_TEX2		,&
	PTX_SIZ1		,&
	SDF_SIZ1		,&
	PTX_SIZ2		,&
	SDF_SIZ2		,&
	PTX_TOT_TEX		,&
	PTX_DSP_ONL		,&
	PTX_SWI_WPTX		,&
	UYS_ALF_SECC		,&
	UYS_ALF_SSEC		,&
	UYS_ALF_FILA		,&
	UYS_ALF_COLU		,&
	UYS_ALF_CORR		,&
	PUT_HDR_SECC_4		,&
	PUT_HDR_SECC_7		,&
	PUT_HDR_SECC_A		,&
	PUT_HDR_SECC_D		,&
	PUT_HDR_SECC_G		,&
	PUT_HDR_SECC_J		,&
	PUT_HDR_SECC_M		,&
	PUT_HDR_SECC_P		,&
	DISPLAY_ELEMENT_ALF	


   DECLARE   STRING CONSTANT			&
      FIO_STAT_OKS  = "0"

   DECLARE STRING POS_VEC_ZRS(4)
      POS_VEC_ZRS(1) = "0"
      POS_VEC_ZRS(2) = ""
      POS_VEC_ZRS(3) = ""
      POS_VEC_ZRS(4) = ""

   DECLARE STRING POS_VEC_ZER_SDF(5)
      POS_VEC_ZER_SDF(1) = "0000"
      POS_VEC_ZER_SDF(2) = "000"
      POS_VEC_ZER_SDF(3) = "00"
      POS_VEC_ZER_SDF(4) = "0"
      POS_VEC_ZER_SDF(5) = ""

   DECLARE STRING MAP_GLS_BYA(4)
      MAP_GLS_BYA(1) = "FRM-CPIM-AEY"
      MAP_GLS_BYA(2) = "FRM-CPIM-UBY"
      MAP_GLS_BYA(3) = "FRM-CPIM-ANY"
      MAP_GLS_BYA(4) = "FRM-CPIM-UNY"

   DECLARE STRING MAP_VEC_FFEC(7)
      MAP_VEC_FFEC(1) = " 'ddmmssaa' "
      MAP_VEC_FFEC(2) = " 'ddmmaa' "
      MAP_VEC_FFEC(3) = " 'mmssaa' "
      MAP_VEC_FFEC(4) = " 'mmaa' "
      MAP_VEC_FFEC(5) = " 'ssaa' "
      MAP_VEC_FFEC(6) = " 'ddmm' "
      MAP_VEC_FFEC(7) = " 'aa' "

   DECLARE STRING MAP_VEC_VFEC(7)
      MAP_VEC_VFEC(1) = "FEC"
      MAP_VEC_VFEC(2) = "DMA"
      MAP_VEC_VFEC(3) = "MSA"
      MAP_VEC_VFEC(4) = "FMA"
      MAP_VEC_VFEC(5) = "FSA"
      MAP_VEC_VFEC(6) = "FDM"
      MAP_VEC_VFEC(7) = "FFA"

   DECLARE STRING MAP_VEC_COLU_HEX(80)
      MAP_VEC_COLU_HEX(01) = "40"
      MAP_VEC_COLU_HEX(02) = "4F"
      MAP_VEC_COLU_HEX(03) = "7F"
      MAP_VEC_COLU_HEX(04) = "7B"
      MAP_VEC_COLU_HEX(05) = "5B"
      MAP_VEC_COLU_HEX(06) = "6C"
      MAP_VEC_COLU_HEX(07) = "50"
      MAP_VEC_COLU_HEX(08) = "7D"
      MAP_VEC_COLU_HEX(09) = "4D"
      MAP_VEC_COLU_HEX(10) = "5D"
      MAP_VEC_COLU_HEX(11) = "5C"
      MAP_VEC_COLU_HEX(12) = "4E"
      MAP_VEC_COLU_HEX(13) = "6B"
      MAP_VEC_COLU_HEX(14) = "60"
      MAP_VEC_COLU_HEX(15) = "4B"
      MAP_VEC_COLU_HEX(16) = "61"
      MAP_VEC_COLU_HEX(17) = "F0"
      MAP_VEC_COLU_HEX(18) = "F1"
      MAP_VEC_COLU_HEX(19) = "F2"
      MAP_VEC_COLU_HEX(20) = "F3"
      MAP_VEC_COLU_HEX(21) = "F4"
      MAP_VEC_COLU_HEX(22) = "F5"
      MAP_VEC_COLU_HEX(23) = "F6"
      MAP_VEC_COLU_HEX(24) = "F7"
      MAP_VEC_COLU_HEX(25) = "F8"
      MAP_VEC_COLU_HEX(26) = "F9"
      MAP_VEC_COLU_HEX(27) = "7A"
      MAP_VEC_COLU_HEX(28) = "5E"
      MAP_VEC_COLU_HEX(29) = "4C"
      MAP_VEC_COLU_HEX(30) = "7E"
      MAP_VEC_COLU_HEX(31) = "6E"
      MAP_VEC_COLU_HEX(32) = "6F"
      MAP_VEC_COLU_HEX(33) = "7C"
      MAP_VEC_COLU_HEX(34) = "C1"
      MAP_VEC_COLU_HEX(35) = "C2"
      MAP_VEC_COLU_HEX(36) = "C3"
      MAP_VEC_COLU_HEX(37) = "C4"
      MAP_VEC_COLU_HEX(38) = "C5"
      MAP_VEC_COLU_HEX(39) = "C6"
      MAP_VEC_COLU_HEX(40) = "C7"
      MAP_VEC_COLU_HEX(41) = "C8"
      MAP_VEC_COLU_HEX(42) = "C9"
      MAP_VEC_COLU_HEX(43) = "D1"
      MAP_VEC_COLU_HEX(44) = "D2"
      MAP_VEC_COLU_HEX(45) = "D3"
      MAP_VEC_COLU_HEX(46) = "D4"
      MAP_VEC_COLU_HEX(47) = "D5"
      MAP_VEC_COLU_HEX(48) = "D6"
      MAP_VEC_COLU_HEX(49) = "D7"
      MAP_VEC_COLU_HEX(50) = "D8"
      MAP_VEC_COLU_HEX(51) = "D9"
      MAP_VEC_COLU_HEX(52) = "E2"
      MAP_VEC_COLU_HEX(53) = "E3"
      MAP_VEC_COLU_HEX(54) = "E4"
      MAP_VEC_COLU_HEX(55) = "E5"
      MAP_VEC_COLU_HEX(56) = "E6"
      MAP_VEC_COLU_HEX(57) = "E7"
      MAP_VEC_COLU_HEX(58) = "E8"
      MAP_VEC_COLU_HEX(59) = "E9"
      MAP_VEC_COLU_HEX(60) = "4A"
      MAP_VEC_COLU_HEX(61) = "E0"
      MAP_VEC_COLU_HEX(62) = "5A"
      MAP_VEC_COLU_HEX(63) = "5F"
      MAP_VEC_COLU_HEX(64) = "6D"
      MAP_VEC_COLU_HEX(65) = "79"
      MAP_VEC_COLU_HEX(66) = "81"
      MAP_VEC_COLU_HEX(67) = "82"
      MAP_VEC_COLU_HEX(68) = "83"
      MAP_VEC_COLU_HEX(69) = "84"
      MAP_VEC_COLU_HEX(70) = "85"
      MAP_VEC_COLU_HEX(71) = "86"
      MAP_VEC_COLU_HEX(72) = "87"
      MAP_VEC_COLU_HEX(73) = "88"
      MAP_VEC_COLU_HEX(74) = "89"
      MAP_VEC_COLU_HEX(75) = "91"
      MAP_VEC_COLU_HEX(76) = "92"
      MAP_VEC_COLU_HEX(77) = "93"
      MAP_VEC_COLU_HEX(78) = "94"
      MAP_VEC_COLU_HEX(79) = "95"
      MAP_VEC_COLU_HEX(80) = "96"

   DECLARE STRING MAP_VEC_FILA_HEX(24)
      MAP_VEC_FILA_HEX(01) = "40"
      MAP_VEC_FILA_HEX(02) = "4F"
      MAP_VEC_FILA_HEX(03) = "7F"
      MAP_VEC_FILA_HEX(04) = "7B"
      MAP_VEC_FILA_HEX(05) = "5B"
      MAP_VEC_FILA_HEX(06) = "6C"
      MAP_VEC_FILA_HEX(07) = "50"
      MAP_VEC_FILA_HEX(08) = "7D"
      MAP_VEC_FILA_HEX(09) = "4D"
      MAP_VEC_FILA_HEX(10) = "5D"
      MAP_VEC_FILA_HEX(11) = "5C"
      MAP_VEC_FILA_HEX(12) = "4E"
      MAP_VEC_FILA_HEX(13) = "6B"
      MAP_VEC_FILA_HEX(14) = "60"
      MAP_VEC_FILA_HEX(15) = "4B"
      MAP_VEC_FILA_HEX(16) = "61"
      MAP_VEC_FILA_HEX(17) = "F0"
      MAP_VEC_FILA_HEX(18) = "F1"
      MAP_VEC_FILA_HEX(19) = "F2"
      MAP_VEC_FILA_HEX(20) = "F3"
      MAP_VEC_FILA_HEX(21) = "F4"
      MAP_VEC_FILA_HEX(22) = "F5"
      MAP_VEC_FILA_HEX(23) = "F6"
      MAP_VEC_FILA_HEX(24) = "F7"

   DECLARE INTEGER   CONSTANT                 &
      MAP_CTE_YES =  1,   MAP_CTE_NOT =  0   ,&
      MAP_ASC_LFD = 10,   MAP_ASC_CRT = 13   ,&
      MAP_CTE_NUM =  0,   MAP_CTE_ALF =  1   ,&
      MAP_CTE_IDF =  2,   MAP_IND_FLD =  0   ,&
      MAP_IND_IKY =  1,   MAP_IND_MKY =  2   ,&
      MAP_IND_AKY =  3                       ,&
      MAP_IND_FIC =  4 				,&
      MG_C       =  1,   MG_A       =  2     ,&
      MG_B       =  3,   MG_1       =  4     ,&
      MG_2       =  5,   MG_N       =  6     ,&
      MAP_NUM_CODI  = 1, MAP_NUM_MISC = 2    ,&
      FEC_IND_FFEC  = 1, FEC_IND_FDMA = 2    ,&
      FEC_IND_FMSA  = 3, FEC_IND_FFMA = 4    ,&
      FEC_IND_FFSA  = 5, FEC_IND_FFDM = 6    ,&
      FEC_IND_FFFA  = 7, MAP_IND_IDC = 1     ,&
      MAP_IND_VIND  = 1, MAP_IND_VGLS = 2	,&
      MAP_IND_VVRF  = 3

	FEC$	= "FALSE"
	NRO$	= "FALSE"
	VRF$	= "FALSE"
	IDC$	= "FALSE"
	BUSTAB$	= "FALSE"
	VALCOD$	= "FALSE"
	BUSMSC$	= "FALSE"
	VALIND$ = "FALSE"
	BUSOFI$ = "FALSE"
	VALOFI$ = "FALSE"
	BUSUSR$ = "FALSE"
	VALUSR$ = "FALSE"
	VALTDU$ = "FALSE"
	ERRGLS$	= "TRUE"

   DEF INTEGER MAP_FNC_GRCR
	AUX_RCR$ = MAP_VEC_FRTN(I%)
        CALL GENRPTREP(AUX_RCR$,"_","-")
        RCR::RCR_COD_RECO = AUX_RCR$
 !!!	PRINT "IJ" ; AUX_RCR$
 !!!        RCR::RCR_COD_RECO = MAP_VEC_REGI(I%) + "-" +&
 !!!		MAP_VEC_TIPO(I%) + "-" + MAP_VEC_NOMB(I%)
        FIO_CMND = "GET_KEY             "
        CALL "GNSFIORCR" BY REF (FIO_CMND)
   END DEF

   DEF INTEGER MAP_FNC_GDMN
        DMN::DMN_COD_DOMI = RCR::RCR_COD_DOMI
        FIO_CMND = "GET_KEY             "
        CALL "GNSFIODMN" BY REF (FIO_CMND)
	IF FIO_STAT = FIO_STAT_OKS THEN
		WSS_COD_TABL$ = DMN::DMN_COD_TABL
		WSS_COD_TABL$ = EDIT$(WSS_COD_TABL$,2%)
	END IF
   END DEF

 !!! FLB
 !============ BUSCA CUANTOS TEXTOS HAY ANTES DEL CAMPO EN CUESTION

   DEF INTEGER KYH_FNC_TXT

 !!! obtiene posicion campo segun fms vax
      KYH_POS_VAX = (MAP_NUM_LINE - 1 )*80 + VAX_COLU

   MAP_NUM_CXTX = 0
   FOR I% = 1 TO KYH_TOT_TXT
	IF KYH_POS_TXT(I%) < KYH_POS_VAX THEN
            MAP_NUM_CXTX = MAP_NUM_CXTX + 1
	END IF
   NEXT I%

   END DEF

 !!! FLB
 !============ FORMA NOMBRE CAMPO DE LARGO 15  ==============

   DEF INTEGER MAP_OBT_NKYH

      IF LEN(MAP_VEC_FRTN(MAP_IND_CMPO)) > 15 THEN
          KYH_GLS_NOMC = LEFT$(MAP_VEC_FRTN(IND_AUXI),15)
      ELSE
          KYH_GLS_NOMC = MAP_VEC_FRTN(IND_AUXI)
	  FOR I% = LEN(MAP_VEC_FRTN(IND_AUXI)) TO 14
              KYH_GLS_NOMC = KYH_GLS_NOMC + " "
          NEXT I%
      END IF

   END DEF

 !!! FLB
 !============ ESCRIBE EN ARCHIVO DM  REGISTROS PARA ===========
 !============ SETEO DE LLAVES Y HLP CODIGOS ===========

   DEF INTEGER MAP_GEN_KYH

 !!! busca cuantos textos hay antes del campo en cuestion map_num_cxtx
   MAP_NUM_FNC = KYH_FNC_TXT

 !!! Lee recorrido y, casi siempre, dominio para formar datos para HLP
   IF MAP_VEC_DSPL(MAP_IND_CMPO) <> MAP_CTE_YES THEN
      I% = MAP_IND_CMPO
      MAP_NUM_FNC = MAP_FNC_GRCR
      IF FIO_STAT = FIO_STAT_OKS THEN
 !!!  obtiene y formatea posicion campos para registro hlp
         IF  RCR::RCR_COD_SIST > "   " AND RCR::RCR_GLS_FIMP > "   " THEN
             HLP_SIST = RCR::RCR_COD_SIST
             DMN::DMN_COD_TABL = RCR::RCR_GLS_FIMP
             HLP_TABL = DMN::DMN_COD_TABL
             HLP_POSI = KYH_POS_VAX - 1
             HLP_NUM_POSC = FORMAT$(HLP_POSI,"####")
         ELSE
             MAP_NUM_FNC = MAP_FNC_GDMN
	     
             IF FIO_STAT = FIO_STAT_OKS THEN
		     IF LEN(WSS_COD_TABL$) > 3 OR&
	                 DMN::DMN_COD_REGI = "MSC" THEN
			 MAP_VEC_VAUT(MAP_IND_CMPO) = MAP_NUM_MISC
                     ELSE
		     IF LEN(WSS_COD_TABL$) = 3 AND&
                        WSS_COD_TABL$ <> "OFI" AND&
                        WSS_COD_TABL$ <> "USR" THEN
			 MAP_VEC_VAUT(MAP_IND_CMPO) = MAP_NUM_CODI
		     END IF
	     END IF
             IF FIO_STAT = FIO_STAT_OKS THEN
                HLP_SIST = DMN::DMN_COD_SIST
                HLP_TABL = DMN::DMN_COD_TABL
                HLP_POSI = KYH_POS_VAX - 1
                HLP_NUM_POSC = FORMAT$(HLP_POSI,"####")
             ELSE
                HLP_SIST = "   "
                HLP_TABL = "    "
                HLP_NUM_POSC = "    "
             END IF
         END IF
      ELSE
         HLP_SIST = "   "
         HLP_TABL = "    "
         HLP_NUM_POSC = "    "
      END IF
   ELSE
      HLP_SIST = "   "
      HLP_TABL = "    "
      HLP_NUM_POSC = "    "
   END IF

 !!! obtiene nombre campo para registro hlp y KYH
   IND_AUXI = MAP_IND_CMPO
   MAP_NUM_FNC = MAP_OBT_NKYH

 !!! obtiene posicion campo para registro KYH
   KYM_POSI = (MAP_NUM_LINE - 1 )*80 - KYM_POS_INI + &
              VAX_COLU + MAP_NUM_CXTX + MAP_NUM_CXFL 

   KYH_NUM_POSC = FORMAT$(KYM_POSI,"####")
   IND_AUXI = MAP_IND_CMPO
   MAP_NUM_FNC = MAP_OBT_NKYH

   IF MAP_SWI_IDC = MAP_CTE_YES THEN
 !!!   KYM_NUM_PIC contiene largo = 4, lo que debe modificarse
       KYH_NUM_LENC = "01"
   ELSE
       KYH_NUM_LENC = FORMAT$(KYM_NUM_PIC,"##")
   END IF

 !!!      PRINT "POSVAX ", KYH_POS_VAX, " CXTX ", MAP_NUM_CXTX, " CXFL ", &
 !!!	    MAP_NUM_CXFL

 !!! escribe registro KYH para seteo de llaves
      KYH_REG = MAP_GLS_PROY + "F" +  MAP_GLS_MAPA + KYH_GLS_NOMC + " " +&
	 	KYH_NUM_POSC + " "+ KYH_NUM_LENC + &
		HLP_SIST + HLP_TABL + HLP_NUM_POSC
	IF MAP_OPT_HLP = "HLP" THEN
		PRINT #MAP_CNL_FKYH, KYH_REG
	END IF

   END DEF

 !====================== WRITE ARCHIVO SORT ======================

    DEF STRING MAP_FNC_WBMS (STRING MAP_GLS_WRIT)

       WRT_GLS_DAT = FORMAT$(WBMS_NUM_SOR,"#")
       WRT_GLS_LIN = FORMAT$(MAP_NUM_LINE,"##")
       WRT_GLS_COL = FORMAT$(MAP_NUM_COLU,"###")
       WRT_GLS_COR = FORMAT$(MAP_NUM_CORR,"###")
       NN% = 0

       IF MAP_COD_AIU = "SCC" THEN

                IF INSTR(1,MAP_GLS_WRIT,"DFHMDF POS=(") <> 0 THEN
                    NN% = 1
                    N% = INSTR(1,MAP_GLS_WRIT,"DFHMDF POS=(")
                    A$ = '% FILA = ' + NUM1$(INTEGER(MID$(MAP_GLS_WRIT,N%+12,2)) + MAP_NUM_INFE - 1)
		    PRINT #MAP_CNL_FBMS,WRT_GLS_DAT + WRT_GLS_LIN + WRT_GLS_COL + WRT_GLS_COR + A$
                    A$ = '% COLU = ' + MID$(MAP_GLS_WRIT,N%+15,2)
		    PRINT #MAP_CNL_FBMS,WRT_GLS_DAT + WRT_GLS_LIN + WRT_GLS_COL + WRT_GLS_COR + A$
                ELSE
                  IF INSTR(1,MAP_GLS_WRIT,"INITIAL=") <> 0 THEN
                    NN% = 1
                    N% = INSTR(1,MAP_GLS_WRIT,"INITIAL=")
                    MM% = LEN(MAP_GLS_WRIT)
                    A$ = '% TXTO = "' + MID$(MAP_GLS_WRIT,N%+9,MM%-N%-9) + '"'
		    PRINT #MAP_CNL_FBMS,WRT_GLS_DAT + WRT_GLS_LIN + WRT_GLS_COL + WRT_GLS_COR + A$
		    PRINT #MAP_CNL_FBMS,WRT_GLS_DAT + WRT_GLS_LIN + WRT_GLS_COL + WRT_GLS_COR + '% CAMPO = FALSE'
		    PRINT #MAP_CNL_FBMS,WRT_GLS_DAT + WRT_GLS_LIN + WRT_GLS_COL + WRT_GLS_COR + "% INCLUDE  'GNSMA001'"
                  ELSE
                    IF INSTR(1,MAP_GLS_WRIT,"% ") = 0 THEN
                         NN% = 1
                    END IF
                  END IF
                END IF
       END IF

       IF NN% = 0 THEN

       MAP_GLS_WRIT = WRT_GLS_DAT + WRT_GLS_LIN + WRT_GLS_COL + WRT_GLS_COR + MAP_GLS_WRIT
       MAP_NUM_CORR = MAP_NUM_CORR + 1
	IF MAP_COD_AIU = "BMS" OR&
           MAP_COD_AIU = "SCC" THEN
		PRINT #MAP_CNL_FBMS,MAP_GLS_WRIT
        END IF

       ELSE

            MAP_NUM_CORR = MAP_NUM_CORR + 1

       END IF

       MAP_GLS_WRIT = ""
    END DEF
 !====================== SOBREPOSICION ======================
    DEF INTEGER MAP_FNC_OVR
       MAP_IND_OVER = MAP_CTE_NOT
 !!!       IF OVR_NUM_FIL < 3 OR OVR_NUM_FIL > 21 THEN
 !!!          PRINT MAP_ASC_BEL;"Error : fila ";OVR_NUM_FIL ;" Invalida "
 !!!          MAP_SWI_ERRO = MAP_CTE_YES
 !!!       END IF
       FOR K% = OVR_NUM_COL TO ( OVR_NUM_COL + OVR_NUM_LEN + OVR_NUM_ADI - 1 )
          IF K% < 1 OR K% > 80 THEN
             MAP_SWI_ERRO = MAP_CTE_YES
             MAP_IND_OVER = MAP_CTE_YES
 !!!             PRINT MAP_ASC_BEL;"Error : Posicion Invalida en fila ";&
 !!!             OVR_NUM_FIL;" y columna ";K%
          ELSE
             IF MAP_MAT_SCRN(OVR_NUM_FIL,K%) <> 0 THEN
                MAP_SWI_ERRO = MAP_CTE_YES
                MAP_IND_OVER = MAP_CTE_YES
 !!!                PRINT MAP_ASC_BEL;"Error : Posicion Invalida en fila ";&
 !!!                OVR_NUM_FIL;" y columna ";K%
             END IF
             MAP_MAT_SCRN(OVR_NUM_FIL,K%) = MAP_MAT_SCRN(OVR_NUM_FIL,K%) + 1
          END IF
       NEXT K%
    END DEF
 !====================== POSICION ===============================
   DEF INTEGER R_POS
      MAP_GLS_POS = POS_VEC_ZRS(LEN(STR$(BMS_NUM_COL+BMS_NUM_DPZ))) +&
         STR$(BMS_NUM_COL + BMS_NUM_DPZ)
      MAP_GLS_POS = "POS=(" + MAP_GLS_FIL + "," + MAP_GLS_POS + ")"
   END DEF
 !====================== WRITE ARCHIVO TXT ======================

    DEF STRING MAP_FNC_WRWI (STRING MAP_GLS_WRIT)
       WRT_GLS_DAT = FORMAT$(WTXT_NUM_SOR,"#")
       WRT_GLS_LIN = FORMAT$(MAP_NUM_LINE,"##")
       WRT_GLS_COL = FORMAT$(MAP_NUM_COLU,"###")
       WRT_GLS_COR = FORMAT$(MAP_NUM_CORR,"###")
       MAP_GLS_WRIT = WRT_GLS_DAT + WRT_GLS_LIN + WRT_GLS_COL + WRT_GLS_COR +&
          MAP_GLS_WRIT
       MAP_NUM_CORR = MAP_NUM_CORR + 1
	IF PTX_SWI_WWI$ <> "NO" THEN
		PRINT #MAP_CNL_FTXT,MAP_GLS_WRIT
	END IF
	IF MAP_COD_SOP = "MCP" THEN
	IF PTX_SWI_WPTX = "SI" THEN
	       PRINT #MAP_CNL_FPTX,MAP_GLS_WRIT
	END IF
	END IF
	PTX_SWI_WPTX = "NO"
	PTX_SWI_WWI$ = ""
       MAP_GLS_WRIT = ""
    END DEF

 !====================== WRITE ARCHIVO PTX ======================

    DEF STRING MAP_FNC_WRWF (STRING MAP_GLS_WRIT)
       WRT_GLS_DAT = FORMAT$(WTXT_NUM_SOR,"#")
       WRT_GLS_LIN = FORMAT$(MAP_NUM_LINE,"##")
       WRT_GLS_COL = FORMAT$(MAP_NUM_COLU,"###")
       WRT_GLS_COR = FORMAT$(MAP_NUM_CORR,"###")
       MAP_GLS_WRIT = WRT_GLS_DAT + WRT_GLS_LIN + WRT_GLS_COL + WRT_GLS_COR +&
          MAP_GLS_WRIT
	IF MAP_COD_SOP = "MCP" THEN
		PRINT #MAP_CNL_FPTX,MAP_GLS_WRIT
		MAP_GLS_WRIT = ""
	END IF
    END DEF

 !====================== WRITE ARCHIVO UYS ======================

    DEF STRING MAP_FNC_WRWU (STRING MAP_GLS_WRIT)
 !!!       UYS_ALF_SECC = FORMAT$(UYS_ALF_SECC,"#")
       UYS_ALF_SSEC = FORMAT$(UYS_NUM_SSEC,"#")
       UYS_ALF_FILA = FORMAT$(WU_NUM_LINE,"##")
       UYS_ALF_COLU = FORMAT$(WU_NUM_COLU,"##")
       UYS_ALF_CORR = FORMAT$(MAP_NUM_CORR,"###")
       MAP_GLS_WRIT = UYS_ALF_SECC + UYS_ALF_SSEC + UYS_ALF_FILA +&
			UYS_ALF_COLU + UYS_ALF_CORR + MAP_GLS_WRIT
	IF MAP_COD_SOP = "MCP" THEN
		PRINT #MAP_CNL_FUYS,MAP_GLS_WRIT
	END IF
       MAP_GLS_WRIT = ""
    END DEF

 !====================== TOKEN ==========================================

    DEF INTEGER NEXTTOKEN
    ON ERROR GO TO MAP_LAB_ERR
       IF TOKEN = ETXTOK THEN
          NEXTTOKEN = ETXTOK
          GO TO NEX_LAB_ASG
       END IF
       P_P = P_Q 
 NEX_LAB_NEW:
       WHILE (MID$(I_B$,P_P,1) = " " OR ASCII(MID$(I_B$,P_P,1)) = HTAB) AND &
          P_P <= SZ_I_B
          P_P = P_P + 1
       NEXT
       P_Q = P_P 
       IF P_P > SZ_I_B OR I_B$ = "" THEN
          GET #MAP_CNL_FFLG
          SZ_I_B = RECOUNT
          MOVE FROM #MAP_CNL_FFLG , I_B$ = SZ_I_B
          P_P, P_Q  = 1
          GO TO NEX_LAB_NEW
        END IF
        C_Q = MID$(I_B$,P_Q,1)
        IF (C_Q >= "A" AND C_Q <= "Z") OR (C_Q >= "a" AND C_Q <= "z") THEN
            WHILE (MID$(I_B$,P_P,1) >= "A" AND MID$(I_B$,P_P,1) <= "Z" &
               OR  MID$(I_B$,P_P,1)  = "_"      &
          OR  MID$(I_B$,P_P,1) >= "a" AND &
              MID$(I_B$,P_P,1) <= "z")
                        P_P = P_P + 1
         NEXT
         SZTOKEN = P_P - P_Q
         NEXTTOKEN = IDNTOK
         VALTOKEN = MID$(I_B$,P_Q,SZTOKEN)
      ELSE
      IF C_Q >= "0" AND C_Q <= "9" THEN
         WHILE MID$(I_B$,P_P,1) >= "0" AND MID$(I_B$,P_P,1) <= "9"
            P_P = P_P + 1
         NEXT
         SZTOKEN = P_P - P_Q
         NEXTTOKEN = NUMTOK
         VALTOKEN = MID$(I_B$,P_Q,SZTOKEN)
         NUMTOKEN  = VAL(VALTOKEN)
      ELSE
      IF C_Q = '"'  OR C_Q = "'" THEN
         P_P = P_P + 1
         WHILE MID$(I_B$,P_P,1) <> C_Q
            P_P = P_P + 1
         NEXT
         SZTOKEN = P_P - (P_Q + 1)
         P_P = P_P + 1
         NEXTTOKEN = STRTOK
         STRTOKEN = MID$(I_B$,P_Q + 1,SZTOKEN)
         VALTOKEN = C_Q + STRTOKEN + C_Q
      ELSE
         NEXTTOKEN = CHRTOK
         VALTOKEN = MID$(I_B$,P_P,1)
       P_P = P_P + 1
       SZTOKEN = 1
      END IF
      END IF
      END IF
      GO TO NEX_LAB_ASG
 MAP_LAB_ERR:
      CLOSE #MAP_CNL_FFLG
      IF ERR = 11 THEN
          NEXTTOKEN = ETXTOK
      ELSE
          PRINT   "ERROR(";ERR;") ";ERT$(ERR);" en linea ";erl;&
            ", MODULO ";ern$
       END IF
       RESUME 800
 NEX_LAB_ASG:
       P_Q = P_P
800
   END DEF

805
  !====================== FORM ======================

   DEF INTEGER MAP_FNC_FOR
      WHILE VALTOKEN <> "FORM"
         TOKEN = NEXTTOKEN
      NEXT
      TOKEN = NEXTTOKEN
      TOKEN = NEXTTOKEN
      TOKEN = NEXTTOKEN
      MAP_GLS_MAPA = STRTOKEN
      IF LEN(MAP_GLS_MAPA) > 3 THEN
          MAP_GLS_PROY = LEFT$(MAP_GLS_MAPA,3)
          MAP_GLS_MAPA = RIGHT$(MAP_GLS_MAPA,4)
      END IF
	MAPUYS = MAP_GLS_PROY + 'F' + MAP_GLS_MAPA
 !!!	APERTURA  ARCHIVO MAPA
      MAP_FIL_BMS = MAP_GLS_PROY + "A" + MAP_GLS_MAPA + ".SRT"
	IF MAP_COD_AIU = "BMS" OR&
	   MAP_COD_AIU = "SCC" THEN
      OPEN MAP_FIL_BMS FOR OUTPUT AS FILE #MAP_CNL_FBMS,RECORDTYPE ANY,&
         ORGANIZATION SEQUENTIAL VARIABLE,   RECORDSIZE 255
	END IF

      MAP_GLS_PBM = " OF '" + MAP_GLS_PROY + "BM" + MAP_GLS_MAPA + ".TXT'"
   
 !!!	APERTURA  ARCHIVO MODULO DE MANEJO ( CONSULTA )
     IF MAP_OPT_GEN = "NOOPT" THEN
      MAP_FIL_GEN = MAP_GLS_PROY + "BM" + MAP_GLS_MAPA + ".PTX"
     ELSE
      MAP_FIL_GEN = MAP_GLS_PROY + "BQ" + MAP_GLS_MAPA + ".PTX"
     END IF

     IF MAP_OPT_GEN <> "UPD" THEN
      OPEN MAP_FIL_GEN FOR OUTPUT AS FILE #MAP_CNL_FGEN,RECORDTYPE ANY,&
         ORGANIZATION SEQUENTIAL VARIABLE,   RECORDSIZE 255
     END IF
   
 !!!	APERTURA  ARCHIVO MODULO DE MANEJO ( ACTUALIZACION )
      MAP_FIL_GEN = MAP_GLS_PROY + "BU" + MAP_GLS_MAPA + ".PTX"
     IF MAP_OPT_GEN <> "CON" AND&
        MAP_OPT_GEN <> "NOOPT" THEN
      OPEN MAP_FIL_GEN FOR OUTPUT AS FILE #MAP_CNL_FGBU,RECORDTYPE ANY,&
         ORGANIZATION SEQUENTIAL VARIABLE,   RECORDSIZE 255
     END IF

 !!!	APERTURA  ARCHIVO REGISTRO IMAGEN
      MAP_FIL_TXT = MAP_GLS_PROY + "WI" + MAP_GLS_MAPA + ".SRT"
      OPEN MAP_FIL_TXT FOR OUTPUT AS FILE #MAP_CNL_FTXT,RECORDTYPE ANY,&
         ORGANIZATION SEQUENTIAL VARIABLE,   RECORDSIZE 255
   

 !!!	APERTURA ARCHIVO REGISTRO IMAGEN COBOL UNISYS
      MAP_FIL_PTX = MAP_GLS_PROY + "WF" + MAP_GLS_MAPA + ".SRT"
	IF MAP_COD_SOP = "MCP" THEN
      OPEN MAP_FIL_PTX FOR OUTPUT AS FILE #MAP_CNL_FPTX,RECORDTYPE ANY,&
         ORGANIZATION SEQUENTIAL VARIABLE,   RECORDSIZE 255
	END IF

 !!!	APERTURA ARCHIVO NOMBRES, POSICIONES( FILA COLUMNA ) PREPTEX
      MAP_FIL_UYS = MAP_GLS_PROY + "WU" + MAP_GLS_MAPA + ".SRT"
	IF MAP_COD_SOP = "MCP" THEN
      OPEN MAP_FIL_UYS FOR OUTPUT AS FILE #MAP_CNL_FUYS,RECORDTYPE ANY,&
         ORGANIZATION SEQUENTIAL VARIABLE,   RECORDSIZE 255
	END IF

 !!!	MAP_GLS_TXT = MAP_FNC_WRWF("% FORM = " + MAP_GLS_MAPA )
 !!!JSS	APERTURA  ARCHIVO DE INFORMACION
      MAP_FIL_TXT = MAP_GLS_PROY + "BI" + MAP_GLS_MAPA + ".AIU"
      OPEN MAP_FIL_TXT FOR OUTPUT AS FILE #MAP_CNL_FINF,RECORDTYPE ANY,&
         ORGANIZATION SEQUENTIAL VARIABLE,   RECORDSIZE 255
   
 !!! FLB APERTURA  ARCHIVO SETEO DE LLAVES Y HLP CODIGOS
      MAP_FIL_TXT = MAP_GLS_PROY + "DM" + MAP_GLS_MAPA + ".AIU"
     IF MAP_OPT_HLP = "HLP" THEN
	OPEN MAP_FIL_TXT FOR OUTPUT AS FILE #MAP_CNL_FKYH,RECORDTYPE ANY,&
	ORGANIZATION SEQUENTIAL VARIABLE,   RECORDSIZE 255
     END IF
      TOKEN = NEXTTOKEN
      IF VALTOKEN = 'HELP_FORM' THEN
         TOKEN = NEXTTOKEN
         TOKEN = NEXTTOKEN
         MAP_GLS_HLP = STRTOKEN
      END IF
   
      IN_FRM_FLD = " IN " + MAP_GLS_MAPA + "-FLD"
      IN_FRM_EDT = " IN " + MAP_GLS_MAPA + "-EDT"
      MAP_GLS_MST = MAP_GLS_PROY + MAP_GLS_MAPA + "A"
 !    CALL MAP_RUT_SPA(MAP_GLS_MAPA,9)
      CALL MAP_RUT_SPA(MAP_GLS_MST,9)
 !    MAP_GLS_MAPA = MAP_GLS_PROY + MAP_GLS_MAPA + "DFHMDI SIZE=("
      WTXT_NUM_SOR = 0
      MAP_GLS_BMS = MAP_FNC_WBMS("% FRM = " + '"' + MAP_GLS_MAPA + '"')
      MAP_GLS_BMS = MAP_FNC_WBMS("% CORR = 1000")
      MAP_GLS_TXT = MAP_FNC_WRWI('% FRM = "' + MAP_GLS_MAPA + '"' )

 !!!      PTX_SWI_WPTX = "SI"
      MAP_GLS_TXT = MAP_FNC_WRWI(V_ANSI(MG_C) + "* " + MAP_GLS_IDEN)
      MAP_GLS_TXT = MAP_FNC_WRWF(V_ANSI(MG_C) + "* " + MAP_GLS_IDEN)

 !!!      PTX_SWI_WPTX = "SI"
      MAP_GLS_TXT = MAP_FNC_WRWI(V_ANSI(MG_C) + "* " + MAP_GLS_HLP)
      MAP_GLS_TXT = MAP_FNC_WRWF(V_ANSI(MG_C) + "* " + MAP_GLS_HLP)

	MAP_GLS_TXT = MAP_FNC_WRWF('% FRM = "' + MAP_GLS_MAPA + '"' )
	MAP_GLS_TXT = MAP_FNC_WRWF('% INCLUDE "GNSWFHDR"')
      MAP_GLS_HLP = ""
            
      MAP_GLS_TXT = MAP_FNC_WRWI(V_ANSI(MG_A) +"01  " + MAP_GLS_MAPA + "-FLD.")

      MAP_GLS_TXT = MAP_FNC_WRWI(V_ANSI(MG_B) + "05 FILLER-" + MAP_GLS_MAPA + "                    PIC  X(12).")
   END DEF

 !====================== INICIALIZACION ======================

   DEF INTEGER MAP_FNC_INI
    ON ERROR GO TO MAP_LAB_OPE
      PUT_HDR_EDT = "NO"
      MAP_GLS_IDEN = DATE$(0%) + " " + TIME$(0%)
      MAP_NUM_BAS = 65
      MAP_SEPA_PIC    = "                  PIC  "
      MAP_ASC_BEL = CHR$(07)
      MAP_TOT_REPE = 713
      MAP_CNL_FFLG = 1   
      MAP_CNL_FBMS = 2
      MAP_CNL_FGEN = 3
      MAP_CNL_FTXT = 4
      MAP_CNL_FDMN = 5
      MAP_CNL_FRCR = 6
 !JSS
      MAP_CNL_FINF = 7
      MAP_CNL_FGBU = 8
 !FLB
      MAP_CNL_FKYH = 9
      MAP_CNL_FPTX = 10
      MAP_CNL_FUYS = 11

	DISPLAY_ELEMENT = 49
	PUT_HDR_SECC_4	= "N"
	PUT_HDR_SECC_7	= "N"
	PUT_HDR_SECC_A	= "N"
	PUT_HDR_SECC_D	= "N"
	PUT_HDR_SECC_G	= "N"
	PUT_HDR_SECC_J	= "N"
	PUT_HDR_SECC_M	= "N"
	PUT_HDR_SECC_P	= "N"

      V_ANSI(MG_C) = "      "
      V_ANSI(MG_A) = "       "
      V_ANSI(MG_B) = "           "
      V_ANSI(MG_1) = "               "
      V_ANSI(MG_2) = "                   "
      V_ANSI(MG_N) = ""
      MAP_VEC_BLK(1) = "        "
      MAP_VEC_BLK(2) = "       "
      MAP_VEC_BLK(3) = "      "
      MAP_VEC_BLK(4) = "     "
      MAP_VEC_BLK(5) = "    "
      MAP_VEC_BLK(6) = "   "
      MAP_VEC_BLK(7) = "  "
      MAP_VEC_BLK(8) = " "
      MAP_VEC_BLK(9) = ""
      FOR I% = 1 TO 150
 !!! FLB
         KYH_POS_TXT(I%)   = 9999
         MAP_GLS_VIX(I%)   = "(" + STR$(I%) + ")"
         MAP_VEC_TAB(I%)   = ",ATTRB=(PROT),LENGTH=1,"
         MAP_VEC_OBLI(I%)  =  "S"
         MAP_VEC_MOVE(I%)  = MAP_CTE_YES
         MAP_VEC_SCLR(I%)  = MAP_CTE_YES
         MAP_VEC_TFLD(I%)  = MAP_IND_FLD
         MAP_VEC_PROT(I%)  = MAP_CTE_YES
         MAP_VEC_VALI(I%)  = MAP_CTE_YES
         MAP_VEC_PFLD(I%)  = MAP_CTE_YES
         MAP_VEC_FECH(I%)  = MAP_CTE_NOT
         MAP_VEC_DERI(I%)  = MAP_CTE_NOT
         MAP_VEC_PAI(I%)   = ""
         MAP_VEC_BYA(I%)   = 1
         MAP_VEC_LGLS(I%)  = 0
      NEXT I%
 !!!      MAP_NUM_INFE = 3
      MAP_NUM_SUPE = 24
      MAP_SWI_PFLD = MAP_CTE_NOT
      MAP_ASC_NWL = CHR$(MAP_ASC_CRT) + CHR$(MAP_ASC_LFD)
      P_P,P_Q = 1

 !!! FLB
      MAP_NUM_CXFL = 0
      KYH_TOT_TXT  = 0
806
      MAP_GLS_BU = "BU"
      MAP_GLS_BQ = "BQ"
      MAP_GLS_BA = "BA"


      CALL LIB$GET_SYMBOL("GNS$FIL",MAP_GLS_FLG)
      CALL LIB$GET_SYMBOL("PTH",MAP_FIL_FLG)
      CALL LIB$GET_SYMBOL("GNS$MAP",MAP_GLS_MAT)
      CALL LIB$GET_SYMBOL("OPT",MAP_OPT_GEN)
      CALL LIB$GET_SYMBOL("HLP",MAP_OPT_HLP)
      CALL LIB$GET_SYMBOL("GNS$PAI",MAP_COD_PAI)
      CALL LIB$GET_SYMBOL("GNS$CLI",MAP_COD_CLI)
      CALL LIB$GET_SYMBOL("GNS$SOP",MAP_COD_SOP)
      CALL LIB$GET_SYMBOL("GNS$AIU",MAP_COD_AIU)

      IPTBM$ = "% INCLUDE 'GNSBM"

      IPTWI$ = "% INCLUDE 'GNSWI"

      IPTWF$ = "% INCLUDE 'GNSWF"

      IPTMA$ = "% INCLUDE 'GNSMA"

      TPTX$ = "'"

      MAP_GLS_HLP = ""
      CALL LIB$GET_SYMBOL("GNS$PRY",MAP_GLS_PROY)

       OPEN MAP_FIL_FLG FOR INPUT AS FILE #MAP_CNL_FFLG,RECORDTYPE ANY,   &
         ORGANIZATION SEQUENTIAL VARIABLE,   RECORDSIZE 255
   
      GET #MAP_CNL_FFLG
      SZ_I_B = RECOUNT
      MOVE FROM #MAP_CNL_FFLG , I_B$ = SZ_I_B
      GO TO FIN_LAB_INI
 MAP_LAB_OPE:
   PRINT MAP_ASC_BEL,MAP_ASC_BEL,MAP_ASC_BEL
   IF ERR = 2 THEN
      PRINT MAP_FIL_FLG,FILE_WSS, " : NOMBRE DE ARCHIVO ILEGAL"
   ELSE 
   IF ERR = 5 THEN
      PRINT MAP_FIL_FLG,FILE_WSS, " ARCHIVO INEXISTENTE       "
   ELSE
      PRINT   "ERROR(";ERR;") ";ERT$(ERR);" en linea ";erl;&
         ", MODULO ";ern$
   END IF
   END IF
 FIN_LAB_INI:

      MAP_NUM_FNC = MAP_FNC_FOR
807
 !!!	APERTURA  ARCHIVO REGISTRO DOMINIO
	FIO_CMND = "INP                 "
	CALL "GNSFIODMN" BY REF (FIO_CMND)
   
 !!!	APERTURA  ARCHIVO REGISTRO RECORRIDO
	FIO_CMND = "INP                 "
 	CALL "GNSFIORCR" BY REF (FIO_CMND)
   
   RESUME 809
809
   END DEF

820
 !====================== AREA TO CLEAR ======================

   DEF INTEGER MAP_FNC_ATC
   WHILE VALTOKEN <> ";"
          IF VALTOKEN = 'AREA_TO_CLEAR' THEN
             TOKEN = NEXTTOKEN
             TOKEN = NEXTTOKEN
          MAP_NUM_INFE = NUMTOKEN
 !!!             MAP_NUM_INFE = 3
 !!! FLB
 !!!             KYM_POS_INI = 80 * (MAP_NUM_INFE - 1)
 !!! linea 3 es comienzo de rango para seteo de llaves
             KYM_POS_INI = 160
             TOKEN = NEXTTOKEN
             TOKEN = NEXTTOKEN
 !!!         MAP_NUM_SUPE = NUMTOKEN
 !!!         MAP_GLS_WRIT = MAP_GLS_MAPA + STR$(MAP_NUM_SUPE - MAP_NUM_INFE + 1) +&
 !!!             ",80),CTRL(PRINT)"
 !!!         MAP_GLS_WRIT = MAP_FNC_WBMS(MAP_GLS_WRIT)
          END IF
      TOKEN = NEXTTOKEN
   
   NEXT
   END DEF
830
 !====================== DETECTA NUMERO POR SU PICTURE ==============

   DEF INTEGER MAP_FNC_DNUM
 !!!ISP ES NUMERO
        MAP_IND_NUM = 0
 !JSS   PRINT '**';LEN(STRTOKEN);STRTOKEN
        FOR I_NUM% = 1 TO LEN(STRTOKEN)
            C_NUM$ = MID$(STRTOKEN,I_NUM%,1)
            IF C_NUM$ <> '9' AND C_NUM$ <> '.' AND C_NUM$ <> ','&
                             AND C_NUM$ <> 'N' THEN
                MAP_IND_NUM = 1
            ELSE
 !JSS           PRINT C_NUM$
            END IF
        NEXT I_NUM%
   END DEF
835
 !====================== PICTURE ====================================

   DEF INTEGER MAP_FNC_PIC
   MAP_GLS_PIC = ""
   TOKEN = NEXTTOKEN
   TOKEN = NEXTTOKEN
   SGN_LEAD = ""
 
   CIN$ = "SI"
   IF TOKEN = NUMTOK THEN
	CIN$ = "NO"
         MAP_VEC_LGLS(MAP_IND_CMPO) = NUMTOKEN
         OVR_NUM_LEN = NUMTOKEN
         MAP_NUM_PICT = NUMTOKEN
         MAP_NUM_NCS  =  NUMTOKEN
         MAP_NUM_NCI  = 0
         TOKEN = NEXTTOKEN
      	 IF STRTOKEN = "X" OR STRTOKEN = "C" THEN
             MAP_GLS_PIC = "X(" + STR$(MAP_NUM_PICT) + ")"
             GO TO NOT_NUM
         ELSE
             STR_AUX$ = STRTOKEN
             STRTOKEN = ""
             FOR I% = 1 TO MAP_NUM_PICT
                STRTOKEN = STRTOKEN + STR_AUX$
             NEXT I%
         END IF
   END IF

   MAP_NUM_FNC = MAP_FNC_DNUM
   IF MAP_IND_NUM = 0 THEN
         MAP_VEC_NUME(MAP_TOT_CMPO) = MAP_CTE_YES
   END IF
   OVR_NUM_LEN = LEN(STRTOKEN)
   MAP_VEC_NMR(MAP_IND_CMPO) = "NN9"
   MAP_VEC_ISG(MAP_IND_CMPO) = "N"
   IF MID$(STRTOKEN,1,1) = "N" THEN
         MAP_VEC_NMR(MAP_IND_CMPO) = "NS9"
         MAP_VEC_ISG(MAP_IND_CMPO) = "S"
 !!!         SGN_LEAD = " SIGN LEADING SEPARATE"
         SGN_LEAD = "S"
   END IF
   MAP_GLS_PIC_EDT = STRTOKEN
   
   MAP_GLS_PIC_ALF = "X(" + STR$(LEN(STRTOKEN)) + ")"
   LEN_ALF% = LEN(STRTOKEN)
   IF SGN_LEAD <> "" THEN
       CALL GENRPTREP(MAP_GLS_PIC_EDT,"9","-")
       CALL GENRPTREP(MAP_GLS_PIC_EDT,"N","-")
   ELSE
       CALL GENRPTREP(MAP_GLS_PIC_EDT,"9","Z")
   END IF

   MAP_GLS_PIC = STRTOKEN
   STR_NUM$ = MAP_GLS_PIC
 !!!   PRINT "map_gls_pic ";map_gls_pic
   IF MID$(MAP_GLS_PIC,1,1) = "N" THEN
       CALL GENRPTREP(MAP_GLS_PIC,"N","9")
   END IF
   MAP_NUM_NCS = LEN(MAP_GLS_PIC)
   IF MAP_SWI_FEC = MAP_CTE_YES THEN
        CALL GENRPTMAN(MAP_GLS_PIC,"9XC.,")
   ELSE
   IF MAP_VEC_NUME(MAP_TOT_CMPO) = MAP_CTE_NOT AND&
      MAP_COD_PAI <> "PER" THEN
        CALL GENRPTMAN(MAP_GLS_PIC,"X9")
   END IF
   IF MAP_SWI_IDC = MAP_CTE_YES AND&
      MAP_COD_PAI = "PER" THEN
        CALL GENRPTMAN(MAP_GLS_PIC,"X9")
   END IF
   END IF
   MAP_NUM_PICT = LEN(MAP_GLS_PIC)
   IF MAP_SWI_VRF = MAP_CTE_YES OR MAP_SWI_IDC = MAP_CTE_YES THEN
        MAP_NUM_PICT = MAP_NUM_PICT - 1
   END IF
   CALL GENRPTMAN(MAP_GLS_PIC,"-9XC.,")
   CALL GENRPTREP(MAP_GLS_PIC,".","")
   CALL GENRPTREP(MAP_GLS_PIC,",","V")
   IF LEN(LEFT$(MAP_GLS_PIC,INSTR(0,MAP_GLS_PIC,"V"))) - 1 = -1 THEN
          MAP_VEC_NMR(MAP_IND_CMPO) = MAP_VEC_NMR(MAP_IND_CMPO) + "N"
          MAP_VEC_ENT(MAP_IND_CMPO) = LEN(MAP_GLS_PIC)
          IF MAP_SWI_VRF = MAP_CTE_YES THEN
 !!!ISP 22-12-1989
	     MAP_GLS_PIC_VRF$ = MAP_GLS_PIC
	     CALL GENRPTMAN(MAP_GLS_PIC_VRF$,"9X")
             MAP_VEC_ENT(MAP_IND_CMPO) =&
             LEN(MAP_GLS_PIC_VRF$) - 1
          END IF
          MAP_VEC_DECM(MAP_IND_CMPO) = 0
   ELSE
          MAP_VEC_NMR(MAP_IND_CMPO) = MAP_VEC_NMR(MAP_IND_CMPO) + "V"
          MAP_VEC_ENT(MAP_IND_CMPO) = &
                     LEN(LEFT$(MAP_GLS_PIC,INSTR(0,MAP_GLS_PIC,"V"))) - 1
          MAP_VEC_DECM(MAP_IND_CMPO) = &
                     LEN(RIGHT$(MAP_GLS_PIC,INSTR(0,MAP_GLS_PIC,"V"))) - 1
   END IF
   CALL GENRPTMAN(STR_NUM$,"9NC")
   LEN_NUM% = LEN(STR_NUM$)
   IF SGN_LEAD <> "" THEN
	LEN_NUM% = LEN_NUM% - 1
   END IF
   LEN_CIN% = LEN_ALF% - LEN_NUM%
   IF LEN_CIN% = 0 THEN
	CIN$ = "NO"
   END IF

   IF MAP_VEC_NUME(MAP_IND_CMPO) = MAP_CTE_YES OR&
      ( MAP_SWI_VRF = MAP_CTE_YES AND MAP_COD_PAI = "PER" )THEN
          MAP_NUM_NCI = 0
   ELSE
          MAP_NUM_NCI = MAP_NUM_NCS - MAP_NUM_PICT
   END IF
 !!!   PRINT "map_gls_pic ";map_gls_pic
 !!!   CALL MAP_RUT_PIC(MAP_GLS_PIC)
 !!!   PRINT "map_gls_pic ";map_gls_pic

 NOT_NUM:
   IF MAP_SWI_FEC = MAP_CTE_YES THEN
       MAP_VEC_NUME(MAP_TOT_CMPO) = MAP_CTE_NOT
   END IF
   IF SGN_LEAD <> "" THEN
        MAP_VEC_ENT(MAP_IND_CMPO) = MAP_VEC_ENT(MAP_IND_CMPO) - 1
   END IF

   TOKEN = NEXTTOKEN
   END DEF
840
 !====================== EDITA Z A CAMPOS NUMERICOS DISPLAY ONLY
   DEF INTEGER MAP_FNC_EDT
	Y% = INSTR(1%,MAP_GLS_PIC_EDT,",")
	IF Y% = 0 THEN
		Y% = LEN(MAP_GLS_PIC_EDT) - 1
	ELSE
		Y% = Y% - 2
	END IF
	VARI_POST$ = MID$(MAP_GLS_PIC_EDT, Y% + 1 ,LEN(MAP_GLS_PIC_EDT) - Y%)

	MAP_GLS_PIC_EDT = MID$(MAP_GLS_PIC_EDT , 1 , Y%)
        IF MAP_VEC_DSPL(MAP_IND_CMPO) <> MAP_CTE_YES THEN
		MAP_GLS_PIC_EDT = MAP_GLS_PIC_EDT + VARI_POST$
		VARI_POST$ = ""
	END IF
 	CALL GENRPTREP(VARI_POST$,"-","9")
 	CALL GENRPTREP(VARI_POST$,"Z","9")
 !!!	IF MID$(VARI_TIPO,1,1) = "N" THEN
 !!!			CALL GENRPTREP(MAP_GLS_PIC_EDT,"9","-")
 !!!	ELSE
 !!!			CALL GENRPTREP(MAP_GLS_PIC_EDT,"9","Z")
 !!!	END IF
	MAP_GLS_PIC_EDT = MAP_GLS_PIC_EDT + VARI_POST$
   END DEF

 !====================== ARCHIVO TXT : REGISTRO IMAGEN ======================

   DEF INTEGER MAP_FNC_HDR_EDT

      BKP_WTXT_NUM_SOR% = WTXT_NUM_SOR
      BKP_MAP_NUM_LINE% = MAP_NUM_LINE
      BKP_MAP_NUM_COLU% = MAP_NUM_COLU

      WTXT_NUM_SOR = 9
      MAP_NUM_LINE = 0
      MAP_NUM_COLU = 0

      IF PUT_HDR_EDT = "NO" THEN
      	      PUT_HDR_EDT = "SI"
	      MAP_GLS_TXT = MAP_FNC_WRWI(V_ANSI(MG_C) +"* ")
	      MAP_GLS_TXT = MAP_FNC_WRWI(V_ANSI(MG_C) +"* REGISTRO EDICION DE CAMPOS PARA MAPA " + MAP_GLS_MAPA )
	      MAP_GLS_TXT = MAP_FNC_WRWI(V_ANSI(MG_A) +"01  " + MAP_GLS_MAPA + "-EDT.")
      END IF

      WTXT_NUM_SOR = BKP_WTXT_NUM_SOR%
      MAP_NUM_LINE = BKP_MAP_NUM_LINE%
      MAP_NUM_COLU = BKP_MAP_NUM_COLU%

   END DEF

   DEF INTEGER MAP_FNC_PRMF_A
	IF MAP_VEC_FCMP(MAP_TOT_CMPO) = "CST" THEN
		MAP_GLS_BMS = MAP_FNC_WBMS("% NORMA_CST = TRUE")
	ELSE
		MAP_GLS_BMS = MAP_FNC_WBMS("% NORMA_CST = FALSE")
	END IF
	MAP_GLS_BMS = MAP_FNC_WBMS("% RREG = " + '"' + MAP_VEC_REGI(MAP_TOT_CMPO) + '"')
	MAP_GLS_BMS = MAP_FNC_WBMS("% NOMB = " + '"' + MAP_VEC_NOMB(MAP_TOT_CMPO) + '"')
	MAP_GLS_BMS = MAP_FNC_WBMS("% TIPO = " + '"' + MAP_VEC_TCMP(MAP_TOT_CMPO) + '"')
	MAP_GLS_BMS = MAP_FNC_WBMS("% TIDX = " + STR$(MAP_VEC_TIDX(MAP_TOT_CMPO)) )
	MAP_GLS_BMS = MAP_FNC_WBMS("% PFEC = " + '"' + RIGHT$(MAP_VEC_NOMB(MAP_TOT_CMPO),2) + '"' )
 !!!JSS-INI 12-APR-1995
        IF MAP_IND_NUM = 0 THEN
	    MAP_GLS_BMS = MAP_FNC_WBMS("% NUMERO = TRUE")
        ELSE
	    MAP_GLS_BMS = MAP_FNC_WBMS("% NUMERO = FALSE")
        END IF
 !!!JSS-FIN 12-APR-1995
   END DEF

   DEF INTEGER MAP_FNC_PRMF_WI
	IF MAP_VEC_FCMP(MAP_TOT_CMPO) = "CST" THEN
		MAP_GLS_TXT = MAP_FNC_WRWI("% NORMA_CST = TRUE")
	ELSE
		MAP_GLS_TXT = MAP_FNC_WRWI("% NORMA_CST = FALSE")
	END IF
      PTX_SWI_WPTX = "SI"
	MAP_GLS_TXT = MAP_FNC_WRWI("% PADR = " + '"' + NIVFLD + '"')

      PTX_SWI_WPTX = "SI"
	MAP_GLS_TXT = MAP_FNC_WRWI("% CAMP = " + '"' + MAP_VEC_FRTN(JJ%) + '"')

      PTX_SWI_WPTX = "SI"
	MAP_GLS_TXT = MAP_FNC_WRWI("% HIJO = " + '"' + NIVHJO + '"')

      PTX_SWI_WPTX = "SI"
	MAP_GLS_TXT = MAP_FNC_WRWI("% SPAC = " + '"' + SPAFLD + '"')

      PTX_SWI_WPTX = "SI"
	MAP_GLS_TXT = MAP_FNC_WRWI("% RREG = " + '"' + MAP_VEC_REGI_REG(JJ%) + '"')

      PTX_SWI_WPTX = "SI"
 	MAP_GLS_TXT = MAP_FNC_WRWI("% RFRM = " + '"' + MAP_VEC_REGI_FRM(JJ%) + '"')

      PTX_SWI_WPTX = "SI"
	MAP_GLS_TXT = MAP_FNC_WRWI("% NOMB = " + '"' + MAP_VEC_NOMB(JJ%) + '"')

      PTX_SWI_WPTX = "SI"
	MAP_GLS_TXT = MAP_FNC_WRWI("% TIPO = " + '"' + MAP_VEC_TCMP(JJ%) + '"')

      PTX_SWI_WPTX = "SI"
	MAP_GLS_TXT = MAP_FNC_WRWI("% TIDX = " + STR$(MAP_VEC_TIDX(JJ%)) )

      PTX_SWI_WPTX = "SI"
	MAP_GLS_TXT = MAP_FNC_WRWI("% IDX = " + '"' + M$ + '"' )

 	IF MAP_VEC_DSPL_SDF(JJ%) = MAP_CTE_YES THEN
		MAP_GLS_TXT = MAP_FNC_WRWF('% DISP = TRUE')
	ELSE
		MAP_GLS_TXT = MAP_FNC_WRWF('% DISP = FALSE')
	END IF

      PTX_SWI_WPTX = "SI"
	MAP_GLS_TXT = MAP_FNC_WRWI("% PFEC = " + '"' + RIGHT$(MAP_VEC_NOMB(MAP_TOT_CMPO),2) + '"' )

 !!!	IF MAP_VEC_TCMP(JJ%) = "VRF" THEN
 !!!		MAP_GLS_TXT = MAP_FNC_WRWI('% TIPO_VRF = TRUE')
 !!!		MAP_GLS_TXT = MAP_FNC_WRWI('% TIPO_IDC = FALSE')
 !!!		MAP_GLS_TXT = MAP_FNC_WRWI('% TIPO_FEC = FALSE')
 !!!	ELSE
 !!!		IF MAP_VEC_TCMP(JJ%) = "IDC" THEN
 !!!			MAP_GLS_TXT = MAP_FNC_WRWI('% TIPO_IDC = TRUE')
 !!!			MAP_GLS_TXT = MAP_FNC_WRWI('% TIPO_VRF = FALSE')
 !!!			MAP_GLS_TXT = MAP_FNC_WRWI('% TIPO_FEC = FALSE')
 !!!		ELSE
 !!!			IF MAP_VEC_TCMP(JJ%) = "FEC" THEN
 !!!				MAP_GLS_TXT = MAP_FNC_WRWI('% TIPO_FEC = TRUE')
 !!!				MAP_GLS_TXT = MAP_FNC_WRWI('% TIPO_VRF = FALSE')
 !!!				MAP_GLS_TXT = MAP_FNC_WRWI('% TIPO_IDC = FALSE')
 !!!			END IF
 !!!		END IF
 !!!	END IF
   END DEF

   DEF INTEGER MAP_FNC_PRMF_BM1
	IF MAP_VEC_FCMP(JJ%) = "CST" THEN
		CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BP,MG_N,"% NORMA_CST = TRUE")
	ELSE
		CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BP,MG_N,"% NORMA_CST = FALSE")
	END IF
 	IF MAP_VEC_DSPL(I%) = MAP_CTE_YES THEN
		CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BP,MG_N,'% DISP = TRUE')
	ELSE
		CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BP,MG_N,'% DISP = FALSE')
	END IF
	CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BP,MG_N,'% CAMP = "' + MAP_VEC_FRTN(JJ%) + '"')
	CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BP,MG_N,'% RREG = "' + MAP_VEC_REGI_REG(JJ%) + '"')
 	CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BP,MG_N,'% RFRM = "' + MAP_VEC_REGI_FRM(JJ%) + '"')
	CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BP,MG_N,'% NOMB = "' + MAP_VEC_NOMB(JJ%) + '"')
	CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BP,MG_N,'% TIPO = "' + MAP_VEC_TCMP(JJ%) + '"')
	CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BP,MG_N,'% TIDX = ' + STR$(MAP_VEC_TIDX(JJ%)) )
	CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BP,MG_N,'% PFEC = "' + RIGHT$(MAP_VEC_NOMB(JJ%),2) + '"' )
   END DEF

   DEF INTEGER MAP_FNC_PRMF_BM2
	CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BP,MG_N,'*% CAMP = "' + MAP_VEC_FRTN(JJ%) + '"')
	CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BP,MG_N,'*% FLD = "' + MAP_VEC_FRTN(JJ%) + '"')
	CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BP,MG_N,'*% RREG = "' + MAP_VEC_REGI_REG(JJ%) + '"')
	CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BP,MG_N,'*% NOMB = "' + MAP_VEC_NOMB(JJ%) + '"')
	CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BP,MG_N,'*% TIPO = "' + MAP_VEC_TCMP(JJ%) + '"')
   END DEF

   DEF INTEGER MAP_FNC_WI

	M% = 0
	M$ = ""
	HDRIDX$ = "FALSE"
	NIVEDT$ = V_ANSI(MG_B) + "05 "
	IF ACT_INDEX = MAP_CTE_YES THEN
		ANT_INDEX = MAP_CTE_YES
		NIVFLD = V_ANSI(MG_B) + "05 "
		SPAFLD = V_ANSI(MG_B) + "   "
		IF NIV_INDEX = 3 THEN
			HDRIDX$ = "TRUE"
		END IF


 !!! SI CAMPO INDEXADO ESCRIBE DIRECTAMENTE EL HEADER ANTES DE
 !!! LA PRIMERA OCURRENCIA
	IF HDRIDX$ = "TRUE" THEN
		WTXT_NUM_SOR = 1
		MAP_GLS_OCC = MAP_VEC_FRTN(MAP_IND_CMPO)+"-IDX  OCCURS " +&
			  STR$(MAP_TOT_CIDX) + " TIMES."
 !!! NO EXISTEN CAMPOS INDEXADOS PARA REGISTRO WF
 !!!      		PTX_SWI_WPTX = "SI"
		MAP_GLS_TXT = MAP_FNC_WRWI(NIVFLD + MAP_GLS_OCC)

 !!! TAMBIEN ESCRIBE HEADER PARA REGISTRO DE EDICION
 !!!		IF MAP_VEC_NUME(MAP_IND_CMPO) = MAP_CTE_YES THEN
 !!!			WTXT_NUM_SOR = 9
 !!!			MAP_GLS_OCC = MAP_VEC_FRTN(MAP_IND_CMPO)+"-EDT-IDX  OCCURS " +&
 !!!				STR$(MAP_TOT_CIDX) + " TIMES."
 !!!			MAP_GLS_TXT = MAP_FNC_WRWI(NIVFLD + MAP_GLS_OCC)
 !!!		END IF
	END IF

		NIVFLD = V_ANSI(MG_B) + "   07 "
		SPAFLD = V_ANSI(MG_B) + "      "
		NIVHJO = V_ANSI(MG_B) + "      09 "
		MAP_GLS_SPA_HJO = V_ANSI(MG_B) + "         "
		MAP_SEPA_PIC    = "               PIC "

                IF MAP_COD_AIU = "SDF" THEN
		    MAP_SEPA_LEN    = "-LEN           PIC X(01)."
                ELSE
                    IF MAP_COD_AIU = "SCC" THEN
 	    	        MAP_SEPA_LEN    = "-LEN VALUE 0   PIC S9(02)."
                    ELSE
 	    	        MAP_SEPA_LEN    = "-LEN COMP      PIC S9(04)."
                    END IF
                END IF

		MAP_SEPA_ATR    = "-ATR           PIC X(01)."
	ELSE
		ANT_INDEX = MAP_CTE_NOT
		NIVFLD = V_ANSI(MG_B) + "05 "
		SPAFLD = V_ANSI(MG_B) + "   "
		NIVHJO = V_ANSI(MG_B) + "   07 "
		MAP_GLS_SPA_HJO = V_ANSI(MG_B) + "      "
		MAP_SEPA_PIC    = "                  PIC "

                IF MAP_COD_AIU = "SDF" THEN
		    MAP_SEPA_LEN    = "-LEN           PIC X(01)."
                ELSE
                    IF MAP_COD_AIU = "SCC" THEN
 	    	        MAP_SEPA_LEN    = "-LEN VALUE 0   PIC S9(02)."
                    ELSE
 	    	        MAP_SEPA_LEN    = "-LEN COMP      PIC S9(04)."
                    END IF
                END IF

		MAP_SEPA_ATR    = "-ATR              PIC X(01)."
	END IF

 !!! ESCRIBE DIRECTAMENTE EL HELP ASOCIADO AL CAMPO

 !!!       MAP_GLS_TXT = MAP_FNC_WRWF("")

 !!!      PTX_SWI_WPTX = "SI"
	MAP_GLS_TXT = MAP_FNC_WRWI(V_ANSI(MG_C) + "*" + MAP_GLS_HLP)

 !!!	MAP_GLS_TXT = MAP_FNC_WRWF(V_ANSI(MG_C) + "* Campo en Fila " + PTX_FILN + " / Columna " + PTX_COLN)
 !!!	IF MAP_VEC_CGEN_SDF(MAP_TOT_CMPO) = MAP_CTE_YES THEN
 !!!	       MAP_GLS_TXT = MAP_FNC_WRWF(V_ANSI(MG_N) + '% FCHEX = "' + PTX_COLH + PTX_FILH + '"')
 !!!	ELSE
 !!!	       MAP_GLS_TXT = MAP_FNC_WRWF(V_ANSI(MG_B) + "05 FILLER                        PIC X(04)" +&
 !!!				                 " VALUE @277F" + PTX_COLH + PTX_FILH + "@.")
 !!!		PTX_LENV = PTX_LENV + 4
 !!!	END IF
 
 !!!	IF MAP_VEC_DSPL_SDF(MAP_TOT_CMPO) = MAP_CTE_NOT THEN
 !!!		IF MAP_VEC_CGEN_SDF(MAP_TOT_CMPO) = MAP_CTE_NOT THEN
 !!!			MAP_GLS_TXT = MAP_FNC_WRWF(V_ANSI(MG_B) + '05 FILLER                        PIC X(01) VALUE @1C@.')
 !!!			PTX_LENV = PTX_LENV + 1
 !!!		END IF
 !!!	END IF

 !!! SI EL CAMPO ES NUMERICO ESCRIBE HEADER DE REGISTRO DE EDICION
 !!! ANTES DEL PRIMER CAMPO DE EDICION
	IF MAP_VEC_NUME(MAP_IND_CMPO) = MAP_CTE_YES OR&
	   MAP_SWI_VRF = MAP_CTE_YES THEN
		MAP_NUM_FNC = MAP_FNC_HDR_EDT
	END IF

 !!! ESCRIBE PARAMETROS DEL CAMPO
	IF MAP_SWI_FEC = MAP_CTE_YES OR&
	   MAP_SWI_VRF = MAP_CTE_YES OR&
	   MAP_SWI_IDC = MAP_CTE_YES THEN
		IF MAP_SWI_IDC = MAP_CTE_YES THEN

			BKP_WTXT_NUM_SOR% = WTXT_NUM_SOR
			WTXT_NUM_SOR = 0
 !!!			MAP_GLS_TXT = MAP_FNC_WRWF("% FCHEX_IDC_" + MAP_VEC_REGI(MAP_IND_CMPO) + "_" +&
 !!!				MAP_VEC_NOMB(MAP_IND_CMPO) +&
 !!!				' = "' + PTX_COLH + PTX_FILH + '"')
			WTXT_NUM_SOR = BKP_WTXT_NUM_SOR% 

			IDC_TRUE$ = "% TIENE_IDC_" + MAP_VEC_REGI(MAP_IND_CMPO) + "_IDC_" +&
					MAP_VEC_NOMB(MAP_IND_CMPO) + " = TRUE"

			BKP_WBMS_NUM_DOR = WBMS_NUM_SOR
			BKP_MAP_NUM_LINE = MAP_NUM_LINE
			BKP_MAP_NUM_COLU = MAP_NUM_COLU
			WBMS_NUM_SOR = 0
			MAP_NUM_LINE = 0
			MAP_NUM_COLU = 0
			MAP_GLS_BMS = MAP_FNC_WBMS(IDC_TRUE$)
			WBMS_NUM_SOR = BKP_WBMS_NUM_DOR 
			MAP_NUM_LINE = BKP_MAP_NUM_LINE 
			MAP_NUM_COLU = BKP_MAP_NUM_COLU

			BKP_WTXT_NUM_SOR% = WTXT_NUM_SOR
			WTXT_NUM_SOR = 0

 !!!			PTX_SWI_WPTX = "SI"
			MAP_GLS_TXT = MAP_FNC_WRWI(IDC_TRUE$)

		        CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BA,MG_N,IDC_TRUE$)
			WTXT_NUM_SOR = BKP_WTXT_NUM_SOR% 
		END IF

		JJ% = MAP_IND_CMPO
		MAP_NUM_FNC = MAP_FNC_PRMF_WI
 !!!		MAP_GLS_TXT = MAP_FNC_WRWI( IPTWI$ + MAP_VEC_FCMP(MAP_IND_CMPO) + MAP_VEC_TCMP(MAP_IND_CMPO) + TPTX$)
		MAP_GLS_TXT = MAP_FNC_WRWI( IPTWI$ + "001" + TPTX$)
 !!!		MAP_GLS_TXT = MAP_FNC_WRWF( IPTWF$ + "001" + TPTX$)
		WTXT_NUM_SOR = 9
		JJ% = MAP_IND_CMPO
		MAP_NUM_FNC = MAP_FNC_PRMF_WI
		MAP_GLS_TXT = MAP_FNC_WRWI( IPTWI$ + "004" + TPTX$ )
 !!!		MAP_GLS_TXT = MAP_FNC_WRWI(NIVFLD +&
 !!!		MAP_VEC_REGI(MAP_IND_CMPO) + "-NUM-" + MAP_VEC_NOMB(MAP_IND_CMPO) + "-EDT  " +&
 !!!		"              PIC Z(" + LNGVRF$ + ").")
		WTXT_NUM_SOR = 1

		IF MAP_SWI_VRF = MAP_CTE_YES THEN

			BKP_WTXT_NUM_SOR% = WTXT_NUM_SOR
			WTXT_NUM_SOR = 0
			L_VRF$ = ""
			IF MAP_NUM_PICT < 11 THEN
				L_VRF$ = "0"
			END IF
 !!!			PTX_SWI_WPTX = "SI"
			MAP_GLS_TXT = MAP_FNC_WRWI("% LARG_VRF_" + MAP_VEC_REGI(MAP_IND_CMPO) + "_" + MAP_VEC_NOMB(MAP_IND_CMPO) +&
				" = " + STR$(MAP_NUM_PICT) )
 !!!			MAP_GLS_TXT = MAP_FNC_WRWF("% LARG_VRF_" + MAP_VEC_REGI(MAP_IND_CMPO) + "_" + MAP_VEC_NOMB(MAP_IND_CMPO) +&
 !!!				' = "' + L_VRF$ + STR$(MAP_NUM_PICT-1) + '"')

			WTXT_NUM_SOR = BKP_WTXT_NUM_SOR% 

			BKP_WTXT_NUM_SOR% = WTXT_NUM_SOR
			WTXT_NUM_SOR = 0
 !!!			MAP_GLS_TXT = MAP_FNC_WRWF("% FCHEX_VRF_" + MAP_VEC_REGI(MAP_IND_CMPO) + "_" +&
 !!!				MAP_VEC_NOMB(MAP_IND_CMPO) +&
 !!!				' = "' + PTX_COLH + PTX_FILH + '"')
			WTXT_NUM_SOR = BKP_WTXT_NUM_SOR% 

		END IF
		ELSE
 !!! ESCRIBE DIRECTAMENTE BYTES DE LARGO Y ATRIBUTOS

	
	MAP_GLS_TXT = MAP_FNC_WRWI(NIVFLD + MAP_VEC_FRTN(MAP_IND_CMPO)+&
		MAP_SEPA_LEN)
	MAP_GLS_TXT = MAP_FNC_WRWI(NIVFLD + MAP_VEC_FRTN(MAP_IND_CMPO)+&
		MAP_SEPA_ATR)
	IF MAP_VEC_NUME(MAP_IND_CMPO) = MAP_CTE_YES THEN
		MAP_NUM_FNC = MAP_FNC_EDT

 !!!		PTX_SWI_WPTX = "SI"

 !!!		MAP_GLS_TXT = MAP_FNC_WRWF(NIVFLD + MAP_VEC_FRTN(MAP_IND_CMPO)  + "    " +&
 !!!			RIGHT(MAP_SEPA_PIC,5) + MAP_GLS_PIC_ALF)
 !!!		MAP_GLS_TXT = MAP_FNC_WRWF(SPAFLD + "VA SPACES.")

		MAP_GLS_TXT = MAP_FNC_WRWI(NIVFLD + MAP_VEC_FRTN(MAP_IND_CMPO)  + "-ALF" +&
			RIGHT(MAP_SEPA_PIC,5) + MAP_GLS_PIC_ALF + ".")

		WTXT_NUM_SOR = 9
		MAP_GLS_TXT = MAP_FNC_WRWI(NIVEDT$ + MAP_VEC_FRTN(MAP_IND_CMPO) + "-EDT PIC " +&
			MAP_GLS_PIC_EDT + ".")
		WTXT_NUM_SOR = 1

		IND_RED$ = "      REDEFINES"
		IF MAP_COD_SOP = "MCP" AND&
		   CIN$ = "SI" THEN
			IND_RED$ = "-RED  REDEFINES"
		END IF

		MAP_GLS_TXT = MAP_FNC_WRWI(NIVFLD + MAP_VEC_FRTN(MAP_IND_CMPO) + IND_RED$ )

		IND_SGN$ = RIGHT(MAP_SEPA_PIC,5)
		IF SGN_LEAD <> "" THEN
			IND_SGN$ = IND_SGN$ + "S" + RIGHT(MAP_GLS_PIC,2)
		ELSE
			IND_SGN$ = IND_SGN$ + MAP_GLS_PIC
		END IF
		IND_SGN$ = IND_SGN$ + "."

		IF MAP_COD_SOP = "MCP" AND&
		   CIN$ = "SI" THEN
			MAP_GLS_TXT = MAP_FNC_WRWI(SPAFLD + MAP_VEC_FRTN(MAP_IND_CMPO)  + "-ALF." )
		ELSE
			MAP_GLS_TXT = MAP_FNC_WRWI(SPAFLD + MAP_VEC_FRTN(MAP_IND_CMPO) + "-ALF" + IND_SGN$ )
		END IF

		IF MAP_COD_SOP = "MCP" AND&
		   CIN$ = "SI" THEN
			MAP_GLS_TXT = MAP_FNC_WRWI(NIVHJO + "FILLER                    PIC X(" + STR$(LEN_CIN%) + ")." )
			MAP_GLS_TXT = MAP_FNC_WRWI(NIVHJO + MAP_VEC_FRTN(MAP_IND_CMPO) + IND_SGN$ )
		END IF
	ELSE
 !!! ESCRIBE DIRECTAMENTE BYTES DE LARGO Y ATRIBUTOS
 !!!		MAP_GLS_TXT = MAP_FNC_WRWI(NIVFLD + MAP_VEC_FRTN(MAP_IND_CMPO)+&
 !!!			MAP_SEPA_LEN)
 !!!		MAP_GLS_TXT = MAP_FNC_WRWI(NIVFLD + MAP_VEC_FRTN(MAP_IND_CMPO)+&
 !!!			MAP_SEPA_ATR)

		MAP_GLS_TXT = MAP_FNC_WRWI(NIVFLD + MAP_VEC_FRTN(MAP_IND_CMPO) + MAP_SEPA_PIC + MAP_GLS_PIC + ".")

 !!!		MAP_GLS_TXT = MAP_FNC_WRWF(NIVFLD + MAP_VEC_FRTN(MAP_IND_CMPO) + MAP_SEPA_PIC + MAP_GLS_PIC)
 !!!		MAP_GLS_TXT = MAP_FNC_WRWF(SPAFLD + "VA SPACES.")
	END IF
	END IF

 !!!	IF MAP_VEC_DSPL_SDF(MAP_TOT_CMPO) = MAP_CTE_NOT THEN
 !!!		IF MAP_VEC_CGEN_SDF(MAP_TOT_CMPO) = MAP_CTE_NOT THEN
 !!!			PTX_LENV = PTX_LENV + 1
 !!!			MAP_GLS_TXT = MAP_FNC_WRWF(V_ANSI(MG_B) + '05 FILLER                        PIC X(01) VALUE @1E@.')
 !!!		END IF
 !!!	END IF

   END DEF

   DEF INTEGER MAP_FNC_WF

	M$ = ""
	IF M% > 0 THEN
		M$ = STR$(M%)
	END IF
	HDRIDX$ = "FALSE"
	NIVEDT$ = V_ANSI(MG_B) + "05 "
	IF ACT_INDEX = MAP_CTE_YES THEN
		ANT_INDEX = MAP_CTE_YES
		NIVFLD = V_ANSI(MG_B) + "05 "
		SPAFLD = V_ANSI(MG_B) + "   "
		IF NIV_INDEX = 3 THEN
			HDRIDX$ = "TRUE"
		END IF


 !!! SI CAMPO INDEXADO ESCRIBE DIRECTAMENTE EL HEADER ANTES DE
 !!! LA PRIMERA OCURRENCIA
	IF HDRIDX$ = "TRUE" THEN
		WTXT_NUM_SOR = 1
		MAP_GLS_OCC = MAP_VEC_FRTN(MAP_IND_CMPO)+"-IDX  OCCURS " +&
			  STR$(MAP_TOT_CIDX) + " TIMES."
 !!! NO EXISTEN CAMPOS INDEXADOS PARA REGISTRO WF
 !!!      		PTX_SWI_WPTX = "SI"
 !!!		MAP_GLS_TXT = MAP_FNC_WRWI(NIVFLD + MAP_GLS_OCC)

 !!! TAMBIEN ESCRIBE HEADER PARA REGISTRO DE EDICION
 !!!		IF MAP_VEC_NUME(MAP_IND_CMPO) = MAP_CTE_YES THEN
 !!!			WTXT_NUM_SOR = 9
 !!!			MAP_GLS_OCC = MAP_VEC_FRTN(MAP_IND_CMPO)+"-EDT-IDX  OCCURS " +&
 !!!				STR$(MAP_TOT_CIDX) + " TIMES."
 !!!			MAP_GLS_TXT = MAP_FNC_WRWI(NIVFLD + MAP_GLS_OCC)
 !!!		END IF
	END IF

		NIVFLD = V_ANSI(MG_B) + "   07 "
		SPAFLD = V_ANSI(MG_B) + "      "
		NIVHJO = V_ANSI(MG_B) + "      09 "
		MAP_GLS_SPA_HJO = V_ANSI(MG_B) + "         "
		MAP_SEPA_PIC    = "               PIC "

                IF MAP_COD_AIU = "SDF" THEN
		    MAP_SEPA_LEN    = "-LEN           PIC X(01)."
                ELSE
                    IF MAP_COD_AIU = "SCC" THEN
 	    	        MAP_SEPA_LEN    = "-LEN VALUE 0   PIC S9(02)."
                    ELSE
 	    	        MAP_SEPA_LEN    = "-LEN COMP      PIC S9(04)."
                    END IF
                END IF

		MAP_SEPA_ATR    = "-ATR           PIC X(01)."
	ELSE
		ANT_INDEX = MAP_CTE_NOT
		NIVFLD = V_ANSI(MG_B) + "05 "
		SPAFLD = V_ANSI(MG_B) + "   "
		NIVHJO = V_ANSI(MG_B) + "   07 "
		MAP_GLS_SPA_HJO = V_ANSI(MG_B) + "      "
		MAP_SEPA_PIC    = "                  PIC "

                IF MAP_COD_AIU = "SDF" THEN
		    MAP_SEPA_LEN    = "-LEN           PIC X(01)."
                ELSE
                    IF MAP_COD_AIU = "SCC" THEN
 	    	        MAP_SEPA_LEN    = "-LEN VALUE 0   PIC S9(02)."
                    ELSE
 	    	        MAP_SEPA_LEN    = "-LEN COMP      PIC S9(04)."
                    END IF
                END IF

		MAP_SEPA_ATR    = "-ATR              PIC X(01)."
	END IF

 !!! ESCRIBE DIRECTAMENTE EL HELP ASOCIADO AL CAMPO

       MAP_GLS_TXT = MAP_FNC_WRWF("")

 !!!      PTX_SWI_WPTX = "SI"
	MAP_GLS_TXT = MAP_FNC_WRWF(V_ANSI(MG_C) + "*" + MAP_GLS_HLP)

	MAP_GLS_TXT = MAP_FNC_WRWF(V_ANSI(MG_C) + "* Campo en Fila " + PTX_FILN + " / Columna " + PTX_COLN)
	IF MAP_VEC_CGEN_SDF(MAP_TOT_CMPO) = MAP_CTE_YES THEN
	       MAP_GLS_TXT = MAP_FNC_WRWF(V_ANSI(MG_N) + '% FCHEX = "' + PTX_COLH + PTX_FILH + '"')
	ELSE
	       MAP_GLS_TXT = MAP_FNC_WRWF(V_ANSI(MG_B) + "05 FILLER                        PIC X(04)" +&
				                 " VALUE @277F" + PTX_COLH + PTX_FILH + "@.")
		PTX_LENV = PTX_LENV + 4
	END IF
 
	IF MAP_VEC_DSPL_SDF(MAP_TOT_CMPO) = MAP_CTE_NOT THEN
		IF MAP_VEC_CGEN_SDF(MAP_TOT_CMPO) = MAP_CTE_NOT THEN
			MAP_GLS_TXT = MAP_FNC_WRWF(V_ANSI(MG_B) + '05 FILLER                        PIC X(01) VALUE @1C@.')
			PTX_LENV = PTX_LENV + 1
		END IF
	END IF

 !!! SI EL CAMPO ES NUMERICO ESCRIBE HEADER DE REGISTRO DE EDICION
 !!! ANTES DEL PRIMER CAMPO DE EDICION
	IF MAP_VEC_NUME(MAP_IND_CMPO) = MAP_CTE_YES OR&
	   MAP_SWI_VRF = MAP_CTE_YES THEN
		MAP_NUM_FNC = MAP_FNC_HDR_EDT
	END IF

 !!! ESCRIBE PARAMETROS DEL CAMPO
	IF MAP_SWI_FEC = MAP_CTE_YES OR&
	   MAP_SWI_VRF = MAP_CTE_YES OR&
	   MAP_SWI_IDC = MAP_CTE_YES THEN
		IF MAP_SWI_IDC = MAP_CTE_YES THEN

 !!!			BKP_WTXT_NUM_SOR% = WTXT_NUM_SOR
 !!!			WTXT_NUM_SOR = 0
			MAP_GLS_TXT = MAP_FNC_WRWF("% FCHEX_IDC_" + MAP_VEC_REGI(MAP_IND_CMPO) + "_" +&
				MAP_VEC_NOMB(MAP_IND_CMPO) +&
				' = "' + PTX_COLH + PTX_FILH + '"')
 !!!			WTXT_NUM_SOR = BKP_WTXT_NUM_SOR% 

			IDC_TRUE$ = "% TIENE_IDC_" + MAP_VEC_REGI(MAP_IND_CMPO) + "_IDC_" +&
					MAP_VEC_NOMB(MAP_IND_CMPO) + " = TRUE"

 !!!			BKP_WBMS_NUM_DOR = WBMS_NUM_SOR
 !!!			BKP_MAP_NUM_LINE = MAP_NUM_LINE
 !!!			BKP_MAP_NUM_COLU = MAP_NUM_COLU
 !!!			WBMS_NUM_SOR = 0
 !!!			MAP_NUM_LINE = 0
 !!!			MAP_NUM_COLU = 0
 !!!			MAP_GLS_BMS = MAP_FNC_WBMS(IDC_TRUE$)
 !!!			WBMS_NUM_SOR = BKP_WBMS_NUM_DOR 
 !!!			MAP_NUM_LINE = BKP_MAP_NUM_LINE 
 !!!			MAP_NUM_COLU = BKP_MAP_NUM_COLU
 !!!
 !!!			BKP_WTXT_NUM_SOR% = WTXT_NUM_SOR
			WTXT_NUM_SOR = 0

			PTX_SWI_WPTX = "SI"
			MAP_GLS_TXT = MAP_FNC_WRWF(IDC_TRUE$)

		        CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BA,MG_N,IDC_TRUE$)
			WTXT_NUM_SOR = BKP_WTXT_NUM_SOR% 
		END IF

		JJ% = MAP_IND_CMPO
		MAP_NUM_FNC = MAP_FNC_PRMF_WI
 !!!		MAP_GLS_TXT = MAP_FNC_WRWI( IPTWI$ + MAP_VEC_FCMP(MAP_IND_CMPO) + MAP_VEC_TCMP(MAP_IND_CMPO) + TPTX$)
 !!!		MAP_GLS_TXT = MAP_FNC_WRWI( IPTWI$ + "001" + TPTX$)

		IF MAP_SWI_VRF = MAP_CTE_YES THEN
			MAP_GLS_TXT = MAP_FNC_WRWF("% LARG_VRF_" + MAP_VEC_REGI(MAP_IND_CMPO) + "_" + MAP_VEC_NOMB(MAP_IND_CMPO) +&
				' = "' + L_VRF$ + STR$(MAP_NUM_PICT-1) + '"')
			MAP_GLS_TXT = MAP_FNC_WRWF("% FCHEX_VRF_" + MAP_VEC_REGI(MAP_IND_CMPO) + "_" +&
				MAP_VEC_NOMB(MAP_IND_CMPO) +&
				' = "' + PTX_COLH + PTX_FILH + '"')
		END IF

 		MAP_GLS_TXT = MAP_FNC_WRWF( IPTWF$ + "001" + TPTX$)
		WTXT_NUM_SOR = 9
		JJ% = MAP_IND_CMPO
		MAP_NUM_FNC = MAP_FNC_PRMF_WI
 !!!		MAP_GLS_TXT = MAP_FNC_WRWI( IPTWI$ + "004" + TPTX$ )
 !!!		MAP_GLS_TXT = MAP_FNC_WRWI(NIVFLD +&
 !!!		MAP_VEC_REGI(MAP_IND_CMPO) + "-NUM-" + MAP_VEC_NOMB(MAP_IND_CMPO) + "-EDT  " +&
 !!!		"              PIC Z(" + LNGVRF$ + ").")
		WTXT_NUM_SOR = 1

		IF MAP_SWI_VRF = MAP_CTE_YES THEN

			BKP_WTXT_NUM_SOR% = WTXT_NUM_SOR
			WTXT_NUM_SOR = 0
			L_VRF$ = ""
			IF MAP_NUM_PICT < 11 THEN
				L_VRF$ = "0"
			END IF
 !!!			PTX_SWI_WPTX = "SI"
 !!!			MAP_GLS_TXT = MAP_FNC_WRWI("% LARG_VRF_" + MAP_VEC_REGI(MAP_IND_CMPO) + "_" + MAP_VEC_NOMB(MAP_IND_CMPO) +&
 !!!				" = " + STR$(MAP_NUM_PICT) )

			WTXT_NUM_SOR = BKP_WTXT_NUM_SOR% 

 !!!			BKP_WTXT_NUM_SOR% = WTXT_NUM_SOR
 !!!			WTXT_NUM_SOR = 0
 !!!			WTXT_NUM_SOR = BKP_WTXT_NUM_SOR% 



		END IF
		ELSE
 !!! ESCRIBE DIRECTAMENTE BYTES DE LARGO Y ATRIBUTOS
 !!!	MAP_GLS_TXT = MAP_FNC_WRWI(NIVFLD + MAP_VEC_FRTN(MAP_IND_CMPO)+&
 !!!		MAP_SEPA_LEN)
 !!!	MAP_GLS_TXT = MAP_FNC_WRWI(NIVFLD + MAP_VEC_FRTN(MAP_IND_CMPO)+&
 !!!		MAP_SEPA_ATR)
	IF MAP_VEC_NUME(MAP_IND_CMPO) = MAP_CTE_YES THEN
		MAP_NUM_FNC = MAP_FNC_EDT

 !!!		PTX_SWI_WPTX = "SI"

		MAP_GLS_TXT = MAP_FNC_WRWF(NIVFLD + MAP_VEC_FRTN(MAP_IND_CMPO)  + M$ + "    " +&
			RIGHT(MAP_SEPA_PIC,5) + MAP_GLS_PIC_ALF)
		MAP_GLS_TXT = MAP_FNC_WRWF(SPAFLD + "VA SPACES.")

 !!!		MAP_GLS_TXT = MAP_FNC_WRWI(NIVFLD + MAP_VEC_FRTN(MAP_IND_CMPO)  + "-ALF" +&
 !!!			RIGHT(MAP_SEPA_PIC,5) + MAP_GLS_PIC_ALF + ".")

		WTXT_NUM_SOR = 9
 !!!		MAP_GLS_TXT = MAP_FNC_WRWI(NIVEDT$ + MAP_VEC_FRTN(MAP_IND_CMPO) + "-EDT PIC " +&
 !!!			MAP_GLS_PIC_EDT + ".")
		WTXT_NUM_SOR = 1

 !!!		MAP_GLS_TXT = MAP_FNC_WRWI(NIVFLD + MAP_VEC_FRTN(MAP_IND_CMPO) + "      REDEFINES" )
 !!!		IF SGN_LEAD <> "" THEN
 !!!			MAP_GLS_TXT = MAP_FNC_WRWI(SPAFLD + MAP_VEC_FRTN(MAP_IND_CMPO) + "-ALF" +&
 !!!				RIGHT(MAP_SEPA_PIC,5)  + "S" + RIGHT(MAP_GLS_PIC,2) + "." )
 !!!		ELSE
 !!!			MAP_GLS_TXT = MAP_FNC_WRWI(SPAFLD + MAP_VEC_FRTN(MAP_IND_CMPO) + "-ALF" +&
 !!!				RIGHT(MAP_SEPA_PIC,5)  + MAP_GLS_PIC + ".")
 !!!		END IF
	ELSE
 !!! ESCRIBE DIRECTAMENTE BYTES DE LARGO Y ATRIBUTOS
 !!!		MAP_GLS_TXT = MAP_FNC_WRWI(NIVFLD + MAP_VEC_FRTN(MAP_IND_CMPO)+&
 !!!			MAP_SEPA_LEN)
 !!!		MAP_GLS_TXT = MAP_FNC_WRWI(NIVFLD + MAP_VEC_FRTN(MAP_IND_CMPO)+&
 !!!			MAP_SEPA_ATR)

 !!!		MAP_GLS_TXT = MAP_FNC_WRWI(NIVFLD + MAP_VEC_FRTN(MAP_IND_CMPO) + MAP_SEPA_PIC + MAP_GLS_PIC + ".")

		MAP_GLS_TXT = MAP_FNC_WRWF(NIVFLD + MAP_VEC_FRTN(MAP_IND_CMPO) + M$ + MAP_SEPA_PIC + MAP_GLS_PIC)
		MAP_GLS_TXT = MAP_FNC_WRWF(SPAFLD + "VA SPACES.")
	END IF
	END IF

	IF MAP_VEC_DSPL_SDF(MAP_TOT_CMPO) = MAP_CTE_NOT THEN
		IF MAP_VEC_CGEN_SDF(MAP_TOT_CMPO) = MAP_CTE_NOT THEN
			PTX_LENV = PTX_LENV + 1
			MAP_GLS_TXT = MAP_FNC_WRWF(V_ANSI(MG_B) + '05 FILLER                        PIC X(01) VALUE @1E@.')
		END IF
	END IF

   END DEF
850
 !====================== DETECTA CADA REGISTRO DE LA PANTALLA ===============

   DEF INTEGER MAP_FNC_FIL
   MAP_SWI_FILE = MAP_CTE_NOT
   FOR I% = 1 TO MAP_TOT_FILE
      IF MAP_VEC_FIL(I%) = MAP_VEC_REGI(MAP_TOT_CMPO) THEN
         MAP_SWI_FILE = MAP_CTE_YES
      END IF
   NEXT I%
   IF MAP_SWI_FILE = MAP_CTE_NOT AND MAP_SWI_CFRM = MAP_CTE_NOT THEN
      MAP_TOT_FILE = MAP_TOT_FILE + 1
      MAP_VEC_FIL(MAP_TOT_FILE) = MAP_VEC_REGI(MAP_TOT_CMPO)
   END IF

   END DEF
860
 !====================== GENERA CAMPOS ADICIONALES DE FECHA =============

   DEF INTEGER MAP_FNC_FEC

   MAP_GLS_SFEC = RIGHT$(MAP_VEC_NOMB(MAP_TOT_CMPO),2)
   IF MAP_VEC_FCMP(MAP_IND_CMPO) = "BCI" THEN
       POSFEC$ = MAP_VEC_NOMB(MAP_TOT_CMPO)
   ELSE
       POSFEC$ = MAP_GLS_SFEC
   END IF
   FOR I% = 1 TO MAP_NUM_TFEC
      MAP_TOT_CMPO = MAP_TOT_CMPO + 1
      IF MAP_SWI_CFRM = MAP_CTE_YES THEN
         MAP_VEC_MOVE(MAP_TOT_CMPO) = MAP_CTE_NOT
      END IF
      MAP_VEC_DERI (MAP_TOT_CMPO) = MAP_CTE_YES
      MAP_VEC_DSPL (MAP_TOT_CMPO) = MAP_VEC_DSPL(MAP_IND_CMPO)
      MAP_VEC_PROT (MAP_TOT_CMPO) = MAP_CTE_NOT
      MAP_VEC_VALI (MAP_TOT_CMPO) = MAP_CTE_NOT
      MAP_VEC_SCLR (MAP_TOT_CMPO) = MAP_CTE_NOT
      MAP_VEC_TFLD (MAP_TOT_CMPO) = MAP_VEC_TFLD(MAP_IND_CMPO)
      MAP_VEC_REGI (MAP_TOT_CMPO) = MAP_VEC_REGI(MAP_IND_CMPO)
      MAP_VEC_PFLD (MAP_TOT_CMPO) = MAP_CTE_NOT
      IF MAP_VEC_FCMP(MAP_IND_CMPO) = "BCI" THEN
         MAP_VEC_NOMB (MAP_TOT_CMPO) = MAP_VEC_NOMB(MAP_TOT_CMPO - 1 )
         IF I% = 1 THEN
             MAP_VEC_TIPO (MAP_TOT_CMPO) = "FD"
	     KYH_NUM_LENC = "02"
         ELSE
         IF I% = 2 THEN
             MAP_VEC_TIPO (MAP_TOT_CMPO) = "FM"
	     KYH_NUM_LENC = "02"
         ELSE
         IF I% = 3 THEN
             MAP_VEC_TIPO (MAP_TOT_CMPO) = "FA"
	     KYH_NUM_LENC = "04"
         END IF
         END IF
         END IF
      ELSE
         MAP_VEC_NOMB (MAP_TOT_CMPO) = MAP_VEC_DMSA(I%) + MAP_GLS_SFEC
         MAP_VEC_TIPO (MAP_TOT_CMPO) = "NUM"
      END IF
      IF MAP_VEC_NOMB(MAP_TOT_CMPO) = "" THEN
          MAP_GLS_SEP2$ = ""
      ELSE
          MAP_GLS_SEP2$ = "-"
      END IF
      MAP_VEC_FRTN(MAP_TOT_CMPO) = AUX_REG$ +&
                                   "-" + MAP_VEC_TIPO(MAP_TOT_CMPO) +&
				   MAP_GLS_SEP2$ +&
				   MAP_VEC_NOMB(MAP_TOT_CMPO)
      MAP_VEC_RRTN(MAP_TOT_CMPO) = AUX_REGNRTN$ +&
                                   "-" + MAP_VEC_TIPO(MAP_TOT_CMPO) +&
				   MAP_GLS_SEP2$ +&
				   MAP_VEC_NOMB(MAP_TOT_CMPO)
      MAP_VEC_TIDX(MAP_TOT_CMPO)        = MAP_TOT_CIDX
882
   NEXT I%
   END DEF
884
 !====================== GENERA CAMPOS ADICIONALES DIGITO VERIFICADOR =======
886
   DEF INTEGER MAP_FNC_VRF

   VRF$ = "TRUE"

   MAP_TOT_CMPO = MAP_TOT_CMPO + 1
   IF MAP_SWI_CFRM = MAP_CTE_YES THEN
        MAP_VEC_MOVE(MAP_TOT_CMPO) = MAP_CTE_NOT
   END IF
   MAP_VEC_TVAL(MAP_TOT_CMPO) = MAP_IND_VVRF
   MAP_VEC_DSPL(MAP_TOT_CMPO) = MAP_VEC_DSPL(MAP_IND_CMPO)
   MAP_VEC_PROT(MAP_TOT_CMPO) = MAP_VEC_PROT(MAP_IND_CMPO)
   MAP_VEC_TIDX(MAP_TOT_CMPO) = MAP_TOT_CIDX
   MAP_VEC_REGI(MAP_TOT_CMPO) = MAP_VEC_REGI(MAP_IND_CMPO)
   IF MAP_VEC_FCMP(MAP_IND_CMPO) = "CST" OR&
      MAP_VEC_FCMP(MAP_IND_CMPO) = "PER" THEN
       MAP_VEC_TIPO(MAP_TOT_CMPO) = "VRF"
   ELSE
       MAP_VEC_TIPO(MAP_TOT_CMPO) = "VRT"
   END IF
   MAP_VEC_NOMB(MAP_TOT_CMPO) = MAP_VEC_NOMB(MAP_IND_CMPO)
   IF MAP_VEC_NOMB(MAP_TOT_CMPO) = "" THEN
       MAP_GLS_SEP2$ = ""
   ELSE
       MAP_GLS_SEP2$ = "-"
   END IF
      MAP_VEC_REGI_REG(MAP_TOT_CMPO) = AUX_REG$ 
      MAP_VEC_REGI_FRM(MAP_TOT_CMPO) = AUX_REGNTRN$
      MAP_VEC_FRTN(MAP_TOT_CMPO) = AUX_REG$ +&
                                   "-" + MAP_VEC_TIPO(MAP_TOT_CMPO) +&
				   MAP_GLS_SEP2$ +&
				   MAP_VEC_NOMB(MAP_TOT_CMPO)
      MAP_VEC_FRTN(MAP_TOT_CMPO) = AUX_REG$ + "-NUM-" + MAP_VEC_NOMB(MAP_TOT_CMPO)
      MAP_VEC_RRTN(MAP_TOT_CMPO) = AUX_REGNRTN$ +&
                                   "-" + MAP_VEC_TIPO(MAP_TOT_CMPO) +&
				   MAP_GLS_SEP2$ +&
				   MAP_VEC_NOMB(MAP_TOT_CMPO)

   MAP_VEC_TFLD(MAP_TOT_CMPO) = MAP_VEC_TFLD(MAP_IND_CMPO)
   MAP_VEC_PKEY(MAP_TOT_CMPO) = MAP_CTE_NOT
   MAP_VEC_PFLD(MAP_TOT_CMPO) = MAP_CTE_NOT
   LNGVRF$ = STR$(MAP_NUM_PICT - 1 )

 !!! FLB Genera y Escribe KYH para campo adicional
   KYM_POSI     = KYM_POSI + 13
   KYH_NUM_POSC = FORMAT$(KYM_POSI,"####")
   IND_AUXI     = MAP_TOT_CMPO
   MAP_NUM_FNC  = MAP_OBT_NKYH
   KYH_NUM_LENC = "01"
   HLP_SIST     = "   "
   HLP_TABL     = "    "
   HLP_NUM_POSC = "    "
   KYH_REG = 	MAP_GLS_PROY + "F" +  MAP_GLS_MAPA + KYH_GLS_NOMC + " " +&
	 	KYH_NUM_POSC + " "+ KYH_NUM_LENC + &
		HLP_SIST + HLP_TABL + HLP_NUM_POSC
	IF MAP_OPT_HLP = "HLP" THEN
		PRINT #MAP_CNL_FKYH, KYH_REG
	END IF

 !!! Suma byte attrib guion + byte attrib campo
   MAP_NUM_CXFL = MAP_NUM_CXFL + 2
   END DEF

 !====================== GENERA CAMPOS ADICIONALES CAMPOS IDC =======

   DEF INTEGER MAP_FNC_IDC

   IDC$ = "TRUE"

   MAP_VEC_TVAL(MAP_TOT_CMPO) = MAP_IND_VIND
   MAP_TOT_CMPO = MAP_TOT_CMPO + 1
   MAP_VEC_TVAL(MAP_TOT_CMPO) = MAP_IND_VGLS
   IF MAP_SWI_CFRM = MAP_CTE_YES THEN
        MAP_VEC_MOVE(MAP_TOT_CMPO) = MAP_CTE_NOT
   END IF
   MAP_VEC_BUS(MAP_TOT_CMPO)  = MAP_IND_IDC
   MAP_VEC_REGI(MAP_TOT_CMPO) = MAP_VEC_REGI(MAP_IND_CMPO)

   IF MAP_VEC_FCMP(MAP_IND_CMPO) = "CST" THEN
       MAP_VEC_TIPO(MAP_TOT_CMPO) = "GLS"
   ELSE
       MAP_VEC_TIPO(MAP_TOT_CMPO) = "GRT"
   END IF
   MAP_VEC_GLS_VRF(MAP_TOT_CMPO) = MAP_CTE_YES
   MAP_VEC_TIDX(MAP_TOT_CMPO) = MAP_TOT_CIDX
   MAP_VEC_NOMB(MAP_TOT_CMPO) = MAP_VEC_NOMB(MAP_IND_CMPO)
      IF MAP_VEC_NOMB(MAP_TOT_CMPO) = "" THEN
          MAP_GLS_SEP2$ = ""
      ELSE
          MAP_GLS_SEP2$ = "-"
      END IF

      MAP_VEC_FRTN(MAP_TOT_CMPO) = AUX_REG$ +&
                                   "-" + MAP_VEC_TIPO(MAP_TOT_CMPO) +&
				   MAP_GLS_SEP2$ +&
				   MAP_VEC_NOMB(MAP_TOT_CMPO)
      MAP_VEC_FRTN(MAP_TOT_CMPO) = AUX_REG$ +&
                                   "-IND-" +&
				   MAP_VEC_NOMB(MAP_TOT_CMPO)
      MAP_VEC_RRTN(MAP_TOT_CMPO) = AUX_REGNRTN$ +&
                                   "-" + MAP_VEC_TIPO(MAP_TOT_CMPO) +&
				   MAP_GLS_SEP2$ +&
				   MAP_VEC_NOMB(MAP_TOT_CMPO)
   MAP_VEC_TFLD(MAP_TOT_CMPO) = MAP_VEC_TFLD(MAP_IND_CMPO)
   MAP_VEC_PKEY(MAP_TOT_CMPO - 1) = MAP_CTE_NOT
   MAP_VEC_PKEY(MAP_TOT_CMPO    ) = MAP_CTE_NOT
   MAP_VEC_PFLD(MAP_TOT_CMPO - 1) = MAP_CTE_NOT
   MAP_VEC_PFLD(MAP_TOT_CMPO    ) = MAP_CTE_NOT
   MAP_VEC_DSPL(MAP_TOT_CMPO) = MAP_VEC_DSPL(MAP_IND_CMPO)
   MAP_VEC_PROT(MAP_TOT_CMPO) = MAP_VEC_PROT(MAP_IND_CMPO)
   LNGIDC$ = STR$(MAP_NUM_PICT)

 !!! FLB Genera y Escribe KYH para campo adicional
   KYM_POSI     = KYM_POSI + 6
   KYH_NUM_POSC = FORMAT$(KYM_POSI,"####")
 !!!   HLP_POSI     = HLP_POSI + 4
 !!!   HLP_NUM_POSC = FORMAT$(HLP_POSI,"####")
   IND_AUXI     = MAP_TOT_CMPO
   MAP_NUM_FNC  = MAP_OBT_NKYH
   KYH_NUM_LENC = "03"
   HLP_SIST     = "   "
   HLP_TABL     = "    "
   HLP_NUM_POSC = "    "
   KYH_REG = 	MAP_GLS_PROY + "F" +  MAP_GLS_MAPA + KYH_GLS_NOMC + " " +&
	 	KYH_NUM_POSC + " "+ KYH_NUM_LENC + &
		HLP_SIST + HLP_TABL + HLP_NUM_POSC
	IF MAP_OPT_HLP = "HLP" THEN
		PRINT #MAP_CNL_FKYH, KYH_REG
	END IF

 !!! Suma byte attrib guion + byte attrib campo
   MAP_NUM_CXFL = MAP_NUM_CXFL + 2

   END DEF


 !====================== UNDERCORE ======================

   DEF INTEGER MAP_FNC_UND

	MAP_GLS_DLI = "INITIAL='<'"
	MAP_GLS_DLD = "INITIAL='>'"
	CALL GENRPTREP(MAP_GLS_CMP,"_","-")
	MAP_TOT_CMPO = MAP_TOT_CMPO + 1
	MAP_IND_CMPO = MAP_TOT_CMPO

	IF LEFT$(MAP_GLS_CMP,2) = "F$" THEN
		MAP_GLS_CMP = "GNS-GLS-CFLD"
	END IF

	AUX_REG$ = ""
 UND_LAB_BCI:
	UND_TOT_UND = 0
	FOR I% = 1 TO LEN(MAP_GLS_CMP)
		IF MID$(MAP_GLS_CMP,I%,1) = "$" THEN
			UND_TOT_UND = UND_TOT_UND + 1
			MAP_VEC_UNDE(UND_TOT_UND) = I%
		END IF
	NEXT I%
	IF UND_TOT_UND > 0 THEN
		MAP_VEC_FCMP(MAP_TOT_CMPO) = "BCI"
		AUX_REG$ = LEFT$(MAP_GLS_CMP,MAP_VEC_UNDE(1) - 1)
		MAP_VEC_TCMP(MAP_TOT_CMPO) = MID$(MAP_GLS_CMP,MAP_VEC_UNDE(1) + 1, MAP_VEC_UNDE(2) - (MAP_VEC_UNDE(1) + 1))
		MAP_GLS_CMP = RIGHT$(MAP_GLS_CMP,MAP_VEC_UNDE(2) + 1 )
	ELSE
		MAP_VEC_FCMP(MAP_TOT_CMPO) = "CST"
	END IF

 UND_LAB_CIC:
	UND_TOT_UND = 0
	FOR I% = 1 TO LEN(MAP_GLS_CMP)
		IF MID$(MAP_GLS_CMP,I%,1) = "-" THEN
			UND_TOT_UND = UND_TOT_UND + 1
			MAP_VEC_UNDE(UND_TOT_UND) = I%
		END IF
	NEXT I%

	IF MID$(MAP_GLS_CMP,MAP_VEC_UNDE(1),5) = "-IKY-" THEN
		MAP_GLS_DLI = "INITIAL='{'"
		MAP_GLS_DLD = "INITIAL='}'"
		MAP_VEC_PKEY(MAP_TOT_CMPO) = MAP_CTE_YES
		MAP_VEC_PFLD(MAP_TOT_CMPO) = MAP_CTE_NOT
		MAP_VEC_TFLD(MAP_TOT_CMPO) = MAP_IND_IKY
                MAP_GLS_CMP = LEFT$(MAP_GLS_CMP,MAP_VEC_UNDE(1) - 1 ) + RIGHT$(MAP_GLS_CMP,MAP_VEC_UNDE(2))
		GO TO UND_LAB_CIC
	ELSE
		IF MID$(MAP_GLS_CMP,MAP_VEC_UNDE(1),5) = "-MKY-" THEN
			MAP_GLS_DLI = "INITIAL='{'"
			MAP_GLS_DLD = "INITIAL='}'"
			MAP_VEC_PKEY(MAP_TOT_CMPO) = MAP_CTE_NOT
			MAP_VEC_PFLD(MAP_TOT_CMPO) = MAP_CTE_YES
			MAP_VEC_TFLD(MAP_TOT_CMPO) = MAP_IND_MKY
			MAP_GLS_CMP = LEFT$(MAP_GLS_CMP,MAP_VEC_UNDE(1) - 1 ) + RIGHT$(MAP_GLS_CMP,MAP_VEC_UNDE(2))
			GO TO UND_LAB_CIC
		ELSE
			IF MID$(MAP_GLS_CMP,MAP_VEC_UNDE(1),5) = "-AKY-" THEN
				MAP_GLS_DLI = "INITIAL='{'"
				MAP_GLS_DLD = "INITIAL='}'"
				MAP_VEC_PKEY(MAP_TOT_CMPO) = MAP_CTE_NOT
				MAP_VEC_PFLD(MAP_TOT_CMPO) = MAP_CTE_NOT
				MAP_VEC_TFLD(MAP_TOT_CMPO) = MAP_IND_AKY
				MAP_GLS_CMP = LEFT$(MAP_GLS_CMP,MAP_VEC_UNDE(1) - 1 ) +&
				RIGHT$(MAP_GLS_CMP,MAP_VEC_UNDE(2))
				GO TO UND_LAB_CIC
			END IF
		END IF
	END IF
	IF LEFT$(MAP_GLS_CMP,4) = "FRM-" THEN
		MAP_SWI_CFRM = MAP_CTE_YES
		MAP_VEC_MOVE(MAP_TOT_CMPO) = MAP_CTE_NOT
 !!!		MAP_VEC_REGI(MAP_TOT_CMPO) = MAP_GLS_MAPA
 !!!		GO TO UND_LAB_FRM
	END IF

	AUX_REGNRTN$ = LEFT$(MAP_GLS_CMP,MAP_VEC_UNDE(1) - 1)
	IF AUX_REG$ = "" THEN
		AUX_REG$ = LEFT$(MAP_GLS_CMP,MAP_VEC_UNDE(1) - 1)
	END IF

	MAP_VEC_REGI(MAP_TOT_CMPO) = AUX_REG$
	MAP_VEC_REGI_REG(MAP_TOT_CMPO) = MAP_VEC_REGI(MAP_TOT_CMPO)
	IF MAP_VEC_TCMP(MAP_TOT_CMPO) = "" THEN
		MAP_VEC_TCMP(MAP_TOT_CMPO) = MID$(MAP_GLS_CMP,MAP_VEC_UNDE(1) + 1, MAP_VEC_UNDE(2) - (MAP_VEC_UNDE(1) + 1))
	END IF

 UND_LAB_FRM:

	IF MAP_VEC_TCMP(MAP_TOT_CMPO) = "FEC" THEN
		IF MAP_VEC_FCMP(MAP_TOT_CMPO) = "CST" THEN
			MAP_NUM_TFEC = 4
			MAP_VEC_DMSA(3) = "S"
			MAP_VEC_DMSA(4) = "A"
		ELSE
			MAP_NUM_TFEC = 3
			MAP_VEC_DMSA(3) = "A"
		END IF
		MAP_VEC_DMSA(1) = "D"
		MAP_VEC_DMSA(2) = "M"
		MAP_SWI_FEC = MAP_CTE_YES
		MAP_VEC_FECH(MAP_TOT_CMPO) = FEC_IND_FFEC
	ELSE
       IF MAP_VEC_TCMP(MAP_TOT_CMPO) = "DMA" OR &
		MAP_VEC_TCMP(MAP_TOT_CMPO) = "AMD" THEN
		MAP_NUM_TFEC = 3
		MAP_VEC_DMSA(1) = "D"
		MAP_VEC_DMSA(2) = "M"
		MAP_VEC_DMSA(3) = "A"
		MAP_VEC_DMSA(4) = ""
		MAP_SWI_FEC = MAP_CTE_YES
		MAP_VEC_FECH(MAP_TOT_CMPO) = FEC_IND_FDMA
	ELSE
		IF MAP_VEC_TCMP(MAP_TOT_CMPO) = "MSA" OR &
			MAP_VEC_TCMP(MAP_TOT_CMPO) = "SAM" THEN
			MAP_NUM_TFEC = 3
			MAP_VEC_DMSA(1) = "M"
			MAP_VEC_DMSA(2) = "S"
			MAP_VEC_DMSA(3) = "A"
			MAP_VEC_DMSA(4) = ""
			MAP_SWI_FEC = MAP_CTE_YES
			MAP_VEC_FECH(MAP_TOT_CMPO) = FEC_IND_FMSA
		ELSE
			IF MAP_VEC_TCMP(MAP_TOT_CMPO) = "FMA" OR &
				MAP_VEC_TCMP(MAP_TOT_CMPO) = "FAM" THEN
				MAP_NUM_TFEC = 2
				MAP_VEC_DMSA(1) = "M"
				MAP_VEC_DMSA(2) = "A"
				MAP_VEC_DMSA(3) = ""
				MAP_VEC_DMSA(4) = ""
				MAP_SWI_FEC = MAP_CTE_YES
				MAP_VEC_FECH(MAP_TOT_CMPO) = FEC_IND_FFMA
			ELSE
				IF MAP_VEC_TCMP(MAP_TOT_CMPO) = "FSA" OR &
				   MAP_VEC_TCMP(MAP_TOT_CMPO) = "FAS" THEN
						MAP_NUM_TFEC = 2
						MAP_VEC_DMSA(1) = "S"
						MAP_VEC_DMSA(2) = "A"
						MAP_VEC_DMSA(3) = ""
						MAP_VEC_DMSA(4) = ""
						MAP_SWI_FEC = MAP_CTE_YES
						MAP_VEC_FECH(MAP_TOT_CMPO) = FEC_IND_FFSA
					ELSE
						IF MAP_VEC_TCMP(MAP_TOT_CMPO) = "FDM" OR &
						   MAP_VEC_TCMP(MAP_TOT_CMPO) = "FMD" THEN
							MAP_NUM_TFEC = 2
							MAP_VEC_DMSA(1) = "D"
							MAP_VEC_DMSA(2) = "M"
							MAP_VEC_DMSA(3) = ""
							MAP_VEC_DMSA(4) = ""
							MAP_SWI_FEC = MAP_CTE_YES
							MAP_VEC_FECH(MAP_TOT_CMPO) = FEC_IND_FFDM
						ELSE
							IF MAP_VEC_TCMP(MAP_TOT_CMPO) = "FFA" THEN
								MAP_NUM_TFEC = 1
								MAP_VEC_DMSA(1) = "A"
								MAP_VEC_DMSA(2) = ""
								MAP_VEC_DMSA(3) = ""
								MAP_VEC_DMSA(4) = ""
								MAP_SWI_FEC = MAP_CTE_YES
								MAP_VEC_FECH(MAP_TOT_CMPO) = FEC_IND_FFFA
							ELSE
								IF MAP_VEC_TCMP(MAP_TOT_CMPO) = "VRF" THEN
									OVR_NUM_ADI = OVR_NUM_ADI + 2
									MAP_SWI_VRF = MAP_CTE_YES
									AUX_NRTN_VRF$ = LEFT(MAP_GLS_CMP,MAP_VEC_UNDE(1) - 1 )
									IF MAP_COD_PAI = "PER" THEN
										MAP_VEC_FCMP(MAP_TOT_CMPO) = "PER"
									END IF
									MAP_VEC_TIPO(MAP_TOT_CMPO) = "NUM"
									IF MAP_COD_PAI = "PER" THEN
										MAP_VEC_NUME(MAP_TOT_CMPO) = MAP_CTE_NOT
									ELSE
										MAP_VEC_NUME(MAP_TOT_CMPO) = MAP_CTE_YES
									END IF
								ELSE
									IF MAP_VEC_TCMP(MAP_TOT_CMPO) = "IDC" THEN
										OVR_NUM_ADI = OVR_NUM_ADI + 2
										MAP_SWI_IDC = MAP_CTE_YES
									ELSE
										IF MAP_VEC_TCMP(MAP_TOT_CMPO) = "GLS" THEN
											MAP_SWI_GLOS = MAP_CTE_YES
										ELSE
										END IF
									END IF
								END IF
							END IF
						END IF
					END IF
				END IF
			END IF
		END IF
	END IF

	AUX_TIPNRTN$ = MID$(MAP_GLS_CMP,MAP_VEC_UNDE(1) + 1, MAP_VEC_UNDE(2) - (MAP_VEC_UNDE(1) + 1))
	IF AUX_TIPNRTN$ = "VRF" THEN
		AUX_TIPNRTN$ = "NUM"
	ELSE
	IF AUX_TIPNRTN$ = "IDC" THEN
		AUX_TIPNRTN$ = "IND"
	END IF
	END IF
	MAP_VEC_TIPO(MAP_TOT_CMPO) = AUX_TIPNRTN$
	MAP_VEC_NOMB(MAP_TOT_CMPO) = RIGHT$(MAP_GLS_CMP,MAP_VEC_UNDE(2) + 1)
	MAP_VEC_NOMB_AUX(MAP_TOT_CMPO) = RIGHT$(MAP_GLS_CMP,MAP_VEC_UNDE(1) + 1)
	MAP_VEC_CMP(MAP_TOT_CMPO) = MAP_GLS_CMP
	IF MAP_VEC_NOMB(MAP_TOT_CMPO) = "" THEN
		MAP_GLS_SEP2$ = ""
	ELSE
		MAP_GLS_SEP2$ = "-"
	END IF
	MAP_VEC_REGI_REG(MAP_TOT_CMPO) = AUX_REGNRTN$ 
	MAP_VEC_RRTN(MAP_TOT_CMPO) = AUX_REGNRTN$ + "-" + AUX_TIPNRTN$ + MAP_GLS_SEP2$ + MAP_VEC_NOMB(MAP_TOT_CMPO)
	MAP_VEC_REGI_FRM(MAP_TOT_CMPO) = AUX_REG$ 
	MAP_VEC_FRTN(MAP_TOT_CMPO) = AUX_REG$ + "-" + AUX_TIPNRTN$ + MAP_GLS_SEP2$ + MAP_VEC_NOMB(MAP_TOT_CMPO)

	IF MAP_VEC_TCMP(MAP_TOT_CMPO) = "VRF" THEN
		MAP_VEC_FRTN_SDF(MAP_TOT_CMPO) = AUX_REG$ + "-VRF-" + MAP_VEC_NOMB(MAP_TOT_CMPO)
		MAP_VEC_LENG_SDF(MAP_TOT_CMPO) = "1"
	ELSE
	IF MAP_VEC_TCMP(MAP_TOT_CMPO) = "IDC" THEN
		MAP_VEC_FRTN_SDF(MAP_TOT_CMPO) = AUX_REG$ + "-GLS-" + MAP_VEC_NOMB(MAP_TOT_CMPO)
		MAP_VEC_LENG_SDF(MAP_TOT_CMPO) = "3"
	END IF
	END IF
888
	MAP_NUM_FNC = MAP_FNC_FIL

   END DEF
890
 !====================== INDEX =============================

   DEF INTEGER MAP_FNC_IDX
   TMP_INDEX = 1
   MAP_GLS_OCC = ""
   NIVFLD = V_ANSI(MG_B) + "02 "
   SPAFLD = V_ANSI(MG_B) + "   "
 IDX_LAB_NEW:
   ACT_INDEX = MAP_CTE_YES
   TMP_INDEX = TMP_INDEX + 1
   TOKEN = NEXTTOKEN
   TOKEN = NEXTTOKEN
   MAP_VEC_FICO(TMP_INDEX,1) = NUMTOKEN
 !   OVR_NUM_FIL = NUMTOKEN

   TOKEN = NEXTTOKEN
   TOKEN = NEXTTOKEN
   MAP_VEC_FICO(TMP_INDEX,2) = NUMTOKEN - 1

   TOKEN = NEXTTOKEN
   TOKEN = NEXTTOKEN
   IF VALTOKEN = ":" THEN
      GO TO IDX_LAB_NEW
   END IF      
895
 F_INDEX:

   IF ANT_INDEX = MAP_CTE_NOT THEN
      NIV_INDEX = 3
      MAP_SEPA_PIC = "                  PIC "
   ELSE
      IF TMP_INDEX = MAP_TOT_CIDX THEN
         NIV_INDEX = 5
      ELSE
         NIV_INDEX = 3
      END IF
   END IF

   ANT_INDEX = MAP_CTE_YES
   MAP_TOT_CIDX = TMP_INDEX
 IDX_LAB_FIN:
   MAP_VEC_TIDX(MAP_TOT_CMPO) = MAP_TOT_CIDX
   END DEF
900
 !====================== HELP ======================

   DEF INTEGER MAP_FNC_HLP
   TOKEN = NEXTTOKEN
   TOKEN = NEXTTOKEN
   MAP_GLS_HLP = STRTOKEN
   END DEF

 !====================== TEXT ======================
920
   DEF INTEGER MAP_FNC_TEX
   OVR_NUM_ADI = 1
   TOKEN = NEXTTOKEN
   TOKEN = NEXTTOKEN
   MAP_VEC_FICO(1,1) = NUMTOKEN

   PTX_FILN = STR$(NUMTOKEN)
   PTX_FILH = MAP_VEC_FILA_HEX(NUMTOKEN)
   PTX_TOT_ELM = PTX_TOT_ELM + 1
   PTX_DSP_ONL = "PTX_DSP_ONL = FALSE"
   PTX_ISFL = 'FALSE'
 !!! GUARDA FILA PARA ARCHIVO PREPTEX NUMERICO Y HEXA

   OVR_NUM_FIL = NUMTOKEN
   MAP_NUM_LINE = NUMTOKEN
   IF MAP_SWI_PFLD = MAP_CTE_NOT THEN
      MAP_SWI_PFLD = MAP_CTE_YES
 !!!      MAP_NUM_INFE = MAP_VEC_FICO(1,1)
   END IF
   MAP_GLS_FIL = STR$(MAP_VEC_FICO(1,1) - MAP_NUM_INFE + 1 )
   IF LEN(MAP_GLS_FIL) = 1 THEN
      MAP_GLS_FIL = "0" + MAP_GLS_FIL
   END IF
   TOKEN = NEXTTOKEN
   TOKEN = NEXTTOKEN

 !!! GUARDA COLUMNA PARA ARCHIVO PREPTEX NUMERICO Y HEXA
   PTX_COLN = STR$(NUMTOKEN)
   PTX_COLH = MAP_VEC_COLU_HEX(NUMTOKEN)


   MAP_VEC_FICO(1,2) = NUMTOKEN - 1

   OVR_NUM_COL = NUMTOKEN - 1
   MAP_NUM_COLU = NUMTOKEN
   BMS_NUM_COL = NUMTOKEN
   MAP_GLS_COL = POS_VEC_ZRS(LEN(STR$(MAP_VEC_FICO(1,2)))) +&
            STR$(MAP_VEC_FICO(1,2))
   TOKEN = NEXTTOKEN
   TOKEN = NEXTTOKEN
   MAP_NUM_TTEX = SZTOKEN
   MAP_GLS_DEF = STRTOKEN
   TOKEN = NEXTTOKEN
   IF VALTOKEN = "&" THEN
      TOKEN = NEXTTOKEN
      MAP_GLS_DEF = MAP_GLS_DEF + STRTOKEN 
      MAP_NUM_TTEX = MAP_NUM_TTEX + SZTOKEN
      TOKEN = NEXTTOKEN
   END IF
  SDF_GLS_DEF$ = '"' + MAP_GLS_DEF + '"'

   OVR_NUM_LEN = MAP_NUM_TTEX
   MAP_GLS_L11 = "         DFHMDF POS=(" + MAP_GLS_FIL + &
            "," + MAP_GLS_COL + "),ATTRB=(ASKIP"
   MAP_GLS_L13 = "),LENGTH=" + STR$(MAP_NUM_TTEX) + ","
   MAP_GLS_L31 = ""
   MAP_GLS_L21 = "               INITIAL='" 
   IF LEN(MAP_GLS_DEF) > 46 THEN
        MAP_GLS_L21 = MAP_GLS_L21 + LEFT$(MAP_GLS_DEF,47) + "X"
        MAP_GLS_L31 = "               " + RIGHT$(MAP_GLS_DEF,48) + "'"
   ELSE
        MAP_GLS_L21 = MAP_GLS_L21 + MAP_GLS_DEF + "'"
   END IF
   MAP_GLS_L12 = ",NORM"
   WHILE VALTOKEN <> ";"
      IF VALTOKEN = "BLINK" THEN
 !!!         MAP_NUM_INFE = 1
         MAP_SWI_PFLD = MAP_CTE_NOT
         GO TO TEX_LAB_FIN
      END IF
      TOKEN = NEXTTOKEN
   NEXT
 !!!   MAP_NUM_VSZ = MAP_NUM_TTEX + 1

 !!! DIVIDE GLOSAS PARA MANEJARLAS CON LARGO MAXIMO DE 40 CARACTERES
 !!! EN REGISTRO IMAGEN COBOL ( ASUME MAXIMO 2 OCURRENCIAS )
  IF LEN(MAP_GLS_DEF) > 40 THEN
      PTX_TEX1 = LEFT(MAP_GLS_DEF,40)
      PTX_TEX2 = RIGHT(MAP_GLS_DEF,41)
      PTX_SIZ1 = "40"
	PTX_LENV = PTX_LENV + 40
      PTX_SIZ2 = STR$(LEN(PTX_TEX2))
	PTX_LENV = PTX_LENV + LEN(PTX_TEX2)
  ELSE  
      PTX_TEX1 = MAP_GLS_DEF
      PTX_TEX2 = ""
      PTX_SIZ1 = STR$(LEN(MAP_GLS_DEF))
	PTX_LENV = PTX_LENV + LEN(MAP_GLS_DEF)
      PTX_SIZ2 = "0"
  END IF
 
 !!! DIVIDE GLOSAS PARA MANEJARLAS CON LARGO MAXIMO DE 64 CARACTERES
 !!! EN PANTALLA SDF ( ASUME MAXIMO 2 OCURRENCIAS )
  IF LEN(SDF_GLS_DEF$) > 72 THEN
      SDF_TEX1 = LEFT(SDF_GLS_DEF$,72)
      SDF_TEX2 = RIGHT(SDF_GLS_DEF$,73)
      SDF_SIZ1 = STR$(LEN(MAP_GLS_DEF))
      SDF_SIZ2 = "0"
  ELSE  
      SDF_TEX1 = SDF_GLS_DEF$
      SDF_TEX2 = ""
      SDF_SIZ1 = STR$(LEN(MAP_GLS_DEF))
      SDF_SIZ2 = "0"
  END IF
 
 !!! ++ Documentacion SECC G
 !!! ++ SECC G => Textos de acuerdo a orden fisico
 !!! ++ 
 !!! ++ SSEC 0 => Campos I/O de mapa TRL ( Finalizacion de SECC anterior ) +
 !!! ++           Header ('Panel ' + MAPUYS)
 !!! ++           Campos I/O de mapa HDR +
 !!! ++           textos y campos mapa HDR
 !!! ++ SSEC 1 => Textos de pantalla
 !!! ++ 
	WU_NUM_LINE = MAP_NUM_LINE
	WU_NUM_COLU = MAP_NUM_COLU

	UYS_ALF_SECC = 'G'
	IF PUT_HDR_SECC_G = "N" THEN
		PUT_HDR_SECC_G = "S"

		UYS_NUM_SSEC = 0
		MAP_GLS_TXT = MAP_FNC_WRWU('DisplayVariable SDF-TRL-COD-CACC')
		MAP_GLS_TXT = MAP_FNC_WRWU('(DefaultValue =                                                       <<')
		MAP_GLS_TXT = MAP_FNC_WRWU(MAPUYS + '.SDF-TRL-COD-CACC')
		MAP_GLS_TXT = MAP_FNC_WRWU('>>')
		MAP_GLS_TXT = MAP_FNC_WRWU(')')
		MAP_GLS_TXT = MAP_FNC_WRWU('')
		MAP_GLS_TXT = MAP_FNC_WRWU('')
		MAP_GLS_TXT = MAP_FNC_WRWU('Panel ' + MAPUYS)
		MAP_GLS_TXT = MAP_FNC_WRWU('(Specify = Help')
		MAP_GLS_TXT = MAP_FNC_WRWU(')')
		MAP_GLS_TXT = MAP_FNC_WRWU('')
		MAP_GLS_TXT = MAP_FNC_WRWU('Field SDF-HDR-COD-TRCD')
		MAP_GLS_TXT = MAP_FNC_WRWU('(Row =      1')
		MAP_GLS_TXT = MAP_FNC_WRWU(',Column =      2')
		MAP_GLS_TXT = MAP_FNC_WRWU(',Length =      4')
		MAP_GLS_TXT = MAP_FNC_WRWU(',Specify = Help')
		MAP_GLS_TXT = MAP_FNC_WRWU(',DisplayVariable = SDF-HDR-COD-TRCD')
		MAP_GLS_TXT = MAP_FNC_WRWU(',MessageKeyField = TRUE')
		MAP_GLS_TXT = MAP_FNC_WRWU(',ProtectedXmit =                                                      <<')
		MAP_GLS_TXT = MAP_FNC_WRWU('TRUE')
		MAP_GLS_TXT = MAP_FNC_WRWU('>>')
		MAP_GLS_TXT = MAP_FNC_WRWU(')')
		MAP_GLS_TXT = MAP_FNC_WRWU('')
		MAP_GLS_TXT = MAP_FNC_WRWU('Prompt #DisplayElement00001')
		MAP_GLS_TXT = MAP_FNC_WRWU('(Row =      1')
		MAP_GLS_TXT = MAP_FNC_WRWU(',Column =      8')
		MAP_GLS_TXT = MAP_FNC_WRWU(',Length =      6')
		MAP_GLS_TXT = MAP_FNC_WRWU(',Specify = Help')
		MAP_GLS_TXT = MAP_FNC_WRWU(',Value =                                                              <<')
		MAP_GLS_TXT = MAP_FNC_WRWU('"Accion"')
		MAP_GLS_TXT = MAP_FNC_WRWU('>>')
		MAP_GLS_TXT = MAP_FNC_WRWU(')')
		MAP_GLS_TXT = MAP_FNC_WRWU('')
		MAP_GLS_TXT = MAP_FNC_WRWU('Field SDF-HDR-COD-CACC')
		MAP_GLS_TXT = MAP_FNC_WRWU('(Row =      1')
		MAP_GLS_TXT = MAP_FNC_WRWU(',Column =     16')
		MAP_GLS_TXT = MAP_FNC_WRWU(',Length =      5')
		MAP_GLS_TXT = MAP_FNC_WRWU(',Specify = Help')
		MAP_GLS_TXT = MAP_FNC_WRWU(',DisplayVariable = SDF-HDR-COD-CACC')
		MAP_GLS_TXT = MAP_FNC_WRWU(')')
		MAP_GLS_TXT = MAP_FNC_WRWU('')
		MAP_GLS_TXT = MAP_FNC_WRWU('Prompt SDO-HDR-COD-FUNC')
		MAP_GLS_TXT = MAP_FNC_WRWU('(Row =      1')
		MAP_GLS_TXT = MAP_FNC_WRWU(',Column =     30')
		MAP_GLS_TXT = MAP_FNC_WRWU(',Length =     11')
		MAP_GLS_TXT = MAP_FNC_WRWU(',Specify = Help')
		MAP_GLS_TXT = MAP_FNC_WRWU(',Value =                                                              <<')
		MAP_GLS_TXT = MAP_FNC_WRWU(MAPUYS + '.SDF-HDR-COD-FUNC')
		MAP_GLS_TXT = MAP_FNC_WRWU('>>')
		MAP_GLS_TXT = MAP_FNC_WRWU(')')
		MAP_GLS_TXT = MAP_FNC_WRWU('')
		MAP_GLS_TXT = MAP_FNC_WRWU('Prompt SDO-HDR-GLS-GLS1')
		MAP_GLS_TXT = MAP_FNC_WRWU('(Row =      1')
		MAP_GLS_TXT = MAP_FNC_WRWU(',Column =     70')
		MAP_GLS_TXT = MAP_FNC_WRWU(',Length =      3')
		MAP_GLS_TXT = MAP_FNC_WRWU(',Specify = Help')
		MAP_GLS_TXT = MAP_FNC_WRWU(',Value =                                                              <<')
		MAP_GLS_TXT = MAP_FNC_WRWU(MAPUYS + '.SDF-HDR-GLS-GLS1')
		MAP_GLS_TXT = MAP_FNC_WRWU('>>')
		MAP_GLS_TXT = MAP_FNC_WRWU(')')
		MAP_GLS_TXT = MAP_FNC_WRWU('')
		MAP_GLS_TXT = MAP_FNC_WRWU('Prompt SDO-HDR-GLS-GLS2')
		MAP_GLS_TXT = MAP_FNC_WRWU('(Row =      1')
		MAP_GLS_TXT = MAP_FNC_WRWU(',Column =     74')
		MAP_GLS_TXT = MAP_FNC_WRWU(',Length =      3')
		MAP_GLS_TXT = MAP_FNC_WRWU(',Specify = Help')
		MAP_GLS_TXT = MAP_FNC_WRWU(',Value =                                                              <<')
		MAP_GLS_TXT = MAP_FNC_WRWU(MAPUYS + '.SDF-HDR-GLS-GLS2')
		MAP_GLS_TXT = MAP_FNC_WRWU('>>')
		MAP_GLS_TXT = MAP_FNC_WRWU(')')
		MAP_GLS_TXT = MAP_FNC_WRWU('')
		MAP_GLS_TXT = MAP_FNC_WRWU('Prompt SDO-HDR-GLS-GLS3')
		MAP_GLS_TXT = MAP_FNC_WRWU('(Row =      1')
		MAP_GLS_TXT = MAP_FNC_WRWU(',Column =     78')
		MAP_GLS_TXT = MAP_FNC_WRWU(',Length =      3')
		MAP_GLS_TXT = MAP_FNC_WRWU(',Specify = Help')
		MAP_GLS_TXT = MAP_FNC_WRWU(',Value =                                                              <<')
		MAP_GLS_TXT = MAP_FNC_WRWU(MAPUYS + '.SDF-HDR-GLS-GLS3')
		MAP_GLS_TXT = MAP_FNC_WRWU('>>')
		MAP_GLS_TXT = MAP_FNC_WRWU(')')
		MAP_GLS_TXT = MAP_FNC_WRWU('')
		MAP_GLS_TXT = MAP_FNC_WRWU('Prompt SDO-HDR-COD-SIST')
		MAP_GLS_TXT = MAP_FNC_WRWU('(Row =      2')
		MAP_GLS_TXT = MAP_FNC_WRWU(',Column =      2')
		MAP_GLS_TXT = MAP_FNC_WRWU(',Length =      3')
		MAP_GLS_TXT = MAP_FNC_WRWU(',Specify = Help')
		MAP_GLS_TXT = MAP_FNC_WRWU(',Value =                                                              <<')
		MAP_GLS_TXT = MAP_FNC_WRWU(MAPUYS + '.SDF-HDR-COD-SIST')
		MAP_GLS_TXT = MAP_FNC_WRWU('>>')
		MAP_GLS_TXT = MAP_FNC_WRWU(')')
		MAP_GLS_TXT = MAP_FNC_WRWU('')
		MAP_GLS_TXT = MAP_FNC_WRWU('Prompt SDO-HDR-GLS-NFRM')
		MAP_GLS_TXT = MAP_FNC_WRWU('(Row =      2')
		MAP_GLS_TXT = MAP_FNC_WRWU(',Column =      6')
		MAP_GLS_TXT = MAP_FNC_WRWU(',Length =      3')
		MAP_GLS_TXT = MAP_FNC_WRWU(',Specify = Help')
		MAP_GLS_TXT = MAP_FNC_WRWU(',Value =                                                              <<')
		MAP_GLS_TXT = MAP_FNC_WRWU(MAPUYS + '.SDF-HDR-GLS-NFRM')
		MAP_GLS_TXT = MAP_FNC_WRWU('>>')
		MAP_GLS_TXT = MAP_FNC_WRWU(')')
		MAP_GLS_TXT = MAP_FNC_WRWU('')
		MAP_GLS_TXT = MAP_FNC_WRWU('Prompt SDO-HDR-GLS-FPRO')
		MAP_GLS_TXT = MAP_FNC_WRWU('(Row =      2')
		MAP_GLS_TXT = MAP_FNC_WRWU(',Column =     10')
		MAP_GLS_TXT = MAP_FNC_WRWU(',Length =     60')
		MAP_GLS_TXT = MAP_FNC_WRWU(',Specify = Help')
		MAP_GLS_TXT = MAP_FNC_WRWU(',Value =                                                              <<')
		MAP_GLS_TXT = MAP_FNC_WRWU(MAPUYS + '.SDF-HDR-GLS-FPRO')
		MAP_GLS_TXT = MAP_FNC_WRWU('>>')
		MAP_GLS_TXT = MAP_FNC_WRWU(')')
		MAP_GLS_TXT = MAP_FNC_WRWU('')
		MAP_GLS_TXT = MAP_FNC_WRWU('Prompt SDO-HDR-FEC-DMSA')
		MAP_GLS_TXT = MAP_FNC_WRWU('(Row =      2')
		MAP_GLS_TXT = MAP_FNC_WRWU(',Column =     71')
		MAP_GLS_TXT = MAP_FNC_WRWU(',Length =     10')
		MAP_GLS_TXT = MAP_FNC_WRWU(',Specify = Help')
		MAP_GLS_TXT = MAP_FNC_WRWU(',Value =                                                              <<')
		MAP_GLS_TXT = MAP_FNC_WRWU(MAPUYS + '.SDF-HDR-FEC-DMSA')
		MAP_GLS_TXT = MAP_FNC_WRWU('>>')
		MAP_GLS_TXT = MAP_FNC_WRWU(')')
		MAP_GLS_TXT = MAP_FNC_WRWU('')
	END IF
	UYS_NUM_SSEC = 1

	IF LEN(MAP_GLS_DEF) > 99 THEN
		SEP_SDF_LEN$ = '    '
	ELSE
	IF LEN(MAP_GLS_DEF) > 9 THEN
		SEP_SDF_LEN$ = '     '
	ELSE
		SEP_SDF_LEN$ = '      '
	END IF
	END IF

	IF INTEGER(PTX_FILN) > 99 THEN
		SEP_SDF_ROW$ = '    '
	ELSE
	IF INTEGER(PTX_FILN) > 9 THEN
		SEP_SDF_ROW$ = '     '
	ELSE
		SEP_SDF_ROW$ = '      '
	END IF
	END IF

	IF INTEGER(PTX_COLN) > 99 THEN
		SEP_SDF_COL$ = '    '
	ELSE
	IF INTEGER(PTX_COLN) > 9 THEN
		SEP_SDF_COL$ = '     '
	ELSE
		SEP_SDF_COL$ = '      '
	END IF
	END IF

	DISPLAY_ELEMENT = DISPLAY_ELEMENT + 1
	DISPLAY_ELEMENT_ALF = POS_VEC_ZER_SDF(LEN(STR$(DISPLAY_ELEMENT))) +&
				STR$(DISPLAY_ELEMENT)

	MAP_GLS_TXT = MAP_FNC_WRWU('Prompt #DisplayElement' + DISPLAY_ELEMENT_ALF )
	MAP_GLS_TXT = MAP_FNC_WRWU('(Row ='    + SEP_SDF_ROW$ + PTX_FILN )
	MAP_GLS_TXT = MAP_FNC_WRWU(',Column =' + SEP_SDF_COL$ + PTX_COLN )
	MAP_GLS_TXT = MAP_FNC_WRWU(',Length =' + SEP_SDF_LEN$  + SDF_SIZ1 )
	MAP_GLS_TXT = MAP_FNC_WRWU(',Specify = Help')
	MAP_GLS_TXT = MAP_FNC_WRWU(',Value =                                                              <<')
	MAP_GLS_TXT = MAP_FNC_WRWU(SDF_TEX1)
	IF SDF_TEX2 > "" THEN
		MAP_GLS_TXT = MAP_FNC_WRWU(SDF_TEX2)
	END IF
	MAP_GLS_TXT = MAP_FNC_WRWU('>>')
	MAP_GLS_TXT = MAP_FNC_WRWU(')')
	MAP_GLS_TXT = MAP_FNC_WRWU('')

 !!! FIN ARCHIVO SDF

	MAP_GLS_TXT = MAP_FNC_WRWF(V_ANSI(MG_C) + "*")
	MAP_GLS_TXT = MAP_FNC_WRWF(V_ANSI(MG_C) + "* Texto en Fila " + PTX_FILN + " / Columna " + PTX_COLN)
	MAP_GLS_TXT = MAP_FNC_WRWF(V_ANSI(MG_B) + "05 FILLER                        PIC X(04)" +&
				                 " VALUE @277F" + PTX_COLH + PTX_FILH + "@.")
	PTX_LENV = PTX_LENV + 4
	IF LEN(PTX_SIZ1) = 1 THEN
		PTX_SIZ1 = "0" + PTX_SIZ1
	END IF
	IF LEN(PTX_SIZ2) = 1 THEN
		PTX_SIZ2 = "0" + PTX_SIZ2
	END IF
	MAP_GLS_TXT = MAP_FNC_WRWF(V_ANSI(MG_B) + "05 FILLER                        PIC X(" + PTX_SIZ1 + ")" )
	MAP_GLS_TXT = MAP_FNC_WRWF(V_ANSI(MG_B) + "    VALUE " + '"' + PTX_TEX1 + '".' )
	IF PTX_TEX2 > "" THEN
		MAP_GLS_TXT = MAP_FNC_WRWF(V_ANSI(MG_B) + "05 FILLER                        PIC X(" + PTX_SIZ2 + ")" )
		MAP_GLS_TXT = MAP_FNC_WRWF(V_ANSI(MG_B) + "    VALUE " + '"' + PTX_TEX2 + '".' )
	END IF



 !!! FLB cuenta campos y guarda un arreglo para ver cuantos textos
 !!!    hay antes de un campo, y sumar los byte attrb correspondientes
   KYH_TOT_TXT = KYH_TOT_TXT +1
   KYH_POS_TXT( KYH_TOT_TXT ) = (MAP_NUM_LINE - 1 )*80 + MAP_NUM_COLU
 
   MAP_NUM_FNC = MAP_FNC_VAL
930
   MAP_GLS_WRIT = MAP_GLS_L11 + MAP_GLS_L12 + MAP_GLS_L13
   CALL MAP_RUT_SPA(MAP_GLS_WRIT,71)
   MAP_GLS_WRIT = MAP_GLS_WRIT + "X"
   MAP_GLS_WRIT = MAP_FNC_WBMS(MAP_GLS_WRIT)
   MAP_GLS_L21 = MAP_FNC_WBMS(MAP_GLS_L21)
   IF MAP_GLS_L31 <> "" THEN
      MAP_GLS_L31 = MAP_FNC_WBMS(MAP_GLS_L31)
   END IF
   MAP_NUM_FNC = MAP_FNC_OVR
 TEX_LAB_FIN:
   END DEF


 !====ASIGNACION CORRELATIVOS PARA NOMBRES REPETIDOS  ===========

   DEF INTEGER MAP_FNC_NOMB
     FOR I% = 1 TO MAP_TOT_NOMB
       IF MAP_VEC_REPE(I%) = MAP_GLS_NOMB THEN
            MAP_TOT_REPE = MAP_TOT_REPE + 1
            MAP_GLS_NOMB =&
       LEFT$(MAP_GLS_NOMB,LEN(MAP_GLS_NOMB) - LEN(STR$(MAP_TOT_REPE))) +&
                           STR$(MAP_TOT_REPE)
       END IF
     NEXT I%
     MAP_TOT_NOMB = MAP_TOT_NOMB + 1
     MAP_VEC_REPE(MAP_TOT_NOMB) = MAP_GLS_NOMB
   END DEF
 !====================== BMS ======================================

   DEF INTEGER MAP_FNC_BMS
	MAP_NUM_FNC = MAP_FNC_PRMF_A
 !!! Display only ==> intensidad normal
 !!!JSS 15-SEP-1989 IF MAP_GLS_DARK <> "DRK" AND&
	IF MAP_GLS_DARK = "DRK,FSET" THEN
		MAP_GLS_BMS = MAP_FNC_WBMS('% DARK = TRUE')
	ELSE
		MAP_GLS_BMS = MAP_FNC_WBMS('% DARK = FALSE')
	END IF
	IF MAP_VEC_DSPL(MAP_IND_CMPO) = MAP_CTE_NOT THEN
		MAP_GLS_BMS = MAP_FNC_WBMS("% DISP = FALSE")
	ELSE
		MAP_GLS_BMS = MAP_FNC_WBMS("% DISP = TRUE")
	END IF
 !!!JSS-INI 11-APR-1995 19:23:13 
	MAP_GLS_BMS = MAP_FNC_WBMS("% CAMPO = TRUE")
 !!!JSS-FIN 11-APR-1995 19:23:13 
	IF LEN(MAP_GLS_FIL) < 2 THEN
            MAP_GLS_FIL = "0" + MAP_GLS_FIL
	END IF

 !!!JSS-INI 13-APR-1995 16:29:10
        IF MAP_COD_AIU = "BMS" THEN
	    MAP_GLS_BMS = MAP_FNC_WBMS("% FILA = " + '"' + MAP_GLS_FIL + '"' )
        ELSE
	    MAP_GLS_BMS = MAP_FNC_WBMS("% FILA = " + NUM1$(INTEGER(MAP_GLS_FIL) + MAP_NUM_INFE - 1) + '"')
        END IF
 !!!JSS-FIN 13-APR-1995 16:29:10 

	IF MAP_SWI_IDC = MAP_CTE_YES THEN
		COLU$ = STR$(MAP_VEC_FICO(1,2)-18) 
	ELSE
		COLU$ = MAP_GLS_COL
	END IF
	IF LEN(COLU$) < 2 THEN
	    COLU$ = "0" + COLU$
	END IF
	MAP_GLS_BMS = MAP_FNC_WBMS("% COLU = " + COLU$ )
 !!!	IF MAP_SWI_IDC = MAP_CTE_YES THEN
 !!!		MAP_GLS_BMS = MAP_FNC_WBMS("% TIPO_IDC = TRUE ")
 !!!		MAP_GLS_BMS = MAP_FNC_WBMS("% TIPO_VRF = FALSE")
 !!!		MAP_GLS_BMS = MAP_FNC_WBMS("% TIPO_FEC = FALSE")
 !!!	ELSE
 !!!	IF MAP_SWI_VRF = MAP_CTE_YES THEN
 !!!		MAP_GLS_BMS = MAP_FNC_WBMS("% TIPO_VRF = TRUE")
 !!!		MAP_GLS_BMS = MAP_FNC_WBMS("% TIPO_IDC = FALSE")
 !!!		MAP_GLS_BMS = MAP_FNC_WBMS("% TIPO_FEC = FALSE")
 !!!	ELSE
 !!!	IF MAP_SWI_FEC <> MAP_CTE_NOT THEN
 !!!		MAP_GLS_BMS = MAP_FNC_WBMS("% TIPO_FEC = TRUE")
 !!!		MAP_GLS_BMS = MAP_FNC_WBMS("% TIPO_VRF = FALSE")
 !!!		MAP_GLS_BMS = MAP_FNC_WBMS("% TIPO_IDC = FALSE")
 !!!	END IF
 !!!	END IF
 !!!	END IF
	IF MAP_VEC_TFLD(MAP_IND_CMPO) = MAP_IND_IKY OR&
	   MAP_VEC_TFLD(MAP_IND_CMPO) = MAP_IND_AKY OR&
	   MAP_VEC_TFLD(MAP_IND_CMPO) = MAP_IND_MKY THEN
		MAP_GLS_BMS = MAP_FNC_WBMS("% KEY = TRUE")
	ELSE
		MAP_GLS_BMS = MAP_FNC_WBMS("% KEY = FALSE")
	END IF

 !!!   IF MAP_GLS_DARK <> "DRK,FSET" AND&
 !!!      MAP_VEC_DSPL(MAP_IND_CMPO) = MAP_CTE_YES THEN
 !!!         MAP_GLS_DARK = "BRT"
 !!!JSS 15-SEP-1989
 !!!         IF MAP_VEC_TIPO(MAP_IND_CMPO) <> "GLS" THEN
 !!!              MAP_GLS_DARK = "BRT,FSET"
 !!!         END IF
 !!!
 !!!   END IF
   BMS_NUM_LMAP = BMS_NUM_PIC + 3
 !!! Delim_izq ( MAP_GLS_DLI es < o {   ,      Columna - 2 )
   BMS_NUM_DPZ = -2
 !!!   IF MAP_VEC_DSPL(MAP_IND_CMPO) = MAP_CTE_NOT AND&
 !!!      MAP_IND_OVER = MAP_CTE_NOT THEN
 !!!         MAP_NUM_FNC = R_POS
 !!!         MAP_GLS_BMS = "         DFHMDF " + MAP_GLS_POS +&
 !!!                       ",ATTRB=(ASKIP,NORM),LENGTH=1," + MAP_GLS_DLI
 !!!         MAP_GLS_BMS = MAP_FNC_WBMS(MAP_GLS_BMS)
 !!!   END IF
   BMS_NUM_DPZ = MAP_NUM_NCI
 !!!      Campo Prefijo ( Ej: IDC )
   IF MAP_SWI_IDC = MAP_CTE_YES THEN
 !!!         BMS_NUM_LMAP = BMS_NUM_
         BMS_NUM_DPZ  = 0
 !!!         MAP_GLS_NOMB = MAP_VEC_TIPO(MAP_IND_CMPO) + MAP_VEC_NOMB(MAP_IND_CMPO)
         MAP_GLS_NOMB = AUX_TIPNRTN$ + MAP_VEC_NOMB(MAP_IND_CMPO)
         CALL GENRPTREP(MAP_GLS_NOMB,"-","")
         MAP_GLS_NOMB = LEFT$(MAP_GLS_NOMB,7)
         MAP_NUM_FNC = MAP_FNC_NOMB
         CALL MAP_RUT_SPA(MAP_GLS_NOMB,9)
         MAP_GLS_NOMB  = MAP_GLS_NOMB + "DFHMDF "
         MAP_NUM_FNC  = R_POS
         IF MAP_VEC_TFLD(MAP_TOT_CMPO) = MAP_IND_IKY OR&
            MAP_VEC_TFLD(MAP_TOT_CMPO) = MAP_IND_AKY OR&
            MAP_VEC_TFLD(MAP_TOT_CMPO) = MAP_IND_MKY THEN
              MAP_AUX_IDC$ = ",ATTRB=(ASKIP," + MAP_GLS_DARK + ",FSET),LENGTH=1"
         ELSE
            MAP_AUX_IDC$ = ",ATTRB=(ASKIP," + MAP_GLS_DARK + "),LENGTH=1"
         END IF
 !!!
         MAP_AUX_IDC$ = MAP_GLS_NOMB + MAP_GLS_POS + MAP_AUX_IDC$
 !!!         MAP_AUX_IDC$ = MAP_FNC_WBMS(MAP_AUX_IDC$)
         BMS_NUM_DPZ  = 2
         MAP_NUM_FNC  = R_POS
         MAP_AUX_IDC$ = ",ATTRB=(PROT,BRT),LENGTH=1,INITIAL='-'"
         MAP_AUX_IDC$ = "         DFHMDF " + MAP_GLS_POS + MAP_AUX_IDC$
 !!!         MAP_AUX_IDC$ = MAP_FNC_WBMS(MAP_AUX_IDC$)
 !!!     BMS_NUM_PIC  = MAP_NUM_PICT - 1
         BMS_NUM_DPZ  = 4
   END IF

 !!! Nombre del campo
   IF MAP_SWI_IDC = MAP_CTE_YES THEN
      MAP_GLS_NOMB = AUX_TIPNRTN$ + MAP_VEC_NOMB(MAP_IND_CMPO)
   ELSE
      MAP_GLS_NOMB = AUX_TIPNRTN$ + MAP_VEC_NOMB(MAP_IND_CMPO)
   END IF
   CALL GENRPTREP(MAP_GLS_NOMB,"-","")
   MAP_GLS_NOMB = LEFT$(MAP_GLS_NOMB,7)
   MAP_NUM_FNC = MAP_FNC_NOMB
   CALL MAP_RUT_SPA(MAP_GLS_NOMB,9)
   MAP_GLS_BMS = MAP_GLS_NOMB + "DFHMDF "

 !!! Atributos del campo
   MAP_NUM_FNC = R_POS
   MAP_GLS_BMS = MAP_GLS_BMS + MAP_GLS_POS + ",ATTRB=(ASKIP,"
 !!!JSS 14-SEP-1989 MAP_GLS_BMS = MAP_GLS_BMS + MAP_GLS_DARK + ",FSET),"
   MAP_GLS_BMS = MAP_GLS_BMS + MAP_GLS_DARK
 !!!

 !!!ISP  2-NOV-1989 09:00:37 

   IF MAP_VEC_NUME(MAP_TOT_CMPO) = MAP_CTE_YES OR&
      MAP_VEC_TFLD(MAP_TOT_CMPO) = MAP_IND_IKY OR&
      MAP_VEC_TFLD(MAP_TOT_CMPO) = MAP_IND_AKY OR&
      MAP_VEC_TFLD(MAP_TOT_CMPO) = MAP_IND_MKY THEN
       MAP_GLS_BMS = MAP_GLS_BMS + ",FSET"
   END IF
   MAP_GLS_BMS = MAP_GLS_BMS + "),"

	PTX_LENV = PTX_LENV + BMS_NUM_PIC
	IF MAP_VEC_CGEN_SDF(MAP_TOT_CMPO) = MAP_CTE_YES THEN
		IF MAP_SWI_VRF = MAP_CTE_YES THEN
			IF MAP_VEC_DSPL_SDF(MAP_IND_CMPO) = MAP_CTE_NOT THEN
				PTX_LENV = PTX_LENV + 10
			ELSE
				PTX_LENV = PTX_LENV + 6
			END IF
		ELSE
		IF MAP_SWI_IDC = MAP_CTE_YES THEN
			IF MAP_VEC_DSPL_SDF(MAP_IND_CMPO) = MAP_CTE_NOT THEN
				PTX_LENV = PTX_LENV + 9 + 4
			ELSE
				PTX_LENV = PTX_LENV + 5 + 4
			END IF
		END IF
		END IF
	END IF
   MAP_GLS_BMS = MAP_GLS_BMS + "LENGTH=" + STR$(BMS_NUM_PIC)
	IF MAP_VEC_DSPL_SDF(MAP_IND_CMPO) = MAP_CTE_NOT THEN
		PTX_LRCV = PTX_LRCV + BMS_NUM_PIC
		IF MAP_SWI_VRF = MAP_CTE_YES THEN
			PTX_LRCV = PTX_LRCV + 1
		ELSE
		IF MAP_SWI_IDC = MAP_CTE_YES THEN
			PTX_LRCV = PTX_LRCV + 3
		END IF
		END IF
	END IF
	MAP_GLS_BMS = MAP_FNC_WBMS("% LARG = " + STR$(BMS_NUM_PIC) )
	MAP_GLS_BMS = MAP_FNC_WBMS(IPTMA$ + "001" + TPTX$)

 !!!   MAP_GLS_BMS = MAP_FNC_WBMS(MAP_GLS_BMS)

 !!! Campo Stopper
   MAP_VEC_TAB(MAP_IND_CMPO) = ",ATTRB=(PROT),LENGTH=1," + MAP_GLS_DLD

 !!!      Campo Sufijo ( Ej: VRF )
   IF MAP_SWI_VRF = MAP_CTE_YES THEN
        BMS_NUM_DPZ  = BMS_NUM_PIC + 1
        MAP_NUM_FNC  =  R_POS
        MAP_AUX_VRF$ = "         DFHMDF " + MAP_GLS_POS
        MAP_AUX_VRF$ = MAP_AUX_VRF$ +&
              ",ATTRB=(PROT,BRT),LENGTH=1,INITIAL='-'"
 !!!        MAP_AUX_VRF$ = MAP_FNC_WBMS(MAP_AUX_VRF$)
        BMS_NUM_DPZ  = BMS_NUM_PIC + 1 + 2
 !!!      MAP_GLS_NOMB = MAP_VEC_TIPO(MAP_IND_CMPO + 1) + MAP_VEC_NOMB(MAP_IND_CMPO)
 !!!      MAP_GLS_NOMB = AUX_TIPNRTN$ + MAP_VEC_NOMB(MAP_IND_CMPO)
        CALL GENRPTREP(MAP_GLS_NOMB,"-","")
        MAP_GLS_NOMB = LEFT$(MAP_GLS_NOMB,7)
        MAP_NUM_FNC = MAP_FNC_NOMB
        CALL MAP_RUT_SPA(MAP_GLS_NOMB,9)
        MAP_GLS_NOMB  = MAP_GLS_NOMB + "DFHMDF "
        MAP_NUM_FNC  = R_POS
        MAP_AUX_VRF$ = MAP_GLS_NOMB + MAP_GLS_POS
        IF MAP_VEC_TFLD(MAP_TOT_CMPO) = MAP_IND_IKY OR&
           MAP_VEC_TFLD(MAP_TOT_CMPO) = MAP_IND_AKY OR&
           MAP_VEC_TFLD(MAP_TOT_CMPO) = MAP_IND_MKY THEN
              MAP_AUX_VRF$ = MAP_AUX_VRF$ + ",ATTRB=(ASKIP," + MAP_GLS_DARK +&
				",FSET),LENGTH=1"
        ELSE
              MAP_AUX_VRF$ = MAP_AUX_VRF$ + ",ATTRB=(ASKIP," + MAP_GLS_DARK +&
				"),LENGTH=1"
        END IF
     
 !!!
 !!!      MAP_AUX_VRF$ = MAP_FNC_WBMS(MAP_AUX_VRF$)
      BMS_NUM_DPZ  = BMS_NUM_PIC + 2 + 2 + 1
   ELSE
      BMS_NUM_DPZ  = BMS_NUM_PIC + MAP_NUM_NCI + 1
      IF MAP_SWI_IDC = MAP_CTE_YES THEN
          BMS_NUM_DPZ = BMS_NUM_DPZ + 2
      END IF
   END IF

  IF MAP_VEC_DSPL(MAP_IND_CMPO) = MAP_CTE_NOT AND&
      MAP_IND_OVER = MAP_CTE_NOT THEN
      MAP_NUM_FNC = R_POS
      MAP_GLS_BMS = "         DFHMDF "
      MAP_GLS_BMS = MAP_GLS_BMS + MAP_GLS_POS +&
         MAP_VEC_TAB(MAP_IND_CMPO)
 !!!      MAP_GLS_BMS = MAP_FNC_WBMS(MAP_GLS_BMS)
   END IF

   END DEF

 !====================== FIELD ======================
940
   DEF INTEGER MAP_FNC_FLD

   PTX_TOT_ELM = PTX_TOT_ELM + 1
   PTX_DSP_ONL = "PTX_DSP_ONL = FALSE"
   PTX_ISFL = 'TRUE'


   MAP_NUM_CORR = 0
   OVR_NUM_ADI = 5
   MAP_GLS_HLP = ""
   MAP_SWI_FEC = MAP_CTE_NOT
   MAP_SWI_GLOS = MAP_CTE_NOT
   MAP_GLS_DARK = "NORM"
   MAP_SWI_IDC = MAP_CTE_NOT
   MAP_SWI_VRF = MAP_CTE_NOT
   MAP_SWI_CFRM = MAP_CTE_NOT
   ACT_INDEX = MAP_CTE_NOT

   MAP_NUM_ASC = MAP_NUM_BAS
   MAP_NUM_BAS = MAP_NUM_BAS + 1
   TOKEN = NEXTTOKEN
   IF VALTOKEN <> "NAME" THEN
      GO TO FLD_LAB_FLD
   END IF
   TOKEN = NEXTTOKEN
   TOKEN = NEXTTOKEN
   MAP_GLS_CMP = STRTOKEN
   MAP_NUM_FNC = MAP_FNC_UND

   TOKEN = NEXTTOKEN
   TOKEN = NEXTTOKEN
   MAP_VEC_FICO(1,1) = NUMTOKEN

   OVR_NUM_FIL = NUMTOKEN
   IF MAP_SWI_PFLD = MAP_CTE_NOT THEN
      MAP_SWI_PFLD = MAP_CTE_YES
 !!!      MAP_NUM_INFE = MAP_VEC_FICO(1,1)
   END IF

   TOKEN = NEXTTOKEN
   TOKEN = NEXTTOKEN
   PTX_COLN9 = NUMTOKEN
   MAP_VEC_FICO(1,2) = NUMTOKEN - 1
   OVR_NUM_COL = NUMTOKEN - 3
   
   TOKEN = NEXTTOKEN
   TOKEN = NEXTTOKEN
950
   IF VALTOKEN = 'PICTURE' THEN
 !      IF MAP_SWI_VRF = MAP_CTE_YES THEN
 !         TOKEN = NEXTTOKEN
 !         TOKEN = NEXTTOKEN
 !         MAP_NUM_PICT = LEN(STRTOKEN) - 1
 !         TOKEN = NEXTTOKEN
 !      ELSE
           MAP_NUM_FNC = MAP_FNC_PIC
 !!! FLB  Largo del campo para KYH 
           KYH_NUM_PIC = MAP_NUM_PICT
 !      END IF
 !!!      END IF
    END IF

      PTX_TEX1 = MAP_GLS_PIC
      PTX_TEX2 = ''
      PTX_SIZ2 = ''


   IF VALTOKEN = 'INDEX' THEN
      TOKEN = NEXTTOKEN
	MAP_TOT_FIDX = MAP_TOT_FIDX + 1
	MAP_VEC_NIDX(MAP_TOT_FIDX) = MAP_VEC_FRTN(MAP_TOT_CMPO)
      MAP_NUM_FNC = MAP_FNC_IDX
 !!! FLB KYH
      VAX_COLU = MAP_VEC_FICO(TMP_INDEX,2) + 1
   ELSE
      MAP_TOT_CIDX = 1
 !!! FLB KYH
      VAX_COLU = MAP_VEC_FICO(1,2) + 1
   END IF
   IF VALTOKEN = 'HELP' THEN
      MAP_NUM_FNC = MAP_FNC_HLP
   END IF
960
 !!! FLB Se suma Delm_izq + attrb_byte del campo
   MAP_NUM_CXFL = MAP_NUM_CXFL + 2
   WHILE VALTOKEN <> ";"
      IF VALTOKEN = "NOECHO" THEN
 !!!JSS 15-SEP-1989 MAP_GLS_DARK = "DRK"
	 MAP_GLS_DARK = "DRK,FSET"
 !!!
         MAP_VEC_BYA(MAP_IND_CMPO) = 3
         IF MAP_SWI_VRF = MAP_CTE_YES THEN
            MAP_VEC_BYA(MAP_TOT_CMPO+1) = 3
         END IF
      ELSE
      IF VALTOKEN = "DISPLAY_ONLY" THEN
         PTX_DSP_ONL = "% PTX_DSP_ONL = TRUE"
         MAP_VEC_DSPL(MAP_IND_CMPO) = MAP_CTE_YES
	IF MAP_SWI_CFRM = MAP_CTE_YES THEN
         	MAP_VEC_DSPL_SDF(MAP_IND_CMPO) = MAP_CTE_YES
	END IF
         MAP_VEC_PROT(MAP_IND_CMPO) = MAP_CTE_NOT
         OVR_NUM_ADI = OVR_NUM_ADI - 4
         OVR_NUM_COL = OVR_NUM_COL + 2
 !!! FLB Se resta Delm_izq de suma Char por campo para KYM
         MAP_NUM_CXFL = MAP_NUM_CXFL - 1
      ELSE
      IF VALTOKEN = "AUTOTAB" THEN
         MAP_VEC_TAB(MAP_IND_CMPO) =&
            ",ATTRB=(PROT,ASKIP),LENGTH=1,"
      ELSE
      IF VALTOKEN = "RESPONSE_REQUIRED" THEN
         MAP_VEC_OBLI(MAP_IND_CMPO) = "N"

      END IF
      END IF
      END IF
      END IF
      TOKEN = NEXTTOKEN
   NEXT
 !!! GUARDA COLUMNA PARA ARCHIVO PREPTEX NUMERICO Y HEXA
 !!!	IF MAP_SWI_IDC = MAP_CTE_YES THEN
 !!!		IF MAP_VEC_DSPL(MAP_IND_CMPO) = MAP_CTE_YES THEN
 !!!			PTX_COLH = MAP_VEC_COLU_HEX(PTX_COLN9 - ( 7 + ( MAP_NUM_PIC ) ) )
 !!!		ELSE
 !!!			PTX_COLH = MAP_VEC_COLU_HEX(PTX_COLN9 - ( 7 + ( MAP_NUM_PIC ) + 1 ) )
 !!!		END IF
 !!!	ELSE
 !!!	END IF

 !!! FLB  Traslado esto para procesar KYH antes de expansion campos adicion
   MAP_NUM_LINE = MAP_VEC_FICO(1,1)
   MAP_NUM_LINE_FRM = MAP_VEC_FICO(1,1)
   MAP_NUM_COLU = MAP_VEC_FICO(1,2)
   MAP_NUM_COLU_FRM = MAP_VEC_FICO(1,2)

 !!! FLB  Esto lo hago duplicando a ISP, para KYH
   KYM_NUM_PIC = MAP_NUM_PICT
   IF MAP_SWI_VRF = MAP_CTE_YES THEN
      KYH_NUM_PIC = MAP_NUM_PICT - 1
   END IF

 !!! FLB se inicia todo el proceso KYH
   MAP_NUM_FNC = MAP_GEN_KYH
   IF MAP_COD_PAI = "PER" AND &
      MAP_SWI_VRF = MAP_CTE_YES THEN
	   MAP_VEC_PAI(MAP_TOT_CMPO) = "PER"
   END IF

	IF MAP_SWI_FEC = MAP_CTE_YES OR&
	   MAP_SWI_VRF = MAP_CTE_YES OR&
           MAP_SWI_IDC = MAP_CTE_YES THEN
		MAP_VEC_CGEN(MAP_TOT_CMPO) = MAP_CTE_YES
	END IF
	IF MAP_SWI_VRF = MAP_CTE_YES OR&
           MAP_SWI_IDC = MAP_CTE_YES THEN
		MAP_VEC_CGEN_SDF(MAP_TOT_CMPO) = MAP_CTE_YES
	END IF

	IF MAP_SWI_FEC = MAP_CTE_YES THEN
 !!!		MAP_NUM_FNC = MAP_FNC_FEC
	ELSE
		IF MAP_SWI_VRF = MAP_CTE_YES THEN
			VRF$ = "TRUE"
 !!!			MAP_NUM_FNC = MAP_FNC_VRF
		ELSE
			IF MAP_SWI_IDC = MAP_CTE_YES THEN
				IDC$ = "TRUE"
 !!!				MAP_NUM_FNC = MAP_FNC_IDC
			END IF
		END IF
	END IF
 !!!   MAP_NUM_LINE = MAP_VEC_FICO(1,1)
 !!!   MAP_NUM_COLU = MAP_VEC_FICO(1,2)

 !!! FLB obtiene nueva cantidad de caracteres a sumar por campos
 !!! Suma delimitador derecho a campos no display-only
   IF MAP_VEC_DSPL(MAP_IND_CMPO) = MAP_CTE_NOT THEN
       MAP_NUM_CXFL = MAP_NUM_CXFL + 1
   END IF
 !!!  PRINT " CXFL ", MAP_NUM_CXFL
   MAP_NUM_FNC = MAP_FNC_WI

	IF MAP_COD_SOP = "MCP" THEN

		M% = 0
		LINE% = MAP_NUM_LINE
		COLU% = MAP_NUM_COLU
		IF MAP_VEC_TIDX(MAP_IND_CMPO) > 1 THEN
			FOR M% = 1 TO MAP_VEC_TIDX(MAP_IND_CMPO)
				PTX_FILN = STR$(MAP_VEC_FICO(M%,1))
				PTX_FILH = MAP_VEC_FILA_HEX(MAP_VEC_FICO(M%,1))
				IF MAP_VEC_DSPL_SDF(MAP_IND_CMPO) = MAP_CTE_YES THEN
 !!! GUARDA FILA PARA ARCHIVO PREPTEX NUMERICO Y HEXA
					PTX_COLN = STR$(MAP_VEC_FICO(M%,2) + 1)
					PTX_COLH = MAP_VEC_COLU_HEX(MAP_VEC_FICO(M%,2) + 1 )
				ELSE
					PTX_COLN = STR$(MAP_VEC_FICO(M%,2) + 1 )
					PTX_COLH = MAP_VEC_COLU_HEX(MAP_VEC_FICO(M%,2) )
		 		END IF
				MAP_NUM_LINE = MAP_VEC_FICO(M%,1)
				MAP_NUM_COLU = MAP_VEC_FICO(M%,2)
				MAP_NUM_FNC = MAP_FNC_WF
			NEXT M%
		ELSE
			PTX_FILN = STR$(MAP_VEC_FICO(1,1))
			PTX_FILH = MAP_VEC_FILA_HEX(MAP_VEC_FICO(1,1))
			IF MAP_VEC_DSPL_SDF(MAP_IND_CMPO) = MAP_CTE_YES THEN
				PTX_COLN = STR$(MAP_VEC_FICO(1,2) + 1 )
				PTX_COLH = MAP_VEC_COLU_HEX(MAP_VEC_FICO(1,2) + 1)
			ELSE
				PTX_COLN = STR$(MAP_VEC_FICO(1,2) + 1 )
				PTX_COLH = MAP_VEC_COLU_HEX(MAP_VEC_FICO(1,2) )
	 		END IF
			MAP_NUM_FNC = MAP_FNC_WF
		END IF
		M% = 0
		MAP_NUM_LINE = LINE%
		MAP_NUM_COLU = COLU% 
	END IF

 !!! Setea valores para funcion del BMS
   BMS_NUM_PIC = MAP_NUM_PICT
   IF MAP_SWI_VRF = MAP_CTE_YES THEN
      BMS_NUM_PIC = MAP_NUM_PICT - 1
   ELSE
   IF MAP_SWI_IDC = MAP_CTE_YES THEN
      BMS_NUM_PIC = 1
   END IF
   END IF
   IF MAP_SWI_VRF = MAP_CTE_YES AND&
      MAP_COD_CLI = "BCQ" THEN
	BMS_NUM_PIC = 11
   END IF

 !!! Area_total_campo = Delm_izq + attrb_byte + pic_campo   + delm_izq
 !!!   MAP_NUM_VSZ =    2        + 1          + BMS_NUM_PIC + 2

   MAP_NUM_FNC = MAP_FNC_OVR


   FOR L% = 1 TO MAP_TOT_CIDX
 !!! Setea fila-columna para el sort
	IF MAP_VEC_TIDX(MAP_IND_CMPO) <= 1 THEN
		AAA$ = ""
	ELSE
		AAA$ = STR$(L%)
	END IF
      BMS_NUM_COL =  MAP_VEC_FICO(L%,2)
      MAP_NUM_LINE = MAP_VEC_FICO(L%,1)
      MAP_NUM_COLU = MAP_VEC_FICO(L%,2)
       WU_NUM_LINE = MAP_VEC_FICO(L%,1)
       WU_NUM_COLU = MAP_VEC_FICO(L%,2)

 !!! FILA DEL CAMPO

      MAP_GLS_FIL = STR$(MAP_VEC_FICO(L%,1) - MAP_NUM_INFE + 1 )
      IF LEN(MAP_GLS_FIL) = 1 THEN
         MAP_GLS_FIL = "0" + MAP_GLS_FIL
      END IF

      MAP_GLS_COL = STR$(MAP_VEC_FICO(L%,2) )
      IF LEN(MAP_GLS_COL) = 1 THEN
         MAP_GLS_COL = "0" + MAP_GLS_COL
      END IF

 !!!      MAP_NUM_FNC = MAP_FNC_VAL
      MAP_NUM_FNC = MAP_FNC_BMS
 !!! ++ INI ARCHIVO SDF
 !!! ++ Documentacion SECC 4
 !!! ++ SECC 4 => Campos I/O, Campos O/O, Variables
 !!! ++ 
 !!! ++ SSEC 0 => Header de archivo SDF  + ( AL FINAL, PUES AUN NO SE RESCATA MESSAGE KEY )
 !!! ++           Campos I/O de mapa HDR
 !!! ++ SSEC 1 => Campos I/O de pantalla
 !!! ++ SSEC 2 => Campos I/O de mapa TRL +
 !!! ++           Campos O/O de mapa HDR
 !!! ++ SSEC 3 => Campos O/O de pantalla
 !!! ++ SSEC 4 => Campos O/O de mapa TRL
 !!! ++ SSEC 5 => Variables
 !!! ++ 

 !!! HEADER ARCHIVO SFD AL FINAL, PUES AUN NO SE RESCATA MESSAGE KEY
	UYS_ALF_SECC = '4'
	IF MAP_VEC_DSPL_SDF(MAP_IND_CMPO) = MAP_CTE_NOT THEN
		UYS_NUM_SSEC = 1
	ELSE
		UYS_NUM_SSEC = 3
	END IF

	MAP_GLS_TXT = MAP_FNC_WRWU('MessageField SDF-' + MAP_VEC_FRTN(MAP_IND_CMPO) + AAA$ )
					
	IF BMS_NUM_PIC > 99 THEN
		SEP_SDF_LEN$ = '    '
	ELSE
	IF BMS_NUM_PIC > 9 THEN
		SEP_SDF_LEN$ = '     '
	ELSE
		SEP_SDF_LEN$ = '      '
	END IF
	END IF
	
	MAP_GLS_TXT = MAP_FNC_WRWU('(Length =' + SEP_SDF_LEN$ + STR$(BMS_NUM_PIC) ) 
	MAP_GLS_TXT = MAP_FNC_WRWU(')')
	MAP_GLS_TXT = MAP_FNC_WRWU('')

	IF MAP_VEC_FRTN_SDF(MAP_IND_CMPO) > "" THEN
		MAP_GLS_TXT = MAP_FNC_WRWU('MessageField SDF-' + MAP_VEC_FRTN_SDF(MAP_IND_CMPO) + AAA$ )
		MAP_GLS_TXT = MAP_FNC_WRWU('(Length =' + SEP_SDF_LEN$ + MAP_VEC_LENG_SDF(MAP_IND_CMPO) ) 
		MAP_GLS_TXT = MAP_FNC_WRWU(')')
		MAP_GLS_TXT = MAP_FNC_WRWU('')
	END IF

	UYS_NUM_SSEC = 5

	MAP_GLS_TXT = MAP_FNC_WRWU('MessageField SDF-' + MAP_VEC_FRTN(MAP_IND_CMPO) + AAA$ + '-ATR' )
	MAP_GLS_TXT = MAP_FNC_WRWU('(Length =      1' ) 
	MAP_GLS_TXT = MAP_FNC_WRWU(')')
	MAP_GLS_TXT = MAP_FNC_WRWU('')
	IF MAP_VEC_FRTN_SDF(MAP_IND_CMPO) > "" THEN
		MAP_GLS_TXT = MAP_FNC_WRWU('MessageField SDF-' + MAP_VEC_FRTN_SDF(MAP_IND_CMPO) + AAA$ + '-ATR' )
		MAP_GLS_TXT = MAP_FNC_WRWU('(Length =      1' ) 
		MAP_GLS_TXT = MAP_FNC_WRWU(')')
		MAP_GLS_TXT = MAP_FNC_WRWU('')
	END IF

	MAP_GLS_TXT = MAP_FNC_WRWU('MessageField SDF-' + MAP_VEC_FRTN(MAP_IND_CMPO) + AAA$ + '-LEN' )
	MAP_GLS_TXT = MAP_FNC_WRWU('(Length =      1' ) 
	MAP_GLS_TXT = MAP_FNC_WRWU(')')
	MAP_GLS_TXT = MAP_FNC_WRWU('')
	IF MAP_VEC_FRTN_SDF(MAP_IND_CMPO) > "" THEN
		MAP_GLS_TXT = MAP_FNC_WRWU('MessageField SDF-' + MAP_VEC_FRTN_SDF(MAP_IND_CMPO) + AAA$ + '-LEN' )
		MAP_GLS_TXT = MAP_FNC_WRWU('(Length =      1' ) 
		MAP_GLS_TXT = MAP_FNC_WRWU(')')
		MAP_GLS_TXT = MAP_FNC_WRWU('')
	END IF

 !!! ++ SECC 7 => I/O, ORDEN FIS
 !!! ++ Documentacion SECC 7
 !!! ++ SECC 7 => Campos I/O de mapa
 !!! ++ 
 !!! ++ SSEC 0 => Header ('MessageVariable ' + MAPUYS )
 !!! ++           ('(Retain = TRUE')     +
 !!! ++           Campos I/O de mapa HDR
 !!! ++ SSEC 1 => Campos I/O de pantalla
 !!! ++ 

	UYS_ALF_SECC = '7'

	IF PUT_HDR_SECC_7 = "N" THEN
		PUT_HDR_SECC_7 = "S"

		UYS_NUM_SSEC = 0
		MAP_GLS_TXT = MAP_FNC_WRWU('MessageVariable ' + MAPUYS )
		MAP_GLS_TXT = MAP_FNC_WRWU('(Retain = TRUE')
		MAP_GLS_TXT = MAP_FNC_WRWU(')')
		MAP_GLS_TXT = MAP_FNC_WRWU('EndMessageVariable')
		MAP_GLS_TXT = MAP_FNC_WRWU('EndMessageType')
		MAP_GLS_TXT = MAP_FNC_WRWU('')
		MAP_GLS_TXT = MAP_FNC_WRWU('TransactionType ' + MAPUYS + 'TT')
		MAP_GLS_TXT = MAP_FNC_WRWU('UniqueIdTimestamp  =  @5EAA4A4A8E28@')
		MAP_GLS_TXT = MAP_FNC_WRWU('ModificationTimestamp  =  @5EAA4A4AB908@')
		MAP_GLS_TXT = MAP_FNC_WRWU('(RequestMessageType = ' + MAPUYS )
		MAP_GLS_TXT = MAP_FNC_WRWU(',ResponseMessageType = ' + MAP_GLS_PROY + 'A' + MAP_GLS_MAPA + 'SR')
		MAP_GLS_TXT = MAP_FNC_WRWU(')')
		MAP_GLS_TXT = MAP_FNC_WRWU('')
		MAP_GLS_TXT = MAP_FNC_WRWU('Transaction ' + MAPUYS)
		MAP_GLS_TXT = MAP_FNC_WRWU(' Using ' + MAPUYS + 'TT')
		MAP_GLS_TXT = MAP_FNC_WRWU('EndTransaction')
		MAP_GLS_TXT = MAP_FNC_WRWU('')
		MAP_GLS_TXT = MAP_FNC_WRWU('DisplayVariable SDF-HDR-COD-TRCD')
		MAP_GLS_TXT = MAP_FNC_WRWU('(InternalLength =      4')
		MAP_GLS_TXT = MAP_FNC_WRWU(')')
		MAP_GLS_TXT = MAP_FNC_WRWU('')
		MAP_GLS_TXT = MAP_FNC_WRWU('DisplayVariable SDF-HDR-COD-CACC')
		MAP_GLS_TXT = MAP_FNC_WRWU('(InternalLength =      5')
		MAP_GLS_TXT = MAP_FNC_WRWU(')')
		MAP_GLS_TXT = MAP_FNC_WRWU('')
	END IF
	IF BMS_NUM_PIC > 99 THEN
		SEP_SDF_LEN$ = '    '
	ELSE
	IF BMS_NUM_PIC > 9 THEN
		SEP_SDF_LEN$ = '     '
	ELSE
		SEP_SDF_LEN$ = '      '
	END IF
	END IF
	IF MAP_VEC_DSPL_SDF(MAP_IND_CMPO) = MAP_CTE_NOT THEN
		UYS_ALF_SECC = '7'
		UYS_NUM_SSEC = 1
		MAP_GLS_TXT = MAP_FNC_WRWU('DisplayVariable SDF-' + MAP_VEC_FRTN(MAP_IND_CMPO) + AAA$ )
		MAP_GLS_TXT = MAP_FNC_WRWU('(InternalLength =' + SEP_SDF_LEN$ + STR$(BMS_NUM_PIC) )
		MAP_GLS_TXT = MAP_FNC_WRWU(')')
		MAP_GLS_TXT = MAP_FNC_WRWU('')
		IF MAP_VEC_FRTN_SDF(MAP_IND_CMPO) > "" THEN
			MAP_GLS_TXT = MAP_FNC_WRWU('DisplayVariable SDF-' + MAP_VEC_FRTN_SDF(MAP_IND_CMPO) + AAA$ )
			MAP_GLS_TXT = MAP_FNC_WRWU('(InternalLength =' + SEP_SDF_LEN$ + MAP_VEC_LENG_SDF(MAP_IND_CMPO) )
			MAP_GLS_TXT = MAP_FNC_WRWU(')')
			MAP_GLS_TXT = MAP_FNC_WRWU('')
		END IF
	END IF

 !!! ++ Documentacion SECC A
 !!! ++ SECC A => Campos I/O, Campos O/O, Variables
 !!! ++ 
 !!! ++ SSEC 0 => Campos I/O de mapa TRL ( finalizacion SECC anterior ) +
 !!! ++           Header ('MessageVariable ' + MAP_GLS_PROY + 'A' + MAP_GLS_MAPA + 'SR')
 !!! ++                  (' Using ' + MAP_GLS_PROY + 'A' + MAP_GLS_MAPA + 'SR')                            +
 !!! ++           Campos I/O de mapa HDR
 !!! ++ SSEC 1 => Campos I/O de pantalla
 !!! ++ SSEC 2 => Campos I/O de mapa TRL +
 !!! ++           Campos O/O de mapa HDR
 !!! ++ SSEC 3 => Campos O/O de pantalla
 !!! ++ SSEC 4 => Campos O/O de mapa TRL
 !!! ++ SSEC 5 => Variables
 !!! ++ 

	UYS_ALF_SECC = 'A'

	IF PUT_HDR_SECC_A = "N" THEN
		PUT_HDR_SECC_A = "S"

		UYS_NUM_SSEC = 0
		MAP_GLS_TXT = MAP_FNC_WRWU('DisplayVariable SDF-TRL-COD-CACC')
		MAP_GLS_TXT = MAP_FNC_WRWU('(InternalLength =     11')
		MAP_GLS_TXT = MAP_FNC_WRWU(')')
		MAP_GLS_TXT = MAP_FNC_WRWU('')
		MAP_GLS_TXT = MAP_FNC_WRWU('MessageVariable ' + MAP_GLS_PROY + 'A' + MAP_GLS_MAPA + 'SR')
		MAP_GLS_TXT = MAP_FNC_WRWU(' Using ' + MAP_GLS_PROY + 'A' + MAP_GLS_MAPA + 'SR')
		MAP_GLS_TXT = MAP_FNC_WRWU('(Retain = TRUE')
		MAP_GLS_TXT = MAP_FNC_WRWU(')')
		MAP_GLS_TXT = MAP_FNC_WRWU('EndMessageVariable')
		MAP_GLS_TXT = MAP_FNC_WRWU('')
		MAP_GLS_TXT = MAP_FNC_WRWU('MessageVariable ' + MAPUYS )
		MAP_GLS_TXT = MAP_FNC_WRWU(' Using ' + MAPUYS )
		MAP_GLS_TXT = MAP_FNC_WRWU('(Retain = TRUE')
		MAP_GLS_TXT = MAP_FNC_WRWU(')')
		MAP_GLS_TXT = MAP_FNC_WRWU('EndMessageVariable')
		MAP_GLS_TXT = MAP_FNC_WRWU('')
		MAP_GLS_TXT = MAP_FNC_WRWU('MessageType ' + MAP_GLS_PROY + 'A' + MAP_GLS_MAPA + 'SR')
		MAP_GLS_TXT = MAP_FNC_WRWU('')
		MAP_GLS_TXT = MAP_FNC_WRWU('MessageVariable ' + MAP_GLS_PROY + 'A' + MAP_GLS_MAPA + 'SR')
		MAP_GLS_TXT = MAP_FNC_WRWU('')
		MAP_GLS_TXT = MAP_FNC_WRWU('MessageField ' + MAP_GLS_PROY + 'A' + MAP_GLS_MAPA + 'SRF')
		MAP_GLS_TXT = MAP_FNC_WRWU('EndMessageVariable')
		MAP_GLS_TXT = MAP_FNC_WRWU('EndMessageType')
		MAP_GLS_TXT = MAP_FNC_WRWU('')
		MAP_GLS_TXT = MAP_FNC_WRWU('MessageType ' + MAPUYS )
		MAP_GLS_TXT = MAP_FNC_WRWU('')
		MAP_GLS_TXT = MAP_FNC_WRWU('MessageVariable ' + MAPUYS )
		MAP_GLS_TXT = MAP_FNC_WRWU('')
		MAP_GLS_TXT = MAP_FNC_WRWU('MessageField SDF-HDR-COD-TRCD')
		MAP_GLS_TXT = MAP_FNC_WRWU('')
		MAP_GLS_TXT = MAP_FNC_WRWU('MessageField SDF-TRL-COD-CACC')
		MAP_GLS_TXT = MAP_FNC_WRWU('')

		UYS_NUM_SSEC = 2
		MAP_GLS_TXT = MAP_FNC_WRWU('MessageField SDF-TRL-COD-CACC')
		MAP_GLS_TXT = MAP_FNC_WRWU('')
		MAP_GLS_TXT = MAP_FNC_WRWU('MessageField SDF-HDR-COD-FUNC')
		MAP_GLS_TXT = MAP_FNC_WRWU('')
		MAP_GLS_TXT = MAP_FNC_WRWU('MessageField SDF-HDR-GLS-GLS1')
		MAP_GLS_TXT = MAP_FNC_WRWU('')
		MAP_GLS_TXT = MAP_FNC_WRWU('MessageField SDF-HDR-GLS-GLS2')
		MAP_GLS_TXT = MAP_FNC_WRWU('')
		MAP_GLS_TXT = MAP_FNC_WRWU('MessageField SDF-HDR-GLS-GLS3')
		MAP_GLS_TXT = MAP_FNC_WRWU('')
		MAP_GLS_TXT = MAP_FNC_WRWU('MessageField SDF-HDR-COD-SIST')
		MAP_GLS_TXT = MAP_FNC_WRWU('')
		MAP_GLS_TXT = MAP_FNC_WRWU('MessageField SDF-HDR-GLS-NFRM')
		MAP_GLS_TXT = MAP_FNC_WRWU('')
		MAP_GLS_TXT = MAP_FNC_WRWU('MessageField SDF-HDR-GLS-FPRO')
		MAP_GLS_TXT = MAP_FNC_WRWU('')
		MAP_GLS_TXT = MAP_FNC_WRWU('MessageField SDF-HDR-FEC-DMSA')
		MAP_GLS_TXT = MAP_FNC_WRWU('')

		UYS_NUM_SSEC = 4
		MAP_GLS_TXT = MAP_FNC_WRWU('MessageField SDF-TRL-GLS-TERM')
		MAP_GLS_TXT = MAP_FNC_WRWU('')
		MAP_GLS_TXT = MAP_FNC_WRWU('MessageField SDF-TRL-COD-CMND')
		MAP_GLS_TXT = MAP_FNC_WRWU('')
		MAP_GLS_TXT = MAP_FNC_WRWU('MessageField SDF-TRL-GLS-PRMT')
		MAP_GLS_TXT = MAP_FNC_WRWU('')
		MAP_GLS_TXT = MAP_FNC_WRWU('MessageField SDF-TRL-GLS-MENS')
		MAP_GLS_TXT = MAP_FNC_WRWU('')
	END IF

	IF MAP_VEC_DSPL_SDF(MAP_IND_CMPO) = MAP_CTE_NOT THEN
		UYS_NUM_SSEC = 1
	ELSE
		UYS_NUM_SSEC = 3
	END IF
	MAP_GLS_TXT = MAP_FNC_WRWU('MessageField SDF-' + MAP_VEC_FRTN(MAP_IND_CMPO) + AAA$ )
	MAP_GLS_TXT = MAP_FNC_WRWU('')
	IF MAP_VEC_FRTN_SDF(MAP_IND_CMPO) > "" THEN
		MAP_GLS_TXT = MAP_FNC_WRWU('MessageField SDF-' + MAP_VEC_FRTN_SDF(MAP_IND_CMPO) + AAA$ )
		MAP_GLS_TXT = MAP_FNC_WRWU('')
	END IF

	UYS_NUM_SSEC = 5
	MAP_GLS_TXT = MAP_FNC_WRWU('MessageField SDF-' + MAP_VEC_FRTN(MAP_IND_CMPO) + AAA$ + '-ATR' )
	MAP_GLS_TXT = MAP_FNC_WRWU('')
	IF MAP_VEC_FRTN_SDF(MAP_IND_CMPO) > "" THEN
		MAP_GLS_TXT = MAP_FNC_WRWU('MessageField SDF-' + MAP_VEC_FRTN_SDF(MAP_IND_CMPO) + AAA$ + '-ATR' )
		MAP_GLS_TXT = MAP_FNC_WRWU('')
	END IF

	MAP_GLS_TXT = MAP_FNC_WRWU('MessageField SDF-' + MAP_VEC_FRTN(MAP_IND_CMPO) + AAA$ + '-LEN' )
	MAP_GLS_TXT = MAP_FNC_WRWU('')
	IF MAP_VEC_FRTN_SDF(MAP_IND_CMPO) > "" THEN
		MAP_GLS_TXT = MAP_FNC_WRWU('MessageField SDF-' + MAP_VEC_FRTN_SDF(MAP_IND_CMPO) + AAA$ + '-LEN' )
		MAP_GLS_TXT = MAP_FNC_WRWU('')
	END IF

 !!! SECC D => I/O FIS
 !!! ++ Documentacion SECC D
 !!! ++ SECC D => Campos I/O, Campos O/O, Variables
 !!! ++ 
 !!! ++ SSEC 0 => Trailer ('EndMessageVariable')
 !!! ++                   ('EndMessageType') +
 !!! ++           Campos I/O de mapa HDR
 !!! ++           Header ('MessageVariable ' + MAP_GLS_PROY + 'A' + MAP_GLS_MAPA + 'SR')
 !!! ++                  (' Using ' + MAP_GLS_PROY + 'A' + MAP_GLS_MAPA + 'SR')                            +
 !!! ++           Campos I/O de mapa HDR
 !!! ++ SSEC 1 => Campos I/O de pantalla
 !!! ++ 
	UYS_ALF_SECC = 'D'

	IF PUT_HDR_SECC_D = "N" THEN
		PUT_HDR_SECC_D = "S"

		UYS_NUM_SSEC = 0
		MAP_GLS_TXT = MAP_FNC_WRWU('EndMessageVariable')
		MAP_GLS_TXT = MAP_FNC_WRWU('EndMessageType')
		MAP_GLS_TXT = MAP_FNC_WRWU('')
		MAP_GLS_TXT = MAP_FNC_WRWU('DisplayVariable SDF-HDR-COD-TRCD')
		MAP_GLS_TXT = MAP_FNC_WRWU('(DefaultValue =                                                       <<')
		MAP_GLS_TXT = MAP_FNC_WRWU(MAPUYS + '.SDF-HDR-COD-TRCD')
		MAP_GLS_TXT = MAP_FNC_WRWU('>>')
		MAP_GLS_TXT = MAP_FNC_WRWU(')')
		MAP_GLS_TXT = MAP_FNC_WRWU('')
		MAP_GLS_TXT = MAP_FNC_WRWU('DisplayVariable SDF-HDR-COD-CACC')
		MAP_GLS_TXT = MAP_FNC_WRWU('(DefaultValue =                                                       <<')
		MAP_GLS_TXT = MAP_FNC_WRWU(MAPUYS + '.SDF-HDR-COD-CACC')
		MAP_GLS_TXT = MAP_FNC_WRWU('>>')
		MAP_GLS_TXT = MAP_FNC_WRWU(')')
		MAP_GLS_TXT = MAP_FNC_WRWU('')
	END IF

	IF MAP_VEC_DSPL_SDF(MAP_IND_CMPO) = MAP_CTE_NOT THEN
		UYS_NUM_SSEC = 1
		MAP_GLS_TXT = MAP_FNC_WRWU('DisplayVariable SDF-' + MAP_VEC_FRTN(MAP_IND_CMPO) + AAA$ )
		MAP_GLS_TXT = MAP_FNC_WRWU('(DefaultValue =                                                       <<')
		MAP_GLS_TXT = MAP_FNC_WRWU(MAPUYS + '.SDF-' + MAP_VEC_FRTN(MAP_IND_CMPO) + AAA$ )
		MAP_GLS_TXT = MAP_FNC_WRWU('>>')
		MAP_GLS_TXT = MAP_FNC_WRWU(')')
		MAP_GLS_TXT = MAP_FNC_WRWU('')
		IF MAP_VEC_FRTN_SDF(MAP_IND_CMPO) > "" THEN
			MAP_GLS_TXT = MAP_FNC_WRWU('DisplayVariable SDF-' + MAP_VEC_FRTN_SDF(MAP_IND_CMPO) + AAA$ )
			MAP_GLS_TXT = MAP_FNC_WRWU('(DefaultValue =                                                       <<')
			MAP_GLS_TXT = MAP_FNC_WRWU(MAPUYS + '.SDF-' + MAP_VEC_FRTN_SDF(MAP_IND_CMPO) + AAA$ )
			MAP_GLS_TXT = MAP_FNC_WRWU('>>')
			MAP_GLS_TXT = MAP_FNC_WRWU(')')
			MAP_GLS_TXT = MAP_FNC_WRWU('')
		END IF
	END IF

 !!! SECC G => I/O, O/O, TEX ORDEN FIS
 !!! ++ Documentacion SECC G
 !!! ++ SECC G => Campos de acuerdo a orden fisico
 !!! ++ 
 !!! ++ SSEC 1 => Campos de pantalla
 !!! ++ 
	UYS_ALF_SECC = 'G'
	UYS_NUM_SSEC = 1
	IF BMS_NUM_PIC > 99 THEN
		SEP_SDF_LEN$ = '    '
	ELSE
	IF BMS_NUM_PIC > 9 THEN
		SEP_SDF_LEN$ = '     '
	ELSE
		SEP_SDF_LEN$ = '      '
	END IF
	END IF

	PTX_FILN = STR$(MAP_VEC_FICO(L%,1))
	PTX_COLN = STR$(MAP_VEC_FICO(L%,2) + 1)

	IF INTEGER(PTX_FILN) > 99 THEN
		SEP_SDF_ROW$ = '    '
	ELSE
	IF INTEGER(PTX_FILN) > 9 THEN
		SEP_SDF_ROW$ = '     '
	ELSE
		SEP_SDF_ROW$ = '      '
	END IF
	END IF

	IF INTEGER(PTX_COLN) > 99 THEN
		SEP_SDF_COL$ = '    '
	ELSE
	IF INTEGER(PTX_COLN) > 9 THEN
		SEP_SDF_COL$ = '     '
	ELSE
		SEP_SDF_COL$ = '      '
	END IF
	END IF

	IF MAP_VEC_DSPL_SDF(MAP_IND_CMPO) = MAP_CTE_NOT THEN
		MAP_GLS_TXT = MAP_FNC_WRWU('Field SDF-' + MAP_VEC_FRTN(MAP_IND_CMPO) + AAA$ )
	ELSE
		MAP_GLS_TXT = MAP_FNC_WRWU('Prompt SDO-' + MAP_VEC_FRTN(MAP_IND_CMPO) + AAA$ )
	END IF
	MAP_GLS_TXT = MAP_FNC_WRWU('(Row ='    + SEP_SDF_ROW$ + PTX_FILN )
	MAP_GLS_TXT = MAP_FNC_WRWU(',Column =' + SEP_SDF_COL$ + PTX_COLN )
	MAP_GLS_TXT = MAP_FNC_WRWU(',Length =' + SEP_SDF_LEN$ + STR$(BMS_NUM_PIC) )
	MAP_GLS_TXT = MAP_FNC_WRWU(',Specify = Help')
	IF MAP_VEC_DSPL_SDF(MAP_IND_CMPO) = MAP_CTE_YES THEN
		MAP_GLS_TXT = MAP_FNC_WRWU(',Value =                                                              <<')
		MAP_GLS_TXT = MAP_FNC_WRWU(MAPUYS + '.SDF-' + MAP_VEC_FRTN(MAP_IND_CMPO) + AAA$ )
		MAP_GLS_TXT = MAP_FNC_WRWU('>>')
	ELSE
		MAP_GLS_TXT = MAP_FNC_WRWU(',DisplayVariable = SDF-' + MAP_VEC_FRTN(MAP_IND_CMPO) + AAA$ )
		MAP_GLS_TXT = MAP_FNC_WRWU(',Highlight =                                                          <<')
		MAP_GLS_TXT = MAP_FNC_WRWU('IF ' + MAPUYS + '.SDF-' +&
					MAP_VEC_FRTN(MAP_IND_CMPO) + AAA$ + '-LEN = "E" THEN HIGHLIGHT(REVERSE)')
		MAP_GLS_TXT = MAP_FNC_WRWU('>>')
		MAP_GLS_TXT = MAP_FNC_WRWU(',ProtectedXmit =                                                      <<')
		MAP_GLS_TXT = MAP_FNC_WRWU(MAPUYS + '.SDF-' +&
					MAP_VEC_FRTN(MAP_IND_CMPO) + AAA$ + '-ATR  = "1"')
		MAP_GLS_TXT = MAP_FNC_WRWU('>>')
	END IF
	MAP_GLS_TXT = MAP_FNC_WRWU(')')
	MAP_GLS_TXT = MAP_FNC_WRWU('')

	IF MAP_VEC_FRTN_SDF(MAP_IND_CMPO) > "" THEN
		IF MAP_VEC_DSPL_SDF(MAP_IND_CMPO) = MAP_CTE_NOT THEN
			MAP_GLS_TXT = MAP_FNC_WRWU('Field SDF-' + MAP_VEC_FRTN_SDF(MAP_IND_CMPO) + AAA$ )
		ELSE
			MAP_GLS_TXT = MAP_FNC_WRWU('Prompt SDO-' + MAP_VEC_FRTN_SDF(MAP_IND_CMPO) + AAA$ )
		END IF
		MAP_GLS_TXT = MAP_FNC_WRWU('(Row ='    + SEP_SDF_ROW$ + PTX_FILN )
		IF MAP_VEC_TCMP(MAP_IND_CMPO) = "VRF" THEN
			MAP_GLS_TXT = MAP_FNC_WRWU(',Column =' + SEP_SDF_COL$ + STR$( INTEGER(PTX_COLN) +  BMS_NUM_PIC + 3 ) )
			MAP_GLS_TXT = MAP_FNC_WRWU('(Length =      1' ) 
		ELSE
		IF MAP_VEC_TCMP(MAP_IND_CMPO) = "IDC" THEN
			MAP_GLS_TXT = MAP_FNC_WRWU(',Column =' + SEP_SDF_COL$ + STR$( INTEGER(PTX_COLN) +  BMS_NUM_PIC + 3 ) )
			MAP_GLS_TXT = MAP_FNC_WRWU('(Length =      3' ) 
		ELSE
			MAP_GLS_TXT = MAP_FNC_WRWU(',Column =' + SEP_SDF_COL$ + PTX_COLN  )
			MAP_GLS_TXT = MAP_FNC_WRWU(',Length =' + SEP_SDF_LEN$ + STR$(BMS_NUM_PIC) )
		END IF
		END IF
		MAP_GLS_TXT = MAP_FNC_WRWU(',Specify = Help')
		IF MAP_VEC_DSPL_SDF(MAP_IND_CMPO) = MAP_CTE_YES THEN
			MAP_GLS_TXT = MAP_FNC_WRWU(',Value =                                                              <<')
			MAP_GLS_TXT = MAP_FNC_WRWU(MAPUYS + '.SDF-' + MAP_VEC_FRTN_SDF(MAP_IND_CMPO) + AAA$ )
			MAP_GLS_TXT = MAP_FNC_WRWU('>>')
		ELSE
			MAP_GLS_TXT = MAP_FNC_WRWU(',DisplayVariable = SDF-' + MAP_VEC_FRTN_SDF(MAP_IND_CMPO) + AAA$ )
			MAP_GLS_TXT = MAP_FNC_WRWU(',Highlight =                                                          <<')
			MAP_GLS_TXT = MAP_FNC_WRWU('IF ' + MAPUYS + '.SDF-' +&
						MAP_VEC_FRTN_SDF(MAP_IND_CMPO) + AAA$ + '-LEN = "E" THEN HIGHLIGHT(REVERSE)')
			MAP_GLS_TXT = MAP_FNC_WRWU('>>')
			MAP_GLS_TXT = MAP_FNC_WRWU(',ProtectedXmit =                                                      <<')
			MAP_GLS_TXT = MAP_FNC_WRWU(MAPUYS + '.SDF-' +&
						MAP_VEC_FRTN_SDF(MAP_IND_CMPO) + AAA$ + '-ATR  = "1"')
			MAP_GLS_TXT = MAP_FNC_WRWU('>>')
		END IF
		MAP_GLS_TXT = MAP_FNC_WRWU(')')
		MAP_GLS_TXT = MAP_FNC_WRWU('')
	END IF

 !!! SECC J => I/O ORDEN FIS
 !!! ++ Documentacion SECC J
 !!! ++ SECC J => Campos I/O
 !!! ++ 
 !!! ++ SSEC 0 => Campos y textos de mapa TRL ( Finalizacion SECC anterior )
 !!! ++ 
	UYS_ALF_SECC = 'J'
	IF PUT_HDR_SECC_J = "N" THEN
		PUT_HDR_SECC_J = "S"
		UYS_NUM_SSEC = 0
		MAP_GLS_TXT = MAP_FNC_WRWU('Prompt SDO-TRL-GLS-TERM')
		MAP_GLS_TXT = MAP_FNC_WRWU('(Row =     22')
		MAP_GLS_TXT = MAP_FNC_WRWU(',Column =      2')
		MAP_GLS_TXT = MAP_FNC_WRWU(',Length =     79')
		MAP_GLS_TXT = MAP_FNC_WRWU(',Specify = Help')
		MAP_GLS_TXT = MAP_FNC_WRWU(',Value =                                                              <<')
		MAP_GLS_TXT = MAP_FNC_WRWU(MAPUYS + '.SDF-TRL-GLS-TERM')
		MAP_GLS_TXT = MAP_FNC_WRWU('>>')
		MAP_GLS_TXT = MAP_FNC_WRWU(')')
		MAP_GLS_TXT = MAP_FNC_WRWU('')
		MAP_GLS_TXT = MAP_FNC_WRWU('Prompt SDO-TRL-COD-CMND')
		MAP_GLS_TXT = MAP_FNC_WRWU('(Row =     23')
		MAP_GLS_TXT = MAP_FNC_WRWU(',Column =      2')
		MAP_GLS_TXT = MAP_FNC_WRWU(',Length =     39')
		MAP_GLS_TXT = MAP_FNC_WRWU(',Specify = Help')
		MAP_GLS_TXT = MAP_FNC_WRWU(',Value =                                                              <<')
		MAP_GLS_TXT = MAP_FNC_WRWU(MAPUYS + '.SDF-TRL-COD-CMND')
		MAP_GLS_TXT = MAP_FNC_WRWU('>>')
		MAP_GLS_TXT = MAP_FNC_WRWU(')')
		MAP_GLS_TXT = MAP_FNC_WRWU('')
		MAP_GLS_TXT = MAP_FNC_WRWU('Prompt SDO-TRL-GLS-PRMT')
		MAP_GLS_TXT = MAP_FNC_WRWU('(Row =     23')
		MAP_GLS_TXT = MAP_FNC_WRWU(',Column =     42')
		MAP_GLS_TXT = MAP_FNC_WRWU(',Length =     25')
		MAP_GLS_TXT = MAP_FNC_WRWU(',Specify = Help')
		MAP_GLS_TXT = MAP_FNC_WRWU(',Value =                                                              <<')
		MAP_GLS_TXT = MAP_FNC_WRWU(MAPUYS + '.SDF-TRL-GLS-PRMT')
		MAP_GLS_TXT = MAP_FNC_WRWU('>>')
		MAP_GLS_TXT = MAP_FNC_WRWU(')')
		MAP_GLS_TXT = MAP_FNC_WRWU('')
		MAP_GLS_TXT = MAP_FNC_WRWU('Field SDF-TRL-COD-CACC')
		MAP_GLS_TXT = MAP_FNC_WRWU('(Row =     23')
		MAP_GLS_TXT = MAP_FNC_WRWU(',Column =     69')
		MAP_GLS_TXT = MAP_FNC_WRWU(',Length =     11')
		MAP_GLS_TXT = MAP_FNC_WRWU(',Specify = Help')
		MAP_GLS_TXT = MAP_FNC_WRWU(',DisplayVariable = SDF-TRL-COD-CACC')
		MAP_GLS_TXT = MAP_FNC_WRWU(')')
		MAP_GLS_TXT = MAP_FNC_WRWU('')
		MAP_GLS_TXT = MAP_FNC_WRWU('Prompt SDO-TRL-GLS-MENS')
		MAP_GLS_TXT = MAP_FNC_WRWU('(Row =     24')
		MAP_GLS_TXT = MAP_FNC_WRWU(',Column =      2')
		MAP_GLS_TXT = MAP_FNC_WRWU(',Length =     79')
		MAP_GLS_TXT = MAP_FNC_WRWU(',Specify = Help')
		MAP_GLS_TXT = MAP_FNC_WRWU(',Value =                                                              <<')
		MAP_GLS_TXT = MAP_FNC_WRWU(MAPUYS + '.SDF-TRL-GLS-MENS')
		MAP_GLS_TXT = MAP_FNC_WRWU('>>')
		MAP_GLS_TXT = MAP_FNC_WRWU(')')
		MAP_GLS_TXT = MAP_FNC_WRWU('Panel.NextField =                                                     <<')
		UYS_NUM_SSEC = 2
		MAP_GLS_TXT = MAP_FNC_WRWU('>>')
	END IF

	IF MAP_VEC_DSPL_SDF(MAP_IND_CMPO) = MAP_CTE_NOT THEN
		UYS_NUM_SSEC = 1
                IF SDF_FLD_FIRST$ <> "" THEN
			MAP_GLS_TXT = MAP_FNC_WRWU('ELSE')
		END IF
               	SDF_FLD_FIRST$ = "SI"
		MAP_GLS_TXT = MAP_FNC_WRWU('IF ' + MAPUYS + '.SDF-' +&
						MAP_VEC_FRTN(MAP_IND_CMPO) + AAA$ + '-LEN = "E" OR ' )
		MAP_GLS_TXT = MAP_FNC_WRWU(MAPUYS  + '.SDF-' +&
						MAP_VEC_FRTN(MAP_IND_CMPO) + AAA$ + '-LEN = "P"' )
		MAP_GLS_TXT = MAP_FNC_WRWU('THEN FIELD(SDF-' + MAP_VEC_FRTN(MAP_IND_CMPO) + AAA$ + ')')
		IF MAP_VEC_FRTN_SDF(MAP_IND_CMPO) > "" THEN
			MAP_GLS_TXT = MAP_FNC_WRWU('ELSE')
			MAP_GLS_TXT = MAP_FNC_WRWU('IF ' + MAPUYS + '.SDF-' +&
							MAP_VEC_FRTN_SDF(MAP_IND_CMPO) + AAA$ + '-LEN = "E" OR ' )
			MAP_GLS_TXT = MAP_FNC_WRWU(MAPUYS  + '.SDF-' +&
							MAP_VEC_FRTN_SDF(MAP_IND_CMPO) + AAA$ + '-LEN = "P"' )
			MAP_GLS_TXT = MAP_FNC_WRWU('THEN FIELD(SDF-' + MAP_VEC_FRTN_SDF(MAP_IND_CMPO) + AAA$ + ')')
		END IF
	END IF

 !!! SECC M => I/O, ORDEN FIS
	UYS_ALF_SECC = 'M'
	IF PUT_HDR_SECC_M = "N" THEN
		PUT_HDR_SECC_M = "S"
		UYS_NUM_SSEC = 0
		MAP_GLS_TXT = MAP_FNC_WRWU('')
		MAP_GLS_TXT = MAP_FNC_WRWU('ProcessingList')
		MAP_GLS_TXT = MAP_FNC_WRWU('')
		MAP_GLS_TXT = MAP_FNC_WRWU('Field SDF-HDR-COD-TRCD')
		MAP_GLS_TXT = MAP_FNC_WRWU('')
		MAP_GLS_TXT = MAP_FNC_WRWU(',Field SDF-HDR-COD-CACC')
		MAP_GLS_TXT = MAP_FNC_WRWU('')
	END IF

	IF MAP_VEC_DSPL_SDF(MAP_IND_CMPO) = MAP_CTE_NOT THEN
		UYS_NUM_SSEC = 1
		MAP_GLS_TXT = MAP_FNC_WRWU(',Field SDF-' + MAP_VEC_FRTN(MAP_IND_CMPO) + AAA$ )
		MAP_GLS_TXT = MAP_FNC_WRWU('')
		IF MAP_VEC_FRTN_SDF(MAP_IND_CMPO) > "" THEN
			MAP_GLS_TXT = MAP_FNC_WRWU(',Field SDF-' + MAP_VEC_FRTN_SDF(MAP_IND_CMPO) + AAA$ )
			MAP_GLS_TXT = MAP_FNC_WRWU('')
		END IF
	END IF

 !!! SECC P => I/O, ORDEN FIS
 !!! ++ Documentacion SECC P
 !!! ++ SECC P => Campos I/O, Campos O/O, Variables
 !!! ++ 
 !!! ++ SSEC 0 => Campos I/O de mapa TRL ( finalizacion SECC anterior ) +
 !!! ++           Header ('Transaction ' + MAPUYS ) +
 !!! ++           Campos I/O de mapa HDR
 !!! ++ SSEC 1 => Campos I/O de pantalla
 !!! ++ SSEC 2 => Campos I/O de mapa TRL +
 !!! ++           Campos O/O de mapa HDR
 !!! ++ SSEC 3 => Campos O/O de pantalla
 !!! ++ SSEC 4 => Campos O/O de mapa TRL
 !!! ++ SSEC 5 => Variables
 !!! ++ 

	UYS_ALF_SECC = 'P'
	IF PUT_HDR_SECC_P = "N" THEN
		PUT_HDR_SECC_P = "S"

		UYS_NUM_SSEC = 0
		MAP_GLS_TXT = MAP_FNC_WRWU(',Field SDF-TRL-COD-CACC')
		MAP_GLS_TXT = MAP_FNC_WRWU('EndProcessingList')
		MAP_GLS_TXT = MAP_FNC_WRWU('EndPanel')
		MAP_GLS_TXT = MAP_FNC_WRWU('')
		MAP_GLS_TXT = MAP_FNC_WRWU('Transaction ' + MAPUYS )
		MAP_GLS_TXT = MAP_FNC_WRWU('(ResponseMessageVariable = ' + MAP_GLS_PROY + 'A' + MAP_GLS_MAPA + 'SR')
		MAP_GLS_TXT = MAP_FNC_WRWU(')')
		MAP_GLS_TXT = MAP_FNC_WRWU('')
		MAP_GLS_TXT = MAP_FNC_WRWU('MessageField SDF-HDR-COD-TRCD')
		MAP_GLS_TXT = MAP_FNC_WRWU('(Value =                                                              <<')
		MAP_GLS_TXT = MAP_FNC_WRWU('SDF-HDR-COD-TRCD')
		MAP_GLS_TXT = MAP_FNC_WRWU('>>')
		MAP_GLS_TXT = MAP_FNC_WRWU(')')
		MAP_GLS_TXT = MAP_FNC_WRWU('')
		MAP_GLS_TXT = MAP_FNC_WRWU('MessageField SDF-HDR-COD-CACC')
		MAP_GLS_TXT = MAP_FNC_WRWU('(Value =                                                              <<')
		MAP_GLS_TXT = MAP_FNC_WRWU('SDF-HDR-COD-CACC')
		MAP_GLS_TXT = MAP_FNC_WRWU('>>')
		MAP_GLS_TXT = MAP_FNC_WRWU(')')
		MAP_GLS_TXT = MAP_FNC_WRWU('')

		UYS_NUM_SSEC = 2
		MAP_GLS_TXT = MAP_FNC_WRWU('MessageField SDF-TRL-COD-CACC')
		MAP_GLS_TXT = MAP_FNC_WRWU('')

		MAP_GLS_TXT = MAP_FNC_WRWU('MessageField SDF-HDR-COD-FUNC')
		MAP_GLS_TXT = MAP_FNC_WRWU('')
		MAP_GLS_TXT = MAP_FNC_WRWU('MessageField SDF-HDR-GLS-GLS1')
		MAP_GLS_TXT = MAP_FNC_WRWU('')
		MAP_GLS_TXT = MAP_FNC_WRWU('MessageField SDF-HDR-GLS-GLS2')
		MAP_GLS_TXT = MAP_FNC_WRWU('')
		MAP_GLS_TXT = MAP_FNC_WRWU('MessageField SDF-HDR-GLS-GLS3')
		MAP_GLS_TXT = MAP_FNC_WRWU('')
		MAP_GLS_TXT = MAP_FNC_WRWU('MessageField SDF-HDR-COD-SIST')
		MAP_GLS_TXT = MAP_FNC_WRWU('')
		MAP_GLS_TXT = MAP_FNC_WRWU('MessageField SDF-HDR-GLS-NFRM')
		MAP_GLS_TXT = MAP_FNC_WRWU('')
		MAP_GLS_TXT = MAP_FNC_WRWU('MessageField SDF-HDR-GLS-FPRO')
		MAP_GLS_TXT = MAP_FNC_WRWU('')
		MAP_GLS_TXT = MAP_FNC_WRWU('MessageField SDF-HDR-FEC-DMSA')
		MAP_GLS_TXT = MAP_FNC_WRWU('')

		UYS_NUM_SSEC = 4
		MAP_GLS_TXT = MAP_FNC_WRWU('MessageField SDF-TRL-GLS-TERM')
		MAP_GLS_TXT = MAP_FNC_WRWU('')
		MAP_GLS_TXT = MAP_FNC_WRWU('MessageField SDF-TRL-COD-CMND')
		MAP_GLS_TXT = MAP_FNC_WRWU('')
		MAP_GLS_TXT = MAP_FNC_WRWU('MessageField SDF-TRL-GLS-PRMT')
		MAP_GLS_TXT = MAP_FNC_WRWU('')
		MAP_GLS_TXT = MAP_FNC_WRWU('MessageField SDF-TRL-GLS-MENS')
		MAP_GLS_TXT = MAP_FNC_WRWU('')
	END IF
	IF MAP_VEC_DSPL_SDF(MAP_IND_CMPO) = MAP_CTE_NOT THEN
		UYS_NUM_SSEC = 1
	ELSE
		UYS_NUM_SSEC = 3
	END IF

	IF PUT_FST_FLD$ = "S" THEN
		MAP_GLS_TXT = MAP_FNC_WRWU('')
	END IF
	PUT_FST_FLD$ = "S"
	MAP_GLS_TXT = MAP_FNC_WRWU('MessageField SDF-' + MAP_VEC_FRTN(MAP_IND_CMPO) + AAA$ )
	IF MAP_VEC_DSPL_SDF(MAP_IND_CMPO) = MAP_CTE_NOT THEN
		MAP_GLS_TXT = MAP_FNC_WRWU('(Value =                                                              <<')
		MAP_GLS_TXT = MAP_FNC_WRWU('SDF-' + MAP_VEC_FRTN(MAP_IND_CMPO) + AAA$ )
		MAP_GLS_TXT = MAP_FNC_WRWU('>>')
		MAP_GLS_TXT = MAP_FNC_WRWU(')')
	END IF
	IF MAP_VEC_FRTN_SDF(MAP_IND_CMPO) > "" THEN
		MAP_GLS_TXT = MAP_FNC_WRWU('')
		MAP_GLS_TXT = MAP_FNC_WRWU('MessageField SDF-' + MAP_VEC_FRTN_SDF(MAP_IND_CMPO) + AAA$ )
		IF MAP_VEC_DSPL_SDF(MAP_IND_CMPO) = MAP_CTE_NOT THEN
			MAP_GLS_TXT = MAP_FNC_WRWU('(Value =                                                              <<')
			MAP_GLS_TXT = MAP_FNC_WRWU('SDF-' + MAP_VEC_FRTN_SDF(MAP_IND_CMPO) + AAA$ )
			MAP_GLS_TXT = MAP_FNC_WRWU('>>')
			MAP_GLS_TXT = MAP_FNC_WRWU(')')
		END IF
	END IF

	UYS_NUM_SSEC = 5
	MAP_GLS_TXT = MAP_FNC_WRWU('MessageField SDF-' + MAP_VEC_FRTN(MAP_IND_CMPO) + AAA$ + '-ATR') 
	MAP_GLS_TXT = MAP_FNC_WRWU('')
	MAP_GLS_TXT = MAP_FNC_WRWU('MessageField SDF-' + MAP_VEC_FRTN(MAP_IND_CMPO) + AAA$ + '-LEN')
	MAP_GLS_TXT = MAP_FNC_WRWU('')
	IF MAP_VEC_FRTN_SDF(MAP_IND_CMPO) > "" THEN
		MAP_GLS_TXT = MAP_FNC_WRWU('MessageField SDF-' + MAP_VEC_FRTN_SDF(MAP_IND_CMPO) + AAA$ + '-ATR') 
		MAP_GLS_TXT = MAP_FNC_WRWU('')
		MAP_GLS_TXT = MAP_FNC_WRWU('MessageField SDF-' + MAP_VEC_FRTN_SDF(MAP_IND_CMPO) + AAA$ + '-LEN')
		MAP_GLS_TXT = MAP_FNC_WRWU('')
	END IF

   NEXT L%

 FLD_LAB_FLD:
   END DEF
962

 ! Validacion de Campos No Indexados
 !
   DEF INTEGER GEN_FNC_VCNI
	IF MAP_VEC_CGEN(I%) <> MAP_CTE_YES THEN
		CALL PUT_GEN(MAP_OPT_GEN,WRT_BM,MG_B,"PERFORM VAL-" + MAP_VEC_FRTN(I%) + ".")
		CALL PUT_GEN(MAP_OPT_GEN,WRT_BM,MG_B,"IF FRM-SUAR = FRM-SUAR-MAL OR FRM-SUAR = FRM-SUAR-CLR")
		CALL PUT_GEN(MAP_OPT_GEN,WRT_BM,MG_1,"MOVE FRM-IND-ERRO TO " + MAP_VEC_FRTN(I%) + "-LEN" + IN_FRM_FLD)
		CALL PUT_GEN(MAP_OPT_GEN,WRT_BM,MG_1, "GO TO FIN-" + SECTION$ + ".")
	ELSE
		MAP_GLS_BP = WRT_BM
		JJ% = I%
		MAP_NUM_FNC = MAP_FNC_PRMF_BM1
		CALL PUT_GEN(MAP_OPT_GEN,WRT_BM,MG_N,'% TVAL = "' + MAP_GLS_TFLD + '"' )
 !!!		CALL PUT_GEN(MAP_OPT_GEN,WRT_BM,MG_N,IPTBM$ + MAP_VEC_FCMP(I%) +&
		CALL PUT_GEN(MAP_OPT_GEN,WRT_BM,MG_N,IPTBM$  +&
			"007" + TPTX$)
	END IF
   END DEF

 ! Validacion de Campos Indexados
 !
965
   DEF INTEGER GEN_FNC_VCSI
	IF MAP_VEC_CGEN(I%) <> MAP_CTE_YES THEN
		CALL PUT_GEN(MAP_OPT_GEN,WRT_BM,MG_B,"PERFORM VAL-" + MAP_VEC_FRTN(I%) )
		CALL PUT_GEN(MAP_OPT_GEN,WRT_BM,MG_B," VARYING FRM-IFLD FROM 1 BY 1 UNTIL FRM-IFLD > " + STR$(MAP_VEC_TIDX(I%)) )
		CALL PUT_GEN(MAP_OPT_GEN,WRT_BM,MG_B,"     OR FRM-SUAR = FRM-SUAR-MAL" )
		CALL PUT_GEN(MAP_OPT_GEN,WRT_BM,MG_B,"     OR FRM-SUAR = FRM-SUAR-CLR.")
		CALL PUT_GEN(MAP_OPT_GEN,WRT_BM,MG_B,"IF FRM-SUAR = FRM-SUAR-MAL OR FRM-SUAR = FRM-SUAR-CLR" )
		CALL PUT_GEN(MAP_OPT_GEN,WRT_BM,MG_1,"SUBTRACT 1 FROM FRM-IFLD")
		CALL PUT_GEN(MAP_OPT_GEN,WRT_BM,MG_1,"MOVE FRM-IND-ERRO TO " + MAP_VEC_FRTN(I%) + "-LEN" + IN_FRM_FLD + "(FRM-IFLD)" )
		CALL PUT_GEN(MAP_OPT_GEN,WRT_BM,MG_1,"GO TO FIN-" + SECTION$ + ".")
	ELSE
		JJ% = I%
		MAP_GLS_BP = WRT_BM
		MAP_NUM_FNC = MAP_FNC_PRMF_BM1
		CALL PUT_GEN(MAP_OPT_GEN,WRT_BM,MG_N,'% TVAL = "' + MAP_GLS_TFLD + '"' )
 !!!		CALL PUT_GEN(MAP_OPT_GEN,WRT_BM,MG_N,IPTBM$ + MAP_VEC_FCMP(MAP_IND_CMPO) +&
		CALL PUT_GEN(MAP_OPT_GEN,WRT_BM,MG_N,IPTBM$ + "007" + TPTX$)
	END IF
   END DEF

970

   DEF INTEGER MAP_FNC_COD
   FOR I% = 1 TO MAP_TOT_CMPO
	IF MAP_VEC_TIPO(I%) = "COD" OR &
           MAP_VEC_TCMP(I%) = "COD" THEN
           IF MAP_VEC_VAUT(I%) = 0 THEN
                MAP_VEC_VAUT(I%) = MAP_NUM_CODI 
	   END IF
		FOR J% = 1 TO MAP_TOT_CMPO
		  IF MAP_VEC_TIPO(J%) = "GLS" AND&
		     MAP_VEC_NOMB(J%) = MAP_VEC_NOMB(I%) OR&
		     MAP_VEC_NOMB(J%) = MAP_VEC_NOMB_AUX(I%) THEN
			MAP_VEC_GLOS(I%) = J%
			J% = MAP_TOT_CMPO + 1
		  END IF
	 	NEXT J%
	ELSE
	IF MAP_VEC_TIPO(I%) = "IND" OR&
           MAP_VEC_TIPO(I%) = "MSC" OR&
           MAP_VEC_TCMP(I%) = "IND" OR&
           MAP_VEC_TCMP(I%) = "MSC" THEN
           IF MAP_VEC_VAUT(I%) = 0 THEN
                MAP_VEC_VAUT(I%) = MAP_NUM_MISC
	   END IF
		FOR J% = 1 TO MAP_TOT_CMPO
		  IF MAP_VEC_TIPO(J%) = "GLS" AND&
		     MAP_VEC_NOMB(J%) = MAP_VEC_NOMB(I%) OR&
		     MAP_VEC_NOMB(J%) = MAP_VEC_NOMB_AUX(I%) THEN
			MAP_VEC_GLOS(I%) = J%
			J% = MAP_TOT_CMPO + 1
		  END IF
	 	NEXT J%
	END IF
	END IF
   NEXT I%
   END DEF

   DEF INTEGER MAP_FNC_VCOD
     IF MAP_GLS_VCOD <> "NO" THEN
        CALL PUT_GEN(MAP_OPT_GEN,WRT_BM,MG_N,'*% SIS = "' + DMN::DMN_COD_SIST + '"')
        CALL PUT_GEN(MAP_OPT_GEN,WRT_BM,MG_N,'*% TAB = "' + DMN::DMN_COD_TABL + '"')
        CALL PUT_GEN(MAP_OPT_GEN,WRT_BM,MG_N,'*% FLD = "' + MAP_VEC_FRTN(MAP_NUM_ICOD) + '"')
        CALL PUT_GEN(MAP_OPT_GEN,WRT_BM,MG_N,'*% GLS = "' +MAP_VEC_FRTN(MAP_VEC_GLOS(MAP_NUM_ICOD)) + '"')
        CALL PUT_GEN(MAP_OPT_GEN,WRT_BM,MG_N,'*% TIENE_GLOSA = ' + MAP_GLS_GCOD )
        CALL PUT_GEN(MAP_OPT_GEN,WRT_BM,MG_N,'*% LGL = ' + STR$( MAP_VEC_LGLS(MAP_VEC_GLOS(MAP_NUM_ICOD)) ) )
        CALL PUT_GEN(MAP_OPT_GEN,WRT_BM,MG_N,"*% INCLUDE '" + MAP_GLS_VCOD + "'")
     END IF
   END DEF

   DEF INTEGER MAP_FNC_VIND
     IF MAP_GLS_VIND <> "NO" THEN
        CALL PUT_GEN(MAP_OPT_GEN,WRT_BM,MG_N,'*% SIS = "' + DMN::DMN_COD_SIST + '"')
  !JSS  CALL PUT_GEN(MAP_OPT_GEN,WRT_BM,MG_N,'*% MSC = "' + DMN::DMN_COD_TABL + '"')
        CALL PUT_GEN(MAP_OPT_GEN,WRT_BM,MG_N,'*% TAB = "' + DMN::DMN_COD_TABL + '"')
  !
        CALL PUT_GEN(MAP_OPT_GEN,WRT_BM,MG_N,'*% FLD = "' + MAP_VEC_FRTN(MAP_NUM_IIND) + '"')
        CALL PUT_GEN(MAP_OPT_GEN,WRT_BM,MG_N,'*% GLS = "' + MAP_VEC_FRTN(MAP_VEC_GLOS(MAP_NUM_IIND)) + '"' )
        CALL PUT_GEN(MAP_OPT_GEN,WRT_BM,MG_N,'*% TIENE_GLOSA = ' + MAP_GLS_GIND )
        CALL PUT_GEN(MAP_OPT_GEN,WRT_BM,MG_N,'*% LGL = ' + STR$( MAP_VEC_LGLS(MAP_VEC_GLOS(MAP_NUM_IIND)) ) )
        CALL PUT_GEN(MAP_OPT_GEN,WRT_BM,MG_N,"*% INCLUDE '" + MAP_GLS_VIND + "'")
     END IF
   END DEF

   DEF INTEGER MAP_FNC_BUS
	FOR I% = 1 TO MAP_TOT_CMPO
		IF MAP_VEC_BUS(I%) = MAP_IND_IDC THEN
			FOR J% = 1 TO MAP_TOT_CMPO
				IF MAP_VEC_NOMB(I%) = MAP_VEC_NOMB(J%) AND&
				   MAP_VEC_TIPO(J%) = "VRF" THEN
				      MAP_VEC_IOV(J%) = MAP_IND_IDC
				END IF
			NEXT J%
		END IF
	NEXT I%
   END DEF

 !!!   FUNCIONES MODULO DE MANEJO
 !!!   ==========================

   DEF INTEGER PUT_SDF_FRM
	CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BA,MG_A,"PUT-SDF-FRM-" + MAP_GLS_MAPA + " SECTION.")
	CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BA,MG_A,"INI-PUT-SDF-FRM-" + MAP_GLS_MAPA + ".")
	CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BA,MG_N,"*% INCLUDE INI_PUT_SDF_FRM_" + MAP_GLS_MAPA +MAP_GLS_PBM)
	FOR I% = 1 TO MAP_TOT_CMPO
		NUM_ALF$ = "    "
		IF MAP_VEC_NUME(I%) = MAP_CTE_YES THEN
			NUM_ALF$ = "-ALF"
		END IF
		IF MAP_VEC_DSPL_SDF(I%) = MAP_CTE_NOT THEN
			IF MAP_VEC_TIDX(I%) > 1 THEN
				FOR M% = 1 TO MAP_VEC_TIDX(I%)
					CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BA,MG_B,"MOVE SDF-" + MAP_VEC_FRTN(I%) +&
						 STR$(M%) + " TO " + MAP_VEC_FRTN(I%) + NUM_ALF$ + IN_FRM_FLD +&
						 MAP_GLS_VIX(M%) + "." )
 !!! SE DEBE DETERMINAR SI ALGUN CAMPOS ASOCIADO, COMO POR EJEMPLO -VRF- O -GLS- PUEDE EVENTUALMENTE SER NUMERICO
 !!! PARA MOVERLO A AREA "-ALF"
					NUM_ALF$ = "    "
					IF MAP_VEC_FRTN_SDF(I%) > "" THEN
						CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BA,MG_B,"MOVE SDF-" + MAP_VEC_FRTN_SDF(I%) +&
						 STR$(M%) + " TO " + MAP_VEC_FRTN_SDF(I%) + IN_FRM_FLD + MAP_GLS_VIX(M%) + "." )
					END IF
				NEXT M%
			ELSE
				CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BA,MG_B,"MOVE SDF-" + MAP_VEC_FRTN(I%) + " TO " +&
					MAP_VEC_FRTN(I%) + NUM_ALF$ + IN_FRM_FLD + "." )
 !!! SE DEBE DETERMINAR SI ALGUN CAMPOS ASOCIADO, COMO POR EJEMPLO -VRF- O -GLS- PUEDE EVENTUALMENTE SER NUMERICO
 !!! PARA MOVERLO A AREA "-ALF"
				NUM_ALF$ = "    "
				IF MAP_VEC_FRTN_SDF(I%) > "" THEN
					CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BA,MG_B,"MOVE SDF-" + MAP_VEC_FRTN_SDF(I%) + " TO " +&
					MAP_VEC_FRTN_SDF(I%) + IN_FRM_FLD + "." )
				END IF
			END IF
		END IF
	NEXT I%
	CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BA,MG_N,"*% INCLUDE FIN_PUT_SDF_FRM_" + MAP_GLS_MAPA +MAP_GLS_PBM )
	CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BA,MG_A,"FIN-PUT-SDF-FRM-" + MAP_GLS_MAPA + ".")
	CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BA,MG_B,"EXIT.")
   END DEF

   DEF INTEGER PUT_SCR_SDF
	CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BA,MG_A,"PUT-SCR-SDF-" + MAP_GLS_MAPA + " SECTION.")
	CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BA,MG_A,"INI-PUT-SCR-SDF-" + MAP_GLS_MAPA + ".")
	CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BA,MG_B,"MOVE SCR-HDR-COD-FUNC TO SDF-HDR-COD-FUNC IN " + MAPUYS + ".")
	CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BA,MG_B,"MOVE SCR-HDR-GLS-GLS1 TO SDF-HDR-GLS-GLS1 IN " + MAPUYS + ".")
	CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BA,MG_B,"MOVE SCR-HDR-GLS-GLS2 TO SDF-HDR-GLS-GLS2 IN " + MAPUYS + ".")
	CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BA,MG_B,"MOVE SCR-HDR-GLS-GLS3 TO SDF-HDR-GLS-GLS3 IN " + MAPUYS + ".")
	CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BA,MG_B,"MOVE SCR-HDR-COD-SIST TO SDF-HDR-COD-SIST IN " + MAPUYS + ".")
	CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BA,MG_B,"MOVE SCR-HDR-GLS-NFRM TO SDF-HDR-GLS-NFRM IN " + MAPUYS + ".")
	CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BA,MG_B,"MOVE SCR-HDR-GLS-FPRO TO SDF-HDR-GLS-FPRO IN " + MAPUYS + ".")
	CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BA,MG_B,"MOVE SCR-HDR-FEC-DMSA TO SDF-HDR-FEC-DMSA IN " + MAPUYS + ".")
	CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BA,MG_B,"MOVE SCR-TRL-GLS-TERM TO SDF-TRL-GLS-TERM IN " + MAPUYS + ".")
	CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BA,MG_B,"MOVE SCR-TRL-COD-CMND TO SDF-TRL-COD-CMND IN " + MAPUYS + ".")
	CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BA,MG_B,"MOVE SCR-TRL-GLS-PRMT TO SDF-TRL-GLS-PRMT IN " + MAPUYS + ".")
	CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BA,MG_B,"MOVE SCR-TRL-GLS-MENS TO SDF-TRL-GLS-MENS IN " + MAPUYS + ".")
	CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BA,MG_A,"FIN-PUT-SCR-SDF-" + MAP_GLS_MAPA + ".")
	CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BA,MG_B,"EXIT.")
   END DEF

   DEF INTEGER PUT_FRM_SDF
	CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BA,MG_A,"PUT-FRM-SDF-" + MAP_GLS_MAPA + " SECTION.")
	CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BA,MG_A,"INI-PUT-FRM-SDF-" + MAP_GLS_MAPA + ".")
	CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BA,MG_N,"*% INCLUDE INI_PUT_FRM_SDF_" + MAP_GLS_MAPA +MAP_GLS_PBM)
	FOR I% = 1 TO MAP_TOT_CMPO
 !!!		IF MAP_VEC_REGI(I%) <> "FRM" THEN
			NUM_ALF$ = "    "
			IF MAP_VEC_NUME(I%) = MAP_CTE_YES THEN
				NUM_ALF$ = "-ALF"
			END IF
			IF MAP_VEC_TIDX(I%) > 1 THEN
				FOR M% = 1 TO MAP_VEC_TIDX(I%)
					CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BA,MG_B,"MOVE " + MAP_VEC_FRTN(I%) + NUM_ALF$ +&
						IN_FRM_FLD + MAP_GLS_VIX(M%) + " TO SDF-" + MAP_VEC_FRTN(I%) + STR$(M%) + "." )
					CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BA,MG_B,"MOVE " + MAP_VEC_FRTN(I%) + "-LEN" + &
						IN_FRM_FLD + MAP_GLS_VIX(M%) + " TO SDF-" + MAP_VEC_FRTN(I%) + STR$(M%) + "-LEN." )
					CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BA,MG_B,"MOVE " + MAP_VEC_FRTN(I%) + "-ATR" +&
						IN_FRM_FLD + MAP_GLS_VIX(M%) + " TO SDF-" + MAP_VEC_FRTN(I%) + STR$(M%) + "-ATR." )
 !!! SE DEBE DETERMINAR SI ALGUN CAMPOS ASOCIADO, COMO POR EJEMPLO -VRF- O -GLS- PUEDE EVENTUALMENTE SER NUMERICO
 !!! PARA MOVER DESDE AREA "-ALF"
					NUM_ALF$ = "    "
					IF MAP_VEC_FRTN_SDF(I%) > "" THEN
						CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BA,MG_B,"MOVE " + MAP_VEC_FRTN_SDF(I%) +&
							NUM_ALF$ + IN_FRM_FLD + MAP_GLS_VIX(M%) + " TO SDF-" +&
							MAP_VEC_FRTN_SDF(I%) + STR$(M%) + "." )
						CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BA,MG_B,"MOVE " + MAP_VEC_FRTN_SDF(I%) +&
							"-LEN" + IN_FRM_FLD + MAP_GLS_VIX(M%) + " TO SDF-" +&
							 MAP_VEC_FRTN_SDF(I%) + STR$(M%) + "-LEN." )
						CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BA,MG_B,"MOVE " + MAP_VEC_FRTN_SDF(I%) +&
							"-ATR" + IN_FRM_FLD + MAP_GLS_VIX(M%) + " TO SDF-" +&
							 MAP_VEC_FRTN_SDF(I%) + STR$(M%) + "-ATR." )
					END IF
				NEXT M%
			ELSE
				CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BA,MG_B,"MOVE " + MAP_VEC_FRTN(I%) + NUM_ALF$ + IN_FRM_FLD +&
					" TO SDF-" + MAP_VEC_FRTN(I%) + "." )
				CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BA,MG_B,"MOVE " + MAP_VEC_FRTN(I%) + "-LEN" + IN_FRM_FLD +&
					" TO SDF-" + MAP_VEC_FRTN(I%) + "-LEN." )
				CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BA,MG_B,"MOVE " + MAP_VEC_FRTN(I%) + "-ATR" + IN_FRM_FLD +&
					" TO SDF-" + MAP_VEC_FRTN(I%) + "-ATR." )
 !!! SE DEBE DETERMINAR SI ALGUN CAMPOS ASOCIADO, COMO POR EJEMPLO -VRF- O -GLS- PUEDE EVENTUALMENTE SER NUMERICO
 !!! PARA MOVER DESDE AREA "-ALF"
				NUM_ALF$ = "    "
				IF MAP_VEC_FRTN_SDF(I%) > "" THEN
					CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BA,MG_B,"MOVE " + MAP_VEC_FRTN_SDF(I%) + NUM_ALF$ + IN_FRM_FLD +&
						" TO SDF-" + MAP_VEC_FRTN_SDF(I%) + "." )
					CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BA,MG_B,"MOVE " + MAP_VEC_FRTN_SDF(I%) + "-LEN" + IN_FRM_FLD +&
						" TO SDF-" + MAP_VEC_FRTN_SDF(I%) + "-LEN." )
					CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BA,MG_B,"MOVE " + MAP_VEC_FRTN_SDF(I%) + "-ATR" + IN_FRM_FLD +&
						" TO SDF-" + MAP_VEC_FRTN_SDF(I%) + "-ATR." )
				END IF
			END IF
 !!!		END IF
	NEXT I%
	CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BA,MG_B,"MOVE " + MAP_GLS_MAPA + "-GLS-MENS    " + IN_FRM_FLD +&
		" TO SDF-TRL-GLS-MENS.")
	CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BA,MG_B,"MOVE SPACES TO SDF-HDR-COD-CACC.")
	CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BA,MG_N,"*% INCLUDE FIN_PUT_FRM_SDF_" + MAP_GLS_MAPA +MAP_GLS_PBM )
	CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BA,MG_A,"FIN-PUT-FRM-SDF-" + MAP_GLS_MAPA + ".")
	CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BA,MG_B,"EXIT.")
   END DEF

   DEF INTEGER GEN_PUT_ALL
	CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BA,MG_N,'*% FRM = "' + MAP_GLS_MAPA + '"' )
	CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BA,MG_N,'% FRM = "' + MAP_GLS_MAPA + '"' )
	CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BA,MG_N,"% ARCA = " + '"' + MAP_GLS_PBM + '"' )
	CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BQ,MG_C,"* " + MAP_GLS_IDEN)
	CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BQ,MG_N,"*% INI_LBL = TRUE")
	CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BQ,MG_N,"*% PGM_BQ = TRUE")
	CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BQ,MG_A,"PUT-ALL-" + MAP_GLS_MAPA + " SECTION.")
	CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BQ,MG_A,"INI-PUT-ALL-" + MAP_GLS_MAPA + ".")
	CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BQ,MG_N,"*% INCLUDE INI_PUT_ALL_" + MAP_GLS_MAPA +MAP_GLS_PBM)
	FOR I% = 1 TO MAP_TOT_FILE
		CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BQ,MG_B,"PERFORM PUT-" + MAP_VEC_FIL(I%) + "-" + MAP_GLS_MAPA + ".")
		PRINT #MAP_CNL_FINF,'% RG' + STR$(I%) + ' = "' + MAP_VEC_FIL(I%) + '"'
	NEXT I%
	PRINT #MAP_CNL_FINF,'% TRG = ' + STR$(MAP_TOT_FILE)
	CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BQ,MG_N,"*% INCLUDE FIN_PUT_ALL_" + MAP_GLS_MAPA +MAP_GLS_PBM )
	CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BQ,MG_A,"FIN-PUT-ALL-" + MAP_GLS_MAPA + ".")
	CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BQ,MG_B,"EXIT.")
   END DEF

   DEF INTEGER GEN_PUT_REG
	FOR I% = 1 TO MAP_TOT_FILE
		CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BQ,MG_C," ")
		CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BQ,MG_A,"PUT-" + MAP_VEC_FIL(I%) + "-" + MAP_GLS_MAPA + " SECTION.")
		CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BQ,MG_A,"INI-PUT-" + MAP_VEC_FIL(I%) + "-" + MAP_GLS_MAPA +".")
		CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BQ,MG_N,"*% INCLUDE INI_PUT_" + MAP_VEC_FIL(I%) +&
			"_" + MAP_GLS_MAPA + MAP_GLS_PBM )
		CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BQ,MG_N,'*% REG = "' + MAP_VEC_FIL(I%) + '"')

		CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BQ,MG_B,"IF PGM-STAT-" + MAP_VEC_FIL(I%) + "-NUL")
		CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BQ,MG_B,"    GO TO FIN-PUT-" + MAP_VEC_FIL(I%) +&
			"-" + MAP_GLS_MAPA + ".")
		CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BQ,MG_B,"IF NOT PGM-STAT-" + MAP_VEC_FIL(I%) + "-OKS")
		CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BQ,MG_B,"    PERFORM CLR-" + MAP_VEC_FIL(I%) + "-" + MAP_GLS_MAPA)
		CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BQ,MG_B,"    GO TO FIN-PUT-" + MAP_VEC_FIL(I%) +&
			"-" + MAP_GLS_MAPA + ".")

		FOR J% = 1 TO MAP_TOT_CMPO
			IF MAP_VEC_FIL(I%) = MAP_VEC_REGI(J%) AND &
			   MAP_VEC_MOVE(J%) = MAP_CTE_YES   THEN
				IF MAP_VEC_CGEN(J%) <> MAP_CTE_YES THEN
					IF MAP_VEC_TIDX(J%) > 1 THEN
						CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BQ,MG_C,"*")
						CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BQ,MG_C, "*    CAMPO INDEXADO   " +&
							 MAP_VEC_FRTN(J%) )
						FOR M% = 1 TO MAP_VEC_TIDX(J%)
							CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BQ,MG_B,"MOVE " + MAP_VEC_RRTN(J%) +&
								 " IN " + MAP_VEC_FIL(I%) + MAP_GLS_VIX(M%) + " TO " +&
								 MAP_VEC_FRTN(J%) + IN_FRM_FLD + MAP_GLS_VIX(M%) + "." )
						NEXT M%
					ELSE
						CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BQ,MG_B,"MOVE " + MAP_VEC_RRTN(J%) + " IN " +&
							MAP_VEC_FIL(I%) + " TO " + MAP_VEC_FRTN(J%) + IN_FRM_FLD + "." )
					END IF
				ELSE
					JJ% = J%
					MAP_GLS_BP = MAP_GLS_BQ
					MAP_NUM_FNC = MAP_FNC_PRMF_BM1
 !!!					CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BQ,MG_N,IPTBM$ + MAP_VEC_FCMP(MAP_IND_CMPO) + "001" +&
					CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BQ,MG_N,IPTBM$ + "001" +&
						TPTX$)
				END IF
			END IF
		NEXT J%
972
	FOR J% = 1 TO MAP_TOT_CMPO
		IF MAP_VEC_FIL(I%) = MAP_VEC_REGI(J%) THEN
			IF MAP_VEC_VAUT(J%) <> MAP_CTE_NOT THEN
				IF MAP_VEC_TIDX(J%) > 1 THEN
					MAP_GLS_INDI$ = MAP_GLS_MAPA + "-FLD(FRM-IFLD)"
				ELSE
					MAP_GLS_INDI$ = MAP_GLS_MAPA + "-FLD"
				END IF
				AUX_RCR$ = MAP_VEC_FRTN(J%)
				CALL GENRPTREP(AUX_RCR$,"_","-")
				RCR::RCR_COD_RECO = AUX_RCR$
				FIO_CMND = "GET_KEY             "
				CALL "GNSFIORCR" BY REF (FIO_CMND)
				IF FIO_STAT = FIO_STAT_OKS THEN
					MAP_NUM_FNC = MAP_FNC_GDMN
					IF FIO_STAT = FIO_STAT_OKS THEN
						IF MAP_VEC_GLOS(J%) > 0 THEN
							IF MAP_VEC_VAUT(J%) = MAP_NUM_CODI THEN
								IF DMN::DMN_GLS_BUSQ <= " " OR &
								   DMN::DMN_GLS_BUSQ  = "BUSTAB" THEN
									MAP_GLS_VCOD = 'BUSTAB'
									BUSTAB$ = "TRUE"
								ELSE
									MAP_GLS_VCOD = DMN::DMN_GLS_BUSQ
									IF MAP_GLS_VCOD = "BUSOFI" THEN
										BUSOFI$ = "TRUE"
									ELSE
										IF MAP_GLS_VCOD = "BUSUSR" THEN
											BUSUSR$ = "TRUE"
										END IF
									END IF
								END IF
								MAP_GLS_GCOD = 'TRUE'
								MAP_NUM_ICOD = J%
								CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BQ,MG_N,'*% BUF = "' + MAP_GLS_INDI$ + '"')
								WRT_BM = "BQ"
								MAP_NUM_FNC = MAP_FNC_VCOD
							ELSE
								IF MAP_VEC_VAUT(J%) = MAP_NUM_MISC THEN
									IF DMN::DMN_GLS_BUSQ <= " " OR&
									   DMN::DMN_GLS_BUSQ  = "BUSMSC" THEN
										MAP_GLS_VIND = 'BUSMSC'
										BUSMSC$ = "TRUE"
									ELSE
										MAP_GLS_VIND = DMN::DMN_GLS_BUSQ
										IF MAP_GLS_VIND = "BUSOFI" THEN
											BUSOFI$ = "TRUE"
											ELSE
												IF MAP_GLS_VIND = "BUSUSR" THEN
													BUSUSR$ = "TRUE"
												END IF
										END IF
									END IF
									MAP_GLS_GIND = 'TRUE'
									MAP_NUM_IIND = J%
									CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BQ,MG_N,'*% BUF = "' + MAP_GLS_INDI$ + '"')
									WRT_BM = "BQ"
									MAP_NUM_FNC = MAP_FNC_VIND
								END IF
							END IF
						END IF
					END IF
				END IF
			END IF
		END IF
	NEXT J%
		CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BQ,MG_N,"*% INCLUDE FIN_PUT_" + MAP_VEC_FIL(I%) + "_" + MAP_GLS_MAPA +&
			MAP_GLS_PBM )
		CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BQ,MG_A,"FIN-PUT-" + MAP_VEC_FIL(I%) + "-" + MAP_GLS_MAPA + ".")
		CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BQ,MG_B,"EXIT.")
	NEXT I%
   END DEF

   DEF INTEGER GEN_RET_ALL
	CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BU,MG_C,"* " + MAP_GLS_IDEN)
	CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BU,MG_N,"*% INI_LBL = TRUE")
	CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BU,MG_N,"*% PGM_BU = TRUE")
	CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BU,MG_A,"RET-ALL-" + MAP_GLS_MAPA + " SECTION.")
	CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BU,MG_A,"INI-RET-ALL-" + MAP_GLS_MAPA + ".")
	CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BU,MG_N,"*% INCLUDE INI_RET_ALL_" +MAP_GLS_MAPA+ MAP_GLS_PBM )
	CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BU,MG_B,"PERFORM KEY-ALL-" + MAP_GLS_MAPA + ".")
	FOR I% = 1 TO MAP_TOT_FILE
		CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BU,MG_B,"PERFORM RET-"+MAP_VEC_FIL(I%)+"-" + MAP_GLS_MAPA + ".")
	NEXT I%
	CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BU,MG_N,"*% INCLUDE FIN_RET_ALL_" + MAP_GLS_MAPA+MAP_GLS_PBM )
	CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BU,MG_A,"FIN-RET-ALL-" + MAP_GLS_MAPA + ".")
	CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BU,MG_B,"EXIT.")
   END DEF

   DEF INTEGER GEN_RET_REG
	FOR I% = 1 TO MAP_TOT_FILE
		CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BU,MG_C," ")
		CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BU,MG_A,"RET-" + MAP_VEC_FIL(I%) + "-" + MAP_GLS_MAPA + " SECTION.")
		CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BU,MG_A,"INI-RET-" + MAP_VEC_FIL(I%) + "-" + MAP_GLS_MAPA + ".")
		CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BU,MG_N,"*% INCLUDE INI_RET_" + MAP_VEC_FIL(I%) + "_" + MAP_GLS_MAPA +&
			 MAP_GLS_PBM )
		FOR J% = 1 TO MAP_TOT_CMPO
			IF MAP_VEC_FIL(I%)  = MAP_VEC_REGI(J%) AND &
			   MAP_VEC_MOVE(J%) = MAP_CTE_YES     AND &
			   MAP_VEC_TFLD(J%) = MAP_IND_FLD     THEN
				IF MAP_VEC_CGEN(J%) <> MAP_CTE_YES THEN
					IF MAP_VEC_TIDX(J%) > 1 THEN
						CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BU,MG_C,"*")
						CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BU,MG_C,"*    CAMPO INDEXADO   " +&
							 MAP_VEC_FRTN(J%) )
						FOR M% = 1 TO MAP_VEC_TIDX(J%)
							CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BU,MG_B,"MOVE " + MAP_VEC_FRTN(J%) +&
								IN_FRM_FLD + MAP_GLS_VIX(M%) + " TO " + MAP_VEC_RRTN(J%) + " IN " +&
								MAP_VEC_FIL(I%) + MAP_GLS_VIX(M%) + "." )
						NEXT M%
					ELSE
						CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BU,MG_B,"MOVE " + MAP_VEC_FRTN(J%) + IN_FRM_FLD +&
							" TO " + MAP_VEC_RRTN(J%) + " IN " + MAP_VEC_FIL(I%) + "." )
					END IF
				ELSE
					JJ% = J%
					MAP_GLS_BP = MAP_GLS_BU
					MAP_NUM_FNC = MAP_FNC_PRMF_BM1
 !!!					CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BU,MG_N,IPTBM$ + MAP_VEC_FCMP(MAP_IND_CMPO) + "002" +&
					CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BU,MG_N,IPTBM$ + "002" +&
						TPTX$)
				END IF
			END IF
		NEXT J%
		CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BU,MG_N,"*% INCLUDE FIN_RET_" + MAP_VEC_FIL(I%) + "_" + MAP_GLS_MAPA +&
			MAP_GLS_PBM )
		CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BU,MG_A,"FIN-RET-" + MAP_VEC_FIL(I%) + "-" + MAP_GLS_MAPA + ".")
		CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BU,MG_B,"EXIT.")
	NEXT I%
   END DEF

   DEF INTEGER GEN_KEY_ALL
	CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BA,MG_C," ")
	CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BA,MG_A,"KEY-ALL-" + MAP_GLS_MAPA + " SECTION.")
	CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BA,MG_A,"INI-KEY-ALL-" + MAP_GLS_MAPA + ".")
	CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BA,MG_N,"*% INCLUDE INI_KEY_ALL_" + MAP_GLS_MAPA+MAP_GLS_PBM )
	FOR I% = 1 TO MAP_TOT_FILE
		CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BA,MG_B,"PERFORM KEY-" + MAP_VEC_FIL(I%) + "-" + MAP_GLS_MAPA + ".")
	NEXT I%
	CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BA,MG_N,"*% INCLUDE FIN_KEY_ALL_" + MAP_GLS_MAPA+MAP_GLS_PBM )
	CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BA,MG_A,"FIN-KEY-ALL-" + MAP_GLS_MAPA + ".")
	CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BA,MG_B,"EXIT.")
   END DEF

   DEF INTEGER GEN_KEY_REG
	FOR I% = 1 TO MAP_TOT_FILE
		CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BA,MG_C," ")
		CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BA,MG_A,"KEY-" + MAP_VEC_FIL(I%) + "-" + MAP_GLS_MAPA + " SECTION.")
		CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BA,MG_A,"INI-KEY-" + MAP_VEC_FIL(I%) + "-" + MAP_GLS_MAPA + ".")
		CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BA,MG_N,"*% INCLUDE INI_KEY_" + MAP_VEC_FIL(I%) +&
			"_" + MAP_GLS_MAPA + MAP_GLS_PBM )
		FOR J% = 1 TO MAP_TOT_CMPO
			IF  MAP_VEC_FIL(I%)  =  MAP_VEC_REGI(J%)   AND &
			    MAP_VEC_TFLD(J%) <> MAP_IND_FLD   THEN
				IF MAP_VEC_MOVE(J%) = MAP_CTE_YES THEN
					IF MAP_VEC_CGEN(J%) <> MAP_CTE_YES THEN
						IF MAP_VEC_TIDX(J%) > 1 THEN
							FOR M% = 1 TO MAP_VEC_TIDX(J%)
								CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BA,MG_B,"MOVE " +&
									MAP_VEC_FRTN(J%) + IN_FRM_FLD + MAP_GLS_VIX(M%) +&
									" TO " + MAP_VEC_RRTN(J%) + " IN " + MAP_VEC_FIL(I%)  +&
									MAP_GLS_VIX(M%) + "." )
							NEXT M%
						ELSE
							CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BA,MG_B,"MOVE "   +&
								MAP_VEC_FRTN(J%) + IN_FRM_FLD + " TO " + MAP_VEC_RRTN(J%) +&
								" IN " + MAP_VEC_FIL(I%) + "." )
						END IF
					ELSE
						JJ% = J%
						MAP_GLS_BP = MAP_GLS_BA
						MAP_NUM_FNC = MAP_FNC_PRMF_BM1
 !!!						CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BA,MG_N,IPTBM$ + MAP_VEC_FCMP(MAP_IND_CMPO) +&
						CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BA,MG_N,IPTBM$ +&
							"002" + TPTX$)
					END IF
				END IF
			END IF
		NEXT J%
		CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BA,MG_N,"*% INCLUDE FIN_KEY_" + MAP_VEC_FIL(I%) + "_" + MAP_GLS_MAPA +&
			MAP_GLS_PBM )
		CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BA,MG_A,"FIN-KEY-" + MAP_VEC_FIL(I%) + "-" + MAP_GLS_MAPA + ".")
		CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BA,MG_B,"EXIT.")
	NEXT I%
   END DEF

   DEF INTEGER GEN_CLR_ALL
	CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BA,MG_C," ")
	CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BA,MG_A,"SCR-CLRA-" + MAP_GLS_MAPA + " SECTION.")
	CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BA,MG_A,"INI-SCR-CLRA-" + MAP_GLS_MAPA + ".")
	CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BA,MG_N,"*% INCLUDE INI_SCR_CLRA_"+ MAP_GLS_MAPA+MAP_GLS_PBM )
	CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BA,MG_B,"PERFORM CLR-KEY-" + MAP_GLS_MAPA + ".")
	CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BA,MG_B,"PERFORM CLR-FLD-" + MAP_GLS_MAPA + ".")
	CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BA,MG_N,"*% INCLUDE FIN_SCR_CLRA_" + MAP_GLS_MAPA+MAP_GLS_PBM )
	CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BA,MG_A,"FIN-SCR-CLRA-" + MAP_GLS_MAPA + ".")
	CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BA,MG_B,"EXIT.")
   END DEF

   DEF INTEGER GEN_CLR_KEY
	CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BA,MG_C," ")
	CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BA,MG_A,"CLR-KEY-" + MAP_GLS_MAPA + " SECTION.")
	CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BA,MG_A,"INI-CLR-KEY-" + MAP_GLS_MAPA + ".")
	CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BA,MG_N,"*% INCLUDE INI_CLR_KEY_" + MAP_GLS_MAPA+MAP_GLS_PBM )
	FOR I% = 1 TO MAP_TOT_CMPO
		IF MAP_VEC_SCLR(I%) = MAP_CTE_YES AND&
		   MAP_VEC_TFLD(I%) <> MAP_IND_FLD THEN
			IF MAP_VEC_CGEN(I%) <> MAP_CTE_YES THEN
				MAP_GLS_RED = ""
				MAP_AUX_VAL$ = "MOVE SPACES TO "
				IF MAP_VEC_NUME(I%) = MAP_CTE_YES OR&
				   MAP_VEC_FECH(I%) <> MAP_CTE_NOT THEN
					MAP_AUX_VAL$ = "MOVE ZEROES TO "
				END IF
				IF MAP_VEC_TIDX(I%) > 1 THEN
					FOR ZZ% = 1 TO MAP_VEC_TIDX(I%)
						CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BA,MG_B,MAP_AUX_VAL$ + MAP_VEC_FRTN(I%) +&
							IN_FRM_FLD + MAP_GLS_VIX(ZZ%) + ".")
					NEXT ZZ%
				ELSE
					CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BA,MG_B,MAP_AUX_VAL$ + MAP_VEC_FRTN(I%) + IN_FRM_FLD + ".")
				END IF
			ELSE
				JJ% = I%
				MAP_GLS_BP = MAP_GLS_BA
				MAP_NUM_FNC = MAP_FNC_PRMF_BM1
 !!!				CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BA,MG_N,IPTBM$ + MAP_VEC_FCMP(MAP_IND_CMPO) + "003" + TPTX$)
				CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BA,MG_N,IPTBM$ +  "003" + TPTX$)
			END IF
		END IF
	NEXT I%
	CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BA,MG_N,"*% INCLUDE FIN_CLR_KEY_" + MAP_GLS_MAPA+MAP_GLS_PBM )
	CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BA,MG_A,"FIN-CLR-KEY-" + MAP_GLS_MAPA + ".")
	CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BA,MG_B,"EXIT.")
   END DEF

   DEF INTEGER GEN_CLR_FLD
	CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BA,MG_C," ")
	CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BA,MG_A,"CLR-FLD-" + MAP_GLS_MAPA + " SECTION.")
	CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BA,MG_A,"INI-CLR-FLD-" + MAP_GLS_MAPA + ".")
	CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BA,MG_N,"*% INCLUDE INI_CLR_FLD_" + MAP_GLS_MAPA+MAP_GLS_PBM )
	FOR J% = 1 TO MAP_TOT_CMPO
		IF MAP_VEC_REGI(J%)   =  "FRM" AND &
		   MAP_VEC_SCLR(J%) =  MAP_CTE_YES AND&
		   MAP_VEC_TFLD(J%)  =  MAP_IND_FLD THEN
			MAP_AUX_VAL$ = "MOVE SPACES TO "
			IF MAP_VEC_NUME(J%) = MAP_CTE_YES OR&
			   MAP_VEC_FECH(J%) <> MAP_CTE_NOT THEN
				MAP_AUX_VAL$ = "MOVE ZEROES TO "
			END IF
			IF MAP_VEC_CGEN(J%) <> MAP_CTE_YES THEN
				IF MAP_VEC_TIDX(J%) > 1 THEN
					FOR ZZ% = 1 TO MAP_VEC_TIDX(J%)
						CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BA,MG_B,MAP_AUX_VAL$ +&
							MAP_VEC_FRTN(J%) + IN_FRM_FLD + MAP_GLS_VIX(ZZ%) + ".")
					NEXT ZZ%
				ELSE
					CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BA,MG_B,MAP_AUX_VAL$ +&
					MAP_VEC_FRTN(J%) + IN_FRM_FLD + ".")
				END IF
			ELSE
				JJ% = J%
				MAP_GLS_BP = MAP_GLS_BA
				MAP_NUM_FNC = MAP_FNC_PRMF_BM1
 !!!				CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BA,MG_N,IPTBM$ + MAP_VEC_FCMP(MAP_IND_CMPO) +&
				CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BA,MG_N,IPTBM$ +&
					"003" + TPTX$)
			END IF
		END IF
	NEXT J%
	FOR I% = 1 TO MAP_TOT_FILE
		CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BA,MG_B,"PERFORM CLR-" + MAP_VEC_FIL(I%) + "-" + MAP_GLS_MAPA + ".")
	NEXT I%
	CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BA,MG_N,"*% INCLUDE FIN_CLR_FLD_" + MAP_GLS_MAPA+MAP_GLS_PBM )
	CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BA,MG_A,"FIN-CLR-FLD-" + MAP_GLS_MAPA + ".")
	CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BA,MG_B,"EXIT.")
   END DEF

   DEF INTEGER GEN_CLR_FLS
	FOR I% = 1 TO MAP_TOT_FILE
		CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BA,MG_C," ")
		CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BA,MG_A,"CLR-" + MAP_VEC_FIL(I%) + "-" + MAP_GLS_MAPA + " SECTION.")
		CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BA,MG_A,"INI-CLR-" + MAP_VEC_FIL(I%) + "-"+MAP_GLS_MAPA + ".")
		CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BA,MG_N,"*% INCLUDE INI_CLR_" + MAP_VEC_FIL(I%) + "_" + MAP_GLS_MAPA +&
			MAP_GLS_PBM )
		FOR J% = 1 TO MAP_TOT_CMPO
			IF ( MAP_VEC_FIL(I%)   =  MAP_VEC_REGI(J%) AND &
			   MAP_VEC_REGI(J%)   <> "FRM" ) AND &
			   MAP_VEC_SCLR(J%) =  MAP_CTE_YES AND&
			   MAP_VEC_TFLD(J%)  =  MAP_IND_FLD THEN
				MAP_AUX_VAL$ = "MOVE SPACES TO "
				IF MAP_VEC_NUME(J%) = MAP_CTE_YES OR&
				   MAP_VEC_FECH(J%) <> MAP_CTE_NOT THEN
					MAP_AUX_VAL$ = "MOVE ZEROES TO "
				END IF
				IF MAP_VEC_CGEN(J%) <> MAP_CTE_YES THEN
					IF MAP_VEC_TIDX(J%) > 1 THEN
						FOR ZZ% = 1 TO MAP_VEC_TIDX(J%)
							CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BA,MG_B,MAP_AUX_VAL$ +&
								MAP_VEC_FRTN(J%) + IN_FRM_FLD + MAP_GLS_VIX(ZZ%) + ".")
						NEXT ZZ%
					ELSE
						CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BA,MG_B,MAP_AUX_VAL$ + MAP_VEC_FRTN(J%) + IN_FRM_FLD + ".")
					END IF
				ELSE
					JJ% = J%
					MAP_GLS_BP = MAP_GLS_BA
					MAP_NUM_FNC = MAP_FNC_PRMF_BM1
 !!!					CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BA,MG_N,IPTBM$ + MAP_VEC_FCMP(MAP_IND_CMPO) +&
					CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BA,MG_N,IPTBM$ +&
						"003" + TPTX$)
				END IF
			END IF
		NEXT J%
		CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BA,MG_N,"*% INCLUDE FIN_CLR_" + MAP_VEC_FIL(I%) +&
			"_" + MAP_GLS_MAPA + MAP_GLS_PBM )
		CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BA,MG_A,"FIN-CLR-" + MAP_VEC_FIL(I%) + "-"+MAP_GLS_MAPA + ".")
		CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BA,MG_B,"EXIT.")
	NEXT I%
   END DEF

   DEF INTEGER GEN_FST_KEY
	WRT_BM = "BA"
	CALL PUT_GEN(MAP_OPT_GEN,WRT_BM,MG_C," ")
	CALL PUT_GEN(MAP_OPT_GEN,WRT_BM,MG_A,"FST-KEY-" + MAP_GLS_MAPA + " SECTION.")
	CALL PUT_GEN(MAP_OPT_GEN,WRT_BM,MG_A,"INI-FST-KEY-" + MAP_GLS_MAPA + ".")
	CALL PUT_GEN(MAP_OPT_GEN,WRT_BM,MG_N,"*% INCLUDE INI_FST_KEY_" + MAP_GLS_MAPA+MAP_GLS_PBM )
	I% = 1
	WHILE I% <= MAP_TOT_CMPO
		IF MAP_VEC_PROT(I%) = MAP_CTE_YES AND&
		   MAP_VEC_PKEY(I%) = MAP_CTE_YES THEN
			MAP_GLS_IDX$ = "MOVE FRM-POS-CURS TO " + MAP_VEC_FRTN(I%) + "-LEN" + IN_FRM_FLD 
			IF MAP_VEC_CGEN(I%) <> MAP_CTE_YES THEN
				IF MAP_VEC_TIDX(I%) > 1 THEN
					FOR ZZ% = 1 TO MAP_VEC_TIDX(I%)
						CALL PUT_GEN(MAP_OPT_GEN,WRT_BM,MG_B,MAP_GLS_IDX$ +&
							IN_FRM_FLD + MAP_GLS_VIX(ZZ%) + ".")
					NEXT ZZ%
				ELSE
					CALL PUT_GEN(MAP_OPT_GEN,WRT_BM,MG_B,MAP_GLS_IDX$ + ".")
				END IF
				I% = MAP_TOT_CMPO + 1
			ELSE
				JJ% = I%
				MAP_GLS_BP = WRT_BM
				MAP_NUM_FNC = MAP_FNC_PRMF_BM1
 !!!				CALL PUT_GEN(MAP_OPT_GEN,WRT_BM,MG_N,IPTBM$ + MAP_VEC_FCMP(MAP_IND_CMPO) +&
				CALL PUT_GEN(MAP_OPT_GEN,WRT_BM,MG_N,IPTBM$ +&
					"004" + TPTX$)
				I% = MAP_TOT_CMPO + 1
			END IF
		ELSE
			I% = I% + 1
		END IF
	NEXT
	CALL PUT_GEN(MAP_OPT_GEN,WRT_BM,MG_N,"*% INCLUDE FIN_FST_KEY_" + MAP_GLS_MAPA+MAP_GLS_PBM )
	CALL PUT_GEN(MAP_OPT_GEN,WRT_BM,MG_A,"FIN-FST-KEY-" + MAP_GLS_MAPA + ".")
	CALL PUT_GEN(MAP_OPT_GEN,WRT_BM,MG_B,"EXIT.")
   END DEF

   DEF INTEGER GEN_FST_FLD
	CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BA,MG_C," ")
	CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BA,MG_A,"FST-FLD-" + MAP_GLS_MAPA + " SECTION.")
	CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BA,MG_A,"INI-FST-FLD-" + MAP_GLS_MAPA + ".")
	CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BA,MG_N,"*% INCLUDE INI_FST_FLD_" + MAP_GLS_MAPA+MAP_GLS_PBM )
	I% = 1
	WHILE I% <= MAP_TOT_CMPO
		IF MAP_VEC_PROT(I%) =  MAP_CTE_YES AND&
		   MAP_VEC_PFLD(I%) = MAP_CTE_YES THEN
			IF MAP_VEC_CGEN(I%) <> MAP_CTE_YES THEN
				IF MAP_VEC_TIDX(I%) > 1 THEN
					CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BA,MG_B,"MOVE FRM-POS-CURS TO " +&
						MAP_VEC_FRTN(I%) + "-LEN" + IN_FRM_FLD + "(1).")
				ELSE
					CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BA,MG_B,"MOVE FRM-POS-CURS TO " +&
					MAP_VEC_FRTN(I%) + "-LEN" + IN_FRM_FLD + ".")
				END IF
				I% = MAP_TOT_CMPO + 1
			ELSE
				JJ% = I%
				MAP_GLS_BP = MAP_GLS_BA
				MAP_NUM_FNC = MAP_FNC_PRMF_BM1
 !!!				CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BA,MG_N,IPTBM$ + MAP_VEC_FCMP(MAP_IND_CMPO) +&
				CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BA,MG_N,IPTBM$ +&
					"004" + TPTX$)
				I% = MAP_TOT_CMPO + 1
			END IF
		ELSE
			I% = I% + 1
		END IF
	NEXT
	CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BA,MG_N,"*% INCLUDE FIN_FST_FLD_" + MAP_GLS_MAPA+MAP_GLS_PBM )
	CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BA,MG_A,"FIN-FST-FLD-" + MAP_GLS_MAPA + ".")
	CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BA,MG_B,"EXIT.")
   END DEF

   DEF INTEGER GEN_PRO_KEY
	CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BA,MG_C," ")
	CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BA,MG_A,"PRO-KEY-" + MAP_GLS_MAPA + " SECTION.")
	CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BA,MG_A,"INI-PRO-KEY-" + MAP_GLS_MAPA + ".")
	CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BA,MG_N,"*% INCLUDE INI_PRO_KEY_" + MAP_GLS_MAPA+MAP_GLS_PBM )
	FOR J% = 1 TO MAP_TOT_CMPO
		IF MAP_VEC_TFLD(J%) <>  MAP_IND_FLD AND&
		   MAP_VEC_REGI(J%) =   "FRM"       AND &
		   MAP_VEC_PROT(J%) =   MAP_CTE_YES THEN
			IF MAP_VEC_CGEN(J%) <> MAP_CTE_YES THEN
				MAP_GLS_IDX$ = "MOVE " + MAP_GLS_BYA(MAP_VEC_BYA(J%)) +&
					" TO " + MAP_VEC_FRTN(J%) + "-ATR" + IN_FRM_FLD
				IF MAP_VEC_TIDX(J%) > 1 THEN
					FOR ZZ% = 1 TO MAP_VEC_TIDX(J%)
						CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BA,MG_B,MAP_GLS_IDX$ + MAP_GLS_VIX(ZZ%) + ".")
					NEXT ZZ%
				ELSE
					CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BA,MG_B,MAP_GLS_IDX$ + ".")
				END IF
			ELSE
				JJ% = J%
				MAP_GLS_BP = MAP_GLS_BA
				MAP_NUM_FNC = MAP_FNC_PRMF_BM1
 !!!				CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BA,MG_N,IPTBM$ + MAP_VEC_FCMP(MAP_IND_CMPO) +&
				CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BA,MG_N,IPTBM$ + "005" + TPTX$)
			END IF
		END IF
	NEXT J%
	CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BA,MG_B,"PERFORM PRO-IKY-" + MAP_GLS_MAPA + ".")
	CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BA,MG_B,"PERFORM PRO-AKY-" + MAP_GLS_MAPA + ".")
	CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BA,MG_B,"PERFORM PRO-MKY-" + MAP_GLS_MAPA + ".")
	CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BA,MG_N,"*% INCLUDE FIN_PRO_KEY_" + MAP_GLS_MAPA+MAP_GLS_PBM )
	CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BA,MG_A,"FIN-PRO-KEY-" + MAP_GLS_MAPA + ".")
	CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BA,MG_B,"EXIT.")
   END DEF
   
   DEF INTEGER GEN_PRO_IKY
	CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BA,MG_C," ")
	CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BA,MG_A,"PRO-IKY-" + MAP_GLS_MAPA + " SECTION.")
	CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BA,MG_A,"INI-PRO-IKY-" + MAP_GLS_MAPA + ".")
	CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BA,MG_N,"*% INCLUDE INI_PRO_IKY_" + MAP_GLS_MAPA+MAP_GLS_PBM )
	I% = 1
	FOR I% = 1 TO MAP_TOT_CMPO
		IF MAP_VEC_TFLD(I%) = MAP_IND_IKY AND&
		   MAP_VEC_PROT(I%) = MAP_CTE_YES THEN
			MAP_GLS_IDX$ = "MOVE " + MAP_GLS_BYA(MAP_VEC_BYA(I%)) +&
				" TO " + MAP_VEC_FRTN(I%) + "-ATR"
			IF MAP_VEC_CGEN(I%) <> MAP_CTE_YES THEN
				IF MAP_VEC_TIDX(I%) > 1 THEN
					FOR ZZ% = 1 TO MAP_VEC_TIDX(I%)
						CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BA,MG_B,MAP_GLS_IDX$ +&
							IN_FRM_FLD + MAP_GLS_VIX(ZZ%) + ".")
					NEXT ZZ%
				ELSE
					CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BA,MG_B,MAP_GLS_IDX$ + IN_FRM_FLD +".")
				END IF
			ELSE
				JJ% = I%
				MAP_GLS_BP = MAP_GLS_BQ
				MAP_NUM_FNC = MAP_FNC_PRMF_BM1
 !!!				CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BA,MG_N,IPTBM$ + MAP_VEC_FCMP(MAP_IND_CMPO) +&
				CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BA,MG_N,IPTBM$ +&
					"005" + TPTX$)
			END IF
		END IF
	NEXT I%
	CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BA,MG_N,"*% INCLUDE FIN_PRO_IKY_" + MAP_GLS_MAPA+MAP_GLS_PBM )
	CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BA,MG_A,"FIN-PRO-IKY-" + MAP_GLS_MAPA + ".")
	CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BA,MG_B,"EXIT.")
   END DEF
   
   DEF INTEGER GEN_PRO_MKY
	WRT_BM = "BA"
	CALL PUT_GEN(MAP_OPT_GEN,WRT_BM,MG_C," ")
	CALL PUT_GEN(MAP_OPT_GEN,WRT_BM,MG_A,"PRO-MKY-" + MAP_GLS_MAPA + " SECTION.")
	CALL PUT_GEN(MAP_OPT_GEN,WRT_BM,MG_A,"INI-PRO-MKY-" + MAP_GLS_MAPA + ".")
	CALL PUT_GEN(MAP_OPT_GEN,WRT_BM,MG_N,"*% INCLUDE INI_PRO_MKY_" + MAP_GLS_MAPA+MAP_GLS_PBM )
	FOR I% = 1 TO MAP_TOT_CMPO
		IF MAP_VEC_TFLD(I%) = MAP_IND_MKY AND&
		   MAP_VEC_PROT(I%) = MAP_CTE_YES THEN
			MAP_GLS_IDX$ = "MOVE " + MAP_GLS_BYA(MAP_VEC_BYA(I%)) +&
				" TO " + MAP_VEC_FRTN(I%) + "-ATR"
			IF MAP_VEC_CGEN(I%) <> MAP_CTE_YES THEN
				IF MAP_VEC_TIDX(I%) > 1 THEN
					FOR ZZ% = 1 TO MAP_VEC_TIDX(I%)
						CALL PUT_GEN(MAP_OPT_GEN,WRT_BM,MG_B,MAP_GLS_IDX$ +&
						IN_FRM_FLD + MAP_GLS_VIX(ZZ%) + "." )
					NEXT ZZ%
				ELSE
					CALL PUT_GEN(MAP_OPT_GEN,WRT_BM,MG_B,MAP_GLS_IDX$ + IN_FRM_FLD + ".")
				END IF
			ELSE
				JJ% = I%
				MAP_GLS_BP = WRT_BM
				MAP_NUM_FNC = MAP_FNC_PRMF_BM1
 !!!				CALL PUT_GEN(MAP_OPT_GEN,WRT_BM,MG_N,IPTBM$ + MAP_VEC_FCMP(MAP_IND_CMPO) +&
				CALL PUT_GEN(MAP_OPT_GEN,WRT_BM,MG_N,IPTBM$ +&
					"005" + TPTX$)
			END IF
		END IF
	NEXT I%
	CALL PUT_GEN(MAP_OPT_GEN,WRT_BM,MG_N,"*% INCLUDE FIN_PRO_MKY_" + MAP_GLS_MAPA+MAP_GLS_PBM )
	CALL PUT_GEN(MAP_OPT_GEN,WRT_BM,MG_A,"FIN-PRO-MKY-" + MAP_GLS_MAPA + ".")
	CALL PUT_GEN(MAP_OPT_GEN,WRT_BM,MG_B,"EXIT.")
   END DEF

   DEF INTEGER GEN_PRO_AKY
	CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BA,MG_C," ")
	CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BA,MG_A,"PRO-AKY-" + MAP_GLS_MAPA + " SECTION.")
	CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BA,MG_A,"INI-PRO-AKY-" + MAP_GLS_MAPA + ".")
	CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BA,MG_N,"*% INCLUDE INI_PRO_AKY_" + MAP_GLS_MAPA+MAP_GLS_PBM )
	FOR I% = 1 TO MAP_TOT_CMPO
		IF MAP_VEC_TFLD(I%) = MAP_IND_AKY AND&
		   MAP_VEC_PROT(I%) = MAP_CTE_YES THEN
			MAP_GLS_IDX$ = "MOVE " + MAP_GLS_BYA(MAP_VEC_BYA(I%)) +&
				" TO " + MAP_VEC_FRTN(I%) + "-ATR"
			IF MAP_VEC_CGEN(I%) <> MAP_CTE_YES THEN
				IF MAP_VEC_TIDX(I%) > 1 THEN
					FOR ZZ% = 1 TO MAP_VEC_TIDX(I%)
						CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BA,MG_B,MAP_GLS_IDX$ +&
						IN_FRM_FLD + MAP_GLS_VIX(ZZ%) + "." )
					NEXT ZZ%
				ELSE
					CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BA,MG_B,MAP_GLS_IDX$ + IN_FRM_FLD + ".")
				END IF
			ELSE
				JJ% = I%
				MAP_GLS_BP = MAP_GLS_BQ
				MAP_NUM_FNC = MAP_FNC_PRMF_BM1
 !!!				CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BA,MG_N,IPTBM$ + MAP_VEC_FCMP(MAP_IND_CMPO) +&
				CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BA,MG_N,IPTBM$ +&
					"005" + TPTX$)
			END IF
		END IF
	NEXT I%
	CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BA,MG_N,"*% INCLUDE FIN_PRO_AKY_" + MAP_GLS_MAPA+MAP_GLS_PBM )
	CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BA,MG_A,"FIN-PRO-AKY-" + MAP_GLS_MAPA + ".")
	CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BA,MG_B,"EXIT.")
   END DEF
   
   DEF INTEGER GEN_PRO_FLD
	WRT_BM = "BA"
	CALL PUT_GEN(MAP_OPT_GEN,WRT_BM,MG_C," ")
	CALL PUT_GEN(MAP_OPT_GEN,WRT_BM,MG_A,"PRO-FLD-" + MAP_GLS_MAPA + " SECTION.")
	CALL PUT_GEN(MAP_OPT_GEN,WRT_BM,MG_A,"INI-PRO-FLD-" + MAP_GLS_MAPA + ".")
	CALL PUT_GEN(MAP_OPT_GEN,WRT_BM,MG_N,"*% INCLUDE INI_PRO_FLD_" + MAP_GLS_MAPA+MAP_GLS_PBM )
	FOR J% = 1 TO MAP_TOT_CMPO
		IF MAP_VEC_TFLD(J%) = MAP_IND_FLD AND &
		   MAP_VEC_REGI(J%) = "FRM"	AND &
		   MAP_VEC_PROT(J%) = MAP_CTE_YES THEN
			MAP_GLS_IDX$ = "MOVE " + MAP_GLS_BYA(MAP_VEC_BYA(J%)) +&
				" TO " + MAP_VEC_FRTN(J%) + "-ATR"
			IF MAP_VEC_CGEN(J%) <> MAP_CTE_YES THEN
				IF MAP_VEC_TIDX(J%) > 1 THEN
					FOR ZZ% = 1 TO MAP_VEC_TIDX(J%)
						CALL PUT_GEN(MAP_OPT_GEN,WRT_BM,MG_B,MAP_GLS_IDX$ + MAP_GLS_VIX(ZZ%) +&
						 IN_FRM_FLD + ".")
					NEXT ZZ%
				ELSE
					CALL PUT_GEN(MAP_OPT_GEN,WRT_BM,MG_B,MAP_GLS_IDX$ + IN_FRM_FLD + ".")
				END IF
			ELSE
				JJ% = J%
				MAP_GLS_BP = WRT_BM
				MAP_NUM_FNC = MAP_FNC_PRMF_BM1
 !!!				CALL PUT_GEN(MAP_OPT_GEN,WRT_BM,MG_N,IPTBM$ + MAP_VEC_FCMP(MAP_IND_CMPO) +&
				CALL PUT_GEN(MAP_OPT_GEN,WRT_BM,MG_N,IPTBM$ +&
					"005" + TPTX$)
			END IF
		END IF
	NEXT J%
	FOR I% = 1 TO MAP_TOT_FILE
		CALL PUT_GEN(MAP_OPT_GEN,WRT_BM,MG_B,"PERFORM PRO-" + MAP_VEC_FIL(I%) + "-" +&
			MAP_GLS_MAPA + ".")
	NEXT I%
	CALL PUT_GEN(MAP_OPT_GEN,WRT_BM,MG_N,"*% INCLUDE FIN_PRO_FLD_" + MAP_GLS_MAPA+MAP_GLS_PBM )
	CALL PUT_GEN(MAP_OPT_GEN,WRT_BM,MG_A,"FIN-PRO-FLD-" + MAP_GLS_MAPA + ".")
	CALL PUT_GEN(MAP_OPT_GEN,WRT_BM,MG_B,"EXIT.")
   END DEF
   
   DEF INTEGER GEN_PRO_FLS
	WRT_BM = "BA"
	FOR I% = 1 TO MAP_TOT_FILE
		CALL PUT_GEN(MAP_OPT_GEN,WRT_BM,MG_C," ")
		CALL PUT_GEN(MAP_OPT_GEN,WRT_BM,MG_A,"PRO-" + MAP_VEC_FIL(I%) + "-" + MAP_GLS_MAPA + " SECTION.")
		CALL PUT_GEN(MAP_OPT_GEN,WRT_BM,MG_A,"INI-PRO-" + MAP_VEC_FIL(I%) + "-"+MAP_GLS_MAPA + ".")
		CALL PUT_GEN(MAP_OPT_GEN,WRT_BM,MG_N,"*% INCLUDE INI_PRO_" + MAP_VEC_FIL(I%) + "_" + MAP_GLS_MAPA + MAP_GLS_PBM )
		FOR J% = 1 TO MAP_TOT_CMPO
			IF MAP_VEC_TFLD(J%) = MAP_IND_FLD AND &
			   MAP_VEC_FIL(I%)  = MAP_VEC_REGI(J%) AND &
			   MAP_VEC_PROT(J%) = MAP_CTE_YES THEN
				MAP_GLS_IDX$ = "MOVE " + MAP_GLS_BYA(MAP_VEC_BYA(J%)) +&
					" TO " + MAP_VEC_FRTN(J%) + "-ATR"
				IF MAP_VEC_CGEN(J%) <> MAP_CTE_YES THEN
					IF MAP_VEC_TIDX(J%) > 1 THEN
						FOR ZZ% = 1 TO MAP_VEC_TIDX(J%)
							CALL PUT_GEN(MAP_OPT_GEN,WRT_BM,MG_B,MAP_GLS_IDX$ + MAP_GLS_VIX(ZZ%) +&
								IN_FRM_FLD + ".")
						NEXT ZZ%
					ELSE
						CALL PUT_GEN(MAP_OPT_GEN,WRT_BM,MG_B,MAP_GLS_IDX$ + IN_FRM_FLD + ".")
					END IF
				ELSE
					JJ% = J%
					MAP_GLS_BP = WRT_BM
					MAP_NUM_FNC = MAP_FNC_PRMF_BM1
 !!!					CALL PUT_GEN(MAP_OPT_GEN,WRT_BM,MG_N,IPTBM$ + MAP_VEC_FCMP(MAP_IND_CMPO) +&
					CALL PUT_GEN(MAP_OPT_GEN,WRT_BM,MG_N,IPTBM$ +&
						"005" + TPTX$)
				END IF
			END IF
		NEXT J%
		CALL PUT_GEN(MAP_OPT_GEN,WRT_BM,MG_N,"*% INCLUDE FIN_PRO_" + MAP_VEC_FIL(I%) +&
			"_" + MAP_GLS_MAPA + MAP_GLS_PBM )
		CALL PUT_GEN(MAP_OPT_GEN,WRT_BM,MG_A,"FIN-PRO-" + MAP_VEC_FIL(I%) + "-"+MAP_GLS_MAPA + ".")
		CALL PUT_GEN(MAP_OPT_GEN,WRT_BM,MG_B,"EXIT.")
	NEXT I%
   END DEF
   
   DEF INTEGER GEN_UNP_KEY
	CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BA,MG_C," ")
	CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BA,MG_A,"UNP-KEY-" + MAP_GLS_MAPA + " SECTION.")
	CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BA,MG_A,"INI-UNP-KEY-" + MAP_GLS_MAPA + ".")
	CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BA,MG_N,"*% INCLUDE INI_UNP_KEY_" + MAP_GLS_MAPA+MAP_GLS_PBM )
	FOR J% = 1 TO MAP_TOT_CMPO
		IF MAP_VEC_TFLD(J%) <> MAP_IND_FLD AND&
		   MAP_VEC_REGI(J%)  = "FRM"	 AND &
		   MAP_VEC_PROT(J%) = MAP_CTE_YES  THEN
			MAP_GLS_IDX$ = "MOVE " + MAP_GLS_BYA(MAP_VEC_BYA(J%) + 1) +&
				" TO " + MAP_VEC_FRTN(J%) + "-ATR"
			IF MAP_VEC_CGEN(J%) <> MAP_CTE_YES THEN
				IF MAP_VEC_TIDX(J%) > 1 THEN
					FOR ZZ% = 1 TO MAP_VEC_TIDX(J%)
						CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BA,MG_B,MAP_GLS_IDX$ + MAP_GLS_VIX(ZZ%) +&
							IN_FRM_FLD + ".")
					NEXT ZZ%
				ELSE
					CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BA,MG_B,MAP_GLS_IDX$ + IN_FRM_FLD + ".")
				END IF
			ELSE
				JJ% = J%
				MAP_GLS_BP = MAP_GLS_BA
				MAP_NUM_FNC = MAP_FNC_PRMF_BM1
 !!!				CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BA,MG_N,IPTBM$ + MAP_VEC_FCMP(MAP_IND_CMPO) +&
				CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BA,MG_N,IPTBM$ +&
					"006" + TPTX$)
			END IF
		END IF
	NEXT J%
	CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BA,MG_B,"PERFORM UNP-IKY-" + MAP_GLS_MAPA + ".")
	CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BA,MG_B,"PERFORM UNP-AKY-" + MAP_GLS_MAPA + ".")
	CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BA,MG_B,"PERFORM UNP-MKY-" + MAP_GLS_MAPA + ".")
	CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BA,MG_N,"*% INCLUDE FIN_UNP_KEY_" + MAP_GLS_MAPA+MAP_GLS_PBM )
	CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BA,MG_A,"FIN-UNP-KEY-" + MAP_GLS_MAPA + ".")
	CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BA,MG_B,"EXIT.")
   END DEF
   
   DEF INTEGER GEN_UNP_IKY
	CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BA,MG_C," ")
	CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BA,MG_A,"UNP-IKY-" + MAP_GLS_MAPA + " SECTION.")
	CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BA,MG_A,"INI-UNP-IKY-" + MAP_GLS_MAPA + ".")
	CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BA,MG_N,"*% INCLUDE INI_UNP_IKY_" + MAP_GLS_MAPA+MAP_GLS_PBM )
	FOR I% = 1 TO MAP_TOT_CMPO
		IF MAP_VEC_TFLD(I%) = MAP_IND_IKY AND&
		   MAP_VEC_PROT(I%) = MAP_CTE_YES THEN
			MAP_GLS_IDX$ = "MOVE " + MAP_GLS_BYA(MAP_VEC_BYA(I%)+1) +&
				" TO " + MAP_VEC_FRTN(I%) + "-ATR"
			IF MAP_VEC_CGEN(I%) <> MAP_CTE_YES THEN
				IF MAP_VEC_TIDX(I%) > 1 THEN
					FOR ZZ% = 1 TO MAP_VEC_TIDX(I%)
						CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BA,MG_B,MAP_GLS_IDX$ +&
							IN_FRM_FLD + MAP_GLS_VIX(ZZ%) + ".")
					NEXT ZZ%
				ELSE
					CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BA,MG_B,MAP_GLS_IDX$ + IN_FRM_FLD + ".")
				END IF
			ELSE
				JJ% = I%
				MAP_GLS_BP = MAP_GLS_BA
				MAP_NUM_FNC = MAP_FNC_PRMF_BM1
 !!!				CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BA,MG_N,IPTBM$ + MAP_VEC_FCMP(MAP_IND_CMPO) +&
				CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BA,MG_N,IPTBM$ +&
					"006" + TPTX$)
			END IF
		END IF
	NEXT I%
	CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BA,MG_N,"*% INCLUDE FIN_UNP_IKY_" + MAP_GLS_MAPA+MAP_GLS_PBM )
	CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BA,MG_A,"FIN-UNP-IKY-" + MAP_GLS_MAPA + ".")
	CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BA,MG_B,"EXIT.")
   END DEF
   
   DEF INTEGER GEN_UNP_MKY
	CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BA,MG_C," ")
	CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BA,MG_A,"UNP-MKY-" + MAP_GLS_MAPA + " SECTION.")
	CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BA,MG_A,"INI-UNP-MKY-" + MAP_GLS_MAPA + ".")
	CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BA,MG_N,"*% INCLUDE INI_UNP_MKY_" + MAP_GLS_MAPA+MAP_GLS_PBM )
	FOR I% = 1 TO MAP_TOT_CMPO
		IF MAP_VEC_TFLD(I%) = MAP_IND_MKY AND&
		   MAP_VEC_PROT(I%) = MAP_CTE_YES THEN
			MAP_GLS_IDX$ = "MOVE " + MAP_GLS_BYA(MAP_VEC_BYA(I%)+1) +&
				" TO " + MAP_VEC_FRTN(I%) + "-ATR"
			IF MAP_VEC_CGEN(I%) <> MAP_CTE_YES THEN
				IF MAP_VEC_TIDX(I%) > 1 THEN
					FOR ZZ% = 1 TO MAP_VEC_TIDX(I%)
						CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BA,MG_B,MAP_GLS_IDX$ +&
						IN_FRM_FLD + MAP_GLS_VIX(ZZ%) + ".")
					NEXT ZZ%
				ELSE
					CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BA,MG_B,MAP_GLS_IDX$ +IN_FRM_FLD + ".")
				END IF
			ELSE
				JJ% = I%
				MAP_GLS_BP = MAP_GLS_BA
				MAP_NUM_FNC = MAP_FNC_PRMF_BM1
 !!!				CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BA,MG_N,IPTBM$ + MAP_VEC_FCMP(MAP_IND_CMPO) +&
				CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BA,MG_N,IPTBM$ +&
					"006" + TPTX$)
			END IF
		END IF
	NEXT I%
	CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BA,MG_N,"*% INCLUDE FIN_UNP_MKY_" + MAP_GLS_MAPA+MAP_GLS_PBM )
	CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BA,MG_A,"FIN-UNP-MKY-" + MAP_GLS_MAPA + ".")
	CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BA,MG_B,"EXIT.")
   END DEF
   
   DEF INTEGER GEN_UNP_AKY
	CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BA,MG_C," ")
	CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BA,MG_A,"UNP-AKY-" + MAP_GLS_MAPA + " SECTION.")
	CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BA,MG_A,"INI-UNP-AKY-" + MAP_GLS_MAPA + ".")
	CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BA,MG_N,"*% INCLUDE INI_UNP_AKY_" + MAP_GLS_MAPA+MAP_GLS_PBM )
	FOR I% = 1 TO MAP_TOT_CMPO
		IF MAP_VEC_TFLD(I%) = MAP_IND_AKY AND&
		   MAP_VEC_PROT(I%) = MAP_CTE_YES THEN
			MAP_GLS_IDX$ = "MOVE " + MAP_GLS_BYA(MAP_VEC_BYA(I%)+1) +&
				" TO " + MAP_VEC_FRTN(I%) + "-ATR"
			IF MAP_VEC_CGEN(I%) <> MAP_CTE_YES THEN
				IF MAP_VEC_TIDX(I%) > 1 THEN
					FOR ZZ% = 1 TO MAP_VEC_TIDX(I%)
						CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BA,MG_B,MAP_GLS_IDX$ +&
							IN_FRM_FLD + MAP_GLS_VIX(ZZ%) + "." )
					NEXT ZZ%
				ELSE
					CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BA,MG_B,MAP_GLS_IDX$ + IN_FRM_FLD + ".")
				END IF
			ELSE
				JJ% = I%
				MAP_GLS_BP = MAP_GLS_BA
				MAP_NUM_FNC = MAP_FNC_PRMF_BM1
 !!!				CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BA,MG_N,IPTBM$ + MAP_VEC_FCMP(MAP_IND_CMPO) +&
				CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BA,MG_N,IPTBM$ +&
					"006" + TPTX$)
			END IF
		END IF
	NEXT I%
	CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BA,MG_N,"*% INCLUDE FIN_UNP_AKY_" + MAP_GLS_MAPA+MAP_GLS_PBM )
	CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BA,MG_A,"FIN-UNP-AKY-" + MAP_GLS_MAPA + ".")
	CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BA,MG_B,"EXIT.")
   END DEF
   
   DEF INTEGER GEN_UNP_FLD
	CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BA,MG_C," ")
	CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BA,MG_A,"UNP-FLD-" + MAP_GLS_MAPA + " SECTION.")
	CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BA,MG_A,"INI-UNP-FLD-" + MAP_GLS_MAPA + ".")
	CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BA,MG_N,"*% INCLUDE INI_UNP_FLD_" + MAP_GLS_MAPA+MAP_GLS_PBM )
	FOR J% = 1 TO MAP_TOT_CMPO
		IF MAP_VEC_TFLD(J%) = MAP_IND_FLD	    AND&
		   MAP_VEC_REGI(J%) = "FRM" 	    AND &
		   MAP_VEC_PROT(J%) = MAP_CTE_YES THEN
			MAP_GLS_IDX$ = "MOVE " + MAP_GLS_BYA(MAP_VEC_BYA(J%) + 1) +&
				" TO " + MAP_VEC_FRTN(J%) + "-ATR" 
			IF MAP_VEC_CGEN(J%) <> MAP_CTE_YES THEN
				IF MAP_VEC_TIDX(J%) > 1 THEN
					FOR ZZ% = 1 TO MAP_VEC_TIDX(J%)
						CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BA,MG_B,MAP_GLS_IDX$ + MAP_GLS_VIX(ZZ%) +&
						IN_FRM_FLD + ".")
					NEXT ZZ%
				ELSE
					CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BA,MG_B,MAP_GLS_IDX$ + IN_FRM_FLD + ".")
				END IF
			ELSE
				JJ% = J%
				MAP_GLS_BP = MAP_GLS_BA
				MAP_NUM_FNC = MAP_FNC_PRMF_BM1
 !!!				CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BA,MG_N,IPTBM$ + MAP_VEC_FCMP(MAP_IND_CMPO) +&
				CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BA,MG_N,IPTBM$ +&
					"006" + TPTX$)
			END IF
		END IF
	NEXT J%
	FOR I% = 1 TO MAP_TOT_FILE
		CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BA,MG_B,"PERFORM UNP-" + MAP_VEC_FIL(I%) + "-" + MAP_GLS_MAPA + ".")
	NEXT I%
	CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BA,MG_N,"*% INCLUDE FIN_UNP_FLD_" + MAP_GLS_MAPA+MAP_GLS_PBM )
	CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BA,MG_A,"FIN-UNP-FLD-" + MAP_GLS_MAPA + ".")
	CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BA,MG_B,"EXIT.")
   END DEF
   
   DEF INTEGER GEN_UNP_FLS
	FOR I% = 1 TO MAP_TOT_FILE
		CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BA,MG_C," ")
		CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BA,MG_A,"UNP-" + MAP_VEC_FIL(I%) + "-" + MAP_GLS_MAPA + " SECTION.")
		CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BA,MG_A,"INI-UNP-" + MAP_VEC_FIL(I%) + "-"+MAP_GLS_MAPA + ".")
		CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BA,MG_N,"*% INCLUDE INI_UNP_" + MAP_VEC_FIL(I%) +&
			"_" + MAP_GLS_MAPA + MAP_GLS_PBM )
		FOR J% = 1 TO MAP_TOT_CMPO
			IF MAP_VEC_TFLD(J%) = MAP_IND_FLD	    AND&
			   MAP_VEC_FIL(I%)  = MAP_VEC_REGI(J%) AND &
			   MAP_VEC_PROT(J%) = MAP_CTE_YES THEN
				MAP_GLS_IDX$ = "MOVE " + MAP_GLS_BYA(MAP_VEC_BYA(J%) + 1) +&
					" TO " + MAP_VEC_FRTN(J%) + "-ATR"
				IF MAP_VEC_CGEN(J%) <> MAP_CTE_YES THEN
					IF MAP_VEC_TIDX(J%) > 1 THEN
						FOR ZZ% = 1 TO MAP_VEC_TIDX(J%)
							CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BA,MG_B,MAP_GLS_IDX$ +&
								MAP_GLS_VIX(ZZ%) + IN_FRM_FLD + ".")
						NEXT ZZ%
					ELSE
						CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BA,MG_B,MAP_GLS_IDX$ + IN_FRM_FLD + ".")
					END IF
				ELSE
					JJ% = J%
					MAP_GLS_BP = MAP_GLS_BA
					MAP_NUM_FNC = MAP_FNC_PRMF_BM1
 !!!					CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BA,MG_N,IPTBM$ + MAP_VEC_FCMP(MAP_IND_CMPO) +&
					CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BA,MG_N,IPTBM$ +&
						"006" + TPTX$)
				END IF
			END IF
		NEXT J%
		CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BA,MG_N,"*% INCLUDE FIN_UNP_" + MAP_VEC_FIL(I%) +&
			"_" + MAP_GLS_MAPA + MAP_GLS_PBM )
		CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BA,MG_A,"FIN-UNP-" + MAP_VEC_FIL(I%) + "-"+MAP_GLS_MAPA + ".")
		CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BA,MG_B,"EXIT.")
	NEXT I%
   END DEF
   
   DEF INTEGER GEN_VAL_KEY
	CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BQ,MG_C," ")
	CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BQ,MG_A,"VAL-KEY-" + MAP_GLS_MAPA + " SECTION.")
	CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BQ,MG_A,"INI-VAL-KEY-" + MAP_GLS_MAPA + ".")
	CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BQ,MG_B,"PERFORM VAL-IKY-" + MAP_GLS_MAPA + ".")
	CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BQ,MG_B,"PERFORM VAL-MKY-" + MAP_GLS_MAPA + ".")
	CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BQ,MG_B,"PERFORM VAL-AKY-" + MAP_GLS_MAPA + ".")
	CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BQ,MG_A,"FIN-VAL-KEY-" + MAP_GLS_MAPA + ".")
	CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BQ,MG_B,"EXIT.")
   END DEF
   
   DEF INTEGER GEN_VAL_TFLD
	SECTION$ = "VAL-" + MAP_GLS_TFLD + "-" + MAP_GLS_MAPA
	CALL PUT_GEN(MAP_OPT_GEN,WRT_BM,MG_C," ")
	CALL PUT_GEN(MAP_OPT_GEN,WRT_BM,MG_A,SECTION$ + " SECTION.")
	CALL PUT_GEN(MAP_OPT_GEN,WRT_BM,MG_A,"INI-" + SECTION$ + ".")
	CALL PUT_GEN(MAP_OPT_GEN,WRT_BM,MG_N,"*% INCLUDE INI_VAL_" + MAP_GLS_TFLD + "_" + MAP_GLS_MAPA + MAP_GLS_PBM)
	FOR I% = 1 TO MAP_TOT_CMPO
		IF MAP_VEC_VALI(I%) = MAP_CTE_YES AND&
		   MAP_VEC_TFLD(I%) = MAP_IND_TFLD THEN
			MAP_GLS_IDX$ = IN_FRM_FLD 
			IF MAP_VEC_TIDX(I%) > 1 THEN
				MAP_NUM_FNC = GEN_FNC_VCSI
			ELSE
				MAP_NUM_FNC = GEN_FNC_VCNI
			END IF

		END IF
	NEXT I%
	CALL PUT_GEN(MAP_OPT_GEN,WRT_BM,MG_N,"*% INCLUDE FIN_VAL_" + MAP_GLS_TFLD + "_" + MAP_GLS_MAPA + MAP_GLS_PBM)
	CALL PUT_GEN(MAP_OPT_GEN,WRT_BM,MG_A,"FIN-" + SECTION$ + ".")
	CALL PUT_GEN(MAP_OPT_GEN,WRT_BM,MG_B,"EXIT.")
   END DEF
   
   DEF INTEGER MAP_FNC_VAL_IDC
	CALL PUT_GEN(MAP_OPT_GEN,SECVAL$,MG_N,'*% BUF = "' + MAP_GLS_INDI$ + '"')
	CALL PUT_GEN(MAP_OPT_GEN,SECVAL$,MG_N,'*% FLD = "' + MAP_VEC_FRTN(I%) + '"')
	CALL PUT_GEN(MAP_OPT_GEN,SECVAL$,MG_N,"*% INCLUDE 'VALIDC'")
	NRO$ = "TRUE"
   END DEF

   DEF INTEGER MAP_FNC_VAL_VRF
	IF MAP_VEC_TVAL(I%) = MAP_IND_VVRF THEN
	CALL PUT_GEN(MAP_OPT_GEN,SECVAL$,MG_N,'*% BUF = "' + MAP_GLS_INDI$ + '"')
 !!!		CALL PUT_GEN(MAP_OPT_GEN,SECVAL$,MG_N,'*% LBL = "' + MAP_VEC_REGI(I%) + "_" +&
 !!!                MAP_VEC_TIPO(I%) + "_" + MAP_VEC_NOMB(I%) + MAP_GLS_PBM +&
 !!!                               '"')
		CALL PUT_GEN(MAP_OPT_GEN,SECVAL$,MG_N,'*% KO0 = "K"')
		CALL PUT_GEN(MAP_OPT_GEN,SECVAL$,MG_N,'*% ZRO = "S"')
		CALL PUT_GEN(MAP_OPT_GEN,SECVAL$,MG_N,'*% FLD = "' + MAP_VEC_FRTN(I% - 1) + '"')
		CALL PUT_GEN(MAP_OPT_GEN,SECVAL$,MG_N,'*% VRF = "' + MAP_VEC_FRTN(I%) + '"')
 		CALL PUT_GEN(MAP_OPT_GEN,SECVAL$,MG_N,'*% LMX = "7"')
		IF MAP_VEC_IOV(I%) = MAP_IND_IDC THEN
 !!!JSS-INI 28-JUL-1993
 !!!			CALL PUT_GEN(MAP_OPT_GEN,SECVAL$,MG_N,"*% INCLUDE 'VALRUT'")
                        CALL PUT_GEN(MAP_OPT_GEN,SECVAL$,MG_N,"*% INCLUDE 'SETRUT'")
                        CALL PUT_GEN(MAP_OPT_GEN,SECVAL$,MG_N,"*% INCLUDE INI_" + AUX_LBL$ + MAP_GLS_PBM )
                        CALL PUT_GEN(MAP_OPT_GEN,SECVAL$,MG_N,"*% INCLUDE 'PRORUT'")
 !!!JSS-FIN
		ELSE
 !!!JSS-INI 28-JUL-1993
 !!!			CALL PUT_GEN(MAP_OPT_GEN,SECVAL$,MG_N,"*% INCLUDE 'VALVRF'")
                        CALL PUT_GEN(MAP_OPT_GEN,SECVAL$,MG_N,"*% INCLUDE 'SETVRF'")
                        CALL PUT_GEN(MAP_OPT_GEN,SECVAL$,MG_N,"*% INCLUDE INI_" + AUX_LBL$ + MAP_GLS_PBM )
                        CALL PUT_GEN(MAP_OPT_GEN,SECVAL$,MG_N,"*% INCLUDE 'PROVRF'")
 !!!JSS-FIN
		END IF
	END IF
   END DEF


   DEF INTEGER GEN_VAL_FLS
	FOR I% = 1 TO MAP_TOT_CMPO
		AUX_LBL$ = MAP_VEC_FRTN(I%)
		CALL GENRPTREP(AUX_LBL$,"-","_")
		LBL$ = MAP_VEC_FRTN(I%)
		CALL GENRPTREP(LBL$,"-","_")
		LBL$ = LBL$ + MAP_GLS_PBM	     

		IF MAP_VEC_VALI(I%) = MAP_CTE_YES THEN
			IF MAP_VEC_TFLD(I%) = MAP_IND_IKY OR&
			   MAP_VEC_TFLD(I%) = MAP_IND_AKY THEN
				SECVAL$ = "BQ"
			ELSE
				IF MAP_VEC_TFLD(I%) = MAP_IND_MKY THEN
					SECVAL$ = "BA"
				ELSE
					SECVAL$ = "BU"
				END IF
			END IF
			IF MAP_VEC_TIDX(I%) > 1 THEN
				MAP_GLS_INDI$ = MAP_GLS_MAPA + "-FLD(FRM-IFLD)"
			ELSE
				MAP_GLS_INDI$ = MAP_GLS_MAPA + "-FLD"
			END IF

			IF MAP_VEC_CGEN(I%) <> MAP_CTE_YES THEN
				CALL PUT_GEN(MAP_OPT_GEN,SECVAL$,MG_C," ")
				CALL PUT_GEN(MAP_OPT_GEN,SECVAL$,MG_A,"VAL-" + MAP_VEC_FRTN(I%) + " SECTION." )
				CALL PUT_GEN(MAP_OPT_GEN,SECVAL$,MG_A,"INI-VAL-" + MAP_VEC_FRTN(I%) + "." )
				CALL PUT_GEN(MAP_OPT_GEN,SECVAL$,MG_N,'*% LBL = "' + LBL$ + '"')
			ELSE
				JJ% = I%
				MAP_GLS_BP = MAP_GLS_BA
				MAP_NUM_FNC = MAP_FNC_PRMF_BM1
				MAP_NUM_FNC = MAP_FNC_PRMF_BM2
				CALL PUT_GEN(MAP_OPT_GEN,SECVAL$,MG_N,'*% OBL = "' + MAP_VEC_OBLI(I%) + '"')
				CALL PUT_GEN(MAP_OPT_GEN,SECVAL$,MG_N,'% LBL = "' + LBL$ + '"')
				CALL PUT_GEN(MAP_OPT_GEN,SECVAL$,MG_N,'*% LBL = "' + LBL$ + '"')
				CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BA,MG_N,'*% IZR = "' + MAP_VEC_OBLI(I%) + '"')
				CALL PUT_GEN(MAP_OPT_GEN,SECVAL$,MG_N,'*% ZRO = "S"')
			END IF

			IF NOT ( MAP_VEC_FECH(I%) = MAP_CTE_NOT OR&
				 MAP_VEC_DSPL(I%) = MAP_CTE_YES ) THEN
				CALL PUT_GEN(MAP_OPT_GEN,SECVAL$,MG_N,'*% BUF = "' + MAP_GLS_INDI$ + '"')
				CALL PUT_GEN(MAP_OPT_GEN,SECVAL$,MG_N,'*% FLD = "' + MAP_VEC_FRTN(I%) + '"')
				CALL PUT_GEN(MAP_OPT_GEN,SECVAL$,MG_N,'*% SN  = "' + MAP_VEC_OBLI(I%) + '"')
 !!!				CALL PUT_GEN(MAP_OPT_GEN,SECVAL$,MG_N,'*% FRM = "' + MAP_VEC_VFEC(MAP_VEC_FECH(I%)) + '"')
				CALL PUT_GEN(MAP_OPT_GEN,SECVAL$,MG_N,'*% HOY = "LE"')
				CALL PUT_GEN(MAP_OPT_GEN,SECVAL$,MG_N,'*% HBL = "S"')
 !!!JSS-INI 28-JUL-1993 REACTIVADO PARA PONER LABEL INI_ ANTES E INCORPORADO SETFEC
				IF MAP_VEC_CGEN(I%) <> MAP_CTE_YES THEN
					CALL PUT_GEN(MAP_OPT_GEN,SECVAL$,MG_N,"*% INCLUDE 'SETFEC'")
					CALL PUT_GEN(MAP_OPT_GEN,SECVAL$,MG_N,"*% INCLUDE INI_" + AUX_LBL$ + MAP_GLS_PBM )
 !!!         CALL PUT_GEN(MAP_OPT_GEN,SECVAL$,MG_N,"*% INCLUDE 'VALFEC'")
					CALL PUT_GEN(MAP_OPT_GEN,SECVAL$,MG_N,"*% INCLUDE 'PROFEC'")
				END IF
 !!!JSS-FIN
				FEC$ = "TRUE"
			END IF

 !!!JSS 5-JAN-1993 22:19:33 ( SI CAMPO ES FECHA DISPLAY ONLY )
			IF MAP_VEC_CGEN(I%) <> MAP_CTE_YES THEN
				IF MAP_VEC_FECH(I%) <> MAP_CTE_NOT AND &
				   MAP_VEC_DSPL(I%) =  MAP_CTE_YES THEN
					IF MAP_VEC_TIDX(I%) > 1 THEN
						MAP_GLS_IDX$ = "(FRM-IFLD)"
						CALL PUT_GEN(MAP_OPT_GEN,SECVAL$,MG_B,"IF " + MAP_VEC_FRTN(I%) +&
							IN_FRM_FLD + MAP_GLS_IDX$ + " NOT > ZEROES")
						CALL PUT_GEN(MAP_OPT_GEN,SECVAL$,MG_B,"   MOVE ZEROES TO " +&
						MAP_VEC_FRTN(I%) + IN_FRM_FLD + MAP_GLS_IDX$ + ".")
					ELSE
						CALL PUT_GEN(MAP_OPT_GEN,SECVAL$,MG_B,"IF " + MAP_VEC_FRTN(I%) +&
							IN_FRM_FLD +  " NOT > ZEROES")
						CALL PUT_GEN(MAP_OPT_GEN,SECVAL$,MG_B,"   MOVE ZEROES TO " +&
						MAP_VEC_FRTN(I%) + IN_FRM_FLD + ".")
					END IF
				END IF
			END IF

			IF MAP_VEC_CGEN(I%) <> MAP_CTE_YES THEN
				IF MAP_VEC_FECH(I%) = MAP_CTE_NOT THEN
 !!! ESTA PREGUNTA SIGNIFICA QUE EL CAMPO ES OBLIGATORIO.
					IF MAP_VEC_OBLI(I%) = "N" AND &
					   MAP_VEC_DSPL(I%) = MAP_CTE_NOT THEN
						IF MAP_VEC_NUME(I%) <> MAP_CTE_YES THEN
							A$ = " NOT > SPACES"
						ELSE
							A$ = " = ZEROES"
						END IF
						ERRGLS$  = "TRUE"
						IF MAP_VEC_TIDX(I%) > 1 THEN
							MAP_GLS_IDX$ = "(FRM-IFLD)"
							CALL PUT_GEN(MAP_OPT_GEN,SECVAL$,MG_B,"IF " + MAP_VEC_FRTN(I%) +&
								IN_FRM_FLD +  MAP_GLS_IDX$ + A$)
							CALL PUT_GEN(MAP_OPT_GEN,SECVAL$,MG_1,"PERFORM ERR-GLS")
							CALL PUT_GEN(MAP_OPT_GEN,SECVAL$,MG_1,"GO TO FIN-VAL-"+MAP_VEC_FRTN(I%)+".")
						ELSE
							CALL PUT_GEN(MAP_OPT_GEN,SECVAL$,MG_B,"IF " + MAP_VEC_FRTN(I%) +&
								IN_FRM_FLD + A$)
							CALL PUT_GEN(MAP_OPT_GEN,SECVAL$,MG_1,"PERFORM ERR-GLS")
							CALL PUT_GEN(MAP_OPT_GEN,SECVAL$,MG_1,"GO TO FIN-VAL-"+MAP_VEC_FRTN(I%)+".")
						END IF
					ELSE
						IF MAP_VEC_DSPL(I%) = MAP_CTE_NOT THEN
							IF MAP_VEC_NUME(I%) <> MAP_CTE_YES THEN
								IF MAP_VEC_TIDX(I%) > 1 THEN
									MAP_GLS_IDX$ = "(FRM-IFLD)"
									CALL PUT_GEN(MAP_OPT_GEN,SECVAL$,MG_B,"IF " + MAP_VEC_FRTN(I%) +&
										IN_FRM_FLD + MAP_GLS_IDX$ + " NOT > SPACES")
									CALL PUT_GEN(MAP_OPT_GEN,SECVAL$,MG_B,"   MOVE SPACES TO " +&
										MAP_VEC_FRTN(I%) + IN_FRM_FLD + MAP_GLS_IDX$ + ".")
								ELSE
									CALL PUT_GEN(MAP_OPT_GEN,SECVAL$,MG_B,"IF " + MAP_VEC_FRTN(I%) +&
										IN_FRM_FLD +  " NOT > SPACES")
									CALL PUT_GEN(MAP_OPT_GEN,SECVAL$,MG_B,"   MOVE SPACES TO " +&
										MAP_VEC_FRTN(I%) + IN_FRM_FLD + ".")
								END IF
							END IF
						END IF
					END IF
				END IF
				IF ( MAP_VEC_FECH(I%) = MAP_CTE_NOT OR MAP_VEC_DSPL(I%) = MAP_CTE_YES ) THEN
					IF NOT ( MAP_VEC_TVAL(I%) = MAP_IND_VVRF ) THEN
						CALL PUT_GEN(MAP_OPT_GEN,SECVAL$,MG_N,"*% INCLUDE INI_" + AUX_LBL$ + MAP_GLS_PBM )
					END IF
				END IF
			END IF


			IF MAP_VEC_TVAL(I%) = MAP_IND_VGLS THEN
				CALL PUT_GEN(MAP_OPT_GEN,SECVAL$,MG_N,'*% BUF = "' + MAP_GLS_INDI$ + '"')
				CALL PUT_GEN(MAP_OPT_GEN,SECVAL$,MG_N,'*% FLD = "' + MAP_VEC_FRTN(I%) + '"')
				CALL PUT_GEN(MAP_OPT_GEN,SECVAL$,MG_N,"*% INCLUDE 'VALGLS'")
			END IF

			IF MAP_VEC_CGEN(I%) <> MAP_CTE_YES THEN
				CALL PUT_GEN(MAP_OPT_GEN,SECVAL$,MG_N,"*% INCLUDE " + AUX_LBL$ + MAP_GLS_PBM )
			END IF
			IF MAP_VEC_VAUT(I%) <> MAP_CTE_NOT AND &
			   MAP_VEC_DSPL(I%) = MAP_CTE_NOT THEN
				MAP_NUM_FNC = MAP_FNC_GRCR
				IF FIO_STAT = FIO_STAT_OKS THEN
					MAP_NUM_FNC = MAP_FNC_GDMN
					IF FIO_STAT = FIO_STAT_OKS THEN
						CALL PUT_GEN(MAP_OPT_GEN,SECVAL$,MG_N,'*% BUF = "' + MAP_GLS_INDI$ + '"')
						IF MAP_VEC_VAUT(I%) = MAP_NUM_CODI THEN
							IF DMN::DMN_GLS_VALI <= " " OR &
							   DMN::DMN_GLS_VALI  = "VALCOD" THEN
							MAP_GLS_VCOD = 'VALCOD'
			       VALCOD$ = "TRUE"
                           ELSE
                               MAP_GLS_VCOD = DMN::DMN_GLS_VALI
			       IF MAP_GLS_VCOD = "VALOFI" THEN
					VALOFI$ = "TRUE"
			       ELSE
			       IF MAP_GLS_VCOD = "VALUSR" THEN
					VALUSR$ = "TRUE"
                               ELSE
			       IF MAP_GLS_VCOD = "VALTDU" THEN
					VALTDU$ = "TRUE"
			       END IF
			       END IF
			       END IF
                           END IF
                           IF MAP_VEC_GLOS(I%) > 0 THEN
                               MAP_GLS_GCOD = 'TRUE'
                           ELSE
                               MAP_GLS_GCOD = 'FALSE'
                           END IF
			   MAP_NUM_ICOD = I%
			   WRT_BM = SECVAL$
                           MAP_NUM_FNC = MAP_FNC_VCOD
                       ELSE
                           IF DMN::DMN_GLS_VALI <= " " OR &
                              DMN::DMN_GLS_VALI  = "VALIND" THEN
                               MAP_GLS_VIND = 'VALIND'
			       VALIND$ = "TRUE"
                           ELSE
                               MAP_GLS_VIND = DMN::DMN_GLS_VALI
			       IF MAP_GLS_VIND = "VALOFI" THEN
					VALOFI$ = "TRUE"
			       ELSE
			       IF MAP_GLS_VIND = "VALUSR" THEN
					VALUSR$ = "TRUE"
                               ELSE
			       IF MAP_GLS_VIND = "VALTDU" THEN
					VALTDU$ = "TRUE"
			       END IF
			       END IF
			       END IF
                           END IF
                           IF MAP_VEC_GLOS(I%) > 0 THEN
                               MAP_GLS_GIND = 'TRUE'
                           ELSE
                               MAP_GLS_GIND = 'FALSE'
                           END IF
			   MAP_NUM_IIND = I%
			   WRT_BM = SECVAL$
                           MAP_NUM_FNC = MAP_FNC_VIND
                       END IF
                    END IF
                END IF
            END IF
 !!!JSS-INI  27-JUL-1993 INHIBIDO PARA PONER LABEL ANTES DE VALIDACION AUTOMATICA DE CODIGO ADICIONAL
 !!!        CALL PUT_GEN(MAP_OPT_GEN,SECVAL$,MG_N,"*% INCLUDE " + AUX_LBL$ + MAP_GLS_PBM )
 !!!JSS-FIN
 !!!JSS-INI  27-JUL-1993 CODIGO PARA PONER LABEL FIN_'CAMPO' DESPUES ANTES DE VALIDACION AUTOMATICA
	IF MAP_VEC_CGEN(I%) <> MAP_CTE_YES THEN
		IF MAP_VEC_TCMP(I%) = "IDC" OR&
		   MAP_VEC_TCMP(I%) = "VRF" THEN
			CALL PUT_GEN(MAP_OPT_GEN,SECVAL$,MG_N,'*% KO0 = "K"')
			CALL PUT_GEN(MAP_OPT_GEN,SECVAL$,MG_N,'*% ZRO = "S"')
			CALL PUT_GEN(MAP_OPT_GEN,SECVAL$,MG_N,'*% LMX = "7"')
		END IF

		CALL PUT_GEN(MAP_OPT_GEN,SECVAL$,MG_N,"*% INCLUDE FIN_" + AUX_LBL$ + MAP_GLS_PBM )
		CALL PUT_GEN(MAP_OPT_GEN,SECVAL$,MG_A,"FIN-VAL-" +    MAP_VEC_FRTN(I%) + "." )
		CALL PUT_GEN(MAP_OPT_GEN,SECVAL$,MG_B,"EXIT." )
	ELSE
 !!!		CALL PUT_GEN(MAP_OPT_GEN,SECVAL$,MG_N,IPTBM$ + MAP_VEC_FCMP(MAP_IND_CMPO) + "008" + TPTX$)
		CALL PUT_GEN(MAP_OPT_GEN,SECVAL$,MG_N,IPTBM$ + "008" + TPTX$)
	END IF

   END IF
 NOVALFLD:
   NEXT I%
   END DEF

   DEF INTEGER VAL_CON_KEY
	CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BQ,MG_C," ")
	CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BQ,MG_A,"VAL-CON-KEY-" + MAP_GLS_MAPA + " SECTION.")
	CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BQ,MG_A,"INI-VAL-CON-KEY-" + MAP_GLS_MAPA + ".")
	CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BQ,MG_N,"*% INCLUDE INI_VAL_CON_KEY_" + MAP_GLS_MAPA + MAP_GLS_PBM )
	CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BQ,MG_N,"% PUSO_IF = FALSE")
	MAP_KEY_ABPA$ = "IF     "
	FOR I% = 1 TO MAP_TOT_CMPO
	IF MAP_VEC_PAI(I%) = "PER" THEN
		MAP_KEY_CIPA$ = " = ZEROES "
	ELSE
		IF MAP_VEC_NUME(I%) = MAP_CTE_YES THEN
			MAP_KEY_CIPA$ = " NOT > ZEROES "
		ELSE
			MAP_KEY_CIPA$ = " NOT > SPACES "
		END IF
	END IF
	IF MAP_VEC_TFLD(I%) = MAP_IND_IKY OR &
	   MAP_VEC_TFLD(I%) = MAP_IND_MKY OR &
	   MAP_VEC_TFLD(I%) = MAP_IND_AKY THEN
		IF MAP_VEC_CGEN(I%) <> MAP_CTE_YES THEN
			IF MAP_VEC_TIDX(I%) > 1 THEN
				IF PUSO_IF$ <> "TRUE" THEN
					CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BQ,MG_N,"% PUSO_IF = TRUE")
					PUSO_IF$ = "TRUE"
				END IF
				FOR ZZ% = 1 TO MAP_VEC_TIDX(I%)
					CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BQ,MG_B,MAP_KEY_ABPA$ +&
					MAP_VEC_FRTN(I%) + IN_FRM_FLD +&
					MAP_GLS_VIX(ZZ%) + MAP_KEY_CIPA$)
					MAP_KEY_ABPA$ = "   AND "
				NEXT ZZ%
			ELSE
				IF PUSO_IF$ <> "TRUE" THEN
					CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BQ,MG_N,"% PUSO_IF = TRUE")
					PUSO_IF$ = "TRUE"
				END IF
				CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BQ,MG_B,MAP_KEY_ABPA$ +&
				MAP_VEC_FRTN(I%) + IN_FRM_FLD + MAP_KEY_CIPA$)
		         END IF
		ELSE
			JJ% = I%
			MAP_GLS_BP = MAP_GLS_BQ
			MAP_NUM_FNC = MAP_FNC_PRMF_BM1
 !!!			CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BA,MG_N,IPTBM$ + MAP_VEC_FCMP(I%) +&
			CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BP,MG_N,IPTBM$ + "009" + TPTX$)
		END IF
         MAP_KEY_ABPA$ = "   AND "
      END IF
   NEXT I%
         
   CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BQ,MG_B,"     PERFORM ERR-KEY")
   CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BQ,MG_B,"     PERFORM FST-KEY-" + MAP_GLS_MAPA + ".")
   CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BQ,MG_N,"*% INCLUDE FIN_VAL_CON_KEY_" + MAP_GLS_MAPA +&
            MAP_GLS_PBM )
   CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BQ,MG_A,"FIN-VAL-CON-KEY-" + MAP_GLS_MAPA + ".")
   CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BQ,MG_B,"EXIT.")
   END DEF

   DEF INTEGER VAL_CON_IKY
	CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BQ,MG_C," ")
	CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BQ,MG_A,"VAL-CON-IKY-" + MAP_GLS_MAPA + " SECTION.")
	CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BQ,MG_A,"INI-VAL-CON-IKY-" + MAP_GLS_MAPA + ".")
	CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BQ,MG_N,"*% INCLUDE INI_VAL_CON_IKY_" + MAP_GLS_MAPA + MAP_GLS_PBM )
	CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BQ,MG_N,"% PUSO_IF = FALSE")
	MAP_IKY_ABPA$ = "IF     "
	FOR I% = 1 TO MAP_TOT_CMPO
		IF MAP_VEC_PAI(I%) = "PER" THEN
			MAP_IKY_CIPA$ = " = ZEROES "
		ELSE
			IF MAP_VEC_NUME(I%) = MAP_CTE_YES THEN
				MAP_IKY_CIPA$ = " NOT > ZEROES "
			ELSE
				MAP_IKY_CIPA$ = " NOT > SPACES "
			END IF
		END IF
		IF MAP_VEC_TFLD(I%) = MAP_IND_IKY AND&
		   MAP_VEC_DERI(I%) = MAP_CTE_NOT THEN
			IF MAP_VEC_CGEN(I%) <> MAP_CTE_YES THEN
				IF MAP_VEC_TIDX(I%) > 1 THEN
					IF PUSO_IF$ <> "TRUE" THEN
						CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BQ,MG_N,"% PUSO_IF = TRUE")
						PUSO_IF$ = "TRUE"
					END IF
					FOR ZZ% = 1 TO MAP_VEC_TIDX(I%)
						CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BQ,MG_B,MAP_IKY_ABPA$ +&
						MAP_VEC_FRTN(I%) + IN_FRM_FLD +&
						MAP_GLS_VIX(ZZ%) + MAP_IKY_CIPA$)
						MAP_IKY_ABPA$ = "   AND "
					NEXT ZZ%
				ELSE
				IF PUSO_IF$ <> "TRUE" THEN
						CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BQ,MG_N,"% PUSO_IF = TRUE")
						PUSO_IF$ = "TRUE"
				END IF
					CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BQ,MG_B,MAP_IKY_ABPA$ +&
					MAP_VEC_FRTN(I%) + IN_FRM_FLD + MAP_IKY_CIPA$)
				END IF
			ELSE
				JJ% = I%
				MAP_GLS_BP = MAP_GLS_BQ
				MAP_NUM_FNC = MAP_FNC_PRMF_BM1
 !!!				CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BA,MG_N,IPTBM$ + MAP_VEC_FCMP(I%) +&
				CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BP,MG_N,IPTBM$ + "009" + TPTX$)
			END IF
			MAP_IKY_ABPA$ = "   AND "
		END IF
	NEXT I%
         
	CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BQ,MG_B,"     PERFORM ERR-KEY")
	CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BQ,MG_B,"     PERFORM FST-KEY-" + MAP_GLS_MAPA + ".")
	CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BQ,MG_N,"*% INCLUDE FIN_VAL_CON_IKY_" + MAP_GLS_MAPA + MAP_GLS_PBM )
	CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BQ,MG_A,"FIN-VAL-CON-IKY-" + MAP_GLS_MAPA + ".")
	CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BQ,MG_B,"EXIT.")
   END DEF
   
   DEF INTEGER VAL_CON_FLD
	CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BU,MG_C," ")
	CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BU,MG_A,"VAL-CON-FLD-" + MAP_GLS_MAPA + " SECTION.")
	CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BU,MG_A,"INI-VAL-CON-FLD-" + MAP_GLS_MAPA + ".")
	CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BU,MG_N,"*% INCLUDE VAL_CON_FLD_" + MAP_GLS_MAPA+MAP_GLS_PBM )
	CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BU,MG_A,"FIN-VAL-CON-FLD-" + MAP_GLS_MAPA + ".")
	CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BU,MG_B,"EXIT.")
   END DEF
   
   DEF INTEGER GEN_VAL_CON
   CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BU,MG_C," ")
   CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BU,MG_A,"VAL-CON-" + MAP_GLS_MAPA + " SECTION.")
   CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BU,MG_A,"INI-VAL-CON-" + MAP_GLS_MAPA + ".")
   CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BU,MG_N,"*% INCLUDE VAL_CON_" + MAP_GLS_MAPA + MAP_GLS_PBM )
   CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BU,MG_A,"FIN-VAL-CON-" + MAP_GLS_MAPA + ".")
   CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BU,MG_B,"EXIT.")
   END DEF
   
   
   DEF INTEGER VAL_NUM_KEY
   CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BA,MG_C," ")
   CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BA,MG_A,"VAL-NUM-KEY-" + MAP_GLS_MAPA + " SECTION.")
   CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BA,MG_A,"INI-VAL-NUM-KEY-" + MAP_GLS_MAPA + ".")
   CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BA,MG_B,"PERFORM VAL-NUM-IKY-" + MAP_GLS_MAPA + ".")
   CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BA,MG_B,"PERFORM VAL-NUM-MKY-" + MAP_GLS_MAPA + ".")
   CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BA,MG_B,"PERFORM VAL-NUM-AKY-" + MAP_GLS_MAPA + ".")
   CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BA,MG_A,"FIN-VAL-NUM-KEY-" + MAP_GLS_MAPA + ".")
   CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BA,MG_B,"EXIT.")
   END DEF
   
   
   DEF INTEGER WRT_CMN_NUM
	CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BA,MG_A,'VAL-NUM-' + MAP_VEC_FRTN(I%) + NUM_AUX1$ + '.')
	CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BA,MG_N,'*% BUF = "' + MAP_GLS_MAPA + '-FLD' + NUM_AUX2$ + '"')
	CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BA,MG_N,'*% FLD = "' + MAP_VEC_FRTN(I%) + '"')
	CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BA,MG_N,'*% ENT = "' + STR$(MAP_VEC_ENT(I%)) + '"')
	CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BA,MG_N,'*% DCM = "' + STR$(MAP_VEC_DECM(I%)) + '"')
	CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BA,MG_N,'*% NMR = "' + MAP_VEC_NMR(I%) + '"')
	CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BA,MG_N,'*% ISG = "' + MAP_VEC_ISG(I%) + '"')
 !!!	CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BA,MG_N,'*% LBL = "' + LBL$ + '"')
	IF MAP_GLS_IZR > "" THEN
		CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BA,MG_N,'*% IZR = "' + MAP_GLS_IZR + '"')
	ELSE
		CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BA,MG_N,'*% IZR = "' + MAP_VEC_OBLI(I%) + '"')
	END IF
	CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BA,MG_N,"*% INCLUDE 'VALNUM'")
	CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BA,MG_1,"GO TO FIN-" + MAP_GLS_SECC + ".")
   END DEF

   DEF INTEGER WRT_CMN_NUM_IDC
	CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BA,MG_A,'VAL-NUM-' + MAP_VEC_FRTN(I%) + NUM_AUX1$ + '.')
	CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BA,MG_N,'*% BUF = "' + MAP_GLS_MAPA + '-FLD' + NUM_AUX2$ + '"')
	CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BA,MG_N,'*% FLD = "' + MAP_VEC_FRTN(I%) + '"')
	CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BA,MG_N,'*% ENT = "8"')
	CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BA,MG_N,'*% DCM = "0"')
	CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BA,MG_N,'*% NMR = "NN9N"')
	CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BA,MG_N,'*% ISG = "N"')
 !!!	CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BA,MG_N,'*% LBL = "' + LBL$ + '"')
	CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BA,MG_N,'*% IZR = "' + MAP_VEC_OBLI(I%) + '"')
	CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BA,MG_N,"*% INCLUDE 'VALNUMIDC'")
 !!!	CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BA,MG_1,"GO TO FIN-" + MAP_GLS_SECC + ".")
   END DEF

   DEF INTEGER GEN_VAL_NUM
	CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BA,MG_C," ")
	CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BA,MG_A,MAP_GLS_SECC + " SECTION.")
	CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BA,MG_A,"INI-" + MAP_GLS_SECC + ".")
	LBL_NUM$ = MAP_GLS_SECC
	CALL GENRPTREP(LBL_NUM$,"-","_")
	CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BA,MG_N,"*% INCLUDE INI_" + LBL_NUM$ + MAP_GLS_PBM )
	FOR I% = 1 TO MAP_TOT_CMPO
		IF MAP_VEC_TFLD(I%)  = MAP_IND_TFLD THEN
			IF MAP_VEC_CGEN(I%) <> MAP_CTE_YES THEN
				IF MAP_VEC_VALI(I%)  = MAP_CTE_YES AND&
				   MAP_VEC_NUME(I%)  = MAP_CTE_YES THEN
					LBL$ = MAP_VEC_FRTN(I%)
					CALL GENRPTREP(LBL$,"-","_")
					LBL$ = LBL$ + MAP_GLS_PBM	     
					NRO$ = "TRUE"
					IF MAP_VEC_TIDX(I%) > 1 THEN
						FOR M% = 1 TO MAP_VEC_TIDX(I%)
							NUM_AUX1$ = '-' + STR$(M%)
							NUM_AUX2$ = '(' + STR$(M%) + ')'
							MAP_NUM_FNC = WRT_CMN_NUM
						NEXT M%
					ELSE
						NUM_AUX1$ = ""
						NUM_AUX2$ = ""
						MAP_NUM_FNC = WRT_CMN_NUM
					END IF
				ELSE
					IF MAP_VEC_VALI(I%)  = MAP_CTE_YES AND&
					   MAP_VEC_TFLD(I%)  = MAP_IND_TFLD AND&
					   MAP_VEC_PAI(I%)   = "PER" THEN
						IF MAP_VEC_TIDX(I%) > 1 THEN
							FOR M% = 1 TO MAP_VEC_TIDX(I%)
								NUM_AUX1$ = '-' + STR$(M%)
								NUM_AUX2$ = '(' + STR$(M%) + ')'
								MAP_NUM_FNC = WRT_CMN_NUM_IDC
							NEXT M%
						ELSE
							NUM_AUX1$ = ""
							NUM_AUX2$ = ""
							MAP_NUM_FNC = WRT_CMN_NUM_IDC
						END IF
					END IF
				END IF
			ELSE
				IF MAP_VEC_TCMP(I%) = "VRF" OR&
				   MAP_VEC_TCMP(I%) = "IDC" THEN
					NRO$ = "TRUE"
					JJ% = I%
					MAP_GLS_BP = MAP_GLS_BA
					MAP_NUM_FNC = MAP_FNC_PRMF_BM1
					IF MAP_GLS_IZR > "" THEN
						CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BA,MG_N,'*% IZR = "' + MAP_GLS_IZR + '"')
					ELSE
						CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BA,MG_N,'*% IZR = "' + MAP_VEC_OBLI(I%) + '"')
					END IF

					IF MAP_VEC_TFLD(I%) = MAP_IND_IKY THEN
						TNUM$ = 'IKY'
					ELSE
						IF MAP_VEC_TFLD(I%) = MAP_IND_MKY THEN
							TNUM$ = 'MKY'
						ELSE
							IF MAP_VEC_TFLD(I%) = MAP_IND_AKY THEN
								TNUM$ = 'AKY'
							ELSE
								TNUM$ = 'FLD'
							END IF
						END IF
					END IF
					CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BA,MG_N,'% TFLD = "' + TNUM$ + '"')
 !!!					CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BA,MG_N,IPTBM$ + MAP_VEC_FCMP(I%) + "010" + TPTX$)
					CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BA,MG_N,IPTBM$ + "010" + TPTX$)
				END IF
			END IF
		END IF
	NEXT I%
	CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BA,MG_N,"*% INCLUDE FIN_" + LBL_NUM$ + MAP_GLS_PBM )
	CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BA,MG_A,"FIN-" + MAP_GLS_SECC + ".")
	CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BA,MG_B,"EXIT.")
   END DEF

   DEF INTEGER GEN_EDT_KEY
	CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BA,MG_C," ")
	CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BA,MG_A,"EDT-KEY-" + MAP_GLS_MAPA +" SECTION.")
	CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BA,MG_A,"INI-EDT-KEY-" + MAP_GLS_MAPA + ".")
	CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BA,MG_B,"PERFORM EDT-IKY-" + MAP_GLS_MAPA + ".")
	CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BA,MG_B,"PERFORM EDT-MKY-" + MAP_GLS_MAPA + ".")
	CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BA,MG_B,"PERFORM EDT-AKY-" + MAP_GLS_MAPA + ".")
	CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BA,MG_N,"*% INCLUDE EDT_KEY_" + MAP_GLS_MAPA + MAP_GLS_PBM )
	CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BA,MG_A,"FIN-EDT-KEY-" + MAP_GLS_MAPA + ".")
	CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BA,MG_B,"EXIT.")
   END DEF
   
   DEF INTEGER GEN_EDT_NUM
	CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BA,MG_C," ")
	CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BA,MG_A,MAP_GLS_SECC + " SECTION.")
	CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BA,MG_A,"INI-" + MAP_GLS_SECC + ".")
	LBL_EDT$ = MAP_GLS_SECC
	CALL GENRPTREP(LBL_EDT$,"-","_")
	CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BA,MG_N,"*% INCLUDE " + LBL_EDT$ + MAP_GLS_PBM )
	FOR I% = 1 TO MAP_TOT_CMPO
		IF MAP_VEC_TFLD(I%) = MAP_IND_TFLD THEN
			IF MAP_VEC_CGEN(I%) <> MAP_CTE_YES THEN
				IF MAP_VEC_NUME(I%)  = MAP_CTE_YES THEN
					IF MAP_VEC_TIDX(I%) > 1 THEN
						FOR PP% = 1 TO MAP_VEC_TIDX(I%)
							CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BA,MG_B,"IF " + MAP_VEC_FRTN(I%) +&
								"-LEN" + IN_FRM_FLD + MAP_GLS_VIX(PP%) + " = FRM-ERR-NUME")
							CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BA,MG_1,"MOVE FRM-IND-ERRO TO " +&
								MAP_VEC_FRTN(I%) + "-LEN" + IN_FRM_FLD + MAP_GLS_VIX(PP%))
							CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BA,MG_1,"GO TO FIN-" + MAP_GLS_SECC + ".")
 !!!								"-EDT" + IN_FRM_EDT + MAP_GLS_VIX(PP%) + ".")
							CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BA,MG_B,"MOVE " + MAP_VEC_FRTN(I%) +&
								IN_FRM_FLD + MAP_GLS_VIX(PP%) + " TO " + MAP_VEC_FRTN(I%) +&
								"-EDT" + IN_FRM_EDT + ".")
							CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BA,MG_B,"MOVE " + MAP_VEC_FRTN(I%) +&
 !!!								"-EDT" + IN_FRM_EDT + MAP_GLS_VIX(PP%) + " TO " +&
								"-EDT" + IN_FRM_EDT + " TO " +&
								MAP_VEC_FRTN(I%) + "-ALF" + IN_FRM_FLD + MAP_GLS_VIX(PP%) + ".")
						NEXT PP%
					ELSE
						CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BA,MG_B,"IF " + MAP_VEC_FRTN(I%) + "-LEN" +&
							IN_FRM_FLD + " = FRM-ERR-NUME")
						CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BA,MG_1,"MOVE FRM-IND-ERRO TO " + MAP_VEC_FRTN(I%) +&
							"-LEN" + IN_FRM_FLD)
						CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BA,MG_1,"GO TO FIN-" + MAP_GLS_SECC + ".")
						CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BA,MG_B,"MOVE " + MAP_VEC_FRTN(I%) +&
							IN_FRM_FLD + " TO " + MAP_VEC_FRTN(I%) + "-EDT" + IN_FRM_EDT + ".")
						CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BA,MG_B,"MOVE " + MAP_VEC_FRTN(I%) + "-EDT" +&
							IN_FRM_EDT + " TO " + MAP_VEC_FRTN(I%) + "-ALF" + IN_FRM_FLD + ".")
					END IF
				END IF
			ELSE
				JJ% = I%
				MAP_GLS_BP = MAP_GLS_BA
				MAP_NUM_FNC = MAP_FNC_PRMF_BM1
				IF MAP_VEC_TFLD(I%) = MAP_IND_IKY THEN
					TNUM$ = 'IKY'
				ELSE
					IF MAP_VEC_TFLD(I%) = MAP_IND_MKY THEN
						TNUM$ = 'MKY'
					ELSE
						IF MAP_VEC_TFLD(I%) = MAP_IND_AKY THEN
							TNUM$ = 'AKY'
						ELSE
							TNUM$ = 'FLD'
						END IF
					END IF
				END IF
				CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BA,MG_N,'% TFLD = "' + TNUM$ + '"')
 !!!				CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BA,MG_N,IPTBM$ + MAP_VEC_FCMP(I%) + "011" + TPTX$)
				CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BA,MG_N,IPTBM$ + "011" + TPTX$)
			END IF
		END IF
	NEXT I%
	CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BA,MG_N,"*% INCLUDE FIN_" + LBL_EDT$ + MAP_GLS_PBM )
	CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BA,MG_A,"FIN-" + MAP_GLS_SECC + ".")
	CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BA,MG_B,"EXIT.")
   END DEF
   
   DEF INTEGER MAP_FNC_GEN
 ! >> BUSCA  VRF  ASOCIADO A IDC
	MAP_NUM_FNC = MAP_FNC_BUS

 ! >> PUT
	MAP_NUM_FNC = GEN_PUT_ALL
	MAP_NUM_FNC = GEN_PUT_REG

 ! >> RET
	MAP_NUM_FNC = GEN_RET_ALL
	MAP_NUM_FNC = GEN_RET_REG

 ! >> KEY
	MAP_NUM_FNC = GEN_KEY_ALL
	MAP_NUM_FNC = GEN_KEY_REG

 ! >> CLR
	MAP_NUM_FNC = GEN_CLR_ALL
	MAP_NUM_FNC = GEN_CLR_KEY
	MAP_NUM_FNC = GEN_CLR_FLD
	MAP_NUM_FNC = GEN_CLR_FLS

 ! >> FST
	MAP_NUM_FNC = GEN_FST_KEY
	MAP_NUM_FNC = GEN_FST_FLD

 ! >> PRO
	MAP_NUM_FNC = GEN_PRO_KEY
	MAP_NUM_FNC = GEN_PRO_IKY
	MAP_NUM_FNC = GEN_PRO_MKY
	MAP_NUM_FNC = GEN_PRO_AKY
	MAP_NUM_FNC = GEN_PRO_FLD
	MAP_NUM_FNC = GEN_PRO_FLS

 ! >> UNP
	MAP_NUM_FNC = GEN_UNP_KEY
	MAP_NUM_FNC = GEN_UNP_IKY
	MAP_NUM_GNC = GEN_UNP_MKY
	MAP_NUM_FNC = GEN_UNP_AKY
	MAP_NUM_FNC = GEN_UNP_FLD
	MAP_NUM_FNC = GEN_UNP_FLS

 ! >> VAL
	MAP_NUM_FNC = GEN_VAL_KEY

	WRT_BM = "BQ"
	MAP_IND_TFLD = MAP_IND_IKY
	MAP_GLS_TFLD = "IKY"
	MAP_NUM_FNC = GEN_VAL_TFLD

	WRT_BM = "BA"
	MAP_IND_TFLD = MAP_IND_MKY
	MAP_GLS_TFLD = "MKY"
	MAP_NUM_FNC = GEN_VAL_TFLD

	WRT_BM = "BQ"
	MAP_IND_TFLD = MAP_IND_AKY
	MAP_GLS_TFLD = "AKY"
	MAP_NUM_FNC = GEN_VAL_TFLD

	WRT_BM = "BU"
	MAP_IND_TFLD = MAP_IND_FLD
	MAP_GLS_TFLD = "FLD"
	MAP_NUM_FNC = GEN_VAL_TFLD

	MAP_NUM_FNC = GEN_VAL_FLS
	MAP_NUM_FNC = VAL_CON_KEY
	MAP_NUM_FNC = VAL_CON_IKY
	MAP_NUM_FNC = VAL_CON_FLD
	MAP_NUM_FNC = GEN_VAL_CON

 ! >> VAL-NUM
	MAP_NUM_FNC = VAL_NUM_KEY

	MAP_IND_TFLD = MAP_IND_IKY
	MAP_GLS_SECC = "VAL-NUM-IKY-" + MAP_GLS_MAPA
	MAP_GLS_IZR = "S"
	MAP_NUM_FNC = GEN_VAL_NUM

	MAP_IND_TFLD = MAP_IND_MKY
	MAP_GLS_SECC = "VAL-NUM-MKY-" + MAP_GLS_MAPA
	MAP_GLS_IZR = "S"
	MAP_NUM_FNC = GEN_VAL_NUM

	MAP_IND_TFLD = MAP_IND_AKY
	MAP_GLS_SECC = "VAL-NUM-AKY-" + MAP_GLS_MAPA
	MAP_GLS_IZR = "S"
	MAP_NUM_FNC = GEN_VAL_NUM

	MAP_IND_TFLD = MAP_IND_FLD
	MAP_GLS_SECC = "VAL-NUM-FLD-" + MAP_GLS_MAPA
	MAP_GLS_IZR = "S"
	MAP_NUM_FNC = GEN_VAL_NUM

 ! >> EDT-NUM
	MAP_NUM_FNC = GEN_EDT_KEY

	MAP_IND_TFLD = MAP_IND_IKY
	MAP_GLS_SECC = "EDT-IKY-" + MAP_GLS_MAPA
	MAP_NUM_FNC = GEN_EDT_NUM

	MAP_IND_TFLD = MAP_IND_MKY
	MAP_GLS_SECC = "EDT-MKY-" + MAP_GLS_MAPA
	MAP_NUM_FNC = GEN_EDT_NUM

	MAP_IND_TFLD = MAP_IND_AKY
	MAP_GLS_SECC = "EDT-AKY-" + MAP_GLS_MAPA
	MAP_NUM_FNC = GEN_EDT_NUM

	MAP_IND_TFLD = MAP_IND_FLD
	MAP_GLS_SECC = "EDT-FLD-" + MAP_GLS_MAPA
	MAP_NUM_FNC = GEN_EDT_NUM

	IF MAP_COD_SOP = "MCP" THEN
		WRT_BM = "BA"
		MAP_NUM_FNC = PUT_SDF_FRM
		WRT_BM = "BA"
		MAP_NUM_FNC = PUT_FRM_SDF
		WRT_BM = "BA"
		MAP_NUM_FNC = PUT_SCR_SDF
	END IF

   CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BQ,MG_N,"*% INCLUDE EOF_BQ" + MAP_GLS_PBM )
   CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BU,MG_N,"*% INCLUDE EOF_BU" + MAP_GLS_PBM )
   CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BA,MG_N,"*% INCLUDE EOF" + MAP_GLS_PBM )
   CALL PUT_GEN(MAP_OPT_GEN,MAP_GLS_BA,MG_N,"*% INCLUDE EOF_IBM" + MAP_GLS_PBM )

   END DEF

 !============ ESCRIBE EN ARCHIVO BI ELEMENTOS USADOS EN EL MAPA ===========

   DEF INTEGER MAP_GEN_FIF

      PRINT #MAP_CNL_FINF,'% FCH = '    + FEC$
      PRINT #MAP_CNL_FINF,'% NUM = '    + NRO$
      PRINT #MAP_CNL_FINF,'% VRF = '    + VRF$
      PRINT #MAP_CNL_FINF,'% IDC = '    + IDC$
      PRINT #MAP_CNL_FINF,'% BUSTAB = ' + BUSTAB$
      PRINT #MAP_CNL_FINF,'% VALCOD = ' + VALCOD$
      PRINT #MAP_CNL_FINF,'% BUSMSC = ' + BUSMSC$
      PRINT #MAP_CNL_FINF,'% VALIND = ' + VALIND$
      PRINT #MAP_CNL_FINF,'% BUSOFI = ' + BUSOFI$
      PRINT #MAP_CNL_FINF,'% VALOFI = ' + VALOFI$
      PRINT #MAP_CNL_FINF,'% BUSUSR = ' + BUSUSR$
      PRINT #MAP_CNL_FINF,'% VALUSR = ' + VALUSR$
      PRINT #MAP_CNL_FINF,'% VALTDU = ' + VALTDU$
      PRINT #MAP_CNL_FINF,'% ERRGLS = ' + ERRGLS$

   END DEF

 !!! NAMED_DATA INDEX=1 NAME='MESSAGE_KEY'
 !!!    DATA='SC04' ;
   DEF INTEGER MAP_FNC_NAMED_DATA
	TOKEN = NEXTTOKEN
	TOKEN = NEXTTOKEN
	TOKEN = NEXTTOKEN
	TOKEN = NEXTTOKEN
	TOKEN = NEXTTOKEN
	TOKEN = NEXTTOKEN
	IF STRTOKEN = 'MESSAGE_KEY' THEN
		TOKEN = NEXTTOKEN
		TOKEN = NEXTTOKEN
		TOKEN = NEXTTOKEN
		MESSAGE_KEY$ = STRTOKEN
	END IF
   END DEF

 !====================== FINALIZACION ======================

   DEF INTEGER MAP_FNC_FIN

	WTXT_NUM_SOR = 7
	MAP_GLS_TXT = MAP_FNC_WRWF('% LRCV = "' + STR$(PTX_LRCV) + '"')
	MAP_GLS_TXT = MAP_FNC_WRWF('% LENV = "' + STR$(PTX_LENV) + '"')
	MAP_GLS_TXT = MAP_FNC_WRWF('% INCLUDE "GNSWFTRL"')

	UYS_ALF_SECC = 'X'
	MAP_GLS_TXT = MAP_FNC_WRWU('EndTransaction')
	MAP_GLS_TXT = MAP_FNC_WRWU('')
	MAP_GLS_TXT = MAP_FNC_WRWU('ProcessingList')
	MAP_GLS_TXT = MAP_FNC_WRWU('')
	MAP_GLS_TXT = MAP_FNC_WRWU('Panel ' + MAPUYS )
	MAP_GLS_TXT = MAP_FNC_WRWU('')
	MAP_GLS_TXT = MAP_FNC_WRWU(',Transaction ' + MAPUYS )
	MAP_GLS_TXT = MAP_FNC_WRWU('EndProcessingList')
	MAP_GLS_TXT = MAP_FNC_WRWU('EndForm')
	MAP_GLS_TXT = MAP_FNC_WRWU('')
	MAP_GLS_TXT = MAP_FNC_WRWU('FormLoop #FormLoop')
	MAP_GLS_TXT = MAP_FNC_WRWU('')
	MAP_GLS_TXT = MAP_FNC_WRWU('ProcessingList')
	MAP_GLS_TXT = MAP_FNC_WRWU('')
	MAP_GLS_TXT = MAP_FNC_WRWU('FormLoop #FormLoop')
	MAP_GLS_TXT = MAP_FNC_WRWU('EndProcessingList')
	MAP_GLS_TXT = MAP_FNC_WRWU('EndFormLibrary')


 !!! ++ INI ARCHIVO SDF
 !!! ++ Documentacion SECC 4
 !!! ++ SECC 4 => Campos I/O, Campos O/O, Variables
 !!! ++ 
 !!! ++ SSEC 0 => Header de archivo SDF  + ( AL FINAL, PUES AUN NO SE RESCATA MESSAGE KEY )
 !!! ++           Campos I/O de mapa HDR
 !!! ++ SSEC 1 => Campos I/O de pantalla
 !!! ++ SSEC 2 => Campos I/O de mapa TRL +
 !!! ++           Campos O/O de mapa HDR
 !!! ++ SSEC 3 => Campos O/O de pantalla
 !!! ++ SSEC 4 => Campos O/O de mapa TRL
 !!! ++ SSEC 5 => Variables
 !!! ++ 

 !!! HEADER ARCHIVO SFD AL FINAL, PUES AUN NO SE RESCATA MESSAGE KEY
	UYS_ALF_SECC = '4'
	IF PUT_HDR_SECC_4 = "N" THEN
		PUT_HDR_SECC_4 = "S"
		UYS_NUM_SSEC = 0
		MAP_GLS_TXT = MAP_FNC_WRWU('')
		MAP_GLS_TXT = MAP_FNC_WRWU('PatchMode')
		MAP_GLS_TXT = MAP_FNC_WRWU('')
		MAP_GLS_TXT = MAP_FNC_WRWU('Dictionary   =  "SDFPLUSDICTIONARY"')
		MAP_GLS_TXT = MAP_FNC_WRWU('Directory   =  "CSTLIBDIR"')
		MAP_GLS_TXT = MAP_FNC_WRWU('NoAccess')
		MAP_GLS_TXT = MAP_FNC_WRWU('Language   =  ""')
		MAP_GLS_TXT = MAP_FNC_WRWU('')
		MAP_GLS_TXT = MAP_FNC_WRWU('FormLibrary ' + MAP_GLS_PROY + 'A' + MAP_GLS_MAPA)
		MAP_GLS_TXT = MAP_FNC_WRWU(' Using ' + MAP_GLS_PROY + 'A' + MAP_GLS_MAPA)
		MAP_GLS_TXT = MAP_FNC_WRWU('')
		MAP_GLS_TXT = MAP_FNC_WRWU('Form ' + MAPUYS)
		MAP_GLS_TXT = MAP_FNC_WRWU('(MessageKey = "' + MESSAGE_KEY$ + '"')
		MAP_GLS_TXT = MAP_FNC_WRWU(',EditorScenario = Update')
		MAP_GLS_TXT = MAP_FNC_WRWU(',EscapeAble = FALSE')
		MAP_GLS_TXT = MAP_FNC_WRWU(')')
		MAP_GLS_TXT = MAP_FNC_WRWU('')
		MAP_GLS_TXT = MAP_FNC_WRWU('MessageType ' + MAP_GLS_PROY + 'A' + MAP_GLS_MAPA + 'SR')
		MAP_GLS_TXT = MAP_FNC_WRWU('UniqueIdTimestamp  =  @5EAA49476E60@')
		MAP_GLS_TXT = MAP_FNC_WRWU('ModificationTimestamp  =  @5EAA4947A4EB@')
		MAP_GLS_TXT = MAP_FNC_WRWU('')
		MAP_GLS_TXT = MAP_FNC_WRWU('MessageField ' + MAP_GLS_PROY + 'A' + MAP_GLS_MAPA + 'SRF')
		MAP_GLS_TXT = MAP_FNC_WRWU('')
		MAP_GLS_TXT = MAP_FNC_WRWU('MessageVariable ' + MAP_GLS_PROY + 'A' + MAP_GLS_MAPA + 'SR')
		MAP_GLS_TXT = MAP_FNC_WRWU('(Retain = TRUE')
		MAP_GLS_TXT = MAP_FNC_WRWU(')')
		MAP_GLS_TXT = MAP_FNC_WRWU('EndMessageVariable')
		MAP_GLS_TXT = MAP_FNC_WRWU('EndMessageType')
		MAP_GLS_TXT = MAP_FNC_WRWU('')
		MAP_GLS_TXT = MAP_FNC_WRWU('MessageType ' + MAPUYS )
		MAP_GLS_TXT = MAP_FNC_WRWU('UniqueIdTimestamp  =  @5EAA4A4A832B@')
		MAP_GLS_TXT = MAP_FNC_WRWU('ModificationTimestamp  =  @5EBA616EF2AA@')
		MAP_GLS_TXT = MAP_FNC_WRWU('(CommandMessage = TRUE')
		MAP_GLS_TXT = MAP_FNC_WRWU(')')
		MAP_GLS_TXT = MAP_FNC_WRWU('')
		MAP_GLS_TXT = MAP_FNC_WRWU('MessageField SDF-HDR-COD-TRCD')
		MAP_GLS_TXT = MAP_FNC_WRWU('(Length =      4')
		MAP_GLS_TXT = MAP_FNC_WRWU(')')
		MAP_GLS_TXT = MAP_FNC_WRWU('')
		MAP_GLS_TXT = MAP_FNC_WRWU('MessageField SDF-HDR-COD-CACC')
		MAP_GLS_TXT = MAP_FNC_WRWU('(Length =      5')
		MAP_GLS_TXT = MAP_FNC_WRWU(')')
		MAP_GLS_TXT = MAP_FNC_WRWU('')

		UYS_NUM_SSEC = 2
		MAP_GLS_TXT = MAP_FNC_WRWU('MessageField SDF-TRL-COD-CACC')
		MAP_GLS_TXT = MAP_FNC_WRWU('(Length =     11')
		MAP_GLS_TXT = MAP_FNC_WRWU(')')
		MAP_GLS_TXT = MAP_FNC_WRWU('')
		MAP_GLS_TXT = MAP_FNC_WRWU('MessageField SDF-HDR-COD-FUNC')
		MAP_GLS_TXT = MAP_FNC_WRWU('(Length =     11')
		MAP_GLS_TXT = MAP_FNC_WRWU(')')
		MAP_GLS_TXT = MAP_FNC_WRWU('')
		MAP_GLS_TXT = MAP_FNC_WRWU('MessageField SDF-HDR-GLS-GLS1')
		MAP_GLS_TXT = MAP_FNC_WRWU('(Length =      3')
		MAP_GLS_TXT = MAP_FNC_WRWU(')')
		MAP_GLS_TXT = MAP_FNC_WRWU('')
		MAP_GLS_TXT = MAP_FNC_WRWU('MessageField SDF-HDR-GLS-GLS2')
		MAP_GLS_TXT = MAP_FNC_WRWU('(Length =      3')
		MAP_GLS_TXT = MAP_FNC_WRWU(')')
		MAP_GLS_TXT = MAP_FNC_WRWU('')
		MAP_GLS_TXT = MAP_FNC_WRWU('MessageField SDF-HDR-GLS-GLS3')
		MAP_GLS_TXT = MAP_FNC_WRWU('(Length =      3')
		MAP_GLS_TXT = MAP_FNC_WRWU(')')
		MAP_GLS_TXT = MAP_FNC_WRWU('')
		MAP_GLS_TXT = MAP_FNC_WRWU('MessageField SDF-HDR-COD-SIST')
		MAP_GLS_TXT = MAP_FNC_WRWU('(Length =      3')
		MAP_GLS_TXT = MAP_FNC_WRWU(')')
		MAP_GLS_TXT = MAP_FNC_WRWU('')
		MAP_GLS_TXT = MAP_FNC_WRWU('MessageField SDF-HDR-GLS-NFRM')
		MAP_GLS_TXT = MAP_FNC_WRWU('(Length =      3')
		MAP_GLS_TXT = MAP_FNC_WRWU(')')
		MAP_GLS_TXT = MAP_FNC_WRWU('')
		MAP_GLS_TXT = MAP_FNC_WRWU('MessageField SDF-HDR-GLS-FPRO')
		MAP_GLS_TXT = MAP_FNC_WRWU('(Length =     60')
		MAP_GLS_TXT = MAP_FNC_WRWU(')')
		MAP_GLS_TXT = MAP_FNC_WRWU('')
		MAP_GLS_TXT = MAP_FNC_WRWU('MessageField SDF-HDR-FEC-DMSA')
		MAP_GLS_TXT = MAP_FNC_WRWU('(Length =     10')
		MAP_GLS_TXT = MAP_FNC_WRWU(')')
		MAP_GLS_TXT = MAP_FNC_WRWU('')

		UYS_NUM_SSEC = 4
		MAP_GLS_TXT = MAP_FNC_WRWU('MessageField SDF-TRL-GLS-TERM')
		MAP_GLS_TXT = MAP_FNC_WRWU('(Length =     79')
		MAP_GLS_TXT = MAP_FNC_WRWU(')')
		MAP_GLS_TXT = MAP_FNC_WRWU('')
		MAP_GLS_TXT = MAP_FNC_WRWU('MessageField SDF-TRL-COD-CMND')
		MAP_GLS_TXT = MAP_FNC_WRWU('(Length =     39')
		MAP_GLS_TXT = MAP_FNC_WRWU(')')
		MAP_GLS_TXT = MAP_FNC_WRWU('')
		MAP_GLS_TXT = MAP_FNC_WRWU('MessageField SDF-TRL-GLS-PRMT')
		MAP_GLS_TXT = MAP_FNC_WRWU('(Length =     25')
		MAP_GLS_TXT = MAP_FNC_WRWU(')')
		MAP_GLS_TXT = MAP_FNC_WRWU('')
		MAP_GLS_TXT = MAP_FNC_WRWU('MessageField SDF-TRL-GLS-MENS')
		MAP_GLS_TXT = MAP_FNC_WRWU('(Length =     79')
		MAP_GLS_TXT = MAP_FNC_WRWU(')')
		MAP_GLS_TXT = MAP_FNC_WRWU('')
	END IF

   WBMS_NUM_SOR = 0
   MAP_NUM_LINE = 0
   MAP_NUM_COLU = 0

 !!!JSS-INI 11-APR-1995

   IF MAP_COD_AIU = "BMS" THEN

   MAP_GLS_WRIT = MAP_FNC_WBMS("         PRINT NOGEN")
   MAP_GLS_WRIT = MAP_GLS_PROY + "A" + MAP_GLS_MAPA +&
         MAP_VEC_BLK(LEN(MAP_GLS_PROY + MAP_GLS_MAPA) + 1 ) +&
         "DFHMSD TYPE=&SYSPARM,TERM=3270,MODE=INOUT,LANG=COBOL,"
   CALL MAP_RUT_SPA(MAP_GLS_WRIT,71)
   MAP_GLS_WRIT = MAP_GLS_WRIT + "X"
   MAP_GLS_WRIT = MAP_FNC_WBMS(MAP_GLS_WRIT)
   MAP_GLS_WRIT = "               TIOAPFX=YES"
   MAP_GLS_WRIT = MAP_FNC_WBMS(MAP_GLS_WRIT)
        MAP_GLS_WRIT = MAP_GLS_PROY + "F" + MAP_GLS_MAPA +&
         MAP_VEC_BLK(LEN(MAP_GLS_PROY + MAP_GLS_MAPA) + 1 ) +&
         "DFHMDI SIZE=(" + STR$(MAP_NUM_SUPE -&
            MAP_NUM_INFE + 1 ) + ",80),LINE=" + STR$(MAP_NUM_INFE) +&
            ",COLUMN=1,CTRL=(FREEKB)"
   MAP_GLS_WRIT = MAP_FNC_WBMS(MAP_GLS_WRIT)

   WBMS_NUM_SOR = 5
   MAP_GLS_WRIT = "SCRMENS  DFHMDF POS=(" + STR$(24 - MAP_NUM_INFE + 1) +&
         ",01),ATTRB=(ASKIP,BRT),LENGTH=79,"
   CALL MAP_RUT_SPA(MAP_GLS_WRIT,71)
   MAP_GLS_WRIT = MAP_GLS_WRIT + "X"
   MAP_GLS_WRIT = MAP_FNC_WBMS(MAP_GLS_WRIT)
   MAP_GLS_WRIT = "               INITIAL=' '"
   MAP_GLS_WRIT = MAP_FNC_WBMS(MAP_GLS_WRIT)
   MAP_GLS_WRIT = "         DFHMSD TYPE=FINAL"
   MAP_GLS_WRIT = MAP_FNC_WBMS(MAP_GLS_WRIT)
   MAP_GLS_WRIT = "         END"
   MAP_GLS_WRIT = MAP_FNC_WBMS(MAP_GLS_WRIT)
   WTXT_NUM_SOR = 7
   MAP_GLS_TXT = MAP_FNC_WRWI(V_ANSI(MG_C) + " ")
   MAP_GLS_TXT = MAP_FNC_WRWI("      * Linea de Mensajes")

  ELSE
      IF MAP_COD_AIU = "SCC" THEN
          MAP_GLS_WRIT = '% SIS = "' + MAP_GLS_PROY + '"'
          MAP_GLS_WRIT = MAP_FNC_WBMS(MAP_GLS_WRIT)
          MAP_GLS_WRIT = '% SCC = "' + MAP_GLS_PROY + "F" + MAP_GLS_MAPA + '"'
          MAP_GLS_WRIT = MAP_FNC_WBMS(MAP_GLS_WRIT)
          MAP_GLS_WRIT = '% PGM = "' + MAP_GLS_PROY + "A" + MAP_GLS_MAPA + '"'
          MAP_GLS_WRIT = MAP_FNC_WBMS(MAP_GLS_WRIT)
      END IF
  END IF
  
 !!!JSS-FIN 11-APR-1995


 !!!JSS-INI 10-APR-1995 15:42:55

   IF MAP_COD_AIU = "SDF" THEN
       MAP_GLS_TXT = MAP_FNC_WRWI(V_ANSI(MG_B) + "05 " + MAP_GLS_MAPA +&
        "-GLS-MENS-LEN              PIC  X(01).")
   ELSE
       IF MAP_COD_AIU = "SCC" THEN
           MAP_GLS_TXT = MAP_FNC_WRWI(V_ANSI(MG_B) + "05 " + MAP_GLS_MAPA +&
            "-GLS-MENS-LEN      VALUE 0 PIC S9(02).")
       ELSE
           MAP_GLS_TXT = MAP_FNC_WRWI(V_ANSI(MG_B) + "05 " + MAP_GLS_MAPA +&
            "-GLS-MENS-LEN     COMP     PIC S9(04).")
       END IF
   END IF

 !!!JSS-FIN 10-APR-1995 15:42:55

   MAP_GLS_TXT = MAP_FNC_WRWI(V_ANSI(MG_B) + "05 " + MAP_GLS_MAPA +&
         "-GLS-MENS-ATR              PIC  X(01).")
   MAP_GLS_TXT = MAP_FNC_WRWI(V_ANSI(MG_B) + "05 " + MAP_GLS_MAPA +&
         "-GLS-MENS.")
   MAP_GLS_TXT = MAP_FNC_WRWI(V_ANSI(MG_B) + "   07 " + MAP_GLS_MAPA +&
            "-GLS-MEN1               PIC  X(40).")
   MAP_GLS_TXT = MAP_FNC_WRWI(V_ANSI(MG_B) + "   07 " + MAP_GLS_MAPA +&
            "-GLS-MEN2               PIC  X(39).")
   END DEF

 !---------------------------- MODULO PRINCIPAL --------------------------------

 !!!   ON ERROR GO TO MAP_LAB_BAD
   MAP_NUM_FNC = MAP_FNC_INI
   MAP_NUM_FNC = MAP_FNC_ATC

 LABE_SCRS:
   WTXT_NUM_SOR = 1
   WBMS_NUM_SOR = 3
      
   WHILE TOKEN <> ETXTOK    
      IF VALTOKEN = "TEXT" THEN
         MAP_NUM_FNC = MAP_FNC_TEX
      ELSE
      IF VALTOKEN = "FIELD" THEN
         MAP_NUM_FNC = MAP_FNC_FLD
      ELSE
      IF VALTOKEN = "NAMED_DATA" THEN
         MAP_NUM_FNC = MAP_FNC_NAMED_DATA
      END IF
      END IF
      END IF
      TOKEN = NEXTTOKEN
   NEXT

   MAP_NUM_FNC = MAP_FNC_FIN
   MAP_NUM_FNC = MAP_FNC_COD
   MAP_NUM_FNC = MAP_FNC_GEN

   MAP_NUM_FNC = MAP_GEN_FIF
   
   GO TO LABE_CONT

 !!!   MAP_CNL_AUX% = 8
 !!!   MAP_FIL_AUX$ = MAP_GLS_MAPA + "MAT.GEN"
 !!!   OPEN MAP_FIL_AUX$ FOR OUTPUT AS FILE #MAP_CNL_AUX%,RECORDTYPE ANY, &
 !!!      ORGANIZATION SEQUENTIAL VARIABLE,   RECORDSIZE 255

 !!!   PRINT #MAP_CNL_AUX%,'         1         2         3         '+&
 !!!           '4         5         6         7         8'  
 !!!   PRINT #MAP_CNL_AUX%,'123456789 123456789 123456789 123456789'+&
 !!!           ' 123456789 123456789 123456789 123456789 '
 !!!   PRINT #MAP_CNL_AUX%,'         '
 !!!   FOR I% = 1 TO 24
 !!!   VARI_AUXI$ = ""
 !!!   FOR J% = 1 TO 80
 !!!   IF MAP_MAT_SCRN(I%,J%) <> 0 THEN
 !!!      VARI_AUXI$ = VARI_AUXI$ + STR$(MAP_MAT_SCRN(I%,J%))
 !!!   ELSE
 !!!      VARI_AUXI$ = VARI_AUXI$ + "."
 !!!   END IF
 !!!   NEXT J%
 !!!   PRINT #MAP_CNL_AUX%,VARI_AUXI$
 !!!   NEXT I%
 LABE_CONT:
 !!!  IF MAP_SWI_ERRO = MAP_CTE_YES THEN
 !!!      PRINT ""
 !!!   END IF
   CALL LIB$DO_COMMAND('$ EDTFRM ' + MAP_GLS_PROY + ' ' + MAP_GLS_MAPA + ' ' +&
                                     MAP_OPT_GEN + ' ' + MAP_OPT_HLP )

   GO TO LABE_ATRA
   
 MAP_LAB_BAD:
   PRINT MAP_ASC_BEL,MAP_ASC_BEL
   PRINT "Error(";ERR;") ";ERT$(ERR);" en linea ";erl; ", Modulo ";ern$
   IF ERR = 2 THEN
      PRINT MAP_FIL_FLG,FILE_WSS, " : Nombre de archivo ilegal"
   ELSE 
   IF ERR = 5 THEN
      PRINT MAP_FIL_FLG,FILE_WSS, " Archivo inexistente       "
   ELSE
   IF ERR = 55 THEN
      PRINT " Indice fuera de rango "
   END IF
   END IF
   RESUME 999
999
 LABE_ATRA:
 END
1300   SUB MAP_RUT_SPA(STRING SPA_GLS_STR BY DESC,REAL SPA_NUM_LMT BY REF)
      WHILE LEN(SPA_GLS_STR) < SPA_NUM_LMT
         SPA_GLS_STR = SPA_GLS_STR + " "
      NEXT
   END SUB

1400   SUB MAP_RUT_PIC(STRING PIC_GLS_PIC BY DESC)
      PIC_SWI_ALL$ = "YES"
      PIC_I% = 1
      PIC_J% = LEN(PIC_GLS_PIC)
      PIC_0$ = ""
      IF PIC_J% < 10 THEN
         PIC_0$ = "0"
      END IF
      PIC_GLS_FST$ = LEFT$(PIC_GLS_PIC,1)
      WHILE PIC_I% <= PIC_J%
         IF MID$(PIC_GLS_PIC,PIC_I%,1) <> PIC_GLS_FST$ THEN
            PIC_SWI_ALL$ = "NOT"
            PIC_I% = PIC_J% + 1
         END IF
         PIC_I% = PIC_I% + 1
      NEXT
      IF PIC_SWI_ALL$ = "YES" THEN
         PIC_GLS_PIC = PIC_GLS_FST$ + "(" +&
                  PIC_0$ + STR$(PIC_J%) + ")"
      END IF
   END SUB

1600   SUB PUT_GEN(STRING MAP_OPT_GEN BY DESC,STRING CNL BY DESC,INTEGER MARGEN, STRING REGISTRO BY DESC)
      DECLARE STRING REG_GEN   , V_ANSI(6) ,&
		     REG_1,	 REG_2
      DECLARE INTEGER   CONSTANT          &
         MG_C       =  1,   MG_A       =  2,&
         MG_B       =  3,   MG_1       =  4,&
         MG_2       =  5,   MG_N       =  6
         V_ANSI(MG_C) = "      "
         V_ANSI(MG_A) = "       "
         V_ANSI(MG_B) = "           "
         V_ANSI(MG_1) = "                "
         V_ANSI(MG_2) = "                   "
         V_ANSI(MG_N) = ""
         REG_1 = ""
         REG_2 = ""
         REG_GEN = V_ANSI(MARGEN) + REGISTRO
         IF LEN(REG_GEN) > 72 THEN
             GEN_I% = 1
             GEN_J% = 3
             WHILE MID$(REG_GEN,GEN_I%,4) <> " TO " AND &
                   GEN_I% < LEN(REG_GEN) 
                      GEN_I% = GEN_I% + 1
             NEXT
             IF GEN_I% > 72 THEN
                 GEN_I% = 71
                 GEN_J% = 0
                 WHILE MID$(REG_GEN,GEN_I%,1) <> " "
                      GEN_I% = GEN_I% - 1
                 NEXT
             END IF
             REG_1 = LEFT$(REG_GEN,GEN_I% + GEN_J%)
             REG_2 = V_ANSI(MG_1) + RIGHT$(REG_GEN,GEN_I% + 1 + GEN_J%)
         ELSE
            REG_1 = REG_GEN
         END IF

	IF MAP_OPT_GEN = "NOOPT" THEN
             PRINT #3,REG_1
             IF REG_2 > "" THEN
                 PRINT #3,REG_2
	     END IF
         ELSE            
         IF CNL = "BQ" AND&
            MAP_OPT_GEN <> "UPD" THEN
             PRINT #3,REG_1
             IF REG_2 > "" THEN
                 PRINT #3,REG_2
	     END IF
         ELSE
         IF CNL = "BU"  AND&
            MAP_OPT_GEN <> "CON" THEN
             PRINT #8,REG_1
             IF REG_2 > "" THEN
                 PRINT #8,REG_2
	     END IF
         ELSE
         IF CNL = "BA" THEN
            IF MAP_OPT_GEN <> "UPD" THEN
		PRINT #3,REG_1
	    END IF
            IF MAP_OPT_GEN <> "CON" THEN
		PRINT #8,REG_1
	    END IF
            IF REG_2 > "" THEN
	            IF MAP_OPT_GEN <> "UPD" THEN
			PRINT #3,REG_2
		    END IF
	            IF MAP_OPT_GEN <> "CON" THEN
			PRINT #8,REG_2
		    END IF
	     END IF
         ELSE
         IF CNL <> "BQ" AND CNL <> "BU" AND CNL <> "BA" THEN
             PRINT " ERROR ( BQ,BU,BA ) <> "; CNL ;"#" ; REGISTRO ; "#"
             PRINT #3,"INI_ERROR"
             PRINT #3,REG_1
             PRINT #3,"FIN_ERROR"
         END IF
         END IF
         END IF
         END IF
         END IF
   END SUB


1700   SUB GENRPTMAN (STRING STRG BY DESC,STRING MANT)
 !
 !  Esta subrutina  recibe en el primer parametro (STRG) la variable a
 !  modificar y mantiene en ella solo aquellos caracteres que aparecen 
 !  en el segundo parametro (MANT)
 !  Ejemplo:
 !   Si PICT_FILD tiene '99.999.999,99' despues de un
 !      CALL GENRPTMAN(PICT_FILD,"9,") 
 !      PICT_FILD tiene '99999999,99'
 !
   DECLARE      INTEGER      SIZE_STRG
   DECLARE      INTEGER      SIZE_MANT
   DECLARE      STRING      VARI_AUXI
   DECLARE      STRING      VARI_MIDD

   SIZE_STRG = LEN(STRG) 
   SIZE_MANT = LEN(MANT)
   VARI_AUXI = ""
   FOR I% = 1 TO SIZE_STRG
      VARI_MIDD = MID$(STRG,I%,1) 
      FOR J% = 1 TO SIZE_MANT
         IF MID$(MANT,J%,1) = VARI_MIDD THEN
             VARI_AUXI = VARI_AUXI + VARI_MIDD 
         END IF
      NEXT J%
   NEXT I%
   STRG = VARI_AUXI
   END SUB



1800   SUB GENRPTREP (STRING ESTR_INGS BY DESC, STRING CRTR_ORIG BY DESC,&
          STRING CRTR_REEM BY DESC)

 !   Reemplaza en ESTR_INGS el CRTR_ORIG(caracter original)
 !   por CRTR_REEM(carater(es) de reemplazo)
 !
 !   Ejemplo de llamada de esta subrutina:
 !       PICT_FILD = 999999,999
 !      CALL GENRPTREP(PICT_FILD,",","V")
 !   Esta subrutina devuelve en PICT_FILD el valor 999999V999

   LARGO_STR% = LEN(ESTR_INGS) 
   VAR_AUX$ = ""
   FOR I% = 1 TO LARGO_STR%
      IF MID$(ESTR_INGS,I%,1) = CRTR_ORIG THEN
         VAR_AUX$ = VAR_AUX$ + CRTR_REEM
      ELSE
         VAR_AUX$ = VAR_AUX$ + MID$(ESTR_INGS,I%,1)
      END IF
   NEXT I%
   ESTR_INGS = VAR_AUX$
   END SUB
