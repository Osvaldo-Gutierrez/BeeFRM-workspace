% IF GEN_VAX

% IF NOT INHIBE_FIO_CLO
   DEF INTEGER FIO_{ARCH}_CLO

        ON ERROR GO TO ERR_FIO_{ARCH}_CLO

        CLOSE #C_FILE_{ARCH}

        GO TO OK_FIO_{ARCH}_CLO

 ERR_FIO_{ARCH}_CLO:

        BIP = EMIT_BIP
        BIP = EMIT_BIP
        BIP = EMIT_BIP
        IF ERR = 2 THEN
                BUFOUT = FNC_PRINT(FILE_{ARCH} + " : NOMBRE DE ARCHIVO ILEGAL")
        ELSE 
        IF ERR = 5 THEN
                BUFOUT = FNC_PRINT(FILE_{ARCH} + " ARCHIVO INEXISTENTE")
        ELSE
                BUFOUT = FNC_PRINT(FILE_{ARCH} + "CODIGO : " + ERT$(ERR) )
                BUFOUT = FNC_PRINT(FILE_{ARCH} + "MENSAJE : " + ERT$(ERR) )
        END IF
        END IF

        RESUME

 OK_FIO_{ARCH}_CLO:

   END DEF
% END
% INHIBE_FIO_CLO = FALSE

% IF FINP

   DEF INTEGER FIO_{ARCH}_INP

        ON ERROR GO TO ERR_FIO_{ARCH}_INP

        OPEN FILE_{ARCH} FOR INPUT AS FILE #C_FILE_{ARCH} ,RECORDSIZE 255,  ORGANIZATION SEQUENTIAL VARIABLE, RECORDTYPE ANY

        GO TO OK_FIO_{ARCH}_INP

 ERR_FIO_{ARCH}_INP:

        BIP = EMIT_BIP
        BIP = EMIT_BIP
        BIP = EMIT_BIP
        IF ERR = 2 THEN
                BUFOUT = FNC_PRINT(FILE_{ARCH} + " : NOMBRE DE ARCHIVO ILEGAL")
        ELSE 
        IF ERR = 5 THEN
                BUFOUT = FNC_PRINT(FILE_{ARCH} + " ARCHIVO INEXISTENTE")
        ELSE
                BUFOUT = FNC_PRINT(FILE_{ARCH} + "CODIGO : " + ERT$(ERR) )
                BUFOUT = FNC_PRINT(FILE_{ARCH} + "MENSAJE : " + ERT$(ERR) )
        END IF
        END IF

        RESUME

 OK_FIO_{ARCH}_INP:

   END DEF

   DEF STRING FIO_{ARCH}_GETNXT

        ON ERROR GO TO ERR_FIO_{ARCH}_GETNXT

        GET #C_FILE_{ARCH}
        FIO_RLEN = RECOUNT
        MOVE FROM #C_FILE_{ARCH},FIO_BUF0 = FIO_RLEN

        FIO_{ARCH}_GETNXT = FIO_BUF0

% IF {ARCH} = MTX
 !!!        PASS$ = COMPACT(FIO_BUF0)
 !!!	FIO_ACCI = FIO_FMT_PUT(FIO_STAT,PASS$)
% END

        GO TO OK_FIO_{ARCH}_GETNXT

 ERR_FIO_{ARCH}_GETNXT:

        IF ERR = 11 THEN
                FIO_STAT = 10
        ELSE
                BUFOUT = FNC_PRINT(FILE_{ARCH} + "CODIGO : " + ERT$(ERR) )
                BUFOUT = FNC_PRINT(FILE_{ARCH} + "MENSAJE : " + ERT$(ERR) )
        END IF

        RESUME {LBL_RESUME}

 OK_FIO_{ARCH}_GETNXT:
        FIO_STAT = 0
{LBL_RESUME}
   END DEF

% ELSE

   DEF INTEGER FIO_{ARCH}_OUT

        ON ERROR GO TO ERR_FIO_{ARCH}_OUT

        OPEN FILE_{ARCH} FOR OUTPUT AS FILE #C_FILE_{ARCH}, ORGANIZATION SEQUENTIAL VARIABLE , RECORDSIZE 255, RECORDTYPE ANY

        GO TO OK_FIO_{ARCH}_OUT
 ERR_FIO_{ARCH}_OUT:
        BIP = EMIT_BIP
        BIP = EMIT_BIP
        BIP = EMIT_BIP
        IF ERR = 2 THEN
                BUFOUT = FNC_PRINT(FILE_{ARCH} + " : NOMBRE DE ARCHIVO ILEGAL")
        ELSE 
        IF ERR = 5 THEN
                BUFOUT = FNC_PRINT(FILE_{ARCH} + " ARCHIVO INEXISTENTE")
        ELSE
                BUFOUT = FNC_PRINT(FILE_{ARCH} + "CODIGO : " + ERT$(ERR) )
                BUFOUT = FNC_PRINT(FILE_{ARCH} + "MENSAJE : " + ERT$(ERR) )
        END IF
        END IF

        RESUME

 OK_FIO_{ARCH}_OUT:

   END DEF


   DEF INTEGER FIO_{ARCH}_PUT(INTEGER FIO_STAT, STRING BUF0)

        ON ERROR GO TO ERR_FIO_{ARCH}_PUT

% IF ARCHFMT
	IF FNC_SYSLEN(BUF0) > 71 THEN
		ESC$ = FNC_SYSLEFT(BUF0,69) + " +&"
	        PRINT #C_FILE_FMT, ESC$
		ESC$ = "      * " + FNC_SYSRIGHT(BUF0,70)
	        PRINT #C_FILE_FMT, ESC$ 
	ELSE
	        PRINT #C_FILE_FMT, BUF0
	END IF
% ELSE
        PRINT #C_FILE_{ARCH}, BUF0
% END

        GO TO OK_FIO_{ARCH}_PUT
 ERR_FIO_{ARCH}_PUT:

        BIP = EMIT_BIP
        BIP = EMIT_BIP
        BIP = EMIT_BIP
        IF ERR = 2 THEN
                BUFOUT = FNC_PRINT(FILE_{ARCH} + " : NOMBRE DE ARCHIVO ILEGAL")
        ELSE 
        IF ERR = 5 THEN
                BUFOUT = FNC_PRINT(FILE_{ARCH} + " ARCHIVO INEXISTENTE")
        ELSE
                BUFOUT = FNC_PRINT(FILE_{ARCH} + "CODIGO : " + ERT$(ERR) )
                BUFOUT = FNC_PRINT(FILE_{ARCH} + "MENSAJE : " + ERT$(ERR) )
        END IF
        END IF

        FIO_STAT = 23

        RESUME

 OK_FIO_{ARCH}_PUT:

        FIO_STAT = 0

   END DEF

% END
%ELSE

FUNCTION FIO_{ARCH}_CLOSE () AS INTEGER
    Close #C_FILE_{ARCH}
END FUNCTION

% IF FINP

% IF {ARCH} = MTX
FUNCTION FIO_MTX_GETNXT () AS STRING

    On Error GoTo ERR_FIO_MTX_GETNXT

    IF Not EOF(C_FILE_MTX) THEN
     Line Input #C_FILE_MTX,FIO_BUF0
        FIO_RLEN = Len(FIO_BUF0)
        FIO_STAT = 0
    FIO_MTX_GETNXT = FIO_BUF0
        PASS$ = COMPACT(FIO_BUF0)
	FIO_ACCI = FIO_FMT_PUT(FIO_STAT,PASS$)
    ELSE
       FIO_STAT = 10
    END IF
    EXIT FUNCTION
    
ERR_FIO_MTX_GETNXT:
 IF Err = 11 THEN
            FIO_STAT = 10
       ELSE
        MSGBOX "ERROR " & Chr(10) & "A Ocurrido un error en la rutina : " & "FIO_PGI_GETNXT" & Chr(10) & "Error(" & Err & ")"
       END IF
  Resume OK_FIO_MTX_GETNXT
    
OK_FIO_MTX_GETNXT:

  
END FUNCTION

% END

   FUNCTION FIO_{ARCH}_INP () AS INTEGER

       On Error GoTo ERR_FIO_{ARCH}_INP

    IF Trim(Dir(gldirarch & FILE_{ARCH})) <> "" THEN
       Open gldirarch & FILE_{ARCH} For Input As #C_FILE_{ARCH}
    ELSE
        BIP = EMIT_BIP()
        BIP = EMIT_BIP()
        BIP = EMIT_BIP()
        MSGBOX "Archivo " & gldirarch & FILE_{ARCH} & " Inexistente"
    END IF
  EXIT FUNCTION

 GoTo OK_FIO_{ARCH}_INP

ERR_FIO_{ARCH}_INP:

     BIP = EMIT_BIP()
     BIP = EMIT_BIP()
     BIP = EMIT_BIP()
     IF Err = 2 THEN
         BUFOUT = FNC_PRINT(FILE_{ARCH} + " : NOMBRE DE ARCHIVO ILEGAL")
    ELSE
        IF Err = 5 THEN
                 BUFOUT = FNC_PRINT(FILE_{ARCH} + " ARCHIVO INEXISTENTE")
           ELSE
                BUFOUT = FNC_PRINT(FILE_{ARCH} + "CODIGO : ")
                BUFOUT = FNC_PRINT(FILE_{ARCH} + "MENSAJE : ")
        END IF
     END IF

  Resume OK_FIO_{ARCH}_INP

OK_FIO_{ARCH}_INP:

   END FUNCTION

% ELSE

FUNCTION FIO_{ARCH}_OUT () AS INTEGER

    On Error GoTo ERR_FIO_{ARCH}_OUT

    Open gldirarch & FILE_{ARCH} For Output Access Write Shared As #C_FILE_{ARCH}
    EXIT FUNCTION
    
    GoTo OK_FIO_{ARCH}_OUT
ERR_FIO_{ARCH}_OUT:
    BIP = EMIT_BIP()
    BIP = EMIT_BIP()
    BIP = EMIT_BIP()
    IF Err = 2 THEN
       BUFOUT = FNC_PRINT(FILE_{ARCH} + " : NOMBRE DE ARCHIVO ILEGAL")
    ELSE
    IF Err = 5 THEN
       BUFOUT = FNC_PRINT(FILE_{ARCH} + " ARCHIVO INEXISTENTE")
    ELSE
       BUFOUT = FNC_PRINT(FILE_{ARCH} + "CODIGO : ")
       BUFOUT = FNC_PRINT(FILE_{ARCH} + "MENSAJE : ")
    END IF
    END IF

    Resume

OK_FIO_{ARCH}_OUT:

END FUNCTION

   FUNCTION FIO_{ARCH}_PUT (FIO_STAT AS INTEGER, BUF0 AS STRING) AS INTEGER

   On Error GoTo ERR_FIO_{ARCH}_PUT
% IF ARCHFMT
	IF FNC_SYSLEN(BUF0) > 71 THEN
		ESC$ = FNC_SYSLEFT(BUF0,69) + " +&"
	        PRINT #C_FILE_FMT, ESC$
		ESC$ = "      * " + FNC_SYSRIGHT(BUF0,70)
	        PRINT #C_FILE_FMT, ESC$ 
	ELSE
	        PRINT #C_FILE_FMT, BUF0
	END IF
% ELSE
   Print #C_FILE_{ARCH}, BUF0
% END

   FIO_STAT = 0
   EXIT FUNCTION
   GoTo OK_FIO_{ARCH}_PUT

ERR_FIO_{ARCH}_PUT:

   BIP = EMIT_BIP()
   BIP = EMIT_BIP()
   BIP = EMIT_BIP()
   Select CASE Err
      CASE 2: MSGBOX " : NOMBRE DE ARCHIVO ILEGAL"
      CASE 5: MSGBOX " ARCHIVO INEXISTENTE"
      CASE ELSE
           MSGBOX "Código : " & Err
   END Select
   FIO_STAT = 23

   Resume OK_FIO_{ARCH}_PUT

OK_FIO_{ARCH}_PUT:
END FUNCTION


% END
% END
