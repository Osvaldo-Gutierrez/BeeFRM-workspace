100
	DECLARE INTEGER NUMTOKEN			,&
			SZTOKEN	, 	TOKEN		,&
			P_P
			

	DECLARE	STRING	C_Q	,	VALTOKEN	,&
			STRTOKEN,	RIGTOKEN

	DECLARE INTEGER	CONSTANT &
			OTHTOK = 1,	NUMTOK = 2	,&
			ETXTOK = 3,	TITTOK = 4	,&
			PRTTOK = 5,	CPRTOK = 6	,&
			IDCTOK = 7,	HLPTOK = 8	,&
			NWLTOK = 9

	DECLARE STRING  &
			ASCI_BELL,	FILE_DOC	,&
			O_L,		C_M		,&
			FILE_HLP,	MAT_MOD(10,10)	,&
			AUXI_HLP,	AUX_MAT		,&
			HLP_GLS_IDX,	FILE_PRT	,&
			V_M(50),	AUX_GLS_IDX	,&
			AUXI_CPT,	PRT_GLS_IDX

        DECLARE INTEGER &
			I,		J		,&
			K,		VEC_NIV(50)	,&
			ANT_NUM,	ACT_NUM		,&
			MAX_IDC,	TOT_DER		,&
			INDI_LINE,	INDI_CORR	,&
			IDC_NUM_CPT,	IDC_NUM_IDP	,&
			IDC_NUM,	IDC_SWI_FST	,&
			PAGE_COUNTER

	DECLARE INTEGER	CONSTANT &
			GNS_CTE_NOT = 0,GNS_CTE_YES = 1

	DECLARE STRING &
			PRIN_LINE,	PRIN_CORR	,&
			IDC_GLS_SRT

210
 !==========================================================================
    DEF INTEGER NEXTTOKEN
 LABE_SIGA:
	ON ERROR GO TO LABE_ERRO
	IF TOKEN = ETXTOK THEN
		NEXTTOKEN = ETXTOK
		GO TO LABE_ASIG
	END IF
	GET #C_FILE_DOC%
	SZ_I_B  = RECOUNT
	MOVE FROM #C_FILE_DOC% , I_B$ = SZ_I_B
	NEXTTOKEN = OTHTOK
	P_P = 1
	C_Q = MID$(I_B$,1,1)

	IF C_Q = "!" THEN
		GO TO LABE_SIGA
	END IF
	IF C_Q >= "0" AND C_Q <= "9" THEN
	          WHILE MID$(I_B$,P_P,1) >= "0" AND MID$(I_B$,P_P,1) <= "9"
		             P_P = P_P + 1
	          NEXT
	          SZTOKEN = P_P - 1
		  NEXTTOKEN = NUMTOK
 !!! SOLO HELP
		  VALTOKEN = LEFT(I_B$,SZTOKEN)
		  RIGTOKEN = RIGHT(I_B$,SZTOKEN+1)
	          NUMTOKEN  = VAL(VALTOKEN)
	ELSE
	IF C_Q = "T" THEN
		  NEXTTOKEN = TITTOK
 !!! INDICE Y CUERPO CON INDEXACION
                  P_P = 2
	          WHILE MID$(I_B$,P_P,1) < "0" OR MID$(I_B$,P_P,1) > "9"
		             P_P = P_P + 1
	          NEXT
		  P_Q = P_P
	          WHILE MID$(I_B$,P_P,1) >= "0" AND MID$(I_B$,P_P,1) <= "9"
		             P_P = P_P + 1
	          NEXT
		  VALTOKEN = LEFT(I_B$,1)
		  NUMTOKEN = VAL(MID$(I_B$,P_Q,P_P - P_Q))
		  RIGTOKEN = RIGHT(I_B$,P_P)
	ELSE
	IF C_Q = "P" THEN
		  NEXTTOKEN = PRTTOK
 !!! INDICE Y CUERPO SIN INDEXACION
		  VALTOKEN = LEFT(I_B$,1)
		  RIGTOKEN = RIGHT(I_B$,2)
	ELSE
	IF C_Q = "C" THEN
		  NEXTTOKEN = CRPTOK
 !!! SOLO CUERPO PRT
		  VALTOKEN = LEFT(I_B$,1)
		  RIGTOKEN = RIGHT(I_B$,2)
        ELSE
	IF C_Q = "I" THEN
		  NEXTTOKEN = IDCTOK
 !!! SOLO CUERPO INDICE PRT
		  VALTOKEN = LEFT(I_B$,1)
		  RIGTOKEN = RIGHT(I_B$,2)
        ELSE
	IF C_Q = "H" THEN
		  NEXTTOKEN = HLPTOK
 !!! SOLO HELP SIN INDICE
		  VALTOKEN = LEFT(I_B$,1)
		  RIGTOKEN = RIGHT(I_B$,2)
        ELSE
	IF C_Q = "#" THEN
		  NEXTTOKEN = NWLTOK
 !!! NEW LINECON CONTADOR DEL PAGINAS
		  VALTOKEN = LEFT(I_B$,1)
		  RIGTOKEN = ""
        ELSE
	IF C_Q = "" THEN
		  NEXTTOKEN = NWLTOK
 !!! NEW LINECON CONTADOR DEL PAGINAS
		  VALTOKEN = LEFT(I_B$,1)
		  RIGTOKEN = ""
	END IF
	END IF
	END IF
	END IF
	END IF
	END IF
	END IF
	END IF
	GO TO LABE_ASIG
 LABE_ERRO:
	CLOSE #C_FILE_DOC%
	IF ERR = 11 THEN
		NEXTTOKEN = ETXTOK
	ELSE
		NEXTTOKEN = ETXTOK
		PRINT "ERROR(";ERR;") ";ERT$(ERR);" en linea ";erl;", MODULO ";ern$
	END IF
	RESUME 800
 LABE_ASIG:
800
	END DEF

    DEF INTEGER IDC_FNC_FFC
	PRIN_LINE = FORMAT$(INDI_LINE,"##")
	PRIN_CORR = FORMAT$(INDI_CORR,"#######")
	IDC_GLS_SRT = PRIN_LINE + PRIN_CORR
	INDI_CORR = INDI_CORR + 1
    END DEF
900
 ! ------------------------------------------------------------------
 !               MODULO PRINCIPAL
 ! __________________________________________________________________


	ON ERROR GO TO  LABE_BADD
	ASCI_BELL = CHR$(07)
	MAX_IDC = 50
	V_M(1) =  "   "
	FOR J% = 2 TO MAX_IDC
		V_M(J%) = V_M(J% - 1) + "   "
	NEXT J%
	C_FILE_DOC% = 1	
	C_FILE_HLP% = 2
	C_FILE_PRT% = 3

	PAGE_COUNTER = 1
	CALL LIB$GET_SYMBOL("PTH",FILE_DOC)
	CALL LIB$GET_SYMBOL("FIL",AUXI_HLP)
	CALL LIB$GET_SYMBOL("CPT",AUXI_CPT)
 !!!	AUXI_CPT
 !!!	========
 !!!	""	==> DOCUMENTO INDEPENDIENTE
 !!!	0	==> DOCUMENTO COMPLETO BOOK
 !!!	N <> 0	==> CAPITULO ESPECIFICO
	IF AUXI_CPT = "" THEN
		IDC_NUM_IDP = GNS_CTE_YES
		AUXI_CPT = "0"
	ELSE
		IDC_NUM_IDP = GNS_CTE_NOT
	END IF
	IDC_NUM_CPT = VAL(AUXI_CPT)
 !!!	IF IDC_NUM_CPT > 0 THEN
 !!!		IDC_NUM_CPT = IDC_NUM_CPT - 1
 !!!	END IF

	OPEN FILE_DOC FOR INPUT  AS FILE #C_FILE_DOC%,	RECORDSIZE 255, &
	             ORGANIZATION SEQUENTIAL VARIABLE, 	RECORDTYPE ANY

	FILE_HLP = AUXI_HLP + ".HLP"
	OPEN FILE_HLP FOR OUTPUT AS FILE #C_FILE_HLP%,	RECORDSIZE 255, &
		     ORGANIZATION SEQUENTIAL VARIABLE,	RECORDTYPE ANY

	FILE_PRT = AUXI_HLP + ".SRT"
	OPEN FILE_PRT FOR OUTPUT AS FILE #C_FILE_PRT%,	RECORDSIZE 255, &
		     ORGANIZATION SEQUENTIAL VARIABLE,	RECORDTYPE ANY

	WHILE TOKEN <> ETXTOK
		TOKEN = NEXTTOKEN
		IF TOKEN = TITTOK THEN
			ACT_NUM = NUMTOKEN
			IDC_NUM = ACT_NUM
			VEC_NIV(IDC_NUM) = VEC_NIV(IDC_NUM) + 1
			IF VEC_NIV(IDC_NUM) >= 10 THEN
			    AUX_GLS_IDX = STR$(VEC_NIV(IDC_NUM))
			ELSE
			    AUX_GLS_IDX = "0" + STR$(VEC_NIV(IDC_NUM))
			END IF
			IF ACT_NUM > ANT_NUM THEN
				IF ACT_NUM = 1 THEN
 !!!					IF IDC_SWI_IDP = GNS_CTE_YES THEN
 !!!						HLP_GLS_IDX = ""
 !!!					ELSE
  				      		HLP_GLS_IDX = "01"
 !!!					END IF
 				ELSE
 !!!				IF ACT_NUM = 2 THEN
 !!!					IF IDC_SWI_IDP = GNS_CTE_YES THEN
 !!!						HLP_GLS_IDX = "01"
 !!!				ELSE
				      HLP_GLS_IDX = HLP_GLS_IDX + ".01"
 !!!				END IF
				END IF
			ELSE
			IF ACT_NUM = ANT_NUM THEN
 				HLP_GLS_IDX = &
					LEFT(HLP_GLS_IDX,LEN(HLP_GLS_IDX)-2) +&
					AUX_GLS_IDX
			ELSE
				I = ACT_NUM + 1
				FOR J = I TO MAX_IDC
					VEC_NIV(J) = 0
				NEXT J
				I = ACT_NUM - 1
				HLP_GLS_IDX = ""
				FOR J = 1 TO I
				  IF VEC_NIV(J) >= 10 THEN
					HLP_GLS_IDX = HLP_GLS_IDX +&
						 STR$(VEC_NIV(J)) + "."
				  ELSE
					HLP_GLS_IDX = HLP_GLS_IDX +&
						 "0" + STR$(VEC_NIV(J)) + "."
				  END IF
				NEXT J
				HLP_GLS_IDX = HLP_GLS_IDX + AUX_GLS_IDX
			END IF
			END IF
 !!!			IF IDC_NUM_IDP = GNS_CTE_YES THEN
 !!!				IF IDC_SWI_FST = GNS_CTE_YES THEN
 !!!					HLP_GLS_IDX = ""
 !!!				ELSE
 !!!					HLP_GLS_IDX = RIGHT(HLP_GLS_IDX,2)
 !!!				END IF
 !!!			END IF
			ANT_NUM = ACT_NUM
			PRT_GLS_IDX = HLP_GLS_IDX
			IF IDC_NUM_IDP = GNS_CTE_YES THEN
				IF LEN(HLP_GLS_IDX) = 2 THEN
					HLP_GLS_IDX = ""
				ELSE
					HLP_GLS_IDX = RIGHT(HLP_GLS_IDX,4)
				END IF
			ELSE
				STR_CPT$ = STR$(IDC_NUM_CPT)
				IF IDC_NUM_CPT <= 9 THEN
					STR_CPT$ = "0" + STR_CPT$
				END IF
				HLP_GLS_IDX = STR_CPT$ + RIGHT(HLP_GLS_IDX,3)
			END IF
			I_B$ = HLP_GLS_IDX + RIGTOKEN
 !!!			O_B$ = HLP_GLS_IDX + V_M(IDC_NUM) + RIGTOKEN
			O_B$ = HLP_GLS_IDX + " " + RIGTOKEN
			HLP_GLS_IDX = PRT_GLS_IDX
			INDI_LINE = 1
			IDC_NUM_FNC= IDC_FNC_FFC
			PRINT #C_FILE_PRT%,IDC_GLS_SRT + "   " + O_B$
			INDI_LINE = 2
			IDC_NUM_FNC= IDC_FNC_FFC
			PRINT #C_FILE_PRT%,IDC_GLS_SRT + "  " + I_B$
		ELSE
		IF TOKEN = NUMTOK THEN
			CALL GENRPTREP(I_B$,"","")
			PRINT #C_FILE_HLP%,I_B$
		ELSE
		IF TOKEN = PRTTOK THEN
			INDI_LINE = 1
			IDC_NUM_FNC= IDC_FNC_FFC
			PRINT #C_FILE_PRT%,IDC_GLS_SRT + RIGTOKEN
			INDI_LINE = 2
			IDC_NUM_FNC = IDC_FNC_FFC
			PRINT #C_FILE_PRT%,IDC_GLS_SRT + RIGTOKEN
		ELSE			
		IF TOKEN = CRPTOK THEN
			INDI_LINE = 2
			IDC_NUM_FNC = IDC_FNC_FFC
			PRINT #C_FILE_PRT%,IDC_GLS_SRT + RIGTOKEN
		ELSE			
		IF TOKEN = IDCTOK THEN
			INDI_LINE = 1
			IDC_NUM_FNC = IDC_FNC_FFC
			PRINT #C_FILE_PRT%,IDC_GLS_SRT + RIGTOKEN
		ELSE			
		IF TOKEN = HLPTOK THEN
			PRINT #C_FILE_HLP%, RIGTOKEN
		ELSE			
		IF TOKEN = NWLTOK THEN
			INDI_LINE = 2
			IDC_NUM_FNC = IDC_FNC_FFC
			PRINT #C_FILE_PRT%,IDC_GLS_SRT + RIGTOKEN
			INDI_LINE = 2
			IDC_NUM_FNC = IDC_FNC_FFC
			PRINT #C_FILE_PRT%,IDC_GLS_SRT +&
			"					" +&
			"				" +&
			STR$(PAGE_COUNTER) + ".-"
			PAGE_COUNTER = PAGE_COUNTER + 1
		ELSE			
			INDI_LINE = 2
			IDC_NUM_FNC= IDC_FNC_FFC
			PRINT #C_FILE_PRT%,IDC_GLS_SRT + I_B$
			CALL GENRPTREP(I_B$,"","")
			PRINT #C_FILE_HLP%,I_B$
		END IF
		END IF
		END IF
		END IF
		END IF
		END IF
		END IF
	NEXT
 !!!	INDI_LINE = 1
 !!!	IDC_NUM_FNC= IDC_FNC_FFC
 !!!	PRINT #C_FILE_PRT%,IDC_GLS_SRT + ""

	CLOSE #C_FILE_HLP%
	GO TO LABE_ATRA
		
 LABE_BADD:
	PRINT ASCI_BELL,ASCI_BELL,ASCI_BELL
	IF ERR = 2 THEN
		PRINT FILE_DOC, " : NOMBRE DE ARCHIVO ILEGAL"
	ELSE 
	IF ERR = 5 THEN
		PRINT FILE_DOC, " ARCHIVO INEXISTENTE       "
	ELSE
		PRINT "CODIGO : ",ERR
		PRINT "MENSAJE :",ERT$(ERR)
	END IF
	END IF
	RESUME 999
999
 LABE_ATRA:
 END
