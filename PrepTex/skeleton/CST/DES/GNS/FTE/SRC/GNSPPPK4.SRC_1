       IDENTIFICATION DIVISION.
      *========================
       PROGRAM-ID. GNSPPPK4.
       AUTHOR. CONSIST.
       DATE-WRITTEN. 13-APR-1992
      *
      * ZOOM - 3.1
      * PERMITE CONGELAR INFORMANDO EN MENU EL NOMBRE DE PROGRAMA
      * REAL A TRANSFERIR EL CONTROL Y NO GNSPPPKE
      *
       ENVIRONMENT DIVISION.
      *=====================
       DATA DIVISION.
      *==============

       WORKING-STORAGE SECTION.
      *------------------------
       01  WSS-DFLD.
           03 WSS-DFLD-CHR    OCCURS 3000        PIC X(01).
       COPY GNSBRMNU.

       COPY GNSWGSYS.
       COPY GNSWGTSC.
       COPY GNSWVSCR.
       COPY GNSWCFIO.
       COPY GNSWVFIO.
*% IF PGM_DTC
       COPY GNSWGUIB.
       COPY GNSWGELS.
       COPY GNSWGRQA.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-TAB-REQA==.
       COPY GNSBRIDD.
       COPY GNSWVIDD.
*% END
      *
       COPY GNSBRTAB.
       COPY GNSWGFRM.
       COPY GNSWGQUE.
       COPY GNSWIMSG.

      * VARIABLES A TRANSFERIR A COMMAND DESDE ZOOM.
      *    TAMANO
       01  WSS-TCMA-CMN  COMP              PIC S9(4).

      * VARIABLES PARA ENGANCHE PROGRAMAS COMENTARIOS - COMMAND
       01  WSS-CMMA-CMN.
      *    SISTEMA
           03  WSS-CMN-SIST                PIC X(03).
      *    GENESIS SOBRE SISTEMA
           03  WSS-CMN-SISG                PIC X(03).
      *    FUNCION NEMOTECNICA
           03  WSS-CMN-NEMO                PIC X(12).
      *    COMANDO
           03  WSS-CMN-CMND                PIC X(03).
      *    PROGRAMA ZOOM
           03  WSS-CMN-PROG                PIC X(08).

       01  WSS-VARI.
           03 WSS-TFLD  COMP      VALUE +0             PIC S9(04).
           03 WSS-PCUR  COMP      VALUE +0             PIC S9(04).
           03 WSS-PMSG  COMP      VALUE +1880          PIC S9(04).
           03 WSS-TCMA  COMP      VALUE +0             PIC S9(04).
           03 WSS-CMMA                                 PIC X(3500).

           03 WSS-I             VALUE 0                PIC 9(04).
           03 WSS-J             VALUE 0                PIC 9(04).
           03 WSS-K             VALUE 0                PIC 9(04).
           03 WSS-THDR          VALUE 168              PIC 9(04).
           03 WSS-IFLD          VALUE 1                PIC 9(04).
           03 WSS-NITM          VALUE 1                PIC 9(03).

           03  WSS-QIDD.
               05  WSS-NIDD VALUE 'GIDD'    PIC X(04).
               05  WSS-TIDD                 PIC X(04).

       01  WSS-TAB.
           03 WSS-TAB-GLS-DESC                         PIC X(40).
           03 WSS-TAB-GLS-DATA                         PIC X(60).
       01  WSS-TAB-RED         REDEFINES WSS-TAB.
           03 WSS-TAB-TKYM OCCURS 11 TIMES.
              05 WSS-TKEY                              PIC X(03).
              05 WSS-PKEY                              PIC 9(04).
              05 WSS-LKEY                              PIC 9(02).
           03 FILLER                                   PIC X(01).

       01  WSS-QFLD.
           03 WSS-TKEY-Q                               PIC X(03).
           03 WSS-QFLD-CHR    OCCURS 100               PIC X(01).

       01  WSS-ZOOM.
           03 WSS-FRM-ZOOM                             PIC X(07).
           03 WSS-PCUR-ZOOM                            PIC 9(04).
           03 FILLER          VALUE SPACES             PIC X(01).
           03 WSS-PROG                                 PIC X(08).
           03 WSS-CMP-ZOOM                             PIC X(07).
           03 WSS-FCUR-ZOOM                            PIC 9(04).
           03 WSS-CMN-NEMO-CMP.
              05 WSS-CMN-NEMO-CMP-1                    PIC X(06).
              05 WSS-CMN-NEMO-CMP-2.
                 07 WSS-CMN-NEMO-CMP-2-CHR   OCCURS 6  PIC X(01).
           03 WSS-TAB-TKYM-CMP.
              05 WSS-TKEY-CMP                          PIC X(03).
              05 WSS-PKEY-CMP                          PIC 9(04).
              05 WSS-LKEY-CMP                          PIC 9(02).
           03 WSS-I-CMP         VALUE 0                PIC 9(04).
           03 WSS-J-CMP         VALUE 0                PIC 9(04).
           03 WSS-K-CMP         VALUE 0                PIC 9(04).
           03 WSS-THDR-CMP      VALUE 168              PIC 9(04).

       LINKAGE SECTION.
      *----------------
       01  DFHCOMMAREA.
           02 FILLER                             PIC X(3500).
       COPY GNSLGFIO.

       PROCEDURE DIVISION.
      *===================

       MAIN SECTION.
       INI-MAIN.
*% IF PGM_DTC
       COPY GNSBGEDB.
*% END
           PERFORM GNS-HDL-VSM.
*% IF PGM_DTC
           MOVE EIBTRMID TO WSS-TIDD.
           MOVE WSS-QIDD TO SCR-QIDD.
           MOVE +490 TO SCR-LIDD.
           MOVE 'GNSPPPK4' TO FIO-PROG.
           PERFORM GNS-BUS-IDD.
*% END
           MOVE DFHCOMMAREA TO WSS-CMMA SCR-VARI.
           MOVE EIBCALEN    TO WSS-TCMA.
      *
      *Buscar TS que usa procesador de MENU
           PERFORM GNS-GET-TSC.
*% IF PGM_DTC
      *
      *Buscar idd con codigo TSC-CIDD.
           PERFORM GNS-GET-IDD.
*% END
      *
           MOVE EIBCPOSN TO WSS-PCUR.
      *
      *Obtiene la posicion del cursor en la pantalla
           MOVE WSS-PCUR TO WSS-PCUR-ZOOM.
      *Procesar la tabla KYM
           MOVE TSC-SIST TO FIO-SIST.
           MOVE 'KYM'    TO TAB-COD-TTAB IN TAB.
      *Se usa SCR-NMAP solo para poder manejar la situacion de programas
      *enganchados que se van pasando el control
      *    MOVE TSC-NMAP TO TAB-COD-CTAB IN TAB.
      *     MOVE SCR-NMAP TO TAB-COD-CTAB IN TAB.

      *Busca especificacion de ZOOM en tabla dependiendo de la posicion
      *del cursor
           MOVE SCR-NMAP TO WSS-FRM-ZOOM.
           MOVE WSS-ZOOM TO TAB-COD-CTAB IN TAB.
           MOVE FIO-GET-NLS TO FIO-CMND.
           PERFORM GNS-FIO-TAB.
           IF FIO-STAT-OKS
               MOVE TSC-SIST TO FIO-SIST
               MOVE FIO-END-BRW TO FIO-CMND
               PERFORM GNS-FIO-TAB
               MOVE TAB-COD-CTAB IN TAB TO WSS-CMP-ZOOM
               IF WSS-FRM-ZOOM = WSS-CMP-ZOOM
                   MOVE TAB-GLS-DESC IN TAB TO
                        WSS-TAB-GLS-DESC IN WSS-TAB
                   MOVE TAB-GLS-DATA IN TAB TO
                        WSS-TAB-GLS-DATA IN WSS-TAB
               ELSE
                   MOVE LOW-VALUES TO MSG-FLD
                   MOVE 'No existe llaves especificadas para ZOOM'
                                   TO MSG-GLS-MENS
                   EXEC CICS SEND
                         MAP      ('GNSFMSG')
                         MAPSET   ('GNSAMSG')
                         FROM     (MSG-FLD)
                         CURSOR   (EIBCPOSN)
                   END-EXEC
      *             EXEC CICS RETURN
      *                   TRANSID  (EIBTRNID)
      *                   COMMAREA (DFHCOMMAREA)
      *                   LENGTH   (EIBCALEN)
      *             END-EXEC.
                   PERFORM RET-PRG
           ELSE
               MOVE LOW-VALUES TO MSG-FLD
               MOVE 'No existe llaves especificadas para ZOOM'
                               TO MSG-GLS-MENS
               EXEC CICS SEND
                     MAP      ('GNSFMSG')
                     MAPSET   ('GNSAMSG')
                     FROM     (MSG-FLD)
                     CURSOR   (EIBCPOSN)
               END-EXEC
      *         EXEC CICS RETURN
      *               TRANSID  (EIBTRNID)
      *               COMMAREA (DFHCOMMAREA)
      *               LENGTH   (EIBCALEN)
      *         END-EXEC.
               PERFORM RET-PRG.
      *Procesar la tabla ZOM
           MOVE TSC-SIST TO FIO-SIST.
           MOVE 'ZOM'    TO TAB-COD-TTAB IN TAB.
      *Se usa SCR-NMAP solo para poder manejar la situacion de programas
      *enganchados que se van pasando el control
      *    MOVE TSC-NMAP TO TAB-COD-CTAB IN TAB.
      *     MOVE SCR-NMAP TO TAB-COD-CTAB IN TAB.
           MOVE SCR-NMAP TO WSS-FRM-ZOOM.
           MOVE WSS-ZOOM TO TAB-COD-CTAB IN TAB.

      *
           MOVE FIO-GET-NLS TO FIO-CMND.
           PERFORM GNS-FIO-TAB.
           IF FIO-STAT-OKS
               MOVE TSC-SIST TO FIO-SIST
               MOVE FIO-END-BRW TO FIO-CMND
               PERFORM GNS-FIO-TAB
               MOVE TAB-COD-CTAB IN TAB TO WSS-CMP-ZOOM
               IF WSS-FRM-ZOOM = WSS-CMP-ZOOM
                   MOVE TAB-GLS-DESC IN TAB TO WSS-CMMA-CMN
      * Complementa funcion nemotecnica
               ELSE
                   MOVE LOW-VALUES TO MSG-FLD
                   MOVE 'No existe llaves especificadas para ZOOM'
                                   TO MSG-GLS-MENS
                   EXEC CICS SEND
                         MAP      ('GNSFMSG')
                         MAPSET   ('GNSAMSG')
                         FROM     (MSG-FLD)
                         CURSOR   (EIBCPOSN)
                   END-EXEC
      *             EXEC CICS RETURN
      *                   TRANSID  (EIBTRNID)
      *                   COMMAREA (DFHCOMMAREA)
      *                   LENGTH   (EIBCALEN)
      *             END-EXEC.
                   PERFORM RET-PRG
           ELSE
               MOVE LOW-VALUES TO MSG-FLD
               MOVE 'No existe llaves especificadas para ZOOM'
                               TO MSG-GLS-MENS
               EXEC CICS SEND
                     MAP      ('GNSFMSG')
                     MAPSET   ('GNSAMSG')
                     FROM     (MSG-FLD)
                     CURSOR   (EIBCPOSN)
               END-EXEC
      *         EXEC CICS RETURN
      *               TRANSID  (EIBTRNID)
      *               COMMAREA (DFHCOMMAREA)
      *               LENGTH   (EIBCALEN)
      *         END-EXEC.
               PERFORM RET-PRG.

      *Obtener el contexo de la pantalla
           EXEC CICS HANDLE CONDITION LENGERR(CON-MAIN)
                                      NOSPACE(CON-MAIN)
           END-EXEC.
           MOVE +3000 TO WSS-TFLD.
           EXEC CICS RECEIVE INTO(WSS-DFLD) LENGTH(WSS-TFLD) BUFFER
           END-EXEC.
       CON-MAIN.
      *SETEO DE LLAVES

      *Borra cola existente
           PERFORM GNS-ERR-QUE.
           MOVE EIBTRMID TO QUE-TERM.
           MOVE 'KYM' TO QUE-TYPE.
           MOVE 1     TO QUE-NITM.
           MOVE +3000 TO QUE-LITM.
           MOVE QUE-GET TO QUE-CMND.
           PERFORM GNS-PRO-QUE.
           IF QUE-STAT = QUE-STAT-OKS
                MOVE QUE-DEL TO QUE-CMND
                PERFORM GNS-PRO-QUE.

       CIC-MAIN.
           PERFORM MOV-TAB VARYING WSS-IFLD FROM 1 BY 1 UNTIL
                          WSS-TKEY(WSS-IFLD) NOT > SPACES.
      *     PERFORM RET-PRG.
      * CONGELA
      *Borra cola existente
           PERFORM GNS-ERR-QUE.
           MOVE EIBTRMID TO QUE-TERM.
           MOVE 'PKB' TO QUE-TYPE.
           MOVE 1     TO QUE-NITM.
           MOVE +3000 TO QUE-LITM.
           MOVE QUE-GET TO QUE-CMND.
           PERFORM GNS-PRO-QUE.
           IF QUE-STAT = QUE-STAT-OKS
                MOVE QUE-DEL TO QUE-CMND
                PERFORM GNS-PRO-QUE.

           PERFORM SET-TSC.

           PERFORM SET-CMA.
           MOVE QUE-PUT TO QUE-CMND.
           PERFORM GNS-PRO-QUE.


           PERFORM SET-MAP.
           MOVE QUE-PUT TO QUE-CMND.
           PERFORM GNS-PRO-QUE.

      * Complementa funcion nemotecnica
           PERFORM CMP-NEMO.
           PERFORM VRF-NEMO.

           PERFORM XCTL-CMN.

       COPY GNSBGGBK.
       FIN-MAIN.
           EXIT.

       ZOOM-QUE SECTION.
       INI-ZOOM-QUE.

      *Obtiene fila en que se digito el cursor
           COMPUTE WSS-FCUR-ZOOM = ( WSS-PCUR-ZOOM / 80 ) + 1.
      *Lee registros de cola existente y busca en tabla
      *     PERFORM GNS-ERR-QUE.
           MOVE EIBTRMID TO QUE-TERM.
           MOVE 'ZOM'    TO QUE-TYPE.
           MOVE WSS-FCUR-ZOOM TO QUE-NITM.
       CIC-MAIN.
           MOVE QUE-GET  TO QUE-CMND.
           MOVE +3000 TO QUE-LITM.
           PERFORM GNS-PRO-QUE.
           IF QUE-STAT = QUE-STAT-OKS
               MOVE QUE-DATA TO WSS-CMMA-CMN
               PERFORM XCTL-CMN
           ELSE
               PERFORM RET-PRG.
       FIN-ZOOM-QUE.
           EXIT.

       XCTL-CMN SECTION.
       INI-XCTL-CMN.
      *Llama al programa que procesa menu
           IF WSS-CMN-PROG > SPACES
               MOVE +29 TO WSS-TCMA-CMN
           ELSE
               MOVE +21 TO WSS-TCMA-CMN.
           MOVE 0 TO EIBAID.
           PERFORM SET-PRG-CMN.
           EXEC CICS XCTL
               PROGRAM(WSS-PROG)
                  COMMAREA(WSS-CMMA-CMN)
                  LENGTH(WSS-TCMA-CMN)
           END-EXEC.
       FIN-XCTL-CMN.
           EXIT.

       SET-PRG-CMN SECTION.
       INI-SET-PRG-CMN.
           IF SCR-CMNP NOT > SPACES
               MOVE 'GNSPPMEN' TO WSS-PROG
           ELSE
               MOVE SCR-CMNP   TO WSS-PROG.
       FIN-SET-PRG-CMN.
           EXIT.

       MOV-TAB SECTION.
       INI-MOV-TAB.
           MOVE SPACES TO WSS-QFLD.
           MOVE WSS-PKEY(WSS-IFLD) TO WSS-J.
           PERFORM MOV-KEY VARYING WSS-I FROM 1 BY 1 UNTIL
                                   WSS-I > WSS-LKEY(WSS-IFLD).
           PERFORM SET-KYM.
       FIN-MOV-TAB.
           EXIT.

       MOV-KEY SECTION.
       INI-MOV-KEY.
           ADD WSS-J WSS-THDR GIVING WSS-K.
           MOVE WSS-DFLD-CHR(WSS-K) TO WSS-QFLD-CHR(WSS-I).
           ADD 1 TO WSS-J.
       FIN-MOV-KEY.
           EXIT.

       SET-KYM SECTION.
       INI-SET-KYM.
           MOVE WSS-NITM TO QUE-NITM.
           ADD 1 TO WSS-NITM.
           COMPUTE  QUE-LITM = 3 + WSS-LKEY(WSS-IFLD).
           MOVE WSS-TKEY(WSS-IFLD) TO WSS-TKEY-Q.
           MOVE WSS-QFLD TO QUE-ITEM.
           MOVE QUE-PUT  TO QUE-CMND.
           PERFORM GNS-PRO-QUE.
       FIN-SET-KYM.
           EXIT.

       RET-PRG SECTION.
       INI-RET-PRG.
           EXEC CICS SEND CONTROL FREEKB
           END-EXEC.
           PERFORM SCR-EXIT.
       FIN-RET-PRG.
           EXIT.

       SCR-EXIT SECTION.
       INI-SCR-EXIT.
           EXEC CICS RETURN
                     TRANSID(EIBTRNID)
                     COMMAREA(WSS-CMMA)
                     LENGTH(WSS-TCMA)
           END-EXEC.
       FIN-SCR-EXIT.
           EXIT.

       GNS-GET-TSC SECTION.
       INI-GNS-GET-TSC.
           EXEC CICS HANDLE CONDITION
                     QIDERR (NEX-GNS-GET-TSC)
           END-EXEC.
           MOVE EIBTRMID TO TSC-TERM.
           MOVE TSC-TTSC TO TSC-LITM.
           EXEC CICS READQ TS
                     QUEUE(TSC-COLA)
                     INTO(TSC-ITEM)
                     LENGTH(TSC-LITM)
                     ITEM(1)
           END-EXEC.
           GO TO FIN-GNS-GET-TSC.
       NEX-GNS-GET-TSC.
           MOVE 'SISTEMA DEBE EJECUTARSE CON PROCESADOR MENU COMPATIBLE'
                         TO SYS-MENS.
           MOVE SYS-ABOR TO SYS-CMND.
           PERFORM GNS-PRO-SYS.
       FIN-GNS-GET-TSC.
           EXIT.

      * INI RECUPERACION DE SEGMENTO PARA COMPLEMENTACION DE FUNCION NEM
       CMP-NEMO SECTION.
       INI-CMP-NEMO.
           IF TAB-GLS-DCOR IN TAB NOT > SPACES
               GO TO FIN-CMP-NEMO.
      * Carga especificacion para complementar funcion nemotecnica
           MOVE TAB-GLS-DCOR IN TAB TO WSS-TAB-TKYM-CMP.

           MOVE WSS-CMN-NEMO        TO WSS-CMN-NEMO-CMP.
           MOVE SPACES              TO WSS-CMN-NEMO-CMP-2.
           PERFORM SCN-TAB-CMP.
           MOVE WSS-CMN-NEMO-CMP    TO WSS-CMN-NEMO.
       FIN-CMP-NEMO.
           EXIT.

       VRF-NEMO SECTION.
       INI-VRF-NEMO.
           MOVE WSS-CMN-NEMO TO MNU-COD-NEMO IN MNU.
           MOVE WSS-CMN-SIST TO FIO-SIST.
           MOVE FIO-GET-KEY  TO FIO-CMND.
           PERFORM GNS-FIO-MNU.
           IF NOT FIO-STAT-OKS
               MOVE LOW-VALUES TO MSG-FLD
               MOVE 'No existe especificion de control para ZOOM'
                               TO MSG-GLS-MENS
               EXEC CICS SEND
                     MAP      ('GNSFMSG')
                     MAPSET   ('GNSAMSG')
                     FROM     (MSG-FLD)
                     CURSOR   (EIBCPOSN)
               END-EXEC
      *         EXEC CICS RETURN
      *               TRANSID  (EIBTRNID)
      *               COMMAREA (DFHCOMMAREA)
      *               LENGTH   (EIBCALEN)
      *         END-EXEC.
               PERFORM RET-PRG.
       FIN-VRF-NEMO.
           EXIT.


       SCN-TAB-CMP SECTION.
       INI-SCN-TAB-CMP.
           IF WSS-TKEY-CMP NOT > SPACES
               GO TO FIN-SCN-TAB-CMP.
           IF WSS-TKEY-CMP = 'ZOM'
               PERFORM MOV-TAB-CMP
               GO TO FIN-SCN-TAB-CMP.
       FIN-SCN-TAB-CMP.
           EXIT.

       MOV-TAB-CMP SECTION.
       INI-MOV-TAB-CMP.
           MOVE WSS-PKEY-CMP TO WSS-J-CMP.
           PERFORM MOV-KEY-CMP VARYING WSS-I-CMP FROM 1 BY 1 UNTIL
                            WSS-I-CMP > WSS-LKEY-CMP.
       FIN-MOV-TAB-CMP.
           EXIT.

       MOV-KEY-CMP SECTION.
       INI-MOV-KEY-CMP.
           ADD WSS-J-CMP WSS-THDR-CMP GIVING WSS-K-CMP.
           MOVE WSS-DFLD-CHR(WSS-K-CMP) TO
                WSS-CMN-NEMO-CMP-2-CHR(WSS-I-CMP).
           ADD 1 TO WSS-J-CMP.
       FIN-MOV-KEY-CMP.
           EXIT.

       SET-MAP SECTION.
       INI-SET-MAP.
           COMPUTE QUE-LITM = 7 + WSS-TFLD.
           MOVE 1        TO QUE-NITM.
           MOVE EIBTRMID TO QUE-TERM.
           MOVE 'PKB'    TO QUE-TYPE.
           MOVE 'MAP'    TO QUE-IKEY.
           MOVE WSS-TFLD TO QUE-LDAT.
           MOVE WSS-DFLD TO QUE-DATA.
           MOVE EIBCPOSN TO QUE-PCUR.
       FIN-SET-MAP.
           EXIT.

       SET-CMA SECTION.
       INI-SET-CMA.
           COMPUTE QUE-LITM = 7 + EIBCALEN.
           MOVE 2           TO QUE-NITM.
           MOVE EIBTRMID    TO QUE-TERM.
           MOVE 'PKB'       TO QUE-TYPE.
           MOVE 'CMA'       TO QUE-IKEY.
           MOVE EIBCALEN    TO QUE-LDAT.
           MOVE DFHCOMMAREA TO QUE-DATA.
           MOVE +0          TO QUE-PCUR.
       FIN-SET-CMA.
           EXIT.

       SET-TSC SECTION.
       INI-SET-TSC.
           MOVE EIBTRMID TO TSC-TERM.
           MOVE TSC-COLA TO QUE-COLA.
           MOVE 1        TO QUE-NITM.
           MOVE +9999    TO QUE-LITM.
           MOVE QUE-GET  TO QUE-CMND.
           PERFORM GNS-PRO-QUE.
           IF QUE-STAT NOT = QUE-STAT-OKS
               GO TO FIN-SET-TSC.
           MOVE EIBTRMID TO QUE-TERM.
           MOVE 'PKB'    TO QUE-TYPE.
           MOVE 'V31'    TO QUE-IKEY.
           MOVE QUE-PUT  TO QUE-CMND.
           PERFORM GNS-PRO-QUE.
       FIN-SET-TSC.
           EXIT.

*% IF PGM_DTC
       GNS-GET-IDD SECTION.
       INI-GNS-GET-IDD.
      *La independencia de datos es IDD EN TEMPORARY STORAGE ( VERSION 3
           MOVE TSC-CIDD TO IDD-COD-CIDD IN IDD.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM GNS-FIO-IDD.
           IF FIO-STAT-OKS
               MOVE IDD TO IDD-REGI
               GO TO FIN-GNS-GET-IDD.
           MOVE 'DEFAULT' TO IDD-COD-CIDD IN IDD.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM GNS-FIO-IDD.
           IF NOT FIO-STAT-OKS
               MOVE 'NO EXISTE REGISTRO IDD CON LLAVE : ' TO SYS-MEN1
               MOVE IDD-COD-CIDD IN IDD                   TO SYS-MEN2
               MOVE SYS-ABOR TO SYS-CMND
               PERFORM GNS-PRO-SYS
           ELSE
               MOVE IDD TO IDD-REGI.
       FIN-GNS-GET-IDD.
           EXIT.

       COPY GNSBBIDD.
       COPY GNSBFIDD.
       COPY GNSBGDTC.
*% END
       COPY GNSBGVSM.
       COPY GNSBHVSM.

       COPY GNSBFTAB.
       COPY GNSBGQUE.

       COPY GNSBIABT.
       COPY GNSBGSYS.
       COPY GNSBFMNU.
