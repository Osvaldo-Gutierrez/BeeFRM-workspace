100
	COMMON ( FIO_VARI ) STRING FILLER=26,FIO_STAT=1,FIO_INFO=1,	&
				   FIO_ACCS=1,FILL
        RECORD DMN
               STRING  DMN_COD_DOMI=32
               STRING  DMN_COD_SIST=03
               STRING  DMN_COD_REGI=03
               STRING  DMN_COD_TABL=04
               STRING  DMN_COD_TIPO=01
               STRING  DMN_MSC_FMTO=01
               STRING  DMN_NUM_LARG=03
               STRING  DMN_GLS_FIMP=20
               STRING  DMN_GLS_VALI=16
               STRING  DMN_GLS_BUSQ=16
               STRING  DMN_GLS_DISP=59
	END RECORD DMN
	COMMON ( DMN ) DMN DMN
	RECORD	RCR
               STRING  RCR_COD_RECO=32
               STRING  RCR_COD_DOMI=32
               STRING  RCR_COD_SIST=03
               STRING  RCR_COD_REGI=03
               STRING  RCR_GLS_FIMP=20
               STRING  RCR_GLS_DISP=68
	END RECORD RCR
	COMMON ( RCR ) RCR RCR
   DECLARE INTEGER                      			 &
	NUMTOKEN           					,&
	SZTOKEN            					,&
	TOKEN              					,&
	P_P                					,&
	P_Q                					,&
	SZ_I_B

   DECLARE   STRING						 &
	C_Q                					,&
	VALTOKEN           					,&
	STRTOKEN

   DECLARE INTEGER   CONSTANT					 &
	KEYTOK = 1,         		IDNTOK = 2		,&
	NUMTOK = 3,         		STRTOK = 4		,&
	CHRTOK = 5,         		EOLTOK = 6		,&
	ETXTOK = 7,         		HTAB   = 9

200
   DECLARE INTEGER						 &
	MAP_CNL_FDMN,			MAP_CNL_FRCR		,&
	MAP_CNL_FBMS,			MAP_TOT_CMPO		,&
	MAP_CNL_FGEN,			MAP_TOT_CIDX		,&
	MAP_CNL_FFLG,			MAP_TOT_FILE		,&
	MAP_CNL_FTXT						,&
					MAP_NUM_PICT		,&
	MAP_SWI_FILE,        		MAP_NUM_LINE        	,&
	MAP_SWI_PFLD,			MAP_NUM_COLU		,&
	MAP_SWI_FECH,			MAP_NUM_CORR		,&
	MAP_SWI_VERF,			MAP_NUM_TTEX		,&
	MAP_SWI_CFRM,			MAP_NUM_INFE        	,&
	MAP_SWI_GLOS,			MAP_NUM_SUPE		,&
	MAP_SWI_ERRO						,&
	MAP_IND_CMPO						,&
	WBMS_NUM_SOR						,&
	WTXT_NUM_SOR,       		MAP_IND_NUM		,&
	MAP_VEC_UNDE(10)					,&
	MAP_VEC_FICO(150,2)					,&
	MAP_VEC_TFLD(150)					,&
	MAP_VEC_DSPL(150),		MAP_VEC_DERI(150)	,&
	MAP_VEC_PFLD(150),  		MAP_VEC_MOVE(150)  	,&
	MAP_VEC_SCLR(150), 		MAP_VEC_LGLS(150)	,&
	OVR_NUM_COL,        		MAP_NUM_VSZ        ,&
	OVR_NUM_FIL,        MAP_NUM_ASC        ,&
	MAP_NUM_BAS			        ,&
	BMS_NUM_DPZ,        BMS_NUM_PIC        ,&
	ANT_INDEX,          NIV_INDEX          ,&
	TMP_INDEX,          MAP_VEC_PROT(150)  ,&
	ACT_INDEX,          MAP_VEC_TIDX(150)        ,&
	MAP_VEC_VALI(150),   MAP_VEC_PKEY(150)  ,&
	MAP_NUM_NCS,        MAP_NUM_NCI        ,&
	MAP_VEC_NUME(150)                       ,&
	MAP_NUM_TFEC,       OVR_NUM_LEN        ,&
	OVR_NUM_ADI,        MAP_VEC_ENT(150)   ,&
	MAP_VEC_DECM(150),   MAP_VEC_BYA(150)  ,&
	MAP_VEC_VAUT(150),  MAP_VEC_GLOS(150)  ,&
	MAP_VEC_FECH(150),	MAP_TOT_NOMB   ,&
	MAP_TOT_REPE	,	MAP_VEC_POSI(150,2),&
	MAP_TOT_LINE                           ,&
	MAT_CAM_COR(40,132),	MAP_VEC_TFIC(24) 

   DECLARE   STRING                           &
      MAP_ASC_BEL,        MAP_ASC_NWL        ,&
      MAP_FIL_BMS,        MAP_FIL_FLG        ,&
      MAP_FIL_DMN,        MAP_FIL_RCR        ,&
      MAP_GLS_WRIT,       MAP_GLS_FLG        ,&
      WRT_GLS_LIN,        WRT_GLS_COL        ,&
      WRT_GLS_COR,        MAP_GLS_PIC        ,&
      WRT_GLS_DAT,        MAP_GLS_DEF        ,&
      MAP_GLS_MAPA,       MAP_GLS_PROY       ,&
      MAP_GLS_PBM,        MAP_GLS_TYP        ,&
      MAP_GLS_L11,        MAP_GLS_L12        ,&
      MAP_GLS_L13,        MAP_GLS_CMP        ,&
      MAP_GLS_L21,        MAP_GLS_L31        ,&
      MAP_GLS_FIL,        MAP_VEC_OBLI(150)   ,&
      MAP_GLS_COL,        MAP_GLS_VIX(150)   ,&
      MAP_GLS_POS,        MAP_GLS_BMS        ,&
      MAP_GLS_TXT,        MAP_GLS_PXZ        ,&
      MAP_GLS_STP,        MAP_FIL_GEN        ,&
      MAP_VEC_CMP(150),   MAP_VEC_REGI(150)   ,&
      MAP_VEC_TIPO(150),   MAP_VEC_NOMB(150)   ,&
      V_ANSI(6),          MAP_FIL_TXT        ,&
      MAP_VEC_FIL(50),    MAP_GLS_HLP        ,&
      MAP_GLS_DFL,        MAP_GLS_MST        ,&
      MAP_VEC_BLK(10),	  MAP_GLS_HFOR	     ,&
      MAP_VEC_NRTN(150),   MAP_GLS_RED        ,&
      MAP_GLS_VFEC(4),    MAP_GLS_VRF(6)     ,&
      SGN_LEAD,           MAP_VEC_TAB(150)   ,&
      MAP_VEC_DMSA(5),    MAP_GLS_PRE        ,&
      MAP_GLS_SFEC,       MAP_GLS_DLD        ,&
      MAP_GLS_DLI,        MAP_GLS_IDC(2)     ,&
      MAP_GLS_NOMB,        MAP_GLS_OCC        ,&
      MAP_GLS_MAT,	  MAP_GLS_EDTN	     ,&
      MAP_GLS_NIV_FLD,    MAP_GLS_SPA_FLD    ,&
      MAP_GLS_NIV_FEC,    MAP_GLS_SPA_FEC    ,&
      MAP_GLS_NIV_VRF,    MAP_GLS_SPA_VRF    ,&
      MAP_GLS_NIV_IDC,    MAP_GLS_SPA_IDC    ,&
      MAP_SEPA_PIC,       MAP_SEPA_LEN       ,&
      MAP_SEPA_ATR,       GEN_GLS_PRT        ,&
      MAP_VEC_NMR(150),   GEN_GLS_VAL        ,&
      MAP_GLS_PIC_ALF,    MAP_GLS_PIC_EDT    ,&
      MAP_VEC_ISG(150),	  MAP_GLS_DARK	     ,&
      FIO_CMND,		  MAP_MAT_SCRN(30,182),&
      MAP_GLS_VCOD,       MAP_GLS_VIND       ,&
      MAP_GLS_GCOD,       MAP_GLS_GIND       ,&
      MAP_GLS_IDEN,	  MAP_VEC_REPE(150)  ,&
      MAP_VEC_HLP(150),	  MAP_VEC_BLKS(150)  ,&
      MAP_GLS_AUX,	  MAP_GLS_BCOD	     ,&
      MAP_VEC_KEY(150),	MAP_VEC_TCMP(150)	,&
	MAP_VEC_FLD_GAR(150)

   DECLARE   STRING CONSTANT			&
      FIO_STAT_OKS  = "0"

   DECLARE STRING POS_VEC_ZRS(4)
      POS_VEC_ZRS(1) = "0"
      POS_VEC_ZRS(2) = ""
      POS_VEC_ZRS(3) = ""
      POS_VEC_ZRS(4) = ""

   DECLARE STRING MAP_GLS_BYA(4)
      MAP_GLS_BYA(1) = "FRM-CPIM-AEY"
      MAP_GLS_BYA(2) = "FRM-CPIM-UBY"
      MAP_GLS_BYA(3) = "FRM-CPIM-ANY"
      MAP_GLS_BYA(4) = "FRM-CPIM-UNY"

   DECLARE STRING MAP_VEC_FFEC(7)
      MAP_VEC_FFEC(1) = " 'ddmmssaa' "
      MAP_VEC_FFEC(2) = " 'ddmmaa' "
      MAP_VEC_FFEC(3) = " 'mmssaa' "
      MAP_VEC_FFEC(4) = " 'mmaa' "
      MAP_VEC_FFEC(5) = " 'ssaa' "
      MAP_VEC_FFEC(6) = " 'ddmm' "
      MAP_VEC_FFEC(7) = " 'aa' "

   DECLARE STRING MAP_VEC_VFEC(7)
      MAP_VEC_VFEC(1) = "FEC"
      MAP_VEC_VFEC(2) = "DMA"
      MAP_VEC_VFEC(3) = "MSA"
      MAP_VEC_VFEC(4) = "FMA"
      MAP_VEC_VFEC(5) = "FSA"
      MAP_VEC_VFEC(6) = "FDM"
      MAP_VEC_VFEC(7) = "FFA"

   DECLARE INTEGER   CONSTANT                 &
      MAP_CTE_YES =  1,   MAP_CTE_NOT =  0   ,&
      MAP_ASC_LFD = 10,   MAP_ASC_CRT = 13   ,&
      MAP_CTE_NUM =  0,   MAP_CTE_ALF =  1   ,&
      MAP_CTE_IDF =  2,   MAP_IND_FLD =  0   ,&
      MAP_IND_IKY =  1,   MAP_IND_MKY =  2   ,&
      MAP_IND_AKY =  3                       ,&
      MAP_IND_FIC =  4 				,&
      MG_C       =  1,   MG_A       =  2     ,&
      MG_B       =  3,   MG_1       =  4     ,&
      MG_2       =  5,   MG_N       =  6     ,&
      MAP_NUM_CODI  = 1, MAP_NUM_MISC = 2    ,&
      FEC_IND_FFEC  = 1, FEC_IND_FDMA = 2    ,&
      FEC_IND_FMSA  = 3, FEC_IND_FFMA = 4    ,&
      FEC_IND_FFSA  = 5, FEC_IND_FFDM = 6    ,&
      FEC_IND_FFFA  = 7			     ,&
      MAP_NUM_MHOR  = 3, MAP_NUM_MVER = 26

 !====================== WRITE ARCHIVO SORT ======================

    DEF STRING MAP_FNC_WBMS (STRING MAP_GLS_WRIT)
       WRT_GLS_DAT = FORMAT$(WBMS_NUM_SOR,"#")
       WRT_GLS_LIN = FORMAT$(MAP_NUM_LINE,"##")
       WRT_GLS_COL = FORMAT$(MAP_NUM_COLU,"###")
       WRT_GLS_COR = FORMAT$(MAP_NUM_CORR,"###")
       MAP_GLS_WRIT = WRT_GLS_DAT + WRT_GLS_LIN + WRT_GLS_COL + WRT_GLS_COR +&
         MAP_GLS_WRIT
       MAP_NUM_CORR = MAP_NUM_CORR + 1
       MAP_GLS_WRIT = ""
    END DEF
 !====================== SOBREPOSICION ======================
    DEF INTEGER MAP_FNC_OVR
    END DEF
 !====================== POSICION ===============================
   DEF INTEGER R_POS
   END DEF
 !====================== WRITE ARCHIVO TXT ======================

    DEF STRING MAP_FNC_WTXT (STRING MAP_GLS_WRIT)
       WRT_GLS_DAT = FORMAT$(WTXT_NUM_SOR,"#")
       WRT_GLS_LIN = FORMAT$(MAP_NUM_LINE,"##")
       WRT_GLS_COL = FORMAT$(MAP_NUM_COLU,"###")
       WRT_GLS_COR = FORMAT$(MAP_NUM_CORR,"###")
       MAP_GLS_WRIT = WRT_GLS_DAT + WRT_GLS_LIN + WRT_GLS_COL + WRT_GLS_COR +&
          MAP_GLS_WRIT
       MAP_NUM_CORR = MAP_NUM_CORR + 1
       MAP_GLS_WRIT = ""
    END DEF

 !====================== TOKEN ==========================================

    DEF INTEGER NEXTTOKEN
    ON ERROR GO TO MAP_LAB_ERR
       IF TOKEN = ETXTOK THEN
          NEXTTOKEN = ETXTOK
          GO TO NEX_LAB_ASG
       END IF
       P_P = P_Q 
 NEX_LAB_NEW:
       WHILE (MID$(I_B$,P_P,1) = " " OR ASCII(MID$(I_B$,P_P,1)) = HTAB) AND &
          P_P <= SZ_I_B
          P_P = P_P + 1
       NEXT
       P_Q = P_P 
       IF P_P > SZ_I_B OR I_B$ = "" THEN
          GET #MAP_CNL_FFLG
          SZ_I_B = RECOUNT
          MOVE FROM #MAP_CNL_FFLG , I_B$ = SZ_I_B
          P_P, P_Q  = 1
          GO TO NEX_LAB_NEW
        END IF
        C_Q = MID$(I_B$,P_Q,1)
        IF (C_Q >= "A" AND C_Q <= "Z") OR (C_Q >= "a" AND C_Q <= "z") THEN
            WHILE (MID$(I_B$,P_P,1) >= "A" AND MID$(I_B$,P_P,1) <= "Z" &
               OR  MID$(I_B$,P_P,1)  = "_"      &
          OR  MID$(I_B$,P_P,1) >= "a" AND &
              MID$(I_B$,P_P,1) <= "z")
                        P_P = P_P + 1
         NEXT
         SZTOKEN = P_P - P_Q
         NEXTTOKEN = IDNTOK
         VALTOKEN = MID$(I_B$,P_Q,SZTOKEN)
      ELSE
      IF C_Q >= "0" AND C_Q <= "9" THEN
         WHILE MID$(I_B$,P_P,1) >= "0" AND MID$(I_B$,P_P,1) <= "9"
            P_P = P_P + 1
         NEXT
         SZTOKEN = P_P - P_Q
         NEXTTOKEN = NUMTOK
         VALTOKEN = MID$(I_B$,P_Q,SZTOKEN)
         NUMTOKEN  = VAL(VALTOKEN)
      ELSE
      IF C_Q = '"'  OR C_Q = "'" THEN
         P_P = P_P + 1
         WHILE MID$(I_B$,P_P,1) <> C_Q
            P_P = P_P + 1
         NEXT
         SZTOKEN = P_P - (P_Q + 1)
         P_P = P_P + 1
         NEXTTOKEN = STRTOK
         STRTOKEN = MID$(I_B$,P_Q + 1,SZTOKEN)
         VALTOKEN = C_Q + STRTOKEN + C_Q
      ELSE
         NEXTTOKEN = CHRTOK
         VALTOKEN = MID$(I_B$,P_P,1)
       P_P = P_P + 1
       SZTOKEN = 1
      END IF
      END IF
      END IF
      GO TO NEX_LAB_ASG
 MAP_LAB_ERR:
      CLOSE #MAP_CNL_FFLG
      IF ERR = 11 THEN
          NEXTTOKEN = ETXTOK
      ELSE
          PRINT   "ERROR(";ERR;") ";ERT$(ERR);" en linea ";erl;&
            ", MODULO ";ern$
       END IF
       RESUME 800
 NEX_LAB_ASG:
       P_Q = P_P
800
   END DEF

 !====================== INICIALIZACION ======================
805
   DEF INTEGER MAP_FNC_INI
    ON ERROR GO TO MAP_LAB_OPE

   MAP_TOT_LINE  = 0
   FOR I% = 1 TO 30
   FOR J% = 1 TO 120
      MAP_MAT_SCRN(I%,J%) = " "
   NEXT J%
   NEXT I%

   FOR I% = 28 TO 106
      MAP_MAT_SCRN(27,I%) = "X"
   NEXT I%

   FOR YY% = 1 TO 23
	   MAP_VEC_TFIC(YY%) = 0
   NEXT YY%
   MAP_VEC_TFIC(24) = 1
   FOR I% = 0 TO 7
   FOR J% = 1 TO 10
      IF J% = 10 THEN
         MAP_MAT_SCRN(1,I%  * 10 + J% + 27) = STR$(I%  + 1)
         MAP_MAT_SCRN(30,I%  * 10 + J% + 27) = STR$(I%  + 1)
      ELSE
         MAP_MAT_SCRN(1,I%  * 10 + J% + 27) = " "
         MAP_MAT_SCRN(30,I%  * 10 + J% + 27) = " "
      END IF
   NEXT J%
   NEXT I%

   FOR I% = 0 TO 7
   FOR J% = 1 TO 10
      IF J% = 10 THEN
         MAP_MAT_SCRN(2,I%  * 10 + J% + 27) = " "
         MAP_MAT_SCRN(29,I%  * 10 + J% + 27) = " "
      ELSE
         MAP_MAT_SCRN(2,I%  * 10 + J% + 27) = STR$(J%)
         MAP_MAT_SCRN(29,I%  * 10 + J% + 27) = STR$(J%)
      END IF
   NEXT J%
   NEXT I%

   FOR I% = 27 TO 108
        MAP_MAT_SCRN(3,I%) = "-"
        MAP_MAT_SCRN(28,I%) = "-"
   NEXT I%

   FOR I% = 4 TO 27
         IF I% -3 < 10 THEN
             MAP_MAT_SCRN(I% , 24 ) = "0" + STR$( I% - 3 )
             MAP_MAT_SCRN(I% , 109) = "0" + STR$( I% - 3 )
         ELSE
             MAP_MAT_SCRN(I% , 24 ) = STR$( I% - 3 )
             MAP_MAT_SCRN(I% , 109) = STR$( I% - 3 )
         END IF
         MAP_MAT_SCRN(I% , 26 ) = "|"
         MAP_MAT_SCRN(I% , 107) = "|"
   NEXT I%

   MAP_VEC_BLKS(1) = ""
   FOR I% = 2 TO 150
	MAP_VEC_BLKS(I%) = MAP_VEC_BLKS(I% - 1) + " "
   NEXT I%

 !!!      MAP_GLS_IDEN = DATE$(0%) + " " + TIME$(0%)
          MAP_GLS_IDEN = ""
 !!! No escribe fecha
      MAP_NUM_BAS = 65
      MAP_SEPA_PIC    = "                  PIC  "
      MAP_ASC_BEL = CHR$(07)
      MAP_CNL_FFLG = 1   
      MAP_CNL_FBMS = 2
      MAP_CNL_FGEN = 3
      MAP_CNL_FTXT = 4
      MAP_CNL_FDMN = 5
      MAP_CNL_FRCR = 6
 !JSS
      MAP_CNL_FINF = 7

      V_ANSI(MG_C) = "      "
      V_ANSI(MG_A) = "       "
      V_ANSI(MG_B) = "           "
      V_ANSI(MG_1) = "               "
      V_ANSI(MG_2) = "                   "
      V_ANSI(MG_N) = ""
      MAP_VEC_BLK(1) = "        "
      MAP_VEC_BLK(2) = "       "
      MAP_VEC_BLK(3) = "      "
      MAP_VEC_BLK(4) = "     "
      MAP_VEC_BLK(5) = "    "
      MAP_VEC_BLK(6) = "   "
      MAP_VEC_BLK(7) = "  "
      MAP_VEC_BLK(8) = " "
      MAP_VEC_BLK(9) = ""
      FOR I% = 1 TO 150
         MAP_VEC_KEY(I%) = "      "
         MAP_GLS_VIX(I%)   = "(" + STR$(I%) + ")"
         MAP_VEC_TAB(I%)   = ",ATTRB=(PROT),LENGTH=1,"
         MAP_VEC_OBLI(I%)  =  "S"
         MAP_VEC_MOVE(I%)  = MAP_CTE_YES
         MAP_VEC_SCLR(I%)  = MAP_CTE_YES
         MAP_VEC_TFLD(I%)  = MAP_IND_FLD
         MAP_VEC_PROT(I%)  = MAP_CTE_YES
         MAP_VEC_VALI(I%)  = MAP_CTE_YES
         MAP_VEC_PFLD(I%)  = MAP_CTE_YES
         MAP_VEC_FECH(I%)  = MAP_CTE_NOT
         MAP_VEC_DERI(I%)  = MAP_CTE_NOT
         MAP_VEC_BYA(I%)   = 1
         MAP_VEC_LGLS(I%)  = 0
         MAP_VEC_FLD_GAR(I%)  = ""
      NEXT I%
 !!!      MAP_NUM_INFE = 3
      MAP_NUM_INFE = 1
      MAP_NUM_SUPE = 24
      MAP_SWI_PFLD = MAP_CTE_NOT
      MAP_ASC_NWL = CHR$(MAP_ASC_CRT) + CHR$(MAP_ASC_LFD)
      P_P,P_Q = 1
806
      CALL LIB$GET_SYMBOL("GNS$PRY",MAP_GLS_PROY)
      CALL LIB$GET_SYMBOL("DES$FIL",MAP_GLS_FLG)
      CALL LIB$GET_SYMBOL("PTH",MAP_FIL_FLG)
      CALL LIB$GET_SYMBOL("DES$MAP",MAP_GLS_MAT)
      MAP_GLS_HLP = ""
      MAP_GLS_HFOR = ""
807
 !!!	APERTURA  ARCHIVO REGISTRO DOMINIO
	FIO_CMND = "INP                 "
	CALL "GNSFIODMN" BY REF (FIO_CMND)
   
 !!!	APERTURA  ARCHIVO REGISTRO RECORRIDO
	FIO_CMND = "INP                 "
 	CALL "GNSFIORCR" BY REF (FIO_CMND)
   
808   OPEN MAP_FIL_FLG FOR INPUT AS FILE #MAP_CNL_FFLG,RECORDTYPE ANY,   &
         ORGANIZATION SEQUENTIAL VARIABLE,   RECORDSIZE 255
   
      GET #MAP_CNL_FFLG
      SZ_I_B = RECOUNT
      MOVE FROM #MAP_CNL_FFLG , I_B$ = SZ_I_B
      GO TO FIN_LAB_INI
 MAP_LAB_OPE:
   PRINT MAP_ASC_BEL,MAP_ASC_BEL,MAP_ASC_BEL
   IF ERR = 2 THEN
      PRINT MAP_FIL_FLG,FILE_WSS, " : NOMBRE DE ARCHIVO ILEGAL"
   ELSE 
   IF ERR = 5 THEN
      PRINT MAP_FIL_FLG,FILE_WSS, " ARCHIVO INEXISTENTE       "
   ELSE
      PRINT   "ERROR(";ERR;") ";ERT$(ERR);" en linea ";erl;&
         ", MODULO ";ern$
   END IF
   END IF
   RESUME 809
 FIN_LAB_INI:
809
   END DEF

810
  !====================== FORM ======================

   DEF INTEGER MAP_FNC_FOR
      WHILE VALTOKEN <> "FORM"
         TOKEN = NEXTTOKEN
      NEXT
      TOKEN = NEXTTOKEN
      TOKEN = NEXTTOKEN
      TOKEN = NEXTTOKEN
      MAP_GLS_MAPA = STRTOKEN
      IF LEN(MAP_GLS_MAPA) > 3 THEN
          MAP_GLS_MAPA = RIGHT$(MAP_GLS_MAPA,3)
      END IF

 !!!	APERTURA  ARCHIVO MAPA
 !!!      MAP_FIL_BMS = MAP_GLS_PROY + "M" + MAP_GLS_MAPA + ".SRT"
 !!!      OPEN MAP_FIL_BMS FOR OUTPUT AS FILE #MAP_CNL_FBMS,RECORDTYPE ANY,&
 !!!         ORGANIZATION SEQUENTIAL VARIABLE,   RECORDSIZE 255
   
 !!!	APERTURA  ARCHIVO MODULO DE MANEJO
 !!!      MAP_FIL_GEN = MAP_GLS_PROY + "MM" + MAP_GLS_MAPA + ".GEN"
 !!!      MAP_GLS_PBM = " OF '" + MAP_GLS_PROY + "BM" + MAP_GLS_MAPA + ".TXT'"
 !!!      OPEN MAP_FIL_GEN FOR OUTPUT AS FILE #MAP_CNL_FGEN,RECORDTYPE ANY,&
 !!!         ORGANIZATION SEQUENTIAL VARIABLE,   RECORDSIZE 255
   
 !!!	APERTURA  ARCHIVO REGISTRO IMAGEN
 !!!      MAP_FIL_TXT = MAP_GLS_PROY + "RI" + MAP_GLS_MAPA + ".SRT"
 !!!      OPEN MAP_FIL_TXT FOR OUTPUT AS FILE #MAP_CNL_FTXT,RECORDTYPE ANY,&
 !!!         ORGANIZATION SEQUENTIAL VARIABLE,   RECORDSIZE 255
   
 !!!JSS	APERTURA  ARCHIVO DE INFORMACION
 !!!      MAP_FIL_TXT = MAP_GLS_PROY + "IR" + MAP_GLS_MAPA + ".GEN"
 !!!      OPEN MAP_FIL_TXT FOR OUTPUT AS FILE #MAP_CNL_FINF,RECORDTYPE ANY,&
 !!!         ORGANIZATION SEQUENTIAL VARIABLE,   RECORDSIZE 255
   
      TOKEN = NEXTTOKEN
      IF VALTOKEN = 'HELP_FORM' THEN
         TOKEN = NEXTTOKEN
         TOKEN = NEXTTOKEN
         MAP_GLS_HFOR = MAP_GLS_MAPA + " : " + STRTOKEN
      END IF
   
      MAP_GLS_DFL = " IN " + MAP_GLS_MAPA + "-FLD"
      MAP_GLS_MST = MAP_GLS_PROY + MAP_GLS_MAPA + "A"
      CALL MAP_RUT_SPA(MAP_GLS_MST,9)
      WTXT_NUM_SOR = 0
      MAP_GLS_TXT = MAP_FNC_WTXT(V_ANSI(MG_C) + "* " + MAP_GLS_IDEN)
      MAP_GLS_TXT = MAP_FNC_WTXT(V_ANSI(MG_C) + "* " + MAP_GLS_HFOR)
      MAP_GLS_HLP = ""
            
      MAP_GLS_TXT = MAP_FNC_WTXT(V_ANSI(MG_A) +"01  " + MAP_GLS_MAPA + "-FLD.")
      MAP_GLS_TXT = MAP_FNC_WTXT(V_ANSI(MG_B) +&
         "05 FILLER-" + MAP_GLS_MAPA + "                    PIC  X(12).")
      WTXT_NUM_SOR = 1
   END DEF
820
 !====================== AREA TO CLEAR ======================

   DEF INTEGER MAP_FNC_ATC
   WHILE VALTOKEN <> ";"
      TOKEN = NEXTTOKEN
          IF VALTOKEN = 'AREA_TO_CLEAR' THEN
             TOKEN = NEXTTOKEN
             TOKEN = NEXTTOKEN
             MAP_NUM_INFE = NUMTOKEN
             MAP_NUM_INFE = 1
             TOKEN = NEXTTOKEN
             TOKEN = NEXTTOKEN
 !!!         MAP_NUM_SUPE = NUMTOKEN
 !!!         MAP_GLS_WRIT = MAP_GLS_MAPA + STR$(MAP_NUM_SUPE - MAP_NUM_INFE + 1) +&
 !!!             ",80),CTRL(PRINT)"
 !!!         MAP_GLS_WRIT = MAP_FNC_WBMS(MAP_GLS_WRIT)
          END IF
   
   NEXT
   END DEF
830
 !====================== DETECTA NUMERO POR SU PICTURE ==============

   DEF INTEGER MAP_FNC_DNUM
        MAP_IND_NUM = 0
 !JSS   PRINT '**';LEN(STRTOKEN);STRTOKEN
        FOR I_NUM% = 1 TO LEN(STRTOKEN)
            C_NUM$ = MID$(STRTOKEN,I_NUM%,1)
            IF C_NUM$ <> '9' AND C_NUM$ <> '.' AND C_NUM$ <> ','&
                             AND C_NUM$ <> 'N' THEN
                MAP_IND_NUM = 1
            ELSE
 !JSS           PRINT C_NUM$
            END IF
        NEXT I_NUM%
   END DEF
835
 !====================== PICTURE ====================================

   DEF INTEGER MAP_FNC_PIC
   MAP_GLS_PIC = ""
   TOKEN = NEXTTOKEN
   TOKEN = NEXTTOKEN
   SGN_LEAD = ""
 
   IF TOKEN = NUMTOK THEN
         MAP_VEC_LGLS(MAP_IND_CMPO) = NUMTOKEN
         OVR_NUM_LEN = NUMTOKEN
         MAP_NUM_PICT = NUMTOKEN
         MAP_NUM_NCS  =  NUMTOKEN
         MAP_NUM_NCI  = 0
         TOKEN = NEXTTOKEN
         MAP_GLS_PIC = ""
         FOR I% = 1 TO MAP_NUM_PICT
            MAP_GLS_PIC = MAP_GLS_PIC + STRTOKEN
         NEXT I%
   ELSE
        MAP_NUM_FNC = MAP_FNC_DNUM
        IF MAP_IND_NUM = 0 THEN
            MAP_VEC_NUME(MAP_TOT_CMPO) = MAP_CTE_YES
        END IF
        OVR_NUM_LEN = LEN(STRTOKEN)
        MAP_VEC_NMR(MAP_IND_CMPO) = "NN9"
        MAP_VEC_ISG(MAP_IND_CMPO) = "N"
        IF MID$(STRTOKEN,1,1) = "N" THEN
            MAP_VEC_NMR(MAP_IND_CMPO) = "NS9"
            MAP_VEC_ISG(MAP_IND_CMPO) = "S"
            SGN_LEAD = " SIGN LEADING SEPARATE"
        END IF
        MAP_GLS_PIC = STRTOKEN
        MAP_NUM_NCS = LEN(MAP_GLS_PIC)
        MAP_NUM_PICT = LEN(MAP_GLS_PIC)
        IF MAP_SWI_VERF = MAP_CTE_YES OR MAP_SWI_IDC = MAP_CTE_YES THEN
           MAP_NUM_PICT = MAP_NUM_PICT - 1
        END IF
    IF LEN(LEFT$(MAP_GLS_PIC,INSTR(0,MAP_GLS_PIC,"V"))) - 1= -1 THEN
          MAP_VEC_NMR(MAP_IND_CMPO) = MAP_VEC_NMR(MAP_IND_CMPO) + "N"
          MAP_VEC_ENT(MAP_IND_CMPO) = LEN(MAP_GLS_PIC)
          IF MAP_SWI_VERF = MAP_CTE_YES THEN
             MAP_VEC_ENT(MAP_IND_CMPO) =&
            MAP_VEC_ENT(MAP_IND_CMPO) - 1
          END IF
          MAP_VEC_DECM(MAP_IND_CMPO) = 0
      ELSE
          MAP_VEC_NMR(MAP_IND_CMPO) = MAP_VEC_NMR(MAP_IND_CMPO) + "V"
          MAP_VEC_ENT(MAP_IND_CMPO) = &
                     LEN(LEFT$(MAP_GLS_PIC,INSTR(0,MAP_GLS_PIC,"V"))) - 1
          MAP_VEC_DECM(MAP_IND_CMPO) = &
                     LEN(RIGHT$(MAP_GLS_PIC,INSTR(0,MAP_GLS_PIC,"V"))) - 1
           END IF
      IF MAP_VEC_NUME(MAP_IND_CMPO) = MAP_CTE_YES THEN
          MAP_NUM_NCI = 0
      ELSE
          MAP_NUM_NCI = MAP_NUM_NCS - MAP_NUM_PICT
      END IF
 !!!      CALL MAP_RUT_PIC(MAP_GLS_PIC)
   END IF

   IF MAP_SWI_FECH = MAP_CTE_YES THEN
       MAP_VEC_NUME(MAP_TOT_CMPO) = MAP_CTE_NOT
   END IF
   IF SGN_LEAD <> "" THEN
        MAP_VEC_ENT(MAP_IND_CMPO) = MAP_VEC_ENT(MAP_IND_CMPO) - 1
   END IF

   TOKEN = NEXTTOKEN
   END DEF
840
 !====================== ARCHIVO TXT : REGISTRO IMAGEN ======================

   DEF INTEGER MAP_FNC_TXT
   END DEF
850
 !====================== DETECTA CADA REGISTRO DE LA PANTALLA ===============

   DEF INTEGER MAP_FNC_FIL
   MAP_SWI_FILE = MAP_CTE_NOT
   FOR I% = 1 TO MAP_TOT_FILE
      IF MAP_VEC_FIL(I%) = MAP_VEC_REGI(MAP_TOT_CMPO) THEN
         MAP_SWI_FILE = MAP_CTE_YES
      END IF
   NEXT I%
   IF MAP_SWI_FILE = MAP_CTE_NOT AND MAP_SWI_CFRM = MAP_CTE_NOT THEN
      MAP_TOT_FILE = MAP_TOT_FILE + 1
      MAP_VEC_FIL(MAP_TOT_FILE) = MAP_VEC_REGI(MAP_TOT_CMPO)
   END IF

   END DEF
860
 !====================== GENERA CAMPOS ADICIONALES DE FECHA =============

   DEF INTEGER MAP_FNC_FEC
   MAP_GLS_SFEC = RIGHT$(MAP_VEC_NOMB(MAP_TOT_CMPO),2)
   FOR I% = 1 TO MAP_NUM_TFEC
      MAP_TOT_CMPO = MAP_TOT_CMPO + 1
      IF MAP_SWI_CFRM = MAP_CTE_YES THEN
         MAP_VEC_MOVE(MAP_TOT_CMPO) = MAP_CTE_NOT
      END IF
      MAP_VEC_DERI (MAP_TOT_CMPO) = MAP_CTE_YES
      MAP_VEC_DSPL (MAP_TOT_CMPO) = MAP_VEC_DSPL(MAP_IND_CMPO)
      MAP_VEC_PROT (MAP_TOT_CMPO) = MAP_CTE_NOT
      MAP_VEC_VALI (MAP_TOT_CMPO) = MAP_CTE_NOT
      MAP_VEC_SCLR (MAP_TOT_CMPO) = MAP_CTE_NOT
      MAP_VEC_TFLD (MAP_TOT_CMPO) = MAP_VEC_TFLD(MAP_IND_CMPO)
      MAP_VEC_REGI (MAP_TOT_CMPO) = MAP_VEC_REGI(MAP_IND_CMPO)
      MAP_VEC_TIPO (MAP_TOT_CMPO) = "NUM"
      MAP_VEC_NOMB (MAP_TOT_CMPO) = MAP_VEC_DMSA(I%) + MAP_GLS_SFEC
      MAP_VEC_PFLD (MAP_TOT_CMPO) = MAP_CTE_NOT
      MAP_VEC_NRTN (MAP_TOT_CMPO) = MAP_VEC_REGI(MAP_TOT_CMPO) +&
                                   "-NUM-" + MAP_VEC_NOMB(MAP_TOT_CMPO)
      MAP_VEC_TIDX(MAP_TOT_CMPO)        = MAP_TOT_CIDX
      MAP_GLS_VFEC(I%)           = MAP_VEC_NRTN(MAP_TOT_CMPO) +&
                    RIGHT(MAP_SEPA_PIC,4) + "X(02)."
882
   NEXT I%
   END DEF
884
 !====================== GENERA CAMPOS ADICIONALES DIGITO VERIFICADOR =======
886
   DEF INTEGER MAP_FNC_VRF

   MAP_TOT_CMPO = MAP_TOT_CMPO + 1
   IF MAP_SWI_CFRM = MAP_CTE_YES THEN
        MAP_VEC_MOVE(MAP_TOT_CMPO) = MAP_CTE_NOT
   END IF
   MAP_VEC_DSPL(MAP_TOT_CMPO) = MAP_VEC_DSPL(MAP_IND_CMPO)
   MAP_VEC_PROT(MAP_TOT_CMPO) = MAP_VEC_PROT(MAP_IND_CMPO)
   MAP_VEC_TIDX(MAP_TOT_CMPO) = MAP_TOT_CIDX
   MAP_VEC_REGI(MAP_TOT_CMPO) = MAP_VEC_REGI(MAP_IND_CMPO)
   MAP_VEC_TIPO(MAP_TOT_CMPO) = "VRF"
   MAP_VEC_NOMB(MAP_TOT_CMPO) = MAP_VEC_NOMB(MAP_IND_CMPO)
   MAP_VEC_NRTN(MAP_TOT_CMPO) = MAP_VEC_REGI(MAP_IND_CMPO) + "-VRF-" +&
                                MAP_VEC_NOMB(MAP_IND_CMPO)

   MAP_VEC_TFLD(MAP_TOT_CMPO) = MAP_VEC_TFLD(MAP_IND_CMPO)
   MAP_VEC_PKEY(MAP_TOT_CMPO) = MAP_CTE_NOT
   MAP_VEC_PFLD(MAP_TOT_CMPO) = MAP_CTE_NOT
   MAP_GLS_VRF(1) = MAP_VEC_NRTN(MAP_TOT_CMPO-1) + "-ALF" +&
          RIGHT(MAP_SEPA_PIC,5) + "X(" +&
          STR$(MAP_NUM_PICT - 1) + ")."
   MAP_GLS_VRF(2) = MAP_VEC_NRTN(MAP_TOT_CMPO-1) + "-EDT  REDEFINES"
   MAP_GLS_VRF(3) = MAP_VEC_NRTN(MAP_TOT_CMPO-1) + "-ALF" +&
          RIGHT(MAP_SEPA_PIC,5) + "Z(" +&
          STR$(MAP_NUM_PICT - 1) + ")."
   MAP_GLS_VRF(4) = MAP_VEC_NRTN(MAP_TOT_CMPO-1) + "      REDEFINES"
   MAP_GLS_VRF(5) = MAP_VEC_NRTN(MAP_TOT_CMPO-1) + "-ALF" +&
          RIGHT(MAP_SEPA_PIC,5) + "9(" +&
          STR$(MAP_NUM_PICT - 1) + ")."
   MAP_GLS_VRF(6) = MAP_VEC_NRTN(MAP_TOT_CMPO)   +&
          MAP_SEPA_PIC + "X(01)."
   END DEF

 !====================== GENERA CAMPOS ADICIONALES CAMPOS IDC =======

   DEF INTEGER MAP_FNC_IDC
   MAP_TOT_CMPO = MAP_TOT_CMPO + 1
   IF MAP_SWI_CFRM = MAP_CTE_YES THEN
        MAP_VEC_MOVE(MAP_TOT_CMPO) = MAP_CTE_NOT
   END IF
   MAP_VEC_REGI(MAP_TOT_CMPO) = MAP_VEC_REGI(MAP_IND_CMPO)
   MAP_VEC_TIPO(MAP_TOT_CMPO) = "GLS"
   MAP_VEC_TIDX(MAP_TOT_CMPO) = MAP_TOT_CIDX
   MAP_VEC_NOMB(MAP_TOT_CMPO) = MAP_VEC_NOMB(MAP_IND_CMPO)

   MAP_VEC_NRTN(MAP_TOT_CMPO) = MAP_VEC_REGI(MAP_IND_CMPO) + "-GLS-" +&
               MAP_VEC_NOMB(MAP_TOT_CMPO)
   MAP_VEC_TFLD(MAP_TOT_CMPO) = MAP_VEC_TFLD(MAP_IND_CMPO)
   MAP_VEC_PKEY(MAP_TOT_CMPO - 1) = MAP_CTE_NOT
   MAP_VEC_PKEY(MAP_TOT_CMPO    ) = MAP_CTE_NOT
   MAP_VEC_PFLD(MAP_TOT_CMPO - 1) = MAP_CTE_NOT
   MAP_VEC_PFLD(MAP_TOT_CMPO    ) = MAP_CTE_NOT
   MAP_VEC_DSPL(MAP_TOT_CMPO) = MAP_VEC_DSPL(MAP_IND_CMPO)
   MAP_VEC_PROT(MAP_TOT_CMPO) = MAP_VEC_PROT(MAP_IND_CMPO)
   MAP_GLS_IDC(1) = MAP_VEC_NRTN(MAP_TOT_CMPO-1) +&
         MAP_SEPA_PIC + "X(1)."
   MAP_GLS_IDC(2) = MAP_VEC_NRTN(MAP_TOT_CMPO) +&
         MAP_SEPA_PIC + "X(" +&
         STR$(MAP_NUM_PICT ) + ")."
   END DEF


 !====================== UNDERCORE ======================

   DEF INTEGER MAP_FNC_UND

   MAP_GLS_DLI = "<"
   MAP_GLS_DLD = ">"
   CALL GENRPTREP(MAP_GLS_CMP,"_","-")
   MAP_TOT_CMPO = MAP_TOT_CMPO + 1
   MAP_IND_CMPO = MAP_TOT_CMPO

 UND_LAB_BCI:
   UND_TOT_UND = 0
   FOR I% = 1 TO LEN(MAP_GLS_CMP)
      IF ZZZ% = 0 THEN
		IF MID$(MAP_GLS_CMP,I%,1) = "-" THEN
	                ZZZ% = I%
		END IF
      END IF
      IF MID$(MAP_GLS_CMP,I%,1) = "$" THEN
         UND_TOT_UND = UND_TOT_UND + 1
         MAP_VEC_UNDE(UND_TOT_UND) = I%
      END IF
   NEXT I%
   IF UND_TOT_UND > 0 THEN
        MAP_VEC_FLD_GAR(MAP_TOT_CMPO) = RIGHT$(MAP_GLS_CMP,(MAP_VEC_UNDE(2) + 1)) +&
	" ( " + LEFT$(MAP_GLS_CMP,MAP_VEC_UNDE(1) - 1) + " )"
	FOR XXX% = 1 TO LEN(MAP_VEC_FLD_GAR(MAP_TOT_CMPO))
		IF MID$(MAP_VEC_FLD_GAR(MAP_TOT_CMPO),XXX%,5) = "-IKY-" OR&
		   MID$(MAP_VEC_FLD_GAR(MAP_TOT_CMPO),XXX%,5) = "-MKY-" OR&
		   MID$(MAP_VEC_FLD_GAR(MAP_TOT_CMPO),XXX%,5) = "-AKY-" THEN
		IZQQ$ = LEFT$(MAP_VEC_FLD_GAR(MAP_TOT_CMPO),XXX%) 
		DERR$ = RIGHT$(MAP_VEC_FLD_GAR(MAP_TOT_CMPO),XXX%+5)

		        XXX% = LEN(MAP_VEC_FLD_GAR(MAP_TOT_CMPO))
 !!!			MAP_VEC_FLD_GAR(MAP_TOT_CMPO) = LEFT$(MAP_VEC_FLD_GAR(MAP_TOT_CMPO),XXX%) +&
 !!!							RIGHT$(MAP_VEC_FLD_GAR(MAP_TOT_CMPO),XXX%+5)
 			MAP_VEC_FLD_GAR(MAP_TOT_CMPO) = IZQQ$ + DERR$
		END IF
	NEXT XXX%
        MAP_VEC_TCMP(MAP_TOT_CMPO) = MID$(MAP_GLS_CMP,MAP_VEC_UNDE(1) + 1,&
               MAP_VEC_UNDE(2) - (MAP_VEC_UNDE(1) + 1))
	MAP_GLS_CMP = LEFT$(MAP_GLS_CMP,MAP_VEC_UNDE(1) - 1) +&
                      RIGHT$(MAP_GLS_CMP,ZZZ% )
   END IF

 UND_LAB_CIC:
   UND_TOT_UND = 0
   FOR I% = 1 TO LEN(MAP_GLS_CMP)
      IF MID$(MAP_GLS_CMP,I%,1) = "-" THEN
         UND_TOT_UND = UND_TOT_UND + 1
         MAP_VEC_UNDE(UND_TOT_UND) = I%
      END IF
   NEXT I%

   IF MID$(MAP_GLS_CMP,MAP_VEC_UNDE(1),5) = "-IKY-" THEN
      MAP_GLS_DLI = "{"
      MAP_GLS_DLD = "}"
      MAP_VEC_PKEY(MAP_TOT_CMPO) = MAP_CTE_YES
      MAP_VEC_PFLD(MAP_TOT_CMPO) = MAP_CTE_NOT
      MAP_VEC_KEY(MAP_IND_CMPO) = " IKY  "
      MAP_VEC_TFLD(MAP_TOT_CMPO) = MAP_IND_IKY
                MAP_GLS_CMP = LEFT$(MAP_GLS_CMP,MAP_VEC_UNDE(1) - 1 ) +&
               RIGHT$(MAP_GLS_CMP,MAP_VEC_UNDE(2))
      GO TO UND_LAB_CIC
   ELSE
   IF MID$(MAP_GLS_CMP,MAP_VEC_UNDE(1),5) = "-MKY-" THEN
      MAP_GLS_DLI = "{"
      MAP_GLS_DLD = "}"
      MAP_VEC_PKEY(MAP_TOT_CMPO) = MAP_CTE_NOT
      MAP_VEC_PFLD(MAP_TOT_CMPO) = MAP_CTE_YES
      MAP_VEC_KEY(MAP_IND_CMPO) = " MKY  "
      MAP_VEC_TFLD(MAP_TOT_CMPO) = MAP_IND_MKY
                MAP_GLS_CMP = LEFT$(MAP_GLS_CMP,MAP_VEC_UNDE(1) - 1 ) +&
               RIGHT$(MAP_GLS_CMP,MAP_VEC_UNDE(2))
      GO TO UND_LAB_CIC
   ELSE
   IF MID$(MAP_GLS_CMP,MAP_VEC_UNDE(1),5) = "-AKY-" THEN
      MAP_GLS_DLI = "{"
      MAP_GLS_DLD = "}"
      MAP_VEC_PKEY(MAP_TOT_CMPO) = MAP_CTE_NOT
      MAP_VEC_PFLD(MAP_TOT_CMPO) = MAP_CTE_NOT
      MAP_VEC_KEY(MAP_IND_CMPO) = " AKY  "
      MAP_VEC_TFLD(MAP_TOT_CMPO) = MAP_IND_AKY
                MAP_GLS_CMP = LEFT$(MAP_GLS_CMP,MAP_VEC_UNDE(1) - 1 ) +&
               RIGHT$(MAP_GLS_CMP,MAP_VEC_UNDE(2))
      GO TO UND_LAB_CIC
   END IF
   END IF
   END IF

   IF LEFT$(MAP_GLS_CMP,4) = "FRM-" THEN
        MAP_SWI_CFRM = MAP_CTE_YES
        MAP_VEC_MOVE(MAP_TOT_CMPO) = MAP_CTE_NOT
 !!!    MAP_VEC_REGI(MAP_TOT_CMPO) = MAP_GLS_MAPA
 !!!    GO TO UND_LAB_FRM
   END IF
   MAP_VEC_REGI(MAP_TOT_CMPO) = LEFT$(MAP_GLS_CMP,MAP_VEC_UNDE(1) - 1)
 UND_LAB_FRM:

   IF MID$(MAP_GLS_CMP,MAP_VEC_UNDE(1),5) = "-FEC-" THEN
      MAP_NUM_TFEC = 4
      MAP_VEC_DMSA(1) = "D"
      MAP_VEC_DMSA(2) = "M"
      MAP_VEC_DMSA(3) = "S"
      MAP_VEC_DMSA(4) = "A"
      MAP_SWI_FECH = MAP_CTE_YES
      MAP_VEC_MOVE(MAP_TOT_CMPO) = MAP_CTE_NOT
      MAP_VEC_FECH(MAP_TOT_CMPO) = FEC_IND_FFEC
   ELSE
   IF MID$(MAP_GLS_CMP,MAP_VEC_UNDE(1),5) = "-DMA-" OR &
      MID$(MAP_GLS_CMP,MAP_VEC_UNDE(1),5) = "-AMD-" THEN
      MAP_NUM_TFEC = 3
      MAP_VEC_DMSA(1) = "D"
      MAP_VEC_DMSA(2) = "M"
      MAP_VEC_DMSA(3) = "A"
      MAP_VEC_DMSA(4) = ""
      MAP_SWI_FECH = MAP_CTE_YES
      MAP_VEC_MOVE(MAP_TOT_CMPO) = MAP_CTE_NOT
      MAP_VEC_FECH(MAP_TOT_CMPO) = FEC_IND_FDMA
   ELSE
   IF MID$(MAP_GLS_CMP,MAP_VEC_UNDE(1),5) = "-MSA-" OR &
      MID$(MAP_GLS_CMP,MAP_VEC_UNDE(1),5) = "-SAM-" THEN
      MAP_NUM_TFEC = 3
      MAP_VEC_DMSA(1) = "M"
      MAP_VEC_DMSA(2) = "S"
      MAP_VEC_DMSA(3) = "A"
      MAP_VEC_DMSA(4) = ""
      MAP_SWI_FECH = MAP_CTE_YES
      MAP_VEC_MOVE(MAP_TOT_CMPO) = MAP_CTE_NOT
      MAP_VEC_FECH(MAP_TOT_CMPO) = FEC_IND_FMSA
   ELSE
   IF MID$(MAP_GLS_CMP,MAP_VEC_UNDE(1),5) = "-FMA-" OR &
      MID$(MAP_GLS_CMP,MAP_VEC_UNDE(1),5) = "-FAM-" THEN
      MAP_NUM_TFEC = 2
      MAP_VEC_DMSA(1) = "M"
      MAP_VEC_DMSA(2) = "A"
      MAP_VEC_DMSA(3) = ""
      MAP_VEC_DMSA(4) = ""
      MAP_SWI_FECH = MAP_CTE_YES
      MAP_VEC_MOVE(MAP_TOT_CMPO) = MAP_CTE_NOT
      MAP_VEC_FECH(MAP_TOT_CMPO) = FEC_IND_FFMA
   ELSE
   IF MID$(MAP_GLS_CMP,MAP_VEC_UNDE(1),5) = "-FSA-" OR &
      MID$(MAP_GLS_CMP,MAP_VEC_UNDE(1),5) = "-FAS-" THEN
      MAP_NUM_TFEC = 2
      MAP_VEC_DMSA(1) = "S"
      MAP_VEC_DMSA(2) = "A"
      MAP_VEC_DMSA(3) = ""
      MAP_VEC_DMSA(4) = ""
      MAP_SWI_FECH = MAP_CTE_YES
      MAP_VEC_MOVE(MAP_TOT_CMPO) = MAP_CTE_NOT
      MAP_VEC_FECH(MAP_TOT_CMPO) = FEC_IND_FFSA
   ELSE
   IF MID$(MAP_GLS_CMP,MAP_VEC_UNDE(1),5) = "-FDM-" OR &
      MID$(MAP_GLS_CMP,MAP_VEC_UNDE(1),5) = "-FMD-" THEN
      MAP_NUM_TFEC = 2
      MAP_VEC_DMSA(1) = "D"
      MAP_VEC_DMSA(2) = "M"
      MAP_VEC_DMSA(3) = ""
      MAP_VEC_DMSA(4) = ""
      MAP_SWI_FECH = MAP_CTE_YES
      MAP_VEC_MOVE(MAP_TOT_CMPO) = MAP_CTE_NOT
      MAP_VEC_FECH(MAP_TOT_CMPO) = FEC_IND_FFDM
   ELSE
   IF MID$(MAP_GLS_CMP,MAP_VEC_UNDE(1),5) = "-FFA-" THEN
      MAP_NUM_TFEC = 1
      MAP_VEC_DMSA(1) = "A"
      MAP_VEC_DMSA(2) = ""
      MAP_VEC_DMSA(3) = ""
      MAP_VEC_DMSA(4) = ""
      MAP_SWI_FECH = MAP_CTE_YES
      MAP_VEC_MOVE(MAP_TOT_CMPO) = MAP_CTE_NOT
      MAP_VEC_FECH(MAP_TOT_CMPO) = FEC_IND_FFFA
   ELSE
   IF MID$(MAP_GLS_CMP,MAP_VEC_UNDE(1),5) = "-VRF-" THEN
      OVR_NUM_ADI = OVR_NUM_ADI + 2
      MAP_SWI_VERF = MAP_CTE_YES
      MAP_GLS_CMP = LEFT(MAP_GLS_CMP,MAP_VEC_UNDE(1)) +&
               "NUM" + RIGHT(MAP_GLS_CMP,MAP_VEC_UNDE(2))
      MAP_VEC_TIPO(MAP_TOT_CMPO) = "NUM"
      MAP_VEC_NUME(MAP_TOT_CMPO) = MAP_CTE_YES
   ELSE
   IF MID$(MAP_GLS_CMP,MAP_VEC_UNDE(1),5) = "-IDC-" THEN
      OVR_NUM_ADI = OVR_NUM_ADI + 2
      MAP_SWI_IDC = MAP_CTE_YES
      MAP_GLS_CMP = LEFT(MAP_GLS_CMP,MAP_VEC_UNDE(1)) +&
               "IND" + RIGHT(MAP_GLS_CMP,MAP_VEC_UNDE(2))
      MAP_VEC_TIPO(MAP_TOT_CMPO) = "IND"
   ELSE
   IF MID$(MAP_GLS_CMP,MAP_VEC_UNDE(1),5) = "-GLS-" THEN
      MAP_SWI_GLOS = MAP_CTE_YES
   ELSE
   END IF
   END IF
   END IF
   END IF
   END IF
   END IF
   END IF
   END IF
   END IF
   END IF
   MAP_VEC_TIPO(MAP_TOT_CMPO) = MID$(MAP_GLS_CMP,MAP_VEC_UNDE(1) + 1,&
               MAP_VEC_UNDE(2) - (MAP_VEC_UNDE(1) + 1))
   MAP_VEC_NOMB(MAP_TOT_CMPO) = RIGHT$(MAP_GLS_CMP,MAP_VEC_UNDE(2) + 1)
   MAP_VEC_CMP(MAP_TOT_CMPO) = MAP_GLS_CMP
   MAP_VEC_NRTN(MAP_TOT_CMPO) = MAP_VEC_REGI(MAP_TOT_CMPO) + "-" +&
               MAP_VEC_TIPO(MAP_TOT_CMPO) + "-" +&
               MAP_VEC_NOMB(MAP_TOT_CMPO)

   MAP_NUM_FNC = MAP_FNC_FIL
   END DEF
890
 !====================== INDEX =============================

   DEF INTEGER MAP_FNC_IDX
   TMP_INDEX = 1
   MAP_GLS_OCC = ""
   MAP_GLS_NIV_FLD = V_ANSI(MG_B) + "02 "
   MAP_GLS_SPA_FLD = V_ANSI(MG_B) + "   "
 IDX_LAB_NEW:
   ACT_INDEX = MAP_CTE_YES
   TMP_INDEX = TMP_INDEX + 1
   TOKEN = NEXTTOKEN
   TOKEN = NEXTTOKEN
   MAP_VEC_FICO(TMP_INDEX,1) = NUMTOKEN
   MAP_VEC_TFIC(NUMTOKEN) = MAP_VEC_TFIC(NUMTOKEN) + 1
   IF MAP_SWI_VERF = MAP_CTE_YES THEN
	   MAP_VEC_TFIC(NUMTOKEN) = MAP_VEC_TFIC(NUMTOKEN) + 1
   ELSE
   IF MAP_SWI_IDC = MAP_CTE_YES THEN
	   MAP_VEC_TFIC(NUMTOKEN) = MAP_VEC_TFIC(NUMTOKEN) + 1
   END IF
   END IF
 !   OVR_NUM_FIL = NUMTOKEN

   TOKEN = NEXTTOKEN
   TOKEN = NEXTTOKEN
   MAP_VEC_FICO(TMP_INDEX,2) = NUMTOKEN

   TOKEN = NEXTTOKEN
   TOKEN = NEXTTOKEN
   IF VALTOKEN = ":" THEN
      GO TO IDX_LAB_NEW
   END IF      
895
 F_INDEX:

   IF ANT_INDEX = MAP_CTE_NOT THEN
      NIV_INDEX = 3
      MAP_SEPA_PIC = "                  PIC  "
   ELSE
      IF TMP_INDEX = MAP_TOT_CIDX THEN
         NIV_INDEX = 5
      ELSE
         NIV_INDEX = 3
      END IF
   END IF

   ANT_INDEX = MAP_CTE_YES
   MAP_TOT_CIDX = TMP_INDEX
 IDX_LAB_FIN:
   MAP_VEC_TIDX(MAP_TOT_CMPO) = MAP_TOT_CIDX
   END DEF
900
 !====================== HELP ======================

   DEF INTEGER MAP_FNC_HLP
   TOKEN = NEXTTOKEN
   TOKEN = NEXTTOKEN
   MAP_VEC_HLP(MAP_IND_CMPO) = STRTOKEN
   MAP_GLS_HLP = STRTOKEN
   END DEF

 !====================== TEXT ======================
920
   DEF INTEGER MAP_FNC_TEX
   OVR_NUM_ADI = 1
   TOKEN = NEXTTOKEN
   TOKEN = NEXTTOKEN
   MAP_VEC_FICO(1,1) = NUMTOKEN
   OVR_NUM_FIL = NUMTOKEN
   MAP_NUM_LINE = NUMTOKEN
   IF MAP_SWI_PFLD = MAP_CTE_NOT THEN
      MAP_SWI_PFLD = MAP_CTE_YES
 !!!      MAP_NUM_INFE = MAP_VEC_FICO(1,1)
   END IF
   MAP_GLS_FIL = STR$(MAP_VEC_FICO(1,1) - MAP_NUM_INFE + 1 )
   IF LEN(MAP_GLS_FIL) = 1 THEN
      MAP_GLS_FIL = "0" + MAP_GLS_FIL
   END IF
   TOKEN = NEXTTOKEN
   TOKEN = NEXTTOKEN
   MAP_VEC_FICO(1,2) = NUMTOKEN - 1
   OVR_NUM_COL = NUMTOKEN - 1
   MAP_NUM_COLU = NUMTOKEN
   BMS_NUM_COL = NUMTOKEN
   MAP_GLS_COL = POS_VEC_ZRS(LEN(STR$(MAP_VEC_FICO(1,2)))) +&
            STR$(MAP_VEC_FICO(1,2))
   TOKEN = NEXTTOKEN
   TOKEN = NEXTTOKEN
   MAP_NUM_TTEX = SZTOKEN
   MAP_GLS_DEF = STRTOKEN
   TOKEN = NEXTTOKEN
   IF VALTOKEN = "&" THEN
      TOKEN = NEXTTOKEN
      MAP_GLS_DEF = MAP_GLS_DEF + STRTOKEN 
      MAP_NUM_TTEX = MAP_NUM_TTEX + SZTOKEN
      TOKEN = NEXTTOKEN
   END IF
   OVR_NUM_LEN = MAP_NUM_TTEX
   MAP_GLS_L11 = "         DFHMDF POS=(" + MAP_GLS_FIL + &
            "," + MAP_GLS_COL + "),ATTRB=(ASKIP"
   MAP_GLS_L13 = "),LENGTH=" + STR$(MAP_NUM_TTEX) + ","
   MAP_GLS_L31 = ""
   MAP_GLS_L21 = "               INITIAL='" 
   IF LEN(MAP_GLS_DEF) > 46 THEN
        MAP_GLS_L21 = MAP_GLS_L21 + LEFT$(MAP_GLS_DEF,47) + "X"
        MAP_GLS_L31 = "               " + RIGHT$(MAP_GLS_DEF,48) + "'"
   ELSE
        MAP_GLS_L21 = MAP_GLS_L21 + MAP_GLS_DEF + "'"
   END IF
   MAP_GLS_L12 = ",NORM"
   WHILE VALTOKEN <> ";"
 !!!      IF VALTOKEN = "BLINK" THEN
 !!!         MAP_NUM_INFE = 1
 !!!         MAP_SWI_PFLD = MAP_CTE_NOT
 !!!         GO TO TEX_LAB_FIN
 !!!      END IF
      TOKEN = NEXTTOKEN
   NEXT
   MAP_NUM_VSZ = MAP_NUM_TTEX + 1
   MAP_NUM_FNC = MAP_FNC_VAL
930
   MAP_GLS_WRIT = MAP_GLS_L11 + MAP_GLS_L12 + MAP_GLS_L13
   CALL MAP_RUT_SPA(MAP_GLS_WRIT,71)
   MAP_GLS_WRIT = MAP_GLS_WRIT + "X"
   MAP_GLS_WRIT = MAP_FNC_WBMS(MAP_GLS_WRIT)
   MAP_GLS_L21 = MAP_FNC_WBMS(MAP_GLS_L21)

 !!! NO ES CAMPO
   FOR I% = 1 TO MAP_NUM_TTEX
     MAP_MAT_SCRN(MAP_NUM_LINE + MAP_NUM_MHOR,&
                  MAP_NUM_MVER + MAP_NUM_COLU + I% - 1) =&
	MID$(MAP_GLS_DEF,I%,1) 
   NEXT I%

   IF MAP_GLS_L31 <> "" THEN
      MAP_GLS_L31 = MAP_FNC_WBMS(MAP_GLS_L31)
   END IF
   MAP_NUM_FNC = MAP_FNC_OVR
 TEX_LAB_FIN:
   END DEF


 !====ASIGNACION CORRELATIVOS PARA NOMBRES REPETIDOS  ===========

   DEF INTEGER MAP_FNC_NOMB
 !     FOR I% = 1 TO MAP_TOT_NOMB
 !       IF MAP_VEC_REPE(I%) = MAP_GLS_NOMB THEN
 !            MAP_TOT_REPE = MAP_TOT_REPE + 1
 !            MAP_GLS_NOMB =&
 !       LEFT$(MAP_GLS_NOMB,LEN(MAP_GLS_NOMB) - LEN(STR$(MAP_TOT_REPE))) +&
 !                           STR$(MAP_TOT_REPE)
 !       END IF
 !     NEXT I%
 !     MAP_TOT_NOMB = MAP_TOT_NOMB + 1
 !     MAP_VEC_REPE(MAP_TOT_NOMB) = MAP_GLS_NOMB
   END DEF
 !====================== BMS ======================================
 !!!  @@ ESCRIBE CAMPOS ENTRA CORCHETES
   DEF INTEGER MAP_FNC_BMS

   BMS_NUM_LMAP = BMS_NUM_PIC + 3
 !!!  Delim_izq ( MAP_GLS_DLI es < o {   ,      Columna - 2 )
    BMS_NUM_DPZ = -2
    IF MAP_VEC_DSPL(MAP_IND_CMPO) = MAP_CTE_NOT THEN
 	MAP_MAT_SCRN(MAP_VEC_FICO(L%,1) + MAP_NUM_MHOR ,&
                      MAP_NUM_MVER +   MAP_VEC_FICO(L%,2) + BMS_NUM_DPZ) =&
               MAP_GLS_DLI 
    END IF
   BMS_NUM_DPZ = MAP_NUM_NCI
 !!!      Campo Prefijo ( Ej: IDC )
   IF MAP_SWI_IDC = MAP_CTE_YES AND L% = 1 THEN
         MAP_GLS_PIC = 	RIGHT$(MAP_GLS_PIC,3)
   END IF
   IF MAP_SWI_IDC = MAP_CTE_YES THEN
 !!!         BMS_NUM_DPZ  = 1
         MAP_GLS_NOMB = MAP_VEC_TIPO(MAP_IND_CMPO) + MAP_VEC_NOMB(MAP_IND_CMPO)
         MAP_NUM_FNC = MAP_FNC_NOMB
         CALL MAP_RUT_SPA(MAP_GLS_NOMB,9)
         MAP_GLS_NOMB  = MAP_GLS_NOMB + "DFHMDF "
         MAP_NUM_FNC  = R_POS
         MAP_AUX_IDC$ = ",ATTRB=(ASKIP," + MAP_GLS_DARK + "),LENGTH=1"
         MAP_AUX_IDC$ = MAP_GLS_NOMB + MAP_GLS_POS + MAP_AUX_IDC$
 !!! &&& 
	MAP_MAT_SCRN(MAP_VEC_FICO(L%,1) + MAP_NUM_MHOR ,&
                      MAP_NUM_MVER +  MAP_VEC_FICO(L%,2) - 1 + BMS_NUM_DPZ) = "X" 
         BMS_NUM_DPZ  = 2
         MAP_NUM_FNC  = R_POS
  	 MAP_MAT_SCRN(MAP_VEC_FICO(L%,1)  + MAP_NUM_MHOR,&
                      MAP_NUM_MVER +  MAP_VEC_FICO(L%,2) + BMS_NUM_DPZ) = "-"
         MAP_AUX_IDC$ = ",ATTRB=(PROT,BRT),LENGTH=1,INITIAL='-'"
         MAP_AUX_IDC$ = "         DFHMDF " + MAP_GLS_POS + MAP_AUX_IDC$
 !!!     BMS_NUM_PIC  = MAP_NUM_PICT - 1
         BMS_NUM_DPZ  = 4
   END IF

 !!! Nombre del campo
   IF MAP_SWI_IDC = MAP_CTE_YES THEN
      MAP_GLS_NOMB = MAP_VEC_TIPO(MAP_IND_CMPO + 1) + MAP_VEC_NOMB(MAP_IND_CMPO)
   ELSE
      MAP_GLS_NOMB = MAP_VEC_TIPO(MAP_IND_CMPO) + MAP_VEC_NOMB(MAP_IND_CMPO)
   END IF
   MAP_NUM_FNC = MAP_FNC_NOMB
   CALL MAP_RUT_SPA(MAP_GLS_NOMB,9)
   MAP_GLS_BMS = MAP_GLS_NOMB + "DFHMDF "

 !!! Atributos del campo
   MAP_NUM_FNC = R_POS
   MAP_GLS_BMS = MAP_GLS_BMS + MAP_GLS_POS + ",ATTRB=(ASKIP,"

 !!! Display only ==> intensidad normal
   IF MAP_GLS_DARK <> "DRK" AND&
      MAP_VEC_DSPL(MAP_IND_CMPO) = MAP_CTE_YES THEN
         MAP_GLS_DARK = "BRT"
   END IF
   MAP_GLS_BMS = MAP_GLS_BMS + MAP_GLS_DARK + ",FSET),"
   MAP_GLS_BMS = MAP_GLS_BMS + "LENGTH=" + STR$(BMS_NUM_PIC)
   IF MAP_SWI_VERF = MAP_CTE_YES AND L% = 1 THEN
      MAP_GLS_PIC  = LEFT$(MAP_GLS_PIC,LEN(MAP_GLS_PIC) - 2 )
   END IF
 !!! &&&&
   FOR I% = 1 TO LEN(MAP_GLS_PIC)
     MAP_MAT_SCRN(MAP_VEC_FICO(L%,1) + MAP_NUM_MHOR ,&
                  MAP_NUM_MVER +  MAP_VEC_FICO(L%,2) + BMS_NUM_DPZ + I%-1) =&
	     MID$(MAP_GLS_PIC,I%,1) 
   NEXT I%

 !!! Campo Stopper
   MAP_VEC_TAB(MAP_IND_CMPO) = ",ATTRB=(PROT),LENGTH=1," + MAP_GLS_DLD

 !!!      Campo Sufijo ( Ej: VRF )
   IF MAP_SWI_VERF = MAP_CTE_YES THEN
      BMS_NUM_DPZ  = BMS_NUM_PIC + 1
      MAP_NUM_FNC  =  R_POS
      MAP_AUX_VRF$ = "         DFHMDF " + MAP_GLS_POS
      MAP_AUX_VRF$ = MAP_AUX_VRF$ +&
            ",ATTRB=(PROT,BRT),LENGTH=1,INITIAL='-'"
      MAP_MAT_SCRN(MAP_VEC_FICO(L%,1) + MAP_NUM_MHOR ,&
                   MAP_NUM_MVER +  MAP_VEC_FICO(L%,2) + BMS_NUM_DPZ) = "-"
      BMS_NUM_DPZ  = BMS_NUM_PIC + 1 + 2
      MAP_GLS_NOMB = MAP_VEC_TIPO(MAP_IND_CMPO + 1) + MAP_VEC_NOMB(MAP_IND_CMPO)
      MAP_NUM_FNC = MAP_FNC_NOMB
      CALL MAP_RUT_SPA(MAP_GLS_NOMB,9)
      MAP_GLS_NOMB  = MAP_GLS_NOMB + "DFHMDF "
      MAP_NUM_FNC  = R_POS
      MAP_AUX_VRF$ = MAP_GLS_NOMB + MAP_GLS_POS
      MAP_AUX_VRF$ = MAP_AUX_VRF$ + ",ATTRB=(ASKIP," + MAP_GLS_DARK +&
				"),LENGTH=1"
      MAP_MAT_SCRN(MAP_VEC_FICO(L%,1)  + MAP_NUM_MHOR,&
                   MAP_NUM_MVER +  MAP_VEC_FICO(L%,2) + BMS_NUM_DPZ) = "X"
      BMS_NUM_DPZ  = BMS_NUM_PIC + 2 + 2 + 1
   ELSE
      BMS_NUM_DPZ  = BMS_NUM_PIC + MAP_NUM_NCI + 1
      IF MAP_SWI_IDC = MAP_CTE_YES THEN
          BMS_NUM_DPZ = BMS_NUM_DPZ + 2
      END IF
   END IF

  IF MAP_VEC_DSPL(MAP_IND_CMPO) = MAP_CTE_NOT THEN
 !!!      BMS_NUM_DPZ = BMS_NUM_DPZ + 1
      BMS_NUM_DPZ = BMS_NUM_DPZ
      MAP_NUM_FNC = R_POS
      MAP_GLS_BMS = "         DFHMDF "
      MAP_GLS_BMS = MAP_GLS_BMS + MAP_GLS_POS +&
         MAP_VEC_TAB(MAP_IND_CMPO)
      MAP_MAT_SCRN(MAP_VEC_FICO(L%,1)  + MAP_NUM_MHOR,&
                   MAP_NUM_MVER +  MAP_VEC_FICO(L%,2) + BMS_NUM_DPZ) =&
      MAP_GLS_DLD
   END IF

   END DEF
 !====================== FIELD ======================
940
   DEF INTEGER MAP_FNC_FLD
   MAP_NUM_CORR = 0
   OVR_NUM_ADI = 5
   MAP_GLS_HLP = ""
   MAP_SWI_FECH = MAP_CTE_NOT
   MAP_SWI_GLOS = MAP_CTE_NOT
   MAP_GLS_DARK = "NORM"
   MAP_SWI_IDC = MAP_CTE_NOT
   MAP_SWI_VERF = MAP_CTE_NOT
   MAP_SWI_CFRM = MAP_CTE_NOT
   ACT_INDEX = MAP_CTE_NOT

   MAP_NUM_ASC = MAP_NUM_BAS
   MAP_NUM_BAS = MAP_NUM_BAS + 1
   TOKEN = NEXTTOKEN
   IF VALTOKEN <> "NAME" THEN
      GO TO FLD_LAB_FLD
   END IF
   TOKEN = NEXTTOKEN
   TOKEN = NEXTTOKEN
   MAP_GLS_CMP = STRTOKEN
   MAP_NUM_FNC = MAP_FNC_UND

   TOKEN = NEXTTOKEN
   TOKEN = NEXTTOKEN
   MAP_VEC_FICO(1,1) = NUMTOKEN
   FILA_CMPO = NUMTOKEN
   MAP_VEC_TFIC(FILA_CMPO) = MAP_VEC_TFIC(FILA_CMPO) + 1
   IF MAP_SWI_VERF = MAP_CTE_YES THEN
	   MAP_VEC_TFIC(FILA_CMPO) = MAP_VEC_TFIC(FILA_CMPO) + 1
   ELSE
   IF MAP_SWI_IDC = MAP_CTE_YES THEN
	   MAP_VEC_TFIC(FILA_CMPO) = MAP_VEC_TFIC(FILA_CMPO) + 1
   END IF
   END IF
   MAP_VEC_POSI(MAP_IND_CMPO,1) = NUMTOKEN + MAP_NUM_INFE - 1
   OVR_NUM_FIL = NUMTOKEN
   IF MAP_SWI_PFLD = MAP_CTE_NOT THEN
      MAP_SWI_PFLD = MAP_CTE_YES
 !!!      MAP_NUM_INFE = MAP_VEC_FICO(1,1)
   END IF

   TOKEN = NEXTTOKEN
   TOKEN = NEXTTOKEN
   MAP_VEC_FICO(1,2) = NUMTOKEN
   MAP_VEC_POSI(MAP_IND_CMPO,2) = NUMTOKEN
   OVR_NUM_COL = NUMTOKEN - 3
   
   TOKEN = NEXTTOKEN
   TOKEN = NEXTTOKEN
950
   IF VALTOKEN = 'PICTURE' THEN
 !      IF MAP_SWI_VERF = MAP_CTE_YES THEN
 !         TOKEN = NEXTTOKEN
 !         TOKEN = NEXTTOKEN
 !         MAP_NUM_PICT = LEN(STRTOKEN) - 1
 !         TOKEN = NEXTTOKEN
 !      ELSE
           MAP_NUM_FNC = MAP_FNC_PIC
 !      END IF
 !!!      END IF
    END IF
   IF VALTOKEN = 'INDEX' THEN
      TOKEN = NEXTTOKEN
      MAP_NUM_FNC = MAP_FNC_IDX
   ELSE
      MAP_TOT_CIDX = 1
   END IF
   IF VALTOKEN = 'HELP' THEN
      MAP_NUM_FNC = MAP_FNC_HLP
   END IF
960
   WHILE VALTOKEN <> ";"
      IF VALTOKEN = "NOECHO" THEN
	 MAP_GLS_DARK = "DRK"
         MAP_VEC_BYA(MAP_IND_CMPO) = 3
         IF MAP_SWI_VERF = MAP_CTE_YES THEN
            MAP_VEC_BYA(MAP_TOT_CMPO+1) = 3
         END IF
 !!!  ISP: 27-JUN-1996 13:18:25  DE ESTA FORMA MUESTRA LOS CAMPOS DRK
	 MAP_GLS_DARK = "NORM"
         MAP_VEC_BYA(MAP_IND_CMPO) = 1
         IF MAP_SWI_VERF = MAP_CTE_YES THEN
            MAP_VEC_BYA(MAP_TOT_CMPO+1) = 1
         END IF
      ELSE
      IF VALTOKEN = "DISPLAY_ONLY" THEN
         MAP_VEC_DSPL(MAP_IND_CMPO) = MAP_CTE_YES
         MAP_VEC_PROT(MAP_IND_CMPO) = MAP_CTE_NOT
         OVR_NUM_ADI = OVR_NUM_ADI - 4
         OVR_NUM_COL = OVR_NUM_COL + 2
      ELSE
      IF VALTOKEN = "AUTOTAB" THEN
         MAP_VEC_TAB(MAP_IND_CMPO) =&
            ",ATTRB=(PROT,ASKIP),LENGTH=1,"
      ELSE
      IF VALTOKEN = "RESPONSE_REQUIRED" THEN
         MAP_VEC_OBLI(MAP_IND_CMPO) = "N"

      END IF
      END IF
      END IF
      END IF
      TOKEN = NEXTTOKEN
   NEXT
 	IF MAP_GLS_DARK = "DRK" THEN
 		GO TO FLD_LAB_FLD
 	END IF
   IF MAP_SWI_FECH = MAP_CTE_YES THEN
      MAP_NUM_FNC = MAP_FNC_FEC
   ELSE
   IF MAP_SWI_VERF = MAP_CTE_YES THEN
      MAP_NUM_FNC = MAP_FNC_VRF
   ELSE
   IF MAP_SWI_IDC = MAP_CTE_YES THEN
      MAP_NUM_FNC = MAP_FNC_IDC
   END IF
   END IF
   END IF
   MAP_NUM_LINE = MAP_VEC_FICO(1,1)
   MAP_NUM_COLU = MAP_VEC_FICO(1,2)
   MAP_NUM_FNC = MAP_FNC_TXT

 !!! Setea valores para funcion del BMS
   BMS_NUM_PIC = MAP_NUM_PICT
   IF MAP_SWI_VERF = MAP_CTE_YES THEN
      BMS_NUM_PIC = MAP_NUM_PICT - 1
   END IF

 !!! Area_total_campo = Delm_izq + attrb_byte + pic_campo   + delm_izq
   MAP_NUM_VSZ =    2        + 1          + BMS_NUM_PIC + 2

   MAP_NUM_FNC = MAP_FNC_OVR
   FOR L% = 1 TO MAP_TOT_CIDX
 !!! Setea fila-columna para el sort
      BMS_NUM_COL =  MAP_VEC_FICO(L%,2)
      MAP_NUM_LINE = MAP_VEC_FICO(L%,1)
      MAP_NUM_COLU = MAP_VEC_FICO(L%,2)

 !!! FILA DEL CAMPO

      MAP_GLS_FIL = STR$(MAP_VEC_FICO(L%,1) - MAP_NUM_INFE + 1 )
      IF LEN(MAP_GLS_FIL) = 1 THEN
         MAP_GLS_FIL = "0" + MAP_GLS_FIL
      END IF

      MAP_GLS_COL = STR$(MAP_VEC_FICO(L%,2) )
      IF LEN(MAP_GLS_COL) = 1 THEN
         MAP_GLS_COL = "0" + MAP_GLS_COL
      END IF

 !!!      MAP_NUM_FNC = MAP_FNC_VAL
      MAP_NUM_FNC = MAP_FNC_BMS
   NEXT L%

 FLD_LAB_FLD:
   END DEF
962

 ! Validacion de Campos No Indexados
 !
   DEF INTEGER GEN_FNC_VCNI
        CALL PUT_GEN(MG_B,"PERFORM VAL-" + MAP_VEC_NRTN(I%) + ".")
   CALL PUT_GEN(MG_B,"IF FRM-SUAR = " +&
         " FRM-SUAR-MAL OR FRM-SUAR = FRM-SUAR-CLR")
   CALL PUT_GEN(MG_1,"MOVE -1 TO " +&
         MAP_VEC_NRTN(I%) + "-LEN" + MAP_GLS_DFL)
   CALL PUT_GEN(MG_1, "GO TO FIN-VAL-FLD-" + MAP_GLS_MAPA + ".")
   END DEF

 ! Validacion de Campos Indexados
 !
965
   DEF INTEGER GEN_FNC_VCSI
     CALL PUT_GEN(MG_B,"PERFORM VAL-" + MAP_VEC_NRTN(I%) )
     CALL PUT_GEN(MG_B," VARYING FRM-IFLD FROM 1 BY 1 UNTIL FRM-IFLD > " +&
          STR$(MAP_VEC_TIDX(I%)) )
     CALL PUT_GEN(MG_B,"     OR FRM-SUAR = FRM-SUAR-MAL" )
     CALL PUT_GEN(MG_B,"     OR FRM-SUAR = FRM-SUAR-CLR.")
     CALL PUT_GEN(MG_B,"IF FRM-SUAR = " +&
         "FRM-SUAR-MAL OR FRM-SUAR = FRM-SUAR-CLR" )
     CALL PUT_GEN(MG_1,"SUBTRACT 1 FROM FRM-IFLD")
     CALL PUT_GEN(MG_1,"MOVE -1 TO " + MAP_VEC_NRTN(I%) +&
         "-LEN" + MAP_GLS_DFL + "(FRM-IFLD)" )
     CALL PUT_GEN(MG_1,"GO TO FIN-VAL-FLD-" + MAP_GLS_MAPA + ".")
   END DEF

970

   DEF INTEGER MAP_FNC_COD
   FOR I% = 1 TO MAP_TOT_CMPO
	IF MAP_VEC_TIPO(I%) = "COD" OR &
           MAP_VEC_TCMP(I%) = "COD" THEN
                MAP_VEC_VAUT(I%) = MAP_NUM_CODI 
		FOR J% = 1 TO MAP_TOT_CMPO
		  IF MAP_VEC_TIPO(J%) = "GLS" AND&
		     MAP_VEC_NOMB(J%) = MAP_VEC_NOMB(I%) THEN
			MAP_VEC_GLOS(I%) = J%
			J% = MAP_TOT_CMPO + 1
		  END IF
	 	NEXT J%
	ELSE
	IF MAP_VEC_TIPO(I%) = "IND" OR&
           MAP_VEC_TIPO(I%) = "MSC" THEN
                MAP_VEC_VAUT(I%) = MAP_NUM_MISC
		FOR J% = 1 TO MAP_TOT_CMPO
		  IF MAP_VEC_TIPO(J%) = "GLS" AND&
		     MAP_VEC_NOMB(J%) = MAP_VEC_NOMB(I%) THEN
			MAP_VEC_GLOS(I%) = J%
			J% = MAP_TOT_CMPO + 1
		  END IF
	 	NEXT J%
	END IF
	END IF
   NEXT I%
   END DEF


   DEF INTEGER MAP_FNC_VCOD
     IF MAP_GLS_VCOD <> "NO" THEN
        CALL PUT_GEN(MG_N,'*% SIS = "' + DMN::DMN_COD_SIST + '"')
        CALL PUT_GEN(MG_N,'*% TAB = "' + LEFT$(DMN::DMN_COD_TABL,3) + '"')
        CALL PUT_GEN(MG_N,'*% FLD = "' + MAP_VEC_NRTN(MAP_NUM_ICOD) + '"')
        CALL PUT_GEN(MG_N,'*% BUF = "' + MAP_GLS_MAPA + '-FLD"')
        CALL PUT_GEN(MG_N,'*% GLS = "' +MAP_VEC_NRTN(MAP_VEC_GLOS(MAP_NUM_ICOD)) + '"')
        CALL PUT_GEN(MG_N,'*% TIENE_GLOSA = ' + MAP_GLS_GCOD )
        CALL PUT_GEN(MG_N,'*% LGL = ' + STR$( MAP_VEC_LGLS(MAP_VEC_GLOS(MAP_NUM_ICOD)) ) )
        CALL PUT_GEN(MG_N,"*% INCLUDE '" + MAP_GLS_VCOD + "'")
     END IF
   END DEF

   DEF INTEGER MAP_FNC_VIND
     IF MAP_GLS_VIND <> "NO" THEN
        CALL PUT_GEN(MG_N,'*% SIS = "' + DMN::DMN_COD_SIST + '"')
  !JSS  CALL PUT_GEN(MG_N,'*% MSC = "' + DMN::DMN_COD_TABL + '"')
        CALL PUT_GEN(MG_N,'*% TAB = "' + DMN::DMN_COD_TABL + '"')
  !
        CALL PUT_GEN(MG_N,'*% FLD = "' + MAP_VEC_NRTN(MAP_NUM_IIND) + '"')
        CALL PUT_GEN(MG_N,'*% BUF = "' + MAP_GLS_MAPA + '-FLD"')
        CALL PUT_GEN(MG_N,'*% GLS = "' + MAP_VEC_NRTN(MAP_VEC_GLOS(MAP_NUM_IIND)) + '"' )
        CALL PUT_GEN(MG_N,'*% TIENE_GLOSA = ' + MAP_GLS_GIND )
        CALL PUT_GEN(MG_N,'*% LGL = ' + STR$( MAP_VEC_LGLS(MAP_VEC_GLOS(MAP_NUM_IIND)) ) )
        CALL PUT_GEN(MG_N,"*% INCLUDE '" + MAP_GLS_VIND + "'")
     END IF
   END DEF


 !!!   FUNCIONES MODULO DE MANEJO
 !!!   ==========================

   DEF INTEGER GEN_PUT_HDR
	PRINT #MAP_CNL_AUX%,"  "
	PRINT #MAP_CNL_AUX%,""
	LEN_HFOR% = 66 - LEN(MAP_GLS_HFOR) / 2
	PRINT #MAP_CNL_AUX%,MAP_VEC_BLKS(LEN_HFOR%) + MAP_GLS_HFOR
	PRINT #MAP_CNL_AUX%,""

	PRINT #MAP_CNL_AUX%,"-------------------------------------------" +&
			    "-------------------------------------------" +&
			    "----------------------------------------------"

	PRINT #MAP_CNL_AUX%," Fila Col Nombre                   Solo   Oblig Sistema  Tabla  Parrafo         Parrafo         Tipo  Descripcion"
	PRINT #MAP_CNL_AUX%,"          campo                    desp                         Validacion      Busqueda        Llave"

	PRINT #MAP_CNL_AUX%,"-------------------------------------------" +&
			    "-------------------------------------------" +&
			    "----------------------------------------------"
	PRINT #MAP_CNL_AUX%,""
	PRINT #MAP_CNL_AUX%,""
	MAP_TOT_LINE = 12

   END DEF

   DEF INTEGER MAP_PUT_AUX
	PRINT #MAP_CNL_AUX%,MAP_GLS_AUX
	MAP_TOT_LINE = MAP_TOT_LINE + 1
	IF MAP_TOT_LINE > 57 THEN
		MAP_NUM_FNC = GEN_PUT_HDR
	END IF
   END DEF

   DEF INTEGER MAP_FNC_GRCR
        RCR::RCR_COD_RECO = MAP_VEC_REGI(J%) + "-" +&
		MAP_VEC_TIPO(J%) + "-" + MAP_VEC_NOMB(J%)
        FIO_CMND = "GET_KEY             "
        CALL "GNSFIORCR" BY REF (FIO_CMND)
   END DEF

   DEF INTEGER MAP_FNC_GDMN
        DMN::DMN_COD_DOMI = RCR::RCR_COD_DOMI
        FIO_CMND = "GET_KEY             "
        CALL "GNSFIODMN" BY REF (FIO_CMND)
   END DEF

   DEF INTEGER MAP_FNC_VALI
        RCR::RCR_COD_RECO = "                                "
        RCR::RCR_COD_DOMI = "                                "
        RCR::RCR_COD_SIST = "   "
        RCR::RCR_COD_REGI = "   "
        RCR::RCR_GLS_FIMP = "                    "
        RCR::RCR_GLS_DISP = "                                                                    "

        DMN::DMN_COD_DOMI = "                                "
        DMN::DMN_COD_SIST = "   "
        DMN::DMN_COD_REGI = "   "
        DMN::DMN_COD_TABL = "    "
        DMN::DMN_COD_TIPO = " "
        DMN::DMN_MSC_FMTO = " "
        DMN::DMN_NUM_LARG = "   "
        DMN::DMN_GLS_FIMP = "                    "
        DMN::DMN_GLS_VALI = "                "
        DMN::DMN_GLS_BUSQ = "                "
        DMN::DMN_GLS_DISP = "                                                           "
	IF MAP_VEC_VAUT(J%) <> MAP_CTE_NOT THEN
 !!!           MAP_VEC_DSPL(J%) = MAP_CTE_NOT THEN
            MAP_NUM_FNC = MAP_FNC_GRCR
            IF FIO_STAT = FIO_STAT_OKS THEN
                MAP_NUM_FNC = MAP_FNC_GDMN
                IF FIO_STAT = FIO_STAT_OKS THEN
                       IF MAP_VEC_VAUT(J%) = MAP_NUM_CODI THEN
                           IF DMN::DMN_GLS_VALI <= " " OR &
			      DMN::DMN_GLS_VALI  = "VALCOD" THEN
                               MAP_GLS_VCOD = 'VALCOD'
                           ELSE
                               MAP_GLS_VCOD = DMN::DMN_GLS_VALI
                           END IF
                           IF MAP_VEC_GLOS(J%) > 0 THEN
                               MAP_GLS_GCOD = 'TRUE'
                           ELSE
                               MAP_GLS_GCOD = 'FALSE'
                           END IF
			   MAP_NUM_ICOD = J%
 !!!                           MAP_NUM_FNC = MAP_FNC_VCOD
                       ELSE
                           IF DMN::DMN_GLS_VALI <= " " OR &
                              DMN::DMN_GLS_VALI  = "VALIND" THEN
                               MAP_GLS_VCOD = 'VALIND'
                           ELSE
                               MAP_GLS_VCOD = DMN::DMN_GLS_VALI
                           END IF
                           IF MAP_VEC_GLOS(J%) > 0 THEN
                               MAP_GLS_GIND = 'TRUE'
                           ELSE
                               MAP_GLS_GIND = 'FALSE'
                           END IF
			   MAP_NUM_IIND = J%
 !!!                           MAP_NUM_FNC = MAP_FNC_VIND
                	END IF
			IF DMN::DMN_GLS_BUSQ <= " " OR &
			   DMN::DMN_GLS_BUSQ  = "BUSTAB" THEN
				MAP_GLS_BCOD = 'BUSTAB'
			ELSE
				MAP_GLS_BCOD = DMN::DMN_GLS_BUSQ
			END IF
			MAP_NUM_ICOD = J%
 !!!			MAP_NUM_FNC = MAP_FNC_VCOD
			IF MAP_VEC_VAUT(J%) = MAP_NUM_MISC THEN
				IF DMN::DMN_GLS_BUSQ <= " " OR &
				   DMN::DMN_GLS_BUSQ  = "BUSMSC" THEN
					MAP_GLS_BCOD = 'BUSMSC'
				ELSE
					MAP_GLS_BCOD = DMN::DMN_GLS_BUSQ 
				END IF
				MAP_GLS_GIND = 'TRUE'
				MAP_NUM_IIND = J%
 !!!				MAP_NUM_FNC = MAP_FNC_VIND
			END IF
                    END IF
                END IF
            END IF

   END DEF

   DEF INTEGER MAP_GET_ATR
	IF MAP_VEC_POSI(J%,1) < 1 THEN
	    GO TO FIN_GET_ATR
	END IF
	MAP_NUM_FNC = MAP_FNC_VALI
	IF MAP_VEC_POSI(J%,1) < 10 THEN
	    MAP_GLS_FILA$ = " " + STR$(MAP_VEC_POSI(J%,1) )
	ELSE
	    MAP_GLS_FILA$ = STR$(MAP_VEC_POSI(J%,1) )
	END IF

	IF MAP_VEC_POSI(J%,2) < 10 THEN
	    MAP_GLS_COLU$ = "  " + STR$(MAP_VEC_POSI(J%,2) )
	ELSE
	IF MAP_VEC_POSI(J%,2) < 100 THEN
	    MAP_GLS_COLU$ = " " + STR$(MAP_VEC_POSI(J%,2) )
	ELSE
	    MAP_GLS_COLU$ = STR$(MAP_VEC_POSI(J%,2) )
	END IF
	END IF
	MAP_ACT_FILA$ = MAP_GLS_FILA$

	IF MAP_ANT_FILA$ <> MAP_ACT_FILA$ THEN
		MAP_GLS_AUX = ""
		MAP_NUM_FNC = MAP_PUT_AUX
		MAP_ANT_FILA$ = MAP_ACT_FILA$
	ELSE
		MAP_GLS_FILA$ = "  "
	END IF 
	IF MAP_VEC_DSPL(J%) = MAP_CTE_YES THEN
		MAP_GLS_DSPL$ = "S      "
	ELSE
		MAP_GLS_DSPL$ = "N      "
	END IF
	IF MAP_VEC_OBLI(J%) = "S" THEN
		MAP_GLS_OBLI$ = "N   "
	ELSE
		MAP_GLS_OBLI$ = "S   "
	END IF
	IF MAP_VEC_DSPL(J%) = MAP_CTE_YES THEN
		MAP_GLS_VCOD = ""
	END IF
	LEN_NTRN% = LEN(MAP_VEC_NRTN(J%))
        IF MAP_VEC_FLD_GAR(J%) <> "" THEN
		ATR_GLS_NRTN$ = MAP_VEC_FLD_GAR(J%) + MAP_VEC_BLKS( 30 - LEN_NTRN% )
	ELSE
		ATR_GLS_NRTN$ = MAP_VEC_NRTN(J%) + MAP_VEC_BLKS( 30 - LEN_NTRN% )
	END IF

	ATR_GLS_NRTN$ = LEFT$(ATR_GLS_NRTN$,26)
	
	LEN_SIST% = LEN(DMN::DMN_COD_SIST)
	ATR_GLS_SIST$ = DMN::DMN_COD_SIST + MAP_VEC_BLKS( 4 - LEN_SIST% )
	LEN_TABL% = LEN(DMN::DMN_COD_TABL)
	ATR_GLS_TABL$ = DMN::DMN_COD_TABL +  MAP_VEC_BLKS( 6 - LEN_TABL% )
	LEN_VCOD% = LEN(MAP_GLS_VCOD)
	MAP_GLS_VCOD = MAP_GLS_VCOD + MAP_VEC_BLKS( 17 - LEN_VCOD% )
	LEN_BCOD% = LEN(MAP_GLS_BCOD)
	MAP_GLS_BCOD = MAP_GLS_BCOD + MAP_VEC_BLKS( 17 - LEN_BCOD% )
	MAP_GLS_HLP  = LEFT$(MAP_VEC_HLP(J%),35)
	MAP_GLS_AUX = " " + MAP_GLS_FILA$ + "   " + &
		MAP_GLS_COLU$ + " " + ATR_GLS_NRTN$  + &
		MAP_GLS_DSPL$ + " " + &
		MAP_GLS_OBLI$ + " " +&
	 	ATR_GLS_SIST$  + "     " +  ATR_GLS_TABL$ + " " + &
	        " " + MAP_GLS_VCOD + MAP_GLS_BCOD + MAP_VEC_KEY(J%) + MAP_GLS_HLP
	MAP_NUM_FNC = MAP_PUT_AUX
 FIN_GET_ATR:
	
   END DEF

   DEF INTEGER GEN_PUT_ALL
	FOR J% = 1 TO MAP_TOT_CMPO
		MAP_GLS_VCOD = ""
		MAP_GLS_BCOD = ""
		IF MAP_VEC_BYA(J%) <> 3 THEN
			MAP_NUM_FNC = MAP_GET_ATR
		END IF
	NEXT J%
   END DEF

   DEF INTEGER MAP_FNC_GEN
 ! >> PUT
	MAP_NUM_FNC = GEN_PUT_HDR
 !!!	MAP_TOT_LINE = 45
	MAP_NUM_FNC = GEN_PUT_ALL

	MAP_GLS_AUX = ""
	MAP_NUM_FNC = MAP_PUT_AUX
   END DEF

 !====================== FINALIZACION ======================

 !!!   DEF INTEGER MAP_FNC_FIN

 !!!   WBMS_NUM_SOR = 0
 !!!   MAP_NUM_LINE = 0
 !!!   MAP_NUM_COLU = 0
 !!!   MAP_GLS_WRIT = MAP_FNC_WBMS("         PRINT NOGEN")
 !!!   MAP_GLS_WRIT = MAP_GLS_PROY + "A" + MAP_GLS_MAPA +&
 !!!         MAP_VEC_BLK(LEN(MAP_GLS_PROY + MAP_GLS_MAPA) + 1 ) +&
 !!!        "DFHMSD TYPE=&SYSPARM,TERM=3270,MODE=INOUT,LANG=COBOL,"
 !!!   CALL MAP_RUT_SPA(MAP_GLS_WRIT,71)
 !!!   MAP_GLS_WRIT = MAP_GLS_WRIT + "X"
 !!!   MAP_GLS_WRIT = MAP_FNC_WBMS(MAP_GLS_WRIT)
 !!!   MAP_GLS_WRIT = "               TIOAPFX=YES"
 !!!   MAP_GLS_WRIT = MAP_FNC_WBMS(MAP_GLS_WRIT)
 !!!        MAP_GLS_WRIT = MAP_GLS_PROY + "F" + MAP_GLS_MAPA +&
 !!!         MAP_VEC_BLK(LEN(MAP_GLS_PROY + MAP_GLS_MAPA) + 1 ) +&
 !!!         "DFHMDI SIZE=(" + STR$(MAP_NUM_SUPE -&
 !!!            MAP_NUM_INFE + 1 ) + ",80),LINE=" + STR$(MAP_NUM_INFE) +&
 !!!            ",COLUMN=1,CTRL=(FREEKB)"
 !!!   MAP_GLS_WRIT = MAP_FNC_WBMS(MAP_GLS_WRIT)
 
 !!!   WBMS_NUM_SOR = 5
 !!!   MAP_GLS_WRIT = "SCRMENS  DFHMDF POS=(" + STR$(24 - MAP_NUM_INFE + 1) +&
 !!!         ",01),ATTRB=(ASKIP,BRT),LENGTH=79,"
 !!!   CALL MAP_RUT_SPA(MAP_GLS_WRIT,71)
 !!!   MAP_GLS_WRIT = MAP_GLS_WRIT + "X"
 !!!   MAP_GLS_WRIT = MAP_FNC_WBMS(MAP_GLS_WRIT)
 !!!   MAP_GLS_WRIT = "               INITIAL=' '"
 !!!   MAP_GLS_WRIT = MAP_FNC_WBMS(MAP_GLS_WRIT)
 !!!   MAP_GLS_WRIT = "         DFHMSD TYPE=FINAL"
 !!!   MAP_GLS_WRIT = MAP_FNC_WBMS(MAP_GLS_WRIT)
 !!!   MAP_GLS_WRIT = "         END"
 !!!   MAP_GLS_WRIT = MAP_FNC_WBMS(MAP_GLS_WRIT)
 !!!   WTXT_NUM_SOR = 7
 !!!   MAP_GLS_TXT = MAP_FNC_WTXT(V_ANSI(MG_C) + " ")
 !!!   MAP_GLS_TXT = MAP_FNC_WTXT("      * Linea de Mensajes")
 !!!   MAP_GLS_TXT = MAP_FNC_WTXT(V_ANSI(MG_B) + "05 " + MAP_GLS_MAPA +&
 !!!         "-GLS-MENS-LEN       COMP   PIC S9(04).")
 !!!   MAP_GLS_TXT = MAP_FNC_WTXT(V_ANSI(MG_B) + "05 " + MAP_GLS_MAPA +&
 !!!         "-GLS-MENS-ATR              PIC  X(01).")
 !!!   MAP_GLS_TXT = MAP_FNC_WTXT(V_ANSI(MG_B) + "05 " + MAP_GLS_MAPA +&
 !!!         "-GLS-MENS.")
 !!!   MAP_GLS_TXT = MAP_FNC_WTXT(V_ANSI(MG_B) + "   07 " + MAP_GLS_MAPA +&
 !!!            "-GLS-MEN1               PIC  X(40).")
 !!!   MAP_GLS_TXT = MAP_FNC_WTXT(V_ANSI(MG_B) + "   07 " + MAP_GLS_MAPA +&
 !!!            "-GLS-MEN2               PIC  X(39).")
 !!!   END DEF

 !---------------------------- MODULO PRINCIPAL --------------------------------



 !!!   ON ERROR GO TO MAP_LAB_BAD
   MAP_NUM_FNC = MAP_FNC_INI
   MAP_NUM_FNC = MAP_FNC_FOR
   MAP_NUM_FNC = MAP_FNC_ATC

 LABE_SCRS:
   WBMS_NUM_SOR = 3
      
   WHILE TOKEN <> ETXTOK    
      IF VALTOKEN = "TEXT" THEN
         MAP_NUM_FNC = MAP_FNC_TEX
      ELSE
      IF VALTOKEN = "FIELD" THEN
         MAP_NUM_FNC = MAP_FNC_FLD
      END IF
      END IF
      TOKEN = NEXTTOKEN
   NEXT

   MAP_MAT_SCRN(1 , 116) = "Primer - Ultimo" 
   MAP_MAT_SCRN(2 , 116) = "campo de cada" 
   MAP_MAT_SCRN(3 , 116) = "fila" 

990

   CPO% = 0
   FOR I% = 4 TO 27

991
	 QQ% = MAP_VEC_TFIC(I% - 3)
	 IF QQ% > 0 THEN 
		UN_SOLO_CMPO_EN_LINEA$ = "N"
		IF QQ% = 1 THEN
			UN_SOLO_CMPO_EN_LINEA$ = "S"
		END IF
		II% = 114
	 	FOR Q% = 1 TO QQ%
 !!! ESTA PREGUNTA IMPRIME SOLO PRIMER Y ULTIMO CAMPO DE LINEA
			CPO% = CPO% + 1
			IF Q% = 1 OR Q% = QQ% THEN
	       		  	IF CPO% < 10 THEN
					CMPO$ = "00" + STR$(CPO%)
				ELSE
	       		  	IF CPO% < 100 THEN
					CMPO$ = "0" + STR$(CPO%)
				ELSE
					CMPO$ = STR$(CPO%)
				END IF
				END IF
	       	  		MAP_MAT_SCRN(I% , II%) = CMPO$
				IF (Q% <> QQ% OR QQ% = 1 ) THEN 
		       	  		MAP_MAT_SCRN(I% , II% + 1) = " - " 
				END IF
				IF UN_SOLO_CMPO_EN_LINEA$ = "S" THEN
					II% = II% + 2
					MAP_MAT_SCRN(I% , II%) =  CMPO$
				END IF
			II% = II% + 2
			END IF
		NEXT Q%
	 END IF
   NEXT I%
995

 !!!   FOR YY% = 1 TO 24
 !!!	   PRINT " EN FILA " ; YY% ; "EXISTEN " ; MAP_VEC_TFIC(YY%) ; " CAMPOS "
 !!!   NEXT YY%

 !!!   MAP_NUM_FNC = MAP_FNC_FIN
       MAP_NUM_FNC = MAP_FNC_COD
   
 !!!   IF MAP_GLS_MAT = "VSAM" THEN
 !!!      GO TO LABE_CONT
 !!!   END IF
   MAP_CNL_AUX% = 8
   MAP_FIL_AUX$ = MAP_GLS_PROY + "F" + MAP_GLS_MAPA + ".DOC"
   OPEN MAP_FIL_AUX$ FOR OUTPUT AS FILE #MAP_CNL_AUX%,RECORDTYPE ANY, &
      ORGANIZATION SEQUENTIAL VARIABLE,   RECORDSIZE 255

	MAP_GLS_AUX =  ""
	MAP_NUM_FNC = MAP_PUT_AUX

	MAP_GLS_AUX =   "  " + MAP_GLS_IDEN
	MAP_NUM_FNC = MAP_PUT_AUX

	LEN_HFOR% = 66 - LEN(MAP_GLS_HFOR) / 2
	MAP_GLS_AUX =  MAP_VEC_BLKS(LEN_HFOR%) + MAP_GLS_HFOR
	MAP_NUM_FNC = MAP_PUT_AUX

	MAP_GLS_AUX =  ""
	MAP_NUM_FNC = MAP_PUT_AUX

	MAP_GLS_AUX =  ""
	MAP_NUM_FNC = MAP_PUT_AUX

   FOR I% = 1 TO 30
	VARI_AUXI$ = ""
	FOR J% = 10 TO 132
		VARI_AUXI$ = VARI_AUXI$ + MAP_MAT_SCRN(I%,J%)
	NEXT J%
	MAP_GLS_AUX = VARI_AUXI$
	MAP_NUM_FNC = MAP_PUT_AUX
   NEXT I%

 LABE_CONT:
   IF MAP_SWI_ERRO = MAP_CTE_YES THEN
      PRINT ""
   END IF
	MAP_NUM_FNC = MAP_FNC_GEN
   CALL LIB$SET_SYMBOL('FRM',MAP_FIL_AUX$)

   GO TO LABE_ATRA
   
 MAP_LAB_BAD:
   PRINT MAP_ASC_BEL,MAP_ASC_BEL
   PRINT "Error(";ERR;") ";ERT$(ERR);" en linea ";erl; ", Modulo ";ern$
   IF ERR = 2 THEN
      PRINT MAP_FIL_FLG,FILE_WSS, " : Nombre de archivo ilegal"
   ELSE 
   IF ERR = 5 THEN
      PRINT MAP_FIL_FLG,FILE_WSS, " Archivo inexistente       "
   ELSE
   IF ERR = 55 THEN
      PRINT " Indice fuera de rango "
   END IF
   END IF
   RESUME 999
999
 LABE_ATRA:
 END
1300   SUB MAP_RUT_SPA(STRING SPA_GLS_STR BY DESC,REAL SPA_NUM_LMT BY REF)
      WHILE LEN(SPA_GLS_STR) < SPA_NUM_LMT
         SPA_GLS_STR = SPA_GLS_STR + " "
      NEXT
   END SUB

1400   SUB MAP_RUT_PIC(STRING PIC_GLS_PIC BY DESC)
      PIC_SWI_ALL$ = "YES"
      PIC_I% = 1
      PIC_J% = LEN(PIC_GLS_PIC)
      PIC_0$ = ""
      IF PIC_J% < 10 THEN
         PIC_0$ = "0"
      END IF
      PIC_GLS_FST$ = LEFT$(PIC_GLS_PIC,1)
      WHILE PIC_I% <= PIC_J%
         IF MID$(PIC_GLS_PIC,PIC_I%,1) <> PIC_GLS_FST$ THEN
            PIC_SWI_ALL$ = "NOT"
            PIC_I% = PIC_J% + 1
         END IF
         PIC_I% = PIC_I% + 1
      NEXT
      IF PIC_SWI_ALL$ = "YES" THEN
         PIC_GLS_PIC = PIC_GLS_FST$ + "(" +&
                  PIC_0$ + STR$(PIC_J%) + ")"
      END IF
   END SUB

1600   SUB PUT_GEN(INTEGER MARGEN, STRING REGISTRO BY DESC)
      DECLARE STRING REG_GEN   , V_ANSI(6)
      DECLARE INTEGER   CONSTANT          &
         MG_C       =  1,   MG_A       =  2,&
         MG_B       =  3,   MG_1       =  4,&
         MG_2       =  5,   MG_N       =  6
      V_ANSI(MG_C) = "      "
      V_ANSI(MG_A) = "       "
      V_ANSI(MG_B) = "           "
      V_ANSI(MG_1) = "                "
      V_ANSI(MG_2) = "                   "
      V_ANSI(MG_N) = ""
      REG_GEN = V_ANSI(MARGEN) + REGISTRO
      IF LEN(REG_GEN) > 72 THEN
         GEN_I% = 1
         GEN_J% = 3
         WHILE MID$(REG_GEN,GEN_I%,4) <> " TO " AND &
               GEN_I% < LEN(REG_GEN) 
            GEN_I% = GEN_I% + 1
         NEXT
         IF GEN_I% > 72 THEN
            GEN_I% = 71
            GEN_J% = 0
            WHILE MID$(REG_GEN,GEN_I%,1) <> " "
               GEN_I% = GEN_I% - 1
            NEXT
         END IF
         PRINT #3,LEFT$(REG_GEN,GEN_I% + GEN_J%)
         PRINT #3,V_ANSI(MG_1) + RIGHT$(REG_GEN,GEN_I% + 1 +&
                     GEN_J%)
      ELSE
         PRINT #3,REG_GEN
      END IF
   END SUB



1700   SUB GENRPTMAN (STRING STRG BY DESC,STRING MANT)
 !
 !  Esta subrutina  recibe en el primer parametro (STRG) la variable a
 !  modificar y mantiene en ella solo aquellos caracteres que aparecen 
 !  en el segundo parametro (MANT)
 !  Ejemplo:
 !   Si PICT_FILD tiene '99.999.999,99' despues de un
 !      CALL GENRPTMAN(PICT_FILD,"9,") 
 !      PICT_FILD tiene '99999999,99'
 !
   DECLARE      INTEGER      SIZE_STRG
   DECLARE      INTEGER      SIZE_MANT
   DECLARE      STRING      VARI_AUXI
   DECLARE      STRING      VARI_MIDD

   SIZE_STRG = LEN(STRG) 
   SIZE_MANT = LEN(MANT)
   VARI_AUXI = ""
   FOR I% = 1 TO SIZE_STRG
      VARI_MIDD = MID$(STRG,I%,1) 
      FOR J% = 1 TO SIZE_MANT
         IF MID$(MANT,J%,1) = VARI_MIDD THEN
             VARI_AUXI = VARI_AUXI + VARI_MIDD 
         END IF
      NEXT J%
   NEXT I%
   STRG = VARI_AUXI
   END SUB



1800   SUB GENRPTREP (STRING ESTR_INGS BY DESC, STRING CRTR_ORIG BY DESC,&
          STRING CRTR_REEM BY DESC)

 !   Reemplaza en ESTR_INGS el CRTR_ORIG(caracter original)
 !   por CRTR_REEM(carater(es) de reemplazo)
 !
 !   Ejemplo de llamada de esta subrutina:
 !       PICT_FILD = 999999,999
 !      CALL GENRPTREP(PICT_FILD,",","V")
 !   Esta subrutina devuelve en PICT_FILD el valor 999999V999

   LARGO_STR% = LEN(ESTR_INGS) 
   VAR_AUX$ = ""
   FOR I% = 1 TO LARGO_STR%
      IF MID$(ESTR_INGS,I%,1) = CRTR_ORIG THEN
         VAR_AUX$ = VAR_AUX$ + CRTR_REEM
      ELSE
         VAR_AUX$ = VAR_AUX$ + MID$(ESTR_INGS,I%,1)
      END IF
   NEXT I%
   ESTR_INGS = VAR_AUX$
   END SUB

