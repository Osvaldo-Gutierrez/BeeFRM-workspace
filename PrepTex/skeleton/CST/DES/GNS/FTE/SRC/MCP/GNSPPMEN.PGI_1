      $SET LIST
       IDENTIFICATION DIVISION.
      *========================
       PROGRAM-ID. GNSPPMEN.
       AUTHOR. CST.
       DATE-WRITTEN.     12-AUG-1994 20:10:07.
      * PROCESA MENUS Y COMANDOS CON MANEJO DE PRIVILEGIOS.
       ENVIRONMENT DIVISION.
      *=====================
       DATA DIVISION.
      *==============
       WORKING-STORAGE SECTION.
      *------------------------
      *
      * REGISTRO IMAGEN PARA DESPLEGAR ERROR EN 'WF'
      * NO ENCONTRADO
       COPY GNSWFEMU.
      * INDICADOR DE USUARIO SUPER PRIVILEGIADO
       01  WSS-IND-USSP             PIC X(01)    VALUE 'N'.
      * CODIGO DE USUARIO SUPER PRIVILEGIADO
       01  WSS-COD-USSP             PIC X(12)    VALUE 'BCADS016'.
      *
       01  WSS-GLS-TRAN             PIC X(04)    VALUE 'SIS0'.
       01  WSS-AUX-TRAN             PIC X(04).
       01  WSS-AUX-CACC.
           03 WSS-AUX-CACC-SIST     PIC X(03).
           03 FILLER VALUE '/'      PIC X(01).
           03 WSS-AUX-CACC-OPCI     PIC X(03).
       01  WSS-ATR.
           03 WSS-ATR-TENU     PIC X(01)    VALUE @26@.
           03 WSS-ATR-ES-TENUE PIC X(01)    VALUE 'T'.
           03 WSS-ATR-RC1 VALUE SPACES.
              05 WSS-ATR-RC1-ELM OCCURS 19 TIMES   PIC X(01).
           03 WSS-ATR-RC2 VALUE SPACES.
              05 WSS-ATR-RC2-ELM OCCURS 38 TIMES   PIC X(01).
      * INI-PRV
       COPY GNSLGUYP.
       COPY GNSBRRUG.
       COPY GNSBRPDP.
       COPY GNSWGTPU.
      *<<<<< Fin RAA
       01  WSS-VARI-PRV.
      *     03 WSS-COD-TCON                              PIC X(03).
      *     03 WSS-I      VALUE ZEROES                   PIC 9(04).
           03 WSS-T      VALUE ZEROES                   PIC 9(04).
      *     03 WSS-J      VALUE ZEROES                   PIC 9(03).
      *     03 WSS-L      VALUE ZEROES                   PIC 9(03).
      *     03 WSS-K      VALUE ZEROES                   PIC 9(03).
           03 WSS-PDP-CMP-NEMO.
              05 WSS-PDP-CMP-NEMO-IDX OCCURS 12 TIMES   PIC X(01).
           03 WSS-UYP-CMP-NEMO.
              05 WSS-UYP-CMP-NEMO-IDX OCCURS 12 TIMES   PIC X(01).

       01  WSS-VARI-PFL.
           03 WSS-ESTA-EN-RUG        VALUE 'N'            PIC X(01).
           03 WSS-CERRAR-RUG         VALUE 'N'            PIC X(01).
           03 WSS-CERRAR-PDP         VALUE 'N'            PIC X(01).
           03 WSS-COD-TCON                                PIC X(03).
           03 WSS-STAT-AST           VALUE SPACES         PIC X(03).
           03 WSS-STAT-RUG           VALUE SPACES         PIC X(03).
           03 WSS-STAT-PDP           VALUE SPACES         PIC X(03).
       COPY GNSWGUYP.
      * FIN-PRV
       01  WSS-DFRM-FUNC.
           03 WSS-DFRM-FUNC-ELM OCCURS 11                PIC X(01).
       77  WSS-DFRM-FUNC-IDX   VALUE ZEROES              PIC 9(04).
       77  WSS-DFRM-LEYO-MAPA-BD   VALUE 'N'             PIC X(01).
       01  WSS-DFRM-ITEM.
           05 WSS-DFRM-IKEY    VALUE SPACES              PIC  X(03).
      * LARGO DEL ENVIO INCLUYE CARACTERES DE CONTROL A ENVIAR
      * POR EJEMPLO POSICIONAMIENTO Y DELIMITADORES
           05 WSS-DFRM-LENV    COMP VALUE +0             PIC S9(04).
      * LARGO DE RECEPCION, SOLO INCLUYE LOS CAMPOS RECIBIDOS,
      * ES DECIR AQUELLOS ENTRE DELIMITADORES
           05 WSS-DFRM-LRCV    COMP VALUE +0             PIC S9(04).
           05 WSS-DFRM-DATA                              PIC  X(3000).

       77  CHK-FRM-COD-TFUN                              PIC X(03).
       77  CHK-FRM-GLS-NFRM                              PIC X(07).

       77  WSS-TERMIN-R    PIC S9(11) USAGE BINARY.
       77  WSS-TERMIN-L    PIC S9(11) USAGE BINARY.
       77  WSS-TERMIN-N    REAL.
       01  WSS-TERMIN                            PIC X(30).
       01  WSS-DSP-TRC VALUE 'S' PIC X(01).
       01  WSS-DSP-SEC VALUE 'N' PIC X(01).
       COPY GNSWGDRC.
       COPY GNSWRTAB.
       COPY GNSWRMSG.
       COPY GNSWSFIO.
       COPY GNSWIRC1.
       COPY GNSWIRC2.
       COPY GNSWFHYT.
       COPY GNSWGACI.
       COPY GNSBRMNU.
       COPY GNSBRRPF.
       COPY GNSWGOSC.
       COPY GNSWCSCR.
       COPY GNSWVSCR.
       COPY GNSWVIDD.
       COPY GNSWGTSC.
       01  CMN-VARI.
           03 CMN-SIND.
              05 CMN-I                PIC 9(02).
              05 CMN-K                PIC 9(02).
           03 CMN-IDX-CCMN    VALUE SPACES.
              05 CMN-VEC-CCMN OCCURS 10.
                 07 CMN-COD-CCMN      PIC X(03).
                 07 FILLER            PIC X(01).
       COPY GNSWVFIO.
       COPY GNSWCFIO.
       COPY GNSWGFRM.
       COPY GNSWITRL.
       COPY GNSWIOPC.
       COPY GNSWIOP1.
       COPY GNSBRTAB.
       COPY GNSBRMSG.
       01  RFN-VARI.
           03  RFN-COLA.
               05  RFN-TYPE VALUE 'GRET'            PIC X(04).
               05  RFN-TERM                         PIC X(04).
           03  RFN-LITM     COMP                    PIC S9(04).
           03  RFN-ITEM.
               05  RFN-PROG                         PIC X(08).
               05  RFN-FUNC.
                   07  RFN-SIST                     PIC X(03).
                   07  RFN-SISG                     PIC X(03).
                   07  RFN-NEMO                     PIC X(12).
                   07  RFN-CMND                     PIC X(03).
      *
       01  WSS-VARI.
      * ISP:  17-MAR-1993 07:54:47
           03 WSS-COD-MSG0.
              05 WSS-COD-MSG1                         PIC X(01).
              05 WSS-COD-MSG2                         PIC X(08).
              05 WSS-COD-MSG3                         PIC X(03).
      * ISP:  17-MAR-1993 07:54:47

           03 WSS-SCOD                                PIC X(02).
           03 WSS-SEFN                                PIC X(02).
           03 WSS-SXCT                    VALUE  3588 PIC  9(04).
           03 WSS-SXCT-RED         REDEFINES WSS-SXCT PIC X(04).
           03 WSS-QIDD.
              05 WSS-NIDD VALUE 'GIDD'    PIC X(04).
              05 WSS-TIDD                 PIC X(04).
           03 WSS-CCOD                   VALUE SPACES PIC X(05).
              88 WSS-CCOD-APCT           VALUE 'APCT'.
              88 WSS-CCOD-ABM0           VALUE 'ABM0'.
           03 WSS-DFLD.
              05 WSS-NTRN                             PIC X(04).
              05 WSS-CAXC.
                 07 WSS-SIST.
                    09 WSS-CSIS OCCURS 3              PIC X(01).
                 07 WSS-FILL                          PIC X(01).
                 07 WSS-SISG                          PIC X(03).
                 07 WSS-DISP                          PIC X(09).
           03 WSS-FUNC.
              05 WSS-FCHR OCCURS 11                   PIC X(01).
           03 WSS-AFUN.
              05 WSS-ACHR OCCURS 11                   PIC X(01).
           03 WSS-OPCI.
              05 WSS-COPC OCCURS 3                    PIC X(01).
           03 WSS-CMND.
              05 WSS-CCMD OCCURS 3                    PIC X(01).
           03 WSS-MAUT.
              05 WSS-FILA OCCURS 12.
                 07 WSS-COLU OCCURS 09.
                    09 WSS-AUTO                  PIC 9(02).
           03 WSS-MAUT-RED REDEFINES WSS-MAUT.
              05 WSS-ITM1                        PIC X(18).
              05 WSS-ITM2                        PIC X(18).
              05 WSS-ITM3                        PIC X(18).
              05 WSS-ITM4                        PIC X(18).
              05 WSS-ITM5                        PIC X(18).
              05 WSS-ITM6                        PIC X(18).
              05 WSS-ITM7                        PIC X(18).
              05 WSS-ITM8                        PIC X(18).
              05 WSS-ITM9                        PIC X(18).
              05 WSS-ITMA                        PIC X(18).
              05 WSS-ITMB                        PIC X(18).
              05 WSS-ITMC                        PIC X(18).
           03 WSS-STDO                   VALUE 1 PIC 9(02).
           03 WSS-ISIS                   VALUE 0 PIC 9(02).
           03 WSS-IOPC                   VALUE 0 PIC 9(02).
           03 WSS-ICMD                   VALUE 0 PIC 9(02).
           03 WSS-IMAX                   VALUE 0 PIC 9(02).
           03 WSS-IVAL                   VALUE 9 PIC 9(02).
              88 FUNCION-INVALIDA        VALUE 0.
              88 FUNCION-VALIDA          VALUE 1.
           03 WSS-SIND.
      * WSS-I SE 'CHOCO' CON WSS-I DEL MODULO DE PRV
              05 WSS-I-CMN                           PIC 9(02).
              05 WSS-I                           PIC 9(02).
              05 WSS-J                           PIC 9(02).
              05 WSS-K                           PIC 9(02).
              05 WSS-L                           PIC 9(02).
              05 WSS-M                           PIC 9(02).
           03 WSS-AUXI                           PIC X(03).
           03 UYP-PRTA.
              05 UYP-PROG                        PIC X(08).
              05 FILLER                VALUE '/' PIC X(01).
              05 UYP-CMND                        PIC X(03).
           03 WSS-MENS.
              05 WSS-MEN1                        PIC X(40).
              05 WSS-MEN2                        PIC X(79).
           03 WSS-COD-MENS.
              05 WSS-COD-TMSG.
                 07 WSS-COD-TMN1                 PIC X(03).
                 07 WSS-COD-TMN2                 PIC X(03).
                 07 WSS-COD-TMN3                 PIC X(01).
              05 WSS-COD-CMSG                    PIC X(05).
           03 WSS-ICMN                           PIC X(01).
              88 WSS-DESDE-CMN VALUE 'K'.
      *************************************************************
           03 WSS-IND-CMND             VALUE 0   PIC 9(01).
              88 WSS-EXISTE-COMANDO    VALUE 1.
              88 WSS-COMANDO-SINPRV    VALUE 2.
      *
           03 WSS-AUX-CMNP                       PIC X(08).
           03 WSS-AUX-PRMC                       PIC X(25).
           03 WSS-AUX-CMND                       PIC X(03).
           03 WSS-AUX-CRPF.
              05 WSS-TABL OCCURS 10.
                 07 WSS-COD-CMND                 PIC X(03).
                 07 WSS-COD-CCPP                 PIC X(03).
                 07 WSS-IND-STPP                 PIC X(01).
                 07 WSS-GLS-PRMT                 PIC X(25).
                 07 WSS-GLS-CONF                 PIC X(25).
                 07 WSS-GLS-UARC                 PIC X(12).
           03 WSS-IPRV                           PIC X(01).
              88 WSS-IPRV-TODO        VALUE '*'.
              88 WSS-IPRV-TODOS-MENUS VALUE '*', 'O', 'U', 'Q'.
              88 WSS-IPRV-TODOS-MAN   VALUE '*', 'U', 'M'.
              88 WSS-IPRV-TODOS-CON   VALUE '*', 'Q', 'C'.
           03 WSS-KNMO VALUE SPACES.
              05 WSS-KNMO-SIST                   PIC X(03).
              05 WSS-KNMO-SISG                   PIC X(03).
              05 WSS-KNMO-NEMO                   PIC X(12).
              05 WSS-KNMO-CMND                   PIC X(03).
              05 WSS-KNMO-PROG                   PIC X(08).
              05 WSS-KNMO-USER                   PIC X(12).

      * Variables que vienen de GNSPPMEN
       01  WSS-VOPC.
           03 WSS-STAT              VALUE 0        PIC 9(01).
              88 WSS-STAT-OKS       VALUE 0.
              88 WSS-STAT-WRN       VALUE 1.
              88 WSS-STAT-MAL       VALUE 2.
           03 WSS-SIND.
              05 I                                 PIC 9(02).
              05 J                                 PIC 9(02).
              05 K                  VALUE 0        PIC 9(02).
              05 L                  VALUE 0        PIC 9(02).
              05 IMIN               VALUE 0        PIC 9(02).
              05 IMAX               VALUE 0        PIC 9(02).
           03 WSS-RMNU                             PIC X(490).
           03 WSS-NSIS                             PIC X(003).
           03 WSS-MENU                             PIC X(003).
           03 WSS-NEMO                             PIC X(012).
           03 WSS-NEMO-RED REDEFINES WSS-NEMO.
              05 WSS-NEMO-CHR OCCURS 12            PIC X(01).
           03 WSS-IFRM                   VALUE '0' PIC X(01).
      *Variables para GNSSCRHDR
       01  HEA-VARI.
           03 HEA-SIMP              VALUE SPACES.
              05 HEA-GLS-SIMP       OCCURS 31      PIC X(01).
           03 HEA-DOBL              VALUE SPACES.
              05 HEA-GLS-DOBL       OCCURS 61      PIC X(01).
           03 HEA-FEC-DMSA.
              05 HEA-NUM-DMSA                      PIC 9(02).
              05 HEA-GLS-SLA1                      PIC X(01).
              05 HEA-NUM-MMSA                      PIC 9(02).
              05 HEA-GLS-SLA2                      PIC X(01).
              05 HEA-NUM-SMSA                      PIC 9(02).
              05 HEA-NUM-AMSA                      PIC 9(02).
       COPY GNSWGHOY.
       COPY GNSWGSYS.
       COPY GNSWIHDR.
      * Variables para Manejo de Usuarios y privilegios.
       01  AUX-VARI.
           03 AUX-UARC.
              05 AUX-RPRG                        PIC X(08).
              05 AUX-RTRN                        PIC X(04).
           03 AUX-PRGM.
              05 AUX-PROG                        PIC X(08).
              05 AUX-NTRN                        PIC X(04).
       COPY GNSBRIDD.
      *POR MIENTRAS POR EL XCONTROL QUE SE HACE DESDE MENU
       01  WSS-CMMA.
           03 WSS-RFUN                             PIC X(300).
           03 WSS-NSXC                             PIC X(003).
           03 WSS-GSXC                             PIC X(003).
           03 FILLER                               PIC X(011).
      *
       01  WSS-CHK-SIST                  VALUE ' ' PIC X(01).
           88 WSS-CHK-SIST-SI            VALUE 'S'.
       01  IFD.
           03  FILLER                            PIC X(01).
           03  IFD-COD-CIFD                      PIC X(12).
           03  IFD-GLS-DATA                      PIC X(210).
           03  FILLER                            PIC X(18).
       COPY GNSWGQUE.
      *PARA TFUN = 'PTC'
       01  WSS-PPPV.
           03 WSS-PROV                                  PIC X(08).
           03 FILLER                                    PIC X(01).
           03 WSS-NTRV                                  PIC X(04).
       01  WSS-TSC-AUXI.
           03 FILLER                                    PIC X(05).
           03 WSS-CMA-OPCI                              PIC X(03).
           03 FILLER                                    PIC X(57).
           03 WSS-TSC-OPCI                              PIC X(03).
       01  WSS-USER                                     PIC X(08).
       01  WSS-OPID                                     PIC X(03).

       COPY GNSBGCSC.

       PROCEDURE DIVISION.
      *===================
       MAIN SECTION.
       INI-MAIN.
       COPY GNSBICMS.
           MOVE 'S' TO SYS-IND-WICB.
      *    MOVE FIO-UPD TO FIO-CMND.
      *    PERFORM GNS-FIO-MNU.
      *    IF NOT FIO-STAT-OKS
      *         DISPLAY 'ERROR APERTURA ARCHIVO MNU'
      *         STOP RUN.

      *    MOVE FIO-UPD TO FIO-CMND.
      *    PERFORM GNS-FIO-RPF.
      *    IF NOT FIO-STAT-OKS
      *         DISPLAY 'ERROR APERTURA ARCHIVO RPF'
      *         STOP RUN.

      *    MOVE FIO-UPD TO FIO-CMND.
      *    PERFORM GNS-FIO-TAB.
      *    IF NOT FIO-STAT-OKS
      *         DISPLAY 'ERROR APERTURA ARCHIVO TAB'
      *         STOP RUN.

      *    MOVE FIO-UPD TO FIO-CMND.
      *    PERFORM GNS-FIO-TSF.
      *    IF NOT FIO-STAT-OKS
      *         DISPLAY 'ERROR APERTURA ARCHIVO TSF'
      *         STOP RUN.

           MOVE FRM-GET-ALL TO FRM-CMND.
           PERFORM GNS-PRO-FRM.
      *    IF WSS-DSP-SEC = 'S'
      *         DISPLAY 'TRAN ' FRM-DFLD.
           PERFORM UYS-GET-TERM.
      *    DISPLAY 'TERM ' UYS-TERM.
           MOVE EIBTRMID TO TSC-TERM
                            QUE-TERM.
      *    IF WSS-DSP-SEC = 'S'
      *        DISPLAY 'TERM ' UYS-TERM.
           PERFORM UYS-GET-TECL.
           MOVE FRM-DFLD TO WSS-AUX-TRAN.
      *    DISPLAY 'INFO RECEPCIONADA ' FRM-DFLD.
           PERFORM UYS-GET-USER.
           MOVE UYS-USER TO UYP-COD-USER TSC-USER SCR-USER.
           IF UYS-USER = WSS-COD-USSP
               MOVE 'S' TO WSS-IND-USSP.
      *    MOVE 'ISILVA' TO UYP-COD-USER TSC-USER SCR-USER.
           IF WSS-AUX-TRAN = 'SIST'
      *        DISPLAY 'DETECTO TRAN '
               PERFORM GNS-DEL-TSC
               MOVE ZEROES       TO EIBCALEN
               MOVE FRM-FFLD-RET TO EIBAID
            ELSE
      * CUANDO UN PGI LLAMA A GNSPPMEN, SE SIMULA COMO SI EL USUARIO
      * ELIGIERA EL PROGRAMA COMO OPCION EN UN MENU
               MOVE 500      TO EIBCALEN.
      *        MOVE FRM-DFLD TO RC3-FLD
      *        DISPLAY '### TRCD REC. #### ' RC3-HDR-COD-TRCD
      *        DISPLAY '### CACC REC. #### ' RC3-TRL-COD-CACC
      *        MOVE RC3-TRL-COD-CACC TO TRL-COD-CACC IN TRL-FLD.
      * Rutina que detecta transaccion invocada directamente
      *    MOVE LOW-VALUES TO OPC-FLD
      *                       OP1-FLD
      *                       HDR-FLD
      *                       TRL-FLD.
           MOVE EIBFN TO WSS-SEFN.
           PERFORM GNS-PRO-KEY.
      *    PERFORM CIC-ERR THRU FIN-CIC-ERR.
           PERFORM GNS-HDL-MNU.
           MOVE 'GNSPPMEN' TO IDD-COD-CIDD IN IDD.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM GNS-FIO-IDD.
           IF NOT FIO-STAT-OKS
               MOVE 'DEFAULT' TO IDD-COD-CIDD IN IDD
               MOVE FIO-GET-KEY TO FIO-CMND
               PERFORM GNS-FIO-IDD
               IF NOT FIO-STAT-OKS
                   PERFORM BUS-FSIS
               ELSE
                   MOVE IDD TO IDD-REGI
           ELSE
               MOVE IDD TO IDD-REGI.
      *JSS IF EIBCALEN = 0 OR EIBCALEN = 7
           IF EIBCALEN = 0 OR EIBCALEN = 317
      *
               MOVE 'K'      TO TSC-ICMN
               MOVE TSC-ICMN TO WSS-ICMN
      *
               PERFORM INI-SIST
      *        PERFORM BUS-MGKY
               PERFORM PRO-RMNU
           ELSE
      *JSS IF EIBCALEN = 21
           IF EIBCALEN = 21 OR 29
               MOVE DFHCOMMAREA TO WSS-KNMO
               MOVE 'K'      TO TSC-ICMN
               MOVE TSC-ICMN TO WSS-ICMN
               PERFORM INI-FUNC
               PERFORM CHK-PRV-SIST
      *        PERFORM PRO-RMNU
               PERFORM PRO-FIN
           ELSE
               PERFORM GNS-GET-TSC
               PERFORM CHK-RCV
      *
      *        MOVE DFHCOMMAREA TO SCR-VARI
      *
               MOVE TSC-ICMN TO WSS-ICMN
               IF ( NOT WSS-DESDE-CMN ) AND
                  ( TSC-TFUN = 'HMX' OR 'XMX' OR 'RET' )
      *           AND EXISTIA COMANDO ORIGINAL EN EL MNU......
                   MOVE SPACES       TO WSS-FUNC
                   MOVE FRM-FFLD-PF3 TO FRM-FFLD
                   GO TO RET-LEE-CMND.
           DISPLAY 'TSC-INST ' TSC-INST.
           IF TSC-INST = SCR-INST-HCM
               MOVE SCR-INST-GFL TO TSC-INST
               IF ( NOT EIBCALEN = 0 ) AND TSC-UARC(TSC-I) > SPACES
                   MOVE TSC-UARC( TSC-I ) TO AUX-UARC
                   MOVE TSC-PROG TO AUX-PROG
                   MOVE TSC-NTRN TO AUX-NTRN
                   MOVE AUX-PRGM TO TSC-UARC( TSC-I )
                   MOVE AUX-RPRG TO TSC-PROG
                   MOVE AUX-RTRN TO TSC-NTRN
                   PERFORM HBL-CMN
               ELSE
                   PERFORM HBL-CMN
           ELSE
           IF TSC-INST = SCR-INST-GFL
      *        PERFORM CHK-PTC
               PERFORM LEE-CACC
               PERFORM CAL-PROG.
      *JSS 2-SEP-1992 12:19:36 GOBACK.
       FIN-MAIN.
           EXIT.
       CHK-PTC SECTION.
       INI-CHK-PTC.
           DISPLAY ' EN CHK-PTC'.
           IF TSC-TFUN = 'PTC'
                MOVE TSC-TFUN TO CHK-FRM-COD-TFUN
                MOVE TSC-NMAP TO CHK-FRM-GLS-NFRM
                PERFORM CHK-FRM.
       FIN-CHK-PTC.
           EXIT.
       COPY GNSBGRCM.
       COPY GNSBHMNU.
       INI-SIST SECTION.
       INI-INI-SIST.
           IF WSS-DSP-SEC = 'S'
                DISPLAY '### INI-SIST ####'.
           IF EIBCALEN = 0
               MOVE +20     TO FRM-LFLD
               MOVE FRM-RCV TO FRM-CMND
               MOVE 'SISTGNS' TO FRM-DFLD
               MOVE FRM-DFLD TO WSS-DFLD
           ELSE
      *JSS      MOVE DFHCOMMAREA TO WSS-CAXC.
               MOVE DFHCOMMAREA TO WSS-CMMA
               MOVE WSS-NSXC    TO WSS-SIST
               MOVE WSS-GSXC    TO WSS-SISG.
      *
           MOVE WSS-SIST TO TSC-SIST SCR-SIST.
           MOVE WSS-SISG TO TSC-SISG.
           MOVE SPACES TO MNU.
           MOVE 'SIS' TO MNU-COD-NEMO IN MNU.
           MOVE FIO-GET-KEY TO FIO-CMND.
           IF WSS-DSP-SEC = 'S'
               DISPLAY 'MNU-COD-NEMS ' MNU-COD-NEMS
               DISPLAY 'MNU-COD-NEMO ' MNU-COD-NEMO
               DISPLAY 'MNU-COD-NEMS ' MNU-COD-NEMS IN MNU.
           PERFORM VID-MNU.
           IF NOT FIO-STAT-OKS
               MOVE 'GNS' TO MSG-COD-SIST
               MOVE 'CODNEMOSISNX' TO MSG-COD-MENS
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS
               MOVE FRM-MSG      TO FRM-CMND
               PERFORM GNS-PRO-FRM
           ELSE
               MOVE TSC-SIST TO MNU-COD-SIST.
           PERFORM CHK-PRV-SIST.
       FIN-INI-SIST.
           EXIT.
       INI-FUNC SECTION.
       INI-INI-FUNC.
           IF WSS-DSP-SEC = 'S'
                DISPLAY '### INI-FUNC ####'.
           MOVE WSS-KNMO-SIST TO TSC-SIST SCR-SIST.
           MOVE WSS-KNMO-SISG TO TSC-SISG.
           MOVE WSS-KNMO-NEMO TO MNU-COD-NEMO.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM VID-MNU.
           IF NOT FIO-STAT-OKS
               MOVE 'CODNEMOSISNX' TO MSG-COD-MENS
               GO TO ERR-INI-FUNC.
           MOVE MNU-COD-TFUN TO CHK-FRM-COD-TFUN.
           MOVE MNU-GLS-NFRM TO CHK-FRM-GLS-NFRM.
           PERFORM CHK-FRM.
      *JSS-IBM
      *     IF EIBCALEN = 29 AND WSS-KNMO-PROG > SPACES
      *         MOVE WSS-KNMO-PROG TO MNU-GLS-PROG.
      *
           IF MNU-COD-SIST NOT > SPACES
               MOVE TSC-SIST TO MNU-COD-SIST.
           IF WSS-KNMO-CMND > SPACES
               MOVE WSS-KNMO-CMND TO MNU-COD-CMND.
           GO TO FIN-INI-FUNC.
       INI-FUNC-NOP.
           MOVE 'SIS    NOPEN' TO MSG-COD-MENS.
           GO TO ERR-INI-FUNC.
       INI-FUNC-DSI.
           MOVE 'SIS    NEXST' TO MSG-COD-MENS.
       ERR-INI-FUNC.
           MOVE 'GNS' TO MSG-COD-SIST.
           PERFORM GET-MSG.
           MOVE MSG-GLS-DESC TO FRM-MENS.
           PERFORM FST-CMN.
           PERFORM CMN-MSSG.
           PERFORM CMN-PUTA.
      *EN VEZ DEL GOBACK COPIAR MODULO QUE SEPA VOLVER
      *JSS 2-SEP-1992 12:19:36 GOBACK.
       FIN-INI-FUNC.
           EXIT.
       CHK-PRV-CMND SECTION.
       INI-CHK-PRV-CMND.
      * INI-PRV
           MOVE 0 TO WSS-I-CMN.
       LUP-CHK-PRV-CMND.
           ADD 1 TO WSS-I-CMN.
           IF WSS-I-CMN > 10
               GO TO FIN-CHK-PRV-CMND.
           IF WSS-COD-CMND( WSS-I-CMN ) NOT > SPACES
               GO TO LUP-CHK-PRV-CMND.
      * llamada a la rutina de verificacion de permisos para verificar
      * un comando a la vez
           MOVE 'GI'                  TO UYP-COD-TDPU.
           MOVE SPACES                TO UYP-COD-PREG.
           MOVE MNU-COD-SIST IN MNU   TO UYP-COD-SIST.
           MOVE MNU-COD-NEMO IN MNU   TO UYP-COD-NEMO.
           MOVE WSS-COD-CMND( WSS-I-CMN ) TO UYP-COD-CMND.
           MOVE 'GNSPPPRV' TO SYS-PROG.
           MOVE UYP-VARI   TO SYS-CMMA.
           MOVE +47        TO SYS-TCMA.
           MOVE SYS-LINK   TO SYS-CMND.
           PERFORM CAL-PRV.
           IF ( UYP-IND-RESP NOT = 'S' )        AND
              ( MNU-COD-CMND IN MNU > SPACES ) AND
              ( MNU-COD-CMND IN MNU = WSS-COD-CMND( WSS-I-CMN ) )
               MOVE 2 TO WSS-IND-CMND.
           IF UYP-IND-RESP NOT = 'S'
               MOVE SPACES TO WSS-TABL( WSS-I-CMN )
               MOVE SPACES TO WSS-GLS-UARC( WSS-I-CMN )
               MOVE SPACES TO WSS-GLS-PRMT( WSS-I-CMN )
               MOVE SPACES TO WSS-GLS-CONF( WSS-I-CMN ).
           GO TO LUP-CHK-PRV-CMND.
      * FIN-PRV
       FIN-CHK-PRV-CMND.
           EXIT.
       LEE-CACC SECTION.
       INI-LEE-CACC.
           IF WSS-DSP-SEC = 'S'
                DISPLAY '### LEE-CACC ####'.
           PERFORM LEE-CMND.
           PERFORM PUT-DCMN.
           PERFORM CMN-PUTA.
       FIN-LEE-CACC.
           EXIT.
       LEE-CMND SECTION.
       INI-LEE-CMND.
           IF WSS-DSP-SEC = 'S'
                DISPLAY '### LEE-CMND ####'.
           PERFORM GET-CMND.
           MOVE SPACES TO TRL-GLS-MENS.
           MOVE TRL-COD-CACC TO WSS-FUNC.
           IF FRM-FFLD = FRM-FFLD-PA2 OR FRM-FFLD-PA1
               MOVE 'SIS' TO MNU-COD-NEMO
               MOVE FIO-GET-KEY TO FIO-CMND
               PERFORM VID-MNU
               IF NOT FIO-STAT-OKS
                   MOVE 'CODNEMOSISNX' TO MSG-COD-MENS
                   GO TO ERR-LEE-CMND
               ELSE
                   GO TO TCT-LEE-CMND.
       RET-LEE-CMND.
           IF WSS-FUNC NOT > SPACES
               IF FRM-FFLD = FRM-FFLD-RET
                   MOVE 'CAC    BLK' TO MSG-COD-MENS
                   GO TO ERR-LEE-CMND
               ELSE
               IF FRM-FFLD = FRM-FFLD-PF3
                   MOVE TSC-FRET    TO MNU-COD-NEMO
                   MOVE FIO-GET-KEY TO FIO-CMND
                   PERFORM VID-MNU
                   IF NOT FIO-STAT-OKS
                       MOVE 'CODFRETNEXST' TO MSG-COD-MENS
                       GO TO ERR-LEE-CMND
                   ELSE
                       MOVE MNU-COD-TFUN TO CHK-FRM-COD-TFUN
                       MOVE MNU-GLS-NFRM TO CHK-FRM-GLS-NFRM
                       PERFORM CHK-FRM
                       PERFORM PRO-FIN.
           PERFORM SHF-CACC.
           PERFORM INI-AUTO.
           PERFORM PRO-AUTO VARYING WSS-I FROM 1 BY 1
                            UNTIL WSS-I > 11.
           IF FUNCION-INVALIDA
               MOVE 'FUN    INV' TO MSG-COD-MENS
               GO TO ERR-LEE-CMND.
           PERFORM UNS-CACC.
      *Decidir en Base a Teclas ENTER y PF3........
      *Si existe sistema o si existe opcion
           IF WSS-ISIS > 0 OR WSS-IOPC > 0 OR FRM-FFLD = FRM-FFLD-PF3
               PERFORM PRO-TCTL.
           PERFORM BUS-CMND.
           IF MSG-COD-MENS NOT > SPACES
               GO TO FIN-LEE-CMND.
       TCT-LEE-CMND.
           PERFORM PRO-TCTL.
       ERR-LEE-CMND.
           MOVE 'GNS' TO MSG-COD-SIST.
           PERFORM GET-MSG.
           IF FRM-MENS NOT > SPACES
               MOVE MSG-GLS-DESC TO FRM-MENS
           ELSE
           IF FRM-MEN1 NOT > SPACES
               MOVE MSG-GLS-DESC TO FRM-MEN1
           ELSE
           IF FRM-MEN2 NOT > SPACES
               MOVE MSG-GLS-DESC TO FRM-MEN2.
           PERFORM FST-CMN.
           PERFORM CMN-MSSG.
           PERFORM CMN-PUTA-RCT.
           PERFORM CMN-EXIT.
       FIN-LEE-CMND.
           MOVE CMN-I TO TSC-I.
           MOVE FRM-FFLD TO TSC-FFLD.

       GET-CMND SECTION.
       INI-GET-CMND.
           IF WSS-DSP-SEC = 'S'
                DISPLAY '### GET-CMND ####'.
           MOVE 'GNSFCMN' TO FRM-NAME.
           MOVE 'GNSACMN' TO FRM-NLIB.
      *    PERFORM GNS-PRO-FRM.
           IF NOT ( FRM-FFLD = FRM-FFLD-RET OR FRM-FFLD-PF3 OR
                               FRM-FFLD-PA2 OR FRM-FFLD-PA1 )
                  MOVE 'PFSINV' TO MSG-COD-MENS
                  MOVE 'GNS'    TO MSG-COD-SIST
                  PERFORM GET-MSG
                  MOVE MSG-GLS-DESC TO FRM-MENS
                  PERFORM FST-CMN
                  PERFORM CMN-MSSG
                  PERFORM CMN-PUTA
                  PERFORM CMN-EXIT.
      *    IF FRM-NTRN = 'OPC2'
      *        MOVE FRM-DFLD TO RC2-FLD
      *        MOVE RC2-TRL-COD-CACC TO TRL-COD-CACC IN TRL-FLD
      *    ELSE
      *        MOVE FRM-DFLD TO RC1-FLD
      *        MOVE RC1-TRL-COD-CACC TO TRL-COD-CACC IN TRL-FLD.
           DISPLAY '### TRL-COD-CACC #### ' TRL-COD-CACC.
           IF FRM-FFLD = FRM-FFLD-PA2 OR FRM-FFLD-PA1
      *JSS     MOVE FRM-FFLD-TAB TO FRM-FFLD
               MOVE 'SIS'        TO TRL-COD-CACC.
       FIN-GET-CMND.
           EXIT.
       SHF-CACC SECTION.
       INI-SHF-CACC.
           IF WSS-DSP-SEC = 'S'
                DISPLAY '### SHF-CACC ####'.
           MOVE SPACES TO WSS-AFUN.
           MOVE 1 TO WSS-I WSS-L.
       LUP-SHF-CACC.
           IF WSS-FCHR( WSS-I ) > SPACES
               MOVE WSS-FCHR( WSS-I ) TO WSS-ACHR( WSS-L )
               ADD 1 TO WSS-L.
           ADD 1 TO WSS-I.
           IF WSS-I NOT > 11
               GO TO LUP-SHF-CACC.
           MOVE WSS-AFUN TO WSS-FUNC.
       FIN-SHF-CACC.
           EXIT.
       INI-AUTO SECTION.
       INI-INI-AUTO.
           IF WSS-DSP-SEC = 'S'
                DISPLAY '### INI-AUTO ####'.
           MOVE '000002020000000100' TO WSS-ITM1.
           MOVE '010003030000090800' TO WSS-ITM2.
           MOVE '010004040000090800' TO WSS-ITM3.
           MOVE '010000000505090400' TO WSS-ITM4.
           MOVE '010006060000000500' TO WSS-ITM5.
           MOVE '010007070000090800' TO WSS-ITM6.
           MOVE '010008080000090800' TO WSS-ITM7.
           MOVE '010000000000090800' TO WSS-ITM8.
           MOVE '000010100000000900' TO WSS-ITM9.
           MOVE '010011110000001200' TO WSS-ITMA.
           MOVE '010012120000001200' TO WSS-ITMB.
           MOVE '010000000000001200' TO WSS-ITMC.
           MOVE 1 TO WSS-STDO.
           MOVE 0 TO WSS-ISIS.
           MOVE 0 TO WSS-IOPC.
           MOVE 0 TO WSS-ICMD.
       FIN-INI-AUTO.
           EXIT.
       PRO-AUTO SECTION.
       INI-PRO-AUTO.
           IF WSS-DSP-SEC = 'S'
                DISPLAY '### PRO-AUTO ####'.
           IF WSS-FCHR( WSS-I ) NOT > SPACES
               MOVE 12 TO WSS-I
               GO TO FIN-PRO-AUTO.
           MOVE WSS-I TO WSS-IMAX.
           IF WSS-FCHR( WSS-I ) NOT < 'A' AND
              WSS-FCHR( WSS-I ) NOT > 'Z'
               MOVE 3 TO WSS-J
           ELSE
           IF WSS-FCHR( WSS-I ) NOT < '0' AND
              WSS-FCHR( WSS-I ) NOT > '9'
               MOVE 4 TO WSS-J
           ELSE
      *JSS-IBM IF WSS-FCHR( WSS-I ) = ':'
           IF WSS-FCHR( WSS-I ) = ':' OR '-'
               MOVE 5 TO WSS-J
               MOVE WSS-I TO WSS-ISIS
           ELSE
           IF WSS-FCHR( WSS-I ) = '/'
               MOVE 6 TO WSS-J
               MOVE WSS-I TO WSS-ISIS
           ELSE
           IF WSS-FCHR( WSS-I ) = ',' OR '.'
               MOVE 7 TO WSS-J
               MOVE WSS-I TO WSS-IOPC
               MOVE WSS-I TO WSS-ICMD
           ELSE
           IF WSS-FCHR( WSS-I ) NOT > SPACES
               MOVE 8 TO WSS-J
           ELSE
               MOVE 9 TO WSS-J.
           MOVE WSS-AUTO( WSS-STDO , WSS-J ) TO WSS-STDO.
           IF WSS-STDO NOT = 0
               MOVE WSS-AUTO( WSS-STDO , 1 ) TO WSS-IVAL
           ELSE
               MOVE 0 TO WSS-IVAL
               MOVE 12 TO WSS-I.
       FIN-PRO-AUTO.
           EXIT.
       UNS-CACC SECTION.
       INI-UNS-CACC.
           IF WSS-DSP-SEC = 'S'
                DISPLAY '### UNS-CACC ####'.
           MOVE SPACES TO WSS-SIST WSS-OPCI WSS-CMND.
           IF WSS-ISIS > 0
               MOVE 0 TO WSS-K
               SUBTRACT 1 FROM WSS-ISIS GIVING WSS-J
               PERFORM MOV-SIST VARYING WSS-I FROM 1 BY 1
                                UNTIL   WSS-I > WSS-J
               ADD 1 WSS-ISIS GIVING WSS-L
           ELSE
               MOVE 1 TO WSS-L.
           IF WSS-ICMD > 0
               MOVE 0 TO WSS-K
               ADD 1 WSS-ICMD GIVING WSS-J
               PERFORM MOV-CMND VARYING WSS-I FROM WSS-J BY 1
                                UNTIL   WSS-I >    WSS-IMAX
               SUBTRACT 1 FROM WSS-ICMD GIVING WSS-M
           ELSE
               MOVE WSS-IMAX TO WSS-M.
           MOVE 0 TO WSS-K.
           PERFORM MOV-OPCI VARYING WSS-I FROM WSS-L BY 1
                            UNTIL   WSS-I > WSS-M.
       FIN-UNS-CACC.
           EXIT.
       MOV-SIST SECTION.
       INI-MOV-SIST.
           IF WSS-DSP-SEC = 'S'
                DISPLAY '### MOV-SIST ####'.
           IF WSS-FCHR(WSS-I) > SPACES
               ADD 1 TO WSS-K
               MOVE WSS-FCHR(WSS-I) TO WSS-CSIS(WSS-K).
       FIN-MOV-SIST.
           EXIT.
       MOV-OPCI SECTION.
       INI-MOV-OPCI.
           IF WSS-DSP-SEC = 'S'
                DISPLAY '### MOV-OPCI ####'.
           IF WSS-FCHR(WSS-I) > SPACES
               ADD 1 TO WSS-K
               MOVE WSS-FCHR(WSS-I) TO WSS-COPC(WSS-K).
       FIN-MOV-OPCI.
           EXIT.
       MOV-CMND SECTION.
       INI-MOV-CMND.
           IF WSS-DSP-SEC = 'S'
                DISPLAY '### MOV-CMND ####'.
           IF WSS-FCHR(WSS-I) > SPACES
               ADD 1 TO WSS-K
               MOVE WSS-FCHR(WSS-I) TO WSS-CCMD(WSS-K).
       FIN-MOV-CMND.
           EXIT.
       PRO-TCTL SECTION.
       INI-PRO-TCTL.
           IF WSS-DSP-SEC = 'S'
                DISPLAY '### PRO-TCTL ####'.
           IF WSS-SIST > SPACES AND TSC-SIST NOT = WSS-SIST
               PERFORM CHK-SIST
           ELSE
               MOVE TSC-SIST TO WSS-SIST.
           IF WSS-OPCI > SPACES
               PERFORM CHK-OPC
               PERFORM ANL-OPC
           ELSE
           IF TSC-SIST = WSS-SIST
               IF TSC-NEMO = 'SYS'
                   MOVE 'FUN    ACT' TO MSG-COD-MENS
      *            GO TO ERR-LEE-CMND
               ELSE
                   MOVE 'SIS'       TO MNU-COD-NEMO
                   MOVE FIO-GET-KEY TO FIO-CMND
                   PERFORM VID-MNU
                   IF NOT FIO-STAT-OKS
                       MOVE 'CODNEMOSISNX' TO MSG-COD-MENS
                       GO TO ERR-LEE-CMND.
           MOVE WSS-SIST TO MNU-COD-SIST.
      * Con el MNU que se tiene hay que procesar
      *    IF ( MNU-COD-SIST NOT > SPACES OR
      *         MNU-COD-SIST = TSC-SIST ) AND MNU-COD-NEMO = TSC-NEMO
      *       MOVE 'FUN    ACT' TO MSG-COD-MENS
      *       GO TO ERR-LEE-CMND.
           PERFORM PRO-FIN.
       FIN-PRO-TCTL.
           EXIT.
       CHK-SIST SECTION.
       INI-CHK-SIST.
      * INI-PRV
           MOVE 'GI'     TO UYP-COD-TDPU.
           MOVE SPACES   TO UYP-COD-PREG.
           MOVE WSS-SIST TO UYP-COD-SIST.
           MOVE 'GNSPPPRV' TO SYS-PROG.
           MOVE UYP-VARI   TO SYS-CMMA.
           MOVE +47        TO SYS-TCMA.
           MOVE SYS-LINK   TO SYS-CMND.
           PERFORM CAL-PRV.
           IF UYP-IND-RESP NOT = 'S'
               GO TO CHK-SIST-NPR.
      * FIN-PRV
           MOVE WSS-SIST    TO FIO-SIST.
           MOVE 'SIS'       TO MNU-COD-NEMO.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM GNS-FIO-MNU.
           IF FIO-STAT-OKS
               PERFORM CHK-PRV-SIST
               GO TO FIN-CHK-SIST.
           MOVE 'CODNEMOSISNX' TO MSG-COD-MENS.
           GO TO ERR-LEE-CMND.
       CHK-SIST-NOP.
           MOVE 'SIS    NOPEN' TO MSG-COD-MENS.
           GO TO ERR-LEE-CMND.
       CHK-SIST-DSI.
           MOVE 'SIS    NEXST' TO MSG-COD-MENS.
           GO TO ERR-LEE-CMND.
       CHK-SIST-NPR.
           MOVE 'SIS    NOPRV' TO MSG-COD-MENS.
           GO TO ERR-LEE-CMND.
       FIN-CHK-SIST.
           EXIT.
       CHK-PRV-SIST SECTION.
       INI-CHK-PRV-SIST.
      * INI-PRV
           MOVE SPACES TO TSC-IPRV.
      * FIN-PRV
       FIN-CHK-PRV-SIST.
           EXIT.
       CHK-OPC SECTION.
       INI-CHK-OPC.
           IF WSS-DSP-SEC = 'S'
                DISPLAY '### CHK-OPC ####'.
           MOVE WSS-SIST        TO FIO-SIST.
           MOVE WSS-OPCI        TO MNU-COD-OPCI IN MNU.
           MOVE FIO-GET-KEY     TO FIO-CMND.
           MOVE 'MNU-COD-OPCI'  TO FIO-AKEY.
           PERFORM GNS-FIO-MNU.
           IF NOT FIO-STAT-OKS
               MOVE 'CODOPCINEXST' TO MSG-COD-MENS
               PERFORM ERR-LEE-CMND.
           MOVE MNU-COD-TFUN TO CHK-FRM-COD-TFUN.
           MOVE MNU-GLS-NFRM TO CHK-FRM-GLS-NFRM.
           PERFORM CHK-FRM.
       FIN-CHK-OPC.
           EXIT.
       ANL-OPC SECTION.
       INI-ANL-OPC.
           IF WSS-DSP-SEC = 'S'
                DISPLAY '### ANL-OPC ####'.
           IF WSS-CMND > SPACES
               MOVE WSS-CMND TO MNU-COD-CMND IN MNU.
           IF ( MNU-COD-SIST > SPACES AND MNU-COD-SIST NOT = TSC-SIST )
              AND
              ( NOT ( WSS-SIST > SPACES AND TSC-SIST NOT = WSS-SIST ) )
               MOVE MNU-COD-SIST TO WSS-SIST
               PERFORM CHK-SIST.
       FIN-ANL-OPC.
           EXIT.
       PRO-FIN SECTION.
       INI-PRO-FIN.
           IF MNU-COD-TFUN IN MNU = 'NUL'
               MOVE 'MNUTFUNNUL' TO MSG-COD-MENS
               GO TO ERR-PRO-FIN.
      * llamada a la rutina de verificacion de permisos para verificar
      * una funcion
      * INI-PRV
      * considera que la funcion puede ser el llamado a otro sistema, si no
      * es asi entonces :
      * considera que la funcion puede ser un menu con lo cual muestra
      * de todas formas las opciones que ese menu tiene ( ya que 'puede'
      * tener privilegio para una de las opciones de ese menu, y en caso
      * que no tenga no importa, ya que se validara privilegio al intentar
      * llamar a la opcion ).
           MOVE 'GI'                TO UYP-COD-TDPU.
           MOVE SPACES              TO UYP-COD-PREG.
           IF MNU-COD-SIST IN MNU = TSC-SIST OR
              MNU-COD-SIST IN MNU NOT > SPACES
               MOVE TSC-SIST            TO UYP-COD-SIST
               MOVE MNU-COD-NEMO IN MNU TO UYP-COD-NEMO
               IF MNU-COD-TFUN IN MNU = 'MEN'
                   MOVE 'S' TO UYP-IND-RESP
                   GO TO SKP-PRO-FIN
               ELSE
                   NEXT SENTENCE
           ELSE
               MOVE MNU-COD-SIST IN MNU TO UYP-COD-SIST.
           MOVE 'GNSPPPRV' TO SYS-PROG.
           MOVE UYP-VARI   TO SYS-CMMA.
           MOVE +47        TO SYS-TCMA.
           MOVE SYS-LINK   TO SYS-CMND.
           PERFORM CAL-PRV.
           IF UYP-IND-RESP NOT = 'S'
               MOVE 'FUN    NOPRV' TO MSG-COD-MENS
               GO TO ERR-PRO-FIN.
      * FIN-PRV
      * Que pasa IF MNU-COD-CMND IN MNU > SPACES ??????
       SKP-PRO-FIN.
           IF MNU-COD-SIST NOT > SPACES
               MOVE TSC-SIST TO MNU-COD-SIST.
           IF MNU-COD-CMND IN MNU > SPACES
               PERFORM BUS-CRPF
      *Chequear privilegios para el comando, YA ESTA HECHO
               IF WSS-COMANDO-SINPRV
                   MOVE 'CMD    NOPRV' TO MSG-COD-MENS
                   GO TO ERR-PRO-FIN
               ELSE
               IF NOT WSS-EXISTE-COMANDO
                   MOVE 'CMD    NEXST' TO MSG-COD-MENS
                   GO TO ERR-PRO-FIN
               ELSE
                   PERFORM CRG-VSCR.
           IF MNU-COD-SIST NOT > SPACES OR
              MNU-COD-SIST =     TSC-SIST
               MOVE TSC-SIST TO MNU-COD-SIST
               MOVE TSC-SISG TO WSS-SISG
               MOVE SPACES   TO WSS-NSIS
               GO TO CON-PRO-FIN.
           IF TSC-SIST NOT = 'GNS' AND MNU-COD-SIST = 'GNS'
                MOVE TSC-SIST TO TSC-SISG
           ELSE
      *JSS IF TSC-SIST = 'GNS' AND MNU-COD-SIST NOT = 'GNS'
                MOVE SPACES TO TSC-SISG.
           MOVE MNU-COD-SIST TO TSC-SIST SCR-SIST.
       CON-PRO-FIN.
           MOVE MNU TO WSS-RMNU.
           IF MNU-COD-TFUN = 'PGI' OR 'PRO' OR 'MEN' OR 'HMC' OR
                             'HMX' OR 'XMC' OR 'XMX' OR 'RET' OR
                             'PTC' OR 'NPC'
               PERFORM PRO-RMNU
           ELSE
               PERFORM GNS-PUT-FRT
               IF MNU-COD-TFUN = 'CCA'
                   PERFORM PRO-RMNU
               ELSE
      *POR MIENTRAS SE HACE CON XCTROL, SE DEBE ANALIZAR ( MNU-COD-TCTL
      *MNU-COD-TINF )
                   MOVE MNU-GLS-PROG TO SYS-PROG
                   MOVE LOW-VALUES   TO SYS-CMMA
                   MOVE 0            TO SYS-TCMA
                   MOVE SYS-XCTL     TO SYS-CMND
                   PERFORM GNS-PRO-SYS.
           MOVE 'XCTERR' TO MSG-COD-MENS.
           MOVE SPACES   TO FRM-MEN1.
           MOVE SYS-PROG TO FRM-MEN2.
       ERR-PRO-FIN.
           IF EIBCALEN NOT = 21
               GO TO ERR-LEE-CMND.
           MOVE 'GNS' TO MSG-COD-SIST.
           PERFORM GET-MSG.
           MOVE MSG-GLS-DESC TO FRM-MENS.
           PERFORM FST-CMN.
           PERFORM CMN-MSSG.
           PERFORM CMN-PUTA.
      *EN VEZ DEL GOBACK COPIAR MODULO QUE SEPA VOLVER
           MOVE 'RET'      TO SYS-CMMA.
           MOVE 3          TO SYS-TCMA.
      * ISP:  26-FEB-1992 09:52:46
      *       CMT SIN PRIVILEGIOS => RETORNABA INCONDICIONALMENTE VIA PF2
      *       SIN CONSIDERAR VERSION
           IF MNU-COD-TFUN NOT = 'PTC'
               MOVE 'GNSPPPF2' TO SYS-PROG
           ELSE
               MOVE 'GNSPPPK2' TO SYS-PROG.
      * ISP:  26-FEB-1992 09:52:46
           MOVE SYS-XCTL   TO SYS-CMND.
           PERFORM GNS-PRO-SYS.
       GBK-PRO-FIN.
           PERFORM XCT-ERR.
       FIN-PRO-FIN.
           EXIT.
       CRG-VSCR SECTION.
       INI-CRG-VSCR.
           IF WSS-DSP-SEC = 'S'
                DISPLAY '### CRG-VSCR ####'.
           MOVE MNU-GLS-PROG TO TSC-PROG.
           MOVE WSS-AUX-CRPF TO TSC-CRPF.
           MOVE WSS-AUX-CMNP TO TSC-CMNP.
           MOVE WSS-AUX-PRMC TO TSC-PRMC.
           MOVE WSS-AUX-CMND TO TSC-CMND.
           MOVE MNU-COD-TFUN TO TSC-TFUN.
       FIN-CRG-VSCR.
           EXIT.
       FST-CMN SECTION.
       INI-FST-CMN.
           IF WSS-DSP-SEC = 'S'
                DISPLAY '### FST-CMND ####'.
           MOVE -1 TO TRL-COD-CACC-LEN.
       FIN-FST-CMN.
           EXIT.
       CMN-MSSG SECTION.
       INI-CMN-MSSG.
           IF WSS-DSP-SEC = 'S'
                DISPLAY '### CMN-MSSG ####'.
           MOVE FRM-MENS TO TRL-GLS-MENS.
       FIN-CMN-MSSG.
           EXIT.
       XCT-ERR SECTION.
       INI-XCT-ERR.
           IF WSS-DSP-SEC = 'S'
                DISPLAY '### XCT-ERR ####'.
           MOVE FRM-CLR-FRM TO FRM-CMND.
           PERFORM GNS-PRO-FRM.
           MOVE 'XCTERR    ' TO MSG-COD-MENS.
           MOVE 'GNS'        TO MSG-COD-SIST.
           PERFORM GET-MSG.
           MOVE MSG-GLS-DESC TO FRM-MEN1.
           MOVE SYS-PROG     TO FRM-MEN2.
           MOVE FRM-MSG      TO FRM-CMND.
           PERFORM GNS-PRO-FRM.
      *JSS 2-SEP-1992 12:19:36 GOBACK.
       FIN-XCT-ERR.
           EXIT.
      * Carga numeros de Base de Datos de los Sistemas por default
       BUS-FSIS SECTION.
       INI-BUS-FSIS.
           IF WSS-DSP-SEC = 'S'
                DISPLAY '### BUS-FSIS ####'.
           MOVE 'NO EXISTE REGISTRO IDD CON LLAVE : ' TO SYS-MEN1.
           MOVE IDD-COD-CIDD IN IDD                   TO SYS-MEN2.
           MOVE SYS-ABOR TO SYS-CMND.
           PERFORM GNS-PRO-SYS.
       FIN-BUS-FSIS.
           EXIT.
       COPY GNSBGFRM.
      * COPY GNSBECIC.
       COPY GNSBFMNU.
       COPY GNSBFRPF.
       COPY GNSBGMSG.
       COPY GNSBFTAB.
       COPY GNSBFMSG.
       COPY GNSBIABT.
       COPY GNSBGHOY.
       COPY GNSBGSYS.
       COPY GNSBFIDD.
       COPY GNSBFIFD.
      ******************************************************************
       PRO-RMNU SECTION.
       INI-PRO-RMNU.
           IF WSS-DSP-SEC = 'S'
                DISPLAY '### PRO-RMNU ####'.
      *JSS
           MOVE TSC-IPRV TO MNU-IND-IPRV.
      *
           MOVE MNU-COD-SIST TO TSC-SIST SCR-SIST.
           MOVE MNU-COD-OPCI TO TSC-OPCI.
           MOVE MNU-COD-NEMO TO TSC-NEMO.
      *
           MOVE MNU-GLS-TRAN TO TSC-NTRN.
           MOVE MNU-GLS-PROG TO TSC-PROG.
           MOVE MNU-GLS-LFRM TO TSC-NLIB.
           MOVE MNU-GLS-NFRM TO TSC-NMAP.
           MOVE MNU-GLS-LDOC TO TSC-LDOC.
           MOVE MNU-GLS-NDOC TO TSC-NDOC.
           MOVE MNU-COD-FRET TO TSC-FRET.
           MOVE MNU-IND-IPRV TO TSC-IPRV.
           MOVE MNU-COD-INST TO TSC-TINS.
           MOVE MNU-COD-TCTL TO TSC-TCTL.
           MOVE MNU-COD-TINF TO TSC-TINF.
           MOVE MNU-COD-TFUN TO TSC-TFUN.
           MOVE MNU-COD-CIFD TO TSC-CIDD.
           MOVE +250         TO TSC-TCMA.
           IF MNU-COD-TFUN = 'MEN'
               PERFORM BUS-CRPF
               PERFORM CRG-VSCR
               MOVE MNU TO WSS-RMNU
               PERFORM PRO-MENU
               MOVE WSS-RMNU TO MNU
               PERFORM PUT-MHDR
               PERFORM PUT-MSCR
               GO TO CON-PRO-RMNU.
           PERFORM GET-PROV.
           IF MNU-COD-TFUN NOT = 'CCA'
               MOVE LOW-VALUES TO OPC-FLD
               MOVE LOW-VALUES TO OP1-FLD
               PERFORM PUT-MHDR
               PERFORM PUT-MSCR
           ELSE
               IF MNU-COD-CMND IN MNU > SPACES
                   MOVE MNU-COD-CMND TO WSS-OPCI
                   PERFORM BUS-CMND
                   PERFORM PUT-DCMN
                   PERFORM CAL-PROG
               ELSE
                   PERFORM BUS-CRPF
                   PERFORM CRG-VSCR
                   PERFORM CAL-PROG.
           IF MNU-COD-CMND IN MNU > SPACES
               IF TSC-TFUN = 'HMX' OR 'XMX'
      *Solo para cargar datos de COMMON AREA asociado al comando,
      *no se despliega MAPA
                   MOVE MNU-COD-CMND TO WSS-OPCI
                   PERFORM BUS-CMND
                   PERFORM PUT-DCMN
                   PERFORM CAL-PROG
               ELSE
                   MOVE MNU-COD-CMND TO WSS-OPCI
                   PERFORM BUS-CMND
                   PERFORM PUT-DCMN
                   PERFORM CMN-PUTA
                   PERFORM CAL-PROG.
           PERFORM BUS-CRPF.
           PERFORM CRG-VSCR.
       CON-PRO-RMNU.
           MOVE SCR-INST-GFL TO TSC-INST
           PERFORM HBL-CMN.
       FIN-PRO-RMNU.
           EXIT.
      ******************************************************************
       PRO-MENU SECTION.
       INI-PRO-MENU.
           IF WSS-DSP-SEC = 'S'
                DISPLAY '### PRO-MENU ####'.
           MOVE MNU-COD-MENU TO WSS-MENU.
           MOVE MNU-COD-NEMO TO WSS-NEMO.
           PERFORM BUS-MENU.
           IF NOT WSS-STAT-OKS
               MOVE LOW-VALUES TO OPC-FLD
               MOVE LOW-VALUES TO OP1-FLD
               MOVE FRM-MENS   TO OPC-GLS-MENS
               MOVE FRM-MENS   TO OP1-GLS-MENS
               GO TO FIN-PRO-MENU.
           PERFORM INI-OPCD VARYING J FROM 1 BY 1 UNTIL J > 20.
           PERFORM BUS-FUNC THRU FIN-BUS-FUNC UNTIL NOT
                                 ( WSS-STAT-OKS AND FIO-STAT-OKS AND
                                   MNU-COD-CMEN = WSS-MENU ).
           IF NOT WSS-STAT-OKS
               MOVE LOW-VALUES TO OPC-FLD
               MOVE LOW-VALUES TO OP1-FLD
               MOVE FRM-MENS   TO OPC-GLS-MENS
               MOVE FRM-MENS   TO OP1-GLS-MENS.
       FIN-PRO-MENU.
           EXIT.
       BUS-MENU SECTION.
       INI-BUS-MENU.
           IF WSS-DSP-SEC = 'S'
                DISPLAY '### BUS-MENU ####'.
           MOVE SPACES          TO MNU-COD-IMEN.
           MOVE MNU-COD-MENU    TO MNU-COD-CMEN.
           MOVE 'MNU-COD-IMEN'  TO FIO-AKEY.
           MOVE FIO-GET-NLS     TO FIO-CMND.
           PERFORM VID-MNU.
           IF FIO-STAT-OKS AND ( MNU-COD-CMEN = WSS-MENU )
               GO TO FIN-BUS-MENU.
           IF WSS-NEMO = 'SIS'
               MOVE 'GNS' TO MSG-COD-SIST
               MOVE 'MNUSIS NOOPC' TO MSG-COD-MENS
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS
               MOVE 2 TO WSS-STAT
           ELSE
               MOVE 'GNS' TO MSG-COD-SIST
               MOVE 'MNU    NOOPC' TO MSG-COD-MENS
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS
               MOVE 1 TO WSS-STAT.
       FIN-BUS-MENU.
           EXIT.
       INI-OPCD SECTION.
       INI-INI-OPCD.
           IF WSS-DSP-SEC = 'S'
                DISPLAY '### INI-OPCD ####'.
           MOVE SPACES TO OPC-COD-OPCI( J ).
           MOVE SPACES TO OPC-GLS-FMEN( J ).
      *    MOVE FRM-CPIM-AEY TO OPC-COD-OPCI-ATR( J ).
      *    MOVE FRM-CPIM-AEY TO OPC-GLS-FMEN-ATR( J ).
           ADD 20 J GIVING I.
           MOVE SPACES TO OPC-COD-OPCI( I ).
           MOVE SPACES TO OPC-GLS-FMEN( I ).
      *    MOVE FRM-CPIM-AEY TO OPC-COD-OPCI-ATR( I ).
      *    MOVE FRM-CPIM-AEY TO OPC-GLS-FMEN-ATR( I ).
           MOVE SPACES TO OP1-COD-OPCI( J ).
           MOVE SPACES TO OP1-GLS-FMEN( J ).
      *    MOVE FRM-CPIM-AEY TO OP1-COD-OPCI-ATR( J ).
      *    MOVE FRM-CPIM-AEY TO OP1-GLS-FMEN-ATR( J ).
       FIN-INI-OPCD.
           EXIT.
       BUS-FUNC SECTION.
       INI-BUS-FUNC.
      * llamada a la rutina de verificacion de permisos para verificar
      * un funcion
      * INI-PRV
      * considera que la funcion puede ser el llamado a otro sistema, si no
      * es asi entonces :
      * considera que la funcion puede ser un menu con lo cual muestra
      * de todas formas las opciones que ese menu tiene ( ya que 'puede'
      * tener privilegio para una de las opciones de ese menu, y en caso
      * que no tenga no importa, ya que se validara privilegio al intentar
      * llamar a la opcion ).
           MOVE 'GI'                TO UYP-COD-TDPU.
           MOVE SPACES              TO UYP-COD-PREG.
           IF MNU-COD-SIST IN MNU = TSC-SIST OR
              MNU-COD-SIST IN MNU NOT > SPACES
               MOVE TSC-SIST            TO UYP-COD-SIST
               MOVE MNU-COD-NEMO IN MNU TO UYP-COD-NEMO
               IF MNU-COD-TFUN IN MNU = 'MEN'
                   MOVE 'S' TO UYP-IND-RESP
                   GO TO CON-BUS-FUNC
               ELSE
                   NEXT SENTENCE
           ELSE
               MOVE MNU-COD-SIST IN MNU TO UYP-COD-SIST.
           MOVE 'GNSPPPRV' TO SYS-PROG.
           MOVE UYP-VARI   TO SYS-CMMA.
           MOVE +47        TO SYS-TCMA.
           MOVE SYS-LINK   TO SYS-CMND.
           PERFORM CAL-PRV.
      * FIN-PRV
       CON-BUS-FUNC.
           IF MNU-NUM-FILA < 3 OR MNU-NUM-FILA > 22
               MOVE 'GNS' TO MSG-COD-SIST
               MOVE 'MNUFILAINV' TO MSG-COD-MENS
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS
               MOVE 1 TO WSS-STAT
               GO TO FIN-BUS-FUNC.
           SUBTRACT 2 FROM MNU-NUM-FILA.
           IF MNU-NUM-COLU = 1
                MOVE '0' TO WSS-IFRM
                MULTIPLY MNU-NUM-FILA BY 2 GIVING I
                SUBTRACT 1 FROM I
                MOVE MNU-COD-OPCI TO OPC-COD-OPCI( I )
                MOVE MNU-GLS-FMEN TO OPC-GLS-FMEN( I )
      *DFHBMASB
      *         MOVE '8' TO OPC-COD-OPCI-ATR( I )
           ELSE
           IF MNU-NUM-COLU = 41
                MOVE '0' TO WSS-IFRM
                MULTIPLY MNU-NUM-FILA BY 2 GIVING I
                MOVE MNU-COD-OPCI TO OPC-COD-OPCI( I )
                MOVE MNU-GLS-FMEN TO OPC-GLS-FMEN( I )
      *DFHBMASB
      *         MOVE '8' TO OPC-COD-OPCI-ATR( I )
           ELSE
           IF MNU-NUM-COLU = 24
                MOVE '1' TO WSS-IFRM
                MOVE MNU-COD-OPCI TO OP1-COD-OPCI(MNU-NUM-FILA)
                MOVE MNU-GLS-FMEN TO OP1-GLS-FMEN(MNU-NUM-FILA)
      *DFHBMASB
      *         MOVE '8' TO OP1-COD-OPCI-ATR(MNU-NUM-FILA)
           ELSE
               MOVE 'GNS' TO MSG-COD-SIST
               MOVE 'MNUCOLUINV' TO MSG-COD-MENS
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS
               MOVE 1 TO WSS-STAT
               GO TO FIN-BUS-FUNC.
           IF WSS-IFRM = 0 AND UYP-IND-RESP NOT = 'S'
      *DFHBMASK
               MOVE '0' TO OPC-COD-OPCI-ATR( I )
               MOVE WSS-ATR-ES-TENUE TO
                    WSS-ATR-RC2-ELM IN WSS-ATR-RC2( I )
           ELSE
           IF WSS-IFRM = 1 AND UYP-IND-RESP NOT = 'S'
      *DFHBMASK
               MOVE WSS-ATR-ES-TENUE TO
                    WSS-ATR-RC1-ELM IN WSS-ATR-RC1( MNU-NUM-FILA )
               MOVE '0' TO OP1-COD-OPCI-ATR(MNU-NUM-FILA).
       NXT-BUS-FUNC.
           MOVE FIO-GET-NXT     TO FIO-CMND.
           MOVE 'MNU-COD-IMEN'  TO FIO-AKEY.
           PERFORM VID-MNU.
       FIN-BUS-FUNC.
           EXIT.
      ******************************************************************
       BUS-CRPF SECTION.
       INI-BUS-CRPF.
      *    IF WSS-DSP-SEC = 'S'
                DISPLAY '### BUS-CRPF ####' RPF.
                DISPLAY ' MNU-GLS-PROG ' MNU-GLS-PROG.
           MOVE 0 TO WSS-IND-CMND.
           MOVE MNU-GLS-PROG TO WSS-SIST.
           IF WSS-SIST NOT = 'GNS'
               MOVE MNU-COD-SIST TO WSS-SIST.
           MOVE SPACES       TO WSS-AUX-CRPF.
      *
           IF MNU-GLS-PROG NOT > SPACES
                MOVE 'GNSPPMEN' TO WSS-AUX-CMNP
                PERFORM BUS-PRMC
                GO TO FIN-BUS-CRPF.
      *
           MOVE MNU-GLS-PROG TO RPF-KEY-DPRO.
           MOVE 'C '         TO RPF-KEY-TRYC.
           MOVE SPACES       TO RPF-KEY-DARC.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM VID-RPF.
           IF NOT FIO-STAT-OKS
                MOVE 'GNSPPMEN' TO WSS-AUX-CMNP
                PERFORM BUS-PRMC
                GO TO FIN-BUS-CRPF.
           IF RPF-GLS-PRMT NOT > SPACES
               PERFORM BUS-PRMC
           ELSE
           IF RPF-GLS-PRMT NOT = 'NOMSG'
               MOVE RPF-GLS-PRMT TO WSS-AUX-PRMC
           ELSE
               MOVE SPACES TO WSS-AUX-PRMC.
           IF RPF-GLS-UARC NOT > SPACES
                MOVE 'GNSPPMEN' TO WSS-AUX-CMNP
           ELSE
                MOVE RPF-GLS-UARC TO WSS-AUX-CMNP.
           MOVE MNU-GLS-PROG TO RPF-KEY-DPRO.
           MOVE 'C0'         TO RPF-KEY-TRYC.
           MOVE FIO-GET-NLS  TO FIO-CMND.
           PERFORM VID-RPF.
           IF NOT FIO-STAT-OKS
                 GO TO FIN-BUS-CRPF.
           PERFORM LEE-CRPF.
           MOVE FIO-END-BRW TO FIO-CMND.
           PERFORM VID-RPF.
           PERFORM BUS-GLOS VARYING I FROM 1 BY 1 UNTIL I > 10.
      * INI-PRV
           PERFORM CHK-PRV-CMND.
      * FIN-PRV
       FIN-BUS-CRPF.
           EXIT.
       LEE-CRPF SECTION.
       INI-LEE-CRPF.
      *    IF WSS-DSP-SEC = 'S'
                DISPLAY '### LEE-CRPF ####' RPF.
           IF NOT ( FIO-STAT-OKS AND RPF-KEY-DPRO = MNU-GLS-PROG AND
                                     RPF-KEY-TREG = 'C' )
                   GO TO FIN-LEE-CRPF.
           IF MNU-COD-CMND IN MNU > SPACES AND
              MNU-COD-CMND = RPF-COD-CCMN
               MOVE MNU-COD-CMND TO WSS-AUX-CMND
               MOVE 1            TO WSS-IND-CMND.
           MOVE RPF-KEY-CORR TO I.
           ADD 1 I GIVING K.
           MOVE RPF-COD-CCMN TO WSS-COD-CMND( K )
           MOVE RPF-COD-CCPP TO WSS-COD-CCPP( K )
           MOVE RPF-IND-STPP TO WSS-IND-STPP( K )
           MOVE RPF-GLS-PRMT TO WSS-GLS-PRMT( K )
           MOVE RPF-GLS-CONF TO WSS-GLS-CONF( K )
           MOVE RPF-GLS-UARC TO WSS-GLS-UARC( K )
           MOVE FIO-GET-NXT TO FIO-CMND.
           PERFORM VID-RPF.
           GO TO INI-LEE-CRPF.
       FIN-LEE-CRPF.
           EXIT.
       BUS-MGKY SECTION.
       INI-BUS-MGKY.
           IF WSS-DSP-SEC = 'S'
                DISPLAY '### BUS-MGKY ####'.
           MOVE 'MSGKEY' TO MSG-COD-MENS.
           MOVE 'GNS'    TO MSG-COD-SIST.
           PERFORM GET-MSG.
      *    MOVE MSG-GLS-DESC TO SCR-MGKY.
       FIN-BUS-MGKY.
           EXIT.
       BUS-PRMC SECTION.
       INI-BUS-PRMC.
           IF WSS-DSP-SEC = 'S'
                DISPLAY '### BUS-PRMC ####'.
           IF MNU-COD-TFUN = 'MEN'
               MOVE 'PRMMEN' TO MSG-COD-MENS
           ELSE
               MOVE 'PRMPGI' TO MSG-COD-MENS.
           MOVE 'GNS'    TO MSG-COD-SIST.
           PERFORM GET-MSG.
           MOVE MSG-GLS-DESC TO WSS-AUX-PRMC.
       FIN-BUS-PRMC.
           EXIT.
       BUS-GLOS SECTION.
       INI-BUS-GLOS.
           IF WSS-DSP-SEC = 'S'
                DISPLAY '### BUS-GLOS ####'.
           IF WSS-COD-CMND( I ) NOT > SPACES
               GO TO FIN-BUS-GLOS.
           IF WSS-GLS-PRMT( I ) NOT > SPACES
               MOVE SPACES TO WSS-COD-MENS
               IF WSS-GLS-UARC( I ) NOT > SPACES
                   MOVE 'GNS'             TO MSG-COD-SIST
                   MOVE 'FLD'             TO WSS-COD-TMN1
                   MOVE WSS-COD-CCPP( I ) TO WSS-COD-TMN2
                   MOVE WSS-COD-MENS      TO MSG-COD-MENS
                   PERFORM GET-MSG
                   MOVE MSG-GLS-DESC TO WSS-GLS-PRMT( I )
               ELSE
                   MOVE 'GNS'             TO MSG-COD-SIST
                   MOVE 'SUB'             TO WSS-COD-TMN1
                   MOVE WSS-COD-CCPP( I ) TO WSS-COD-TMN2
                   MOVE WSS-COD-MENS      TO MSG-COD-MENS
                   PERFORM GET-MSG
                   MOVE MSG-GLS-DESC TO WSS-GLS-PRMT( I )
           ELSE
           IF WSS-GLS-PRMT( I ) = 'NOMSG'
               MOVE SPACES TO WSS-GLS-PRMT( I ).
           IF WSS-GLS-CONF( I ) NOT > SPACES
               MOVE SPACES TO WSS-COD-MENS
               MOVE 'GNS'             TO MSG-COD-SIST
               MOVE 'CNF'             TO WSS-COD-TMN1
               MOVE WSS-COD-CCPP( I ) TO WSS-COD-TMN2
               MOVE WSS-COD-MENS      TO MSG-COD-MENS
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO WSS-GLS-CONF( I )
           ELSE
           IF WSS-GLS-CONF( I ) = 'NOMSG'
               MOVE SPACES TO WSS-GLS-CONF( I ).
       FIN-BUS-GLOS.
           EXIT.
      ******************************************************************
       VID-MNU SECTION.
       INI-VID-MNU.
           IF WSS-DSP-SEC = 'S'
                DISPLAY '### VID-MNU ####'.
           MOVE TSC-SIST TO FIO-SIST.
           PERFORM GNS-FIO-MNU.
       FIN-VID-MNU.
           EXIT.
       VID-RPF SECTION.
       INI-VID-RPF.
           IF WSS-DSP-SEC = 'S'
                DISPLAY '### VID-RPF ####'.
           MOVE WSS-SIST TO FIO-SIST.
           PERFORM GNS-FIO-RPF.
           DISPLAY 'VID-RPF ' FIO-CMND FIO-STAT RPF.
       FIN-VID-RPF.
           EXIT.
      ******************************************************************
       PUT-MHDR SECTION.
       INI-PUT-MHDR.
           IF WSS-DSP-SEC = 'S'
                DISPLAY '### PUT-MHDR ####'.
           IF TSC-TFUN = 'XMC' OR 'XMX'
               MOVE 1 TO FRM-PLIN
               MOVE 0 TO FRM-NLIN
               MOVE FRM-CLR-FRM TO FRM-CMND
               PERFORM GNS-PRO-FRM
               GO TO FIN-PUT-MHDR.
           PERFORM GNSSCRHDR.
           MOVE 'GNSFHDR'     TO FRM-NAME.
           MOVE 'GNSAHDR'     TO FRM-NLIB.
           MOVE HDR-FLD       TO FRM-DFLD.
           MOVE FRM-SINI-DB1F TO FRM-SINI.
           MOVE FRM-INI       TO FRM-CMND.
       FIN-PUT-MHDR.
           EXIT.
       GNSSCRHDR SECTION.
       INI-GNSSCRHDR.
           IF WSS-DSP-SEC = 'S'
                DISPLAY '### GNSSCRHDR ####'.
           MOVE SPACES       TO HEA-DOBL.
           MOVE MNU-GLS-FPRO TO HEA-SIMP.
           PERFORM HDR-TITU.
           MOVE TSC-SIST     TO HDR-COD-SIST.
           MOVE MNU-COD-OPCI TO HDR-GLS-NFRM.
           MOVE HEA-DOBL     TO HDR-GLS-FPRO.
           PERFORM GET-FHOY.
           MOVE HOY-DHOY TO HEA-NUM-DMSA IN HEA-FEC-DMSA.
           MOVE HOY-MHOY TO HEA-NUM-MMSA IN HEA-FEC-DMSA.
           MOVE HOY-SHOY TO HEA-NUM-SMSA IN HEA-FEC-DMSA.
           MOVE HOY-AHOY TO HEA-NUM-AMSA IN HEA-FEC-DMSA.
           MOVE '/'      TO HEA-GLS-SLA1 HEA-GLS-SLA2.
           MOVE HEA-FEC-DMSA TO HDR-FEC-DMSA IN HDR-FLD.
           IF TSC-SIST = 'GNS'
               MOVE TSC-SISG TO HDR-COD-FUNC
           ELSE
               MOVE SPACES TO HDR-COD-FUNC.
      *JSS MOVE EIBTRMID TO HDR-GLS-TRMI.
      *JSS-IBM MOVE SPACES TO HDR-GLS-HORA.
           MOVE SPACES TO HDR-GLS-GLS1
                          HDR-GLS-GLS2
                          HDR-GLS-GLS3.
           PERFORM GNS-ERR-QUE.
           MOVE EIBTRMID TO QUE-TERM.
           MOVE 'PKB'    TO QUE-TYPE.
           MOVE 1     TO QUE-NITM.
           MOVE +3000 TO QUE-LITM.
           MOVE QUE-GET TO QUE-CMND.
           PERFORM GNS-PRO-QUE.
           IF QUE-STAT = QUE-STAT-OKS
               MOVE QUE-DATA TO WSS-TSC-AUXI
               MOVE '8'      TO HDR-GLS-GLS3-ATR
               IF QUE-IKEY = 'V31'
                   MOVE WSS-TSC-OPCI TO HDR-GLS-GLS3
               ELSE
                   MOVE WSS-CMA-OPCI TO HDR-GLS-GLS3.

           MOVE EIBTRMID TO QUE-TERM.
           MOVE 'KYM'    TO QUE-TYPE.
           MOVE 1     TO QUE-NITM.
           MOVE +3000 TO QUE-LITM.
           MOVE QUE-GET TO QUE-CMND.
           PERFORM GNS-PRO-QUE.
           IF QUE-STAT = QUE-STAT-OKS
               MOVE '8'   TO HDR-GLS-GLS2-ATR
               MOVE '   ' TO HDR-GLS-GLS2
               MOVE '   ' TO HDR-GLS-GLS1
               MOVE '   ' TO HDR-GLS-GLS3.
       FIN-GNSSCRHDR.
           EXIT.
       HDR-TITU SECTION.
       INI-HDR-TITU.
           IF WSS-DSP-SEC = 'S'
                DISPLAY '### HDR-TITU ####'.
           IF HEA-SIMP = SPACES
                      GO TO FIN-HDR-TITU.
           PERFORM BUS-LIMI VARYING IMIN FROM 1 BY 1
                      UNTIL HEA-GLS-SIMP(IMIN) NOT = SPACES.
           PERFORM BUS-LIMI VARYING IMAX FROM 31 BY -1
                      UNTIL HEA-GLS-SIMP(IMAX) NOT = SPACES.
           IF MNU-IND-EXGL IN MNU = 'N'
               COMPUTE L = ( 61 - ( IMAX - IMIN + 1 ) ) / 2
               MOVE 1 TO I
           ELSE
               COMPUTE
                  L = ( 61 - ( 2 * ( IMAX - IMIN + 1 ) - 1 ) ) / 2 + 1
               MOVE 2 TO I.
           PERFORM PUT-TITU
                   VARYING K FROM IMIN BY 1 UNTIL K > IMAX.
       FIN-HDR-TITU.
           EXIT.
       BUS-LIMI SECTION.
       INI-BUS-LIMI.
           IF WSS-DSP-SEC = 'S'
                DISPLAY '### BUS-LIMI ####'.
       FIN-BUS-LIMI.
           EXIT.
       PUT-TITU SECTION.
       INI-PUT-TITU.
           IF WSS-DSP-SEC = 'S'
                DISPLAY '### PUT-TITU ####'.
           MOVE HEA-GLS-SIMP( K ) TO HEA-GLS-DOBL( L ).
           ADD I TO L.
       FIN-PUT-TITU.
           EXIT.
      ******************************************************************
       PUT-MSCR SECTION.
       INI-PUT-MSCR.
           IF WSS-DSP-SEC = 'S'
                DISPLAY '### PUT-MSCR ####'.
           IF TSC-NMAP NOT > SPACES AND TSC-NLIB NOT > SPACES
               IF WSS-IFRM = '0'
                   MOVE 'GNSFOPC' TO TSC-NMAP
                   MOVE 'GNSAOPC' TO TSC-NLIB
               ELSE
                   MOVE 'GNSFOP1' TO TSC-NMAP
                   MOVE 'GNSAOP1' TO TSC-NLIB.
           IF TSC-NMAP NOT > SPACES
               MOVE TSC-NLIB TO TSC-NMAP.
           IF TSC-NLIB NOT > SPACES
               MOVE TSC-NMAP TO TSC-NLIB.
           MOVE TSC-NMAP TO FRM-NAME.
           MOVE TSC-NLIB TO FRM-NLIB.
           IF WSS-IFRM = '0'
               MOVE OPC-FLD TO FRM-DFLD
           ELSE
               MOVE OP1-FLD TO FRM-DFLD.
      *    MOVE FRM-SINI-DBNF TO FRM-SINI.
           IF TSC-TFUN = 'MEN'
               MOVE FRM-SINI-DBNF TO FRM-SINI
           ELSE
               MOVE FRM-SINI-DBLF TO FRM-SINI.
      *
           MOVE FRM-INI       TO FRM-CMND.
       FIN-PUT-MSCR.
           EXIT.
      ******************************************************************
       HBL-CMN SECTION.
       INI-HBL-CMN.
           IF WSS-DSP-SEC = 'S'
                DISPLAY '### HBL-CMN ####'.
           IF WSS-CCOD-APCT OR WSS-CCOD-ABM0
               MOVE 'GNS'     TO MSG-COD-SIST
               MOVE 'CICABND' TO MSG-COD-TMSG
               MOVE WSS-CCOD  TO MSG-COD-CMSG
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC IN MSG TO TRL-GLS-MENS IN TRL-FLD.
           IF TSC-TFUN = 'HMX' OR 'XMX'
               MOVE LOW-VALUES TO TRL-GLS-TERM IN TRL-FLD
               MOVE LOW-VALUES TO TRL-COD-CMND IN TRL-FLD
               MOVE LOW-VALUES TO TRL-GLS-PRMT IN TRL-FLD
               MOVE LOW-VALUES TO TRL-COD-CACC IN TRL-FLD
               GO TO CON-HBL-CMN.
           PERFORM PUT-CMND VARYING CMN-K FROM 1 BY 1 UNTIL CMN-K > 10.
           IF TSC-TFUN = 'MEN'
               MOVE 'PFSMEN' TO MSG-COD-MENS
           ELSE
               MOVE 'PFSCMN' TO MSG-COD-MENS.
           MOVE 'GNS' TO MSG-COD-SIST.
           PERFORM GET-MSG.
           MOVE MSG-GLS-DESC TO WSS-MEN1.
           MOVE MSG-GLS-MENS TO WSS-MEN2.
           MOVE WSS-MENS TO TRL-GLS-TERM.
           MOVE CMN-IDX-CCMN TO TRL-COD-CMND.
           MOVE TSC-PRMC     TO TRL-GLS-PRMT.
           MOVE SPACES       TO TRL-COD-CACC.
       CON-HBL-CMN.
           MOVE FRM-CPIM-UBY TO TRL-COD-CACC-ATR.
           MOVE -1           TO TRL-COD-CACC-LEN.
           PERFORM CMN-PUTA.
           PERFORM CMN-EXIT.
       FIN-HBL-CMN.
           EXIT.
       PUT-CMND SECTION.
       INI-PUT-CMND.
           IF WSS-DSP-SEC = 'S'
                DISPLAY '### PUT-CMND ####'.
           MOVE TSC-CCMN ( CMN-K ) TO CMN-COD-CCMN ( CMN-K ).
       FIN-PUT-CMND.
             EXIT.
      ******************************************************************
       CMN-PUTA SECTION.
       INI-CMN-PUTA.
           IF WSS-DSP-SEC = 'S'
                DISPLAY '### CMN-PUTA ####'.
           PERFORM MOV-WFH.
           PERFORM MOV-WFT.
           MOVE 'GNSFCMN' TO FRM-NAME.
           MOVE 'GNSACMN' TO FRM-NLIB.
      *JSS
      *    MOVE FRM-CPIM-AEY TO TRL-GLS-MENS-ATR.
           MOVE FRM-CPSF-AEY TO TRL-GLS-MENS-ATR.
      *
           MOVE TRL-FLD   TO FRM-DFLD.
           DISPLAY '### TSC-TFUN ' TSC-TFUN.
           IF TSC-TFUN = 'MEN'
               MOVE LOW-VALUES TO FRM-DFLD
               IF WSS-IFRM = '0'
                   PERFORM MOV-RC2
                   MOVE RC2-FLD TO FRM-DFLD
               ELSE
                   PERFORM MOV-RC1
                   MOVE RC1-FLD TO FRM-DFLD.
           IF WSS-DFRM-LEYO-MAPA-BD = 'S'
                MOVE WSS-DFRM-DATA TO FRM-DFLD
                PERFORM MOV-CAC-ENV
                PERFORM MOV-FRM-TSC-HDR
      *         DISPLAY 'MOV-FRM-TSC SCR-HDR ' TSC-HDR-FLD
      *         DISPLAY 'MOV-FRM-TSC SCR-TRL ' TSC-TRL-FLD
           ELSE
                PERFORM MOV-FRM-TSC-TRL.
           MOVE FRM-PUT-ALL TO FRM-CMND.
           PERFORM GNS-PRO-FRM.
       FIN-CMN-PUTA.
           EXIT.
       CMN-PUTA-RCT SECTION.
       INI-CMN-PUTA-RCT.
           IF WSS-DSP-SEC = 'S'
                DISPLAY '### CMN-PUTA-RCT ####'.
           MOVE 'GNSFCMN' TO FRM-NAME.
           MOVE 'GNSACMN' TO FRM-NLIB.
      *JSS
      *    MOVE FRM-CPIM-AEY TO TRL-GLS-MENS-ATR.
           MOVE FRM-CPSF-AEY TO TRL-GLS-MENS-ATR.
      *
           PERFORM MOV-WFT.
           MOVE TRL-FLD   TO FRM-DFLD.
           DISPLAY '### TSC-TFUN-RCT ' TSC-TFUN.
      *    IF TSC-TFUN = 'MEN'
               MOVE LOW-VALUES TO FRM-DFLD
               PERFORM MOV-RCT
               MOVE 'N' TO WSS-DSP-TRC
               MOVE RCT-FLD TO FRM-DFLD.

           MOVE FRM-PUT-ALL TO FRM-CMND.
           PERFORM GNS-PRO-FRM.
       FIN-CMN-PUTA-RCT.
           EXIT.

       CMN-EXIT SECTION.
       INI-CMN-EXIT.
           IF WSS-DSP-SEC = 'S'
                DISPLAY '### CMN-EXIT ####'.
           MOVE 'K' TO TSC-ICMN.
      *    SE MUEVE INMEDIATAMENTE LEIDO
      *    MOVE WSS-DFRM-LRCV TO TSC-LRCV.
           PERFORM GNS-PUT-TSC.
           MOVE WSS-GLS-TRAN TO SYS-NTRN.
      *     MOVE 'K'      TO SCR-ICMN.
      *     MOVE SCR-VARI TO SYS-CMMA.
      *     MOVE SCR-TCMA TO SYS-TCMA.
           MOVE ' ' TO SYS-CMMA.
           MOVE +1  TO SYS-TCMA.

           MOVE SYS-RTRN TO SYS-CMND.
           PERFORM GNS-PRO-SYS.
       FIN-CMN-EXIT.
           EXIT.
      ******************************************************************
       BUS-CMND SECTION.
       INI-BUS-CMND.
           IF WSS-DSP-SEC = 'S'
                DISPLAY '### BUS-CMND ####'.
           MOVE 'CMD    NEXST' TO MSG-COD-MENS.
           MOVE 1 TO CMN-I.
           SET TSC-ITBL TO 1.
           SEARCH TSC-TABL VARYING CMN-I
                  WHEN TSC-CCMN( TSC-ITBL ) = WSS-OPCI
                         GO TO SET-BUS-CMND.
           GO TO FIN-BUS-CMND.
       SET-BUS-CMND.
           MOVE SPACES TO MSG-COD-MENS.
       FIN-BUS-CMND.
           EXIT.
       PUT-DCMN SECTION.
       INI-PUT-DCMN.
           IF WSS-DSP-SEC = 'S'
                DISPLAY '### PUT-DCMN ####'.
           MOVE CMN-I TO TSC-I.
           MOVE TSC-CCMN( TSC-I ) TO TSC-CMND.
      *ESTOS MOVES SE HACEN AL FINAL EN LA 'SECTION' CAL-PROG
      *     MOVE TSC-CCMN( TSC-I ) TO SCR-CMND.
      *     MOVE TSC-CCPP( TSC-I ) TO SCR-CCPP.
      *     MOVE TSC-STPP( TSC-I ) TO SCR-STPP.
      *     MOVE TSC-PRMT( TSC-I ) TO SCR-PRMT.
      *     MOVE TSC-CONF( TSC-I ) TO SCR-CONF.
      *     MOVE SCR-INST-HKY          TO SCR-INST.
      *
           IF TSC-TFUN = 'HMX' OR 'XMX'
               MOVE LOW-VALUES TO TRL-GLS-TERM IN TRL-FLD
               MOVE LOW-VALUES TO TRL-COD-CMND IN TRL-FLD
               MOVE LOW-VALUES TO TRL-GLS-PRMT IN TRL-FLD
               MOVE LOW-VALUES TO TRL-COD-CACC IN TRL-FLD
               MOVE SPACES     TO TRL-GLS-MENS IN TRL-FLD
               GO TO CON-PUT-DCMN.
           MOVE SPACES                TO CMN-IDX-CCMN.
           MOVE TSC-CCMN( TSC-I ) TO CMN-COD-CCMN( TSC-I ).
           MOVE CMN-IDX-CCMN          TO TRL-COD-CMND.
           MOVE SPACES                TO TRL-GLS-PRMT TRL-COD-CACC.

      * ISP:  17-MAR-1993 07:54:47
           IF TSC-SIST = 'GNS' AND
              TSC-SISG > SPACES
                MOVE TSC-SISG TO MSG-COD-SIST
           ELSE
                MOVE TSC-SIST TO MSG-COD-SIST.
           MOVE '%'          TO WSS-COD-MSG1.
           MOVE TSC-PROG     TO WSS-COD-MSG2.
           MOVE TSC-CMND     TO WSS-COD-MSG3.
           MOVE WSS-COD-MSG0 TO MSG-COD-MENS.
           PERFORM GET-MSG.
           IF FIO-STAT-OKS AND MSG-IND-VIGE = 'S'
               MOVE MSG-GLS-DESC TO WSS-MEN1
               MOVE MSG-GLS-MENS TO WSS-MEN2
               MOVE WSS-MENS TO TRL-GLS-TERM
           ELSE
               MOVE 'GNS'                 TO MSG-COD-SIST
               MOVE SPACES                TO WSS-COD-MENS
               MOVE 'PFSPGI'              TO WSS-COD-TMSG
               MOVE TSC-STPP( TSC-I ) TO WSS-COD-TMN3
               MOVE WSS-COD-MENS          TO MSG-COD-MENS
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO WSS-MEN1
               MOVE MSG-GLS-MENS TO WSS-MEN2
               MOVE WSS-MENS TO TRL-GLS-TERM.
      *    MOVE SCR-MGKY TO TRL-GLS-MENS.
           PERFORM BUS-MGKY.
           MOVE MSG-GLS-DESC TO TRL-GLS-MENS.
      * ISP:  17-MAR-1993 07:54:47

       CON-PUT-DCMN.
      *    MOVE FRM-CPIM-AEY TO TRL-COD-CACC-ATR.
           MOVE FRM-CPSF-AEY TO TRL-COD-CACC-ATR.
           MOVE -1           TO TRL-COD-CACC-LEN.
       FIN-PUT-DCMN.
           EXIT.
       GET-PROV SECTION.
       INI-GET-PROV.
           IF WSS-DSP-SEC = 'S'
                DISPLAY '### GET-PROV ####'.
           MOVE SPACES TO TSC-PROV.
           MOVE SPACES TO TSC-NTRV.
           IF TSC-TFUN NOT = 'PTC'
               GO TO FIN-GET-PROV.
           MOVE TSC-PROG     TO RPF-KEY-DPRO.
           MOVE 'C '         TO RPF-KEY-TRYC.
           MOVE SPACES       TO RPF-KEY-DARC.
      *
           MOVE TSC-PROG TO FIO-SIST.
           IF FIO-SIST NOT = 'GNS'
               MOVE TSC-SIST TO FIO-SIST.
      *
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM GNS-FIO-RPF.
           IF NOT FIO-STAT-OKS
               GO TO FIN-GET-PROV.
           MOVE RPF-GLS-ABRT IN RPF TO WSS-PPPV.
           MOVE WSS-PROV            TO TSC-PROV.
           MOVE WSS-NTRV            TO TSC-NTRV.
       FIN-GET-PROV.
           EXIT.
       GNS-PRO-TSC SECTION.
       INI-GNS-PRO-TSC.
           IF WSS-DSP-SEC = 'S'
                DISPLAY '### GNS-PRO-TSC ####' QUE-CMND.
           MOVE TSC-TERM TO QUE-TERM.
           MOVE TSC-TYPE TO QUE-TYPE.
           MOVE TSC-LITM TO QUE-LITM.
           MOVE 1        TO QUE-NITM.
      *    IF QUE-CMND = QUE-PUT OR
      *       QUE-CMND = QUE-MOD
      *        MOVE TSC-ITEM TO QUE-ITEM.
           PERFORM GNS-PRO-QUE.
      *    IF QUE-STAT = QUE-STAT-OKS AND
      *       QUE-CMND = QUE-GET
      *        MOVE QUE-ITEM TO TSC-ITEM.
       FIN-GNS-PRO-TSC.
           EXIT.
       GNS-PUT-TSC SECTION.
       INI-GNS-PUT-TSC.
      *    DISPLAY ' EN PUT-TSC HDR ' TSC-HDR-FLD.
      *    DISPLAY ' EN PUT-TSC TRL ' TSC-TRL-FLD.
           MOVE QUE-GET  TO QUE-CMND.
           PERFORM GNS-PRO-TSC.
           IF QUE-STAT = QUE-STAT-OKS
               MOVE QUE-MOD TO QUE-CMND
           ELSE
               MOVE QUE-PUT TO QUE-CMND.
           MOVE TSC-ITEM TO QUE-ITEM.
           PERFORM GNS-PRO-TSC.
       FIN-GNS-PUT-TSC.
           EXIT.
       GNS-DEL-TSC SECTION.
       INI-GNS-DEL-TSC.
           IF WSS-DSP-SEC = 'S'
                DISPLAY '### GNS-DEL-TSC ####'.
           MOVE TSC-TERM TO QUE-TERM.
           MOVE TSC-TYPE TO QUE-TYPE.
           MOVE TSC-LITM TO QUE-LITM.
           MOVE 1        TO QUE-NITM.
           MOVE TSC-ITEM TO QUE-ITEM.
           MOVE QUE-DEL  TO QUE-CMND.
           PERFORM GNS-PRO-QUE.
       FIN-GNS-DEL-TSC.
           EXIT.
       GNS-GET-TSC SECTION.
       INI-GNS-GET-TSC.
           IF WSS-DSP-SEC = 'S'
                DISPLAY '### GNS-GET-TSC ####'.
           MOVE EIBTRMID TO TSC-TERM.
      *    MOVE +720     TO TSC-LITM.
           MOVE TSC-TTSC TO TSC-LITM.

           MOVE TSC-TERM TO QUE-TERM.
           MOVE TSC-TYPE TO QUE-TYPE.
           MOVE TSC-LITM TO QUE-LITM.
           MOVE 1        TO QUE-NITM.
           MOVE QUE-GET  TO QUE-CMND.
           PERFORM GNS-PRO-QUE.
           IF QUE-STAT = QUE-STAT-OKS
               MOVE QUE-ITEM TO TSC-ITEM
      *        DISPLAY '### GET-TSC OK TSC      #### ' TSF
           ELSE
               DISPLAY '### GNS-GET-TSC == > NO OK ####'.
      *ESTE MOVE ES PARA CONTROLAR LA VUELTA DE CONGELAR Y OTRAS
      *SITUACIONES
           IF ( WSS-SEFN = WSS-SXCT-RED ) OR ( WSS-SCOD = 'S' OR 'SD' )
               MOVE SCR-INST-HCM TO TSC-INST.
      *
           MOVE TSC-SIST TO SCR-SIST.
      * CUANDO UN PGI LLAMA A GNSPPMEN, SE SIMULA COMO SI EL USUARIO
      * ELIGIERA EL PROGRAMA COMO OPCION EN UN MENU
           IF WSS-AUX-TRAN = 'RPGM'
               MOVE SCR-INST-GFL TO TSC-INST
               MOVE TSC-SIST     TO WSS-AUX-CACC-SIST
               MOVE TSC-OPCI     TO WSS-AUX-CACC-OPCI
               MOVE WSS-AUX-CACC TO TRL-COD-CACC IN TRL-FLD.
           IF WSS-DSP-SEC = 'S'
               DISPLAY 'SCR-SIST GET-TSC ' SCR-SIST.
           GO TO FIN-GNS-GET-TSC.
       NEX-GNS-GET-TSC.
           MOVE 'NO EXISTE PARA PROCESADOR MENU, TEMP. STORAGE : '
                         TO SYS-MEN1.
           MOVE TSC-COLA TO SYS-MEN2.
           MOVE SYS-ABOR  TO SYS-CMND.
           PERFORM GNS-PRO-SYS.
       FIN-GNS-GET-TSC.
           EXIT.
       GNS-PUT-IDD SECTION.
       INI-GNS-PUT-IDD.
           IF WSS-DSP-SEC = 'S'
                DISPLAY '### GNS-PUT-IDD ####'.
       FIN-GNS-PUT-IDD.
           EXIT.
       CAL-PROG SECTION.
       INI-CAL-PROG.
           IF WSS-DSP-SEC = 'S'
                DISPLAY '### CAL-PROG ####'.
           IF TSC-CIDD > SPACES
               MOVE TSC-CIDD TO IDD-COD-CIDD IN IDD
                                IFD-COD-CIFD IN IFD
               GO TO CON-CAL-PROG.
           MOVE TSC-PROG     TO RPF-KEY-DPRO.
           MOVE 'A '         TO RPF-KEY-TRYC.
           MOVE SPACES       TO RPF-KEY-DARC.
           MOVE FIO-GET-KEY TO FIO-CMND.
           MOVE TSC-PROG TO WSS-SIST.
           IF WSS-SIST NOT = 'GNS'
               MOVE TSC-SIST TO WSS-SIST.
           PERFORM VID-RPF.
           IF NOT FIO-STAT-OKS
               MOVE 'DEFAULT' TO IDD-COD-CIDD IN IDD
                                 IFD-COD-CIFD IN IFD
           ELSE
           IF RPF-COD-CIFD IN RPF NOT > SPACES
               MOVE 'DEFAULT' TO IDD-COD-CIDD IN IDD
                                 IFD-COD-CIFD IN IFD
           ELSE
               MOVE RPF-COD-CIFD IN RPF TO IDD-COD-CIDD IN IDD
                                           IFD-COD-CIFD IN IFD.
           MOVE IDD-COD-CIDD IN IDD TO TSC-CIDD.
       CON-CAL-PROG.
      *IDD
      *EN RIGOR SE DEBERIA PREGUNTAR IF ( TSC-TIND = 'T' ==> IDD EN TS )
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM GNS-FIO-IDD.
           IF NOT FIO-STAT-OKS
               PERFORM BUS-FSIS
           ELSE
               MOVE IDD TO IDD-REGI.
           PERFORM GNS-PUT-IDD.
           MOVE WSS-QIDD TO SCR-QIDD.
           MOVE QUE-LITM TO SCR-LIDD.
      *
      *IFD
           IF ( TSC-TIND = 'C' ) OR ( TSC-TINF NOT > SPACES )
               MOVE FIO-GET-KEY TO FIO-CMND
               PERFORM GNS-FIO-IFD
               IF NOT FIO-STAT-OKS
                   MOVE 'NO EXISTE REGISTRO IFD CON LLAVE :' TO SYS-MEN1
                   MOVE IFD-COD-CIFD IN IFD                  TO SYS-MEN2
                   MOVE SYS-ABOR TO SYS-CMND
                   PERFORM GNS-PRO-SYS
               ELSE
                   MOVE IFD-GLS-DATA IN IFD TO IFD-FSIS.
      *
           IF TSC-UARC( TSC-I ) > SPACES
               MOVE TSC-UARC( TSC-I ) TO AUX-UARC
               MOVE TSC-PROG TO AUX-PROG
               MOVE TSC-NTRN TO AUX-NTRN
               MOVE AUX-PRGM TO TSC-UARC( TSC-I )
               MOVE AUX-RPRG TO TSC-PROG
               MOVE AUX-RTRN TO TSC-NTRN.
           MOVE 'P'          TO TSC-ICMN.
           MOVE SCR-INST-HCM TO TSC-INST.
           PERFORM GNS-PUT-TSC.
      *SE CARGAN VARIABLES DEPENDIENDO DE TSC-TINF
           IF ( TSC-TINV = 'C' ) OR ( TSC-TINF NOT > SPACES )
               PERFORM PRO-MOVE-SCR1
           ELSE
               PERFORM PRO-MOVE-SCR2.
      *GRABA EN TEMPORARY STORAGE, LAS VARIABLES SCR2
           IF TSC-TINV = 'T'
               PERFORM PRO-PQTS-SCR2.
           IF ( TSC-TINV = 'O' OR 'T' ) AND ( EIBCALEN = 29 )
      *JSS-IBM Averigua si existe cola de seteo de llaves EN ESTE CASO
      *SOLO PARA V31 Y PARA ZOOM ( EIBCALEN = 29 )
               PERFORM GNS-ERR-QUE
               MOVE EIBTRMID TO QUE-TERM
               MOVE 'KYM'    TO QUE-TYPE
               MOVE 1     TO QUE-NITM
               MOVE +3000 TO QUE-LITM
               MOVE QUE-GET TO QUE-CMND
               PERFORM GNS-PRO-QUE
               IF QUE-STAT = QUE-STAT-OKS
                   MOVE 'VSN'       TO TAB-COD-TTAB IN TAB
                   MOVE 'RECLLAVES' TO TAB-COD-CTAB IN TAB
                   MOVE 'GNS'       TO FIO-SIST
                   MOVE FIO-GET-KEY TO FIO-CMND
                   PERFORM GNS-FIO-TAB
                   IF ( FIO-STAT-OKS AND TAB-MSC-STAT IN TAB = 'S' ) OR
                      ( EIBCALEN = 29 )
                       MOVE 'GKY' TO OSC-INST SCR-INST
      *SE LLAMA AL PROGRAMA SEGUN TIPO DE TRASPASO DE CONTROL, ANTES
      *SE CARGAN LAS VARIABLES FRM SEGUN CORRESPONDA DEPENDIENDO DE TSC-
                       PERFORM PRO-MOVE-VSYS
                       MOVE 'GNSPPPKE' TO SYS-PROG
                   ELSE
                       PERFORM PRO-MOVE-VSYS
               ELSE
                   PERFORM PRO-MOVE-VSYS
           ELSE
               PERFORM PRO-MOVE-VSYS.
      *
           IF TSC-TCTL = 'XCTL'
               PERFORM PRO-CALL-XCTL
      *     ELSE
      *     IF TSC-TCTL = 'LINK'
      *         PERFORM PRO-CALL-LINK
      *     ELSE
      *     IF TSC-TCTL = 'STAR'
      *         PERFORM PRO-CALL-STAR
           ELSE
           IF TSC-TCTL = 'RTTR'
               PERFORM PRO-CALL-RTTR
           ELSE
               PERFORM PRO-CALL-XCTL.
       FIN-CAL-PROG.
           EXIT.
       PRO-MOVE-SCR1 SECTION.
       INI-PRO-MOVE-SCR1.
           IF WSS-DSP-SEC = 'S'
                DISPLAY '### PRO-MOVE-SCR1 ####'.
           MOVE +1110              TO OSC-TCMA.
           MOVE TSC-SIST           TO OSC-SIST.
           MOVE TSC-OPCI           TO OSC-FUNC.
           MOVE TSC-NEMO           TO OSC-NEMO.
           MOVE TSC-NTRV           TO OSC-NTRV.
           MOVE TSC-NTRN           TO OSC-NTRN.
           MOVE TSC-PROG           TO OSC-PROG.
           MOVE TSC-NLIB           TO OSC-NLIB.
           MOVE TSC-NMAP           TO OSC-NMAP.
           MOVE TSC-LDOC           TO OSC-LDOC.
           MOVE TSC-NDOC           TO OSC-NDOC.
           MOVE TSC-FRET           TO OSC-FRET.
           MOVE TSC-IPRV           TO OSC-IPRV.
           MOVE TSC-SISG           TO OSC-SISG.
           IF TSC-TINS > SPACES
               MOVE TSC-TINS       TO OSC-INST
           ELSE
               MOVE SCR-INST-HKY   TO OSC-INST.
           MOVE TSC-TFUN           TO OSC-TFUN.
           MOVE TSC-CMNP           TO OSC-CMNP.
           MOVE TSC-FFLD           TO OSC-FFLD.
           MOVE TSC-I              TO OSC-I.
      *    MOVE TSC-CMND           TO OSC-CMND.
           MOVE TSC-CCMN( TSC-I )  TO OSC-CMND.
           MOVE TSC-PRMC           TO OSC-PRMC.
           MOVE TSC-CCPP( TSC-I )  TO OSC-CCPP.
           MOVE TSC-STPP( TSC-I )  TO OSC-STPP.
           MOVE 1 TO FRM-IFLD.
       LUP-PRO-MOVE-SCR1.
           MOVE TSC-CCMN(FRM-IFLD) TO OSC-COD-CCMN(FRM-IFLD).
           MOVE TSC-CCPP(FRM-IFLD) TO OSC-COD-CCPP(FRM-IFLD).
           MOVE TSC-STPP(FRM-IFLD) TO OSC-IND-STPP(FRM-IFLD).
           MOVE TSC-PRMT(FRM-IFLD) TO OSC-GLS-PRMT(FRM-IFLD).
           MOVE TSC-CONF(FRM-IFLD) TO OSC-GLS-CONF(FRM-IFLD).
           MOVE TSC-UARC(FRM-IFLD) TO OSC-GLS-UARC(FRM-IFLD).
           ADD 1 TO FRM-IFLD.
           IF FRM-IFLD NOT > 10
               GO TO LUP-PRO-MOVE-SCR1.
           MOVE TSC-USER           TO OSC-USER.
           MOVE TSC-OTRN           TO OSC-OTRN.
           MOVE TSC-PROV           TO OSC-PROV.
           MOVE 'C'                TO OSC-ICMN.
       FIN-PRO-MOVE-SCR1.
           EXIT.
      *HACE MOVE A VARIABLES DE PROGRAMA ( NUEVA VERSION )
       PRO-MOVE-SCR2 SECTION.
       INI-PRO-MOVE-SCR2.
           IF WSS-DSP-SEC = 'S'
                DISPLAY '### PRO-MOVE-SCR2 ####'.
           MOVE +250               TO SCR-TCMA.
           MOVE TSC-SIST           TO SCR-SIST.
           MOVE TSC-SISG           TO SCR-SISG.
           MOVE TSC-NTRN           TO SCR-NTRN.
           MOVE TSC-PROG           TO SCR-PROG.
           DISPLAY 'SCR-PROG ' SCR-PROG.
           MOVE TSC-NTRV           TO SCR-NTRV.
           MOVE TSC-PROV           TO SCR-PROV.
           MOVE TSC-NLIB           TO SCR-NLIB.
           MOVE TSC-NMAP           TO SCR-NMAP.
           IF TSC-TINS > SPACES
               MOVE TSC-TINS       TO SCR-INST
           ELSE
               MOVE SCR-INST-HKY   TO SCR-INST.
           MOVE TSC-CMNP           TO SCR-CMNP.
      *    MOVE TSC-CMND           TO SCR-CMND.
           MOVE TSC-CCMN( TSC-I )  TO SCR-CMND.
           MOVE TSC-CCPP( TSC-I )  TO SCR-CCPP.
           MOVE TSC-STPP( TSC-I )  TO SCR-STPP.
           MOVE TSC-PRMT( TSC-I )  TO SCR-PRMT.
           MOVE TSC-CONF( TSC-I )  TO SCR-CONF.
           MOVE TSC-USER           TO SCR-USER.
           MOVE TSC-OTRN           TO SCR-OTRN.
           MOVE 'C'                TO SCR-ICMN.
      *                                SCR-QIDD
      *                                SCR-LIDD
           MOVE TSC-NEMO           TO SCR-NEMO.
           MOVE TSC-LDOC           TO SCR-LDOC.
           MOVE TSC-NDOC           TO SCR-NDOC.
           MOVE TSC-FRET           TO SCR-FRET.
           MOVE TSC-IPRV           TO SCR-IPRV.
           MOVE TSC-FFLD           TO SCR-FFLD.
      * DE ESTA FORMA FUNCIONA EL CORRECTO DESPLIEGUE DE LOS
      * COMANDOS EN UNISYS, INCLUSIVE CUANDO SE INGRESA VIA
      * OPCION,COMNADO, QUE ES DONDE FALLABA O CUANDO EXISTIA
      * UN COMANDO EN MENU
           MOVE TRL-COD-CMND IN TRL-FLD TO TSC-TRL-COD-CMND.

           PERFORM MOV-TSC-SCR.
       FIN-PRO-MOVE-SCR2.
           EXIT.
       PRO-PQTS-SCR2 SECTION.
       INI-PRO-PQTS-SCR2.
           IF WSS-DSP-SEC = 'S'
                DISPLAY '### PRO-PQTS-SCR2 ####'.
       FIN-PRO-PQTS-SCR2.
           EXIT.
       PRO-MOVE-VSYS SECTION.
       INI-PRO-MOVE-VSYS.
           IF WSS-DSP-SEC = 'S'
                DISPLAY '### PRO-MOVE-VSYS #### TSC-TINF ' TSC-TINF.
           DISPLAY 'SCR-VARI ' SCR-VARI.
      *SI LAS VARIABLES DEL PROGRAMA VAN EN COMMAREA VERSION 1
           IF ( TSC-TINV = 'C' ) OR ( TSC-TINF NOT > SPACES )
               MOVE OSC-VARI TO SYS-CMMA
      *        MOVE OSC-TCMA TO SYS-TCMA
               MOVE +3500    TO SYS-TCMA
           ELSE
      *SI LAS VARIABLES DEL PROGRAMA VAN EN COMMAREA VERSION 2
           IF TSC-TINV = 'O'
               MOVE SCR-VARI TO SYS-CMMA
               MOVE SCR-TCMA TO SYS-TCMA
           ELSE
      *SE ASUME 'T' = SI LAS VARIABLES DEL PROGRAMA VAN EN TS
              MOVE SPACES   TO SYS-CMMA
              MOVE 0        TO SYS-TCMA.
           MOVE TSC-PROG TO SYS-PROG.
           MOVE TSC-NTRN TO SYS-NTRN.
       FIN-PRO-MOVE-VSYS.
           EXIT.
       PRO-CALL-XCTL SECTION.
       INI-PRO-CALL-XCTL.
           IF WSS-DSP-SEC = 'S'
                DISPLAY '### PRO-CALL-XCTL ####'.
           MOVE SYS-XCTL TO SYS-CMND.
           PERFORM GNS-PRO-SYS.
           PERFORM XCT-ERR.
       FIN-PRO-CALL-XCTL.
           EXIT.
       PRO-CALL-RTTR SECTION.
       INI-PRO-CALL-RTTR.
           IF WSS-DSP-SEC = 'S'
                DISPLAY '### PRO-CALL-RTTR ####'.
           MOVE SYS-RTRN TO SYS-CMND.
           PERFORM GNS-PRO-SYS.
       FIN-PRO-CALL-RTTR.
           EXIT.
       GNS-PRO-KEY SECTION.
       INI-GNS-PRO-KEY.
           IF WSS-DSP-SEC = 'S'
                DISPLAY '### GNS-PRO-KEY ####'.
           MOVE EIBAID TO FRM-FFLD.
           IF NOT ( FRM-FFLD = FRM-FFLD-PF11 OR FRM-FFLD-PFK )
               GO TO FIN-GNS-PRO-KEY.
           PERFORM GNS-ERR-QUE.
           MOVE EIBTRMID TO QUE-TERM.
           MOVE 'PKB'    TO QUE-TYPE.
      *     MOVE 1        TO QUE-NITM.
      *     MOVE +3000    TO QUE-LITM.
           MOVE +3007    TO QUE-LITM.
      *     MOVE QUE-GET  TO QUE-CMND.
      *     PERFORM GNS-PRO-QUE.
           PERFORM GNS-CHK-QUEU.
           IF QUE-STAT NOT = QUE-STAT-OKS
               GO TO FIN-GNS-PRO-KEY.
           MOVE DFHCOMMAREA TO SYS-CMMA.
           MOVE EIBCALEN    TO SYS-TCMA.
           MOVE SYS-XCTL    TO SYS-CMND.
           IF QUE-IKEY = 'V31'
               MOVE 'GNSPPPKB' TO SYS-PROG
           ELSE
               MOVE 'GNSPPPFB' TO SYS-PROG.
           PERFORM GNS-PRO-SYS.
       FIN-GNS-PRO-KEY.
           EXIT.
       GNS-PUT-FRT SECTION.
       INI-GNS-PUT-FRT.
           IF WSS-DSP-SEC = 'S'
                DISPLAY '### GNS-PUT-FRT ####'.
       FIN-GNS-PUT-FRT.
           EXIT.
      ******************** MANEJO DE COLAS **********************
       COPY GNSBGQUE.
       CHK-FRM SECTION.
       INI-CHK-FRM.
           IF CHK-FRM-COD-TFUN NOT = 'PTC'
               GO TO FIN-CHK-FRM.
           MOVE CHK-FRM-GLS-NFRM TO WSS-COD-NFRM.
           MOVE WSS-COD-IMAP TO QUE-TERM.
           MOVE SPACES  TO QUE-TYPE.
           MOVE 1       TO QUE-NITM.
           MOVE QUE-GET TO QUE-CMND.
           PERFORM GNS-PRO-QUE.
           IF NOT ( QUE-STAT = QUE-STAT-OKS )
               MOVE WSS-COD-NFRM TO FRM-GLS-NFRM IN EMU-FLD
               MOVE QUE-STAT-OKS TO QUE-STAT
               MOVE WSS-LENV TO QUE-LDAT
               MOVE WSS-LRCV TO QUE-PCUR
               MOVE EMU-FLD  TO QUE-DATA.

           MOVE 'S' TO WSS-DFRM-LEYO-MAPA-BD.
           MOVE QUE-ITEM TO WSS-DFRM-ITEM.
           MOVE WSS-DFRM-LRCV TO TSC-LRCV.
       FIN-CHK-FRM.
           EXIT.

      * OBTIENE VARIABLES DESDE AMBIENTE UNISYS

       UYS-GET-TERM SECTION.
       INI-UYS-GET-TERM.
      * OBTIENE TERMINAL DESDE AMBIENTE UNISYS
           MOVE STATION TO UYS-TERM-N.
           CALL 'GET-NAME-USING-DESIGNATOR OF DCILIBRARY'
                   USING UYS-TERM-N
                         UYS-TERM
                  GIVING UYS-TERM-R.
           MOVE UYS-TERM TO EIBTRMID.
       FIN-UYS-GET-TERM.
           EXIT.

       UYS-GET-TECL SECTION.
       INI-UYS-GET-TECL.
      * OBTIENE TECLA DESDE AMBIENTE UNISYS
           MOVE FRM-FFLD-RET TO FRM-FFLD.
      **   IF SDF-HDR-COD-CACC = 'LAST '
      **         MOVE FRM-FFLD-PF10 TO FRM-FFLD
      **   ELSE
      **   IF SDF-HDR-COD-CACC = 'BACK '
      **         MOVE FRM-FFLD-PF12 TO FRM-FFLD
      **   ELSE
      **   IF SDF-HDR-COD-CACC = 'END  '
      **         MOVE SCR-INST-HCM TO SCR-INST
      **         MOVE 'ABT' TO FRM-STAT
      **         MOVE FRM-FFLD-PF3  TO FRM-FFLD.
      *    MOVE FRM-FFLD-RET TO FRM-FFLD.
      *    DISPLAY 'TECLA DETECTADA ' FRM-FFLD.
           MOVE FRM-FFLD TO EIBAID.
       FIN-UYS-GET-TECL.
           EXIT.

       UYS-GET-AGND SECTION.
       INI-UYS-GET-AGND.
      * OBTIENE AGENDA DESDE AMBIENTE UNISYS
           CALL 'GET-DESIGNATOR-USING-NAME OF DCILIBRARY'
                   USING UYS-AGND
                   VALUE  AGENDA
                         UYS-AGND-R
                  GIVING UYS-RESU.
           IF UYS-RESU NOT = 0
               DISPLAY 'ERROR EN UYS-GET-AGND '.
       FIN-UYS-GET-AGND.
           EXIT.


       UYS-GET-USER SECTION.
       INI-UYS-GET-USER.
      * OBTIENE USUARIO DESDE AMBIENTE UNISYS
           MOVE USERCODE TO UYS-USER-N.
           CALL 'GET-NAME-USING-DESIGNATOR OF DCILIBRARY'
                   USING UYS-USER-N
                         UYS-USER
                  GIVING UYS-USER-R.
           DISPLAY 'USUARIO ' UYS-USER.
       FIN-UYS-GET-USER.
           EXIT.

      *COPY GNSBGACI.
       CHK-RCV SECTION.
       INI-CHK-RCV.
           IF TSC-TFUN = 'MEN'
                MOVE FRM-DFLD TO RC3-FLD
                PERFORM CHK-RC3 VARYING RC3-IDX FROM 1 BY 1 UNTIL
                           RC3-IDX > 15
      *         DISPLAY '### TRCD REC. #### ' RC3-HDR-COD-TRCD
      *         DISPLAY '### CACC REC. #### ' RC3-TRL-COD-CACC
                MOVE RC3-TRL-COD-CACC TO TRL-COD-CACC IN TRL-FLD
            ELSE
                IF WSS-AUX-TRAN NOT = 'RPGM'
      *ASUME FUNCION PTC
                    MOVE SPACES TO WSS-DFRM-FUNC
      *             DISPLAY '**** ANTES MOV-CAC-RCV *****'
                    PERFORM MOV-CAC-RCV
      *             DISPLAY '**** DESPUES MOV-CAC-RCV *****'
                    MOVE WSS-DFRM-FUNC TO TRL-COD-CACC IN TRL-FLD.
       FIN-CHK-RCV.
           EXIT.
       CHK-RC3 SECTION.
       INI-CHK-RC3.
           IF RC3-FLD-ELM(RC3-IDX) = LOW-VALUES
                MOVE SPACES TO RC3-FLD-ELM(RC3-IDX).
       FIN-CHK-RC3.
           EXIT.

      * PRV-INI
       CAL-PRV SECTION.
       INI-CAL-PRV.
           DISPLAY ' IRA A PRIVILEGIOS UYP-VARI'.
           DISPLAY UYP-VARI.

           IF WSS-IND-USSP = 'S'
              DISPLAY 'USUARIO SUPER PRIVILEGIADO'
              MOVE 'S' TO UYP-IND-RESP
           ELSE
              PERFORM BUS-PRV.

           DISPLAY ' FUE A PRIVILEGIOS UYP-VARI'.
           DISPLAY UYP-VARI.
       FIN-CAL-PRV.
           EXIT.

       BUS-PRV SECTION.
       INI-BUS-PRV.
           PERFORM CRG-WSS-PDP.
           MOVE WSS-I TO WSS-TOT-PDP.
           IF  WSS-STAT-AST = 'OKS' AND WSS-STAT-RUG = 'OKS' AND
               WSS-STAT-PDP = 'OKS'
      *  Respuesta Normal; existe Grupo '*' y usuario vigente en RUG
                 MOVE '0'        TO UYP-COD-STAT
           ELSE
           IF  WSS-STAT-AST = 'OKS' AND WSS-STAT-RUG = 'OKS' AND
               WSS-STAT-PDP = 'NEX'
      *  Warning; existe Grupo '*', usuario vigente en RUG, pero
      *  Grupo sin Privilegios en PDP
                 MOVE '1'        TO UYP-COD-STAT
           ELSE
           IF  WSS-STAT-AST = 'OKS' AND WSS-STAT-RUG = 'NVG'
      *  Warning; existe Grupo '*', pero usuario no
      *  esta vigente en la RUG
                 MOVE '2'        TO UYP-COD-STAT
           ELSE
           IF  WSS-STAT-AST = 'OKS' AND WSS-STAT-RUG = 'NEX'
      *  Warning; existe Grupo '*', pero usuario no
      *  existe en la RUG
                 MOVE '3'        TO UYP-COD-STAT
           ELSE
           IF  WSS-STAT-AST = 'NEX' AND WSS-STAT-RUG = 'OKS' AND
               WSS-STAT-PDP = 'OKS'
      *  Informacion; no existe Grupo '*', pero usuario esta
      *  vigente en la RUG
                 MOVE '4'        TO UYP-COD-STAT
           ELSE
           IF  WSS-STAT-AST = 'NEX' AND WSS-STAT-RUG = 'OKS' AND
               WSS-STAT-PDP = 'NEX'
      *  Warning; no existe Grupo '*', usuario esta vigente en
      *  la RUG, pero no hay Privilegios en la PDP
                 MOVE '5'        TO UYP-COD-STAT
           ELSE
           IF  WSS-STAT-AST = 'NEX' AND WSS-STAT-RUG = 'NVG'
      *  Error; no existe Grupo '*', y usuario no esta
      *  vigente en la RUG
                 MOVE '6'        TO UYP-COD-STAT
           ELSE
           IF  WSS-STAT-AST = 'NEX' AND WSS-STAT-RUG = 'NEX'
      *  Error; no existe Grupo '*' y usuario no existe en RUG
                 MOVE '7'        TO UYP-COD-STAT.

           MOVE WSS-TOT-PDP      TO WSS-I.
           PERFORM DET-PRV.
           IF  WSS-COD-TCON = UYP-CON-MALO
                 MOVE UYP-STAT-TCER    TO UYP-COD-STAT.
       FIN-BUS-PRV.
           EXIT.

       DET-PRV SECTION.
       INI-DET-PRV.
           MOVE WSS-I   TO WSS-T.
           MOVE 'N'     TO UYP-IND-RESP.
           IF  UYP-COD-TDPU = UYP-COD-TDPU-GB
                 PERFORM BUS-PRV-SIST VARYING WSS-I
                         FROM 1 BY 1 UNTIL WSS-I > WSS-T
           ELSE
             PERFORM DET-WSS-COD-TCON
             IF  WSS-COD-TCON = UYP-CON-SIST
                   PERFORM BUS-PRV-SIST VARYING WSS-I
                           FROM 1 BY 1 UNTIL WSS-I > WSS-T
             ELSE
               IF  WSS-COD-TCON = UYP-CON-NEMO
                     PERFORM BUS-PRV-NEMO VARYING WSS-I
                             FROM 1 BY 1 UNTIL WSS-I > WSS-T
               ELSE
                 IF  WSS-COD-TCON = UYP-CON-CMND
                       PERFORM BUS-PRV-CMND VARYING WSS-I
                               FROM 1 BY 1 UNTIL WSS-I > WSS-T
                 ELSE
                   IF  WSS-COD-TCON = UYP-CON-PROC
                       PERFORM BUS-PRV-PROC VARYING WSS-I
                               FROM 1 BY 1 UNTIL WSS-I > WSS-T
                   ELSE
                     IF  WSS-COD-TCON = UYP-CON-MALO
                           MOVE UYP-STAT-TCER TO UYP-COD-STAT.
       FIN-DET-PRV.
           EXIT.

       DET-WSS-COD-TCON SECTION.
       INI-DET-WSS-COD-TCON.
           IF  UYP-COD-PROC > SPACES
                 MOVE UYP-CON-PROC TO WSS-COD-TCON
           ELSE
             IF  UYP-COD-CMND > SPACES
                  MOVE UYP-CON-CMND TO WSS-COD-TCON
             ELSE
               IF  UYP-COD-NEMO > SPACES
                    MOVE UYP-CON-NEMO TO WSS-COD-TCON
               ELSE
                 IF  UYP-COD-SIST > SPACES
                       MOVE UYP-CON-SIST TO WSS-COD-TCON
                 ELSE
                       MOVE UYP-CON-MALO TO WSS-COD-TCON.
       FIN-DET-WSS-COD-TCON.
           EXIT.

       BUS-PRV-SIST SECTION.
       INI-BUS-PRV-SIST.
           IF ( WSS-PDP-COD-SIST IN WSS-PDP(WSS-I) = '*  ' OR
                WSS-PDP-COD-SIST IN WSS-PDP(WSS-I) =
                UYP-COD-SIST IN UYP-VARI )
                  IF WSS-PDP-COD-NEMO IN WSS-PDP(WSS-I) = '*  ' AND
                     WSS-PDP-COD-CMND IN WSS-PDP(WSS-I) = '*  '
                       MOVE WSS-PDP-IND-RESP IN WSS-PDP(WSS-I) TO
                            UYP-IND-RESP IN UYP-VARI
                       ADD  1 WSS-T      GIVING WSS-I
                  ELSE
                    IF WSS-PDP-IND-RESP IN WSS-PDP(WSS-I) = 'S'
                         MOVE WSS-PDP-IND-RESP IN WSS-PDP(WSS-I) TO
                              UYP-IND-RESP IN UYP-VARI
                         ADD  1 WSS-T      GIVING WSS-I.
       FIN-BUS-PRV-SIST.
           EXIT.

       BUS-PRV-NEMO SECTION.
       INI-BUS-PRV-NEMO.
      *<<<<<< INI R.M.V.
           PERFORM DET-VAR-CMP.
      *>>>>>> FIN R.M.V.
           IF ( WSS-PDP-COD-SIST IN WSS-PDP(WSS-I) = '*  ' OR
                WSS-PDP-COD-SIST IN WSS-PDP(WSS-I) =
                UYP-COD-SIST IN UYP-VARI )
              AND
              ( WSS-PDP-COD-NEMO IN WSS-PDP(WSS-I) = '*  ' OR
                WSS-PDP-CMP-NEMO = WSS-UYP-CMP-NEMO )
                  IF WSS-PDP-COD-CMND IN WSS-PDP(WSS-I) = '*  '
                       MOVE WSS-PDP-IND-RESP IN WSS-PDP(WSS-I) TO
                            UYP-IND-RESP IN UYP-VARI
                       ADD  1 WSS-T      GIVING WSS-I
                  ELSE
                    IF WSS-PDP-IND-RESP IN WSS-PDP(WSS-I) = 'S'
                         MOVE WSS-PDP-IND-RESP IN WSS-PDP(WSS-I) TO
                              UYP-IND-RESP IN UYP-VARI
                         ADD  1 WSS-T      GIVING WSS-I.
       FIN-BUS-PRV-NEMO.
           EXIT.

       BUS-PRV-CMND SECTION.
       INI-BUS-PRV-CMND.
      *<<<<<< INI R.M.V.
           PERFORM DET-VAR-CMP.
      *>>>>>> FIN R.M.V.
           IF ( WSS-PDP-COD-SIST IN WSS-PDP(WSS-I) = '*  ' OR
                WSS-PDP-COD-SIST IN WSS-PDP(WSS-I) =
                UYP-COD-SIST IN UYP-VARI )
              AND
              ( WSS-PDP-COD-NEMO IN WSS-PDP(WSS-I) = '*  ' OR
                WSS-PDP-CMP-NEMO = WSS-UYP-CMP-NEMO )
              AND
              ( WSS-PDP-COD-CMND IN WSS-PDP(WSS-I) = '*  ' OR
                WSS-PDP-COD-CMND IN WSS-PDP(WSS-I) =
                UYP-COD-CMND IN UYP-VARI )
                  MOVE WSS-PDP-IND-RESP IN WSS-PDP(WSS-I) TO
                       UYP-IND-RESP IN UYP-VARI
                  ADD  1 WSS-T      GIVING WSS-I.
       FIN-BUS-PRV-CMND.
           EXIT.

       BUS-PRV-PROC SECTION.
       INI-BUS-PRV-PROC.
      *<<<<<< INI R.M.V.
           PERFORM DET-VAR-CMP.
      *>>>>>> FIN R.M.V.
           IF ( WSS-PDP-COD-SIST IN WSS-PDP(WSS-I) = '*  ' OR
                WSS-PDP-COD-SIST IN WSS-PDP(WSS-I) =
                UYP-COD-SIST IN UYP-VARI )
              AND
              ( WSS-PDP-COD-NEMO IN WSS-PDP(WSS-I) = '*  ' OR
                WSS-PDP-CMP-NEMO = WSS-UYP-CMP-NEMO )
              AND
              ( WSS-PDP-COD-CMND IN WSS-PDP(WSS-I) = '*  ' OR
                WSS-PDP-COD-CMND IN WSS-PDP(WSS-I) =
                UYP-COD-CMND IN UYP-VARI )
                  MOVE WSS-PDP-IND-RESP IN WSS-PDP(WSS-I) TO
                       UYP-IND-RESP IN UYP-VARI
                  ADD  1 WSS-T      GIVING WSS-I.
       FIN-BUS-PRV-PROC.
           EXIT.

      *>>>>>> R.M.V
       DET-VAR-CMP SECTION.
       INI-DET-VAR-CMP.
           MOVE WSS-PDP-COD-NEMO IN WSS-PDP(WSS-I) TO WSS-PDP-CMP-NEMO.
           MOVE ZEROES  TO WSS-K.
           PERFORM FND-PES-PDP VARYING WSS-J FROM 1 BY 1
                               UNTIL WSS-J > 12.
           ADD  1          WSS-K GIVING WSS-L
           PERFORM CLR-PDP-CMP VARYING WSS-J FROM WSS-L BY 1
                               UNTIL WSS-J > 12.

      *
           MOVE UYP-COD-NEMO TO WSS-UYP-CMP-NEMO.

           PERFORM CLR-UYP-CMP VARYING WSS-J FROM WSS-L BY 1
                               UNTIL WSS-J > 12.
       FIN-DET-VAR-CMP.
           EXIT.

       FND-PES-PDP SECTION.
       INI-FND-PES-PDP.
           IF  WSS-PDP-CMP-NEMO-IDX(WSS-J) NOT = '$'
                 ADD  1   TO WSS-K
           ELSE
                MOVE 99   TO WSS-J.
       FIN-FND-PES-PDP.
           EXIT.

       CLR-PDP-CMP SECTION.
       INI-CLR-PDP-CMP.
           MOVE SPACES    TO WSS-PDP-CMP-NEMO-IDX(WSS-J).
       FIN-CLR-PDP-CMP.
           EXIT.

       CLR-UYP-CMP SECTION.
       INI-CLR-UYP-CMP.
           MOVE SPACES    TO WSS-UYP-CMP-NEMO-IDX(WSS-J).
       FIN-CLR-UYP-CMP.
           EXIT.

       CRG-WSS-PDP SECTION.
       INI-CRG-WSS-PDP.
           MOVE 'NEX'           TO WSS-STAT-RUG.
           MOVE ZEROES                   TO WSS-I.
           PERFORM GET-PDP-ALL.

           MOVE LOW-VALUES               TO RUG-KEY-IRUG IN RUG.
           MOVE UYP-COD-USER IN UYP-VARI TO RUG-COD-USER IN RUG.
           MOVE FIO-GET-NLS              TO FIO-CMND.

       CIC-CRG-WSS-PDP.
           MOVE 'RUG-COD-USER'  TO FIO-AKEY.
           PERFORM GNS-FIO-RUG.
           IF  NOT FIO-STAT-OKS
                 GO TO END-CRG-WSS-PDP.

           MOVE 'S'             TO WSS-CERRAR-RUG.

           IF  UYP-COD-USER IN UYP-VARI NOT =
               RUG-COD-USER IN RUG
                 GO TO END-CRG-WSS-PDP.

           IF  RUG-IND-VIGE IN RUG NOT = 'S'
                 MOVE 'NVG'       TO WSS-STAT-RUG
                 GO TO END-CRG-WSS-PDP.

           MOVE 'OKS'           TO WSS-STAT-RUG.
           PERFORM GET-PDP.

      *  24-MAR-1994 16:15:14
      *  UN USUARIO PERTENECE SOLO A UN GRUPO
      *     MOVE FIO-GET-NXT     TO FIO-CMND.
      *     GO TO CIC-CRG-WSS-PDP.

       END-CRG-WSS-PDP.
           IF  WSS-CERRAR-RUG = 'S'
                 MOVE 'RUG-COD-USER'    TO FIO-AKEY
                 MOVE 'N'               TO WSS-CERRAR-RUG
                 MOVE FIO-END-BRW       TO FIO-CMND
                 PERFORM GNS-FIO-RUG.
       FIN-CRG-WSS-PDP.
           EXIT.
      *
      *  Busca el Grupo al que se encuentre adscrito el usuario
      *  y obtiene los Privilegios asociados a ese grupo.
      *
       GET-PDP SECTION.
       INI-GET-PDP.
           MOVE 'NEX'               TO WSS-STAT-PDP.
           MOVE LOW-VALUES          TO PDP-KEY-IPDP IN PDP.
           MOVE RUG-COD-GRPO IN RUG TO PDP-COD-GRPO IN PDP.
           MOVE FIO-GET-NLS         TO FIO-CMND.
       CIC-GET-PDP-2.
           PERFORM GNS-FIO-PDP.
           IF  NOT FIO-STAT-OKS
                 GO TO END-GET-PDP.

           MOVE 'S'     TO WSS-CERRAR-PDP.
           IF  RUG-COD-GRPO IN RUG NOT =
               PDP-COD-GRPO IN PDP
                 GO TO END-GET-PDP.

           MOVE 'OKS'   TO WSS-STAT-PDP.
           ADD  1       TO WSS-I.
      *
           MOVE PDP-COD-SIST IN PDP      TO
                        WSS-PDP-COD-SIST IN WSS-PDP(WSS-I).
           MOVE PDP-COD-NEMO IN PDP      TO
                        WSS-PDP-COD-NEMO IN WSS-PDP(WSS-I).
           MOVE PDP-COD-CMND IN PDP      TO
                        WSS-PDP-COD-CMND IN WSS-PDP(WSS-I).
           MOVE PDP-COD-PROC IN PDP      TO
                        WSS-PDP-COD-PROC IN WSS-PDP(WSS-I).
           MOVE PDP-IND-RESP IN PDP      TO
                        WSS-PDP-IND-RESP IN WSS-PDP(WSS-I).

           MOVE FIO-GET-NXT              TO FIO-CMND.
           GO TO CIC-GET-PDP-2.

       END-GET-PDP.
           IF  WSS-CERRAR-PDP = 'S'
                 MOVE 'N'         TO WSS-CERRAR-PDP
                 MOVE FIO-END-BRW TO FIO-CMND
                 PERFORM GNS-FIO-PDP.
       FIN-GET-PDP.
           EXIT.
      *
      *  Obtiene Privilegios del Grupo '*' (si existe)
      *
       GET-PDP-ALL SECTION.
       INI-GET-PDP-ALL.
           MOVE 'NEX'               TO WSS-STAT-AST.
           MOVE LOW-VALUES          TO PDP-KEY-IPDP IN PDP.
           MOVE '*'                 TO PDP-COD-GRPO IN PDP.
           MOVE FIO-GET-NLS         TO FIO-CMND.
       CIC-GET-PDP-ALL-1.
           PERFORM GNS-FIO-PDP.
           IF  NOT FIO-STAT-OKS
                 GO TO FIN-GET-PDP-ALL-1.

           MOVE 'S'     TO WSS-CERRAR-PDP.
           IF  PDP-COD-GRPO IN PDP NOT = '*'
                 GO TO FIN-GET-PDP-ALL-1.

           ADD  1                        TO WSS-I.
           MOVE 'OKS'                    TO WSS-STAT-AST.
      *
           MOVE PDP-COD-SIST IN PDP      TO
                        WSS-PDP-COD-SIST IN WSS-PDP(WSS-I).
           MOVE PDP-COD-NEMO IN PDP      TO
                        WSS-PDP-COD-NEMO IN WSS-PDP(WSS-I).
           MOVE PDP-COD-CMND IN PDP      TO
                        WSS-PDP-COD-CMND IN WSS-PDP(WSS-I).
           MOVE PDP-COD-PROC IN PDP      TO
                        WSS-PDP-COD-PROC IN WSS-PDP(WSS-I).
           MOVE PDP-IND-RESP IN PDP      TO
                        WSS-PDP-IND-RESP IN WSS-PDP(WSS-I).

           MOVE FIO-GET-NXT              TO FIO-CMND.
           GO TO CIC-GET-PDP-ALL-1.

       FIN-GET-PDP-ALL-1.

           IF  WSS-CERRAR-PDP = 'S'
                 MOVE 'N'         TO WSS-CERRAR-PDP
                 MOVE FIO-END-BRW TO FIO-CMND
                 PERFORM GNS-FIO-PDP.

       FIN-GET-PDP-ALL.
           EXIT.

       COPY GNSBFRUG.
       COPY GNSBFPDP.
