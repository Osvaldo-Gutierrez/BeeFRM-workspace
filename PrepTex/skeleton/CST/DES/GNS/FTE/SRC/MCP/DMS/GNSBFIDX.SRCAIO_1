
      * Modulo FIO para archivo DMSII {sis}{reg}
      *
       {sis}-FIO-{reg} SECTION.
       INI-{sis}-FIO-{reg}.
           MOVE "00" TO FIO-STAT.
           MOVE "{sis}BF{reg}" TO FIO-PROG.
*% INCLUDE INI_FIO OF '{sis}BF{reg}.TXT'
           IF FIO-CMND = FIO-GET-KEY
               IF FIO-AKEY = "{ky0}" OR
                  FIO-AKEY NOT > SPACES
                   FIND FIRST {sis}{reg}00 AT {sif}{kf0} =
                                             {ky0} IN {reg}
                     ON EXCEPTION PERFORM SET-STAT
               ELSE
*% FOR I = 1 TO {nka}
               IF FIO-AKEY = "{ky{i}}"
                   FIND FIRST {sis}{reg}0{i} AT {sif}{kf{i}} =
                                             {ky{i}} IN {reg}
                     ON EXCEPTION PERFORM SET-STAT
               ELSE
*% NEXT I
                   PERFORM ERR-ALT
           ELSE
           IF FIO-CMND = FIO-GET-NXT
               IF FIO-NXT-SEQ = "S"
                   FIND NEXT {sif}{rgf}
                     ON EXCEPTION PERFORM SET-STAT
               ELSE
               IF FIO-AKEY = "{ky0}" OR
                  FIO-AKEY NOT > SPACES
                   FIND NEXT {sis}{reg}00
                     ON EXCEPTION PERFORM SET-STAT
               ELSE
*% FOR I = 1 TO {nka}
               IF FIO-AKEY = "{ky{i}}"
                   FIND NEXT {sis}{reg}0{i}
                     ON EXCEPTION PERFORM SET-STAT
               ELSE
*% NEXT I
                   PERFORM ERR-ALT
           ELSE
           IF FIO-CMND = FIO-GET-NLS
               IF FIO-AKEY = "{ky0}" OR
                  FIO-AKEY NOT > SPACES
                   FIND FIRST {sis}{reg}00 AT {sif}{kf0} NOT <
                                             {ky0} IN {reg}
                     ON EXCEPTION PERFORM SET-STAT
               ELSE
*% FOR I = 1 TO {nka}
               IF FIO-AKEY = "{ky{i}}"
                   FIND FIRST {sis}{reg}0{i} AT {sif}{kf{i}} NOT <
                                             {ky{i}} IN {reg}
                     ON EXCEPTION PERFORM SET-STAT
               ELSE
*% NEXT I
                   PERFORM ERR-ALT
           ELSE
           IF FIO-CMND = FIO-GET-KEY-UPD
               IF FIO-AKEY = "{ky0}" OR
                  FIO-AKEY NOT > SPACES
                   LOCK FIRST {sis}{reg}00 AT {sif}{kf0} =
                                             {ky0} IN {reg}
                     ON EXCEPTION PERFORM SET-STAT
               ELSE
*% FOR I = 1 TO {nka}
               IF FIO-AKEY = "{ky{i}}"
                   LOCK FIRST {sis}{reg}0{i} AT {sif}{kf{i}} =
                                             {ky{i}} IN {reg}
                     ON EXCEPTION PERFORM SET-STAT
               ELSE
*% NEXT I
                   PERFORM ERR-ALT
           ELSE
           IF FIO-CMND = FIO-MOD
               PERFORM {sis}-FIO-{reg}-MOD
           ELSE
           IF FIO-CMND = FIO-PUT
               PERFORM {sis}-FIO-{reg}-PUT
           ELSE
           IF FIO-CMND = FIO-DEL
               PERFORM {sis}-FIO-{reg}-DEL
           ELSE
           IF FIO-CMND = FIO-GET-LEQ
               IF FIO-AKEY = "{ky0}" OR
                  FIO-AKEY NOT > SPACES
                   FIND LAST {sis}{reg}00 AT {sif}{kf0} NOT >
                                             {ky0} IN {reg}
                     ON EXCEPTION PERFORM SET-STAT
               ELSE
*% FOR I = 1 TO {nka}
               IF FIO-AKEY = "{ky{i}}"
                   FIND LAST {sis}{reg}0{i} AT {sif}{kf{i}} NOT >
                                             {ky{i}} IN {reg}
                     ON EXCEPTION PERFORM SET-STAT
               ELSE
*% NEXT I
                   PERFORM ERR-ALT
           ELSE
           IF FIO-CMND = FIO-GET-PRV
               IF FIO-AKEY = "{ky0}" OR
                  FIO-AKEY NOT > SPACES
                   FIND PRIOR {sis}{reg}00
                     ON EXCEPTION PERFORM SET-STAT
               ELSE
*% FOR I = 1 TO {nka}
               IF FIO-AKEY = "{ky{i}}"
                   FIND PRIOR {sis}{reg}0{i}
                     ON EXCEPTION PERFORM SET-STAT
               ELSE
*% NEXT I
                   PERFORM ERR-ALT
           ELSE
           IF FIO-CMND = FIO-BEG-TRN
               IF FIO-BTRN = "N"
                   MOVE "S" TO FIO-BTRN
                   BEGIN-TRANSACTION NO-AUDIT 
                         {AUDIT} ON EXCEPTION
                         PERFORM DMS-ABT
               ELSE
                   NEXT SENTENCE
           ELSE
           IF FIO-CMND = FIO-CHK-PNT
               IF FIO-BTRN = "S"
                   MOVE "N" TO FIO-BTRN
                   END-TRANSACTION NO-AUDIT
                        {AUDIT} ON EXCEPTION
                        PERFORM DMS-ABT
               ELSE
                   NEXT SENTENCE
           ELSE
           IF FIO-CMND = FIO-ULK-REC
              FREE {sif}{rgf}
           ELSE
           IF FIO-CMND = FIO-UPD
              OPEN UPDATE {BDID}
                 ON EXCEPTION PERFORM SET-STAT
           ELSE
           IF FIO-CMND = FIO-INP
              OPEN INQUIRY {BDID}
                  ON EXCEPTION PERFORM SET-STAT
           ELSE
           IF FIO-CMND = FIO-CLO
               CLOSE {BDID}
                  ON EXCEPTION PERFORM SET-STAT
           ELSE
           IF FIO-CMND = FIO-END-BRW OR
              FIO-CMND = FIO-EBR-ALL OR
              FIO-CMND = FIO-BFR-RFH OR
              FIO-CMND = FIO-ACC
               NEXT SENTENCE
           ELSE
           IF FIO-CMND = FIO-BCK-OUT
               PERFORM {sis}-FIO-ABTT-{reg}
           ELSE          
           IF FIO-CMND = FIO-GET-GRT
               IF FIO-AKEY = "{ky0}" OR
                  FIO-AKEY NOT > SPACES
                   FIND FIRST {sis}{reg}00 AT {sif}{kf0} >
                                             {ky0} IN {reg}
                     ON EXCEPTION PERFORM SET-STAT
               ELSE
*% FOR I = 1 TO {nka}
               IF FIO-AKEY = "{ky{i}}"
                   FIND FIRST {sis}{reg}0{i} AT {sif}{kf{i}} >
                                             {ky{i}} IN {reg}
                     ON EXCEPTION PERFORM SET-STAT
               ELSE
*% NEXT I
                   PERFORM ERR-ALT
           ELSE
           IF FIO-CMND = FIO-GET-FST
               IF FIO-AKEY = "{ky0}" OR
                  FIO-AKEY NOT > SPACES
                   FIND FIRST {sis}{reg}00
                     ON EXCEPTION PERFORM SET-STAT
               ELSE
*% FOR I = 1 TO {nka}
               IF FIO-AKEY = "{ky{i}}"
                   FIND FIRST {sis}{reg}0{i}
                     ON EXCEPTION PERFORM SET-STAT
               ELSE
*% NEXT I
                   PERFORM ERR-ALT
           ELSE
           IF FIO-CMND = FIO-FND-FST
               IF FIO-AKEY = "{ky0}" OR
                  FIO-AKEY NOT > SPACES
                   SET {sis}{reg}00 TO BEGINNING
               ELSE
*% FOR I = 1 TO {nka}
               IF FIO-AKEY = "{ky{i}}"
                   SET {sis}{reg}0{i} TO BEGINNING
               ELSE
*% NEXT I
                   PERFORM ERR-ALT
           ELSE
               DISPLAY FIO-CMND
               DISPLAY " COMANDO INVALIDO EN {sis}-FIO-{reg}"
               DISPLAY " FIN DE PROGRAMA"
               STOP RUN.

           IF FIO-STAT-OKS AND
              ( FIO-CMND = FIO-GET-KEY     OR
                FIO-CMND = FIO-GET-KEY-UPD OR
                FIO-CMND = FIO-GET-NLS     OR
                FIO-CMND = FIO-GET-NXT     OR
                FIO-CMND = FIO-GET-LEQ     OR
                FIO-CMND = FIO-GET-FST     OR
                FIO-CMND = FIO-GET-GRT     OR
                FIO-CMND = FIO-GET-PRV )
                  MOVE {sif}{rgf} TO {reg}.

*% INCLUDE FIN_FIO OF '{sis}BF{reg}.TXT'
           MOVE SPACES TO FIO-NXT-SEQ.
           MOVE SPACES TO FIO-AKEY.
           MOVE "S" TO FIO-ACC-LGC.
           MOVE SPACES TO FIO-PROG.
       FIN-{sis}-FIO-{reg}.
           EXIT.

       {sis}-FIO-{reg}-MOD SECTION.
       INI-{sis}-FIO-{reg}-MOD.
           MOVE {reg} TO {sif}{rgf}.
           STORE {sif}{rgf}
              ON EXCEPTION PERFORM SET-STAT.
       FIN-{sis}-FIO-{reg}-MOD.
           EXIT.

       {sis}-FIO-{reg}-PUT SECTION.
       INI-{sis}-FIO-{reg}-PUT.
           CREATE {sif}{rgf}
              ON EXCEPTION PERFORM SET-STAT.
           IF FIO-STAT-OKS
                MOVE {reg} TO {sif}{rgf}
                STORE {sif}{rgf}
                    ON EXCEPTION PERFORM SET-STAT.
       FIN-{sis}-FIO-{reg}-PUT.
           EXIT.

       {sis}-FIO-{reg}-DEL SECTION.
       INI-{sis}-FIO-{reg}-DEL.
           DELETE {sif}{rgf}
              ON EXCEPTION PERFORM SET-STAT.
       FIN-{sis}-FIO-{reg}-DEL.
           EXIT.

       {sis}-FIO-ABTT-{reg} SECTION.
       INI-{sis}-FIO-ABTT-{reg}.
           IF FIO-BTRN = "S"
               MOVE "N" TO FIO-BTRN
               ABORT-TRANSACTION
                 {AUDIT} ON EXCEPTION
                 PERFORM DMS-ABT
           ELSE
               DISPLAY "NO HACE FIO-BCK-OUT EN : " FIO-PROG
               DISPLAY "BASE NO ESTA EN MODO TRANSACCION".
       FIN-{sis}-FIO-ABTT-{reg}.
           EXIT.
