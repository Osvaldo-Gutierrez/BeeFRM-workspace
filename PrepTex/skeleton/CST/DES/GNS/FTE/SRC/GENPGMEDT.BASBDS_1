10 sub genpgmedt by desc	(string rpf_gls_dpro,string rpf_gls_daut,&
				 string rpf_gls_abas,string rpf_gls_nfrm,&
				 string rpf_gls_lfrm,string rpf_gls_uara,&
				 integer sub_num_stat by ref)
 decl:
	declare string		sub_gls_dpro
	declare string		sub_gls_daut
	declare string		sub_gls_abas
	declare string		sub_gls_nfrm
	declare string		sub_gls_lfrm
	declare string		sub_gls_uara
	declare string		sub_gls_dsis
	declare string		sub_gls_edit

	def string ltrmr (string ltr_gls_tira)
		l%, r% = 0
		i% = 1
		while ( i% <= len(ltr_gls_tira) )
			if ( mid$(ltr_gls_tira,i%,1) <> " " ) then
				r% = i%
				if l% = 0 then
					l% = i%
				end if
			end if
			i% = i% + 1
		next
		ltrmr = mid$(ltr_gls_tira,l%,r% - l% + 1)
	end def
 main:
	sub_gls_dpro = ltrmr(rpf_gls_dpro)
	sub_gls_daut = ltrmr(rpf_gls_daut)
	sub_gls_abas = ltrmr(rpf_gls_abas)
	sub_gls_nfrm = ltrmr(rpf_gls_nfrm)
	sub_gls_lfrm = ltrmr(rpf_gls_lfrm)
	sub_gls_uara = ltrmr(rpf_gls_uara)

	sub_gls_dsis = mid$(sub_gls_abas,1,3)
	sub_gls_abas = mid$(sub_gls_abas,4,len(sub_gls_abas)-3)
 edit:
	sub_gls_edit = "pgm" + sub_gls_dpro + ".edt"
	open	sub_gls_edit for output as file #1%,			&
		organization sequential variable , recordsize 255,	&
		recordtype any
	print #1%, 'FIND "^cpy^"'
	print #1%, 'DELETE'
 !	print #1%, 'INC ' + sub_gls_dpro + '.CPY'
	print #1%, 'FIND "^for^"'
	print #1%, 'DELETE'
 !	print #1%, 'INC ' + sub_gls_dpro + '.FOR'
	print #1%, 'S/^pgm^/'; sub_gls_dpro; '/W/NOTYPE'
	print #1%, 'S/^aut^/'; sub_gls_daut; '/W/NOTYPE'
	print #1%, 'S/^sis^/'; sub_gls_dsis; '/W/NOTYPE'
	print #1%, 'S/^reg^/'; sub_gls_abas; '/W/NOTYPE'
	print #1%, 'S/^frm^/'; sub_gls_nfrm; '/W/NOTYPE'
	print #1%, 'S/^lfr^/'; sub_gls_lfrm; '/W/NOTYPE'
	print #1%, 'S/^uar^/'; sub_gls_uara; '/W/NOTYPE'
	print #1%, 'EXIT'
	close #1%
   end sub
