IDENTIFICATION DIVISION.
*=======================
PROGRAM-ID.	^prg^.
AUTHOR. 	^aut^.

* Programa Listador de Reporte ^rep^ sin Sort.

ENVIRONMENT DIVISION.
*====================
CONFIGURATION SECTION.
*---------------------
SPECIAL-NAMES.
	DECIMAL-POINT IS COMMA.
INPUT-OUTPUT SECTION.
*--------------------
FILE-CONTROL.
	SELECT RPT^rep^	ASSIGN TO RPT^rep^.

DATA DIVISION.
*=============
FILE SECTION.
*------------
FD RPT^rep^
	REPORT IS RPT-^rep^.

WORKING-STORAGE SECTION.
*-----------------------
COPY	'^sis^REG.^reg^'	FROM	DICTIONARY
	REPLACING
	==^reg^==	BY 	==^reg^ EXTERNAL==.
COPY	RPTREG^rep^	IN	^lib^.
COPY	FIOWSS		IN	DESTXT.
COPY	PRVWSS		IN	DESTXT.
COPY	RPTWSS		IN	DESTXT.
COPY	RPTWSS^rep^	IN	^lib^.
*% INCLUDE WSS OF ^txt^
*% INCLUDE WSS OF ^gen^

REPORT SECTION.
*--------------
COPY	RPTRDS^rep^	IN	^lib^.
.
COPY	RPTDAT^rep^	IN	^lib^.

PROCEDURE DIVISION.
*==================
DECLARATIVES.
^dec^
END DECLARATIVES.

MAIN SECTION.
*------------
INI-MAIN.
	MOVE '^prg^' TO PRV-PROC.
	CALL 'DESPROPRV'.
	IF NOT PRV-STAT-OKS
		DISPLAY 'NO tiene PRIVILEGIOS para ejecutar programa ^prg^'
		STOP RUN.
	MOVE '^prg^' TO RPT-PROG.
*% INCLUDE INI_MAIN OF ^txt^
*% INCLUDE INI_MAIN OF ^gen^
INI-INP-SRT.
*% INCLUDE INI_INP OF ^txt^
*% INCLUDE INI_INP OF ^gen^
	IF WSS-UARH NOT = SPACES
		CALL WSS-UARH.
	CALL '^sis^FIO^reg^' USING FIO-INP.
INI-OUT-SRT.
*% INCLUDE INI_OUT OF ^txt^
*% INCLUDE INI_OUT OF ^gen^
	OPEN OUTPUT RPT^rep^.
	INITIATE RPT-^rep^.
LUP-INP-SRT.
	CALL '^sis^FIO^reg^' USING FIO-GET-NXT.
	IF NOT FIO-STAT-OKS
		GO TO FIN-INP-SRT.
*% INCLUDE LUP_INP OF ^txt^
*% INCLUDE LUP_INP OF ^gen^
COPY	RPTMOV^rep^	IN	^lib^.
LUP-OUT-SRT.
*% INCLUDE LUP_OUT OF ^txt^
*% INCLUDE LUP_OUT OF ^gen^
	GENERATE DL-^rep^.
	GO TO LUP-INP-SRT.
FIN-INP-SRT.
*% INCLUDE FIN_INP OF ^txt^
*% INCLUDE FIN_INP OF ^gen^
	CALL '^sis^FIO^reg^' USING FIO-CLO.
FIN-OUT-SRT.
*% INCLUDE FIN_OUT OF ^txt^
*% INCLUDE FIN_OUT OF ^gen^
	TERMINATE RPT-^rep^.
	CLOSE RPT^rep^.
FIN-MAIN.
	STOP RUN.

*% INCLUDE EOF OF ^txt^
*% INCLUDE EOF OF ^gen^
