*% IF REALIA      *$ASCII*% ELSE*% IF PGM_BCI//ISILVA   JOB ,,CLASS=L,MSGCLASS=X,USER=ISILVA,PASSWORD=SLV94MAY,//            REGION=4M/*ROUTE PRINT MVS//STEP1  EXEC PGM=AFOLIBR//STEPLIB  DD DSN=ADR.LIB.V38.LOAD,DISP=SHR//MASTER   DD DSN=GNSCL.FUENTES.V31,DISP=SHR//OSJOB    DD DUMMY//SYSPRINT DD SYSOUT=X//SYSIN    DD *-ADD GNSPPMEN,PSWD=CONS,ARC     DUMMY-EMOD-SEL GNSPPMEN,CONS-REP ALL*% END*% END       IDENTIFICATION DIVISION.      *========================       PROGRAM-ID. GNSPPMEN.       AUTHOR. CST.       DATE-WRITTEN.    27-MAY-1994 09:47:06       * PROCESA MENUS Y COMANDOS CON MANEJO DE PRIVILEGIOS.       ENVIRONMENT DIVISION.      *=====================       DATA DIVISION.      *==============       WORKING-STORAGE SECTION.      *------------------------*% IF PGM_PER       COPY GNSWVRUO.*% END       01  WSS-GLS-TRAN             PIC X(04)    VALUE 'SIST'.       COPY GNSBRMNU.       COPY GNSBRRPF.      * COPY GNSWGSCR.       COPY GNSWGOSC.       COPY GNSWCSCR.       COPY GNSWVSCR.       01  IDD-INIC              VALUE '$$INI$$' PIC X(07).       COPY GNSWVIDD.       01  IDD-FINA              VALUE '$$FIN$$' PIC X(07).       COPY GNSWGTSC.      * COPY GNSWGCMN.       01  CMN-VARI.           03 CMN-SIND.              05 CMN-I                PIC 9(02).              05 CMN-K                PIC 9(02).           03 CMN-IDX-CCMN    VALUE SPACES.              05 CMN-VEC-CCMN OCCURS 10.                 07 CMN-COD-CCMN      PIC X(03).                 07 FILLER            PIC X(01).       COPY GNSWVFIO.       COPY GNSWCFIO.       COPY GNSWGFRM.       COPY GNSWITRL.       COPY GNSWIOPC.       COPY GNSWIOP1.       COPY GNSBRTAB.       COPY GNSBRMSG.*% IF PGM_DTC      *       COPY GNSWGRQA.       COPY GNSWGUIB.       COPY GNSWGELS.       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-TAB-REQA==.       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-MSG-REQA==.*% IF PGM_CHI AND PGM_BES       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-MNU-REQA==.       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-RPF-REQA==.       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-IDD-REQA==.*% END      **% END       01  RFN-VARI.           03  RFN-COLA.               05  RFN-TYPE VALUE 'GRET'            PIC X(04).               05  RFN-TERM                         PIC X(04).           03  RFN-LITM     COMP                    PIC S9(04).           03  RFN-ITEM.               05  RFN-PROG                         PIC X(08).               05  RFN-FUNC.                   07  RFN-SIST                     PIC X(03).                   07  RFN-SISG                     PIC X(03).                   07  RFN-NEMO                     PIC X(12).                   07  RFN-CMND                     PIC X(03).*% IF PGM_BES      * BES  9-JUL-1993 18:27:40 RFN DEBE GUARDAR USUARIO      * BES  9-JUL-1993 18:27:40 SINCRONIZA RFN CON KNMO      *                   07  RFN-PPGM                     PIC X(08).                   07  RFN-USER                     PIC X(12).*% END      *       01  WSS-VARI.*% IF NOT PGM_PER*%! Esta funcionalidad no esta disponible para Peru      * ISP:  17-MAR-1993 07:54:47           03 WSS-COD-MSG0.              05 WSS-COD-MSG1                         PIC X(01).              05 WSS-COD-MSG2                         PIC X(08).              05 WSS-COD-MSG3                         PIC X(03).      * ISP:  17-MAR-1993 07:54:47*% END           03 WSS-SCOD                                PIC X(02).           03 WSS-SEFN                                PIC X(02).           03 WSS-SXCT               COMP VALUE +3588 PIC S9(04).           03 WSS-SXCT-RED         REDEFINES WSS-SXCT PIC X(02).           03 WSS-QIDD.              05 WSS-NIDD VALUE 'GIDD'    PIC X(04).              05 WSS-TIDD                 PIC X(04).           03 WSS-CCOD                   VALUE SPACES PIC X(05).              88 WSS-CCOD-APCT           VALUE 'APCT'.              88 WSS-CCOD-ABM0           VALUE 'ABM0'.           03 WSS-DFLD.              05 WSS-NTRN                             PIC X(04).              05 WSS-CAXC.                 07 WSS-SIST.                    09 WSS-CSIS OCCURS 3              PIC X(01).                 07 WSS-FILL                          PIC X(01).                 07 WSS-SISG                          PIC X(03).                 07 WSS-DISP                          PIC X(09).           03 WSS-FUNC.              05 WSS-FCHR OCCURS 11                   PIC X(01).           03 WSS-AFUN.              05 WSS-ACHR OCCURS 11                   PIC X(01).           03 WSS-OPCI.              05 WSS-COPC OCCURS 3                    PIC X(01).           03 WSS-CMND.              05 WSS-CCMD OCCURS 3                    PIC X(01).           03 WSS-MAUT.              05 WSS-FILA OCCURS 12.                 07 WSS-COLU OCCURS 09.                    09 WSS-AUTO                  PIC 9(02).           03 WSS-MAUT-RED REDEFINES WSS-MAUT.              05 WSS-ITM1                        PIC X(18).              05 WSS-ITM2                        PIC X(18).              05 WSS-ITM3                        PIC X(18).              05 WSS-ITM4                        PIC X(18).              05 WSS-ITM5                        PIC X(18).              05 WSS-ITM6                        PIC X(18).              05 WSS-ITM7                        PIC X(18).              05 WSS-ITM8                        PIC X(18).              05 WSS-ITM9                        PIC X(18).              05 WSS-ITMA                        PIC X(18).              05 WSS-ITMB                        PIC X(18).              05 WSS-ITMC                        PIC X(18).           03 WSS-STDO                   VALUE 1 PIC 9(02).           03 WSS-ISIS                   VALUE 0 PIC 9(02).           03 WSS-IOPC                   VALUE 0 PIC 9(02).           03 WSS-ICMD                   VALUE 0 PIC 9(02).           03 WSS-IMAX                   VALUE 0 PIC 9(02).           03 WSS-IVAL                   VALUE 9 PIC 9(02).              88 FUNCION-INVALIDA        VALUE 0.              88 FUNCION-VALIDA          VALUE 1.           03 WSS-SIND.              05 WSS-I                           PIC 9(02).              05 WSS-J                           PIC 9(02).              05 WSS-K                           PIC 9(02).              05 WSS-L                           PIC 9(02).              05 WSS-M                           PIC 9(02).           03 WSS-AUXI                           PIC X(03).           03 UYP-PRTA.              05 UYP-PROG                        PIC X(08).              05 FILLER                VALUE '/' PIC X(01).              05 UYP-CMND                        PIC X(03).           03 WSS-MENS.              05 WSS-MEN1                        PIC X(40).              05 WSS-MEN2                        PIC X(79).           03 WSS-COD-MENS.              05 WSS-COD-TMSG.                 07 WSS-COD-TMN1                 PIC X(03).                 07 WSS-COD-TMN2                 PIC X(03).                 07 WSS-COD-TMN3                 PIC X(01).              05 WSS-COD-CMSG                    PIC X(05).           03 WSS-ICMN                           PIC X(01).              88 WSS-DESDE-CMN VALUE 'K'.      *************************************************************           03 WSS-IND-CMND             VALUE 0   PIC 9(01).              88 WSS-EXISTE-COMANDO    VALUE 1.              88 WSS-COMANDO-SINPRV    VALUE 2.      *           03 WSS-AUX-CMNP                       PIC X(08).           03 WSS-AUX-PRMC                       PIC X(25).           03 WSS-AUX-CMND                       PIC X(03).           03 WSS-AUX-CRPF.              05 WSS-TABL OCCURS 10.                 07 WSS-COD-CMND                 PIC X(03).                 07 WSS-COD-CCPP                 PIC X(03).                 07 WSS-IND-STPP                 PIC X(01).                 07 WSS-GLS-PRMT                 PIC X(25).                 07 WSS-GLS-CONF                 PIC X(25).                 07 WSS-GLS-UARC                 PIC X(12).           03 WSS-IPRV                           PIC X(01).              88 WSS-IPRV-TODO        VALUE '*'.              88 WSS-IPRV-TODOS-MENUS VALUE '*', 'O', 'U', 'Q'.              88 WSS-IPRV-TODOS-MAN   VALUE '*', 'U', 'M'.              88 WSS-IPRV-TODOS-CON   VALUE '*', 'Q', 'C'.           03 WSS-KNMO VALUE SPACES.              05 WSS-KNMO-SIST                   PIC X(03).              05 WSS-KNMO-SISG                   PIC X(03).              05 WSS-KNMO-NEMO                   PIC X(12).              05 WSS-KNMO-CMND                   PIC X(03).              05 WSS-KNMO-PROG                   PIC X(08).*% IF PGM_CHI AND PGM_BES              05 WSS-KNMO-USER                   PIC X(12).*% END*% IF PGM_PER*%! Funcionalidad para Peru, validacion de password en eleccion*%! de comando      *JSS-INI 27-APR-1994           03 WSS-PSCM.              05 WSS-MAPS                        PIC X(07).              05 FILLER                VALUE '/' PIC X(01).              05 WSS-COMA                        PIC X(03).      *JSS-FIN 27-APR-1994*% END                 * Variables que vienen de GNSPPMEN       01  WSS-VOPC.           03 WSS-STAT              VALUE 0        PIC 9(01).              88 WSS-STAT-OKS       VALUE 0.              88 WSS-STAT-WRN       VALUE 1.              88 WSS-STAT-MAL       VALUE 2.           03 WSS-SIND.              05 I                                 PIC 9(02).              05 J                                 PIC 9(02).              05 K                  VALUE 0        PIC 9(02).              05 L                  VALUE 0        PIC 9(02).              05 IMIN               VALUE 0        PIC 9(02).              05 IMAX               VALUE 0        PIC 9(02).           03 WSS-RMNU                             PIC X(490).           03 WSS-NSIS                             PIC X(003).           03 WSS-MENU                             PIC X(003).           03 WSS-NEMO                             PIC X(012).           03 WSS-NEMO-RED REDEFINES WSS-NEMO.              05 WSS-NEMO-CHR OCCURS 12            PIC X(01).           03 WSS-IFRM                   VALUE '0' PIC X(01).      *Variables para GNSSCRHDR       01  HEA-VARI.           03 HEA-SIMP              VALUE SPACES.              05 HEA-GLS-SIMP       OCCURS 31      PIC X(01).           03 HEA-DOBL              VALUE SPACES.              05 HEA-GLS-DOBL       OCCURS 61      PIC X(01).           03 HEA-FEC-DMSA.              05 HEA-NUM-DMSA                      PIC 9(02).              05 HEA-GLS-SLA1                      PIC X(01).              05 HEA-NUM-MMSA                      PIC 9(02).              05 HEA-GLS-SLA2                      PIC X(01).              05 HEA-NUM-SMSA                      PIC 9(02).              05 HEA-NUM-AMSA                      PIC 9(02).       COPY GNSWGHOY.       COPY GNSWGSYS.       COPY GNSWIHDR.      * Variables para Manejo de Usuarios y privilegios.*% IF PRV_CST       COPY GNSLGUYP.*%   IF PRV_OPI       COPY TABBRUSR.*%   IF PGM_DTC       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-USR-REQA==.*%   END*%   END*% ELSE*% IF PRV_BCI           COPY USPC113.*% END*% END       01  AUX-VARI.           03 AUX-UARC.              05 AUX-RPRG                        PIC X(08).              05 AUX-RTRN                        PIC X(04).           03 AUX-PRGM.              05 AUX-PROG                        PIC X(08).              05 AUX-NTRN                        PIC X(04).       COPY GNSBRIDD.      *POR MIENTRAS POR EL XCONTROL QUE SE HACE DESDE MENU       01  WSS-CMMA.           03 WSS-RFUN                             PIC X(300).           03 WSS-NSXC                             PIC X(003).           03 WSS-GSXC                             PIC X(003).           03 FILLER                               PIC X(011).      *       01  WSS-CHK-SIST                  VALUE ' ' PIC X(01).           88 WSS-CHK-SIST-SI            VALUE 'S'.       01  IFD.           03  FILLER                            PIC X(01).           03  IFD-COD-CIFD                      PIC X(12).           03  IFD-GLS-DATA                      PIC X(210).           03  FILLER                            PIC X(18).        COPY GNSWGQUE.      *  Variables para Manejo de Colas.      *01  QUE-VARI.      *    03 QUE-COLA.      *       05 QUE-TERM                              PIC  X(04).      *       05 QUE-TYPE                              PIC  X(04).      *    03 QUE-NITM       COMP VALUE +0             PIC S9(04).      *    03 QUE-LITM       COMP                      PIC S9(04).      *    03 QUE-ITEM.      *       05 QUE-IKEY                              PIC  X(03).      **      05 QUE-LDAT    COMP VALUE +0             PIC S9(04).      **      05 QUE-PCUR    COMP VALUE +0             PIC S9(04).      *       05 QUE-DATA                              PIC  X(80).      *    03 QUE-STAT            VALUE 'OKS'          PIC  X(03).      *    03 QUE-STAT-OKS        VALUE 'OKS'          PIC  X(03).      *    03 QUE-STAT-NEX        VALUE 'NEX'          PIC  X(03).      *    03 QUE-STAT-EOQ        VALUE 'EOQ'          PIC  X(03).      *    03 QUE-CMND                                 PIC  X(03).      *    03 QUE-MENS.      *       05 QUE-MEN1                              PIC  X(40).      *       05 QUE-MEN2                              PIC  X(39).      *01  QUE-CTTS.      **    03 QUE-PUT             VALUE 'PUT'          PIC  X(03).      *    03 QUE-GET             VALUE 'GET'          PIC  X(03).      **    03 QUE-MOD             VALUE 'MOD'          PIC  X(03).      **    03 QUE-DEL             VALUE 'DEL'          PIC  X(03).      *PARA TFUN = 'PTC'       01  WSS-PPPV.           03 WSS-PROV                                  PIC X(08).           03 FILLER                                    PIC X(01).           03 WSS-NTRV                                  PIC X(04).       01  WSS-TSC-AUXI.           03 FILLER                                    PIC X(05).           03 WSS-CMA-OPCI                              PIC X(03).           03 FILLER                                    PIC X(57).           03 WSS-TSC-OPCI                              PIC X(03).*% IF PRV_CST AND NOT PGM_PER       01  WSS-USER                                     PIC X(08).       01  WSS-OPID                                     PIC X(03).*% END*% IF PGM_PER      *JSS-BCP       01  WSS-USRX.           03  WSS-USR1.               05  WSS-USR1-CHR            OCCURS 12 PIC X(01).           03  WSS-USR2.               05  WSS-USR2-CHR            OCCURS 12 PIC X(01).*% END      *JSS-INI 20-DEC-1994       01  WSS-COD-NEMO                    VALUE SPACES PIC X(12).      *JSS-FIN 20-DEC-1994*% IF PGM_PER      *JSS-INI 27-APR-A994       COPY CICRACF.      *JSS-FIN 27-APR-1994*% END       LINKAGE SECTION.      *----------------       01  DFHCOMMAREA.      *JSS 02 FILLER                             PIC X(250).      *DE TAMANO 317 SOLAMENTE POR LA COMMAREA DE UYP ( MENU )           02 FILLER                             PIC X(317).       COPY GNSLGFIO.       PROCEDURE DIVISION.      *===================       MAIN SECTION.       INI-MAIN.      *JSS-INI 20-DEC-1994           MOVE SPACES TO WSS-COD-NEMO.      *JSS-FIN 20-DEC-1994      * Rutina que detecta transaccion invocada directamente*% IF NOT PGM_PER           MOVE LOW-VALUES TO OPC-FLD                              OP1-FLD                              HDR-FLD                              TRL-FLD.*% END           MOVE EIBFN TO WSS-SEFN.           EXEC CICS ASSIGN                     STARTCODE(WSS-SCOD)           END-EXEC.*% IF PRV_CST AND NOT PRV_OPI AND NOT PGM_BES           MOVE EIBTRMID TO TSC-OTRN.*%   IF REALIA           MOVE 'ISILVA' TO TSC-USER.*%   ELSE*%       IF PGM_PER           EXEC CICS ASSIGN                     USERID(TSC-USER)           END-EXEC.      *JSS-BCP           MOVE SPACES   TO WSS-USRX.           MOVE TSC-USER TO WSS-USR1.           MOVE 0 TO WSS-I WSS-J.       LUP-MAIN.           ADD 1 TO WSS-I.           IF WSS-I > 12               GO TO CON-MAIN.           IF WSS-USR1-CHR( WSS-I ) > SPACES               ADD 1 TO WSS-J               MOVE WSS-USR1-CHR( WSS-I ) TO WSS-USR2-CHR( WSS-J )               GO TO LUP-MAIN.       CON-MAIN.           MOVE SPACES   TO TSC-USER.           MOVE WSS-USR2 TO TSC-USER.      *JSS-BCP-FIN*%       ELSE                EXEC CICS ASSIGN                     USERID(WSS-USER)           END-EXEC.           MOVE WSS-USER TO TSC-USER.*%       END*%   END           MOVE TSC-USER TO UYP-COD-USER.*% ELSE*% IF PRV_BCI           COPY USPC143.           MOVE USP-COD-USUARIO  TO TSC-USER.           MOVE USP-COD-TERMINAL TO TSC-OTRN.*% END*% END           PERFORM GNS-PRO-KEY.      *    PERFORM CIC-ERR THRU FIN-CIC-ERR.           PERFORM GNS-HDL-MNU.           MOVE 'GNSPPMEN' TO IDD-COD-CIDD IN IDD.           MOVE FIO-GET-KEY TO FIO-CMND.           PERFORM GNS-FIO-IDD.           IF NOT FIO-STAT-OKS               MOVE 'DEFAULT' TO IDD-COD-CIDD IN IDD               MOVE FIO-GET-KEY TO FIO-CMND               PERFORM GNS-FIO-IDD               IF NOT FIO-STAT-OKS                   PERFORM BUS-FSIS               ELSE                   MOVE IDD TO IDD-REGI           ELSE               MOVE IDD TO IDD-REGI.*% IF PRV_CST AND PGM_BES           MOVE EIBTRMID TO TSC-OTRN.           IF EIBCALEN = 41               MOVE DFHCOMMAREA TO WSS-KNMO               MOVE 21 TO EIBCALEN               MOVE WSS-KNMO-USER TO TSC-USER UYP-COD-USER.*% END*% IF PRV_CST AND PRV_OPI           EXEC CICS ASSIGN                     OPID(WSS-OPID)           END-EXEC.           MOVE WSS-OPID       TO USR-GLS-ABRV IN USR.           MOVE 'USR-GLS-ABRV' TO FIO-AKEY.           MOVE FIO-GET-KEY    TO FIO-CMND.           PERFORM TAB-FIO-USR.           IF FIO-STAT-OKS               MOVE USR-COD-USER IN USR TO TSC-USER UYP-COD-USER           ELSE               MOVE SPACES TO TSC-USER UYP-COD-USER.           MOVE EIBTRMID TO TSC-OTRN.*% END      *JSS IF EIBCALEN = 0 OR EIBCALEN = 7           IF EIBCALEN = 0 OR EIBCALEN = 317      *               MOVE 'K'      TO TSC-ICMN               MOVE TSC-ICMN TO WSS-ICMN      *               PERFORM INI-SIST      *        PERFORM BUS-MGKY               PERFORM PRO-RMNU           ELSE      *JSS IF EIBCALEN = 21           IF EIBCALEN = 21 OR 29               MOVE DFHCOMMAREA TO WSS-KNMO               MOVE 'K'      TO TSC-ICMN               MOVE TSC-ICMN TO WSS-ICMN               PERFORM INI-FUNC*% IF PRV_BCI               PERFORM SET-PERFIL-SIST*% END               PERFORM CHK-PRV-SIST      *        PERFORM PRO-RMNU               PERFORM PRO-FIN           ELSE               PERFORM GNS-GET-TSC*% IF NOT PRV_N AND NOT PGM_PER               MOVE TSC-USER TO UYP-COD-USER*% END      *      *        MOVE DFHCOMMAREA TO SCR-VARI      *               MOVE TSC-ICMN TO WSS-ICMN      *JSS-INI 23-DEC-1994               IF ( NOT WSS-DESDE-CMN ) AND                  ( TSC-TFUN = 'HMX' OR 'XMX' OR 'RET' OR                    ( TSC-AMCM = 'N' OR TSC-MSAL = 'RET' ) )      *JSS-FIN 23-DEC-1994      *           AND EXISTIA COMANDO ORIGINAL EN EL MNU......                   MOVE SPACES       TO WSS-FUNC                   MOVE FRM-FFLD-PF3 TO FRM-FFLD                   GO TO RET-LEE-CMND.           IF TSC-INST = SCR-INST-HCM               MOVE SCR-INST-GFL TO TSC-INST               IF ( NOT EIBCALEN = 0 ) AND TSC-UARC(TSC-I) > SPACES                   MOVE TSC-UARC( TSC-I ) TO AUX-UARC                   MOVE TSC-PROG TO AUX-PROG                   MOVE TSC-NTRN TO AUX-NTRN                   MOVE AUX-PRGM TO TSC-UARC( TSC-I )                   MOVE AUX-RPRG TO TSC-PROG                   MOVE AUX-RTRN TO TSC-NTRN                   PERFORM HBL-CMN               ELSE                   PERFORM HBL-CMN           ELSE           IF TSC-INST = SCR-INST-GFL               PERFORM LEE-CACC               PERFORM CAL-PROG.      *JSS 2-SEP-1992 12:19:36 GOBACK.           EXEC CICS RETURN END-EXEC.       FIN-MAIN.           EXIT.       COPY GNSBHMNU.       INI-SIST SECTION.       INI-INI-SIST.           IF EIBCALEN = 0*% IF PGM_BES AND NOT PRV_N               EXEC CICS ASSIGN                      USERID(WSS-USER)               END-EXEC               MOVE WSS-USER TO TSC-USER               MOVE TSC-USER TO UYP-COD-USER*% END               MOVE +20     TO FRM-LFLD               MOVE FRM-RCV TO FRM-CMND               PERFORM GNS-PRO-FRM               MOVE FRM-DFLD TO WSS-DFLD           ELSE      *JSS      MOVE DFHCOMMAREA TO WSS-CAXC.               MOVE DFHCOMMAREA TO WSS-CMMA               MOVE WSS-NSXC    TO WSS-SIST               MOVE WSS-GSXC    TO WSS-SISG.      *           MOVE WSS-SIST TO TSC-SIST SCR-SIST.           MOVE WSS-SISG TO TSC-SISG.           MOVE 'SIS' TO MNU-COD-NEMO.           MOVE FIO-GET-KEY TO FIO-CMND.           PERFORM VID-MNU.           IF NOT FIO-STAT-OKS               MOVE 'GNS' TO MSG-COD-SIST               MOVE 'CODNEMOSISNX' TO MSG-COD-MENS               PERFORM GET-MSG               MOVE MSG-GLS-DESC TO FRM-MENS               MOVE FRM-MSG      TO FRM-CMND               PERFORM GNS-PRO-FRM      *JSS 2-SEP-1992 12:19:36 GOBACK               EXEC CICS RETURN END-EXEC           ELSE               MOVE TSC-SIST TO MNU-COD-SIST.           PERFORM CHK-PRV-SIST.       FIN-INI-SIST.           EXIT.       INI-FUNC SECTION.       INI-INI-FUNC.           MOVE WSS-KNMO-SIST TO TSC-SIST SCR-SIST.           MOVE WSS-KNMO-SISG TO TSC-SISG.           EXEC CICS HANDLE CONDITION                     NOTOPEN (INI-FUNC-NOP)                     DSIDERR (INI-FUNC-DSI)           END-EXEC.           MOVE TSC-SIST      TO FIO-SIST.           MOVE WSS-KNMO-NEMO TO MNU-COD-NEMO.           MOVE FIO-GET-KEY TO FIO-CMND.           PERFORM GNS-FIO-MNU.           IF NOT FIO-STAT-OKS               MOVE 'CODNEMOSISNX' TO MSG-COD-MENS               GO TO ERR-INI-FUNC.      *JSS-IBM      *     IF EIBCALEN = 29 AND WSS-KNMO-PROG > SPACES      *         MOVE WSS-KNMO-PROG TO MNU-GLS-PROG.      *           IF MNU-COD-SIST NOT > SPACES               MOVE TSC-SIST TO MNU-COD-SIST.           IF WSS-KNMO-CMND > SPACES               MOVE WSS-KNMO-CMND TO MNU-COD-CMND.           GO TO FIN-INI-FUNC.       INI-FUNC-NOP.           MOVE 'SIS    NOPEN' TO MSG-COD-MENS.           GO TO ERR-INI-FUNC.       INI-FUNC-DSI.           MOVE 'SIS    NEXST' TO MSG-COD-MENS.       ERR-INI-FUNC.           MOVE 'GNS' TO MSG-COD-SIST.           PERFORM GET-MSG.           MOVE MSG-GLS-DESC TO FRM-MENS.           PERFORM FST-CMN.           PERFORM CMN-MSSG.           PERFORM CMN-PUTA.      *EN VEZ DEL GOBACK COPIAR MODULO QUE SEPA VOLVER      *JSS 2-SEP-1992 12:19:36 GOBACK.           EXEC CICS RETURN END-EXEC.       FIN-INI-FUNC.           EXIT.       CHK-PRV-CMND SECTION.       INI-CHK-PRV-CMND.*% IF PRV_CST           MOVE 0 TO WSS-I.       LUP-CHK-PRV-CMND.           ADD 1 TO WSS-I.           IF WSS-I > 10               GO TO FIN-CHK-PRV-CMND.           IF WSS-COD-CMND( WSS-I ) NOT > SPACES               GO TO LUP-CHK-PRV-CMND.      * llamada a la rutina de verificacion de permisos para verificar      * un comando a la vez           MOVE 'GI'                  TO UYP-COD-TDPU.           MOVE SPACES                TO UYP-COD-PREG.           MOVE MNU-COD-SIST IN MNU   TO UYP-COD-SIST.           MOVE MNU-COD-NEMO IN MNU   TO UYP-COD-NEMO.           MOVE WSS-COD-CMND( WSS-I ) TO UYP-COD-CMND.           MOVE 'GNSPPPRV' TO SYS-PROG.           MOVE UYP-VARI   TO SYS-CMMA.           MOVE +47        TO SYS-TCMA.           MOVE SYS-LINK   TO SYS-CMND.           PERFORM GNS-PRO-SYS.           MOVE SYS-CMMA   TO UYP-VARI.           IF ( UYP-IND-RESP NOT = 'S' )        AND              ( MNU-COD-CMND IN MNU > SPACES ) AND              ( MNU-COD-CMND IN MNU = WSS-COD-CMND( WSS-I ) )               MOVE 2 TO WSS-IND-CMND.           IF UYP-IND-RESP NOT = 'S'               MOVE SPACES TO WSS-TABL( WSS-I )               MOVE SPACES TO WSS-GLS-UARC( WSS-I )               MOVE SPACES TO WSS-GLS-PRMT( WSS-I )               MOVE SPACES TO WSS-GLS-CONF( WSS-I ).           GO TO LUP-CHK-PRV-CMND.*% ELSE*% IF PRV_BCI      * llamada a la rutina de verificacion de permisos para verificar      * si tiene permiso para todos los comandos           MOVE TSC-IPRV TO WSS-IPRV.           MOVE MNU-GLS-PROG TO UYP-PROG.           MOVE '*'          TO UYP-CMND.           MOVE UYP-PRTA     TO USP-PTA-STR.           COPY USPC103.           IF USP-PERMISO = 'P'               GO TO FIN-CHK-PRV-CMND.       MAN-CHK-PRV-CMND.           IF WSS-IPRV-TODOS-MAN               GO TO BEG-CHK-PRV-CMND.           MOVE MNU-GLS-PROG TO UYP-PROG.           MOVE 'MAN'        TO UYP-CMND.           MOVE UYP-PRTA     TO USP-PTA-STR.           COPY USPC103.           IF USP-PERMISO = 'P'               MOVE 'M' TO WSS-IPRV.       BEG-CHK-PRV-CMND.           MOVE 0 TO WSS-I.       LUP-CHK-PRV-CMND.           ADD 1 TO WSS-I.           IF WSS-I > 10               GO TO FIN-CHK-PRV-CMND.           IF ( WSS-COD-CMND( WSS-I ) NOT > SPACES ) OR              ( ( WSS-COD-CMND( WSS-I ) = 'CON' OR 'ACT' OR 'MOD' OR                  'ING' ) AND WSS-IPRV-TODOS-MAN ) OR              ( WSS-COD-CMND( WSS-I ) = 'CON' AND WSS-IPRV-TODOS-CON )               GO TO LUP-CHK-PRV-CMND.      * llamada a la rutina de verificacion de permisos para verificar      * un comando a la vez           MOVE WSS-COD-CMND( WSS-I ) TO UYP-CMND.           MOVE UYP-PRTA TO USP-PTA-STR.           COPY USPC103.           IF ( USP-PERMISO NOT = 'P' )        AND              ( MNU-COD-CMND IN MNU > SPACES ) AND              ( MNU-COD-CMND IN MNU = WSS-COD-CMND( WSS-I ) )               MOVE 2 TO WSS-IND-CMND.           IF USP-PERMISO NOT = 'P'               MOVE SPACES TO WSS-TABL( WSS-I )               MOVE SPACES TO WSS-GLS-UARC( WSS-I )               MOVE SPACES TO WSS-GLS-PRMT( WSS-I )               MOVE SPACES TO WSS-GLS-CONF( WSS-I ).           GO TO LUP-CHK-PRV-CMND.*% END*% END       FIN-CHK-PRV-CMND.           EXIT.       LEE-CACC SECTION.       INI-LEE-CACC.           PERFORM LEE-CMND.           PERFORM PUT-DCMN.           PERFORM CMN-PUTA.       FIN-LEE-CACC.           EXIT.       LEE-CMND SECTION.       INI-LEE-CMND.           PERFORM GET-CMND.           MOVE SPACES TO TRL-GLS-MENS.           MOVE TRL-COD-CACC TO WSS-FUNC.           IF FRM-FFLD = FRM-FFLD-PA2 OR FRM-FFLD-PA1               MOVE 'SIS' TO MNU-COD-NEMO               MOVE FIO-GET-KEY TO FIO-CMND               MOVE TSC-SIST    TO FIO-SIST               PERFORM GNS-FIO-MNU               IF NOT FIO-STAT-OKS                   MOVE 'CODNEMOSISNX' TO MSG-COD-MENS                   GO TO ERR-LEE-CMND               ELSE                   GO TO TCT-LEE-CMND.       RET-LEE-CMND.           IF WSS-FUNC NOT > SPACES               IF FRM-FFLD = FRM-FFLD-RET                   MOVE 'CAC    BLK' TO MSG-COD-MENS                   GO TO ERR-LEE-CMND               ELSE               IF FRM-FFLD = FRM-FFLD-PF3                   MOVE TSC-FRET    TO MNU-COD-NEMO                   MOVE FIO-GET-KEY TO FIO-CMND                   MOVE TSC-SIST    TO FIO-SIST                   PERFORM GNS-FIO-MNU                   IF NOT FIO-STAT-OKS                       MOVE 'CODFRETNEXST' TO MSG-COD-MENS                       GO TO ERR-LEE-CMND                   ELSE      *JSS-INI 20-DEC-1994      *                PERFORM PRO-FIN.                       MOVE MNU-COD-OPCI IN MNU TO WSS-FUNC.      *JSS-FIN 20-DEC-1994           PERFORM SHF-CACC.           PERFORM INI-AUTO.           PERFORM PRO-AUTO VARYING WSS-I FROM 1 BY 1                            UNTIL WSS-I > 11.           IF FUNCION-INVALIDA               MOVE 'FUN    INV' TO MSG-COD-MENS               GO TO ERR-LEE-CMND.           PERFORM UNS-CACC.      *Decidir en Base a Teclas ENTER y PF3........      *Si existe sistema o si existe opcion           IF WSS-ISIS > 0 OR WSS-IOPC > 0 OR FRM-FFLD = FRM-FFLD-PF3               PERFORM PRO-TCTL.           PERFORM BUS-CMND.           IF MSG-COD-MENS NOT > SPACES               GO TO FIN-LEE-CMND.       TCT-LEE-CMND.           PERFORM PRO-TCTL.       ERR-LEE-CMND.*% IF PRV_BCI      *A este parrafo se viene si ocurrio un error, por lo tanto si se t      *previamente de accesar otro sistema, debe 'devolver el perfil de      *por eso se llama a USPC104 nuevamente.           IF WSS-CHK-SIST-SI               MOVE TSC-SIST TO USP-SISTEMA               COPY USPC104.           IF WSS-CHK-SIST-SI               PERFORM CHK-PRV-SIST.           MOVE SPACES TO WSS-CHK-SIST.*% END           MOVE 'GNS' TO MSG-COD-SIST.           PERFORM GET-MSG.           IF FRM-MENS NOT > SPACES               MOVE MSG-GLS-DESC TO FRM-MENS           ELSE           IF FRM-MEN1 NOT > SPACES               MOVE MSG-GLS-DESC TO FRM-MEN1           ELSE           IF FRM-MEN2 NOT > SPACES               MOVE MSG-GLS-DESC TO FRM-MEN2.           PERFORM FST-CMN.           PERFORM CMN-MSSG.           PERFORM CMN-PUTA.           PERFORM CMN-EXIT.       FIN-LEE-CMND.           MOVE CMN-I TO TSC-I.           MOVE FRM-FFLD TO TSC-FFLD.*% IF PGM_PER      *JSS-INI 26-APR-1994           PERFORM VRF-PSSW-CMND.       EXT-LEE-CMND.           EXIT.       VRF-PSSW-CMND SECTION.       INI-VRF-PSSW-CMND.           IF TSC-PASW = 'O'               MOVE SPACES TO TSC-PASW               GO TO FIN-VRF-PSSW-CMND.           IF MNU-GLS-NFRM IN MNU > SPACES               MOVE MNU-GLS-NFRM IN MNU TO WSS-MAPS           ELSE           IF TSC-NMAP > SPACES               MOVE TSC-NMAP TO WSS-MAPS           ELSE               GO TO FIN-VRF-PSSW-CMND.           IF WSS-CMND > SPACES               MOVE WSS-CMND TO WSS-COMA           ELSE           IF WSS-OPCI > SPACES               MOVE WSS-OPCI TO WSS-COMA           ELSE               GO TO FIN-VRF-PSSW-CMND.           IF WSS-SIST > SPACES               MOVE WSS-SIST TO FIO-SIST           ELSE           IF TSC-SIST > SPACES               MOVE TSC-SIST TO FIO-SIST           ELSE               GO TO FIN-VRF-PSSW-CMND.           MOVE 'PPC'       TO TAB-COD-TTAB IN TAB.           MOVE WSS-PSCM    TO TAB-COD-CTAB IN TAB.           MOVE FIO-GET-KEY TO FIO-CMND.           PERFORM GNS-FIO-TAB.           IF NOT ( FIO-STAT-OKS AND TAB-MSC-STAT IN TAB = 'S' )               MOVE SPACES TO TSC-PASW               MOVE SPACES TO TSC-OACC               GO TO FIN-VRF-PSSW-CMND.           MOVE 'MENINGRPASSW' TO MSG-COD-MENS.           MOVE 'S'            TO TSC-PASW.           MOVE TRL-COD-CACC   TO TSC-OACC.           MOVE SPACES         TO TRL-COD-CACC.           GO TO ERR-LEE-CMND.       FIN-VRF-PSSW-CMND.           EXIT.      *JSS-FIN 26-APR-1994*% END       GET-CMND SECTION.       INI-GET-CMND.           MOVE 'GNSFCMN' TO FRM-NAME.           MOVE 'GNSACMN' TO FRM-NLIB.           MOVE FRM-GET-ALL TO FRM-CMND.           PERFORM GNS-PRO-FRM.*% IF PGM_PER      *JSS-INI 27-APR-1994           IF TSC-PASW = 'S' AND FRM-FFLD = FRM-FFLD-PF12               MOVE SPACES       TO TRL-COD-CACC               MOVE SPACES TO TSC-PASW               MOVE SPACES TO TSC-OACC               MOVE 'MENPASWRESET' TO MSG-COD-MENS               MOVE 'GNS'          TO MSG-COD-SIST               PERFORM GET-MSG               MOVE MSG-GLS-DESC TO FRM-MENS               PERFORM FST-CMN               PERFORM CMN-MSSG               PERFORM CMN-PUTA               PERFORM CMN-EXIT.      *JSS-FIN 27-APR-A994*% END           IF NOT ( FRM-FFLD = FRM-FFLD-RET OR FRM-FFLD-PF3 OR                               FRM-FFLD-PA2 OR FRM-FFLD-PA1 )                  MOVE 'PFSINV' TO MSG-COD-MENS                  MOVE 'GNS'    TO MSG-COD-SIST                  PERFORM GET-MSG                  MOVE MSG-GLS-DESC TO FRM-MENS                  PERFORM FST-CMN                  PERFORM CMN-MSSG                  PERFORM CMN-PUTA                  PERFORM CMN-EXIT.           MOVE FRM-DFLD TO TRL-FLD.*% IF PGM_PER      *JSS-INI 27-APR-1994           IF FRM-FFLD = FRM-FFLD-PA2 OR FRM-FFLD-PA1 OR FRM-FFLD-PF3               MOVE SPACES TO TSC-OACC      *JSS-INI 20-SEP-1994               IF TSC-PASW = 'S'                   MOVE SPACES TO TSC-PASW                   MOVE SPACES TO TRL-COD-CACC               ELSE                   MOVE SPACES TO TSC-PASW.      *JSS-FIN 20-SEP-1994      *JSS-FIN 27-APR-1994*% END           IF FRM-FFLD = FRM-FFLD-PA2 OR FRM-FFLD-PA1      *JSS     MOVE FRM-FFLD-TAB TO FRM-FFLD               MOVE 'SIS'        TO TRL-COD-CACC.*% IF PGM_PER      *JSS-INI 27-APR-1994           IF TSC-PASW = 'S'               PERFORM VAL-PSSW.      *JSS-FIN 27-APR-1994*% END       FIN-GET-CMND.           EXIT.      *JSS-INI 27-APR-1994       VAL-PSSW SECTION.       INI-VAL-PSSW.           MOVE TSC-USER     TO RACF-USERID.           MOVE TRL-COD-CACC TO RACF-PASSWORD.           MOVE 'X'          TO RACF-RETURN-CODE.           MOVE 'CICRACF'        TO SYS-PROG.           MOVE CICRACF-COMMAREA TO SYS-CMMA.           MOVE +25              TO SYS-TCMA.           MOVE SYS-LINK         TO SYS-CMND.           PERFORM GNS-PRO-SYS.           MOVE SYS-CMMA TO CICRACF-COMMAREA.           IF RACF-RETURN-CODE = LOW-VALUES               MOVE TSC-OACC TO TRL-COD-CACC               MOVE 'O'    TO TSC-PASW               MOVE SPACES TO TSC-OACC               GO TO FIN-VAL-PSSW.           MOVE 'ERRPASW'        TO MSG-COD-TMSG.           IF RACF-RETURN-CODE = HIGH-VALUES               MOVE SPACES TO MSG-COD-CMSG           ELSE               MOVE RACF-RETURN-CODE TO MSG-COD-CMSG.           MOVE SPACES TO TRL-COD-CACC.           GO TO ERR-LEE-CMND.       FIN-VAL-PSSW.           EXIT.      *JSS-FIN 27-APR-1994       SHF-CACC SECTION.       INI-SHF-CACC.           MOVE SPACES TO WSS-AFUN.           MOVE 1 TO WSS-I WSS-L.       LUP-SHF-CACC.           IF WSS-FCHR( WSS-I ) > SPACES               MOVE WSS-FCHR( WSS-I ) TO WSS-ACHR( WSS-L )               ADD 1 TO WSS-L.           ADD 1 TO WSS-I.           IF WSS-I NOT > 11               GO TO LUP-SHF-CACC.           MOVE WSS-AFUN TO WSS-FUNC.       FIN-SHF-CACC.           EXIT.       INI-AUTO SECTION.       INI-INI-AUTO.           MOVE '000002020000000100' TO WSS-ITM1.           MOVE '010003030000090800' TO WSS-ITM2.           MOVE '010004040000090800' TO WSS-ITM3.           MOVE '010000000505090400' TO WSS-ITM4.           MOVE '010006060000000500' TO WSS-ITM5.           MOVE '010007070000090800' TO WSS-ITM6.           MOVE '010008080000090800' TO WSS-ITM7.           MOVE '010000000000090800' TO WSS-ITM8.           MOVE '000010100000000900' TO WSS-ITM9.           MOVE '010011110000001200' TO WSS-ITMA.           MOVE '010012120000001200' TO WSS-ITMB.           MOVE '010000000000001200' TO WSS-ITMC.           MOVE 1 TO WSS-STDO.           MOVE 0 TO WSS-ISIS.           MOVE 0 TO WSS-IOPC.           MOVE 0 TO WSS-ICMD.       FIN-INI-AUTO.           EXIT.       PRO-AUTO SECTION.       INI-PRO-AUTO.           IF WSS-FCHR( WSS-I ) NOT > SPACES               MOVE 12 TO WSS-I               GO TO FIN-PRO-AUTO.           MOVE WSS-I TO WSS-IMAX.           IF WSS-FCHR( WSS-I ) NOT < 'A' AND              WSS-FCHR( WSS-I ) NOT > 'Z'               MOVE 3 TO WSS-J           ELSE           IF WSS-FCHR( WSS-I ) NOT < '0' AND              WSS-FCHR( WSS-I ) NOT > '9'               MOVE 4 TO WSS-J           ELSE      *JSS-IBM IF WSS-FCHR( WSS-I ) = ':'           IF WSS-FCHR( WSS-I ) = ':' OR '-'               MOVE 5 TO WSS-J               MOVE WSS-I TO WSS-ISIS           ELSE           IF WSS-FCHR( WSS-I ) = '/'               MOVE 6 TO WSS-J               MOVE WSS-I TO WSS-ISIS           ELSE           IF WSS-FCHR( WSS-I ) = ',' OR '.'               MOVE 7 TO WSS-J               MOVE WSS-I TO WSS-IOPC               MOVE WSS-I TO WSS-ICMD           ELSE           IF WSS-FCHR( WSS-I ) NOT > SPACES               MOVE 8 TO WSS-J           ELSE               MOVE 9 TO WSS-J.           MOVE WSS-AUTO( WSS-STDO , WSS-J ) TO WSS-STDO.           IF WSS-STDO NOT = 0               MOVE WSS-AUTO( WSS-STDO , 1 ) TO WSS-IVAL           ELSE               MOVE 0 TO WSS-IVAL               MOVE 12 TO WSS-I.       FIN-PRO-AUTO.           EXIT.       UNS-CACC SECTION.       INI-UNS-CACC.           MOVE SPACES TO WSS-SIST WSS-OPCI WSS-CMND.           IF WSS-ISIS > 0               MOVE 0 TO WSS-K               SUBTRACT 1 FROM WSS-ISIS GIVING WSS-J               PERFORM MOV-SIST VARYING WSS-I FROM 1 BY 1                                UNTIL   WSS-I > WSS-J               ADD 1 WSS-ISIS GIVING WSS-L           ELSE               MOVE 1 TO WSS-L.           IF WSS-ICMD > 0               MOVE 0 TO WSS-K               ADD 1 WSS-ICMD GIVING WSS-J               PERFORM MOV-CMND VARYING WSS-I FROM WSS-J BY 1                                UNTIL   WSS-I >    WSS-IMAX               SUBTRACT 1 FROM WSS-ICMD GIVING WSS-M           ELSE               MOVE WSS-IMAX TO WSS-M.           MOVE 0 TO WSS-K.           PERFORM MOV-OPCI VARYING WSS-I FROM WSS-L BY 1                            UNTIL   WSS-I > WSS-M.       FIN-UNS-CACC.           EXIT.       MOV-SIST SECTION.       INI-MOV-SIST.           IF WSS-FCHR(WSS-I) > SPACES               ADD 1 TO WSS-K               MOVE WSS-FCHR(WSS-I) TO WSS-CSIS(WSS-K).       FIN-MOV-SIST.           EXIT.       MOV-OPCI SECTION.       INI-MOV-OPCI.           IF WSS-FCHR(WSS-I) > SPACES               ADD 1 TO WSS-K               MOVE WSS-FCHR(WSS-I) TO WSS-COPC(WSS-K).       FIN-MOV-OPCI.           EXIT.       MOV-CMND SECTION.       INI-MOV-CMND.           IF WSS-FCHR(WSS-I) > SPACES               ADD 1 TO WSS-K               MOVE WSS-FCHR(WSS-I) TO WSS-CCMD(WSS-K).       FIN-MOV-CMND.           EXIT.       PRO-TCTL SECTION.       INI-PRO-TCTL.           IF WSS-SIST > SPACES AND TSC-SIST NOT = WSS-SIST               PERFORM CHK-SIST           ELSE               MOVE TSC-SIST TO WSS-SIST.           IF WSS-OPCI > SPACES               PERFORM CHK-OPC               PERFORM ANL-OPC           ELSE           IF TSC-SIST = WSS-SIST               IF TSC-NEMO = 'SIS'                   MOVE 'FUN    ACT' TO MSG-COD-MENS                   GO TO ERR-LEE-CMND               ELSE                   MOVE TSC-SIST    TO FIO-SIST                   MOVE 'SIS'       TO MNU-COD-NEMO                   MOVE FIO-GET-KEY TO FIO-CMND                   PERFORM GNS-FIO-MNU                   IF NOT FIO-STAT-OKS                       MOVE 'CODNEMOSISNX' TO MSG-COD-MENS                       GO TO ERR-LEE-CMND.           MOVE WSS-SIST TO MNU-COD-SIST.      * Con el MNU que se tiene hay que procesar           IF ( MNU-COD-SIST NOT > SPACES OR                MNU-COD-SIST = TSC-SIST ) AND MNU-COD-NEMO = TSC-NEMO              MOVE 'FUN    ACT' TO MSG-COD-MENS              GO TO ERR-LEE-CMND.           PERFORM PRO-FIN.       FIN-PRO-TCTL.           EXIT.       CHK-SIST SECTION.       INI-CHK-SIST.*% IF PRV_CST           MOVE 'GI'     TO UYP-COD-TDPU.           MOVE SPACES   TO UYP-COD-PREG.           MOVE WSS-SIST TO UYP-COD-SIST.           MOVE 'GNSPPPRV' TO SYS-PROG.           MOVE UYP-VARI   TO SYS-CMMA.           MOVE +47        TO SYS-TCMA.           MOVE SYS-LINK   TO SYS-CMND.           PERFORM GNS-PRO-SYS.           MOVE SYS-CMMA   TO UYP-VARI.           IF UYP-IND-RESP NOT = 'S'               GO TO CHK-SIST-NPR.*% ELSE*% IF PRV_BCI      *llamada a USP para saber si tiene acceso al SISTEMA           MOVE 'S' TO WSS-CHK-SIST.           MOVE WSS-SIST TO USP-SISTEMA.           COPY USPC104.           IF USP-PERMISO NOT = 'P'               GO TO CHK-SIST-NPR.*% END*% END           EXEC CICS HANDLE CONDITION                     NOTOPEN (CHK-SIST-NOP)                     DSIDERR (CHK-SIST-DSI)           END-EXEC.           MOVE WSS-SIST    TO FIO-SIST.      *JSS-INI 20-DEC-1994           IF WSS-COD-NEMO > SPACES               MOVE WSS-COD-NEMO TO MNU-COD-NEMO           ELSE      *JSS-FIN 20-DEC-1994           MOVE 'SIS'       TO MNU-COD-NEMO.           MOVE FIO-GET-KEY TO FIO-CMND.           PERFORM GNS-FIO-MNU.           IF FIO-STAT-OKS               PERFORM CHK-PRV-SIST               GO TO FIN-CHK-SIST.           MOVE 'CODNEMOSISNX' TO MSG-COD-MENS.           GO TO ERR-LEE-CMND.       CHK-SIST-NOP.           MOVE 'SIS    NOPEN' TO MSG-COD-MENS.           GO TO ERR-LEE-CMND.       CHK-SIST-DSI.           MOVE 'SIS    NEXST' TO MSG-COD-MENS.           GO TO ERR-LEE-CMND.       CHK-SIST-NPR.           MOVE 'SIS    NOPRV' TO MSG-COD-MENS.           GO TO ERR-LEE-CMND.       FIN-CHK-SIST.           EXIT.       CHK-PRV-SIST SECTION.       INI-CHK-PRV-SIST.*% IF PRV_CST           MOVE SPACES TO TSC-IPRV.*% ELSE*% IF PRV_BCI           MOVE SPACES TO TSC-IPRV.           MOVE '*/*' TO USP-PTA-STR.           COPY USPC103.           IF USP-PERMISO = 'P'               MOVE '*' TO TSC-IPRV               GO TO FIN-CHK-PRV-SIST.           MOVE '*' TO USP-PTA-STR.           COPY USPC103.           IF USP-PERMISO = 'P'               MOVE 'O' TO TSC-IPRV.           MOVE '*/MAN' TO USP-PTA-STR.           COPY USPC103.           IF USP-PERMISO = 'P'               IF TSC-IPRV = 'O'                   MOVE 'U' TO TSC-IPRV                   GO TO FIN-CHK-PRV-SIST               ELSE                   MOVE 'M' TO TSC-IPRV                   GO TO FIN-CHK-PRV-SIST.           MOVE '*/CON' TO USP-PTA-STR.           COPY USPC103.           IF USP-PERMISO = 'P'               IF TSC-IPRV = 'O'                   MOVE 'Q' TO TSC-IPRV               ELSE                   MOVE 'C' TO TSC-IPRV.*% END*% END       FIN-CHK-PRV-SIST.           EXIT.*% IF PRV_BCI       SET-PERFIL-SIST SECTION.       INI-SET-PERFIL-SIST.      *llamada a USP para setear perfil de SISTEMA/USUARIO           MOVE TSC-SIST TO USP-SISTEMA.           COPY USPC104.           IF USP-PERMISO NOT = 'P'               MOVE FRM-FFLD-PF11 TO FRM-FFLD               PERFORM GNS-PRO-KEY.       FIN-SET-PERFIL-SIST.           EXIT.*% END       CHK-OPC SECTION.       INI-CHK-OPC.           MOVE WSS-SIST        TO FIO-SIST.           MOVE WSS-OPCI        TO MNU-COD-OPCI IN MNU.           MOVE FIO-GET-KEY-ALT TO FIO-CMND.           MOVE 'MNU-COD-OPCI'  TO FIO-AKEY.           PERFORM GNS-FIO-MNU.           IF NOT FIO-STAT-OKS               MOVE 'CODOPCINEXST' TO MSG-COD-MENS               PERFORM ERR-LEE-CMND.       FIN-CHK-OPC.           EXIT.       ANL-OPC SECTION.       INI-ANL-OPC.           IF WSS-CMND > SPACES               MOVE WSS-CMND TO MNU-COD-CMND IN MNU.           IF ( MNU-COD-SIST > SPACES AND MNU-COD-SIST NOT = TSC-SIST )              AND              ( NOT ( WSS-SIST > SPACES AND TSC-SIST NOT = WSS-SIST ) )               MOVE MNU-COD-SIST TO WSS-SIST      *JSS-INI 20-DEC-1994               IF MNU-COD-FRET IN MNU > SPACES                   MOVE MNU-COD-FRET IN MNU TO WSS-COD-NEMO                   PERFORM CHK-SIST               ELSE                   MOVE 'SIS' TO WSS-COD-NEMO      *JSS-FIN 20-DEC-1994               PERFORM CHK-SIST.       FIN-ANL-OPC.           EXIT.       PRO-FIN SECTION.       INI-PRO-FIN.           IF MNU-COD-TFUN IN MNU = 'NUL'               MOVE 'MNUTFUNNUL' TO MSG-COD-MENS               GO TO ERR-PRO-FIN.      * llamada a la rutina de verificacion de permisos para verificar      * una funcion*% IF PRV_CST      * considera que la funcion puede ser el llamado a otro sistema, si no      * es asi entonces :      * considera que la funcion puede ser un menu con lo cual muestra      * de todas formas las opciones que ese menu tiene ( ya que 'puede'      * tener privilegio para una de las opciones de ese menu, y en caso      * que no tenga no importa, ya que se validara privilegio al intentar      * llamar a la opcion ).           MOVE 'GI'                TO UYP-COD-TDPU.           MOVE SPACES              TO UYP-COD-PREG.           IF MNU-COD-SIST IN MNU = TSC-SIST OR              MNU-COD-SIST IN MNU NOT > SPACES               MOVE TSC-SIST            TO UYP-COD-SIST               MOVE MNU-COD-NEMO IN MNU TO UYP-COD-NEMO               IF MNU-COD-TFUN IN MNU = 'MEN'                   MOVE 'S' TO UYP-IND-RESP                   GO TO SKP-PRO-FIN               ELSE                   NEXT SENTENCE           ELSE               MOVE MNU-COD-SIST IN MNU TO UYP-COD-SIST.           MOVE 'GNSPPPRV' TO SYS-PROG.           MOVE UYP-VARI   TO SYS-CMMA.           MOVE +47        TO SYS-TCMA.           MOVE SYS-LINK   TO SYS-CMND.           PERFORM GNS-PRO-SYS.           MOVE SYS-CMMA   TO UYP-VARI.           IF UYP-IND-RESP NOT = 'S'               MOVE 'FUN    NOPRV' TO MSG-COD-MENS               GO TO ERR-PRO-FIN.*% ELSE*% IF PRV_BCI      *CHEQUEAR PRIVILEGIOS PARA EL REGISTRO MNU ( OPCION )      *         SI TIENE PRIVILEGIOS........SIGA           MOVE TSC-IPRV TO WSS-IPRV.           IF WSS-IPRV-TODOS-MENUS               GO TO SKP-PRO-FIN.           MOVE MNU-COD-NEMO IN MNU TO USP-PTA-STR.           COPY USPC103.           IF USP-PERMISO NOT = 'P'               MOVE 'FUN    NOPRV' TO MSG-COD-MENS               GO TO ERR-PRO-FIN.*% END*% END      * Que pasa IF MNU-COD-CMND IN MNU > SPACES ??????       SKP-PRO-FIN.           IF MNU-COD-SIST NOT > SPACES               MOVE TSC-SIST TO MNU-COD-SIST.           IF MNU-COD-CMND IN MNU > SPACES               PERFORM BUS-CRPF      *Chequear privilegios para el comando, YA ESTA HECHO               IF WSS-COMANDO-SINPRV                   MOVE 'CMD    NOPRV' TO MSG-COD-MENS                   GO TO ERR-PRO-FIN               ELSE               IF NOT WSS-EXISTE-COMANDO                   MOVE 'CMD    NEXST' TO MSG-COD-MENS                   GO TO ERR-PRO-FIN               ELSE*% IF PGM_PER      *JSS-INI 27-APR-1994                   PERFORM VRF-PSSW-CMND      *JSS-FIN 27-APR-1994*% END                   PERFORM CRG-VSCR.           IF MNU-COD-SIST NOT > SPACES OR              MNU-COD-SIST =     TSC-SIST               MOVE TSC-SIST TO MNU-COD-SIST               MOVE TSC-SISG TO WSS-SISG               MOVE SPACES   TO WSS-NSIS               GO TO CON-PRO-FIN.           IF TSC-SIST NOT = 'GNS' AND MNU-COD-SIST = 'GNS'                MOVE TSC-SIST TO TSC-SISG           ELSE      *JSS IF TSC-SIST = 'GNS' AND MNU-COD-SIST NOT = 'GNS'                MOVE SPACES TO TSC-SISG.           MOVE MNU-COD-SIST TO TSC-SIST SCR-SIST.       CON-PRO-FIN.           MOVE MNU TO WSS-RMNU.           IF MNU-COD-TFUN = 'PGI' OR 'PRO' OR 'MEN' OR 'HMC' OR                             'HMX' OR 'XMC' OR 'XMX' OR 'RET' OR                             'PTC' OR 'NPC'               PERFORM PRO-RMNU           ELSE               PERFORM GNS-PUT-FRT               IF MNU-COD-TFUN = 'CCA'                   PERFORM PRO-RMNU               ELSE               IF MNU-COD-TFUN = 'STR' OR MNU-COD-TCTL = 'STAR'                   EXEC CICS START                             TRANSID(MNU-GLS-TRAN)                             TERMID(EIBTRMID)                   END-EXEC                   EXEC CICS RETURN                   END-EXEC               ELSE      *POR MIENTRAS SE HACE CON XCTROL, SE DEBE ANALIZAR ( MNU-COD-TCTL      *MNU-COD-TINF )                   MOVE MNU-GLS-PROG TO SYS-PROG                   MOVE LOW-VALUES   TO SYS-CMMA                   MOVE 0            TO SYS-TCMA                   MOVE SYS-XCTL     TO SYS-CMND                   PERFORM GNS-PRO-SYS.           MOVE 'XCTERR' TO MSG-COD-MENS.           MOVE SPACES   TO FRM-MEN1.           MOVE SYS-PROG TO FRM-MEN2.       ERR-PRO-FIN.           IF EIBCALEN NOT = 21               GO TO ERR-LEE-CMND.           MOVE 'GNS' TO MSG-COD-SIST.           PERFORM GET-MSG.           MOVE MSG-GLS-DESC TO FRM-MENS.           PERFORM FST-CMN.           PERFORM CMN-MSSG.           PERFORM CMN-PUTA.      *EN VEZ DEL GOBACK COPIAR MODULO QUE SEPA VOLVER           EXEC CICS HANDLE CONDITION                     PGMIDERR(GBK-PRO-FIN)           END-EXEC.           MOVE 'RET'      TO SYS-CMMA.           MOVE 3          TO SYS-TCMA.      * ISP:  26-FEB-1992 09:52:46      *       CMT SIN PRIVILEGIOS => RETORNABA INCONDICIONALMENTE VIA PF2      *       SIN CONSIDERAR VERSION           IF MNU-COD-TFUN NOT = 'PTC'               MOVE 'GNSPPPF2' TO SYS-PROG           ELSE               MOVE 'GNSPPPK2' TO SYS-PROG.      * ISP:  26-FEB-1992 09:52:46           MOVE SYS-XCTL   TO SYS-CMND.           PERFORM GNS-PRO-SYS.       GBK-PRO-FIN.           PERFORM XCT-ERR.       FIN-PRO-FIN.           EXIT.       CRG-VSCR SECTION.       INI-CRG-VSCR.           MOVE MNU-GLS-PROG TO TSC-PROG.           MOVE WSS-AUX-CRPF TO TSC-CRPF.           MOVE WSS-AUX-CMNP TO TSC-CMNP.           MOVE WSS-AUX-PRMC TO TSC-PRMC.           MOVE WSS-AUX-CMND TO TSC-CMND.           MOVE MNU-COD-TFUN TO TSC-TFUN.       FIN-CRG-VSCR.           EXIT.       FST-CMN SECTION.       INI-FST-CMN.           MOVE -1 TO TRL-COD-CACC-LEN.       FIN-FST-CMN.           EXIT.       CMN-MSSG SECTION.       INI-CMN-MSSG.           MOVE FRM-MENS TO TRL-GLS-MENS.       FIN-CMN-MSSG.           EXIT.       XCT-ERR SECTION.       INI-XCT-ERR.           MOVE FRM-CLR-FRM TO FRM-CMND.           PERFORM GNS-PRO-FRM.           MOVE 'XCTERR    ' TO MSG-COD-MENS.           MOVE 'GNS'        TO MSG-COD-SIST.           PERFORM GET-MSG.           MOVE MSG-GLS-DESC TO FRM-MEN1.           MOVE SYS-PROG     TO FRM-MEN2.           MOVE FRM-MSG      TO FRM-CMND.           PERFORM GNS-PRO-FRM.      *JSS 2-SEP-1992 12:19:36 GOBACK.           EXEC CICS RETURN END-EXEC.       FIN-XCT-ERR.           EXIT.      * Carga numeros de Base de Datos de los Sistemas por default       BUS-FSIS SECTION.       INI-BUS-FSIS.           MOVE 'NO EXISTE REGISTRO IDD CON LLAVE : ' TO SYS-MEN1.           MOVE IDD-COD-CIDD IN IDD                   TO SYS-MEN2.           MOVE SYS-ABOR TO SYS-CMND.           PERFORM GNS-PRO-SYS.       FIN-BUS-FSIS.           EXIT.       COPY GNSBGVSM.*% IF PGM_DTC       COPY GNSBGDTC.      * COPY GNSBGDTM.*% END       COPY GNSBGFRM.      * COPY GNSBECIC.       COPY GNSBFMNU.       COPY GNSBFRPF.       COPY GNSBGMSG.       COPY GNSBFTAB.       COPY GNSBFMSG.       COPY GNSBIABT.       COPY GNSBGHOY.       COPY GNSBGSYS.*% IF PGM_DTC       COPY GNSBFIDD.       COPY GNSBFIFD.*% ELSE       GNS-FIO-IDD SECTION.       INI-GNS-FIO-IDD.           MOVE '00' TO FIO-STAT.       FIN-GNS-FIO-IDD.           EXIT.       GNS-FIO-IFD SECTION.       INI-GNS-FIO-IFD.           MOVE '00' TO FIO-STAT.       FIN-GNS-FIO-IFD.           EXIT.*% END*% IF PGM_PER       COPY GNSBGRUO.*% END      ******************************************************************       PRO-RMNU SECTION.       INI-PRO-RMNU.      *JSS           MOVE TSC-IPRV TO MNU-IND-IPRV.      *           MOVE MNU-COD-SIST TO TSC-SIST SCR-SIST.           MOVE MNU-COD-OPCI TO TSC-OPCI.           MOVE MNU-COD-NEMO TO TSC-NEMO.      *           MOVE MNU-GLS-TRAN TO TSC-NTRN.           MOVE MNU-GLS-PROG TO TSC-PROG.           MOVE MNU-GLS-LFRM TO TSC-NLIB.           MOVE MNU-GLS-NFRM TO TSC-NMAP.           MOVE MNU-GLS-LDOC TO TSC-LDOC.           MOVE MNU-GLS-NDOC TO TSC-NDOC.           MOVE MNU-COD-FRET TO TSC-FRET.           MOVE MNU-IND-IPRV TO TSC-IPRV.           MOVE MNU-COD-INST TO TSC-TINS.           MOVE MNU-COD-TCTL TO TSC-TCTL.           MOVE MNU-COD-TINF TO TSC-TINF.           MOVE MNU-COD-TFUN TO TSC-TFUN.           MOVE MNU-COD-CIFD TO TSC-CIDD.           MOVE +250         TO TSC-TCMA.      *JSS-INI 23-DEC-1994           MOVE MNU-COD-AMPG TO TSC-AMPG.           MOVE MNU-COD-ASCR TO TSC-ASCR.           MOVE MNU-GLS-NMHD TO TSC-NMHD.           MOVE MNU-GLS-LMHD TO TSC-LMHD.           MOVE MNU-COD-AMHD TO TSC-AMHD.           MOVE MNU-GLS-NMCM TO TSC-NMCM.           MOVE MNU-GLS-LMCM TO TSC-LMCM.           MOVE MNU-COD-AMCM TO TSC-AMCM.           MOVE MNU-COD-MSAL TO TSC-MSAL.      *JSS-FIN 23-DEC-1994           IF MNU-COD-TFUN = 'MEN'               PERFORM BUS-CRPF               PERFORM CRG-VSCR               MOVE MNU TO WSS-RMNU               PERFORM PRO-MENU               MOVE WSS-RMNU TO MNU               PERFORM PUT-MHDR               PERFORM PUT-MSCR               GO TO CON-PRO-RMNU.           PERFORM GET-PROV.           IF MNU-COD-TFUN NOT = 'CCA'               MOVE LOW-VALUES TO OPC-FLD               MOVE LOW-VALUES TO OP1-FLD               PERFORM PUT-MHDR               PERFORM PUT-MSCR           ELSE               IF MNU-COD-CMND IN MNU > SPACES                   MOVE MNU-COD-CMND TO WSS-OPCI                   PERFORM BUS-CMND                   PERFORM PUT-DCMN                   PERFORM CAL-PROG               ELSE                   PERFORM BUS-CRPF                   PERFORM CRG-VSCR                   PERFORM CAL-PROG.           IF MNU-COD-CMND IN MNU > SPACES      *JSS-INI 23-DEC-1994               IF TSC-TFUN = 'HMX' OR 'XMX' OR                  ( TSC-AMCM = 'N' )      *JSS-FIN 23-DEC-1994      *Solo para cargar datos de COMMON AREA asociado al comando,      *no se despliega MAPA                   MOVE MNU-COD-CMND TO WSS-OPCI                   PERFORM BUS-CMND                   PERFORM PUT-DCMN                   PERFORM CAL-PROG               ELSE                   MOVE MNU-COD-CMND TO WSS-OPCI                   PERFORM BUS-CMND                   PERFORM PUT-DCMN                   PERFORM CMN-PUTA                   PERFORM CAL-PROG.           PERFORM BUS-CRPF.           PERFORM CRG-VSCR.       CON-PRO-RMNU.           MOVE SCR-INST-GFL TO TSC-INST           PERFORM HBL-CMN.       FIN-PRO-RMNU.           EXIT.      ******************************************************************       PRO-MENU SECTION.       INI-PRO-MENU.*% IF PRV_BCI           MOVE TSC-IPRV TO WSS-IPRV.*% END           MOVE MNU-COD-MENU TO WSS-MENU.           MOVE MNU-COD-NEMO TO WSS-NEMO.           PERFORM BUS-MENU.           IF NOT WSS-STAT-OKS               MOVE LOW-VALUES TO OPC-FLD               MOVE LOW-VALUES TO OP1-FLD               MOVE FRM-MENS   TO OPC-GLS-MENS*% IF NOT REALIA               MOVE FRM-MENS   TO OP1-GLS-MENS*% END               GO TO FIN-PRO-MENU.*% IF PRV_BCI           IF WSS-IPRV-TODOS-MENUS               GO TO CON-PRO-MENU.           MOVE 13 TO J.       LUP-PRO-MENU.           SUBTRACT 1 FROM J.           IF J < 1               GO TO CON-PRO-MENU.           IF WSS-NEMO-CHR(J) > SPACES               GO TO LUP-PRO-MENU.           MOVE '*' TO WSS-NEMO-CHR(J).       CHK-PRO-MENU.           MOVE WSS-NEMO TO USP-PTA-STR.           COPY USPC103.           IF USP-PERMISO = 'P'               MOVE 'O' TO WSS-IPRV.       CON-PRO-MENU.*% END           PERFORM INI-OPCD VARYING J FROM 1 BY 1 UNTIL J > 20.           PERFORM BUS-FUNC THRU FIN-BUS-FUNC UNTIL NOT                                 ( WSS-STAT-OKS AND FIO-STAT-OKS AND                                   MNU-COD-CMEN = WSS-MENU ).           IF NOT WSS-STAT-OKS               MOVE LOW-VALUES TO OPC-FLD               MOVE LOW-VALUES TO OP1-FLD*% IF NOT REALIA               MOVE FRM-MENS   TO OPC-GLS-MENS               MOVE FRM-MENS   TO OP1-GLS-MENS.*% ELSE               MOVE FRM-MENS   TO OPC-GLS-MENS.*% END       FIN-PRO-MENU.           EXIT.       BUS-MENU SECTION.       INI-BUS-MENU.           MOVE SPACES          TO MNU-COD-IMEN.           MOVE MNU-COD-MENU    TO MNU-COD-CMEN.           MOVE 'MNU-COD-IMEN'  TO FIO-AKEY.           MOVE FIO-GET-NLS-ALT TO FIO-CMND.           PERFORM VID-MNU.           IF FIO-STAT-OKS AND ( MNU-COD-CMEN = WSS-MENU )               GO TO FIN-BUS-MENU.           IF WSS-NEMO = 'SIS'               MOVE 'GNS' TO MSG-COD-SIST               MOVE 'MNUSIS NOOPC' TO MSG-COD-MENS               PERFORM GET-MSG               MOVE MSG-GLS-DESC TO FRM-MENS               MOVE 2 TO WSS-STAT           ELSE               MOVE 'GNS' TO MSG-COD-SIST               MOVE 'MNU    NOOPC' TO MSG-COD-MENS               PERFORM GET-MSG               MOVE MSG-GLS-DESC TO FRM-MENS               MOVE 1 TO WSS-STAT.       FIN-BUS-MENU.           EXIT.       INI-OPCD SECTION.       INI-INI-OPCD.           MOVE SPACES TO OPC-COD-OPCI( J ).           MOVE SPACES TO OPC-GLS-FMEN( J ).      *    MOVE FRM-CPIM-AEY TO OPC-COD-OPCI-ATR( J ).      *    MOVE FRM-CPIM-AEY TO OPC-GLS-FMEN-ATR( J ).           ADD 20 J GIVING I.           MOVE SPACES TO OPC-COD-OPCI( I ).           MOVE SPACES TO OPC-GLS-FMEN( I ).      *    MOVE FRM-CPIM-AEY TO OPC-COD-OPCI-ATR( I ).      *    MOVE FRM-CPIM-AEY TO OPC-GLS-FMEN-ATR( I ).           MOVE SPACES TO OP1-COD-OPCI( J ).           MOVE SPACES TO OP1-GLS-FMEN( J ).      *    MOVE FRM-CPIM-AEY TO OP1-COD-OPCI-ATR( J ).      *    MOVE FRM-CPIM-AEY TO OP1-GLS-FMEN-ATR( J ).       FIN-INI-OPCD.           EXIT.       BUS-FUNC SECTION.       INI-BUS-FUNC.      * llamada a la rutina de verificacion de permisos para verificar      * un funcion*% IF PRV_CST      * considera que la funcion puede ser el llamado a otro sistema, si no      * es asi entonces :      * considera que la funcion puede ser un menu con lo cual muestra      * de todas formas las opciones que ese menu tiene ( ya que 'puede'      * tener privilegio para una de las opciones de ese menu, y en caso      * que no tenga no importa, ya que se validara privilegio al intentar      * llamar a la opcion ).           MOVE 'GI'                TO UYP-COD-TDPU.           MOVE SPACES              TO UYP-COD-PREG.           IF MNU-COD-SIST IN MNU = TSC-SIST OR              MNU-COD-SIST IN MNU NOT > SPACES               MOVE TSC-SIST            TO UYP-COD-SIST               MOVE MNU-COD-NEMO IN MNU TO UYP-COD-NEMO               IF MNU-COD-TFUN IN MNU = 'MEN'                   MOVE 'S' TO UYP-IND-RESP                   GO TO CON-BUS-FUNC               ELSE                   NEXT SENTENCE           ELSE               MOVE MNU-COD-SIST IN MNU TO UYP-COD-SIST.           MOVE 'GNSPPPRV' TO SYS-PROG.           MOVE UYP-VARI   TO SYS-CMMA.           MOVE +47        TO SYS-TCMA.           MOVE SYS-LINK   TO SYS-CMND.           PERFORM GNS-PRO-SYS.           MOVE SYS-CMMA   TO UYP-VARI.*% ELSE*% IF PRV_BCI           IF WSS-IPRV-TODOS-MENUS               GO TO CON-BUS-FUNC.           MOVE MNU-COD-NEMO IN MNU TO USP-PTA-STR.           COPY USPC103.           IF USP-PERMISO NOT = 'P'               GO TO NXT-BUS-FUNC.*% END*% END       CON-BUS-FUNC.           IF MNU-NUM-FILA < 3 OR MNU-NUM-FILA > 22               MOVE 'GNS' TO MSG-COD-SIST               MOVE 'MNUFILAINV' TO MSG-COD-MENS               PERFORM GET-MSG               MOVE MSG-GLS-DESC TO FRM-MENS               MOVE 1 TO WSS-STAT               GO TO FIN-BUS-FUNC.           SUBTRACT 2 FROM MNU-NUM-FILA.           IF MNU-NUM-COLU = 1                MOVE '0' TO WSS-IFRM                MULTIPLY MNU-NUM-FILA BY 2 GIVING I                SUBTRACT 1 FROM I                MOVE MNU-COD-OPCI TO OPC-COD-OPCI( I )                MOVE MNU-GLS-FMEN TO OPC-GLS-FMEN( I )      *DFHBMASB      *         MOVE '8' TO OPC-COD-OPCI-ATR( I )           ELSE           IF MNU-NUM-COLU = 41                MOVE '0' TO WSS-IFRM                MULTIPLY MNU-NUM-FILA BY 2 GIVING I                MOVE MNU-COD-OPCI TO OPC-COD-OPCI( I )                MOVE MNU-GLS-FMEN TO OPC-GLS-FMEN( I )      *DFHBMASB      *         MOVE '8' TO OPC-COD-OPCI-ATR( I )           ELSE           IF MNU-NUM-COLU = 24                MOVE '1' TO WSS-IFRM                MOVE MNU-COD-OPCI TO OP1-COD-OPCI(MNU-NUM-FILA)                MOVE MNU-GLS-FMEN TO OP1-GLS-FMEN(MNU-NUM-FILA)      *DFHBMASB      *         MOVE '8' TO OP1-COD-OPCI-ATR(MNU-NUM-FILA)           ELSE               MOVE 'GNS' TO MSG-COD-SIST               MOVE 'MNUCOLUINV' TO MSG-COD-MENS               PERFORM GET-MSG               MOVE MSG-GLS-DESC TO FRM-MENS               MOVE 1 TO WSS-STAT               GO TO FIN-BUS-FUNC.*% IF PRV_CST           IF WSS-IFRM = 0 AND UYP-IND-RESP NOT = 'S'      *DFHBMASK               MOVE '0' TO OPC-COD-OPCI-ATR( I )           ELSE           IF WSS-IFRM = 1 AND UYP-IND-RESP NOT = 'S'      *DFHBMASK               MOVE '0' TO OP1-COD-OPCI-ATR(MNU-NUM-FILA).*% END       NXT-BUS-FUNC.           MOVE FIO-GET-NXT-ALT TO FIO-CMND.           MOVE 'MNU-COD-IMEN'  TO FIO-AKEY.           PERFORM VID-MNU.       FIN-BUS-FUNC.           EXIT.      ******************************************************************       BUS-CRPF SECTION.       INI-BUS-CRPF.           MOVE 0 TO WSS-IND-CMND.           MOVE MNU-GLS-PROG TO WSS-SIST.           IF WSS-SIST NOT = 'GNS'               MOVE MNU-COD-SIST TO WSS-SIST.           MOVE SPACES       TO WSS-AUX-CRPF.      *           IF MNU-GLS-PROG NOT > SPACES                MOVE 'GNSPPMEN' TO WSS-AUX-CMNP                PERFORM BUS-PRMC                GO TO FIN-BUS-CRPF.      *           MOVE MNU-GLS-PROG TO RPF-KEY-DPRO.           MOVE 'C '         TO RPF-KEY-TRYC.           MOVE SPACES       TO RPF-KEY-DARC.           MOVE FIO-GET-KEY TO FIO-CMND.           PERFORM VID-RPF.           IF NOT FIO-STAT-OKS                MOVE 'GNSPPMEN' TO WSS-AUX-CMNP                PERFORM BUS-PRMC                GO TO FIN-BUS-CRPF.           IF RPF-GLS-PRMT NOT > SPACES               PERFORM BUS-PRMC           ELSE           IF RPF-GLS-PRMT NOT = 'NOMSG'               MOVE RPF-GLS-PRMT TO WSS-AUX-PRMC           ELSE               MOVE SPACES TO WSS-AUX-PRMC.           IF RPF-GLS-UARC NOT > SPACES                MOVE 'GNSPPMEN' TO WSS-AUX-CMNP           ELSE                MOVE RPF-GLS-UARC TO WSS-AUX-CMNP.           MOVE MNU-GLS-PROG TO RPF-KEY-DPRO.           MOVE 'C0'         TO RPF-KEY-TRYC.           MOVE FIO-GET-NLS  TO FIO-CMND.           PERFORM VID-RPF.           IF NOT FIO-STAT-OKS                 GO TO FIN-BUS-CRPF.           PERFORM LEE-CRPF.           MOVE FIO-END-BRW TO FIO-CMND.           PERFORM VID-RPF.           PERFORM BUS-GLOS VARYING I FROM 1 BY 1 UNTIL I > 10.*% IF PRV_CST           PERFORM CHK-PRV-CMND.*% ELSE*% IF PRV_BCI           MOVE TSC-IPRV TO WSS-IPRV.           IF NOT WSS-IPRV-TODO               PERFORM CHK-PRV-CMND.*% END*% END       FIN-BUS-CRPF.           EXIT.       LEE-CRPF SECTION.       INI-LEE-CRPF.           IF NOT ( FIO-STAT-OKS AND RPF-KEY-DPRO = MNU-GLS-PROG AND                                     RPF-KEY-TREG = 'C' )                   GO TO FIN-LEE-CRPF.           IF MNU-COD-CMND IN MNU > SPACES AND              MNU-COD-CMND = RPF-COD-CCMN               MOVE MNU-COD-CMND TO WSS-AUX-CMND               MOVE 1            TO WSS-IND-CMND.           MOVE RPF-KEY-CORR TO I.           ADD 1 I GIVING K.           MOVE RPF-COD-CCMN TO WSS-COD-CMND( K )           MOVE RPF-COD-CCPP TO WSS-COD-CCPP( K )           MOVE RPF-IND-STPP TO WSS-IND-STPP( K )           MOVE RPF-GLS-PRMT TO WSS-GLS-PRMT( K )           MOVE RPF-GLS-CONF TO WSS-GLS-CONF( K )           MOVE RPF-GLS-UARC TO WSS-GLS-UARC( K )           MOVE FIO-GET-NXT TO FIO-CMND.           PERFORM VID-RPF.           GO TO INI-LEE-CRPF.       FIN-LEE-CRPF.           EXIT.       BUS-MGKY SECTION.       INI-BUS-MGKY.           MOVE 'MSGKEY' TO MSG-COD-MENS.           MOVE 'GNS'    TO MSG-COD-SIST.           PERFORM GET-MSG.      *    MOVE MSG-GLS-DESC TO SCR-MGKY.       FIN-BUS-MGKY.           EXIT.       BUS-PRMC SECTION.       INI-BUS-PRMC.           IF MNU-COD-TFUN = 'MEN'               MOVE 'PRMMEN' TO MSG-COD-MENS           ELSE               MOVE 'PRMPGI' TO MSG-COD-MENS.           MOVE 'GNS'    TO MSG-COD-SIST.           PERFORM GET-MSG.           MOVE MSG-GLS-DESC TO WSS-AUX-PRMC.       FIN-BUS-PRMC.           EXIT.       BUS-GLOS SECTION.       INI-BUS-GLOS.           IF WSS-COD-CMND( I ) NOT > SPACES               GO TO FIN-BUS-GLOS.           IF WSS-GLS-PRMT( I ) NOT > SPACES               MOVE SPACES TO WSS-COD-MENS               IF WSS-GLS-UARC( I ) NOT > SPACES                   MOVE 'GNS'             TO MSG-COD-SIST                   MOVE 'FLD'             TO WSS-COD-TMN1                   MOVE WSS-COD-CCPP( I ) TO WSS-COD-TMN2                   MOVE WSS-COD-MENS      TO MSG-COD-MENS                   PERFORM GET-MSG                   MOVE MSG-GLS-DESC TO WSS-GLS-PRMT( I )               ELSE                   MOVE 'GNS'             TO MSG-COD-SIST                   MOVE 'SUB'             TO WSS-COD-TMN1                   MOVE WSS-COD-CCPP( I ) TO WSS-COD-TMN2                   MOVE WSS-COD-MENS      TO MSG-COD-MENS                   PERFORM GET-MSG                   MOVE MSG-GLS-DESC TO WSS-GLS-PRMT( I )           ELSE           IF WSS-GLS-PRMT( I ) = 'NOMSG'               MOVE SPACES TO WSS-GLS-PRMT( I ).           IF WSS-GLS-CONF( I ) NOT > SPACES               MOVE SPACES TO WSS-COD-MENS               MOVE 'GNS'             TO MSG-COD-SIST               MOVE 'CNF'             TO WSS-COD-TMN1               MOVE WSS-COD-CCPP( I ) TO WSS-COD-TMN2               MOVE WSS-COD-MENS      TO MSG-COD-MENS               PERFORM GET-MSG               MOVE MSG-GLS-DESC TO WSS-GLS-CONF( I )           ELSE           IF WSS-GLS-CONF( I ) = 'NOMSG'               MOVE SPACES TO WSS-GLS-CONF( I ).       FIN-BUS-GLOS.           EXIT.      ******************************************************************       VID-MNU SECTION.       INI-VID-MNU.           MOVE TSC-SIST TO FIO-SIST.           PERFORM GNS-FIO-MNU.       FIN-VID-MNU.           EXIT.       VID-RPF SECTION.       INI-VID-RPF.           MOVE WSS-SIST TO FIO-SIST.           PERFORM GNS-FIO-RPF.       FIN-VID-RPF.           EXIT.      ******************************************************************       PUT-MHDR SECTION.       INI-PUT-MHDR.      *JSS-INI 23-DEC-1994           IF ( TSC-TFUN = 'XMC' OR 'XMX' ) OR              ( TSC-AMHD = 'N' )               IF ( TSC-ASCR NOT > SPACES OR TSC-ASCR = 'C' OR                    TSC-ASCR = 'L' )                   MOVE 1 TO FRM-PLIN                   MOVE 0 TO FRM-NLIN                   MOVE FRM-CLR-FRM TO FRM-CMND                   PERFORM GNS-PRO-FRM                   GO TO FIN-PUT-MHDR               ELSE                   GO TO FIN-PUT-MHDR.           IF ( TSC-NMHD NOT > SPACES ) OR ( TSC-NMHD = 'GNSFHDR' )               PERFORM GNSSCRHDR               MOVE 'GNSFHDR' TO FRM-NAME               MOVE 'GNSAHDR' TO FRM-NLIB               MOVE HDR-FLD   TO FRM-DFLD           ELSE               MOVE TSC-NMHD   TO FRM-NAME               MOVE TSC-LMHD   TO FRM-NLIB               MOVE LOW-VALUES TO FRM-DFLD.           IF ( TSC-AMHD NOT > SPACES ) OR ( TSC-AMHD = 'E' )               MOVE FRM-SINI-DB1F TO FRM-SINI           ELSE           IF TSC-AMHD = 'S'               MOVE FRM-SINI-DBNF TO FRM-SINI           ELSE           IF TSC-AMHD = 'M'               MOVE FRM-SINI-DBLF TO FRM-SINI           ELSE               MOVE FRM-SINI-DB1F TO FRM-SINI.           MOVE FRM-INI TO FRM-CMND.      *JSS-FIN 23-DEC-1994           PERFORM GNS-PRO-FRM.       FIN-PUT-MHDR.           EXIT.       GNSSCRHDR SECTION.       INI-GNSSCRHDR.           MOVE SPACES       TO HEA-DOBL.           MOVE MNU-GLS-FPRO TO HEA-SIMP.           PERFORM HDR-TITU.           MOVE TSC-SIST     TO HDR-COD-SIST.           MOVE MNU-COD-OPCI TO HDR-GLS-NFRM.           MOVE HEA-DOBL     TO HDR-GLS-FPRO.           PERFORM GET-FHOY.           MOVE HOY-DHOY TO HEA-NUM-DMSA IN HEA-FEC-DMSA.           MOVE HOY-MHOY TO HEA-NUM-MMSA IN HEA-FEC-DMSA.           MOVE HOY-SHOY TO HEA-NUM-SMSA IN HEA-FEC-DMSA.           MOVE HOY-AHOY TO HEA-NUM-AMSA IN HEA-FEC-DMSA.           MOVE '/'      TO HEA-GLS-SLA1 HEA-GLS-SLA2.           MOVE HEA-FEC-DMSA TO HDR-FEC-DMSA IN HDR-FLD.           IF TSC-SIST = 'GNS'               MOVE TSC-SISG TO HDR-COD-FUNC           ELSE               MOVE SPACES TO HDR-COD-FUNC.      *JSS MOVE EIBTRMID TO HDR-GLS-TRMI.      *JSS-IBM MOVE SPACES TO HDR-GLS-HORA.           MOVE SPACES TO HDR-GLS-GLS1                          HDR-GLS-GLS2                          HDR-GLS-GLS3.           PERFORM GNS-ERR-QUE.           MOVE EIBTRMID TO QUE-TERM.           MOVE 'PKB'    TO QUE-TYPE.           MOVE 1     TO QUE-NITM.           MOVE +3000 TO QUE-LITM.           MOVE QUE-GET TO QUE-CMND.           PERFORM GNS-PRO-QUE.           IF QUE-STAT = QUE-STAT-OKS               MOVE QUE-DATA TO WSS-TSC-AUXI               MOVE '8'      TO HDR-GLS-GLS3-ATR               IF QUE-IKEY = 'V31'                   MOVE WSS-TSC-OPCI TO HDR-GLS-GLS3               ELSE                   MOVE WSS-CMA-OPCI TO HDR-GLS-GLS3.           MOVE EIBTRMID TO QUE-TERM.           MOVE 'KYM'    TO QUE-TYPE.           MOVE 1     TO QUE-NITM.           MOVE +3000 TO QUE-LITM.           MOVE QUE-GET TO QUE-CMND.           PERFORM GNS-PRO-QUE.           IF QUE-STAT = QUE-STAT-OKS               MOVE '8'   TO HDR-GLS-GLS2-ATR*% IF PGM_PER      *JSS     MOVE 'PA2' TO HDR-GLS-GLS2.               MOVE 'PF2' TO HDR-GLS-GLS2.*% ELSE               MOVE 'PA2' TO HDR-GLS-GLS2.*% END       FIN-GNSSCRHDR.           EXIT.       HDR-TITU SECTION.       INI-HDR-TITU.           IF HEA-SIMP = SPACES                      GO TO FIN-HDR-TITU.           PERFORM BUS-LIMI VARYING IMIN FROM 1 BY 1                      UNTIL HEA-GLS-SIMP(IMIN) NOT = SPACES.           PERFORM BUS-LIMI VARYING IMAX FROM 31 BY -1                      UNTIL HEA-GLS-SIMP(IMAX) NOT = SPACES.           IF MNU-IND-EXGL IN MNU = 'N'               COMPUTE L = ( 61 - ( IMAX - IMIN + 1 ) ) / 2               MOVE 1 TO I           ELSE               COMPUTE                  L = ( 61 - ( 2 * ( IMAX - IMIN + 1 ) - 1 ) ) / 2 + 1               MOVE 2 TO I.           PERFORM PUT-TITU                   VARYING K FROM IMIN BY 1 UNTIL K > IMAX.       FIN-HDR-TITU.           EXIT.       BUS-LIMI SECTION.       INI-BUS-LIMI.       FIN-BUS-LIMI.           EXIT.       PUT-TITU SECTION.       INI-PUT-TITU.           MOVE HEA-GLS-SIMP( K ) TO HEA-GLS-DOBL( L ).           ADD I TO L.       FIN-PUT-TITU.           EXIT.      ******************************************************************       PUT-MSCR SECTION.       INI-PUT-MSCR.      *JSS-INI 23-DEC-1994           IF TSC-AMPG = 'N'               GO TO FIN-PUT-MSCR.      *JSS-FIN 23-DEC-1994           IF TSC-NMAP NOT > SPACES AND TSC-NLIB NOT > SPACES               IF WSS-IFRM = '0'                   MOVE 'GNSFOPC' TO TSC-NMAP                   MOVE 'GNSAOPC' TO TSC-NLIB               ELSE                   MOVE 'GNSFOP1' TO TSC-NMAP                   MOVE 'GNSAOP1' TO TSC-NLIB.           IF TSC-NMAP NOT > SPACES               MOVE TSC-NLIB TO TSC-NMAP.           IF TSC-NLIB NOT > SPACES               MOVE TSC-NMAP TO TSC-NLIB.           MOVE TSC-NMAP TO FRM-NAME.           MOVE TSC-NLIB TO FRM-NLIB.           IF WSS-IFRM = '0'               MOVE OPC-FLD TO FRM-DFLD           ELSE               MOVE OP1-FLD TO FRM-DFLD.      *    MOVE FRM-SINI-DBNF TO FRM-SINI.           IF TSC-TFUN = 'MEN'               MOVE FRM-SINI-DBNF TO FRM-SINI           ELSE               MOVE FRM-SINI-DBLF TO FRM-SINI.      *           MOVE FRM-INI       TO FRM-CMND.           PERFORM GNS-PRO-FRM.           IF WSS-CCOD-APCT OR WSS-CCOD-ABM0               MOVE SPACES TO MNU-GLS-PROG IN MNU               MOVE SPACES TO MNU-GLS-TRAN IN MNU               MOVE SPACES TO MNU-COD-CMND IN MNU.       FIN-PUT-MSCR.           EXIT.      ******************************************************************       HBL-CMN SECTION.       INI-HBL-CMN.           IF WSS-CCOD-APCT OR WSS-CCOD-ABM0               MOVE 'GNS'     TO MSG-COD-SIST               MOVE 'CICABND' TO MSG-COD-TMSG               MOVE WSS-CCOD  TO MSG-COD-CMSG               PERFORM GET-MSG               MOVE MSG-GLS-DESC IN MSG TO TRL-GLS-MENS IN TRL-FLD.      *JSS-INI 23-DEC-1994           IF ( TSC-TFUN = 'HMX' OR 'XMX' ) OR              ( TSC-AMCM = 'N' )      *JSS-FIN 23-DEC-1994               MOVE LOW-VALUES TO TRL-GLS-TERM IN TRL-FLD               MOVE LOW-VALUES TO TRL-COD-CMND IN TRL-FLD               MOVE LOW-VALUES TO TRL-GLS-PRMT IN TRL-FLD               MOVE LOW-VALUES TO TRL-COD-CACC IN TRL-FLD               GO TO CON-HBL-CMN.           PERFORM PUT-CMND VARYING CMN-K FROM 1 BY 1 UNTIL CMN-K > 10.           IF TSC-TFUN = 'MEN'               MOVE 'PFSMEN' TO MSG-COD-MENS           ELSE               MOVE 'PFSCMN' TO MSG-COD-MENS.           MOVE 'GNS' TO MSG-COD-SIST.           PERFORM GET-MSG.           MOVE MSG-GLS-DESC TO WSS-MEN1.           MOVE MSG-GLS-MENS TO WSS-MEN2.           MOVE WSS-MENS TO TRL-GLS-TERM.           MOVE CMN-IDX-CCMN TO TRL-COD-CMND.           MOVE TSC-PRMC     TO TRL-GLS-PRMT.           MOVE SPACES       TO TRL-COD-CACC.       CON-HBL-CMN.           MOVE FRM-CPIM-UBY TO TRL-COD-CACC-ATR.           MOVE -1           TO TRL-COD-CACC-LEN.           PERFORM CMN-PUTA.           PERFORM CMN-EXIT.       FIN-HBL-CMN.           EXIT.       PUT-CMND SECTION.       INI-PUT-CMND.           MOVE TSC-CCMN ( CMN-K ) TO CMN-COD-CCMN ( CMN-K ).       FIN-PUT-CMND.             EXIT.      ******************************************************************       CMN-PUTA SECTION.       INI-CMN-PUTA.           MOVE 'GNSFCMN' TO FRM-NAME.           MOVE 'GNSACMN' TO FRM-NLIB.      *JSS      *    MOVE FRM-CPIM-AEY TO TRL-GLS-MENS-ATR.           MOVE FRM-CPSF-AEY TO TRL-GLS-MENS-ATR.      **% IF PGM_PER      *JSS-INI 27-APR-1994           IF TSC-PASW = 'S'               MOVE FRM-CPIM-UNY TO TRL-COD-CACC-ATR           ELSE           IF TRL-COD-CACC-ATR NOT = FRM-CPIM-AEY AND              TRL-COD-CACC-ATR NOT = FRM-CPSF-AEY               MOVE FRM-CPIM-UBY TO TRL-COD-CACC-ATR.      *JSS-FIN 27-APR-1994*% END           MOVE TRL-FLD   TO FRM-DFLD.*% IF REALIA           MOVE FRM-INI       TO FRM-CMND.           MOVE FRM-SINI-DBNF TO FRM-SINI.*% ELSE           MOVE FRM-PUT-ALL TO FRM-CMND.*% END           PERFORM GNS-PRO-FRM.       FIN-CMN-PUTA.           EXIT.       CMN-EXIT SECTION.       INI-CMN-EXIT.           MOVE 'K' TO TSC-ICMN.           PERFORM GNS-PUT-TSC.           MOVE WSS-GLS-TRAN TO SYS-NTRN.      *     MOVE 'K'      TO SCR-ICMN.      *     MOVE SCR-VARI TO SYS-CMMA.      *     MOVE SCR-TCMA TO SYS-TCMA.           MOVE ' ' TO SYS-CMMA.           MOVE +1  TO SYS-TCMA.     *           MOVE SYS-RTRN TO SYS-CMND.           PERFORM GNS-PRO-SYS.       FIN-CMN-EXIT.           EXIT.      ******************************************************************       BUS-CMND SECTION.       INI-BUS-CMND.           MOVE 'CMD    NEXST' TO MSG-COD-MENS.           MOVE 1 TO CMN-I.           SET TSC-ITBL TO 1.           SEARCH TSC-TABL VARYING CMN-I                  WHEN TSC-CCMN( TSC-ITBL ) = WSS-OPCI                         GO TO SET-BUS-CMND.           GO TO FIN-BUS-CMND.       SET-BUS-CMND.           MOVE SPACES TO MSG-COD-MENS.       FIN-BUS-CMND.           EXIT.       PUT-DCMN SECTION.       INI-PUT-DCMN.           MOVE CMN-I TO TSC-I.           MOVE TSC-CCMN( TSC-I ) TO TSC-CMND.      *ESTOS MOVES SE HACEN AL FINAL EN LA 'SECTION' CAL-PROG      *     MOVE TSC-CCMN( TSC-I ) TO SCR-CMND.      *     MOVE TSC-CCPP( TSC-I ) TO SCR-CCPP.      *     MOVE TSC-STPP( TSC-I ) TO SCR-STPP.      *     MOVE TSC-PRMT( TSC-I ) TO SCR-PRMT.      *     MOVE TSC-CONF( TSC-I ) TO SCR-CONF.      *     MOVE SCR-INST-HKY          TO SCR-INST.      *      *JSS-INI 23-DEC-1994           IF ( TSC-TFUN = 'HMX' OR 'XMX' ) OR              ( TSC-AMCM = 'N' )      *JSS-FIN 23-DEC-1994               MOVE LOW-VALUES TO TRL-GLS-TERM IN TRL-FLD               MOVE LOW-VALUES TO TRL-COD-CMND IN TRL-FLD               MOVE LOW-VALUES TO TRL-GLS-PRMT IN TRL-FLD               MOVE LOW-VALUES TO TRL-COD-CACC IN TRL-FLD               MOVE SPACES     TO TRL-GLS-MENS IN TRL-FLD               GO TO CON-PUT-DCMN.           MOVE SPACES                TO CMN-IDX-CCMN.           MOVE TSC-CCMN( TSC-I ) TO CMN-COD-CCMN( TSC-I ).           MOVE CMN-IDX-CCMN          TO TRL-COD-CMND.           MOVE SPACES                TO TRL-GLS-PRMT TRL-COD-CACC.*% IF PGM_PER           MOVE 'GNS'                 TO MSG-COD-SIST.           MOVE SPACES                TO WSS-COD-MENS.           MOVE 'PFSPGI'              TO WSS-COD-TMSG.           MOVE TSC-STPP( TSC-I ) TO WSS-COD-TMN3.           MOVE WSS-COD-MENS          TO MSG-COD-MENS.           PERFORM GET-MSG.           MOVE MSG-GLS-DESC TO WSS-MEN1.           MOVE MSG-GLS-MENS TO WSS-MEN2.           MOVE WSS-MENS TO TRL-GLS-TERM.      *    MOVE SCR-MGKY TO TRL-GLS-MENS.           PERFORM BUS-MGKY.           MOVE MSG-GLS-DESC TO TRL-GLS-MENS.*% ELSE      * ISP:  17-MAR-1993 07:54:47           IF TSC-SIST = 'GNS' AND              TSC-SISG > SPACES                MOVE TSC-SISG TO MSG-COD-SIST           ELSE                MOVE TSC-SIST TO MSG-COD-SIST.           MOVE '%'          TO WSS-COD-MSG1.           MOVE TSC-PROG     TO WSS-COD-MSG2.           MOVE TSC-CMND     TO WSS-COD-MSG3.           MOVE WSS-COD-MSG0 TO MSG-COD-MENS.           PERFORM GET-MSG.           IF FIO-STAT-OKS AND MSG-IND-VIGE = 'S'               MOVE MSG-GLS-DESC TO WSS-MEN1               MOVE MSG-GLS-MENS TO WSS-MEN2               MOVE WSS-MENS TO TRL-GLS-TERM           ELSE               MOVE 'GNS'                 TO MSG-COD-SIST               MOVE SPACES                TO WSS-COD-MENS               MOVE 'PFSPGI'              TO WSS-COD-TMSG               MOVE TSC-STPP( TSC-I ) TO WSS-COD-TMN3               MOVE WSS-COD-MENS          TO MSG-COD-MENS               PERFORM GET-MSG               MOVE MSG-GLS-DESC TO WSS-MEN1               MOVE MSG-GLS-MENS TO WSS-MEN2               MOVE WSS-MENS TO TRL-GLS-TERM.      *    MOVE SCR-MGKY TO TRL-GLS-MENS.           PERFORM BUS-MGKY.           MOVE MSG-GLS-DESC TO TRL-GLS-MENS.      * ISP:  17-MAR-1993 07:54:47*% END       CON-PUT-DCMN.      *    MOVE FRM-CPIM-AEY TO TRL-COD-CACC-ATR.           MOVE FRM-CPSF-AEY TO TRL-COD-CACC-ATR.           MOVE -1           TO TRL-COD-CACC-LEN.       FIN-PUT-DCMN.           EXIT.       GET-PROV SECTION.       INI-GET-PROV.           MOVE SPACES TO TSC-PROV.           MOVE SPACES TO TSC-NTRV.           IF TSC-TFUN NOT = 'PTC'               GO TO FIN-GET-PROV.           MOVE TSC-PROG     TO RPF-KEY-DPRO.           MOVE 'C '         TO RPF-KEY-TRYC.           MOVE SPACES       TO RPF-KEY-DARC.      *           MOVE TSC-PROG TO FIO-SIST.           IF FIO-SIST NOT = 'GNS'               MOVE TSC-SIST TO FIO-SIST.      *           MOVE FIO-GET-KEY TO FIO-CMND.           PERFORM GNS-FIO-RPF.           IF NOT FIO-STAT-OKS               GO TO FIN-GET-PROV.           MOVE RPF-GLS-ABRT IN RPF TO WSS-PPPV.           MOVE WSS-PROV            TO TSC-PROV.           MOVE WSS-NTRV            TO TSC-NTRV.       FIN-GET-PROV.           EXIT.       GNS-PUT-TSC SECTION.       INI-GNS-PUT-TSC.           EXEC CICS HANDLE CONDITION                     QIDERR (PUT-GNS-PUT-TSC)                     ITEMERR(PUT-GNS-PUT-TSC)           END-EXEC.      *           MOVE EIBTRMID TO TSC-TERM.      *    MOVE +720     TO TSC-LITM.           MOVE TSC-TTSC TO TSC-LITM.           MOVE +1 TO QUE-NITM           EXEC CICS WRITEQ TS                     QUEUE(TSC-COLA)                     FROM(TSC-ITEM)                     LENGTH(TSC-LITM)                     ITEM(QUE-NITM)                     REWRITE           END-EXEC.           GO TO FIN-GNS-PUT-TSC.       PUT-GNS-PUT-TSC.           EXEC CICS WRITEQ TS                     QUEUE(TSC-COLA)                     FROM(TSC-ITEM)                     LENGTH(TSC-LITM)           END-EXEC.       FIN-GNS-PUT-TSC.           EXIT.       GNS-GET-TSC SECTION.       INI-GNS-GET-TSC.           EXEC CICS HANDLE CONDITION                     QIDERR (NEX-GNS-GET-TSC)           END-EXEC.           MOVE EIBTRMID TO TSC-TERM.      *    MOVE +720     TO TSC-LITM.           MOVE TSC-TTSC TO TSC-LITM.           EXEC CICS READQ TS                     QUEUE(TSC-COLA)                     INTO(TSC-ITEM)                     LENGTH(TSC-LITM)                     ITEM(1)           END-EXEC.      *ESTE MOVE ES PARA CONTROLAR LA VUELTA DE CONGELAR Y OTRAS      *SITUACIONES           IF ( WSS-SEFN = WSS-SXCT-RED ) OR ( WSS-SCOD = 'S' OR 'SD' )               MOVE SCR-INST-HCM TO TSC-INST.      *           MOVE TSC-SIST TO SCR-SIST.           GO TO FIN-GNS-GET-TSC.       NEX-GNS-GET-TSC.           MOVE 'NO EXISTE PARA PROCESADOR MENU, TEMP. STORAGE : '                         TO SYS-MEN1.           MOVE TSC-COLA TO SYS-MEN2.           MOVE SYS-ABOR  TO SYS-CMND.           PERFORM GNS-PRO-SYS.       FIN-GNS-GET-TSC.           EXIT.       GNS-PUT-IDD SECTION.       INI-GNS-PUT-IDD.           EXEC CICS HANDLE CONDITION                     QIDERR (PUT-GNS-PUT-IDD)                     ITEMERR(PUT-GNS-PUT-IDD)           END-EXEC.           MOVE +490     TO QUE-LITM.           MOVE EIBTRMID TO WSS-TIDD.           MOVE +1       TO QUE-NITM.           EXEC CICS WRITEQ TS                     QUEUE(WSS-QIDD)                     FROM(IDD-REGI)                     LENGTH(QUE-LITM)                     ITEM(QUE-NITM)                     REWRITE           END-EXEC.           GO TO FIN-GNS-PUT-IDD.       PUT-GNS-PUT-IDD.           EXEC CICS WRITEQ TS                     QUEUE(WSS-QIDD)                     FROM(IDD-REGI)                     LENGTH(QUE-LITM)           END-EXEC.       FIN-GNS-PUT-IDD.           EXIT.       CAL-PROG SECTION.       INI-CAL-PROG.           IF TSC-CIDD > SPACES               MOVE TSC-CIDD TO IDD-COD-CIDD IN IDD                                IFD-COD-CIFD IN IFD               GO TO CON-CAL-PROG.           MOVE TSC-PROG     TO RPF-KEY-DPRO.           MOVE 'A '         TO RPF-KEY-TRYC.           MOVE SPACES       TO RPF-KEY-DARC.           MOVE FIO-GET-KEY TO FIO-CMND.           MOVE TSC-PROG TO WSS-SIST.           IF WSS-SIST NOT = 'GNS'               MOVE TSC-SIST TO WSS-SIST.           PERFORM VID-RPF.           IF NOT FIO-STAT-OKS               MOVE 'DEFAULT' TO IDD-COD-CIDD IN IDD                                 IFD-COD-CIFD IN IFD           ELSE           IF RPF-COD-CIFD IN RPF NOT > SPACES               MOVE 'DEFAULT' TO IDD-COD-CIDD IN IDD                                 IFD-COD-CIFD IN IFD           ELSE               MOVE RPF-COD-CIFD IN RPF TO IDD-COD-CIDD IN IDD                                           IFD-COD-CIFD IN IFD.           MOVE IDD-COD-CIDD IN IDD TO TSC-CIDD.       CON-CAL-PROG.      *IDD      *EN RIGOR SE DEBERIA PREGUNTAR IF ( TSC-TIND = 'T' ==> IDD EN TS )           MOVE FIO-GET-KEY TO FIO-CMND.           PERFORM GNS-FIO-IDD.           IF NOT FIO-STAT-OKS               PERFORM BUS-FSIS           ELSE               MOVE IDD TO IDD-REGI.           PERFORM GNS-PUT-IDD.           MOVE WSS-QIDD TO SCR-QIDD.           MOVE QUE-LITM TO SCR-LIDD.      *      *IFD           IF ( TSC-TIND = 'C' ) OR ( TSC-TINF NOT > SPACES )               MOVE FIO-GET-KEY TO FIO-CMND               PERFORM GNS-FIO-IFD               IF NOT FIO-STAT-OKS                   MOVE 'NO EXISTE REGISTRO IFD CON LLAVE :' TO SYS-MEN1                   MOVE IFD-COD-CIFD IN IFD                  TO SYS-MEN2                   MOVE SYS-ABOR TO SYS-CMND                   PERFORM GNS-PRO-SYS               ELSE                   MOVE IFD-GLS-DATA IN IFD TO IFD-FSIS.      *           IF TSC-UARC( TSC-I ) > SPACES               MOVE TSC-UARC( TSC-I ) TO AUX-UARC               MOVE TSC-PROG TO AUX-PROG               MOVE TSC-NTRN TO AUX-NTRN               MOVE AUX-PRGM TO TSC-UARC( TSC-I )               MOVE AUX-RPRG TO TSC-PROG               MOVE AUX-RTRN TO TSC-NTRN.           MOVE 'P'          TO TSC-ICMN.           MOVE SCR-INST-HCM TO TSC-INST.           PERFORM GNS-PUT-TSC.      *SE CARGAN VARIABLES DEPENDIENDO DE TSC-TINF           IF ( TSC-TINV = 'C' ) OR ( TSC-TINF NOT > SPACES )               PERFORM PRO-MOVE-SCR1           ELSE               PERFORM PRO-MOVE-SCR2.      *GRABA EN TEMPORARY STORAGE, LAS VARIABLES SCR2           IF TSC-TINV = 'T'               PERFORM PRO-PQTS-SCR2.*% IF PGM_PER           IF ( TSC-TINV = 'O' OR 'T' )      *JSS-IBM Averigua si existe cola de seteo de llaves EN ESTE CASO      *SOLO PARA V31*% ELSE           IF ( TSC-TINV = 'O' OR 'T' ) AND ( EIBCALEN = 29 )      *JSS-IBM Averigua si existe cola de seteo de llaves EN ESTE CASO      *SOLO PARA V31 Y PARA ZOOM ( EIBCALEN = 29 )*% END               PERFORM GNS-ERR-QUE               MOVE EIBTRMID TO QUE-TERM               MOVE 'KYM'    TO QUE-TYPE               MOVE 1     TO QUE-NITM               MOVE +3000 TO QUE-LITM               MOVE QUE-GET TO QUE-CMND               PERFORM GNS-PRO-QUE               IF QUE-STAT = QUE-STAT-OKS                   MOVE 'VSN'       TO TAB-COD-TTAB IN TAB                   MOVE 'RECLLAVES' TO TAB-COD-CTAB IN TAB                   MOVE 'GNS'       TO FIO-SIST                   MOVE FIO-GET-KEY TO FIO-CMND                   PERFORM GNS-FIO-TAB                   IF ( FIO-STAT-OKS AND TAB-MSC-STAT IN TAB = 'S' ) OR                      ( EIBCALEN = 29 )                       MOVE 'GKY' TO OSC-INST SCR-INST      *SE LLAMA AL PROGRAMA SEGUN TIPO DE TRASPASO DE CONTROL, ANTES      *SE CARGAN LAS VARIABLES FRM SEGUN CORRESPONDA DEPENDIENDO DE TSC-                       PERFORM PRO-MOVE-VSYS                       MOVE 'GNSPPPKE' TO SYS-PROG                   ELSE                       PERFORM PRO-MOVE-VSYS               ELSE                   PERFORM PRO-MOVE-VSYS           ELSE               PERFORM PRO-MOVE-VSYS.      *           IF TSC-TCTL = 'XCTL'               PERFORM PRO-CALL-XCTL      *     ELSE      *     IF TSC-TCTL = 'LINK'      *         PERFORM PRO-CALL-LINK      *     ELSE      *     IF TSC-TCTL = 'STAR'      *         PERFORM PRO-CALL-STAR           ELSE           IF TSC-TCTL = 'RTTR'               PERFORM PRO-CALL-RTTR           ELSE               PERFORM PRO-CALL-XCTL.       FIN-CAL-PROG.           EXIT.       PRO-MOVE-SCR1 SECTION.       INI-PRO-MOVE-SCR1.           MOVE +1110              TO OSC-TCMA.           MOVE TSC-SIST           TO OSC-SIST.           MOVE TSC-OPCI           TO OSC-FUNC.           MOVE TSC-NEMO           TO OSC-NEMO.           MOVE TSC-NTRV           TO OSC-NTRV.           MOVE TSC-NTRN           TO OSC-NTRN.           MOVE TSC-PROG           TO OSC-PROG.           MOVE TSC-NLIB           TO OSC-NLIB.           MOVE TSC-NMAP           TO OSC-NMAP.           MOVE TSC-LDOC           TO OSC-LDOC.           MOVE TSC-NDOC           TO OSC-NDOC.           MOVE TSC-FRET           TO OSC-FRET.           MOVE TSC-IPRV           TO OSC-IPRV.           MOVE TSC-SISG           TO OSC-SISG.           IF TSC-TINS > SPACES               MOVE TSC-TINS       TO OSC-INST           ELSE               MOVE SCR-INST-HKY   TO OSC-INST.           MOVE TSC-TFUN           TO OSC-TFUN.           MOVE TSC-CMNP           TO OSC-CMNP.           MOVE TSC-FFLD           TO OSC-FFLD.           MOVE TSC-I              TO OSC-I.      *    MOVE TSC-CMND           TO OSC-CMND.           MOVE TSC-CCMN( TSC-I )  TO OSC-CMND.           MOVE TSC-PRMC           TO OSC-PRMC.           MOVE TSC-CCPP( TSC-I )  TO OSC-CCPP.           MOVE TSC-STPP( TSC-I )  TO OSC-STPP.           MOVE 1 TO FRM-IFLD.       LUP-PRO-MOVE-SCR1.           MOVE TSC-CCMN(FRM-IFLD) TO OSC-COD-CCMN(FRM-IFLD).           MOVE TSC-CCPP(FRM-IFLD) TO OSC-COD-CCPP(FRM-IFLD).           MOVE TSC-STPP(FRM-IFLD) TO OSC-IND-STPP(FRM-IFLD).           MOVE TSC-PRMT(FRM-IFLD) TO OSC-GLS-PRMT(FRM-IFLD).           MOVE TSC-CONF(FRM-IFLD) TO OSC-GLS-CONF(FRM-IFLD).           MOVE TSC-UARC(FRM-IFLD) TO OSC-GLS-UARC(FRM-IFLD).           ADD 1 TO FRM-IFLD.           IF FRM-IFLD NOT > 10               GO TO LUP-PRO-MOVE-SCR1.           MOVE TSC-USER           TO OSC-USER.           MOVE TSC-OTRN           TO OSC-OTRN.           MOVE TSC-PROV           TO OSC-PROV.           MOVE 'C'                TO OSC-ICMN.       FIN-PRO-MOVE-SCR1.           EXIT.      *HACE MOVE A VARIABLES DE PROGRAMA ( NUEVA VERSION )       PRO-MOVE-SCR2 SECTION.       INI-PRO-MOVE-SCR2.           MOVE +250               TO SCR-TCMA.           MOVE TSC-SIST           TO SCR-SIST.           MOVE TSC-SISG           TO SCR-SISG.           MOVE TSC-NTRN           TO SCR-NTRN.           MOVE TSC-PROG           TO SCR-PROG.           MOVE TSC-NTRV           TO SCR-NTRV.           MOVE TSC-PROV           TO SCR-PROV.           MOVE TSC-NLIB           TO SCR-NLIB.           MOVE TSC-NMAP           TO SCR-NMAP.           IF TSC-TINS > SPACES               MOVE TSC-TINS       TO SCR-INST           ELSE               MOVE SCR-INST-HKY   TO SCR-INST.           MOVE TSC-CMNP           TO SCR-CMNP.      *    MOVE TSC-CMND           TO SCR-CMND.           MOVE TSC-CCMN( TSC-I )  TO SCR-CMND.           MOVE TSC-CCPP( TSC-I )  TO SCR-CCPP.           MOVE TSC-STPP( TSC-I )  TO SCR-STPP.           MOVE TSC-PRMT( TSC-I )  TO SCR-PRMT.           MOVE TSC-CONF( TSC-I )  TO SCR-CONF.           MOVE TSC-USER           TO SCR-USER.           MOVE TSC-OTRN           TO SCR-OTRN.           MOVE 'C'                TO SCR-ICMN.      *                                SCR-QIDD      *                                SCR-LIDD           MOVE TSC-NEMO           TO SCR-NEMO.           MOVE TSC-LDOC           TO SCR-LDOC.           MOVE TSC-NDOC           TO SCR-NDOC.           MOVE TSC-FRET           TO SCR-FRET.           MOVE TSC-IPRV           TO SCR-IPRV.           MOVE TSC-FFLD           TO SCR-FFLD.*% IF PGM_PER           MOVE SCR-USER TO RUO-COD-USER.           PERFORM GET-RUO.           IF RUO-COD-STAT = '00'               MOVE RUO-COD-OFIC TO SCR-OFIC           ELSE               MOVE SPACES TO SCR-OFIC.*% END       FIN-PRO-MOVE-SCR2.           EXIT.       PRO-PQTS-SCR2 SECTION.       INI-PRO-PQTS-SCR2.      *GRABAR TEMPORARY STORAGE CON SCR-VARI Y SCR-TCMA           EXEC CICS HANDLE CONDITION                     QIDERR (PUT-PRO-PQTS-SCR2)                     ITEMERR(PUT-PRO-PQTS-SCR2)           END-EXEC.           MOVE SCR-TCMA TO QUE-LITM.           MOVE 'GSCR'   TO QUE-TERM.           MOVE EIBTRMID TO QUE-TYPE.           MOVE +1       TO QUE-NITM.           EXEC CICS WRITEQ TS                     QUEUE(QUE-COLA)                     FROM(SCR-VARI)                     LENGTH(SCR-TCMA)                     ITEM(QUE-NITM)                     REWRITE           END-EXEC.           GO TO FIN-PRO-PQTS-SCR2.       PUT-PRO-PQTS-SCR2.           EXEC CICS WRITEQ TS                     QUEUE(QUE-COLA)                     FROM(SCR-VARI)                     LENGTH(QUE-LITM)           END-EXEC.       FIN-PRO-PQTS-SCR2.           EXIT.       PRO-MOVE-VSYS SECTION.       INI-PRO-MOVE-VSYS.      *SI LAS VARIABLES DEL PROGRAMA VAN EN COMMAREA VERSION 1           IF ( TSC-TINV = 'C' ) OR ( TSC-TINF NOT > SPACES )               MOVE OSC-VARI TO SYS-CMMA      *        MOVE OSC-TCMA TO SYS-TCMA               MOVE +3500    TO SYS-TCMA           ELSE      *SI LAS VARIABLES DEL PROGRAMA VAN EN COMMAREA VERSION 2           IF TSC-TINV = 'O'               MOVE SCR-VARI TO SYS-CMMA               MOVE SCR-TCMA TO SYS-TCMA           ELSE      *SE ASUME 'T' = SI LAS VARIABLES DEL PROGRAMA VAN EN TS              MOVE SPACES   TO SYS-CMMA              MOVE 0        TO SYS-TCMA.           MOVE TSC-PROG TO SYS-PROG.           MOVE TSC-NTRN TO SYS-NTRN.       FIN-PRO-MOVE-VSYS.           EXIT.       PRO-CALL-XCTL SECTION.       INI-PRO-CALL-XCTL.           MOVE SYS-XCTL TO SYS-CMND.           PERFORM GNS-PRO-SYS.           PERFORM XCT-ERR.       FIN-PRO-CALL-XCTL.           EXIT.       PRO-CALL-RTTR SECTION.       INI-PRO-CALL-RTTR.           MOVE SYS-RTRN TO SYS-CMND.           PERFORM GNS-PRO-SYS.       FIN-PRO-CALL-RTTR.           EXIT.       GNS-PRO-KEY SECTION.       INI-GNS-PRO-KEY.           MOVE EIBAID TO FRM-FFLD.           IF NOT ( FRM-FFLD = FRM-FFLD-PF11 OR FRM-FFLD-PFK )               GO TO FIN-GNS-PRO-KEY.           PERFORM GNS-ERR-QUE.           MOVE EIBTRMID TO QUE-TERM.           MOVE 'PKB'    TO QUE-TYPE.      *     MOVE 1        TO QUE-NITM.      *     MOVE +3000    TO QUE-LITM.           MOVE +3007    TO QUE-LITM.      *     MOVE QUE-GET  TO QUE-CMND.      *     PERFORM GNS-PRO-QUE.           PERFORM GNS-CHK-QUEU.           IF QUE-STAT NOT = QUE-STAT-OKS               GO TO FIN-GNS-PRO-KEY.           EXEC CICS HANDLE CONDITION                     PGMIDERR (PGM-GNS-ERR-MNU)           END-EXEC.           MOVE DFHCOMMAREA TO SYS-CMMA.           MOVE EIBCALEN    TO SYS-TCMA.           MOVE SYS-XCTL    TO SYS-CMND.           IF QUE-IKEY = 'V31'               MOVE 'GNSPPPKB' TO SYS-PROG           ELSE               MOVE 'GNSPPPFB' TO SYS-PROG.           PERFORM GNS-PRO-SYS.       FIN-GNS-PRO-KEY.           EXIT.       GNS-PUT-FRT SECTION.       INI-GNS-PUT-FRT.           EXEC CICS HANDLE CONDITION                     QIDERR (QNX-GNS-PUT-FRT)           END-EXEC.           MOVE EIBTRMID TO RFN-TERM.           EXEC CICS DELETEQ                     QUEUE(RFN-COLA)           END-EXEC.       QNX-GNS-PUT-FRT.           MOVE TSC-CMNP                TO RFN-PROG.           MOVE MNU-COD-SIST IN MNU     TO RFN-SIST.           MOVE TSC-SISG                TO RFN-SISG.           IF MNU-COD-TFUN = 'CCA'               MOVE TSC-NEMO TO MNU-COD-FRET IN MNU.           MOVE MNU-COD-FRET IN MNU TO RFN-NEMO.           MOVE SPACES              TO RFN-CMND.*% IF PGM_BES      * BES  9-JUL-1993 18:27:40 RFN DEBE GUARDAR USUARIO           MOVE TSC-USER TO RFN-USER.           MOVE SPACES   TO RFN-PPGM.           MOVE +49 TO RFN-LITM.*% ELSE           MOVE +29 TO RFN-LITM.*% END           EXEC CICS WRITEQ TS                     QUEUE(RFN-COLA)                     FROM(RFN-ITEM)                     LENGTH(RFN-LITM)                     AUXILIARY           END-EXEC.       FIN-GNS-PUT-FRT.           EXIT.      ******************** MANEJO DE COLAS **********************      * COPY GNSBGQUE.      *Modulo Generico Manejo de Colas       GNS-CHK-QUEU SECTION.       INI-GNS-CHK-QUEU.           MOVE 1 TO QUE-NITM.           MOVE QUE-GET TO QUE-CMND.           PERFORM GNS-PRO-QUE.       FIN-GNS-CHK-QUEU.           EXIT.       GNS-QUE-EOQ SECTION.       INI-GNS-QUE-EOQ.           MOVE QUE-STAT-EOQ TO QUE-STAT.           GO TO FIN-GNS-PRO-QUE.       FIN-GNS-QUE-EOQ.           EXIT.       GNS-QUE-NEX SECTION.       INI-GNS-QUE-NEX.           MOVE QUE-STAT-NEX TO QUE-STAT.           GO TO FIN-GNS-PRO-QUE.       FIN-GNS-QUE-NEX.           EXIT.       GNS-QUE-OKS SECTION.       INI-GNS-QUE-OKS.           MOVE QUE-STAT-OKS TO QUE-STAT.           GO TO FIN-GNS-PRO-QUE.       FIN-GNS-QUE-OKS.           EXIT.      **************************************************************       GNS-ERR-QUE SECTION.       INI-GNS-ERR-QUE.           EXEC CICS HANDLE CONDITION                     QIDERR (GNS-QUE-NEX)                     ITEMERR(GNS-QUE-EOQ)                     LENGERR(GNS-QUE-OKS)           END-EXEC.       FIN-GNS-ERR-QUE.           EXIT.       GNS-PRO-QUE SECTION.       INI-GNS-PRO-QUE.           MOVE QUE-STAT-OKS TO QUE-STAT.      *     IF QUE-CMND = QUE-PUT      *         GO TO GNS-PUT-QUE      *     ELSE           IF QUE-CMND = QUE-GET               GO TO GNS-GET-QUE           ELSE      *     IF QUE-CMND = QUE-MOD      *         GO TO GNS-MOD-QUE      *     ELSE      *     IF QUE-CMND = QUE-DEL      *         GO TO GNS-DEL-QUE.           MOVE 'Comando invalido :' TO QUE-MEN1.           MOVE QUE-CMND             TO QUE-MEN2.           EXEC CICS XCTL                     PROGRAM('GNSPPABT')                     COMMAREA(QUE-MENS)                     LENGTH(+79)           END-EXEC.       GNS-GET-QUE.           EXEC CICS READQ TS                     QUEUE(QUE-COLA)                     INTO(QUE-ITEM)                     LENGTH(QUE-LITM)                     ITEM(QUE-NITM)           END-EXEC.       FIN-GNS-GET-QUE.           GO TO FIN-GNS-PRO-QUE.       FIN-GNS-PRO-QUE.           EXIT.*% IF PRV_OPI       COPY TABBFUSR.*% END*% IF NOT REALIA*% IF PGM_BCI-END/*//STEP1  EXEC PGM=AFOLIBR,PARM='NJTA,NRJS'//STEPLIB  DD DSN=ADR.LIB.V38.LOAD,DISP=SHR//MASTER   DD DSN=GNSCL.FUENTES.V31,DISP=SHR//OSJOB    DD DSN=&&TEMP,DISP=(,PASS),SPACE=(CYL,(1,1)),UNIT=SYSDA//SYSPRINT DD SYSOUT=*//SYSPUNCH DD SYSOUT=*//SYSIN    DD *-SEL GNSPPMEN,CONS,EXEC,CCOPY,COPYDD-END/*//STEP2   EXEC DFHEITCL,PARM.LKED='MAP,XREF'//TRN.SYSIN    DD DSN=&&TEMP,DISP=OLD//COB.SYSLIB   DD DSN=GNSCL.FUENTES.V31,DISP=SHR,SUBSYS=LAM//             DD DSN=GNSCL.FUENTES.V30,DISP=SHR,SUBSYS=LAM//             DD DSN=GNSCL.FUENTES,DISP=SHR,SUBSYS=LAM//             DD DSN=GNSCL.FIO.LINEA,DISP=SHR,SUBSYS=LAM//             DD DSN=TABCL.FUENTES,DISP=SHR,SUBSYS=LAM//             DD DSN=TABCL.FIO.LINEA,DISP=SHR,SUBSYS=LAM//             DD DSN=SGCCL.FUENTES,DISP=SHR,SUBSYS=LAM//             DD DSN=SGCCL.FIO.LINEA,DISP=SHR,SUBSYS=LAM//             DD DSN=DEUCL.FUENTES,DISP=SHR,SUBSYS=LAM//             DD DSN=DEUCL.FIO.LINEA,DISP=SHR,SUBSYS=LAM//             DD DSN=COLCL.FUENTES,DISP=SHR,SUBSYS=LAM//             DD DSN=COLCL.FIO.LINEA,DISP=SHR,SUBSYS=LAM//             DD DSN=SUPCL.FUENTES,DISP=SHR,SUBSYS=LAM//             DD DSN=SUPCL.FIO.LINEA,DISP=SHR,SUBSYS=LAM//             DD DSN=DAPCL.FUENTES,DISP=SHR,SUBSYS=LAM//             DD DSN=DAPCL.FIO.LINEA,DISP=SHR,SUBSYS=LAM//             DD DSN=SBTCL.FUENTES,DISP=SHR,SUBSYS=LAM//             DD DSN=SBTCL.FIO.LINEA,DISP=SHR,SUBSYS=LAM//             DD DSN=CICS.V211.COBLIB,DISP=SHR,SUBSYS=LAM//LKED.SYSLIB  DD DSN=CICS.V211.LOADLIB,DISP=SHR//             DD DSN=GNSCM.RUTINAS.CONSIST,DISP=SHR//             DD DSN=COB.VSCLLIB,DISP=SHR//LKED.SYSLMOD DD DSN=GNSCM.LINEA(GNSPPMEN),DISP=SHR//LKED.SYSLIN  DD DSN=CICS.V211.COBLIB(DFHEILIC),DISP=SHR//             DD DSN=&&LOADSET,DISP=(OLD,DELETE)//             DD DSN=ADRST.DSG27.OBJECT.DESA(DBCSVPR),DISP=SHR//*% END*% END