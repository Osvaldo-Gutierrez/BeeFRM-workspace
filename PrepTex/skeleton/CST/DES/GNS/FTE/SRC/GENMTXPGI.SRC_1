 100
	DECLARE INTEGER &
					SZTOKEN,	TOKEN	,&
			P_P,		P_Q,		ASCII_Q	,&
			CRTS_LEID,	INX_MOD,	INX_ENC	,&
			C_FILE_PGIINP,	INDI_LINE,&
			C_FILE_BNDCPY,  C_FILE_PGIOUT,  C_FILE_BNDWFL,&
			INDI_COLU,	INDI_CORR,	TEXTFIELD,&
			TOT_ORDEN,	ENTEROS	,&
			SW_POS, 	SW_LAR, 	SW_NUM	,&
			SW_ALF,		SW_DEC,&
			TOT_FIO

	DECLARE	STRING &
			V_TIP_FIO(200),&
			V_SIS_FIO(200), V_TBL_FIO(200),&
			BIP,O_L,	FILE_PGIINP,	FILE_FLG,&
			FILE_BNDCPY,	FILE_PGIOUT,	FILE_BNDWFL,&
			RESPALDO_PROGRAMA, C_Q,		ANT_VALTOKEN,&
			VALTOKEN,	VAL_STR_PTOKEN,	STRTOKEN,&
			BUFOUT,		TITULO,		POSICION,&
			CAMPO,		LARGO,		TIPO	,&
			FILA,		COLUMNA,	TEXTO1	,&
			TEXTO2,		PRIN_DATO,	PRIN_LINE,&
			PRIN_COLU,	PRIN_CORR,	FILE_CMN,&
			AUXI_FILE,	V_ORDEN(40),	DECIM,	&
			CURRENT,	PFM_SIS,	IDEN_PAI, &
			COPY_OF

	DECLARE INTEGER	CONSTANT &
			IDNTOK	= 1,	KEYTOK	= 2		,&
			NUMTOK	= 3,	EOLTOK	= 4		,&
			STRTOK	= 5,	CHRTOK	= 6		,&
			ETXTOK	= 8,	TABB	= 9		,&
			NEW_LINE= 10,	CAR_RET	= 13		,&
			NO	= 0,	ZI	= 1

 !==========================================================================

    DEF STRING ESCR_FLG
	PRIN_DATO = FORMAT$(TEXTFIELD,"#")
	PRIN_LINE = FORMAT$(INDI_LINE,"##")
	PRIN_COLU = FORMAT$(INDI_COLU,"###")
	PRIN_CORR = FORMAT$(INDI_CORR,"###")
	BUFOUT = PRIN_DATO + PRIN_LINE + PRIN_COLU + PRIN_CORR + BUFOUT
	INDI_CORR = INDI_CORR + 10
    END DEF

 !==========================================================================

 !!!    DEF INTEGER NEXTTOKEN
 !!!	ON ERROR GO TO LABE_ERRO
 !!! LABE_ERRO:
 !!!	CLOSE #C_FILE_PGIINP
 !!!	IF ERR = 11 THEN
 !!!		NEXTTOKEN = ETXTOK
 !!!	ELSE
 !!!		PRINT "ERROR(";err;") ";ert$(err);" en linea ";erl;", MODULO ";ern$
 !!!	END IF
 !!!	RESUME 810
 !!! LABE_ASIG:
 !!!	P_Q = P_P
 810
 !!!	END DEF

 !==========================================================================


 ! ------------------------------------------------------------------
 !               MODULO PRINCIPAL
 ! __________________________________________________________________

	ON ERROR GO TO  ERR_OPEN
	BIP = CHR$(07)
	CURRENT = "CURRENT"
	P_P,P_Q = 1
	TOT_ORDEN = 0
	O_L = CHR$(10) + CHR$(13)
	C_FILE_PGIINP = 1
	C_FILE_PGIOUT = 2
	C_FILE_BNDWFL = 3
	C_FILE_BNDCPY = 4

	HAY_OPC$ = "NO"
	HAY_OPK$ = "NO"
	HAY_RMK$ = "NO"
	HAY_RMC$ = "NO"
	HAY_CYA$ = "NO"
	HAY_KAN$ = "NO"
	HAY_RC1$ = "NO"
	CALL LIB$GET_SYMBOL("GNS$FIL",AUXI_FILE)
	CALL LIB$GET_SYMBOL("PFM$SIS",PFM_SIS)
        CALL LIB$GET_SYMBOL("GNS$PAI",IDEN_PAI)

	FILE_PGIINP = AUXI_FILE + ".PGI"
	FILE_PGIOUT = AUXI_FILE + ".PGO"
 !!!
 !!! Abre archivos
 !!!
	OPEN FILE_PGIOUT FOR OUTPUT AS FILE #C_FILE_PGIOUT,	&
	ORGANIZATION SEQUENTIAL VARIABLE , RECORDSIZE 255, 	&
	RECORDTYPE ANY

	OPEN FILE_PGIINP FOR INPUT AS FILE #C_FILE_PGIINP , &
		ORGANIZATION SEQUENTIAL , RECORDTYPE ANY

	SET_VRF$ = "NO"
	TOT_FIO = 0

	ON ERROR GO TO EOF_PGIINP


 CIC_LEE_PGIINP:

	GET #C_FILE_PGIINP
	CRTS_LEID = RECOUNT
	MOVE FROM #C_FILE_PGIINP,I_B$ = CRTS_LEID

 !!! SPECIAL NAMES'
 !!!	print " pregunta por , si es sdfplu  ===>>>     : " ; i_b$
 !!!	PRINT " I_B$  " ; I_B$
        IF POS(I_B$,"COPY GNSWVSCR.",0) <> 0 THEN
        	PTC$ = "      * PTC-INI-AUT "
		PRINT #C_FILE_PGIOUT, PTC$
        	I_B$ = "      * COPY GNSWVSCR."
		PRINT #C_FILE_PGIOUT, I_B$
        	PTC$ = "       COPY GNSWV3CR."
		PRINT #C_FILE_PGIOUT, PTC$
        	PTC$ = "      * PTC-FIN-AUT "
		PRINT #C_FILE_PGIOUT, PTC$
	ELSE
        IF POS(I_B$,"COPY GNSWGFRM.",0) <> 0 THEN
        	PTC$ = "      * PTC-INI-AUT "
		PRINT #C_FILE_PGIOUT, PTC$
		I_B$ = "      * COPY GNSWGFRM."
		PRINT #C_FILE_PGIOUT, I_B$
        	PTC$ = "       COPY GNSWG3CF."
		PRINT #C_FILE_PGIOUT, PTC$
        	PTC$ = "       COPY GNSWGQUE."
		PRINT #C_FILE_PGIOUT, PTC$
        	PTC$ = "       COPY GNSWGTSK."
		PRINT #C_FILE_PGIOUT, PTC$
        	PTC$ = "      * PTC-FIN-AUT "
		PRINT #C_FILE_PGIOUT, PTC$
	ELSE
        IF POS(I_B$,"PERFORM GNS-PRO-SYS.",0) <> 0 THEN
        	PTC$ = "      * PTC-INI-AUT "
		PRINT #C_FILE_PGIOUT, PTC$
        	PTC$ = "           IF NOT SCR-OFRM-SRV"
		PRINT #C_FILE_PGIOUT, PTC$
        	PTC$ = "      * PTC-FIN-AUT "
		PRINT #C_FILE_PGIOUT, PTC$

  		PRINT #C_FILE_PGIOUT, I_B$
	ELSE
        IF POS(I_B$,"PERFORM GNS-BUD-VCA.",0) <> 0 THEN
		PRINT #C_FILE_PGIOUT, I_B$
        	PTC$ = "      * PTC-INI-AUT "
		PRINT #C_FILE_PGIOUT, PTC$
        	PTC$ = "            PERFORM GNS-ERR-QUE."
		PRINT #C_FILE_PGIOUT, PTC$
        	PTC$ = "      * PTC-FIN-AUT "
		PRINT #C_FILE_PGIOUT, PTC$
	ELSE
        IF POS(I_B$,"INI-SCR-ING.",0) <> 0 THEN
		PRINT #C_FILE_PGIOUT, I_B$
		WHILE POS(I_B$,"EXIT.",0) = 0
			GET #C_FILE_PGIINP
			CRTS_LEID = RECOUNT
			MOVE FROM #C_FILE_PGIINP,I_B$ = CRTS_LEID

			IF POS(I_B$,"PERFORM SCR-DMSG",0) <> 0 THEN
		        	PTC$ = "      * PTC-INI-AUT "
				PRINT #C_FILE_PGIOUT, PTC$

		        	PTC$ = "               IF NOT SCR-OFRM-SRV"
				PRINT #C_FILE_PGIOUT, PTC$
		        	PTC$ = "                   PERFORM SCR-DMSG"
				PRINT #C_FILE_PGIOUT, PTC$
		        	PTC$ = "               ELSE"
				PRINT #C_FILE_PGIOUT, PTC$
		        	PTC$ = "                   PERFORM SCR-PUTA"
				PRINT #C_FILE_PGIOUT, PTC$

		        	PTC$ = "      * PTC-FIN-AUT "
				PRINT #C_FILE_PGIOUT, PTC$
			ELSE
			IF POS(I_B$,"PERFORM SCR-TRL",0) <> 0 THEN
	
				PRINT #C_FILE_PGIOUT, I_B$

				GET #C_FILE_PGIINP
				CRTS_LEID = RECOUNT
				MOVE FROM #C_FILE_PGIINP,I_B$ = CRTS_LEID
				PRINT #C_FILE_PGIOUT, I_B$

		        	PTC$ = "      * PTC-INI-AUT "
				PRINT #C_FILE_PGIOUT, PTC$
		        	PTC$ = "                       MOVE 'S' TO SCR-IERR"
				PRINT #C_FILE_PGIOUT, PTC$
		        	PTC$ = "      * PTC-FIN-AUT "
				PRINT #C_FILE_PGIOUT, PTC$
			ELSE
				PRINT #C_FILE_PGIOUT, I_B$
			END IF
			END IF
		NEXT
		PRINT #C_FILE_PGIOUT, I_B$
	ELSE
        IF POS(I_B$,"   ERR-SCR-KEY.",0) <> 0 THEN
		PRINT #C_FILE_PGIOUT, I_B$
		PTC$ = "      * PTC-INI-AUT "
		PRINT #C_FILE_PGIOUT, PTC$
	        PTC$ = "           MOVE 'S' TO SCR-IERR"
		PRINT #C_FILE_PGIOUT, PTC$
	        PTC$ = "      * PTC-FIN-AUT "
		PRINT #C_FILE_PGIOUT, PTC$
	ELSE


        IF POS(I_B$,"   FIN-FND-KEY.",0) <> 0 THEN
		PRINT #C_FILE_PGIOUT, I_B$
		PTC$ = "      * PTC-INI-AUT "
		PRINT #C_FILE_PGIOUT, PTC$
	        PTC$ = "           IF FIO-STAT = FIO-STAT-NEX"
		PRINT #C_FILE_PGIOUT, PTC$
	        PTC$ = "               MOVE 'S' TO SCR-IERR"
		PRINT #C_FILE_PGIOUT, PTC$
	        PTC$ = "      * PTC-FIN-AUT "
		PRINT #C_FILE_PGIOUT, PTC$
	ELSE
        IF POS(I_B$,"INI-SCR-PUTA.",0) <> 0 THEN
		PRINT #C_FILE_PGIOUT, I_B$
        	PTC$ = "      * PTC-INI-AUT "
		PRINT #C_FILE_PGIOUT, PTC$
        	PTC$ = "           IF FRM-SUAR EQUAL FRM-SUAR-MAL OR FRM-SUAR-CLR"
		PRINT #C_FILE_PGIOUT, PTC$
        	PTC$ = "               MOVE 'S' TO SCR-IERR."
		PRINT #C_FILE_PGIOUT, PTC$
        	PTC$ = "      * PTC-FIN-AUT "
		PRINT #C_FILE_PGIOUT, PTC$
	ELSE
        IF POS(I_B$,"INI-HBL-IKY.",0) <> 0 THEN
		WHILE POS(I_B$,"IF SCR-DESDE-CMN",0) = 0  AND POS(I_B$,"EXIT.",0) = 0
			PRINT #C_FILE_PGIOUT, I_B$
			GET #C_FILE_PGIINP
			CRTS_LEID = RECOUNT
			MOVE FROM #C_FILE_PGIINP,I_B$ = CRTS_LEID
			PRINT " EN CICLO LEYO " ; I_B$
		NEXT

		IF POS(I_B$,"EXIT.",0) = 0 THEN
	        	PTC$ = "      * PTC-INI-AUT "
			PRINT #C_FILE_PGIOUT, PTC$
	        	PTC$ = "           IF NOT SCR-OFRM-SRV"
			PRINT #C_FILE_PGIOUT, PTC$
	        	PTC$ = "      * PTC-FIN-AUT "
			PRINT #C_FILE_PGIOUT, PTC$
		END IF
		PRINT #C_FILE_PGIOUT, I_B$
	ELSE
        IF POS(I_B$,"INI-INI.",0) <> 0 THEN
		WHILE POS(I_B$,"PERFORM GNS-BUS-VCA",0) = 0  AND POS(I_B$,"EXIT.",0) = 0
			PRINT #C_FILE_PGIOUT, I_B$
			GET #C_FILE_PGIINP
			CRTS_LEID = RECOUNT
			MOVE FROM #C_FILE_PGIINP,I_B$ = CRTS_LEID
		NEXT

		IF POS(I_B$,"EXIT.",0) = 0 THEN
	        	PTC$ = "      * PTC-INI-AUT "
			PRINT #C_FILE_PGIOUT, PTC$
	        	PTC$ = "           PERFORM GNS-ERR-QUE."
			PRINT #C_FILE_PGIOUT, PTC$
	        	PTC$ = "           PERFORM GET-TSK-TERM."
			PRINT #C_FILE_PGIOUT, PTC$
	        	PTC$ = "      * PTC-FIN-AUT "
			PRINT #C_FILE_PGIOUT, PTC$
		END IF
		PRINT #C_FILE_PGIOUT, I_B$
	ELSE
        IF POS(I_B$,"INI-HBL-KEY.",0) <> 0 THEN
		WHILE POS(I_B$, "IF SCR-DESDE-CMN",0) = 0 AND POS(I_B$,"EXIT.",0) = 0
			PRINT #C_FILE_PGIOUT, I_B$
			GET #C_FILE_PGIINP
			CRTS_LEID = RECOUNT
			MOVE FROM #C_FILE_PGIINP,I_B$ = CRTS_LEID
		NEXT

		IF POS(I_B$,"EXIT.",0) = 0 THEN
	        	PTC$ = "      * PTC-INI-AUT "
			PRINT #C_FILE_PGIOUT, PTC$
	        	PTC$ = "           IF NOT SCR-OFRM-SRV"
			PRINT #C_FILE_PGIOUT, PTC$
	        	PTC$ = "      * PTC-FIN-AUT "
			PRINT #C_FILE_PGIOUT, PTC$
		END IF
		PRINT #C_FILE_PGIOUT, I_B$
	ELSE
        IF POS(I_B$,"INI-SCR-TRL.",0) <> 0 THEN
		PRINT #C_FILE_PGIOUT, I_B$
        	PTC$ = "      * PTC-INI-AUT "
		PRINT #C_FILE_PGIOUT, PTC$
        	PTC$ = "           IF SCR-STAT NOT = SCR-STPP"
		PRINT #C_FILE_PGIOUT, PTC$
        	PTC$ = "               MOVE FRM-SUAR-MAL TO FRM-SUAR."
		PRINT #C_FILE_PGIOUT, PTC$
        	PTC$ = "      * PTC-FIN-AUT "
		PRINT #C_FILE_PGIOUT, PTC$
	ELSE
        IF POS(I_B$,"INI-PRO-CONF.",0) <> 0 THEN
		PRINT #C_FILE_PGIOUT, I_B$
        	PTC$ = "      * PTC-INI-AUT "
		PRINT #C_FILE_PGIOUT, PTC$
        	PTC$ = "           IF SCR-OFRM-SRV AND"
		PRINT #C_FILE_PGIOUT, PTC$
        	PTC$ = "               SCR-CONF NOT > SPACES"
		PRINT #C_FILE_PGIOUT, PTC$
        	PTC$ = "               MOVE SPACES TO FRM-MENS."
		PRINT #C_FILE_PGIOUT, PTC$
        	PTC$ = "      * PTC-FIN-AUT "
		PRINT #C_FILE_PGIOUT, PTC$
	ELSE
        IF POS(I_B$,"COPY GNSBGFRM.",0) <> 0 THEN
        	PTC$ = "      * PTC-INI-AUT "
		PRINT #C_FILE_PGIOUT, PTC$
		I_B$ = "      * COPY GNSBGFRM."
		PRINT #C_FILE_PGIOUT, I_B$
        	PTC$ = "       COPY GNSBG3CF."
		PRINT #C_FILE_PGIOUT, PTC$
        	PTC$ = "       COPY GNSBGQUE."
		PRINT #C_FILE_PGIOUT, PTC$
        	PTC$ = "       COPY GNSBGTSK."
		PRINT #C_FILE_PGIOUT, PTC$
        	PTC$ = "      * PTC-FIN-AUT "
		PRINT #C_FILE_PGIOUT, PTC$
	ELSE
		PRINT #C_FILE_PGIOUT, I_B$
	END IF		
	END IF		
	END IF		
	END IF		
	END IF		
	END IF		
	END IF		
	END IF		
	END IF		
	END IF		
	END IF		
	END IF		
	END IF		
	END IF		
	GO TO CIC_LEE_PGIINP
 EOF_PGIINP:
	IF ERR <> 11 THEN
		PRINT "ERROR(";err;") ";ert$(err);" en linea ";erl;", MODULO ";ern$
	END IF
	RESUME 960
960
	GO TO FIN_PGM


 ERR_OPEN:
	PRINT BIP,BIP,BIP
	IF ERR = 2 THEN
		PRINT FILE_PGIINP," : NOMBRE DE ARCHIVO ILEGAL"
	ELSE 
	IF ERR = 5 THEN
		PRINT FILE_PGIINP," ARCHIVO INEXISTENTE"	
	ELSE
		PRINT "CODIGO : ",ERR
		PRINT "MENSAJE :",ERT$(ERR)
	END IF
	END IF
	RESUME 999
999
 FIN_PGM:

 END
