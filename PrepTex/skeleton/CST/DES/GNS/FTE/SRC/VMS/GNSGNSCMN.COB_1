       IDENTIFICATION DIVISION.
      *=======================
       PROGRAM-ID.   GNSGNSCMN.
       AUTHOR.       CONSIST.

      * Subrutina Manejo de Comandos.

       ENVIRONMENT DIVISION.
      *====================

       DATA DIVISION.
      *=============
       WORKING-STORAGE SECTION.
      *-----------------------
       COPY GNSBRMNU REPLACING ==MNU== BY ==MNU EXTERNAL==.
       COPY GNSBRMEN REPLACING ==MEN== BY ==MEN EXTERNAL==.
       COPY GNSBRMSG.
       COPY GNSWGFRM.
       COPY GNSWGSCR.
       COPY GNSWCFIO.
       COPY GNSWVFIO.
       COPY GNSWITRL.
       COPY GNSWGPRV.
       01  WSS-VARI.
           03 WSS-IRET                      VALUE 0   PIC 9(01).
              88 PUEDO-RETORNAR             VALUE 1.
           03 WSS-IVEZ                      VALUE 0   PIC 9(01).
              88 PRIMERA-VEZ                VALUE 0.
           03 WSS-ILEE                      VALUE 0   PIC 9(01).
              88 PRIMERA-VEZ-LEE-CMND       VALUE 0.
           03 WSS-FWSP                                PIC 9(01).
           03 WSS-NLIB                                PIC X(06).
           03 WSS-CLIB           COMP                 PIC 9(09).
           03 WSS-NAME                                PIC X(06).
           03 WSS-PLIN           COMP                 PIC 9(09).
           03 WSS-SINI                                PIC 9(01).
           03 WSS-1CHR                                PIC X(01).
           03 WSS-OMNU                   VALUE SPACES PIC X(01).
           03 WSS-OMNU-YES               VALUE 'S'    PIC X(01).

           03 WSS-CRPF.
              05 WSS-IDX-CMND.
                 07 WSS-TABL  OCCURS 10 INDEXED BY WSS-ITBL.
                    09 WSS-COD-CCMN                   PIC X(03).
              05 WSS-VEC-AUXI OCCURS 10.
                 07 WSS-COD-CCPP                      PIC X(03).
                 07 WSS-IND-STPP                      PIC X(01).
                 07 WSS-GLS-UARC                      PIC X(12).
                 07 WSS-GLS-PRMT                      PIC X(25).
                 07 WSS-GLS-CONF                      PIC X(25).
           03 WSS-IDSP                                PIC 9(01).
              88 NO-REDESPLIEGO             VALUE 0.
              88 REDESPLIEGO                VALUE 1.
           03 WSS-MSTT                   VALUE SPACES PIC X(02).
      *JSS
           03 WSS-FUNC.
              05 WSS-FCHR OCCURS 11                   PIC X(01).
           03 WSS-AFUN.
              05 WSS-ACHR OCCURS 11                   PIC X(01).
           03 WSS-SIST.
              05 WSS-CSIS OCCURS 3                    PIC X(01).
           03 WSS-OPCI.
              05 WSS-COPC OCCURS 3                    PIC X(01).
           03 WSS-CMND.
              05 WSS-CCMD OCCURS 3                    PIC X(01).
           03 WSS-MAUT.
              05 WSS-FILA OCCURS 12.
                 07 WSS-COLU OCCURS 09.
                    09 WSS-AUTO                  PIC 9(02).
           03 WSS-MAUT-RED REDEFINES WSS-MAUT.
              05 WSS-ITM1                        PIC X(18).
              05 WSS-ITM2                        PIC X(18).
              05 WSS-ITM3                        PIC X(18).
              05 WSS-ITM4                        PIC X(18).
              05 WSS-ITM5                        PIC X(18).
              05 WSS-ITM6                        PIC X(18).
              05 WSS-ITM7                        PIC X(18).
              05 WSS-ITM8                        PIC X(18).
              05 WSS-ITM9                        PIC X(18).
              05 WSS-ITMA                        PIC X(18).
              05 WSS-ITMB                        PIC X(18).
              05 WSS-ITMC                        PIC X(18).
           03 WSS-STDO                   VALUE 1 PIC 9(02).
           03 WSS-ISIS                   VALUE 0 PIC 9(02).
           03 WSS-IOPC                   VALUE 0 PIC 9(02).
           03 WSS-ICMD                   VALUE 0 PIC 9(02).
           03 WSS-IMAX                   VALUE 0 PIC 9(02).
           03 WSS-IVAL                   VALUE 9 PIC 9(02).
              88 FUNCION-INVALIDA        VALUE 0.
              88 FUNCION-VALIDA          VALUE 1.
           03 WSS-SIND.
              05 WSS-I                      COMP PIC 9(02).
              05 WSS-J                      COMP PIC 9(02).
              05 WSS-K                      COMP PIC 9(02).
              05 WSS-L                      COMP PIC 9(02).
              05 WSS-M                      COMP PIC 9(02).
           03 WSS-CIDX                      COMP PIC 9(02).
           
       PROCEDURE DIVISION.
      *==================

       MAIN SECTION.
      *------------
       INI-MAIN.
           IF PRIMERA-VEZ
               MOVE 1 TO WSS-IVEZ
               MOVE SCR-CRPF TO WSS-CRPF
               MOVE SPACES       TO TRL-DFLD
               MOVE SCR-PRMC     TO TRL-GLS-PRMT
               MOVE '?'          TO TRL-GLS-CPRM
               MOVE WSS-IDX-CMND TO TRL-IDX-CMND
               PERFORM INI-AUTO

               PERFORM SCR-AWKSP
               MOVE FRM-FWSP TO WSS-FWSP
               MOVE FRM-NLIB TO WSS-NLIB
               MOVE FRM-CLIB TO WSS-CLIB
               MOVE FRM-NAME TO WSS-NAME
               MOVE FRM-PLIN TO WSS-PLIN
               MOVE FRM-SINI TO WSS-SINI
               MOVE FRM-FWSP-NOT TO FRM-FWSP
               IF SCR-IHDR = SCR-IHDR-YES
                   MOVE 92 TO FRM-CLIB
                   MOVE 'TRL' TO FRM-NAME
                   MOVE 0 TO FRM-PLIN
                   MOVE FRM-SINI-MBLF TO FRM-SINI
                   CALL 'GNSPPFRM' USING FRM-INI
                   MOVE TRL-DFLD TO FRM-DFLD
                   CALL 'GNSPPFRM' USING FDV-PUTAL
                   CALL 'GNSPPFRM' USING FRM-DSP-FRM
                   PERFORM CMN-RSET
               ELSE
                   MOVE 'GNSFMS' TO FRM-NLIB
                   MOVE 92 TO FRM-CLIB
                   MOVE 'TRL' TO FRM-NAME
                   MOVE 0 TO FRM-PLIN
                   MOVE FRM-SINI-DBLF TO FRM-SINI
                   CALL 'GNSPPFRM' USING FRM-INI
                   MOVE TRL-DFLD TO FRM-DFLD
                   CALL 'GNSPPFRM' USING FDV-PUTAL
                   CALL 'GNSPPFRM' USING FRM-DSP-FRM
                   PERFORM CMN-RSET
           ELSE
               IF NO-REDESPLIEGO
                   PERFORM SCR-SWKSP
                   MOVE SPACES TO TRL-COD-CACC
                   MOVE TRL-NOM-CACC TO FRM-NFLD
                   CALL 'GNSPPFRM' USING FRM-CLR-FLD
               ELSE
                   PERFORM SCR-SWKSP
                   MOVE WSS-IDX-CMND TO TRL-IDX-CMND
                   MOVE SCR-PRMC     TO TRL-GLS-PRMT
                   MOVE SPACES       TO TRL-COD-CACC
                   MOVE TRL-DFLD     TO FRM-DFLD
                   CALL 'GNSPPFRM' USING FDV-PUTAL.
       LEE-CACC.
           MOVE 0 TO WSS-IDSP.
           MOVE 0 TO WSS-IVAL.

           PERFORM LEE-CMND.
           MOVE WSS-COD-CCMN( WSS-CIDX ) TO SCR-CMND.
           MOVE WSS-COD-CCPP( WSS-CIDX ) TO SCR-CCPP.
           MOVE WSS-IND-STPP( WSS-CIDX ) TO SCR-STPP.
           MOVE WSS-GLS-CONF( WSS-CIDX ) TO SCR-CONF.
           IF WSS-GLS-UARC( WSS-CIDX ) = SPACES
               GO TO FIN-MAIN.
           PERFORM CMN-CONF.
           IF SCR-VFLD = SCR-VFLD-YES
               MOVE TRL-NOM-PRMT TO FRM-NFLD
               MOVE WSS-GLS-PRMT( WSS-CIDX ) TO FRM-VFLD
               CALL 'GNSPPFRM' USING FDV-PUT
               MOVE TRL-NOM-CPRM TO FRM-NFLD
               CALL 'GNSPPFRM' USING FRM-CLR-FLD
               CALL 'GNSPPFRM' USING FDV-SWKSP
               CALL WSS-GLS-UARC( WSS-CIDX )
               PERFORM SCR-SWKSP
               CALL 'GNSPPFRM' USING FDV-RFRSH
               MOVE TRL-NOM-CPRM TO FRM-NFLD
               MOVE TRL-GLS-CPRM TO FRM-VFLD
               CALL 'GNSPPFRM' USING FDV-PUT.
           MOVE TRL-NOM-PRMT TO FRM-NFLD.
           MOVE TRL-GLS-PRMT TO FRM-VFLD.
           CALL 'GNSPPFRM' USING FDV-PUT.
           GO TO LEE-CACC.
       FIN-MAIN.
           CALL 'GNSPPFRM' USING FRM-CLR-ALL.
           MOVE TRL-NOM-CMND TO FRM-NFLD.
           MOVE WSS-COD-CCMN( WSS-CIDX ) TO FRM-VFLD.
           MOVE WSS-CIDX TO FRM-IFLD.
           CALL 'GNSPPFRM' USING FDV-PUT.
           CALL 'GNSPPFRM' USING FDV-SWKSP.
           MOVE SCR-INST-HKY TO SCR-INST.
           MOVE 1 TO WSS-IDSP.
       EXT-MAIN.
           EXIT PROGRAM.

       CMN-RSET SECTION.
      *----------------
       INI-CMM-RSET.
           MOVE WSS-FWSP TO FRM-FWSP.
           MOVE WSS-NLIB TO FRM-NLIB.
           MOVE WSS-CLIB TO FRM-CLIB.
           MOVE WSS-NAME TO FRM-NAME.
           MOVE WSS-PLIN TO FRM-PLIN.
           MOVE WSS-SINI TO FRM-SINI.
       FIN-CMN-RSET.
           EXIT.

       LEE-CMND SECTION.
      *----------------
       INI-LEE-CMND.
           MOVE SPACES TO MSG-COD-MENS.

           IF PUEDO-RETORNAR
               IF MNU-COD-TFUN IN MNU = 'RET'
                   MOVE SPACES TO MNU-COD-TFUN IN MNU
                   MOVE FRM-FFLD-PF4 TO FRM-FFLD
                   MOVE SPACES       TO FRM-VFLD
                   GO TO CON-LEE-CMND
               ELSE
                   NEXT SENTENCE
           ELSE
               MOVE 1 TO WSS-IRET.

           IF PRIMERA-VEZ-LEE-CMND
               MOVE 1 TO WSS-ILEE
               IF MEN-COD-CMND > SPACES
                   MOVE MEN-COD-CMND TO WSS-OPCI
                   PERFORM BUS-CMND
                   IF MSG-COD-MENS NOT > SPACES
                       GO TO FIN-LEE-CMND
                   ELSE
                       GO TO ERR-LEE-CMND.

           MOVE TRL-NOM-CACC TO FRM-NFLD.
           CALL 'GNSPPFRM' USING FDV-GET.
           DISPLAY "".
           IF NOT ( FRM-FFLD = FRM-FFLD-RET OR FRM-FFLD-PF4 )
               MOVE 'KEY    INV' TO MSG-COD-MENS
               MOVE 'TECLA INVALIDA EN ESTE CONTEXTO' TO FRM-MENS
               GO TO ERR-LEE-CMND.
       CON-LEE-CMND.
           MOVE FRM-VFLD TO TRL-COD-CACC.
           MOVE TRL-COD-CACC TO WSS-FUNC.

           IF WSS-FUNC NOT > SPACES
               IF FRM-FFLD = FRM-FFLD-RET
                   MOVE 'CAC    BLK' TO MSG-COD-MENS
                   MOVE 'DEBE DIGITAR UN COMANDO U OPCION' TO FRM-MENS
                   GO TO ERR-LEE-CMND
               ELSE
               IF FRM-FFLD = FRM-FFLD-PF4
                   IF SCR-FRET = SCR-NEMO
                       MOVE 'FUN    ACT' TO MSG-COD-MENS
                       MOVE 'FUNCION ACTUAL' TO FRM-MENS
                       GO TO ERR-LEE-CMND
                   ELSE
                       PERFORM OPE-FMNU
                       MOVE SCR-FRET    TO MNU-COD-NEMO
                       MOVE FIO-GET-KEY TO FIO-CMND
                       MOVE SCR-SIST    TO FIO-SIST
                       PERFORM GNS-FIO-MNU
                       IF NOT FIO-STAT-OKS
                           MOVE 'CODFRETNEXST' TO MSG-COD-MENS
                           MOVE 'FUNCION DE RETORNO INEXISTENTE' TO
                                FRM-MENS
                           GO TO ERR-LEE-CMND
                       ELSE
                           PERFORM PRO-FIN
                           GO TO ERR-LEE-CMND.
           PERFORM SHF-CACC.
           PERFORM INI-AUTO.
           PERFORM PRO-AUTO VARYING WSS-I FROM 1 BY 1 UNTIL WSS-I > 11.
           IF FUNCION-INVALIDA
               MOVE 'FUN    INV' TO MSG-COD-MENS
               MOVE 'FUNCION INVALIDA' TO FRM-MENS
               GO TO ERR-LEE-CMND.
           PERFORM UNS-CACC.
      *Decidir en Base a Teclas ENTER y PF3........
      *Si existe sistema o si existe opcion
           IF WSS-ISIS > 0 OR WSS-IOPC > 0 OR FRM-FFLD = FRM-FFLD-PF4
               PERFORM PRO-TCTL
               PERFORM ERR-LEE-CMND.
           PERFORM BUS-CMND.
           IF MSG-COD-MENS NOT > SPACES
               GO TO FIN-LEE-CMND.
       TCT-LEE-CMND.
           PERFORM PRO-TCTL.
       ERR-LEE-CMND.
      *    MOVE MSG-COD-MENS TO FRM-MENS.
           CALL 'GNSPPFRM' USING FDV-BELL.
           CALL 'GNSPPFRM' USING FRM-MSG-CLR.
           GO TO INI-LEE-CMND.
       FIN-LEE-CMND.
           MOVE WSS-CIDX TO SCR-I.
           MOVE FRM-FFLD TO SCR-FFLD.

       SHF-CACC SECTION.
       INI-SHF-CACC.
           MOVE SPACES TO WSS-AFUN.
           MOVE 1 TO WSS-I WSS-L.
       LUP-SHF-CACC.
           IF WSS-FCHR( WSS-I ) > SPACES
               MOVE WSS-FCHR( WSS-I ) TO WSS-ACHR( WSS-L )
               ADD 1 TO WSS-L.
           ADD 1 TO WSS-I.
           IF WSS-I NOT > 11
               GO TO LUP-SHF-CACC.
           MOVE WSS-AFUN TO WSS-FUNC.
       FIN-SHF-CACC.
           EXIT.

       INI-AUTO SECTION.
       INI-INI-AUTO.
           MOVE '000002020000000100' TO WSS-ITM1.
           MOVE '010003030000090800' TO WSS-ITM2.
           MOVE '010004040000090800' TO WSS-ITM3.
           MOVE '010000000505090400' TO WSS-ITM4.
           MOVE '010006060000000500' TO WSS-ITM5.
           MOVE '010007070000090800' TO WSS-ITM6.
           MOVE '010008080000090800' TO WSS-ITM7.
           MOVE '010000000000090800' TO WSS-ITM8.
           MOVE '000010100000000900' TO WSS-ITM9.
           MOVE '010011110000001200' TO WSS-ITMA.
           MOVE '010012120000001200' TO WSS-ITMB.
           MOVE '010000000000001200' TO WSS-ITMC.
           MOVE 1 TO WSS-STDO.
           MOVE 0 TO WSS-ISIS.
           MOVE 0 TO WSS-IOPC.
           MOVE 0 TO WSS-ICMD.
       FIN-INI-AUTO.
           EXIT.

       PRO-AUTO SECTION.
       INI-PRO-AUTO.
           IF WSS-FCHR( WSS-I ) NOT > SPACES
               MOVE 12 TO WSS-I
               GO TO FIN-PRO-AUTO.
           MOVE WSS-I TO WSS-IMAX.
           IF WSS-FCHR( WSS-I ) NOT < 'A' AND
              WSS-FCHR( WSS-I ) NOT > 'Z'
               MOVE 3 TO WSS-J
           ELSE
           IF WSS-FCHR( WSS-I ) NOT < '0' AND
              WSS-FCHR( WSS-I ) NOT > '9'
               MOVE 4 TO WSS-J
           ELSE
           IF WSS-FCHR( WSS-I ) = ':'
               MOVE 5 TO WSS-J
               MOVE WSS-I TO WSS-ISIS
           ELSE
           IF WSS-FCHR( WSS-I ) = '/'
               MOVE 6 TO WSS-J
               MOVE WSS-I TO WSS-ISIS
           ELSE
           IF WSS-FCHR( WSS-I ) = ',' OR '.'
               MOVE 7 TO WSS-J
               MOVE WSS-I TO WSS-IOPC
               MOVE WSS-I TO WSS-ICMD
           ELSE
           IF WSS-FCHR( WSS-I ) NOT > SPACES
               MOVE 8 TO WSS-J
           ELSE
               MOVE 9 TO WSS-J.
           MOVE WSS-AUTO( WSS-STDO , WSS-J ) TO WSS-STDO.
           IF WSS-STDO NOT = 0
               MOVE WSS-AUTO( WSS-STDO , 1 ) TO WSS-IVAL
           ELSE
               MOVE 0 TO WSS-IVAL
               MOVE 12 TO WSS-I.
       FIN-PRO-AUTO.
           EXIT.

       UNS-CACC SECTION.
       INI-UNS-CACC.
           MOVE SPACES TO WSS-SIST WSS-OPCI WSS-CMND.
           IF WSS-ISIS > 0
               MOVE 0 TO WSS-K
               SUBTRACT 1 FROM WSS-ISIS GIVING WSS-J
               PERFORM MOV-SIST VARYING WSS-I FROM 1 BY 1
                                UNTIL   WSS-I > WSS-J
               ADD 1 WSS-ISIS GIVING WSS-L
           ELSE
               MOVE 1 TO WSS-L.
           IF WSS-ICMD > 0
               MOVE 0 TO WSS-K
               ADD 1 WSS-ICMD GIVING WSS-J
               PERFORM MOV-CMND VARYING WSS-I FROM WSS-J BY 1
                                UNTIL   WSS-I >    WSS-IMAX
               SUBTRACT 1 FROM WSS-ICMD GIVING WSS-M
           ELSE
               MOVE WSS-IMAX TO WSS-M.
           MOVE 0 TO WSS-K.
           PERFORM MOV-OPCI VARYING WSS-I FROM WSS-L BY 1
                            UNTIL   WSS-I > WSS-M.
       FIN-UNS-CACC.
           EXIT.

       MOV-SIST SECTION.
       INI-MOV-SIST.
           IF WSS-FCHR(WSS-I) > SPACES
               ADD 1 TO WSS-K
               MOVE WSS-FCHR(WSS-I) TO WSS-CSIS(WSS-K).
       FIN-MOV-SIST.
           EXIT.

       MOV-OPCI SECTION.
       INI-MOV-OPCI.
           IF WSS-FCHR(WSS-I) > SPACES
               ADD 1 TO WSS-K
               MOVE WSS-FCHR(WSS-I) TO WSS-COPC(WSS-K).
       FIN-MOV-OPCI.
           EXIT.

       MOV-CMND SECTION.
       INI-MOV-CMND.
           IF WSS-FCHR(WSS-I) > SPACES
               ADD 1 TO WSS-K
               MOVE WSS-FCHR(WSS-I) TO WSS-CCMD(WSS-K).
       FIN-MOV-CMND.
           EXIT.

       PRO-TCTL SECTION.
       INI-PRO-TCTL.
           IF WSS-SIST > SPACES AND SCR-SIST NOT = WSS-SIST
               PERFORM CHK-SIST
               IF MSG-COD-MENS > SPACES
                   GO TO ERR-PRO-TCTL
               ELSE
                   NEXT SENTENCE
           ELSE
               MOVE SCR-SIST TO WSS-SIST.
           IF WSS-OPCI > SPACES
               PERFORM CHK-OPC
               IF MSG-COD-MENS > SPACES
                   GO TO ERR-PRO-TCTL
               ELSE
                   PERFORM ANL-OPC
                   IF MSG-COD-MENS > SPACES
                       GO TO ERR-PRO-TCTL
                   ELSE
                       NEXT SENTENCE
           ELSE
           IF SCR-SIST = WSS-SIST
               IF SCR-NEMO = 'SIS'
                   MOVE 'FUN    ACT' TO MSG-COD-MENS
                   MOVE 'FUNCION ACTUAL' TO FRM-MENS
                   GO TO ERR-PRO-TCTL
               ELSE
                   PERFORM OPE-FMNU
                   MOVE SCR-SIST    TO FIO-SIST
                   MOVE 'SIS'       TO MNU-COD-NEMO
                   MOVE FIO-GET-KEY TO FIO-CMND
                   PERFORM GNS-FIO-MNU
                   IF NOT FIO-STAT-OKS
                       MOVE 'CODNEMOSISNX' TO MSG-COD-MENS
                       MOVE 'NO EXISTE FUNCION SIS PARA EL SISTEMA' TO
                                                          FRM-MENS
                       GO TO ERR-PRO-TCTL.
           MOVE WSS-SIST TO MNU-COD-SIST.
      * Con el MNU que se tiene hay que procesar
           IF ( MNU-COD-SIST NOT > SPACES OR
                MNU-COD-SIST = SCR-SIST ) AND MNU-COD-NEMO = SCR-NEMO
              MOVE 'FUN    ACT' TO MSG-COD-MENS
              MOVE 'FUNCION ACTUAL' TO FRM-MENS
              GO TO ERR-PRO-TCTL.
           PERFORM PRO-FIN.
           GO TO ERR-PRO-TCTL.
       ERR-PRO-TCTL.
       FIN-PRO-TCTL.
           EXIT.

       PRO-FIN SECTION.
       INI-PRO-FIN.
           IF NOT ( MNU-IND-IPRV = 'S' OR 'N' )
               CALL 'LIB$GET_SYMBOL' USING BY DESCRIPTOR PRV-SYMB
                                                         MNU-IND-IPRV.
           IF MNU-IND-IPRV = 'N'
               GO TO CON-PRO-FIN.
           MOVE MNU-COD-NEMO TO PRV-PROC.
           CALL 'GNSPPPRV'.
           IF NOT PRV-STAT-OKS
               IF MNU-COD-NEMO = 'SIS'
                   MOVE 'SIS    NOPRV' TO MSG-COD-MENS
                   MOVE 'NO tiene ACCESO al SISTEMA' TO FRM-MENS
                   GO TO FIN-PRO-FIN
               ELSE
                   MOVE 'FUN    NOPRV' TO MSG-COD-MENS
                   MOVE 'OPCION NO PERMITIDA' TO FRM-MENS
                   GO TO FIN-PRO-FIN.

       CON-PRO-FIN.
           MOVE MEN-COD-SIST TO MNU-COD-SIST.
           MOVE MNU TO MEN.
           IF MNU-COD-TFUN = 'MEN' AND MNU-GLS-CMND NOT > SPACES
               IF SCR-SIST = 'GNS'
                   MOVE 'GNSPGMNU' TO MNU-GLS-CMND
               ELSE
                   MOVE 'GNSPPMNU' TO MNU-GLS-CMND.
           CALL 'GNSPWMEN' USING WSS-MSTT.
           MOVE FIO-CLO TO FIO-CMND.
           PERFORM GNS-FIO-MNU.
           CALL 'GNSPPFRM' USING FRM-FIN.

           IF MNU-GLS-CMND IN MNU NOT > SPACES AND
              MNU-GLS-LFVX IN MNU     > SPACES AND
              MNU-GLS-NFVX IN MNU     > SPACES
               MOVE 'RUN GNSEXE:GNSPDFRM' TO MNU-GLS-CMND.

           CALL 'LIB$DO_COMMAND' USING BY DESCRIPTOR MNU-GLS-CMND.
       FIN-PRO-FIN.
           EXIT.

       CHK-OPC SECTION.
       INI-CHK-OPC.
           PERFORM OPE-FMNU.

           MOVE SPACES TO MSG-COD-MENS.
           MOVE WSS-OPCI TO MNU-COD-OPCI IN MNU.
           MOVE WSS-SIST       TO FIO-SIST.
           MOVE FIO-GET-KEY    TO FIO-CMND.
           MOVE 'MNU-COD-OPCI' TO FIO-AKEY.
           PERFORM GNS-FIO-MNU.
           IF NOT FIO-STAT-OKS
               MOVE 'CODOPCINEXST' TO MSG-COD-MENS
               MOVE 'COMANDO U OPCION INEXISTENTE' TO FRM-MENS.
       FIN-CHK-OPC.
           EXIT.

       ANL-OPC SECTION.
       INI-ANL-OPC.
           MOVE SPACES TO MSG-COD-MENS.
           IF WSS-CMND > SPACES
               MOVE WSS-CMND TO MNU-COD-CMND IN MNU.
           IF ( MNU-COD-SIST > SPACES AND MNU-COD-SIST NOT = SCR-SIST )
              AND
              ( NOT ( WSS-SIST > SPACES AND SCR-SIST NOT = WSS-SIST ) )
               MOVE MNU-COD-SIST TO WSS-SIST
               PERFORM CHK-SIST.
       FIN-ANL-OPC.
           EXIT.

       CHK-SIST SECTION.
       INI-CHK-SIST.
           MOVE 'SISCNEXNOIMP' TO MSG-COD-MENS.
           MOVE 'CONEXION ENTRE SISTEMAS NO IMPLEMENTADO' TO FRM-MENS.
       FIN-CHK-SIST.
           EXIT.

       BUS-CMND SECTION.
       INI-BUS-CMND.
           MOVE 'CMD    NEXST' TO MSG-COD-MENS.
           MOVE 'COMANDO INEXISTENTE' TO FRM-MENS.
           MOVE 1 TO WSS-CIDX.
           SET SCR-ITBL TO 1.
           SEARCH SCR-TABL VARYING WSS-CIDX
                  WHEN SCR-COD-CCMN( SCR-ITBL ) = WSS-OPCI
                         GO TO SET-BUS-CMND.
           GO TO FIN-BUS-CMND.
       SET-BUS-CMND.
           MOVE SPACES TO MSG-COD-MENS.
       FIN-BUS-CMND.
           EXIT.

       CMN-CONF SECTION.
      *----------------
       INI-CMN-CONF.
           MOVE SCR-VFLD-YES TO SCR-VFLD.
           IF SCR-CONF = SPACES
               GO TO FIN-CMN-CONF.
           MOVE TRL-NOM-PRMT TO FRM-NFLD.
           MOVE SCR-CONF TO FRM-VFLD.
           CALL 'GNSPPFRM' USING FDV-PUT.
           MOVE TRL-NOM-CPRM TO FRM-NFLD.
           MOVE TRL-GLS-CPRM TO FRM-VFLD.
           CALL 'GNSPPFRM' USING FDV-PUT.
           MOVE TRL-NOM-CACC TO FRM-NFLD.
           CALL 'GNSPPFRM' USING FRM-CLR-FLD.
       LEE-CMN-CONF.
           CALL 'GNSPPFRM' USING FDV-GET.
           MOVE FRM-VFLD TO SCR-VFLD.
           IF NOT ( SCR-VFLD = SCR-VFLD-YES OR SCR-VFLD-NOT OR SPACES )
               MOVE 'Debe ser S (Si), N o Blancos (No)' TO FRM-MENS
               CALL 'GNSPPFRM' USING FDV-BELL
               CALL 'GNSPPFRM' USING FRM-MSG-CLR
               GO TO LEE-CMN-CONF.
           IF SCR-VFLD = SPACES
               MOVE SCR-VFLD-NOT TO SCR-VFLD.
       FIN-CMN-CONF.
           MOVE TRL-NOM-CACC TO FRM-NFLD.
           CALL 'GNSPPFRM' USING FRM-CLR-FLD.

       SCR-AWKSP SECTION.
      *-----------------
       INI-SCR-AWKSP.
           CALL 'FDV$AWKSP' USING
                      BY DESCRIPTOR SCR-RWSP
                      BY REFERENCE  FRM-TWSP.
       FIN-SCR-AWKSP.
           EXIT.

       SCR-SWKSP SECTION.
      *-----------------
       INI-SCR-SWKSP.
           CALL 'FDV$SWKSP' USING
                      BY DESCRIPTOR SCR-RWSP.
       FIN-SCR-SWKSP.
           EXIT.

       OPE-FMNU SECTION.
       INI-OPE-FMNU.
           IF WSS-OMNU = WSS-OMNU-YES
               GO TO FIN-OPE-FMNU.
           MOVE FIO-IFNF-PGM TO FIO-IFNF
           MOVE FIO-FNF      TO FIO-CMND.
           PERFORM GNS-FIO-MNU.
           MOVE FIO-INP TO FIO-CMND.
           PERFORM GNS-FIO-MNU.
           IF FIO-STAT-OKS
               MOVE WSS-OMNU-YES TO WSS-OMNU
               GO TO FIN-OPE-FMNU.
           IF FIO-STAT-FNP
               DISPLAY '? No existe archivo MNU' REVERSED
           ELSE
               DISPLAY '? Error(' REVERSED FIO-STAT REVERSED
                        ') de apertura de archivo MNU' REVERSED.
           CALL 'SYS$EXIT' USING BY VALUE ZERO.
       FIN-OPE-FMNU.
           EXIT.

      * COPY GNSBFMNU.
      * Modulo FIO para archivo RMS GNSMNU,  2-FEB-1989 17:46:50.50
       GNS-FIO-MNU SECTION.
       INI-GNS-FIO-MNU.
           IF SCR-SIST NOT = 'GNS'
               CALL 'GNSPFMNU'    USING FIO-VARI MNU
           ELSE
               CALL 'GNSPFGNSMNU' USING FIO-VARI MNU.
       FIN-GNS-FIO-MNU.
           EXIT.
