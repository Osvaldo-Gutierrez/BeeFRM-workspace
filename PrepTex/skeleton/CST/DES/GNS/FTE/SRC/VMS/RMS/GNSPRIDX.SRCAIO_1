       IDENTIFICATION DIVISION.
      *=======================
       PROGRAM-ID.     {sis}PR{reg}.
       AUTHOR.          CONSIST.
       
      * Prueba rutina {sis}PF{reg} para archivo INDEXADO {sis}{reg}.
       
       ENVIRONMENT DIVISION.
      *====================
       
       DATA DIVISION.
      *=============
       WORKING-STORAGE SECTION.
      *-----------------------
       COPY {sis}BR{reg}.
       COPY GNSWCFIO.
       COPY GNSWVFIO.
       01 WSS-VARI.
           03 WSS-CMND-ACP         VALUE SPACES        PIC X(20).
           03 WSS-CMND-ALF         VALUE SPACES        PIC X(20).
           03 WSS-CMND-NUM         VALUE ZEROES        PIC 9(04).
           03 WSS-VKEY.
               05 FILLER     VALUE SPACES     PIC X(80).
           03 WSS-CMND-IDX         VALUE ZEROES        PIC 9(04).
           03 I                    VALUE ZEROES        PIC 9(04).
       01  WSS-VCMN-ALF.
      *    Read Key
           03 FIO-GET-KEY-ALF      VALUE 'GET-KEY'     PIC X(20).

      *    Read Next
           03 FIO-GET-NXT-ALF      VALUE 'GET-NXT'     PIC X(20).

      *    Start First + Read Next
           03 FIO-GET-FST-ALF      VALUE 'GET-FST'     PIC X(20).

      *    Start Not Less + Read Next
           03 FIO-GET-NLS-ALF      VALUE 'GET-NLS'     PIC X(20).

      *    Start Greater + Read Next
           03 FIO-GET-GRT-ALF      VALUE 'GET-GRT'     PIC X(20).

      *    Write
           03 FIO-PUT-ALF          VALUE 'PUT    '     PIC X(20).

      *    Rewrite
           03 FIO-MOD-ALF          VALUE 'MOD    '     PIC X(20).

      *    Delete
           03 FIO-DEL-ALF          VALUE 'DEL    '     PIC X(20).

      *    Change
           03 FIO-CHG-ALF          VALUE 'CHG    '     PIC X(20).

      *    Open Input
           03 FIO-INP-ALF          VALUE 'INP    '     PIC X(20).

      *    Open Output
           03 FIO-OUT-ALF          VALUE 'OUT    '     PIC X(20).

      *    Open I-O
           03 FIO-UPD-ALF          VALUE 'UPD    '     PIC X(20).

      *    Close
           03 FIO-CLO-ALF          VALUE 'CLO    '     PIC X(20).

      *    Start Equal
           03 FIO-FND-EQL-ALF      VALUE 'FND-KEY'     PIC X(20).

      *    Start First
           03 FIO-FND-FST-ALF      VALUE 'FND-FST'     PIC X(20).

      *    Start Not Less
           03 FIO-FND-NLS-ALF      VALUE 'FND-NLS'     PIC X(20).

      *    Start Greater
           03 FIO-FND-GRT-ALF      VALUE 'FND-GRT'     PIC X(20).

      *    Unlock Record
           03 FIO-ULK-REC-ALF      VALUE 'ULK-REC'     PIC X(20).

      *    Unlock All
           03 FIO-ULK-ALL-ALF      VALUE 'ULK-ALL'     PIC X(20).

      *    VALUE of Id
           03 FIO-VID-ALF          VALUE 'VID    '     PIC X(20).

      *    Acceso
           03 FIO-ACC-ALF          VALUE 'ACC    '     PIC X(20).

      *    Record Locked
           03 FIO-REC-LCK-ALF      VALUE 'REC-LCK'     PIC X(20).

      *    File Not Found
           03 FIO-FNF-ALF          VALUE 'FNF    '     PIC X(20).

      *    Record Length
           03 FIO-REC-LEN-ALF      VALUE 'REC-LEN'     PIC X(20).

      *    Open Extend
           03 FIO-EXT-ALF          VALUE 'EXT    '     PIC X(20).

      *    Read Key por llave especifica
           03 FIO-GET-KEY-ALT-ALF  VALUE 'GET-KEY-ALT'
                                                       PIC X(20).
      *JSS Read Next por llave especifica
      *    03 FIO-GET-NXT-ALT-ALF  VALUE 'GET-NXT-ALT'
      *                                                PIC X(20).
      *    Start First + Read Next por llave especifica
           03 FIO-GET-FST-ALT-ALF  VALUE 'GET-FST-ALT'
                                                       PIC X(20).
      *    Start Not Less + Read Next por llave especifica
           03 FIO-GET-NLS-ALT-ALF  VALUE 'GET-NLS-ALT'
                                                       PIC X(20).
      *    Start Greater + Read Next por llave especifica
           03 FIO-GET-GRT-ALT-ALF  VALUE 'GET-GRT-ALT'
                                                       PIC X(20).
      *    Start Equal por llave especifica
           03 FIO-FND-EQL-ALT-ALF  VALUE 'FND-KEY-ALT'
                                                       PIC X(20).
      *    Start First por llave especifica
           03 FIO-FND-FST-ALT-ALF  VALUE 'FND-FST-ALT'
                                                       PIC X(20).
      *    Start Not Less por llave especifica
           03 FIO-FND-NLS-ALT-ALF  VALUE 'FND-NLS-ALT'
                                                       PIC X(20).
      *    Start Greater por llave especifica
           03 FIO-FND-GRT-ALT-ALF  VALUE 'FND-GRT-ALT'
                                                       PIC X(20).
       01  WSS-VCMN-ALF-RED    REDEFINES WSS-VCMN-ALF.
              05 FIO-IDX-VCMN-ALF OCCURS 33 TIMES   
                 INDEXED BY WSS-VCMN-IDX PIC X(20).
                 
      *
       PROCEDURE DIVISION.
      *==================       
       MAIN SECTION.
      *------------
       INI-MAIN.
           MOVE SPACES TO FIO-AKEY.
           DISPLAY ' '.
           DISPLAY 'INP          OUT          UPD          CLO'.
           DISPLAY 'GET-KEY      '
                   'GET-NXT' REVERSED '      GET-FST      GET-NLS'
                   '     GET-GRT'.
           DISPLAY 'GET-KEY-ALT  GET-FST-ALT  GET-NLS-ALT'
                   '  GET-GRT-ALT'
           DISPLAY 'FND-KEY      FND-FST      FND-NLS'
                   '      FND-GRT'.
           DISPLAY 'FND-KEY-ALT  FND-FST-ALT  FND-NLS-ALT'
                   '  FND-GRT-ALT'.
           DISPLAY 'PUT          MOD          DEL          CHG'
                   '         ULK-REC ULK-ALL'.
           DISPLAY 'VID          ACC          REC-LCK      REC-LEN'
                   '     FNF     FIN'.
           DISPLAY ' '.
           DISPLAY 'FIO-CMND : ' WITH NO ADVANCING.
           ACCEPT WSS-CMND-ACP WITH CONVERSION.
           IF WSS-CMND-ACP EQUAL 'FIN'
               GO TO FIN-MAIN.
           IF WSS-CMND-ACP EQUAL SPACES
               MOVE FIO-GET-NXT-ALF TO WSS-CMND-ACP.
           UNSTRING WSS-CMND-ACP DELIMITED BY '/' 
                    INTO WSS-CMND-ALF FIO-AKEY.
           MOVE 1 TO I.
           SET WSS-VCMN-IDX TO 1.
           SEARCH FIO-IDX-VCMN-ALF VARYING I
                  WHEN FIO-IDX-VCMN-ALF(WSS-VCMN-IDX) = WSS-CMND-ALF
                  GO TO FIN-LEE-CMND.
           DISPLAY WSS-CMND-ALF ' Comando no valido'
                      LINE 24 COLUMN 1 WITH BELL REVERSED.
           GO TO INI-MAIN.
       FIN-LEE-CMND.
           MOVE FIO-IDX-VCMN(I) TO FIO-CMND.
           IF FIO-CMND = FIO-VID
               DISPLAY 'FIO-VOID : ' WITH NO ADVANCING
               ACCEPT FIO-VOID WITH CONVERSION
           ELSE
           IF FIO-CMND = FIO-ACC
               DISPLAY 'FIO-ACCS : ' WITH NO ADVANCING
               ACCEPT FIO-ACCS WITH CONVERSION
           ELSE
           IF FIO-CMND = FIO-REC-LCK
               DISPLAY 'FIO-RLCK : ' WITH NO ADVANCING
               ACCEPT FIO-RLCK WITH CONVERSION
           ELSE
           IF FIO-CMND = FIO-FNF
               DISPLAY 'FIO-IFNF : ' WITH NO ADVANCING
               ACCEPT FIO-IFNF WITH CONVERSION
           ELSE
           IF FIO-CMND = FIO-REC-LEN
               DISPLAY 'FIO-RLEN : ' WITH NO ADVANCING
               ACCEPT FIO-RLEN WITH CONVERSION
           ELSE
           IF FIO-CMND = FIO-FND-EQL-ALT OR FIO-FND-GRT-ALT OR
                         FIO-FND-NLS-ALT OR FIO-GET-KEY-ALT OR
                         FIO-GET-GRT-ALT OR FIO-GET-NLS-ALT
               IF FIO-AKEY = SPACES OR LOW-VALUES
                   DISPLAY 'FIO-AKEY : ' WITH NO ADVANCING
                   ACCEPT FIO-AKEY WITH CONVERSION
                   DISPLAY ' '
                   DISPLAY 'FIO-VKEY : ' WITH NO ADVANCING
                   ACCEPT WSS-VKEY WITH CONVERSION
               ELSE
                   DISPLAY 'FIO-VKEY : ' WITH NO ADVANCING
                   ACCEPT WSS-VKEY WITH CONVERSION
           ELSE
           IF FIO-CMND = FIO-FND-FST-ALT OR FIO-GET-FST-ALT
               IF FIO-AKEY = SPACES OR LOW-VALUES
                   DISPLAY 'FIO-AKEY : ' WITH NO ADVANCING
                   ACCEPT FIO-AKEY WITH CONVERSION
               ELSE
                   NEXT SENTENCE
           ELSE
           IF FIO-CMND = FIO-FND-EQL OR FIO-FND-GRT OR FIO-FND-NLS OR
                         FIO-GET-KEY OR FIO-GET-GRT OR
                         FIO-GET-NLS OR FIO-DEL
               DISPLAY 'FIO-VKEY : ' WITH NO ADVANCING
               ACCEPT WSS-VKEY WITH CONVERSION.
           MOVE WSS-VKEY TO {ky0}
*% FOR I = 1 TO {nka}
                            {ky{i}}
*% NEXT I
                                   .
           IF FIO-CMND = FIO-PUT OR FIO-MOD OR FIO-CHG
               DISPLAY 'REGISTRO : ' WITH NO ADVANCING
               ACCEPT {reg} WITH CONVERSION.
           PERFORM {sis}-FIO-{reg}.
           IF NOT FIO-STAT-OKS
               DISPLAY ' '
               DISPLAY 'FIO-STAT : ' , FIO-STAT
               GO TO INI-MAIN.
           IF FIO-CMND = FIO-GET-KEY OR FIO-GET-GRT OR
                         FIO-GET-NLS OR FIO-GET-KEY-ALT OR
                         FIO-GET-GRT-ALT OR FIO-GET-NLS-ALT OR
                         FIO-GET-FST OR FIO-GET-NXT OR
                         FIO-GET-FST-ALT OR FIO-GET-NXT-ALT
               DISPLAY ' '
               DISPLAY 'REGISTRO : '
               DISPLAY ' '
               DISPLAY {reg}.
           GO TO INI-MAIN.
       FIN-MAIN.
           STOP RUN.

       {sis}-FIO-{reg} SECTION.
       INI-{sis}-FIO-{reg}.
           CALL '{sis}PF{reg}' USING FIO-CMND {reg}.
       FIN-{sis}-FIO-{reg}.
           EXIT.
