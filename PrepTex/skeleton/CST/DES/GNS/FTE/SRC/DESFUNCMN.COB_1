IDENTIFICATION DIVISION.
*=======================
PROGRAM-ID.	DESFUNCMN.
AUTHOR.		GUZMAN Y CIA.

* Subrutina Manejo de Comandos.

ENVIRONMENT DIVISION.
*====================

DATA DIVISION.
*=============
WORKING-STORAGE SECTION.
*-----------------------
COPY	'DESREG.RPF'	FROM	DICTIONARY
	REPLACING
	==RPF==		BY	==RPF	EXTERNAL==.
COPY	'DESREG.FUN'	FROM	DICTIONARY
	REPLACING
	==FUN==		BY	==FUN	EXTERNAL==.
COPY	'DESREG.MEN'	FROM	DICTIONARY
	REPLACING
	==MEN==		BY	==MEN	EXTERNAL==.
COPY	FRMWSS		IN	DESTXT.
COPY	SCRWSS		IN	DESTXT.
COPY	FIOWSS		IN	DESTXT.
COPY	PRVWSS		IN	DESTXT.
COPY	FRMDATTRL	IN	GEN.
01 WSS-VARI.
	03 WSS-IVEZ			VALUE 0	PIC 9(01).
		88 PRIMERA-VEZ		VALUE 0.
	03 WSS-ZERO	COMP		VALUE 0	PIC 9(04).
	03 WSS-AUXI	COMP			PIC 9(04).
	03 WSS-FWSP				PIC 9(01).
	03 WSS-NLIB				PIC X(06).
	03 WSS-CLIB	COMP			PIC 9(09).
	03 WSS-NAME				PIC X(06).
	03 WSS-PLIN	COMP			PIC 9(09).
	03 WSS-SINI				PIC 9(01).
	03 WSS-WAIT	COMP-1		VALUE 2.
	03 WSS-COD-SIST				PIC X(03).
	03 WSS-COD-CACC.
		05 WSS-COD-CAC1			PIC X(08).
		05 WSS-COD-CAC2			PIC X(03).
	03 WSS-COD-FUNC.
		05 FILLER	OCCURS 4.
			07 WSS-COD-NIVE		PIC X(02).
			07 WSS-GLS-PUNT		PIC X(01).
	03 WSS-DFLD.
		05 WSS-IDX-CMND.
			07 WSS-TABL	OCCURS 10 INDEXED BY WSS-ITBL.
				09 WSS-COD-CCMN	PIC X(03).
		05 WSS-VEC-AUXI		OCCURS 10.
			07 WSS-GLS-PRMT		PIC X(25).
			07 WSS-GLS-CONF		PIC X(25).
			07 WSS-GLS-UARC		PIC X(12).
			07 WSS-COD-CCPP		PIC X(03).
			07 WSS-IND-STPP		PIC X(01).
	03 WSS-SIND.
		05 I				PIC 9(02).
		05 J				PIC 9(01).
		05 JMIN				PIC 9(01).
		05 JMAX				PIC 9(01).
		05 K				PIC 9(01).

PROCEDURE DIVISION.
*==================

MAIN SECTION.
*------------
INI-MAIN.
	IF PRIMERA-VEZ
		MOVE 1 TO WSS-IVEZ
		PERFORM BUS-CRPF
		PERFORM SCR-AWKSP
		MOVE FRM-FWSP TO WSS-FWSP
		MOVE FRM-NLIB TO WSS-NLIB
		MOVE FRM-CLIB TO WSS-CLIB
		MOVE FRM-NAME TO WSS-NAME
		MOVE FRM-PLIN TO WSS-PLIN
		MOVE FRM-SINI TO WSS-SINI
		MOVE FRM-FWSP-NOT TO FRM-FWSP
		IF SCR-IHDR = SCR-IHDR-YES
			MOVE 92 TO FRM-CLIB
			MOVE 'TRL' TO FRM-NAME
			MOVE 0 TO FRM-PLIN
			MOVE FRM-SINI-MBLF TO FRM-SINI
			CALL 'DESPROFRM' USING FRM-INI
			MOVE TRL-DFLD TO FRM-DFLD
			CALL 'DESPROFRM' USING FDV-PUTAL
			CALL 'DESPROFRM' USING FRM-DSP-FRM
			PERFORM CMN-RSET
		ELSE
			MOVE 'DESFMS' TO FRM-NLIB
			MOVE 92 TO FRM-CLIB
			MOVE 'TRL' TO FRM-NAME
			MOVE 0 TO FRM-PLIN
			MOVE FRM-SINI-DBLF TO FRM-SINI
			CALL 'DESPROFRM' USING FRM-INI
			MOVE TRL-DFLD TO FRM-DFLD
			CALL 'DESPROFRM' USING FDV-PUTAL
			CALL 'DESPROFRM' USING FRM-DSP-FRM
			PERFORM CMN-RSET
	ELSE
		PERFORM SCR-SWKSP
		MOVE SPACES TO TRL-COD-CACC
		MOVE TRL-DFLD TO FRM-DFLD
		CALL 'DESPROFRM' USING FDV-PUTAL.
LEE-CACC.
	PERFORM LEE-CMND.
	IF FRM-FFLD EQUAL FRM-FFLD-TAB
		GO TO CMN-FIN.
	MOVE WSS-COD-CCMN( I ) TO SCR-CMND.
	MOVE WSS-COD-CCPP( I ) TO SCR-CCPP.
	MOVE WSS-IND-STPP( I ) TO SCR-STPP.
	MOVE WSS-GLS-CONF( I ) TO SCR-CONF.
	IF WSS-GLS-PRMT( I ) = SPACES
		MOVE 'RET,# Campo,TAB a Comando' TO SCR-PRMT
	ELSE
		MOVE WSS-GLS-PRMT( I ) TO SCR-PRMT.
	IF WSS-GLS-UARC( I ) = SPACES
		GO TO FIN-MAIN.
	PERFORM CMN-CONF.
	IF SCR-VFLD = SCR-VFLD-YES
		MOVE TRL-NOM-PRMT TO FRM-NFLD
		MOVE WSS-GLS-PRMT( I ) TO FRM-VFLD
		CALL 'DESPROFRM' USING FDV-PUT
		MOVE TRL-NOM-CPRM TO FRM-NFLD
		CALL 'DESPROFRM' USING FRM-CLR-FLD
		CALL 'DESPROFRM' USING FDV-SWKSP
		CALL WSS-GLS-UARC( I )
		PERFORM SCR-SWKSP
		CALL 'DESPROFRM' USING FDV-RFRSH
		MOVE TRL-NOM-CPRM TO FRM-NFLD
		MOVE TRL-GLS-CPRM TO FRM-VFLD
		CALL 'DESPROFRM' USING FDV-PUT.
	MOVE TRL-NOM-PRMT TO FRM-NFLD.
	MOVE TRL-GLS-PRMT TO FRM-VFLD.
	CALL 'DESPROFRM' USING FDV-PUT.
	GO TO LEE-CACC.
FIN-MAIN.
	CALL 'DESPROFRM' USING FRM-CLR-ALL.
	MOVE TRL-NOM-CMND TO FRM-NFLD.
	MOVE WSS-COD-CCMN( I ) TO FRM-VFLD.
	MOVE I TO FRM-IFLD.
	CALL 'DESPROFRM' USING FDV-PUT.
	CALL 'DESPROFRM' USING FDV-SWKSP.
	EXIT PROGRAM.

CMN-RSET SECTION.
*----------------
INI-CMM-RSET.
	MOVE WSS-FWSP TO FRM-FWSP.
	MOVE WSS-NLIB TO FRM-NLIB.
	MOVE WSS-CLIB TO FRM-CLIB.
	MOVE WSS-NAME TO FRM-NAME.
	MOVE WSS-PLIN TO FRM-PLIN.
	MOVE WSS-SINI TO FRM-SINI.
FIN-CMN-RSET.
	EXIT.

BUS-CRPF SECTION.
*----------------
INI-BUS-CRPF.
	MOVE SPACES TO TRL-DFLD.
	MOVE SPACES TO WSS-DFLD.
	MOVE 'DESRPF' TO FIO-VOID.
	CALL 'DESFIORPF' USING '<VID>'.
	CALL 'DESFIORPF' USING '<INP>'.
	MOVE SPACES TO RPF-KEY-DPTR.
	MOVE SCR-PROG TO RPF-KEY-DPRO.
	MOVE 'C ' TO RPF-KEY-TRYC.
	CALL 'DESFIORPF' USING '<GET_KEY>'.
	IF RPF-GLS-PRMT = SPACES OR NOT FIO-STAT-OKS 
		MOVE ' Comando RET, Funcion TAB' TO TRL-GLS-PRMT
	ELSE
		MOVE RPF-GLS-PRMT TO TRL-GLS-PRMT.
	IF RPF-GLS-ABRT = SPACES OR NOT FIO-STAT-OKS 
		MOVE 'RET Seguir, TAB a Comando' TO SCR-ABRT
	ELSE
		MOVE RPF-GLS-ABRT TO SCR-ABRT.
	MOVE '?' TO TRL-GLS-CPRM.
	PERFORM LEE-CRPF.
	CALL 'DESFIORPF' USING '<CLO>'.
	MOVE SCR-PROG TO PRV-PROC.
	CALL 'DESCMNPRV'.
	MOVE TRL-IDX-CMND TO WSS-IDX-CMND.
FIN-BUS-CRPF.
	EXIT.

LEE-CRPF SECTION.
*----------------
INI-LEE-CRPF.
	CALL 'DESFIORPF' USING '<GET_NXT>'.
	IF NOT ( FIO-STAT-OKS AND RPF-KEY-DPRO = SCR-PROG AND
				  RPF-KEY-TREG = 'C' )
		GO TO FIN-LEE-CRPF.
	MOVE RPF-KEY-CORR TO I.
	MOVE RPF-COD-CCMN TO TRL-COD-CMND( I + 1 ).
	MOVE RPF-GLS-PRMT TO WSS-GLS-PRMT( I + 1 ).
	MOVE RPF-GLS-CONF TO WSS-GLS-CONF( I + 1 ).
	MOVE RPF-GLS-UARC TO WSS-GLS-UARC( I + 1 ).
	MOVE RPF-COD-CCPP TO WSS-COD-CCPP( I + 1 ).
	MOVE RPF-IND-STPP TO WSS-IND-STPP( I + 1 ).
	GO TO INI-LEE-CRPF.
FIN-LEE-CRPF.
	EXIT.

LEE-CMND SECTION.
*----------------
INI-LEE-CMND.
	MOVE TRL-NOM-CACC TO FRM-NFLD.
	CALL 'DESPROFRM' USING FDV-GET.
	IF FRM-FFLD EQUAL FRM-FFLD-BSP
		MOVE 'Accion NO VALIDA' TO FRM-MENS
		GO TO ERR-LEE-CMND.
	MOVE FRM-VFLD TO TRL-COD-CACC.
	IF FRM-FFLD EQUAL FRM-FFLD-RET
		GO TO RET-LEE-CMND.
TAB-LEE-CMND.
	IF TRL-COD-CACC = SPACES OR '00.00.00.00' OR '  .  .  .  '
		GO TO FIN-LEE-CMND.
	MOVE TRL-COD-CACC TO WSS-COD-FUNC.
	PERFORM VAL-FUNC VARYING J FROM 1 BY 1 UNTIL J > 3 OR
		NOT ( WSS-GLS-PUNT(J) = '.' OR SPACES ).
	IF J NOT > 3
		MOVE 'Funcion NO VALIDA' TO FRM-MENS
		GO TO ERR-LEE-CMND.
	PERFORM VAL-FUNC VARYING JMIN FROM 1 BY 1 UNTIL
		WSS-COD-NIVE(JMIN) NOT = SPACES.
	PERFORM VAL-FUNC VARYING JMAX FROM 4 BY -1 UNTIL
		WSS-COD-NIVE(JMAX) NOT = ZEROES.
	PERFORM VAL-FUNC VARYING J FROM JMIN BY 1 UNTIL J > JMAX OR
		(( WSS-COD-NIVE(J) NOT NUMERIC ) AND
		 ( WSS-COD-NIVE(J) NOT ALPHABETIC )) OR
		 ( WSS-COD-NIVE(J) = SPACES OR ZEROES ).
	IF J NOT > JMAX
		MOVE 'Funcion NO VALIDA' TO FRM-MENS
		GO TO ERR-LEE-CMND.
	MOVE MEN-COD-FUNC TO FUN-KEY-FUNC.
	PERFORM DET-NIVE VARYING K FROM 1 BY 1 UNTIL K > 4.
	PERFORM GET-FUNC VARYING K FROM 1 BY 1 UNTIL K > 4.
	MOVE WSS-COD-FUNC TO TRL-COD-CACC.
	GO TO FIN-LEE-CMND.
RET-LEE-CMND.
	IF TRL-COD-CACC = SPACES
		MOVE 'FALTA Comando' TO FRM-MENS
		GO TO ERR-LEE-CMND.
	MOVE TRL-COD-CACC TO WSS-COD-CACC.
	MOVE 1 TO I.
	SET WSS-ITBL TO 1.
	SEARCH WSS-TABL VARYING I
		WHEN WSS-COD-CCMN( WSS-ITBL ) = WSS-COD-CAC2
			GO TO FIN-LEE-CMND.
	MOVE 'Comando NO VALIDO' TO FRM-MENS.
ERR-LEE-CMND.
	CALL 'DESPROFRM' USING FRM-MSG-CLR.
	GO TO INI-LEE-CMND.
FIN-LEE-CMND.
	MOVE FRM-FFLD TO SCR-FFLD.

VAL-FUNC SECTION.
*----------------
INI-VAL-FUNC.
FIN-VAL-FUNC.
	EXIT.

DET-NIVE SECTION.
*----------------
INI-DET-NIVE.
	IF K = JMIN
		PERFORM PUT-FUNC VARYING J FROM JMIN BY 1 UNTIL J > 4
	ELSE
	IF FUN-KEY-NIVE(K) = ZEROES
		PERFORM PUT-FUNC VARYING J FROM JMIN BY 1 UNTIL J > 4
		MOVE 5 TO K.
FIN-DET-NIVE.
	EXIT.

PUT-FUNC SECTION.
*----------------
INI-PUT-FUNC.
	MOVE WSS-COD-NIVE(J) TO FUN-KEY-NIVE(K).
	ADD 1 TO K.
FIN-PUT-FUNC.
	EXIT.

GET-FUNC SECTION.
*----------------
INI-GET-FUNC.
	MOVE FUN-KEY-NIVE(K) TO WSS-COD-NIVE(K).
FIN-GET-FUNC.
	EXIT.

CMN-CONF SECTION.
*----------------
INI-CMN-CONF.
	MOVE SCR-VFLD-YES TO SCR-VFLD.
	IF SCR-CONF = SPACES
		GO TO FIN-CMN-CONF.
	MOVE TRL-NOM-PRMT TO FRM-NFLD.
	MOVE SCR-CONF TO FRM-VFLD.
	CALL 'DESPROFRM' USING FDV-PUT.
	MOVE TRL-NOM-CPRM TO FRM-NFLD.
	MOVE TRL-GLS-CPRM TO FRM-VFLD.
	CALL 'DESPROFRM' USING FDV-PUT.
	MOVE TRL-NOM-CACC TO FRM-NFLD.
	CALL 'DESPROFRM' USING FRM-CLR-FLD.
LEE-CMN-CONF.
	CALL 'DESPROFRM' USING FDV-GET.
	MOVE FRM-VFLD TO SCR-VFLD.
	IF NOT ( SCR-VFLD = SCR-VFLD-YES OR SCR-VFLD-NOT OR SPACES )
		MOVE 'Debe ser S (Si), N o Blancos (No)' TO FRM-MENS
		CALL 'DESPROFRM' USING FRM-MSG-CLR
		GO TO LEE-CMN-CONF.
	IF SCR-VFLD = SPACES
		MOVE SCR-VFLD-NOT TO SCR-VFLD.
FIN-CMN-CONF.
	MOVE TRL-NOM-CACC TO FRM-NFLD.
	CALL 'DESPROFRM' USING FRM-CLR-FLD.

CMN-FIN SECTION.
*---------------
INI-CMN-FIN.
	CALL 'DESFIOFUN' USING '<CLO>'.
	MOVE 'DESFUN' TO FIO-VOID.
	CALL 'DESFIOFUN' USING '<VID>'.
	CALL 'DESFIOFUN' USING '<INP>'.
	CALL 'DESFIOMEN' USING '<UPD>'.
	CALL 'DESFIOMEN' USING '<GET_NXT>'.
	IF NOT FIO-STAT-OKS
		MOVE 'Archivo MEN Vacio : ABORTO' TO FRM-MENS
		CALL 'DESPROFRM' USING FRM-MSG
		CALL 'DESPROFRM' USING FRM-FIN
		DIVIDE WSS-ZERO INTO WSS-AUXI.
LUP-CMN-FIN.
	IF TRL-COD-CACC = SPACES
		MOVE SPACES TO FUN-KEY-FUNC
		MOVE MEN-COD-FRET TO FUN-KEY-NEMO
		CALL 'DESFIOFUN' USING '<GET_KEY/FUN-KEY-NEMO>'
		GO TO VAL-CMN-FIN.
	MOVE TRL-COD-CACC TO WSS-COD-FUNC.
	MOVE 1 TO K.
	PERFORM PUT-FUNC VARYING J FROM 1 BY 1 UNTIL J > 4.
	CALL 'DESFIOFUN' USING '<GET_KEY>'.
VAL-CMN-FIN.
	IF FUN-COD-TFUN = 'BAT' OR NOT FIO-STAT-OKS
		IF FUN-KEY-FUNC = ZEROES
			GO TO SIS-CMN-FIN
		ELSE
			GO TO ERR-CMN-FIN.
PRV-CMN-FIN.
	IF NOT ( FUN-IND-IPRV = 'S' OR 'N' )
		CALL 'LIB$GET_SYMBOL'	USING
			BY DESCRIPTOR	PRV-SYMB
					FUN-IND-IPRV.
	IF FUN-IND-IPRV = 'N'
		GO TO SUB-CMN-FIN.
	MOVE FUN-COD-NEMO TO PRV-PROC.
	CALL 'DESPROPRV'.
	IF NOT PRV-STAT-OKS
		IF FUN-KEY-FUNC = ZEROES
			MOVE 'NO tiene ACCESO al SISTEMA' TO FRM-MENS
			GO TO MSG-CMN-FIN
		ELSE
			GO TO ERR-CMN-FIN.
SUB-CMN-FIN.
	IF FUN-COD-TFUN NOT = 'SUB'
		GO TO FUN-CMN-FIN.
	MOVE FUN-GLS-CMND TO TRL-IDX-CMND.
	MOVE '  Opcion RET, Funcion TAB' TO TRL-GLS-PRMT.
	MOVE SPACES TO TRL-COD-CACC.
	MOVE TRL-DFLD TO FRM-DFLD.
	CALL 'DESPROFRM' USING FDV-PUTAL.	
	MOVE TRL-NOM-CACC TO FRM-NFLD.
LEE-CMN-FIN.
	CALL 'DESPROFRM' USING FDV-GET.
	MOVE FRM-VFLD TO TRL-COD-CACC.
	IF FRM-FFLD EQUAL FRM-FFLD-BSP
		MOVE 'Accion NO VALIDA' TO FRM-MENS
		GO TO MAL-CMN-FIN.
	IF FRM-FFLD EQUAL FRM-FFLD-RET
		GO TO RET-CMN-FIN.
TAB-CMN-FIN.
	IF TRL-COD-CACC = SPACES OR '00.00.00.00' OR '  .  .  .  '
		GO TO LUP-CMN-FIN.
	MOVE TRL-COD-CACC TO WSS-COD-FUNC.
	PERFORM VAL-FUNC VARYING J FROM 1 BY 1 UNTIL J > 3 OR
		NOT ( WSS-GLS-PUNT(J) = '.' OR SPACES ).
	IF J NOT > 3
		MOVE 'Funcion NO VALIDA' TO FRM-MENS
		GO TO MAL-CMN-FIN.
	PERFORM VAL-FUNC VARYING JMIN FROM 1 BY 1 UNTIL
		WSS-COD-NIVE(JMIN) NOT = SPACES.
	PERFORM VAL-FUNC VARYING JMAX FROM 4 BY -1 UNTIL
		WSS-COD-NIVE(JMAX) NOT = ZEROES.
	PERFORM VAL-FUNC VARYING J FROM JMIN BY 1 UNTIL J > JMAX OR
		(( WSS-COD-NIVE(J) NOT NUMERIC ) AND
		 ( WSS-COD-NIVE(J) NOT ALPHABETIC )) OR
		 ( WSS-COD-NIVE(J) = SPACES OR ZEROES ).
	IF J NOT > JMAX
		MOVE 'Funcion NO VALIDA' TO FRM-MENS
		GO TO MAL-CMN-FIN.
	MOVE MEN-COD-FUNC TO FUN-KEY-FUNC.
	PERFORM DET-NIVE VARYING K FROM 1 BY 1 UNTIL K > 4.
	PERFORM GET-FUNC VARYING K FROM 1 BY 1 UNTIL K > 4.
	MOVE WSS-COD-FUNC TO TRL-COD-CACC.
	GO TO LUP-CMN-FIN.
RET-CMN-FIN.
	IF TRL-COD-CACC = SPACES
		MOVE 'FALTA Opcion' TO FRM-MENS
		GO TO MAL-CMN-FIN.
	MOVE FUN-COD-MENU TO FUN-KEY-CMEN.
	MOVE TRL-COD-CACC TO WSS-COD-CACC.
	MOVE WSS-COD-CAC2 TO FUN-KEY-CACC.
	CALL 'DESFIOFUN' USING '<GET_KEY/FUN-KEY-NEMO>'.
	IF NOT FIO-STAT-OKS
		MOVE 'Opcion INEXISTENTE o NO PERMITIDA' TO FRM-MENS
		GO TO MAL-CMN-FIN.
	GO TO VAL-CMN-FIN.
MAL-CMN-FIN.
	CALL 'DESPROFRM' USING FRM-MSG-CLR.
	GO TO LEE-CMN-FIN.
ERR-CMN-FIN.
	CALL 'DESPROFRM' USING FDV-BELL.
	CALL 'DESPROFRM' USING FDV-BELL.
	MOVE 'Funcion INEXISTENTE o NO PERMITIDA' TO FRM-MENS.
	CALL 'DESPROFRM' USING FRM-MSG.
	CALL 'LIB$WAIT' USING WSS-WAIT.
	IF TRL-COD-CACC NOT = SPACES
		MOVE SPACES TO TRL-COD-CACC
		GO TO LUP-CMN-FIN.
	MOVE ZEROES TO FUN-KEY-FUNC.
	CALL 'DESFIOFUN' USING '<GET_KEY>'.
	IF FIO-STAT-OKS
		GO TO PRV-CMN-FIN.
SIS-CMN-FIN.
	MOVE 'NO existe SISTEMA en archivo FUN : ABORTO' TO FRM-MENS.
MSG-CMN-FIN.
	CALL 'DESPROFRM' USING FRM-MSG.
	CALL 'DESFIOMEN' USING '<CLO>'.
	CALL 'DESFIOFUN' USING '<CLO>'.
	CALL 'DESPROFRM' USING FRM-FIN.
	DIVIDE WSS-ZERO INTO WSS-AUXI.
FUN-CMN-FIN.
	MOVE MEN-COD-SIST TO WSS-COD-SIST.
	MOVE FUN TO MEN.
	MOVE WSS-COD-SIST TO MEN-COD-SIST.
	CALL 'DESFIOMEN' USING '<MOD>'.
	CALL 'DESFIOMEN' USING '<CLO>'.
	CALL 'DESFIOFUN' USING '<CLO>'.
	CALL 'DESPROFRM' USING FRM-FIN.
	CALL 'LIB$DO_COMMAND' USING BY DESCRIPTOR FUN-GLS-CMND.
FIN-CMN-FIN.
	EXIT.

SCR-AWKSP SECTION.
*-----------------
INI-SCR-AWKSP.
	CALL 'FDV$AWKSP' USING
		BY DESCRIPTOR SCR-RWSP
		BY REFERENCE  FRM-TWSP.
FIN-SCR-AWKSP.
	EXIT.

SCR-SWKSP SECTION.
*-----------------
INI-SCR-SWKSP.
	CALL 'FDV$SWKSP' USING
		BY DESCRIPTOR SCR-RWSP.
FIN-SCR-SWKSP.
	EXIT.
