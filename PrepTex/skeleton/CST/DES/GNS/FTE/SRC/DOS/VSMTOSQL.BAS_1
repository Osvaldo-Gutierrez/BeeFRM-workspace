100

        DECLARE INTEGER CONSTANT FIO_STAT_OKS = 0
        DECLARE INTEGER FIO_STAT

	DECLARE INTEGER &
					SZTOKEN,	TOKEN	,&
			P_P,		P_Q,		ASCII_Q	,&
			CRTS_LEID,	INX_MOD,	INX_ENC	,&
			C_FILE_PGIINP,	INDI_LINE,&
			C_FILE_BNDCPY,  C_FILE_PGIOUT,  C_FILE_BNDWFL,&
			INDI_COLU,	INDI_CORR,	TEXTFIELD,&
			TOT_ORDEN,	ENTEROS	,&
			SW_POS, 	SW_LAR, 	SW_NUM	,&
			SW_ALF,		SW_DEC,&
			FIO_ACCI


	DECLARE	STRING &
			V_TIP_FIO(200),&
			V_SIS_FIO(200), V_TBL_FIO(200),&
			BIP,O_L,	FILE_PGIINP,	FILE_FLG,&
			FILE_BNDCPY,	FILE_PGIOUT,	FILE_BNDWFL,&
			RESPALDO_PROGRAMA, C_Q,		ANT_VALTOKEN,&
			VALTOKEN,	VAL_STR_PTOKEN,	STRTOKEN,&
			BUFOUT,		TITULO,		POSICION,&
			CAMPO,		LARGO,		TIPO	,&
			FILA,		COLUMNA,	TEXTO1	,&
			TEXTO2,		PRIN_DATO,	PRIN_LINE,&
			PRIN_COLU,	PRIN_CORR,	FILE_CMN,&
			AUXI_FILE,	V_ORDEN(40),	DECIM,	&
			AUXI_PATH,	&
			CURRENT,	PFM_SIS,	&
			COPY_OF

	DECLARE INTEGER	CONSTANT &
			IDNTOK	= 1,	KEYTOK	= 2		,&
			NUMTOK	= 3,	EOLTOK	= 4		,&
			STRTOK	= 5,	CHRTOK	= 6		,&
			ETXTOK	= 8,	TABB	= 9		,&
			NEW_LINE= 10,	CAR_RET	= 13		,&
			NO	= 0,	ZI	= 1

 !==========================================================================

   DEF INTEGER FIO_PGO_OUT

        ON ERROR GO TO ERR_FIO_PGO_OUT

	OPEN FILE_PGIOUT FOR OUTPUT AS FILE #C_FILE_PGIOUT,	&
	ORGANIZATION SEQUENTIAL VARIABLE , RECORDSIZE 255, 	&
	RECORDTYPE ANY

        GO TO OK_FIO_PGO_OUT
 ERR_FIO_PGO_OUT:
        IF ERR = 2 THEN
                PRINT FILE_PGO ," : NOMBRE DE ARCHIVO ILEGAL"
        ELSE 
        IF ERR = 5 THEN
                PRINT FILE_PGO ," ARCHIVO INEXISTENTE"        
        ELSE
                PRINT "CODIGO : ",ERR
                PRINT "MENSAJE :",ERT$(ERR)
        END IF
        END IF

        FIO_STAT = 23

        RESUME 200
 OK_FIO_PGO_OUT:

        FIO_STAT = 0
200
   END DEF


   DEF INTEGER FIO_PGI_INP1

        ON ERROR GO TO ERR_FIO_PGI_INP1

	OPEN FILE_PGIINP FOR INPUT AS FILE #C_FILE_PGIINP , &
		ORGANIZATION SEQUENTIAL , RECORDTYPE ANY

        GO TO OK_FIO_PGI_INP1

 ERR_FIO_PGI_INP1:

        IF ERR = 2 THEN
                PRINT FILE_PGI ," : NOMBRE DE ARCHIVO ILEGAL "
                PRINT " "
        ELSE 
        IF ERR = 5 THEN
                PRINT FILE_PGI ," ARCHIVO INEXISTENTE "        
                PRINT " "        
        ELSE
                PRINT "CODIGO : ",ERR
                PRINT "MENSAJE :",ERT$(ERR)
                PRINT " "
        END IF
        END IF

        FIO_STAT = 23

        RESUME 300
 OK_FIO_PGI_INP1:
        FIO_STAT = 0
300
   END DEF


 !==========================================================================

 ! ------------------------------------------------------------------
 !               MODULO PRINCIPAL
 ! __________________________________________________________________

	BIP = CHR$(07)
	CURRENT = "CURRENT"
	P_P,P_Q = 1
	TOT_ORDEN = 0
	O_L = CHR$(10) + CHR$(13)
	C_FILE_PGIINP = 1
	C_FILE_PGIOUT = 2

	CALL LIB$GET_SYMBOL("GNS$PTH",AUXI_PATH)
	CALL LIB$GET_SYMBOL("GNS$FIL",AUXI_FILE)
	CALL LIB$GET_SYMBOL("PFM$SIS",PFM_SIS)
	PRINT "=========================================================================="
	PRINT ""
	PRINT "         VMSTOSQL CAMBIA SENTENCIAS VSM TO SQL EXEC                       "
	PRINT ""
	PRINT "=========================================================================="
	PRINT ""
	FILE_PGIINP = AUXI_PATH
	FILE_PGIOUT = AUXI_FILE + ".SQL"
	PGM_SIS$ = MID$(AUXI_FILE,1,3)
	PGM_ENT$ = MID$(AUXI_FILE,6,3)
 !!!
 !!! Abre archivos
 !!!

        FIO_ACCI = FIO_PGO_OUT

        FIO_ACCI = FIO_PGI_INP1

	IF FIO_STAT <> FIO_STAT_OKS THEN
		GO TO FIN_PGM
	END IF

	ON ERROR GO TO EOF_GETPGI

 !!! fio logica

 CIC_LEE_PGI:
	GET #C_FILE_PGIINP
	CRTS_LEID = RECOUNT
	MOVE FROM #C_FILE_PGIINP,CPY_B$ = CRTS_LEID
	POS_COP1% = POS(CPY_B$,"*/SQL/",1%)
	IF POS_COP1%  <> 0 THEN 
		PASO$ = CPY_B$
		DER$ = RIGHT$(CPY_B$,13)
		CPY_B$ = "      " + DER$
	END IF
	PRINT #C_FILE_PGIOUT, CPY_B$
	IF POS_COP1%  <> 0 THEN 
		GET #C_FILE_PGIINP
	END IF

       GO TO CIC_LEE_PGI

 EOF_GETPGI:
	IF ERR <> 11 THEN
		PRINT "ERROR(";err;") ";ert$(err);" en linea ";erl;", MODULO ";ern$
	END IF
	RESUME 950
950

	GO TO FIN_PGM

999
 FIN_PGM:

 END
