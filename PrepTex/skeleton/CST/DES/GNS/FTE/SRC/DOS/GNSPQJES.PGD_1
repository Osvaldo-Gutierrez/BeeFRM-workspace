       IDENTIFICATION DIVISION.
      *========================
       PROGRAM-ID.   GNSPQJES.
       AUTHOR.       CONSIST.
       DATE-WRITTEN. 22-Apr-93 05:30 PM.

      * ACTUALIZA ARCHIVO GNSBCH EN FORMA INTERACTIVA.

       ENVIRONMENT DIVISION.
      *=====================
       CONFIGURATION SECTION.
      *----------------------
       SPECIAL-NAMES.
               DECIMAL-POINT IS COMMA.

       DATA DIVISION.
      *==============

       WORKING-STORAGE SECTION.
      *------------------------
      * COPY GNSWGSCR.
       COPY GNSWCSCR.
       COPY GNSWVSCR.
       COPY GNSWIJES.
       COPY GNSBRBCH.


       COPY GNSWVIDD.
       COPY GNSWGRQA.
       COPY GNSWGUIB.
       COPY GNSWGELS.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-BCH-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-TAB-REQA==.
       COPY GNSBRTAB.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-MSG-REQA==.
       COPY GNSBRMSG.
       COPY GNSWCFIO.
       COPY GNSWVFIO.
       COPY GNSWGFRM.
       COPY GNSWVNUM.
       COPY GNSWCNUM.
       COPY GNSWGSYS.

      *<<<< WSS
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-OFI-REQA==.
       COPY TABBROFI.

       01  WSS-VARI.
           03 WSS-VEC-ILEE.
              05 WSS-ILEE         OCCURS 20            PIC  X(01).
           03 WSS-VEC-ORDE.
              05 WSS-ORDE         OCCURS 20            PIC  9(02).
           03 WSS-COD-CTAB.
              05 WSS-COD-CBAT                          PIC  X(03).
              05 WSS-COD-SIST                          PIC  X(04).
              05 WSS-NUM-CORR                          PIC  9(02).
              05 FILLER                                PIC  X(03).
           03 WSS-COD-CTAB-RED REDEFINES WSS-COD-CTAB.
              05 FILLER                                PIC  X(03).
              05 WSS-COD-PBAT                          PIC  X(06).
              05 WSS-NUM-NUME                          PIC  9(02).
              05 FILLER                                PIC  X(01).
           03 WSS-COD-CTAB-RED1 REDEFINES WSS-COD-CTAB.
              05 WSS-RED1-SIST                         PIC  X(03).
              05 WSS-RED1-PROG                         PIC  X(06).
              05 WSS-RED1-NUME                         PIC  9(02).
              05 FILLER                                PIC  X(01).
           03 WSS-COD-CTAB-RED2 REDEFINES WSS-COD-CTAB.
              05 WSS-RED2-SIST                         PIC  X(03).
              05 WSS-RED2-NUME                         PIC  9(02).
              05 FILLER                                PIC  X(07).
           03 WSS-COD-CTAB-RED3 REDEFINES WSS-COD-CTAB.
              05 WSS-RED3-PROG                         PIC  X(06).
              05 WSS-RED3-NUME                         PIC  9(02).
              05 FILLER                                PIC  X(03).
           03 WSS-COD-CTAB-RED4 REDEFINES WSS-COD-CTAB.
              05 WSS-RED4-NUME                         PIC  9(02).
              05 FILLER                                PIC  X(10).
           03 WSS-COD-CTAB-RED5 REDEFINES WSS-COD-CTAB.
              05 WSS-RED5-CHAR  OCCURS  12 TIMES       PIC  X(01).
           03 WSS-CPT-STRN.
              05 WSS-CPT-CHAR   OCCURS  12 TIMES       PIC  X(01).
           03 WSS-SIND.
              05 WSS-I                                 PIC  9(02).
              05 WSS-J                                 PIC  9(02).
           03 WSS-TAB-GLS-DATA.
              05 WSS-TAB-GLS-DATA-1                    PIC X(10).
              05 WSS-TAB-GLS-DATA-2                    PIC X(50).
           03 WSS-TOKEN                                PIC X(08).
           03 WSS-NODO                                 PIC X(08).
           03 WSS-USER                                 PIC X(08).
           03 WSS-FLAG                 VALUE 0         PIC 9(01).
      *     03 WSS-RESP                COMP            PIC S9(04).

       01  JES-VARI.
           03 JES-CMMA.
              05 JES-STAT                               PIC X(01).
              05 FILLER                VALUE 'N'        PIC X(01).
              05 JES-SSTT                               PIC X(01).
              05 FILLER                VALUE 'X'        PIC X(01).
              05 JES-COLA.
                 07 JES-TERM                            PIC X(04).
                 07 FILLER             VALUE 'CTL'      PIC X(04).
              05 FILLER                VALUE 'PRUEBA  ' PIC X(08).
           03 JES-TCMA                 VALUE +20 COMP   PIC S9(04).
           03 JES-STAT-OKS             VALUE SPACES     PIC X(01).
           03 JES-CODE.
              05 JES-COD1                               PIC X(01).
              05 JES-COD2                               PIC X(01).
       COPY GNSWGQUE.
      *
       COPY GNSWGBIB.
      *
       COPY GNSWGEDT.
       COPY GNSWGHOY.
      *>>>>
       01  PGM-VARI.
           03 PGM-ICLR                  VALUE ' '       PIC X(01).
           03 PGM-LIMPIAR-TODO          VALUE ' '       PIC X(01).
           03 PGM-LIMPIAR-LLAVES        VALUE 'K'       PIC X(01).
           03 PGM-LIMPIAR-CAMPOS        VALUE 'F'       PIC X(01).
           03 PGM-NO-LIMPIAR-NADA       VALUE 'N'       PIC X(01).
           03 PGM-PROG                                  PIC X(08).
           03 PGM-NTRN                                  PIC X(04).
           03 PGM-STAT.
              05 PGM-STAT-BCH.
                 88 PGM-STAT-BCH-NUL    VALUE '  '.
                 07 PGM-STT1-BCH        VALUE '2' PIC X(01).
                    88 PGM-STAT-BCH-OKS VALUE '0'.
                 07 PGM-STT2-BCH        VALUE '3' PIC X(01).
           03 PGM-SRNF                  VALUE '23'      PIC X(02).
           03 PGM-SOKS                  VALUE '00'      PIC X(02).
           03 PGM-SNUL                  VALUE '  '      PIC X(02).
           03 PGM-SUAR                  VALUE SPACES    PIC X(15).

       LINKAGE SECTION.
      *----------------
       01  DFHCOMMAREA.
           02 FILLER                    PIC X(250).
       COPY GNSLGFIO.

       PROCEDURE DIVISION.
      *===================

       MAIN SECTION.
       INI-MAIN.
           PERFORM INI.
       LUP-MAIN.
           IF SCR-INST = SCR-INST-HCM
                 PERFORM SCR-COM.
           IF SCR-CCPP = 'ACC'
                 PERFORM SCR-ACC
           ELSE
           IF SCR-CCPP = 'PGM'
                 PERFORM SCR-PGM
           ELSE
                 MOVE SCR-INST-HCM TO SCR-INST.
           GO TO LUP-MAIN.
       FIN-MAIN.
           EXIT.

       INI SECTION.
       INI-INI.
       COPY GNSBGEIB.
      *<<<< PGM_INI
           MOVE 'CTL' TO QUE-TYPE.
      *>>>>
       COPY GNSBGEDB.
           MOVE LOW-VALUES TO JES-FLD.
           PERFORM GNS-PRO-RCK.
           PERFORM GNS-BUS-VCA.
           PERFORM GNS-HDL-SYS.
           PERFORM GNS-HDL-FRM.
           MOVE 'GNSPQJES' TO FIO-PROG.
           PERFORM GNS-BUS-IDD.
      *<<<< ( INI_FIO ) AND ( NOT PGM_VSI )
           PERFORM GNS-HDL-VSM.
      *>>>>
      *<<<<
           PERFORM GNS-ERR-QUE.
           MOVE EIBTRMID TO QUE-TERM.
           IF SCR-SISG NOT > SPACES
               MOVE SCR-SIST TO SCR-SISG.
      *>>>>
       FIN-INI.
           EXIT.

       COPY GNSBHSYS.
       COPY GNSBHFRM.
       COPY GNSBPRCK.
       COPY GNSBBVCA.
       COPY GNSBBIDD.

       SCR-COM SECTION.
       INI-SCR-COM.
           MOVE FRM-CPSF-AEY TO FRM-CPIM-AEY.
           PERFORM PRO-ALL.
           PERFORM SCR-CLRA-JES.
           PERFORM EDT-KEY-JES.
           PERFORM EDT-FLD-JES.
           PERFORM SCR-PUTA.
           MOVE SCR-INST-HCM TO SCR-INST.
           MOVE SCR-CMNP     TO SYS-PROG.
           MOVE SCR-VARI     TO SYS-CMMA.
           MOVE SCR-TCMA     TO SYS-TCMA.
           MOVE SYS-XCTL     TO SYS-CMND.
           PERFORM GNS-PRO-SYS.
       XCT-ERR.
           MOVE 'XCTERR    ' TO MSG-COD-MENS.
           MOVE 'GNS'        TO MSG-COD-SIST.
           PERFORM GET-MSG.
           MOVE MSG-GLS-DESC TO SYS-MEN1.
           MOVE SYS-PROG     TO SYS-MEN2.
           MOVE SYS-ABOR     TO SYS-CMND.
           PERFORM GNS-PRO-SYS.
       COPY GNSBGGBK.
       FIN-SCR-COM.
           EXIT.



       SCR-ACC SECTION.
       INI-SCR-ACC.
           IF SCR-INST = SCR-INST-HKY
               MOVE SCR-INST-GKY TO SCR-INST
               PERFORM HBL-KEY
               PERFORM SCR-DMSG
           ELSE
           IF SCR-INST = SCR-INST-GKY
                PERFORM SCR-KEY
                IF SCR-STAT NOT = SCR-STAT-ABT
                        PERFORM SCR-TRL
                ELSE
                        PERFORM DESSCRTRL
                        GO TO FIN-SCR-ACC
           ELSE
           IF SCR-INST = SCR-INST-GAB
                PERFORM GET-CON
           ELSE
           IF SCR-INST = SCR-INST-BRW
               MOVE SCR-FFLD TO FRM-FFLD
               PERFORM BRW-SCR-ACC.
           PERFORM DESSCRTRL.
           MOVE SPACES TO FRM-MENS.
           PERFORM SCR-MSSG.
       FIN-SCR-ACC.
           EXIT.

       BRW-SCR-ACC SECTION.
       INI-BRW-SCR-ACC.
       FIN-BRW-SCR-ACC.
           EXIT.



       SCR-PGM SECTION.
       INI-SCR-PGM.
      *<<<< INI_SCR_PGM AND PGM_PQ
           IF SCR-INST = SCR-INST-HKY
               PERFORM SCR-RST
               PERFORM SCR-TRL.
      *>>>>
           IF SCR-INST = SCR-INST-HKY
               MOVE SCR-INST-GKY TO SCR-INST
               PERFORM HBL-KEY
               PERFORM SCR-DMSG
           ELSE
           IF SCR-INST = SCR-INST-GKY
                PERFORM SCR-RST
                PERFORM GET-KEY
                IF FRM-STAT-ABT
                    MOVE SPACES TO FRM-MENS
                    PERFORM SCR-MSSG
                    PERFORM DESSCRTRL
                    GO TO FIN-SCR-PGM
                ELSE
                    MOVE SPACES TO FRM-MENS
                    PERFORM FND-KEY
                    IF FIO-STAT = FIO-STAT-NEX
                        IF FRM-MENS NOT > SPACES
                            MOVE 'REGNEX    ' TO MSG-COD-MENS
                            MOVE 'GNS' TO MSG-COD-SIST
                            PERFORM GET-MSG
                            MOVE MSG-GLS-DESC TO FRM-MENS
                            PERFORM SCR-MSSG
                            MOVE SCR-STAT-ABT TO SCR-STAT
                            PERFORM DESSCRTRL
                            GO TO FIN-SCR-PGM
                        ELSE
                            PERFORM SCR-MSSG
                            MOVE SCR-STAT-ABT TO SCR-STAT
                            PERFORM DESSCRTRL
                            GO TO FIN-SCR-PGM
                    ELSE
                        MOVE PGM-LIMPIAR-TODO TO PGM-ICLR
                        PERFORM SCR-TRL
           ELSE
           IF SCR-INST = SCR-INST-GAB
                PERFORM GET-CON
           ELSE
           IF SCR-INST = SCR-INST-BRW
               MOVE SCR-FFLD TO FRM-FFLD
               PERFORM BRW-SCR-PGM.
           PERFORM DESSCRTRL.
           MOVE SPACES TO FRM-MENS.
           PERFORM SCR-MSSG.
       FIN-SCR-PGM.
           EXIT.

       BRW-SCR-PGM SECTION.
       INI-BRW-SCR-PGM.
       FIN-BRW-SCR-PGM.
           EXIT.

       SCR-DMSG SECTION.
       INI-SCR-DMSG.
           IF PGM-ICLR = PGM-NO-LIMPIAR-NADA
               NEXT SENTENCE
           ELSE
           IF PGM-ICLR = PGM-LIMPIAR-TODO
               PERFORM SCR-CLRA-JES
               PERFORM EDT-KEY-JES
               PERFORM EDT-FLD-JES
           ELSE
           IF PGM-ICLR = PGM-LIMPIAR-LLAVES
               PERFORM CLR-KEY-JES
               PERFORM EDT-KEY-JES
           ELSE
               PERFORM CLR-FLD-JES
               PERFORM EDT-FLD-JES.
           PERFORM SCR-PUTA.
           PERFORM SCR-EXIT.
       FIN-SCR-DMSG.
           EXIT.

       SCR-KEY SECTION.
       INI-SCR-KEY.
           PERFORM SCR-RST.
           PERFORM GET-KEY.
           IF FRM-STAT-ABT
                   MOVE SPACES TO FRM-MENS
                   PERFORM SCR-MSSG
                   GO TO FIN-SCR-KEY.
       FND-SCR-KEY.
           MOVE SPACES TO FRM-MENS.
           PERFORM FND-KEY.
           IF FIO-STAT-OKS
               PERFORM PUT-SCR
               MOVE PGM-LIMPIAR-TODO TO PGM-ICLR
               GO TO FIN-SCR-KEY.
      *JSS ELSE
      *        PERFORM CLR-FLD-JES.
       ERR-SCR-KEY.
           MOVE PGM-LIMPIAR-CAMPOS TO PGM-ICLR.
           IF FRM-MENS NOT > SPACES
               IF FIO-STAT-EOF
                   MOVE 'REGEOF    ' TO MSG-COD-MENS
                   MOVE 'GNS' TO MSG-COD-SIST
                   PERFORM GET-MSG
                   MOVE MSG-GLS-DESC TO FRM-MENS
               ELSE
               IF FIO-STAT = FIO-STAT-NEX
                   MOVE 'REGNEX    ' TO MSG-COD-MENS
                   MOVE 'GNS' TO MSG-COD-SIST
                   PERFORM GET-MSG
                   MOVE MSG-GLS-DESC TO FRM-MENS
               ELSE
                   MOVE 'FIOSTAT' TO MSG-COD-TMSG
                   MOVE FIO-STAT  TO MSG-COD-CMSG
                   MOVE 'GNS'     TO MSG-COD-SIST
                   PERFORM GET-MSG
                   MOVE MSG-GLS-DESC TO FRM-MENS.
           PERFORM SCR-MSSG.
           MOVE SCR-STAT-ABT TO SCR-STAT.
       FIN-SCR-KEY.
           EXIT.

       SCR-RST SECTION.
       INI-SCR-RST.
           MOVE SPACES       TO PGM-ICLR.
           MOVE SPACES       TO SCR-ACTU.
           MOVE SCR-STPP     TO SCR-STAT.
           MOVE SCR-MFLD-NOT TO SCR-MFLD.
           MOVE LOW-VALUES   TO JES-FLD.
       FIN-SCR-RST.
           EXIT.

       GET-KEY SECTION.
       INI-GET-KEY.
           PERFORM SCR-GKEY.
           IF FRM-STAT-ABT
               MOVE SCR-STAT-ABT TO SCR-STAT.
       FIN-GET-KEY.
           EXIT.

       GET-IKY SECTION.
       INI-GET-IKY.
           PERFORM SCR-GIKY.
           IF FRM-STAT-ABT
               MOVE SCR-STAT-ABT TO SCR-STAT.
       FIN-GET-IKY.
           EXIT.

       FND-KEY SECTION.
       INI-FND-KEY.
           PERFORM KEY-ALL-JES.
      *<<<<
           MOVE SCR-SISG TO FIO-SIST.
           MOVE SPACES   TO BCH-COD-TRYC.
      *>>>>
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM GNS-FIO-BCH.
           MOVE FIO-STAT TO PGM-STAT-BCH.
       FIN-FND-KEY.
           EXIT.

       PUT-SCR SECTION.
       INI-PUT-SCR.
      *<<<< PUT_SCR
           MOVE BCH-COD-PROC IN BCH TO BCH-COD-PROC IN JES-FLD.
           MOVE BCH-COD-CLVE IN BCH TO FRM-COD-CLVE IN JES-FLD.
           MOVE BCH-NUM-NEJM IN BCH TO FRM-NUM-NEJM IN JES-FLD.
           MOVE BCH-IND-IDEL IN BCH TO FRM-IND-IDEL IN JES-FLD.
           MOVE BCH-IND-IGIA IN BCH TO FRM-IND-IGIA IN JES-FLD.
           MOVE BCH-COD-DEST IN BCH TO FRM-COD-DEST IN JES-FLD.
           MOVE BCH-COD-CLSE IN BCH TO FRM-COD-CLSE IN JES-FLD.
           MOVE BCH-COD-FORM IN BCH TO FRM-COD-FORM IN JES-FLD.
      *    MOVE BCH-GLS-NFRM IN BCH TO FRM-GLS-NFRM IN JES-FLD.
      *    MOVE BCH-GLS-LFRM IN BCH TO FRM-GLS-LFRM IN JES-FLD.
      *    MOVE BCH-IND-IPRV IN BCH TO FRM-IND-IPRV IN JES-FLD.
           MOVE 1 TO FRM-IFLD.
       LUP-PUT-ILEE.
           MOVE BCH-IND-ILEE IN BCH(FRM-IFLD) TO
                FRM-IND-ILEE IN JES-FLD(FRM-IFLD).
           IF FRM-IFLD NOT > 8
               MOVE BCH-IND-PLNT IN BCH(FRM-IFLD) TO
                    FRM-IND-PLNT IN JES-FLD(FRM-IFLD).
           ADD 1 TO FRM-IFLD.
           IF FRM-IFLD NOT > 20
               GO TO LUP-PUT-ILEE.

           MOVE 'B' TO BCH-COD-TRYC.
           MOVE SCR-SISG    TO FIO-SIST.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM GNS-FIO-BCH.
           IF FIO-STAT-OKS
               MOVE BCH-GLS-GLSA IN BCH TO FRM-GLS-GLSA IN JES-FLD
               MOVE BCH-GLS-NRPT IN BCH TO FRM-GLS-NRPT IN JES-FLD
           ELSE
               MOVE SPACES TO FRM-GLS-GLSA IN JES-FLD
               MOVE SPACES TO FRM-GLS-NRPT IN JES-FLD.
      *>>>>
           PERFORM PUT-ALL-JES.
       FIN-PUT-SCR.
           EXIT.

       STP-EXIT SECTION.
       INI-STP-EXIT.
           MOVE SCR-PROG TO PGM-PROG.
           MOVE SCR-NTRN TO PGM-NTRN.

           MOVE SCR-PROV TO SCR-PROG.
           MOVE SCR-NTRV TO SCR-NTRN.

           MOVE PGM-PROG TO SCR-PROV
           MOVE PGM-NTRN TO SCR-NTRV.
       FIN-STP-EXIT.
           EXIT.

       SCR-EXIT SECTION.
       INI-SCR-EXIT.
           MOVE 'P'      TO SCR-ICMN.
           MOVE SCR-NTRN TO SYS-NTRN.
           MOVE SCR-VARI TO SYS-CMMA.
           MOVE SCR-TCMA TO SYS-TCMA.
           MOVE SYS-RTRN TO SYS-CMND.
           PERFORM GNS-PRO-SYS.
       FIN-SCR-EXIT.
           EXIT.

       SCR-PUTA SECTION.
       INI-SCR-PUTA.
           MOVE SCR-NMAP TO FRM-NAME.
           MOVE SCR-NLIB TO FRM-NLIB.
           MOVE JES-FLD TO FRM-DFLD.
           MOVE FRM-PUT-ALL TO FRM-CMND.
           PERFORM GNS-PRO-FRM.
       FIN-SCR-PUTA.
           EXIT.

       SCR-MSSG SECTION.
       INI-SCR-MSSG.
           IF FRM-MEN1 NOT > SPACES
               MOVE SPACES TO FRM-MEN1.
           IF FRM-MEN2 NOT > SPACES
               MOVE SPACES TO FRM-MEN2.
           MOVE FRM-MENS TO JES-GLS-MENS.
       FIN-SCR-MSSG.
           EXIT.

       SCR-GKEY SECTION.
       INI-SCR-GKEY.
           MOVE SCR-NMAP TO FRM-NAME.
           MOVE SCR-NLIB TO FRM-NLIB.
           MOVE FRM-GET-ALL TO FRM-CMND.
           PERFORM GNS-PRO-FRM.
           MOVE SPACES TO FRM-MENS.
           IF NOT ( FRM-FFLD = FRM-FFLD-RET  OR FRM-FFLD-PF10 OR
                               FRM-FFLD-PF12 OR FRM-FFLD-PF3 )
               MOVE 'PFSINV    ' TO MSG-COD-MENS
               MOVE 'GNS' TO MSG-COD-SIST
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS
               PERFORM FST-KEY-JES
               PERFORM SCR-MSSG
               PERFORM SCR-PUTA
               PERFORM SCR-EXIT.
           MOVE FRM-DFLD TO JES-FLD.
           IF FRM-STAT-ABT
               GO TO FIN-SCR-GKEY.
           MOVE FRM-SUAR-OKS TO FRM-SUAR.
           PERFORM VAL-NUM-KEY-JES.
           IF FRM-SUAR EQUAL FRM-SUAR-MAL OR FRM-SUAR-CLR
               PERFORM SCR-MSSG
               PERFORM EDT-KEY-JES
               PERFORM SCR-PUTA
               PERFORM SCR-EXIT.
      *JSS
           PERFORM CLR-FLD-JES.
           PERFORM VAL-IKY-JES.
           IF FRM-SUAR EQUAL FRM-SUAR-MAL OR FRM-SUAR-CLR
               GO TO ERR-SCR-GKEY.
           PERFORM VAL-MKY-JES.
           IF FRM-SUAR EQUAL FRM-SUAR-MAL OR FRM-SUAR-CLR
               GO TO ERR-SCR-GKEY.
           PERFORM VAL-AKY-JES.
           IF FRM-SUAR EQUAL FRM-SUAR-MAL OR FRM-SUAR-CLR
               GO TO ERR-SCR-GKEY.
           PERFORM VAL-CON-KEY-JES.
           IF NOT ( FRM-SUAR EQUAL FRM-SUAR-MAL OR FRM-SUAR-CLR )
               GO TO FIN-SCR-GKEY.
           IF FRM-UCUR NOT > SPACES
               PERFORM FST-KEY-JES.
       ERR-SCR-GKEY.
           PERFORM SCR-MSSG.
           PERFORM EDT-KEY-JES.
           PERFORM SCR-PUTA.
           PERFORM SCR-EXIT.
       FIN-SCR-GKEY.
           PERFORM SCR-MSSG.

       SCR-GIKY SECTION.
       INI-SCR-GIKY.
           MOVE SCR-NMAP TO FRM-NAME.
           MOVE SCR-NLIB TO FRM-NLIB.
           MOVE FRM-GET-ALL TO FRM-CMND.
           PERFORM GNS-PRO-FRM.
           MOVE SPACES TO FRM-MENS.
           IF NOT ( FRM-FFLD = FRM-FFLD-RET  OR FRM-FFLD-PF10 OR
                               FRM-FFLD-PF12 OR FRM-FFLD-PF3 )
               MOVE 'PFSINV    ' TO MSG-COD-MENS
               MOVE 'GNS' TO MSG-COD-SIST
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS
               PERFORM FST-KEY-JES
               PERFORM SCR-MSSG
               PERFORM SCR-PUTA
               PERFORM SCR-EXIT.
           MOVE FRM-DFLD TO JES-FLD.
           IF FRM-STAT-ABT
               GO TO FIN-SCR-GIKY.
           MOVE FRM-SUAR-OKS TO FRM-SUAR.
           PERFORM VAL-NUM-IKY-JES.
           IF FRM-SUAR EQUAL FRM-SUAR-MAL OR FRM-SUAR-CLR
               PERFORM SCR-MSSG
               PERFORM EDT-IKY-JES
               PERFORM SCR-PUTA
               PERFORM SCR-EXIT.
      *JSS
           PERFORM CLR-FLD-JES.
           PERFORM VAL-IKY-JES.
           IF FRM-SUAR EQUAL FRM-SUAR-MAL OR FRM-SUAR-CLR
               GO TO ERR-SCR-GIKY.
           PERFORM VAL-CON-IKY-JES.
           IF NOT ( FRM-SUAR EQUAL FRM-SUAR-MAL OR FRM-SUAR-CLR )
               GO TO FIN-SCR-GIKY.
           IF FRM-UCUR NOT > SPACES
               PERFORM FST-KEY-JES.
       ERR-SCR-GIKY.
           PERFORM SCR-MSSG.
           PERFORM EDT-IKY-JES.
           PERFORM SCR-PUTA.
           PERFORM SCR-EXIT.
       FIN-SCR-GIKY.
           PERFORM SCR-MSSG.

       GET-CON SECTION.
       INI-GET-CON.
           MOVE SCR-NMAP TO FRM-NAME.
           MOVE SCR-NLIB TO FRM-NLIB.
           MOVE FRM-GET-ALL TO FRM-CMND.
           PERFORM GNS-PRO-FRM.
           IF NOT ( FRM-FFLD = FRM-FFLD-RET  OR FRM-FFLD-PF10 OR
                               FRM-FFLD-PF12 OR FRM-FFLD-PF3 )
               MOVE 'PFSINV    ' TO MSG-COD-MENS
               MOVE 'GNS' TO MSG-COD-SIST
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO JES-GLS-MEN2
               MOVE SCR-PRMT     TO JES-GLS-MEN1
               PERFORM FST-MSG
               PERFORM SCR-PUTA
               PERFORM SCR-EXIT.
           MOVE FRM-DFLD TO JES-FLD.
       FIN-GET-CON.
           MOVE SCR-STAT-CON TO SCR-STAT.

       CLR-MSG SECTION.
       INI-CLR-MSG.
           MOVE SPACES TO JES-GLS-MENS.
       FIN-CLR-MSG.
           EXIT.

       HBL-IKY SECTION.
       INI-HBL-IKY.
           IF SCR-DESDE-CMN
               MOVE JES-GLS-MENS TO FRM-MENS
               MOVE LOW-VALUES TO JES-FLD
               MOVE FRM-MENS TO JES-GLS-MENS.
           MOVE FRM-CPSF-AEY TO FRM-CPIM-AEY.
           PERFORM PRO-MKY-JES.
           PERFORM PRO-AKY-JES.
           PERFORM UNP-IKY-JES.
           PERFORM FST-KEY-JES.
           MOVE '1' TO FRM-CPIM-AEY.
       FIN-HBL-IKY.
           EXIT.

       HBL-KEY SECTION.
       INI-HBL-KEY.
           IF SCR-DESDE-CMN
               MOVE JES-GLS-MENS TO FRM-MENS
               MOVE LOW-VALUES TO JES-FLD
               MOVE FRM-MENS TO JES-GLS-MENS.
           MOVE FRM-CPSF-AEY TO FRM-CPIM-AEY.
           PERFORM UNP-KEY-JES.
           PERFORM FST-KEY-JES.
           MOVE '1' TO FRM-CPIM-AEY.
       FIN-HBL-KEY.
           EXIT.

       HBL-FLD SECTION.
       INI-HBL-FLD.
           PERFORM PRO-IKY-JES.
           PERFORM PRO-AKY-JES.
           PERFORM UNP-MKY-JES.
           PERFORM UNP-FLD-JES.
           PERFORM FST-FLD-JES.
      *<<<<
           PERFORM UNP-PLNT.
           PERFORM UNP-DATO VARYING FRM-IFLD FROM 1 BY 1 UNTIL
                                                         FRM-IFLD > 20.
      *>>>>
       FIN-HBL-FLD.
           EXIT.

       FST-MSG SECTION.
       INI-FST-MSG.
           MOVE -1 TO JES-GLS-MENS-LEN.
       FIN-FST-MSG.
           EXIT.

       PRO-ALL SECTION.
       INI-PRO-ALL.
           PERFORM PRO-KEY-JES.
           PERFORM FST-MSG.
       FIN-PRO-ALL.
           EXIT.

       SCR-TRL SECTION.
       INI-SCR-TRL.
           IF FRM-MEN1 NOT > SPACES
               MOVE SCR-PRMT TO FRM-MEN1.
           IF SCR-STAT = SCR-STAT-MOD
               MOVE SCR-INST-GFL TO SCR-INST
               PERFORM HBL-FLD
               PERFORM SCR-MSSG
               PERFORM EDT-KEY-JES
               PERFORM EDT-FLD-JES
               PERFORM SCR-PUTA
               PERFORM STP-EXIT
               PERFORM SCR-EXIT.
           IF SCR-STAT = SCR-STAT-SON
               MOVE SCR-INST-GCS TO SCR-INST
               PERFORM PRO-ALL
               PERFORM SCR-MSSG
               PERFORM EDT-KEY-JES
               PERFORM EDT-FLD-JES
               PERFORM SCR-PUTA
               PERFORM STP-EXIT
               PERFORM SCR-EXIT.
      *ASUME SCR-STAT-CON.
           MOVE SCR-STAT-CON TO SCR-STAT.
           MOVE SCR-INST-GAB TO SCR-INST.
      *    MOVE FRM-CPSF-AEY TO FRM-CPIM-AEY.
           PERFORM PRO-ALL.
           PERFORM SCR-MSSG.
           PERFORM EDT-KEY-JES.
           PERFORM EDT-FLD-JES.
           PERFORM SCR-PUTA.
           PERFORM SCR-EXIT.
       FIN-SCR-TRL.
           EXIT.

       DESSCRTRL SECTION.
       INI-DESSCRTRL.
           MOVE SCR-VFLD-NOT TO SCR-VFLD.
           MOVE FRM-FFLD TO SCR-FFLD.
       FIN-DESSCRTRL.
           IF SCR-FFLD-PF10 OR SCR-FFLD-PF3
                 MOVE SCR-INST-HCM TO SCR-INST
           ELSE
                 MOVE SCR-INST-HKY TO SCR-INST.
       EXT-DESSCRTRL.
           EXIT.

      * COPY GNSBMJES.
       COPY GNSBQJES.
       COPY GNSBFBCH.
       COPY GNSBFMSG.
       COPY GNSBGSYS.
       COPY GNSBGDTC.
       COPY GNSBGFRM.
       COPY GNSBGMSG.
       COPY GNSBEKEY.
       COPY GNSBIABT.
       COPY GNSBFTAB.

      *<<<< ( EOF ) AND ( NOT PGM_VSI )
       COPY GNSBGVSM.
       COPY GNSBHVSM.
      *>>>>
      *<<<< EOF
       ELIMINA-BLANCOS SECTION.
       INI-ELIMINA-BLANCOS.
           MOVE ZEROS  TO WSS-I.
           MOVE ZEROS  TO WSS-J.
           MOVE SPACES TO WSS-CPT-STRN.
       LUP-ELIMINA-BLANCOS.
           ADD 1 TO WSS-I.
           IF WSS-RED5-CHAR (WSS-I) > SPACES
              ADD 1 TO WSS-J
              MOVE WSS-RED5-CHAR (WSS-I) TO WSS-CPT-CHAR (WSS-J).
           IF WSS-I < 12
               GO TO LUP-ELIMINA-BLANCOS.
           MOVE WSS-CPT-STRN TO WSS-COD-CTAB.
       FIN-ELIMINA-BLANCOS.
           EXIT.

       UNP-PLNT SECTION.
       INI-UNP-PLNT.
           IF FRM-IND-PLNT IN JES-FLD( 1 ) = 'N'
               MOVE FRM-CPIM-AEY TO FRM-COD-CLVE-ATR
               MOVE 0            TO FRM-COD-CLVE-LEN
           ELSE
               MOVE FRM-CPIM-UBY TO FRM-COD-CLVE-ATR
               MOVE -1           TO FRM-COD-CLVE-LEN.

           IF FRM-IND-PLNT IN JES-FLD( 2 ) = 'N'
               MOVE FRM-CPIM-AEY TO FRM-IND-IGIA-ATR
               MOVE 0            TO FRM-IND-IGIA-LEN
           ELSE
               MOVE FRM-CPIM-UBY TO FRM-IND-IGIA-ATR
               MOVE -1           TO FRM-IND-IGIA-LEN.

           IF FRM-IND-PLNT IN JES-FLD( 3 ) = 'N'
               MOVE FRM-CPIM-AEY TO FRM-GLS-GLSA-ATR
               MOVE 0            TO FRM-GLS-GLSA-LEN
           ELSE
               MOVE FRM-CPIM-UBY TO FRM-GLS-GLSA-ATR
               MOVE -1           TO FRM-GLS-GLSA-LEN.

           IF FRM-IND-PLNT IN JES-FLD( 4 ) = 'N'
               MOVE FRM-CPIM-AEY TO FRM-NUM-NEJM-ATR
               MOVE 0            TO FRM-NUM-NEJM-LEN
           ELSE
               MOVE FRM-CPIM-UBY TO FRM-NUM-NEJM-ATR
               MOVE -1           TO FRM-NUM-NEJM-LEN.

           IF FRM-IND-PLNT IN JES-FLD( 5 ) = 'N'
               MOVE FRM-CPIM-AEY TO FRM-IND-IDEL-ATR
               MOVE 0            TO FRM-IND-IDEL-LEN
           ELSE
               MOVE FRM-CPIM-UBY TO FRM-IND-IDEL-ATR
               MOVE -1           TO FRM-IND-IDEL-LEN.

           MOVE -1 TO FRM-IND-RRPT-LEN.

           IF FRM-IND-PLNT IN JES-FLD( 6 ) = 'N'
               MOVE FRM-CPIM-AEY TO FRM-COD-DEST-ATR
               MOVE 0            TO FRM-COD-DEST-LEN
           ELSE
               MOVE  0           TO FRM-IND-RRPT-LEN
               MOVE FRM-CPIM-UBY TO FRM-COD-DEST-ATR
               MOVE -1           TO FRM-COD-DEST-LEN.

           IF FRM-IND-PLNT IN JES-FLD( 7 ) = 'N'
               MOVE FRM-CPIM-AEY TO FRM-COD-CLSE-ATR
               MOVE 0            TO FRM-COD-CLSE-LEN
           ELSE
               MOVE  0           TO FRM-IND-RRPT-LEN
               MOVE FRM-CPIM-UBY TO FRM-COD-CLSE-ATR
               MOVE -1           TO FRM-COD-CLSE-LEN.

           IF FRM-IND-PLNT IN JES-FLD( 8 ) = 'N'
               MOVE FRM-CPIM-AEY TO FRM-COD-FORM-ATR
               MOVE 0            TO FRM-COD-FORM-LEN
           ELSE
               MOVE  0           TO FRM-IND-RRPT-LEN
               MOVE FRM-CPIM-UBY TO FRM-COD-FORM-ATR
               MOVE -1           TO FRM-COD-FORM-LEN.
       FIN-UNP-PLNT.
           EXIT.

       UNP-DATO SECTION.
       INI-UNP-DATO.
           IF FRM-IND-ILEE IN JES-FLD( FRM-IFLD ) = '0' OR
              FRM-IND-ILEE IN JES-FLD( FRM-IFLD ) NOT > SPACES
               MOVE FRM-CPIM-AEY TO FRM-DAT-DATO-ATR( FRM-IFLD )
               MOVE 0            TO FRM-DAT-DATO-LEN( FRM-IFLD )
               GO TO FIN-UNP-DATO.

           MOVE FRM-CPIM-UBY TO FRM-DAT-DATO-ATR( FRM-IFLD ).
           MOVE  0           TO FRM-IND-RRPT-LEN.
           MOVE -1           TO FRM-DAT-DATO-LEN( FRM-IFLD ).

           PERFORM GET-GLS-DATO.
       FIN-UNP-DATO.
           EXIT.

       GET-GLS-DATO SECTION.
       INI-GET-GLS-DATO.
      *AQUI BUSCA CON EL CODIGO SISTEMA, PROGRAMA, NUMERO
           MOVE SPACES                  TO WSS-COD-CTAB.
           MOVE SCR-SISG                TO WSS-RED1-SIST.
           MOVE BCH-COD-PROC IN JES-FLD TO WSS-RED1-PROG.
           MOVE FRM-IFLD                TO WSS-RED1-NUME.
           PERFORM ELIMINA-BLANCOS.
           MOVE SCR-SISG     TO TAB-COD-SIST FIO-SIST.
           MOVE 'GPB'        TO TAB-COD-TTAB IN TAB.
           MOVE WSS-COD-CTAB TO TAB-COD-CTAB IN TAB.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM GNS-FIO-TAB.
           IF ( FIO-STAT-OKS ) AND ( TAB-MSC-STAT IN TAB NOT = 'N' )
               MOVE TAB-GLS-DESC IN TAB TO FRM-GLS-DATO
                                           IN JES-FLD( FRM-IFLD )
               GO TO FIN-GET-GLS-DATO.
      *AQUI BUSCA CON EL CODIGO SISTEMA, NUMERO
           MOVE SPACES                  TO WSS-COD-CTAB.
           MOVE SCR-SISG                TO WSS-RED2-SIST.
           MOVE FRM-IFLD                TO WSS-RED2-NUME.
           MOVE SCR-SISG     TO TAB-COD-SIST FIO-SIST.
           MOVE 'GPB'        TO TAB-COD-TTAB IN TAB.
           MOVE WSS-COD-CTAB TO TAB-COD-CTAB IN TAB.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM GNS-FIO-TAB.
           IF ( FIO-STAT-OKS ) AND ( TAB-MSC-STAT IN TAB NOT = 'N' )
               MOVE TAB-GLS-DESC IN TAB TO FRM-GLS-DATO
                                           IN JES-FLD( FRM-IFLD )
               GO TO FIN-GET-GLS-DATO.
      *AQUI BUSCA CON EL CODIGO PROGRAMA, NUMERO
           MOVE SPACES                  TO WSS-COD-CTAB.
           MOVE BCH-COD-PROC IN JES-FLD TO WSS-RED3-PROG.
           MOVE FRM-IFLD                TO WSS-RED3-NUME.
           PERFORM ELIMINA-BLANCOS.
           MOVE SCR-SISG     TO TAB-COD-SIST FIO-SIST.
           MOVE 'GPB'        TO TAB-COD-TTAB IN TAB.
           MOVE WSS-COD-CTAB TO TAB-COD-CTAB IN TAB.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM GNS-FIO-TAB.
           IF ( FIO-STAT-OKS ) AND ( TAB-MSC-STAT IN TAB NOT = 'N' )
               MOVE TAB-GLS-DESC IN TAB TO FRM-GLS-DATO
                                           IN JES-FLD( FRM-IFLD )
               GO TO FIN-GET-GLS-DATO.
      *AQUI BUSCA CON EL CODIGO NUMERO
           MOVE SPACES                  TO WSS-COD-CTAB.
           MOVE FRM-IFLD                TO WSS-RED4-NUME.
           MOVE SCR-SISG     TO TAB-COD-SIST FIO-SIST.
           MOVE 'GPB'        TO TAB-COD-TTAB IN TAB.
           MOVE WSS-COD-CTAB TO TAB-COD-CTAB IN TAB.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM GNS-FIO-TAB.
           IF ( FIO-STAT-OKS ) AND ( TAB-MSC-STAT IN TAB NOT = 'N' )
               MOVE TAB-GLS-DESC IN TAB TO FRM-GLS-DATO
                                           IN JES-FLD( FRM-IFLD )
               GO TO FIN-GET-GLS-DATO.
      *AQUI BUSCA CON EL CODIGO DEL PROGRAMA
           MOVE SPACES                  TO WSS-COD-CTAB.
           MOVE 'BAT'                   TO WSS-COD-CBAT.
           MOVE BCH-COD-PROC IN JES-FLD TO WSS-COD-PBAT.
           MOVE FRM-IFLD                TO WSS-NUM-NUME.
           MOVE SCR-SISG     TO TAB-COD-SIST FIO-SIST.
           MOVE 'FRM'        TO TAB-COD-TTAB IN TAB.
           MOVE WSS-COD-CTAB TO TAB-COD-CTAB IN TAB.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM GNS-FIO-TAB.
           IF ( FIO-STAT-OKS ) AND ( TAB-MSC-STAT IN TAB NOT = 'N' )
               MOVE TAB-GLS-DESC IN TAB TO FRM-GLS-DATO
                                           IN JES-FLD( FRM-IFLD )
               GO TO FIN-GET-GLS-DATO.
      *AQUI BUSCA CON EL CODIGO DEL SISTEMA
           MOVE SCR-SISG TO TAB-COD-SIST FIO-SIST.
           MOVE 'FRM'    TO TAB-COD-TTAB IN TAB.
           MOVE SPACES    TO WSS-COD-CTAB.
           MOVE 'BAT'     TO WSS-COD-CBAT.
           MOVE SCR-SISG  TO WSS-COD-SIST.
           MOVE FRM-IFLD  TO WSS-NUM-CORR.
           MOVE WSS-COD-CTAB TO TAB-COD-CTAB IN TAB.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM GNS-FIO-TAB.
           IF ( FIO-STAT-OKS ) AND ( TAB-MSC-STAT IN TAB NOT = 'N' )
               MOVE TAB-GLS-DESC IN TAB TO FRM-GLS-DATO
                                           IN JES-FLD( FRM-IFLD )
               GO TO FIN-GET-GLS-DATO.
      *AQUI BUSCA CON BLANCO
           MOVE SCR-SISG TO TAB-COD-SIST FIO-SIST.
           MOVE 'FRM'    TO TAB-COD-TTAB IN TAB.
           MOVE SPACES    TO WSS-COD-CTAB.
           MOVE 'BAT'     TO WSS-COD-CBAT.
           MOVE SPACES    TO WSS-COD-SIST.
           MOVE FRM-IFLD  TO WSS-NUM-CORR.
           MOVE WSS-COD-CTAB TO TAB-COD-CTAB IN TAB.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM GNS-FIO-TAB.
           IF ( FIO-STAT-OKS ) AND ( TAB-MSC-STAT IN TAB NOT = 'N' )
               MOVE TAB-GLS-DESC IN TAB TO FRM-GLS-DATO
                                           IN JES-FLD( FRM-IFLD )
           ELSE
               MOVE SPACES TO FRM-GLS-DATO IN JES-FLD( FRM-IFLD )
               MOVE SPACES TO TAB-GLS-DATA IN TAB.
       FIN-GET-GLS-DATO.
           EXIT.

       PUT-CMN SECTION.
       INI-PUT-CMN.
           MOVE SCR-SISG    TO FIO-SIST.
           MOVE FIO-GET-NXT TO FIO-CMND.
           PERFORM GNS-FIO-BCH.
           IF NOT ( FIO-STAT-OKS AND
                    BCH-COD-PROC IN BCH = BCH-COD-PROC IN JES-FLD AND
                    BCH-COD-TREG = 'C' )
               GO TO FIN-PUT-CMN.

           IF BCH-GLS-CMND IN BCH NOT > SPACES
               GO TO INI-PUT-CMN.

           MOVE BCH-GLS-CMND TO EDT-STRN.
           PERFORM EDT-CARD.
           MOVE EDT-STRN TO QUE-ITEM.

           IF QUE-ITEM NOT > SPACES
               GO TO INI-PUT-CMN.

           IF BCH-IND-TCMN IN BCH = 'G'
               MOVE QUE-ITEM TO BIB-BIBL
               MOVE 'GNS'    TO BIB-SIST
               PERFORM GEN-BIB
               GO TO INI-PUT-CMN.

           IF BCH-IND-TCMN IN BCH = 'B'
               MOVE QUE-ITEM TO BIB-BIBL
               MOVE SCR-SISG TO BIB-SIST
               PERFORM GEN-BIB
               GO TO INI-PUT-CMN.

           MOVE QUE-PUT TO QUE-CMND.
           MOVE +80 TO QUE-LITM
           PERFORM GNS-PRO-QUE.

           IF BCH-IND-TCMN IN BCH = 'D' OR 'M'
              PERFORM PUT-DATA.
           GO TO INI-PUT-CMN.
       FIN-PUT-CMN.
           EXIT.

       CHK-STEP-ADC SECTION.
       INI-CHK-STEP-ADC.
           IF FRM-CIC-CLSE IN JES-FLD NOT > SPACES
               MOVE 'BATASRM' TO BIB-BIBL
               MOVE 'GNS'     TO BIB-SIST
               PERFORM GEN-BIB

               MOVE 'BATSTIM' TO BIB-BIBL
               MOVE 'GNS'     TO BIB-SIST
               PERFORM GEN-BIB.
       FIN-CHK-STEP-ADC.
           EXIT.

       PUT-DATA SECTION.
       INI-PUT-DATA.
           MOVE ZEROES TO WSS-VEC-ORDE.
           PERFORM VER-ORD VARYING WSS-I FROM 1 BY 1 UNTIL WSS-I > 20.
           PERFORM MOV-ORD VARYING WSS-J FROM 1 BY 1 UNTIL WSS-J > 20.
       FIN-PUT-DATA.
           EXIT.

       VER-ORD SECTION.
       INI-VER-ORD.
           IF WSS-ILEE(WSS-I) NOT = '0' AND WSS-ILEE(WSS-I) > SPACES
               PERFORM CON-NUM
               MOVE WSS-I TO WSS-ORDE(WSS-J).
       FIN-VER-ORD.
           EXIT.

       CON-NUM SECTION.
       INI-CON-NUM.
           IF WSS-ILEE(WSS-I) IS NUMERIC
               MOVE WSS-ILEE(WSS-I) TO WSS-J
               GO TO FIN-CON-NUM.
           IF WSS-ILEE(WSS-I) = 'A' MOVE 10 TO WSS-J
           ELSE
           IF WSS-ILEE(WSS-I) = 'B' MOVE 11 TO WSS-J
           ELSE
           IF WSS-ILEE(WSS-I) = 'C' MOVE 12 TO WSS-J
           ELSE
           IF WSS-ILEE(WSS-I) = 'D' MOVE 13 TO WSS-J
           ELSE
           IF WSS-ILEE(WSS-I) = 'E' MOVE 14 TO WSS-J
           ELSE
           IF WSS-ILEE(WSS-I) = 'F' MOVE 15 TO WSS-J
           ELSE
           IF WSS-ILEE(WSS-I) = 'G' MOVE 16 TO WSS-J
           ELSE
           IF WSS-ILEE(WSS-I) = 'H' MOVE 17 TO WSS-J
           ELSE
           IF WSS-ILEE(WSS-I) = 'I' MOVE 18 TO WSS-J
           ELSE
           IF WSS-ILEE(WSS-I) = 'J' MOVE 19 TO WSS-J
           ELSE
           IF WSS-ILEE(WSS-I) = 'K' MOVE 20 TO WSS-J.
       FIN-CON-NUM.
           EXIT.

       MOV-ORD SECTION.
       INI-MOV-ORD.
           IF WSS-ORDE(WSS-J) NOT = 0
               MOVE WSS-ORDE(WSS-J) TO WSS-I
               IF WSS-ILEE(WSS-I) NOT = '0' AND WSS-ILEE(WSS-I) > SPACES
                   MOVE FRM-DAT-DATO(WSS-I) TO QUE-ITEM

                   MOVE QUE-PUT TO QUE-CMND
                   MOVE +80 TO QUE-LITM
                   PERFORM GNS-PRO-QUE.
       FIN-MOV-ORD.
           EXIT.

       COPY GNSBGBIB.

       COPY GNSBVCOD.
       COPY GNSBVTAB.
       COPY GNSBBTAB.

       COPY GNSBEGLS.
       COPY GNSBGHOY.

       COPY TABBBOFI.
       COPY TABBVOFI.
       COPY TABBFOFI.

      **************************************************************

       COPY GNSBGEDT REPLACING {FRM} BY JES-FLD
                               {PRO} BY BCH-COD-PROC.

      **************************************************************
       COPY GNSBGQUE.

       LNK-JES SECTION.
       INI-LNK-JES.
           MOVE 'GNS'        TO FIO-SIST
           MOVE 'VSN'        TO TAB-COD-TTAB
           MOVE 'BATSUBJES'  TO TAB-COD-CTAB
           MOVE FIO-GET-KEY  TO FIO-CMND
           PERFORM GNS-FIO-TAB
           IF FIO-STAT-OKS AND TAB-MSC-STAT IN TAB = 'S'
               MOVE TAB-GLS-DCOR IN TAB TO WSS-NODO
               MOVE TAB-GLS-DATA IN TAB TO WSS-USER
               MOVE QUE-STAT-OKS TO QUE-STAT
               MOVE JES-STAT-OKS TO JES-STAT
               MOVE 1            TO QUE-NITM
               PERFORM GEN-SPOOL UNTIL QUE-STAT NOT = QUE-STAT-OKS
           ELSE
               EXEC CICS LINK
                         PROGRAM('M4SPOOLU')
                         COMMAREA(JES-CMMA)
                         LENGTH(JES-TCMA)
               END-EXEC.

      *     MOVE FRM-MSG TO FRM-CMND.
      *     MOVE 'EXEC CICS LINK PROGRAM(M4SPOOLU)....' TO FRM-MENS.
      *     PERFORM GNS-PRO-FRM.
      *     MOVE SPACES TO JES-STAT.

       FIN-LNK-JES.
           EXIT.

       GEN-SPOOL SECTION.
       INI-GEN-SPOOL.
           MOVE QUE-GET TO QUE-CMND.
           MOVE +80 TO QUE-LITM
           PERFORM GNS-PRO-QUE.
           IF QUE-STAT NOT = QUE-STAT-OKS
               IF QUE-NITM > 1
                   EXEC CICS SPOOLCLOSE
                             TOKEN (WSS-TOKEN)
                             DELETE
      **RMV
                             NOHANDLE
      **RMV
      *                       RESP    (WSS-RESP)
                   END-EXEC
               ELSE
                   MOVE 'X' TO JES-STAT
           ELSE
               IF QUE-NITM = 1
                   MOVE 1 TO WSS-FLAG
      *            EXEC CICS HANDLE CONDITION
      *                      ERROR(ERR-GEN-SPOOL)
      *            END-EXEC.
                   EXEC CICS SPOOLOPEN
                             OUTPUT
                             NODE   (WSS-NODO)
                             USERID (WSS-USER)
                             TOKEN  (WSS-TOKEN)
      **RMV
                             NOHANDLE
      **RMV
      *                       RESP    (WSS-RESP)
                   END-EXEC
                   EXEC CICS SPOOLWRITE
                             TOKEN   (WSS-TOKEN)
                             FROM    (QUE-ITEM)
                             FLENGTH (80)
      **RMV
                             NOHANDLE
      **RMV
      *                       RESP    (WSS-RESP)
                   END-EXEC
               ELSE
                   EXEC CICS SPOOLWRITE
                             TOKEN   (WSS-TOKEN)
                             FROM    (QUE-ITEM)
                             FLENGTH (80)
      **RMV
                             NOHANDLE
      **RMV
      *                       RESP    (WSS-RESP)
                   END-EXEC.
           GO TO FIN-GEN-SPOOL.
       ERR-GEN-SPOOL.
           IF WSS-FLAG = 0
               GOBACK.
           PERFORM GNS-HDL-SYS.
           PERFORM GNS-HDL-FRM.
           PERFORM GNS-HDL-VSM.
           PERFORM GNS-ERR-QUE.
       FIN-GEN-SPOOL.
           ADD 1 TO QUE-NITM.
       EXT-GEN-SPOOL.
           EXIT.
      *>>>>
