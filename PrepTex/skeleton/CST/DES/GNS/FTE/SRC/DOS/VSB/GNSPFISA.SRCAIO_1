       IDENTIFICATION DIVISION.
      *=======================
       PROGRAM-ID.      {sis}PF{reg}.
       AUTHOR.          CONSIST.
       DATE-WRITTEN.    {fec}.

      * Subrutina de I/O Batch ACC=SEQ para indexado VSAM {sis}{reg} (Reubicable).

       ENVIRONMENT DIVISION.
      *====================
       INPUT-OUTPUT SECTION.
       FILE-CONTROL.
*% IF PGM_DOS OR PGM_MVS
      *DOS SELECT  {sis}{reg} ASSIGN TO SYS010-{sis}{reg}
      *MVS SELECT  {sis}{reg} ASSIGN TO        {sis}{reg}
*% END
*% IF PGM_DOS OR PGM_VSE
           SELECT  {sis}{reg} ASSIGN TO SYS010-{sis}{reg}
*% END
*% IF PGM_MVS
           SELECT  {sis}{reg} ASSIGN TO        {sis}{reg}
*% END
                ORGANIZATION         IS INDEXED
                ACCESS               IS SEQUENTIAL
                RECORD KEY           IS {ky0} IN {sis}{reg}
*% FOR I = 1 TO {nka}
                ALTERNATE RECORD KEY IS {ky{i}} IN {sis}{reg}
*% IF {bdu{i}}
                WITH DUPLICATES
*% END
*% NEXT I
                STATUS               IS FIO-STAT.

       DATA DIVISION.
      *=============
       FILE SECTION.
       FD  {sis}{reg}
           LABEL RECORDS STANDARD
           RECORD CONTAINS {rsz}
           .
       COPY {sis}BR{reg}.

       WORKING-STORAGE SECTION.
      *-----------------------
       01  WSS-RKEY                             PIC X({kl0}).
       COPY GNSWCFIO.

       LINKAGE SECTION.
      *---------------
       COPY GNSWVFIO.
       01  LNK-REGI                             PIC X({rsz}).

       PROCEDURE DIVISION USING FIO-VARI LNK-REGI.
      *==========================================

       COPY GNSBEFIO
           REPLACING
                FIO-VOID BY =='{sis}{reg}'==
           .
       MAIN SECTION.
       INI-MAIN.
           GO TO ERR-MAIN        INI-GET-NXT     INI-GET-FST
                 INI-GET-NLS     INI-GET-GRT     INI-PUT-FIL
                 INI-MOD-FIL     INI-DEL-FIL     ERR-MAIN
                 INI-INP-FIL     INI-OUT-FIL     INI-UPD-FIL
                 INI-CLO-FIL     INI-FND-EQL     INI-FND-FST
                 INI-FND-NLS     INI-FND-GRT     ERR-MAIN
                 ERR-MAIN        ERR-MAIN        NUL-FUNC
                 ERR-MAIN        ERR-MAIN        ERR-MAIN
                 ERR-MAIN

                 ERR-MAIN        INI-GET-FST     INI-GET-NLS
                 INI-GET-GRT     INI-FND-EQL     INI-FND-FST
                 INI-FND-NLS     INI-FND-GRT

                 INI-GET-NXT     ERR-MAIN        ERR-MAIN
                 NUL-FUNC        ERR-MAIN        ERR-MAIN
                 ERR-MAIN        ERR-MAIN        NUL-FUNC

           DEPENDING ON FIO-CMND.

       ERR-MAIN.
           DISPLAY '? CODIGO '
                FIO-CMND
                .
           DISPLAY '  INVALIDO EN {sis}PF{reg} PARA ARCHIVO '
                '{sis}{reg}'
                ' : ABORTO'
                .
           STOP RUN.
       NUL-FUNC.
           MOVE '00'   TO FIO-STAT.
           MOVE SPACES TO FIO-AKEY.
       FIN-MAIN.
           EXIT PROGRAM.

       GET-NXT SECTION.
       INI-GET-NXT.
      *    READ {sis}{reg} NEXT INTO LNK-REGI.
           READ {sis}{reg} INTO LNK-REGI.
           MOVE {ky0} IN {reg} TO WSS-RKEY.
       FIN-GET-NXT.
           EXIT PROGRAM.

       GET-FST SECTION.
       INI-GET-FST.
           PERFORM INI-FND-FST.
           IF FIO-STAT-OKS
               GO TO INI-GET-NXT.
       FIN-GET-FST.
           EXIT PROGRAM.

       GET-NLS SECTION.
       INI-GET-NLS.
           PERFORM INI-FND-NLS.
           IF FIO-STAT-OKS
               GO TO INI-GET-NXT.
       FIN-GET-NLS.
           EXIT PROGRAM.

       GET-GRT SECTION.
       INI-GET-GRT.
           PERFORM INI-FND-GRT.
           IF FIO-STAT-OKS
               GO TO INI-GET-NXT.
       FIN-GET-GRT.
           EXIT PROGRAM.

       PUT-FIL SECTION.
       INI-PUT-FIL.
           WRITE {reg} FROM LNK-REGI.
       FIN-PUT-FIL.
           EXIT PROGRAM.

       MOD-FIL SECTION.
       INI-MOD-FIL.
           REWRITE {reg} FROM LNK-REGI.
       FIN-MOD-FIL.
           EXIT PROGRAM.

       DEL-FIL SECTION.
       INI-DEL-FIL.
           MOVE LNK-REGI TO {reg}.
           DELETE {sis}{reg}.
       FIN-DEL-FIL.
           EXIT PROGRAM.

       INP-FIL SECTION.
       INI-INP-FIL.
           OPEN INPUT {sis}{reg}.
       FIN-INP-FIL.
           EXIT PROGRAM.

       OUT-FIL SECTION.
       INI-OUT-FIL.
           OPEN OUTPUT {sis}{reg}.
       FIN-OUT-FIL.
           EXIT PROGRAM.

       UPD-FIL SECTION.
       INI-UPD-FIL.
           OPEN I-O {sis}{reg}.
       FIN-UPD-FIL.
           EXIT PROGRAM.

       CLO-FIL SECTION.
       INI-CLO-FIL.
           CLOSE {sis}{reg}.
       FIN-CLO-FIL.
           EXIT PROGRAM.

       FND-EQL SECTION.
       INI-FND-EQL.
           MOVE LNK-REGI TO {reg}.
           IF FIO-AKEY = '{ky0}' OR
              FIO-AKEY NOT > SPACES
               START {sis}{reg} KEY EQUAL {ky0} IN {sis}{reg}
               MOVE SPACES TO FIO-AKEY
           ELSE
*% FOR I = 1 TO {nka}
           IF FIO-AKEY = '{ky{i}}'
               START {sis}{reg} KEY EQUAL {ky{i}} IN {sis}{reg}
               MOVE SPACES TO FIO-AKEY
           ELSE
*% NEXT I
               PERFORM ERR-ALT.
       FIN-FND-EQL.
           EXIT PROGRAM.

       FND-FST SECTION.
       INI-FND-FST.
           IF FIO-AKEY = '{ky0}' OR
              FIO-AKEY NOT > SPACES
               MOVE LOW-VALUES TO {ky0} IN {sis}{reg}
               START {sis}{reg} KEY NOT LESS {ky0} IN {sis}{reg}
               MOVE SPACES TO FIO-AKEY
           ELSE
*% FOR I = 1 TO {nka}
           IF FIO-AKEY = '{ky{i}}'
               MOVE LOW-VALUES TO {ky{i}} IN {reg}
               START {sis}{reg} KEY NOT LESS {ky{i}} IN {sis}{reg}
               MOVE SPACES TO FIO-AKEY
           ELSE
*% NEXT I
               PERFORM ERR-ALT.
       FIN-FND-FST.
           EXIT PROGRAM.

       FND-NLS SECTION.
       INI-FND-NLS.
           MOVE LNK-REGI TO {reg}.
           IF FIO-AKEY = '{ky0}' OR
              FIO-AKEY NOT > SPACES
               START {sis}{reg} KEY NOT LESS {ky0} IN {sis}{reg}
               MOVE SPACES TO FIO-AKEY
           ELSE
*% FOR I = 1 TO {nka}
           IF FIO-AKEY = '{ky{i}}'
               START {sis}{reg} KEY NOT LESS {ky{i}} IN {sis}{reg}
               MOVE SPACES TO FIO-AKEY
           ELSE
*% NEXT I
               PERFORM ERR-ALT.
       FIN-FND-NLS.
           EXIT PROGRAM.

       FND-GRT SECTION.
       INI-FND-GRT.
           MOVE LNK-REGI TO {reg}.
           IF FIO-AKEY = '{ky0}' OR
              FIO-AKEY NOT > SPACES
               START {sis}{reg} KEY GREATER {ky0} IN {sis}{reg}
               MOVE SPACES TO FIO-AKEY
           ELSE
*% FOR I = 1 TO {nka}
           IF FIO-AKEY = '{ky{i}}'
               START {sis}{reg} KEY GREATER {ky{i}} IN {sis}{reg}
               MOVE SPACES TO FIO-AKEY
           ELSE
*% NEXT I
               PERFORM ERR-ALT.
       FIN-FND-GRT.
           EXIT PROGRAM.

       ERR-ALT SECTION.
       INI-ERR-ALT.
           DISPLAY '? LLAVE'
                FIO-AKEY
                .
           DISPLAY '  INVALIDO EN {sis}PF{reg} PARA ARCHIVO '
                '{sis}{reg}'
                ' : ABORTO'
                .
           STOP RUN.
       FIN-ERR-ALT.
           EXIT PROGRAM.
