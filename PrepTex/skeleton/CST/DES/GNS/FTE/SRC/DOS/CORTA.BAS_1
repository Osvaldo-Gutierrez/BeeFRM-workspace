100
	DECLARE INTEGER &
			ACCION,		SZTOKEN,	TOKEN	,&
			P_P,		P_Q,		ASCII_Q	,&
			CRTS_LEID,	INX_MOD,	INX_ENC	,&
			C_FILE_SCN,	C_FILE_ENT,	INDI_LINE, &
			INDI_COLU,	INDI_CORR,	TEXTFIELD,&
			TOT_ORDEN,	ENTEROS	,&
			SW_POS, 	SW_LAR, 	SW_NUM	,&
			SW_ALF,		SW_DEC,&
			TOT_FLD,&
			TOT_MOD,&
			MATR_FLD(3500,120)

	DECLARE INTEGER	CONSTANT &
			MAX_MOD = 3500,		MAX_FLD = 120
			
	DECLARE STRING	AUX_FNC_CPT_ALF,		AUX_CMN_CPT_ALF,		AUX_CNF_CPT_ALF, &
			NAME_FLD,	NAME_SCN,	name_mod
	DECLARE	STRING &
			VECT_FLD(120), &
			VECT_MOD(3500), &
			BIP,O_L,	FILE_SCN,	FILE_ENT, &
			RESPALDO_PROGRAMA, C_Q,		ANT_VALTOKEN,&
			VALTOKEN,	VAL_STR_PTOKEN,	STRTOKEN,&
			BUFOUT,		TITULO,		POSICION,&
			CAMPO,		LARGO,		TIPO	,&
			FILA,		COLUMNA,	TEXTO1	,&
			TEXTO2,		PRIN_DATO,	PRIN_LINE,&
			PRIN_COLU,	PRIN_CORR,	&
			AUXI_FILE,	V_ORDEN(40),	DECIM,	&
			CURRENT

	DECLARE INTEGER	CONSTANT &
			IDNTOK	= 1,	KEYTOK	= 2		,&
			NUMTOK	= 3,	EOLTOK	= 4		,&
			STRTOK	= 5,	CHRTOK	= 6		,&
			ETXTOK	= 8,	TABB	= 9		,&
			NEW_LINE= 10,	CAR_RET	= 13		,&
			NO	= 0,	ZI	= 1

 !==========================================================================

      DEF STRING FNC_SYS_LIB_GET_SYMBOL(STRING GET_SYMBOL)
          CALL LIB$GET_SYMBOL(GET_SYMBOL,AUX_FNC_CPT_ALF)
          FNC_SYS_LIB_GET_SYMBOL = AUX_FNC_CPT_ALF
      END DEF

   DEF STRING FNC_SYSMID(STRING CADENA,INTEGER DESDE,INTEGER CUANTOS)
	FNC_SYSMID = MID$(CADENA,DESDE,CUANTOS)
   END DEF


 !==========================================================================

 ! ------------------------------------------------------------------
 !               MODULO PRINCIPAL
 ! __________________________________________________________________


	BIP = CHR$(07)
	P_P,P_Q = 1
	TOT_ORDEN = 0

	print " Inicio " ; DATE$(0%) ; " - " ; TIME$(0%)

	O_L = CHR$(10) + CHR$(13)
	C_FILE_SCN = 1
	C_FILE_ENT = 2

	PRINT "CORTA V 01.01.03"

	FOR II% = 1 TO MAX_MOD
	FOR JJ% = 1 TO MAX_FLD
		MATR_FLD( II%, JJ% ) = 0
	NEXT JJ%
	NEXT II%

	PRINT "Inicio proceso CORTA "
 
 !!!	SISTAB$ = FNC_SYS_LIB_GET_SYMBOL("SIS$TAB")

	NAME_SCN = FNC_SYS_LIB_GET_SYMBOL("FIL$SCAN")
	PRINT "Nombre Archivo con lista de campos " ; NAME_SCN

 	SISTAB$ = LEFT$(NAME_SCN ,3)

	FILE_SCN = FNC_SYS_LIB_GET_SYMBOL("PTH$SCAN")
	PRINT "Path   Archivo con lista de campos " ; FILE_SCN

	FILE_ENT = NAME_SCN + ".ENT"
	PRINT "Archivo con lista de MODULOS Y campos .ENT " ; FILE_ENT

	ON ERROR GO TO LABE_ERRO_ENT
	OPEN FILE_ENT FOR OUTPUT AS FILE #C_FILE_ENT		,	&
	ORGANIZATION SEQUENTIAL VARIABLE , RECORDSIZE 255, RECORDTYPE ANY

	GO TO CONT_ENT

 LABE_ERRO_ENT:
	CLOSE #C_FILE_ENT
	IF ERR <> 11 THEN
		PRINT "ERROR(";err;") ";ert$(err);" en linea ";erl;", MODULO ";ern$
	END IF
	RESUME 805

805

 CONT_ENT:

		ON ERROR GO TO LABE_ERRO_SCN
		OPEN FILE_SCN FOR INPUT AS FILE #C_FILE_SCN ,	&
			ORGANIZATION SEQUENTIAL , RECORDTYPE ANY

		print " Abrio archivo scan " ; FILE_SCN 
		TOT_SCN = 0

		HDR$ = "      *    " + DATE$(0%) + " - " + TIME$(0%)
	        PRINT #C_FILE_ENT, HDR$

		HDR$ = "      *    " + FILE_SCN
	        PRINT #C_FILE_ENT, HDR$

		WSS_USN$ = FNC_SYS_LIB_GET_SYMBOL("GNS$USN")
		HDR$ = "      *     USUARIO = " + WSS_USN$
	        PRINT #C_FILE_ENT, HDR$

		HDR$ = "      *    "
	        PRINT #C_FILE_ENT, HDR$

		HDR$ = "      *    " + FILE_ENT 
	        PRINT #C_FILE_ENT, HDR$

		HDR$ = "      *    "
	        PRINT #C_FILE_ENT, HDR$

		HDR$ = "      *    SIS = " + SISTAB$
	        PRINT #C_FILE_ENT, HDR$

                HDR$ = "      *    OPC = C"
	        PRINT #C_FILE_ENT, HDR$

                HDR$ = "      *    SI OPC = C ==> CARGA DE PARAMETROS"
	        PRINT #C_FILE_ENT, HDR$

                HDR$ = "      *    SI OPC = D ==> DESCARGA DE PARAMETROS"
	        PRINT #C_FILE_ENT, HDR$

 CIC_SCN:
		ON ERROR GO TO LABE_ERRO_SCN
		GET #C_FILE_SCN
		CRTS_LEID = RECOUNT
		MOVE FROM #C_FILE_SCN, I_SCN$ = CRTS_LEID
		IF left$(I_SCN$,1) = "*" then
	                HDR$ = "      *" + right$(I_SCN$,2)
		        PRINT #C_FILE_ENT, HDR$
			go to cic_scn
		end if
		IF left$(I_SCN$,1) = "!" then
			go to cic_scn
		end if

 CIC_SCN_1:
		IF LEN(I_SCN$) < 240 THEN
			I_SCN$ = I_SCN$ + " "
		END IF

		HDR$ = "REGTAB" + SISTAB$
	        PRINT #C_FILE_ENT, HDR$

		ENTR1$ = FNC_SYSMID(I_SCN$ ,  1 , 60 )
	        PRINT #C_FILE_ENT, ENTR1$

		ENTR2$ = FNC_SYSMID(I_SCN$ , 61 , 60 )
	        PRINT #C_FILE_ENT, ENTR2$

		ENTR3$ = FNC_SYSMID(I_SCN$ , 121 , 60 )
	        PRINT #C_FILE_ENT, ENTR3$

		ENTR4$ = FNC_SYSMID(I_SCN$ , 181 , 14 )
	        PRINT #C_FILE_ENT, ENTR4$

	GO TO CIC_SCN

 LABE_ERRO_SCN:
	fin$ = "FINPI1"
	PRINT #C_FILE_ENT, FIN$

	CLOSE #C_FILE_SCN
	IF ERR = 11 THEN
		print " Cerrando archivo scan con " ; TOT_SCN ; " Lineas leidas "
	else
		PRINT "ERROR(";err;") ";ert$(err);" en linea ";erl;", MODULO ";ern$
	END IF
	RESUME 2220

2220


	PRINT " FINALIZANDO PROGRAMA"
	print " fin    " ; DATE$(0%) ; " - " ; TIME$(0%)
 END
