       IDENTIFICATION DIVISION.
      *========================
       PROGRAM-ID. GNSVPMNU.
       AUTHOR. GUZMAN Y CIA.
       DATE-WRITTEN. 24-APR-1989 21:00:05.

      * PROCESA MENUS Y COMANDOS.

       ENVIRONMENT DIVISION.
      *=====================
       DATA DIVISION.
      *==============

       WORKING-STORAGE SECTION.
      *------------------------
       COPY GNSBRMNU.
       COPY GNSBRRPF.
       COPY GNSWGSCR.
       COPY GNSWGCMN.
       COPY GNSWVFIO.
       COPY GNSWCFIO.
       COPY GNSWGFRM.
       COPY GNSWITRL.
       COPY GNSWIVRS.
       COPY GNSBRMSG.
       COPY GNSBRTAB.
      *
       COPY GNSWGRQA.
       COPY GNSWGUIB.
       COPY GNSWGELS.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-MSG-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-TAB-REQA==.
      *
       01  WSS-VARI.
           03 WSS-CCOD                   VALUE SPACES PIC X(05).
              88 WSS-CCOD-APCT           VALUE 'APCT'.
              88 WSS-CCOD-ABM0           VALUE 'ABM0'.
           03 WSS-DFLD.
              05 WSS-NTRN                             PIC X(04).
              05 WSS-SIST.
                 07 WSS-CSIS OCCURS 3                 PIC X(01).
              05 WSS-FILL                             PIC X(01).
              05 WSS-SISG                             PIC X(03).
              05 WSS-DISP                             PIC X(09).
           03 WSS-FUNC.
              05 WSS-FCHR OCCURS 11                   PIC X(01).
           03 WSS-IMEN.
              05 WSS-CMEN                             PIC X(03).
              05 WSS-ORDI                             PIC X(03).
           03 WSS-AFUN.
              05 WSS-ACHR OCCURS 11                   PIC X(01).
           03 WSS-OPCI.
              05 WSS-COPC OCCURS 3                    PIC X(01).
           03 WSS-CMND.
              05 WSS-CCMD OCCURS 3                    PIC X(01).
           03 WSS-MAUT.
              05 WSS-FILA OCCURS 12.
                 07 WSS-COLU OCCURS 09.
                    09 WSS-AUTO                  PIC 9(02).
           03 WSS-MAUT-RED REDEFINES WSS-MAUT.
              05 WSS-ITM1                        PIC X(18).
              05 WSS-ITM2                        PIC X(18).
              05 WSS-ITM3                        PIC X(18).
              05 WSS-ITM4                        PIC X(18).
              05 WSS-ITM5                        PIC X(18).
              05 WSS-ITM6                        PIC X(18).
              05 WSS-ITM7                        PIC X(18).
              05 WSS-ITM8                        PIC X(18).
              05 WSS-ITM9                        PIC X(18).
              05 WSS-ITMA                        PIC X(18).
              05 WSS-ITMB                        PIC X(18).
              05 WSS-ITMC                        PIC X(18).
           03 WSS-STDO                   VALUE 1 PIC 9(02).
           03 WSS-ISIS                   VALUE 0 PIC 9(02).
           03 WSS-IOPC                   VALUE 0 PIC 9(02).
           03 WSS-ICMD                   VALUE 0 PIC 9(02).
           03 WSS-IMAX                   VALUE 0 PIC 9(02).
           03 WSS-IVAL                   VALUE 9 PIC 9(02).
              88 FUNCION-INVALIDA        VALUE 0.
              88 FUNCION-VALIDA          VALUE 1.
           03 WSS-SIND.
              05 WSS-I                           PIC 9(02).
              05 WSS-J                           PIC 9(02).
              05 WSS-K                           PIC 9(02).
              05 WSS-L                           PIC 9(02).
              05 WSS-M                           PIC 9(02).
           03 WSS-AUXI                           PIC X(03).
           03 UYP-PRTA.
              05 UYP-PROG                        PIC X(08).
              05 FILLER                VALUE '/' PIC X(01).
              05 UYP-CMND                        PIC X(03).
           03 WSS-MENS.
              05 WSS-MEN1                        PIC X(40).
              05 WSS-MEN2                        PIC X(79).
           03 WSS-COD-MENS.
              05 WSS-COD-TMSG.
                 07 WSS-COD-TMN1                 PIC X(03).
                 07 WSS-COD-TMN2                 PIC X(03).
                 07 WSS-COD-TMN3                 PIC X(01).
              05 WSS-COD-CMSG                    PIC X(05).
           03 WSS-ICMN                           PIC X(01).
              88 WSS-DESDE-CMN VALUE 'K'.
      *************************************************************
           03 WSS-COD-CACC                       PIC X(11).
           03 WSS-IND-CMND             VALUE 0   PIC 9(01).
              88 WSS-EXISTE-COMANDO    VALUE 1.
      *
           03 WSS-AUX-PROG                       PIC X(08).
           03 WSS-AUX-SIST                       PIC X(03).
           03 WSS-AUX-CMNP                       PIC X(08).
           03 WSS-AUX-PRMC                       PIC X(25).
           03 WSS-AUX-CMND                       PIC X(03).
           03 WSS-AUX-CRPF.
              05 WSS-TABL OCCURS 10.
                 07 WSS-COD-CCMN                 PIC X(03).
                 07 WSS-COD-CCPP                 PIC X(03).
                 07 WSS-IND-STPP                 PIC X(01).
              05 WSS-GLS-UARC                    PIC X(12) OCCURS 10.
              05 WSS-GLS-PRMT                    PIC X(25) OCCURS 10.
              05 WSS-GLS-CONF                    PIC X(25) OCCURS 10.
           03 WSS-KNMO.
              05 WSS-KNMO-SIST                   PIC X(03).
              05 WSS-KNMO-SISG                   PIC X(03).
              05 WSS-KNMO-NEMO                   PIC X(12).
              05 WSS-KNMO-CMND                   PIC X(03).
              05 WSS-KNMO-RFBY                   PIC X(01).
      *PARA VRS
      *       Contador del Numero de opciones.
           03 WSS-NOPC                           PIC 9(03).
           03 WSS-OPOC.
              05 WSS-OPRM                        PIC X(04).
              05 FILLER                          PIC X(01).
              05 WSS-OCOD                        PIC X(01).
              05 WSS-OMTM                        PIC X(01).
           03 WSS-PVTV.
              05 WSS-PGVR                        PIC X(08).
              05 FILLER                          PIC X(01).
              05 WSS-TRVR                        PIC X(04).
      * Variables que vienen de GNSPPOPC
       01  WSS-VOPC.
           03 WSS-STAT              VALUE 0        PIC 9(01).
              88 WSS-STAT-OKS       VALUE 0.
              88 WSS-STAT-WRN       VALUE 1.
              88 WSS-STAT-MAL       VALUE 2.
           03 WSS-SIND.
              05 I                                 PIC 9(02).
              05 J                                 PIC 9(02).
              05 K                  VALUE 0        PIC 9(02).
              05 L                  VALUE 0        PIC 9(02).
              05 IMIN               VALUE 0        PIC 9(02).
              05 IMAX               VALUE 0        PIC 9(02).
           03 WSS-RMNU                             PIC X(490).
           03 WSS-NSIS                             PIC X(003).
           03 WSS-MENU                             PIC X(003).
           03 WSS-NEMO                             PIC X(012).
           03 WSS-IFRM                   VALUE '0' PIC X(01).
      *Variables para GNSSCRHDR
       01  HEA-VARI.
           03 HEA-SIMP              VALUE SPACES.
              05 HEA-GLS-SIMP       OCCURS 31      PIC X(01).
           03 HEA-DOBL              VALUE SPACES.
              05 HEA-GLS-DOBL       OCCURS 61      PIC X(01).
           03 HEA-FEC-DMSA.
              05 HEA-NUM-DMSA                      PIC 9(02).
              05 HEA-GLS-SLA1                      PIC X(01).
              05 HEA-NUM-MMSA                      PIC 9(02).
              05 HEA-GLS-SLA2                      PIC X(01).
              05 HEA-NUM-SMSA                      PIC 9(02).
              05 HEA-NUM-AMSA                      PIC 9(02).
       COPY GNSWGHOY.
       COPY GNSWGSYS.
       COPY GNSWIHDR.
      * Variables para Manejo de Usuarios y privilegios.
      * COPY USPC113.

       01  AUX-VARI.
           03 AUX-UARC.
              05 AUX-RPRG                        PIC X(08).
              05 AUX-RTRN                        PIC X(04).
           03 AUX-PRGM.
              05 AUX-PROG                        PIC X(08).
              05 AUX-NTRN                        PIC X(04).

       01  IFD.
           03  FILLER                            PIC X(01).
           03  IFD-COD-CIFD                      PIC X(12).
           03  IFD-GLS-DATA                      PIC X(210).
           03  FILLER                            PIC X(18).

       01  PGM-VARI.
           03 PGM-STRN                                  PIC X(100).
           03 PGM-STR0 REDEFINES PGM-STRN.
              05 PGM-DESC                               PIC X(40).
              05 PGM-DATA                               PIC X(60).
           03 PGM-DDCR REDEFINES PGM-STRN.
              05 PGM-PBXE                               PIC X(9).
              05 FILLER                                 PIC X(1).
              05 PGM-FVMU                               PIC X(8).
              05 FILLER                                 PIC X(1).
              05 PGM-ASDT                               PIC X(4).
              05 FILLER                                 PIC X(1).
              05 PGM-NTRI                               PIC X(1).
              05 FILLER                                 PIC X(1).
              05 PGM-TFKY                               PIC X(1).
              05 FILLER                                 PIC X(1).
              05 PGM-FKY5                               PIC X(1).
              05 FILLER                                 PIC X(1).
              05 PGM-FKY6                               PIC X(1).
              05 FILLER                                 PIC X(1).
              05 PGM-EPFK                               PIC X(1).
              05 FILLER                                 PIC X(1).
              05 PGM-RPFK                               PIC X(1).
              05 FILLER                                 PIC X(1).
              05 PGM-SOFL                               PIC X(2).
              05 FILLER                                 PIC X(1).
              05 PGM-HMSG                               PIC X(4).
              05 FILLER                                 PIC X(1).
              05 PGM-LFLG                               PIC X(1).
              05 FILLER                                 PIC X(1).
              05 PGM-FKY9                               PIC X(1).
              05 FILLER                                 PIC X(1).
              05 PGM-FKY0                               PIC X(1).
              05 FILLER                                 PIC X(1).
              05 PGM-TOLN                               PIC X(2).
              05 FILLER                                 PIC X(1).
              05 PGM-MRLN                               PIC X(3).
              05 FILLER                                 PIC X(1).
              05 PGM-MTLN                               PIC X(3).
              05 FILLER                                 PIC X(1).
              05 PGM-DFEF                               PIC X(1).
              05 FILLER                                 PIC X(1).
              05 PGM-RFBY                               PIC X(1).

       COPY GNSWGQUE.

       LINKAGE SECTION.
      *----------------
       01  DFHCOMMAREA.
           02 FILLER                             PIC X(1110).
       COPY GNSLGFIO.

       PROCEDURE DIVISION.
      *===================


       MAIN SECTION.
       INI-MAIN.
      * Rutina que detecta transaccion invocada directamente
      * COPY USPC143.

           PERFORM GNS-PRO-KEY.

           PERFORM CIC-ERR THRU FIN-CIC-ERR.
           EXEC CICS HANDLE AID
                     CLEAR (CMN-ERR-CLR)
                     PA1   (CMN-ERR-PA2)
                     PA2   (CMN-ERR-PA2)
           END-EXEC.
      *     EXEC CICS HANDLE ABEND
      *               LABEL (CMN-ERR-ABN)
      *     END-EXEC.
      *
           MOVE 'GNSVPMNU' TO IFD-COD-CIFD IN IFD.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM GNS-FIO-IFD.
           IF NOT FIO-STAT-OKS
               MOVE 'DEFAULT' TO IFD-COD-CIFD IN IFD
               MOVE FIO-GET-KEY TO FIO-CMND
               PERFORM GNS-FIO-IFD
               IF NOT FIO-STAT-OKS
                   PERFORM BUS-FSIS
               ELSE
                   MOVE IFD-GLS-DATA IN IFD TO IFD-FSIS
           ELSE
               MOVE IFD-GLS-DATA IN IFD TO IFD-FSIS.

           IF EIBCALEN = 0
               MOVE 'K'      TO SCR-ICMN
               MOVE SCR-ICMN TO WSS-ICMN
               PERFORM INI-SIST
      *        PERFORM BUS-MGKY
               PERFORM PRO-RMNU
           ELSE
           IF EIBCALEN = 21 OR 22
               MOVE DFHCOMMAREA TO WSS-KNMO
               MOVE 'K'      TO SCR-ICMN
               MOVE SCR-ICMN TO WSS-ICMN
               MOVE WSS-KNMO-RFBY TO SCR-RFBY
               PERFORM INI-FUNC
      *        PERFORM PRO-RMNU
               PERFORM PRO-FIN
           ELSE
               MOVE DFHCOMMAREA TO SCR-VARI
      *ESTE MOVE FALTA PARA LOS OTROS PROGRAMAS PPMNU
               MOVE IFD-GLS-DATA IN IFD TO IFD-FSIS
               MOVE SCR-ICMN TO WSS-ICMN
               IF ( NOT WSS-DESDE-CMN ) AND
                  ( SCR-TFUN = 'HMX' OR 'XMX' OR 'RET' )
      *           AND EXISTIA COMANDO ORIGINAL EN EL MNU......
                   MOVE SPACES       TO WSS-FUNC
                   MOVE FRM-FFLD-PF3 TO FRM-FFLD
                   GO TO RET-LEE-CMND.

           IF SCR-INST = SCR-INST-HCM
               MOVE SCR-INST-GFL TO SCR-INST
               IF ( NOT EIBCALEN = 0 ) AND SCR-GLS-UARC(SCR-I) > SPACES
                   MOVE SCR-GLS-UARC( SCR-I ) TO AUX-UARC

                   MOVE SCR-PROG TO AUX-PROG
                   MOVE SCR-NTRN TO AUX-NTRN
                   MOVE AUX-PRGM TO SCR-GLS-UARC( SCR-I )

                   MOVE AUX-RPRG TO SCR-PROG
                   MOVE AUX-RTRN TO SCR-NTRN

                   PERFORM HBL-CMN
               ELSE
                   PERFORM HBL-CMN
           ELSE
           IF SCR-INST = SCR-INST-GFL
               PERFORM LEE-CACC
               PERFORM CAL-PROG.
           GOBACK.
       FIN-MAIN.
           EXIT.

       INI-SIST SECTION.
       INI-INI-SIST.
           MOVE +20     TO FRM-LFLD.
           MOVE FRM-RCV TO FRM-CMND.
           PERFORM GNS-PRO-FRM.
           MOVE FRM-DFLD TO WSS-DFLD.
           MOVE WSS-SIST TO SCR-SIST.
           MOVE WSS-SISG TO SCR-SISG.
           MOVE 'SIS' TO MNU-COD-NEMO.
           MOVE FIO-GET-KEY TO FIO-CMND.
           MOVE SCR-SIST    TO FIO-SIST.
           PERFORM GNS-VIO-MNU.
           IF NOT FIO-STAT-OKS
               MOVE 'GNS' TO MSG-COD-SIST
               MOVE 'CODNEMOSISNX' TO MSG-COD-MENS
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS
               MOVE FRM-MSG      TO FRM-CMND
               PERFORM GNS-PRO-FRM
               GOBACK
           ELSE
               MOVE SCR-SIST TO MNU-COD-SIST.
       FIN-INI-SIST.
           EXIT.

       INI-FUNC SECTION.
       INI-INI-FUNC.
           MOVE WSS-KNMO-SIST TO SCR-SIST.
           MOVE WSS-KNMO-SISG TO SCR-SISG.

           EXEC CICS HANDLE CONDITION
                     NOTOPEN (INI-FUNC-NOP)
                     DSIDERR (INI-FUNC-DSI)
           END-EXEC.
           MOVE SCR-SIST      TO FIO-SIST.
           MOVE WSS-KNMO-NEMO TO MNU-COD-NEMO.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM GNS-VIO-MNU.
           IF NOT FIO-STAT-OKS
               MOVE 'CODNEMOSISNX' TO MSG-COD-MENS
               GO TO ERR-INI-FUNC.

           IF MNU-COD-SIST NOT > SPACES
               MOVE SCR-SIST TO MNU-COD-SIST.
           IF WSS-KNMO-CMND > SPACES
               MOVE WSS-KNMO-CMND TO MNU-COD-CMND.
           GO TO FIN-INI-FUNC.
       INI-FUNC-NOP.
           MOVE 'SIS    NOPEN' TO MSG-COD-MENS.
           GO TO ERR-INI-FUNC.
       INI-FUNC-DSI.
           MOVE 'SIS    NEXST' TO MSG-COD-MENS.
       ERR-INI-FUNC.
           MOVE 'GNS' TO MSG-COD-SIST.
           PERFORM GET-MSG.
           MOVE MSG-GLS-DESC TO FRM-MENS.

           PERFORM FST-CMN.
           PERFORM CMN-MSSG.
           PERFORM CMN-PUTA.

      *EN VEZ DEL GOBACK COPIAR MODULO QUE SEPA VOLVER
           GOBACK.
       FIN-INI-FUNC.
           EXIT.

       CHK-UYP-CMND SECTION.
       INI-CHK-UYP-CMND.
      * llamada a la rutina de verificacion de permisos
           MOVE SCR-PROG TO UYP-PROG.
           MOVE '*'      TO UYP-CMND.
      *    MOVE UYP-PRTA TO USP-PTA-STR.
      * COPY USPC103.
      *     IF USP-PERMISO = 'P'
      *         GO TO FIN-CHK-UYP-CMND.
           MOVE 0 TO WSS-I.
       LUP-CHK-UYP-CMND.
           ADD 1 TO WSS-I.
           IF WSS-I > 10
               GO TO FIN-CHK-UYP-CMND.
           IF SCR-COD-CCMN( WSS-I ) NOT > SPACES
               GO TO LUP-CHK-UYP-CMND.
      * llamada a la rutina de verificacion de permisos
           MOVE SCR-COD-CCMN( WSS-I ) TO UYP-CMND.
      *    MOVE UYP-PRTA TO USP-PTA-STR.
      * COPY USPC103.
      *     IF USP-PERMISO NOT = 'P'
      *         MOVE SPACES TO SCR-TABL( WSS-I )
      *         MOVE SPACES TO SCR-GLS-UARC( WSS-I )
      *         MOVE SPACES TO SCR-GLS-PRMT( WSS-I )
      *         MOVE SPACES TO SCR-GLS-CONF( WSS-I ).
      *     GO TO LUP-CHK-UYP-CMND.
       FIN-CHK-UYP-CMND.
           EXIT.

       LEE-CACC SECTION.
       INI-LEE-CACC.
           PERFORM LEE-CMND.
           PERFORM PUT-DCMN.
           PERFORM CMN-PUTA.
       FIN-LEE-CACC.
           EXIT.

       LEE-CMND SECTION.
       INI-LEE-CMND.
           PERFORM GET-CMND.
           MOVE SPACES TO VRS-GLS-MENS.
           MOVE VRS-GLS-VFLD(1) TO WSS-FUNC.
           IF FRM-FFLD = FRM-FFLD-PA2
               MOVE 'SIS' TO MNU-COD-NEMO
               MOVE FIO-GET-KEY TO FIO-CMND
               MOVE SCR-SIST    TO FIO-SIST
               PERFORM GNS-VIO-MNU
               IF NOT FIO-STAT-OKS
                   MOVE 'CODNEMOSISNX' TO MSG-COD-MENS
                   GO TO ERR-LEE-CMND
               ELSE
                   GO TO TCT-LEE-CMND.
       RET-LEE-CMND.
           IF WSS-FUNC NOT > SPACES
               IF FRM-FFLD = FRM-FFLD-RET
                   MOVE 'CAC    BLK' TO MSG-COD-MENS
                   GO TO ERR-LEE-CMND
               ELSE
               IF FRM-FFLD = FRM-FFLD-PF3
                   MOVE SCR-FRET    TO MNU-COD-NEMO
                   MOVE FIO-GET-KEY TO FIO-CMND
                   MOVE SCR-SIST    TO FIO-SIST
                   PERFORM GNS-VIO-MNU
                   IF NOT FIO-STAT-OKS
                       MOVE 'CODFRETNEXST' TO MSG-COD-MENS
                       GO TO ERR-LEE-CMND
                   ELSE
                       PERFORM PRO-FIN.
      *
           MOVE SCR-NEMO TO MNU-COD-NEMO.
           MOVE SCR-SIST    TO FIO-SIST.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM GNS-VIO-MNU.

           MOVE MNU-COD-MENU TO WSS-CMEN.
           MOVE WSS-FUNC     TO WSS-ORDI.

           MOVE SPACES   TO WSS-SIST WSS-CMND.
           MOVE ZEROES   TO WSS-ISIS WSS-ICMD.
           MOVE 1        TO WSS-IOPC.
           MOVE WSS-ORDI TO WSS-OPCI.

      *     PERFORM SHF-CACC.
      *     PERFORM INI-AUTO.
      *     PERFORM PRO-AUTO VARYING WSS-I FROM 1 BY 1
      *                      UNTIL WSS-I > 11.
      *     IF FUNCION-INVALIDA
      *         MOVE 'FUN    INV' TO MSG-COD-MENS
      *         GO TO ERR-LEE-CMND.
      *     PERFORM UNS-CACC.


      *Decidir en Base a Teclas ENTER y PF3........
      *Si existe sistema o si existe opcion
           IF WSS-ISIS > 0 OR WSS-IOPC > 0 OR FRM-FFLD = FRM-FFLD-PF3
               PERFORM PRO-TCTL.
           PERFORM BUS-CMND.
           IF MSG-COD-MENS NOT > SPACES
               GO TO FIN-LEE-CMND.
       TCT-LEE-CMND.
           PERFORM PRO-TCTL.
       ERR-LEE-CMND.
           MOVE 'GNS' TO MSG-COD-SIST.
           PERFORM GET-MSG.
           IF FRM-MENS NOT > SPACES
               MOVE MSG-GLS-DESC TO FRM-MENS
           ELSE
           IF FRM-MEN1 NOT > SPACES
               MOVE MSG-GLS-DESC TO FRM-MEN1
           ELSE
           IF FRM-MEN2 NOT > SPACES
               MOVE MSG-GLS-DESC TO FRM-MEN2.
           PERFORM FST-CMN.
           PERFORM CMN-MSSG.
           PERFORM CMN-PUTA.
           PERFORM CMN-EXIT.
       FIN-LEE-CMND.
           MOVE CMN-I TO SCR-I.
           MOVE FRM-FFLD TO SCR-FFLD.

       GET-CMND SECTION.
       INI-GET-CMND.
           MOVE 'GNSFVRS' TO FRM-NAME.
           MOVE 'GNSAVRS' TO FRM-NLIB.
           MOVE FRM-GET-ALL TO FRM-CMND.
           PERFORM GNS-PRO-FRM.
           IF NOT ( FRM-FFLD = FRM-FFLD-RET OR FRM-FFLD-PF3 OR
                               FRM-FFLD-PA2 )
                  MOVE 'PFSINV' TO MSG-COD-MENS
                  MOVE 'GNS'    TO MSG-COD-SIST
                  PERFORM GET-MSG
                  MOVE MSG-GLS-DESC TO FRM-MENS
                  PERFORM FST-CMN
                  PERFORM CMN-MSSG
                  PERFORM CMN-PUTA
                  PERFORM CMN-EXIT.
           MOVE FRM-DFLD TO VRS-FLD.
           IF FRM-FFLD = FRM-FFLD-PF3
               MOVE SPACES TO VRS-GLS-VFLD(1).
           IF FRM-FFLD = FRM-FFLD-PA2
      *JSS     MOVE FRM-FFLD-TAB TO FRM-FFLD
               MOVE 'SIS'        TO VRS-GLS-VFLD(1).
       FIN-GET-CMND.
           EXIT.

       SHF-CACC SECTION.
       INI-SHF-CACC.
           MOVE SPACES TO WSS-AFUN.
           MOVE 1 TO WSS-I WSS-L.
       LUP-SHF-CACC.
           IF WSS-FCHR( WSS-I ) > SPACES
               MOVE WSS-FCHR( WSS-I ) TO WSS-ACHR( WSS-L )
               ADD 1 TO WSS-L.
           ADD 1 TO WSS-I.
           IF WSS-I NOT > 11
               GO TO LUP-SHF-CACC.
           MOVE WSS-AFUN TO WSS-FUNC.
       FIN-SHF-CACC.
           EXIT.

       INI-AUTO SECTION.
       INI-INI-AUTO.
           MOVE '000002020000000100' TO WSS-ITM1.
           MOVE '010003030000090800' TO WSS-ITM2.
           MOVE '010004040000090800' TO WSS-ITM3.
           MOVE '010000000505090400' TO WSS-ITM4.
           MOVE '010006060000000500' TO WSS-ITM5.
           MOVE '010007070000090800' TO WSS-ITM6.
           MOVE '010008080000090800' TO WSS-ITM7.
           MOVE '010000000000090800' TO WSS-ITM8.
           MOVE '000010100000000900' TO WSS-ITM9.
           MOVE '010011110000001200' TO WSS-ITMA.
           MOVE '010012120000001200' TO WSS-ITMB.
           MOVE '010000000000001200' TO WSS-ITMC.
           MOVE 1 TO WSS-STDO.
           MOVE 0 TO WSS-ISIS.
           MOVE 0 TO WSS-IOPC.
           MOVE 0 TO WSS-ICMD.
       FIN-INI-AUTO.
           EXIT.

       PRO-AUTO SECTION.
       INI-PRO-AUTO.
           IF WSS-FCHR( WSS-I ) NOT > SPACES
               MOVE 12 TO WSS-I
               GO TO FIN-PRO-AUTO.
           MOVE WSS-I TO WSS-IMAX.
           IF WSS-FCHR( WSS-I ) NOT < 'A' AND
              WSS-FCHR( WSS-I ) NOT > 'Z'
               MOVE 3 TO WSS-J
           ELSE
           IF WSS-FCHR( WSS-I ) NOT < '0' AND
              WSS-FCHR( WSS-I ) NOT > '9'
               MOVE 4 TO WSS-J
           ELSE
           IF WSS-FCHR( WSS-I ) = ':'
               MOVE 5 TO WSS-J
               MOVE WSS-I TO WSS-ISIS
           ELSE
           IF WSS-FCHR( WSS-I ) = '/'
               MOVE 6 TO WSS-J
               MOVE WSS-I TO WSS-ISIS
           ELSE
           IF WSS-FCHR( WSS-I ) = ',' OR '.'
               MOVE 7 TO WSS-J
               MOVE WSS-I TO WSS-IOPC
               MOVE WSS-I TO WSS-ICMD
           ELSE
           IF WSS-FCHR( WSS-I ) NOT > SPACES
               MOVE 8 TO WSS-J
           ELSE
               MOVE 9 TO WSS-J.
           MOVE WSS-AUTO( WSS-STDO , WSS-J ) TO WSS-STDO.
           IF WSS-STDO NOT = 0
               MOVE WSS-AUTO( WSS-STDO , 1 ) TO WSS-IVAL
           ELSE
               MOVE 0 TO WSS-IVAL
               MOVE 12 TO WSS-I.
       FIN-PRO-AUTO.
           EXIT.

       UNS-CACC SECTION.
       INI-UNS-CACC.
           MOVE SPACES TO WSS-SIST WSS-OPCI WSS-CMND.
           IF WSS-ISIS > 0
               MOVE 0 TO WSS-K
               SUBTRACT 1 FROM WSS-ISIS GIVING WSS-J
               PERFORM MOV-SIST VARYING WSS-I FROM 1 BY 1
                                UNTIL   WSS-I > WSS-J
               ADD 1 WSS-ISIS GIVING WSS-L
           ELSE
               MOVE 1 TO WSS-L.
           IF WSS-ICMD > 0
               MOVE 0 TO WSS-K
               ADD 1 WSS-ICMD GIVING WSS-J
               PERFORM MOV-CMND VARYING WSS-I FROM WSS-J BY 1
                                UNTIL   WSS-I >    WSS-IMAX
               SUBTRACT 1 FROM WSS-ICMD GIVING WSS-M
           ELSE
               MOVE WSS-IMAX TO WSS-M.
           MOVE 0 TO WSS-K.
           PERFORM MOV-OPCI VARYING WSS-I FROM WSS-L BY 1
                            UNTIL   WSS-I > WSS-M.
       FIN-UNS-CACC.
           EXIT.

       MOV-SIST SECTION.
       INI-MOV-SIST.
           IF WSS-FCHR(WSS-I) > SPACES
               ADD 1 TO WSS-K
               MOVE WSS-FCHR(WSS-I) TO WSS-CSIS(WSS-K).
       FIN-MOV-SIST.
           EXIT.

       MOV-OPCI SECTION.
       INI-MOV-OPCI.
           IF WSS-FCHR(WSS-I) > SPACES
               ADD 1 TO WSS-K
               MOVE WSS-FCHR(WSS-I) TO WSS-COPC(WSS-K).
       FIN-MOV-OPCI.
           EXIT.

       MOV-CMND SECTION.
       INI-MOV-CMND.
           IF WSS-FCHR(WSS-I) > SPACES
               ADD 1 TO WSS-K
               MOVE WSS-FCHR(WSS-I) TO WSS-CCMD(WSS-K).
       FIN-MOV-CMND.
           EXIT.

       PRO-TCTL SECTION.
       INI-PRO-TCTL.
           IF WSS-SIST > SPACES AND SCR-SIST NOT = WSS-SIST
               PERFORM CHK-SIST
           ELSE
               MOVE SCR-SIST TO WSS-SIST.
           IF WSS-OPCI > SPACES
               PERFORM CHK-OPC
               PERFORM ANL-OPC
           ELSE
           IF SCR-SIST = WSS-SIST
               IF SCR-NEMO = 'SIS'
                   MOVE 'FUN    ACT' TO MSG-COD-MENS
                   GO TO ERR-LEE-CMND
               ELSE
                   MOVE SCR-SIST    TO FIO-SIST
                   MOVE 'SIS'       TO MNU-COD-NEMO
                   MOVE FIO-GET-KEY TO FIO-CMND
                   PERFORM GNS-VIO-MNU
                   IF NOT FIO-STAT-OKS
                       MOVE 'CODNEMOSISNX' TO MSG-COD-MENS
                       GO TO ERR-LEE-CMND.
           MOVE WSS-SIST TO MNU-COD-SIST.
      * Con el MNU que se tiene hay que procesar
           IF ( MNU-COD-SIST NOT > SPACES OR
                MNU-COD-SIST = SCR-SIST ) AND MNU-COD-NEMO = SCR-NEMO
              MOVE 'FUN    ACT' TO MSG-COD-MENS
              GO TO ERR-LEE-CMND.
           PERFORM PRO-FIN.
       FIN-PRO-TCTL.
           EXIT.

       CHK-SIST SECTION.
       INI-CHK-SIST.
           EXEC CICS HANDLE CONDITION
                     NOTOPEN (CHK-SIST-NOP)
                     DSIDERR (CHK-SIST-DSI)
           END-EXEC.
           MOVE WSS-SIST    TO FIO-SIST.
           MOVE 'SIS'       TO MNU-COD-NEMO.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM GNS-VIO-MNU.
           IF FIO-STAT-OKS
               GO TO FIN-CHK-SIST.
           MOVE 'CODNEMOSISNX' TO MSG-COD-MENS.
           GO TO ERR-LEE-CMND.
       CHK-SIST-NOP.
           MOVE 'SIS    NOPEN' TO MSG-COD-MENS.
           GO TO ERR-LEE-CMND.
       CHK-SIST-DSI.
           MOVE 'SIS    NEXST' TO MSG-COD-MENS.
           GO TO ERR-LEE-CMND.
       FIN-CHK-SIST.
           EXIT.

       CHK-OPC SECTION.
       INI-CHK-OPC.
           MOVE WSS-SIST        TO FIO-SIST.
           MOVE WSS-IMEN        TO MNU-COD-IMEN IN MNU.
           MOVE FIO-GET-KEY-ALT TO FIO-CMND.
           MOVE 'MNU-COD-IMEN'  TO FIO-AKEY.
           PERFORM GNS-VIO-MNU.
           IF ( NOT FIO-STAT-OKS ) OR ( MNU-GLS-LDOC NOT > SPACES )
               MOVE 'CODOPCINEXST' TO MSG-COD-MENS
               PERFORM ERR-LEE-CMND.
       FIN-CHK-OPC.
           EXIT.

       ANL-OPC SECTION.
       INI-ANL-OPC.
           IF WSS-CMND > SPACES
               MOVE WSS-CMND TO MNU-COD-CMND IN MNU.
           IF ( MNU-COD-SIST > SPACES AND MNU-COD-SIST NOT = SCR-SIST )
              AND
              ( NOT ( WSS-SIST > SPACES AND SCR-SIST NOT = WSS-SIST ) )
               MOVE MNU-COD-SIST TO WSS-SIST
               PERFORM CHK-SIST.
       FIN-ANL-OPC.
           EXIT.

       PRO-FIN SECTION.
       INI-PRO-FIN.
           IF MNU-COD-TFUN IN MNU = 'NUL'
               MOVE 'MNUTFUNNUL' TO MSG-COD-MENS
               GO TO ERR-PRO-FIN.

      *CHEQUEAR PRIVILEGIOS PARA EL REGISTRO MNU ( OPCION )
      *         SI TIENE PRIVILEGIOS........SIGA
           IF MNU-COD-SIST NOT > SPACES
               MOVE SCR-SIST TO MNU-COD-SIST.
           IF MNU-COD-CMND IN MNU > SPACES
               PERFORM BUS-CRPF
               IF NOT WSS-EXISTE-COMANDO
                   MOVE 'CMD    NEXST' TO MSG-COD-MENS
                   GO TO ERR-PRO-FIN
               ELSE
      *Chequear privilegios para el comando
                   PERFORM CRG-VSCR.
           IF MNU-COD-SIST NOT > SPACES OR
              MNU-COD-SIST =     SCR-SIST
               MOVE SCR-SIST TO MNU-COD-SIST
               MOVE SCR-SISG TO WSS-SISG
               MOVE SPACES   TO WSS-NSIS
               GO TO CON-PRO-FIN.
           IF SCR-SIST NOT = 'GNS' AND MNU-COD-SIST = 'GNS'
                MOVE SCR-SIST TO SCR-SISG
           ELSE
      *JSS IF SCR-SIST = 'GNS' AND MNU-COD-SIST NOT = 'GNS'
                MOVE SPACES TO SCR-SISG.
           MOVE MNU-COD-SIST TO SCR-SIST.
       CON-PRO-FIN.
           MOVE MNU TO WSS-RMNU.
           IF MNU-COD-TFUN = 'PGI' OR 'PRO' OR 'MEN' OR 'HMC' OR
                             'HMX' OR 'XMC' OR 'XMX' OR 'RET'
               PERFORM PRO-RMNU
           ELSE
           IF MNU-COD-TFUN = 'STR'
               EXEC CICS START TRANSID(MNU-GLS-TRAN)
               END-EXEC
           ELSE
      *POR MIENTRAS con XCTL ( Se debe usar MNU-COD-EXPG y MNU-COD-EXFR )
               MOVE MNU-GLS-PROG TO FRM-PROG
               MOVE LOW-VALUES   TO FRM-CMMA
               MOVE 0            TO FRM-TCMA
               MOVE FRM-XCT      TO FRM-CMND
               PERFORM GNS-PRO-FRM.
           MOVE 'XCTERR' TO MSG-COD-MENS.
           MOVE SPACES   TO FRM-MEN1.
           MOVE FRM-PROG TO FRM-MEN2.
       ERR-PRO-FIN.
           IF EIBCALEN NOT = 21
               GO TO ERR-LEE-CMND.
           MOVE 'GNS' TO MSG-COD-SIST.
           PERFORM GET-MSG.
           MOVE MSG-GLS-DESC TO FRM-MENS.

           PERFORM FST-CMN.
           PERFORM CMN-MSSG.
           PERFORM CMN-PUTA.

      *EN VEZ DEL GOBACK COPIAR MODULO QUE SEPA VOLVER
           EXEC CICS HANDLE CONDITION
                     PGMIDERR(GBK-PRO-FIN)
           END-EXEC.
           MOVE 'RET'      TO FRM-CMMA.
           MOVE 3          TO FRM-TCMA.
           MOVE 'GNSPPPF2' TO FRM-PROG.
           MOVE FRM-XCT    TO FRM-CMND.
           PERFORM GNS-PRO-FRM.
       GBK-PRO-FIN.
           PERFORM XCT-ERR.
       FIN-PRO-FIN.
           EXIT.

       CRG-VSCR SECTION.
       INI-CRG-VSCR.
           MOVE MNU-GLS-PROG TO SCR-PROG.
           MOVE WSS-AUX-CRPF TO SCR-CRPF.
           MOVE WSS-AUX-CMNP TO SCR-CMNP.
           MOVE WSS-AUX-PRMC TO SCR-PRMC.
           MOVE WSS-AUX-CMND TO SCR-CMND.
           MOVE MNU-COD-TFUN TO SCR-TFUN.
       FIN-CRG-VSCR.
           EXIT.

       FST-CMN SECTION.
       INI-FST-CMN.
           MOVE -1 TO TRL-COD-CACC-LEN.
       FIN-FST-CMN.
           EXIT.

       CMN-MSSG SECTION.
       INI-CMN-MSSG.
           MOVE FRM-MENS TO TRL-GLS-MENS.
           MOVE FRM-ABRV TO VRS-GLS-CMSG IN VRS-FLD.
       FIN-CMN-MSSG.
           EXIT.

       XCT-ERR SECTION.
       INI-XCT-ERR.
           MOVE FRM-CLR-FRM TO FRM-CMND.
           PERFORM GNS-PRO-FRM.
           MOVE 'XCTERR    ' TO MSG-COD-MENS.
           MOVE 'GNS'        TO MSG-COD-SIST.
           PERFORM GET-MSG.
           MOVE MSG-GLS-DESC TO FRM-MEN1.
           MOVE FRM-PROG     TO FRM-MEN2.
           MOVE FRM-MSG      TO FRM-CMND.
           PERFORM GNS-PRO-FRM.
           GOBACK.
       FIN-XCT-ERR.
           EXIT.
      *JSS COPY GNSBGIFD.
      * Carga numeros de Base de Datos de los Sistemas
       BUS-FSIS SECTION.
       INI-BUS-FSIS.
           MOVE SPACES TO IFD-FSIS.
           MOVE 'GNSC' TO IFD-DSIS(1).
           MOVE '680'  TO IFD-GSIS(1).
      *
           MOVE 'TABC' TO IFD-DSIS(2).
           MOVE '650'  TO IFD-GSIS(2).
      *
           MOVE 'TSTC' TO IFD-DSIS(3).
           MOVE '295'  TO IFD-GSIS(3).
      *
           MOVE 'SGCM' TO IFD-DSIS(4).
           MOVE 'SGCT' TO IFD-DSIS(5).
           MOVE 'SGCC' TO IFD-DSIS(6).
           MOVE '100'  TO IFD-GSIS(4).
           MOVE '100'  TO IFD-GSIS(5).
           MOVE '690'  TO IFD-GSIS(6).
      *
           MOVE 'DEUM' TO IFD-DSIS(7).
           MOVE 'DEUT' TO IFD-DSIS(8).
           MOVE 'DEUC' TO IFD-DSIS(9).
           MOVE '140'  TO IFD-GSIS(7).
           MOVE '140'  TO IFD-GSIS(8).
           MOVE '700'  TO IFD-GSIS(9).
      *
      *    MOVE 'LDCM' TO IFD-DSIS(10).
      *    MOVE 'LDCT' TO IFD-DSIS(11).
      *    MOVE 'LDCC' TO IFD-DSIS(12).
      *    MOVE '   '  TO IFD-GSIS(10).
      *    MOVE '   '  TO IFD-GSIS(11).
      *    MOVE '   '  TO IFD-GSIS(12).
      *
           MOVE 'COLM' TO IFD-DSIS(13).
           MOVE 'COLT' TO IFD-DSIS(14).
           MOVE 'COLC' TO IFD-DSIS(15).
           MOVE '160'  TO IFD-GSIS(13).
           MOVE '570'  TO IFD-GSIS(14).
           MOVE '710'  TO IFD-GSIS(15).
      *
           MOVE 'GARM' TO IFD-DSIS(16).
           MOVE 'GART' TO IFD-DSIS(17).
           MOVE 'GARC' TO IFD-DSIS(18).
           MOVE '110'  TO IFD-GSIS(16).
           MOVE '130'  TO IFD-GSIS(17).
      *    MOVE '   '  TO IFD-GSIS(18).
      *
           MOVE 'SUPM' TO IFD-DSIS(28).
           MOVE 'SUPT' TO IFD-DSIS(29).
           MOVE 'SUPC' TO IFD-DSIS(30).
           MOVE '230'  TO IFD-GSIS(28).
           MOVE '230'  TO IFD-GSIS(29).
           MOVE '230'  TO IFD-GSIS(30).

      *ESTE MOVE FALTA PARA LOS OTROS PROGRAMAS PPMNU
           MOVE IFD-FSIS TO IFD-GLS-DATA IN IFD.
       FIN-BUS-FSIS.
           EXIT.

       COPY GNSBGVSM.
       COPY GNSBGDTC.
       COPY GNSBGFRM.
       COPY GNSBECIC.
       COPY GNSBFMNU.
       COPY GNSBFRPF.
      *JSS COPY GNSBGMSG.
       COPY GNSBGMSV.
      *
      *JSS COPY GNSBFMSG.
      *JSS COPY GNSBFTAB.
       COPY GNSBIABT.
       COPY GNSBGHOY.
       COPY GNSBGSYS.
       COPY GNSBFIFD.

      ******************************************************************

       PRO-RMNU SECTION.
       INI-PRO-RMNU.
           MOVE MNU-COD-SIST TO SCR-SIST.
      *JSS MOVE MNU-COD-FUNC TO SCR-FUNC.
      *    MOVE MNU-COD-NEMO TO SCR-NEMO.
           MOVE MNU-COD-OPCI TO SCR-FUNC.
           MOVE MNU-COD-NEMO TO SCR-NEMO.
      *
           MOVE MNU-GLS-TRAN TO SCR-NTRN.
           MOVE MNU-GLS-PROG TO SCR-PROG.
           MOVE MNU-GLS-LFRM TO SCR-NLIB.
           MOVE MNU-GLS-NFRM TO SCR-NMAP.
      *LOS 2 SIGUIENTES MOVES ESTAN INTERCAMBIADOS DEBIDO A UN PROBLEMA
      *DE INCOMPATIBILIDAD DE LARGOS DE LOS CAMPOS EN LA COMMAREA
           MOVE MNU-GLS-LDOC TO SCR-NDOC.
           MOVE MNU-GLS-NDOC TO SCR-LDOC.
      *
           MOVE MNU-COD-FRET TO SCR-FRET.
           MOVE MNU-IND-IPRV TO SCR-IPRV.
           MOVE MNU-COD-TFUN TO SCR-TFUN.
           MOVE +1110        TO SCR-TCMA.
           IF MNU-COD-TFUN = 'MEN'
               PERFORM BUS-CRPF
               PERFORM CRG-VSCR
               MOVE MNU TO WSS-RMNU
               PERFORM PRO-MENU
               MOVE WSS-RMNU TO MNU
               PERFORM PUT-MHDR
      *        PERFORM PUT-MSCR
               PERFORM PUT-MMNU
           ELSE
               MOVE LOW-VALUES TO VRS-FLD
               PERFORM PUT-MHDR
               PERFORM PUT-MSCR
               IF MNU-COD-CMND IN MNU > SPACES
                   IF SCR-TFUN = 'HMX' OR 'XMX'
      *Solo para cargar datos de COMMON AREA asociado al comando,
      *no se despliega MAPA
                       MOVE MNU-COD-CMND TO WSS-OPCI
                       PERFORM BUS-CMND
                       PERFORM PUT-DCMN
                       PERFORM CAL-PROG
                   ELSE
                       MOVE MNU-COD-CMND TO WSS-OPCI
                       PERFORM BUS-CMND
                       PERFORM PUT-DCMN
      *                PERFORM CMN-PUTA
                       PERFORM DCR-PUTA
                       PERFORM CAL-PROG.
           PERFORM BUS-CRPF.
           PERFORM CRG-VSCR.
           MOVE SCR-INST-GFL TO SCR-INST
      *NO EXISTE PANTALLA COMMAND Y YA SE DESPLEGO PUT-MMNU
      *    PERFORM HBL-CMN.
           PERFORM CMN-EXIT.
       FIN-PRO-RMNU.
           EXIT.

      ******************************************************************

       PRO-MENU SECTION.
       INI-PRO-MENU.
           MOVE MNU-GLS-LDOC TO WSS-OPOC.
           MOVE MNU-COD-MENU TO WSS-MENU.
           MOVE MNU-COD-NEMO TO WSS-NEMO.
           PERFORM BUS-MENU.
           IF NOT WSS-STAT-OKS
               MOVE LOW-VALUES TO VRS-FLD
               MOVE FRM-MENS   TO VRS-GLS-MENS
               GO TO FIN-PRO-MENU.

           PERFORM INI-OPCD.
           IF WSS-OMTM = 'X'
               MOVE WSS-OPRM TO VRS-GLS-OPRM( 1 )
               GO TO FIN-PRO-MENU.

           MOVE 0 TO WSS-NOPC.
           MOVE '00' TO FIO-STAT.
       LUP-PRO-MENU.
           IF WSS-STAT-OKS AND FIO-STAT-OKS AND MNU-COD-CMEN = WSS-MENU
               PERFORM BUS-FUNC
               GO TO LUP-PRO-MENU.
           IF NOT WSS-STAT-OKS
               MOVE LOW-VALUES TO VRS-FLD
               MOVE FRM-MENS   TO VRS-GLS-MENS.
       FIN-PRO-MENU.
           EXIT.

       BUS-MENU SECTION.
       INI-BUS-MENU.
           MOVE 0 TO WSS-STAT.
           MOVE SPACES          TO MNU-COD-IMEN.
           MOVE MNU-COD-MENU    TO MNU-COD-CMEN.
           MOVE 'MNU-COD-IMEN'  TO FIO-AKEY.
           MOVE FIO-GET-NLS-ALT TO FIO-CMND.
           MOVE SCR-SIST        TO FIO-SIST.
           PERFORM GNS-VIO-MNU.
           IF FIO-STAT-OKS AND ( MNU-COD-CMEN = WSS-MENU )
               GO TO FIN-BUS-MENU.
           IF WSS-NEMO = 'SIS'
               MOVE 'GNS' TO MSG-COD-SIST
               MOVE 'MNUSIS NOOPC' TO MSG-COD-MENS
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS
               MOVE 2 TO WSS-STAT
           ELSE
               MOVE 'GNS' TO MSG-COD-SIST
               MOVE 'MNU    NOOPC' TO MSG-COD-MENS
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS
               MOVE 1 TO WSS-STAT.
       FIN-BUS-MENU.
           EXIT.

       INI-OPCD SECTION.
       INI-INI-OPCD.
           MOVE SPACES TO VRS-TBL-IFLD IN VRS-FLD.
           MOVE SPACES TO VRS-GLS-CMSG IN VRS-FLD.
           MOVE SPACES TO VRS-TBL-OFLD IN VRS-FLD.
      *LLENAR I/O FIELDS
      *     MOVE 'GNS'    TO MSG-COD-SIST.
      *     MOVE 'PRMMEN' TO MSG-COD-MENS.
      *     PERFORM GET-MSG.
      *     MOVE FRM-ABRV TO VRS-GLS-IFLD( 1 ).
      *     MOVE 'E'      TO VRS-GLS-IFLD( 2 ).
      *LLENAR DCR
           MOVE 'GNS'          TO FIO-SIST.
           MOVE 'VRP'          TO TAB-COD-TTAB IN TAB.
           MOVE 'GNSVPMNU/DCR' TO TAB-COD-CTAB IN TAB.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM GNS-FIO-TAB.
           IF FIO-STAT-OKS AND ( TAB-IND-VIGE IN TAB NOT = 'N' )
               MOVE TAB-GLS-DESC IN TAB TO PGM-DESC
               MOVE TAB-GLS-DATA IN TAB TO PGM-DATA
           ELSE
               MOVE 'GNS'   TO FIO-SIST
               MOVE 'VRP'   TO TAB-COD-TTAB IN TAB
               MOVE '*/DCR' TO TAB-COD-CTAB IN TAB
               MOVE FIO-GET-KEY TO FIO-CMND
               PERFORM GNS-FIO-TAB
               IF FIO-STAT-OKS AND ( TAB-IND-VIGE IN TAB NOT = 'N' )
                   MOVE TAB-GLS-DESC IN TAB TO PGM-DESC
                   MOVE TAB-GLS-DATA IN TAB TO PGM-DATA
               ELSE
                   MOVE SPACES TO PGM-DESC
                   MOVE SPACES TO PGM-DATA.

           MOVE PGM-PBXE TO VRS-GLS-PBXE IN VRS-GLS-VDCR.
           MOVE PGM-FVMU TO VRS-GLS-FVMU IN VRS-GLS-VDCR.
           MOVE PGM-ASDT TO VRS-NUM-ASDT IN VRS-GLS-VDCR.
           MOVE PGM-NTRI TO VRS-NUM-NTRI IN VRS-GLS-VDCR.
           MOVE PGM-TFKY TO VRS-GLS-TFKY IN VRS-GLS-VDCR.
           MOVE PGM-FKY5 TO VRS-GLS-FKY5 IN VRS-GLS-VDCR.
           MOVE PGM-FKY6 TO VRS-GLS-FKY6 IN VRS-GLS-VDCR.
           MOVE PGM-EPFK TO VRS-GLS-EPFK IN VRS-GLS-VDCR.
           MOVE PGM-RPFK TO VRS-GLS-RPFK IN VRS-GLS-VDCR.
           IF PGM-SOFL NOT > SPACES
               MOVE 3        TO VRS-NUM-SOFL IN VRS-GLS-VDCR
           ELSE
               MOVE PGM-SOFL TO VRS-NUM-SOFL IN VRS-GLS-VDCR.
           MOVE PGM-HMSG TO VRS-GLS-HMSG IN VRS-GLS-VDCR.
           MOVE PGM-LFLG TO VRS-GLS-LFLG IN VRS-GLS-VDCR.
           MOVE PGM-FKY9 TO VRS-GLS-FKY9 IN VRS-GLS-VDCR.
           MOVE PGM-FKY0 TO VRS-GLS-FKY0 IN VRS-GLS-VDCR.
           MOVE PGM-TOLN TO VRS-NUM-TOLN IN VRS-GLS-VDCR.
           MOVE PGM-MRLN TO VRS-NUM-MRLN IN VRS-GLS-VDCR.
           MOVE PGM-MTLN TO VRS-NUM-MTLN IN VRS-GLS-VDCR.
           MOVE PGM-DFEF TO VRS-GLS-DFEF IN VRS-GLS-VDCR.
           IF NOT ( VRS-NUM-RFBY IN VRS-GLS-VDCR = '0' OR '1' )
               MOVE PGM-RFBY TO VRS-NUM-RFBY IN VRS-GLS-VDCR.
       FIN-INI-OPCD.
           EXIT.

       BUS-FUNC SECTION.
       INI-BUS-FUNC.
           ADD 1 TO WSS-NOPC.
           MOVE MNU-GLS-LDOC IN MNU TO WSS-OPOC.
           IF WSS-OPRM > SPACES
               MOVE WSS-OPRM            TO VRS-GLS-OPRM( WSS-NOPC )
               MOVE WSS-OCOD            TO VRS-GLS-OCOD( WSS-NOPC )
               MOVE MNU-NUM-ORDI IN MNU TO VRS-GLS-ODAT( WSS-NOPC ).
       NXT-BUS-FUNC.
           MOVE FIO-GET-NXT-ALT TO FIO-CMND.
           MOVE 'MNU-COD-IMEN'  TO FIO-AKEY.
           MOVE SCR-SIST        TO FIO-SIST.
           PERFORM GNS-VIO-MNU.
       FIN-BUS-FUNC.
           EXIT.

      ******************************************************************

       BUS-CRPF SECTION.
       INI-BUS-CRPF.
           MOVE 0 TO WSS-IND-CMND.
           MOVE MNU-GLS-PROG TO WSS-SIST.
           IF WSS-SIST NOT = 'GNS'
               MOVE MNU-COD-SIST TO WSS-SIST.
           MOVE SPACES       TO WSS-AUX-CRPF.

           MOVE MNU-GLS-PROG TO RPF-KEY-DPRO.
           MOVE 'C '         TO RPF-KEY-TRYC.
           MOVE SPACES       TO RPF-KEY-DARC.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM VID-RPF.
           IF NOT FIO-STAT-OKS
                MOVE 'GNSVPMNU' TO WSS-AUX-CMNP
                PERFORM BUS-PRMC
                GO TO FIN-BUS-CRPF.
           IF RPF-GLS-PRMT NOT > SPACES
               PERFORM BUS-PRMC
           ELSE
           IF RPF-GLS-PRMT NOT = 'NOMSG'
               MOVE RPF-GLS-PRMT TO WSS-AUX-PRMC
           ELSE
               MOVE SPACES TO WSS-AUX-PRMC.
           IF RPF-GLS-UARC NOT > SPACES
                MOVE 'GNSVPMNU' TO WSS-AUX-CMNP
           ELSE
                MOVE RPF-GLS-UARC TO WSS-AUX-CMNP.
           MOVE MNU-GLS-PROG TO RPF-KEY-DPRO.
           MOVE 'C0'         TO RPF-KEY-TRYC.
           MOVE FIO-FND-NLS  TO FIO-CMND.
           PERFORM VID-RPF.
           IF NOT FIO-STAT-OKS
                 GO TO FIN-BUS-CRPF.
           PERFORM LEE-CRPF.
           MOVE FIO-END-BRW TO FIO-CMND.
           PERFORM VID-RPF.
           PERFORM BUS-GLOS VARYING I FROM 1 BY 1 UNTIL I > 10.
       FIN-BUS-CRPF.
           EXIT.

       LEE-CRPF SECTION.
       INI-LEE-CRPF.
           MOVE FIO-GET-NXT TO FIO-CMND.
           PERFORM VID-RPF.
           IF NOT ( FIO-STAT-OKS AND RPF-KEY-DPRO = MNU-GLS-PROG AND
                                     RPF-KEY-TREG = 'C' )
                   GO TO FIN-LEE-CRPF.
           IF MNU-COD-CMND IN MNU > SPACES AND
              MNU-COD-CMND = RPF-COD-CCMN
               MOVE MNU-COD-CMND TO WSS-AUX-CMND
               MOVE 1            TO WSS-IND-CMND.
           MOVE RPF-KEY-CORR TO I.
           ADD 1 I GIVING K.
           MOVE RPF-COD-CCMN TO WSS-COD-CCMN( K )
           MOVE RPF-COD-CCPP TO WSS-COD-CCPP( K )
           MOVE RPF-IND-STPP TO WSS-IND-STPP( K )
           MOVE RPF-GLS-PRMT TO WSS-GLS-PRMT( K )
           MOVE RPF-GLS-CONF TO WSS-GLS-CONF( K )
           MOVE RPF-GLS-UARC TO WSS-GLS-UARC( K )
           GO TO INI-LEE-CRPF.
       FIN-LEE-CRPF.
           EXIT.

       BUS-MGKY SECTION.
       INI-BUS-MGKY.
           MOVE 'MSGKEY' TO MSG-COD-MENS.
           MOVE 'GNS'    TO MSG-COD-SIST.
           PERFORM GET-MSG.
      *    MOVE MSG-GLS-DESC TO SCR-MGKY.
       FIN-BUS-MGKY.
           EXIT.

       BUS-PRMC SECTION.
       INI-BUS-PRMC.
           IF MNU-COD-TFUN = 'MEN'
               MOVE 'PRMMEN' TO MSG-COD-MENS
           ELSE
               MOVE 'PRMPGI' TO MSG-COD-MENS.
           MOVE 'GNS'    TO MSG-COD-SIST.
           PERFORM GET-MSG.
           MOVE MSG-GLS-DESC TO WSS-AUX-PRMC.
       FIN-BUS-PRMC.
           EXIT.

       BUS-GLOS SECTION.
       INI-BUS-GLOS.
           IF WSS-COD-CCMN( I ) NOT > SPACES
               GO TO FIN-BUS-GLOS.
           IF WSS-GLS-PRMT( I ) NOT > SPACES
               MOVE SPACES TO WSS-COD-MENS
               IF WSS-GLS-UARC( I ) NOT > SPACES
                   MOVE 'GNS'             TO MSG-COD-SIST
                   MOVE 'FLD'             TO WSS-COD-TMN1
                   MOVE WSS-COD-CCPP( I ) TO WSS-COD-TMN2
                   MOVE WSS-COD-MENS      TO MSG-COD-MENS
                   PERFORM GET-MSG
                   MOVE MSG-GLS-DESC TO WSS-GLS-PRMT( I )
               ELSE
                   MOVE 'GNS'             TO MSG-COD-SIST
                   MOVE 'SUB'             TO WSS-COD-TMN1
                   MOVE WSS-COD-CCPP( I ) TO WSS-COD-TMN2
                   MOVE WSS-COD-MENS      TO MSG-COD-MENS
                   PERFORM GET-MSG
                   MOVE MSG-GLS-DESC TO WSS-GLS-PRMT( I )
           ELSE
           IF WSS-GLS-PRMT( I ) = 'NOMSG'
               MOVE SPACES TO WSS-GLS-PRMT( I ).
           IF WSS-GLS-CONF( I ) NOT > SPACES
               MOVE SPACES TO WSS-COD-MENS
               MOVE 'GNS'             TO MSG-COD-SIST
               MOVE 'CNF'             TO WSS-COD-TMN1
               MOVE WSS-COD-CCPP( I ) TO WSS-COD-TMN2
               MOVE WSS-COD-MENS      TO MSG-COD-MENS
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO WSS-GLS-CONF( I )
           ELSE
           IF WSS-GLS-CONF( I ) = 'NOMSG'
               MOVE SPACES TO WSS-GLS-CONF( I ).
       FIN-BUS-GLOS.
           EXIT.

      ******************************************************************

       GNS-VIO-MNU SECTION.
       INI-GNS-VIO-MNU.
           PERFORM GNS-FIO-MNU.
           IF FIO-STAT-OKS
               MOVE MNU-GLS-NDOC TO WSS-PVTV
               MOVE WSS-PGVR TO MNU-GLS-PROG IN MNU
               MOVE WSS-TRVR TO MNU-GLS-TRAN IN MNU.
       FIN-GNS-VIO-MNU.
           EXIT.

       VID-RPF SECTION.
       INI-VID-RPF.
           MOVE WSS-SIST TO FIO-SIST.
           PERFORM GNS-FIO-RPF.
       FIN-VID-RPF.
           EXIT.

      ******************************************************************

       PUT-MHDR SECTION.
       INI-PUT-MHDR.
      *    IF SCR-TFUN = 'XMC' OR 'XMX'
               MOVE 1 TO FRM-PLIN.
               MOVE 0 TO FRM-NLIN.
               MOVE FRM-CLR-FRM TO FRM-CMND.
               PERFORM GNS-PRO-FRM.
               GO TO FIN-PUT-MHDR.
      ****************************************
           PERFORM GNSSCRHDR.
      *JSS MOVE 'GNSFHDR'     TO FRM-NAME.
           MOVE 'GNSAHDR'     TO FRM-NAME.
           MOVE 'GNSAHDR'     TO FRM-NLIB.
           MOVE HDR-FLD       TO FRM-DFLD.
           MOVE FRM-SINI-DB1F TO FRM-SINI.
           MOVE FRM-INI       TO FRM-CMND.
           PERFORM GNS-PRO-FRM.
       FIN-PUT-MHDR.
           EXIT.

       GNSSCRHDR SECTION.
       INI-GNSSCRHDR.
           MOVE SPACES       TO HEA-DOBL.
           MOVE MNU-GLS-FPRO TO HEA-SIMP.
           PERFORM HDR-TITU.
           MOVE SCR-SIST     TO HDR-COD-SIST.
           MOVE MNU-COD-OPCI TO HDR-GLS-NFRM.
           MOVE HEA-DOBL     TO HDR-GLS-FPRO.
           PERFORM GET-FHOY.
           MOVE HOY-DHOY TO HEA-NUM-DMSA IN HEA-FEC-DMSA.
           MOVE HOY-MHOY TO HEA-NUM-MMSA IN HEA-FEC-DMSA.
           MOVE HOY-SHOY TO HEA-NUM-SMSA IN HEA-FEC-DMSA.
           MOVE HOY-AHOY TO HEA-NUM-AMSA IN HEA-FEC-DMSA.
           MOVE '/'      TO HEA-GLS-SLA1 HEA-GLS-SLA2.
           MOVE HEA-FEC-DMSA TO HDR-FEC-DMSA IN HDR-FLD.
           IF SCR-SIST = 'GNS'
               MOVE SCR-SISG TO HDR-COD-FUNC
           ELSE
               MOVE SPACES TO HDR-COD-FUNC.
      *JSS MOVE EIBTRMID TO HDR-GLS-TRMI.
      *    MOVE SPACES TO HDR-GLS-HORA.
           MOVE SPACES TO HDR-GLS-GLS1.
           MOVE SPACES TO HDR-GLS-GLS2.
           MOVE SPACES TO HDR-GLS-GLS3.
       FIN-GNSSCRHDR.
           EXIT.

       HDR-TITU SECTION.
       INI-HDR-TITU.
           IF HEA-SIMP = SPACES
                      GO TO FIN-HDR-TITU.
           PERFORM BUS-LIMI VARYING IMIN FROM 1 BY 1
                      UNTIL HEA-GLS-SIMP(IMIN) NOT = SPACES.
           PERFORM BUS-LIMI VARYING IMAX FROM 31 BY -1
                      UNTIL HEA-GLS-SIMP(IMAX) NOT = SPACES.
           IF MNU-IND-EXGL IN MNU = 'N'
               COMPUTE L = ( 61 - ( IMAX - IMIN + 1 ) ) / 2
               MOVE 1 TO I
           ELSE
               COMPUTE
                  L = ( 61 - ( 2 * ( IMAX - IMIN + 1 ) - 1 ) ) / 2 + 1
               MOVE 2 TO I.
           PERFORM PUT-TITU
                   VARYING K FROM IMIN BY 1 UNTIL K > IMAX.
       FIN-HDR-TITU.
           EXIT.

       BUS-LIMI SECTION.
       INI-BUS-LIMI.
       FIN-BUS-LIMI.
           EXIT.

       PUT-TITU SECTION.
       INI-PUT-TITU.
           MOVE HEA-GLS-SIMP( K ) TO HEA-GLS-DOBL( L ).
           ADD I TO L.
       FIN-PUT-TITU.
           EXIT.

      ******************************************************************

       PUT-MSCR SECTION.
       INI-PUT-MSCR.
           MOVE 'GNSFVRS' TO SCR-NMAP.
           MOVE 'GNSAVRS' TO SCR-NLIB.
           MOVE SCR-NMAP TO FRM-NAME.
           MOVE SCR-NLIB TO FRM-NLIB.
           MOVE LOW-VALUES    TO FRM-DFLD.
           MOVE FRM-SINI-DBNF TO FRM-SINI.
           MOVE FRM-INI       TO FRM-CMND.
           PERFORM GNS-PRO-FRM.
           IF WSS-CCOD-APCT OR WSS-CCOD-ABM0
               MOVE SPACES TO MNU-GLS-PROG IN MNU
               MOVE SPACES TO MNU-GLS-TRAN IN MNU
               MOVE SPACES TO MNU-COD-CMND IN MNU.
       FIN-PUT-MSCR.
           EXIT.

       PUT-MMNU SECTION.
       INI-PUT-MMNU.
      *LLENAR I/O FIELDS
           MOVE 'GNS'    TO MSG-COD-SIST.
           MOVE 'PRMMEN' TO MSG-COD-MENS.
           PERFORM GET-MSG.
           MOVE MSG-GLS-DCOR IN MSG TO VRS-GLS-IFLD( 1 ).
           MOVE 'E'                 TO VRS-GLS-IFLD( 2 ).
      *
           IF VRS-GLS-CMSG IN VRS-FLD NOT > SPACES
               MOVE MSG-GLS-ABRV IN MSG TO VRS-GLS-CMSG IN VRS-FLD.
      *
           MOVE FRM-CPIM-UBY TO VRS-GLS-VFLD-ATR(1).
           MOVE -1           TO VRS-GLS-VFLD-LEN(1).
           MOVE 'GNSFVRS'   TO FRM-NAME.
           MOVE 'GNSAVRS'   TO FRM-NLIB.

           MOVE SCR-RFBY TO VRS-NUM-RFBY IN VRS-GLS-VDCR.
           MOVE FRM-CPIM-UBY TO VRS-NUM-RFBY-ATR IN VRS-GLS-VDCR.
           IF VRS-NUM-RFBY IN VRS-GLS-VDCR = '0'
               MOVE '1' TO VRS-NUM-RFBY IN VRS-GLS-VDCR
           ELSE
               MOVE '0' TO VRS-NUM-RFBY IN VRS-GLS-VDCR.
           MOVE VRS-NUM-RFBY IN VRS-GLS-VDCR TO SCR-RFBY.

           MOVE VRS-FLD     TO FRM-DFLD.
           MOVE FRM-PUT-ALL TO FRM-CMND.
           PERFORM GNS-PRO-FRM.
       FIN-PUT-MMNU.
           EXIT.

      ******************************************************************

       HBL-CMN SECTION.
       INI-HBL-CMN.
           PERFORM CMN-PUTA.
           PERFORM CMN-EXIT.
       FIN-HBL-CMN.
           EXIT.

       PUT-CMND SECTION.
       INI-PUT-CMND.
           MOVE SCR-COD-CCMN ( CMN-K ) TO CMN-COD-CCMN ( CMN-K ).
       FIN-PUT-CMND.
             EXIT.

      ******************************************************************

       CMN-PUTA SECTION.
       INI-CMN-PUTA.
      *ESTO SE HACE PORQUE NO EXISTE EN VERDAD UNA PANTALLA COMMAND
      *Y SE DEBE DESPLEGAR LA PANTALLA DEL MENU ( GNSAVRS ).
           PERFORM PUT-MMNU.
       FIN-CMN-PUTA.
           EXIT.

       DCR-PUTA SECTION.
       INI-DCR-PUTA.
       FIN-DCR-PUTA.
           EXIT.

       CMN-EXIT SECTION.
       INI-CMN-EXIT.
           MOVE 'TALK'   TO FRM-NTRN.
           MOVE 'K'      TO SCR-ICMN.
           MOVE SCR-VARI TO FRM-CMMA.
           MOVE SCR-TCMA TO FRM-TCMA.
           MOVE FRM-EXT  TO FRM-CMND.
           PERFORM GNS-PRO-FRM.
       FIN-CMN-EXIT.
           EXIT.

      ******************************************************************

       BUS-CMND SECTION.
       INI-BUS-CMND.
           MOVE 'CMD    NEXST' TO MSG-COD-MENS.
           MOVE 1 TO CMN-I.
           SET SCR-ITBL TO 1.
           SEARCH SCR-TABL VARYING CMN-I
                  WHEN SCR-COD-CCMN( SCR-ITBL ) = WSS-OPCI
                         GO TO SET-BUS-CMND.
           GO TO FIN-BUS-CMND.
       SET-BUS-CMND.
           MOVE SPACES TO MSG-COD-MENS.
       FIN-BUS-CMND.
           EXIT.

       PUT-DCMN SECTION.
       INI-PUT-DCMN.
           MOVE CMN-I TO SCR-I.
           MOVE SCR-COD-CCMN( SCR-I ) TO SCR-CMND.
           MOVE SCR-COD-CCPP( SCR-I ) TO SCR-CCPP.
           MOVE SCR-IND-STPP( SCR-I ) TO SCR-STPP.
           MOVE SCR-INST-HKY          TO SCR-INST.
           IF SCR-TFUN = 'HMX' OR 'XMX'
               MOVE LOW-VALUES TO TRL-GLS-TERM IN TRL-FLD
               MOVE LOW-VALUES TO TRL-COD-CMND IN TRL-FLD
               MOVE LOW-VALUES TO TRL-GLS-PRMT IN TRL-FLD
               MOVE LOW-VALUES TO TRL-COD-CACC IN TRL-FLD
               MOVE SPACES     TO TRL-GLS-MENS IN TRL-FLD
               GO TO CON-PUT-DCMN.
           MOVE SPACES                TO CMN-IDX-CCMN.
           MOVE SCR-COD-CCMN( SCR-I ) TO CMN-COD-CCMN( SCR-I ).
           MOVE CMN-IDX-CCMN          TO TRL-COD-CMND.
           MOVE SPACES                TO TRL-GLS-PRMT TRL-COD-CACC.
           MOVE 'GNS'                 TO MSG-COD-SIST.
           MOVE SPACES                TO WSS-COD-MENS.
           MOVE 'PFSPGI'              TO WSS-COD-TMSG.
           MOVE SCR-IND-STPP( SCR-I ) TO WSS-COD-TMN3.
           MOVE WSS-COD-MENS          TO MSG-COD-MENS.
           PERFORM GET-MSG.
           MOVE MSG-GLS-DESC TO WSS-MEN1.
           MOVE MSG-GLS-MENS TO WSS-MEN2.
           MOVE WSS-MENS TO TRL-GLS-TERM.
      *    MOVE SCR-MGKY TO TRL-GLS-MENS.
           PERFORM BUS-MGKY.
           MOVE MSG-GLS-DESC TO TRL-GLS-MENS.
       CON-PUT-DCMN.
           MOVE FRM-CPIM-AEY TO TRL-COD-CACC-ATR.
           MOVE -1           TO TRL-COD-CACC-LEN.
       FIN-PUT-DCMN.
           EXIT.

       CAL-PROG SECTION.
       INI-CAL-PROG.
           MOVE SCR-PROG     TO RPF-KEY-DPRO.
           MOVE 'A '         TO RPF-KEY-TRYC.
           MOVE SPACES       TO RPF-KEY-DARC.
           MOVE FIO-GET-KEY TO FIO-CMND.

           MOVE SCR-PROG TO WSS-SIST.
           IF WSS-SIST NOT = 'GNS'
               MOVE SCR-SIST TO WSS-SIST.

           PERFORM VID-RPF.
           IF NOT FIO-STAT-OKS
               MOVE 'DEFAULT' TO IFD-COD-CIFD IN IFD
           ELSE
           IF RPF-COD-CIFD IN RPF NOT > SPACES
               MOVE 'DEFAULT' TO IFD-COD-CIFD IN IFD
           ELSE
               MOVE RPF-COD-CIFD IN RPF TO IFD-COD-CIFD IN IFD.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM GNS-FIO-IFD.
           IF NOT FIO-STAT-OKS
               PERFORM BUS-FSIS
           ELSE
               MOVE IFD-GLS-DATA IN IFD TO IFD-FSIS.

           IF SCR-GLS-UARC( SCR-I ) > SPACES
               MOVE SCR-GLS-UARC( SCR-I ) TO AUX-UARC

               MOVE SCR-PROG TO AUX-PROG
               MOVE SCR-NTRN TO AUX-NTRN
               MOVE AUX-PRGM TO SCR-GLS-UARC( SCR-I )

               MOVE AUX-RPRG TO SCR-PROG
               MOVE AUX-RTRN TO SCR-NTRN.

           MOVE SCR-INST-HKY TO SCR-INST.
           MOVE 'C'          TO SCR-ICMN.
           MOVE SCR-PROG     TO FRM-PROG.
           MOVE SCR-VARI     TO FRM-CMMA.
      *JSS MOVE SCR-TCMA     TO FRM-TCMA.
           MOVE +3500        TO FRM-TCMA.

           MOVE FRM-XCT      TO FRM-CMND.
           PERFORM GNS-PRO-FRM.
           PERFORM XCT-ERR.
       FIN-CAL-PROG.
           EXIT.

       CMN-ERR-PA2.
           MOVE FRM-FFLD-PA2 TO FRM-FFLD.
           GO TO CIC-ERR-FRM.
       CMN-ERR-CLR.
           MOVE FRM-FFLD-PA2 TO FRM-FFLD.
           MOVE SPACES TO SCR-NEMO.
           GO TO CIC-ERR-FRM.
       CMN-ERR-ABN.
           EXEC CICS ASSIGN
                     ABCODE(WSS-CCOD)
           END-EXEC.
           IF WSS-CCOD-APCT OR WSS-CCOD-ABM0
               GO TO CIC-ERR-FRM
           ELSE
               MOVE 'GNS'     TO MSG-COD-SIST
               MOVE 'CICABND' TO MSG-COD-TMSG
               MOVE WSS-CCOD  TO MSG-COD-CMSG
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS
               MOVE FRM-ABT      TO FRM-CMND
               PERFORM GNS-PRO-FRM.

       GNS-PRO-KEY SECTION.
       INI-GNS-PRO-KEY.
           MOVE EIBAID TO FRM-FFLD.
           IF FRM-FFLD = FRM-FFLD-PF7
               EXEC CICS SEND CONTROL ERASE FREEKB
               END-EXEC
               GOBACK.
       FIN-GNS-PRO-KEY.
           EXIT.

      ******************** MANEJO DE COLAS **********************

       CHK-QUEU SECTION.
       INI-CHK-QUEU.
           MOVE 1 TO QUE-NITM.
           MOVE QUE-GET TO QUE-CMND.
           PERFORM GNS-PRO-QUE.
       FIN-CHK-QUEU.
           EXIT.

       QUE-EOQ SECTION.
       INI-QUE-EOQ.
           MOVE QUE-STAT-EOQ TO QUE-STAT.
           GO TO FIN-GNS-PRO-QUE.
       FIN-QUE-EOQ.
           EXIT.

       QUE-NEX SECTION.
       INI-QUE-NEX.
           MOVE QUE-STAT-NEX TO QUE-STAT.
           GO TO FIN-GNS-PRO-QUE.
       FIN-QUE-NEX.
           EXIT.

      **************************************************************

       ERR-QUE SECTION.
       INI-ERR-QUE.
           EXEC CICS HANDLE CONDITION
                     QIDERR (QUE-NEX)
                     ITEMERR(QUE-EOQ)
           END-EXEC.
       FIN-ERR-QUE.
           EXIT.

       GNS-PRO-QUE SECTION.
       INI-GNS-PRO-QUE.
           IF QUE-CMND = QUE-PUT
               GO TO PUT-QUE
           ELSE
           IF QUE-CMND = QUE-GET
               GO TO GET-QUE
           ELSE
           IF QUE-CMND = QUE-MOD
               GO TO MOD-QUE
           ELSE
           IF QUE-CMND = QUE-DEL
               GO TO DEL-QUE.
           MOVE 'Comando invalido :' TO QUE-MEN1.
           MOVE QUE-CMND             TO QUE-MEN2.
           EXEC CICS XCTL
                     PROGRAM('GNSPPABT')
                     COMMAREA(QUE-MENS)
                     LENGTH(+79)
           END-EXEC.

       PUT-QUE.
           EXEC CICS WRITEQ TS
                     QUEUE(QUE-COLA)
                     FROM(QUE-ITEM)
                     LENGTH(QUE-LITM)
                     AUXILIARY
           END-EXEC.
       FIN-PUT-QUE.
           GO TO FIN-GNS-PRO-QUE.

       GET-QUE.
           EXEC CICS READQ TS
                     QUEUE(QUE-COLA)
                     INTO(QUE-ITEM)
                     LENGTH(QUE-LITM)
                     ITEM(QUE-NITM)
           END-EXEC.
       FIN-GET-QUE.
           GO TO FIN-GNS-PRO-QUE.

       MOD-QUE.
           EXEC CICS WRITEQ TS
                     QUEUE(QUE-COLA)
                     FROM(QUE-ITEM)
                     LENGTH(QUE-LITM)
                     ITEM(QUE-NITM)
                     REWRITE
           END-EXEC.
       FIN-MOD-QUE.
           GO TO FIN-GNS-PRO-QUE.

       DEL-QUE.
           EXEC CICS DELETEQ TS
                     QUEUE(QUE-COLA)
           END-EXEC.
       FIN-DEL-QUE.
           GO TO FIN-GNS-PRO-QUE.

       FIN-GNS-PRO-QUE.
           EXIT.

      **************************************************************

       GNS-FIO-TAB SECTION.
       INI-GNS-FIO-TAB.
           IF IFD-GSIS(1) IS NOT NUMERIC
               PERFORM GNS-FIO-TAB-VSM
           ELSE
               PERFORM GNS-FIO-TAB-DTC.
       FIN-GNS-FIO-TAB.
           EXIT.

       GNS-FIO-MSG SECTION.
       INI-GNS-FIO-MSG.
           IF IFD-GSIS(1) IS NOT NUMERIC
               PERFORM GNS-FIO-MSG-VSM
           ELSE
               PERFORM GNS-FIO-MSG-DTC.
       FIN-GNS-FIO-MSG.
           EXIT.

      *****************************************************

      *Modulo FIO interactivo para registro TAB de VSAM, 11-Jan-89 01:00 PM
       GNS-FIO-TAB-VSM SECTION.
       INI-GNS-FIO-TAB-VSM.
           MOVE 194    TO FIO-RLEN.
           MOVE FIO-CMND TO FIO-IAKY FIO-IGET.
           IF NOT FIO-IAKY-CON AND
              ( FIO-AKEY = 'TAB-COD-TABL' OR FIO-AKEY NOT > SPACES )
               MOVE TAB-COD-TABL IN TAB TO FIO-VKEY
      *ISP
      *         MOVE 'GNSMTAB' TO FIO-VOID
               MOVE 'M' TO FIO-FTYP
      *JSS     MOVE 'TAB' TO FIO-FNAM
               MOVE IFD-GSIS(1) TO FIO-FNAM
      *
               MOVE 15     TO FIO-KLEN
           ELSE
           IF FIO-AKEY = 'TAB-CIC-TABL'
               MOVE TAB-CIC-TABL IN TAB TO FIO-VKEY
      *ISP
      *         MOVE 'GNSMTA1' TO FIO-VOID
               MOVE 'M' TO FIO-FTYP
               MOVE 'TA1' TO FIO-FNAM
               MOVE 15 TO FIO-KLEN
           ELSE
           IF FIO-AKEY = 'TAB-EXT-TABL'
               MOVE TAB-EXT-TABL IN TAB TO FIO-VKEY
      *ISP
      *         MOVE 'GNSMTA2' TO FIO-VOID
               MOVE 'M' TO FIO-FTYP
               MOVE 'TA2' TO FIO-FNAM
               MOVE 8 TO FIO-KLEN
           ELSE
               MOVE 'En GNS-FIO-TAB-VSM, key' TO FIO-MENS
               MOVE FIO-AKEY   TO FIO-MENS-KEY
               MOVE 'Invalida' TO FIO-MENS-FIL
               PERFORM PRG-ABT.

           IF FIO-CMND = FIO-PUT OR FIO-MOD
               MOVE TAB TO FIO-DFLD.
           PERFORM FIO.
           IF FIO-STAT-OKS AND FIO-IGET-YES
               MOVE FIO-BUF0 TO TAB.
           MOVE SPACES TO FIO-AKEY.
       FIN-GNS-FIO-TAB-VSM.
           EXIT.

      *Modulo FIO interactivo para registro TAB de VSAM, 11-Jan-89 01:00 PM
       GNS-FIO-MSG-VSM SECTION.
       INI-GNS-FIO-MSG-VSM.
      *ISP 
           MOVE 'MSG' TO MSG-COD-TTAB IN MSG
                         MSG-CIC-TTAB IN MSG
                         MSG-EXT-TTAB IN MSG
                         MSG-SNX-TTAB IN MSG.
           MOVE 194    TO FIO-RLEN.
           MOVE FIO-CMND TO FIO-IAKY FIO-IGET.
           IF NOT FIO-IAKY-CON AND
              ( FIO-AKEY = 'MSG-COD-TABL' OR FIO-AKEY NOT > SPACES )
               MOVE MSG-COD-TABL IN MSG TO FIO-VKEY
      *ISP
      *         MOVE 'GNSMTAB' TO FIO-VOID
               MOVE 'M' TO FIO-FTYP
      *JSS     MOVE 'TAB' TO FIO-FNAM
               MOVE IFD-GSIS(1) TO FIO-FNAM
      *
               MOVE 15     TO FIO-KLEN
           ELSE
           IF FIO-AKEY = 'MSG-CIC-TABL'
               MOVE MSG-CIC-TABL IN MSG TO FIO-VKEY
      *ISP
      *         MOVE 'GNSMTA1' TO FIO-VOID
               MOVE 'M' TO FIO-FTYP
               MOVE 'TA1' TO FIO-FNAM
               MOVE 15 TO FIO-KLEN
           ELSE
           IF FIO-AKEY = 'MSG-EXT-TABL'
               MOVE MSG-EXT-TABL IN MSG TO FIO-VKEY
      *ISP
      *         MOVE 'GNSMTA2' TO FIO-VOID
               MOVE 'M' TO FIO-FTYP
               MOVE 'TA2' TO FIO-FNAM
               MOVE 8 TO FIO-KLEN
           ELSE
               MOVE 'En GNS-FIO-MSG-VSM, key' TO FIO-MENS
               MOVE FIO-AKEY   TO FIO-MENS-KEY
               MOVE 'Invalida' TO FIO-MENS-FIL
               PERFORM PRG-ABT.

           IF FIO-CMND = FIO-PUT OR FIO-MOD
      *ISP
               MOVE MSG-COD-TTAB IN MSG TO MSG-CIC-TTAB IN MSG
                                           MSG-EXT-TTAB IN MSG
                                           MSG-SNX-TTAB IN MSG
               MOVE MSG TO FIO-DFLD.
           PERFORM FIO.
           IF FIO-STAT-OKS AND FIO-IGET-YES
               MOVE FIO-BUF0 TO MSG.
           MOVE SPACES TO FIO-AKEY.
       FIN-GNS-FIO-MSG-VSM.
           EXIT.

      *****************************************************

      * Modulo FIO para registro TAB en DATACOM
       GNS-FIO-TAB-DTC SECTION.
       INI-GNS-FIO-TAB-DTC.
           MOVE ADR-TAB-REQA TO ADR-REQA.
           MOVE 'TAB' TO ADR-TABL IN ADR-REQA.
      *JSS MOVE IFD-GSIS( 1 ) TO ADR-DBID IN ADR-REQA.
           MOVE FIO-SIST TO IFD-SAUX.
           MOVE 'C'      TO IFD-QAUX.
           MOVE 1 TO IFD-IAUX.
           SET IFD-ITBL TO 1.
           SEARCH IFD-VSIS VARYING IFD-IAUX
               AT END
                   MOVE 'Sistema Invalido en GNS-FIO-TAB-DTC'
                                                          TO FIO-MEN1
                   MOVE IFD-DAUX                          TO FIO-MEN2
                   GO TO PRG-ABT
               WHEN IFD-DSIS( IFD-ITBL ) = IFD-DAUX
                   MOVE IFD-GSIS( IFD-ITBL) TO ADR-DBID IN ADR-REQA.
      *
           MOVE 'TAB00' TO ADR-ELM1.
           MOVE FIO-PROG TO ADR-PROG.
           MOVE FIO-CMND TO FIO-IAKY.
           IF NOT FIO-IAKY-CON AND
              ( FIO-AKEY = 'TAB-COD-TABL' OR FIO-AKEY NOT > SPACES )
               MOVE TAB-COD-TABL IN TAB TO ADR-VKEY IN ADR-REQA
               MOVE 'TAB00' TO ADR-DKEY IN ADR-REQA
           ELSE
           IF FIO-AKEY = 'TAB-STP-ITRN'
               MOVE TAB-STP-ITRN IN TAB TO ADR-VKEY IN ADR-REQA
               MOVE 'TAB01' TO ADR-DKEY IN ADR-REQA
           ELSE
           IF FIO-AKEY = 'TAB-CIC-TABL'
               MOVE TAB-CIC-TABL IN TAB TO ADR-VKEY IN ADR-REQA
               MOVE 'TAB02' TO ADR-DKEY IN ADR-REQA
           ELSE
           IF FIO-AKEY = 'TAB-EXT-TABL'
               MOVE TAB-EXT-TABL IN TAB TO ADR-VKEY IN ADR-REQA
               MOVE 'TAB03' TO ADR-DKEY IN ADR-REQA
           ELSE
               MOVE 'En GNS-FIO-TAB-DTC, key' TO FIO-MENS
               MOVE FIO-AKEY   TO FIO-MENS-KEY
               MOVE 'Invalida' TO FIO-MENS-FIL
               GO TO PRG-ABT.
      *JSS
           IF FIO-CMND = FIO-PUT OR FIO-MOD
               MOVE TAB-COD-TTAB IN TAB TO TAB-CIC-TTAB IN TAB
                                           TAB-EXT-TTAB IN TAB
                                           TAB-SNX-TTAB IN TAB.
      *
           MOVE TAB TO FIO-DFLD.
           PERFORM GNS-FIO-DTC.
           IF FIO-STAT-OKS
               MOVE FIO-DFLD TO TAB
           ELSE
      *JSS     MOVE 'GNSTAB' TO FIO-MEN2
               MOVE FIO-SIST TO FIO-MENS-SIS
               MOVE 'TAB'    TO FIO-MENS-REG
      *
               IF FIO-STAT-FTL
                   GO TO PRG-ABT.
           MOVE SPACES   TO FIO-AKEY.
           MOVE ADR-REQA TO ADR-TAB-REQA.
       FIN-GNS-FIO-TAB-DTC.
           EXIT.

      * Modulo FIO para registro MSG en DATACOM
       GNS-FIO-MSG-DTC SECTION.
       INI-GNS-FIO-MSG-DTC.
      *JSS
           MOVE 'MSG' TO MSG-COD-TTAB IN MSG
                         MSG-CIC-TTAB IN MSG
                         MSG-EXT-TTAB IN MSG
                         MSG-SNX-TTAB IN MSG.
      *
           MOVE ADR-MSG-REQA TO ADR-REQA.
           MOVE 'TAB' TO ADR-TABL IN ADR-REQA.
      *JSS MOVE IFD-GSIS( 1 ) TO ADR-DBID IN ADR-REQA.
           MOVE FIO-SIST TO IFD-SAUX.
           MOVE 'C'      TO IFD-QAUX.
           MOVE 1 TO IFD-IAUX.
           SET IFD-ITBL TO 1.
           SEARCH IFD-VSIS VARYING IFD-IAUX
               AT END
                   MOVE 'Sistema Invalido en GNS-FIO-MSG-DTC'
                                                          TO FIO-MEN1
                   MOVE IFD-DAUX                          TO FIO-MEN2
                   GO TO PRG-ABT
               WHEN IFD-DSIS( IFD-ITBL ) = IFD-DAUX
                   MOVE IFD-GSIS( IFD-ITBL) TO ADR-DBID IN ADR-REQA.
      *
           MOVE 'TAB00' TO ADR-ELM1.
           MOVE FIO-PROG TO ADR-PROG.
           MOVE FIO-CMND TO FIO-IAKY.
           IF NOT FIO-IAKY-CON AND
              ( FIO-AKEY = 'MSG-COD-TABL' OR FIO-AKEY NOT > SPACES )
               MOVE MSG-COD-TABL IN MSG TO ADR-VKEY IN ADR-REQA
               MOVE 'TAB00' TO ADR-DKEY IN ADR-REQA
           ELSE
           IF FIO-AKEY = 'MSG-STP-ITRN'
               MOVE MSG-STP-ITRN IN MSG TO ADR-VKEY IN ADR-REQA
               MOVE 'TAB01' TO ADR-DKEY IN ADR-REQA
           ELSE
           IF FIO-AKEY = 'MSG-CIC-TABL'
               MOVE MSG-CIC-TABL IN MSG TO ADR-VKEY IN ADR-REQA
               MOVE 'TAB02' TO ADR-DKEY IN ADR-REQA
           ELSE
           IF FIO-AKEY = 'MSG-EXT-TABL'
               MOVE MSG-EXT-TABL IN MSG TO ADR-VKEY IN ADR-REQA
               MOVE 'TAB03' TO ADR-DKEY IN ADR-REQA
           ELSE
               MOVE 'En GNS-FIO-MSG-DTC, key' TO FIO-MENS
               MOVE FIO-AKEY   TO FIO-MENS-KEY
               MOVE 'Invalida' TO FIO-MENS-FIL
               GO TO PRG-ABT.
      *JSS
           IF FIO-CMND = FIO-PUT OR FIO-MOD
               MOVE MSG-COD-TTAB IN MSG TO MSG-CIC-TTAB IN MSG
                                           MSG-EXT-TTAB IN MSG
                                           MSG-SNX-TTAB IN MSG.
      *
           MOVE MSG TO FIO-DFLD.
           PERFORM GNS-FIO-DTC.
           IF FIO-STAT-OKS
               MOVE FIO-DFLD TO MSG
           ELSE
      *JSS     MOVE 'GNSMSG' TO FIO-MEN2
               MOVE FIO-SIST TO FIO-MENS-SIS
               MOVE 'TAB'    TO FIO-MENS-REG
      *
               IF FIO-STAT-FTL
                   GO TO PRG-ABT.
           MOVE SPACES   TO FIO-AKEY.
           MOVE ADR-REQA TO ADR-MSG-REQA.
       FIN-GNS-FIO-MSG-DTC.
           EXIT.
