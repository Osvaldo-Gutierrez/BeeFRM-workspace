       IDENTIFICATION DIVISION.
      *========================
       PROGRAM-ID. GNSPPOPC.
       AUTHOR. GUZMAN Y CIA.
       DATE-WRITTEN. 30-NOV-1989 13:05:00

      * PROCESA MENUS Y COMANDOS CON MANEJO DE PRIVILEGIOS.

       ENVIRONMENT DIVISION.
      *=====================
       DATA DIVISION.
      *==============

       WORKING-STORAGE SECTION.
      *------------------------
       COPY GNSBRMNU.
       COPY GNSBRRPF.
      * COPY GNSWGSCR.
      * SE INCORPORA AL PROGRAMA PARA PODER MANTENERLO
      * MIENTRAS EXISTA UN PROGRAMA EN VERSION 2.0
      *
       01  SCR-CTTS.
           03 SCR-INST-INI                PIC X(03) VALUE 'INI'.
           03 SCR-INST-HCM                PIC X(03) VALUE 'HCM'.
           03 SCR-INST-GCM                PIC X(03) VALUE 'GCM'.
           03 SCR-INST-HKY                PIC X(03) VALUE 'HKY'.
           03 SCR-INST-GKY                PIC X(03) VALUE 'GKY'.
           03 SCR-INST-HFL                PIC X(03) VALUE 'HFL'.
           03 SCR-INST-GFL                PIC X(03) VALUE 'GFL'.
           03 SCR-INST-GCS                PIC X(03) VALUE 'GCS'.
           03 SCR-INST-GAB                PIC X(03) VALUE 'GAB'.
           03 SCR-INST-GCF                PIC X(03) VALUE 'GCF'.
           03 SCR-INST-SIS                PIC X(03) VALUE 'SIS'.
           03 SCR-STAT-CON                PIC X(01) VALUE 'C'.
           03 SCR-STAT-ABT                PIC X(01) VALUE 'K'.
           03 SCR-STAT-MOD                PIC X(01) VALUE 'M'.
           03 SCR-STAT-SON                PIC X(01) VALUE 'A'.
           03 SCR-ACTU-MOD                PIC X(03) VALUE 'MOD'.
           03 SCR-ACTU-ING                PIC X(03) VALUE 'ING'.
           03 SCR-VFLD-NOT                PIC X(01) VALUE 'N'.
           03 SCR-VFLD-YES                PIC X(01) VALUE 'S'.
           03 SCR-MFLD-NOT                PIC X(01) VALUE 'N'.
           03 SCR-MFLD-YES                PIC X(01) VALUE 'S'.
           03 IFD-DAUX.
              05 IFD-SAUX                 PIC X(03).
              05 IFD-QAUX                 PIC X(01).
           03 IFD-DBID                    PIC 9(03).
           03 IFD-IAUX                    PIC 9(02).
       01  SCR-VARI.
           03 SCR-TCMA  COMP              PIC S9(04).
           03 SCR-SIST                    PIC X(03).
           03 SCR-FUNC                    PIC X(08).
           03 SCR-NEMO                    PIC X(12).
      *    03 SCR-CPRO                    PIC X(06).
           03 SCR-RFBY                    PIC X(01).
      *    03 FILLER                      PIC X(05).
           03 SCR-NTRV                    PIC X(04).
           03 FILLER                      PIC X(01).
      *
           03 SCR-NTRN                    PIC X(04).
           03 SCR-PROG                    PIC X(08).
           03 IFD-PROG REDEFINES SCR-PROG PIC X(08).
           03 SCR-NLIB                    PIC X(07).
           03 SCR-NMAP                    PIC X(07).
           03 SCR-LDOC                    PIC X(25).
           03 SCR-NDOC                    PIC X(12).
           03 SCR-FRET                    PIC X(12).
           03 SCR-IPRV                    PIC X(01).
           03 SCR-SISG                    PIC X(03).
           03 SCR-STAT                    PIC X(01).
           03 SCR-INST                    PIC X(03).
           03 SCR-VFLD                    PIC X(01).
           03 SCR-ACTU                    PIC X(03).
           03 SCR-TFUN                    PIC X(03).
           03 SCR-CMNP                    PIC X(08).
           03 SCR-FFLD                    PIC X(01).
              88 SCR-FFLD-RET   VALUE ''''.
              88 SCR-FFLD-PF1   VALUE '1'.
              88 SCR-FFLD-PF2   VALUE '2'.
              88 SCR-FFLD-PF3   VALUE '3'.
              88 SCR-FFLD-PF4   VALUE '4'.
              88 SCR-FFLD-PF5   VALUE '5'.
              88 SCR-FFLD-PF6   VALUE '6'.
              88 SCR-FFLD-PF7   VALUE '7'.
              88 SCR-FFLD-PF8   VALUE '8'.
              88 SCR-FFLD-PF9   VALUE '9'.
              88 SCR-FFLD-PF10  VALUE ':'.
              88 SCR-FFLD-PF11  VALUE '#'.
              88 SCR-FFLD-PF12  VALUE '@'.
              88 SCR-FFLD-PFA   VALUE 'A'.
              88 SCR-FFLD-PFB   VALUE 'B'.
              88 SCR-FFLD-PFC   VALUE 'C'.
              88 SCR-FFLD-PFD   VALUE 'D'.
              88 SCR-FFLD-PFE   VALUE 'E'.
              88 SCR-FFLD-PFF   VALUE 'F'.
              88 SCR-FFLD-PFG   VALUE 'G'.
              88 SCR-FFLD-PFH   VALUE 'H'.
              88 SCR-FFLD-PFI   VALUE 'I'.
              88 SCR-FFLD-PFJ   VALUE '['.
              88 SCR-FFLD-PFK   VALUE '.'.
              88 SCR-FFLD-PFL   VALUE '<'.
           03 SCR-I                       PIC 9(02).
           03 SCR-CMND                    PIC X(03).
           03 SCR-MFLD                    PIC X(01).
           03 SCR-PRMC                    PIC X(25).
           03 SCR-CCPP                    PIC X(03).
           03 SCR-STPP                    PIC X(01).
           03 SCR-CRPF.
              05 SCR-TABL OCCURS 10   INDEXED BY SCR-ITBL.
                 07 SCR-COD-CCMN          PIC X(03).
                 07 SCR-COD-CCPP          PIC X(03).
                 07 SCR-IND-STPP          PIC X(01).
              05 SCR-GLS-UARC             PIC X(12) OCCURS 10.
              05 SCR-GLS-PRMT             PIC X(25) OCCURS 10.
              05 SCR-GLS-CONF             PIC X(25) OCCURS 10.
           03 SCR-USER                    PIC X(12).
           03 SCR-OTRN                    PIC X(04).
      *    03 FILLER                      PIC X(09).
           03 SCR-PROV                    PIC X(08).
           03 FILLER                      PIC X(01).
      *
           03 SCR-UMOD                    PIC X(14).
           03 IFD-FSIS.
              05 IFD-VSIS OCCURS 30   INDEXED BY IFD-ITBL.
                 07 IFD-DSIS.
                    09 IFD-SIST           PIC X(03).
                    09 IFD-QSIS           PIC X(01).
                 07 IFD-GSIS              PIC X(03).
           03 SCR-ICMN                    PIC X(01).
              88 SCR-DESDE-MEN VALUE 'M'.
              88 SCR-DESDE-HDR VALUE 'H'.
              88 SCR-DESDE-CMN VALUE 'C'.
              88 SCR-DESDE-PGM VALUE 'P'.
           03 SCR-DISP                    PIC X(05).
      * COPY GNSWGCMN.
       01  CMN-VARI.
           03 CMN-SIND.
              05 CMN-I                PIC 9(02).
              05 CMN-K                PIC 9(02).
           03 CMN-IDX-CCMN    VALUE SPACES.
              05 CMN-VEC-CCMN OCCURS 10.
                 07 CMN-COD-CCMN      PIC X(03).
                 07 FILLER            PIC X(01).

      * COPY GNSWVFIO.
       01  FIO-VARI.
      *    Nombre de la llave alternativa
           03 FIO-AKEY                                  PIC X(32).
      *    Esta variable FILE STATUS es el codigo de retorno
      *    de las subrutinas FIO
           03 FIO-STAT.
      *          Created Duplicate Key
                 88 FIO-STAT-CDK        VALUE '02'.
      *          End Of File
                 88 FIO-STAT-EOF        VALUE '10'.
      *          No Ascending Key
                 88 FIO-STAT-NAK        VALUE '21'.
      *          Invalid KeY
                 88 FIO-STAT-IKY        VALUE '22' '23'.
      *          Duplicate Alternate Key
                 88 FIO-STAT-DAK        VALUE '22'.
      *          Record Not Found
                 88 FIO-STAT-RNF        VALUE '23'.
      *          Boundary Violation Error
                 88 FIO-STAT-BVE        VALUE '24' '34'.
      *          Other Permanent Errors
                 88 FIO-STAT-OPE        VALUE '30'.
      *          Other Device Errors
                 88 FIO-STAT-ODE        VALUE '90'.
      *          PassWord Failure
                 88 FIO-STAT-PWF        VALUE '91'.
      *          LoGic Error
                 88 FIO-STAT-LGE        VALUE '92'.
      *          Resource Not Available
                 88 FIO-STAT-RNA        VALUE '93'.
      *          No Previous Read
                 88 FIO-STAT-NPR        VALUE '94'.
      *          Invalid or incomplete File Information
                 88 FIO-STAT-IFI        VALUE '95'.
      *          Bad File Identification
                 88 FIO-STAT-BFI        VALUE '96'.
      *          File Intergrity Verified
                 88 FIO-STAT-FIV        VALUE '97'.
      *             Fatal
                    88 FIO-STAT-FTL        VALUE '99'.
      *             Duplicate Master Key
                    88 FIO-STAT-DMK        VALUE '22'.
      *             Invalid Master Key
                    88 FIO-STAT-IMK        VALUE '23'.
      *             Special Deleted Record
                    88 FIO-STAT-SDR        VALUE '43'.
      *             Exclusive Control Duplicate
                    88 FIO-STAT-ECD        VALUE '44'.
      *             Set Selection Interrupt
                    88 FIO-STAT-SSI        VALUE '45'.
      *             Attempt to Position PAST END/BEG-OF-SET
                    88 FIO-STAT-APS        VALUE '46'.
      *             Exclusive Control Interlock
                    88 FIO-STAT-ECI        VALUE '47'.
                 05 FIO-STT1                    PIC 9(01).
      *               OK Status
                      88 FIO-STAT-OKS   VALUE 0.
      *               At End Status
                      88 FIO-STAT-AES   VALUE 1.
      *               Invalid Key Status
                      88 FIO-STAT-IKS   VALUE 2.
      *               ERRors
                      88 FIO-STAT-ERR   VALUE 3.
      *               DATACOM Errors
                      88 FIO-STAT-DTC   VALUE 4.
      *               Device Dependant Errors
                      88 FIO-STAT-DDE   VALUE 9.
                 05 FIO-STT2                    PIC 9(01).
      *               No Further Information
                      88 FIO-STAT-NFI   VALUE 0.
      *               SEQuential access
                      88 FIO-STAT-SEQ   VALUE 1.
      *               DUPlicates
                      88 FIO-STAT-DUP   VALUE 2.
      *               No Current Record
                      88 FIO-STAT-NCR   VALUE 3.
      *    Comando de las Subrutinas FIO
           03 FIO-CMND                 VALUE  0 PIC 9(04).
      *    Esta  variable  RECORD LENGTH  debe ser  llenada  con el
      *    largo  del  registro, para  registros de largo variable,
      *    antes de llamar a las subrutinas FIO con comando REC_LEN
           03 FIO-RLEN     COMP                 PIC S9(04).
      *    Value Of ID
           03 FIO-VOID.
      *       Sistema
              05 FIO-SIST                       PIC X(03).
      *       Tipo
              05 FIO-FTYP                       PIC X(01).
      *       Nombre
              05 FIO-FNAM                       PIC X(04).

      * COPY GNSWCFIO.
      *    Constantes para las rutinas FIO's
       01  FIO-CTTS.
      *    Comandos para las rutinas FIO's
           03 FIO-VCMN.
      *       Read Key
              05 FIO-GET-KEY           VALUE  1 PIC 9(04).
      *       Read Next
              05 FIO-GET-NXT           VALUE  2 PIC 9(04).
      *       Start First + Read Next
              05 FIO-GET-FST           VALUE  3 PIC 9(04).
      *       Start Not Less + Read Next
              05 FIO-GET-NLS           VALUE  4 PIC 9(04).
      *       Write
              05 FIO-PUT               VALUE  6 PIC 9(04).
      *       Rewrite
              05 FIO-MOD               VALUE  7 PIC 9(04).
      *       Start Not Less
              05 FIO-FND-NLS           VALUE 16 PIC 9(04).
      *       Read Key ( Alternate Key )
              05 FIO-GET-KEY-ALT       VALUE 26 PIC 9(04).
      *       Start First + Read Next ( Alternate Key )
              05 FIO-GET-FST-ALT       VALUE 27 PIC 9(04).
      *       Start Not Less + Read Next ( Alternate Key )
              05 FIO-GET-NLS-ALT       VALUE 28 PIC 9(04).
      *       Get Next con llave Alternativa
              05 FIO-GET-NXT-ALT       VALUE 34 PIC 9(04).
      *       Get Key Update con llave Alternativa
              05 FIO-GET-KEY-UPD-ALT   VALUE 35 PIC 9(04).
      *       Get Key Update
              05 FIO-GET-KEY-UPD       VALUE 36 PIC 9(04).
      *       End Browse
              05 FIO-END-BRW           VALUE 37 PIC 9(04).
      *
      *    Programa que usa servicio de FIO
           03 FIO-PROG                          PIC X(08).
      *    Valor de Key
      *    03 FIO-VKEY                          PIC X(50).
           03 FIO-VKEY                          PIC X(180).
      *    Key Length
           03 FIO-KLEN  COMP                    PIC S9(4).
      *    Campo Data para FIO
      *    03 FIO-DFLD                          PIC X(1024).
           03 FIO-DFLD                          PIC X(500).
      *    Mensaje
           03 FIO-MENS              VALUE SPACES.
      *       Mensaje 1
              05 FIO-MEN1                       PIC X(71).
      *       Mensaje 2
              05 FIO-MEN2                       PIC X(09).
           03 FIO-MENS-RED REDEFINES FIO-MENS.
              05 FIO-MENS-DSC                   PIC X(13).
              05 FILLER                         PIC X(01).
              05 FIO-MENS-STT                   PIC X(02).
              05 FIO-MENS-SST                   PIC X(01).
              05 FILLER                         PIC X(01).
              05 FIO-MENS-GKY                   PIC X(03).
              05 FILLER                         PIC X(01).
              05 FIO-MENS-KEY                   PIC X(32).
              05 FIO-MENS-KEY-RED REDEFINES FIO-MENS-KEY.
                 07 FIO-MENS-KDT                PIC X(05).
                 07 FILLER                      PIC X(01).
                 07 FIO-MENS-GBD                PIC X(10).
                 07 FILLER                      PIC X(01).
                 07 FIO-MENS-DBI                PIC X(05).
                 07 FILLER                      PIC X(10).
              05 FILLER                         PIC X(01).
              05 FIO-MENS-GCM                   PIC X(03).
              05 FILLER                         PIC X(01).
              05 FIO-MENS-CMD                   PIC X(05).
              05 FILLER                         PIC X(01).
              05 FIO-MENS-GFL                   PIC X(04).
              05 FILLER                         PIC X(01).
              05 FIO-MENS-FIL                   PIC X(09).
              05 FIO-MENS-FIL-RED REDEFINES FIO-MENS-FIL.
                 07 FIO-MENS-SIS                PIC X(03).
                 07 FIO-MENS-REG                PIC X(06).
      *
      *    Indicador de uso de Llave alternativa
           03 FIO-IAKY                 VALUE  0 PIC 9(04).
              88 FIO-IAKY-CON          VALUE 26 THRU 35.
      *    Indicador de uso de Llave alternativa
           03 FIO-IGET                 VALUE  0 PIC 9(04).
              88 FIO-IGET-YES          VALUE  1 THRU 5, 26 THRU 29,
                                             34, 35, 36, 39, 40.
      *    Indicador de Llaves de Default
           03 FIO-KDEF                 VALUE 0 PIC 9(01).
           03 FIO-KDEF-N               VALUE 0 PIC 9(01).
           03 FIO-KDEF-S               VALUE 1 PIC 9(01).

       COPY GNSWGFRM.
       COPY GNSWITRL.
       COPY GNSWIOPC.
       COPY GNSWIOP1.
       COPY GNSBRMSG.
      *
       COPY GNSWGRQA.
       COPY GNSWGUIB.
       COPY GNSWGELS.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-MSG-REQA==.
      *
       01  RFN-VARI.
           03  RFN-COLA.
               05  RFN-TYPE VALUE 'GRET'            PIC X(04).
               05  RFN-TERM                         PIC X(04).
           03  RFN-LITM     COMP                    PIC S9(04).
           03  RFN-ITEM.
               05  RFN-PROG                         PIC X(08).
               05  RFN-FUNC.
                   07  RFN-SIST                     PIC X(03).
                   07  RFN-SISG                     PIC X(03).
                   07  RFN-NEMO                     PIC X(12).
                   07  RFN-CMND                     PIC X(03).
      *
       01  WSS-VARI.
           03 WSS-CCOD                   VALUE SPACES PIC X(05).
              88 WSS-CCOD-APCT           VALUE 'APCT'.
              88 WSS-CCOD-ABM0           VALUE 'ABM0'.
           03 WSS-DFLD.
              05 WSS-NTRN                             PIC X(04).
              05 WSS-CAXC.
                 07 WSS-SIST.
                    09 WSS-CSIS OCCURS 3              PIC X(01).
                 07 WSS-FILL                          PIC X(01).
                 07 WSS-SISG                          PIC X(03).
                 07 WSS-DISP                          PIC X(09).
           03 WSS-FUNC.
              05 WSS-FCHR OCCURS 11                   PIC X(01).
           03 WSS-AFUN.
              05 WSS-ACHR OCCURS 11                   PIC X(01).
           03 WSS-OPCI.
              05 WSS-COPC OCCURS 3                    PIC X(01).
           03 WSS-CMND.
              05 WSS-CCMD OCCURS 3                    PIC X(01).
           03 WSS-MAUT.
              05 WSS-FILA OCCURS 12.
                 07 WSS-COLU OCCURS 09.
                    09 WSS-AUTO                  PIC 9(02).
           03 WSS-MAUT-RED REDEFINES WSS-MAUT.
              05 WSS-ITM1                        PIC X(18).
              05 WSS-ITM2                        PIC X(18).
              05 WSS-ITM3                        PIC X(18).
              05 WSS-ITM4                        PIC X(18).
              05 WSS-ITM5                        PIC X(18).
              05 WSS-ITM6                        PIC X(18).
              05 WSS-ITM7                        PIC X(18).
              05 WSS-ITM8                        PIC X(18).
              05 WSS-ITM9                        PIC X(18).
              05 WSS-ITMA                        PIC X(18).
              05 WSS-ITMB                        PIC X(18).
              05 WSS-ITMC                        PIC X(18).
           03 WSS-STDO                   VALUE 1 PIC 9(02).
           03 WSS-ISIS                   VALUE 0 PIC 9(02).
           03 WSS-IOPC                   VALUE 0 PIC 9(02).
           03 WSS-ICMD                   VALUE 0 PIC 9(02).
           03 WSS-IMAX                   VALUE 0 PIC 9(02).
           03 WSS-IVAL                   VALUE 9 PIC 9(02).
              88 FUNCION-INVALIDA        VALUE 0.
              88 FUNCION-VALIDA          VALUE 1.
           03 WSS-SIND.
              05 WSS-I                           PIC 9(02).
              05 WSS-J                           PIC 9(02).
              05 WSS-K                           PIC 9(02).
              05 WSS-L                           PIC 9(02).
              05 WSS-M                           PIC 9(02).
           03 WSS-AUXI                           PIC X(03).
           03 UYP-PRTA.
              05 UYP-PROG                        PIC X(08).
              05 FILLER                VALUE '/' PIC X(01).
              05 UYP-CMND                        PIC X(03).
           03 WSS-MENS.
              05 WSS-MEN1                        PIC X(40).
              05 WSS-MEN2                        PIC X(79).
           03 WSS-COD-MENS.
              05 WSS-COD-TMSG.
                 07 WSS-COD-TMN1                 PIC X(03).
                 07 WSS-COD-TMN2                 PIC X(03).
                 07 WSS-COD-TMN3                 PIC X(01).
              05 WSS-COD-CMSG                    PIC X(05).
           03 WSS-ICMN                           PIC X(01).
              88 WSS-DESDE-CMN VALUE 'K'.
      *************************************************************
           03 WSS-IND-CMND             VALUE 0   PIC 9(01).
              88 WSS-EXISTE-COMANDO    VALUE 1.
              88 WSS-COMANDO-SINPRV    VALUE 2.
      *
           03 WSS-AUX-CMNP                       PIC X(08).
           03 WSS-AUX-PRMC                       PIC X(25).
           03 WSS-AUX-CMND                       PIC X(03).
           03 WSS-AUX-CRPF.
              05 WSS-TABL OCCURS 10.
                 07 WSS-COD-CCMN                 PIC X(03).
                 07 WSS-COD-CCPP                 PIC X(03).
                 07 WSS-IND-STPP                 PIC X(01).
              05 WSS-GLS-UARC                    PIC X(12) OCCURS 10.
              05 WSS-GLS-PRMT                    PIC X(25) OCCURS 10.
              05 WSS-GLS-CONF                    PIC X(25) OCCURS 10.
           03 WSS-IPRV                           PIC X(01).
              88 WSS-IPRV-TODO        VALUE '*'.
              88 WSS-IPRV-TODOS-MENUS VALUE '*', 'O', 'U', 'Q'.
              88 WSS-IPRV-TODOS-MAN   VALUE '*', 'U', 'M'.
              88 WSS-IPRV-TODOS-CON   VALUE '*', 'Q', 'C'.
           03 WSS-KNMO.
              05 WSS-KNMO-SIST                   PIC X(03).
              05 WSS-KNMO-SISG                   PIC X(03).
              05 WSS-KNMO-NEMO                   PIC X(12).
              05 WSS-KNMO-CMND                   PIC X(03).
      * Variables que vienen de GNSPPOPC
       01  WSS-VOPC.
           03 WSS-STAT              VALUE 0        PIC 9(01).
              88 WSS-STAT-OKS       VALUE 0.
              88 WSS-STAT-WRN       VALUE 1.
              88 WSS-STAT-MAL       VALUE 2.
           03 WSS-SIND.
              05 I                                 PIC 9(02).
              05 J                                 PIC 9(02).
              05 K                  VALUE 0        PIC 9(02).
              05 L                  VALUE 0        PIC 9(02).
              05 IMIN               VALUE 0        PIC 9(02).
              05 IMAX               VALUE 0        PIC 9(02).
           03 WSS-RMNU                             PIC X(490).
           03 WSS-NSIS                             PIC X(003).
           03 WSS-MENU                             PIC X(003).
           03 WSS-NEMO                             PIC X(012).
           03 WSS-NEMO-RED REDEFINES WSS-NEMO.
              05 WSS-NEMO-CHR OCCURS 12            PIC X(01).
           03 WSS-IFRM                   VALUE '0' PIC X(01).
      *Variables para GNSSCRHDR
       01  HEA-VARI.
           03 HEA-SIMP              VALUE SPACES.
              05 HEA-GLS-SIMP       OCCURS 31      PIC X(01).
           03 HEA-DOBL              VALUE SPACES.
              05 HEA-GLS-DOBL       OCCURS 61      PIC X(01).
           03 HEA-FEC-DMSA.
              05 HEA-NUM-DMSA                      PIC 9(02).
              05 HEA-GLS-SLA1                      PIC X(01).
              05 HEA-NUM-MMSA                      PIC 9(02).
              05 HEA-GLS-SLA2                      PIC X(01).
              05 HEA-NUM-SMSA                      PIC 9(02).
              05 HEA-NUM-AMSA                      PIC 9(02).
       COPY GNSWGHOY.
       COPY GNSWGSYS.
       COPY GNSWIHDR.
      * Variables para Manejo de Usuarios y privilegios.
           COPY USPC113.

       01  AUX-VARI.
           03 AUX-UARC.
              05 AUX-RPRG                        PIC X(08).
              05 AUX-RTRN                        PIC X(04).
           03 AUX-PRGM.
              05 AUX-PROG                        PIC X(08).
              05 AUX-NTRN                        PIC X(04).

       01  IFD.
           03  FILLER                            PIC X(01).
           03  IFD-COD-CIFD                      PIC X(12).
           03  IFD-GLS-DATA                      PIC X(210).
           03  FILLER                            PIC X(18).
      *POR MIENTRAS POR EL XCONTROL QUE SE HACE DESDE MENU
       01  WSS-CMMA.
           03 WSS-RFUN                             PIC X(300).
           03 WSS-NSXC                             PIC X(003).
           03 WSS-GSXC                             PIC X(003).
           03 FILLER                               PIC X(011).
      *
       01  WSS-CHK-SIST                  VALUE ' ' PIC X(01).
           88 WSS-CHK-SIST-SI            VALUE 'S'.

      * COPY GNSWGQUE.
      *  Variables para Manejo de Colas.
       01  QUE-VARI.
           03 QUE-COLA.
              05 QUE-TERM                              PIC  X(04).
              05 QUE-TYPE                              PIC  X(04).
           03 QUE-NITM       COMP VALUE +0             PIC S9(04).
           03 QUE-LITM       COMP                      PIC S9(04).
           03 QUE-ITEM.
              05 QUE-IKEY                              PIC  X(03).
      *        05 QUE-LDAT    COMP VALUE +0             PIC S9(04).
      *        05 QUE-PCUR    COMP VALUE +0             PIC S9(04).
      *        05 QUE-DATA                              PIC  X(3000).
           03 QUE-STAT            VALUE 'OKS'          PIC  X(03).
           03 QUE-STAT-OKS        VALUE 'OKS'          PIC  X(03).
           03 QUE-STAT-NEX        VALUE 'NEX'          PIC  X(03).
           03 QUE-STAT-EOQ        VALUE 'EOQ'          PIC  X(03).
           03 QUE-CMND                                 PIC  X(03).
           03 QUE-MENS.
              05 QUE-MEN1                              PIC  X(40).
              05 QUE-MEN2                              PIC  X(39).
       01  QUE-CTTS.
      *     03 QUE-PUT             VALUE 'PUT'          PIC  X(03).
           03 QUE-GET             VALUE 'GET'          PIC  X(03).
      *     03 QUE-MOD             VALUE 'MOD'          PIC  X(03).
      *     03 QUE-DEL             VALUE 'DEL'          PIC  X(03).

      *PARA TFUN = 'PTC'
       01  WSS-PPPV.
           03 WSS-PROV                                  PIC X(08).
           03 FILLER                                    PIC X(01).
           03 WSS-NTRV                                  PIC X(04).

       LINKAGE SECTION.
      *----------------
       01  DFHCOMMAREA.
           02 FILLER                             PIC X(1110).
       COPY GNSLGFIO.

       PROCEDURE DIVISION.
      *===================


       MAIN SECTION.
       INI-MAIN.
      * Rutina que detecta transaccion invocada directamente
           COPY USPC143.

           PERFORM GNS-PRO-KEY.

           PERFORM CIC-ERR THRU FIN-CIC-ERR.
           EXEC CICS HANDLE AID
                     CLEAR (CMN-ERR-CLR)
                     PA1   (CMN-ERR-PA2)
                     PA2   (CMN-ERR-PA2)
           END-EXEC.
           EXEC CICS HANDLE ABEND
                     LABEL (CMN-ERR-ABN)
           END-EXEC.

           MOVE 'GNSPPOPC' TO IFD-COD-CIFD IN IFD.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM GNS-FIO-IFD.
           IF NOT FIO-STAT-OKS
               MOVE 'DEFAULT' TO IFD-COD-CIFD IN IFD
               MOVE FIO-GET-KEY TO FIO-CMND
               PERFORM GNS-FIO-IFD
               IF NOT FIO-STAT-OKS
                   PERFORM BUS-FSIS
               ELSE
                   MOVE IFD-GLS-DATA IN IFD TO IFD-FSIS
           ELSE
               MOVE IFD-GLS-DATA IN IFD TO IFD-FSIS.

      *JSS IF EIBCALEN = 0 OR EIBCALEN = 7
           IF EIBCALEN = 0 OR EIBCALEN = 317
      *
               MOVE 'K'      TO SCR-ICMN
               MOVE SCR-ICMN TO WSS-ICMN
      *
               MOVE USP-COD-USUARIO  TO SCR-USER
               MOVE USP-COD-TERMINAL TO SCR-OTRN
               PERFORM INI-SIST
      *        PERFORM BUS-MGKY
               PERFORM PRO-RMNU
           ELSE
           IF EIBCALEN = 21
               MOVE DFHCOMMAREA TO WSS-KNMO
               MOVE 'K'      TO SCR-ICMN
               MOVE SCR-ICMN TO WSS-ICMN
               PERFORM INI-FUNC
               PERFORM CHK-PRV-SIST
      *        PERFORM PRO-RMNU
               PERFORM PRO-FIN
           ELSE
               MOVE DFHCOMMAREA TO SCR-VARI
      *
               MOVE IFD-GLS-DATA IN IFD TO IFD-FSIS
      *
               MOVE USP-COD-USUARIO  TO SCR-USER
               MOVE USP-COD-TERMINAL TO SCR-OTRN
               MOVE SCR-ICMN TO WSS-ICMN
               IF ( NOT WSS-DESDE-CMN ) AND
                  ( SCR-TFUN = 'HMX' OR 'XMX' OR 'RET' )
      *           AND EXISTIA COMANDO ORIGINAL EN EL MNU......
                   MOVE SPACES       TO WSS-FUNC
                   MOVE FRM-FFLD-PF3 TO FRM-FFLD
                   GO TO RET-LEE-CMND.

           IF SCR-INST = SCR-INST-HCM
               MOVE SCR-INST-GFL TO SCR-INST
               IF ( NOT EIBCALEN = 0 ) AND SCR-GLS-UARC(SCR-I) > SPACES
                   MOVE SCR-GLS-UARC( SCR-I ) TO AUX-UARC

                   MOVE SCR-PROG TO AUX-PROG
                   MOVE SCR-NTRN TO AUX-NTRN
                   MOVE AUX-PRGM TO SCR-GLS-UARC( SCR-I )

                   MOVE AUX-RPRG TO SCR-PROG
                   MOVE AUX-RTRN TO SCR-NTRN

                   PERFORM HBL-CMN
               ELSE
                   PERFORM HBL-CMN
           ELSE
           IF SCR-INST = SCR-INST-GFL
               PERFORM LEE-CACC
               PERFORM CAL-PROG.
           GOBACK.
       FIN-MAIN.
           EXIT.

       INI-SIST SECTION.
       INI-INI-SIST.
           IF EIBCALEN = 0
               MOVE +20     TO FRM-LFLD
               MOVE FRM-RCV TO FRM-CMND
               PERFORM GNS-PRO-FRM
               MOVE FRM-DFLD TO WSS-DFLD
           ELSE
      *JSS      MOVE DFHCOMMAREA TO WSS-CAXC.
               MOVE DFHCOMMAREA TO WSS-CMMA
               MOVE WSS-NSXC    TO WSS-SIST
               MOVE WSS-GSXC    TO WSS-SISG.
      *
           MOVE WSS-SIST TO SCR-SIST.
           MOVE WSS-SISG TO SCR-SISG.
           MOVE 'SIS' TO MNU-COD-NEMO.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM VID-MNU.
           IF NOT FIO-STAT-OKS
               MOVE 'GNS' TO MSG-COD-SIST
               MOVE 'CODNEMOSISNX' TO MSG-COD-MENS
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS
               MOVE FRM-MSG      TO FRM-CMND
               PERFORM GNS-PRO-FRM
               GOBACK
           ELSE
               MOVE SCR-SIST TO MNU-COD-SIST.
           PERFORM CHK-PRV-SIST.
       FIN-INI-SIST.
           EXIT.

       INI-FUNC SECTION.
       INI-INI-FUNC.
           MOVE WSS-KNMO-SIST TO SCR-SIST.
           MOVE WSS-KNMO-SISG TO SCR-SISG.

           EXEC CICS HANDLE CONDITION
                     NOTOPEN (INI-FUNC-NOP)
                     DSIDERR (INI-FUNC-DSI)
           END-EXEC.
           MOVE SCR-SIST      TO FIO-SIST.
           MOVE WSS-KNMO-NEMO TO MNU-COD-NEMO.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM GNS-FIO-MNU.
           IF NOT FIO-STAT-OKS
               MOVE 'CODNEMOSISNX' TO MSG-COD-MENS
               GO TO ERR-INI-FUNC.

           IF MNU-COD-SIST NOT > SPACES
               MOVE SCR-SIST TO MNU-COD-SIST.
           IF WSS-KNMO-CMND > SPACES
               MOVE WSS-KNMO-CMND TO MNU-COD-CMND.
           GO TO FIN-INI-FUNC.
       INI-FUNC-NOP.
           MOVE 'SIS    NOPEN' TO MSG-COD-MENS.
           GO TO ERR-INI-FUNC.
       INI-FUNC-DSI.
           MOVE 'SIS    NEXST' TO MSG-COD-MENS.
       ERR-INI-FUNC.
           MOVE 'GNS' TO MSG-COD-SIST.
           PERFORM GET-MSG.
           MOVE MSG-GLS-DESC TO FRM-MENS.

           PERFORM FST-CMN.
           PERFORM CMN-MSSG.
           PERFORM CMN-PUTA.

      *EN VEZ DEL GOBACK COPIAR MODULO QUE SEPA VOLVER
           GOBACK.
       FIN-INI-FUNC.
           EXIT.

       CHK-PRV-CMND SECTION.
       INI-CHK-PRV-CMND.
      * llamada a la rutina de verificacion de permisos para verificar
      * si tiene permiso para todos los comandos
           MOVE SCR-IPRV TO WSS-IPRV.

           MOVE MNU-GLS-PROG TO UYP-PROG.
           MOVE '*'          TO UYP-CMND.
           MOVE UYP-PRTA     TO USP-PTA-STR.
           COPY USPC103.
           IF USP-PERMISO = 'P'
               GO TO FIN-CHK-PRV-CMND.

       MAN-CHK-PRV-CMND.
           IF WSS-IPRV-TODOS-MAN
               GO TO BEG-CHK-PRV-CMND.
           MOVE MNU-GLS-PROG TO UYP-PROG.
           MOVE 'MAN'        TO UYP-CMND.
           MOVE UYP-PRTA     TO USP-PTA-STR.
           COPY USPC103.
           IF USP-PERMISO = 'P'
               MOVE 'M' TO WSS-IPRV.

       BEG-CHK-PRV-CMND.
           MOVE 0 TO WSS-I.
       LUP-CHK-PRV-CMND.
           ADD 1 TO WSS-I.
           IF WSS-I > 10
               GO TO FIN-CHK-PRV-CMND.
           IF ( WSS-COD-CCMN( WSS-I ) NOT > SPACES ) OR

              ( ( WSS-COD-CCMN( WSS-I ) = 'CON' OR 'ACT' OR 'MOD' OR
                  'ING' ) AND WSS-IPRV-TODOS-MAN ) OR

              ( WSS-COD-CCMN( WSS-I ) = 'CON' AND WSS-IPRV-TODOS-CON )
               GO TO LUP-CHK-PRV-CMND.

      * llamada a la rutina de verificacion de permisos para verificar
      * un comando a la vez
           MOVE WSS-COD-CCMN( WSS-I ) TO UYP-CMND.
           MOVE UYP-PRTA TO USP-PTA-STR.
           COPY USPC103.
           IF ( USP-PERMISO NOT = 'P' )        AND
              ( MNU-COD-CMND IN MNU > SPACES ) AND
              ( MNU-COD-CMND IN MNU = WSS-COD-CCMN( WSS-I ) )
               MOVE 2 TO WSS-IND-CMND.

           IF USP-PERMISO NOT = 'P'
               MOVE SPACES TO WSS-TABL( WSS-I )
               MOVE SPACES TO WSS-GLS-UARC( WSS-I )
               MOVE SPACES TO WSS-GLS-PRMT( WSS-I )
               MOVE SPACES TO WSS-GLS-CONF( WSS-I ).
           GO TO LUP-CHK-PRV-CMND.
       FIN-CHK-PRV-CMND.
           EXIT.

       LEE-CACC SECTION.
       INI-LEE-CACC.
           PERFORM LEE-CMND.
           PERFORM PUT-DCMN.
           PERFORM CMN-PUTA.
       FIN-LEE-CACC.
           EXIT.

       LEE-CMND SECTION.
       INI-LEE-CMND.
           PERFORM GET-CMND.
           MOVE SPACES TO TRL-GLS-MENS.
           MOVE TRL-COD-CACC TO WSS-FUNC.
           IF FRM-FFLD = FRM-FFLD-PA2
               MOVE 'SIS' TO MNU-COD-NEMO
               MOVE FIO-GET-KEY TO FIO-CMND
               MOVE SCR-SIST    TO FIO-SIST
               PERFORM GNS-FIO-MNU
               IF NOT FIO-STAT-OKS
                   MOVE 'CODNEMOSISNX' TO MSG-COD-MENS
                   GO TO ERR-LEE-CMND
               ELSE
                   GO TO TCT-LEE-CMND.
       RET-LEE-CMND.
           IF WSS-FUNC NOT > SPACES
               IF FRM-FFLD = FRM-FFLD-RET
                   MOVE 'CAC    BLK' TO MSG-COD-MENS
                   GO TO ERR-LEE-CMND
               ELSE
               IF FRM-FFLD = FRM-FFLD-PF3
                   MOVE SCR-FRET    TO MNU-COD-NEMO
                   MOVE FIO-GET-KEY TO FIO-CMND
                   MOVE SCR-SIST    TO FIO-SIST
                   PERFORM GNS-FIO-MNU
                   IF NOT FIO-STAT-OKS
                       MOVE 'CODFRETNEXST' TO MSG-COD-MENS
                       GO TO ERR-LEE-CMND
                   ELSE
                       PERFORM PRO-FIN.
           PERFORM SHF-CACC.
           PERFORM INI-AUTO.
           PERFORM PRO-AUTO VARYING WSS-I FROM 1 BY 1
                            UNTIL WSS-I > 11.
           IF FUNCION-INVALIDA
               MOVE 'FUN    INV' TO MSG-COD-MENS
               GO TO ERR-LEE-CMND.
           PERFORM UNS-CACC.
      *Decidir en Base a Teclas ENTER y PF3........
      *Si existe sistema o si existe opcion
           IF WSS-ISIS > 0 OR WSS-IOPC > 0 OR FRM-FFLD = FRM-FFLD-PF3
               PERFORM PRO-TCTL.
           PERFORM BUS-CMND.
           IF MSG-COD-MENS NOT > SPACES
               GO TO FIN-LEE-CMND.
       TCT-LEE-CMND.
           PERFORM PRO-TCTL.
       ERR-LEE-CMND.
      *A este parrafo se viene si ocurrio un error, por lo tanto si se trato
      *previamente de accesar otro sistema, debe 'devolver el perfil de usuario'
      *por eso se llama a USPC104 nuevamente.
           IF WSS-CHK-SIST-SI
               MOVE SCR-SIST TO USP-SISTEMA
               COPY USPC104.
           IF WSS-CHK-SIST-SI
               PERFORM CHK-PRV-SIST.
           MOVE SPACES TO WSS-CHK-SIST.

           MOVE 'GNS' TO MSG-COD-SIST.
           PERFORM GET-MSG.
           IF FRM-MENS NOT > SPACES
               MOVE MSG-GLS-DESC TO FRM-MENS
           ELSE
           IF FRM-MEN1 NOT > SPACES
               MOVE MSG-GLS-DESC TO FRM-MEN1
           ELSE
           IF FRM-MEN2 NOT > SPACES
               MOVE MSG-GLS-DESC TO FRM-MEN2.
           PERFORM FST-CMN.
           PERFORM CMN-MSSG.
           PERFORM CMN-PUTA.
           PERFORM CMN-EXIT.
       FIN-LEE-CMND.
           MOVE CMN-I TO SCR-I.
           MOVE FRM-FFLD TO SCR-FFLD.

       GET-CMND SECTION.
       INI-GET-CMND.
           MOVE 'GNSFCMN' TO FRM-NAME.
           MOVE 'GNSACMN' TO FRM-NLIB.
           MOVE FRM-GET-ALL TO FRM-CMND.
           PERFORM GNS-PRO-FRM.
           IF NOT ( FRM-FFLD = FRM-FFLD-RET OR FRM-FFLD-PF3 OR
                               FRM-FFLD-PA2 )
                  MOVE 'PFSINV' TO MSG-COD-MENS
                  MOVE 'GNS'    TO MSG-COD-SIST
                  PERFORM GET-MSG
                  MOVE MSG-GLS-DESC TO FRM-MENS
                  PERFORM FST-CMN
                  PERFORM CMN-MSSG
                  PERFORM CMN-PUTA
                  PERFORM CMN-EXIT.
           MOVE FRM-DFLD TO TRL-FLD.
           IF FRM-FFLD = FRM-FFLD-PA2
      *JSS     MOVE FRM-FFLD-TAB TO FRM-FFLD
               MOVE 'SIS'        TO TRL-COD-CACC.
       FIN-GET-CMND.
           EXIT.

       SHF-CACC SECTION.
       INI-SHF-CACC.
           MOVE SPACES TO WSS-AFUN.
           MOVE 1 TO WSS-I WSS-L.
       LUP-SHF-CACC.
           IF WSS-FCHR( WSS-I ) > SPACES
               MOVE WSS-FCHR( WSS-I ) TO WSS-ACHR( WSS-L )
               ADD 1 TO WSS-L.
           ADD 1 TO WSS-I.
           IF WSS-I NOT > 11
               GO TO LUP-SHF-CACC.
           MOVE WSS-AFUN TO WSS-FUNC.
       FIN-SHF-CACC.
           EXIT.

       INI-AUTO SECTION.
       INI-INI-AUTO.
           MOVE '000002020000000100' TO WSS-ITM1.
           MOVE '010003030000090800' TO WSS-ITM2.
           MOVE '010004040000090800' TO WSS-ITM3.
           MOVE '010000000505090400' TO WSS-ITM4.
           MOVE '010006060000000500' TO WSS-ITM5.
           MOVE '010007070000090800' TO WSS-ITM6.
           MOVE '010008080000090800' TO WSS-ITM7.
           MOVE '010000000000090800' TO WSS-ITM8.
           MOVE '000010100000000900' TO WSS-ITM9.
           MOVE '010011110000001200' TO WSS-ITMA.
           MOVE '010012120000001200' TO WSS-ITMB.
           MOVE '010000000000001200' TO WSS-ITMC.
           MOVE 1 TO WSS-STDO.
           MOVE 0 TO WSS-ISIS.
           MOVE 0 TO WSS-IOPC.
           MOVE 0 TO WSS-ICMD.
       FIN-INI-AUTO.
           EXIT.

       PRO-AUTO SECTION.
       INI-PRO-AUTO.
           IF WSS-FCHR( WSS-I ) NOT > SPACES
               MOVE 12 TO WSS-I
               GO TO FIN-PRO-AUTO.
           MOVE WSS-I TO WSS-IMAX.
           IF WSS-FCHR( WSS-I ) NOT < 'A' AND
              WSS-FCHR( WSS-I ) NOT > 'Z'
               MOVE 3 TO WSS-J
           ELSE
           IF WSS-FCHR( WSS-I ) NOT < '0' AND
              WSS-FCHR( WSS-I ) NOT > '9'
               MOVE 4 TO WSS-J
           ELSE
           IF WSS-FCHR( WSS-I ) = ':'
               MOVE 5 TO WSS-J
               MOVE WSS-I TO WSS-ISIS
           ELSE
           IF WSS-FCHR( WSS-I ) = '/'
               MOVE 6 TO WSS-J
               MOVE WSS-I TO WSS-ISIS
           ELSE
           IF WSS-FCHR( WSS-I ) = ',' OR '.'
               MOVE 7 TO WSS-J
               MOVE WSS-I TO WSS-IOPC
               MOVE WSS-I TO WSS-ICMD
           ELSE
           IF WSS-FCHR( WSS-I ) NOT > SPACES
               MOVE 8 TO WSS-J
           ELSE
               MOVE 9 TO WSS-J.
           MOVE WSS-AUTO( WSS-STDO , WSS-J ) TO WSS-STDO.
           IF WSS-STDO NOT = 0
               MOVE WSS-AUTO( WSS-STDO , 1 ) TO WSS-IVAL
           ELSE
               MOVE 0 TO WSS-IVAL
               MOVE 12 TO WSS-I.
       FIN-PRO-AUTO.
           EXIT.

       UNS-CACC SECTION.
       INI-UNS-CACC.
           MOVE SPACES TO WSS-SIST WSS-OPCI WSS-CMND.
           IF WSS-ISIS > 0
               MOVE 0 TO WSS-K
               SUBTRACT 1 FROM WSS-ISIS GIVING WSS-J
               PERFORM MOV-SIST VARYING WSS-I FROM 1 BY 1
                                UNTIL   WSS-I > WSS-J
               ADD 1 WSS-ISIS GIVING WSS-L
           ELSE
               MOVE 1 TO WSS-L.
           IF WSS-ICMD > 0
               MOVE 0 TO WSS-K
               ADD 1 WSS-ICMD GIVING WSS-J
               PERFORM MOV-CMND VARYING WSS-I FROM WSS-J BY 1
                                UNTIL   WSS-I >    WSS-IMAX
               SUBTRACT 1 FROM WSS-ICMD GIVING WSS-M
           ELSE
               MOVE WSS-IMAX TO WSS-M.
           MOVE 0 TO WSS-K.
           PERFORM MOV-OPCI VARYING WSS-I FROM WSS-L BY 1
                            UNTIL   WSS-I > WSS-M.
       FIN-UNS-CACC.
           EXIT.

       MOV-SIST SECTION.
       INI-MOV-SIST.
           IF WSS-FCHR(WSS-I) > SPACES
               ADD 1 TO WSS-K
               MOVE WSS-FCHR(WSS-I) TO WSS-CSIS(WSS-K).
       FIN-MOV-SIST.
           EXIT.

       MOV-OPCI SECTION.
       INI-MOV-OPCI.
           IF WSS-FCHR(WSS-I) > SPACES
               ADD 1 TO WSS-K
               MOVE WSS-FCHR(WSS-I) TO WSS-COPC(WSS-K).
       FIN-MOV-OPCI.
           EXIT.

       MOV-CMND SECTION.
       INI-MOV-CMND.
           IF WSS-FCHR(WSS-I) > SPACES
               ADD 1 TO WSS-K
               MOVE WSS-FCHR(WSS-I) TO WSS-CCMD(WSS-K).
       FIN-MOV-CMND.
           EXIT.

       PRO-TCTL SECTION.
       INI-PRO-TCTL.
           IF WSS-SIST > SPACES AND SCR-SIST NOT = WSS-SIST
               PERFORM CHK-SIST
           ELSE
               MOVE SCR-SIST TO WSS-SIST.
           IF WSS-OPCI > SPACES
               PERFORM CHK-OPC
               PERFORM ANL-OPC
           ELSE
           IF SCR-SIST = WSS-SIST
               IF SCR-NEMO = 'SIS'
                   MOVE 'FUN    ACT' TO MSG-COD-MENS
                   GO TO ERR-LEE-CMND
               ELSE
                   MOVE SCR-SIST    TO FIO-SIST
                   MOVE 'SIS'       TO MNU-COD-NEMO
                   MOVE FIO-GET-KEY TO FIO-CMND
                   PERFORM GNS-FIO-MNU
                   IF NOT FIO-STAT-OKS
                       MOVE 'CODNEMOSISNX' TO MSG-COD-MENS
                       GO TO ERR-LEE-CMND.
           MOVE WSS-SIST TO MNU-COD-SIST.
      * Con el MNU que se tiene hay que procesar
           IF ( MNU-COD-SIST NOT > SPACES OR
                MNU-COD-SIST = SCR-SIST ) AND MNU-COD-NEMO = SCR-NEMO
              MOVE 'FUN    ACT' TO MSG-COD-MENS
              GO TO ERR-LEE-CMND.
           PERFORM PRO-FIN.
       FIN-PRO-TCTL.
           EXIT.

       CHK-SIST SECTION.
       INI-CHK-SIST.
      *llamada a USP para saber si tiene acceso al SISTEMA
           MOVE 'S' TO WSS-CHK-SIST.

           MOVE WSS-SIST TO USP-SISTEMA.
           COPY USPC104.
           IF USP-PERMISO NOT = 'P'
               GO TO CHK-SIST-NPR.

           EXEC CICS HANDLE CONDITION
                     NOTOPEN (CHK-SIST-NOP)
                     DSIDERR (CHK-SIST-DSI)
           END-EXEC.
           MOVE WSS-SIST    TO FIO-SIST.
           MOVE 'SIS'       TO MNU-COD-NEMO.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM GNS-FIO-MNU.
           IF FIO-STAT-OKS
               PERFORM CHK-PRV-SIST
               GO TO FIN-CHK-SIST.
           MOVE 'CODNEMOSISNX' TO MSG-COD-MENS.
           GO TO ERR-LEE-CMND.
       CHK-SIST-NOP.
           MOVE 'SIS    NOPEN' TO MSG-COD-MENS.
           GO TO ERR-LEE-CMND.
       CHK-SIST-DSI.
           MOVE 'SIS    NEXST' TO MSG-COD-MENS.
           GO TO ERR-LEE-CMND.
       CHK-SIST-NPR.
           MOVE 'SIS    NOPRV' TO MSG-COD-MENS.
           GO TO ERR-LEE-CMND.
       FIN-CHK-SIST.
           EXIT.

       CHK-PRV-SIST SECTION.
       INI-CHK-PRV-SIST.
           MOVE SPACES TO SCR-IPRV.

           MOVE '*/*' TO USP-PTA-STR.
           COPY USPC103.
           IF USP-PERMISO = 'P'
               MOVE '*' TO SCR-IPRV
               GO TO FIN-CHK-PRV-SIST.

           MOVE '*' TO USP-PTA-STR.
           COPY USPC103.
           IF USP-PERMISO = 'P'
               MOVE 'O' TO SCR-IPRV.

           MOVE '*/MAN' TO USP-PTA-STR.
           COPY USPC103.
           IF USP-PERMISO = 'P'
               IF SCR-IPRV = 'O'
                   MOVE 'U' TO SCR-IPRV
                   GO TO FIN-CHK-PRV-SIST
               ELSE
                   MOVE 'M' TO SCR-IPRV
                   GO TO FIN-CHK-PRV-SIST.

           MOVE '*/CON' TO USP-PTA-STR.
           COPY USPC103.
           IF USP-PERMISO = 'P'
               IF SCR-IPRV = 'O'
                   MOVE 'Q' TO SCR-IPRV
               ELSE
                   MOVE 'C' TO SCR-IPRV.
       FIN-CHK-PRV-SIST.
           EXIT.

       CHK-OPC SECTION.
       INI-CHK-OPC.
           MOVE WSS-SIST        TO FIO-SIST.
           MOVE WSS-OPCI        TO MNU-COD-OPCI IN MNU.
           MOVE FIO-GET-KEY-ALT TO FIO-CMND.
           MOVE 'MNU-COD-OPCI'  TO FIO-AKEY.
           PERFORM GNS-FIO-MNU.
           IF NOT FIO-STAT-OKS
               MOVE 'CODOPCINEXST' TO MSG-COD-MENS
               PERFORM ERR-LEE-CMND.
       FIN-CHK-OPC.
           EXIT.

       ANL-OPC SECTION.
       INI-ANL-OPC.
           IF WSS-CMND > SPACES
               MOVE WSS-CMND TO MNU-COD-CMND IN MNU.
           IF ( MNU-COD-SIST > SPACES AND MNU-COD-SIST NOT = SCR-SIST )
              AND
              ( NOT ( WSS-SIST > SPACES AND SCR-SIST NOT = WSS-SIST ) )
               MOVE MNU-COD-SIST TO WSS-SIST
               PERFORM CHK-SIST.
       FIN-ANL-OPC.
           EXIT.

       PRO-FIN SECTION.
       INI-PRO-FIN.
           IF MNU-COD-TFUN IN MNU = 'NUL'
               MOVE 'MNUTFUNNUL' TO MSG-COD-MENS
               GO TO ERR-PRO-FIN.

      *CHEQUEAR PRIVILEGIOS PARA EL REGISTRO MNU ( OPCION )
      *         SI TIENE PRIVILEGIOS........SIGA
      * llamada a la rutina de verificacion de permisos para verificar
      * un funcion
           MOVE SCR-IPRV TO WSS-IPRV.
           IF WSS-IPRV-TODOS-MENUS
               GO TO SKP-PRO-FIN.
           MOVE MNU-COD-NEMO IN MNU TO USP-PTA-STR.
           COPY USPC103.
           IF USP-PERMISO NOT = 'P'
               MOVE 'FUN    NOPRV' TO MSG-COD-MENS
               GO TO ERR-PRO-FIN.
      * Que pasa IF MNU-COD-CMND IN MNU > SPACES ??????

       SKP-PRO-FIN.
           IF MNU-COD-SIST NOT > SPACES
               MOVE SCR-SIST TO MNU-COD-SIST.
           IF MNU-COD-CMND IN MNU > SPACES
               PERFORM BUS-CRPF
      *Chequear privilegios para el comando, YA ESTA HECHO
               IF WSS-COMANDO-SINPRV
                   MOVE 'CMD    NOPRV' TO MSG-COD-MENS
                   GO TO ERR-PRO-FIN
               ELSE
               IF NOT WSS-EXISTE-COMANDO
                   MOVE 'CMD    NEXST' TO MSG-COD-MENS
                   GO TO ERR-PRO-FIN
               ELSE
                   PERFORM CRG-VSCR.
           IF MNU-COD-SIST NOT > SPACES OR
              MNU-COD-SIST =     SCR-SIST
               MOVE SCR-SIST TO MNU-COD-SIST
               MOVE SCR-SISG TO WSS-SISG
               MOVE SPACES   TO WSS-NSIS
               GO TO CON-PRO-FIN.
           IF SCR-SIST NOT = 'GNS' AND MNU-COD-SIST = 'GNS'
                MOVE SCR-SIST TO SCR-SISG
           ELSE
      *JSS IF SCR-SIST = 'GNS' AND MNU-COD-SIST NOT = 'GNS'
                MOVE SPACES TO SCR-SISG.
           MOVE MNU-COD-SIST TO SCR-SIST.
       CON-PRO-FIN.
           MOVE MNU TO WSS-RMNU.
           IF MNU-COD-TFUN = 'PGI' OR 'PRO' OR 'MEN' OR 'HMC' OR
                             'HMX' OR 'XMC' OR 'XMX' OR 'RET' OR
                             'PTC'
               PERFORM PRO-RMNU
           ELSE
               PERFORM GNS-PUT-FRT
               IF MNU-COD-TFUN = 'CCA'
                   PERFORM PRO-RMNU
               ELSE
               IF MNU-COD-TFUN = 'STR'
                   EXEC CICS START
                             TRANSID(MNU-GLS-TRAN)
                             TERMID(EIBTRMID)
                   END-EXEC
                   EXEC CICS RETURN
                   END-EXEC
               ELSE
      *POR MIENTRAS con XCTL ( Se debe usar MNU-COD-EXPG y MNU-COD-EXFR )
                   MOVE MNU-GLS-PROG TO FRM-PROG
                   MOVE LOW-VALUES   TO FRM-CMMA
                   MOVE 0            TO FRM-TCMA
                   MOVE FRM-XCT      TO FRM-CMND
                   PERFORM GNS-PRO-FRM.
           MOVE 'XCTERR' TO MSG-COD-MENS.
           MOVE SPACES   TO FRM-MEN1.
           MOVE FRM-PROG TO FRM-MEN2.
       ERR-PRO-FIN.
           IF EIBCALEN NOT = 21
               GO TO ERR-LEE-CMND.
           MOVE 'GNS' TO MSG-COD-SIST.
           PERFORM GET-MSG.
           MOVE MSG-GLS-DESC TO FRM-MENS.

           PERFORM FST-CMN.
           PERFORM CMN-MSSG.
           PERFORM CMN-PUTA.

      *EN VEZ DEL GOBACK COPIAR MODULO QUE SEPA VOLVER
           EXEC CICS HANDLE CONDITION
                     PGMIDERR(GBK-PRO-FIN)
           END-EXEC.
           MOVE 'RET'      TO FRM-CMMA.
           MOVE 3          TO FRM-TCMA.
           MOVE 'GNSPPPF2' TO FRM-PROG.
           MOVE FRM-XCT    TO FRM-CMND.
           PERFORM GNS-PRO-FRM.
       GBK-PRO-FIN.
           PERFORM XCT-ERR.
       FIN-PRO-FIN.
           EXIT.

       CRG-VSCR SECTION.
       INI-CRG-VSCR.
           MOVE MNU-GLS-PROG TO SCR-PROG.
           MOVE WSS-AUX-CRPF TO SCR-CRPF.
           MOVE WSS-AUX-CMNP TO SCR-CMNP.
           MOVE WSS-AUX-PRMC TO SCR-PRMC.
           MOVE WSS-AUX-CMND TO SCR-CMND.
           MOVE MNU-COD-TFUN TO SCR-TFUN.
       FIN-CRG-VSCR.
           EXIT.

       FST-CMN SECTION.
       INI-FST-CMN.
           MOVE -1 TO TRL-COD-CACC-LEN.
       FIN-FST-CMN.
           EXIT.

       CMN-MSSG SECTION.
       INI-CMN-MSSG.
           MOVE FRM-MENS TO TRL-GLS-MENS.
       FIN-CMN-MSSG.
           EXIT.

       XCT-ERR SECTION.
       INI-XCT-ERR.
           MOVE FRM-CLR-FRM TO FRM-CMND.
           PERFORM GNS-PRO-FRM.
           MOVE 'XCTERR    ' TO MSG-COD-MENS.
           MOVE 'GNS'        TO MSG-COD-SIST.
           PERFORM GET-MSG.
           MOVE MSG-GLS-DESC TO FRM-MEN1.
           MOVE FRM-PROG     TO FRM-MEN2.
           MOVE FRM-MSG      TO FRM-CMND.
           PERFORM GNS-PRO-FRM.
           GOBACK.
       FIN-XCT-ERR.
           EXIT.

      *JSS COPY GNSBGIFD.
      * Carga numeros de Base de Datos de los Sistemas
       BUS-FSIS SECTION.
       INI-BUS-FSIS.
           MOVE SPACES TO IFD-FSIS.
           MOVE 'GNSC' TO IFD-DSIS(1).
           MOVE '680'  TO IFD-GSIS(1).
      *
           MOVE 'TABC' TO IFD-DSIS(2).
           MOVE '650'  TO IFD-GSIS(2).
      *
           MOVE 'TSTC' TO IFD-DSIS(3).
           MOVE '295'  TO IFD-GSIS(3).
      *
           MOVE 'SGCM' TO IFD-DSIS(4).
           MOVE 'SGCT' TO IFD-DSIS(5).
           MOVE 'SGCC' TO IFD-DSIS(6).
           MOVE '100'  TO IFD-GSIS(4).
           MOVE '100'  TO IFD-GSIS(5).
           MOVE '690'  TO IFD-GSIS(6).
      *
           MOVE 'DEUM' TO IFD-DSIS(7).
           MOVE 'DEUT' TO IFD-DSIS(8).
           MOVE 'DEUC' TO IFD-DSIS(9).
           MOVE '140'  TO IFD-GSIS(7).
           MOVE '140'  TO IFD-GSIS(8).
           MOVE '700'  TO IFD-GSIS(9).
      *
      *    MOVE 'LDCM' TO IFD-DSIS(10).
      *    MOVE 'LDCT' TO IFD-DSIS(11).
      *    MOVE 'LDCC' TO IFD-DSIS(12).
      *    MOVE '   '  TO IFD-GSIS(10).
      *    MOVE '   '  TO IFD-GSIS(11).
      *    MOVE '   '  TO IFD-GSIS(12).
      *
           MOVE 'COLM' TO IFD-DSIS(13).
           MOVE 'COLT' TO IFD-DSIS(14).
           MOVE 'COLC' TO IFD-DSIS(15).
           MOVE '160'  TO IFD-GSIS(13).
           MOVE '570'  TO IFD-GSIS(14).
           MOVE '710'  TO IFD-GSIS(15).
      *
           MOVE 'GARM' TO IFD-DSIS(16).
           MOVE 'GART' TO IFD-DSIS(17).
           MOVE 'GARC' TO IFD-DSIS(18).
           MOVE '110'  TO IFD-GSIS(16).
           MOVE '130'  TO IFD-GSIS(17).
      *    MOVE '   '  TO IFD-GSIS(18).
      *
           MOVE 'SUPM' TO IFD-DSIS(28).
           MOVE 'SUPT' TO IFD-DSIS(29).
           MOVE 'SUPC' TO IFD-DSIS(30).
           MOVE '230'  TO IFD-GSIS(28).
           MOVE '230'  TO IFD-GSIS(29).
           MOVE '230'  TO IFD-GSIS(30).
      *
           MOVE IFD-FSIS TO IFD-GLS-DATA IN IFD.
       FIN-BUS-FSIS.
           EXIT.

      * COPY GNSBGVSM.
      ********************* FIO *********************
       FIO SECTION.
       INI-FIO.
           MOVE '00' TO FIO-STAT.
           GO TO CIC-FIO-GKEY CIC-FIO-GNXT CIC-FIO-FNSF CIC-FIO-GNLS
                 CIC-FIO-FNSF
                 CIC-FIO-FNSF CIC-FIO-FNSF CIC-FIO-FNSF CIC-FIO-FNSF
                 CIC-FIO-FDMY CIC-FIO-FDMY CIC-FIO-FDMY CIC-FIO-FDMY
                 CIC-FIO-FNSF
                 CIC-FIO-FNSF CIC-FIO-FNLS CIC-FIO-FNSF CIC-FIO-FNSF
                 CIC-FIO-FNSF CIC-FIO-FNSF CIC-FIO-FDMY CIC-FIO-FNSF
                 CIC-FIO-FNSF CIC-FIO-FNSF CIC-FIO-FNSF
                 CIC-FIO-GKEY CIC-FIO-FNSF CIC-FIO-GNLS CIC-FIO-FNSF
                 CIC-FIO-FNSF
                 CIC-FIO-FNSF CIC-FIO-FNLS CIC-FIO-FNSF CIC-FIO-GNXT
                 CIC-FIO-FNSF CIC-FIO-FNSF CIC-FIO-EBRW CIC-FIO-FNSF
                 CIC-FIO-FNSF CIC-FIO-FNSF CIC-FIO-FNSF CIC-FIO-FNSF
           DEPENDING ON FIO-CMND.
           MOVE 'ABORTO : COMANDO INVALIDO PARA ARCHIVO : '
                         TO FIO-MEN1.
           MOVE FIO-VOID TO FIO-MEN2.
           GO TO CIC-FIO-FABT.
       CIC-FIO-GKEY.
           EXEC CICS READ
                     DATASET(FIO-VOID)
                     SET(FIO-PNT0)
                     LENGTH(FIO-RLEN)
                     RIDFLD(FIO-VKEY)
           END-EXEC.
       FIN-CIC-FIO-GKEY.
           GO TO FIN-FIO.
       CIC-FIO-GNXT.
           EXEC CICS READNEXT
                     DATASET(FIO-VOID)
                     SET(FIO-PNT0)
                     LENGTH(FIO-RLEN)
                     RIDFLD(FIO-VKEY)
           END-EXEC.
       FIN-CIC-FIO-GNXT.
           GO TO FIN-FIO.
       CIC-FIO-GNLS.
           EXEC CICS STARTBR
                     DATASET(FIO-VOID)
                     RIDFLD(FIO-VKEY)
           END-EXEC.
           IF FIO-STAT-OKS
               EXEC CICS READNEXT
                         DATASET(FIO-VOID)
                         SET(FIO-PNT0)
                         LENGTH(FIO-RLEN)
                         RIDFLD(FIO-VKEY)
               END-EXEC.
       FIN-CIC-FIO-GNLS.
           GO TO FIN-FIO.
       CIC-FIO-FNLS.
           EXEC CICS STARTBR
                     DATASET(FIO-VOID)
                     RIDFLD(FIO-VKEY)
           END-EXEC.
       FIN-CIC-FIO-FNLS.
           GO TO FIN-FIO.
       CIC-FIO-EBRW.
           EXEC CICS ENDBR
                     DATASET(FIO-VOID)
           END-EXEC.
       FIN-CIC-FIO-EBRW.
           GO TO FIN-FIO.
       CIC-FIO-FNSF.
           MOVE 'ABORTO : COMANDO NO SOPORTADO, PARA ARCHIVO: '
                         TO FIO-MEN1.
           MOVE FIO-VOID TO FIO-MEN2.
       CIC-FIO-FABT.
           EXEC CICS XCTL
                     PROGRAM('GNSPPABT')
                     COMMAREA(FIO-MENS)
                     LENGTH(+79)
           END-EXEC.
       CIC-FIO-FDMY.
       FIN-FIO.
           EXIT.

      * COPY GNSBGDTC.
       COPY GNSBGDTM.

       COPY GNSBGFRM.
       COPY GNSBECIC.
       COPY GNSBFMNU.
       COPY GNSBFRPF.
       COPY GNSBGMSG.
      * COPY GNSBFMSG.
      * SE INCORPORA AL PROGRAMA PARA PODER MANTENERLO
      * MIENTRAS EXISTA UN PROGRAMA EN VERSION 2.0
      *
      * Modulo FIO para registro MSG en DATACOM
       GNS-FIO-MSG SECTION.
       INI-GNS-FIO-MSG.
      *JSS
           MOVE 'MSG' TO MSG-COD-TTAB IN MSG
                         MSG-CIC-TTAB IN MSG
                         MSG-EXT-TTAB IN MSG
                         MSG-SNX-TTAB IN MSG.
      *
           MOVE ADR-MSG-REQA TO ADR-REQA.
           MOVE 'TAB' TO ADR-TABL IN ADR-REQA.
      *JSS MOVE IFD-GSIS( 1 ) TO ADR-DBID IN ADR-REQA.
           MOVE FIO-SIST TO IFD-SAUX.
           MOVE 'C'      TO IFD-QAUX.
           MOVE 1 TO IFD-IAUX.
           SET IFD-ITBL TO 1.
           SEARCH IFD-VSIS VARYING IFD-IAUX
               AT END
                   MOVE 'Sistema Invalido en GNS-FIO-MSG' TO FIO-MEN1
                   MOVE IFD-DAUX                          TO FIO-MEN2
                   GO TO PRG-ABT
               WHEN IFD-DSIS( IFD-ITBL ) = IFD-DAUX
                   MOVE IFD-GSIS( IFD-ITBL) TO ADR-DBID IN ADR-REQA.
      *
           MOVE 'TAB00' TO ADR-ELM1.
           MOVE FIO-PROG TO ADR-PROG.
           MOVE FIO-CMND TO FIO-IAKY.
           IF NOT FIO-IAKY-CON AND
              ( FIO-AKEY = 'MSG-COD-TABL' OR FIO-AKEY NOT > SPACES )
               MOVE MSG-COD-TABL IN MSG TO ADR-VKEY IN ADR-REQA
               MOVE 'TAB00' TO ADR-DKEY IN ADR-REQA
           ELSE
           IF FIO-AKEY = 'MSG-STP-ITRN'
               MOVE MSG-STP-ITRN IN MSG TO ADR-VKEY IN ADR-REQA
               MOVE 'TAB01' TO ADR-DKEY IN ADR-REQA
           ELSE
           IF FIO-AKEY = 'MSG-CIC-TABL'
               MOVE MSG-CIC-TABL IN MSG TO ADR-VKEY IN ADR-REQA
               MOVE 'TAB02' TO ADR-DKEY IN ADR-REQA
           ELSE
           IF FIO-AKEY = 'MSG-EXT-TABL'
               MOVE MSG-EXT-TABL IN MSG TO ADR-VKEY IN ADR-REQA
               MOVE 'TAB03' TO ADR-DKEY IN ADR-REQA
           ELSE
               MOVE 'En GNS-FIO-MSG, key' TO FIO-MENS
               MOVE FIO-AKEY   TO FIO-MENS-KEY
               MOVE 'Invalida' TO FIO-MENS-FIL
               GO TO PRG-ABT.
      *JSS
           IF FIO-CMND = FIO-PUT OR FIO-MOD
               MOVE MSG-COD-TTAB IN MSG TO MSG-CIC-TTAB IN MSG
                                           MSG-EXT-TTAB IN MSG
                                           MSG-SNX-TTAB IN MSG.
      *
           MOVE MSG TO FIO-DFLD.
           PERFORM GNS-FIO-DTC.
           IF FIO-STAT-OKS
               MOVE FIO-DFLD TO MSG
           ELSE
      *JSS     MOVE 'GNSMSG' TO FIO-MEN2
               MOVE FIO-SIST TO FIO-MENS-SIS
               MOVE 'TAB'    TO FIO-MENS-REG
      *
               IF FIO-STAT-FTL
                   GO TO PRG-ABT.
           MOVE SPACES   TO FIO-AKEY.
           MOVE ADR-REQA TO ADR-MSG-REQA.
       FIN-GNS-FIO-MSG.
           EXIT.

       COPY GNSBIABT.
       COPY GNSBGHOY.
       COPY GNSBGSYS.
       COPY GNSBFIFD.

      ******************************************************************

       PRO-RMNU SECTION.
       INI-PRO-RMNU.
      *JSS
           MOVE SCR-IPRV TO MNU-IND-IPRV.
      *
           MOVE MNU-COD-SIST TO SCR-SIST.
      *JSS MOVE MNU-COD-FUNC TO SCR-FUNC.
      *    MOVE MNU-COD-NEMO TO SCR-NEMO.
           MOVE MNU-COD-OPCI TO SCR-FUNC.
           MOVE MNU-COD-NEMO TO SCR-NEMO.
      *
           MOVE MNU-GLS-TRAN TO SCR-NTRN.
           MOVE MNU-GLS-PROG TO SCR-PROG.
           MOVE MNU-GLS-LFRM TO SCR-NLIB.
           MOVE MNU-GLS-NFRM TO SCR-NMAP.
           MOVE MNU-GLS-LDOC TO SCR-LDOC.
           MOVE MNU-GLS-NDOC TO SCR-NDOC.
           MOVE MNU-COD-FRET TO SCR-FRET.
           MOVE MNU-IND-IPRV TO SCR-IPRV.
           MOVE MNU-COD-TFUN TO SCR-TFUN.
           MOVE +1110        TO SCR-TCMA.
           IF MNU-COD-TFUN = 'MEN'
               PERFORM BUS-CRPF
               PERFORM CRG-VSCR
               MOVE MNU TO WSS-RMNU
               PERFORM PRO-MENU
               MOVE WSS-RMNU TO MNU
               PERFORM PUT-MHDR
               PERFORM PUT-MSCR
               GO TO CON-PRO-RMNU.

      *    PERFORM GET-PROV.

           IF MNU-COD-TFUN NOT = 'CCA'
               MOVE LOW-VALUES TO OPC-FLD
               MOVE LOW-VALUES TO OP1-FLD
               PERFORM PUT-MHDR
               PERFORM PUT-MSCR
           ELSE
               IF MNU-COD-CMND IN MNU > SPACES
                   MOVE MNU-COD-CMND TO WSS-OPCI
                   PERFORM BUS-CMND
                   PERFORM PUT-DCMN
                   PERFORM CAL-PROG
               ELSE
                   PERFORM BUS-CRPF
                   PERFORM CRG-VSCR
                   PERFORM CAL-PROG.

           IF MNU-COD-CMND IN MNU > SPACES
               IF SCR-TFUN = 'HMX' OR 'XMX'
      *Solo para cargar datos de COMMON AREA asociado al comando,
      *no se despliega MAPA
                   MOVE MNU-COD-CMND TO WSS-OPCI
                   PERFORM BUS-CMND
                   PERFORM PUT-DCMN
                   PERFORM CAL-PROG
               ELSE
                   MOVE MNU-COD-CMND TO WSS-OPCI
                   PERFORM BUS-CMND
                   PERFORM PUT-DCMN
                   PERFORM CMN-PUTA
                   PERFORM CAL-PROG.

           PERFORM BUS-CRPF.
           PERFORM CRG-VSCR.
       CON-PRO-RMNU.
           MOVE SCR-INST-GFL TO SCR-INST
           PERFORM HBL-CMN.
       FIN-PRO-RMNU.
           EXIT.

      ******************************************************************

       PRO-MENU SECTION.
       INI-PRO-MENU.
           MOVE SCR-IPRV TO WSS-IPRV.

           MOVE MNU-COD-MENU TO WSS-MENU.
           MOVE MNU-COD-NEMO TO WSS-NEMO.
           PERFORM BUS-MENU.
           IF NOT WSS-STAT-OKS
               MOVE LOW-VALUES TO OPC-FLD
               MOVE LOW-VALUES TO OP1-FLD
               MOVE FRM-MENS   TO OPC-GLS-MENS
               MOVE FRM-MENS   TO OP1-GLS-MENS
               GO TO FIN-PRO-MENU.

           IF WSS-IPRV-TODOS-MENUS
               GO TO CON-PRO-MENU.
           MOVE 13 TO J.
       LUP-PRO-MENU.
           SUBTRACT 1 FROM J.
           IF J < 1
               GO TO CON-PRO-MENU.
           IF WSS-NEMO-CHR(J) > SPACES
               GO TO LUP-PRO-MENU.
           MOVE '*' TO WSS-NEMO-CHR(J).
       CHK-PRO-MENU.
           MOVE WSS-NEMO TO USP-PTA-STR.
           COPY USPC103.
           IF USP-PERMISO = 'P'
               MOVE 'O' TO WSS-IPRV.

       CON-PRO-MENU.
           PERFORM INI-OPCD VARYING J FROM 1 BY 1 UNTIL J > 20.
           PERFORM BUS-FUNC THRU FIN-BUS-FUNC UNTIL NOT
                                 ( WSS-STAT-OKS AND FIO-STAT-OKS AND
                                   MNU-COD-CMEN = WSS-MENU ).
           IF NOT WSS-STAT-OKS
               MOVE LOW-VALUES TO OPC-FLD
               MOVE LOW-VALUES TO OP1-FLD
               MOVE FRM-MENS   TO OPC-GLS-MENS
               MOVE FRM-MENS   TO OP1-GLS-MENS.
       FIN-PRO-MENU.
           EXIT.

       BUS-MENU SECTION.
       INI-BUS-MENU.
           MOVE SPACES          TO MNU-COD-IMEN.
           MOVE MNU-COD-MENU    TO MNU-COD-CMEN.
           MOVE 'MNU-COD-IMEN'  TO FIO-AKEY.
           MOVE FIO-GET-NLS-ALT TO FIO-CMND.
           PERFORM VID-MNU.
           IF FIO-STAT-OKS AND ( MNU-COD-CMEN = WSS-MENU )
               GO TO FIN-BUS-MENU.
           IF WSS-NEMO = 'SIS'
               MOVE 'GNS' TO MSG-COD-SIST
               MOVE 'MNUSIS NOOPC' TO MSG-COD-MENS
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS
               MOVE 2 TO WSS-STAT
           ELSE
               MOVE 'GNS' TO MSG-COD-SIST
               MOVE 'MNU    NOOPC' TO MSG-COD-MENS
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS
               MOVE 1 TO WSS-STAT.
       FIN-BUS-MENU.
           EXIT.

       INI-OPCD SECTION.
       INI-INI-OPCD.
           MOVE SPACES TO OPC-COD-OPCI( J ).
           MOVE SPACES TO OPC-GLS-FMEN( J ).
      *    MOVE FRM-CPIM-AEY TO OPC-COD-OPCI-ATR( J ).
      *    MOVE FRM-CPIM-AEY TO OPC-GLS-FMEN-ATR( J ).
           ADD 20 J GIVING I.
           MOVE SPACES TO OPC-COD-OPCI( I ).
           MOVE SPACES TO OPC-GLS-FMEN( I ).
      *    MOVE FRM-CPIM-AEY TO OPC-COD-OPCI-ATR( I ).
      *    MOVE FRM-CPIM-AEY TO OPC-GLS-FMEN-ATR( I ).
           MOVE SPACES TO OP1-COD-OPCI( J ).
           MOVE SPACES TO OP1-GLS-FMEN( J ).
      *    MOVE FRM-CPIM-AEY TO OP1-COD-OPCI-ATR( J ).
      *    MOVE FRM-CPIM-AEY TO OP1-GLS-FMEN-ATR( J ).
       FIN-INI-OPCD.
           EXIT.

       BUS-FUNC SECTION.
       INI-BUS-FUNC.
      * llamada a la rutina de verificacion de permisos para verificar
      * un funcion

           IF WSS-IPRV-TODOS-MENUS
               GO TO CON-BUS-FUNC.
           MOVE MNU-COD-NEMO IN MNU TO USP-PTA-STR.
           COPY USPC103.
           IF USP-PERMISO NOT = 'P'
               GO TO NXT-BUS-FUNC.

       CON-BUS-FUNC.
           IF MNU-NUM-FILA < 3 OR MNU-NUM-FILA > 22
               MOVE 'GNS' TO MSG-COD-SIST
               MOVE 'MNUFILAINV' TO MSG-COD-MENS
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS
               MOVE 1 TO WSS-STAT
               GO TO FIN-BUS-FUNC.
           SUBTRACT 2 FROM MNU-NUM-FILA.
           IF MNU-NUM-COLU = 1
                MOVE '0' TO WSS-IFRM
                MULTIPLY MNU-NUM-FILA BY 2 GIVING I
                SUBTRACT 1 FROM I
                MOVE MNU-COD-OPCI TO OPC-COD-OPCI( I )
                MOVE MNU-GLS-FMEN TO OPC-GLS-FMEN( I )
      *DFHBMASB
      *         MOVE '8' TO OPC-COD-OPCI-ATR( I )
           ELSE
           IF MNU-NUM-COLU = 41
                MOVE '0' TO WSS-IFRM
                MULTIPLY MNU-NUM-FILA BY 2 GIVING I
                MOVE MNU-COD-OPCI TO OPC-COD-OPCI( I )
                MOVE MNU-GLS-FMEN TO OPC-GLS-FMEN( I )
      *DFHBMASB
      *         MOVE '8' TO OPC-COD-OPCI-ATR( I )
           ELSE
           IF MNU-NUM-COLU = 24
                MOVE '1' TO WSS-IFRM
                MOVE MNU-COD-OPCI TO OP1-COD-OPCI(MNU-NUM-FILA)
                MOVE MNU-GLS-FMEN TO OP1-GLS-FMEN(MNU-NUM-FILA)
      *DFHBMASB
      *         MOVE '8' TO OP1-COD-OPCI-ATR(MNU-NUM-FILA)
           ELSE
               MOVE 'GNS' TO MSG-COD-SIST
               MOVE 'MNUCOLUINV' TO MSG-COD-MENS
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS
               MOVE 1 TO WSS-STAT
               GO TO FIN-BUS-FUNC.
       NXT-BUS-FUNC.
           MOVE FIO-GET-NXT-ALT TO FIO-CMND.
           MOVE 'MNU-COD-IMEN'  TO FIO-AKEY.
           PERFORM VID-MNU.
       FIN-BUS-FUNC.
           EXIT.

      ******************************************************************

       BUS-CRPF SECTION.
       INI-BUS-CRPF.
           MOVE 0 TO WSS-IND-CMND.
           MOVE MNU-GLS-PROG TO WSS-SIST.
           IF WSS-SIST NOT = 'GNS'
               MOVE MNU-COD-SIST TO WSS-SIST.
           MOVE SPACES       TO WSS-AUX-CRPF.

           MOVE MNU-GLS-PROG TO RPF-KEY-DPRO.
           MOVE 'C '         TO RPF-KEY-TRYC.
           MOVE SPACES       TO RPF-KEY-DARC.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM VID-RPF.
           IF NOT FIO-STAT-OKS
                MOVE 'GNSPPOPC' TO WSS-AUX-CMNP
                PERFORM BUS-PRMC
                GO TO FIN-BUS-CRPF.
           IF RPF-GLS-PRMT NOT > SPACES
               PERFORM BUS-PRMC
           ELSE
           IF RPF-GLS-PRMT NOT = 'NOMSG'
               MOVE RPF-GLS-PRMT TO WSS-AUX-PRMC
           ELSE
               MOVE SPACES TO WSS-AUX-PRMC.
           IF RPF-GLS-UARC NOT > SPACES
                MOVE 'GNSPPOPC' TO WSS-AUX-CMNP
           ELSE
                MOVE RPF-GLS-UARC TO WSS-AUX-CMNP.
           MOVE MNU-GLS-PROG TO RPF-KEY-DPRO.
           MOVE 'C0'         TO RPF-KEY-TRYC.
           MOVE FIO-FND-NLS  TO FIO-CMND.
           PERFORM VID-RPF.
           IF NOT FIO-STAT-OKS
                 GO TO FIN-BUS-CRPF.
           PERFORM LEE-CRPF.
           MOVE FIO-END-BRW TO FIO-CMND.
           PERFORM VID-RPF.
           PERFORM BUS-GLOS VARYING I FROM 1 BY 1 UNTIL I > 10.
           MOVE SCR-IPRV TO WSS-IPRV.
           IF NOT WSS-IPRV-TODO
               PERFORM CHK-PRV-CMND.
       FIN-BUS-CRPF.
           EXIT.

       LEE-CRPF SECTION.
       INI-LEE-CRPF.
           MOVE FIO-GET-NXT TO FIO-CMND.
           PERFORM VID-RPF.
           IF NOT ( FIO-STAT-OKS AND RPF-KEY-DPRO = MNU-GLS-PROG AND
                                     RPF-KEY-TREG = 'C' )
                   GO TO FIN-LEE-CRPF.
           IF MNU-COD-CMND IN MNU > SPACES AND
              MNU-COD-CMND = RPF-COD-CCMN
               MOVE MNU-COD-CMND TO WSS-AUX-CMND
               MOVE 1            TO WSS-IND-CMND.
           MOVE RPF-KEY-CORR TO I.
           ADD 1 I GIVING K.
           MOVE RPF-COD-CCMN TO WSS-COD-CCMN( K )
           MOVE RPF-COD-CCPP TO WSS-COD-CCPP( K )
           MOVE RPF-IND-STPP TO WSS-IND-STPP( K )
           MOVE RPF-GLS-PRMT TO WSS-GLS-PRMT( K )
           MOVE RPF-GLS-CONF TO WSS-GLS-CONF( K )
           MOVE RPF-GLS-UARC TO WSS-GLS-UARC( K )
           GO TO INI-LEE-CRPF.
       FIN-LEE-CRPF.
           EXIT.

       BUS-MGKY SECTION.
       INI-BUS-MGKY.
           MOVE 'MSGKEY' TO MSG-COD-MENS.
           MOVE 'GNS'    TO MSG-COD-SIST.
           PERFORM GET-MSG.
      *    MOVE MSG-GLS-DESC TO SCR-MGKY.
       FIN-BUS-MGKY.
           EXIT.

       BUS-PRMC SECTION.
       INI-BUS-PRMC.
           IF MNU-COD-TFUN = 'MEN'
               MOVE 'PRMMEN' TO MSG-COD-MENS
           ELSE
               MOVE 'PRMPGI' TO MSG-COD-MENS.
           MOVE 'GNS'    TO MSG-COD-SIST.
           PERFORM GET-MSG.
           MOVE MSG-GLS-DESC TO WSS-AUX-PRMC.
       FIN-BUS-PRMC.
           EXIT.

       BUS-GLOS SECTION.
       INI-BUS-GLOS.
           IF WSS-COD-CCMN( I ) NOT > SPACES
               GO TO FIN-BUS-GLOS.
           IF WSS-GLS-PRMT( I ) NOT > SPACES
               MOVE SPACES TO WSS-COD-MENS
               IF WSS-GLS-UARC( I ) NOT > SPACES
                   MOVE 'GNS'             TO MSG-COD-SIST
                   MOVE 'FLD'             TO WSS-COD-TMN1
                   MOVE WSS-COD-CCPP( I ) TO WSS-COD-TMN2
                   MOVE WSS-COD-MENS      TO MSG-COD-MENS
                   PERFORM GET-MSG
                   MOVE MSG-GLS-DESC TO WSS-GLS-PRMT( I )
               ELSE
                   MOVE 'GNS'             TO MSG-COD-SIST
                   MOVE 'SUB'             TO WSS-COD-TMN1
                   MOVE WSS-COD-CCPP( I ) TO WSS-COD-TMN2
                   MOVE WSS-COD-MENS      TO MSG-COD-MENS
                   PERFORM GET-MSG
                   MOVE MSG-GLS-DESC TO WSS-GLS-PRMT( I )
           ELSE
           IF WSS-GLS-PRMT( I ) = 'NOMSG'
               MOVE SPACES TO WSS-GLS-PRMT( I ).
           IF WSS-GLS-CONF( I ) NOT > SPACES
               MOVE SPACES TO WSS-COD-MENS
               MOVE 'GNS'             TO MSG-COD-SIST
               MOVE 'CNF'             TO WSS-COD-TMN1
               MOVE WSS-COD-CCPP( I ) TO WSS-COD-TMN2
               MOVE WSS-COD-MENS      TO MSG-COD-MENS
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO WSS-GLS-CONF( I )
           ELSE
           IF WSS-GLS-CONF( I ) = 'NOMSG'
               MOVE SPACES TO WSS-GLS-CONF( I ).
       FIN-BUS-GLOS.
           EXIT.

      ******************************************************************

       VID-MNU SECTION.
       INI-VID-MNU.
           MOVE SCR-SIST TO FIO-SIST.
           PERFORM GNS-FIO-MNU.
       FIN-VID-MNU.
           EXIT.

       VID-RPF SECTION.
       INI-VID-RPF.
           MOVE WSS-SIST TO FIO-SIST.
           PERFORM GNS-FIO-RPF.
       FIN-VID-RPF.
           EXIT.

      ******************************************************************

       PUT-MHDR SECTION.
       INI-PUT-MHDR.
           IF SCR-TFUN = 'XMC' OR 'XMX'
               MOVE 1 TO FRM-PLIN
               MOVE 0 TO FRM-NLIN
               MOVE FRM-CLR-FRM TO FRM-CMND
               PERFORM GNS-PRO-FRM
               GO TO FIN-PUT-MHDR.
           PERFORM GNSSCRHDR.
           MOVE 'GNSFHDR'     TO FRM-NAME.
           MOVE 'GNSAHDR'     TO FRM-NLIB.
           MOVE HDR-FLD       TO FRM-DFLD.
           MOVE FRM-SINI-DB1F TO FRM-SINI.
           MOVE FRM-INI       TO FRM-CMND.
           PERFORM GNS-PRO-FRM.
       FIN-PUT-MHDR.
           EXIT.

       GNSSCRHDR SECTION.
       INI-GNSSCRHDR.
           MOVE SPACES       TO HEA-DOBL.
           MOVE MNU-GLS-FPRO TO HEA-SIMP.
           PERFORM HDR-TITU.
           MOVE SCR-SIST     TO HDR-COD-SIST.
           MOVE MNU-COD-OPCI TO HDR-GLS-NFRM.
           MOVE HEA-DOBL     TO HDR-GLS-FPRO.
           PERFORM GET-FHOY.
           MOVE HOY-DHOY TO HEA-NUM-DMSA IN HEA-FEC-DMSA.
           MOVE HOY-MHOY TO HEA-NUM-MMSA IN HEA-FEC-DMSA.
           MOVE HOY-SHOY TO HEA-NUM-SMSA IN HEA-FEC-DMSA.
           MOVE HOY-AHOY TO HEA-NUM-AMSA IN HEA-FEC-DMSA.
           MOVE '/'      TO HEA-GLS-SLA1 HEA-GLS-SLA2.
           MOVE HEA-FEC-DMSA TO HDR-FEC-DMSA IN HDR-FLD.
           IF SCR-SIST = 'GNS'
               MOVE SCR-SISG TO HDR-COD-FUNC
           ELSE
               MOVE SPACES TO HDR-COD-FUNC.
      *JSS MOVE EIBTRMID TO HDR-GLS-TRMI.
           MOVE SPACES TO HDR-GLS-HORA.
       FIN-GNSSCRHDR.
           EXIT.

       HDR-TITU SECTION.
       INI-HDR-TITU.
           IF HEA-SIMP = SPACES
                      GO TO FIN-HDR-TITU.
           PERFORM BUS-LIMI VARYING IMIN FROM 1 BY 1
                      UNTIL HEA-GLS-SIMP(IMIN) NOT = SPACES.
           PERFORM BUS-LIMI VARYING IMAX FROM 31 BY -1
                      UNTIL HEA-GLS-SIMP(IMAX) NOT = SPACES.
           IF MNU-IND-EXGL IN MNU = 'N'
               COMPUTE L = ( 61 - ( IMAX - IMIN + 1 ) ) / 2
               MOVE 1 TO I
           ELSE
               COMPUTE
                  L = ( 61 - ( 2 * ( IMAX - IMIN + 1 ) - 1 ) ) / 2 + 1
               MOVE 2 TO I.
           PERFORM PUT-TITU
                   VARYING K FROM IMIN BY 1 UNTIL K > IMAX.
       FIN-HDR-TITU.
           EXIT.

       BUS-LIMI SECTION.
       INI-BUS-LIMI.
       FIN-BUS-LIMI.
           EXIT.

       PUT-TITU SECTION.
       INI-PUT-TITU.
           MOVE HEA-GLS-SIMP( K ) TO HEA-GLS-DOBL( L ).
           ADD I TO L.
       FIN-PUT-TITU.
           EXIT.

      ******************************************************************

       PUT-MSCR SECTION.
       INI-PUT-MSCR.
           IF SCR-NMAP NOT > SPACES AND SCR-NLIB NOT > SPACES
               IF WSS-IFRM = '0'
                   MOVE 'GNSFOPC' TO SCR-NMAP
                   MOVE 'GNSAOPC' TO SCR-NLIB
               ELSE
                   MOVE 'GNSFOP1' TO SCR-NMAP
                   MOVE 'GNSAOP1' TO SCR-NLIB.
           IF SCR-NMAP NOT > SPACES
               MOVE SCR-NLIB TO SCR-NMAP.
           IF SCR-NLIB NOT > SPACES
               MOVE SCR-NMAP TO SCR-NLIB.
           MOVE SCR-NMAP TO FRM-NAME.
           MOVE SCR-NLIB TO FRM-NLIB.
           IF WSS-IFRM = '0'
               MOVE OPC-FLD TO FRM-DFLD
           ELSE
               MOVE OP1-FLD TO FRM-DFLD.
      *    MOVE FRM-SINI-DBNF TO FRM-SINI.
           IF SCR-TFUN = 'MEN'
               MOVE FRM-SINI-DBNF TO FRM-SINI
           ELSE
               MOVE FRM-SINI-DBLF TO FRM-SINI.
      *
           MOVE FRM-INI       TO FRM-CMND.
           PERFORM GNS-PRO-FRM.
           IF WSS-CCOD-APCT OR WSS-CCOD-ABM0
               MOVE SPACES TO MNU-GLS-PROG IN MNU
               MOVE SPACES TO MNU-GLS-TRAN IN MNU
               MOVE SPACES TO MNU-COD-CMND IN MNU.
       FIN-PUT-MSCR.
           EXIT.

      ******************************************************************

       HBL-CMN SECTION.
       INI-HBL-CMN.
           IF WSS-CCOD-APCT OR WSS-CCOD-ABM0
               MOVE 'GNS'     TO MSG-COD-SIST
               MOVE 'CICABND' TO MSG-COD-TMSG
               MOVE WSS-CCOD  TO MSG-COD-CMSG
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC IN MSG TO TRL-GLS-MENS IN TRL-FLD.

           IF SCR-TFUN = 'HMX' OR 'XMX'
               MOVE LOW-VALUES TO TRL-GLS-TERM IN TRL-FLD
               MOVE LOW-VALUES TO TRL-COD-CMND IN TRL-FLD
               MOVE LOW-VALUES TO TRL-GLS-PRMT IN TRL-FLD
               MOVE LOW-VALUES TO TRL-COD-CACC IN TRL-FLD
               GO TO CON-HBL-CMN.

           PERFORM PUT-CMND VARYING CMN-K FROM 1 BY 1 UNTIL CMN-K > 10.
           IF SCR-TFUN = 'MEN'
               MOVE 'PFSMEN' TO MSG-COD-MENS
           ELSE
               MOVE 'PFSCMN' TO MSG-COD-MENS.
           MOVE 'GNS' TO MSG-COD-SIST.
           PERFORM GET-MSG.
           MOVE MSG-GLS-DESC TO WSS-MEN1.
           MOVE MSG-GLS-MENS TO WSS-MEN2.
           MOVE WSS-MENS TO TRL-GLS-TERM.
           MOVE CMN-IDX-CCMN TO TRL-COD-CMND.
           MOVE SCR-PRMC     TO TRL-GLS-PRMT.
           MOVE SPACES       TO TRL-COD-CACC.
       CON-HBL-CMN.
           MOVE FRM-CPIM-UBY TO TRL-COD-CACC-ATR.
           MOVE -1           TO TRL-COD-CACC-LEN.
           PERFORM CMN-PUTA.
           PERFORM CMN-EXIT.
       FIN-HBL-CMN.
           EXIT.

       PUT-CMND SECTION.
       INI-PUT-CMND.
           MOVE SCR-COD-CCMN ( CMN-K ) TO CMN-COD-CCMN ( CMN-K ).
       FIN-PUT-CMND.
             EXIT.

      ******************************************************************

       CMN-PUTA SECTION.
       INI-CMN-PUTA.
           MOVE 'GNSFCMN' TO FRM-NAME.
           MOVE 'GNSACMN' TO FRM-NLIB.
      *JSS
      *    MOVE FRM-CPIM-AEY TO TRL-GLS-MENS-ATR.
           MOVE FRM-CPSF-AEY TO TRL-GLS-MENS-ATR.
      *
           MOVE TRL-FLD   TO FRM-DFLD.
           MOVE FRM-PUT-ALL TO FRM-CMND.
           PERFORM GNS-PRO-FRM.
       FIN-CMN-PUTA.
           EXIT.

       CMN-EXIT SECTION.
       INI-CMN-EXIT.
           MOVE 'EXEC'   TO FRM-NTRN.
           MOVE 'K'      TO SCR-ICMN.
           MOVE SCR-VARI TO FRM-CMMA.
           MOVE SCR-TCMA TO FRM-TCMA.
           MOVE FRM-EXT  TO FRM-CMND.
           PERFORM GNS-PRO-FRM.
       FIN-CMN-EXIT.
           EXIT.

      ******************************************************************

       BUS-CMND SECTION.
       INI-BUS-CMND.
           MOVE 'CMD    NEXST' TO MSG-COD-MENS.
           MOVE 1 TO CMN-I.
           SET SCR-ITBL TO 1.
           SEARCH SCR-TABL VARYING CMN-I
                  WHEN SCR-COD-CCMN( SCR-ITBL ) = WSS-OPCI
                         GO TO SET-BUS-CMND.
           GO TO FIN-BUS-CMND.
       SET-BUS-CMND.
           MOVE SPACES TO MSG-COD-MENS.
       FIN-BUS-CMND.
           EXIT.

       PUT-DCMN SECTION.
       INI-PUT-DCMN.
           MOVE CMN-I TO SCR-I.
           MOVE SCR-COD-CCMN( SCR-I ) TO SCR-CMND.
           MOVE SCR-COD-CCPP( SCR-I ) TO SCR-CCPP.
           MOVE SCR-IND-STPP( SCR-I ) TO SCR-STPP.
           MOVE SCR-INST-HKY          TO SCR-INST.
           IF SCR-TFUN = 'HMX' OR 'XMX'
               MOVE LOW-VALUES TO TRL-GLS-TERM IN TRL-FLD
               MOVE LOW-VALUES TO TRL-COD-CMND IN TRL-FLD
               MOVE LOW-VALUES TO TRL-GLS-PRMT IN TRL-FLD
               MOVE LOW-VALUES TO TRL-COD-CACC IN TRL-FLD
               MOVE SPACES     TO TRL-GLS-MENS IN TRL-FLD
               GO TO CON-PUT-DCMN.
           MOVE SPACES                TO CMN-IDX-CCMN.
           MOVE SCR-COD-CCMN( SCR-I ) TO CMN-COD-CCMN( SCR-I ).
           MOVE CMN-IDX-CCMN          TO TRL-COD-CMND.
           MOVE SPACES                TO TRL-GLS-PRMT TRL-COD-CACC.
           MOVE 'GNS'                 TO MSG-COD-SIST.
           MOVE SPACES                TO WSS-COD-MENS.
           MOVE 'PFSPGI'              TO WSS-COD-TMSG.
           MOVE SCR-IND-STPP( SCR-I ) TO WSS-COD-TMN3.
           MOVE WSS-COD-MENS          TO MSG-COD-MENS.
           PERFORM GET-MSG.
           MOVE MSG-GLS-DESC TO WSS-MEN1.
           MOVE MSG-GLS-MENS TO WSS-MEN2.
           MOVE WSS-MENS TO TRL-GLS-TERM.
      *    MOVE SCR-MGKY TO TRL-GLS-MENS.
           PERFORM BUS-MGKY.
           MOVE MSG-GLS-DESC TO TRL-GLS-MENS.
       CON-PUT-DCMN.
      *    MOVE FRM-CPIM-AEY TO TRL-COD-CACC-ATR.
           MOVE FRM-CPSF-AEY TO TRL-COD-CACC-ATR.
           MOVE -1           TO TRL-COD-CACC-LEN.
       FIN-PUT-DCMN.
           EXIT.

      * GET-PROV SECTION.
      * INI-GET-PROV.
      *     MOVE SPACES TO SCR-PROV.
      *     MOVE SPACES TO SCR-NTRV.
      *     IF SCR-TFUN NOT = 'PTC'
      *         GO TO FIN-GET-PROV.
      *     MOVE SCR-PROG     TO RPF-KEY-DPRO.
      *     MOVE 'C '         TO RPF-KEY-TRYC.
      *     MOVE SPACES       TO RPF-KEY-DARC.
      *     MOVE SCR-SIST     TO FIO-SIST.
      *     MOVE FIO-GET-KEY TO FIO-CMND.
      *     PERFORM GNS-FIO-RPF.
      *     IF NOT FIO-STAT-OKS
      *         GO TO FIN-GET-PROV.
      *     MOVE RPF-GLS-ABRT IN RPF TO WSS-PPPV.
      *     MOVE WSS-PROV            TO SCR-PROV.
      *     MOVE WSS-NTRV            TO SCR-NTRV.
      * FIN-GET-PROV.
      *     EXIT.

       CAL-PROG SECTION.
       INI-CAL-PROG.
           MOVE SCR-PROG     TO RPF-KEY-DPRO.
           MOVE 'A '         TO RPF-KEY-TRYC.
           MOVE SPACES       TO RPF-KEY-DARC.
           MOVE FIO-GET-KEY TO FIO-CMND.

           MOVE SCR-PROG TO WSS-SIST.
           IF WSS-SIST NOT = 'GNS'
               MOVE SCR-SIST TO WSS-SIST.

           PERFORM VID-RPF.
           IF NOT FIO-STAT-OKS
               MOVE 'DEFAULT' TO IFD-COD-CIFD IN IFD
           ELSE
           IF RPF-COD-CIFD IN RPF NOT > SPACES
               MOVE 'DEFAULT' TO IFD-COD-CIFD IN IFD
           ELSE
               MOVE RPF-COD-CIFD IN RPF TO IFD-COD-CIFD IN IFD.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM GNS-FIO-IFD.
           IF NOT FIO-STAT-OKS
               PERFORM BUS-FSIS
           ELSE
               MOVE IFD-GLS-DATA IN IFD TO IFD-FSIS.

           IF SCR-GLS-UARC( SCR-I ) > SPACES
               MOVE SCR-GLS-UARC( SCR-I ) TO AUX-UARC

               MOVE SCR-PROG TO AUX-PROG
               MOVE SCR-NTRN TO AUX-NTRN
               MOVE AUX-PRGM TO SCR-GLS-UARC( SCR-I )

               MOVE AUX-RPRG TO SCR-PROG
               MOVE AUX-RTRN TO SCR-NTRN.

           MOVE SCR-INST-HKY TO SCR-INST.
           MOVE 'C'          TO SCR-ICMN.
           MOVE SCR-PROG     TO FRM-PROG.
           MOVE SCR-VARI     TO FRM-CMMA.
      *JSS MOVE SCR-TCMA     TO FRM-TCMA.
           MOVE +3500        TO FRM-TCMA.

           MOVE FRM-XCT      TO FRM-CMND.
           PERFORM GNS-PRO-FRM.
           PERFORM XCT-ERR.
       FIN-CAL-PROG.
           EXIT.

       CMN-ERR-PA2.
           MOVE FRM-FFLD-PA2 TO FRM-FFLD.
           GO TO CIC-ERR-FRM.
       CMN-ERR-CLR.
           MOVE FRM-FFLD-PA2 TO FRM-FFLD.
           MOVE SPACES TO SCR-NEMO.
           GO TO CIC-ERR-FRM.
       CMN-ERR-ABN.
           EXEC CICS ASSIGN
                     ABCODE(WSS-CCOD)
           END-EXEC.
      *     IF WSS-CCOD-APCT OR WSS-CCOD-ABM0
      *         GO TO CIC-ERR-FRM
      *     ELSE
      *         MOVE 'GNS'     TO MSG-COD-SIST
      *         MOVE 'CICABND' TO MSG-COD-TMSG
      *         MOVE WSS-CCOD  TO MSG-COD-CMSG
      *         PERFORM GET-MSG
      *         MOVE MSG-GLS-DESC TO FRM-MENS
      *         MOVE FRM-ABT      TO FRM-CMND
      *         PERFORM GNS-PRO-FRM.
      *
           MOVE WSS-CCOD TO FRM-MEN1.
           IF WSS-CCOD-APCT OR WSS-CCOD-ABM0
               MOVE FRM-NLIB TO FRM-MEN2
           ELSE
               MOVE SPACES   TO FRM-MEN2.
           EXEC CICS SEND
                     FROM(FRM-MENS)
                     LENGTH(79)
                     ERASE
           END-EXEC.
           EXEC CICS SEND CONTROL FREEKB
           END-EXEC.
           GOBACK.

       GNS-PRO-KEY SECTION.
       INI-GNS-PRO-KEY.
           MOVE EIBAID TO FRM-FFLD.
           IF NOT ( FRM-FFLD = FRM-FFLD-PF11 OR FRM-FFLD-PFK )
               GO TO FIN-GNS-PRO-KEY.

           PERFORM GNS-ERR-QUE.
           MOVE EIBTRMID TO QUE-TERM.
           MOVE 'PFB'    TO QUE-TYPE.
      *     MOVE 1        TO QUE-NITM.
      *     MOVE +3000    TO QUE-LITM.
      *     MOVE QUE-GET  TO QUE-CMND.
      *     PERFORM GNS-PRO-QUE.
           PERFORM GNS-CHK-QUEU.
           IF QUE-STAT NOT = QUE-STAT-OKS
               GO TO FIN-GNS-PRO-KEY.

           EXEC CICS HANDLE CONDITION
                     PGMIDERR(CIC-ERR-PGM)
           END-EXEC.
           MOVE DFHCOMMAREA TO FRM-CMMA.
           MOVE EIBCALEN    TO FRM-TCMA.
           MOVE FRM-XCT     TO FRM-CMND.
           MOVE 'GNSPPPFB'  TO FRM-PROG.
           PERFORM GNS-PRO-FRM.
       FIN-GNS-PRO-KEY.
           EXIT.

       GNS-PUT-FRT SECTION.
       INI-GNS-PUT-FRT.
           EXEC CICS HANDLE CONDITION
                     QIDERR (QNX-GNS-PUT-FRT)
           END-EXEC.
           MOVE EIBTRMID TO RFN-TERM.
           EXEC CICS DELETEQ
                     QUEUE(RFN-COLA)
           END-EXEC.
       QNX-GNS-PUT-FRT.
           MOVE SCR-CMNP                TO RFN-PROG.
           MOVE MNU-COD-SIST IN MNU     TO RFN-SIST.
           MOVE SCR-SISG                TO RFN-SISG.
           IF MNU-COD-TFUN = 'CCA'
               MOVE SCR-NEMO TO MNU-COD-FRET IN MNU.
           MOVE MNU-COD-FRET IN MNU TO RFN-NEMO.
           MOVE SPACES              TO RFN-CMND.

           MOVE +29 TO RFN-LITM.
           EXEC CICS WRITEQ TS
                     QUEUE(RFN-COLA)
                     FROM(RFN-ITEM)
                     LENGTH(RFN-LITM)
                     AUXILIARY
           END-EXEC.
       FIN-GNS-PUT-FRT.
           EXIT.

      ******************** MANEJO DE COLAS **********************

      * COPY GNSBGQUE.
      *Modulo Generico Manejo de Colas
       GNS-CHK-QUEU SECTION.
       INI-GNS-CHK-QUEU.
           MOVE 1 TO QUE-NITM.
           MOVE QUE-GET TO QUE-CMND.
           PERFORM GNS-PRO-QUE.
       FIN-GNS-CHK-QUEU.
           EXIT.

       GNS-QUE-EOQ SECTION.
       INI-GNS-QUE-EOQ.
           MOVE QUE-STAT-EOQ TO QUE-STAT.
           GO TO FIN-GNS-PRO-QUE.
       FIN-GNS-QUE-EOQ.
           EXIT.

       GNS-QUE-NEX SECTION.
       INI-GNS-QUE-NEX.
           MOVE QUE-STAT-NEX TO QUE-STAT.
           GO TO FIN-GNS-PRO-QUE.
       FIN-GNS-QUE-NEX.
           EXIT.

       GNS-QUE-OKS SECTION.
       INI-GNS-QUE-OKS.
           MOVE QUE-STAT-OKS TO QUE-STAT.
           GO TO FIN-GNS-PRO-QUE.
       FIN-GNS-QUE-OKS.
           EXIT.

      **************************************************************

       GNS-ERR-QUE SECTION.
       INI-GNS-ERR-QUE.
           EXEC CICS HANDLE CONDITION
                     QIDERR (GNS-QUE-NEX)
                     ITEMERR(GNS-QUE-EOQ)
                     LENGERR(GNS-QUE-OKS)
           END-EXEC.
       FIN-GNS-ERR-QUE.
           EXIT.

       GNS-PRO-QUE SECTION.
       INI-GNS-PRO-QUE.
           MOVE QUE-STAT-OKS TO QUE-STAT.
      *     IF QUE-CMND = QUE-PUT
      *         GO TO GNS-PUT-QUE
      *     ELSE
           IF QUE-CMND = QUE-GET
               GO TO GNS-GET-QUE
           ELSE
      *     IF QUE-CMND = QUE-MOD
      *         GO TO GNS-MOD-QUE
      *     ELSE
      *     IF QUE-CMND = QUE-DEL
      *         GO TO GNS-DEL-QUE.
           MOVE 'Comando invalido :' TO QUE-MEN1.
           MOVE QUE-CMND             TO QUE-MEN2.
           EXEC CICS XCTL
                     PROGRAM('GNSPPABT')
                     COMMAREA(QUE-MENS)
                     LENGTH(+79)
           END-EXEC.

       GNS-GET-QUE.
           EXEC CICS READQ TS
                     QUEUE(QUE-COLA)
                     INTO(QUE-ITEM)
                     LENGTH(QUE-LITM)
                     ITEM(QUE-NITM)
           END-EXEC.
       FIN-GNS-GET-QUE.
           GO TO FIN-GNS-PRO-QUE.

       FIN-GNS-PRO-QUE.
           EXIT.
