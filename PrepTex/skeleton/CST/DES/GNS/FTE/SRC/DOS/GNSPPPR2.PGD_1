       IDENTIFICATION DIVISION.
      *========================
      *JSS-UYP PROGRAM-ID. GNSPPCOM.
       PROGRAM-ID. GNSPPPR2.
       AUTHOR. GUZMAN Y CIA.

      * COMMAND.

       ENVIRONMENT DIVISION.
      *=====================
       DATA DIVISION.
      *==============
       WORKING-STORAGE SECTION.
      *------------------------
       COPY GNSBRFUN.
       COPY GNSBRMEN.
       COPY GNSWGSCR.
       COPY GNSWGCMN.
       COPY GNSWVFIO.
       COPY GNSWCFIO.
       COPY GNSWGFRM.
       COPY GNSWITRL.
       COPY GNSBRMSG.
      *
       COPY GNSWGRQA.
       COPY GNSWGUIB.
       COPY GNSWGELS.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-MSG-REQA==.
      *
       01  WSS-CMMA.
           03 WSS-RFUN                           PIC X(300).
           03 WSS-NSIS                           PIC X(003).
           03 WSS-SISG                           PIC X(003).
           03 WSS-NEMO                           PIC X(011).
           03 WSS-NEMO-RED REDEFINES WSS-NEMO.
              05 WSS-CMEN                        PIC X(03).
              05 WSS-CACC                        PIC X(03).
              05 WSS-NREG                        PIC X(05).
           03 WSS-AUX-FUNC.
              05 WSS-AUX-CHAR OCCURS 11          PIC X(01).
           03 WSS-MAUT.
              05 WSS-FILA OCCURS 17.
                 07 WSS-COLU OCCURS 6.
                    09 WSS-AUTO                  PIC 9(02).
           03 WSS-STDO                   VALUE 1 PIC 9(02).
           03 WSS-IVAL                   VALUE 9 PIC 9(02).
              88 ES-FUNCION              VALUE 0.
              88 ES-LLAVE-NEMOTECNICA    VALUE 1.
              88 ES-FUNCION-RETORNO      VALUE 2.
              88 FUNCION-INVALIDA        VALUE 3.
           03 WSS-IDIG                           PIC 9(01).
           03 WSS-CPTO                           PIC 9(02).
           03 WSS-SIND.
              05 I                               PIC 9(02).
              05 J                               PIC 9(02).
              05 K                               PIC 9(02).
           03 WSS-PRTA.
              05 WSS-PROG                        PIC X(08).
              05 FILLER                VALUE '/' PIC X(01).
              05 WSS-CMND                        PIC X(03).
           03 WSS-COD-CACC.
              05 WSS-COD-CAC1                    PIC X(02).
              05 WSS-COD-PNT1                    PIC X(01).
              05 WSS-COD-CAC2                    PIC X(02).
              05 WSS-COD-PNT2                    PIC X(01).
              05 WSS-COD-CAC3                    PIC X(02).
              05 WSS-COD-PNT3                    PIC X(01).
              05 WSS-COD-CAC4                    PIC X(02).
      * Variables para Manejo de Usuarios y privilegios.
       COPY USPC113.

       LINKAGE SECTION.
      *----------------
       01  DFHCOMMAREA.
           02 FILLER                             PIC X(1110).
       COPY GNSLGFIO.

       PROCEDURE DIVISION.
      *===================
       MAIN SECTION.
       INI-MAIN.
      * Rutina que detecta transaccion invocada directamente
       COPY USPC143.
           PERFORM CIC-ERR THRU FIN-CIC-ERR.
      *JSS-UYP
           EXEC CICS HANDLE AID
                     CLEAR (CMN-ERR-CLR)
                     PA1   (CMN-ERR-PA2)
                     PA2   (CMN-ERR-PA2)
           END-EXEC.
      *
           IF EIBCALEN = 0
               GOBACK.
           MOVE DFHCOMMAREA TO SCR-VARI.
           IF SCR-DESDE-HDR OR SCR-DESDE-MEN
               PERFORM UYP-CMND.
           IF SCR-INST = SCR-INST-HCM
               MOVE SCR-INST-GFL TO SCR-INST
               PERFORM HBL-CMN.
           PERFORM LEE-CACC.
           PERFORM CAL-PROG.
       FIN-MAIN.
           EXIT.

       UYP-CMND SECTION.
       INI-UYP-CMND.
           MOVE SCR-PROG TO WSS-PROG.
           MOVE '*'      TO WSS-CMND.
           MOVE WSS-PRTA TO USP-PTA-STR.
      * Modulo que contiene la llamada a la rutina de verificacion de permisos
       COPY USPC103.
           IF USP-PERMISO = 'P'
               GO TO FIN-UYP-CMND.

           MOVE 0 TO I.
       LUP-UYP-CMND.
           ADD 1 TO I.
           IF I > 10
               GO TO FIN-UYP-CMND.
           IF SCR-COD-CCMN( I ) NOT > SPACES
               GO TO LUP-UYP-CMND.
           MOVE SCR-COD-CCMN( I ) TO WSS-CMND.
           MOVE WSS-PRTA TO USP-PTA-STR.
      * Modulo que contiene la llamada a la rutina de verificacion de permisos
       COPY USPC103.
           IF USP-PERMISO NOT = 'P'
               MOVE SPACES TO SCR-TABL( I )
               MOVE SPACES TO SCR-GLS-UARC( I )
               MOVE SPACES TO SCR-GLS-PRMT( I )
               MOVE SPACES TO SCR-GLS-CONF( I ).
           GO TO LUP-UYP-CMND.
       FIN-UYP-CMND.
           EXIT.

       HBL-CMN SECTION.
       INI-HBL-CMN.
           PERFORM PUT-CMND VARYING CMN-K FROM 1 BY 1 UNTIL CMN-K > 10.
           IF SCR-TFUN = 'MEN'
               MOVE 'PFSMEN' TO MSG-COD-MENS
           ELSE
               MOVE 'PFSCMN' TO MSG-COD-MENS.
           MOVE 'GNS'    TO MSG-COD-SIST.
           PERFORM GET-MSG.
           STRING MSG-GLS-DESC MSG-GLS-MENS DELIMITED BY SIZE INTO
                  TRL-GLS-TERM.
           MOVE CMN-IDX-CCMN TO TRL-COD-CMND.
           MOVE SCR-PRMC     TO TRL-GLS-PRMT.
           MOVE SPACES       TO TRL-COD-CACC.
           MOVE FRM-CPIM-UBY TO TRL-COD-CACC-ATR.
           MOVE -1           TO TRL-COD-CACC-LEN.
           PERFORM CMN-PUTA.
           PERFORM CMN-EXIT.
       FIN-HBL-CMN.
           EXIT.
       LEE-CACC SECTION.
       INI-LEE-CACC.
           PERFORM LEE-CMND.
           IF FRM-FFLD = FRM-FFLD-TAB
                GO TO CMN-FIN.
           MOVE CMN-I TO SCR-I.
           MOVE SCR-COD-CCMN( SCR-I ) TO SCR-CMND.
           MOVE SCR-COD-CCPP( SCR-I ) TO SCR-CCPP.
           MOVE SCR-IND-STPP( SCR-I ) TO SCR-STPP.
      *JSS MOVE SCR-GLS-CONF( SCR-I ) TO SCR-CONF.
           MOVE SCR-INST-HKY TO SCR-INST.
      *JSS IF SCR-GLS-PRMT( SCR-I ) = SPACES
      *JSS      MOVE 'RET,# CAMPO,TAB A COMANDO' TO SCR-PRMT
      *JSS ELSE
      *JSS      MOVE SCR-GLS-PRMT( SCR-I ) TO SCR-PRMT.
           IF SCR-GLS-UARC( SCR-I ) = SPACES
                GO TO FIN-LEE-CACC.
      *    PERFORM CMN-CONF
      *    IF SCR-VFLD = SCR-VFLD-YES
      *               MOVE TRL-NOM-PRMT TO FRM-NFLD
      *               MOVE SCR-GLS-PRMT( SCR-I ) TO FRM-VFLD
      *               CALL 'DESPROFRM' USING '<PUT>'
      *               MOVE TRL-NOM-CPRM TO FRM-NFLD
      *               CALL 'DESPROFRM' USING '<CLR_FLD>'
      *               CALL 'DESPROFRM' USING '<SWKSP>'
      *               CALL SCR-GLS-UARC( SCR-I )
      *               MOVE TRL-NOM-CPRM TO FRM-NFLD
      *               MOVE TRL-GLS-CPRM TO FRM-VFLD
      *               CALL 'DESPROFRM' USING '<PUT>'.
      *    MOVE TRL-NOM-PRMT TO FRM-NFLD.
      *    MOVE TRL-GLS-PRMT TO FRM-VFLD.
      *    CALL 'DESPROFRM' USING '<PUT>'.
      *    GO TO LEE-CACC.
       FIN-LEE-CACC.
           MOVE SPACES                TO CMN-IDX-CCMN.
           MOVE SCR-COD-CCMN( SCR-I ) TO CMN-COD-CCMN( SCR-I ).
           MOVE CMN-IDX-CCMN          TO TRL-COD-CMND.
           MOVE SPACES                TO TRL-GLS-PRMT
                                         TRL-COD-CACC.
           STRING 'PFSPGI' SCR-IND-STPP( SCR-I ) DELIMITED BY SIZE
                     INTO MSG-COD-TMSG.
           MOVE SPACES TO MSG-COD-CMSG.
           MOVE 'GNS'  TO MSG-COD-SIST.
           PERFORM GET-MSG.
           STRING MSG-GLS-DESC MSG-GLS-MENS DELIMITED BY SIZE
                  INTO TRL-GLS-TERM.
           MOVE SCR-MGKY TO TRL-GLS-MENS.
           MOVE FRM-CPIM-AEY TO TRL-COD-CACC-ATR.
           MOVE -1           TO TRL-COD-CACC-LEN.
           PERFORM CMN-PUTA.
       EXT-LEE-CACC.
           EXIT.
       LEE-CMND SECTION.
       INI-LEE-CMND.
           PERFORM GET-CMND.
           IF FRM-FFLD EQUAL FRM-FFLD-RET
                   GO TO RET-LEE-CMND.
       TAB-LEE-CMND.
      *JSS IF TRL-COD-CACC = SPACES OR '00.00.00.00' OR '  .  .  .  '
      *                         OR LOW-VALUES

           IF TRL-COD-CACC = '00.00.00.00'
               MOVE 0 TO WSS-IVAL.

           IF TRL-COD-CACC NOT > SPACES OR
              TRL-COD-CACC =     '00.00.00.00'
                   GO TO FIN-LEE-CMND.
           MOVE SPACES       TO CMN-COD-FUNC.
           MOVE TRL-COD-CACC TO CMN-COD-FUNC.
           PERFORM VAL-FUNC VARYING CMN-J FROM 1 BY 1 UNTIL
                   CMN-J > 11 OR CMN-COD-CFUN( CMN-J ) NOT > SPACES.
           IF CMN-J NOT > 11
               COMPUTE CMN-JMAX = CMN-J - 1
               MOVE 11 TO CMN-J
               PERFORM JUS-RIGH VARYING CMN-I FROM CMN-JMAX BY -1
                                                    UNTIL CMN-I < 1.
      *JSS
           MOVE CMN-COD-FUNC TO TRL-COD-CACC.
           MOVE TRL-COD-CACC TO WSS-AUX-FUNC.
           MOVE 1 TO WSS-STDO.
           MOVE 0 TO WSS-CPTO.
      *JSS
           MOVE 0 TO WSS-IVAL.

           PERFORM INI-AUTO.
           PERFORM PRO-AUTO VARYING I FROM 1 BY 1 UNTIL I > 11.
           IF ES-FUNCION
               MOVE 11 TO J
               MOVE 0  TO WSS-IDIG
               MOVE SPACES TO CMN-COD-FUNC
               PERFORM NIV-FUNC VARYING I FROM 11 BY -1 UNTIL I < 1 OR
                        ( WSS-AUX-CHAR( I ) NOT > SPACES            AND
                          WSS-IDIG NOT = 1 )
           ELSE
           IF ES-FUNCION-RETORNO
               MOVE WSS-AUX-FUNC TO CMN-COD-FUNC
               MOVE CMN-COD-FUNC TO TRL-COD-CACC
               GO TO FIN-LEE-CMND
           ELSE
           IF ES-LLAVE-NEMOTECNICA
               MOVE 0 TO J
               MOVE SPACES TO CMN-COD-FUNC
               PERFORM NIV-NEMO VARYING I FROM 1 BY 1 UNTIL I > 11
               MOVE CMN-COD-FUNC TO WSS-AUX-FUNC
               MOVE CMN-COD-FUNC TO TRL-COD-CACC
               GO TO FIN-LEE-CMND
           ELSE
               MOVE 'FUNINV' TO MSG-COD-MENS
               MOVE 'GNS'    TO MSG-COD-SIST
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS
               GO TO ERR-LEE-CMND.
      *JSS PERFORM VAL-FUNC VARYING CMN-J FROM 1 BY 1 UNTIL CMN-J > 3 OR
      *      NOT ( CMN-GLS-PUNT(CMN-J) = '.' OR SPACES OR LOW-VALUES).
      *    IF CMN-J NOT > 3
      *            MOVE 'FUNCION NO VALIDA' TO FRM-MENS
      *            GO TO ERR-LEE-CMND.
           PERFORM VAL-FUNC VARYING CMN-JMIN FROM 1 BY 1 UNTIL
                   CMN-COD-NIVE(CMN-JMIN) NOT = SPACES.
      *    PERFORM VAL-FUNC VARYING CMN-JMAX FROM 4 BY -1 UNTIL
      *               CMN-COD-NIVE(CMN-JMAX) NOT = ZEROES.
      *    PERFORM VAL-FUNC VARYING CMN-J FROM CMN-JMIN BY 1
      *               UNTIL CMN-J > CMN-JMAX OR
      *               (( CMN-COD-NIVE(CMN-J) NOT NUMERIC ) AND
      *                ( CMN-COD-NIVE(CMN-J) NOT ALPHABETIC )) OR
      *                ( CMN-COD-NIVE(CMN-J) = SPACES OR ZEROES ).
      *    IF CMN-J NOT > CMN-JMAX
      *               MOVE 'FUNCION NO VALIDA' TO FRM-MENS
      *               GO TO ERR-LEE-CMND.
      *JSS MOVE MEN-COD-FUNC TO FUN-KEY-FUNC.
           MOVE SCR-FUNC     TO FUN-KEY-FUNC.
           PERFORM DET-NIVE VARYING CMN-K FROM 1 BY 1 UNTIL CMN-K > 4.
           PERFORM GET-FUNC VARYING CMN-K FROM 1 BY 1 UNTIL CMN-K > 4.
           MOVE CMN-COD-FUNC TO TRL-COD-CACC
           GO TO FIN-LEE-CMND.
       RET-LEE-CMND.
           MOVE TRL-COD-CACC TO CMN-COD-CACC.
           IF ( TRL-COD-CACC = SPACES OR
                TRL-COD-CACC = LOW-VALUES ) OR
              ( CMN-COD-CAC2 = SPACES OR
                CMN-COD-CAC2 = LOW-VALUES )
                  MOVE 'CMDBLK' TO MSG-COD-MENS
                  MOVE 'GNS'    TO MSG-COD-SIST
                  PERFORM GET-MSG
                  MOVE MSG-GLS-DESC TO FRM-MENS
                  GO TO ERR-LEE-CMND.
           MOVE 1 TO CMN-I.
           SET SCR-ITBL TO 1.
           SEARCH SCR-TABL VARYING CMN-I
                  WHEN SCR-COD-CCMN( SCR-ITBL ) = CMN-COD-CAC2
                         GO TO FIN-LEE-CMND.
           MOVE 'CMDINV' TO MSG-COD-MENS.
           MOVE 'GNS'    TO MSG-COD-SIST.
           PERFORM GET-MSG.
           MOVE MSG-GLS-DESC TO FRM-MENS.
       ERR-LEE-CMND.
           PERFORM FST-CMN.
           PERFORM CMN-MSSG.
           PERFORM CMN-PUTA.
           PERFORM CMN-EXIT.
       FIN-LEE-CMND.
           MOVE CMN-I TO SCR-I.
           MOVE FRM-FFLD TO SCR-FFLD.

       GET-CMND SECTION.
       INI-GET-CMND.
           MOVE 'GNSACMN' TO FRM-NAME.
           MOVE 'GNSACMN' TO FRM-NLIB.
           MOVE FRM-GET-ALL TO FRM-CMND.
           PERFORM GNS-PRO-FRM.
           IF NOT ( FRM-FFLD = FRM-FFLD-RET OR FRM-FFLD-PF3 OR
                               FRM-FFLD-PA2 )
                  MOVE 'PFSINV' TO MSG-COD-MENS
                  MOVE 'GNS'    TO MSG-COD-SIST
                  PERFORM GET-MSG
                  MOVE MSG-GLS-DESC TO FRM-MENS
                  PERFORM FST-CMN
                  PERFORM CMN-MSSG
                  PERFORM CMN-PUTA
                  PERFORM CMN-EXIT.
           MOVE FRM-DFLD TO TRL-FLD.
           IF FRM-FFLD = FRM-FFLD-PA2
               MOVE FRM-FFLD-TAB TO FRM-FFLD
               MOVE '00.00.00.00' TO TRL-COD-CACC.
       FIN-GET-CMND.
           EXIT.

       JUS-RIGH SECTION.
       INI-JUS-RIGH.
           MOVE CMN-COD-CFUN( CMN-I ) TO CMN-COD-CFUN( CMN-J ).
           MOVE SPACES                TO CMN-COD-CFUN( CMN-I ).
           SUBTRACT 1 FROM CMN-J.
       FIN-JUS-RIGH.
           EXIT.
       CMN-PUTA SECTION.
       INI-CMN-PUTA.
           MOVE 'GNSACMN' TO FRM-NAME.
           MOVE 'GNSACMN' TO FRM-NLIB.
           MOVE TRL-FLD   TO FRM-DFLD.
           MOVE FRM-PUT-ALL TO FRM-CMND.
           PERFORM GNS-PRO-FRM.
       FIN-CMN-PUTA.
           EXIT.
       CMN-MSSG SECTION.
       INI-CMN-MSSG.
           MOVE FRM-MENS TO TRL-GLS-MENS.
       FIN-CMN-MSSG.
           EXIT.
       CMN-EXIT SECTION.
       INI-CMN-EXIT.
      *JSS MOVE SCR-CMNT TO FRM-NTRN.
      *JSS MOVE 'GS02'   TO FRM-NTRN.
      *JSS-UYP MOVE 'GS42'   TO FRM-NTRN.
           MOVE 'GS99'   TO FRM-NTRN.
           MOVE 'C'      TO SCR-ICMN.
           MOVE SCR-VARI TO FRM-CMMA.
           MOVE SCR-TCMA TO FRM-TCMA.
           MOVE FRM-EXT  TO FRM-CMND.
           PERFORM GNS-PRO-FRM.
       FIN-CMN-EXIT.
           EXIT.
       CAL-PROG SECTION.
       INI-CAL-PROG.
           MOVE SCR-INST-HKY TO SCR-INST.
           MOVE 'C'          TO SCR-ICMN.
           MOVE SCR-PROG     TO FRM-PROG.
           MOVE SCR-VARI     TO FRM-CMMA.
           MOVE SCR-TCMA     TO FRM-TCMA.
           MOVE FRM-XCT      TO FRM-CMND.
           PERFORM GNS-PRO-FRM.
           PERFORM XCT-ERR.
       FIN-CAL-PROG.
           EXIT.
       FST-CMN SECTION.
       INI-FST-CMN.
           MOVE -1 TO TRL-COD-CACC-LEN.
       FIN-FST-CMN.
           EXIT.
       VAL-FUNC SECTION.
       INI-VAL-FUNC.
       FIN-VAL-FUNC.
           EXIT.

       PUT-CMND SECTION.
       INI-PUT-CMND.
           MOVE SCR-COD-CCMN ( CMN-K ) TO CMN-COD-CCMN ( CMN-K ).
       FIN-PUT-CMND.
             EXIT.

       DET-NIVE SECTION.
       INI-DET-NIVE.
           IF FUN-KEY-NIVE(CMN-K) = ZEROES
              IF CMN-K > 1 AND SCR-TFUN NOT = 'MEN'
                   SUBTRACT 1 FROM CMN-K
                   PERFORM PUT-FUNC VARYING CMN-J FROM CMN-JMIN
                                          BY 1 UNTIL CMN-J > 4
                   MOVE 5 TO CMN-K
               ELSE
                   PERFORM PUT-FUNC VARYING CMN-J FROM CMN-JMIN
                                          BY 1 UNTIL CMN-J > 4
                   MOVE 5 TO CMN-K
           ELSE
           IF CMN-K = CMN-JMIN
               PERFORM PUT-FUNC VARYING CMN-J FROM CMN-JMIN
                                      BY 1 UNTIL CMN-J > 4.
       FIN-DET-NIVE.
           EXIT.

       PUT-FUNC SECTION.
       INI-PUT-FUNC.
           MOVE CMN-COD-NIVE(CMN-J) TO FUN-KEY-NIVE(CMN-K).
           ADD 1 TO CMN-K.
       FIN-PUT-FUNC.
           EXIT.

       GET-FUNC SECTION.
       INI-GET-FUNC.
           MOVE FUN-KEY-NIVE(CMN-K) TO CMN-COD-NIVE(CMN-K).
       FIN-GET-FUNC.
           EXIT.

       CMN-CONF SECTION.
      *INI-CMN-CONF.
      *    MOVE SCR-VFLD-YES TO SCR-VFLD.
      *    IF SCR-CONF = SPACES
      *               GO TO FIN-CMN-CONF.
      *    MOVE TRL-NOM-PRMT TO FRM-NFLD.
      *    MOVE SCR-CONF TO FRM-VFLD.
      *    CALL 'DESPROFRM' USING '<PUT>'.
      *    MOVE TRL-NOM-CPRM TO FRM-NFLD.
      *    MOVE TRL-GLS-CPRM TO FRM-VFLD.
      *    CALL 'DESPROFRM' USING '<PUT>'.
      *    MOVE TRL-NOM-CACC TO FRM-NFLD.
      *    CALL 'DESPROFRM' USING '<CLR_FLD>'.
      *LEE-CMN-CONF.
      *    CALL 'DESPROFRM' USING '<GET>'.
      *    MOVE FRM-VFLD TO SCR-VFLD.
      *    IF NOT ( SCR-VFLD = SCR-VFLD-YES OR SCR-VFLD-NOT OR SPACES )
      *               MOVE 'DEBE SER S (SI), N O BLANCOS (NO)' TO FRM-ME
      *               CALL 'DESPROFRM' USING '<MSG_CLR>'
      *               GO TO LEE-CMN-CONF.
      *    IF SCR-VFLD = SPACES
      *               MOVE SCR-VFLD-NOT TO SCR-VFLD.
      *FIN-CMN-CONF.
      *    MOVE TRL-NOM-CACC TO FRM-NFLD.
      *    CALL 'DESPROFRM' USING '<CLR_FLD>'.

       CMN-FIN SECTION.
       INI-CMN-FIN.
       LUP-CMN-FIN.
           IF TRL-COD-CACC NOT > SPACES
               IF SCR-FRET = SCR-NEMO
                   GO TO FAC-CMN-FIN
               ELSE
                   MOVE SCR-FRET        TO FUN-KEY-NEMO
                   MOVE 'FUN-KEY-NEMO'  TO FIO-AKEY
                   MOVE FIO-GET-KEY-ALT TO FIO-CMND
                   PERFORM VID-FUN
                   MOVE SPACES TO FIO-AKEY
                   GO TO VAL-CMN-FIN.
           IF ES-LLAVE-NEMOTECNICA
               IF TRL-COD-CACC = SCR-NEMO
                   GO TO FAC-CMN-FIN
               ELSE
                   MOVE TRL-COD-CACC    TO FUN-KEY-NEMO
                   MOVE 'FUN-KEY-NEMO'  TO FIO-AKEY
                   MOVE FIO-GET-KEY-ALT TO FIO-CMND
                   PERFORM VID-FUN
                   MOVE SPACES TO FIO-AKEY
                   GO TO VAL-CMN-FIN.
           MOVE TRL-COD-CACC     TO CMN-COD-FUNC.
           MOVE 1 TO CMN-K.
           PERFORM PUT-FUNC VARYING CMN-J FROM 1 BY 1 UNTIL CMN-J > 4.
           IF FUN-KEY-FUNC = SCR-FUNC
               GO TO FAC-CMN-FIN.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM VID-FUN.
       VAL-CMN-FIN.
      *JSS-UYP
           IF NOT FIO-STAT-OKS
               GO TO CON-VAL-CMN-FIN.
           MOVE FUN-KEY-NEMO IN FUN TO USP-PTA-STR.
      * Modulo que contiene la llamada a la rutina de verificacion de permisos
       COPY USPC103.
           IF USP-PERMISO NOT = 'P'
               MOVE 'FUN    NOPRV' TO MSG-COD-MENS
               GO TO ERR-CMN-FIN.
       CON-VAL-CMN-FIN.
      *
           IF FUN-COD-TFUN = 'BAT' OR NOT FIO-STAT-OKS
               IF FUN-KEY-FUNC = ZEROES
                   GO TO SIS-CMN-FIN
               ELSE
                   IF NOT FIO-STAT-OKS
                       MOVE 'FUN    NEX' TO MSG-COD-MENS
                       GO TO ERR-CMN-FIN
                   ELSE
                       MOVE 'FUN    NOPRV' TO MSG-COD-MENS
                       GO TO ERR-CMN-FIN.
           IF FUN-KEY-FUNC = SCR-FUNC
               GO TO FAC-CMN-FIN.
           GO TO FUN-CMN-FIN.
      *    IF FUN-COD-TFUN NOT = 'SUB'
      *               GO TO FUN-CMN-FIN.
      *    MOVE FUN-GLS-CMND TO TRL-TBL-CMND.
      *    MOVE '  OPCION RET, FUNCION TAB' TO TRL-GLS-PRMT.
      *    MOVE SPACES TO TRL-COD-CACC.
      *    MOVE TRL-DFLD TO FRM-DFLD.
      *    CALL 'DESPROFRM' USING '<PUTAL>'.
      *    MOVE TRL-NOM-CACC TO FRM-NFLD.
      *LEE-CMN-FIN.
      *    CALL 'DESPROFRM' USING '<GET>'.
      *    MOVE FRM-VFLD TO TRL-COD-CACC.
      *    IF FRM-FFLD EQUAL FRM-FFLD-BSP
      *               MOVE 'ACCION NO VALIDA' TO FRM-MENS
      *               GO TO MAL-CMN-FIN.
      *    MOVE FRM-VFLD TO TRL-COD-CACC.
      *    IF FRM-FFLD EQUAL FRM-FFLD-RET
      *               GO TO RET-CMN-FIN.
      *TAB-CMN-FIN.
      *    IF TRL-COD-CACC = SPACES OR '00.00.00.00' OR '  .  .  .  '
      *               GO TO LUP-CMN-FIN.
      *    MOVE TRL-COD-CACC TO CMN-COD-FUNC.
      *    PERFORM VAL-FUNC VARYING J FROM 1 BY 1 UNTIL J > 3 OR
      *               NOT ( CMN-GLS-PUNT(J) = '.' OR SPACES ).
      *    IF J NOT > 3
      *               MOVE 'FUNCION NO VALIDA' TO FRM-MENS
      *               GO TO MAL-CMN-FIN.
      *    PERFORM VAL-FUNC VARYING JMIN FROM 1 BY 1 UNTIL
      *               CMN-COD-NIVE(JMIN) NOT = SPACES.
      *    PERFORM VAL-FUNC VARYING JMAX FROM 4 BY -1 UNTIL
      *               CMN-COD-NIVE(JMAX) NOT = ZEROES.
      *    PERFORM VAL-FUNC VARYING J FROM JMIN BY 1 UNTIL J > JMAX OR
      *               (( CMN-COD-NIVE(J) NOT NUMERIC ) AND
      *                ( CMN-COD-NIVE(J) NOT ALPHABETIC )) OR
      *                ( CMN-COD-NIVE(J) = SPACES OR ZEROES ).
      *    IF J NOT > JMAX
      *               MOVE 'FUNCION NO VALIDA' TO FRM-MENS
      *               GO TO MAL-CMN-FIN.
      *    MOVE MEN-COD-FUNC TO FUN-KEY-FUNC.
      *    PERFORM DET-NIVE VARYING K FROM 1 BY 1 UNTIL K > 4.
      *    PERFORM GET-FUNC VARYING K FROM 1 BY 1 UNTIL K > 4.
      *    MOVE CMN-COD-FUNC TO TRL-COD-CACC.
      *    GO TO LUP-CMN-FIN.
      *RET-CMN-FIN.
      *    IF TRL-COD-CACC = SPACES
      *               MOVE 'FALTA OPCION' TO FRM-MENS
      *               GO TO MAL-CMN-FIN.
      *    MOVE FUN-COD-MENU TO FUN-KEY-CMEN.
      *    MOVE TRL-COD-CACC TO CMN-COD-CACC.
      *    MOVE CMN-COD-CAC2 TO FUN-KEY-CACC.
      *    CALL 'DESFIOFUN' USING '<GET_KEY/FUN-KEY-NEMO>'.
      *    IF NOT FIO-STAT-OKS
      *               MOVE 'OPCION INEXISTENTE O NO PERMITIDA' TO FRM-ME
      *               GO TO MAL-CMN-FIN.
      *    GO TO VAL-CMN-FIN.
      *MAL-CMN-FIN.
      *    CALL 'DESPROFRM' USING '<MSG_CLR>'.
      *    GO TO LEE-CMN-FIN.

      *JSS
       FAC-CMN-FIN.
           MOVE 'FUNACT' TO MSG-COD-MENS.
           MOVE 'GNS'    TO MSG-COD-SIST.
           PERFORM GET-MSG.
           MOVE MSG-GLS-DESC TO FRM-MENS.
           MOVE SPACES       TO TRL-COD-CACC.
           GO TO ERR-LEE-CMND.
       ERR-CMN-FIN.
      *    MOVE 'FUNNEX' TO MSG-COD-MENS.
           MOVE 'GNS'    TO MSG-COD-SIST.
           PERFORM GET-MSG.
           MOVE MSG-GLS-DESC TO FRM-MENS.
      *JSS-UYP
           IF ES-FUNCION
               MOVE TRL-COD-CACC TO WSS-COD-CACC
               MOVE '.' TO WSS-COD-PNT1
               MOVE '.' TO WSS-COD-PNT2
               MOVE '.' TO WSS-COD-PNT3
               MOVE WSS-COD-CACC TO TRL-COD-CACC.

           GO TO ERR-LEE-CMND.

      *    CALL 'DESPROFRM' USING '<BELL>'.
      *    CALL 'DESPROFRM' USING '<BELL>'.
      *    MOVE 'FUNCION INEXISTENTE O NO PERMITIDA' TO TRL-GLS-MENS.
      *    CALL 'DESPROFRM' USING '<MSG>'.
      *    CALL 'LIB$WAIT' USING CMN-WAIT.
      *    IF TRL-COD-CACC NOT = SPACES
      *               MOVE SPACES TO TRL-COD-CACC
      *               GO TO LUP-CMN-FIN.
      *    MOVE ZEROES TO FUN-KEY-FUNC.
      *    CALL 'DESFIOFUN' USING '<GET_KEY>'.
      *    IF FIO-STAT-OKS
      *               GO TO PRV-CMN-FIN.
      *JSS
       SIS-CMN-FIN.
           MOVE 'SISNEX' TO MSG-COD-MENS.
           MOVE 'GNS'    TO MSG-COD-SIST.
           PERFORM GET-MSG.
           MOVE MSG-GLS-DESC TO FRM-MENS.
           GO TO ERR-LEE-CMND.
      *    MOVE 'NO EXISTE SISTEMA EN ARCHIVO DESFUN : ABORTO' TO FRM-ME
      *MSG-CMN-FIN.
      *    CALL 'DESPROFRM' USING '<MSG>'.
      *    CALL 'DESFIOMEN' USING '<CLO>'.
      *    CALL 'DESFIOFUN' USING '<CLO>'.
      *    CALL 'DESPROFRM' USING '<FIN>'.
      *    STOP RUN.
       FUN-CMN-FIN.
           IF FUN-COD-SIST = SPACES OR LOW-VALUES
      *         MOVE SCR-RMEN  TO MEN
                MOVE MEN-COD-SIST TO FUN-COD-SIST.
      *    MOVE MEN-COD-SIST   TO CMN-COD-SIST.
      *    MOVE FUN            TO SCR-RMEN.
      *    MOVE FUN-GLS-PROG   TO FRM-PROG.
      *    MOVE +576           TO FRM-TCMA.
      *    MOVE SCR-VARI       TO FRM-CMMA.
      *    PERFORM FRM-XCTL THRU FIN-FRM-XCTL.
      *JSS
           IF FUN-COD-SIST = SPACES OR FUN-COD-SIST = LOW-VALUES OR
              FUN-KEY-FUNC = ZEROES
                MOVE SCR-SIST TO FUN-COD-SIST
                MOVE SCR-SISG TO WSS-SISG
                MOVE SPACES   TO WSS-NSIS
                GO TO CON-CMN-FIN.
           IF FUN-COD-SIST = 'GNS' AND SCR-SIST NOT = 'GNS'
                MOVE SCR-SIST TO WSS-SISG
           ELSE
           IF SCR-SIST = 'GNS' AND FUN-COD-SIST NOT = 'GNS'
                MOVE SPACES TO WSS-SISG.
           MOVE FUN-COD-SIST TO WSS-NSIS.
           MOVE SCR-SIST     TO FUN-COD-SIST.
       CON-CMN-FIN.
           MOVE FUN TO WSS-RFUN.
           IF FUN-COD-TFUN = 'PGI' OR 'PRO'
      *JSS-UYP MOVE 'GNSPPHEA' TO FRM-PROG
               MOVE 'GNSPPPR0' TO FRM-PROG
           ELSE
           IF FUN-COD-TFUN = 'MEN'
               IF FUN-GLS-PROG > SPACES
                   MOVE FUN-GLS-PROG TO FRM-PROG
               ELSE
      *JSS-UYP     MOVE 'GNSPPMEN' TO FRM-PROG.
                   MOVE 'GNSPPPR1' TO FRM-PROG.
           IF FUN-COD-TFUN = 'PGI' OR 'PRO' OR 'MEN'
              MOVE WSS-CMMA     TO FRM-CMMA
              MOVE +317         TO FRM-TCMA
              MOVE FRM-XCT      TO FRM-CMND
              PERFORM GNS-PRO-FRM
              PERFORM XCT-ERR
           ELSE
              MOVE FUN-GLS-PROG TO FRM-PROG
              MOVE LOW-VALUES   TO FRM-CMMA
              MOVE 0            TO FRM-TCMA
              MOVE FRM-XCT      TO FRM-CMND
              PERFORM GNS-PRO-FRM.
           MOVE 'XCTERR' TO MSG-COD-MENS.
           MOVE 'GNS'    TO MSG-COD-SIST.
           PERFORM GET-MSG.
           MOVE MSG-GLS-DESC TO FRM-MENS.
           GO TO ERR-LEE-CMND.
      *    MOVE CMN-COD-SIST   TO MEN-COD-SIST
      *    CALL 'LIB$DO_COMMAND' USING BY DESCRIPTOR FUN-GLS-CMND.
      *    GOBACK.
       FIN-CMN-FIN.
           EXIT.
       INI-AUTO SECTION.
       INI-INI-AUTO.
           MOVE  ZEROES TO WSS-MAUT.
           MOVE  1 TO WSS-AUTO( 13 ,  1 ).
           MOVE  2 TO WSS-AUTO(  1 ,  1 ).
           MOVE  3 TO WSS-AUTO(  4 ,  1 ) WSS-AUTO( 10 ,  1 )
                      WSS-AUTO( 11 ,  1 ).
           MOVE  1 TO WSS-AUTO(  1 ,  2 ).
           MOVE  3 TO WSS-AUTO(  2 ,  3 ) WSS-AUTO(  2 ,  4 )
                      WSS-AUTO(  7 ,  4 ).
           MOVE  4 TO WSS-AUTO(  2 ,  5 ) WSS-AUTO(  3 ,  5 )
                      WSS-AUTO(  5 ,  5 ) WSS-AUTO(  6 ,  5 )
                      WSS-AUTO( 15 ,  5 ) WSS-AUTO( 17 ,  5 ).
           MOVE  5 TO WSS-AUTO(  4 ,  4 ).
           MOVE  6 TO WSS-AUTO(  5 ,  3 ) WSS-AUTO(  5 ,  4 )
                      WSS-AUTO(  8 ,  4 ).
           MOVE  8 TO WSS-AUTO(  4 ,  3 ).
           MOVE  9 TO WSS-AUTO(  7 ,  3 ) WSS-AUTO(  8 ,  3 )
                      WSS-AUTO( 12 ,  3 ).
           MOVE 10 TO WSS-AUTO(  7 ,  5 ) WSS-AUTO(  8 ,  5 )
                      WSS-AUTO( 12 ,  5 ) WSS-AUTO( 14 ,  5 ).
           MOVE 11 TO WSS-AUTO(  9 ,  5 ) WSS-AUTO( 16 ,  5 ).
           MOVE 12 TO WSS-AUTO( 10 ,  3 ) WSS-AUTO( 11 ,  3 ).
           MOVE 13 TO WSS-AUTO(  1 ,  6 ) WSS-AUTO( 13 ,  2 )
                      WSS-AUTO( 13 ,  3 ) WSS-AUTO( 13 ,  4 )
                      WSS-AUTO( 13 ,  6 ) WSS-AUTO( 14 ,  2 )
                      WSS-AUTO( 15 ,  2 ) WSS-AUTO( 15 ,  6 )
                      WSS-AUTO( 16 ,  2 ) WSS-AUTO( 16 ,  3 )
                      WSS-AUTO( 16 ,  4 ) WSS-AUTO( 16 ,  6 )
                      WSS-AUTO( 17 ,  2 ) WSS-AUTO( 17 ,  3 )
                      WSS-AUTO( 17 ,  4 ) WSS-AUTO( 17 ,  6 ).
           MOVE 14 TO WSS-AUTO(  1 ,  3 ).
           MOVE 15 TO WSS-AUTO(  1 ,  4 ).
           MOVE 16 TO WSS-AUTO( 14 ,  3 ).
           MOVE 17 TO WSS-AUTO( 14 ,  4 ) WSS-AUTO( 15 ,  3 )
                      WSS-AUTO( 15 ,  4 ).
       FIN-INI-AUTO.
           EXIT.
       PRO-AUTO SECTION.
       INI-PRO-AUTO.
           IF WSS-AUX-CHAR( I ) NOT > SPACES
               MOVE 2 TO J
           ELSE
           IF WSS-AUX-CHAR( I ) = '0'
               MOVE 3 TO J
           ELSE
           IF '0' < WSS-AUX-CHAR( I ) AND WSS-AUX-CHAR( I ) NOT > '9'
               MOVE 4 TO J
           ELSE
           IF WSS-AUX-CHAR( I ) = '.'
               MOVE 5 TO J
               ADD 1 TO WSS-CPTO
               IF WSS-CPTO > 3
                   MOVE 0 TO WSS-STDO
                   MOVE 3 TO WSS-IVAL
                   MOVE 12 TO I
                   GO TO FIN-PRO-AUTO
               ELSE
                   NEXT SENTENCE
           ELSE
               MOVE 6 TO J.
           MOVE WSS-AUTO( WSS-STDO , J ) TO WSS-STDO.
           IF WSS-STDO NOT = 0
               MOVE WSS-AUTO( WSS-STDO , 1 ) TO WSS-IVAL
           ELSE
               MOVE 3 TO WSS-IVAL
               MOVE 12 TO I.
       FIN-PRO-AUTO.
           EXIT.
       NIV-FUNC SECTION.
       INI-NIV-FUNC.
           IF '0' NOT > WSS-AUX-CHAR( I ) AND
                        WSS-AUX-CHAR( I ) NOT > '9'
               MOVE WSS-AUX-CHAR( I ) TO CMN-COD-CFUN( J )
               SUBTRACT 1 FROM J
               ADD 1 TO WSS-IDIG
           ELSE
           IF WSS-AUX-CHAR( I ) = '.'
               IF WSS-IDIG = 1
                   MOVE '0' TO CMN-COD-CFUN( J )
                   COMPUTE K = J - 1
                   MOVE '.' TO CMN-COD-CFUN( K )
                   SUBTRACT 2 FROM J
                   MOVE 0 TO WSS-IDIG
               ELSE
                   MOVE '.' TO CMN-COD-CFUN( J )
                   SUBTRACT 1 FROM J
                   MOVE 0 TO WSS-IDIG
           ELSE
               MOVE '0' TO CMN-COD-CFUN( J )
               SUBTRACT 1 FROM J
               MOVE 0 TO WSS-IDIG.
       FIN-NIV-FUNC.
           EXIT.
       NIV-NEMO SECTION.
       INI-NIV-NEMO.
           IF   WSS-AUX-CHAR( I ) > SPACES OR
              ( WSS-AUX-CHAR( I ) NOT > SPACES AND J > 1 )
                 ADD 1 TO J
                 MOVE WSS-AUX-CHAR( I ) TO CMN-COD-CFUN( J ).
       FIN-NIV-NEMO.
           EXIT.
       VID-FUN SECTION.
       INI-VID-FUN.
           MOVE SCR-SIST TO FIO-SIST.
           PERFORM GNS-FIO-FUN.
       FIN-VID-FUN.
           EXIT.
       XCT-ERR SECTION.
       INI-XCT-ERR.
           MOVE FRM-CLR-FRM TO FRM-CMND.
           PERFORM GNS-PRO-FRM.
           MOVE 'XCTERR    ' TO MSG-COD-MENS.
           MOVE 'GNS'        TO MSG-COD-SIST.
           PERFORM GET-MSG.
           MOVE MSG-GLS-DESC TO FRM-MENS.
           MOVE FRM-MSG      TO FRM-CMND.
           PERFORM GNS-PRO-FRM.
           GOBACK.
       FIN-XCT-ERR.
           EXIT.
       COPY GNSBGVSM.
       COPY GNSBGDTC.
       COPY GNSBGFRM.
       COPY GNSBECIC.
       COPY GNSBFFUN.
       COPY GNSBGMSG.
       COPY GNSBFMSG.
       COPY GNSBIABT.

       CMN-ERR-PA2.
           MOVE FRM-FFLD-PA2 TO FRM-FFLD.
           GO TO CIC-ERR-FRM.
       CMN-ERR-CLR.
           MOVE FRM-FFLD-PA2 TO FRM-FFLD.
           MOVE SPACES TO SCR-FUNC.
           GO TO CIC-ERR-FRM.
