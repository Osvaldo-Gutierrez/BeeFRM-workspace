       IDENTIFICATION DIVISION.
      *========================
       PROGRAM-ID. GNSPP081.
       AUTHOR. BEE.
       DATE-WRITTEN.   02-ENE-2004 19:52:30
      * IDENTIFICACION = MULTI-V1B1
      * PROCESA MENUS Y COMANDOS CON MANEJO DE PRIVILEGIOS.
      * ISP:  17-MAR-1993 07:54:47
      * PERMITE MANEJAR UNA LINEA DE PFS ESPECIAL
      * POR PROGRAMA-COMANDO
       ENVIRONMENT DIVISION.
      *=====================
       DATA DIVISION.
      *==============
       WORKING-STORAGE SECTION.
      *------------------------
       77  WSS-TAG-GNSPPO81-IDN PIC X(125) VALUE
           '<IDNMOD NOM=$GNSPPO81$ VGF=$MANUAL                $ VSN=$01.
      -    '10.02$ GEN=$11-OCT-04 09:39 PM$ FNC=$INVO-PRV$/>'.
       77  WSS-IDN-CICS   VALUE SPACES      PIC X(08).
       77  WSS-IDN-IPRO   VALUE SPACES      PIC X(08).
      
       01  WSS-GLS-DBG.
           03 WSS-GLS-DBG-01  VALUE '+++++' PIC X(05).
           03 WSS-GLS-DBG-IDE VALUE SPACES  PIC X(10).
           03 WSS-GLS-DBG-MSG VALUE SPACES  PIC X(1000).
           03 WSS-GLS-DBG-02  VALUE '+++++' PIC X(05).
      
      
      
      
       01  WSS-GLS-TRAN             PIC X(04)    VALUE 'GS81'.
       01  WSS-GLS-PROG             PIC X(08)    VALUE 'GNSPP081'.
       COPY GNSWGABP.
       COPY GNSWGAMB.
       COPY GNSWGTSK.
       COPY GNSBRRCI.
       COPY GNSWRRCI.
      
      *COPY GNSWGRFL.
       01  WSS-MNU-GLS-LFRM.
           03 FILLER                   PIC X(03).
           03 WSS-MNU-GLS-LFRM-TIPO    PIC X(01).
           03 FILLER                   PIC X(03).
      
       01  WSS-MNU-GLS-NFRM.
           03 FILLER                   PIC X(03).
           03 WSS-MNU-GLS-NFRM-TIPO    PIC X(01).
           03 FILLER                   PIC X(03).
      
       01  WSS-GLS-TRID             PIC X(04)    VALUE 'GS81'.
       01  WSS-COD-SMNU             PIC X(03)    VALUE SPACES.
       77  WSS-STAT-MNU-BKP         PIC X(02).
       COPY GNSBRMNU.
       COPY GNSBRRPF.
      * COPY GNSWGSCR.
       COPY GNSWGOSC.
       COPY GNSWCSCR.
       COPY GNSWVSCR.
       01  IDD-INIC              VALUE '##INI##' PIC X(07).
       COPY GNSWVIDD.
       01  IDD-FINA              VALUE '##FIN##' PIC X(07).
       COPY GNSWGTSL.
      * COPY GNSWGCMN.
       01  CMN-VARI.
           03 CMN-SIND.
              05 CMN-I                PIC 9(02).
              05 CMN-K                PIC 9(02).
           03 CMN-IDX-CCMN    VALUE SPACES.
              05 CMN-VEC-CCMN OCCURS 10.
                 07 CMN-COD-CCMN      PIC X(03).
                 07 FILLER            PIC X(01).
       COPY GNSWVFIO.
       COPY GNSWCFIO.
       COPY GNSWGFRM.
       COPY GNSWITRL.
       COPY GNSWIOPC.
       COPY GNSWIOP1.
       COPY GNSBRMSG.
      *
       COPY GNSWGRQA.
       COPY GNSWGUIB.
       COPY GNSWGELS.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-MSG-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-RCI-REQA==.
      *
       01  RFN-VARI.
           03  RFN-COLA.
               05  RFN-TYPE VALUE 'GRET'            PIC X(04).
               05  RFN-TERM                         PIC X(04).
           03  RFN-LITM     COMP                    PIC S9(04).
           03  RFN-ITEM.
               05  RFN-PROG                         PIC X(08).
               05  RFN-FUNC.
                   07  RFN-SIST                     PIC X(03).
                   07  RFN-SISG                     PIC X(03).
                   07  RFN-NEMO                     PIC X(12).
                   07  RFN-CMND                     PIC X(03).
      *
       01  WSS-VARI.
      * ISP:  17-MAR-1993 07:54:47
           03 WSS-COD-MSG0.
              05 WSS-COD-MSG1                         PIC X(01).
              05 WSS-COD-MSG2                         PIC X(08).
              05 WSS-COD-MSG3                         PIC X(03).
      * ISP:  17-MAR-1993 07:54:47
      
           03 WSS-SCOD                                PIC X(02).
           03 WSS-SEFN                                PIC X(02).
           03 WSS-SXCT               COMP VALUE +3588 PIC S9(04).
           03 WSS-SXCT-RED         REDEFINES WSS-SXCT PIC X(02).
           03 WSS-QIDD.
              05 WSS-NIDD     VALUE 'GIDD'    PIC X(04).
              05 WSS-TIDD                     PIC X(04).
           03 WSS-QIDD-081.
              05 WSS-NIDD-081 VALUE 'G081'    PIC X(04).
              05 WSS-TIDD-081                 PIC X(04).
           03 WSS-CCOD                   VALUE SPACES PIC X(05).
              88 WSS-CCOD-APCT           VALUE 'APCT'.
              88 WSS-CCOD-ABM0           VALUE 'ABM0'.
           03 WSS-DFLD VALUE SPACES.
              05 WSS-NTRN                             PIC X(04).
              05 WSS-CAXC.
                 07 WSS-SIST.
                    09 WSS-CSIS OCCURS 3              PIC X(01).
                 07 WSS-RCV-AMBI-SIST REDEFINES
                    WSS-SIST     PIC X(03).
                 07 WSS-FILL                          PIC X(01).
                 07 WSS-SISG                          PIC X(03).
      *  BNCO-MRCA-CART-LENG-PAIS-VRNT-CNAL-USER-MODO
                 07 WSS-RCV-AMBI.
                    09 WSS-RCV-AMBI-BNCO              PIC X(03).
                    09 WSS-RCV-AMBI-MRCA              PIC X(03).
                    09 WSS-RCV-AMBI-CART              PIC X(03).
                    09 WSS-RCV-AMBI-LENG              PIC X(02).
                    09 WSS-RCV-AMBI-PAIS              PIC X(02).
                    09 WSS-RCV-AMBI-VRNT              PIC X(01).
                    09 WSS-RCV-AMBI-CNAL              PIC X(05).
                    09 WSS-RCV-AMBI-UMUA              PIC X(12).
                    09 WSS-RCV-AMBI-MODO              PIC X(01).
      
                07 WSS-DISP                          PIC X(09).
           03 WSS-DFLD-RED REDEFINES
              WSS-DFLD.
              05 WSS-DFLD-OCC OCCURS 52 TIMES.
                  07 WSS-DFLD-ELM                     PIC X(01).
           03 WSS-IFLD VALUE ZEROES                   PIC 9(03).
           03 WSS-FUNC.
              05 WSS-FCHR OCCURS 11                   PIC X(01).
           03 WSS-AFUN.
              05 WSS-ACHR OCCURS 11                   PIC X(01).
           03 WSS-OPCI.
              05 WSS-COPC OCCURS 3                    PIC X(01).
           03 WSS-CMND.
              05 WSS-CCMD OCCURS 3                    PIC X(01).
           03 WSS-MAUT.
              05 WSS-FILA OCCURS 12.
                 07 WSS-COLU OCCURS 09.
                    09 WSS-AUTO                  PIC 9(02).
           03 WSS-MAUT-RED REDEFINES WSS-MAUT.
              05 WSS-ITM1                        PIC X(18).
              05 WSS-ITM2                        PIC X(18).
              05 WSS-ITM3                        PIC X(18).
              05 WSS-ITM4                        PIC X(18).
              05 WSS-ITM5                        PIC X(18).
              05 WSS-ITM6                        PIC X(18).
              05 WSS-ITM7                        PIC X(18).
              05 WSS-ITM8                        PIC X(18).
              05 WSS-ITM9                        PIC X(18).
              05 WSS-ITMA                        PIC X(18).
              05 WSS-ITMB                        PIC X(18).
              05 WSS-ITMC                        PIC X(18).
           03 WSS-STDO                   VALUE 1 PIC 9(02).
           03 WSS-ISIS                   VALUE 0 PIC 9(02).
           03 WSS-IOPC                   VALUE 0 PIC 9(02).
           03 WSS-ICMD                   VALUE 0 PIC 9(02).
           03 WSS-IMAX                   VALUE 0 PIC 9(02).
           03 WSS-IVAL                   VALUE 9 PIC 9(02).
              88 FUNCION-INVALIDA        VALUE 0.
              88 FUNCION-VALIDA          VALUE 1.
           03 WSS-SIND.
              05 WSS-I                           PIC 9(02).
              05 WSS-J                           PIC 9(02).
              05 WSS-K                           PIC 9(02).
              05 WSS-L                           PIC 9(02).
              05 WSS-M                           PIC 9(02).
           03 WSS-AUXI                           PIC X(03).
           03 UYP-PRTA.
              05 UYP-PROG                        PIC X(08).
              05 FILLER                VALUE '/' PIC X(01).
              05 UYP-CMND                        PIC X(03).
           03 WSS-MENS.
              05 WSS-MEN1                        PIC X(40).
              05 WSS-MEN2                        PIC X(79).
           03 WSS-COD-MENS.
              05 WSS-COD-TMSG.
                 07 WSS-COD-TMN1                 PIC X(03).
                 07 WSS-COD-TMN2                 PIC X(03).
                 07 WSS-COD-TMN3                 PIC X(01).
              05 WSS-COD-CMSG                    PIC X(05).
           03 WSS-ICMN                           PIC X(01).
              88 WSS-DESDE-CMN VALUE 'K'.
      *************************************************************
           03 WSS-IND-CMND             VALUE 0   PIC 9(01).
              88 WSS-EXISTE-COMANDO    VALUE 1.
              88 WSS-COMANDO-SINPRV    VALUE 2.
      *
           03 WSS-AUX-CMNP                       PIC X(08).
           03 WSS-AUX-PRMC                       PIC X(25).
           03 WSS-AUX-CMND                       PIC X(03).
           03 WSS-AUX-CRPF.
              05 WSS-TABL OCCURS 10.
                 07 WSS-COD-CMND                 PIC X(03).
                 07 WSS-COD-CCPP                 PIC X(03).
                 07 WSS-IND-STPP                 PIC X(01).
                 07 WSS-GLS-PRMT                 PIC X(25).
                 07 WSS-GLS-CONF                 PIC X(25).
                 07 WSS-GLS-UARC                 PIC X(12).
           03 WSS-IPRV                           PIC X(01).
              88 WSS-IPRV-TODO        VALUE '*'.
              88 WSS-IPRV-TODOS-MENUS VALUE '*', 'O', 'U', 'Q'.
              88 WSS-IPRV-TODOS-MAN   VALUE '*', 'U', 'M'.
              88 WSS-IPRV-TODOS-CON   VALUE '*', 'Q', 'C'.
           03 WSS-KNMO VALUE SPACES.
              05 WSS-KNMO-SIST                   PIC X(03).
              05 WSS-KNMO-SISG                   PIC X(03).
              05 WSS-KNMO-NEMO                   PIC X(12).
              05 WSS-KNMO-CMND                   PIC X(03).
              05 WSS-KNMO-PROG                   PIC X(08).
      * Variables que vienen de GNSPPMEN
       01  WSS-VOPC.
           03 WSS-STAT              VALUE 0        PIC 9(01).
              88 WSS-STAT-OKS       VALUE 0.
              88 WSS-STAT-WRN       VALUE 1.
              88 WSS-STAT-MAL       VALUE 2.
           03 WSS-SIND.
              05 I                                 PIC 9(02).
              05 J                                 PIC 9(02).
              05 K                  VALUE 0        PIC 9(02).
              05 L                  VALUE 0        PIC 9(02).
              05 IMIN               VALUE 0        PIC 9(02).
              05 IMAX               VALUE 0        PIC 9(02).
           03 WSS-RMNU                             PIC X(490).
           03 WSS-NSIS                             PIC X(003).
           03 WSS-MENU                             PIC X(003).
           03 WSS-NEMO                             PIC X(012).
           03 WSS-NEMO-RED REDEFINES WSS-NEMO.
              05 WSS-NEMO-CHR OCCURS 12            PIC X(01).
           03 WSS-IFRM                   VALUE '0' PIC X(01).
      *Variables para GNSSCRHDR
       01  HEA-VARI.
           03 HEA-SIMP              VALUE SPACES.
              05 HEA-GLS-SIMP       OCCURS 31      PIC X(01).
           03 HEA-DOBL              VALUE SPACES.
              05 HEA-GLS-DOBL       OCCURS 61      PIC X(01).
           03 HEA-FEC-DMSA.
              05 HEA-NUM-DMSA                      PIC 9(02).
              05 HEA-GLS-SLA1                      PIC X(01).
              05 HEA-NUM-MMSA                      PIC 9(02).
              05 HEA-GLS-SLA2                      PIC X(01).
              05 HEA-NUM-SMSA                      PIC 9(02).
              05 HEA-NUM-AMSA                      PIC 9(02).
       COPY GNSWGHOY.
       COPY GNSWGSYS.
       COPY GNSWIHDM.
      * Variables para Manejo de Usuarios y privilegios.
           COPY USPC113.
       01  AUX-VARI.
           03 AUX-UARC.
              05 AUX-RPRG                        PIC X(08).
              05 AUX-RTRN                        PIC X(04).
           03 AUX-PRGM.
              05 AUX-PROG                        PIC X(08).
              05 AUX-NTRN                        PIC X(04).
       COPY GNSBRIDD.
      *POR MIENTRAS POR EL XCONTROL QUE SE HACE DESDE MENU
       01  WSS-CMMA VALUE SPACES.
           03 WSS-RFUN                             PIC X(300).
           03 WSS-NSXC                             PIC X(003).
           03 WSS-GSXC                             PIC X(003).
           03 FILLER                               PIC X(011).
      *
       01  WSS-CHK-SIST                  VALUE ' ' PIC X(01).
           88 WSS-CHK-SIST-SI            VALUE 'S'.
       01  IFD.
           03  FILLER                            PIC X(01).
           03  IFD-COD-CIFD                      PIC X(12).
           03  IFD-GLS-DATA                      PIC X(210).
           03  FILLER                            PIC X(18).
        COPY GNSWGQUE.
      *  Variables para Manejo de Colas.
      *01  QUE-VARI.
      *    03 QUE-COLA.
      *       05 QUE-TERM                              PIC  X(04).
      *       05 QUE-TYPE                              PIC  X(04).
      *    03 QUE-NITM       COMP VALUE +0             PIC S9(04).
      *    03 QUE-LITM       COMP                      PIC S9(04).
      *    03 QUE-ITEM.
      *       05 QUE-IKEY                              PIC  X(03).
      **      05 QUE-LDAT    COMP VALUE +0             PIC S9(04).
      **      05 QUE-PCUR    COMP VALUE +0             PIC S9(04).
      *       05 QUE-DATA                              PIC  X(80).
      *    03 QUE-STAT            VALUE 'OKS'          PIC  X(03).
      *    03 QUE-STAT-OKS        VALUE 'OKS'          PIC  X(03).
      *    03 QUE-STAT-NEX        VALUE 'NEX'          PIC  X(03).
      *    03 QUE-STAT-EOQ        VALUE 'EOQ'          PIC  X(03).
      *    03 QUE-CMND                                 PIC  X(03).
      *    03 QUE-MENS.
      *       05 QUE-MEN1                              PIC  X(40).
      *       05 QUE-MEN2                              PIC  X(39).
      *01  QUE-CTTS.
      **    03 QUE-PUT             VALUE 'PUT'          PIC  X(03).
      *    03 QUE-GET             VALUE 'GET'          PIC  X(03).
      **    03 QUE-MOD             VALUE 'MOD'          PIC  X(03).
      **    03 QUE-DEL             VALUE 'DEL'          PIC  X(03).
      *PARA TFUN = 'PTC'
       01  WSS-PPPV.
           03 WSS-PROV                                  PIC X(08).
           03 FILLER                                    PIC X(01).
           03 WSS-NTRV                                  PIC X(04).
       01  WSS-TSC-AUXI.
           03 FILLER                                    PIC X(05).
           03 WSS-CMA-OPCI                              PIC X(03).
           03 FILLER                                    PIC X(57).
           03 WSS-TSC-OPCI                              PIC X(03).
       01  WSS-USER                                     PIC X(08).
       01  WSS-OPID                                     PIC X(03).
      
       LINKAGE SECTION.
      *----------------
       01  DFHCOMMAREA.
      *JSS 02 FILLER                             PIC X(250).
      *DE TAMANO 317 SOLAMENTE POR LA COMMAREA DE UYP ( MENU )
           02 FILLER                             PIC X(317).
       COPY GNSLGFIO.
       PROCEDURE DIVISION.
      *===================
       MAIN SECTION.
       INI-MAIN.
      * Rutina que detecta transaccion invocada directamente
           PERFORM GET-TSK-TERM.
           PERFORM GNS-ERR-QUE.
           EXEC CICS ASSIGN
                     APPLID(WSS-IDN-CICS)
           END-EXEC.
           EXEC CICS ASSIGN
                     INVOKINGPROG(WSS-IDN-IPRO)
           END-EXEC.
      
           PERFORM DEL-ABP.
      
           MOVE EIBFN TO WSS-SEFN.
           EXEC CICS ASSIGN
                     STARTCODE(WSS-SCOD)
           END-EXEC.
      
      *ALD-BCI-INI/19071998
           MOVE LOW-VALUES TO HDR-FLD.
           MOVE LOW-VALUES TO TRL-FLD.
           MOVE LOW-VALUES TO OPC-FLD.
           MOVE LOW-VALUES TO OP1-FLD.
           MOVE LOW-VALUES TO TRL-GLS-MENS IN TRL-FLD.
           MOVE LOW-VALUES TO OPC-GLS-MENS IN OPC-FLD.
           MOVE LOW-VALUES TO OP1-GLS-MENS IN OP1-FLD.
      *ALD-BCI-FIN/19071998
      
      
           COPY USPC143.
           MOVE USP-COD-USUARIO  TO TSC-USER.
           MOVE USP-COD-TERMINAL TO TSC-OTRN.
      
      
           PERFORM GNS-ERR-QUE.
      
      
           PERFORM GNS-PRO-KEY.
      *    PERFORM CIC-ERR THRU FIN-CIC-ERR.
           PERFORM GNS-HDL-MNU.
      *OLD     MOVE WSS-GLS-PROG TO IDD-COD-CIDD IN IDD.
      *OLD     MOVE FIO-GET-KEY TO FIO-CMND.
      *OLD     PERFORM GNS-FIO-IDD.
      *OLD     IF NOT FIO-STAT-OKS
      *OLD         MOVE 'DEFAULT' TO IDD-COD-CIDD IN IDD
      *OLD         MOVE FIO-GET-KEY TO FIO-CMND
      *OLD         PERFORM GNS-FIO-IDD
      *OLD         IF NOT FIO-STAT-OKS
      *OLD             PERFORM BUS-FSIS
      *OLD         ELSE
      *OLD             MOVE IDD TO IDD-REGI
      *OLD     ELSE
      *OLD         MOVE IDD TO IDD-REGI.
      
      *
           IF WSS-IDN-IPRO = 'GNSPUCNX'
               MOVE DFHCOMMAREA(1:EIBCALEN) TO FRM-DFLD
               MOVE FRM-DFLD TO WSS-DFLD.
      
           IF WSS-IDN-IPRO = 'GNSPUCNX'
                PERFORM SET-CNX-HDR
           ELSE
           IF WSS-IDN-IPRO = 'USDP930'
      *    IF EIBCALEN = 317
               PERFORM SET-DFL-HDR
           ELSE
           IF EIBCALEN = 0
               MOVE +52     TO FRM-LFLD
               MOVE FRM-RCV TO FRM-CMND
               PERFORM GNS-PRO-FRM
               MOVE FRM-DFLD TO WSS-DFLD
               PERFORM CLR-DFLD VARYING WSS-IFLD FROM 1 BY 1
                 UNTIL WSS-IFLD > 52
      *         MOVE WSS-RCV-AMBI TO WSS-TSL
      *        IF WSS-TSC-BNCO NOT > SPACES
               IF WSS-RCV-AMBI-BNCO NOT > SPACES
                   PERFORM SET-DFL-HDR
               ELSE
      *             MOVE WSS-TSC-BNCO TO TSC-BNCO
      *             MOVE WSS-TSC-MRCA TO TSC-MRCA
      *             MOVE WSS-TSC-CART TO TSC-CART
      *             MOVE WSS-TSC-LENG TO TSC-LENG
      *             MOVE WSS-TSC-PAIS TO TSC-PAIS
      *             MOVE WSS-TSC-VRNT TO TSC-VRNT
      *             MOVE WSS-TSC-CNAL TO TSC-CNAL
      *             MOVE WSS-TSC-USER TO TSC-USER
      *             MOVE WSS-TSC-MODO TO TSC-MODO
      *
      *             PERFORM SET-AMB.
      
                   MOVE WSS-RCV-AMBI-BNCO TO TSC-BNCO
                   MOVE WSS-RCV-AMBI-MRCA TO TSC-MRCA
                   MOVE WSS-RCV-AMBI-CART TO TSC-CART
                   MOVE WSS-RCV-AMBI-LENG TO TSC-LENG
                   MOVE WSS-RCV-AMBI-PAIS TO TSC-PAIS
                   MOVE WSS-RCV-AMBI-VRNT TO TSC-VRNT
                   MOVE WSS-RCV-AMBI-CNAL TO TSC-CNAL
                   MOVE WSS-RCV-AMBI-UMUA TO TSC-UMUA
                   MOVE WSS-RCV-AMBI-MODO TO TSC-MODO.
      
      *            PERFORM SET-AMB.
      
      *    ELSE
      *    IF NOT ( EIBCALEN = 21 OR 29 OR 317 )
      *         PERFORM GNS-GET-TSC.
      
           IF EIBCALEN = 0           OR
      *       EIBCALEN = 317         OR
              WSS-IDN-IPRO = 'USDP930' OR
              WSS-IDN-IPRO = 'GNSPUCNX'
      
               MOVE TSC-BNCO TO RCI-COD-BNCO IN RCI-VARI
               MOVE TSC-MRCA TO RCI-COD-MRCA IN RCI-VARI
               MOVE TSC-CART TO RCI-COD-CART IN RCI-VARI
               MOVE TSC-LENG TO RCI-COD-LENG IN RCI-VARI
               MOVE TSC-PAIS TO RCI-COD-PAIS IN RCI-VARI
               MOVE TSC-VRNT TO RCI-COD-VRNT IN RCI-VARI
               MOVE TSC-CNAL TO RCI-COD-CNAL IN RCI-VARI
               MOVE TSC-UMUA TO RCI-COD-UMUA IN RCI-VARI
               MOVE TSC-MODO TO RCI-COD-MODO IN RCI-VARI
      
               MOVE WSS-GLS-PROG TO RCI-COD-CPTO IN RCI-VARI
               PERFORM BUS-RCI-IDD
               PERFORM PUT-CNAD
               PERFORM GNS-PUT-IDD-081
           ELSE
               PERFORM GNS-GET-TSC
               PERFORM GNS-GET-IDD-081.
      
           IF EIBCALEN = 0           OR
      *       EIBCALEN = 317         OR
              WSS-IDN-IPRO = 'USDP930' OR
              WSS-IDN-IPRO = 'GNSPUCNX'
      
      *
      *        PERFORM SET-DFL-HDR
               MOVE TSC-ICMN TO WSS-ICMN
      *
               PERFORM INI-SIST
      *        PERFORM BUS-MGKY
               PERFORM PRO-RMNU
           ELSE
      *JSS IF EIBCALEN = 21
           IF EIBCALEN = 21 OR 29
               MOVE DFHCOMMAREA(1:EIBCALEN) TO WSS-KNMO
               MOVE 'K'      TO TSC-ICMN
               MOVE TSC-ICMN TO WSS-ICMN
               PERFORM INI-FUNC
               PERFORM SET-PERFIL-SIST
               PERFORM CHK-PRV-SIST
      *        PERFORM PRO-RMNU
               PERFORM PRO-FIN
           ELSE
               PERFORM GNS-GET-TSC
      *
      *        MOVE DFHCOMMAREA TO SCR-VARI
      *
               MOVE TSC-ICMN TO WSS-ICMN
               IF ( NOT WSS-DESDE-CMN ) AND
                  ( TSC-TFUN = 'HMX' OR 'XMX' OR 'RET' )
      *           AND EXISTIA COMANDO ORIGINAL EN EL MNU......
                   MOVE SPACES       TO WSS-FUNC
                   MOVE FRM-FFLD-PF3 TO FRM-FFLD
                   GO TO RET-LEE-CMND.
           IF TSC-INST = SCR-INST-HCM
               MOVE SCR-INST-GFL TO TSC-INST
               IF ( NOT EIBCALEN = 0 ) AND TSC-UARC(TSC-I) > SPACES
                   MOVE TSC-UARC( TSC-I ) TO AUX-UARC
                   MOVE TSC-PROG TO AUX-PROG
                   MOVE TSC-NTRN TO AUX-NTRN
                   MOVE AUX-PRGM TO TSC-UARC( TSC-I )
                   MOVE AUX-RPRG TO TSC-PROG
                   MOVE AUX-RTRN TO TSC-NTRN
                   PERFORM HBL-CMN
               ELSE
                   PERFORM HBL-CMN
           ELSE
           IF TSC-INST = SCR-INST-GFL
               PERFORM LEE-CACC
               PERFORM CAL-PROG.
      *JSS 2-SEP-1992 12:19:36 GOBACK.
           EXEC CICS RETURN END-EXEC.
       FIN-MAIN.
           EXIT.
       PUT-CNAD SECTION.
       INI-PUT-CNAD.
           MOVE RCI-CNAD-RRCI TO TSC-CNAD.
       FIN-PUT-CNAD.
           EXIT.
       COPY GNSBHMNU.
       CLR-DFLD SECTION.
       INI-CLR-DFLD.
           IF WSS-DFLD-ELM(WSS-IFLD) NOT > SPACES
               MOVE SPACES TO WSS-DFLD-ELM(WSS-IFLD).
       FIN-CLR-DFLD.
           EXIT.
      
       INI-SIST SECTION.
       INI-INI-SIST.
           MOVE '>000' TO WSS-GLS-DBG-IDE.
           MOVE WSS-DFLD TO WSS-GLS-DBG-MSG.
           PERFORM GNS-ERR-QUE.
           IF EIBCALEN = 0
                NEXT SENTENCE
      *         MOVE +20     TO FRM-LFLD
      *         MOVE FRM-RCV TO FRM-CMND
      *         PERFORM GNS-PRO-FRM
      *         MOVE FRM-DFLD TO WSS-DFLD
           ELSE
      *JSS      MOVE DFHCOMMAREA TO WSS-CAXC.
                IF WSS-IDN-IPRO = 'USDP930'
                     MOVE DFHCOMMAREA(1:EIBCALEN) TO WSS-CMMA
                     MOVE WSS-NSXC    TO WSS-SIST
                     MOVE WSS-GSXC    TO WSS-SISG.
      *
           MOVE WSS-SIST TO TSC-SIST SCR-SIST.
           MOVE WSS-SISG TO TSC-SISG.
           MOVE 'SIS' TO MNU-COD-NEMO.
           MOVE TSC-SIST TO WSS-COD-SMNU.
           MOVE FIO-GET-KEY TO FIO-CMND.
           MOVE '>001' TO WSS-GLS-DBG-IDE.
           PERFORM VID-MNU.
           IF NOT FIO-STAT-OKS
               MOVE 'GNS' TO MSG-COD-SIST
               MOVE 'CODNEMOSISNX' TO MSG-COD-MENS
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS
               MOVE FRM-MSG      TO FRM-CMND
               PERFORM GNS-PRO-FRM
      *JSS 2-SEP-1992 12:19:36 GOBACK
               EXEC CICS RETURN END-EXEC
           ELSE
               MOVE TSC-SIST TO MNU-COD-SIST.
           PERFORM CHK-PRV-SIST.
       FIN-INI-SIST.
           EXIT.
       INI-FUNC SECTION.
       INI-INI-FUNC.
           MOVE WSS-KNMO-SIST TO TSC-SIST SCR-SIST.
           MOVE WSS-KNMO-SISG TO TSC-SISG.
           EXEC CICS HANDLE CONDITION
                     NOTOPEN (INI-FUNC-NOP)
                     DSIDERR (INI-FUNC-DSI)
           END-EXEC.
           MOVE TSC-SIST      TO FIO-SIST.
           MOVE WSS-KNMO-NEMO TO MNU-COD-NEMO.
           MOVE FIO-GET-KEY TO FIO-CMND.
           MOVE TSC-SIST      TO WSS-COD-SMNU.
           MOVE '>002' TO WSS-GLS-DBG-IDE.
           PERFORM VID-MNU.
           IF NOT FIO-STAT-OKS
               MOVE 'CODNEMOSISNX' TO MSG-COD-MENS
               GO TO ERR-INI-FUNC.
      *JSS-IBM
      *     IF EIBCALEN = 29 AND WSS-KNMO-PROG > SPACES
      *         MOVE WSS-KNMO-PROG TO MNU-GLS-PROG.
      *
           IF MNU-COD-SIST NOT > SPACES
               MOVE TSC-SIST TO MNU-COD-SIST.
           IF WSS-KNMO-CMND > SPACES
               MOVE WSS-KNMO-CMND TO MNU-COD-CMND.
           GO TO FIN-INI-FUNC.
       INI-FUNC-NOP.
           MOVE 'SIS    NOPEN' TO MSG-COD-MENS.
           GO TO ERR-INI-FUNC.
       INI-FUNC-DSI.
           MOVE 'SIS    NEXST' TO MSG-COD-MENS.
       ERR-INI-FUNC.
           MOVE 'GNS' TO MSG-COD-SIST.
           PERFORM GET-MSG.
           MOVE MSG-GLS-DESC TO FRM-MENS.
           PERFORM FST-CMN.
           PERFORM CMN-MSSG.
           PERFORM CMN-PUTA.
      *EN VEZ DEL GOBACK COPIAR MODULO QUE SEPA VOLVER
      *JSS 2-SEP-1992 12:19:36 GOBACK.
           EXEC CICS RETURN END-EXEC.
       FIN-INI-FUNC.
           EXIT.
       CHK-PRV-CMND SECTION.
       INI-CHK-PRV-CMND.
      * llamada a la rutina de verificacion de permisos para verificar
      * si tiene permiso para todos los comandos
           MOVE TSC-IPRV TO WSS-IPRV.
           MOVE MNU-GLS-PROG TO UYP-PROG.
           MOVE '*'          TO UYP-CMND.
           MOVE UYP-PRTA     TO USP-PTA-STR.
           COPY USPC103.
           IF USP-PERMISO = 'P'
               GO TO FIN-CHK-PRV-CMND.
       MAN-CHK-PRV-CMND.
           IF WSS-IPRV-TODOS-MAN
               GO TO BEG-CHK-PRV-CMND.
           MOVE MNU-GLS-PROG TO UYP-PROG.
           MOVE 'MAN'        TO UYP-CMND.
           MOVE UYP-PRTA     TO USP-PTA-STR.
           COPY USPC103.
           IF USP-PERMISO = 'P'
               MOVE 'M' TO WSS-IPRV.
       BEG-CHK-PRV-CMND.
           MOVE 0 TO WSS-I.
       LUP-CHK-PRV-CMND.
           ADD 1 TO WSS-I.
           IF WSS-I > 10
               GO TO FIN-CHK-PRV-CMND.
           IF ( WSS-COD-CMND( WSS-I ) NOT > SPACES ) OR
              ( ( WSS-COD-CMND( WSS-I ) = 'CON' OR 'ACT' OR 'MOD' OR
                  'ING' ) AND WSS-IPRV-TODOS-MAN ) OR
              ( WSS-COD-CMND( WSS-I ) = 'CON' AND WSS-IPRV-TODOS-CON )
               GO TO LUP-CHK-PRV-CMND.
      * llamada a la rutina de verificacion de permisos para verificar
      * un comando a la vez
           MOVE WSS-COD-CMND( WSS-I ) TO UYP-CMND.
           MOVE UYP-PRTA TO USP-PTA-STR.
           COPY USPC103.
           IF ( USP-PERMISO NOT = 'P' )        AND
              ( MNU-COD-CMND IN MNU > SPACES ) AND
              ( MNU-COD-CMND IN MNU = WSS-COD-CMND( WSS-I ) )
               MOVE 2 TO WSS-IND-CMND.
           IF USP-PERMISO NOT = 'P'
               MOVE SPACES TO WSS-TABL( WSS-I )
               MOVE SPACES TO WSS-GLS-UARC( WSS-I )
               MOVE SPACES TO WSS-GLS-PRMT( WSS-I )
               MOVE SPACES TO WSS-GLS-CONF( WSS-I ).
           GO TO LUP-CHK-PRV-CMND.
       FIN-CHK-PRV-CMND.
           EXIT.
       LEE-CACC SECTION.
       INI-LEE-CACC.
           PERFORM LEE-CMND.
           PERFORM PUT-DCMN.
           PERFORM CMN-PUTA.
       FIN-LEE-CACC.
           EXIT.
       LEE-CMND SECTION.
       INI-LEE-CMND.
           PERFORM GET-CMND.
           MOVE SPACES TO TRL-GLS-MENS.
           MOVE TRL-COD-CACC TO WSS-FUNC.
           IF FRM-FFLD = FRM-FFLD-PA2 OR FRM-FFLD-PA1
               MOVE 'SIS' TO MNU-COD-NEMO
               MOVE FIO-GET-KEY TO FIO-CMND
               MOVE TSC-SIST    TO WSS-COD-SMNU
               PERFORM VID-MNU
               IF NOT FIO-STAT-OKS
                   MOVE 'CODNEMOSISNX' TO MSG-COD-MENS
                   GO TO ERR-LEE-CMND
               ELSE
                   GO TO TCT-LEE-CMND.
       RET-LEE-CMND.
           IF WSS-FUNC NOT > SPACES
               IF FRM-FFLD = FRM-FFLD-RET
                   MOVE 'CAC    BLK' TO MSG-COD-MENS
                   GO TO ERR-LEE-CMND
               ELSE
               IF FRM-FFLD = FRM-FFLD-PF3
                   MOVE TSC-FRET    TO MNU-COD-NEMO
                   MOVE FIO-GET-KEY TO FIO-CMND
                   MOVE TSC-SIST    TO WSS-COD-SMNU
                   PERFORM VID-MNU
                   IF NOT FIO-STAT-OKS
                       MOVE 'CODFRETNEXST' TO MSG-COD-MENS
                       GO TO ERR-LEE-CMND
                   ELSE
                       PERFORM PRO-FIN.
           PERFORM SHF-CACC.
           PERFORM INI-AUTO.
           PERFORM PRO-AUTO VARYING WSS-I FROM 1 BY 1
                            UNTIL WSS-I > 11.
           IF FUNCION-INVALIDA
               MOVE 'FUN    INV' TO MSG-COD-MENS
               GO TO ERR-LEE-CMND.
           PERFORM UNS-CACC.
      *Decidir en Base a Teclas ENTER y PF3........
      *Si existe sistema o si existe opcion
           IF WSS-ISIS > 0 OR WSS-IOPC > 0 OR FRM-FFLD = FRM-FFLD-PF3
               PERFORM PRO-TCTL.
           PERFORM BUS-CMND.
           IF MSG-COD-MENS NOT > SPACES
               GO TO FIN-LEE-CMND.
       TCT-LEE-CMND.
           PERFORM PRO-TCTL.
       ERR-LEE-CMND.
      *A este parrafo se viene si ocurrio un error, por lo tanto si se t
      *previamente de accesar otro sistema, debe 'devolver el perfil de
      *por eso se llama a USPC104 nuevamente.
           IF WSS-CHK-SIST-SI
               MOVE TSC-SIST TO USP-SISTEMA
               COPY USPC104.
           IF WSS-CHK-SIST-SI
               PERFORM CHK-PRV-SIST.
           MOVE SPACES TO WSS-CHK-SIST.
           MOVE 'GNS' TO MSG-COD-SIST.
           PERFORM GET-MSG.
           IF FRM-MENS NOT > SPACES
               MOVE MSG-GLS-DESC TO FRM-MENS
           ELSE
           IF FRM-MEN1 NOT > SPACES
               MOVE MSG-GLS-DESC TO FRM-MEN1
           ELSE
           IF FRM-MEN2 NOT > SPACES
               MOVE MSG-GLS-DESC TO FRM-MEN2.
           PERFORM FST-CMN.
           PERFORM CMN-MSSG.
           PERFORM CMN-PUTA.
           PERFORM CMN-EXIT.
       FIN-LEE-CMND.
           MOVE CMN-I TO TSC-I.
           MOVE FRM-FFLD TO TSC-FFLD.
       GET-CMND SECTION.
       INI-GET-CMND.
           MOVE 'GNSFCMN' TO FRM-NAME.
           MOVE 'GNSACMN' TO FRM-NLIB.
           MOVE FRM-GET-ALL TO FRM-CMND.
           PERFORM GNS-PRO-FRM.
           IF NOT ( FRM-FFLD = FRM-FFLD-RET OR FRM-FFLD-PF3 OR
                               FRM-FFLD-PA2 OR FRM-FFLD-PA1 )
                  MOVE 'PFSINV' TO MSG-COD-MENS
                  MOVE 'GNS'    TO MSG-COD-SIST
                  PERFORM GET-MSG
                  MOVE MSG-GLS-DESC TO FRM-MENS
                  PERFORM FST-CMN
                  PERFORM CMN-MSSG
                  PERFORM CMN-PUTA
                  PERFORM CMN-EXIT.
           MOVE FRM-DFLD TO TRL-FLD.
           IF FRM-FFLD = FRM-FFLD-PA2 OR FRM-FFLD-PA1
      *JSS     MOVE FRM-FFLD-TAB TO FRM-FFLD
               MOVE 'SIS'        TO TRL-COD-CACC.
       FIN-GET-CMND.
           EXIT.
       SHF-CACC SECTION.
       INI-SHF-CACC.
           MOVE SPACES TO WSS-AFUN.
           MOVE 1 TO WSS-I WSS-L.
       LUP-SHF-CACC.
           IF WSS-FCHR( WSS-I ) > SPACES
               MOVE WSS-FCHR( WSS-I ) TO WSS-ACHR( WSS-L )
               ADD 1 TO WSS-L.
           ADD 1 TO WSS-I.
           IF WSS-I NOT > 11
               GO TO LUP-SHF-CACC.
           MOVE WSS-AFUN TO WSS-FUNC.
       FIN-SHF-CACC.
           EXIT.
       INI-AUTO SECTION.
       INI-INI-AUTO.
           MOVE '000002020000000100' TO WSS-ITM1.
           MOVE '010003030000090800' TO WSS-ITM2.
           MOVE '010004040000090800' TO WSS-ITM3.
           MOVE '010000000505090400' TO WSS-ITM4.
           MOVE '010006060000000500' TO WSS-ITM5.
           MOVE '010007070000090800' TO WSS-ITM6.
           MOVE '010008080000090800' TO WSS-ITM7.
           MOVE '010000000000090800' TO WSS-ITM8.
           MOVE '000010100000000900' TO WSS-ITM9.
           MOVE '010011110000001200' TO WSS-ITMA.
           MOVE '010012120000001200' TO WSS-ITMB.
           MOVE '010000000000001200' TO WSS-ITMC.
           MOVE 1 TO WSS-STDO.
           MOVE 0 TO WSS-ISIS.
           MOVE 0 TO WSS-IOPC.
           MOVE 0 TO WSS-ICMD.
       FIN-INI-AUTO.
           EXIT.
       PRO-AUTO SECTION.
       INI-PRO-AUTO.
           IF WSS-FCHR( WSS-I ) NOT > SPACES
               MOVE 12 TO WSS-I
               GO TO FIN-PRO-AUTO.
           MOVE WSS-I TO WSS-IMAX.
           IF WSS-FCHR( WSS-I ) NOT < 'A' AND
              WSS-FCHR( WSS-I ) NOT > 'Z'
               MOVE 3 TO WSS-J
           ELSE
           IF WSS-FCHR( WSS-I ) NOT < '0' AND
              WSS-FCHR( WSS-I ) NOT > '9'
               MOVE 4 TO WSS-J
           ELSE
      *JSS-IBM IF WSS-FCHR( WSS-I ) = ':'
           IF WSS-FCHR( WSS-I ) = ':' OR '-'
               MOVE 5 TO WSS-J
               MOVE WSS-I TO WSS-ISIS
           ELSE
           IF WSS-FCHR( WSS-I ) = '/'
               MOVE 6 TO WSS-J
               MOVE WSS-I TO WSS-ISIS
           ELSE
           IF WSS-FCHR( WSS-I ) = ',' OR '.'
               MOVE 7 TO WSS-J
               MOVE WSS-I TO WSS-IOPC
               MOVE WSS-I TO WSS-ICMD
           ELSE
           IF WSS-FCHR( WSS-I ) NOT > SPACES
               MOVE 8 TO WSS-J
           ELSE
               MOVE 9 TO WSS-J.
           MOVE WSS-AUTO( WSS-STDO , WSS-J ) TO WSS-STDO.
           IF WSS-STDO NOT = 0
               MOVE WSS-AUTO( WSS-STDO , 1 ) TO WSS-IVAL
           ELSE
               MOVE 0 TO WSS-IVAL
               MOVE 12 TO WSS-I.
       FIN-PRO-AUTO.
           EXIT.
       UNS-CACC SECTION.
       INI-UNS-CACC.
           MOVE SPACES TO WSS-SIST WSS-OPCI WSS-CMND.
           IF WSS-ISIS > 0
               MOVE 0 TO WSS-K
               SUBTRACT 1 FROM WSS-ISIS GIVING WSS-J
               PERFORM MOV-SIST VARYING WSS-I FROM 1 BY 1
                                UNTIL   WSS-I > WSS-J
               ADD 1 WSS-ISIS GIVING WSS-L
           ELSE
               MOVE 1 TO WSS-L.
           IF WSS-ICMD > 0
               MOVE 0 TO WSS-K
               ADD 1 WSS-ICMD GIVING WSS-J
               PERFORM MOV-CMND VARYING WSS-I FROM WSS-J BY 1
                                UNTIL   WSS-I >    WSS-IMAX
               SUBTRACT 1 FROM WSS-ICMD GIVING WSS-M
           ELSE
               MOVE WSS-IMAX TO WSS-M.
           MOVE 0 TO WSS-K.
           PERFORM MOV-OPCI VARYING WSS-I FROM WSS-L BY 1
                            UNTIL   WSS-I > WSS-M.
       FIN-UNS-CACC.
           EXIT.
       MOV-SIST SECTION.
       INI-MOV-SIST.
           IF WSS-FCHR(WSS-I) > SPACES
               ADD 1 TO WSS-K
               MOVE WSS-FCHR(WSS-I) TO WSS-CSIS(WSS-K).
       FIN-MOV-SIST.
           EXIT.
       MOV-OPCI SECTION.
       INI-MOV-OPCI.
           IF WSS-FCHR(WSS-I) > SPACES
               ADD 1 TO WSS-K
               MOVE WSS-FCHR(WSS-I) TO WSS-COPC(WSS-K).
       FIN-MOV-OPCI.
           EXIT.
       MOV-CMND SECTION.
       INI-MOV-CMND.
           IF WSS-FCHR(WSS-I) > SPACES
               ADD 1 TO WSS-K
               MOVE WSS-FCHR(WSS-I) TO WSS-CCMD(WSS-K).
       FIN-MOV-CMND.
           EXIT.
       PRO-TCTL SECTION.
       INI-PRO-TCTL.
           IF WSS-SIST > SPACES AND TSC-SIST NOT = WSS-SIST
               PERFORM CHK-SIST
           ELSE
               MOVE TSC-SIST TO WSS-SIST.
           IF WSS-OPCI > SPACES
               PERFORM CHK-OPC
               PERFORM ANL-OPC
           ELSE
           IF TSC-SIST = WSS-SIST
               IF TSC-NEMO = 'SIS'
                   MOVE 'FUN    ACT' TO MSG-COD-MENS
                   GO TO ERR-LEE-CMND
               ELSE
                   MOVE 'SIS'       TO MNU-COD-NEMO
                   MOVE FIO-GET-KEY TO FIO-CMND
                   MOVE TSC-SIST    TO WSS-COD-SMNU
                   PERFORM VID-MNU
                   IF NOT FIO-STAT-OKS
                       MOVE 'CODNEMOSISNX' TO MSG-COD-MENS
                       GO TO ERR-LEE-CMND.
           MOVE WSS-SIST TO MNU-COD-SIST.
      * Con el MNU que se tiene hay que procesar
           IF ( MNU-COD-SIST NOT > SPACES OR
                MNU-COD-SIST = TSC-SIST ) AND MNU-COD-NEMO = TSC-NEMO
              MOVE 'FUN    ACT' TO MSG-COD-MENS
              GO TO ERR-LEE-CMND.
           PERFORM PRO-FIN.
       FIN-PRO-TCTL.
           EXIT.
       CHK-SIST SECTION.
       INI-CHK-SIST.
      *llamada a USP para saber si tiene acceso al SISTEMA
           MOVE 'S' TO WSS-CHK-SIST.
           MOVE WSS-SIST TO USP-SISTEMA.
           COPY USPC104.
           IF USP-PERMISO NOT = 'P'
               GO TO CHK-SIST-NPR.
           EXEC CICS HANDLE CONDITION
                     NOTOPEN (CHK-SIST-NOP)
                     DSIDERR (CHK-SIST-DSI)
           END-EXEC.
           MOVE WSS-SIST    TO WSS-COD-SMNU.
           MOVE 'SIS'       TO MNU-COD-NEMO.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM VID-MNU.
           IF FIO-STAT-OKS
               PERFORM CHK-PRV-SIST
               GO TO FIN-CHK-SIST.
           MOVE 'CODNEMOSISNX' TO MSG-COD-MENS.
           GO TO ERR-LEE-CMND.
       CHK-SIST-NOP.
           MOVE 'SIS    NOPEN' TO MSG-COD-MENS.
           GO TO ERR-LEE-CMND.
       CHK-SIST-DSI.
           MOVE 'SIS    NEXST' TO MSG-COD-MENS.
           GO TO ERR-LEE-CMND.
       CHK-SIST-NPR.
           MOVE 'SIS    NOPRV' TO MSG-COD-MENS.
           GO TO ERR-LEE-CMND.
       FIN-CHK-SIST.
           EXIT.
       CHK-PRV-SIST SECTION.
       INI-CHK-PRV-SIST.
           MOVE SPACES TO TSC-IPRV.
           MOVE '*/*' TO USP-PTA-STR.
           COPY USPC103.
           IF USP-PERMISO = 'P'
               MOVE '*' TO TSC-IPRV
               GO TO FIN-CHK-PRV-SIST.
           MOVE '*' TO USP-PTA-STR.
           COPY USPC103.
           IF USP-PERMISO = 'P'
               MOVE 'O' TO TSC-IPRV.
           MOVE '*/MAN' TO USP-PTA-STR.
           COPY USPC103.
           IF USP-PERMISO = 'P'
               IF TSC-IPRV = 'O'
                   MOVE 'U' TO TSC-IPRV
                   GO TO FIN-CHK-PRV-SIST
               ELSE
                   MOVE 'M' TO TSC-IPRV
                   GO TO FIN-CHK-PRV-SIST.
           MOVE '*/CON' TO USP-PTA-STR.
           COPY USPC103.
           IF USP-PERMISO = 'P'
               IF TSC-IPRV = 'O'
                   MOVE 'Q' TO TSC-IPRV
               ELSE
                   MOVE 'C' TO TSC-IPRV.
       FIN-CHK-PRV-SIST.
           EXIT.
       SET-PERFIL-SIST SECTION.
       INI-SET-PERFIL-SIST.
      *llamada a USP para setear perfil de SISTEMA/USUARIO
           MOVE TSC-SIST TO USP-SISTEMA.
           COPY USPC104.
           IF USP-PERMISO NOT = 'P'
               MOVE FRM-FFLD-PF11 TO FRM-FFLD
               PERFORM GNS-PRO-KEY.
       FIN-SET-PERFIL-SIST.
           EXIT.
       CHK-OPC SECTION.
       INI-CHK-OPC.
      
           MOVE 'CHKOPC' TO WSS-GLS-DBG-IDE.
           MOVE WSS-OPCI TO WSS-GLS-DBG-MSG.
           PERFORM GNS-ERR-QUE.
      
           MOVE 'CHKOP1' TO WSS-GLS-DBG-IDE.
           MOVE WSS-SIST TO WSS-GLS-DBG-MSG.
           PERFORM GNS-ERR-QUE.
      
           MOVE 'CHKOP2' TO WSS-GLS-DBG-IDE.
           MOVE TSC-ITEM TO WSS-GLS-DBG-MSG.
           PERFORM GNS-ERR-QUE.
      
           MOVE WSS-OPCI        TO MNU-COD-OPCI IN MNU.
           MOVE FIO-GET-KEY-ALT TO FIO-CMND.
           MOVE 'MNU-COD-OPCI'  TO FIO-AKEY.
           MOVE WSS-SIST        TO WSS-COD-SMNU.
           PERFORM VID-MNU.
           IF NOT FIO-STAT-OKS
               MOVE 'CODOPCINEXST' TO MSG-COD-MENS
               PERFORM ERR-LEE-CMND.
       FIN-CHK-OPC.
           EXIT.
       ANL-OPC SECTION.
       INI-ANL-OPC.
           IF WSS-CMND > SPACES
               MOVE WSS-CMND TO MNU-COD-CMND IN MNU.
           IF ( MNU-COD-SIST > SPACES AND MNU-COD-SIST NOT = TSC-SIST )
              AND
              ( NOT ( WSS-SIST > SPACES AND TSC-SIST NOT = WSS-SIST ) )
               MOVE MNU-COD-SIST TO WSS-SIST
               PERFORM CHK-SIST.
       FIN-ANL-OPC.
           EXIT.
       PRO-FIN SECTION.
       INI-PRO-FIN.
           IF MNU-COD-TFUN IN MNU = 'NUL'
               MOVE 'MNUTFUNNUL' TO MSG-COD-MENS
               GO TO ERR-PRO-FIN.
      * llamada a la rutina de verificacion de permisos para verificar
      * una funcion
      *CHEQUEAR PRIVILEGIOS PARA EL REGISTRO MNU ( OPCION )
      *         SI TIENE PRIVILEGIOS........SIGA
           MOVE TSC-IPRV TO WSS-IPRV.
           IF WSS-IPRV-TODOS-MENUS
               GO TO SKP-PRO-FIN.
           MOVE MNU-COD-NEMO IN MNU TO USP-PTA-STR.
           COPY USPC103.
           IF USP-PERMISO NOT = 'P'
               MOVE 'FUN    NOPRV' TO MSG-COD-MENS
               GO TO ERR-PRO-FIN.
      * Que pasa IF MNU-COD-CMND IN MNU > SPACES ??????
       SKP-PRO-FIN.
           IF MNU-COD-SIST NOT > SPACES
               MOVE TSC-SIST TO MNU-COD-SIST.
           IF MNU-COD-CMND IN MNU > SPACES
               PERFORM BUS-CRPF
      *Chequear privilegios para el comando, YA ESTA HECHO
               IF WSS-COMANDO-SINPRV
                   MOVE 'CMD    NOPRV' TO MSG-COD-MENS
                   GO TO ERR-PRO-FIN
               ELSE
               IF NOT WSS-EXISTE-COMANDO
                   MOVE 'CMD    NEXST' TO MSG-COD-MENS
                   GO TO ERR-PRO-FIN
               ELSE
                   PERFORM CRG-VSCR.
           IF MNU-COD-SIST NOT > SPACES OR
              MNU-COD-SIST =     TSC-SIST
               MOVE TSC-SIST TO MNU-COD-SIST
               MOVE TSC-SISG TO WSS-SISG
               MOVE SPACES   TO WSS-NSIS
               GO TO CON-PRO-FIN.
           IF TSC-SIST NOT = 'GNS' AND MNU-COD-SIST = 'GNS'
                MOVE TSC-SIST TO TSC-SISG
           ELSE
      *JSS IF TSC-SIST = 'GNS' AND MNU-COD-SIST NOT = 'GNS'
                MOVE SPACES TO TSC-SISG.
           MOVE MNU-COD-SIST TO TSC-SIST SCR-SIST.
       CON-PRO-FIN.
           MOVE MNU TO WSS-RMNU.
           IF MNU-COD-TFUN = 'PGI' OR 'PRO' OR 'MEN' OR 'HMC' OR
                             'HMX' OR 'XMC' OR 'XMX' OR 'RET' OR
                             'PTC' OR 'NPC'
               PERFORM PRO-RMNU
           ELSE
               PERFORM GNS-PUT-FRT
               IF MNU-COD-TFUN = 'CCA'
                   PERFORM PRO-RMNU
               ELSE
               IF MNU-COD-TFUN = 'STR' OR MNU-COD-TCTL = 'STAR'
                   EXEC CICS START
                             TRANSID(MNU-GLS-TRAN)
                             TERMID(EIBTRMID)
                   END-EXEC
                   EXEC CICS RETURN
                   END-EXEC
               ELSE
      *POR MIENTRAS SE HACE CON XCTROL, SE DEBE ANALIZAR ( MNU-COD-TCTL
      *MNU-COD-TINF )
                   MOVE MNU-GLS-PROG TO SYS-PROG
                   MOVE LOW-VALUES   TO SYS-CMMA
                   MOVE 0            TO SYS-TCMA
                   MOVE SYS-XCTL     TO SYS-CMND
                   PERFORM GNS-PRO-SYS.
           MOVE 'XCTERR' TO MSG-COD-MENS.
           MOVE SPACES   TO FRM-MEN1.
           MOVE SYS-PROG TO FRM-MEN2.
       ERR-PRO-FIN.
           IF EIBCALEN NOT = 21
               GO TO ERR-LEE-CMND.
           MOVE 'GNS' TO MSG-COD-SIST.
           PERFORM GET-MSG.
           MOVE MSG-GLS-DESC TO FRM-MENS.
           PERFORM FST-CMN.
           PERFORM CMN-MSSG.
           PERFORM CMN-PUTA.
      *EN VEZ DEL GOBACK COPIAR MODULO QUE SEPA VOLVER
           EXEC CICS HANDLE CONDITION
                     PGMIDERR(GBK-PRO-FIN)
           END-EXEC.
           MOVE 'RET'      TO SYS-CMMA.
           MOVE 3          TO SYS-TCMA.
      * ISP:  26-FEB-1992 09:52:46
      *       CMT SIN PRIVILEGIOS => RETORNABA INCONDICIONALMENTE VIA PF
      
      *       SIN CONSIDERAR VERSION
           IF MNU-COD-TFUN NOT = 'PTC'
               MOVE 'GNSPPPF2' TO SYS-PROG
           ELSE
               MOVE 'GNSPPPK2' TO SYS-PROG.
      * ISP:  26-FEB-1992 09:52:46
           MOVE SYS-XCTL   TO SYS-CMND.
           PERFORM GNS-PRO-SYS.
       GBK-PRO-FIN.
           PERFORM XCT-ERR.
       FIN-PRO-FIN.
           EXIT.
       CRG-VSCR SECTION.
       INI-CRG-VSCR.
           MOVE MNU-GLS-PROG TO TSC-PROG.
           MOVE WSS-AUX-CRPF TO TSC-CRPF.
           MOVE WSS-AUX-CMNP TO TSC-CMNP.
           MOVE WSS-AUX-PRMC TO TSC-PRMC.
           MOVE WSS-AUX-CMND TO TSC-CMND.
           MOVE MNU-COD-TFUN TO TSC-TFUN.
       FIN-CRG-VSCR.
           EXIT.
       FST-CMN SECTION.
       INI-FST-CMN.
           MOVE -1 TO TRL-COD-CACC-LEN.
       FIN-FST-CMN.
           EXIT.
       CMN-MSSG SECTION.
       INI-CMN-MSSG.
           MOVE FRM-MENS TO TRL-GLS-MENS.
       FIN-CMN-MSSG.
           EXIT.
       XCT-ERR SECTION.
       INI-XCT-ERR.
           MOVE FRM-CLR-FRM TO FRM-CMND.
           PERFORM GNS-PRO-FRM.
           MOVE 'XCTERR    ' TO MSG-COD-MENS.
           MOVE 'GNS'        TO MSG-COD-SIST.
           PERFORM GET-MSG.
           MOVE MSG-GLS-DESC TO FRM-MEN1.
           MOVE SYS-PROG     TO FRM-MEN2.
           MOVE FRM-MSG      TO FRM-CMND.
           PERFORM GNS-PRO-FRM.
      *JSS 2-SEP-1992 12:19:36 GOBACK.
           EXEC CICS RETURN END-EXEC.
       FIN-XCT-ERR.
           EXIT.
      * Carga numeros de Base de Datos de los Sistemas por default
       BUS-FSIS SECTION.
       INI-BUS-FSIS.
           MOVE 'NO EXISTE REGISTRO IDD CON LLAVE : ' TO SYS-MEN1.
           MOVE IDD-COD-CIDD IN IDD                   TO SYS-MEN2.
           MOVE SYS-ABOR TO SYS-CMND.
           PERFORM GNS-PRO-SYS.
       FIN-BUS-FSIS.
           EXIT.
       COPY GNSBGVSM.
      * COPY GNSBGDTC.
       COPY GNSBGDTC.
       COPY GNSBGFRM.
      * COPY GNSBECIC.
       COPY GNSBFMNM.
       COPY GNSBFRPM.
       COPY GNSBGMSG.
       COPY GNSBFMSG.
       COPY GNSBIABT.
       COPY GNSBGHOY.
       COPY GNSBGSYS.
       COPY GNSBFIDD.
       COPY GNSBFIFD.
      ******************************************************************
       PRO-RMNU SECTION.
       INI-PRO-RMNU.
           MOVE 'PRO-RMNU' TO WSS-GLS-DBG-MSG.
      *JSS
           MOVE TSC-IPRV TO MNU-IND-IPRV.
      *
           MOVE MNU-COD-SIST TO TSC-SIST SCR-SIST.
           MOVE MNU-COD-OPCI TO TSC-OPCI.
           MOVE MNU-COD-NEMO TO TSC-NEMO.
      *
           MOVE MNU-GLS-TRAN TO TSC-NTRN.
           MOVE MNU-GLS-PROG TO TSC-PROG.
           MOVE MNU-GLS-LFRM TO TSC-NLIB.
           MOVE MNU-GLS-NFRM TO TSC-NMAP.
           MOVE MNU-GLS-LDOC TO TSC-LDOC.
           MOVE MNU-GLS-NDOC TO TSC-NDOC.
           MOVE MNU-COD-FRET TO TSC-FRET.
           MOVE MNU-IND-IPRV TO TSC-IPRV.
           MOVE MNU-COD-INST TO TSC-TINS.
           MOVE MNU-COD-TCTL TO TSC-TCTL.
           MOVE MNU-COD-TINF TO TSC-TINF.
           MOVE MNU-COD-TFUN TO TSC-TFUN.
           MOVE MNU-COD-CIFD TO TSC-CIDD.
           MOVE MNU-COD-UIDD TO TSC-UIDD.
           MOVE +250         TO TSC-TCMA.
           IF MNU-COD-TFUN = 'MEN'
               PERFORM BUS-CRPF
               PERFORM CRG-VSCR
               MOVE MNU TO WSS-RMNU
               PERFORM PRO-MENU
               MOVE WSS-RMNU TO MNU
               PERFORM PUT-MHDR
               PERFORM PUT-MSCR
               GO TO CON-PRO-RMNU.
           PERFORM GET-PROV.
           IF MNU-COD-TFUN NOT = 'CCA'
               MOVE LOW-VALUES TO OPC-FLD
               MOVE LOW-VALUES TO OP1-FLD
               PERFORM PUT-MHDR
               PERFORM PUT-MSCR
           ELSE
               IF MNU-COD-CMND IN MNU > SPACES
                   MOVE MNU-COD-CMND TO WSS-OPCI
                   PERFORM BUS-CMND
                   PERFORM PUT-DCMN
                   PERFORM CAL-PROG
               ELSE
                   PERFORM BUS-CRPF
                   PERFORM CRG-VSCR
                   PERFORM CAL-PROG.
           IF MNU-COD-CMND IN MNU > SPACES
               IF TSC-TFUN = 'HMX' OR 'XMX'
      *Solo para cargar datos de COMMON AREA asociado al comando,
      *no se despliega MAPA
                   MOVE MNU-COD-CMND TO WSS-OPCI
                   PERFORM BUS-CMND
                   PERFORM PUT-DCMN
                   PERFORM CAL-PROG
               ELSE
                   MOVE MNU-COD-CMND TO WSS-OPCI
                   PERFORM BUS-CMND
                   PERFORM PUT-DCMN
                   PERFORM CMN-PUTA
                   PERFORM CAL-PROG.
           PERFORM BUS-CRPF.
           PERFORM CRG-VSCR.
       CON-PRO-RMNU.
           MOVE SCR-INST-GFL TO TSC-INST
           PERFORM HBL-CMN.
       FIN-PRO-RMNU.
           EXIT.
      ******************************************************************
       PRO-MENU SECTION.
       INI-PRO-MENU.
           MOVE TSC-IPRV TO WSS-IPRV.
           MOVE MNU-COD-MENU TO WSS-MENU.
           MOVE MNU-COD-NEMO TO WSS-NEMO.
           PERFORM BUS-MENU.
           IF NOT WSS-STAT-OKS
               MOVE LOW-VALUES TO OPC-FLD
               MOVE LOW-VALUES TO OP1-FLD
               MOVE FRM-MENS   TO OPC-GLS-MENS
               MOVE FRM-MENS   TO OP1-GLS-MENS
               GO TO FIN-PRO-MENU.
           IF WSS-IPRV-TODOS-MENUS
               GO TO CON-PRO-MENU.
           MOVE 13 TO J.
       LUP-PRO-MENU.
           SUBTRACT 1 FROM J.
           IF J < 1
               GO TO CON-PRO-MENU.
           IF WSS-NEMO-CHR(J) > SPACES
               GO TO LUP-PRO-MENU.
           MOVE '*' TO WSS-NEMO-CHR(J).
       CHK-PRO-MENU.
           MOVE WSS-NEMO TO USP-PTA-STR.
           COPY USPC103.
           IF USP-PERMISO = 'P'
               MOVE 'O' TO WSS-IPRV.
       CON-PRO-MENU.
           PERFORM INI-OPCD VARYING J FROM 1 BY 1 UNTIL J > 20.
           PERFORM BUS-FUNC THRU FIN-BUS-FUNC UNTIL NOT
                                 ( WSS-STAT-OKS AND FIO-STAT-OKS AND
                                   MNU-COD-CMEN = WSS-MENU ).
           IF NOT WSS-STAT-OKS
               MOVE LOW-VALUES TO OPC-FLD
               MOVE LOW-VALUES TO OP1-FLD
               MOVE FRM-MENS   TO OPC-GLS-MENS
               MOVE FRM-MENS   TO OP1-GLS-MENS.
       FIN-PRO-MENU.
           EXIT.
       BUS-MENU SECTION.
       INI-BUS-MENU.
           MOVE SPACES          TO MNU-COD-IMEN.
           MOVE MNU-COD-MENU    TO MNU-COD-CMEN.
           MOVE 'MNU-COD-IMEN'  TO FIO-AKEY.
           MOVE FIO-GET-NLS-ALT TO FIO-CMND.
           MOVE TSC-SIST TO WSS-COD-SMNU.
           PERFORM VID-MNU.
           IF FIO-STAT-OKS AND ( MNU-COD-CMEN = WSS-MENU )
               GO TO FIN-BUS-MENU.
           IF WSS-NEMO = 'SIS'
               MOVE 'GNS' TO MSG-COD-SIST
               MOVE 'MNUSIS NOOPC' TO MSG-COD-MENS
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS
               MOVE 2 TO WSS-STAT
           ELSE
               MOVE 'GNS' TO MSG-COD-SIST
               MOVE 'MNU    NOOPC' TO MSG-COD-MENS
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS
               MOVE 1 TO WSS-STAT.
       FIN-BUS-MENU.
           EXIT.
       INI-OPCD SECTION.
       INI-INI-OPCD.
           MOVE SPACES TO OPC-COD-OPCI( J ).
           MOVE SPACES TO OPC-GLS-FMEN( J ).
      *    MOVE FRM-CPIM-AEY TO OPC-COD-OPCI-ATR( J ).
      *    MOVE FRM-CPIM-AEY TO OPC-GLS-FMEN-ATR( J ).
           ADD 20 J GIVING I.
           MOVE SPACES TO OPC-COD-OPCI( I ).
           MOVE SPACES TO OPC-GLS-FMEN( I ).
      *    MOVE FRM-CPIM-AEY TO OPC-COD-OPCI-ATR( I ).
      *    MOVE FRM-CPIM-AEY TO OPC-GLS-FMEN-ATR( I ).
           MOVE SPACES TO OP1-COD-OPCI( J ).
           MOVE SPACES TO OP1-GLS-FMEN( J ).
      *    MOVE FRM-CPIM-AEY TO OP1-COD-OPCI-ATR( J ).
      *    MOVE FRM-CPIM-AEY TO OP1-GLS-FMEN-ATR( J ).
       FIN-INI-OPCD.
           EXIT.
       BUS-FUNC SECTION.
       INI-BUS-FUNC.
      * llamada a la rutina de verificacion de permisos para verificar
      * un funcion
           IF WSS-IPRV-TODOS-MENUS
               GO TO CON-BUS-FUNC.
           MOVE MNU-COD-NEMO IN MNU TO USP-PTA-STR.
           COPY USPC103.
           IF USP-PERMISO NOT = 'P'
               GO TO NXT-BUS-FUNC.
       CON-BUS-FUNC.
           IF MNU-NUM-FILA < 3 OR MNU-NUM-FILA > 22
               MOVE 'GNS' TO MSG-COD-SIST
               MOVE 'MNUFILAINV' TO MSG-COD-MENS
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS
               MOVE 1 TO WSS-STAT
               GO TO FIN-BUS-FUNC.
           SUBTRACT 2 FROM MNU-NUM-FILA.
           IF MNU-NUM-COLU = 1
                MOVE '0' TO WSS-IFRM
                MULTIPLY MNU-NUM-FILA BY 2 GIVING I
                SUBTRACT 1 FROM I
                MOVE MNU-COD-OPCI TO OPC-COD-OPCI( I )
                MOVE MNU-GLS-FMEN TO OPC-GLS-FMEN( I )
      *DFHBMASB
      *         MOVE '8' TO OPC-COD-OPCI-ATR( I )
           ELSE
           IF MNU-NUM-COLU = 41
                MOVE '0' TO WSS-IFRM
                MULTIPLY MNU-NUM-FILA BY 2 GIVING I
                MOVE MNU-COD-OPCI TO OPC-COD-OPCI( I )
                MOVE MNU-GLS-FMEN TO OPC-GLS-FMEN( I )
      *DFHBMASB
      *         MOVE '8' TO OPC-COD-OPCI-ATR( I )
           ELSE
           IF MNU-NUM-COLU = 24
                MOVE '1' TO WSS-IFRM
                MOVE MNU-COD-OPCI TO OP1-COD-OPCI(MNU-NUM-FILA)
                MOVE MNU-GLS-FMEN TO OP1-GLS-FMEN(MNU-NUM-FILA)
      *DFHBMASB
      *         MOVE '8' TO OP1-COD-OPCI-ATR(MNU-NUM-FILA)
           ELSE
               MOVE 'GNS' TO MSG-COD-SIST
               MOVE 'MNUCOLUINV' TO MSG-COD-MENS
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS
               MOVE 1 TO WSS-STAT
               GO TO FIN-BUS-FUNC.
       NXT-BUS-FUNC.
           MOVE FIO-GET-NXT-ALT TO FIO-CMND.
           MOVE 'MNU-COD-IMEN'  TO FIO-AKEY.
           MOVE TSC-SIST TO WSS-COD-SMNU.
           PERFORM VID-MNU.
       FIN-BUS-FUNC.
           EXIT.
      ******************************************************************
       BUS-CRPF SECTION.
       INI-BUS-CRPF.
           MOVE 0 TO WSS-IND-CMND.
           MOVE MNU-GLS-PROG TO WSS-SIST.
           IF WSS-SIST NOT = 'GNS'
               MOVE MNU-COD-SIST TO WSS-SIST.
           MOVE SPACES       TO WSS-AUX-CRPF.
      *
           IF MNU-GLS-PROG NOT > SPACES
                MOVE WSS-GLS-PROG TO WSS-AUX-CMNP
                PERFORM BUS-PRMC
                GO TO FIN-BUS-CRPF.
      *
           MOVE MNU-GLS-PROG TO RPF-KEY-DPRO.
           MOVE 'C '         TO RPF-KEY-TRYC.
           MOVE SPACES       TO RPF-KEY-DARC.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM VID-RPF.
           IF NOT FIO-STAT-OKS
                MOVE WSS-GLS-PROG TO WSS-AUX-CMNP
                PERFORM BUS-PRMC
                GO TO FIN-BUS-CRPF.
           IF RPF-GLS-PRMT NOT > SPACES
               PERFORM BUS-PRMC
           ELSE
           IF RPF-GLS-PRMT NOT = 'NOMSG'
               MOVE RPF-GLS-PRMT TO WSS-AUX-PRMC
           ELSE
               MOVE SPACES TO WSS-AUX-PRMC.
           IF RPF-GLS-UARC NOT > SPACES
                MOVE WSS-GLS-PROG TO WSS-AUX-CMNP
           ELSE
                MOVE RPF-GLS-UARC TO WSS-AUX-CMNP.
           MOVE MNU-GLS-PROG TO RPF-KEY-DPRO.
           MOVE 'C0'         TO RPF-KEY-TRYC.
           MOVE FIO-FND-NLS  TO FIO-CMND.
           PERFORM VID-RPF.
           IF NOT FIO-STAT-OKS
                 GO TO FIN-BUS-CRPF.
           PERFORM LEE-CRPF.
           MOVE FIO-END-BRW TO FIO-CMND.
           PERFORM VID-RPF.
           PERFORM BUS-GLOS VARYING I FROM 1 BY 1 UNTIL I > 10.
           MOVE TSC-IPRV TO WSS-IPRV.
           IF NOT WSS-IPRV-TODO
               PERFORM CHK-PRV-CMND.
       FIN-BUS-CRPF.
           EXIT.
       LEE-CRPF SECTION.
       INI-LEE-CRPF.
           MOVE FIO-GET-NXT TO FIO-CMND.
           PERFORM VID-RPF.
           IF NOT ( FIO-STAT-OKS AND RPF-KEY-DPRO = MNU-GLS-PROG AND
                                     RPF-KEY-TREG = 'C' )
                   GO TO FIN-LEE-CRPF.
           IF MNU-COD-CMND IN MNU > SPACES AND
              MNU-COD-CMND = RPF-COD-CCMN
               MOVE MNU-COD-CMND TO WSS-AUX-CMND
               MOVE 1            TO WSS-IND-CMND.
           MOVE RPF-KEY-CORR TO I.
           ADD 1 I GIVING K.
           MOVE RPF-COD-CCMN TO WSS-COD-CMND( K )
           MOVE RPF-COD-CCPP TO WSS-COD-CCPP( K )
           MOVE RPF-IND-STPP TO WSS-IND-STPP( K )
           MOVE RPF-GLS-PRMT TO WSS-GLS-PRMT( K )
           MOVE RPF-GLS-CONF TO WSS-GLS-CONF( K )
           MOVE RPF-GLS-UARC TO WSS-GLS-UARC( K )
           GO TO INI-LEE-CRPF.
       FIN-LEE-CRPF.
           EXIT.
       BUS-MGKY SECTION.
       INI-BUS-MGKY.
           MOVE 'MSGKEY' TO MSG-COD-MENS.
           MOVE 'GNS'    TO MSG-COD-SIST.
           PERFORM GET-MSG.
      *    MOVE MSG-GLS-DESC TO SCR-MGKY.
       FIN-BUS-MGKY.
           EXIT.
       BUS-PRMC SECTION.
       INI-BUS-PRMC.
           IF MNU-COD-TFUN = 'MEN'
               MOVE 'PRMMEN' TO MSG-COD-MENS
           ELSE
               MOVE 'PRMPGI' TO MSG-COD-MENS.
           MOVE 'GNS'    TO MSG-COD-SIST.
           PERFORM GET-MSG.
           MOVE MSG-GLS-DESC TO WSS-AUX-PRMC.
       FIN-BUS-PRMC.
           EXIT.
       BUS-GLOS SECTION.
       INI-BUS-GLOS.
           IF WSS-COD-CMND( I ) NOT > SPACES
               GO TO FIN-BUS-GLOS.
           IF WSS-GLS-PRMT( I ) NOT > SPACES
               MOVE SPACES TO WSS-COD-MENS
               IF WSS-GLS-UARC( I ) NOT > SPACES
                   MOVE 'GNS'             TO MSG-COD-SIST
                   MOVE 'FLD'             TO WSS-COD-TMN1
                   MOVE WSS-COD-CCPP( I ) TO WSS-COD-TMN2
                   MOVE WSS-COD-MENS      TO MSG-COD-MENS
                   PERFORM GET-MSG
                   MOVE MSG-GLS-DESC TO WSS-GLS-PRMT( I )
               ELSE
                   MOVE 'GNS'             TO MSG-COD-SIST
                   MOVE 'SUB'             TO WSS-COD-TMN1
                   MOVE WSS-COD-CCPP( I ) TO WSS-COD-TMN2
                   MOVE WSS-COD-MENS      TO MSG-COD-MENS
                   PERFORM GET-MSG
                   MOVE MSG-GLS-DESC TO WSS-GLS-PRMT( I )
           ELSE
           IF WSS-GLS-PRMT( I ) = 'NOMSG'
               MOVE SPACES TO WSS-GLS-PRMT( I ).
           IF WSS-GLS-CONF( I ) NOT > SPACES
               MOVE SPACES TO WSS-COD-MENS
               MOVE 'GNS'             TO MSG-COD-SIST
               MOVE 'CNF'             TO WSS-COD-TMN1
               MOVE WSS-COD-CCPP( I ) TO WSS-COD-TMN2
               MOVE WSS-COD-MENS      TO MSG-COD-MENS
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO WSS-GLS-CONF( I )
           ELSE
           IF WSS-GLS-CONF( I ) = 'NOMSG'
               MOVE SPACES TO WSS-GLS-CONF( I ).
       FIN-BUS-GLOS.
           EXIT.
      ******************************************************************
       VID-MNU SECTION.
       INI-VID-MNU.
           MOVE WSS-COD-SMNU TO WSS-GLS-DBG-MSG.
           MOVE WSS-COD-SMNU TO FIO-SIST.
           PERFORM GNS-FIO-MNU.
       FIN-VID-MNU.
           EXIT.
      * SET-MAPA SECTION.
      * INI-SET-MAPA.
      *     IF MNU-COD-TFUN IN MNU NOT = 'MEN'
      *         MOVE MNU-GLS-NFRM IN MNU TO WSS-MNU-GLS-NFRM
      *         IF TSC-LENG = 'EN'
      *             MOVE 'G' TO WSS-MNU-GLS-NFRM-TIPO
      *             MOVE WSS-MNU-GLS-NFRM TO MNU-GLS-NFRM IN MNU.
      *
      *     IF MNU-COD-TFUN IN MNU NOT = 'MEN'
      *         MOVE MNU-GLS-LFRM IN MNU TO WSS-MNU-GLS-LFRM
      *         IF TSC-LENG = 'EN'
      *             MOVE 'B' TO WSS-MNU-GLS-LFRM-TIPO
      *             MOVE WSS-MNU-GLS-LFRM TO MNU-GLS-LFRM IN MNU.
      * FIN-SET-MAPA.
      *     EXIT.
       VID-RPF SECTION.
       INI-VID-RPF.
           MOVE WSS-SIST TO FIO-SIST.
           PERFORM GNS-FIO-RPF.
       FIN-VID-RPF.
           EXIT.
      ******************************************************************
       PUT-MHDR SECTION.
       INI-PUT-MHDR.
           IF TSC-TFUN = 'XMC' OR 'XMX'
               MOVE 1 TO FRM-PLIN
               MOVE 0 TO FRM-NLIN
               MOVE FRM-CLR-FRM TO FRM-CMND
               PERFORM GNS-PRO-FRM
               GO TO FIN-PUT-MHDR.
           PERFORM GNSSCRHDR.
           MOVE 'GNSFHDM'     TO FRM-NAME.
           MOVE 'GNSAHDM'     TO FRM-NLIB.
           MOVE HDR-FLD       TO FRM-DFLD.
           MOVE FRM-SINI-DB1F TO FRM-SINI.
           MOVE FRM-INI       TO FRM-CMND.
           PERFORM GNS-PRO-FRM.
       FIN-PUT-MHDR.
           EXIT.
       GNSSCRHDR SECTION.
       INI-GNSSCRHDR.
           MOVE SPACES       TO HEA-DOBL.
           MOVE MNU-GLS-FPRO TO HEA-SIMP.
           PERFORM HDR-TITU.
           MOVE TSC-SIST     TO HDR-COD-SIST.
           MOVE MNU-COD-OPCI TO HDR-GLS-NFRM.
           MOVE HEA-DOBL     TO HDR-GLS-FPRO.
           PERFORM GET-FHOY.
           MOVE HOY-DHOY TO HEA-NUM-DMSA IN HEA-FEC-DMSA.
           MOVE HOY-MHOY TO HEA-NUM-MMSA IN HEA-FEC-DMSA.
           MOVE HOY-SHOY TO HEA-NUM-SMSA IN HEA-FEC-DMSA.
           MOVE HOY-AHOY TO HEA-NUM-AMSA IN HEA-FEC-DMSA.
           MOVE '/'      TO HEA-GLS-SLA1 HEA-GLS-SLA2.
           MOVE HEA-FEC-DMSA TO HDR-FEC-DMSA IN HDR-FLD.
           IF TSC-SIST = 'GNS'
               MOVE TSC-SISG TO HDR-COD-FUNC
           ELSE
               MOVE SPACES TO HDR-COD-FUNC.
      *JSS MOVE EIBTRMID TO HDR-GLS-TRMI.
      *JSS-IBM MOVE SPACES TO HDR-GLS-HORA.
           MOVE SPACES TO HDR-GLS-GLS1
                          HDR-GLS-GLS2
                          HDR-GLS-GLS3.
           PERFORM GNS-ERR-QUE.
           MOVE EIBTRMID TO QUE-TERM.
           MOVE 'PKB'    TO QUE-TYPE.
           MOVE 1     TO QUE-NITM.
           MOVE +3000 TO QUE-LITM.
           MOVE QUE-GET TO QUE-CMND.
           PERFORM GNS-PRO-QUE.
           IF QUE-STAT = QUE-STAT-OKS
               MOVE QUE-DATA TO WSS-TSC-AUXI
               MOVE '8'      TO HDR-GLS-GLS3-ATR
               IF QUE-IKEY = 'V31'
                   MOVE WSS-TSC-OPCI TO HDR-GLS-GLS3
               ELSE
                   MOVE WSS-CMA-OPCI TO HDR-GLS-GLS3.
      
           MOVE EIBTRMID TO QUE-TERM.
           MOVE 'KYM'    TO QUE-TYPE.
           MOVE 1     TO QUE-NITM.
           MOVE +3000 TO QUE-LITM.
           MOVE QUE-GET TO QUE-CMND.
           PERFORM GNS-PRO-QUE.
           IF QUE-STAT = QUE-STAT-OKS
               MOVE '8'   TO HDR-GLS-GLS2-ATR
               MOVE 'PA2' TO HDR-GLS-GLS2.
           MOVE TSC-BNCO     TO HDR-COD-BNCO IN HDR-FLD.
           MOVE TSC-MRCA     TO HDR-COD-MRCA IN HDR-FLD.
           MOVE TSC-CART     TO HDR-COD-CART IN HDR-FLD.
           MOVE TSC-LENG     TO HDR-COD-LENG IN HDR-FLD.
           MOVE TSC-PAIS     TO HDR-COD-PAIS IN HDR-FLD.
           MOVE TSC-VRNT     TO HDR-COD-VRNT IN HDR-FLD.
           MOVE TSC-MODO     TO HDR-COD-MODO IN HDR-FLD.
           MOVE TSC-CNAL     TO HDR-COD-CNAL IN HDR-FLD.
           MOVE TSC-CNAD     TO HDR-COD-CNAD IN HDR-FLD.
           MOVE TSC-UMUA     TO HDR-COD-USER IN HDR-FLD.
      
      
       FIN-GNSSCRHDR.
           EXIT.
       HDR-TITU SECTION.
       INI-HDR-TITU.
           IF HEA-SIMP = SPACES
                      GO TO FIN-HDR-TITU.
           PERFORM BUS-LIMI VARYING IMIN FROM 1 BY 1
                      UNTIL HEA-GLS-SIMP(IMIN) NOT = SPACES.
           PERFORM BUS-LIMI VARYING IMAX FROM 31 BY -1
                      UNTIL HEA-GLS-SIMP(IMAX) NOT = SPACES.
           IF MNU-IND-EXGL IN MNU = 'N'
               COMPUTE L = ( 61 - ( IMAX - IMIN + 1 ) ) / 2
               MOVE 1 TO I
           ELSE
               COMPUTE
                  L = ( 61 - ( 2 * ( IMAX - IMIN + 1 ) - 1 ) ) / 2 + 1
               MOVE 2 TO I.
           PERFORM PUT-TITU
                   VARYING K FROM IMIN BY 1 UNTIL K > IMAX.
       FIN-HDR-TITU.
           EXIT.
       BUS-LIMI SECTION.
       INI-BUS-LIMI.
       FIN-BUS-LIMI.
           EXIT.
       PUT-TITU SECTION.
       INI-PUT-TITU.
           MOVE HEA-GLS-SIMP( K ) TO HEA-GLS-DOBL( L ).
           ADD I TO L.
       FIN-PUT-TITU.
           EXIT.
      ******************************************************************
       PUT-MSCR SECTION.
       INI-PUT-MSCR.
           IF TSC-NMAP NOT > SPACES AND TSC-NLIB NOT > SPACES
               IF WSS-IFRM = '0'
                   MOVE 'GNSFOPC' TO TSC-NMAP
                   MOVE 'GNSAOPC' TO TSC-NLIB
               ELSE
                   MOVE 'GNSFOP1' TO TSC-NMAP
                   MOVE 'GNSAOP1' TO TSC-NLIB.
           IF TSC-NMAP NOT > SPACES
               MOVE TSC-NLIB TO TSC-NMAP.
           IF TSC-NLIB NOT > SPACES
               MOVE TSC-NMAP TO TSC-NLIB.
           MOVE TSC-NMAP TO FRM-NAME.
           MOVE TSC-NLIB TO FRM-NLIB.
           IF WSS-IFRM = '0'
               MOVE '>>OPCOPC' TO WSS-GLS-DBG-IDE
               MOVE OPC-FLD TO WSS-GLS-DBG-MSG
               PERFORM GNS-ERR-QUE
               MOVE '>>OPCOP1' TO WSS-GLS-DBG-IDE
               MOVE OP1-FLD TO WSS-GLS-DBG-MSG
               PERFORM GNS-ERR-QUE
               MOVE OPC-FLD TO FRM-DFLD
           ELSE
               MOVE '>>OP1OPC' TO WSS-GLS-DBG-IDE
               MOVE OPC-FLD TO WSS-GLS-DBG-MSG
               PERFORM GNS-ERR-QUE
               MOVE '>>OP1OP1' TO WSS-GLS-DBG-IDE
               MOVE OP1-FLD TO WSS-GLS-DBG-MSG
               PERFORM GNS-ERR-QUE
               MOVE OP1-FLD TO FRM-DFLD.
      *    MOVE FRM-SINI-DBNF TO FRM-SINI.
           IF TSC-TFUN = 'MEN'
               MOVE FRM-SINI-DBNF TO FRM-SINI
           ELSE
               MOVE FRM-SINI-DBLF TO FRM-SINI.
      *
           MOVE FRM-INI       TO FRM-CMND.
           PERFORM GNS-PRO-FRM.
           IF WSS-CCOD-APCT OR WSS-CCOD-ABM0
               MOVE SPACES TO MNU-GLS-PROG IN MNU
               MOVE SPACES TO MNU-GLS-TRAN IN MNU
               MOVE SPACES TO MNU-COD-CMND IN MNU.
       FIN-PUT-MSCR.
           EXIT.
      ******************************************************************
       HBL-CMN SECTION.
       INI-HBL-CMN.
           IF WSS-CCOD-APCT OR WSS-CCOD-ABM0
               MOVE 'GNS'     TO MSG-COD-SIST
               MOVE 'CICABND' TO MSG-COD-TMSG
               MOVE WSS-CCOD  TO MSG-COD-CMSG
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC IN MSG TO TRL-GLS-MENS IN TRL-FLD.
           IF TSC-TFUN = 'HMX' OR 'XMX'
               MOVE LOW-VALUES TO TRL-GLS-TERM IN TRL-FLD
               MOVE LOW-VALUES TO TRL-COD-CMND IN TRL-FLD
               MOVE LOW-VALUES TO TRL-GLS-PRMT IN TRL-FLD
               MOVE LOW-VALUES TO TRL-COD-CACC IN TRL-FLD
               GO TO CON-HBL-CMN.
           PERFORM PUT-CMND VARYING CMN-K FROM 1 BY 1 UNTIL CMN-K > 10.
           IF TSC-TFUN = 'MEN'
               MOVE 'PFSMEN' TO MSG-COD-MENS
           ELSE
               MOVE 'PFSCMN' TO MSG-COD-MENS.
           MOVE 'GNS' TO MSG-COD-SIST.
           PERFORM GET-MSG.
           MOVE MSG-GLS-DESC TO WSS-MEN1.
           MOVE MSG-GLS-MENS TO WSS-MEN2.
           MOVE WSS-MENS TO TRL-GLS-TERM.
           MOVE CMN-IDX-CCMN TO TRL-COD-CMND.
           MOVE TSC-PRMC     TO TRL-GLS-PRMT.
           MOVE SPACES       TO TRL-COD-CACC.
       CON-HBL-CMN.
           MOVE FRM-CPIM-UBY TO TRL-COD-CACC-ATR.
           MOVE -1           TO TRL-COD-CACC-LEN.
           PERFORM CMN-PUTA.
           PERFORM CMN-EXIT.
       FIN-HBL-CMN.
           EXIT.
       PUT-CMND SECTION.
       INI-PUT-CMND.
           MOVE TSC-CCMN ( CMN-K ) TO CMN-COD-CCMN ( CMN-K ).
       FIN-PUT-CMND.
             EXIT.
      ******************************************************************
       CMN-PUTA SECTION.
       INI-CMN-PUTA.
           MOVE 'GNSFCMN' TO FRM-NAME.
           MOVE 'GNSACMN' TO FRM-NLIB.
      *JSS
      *    MOVE FRM-CPIM-AEY TO TRL-GLS-MENS-ATR.
           MOVE FRM-CPSF-AEY TO TRL-GLS-MENS-ATR.
      *
           MOVE TRL-FLD   TO FRM-DFLD.
           MOVE FRM-PUT-ALL TO FRM-CMND.
           PERFORM GNS-PRO-FRM.
       FIN-CMN-PUTA.
           EXIT.
       CMN-EXIT SECTION.
       INI-CMN-EXIT.
           MOVE 'K' TO TSC-ICMN.
           PERFORM GNS-PUT-TSC.
           MOVE WSS-GLS-TRID TO SYS-NTRN.
      *     MOVE 'K'      TO SCR-ICMN.
      *     MOVE SCR-VARI TO SYS-CMMA.
      *     MOVE SCR-TCMA TO SYS-TCMA.
           MOVE ' ' TO SYS-CMMA.
           MOVE +1  TO SYS-TCMA.
     *
           MOVE SYS-RTRN TO SYS-CMND.
           PERFORM GNS-PRO-SYS.
       FIN-CMN-EXIT.
           EXIT.
      ******************************************************************
       BUS-CMND SECTION.
       INI-BUS-CMND.
           MOVE 'CMD    NEXST' TO MSG-COD-MENS.
           MOVE 1 TO CMN-I.
           SET TSC-ITBL TO 1.
           SEARCH TSC-TABL VARYING CMN-I
                  WHEN TSC-CCMN( TSC-ITBL ) = WSS-OPCI
                         GO TO SET-BUS-CMND.
           GO TO FIN-BUS-CMND.
       SET-BUS-CMND.
           MOVE SPACES TO MSG-COD-MENS.
       FIN-BUS-CMND.
           EXIT.
       PUT-DCMN SECTION.
       INI-PUT-DCMN.
           MOVE CMN-I TO TSC-I.
           MOVE TSC-CCMN( TSC-I ) TO TSC-CMND.
      *ESTOS MOVES SE HACEN AL FINAL EN LA 'SECTION' CAL-PROG
      *     MOVE TSC-CCMN( TSC-I ) TO SCR-CMND.
      *     MOVE TSC-CCPP( TSC-I ) TO SCR-CCPP.
      *     MOVE TSC-STPP( TSC-I ) TO SCR-STPP.
      *     MOVE TSC-PRMT( TSC-I ) TO SCR-PRMT.
      *     MOVE TSC-CONF( TSC-I ) TO SCR-CONF.
      *     MOVE SCR-INST-HKY          TO SCR-INST.
      *
           IF TSC-TFUN = 'HMX' OR 'XMX'
               MOVE LOW-VALUES TO TRL-GLS-TERM IN TRL-FLD
               MOVE LOW-VALUES TO TRL-COD-CMND IN TRL-FLD
               MOVE LOW-VALUES TO TRL-GLS-PRMT IN TRL-FLD
               MOVE LOW-VALUES TO TRL-COD-CACC IN TRL-FLD
               MOVE SPACES     TO TRL-GLS-MENS IN TRL-FLD
               GO TO CON-PUT-DCMN.
           MOVE SPACES                TO CMN-IDX-CCMN.
           MOVE TSC-CCMN( TSC-I ) TO CMN-COD-CCMN( TSC-I ).
           MOVE CMN-IDX-CCMN          TO TRL-COD-CMND.
           MOVE SPACES                TO TRL-GLS-PRMT TRL-COD-CACC.
      
      * ISP:  17-MAR-1993 07:54:47
           IF TSC-SIST = 'GNS' AND
              TSC-SISG > SPACES
                MOVE TSC-SISG TO MSG-COD-SIST
           ELSE
                MOVE TSC-SIST TO MSG-COD-SIST.
           MOVE '%'          TO WSS-COD-MSG1.
           MOVE TSC-PROG     TO WSS-COD-MSG2.
           MOVE TSC-CMND     TO WSS-COD-MSG3.
           MOVE WSS-COD-MSG0 TO MSG-COD-MENS.
           PERFORM GET-MSG.
           IF FIO-STAT-OKS AND MSG-IND-VIGE = 'S'
               MOVE MSG-GLS-DESC TO WSS-MEN1
               MOVE MSG-GLS-MENS TO WSS-MEN2
               MOVE WSS-MENS TO TRL-GLS-TERM
           ELSE
               MOVE 'GNS'                 TO MSG-COD-SIST
               MOVE SPACES                TO WSS-COD-MENS
               MOVE 'PFSPGI'              TO WSS-COD-TMSG
               MOVE TSC-STPP( TSC-I ) TO WSS-COD-TMN3
               MOVE WSS-COD-MENS          TO MSG-COD-MENS
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO WSS-MEN1
               MOVE MSG-GLS-MENS TO WSS-MEN2
               MOVE WSS-MENS TO TRL-GLS-TERM.
      *    MOVE SCR-MGKY TO TRL-GLS-MENS.
           PERFORM BUS-MGKY.
           MOVE MSG-GLS-DESC TO TRL-GLS-MENS.
      * ISP:  17-MAR-1993 07:54:47
      
       CON-PUT-DCMN.
      *    MOVE FRM-CPIM-AEY TO TRL-COD-CACC-ATR.
           MOVE FRM-CPSF-AEY TO TRL-COD-CACC-ATR.
           MOVE -1           TO TRL-COD-CACC-LEN.
       FIN-PUT-DCMN.
           EXIT.
       GET-PROV SECTION.
       INI-GET-PROV.
           MOVE SPACES TO TSC-PROV.
           MOVE SPACES TO TSC-NTRV.
           IF TSC-TFUN NOT = 'PTC'
               GO TO FIN-GET-PROV.
           MOVE TSC-PROG     TO RPF-KEY-DPRO.
           MOVE 'C '         TO RPF-KEY-TRYC.
           MOVE SPACES       TO RPF-KEY-DARC.
      *
           MOVE TSC-PROG TO FIO-SIST.
           IF FIO-SIST NOT = 'GNS'
               MOVE TSC-SIST TO FIO-SIST.
      *
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM GNS-FIO-RPF.
           IF NOT FIO-STAT-OKS
               GO TO FIN-GET-PROV.
           MOVE RPF-GLS-ABRT IN RPF TO WSS-PPPV.
           MOVE WSS-PROV            TO TSC-PROV.
           MOVE WSS-NTRV            TO TSC-NTRV.
       FIN-GET-PROV.
           EXIT.
       GNS-PUT-TSC SECTION.
       INI-GNS-PUT-TSC.
           EXEC CICS HANDLE CONDITION
                     QIDERR (PUT-GNS-PUT-TSC)
                     ITEMERR(PUT-GNS-PUT-TSC)
           END-EXEC.
      *
           MOVE EIBTRMID TO TSC-TERM.
      *    MOVE +720     TO TSC-LITM.
           MOVE TSC-TTSC TO TSC-LITM.
           MOVE +1 TO QUE-NITM
           EXEC CICS WRITEQ TS
                     QUEUE(TSC-COLA)
                     FROM(TSC-ITEM)
                     LENGTH(TSC-LITM)
                     ITEM(QUE-NITM)
                     REWRITE
           END-EXEC.
           GO TO FIN-GNS-PUT-TSC.
       PUT-GNS-PUT-TSC.
           EXEC CICS WRITEQ TS
                     QUEUE(TSC-COLA)
                     FROM(TSC-ITEM)
                     LENGTH(TSC-LITM)
           END-EXEC.
       FIN-GNS-PUT-TSC.
           EXIT.
       GNS-GET-TSC SECTION.
       INI-GNS-GET-TSC.
           EXEC CICS HANDLE CONDITION
                     QIDERR (NEX-GNS-GET-TSC)
           END-EXEC.
           MOVE EIBTRMID TO TSC-TERM.
      *    MOVE +720     TO TSC-LITM.
           MOVE TSC-TTSC TO TSC-LITM.
           EXEC CICS READQ TS
                     QUEUE(TSC-COLA)
                     INTO(TSC-ITEM)
                     LENGTH(TSC-LITM)
                     ITEM(1)
           END-EXEC.
      *ESTE MOVE ES PARA CONTROLAR LA VUELTA DE CONGELAR Y OTRAS
      *SITUACIONES
           IF ( WSS-SEFN = WSS-SXCT-RED ) OR ( WSS-SCOD = 'S' OR 'SD' )
               MOVE SCR-INST-HCM TO TSC-INST.
      *
           MOVE TSC-SIST TO SCR-SIST.
           GO TO FIN-GNS-GET-TSC.
       NEX-GNS-GET-TSC.
           MOVE 'NO EXISTE PARA PROCESADOR MENU, TEMP. STORAGE : '
                         TO SYS-MEN1.
           MOVE TSC-COLA TO SYS-MEN2.
           MOVE SYS-ABOR  TO SYS-CMND.
           PERFORM GNS-PRO-SYS.
       FIN-GNS-GET-TSC.
           EXIT.
       GNS-PUT-IDD-081 SECTION.
       INI-GNS-PUT-IDD-081.
           EXEC CICS HANDLE CONDITION
                     QIDERR (PUT-GNS-PUT-IDD-081)
                     ITEMERR(PUT-GNS-PUT-IDD-081)
           END-EXEC.
           MOVE +490     TO QUE-LITM.
           MOVE EIBTRMID TO WSS-TIDD-081.
           MOVE +1       TO QUE-NITM.
           EXEC CICS WRITEQ TS
                     QUEUE(WSS-QIDD-081)
                     FROM(IDD-REGI)
                     LENGTH(QUE-LITM)
                     ITEM(QUE-NITM)
                     REWRITE
           END-EXEC.
           GO TO FIN-GNS-PUT-IDD-081.
       PUT-GNS-PUT-IDD-081.
           EXEC CICS WRITEQ TS
                     QUEUE(WSS-QIDD-081)
                     FROM(IDD-REGI)
                     LENGTH(QUE-LITM)
           END-EXEC.
       FIN-GNS-PUT-IDD-081.
           EXIT.
      
       GNS-PUT-IDD SECTION.
       INI-GNS-PUT-IDD.
           EXEC CICS HANDLE CONDITION
                     QIDERR (PUT-GNS-PUT-IDD)
                     ITEMERR(PUT-GNS-PUT-IDD)
           END-EXEC.
           MOVE +490     TO QUE-LITM.
           MOVE EIBTRMID TO WSS-TIDD.
           MOVE +1       TO QUE-NITM.
           EXEC CICS WRITEQ TS
                     QUEUE(WSS-QIDD)
                     FROM(IDD-REGI)
                     LENGTH(QUE-LITM)
                     ITEM(QUE-NITM)
                     REWRITE
           END-EXEC.
           GO TO FIN-GNS-PUT-IDD.
       PUT-GNS-PUT-IDD.
           EXEC CICS WRITEQ TS
                     QUEUE(WSS-QIDD)
                     FROM(IDD-REGI)
                     LENGTH(QUE-LITM)
           END-EXEC.
       FIN-GNS-PUT-IDD.
           EXIT.
      
      * GNS-GET-IDD SECTION.
      * INI-GNS-GET-IDD.
      *     MOVE +490     TO QUE-LITM.
      *     MOVE EIBTRMID TO WSS-TIDD.
      *     MOVE +1       TO QUE-NITM.
      *     EXEC CICS READQ TS
      *               QUEUE(WSS-QIDD)
      *               INTO(IDD-REGI)
      *               LENGTH(QUE-LITM)
      *               ITEM(QUE-NITM)
      *     END-EXEC.
      * FIN-GNS-GET-IDD.
      *     EXIT.
      
       GNS-GET-IDD-081 SECTION.
       INI-GNS-GET-IDD-081.
           MOVE +490     TO QUE-LITM.
           MOVE EIBTRMID TO WSS-TIDD-081.
           MOVE +1       TO QUE-NITM.
           EXEC CICS READQ TS
                     QUEUE(WSS-QIDD-081)
                     INTO(IDD-REGI)
                     LENGTH(QUE-LITM)
                     ITEM(QUE-NITM)
           END-EXEC.
       FIN-GNS-GET-IDD-081.
           EXIT.
      
       CAL-PROG SECTION.
       INI-CAL-PROG.
           IF TSC-CIDD > SPACES
               MOVE TSC-CIDD TO IDD-COD-CIDD IN IDD
                                IFD-COD-CIFD IN IFD
               GO TO CON-CAL-PROG.
           MOVE TSC-PROG     TO RPF-KEY-DPRO.
           MOVE 'A '         TO RPF-KEY-TRYC.
           MOVE SPACES       TO RPF-KEY-DARC.
           MOVE FIO-GET-KEY TO FIO-CMND.
           MOVE TSC-PROG TO WSS-SIST.
           IF WSS-SIST NOT = 'GNS'
               MOVE TSC-SIST TO WSS-SIST.
           PERFORM VID-RPF.
           IF NOT FIO-STAT-OKS
               MOVE 'DEFAULT' TO IDD-COD-CIDD IN IDD
                                 IFD-COD-CIFD IN IFD
           ELSE
           IF RPF-COD-CIFD IN RPF NOT > SPACES
               MOVE 'DEFAULT' TO IDD-COD-CIDD IN IDD
                                 IFD-COD-CIFD IN IFD
           ELSE
               MOVE RPF-COD-CIFD IN RPF TO IDD-COD-CIDD IN IDD
                                           IFD-COD-CIFD IN IFD.
           MOVE IDD-COD-CIDD IN IDD TO TSC-CIDD.
       CON-CAL-PROG.
      *IDD
           MOVE TSC-BNCO TO RCI-COD-BNCO IN RCI-VARI.
           MOVE TSC-MRCA TO RCI-COD-MRCA IN RCI-VARI.
           MOVE TSC-CART TO RCI-COD-CART IN RCI-VARI.
           MOVE TSC-LENG TO RCI-COD-LENG IN RCI-VARI.
           MOVE TSC-PAIS TO RCI-COD-PAIS IN RCI-VARI.
           MOVE TSC-VRNT TO RCI-COD-VRNT IN RCI-VARI.
           MOVE TSC-CNAL TO RCI-COD-CNAL IN RCI-VARI.
           MOVE TSC-UMUA TO RCI-COD-UMUA IN RCI-VARI.
           MOVE TSC-MODO TO RCI-COD-MODO IN RCI-VARI.
      
           MOVE 'DEFAULT' TO RCI-COD-CPTO IN RCI-VARI.
           PERFORM BUS-RCI-IDD.
      
           PERFORM GNS-PUT-IDD.
           MOVE WSS-QIDD TO SCR-QIDD.
           MOVE QUE-LITM TO SCR-LIDD.
      *
      *IFD
           IF ( TSC-TIND = 'C' ) OR ( TSC-TINF NOT > SPACES )
               MOVE FIO-GET-KEY TO FIO-CMND
               PERFORM GNS-FIO-IFD
               IF NOT FIO-STAT-OKS
                   MOVE 'NO EXISTE REGISTRO IFD CON LLAVE :' TO SYS-MEN1
                   MOVE IFD-COD-CIFD IN IFD                  TO SYS-MEN2
                   MOVE SYS-ABOR TO SYS-CMND
                   PERFORM GNS-PRO-SYS
               ELSE
                   MOVE IFD-GLS-DATA IN IFD TO IFD-FSIS.
      *
           IF TSC-UARC( TSC-I ) > SPACES
               MOVE TSC-UARC( TSC-I ) TO AUX-UARC
               MOVE TSC-PROG TO AUX-PROG
               MOVE TSC-NTRN TO AUX-NTRN
               MOVE AUX-PRGM TO TSC-UARC( TSC-I )
               MOVE AUX-RPRG TO TSC-PROG
               MOVE AUX-RTRN TO TSC-NTRN.
           MOVE 'P'          TO TSC-ICMN.
           MOVE SCR-INST-HCM TO TSC-INST.
           PERFORM GNS-PUT-TSC.
      *SE CARGAN VARIABLES DEPENDIENDO DE TSC-TINF
           IF ( TSC-TINV = 'C' ) OR ( TSC-TINF NOT > SPACES )
               PERFORM PRO-MOVE-SCR1
           ELSE
               PERFORM PRO-MOVE-SCR2.
      *GRABA EN TEMPORARY STORAGE, LAS VARIABLES SCR2
           IF TSC-TINV = 'T'
               PERFORM PRO-PQTS-SCR2.
           IF ( TSC-TINV = 'O' OR 'T' ) AND ( EIBCALEN = 29 )
      *JSS-IBM Averigua si existe cola de seteo de llaves EN ESTE CASO
      *SOLO PARA V31 Y PARA ZOOM ( EIBCALEN = 29 )
               PERFORM GNS-ERR-QUE
               MOVE EIBTRMID TO QUE-TERM
               MOVE 'KYM'    TO QUE-TYPE
               MOVE 1     TO QUE-NITM
               MOVE +3000 TO QUE-LITM
               MOVE QUE-GET TO QUE-CMND
               PERFORM GNS-PRO-QUE
               IF QUE-STAT = QUE-STAT-OKS
                   MOVE 'GKY' TO OSC-INST SCR-INST
      *SE LLAMA AL PROGRAMA SEGUN TIPO DE TRASPASO DE CONTROL, ANTES
      *SE CARGAN LAS VARIABLES FRM SEGUN CORRESPONDA DEPENDIENDO DE TSC-
                   PERFORM PRO-MOVE-VSYS
      *             MOVE 'GNSPPPKE' TO SYS-PROG
                    MOVE WSS-KNMO-PROG TO SYS-PROG
               ELSE
                   PERFORM PRO-MOVE-VSYS
           ELSE
               PERFORM PRO-MOVE-VSYS.
      *
           IF TSC-TCTL = 'XCTL'
               PERFORM PRO-CALL-XCTL
      *     ELSE
      *     IF TSC-TCTL = 'LINK'
      *         PERFORM PRO-CALL-LINK
      *     ELSE
      *     IF TSC-TCTL = 'STAR'
      *         PERFORM PRO-CALL-STAR
           ELSE
           IF TSC-TCTL = 'RTTR'
               PERFORM PRO-CALL-RTTR
           ELSE
               PERFORM PRO-CALL-XCTL.
       FIN-CAL-PROG.
           EXIT.
       PRO-MOVE-SCR1 SECTION.
       INI-PRO-MOVE-SCR1.
           MOVE +1110              TO OSC-TCMA.
           MOVE TSC-SIST           TO OSC-SIST.
           MOVE TSC-OPCI           TO OSC-FUNC.
           MOVE TSC-NEMO           TO OSC-NEMO.
           MOVE TSC-NTRV           TO OSC-NTRV.
           MOVE TSC-NTRN           TO OSC-NTRN.
           MOVE TSC-PROG           TO OSC-PROG.
           MOVE TSC-NLIB           TO OSC-NLIB.
           MOVE TSC-NMAP           TO OSC-NMAP.
           MOVE TSC-LDOC           TO OSC-LDOC.
           MOVE TSC-NDOC           TO OSC-NDOC.
           MOVE TSC-FRET           TO OSC-FRET.
           MOVE TSC-IPRV           TO OSC-IPRV.
           MOVE TSC-SISG           TO OSC-SISG.
           IF TSC-TINS > SPACES
               MOVE TSC-TINS       TO OSC-INST
           ELSE
               MOVE SCR-INST-HKY   TO OSC-INST.
           MOVE TSC-TFUN           TO OSC-TFUN.
           MOVE TSC-CMNP           TO OSC-CMNP.
           MOVE TSC-FFLD           TO OSC-FFLD.
           MOVE TSC-I              TO OSC-I.
      *    MOVE TSC-CMND           TO OSC-CMND.
           MOVE TSC-CCMN( TSC-I )  TO OSC-CMND.
           MOVE TSC-PRMC           TO OSC-PRMC.
           MOVE TSC-CCPP( TSC-I )  TO OSC-CCPP.
           MOVE TSC-STPP( TSC-I )  TO OSC-STPP.
           MOVE 1 TO FRM-IFLD.
       LUP-PRO-MOVE-SCR1.
           MOVE TSC-CCMN(FRM-IFLD) TO OSC-COD-CCMN(FRM-IFLD).
           MOVE TSC-CCPP(FRM-IFLD) TO OSC-COD-CCPP(FRM-IFLD).
           MOVE TSC-STPP(FRM-IFLD) TO OSC-IND-STPP(FRM-IFLD).
           MOVE TSC-PRMT(FRM-IFLD) TO OSC-GLS-PRMT(FRM-IFLD).
           MOVE TSC-CONF(FRM-IFLD) TO OSC-GLS-CONF(FRM-IFLD).
           MOVE TSC-UARC(FRM-IFLD) TO OSC-GLS-UARC(FRM-IFLD).
           ADD 1 TO FRM-IFLD.
           IF FRM-IFLD NOT > 10
               GO TO LUP-PRO-MOVE-SCR1.
           MOVE TSC-USER           TO OSC-USER.
           MOVE TSC-OTRN           TO OSC-OTRN.
           MOVE TSC-PROV           TO OSC-PROV.
           MOVE 'C'                TO OSC-ICMN.
       FIN-PRO-MOVE-SCR1.
           EXIT.
      *HACE MOVE A VARIABLES DE PROGRAMA ( NUEVA VERSION )
       PRO-MOVE-SCR2 SECTION.
       INI-PRO-MOVE-SCR2.
           MOVE +250               TO SCR-TCMA.
           MOVE TSC-SIST           TO SCR-SIST.
           MOVE TSC-SISG           TO SCR-SISG.
           MOVE TSC-NTRN           TO SCR-NTRN.
           MOVE TSC-PROG           TO SCR-PROG.
           MOVE TSC-NTRV           TO SCR-NTRV.
           MOVE TSC-PROV           TO SCR-PROV.
           MOVE TSC-NLIB           TO SCR-NLIB.
           MOVE TSC-NMAP           TO SCR-NMAP.
           IF TSC-TINS > SPACES
               MOVE TSC-TINS       TO SCR-INST
           ELSE
               MOVE SCR-INST-HKY   TO SCR-INST.
           MOVE TSC-CMNP           TO SCR-CMNP.
      *    MOVE TSC-CMND           TO SCR-CMND.
           MOVE TSC-CCMN( TSC-I )  TO SCR-CMND.
           MOVE TSC-CCPP( TSC-I )  TO SCR-CCPP.
           MOVE TSC-STPP( TSC-I )  TO SCR-STPP.
           MOVE TSC-PRMT( TSC-I )  TO SCR-PRMT.
           MOVE TSC-CONF( TSC-I )  TO SCR-CONF.
           MOVE TSC-USER           TO SCR-USER.
           MOVE TSC-OTRN           TO SCR-OTRN.
           MOVE 'C'                TO SCR-ICMN.
      *                                SCR-QIDD
      *                                SCR-LIDD
           MOVE TSC-NEMO           TO SCR-NEMO.
           MOVE TSC-LDOC           TO SCR-LDOC.
           MOVE TSC-NDOC           TO SCR-NDOC-DISP.
           MOVE TSC-BNCO           TO SCR-HDR-BNCO.
           MOVE TSC-MRCA           TO SCR-HDR-MRCA.
           MOVE TSC-CART           TO SCR-HDR-CART.
           MOVE TSC-LENG           TO SCR-HDR-LENG.
           MOVE TSC-PAIS           TO SCR-HDR-PAIS.
           MOVE TSC-VRNT           TO SCR-HDR-VRNT.
      
           MOVE TSC-FRET           TO SCR-FRET.
           MOVE TSC-IPRV           TO SCR-IPRV.
           MOVE TSC-FFLD           TO SCR-FFLD.
       FIN-PRO-MOVE-SCR2.
           EXIT.
       PRO-PQTS-SCR2 SECTION.
       INI-PRO-PQTS-SCR2.
      *GRABAR TEMPORARY STORAGE CON SCR-VARI Y SCR-TCMA
           EXEC CICS HANDLE CONDITION
                     QIDERR (PUT-PRO-PQTS-SCR2)
                     ITEMERR(PUT-PRO-PQTS-SCR2)
           END-EXEC.
           MOVE SCR-TCMA TO QUE-LITM.
           MOVE 'GSCR'   TO QUE-TERM.
           MOVE EIBTRMID TO QUE-TYPE.
           MOVE +1       TO QUE-NITM.
           EXEC CICS WRITEQ TS
                     QUEUE(QUE-COLA)
                     FROM(SCR-VARI)
                     LENGTH(SCR-TCMA)
                     ITEM(QUE-NITM)
                     REWRITE
           END-EXEC.
           GO TO FIN-PRO-PQTS-SCR2.
       PUT-PRO-PQTS-SCR2.
           EXEC CICS WRITEQ TS
                     QUEUE(QUE-COLA)
                     FROM(SCR-VARI)
                     LENGTH(QUE-LITM)
           END-EXEC.
       FIN-PRO-PQTS-SCR2.
           EXIT.
       PRO-MOVE-VSYS SECTION.
       INI-PRO-MOVE-VSYS.
      *SI LAS VARIABLES DEL PROGRAMA VAN EN COMMAREA VERSION 1
           IF ( TSC-TINV = 'C' ) OR ( TSC-TINF NOT > SPACES )
               MOVE OSC-VARI TO SYS-CMMA
      *        MOVE OSC-TCMA TO SYS-TCMA
               MOVE +3500    TO SYS-TCMA
           ELSE
      *SI LAS VARIABLES DEL PROGRAMA VAN EN COMMAREA VERSION 2
           IF TSC-TINV = 'O'
               MOVE SCR-VARI TO SYS-CMMA
               MOVE SCR-TCMA TO SYS-TCMA
           ELSE
      *SE ASUME 'T' = SI LAS VARIABLES DEL PROGRAMA VAN EN TS
              MOVE SPACES   TO SYS-CMMA
              MOVE 0        TO SYS-TCMA.
           MOVE TSC-PROG TO SYS-PROG.
           MOVE TSC-NTRN TO SYS-NTRN.
       FIN-PRO-MOVE-VSYS.
           EXIT.
       PRO-CALL-XCTL SECTION.
       INI-PRO-CALL-XCTL.
           MOVE SYS-XCTL TO SYS-CMND.
           PERFORM GNS-PRO-SYS.
           PERFORM XCT-ERR.
       FIN-PRO-CALL-XCTL.
           EXIT.
       PRO-CALL-RTTR SECTION.
       INI-PRO-CALL-RTTR.
           MOVE SYS-RTRN TO SYS-CMND.
           PERFORM GNS-PRO-SYS.
       FIN-PRO-CALL-RTTR.
           EXIT.
       GNS-PRO-KEY SECTION.
       INI-GNS-PRO-KEY.
           MOVE EIBAID TO FRM-FFLD.
           IF NOT ( FRM-FFLD = FRM-FFLD-PF11 OR FRM-FFLD-PFK )
               GO TO FIN-GNS-PRO-KEY.
           PERFORM GNS-ERR-QUE.
           MOVE EIBTRMID TO QUE-TERM.
           MOVE 'PKB'    TO QUE-TYPE.
      *     MOVE 1        TO QUE-NITM.
      *     MOVE +3000    TO QUE-LITM.
           MOVE +3007    TO QUE-LITM.
      *     MOVE QUE-GET  TO QUE-CMND.
      *     PERFORM GNS-PRO-QUE.
           PERFORM GNS-CHK-QUEU.
           IF QUE-STAT NOT = QUE-STAT-OKS
               GO TO FIN-GNS-PRO-KEY.
           EXEC CICS HANDLE CONDITION
                     PGMIDERR (PGM-GNS-ERR-MNU)
           END-EXEC.
           MOVE DFHCOMMAREA(1:EIBCALEN) TO SYS-CMMA.
           MOVE EIBCALEN    TO SYS-TCMA.
           MOVE SYS-XCTL    TO SYS-CMND.
           IF QUE-IKEY = 'V31'
               MOVE 'GNSPPPKB' TO SYS-PROG
           ELSE
               MOVE 'GNSPPPFB' TO SYS-PROG.
           PERFORM GNS-PRO-SYS.
       FIN-GNS-PRO-KEY.
           EXIT.
       GNS-PUT-FRT SECTION.
       INI-GNS-PUT-FRT.
           EXEC CICS HANDLE CONDITION
                     QIDERR (QNX-GNS-PUT-FRT)
           END-EXEC.
           MOVE EIBTRMID TO RFN-TERM.
           EXEC CICS DELETEQ
                     QUEUE(RFN-COLA)
           END-EXEC.
       QNX-GNS-PUT-FRT.
           MOVE TSC-CMNP                TO RFN-PROG.
           MOVE MNU-COD-SIST IN MNU     TO RFN-SIST.
           MOVE TSC-SISG                TO RFN-SISG.
           IF MNU-COD-TFUN = 'CCA'
               MOVE TSC-NEMO TO MNU-COD-FRET IN MNU.
           MOVE MNU-COD-FRET IN MNU TO RFN-NEMO.
           MOVE SPACES              TO RFN-CMND.
           MOVE +29 TO RFN-LITM.
           EXEC CICS WRITEQ TS
                     QUEUE(RFN-COLA)
                     FROM(RFN-ITEM)
                     LENGTH(RFN-LITM)
                     AUXILIARY
           END-EXEC.
       FIN-GNS-PUT-FRT.
           EXIT.
      
       COPY GNSBGQUE.
      
       SET-AMB SECTION.
       INI-SET-AMB.
      *     MOVE TSK-TERM-ALF TO WSS-TSL-TERM.
      *     MOVE WSS-TSL-COLA TO QUE-COLA.
      *     MOVE QUE-DEL TO QUE-CMND.
      *     PERFORM GNS-PRO-QUE.
      
      *     MOVE TSK-TERM-ALF TO WSS-TSL-TERM.
      *     MOVE WSS-TSL-COLA TO QUE-COLA.
      *     MOVE WSS-TSL TO QUE-ITEM.
      *     MOVE WSS-TSL-LITM   TO QUE-LITM.
      *     MOVE QUE-PUT TO QUE-CMND.
      *     PERFORM GNS-PRO-QUE.
      
      *    MOVE SPACES TO SYS-CMMA.
      *    MOVE +0 TO SYS-TCMA.
      *    MOVE SYS-LINK TO SYS-CMND.
      *    MOVE 'GNSPPAMB' TO SYS-PROG.
      *    PERFORM GNS-PRO-SYS.
       FIN-SET-AMB.
           EXIT.
      
       COPY GNSBGTSK.
       DEL-ABP SECTION.
       INI-DEL-ABP.
      *     MOVE TSK-TERM-ALF TO ABP-TERM.
      *     MOVE ABP-COLA TO QUE-COLA.
      *     MOVE QUE-DEL TO QUE-CMND.
      *     PERFORM GNS-PRO-QUE.
       FIN-DEL-ABP.
           EXIT.
       COPY GNSBGRCI.
       COPY GNSBFRCI.
      
       SET-DFL-HDR SECTION.
       INI-SET-DFL-HDR.
      *     MOVE 'BCI'  TO WSS-TSC-BNCO TSC-BNCO.
      *     MOVE 'BCI'  TO WSS-TSC-MRCA TSC-MRCA.
      *     MOVE 'BEE'  TO WSS-TSC-CART TSC-CART.
      *     MOVE 'ES'   TO WSS-TSC-LENG TSC-LENG.
      *     MOVE 'CL'   TO WSS-TSC-PAIS TSC-PAIS.
      *     MOVE SPACES TO WSS-TSC-VRNT TSC-VRNT.
      *     MOVE SPACES TO WSS-TSC-CNAL TSC-CNAL.
      *     MOVE SPACES TO WSS-TSC-USER TSC-USER.
      *     MOVE SPACES TO WSS-TSC-MODO TSC-MODO.
      
           MOVE 'BCI'  TO TSC-BNCO.
           MOVE 'BCI'  TO TSC-MRCA.
           MOVE 'BEE'  TO TSC-CART.
           MOVE 'ES'   TO TSC-LENG.
           MOVE 'CL'   TO TSC-PAIS.
           MOVE SPACES TO TSC-VRNT.
           MOVE SPACES TO TSC-CNAL.
           MOVE SPACES TO TSC-UMUA.
           MOVE SPACES TO TSC-MODO.
      
      *    PERFORM SET-AMB.
       FIN-SET-DFL-HDR.
           EXIT.
      
       SET-CNX-HDR SECTION.
       INI-SET-CNX-HDR.
      
      *     MOVE WSS-RCV-AMBI-BNCO TO WSS-TSC-BNCO TSC-BNCO.
      *     MOVE WSS-RCV-AMBI-MRCA TO WSS-TSC-MRCA TSC-MRCA.
      *     MOVE WSS-RCV-AMBI-CART TO WSS-TSC-CART TSC-CART.
      *     MOVE WSS-RCV-AMBI-LENG TO WSS-TSC-LENG TSC-LENG.
      *     MOVE WSS-RCV-AMBI-PAIS TO WSS-TSC-PAIS TSC-PAIS.
      *     MOVE WSS-RCV-AMBI-VRNT TO WSS-TSC-VRNT TSC-VRNT.
      *     MOVE WSS-RCV-AMBI-CNAL TO WSS-TSC-CNAL TSC-CNAL.
      *     MOVE WSS-RCV-AMBI-USER TO WSS-TSC-USER TSC-USER.
      *     MOVE WSS-RCV-AMBI-MODO TO WSS-TSC-MODO TSC-MODO.
      
      
           MOVE WSS-RCV-AMBI-BNCO TO TSC-BNCO.
           MOVE WSS-RCV-AMBI-MRCA TO TSC-MRCA.
           MOVE WSS-RCV-AMBI-CART TO TSC-CART.
           MOVE WSS-RCV-AMBI-LENG TO TSC-LENG.
           MOVE WSS-RCV-AMBI-PAIS TO TSC-PAIS.
           MOVE WSS-RCV-AMBI-VRNT TO TSC-VRNT.
           MOVE WSS-RCV-AMBI-CNAL TO TSC-CNAL.
           MOVE WSS-RCV-AMBI-UMUA TO TSC-UMUA.
           MOVE WSS-RCV-AMBI-MODO TO TSC-MODO.
      
           MOVE WSS-RCV-AMBI-SIST TO WSS-NSXC.
      
      *    PERFORM SET-AMB.
       FIN-SET-CNX-HDR.
           EXIT.
