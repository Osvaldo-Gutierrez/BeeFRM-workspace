       IDENTIFICATION DIVISION.
      *========================
       PROGRAM-ID. GNSPHRPF.
       AUTHOR. CST.
       DATE-WRITTEN.  3-FEB-1993 18:36:00.

      * PROCESADOR DE AYUDA PARA ARCHIVO RPF

       ENVIRONMENT DIVISION.
      *=====================
       CONFIGURATION SECTION.
       SPECIAL-NAMES.
                     DECIMAL-POINT IS COMMA.

       DATA DIVISION.
      *==============

       WORKING-STORAGE SECTION.
      *------------------------
       01  WSS-RPF-VARI.
           03  WSS-COD-PROG.
               05  WSS-COD-PROG-01            PIC X(08).
               05  WSS-COD-PROG-02            PIC X(07).

       COPY GNSWGCBG.
      *COPY GNSBRTAB.
      *    Registro Generico de Tablas
      *    ---------------------------
      *
      *    Nombre Registro : TAB
      *    Clave(s)        : TAB-COD-TABL(UU), TAB-STP-ITRN(UU),
      *                      TAB-CIC-TABL(UU), TAB-EXT-TABL(DC)
      *    Largo           : 194
      *    Bloqueo         : 2
      *    Observaciones   :
      *
       01  TAB.
      *
      *    Filler Compatibilidad VSAM/MVS
           03  TAB-GLS-FLAG                             PIC X(01).
      *
      *    Clave Primaria Registro
           03  TAB-KEY-IREG.
      *
      *KEY     Tipo + Codigo ( LLave Primaria )
               05  TAB-COD-TABL.
      *
      *            Codigo Tipo Tabla
                   07  TAB-COD-TTAB                     PIC X(03).
      *
      *            Codigo Tabla
                   07  TAB-COD-CTAB                     PIC X(19).
      *
      *        Time Stamp Transaccion
               05  TAB-STP-ITRN.
      *
      *            Fecha Transaccion
                   07  TAB-FEC-FTRN.
                       09  TAB-NUM-STRN                 PIC 9(02).
                       09  TAB-NUM-ATRN                 PIC 9(02).
                       09  TAB-NUM-MTRN                 PIC 9(02).
                       09  TAB-NUM-DTRN                 PIC 9(02).
      *
      *            Hora Transaccion
                   07  TAB-HRA-HRTR.
                       09  TAB-NUM-HHTR                 PIC 9(02).
                       09  TAB-NUM-MMTR                 PIC 9(02).
                       09  TAB-NUM-SSTR                 PIC 9(02).
      *
      *    Indicador Tipo Accion
           03  TAB-MSC-TACC                             PIC X(01).
      *
      *    Indicador Status
           03  TAB-MSC-STAT                             PIC X(01).
      *
      *    Indicador Vigencia                           GNS VIGE
           03  TAB-IND-VIGE  REDEFINES  TAB-MSC-STAT    PIC X(01).
      *
      *    Codigo Origen Transaccion
           03  TAB-COD-OTRN.
      *
      *        Indicador Tipo Origen
               05  TAB-MSC-TTRN                         PIC X(01).
      *
      *        Codigo Tipo Origen
               05  TAB-COD-TTRN                         PIC X(03).
      *
      *    Autor Transaccion
           03  TAB-COD-ATRN                             PIC X(12).
      *
      *KEY Tipo + Codigo ( Interno Computacional )
           03  TAB-CIC-TABL.
      *
      *        Codigo Tipo Tabla
               05  TAB-CIC-TTAB                         PIC X(03).
      *
      *        Codigo Tabla
               05  TAB-CIC-CTAB                         PIC X(12).
      *
      *    Codigo Externo
           03  TAB-EXT-TABL.
      *
      *        Codigo Tipo Tabla
               05  TAB-EXT-TTAB                         PIC X(03).
      *
      *        Codigo Tabla
               05  TAB-EXT-CTAB                         PIC X(05).
      *
      *    Descripcion Corta
           03  TAB-GLS-DCOR                             PIC X(12).
      *
      *    Abreviacion Descripcion
           03  TAB-GLS-ABRV                             PIC X(05).
      *
      *    Descripcion del Codigo
           03  TAB-GLS-DESC                             PIC X(40).
      *
      *    Datos Anexos
           03  TAB-GLS-DATA.
               05  TAB-GLS-DAT1.
                   07  TAB-COD-DAT1     OCCURS 10       PIC X(01).
               05  TAB-GLS-DAT2.
                   07  TAB-COD-DAT2     OCCURS 10       PIC X(02).
               05  TAB-GLS-DAT3.
                   07  TAB-COD-DAT3     OCCURS 10       PIC X(03).
      *
      *    Clave Soundex
           03  TAB-SNX-TABL.
               05  TAB-SNX-TTAB                         PIC X(03).
               05  TAB-SNX-CTAB                         PIC X(03).
      *
      *    Variables de Tablas
       01  TAB-VARI.
      *
      *    Nombre de Programa FIO para TABlas
           03  TAB-GLS-FTAB.
      *
      *        Codigo Sistema
               05  TAB-COD-SIST                         PIC X(03).
      *
      *        Nombre 'fijo' de FIO TABlas
               05  TAB-COD-FTAB           VALUE 'PFTAB' PIC X(05).
       COPY GNSBRRPF.
       COPY GNSWCFIO.
       COPY GNSWVFIO.
       COPY GNSWGFRM.
       COPY GNSWGSYS.
       COPY GNSWGQUE.
       COPY GNSWVSCR.
       COPY GNSWCSCR.
       01  WSS-SCR-VARI-V20.
           03  WSS-SCR-TCMA-V20     COMP         PIC S9(04).
           03  WSS-SCR-SIST-V20                  PIC  X(03).
           03  WSS-SCR-FUNC-V20                  PIC  X(08).
           03  WSS-SCR-NEMO-V20                  PIC  X(12).
           03  WSS-SCR-RFBY-V20                  PIC  X(01).
           03  WSS-SCR-NTRV-V20                  PIC  X(04).
           03  FILLER                            PIC  X(01).
           03  WSS-SCR-NTRN-V20                  PIC  X(04).

       01  WSS-SCR-VARI-V31.
           03  WSS-SCR-TCMA-V31     COMP         PIC S9(04).
           03  WSS-SCR-SIST-V31                  PIC  X(03).
           03  WSS-SCR-SISG-V31                  PIC  X(03).
           03  WSS-SCR-NTRN-V31                  PIC  X(04).

       01  WSS-VARI.
           03  RET-CODI         PIC X(2).
           03  WSS-FHOY.
               05  WSS-DHOY                      PIC 9(02).
               05  FILLER   VALUE '/'            PIC X(01).
               05  WSS-MHOY                      PIC 9(02).
               05  FILLER   VALUE '/'            PIC X(01).
               05  WSS-SHOY                      PIC 9(02).
               05  WSS-AHOY                      PIC 9(02).

      *       Tamano del mapa
           03 WSS-TFLD  COMP      VALUE +0             PIC S9(04).
      *       Posicion del cursor
           03 WSS-PCUR  COMP      VALUE +0             PIC S9(04).
      *       Mapa
           03 WSS-DFRM                                 PIC X(3000).
      *       Common Area auxiliar
           03 WSS-CMMA                                 PIC X(3500).
      *JSS-IBM VARIABLE COMPARACION SOLO CODIGOS VIGENTES
           03 WSS-COD-TAB-OLD  VALUE SPACES            PIC X(3).
       01  WSS-TOT-CMA       VALUE 200                 PIC 9(03).
       01  CMAREA.
           02 CM-STAT          PIC X(1).
           02 CM-TABLA-CLAVES.
              03 CLAVE         OCCURS 200 PIC X(22).
           02 CM-ARCH.
              03 CM-FILL       PIC X(5).
              03 CM-DBDC       PIC X(3).
           02 CM-POS           PIC 9(4).
           02 CM-CLAVE.
              03 CM-TABL       PIC X(3).
              03 CM-CLAV       PIC X(12).
           02 TOPC             PIC 99.
           02 TCLA             PIC 999.
           02 TPRE             PIC 99.
           02 SWINI            PIC 9.
           02 CM-DISP          PIC X(4).
      *              ---------->>> 491
       01  WSS-STAT            PIC X(01).
           88 WSS-STAT-OKS    VALUE ' '.
       01  WSS-PUT-STAT.
           03 WSS-PUT-STAT-OKS    PIC X(01) VALUE ' '.
           03 WSS-PUT-STAT-BAD    PIC X(01) VALUE '*'.
       01  WS-TRAC.
           02 TRAC1  PIC X(5) VALUE '====>'.
           02 TRAC2  PIC X(3).

       01  LLAVE               VALUE SPACES.
           02 TABL               PIC X(3).
           02 LLAV               PIC X(12).
       01  L-HLP-COMM       PIC S9(4) COMP VALUE +27.
       01  HLP-COMM.
           02 HLP-VAR.
              03 HLP-POSI-TR      PIC 9(4).
              03 HLP-ARCH-TR.
                 04 FILLER        PIC X(5).
                 04 HLP-DBDC-ID   PIC X(3).
              03 HLP-TABL-TR      PIC X(3).
              03 HLP-CLAV-TR      PIC X(12).
      *01  R-FLD                  PIC X(2132).
      * COPY DFHBMSCA.
       01  BCRM05AI.
           02  FILLER PIC X(12).

           02  SISTEL    COMP  PIC  S9(4).
           02  SISTEF    PICTURE X.
           02  FILLER REDEFINES SISTEF.
             03 SISTEA    PICTURE X.
           02  SISTEI  PIC X(03).

           02  FECHAL    COMP  PIC  S9(4).
           02  FECHAF    PICTURE X.
           02  FILLER REDEFINES FECHAF.
               03 FECHAA    PICTURE X.
           02  FECHAI  PIC X(10).

           02 TABLA-MAPA OCCURS 19.

      * CODIGO
              03 COML COMP PIC S9(4).
              03 COMA PIC X.
              03 COMI PIC X(15).

      * GLOSA MENU
              03 GLML COMP PIC S9(4).
              03 GLMA PIC X.
              03 GLMI PIC X(60).

           02  MSGL    COMP  PIC  S9(4).
           02  MSGF    PICTURE X.
           02  FILLER REDEFINES MSGF.
             03 MSGA    PICTURE X.
           02  MSGI.
               03 FILLER PIC X(50).
               03 SOURX  PIC X(20).

       01  VARIABLES.
           02 L-CMAREA         PIC S9(4) COMP VALUE +5000.
           02 LENG             PIC S9(4) COMP VALUE +158.
           02 LMEN             PIC S9(4) COMP VALUE +40.
           02 L-FLD            PIC S9(4) COMP VALUE +2132.
           02 SWEXIS           PIC 9.
           02 SWMOV            PIC 9.
           02 EOF              PIC 9 VALUE 0.
           02 I                PIC 99.
           02 J                PIC 99.
           02 SWRET            PIC 9.
           02 HORA             PIC 9(7).
           02 HORA-RED         REDEFINES HORA.
              03 FILLER        PIC X.
              03 HH            PIC 99.
              03 MM            PIC 99.
              03 SS            PIC 99.
           02 HORA-ED.
              03 HH-M          PIC 99.
              03 FILLER        PIC X VALUE ':'.
              03 MM-M          PIC 99.
              03 FILLER        PIC X VALUE ':'.
              03 SS-M          PIC 99.
           02 WS-LLAVE         PIC X(15).

           02 WS-CODIGO.
              03 FILLER        PIC X(4).
              03 WS-COD        PIC X(18).
           02 FILLER           PIC X(6) VALUE 'WS-COD'.
           02 WS-COD-R         PIC X(15).
      *    02 NUM-BASE         PIC S9(4) COMP.
      *ISP 11-07-90
           02 NUM-BASE         PIC X(03).
           02 NOM-REGI         PIC X(7).
           02 FILLER           PIC X(25).
           02 MAX-CONT         PIC S9(4) COMP.
           02 NOM-CONT         PIC S9(4) COMP.
           02 FILLER           PIC X(22).
           02 VAL-CLAV         PIC X(15).

      * VARIABLES MANEJO DE MAPA Y TRANSACCIONES
      * ----------------------------------------
       01  HLP-FRM-VARI.
      * VERSION GNS
           02 FRMAMAP          PIC X(07) VALUE 'GNSAHRP'.
           02 FRMFMAP          PIC X(07) VALUE 'GNSFHRP'.
           02 FRMTRAN          PIC X(04) VALUE 'GH03'.
      * VERSION HLP
      *    02 FRMAMAP          PIC X(07) VALUE 'HLPARPF'.
      *    02 FRMFMAP          PIC X(07) VALUE 'HLPFRPF'.
      *    02 FRMTRAN          PIC X(04) VALUE 'HL05'.
      * 01  BLLCELLS.
      *     02 FILLER           PIC S9(8) COMP.
      *     02 FIO-PNT0         PIC S9(8) COMP.
      *ISP REGISTRO TAB ORIGINALMENTE NO VIA COPY, SE MANTIENE ESTA
      *    ESTRUCTURA HASTA DEJARLO COMPATIBLE LEYENDO EN TAB Y MOVIENDO
      *    A LNK-TAB LO QUE CORRESPONDE
       01  LINK-TAB.
           03 LNK-LLAVE.
              04 LNK-TAB                   PIC X(03).
              04 LNK-COD                   PIC X(12).
           03 LNK-LLAVE-R   REDEFINES LNK-LLAVE.
              04 LNK-COD-R                 PIC X(07).
              04 FILLER                    PIC X(08).
       LINKAGE SECTION.
      *----------------
       01  DFHCOMMAREA.
      *    02 FILER1           PIC X(1396).
           02 FILER1           PIC X(5000).
      *     02 FILER2           PIC X(0213).
       COPY GNSLGFIO.
       PROCEDURE DIVISION.
      *===================
           MOVE LOW-VALUES TO BCRM05AI.
           PERFORM GNS-HDL-VSM.
      *    EXEC CICS HANDLE CONDITION
      *          NOTOPEN(REQ-INVALIDO)
      *          NOTFND(NO-ENCONTRADO)
      *          ENDFILE(FIN-ARCHIVO)
      *          INVREQ(REQ-INVALIDO)
      *          NOSPACE(NO-ESPACIO)
      *          LENGERR(LENG-ERR)
      *    END-EXEC.

           IF EIBCALEN NOT = L-CMAREA
                PERFORM PRIMERA-VEZ THRU LENG-ERR.

           MOVE DFHCOMMAREA    TO CMAREA.
           MOVE CM-STAT TO WSS-STAT.
           IF NOT WSS-STAT-OKS
               PERFORM RET-FPEN.

           MOVE CM-DBDC        TO NUM-BASE.

           EXEC CICS HANDLE AID
                 CLEAR(TERMINAR)
           END-EXEC.

           GO TO RECIBIR.
       PRIMERA-VEZ.
      *------------
           MOVE DFHCOMMAREA    TO CMA-ARG.
           MOVE CMA-ARG-SIST   TO CM-DBDC.

           MOVE WSS-PUT-STAT-OKS TO CM-STAT.
      *     MOVE HLP-POSI-TR    TO CM-POS.
      *     MOVE HLP-TABL-TR    TO TABL CM-TABL.
      *     MOVE HLP-CLAV-TR    TO LLAV CM-CLAV.
      *     MOVE TABL   TO TAB-COD-TTAB IN TAB.
           MOVE SPACES TO TAB-COD-TTAB IN TAB.
           MOVE SPACES TO TAB-COD-CTAB IN TAB.

      *    MOVE HLP-ARCH-TR    TO CM-ARCH WS-TRAC.
      *     MOVE HLP-ARCH-TR    TO CM-ARCH.
           MOVE CM-CLAVE       TO WS-COD-R.
           MOVE CM-DBDC        TO NUM-BASE.
      *    ADD  L-FLD          TO L-TSQ.
       LENG-ERR.
      *---------
           MOVE LOW-VALUES     TO BCRM05AI
           MOVE SYS-GET-DATE TO SYS-CMND.
           PERFORM GNS-PRO-SYS.
           MOVE SYS-DHOY       TO WSS-DHOY.
           MOVE SYS-MHOY       TO WSS-MHOY.
           MOVE SYS-SHOY       TO WSS-SHOY.
           MOVE SYS-AHOY       TO WSS-AHOY.

           MOVE WSS-FHOY       TO FECHAI.
      *     MOVE EIBTIME        TO HORA.
      *     MOVE HH             TO HH-M.
      *     MOVE MM             TO MM-M.
      *     MOVE SS             TO SS-M.
      *           MOVE HORA-ED        TO HORAI.
           MOVE 0              TO SWINI.
           PERFORM FIND-USPMUSR.
           IF SWEXIS = 0
                MOVE 'NO EXISTE TABLA ( PF3 PARA RETORNAR )'
                             TO MSGI
                MOVE WSS-PUT-STAT-BAD TO CM-STAT
                MOVE CM-TABL TO SOURX
                PERFORM ENVIAR-MAPA-COMPLETO
                PERFORM AUTO-INVOC.

      *ISP TITULA SISTEMA, TABLA , DESCRIPCION REG PADRE
           MOVE CM-DBDC      TO SISTEI.

           MOVE SPACES TO RET-CODI.
           PERFORM LEER-USPMUSR THRU F-LEER
           IF NOT FIO-STAT-OKS
                     MOVE 'Tabla Sin Registros ( PF3 Para Retornar )'
                                                  TO MSGI
                     MOVE WSS-PUT-STAT-BAD TO CM-STAT
                     MOVE CM-TABL TO SOURX
                     PERFORM ENVIAR-MAPA-COMPLETO
                     PERFORM AUTO-INVOC.

           MOVE 0              TO EOF SWMOV.
      *JSS-IBM MOVE 1              TO I.
           MOVE 1              TO I.
           MOVE RPF-COD-DPTR IN RPF TO WSS-COD-PROG.
           PERFORM SET-COMI.
           MOVE WSS-COD-PROG        TO COMI(1).
           MOVE RPF-GLS-DATA IN RPF TO GLMI(1).
           MOVE LNK-LLAVE TO CLAVE(1).
      *JSS-IBM
           MOVE CM-TABL TO WSS-COD-TAB-OLD.
           PERFORM LEER-USPMUSR THRU F-LEER
           MOVE SPACES  TO WSS-COD-TAB-OLD.
           PERFORM RECUPERAR-OPCIONES
           IF SWRET = 1        MOVE 'Fin De Paginas' TO MSGI
                               MOVE 1         TO TCLA TPRE
           ELSE                MOVE ' '
                                                             TO MSGI
                               MOVE 2         TO TCLA
                               MOVE 1         TO TPRE
                               MOVE WS-LLAVE TO CLAVE (2).
      *                        MOVE LNK-LLAVE TO CLAVE (2).
      *                        MOVE CM-CLAVE  TO CLAVE (1).
           PERFORM ENVIAR-MAPA-COMPLETO
           PERFORM AUTO-INVOC.
       ENVIAR-MAPA-COMPLETO.
      *---------------------
           EXEC CICS SEND MAP(FRMFMAP)
                               MAPSET(FRMAMAP)
                               FROM(BCRM05AI)
                               ERASE
           END-EXEC.
       ENVIAR-MAPA-DATOS.
      *------------------
           EXEC CICS SEND      MAP(FRMFMAP)
                               MAPSET(FRMAMAP)
                               FROM(BCRM05AI)
                               DATAONLY
           END-EXEC.
       AUTO-INVOC.
      *-----------
           EXEC CICS RETURN    TRANSID(FRMTRAN)
                               COMMAREA(CMAREA)
                               LENGTH(L-CMAREA)
           END-EXEC.
       RECIBIR-MAPA.
      *-------------
           EXEC CICS RECEIVE   MAP(FRMFMAP) MAPSET(FRMAMAP)
                               INTO(BCRM05AI)
           END-EXEC.
       RECUPERAR-OPCIONES.
      *-------------------
           PERFORM PROCESAR-OPCIONES UNTIL EOF = 1 OR
                                           I = 19.
           IF (EOF = 1)
                               MOVE 1 TO SWRET
           ELSE                MOVE LNK-LLAVE TO WS-LLAVE
                               MOVE 2 TO SWRET.
      *                        PERFORM LEER-USPMUSR THRU F-LEER
      *                     IF EOF = 1
      *                         MOVE 1 TO SWRET
      *                     ELSE
      *                      IF LLAVE = LNK-LLAVE
      *                       IF CM-TABL = LNK-TAB
      *                       ELSE
      *                         MOVE 1 TO SWRET.
           IF I = 19    MOVE 20 TO TOPC
           ELSE         ADD 1 I GIVING TOPC
                        PERFORM LIMPIAR VARYING J FROM TOPC BY 1
                                               UNTIL J > 19.

       PROCESAR-OPCIONES.
      *------------------
      *JSS-IBM
           ADD 1               TO I.
      *     MOVE DFHBMASF       TO COMA (I) GLMA (I) OPCA(I).
           IF CM-CLAV = SPACES
                MOVE LNK-COD        TO COMI (I)
           ELSE
                MOVE LNK-COD        TO WS-CODIGO
                MOVE WS-COD         TO COMI (I).

           IF RPF-KEY-TREG IN RPF = 'A'
               PERFORM LIMPIAR VARYING J FROM I BY 1
                                               UNTIL J > 19
               MOVE 19 TO I
           ELSE
               MOVE RPF-COD-DPTR IN RPF TO WSS-COD-PROG
               PERFORM SET-COMI
               MOVE WSS-COD-PROG        TO COMI(I)
               MOVE RPF-GLS-DATA IN RPF TO GLMI(I)
      *JSS-IBM
      *    ADD 1               TO I
      *JSS-IBM
               MOVE CM-TABL TO WSS-COD-TAB-OLD
               PERFORM LEER-USPMUSR THRU F-LEER
               MOVE SPACES  TO WSS-COD-TAB-OLD
               MOVE LNK-COD-R      TO WS-COD-R
               IF NOT FIO-STAT-OKS
                      MOVE 1 TO EOF.

       LIMPIAR.
      *--------
      *     MOVE DFHBMDAR       TO COMA (J) GLMA (J) OPCA (J).
           MOVE SPACES TO COMI(J) GLMI(J).
       START-USPMUSR.
      *--------------
           MOVE 1              TO SWEXIS
           MOVE SPACES TO RET-CODI.
      *ISP
           IF CM-DBDC IS NUMERIC
                PERFORM SET-NUM-IDD
                MOVE '***'    TO FIO-SIST
           ELSE
                MOVE CM-DBDC  TO FIO-SIST.

           MOVE FIO-GET-NLS TO FIO-CMND.
      * ISP: BCH
           MOVE TAB-COD-CTAB IN TAB TO RPF-COD-DPTR IN RPF.
           PERFORM GNS-FIO-RPF.
      * ISP: BCH
       CIC-FST-BCH.
      *     IF FIO-STAT-OKS
      *         IF BCH-COD-TRYC NOT = 'B'
      *              MOVE FIO-GET-NXT TO FIO-CMND
      *              MOVE CM-DBDC  TO FIO-SIST
      *              PERFORM GNS-FIO-RPF
      *              GO TO CIC-FST-BCH.

           IF FIO-STAT-OKS
                MOVE RPF-COD-DPTR IN RPF TO TAB-COD-CTAB IN TAB
                MOVE RPF-GLS-DATA IN RPF TO TAB-GLS-DESC IN TAB.
      *     IF RET-CODI NOT = SPACES
            IF NOT FIO-STAT-OKS
                     MOVE 0 TO SWEXIS.
       F-STAR.
      *-------
       LEER-USPMUSR.
      *-------------
      *ISP
       CIC-LEER-USPMUSR.

      *ISP
           IF CM-DBDC IS NUMERIC
                PERFORM SET-NUM-IDD
                MOVE '***'    TO FIO-SIST
           ELSE
                MOVE CM-DBDC  TO FIO-SIST.
           MOVE TAB-COD-CTAB IN TAB TO RPF-COD-DPTR IN RPF.
       CIC-NXT-BCH.
           MOVE FIO-GET-NXT TO FIO-CMND.
      * ISP: BCH
           PERFORM GNS-FIO-RPF.
      * ISP: BCH
      *     IF FIO-STAT-OKS
      *         IF BCH-COD-TRYC NOT = 'B'
      *              MOVE CM-DBDC  TO FIO-SIST
      *              GO TO CIC-NXT-BCH.

           IF FIO-STAT-OKS
                MOVE RPF-COD-DPTR IN RPF TO TAB-COD-CTAB IN TAB
                MOVE RPF-GLS-DATA IN RPF TO TAB-GLS-DESC IN TAB.

           IF FIO-STAT-OKS
               MOVE SPACES TO RET-CODI
           ELSE
               MOVE FIO-STAT TO RET-CODI.
           MOVE TAB-COD-TABL TO LINK-TAB.
      *JSS-IBM
      *     IF RET-CODI = SPACES
      *         IF WSS-COD-TAB-OLD > SPACES
      *             IF WSS-COD-TAB-OLD = LNK-TAB
      *                 IF TAB-IND-VIGE = 'N'
      *                     GO TO CIC-LEER-USPMUSR.

           IF RET-CODI NOT = SPACES
                               MOVE 1 TO EOF.
       F-LEER.
      *-------
      *ISP
       F-FINB.
      *-------
       FIND-USPMUSR.
      *--------------
           MOVE 1              TO SWEXIS
           MOVE SPACES TO RET-CODI.
      *ISP
           IF CM-DBDC IS NUMERIC
                PERFORM SET-NUM-IDD
                MOVE '***'    TO FIO-SIST
           ELSE
                MOVE CM-DBDC  TO FIO-SIST.

           MOVE FIO-FND-NLS TO FIO-CMND.
      * ISP: BCH
           MOVE TAB-COD-CTAB IN TAB TO RPF-COD-DPTR IN RPF.
           PERFORM GNS-FIO-RPF.
      *     IF RET-CODI NOT = SPACES
            IF NOT FIO-STAT-OKS
                     MOVE 0 TO SWEXIS.
       RECIBIR.
      *--------
           PERFORM RECIBIR-MAPA.
      *ISP: PF12
      *     IF EIBAID = '@' OR '<'
      *          PERFORM GNS-RET-MEN
      *     ELSE
            IF EIBAID = '3' OR 'C'     PERFORM TERMINAR
           ELSE
             IF EIBAID = '7' OR 'G'   PERFORM PAGINA-ANTERIOR
             ELSE
              IF EIBAID = '8' OR 'H'  PERFORM PAGINA-SIGUIENTE.
           PERFORM ENVIAR-MAPA-DATOS THRU AUTO-INVOC.
       PAGINA-ANTERIOR.
      *----------------
           IF TPRE = 1
                MOVE 'No Existen Paginas Anteriores' TO MSGI
           ELSE
                COMPUTE TPRE = TPRE - 1
                MOVE ' ' TO MSGI
                MOVE CLAVE(TPRE) TO LLAVE
                MOVE LLAVE TO TAB-COD-TABL
                PERFORM START-USPMUSR THRU F-STAR
                MOVE RPF-COD-DPTR IN RPF TO WSS-COD-PROG
                PERFORM SET-COMI
                MOVE WSS-COD-PROG        TO COMI(1)
                MOVE RPF-GLS-DATA IN RPF TO GLMI(1)
                MOVE 1 TO I
                PERFORM LEER-USPMUSR THRU F-LEER
                MOVE 1 TO SWEXIS
                MOVE 0 TO SWINI
                MOVE 0 TO SWMOV EOF
                PERFORM RECUPERAR-OPCIONES.

       PAGINA-SIGUIENTE.
      *-----------------
           IF TPRE = TCLA
               MOVE 'No Existen Paginas Siguientes' TO MSGI
           ELSE
               COMPUTE TPRE = TPRE + 1
               MOVE CLAVE(TPRE) TO LLAVE
               MOVE LLAVE TO TAB-COD-TABL
               PERFORM START-USPMUSR THRU F-STAR
               MOVE RPF-COD-DPTR IN RPF TO WSS-COD-PROG
               PERFORM SET-COMI
               MOVE WSS-COD-PROG        TO COMI(1)
               MOVE RPF-GLS-DATA IN RPF TO GLMI(1)

               MOVE 1 TO I
               PERFORM LEER-USPMUSR THRU F-LEER
               MOVE 1 TO SWEXIS
               MOVE 0 TO SWINI
               MOVE 0 TO SWMOV EOF
               PERFORM RECUPERAR-OPCIONES
               IF (SWRET = 2) AND (TPRE NOT < TCLA)
                    COMPUTE TCLA = TCLA + 1
                    IF TCLA > WSS-TOT-CMA
                        MOVE 'PF3: FIN  OVERFLOW COMMAREA' TO MSGI
                        PERFORM CANCELAR
                    ELSE
                        MOVE ' ' TO MSGI
                        MOVE WS-LLAVE TO CLAVE(TCLA)
                ELSE
                    MOVE ' ' TO MSGI.

       GNS-RET-MEN.
      *------------
           MOVE CM-POS  TO HLP-POSI-TR.
           MOVE CM-DBDC TO HLP-DBDC-ID.
           MOVE CM-TABL TO HLP-TABL-TR.
           MOVE CM-CLAV TO HLP-CLAV-TR.
           EXEC CICS XCTL
                 PROGRAM('HLPPAG03')
                 COMMAREA(HLP-COMM)
                 LENGTH(L-HLP-COMM)
           END-EXEC.
       REQ-INVALIDO.
      *-------------
           MOVE 'PF3: FIN  REQUERIMIENTO INVALIDO'
                               TO MSGI.
           MOVE EIBRSRCE       TO SOURX
           GO TO CANCELAR.
       NO-ESPACIO.
      *-----------
           MOVE 'PF3: FIN  FACILIDAD OCUPADA'
                               TO MSGI.
           MOVE EIBRSRCE       TO SOURX
           GO TO CANCELAR.
       LG-CON.
      *-------
           MOVE 'ERROR LARGO PARAMETROS'
                               TO MSGI.
           GO TO TERMINAR.
       FIN-ARCHIVO.
      *ISP
      *------------
           MOVE '23' TO RET-CODI
           MOVE 1              TO EOF
           GO TO F-LEER.
       NO-ENCONTRADO.
      *--------------
           MOVE 0              TO SWEXIS.
           MOVE '23' TO RET-CODI.
           GO TO F-STAR.
       NO-ABIERTO.
      *-----------
           MOVE 'PF3: FIN  ARCHIVO CERRADO'
                               TO MSGI.
           MOVE EIBRSRCE       TO SOURX
           GO TO CANCELAR.
       CANCELAR.
      *---------
           PERFORM ENVIAR-MAPA-DATOS THRU AUTO-INVOC.
       TERMINAR.
      *---------
           PERFORM RET-FPEN.
       FIN-TERMINAR.

       RET-FPEN SECTION.
       INI-RET-FPEN.
           PERFORM GNS-ERR-QUE.
           MOVE EIBTRMID TO QUE-TERM.
           MOVE 'HLP'    TO QUE-TYPE.
           MOVE 1        TO QUE-NITM.
           MOVE +9999    TO QUE-LITM.
           MOVE QUE-GET  TO QUE-CMND.
           PERFORM GNS-PRO-QUE.
           IF QUE-STAT NOT = QUE-STAT-OKS
               GO TO FIN-RET-FPEN.
      *Ya leyo primer registro de la cola para detectar si esta existia
           IF QUE-IKEY NOT = 'MAP'
               GO TO FIN-RET-FPEN.
           MOVE QUE-DATA TO WSS-DFRM.
           MOVE QUE-LDAT TO WSS-TFLD.
           MOVE QUE-PCUR TO WSS-PCUR.
           MOVE 2        TO QUE-NITM.
           MOVE +9999    TO QUE-LITM.
           MOVE EIBTRMID TO QUE-TERM.
           MOVE 'HLP'    TO QUE-TYPE.
           MOVE QUE-GET  TO QUE-CMND.
           PERFORM GNS-PRO-QUE.
           IF QUE-STAT NOT = QUE-STAT-OKS
               GO TO FIN-RET-FPEN.

           IF NOT ( QUE-IKEY = 'CM2' OR 'CM3' )
               GO TO FIN-RET-FPEN.
           MOVE QUE-LDAT TO SCR-TCMA.
           MOVE QUE-DATA TO WSS-CMMA.

           IF QUE-IKEY = 'CM2'
               MOVE QUE-DATA TO WSS-SCR-VARI-V20
               MOVE WSS-SCR-NTRN-V20 TO SCR-NTRN.

           IF QUE-IKEY = 'CM3'
               MOVE QUE-DATA TO WSS-SCR-VARI-V31
               MOVE WSS-SCR-NTRN-V31 TO SCR-NTRN.

      *    MOVE 3        TO QUE-NITM.
      *    MOVE +9999    TO QUE-LITM.
      *    MOVE EIBTRMID TO QUE-TERM.
      *    MOVE 'HLP'    TO QUE-TYPE.
      *    MOVE QUE-GET  TO QUE-CMND.
      *    PERFORM GNS-PRO-QUE.
      *    IF QUE-STAT = QUE-STAT-OKS
      *        PERFORM MOD-TSC.
           MOVE EIBTRMID TO QUE-TERM.
           MOVE 'HLP'    TO QUE-TYPE.
           MOVE QUE-DEL  TO QUE-CMND.
           PERFORM GNS-PRO-QUE.
           EXEC CICS SEND FROM(WSS-DFRM)
                          LENGTH(WSS-TFLD)
                          ERASE
           END-EXEC.
           EXEC CICS SEND CONTROL CURSOR(WSS-PCUR)
                          TERMINAL
           END-EXEC.
           PERFORM SCR-EXIT.
       FIN-RET-FPEN.
           EXIT.

       SCR-EXIT SECTION.
       INI-SCR-EXIT.
           EXEC CICS RETURN
                     TRANSID(SCR-NTRN)
                     COMMAREA(WSS-CMMA)
                     LENGTH(SCR-TCMA)
           END-EXEC.
           GOBACK.
       FIN-SCR-EXIT.
           EXIT.

       SET-NUM-IDD SECTION.
       INI-SET-NUM-IDD.
      * ISP: SI EN HLPMPOS EXISTE UN NUMERO SE DEJA UNA IDD PARA EL
      *      SISTEMA '***' CON NUMERO DE BASE DE DATOS DE HLPMPOS
      *
       FIN-SET-NUM-IDD.
           EXIT.

       SET-COMI SECTION.
       INI-SET-COMI.
           IF RPF-KEY-TREG IN RPF = 'A'
               MOVE SPACES TO WSS-COD-PROG-02
           ELSE
               MOVE SPACES TO WSS-COD-PROG.
       FIN-SET-COMI.
           EXIT.

       COPY GNSBGVSM.
       COPY GNSBHVSM.
       COPY GNSBGFRM.
       COPY GNSBGQUE.
       COPY GNSBGSYS.
       COPY GNSBFRPF.
       COPY GNSBIABT.
