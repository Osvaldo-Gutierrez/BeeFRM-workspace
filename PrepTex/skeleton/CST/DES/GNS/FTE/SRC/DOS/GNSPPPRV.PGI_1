      *$ASCII
       IDENTIFICATION DIVISION.
      *=======================
       PROGRAM-ID.     GNSPPPRV.
       AUTHOR.          CONSIST.
      *
      * Subrutina de lectura de Privilegios desde Cola 'TS'
      *
       ENVIRONMENT DIVISION.
      *=====================
       CONFIGURATION SECTION.
      *----------------------
       SPECIAL-NAMES.
               DECIMAL-POINT IS COMMA.

       DATA DIVISION.
      *==============
       WORKING-STORAGE SECTION.
      *-----------------------
      *>>>>> Ini RAA
       COPY GNSWGQUE.
       COPY GNSWGSYS.
       COPY GNSWGTPU.
      *<<<<< Fin RAA
       01  WSS-VARI.
           03 WSS-COD-TCON                              PIC X(03).
           03 WSS-I      VALUE ZEROES                   PIC 9(04).
           03 WSS-T      VALUE ZEROES                   PIC 9(04).
           03 WSS-J      VALUE ZEROES                   PIC 9(03). 
           03 WSS-L      VALUE ZEROES                   PIC 9(03). 
           03 WSS-K      VALUE ZEROES                   PIC 9(03).
           03 WSS-PDP-CMP-NEMO.
              05 WSS-PDP-CMP-NEMO-IDX OCCURS 12 TIMES   PIC X(01).
           03 WSS-UYP-CMP-NEMO.
              05 WSS-UYP-CMP-NEMO-IDX OCCURS 12 TIMES   PIC X(01).
                       
       COPY GNSWGUYP.
       COPY GNSLGUYP.
      *>>>>> Ini RAA
       COPY GNSWVSCR.
      *<<<<< Fin RAA
       LINKAGE SECTION.
      *---------------
       01  DFHCOMMAREA.
           02 FILLER                        PIC X(47).
       
       PROCEDURE DIVISION.
      *===================
       
       MAIN SECTION.
      *------------
       INI-MAIN.
      *>>>>> Ini RAA
           MOVE DFHCOMMAREA     TO UYP-VARI.
           PERFORM GNS-ERR-QUE.
           PERFORM OBT-QUE.
           IF  QUE-STAT NOT = QUE-STAT-OKS
                 PERFORM LNK-PFL
                 PERFORM OBT-QUE.

           MOVE QUE-ITEM        TO WSS-QUE-VARI.
           IF  UYP-COD-USER NOT = WSS-SCR-USER
                 PERFORM IDN-QUE 
                 MOVE QUE-DEL   TO QUE-CMND
                 PERFORM GNS-PRO-QUE 
                 PERFORM LNK-PFL
                 PERFORM OBT-QUE
                 MOVE QUE-ITEM  TO WSS-QUE-VARI.
      *
           MOVE WSS-TOT-PDP      TO WSS-I.
           PERFORM DET-PRV.
           IF  WSS-COD-TCON = UYP-CON-MALO
                 MOVE UYP-STAT-TCER    TO UYP-COD-STAT.
           MOVE UYP-VARI        TO DFHCOMMAREA.
      *<<<<< Fin RAA
       FIN-MAIN.
           EXEC CICS RETURN END-EXEC.
      *>>>>> Ini RAA
       IDN-QUE SECTION.
       INI-IDN-QUE.
           MOVE EIBTRMID        TO QUE-TERM.
           MOVE 'PRV '          TO QUE-TYPE.
           MOVE 1               TO QUE-NITM.
           MOVE +3007           TO QUE-LITM.
       FIN-IDN-QUE.
           EXIT.

       LNK-PFL SECTION.
       INI-LNK-PFL.
           MOVE SYS-LINK   TO SYS-CMND.
           MOVE 'GNSPPPFL' TO SYS-PROG.
           MOVE UYP-VARI   TO SYS-CMMA.
           MOVE +47        TO SYS-TCMA.
           PERFORM GNS-PRO-SYS.
       FIN-LNK-PFL.
           EXIT.

       OBT-QUE SECTION.
       INI-OBT-QUE.
           PERFORM IDN-QUE.
           MOVE QUE-GET         TO QUE-CMND.
           PERFORM GNS-PRO-QUE.
       FIN-OBT-QUE.
           EXIT.
      *<<<<< Fin RAA
       DET-PRV SECTION.
       INI-DET-PRV.
           MOVE WSS-I   TO WSS-T.
           MOVE 'N'     TO UYP-IND-RESP.
           IF  UYP-COD-TDPU = UYP-COD-TDPU-GB
                 PERFORM BUS-PRV-SIST VARYING WSS-I
                         FROM 1 BY 1 UNTIL WSS-I > WSS-T
           ELSE
             PERFORM DET-WSS-COD-TCON
             IF  WSS-COD-TCON = UYP-CON-SIST
                   PERFORM BUS-PRV-SIST VARYING WSS-I
                           FROM 1 BY 1 UNTIL WSS-I > WSS-T
             ELSE
               IF  WSS-COD-TCON = UYP-CON-NEMO
                     PERFORM BUS-PRV-NEMO VARYING WSS-I
                             FROM 1 BY 1 UNTIL WSS-I > WSS-T
               ELSE
                 IF  WSS-COD-TCON = UYP-CON-CMND
                       PERFORM BUS-PRV-CMND VARYING WSS-I
                               FROM 1 BY 1 UNTIL WSS-I > WSS-T
                 ELSE
                   IF  WSS-COD-TCON = UYP-CON-PROC
                       PERFORM BUS-PRV-PROC VARYING WSS-I
                               FROM 1 BY 1 UNTIL WSS-I > WSS-T
                   ELSE
                     IF  WSS-COD-TCON = UYP-CON-MALO
                           MOVE UYP-STAT-TCER TO UYP-COD-STAT.
       FIN-DET-PRV.
           EXIT.

       DET-WSS-COD-TCON SECTION.
       INI-DET-WSS-COD-TCON.
           IF  UYP-COD-PROC > SPACES
                 MOVE UYP-CON-PROC TO WSS-COD-TCON
           ELSE
             IF  UYP-COD-CMND > SPACES
                  MOVE UYP-CON-CMND TO WSS-COD-TCON
             ELSE
               IF  UYP-COD-NEMO > SPACES
                    MOVE UYP-CON-NEMO TO WSS-COD-TCON
               ELSE
                 IF  UYP-COD-SIST > SPACES
                       MOVE UYP-CON-SIST TO WSS-COD-TCON
                 ELSE
                       MOVE UYP-CON-MALO TO WSS-COD-TCON.
       FIN-DET-WSS-COD-TCON.
           EXIT.

       BUS-PRV-SIST SECTION.
       INI-BUS-PRV-SIST.
           IF ( WSS-PDP-COD-SIST IN WSS-PDP(WSS-I) = '*  ' OR
                WSS-PDP-COD-SIST IN WSS-PDP(WSS-I) =
                UYP-COD-SIST IN UYP-VARI )
                  IF WSS-PDP-COD-NEMO IN WSS-PDP(WSS-I) = '*  ' AND
                     WSS-PDP-COD-CMND IN WSS-PDP(WSS-I) = '*  '
                       MOVE WSS-PDP-IND-RESP IN WSS-PDP(WSS-I) TO
                            UYP-IND-RESP IN UYP-VARI
                       ADD  1 WSS-T      GIVING WSS-I
                  ELSE
                    IF WSS-PDP-IND-RESP IN WSS-PDP(WSS-I) = 'S'
                         MOVE WSS-PDP-IND-RESP IN WSS-PDP(WSS-I) TO
                              UYP-IND-RESP IN UYP-VARI
                         ADD  1 WSS-T      GIVING WSS-I.
       FIN-BUS-PRV-SIST.
           EXIT.

       BUS-PRV-NEMO SECTION.
       INI-BUS-PRV-NEMO.
      *<<<<<< INI R.M.V.
           PERFORM DET-VAR-CMP.
      *>>>>>> FIN R.M.V.     
           IF ( WSS-PDP-COD-SIST IN WSS-PDP(WSS-I) = '*  ' OR
                WSS-PDP-COD-SIST IN WSS-PDP(WSS-I) =
                UYP-COD-SIST IN UYP-VARI )
              AND
              ( WSS-PDP-COD-NEMO IN WSS-PDP(WSS-I) = '*  ' OR
                WSS-PDP-CMP-NEMO = WSS-UYP-CMP-NEMO )
                  IF WSS-PDP-COD-CMND IN WSS-PDP(WSS-I) = '*  '
                       MOVE WSS-PDP-IND-RESP IN WSS-PDP(WSS-I) TO
                            UYP-IND-RESP IN UYP-VARI
                       ADD  1 WSS-T      GIVING WSS-I
                  ELSE
                    IF WSS-PDP-IND-RESP IN WSS-PDP(WSS-I) = 'S'
                         MOVE WSS-PDP-IND-RESP IN WSS-PDP(WSS-I) TO
                              UYP-IND-RESP IN UYP-VARI
                         ADD  1 WSS-T      GIVING WSS-I.
       FIN-BUS-PRV-NEMO.
           EXIT.

       BUS-PRV-CMND SECTION.
       INI-BUS-PRV-CMND.
      *<<<<<< INI R.M.V.
           PERFORM DET-VAR-CMP.
      *>>>>>> FIN R.M.V.
           IF ( WSS-PDP-COD-SIST IN WSS-PDP(WSS-I) = '*  ' OR
                WSS-PDP-COD-SIST IN WSS-PDP(WSS-I) =
                UYP-COD-SIST IN UYP-VARI )
              AND
              ( WSS-PDP-COD-NEMO IN WSS-PDP(WSS-I) = '*  ' OR
                WSS-PDP-CMP-NEMO = WSS-UYP-CMP-NEMO )
              AND
              ( WSS-PDP-COD-CMND IN WSS-PDP(WSS-I) = '*  ' OR
                WSS-PDP-COD-CMND IN WSS-PDP(WSS-I) =
                UYP-COD-CMND IN UYP-VARI )
                  MOVE WSS-PDP-IND-RESP IN WSS-PDP(WSS-I) TO
                       UYP-IND-RESP IN UYP-VARI
                  ADD  1 WSS-T      GIVING WSS-I.
       FIN-BUS-PRV-CMND.
           EXIT.

       BUS-PRV-PROC SECTION.
       INI-BUS-PRV-PROC.
      *<<<<<< INI R.M.V.
           PERFORM DET-VAR-CMP.
      *>>>>>> FIN R.M.V.
           IF ( WSS-PDP-COD-SIST IN WSS-PDP(WSS-I) = '*  ' OR
                WSS-PDP-COD-SIST IN WSS-PDP(WSS-I) =
                UYP-COD-SIST IN UYP-VARI )
              AND
              ( WSS-PDP-COD-NEMO IN WSS-PDP(WSS-I) = '*  ' OR
                WSS-PDP-CMP-NEMO = WSS-UYP-CMP-NEMO )
              AND
              ( WSS-PDP-COD-CMND IN WSS-PDP(WSS-I) = '*  ' OR
                WSS-PDP-COD-CMND IN WSS-PDP(WSS-I) =
                UYP-COD-CMND IN UYP-VARI )
                  MOVE WSS-PDP-IND-RESP IN WSS-PDP(WSS-I) TO
                       UYP-IND-RESP IN UYP-VARI
                  ADD  1 WSS-T      GIVING WSS-I.
       FIN-BUS-PRV-PROC.
           EXIT.

      *>>>>>> R.M.V
       DET-VAR-CMP SECTION.
       INI-DET-VAR-CMP.
           MOVE WSS-PDP-COD-NEMO IN WSS-PDP(WSS-I) TO WSS-PDP-CMP-NEMO.
           MOVE ZEROES  TO WSS-K.
           PERFORM FND-PES-PDP VARYING WSS-J FROM 1 BY 1
                               UNTIL WSS-J > 12.
           ADD  1          WSS-K GIVING WSS-L
           PERFORM CLR-PDP-CMP VARYING WSS-J FROM WSS-L BY 1
                               UNTIL WSS-J > 12.

      *
           MOVE UYP-COD-NEMO TO WSS-UYP-CMP-NEMO.

           PERFORM CLR-UYP-CMP VARYING WSS-J FROM WSS-L BY 1
                               UNTIL WSS-J > 12.
       FIN-DET-VAR-CMP.
           EXIT.

       FND-PES-PDP SECTION.
       INI-FND-PES-PDP.
           IF  WSS-PDP-CMP-NEMO-IDX(WSS-J) NOT = '$'
                 ADD  1   TO WSS-K
           ELSE
                MOVE 99   TO WSS-J.
       FIN-FND-PES-PDP.
           EXIT.

       CLR-PDP-CMP SECTION.
       INI-CLR-PDP-CMP.
           MOVE SPACES    TO WSS-PDP-CMP-NEMO-IDX(WSS-J).
       FIN-CLR-PDP-CMP.
           EXIT.

       CLR-UYP-CMP SECTION.
       INI-CLR-UYP-CMP.
           MOVE SPACES    TO WSS-UYP-CMP-NEMO-IDX(WSS-J).
       FIN-CLR-UYP-CMP.
           EXIT.
      *<<<<<< FIN R.M.V.

       COPY GNSBGQUE.
       COPY GNSBGSYS.

       PRG-ABT SECTION.
       INI-PRG-ABT.
       FIN-PRG-ABT.
           EXIT.
