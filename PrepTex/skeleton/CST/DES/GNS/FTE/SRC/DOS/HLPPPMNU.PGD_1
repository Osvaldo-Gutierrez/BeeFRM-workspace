       IDENTIFICATION DIVISION.
      *========================
       PROGRAM-ID. HLPPPMNU.
       AUTHOR. CST.
       DATE-WRITTEN.  29-MAR-1993.

      * PROCESADOR DE AYUDA PARA ARCHIVO MNU

       ENVIRONMENT DIVISION.
      *=====================
       CONFIGURATION SECTION.
       SPECIAL-NAMES.
                     DECIMAL-POINT IS COMMA.

       DATA DIVISION.
      *==============

       WORKING-STORAGE SECTION.
      *------------------------
       COPY GNSWGCBG.
       COPY GNSBRTAB.
       COPY GNSBRMNU.
       COPY GNSWCFIO.
       COPY GNSWVFIO.
       COPY GNSWGFRM.
       COPY GNSWGSYS.
       COPY GNSWGQUE.
       COPY GNSWVSCR.
       COPY GNSWCSCR.
       01  WSS-SCR-VARI-V20.
           03  WSS-SCR-TCMA-V20     COMP         PIC S9(04).
           03  WSS-SCR-SIST-V20                  PIC  X(03).
           03  WSS-SCR-FUNC-V20                  PIC  X(08).
           03  WSS-SCR-NEMO-V20                  PIC  X(12).
           03  WSS-SCR-RFBY-V20                  PIC  X(01).
           03  WSS-SCR-NTRV-V20                  PIC  X(04).
           03  FILLER                            PIC  X(01).
           03  WSS-SCR-NTRN-V20                  PIC  X(04).
           
       01  WSS-SCR-VARI-V31.
           03  WSS-SCR-TCMA-V31     COMP         PIC S9(04).
           03  WSS-SCR-SIST-V31                  PIC  X(03).
           03  WSS-SCR-SISG-V31                  PIC  X(03).
           03  WSS-SCR-NTRN-V31                  PIC  X(04).
           
       01  WSS-VARI.
           03  WSS-GLS-FMEN                      PIC X(30).
           03  RET-CODI         PIC X(2).
           03  WSS-FHOY.
               05  WSS-DHOY                      PIC 9(02).
               05  FILLER   VALUE '/'            PIC X(01).
               05  WSS-MHOY                      PIC 9(02).
               05  FILLER   VALUE '/'            PIC X(01).
               05  WSS-SHOY                      PIC 9(02).
               05  WSS-AHOY                      PIC 9(02).

      *       Tamano del mapa
           03 WSS-TFLD  COMP      VALUE +0             PIC S9(04).
      *       Posicion del cursor
           03 WSS-PCUR  COMP      VALUE +0             PIC S9(04).
      *       Mapa
           03 WSS-DFRM                                 PIC X(3000).
      *       Common Area auxiliar
           03 WSS-CMMA                                 PIC X(3500).
      *JSS-IBM VARIABLE COMPARACION SOLO CODIGOS VIGENTES
           03 WSS-COD-TAB-OLD  VALUE SPACES            PIC X(3).
       01  CMAREA.
           02 CM-STAT          PIC X(1).
           02 CM-TABLA-CLAVES.
              03 CLAVE         OCCURS 30 PIC X(15).
           02 CM-ARCH.
              03 CM-FILL       PIC X(5).
              03 CM-DBDC       PIC X(3).
           02 CM-POS           PIC 9(4).
           02 CM-CLAVE.
              03 CM-TABL       PIC X(3).
              03 CM-CLAV       PIC X(12).
           02 TOPC             PIC 99.
           02 TCLA             PIC 99.
           02 TPRE             PIC 99.
           02 SWINI            PIC 9.
           02 CM-DISP          PIC X(4).
      *              ---------->>> 491
       01  WSS-STAT            PIC X(01).
           88 WSS-STAT-OKS    VALUE ' '.
       01  WSS-PUT-STAT.
           03 WSS-PUT-STAT-OKS    PIC X(01) VALUE ' '.
           03 WSS-PUT-STAT-BAD    PIC X(01) VALUE '*'.
       01  WS-TRAC.
           02 TRAC1  PIC X(5) VALUE '====>'.
           02 TRAC2  PIC X(3).

       01  LLAVE               VALUE SPACES.
           02 TABL               PIC X(3).
           02 LLAV               PIC X(12).
       01  L-HLP-COMM       PIC S9(4) COMP VALUE +27.
       01  HLP-COMM.
           02 HLP-VAR.
              03 HLP-POSI-TR      PIC 9(4).
              03 HLP-ARCH-TR.
                 04 FILLER        PIC X(5).
                 04 HLP-DBDC-ID   PIC X(3).
              03 HLP-TABL-TR      PIC X(3).
              03 HLP-CLAV-TR      PIC X(12).
      *01  R-FLD                  PIC X(2132).
      * COPY DFHBMSCA.
       01  BCRM05AI.
           02  FILLER PIC X(12).

      *     02  OPIDL    COMP  PIC  S9(4).
      *     02  OPIDF    PICTURE X.
      *     02  FILLER REDEFINES OPIDF.
      *       03 OPIDA    PICTURE X.
      *     02  OPIDI  PIC X(3).

           02  SISTEL    COMP  PIC  S9(4).
           02  SISTEF    PICTURE X.
           02  FILLER REDEFINES SISTEF.
             03 SISTEA    PICTURE X.
           02  SISTEI  PIC X(03).

      *     02  COTABL    COMP  PIC  S9(4).
      *     02  COTABF    PICTURE X.
      *     02  FILLER REDEFINES COTABF.
      *       03 COTABA    PICTURE X.
      *     02  COTABI  PIC X(04).

           02  TABHLL    COMP  PIC  S9(4).
           02  TABHLF    PICTURE X.
           02  FILLER REDEFINES TABHLF.
             03 TABHLA    PICTURE X.
           02  TABHLI  PIC X(30).

           02  FECHAL    COMP  PIC  S9(4).
           02  FECHAF    PICTURE X.
           02  FILLER REDEFINES FECHAF.
               03 FECHAA    PICTURE X.
           02  FECHAI  PIC X(10).

      *           02  HORAL    COMP  PIC  S9(4).
      *     02  HORAF    PICTURE X.
      *     02  FILLER REDEFINES HORAF.
      *       03 HORAA    PICTURE X.
      *     02  HORAI  PIC X(8).

           02 TABLA-MAPA OCCURS 19.
      * CODIGO
              03 COML COMP PIC S9(4).
              03 COMA PIC X.
              03 COMI PIC X(15).

      * OPCION
              03 OPCL COMP PIC S9(4).
              03 OPCA PIC X.
              03 OPCI PIC X(03).

      * MENU
              03 MENL COMP PIC S9(4).
              03 MENA PIC X.
              03 MENI PIC X(06).

      * TIPO FUNCION
              03 TFNL COMP PIC S9(4).
              03 TFNA PIC X.
              03 TFNI PIC X(03).

      * GLOSA MENU
              03 GLML COMP PIC S9(4).
              03 GLMA PIC X.
              03 GLMI PIC X(30).

           02  MSGL    COMP  PIC  S9(4).
           02  MSGF    PICTURE X.
           02  FILLER REDEFINES MSGF.
             03 MSGA    PICTURE X.
           02  MSGI.
               03 FILLER PIC X(50).
               03 SOURX  PIC X(20).

       01  VARIABLES.
           02 L-CMAREA         PIC S9(4) COMP VALUE +491.
           02 LENG             PIC S9(4) COMP VALUE +158.
           02 LMEN             PIC S9(4) COMP VALUE +40.
           02 L-FLD            PIC S9(4) COMP VALUE +2132.
           02 SWEXIS           PIC 9.
           02 SWMOV            PIC 9.
           02 EOF              PIC 9.
           02 I                PIC 99.
           02 J                PIC 99.
           02 SWRET            PIC 9.
           02 HORA             PIC 9(7).
           02 HORA-RED         REDEFINES HORA.
              03 FILLER        PIC X.
              03 HH            PIC 99.
              03 MM            PIC 99.
              03 SS            PIC 99.
           02 HORA-ED.
              03 HH-M          PIC 99.
              03 FILLER        PIC X VALUE ':'.
              03 MM-M          PIC 99.
              03 FILLER        PIC X VALUE ':'.
              03 SS-M          PIC 99.
           02 WS-LLAVE         PIC X(15).

           02 WS-CODIGO.
              03 FILLER        PIC X(4).
              03 WS-COD        PIC X(8).
           02 FILLER           PIC X(6) VALUE 'WS-COD'.
           02 WS-COD-R         PIC X(15).
      *    02 NUM-BASE         PIC S9(4) COMP.
      *ISP 11-07-90
           02 NUM-BASE         PIC X(03).
           02 NOM-REGI         PIC X(7).
           02 FILLER           PIC X(25).
           02 MAX-CONT         PIC S9(4) COMP.
           02 NOM-CONT         PIC S9(4) COMP.
           02 FILLER           PIC X(22).
           02 VAL-CLAV         PIC X(15).

      * VARIABLES MANEJO DE MAPA Y TRANSACCIONES
      * ----------------------------------------
       01  HLP-FRM-VARI.
      * VERSION GNS
      *    02 FRMAMAP          PIC X(07) VALUE 'GNSAHDT'.
      *    02 FRMFMAP          PIC X(07) VALUE 'GNSFHDT'.
      *    02 FRMTRAN           PIC X(04) VALUE 'GS62'.
      * VERSION HLP
           02 FRMAMAP          PIC X(07) VALUE 'HLPAMNU'.
           02 FRMFMAP          PIC X(07) VALUE 'HLPFMNU'.
           02 FRMTRAN           PIC X(04) VALUE 'HLMN'.
      * 01  BLLCELLS.
      *     02 FILLER           PIC S9(8) COMP.
      *     02 FIO-PNT0         PIC S9(8) COMP.
      *ISP REGISTRO TAB ORIGINALMENTE NO VIA COPY, SE MANTIENE ESTA
      *    ESTRUCTURA HASTA DEJARLO COMPATIBLE LEYENDO EN TAB Y MOVIENDO
      *    A LNK-TAB LO QUE CORRESPONDE
       01  LINK-TAB.
           03 LNK-LLAVE.
              04 LNK-TAB                   PIC X(03).
              04 LNK-COD                   PIC X(12).
           03 LNK-LLAVE-R   REDEFINES LNK-LLAVE.
              04 LNK-COD-R                 PIC X(07).
              04 FILLER                    PIC X(08).
       LINKAGE SECTION.
      *----------------
       01  DFHCOMMAREA.
      *    02 FILER1           PIC X(1396).
           02 FILER1           PIC X(0277).
           02 FILER2           PIC X(0213).
       COPY GNSLGFIO.
       PROCEDURE DIVISION.
      *===================
           PERFORM GNS-HDL-VSM.
           EXEC CICS HANDLE CONDITION
                 NOTOPEN(REQ-INVALIDO)
                 NOTFND(NO-ENCONTRADO)
                 ENDFILE(FIN-ARCHIVO)
                 INVREQ(REQ-INVALIDO)
                 NOSPACE(NO-ESPACIO)
                 LENGERR(LENG-ERR)
           END-EXEC.
           MOVE DFHCOMMAREA    TO CMAREA.

           IF EIBCALEN NOT = L-CMAREA
                PERFORM PRIMERA-VEZ THRU LENG-ERR.

           MOVE CM-STAT TO WSS-STAT.
           IF NOT WSS-STAT-OKS
               PERFORM RET-FPEN.

           MOVE CM-DBDC        TO NUM-BASE.

           EXEC CICS HANDLE AID
                 CLEAR(TERMINAR)
           END-EXEC.

           GO TO RECIBIR.
       PRIMERA-VEZ.
      *------------
           MOVE DFHCOMMAREA    TO CMA-ARG.
           MOVE CMA-ARG-SIST   TO CM-DBDC.

           MOVE WSS-PUT-STAT-OKS TO CM-STAT.
           MOVE FILER1         TO HLP-COMM.
           MOVE HLP-POSI-TR    TO CM-POS.
           MOVE HLP-TABL-TR    TO TABL CM-TABL.
           MOVE HLP-CLAV-TR    TO LLAV CM-CLAV.
           MOVE TABL   TO TAB-COD-TTAB IN TAB.
           MOVE SPACES TO TAB-COD-CTAB IN TAB.

      *    MOVE HLP-ARCH-TR    TO CM-ARCH WS-TRAC.
      *     MOVE HLP-ARCH-TR    TO CM-ARCH.
           MOVE CM-CLAVE       TO WS-COD-R.
           MOVE CM-DBDC        TO NUM-BASE.
           MOVE 'Archivo MNU sin registro SIS' TO WSS-GLS-FMEN.
           MOVE 'SIS' TO MNU-COD-NEMO IN MNU.
           MOVE FIO-GET-KEY TO FIO-CMND.
           MOVE CM-DBDC  TO FIO-SIST.
           PERFORM GNS-FIO-MNU.
           IF FIO-STAT-OKS
               MOVE MNU-GLS-FMEN TO WSS-GLS-FMEN.
      *    ADD  L-FLD          TO L-TSQ.
       LENG-ERR.
      *---------
           MOVE LOW-VALUES     TO BCRM05AI
           MOVE SYS-GET-DATE TO SYS-CMND.
           PERFORM GNS-PRO-SYS.
           MOVE SYS-DHOY       TO WSS-DHOY.
           MOVE SYS-MHOY       TO WSS-MHOY.
           MOVE SYS-SHOY       TO WSS-SHOY.
           MOVE SYS-AHOY       TO WSS-AHOY.

           MOVE WSS-FHOY       TO FECHAI.
      *     MOVE EIBTIME        TO HORA.
      *     MOVE HH             TO HH-M.
      *     MOVE MM             TO MM-M.
      *     MOVE SS             TO SS-M.
      *           MOVE HORA-ED        TO HORAI.
           MOVE 0              TO SWINI.
           PERFORM FIND-USPMUSR.
           IF SWEXIS = 0
                MOVE 'NO EXISTE TABLA ( PF3 PARA RETORNAR )'
                             TO MSGI
                MOVE WSS-PUT-STAT-BAD TO CM-STAT
                MOVE CM-TABL TO SOURX
                PERFORM ENVIAR-MAPA-COMPLETO
                PERFORM AUTO-INVOC.

      *ISP TITULA SISTEMA, TABLA , DESCRIPCION REG PADRE
           MOVE CM-DBDC      TO SISTEI.
           MOVE WSS-GLS-FMEN TO TABHLI.

           MOVE SPACES TO RET-CODI.
           PERFORM LEER-USPMUSR THRU F-LEER
           IF SWINI = 0
                MOVE 1 TO SWINI
                IF CM-TABL NOT = LNK-TAB
                     MOVE 'Tabla Sin Registros ( PF3 Para Retornar )'
                                                  TO MSGI
                     MOVE WSS-PUT-STAT-BAD TO CM-STAT
                     MOVE CM-TABL TO SOURX
                     PERFORM ENVIAR-MAPA-COMPLETO
                     PERFORM AUTO-INVOC.

           MOVE 0              TO EOF SWMOV.
      *JSS-IBM MOVE 1              TO I.
           MOVE 1              TO I.
           MOVE MNU-COD-NEMO IN MNU TO COMI(1).
           MOVE MNU-COD-OPCI IN MNU TO OPCI(1).
           MOVE MNU-COD-IMEN IN MNU TO MENI(1).
           MOVE MNU-COD-TFUN IN MNU TO TFNI(1).
           MOVE MNU-GLS-FMEN IN MNU TO GLMI(1).
           MOVE LNK-LLAVE TO CLAVE(1).
      *JSS-IBM
           MOVE CM-TABL TO WSS-COD-TAB-OLD.
           PERFORM LEER-USPMUSR THRU F-LEER
           MOVE SPACES  TO WSS-COD-TAB-OLD.
           PERFORM RECUPERAR-OPCIONES
           IF SWRET = 1        MOVE 'Fin De Paginas' TO MSGI
                               MOVE 1         TO TCLA TPRE
           ELSE                MOVE ' '
                                                             TO MSGI
                               MOVE 2         TO TCLA
                               MOVE 1         TO TPRE
                               MOVE WS-LLAVE TO CLAVE (2).
      *                        MOVE LNK-LLAVE TO CLAVE (2).
      *                        MOVE CM-CLAVE  TO CLAVE (1).
           PERFORM ENVIAR-MAPA-COMPLETO
           PERFORM AUTO-INVOC.
       ENVIAR-MAPA-COMPLETO.
      *---------------------
           EXEC CICS SEND MAP(FRMFMAP)
                               MAPSET(FRMAMAP)
                               FROM(BCRM05AI)
                               ERASE
           END-EXEC.
       ENVIAR-MAPA-DATOS.
      *------------------
           EXEC CICS SEND      MAP(FRMFMAP)
                               MAPSET(FRMAMAP)
                               FROM(BCRM05AI)
                               DATAONLY
           END-EXEC.
       AUTO-INVOC.
      *-----------
           EXEC CICS RETURN    TRANSID(FRMTRAN)
                               COMMAREA(CMAREA)
                               LENGTH(L-CMAREA)
           END-EXEC.
       RECIBIR-MAPA.
      *-------------
           EXEC CICS RECEIVE   MAP(FRMFMAP) MAPSET(FRMAMAP)
                               INTO(BCRM05AI)
           END-EXEC.
       RECUPERAR-OPCIONES.
      *-------------------
           PERFORM PROCESAR-OPCIONES UNTIL EOF = 1 OR
                                           I = 19 OR
                                           CM-TABL NOT = LNK-TAB.
           IF (EOF = 1) OR (CM-TABL NOT = LNK-TAB)
                               MOVE 1 TO SWRET
           ELSE                MOVE LNK-LLAVE TO WS-LLAVE
      *                        PERFORM LEER-USPMUSR THRU F-LEER
                           IF EOF = 1
                               MOVE 1 TO SWRET
                           ELSE
      *                      IF LLAVE = LNK-LLAVE
                             IF CM-TABL = LNK-TAB
                               MOVE 2 TO SWRET
                             ELSE
                               MOVE 1 TO SWRET.
           IF I = 19    MOVE 20 TO TOPC
           ELSE         ADD 1 I GIVING TOPC
                        PERFORM LIMPIAR VARYING J FROM TOPC BY 1
                                               UNTIL J > 19.
           PERFORM FINBR-USPMUSR.

       FIND-USPMUSR.
      *-------------
           MOVE 1              TO SWEXIS.
           MOVE SPACES TO RET-CODI.
      *ISP
           IF CM-DBDC IS NUMERIC
                PERFORM SET-NUM-IDD
                MOVE '***'    TO FIO-SIST
           ELSE
                MOVE CM-DBDC  TO FIO-SIST.

           MOVE FIO-FND-NLS TO FIO-CMND.
      * ISP: MNU
           MOVE TAB-COD-CTAB IN TAB TO MNU-COD-NEMO IN MNU.
           PERFORM GNS-FIO-MNU.
      * ISP: MNU
      *     IF FIO-STAT-OKS
      *          MOVE MNU-COD-NEMO IN MNU TO TAB-COD-CTAB IN TAB
      *          MOVE MNU-GLS-FMEN IN MNU TO TAB-GLS-DESC IN TAB.
      *     IF RET-CODI NOT = SPACES
            IF NOT FIO-STAT-OKS
                     MOVE 0 TO SWEXIS.
       PROCESAR-OPCIONES.
      *------------------
      *JSS-IBM
           ADD 1               TO I.
      *     MOVE DFHBMASF       TO COMA (I) GLMA (I) OPCA(I).
           IF CM-CLAV = SPACES
                MOVE LNK-COD        TO COMI (I)
           ELSE
                MOVE LNK-COD        TO WS-CODIGO
                MOVE WS-COD         TO COMI (I).

           MOVE MNU-COD-NEMO IN MNU TO COMI(I).
           MOVE MNU-COD-OPCI IN MNU TO OPCI(I).
           MOVE MNU-COD-IMEN IN MNU TO MENI(I).
           MOVE MNU-COD-TFUN IN MNU TO TFNI(I).
           MOVE MNU-GLS-FMEN IN MNU TO GLMI(I).
      *JSS-IBM
      *    ADD 1               TO I
      *JSS-IBM
           MOVE CM-TABL TO WSS-COD-TAB-OLD.
           PERFORM LEER-USPMUSR THRU F-LEER.
           MOVE SPACES  TO WSS-COD-TAB-OLD.
           MOVE LNK-COD-R      TO WS-COD-R.
           IF NOT FIO-STAT-OKS
                  MOVE 1 TO EOF.

       LIMPIAR.
      *--------
      *     MOVE DFHBMDAR       TO COMA (J) GLMA (J) OPCA (J).
           MOVE SPACES TO COMI(J) OPCI(J) MENI(J) TFNI(J) GLMI(J).
 
       START-USPMUSR.
      *--------------
           MOVE 1              TO SWEXIS
           MOVE SPACES TO RET-CODI.
      *ISP
           IF CM-DBDC IS NUMERIC
                PERFORM SET-NUM-IDD
                MOVE '***'    TO FIO-SIST
           ELSE
                MOVE CM-DBDC  TO FIO-SIST.

           MOVE FIO-GET-NLS TO FIO-CMND.
      * ISP: MNU
           MOVE TAB-COD-CTAB IN TAB TO MNU-COD-NEMO IN MNU.
           PERFORM GNS-FIO-MNU.
      * ISP: MNU
           IF FIO-STAT-OKS
                MOVE MNU-COD-NEMO IN MNU TO TAB-COD-CTAB IN TAB
                MOVE MNU-GLS-FMEN IN MNU TO TAB-GLS-DESC IN TAB.
      *     IF RET-CODI NOT = SPACES
            IF NOT FIO-STAT-OKS
                     MOVE 0 TO SWEXIS.
       F-STAR.
      *-------
       LEER-USPMUSR.
      *-------------
      *ISP
       CIC-LEER-USPMUSR.

      *ISP
           IF CM-DBDC IS NUMERIC
                PERFORM SET-NUM-IDD
                MOVE '***'    TO FIO-SIST
           ELSE
                MOVE CM-DBDC  TO FIO-SIST.
           MOVE FIO-GET-NXT TO FIO-CMND.
      * ISP: MNU
           MOVE TAB-COD-CTAB IN TAB TO MNU-COD-NEMO IN MNU.
           PERFORM GNS-FIO-MNU.
      * ISP: MNU
           IF FIO-STAT-OKS
                MOVE MNU-COD-NEMO IN MNU TO TAB-COD-CTAB IN TAB
                MOVE MNU-GLS-FMEN IN MNU TO TAB-GLS-DESC IN TAB.
           IF FIO-STAT-OKS
               MOVE SPACES TO RET-CODI
           ELSE
               MOVE FIO-STAT TO RET-CODI.
           MOVE TAB-COD-TABL TO LINK-TAB.
      *JSS-IBM
      *     IF RET-CODI = SPACES
      *         IF WSS-COD-TAB-OLD > SPACES
      *             IF WSS-COD-TAB-OLD = LNK-TAB
      *                 IF TAB-IND-VIGE = 'N'
      *                     GO TO CIC-LEER-USPMUSR.

           IF RET-CODI NOT = SPACES
                               MOVE 1 TO EOF.
       F-LEER.
      *-------
       FINBR-USPMUSR.
      *--------------
      *ISP
       F-FINB.
      *-------
       RECIBIR.
      *--------
           PERFORM RECIBIR-MAPA.
      *ISP: PF12
      *     IF EIBAID = '@' OR '<'
      *          PERFORM GNS-RET-MEN
      *     ELSE
            IF EIBAID = '3' OR 'C'     PERFORM TERMINAR
           ELSE
             IF EIBAID = '7' OR 'G'   PERFORM PAGINA-ANTERIOR
             ELSE
              IF EIBAID = '8' OR 'H'  PERFORM PAGINA-SIGUIENTE.
           PERFORM ENVIAR-MAPA-DATOS THRU AUTO-INVOC.
       PAGINA-ANTERIOR.
      *----------------
           IF TPRE = 1
                MOVE 'No Existen Paginas Anteriores' TO MSGI
           ELSE
                COMPUTE TPRE = TPRE - 1
                MOVE ' ' TO MSGI
                MOVE CLAVE(TPRE) TO LLAVE
                MOVE LLAVE TO TAB-COD-TABL
                PERFORM START-USPMUSR THRU F-STAR
                MOVE MNU-COD-NEMO IN MNU TO COMI(1)
                MOVE MNU-COD-OPCI IN MNU TO OPCI(1)
                MOVE MNU-COD-IMEN IN MNU TO MENI(1)
                MOVE MNU-COD-TFUN IN MNU TO TFNI(1)
                MOVE MNU-GLS-FMEN IN MNU TO GLMI(1)
                MOVE 1 TO I
                PERFORM LEER-USPMUSR THRU F-LEER
                MOVE 1 TO SWEXIS
                MOVE 0 TO SWINI
                MOVE 0 TO SWMOV EOF
                PERFORM RECUPERAR-OPCIONES.

       PAGINA-SIGUIENTE.
      *-----------------
           IF TPRE = TCLA
               MOVE 'No Existen Paginas Siguientes' TO MSGI
           ELSE
               COMPUTE TPRE = TPRE + 1
               MOVE CLAVE(TPRE) TO LLAVE
               MOVE LLAVE TO TAB-COD-TABL
               PERFORM START-USPMUSR THRU F-STAR
               MOVE MNU-COD-NEMO IN MNU TO COMI(1)
               MOVE MNU-COD-OPCI IN MNU TO OPCI(1)
               MOVE MNU-COD-IMEN IN MNU TO MENI(1)
               MOVE MNU-COD-TFUN IN MNU TO TFNI(1)
               MOVE MNU-GLS-FMEN IN MNU TO GLMI(1)

               MOVE 1 TO I
               PERFORM LEER-USPMUSR THRU F-LEER
               MOVE 1 TO SWEXIS
               MOVE 0 TO SWINI
               MOVE 0 TO SWMOV EOF
               PERFORM RECUPERAR-OPCIONES
               IF (SWRET = 2) AND (TPRE NOT < TCLA)
                    COMPUTE TCLA = TCLA + 1
                    IF TCLA > 30
                        MOVE 'PF3: FIN  OVERFLOW COMMAREA' TO MSGI
                        PERFORM CANCELAR
                    ELSE
                        MOVE ' ' TO MSGI
                        MOVE WS-LLAVE TO CLAVE(TCLA)
                ELSE
                    MOVE ' ' TO MSGI.

       GNS-RET-MEN.
      *------------
           MOVE CM-POS  TO HLP-POSI-TR.
           MOVE CM-DBDC TO HLP-DBDC-ID.
           MOVE CM-TABL TO HLP-TABL-TR.
           MOVE CM-CLAV TO HLP-CLAV-TR.
           EXEC CICS XCTL
                 PROGRAM('HLPPAG03')
                 COMMAREA(HLP-COMM)
                 LENGTH(L-HLP-COMM)
           END-EXEC.
       REQ-INVALIDO.
      *-------------
           MOVE 'PF3: FIN  REQUERIMIENTO INVALIDO'
                               TO MSGI.
           MOVE EIBRSRCE       TO SOURX
           GO TO CANCELAR.
       NO-ESPACIO.
      *-----------
           MOVE 'PF3: FIN  FACILIDAD OCUPADA'
                               TO MSGI.
           MOVE EIBRSRCE       TO SOURX
           GO TO CANCELAR.
       LG-CON.
      *-------
           MOVE 'ERROR LARGO PARAMETROS'
                               TO MSGI.
           GO TO TERMINAR.
       FIN-ARCHIVO.
      *ISP
      *------------
           MOVE '23' TO RET-CODI
           MOVE 1              TO EOF
           GO TO F-LEER.
       NO-ENCONTRADO.
      *--------------
           MOVE 0              TO SWEXIS.
           MOVE '23' TO RET-CODI.
           GO TO F-STAR.
       NO-ABIERTO.
      *-----------
           MOVE 'PF3: FIN  ARCHIVO CERRADO'
                               TO MSGI.
           MOVE EIBRSRCE       TO SOURX
           GO TO CANCELAR.
       CANCELAR.
      *---------
           PERFORM ENVIAR-MAPA-DATOS THRU AUTO-INVOC.
       TERMINAR.
      *---------
           PERFORM RET-FPEN.
       FIN-TERMINAR.

       RET-FPEN SECTION.
       INI-RET-FPEN.
           PERFORM GNS-ERR-QUE.
           MOVE EIBTRMID TO QUE-TERM.
           MOVE 'HLP'    TO QUE-TYPE.
           MOVE 1        TO QUE-NITM.
           MOVE +9999    TO QUE-LITM.
           MOVE QUE-GET  TO QUE-CMND.
           PERFORM GNS-PRO-QUE.
           IF QUE-STAT NOT = QUE-STAT-OKS
               GO TO FIN-RET-FPEN.
      *Ya leyo primer registro de la cola para detectar si esta existia
           IF QUE-IKEY NOT = 'MAP'
               GO TO FIN-RET-FPEN.
           MOVE QUE-DATA TO WSS-DFRM.
           MOVE QUE-LDAT TO WSS-TFLD.
           MOVE QUE-PCUR TO WSS-PCUR.
           MOVE 2        TO QUE-NITM.
           MOVE +9999    TO QUE-LITM.
           MOVE EIBTRMID TO QUE-TERM.
           MOVE 'HLP'    TO QUE-TYPE.
           MOVE QUE-GET  TO QUE-CMND.
           PERFORM GNS-PRO-QUE.
           IF QUE-STAT NOT = QUE-STAT-OKS
               GO TO FIN-RET-FPEN.

           IF NOT ( QUE-IKEY = 'CM2' OR 'CM3' )
               GO TO FIN-RET-FPEN.
           MOVE QUE-LDAT TO SCR-TCMA.
           MOVE QUE-DATA TO WSS-CMMA.

           IF QUE-IKEY = 'CM2'
               MOVE QUE-DATA TO WSS-SCR-VARI-V20
               MOVE WSS-SCR-NTRN-V20 TO SCR-NTRN.

           IF QUE-IKEY = 'CM3'
               MOVE QUE-DATA TO WSS-SCR-VARI-V31
               MOVE WSS-SCR-NTRN-V31 TO SCR-NTRN.

      *    MOVE 3        TO QUE-NITM.
      *    MOVE +9999    TO QUE-LITM.
      *    MOVE EIBTRMID TO QUE-TERM.
      *    MOVE 'HLP'    TO QUE-TYPE.
      *    MOVE QUE-GET  TO QUE-CMND.
      *    PERFORM GNS-PRO-QUE.
      *    IF QUE-STAT = QUE-STAT-OKS
      *        PERFORM MOD-TSC.
           MOVE EIBTRMID TO QUE-TERM.
           MOVE 'HLP'    TO QUE-TYPE.
           MOVE QUE-DEL  TO QUE-CMND.
           PERFORM GNS-PRO-QUE.
           EXEC CICS SEND FROM(WSS-DFRM)
                          LENGTH(WSS-TFLD)
                          ERASE
           END-EXEC.
           EXEC CICS SEND CONTROL CURSOR(WSS-PCUR)
                          TERMINAL
           END-EXEC.
           PERFORM SCR-EXIT.
       FIN-RET-FPEN.
           EXIT.

       SCR-EXIT SECTION.
       INI-SCR-EXIT.
           EXEC CICS RETURN
                     TRANSID(SCR-NTRN)
                     COMMAREA(WSS-CMMA)
                     LENGTH(SCR-TCMA)
           END-EXEC.
       COPY GNSBGGBK.
       FIN-SCR-EXIT.
           EXIT.

      * ACC-FILE SECTION.
      * INI-ACC-FILE.
      *     IF CM-TABL = 'MNU'
      *         MOVE TAB-COD-CTAB IN TAB TO MNU-COD-NEMO IN MNU
      *         PERFORM GNS-FIO-MNU
      *         IF FIO-STAT-OKS
      *             MOVE MNU-COD-NEMO IN MNU TO TAB-COD-CTAB IN TAB
      *             MOVE MNU-GLS-FMEN IN MNU TO TAB-GLS-DESC IN TAB
      *             MOVE SPACES TO TAB-IND-VIGE IN TAB
      *         ELSE
      *             NEXT SENTENCE
      *     ELSE
      *         PERFORM GNS-FIO-TAB.
      *FIN-ACC-FILE.
      *     EXIT.

       SET-NUM-IDD SECTION.
       INI-SET-NUM-IDD.
      * ISP: SI EN HLPMPOS EXISTE UN NUMERO SE DEJA UNA IDD PARA EL
      *      SISTEMA '***' CON NUMERO DE BASE DE DATOS DE HLPMPOS
      *
       FIN-SET-NUM-IDD.
           EXIT.

       COPY GNSBGVSM.
       COPY GNSBHVSM.
       COPY GNSBGFRM.
       COPY GNSBGQUE.
       COPY GNSBGSYS.
       COPY GNSBFMNU.
       COPY GNSBIABT.
