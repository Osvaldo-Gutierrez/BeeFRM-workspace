//ISILVA  JOB ,,CLASS=A,MSGCLASS=X,USER=ISILVA,PASSWORD=SLVAGO,
//            REGION=4M
/*ROUTE PRINT MVS
//STEP1  EXEC PGM=AFOLIBR
//STEPLIB  DD DSN=ADR.LIB.V38.LOAD,DISP=SHR
//MASTER   DD DSN=GNSCL.FUENTES,DISP=SHR
//OSJOB    DD DUMMY
//SYSPRINT DD SYSOUT=X
//SYSIN    DD *
-ADD GNSPPPF4,PSWD=CONS,ARC
     DUMMY
-EMOD
-SEL GNSPPPF4,CONS
-REP ALL
       IDENTIFICATION DIVISION.
      *========================
       PROGRAM-ID. GNSPPPF4.
       AUTHOR. CONSIST.
       DATE-WRITTEN.     29-AUG-1991.

      * ZOOM - COMPATIBLE VERSIONES 2.0 - 3.0

       ENVIRONMENT DIVISION.
      *=====================
       DATA DIVISION.
      *==============

       WORKING-STORAGE SECTION.
      *------------------------
       01  WSS-DFLD.
           03 WSS-DFLD-CHR    OCCURS 3000        PIC X(01).
       COPY GNSBRMNU.
       COPY GNSWGSYS.
       COPY GNSWGTSC.
       COPY GNSWGSCR.
      *
       COPY GNSWCFIO.
       COPY GNSWVFIO.
      *
       COPY GNSWGUIB.
       COPY GNSWGELS.
       COPY GNSWGRQA.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-TAB-REQA==.
       COPY GNSBRTAB.
       COPY GNSBRIDD.
       01  IFD.
           03 FILLER                            PIC X(01).
           03 IFD-COD-CIFD                      PIC X(12).
           03 IFD-GLS-VSIS OCCURS 30.
              05 IFD-COD-DSIS                   PIC X(04).
              05 IFD-COD-GSIS                   PIC X(03).
           03 FILLER                            PIC X(18).
      *
       COPY GNSWGFRM.
       COPY GNSWGQUE.
      * VARIABLES A TRANSFERIR A COMMAND.
       COPY GNSWGECC.
      *
       01  WSS-VARI.
           03 WSS-TFLD  COMP      VALUE +0             PIC S9(04).
           03 WSS-PCUR  COMP      VALUE +0             PIC S9(04).
           03 WSS-PMSG  COMP      VALUE +1880          PIC S9(04).
           03 WSS-TCMA  COMP      VALUE +0             PIC S9(04).
           03 WSS-CMMA                                 PIC X(3500).

           03 WSS-I             VALUE 0                PIC 9(04).
           03 WSS-J             VALUE 0                PIC 9(04).
           03 WSS-K             VALUE 0                PIC 9(04).
           03 WSS-THDR          VALUE 168              PIC 9(04).
           03 WSS-IFLD          VALUE 1                PIC 9(04).
           03 WSS-NITM          VALUE 1                PIC 9(03).
       01  WSS-TAB.
           03 WSS-TAB-GLS-DESC                         PIC X(40).
           03 WSS-TAB-GLS-DATA                         PIC X(60).
       01  WSS-TAB-RED         REDEFINES WSS-TAB.
           03 WSS-TAB-TKYM OCCURS 11 TIMES.
              05 WSS-TKEY                              PIC X(03).
              05 WSS-PKEY                              PIC 9(04).
              05 WSS-LKEY                              PIC 9(02).
           03 FILLER                                   PIC X(01).

       01  WSS-QFLD.
           03 WSS-TKEY-Q                               PIC X(03).
           03 WSS-QFLD-CHR    OCCURS 100               PIC X(01).

       01  WSS-ZOOM.
           03 WSS-FRM-ZOOM                             PIC X(07).
           03 WSS-PCUR-ZOOM                            PIC 9(04).
           03 FILLER          VALUE SPACES             PIC X(01).
           03 WSS-PROG                                 PIC X(08).
           03 WSS-CMP-ZOOM                             PIC X(07).
           03 WSS-FCUR-ZOOM                            PIC 9(04).
           03 WSS-CMN-NEMO-CMP.
              05 WSS-CMN-NEMO-CMP-1                    PIC X(06).
              05 WSS-CMN-NEMO-CMP-2.
                 07 WSS-CMN-NEMO-CMP-2-CHR   OCCURS 6  PIC X(01).
           03 WSS-TAB-TKYM-CMP.
              05 WSS-TKEY-CMP                          PIC X(03).
              05 WSS-PKEY-CMP                          PIC 9(04).
              05 WSS-LKEY-CMP                          PIC 9(02).
           03 WSS-I-CMP         VALUE 0                PIC 9(04).
           03 WSS-J-CMP         VALUE 0                PIC 9(04).
           03 WSS-K-CMP         VALUE 0                PIC 9(04).
           03 WSS-THDR-CMP      VALUE 168              PIC 9(04).

       LINKAGE SECTION.
      *----------------
       01  DFHCOMMAREA.
           02 FILLER                             PIC X(3500).
       COPY GNSLGFIO.

       PROCEDURE DIVISION.
      *===================

       MAIN SECTION.
       INI-MAIN.
       COPY GNSBGEDB.
           PERFORM CIC-ERR THRU FIN-CIC-ERR.
           MOVE DFHCOMMAREA TO WSS-CMMA SCR-VARI.
           MOVE EIBCALEN    TO WSS-TCMA.
      *
      *Buscar TS que usa procesador de MENU
           PERFORM GNS-GET-TSC.
      *
      *Buscar idd con codigo TSC-CIDD.
           PERFORM GNS-GET-IDD.
      *
      *
      *Obtiene la posicion del cursor en la pantalla
      *     MOVE WSS-PCUR TO WSS-PCUR-ZOOM.
           MOVE EIBCPOSN TO WSS-PCUR-ZOOM.

      *Procesar la tabla KYM
           MOVE TSC-SIST TO FIO-SIST.
           MOVE 'KYM'    TO TAB-COD-TTAB IN TAB.
      *Se usa SCR-NMAP solo para poder manejar la situacion de programas
      *enganchados que se van pasando el control
      *    MOVE TSC-NMAP TO TAB-COD-CTAB IN TAB.
      *     MOVE SCR-NMAP TO TAB-COD-CTAB IN TAB.
           
      *Busca especificacion de KYM en tabla dependiendo de la posicion
      *del cursor
           MOVE SCR-NMAP TO WSS-FRM-ZOOM.
           MOVE WSS-ZOOM TO TAB-COD-CTAB IN TAB.
           MOVE FIO-GET-NLS TO FIO-CMND.
           PERFORM GNS-FIO-TAB.
           IF FIO-STAT-OKS
               MOVE TAB-COD-CTAB IN TAB TO WSS-CMP-ZOOM
               IF WSS-FRM-ZOOM = WSS-CMP-ZOOM
                   MOVE TAB-GLS-DESC IN TAB TO
                        WSS-TAB-GLS-DESC IN WSS-TAB
                   MOVE TAB-GLS-DATA IN TAB TO
                        WSS-TAB-GLS-DATA IN WSS-TAB
               ELSE
                   PERFORM RET-PRG
           ELSE
               PERFORM RET-PRG.

      *Procesar la tabla ZOM
           MOVE TSC-SIST TO FIO-SIST.
           MOVE 'ZOM'    TO TAB-COD-TTAB IN TAB.
      *Se usa SCR-NMAP solo para poder manejar la situacion de programas
      *enganchados que se van pasando el control
      *    MOVE TSC-NMAP TO TAB-COD-CTAB IN TAB.
      *     MOVE SCR-NMAP TO TAB-COD-CTAB IN TAB.
           MOVE SCR-NMAP TO WSS-FRM-ZOOM.
           MOVE WSS-ZOOM TO TAB-COD-CTAB IN TAB.
           
      *
           MOVE FIO-GET-NLS TO FIO-CMND.
           PERFORM GNS-FIO-TAB.
           IF FIO-STAT-OKS
               MOVE TAB-COD-CTAB IN TAB TO WSS-CMP-ZOOM
               IF WSS-FRM-ZOOM = WSS-CMP-ZOOM
                   MOVE TAB-GLS-DESC IN TAB TO WSS-CMMA-CMN
               ELSE
                   PERFORM RET-PRG
           ELSE
               PERFORM RET-PRG.

      *Obtener el contexo de la pantalla
           EXEC CICS HANDLE CONDITION LENGERR(CON-MAIN)
                                      NOSPACE(CON-MAIN)
           END-EXEC.
           MOVE +3000 TO WSS-TFLD.
           EXEC CICS RECEIVE INTO(WSS-DFLD) LENGTH(WSS-TFLD) BUFFER
           END-EXEC.
           MOVE EIBCPOSN TO WSS-PCUR.
       CON-MAIN.

      *SETEO DE LLAVES

      *Borra cola existente
           PERFORM GNS-ERR-QUE.
           MOVE EIBTRMID TO QUE-TERM.
           MOVE 'KYM' TO QUE-TYPE.
           MOVE 1     TO QUE-NITM.
           MOVE +3000 TO QUE-LITM.
           MOVE QUE-GET TO QUE-CMND.
           PERFORM GNS-PRO-QUE.
           IF QUE-STAT = QUE-STAT-OKS
                MOVE QUE-DEL TO QUE-CMND
                PERFORM GNS-PRO-QUE.
       CIC-MAIN.
           PERFORM MOV-TAB VARYING WSS-IFLD FROM 1 BY 1 UNTIL
                          WSS-TKEY(WSS-IFLD) NOT > SPACES.
           MOVE 'LLAVES SETEADAS OK' TO FRM-MENS.
           PERFORM PUT-MSG.
      *     PERFORM RET-PRG.
      * CONGELA
      *Borra cola existente
           PERFORM GNS-ERR-QUE.
           MOVE EIBTRMID TO QUE-TERM.
           MOVE 'PKB' TO QUE-TYPE.
           MOVE 1     TO QUE-NITM.
           MOVE +3000 TO QUE-LITM.
           MOVE QUE-GET TO QUE-CMND.
           PERFORM GNS-PRO-QUE.
           IF QUE-STAT = QUE-STAT-OKS
                MOVE QUE-DEL TO QUE-CMND
                PERFORM GNS-PRO-QUE.

           PERFORM SET-TSC.

           PERFORM SET-CMA.
           MOVE QUE-PUT TO QUE-CMND.
           PERFORM GNS-PRO-QUE.

           PERFORM SET-MAP.
           MOVE QUE-PUT TO QUE-CMND.
           PERFORM GNS-PRO-QUE.


      * Complementa funcion nemotecnica
           PERFORM CMP-NEMO.
           PERFORM VRF-NEMO.

           PERFORM XCTL-CMN.

           GOBACK.
       FIN-MAIN.
           EXIT.

       ZOOM-QUE SECTION.
       INI-ZOOM-QUE.
           
      *Obtiene fila en que se digito el cursor
           COMPUTE WSS-FCUR-ZOOM = ( WSS-PCUR-ZOOM / 80 ) + 1.
      *Lee registros de cola existente y busca en tabla
      *     PERFORM GNS-ERR-QUE.
           MOVE EIBTRMID TO QUE-TERM.
           MOVE 'ZOM'    TO QUE-TYPE.
           MOVE WSS-FCUR-ZOOM TO QUE-NITM.
       CIC-MAIN.
           MOVE QUE-GET  TO QUE-CMND.
           MOVE +3000 TO QUE-LITM.
           PERFORM GNS-PRO-QUE.
           IF QUE-STAT = QUE-STAT-OKS
               MOVE QUE-DATA TO WSS-CMMA-CMN
               PERFORM XCTL-CMN
           ELSE
               PERFORM RET-PRG.
       FIN-ZOOM-QUE.
           EXIT.

       XCTL-CMN SECTION.
       INI-XCTL-CMN.
      *Llama al programa que procesa menu
           MOVE +21 TO WSS-TCMA-CMN.
           MOVE 0 TO EIBAID.
           PERFORM SET-PRG-CMN.
           EXEC CICS XCTL
                  PROGRAM(WSS-PROG)
                  COMMAREA(WSS-CMMA-CMN)
                  LENGTH(WSS-TCMA-CMN)
           END-EXEC.
       FIN-XCTL-CMN.
           EXIT.

       SET-PRG-CMN SECTION.
       INI-SET-PRG-CMN.
           IF SCR-CMNP NOT > SPACES
               MOVE 'GNSPPMEN' TO WSS-PROG
           ELSE
               MOVE SCR-CMNP   TO WSS-PROG.
       FIN-SET-PRG-CMN.
           EXIT.

       MOV-TAB SECTION.
       INI-MOV-TAB.
           MOVE SPACES TO WSS-QFLD.
           MOVE WSS-PKEY(WSS-IFLD) TO WSS-J.
           PERFORM MOV-KEY VARYING WSS-I FROM 1 BY 1 UNTIL
                                   WSS-I > WSS-LKEY(WSS-IFLD).
           PERFORM SET-KYM.
       FIN-MOV-TAB.
           EXIT.

       MOV-KEY SECTION.
       INI-MOV-KEY.
           ADD WSS-J WSS-THDR GIVING WSS-K.
           MOVE WSS-DFLD-CHR(WSS-K) TO WSS-QFLD-CHR(WSS-I).
           ADD 1 TO WSS-J.
       FIN-MOV-KEY.
           EXIT.

       SET-KYM SECTION.
       INI-SET-KYM.
           MOVE WSS-NITM TO QUE-NITM.
           ADD 1 TO WSS-NITM.
           COMPUTE  QUE-LITM = 3 + WSS-LKEY(WSS-IFLD).
           MOVE WSS-TKEY(WSS-IFLD) TO WSS-TKEY-Q.
           MOVE WSS-QFLD TO QUE-ITEM.
           MOVE QUE-PUT  TO QUE-CMND.
           PERFORM GNS-PRO-QUE.
       FIN-SET-KYM.
           EXIT.

       RET-PRG SECTION.
       INI-RET-PRG.
           EXEC CICS SEND CONTROL FREEKB
           END-EXEC.
           PERFORM SCR-EXIT.
       FIN-RET-PRG.
           EXIT.

       PUT-MSG SECTION.
       INI-PUT-MSG.
      *     EXEC CICS SEND CONTROL CURSOR(WSS-PMSG)
      *           TERMINAL
      *     END-EXEC.
      *NO SE DEBE USAR GNS-PRO-FRM CON FRM-CMND = FRM-MSG, PUES DESPLIEGA
      * EL MENSAJE CON LEN(79) Y SE 'PISA' AREAS DEL MAPA.
      *     EXEC CICS SEND
      *               FROM(FRM-MENS)
      *               LENGTH(40)
      *     END-EXEC.
      *     EXEC CICS SEND CONTROL CURSOR(WSS-PCUR)
      *        TERMINAL
      *     END-EXEC.
       FIN-PUT-MSG.
           EXIT.

       SCR-EXIT SECTION.
       INI-SCR-EXIT.
           EXEC CICS RETURN
                     TRANSID(EIBTRNID)
                     COMMAREA(WSS-CMMA)
                     LENGTH(WSS-TCMA)
           END-EXEC.
       FIN-SCR-EXIT.
           EXIT.

       GNS-GET-TSC SECTION.
       INI-GNS-GET-TSC.
           EXEC CICS HANDLE CONDITION
                     QIDERR (NEX-GNS-GET-TSC)
           END-EXEC.
           MOVE EIBTRMID TO TSC-TERM.
           MOVE TSC-TTSC TO TSC-LITM.
           EXEC CICS READQ TS
                     QUEUE(TSC-COLA)
                     INTO(TSC-ITEM)
                     LENGTH(TSC-LITM)
                     ITEM(1)
           END-EXEC.
           GO TO FIN-GNS-GET-TSC.
       NEX-GNS-GET-TSC.
           MOVE 'SISTEMA DEBE EJECUTARSE CON PROCESADOR MENU COMPATIBLE'
                         TO SYS-MENS.
           MOVE SYS-ABOR TO SYS-CMND.
           PERFORM GNS-PRO-SYS.
       FIN-GNS-GET-TSC.
           EXIT.

       GNS-GET-IDD SECTION.
       INI-GNS-GET-IDD.
           IF ( TSC-TIND = 'C' ) OR ( TSC-TIND NOT > SPACES )
               GO TO IFD-GNS-GET-IDD.
      *La independencia de datos es IDD EN TEMPORARY STORAGE ( VERSION 3.0 )
           MOVE TSC-CIDD TO IDD-COD-CIDD IN IDD.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM GNS-FIO-IDD.
           IF FIO-STAT-OKS
               MOVE IDD TO IDD-REGI
               GO TO FIN-GNS-GET-IDD.
           MOVE 'DEFAULT' TO IDD-COD-CIDD IN IDD.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM GNS-FIO-IDD.
           IF NOT FIO-STAT-OKS
               MOVE 'NO EXISTE REGISTRO IDD CON LLAVE : ' TO SYS-MEN1
               MOVE IDD-COD-CIDD IN IDD                   TO SYS-MEN2
               MOVE SYS-ABOR TO SYS-CMND
               PERFORM GNS-PRO-SYS
           ELSE
               MOVE IDD TO IDD-REGI.
           GO TO FIN-GNS-GET-IDD.
       IFD-GNS-GET-IDD.
      *La independencia de datos es IFD EN COMMAREA ( VERSION 2.0 )
           MOVE TSC-CIDD TO IFD-COD-CIFD IN IFD.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM GNS-FIO-IFD.
           IF NOT FIO-STAT-OKS
               MOVE 'NO EXISTE REGISTRO IFD CON LLAVE :' TO SYS-MEN1
               MOVE IFD-COD-CIFD IN IFD                  TO SYS-MEN2
               MOVE SYS-ABOR TO SYS-CMND
               PERFORM GNS-PRO-SYS
           ELSE
               MOVE SPACES TO IFD-FSIS
               PERFORM MOV-IFD VARYING WSS-I FROM 1 BY 1 UNTIL
                                   WSS-I > 30.
       FIN-GNS-GET-IDD.
           EXIT.

       MOV-IFD SECTION.
       INI-MOV-IFD.
           MOVE IFD-COD-DSIS(WSS-I) TO IFD-DSIS(WSS-I).
           MOVE IFD-COD-GSIS(WSS-I) TO IFD-GSIS(WSS-I).
       FIN-MOV-IFD.
           EXIT.

       COPY GNSBFTAB.
       COPY GNSBFIDD.
       COPY GNSBFIFD.
       COPY GNSBGQUE.
       COPY GNSBGDTC.
       COPY GNSBGVSM.
       COPY GNSBIABT.
       COPY GNSBGFRM.
       COPY GNSBGSYS.
       COPY GNSBFMNU.
      * COPY GNSBECIC.
      * INI RECUPERACION DE SEGMENTO PARA COMPLEMENTACION DE FUNCION NEMO


       CMP-NEMO SECTION.
       INI-CMP-NEMO.
           IF TAB-GLS-DCOR IN TAB NOT > SPACES
               GO TO FIN-CMP-NEMO.
      * Carga especificacion para complementar funcion nemotecnica
           MOVE TAB-GLS-DCOR IN TAB TO WSS-TAB-TKYM-CMP.

           MOVE WSS-CMN-NEMO        TO WSS-CMN-NEMO-CMP.
           MOVE SPACES              TO WSS-CMN-NEMO-CMP-2.
           PERFORM SCN-TAB-CMP.
           MOVE WSS-CMN-NEMO-CMP    TO WSS-CMN-NEMO.
       FIN-CMP-NEMO.
           EXIT.

       VRF-NEMO SECTION.
       INI-VRF-NEMO.
           MOVE WSS-CMN-NEMO TO MNU-COD-NEMO IN MNU.
           MOVE WSS-CMN-SIST TO FIO-SIST.
           MOVE FIO-GET-KEY  TO FIO-CMND.
           PERFORM GNS-FIO-MNU.
           IF NOT FIO-STAT-OKS
               PERFORM RET-PRG.
       FIN-VRF-NEMO.
           EXIT.

       SCN-TAB-CMP SECTION.
       INI-SCN-TAB-CMP.
           IF WSS-TKEY-CMP NOT > SPACES
               GO TO FIN-SCN-TAB-CMP.
           IF WSS-TKEY-CMP = 'ZOM'
               PERFORM MOV-TAB-CMP
               GO TO FIN-SCN-TAB-CMP.
       FIN-SCN-TAB-CMP.
           EXIT.

       MOV-TAB-CMP SECTION.
       INI-MOV-TAB-CMP.
           MOVE WSS-PKEY-CMP TO WSS-J-CMP.
           PERFORM MOV-KEY-CMP VARYING WSS-I-CMP FROM 1 BY 1 UNTIL
                            WSS-I-CMP > WSS-LKEY-CMP.
       FIN-MOV-TAB-CMP.
           EXIT.

       MOV-KEY-CMP SECTION.
       INI-MOV-KEY-CMP.
           ADD WSS-J-CMP WSS-THDR-CMP GIVING WSS-K-CMP.
           MOVE WSS-DFLD-CHR(WSS-K-CMP) TO
                WSS-CMN-NEMO-CMP-2-CHR(WSS-I-CMP).
           ADD 1 TO WSS-J-CMP.
       FIN-MOV-KEY-CMP.
           EXIT.

      * FIN RECUPERACION DE LLAVES

      ********************* ERR *********************
       CIC-ERR SECTION.
       INI-CIC-ERR.
      *     EXEC CICS HANDLE AID
      *               CLEAR    (CIC-ERR-ACL)
      *               PA1      (CIC-ERR-PA1)
      *               PA2      (CIC-ERR-PA2)
      *     END-EXEC.
           EXEC CICS HANDLE CONDITION
                     MAPFAIL  (CIC-ERR-MFA)
                     DSIDERR  (CIC-ERR-BFI)
                     DUPKEY   (CIC-ERR-DAK)
                     DUPREC   (CIC-ERR-CDK)
                     ENDFILE  (CIC-ERR-EOF)
                     ILLOGIC  (CIC-ERR-LGE)
                     INVREQ   (CIC-ERR-OPE)
                     IOERR    (CIC-ERR-DDE)
                     LENGERR  (CIC-ERR-IFI)
                     NOSPACE  (CIC-ERR-BVE)
                     NOTFND   (CIC-ERR-IKY)
                     NOTOPEN  (CIC-ERR-RNA)
                     PGMIDERR (CIC-ERR-PGM)
           END-EXEC.
       FIN-CIC-ERR.
           EXIT.

       CIC-ERR-ACL.
           MOVE 'GNSPPCLR' TO SYS-PROG.
           MOVE 0          TO SYS-TCMA.
           MOVE SPACES     TO SYS-CMMA.
           EXEC CICS XCTL
                     PROGRAM(SYS-PROG)
                     COMMAREA(SYS-CMMA)
                     LENGTH(SYS-TCMA)
           END-EXEC.
       CIC-ERR-PA1.
           MOVE FRM-FFLD-PA1 TO FRM-FFLD.
           GO TO CIC-ERR-FRM.
       CIC-ERR-PA2.
           MOVE FRM-FFLD-PA2 TO FRM-FFLD.
           GO TO CIC-ERR-FRM.
       CIC-ERR-BFI.
           MOVE '96'                    TO FIO-STAT.
           MOVE 'ARCHIVO NO ENCONTRADO' TO FIO-MEN1.
           MOVE FIO-VOID                TO FIO-MEN2.
           MOVE FIO-MENS                TO FRM-MENS.
           GO TO CIC-ERR-ABT.
       CIC-ERR-DAK.
           MOVE '22'                TO FIO-STAT.
           MOVE 'DUPLICATE ALT KEY' TO FIO-MEN1.
           MOVE FIO-VOID            TO FIO-MEN2.
           GO TO CIC-ERR-FIO.
       CIC-ERR-CDK.
           MOVE '22'                 TO FIO-STAT.
           MOVE 'REGISTRO YA EXISTE' TO FIO-MEN1.
           MOVE FIO-VOID             TO FIO-MEN2.
           GO TO CIC-ERR-FIO.
       CIC-ERR-EOF.
           MOVE '10'             TO FIO-STAT.
           MOVE 'FIN DE ARCHIVO' TO FIO-MEN1.
           MOVE FIO-VOID         TO FIO-MEN2.
           GO TO CIC-ERR-FIO.
       CIC-ERR-LGE.
           MOVE '92'           TO FIO-STAT.
           MOVE 'ERROR LOGICO' TO FIO-MEN1.
           MOVE FIO-VOID       TO FIO-MEN2.
           MOVE FIO-MENS       TO FRM-MENS.
           GO TO CIC-ERR-ABT.
       CIC-ERR-OPE.
           MOVE '30'               TO FIO-STAT.
           MOVE 'ERROR PERMANENTE' TO FIO-MEN1.
           MOVE FIO-VOID           TO FIO-MEN2.
           MOVE FIO-MENS           TO FRM-MENS.
           GO TO CIC-ERR-ABT.
       CIC-ERR-DDE.
           MOVE '90'                TO FIO-STAT.
           MOVE 'ERROR DISPOSITIVO' TO FIO-MEN1.
           MOVE FIO-VOID            TO FIO-MEN2.
           MOVE FIO-MENS            TO FRM-MENS.
           GO TO CIC-ERR-ABT.
       CIC-ERR-IFI.
           MOVE '95'             TO FIO-STAT.
           MOVE 'ERROR DE LARGO' TO FIO-MEN1.
           MOVE FIO-VOID         TO FIO-MEN2.
           MOVE FIO-MENS         TO FRM-MENS.
           GO TO CIC-ERR-ABT.
       CIC-ERR-BVE.
           MOVE '24'               TO FIO-STAT.
           MOVE 'ERROR DE ESPACIO' TO FIO-MEN1.
           MOVE FIO-VOID           TO FIO-MEN2.
           MOVE FIO-MENS           TO FRM-MENS.
           GO TO CIC-ERR-ABT.
       CIC-ERR-IKY.
           MOVE '23'          TO FIO-STAT.
           MOVE 'INVALID KEY' TO FIO-MEN1.
           MOVE FIO-VOID      TO FIO-MEN2.
           GO TO CIC-ERR-FIO.
       CIC-ERR-PGM.
           MOVE '98'               TO FIO-STAT.
           MOVE 'PROGRAM ID ERROR' TO FRM-MENS.
           GO TO CIC-ERR-FRM.
       CIC-ERR-RNA.
           MOVE '93'              TO FIO-STAT.
           MOVE 'ARCHIVO CERRADO' TO FIO-MEN1.
           MOVE FIO-VOID          TO FIO-MEN2.
           MOVE FIO-MENS          TO FRM-MENS.
           GO TO CIC-ERR-ABT.
       CIC-ERR-MFA.
           MOVE 'ABORTO : MAP FAIL' TO FRM-MENS.
           GO TO CIC-ERR-ABT.
       CIC-ERR-FIO.
           GO TO FIN-FIO.
       CIC-ERR-FRM.
           GO TO FIN-GNS-PRO-FRM.
       CIC-ERR-ABT.
           MOVE 'GNSPPABT' TO SYS-PROG.
           MOVE +79        TO SYS-TCMA.
      *    MOVE FRM-MENS   TO SYS-CMMA.
           EXEC CICS XCTL
                     PROGRAM(SYS-PROG)
                     COMMAREA(FRM-MENS)
                     LENGTH(SYS-TCMA)
           END-EXEC.
      * CONGELA

       SET-MAP SECTION.
       INI-SET-MAP.
           COMPUTE QUE-LITM = 7 + WSS-TFLD.
           MOVE 1        TO QUE-NITM.
           MOVE EIBTRMID TO QUE-TERM.
           MOVE 'PKB'    TO QUE-TYPE.
           MOVE 'MAP'    TO QUE-IKEY.
           MOVE WSS-TFLD TO QUE-LDAT.
           MOVE WSS-DFLD TO QUE-DATA.
           MOVE EIBCPOSN TO QUE-PCUR.
       FIN-SET-MAP.
           EXIT.

       SET-CMA SECTION.
       INI-SET-CMA.
           COMPUTE QUE-LITM = 7 + EIBCALEN.
           MOVE 2           TO QUE-NITM.
           MOVE EIBTRMID    TO QUE-TERM.
           MOVE 'PKB'       TO QUE-TYPE.
           MOVE 'CMA'       TO QUE-IKEY.
           MOVE EIBCALEN    TO QUE-LDAT.
           MOVE DFHCOMMAREA TO QUE-DATA.
           MOVE +0          TO QUE-PCUR.
       FIN-SET-CMA.
           EXIT.

       SET-TSC SECTION.
       INI-SET-TSC.
           MOVE EIBTRMID TO TSC-TERM.
           MOVE TSC-COLA TO QUE-COLA.
           MOVE 1        TO QUE-NITM.
           MOVE +9999    TO QUE-LITM.
           MOVE QUE-GET  TO QUE-CMND.
           PERFORM GNS-PRO-QUE.
           IF QUE-STAT NOT = QUE-STAT-OKS
               GO TO FIN-SET-TSC.
           MOVE EIBTRMID TO QUE-TERM.
           MOVE 'PKB'    TO QUE-TYPE.
           MOVE QUE-PUT  TO QUE-CMND.
           PERFORM GNS-PRO-QUE.
       FIN-SET-TSC.
           EXIT.
-END
/*
//STEP1  EXEC PGM=AFOLIBR,PARM='NJTA,NRJS'
//STEPLIB  DD DSN=ADR.LIB.V38.LOAD,DISP=SHR
//MASTER   DD DSN=GNSCL.FUENTES,DISP=SHR
//OSJOB    DD DSN=&&TEMP,DISP=(,PASS),SPACE=(CYL,(1,1)),UNIT=SYSDA
//SYSPRINT DD SYSOUT=*
//SYSPUNCH DD SYSOUT=*
//SYSIN    DD *
-SEL GNSPPPF4,CONS,EXEC,CCOPY,COPYDD
-END
/*
//STEP2   EXEC DFHEITCL,PARM.LKED='MAP,XREF'
//TRN.SYSIN    DD DSN=&&TEMP,DISP=OLD
//COB.SYSLIB   DD DSN=GNSCL.FUENTES.V31,DISP=SHR,SUBSYS=LAM
//             DD DSN=GNSCL.FUENTES.V30,DISP=SHR,SUBSYS=LAM
//             DD DSN=GNSCL.FUENTES,DISP=SHR,SUBSYS=LAM
//             DD DSN=GNSCL.FUENTES,DISP=SHR,SUBSYS=LAM
//             DD DSN=GNSCL.FIO.LINEA,DISP=SHR,SUBSYS=LAM
//             DD DSN=TABCL.FUENTES,DISP=SHR,SUBSYS=LAM
//             DD DSN=TABCL.FIO.LINEA,DISP=SHR,SUBSYS=LAM
//             DD DSN=SGCCL.FUENTES,DISP=SHR,SUBSYS=LAM
//             DD DSN=SGCCL.FIO.LINEA,DISP=SHR,SUBSYS=LAM
//             DD DSN=DEUCL.FUENTES,DISP=SHR,SUBSYS=LAM
//             DD DSN=DEUCL.FIO.LINEA,DISP=SHR,SUBSYS=LAM
//             DD DSN=COLCL.FUENTES,DISP=SHR,SUBSYS=LAM
//             DD DSN=COLCL.FIO.LINEA,DISP=SHR,SUBSYS=LAM
//             DD DSN=SUPCL.FUENTES,DISP=SHR,SUBSYS=LAM
//             DD DSN=SUPCL.FIO.LINEA,DISP=SHR,SUBSYS=LAM
//             DD DSN=DAPCL.FUENTES,DISP=SHR,SUBSYS=LAM
//             DD DSN=DAPCL.FIO.LINEA,DISP=SHR,SUBSYS=LAM
//             DD DSN=SBTCL.FUENTES,DISP=SHR,SUBSYS=LAM
//             DD DSN=SBTCL.FIO.LINEA,DISP=SHR,SUBSYS=LAM
//             DD DSN=CICS.V211.COBLIB,DISP=SHR,SUBSYS=LAM
//LKED.SYSLIB  DD DSN=CICS.V211.LOADLIB,DISP=SHR
//             DD DSN=GNSCM.RUTINAS.CONSIST,DISP=SHR
//             DD DSN=COB.VSCLLIB,DISP=SHR
//LKED.SYSLMOD DD DSN=GNSCM.LINEA(GNSPPPF4),DISP=SHR
//LKED.SYSLIN  DD DSN=CICS.V211.COBLIB(DFHEILIC),DISP=SHR
//             DD DSN=&&LOADSET,DISP=(OLD,DELETE)
//             DD DSN=ADR.DB75.OBJECT.DESA(DBCSVPR),DISP=SHR
//
