       IDENTIFICATION DIVISION.
      *========================
       PROGRAM-ID. GNSPPPK2.
       AUTHOR. CONSIST.
       DATE-WRITTEN.  20-DEC-1988 12:33:22

      * PK2 3.1

       ENVIRONMENT DIVISION.
      *=====================
       DATA DIVISION.
      *==============

       WORKING-STORAGE SECTION.
      *------------------------
      * COPY GNSWGDSP.
      * COPY GNSWGSCR.
       COPY GNSWCSCR.
       COPY GNSWVSCR.
      * COPY GNSWGECS.
       COPY GNSWGTSC.

       01  WSS-VARI.
           03 WSS-TFLD  COMP      VALUE +0             PIC S9(04).
           03 WSS-PCUR  COMP      VALUE +0             PIC S9(04).
           03 WSS-DFRM                                 PIC X(3000).
           03 WSS-CMMA                                 PIC X(3500).

           03 WSS-ACMA                                 PIC X(03).
           03 WSS-PROG                                 PIC X(08).

      *
       COPY GNSWGQUE.

      * VARIABLES A TRANSFERIR A COMMAND.
       COPY GNSWGECC.
      *
       LINKAGE SECTION.
      *----------------
       01  DFHCOMMAREA.
           02 FILLER                             PIC X(3500).

       PROCEDURE DIVISION.
      *===================


       MAIN SECTION.
       INI-MAIN.
           ENTRY 'DBMSCBL'.
           EXEC CICS HANDLE CONDITION LENGERR(CON-MAIN)
                                      NOSPACE(CON-MAIN)
           END-EXEC.
           
           MOVE +3000 TO WSS-TFLD.
           EXEC CICS RECEIVE INTO(WSS-DFRM) LENGTH(WSS-TFLD) BUFFER
           END-EXEC.
             
       CON-MAIN.
           PERFORM GNS-ERR-QUE.
           MOVE EIBTRMID TO QUE-TERM.
           MOVE DFHCOMMAREA TO WSS-CMMA SCR-VARI WSS-ACMA.

           IF ( SCR-PROG = 'SGCPQCMT' OR 'SGCPUCMT' ) OR
              ( EIBCALEN = 3 AND WSS-ACMA = 'RET' )
               PERFORM RET-PRG
           ELSE
               PERFORM CAL-CMT.
      *     GOBACK.
           EXEC CICS RETURN
           END-EXEC.
       FIN-MAIN.
           EXIT.

       CAL-CMT SECTION.
       INI-CAL-CMT.
      *Elimina temporary storage
           MOVE EIBTRMID TO QUE-TERM.
           MOVE 'PK2'    TO QUE-TYPE.
           MOVE QUE-DEL  TO QUE-CMND.
           PERFORM GNS-PRO-QUE.

      *Guarda mapa en temporary storage
           PERFORM SET-MAP.
           MOVE QUE-PUT TO QUE-CMND.
           PERFORM GNS-PRO-QUE.

      *Guarda COMMAREA en temporary storage
           PERFORM SET-CMA.
           MOVE QUE-PUT TO QUE-CMND.
           PERFORM GNS-PRO-QUE.

      *Guarda Variables de procesador de menu ( TSC ) en temporary
      *storage
            PERFORM SET-TSC.

      *     ESTO LO GRABA EL PROGRAMA LLAMADOR
      *     COMPUTE QUE-LITM = 7 + 38.
      *     MOVE EIBTRMID     TO QUE-TERM.
      *     MOVE 'KEY'        TO QUE-TYPE.
      *     MOVE 'ENT'        TO QUE-IKEY.
      *     MOVE +38          TO QUE-LDAT.
      *     MOVE +0           TO QUE-PCUR.
      *     MOVE SCR-VARI-CMT TO QUE-DATA.
      *     MOVE QUE-PUT      TO QUE-CMND.
      *     PERFORM GNS-PRO-QUE.

           IF SCR-CMNP NOT > SPACES
               MOVE 'GNSPPMEN' TO WSS-PROG
           ELSE
               MOVE SCR-CMNP   TO WSS-PROG.

      *Llama al programa que procesa menu para que active el
      *programa de comentarios
           MOVE 'SGC'          TO WSS-CMN-SIST.
           MOVE SPACES         TO WSS-CMN-SISG.
           MOVE 'SGCACTCMT3.1' TO WSS-CMN-NEMO.
           MOVE 'ACT'          TO WSS-CMN-CMND.
           MOVE +21            TO WSS-TCMA-CMN.
           MOVE 0 TO EIBAID.
           EXEC CICS XCTL
                PROGRAM(WSS-PROG)
                COMMAREA(WSS-CMMA-CMN)
                LENGTH(WSS-TCMA-CMN)
           END-EXEC.
       FIN-CAL-CMT.
           EXIT.

       RET-PRG SECTION.
       INI-RET-PRG.
           MOVE 1        TO QUE-NITM.
           MOVE +9999    TO QUE-LITM.
           MOVE EIBTRMID TO QUE-TERM.
           MOVE 'PK2'    TO QUE-TYPE.
           MOVE QUE-GET  TO QUE-CMND.
           PERFORM GNS-PRO-QUE.
           IF QUE-STAT NOT = QUE-STAT-OKS
               GO TO ORG-RET-PRG.
           IF QUE-IKEY NOT = 'MAP'
               GO TO ORG-RET-PRG.
           MOVE QUE-DATA TO WSS-DFRM.
           MOVE QUE-LDAT TO WSS-TFLD.
           MOVE QUE-PCUR TO WSS-PCUR.

           MOVE 2        TO QUE-NITM.
           MOVE +9999    TO QUE-LITM.
           MOVE EIBTRMID TO QUE-TERM.
           MOVE 'PK2'    TO QUE-TYPE.
           MOVE QUE-GET  TO QUE-CMND.
           PERFORM GNS-PRO-QUE.
           IF QUE-STAT NOT = QUE-STAT-OKS
               GO TO ORG-RET-PRG.
           IF QUE-IKEY NOT = 'CMA'
               GO TO ORG-RET-PRG.
           MOVE QUE-DATA TO SCR-VARI WSS-CMMA.
           MOVE QUE-LDAT TO SCR-TCMA.

           MOVE 3        TO QUE-NITM.
           MOVE +9999    TO QUE-LITM.
           MOVE EIBTRMID TO QUE-TERM.
           MOVE 'PK2'    TO QUE-TYPE.
           MOVE QUE-GET  TO QUE-CMND.
           PERFORM GNS-PRO-QUE.
           IF QUE-STAT = QUE-STAT-OKS
               PERFORM MOD-TSC.

           MOVE EIBTRMID TO QUE-TERM.
           MOVE 'PK2'    TO QUE-TYPE.
           MOVE QUE-DEL  TO QUE-CMND.
           PERFORM GNS-PRO-QUE.

           EXEC CICS SEND FROM(WSS-DFRM)
                          LENGTH(WSS-TFLD)
                          ERASE
           END-EXEC.
           EXEC CICS SEND CONTROL CURSOR(WSS-PCUR)
                          TERMINAL
           END-EXEC.
           PERFORM SCR-EXIT.
       ORG-RET-PRG.
      *Retorna al programa de origen
           EXEC CICS SEND CONTROL FREEKB
           END-EXEC.
           MOVE DFHCOMMAREA TO WSS-CMMA.
           PERFORM SCR-EXIT.
       FIN-RET-PRG.
           EXIT.

       SET-MAP SECTION.
       INI-SET-MAP.
           COMPUTE QUE-LITM = 7 + WSS-TFLD.
           MOVE 1        TO QUE-NITM.
           MOVE EIBTRMID TO QUE-TERM.
           MOVE 'PK2'    TO QUE-TYPE.
           MOVE 'MAP'    TO QUE-IKEY.
           MOVE WSS-TFLD TO QUE-LDAT.
           MOVE WSS-DFRM TO QUE-DATA.
           MOVE EIBCPOSN TO QUE-PCUR.
       FIN-SET-MAP.
           EXIT.

       SET-CMA SECTION.
       INI-SET-CMA.
           COMPUTE QUE-LITM = 7 + EIBCALEN.
           MOVE 2        TO QUE-NITM.
           MOVE EIBTRMID TO QUE-TERM.
           MOVE 'PK2'    TO QUE-TYPE.
           MOVE 'CMA'    TO QUE-IKEY.
           MOVE EIBCALEN TO QUE-LDAT.
           MOVE +0       TO QUE-PCUR.
           MOVE WSS-CMMA TO QUE-DATA.
       FIN-SET-CMA.
           EXIT.

       SET-TSC SECTION.
       INI-SET-TSC.
           MOVE EIBTRMID TO TSC-TERM.
           MOVE TSC-COLA TO QUE-COLA.
           MOVE 1        TO QUE-NITM.
           MOVE +9999    TO QUE-LITM.
           MOVE QUE-GET  TO QUE-CMND.
           PERFORM GNS-PRO-QUE.
           IF QUE-STAT NOT = QUE-STAT-OKS
               GO TO FIN-SET-TSC.
           MOVE 3        TO QUE-NITM.
           MOVE EIBTRMID TO QUE-TERM.
           MOVE 'PK2'    TO QUE-TYPE.
           MOVE QUE-PUT  TO QUE-CMND.
           PERFORM GNS-PRO-QUE.
       FIN-SET-TSC.
           EXIT.

       MOD-TSC SECTION.
       INI-MOD-TSC.
           MOVE EIBTRMID TO TSC-TERM.
           MOVE TSC-COLA TO QUE-COLA.
           MOVE 1        TO QUE-NITM.
           MOVE QUE-MOD  TO QUE-CMND.
           PERFORM GNS-PRO-QUE.
           IF QUE-STAT = QUE-STAT-OKS
               GO TO FIN-MOD-TSC.
           MOVE QUE-PUT TO QUE-CMND.
           PERFORM GNS-PRO-QUE.
       FIN-MOD-TSC.
           EXIT.

       SCR-EXIT SECTION.
       INI-SCR-EXIT.
           EXEC CICS RETURN
                     TRANSID(SCR-NTRN)
                     COMMAREA(WSS-CMMA)
                     LENGTH(SCR-TCMA)
           END-EXEC.
       FIN-SCR-EXIT.
           EXIT.

       COPY GNSBGQUE.
      * COPY GNSBGDSP.
