*%! Codigo adicional para GNSPANVF Novedades
*% IF SETTAG
*% FNCPQ = "CVTWEB"
*% VSNPQ = "07.02.07"
*% FNCPU = "CVTWEB"
*% VSNPU =  "07.02.07"
*% END
*% NO_HDR_CST = TRUE
*% PGM_PTC = TRUE
*% IF WSS
      *<<<< WSS
       77  WSS-REG-OKS       VALUE 'N'            PIC X(01).
       77  WSS-AKEY           VALUE SPACES        PIC X(32).
*% IF PGM_PQ
       COPY GNSWGPCK.
*% END
       01  WSS-FEC-FDMA.
           03  WSS-NUM-DDMA                       PIC X(02).
           03  WSS-NUM-MDMA                       PIC X(02).
           03  WSS-NUM-SDMA                       PIC X(02).
           03  WSS-NUM-ADMA                       PIC X(02).
      
       01  WSS-FEC-FAMD.
           03  WSS-NUM-SAMD                       PIC X(02).
           03  WSS-NUM-AAMD                       PIC X(02).
           03  WSS-NUM-MAMD                       PIC X(02).
           03  WSS-NUM-DAMD                       PIC X(02).
           03  WSS-HRA-HAMD                       PIC X(06).
       01  WSS-STP-FDES.
           03  WSS-FEC-FDES.
               05  WSS-NUM-SDES                   PIC X(02).
               05  WSS-NUM-ADES                   PIC X(02).
               05  WSS-NUM-MDES                   PIC X(02).
               05  WSS-NUM-DDES                   PIC X(02).
           03  WSS-HRA-HDES                       PIC X(06).
      
       01  WSS-STP-FHAS.
           03  WSS-FEC-FHAS.
               05  WSS-NUM-SHAS                   PIC X(02).
               05  WSS-NUM-AHAS                   PIC X(02).
               05  WSS-NUM-MHAS                   PIC X(02).
               05  WSS-NUM-DHAS                   PIC X(02).
           03  WSS-HRA-HHAS                       PIC X(06).
      
       01  WSS-STP-FING.
           03  WSS-FEC-FING.
               05  WSS-NUM-SING                   PIC X(02).
               05  WSS-NUM-AING                   PIC X(02).
               05  WSS-NUM-MING                   PIC X(02).
               05  WSS-NUM-DING                   PIC X(02).
           03  WSS-HRA-HING                       PIC X(06).
      
       77  WSS-COD-PACK                PIC X(24).
       77  WSS-COD-TTAB                PIC X(03).
       77  WSS-COD-SIST                PIC X(03).
       77  WSS-COD-CTAB-L11            PIC X(11).
       77  WSS-COD-CTAB-L11-CMP        PIC X(11).
       77  IMP-GLOSA-VDT               PIC 9(04).
       77  IMP-GLOSA-FDC               PIC 9(04).
      
      *>>>> WSS
*% END
*% IF WSS_DTC
      *<<<< WSS_DTC
      *>>>>
*% END
*% IF INI_FIO
      *<<<< INI_FIO
*% IF PGM_PQ
      *<<<< PGM_PQ
           MOVE TSK-TERM-ALF    TO TS-NPK-TERM.
           MOVE 'NPCK'          TO TS-NPK-TERM.
      
           MOVE TSK-TERM-ALF    TO TS-PCK-TERM-OCC.
           MOVE 'OPCK'          TO TS-PCK-TERM-OCC.
      
           MOVE TS-PCK-COLA-OCC TO QUE-COLA.
           MOVE QUE-DEL TO QUE-CMND.
           PERFORM GNS-PRO-QUE.
      
           MOVE 'PCK1' TO QUE-COLA.
           MOVE QUE-DEL TO QUE-CMND.
           PERFORM GNX-PRO-QUE.
      
           MOVE 'PCK2' TO QUE-COLA.
           MOVE QUE-DEL TO QUE-CMND.
           PERFORM GNX-PRO-QUE.
      
           MOVE 'PCK3' TO QUE-COLA.
           MOVE QUE-DEL TO QUE-CMND.
           PERFORM GNX-PRO-QUE.
      
      *>>>> PGM_PQ
*% END
      *>>>> INI_FIO
*% END
*% IF FND_KEY
      *<<<< FND_KEY
           IF SCR-CCPP = 'ING'
               PERFORM BUS-COR-PCK.
      
      *    IF SCR-OFRM-SRV AND
           IF SCR-CMND = 'CP1' OR
              SCR-CMND = 'CPN'
                PERFORM PRO-PCK.
      
      *>>>> FND_KEY
*% END
*% IF FIN_FND_KEY
      *<<<< FIN_FND_KEY
      *>>>> FIN_FND_KEY
*% END
*% IF FIN_SCR_TRL
      *<<<< FIN_SCR_TRL
      *>>>> FIN_SCR_TRL
*% END
*% IF FIN_HBL_FLD
      *<<<< FIN_HBL_FLD
      *>>>> FIN_HBL_FLD
*% END
*% IF SCR_GFLD_VAL_FLD
      *<<<< SCR_GFLD_VAL_FLD
      *>>>>
*% END
*% IF CMN_ING
      *<<<< CMN_ING
           IF SCR-CMND = 'GEN' OR
              SCR-CMND = 'TRK'
               MOVE 'V' TO PCK-MSC-STAT IN PCK.
      
      *>>>> CMN_ING
*% END
*% IF FIN_CMN_ING
      *<<<< FIN_CMN_ING
           PERFORM PUT-QUE-KEY-NPCK.
           IF PCK-COD-FENT IN PCK-FLD > SPACES
                MOVE PCK-COD-FENT IN PCK-FLD TO PCK-COD-PENT IN PCK
                MOVE PCK-COD-FACK IN PCK-FLD TO PCK-COD-PACK IN PCK
                MOVE PCK-NUM-FACK IN PCK-FLD TO PCK-NUM-PACK IN PCK
                MOVE FIO-GET-KEY-UPD TO FIO-CMND
                PERFORM GNS-FIO-PCK
                IF FIO-STAT-OKS
                    MOVE PCK-COD-PENT IN PCK-FLD TO PCK-COD-SENT IN PCK
                    MOVE PCK-COD-PACK IN PCK-FLD TO PCK-COD-SACK IN PCK
                    MOVE PCK-NUM-PACK IN PCK-FLD TO PCK-NUM-SACK IN PCK
                    MOVE FIO-MOD TO FIO-CMND
                    PERFORM GNS-FIO-PCK.
      
      *>>>> FIN_CMN_ING
*% END
*% IF CMN_MOD_RET
      *<<<< CMN_MOD_RET
      *>>>> CMN_MOD_RET
*% END
*% IF CMN_ACC_RET
      *<<<< CMN_ACC_RET
           IF SCR-CMND = 'VRF'
               MOVE 'V' TO PCK-MSC-STAT IN PCK
               MOVE FIO-MOD TO FIO-CMND
               PERFORM GNS-FIO-PCK
               GO TO FIN-CMN-ACC.
      *>>>> CMN_ACC_RET
*% END
*% IF EOF_PQ
      *<<<< EOF_PQ
      
       BUS-COR-PCK SECTION.
       INI-BUS-COR-PCK.
           MOVE 99999 TO PCK-NUM-PACK IN PCK.
           MOVE FIO-GET-LEQ TO FIO-CMND.
           PERFORM GNS-FIO-PCK.
           IF NOT ( FIO-STAT-OKS AND
                    PCK-COD-PENT IN PCK-FLD = PCK-COD-PENT IN PCK AND
                    PCK-COD-PACK IN PCK-FLD = PCK-COD-PACK IN PCK )
               PERFORM KEY-ALL-PCK
               MOVE ZEROES TO PCK-NUM-PACK IN PCK.
           IF SCR-CCPP = 'ING'
               ADD 1 TO PCK-NUM-PACK IN PCK
               MOVE PCK-NUM-PACK IN PCK TO PCK-NUM-PACK IN PCK-FLD
           ELSE
               MOVE PCK-NUM-PACK IN PCK TO PCK-NUM-PACK IN PCK-FLD.
       FIN-BUS-COR-PCK.
           EXIT.
      
       PRO-PCK SECTION.
       INI-PRO-PCK.
      *    IF  PCK-FEC-FING IN PCK-FLD > ZEROES
      *        PERFORM FORMATO-FECHA.
      
           IF PCK-COD-PACK IN PCK-FLD > SPACES AND
              ( PCK-COD-PENT IN PCK-FLD NOT > SPACES AND
                PCK-NUM-PACK IN PCK-FLD NOT > ZEROES )
                 MOVE 'PCK-COD-PACK' TO WSS-AKEY
                 MOVE PCK-COD-PACK IN PCK-FLD
                                     TO WSS-COD-PACK
           ELSE
           IF PCK-FEC-FING IN PCK-FLD > ZEROES
                 MOVE 'PCK-STP-IING' TO WSS-AKEY
           ELSE
           IF PCK-COD-PFNC IN PCK-FLD > SPACES
                 MOVE 'PCK-KEY-FUNC' TO WSS-AKEY
           ELSE
           IF PCK-COD-APCK IN PCK-FLD > SPACES
                 MOVE 'PCK-COD-APCK' TO WSS-AKEY.
           MOVE FIO-GET-NLS TO FIO-CMND.
      
           MOVE ZEROES TO TS-PCK-IDX-OCC.
      
       CIC-PRO-PCK.
           MOVE WSS-AKEY       TO FIO-AKEY.
           PERFORM GNS-FIO-PCK.
      
           MOVE 'N' TO WSS-REG-OKS.
           IF NOT FIO-STAT-OKS
               GO TO FIN-PRO-PCK.
      
           IF WSS-AKEY = SPACES AND
              PCK-COD-PENT IN PCK = PCK-COD-PENT IN PCK-FLD
              MOVE 'S' TO WSS-REG-OKS
           ELSE
           IF WSS-AKEY = 'PCK-COD-PACK' AND
              PCK-COD-PACK IN PCK = WSS-COD-PACK
                 MOVE 'S' TO WSS-REG-OKS
           ELSE
           IF WSS-AKEY = 'PCK-STP-IING'
              PERFORM FORMATO-FECHA
               IF WSS-STP-FING NOT < WSS-STP-FDES AND
                  WSS-STP-FING NOT > WSS-STP-FHAS
                  MOVE 'S' TO WSS-REG-OKS
              MOVE 'PCK2'          TO QUE-COLA
              MOVE 'OK'            TO QUE-ITEM
              MOVE +50             TO QUE-LITM
              MOVE QUE-PUT         TO QUE-CMND
              PERFORM GNX-PRO-QUE
               ELSE
                  NEXT SENTENCE
      
           ELSE
           IF WSS-AKEY = 'PCK-KEY-FUNC' AND
              PCK-COD-PFNC IN PCK = PCK-COD-PFNC IN PCK-FLD
                 MOVE 'S' TO WSS-REG-OKS
           ELSE
           IF WSS-AKEY = 'PCK-COD-APCK' AND
              PCK-COD-APCK IN PCK = PCK-COD-APCK IN PCK-FLD
                 MOVE 'S' TO WSS-REG-OKS.
      
              MOVE 'PCK3'          TO QUE-COLA.
              MOVE WSS-REG-OKS     TO QUE-ITEM.
              MOVE +50             TO QUE-LITM.
              MOVE QUE-PUT         TO QUE-CMND
              PERFORM GNX-PRO-QUE
      
           IF WSS-REG-OKS = 'N'
                GO TO FIN-PRO-PCK.
      
           ADD 1              TO TS-PCK-IDX-OCC.
           IF TS-PCK-IDX-OCC > TS-PCK-TOT-OCC
                MOVE 'S' TO FRM-COD-HMAS IN PCK-FLD
                GO TO FIN-PRO-PCK.
      
              MOVE 'PCK1'          TO QUE-COLA.
              MOVE 'ENTRO'         TO QUE-ITEM.
              MOVE +50             TO QUE-LITM
              MOVE QUE-PUT         TO QUE-CMND.
              PERFORM GNX-PRO-QUE.
      
           MOVE 'N' TO FRM-COD-HMAS IN PCK-FLD.
           MOVE TS-PCK-IDX-OCC TO FRM-NUM-TOCC IN PCK-FLD.
      
           MOVE SPACES TO TS-PCK-OCC.
      
           MOVE  PCK-COD-PENT IN PCK TO TS-PCK-PCK-COD-PENT.
      
           MOVE  PCK-COD-PACK IN PCK TO TS-PCK-PCK-COD-PACK.
      
           MOVE 'GNS' TO TAB-COD-SIST.
           MOVE 'EDC ' TO TAB-COD-TTAB IN TAB.
           MOVE PCK-COD-PENT IN PCK TO TAB-COD-CTAB IN TAB.
           PERFORM BUS-TAB.
           MOVE TAB-GLS-DESC IN TAB TO TS-PCK-FRM-GLS-PENT.
      
           MOVE  PCK-NUM-PACK IN PCK TO TS-PCK-PCK-NUM-PACK.
      
           MOVE  PCK-MSC-STAT IN PCK TO TS-PCK-PCK-MSC-STAT.
      
           MOVE 'GNS' TO TAB-COD-SIST.
           MOVE 'SPK ' TO TAB-COD-TTAB IN TAB.
           MOVE PCK-MSC-STAT IN PCK TO TAB-COD-CTAB IN TAB.
           PERFORM BUS-TAB.
           MOVE TAB-GLS-DESC IN TAB TO TS-PCK-FRM-GLS-STAT.
      
           MOVE PCK-FEC-FING IN PCK TO WSS-FEC-FAMD.
           MOVE WSS-NUM-SAMD        TO WSS-NUM-SDMA.
           MOVE WSS-NUM-AAMD        TO WSS-NUM-ADMA.
           MOVE WSS-NUM-MAMD        TO WSS-NUM-MDMA.
           MOVE WSS-NUM-DAMD        TO WSS-NUM-DDMA.
           MOVE WSS-FEC-FDMA        TO TS-PCK-PCK-FEC-FING.
      
           MOVE  PCK-HRA-HRNG IN PCK TO TS-PCK-PCK-HRA-HRNG.
      
           MOVE  PCK-COD-PFNC IN PCK TO TS-PCK-PCK-COD-PFNC.
      
           MOVE 'GNS'               TO TAB-COD-SIST.
           MOVE 'FDC'               TO TAB-COD-TTAB IN TAB.
           MOVE PCK-COD-PFNC IN PCK TO TAB-COD-CTAB IN TAB.
           PERFORM BUS-TAB.
           MOVE TAB-GLS-DESC IN TAB TO TS-PCK-FRM-GLS-PFNC.
      
           MOVE PCK-COD-APCK IN PCK TO TS-PCK-PCK-COD-APCK.
      
           MOVE PCK-COD-APCK IN PCK TO USR-COD-USER IN USR.
           PERFORM BUS-USR.
           MOVE USR-GLS-DESC IN USR TO TS-PCK-FRM-GLS-APCK.
      
           MOVE PCK-GLS-DESC IN PCK TO TS-PCK-PCK-GLS-DESC.
      
           MOVE  PCK-COD-IPYC IN PCK TO TS-PCK-PCK-COD-IPYC.
      
           MOVE  PCK-COD-ISDI IN PCK TO TS-PCK-PCK-COD-ISDI.
      
           MOVE  PCK-COD-FENT IN PCK TO TS-PCK-PCK-COD-FENT.
      
           MOVE  PCK-COD-FACK IN PCK TO TS-PCK-PCK-COD-FACK.
      
           MOVE  PCK-NUM-FACK IN PCK TO TS-PCK-PCK-NUM-FACK.
      
           MOVE  PCK-COD-SENT IN PCK TO TS-PCK-PCK-COD-SENT.
      
           MOVE  PCK-COD-SACK IN PCK TO TS-PCK-PCK-COD-SACK.
      
           MOVE  PCK-NUM-SACK IN PCK TO TS-PCK-PCK-NUM-SACK.
      
           MOVE TS-PCK-COLA-OCC TO QUE-COLA.
           MOVE TS-PCK-LITM-OCC TO QUE-LITM.
           MOVE TS-PCK-OCC      TO QUE-ITEM.
           MOVE QUE-PUT         TO QUE-CMND.
           PERFORM GNS-PRO-QUE.
           MOVE FIO-GET-NXT     TO FIO-CMND.
      
           PERFORM PUT-QUE-KEY-OPD.
      
           GO TO CIC-PRO-PCK.
      
       FIN-PRO-PCK.
           EXIT.
      
       FORMATO-FECHA SECTION.
       INI-FORMATO-FECHA.
      * FECHA/HORA  DESDE (INGRESO)
           MOVE PCK-FEC-FING IN PCK-FLD  TO WSS-FEC-FDMA.
           MOVE WSS-NUM-DDMA             TO WSS-NUM-DDES.
           MOVE WSS-NUM-MDMA             TO WSS-NUM-MDES.
           MOVE WSS-NUM-SDMA             TO WSS-NUM-SDES.
           MOVE WSS-NUM-ADMA             TO WSS-NUM-ADES.
           MOVE PCK-HRA-HRNG IN PCK-FLD  TO WSS-HRA-HDES.
      * FECHA/HORA  HASTA
           MOVE FRM-FEC-FHAS IN PCK-FLD  TO WSS-FEC-FDMA.
           MOVE WSS-NUM-DDMA             TO WSS-NUM-DHAS.
           MOVE WSS-NUM-MDMA             TO WSS-NUM-MHAS.
           MOVE WSS-NUM-SDMA             TO WSS-NUM-SHAS.
           MOVE WSS-NUM-ADMA             TO WSS-NUM-AHAS.
           MOVE FRM-HSR-HHAS IN PCK-FLD  TO WSS-HRA-HHAS.
      * FECHA B.D
           MOVE PCK-FEC-FING IN PCK      TO WSS-FEC-FING.
           MOVE PCK-HRA-HRNG IN PCK      TO WSS-HRA-HING.
       FIN-FORMATO-FECHA.
           EXIT.
      
      
      *>>>> EOF_PQ
       PUT-QUE-KEY-OPD SECTION.
       INI-PUT-QUE-KEY-OPD.
           IF SCR-OFRM-SRV
      *         MOVE PTC-OPD-TYPE TO QUE-TYPE
               MOVE TS-NPK-COLA     TO QUE-COLA
               MOVE QUE-DEL         TO QUE-CMND
               PERFORM GNS-PRO-QUE
      
      *         MOVE PTC-OPD-TYPE TO QUE-TYPE
      *         MOVE TSK-TERM-ALF TO QUE-TERM
               MOVE TS-NPK-COLA         TO QUE-COLA
               MOVE TS-NPK-LITM         TO QUE-LITM
               MOVE QUE-PUT             TO QUE-CMND
               MOVE PCK-NUM-PACK IN PCK TO TS-NPK-ITEM
               MOVE TS-NPK-ITEM         TO QUE-ITEM
               PERFORM GNS-PRO-QUE.
       FIN-PUT-QUE-KEY-OPD.
           EXIT.
*% END
*% IF EOF
      *<<<< EOF
       GNX-PRO-QUE SECTION.
       INI-GNX-PRO-QUE.
      *     IF SCR-OFRM-SRV
                PERFORM GNS-PRO-QUE.
       FIN-GNX-PRO-QUE.
           EXIT.
      
       PUT-QUE-KEY-NPCK SECTION.
       INI-PUT-QUE-KEY-NPCK.
           IF SCR-OFRM-SRV
               MOVE TS-NPK-TYPE TO QUE-TYPE
               MOVE TS-NPK-TERM TO QUE-TERM
               MOVE QUE-DEL      TO QUE-CMND
               PERFORM GNS-PRO-QUE
               MOVE TS-NPK-TYPE   TO QUE-TYPE
               MOVE TS-NPK-TERM   TO QUE-TERM
               MOVE TS-NPK-LITM   TO QUE-LITM
               MOVE QUE-PUT      TO QUE-CMND
               MOVE PCK-NUM-PACK IN PCK TO QUE-ITEM
               PERFORM GNS-PRO-QUE.
       FIN-PUT-QUE-KEY-NPCK.
           EXIT.
*% END
