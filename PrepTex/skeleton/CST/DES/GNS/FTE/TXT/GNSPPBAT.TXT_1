*%! Codigo adicional para archivo
*% IF WSS
      *<<<< WSS
       COPY TABBROFI.

       01  WSS-VARI.
           03 WSS-CPIM-BYA                             PIC 9(01).
           03 WSS-FLD-LEN        COMP                  PIC S9(04).
           03 WSS-GLS-DATO                             PIC X(20).
           03 WSS-VEC-ILEE.
              05 WSS-ILEE         OCCURS 20            PIC  X(01).
           03 WSS-VEC-ORDE.
              05 WSS-ORDE         OCCURS 20            PIC  9(02).
           03 WSS-COD-CTAB.
              05 FILLER                                PIC  X(07).
              05 WSS-NUM-CORR                          PIC  9(02).
              05 FILLER                                PIC  X(03).
           03 WSS-COD-CTAB-RED1 REDEFINES WSS-COD-CTAB.
              05 WSS-RED1-SIST                         PIC  X(03).
              05 WSS-RED1-PROG                         PIC  X(06).
              05 WSS-RED1-NUME                         PIC  9(02).
              05 FILLER                                PIC  X(01).
           03 WSS-COD-CTAB-RED2 REDEFINES WSS-COD-CTAB.
              05 WSS-RED2-SIST                         PIC  X(03).
              05 WSS-RED2-NUME                         PIC  9(02).
              05 FILLER                                PIC  X(07).
           03 WSS-COD-CTAB-RED3 REDEFINES WSS-COD-CTAB.
              05 WSS-RED3-PROG                         PIC  X(06).
              05 WSS-RED3-NUME                         PIC  9(02).
              05 FILLER                                PIC  X(03).
           03 WSS-COD-CTAB-RED4 REDEFINES WSS-COD-CTAB.
              05 WSS-RED4-NUME                         PIC  9(02).
              05 FILLER                                PIC  X(10).
           03 WSS-COD-CTAB-RED5 REDEFINES WSS-COD-CTAB.
              05 WSS-RED5-CHAR  OCCURS  12 TIMES       PIC  X(01).
           03 WSS-CPT-STRN.
              05 WSS-CPT-CHAR   OCCURS  12 TIMES       PIC  X(01).
           03 WSS-SIND.
              05 WSS-I                                 PIC  9(02).
              05 WSS-J                                 PIC  9(02).
      *
       01  QUE-VARI.
           03 QUE-COLA.
              05 QUE-TERM                              PIC  X(04).
              05 FILLER           VALUE 'CTL'          PIC  X(04).
           03 QUE-NITM       COMP VALUE +0             PIC S9(04).
           03 QUE-LITM       COMP VALUE +80            PIC S9(04).
           03 QUE-ITEM                                 PIC  X(80).
           03 CTL REDEFINES QUE-ITEM                   PIC  X(80).
           03 QUE-STAT            VALUE 'OKS'          PIC  X(03).
           03 QUE-STAT-OKS        VALUE 'OKS'          PIC  X(03).
           03 QUE-STAT-NEX        VALUE 'NEX'          PIC  X(03).
           03 QUE-STAT-EOQ        VALUE 'EOQ'          PIC  X(03).
           03 QUE-CMND                                 PIC  X(03).
           03 QUE-MENS.
              05 QUE-MEN1                              PIC  X(40).
              05 QUE-MEN2                              PIC  X(39).
       01  QUE-CTTS.
           03 QUE-PUT             VALUE 'PUT'          PIC  X(03).
           03 QUE-GET             VALUE 'GET'          PIC  X(03).
           03 QUE-DEL             VALUE 'DEL'          PIC  X(03).
      *
       01  LNK-VARI.
           03 LNK-TCMA       COMP VALUE +0             PIC S9(04).
           03 LNK-CMMA.
              05 LNK-ITEM         OCCURS 204.
                 07 FILLER                             PIC  X(08).
                 07 LNK-CARD                           PIC  X(80).
           03 LNK-NITM            VALUE 204            PIC  9(03).
           03 LNK-LITM            VALUE  88            PIC  9(02).
      *
       COPY GNSWGBIB.
      *
       COPY GNSWGEDT.
       COPY GNSWGHOY.
      *>>>>
*% END
*% IF WSS_VAX
      *<<<< WSS_VAX
       01  WSS-VSYS.
           03 WSS-1VEZ                        VALUE 'S' PIC X(01).
              88 WSS-1VEZ-YES                 VALUE 'S'.
           03 WSS-AJCL.
              05 WSS-USER                               PIC X(12).
              05 WSS-PROC                               PIC X(06).
           03 WSS-AJCL-CHR REDEFINES WSS-AJCL OCCURS 18 PIC X(01).
           03 WSS-NJCL.
              05 WSS-NJCL-CHR                 OCCURS 18 PIC X(01).
           03 WSS-ABCH                             COMP PIC S9(04).
           03 WSS-NBCH                                  PIC X(80).
           03 WSS-PBCH                                  PIC X(100).
      *ES LA SUMA DE 8 + NJCL + 1 + NBCH + 1 + PBCH
           03 WSS-CMN2                                  PIC X(208).
       01  DCL-VARI          EXTERNAL.
           03 DCL-CMN1                                  PIC X(60).
           03 DCL-CMN2                                  PIC X(255).
           03 DCL-IWRT                                  PIC 9(01).
              88 DCL-IWRT-NOT                 VALUE 0.
              88 DCL-IWRT-YES                 VALUE 1.
      * Variables para compactar blancos de un string de caracteres
       01  CPT-VARI.
      *JSS 03 CPT-STRN                            PIC X(100).
           03 CPT-STRN                            PIC X(208).
           03 CPT-STRN-RED REDEFINES CPT-STRN     PIC  X(01)
                           OCCURS 208.
           03 CPT-LENG                  VALUE 208 PIC  9(03).
           03 CPT-IBLK                            PIC  X(01).
              88 CPT-PONGO-BLANCO       VALUE 'S'.
           03 CPT-UBLK                  VALUE 0   PIC  9(03).
           03 CPT-I                     VALUE 0   PIC  9(03).
           03 CPT-J                     VALUE 0   PIC  9(03).
      *>>>>
*% END
*% IF INI_FIO_VAX
      *<<<< INI_FIO_VAX
           CALL 'LIB$GET_SYMBOL'           USING
                 BY DESCRIPTOR           'GNS$PRY'
                                         SCR-SISG.

           CALL 'LIB$GET_SYMBOL'           USING
                 BY DESCRIPTOR           'GNS$OPR'
                                         WSS-USER.

           CALL 'LIB$SYS_TRNLOG'           USING
                 BY DESCRIPTOR           'BCH'
                 BY REFERENCE            WSS-ABCH
                 BY DESCRIPTOR           WSS-NBCH.

           MOVE SPACES  TO FIO-VOID.
           MOVE 'GNS'   TO FIO-SIST.
           MOVE 'TAB'   TO FIO-FNAM.
           MOVE FIO-VID TO FIO-CMND.
           PERFORM GNS-FIO-MSG.

           IF SCR-SISG NOT = 'GNS'
               MOVE SPACES   TO FIO-VOID
               MOVE SCR-SISG TO FIO-SIST
               MOVE 'TAB'    TO FIO-FNAM
               MOVE FIO-VID  TO FIO-CMND
               PERFORM GNS-FIO-TAB
               MOVE FIO-ACCS-UPD TO FIO-ACCS
               MOVE FIO-ACC      TO FIO-CMND
               PERFORM GNS-FIO-TAB
               MOVE FIO-INP      TO FIO-CMND
               PERFORM GNS-FIO-TAB.

           MOVE 'GNS'     TO FIO-SIST.
           MOVE 'PRM'     TO TAB-COD-TTAB IN TAB.
           MOVE 'BATUCMD' TO TAB-COD-CTAB IN TAB.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM GNS-FIO-TAB.
           IF FIO-STAT-OKS
               STRING TAB-GLS-DESC TAB-GLS-DATA DELIMITED BY SIZE
                      INTO DCL-CMN1
           ELSE
               MOVE SPACES TO DCL-CMN1.

           MOVE 0 TO DCL-IWRT.
      *    MOVE '$ DELETE/NOCONFIRM/NOLOG BCH:;' TO DCL-CMN1.
           MOVE 'SUB BCH CTL' TO DCL-CMN2.
           MOVE 'BCH' TO FIO-VOID.
           MOVE FIO-VID TO FIO-CMND.
           PERFORM GNS-FIO-CTL.
           MOVE FIO-OUT TO FIO-CMND.
           PERFORM GNS-FIO-CTL.
           MOVE '$ ''BAT''' TO CTL.
           MOVE FIO-PUT TO FIO-CMND.
           PERFORM GNS-FIO-CTL.

           MOVE 'GNS'     TO FIO-SIST.
           MOVE 'PRM'     TO TAB-COD-TTAB IN TAB.
           MOVE 'BATPCMD' TO TAB-COD-CTAB IN TAB.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM GNS-FIO-TAB.
           IF FIO-STAT-OKS AND
              TAB-GLS-DESC > SPACES AND TAB-GLS-DATA > SPACES
               STRING TAB-GLS-DESC TAB-GLS-DATA DELIMITED BY SIZE
                      INTO CTL
               MOVE FIO-PUT TO FIO-CMND
               PERFORM GNS-FIO-CTL.
      *>>>>
*% END
*% IF INI_SCR_PGM
      *<<<< INI_SCR_PGM
           IF SCR-INST = SCR-INST-HKY
               MOVE SPACES TO FRM-MENS
               PERFORM SCR-RST
               PERFORM SCR-TRL.
           IF SCR-INST = SCR-INST-GCS
               PERFORM GET-ACC
           ELSE
           IF SCR-INST = SCR-INST-GAB OR SCR-INST = SCR-INST-GFL
               PERFORM GET-CON
               MOVE SCR-INST-HCM TO SCR-INST.
           GO TO TRL-SCR-PGM.
      *>>>>
*% END
*% IF FND_KEY
      *<<<< FND_KEY
           MOVE SCR-SISG TO FIO-SIST.
           MOVE SPACES   TO BAT-COD-TRYC.
      *>>>>
*% END
*% IF PUT_SCR
      *<<<< PUT_SCR
           IF NOT WSS-1VEZ-YES
               GO TO CON-PUT-SCR.

           MOVE SPACES TO WSS-PBCH.
      *
           MOVE SCR-SISG  TO FIO-SIST.
           MOVE 'PRM'     TO TAB-COD-TTAB IN TAB.
           MOVE SPACES    TO TAB-COD-CTAB IN TAB.
           STRING 'BATQSB' BAT-COD-PROC IN BAT DELIMITED BY SIZE INTO
                             TAB-COD-CTAB IN TAB.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM GNS-FIO-TAB.
           IF FIO-STAT-OKS AND ( TAB-MSC-STAT NOT = 'N' )
               STRING TAB-GLS-DESC TAB-GLS-DATA DELIMITED BY SIZE
                      INTO WSS-PBCH
           ELSE
               MOVE SCR-SISG  TO FIO-SIST
               MOVE 'PRM'     TO TAB-COD-TTAB IN TAB
               MOVE 'BATQSB'  TO TAB-COD-CTAB IN TAB
               MOVE FIO-GET-KEY TO FIO-CMND
               PERFORM GNS-FIO-TAB
               IF FIO-STAT-OKS AND ( TAB-MSC-STAT NOT = 'N' )
                   STRING TAB-GLS-DESC TAB-GLS-DATA DELIMITED BY SIZE
                          INTO WSS-PBCH.
      *
           MOVE BAT-COD-PROC IN BAT TO WSS-PROC.
           MOVE SPACES TO WSS-NJCL.
           MOVE 1 TO WSS-I.
           MOVE 1 TO WSS-J.
       LUP-PUT-SCR.
           IF WSS-AJCL-CHR(WSS-I) > SPACES
               MOVE WSS-AJCL-CHR(WSS-I) TO WSS-NJCL-CHR(WSS-J)
               ADD 1 TO WSS-J.
           ADD 1 TO WSS-I.
           IF WSS-I NOT > 18
               GO TO LUP-PUT-SCR.
           STRING 'SUB BCH ' WSS-NJCL ' ' WSS-NBCH ' ' WSS-PBCH
                  DELIMITED BY SIZE INTO WSS-CMN2.

           MOVE WSS-CMN2 TO CPT-STRN.
           PERFORM CPT-BLKS.
           MOVE CPT-STRN TO WSS-CMN2.

           MOVE WSS-CMN2 TO DCL-CMN2.
           MOVE 'N' TO WSS-1VEZ.
       CON-PUT-SCR.
           MOVE BAT-COD-PROC IN BAT TO BAT-COD-PROC IN JCL-FLD.
           MOVE BAT-COD-CLVE IN BAT TO FRM-COD-CLVE IN JCL-FLD.
           MOVE BAT-NUM-NEJM IN BAT TO FRM-NUM-NEJM IN JCL-FLD.
           MOVE BAT-IND-IDEL IN BAT TO FRM-IND-IDEL IN JCL-FLD.
           MOVE BAT-IND-IGIA IN BAT TO FRM-IND-IGIA IN JCL-FLD.
           MOVE BAT-COD-DEST IN BAT TO FRM-COD-DEST IN JCL-FLD.
           MOVE BAT-COD-CLSE IN BAT TO FRM-COD-CLSE IN JCL-FLD.
           MOVE BAT-COD-FORM IN BAT TO FRM-COD-FORM IN JCL-FLD.
      *    MOVE BAT-GLS-NFRM IN BAT TO FRM-GLS-NFRM IN JCL-FLD.
      *    MOVE BAT-GLS-LFRM IN BAT TO FRM-GLS-LFRM IN JCL-FLD.
      *    MOVE BAT-IND-IPRV IN BAT TO FRM-IND-IPRV IN JCL-FLD.
           MOVE 1 TO FRM-IFLD.
       LUP-PUT-ILEE.
           MOVE BAT-IND-ILEE IN BAT(FRM-IFLD) TO
                FRM-IND-ILEE IN JCL-FLD(FRM-IFLD).
           IF FRM-IFLD NOT > 8
               MOVE BAT-IND-PLNT IN BAT(FRM-IFLD) TO
                    FRM-IND-PLNT IN JCL-FLD(FRM-IFLD).
           ADD 1 TO FRM-IFLD.
           IF FRM-IFLD NOT > 20
               GO TO LUP-PUT-ILEE.

           MOVE 'B' TO BAT-COD-TRYC.
           MOVE SCR-SISG    TO FIO-SIST.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM GNS-FIO-BAT.
           IF FIO-STAT-OKS
               MOVE BAT-GLS-GLSA IN BAT TO FRM-GLS-GLSA IN JCL-FLD
               MOVE BAT-GLS-NRPT IN BAT TO FRM-GLS-NRPT IN JCL-FLD
           ELSE
               MOVE SPACES TO FRM-GLS-GLSA IN JCL-FLD
               MOVE SPACES TO FRM-GLS-NRPT IN JCL-FLD.
      *>>>>
*% END
*% IF ABT_CMN_ACC
      *<<<< ABT_CMN_ACC
               MOVE 'GNS' TO MSG-COD-SIST
               MOVE 'BATACC INGNO' TO MSG-COD-MENS
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS
      *>>>>
*% END
*% IF INI_CMN_ACC
      *<<<< INI_CMN_ACC
           GO TO CON-CMN-ACC.
      *>>>>
*% END
*% IF CMN_ACC
      *<<<< CMN_ACC
       CON-CMN-ACC.
           PERFORM CHK-QUEU.
           IF QUE-STAT = QUE-STAT-NEX
               MOVE 'BATHDOS' TO BIB-BIBL
               MOVE 'GNS'     TO BIB-SIST
               PERFORM GEN-BIB.

           MOVE BAT-COD-PROC IN JCL-FLD TO BAT-COD-PROC IN BAT.
           MOVE SPACES TO BAT-COD-TRYC.
           MOVE SCR-SISG    TO FIO-SIST.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM GNS-FIO-BAT.
           MOVE BAT-VEC-ILEE TO WSS-VEC-ILEE.

           PERFORM RET-ALL-JCL.
           MOVE 'C' TO BAT-COD-TRYC.
           MOVE SCR-SISG    TO FIO-SIST.
           MOVE FIO-FND-NLS TO FIO-CMND.
           PERFORM GNS-FIO-BAT.
           IF FIO-STAT-OKS

               MOVE 'BATHCMD' TO BIB-BIBL
               MOVE 'GNS'     TO BIB-SIST
               PERFORM GEN-BIB

               PERFORM PUT-CMN
               MOVE SCR-SISG    TO FIO-SIST
               MOVE FIO-END-BRW TO FIO-CMND
               PERFORM GNS-FIO-BAT

               MOVE 'BATTCMD' TO BIB-BIBL
               MOVE 'GNS'     TO BIB-SIST
               PERFORM GEN-BIB

               MOVE 'BATACC INGOK' TO MSG-COD-MENS
           ELSE
               MOVE 'BATACC INGNK' TO MSG-COD-MENS.
           MOVE 'GNS' TO MSG-COD-SIST.
           PERFORM GET-MSG.
           MOVE MSG-GLS-DESC TO FRM-MENS.
      *>>>>
*% END
*% IF CMN_PGM
      *<<<< CMN_PGM
           IF NOT ( SCR-VFLD = SCR-VFLD-NOT OR SCR-STAT = SCR-STAT-ABT )
               GO TO CON-CMN-PGM.
           IF SCR-CMND = 'SUB'
               MOVE 'BATPGM SUBNO' TO MSG-COD-MENS
           ELSE
           IF SCR-CMND = 'DEL'
               MOVE 'BATPGM DELNO' TO MSG-COD-MENS
           ELSE
               MOVE 'BATPGM ???NO' TO MSG-COD-MENS.
           GO TO MSG-CMN-PGM.

       CON-CMN-PGM.
           IF NOT ( SCR-CMND = 'DEL' OR 'SUB' )
               MOVE 'BATPGM ???NP' TO MSG-COD-MENS
               GO TO MSG-CMN-PGM.

           IF SCR-CMND = 'DEL'

               MOVE QUE-DEL TO QUE-CMND
               PERFORM GNS-PRO-QUE

               IF QUE-STAT = QUE-STAT-OKS
                   MOVE 'BATPGM DELOK' TO MSG-COD-MENS
                   GO TO MSG-CMN-PGM
               ELSE
                   MOVE 'BATPGM DELNX' TO MSG-COD-MENS
                   GO TO MSG-CMN-PGM.

           PERFORM CHK-QUEU.
           IF QUE-STAT = QUE-STAT-NEX
               MOVE 'BATPGM SUBNX' TO MSG-COD-MENS
               GO TO MSG-CMN-PGM.

           MOVE 'BATTDOS' TO BIB-BIBL.
           MOVE 'GNS'     TO BIB-SIST.
           PERFORM GEN-BIB.

      *     PERFORM GEN-CMA VARYING QUE-NITM FROM 1 BY 1
      *          UNTIL QUE-NITM > LNK-NITM OR QUE-STAT NOT = QUE-STAT-OKS.

      *     SUBTRACT 1 FROM QUE-NITM.
      *     COMPUTE LNK-TCMA = LNK-LITM  * QUE-NITM.
           PERFORM LNK-BSM.

      *     MOVE QUE-DEL TO QUE-CMND.
      *     PERFORM GNS-PRO-QUE.

           MOVE 'BATPGM SUBOK' TO MSG-COD-MENS.

       MSG-CMN-PGM.
           MOVE 'GNS' TO MSG-COD-SIST.
           PERFORM GET-MSG.
           MOVE MSG-GLS-DESC TO FRM-MENS.
           MOVE SCR-INST-HCM TO SCR-INST.
           GO TO FIN-CMN-PGM.
      *>>>>
*% END
*% IF FIN_HBL_FLD
      *<<<< FIN_HBL_FLD
           PERFORM UNP-PLNT.
           PERFORM UNP-DATO VARYING FRM-IFLD FROM 1 BY 1 UNTIL
                                                         FRM-IFLD > 20.
      *>>>>
*% END
*% IF EOF
      *<<<< EOF
       ELIMINA-BLANCOS SECTION.
       INI-ELIMINA-BLANCOS.
           MOVE ZEROS  TO WSS-I.
           MOVE ZEROS  TO WSS-J.
           MOVE SPACES TO WSS-CPT-STRN.
       LUP-ELIMINA-BLANCOS.
           ADD 1 TO WSS-I.
           IF WSS-RED5-CHAR (WSS-I) > SPACES
              ADD 1 TO WSS-J
              MOVE WSS-RED5-CHAR (WSS-I) TO WSS-CPT-CHAR (WSS-J).
           IF WSS-I < 12
               GO TO LUP-ELIMINA-BLANCOS.
           MOVE WSS-CPT-STRN TO WSS-COD-CTAB.
       FIN-ELIMINA-BLANCOS.
           EXIT.

       UNP-PLNT SECTION.
       INI-UNP-PLNT.
           IF FRM-IND-PLNT IN JCL-FLD( 1 ) = 'N'
               MOVE FRM-CPIM-AEY TO FRM-COD-CLVE-ATR
               MOVE 0            TO FRM-COD-CLVE-LEN
           ELSE
               MOVE FRM-CPIM-UBY TO FRM-COD-CLVE-ATR
               MOVE -1           TO FRM-COD-CLVE-LEN.

           IF FRM-IND-PLNT IN JCL-FLD( 2 ) = 'N'
               MOVE FRM-CPIM-AEY TO FRM-IND-IGIA-ATR
               MOVE 0            TO FRM-IND-IGIA-LEN
           ELSE
               MOVE FRM-CPIM-UBY TO FRM-IND-IGIA-ATR
               MOVE -1           TO FRM-IND-IGIA-LEN.

           IF FRM-IND-PLNT IN JCL-FLD( 3 ) = 'N'
               MOVE FRM-CPIM-AEY TO FRM-GLS-GLSA-ATR
               MOVE 0            TO FRM-GLS-GLSA-LEN
           ELSE
               MOVE FRM-CPIM-UBY TO FRM-GLS-GLSA-ATR
               MOVE -1           TO FRM-GLS-GLSA-LEN.

           IF FRM-IND-PLNT IN JCL-FLD( 4 ) = 'N'
               MOVE FRM-CPIM-AEY TO FRM-NUM-NEJM-ATR
               MOVE 0            TO FRM-NUM-NEJM-LEN
           ELSE
               MOVE FRM-CPIM-UBY TO FRM-NUM-NEJM-ATR
               MOVE -1           TO FRM-NUM-NEJM-LEN.

           IF FRM-IND-PLNT IN JCL-FLD( 5 ) = 'N'
               MOVE FRM-CPIM-AEY TO FRM-IND-IDEL-ATR
               MOVE 0            TO FRM-IND-IDEL-LEN
           ELSE
               MOVE FRM-CPIM-UBY TO FRM-IND-IDEL-ATR
               MOVE -1           TO FRM-IND-IDEL-LEN.

           MOVE -1 TO FRM-IND-RRPT-LEN.

           IF FRM-IND-PLNT IN JCL-FLD( 6 ) = 'N'
               MOVE FRM-CPIM-AEY TO FRM-COD-DEST-ATR
               MOVE 0            TO FRM-COD-DEST-LEN
           ELSE
               MOVE  0           TO FRM-IND-RRPT-LEN
               MOVE FRM-CPIM-UBY TO FRM-COD-DEST-ATR
               MOVE -1           TO FRM-COD-DEST-LEN.

           IF FRM-IND-PLNT IN JCL-FLD( 7 ) = 'N'
               MOVE FRM-CPIM-AEY TO FRM-COD-CLSE-ATR
               MOVE 0            TO FRM-COD-CLSE-LEN
           ELSE
               MOVE  0           TO FRM-IND-RRPT-LEN
               MOVE FRM-CPIM-UBY TO FRM-COD-CLSE-ATR
               MOVE -1           TO FRM-COD-CLSE-LEN.

           IF FRM-IND-PLNT IN JCL-FLD( 8 ) = 'N'
               MOVE FRM-CPIM-AEY TO FRM-COD-FORM-ATR
               MOVE 0            TO FRM-COD-FORM-LEN
           ELSE
               MOVE  0           TO FRM-IND-RRPT-LEN
               MOVE FRM-CPIM-UBY TO FRM-COD-FORM-ATR
               MOVE -1           TO FRM-COD-FORM-LEN.
       FIN-UNP-PLNT.
           EXIT.

       UNP-DATO SECTION.
       INI-UNP-DATO.
           IF NOT ( FRM-IND-ILEE IN JCL-FLD( FRM-IFLD ) NOT = '0' AND
                  FRM-IND-ILEE IN JCL-FLD( FRM-IFLD ) > SPACES )
               MOVE FRM-CPIM-AEY TO WSS-CPIM-BYA
               PERFORM PYD-IFLD
               MOVE 0            TO WSS-FLD-LEN
               PERFORM CRS-IFLD
               GO TO FIN-UNP-DATO.

           MOVE FRM-CPIM-UBY TO WSS-CPIM-BYA.
           PERFORM PYD-IFLD.
           MOVE  0           TO FRM-IND-RRPT-LEN.
           MOVE  -1          TO WSS-FLD-LEN.
           PERFORM CRS-IFLD.
      *AQUI BUSCA CON EL CODIGO SISTEMA, PROGRAMA, NUMERO
           MOVE SPACES                  TO WSS-COD-CTAB.
           MOVE SCR-SISG                TO WSS-RED1-SIST.
           MOVE BAT-COD-PROC IN JCL-FLD TO WSS-RED1-PROG.
           MOVE FRM-IFLD                TO WSS-RED1-NUME.
           PERFORM ELIMINA-BLANCOS.
           MOVE SCR-SISG     TO TAB-COD-SIST FIO-SIST.
           MOVE 'GPB'        TO TAB-COD-TTAB IN TAB.
           MOVE WSS-COD-CTAB TO TAB-COD-CTAB IN TAB.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM GNS-FIO-TAB.
           IF ( FIO-STAT-OKS ) AND ( TAB-MSC-STAT IN TAB NOT = 'N' )
               MOVE TAB-GLS-DESC TO WSS-GLS-DATO
               PERFORM GLS-IFLD
               GO TO FIN-UNP-DATO.
      *AQUI BUSCA CON EL CODIGO SISTEMA, NUMERO
           MOVE SPACES                  TO WSS-COD-CTAB.
           MOVE SCR-SISG                TO WSS-RED2-SIST.
           MOVE FRM-IFLD                TO WSS-RED2-NUME.
           MOVE SCR-SISG     TO TAB-COD-SIST FIO-SIST.
           MOVE 'GPB'        TO TAB-COD-TTAB IN TAB.
           MOVE WSS-COD-CTAB TO TAB-COD-CTAB IN TAB.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM GNS-FIO-TAB.
           IF ( FIO-STAT-OKS ) AND ( TAB-MSC-STAT IN TAB NOT = 'N' )
               MOVE TAB-GLS-DESC TO WSS-GLS-DATO
               PERFORM GLS-IFLD
               GO TO FIN-UNP-DATO.
      *AQUI BUSCA CON EL CODIGO PROGRAMA, NUMERO
           MOVE SPACES                  TO WSS-COD-CTAB.
           MOVE BAT-COD-PROC IN JCL-FLD TO WSS-RED3-PROG.
           MOVE FRM-IFLD                TO WSS-RED3-NUME.
           PERFORM ELIMINA-BLANCOS.
           MOVE SCR-SISG     TO TAB-COD-SIST FIO-SIST.
           MOVE 'GPB'        TO TAB-COD-TTAB IN TAB.
           MOVE WSS-COD-CTAB TO TAB-COD-CTAB IN TAB.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM GNS-FIO-TAB.
           IF ( FIO-STAT-OKS ) AND ( TAB-MSC-STAT IN TAB NOT = 'N' )
               MOVE TAB-GLS-DESC TO WSS-GLS-DATO
               PERFORM GLS-IFLD
               GO TO FIN-UNP-DATO.
      *AQUI BUSCA CON EL CODIGO NUMERO
           MOVE SPACES                  TO WSS-COD-CTAB.
           MOVE FRM-IFLD                TO WSS-RED4-NUME.
           MOVE SCR-SISG     TO TAB-COD-SIST FIO-SIST.
           MOVE 'GPB'        TO TAB-COD-TTAB IN TAB.
           MOVE WSS-COD-CTAB TO TAB-COD-CTAB IN TAB.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM GNS-FIO-TAB.
           IF ( FIO-STAT-OKS ) AND ( TAB-MSC-STAT IN TAB NOT = 'N' )
               MOVE TAB-GLS-DESC TO WSS-GLS-DATO
               PERFORM GLS-IFLD
               GO TO FIN-UNP-DATO.
      *BUSCA CON 'BAT    ' + NUMERO
           MOVE SPACES    TO WSS-COD-CTAB.
           MOVE 'BAT    ' TO WSS-COD-CTAB.
           MOVE FRM-IFLD  TO WSS-NUM-CORR.
           MOVE SCR-SISG     TO TAB-COD-SIST FIO-SIST.
           MOVE 'FRM'        TO TAB-COD-TTAB IN TAB.
           MOVE WSS-COD-CTAB TO TAB-COD-CTAB IN TAB.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM GNS-FIO-TAB.
           IF ( FIO-STAT-OKS ) AND ( TAB-MSC-STAT IN TAB NOT = 'N' )
               MOVE TAB-GLS-DESC TO WSS-GLS-DATO
               PERFORM GLS-IFLD
               GO TO FIN-UNP-DATO.
      *
           MOVE SPACES TO WSS-GLS-DATO
           PERFORM GLS-IFLD.
       FIN-UNP-DATO.
           EXIT.

       PYD-IFLD SECTION.
       INI-PYD-IFLD.
           IF FRM-IFLD = 1
               MOVE WSS-CPIM-BYA TO FRM-DAT-DATO01-ATR
           ELSE
           IF FRM-IFLD = 2
               MOVE WSS-CPIM-BYA TO FRM-DAT-DATO02-ATR
           ELSE
           IF FRM-IFLD = 3
               MOVE WSS-CPIM-BYA TO FRM-DAT-DATO03-ATR
           ELSE
           IF FRM-IFLD = 4
               MOVE WSS-CPIM-BYA TO FRM-DAT-DATO04-ATR
           ELSE
           IF FRM-IFLD = 5
               MOVE WSS-CPIM-BYA TO FRM-DAT-DATO05-ATR
           ELSE
           IF FRM-IFLD = 6
               MOVE WSS-CPIM-BYA TO FRM-DAT-DATO06-ATR
           ELSE
           IF FRM-IFLD = 7
               MOVE WSS-CPIM-BYA TO FRM-DAT-DATO07-ATR
           ELSE
           IF FRM-IFLD = 8
               MOVE WSS-CPIM-BYA TO FRM-DAT-DATO08-ATR
           ELSE
           IF FRM-IFLD = 9
               MOVE WSS-CPIM-BYA TO FRM-DAT-DATO09-ATR
           ELSE
           IF FRM-IFLD = 10
               MOVE WSS-CPIM-BYA TO FRM-DAT-DATO10-ATR
           ELSE
           IF FRM-IFLD = 11
               MOVE WSS-CPIM-BYA TO FRM-DAT-DATO11-ATR
           ELSE
           IF FRM-IFLD = 12
               MOVE WSS-CPIM-BYA TO FRM-DAT-DATO12-ATR
           ELSE
           IF FRM-IFLD = 13
               MOVE WSS-CPIM-BYA TO FRM-DAT-DATO13-ATR
           ELSE
           IF FRM-IFLD = 14
               MOVE WSS-CPIM-BYA TO FRM-DAT-DATO14-ATR
           ELSE
           IF FRM-IFLD = 15
               MOVE WSS-CPIM-BYA TO FRM-DAT-DATO15-ATR
           ELSE
           IF FRM-IFLD = 16
               MOVE WSS-CPIM-BYA TO FRM-DAT-DATO16-ATR
           ELSE
           IF FRM-IFLD = 17
               MOVE WSS-CPIM-BYA TO FRM-DAT-DATO17-ATR
           ELSE
           IF FRM-IFLD = 18
               MOVE WSS-CPIM-BYA TO FRM-DAT-DATO18-ATR
           ELSE
           IF FRM-IFLD = 19
               MOVE WSS-CPIM-BYA TO FRM-DAT-DATO19-ATR
           ELSE
           IF FRM-IFLD = 20
               MOVE WSS-CPIM-BYA TO FRM-DAT-DATO20-ATR.
       FIN-PYD-IFLD.
           EXIT.


       CRS-IFLD SECTION.
       INI-CRS-IFLD.
           IF FRM-IFLD = 1
               MOVE WSS-FLD-LEN TO FRM-DAT-DATO01-LEN
           ELSE
           IF FRM-IFLD = 2
               MOVE WSS-FLD-LEN TO FRM-DAT-DATO02-LEN
           ELSE
           IF FRM-IFLD = 3
               MOVE WSS-FLD-LEN TO FRM-DAT-DATO03-LEN
           ELSE
           IF FRM-IFLD = 4
               MOVE WSS-FLD-LEN TO FRM-DAT-DATO04-LEN
           ELSE
           IF FRM-IFLD = 5
               MOVE WSS-FLD-LEN TO FRM-DAT-DATO05-LEN
           ELSE
           IF FRM-IFLD = 6
               MOVE WSS-FLD-LEN TO FRM-DAT-DATO06-LEN
           ELSE
           IF FRM-IFLD = 7
               MOVE WSS-FLD-LEN TO FRM-DAT-DATO07-LEN
           ELSE
           IF FRM-IFLD = 8
               MOVE WSS-FLD-LEN TO FRM-DAT-DATO08-LEN
           ELSE
           IF FRM-IFLD = 9
               MOVE WSS-FLD-LEN TO FRM-DAT-DATO09-LEN
           ELSE
           IF FRM-IFLD = 10
               MOVE WSS-FLD-LEN TO FRM-DAT-DATO10-LEN
           ELSE
           IF FRM-IFLD = 11
               MOVE WSS-FLD-LEN TO FRM-DAT-DATO11-LEN
           ELSE
           IF FRM-IFLD = 12
               MOVE WSS-FLD-LEN TO FRM-DAT-DATO12-LEN
           ELSE
           IF FRM-IFLD = 13
               MOVE WSS-FLD-LEN TO FRM-DAT-DATO13-LEN
           ELSE
           IF FRM-IFLD = 14
               MOVE WSS-FLD-LEN TO FRM-DAT-DATO14-LEN
           ELSE
           IF FRM-IFLD = 15
               MOVE WSS-FLD-LEN TO FRM-DAT-DATO15-LEN
           ELSE
           IF FRM-IFLD = 16
               MOVE WSS-FLD-LEN TO FRM-DAT-DATO16-LEN
           ELSE
           IF FRM-IFLD = 17
               MOVE WSS-FLD-LEN TO FRM-DAT-DATO17-LEN
           ELSE
           IF FRM-IFLD = 18
               MOVE WSS-FLD-LEN TO FRM-DAT-DATO18-LEN
           ELSE
           IF FRM-IFLD = 19
               MOVE WSS-FLD-LEN TO FRM-DAT-DATO19-LEN
           ELSE
           IF FRM-IFLD = 20
               MOVE WSS-FLD-LEN TO FRM-DAT-DATO20-LEN.
       FIN-CRS-IFLD.
           EXIT.

       GLS-IFLD SECTION.
       INI-GLS-IFLD.
           IF FRM-IFLD = 1
               MOVE WSS-GLS-DATO TO FRM-GLS-DATO01
           ELSE
           IF FRM-IFLD = 2
               MOVE WSS-GLS-DATO TO FRM-GLS-DATO02
           ELSE
           IF FRM-IFLD = 3
               MOVE WSS-GLS-DATO TO FRM-GLS-DATO03
           ELSE
           IF FRM-IFLD = 4
               MOVE WSS-GLS-DATO TO FRM-GLS-DATO04
           ELSE
           IF FRM-IFLD = 5
               MOVE WSS-GLS-DATO TO FRM-GLS-DATO05
           ELSE
           IF FRM-IFLD = 6
               MOVE WSS-GLS-DATO TO FRM-GLS-DATO06
           ELSE
           IF FRM-IFLD = 7
               MOVE WSS-GLS-DATO TO FRM-GLS-DATO07
           ELSE
           IF FRM-IFLD = 8
               MOVE WSS-GLS-DATO TO FRM-GLS-DATO08
           ELSE
           IF FRM-IFLD = 9
               MOVE WSS-GLS-DATO TO FRM-GLS-DATO09
           ELSE
           IF FRM-IFLD = 10
               MOVE WSS-GLS-DATO TO FRM-GLS-DATO10
           ELSE
           IF FRM-IFLD = 11
               MOVE WSS-GLS-DATO TO FRM-GLS-DATO11
           ELSE
           IF FRM-IFLD = 12
               MOVE WSS-GLS-DATO TO FRM-GLS-DATO12
           ELSE
           IF FRM-IFLD = 13
               MOVE WSS-GLS-DATO TO FRM-GLS-DATO13
           ELSE
           IF FRM-IFLD = 14
               MOVE WSS-GLS-DATO TO FRM-GLS-DATO14
           ELSE
           IF FRM-IFLD = 15
               MOVE WSS-GLS-DATO TO FRM-GLS-DATO15
           ELSE
           IF FRM-IFLD = 16
               MOVE WSS-GLS-DATO TO FRM-GLS-DATO16
           ELSE
           IF FRM-IFLD = 17
               MOVE WSS-GLS-DATO TO FRM-GLS-DATO17
           ELSE
           IF FRM-IFLD = 18
               MOVE WSS-GLS-DATO TO FRM-GLS-DATO18
           ELSE
           IF FRM-IFLD = 19
               MOVE WSS-GLS-DATO TO FRM-GLS-DATO19
           ELSE
           IF FRM-IFLD = 20
               MOVE WSS-GLS-DATO TO FRM-GLS-DATO20.
       FIN-GLS-IFLD.
           EXIT.

       PUT-CMN SECTION.
       INI-PUT-CMN.
           MOVE SCR-SISG    TO FIO-SIST.
           MOVE FIO-GET-NXT TO FIO-CMND.
           PERFORM GNS-FIO-BAT.
           IF NOT ( FIO-STAT-OKS AND
                    BAT-COD-PROC IN BAT = BAT-COD-PROC IN JCL-FLD AND
                    BAT-COD-TREG = 'C' )
               GO TO FIN-PUT-CMN.

           IF BAT-GLS-CMND IN BAT NOT > SPACES
               GO TO INI-PUT-CMN.

           MOVE BAT-GLS-CMND TO EDT-STRN.
           PERFORM EDT-CARD.
           MOVE EDT-STRN TO QUE-ITEM.

           IF QUE-ITEM NOT > SPACES
               GO TO INI-PUT-CMN.

           IF BAT-IND-TCMN IN BAT = 'G'
               MOVE QUE-ITEM TO BIB-BIBL
               MOVE 'GNS'    TO BIB-SIST
               PERFORM GEN-BIB
               GO TO INI-PUT-CMN.

           IF BAT-IND-TCMN IN BAT = 'B'
               MOVE QUE-ITEM TO BIB-BIBL
               MOVE SCR-SISG TO BIB-SIST
               PERFORM GEN-BIB
               GO TO INI-PUT-CMN.

           MOVE QUE-PUT TO QUE-CMND.
           PERFORM GNS-PRO-QUE.

           IF BAT-IND-TCMN IN BAT = 'D' OR 'M'
              PERFORM PUT-DATA.
           GO TO INI-PUT-CMN.
       FIN-PUT-CMN.
           EXIT.

       PUT-DATA SECTION.
       INI-PUT-DATA.
           MOVE ZEROES TO WSS-VEC-ORDE.
           PERFORM VER-ORD VARYING WSS-I FROM 1 BY 1 UNTIL WSS-I > 20.
           PERFORM MOV-ORD VARYING WSS-J FROM 1 BY 1 UNTIL WSS-J > 20.
       FIN-PUT-DATA.
           EXIT.

       VER-ORD SECTION.
       INI-VER-ORD.
           IF WSS-ILEE(WSS-I) NOT = '0' AND WSS-ILEE(WSS-I) > SPACES
               PERFORM CON-NUM
               MOVE WSS-I TO WSS-ORDE(WSS-J).
       FIN-VER-ORD.
           EXIT.

       CON-NUM SECTION.
       INI-CON-NUM.
           IF WSS-ILEE(WSS-I) IS NUMERIC
               MOVE WSS-ILEE(WSS-I) TO WSS-J
               GO TO FIN-CON-NUM.
           IF WSS-ILEE(WSS-I) = 'A' MOVE 10 TO WSS-J
           ELSE
           IF WSS-ILEE(WSS-I) = 'B' MOVE 11 TO WSS-J
           ELSE
           IF WSS-ILEE(WSS-I) = 'C' MOVE 12 TO WSS-J
           ELSE
           IF WSS-ILEE(WSS-I) = 'D' MOVE 13 TO WSS-J
           ELSE
           IF WSS-ILEE(WSS-I) = 'E' MOVE 14 TO WSS-J
           ELSE
           IF WSS-ILEE(WSS-I) = 'F' MOVE 15 TO WSS-J
           ELSE
           IF WSS-ILEE(WSS-I) = 'G' MOVE 16 TO WSS-J
           ELSE
           IF WSS-ILEE(WSS-I) = 'H' MOVE 17 TO WSS-J
           ELSE
           IF WSS-ILEE(WSS-I) = 'I' MOVE 18 TO WSS-J
           ELSE
           IF WSS-ILEE(WSS-I) = 'J' MOVE 19 TO WSS-J
           ELSE
           IF WSS-ILEE(WSS-I) = 'K' MOVE 20 TO WSS-J.
       FIN-CON-NUM.
           EXIT.

       MOV-ORD SECTION.
       INI-MOV-ORD.
           IF WSS-ORDE(WSS-J) NOT = 0
               MOVE WSS-ORDE(WSS-J) TO WSS-I
               IF WSS-ILEE(WSS-I) NOT = '0' AND WSS-ILEE(WSS-I) > SPACES
                   PERFORM QUE-IFLD

                   MOVE QUE-PUT TO QUE-CMND
                   PERFORM GNS-PRO-QUE.
       FIN-MOV-ORD.
           EXIT.

       QUE-IFLD SECTION.
       INI-QUE-IFLD.
           IF WSS-I = 1
               MOVE FRM-DAT-DATO01 TO QUE-ITEM
           ELSE
           IF WSS-I = 2
               MOVE FRM-DAT-DATO02 TO QUE-ITEM
           ELSE
           IF WSS-I = 3
               MOVE FRM-DAT-DATO03 TO QUE-ITEM
           ELSE
           IF WSS-I = 4
               MOVE FRM-DAT-DATO04 TO QUE-ITEM
           ELSE
           IF WSS-I = 5
               MOVE FRM-DAT-DATO05 TO QUE-ITEM
           ELSE
           IF WSS-I = 6
               MOVE FRM-DAT-DATO06 TO QUE-ITEM
           ELSE
           IF WSS-I = 7
               MOVE FRM-DAT-DATO07 TO QUE-ITEM
           ELSE
           IF WSS-I = 8
               MOVE FRM-DAT-DATO08 TO QUE-ITEM
           ELSE
           IF WSS-I = 9
               MOVE FRM-DAT-DATO09 TO QUE-ITEM
           ELSE
           IF WSS-I = 10
               MOVE FRM-DAT-DATO10 TO QUE-ITEM
           ELSE
           IF WSS-I = 11
               MOVE FRM-DAT-DATO11 TO QUE-ITEM
           ELSE
           IF WSS-I = 12
               MOVE FRM-DAT-DATO12 TO QUE-ITEM
           ELSE
           IF WSS-I = 13
               MOVE FRM-DAT-DATO13 TO QUE-ITEM
           ELSE
           IF WSS-I = 14
               MOVE FRM-DAT-DATO14 TO QUE-ITEM
           ELSE
           IF WSS-I = 15
               MOVE FRM-DAT-DATO15 TO QUE-ITEM
           ELSE
           IF WSS-I = 16
               MOVE FRM-DAT-DATO16 TO QUE-ITEM
           ELSE
           IF WSS-I = 17
               MOVE FRM-DAT-DATO17 TO QUE-ITEM
           ELSE
           IF WSS-I = 18
               MOVE FRM-DAT-DATO18 TO QUE-ITEM
           ELSE
           IF WSS-I = 19
               MOVE FRM-DAT-DATO19 TO QUE-ITEM
           ELSE
           IF WSS-I = 20
               MOVE FRM-DAT-DATO20 TO QUE-ITEM.
       FIN-QUE-IFLD.
           EXIT.

       CHK-QUEU SECTION.
       INI-CHK-QUEU.
      *     MOVE 1 TO QUE-NITM.
      *     MOVE QUE-GET TO QUE-CMND.
      *     PERFORM GNS-PRO-QUE.
       FIN-CHK-QUEU.
           EXIT.

       GEN-CMA SECTION.
       INI-GEN-CMA.
           MOVE QUE-GET TO QUE-CMND.
           PERFORM GNS-PRO-QUE.
           IF QUE-STAT NOT = QUE-STAT-OKS
               GO TO FIN-GEN-CMA.
           MOVE QUE-ITEM TO LNK-CARD(QUE-NITM).
       FIN-GEN-CMA.
           EXIT.

       QUE-EOQ SECTION.
       INI-QUE-EOQ.
           MOVE QUE-STAT-EOQ TO QUE-STAT.
           GO TO FIN-GNS-PRO-QUE.
       FIN-QUE-EOQ.
           EXIT.

       QUE-NEX SECTION.
       INI-QUE-NEX.
           MOVE QUE-STAT-NEX TO QUE-STAT.
           GO TO FIN-GNS-PRO-QUE.
       FIN-QUE-NEX.
           EXIT.

       COPY GNSBGBIB.

       COPY GNSBVCOD.
       COPY GNSBVTAB.
       COPY GNSBBTAB.
      *COPY GNSBFTAB.
      * Modulo FIO para archivo GNSTAB
       GNS-FIO-TAB SECTION.
       INI-GNS-FIO-TAB.
      *JSS
           MOVE FIO-SIST TO TAB-COD-SIST.
      *ISP
           IF TAB-COD-SIST NOT = 'GNS'
               MOVE 'PRY' TO TAB-COD-SIST.
           IF FIO-CMND = FIO-PUT OR FIO-MOD
               MOVE TAB-COD-TTAB IN TAB TO TAB-CIC-TTAB IN TAB
                                           TAB-EXT-TTAB IN TAB
                                           TAB-SNX-TTAB IN TAB.
           CALL TAB-GLS-FTAB USING FIO-CMND TAB.
           MOVE FIO-SIST TO FIO-MENS-SIS.
           MOVE 'TAB'    TO FIO-MENS-REG.
       FIN-GNS-FIO-TAB.
           EXIT.
       

       COPY GNSBEGLS.
       COPY GNSBGHOY.

       COPY TABBBOFI.
       COPY TABBVOFI.
       COPY TABBFOFI.

      **************************************************************

       COPY GNSBGEDT REPLACING =={FRM}== BY ==JCL-FLD==
                               =={PRO}== BY ==BAT-COD-PROC==.

      **************************************************************

      *>>>>
*% END
*% IF EOF_VAX
      *<<<< EOF_VAX

       ERR-QUE SECTION.
       INI-ERR-QUE.
       FIN-ERR-QUE.
           EXIT.

       GNS-PRO-QUE SECTION.
       INI-GNS-PRO-QUE.
           IF QUE-CMND = QUE-PUT
               GO TO PUT-QUE
           ELSE
           IF QUE-CMND = QUE-GET
               GO TO GET-QUE
           ELSE
           IF QUE-CMND = QUE-DEL
               GO TO DEL-QUE.
           MOVE 'Comando invalido :' TO QUE-MEN1.
           MOVE QUE-CMND             TO QUE-MEN2.
      *     EXEC CICS XCTL
      *               PROGRAM('GNSPPABT')
      *               COMMAREA(QUE-MENS)
      *               LENGTH(+79)
      *     END-EXEC.

       PUT-QUE.
           MOVE FIO-PUT TO FIO-CMND.
           PERFORM GNS-FIO-CTL.
       FIN-PUT-QUE.
           GO TO FIN-GNS-PRO-QUE.

       GET-QUE.
           MOVE FIO-GET-NXT TO FIO-CMND.
           PERFORM GNS-FIO-CTL.
       FIN-GET-QUE.
           GO TO FIN-GNS-PRO-QUE.

       DEL-QUE.
       FIN-DEL-QUE.
           MOVE FIO-DEL TO FIO-CMND.
           PERFORM GNS-FIO-CTL.
           GO TO FIN-GNS-PRO-QUE.

       FIN-GNS-PRO-QUE.
           EXIT.

       LNK-BSM SECTION.
       INI-LNK-BSM.
           MOVE 1 TO DCL-IWRT.
           CALL 'GNSPPDCL'.
       FIN-LNK-BSM.
           EXIT.

       COPY GNSBFCTL.
       COPY GNSBGCPT.
      *>>>>
*% END
