*%! Codigo adicional
*%! Cuando GENERE este programa para el BCI debe hacerlo en ambiente DTC
*% HDR_CST = FALSE
*% NO_TIENE_TIMESTAMP = TRUE
*% PGM_PTC = TRUE
*% INCLUDE 'GNSSRC:MANEJO_VSI.SRC'
*% IF WSS
      *<<<< WSS
*% IF PGM_DTC
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-OFI-REQA==.
*% END
       COPY GNSMXW01.
       COPY GNSWGTSK.
       COPY GNSWGTCK.
       COPY TABBROFI.
       01  WSS-SPL-VARI.
           03 WSS-SPL-FIL1                        PIC X(02).
           03 WSS-SPL-FIL2                        PIC X(12).

       01  WSS-VARI.
           03 WSS-VEC-ILEE.
              05 WSS-ILEE         OCCURS 20            PIC  X(01).
           03 WSS-VEC-ORDE.
              05 WSS-ORDE         OCCURS 20            PIC  9(02).
           03 WSS-COD-CTAB.
              05 WSS-COD-CBAT                          PIC  X(03).
              05 WSS-COD-SIST                          PIC  X(04).
              05 WSS-NUM-CORR                          PIC  9(02).
              05 FILLER                                PIC  X(03).
           03 WSS-COD-CTAB-RED REDEFINES WSS-COD-CTAB.
              05 FILLER                                PIC  X(03).
              05 WSS-COD-PBAT                          PIC  X(06).
              05 WSS-NUM-NUME                          PIC  9(02).
              05 FILLER                                PIC  X(01).
           03 WSS-COD-CTAB-RED1 REDEFINES WSS-COD-CTAB.
              05 WSS-RED1-SIST                         PIC  X(03).
              05 WSS-RED1-PROG                         PIC  X(06).
              05 WSS-RED1-NUME                         PIC  9(02).
              05 FILLER                                PIC  X(01).
           03 WSS-COD-CTAB-RED2 REDEFINES WSS-COD-CTAB.
              05 WSS-RED2-SIST                         PIC  X(03).
              05 WSS-RED2-NUME                         PIC  9(02).
              05 FILLER                                PIC  X(07).
           03 WSS-COD-CTAB-RED3 REDEFINES WSS-COD-CTAB.
              05 WSS-RED3-PROG                         PIC  X(06).
              05 WSS-RED3-NUME                         PIC  9(02).
              05 FILLER                                PIC  X(03).
           03 WSS-COD-CTAB-RED4 REDEFINES WSS-COD-CTAB.
              05 WSS-RED4-NUME                         PIC  9(02).
              05 FILLER                                PIC  X(10).
           03 WSS-COD-CTAB-RED5 REDEFINES WSS-COD-CTAB.
              05 WSS-RED5-CHAR  OCCURS  12 TIMES       PIC  X(01).
           03 WSS-CPT-STRN.
              05 WSS-CPT-CHAR   OCCURS  12 TIMES       PIC  X(01).
           03 WSS-SIND.
              05 WSS-I                                 PIC  9(02).
              05 WSS-J                                 PIC  9(02).
           03 WSS-TAB-GLS-DATA.
              05 WSS-TAB-GLS-DATA-1                    PIC X(10).
              05 WSS-TAB-GLS-DATA-2                    PIC X(50).
*% IF PGM_BES
           03 WSS-TOKEN.
              05 WSS-TOKEN-1    VALUES 'TBAT'          PIC X(04).
              05 WSS-TOKEN-2    VALUES SPACES          PIC X(04).
           03 WSS-REPORT.
              05 WSS-REPORT-1   VALUES 'SBAT'          PIC X(04).
              05 WSS-REPORT-2   VALUES SPACES          PIC X(04).
*% ELSE
           03 WSS-TOKEN                                PIC X(08).
*% END
           03 WSS-NODO                                 PIC X(08).
           03 WSS-USER                                 PIC X(08).
           03 WSS-FLAG                 VALUE 0         PIC 9(01).
      *     03 WSS-RESP                COMP            PIC S9(04).

       77  WSS-IND-SPOOL       VALUE 'N'               PIC X(01).
       01  WSS-SPOOL.
           03 WSS-SPOOL-SPOOL   VALUE 'SPOOL'          PIC X(05).
           03 WSS-SPOOL-PROC    VALUE SPACES           PIC X(07).

       01  JES-VARI.
           03 JES-CMMA.
              05 JES-STAT                               PIC X(01).
              05 FILLER                VALUE 'N'        PIC X(01).
              05 JES-SSTT                               PIC X(01).
              05 FILLER                VALUE 'X'        PIC X(01).
              05 JES-COLA.
                 07 JES-TERM                            PIC X(04).
                 07 FILLER             VALUE 'CTL'      PIC X(04).
              05 FILLER                VALUE 'PRUEBA  ' PIC X(08).
           03 JES-TCMA                 VALUE +20 COMP   PIC S9(04).
           03 JES-STAT-OKS             VALUE SPACES     PIC X(01).
           03 JES-CODE.
              05 JES-COD1                               PIC X(01).
              05 JES-COD2                               PIC X(01).
       01  WSS-BAT-QUE-COLA.
           03 WSS-BAT-QUE-TERM                 PIC X(04).
           03 WSS-BAT-QUE-TYPE                 PIC X(04).
       COPY GNSWGQUE.
      *
       COPY GNSWGBIB.
      *
       COPY GNSWGEDT.
       COPY GNSWGHOY.
      *>>>>
*% END
*% IF PGM_INI
      *<<<< PGM_INI
           MOVE 'CTL' TO WSS-BAT-QUE-TYPE.
           PERFORM GET-TSK-TERM.

           MOVE TSK-TERM-ALF TO PTC-BAT-TERM.
           MOVE PTC-BAT-COLA TO QUE-COLA.
           MOVE PTC-BAT-LENG TO QUE-LITM.

           MOVE QUE-GET TO QUE-CMND.
           MOVE 1 TO QUE-NITM.

           PERFORM GNS-PRO-QUE.
           IF QUE-STAT = QUE-STAT-OKS
                MOVE QUE-ITEM TO PTC-BAT-ITEM
                MOVE PTC-BAT-SIST TO SCR-SIST.
      *>>>>
*% END
*% IF INI_FIO
      *<<<<
           PERFORM GNS-ERR-QUE.
           MOVE EIBTRMID TO WSS-BAT-QUE-TERM.
*% IF PGM_BES
           MOVE EIBTRMID TO WSS-TOKEN-2 WSS-REPORT-2.
*% END
           IF SCR-SISG NOT > SPACES
               MOVE SCR-SIST TO SCR-SISG.
           IF SCR-CMND = 'EXP'
               MOVE 'S' TO BIB-EXP-CMND.
           IF SCR-OFRM-SRV
                MOVE FRM-FFLD-RET TO FRM-FFLD
                                     SCR-FFLD.
      *>>>>
*% END
*% IF INI_SCR_PGM AND PGM_PQ
      *<<<< INI_SCR_PGM AND PGM_PQ
           IF SCR-INST = SCR-INST-HKY
               PERFORM SCR-RST
               PERFORM SCR-TRL.
      *>>>>
*% END
*% IF INI_SCR_PGM AND PGM_PU
      *<<<< INI_SCR_PGM AND PGM_PU
           IF SCR-INST = SCR-INST-GCS
               PERFORM GET-ACC
           ELSE
           IF SCR-INST = SCR-INST-GAB OR SCR-INST = SCR-INST-GFL
               PERFORM GET-CON
               MOVE SCR-INST-HCM TO SCR-INST.
           GO TO TRL-SCR-PGM.
      *>>>>
*% END
*% IF FND_KEY
      *<<<<
           MOVE SCR-SISG TO FIO-SIST.
           MOVE SPACES   TO BCH-COD-TRYC.
      *>>>>
*% END
*% IF PUT_SCR
      *<<<< PUT_SCR
           MOVE BCH-COD-PROC IN BCH TO BCH-COD-PROC IN JES-FLD.
           MOVE BCH-COD-CLVE IN BCH TO FRM-COD-CLVE IN JES-FLD.
           MOVE BCH-NUM-NEJM IN BCH TO FRM-NUM-NEJM IN JES-FLD.
           MOVE BCH-IND-IDEL IN BCH TO FRM-IND-IDEL IN JES-FLD.
           MOVE BCH-IND-IGIA IN BCH TO FRM-IND-IGIA IN JES-FLD.
           MOVE BCH-COD-DEST IN BCH TO FRM-COD-DEST IN JES-FLD.
           MOVE BCH-COD-CLSE IN BCH TO FRM-COD-CLSE IN JES-FLD.
           MOVE BCH-COD-FORM IN BCH TO FRM-COD-FORM IN JES-FLD.
      *    MOVE BCH-GLS-NFRM IN BCH TO FRM-GLS-NFRM IN JES-FLD.
      *    MOVE BCH-GLS-LFRM IN BCH TO FRM-GLS-LFRM IN JES-FLD.
      *    MOVE BCH-IND-IPRV IN BCH TO FRM-IND-IPRV IN JES-FLD.
           MOVE 1 TO FRM-IFLD.
       LUP-PUT-ILEE.
           MOVE BCH-IND-ILEE IN BCH(FRM-IFLD) TO
                FRM-IND-ILEE IN JES-FLD(FRM-IFLD).
           IF FRM-IFLD NOT > 8
               MOVE BCH-IND-PLNT IN BCH(FRM-IFLD) TO
                    FRM-IND-PLNT IN JES-FLD(FRM-IFLD).
           ADD 1 TO FRM-IFLD.
           IF FRM-IFLD NOT > 20
               GO TO LUP-PUT-ILEE.

           MOVE 'B' TO BCH-COD-TRYC.
           MOVE SCR-SISG    TO FIO-SIST.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM GNS-FIO-BCH.
           IF FIO-STAT-OKS
               MOVE BCH-GLS-GLSA IN BCH TO FRM-GLS-GLSA IN JES-FLD
               MOVE BCH-GLS-NRPT IN BCH TO FRM-GLS-NRPT IN JES-FLD
           ELSE
               MOVE SPACES TO FRM-GLS-GLSA IN JES-FLD
               MOVE SPACES TO FRM-GLS-NRPT IN JES-FLD.
      *>>>>
*% END
*% IF FIN_HBL_FLD
      *<<<<
           PERFORM UNP-PLNT.
           PERFORM UNP-DATO VARYING FRM-IFLD FROM 1 BY 1 UNTIL
                                                         FRM-IFLD > 20.
      *>>>>
*% END
*% IF ABT_CMN_ACC
      *<<<<
               MOVE 'GNS' TO MSG-COD-SIST
               MOVE 'BATACC INGNO' TO MSG-COD-MENS
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS
      *>>>>
*% END
*% IF INI_CMN_ACC
      *<<<<
           GO TO CON-CMN-ACC.
      *>>>>
*% END
*% IF CMN_ACC
      *<<<<
       CON-CMN-ACC.
           MOVE +80 TO QUE-LITM.
           MOVE WSS-BAT-QUE-COLA TO QUE-COLA.
           PERFORM GNS-CHK-QUEU.
           IF QUE-STAT = QUE-STAT-NEX
               MOVE 'BATHMVS' TO BIB-BIBL
               MOVE 'GNS'     TO BIB-SIST
               PERFORM GEN-BIB.

           MOVE BCH-COD-PROC IN JES-FLD TO BCH-COD-PROC IN BCH.
           MOVE SPACES TO BCH-COD-TRYC.
           MOVE SCR-SISG    TO FIO-SIST.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM GNS-FIO-BCH.
           MOVE BCH-VEC-ILEE TO WSS-VEC-ILEE.

           PERFORM RET-ALL-JES.
           MOVE 'C' TO BCH-COD-TRYC.
           MOVE SCR-SISG    TO FIO-SIST.
           MOVE FIO-FND-NLS TO FIO-CMND.
           PERFORM GNS-FIO-BCH.
           IF FIO-STAT-OKS

               MOVE 'BATHCMM' TO BIB-BIBL
               MOVE 'GNS'     TO BIB-SIST
               PERFORM GEN-BIB

               PERFORM PUT-CMN
               MOVE SCR-SISG    TO FIO-SIST
               MOVE FIO-END-BRW TO FIO-CMND
               PERFORM GNS-FIO-BCH

               PERFORM CHK-STEP-ADC

               MOVE 'BATTCMM' TO BIB-BIBL
               MOVE 'GNS'     TO BIB-SIST
               PERFORM GEN-BIB

               MOVE 'BATACC INGOK' TO MSG-COD-MENS
           ELSE
               MOVE 'BATACC INGNK' TO MSG-COD-MENS.
           MOVE 'GNS' TO MSG-COD-SIST.
           PERFORM GET-MSG.
           MOVE MSG-GLS-DESC TO FRM-MENS.
      *>>>>
*% END
*% IF CMN_PGM
      *<<<<
           IF NOT ( SCR-VFLD = SCR-VFLD-NOT OR SCR-STAT = SCR-STAT-ABT )
               GO TO CON-CMN-PGM.
           MOVE 'S' TO SCR-IERR.
           IF SCR-CMND = 'SUB'
               MOVE 'BATPGM SUBNO' TO MSG-COD-MENS
           ELSE
           IF SCR-CMND = 'DEL'
               MOVE 'BATPGM DELNO' TO MSG-COD-MENS
           ELSE
               MOVE 'BATPGM ???NO' TO MSG-COD-MENS.
           GO TO MSG-CMN-PGM.

       CON-CMN-PGM.
           IF NOT ( SCR-CMND = 'DEL' OR 'SUB' )
               MOVE 'BATPGM ???NP' TO MSG-COD-MENS
               GO TO MSG-CMN-PGM.

           IF SCR-CMND = 'DEL'
               MOVE WSS-BAT-QUE-COLA TO QUE-COLA
               MOVE QUE-DEL TO QUE-CMND
               MOVE +80 TO QUE-LITM
               PERFORM GNS-PRO-QUE

               IF QUE-STAT = QUE-STAT-OKS
                   MOVE 'BATPGM DELOK' TO MSG-COD-MENS
                   GO TO MSG-CMN-PGM
               ELSE
                   MOVE 'BATPGM DELNX' TO MSG-COD-MENS
                   GO TO MSG-CMN-PGM.

           MOVE +80 TO QUE-LITM
           MOVE WSS-BAT-QUE-COLA TO QUE-COLA.
           PERFORM GNS-CHK-QUEU.
           MOVE QUE-ITEM TO WSS-SPL-VARI.
           IF QUE-STAT = QUE-STAT-NEX
               MOVE 'BATPGM SUBNX' TO MSG-COD-MENS
               GO TO MSG-CMN-PGM.

           MOVE 'BATTMVS' TO BIB-BIBL.
           MOVE 'GNS'     TO BIB-SIST.
           PERFORM GEN-BIB.

           MOVE QUE-COLA TO JES-COLA.
           PERFORM LNK-JES.

           MOVE WSS-BAT-QUE-COLA TO QUE-COLA.
           MOVE QUE-DEL TO QUE-CMND.
           MOVE +80 TO QUE-LITM
           PERFORM GNS-PRO-QUE.

           IF JES-STAT = JES-STAT-OKS
               MOVE 'BATPGM SUBOK' TO MSG-COD-MENS
           ELSE
               MOVE JES-STAT TO JES-COD1
               MOVE JES-SSTT TO JES-COD2
               MOVE 'JESSTAT' TO MSG-COD-TMSG
               MOVE JES-CODE  TO MSG-COD-CMSG.

       MSG-CMN-PGM.
           MOVE 'GNS' TO MSG-COD-SIST.
           PERFORM GET-MSG.
           MOVE MSG-GLS-DESC TO FRM-MENS.
           IF NOT SCR-OFRM-SRV
               MOVE SCR-INST-HCM TO SCR-INST.
           GO TO FIN-CMN-PGM.
      *>>>>
*% END
*% IF EOF
      *<<<< EOF
      *COPY GNSBG3CF.
      * MODULO FRM
      * PROCESA INTERFACES BMS Y PTC V31
      *
       GNS-PRO-FRM SECTION.
       INI-GNS-PRO-FRM.
           IF FRM-IHDL NOT > SPACES
               MOVE 'N' TO FRM-IHDL
               EXEC CICS HANDLE AID
                     CLEAR    (ACL-GNS-PRO-FRM)
                     PA1      (PA1-GNS-PRO-FRM)
                     PA2      (PA2-GNS-PRO-FRM)
               END-EXEC.
           GO TO IFR-GNS-PRO-FRM GTA-GNS-PRO-FRM PTA-GNS-PRO-FRM
                 CLA-GNS-PRO-FRM MSG-GNS-PRO-FRM RCV-GNS-PRO-FRM
                 CLF-GNS-PRO-FRM
           DEPENDING ON FRM-CMND.
           MOVE 'ABORTO, comando invalido en GNS-PRO-FRM:' TO SYS-MEN1.
           MOVE FRM-CMND                                   TO SYS-MEN2.
           GO TO ABT-GNS-PRO-SYS.
      *Inicializa Formulario
       IFR-GNS-PRO-FRM.
           IF SCR-OFRM-SRV AND FRM-SUAR = FRM-SUAR-MAL
               MOVE 'S' TO SCR-IERR.
           IF SCR-OFRM-SRV
               MOVE SCR-OTRN TO QUE-TERM
               MOVE 'TPI'    TO QUE-TYPE
               MOVE 1        TO QUE-NITM
               MOVE +2014    TO QUE-LITM
               MOVE QUE-DEL  TO QUE-CMND
               PERFORM GNS-PRO-QUE
               MOVE SCR-OTRN TO QUE-TERM
               MOVE 'TPI'    TO QUE-TYPE
               MOVE 1        TO QUE-NITM
               MOVE +2014    TO QUE-LITM
               MOVE FRM-DFLD TO FRM-AUXI
               MOVE MSG-COD-MENS TO FRM-COD-MENS
               MOVE FRM-MENS     TO FRM-GLS-MENS
               MOVE FRM-AUXI     TO FRM-DATA
               MOVE FRM-NAME TO FRM-NAME-IDEN
               MOVE FRM-DFLD TO QUE-DATA
               MOVE QUE-PUT  TO QUE-CMND
               PERFORM GNS-PRO-QUE
               MOVE SCR-VARI TO DFHCOMMAREA

               MOVE 'TPO'    TO QUE-TYPE
               MOVE QUE-PUT  TO QUE-CMND
               PERFORM GNS-PRO-QUE
               EXEC CICS
                 RETURN
               END-EXEC
           ELSE
           IF FRM-SINI = FRM-SINI-MB1F OR FRM-SINI-DB1F
                EXEC CICS SEND
                         MAP(FRM-NAME)
                         MAPSET(FRM-NLIB)
                         FROM(FRM-DFLD) CURSOR
                         ERASE
                END-EXEC
           ELSE
           IF FRM-SINI = FRM-SINI-MBNF OR FRM-SINI-DBNF
                EXEC CICS SEND
                          MAP(FRM-NAME)
                          MAPSET(FRM-NLIB)
                          FROM(FRM-DFLD) CURSOR
                END-EXEC
           ELSE
                EXEC CICS SEND
                          MAP(FRM-NAME)
                          MAPSET(FRM-NLIB)
                          CURSOR
                          MAPONLY
                END-EXEC.

       FIN-IFR-GNS-PRO-FRM.
           GO TO FIN-GNS-PRO-FRM.
      *Recibe todos ( all ) los campos del formulario y unifica teclas
       GTA-GNS-PRO-FRM.
           IF NOT SCR-OFRM-SRV
               EXEC CICS RECEIVE
                        MAP(FRM-NAME)
                        MAPSET(FRM-NLIB)
                        INTO(FRM-DFLD)
               END-EXEC
               MOVE EIBAID TO FRM-FFLD
           ELSE
               MOVE SCR-OTRN TO QUE-TERM
               MOVE 'TPI'    TO QUE-TYPE
               MOVE 1        TO QUE-NITM
               MOVE +2014    TO QUE-LITM
               MOVE QUE-GET TO QUE-CMND
               PERFORM GNS-PRO-QUE
               IF QUE-STAT = QUE-STAT-OKS
                   MOVE QUE-DATA TO FRM-DFLD
                   MOVE FRM-FFLD-RET TO FRM-FFLD
               ELSE
                   MOVE SPACES TO FRM-DFLD
                   MOVE FRM-FFLD-RET TO FRM-FFLD.
           IF FRM-FFLD = FRM-FFLD-PFA
               MOVE FRM-FFLD-PF1 TO FRM-FFLD
           ELSE
           IF FRM-FFLD = FRM-FFLD-PFB
               MOVE FRM-FFLD-PF2 TO FRM-FFLD
           ELSE
           IF FRM-FFLD = FRM-FFLD-PFC
               MOVE FRM-FFLD-PF3 TO FRM-FFLD
           ELSE
           IF FRM-FFLD = FRM-FFLD-PFD
               MOVE FRM-FFLD-PF4 TO FRM-FFLD
           ELSE
           IF FRM-FFLD = FRM-FFLD-PFE
               MOVE FRM-FFLD-PF5 TO FRM-FFLD
           ELSE
           IF FRM-FFLD = FRM-FFLD-PFF
               MOVE FRM-FFLD-PF6 TO FRM-FFLD
           ELSE
           IF FRM-FFLD = FRM-FFLD-PFG
               MOVE FRM-FFLD-PF7 TO FRM-FFLD
           ELSE
           IF FRM-FFLD = FRM-FFLD-PFH
               MOVE FRM-FFLD-PF8 TO FRM-FFLD
           ELSE
           IF FRM-FFLD = FRM-FFLD-PFI
               MOVE FRM-FFLD-PF9 TO FRM-FFLD
           ELSE
           IF FRM-FFLD = FRM-FFLD-PFJ
               MOVE FRM-FFLD-PF10 TO FRM-FFLD
           ELSE
           IF FRM-FFLD = FRM-FFLD-PFK
               MOVE FRM-FFLD-PF11 TO FRM-FFLD
           ELSE
           IF FRM-FFLD = FRM-FFLD-PFL
               MOVE FRM-FFLD-PF12 TO FRM-FFLD.
           IF FRM-FFLD = FRM-FFLD-PF3  OR FRM-FFLD-PF12
               MOVE 'ABT' TO FRM-STAT.
       FIN-GTA-GNS-PRO-FRM.
           GO TO FIN-GNS-PRO-FRM.
      *Despliega todos los campos de un formulario
       PTA-GNS-PRO-FRM.
           IF NOT SCR-OFRM-SRV
               EXEC CICS SEND
                         MAP(FRM-NAME)
                         MAPSET(FRM-NLIB)
                         FROM(FRM-DFLD) CURSOR
                         DATAONLY
               END-EXEC
           ELSE
               MOVE SCR-OTRN TO QUE-TERM
               MOVE 'TPI'    TO QUE-TYPE
               MOVE 1        TO QUE-NITM
               MOVE +2014    TO QUE-LITM
               MOVE QUE-DEL  TO QUE-CMND
               PERFORM GNS-PRO-QUE
               MOVE SCR-OTRN TO QUE-TERM
               MOVE 'TPI'    TO QUE-TYPE
               MOVE 1        TO QUE-NITM
               MOVE +2014    TO QUE-LITM
               MOVE FRM-DFLD TO FRM-AUXI
               MOVE MSG-COD-MENS TO FRM-COD-MENS
               MOVE FRM-MENS     TO FRM-GLS-MENS
               MOVE FRM-AUXI     TO FRM-DATA
               MOVE FRM-NAME TO FRM-NAME-IDEN
               MOVE FRM-DFLD TO QUE-DATA
               MOVE QUE-PUT  TO QUE-CMND
               PERFORM GNS-PRO-QUE
               MOVE SCR-VARI TO DFHCOMMAREA

               MOVE 'TPO'    TO QUE-TYPE
               MOVE QUE-PUT  TO QUE-CMND
               PERFORM GNS-PRO-QUE
               EXEC CICS
                  RETURN
               END-EXEC.

       FIN-PTA-GNS-PRO-FRM.
           GO TO FIN-GNS-PRO-FRM.
      *Limpia todos los campos de un formulario
       CLA-GNS-PRO-FRM.
           IF NOT SCR-OFRM-SRV
               EXEC CICS SEND
                     MAP(FRM-NAME)
                     MAPSET(FRM-NLIB)
                     FROM(FRM-DFLD) CURSOR
                     DATAONLY
                     ERASEAUP
               END-EXEC.
       FIN-CLA-GNS-PRO-FRM.
           GO TO FIN-GNS-PRO-FRM.
      *Despliega un mensaje en pantalla
       MSG-GNS-PRO-FRM.
           EXEC CICS SEND
                     FROM(FRM-MENS)
                     LENGTH(79)
           END-EXEC.
       FIN-MSG-GNS-PRO-FRM.
           GO TO FIN-GNS-PRO-FRM.
      *Recibe toda la pantalla
       RCV-GNS-PRO-FRM.
           EXEC CICS RECEIVE
                     INTO(FRM-DFLD)
                     LENGTH(FRM-LFLD)
           END-EXEC.
       FIN-RCV-GNS-PRO-FRM.
           GO TO FIN-GNS-PRO-FRM.
      *Limpia pantalla desde linea de inicio ( PLIN ) n lineas ( NLIN )
       CLF-GNS-PRO-FRM.
      *ISP-PTC-PTC
           IF NOT SCR-OFRM-SRV
           IF FRM-PLIN = 1 AND ( FRM-NLIN = 24 OR FRM-NLIN = 0 )
               EXEC CICS SEND
                     CONTROL ERASE
               END-EXEC
           ELSE
               COMPUTE FRM-PCUR = 80 * ( FRM-PLIN - 1 )
               COMPUTE FRM-TFLD = 80 * FRM-NLIN
               MOVE LOW-VALUES TO FRM-DFLD
               EXEC CICS SEND
                         CONTROL CURSOR(FRM-PCUR)
               END-EXEC
               EXEC CICS SEND
                         FROM(FRM-DFLD)
                         LENGTH(FRM-TFLD)
               END-EXEC.
       FIN-CLF-GNS-PRO-FRM.
           GO TO FIN-GNS-PRO-FRM.

       ACL-GNS-PRO-FRM.
           EXEC CICS XCTL
               PROGRAM('GNSPPCLR')
           END-EXEC.
           EXEC CICS RETURN END-EXEC.
       PA1-GNS-PRO-FRM.
           MOVE FRM-FFLD-PA1 TO FRM-FFLD.
           GO TO FIN-GNS-PRO-FRM.
       PA2-GNS-PRO-FRM.
           MOVE FRM-FFLD-PA2 TO FRM-FFLD.
           GO TO FIN-GNS-PRO-FRM.
       FIN-GNS-PRO-FRM.
           EXIT.
       ELIMINA-BLANCOS SECTION.
       INI-ELIMINA-BLANCOS.
           MOVE ZEROS  TO WSS-I.
           MOVE ZEROS  TO WSS-J.
           MOVE SPACES TO WSS-CPT-STRN.
       LUP-ELIMINA-BLANCOS.
           ADD 1 TO WSS-I.
           IF WSS-RED5-CHAR (WSS-I) > SPACES
              ADD 1 TO WSS-J
              MOVE WSS-RED5-CHAR (WSS-I) TO WSS-CPT-CHAR (WSS-J).
           IF WSS-I < 12
               GO TO LUP-ELIMINA-BLANCOS.
           MOVE WSS-CPT-STRN TO WSS-COD-CTAB.
       FIN-ELIMINA-BLANCOS.
           EXIT.

       UNP-PLNT SECTION.
       INI-UNP-PLNT.
           IF FRM-IND-PLNT IN JES-FLD( 1 ) = 'N'
               MOVE FRM-CPIM-AEY TO FRM-COD-CLVE-ATR
               MOVE 0            TO FRM-COD-CLVE-LEN
           ELSE
               MOVE FRM-CPIM-UBY TO FRM-COD-CLVE-ATR
               MOVE -1           TO FRM-COD-CLVE-LEN.

           IF FRM-IND-PLNT IN JES-FLD( 2 ) = 'N'
               MOVE FRM-CPIM-AEY TO FRM-IND-IGIA-ATR
               MOVE 0            TO FRM-IND-IGIA-LEN
           ELSE
               MOVE FRM-CPIM-UBY TO FRM-IND-IGIA-ATR
               MOVE -1           TO FRM-IND-IGIA-LEN.

           IF FRM-IND-PLNT IN JES-FLD( 3 ) = 'N'
               MOVE FRM-CPIM-AEY TO FRM-GLS-GLSA-ATR
               MOVE 0            TO FRM-GLS-GLSA-LEN
           ELSE
               MOVE FRM-CPIM-UBY TO FRM-GLS-GLSA-ATR
               MOVE -1           TO FRM-GLS-GLSA-LEN.

           IF FRM-IND-PLNT IN JES-FLD( 4 ) = 'N'
               MOVE FRM-CPIM-AEY TO FRM-NUM-NEJM-ATR
               MOVE 0            TO FRM-NUM-NEJM-LEN
           ELSE
               MOVE FRM-CPIM-UBY TO FRM-NUM-NEJM-ATR
               MOVE -1           TO FRM-NUM-NEJM-LEN.

           IF FRM-IND-PLNT IN JES-FLD( 5 ) = 'N'
               MOVE FRM-CPIM-AEY TO FRM-IND-IDEL-ATR
               MOVE 0            TO FRM-IND-IDEL-LEN
           ELSE
               MOVE FRM-CPIM-UBY TO FRM-IND-IDEL-ATR
               MOVE -1           TO FRM-IND-IDEL-LEN.

           MOVE -1 TO FRM-IND-RRPT-LEN.

           IF FRM-IND-PLNT IN JES-FLD( 6 ) = 'N'
               MOVE FRM-CPIM-AEY TO FRM-COD-DEST-ATR
               MOVE 0            TO FRM-COD-DEST-LEN
           ELSE
               MOVE  0           TO FRM-IND-RRPT-LEN
               MOVE FRM-CPIM-UBY TO FRM-COD-DEST-ATR
               MOVE -1           TO FRM-COD-DEST-LEN.

           IF FRM-IND-PLNT IN JES-FLD( 7 ) = 'N'
               MOVE FRM-CPIM-AEY TO FRM-COD-CLSE-ATR
               MOVE 0            TO FRM-COD-CLSE-LEN
           ELSE
               MOVE  0           TO FRM-IND-RRPT-LEN
               MOVE FRM-CPIM-UBY TO FRM-COD-CLSE-ATR
               MOVE -1           TO FRM-COD-CLSE-LEN.

           IF FRM-IND-PLNT IN JES-FLD( 8 ) = 'N'
               MOVE FRM-CPIM-AEY TO FRM-COD-FORM-ATR
               MOVE 0            TO FRM-COD-FORM-LEN
           ELSE
               MOVE  0           TO FRM-IND-RRPT-LEN
               MOVE FRM-CPIM-UBY TO FRM-COD-FORM-ATR
               MOVE -1           TO FRM-COD-FORM-LEN.
       FIN-UNP-PLNT.
           EXIT.

       UNP-DATO SECTION.
       INI-UNP-DATO.
           IF FRM-IND-ILEE IN JES-FLD( FRM-IFLD ) = '0' OR
              FRM-IND-ILEE IN JES-FLD( FRM-IFLD ) NOT > SPACES
               MOVE FRM-CPIM-AEY TO FRM-DAT-DATO-ATR( FRM-IFLD )
               MOVE 0            TO FRM-DAT-DATO-LEN( FRM-IFLD )
               GO TO FIN-UNP-DATO.

           MOVE FRM-CPIM-UBY TO FRM-DAT-DATO-ATR( FRM-IFLD ).
           MOVE  0           TO FRM-IND-RRPT-LEN.
           MOVE -1           TO FRM-DAT-DATO-LEN( FRM-IFLD ).

           PERFORM GET-GLS-DATO.
       FIN-UNP-DATO.
           EXIT.

       GET-GLS-DATO SECTION.
       INI-GET-GLS-DATO.
      *AQUI BUSCA CON EL CODIGO SISTEMA, PROGRAMA, NUMERO
           MOVE SPACES                  TO WSS-COD-CTAB.
           MOVE SCR-SISG                TO WSS-RED1-SIST.
           MOVE BCH-COD-PROC IN JES-FLD TO WSS-RED1-PROG.
           MOVE FRM-IFLD                TO WSS-RED1-NUME.
           PERFORM ELIMINA-BLANCOS.
           MOVE SCR-SISG     TO TAB-COD-SIST FIO-SIST.
           MOVE 'GPB'        TO TAB-COD-TTAB IN TAB.
           MOVE WSS-COD-CTAB TO TAB-COD-CTAB IN TAB.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM GNS-FIO-TAB.
           IF ( FIO-STAT-OKS ) AND ( TAB-MSC-STAT IN TAB NOT = 'N' )
               MOVE TAB-GLS-DESC IN TAB TO FRM-GLS-DATO
                                           IN JES-FLD( FRM-IFLD )
               GO TO FIN-GET-GLS-DATO.
      *AQUI BUSCA CON EL CODIGO SISTEMA, NUMERO
           MOVE SPACES                  TO WSS-COD-CTAB.
           MOVE SCR-SISG                TO WSS-RED2-SIST.
           MOVE FRM-IFLD                TO WSS-RED2-NUME.
           MOVE SCR-SISG     TO TAB-COD-SIST FIO-SIST.
           MOVE 'GPB'        TO TAB-COD-TTAB IN TAB.
           MOVE WSS-COD-CTAB TO TAB-COD-CTAB IN TAB.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM GNS-FIO-TAB.
           IF ( FIO-STAT-OKS ) AND ( TAB-MSC-STAT IN TAB NOT = 'N' )
               MOVE TAB-GLS-DESC IN TAB TO FRM-GLS-DATO
                                           IN JES-FLD( FRM-IFLD )
               GO TO FIN-GET-GLS-DATO.
      *AQUI BUSCA CON EL CODIGO PROGRAMA, NUMERO
           MOVE SPACES                  TO WSS-COD-CTAB.
           MOVE BCH-COD-PROC IN JES-FLD TO WSS-RED3-PROG.
           MOVE FRM-IFLD                TO WSS-RED3-NUME.
           PERFORM ELIMINA-BLANCOS.
           MOVE SCR-SISG     TO TAB-COD-SIST FIO-SIST.
           MOVE 'GPB'        TO TAB-COD-TTAB IN TAB.
           MOVE WSS-COD-CTAB TO TAB-COD-CTAB IN TAB.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM GNS-FIO-TAB.
           IF ( FIO-STAT-OKS ) AND ( TAB-MSC-STAT IN TAB NOT = 'N' )
               MOVE TAB-GLS-DESC IN TAB TO FRM-GLS-DATO
                                           IN JES-FLD( FRM-IFLD )
               GO TO FIN-GET-GLS-DATO.
      *AQUI BUSCA CON EL CODIGO NUMERO
           MOVE SPACES                  TO WSS-COD-CTAB.
           MOVE FRM-IFLD                TO WSS-RED4-NUME.
           MOVE SCR-SISG     TO TAB-COD-SIST FIO-SIST.
           MOVE 'GPB'        TO TAB-COD-TTAB IN TAB.
           MOVE WSS-COD-CTAB TO TAB-COD-CTAB IN TAB.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM GNS-FIO-TAB.
           IF ( FIO-STAT-OKS ) AND ( TAB-MSC-STAT IN TAB NOT = 'N' )
               MOVE TAB-GLS-DESC IN TAB TO FRM-GLS-DATO
                                           IN JES-FLD( FRM-IFLD )
               GO TO FIN-GET-GLS-DATO.
      *AQUI BUSCA CON EL CODIGO DEL PROGRAMA
           MOVE SPACES                  TO WSS-COD-CTAB.
           MOVE 'BAT'                   TO WSS-COD-CBAT.
           MOVE BCH-COD-PROC IN JES-FLD TO WSS-COD-PBAT.
           MOVE FRM-IFLD                TO WSS-NUM-NUME.
           MOVE SCR-SISG     TO TAB-COD-SIST FIO-SIST.
           MOVE 'FRM'        TO TAB-COD-TTAB IN TAB.
           MOVE WSS-COD-CTAB TO TAB-COD-CTAB IN TAB.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM GNS-FIO-TAB.
           IF ( FIO-STAT-OKS ) AND ( TAB-MSC-STAT IN TAB NOT = 'N' )
               MOVE TAB-GLS-DESC IN TAB TO FRM-GLS-DATO
                                           IN JES-FLD( FRM-IFLD )
               GO TO FIN-GET-GLS-DATO.
      *AQUI BUSCA CON EL CODIGO DEL SISTEMA
           MOVE SCR-SISG TO TAB-COD-SIST FIO-SIST.
           MOVE 'FRM'    TO TAB-COD-TTAB IN TAB.
           MOVE SPACES    TO WSS-COD-CTAB.
           MOVE 'BAT'     TO WSS-COD-CBAT.
           MOVE SCR-SISG  TO WSS-COD-SIST.
           MOVE FRM-IFLD  TO WSS-NUM-CORR.
           MOVE WSS-COD-CTAB TO TAB-COD-CTAB IN TAB.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM GNS-FIO-TAB.
           IF ( FIO-STAT-OKS ) AND ( TAB-MSC-STAT IN TAB NOT = 'N' )
               MOVE TAB-GLS-DESC IN TAB TO FRM-GLS-DATO
                                           IN JES-FLD( FRM-IFLD )
               GO TO FIN-GET-GLS-DATO.
      *AQUI BUSCA CON BLANCO
           MOVE SCR-SISG TO TAB-COD-SIST FIO-SIST.
           MOVE 'FRM'    TO TAB-COD-TTAB IN TAB.
           MOVE SPACES    TO WSS-COD-CTAB.
           MOVE 'BAT'     TO WSS-COD-CBAT.
           MOVE SPACES    TO WSS-COD-SIST.
           MOVE FRM-IFLD  TO WSS-NUM-CORR.
           MOVE WSS-COD-CTAB TO TAB-COD-CTAB IN TAB.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM GNS-FIO-TAB.
           IF ( FIO-STAT-OKS ) AND ( TAB-MSC-STAT IN TAB NOT = 'N' )
               MOVE TAB-GLS-DESC IN TAB TO FRM-GLS-DATO
                                           IN JES-FLD( FRM-IFLD )
           ELSE
               MOVE SPACES TO FRM-GLS-DATO IN JES-FLD( FRM-IFLD )
               MOVE SPACES TO TAB-GLS-DATA IN TAB.
       FIN-GET-GLS-DATO.
           EXIT.

       PUT-CMN SECTION.
       INI-PUT-CMN.
           MOVE SCR-SISG    TO FIO-SIST.
           MOVE FIO-GET-NXT TO FIO-CMND.
           PERFORM GNS-FIO-BCH.
           IF NOT ( FIO-STAT-OKS AND
                    BCH-COD-PROC IN BCH = BCH-COD-PROC IN JES-FLD AND
                    BCH-COD-TREG = 'C' )
               GO TO FIN-PUT-CMN.

           IF BCH-GLS-CMND IN BCH NOT > SPACES
               GO TO INI-PUT-CMN.

           MOVE BCH-GLS-CMND TO EDT-STRN.
           PERFORM EDT-CARD.
           MOVE EDT-STRN TO QUE-ITEM.

           IF QUE-ITEM NOT > SPACES
               GO TO INI-PUT-CMN.

           IF BCH-IND-TCMN IN BCH = 'G'
               MOVE QUE-ITEM TO BIB-BIBL
               MOVE 'GNS'    TO BIB-SIST
               PERFORM GEN-BIB
               GO TO INI-PUT-CMN.

           IF BCH-IND-TCMN IN BCH = 'B'
               MOVE QUE-ITEM TO BIB-BIBL
               MOVE SCR-SISG TO BIB-SIST
               PERFORM GEN-BIB
               GO TO INI-PUT-CMN.

           MOVE WSS-BAT-QUE-COLA TO QUE-COLA.
           MOVE QUE-PUT TO QUE-CMND.
           MOVE +80 TO QUE-LITM
           PERFORM BIB-PUT-QUE.

           IF BCH-IND-TCMN IN BCH = 'D' OR 'M'
              PERFORM PUT-DATA.
           GO TO INI-PUT-CMN.
       FIN-PUT-CMN.
           EXIT.

       CHK-STEP-ADC SECTION.
       INI-CHK-STEP-ADC.
           IF FRM-CIC-CLSE IN JES-FLD NOT > SPACES
               MOVE 'BATASRM' TO BIB-BIBL
               MOVE 'GNS'     TO BIB-SIST
               PERFORM GEN-BIB

               MOVE 'BATSTIM' TO BIB-BIBL
               MOVE 'GNS'     TO BIB-SIST
               PERFORM GEN-BIB.
       FIN-CHK-STEP-ADC.
           EXIT.

       PUT-DATA SECTION.
       INI-PUT-DATA.
           MOVE ZEROES TO WSS-VEC-ORDE.
           PERFORM VER-ORD VARYING WSS-I FROM 1 BY 1 UNTIL WSS-I > 20.
           PERFORM MOV-ORD VARYING WSS-J FROM 1 BY 1 UNTIL WSS-J > 20.
       FIN-PUT-DATA.
           EXIT.

       VER-ORD SECTION.
       INI-VER-ORD.
           IF WSS-ILEE(WSS-I) NOT = '0' AND WSS-ILEE(WSS-I) > SPACES
               PERFORM CON-NUM
               MOVE WSS-I TO WSS-ORDE(WSS-J).
       FIN-VER-ORD.
           EXIT.

       CON-NUM SECTION.
       INI-CON-NUM.
           IF WSS-ILEE(WSS-I) IS NUMERIC
               MOVE WSS-ILEE(WSS-I) TO WSS-J
               GO TO FIN-CON-NUM.
           IF WSS-ILEE(WSS-I) = 'A' MOVE 10 TO WSS-J
           ELSE
           IF WSS-ILEE(WSS-I) = 'B' MOVE 11 TO WSS-J
           ELSE
           IF WSS-ILEE(WSS-I) = 'C' MOVE 12 TO WSS-J
           ELSE
           IF WSS-ILEE(WSS-I) = 'D' MOVE 13 TO WSS-J
           ELSE
           IF WSS-ILEE(WSS-I) = 'E' MOVE 14 TO WSS-J
           ELSE
           IF WSS-ILEE(WSS-I) = 'F' MOVE 15 TO WSS-J
           ELSE
           IF WSS-ILEE(WSS-I) = 'G' MOVE 16 TO WSS-J
           ELSE
           IF WSS-ILEE(WSS-I) = 'H' MOVE 17 TO WSS-J
           ELSE
           IF WSS-ILEE(WSS-I) = 'I' MOVE 18 TO WSS-J
           ELSE
           IF WSS-ILEE(WSS-I) = 'J' MOVE 19 TO WSS-J
           ELSE
           IF WSS-ILEE(WSS-I) = 'K' MOVE 20 TO WSS-J.
       FIN-CON-NUM.
           EXIT.

       MOV-ORD SECTION.
       INI-MOV-ORD.
           IF WSS-ORDE(WSS-J) NOT = 0
               MOVE WSS-ORDE(WSS-J) TO WSS-I
               IF WSS-ILEE(WSS-I) NOT = '0' AND WSS-ILEE(WSS-I) > SPACES
                   MOVE FRM-DAT-DATO(WSS-I) TO QUE-ITEM

                   MOVE WSS-BAT-QUE-COLA TO QUE-COLA
                   MOVE QUE-PUT TO QUE-CMND
                   MOVE +80 TO QUE-LITM
                   PERFORM BIB-PUT-QUE.
       FIN-MOV-ORD.
           EXIT.

       COPY GNSBGBIB.

       COPY GNSBVCOD.
       COPY GNSBVTAB.
       COPY GNSBBTAB.

       COPY GNSBEGLS.
       COPY GNSBGHOY.

       COPY TABBBOFI.
       COPY TABBVOFI.
       COPY TABBFOFI.

      **************************************************************

       COPY GNSBGEDT REPLACING ==;FRM:== BY ==JES-FLD==
                               ==;PRO:== BY ==BCH-COD-PROC==.

      **************************************************************
       COPY GNSBGQUE.

       LNK-JES SECTION.
       INI-LNK-JES.
           MOVE 'GNS'        TO FIO-SIST.
           MOVE 'VSN'        TO TAB-COD-TTAB.
           MOVE 'SPOOL'      TO WSS-SPOOL-PROC.
           MOVE WSS-SPOOL    TO TAB-COD-CTAB.
           MOVE FIO-GET-KEY  TO FIO-CMND.
           PERFORM GNS-FIO-TAB.
           IF FIO-STAT-OKS
                 MOVE TAB-GLS-DCOR IN TAB TO WSS-NODO
                 MOVE TAB-GLS-DATA IN TAB TO WSS-USER
                 IF TAB-MSC-STAT IN TAB = 'S'
                      MOVE 'S' TO WSS-IND-SPOOL.

           MOVE 'GNS'        TO FIO-SIST.
           MOVE 'VSN'        TO TAB-COD-TTAB.
           MOVE WSS-SPL-FIL2 TO WSS-SPOOL-PROC.
           MOVE WSS-SPOOL    TO TAB-COD-CTAB.
           MOVE FIO-GET-KEY  TO FIO-CMND.
           PERFORM GNS-FIO-TAB.
           IF ( FIO-STAT-OKS AND TAB-MSC-STAT IN TAB = 'S' )
                 MOVE 'S' TO WSS-IND-SPOOL.

           IF WSS-IND-SPOOL = 'S'
               MOVE TAB-GLS-DCOR IN TAB TO WSS-NODO
               MOVE TAB-GLS-DATA IN TAB TO WSS-USER
               MOVE QUE-STAT-OKS TO QUE-STAT
               MOVE JES-STAT-OKS TO JES-STAT
               MOVE 1            TO QUE-NITM
               PERFORM GEN-SPOOL UNTIL QUE-STAT NOT = QUE-STAT-OKS
           ELSE
               EXEC CICS LINK
                         PROGRAM('M4SPOOLU')
                         COMMAREA(JES-CMMA)
                         LENGTH(JES-TCMA)
               END-EXEC.

      *     MOVE FRM-MSG TO FRM-CMND.
      *     MOVE 'EXEC CICS LINK PROGRAM(M4SPOOLU)....' TO FRM-MENS.
      *     PERFORM GNS-PRO-FRM.
      *     MOVE SPACES TO JES-STAT.

       FIN-LNK-JES.
           EXIT.
*% IF PGM_BES

       GEN-SPOOL SECTION.
       INI-GEN-SPOOL.
           MOVE WSS-BAT-QUE-COLA TO QUE-COLA.
           MOVE QUE-GET TO QUE-CMND.
           MOVE +80 TO QUE-LITM
           PERFORM GNS-PRO-QUE.
           IF QUE-STAT NOT = QUE-STAT-OKS
               IF QUE-NITM > 1
                   EXEC CICS SPOOLCLOSE
                             REPORT (WSS-REPORT)
                             TOKEN  (WSS-TOKEN)
                   END-EXEC
               ELSE
                   MOVE 'X' TO JES-STAT
           ELSE
               IF QUE-NITM = 1
                   MOVE 1 TO WSS-FLAG
      *            EXEC CICS HANDLE CONDITION
      *                      ERROR(ERR-GEN-SPOOL)
      *            END-EXEC.
                   EXEC CICS SPOOLOPEN
                             REPORT (WSS-REPORT)
                             TOKEN  (WSS-TOKEN)
                             JCL
                   END-EXEC
                   EXEC CICS SPOOLWRITE
                             REPORT (WSS-REPORT)
                             TOKEN   (WSS-TOKEN)
                             FROM    (QUE-ITEM)
                             FLENGTH (80)
                   END-EXEC
               ELSE
                   EXEC CICS SPOOLWRITE
                             REPORT (WSS-REPORT)
                             TOKEN   (WSS-TOKEN)
                             FROM    (QUE-ITEM)
                             FLENGTH (80)
                   END-EXEC
           GO TO FIN-GEN-SPOOL.
       ERR-GEN-SPOOL.
           IF WSS-FLAG = 0
               GOBACK.
           PERFORM GNS-HDL-SYS.
           PERFORM GNS-HDL-FRM.
           PERFORM GNS-HDL-VSM.
           PERFORM GNS-ERR-QUE.
       FIN-GEN-SPOOL.
           ADD 1 TO QUE-NITM.
       EXT-GEN-SPOOL.
           EXIT.
*% ELSE

       GEN-SPOOL SECTION.
       INI-GEN-SPOOL.
           MOVE WSS-BAT-QUE-COLA TO QUE-COLA.
           MOVE QUE-GET TO QUE-CMND.
           MOVE +80 TO QUE-LITM
           PERFORM GNS-PRO-QUE.
           IF QUE-STAT NOT = QUE-STAT-OKS
               IF QUE-NITM > 1
                   EXEC CICS SPOOLCLOSE
                             TOKEN (WSS-TOKEN)
                             DELETE
      **RMV
                             NOHANDLE
      **RMV
      *                       RESP    (WSS-RESP)
                   END-EXEC
               ELSE
                   MOVE 'X' TO JES-STAT
           ELSE
               IF QUE-NITM = 1
                   MOVE 1 TO WSS-FLAG
      *            EXEC CICS HANDLE CONDITION
      *                      ERROR(ERR-GEN-SPOOL)
      *            END-EXEC.
                   EXEC CICS SPOOLOPEN
                             OUTPUT
                             NODE   (WSS-NODO)
                             USERID (WSS-USER)
                             TOKEN  (WSS-TOKEN)
      **RMV
                             NOHANDLE
      **RMV
      *                       RESP    (WSS-RESP)
                   END-EXEC
                   EXEC CICS SPOOLWRITE
                             TOKEN   (WSS-TOKEN)
                             FROM    (QUE-ITEM)
                             FLENGTH (80)
      **RMV
                             NOHANDLE
      **RMV
      *                       RESP    (WSS-RESP)
                   END-EXEC
               ELSE
                   EXEC CICS SPOOLWRITE
                             TOKEN   (WSS-TOKEN)
                             FROM    (QUE-ITEM)
                             FLENGTH (80)
      **RMV
                             NOHANDLE
      **RMV
      *                       RESP    (WSS-RESP)
                   END-EXEC.
           GO TO FIN-GEN-SPOOL.
       ERR-GEN-SPOOL.
           IF WSS-FLAG = 0
               GOBACK.
           PERFORM GNS-HDL-SYS.
           PERFORM GNS-HDL-FRM.
           PERFORM GNS-HDL-VSM.
           PERFORM GNS-ERR-QUE.
       FIN-GEN-SPOOL.
           ADD 1 TO QUE-NITM.
       EXT-GEN-SPOOL.
           EXIT.
*% END
       ACT-ITK-TCKT SECTION.
       INI-ACT-ITK-TCKT.
           MOVE SPACES                  TO TCK-CMMA.
           MOVE 'ITCK'                  TO TCK-CAI-ITCK.
           MOVE SCR-SISG                TO TCK-COD-SIST.
           MOVE BCH-COD-PROC IN JES-FLD TO TCK-COD-TPRO.
           MOVE SPACES                  TO TCK-COD-ENTI.
           MOVE 0001                    TO TCK-NUM-SECU
           MOVE 'S'                     TO TCK-COD-WITK.
           MOVE 'GNSPPADT'   TO SYS-PROG.
           MOVE TCK-TCMA     TO SYS-TCMA.
           MOVE TCK-CMMA     TO SYS-CMMA.
           MOVE SYS-LINK     TO SYS-CMND.
           PERFORM GNS-PRO-SYS.
      *    EXEC CICS
      *      LINK PROGRAM  (WSS-GNSPPADT)
      *           COMMAREA (TCK-CMMA)
      *           LENGTH   (TCK-TCMA)
      *    END-EXEC.
      *    MOVE TCK-COD-MENS  TO MSG-COD-MENS
      *    MOVE TCK-GLS-MENS  TO MSG-GLS-DESC
           IF TCK-COD-MENS NOT > SPACES
              MOVE SYS-CMMA     TO TCK-CMMA
              MOVE TSK-TERM-ALF TO ATK-COD-TERM
              MOVE QUE-DEL         TO QUE-CMND
              PERFORM GNS-PRO-QUE
              MOVE ATK-LEN-TSATK   TO QUE-LITM
              MOVE QUE-PUT         TO QUE-CMND
              MOVE TCK-CIC-ITCK    TO QUE-ITEM
              PERFORM GNS-PRO-QUE
           ELSE
              MOVE MSG-GLS-DESC TO FRM-MENS
              MOVE 'S' TO SCR-IERR.




       FIN-ACT-ITK-TCKT.
           EXIT.
       COPY GNSBGTSK.
       GNX-PRO-QUE SECTION.
       INI-GNX-PRO-QUE.
      *    PERFORM GNS-PRO-QUE.
       FIN-GNX-PRO-QUE.
           EXIT.
      *>>>>
*% END
