*%! Codigo adicional
*% IF WSS_DTC
      *<<<< WSS_DTC
      *>>>>
*% END
*% IF WSS
      *<<<< WSS
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-OFI-REQA==.
       COPY TABBROFI.

       01  WSS-VARI.
           03 WSS-VEC-ILEE.
              05 WSS-ILEE         OCCURS 20            PIC  X(01).
           03 WSS-VEC-ORDE.
              05 WSS-ORDE         OCCURS 20            PIC  9(02).
           03 WSS-COD-CTAB.
              05 WSS-COD-CBAT                          PIC  X(03).
              05 WSS-COD-SIST                          PIC  X(04).
              05 WSS-NUM-CORR                          PIC  9(02).
              05 FILLER                                PIC  X(03).
           03 WSS-SIND.
              05 WSS-I                                 PIC  9(02).
              05 WSS-J                                 PIC  9(02).
      *
       01  QUE-VARI.
           03 QUE-COLA.
              05 QUE-TERM                              PIC  X(04).
              05 FILLER           VALUE 'CTL'          PIC  X(04).
           03 QUE-NITM       COMP VALUE +0             PIC S9(04).
           03 QUE-LITM       COMP VALUE +80            PIC S9(04).
           03 QUE-ITEM                                 PIC  X(80).
           03 QUE-STAT            VALUE 'OKS'          PIC  X(03).
           03 QUE-STAT-OKS        VALUE 'OKS'          PIC  X(03).
           03 QUE-STAT-NEX        VALUE 'NEX'          PIC  X(03).
           03 QUE-STAT-EOQ        VALUE 'EOQ'          PIC  X(03).
           03 QUE-CMND                                 PIC  X(03).
           03 QUE-MENS.
              05 QUE-MEN1                              PIC  X(40).
              05 QUE-MEN2                              PIC  X(39).
       01  QUE-CTTS.
           03 QUE-PUT             VALUE 'PUT'          PIC  X(03).
           03 QUE-GET             VALUE 'GET'          PIC  X(03).
           03 QUE-DEL             VALUE 'DEL'          PIC  X(03).
      *
       01  LNK-VARI.
           03 LNK-TCMA       COMP VALUE +0             PIC S9(04).
           03 LNK-CMMA.
              05 LNK-ITEM         OCCURS 204.
                 07 FILLER                             PIC  X(08).
                 07 LNK-CARD                           PIC  X(80).
           03 LNK-NITM            VALUE 204            PIC  9(03).
           03 LNK-LITM            VALUE  88            PIC  9(02).
      *
       COPY GNSWGBIB.
      *
       COPY GNSWGEDT.
       COPY GNSWGHOY.
      *>>>>
*% END
*% IF INI_FIO
      *<<<<
           PERFORM ERR-QUE.
           MOVE EIBTRMID TO QUE-TERM.
           IF SCR-SISG NOT > SPACES
               MOVE SCR-SIST TO SCR-SISG.
      *>>>>
*% END
*% IF INI_SCR_PGM
      *<<<<
           IF SCR-INST = SCR-INST-HKY
               PERFORM SCR-RST
               PERFORM SCR-TRL
           ELSE
           IF SCR-INST = SCR-INST-GCS
               PERFORM GET-ACC
           ELSE
           IF SCR-INST = SCR-INST-GAB OR SCR-INST = SCR-INST-GFL
               PERFORM GET-CON
               MOVE SCR-INST-HCM TO SCR-INST.
           GO TO TRL-SCR-PGM.
      *>>>>
*% END
*% IF FND_KEY
      *<<<<
           MOVE SCR-SISG TO FIO-SIST.
           MOVE SPACES   TO BAT-COD-TRYC.
      *>>>>
*% END
*% IF PUT_SCR
      *<<<< PUT_SCR
           MOVE BAT-COD-PROC IN BAT TO BAT-COD-PROC IN JCL-FLD.
           MOVE BAT-COD-CLVE IN BAT TO FRM-COD-CLVE IN JCL-FLD.
           MOVE BAT-NUM-NEJM IN BAT TO FRM-NUM-NEJM IN JCL-FLD.
           MOVE BAT-IND-IDEL IN BAT TO FRM-IND-IDEL IN JCL-FLD.
           MOVE BAT-IND-IGIA IN BAT TO FRM-IND-IGIA IN JCL-FLD.
           MOVE BAT-COD-DEST IN BAT TO FRM-COD-DEST IN JCL-FLD.
           MOVE BAT-COD-CLSE IN BAT TO FRM-COD-CLSE IN JCL-FLD.
           MOVE BAT-COD-FORM IN BAT TO FRM-COD-FORM IN JCL-FLD.
      *    MOVE BAT-GLS-NFRM IN BAT TO FRM-GLS-NFRM IN JCL-FLD.
      *    MOVE BAT-GLS-LFRM IN BAT TO FRM-GLS-LFRM IN JCL-FLD.
      *    MOVE BAT-IND-IPRV IN BAT TO FRM-IND-IPRV IN JCL-FLD.
           MOVE 1 TO FRM-IFLD.
       LUP-PUT-ILEE.
           MOVE BAT-IND-ILEE IN BAT(FRM-IFLD) TO
                FRM-IND-ILEE IN JCL-FLD(FRM-IFLD).
           IF FRM-IFLD NOT > 8
               MOVE BAT-IND-PLNT IN BAT(FRM-IFLD) TO
                    FRM-IND-PLNT IN JCL-FLD(FRM-IFLD).
           ADD 1 TO FRM-IFLD.
           IF FRM-IFLD NOT > 20
               GO TO LUP-PUT-ILEE.

           MOVE 'B' TO BAT-COD-TRYC.
           MOVE SCR-SISG    TO FIO-SIST.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM GNS-FIO-BAT.
           IF FIO-STAT-OKS
               MOVE BAT-GLS-GLSA IN BAT TO FRM-GLS-GLSA IN JCL-FLD
               MOVE BAT-GLS-NRPT IN BAT TO FRM-GLS-NRPT IN JCL-FLD
           ELSE
               MOVE SPACES TO FRM-GLS-GLSA IN JCL-FLD
               MOVE SPACES TO FRM-GLS-NRPT IN JCL-FLD.
      *>>>>
*% END
*% IF FIN_HBL_FLD
      *<<<<
           PERFORM UNP-PLNT.
           PERFORM UNP-DATO VARYING FRM-IFLD FROM 1 BY 1 UNTIL
                                                         FRM-IFLD > 20.
      *>>>>
*% END
*% IF ABT_CMN_ACC
      *<<<<
               MOVE 'GNS' TO MSG-COD-SIST
               MOVE 'BATACC INGNO' TO MSG-COD-MENS
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS
      *>>>>
*% END
*% IF INI_CMN_ACC
      *<<<<
           GO TO CON-CMN-ACC.
      *>>>>
*% END
*% IF CMN_ACC
      *<<<<
       CON-CMN-ACC.
           PERFORM CHK-QUEU.
           IF QUE-STAT = QUE-STAT-NEX
               MOVE 'BATHDOS' TO BIB-BIBL
               MOVE 'GNS'     TO BIB-SIST
               PERFORM GEN-BIB.

           MOVE BAT-COD-PROC IN JCL-FLD TO BAT-COD-PROC IN BAT.
           MOVE SPACES TO BAT-COD-TRYC.
           MOVE SCR-SISG    TO FIO-SIST.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM GNS-FIO-BAT.
           MOVE BAT-VEC-ILEE TO WSS-VEC-ILEE.

           PERFORM RET-ALL-JCL.
           MOVE 'C' TO BAT-COD-TRYC.
           MOVE SCR-SISG    TO FIO-SIST.
           MOVE FIO-FND-NLS TO FIO-CMND.
           PERFORM GNS-FIO-BAT.
           IF FIO-STAT-OKS

               MOVE 'BATHCMD' TO BIB-BIBL
               MOVE 'GNS'     TO BIB-SIST
               PERFORM GEN-BIB

               PERFORM PUT-CMN
               MOVE SCR-SISG    TO FIO-SIST
               MOVE FIO-END-BRW TO FIO-CMND
               PERFORM GNS-FIO-BAT

               MOVE 'BATTCMD' TO BIB-BIBL
               MOVE 'GNS'     TO BIB-SIST
               PERFORM GEN-BIB

               MOVE 'BATACC INGOK' TO MSG-COD-MENS
           ELSE
               MOVE 'BATACC INGNK' TO MSG-COD-MENS.
           MOVE 'GNS' TO MSG-COD-SIST.
           PERFORM GET-MSG.
           MOVE MSG-GLS-DESC TO FRM-MENS.
      *>>>>
*% END
*% IF CMN_PGM
      *<<<<
           IF NOT ( SCR-VFLD = SCR-VFLD-NOT OR SCR-STAT = SCR-STAT-ABT )
               GO TO CON-CMN-PGM.
           IF SCR-CMND = 'SUB'
               MOVE 'BATPGM SUBNO' TO MSG-COD-MENS
           ELSE
           IF SCR-CMND = 'DEL'
               MOVE 'BATPGM DELNO' TO MSG-COD-MENS
           ELSE
               MOVE 'BATPGM ???NO' TO MSG-COD-MENS.
           GO TO MSG-CMN-PGM.

       CON-CMN-PGM.
           IF NOT ( SCR-CMND = 'DEL' OR 'SUB' )
               MOVE 'BATPGM ???NP' TO MSG-COD-MENS
               GO TO MSG-CMN-PGM.

           IF SCR-CMND = 'DEL'

               MOVE QUE-DEL TO QUE-CMND
               PERFORM GNS-PRO-QUE

               IF QUE-STAT = QUE-STAT-OKS
                   MOVE 'BATPGM DELOK' TO MSG-COD-MENS
                   GO TO MSG-CMN-PGM
               ELSE
                   MOVE 'BATPGM DELNX' TO MSG-COD-MENS
                   GO TO MSG-CMN-PGM.

           PERFORM CHK-QUEU.
           IF QUE-STAT = QUE-STAT-NEX
               MOVE 'BATPGM SUBNX' TO MSG-COD-MENS
               GO TO MSG-CMN-PGM.

           MOVE 'BATTDOS' TO BIB-BIBL.
           MOVE 'GNS'     TO BIB-SIST.
           PERFORM GEN-BIB.

           PERFORM GEN-CMA VARYING QUE-NITM FROM 1 BY 1
               UNTIL QUE-NITM > LNK-NITM OR QUE-STAT NOT = QUE-STAT-OKS.

           SUBTRACT 1 FROM QUE-NITM.
           COMPUTE LNK-TCMA = LNK-LITM  * QUE-NITM.
           PERFORM LNK-BSM.

           MOVE QUE-DEL TO QUE-CMND.
           PERFORM GNS-PRO-QUE.

           MOVE 'BATPGM SUBOK' TO MSG-COD-MENS.

       MSG-CMN-PGM.
           MOVE 'GNS' TO MSG-COD-SIST.
           PERFORM GET-MSG.
           MOVE MSG-GLS-DESC TO FRM-MENS.
           MOVE SCR-INST-HCM TO SCR-INST.
           GO TO FIN-CMN-PGM.
      *>>>>
*% END
*% IF EOF
      *<<<<
       UNP-PLNT SECTION.
       INI-UNP-PLNT.
           IF FRM-IND-PLNT IN JCL-FLD( 1 ) = 'N'
               MOVE FRM-CPIM-AEY TO FRM-COD-CLVE-ATR
               MOVE 0            TO FRM-COD-CLVE-LEN
           ELSE
               MOVE FRM-CPIM-UBY TO FRM-COD-CLVE-ATR
               MOVE -1           TO FRM-COD-CLVE-LEN.

           IF FRM-IND-PLNT IN JCL-FLD( 2 ) = 'N'
               MOVE FRM-CPIM-AEY TO FRM-IND-IGIA-ATR
               MOVE 0            TO FRM-IND-IGIA-LEN
           ELSE
               MOVE FRM-CPIM-UBY TO FRM-IND-IGIA-ATR
               MOVE -1           TO FRM-IND-IGIA-LEN.

           IF FRM-IND-PLNT IN JCL-FLD( 3 ) = 'N'
               MOVE FRM-CPIM-AEY TO FRM-GLS-GLSA-ATR
               MOVE 0            TO FRM-GLS-GLSA-LEN
           ELSE
               MOVE FRM-CPIM-UBY TO FRM-GLS-GLSA-ATR
               MOVE -1           TO FRM-GLS-GLSA-LEN.

           IF FRM-IND-PLNT IN JCL-FLD( 4 ) = 'N'
               MOVE FRM-CPIM-AEY TO FRM-NUM-NEJM-ATR
               MOVE 0            TO FRM-NUM-NEJM-LEN
           ELSE
               MOVE FRM-CPIM-UBY TO FRM-NUM-NEJM-ATR
               MOVE -1           TO FRM-NUM-NEJM-LEN.

           IF FRM-IND-PLNT IN JCL-FLD( 5 ) = 'N'
               MOVE FRM-CPIM-AEY TO FRM-IND-IDEL-ATR
               MOVE 0            TO FRM-IND-IDEL-LEN
           ELSE
               MOVE FRM-CPIM-UBY TO FRM-IND-IDEL-ATR
               MOVE -1           TO FRM-IND-IDEL-LEN.

           MOVE -1 TO FRM-IND-RRPT-LEN.

           IF FRM-IND-PLNT IN JCL-FLD( 6 ) = 'N'
               MOVE FRM-CPIM-AEY TO FRM-COD-DEST-ATR
               MOVE 0            TO FRM-COD-DEST-LEN
           ELSE
               MOVE  0           TO FRM-IND-RRPT-LEN
               MOVE FRM-CPIM-UBY TO FRM-COD-DEST-ATR
               MOVE -1           TO FRM-COD-DEST-LEN.

           IF FRM-IND-PLNT IN JCL-FLD( 7 ) = 'N'
               MOVE FRM-CPIM-AEY TO FRM-COD-CLSE-ATR
               MOVE 0            TO FRM-COD-CLSE-LEN
           ELSE
               MOVE  0           TO FRM-IND-RRPT-LEN
               MOVE FRM-CPIM-UBY TO FRM-COD-CLSE-ATR
               MOVE -1           TO FRM-COD-CLSE-LEN.

           IF FRM-IND-PLNT IN JCL-FLD( 8 ) = 'N'
               MOVE FRM-CPIM-AEY TO FRM-COD-FORM-ATR
               MOVE 0            TO FRM-COD-FORM-LEN
           ELSE
               MOVE  0           TO FRM-IND-RRPT-LEN
               MOVE FRM-CPIM-UBY TO FRM-COD-FORM-ATR
               MOVE -1           TO FRM-COD-FORM-LEN.
       FIN-UNP-PLNT.
           EXIT.

       UNP-DATO SECTION.
       INI-UNP-DATO.
           IF FRM-IND-ILEE IN JCL-FLD( FRM-IFLD ) = '0' OR
              FRM-IND-ILEE IN JCL-FLD( FRM-IFLD ) NOT > SPACES
               MOVE FRM-CPIM-AEY TO FRM-DAT-DATO-ATR( FRM-IFLD )
               MOVE 0            TO FRM-DAT-DATO-LEN( FRM-IFLD )
               GO TO FIN-UNP-DATO.

           MOVE FRM-CPIM-UBY TO FRM-DAT-DATO-ATR( FRM-IFLD ).
           MOVE  0           TO FRM-IND-RRPT-LEN.
           MOVE -1           TO FRM-DAT-DATO-LEN( FRM-IFLD ).
           MOVE SCR-SISG TO TAB-COD-SIST FIO-SIST.
           MOVE 'FRM'    TO TAB-COD-TTAB IN TAB.
           MOVE SPACES    TO WSS-COD-CTAB.
           MOVE 'BAT'     TO WSS-COD-CBAT.
           MOVE SCR-SISG  TO WSS-COD-SIST.
           MOVE FRM-IFLD  TO WSS-NUM-CORR.
           MOVE WSS-COD-CTAB TO TAB-COD-CTAB IN TAB.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM GNS-FIO-TAB.
           IF ( FIO-STAT-OKS ) AND ( TAB-MSC-STAT IN TAB NOT = 'N' )
               MOVE TAB-GLS-DESC IN TAB TO FRM-GLS-DATO
                                           IN JCL-FLD( FRM-IFLD )
           ELSE
               MOVE SCR-SISG TO TAB-COD-SIST FIO-SIST
               MOVE 'FRM'    TO TAB-COD-TTAB IN TAB
               MOVE SPACES    TO WSS-COD-CTAB
               MOVE 'BAT'     TO WSS-COD-CBAT
               MOVE SPACES    TO WSS-COD-SIST
               MOVE FRM-IFLD  TO WSS-NUM-CORR
               MOVE WSS-COD-CTAB TO TAB-COD-CTAB IN TAB
               MOVE FIO-GET-KEY TO FIO-CMND
               PERFORM GNS-FIO-TAB
               IF ( FIO-STAT-OKS ) AND ( TAB-MSC-STAT IN TAB NOT = 'N' )
                   MOVE TAB-GLS-DESC IN TAB TO FRM-GLS-DATO
                                               IN JCL-FLD( FRM-IFLD )
               ELSE
                   MOVE SPACES TO FRM-GLS-DATO IN JCL-FLD( FRM-IFLD ).
       FIN-UNP-DATO.
           EXIT.

       PUT-CMN SECTION.
       INI-PUT-CMN.
           MOVE SCR-SISG    TO FIO-SIST.
           MOVE FIO-GET-NXT TO FIO-CMND.
           PERFORM GNS-FIO-BAT.
           IF NOT ( FIO-STAT-OKS AND
                    BAT-COD-PROC IN BAT = BAT-COD-PROC IN JCL-FLD AND
                    BAT-COD-TREG = 'C' )
               GO TO FIN-PUT-CMN.

           IF BAT-GLS-CMND IN BAT NOT > SPACES
               GO TO INI-PUT-CMN.

           MOVE BAT-GLS-CMND TO EDT-STRN.
           PERFORM EDT-CARD.
           MOVE EDT-STRN TO QUE-ITEM.

           IF QUE-ITEM NOT > SPACES
               GO TO INI-PUT-CMN.

           IF BAT-IND-TCMN IN BAT = 'G'
               MOVE QUE-ITEM TO BIB-BIBL
               MOVE 'GNS'    TO BIB-SIST
               PERFORM GEN-BIB
               GO TO INI-PUT-CMN.

           IF BAT-IND-TCMN IN BAT = 'B'
               MOVE QUE-ITEM TO BIB-BIBL
               MOVE SCR-SISG TO BIB-SIST
               PERFORM GEN-BIB
               GO TO INI-PUT-CMN.

           MOVE QUE-PUT TO QUE-CMND.
           PERFORM GNS-PRO-QUE.

           IF BAT-IND-TCMN IN BAT = 'D' OR 'M'
              PERFORM PUT-DATA.
           GO TO INI-PUT-CMN.
       FIN-PUT-CMN.
           EXIT.

       PUT-DATA SECTION.
       INI-PUT-DATA.
           MOVE ZEROES TO WSS-VEC-ORDE.
           PERFORM VER-ORD VARYING WSS-I FROM 1 BY 1 UNTIL WSS-I > 20.
           PERFORM MOV-ORD VARYING WSS-J FROM 1 BY 1 UNTIL WSS-J > 20.
       FIN-PUT-DATA.
           EXIT.

       VER-ORD SECTION.
       INI-VER-ORD.
           IF WSS-ILEE(WSS-I) NOT = '0' AND WSS-ILEE(WSS-I) > SPACES
               PERFORM CON-NUM
               MOVE WSS-I TO WSS-ORDE(WSS-J).
       FIN-VER-ORD.
           EXIT.

       CON-NUM SECTION.
       INI-CON-NUM.
           IF WSS-ILEE(WSS-I) IS NUMERIC
               MOVE WSS-ILEE(WSS-I) TO WSS-J
               GO TO FIN-CON-NUM.
           IF WSS-ILEE(WSS-I) = 'A' MOVE 10 TO WSS-J
           ELSE
           IF WSS-ILEE(WSS-I) = 'B' MOVE 11 TO WSS-J
           ELSE
           IF WSS-ILEE(WSS-I) = 'C' MOVE 12 TO WSS-J
           ELSE
           IF WSS-ILEE(WSS-I) = 'D' MOVE 13 TO WSS-J
           ELSE
           IF WSS-ILEE(WSS-I) = 'E' MOVE 14 TO WSS-J
           ELSE
           IF WSS-ILEE(WSS-I) = 'F' MOVE 15 TO WSS-J
           ELSE
           IF WSS-ILEE(WSS-I) = 'G' MOVE 16 TO WSS-J
           ELSE
           IF WSS-ILEE(WSS-I) = 'H' MOVE 17 TO WSS-J
           ELSE
           IF WSS-ILEE(WSS-I) = 'I' MOVE 18 TO WSS-J
           ELSE
           IF WSS-ILEE(WSS-I) = 'J' MOVE 19 TO WSS-J
           ELSE
           IF WSS-ILEE(WSS-I) = 'K' MOVE 20 TO WSS-J.
       FIN-CON-NUM.
           EXIT.

       MOV-ORD SECTION.
       INI-MOV-ORD.
           IF WSS-ORDE(WSS-J) NOT = 0
               MOVE WSS-ORDE(WSS-J) TO WSS-I
               IF WSS-ILEE(WSS-I) NOT = '0' AND WSS-ILEE(WSS-I) > SPACES
                   MOVE FRM-DAT-DATO(WSS-I) TO QUE-ITEM

                   MOVE QUE-PUT TO QUE-CMND
                   PERFORM GNS-PRO-QUE.
       FIN-MOV-ORD.
           EXIT.

       CHK-QUEU SECTION.
       INI-CHK-QUEU.
           MOVE 1 TO QUE-NITM.
           MOVE QUE-GET TO QUE-CMND.
           PERFORM GNS-PRO-QUE.
       FIN-CHK-QUEU.
           EXIT.

       GEN-CMA SECTION.
       INI-GEN-CMA.
           MOVE QUE-GET TO QUE-CMND.
           PERFORM GNS-PRO-QUE.
           IF QUE-STAT NOT = QUE-STAT-OKS
               GO TO FIN-GEN-CMA.
           MOVE QUE-ITEM TO LNK-CARD(QUE-NITM).
       FIN-GEN-CMA.
           EXIT.

       QUE-EOQ SECTION.
       INI-QUE-EOQ.
           MOVE QUE-STAT-EOQ TO QUE-STAT.
           GO TO FIN-GNS-PRO-QUE.
       FIN-QUE-EOQ.
           EXIT.

       QUE-NEX SECTION.
       INI-QUE-NEX.
           MOVE QUE-STAT-NEX TO QUE-STAT.
           GO TO FIN-GNS-PRO-QUE.
       FIN-QUE-NEX.
           EXIT.

       COPY GNSBGBIB.

       COPY GNSBVCOD.
       COPY GNSBVTAB.
       COPY GNSBBTAB.

       COPY GNSBEGLS.
       COPY GNSBGHOY.

       COPY TABBBOFI.
       COPY TABBVOFI.
       COPY TABBFOFI.

      **************************************************************

       COPY GNSBGEDT REPLACING {FRM} BY JCL-FLD
                               {PRO} BY BAT-COD-PROC.

      **************************************************************

       ERR-QUE SECTION.
       INI-ERR-QUE.
           EXEC CICS HANDLE CONDITION
                     QIDERR (QUE-NEX)
                     ITEMERR(QUE-EOQ)
           END-EXEC.
       FIN-ERR-QUE.
           EXIT.

       GNS-PRO-QUE SECTION.
       INI-GNS-PRO-QUE.
           IF QUE-CMND = QUE-PUT
               GO TO PUT-QUE
           ELSE
           IF QUE-CMND = QUE-GET
               GO TO GET-QUE
           ELSE
           IF QUE-CMND = QUE-DEL
               GO TO DEL-QUE.
           MOVE 'Comando invalido :' TO QUE-MEN1.
           MOVE QUE-CMND             TO QUE-MEN2.
           EXEC CICS XCTL
                     PROGRAM('GNSPPABT')
                     COMMAREA(QUE-MENS)
                     LENGTH(+79)
           END-EXEC.

       PUT-QUE.
           EXEC CICS WRITEQ TS
                     QUEUE(QUE-COLA)
                     FROM(QUE-ITEM)
                     LENGTH(QUE-LITM)
                     AUXILIARY
           END-EXEC.
       FIN-PUT-QUE.
           GO TO FIN-GNS-PRO-QUE.

       GET-QUE.
           EXEC CICS READQ TS
                     QUEUE(QUE-COLA)
                     INTO(QUE-ITEM)
                     LENGTH(QUE-LITM)
                     ITEM(QUE-NITM)
           END-EXEC.
       FIN-GET-QUE.
           GO TO FIN-GNS-PRO-QUE.

       DEL-QUE.
           EXEC CICS DELETEQ TS
                     QUEUE(QUE-COLA)
           END-EXEC.
       FIN-DEL-QUE.
           GO TO FIN-GNS-PRO-QUE.

       FIN-GNS-PRO-QUE.
           EXIT.

       LNK-BSM SECTION.
       INI-LNK-BSM.
           EXEC CICS LINK
                     PROGRAM('BIMSUBM2')
                     COMMAREA(LNK-CMMA)
                     LENGTH(LNK-TCMA)
           END-EXEC.
       FIN-LNK-BSM.
           EXIT.
      *>>>>
*% END
