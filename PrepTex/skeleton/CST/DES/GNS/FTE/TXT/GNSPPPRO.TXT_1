*%! Codigo adicional para archivo
*% IF WSS_DTC
      *<<<< WSS_DTC
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-TAB-REQA==.
      *>>>>
*% END
*% IF WSS
      *<<<< WSS
       COPY GNSBRTAB.
       COPY GNSBRMEN.
       COPY GNSBRBAT.
       01  CTL                                             PIC X(75).
       01  DCL-VARI.
           03 DCL-CMN1                                     PIC X(60).
           03 DCL-CMN2                                     PIC X(60).
           03 DCL-IWRT                             VALUE 0 PIC 9(01).
              88 DCL-IWRT-NOT                      VALUE 0.
              88 DCL-IWRT-YES                      VALUE 1.
       01  WSS-VARI.
           03 WSS-NFLD                                     PIC X(31).
           03 WSS-MENS                                     PIC X(80).
           03 WSS-GLS-CMND                                 PIC X(75).
           03 WSS-KEY-FUNC                      OCCURS 3.
              05 WSS-KEY-NIVE                   OCCURS 4   PIC X(02).
              05 WSS-INIV                                  PIC 9(01).
      *JSS 03 WSS-VEC-ILEE.
      *       05 WSS-IND-ILEE                   OCCURS 20  PIC 9(01).
           03 WSS-TAB-NLOG                      OCCURS 4.
              05 WSS-GLS-NLOG                              PIC X(09).
              05 WSS-GLS-PRNT                              PIC X(75).
           03 WSS-SIND.
      *JSS    05 I                                         PIC 9(02).
              05 IMAX                                      PIC 9(02).
      *JSS    05 J                                         PIC 9(02).
              05 K                                         PIC 9(01).
           03 WSS-IFRM                           VALUE 0   PIC 9(01).
              88 EXISTE-FRM                      VALUE 1.
           03 WSS-ISUB                           VALUE 0   PIC 9(01).
              88 GUARDO-SUBMIT                   VALUE 1.
      *JSS 01  WSS-VARI.
           03 WSS-COLA.
              05 WSS-TERM                               PIC  X(4).
              05 FILLER      VALUE 'PRO'                PIC  X(4).
           03 WSS-LARG  COMP VALUE +80                  PIC S9(4).
           03 WSS-SIND.
              05 I           VALUE 0                    PIC  9(3).
              05 J           VALUE 0                    PIC  9(3).
           03 WSS-TABL       VALUE SPACES.
              05 WSS-IDX-NFIS   OCCURS 4.
                 07 WSS-NFIS                            PIC X(75).
                 07 WSS-PRNT                            PIC X(75).
           03 WSS-PLST.
              05 FILLER      VALUE '* $$ LST CLASS='    PIC X(15).
              05 WSS-PCLS                               PIC X(1).
              05 FILLER      VALUE ',DISP='             PIC X(6).
              05 WSS-PDEL                               PIC X(1).
              05 FILLER      VALUE ',LST=00E'           PIC X(8).
           03 WSS-PJOB.
              05 FILLER      VALUE '* $$ JOB JNM=C92'   PIC X(16).
              05 WSS-PNAM                               PIC X(4).
              05 FILLER      VALUE ',DISP=D,CLASS=X'    PIC X(15).
           03 WSS-JJOB.
              05 FILLER      VALUE '// JOB '            PIC X(07).
              05 WSS-JNAM                               PIC X(6).
              05 FILLER      VALUE SPACES               PIC X(20).
              05 FILLER      VALUE '(PGUZMAN,ECHO=YES)' PIC X(18).
           03 WSS-JCMN                                  PIC X(75).
           03 WSS-QFLD                                  PIC X(75).
           03 WSS-VEC-ILEE.
              05 WSS-IND-ILEE       OCCURS 20               PIC X.
           03 WSS-VEC-ORDE.
              05 WSS-ORDE       OCCURS 20               PIC 99.
           03 WSS-IFIN       VALUE 0                    PIC 9.
           03 WSS-LSUB  COMP VALUE +0                   PIC S9(4).
           03 WSS-ITEM  COMP VALUE +0                   PIC S9(4).
           03 WSS-SARE.
              05 WSS-IDX-SFLD   OCCURS 204.
                 07 FILLER                              PIC X(8).
                 07 WSS-SFLD                            PIC X(80).
      *>>>>
*% END
*% IF INI_FIO
      *<<<< INI_FIO
           IF SCR-SISG NOT > SPACES
               MOVE SCR-SIST TO SCR-SISG.
           MOVE SCR-TFUN TO MEN-COD-TFUN.
           MOVE SCR-FUNC TO MEN-COD-FUNC.
           IF MEN-COD-TFUN NOT = 'PRO'
               MOVE 'CODTFUNNOPRO' TO MSG-COD-MENS
               MOVE 'GNS' TO MSG-COD-SIST
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS
               PERFORM SCR-MSSG
               MOVE SCR-INST-HCM TO SCR-INST
               PERFORM SCR-COM.
      *>>>>
*% END
*% IF INI_SCR_PGM
      *<<<< INI_SCR_PGM
           GO TO CON-SCR-PGM.
      *>>>>
*% END
*% IF SCR_PGM
      *<<<< SCR_PGM
       CON-SCR-PGM.
           IF SCR-INST = SCR-INST-HKY
               PERFORM SCR-RST
               PERFORM SCR-TRL
           ELSE
           IF SCR-INST = SCR-INST-GFL
                PERFORM GET-FLD
           ELSE
           IF SCR-INST = SCR-INST-GCS
                PERFORM GET-ACC
           ELSE
           IF SCR-INST = SCR-INST-GAB
                PERFORM GET-CON.
      *>>>>
*% END
*% IF INI_CMN_PGM
      *<<<< INI_CMN_PGM
           IF SCR-STAT = SCR-STAT-ABT OR SCR-VFLD = SCR-VFLD-NOT
               MOVE 'GNS' TO MSG-COD-SIST
               IF SCR-CMND = 'ING'
                   MOVE 'PRO    NOING' TO MSG-COD-MENS
                   PERFORM GET-MSG
                   MOVE MSG-GLS-DESC TO FRM-MENS
                   GO TO FIN-CMN-PGM
               ELSE
               IF SCR-CMND = 'SUB'
                   MOVE 'PRO    NOSUB' TO MSG-COD-MENS
                   PERFORM GET-MSG
                   MOVE MSG-GLS-DESC TO FRM-MENS
                   GO TO FIN-CMN-PGM
               ELSE
                   MOVE 'PGM    CMNNX' TO MSG-COD-MENS
                   PERFORM GET-MSG
                   MOVE MSG-GLS-DESC TO FRM-MENS
                   GO TO FIN-CMN-PGM.
      *>>>>
*% END
*% IF CMN_PGM
      *<<<< CMN_PGM
      *    IF NOT EXISTE-FRM
               MOVE FRM-FFLD-TAB TO SCR-FFLD.
           IF SCR-CMND = 'ING'
               PERFORM ING-PRO
           ELSE
           IF SCR-CMND = 'SUB'
               PERFORM SUB-PRO.
      *>>>>
*% END
*% IF EOF
      *<<<< EOF
       ING-PRO SECTION.
       INI-ING-PRO.
           PERFORM PRO-FUN.
           IF DCL-IWRT = ZERO
               MOVE 'PROCESO NO TIENE ENTRADAS ASOCIADAS' TO WSS-MENS
      *JSS     GO TO PRO-FIN.
               PERFORM PRO-FIN.
      *
           MOVE 'INGRESADO OK' TO FRM-MENS.
       FIN-ING-PRO.
           EXIT.

       PRO-FUN SECTION.
      *---------------
       INI-PRO-FUN.
           MOVE MEN-COD-FUNC TO FUN-KEY-FUNC.
      *    CALL 'DESFIOFUN' USING FIO-GET-KEY.
           MOVE FIO-GET-NLS TO FIO-CMND.
           PERFORM FIO-FUN.
           IF NOT FIO-STAT-OKS
               MOVE 'NO EXISTE PROCESO EN ARCHIVO FUN' TO WSS-MENS
      *JSS     GO TO PRO-FIN.
               PERFORM PRO-FIN.
      *

      *
           MOVE EIBTRMID                TO WSS-TERM.
      *    IF FRM-IND-IDEL IN BCH-FLD = 'S'
               MOVE 'D' TO WSS-PDEL.
      *    ELSE
      *        MOVE 'K' TO WSS-PDEL.
      *    MOVE FRM-GLS-COLA IN BCH-FLD TO WSS-PCLS.
           MOVE FUN-COD-PROC TO WSS-JNAM.
           MOVE 'R' TO WSS-PCLS.
           MOVE WSS-JJOB TO WSS-QFLD.
           PERFORM PUT-QUE.
           MOVE WSS-PLST TO WSS-QFLD.
           PERFORM PUT-QUE.
      *
           MOVE 0 TO K.
           PERFORM VAL-PRO.
       LUP-PRO-FUN.
           IF FUN-COD-TFUN = 'PRO'
               PERFORM PRO-PRO
           ELSE
           IF FUN-COD-TFUN = 'BAT'
               PERFORM PRO-BAT
           ELSE
               MOVE SPACES TO WSS-MENS
               STRING 'TIPO DE LA FUNCION ' FUN-COD-NEMO
                      ' NO CORRESPONDE'
                      DELIMITED BY WSS-MENS INTO WSS-MENS
      *JSS     GO TO PRO-FIN.
               PERFORM PRO-FIN.
      *
           IF I > WSS-INIV(1) AND FIO-STAT-OKS
               GO TO LUP-PRO-FUN.
       FIN-PRO-FUN.
           EXIT.

      *JSS PRO-FIN SECTION.
      *---------------
      * INI-PRO-FIN.
      *     MOVE WSS-MENS TO FRM-MENS.
      *     CALL 'DESPROFRM' USING FRM-MSG.
      *     CALL 'DESBATCMN'.
      *     GO TO INI-PRO-FIN.
      * FIN-PRO-FIN.
      *     EXIT.

       PRO-FIN SECTION.
       INI-PRO-FIN.
           MOVE WSS-MENS TO FRM-MENS.
           PERFORM SCR-MSSG.
           MOVE SCR-INST-HCM TO SCR-INST.
           PERFORM SCR-COM.
       FIN-PRO-FIN.
           EXIT.

       VAL-PRO SECTION.
      *---------------
       INI-VAL-PRO.
           PERFORM DET-NIV VARYING I FROM 1 BY 1 UNTIL I > 4 OR
                      FUN-KEY-NIVE(I) = ZEROES.
           SUBTRACT 1 FROM I.
           IF I = 4 THEN
               MOVE 'PROCESO NO TIENE ENTRADAS ASOCIADAS' TO WSS-MENS
      *JSS     GO TO PRO-FIN.
               PERFORM PRO-FIN.
      *
           ADD 1 TO K.
           MOVE FUN-KEY-FUNC TO WSS-KEY-FUNC(K).
           MOVE I TO WSS-INIV(K).
           PERFORM NXT-FUN.
           IF NOT FIO-STAT-OKS
               MOVE 'PROCESO NO TIENE ENTRADAS ASOCIADAS' TO WSS-MENS
      *JSS     GO TO PRO-FIN.
               PERFORM PRO-FIN.
      *
           IF I NOT > WSS-INIV(K)
               MOVE 'PROCESO NO TIENE ENTRADAS ASOCIADAS' TO WSS-MENS
      *JSS     GO TO PRO-FIN.
               PERFORM PRO-FIN.
      *
       FIN-VAL-PRO.
           EXIT.

       DET-NIV SECTION.
      *----------------
       INI-DET-NIV.
       FIN-DET-NIV.
           EXIT.

       PRO-PRO SECTION.
      *---------------
       INI-PRO-PRO.
           PERFORM VAL-PRV.
      *    IF NOT PRV-STAT-OKS
      *        MOVE SPACES TO WSS-MENS
      *        STRING 'NO TIENE PRIVILEGIOS PARA EJECUTAR PROCESO '
      *               FUN-COD-NEMO ' EN ESTE PROCESO'
      *               DELIMITED BY WSS-MENS INTO WSS-MENS
      *        GO TO PRO-FIN.
           PERFORM VAL-PRO.
      *JSS IF NOT PRV-STAT-OKS
      *        PERFORM SKP-PRO UNTIL NOT ( I > WSS-INIV(K) AND FIO-STAT-OKS )
      *    ELSE
               PERFORM NXT-FUN.
       FIN-PRO-PRO.
           EXIT.

       SKP-PRO SECTION.
      *---------------
       INI-SKP-PRO.
           IF FUN-COD-TFUN = 'PRO'
               PERFORM VAL-PRO
               SUBTRACT 1 FROM K
           ELSE
           IF FUN-COD-TFUN = 'BAT'
               IF NOT GUARDO-SUBMIT
                   MOVE FUN-GLS-CMND TO DCL-CMN1
                   MOVE FUN-GLS-FMEN TO DCL-CMN2
                   MOVE 1 TO WSS-ISUB
               ELSE
                   NEXT SENTENCE
           ELSE
               MOVE SPACES TO WSS-MENS
               STRING 'TIPO DE LA FUNCION ' FUN-COD-NEMO
                      ' NO CORRESPONDE'
                      DELIMITED BY WSS-MENS INTO WSS-MENS
      *JSS     GO TO PRO-FIN.
               PERFORM PRO-FIN.
      *
           PERFORM NXT-FUN.
       FIN-SKP-PRO.
           EXIT.

       PRO-BAT SECTION.
      *---------------
       INI-PRO-BAT.
           PERFORM VAL-PRV.
      *JSS IF NOT PRV-STAT-OKS

      *        MOVE SPACES TO WSS-MENS
      *        STRING 'NO TIENE PRIVILEGIOS PARA EJECUTAR FUNCION '
      *               FUN-COD-NEMO ' EN ESTE PROCESO'
      *               DELIMITED BY WSS-MENS INTO WSS-MENS
      *               GO TO PRO-FIN.

      *JSS            GO TO FIN-PRO-BAT.
           IF FUN-COD-PROC NOT = SPACES
               PERFORM INC-BAT.
           IF NOT GUARDO-SUBMIT
               MOVE FUN-GLS-CMND TO DCL-CMN1
               MOVE FUN-GLS-FMEN TO DCL-CMN2
               MOVE 1 TO WSS-ISUB
           ELSE
               IF FUN-GLS-CMND > SPACES
                   MOVE FUN-GLS-CMND TO CTL
      *JSS         CALL 'DESFIOCTL' USING FIO-PUT
                   MOVE CTL TO WSS-QFLD
                   PERFORM PUT-QUE
                   MOVE 1 TO DCL-IWRT.
       FIN-PRO-BAT.
           PERFORM NXT-FUN.

       NXT-FUN SECTION.
      *---------------
       INI-NXT-FUN.
      *JSS CALL 'DESFIOFUN' USING FIO-GET-NXT.
           MOVE FIO-GET-NXT TO FIO-CMND.
           PERFORM FIO-FUN.
      *
           IF NOT FIO-STAT-OKS
               GO TO FIN-NXT-FUN.
           PERFORM DET-NIV VARYING I FROM 1 BY 1 UNTIL I > WSS-INIV(K)
                   OR FUN-KEY-NIVE(I) NOT = WSS-KEY-NIVE( K , I ).
       FIN-NXT-FUN.
           EXIT.

       VAL-PRV SECTION.
      *---------------
       INI-VAL-PRV.
      *           IF NOT ( FUN-IND-IPRV = 'S' OR 'N' )
      *                      CALL 'LIB$GET_SYMBOL'           USING
      *                                 BY DESCRIPTOR           PRV-SYMB
      *                                                       FUN-IND-IPRV.
      *JSS IF FUN-IND-IPRV NOT = 'N'
      *        MOVE FUN-COD-NEMO TO PRV-PROC
      *        CALL 'DESPROPRV'.
       FIN-VAL-PRV.
           EXIT.

       INC-BAT SECTION.
      *---------------
       INI-INC-BAT.
           MOVE FUN-COD-PROC TO BAT-KEY-PROC.
           MOVE SPACES       TO BAT-KEY-TRYC.
      *JSS CALL 'DESFIOBAT' USING FIO-GET-KEY.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM FIO-BAT.
      *
           IF NOT FIO-STAT-OKS
               MOVE SPACES TO WSS-MENS
               STRING 'NO EXISTE PROGRAMA ' FUN-COD-PROC ' EN BAT'
                      DELIMITED BY WSS-MENS INTO WSS-MENS
      *JSS     GO TO PRO-FIN.
               PERFORM PRO-FIN.
      *
           MOVE BAT-VEC-ILEE TO WSS-VEC-ILEE.
           MOVE BAT-GLS-CMND TO WSS-GLS-CMND.
      *JSS MOVE BAT-KEY-PROC TO BCH-KEY-PROC.
      *     MOVE 'A'          TO BCH-IND-IGEN.
      *     MOVE ZEROES       TO BCH-NUM-NEJE.
           PERFORM GEN-BAT.
       FIN-INC-BAT.
           EXIT.

       GEN-BAT SECTION.
       INI-GEN-BAT.
      *JSS PERFORM RET-ALL-PRO.
           MOVE FUN-COD-PROC TO BAT-KEY-PROC.
           MOVE 'R'          TO BAT-KEY-TRYC.
           MOVE FIO-FND-NLS  TO FIO-CMND.
           PERFORM FIO-BAT.
           IF FIO-STAT-OKS
               PERFORM LEE-REP
               MOVE FIO-END-BRW  TO FIO-CMND
               PERFORM FIO-BAT
               PERFORM FIO-TSS THRU FIN-FIO-TSS
               MOVE 'INGRESADO OK' TO FRM-MENS
           ELSE
               MOVE 'ERROR AL INGRESAR' TO FRM-MENS.
	   MOVE 1 TO DCL-IWRT.
       FIN-GEN-BAT.
           EXIT.

       LEE-REP SECTION.
       INI-LEE-REP.
           MOVE FIO-GET-NXT  TO FIO-CMND.
           PERFORM GNS-FIO-BAT.
           IF NOT ( FIO-STAT-OKS AND
      *JSS          BAT-KEY-PROC IN BAT = BAT-KEY-PROC IN BCH-FLD AND
                    BAT-KEY-PROC IN BAT = FUN-COD-PROC            AND
                    BAT-KEY-TREG = 'R')
               GO TO FIN-LEE-REP.
           COMPUTE I = BAT-KEY-CORR + 1.
           MOVE BAT-GLS-NFIS IN BAT TO WSS-NFIS (I).
           MOVE BAT-GLS-PRNT IN BAT TO WSS-PRNT (I).
           GO TO INI-LEE-REP.
       FIN-LEE-REP.
           EXIT.

       FIO-TSS SECTION.
       INI-FIO-TSS.
           PERFORM PUT-TSS-LEFT VARYING I FROM 1 BY 1 UNTIL I > 4.
           MOVE WSS-GLS-CMND     TO WSS-QFLD.
           PERFORM PUT-QUE.
           MOVE ZEROES TO WSS-VEC-ORDE.
           PERFORM VER-ORD VARYING I FROM 1 BY 1 UNTIL I > 20.
           PERFORM MOV-ORD VARYING J FROM 1 BY 1 UNTIL J > 20.
           PERFORM PUT-TSS-RIGH  VARYING I FROM 1 BY 1 UNTIL I > 4.
           MOVE '/*'        TO WSS-QFLD.
           PERFORM PUT-QUE.
       FIN-FIO-TSS.
           EXIT.

       PUT-TSS-LEFT SECTION.
       INI-PUT-TSS-LEFT.
           IF WSS-NFIS (I) > SPACES
               MOVE WSS-NFIS (I) TO WSS-QFLD
               PERFORM PUT-QUE.
       FIN-PUT-TSS-LEFT.
           EXIT.

       VER-ORD SECTION.
       INI-VER-ORD.
           IF WSS-IND-ILEE (I) NOT = '0'
               PERFORM CON-NUM
               MOVE I TO WSS-ORDE (J).
       FIN-VER-ORD.
           EXIT.

       CON-NUM SECTION.
       INI-CON-NUM.
           IF WSS-IND-ILEE (I) IS NUMERIC
               MOVE WSS-IND-ILEE (I) TO J
               GO TO FIN-CON-NUM.
           IF WSS-IND-ILEE (I) = 'A' MOVE 10 TO J
           ELSE
           IF WSS-IND-ILEE (I) = 'B' MOVE 11 TO J
           ELSE
           IF WSS-IND-ILEE (I) = 'C' MOVE 12 TO J
           ELSE
           IF WSS-IND-ILEE (I) = 'D' MOVE 13 TO J
           ELSE
           IF WSS-IND-ILEE (I) = 'E' MOVE 14 TO J
           ELSE
           IF WSS-IND-ILEE (I) = 'F' MOVE 15 TO J
           ELSE
           IF WSS-IND-ILEE (I) = 'G' MOVE 16 TO J
           ELSE
           IF WSS-IND-ILEE (I) = 'H' MOVE 17 TO J
           ELSE
           IF WSS-IND-ILEE (I) = 'I' MOVE 18 TO J
           ELSE
           IF WSS-IND-ILEE (I) = 'J' MOVE 19 TO J
           ELSE
           IF WSS-IND-ILEE (I) = 'K' MOVE 20 TO J.
       FIN-CON-NUM.
           EXIT.

       MOV-ORD SECTION.
       INI-MOV-ORD.
           IF WSS-ORDE (J) NOT = 0
               MOVE WSS-ORDE (J) TO I
               IF WSS-IND-ILEE (I) NOT = '0'
                   MOVE FRM-DAT-DATO (I) TO WSS-QFLD
                   PERFORM PUT-QUE.
       FIN-MOV-ORD.
           EXIT.

       PUT-TSS-RIGH SECTION.
       INI-PUT-TSS-RIGH.
           IF WSS-PRNT (I) > SPACES
               MOVE WSS-PRNT (I) TO WSS-QFLD
               PERFORM PUT-QUE.
       FIN-PUT-TSS-RIGH.
           EXIT.

       SUB-PRO SECTION.
       INI-SUB-PRO.
           IF SCR-VFLD = SCR-VFLD-NOT OR SCR-STAT = SCR-STAT-ABT
               MOVE 'NO FUE SUBMITIDO' TO FRM-MENS
      *JSS     MOVE 'COM'        TO SCR-CCPP
               MOVE SCR-INST-HCM TO SCR-INST
               GO TO FIN-SUB-PRO.
           MOVE EIBTRMID TO WSS-PNAM WSS-TERM.
           MOVE WSS-PJOB TO WSS-SFLD (1).
           MOVE '* $$ LST CLASS=R' TO WSS-SFLD (2).
           PERFORM ERR-QUE THRU FIN-ERR-QUE.
           MOVE 1 TO WSS-ITEM.
           PERFORM GEN-SUB THRU FIN-GEN-SUB VARYING I FROM 3 BY 1
               UNTIL I > 200 OR WSS-IFIN NOT = 0.
           IF WSS-IFIN = 2
               MOVE 'NADA QUE SUBMITIR' TO FRM-MENS
      *JSS     MOVE 'COM'        TO SCR-CCPP
               MOVE SCR-INST-HCM TO SCR-INST
               GO TO FIN-SUB-PRO.

      * CHEQUEAR SI NUM TARJETAS > 200

           SUBTRACT 1 FROM I.
           MOVE '/&'       TO WSS-SFLD (I).
           ADD 1           TO I.
           MOVE '* $$ EOJ' TO WSS-SFLD (I).
           COMPUTE WSS-LSUB = 88 * I.
           PERFORM PUT-POW THRU FIN-PUT-POW.
           PERFORM DEL-QUE THRU FIN-DEL-QUE.
      *JSS MOVE 'COM' TO SCR-CCPP.
           MOVE SCR-INST-HCM TO SCR-INST.
           IF WSS-IFIN = 2
               MOVE 'NADA QUE SUBMITIR' TO FRM-MENS
           ELSE
               MOVE 'SUBMITIDO OK' TO FRM-MENS.
       FIN-SUB-PRO.
           EXIT.

       PUT-QUE SECTION.
       INI-PUT-QUE.
           EXEC CICS WRITEQ TS QUEUE(WSS-COLA)
                               FROM(WSS-QFLD)
                               LENGTH(WSS-LARG)
                               AUXILIARY
           END-EXEC.
       FIN-PUT-QUE.
           EXIT.

      *JSS

       ERR-QUE SECTION.
       INI-ERR-QUE.
           EXEC CICS HANDLE CONDITION
                             QIDERR (QUE-ERR)
                             ITEMERR(QUE-FIN)
           END-EXEC.
       FIN-ERR-QUE.
           EXIT.

       QUE-FIN SECTION.
       INI-QUE-FIN.
           MOVE 1 TO WSS-IFIN.
           GO TO FIN-GET-QUE.
       FIN-QUE-FIN.
           EXIT.

       QUE-ERR SECTION.
       INI-QUE-ERR.
           MOVE 2 TO WSS-IFIN.
           GO TO FIN-GET-QUE.
       FIN-QUE-ERR.
           EXIT.

       GET-QUE SECTION.
       INI-GET-QUE.
           EXEC CICS READQ TS QUEUE(WSS-COLA)
                              INTO(WSS-SFLD (I))
                              LENGTH(WSS-LARG)
                              ITEM(WSS-ITEM)
           END-EXEC.
       FIN-GET-QUE.
           EXIT.

       GEN-SUB SECTION.
       INI-GEN-SUB.
           PERFORM GET-QUE THRU FIN-GET-QUE.
           ADD 1  TO WSS-ITEM.
       FIN-GEN-SUB.
           EXIT.

       PUT-POW SECTION.
       INI-PUT-POW.
           EXEC CICS LINK     PROGRAM('BIMSUBM2')
                              COMMAREA(WSS-SARE)
                              LENGTH(WSS-LSUB)
           END-EXEC.
       FIN-PUT-POW.
           EXIT.

       DEL-QUE SECTION.
       INI-DEL-QUE.
           EXEC CICS DELETEQ TS QUEUE(WSS-COLA)
           END-EXEC.
       FIN-DEL-QUE.
           EXIT.

       FIO-FUN SECTION.
       INI-FIO-FUN.
           MOVE SCR-SISG TO FIO-SIST.
           PERFORM GNS-FIO-FUN.
       FIN-FIO-FUN.
           EXIT.

       FIO-BAT SECTION.
       INI-FIO-BAT.
           MOVE SCR-SISG TO FIO-SIST.
           PERFORM GNS-FIO-BAT.
       FIN-FIO-BAT.
           EXIT.

       COPY GNSBBTAB.
       COPY GNSBFTAB.
       COPY GNSBFBAT.
      *>>>>
*% END
