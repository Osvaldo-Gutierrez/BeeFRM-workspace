*%! Codigo adicional
*% IF WSS
      *<<<< WSS
       01  WSS-VARI.
           03 WSS-COD-VCA1.
              05 WSS-GLS-DMTZ                  PIC  X(02).
              05 WSS-COD-DATA.
                 07 WSS-COD-EJEV               PIC  X(01).
                 07 WSS-COD-EJEH               PIC  X(01).
                 07 WSS-COD-MTRZ               PIC  X(02).
           03 WSS-COD-VCA2.
              05 WSS-NUM-FILA                  PIC  9(03).
              05 WSS-NUM-COLU                  PIC  9(03).
           03 WSS-CMSG                         PIC  X(12).
           03 WSS-SIND.
              05 WSS-I                         PIC 9(03).
              05 WSS-INDI                      PIC 9(03).
              05 WSS-NFIL             VALUE 14 PIC 9(02).
              05 WSS-NCOL             VALUE 05 PIC 9(02).
              05 WSS-LFIL                      PIC 9(03).
              05 WSS-LCOL                      PIC 9(03).
              05 WSS-LREG             VALUE 70 PIC 9(03).
              05 WSS-REST                      PIC 9(03).
              05 WSS-AUXI                      PIC 9(03).
      *>>>>
*% END
*% IF INI_FIO_VAX
      *<<<< INI_FIO_VAX
           CALL 'LIB$GET_SYMBOL'           USING
                 BY DESCRIPTOR           'GNS$PRY'
                                         SCR-SISG.

           MOVE SPACES  TO FIO-VOID.
           MOVE 'GNS'   TO FIO-SIST.
           MOVE 'TAB'   TO FIO-FNAM.
           MOVE FIO-VID TO FIO-CMND.
           PERFORM GNS-FIO-MSG.

           IF SCR-SISG NOT = 'GNS'
               MOVE SPACES   TO FIO-VOID
               MOVE SCR-SISG TO FIO-SIST
               MOVE 'TAB'    TO FIO-FNAM
               MOVE FIO-VID  TO FIO-CMND
               PERFORM GNS-FIO-TAB
               MOVE FIO-ACCS-UPD TO FIO-ACCS
               MOVE FIO-ACC      TO FIO-CMND
               PERFORM GNS-FIO-TAB
               MOVE FIO-INP      TO FIO-CMND
               PERFORM GNS-FIO-TAB.
*% END
*% IF FND_KEY
      *<<<< FND_KEY
           PERFORM PRO-INI-REG.
           PERFORM PRO-BUS-REG.
           IF SCR-CCPP = 'ING'
               MOVE '23' TO FIO-STAT
           ELSE
               MOVE '00' TO FIO-STAT.
           MOVE '00' TO PGM-STAT-CAM.
           GO TO FIN-FND-KEY.
      *>>>>
*% END
*% IF INI_CMN_ING
      *<<<< INI_CMN_ING
           PERFORM RET-ALL-VCM.
           PERFORM PRO-PUT-REG.
           IF WSS-CMSG NOT > SPACES
               MOVE 'VCMCAM OK' TO WSS-CMSG.
           MOVE 'GNS' TO MSG-COD-SIST.
           MOVE WSS-CMSG TO MSG-COD-MENS.
           PERFORM GET-MSG.
           MOVE MSG-GLS-DESC TO FRM-MENS.
           GO TO FIN-CMN-ING.
      *>>>>
*% END
*% IF INI_CMN_MOD
      *<<<< INI_CMN_MOD
           PERFORM RET-ALL-VCM.
           PERFORM PRO-PUT-REG.
           IF WSS-CMSG NOT > SPACES
               MOVE 'VCMCAM OK' TO WSS-CMSG.
           MOVE 'GNS' TO MSG-COD-SIST.
           MOVE WSS-CMSG TO MSG-COD-MENS.
           PERFORM GET-MSG.
           MOVE MSG-GLS-DESC TO FRM-MENS.
           GO TO FIN-CMN-MOD.
      *>>>>
*% END
*% IF EOF
      *<<<< EOF
       PRO-INI-REG SECTION.
       INI-PRO-INI-REG.
           MOVE 1 TO WSS-I.
       LUP-PRO-INI-REG.
           MOVE 0 TO FRM-SGV-VCAM(WSS-I).
           ADD 1 TO WSS-I.
           IF WSS-I NOT > WSS-LREG
               GO TO LUP-PRO-INI-REG.
       FIN-PRO-INI-REG.
           EXIT.

       PRO-BUS-REG SECTION.
       INI-PRO-BUS-REG.
      *Establece el limite logico de la matriz
           ADD WSS-NFIL FRM-NUM-VFIL IN VCM-FLD GIVING WSS-LFIL.
           SUBTRACT 1 FROM WSS-LFIL.
           ADD WSS-NCOL FRM-NUM-VCOL IN VCM-FLD GIVING WSS-LCOL.
           SUBTRACT 1 FROM WSS-LCOL.
      *
           MOVE FRM-NUM-VFIL IN VCM-FLD TO WSS-NUM-FILA.
           MOVE FRM-NUM-VCOL IN VCM-FLD TO WSS-NUM-COLU.
           MOVE WSS-COD-VCA2 TO CAM-COD-VCAM IN CAM(2).
           MOVE FIO-GET-NLS TO FIO-CMND.
       LUP-PRO-BUS-REG.
           PERFORM TAB-FIO-CAM.
           IF FIO-STAT-OKS
               MOVE CAM-COD-VCAM IN CAM(2) TO WSS-COD-VCA2.
           IF FIO-STAT-OKS                                     AND
              CAM-NUM-DCAM IN CAM(1) = FRM-NUM-DCAM IN VCM-FLD AND
              CAM-NUM-MCAM IN CAM(1) = FRM-NUM-MCAM IN VCM-FLD AND
              CAM-NUM-SCAM IN CAM(1) = FRM-NUM-SCAM IN VCM-FLD AND
              CAM-NUM-ACAM IN CAM(1) = FRM-NUM-ACAM IN VCM-FLD AND
              CAM-COD-VCAM IN CAM(1) = WSS-COD-VCA1
               IF WSS-NUM-FILA NOT < FRM-NUM-VFIL AND
                  WSS-NUM-FILA NOT > WSS-LFIL     AND
                  WSS-NUM-COLU NOT < FRM-NUM-VCOL AND
                  WSS-NUM-COLU NOT > WSS-LCOL
                   PERFORM TRA-COR-IDX
                   MOVE CAM-SGV-VCAM IN CAM TO FRM-SGV-VCAM(WSS-INDI)
                   MOVE FIO-GET-NXT TO FIO-CMND
                   GO TO LUP-PRO-BUS-REG
               ELSE
                   IF NOT ( WSS-NUM-FILA > WSS-LFIL OR
                          ( WSS-NUM-FILA = WSS-LFIL AND
                            WSS-NUM-COLU > WSS-LCOL ) )
                       MOVE FIO-GET-NXT TO FIO-CMND
                       GO TO LUP-PRO-BUS-REG.
       CON-PRO-BUS-REG.
           MOVE 1 TO WSS-I.
           MOVE FRM-NUM-VFIL IN VCM-FLD TO WSS-INDI.
       LU1-PRO-BUS-REG.
           MOVE WSS-INDI TO FRM-NUM-FILA(WSS-I).
      *BUS-TAB busca glosa de codigo en tabla
           MOVE SCR-SISG TO TAB-COD-SIST.
           MOVE 'FRM'    TO TAB-COD-TTAB IN TAB.
           MOVE SPACES   TO TAB-COD-CTAB IN TAB.
           STRING 'VCM' FRM-COD-EJEV IN VCM-FLD WSS-INDI
               DELIMITED BY SIZE INTO TAB-COD-CTAB IN TAB.
           PERFORM BUS-TAB.
           IF MSG-COD-MENS = 'COD    NEX'
               MOVE SPACES TO FRM-GLS-GFIL IN VCM-FLD(WSS-I)
           ELSE
               MOVE TAB-GLS-ABRV IN TAB TO
                    FRM-GLS-GFIL IN VCM-FLD(WSS-I).
           ADD 1 TO WSS-I.
           ADD 1 TO WSS-INDI.
           IF WSS-I NOT > WSS-NFIL
               GO TO LU1-PRO-BUS-REG.

           MOVE 1 TO WSS-I.
           MOVE FRM-NUM-VCOL IN VCM-FLD TO WSS-INDI.
       LU2-PRO-BUS-REG.
           MOVE WSS-INDI TO FRM-NUM-COLU(WSS-I).
      *BUS-TAB busca glosa de codigo en tabla
           MOVE SCR-SISG TO TAB-COD-SIST.
           MOVE 'FRM'    TO TAB-COD-TTAB IN TAB.
           MOVE SPACES   TO TAB-COD-CTAB IN TAB.
           STRING 'VCM' FRM-COD-EJEH IN VCM-FLD WSS-INDI
               DELIMITED BY SIZE INTO TAB-COD-CTAB IN TAB.
           PERFORM BUS-TAB.
           IF MSG-COD-MENS = 'COD    NEX'
               MOVE SPACES TO FRM-GLS-GCOL IN VCM-FLD(WSS-I)
           ELSE
               MOVE TAB-GLS-ABRV IN TAB TO
                    FRM-GLS-GCOL IN VCM-FLD(WSS-I).
           ADD 1 TO WSS-I.
           ADD 1 TO WSS-INDI.
           IF WSS-I NOT > WSS-NCOL
               GO TO LU2-PRO-BUS-REG.
       FIN-PRO-BUS-REG.
           EXIT.

       TRA-COR-IDX SECTION.
       INI-TRA-COR-IDX.
           COMPUTE WSS-INDI = 
           ( ( WSS-NUM-FILA - ( FRM-NUM-VFIL - 1 ) ) - 1 ) *
               WSS-NCOL + ( WSS-NUM-COLU - ( FRM-NUM-VCOL - 1 ) ).
       FIN-TRA-COR-IDX.
           EXIT.

       PRO-PUT-REG SECTION.
       INI-PRO-PUT-REG.
           MOVE SPACES TO WSS-CMSG.
           PERFORM GET-FHOY.
           MOVE 0 TO WSS-INDI.
       LUP-PRO-PUT-REG.
           ADD 1 TO WSS-INDI.
           IF WSS-INDI > WSS-LREG
               GO TO FIN-PRO-PUT-REG.
           PERFORM KEY-CAM-VCM.
           PERFORM TRA-IDX-COR.
           MOVE WSS-COD-VCA2 TO CAM-COD-VCAM IN CAM(2).
           IF FRM-SGV-VCAM(WSS-INDI) > ZEROES
               MOVE FRM-SGV-VCAM(WSS-INDI)
                                 TO CAM-SGV-VCAM IN CAM
               MOVE 'S'          TO CAM-IND-VIGE IN CAM
               MOVE HOY-STP-ITRN TO CAM-STP-ITRN IN CAM
               MOVE FIO-PUT TO FIO-CMND
               PERFORM TAB-FIO-CAM
               IF NOT FIO-STAT-OKS
                   MOVE FIO-GET-KEY-UPD TO FIO-CMND
                   PERFORM TAB-FIO-CAM
                   IF NOT FIO-STAT-OKS
                       MOVE 'VCMCAM NOGKU' TO WSS-CMSG
                       GO TO FIN-PRO-PUT-REG
                   ELSE
                       MOVE FRM-SGV-VCAM(WSS-INDI)
                                         TO CAM-SGV-VCAM IN CAM
                       MOVE 'S'          TO CAM-IND-VIGE IN CAM
                       MOVE HOY-STP-ITRN TO CAM-STP-ITRN IN CAM
                       MOVE FIO-MOD TO FIO-CMND
                       PERFORM TAB-FIO-CAM
                       IF NOT FIO-STAT-OKS
                           MOVE 'VCMCAM NOMOD' TO WSS-CMSG
                           GO TO FIN-PRO-PUT-REG
                       ELSE
                           NEXT SENTENCE
               ELSE
                   NEXT SENTENCE
           ELSE
               MOVE FIO-GET-KEY-UPD TO FIO-CMND
               PERFORM TAB-FIO-CAM
               IF FIO-STAT-OKS
                   MOVE FIO-DEL TO FIO-CMND
                   PERFORM TAB-FIO-CAM
                   IF NOT FIO-STAT-OKS
                       MOVE 'VCMCAM NODEL' TO WSS-CMSG
                       GO TO FIN-PRO-PUT-REG.
           GO TO LUP-PRO-PUT-REG.
       FIN-PRO-PUT-REG.
           EXIT.

       TRA-IDX-COR SECTION.
       INI-TRA-IDX-COR.
           DIVIDE WSS-INDI BY WSS-NCOL GIVING WSS-AUXI
                                       REMAINDER WSS-REST.
           MOVE WSS-AUXI TO WSS-NUM-FILA.
           IF WSS-REST > ZEROES
               ADD 1 TO WSS-NUM-FILA.
           SUBTRACT FRM-NUM-VFIL FROM WSS-NUM-FILA.
           ADD 1 TO WSS-NUM-FILA.
      *
           IF WSS-REST > ZEROES
               MOVE WSS-REST TO WSS-NUM-COLU
           ELSE
               MOVE WSS-NCOL TO WSS-NUM-COLU.
           SUBTRACT FRM-NUM-VCOL FROM WSS-NUM-COLU.
           ADD 1 TO WSS-NUM-COLU.
       FIN-TRA-IDX-COR.
           EXIT.

       COPY GNSBVCOD.
       COPY GNSBVTAB.
       COPY GNSBBTAB.
      *>>>>
*% END
*% IF EOF_VAX
      *<<<< EOF_VAX
      * Modulo FIO para archivo GNSTAB
       GNS-FIO-TAB SECTION.
       INI-GNS-FIO-TAB.
      *JSS
           MOVE FIO-SIST TO TAB-COD-SIST.
      *ISP
           IF TAB-COD-SIST NOT = 'GNS'
               MOVE 'PRY' TO TAB-COD-SIST.
           IF FIO-CMND = FIO-PUT OR FIO-MOD
               MOVE TAB-COD-TTAB IN TAB TO TAB-CIC-TTAB IN TAB
                                           TAB-EXT-TTAB IN TAB
                                           TAB-SNX-TTAB IN TAB.
           CALL TAB-GLS-FTAB USING FIO-CMND TAB.
           MOVE FIO-SIST TO FIO-MENS-SIS.
           MOVE 'TAB'    TO FIO-MENS-REG.
       FIN-GNS-FIO-TAB.
           EXIT.
      *>>>>
*% END
