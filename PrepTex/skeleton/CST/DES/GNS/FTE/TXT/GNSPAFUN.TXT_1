*%! Codigo adicional para programa
*% IF WSS
      *<<<< WSS
       01  WSS-VARI.
           03 WSS-KEY-FUNC                                 PIC X(08).
           03 WSS-KEY-AUXI                                 PIC X(08).
           03 WSS-KEY-NEMO.
                      05 WSS-KEY-MENU                      PIC X(03).
                      05 WSS-KEY-CACC                      PIC X(03).
                      05 WSS-KEY-NREG                      PIC X(06).
           03 WSS-VEC-SEPA           VALUE
           '2222222222222222222211111111111111111111'.
                      05 WSS-SEPA           OCCURS 40      PIC 9(01).
           03 WSS-VEC-FINI           VALUE
           '121110090807060504030707060605050404030307070707060606060505
      -    '05050404040403030303'.
                      05 WSS-FINI           OCCURS 40      PIC 9(02).
           03 WSS-TAB-FICO.
                      05 WSS-VEC-FICO OCCURS 40.
                                 07 WSS-FICO OCCURS 2      PIC 9(02).
           03 WSS-VEC-KEYS.
                      05 WSS-KEYS           OCCURS 40      PIC X(08).
           03 WSS-REST                                     PIC 9(01).
           03 WSS-FILA                                     PIC 9(02).
           03 WSS-COLU                                     PIC 9(02).
           03 WSS-SIND.
                      05 I                                 PIC 9(02).
                      05 J                                 PIC 9(02).
                      05 IMAX                              PIC 9(02).
                      05 LMAX                              PIC 9(02).
                      05 M                                 PIC 9(02).
                      05 N                                 PIC 9(02).
           03 WSS-STAT                COMP                 PIC 9(09).
                      88 WSS-STAT-OKS VALUE 0.
                      88 WSS-STAT-MAL VALUE 1.
           03 WSS-MENS                                     PIC X(80).
      *>>>>
*% END
*% IF INI_FIO
      *<<<< INI_FIO
           IF SCR-SISG NOT > SPACES
               MOVE SCR-SIST TO SCR-SISG.
      *>>>>
*% END
*% IF CMN_ING OR INI_CMN_MOD OR INI_CMN_ELI OR INI_CMN_ACC OR CMN_PGM
      *<<<< CMN_ING OR INI_CMN_MOD OR INI_CMN_ELI OR INI_CMN_ACC OR CMN_PGM
           MOVE SCR-SISG TO FIO-SIST.
      *>>>>
*% END
*% IF ABT_CMN_ACC
      *<<<< ABT_CMN_ACC
               MOVE 'CALCULO NO FUE EFECTUADO' TO FRM-MENS
      *>>>>
*% END
*% IF INI_CMN_ACC
      *<<<< INI_CMN_ACC
           PERFORM RET-ALL-FUN.
           PERFORM CAL-FUN.
           MOVE WSS-MENS TO FRM-MENS.
           GO TO FIN-CMN-ACC.
      *>>>>
*% END
*% IF FND_KEY
      *<<<< FND_KEY
           IF FUN-COD-FUNC IN FUN-FLD NOT > SPACES
               MOVE FUN-COD-NEMO IN FUN-FLD TO FUN-COD-NEMO IN FUN
               MOVE SCR-SISG        TO FIO-SIST
               MOVE 'FUN-KEY-NEMO'  TO FIO-AKEY
               MOVE FIO-GET-KEY-ALT TO FIO-CMND
               PERFORM GNS-FIO-FUN
               MOVE SPACES TO FIO-AKEY
               IF NOT FIO-STAT-OKS
                   MOVE FIO-STAT-NEX TO FIO-STAT
                   GO TO FIN-FND-KEY
               ELSE
                   GO TO FIN-FND-KEY.
           MOVE SCR-SISG    TO FIO-SIST.
      *>>>>
*% END
*% IF CMN_MOD
      *<<<< CMN_MOD
           IF FUN-KEY-FUNC IN FUN = ZEROES
               MOVE FUN-COD-CMEN IN FUN TO FUN-COD-SIST IN FUN.
      *>>>>
*% END
*% IF CMN_ING
      *<<<< CMN_ING
           IF FUN-KEY-FUNC IN FUN = ZEROES
               MOVE FUN-COD-CMEN IN FUN TO FUN-COD-SIST IN FUN.
      *>>>>
*% END
*% IF EOF
      *<<<< EOF
       CAL-FUN SECTION.
       INI-CAL-FUN.
           PERFORM INI-CAL.
           PERFORM BUS-FUN.
           IF WSS-STAT-MAL
               GO TO FIN-CAL-FUN.
           PERFORM ORD-KEY VARYING M FROM 1 BY 1 UNTIL M > (IMAX - 1).
           PERFORM CAL-POS.
           PERFORM PUT-POS VARYING I FROM 1 BY 1 UNTIL I > IMAX.
       FIN-CAL-FUN.
           EXIT.

       INI-CAL SECTION.
       INI-INI-CAL.
           MOVE 0 TO IMAX.
           MOVE 0 TO WSS-STAT.
           MOVE 'CALCULO EFECTUADO OK' TO WSS-MENS.
       FIN-INI-CAL.
           EXIT.

       BUS-FUN SECTION.
       INI-BUS-FUN.
           IF FUN-COD-TFUN IN FUN NOT = 'MEN'
                MOVE 1 TO WSS-STAT
                MOVE 'TIPO FUNCION debe ser MEN (Menu)' TO WSS-MENS
                GO TO FIN-BUS-FUN.
           MOVE FUN-COD-MENU IN FUN TO WSS-KEY-MENU.
           MOVE FUN-COD-MENU IN FUN TO FUN-KEY-CMEN IN FUN.
           MOVE SPACES       TO FUN-KEY-CACC IN FUN.
           MOVE SPACES       TO FUN-KEY-NREG IN FUN.
      *JSS CALL 'DESFIOFUN' USING '<GET_NLS/FUN-KEY-NEMO>'.
           MOVE SCR-SISG        TO FIO-SIST.
           MOVE 'FUN-KEY-NEMO'  TO FIO-AKEY.
           MOVE FIO-GET-NLS-ALT TO FIO-CMND.
           PERFORM GNS-FIO-FUN.
           MOVE SPACES TO FIO-AKEY.
           IF NOT ( FIO-STAT-OKS AND
                    FUN-KEY-CMEN IN FUN = WSS-KEY-MENU )
               MOVE 1 TO WSS-STAT
               MOVE 'NO EXISTEN OPCIONES PARA ESTE MENU' TO WSS-MENS
               GO TO FIN-BUS-FUN.
       LUP-BUS-FUN.
           ADD 1 TO IMAX.
           MOVE FUN-KEY-FUNC IN FUN TO WSS-KEYS(IMAX).
      *JSS CALL 'DESFIOFUN' USING '<GET_NXT>'.
           MOVE SCR-SISG        TO FIO-SIST.
           MOVE 'FUN-KEY-NEMO'  TO FIO-AKEY.
           MOVE FIO-GET-NXT-ALT TO FIO-CMND.
           PERFORM GNS-FIO-FUN.
           MOVE SPACES TO FIO-AKEY.
           IF FIO-STAT-OKS AND FUN-KEY-CMEN IN FUN = WSS-KEY-MENU
               GO TO LUP-BUS-FUN.
       FIN-BUS-FUN.
           EXIT.

       ORD-KEY SECTION.
       INI-ORD-KEY.
           PERFORM ORD-ORD VARYING N FROM M BY 1 UNTIL N > IMAX.
       FIN-ORD-KEY.
           EXIT.

       ORD-ORD SECTION.
       INI-ORD-ORD.
           IF WSS-KEYS(M) > WSS-KEYS(N)
               MOVE WSS-KEYS(N) TO WSS-KEY-AUXI
               MOVE WSS-KEYS(M) TO WSS-KEYS(N)
               MOVE WSS-KEY-AUXI TO WSS-KEYS(M).
       FIN-ORD-ORD.
           EXIT.

       CAL-POS SECTION.
       INI-CAL-POS.
           MOVE 0 TO J.
           MOVE WSS-FINI(IMAX) TO WSS-FILA.
           IF IMAX NOT > 10
                MOVE 24 TO WSS-COLU
                PERFORM CAL-FIL VARYING I FROM 1 BY 1 UNTIL I > IMAX
                GO TO FIN-CAL-POS.
           DIVIDE IMAX BY 2 GIVING LMAX REMAINDER WSS-REST.
           IF WSS-REST NOT = 0
               ADD 1 TO LMAX.
           MOVE 1 TO WSS-COLU.
           PERFORM CAL-FIL VARYING I FROM 1 BY 1 UNTIL I > LMAX.
           MOVE WSS-FINI(IMAX) TO WSS-FILA.
           DIVIDE IMAX BY 2 GIVING LMAX.
           MOVE 41 TO WSS-COLU.
           PERFORM CAL-FIL VARYING I FROM 1 BY 1 UNTIL I > LMAX.
       FIN-CAL-POS.
           EXIT.

       CAL-FIL SECTION.
       INI-CAL-FIL.
           ADD 1 TO J.
           MOVE WSS-FILA TO WSS-FICO(J, 1)
           MOVE WSS-COLU TO WSS-FICO(J, 2)
           ADD WSS-SEPA(IMAX) TO WSS-FILA.
       FIN-CAL-FIL.
           EXIT.

       PUT-POS SECTION.
       INI-PUT-POS.
           MOVE WSS-KEYS(I) TO FUN-KEY-FUNC IN FUN.
      *JSS CALL 'DESFIOFUN' USING '<GET_KEY>'.
           MOVE SCR-SISG        TO FIO-SIST.
           MOVE FIO-GET-KEY-UPD TO FIO-CMND.
           PERFORM GNS-FIO-FUN.
           MOVE WSS-FICO(I, 1) TO FUN-NUM-FILA IN FUN.
           MOVE WSS-FICO(I, 2) TO FUN-NUM-COLU IN FUN.
      *JSS CALL 'DESFIOFUN' USING '<MOD>'.
           MOVE SCR-SISG TO FIO-SIST.
           MOVE FIO-MOD TO FIO-CMND.
           PERFORM GNS-FIO-FUN.
           IF NOT FIO-STAT-OKS
               MOVE 1 TO WSS-STAT
               MOVE 'ERROR al ACTUALIZAR FILA/COLUMNA' TO WSS-MENS
               MOVE IMAX TO I.
       FIN-PUT-POS.
           EXIT.

       COPY GNSBVIND.
       COPY GNSBVMSC.
      *>>>>
*% END
