*%! Codigo adicional para archivo GRDPQQEV
*% IF SETTAG
*% FNCPQ = "COBRJUDICIAL"
*% VSNPQ = "05.11.22.1"
*% END
*% LARGO_MI_COMMAREA = 20
*% PGM_PTC = TRUE
*% IF MI_COMMAREA
      *<<<< MI_COMMAREA
           03 CMA-VARI.
              05 SCR-IMAX      COMP                   PIC S9(04).
              05 SCR-I         COMP                   PIC S9(04).
      *>>>>
*% END
*% IF WSS
      *<<<< WSS
       COPY GRDWGQEV.
       COPY GNSWGPES.
       COPY GNSBRMSC.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-MSC-REQA==.
       COPY TABBRCAM.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-CAM-REQA==.
       COPY GRDBRREC.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-REC-REQA==.
       COPY GRDBRRRO.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-RRO-REQA==.
    
       01  WSS-VARI.
           03  WSS-I                              PIC 9(02).
      *>>>>
*% END
*% IF INI_FIO
      *<<<< INI_FIO                                                     
           IF SCR-OFRM-SRV                                              
              MOVE TSK-TERM-ALF TO QEV-COD-TERM                         
              MOVE TSK-TERM-ALF TO QEV-COD-TERM-MAS                     
                                                                        
           ELSE                                                         
              MOVE EIBTRMID     TO QEV-COD-TERM                         
              MOVE EIBTRMID     TO QEV-COD-TERM-MAS.                    
      *>>>>                                                             
*% END
*% IF PFS_SCR_ACC
      *<<<< PFS_SCR_ACC
           IF FRM-FFLD = FRM-FFLD-PF6
                    OR   FRM-FFLD-PF5
               PERFORM VAL-NUM-KEY-QEV
               PERFORM VAL-NUM-FLD-QEV
               PERFORM RST-STAT
               PERFORM FND-SCR-KEY THRU FIN-SCR-KEY
               IF SCR-STAT NOT = SCR-STAT-ABT
                   PERFORM SCR-TRL
               ELSE
                   PERFORM DESSCRTRL
                   GO TO FIN-SCR-ACC.
      *>>>>
*% END
*% IF INI_FND_KEY
      *<<<< INI_FND_KEY
           MOVE SPACES TO FRM-MEN1.
           IF FRM-FFLD = FRM-FFLD-PF5
               MOVE PGM-SNUL TO PGM-STAT-LEA
               SUBTRACT 1 FROM SCR-I GIVING QEV-I
               IF QEV-I NOT > ZEROES
                   MOVE 'QEV LIQPRV' TO MSG-COD-MENS
                   GO TO ERR-FND-KEY
               ELSE
                   GO TO CARGA-QEV
           ELSE
           IF FRM-FFLD = FRM-FFLD-PF6
               MOVE PGM-SNUL TO PGM-STAT-LEA
               ADD 1 SCR-I GIVING QEV-I
               IF QEV-I > SCR-IMAX
                   MOVE 'QEV LIQNXT' TO MSG-COD-MENS
                   GO TO ERR-FND-KEY
               ELSE
                   GO TO CARGA-QEV.
           GO TO CON-FND-KEY.

      *>>>>
*% END
*% IF FIN_FND_KEY
      *<<<< FIN_FND_KEY
           IF NOT FIO-STAT-OKS
               GO TO FIN-FND-KEY.
       CON-FND-KEY.
      *
           MOVE ZEROES TO SCR-IMAX.
           MOVE 1 TO SCR-I.
           MOVE '00' TO FIO-STAT.
           PERFORM OBT-DAT-TS.
           MOVE 1 TO SCR-I.
           MOVE SCR-I TO QEV-I.
       CARGA-QEV.
           MOVE SPACES TO MSG-COD-MENS.
           IF NOT SCR-OFRM-SRV
           PERFORM PUT-TAB-QEV.
           MOVE '00' TO FIO-STAT.
           GO TO FIN-FND-KEY.
      *
       ERR-FND-KEY.
           MOVE SCR-STAT-CON TO SCR-STAT.
     
           MOVE 'GRD' TO MSG-COD-SIST.
           PERFORM GET-MSG.
           MOVE MSG-GLS-DESC TO FRM-MEN1.
           MOVE '00' TO FIO-STAT.
           GO TO FIN-FND-KEY.
      *>>>>
*% END
*% IF PFS_GET_CON OR PFS_GET_ACC
      *<<<< PFS_GET_CON OR PFS_GET_ACC
           IF NOT (FRM-FFLD = FRM-FFLD-PF6
                         OR   FRM-FFLD-PF5)
      *>>>>
*% END
*% IF EOF
      *<<<< EOF
       COPY GNSBFMSC.
       COPY GNSBGPES.
       COPY TABBFCAM.
       COPY GRDBRREC.
       COPY GRDBRRRO.
       COPY GRDBBTAB.

       CAR-MOV-QEV SECTION.
       INI-CAR-MOV-QEV.
       FIN-CAR-MOV-QEV.
           EXIT.

   
       OBT-DAT-TS SECTION.
       INI-OBT-DAT-TS.
           EXEC CICS HANDLE CONDITION QIDERR(CON-OBT-DAT-TS)
                                     ITEMERR(CON-OBT-DAT-TS)
           END-EXEC.

      *     EXEC CICS DELETEQ TS QUEUE(QEV-NAME-QUE)
      *     END-EXEC.
      *<<<<
           MOVE QEV-NOM-TSQEV     TO QUE-COLA.
           MOVE QUE-DEL           TO QUE-CMND.
           PERFORM GNS-PRO-QUE.
      *>>>>
       CON-OBT-DAT-TS.
           MOVE QEV-SI-IMP TO QEV-IMP.
           PERFORM CLR-VEC-TS VARYING QEV-I FROM 1 BY 1 UNTIL
                   QEV-I > QEV-IMAX.
           MOVE 1 TO QEV-I.
           PERFORM CAR-MOV-QEV.
      
       NXT-OBT-DAT-TS.
           IF QEV-IMP = QEV-SI-IMP
               PERFORM WRT-TS.
       FIN-OBT-DAT-TS.
           EXIT.

       PUT-TAB-QEV SECTION.
       INI-PUT-TAB-QEV.
           PERFORM RED-TS.
           PERFORM LLE-DAT-PNT VARYING QEV-I FROM 1 BY 1
                   UNTIL QEV-I > QEV-IMAX.
       FIN-PUT-TAB-QEV.
           EXIT.

       LLE-DAT-PNT SECTION.
       INI-LLE-DAT-PNT.

           MOVE QEV-CIC-IREC(QEV-I) TO FRM-CIC-ILIQ IN QEV-FLD(QEV-I).
           MOVE QEV-CIC-IOPC(QEV-I) TO FRM-CIC-IOPC IN QEV-FLD(QEV-I).
           MOVE QEV-NUM-IDLC(QEV-I) TO FRM-NUM-IDLC IN QEV-FLD(QEV-I).
           MOVE QEV-GLS-IOPE(QEV-I) TO FRM-GLS-IOPE IN QEV-FLD(QEV-I).
           MOVE QEV-FEC-FLEA(QEV-I) TO FRM-FEC-FLEA IN QEV-FLD(QEV-I).
           MOVE QEV-HRA-HRLE(QEV-I) TO FRM-HRA-HRLE IN QEV-FLD(QEV-I).
           MOVE QEV-COD-ESTA(QEV-I) TO FRM-COD-ESTA IN QEV-FLD(QEV-I).
           MOVE QEV-GLS-ESTA(QEV-I) TO FRM-GLS-ESTA IN QEV-FLD(QEV-I).
           MOVE QEV-COD-ROLR(QEV-I) TO FRM-COD-ROLR IN QEV-FLD(QEV-I).
           MOVE QEV-COD-USUR(QEV-I) TO FRM-FEC-USUR IN QEV-FLD(QEV-I). 
 
       FIN-LLE-DAT-PNT.
           EXIT.

       INC-REG-TS SECTION.
       INI-INC-REG-TS.
            MOVE QEV-SI-IMP TO QEV-IMP.
      *      IF SCR-OFRM-SRV
      *         MOVE QEV-SGV-MORA(QEV-I) TO QEV-SGV-MORA-EDT
      *         MOVE QEV-SGV-MORA-EDT TO QEV-SGV-MORA-ALF(QEV-I).
           ADD 1 TO QEV-I.
           IF QEV-I > QEV-IMAX
               PERFORM WRT-TS
               PERFORM CLR-VEC-TS VARYING QEV-I FROM 1 BY 1
                                     UNTIL QEV-I > QEV-IMAX
               MOVE 1 TO QEV-I
               MOVE QEV-NO-IMP TO QEV-IMP.
       FIN-INC-REG-TS.
           EXIT.

      *<<<<
      *>>>>

       WRT-TS SECTION.
       INI-WRT-TS.
           ADD 1 TO SCR-IMAX.
      *     EXEC CICS WRITEQ TS QUEUE(QEV-NAME-QUE)
      *                         FROM(QEV-TS)
      *                         LENGTH(QEV-LONG-TS)
      *     END-EXEC.
      *<<<<
           MOVE QEV-NOM-TSQEV  TO QUE-COLA.
           MOVE QEV-TS         TO QUE-ITEM.
           MOVE QEV-LEN-TSQEV  TO QUE-LITM.
           MOVE QUE-PUT        TO QUE-CMND.
           PERFORM GNS-PRO-QUE.
      *>>>>
       FIN-WRT-TS.
           EXIT.

       RED-TS SECTION.
       INI-RED-TS.
           MOVE QEV-I TO SCR-I.
           EXEC CICS HANDLE CONDITION QIDERR(FIN-RED-TS)
                                     ITEMERR(FIN-RED-TS)
           END-EXEC.
      *     EXEC CICS READQ TS QUEUE(DEC-NAME-QUE)
      *                         INTO(DEC-TS)
      *                          LENGTH(DEC-LONG-TS)
      *                         ITEM(DEC-I)
      *     END-EXEC.
      *<<<<
           MOVE QEV-NOM-TSQEV      TO QUE-COLA.
           MOVE QEV-TS             TO QUE-ITEM.
           MOVE QEV-LEN-TSQEV      TO QUE-LITM.
           MOVE QEV-I              TO QUE-NITM.
           MOVE QUE-GET            TO QUE-CMND.
           PERFORM GNS-PRO-QUE.
           MOVE QUE-ITEM          TO QEV-TS.
      *>>>>
       FIN-RED-TS.
           EXIT.

       CLR-VEC-TS SECTION.
       INI-CLR-VEC-TS.

           MOVE SPACES TO QEV-CIC-IREC(QEV-I).
           MOVE SPACES TO QEV-CIC-IOPC(QEV-I)
           MOVE ZEROES TO QEV-NUM-IDLC(QEV-I).
           MOVE SPACES TO QEV-GLS-IOPE(QEV-I).
           MOVE ZEROES TO QEV-FEC-FLEA(QEV-I).
           MOVE ZEROES TO QEV-HRA-HRLE(QEV-I).
           MOVE SPACES TO QEV-COD-ESTA(QEV-I).
           MOVE SPACES TO QEV-GLS-ESTA(QEV-I).
           MOVE SPACES TO QEV-COD-ROLR(QEV-I).
           MOVE SPACES TO QEV-COD-USUR(QEV-I).

       FIN-CLR-VEC-TS.
           EXIT.

       RST-STAT SECTION.
       INI-RST-STAT.
           MOVE SCR-STPP     TO SCR-STAT.
           MOVE SCR-MFLD-NOT TO SCR-MFLD.
       FIN-RST-STAT.
           EXIT.

      *>>>>
*% END
