*%! Codigo adicional para archivo GRDPQCOM
*% IF SETTAG
*% FNCPQ = "COBRJUDICIAL"
*% VSNPQ = "05.11.22.1"
*% END
*% LARGO_MI_COMMAREA = 20
*% PGM_PTC = TRUE
*% IF MI_COMMAREA
      *<<<< MI_COMMAREA
           03 CMA-VARI.
              05 SCR-IMAX      COMP                   PIC S9(04).
              05 SCR-I         COMP                   PIC S9(04).
      *>>>>
*% END
*% IF WSS
      *<<<< WSS
       COPY GRDWGCOM.
       COPY GNSBRMSC.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-MSC-REQA==.
       COPY GNSWGPES.
       COPY TABBRCAM.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-CAM-REQA==.
    
       01  WSS-VARI.
           03  WSS-I                              PIC 9(02).
      *>>>>
*% END
*% IF INI_FIO
      *<<<< INI_FIO                                                     
           IF SCR-OFRM-SRV                                              
              MOVE TSK-TERM-ALF TO COM-COD-TERM                         
              MOVE TSK-TERM-ALF TO COM-COD-TERM-MAS                     
                                                                        
           ELSE                                                         
              MOVE EIBTRMID     TO COM-COD-TERM                         
              MOVE EIBTRMID     TO COM-COD-TERM-MAS.                    
      *>>>>                                                             
*% END
*% IF PFS_SCR_ACC
      *<<<< PFS_SCR_ACC
           IF FRM-FFLD = FRM-FFLD-PF6
                    OR   FRM-FFLD-PF5
               PERFORM VAL-NUM-KEY-COM
               PERFORM VAL-NUM-FLD-COM
               PERFORM RST-STAT
               PERFORM FND-SCR-KEY THRU FIN-SCR-KEY
               IF SCR-STAT NOT = SCR-STAT-ABT
                   PERFORM SCR-TRL
               ELSE
                   PERFORM DESSCRTRL
                   GO TO FIN-SCR-ACC.
      *>>>>
*% END
*% IF INI_FND_KEY
      *<<<< INI_FND_KEY
           MOVE SPACES TO FRM-MEN1.
           IF FRM-FFLD = FRM-FFLD-PF5
               MOVE PGM-SNUL TO PGM-STAT-RRO
               SUBTRACT 1 FROM SCR-I GIVING COM-I
               IF COM-I NOT > ZEROES
                   MOVE 'COM RROPRV' TO MSG-COD-MENS
                   GO TO ERR-FND-KEY
               ELSE
                   GO TO CARGA-COM
           ELSE
           IF FRM-FFLD = FRM-FFLD-PF6
               MOVE PGM-SNUL TO PGM-STAT-RRO
               ADD 1 SCR-I GIVING COM-I
               IF COM-I > SCR-IMAX
                   MOVE 'COM RRONXT' TO MSG-COD-MENS
                   GO TO ERR-FND-KEY
               ELSE
                   GO TO CARGA-COM.
           GO TO CON-FND-KEY.

      *>>>>
*% END
*% IF FIN_FND_KEY
      *<<<< FIN_FND_KEY
           IF NOT FIO-STAT-OKS
               GO TO FIN-FND-KEY.
       CON-FND-KEY.
      *
           MOVE ZEROES TO SCR-IMAX.
           MOVE 1 TO SCR-I.
           MOVE '00' TO FIO-STAT.
           PERFORM OBT-DAT-TS.
           MOVE 1 TO SCR-I.
           MOVE SCR-I TO COM-I.
       CARGA-COM.
           MOVE SPACES TO MSG-COD-MENS.
           IF NOT SCR-OFRM-SRV
           PERFORM PUT-TAB-COM.
           MOVE '00' TO FIO-STAT.
           GO TO FIN-FND-KEY.
      *
       ERR-FND-KEY.
           MOVE SCR-STAT-CON TO SCR-STAT.
     
           MOVE 'GRD' TO MSG-COD-SIST.
           PERFORM GET-MSG.
           MOVE MSG-GLS-DESC TO FRM-MEN1.
           MOVE '00' TO FIO-STAT.
           GO TO FIN-FND-KEY.
      *>>>>
*% END
*% IF PFS_GET_CON OR PFS_GET_ACC
      *<<<< PFS_GET_CON OR PFS_GET_ACC
           IF NOT (FRM-FFLD = FRM-FFLD-PF6
                         OR   FRM-FFLD-PF5)
      *>>>>
*% END
*% IF EOF
      *<<<< EOF
       COPY GNSBFMSC.
       COPY GNSBGPES.
       COPY TABBFCAM.

       CAR-MOV-COM SECTION.
       INI-CAR-MOV-COM.
       FIN-CAR-MOV-COM.
           EXIT.

   
       OBT-DAT-TS SECTION.
       INI-OBT-DAT-TS.
           EXEC CICS HANDLE CONDITION QIDERR(CON-OBT-DAT-TS)
                                     ITEMERR(CON-OBT-DAT-TS)
           END-EXEC.

      *     EXEC CICS DELETEQ TS QUEUE(COM-NAME-QUE)
      *     END-EXEC.
      *<<<<
           MOVE COM-NOM-TSCOM     TO QUE-COLA.
           MOVE QUE-DEL           TO QUE-CMND.
           PERFORM GNS-PRO-QUE.
      *>>>>
       CON-OBT-DAT-TS.
           MOVE COM-SI-IMP TO COM-IMP.
           PERFORM CLR-VEC-TS VARYING COM-I FROM 1 BY 1 UNTIL
                   COM-I > COM-IMAX-MTX.
           MOVE 1 TO COM-I.
           PERFORM CAR-MOV-COM.
      
       NXT-OBT-DAT-TS.
           IF COM-IMP = COM-SI-IMP
               PERFORM WRT-TS.
       FIN-OBT-DAT-TS.
           EXIT.

       PUT-TAB-COM SECTION.
       INI-PUT-TAB-COM.
           PERFORM RED-TS.
           PERFORM LLE-DAT-PNT VARYING COM-I FROM 1 BY 1
                   UNTIL COM-I > COM-IMAX.
       FIN-PUT-TAB-COM.
           EXIT.

       LLE-DAT-PNT SECTION.
       INI-LLE-DAT-PNT.
           MOVE COM-GLS-IOPC(COM-I) TO FRM-GLS-IOPC IN COM-FLD(COM-I).
           MOVE COM-COD-PROD(COM-I) TO FRM-COD-PROD IN COM-FLD(COM-I).
           MOVE COM-IND-AVAL(COM-I) TO FRM-IND-AVAL IN COM-FLD(COM-I).
           MOVE COM-COD-VCOC(COM-I) TO FRM-COD-VCOC IN COM-FLD(COM-I).
           MOVE COM-FEC-FMOR(COM-I) TO FRM-FEC-FMOR IN COM-FLD(COM-I).
           MOVE COM-NUM-CUOT(COM-I) TO FRM-NUM-CUOT IN COM-FLD(COM-I).
           MOVE COM-NUM-DIAS(COM-I) TO FRM-NUM-DIAS IN COM-FLD(COM-I).
           MOVE COM-SGV-CAPI(COM-I) TO FRM-SGV-CAPI IN COM-FLD(COM-I).
           MOVE COM-SGV-ICTE(COM-I) TO FRM-SGV-ICTE IN COM-FLD(COM-I).
           MOVE COM-SGV-IMOR(COM-I) TO FRM-SGV-IMOR IN COM-FLD(COM-I).
           MOVE COM-SGV-HONO(COM-I) TO FRM-SGV-HONO IN COM-FLD(COM-I).
           MOVE COM-SGV-SINS(COM-I) TO FRM-SGV-SINS IN COM-FLD(COM-I).
           MOVE COM-FEC-FTRN(COM-I) TO FRM-FEC-FTRN IN COM-FLD(COM-I).
           MOVE COM-CIC-ILIQ(COM-I) TO FRM-CIC-ILIQ IN COM-FLD(COM-I).
           MOVE COM-FEC-FINI(COM-I) TO FRM-FEC-FINI IN COM-FLD(COM-I).
           MOVE COM-COD-ABOG(COM-I) TO FRM-COD-ABOG IN COM-FLD(COM-I).
           MOVE COM-COD-ESTA(COM-I) TO FRM-COD-ESTA IN COM-FLD(COM-I).
           MOVE COM-COD-ORIG(COM-I) TO FRM-COD-ORIG IN COM-FLD(COM-I).
           MOVE COM-IND-OASO(COM-I) TO FRM-IND-OASO IN COM-FLD(COM-I).
           MOVE COM-FEC-FTER(COM-I) TO FRM-FEC-FTER IN COM-FLD(COM-I).
       FIN-LLE-DAT-PNT.
           EXIT.

       INC-REG-TS SECTION.
       INI-INC-REG-TS.
            MOVE COM-SI-IMP TO COM-IMP.
            IF SCR-OFRM-SRV
              MOVE COM-SGV-CAPI(COM-I) TO COM-VAL-CPTO-EDT
              MOVE COM-VAL-CPTO-EDT TO COM-SGV-CAPI-ALF(COM-I)
              MOVE COM-SGV-ICTE(COM-I) TO COM-VAL-CPTO-EDT
              MOVE COM-VAL-CPTO-EDT TO COM-SGV-ICTE-ALF(COM-I)
              MOVE COM-SGV-IMOR(COM-I) TO COM-VAL-CPTO-EDT
              MOVE COM-VAL-CPTO-EDT TO COM-SGV-IMOR-ALF(COM-I)
              MOVE COM-SGV-HONO(COM-I) TO COM-VAL-CPTO-EDT
              MOVE COM-VAL-CPTO-EDT TO COM-SGV-HONO-ALF(COM-I)
              MOVE COM-SGV-SINS(COM-I) TO COM-VAL-CPTO-EDT
              MOVE COM-VAL-CPTO-EDT TO COM-SGV-SINS-ALF(COM-I).
           ADD 1 TO COM-I.
           IF COM-I > COM-IMAX
               PERFORM WRT-TS
               PERFORM CLR-VEC-TS VARYING COM-I FROM 1 BY 1
                                     UNTIL COM-I > COM-IMAX
               MOVE 1 TO COM-I
               MOVE COM-NO-IMP TO COM-IMP.
       FIN-INC-REG-TS.
           EXIT.

      *<<<<
      *>>>>

       WRT-TS SECTION.
       INI-WRT-TS.
           ADD 1 TO SCR-IMAX.
      *     EXEC CICS WRITEQ TS QUEUE(COM-NAME-QUE)
      *                         FROM(COM-TS)
      *                         LENGTH(COM-LONG-TS)
      *     END-EXEC.
      *<<<<
           MOVE COM-NOM-TSCOM  TO QUE-COLA.
           MOVE COM-TS         TO QUE-ITEM.
           MOVE COM-LEN-TSCOM  TO QUE-LITM.
           MOVE QUE-PUT        TO QUE-CMND.
           PERFORM GNS-PRO-QUE.
      *>>>>
       FIN-WRT-TS.
           EXIT.

       RED-TS SECTION.
       INI-RED-TS.
           MOVE COM-I TO SCR-I.
           EXEC CICS HANDLE CONDITION QIDERR(FIN-RED-TS)
                                     ITEMERR(FIN-RED-TS)
           END-EXEC.
      *     EXEC CICS READQ TS QUEUE(DEC-NAME-QUE)
      *                         INTO(DEC-TS)
      *                          LENGTH(DEC-LONG-TS)
      *                         ITEM(DEC-I)
      *     END-EXEC.
      *<<<<
           MOVE COM-NOM-TSCOM      TO QUE-COLA.
           MOVE COM-TS             TO QUE-ITEM.
           MOVE COM-LEN-TSCOM      TO QUE-LITM.
           MOVE COM-I              TO QUE-NITM.
           MOVE QUE-GET            TO QUE-CMND.
           PERFORM GNS-PRO-QUE.
           MOVE QUE-ITEM          TO COM-TS.
      *>>>>
       FIN-RED-TS.
           EXIT.

       CLR-VEC-TS SECTION.
       INI-CLR-VEC-TS.
           MOVE SPACES TO COM-GLS-IOPC(COM-I). 
           MOVE SPACES TO COM-COD-PROD(COM-I). 
           MOVE SPACES TO COM-IND-AVAL(COM-I). 
           MOVE SPACES TO COM-COD-VCOC(COM-I). 
           MOVE ZEROES TO COM-FEC-FMOR(COM-I). 
           MOVE ZEROES TO COM-NUM-CUOT(COM-I). 
           MOVE ZEROES TO COM-NUM-DIAS(COM-I). 
           MOVE ZEROES TO COM-SGV-CAPI(COM-I). 
           MOVE ZEROES TO COM-SGV-ICTE(COM-I). 
           MOVE ZEROES TO COM-SGV-IMOR(COM-I). 
           MOVE ZEROES TO COM-SGV-HONO(COM-I). 
           MOVE ZEROES TO COM-SGV-SINS(COM-I). 
           MOVE ZEROES TO COM-FEC-FTRN(COM-I).
           MOVE SPACES TO COM-CIC-ILIQ(COM-I).
           MOVE ZEROES TO COM-FEC-FINI(COM-I).
           MOVE SPACES TO COM-COD-ABOG(COM-I).
           MOVE SPACES TO COM-COD-ESTA(COM-I).
           MOVE SPACES TO COM-COD-ORIG(COM-I).
           MOVE SPACES TO COM-IND-OASO(COM-I).
           MOVE ZEROES TO COM-FEC-FTER(COM-I).
       FIN-CLR-VEC-TS.
           EXIT.

       RST-STAT SECTION.
       INI-RST-STAT.
           MOVE SCR-STPP     TO SCR-STAT.
           MOVE SCR-MFLD-NOT TO SCR-MFLD.
       FIN-RST-STAT.
           EXIT.

      *>>>>
*% END
