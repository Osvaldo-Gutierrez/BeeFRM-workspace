*%! Codigo adicional
*%! INCLUDE DE ELEMENTOS DE C.A. PARA PLATAFORMA COMERCIAL
*%! INCLUDE 'GNSTXT:GNSPPPTC.TXT'
*% IF PGM_CHI AND PGM_BCI
*%     PGM_PTC = TRUE
*% END
*% IF FIN_SCR_VARI
      *<<<< FIN_SCR_VARI
       COPY GNSWGRQA REPLACING ==01  ADR-REQA== BY ==02  SCR-RQA1==.
       COPY GNSWGRQA REPLACING ==01  ADR-REQA== BY ==02  SCR-RQA2==.
           02 SCR-KEY-IRDC                         PIC X(04).
           02 SCR-IND-MRDC                         PIC X(01).
           02 SCR-IND-MITR                         PIC X(01).
           02 SCR-IND-MCOM                         PIC X(01).
           02 SCR-IND-MCYA                         PIC X(01).
           02 SCR-IND-ACAN                         PIC X(03).
           02 SCR-MSC-TCAN                         PIC X(01).
           02 SCR-OPC-STAT                         PIC X(01).
           02 SCR-CIC-OPEC                         PIC X(01).
           02 SCR-CIC-TCOL                         PIC X(03).
           02 SCR-CIC-TDOC                         PIC X(03).
           02 SCR-IND-OPEE                         PIC X(01).
           02 SCR-OLD-IEST                         PIC X(12).
           02 SCR-NEW-IEST                         PIC X(12).
           02 SCR-IND-PORC                         PIC X(01).
           02 SCR-COD-TINT                         PIC X(12).
           02 SCR-GLS-TIAO                         PIC X(01).
           02 SCR-GLS-CIAO                         PIC X(03).
      *>>>>
*% END
*% IF WSS
      *<<<< WSS
      *PTC-INI:   12-NOV-1996 08:50:01 
      * COPY COLMXW05.
      * COPY GNSWGTSK.
      *PTC-FIN:   12-NOV-1996 08:50:01 
       COPY CBZWGINT.
       COPY GNSWGQUE.
       01  WSS-VARI.
      *HZF-INI 11-DEC-1996 
           03 CCO-CIC-ICLI.
              05 CCO-CAI-ICLI     VALUE SPACES    PIC X(04).
              05 CCO-IIC-ICLI     VALUE ZEROES    PIC 9(08).
           03 CIM-CIC-ICLI.
              05 CIM-CAI-ICLI     VALUE SPACES    PIC X(04).
              05 CIM-IIC-ICLI     VALUE ZEROES    PIC 9(08).
      *HZF-FIN 11-DEC-1996 
           03 WSS-CAI-ICIC.
              05 WSS-COD-TCIC                     PIC X(01).
              05 WSS-COD-CCIC                     PIC X(03).
           03  WSS-MSC-TCAN                       PIC X(01).
           03  WSS-CPT-NOMB.
               05  WSS-CPT-DESC                   PIC X(40).
               05  WSS-CPT-IOPV                   PIC X(12).
               05  WSS-CPT-DATA                   PIC X(40).
           03  WSS-CPT-NOMB-R REDEFINES WSS-CPT-NOMB PIC X(92).
           03  WSS-CIC-IOPV                       PIC X(12).
           03  WSS-ASIGNAR-TASA                   PIC X(01).
           03  WSS-KEY-CRP1.
               05  WSS-TIO-ANT1                   PIC X(03).
               05  WSS-AUX-ANT1                   PIC X(01).
               05  WSS-TIO-NUE1                   PIC X(03).
               05  WSS-AUX-NUE1                   PIC X(01).
               05  WSS-FILLER                     PIC X(04).
           03  WSS-KEY-CRP2 REDEFINES WSS-KEY-CRP1.
               05  WSS-TIO-ANT2                   PIC X(03).
               05  WSS-AUX-ANT2                   PIC X(03).
               05  WSS-TIO-NUE2                   PIC X(03).
               05  WSS-AUX-NUE2                   PIC X(03).
           03  WSS-KEY-PADL.
               05  WSS-TIO-PADL                   PIC X(03).
               05  WSS-AUX-PADL                   PIC X(03).
               05  WSS-GLS-PADL                   PIC X(06).
           03  WSS-NTRN              VALUE SPACES PIC X(04).
           03  WSS-SGV-RENO     COMP-3 VALUE ZEROES PIC S9(11)V9(04).
           03  WSS-COD-PESO                       PIC X(06).
           03  WSS-SGV-RENO-CNV COMP-3            PIC S9(11)V9(04).
           03  WSS-COD-VCOC-CNV                   PIC X(06).
           03  RCAN-CAN-KEY-ICAN                  PIC X(15).
           03  WSS-TOT-RCAN   VALUE ZEROES        PIC 9(04).
           03  WSS-COD-MENS                       PIC X(20).
           03  WSS-I                              PIC 9(02).
           03  WSS-NUM-DIGT                       PIC 9(02).
           03  WSS-COD-DIGT                       PIC X(02).
           03  WSS-MEN2.
               05  FILLER            VALUE SPACES PIC X(01).
               05  WSS-NUM-VAL1-EDT                   PIC ----.
               05  FILLER            VALUE SPACES PIC X(01).
               05  WSS-IND-DMA1                      PIC X(01).
               05  FILLER            VALUE SPACES PIC X(01).
               05  WSS-GLS-GUI2                      PIC X(01).
               05  FILLER            VALUE SPACES PIC X(01).
               05  WSS-NUM-VAL2-EDT                   PIC ----.
               05  FILLER            VALUE SPACES PIC X(01).
               05  WSS-IND-DMA2                      PIC X(01).
           03  PGM-STAT-POZ          VALUE '23'   PIC X(02).              
               88  PGM-STAT-POZ-OKS  VALUE '00'.                             
               88  PGM-STAT-POZ-NUL  VALUE '  '.                             
           03  WSS-NUM-ACTI                       PIC 9(01).
           03  WSS-NUM-COTO                       PIC 9(01).
           03  WSS-COD-CAUX.
               05  WSS-COD-TOOC                   PIC X(03).
               05  WSS-COD-AOOC                   PIC X(03).
           03  WSS-IND-IVFI                       PIC X(01).
           03  WSS-VAL-TEVC             COMP-3    PIC 9(11)V9(05).
           03  WSS-CVI-TCAP             COMP-3    PIC 9(11)V9(05).
           03  WSS-VAL-TCAP             COMP-3    PIC 9(11)V9(05).
           03  WSS-VAL-TVEN             COMP-3    PIC 9(11)V9(05).
           03  WSS-VAL-NDLC             COMP-3    PIC 9(11)V9(05).
           03  WSS-NUM-VCOR                       PIC 9(03).
           03  WSS-NUM-PDIR             COMP-3    PIC 9(11)V9(05).
           03  WSS-NUM-PIND             COMP-3    PIC 9(11)V9(05).
           03  WSS-MSG-STR.
               05  WSS-NUM-FALF                   PIC  --.---.--9,99999.
               05  WSS-MSG-GLS-DESC               PIC X(40).
               05  WSS-NUM-FEDT                   PIC  --.---.--9,99999.
               05  WSS-MSG-GLS-DATA               PIC X(60).
           03  WSS-VAL-CRED   COMP-3 VALUE ZEROES PIC 9(11)V9(04).
           03  WSS-VAL-CREL   COMP-3 VALUE ZEROES PIC 9(11)V9(04).
           03  WSS-IND-TMON          VALUE SPACES PIC X(01).
           03  WSS-IND-TMMN          VALUE 'N'    PIC X(01).
           03  WSS-IND-TMMX          VALUE 'E'    PIC X(01).
           03  WSS-GLS-DAT1          VALUE SPACES PIC X(01).
           03  BUS-POR-KEYS          VALUE SPACES PIC X(01).
           03  BUS-POR-CLTE          VALUE 'C'    PIC X(01).
           03  WSS-CIC-ICLI                       PIC X(12).
           03  WSS-MRDC              VALUE 0      PIC 9(01).
               88  WSS-MISMO-RDC     VALUE 0.
               88  WSS-OTRO-RDC      VALUE 1.
           03  WSS-MISMO             VALUE 0      PIC 9(01).
           03  WSS-OTRO              VALUE 1      PIC 9(01).
           03  WSS-CIC-IMPU                       PIC X(04).
           03  WSS-SGV-VCOM   COMP-3 VALUE 0      PIC 9(11)V9(04).
           03  WSS-VAL-IMPU   COMP-3 VALUE 0      PIC 9(11)V9(04).
           03  WSS-AUX-IMPU   COMP-3 VALUE 0      PIC 9(11)V9(04).
           03  WSS-VAL-GNOT   COMP-3 VALUE 0      PIC 9(11)V9(04).
           03  WSS-VAL-PORT   COMP-3 VALUE 0      PIC 9(11)V9(04).

           03  WSS-SGV-LIQU          VALUE +0     PIC S9(13)V9(05).
           03  WSS-SGV-LIQU-ALF                   PIC X(24).
           03  WSS-SGV-LIQU-EDT REDEFINES WSS-SGV-LIQU-ALF
                                     PIC --.---.---.---.---,-----.

           03  WSS-NUM-TABN          VALUE 0      PIC 9(03).
           03  WSS-NUM-TABZ          VALUE 0      PIC 9(03).
           03  WSS-INTR                           PIC X(01).
           03  WSS-KEY-ICYA.
               05  WSS-CIC-IOPC                   PIC X(12).
               05  WSS-NUM-ICAN                   PIC X(03).
               05  WSS-NUM-ICYA                   PIC 9(01).
           03  WSS-OPC-CACC                       PIC X(08).
           03  WSS-OPC-LNBT                       PIC X(01).
           03  WSS-FEC-FPVC VALUE ZEROES.
               05  WSS-NUM-SPVC                   PIC 9(02).
               05  WSS-NUM-APVC                   PIC 9(02).
               05  WSS-NUM-MPVC                   PIC 9(02).
               05  WSS-NUM-DPVC                   PIC 9(02).
           03  WSS-FEC-FIMV VALUE ZEROES.
               05  WSS-NUM-SIMV                   PIC 9(02).
               05  WSS-NUM-AIMV                   PIC 9(02).
               05  WSS-NUM-MIMV                   PIC 9(02).
               05  WSS-NUM-DIMV                   PIC 9(02).
           03  WSS-MSC-TCVE                       PIC X(02).
           03  WSS-PESO                 VALUE ' ' PIC X(01).
               88 WSS-PESO-SI           VALUE 'S'.
               88 WSS-PESO-NO           VALUE 'N'.
           03  WSS-NUM-VCVG                       PIC 9(03).
           03  WSS-AXSV                           PIC 9(04).
           03  WSS-AXUS                           PIC X(01).
           03  WSS-EEVC       OCCURS 50.
               05  WSS-REVC                       PIC X(105).
               05  WSS-SPVE                       PIC 9(04).
               05  WSS-UTPV                       PIC X(01).
               05  WSS-SEVE                       PIC 9(04).
               05  WSS-UTSV                       PIC X(01).
               05  WSS-VIGU                       PIC 9(03).
               05  WSS-FPVC.
                   07  WSS-SPVC                   PIC 9(02).
                   07  WSS-APVC                   PIC 9(02).
                   07  WSS-MPVC                   PIC 9(02).
                   07  WSS-DPVC                   PIC 9(02).
               05  WSS-FFPV.
                   07  WSS-SFPV                   PIC 9(02).
                   07  WSS-AFPV                   PIC 9(02).
                   07  WSS-MFPV                   PIC 9(02).
                   07  WSS-DFPV                   PIC 9(02).
               05  WSS-DVEN                       PIC 9(02).
           03  WSS-LEFO                 VALUE  50 PIC 9(02).
           03  WSS-MEFO                           PIC 9(02).
           03  WSS-FAVC.
               05  WSS-SAVC                       PIC 9(02).
               05  WSS-AAVC                       PIC 9(02).
               05  WSS-MAVC                       PIC 9(02).
               05  WSS-DAVC                       PIC 9(02).
           03  WSS-FMVC.
               05  WSS-SMVC                       PIC 9(02).
               05  WSS-AMVC                       PIC 9(02).
               05  WSS-MMVC                       PIC 9(02).
               05  WSS-DMVC                       PIC 9(02).
           03  WSS-IMVC                           PIC 9(02).
           03  WSS-USEP                           PIC X(01).
           03  WSS-VSEP                      COMP PIC 9(04).
           03  WSS-FVNC.
               05  WSS-SVNC                       PIC 9(02).
               05  WSS-AVNC                       PIC 9(02).
               05  WSS-MVNC                       PIC 9(02).
               05  WSS-DVNC                       PIC 9(02).
           03  WSS-FMIV.
               05  WSS-SMIV                       PIC 9(02).
               05  WSS-AMIV                       PIC 9(02).
               05  WSS-MMIV                       PIC 9(02).
               05  WSS-DMIV                       PIC 9(02).
           03  WSS-FMAV.
               05  WSS-SMAV                       PIC 9(02).
               05  WSS-AMAV                       PIC 9(02).
               05  WSS-MMAV                       PIC 9(02).
               05  WSS-DMAV                       PIC 9(02).
           03  WSS-NEEV                      COMP PIC 9(04).
           03  WSS-FPPC.
               05  WSS-SPPC                       PIC 9(02).
               05  WSS-APPC                       PIC 9(02).
               05  WSS-MPPC                       PIC 9(02).
               05  WSS-DPPC                       PIC 9(02).
           03  WSS-FPPI.
               05  WSS-SPPI                       PIC 9(02).
               05  WSS-APPI                       PIC 9(02).
               05  WSS-MPPI                       PIC 9(02).
               05  WSS-DPPI                       PIC 9(02).
           03  WSS-FIPC.
               05  WSS-SIPC                       PIC 9(02).
               05  WSS-AIPC                       PIC 9(02).
               05  WSS-MIPC                       PIC 9(02).
               05  WSS-DIPC                       PIC 9(02).
           03  WSS-FSPC.
               05  WSS-SSPC                       PIC 9(02).
               05  WSS-ASPC                       PIC 9(02).
               05  WSS-MSPC                       PIC 9(02).
               05  WSS-DSPC                       PIC 9(02).
           03  WSS-FIPI.
               05  WSS-SIPI                       PIC 9(02).
               05  WSS-AIPI                       PIC 9(02).
               05  WSS-MIPI                       PIC 9(02).
               05  WSS-DIPI                       PIC 9(02).
           03  WSS-FSPI.
               05  WSS-SSPI                       PIC 9(02).
               05  WSS-ASPI                       PIC 9(02).
               05  WSS-MSPI                       PIC 9(02).
               05  WSS-DSPI                       PIC 9(02).
           03  WSS-FUVC.
               05  WSS-SUVC                       PIC 9(02).
               05  WSS-AUVC                       PIC 9(02).
               05  WSS-MUVC                       PIC 9(02).
               05  WSS-DUVC                       PIC 9(02).
           03  WSS-NEUV                           PIC 9(03).
           03  WSS-IVUV              VALUE SPACES PIC X(01).
               88 WSS-ULTIMO-VENC-EN-ZERO VALUE 'Z'.
           03  WSS-EPOC              VALUE 'N'    PIC X(01).
           03  WSS-VEDT-ALF                       PIC X(24).
           03  WSS-VEDT-EDT REDEFINES WSS-VEDT-ALF
                                     PIC --.---.---.---.---,-----.
           03  WSS-LEVC COMP             VALUE 10 PIC 9(02).
           03  WSS-MEVC COMP             VALUE 0  PIC 9(02).
           03  WSS-IEVC COMP             VALUE 0  PIC 9(02).
           03  WSS-EVC1 COMP             VALUE 0  PIC 9(02).
           03  WSS-TCFO COMP             VALUE 0  PIC 9(02).
           03  WSS-TCCO COMP             VALUE 0  PIC 9(02).
           03  WSS-VCVC OCCURS 10.
               05  WSS-BCCR                       PIC X(01).
               05  WSS-VICR                       PIC X(01).
           03  WSS-FMIN.
               05  WSS-SMIN                       PIC 9(02).
               05  WSS-AMIN                       PIC 9(02).
               05  WSS-MMIN                       PIC 9(02).
               05  WSS-DMIN                       PIC 9(02).
           03  WSS-J                              PIC 9(02).
           03  WSS-K                              PIC 9(02).
           03  WSS-FEC-FMAV.
               05  WSS-NUM-SMAV                   PIC 9(02).
               05  WSS-NUM-AMAV                   PIC 9(02).
               05  WSS-NUM-MMAV                   PIC 9(02).
               05  WSS-NUM-DMAV                   PIC 9(02).
           03  WSS-FIO-STAT-FLV VALUE SPACES      PIC X(02).
           03  WSS-SGV-TCOM                       PIC 9(03)V9(02).
           03  WSS-COM-CAL      VALUE 0           PIC 9(01).
           03  WSS-CAL-COM-TRF  VALUE 0           PIC 9(01).
               88  CAL-COM-TRF  VALUE 1.
           03  WSS-CAL-COM-FLA  VALUE 0           PIC 9(01).
               88  CAL-COM-FLA  VALUE 1.
           03  WSS-CAL-COM-SEG  VALUE 0           PIC 9(01).
               88  CAL-COM-SEG  VALUE 1.
           03  WSS-CAL-COM-GNO  VALUE 0           PIC 9(01).
               88  CAL-COM-GNO  VALUE 1.
           03  WSS-CAL-COM-GAS  VALUE 0           PIC 9(01).
               88  CAL-COM-GAS  VALUE 1.
           03  WSS-CAL-COM-CAP  VALUE 0           PIC 9(01).
               88  CAL-COM-CAP  VALUE 1.
           03  WSS-TIP-PROC     VALUE SPACES      PIC X(03).
           03  WSS-TIP-OFIC     VALUE SPACES      PIC X(03).
           03  WSS-COD-CTAB-EAO.
               05 WSS-COD-CTAB-ENT                PIC X(03).
               05 WSS-COD-CTAB-TIO                PIC X(03).
               05 WSS-COD-CTAB-AUX                PIC X(03).
               05 WSS-COD-CTAB-FIL                PIC X(03).
           03  WSS-TAB-GLS-DATA-EAO.
               05 WSS-TAB-GLS-DATA-EAO-1          PIC X(01).
               05 WSS-TAB-GLS-DATA-EAO-2          PIC X(03).
           03 DCO-VARI.
              05 DCO-I           VALUE 0          PIC 9(03).
              05 DCO-MAX         VALUE 13         PIC 9(03).
              05 DCO-STAT                         PIC X(12).
              05 DCO-MENS                         PIC X(40).
              05 DCO-VAL-CALC    VALUE 0          PIC S9(13)V9(04).
              05 DCO-VAL-MCAL    VALUE 0          PIC S9(13)V9(04).
              05 DCO-CIC-CONC    VALUE SPACES     PIC X(03).
              05 DCO-CIC-COMI    VALUE SPACES     PIC X(03).
              05 DCO-CIC-SCTB    VALUE SPACES     PIC X(03).
           03 DIM-VARI.
              05 DIM-I           VALUE 0          PIC 9(03).
              05 DIM-MAX         VALUE 14         PIC 9(03).
              05 DIM-CIC-IMPU    VALUE SPACES     PIC X(03).
              05 DIM-CIC-CONC    VALUE SPACES     PIC X(03).
              05 DIM-CIC-SUBC    VALUE SPACES     PIC X(03).
              05 DIM-VAL-CALC                     PIC S9(13)V9(04).
              05 DIM-VAL-LIQU                     PIC S9(13)V9(04).
              05 DIM-VAL-MCAL                     PIC S9(13)V9(04).
              05 DIM-STAT                         PIC X(12).
              05 DIM-MENS                         PIC X(40). 
           03 VEC-TOPE           VALUE 0          PIC 9(03).
           03 VEC-ICG OCCURS 30 TIMES INDEXED BY DCO-J DIM-J. 
                 07 VEC-COD-CNDC                  PIC X(03). 
                 07 VEC-COD-TCDC                  PIC X(03). 
                 07 VEC-SGV-LIQU                  PIC S9(13)V9(04).
                 07 VEC-VAL-TIMP                  PIC S9(05)V9(04).
                 07 VEC-VAL-MCAL                  PIC S9(13)V9(04).
                 07 VEC-FEC-FACT                  PIC X(08).
                 07 VEC-INT-TIPT                  PIC X(12).
           03 WSS-IND-TTAS.
              05 WSS-GLS-NTAS                     PIC X(03).
              05 WSS-GLS-STAS                     PIC X(03).
           03 WSS-COD-TIPT.
              05 WSS-COD-TITA   VALUE SPACES      PIC X(04).
              05 WSS-COD-REST   VALUE '    000 '  PIC X(08).
           03 WSS-VAL-CTRA      VALUE 0           PIC S9(03)V9(02).
       01  REG.
           02 REG-FILL                            PIC X(01).
       01  SCR-INST-BRW              VALUE 'BRW'  PIC X(03).
       COPY GNSBRTAB.
       COPY TABBROFI.
       COPY TABBRUSR.
       COPY TABBRCAM.
       COPY SGCBRDBC.
       COPY SGCBRDBC REPLACING ==01  DBC== BY ==01  DBC-RESP==.

       COPY CBZBRCAZ.
       COPY CBZBRRDZ.
       COPY CBZBRCOZ.
       COPY CBZBRCYZ.
       COPY CBZBRAUZ.
       COPY CBZBRROZ.
       COPY CBZBRDLZ.
       COPY CBZBRVEZ.
       COPY CBZBRIMZ.
       COPY CBZBRICZ.
       COPY CBZBRNTZ.
       COPY CBZBRTOZ.
       COPY CBZBRPOZ.
       COPY CBZBRPIZ.
       COPY CBZBRPCZ.

       COPY CBZWGUVD.
       COPY CBZWGRNO.
       COPY GNSWGFEC.
       COPY GNSWGHOY.
       COPY GNSWGCPT.
       COPY GNSWGSTR.
       COPY GNSWGIDC.
       COPY GNSWCVRF.
       COPY GNSWVVRF.
       COPY GNSWGCVI.
       COPY GNSWGPES.
       COPY SGCBRRCO.
       COPY SGCBROPE.
       COPY SGCBRRCD.
      *>>>>
*% END
*% IF WSS_DTC
      *<<<< WSS_DTC
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-TAB-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-OFI-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-USR-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-CAM-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-DBC-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-RDZ-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-COZ-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-CYZ-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-AUZ-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-ROZ-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-DLZ-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-VEZ-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-IMZ-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-ICZ-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-NTZ-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-TOZ-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-RCO-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-OPE-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-RCD-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-POZ-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-PCZ-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-PIZ-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-CAZ-REQA==.
      *>>>>
*% END
*% CMA_USR = TRUE
*% IF CMA
      *<<<< CMA
           02 FILLER                      PIC X(3000).
      *>>>>
*% END
*% IF INI_FIO
      *<<<< INI_FIO
           MOVE +3000 TO SCR-TCMA.
           IF SCR-DESDE-CMN
               MOVE SPACES TO SCR-RQA1
                              SCR-RQA2.
      *PTC-INI:   12-NOV-1996 08:50:01 
      *     PERFORM GET-TSK-TERM.
      *PTC-FIN:   12-NOV-1996 08:50:01 
      *>>>>
*% END
*% IF SCR_GKEY_VAL_IKY
      *<<<< SCR_GKEY_VAL_IKY
      *PTC-INI:   12-NOV-1996 08:50:01 
      *     IF SCR-OFRM-SRV
      *
      *        MOVE PTC-OPC-TYPE TO QUE-TYPE
      *        MOVE TSK-TERM-ALF TO QUE-TERM
      *        MOVE PTC-OPC-LENG TO QUE-LITM
      *        MOVE 1            TO  QUE-NITM
      *        MOVE QUE-GET        TO QUE-CMND
      *        PERFORM GNS-PRO-QUE
      *        IF QUE-STAT = QUE-STAT-OKS
      *            MOVE QUE-ITEM TO PTC-OPC-ITEM
      *            MOVE PTC-OPC-OPC-CAI-IOPC TO OPZ-CAI-IOPC IN OPZ-FLD
      *            MOVE PTC-OPC-OPC-IIC-IOPC TO OPZ-IIC-IOPC IN OPZ-FLD.
      *PTC-FIN:   12-NOV-1996 08:50:01 
      *>>>>
*% END
*% IF FND_KEY
      *<<<< FND_KEY
           IF OPZ-IIC-IOPC IN OPZ-FLD > ZEROES
               GO TO CON-FND-KEY
           ELSE
           IF DBC-NUM-ICLI IN OPZ-FLD NOT = ZEROES
               MOVE DBC-NUM-ICLI IN OPZ-FLD TO DBC-NUM-ICLI IN DBC
               MOVE DBC-IND-ICLI IN OPZ-FLD TO DBC-IND-ICLI IN DBC
               MOVE DBC-GLS-ICLI IN OPZ-FLD TO DBC-GLS-ICLI IN DBC
               MOVE 'DBC-IDC-ICLI'  TO FIO-AKEY
               MOVE FIO-GET-KEY TO FIO-CMND
               PERFORM ANL-KEY-OPZ
               IF NOT FIO-STAT-OKS
                   PERFORM GET-MSG
                   MOVE MSG-GLS-DESC TO FRM-MEN2
                   MOVE '00'         TO FIO-STAT
                   MOVE SCR-STAT-CON TO SCR-STAT
*% IF PGM_PTC
      *PTC ini
                    MOVE 'S'          TO SCR-IERR
      *PTC fin
*% END
                   GO TO FIN-FND-KEY
               ELSE
                   NEXT SENTENCE
           ELSE
           IF DBC-GLS-NOMC IN OPZ-FLD > SPACES
               MOVE DBC-GLS-NOMC IN OPZ-FLD TO STR-GLS-GSTR
               PERFORM STR-UNS
               MOVE STR-GLS-FUNS IN STR-VARI(1) TO DBC-GLS-APAT IN DBC
               MOVE STR-GLS-FUNS IN STR-VARI(2) TO DBC-GLS-AMAT IN DBC
               MOVE STR-GLS-FUNS IN STR-VARI(3) TO DBC-GLS-NOMB IN DBC


               MOVE 'DBC-GLS-NOMC'  TO FIO-AKEY
               MOVE FIO-GET-NLS TO FIO-CMND
               PERFORM ANL-KEY-OPZ
               IF NOT FIO-STAT-OKS
                   PERFORM GET-MSG
                   MOVE MSG-GLS-DESC TO FRM-MEN2
                   MOVE '00'         TO FIO-STAT
                   MOVE SCR-STAT-CON TO SCR-STAT
*% IF PGM_PTC
      *PTC ini
                   MOVE 'S'          TO SCR-IERR
      *PTC fin
*% END
                   GO TO FIN-FND-KEY.
       CON-FND-KEY.
      *>>>>
*% END
*% IF FIN_FND_KEY
      *<<<< FIN_FND_KEY
           IF NOT FIO-STAT-OKS
               GO TO FIN-FND-KEY.
           MOVE '00' TO PGM-STAT-OPZ.
           PERFORM BUS-GLS-TEAO.
           MOVE SPACES              TO SCR-IND-OPEE.
           MOVE OPZ-IND-PORC IN OPZ TO SCR-IND-PORC.
       SIG-FND-KEY.
           MOVE OPZ-COD-VCOC IN OPZ     TO POZ-COD-VCOC IN POZ
           MOVE OPZ-COD-TOOC IN OPZ     TO POZ-COD-TOOC IN POZ
           MOVE OPZ-COD-AOOC IN OPZ     TO POZ-COD-AOOC IN POZ.
           MOVE ZEROES                  TO POZ-NUM-IPOC IN POZ.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM CBZ-FIO-POZ.
           IF NOT FIO-STAT-OKS
               MOVE 'CBZ'          TO MSG-COD-SIST
               MOVE 'POZ    NEX  ' TO MSG-COD-MENS
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC   TO FRM-MENS
               MOVE SCR-STAT-CON   TO SCR-STAT
               GO TO FIN-FND-KEY.
           MOVE POZ-COD-TDOC IN POZ TO SCR-CIC-TDOC.
           PERFORM BUS-CIC-TDOC
           IF NOT FIO-STAT-OKS
               GO TO FIN-FND-KEY.
           IF NOT BUS-POR-KEYS = BUS-POR-CLTE
               GO TO OPZ-FND-KEY.
           PERFORM GET-CUR-RDZ.
           IF NOT FIO-STAT-OKS
               MOVE 'CBZ'          TO MSG-COD-SIST
               MOVE 'RDZ    INCKY' TO MSG-COD-MENS
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS
               MOVE SCR-STAT-CON TO SCR-STAT
*% IF PGM_PTC
      *PTC ini
               MOVE 'S'          TO SCR-IERR
      *PTC fin
*% END
               GO TO FIN-FND-KEY.
           PERFORM GET-NXT-RDZ.
           IF SCR-IND-MRDC = 'M'
               MOVE MSG-GLS-DESC TO FRM-MENS.
           GO TO ANL-CLI.
       OPZ-FND-KEY.
           PERFORM GET-CUR-RDZ.
           IF NOT FIO-STAT-OKS
               MOVE 'CBZ' TO MSG-COD-SIST
               MOVE 'OPZ    NORDZ' TO MSG-COD-MENS
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS
               MOVE SCR-STAT-CON TO SCR-STAT
*% IF PGM_PTC
      *PTC ini
               MOVE 'S'          TO SCR-IERR
      *PTC fin
*% END
               GO TO FIN-FND-KEY.
           MOVE '00' TO PGM-STAT-RDZ.
           MOVE 'IDLC' TO SCR-KEY-IRDC.
           PERFORM GET-NXT-RDZ.
           IF SCR-IND-MRDC = 'M'
               MOVE 'M'          TO DBC-IND-ICLI IN OPZ-FLD
               MOVE MSG-GLS-DESC TO DBC-GLS-NOMC IN DBC
               MOVE SPACES TO MSG-COD-SIST
               MOVE SPACES TO MSG-COD-MENS
               GO TO ANL-CLI.
           MOVE RDZ-CIC-ICLI IN RDZ TO DBC-CIC-ICLI IN DBC.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM SGC-FIO-DBC.
           IF NOT FIO-STAT-OKS
               MOVE 'CBZ'          TO MSG-COD-SIST
               MOVE 'RDZ    NOCLI' TO MSG-COD-MENS
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS
               MOVE '00'         TO FIO-STAT
               MOVE SCR-STAT-CON TO SCR-STAT
*% IF PGM_PTC
      *PTC ini
               MOVE 'S'          TO SCR-IERR
      *PTC fin
*% END
               GO TO FIN-FND-KEY.
           MOVE '00' TO PGM-STAT-DBC.
           MOVE ADR-DBC-REQA TO SCR-RQA1.
           MOVE DBC-GLS-NOMC IN DBC TO CPT-STRN.
           PERFORM CPT-BLKS.
           MOVE CPT-STRN            TO DBC-GLS-NOMC IN OPZ-FLD.
           MOVE DBC-NUM-ICLI IN DBC TO DBC-NUM-ICLI IN OPZ-FLD.
           MOVE DBC-VRF-ICLI IN DBC TO DBC-VRF-ICLI IN OPZ-FLD.
           MOVE DBC-IND-ICLI IN DBC TO DBC-IND-ICLI IN OPZ-FLD.
           MOVE DBC-GLS-ICLI IN DBC TO DBC-GLS-ICLI IN OPZ-FLD.
       ANL-CLI.
           PERFORM ANL-KEY-ALL.
           IF MSG-COD-MENS NOT = SPACES
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS
               MOVE '00'         TO FIO-STAT
               MOVE SCR-STAT-CON TO SCR-STAT
*% IF PGM_PTC
      *PTC ini
               MOVE 'S'          TO SCR-IERR
      *PTC fin
*% END
               GO TO FIN-FND-KEY.
       REC-OPZ-STAT.
           IF OPZ-IND-RENO IN OPZ NOT > SPACES
               GO TO NOT-BUS-ROZ.
           PERFORM BUS-CIC-RENO
           IF OPZ-IND-RENO IN OPZ = RNO-CIC-NOV IN RNO-VARI
               PERFORM GET-ROZ-NOV
           ELSE
               IF (OPZ-IND-RENO IN OPZ = RNO-CIC-REN IN RNO-VARI) OR
                  (OPZ-IND-RENO IN OPZ = RNO-CIC-PRO IN RNO-VARI)
                   PERFORM GET-ROZ-REN
                   IF MSG-COD-MENS > SPACES
                       GO TO FIN-FND-KEY
                   ELSE
                       MOVE WSS-SGV-RENO TO ROZ-SGV-RENO IN ROZ.
       NOT-BUS-ROZ.
           MOVE PGM-STAT-OPZ TO FIO-STAT.
      *>>>>
*% END
*% IF INI_SCR_TRL
      *<<<< INI_SCR_TRL
           IF OPZ-ESPERA-ABONO
               MOVE 'CBZ'               TO MSG-COD-SIST
               MOVE 'OPZSTT'            TO MSG-COD-TMSG
               MOVE OPZ-MSC-STAT IN OPZ TO MSG-COD-CMSG
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS
               MOVE SCR-STAT-CON TO SCR-STAT
*% IF PGM_PTC
      *PTC ini
               MOVE 'S'          TO SCR-IERR
      *PTC fin
*% END
           ELSE
           IF OPZ-ACTIVADA
               MOVE 'CBZ'          TO MSG-COD-SIST
               MOVE 'OPZ    ACAYA' TO MSG-COD-MENS
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS
               MOVE SCR-STAT-CON TO SCR-STAT
*% IF PGM_PTC
      *PTC ini
               MOVE 'S'          TO SCR-IERR
      *PTC fin
*% END
           ELSE
           IF OPZ-SUSPENDIDA
               MOVE 'CBZ'          TO MSG-COD-SIST
               MOVE 'OPZ    SUSYA' TO MSG-COD-MENS
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS
               MOVE SCR-STAT-CON TO SCR-STAT
*% IF PGM_PTC
      *PTC ini
               MOVE 'S'          TO SCR-IERR
      *PTC fin
*% END
           ELSE
           IF OPZ-DESACTIVADA
               MOVE 'CBZ'          TO MSG-COD-SIST
               MOVE 'OPZ    DESYA' TO MSG-COD-MENS
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS
               MOVE SCR-STAT-CON TO SCR-STAT
*% IF PGM_PTC
      *PTC ini
               MOVE 'S'          TO SCR-IERR
      *PTC fin
*% END
           ELSE           
           IF OPZ-LIQUIDADA
               MOVE 'CBZ'          TO MSG-COD-SIST
               MOVE 'OPZ    LIQYA' TO MSG-COD-MENS
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS
               MOVE SCR-STAT-CON TO SCR-STAT
*% IF PGM_PTC
      *PTC ini
               MOVE 'S'          TO SCR-IERR
      *PTC fin
*% END
           ELSE
               PERFORM VRF-ROPZ
               IF FRM-SUAR = FRM-SUAR-MAL
*% IF PGM_PTC
      *PTC ini
                   MOVE 'S'          TO SCR-IERR
      *PTC fin
*% END
                   MOVE SCR-STAT-CON TO SCR-STAT
               ELSE
                   MOVE SPACES TO FRM-MENS
                   PERFORM LIQ-ROPZ
                   IF MSG-COD-MENS > SPACES
                       MOVE MSG-GLS-DESC TO FRM-MEN1
*% IF PGM_PTC
      *PTC ini
                       MOVE 'S'          TO SCR-IERR
      *PTC fin
*% END
                       MOVE SCR-STAT-CON TO SCR-STAT.
           IF SCR-STAT = SCR-STAT-SON
               IF SCR-CMND = 'LIQ'
                   MOVE 'ZO74' TO WSS-NTRN
               ELSE
                   MOVE 'ZO44' TO WSS-NTRN.
      *>>>>
*% END
*% IF SCR_EXIT
      *<<<< SCR_EXIT
           IF WSS-NTRN > SPACES
               MOVE WSS-NTRN TO SYS-NTRN.
      *>>>>
*% END
*% IF FIN_HBL_IKY OR FIN_HBL_KEY
      *<<<< FIN_HBL_IKY OR FIN_HBL_KEY
           MOVE SPACES TO SCR-CIC-OPEC.
           MOVE SPACES TO SCR-CIC-TCOL.
           MOVE SPACES TO SCR-CIC-TDOC.
           MOVE SPACES TO SCR-IND-OPEE.
           MOVE SPACES TO SCR-IND-PORC.
      *>>>>
*% END
*% IF FIN_HBL_FLD
      *<<<< FIN_HBL_FLD
      *>>>>
*% END
*% IF ABT_CMN_ACC
      *<<<< ABT_CMN_ACC
               MOVE 'CBZ' TO MSG-COD-SIST
               MOVE 'OPZ    NOLIQ' TO MSG-COD-MENS
               PERFORM GET-MSG
               MOVE  MSG-GLS-DESC TO FRM-MENS
      *>>>>
*% END
*% IF INI_CMN_ACC
      *<<<< INI_CMN_ACC
      *>>>>
*% END
*% IF EOF
      *<<<< EOF
      *PTC-INI:   12-NOV-1996 08:50:01 
      * COPY GNSBGTSK.
      *PTC-FIN:   12-NOV-1996 08:50:01 
       BUS-GLS-TEAO SECTION.
       INI-BUS-GLS-TEAO.
           MOVE 'CBZ'               TO FIO-SIST.
           MOVE 'EAO'               TO TAB-COD-TTAB IN TAB.
           MOVE 'OPZ'               TO WSS-COD-CTAB-ENT IN WSS-VARI.
           MOVE OPZ-COD-TOOC IN OPZ TO WSS-COD-CTAB-TIO IN WSS-VARI.
           MOVE OPZ-COD-AOOC IN OPZ TO WSS-COD-CTAB-AUX IN WSS-VARI.
           MOVE SPACES              TO WSS-COD-CTAB-FIL IN WSS-VARI.
       LUP-BUS-GLS-TEAO.
           MOVE WSS-COD-CTAB-EAO     TO TAB-COD-CTAB IN TAB.
           MOVE FIO-GET-KEY          TO FIO-CMND.
           PERFORM GNS-FIO-TAB.
           IF NOT FIO-STAT-OKS
               IF NOT WSS-COD-CTAB-AUX IN WSS-VARI = '*'
                   MOVE '*'      TO WSS-COD-CTAB-AUX IN WSS-VARI
                   GO TO LUP-BUS-GLS-TEAO
               ELSE 
                   GO TO FIN-BUS-GLS-TEAO.
           IF TAB-IND-VIGE IN TAB = 'N'
               GO TO FIN-BUS-GLS-TEAO.
           MOVE TAB-GLS-DATA IN TAB TO WSS-TAB-GLS-DATA-EAO IN WSS-VARI.
           MOVE WSS-TAB-GLS-DATA-EAO-1 IN WSS-VARI TO SCR-GLS-TIAO.
           MOVE WSS-TAB-GLS-DATA-EAO-2 IN WSS-VARI TO SCR-GLS-CIAO.
       FIN-BUS-GLS-TEAO.
           EXIT.

       BUS-CIC-TDOC SECTION.
       INI-BUS-CIC-TDOC.
           MOVE 'TAB'         TO FIO-SIST.
           MOVE 'DOC'         TO TAB-COD-TTAB IN TAB.
           MOVE SCR-CIC-TDOC  TO TAB-COD-CTAB IN TAB.
           MOVE FIO-GET-KEY   TO FIO-CMND.
           PERFORM GNS-FIO-TAB.
           IF NOT FIO-STAT-OKS
               MOVE 'CICTDOCNEX  '  TO MSG-COD-MENS
               PERFORM GET-MSG
               MOVE MSG-COD-MENS    TO FRM-MEN1
               MOVE SCR-CIC-TDOC    TO FRM-MEN2
               MOVE SCR-STAT-CON    TO SCR-STAT
               GO TO FIN-BUS-CIC-TDOC.
           MOVE TAB-CIC-CTAB IN TAB TO SCR-CIC-TDOC.
       FIN-BUS-CIC-TDOC.
           EXIT.

       ANL-KEY-OPZ SECTION.
       INI-ANL-KEY-OPZ.
           PERFORM GET-CLI.
           IF MSG-COD-MENS > SPACES
               MOVE ZEROES TO DBC-NUM-ICLI IN OPZ-FLD
               MOVE SPACES TO DBC-VRF-ICLI IN OPZ-FLD
               MOVE SPACES TO DBC-IND-ICLI IN OPZ-FLD
               MOVE SPACES TO DBC-GLS-ICLI IN OPZ-FLD
               MOVE FIO-STAT-NEX TO FIO-STAT
               MOVE MSG-GLS-DESC TO FRM-MENS
               GO TO FIN-ANL-KEY-OPZ
           ELSE
               MOVE '00' TO PGM-STAT-DBC
               MOVE ADR-DBC-REQA TO SCR-RQA1
               MOVE DBC-GLS-NOMC IN DBC TO CPT-STRN
               PERFORM CPT-BLKS
               MOVE CPT-STRN            TO DBC-GLS-NOMC IN OPZ-FLD
               MOVE DBC-NUM-ICLI IN DBC TO DBC-NUM-ICLI IN OPZ-FLD
               MOVE DBC-VRF-ICLI IN DBC TO DBC-VRF-ICLI IN OPZ-FLD
               MOVE DBC-IND-ICLI IN DBC TO DBC-IND-ICLI IN OPZ-FLD
               MOVE DBC-GLS-ICLI IN DBC TO DBC-GLS-ICLI IN OPZ-FLD
               PERFORM BUS-DEU-DIR
               IF FIO-STAT-OKS
                   MOVE BUS-POR-CLTE TO BUS-POR-KEYS
                   MOVE RDZ-CIC-IOPC IN RDZ TO OPZ-CIC-IOPC IN OPZ
               ELSE
                   MOVE 'CBZ' TO MSG-COD-SIST
                   MOVE 'CLI    NODIR' TO MSG-COD-MENS
                   MOVE FIO-STAT-NEX TO FIO-STAT.
       FIN-ANL-KEY-OPZ.
           EXIT.

       ANL-KEY-ALL SECTION.
       INI-ANL-KEY-ALL.
           PERFORM GET-CUR-COZ.
           IF FIO-STAT-OKS
                MOVE '00' TO PGM-STAT-COZ
                PERFORM GET-NXT-COZ
                    PERFORM PUT-COZ-OPZ
           ELSE
                MOVE SPACES TO MSG-COD-SIST
                MOVE SPACES TO MSG-COD-MENS
                MOVE ZEROES TO COZ-SGV-TINT IN OPZ-FLD.
           PERFORM GET-CUR-CYZ.
           IF FIO-STAT-OKS
                MOVE '00' TO PGM-STAT-CYZ
                PERFORM GET-NXT-CYZ
                IF SCR-IND-MCYA = 'M'
                    MOVE 'M'          TO CYZ-IND-TCYA IN OPZ-FLD
                    MOVE MSG-GLS-DESC TO FRM-MEN2
                    MOVE SPACES TO MSG-COD-SIST
                    MOVE SPACES TO MSG-COD-MENS
                ELSE
                    PERFORM PUT-CYZ-OPZ
           ELSE
                MOVE SPACES TO MSG-COD-SIST
                MOVE SPACES TO MSG-COD-MENS
                MOVE SPACES TO CYZ-IND-TCYA IN OPZ-FLD
                MOVE SPACES TO CYZ-CAI-ICYA IN OPZ-FLD
                MOVE ZEROES TO CYZ-IIC-ICYA IN OPZ-FLD.
           MOVE OPZ-CIC-IOPC IN OPZ TO AUZ-CIC-IOPC IN AUZ.
           MOVE 'AUT'               TO AUZ-NUM-ICAN IN AUZ.
           MOVE 1                   TO AUZ-NUM-ICYA IN AUZ.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM CBZ-FIO-AUZ.
           IF FIO-STAT-OKS
               MOVE '00' TO PGM-STAT-AUZ
               PERFORM PUT-AUZ-OPZ
           ELSE
               MOVE SPACES TO MSG-COD-SIST
               MOVE SPACES TO MSG-COD-MENS
               MOVE ZEROES TO AUZ-IIC-ICYA IN OPZ-FLD
               MOVE SPACES TO AUZ-CAI-ICYA IN OPZ-FLD.
       FIN-ANL-KEY-ALL.
           EXIT.

       BUS-DEU-DIR SECTION.
       INI-BUS-DEU-DIR.
           MOVE SPACES              TO RDZ-KEY-IRDC IN RDZ.
           MOVE DBC-CAI-ICLI IN DBC TO RDZ-CAI-ICLI IN RDZ.
           MOVE DBC-IIC-ICLI IN DBC TO RDZ-IIC-ICLI IN RDZ.
           MOVE FIO-GET-NLS    TO FIO-CMND.
           IF FRM-FFLD = FRM-FFLD-PF7
               MOVE '999999999999' TO RDZ-KEY-IDLC IN RDZ
               MOVE 999 TO RDZ-NUM-IDLC IN RDZ
               MOVE FIO-GET-LEQ TO FIO-CMND.
       LUP-BUS-DEU-DIR.
           PERFORM CBZ-FIO-RDZ.
           IF FIO-STAT-OKS AND
              RDZ-CIC-ICLI IN RDZ = DBC-CIC-ICLI IN DBC
               IF RDZ-NUM-IDLC IN RDZ = ZEROES
                   MOVE '00' TO PGM-STAT-RDZ
                   MOVE ADR-RDZ-REQA TO SCR-RQA2
                   MOVE 'IRDC' TO SCR-KEY-IRDC
                   GO TO FIN-BUS-DEU-DIR
               ELSE
                   IF FRM-FFLD = FRM-FFLD-PF7
                       MOVE FIO-GET-PRV TO FIO-CMND
                       GO TO LUP-BUS-DEU-DIR
                   ELSE
                       MOVE FIO-GET-NXT TO FIO-CMND
                       GO TO LUP-BUS-DEU-DIR
            ELSE
               MOVE SPACES TO SCR-RQA2
               MOVE FIO-STAT-NEX TO FIO-STAT.
       FIN-BUS-DEU-DIR.
           EXIT.

       GET-CUR-RDZ SECTION.
       INI-GET-CUR-RDZ.
           MOVE OPZ-CAI-IOPC IN OPZ TO RDZ-CAI-IOPC IN RDZ.
           MOVE OPZ-IIC-IOPC IN OPZ TO RDZ-IIC-IOPC IN RDZ.
           MOVE ZEROES              TO RDZ-NUM-IDLC IN RDZ.
           MOVE 'RDZ-KEY-IDLC' TO FIO-AKEY.
           MOVE FIO-GET-NLS TO FIO-CMND.
           PERFORM CBZ-FIO-RDZ.
           IF FIO-STAT-OKS AND
              RDZ-CAI-IOPC IN RDZ = OPZ-CAI-IOPC IN OPZ AND
              RDZ-IIC-IOPC IN RDZ = OPZ-IIC-IOPC IN OPZ AND
              RDZ-NUM-IDLC IN RDZ = ZEROS
               NEXT SENTENCE
           ELSE
               MOVE '23' TO FIO-STAT. 
       FIN-GET-CUR-RDZ.
           EXIT.

       GET-NXT-RDZ SECTION.
       INI-GET-NXT-RDZ.
           MOVE SPACES TO MSG-COD-SIST.
           MOVE SPACES TO MSG-COD-MENS.
           MOVE 'RDZ-KEY-IDLC' TO FIO-AKEY.
           MOVE FIO-GET-NXT TO FIO-CMND.
           PERFORM CBZ-FIO-RDZ.
           IF FIO-STAT-OKS AND
              OPZ-CAI-IOPC IN OPZ = RDZ-CAI-IOPC IN RDZ AND
              OPZ-IIC-IOPC IN OPZ = RDZ-IIC-IOPC IN RDZ AND
              RDZ-NUM-IDLC IN RDZ = ZEROES
                MOVE 'M' TO SCR-IND-MRDC
                MOVE 'CBZ'          TO MSG-COD-SIST
                MOVE 'OPZ    MDDIR' TO MSG-COD-MENS
                PERFORM GET-MSG
           ELSE
                MOVE SPACES TO SCR-IND-MRDC
                PERFORM GET-CUR-RDZ.
       FIN-GET-NXT-RDZ.
           EXIT.

       GET-CUR-COZ SECTION.
       INI-GET-CUR-COZ.
           MOVE 'COZ-KEY-IICG' TO FIO-AKEY.
           MOVE OPZ-CIC-IOPC IN OPZ TO COZ-CIC-IOPC IN COZ.
           MOVE ZEROES              TO COZ-NUM-ICAN IN COZ.
           MOVE SPACES              TO COZ-CIC-IOPV IN COZ.
           MOVE ZEROES              TO COZ-NUM-IVCT IN COZ.
           MOVE 'COM000'            TO COZ-IND-TTAS IN COZ.
           MOVE ZEROES              TO COZ-FEC-FINI IN COZ.
           MOVE FIO-GET-NLS TO FIO-CMND.
           PERFORM CBZ-FIO-COZ.
           IF NOT ( FIO-STAT-OKS AND
                    COZ-CIC-IOPC IN COZ = OPZ-CIC-IOPC IN OPZ AND
                    COZ-NUM-ICAN IN COZ = ZEROES              AND
                    COZ-CIC-IOPV IN COZ = SPACES              AND
                    COZ-NUM-IVCT IN COZ = ZEROES              AND
                    COZ-IND-TTAS IN COZ = 'COM000' )
               MOVE '23' TO WSS-FIO-STAT-FLV
               MOVE ZEROES TO WSS-SGV-TCOM
           ELSE
               MOVE '00' TO WSS-FIO-STAT-FLV
               MOVE COZ-SGV-TINT IN COZ TO WSS-SGV-TCOM.
           MOVE 'COZ-KEY-IICG' TO FIO-AKEY.
           MOVE OPZ-CIC-IOPC IN OPZ TO COZ-CIC-IOPC IN COZ.
           MOVE ZEROES              TO COZ-NUM-ICAN IN COZ.
           MOVE SPACES              TO COZ-CIC-IOPV IN COZ.
           MOVE ZEROES              TO COZ-NUM-IVCT IN COZ.
           MOVE 'COM   '            TO COZ-IND-TTAS IN COZ.
           MOVE ZEROES              TO COZ-FEC-FINI IN COZ.
           MOVE FIO-GET-NLS TO FIO-CMND.
           PERFORM CBZ-FIO-COZ.
           IF NOT ( FIO-STAT-OKS AND
                    COZ-CIC-IOPC IN COZ = OPZ-CIC-IOPC IN OPZ AND
                    COZ-NUM-ICAN IN COZ = ZEROES              AND
                    COZ-CIC-IOPV IN COZ = SPACES              AND
                    COZ-NUM-IVCT IN COZ = ZEROES              AND
                    COZ-IND-TTAS IN COZ = 'COM   ' )
               MOVE '23' TO FIO-STAT.
       FIN-GET-CUR-COZ.
           EXIT.

       GET-NXT-COZ SECTION.
       INI-GET-NXT-COZ.
           MOVE 'COZ-KEY-IICG' TO FIO-AKEY.
           MOVE FIO-GET-NXT TO FIO-CMND.
           PERFORM CBZ-FIO-COZ.
           IF FIO-STAT-OKS                              AND
              COZ-CIC-IOPC IN COZ = OPZ-CIC-IOPC IN OPZ AND
              COZ-NUM-ICAN IN COZ = ZEROES              AND
              COZ-CIC-IOPV IN COZ = SPACES              AND
              COZ-NUM-IVCT IN COZ = ZEROES              AND
              COZ-IND-TTAS IN COZ = 'COM   '
                MOVE 'M' TO SCR-IND-MCOM
           ELSE
                MOVE SPACES TO SCR-IND-MCOM
                PERFORM GET-CUR-COZ.
       FIN-GET-NXT-COZ.
           EXIT.

       GET-CUR-CYZ SECTION.
       INI-GET-CUR-CYZ.
           MOVE 'CYZ-KEY-ICYA' TO FIO-AKEY.
           MOVE OPZ-CIC-IOPC IN OPZ TO CYZ-CIC-IOPC IN CYZ.
           MOVE ZEROES              TO CYZ-NUM-ICAN IN CYZ.
           MOVE 1                   TO CYZ-NUM-ICYA IN CYZ.
           MOVE FIO-GET-NLS TO FIO-CMND.
           PERFORM CBZ-FIO-CYZ.
           IF FIO-STAT-OKS AND
              CYZ-CIC-IOPC IN CYZ = OPZ-CIC-IOPC IN OPZ AND
              CYZ-NUM-ICAN IN CYZ = ZEROES              AND
              CYZ-NUM-ICYA IN CYZ = 1
               NEXT SENTENCE
           ELSE
               MOVE '23' TO FIO-STAT. 
       FIN-GET-CUR-CYZ.
           EXIT.

       GET-NXT-CYZ SECTION.
       INI-GET-NXT-CYZ.
           MOVE SPACES TO MSG-COD-SIST.
           MOVE SPACES TO MSG-COD-MENS.
           MOVE 'CYZ-KEY-ICYA' TO FIO-AKEY.
           MOVE FIO-GET-NXT TO FIO-CMND.
           PERFORM CBZ-FIO-CYZ.
           IF FIO-STAT-OKS                              AND
              OPZ-CIC-IOPC IN OPZ = CYZ-CIC-IOPC IN CYZ AND
              CYZ-NUM-ICAN IN CYZ = ZEROES
               MOVE 'M' TO SCR-IND-MCYA
               MOVE 'CBZ'         TO MSG-COD-SIST
               MOVE 'OPZ    MCYZ' TO MSG-COD-MENS
               PERFORM GET-MSG
           ELSE
               MOVE SPACES TO SCR-IND-MCYA
               PERFORM GET-CUR-CYZ.
       FIN-GET-NXT-CYZ.
           EXIT.

       GET-CUR-ROZ SECTION.
       INI-GET-CUR-ROZ.
           MOVE 'ROZ-KEY-IROV' TO FIO-AKEY.
           MOVE OPZ-CIC-IOPC IN OPZ TO ROZ-CIC-IOPC IN ROZ.
           MOVE SPACES              TO ROZ-CIC-IOPV IN ROZ.
           MOVE ZEROES              TO ROZ-NUM-IVCT IN ROZ.
           MOVE FIO-GET-NLS TO FIO-CMND.
           PERFORM CBZ-FIO-ROZ.
           IF FIO-STAT-OKS AND
              ROZ-CIC-IOPC IN ROZ = OPZ-CIC-IOPC IN OPZ AND
              ROZ-CIC-IOPV IN ROZ = SPACES              AND
              ROZ-NUM-IVCT IN ROZ = ZEROES
               NEXT SENTENCE
           ELSE
               MOVE '23' TO FIO-STAT. 
       FIN-GET-CUR-ROZ.
           EXIT.
       LIQ-ROPZ SECTION.
       INI-LIQ-ROPZ.
           MOVE SPACES TO MSG-COD-MENS.
           MOVE 'TVAL' TO MSC-CIC-TMSC IN MSC.
           MOVE '0'    TO MSC-CIC-CMSC IN MSC.
           MOVE 'TAB' TO FIO-SIST.
           MOVE 'MSC-CIC-TABL' TO FIO-AKEY.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM GNS-FIO-MSC.
           IF NOT FIO-STAT-OKS
               MOVE SPACES TO MSC-COD-CMSC IN MSC.
           MOVE WSS-IND-TMMX IN WSS-VARI TO WSS-IND-TMON IN WSS-VARI.
           MOVE OPZ-VAL-CRED IN OPZ-FLD  TO WSS-VAL-CRED IN WSS-VARI.
           MOVE OPZ-COD-VCOC IN OPZ-FLD TO OPZ-COD-VCOC IN OPZ
           IF OPZ-MSC-TVOC IN OPZ = MSC-COD-CMSC IN MSC
               MOVE WSS-IND-TMMN IN WSS-VARI TO WSS-IND-TMON IN WSS-VARI
               MOVE OPZ-COD-VCOC IN OPZ-FLD TO TAB-COD-CTAB IN TAB
               MOVE '0999  '                TO TAB-CIC-CTAB IN TAB
               MOVE OPZ-NUM-DCOL IN OPZ-FLD TO TAB-NUM-DTRN IN TAB
               MOVE OPZ-NUM-MCOL IN OPZ-FLD TO TAB-NUM-MTRN IN TAB
               MOVE OPZ-NUM-SCOL IN OPZ-FLD TO TAB-NUM-STRN IN TAB
               MOVE OPZ-NUM-ACOL IN OPZ-FLD TO TAB-NUM-ATRN IN TAB
               PERFORM GET-VCAM
               IF MSG-COD-MENS IN MSG NOT > SPACES
                   MULTIPLY CAM-SGV-VCAM IN CAM BY OPZ-VAL-CRED IN
                            OPZ-FLD GIVING WSS-VAL-CRED IN WSS-VARI
               ELSE
                   IF MSG-COD-MENS IN MSG = 'CODVCAMEQL'
                       MOVE 1 TO CAM-SGV-VCAM IN CAM
                       MOVE SPACES TO MSG-COD-MENS IN MSG
                       MOVE OPZ-VAL-CRED IN OPZ-FLD TO WSS-VAL-CRED IN
                                                       WSS-VARI
                   ELSE
                       GO TO MSG-LIQ-ROPZ.
       IMP-LIQ-ROPZ.
           PERFORM ELI-COZ-IMP-GAS.
           IF MSG-COD-MENS > SPACES
               GO TO MSG-LIQ-ROPZ.
           IF OPZ-IND-RENO IN OPZ-FLD NOT = SPACES
              MOVE 'NEG'          TO WSS-TIP-PROC IN WSS-VARI
           ELSE
              MOVE 'CUR'          TO WSS-TIP-PROC IN WSS-VARI.
           PERFORM OBT-PLAN-COMI.
           IF MSG-COD-MENS > SPACES
               GO TO MSG-LIQ-ROPZ.
           PERFORM OBT-PLAN-IMPU.
           IF MSG-COD-MENS > SPACES
               GO TO MSG-LIQ-ROPZ.
           PERFORM OBT-VIMP-GNOT.
           IF MSG-COD-MENS > SPACES
               GO TO MSG-LIQ-ROPZ.
       SIG-LIQ-ROPZ.

           IF SCR-CIC-OPEC = 'B'
               MOVE ZEROES TO WSS-VAL-CRED IN WSS-VARI.

           PERFORM AGR-GAS-VEC.
           PERFORM CAL-COZ.
           IF  MSG-COD-MENS > SPACES
               GO TO MSG-LIQ-ROPZ.
           PERFORM CAL-IMP.
           IF  MSG-COD-MENS > SPACES
               GO TO MSG-LIQ-ROPZ.
           MOVE ZEROES TO WSS-VAL-CREL IN WSS-VARI.
           COMPUTE OPZ-SGV-LIQU IN OPZ-FLD =
               WSS-VAL-CREL IN WSS-VARI - 
               OPZ-VAL-GAST IN OPZ-FLD - OPZ-SGV-VCOM IN OPZ-FLD -
               WSS-VAL-IMPU IN WSS-VARI - WSS-VAL-GNOT IN WSS-VARI -
               WSS-VAL-PORT IN WSS-VARI.
           PERFORM GRA-COZ-IMP-GAS.
           IF  MSG-COD-MENS > SPACES
               GO TO MSG-LIQ-ROPZ.
           MOVE OPZ-COD-VCOC IN OPZ-FLD TO PES-COD-VCAM.
           MOVE OPZ-SGV-LIQU IN OPZ-FLD TO PES-SGV-DECI IN PES-VARI.
           PERFORM PES-SCTV.
           MOVE PES-SGV-ENTE IN PES-VARI TO OPZ-SGV-LIQU IN OPZ-FLD.
           IF SCR-CIC-OPEC NOT = 'B'
               SUBTRACT ROZ-SGV-RENO IN OPZ-FLD FROM OPZ-SGV-LIQU 
                                                             IN OPZ-FLD.
           GO TO FIN-LIQ-ROPZ.
       MSG-LIQ-ROPZ.
           MOVE 'CBZ' TO MSG-COD-SIST.
           PERFORM GET-MSG.
       FIN-LIQ-ROPZ.
           EXIT.
       ELI-COZ-IMP-GAS SECTION.
       INI-ELI-COZ-IMP-GAS.
           MOVE 'COM   ' TO  WSS-IND-TTAS IN WSS-VARI
           PERFORM ELI-ALL-COZ-IMP-GAS.
           IF  MSG-COD-MENS > SPACES
               GO TO FIN-ELI-COZ-IMP-GAS.
           MOVE 'IMP   ' TO  WSS-IND-TTAS IN WSS-VARI
           PERFORM ELI-ALL-COZ-IMP-GAS.
           IF  MSG-COD-MENS > SPACES
               GO TO FIN-ELI-COZ-IMP-GAS.
           MOVE 'GAS   ' TO  WSS-IND-TTAS IN WSS-VARI
           PERFORM ELI-ALL-COZ-IMP-GAS.
           IF  MSG-COD-MENS > SPACES
               GO TO FIN-ELI-COZ-IMP-GAS.
           MOVE 'INT   ' TO  WSS-IND-TTAS IN WSS-VARI
           PERFORM ELI-ALL-COZ-IMP-GAS.
       FIN-ELI-COZ-IMP-GAS.
           EXIT.
       ELI-ALL-COZ-IMP-GAS SECTION.
       INI-ELI-ALL-COZ-IMP-GAS.
           MOVE OPZ-CIC-IOPC IN OPZ      TO COZ-CIC-IOPC IN COZ.
           MOVE ZEROES                   TO COZ-NUM-ICAN IN COZ.
           MOVE SPACES                   TO COZ-CIC-IOPV IN COZ.
           MOVE ZEROES                   TO COZ-NUM-IVCT IN COZ.
           MOVE WSS-IND-TTAS IN WSS-VARI TO COZ-IND-TTAS IN COZ.
           MOVE ZEROES                   TO COZ-FEC-FINI IN COZ.
           MOVE FIO-GET-NLS TO FIO-CMND.
       LUP-ELI-ALL-COZ-IMP-GAS.
           PERFORM CBZ-FIO-COZ.
           IF NOT ( FIO-STAT-OKS AND
                    COZ-CIC-IOPC IN COZ = OPZ-CIC-IOPC IN OPZ AND
                    COZ-NUM-ICAN IN COZ = ZEROES              AND
                    COZ-CIC-IOPV IN COZ = SPACES              AND
                    COZ-NUM-IVCT IN COZ = ZEROES              AND
                    COZ-GLS-NTAS IN COZ = WSS-GLS-NTAS IN WSS-VARI )
               GO TO FIN-ELI-ALL-COZ-IMP-GAS.
           IF ( COZ-IND-TTAS IN COZ = 'COM   ' OR 'IMP   ' OR 'GAS   '
                OR 'INT   ' OR 'COM000')
               MOVE FIO-GET-NXT   TO FIO-CMND
               GO TO LUP-ELI-ALL-COZ-IMP-GAS.
           MOVE FIO-GET-KEY-UPD TO FIO-CMND.
           PERFORM CBZ-FIO-COZ.
           IF NOT FIO-STAT-OKS
               MOVE 'COZKEYUNEX'        TO MSG-COD-MENS
               MOVE ICZ-KEY-IICG IN ICZ TO FRM-MEN2
               GO TO FIN-ELI-ALL-COZ-IMP-GAS.
           MOVE FIO-DEL TO FIO-CMND.
           PERFORM CBZ-FIO-COZ.
           IF NOT FIO-STAT-OKS
               MOVE 'COZDEL NEX'        TO MSG-COD-MENS
               MOVE ICZ-KEY-IICG IN ICZ TO FRM-MEN2
               GO TO FIN-ELI-ALL-COZ-IMP-GAS.
       NXT-ELI-ALL-COZ-IMP-GAS.
           MOVE FIO-GET-NLS TO FIO-CMND.
           GO TO LUP-ELI-ALL-COZ-IMP-GAS.
       FIN-ELI-ALL-COZ-IMP-GAS.
           EXIT.
       GRA-COZ-IMP-GAS SECTION.
       INI-GRA-COZ-IMP-GAS.
           SET   DIM-J                    TO 1.
       LUP-GRA-COZ-IMP-GAS.
           IF    DIM-J  > VEC-TOPE
                 GO TO FIN-GRA-COZ-IMP-GAS.
              MOVE OPZ-CIC-IOPC IN OPZ TO COZ-CIC-IOPC IN COZ.
              MOVE ZEROES              TO COZ-NUM-ICAN IN COZ.
              MOVE SPACES              TO COZ-CIC-IOPV IN COZ.
              MOVE ZEROES              TO COZ-NUM-IVCT IN COZ.
              MOVE VEC-COD-CNDC IN VEC-ICG (DIM-J)
                                       TO COZ-GLS-NTAS IN COZ.
              MOVE VEC-COD-TCDC IN VEC-ICG (DIM-J)
                                       TO COZ-GLS-STAS IN COZ.
              MOVE VEC-VAL-MCAL IN VEC-ICG (DIM-J) 
                                       TO COZ-SGV-MCAL IN COZ.
              MOVE VEC-VAL-TIMP IN VEC-ICG (DIM-J)
                                       TO COZ-SGV-TINT IN COZ.
              MOVE VEC-SGV-LIQU IN VEC-ICG (DIM-J)
                                       TO COZ-SGV-MNTO IN COZ.
              MOVE VEC-FEC-FACT IN VEC-ICG (DIM-J)
                                       TO COZ-FEC-FINI IN COZ.
              MOVE VEC-INT-TIPT IN VEC-ICG (DIM-J)
                                       TO COZ-COD-TIPT IN COZ.
              MOVE FIO-PUT TO FIO-CMND.
              PERFORM CBZ-FIO-COZ.
              IF NOT FIO-STAT-OKS
                 MOVE 'COZPUT DUP'     TO MSG-COD-MENS
                 GO TO FIN-GRA-COZ-IMP-GAS.
           SET   DIM-J                    UP BY 1.
           GO TO LUP-GRA-COZ-IMP-GAS.
       FIN-GRA-COZ-IMP-GAS.
           EXIT.
       AGR-GAS-VEC SECTION.
       INI-AGR-GAS-VEC.
           MOVE SPACES            TO INT-TIPT.
           IF OPZ-VAL-GAST IN OPZ-FLD  > 0
              ADD  1              TO VEC-TOPE
              MOVE ZEROES         TO VEC-VAL-MCAL IN VEC-ICG (VEC-TOPE)
              MOVE ZEROES         TO VEC-VAL-TIMP IN VEC-ICG (VEC-TOPE)
              MOVE 'GAS'          TO VEC-COD-CNDC IN VEC-ICG (VEC-TOPE)
              MOVE 'GEN'          TO VEC-COD-TCDC IN VEC-ICG (VEC-TOPE)
              MOVE OPZ-VAL-GAST IN OPZ-FLD
                                  TO VEC-SGV-LIQU IN VEC-ICG (VEC-TOPE)
              MOVE OPZ-FEC-FCOL IN OPZ
                                TO VEC-FEC-FACT IN VEC-ICG (VEC-TOPE)
              MOVE INT-TIPT       TO VEC-INT-TIPT IN VEC-ICG (VEC-TOPE).
           IF WSS-VAL-GNOT IN WSS-VARI > 0
              ADD  1              TO VEC-TOPE
              MOVE ZEROES         TO VEC-VAL-MCAL IN VEC-ICG (VEC-TOPE)
              MOVE ZEROES         TO VEC-VAL-TIMP IN VEC-ICG (VEC-TOPE)
              MOVE 'GAS'          TO VEC-COD-CNDC IN VEC-ICG (VEC-TOPE)
              MOVE 'NCU'          TO VEC-COD-TCDC IN VEC-ICG (VEC-TOPE)
              MOVE WSS-VAL-GNOT IN WSS-VARI
                                  TO VEC-SGV-LIQU IN VEC-ICG (VEC-TOPE)
              MOVE OPZ-FEC-FCOL IN OPZ
                                TO VEC-FEC-FACT IN VEC-ICG (VEC-TOPE)
              MOVE INT-TIPT       TO VEC-INT-TIPT IN VEC-ICG (VEC-TOPE).
           IF WSS-VAL-PORT IN WSS-VARI > 0
              ADD  1              TO VEC-TOPE
              MOVE ZEROES         TO VEC-VAL-MCAL IN VEC-ICG (VEC-TOPE)
              MOVE ZEROES         TO VEC-VAL-TIMP IN VEC-ICG (VEC-TOPE)
              MOVE 'GAS'          TO VEC-COD-CNDC IN VEC-ICG (VEC-TOPE)
              MOVE 'PCU'          TO VEC-COD-TCDC IN VEC-ICG (VEC-TOPE)
              MOVE WSS-VAL-PORT IN WSS-VARI
                                  TO VEC-SGV-LIQU IN VEC-ICG (VEC-TOPE)
              MOVE OPZ-FEC-FCOL IN OPZ
                                TO VEC-FEC-FACT IN VEC-ICG (VEC-TOPE)
              MOVE INT-TIPT       TO VEC-INT-TIPT IN VEC-ICG (VEC-TOPE).
       FIN-AGR-GAS-VEC.
           EXIT.
       CAL-COZ SECTION.
       INI-CAL-COZ.
           IF PCZ-COD-PLAN IN PCZ NOT > SPACES
              GO TO FIN-CAL-COZ.
           PERFORM REC-PCZ-COZ VARYING DCO-I FROM 1
                               BY 1
                               UNTIL ( DCO-I > DCO-MAX
                               OR PCZ-COD-COMI IN PCZ (DCO-I)
                                                  NOT > SPACES
                               OR    DCO-STAT > SPACES).
           IF DCO-STAT  >  SPACES
               MOVE DCO-STAT                TO MSG-COD-MENS.
       FIN-CAL-COZ.
           EXIT.
       REC-PCZ-COZ SECTION.
       INI-REC-PCZ-COZ.
           PERFORM OBT-CIC-PCZ.
           IF NOT (DCO-CIC-COMI IN DCO-VARI > SPACES)
              GO TO FIN-REC-PCZ-COZ.
           IF (DCO-CIC-COMI IN DCO-VARI = 'INF')
              MOVE ZEROS                TO DCO-VAL-MCAL IN DCO-VARI
              MOVE ZEROES               TO PCZ-SGV-TIMP IN PCZ (DCO-I)
              MOVE WSS-SGV-VCOM IN WSS-VARI TO DCO-VAL-CALC IN DCO-VARI
                                               OPZ-SGV-VCOM IN OPZ-FLD
              PERFORM AGR-MOV-VEC
              GO TO FIN-REC-PCZ-COZ
           ELSE
           IF (DCO-CIC-COMI IN DCO-VARI = 'FLA' AND
               NOT CAL-COM-FLA)
              PERFORM COZ-VAL-FLA-CUR
           ELSE
           IF (DCO-CIC-CONC IN DCO-VARI = 'GAS' AND
               NOT CAL-COM-GAS)
              PERFORM COZ-VAL-GAS-CUR
           ELSE
           IF (DCO-CIC-CONC IN DCO-VARI = 'GNO' AND
               NOT CAL-COM-GNO)
              PERFORM COZ-VAL-GNO-CUR
           ELSE
           IF (DCO-CIC-CONC IN DCO-VARI = 'CAP' AND
               NOT CAL-COM-CAP)
              PERFORM COZ-VAL-CAP-CUR.
       FIN-REC-PCZ-COZ.
           EXIT.
       OBT-CIC-PCZ SECTION.
       INI-OBT-CIC-PCZ.
           MOVE 'CBZ'                       TO TAB-COD-SIST FIO-SIST.
           MOVE 'CMS'                       TO TAB-COD-TTAB IN TAB.
           MOVE PCZ-COD-COMI IN PCZ (DCO-I) TO TAB-COD-CTAB IN TAB.
           MOVE FIO-GET-KEY         TO FIO-CMND.
           PERFORM GNS-FIO-TAB.
           IF FIO-STAT-OKS
               IF TAB-IND-VIGE IN TAB = 'N'
                   MOVE 'COD    NVG'        TO DCO-STAT
                   GO TO FIN-OBT-CIC-PCZ
               ELSE
                   MOVE TAB-CIC-CTAB IN TAB TO DCO-CIC-COMI
           ELSE
               MOVE 'COD    NEX'            TO DCO-STAT
               GO TO FIN-OBT-CIC-PCZ.
           MOVE 'CBZ'                       TO MSC-COD-SIST FIO-SIST.
           MOVE 'SCTB'                      TO MSC-COD-TMSC IN MSC.
           MOVE PCZ-IND-SCTB IN PCZ (DCO-I) TO MSC-COD-CMSC IN MSC.
           MOVE FIO-GET-KEY                 TO FIO-CMND.
           PERFORM GNS-FIO-MSC.
           IF FIO-STAT-OKS
               IF TAB-IND-VIGE IN TAB = 'N'
                   MOVE 'COD    NVG'        TO DCO-STAT
                   GO TO FIN-OBT-CIC-PCZ
               ELSE
                   MOVE TAB-CIC-CTAB IN TAB TO DCO-CIC-SCTB
           ELSE
               MOVE 'COD    NEX'            TO DCO-STAT
               GO TO FIN-OBT-CIC-PCZ.
           MOVE 'CBZ'                       TO TAB-COD-SIST FIO-SIST.
           MOVE 'CPT'                       TO TAB-COD-TTAB IN TAB.
           MOVE PCZ-COD-CONC IN PCZ (DCO-I) TO TAB-COD-CTAB IN TAB.
           MOVE FIO-GET-KEY         TO FIO-CMND.
           PERFORM GNS-FIO-TAB.
           IF FIO-STAT-OKS
               IF TAB-IND-VIGE IN TAB = 'N'
                   MOVE 'COD    NVG'        TO DCO-STAT
                   GO TO FIN-OBT-CIC-PCZ
               ELSE
                   MOVE TAB-CIC-CTAB IN TAB TO DCO-CIC-CONC
           ELSE
               MOVE 'COD    NEX'            TO DCO-STAT
               GO TO FIN-OBT-CIC-PCZ.
       FIN-OBT-CIC-PCZ.
           EXIT.
       COZ-VAL-FLA-CUR SECTION.
       INI-COZ-VAL-FLA-CUR.
           MOVE OPZ-CAI-IOPC IN OPZ-FLD TO ICZ-CAI-IOPC IN ICZ.
           MOVE OPZ-IIC-IOPC IN OPZ-FLD TO ICZ-IIC-IOPC IN ICZ.
           MOVE ZEROES                  TO ICZ-NUM-ICAN IN ICZ.
           MOVE SPACES                  TO ICZ-CIC-IOPV IN ICZ.
           MOVE ZEROES                  TO ICZ-NUM-IVCT IN ICZ.
           MOVE 'COM   '                TO ICZ-IND-TTAS IN ICZ.
           MOVE ZEROES                  TO ICZ-FEC-FINI IN ICZ.
           MOVE FIO-GET-NLS TO FIO-CMND.
           PERFORM CBZ-FIO-ICZ.
           IF FIO-STAT-OKS AND
              ICZ-CAI-IOPC IN ICZ = OPZ-CAI-IOPC IN OPZ-FLD AND
              ICZ-IIC-IOPC IN ICZ = OPZ-IIC-IOPC IN OPZ-FLD AND
              ICZ-NUM-ICAN IN ICZ = ZEROES AND
              ICZ-CIC-IOPV IN ICZ = SPACES AND
              ICZ-NUM-IVCT IN ICZ = ZEROES AND
              ICZ-IND-TTAS IN ICZ = 'COM   '
               MOVE ICZ-SGV-TINT IN ICZ TO PCZ-SGV-TIMP IN PCZ (DCO-I)
               MOVE WSS-VAL-CRED IN WSS-VARI TO DCO-VAL-CALC IN DCO-VARI
               PERFORM COZ-VAL-ALL
               IF WSS-COM-CAL IN WSS-VARI > 0
                  MOVE  1               TO WSS-CAL-COM-FLA.
       FIN-COM-VAL-FLA-CUR.
           EXIT.
       AGR-MOV-VEC SECTION.
       INI-AGR-MOV-VEC.
           MOVE SPACES     TO INT-TIPT.
           SET  DCO-J                    TO 1.
           SEARCH VEC-ICG  AT END 
                     PERFORM GRA-VEC-PCZ
           WHEN
                ( VEC-COD-CNDC IN VEC-ICG (DCO-J) = 'COM' AND
                  VEC-COD-TCDC IN VEC-ICG (DCO-J) =
                                  PCZ-COD-COMI IN PCZ (DCO-I))
                  PERFORM ACT-VEC-PCZ.
       FIN-AGR-MOV-VEC.
           EXIT.
       COZ-VAL-GAS-CUR SECTION.
       INI-COZ-VAL-GAS-CUR.
           MOVE OPZ-VAL-GAST IN OPZ-FLD TO DCO-VAL-CALC IN DCO-VARI
           PERFORM COZ-VAL-ALL.
           IF WSS-COM-CAL IN WSS-VARI > 0
              MOVE  1               TO WSS-CAL-COM-GAS.
       FIN-COZ-VAL-GAS-CUR.
           EXIT.
       COZ-VAL-CAP-CUR SECTION.
       INI-COZ-VAL-CAP-CUR.
           MOVE WSS-VAL-CRED IN WSS-VARI TO DCO-VAL-CALC IN DCO-VARI
           PERFORM COZ-VAL-ALL.
           IF WSS-COM-CAL IN WSS-VARI > 0
              MOVE  1               TO WSS-CAL-COM-CAP.
       FIN-COZ-VAL-CAP-CUR.
           EXIT.
       COZ-VAL-GNO-CUR SECTION.
       INI-COZ-VAL-GNO-CUR.
           MOVE WSS-VAL-GNOT IN WSS-VARI TO DCO-VAL-CALC IN DCO-VARI
           PERFORM COZ-VAL-ALL.
           IF WSS-COM-CAL IN WSS-VARI > 0
              MOVE  1               TO WSS-CAL-COM-GNO.
       FIN-COZ-VAL-GNO-CUR.
           EXIT.
       COZ-VAL-ALL SECTION.
       INI-COZ-VAL-ALL.
           MOVE 0                   TO WSS-COM-CAL IN WSS-VARI.
           MOVE DCO-VAL-CALC IN DCO-VARI TO DCO-VAL-MCAL IN DCO-VARI.
           IF  PCZ-VAL-MTOP IN PCZ (DCO-I) < DCO-VAL-CALC IN DCO-VARI
           AND PCZ-VAL-MTOP IN PCZ (DCO-I) NOT = ZEROES
               GO TO FIN-COZ-VAL-ALL.
           IF PCZ-SGV-TIMP IN PCZ (DCO-I) = ZEROES
              MOVE PCZ-VAL-COMI IN PCZ (DCO-I) 
                                         TO DCO-VAL-CALC IN DCO-VARI
           ELSE
              IF PCZ-COD-TITA IN PCZ (DCO-I) = SPACES
                 COMPUTE  DCO-VAL-CALC IN DCO-VARI ROUNDED =
                          DCO-VAL-CALC IN DCO-VARI *
                          PCZ-SGV-TIMP IN PCZ (DCO-I) / 100
                 MOVE     SPACES TO INT-TIPT
              ELSE
                 MOVE PCZ-COD-TITA IN PCZ (DCO-I)
                                          TO WSS-COD-TITA IN WSS-VARI
                 MOVE PCZ-SGV-TIMP IN PCZ (DCO-I) TO INT-TINT
                 MOVE WSS-COD-TIPT IN WSS-VARI    TO INT-TIPT
                 MOVE OPZ-FEC-FCOL IN OPZ-FLD TO FEC-FEC1
                 MOVE WSS-NUM-DMAV TO FEC-DEC2
                 MOVE WSS-NUM-MMAV TO FEC-MEC2
                 MOVE WSS-NUM-AMAV TO FEC-AEC2
                 MOVE WSS-NUM-SMAV TO FEC-SEC2
                 MOVE FEC-FORM-FEC TO FEC-FORM
                 MOVE FEC-DIF-DIA  TO FEC-CMND
                 PERFORM CAL-FEC
                 MOVE FEC-NDIA TO INT-SEPD
                 PERFORM  GNS-CAL-TPE
                 COMPUTE  DCO-VAL-CALC IN DCO-VARI ROUNDED =
                          DCO-VAL-CALC IN DCO-VARI * INT-TIPE.

           IF  PCZ-VAL-COMI IN PCZ (DCO-I) > DCO-VAL-CALC IN DCO-VARI
           AND PCZ-VAL-COMI IN PCZ (DCO-I) NOT = 0
                MOVE PCZ-VAL-COMI IN PCZ (DCO-I) 
                                         TO DCO-VAL-CALC IN DCO-VARI
           ELSE
           IF  PCZ-VAL-COMA IN PCZ (DCO-I) < DCO-VAL-CALC IN DCO-VARI
           AND PCZ-VAL-COMA IN PCZ (DCO-I) NOT = 0
                MOVE PCZ-VAL-COMA IN PCZ (DCO-I) 
                                         TO DCO-VAL-CALC IN DCO-VARI.
              
           MOVE DCO-VAL-CALC IN DCO-VARI TO PES-SGV-DECI.
           MOVE OPZ-COD-VCOC IN OPZ-FLD  TO PES-COD-VCAM.
           PERFORM PES-SCTV.
           MOVE PES-SGV-ENTE             TO DCO-VAL-CALC IN DCO-VARI.

           SET  DCO-J                    TO 1.
           SEARCH VEC-ICG  AT END 
                  PERFORM GRA-VEC-PCZ
           WHEN
              ( VEC-COD-CNDC IN VEC-ICG (DCO-J) = 'COM' AND
                VEC-COD-TCDC IN VEC-ICG (DCO-J) =
                                         PCZ-COD-COMI IN PCZ (DCO-I))
                  PERFORM ACT-VEC-PCZ.

           MOVE 1                         TO WSS-COM-CAL IN WSS-VARI.
           ADD DCO-VAL-CALC IN DCO-VARI   TO OPZ-SGV-VCOM IN OPZ-FLD.
       FIN-COZ-VAL-ALL.
           EXIT.
       ACT-VEC-PCZ SECTION.
       INI-ACT-VEC-PCZ.
           ADD DCO-VAL-MCAL IN DCO-VARI 
                                TO VEC-VAL-MCAL IN VEC-ICG (DCO-J).
           ADD DCO-VAL-CALC IN DCO-VARI
                                TO VEC-SGV-LIQU IN VEC-ICG (DCO-J).
       FIN-ACT-VEC-PCZ.
           EXIT.
       GRA-VEC-PCZ SECTION.
       INI-GRA-VEC-PCZ.
           ADD  1                        TO VEC-TOPE.
           MOVE DCO-VAL-CALC IN DCO-VARI
                                TO VEC-SGV-LIQU IN VEC-ICG (VEC-TOPE).
           IF NOT (DCO-CIC-COMI IN DCO-VARI = 'TRF' OR 'EST')
              MOVE PCZ-SGV-TIMP IN PCZ (DCO-I) 
                                TO VEC-VAL-TIMP IN VEC-ICG (VEC-TOPE)
           ELSE
              MOVE WSS-VAL-CTRA IN WSS-VARI 
                                TO VEC-VAL-TIMP IN VEC-ICG (VEC-TOPE).
           MOVE 'COM'           TO VEC-COD-CNDC IN VEC-ICG (VEC-TOPE).
           IF NOT DCO-CIC-COMI IN DCO-VARI = 'EST'
              MOVE PCZ-COD-COMI IN PCZ (DCO-I)  
                                TO VEC-COD-TCDC IN VEC-ICG (VEC-TOPE)
           ELSE
              MOVE DCO-CIC-COMI IN DCO-VARI 
                                TO VEC-COD-TCDC IN VEC-ICG (VEC-TOPE).
           MOVE DCO-VAL-MCAL IN DCO-VARI 
                                TO VEC-VAL-MCAL IN VEC-ICG (VEC-TOPE).
           MOVE PCZ-FEC-FPLA IN PCZ
                                TO VEC-FEC-FACT IN VEC-ICG (VEC-TOPE).
           MOVE INT-TIPT        TO VEC-INT-TIPT IN VEC-ICG (VEC-TOPE).
       FIN-GRA-VEC-PCZ.
           EXIT.
       CAL-IMP SECTION.
       INI-CAL-IMP.
           IF PIZ-COD-PLAN IN PIZ NOT > SPACES
              GO TO FIN-CAL-IMP.
           PERFORM REC-PIZ-IMP VARYING DIM-I FROM 1
                               BY 1
                               UNTIL ( DIM-I > DIM-MAX
                               OR  PIZ-COD-IMPU IN PIZ (DIM-I)
                                                   NOT > SPACES
                               OR  DIM-STAT > SPACES).
            IF DIM-STAT  >  SPACES
               MOVE DIM-STAT                TO MSG-COD-MENS.
       FIN-CAL-IMP.
           EXIT.
       REC-PIZ-IMP SECTION.
       INI-REC-PIZ-IMP.
           PERFORM OBT-CIC-PIZ.
           IF NOT (DIM-CIC-IMPU IN DIM-VARI > SPACES)
              GO TO FIN-REC-PIZ-IMP.
           IF (DIM-CIC-CONC IN DIM-VARI = 'COM' OR 'GAS')
              PERFORM IMP-VAL-VEC-CUR
           ELSE
           IF (DIM-CIC-CONC IN DIM-VARI = 'CAP')
              PERFORM IMP-VAL-CAP-CUR
           ELSE
           IF (DIM-CIC-CONC IN DIM-VARI = 'SDO')
              PERFORM IMP-VAL-SDO-CUR.
       FIN-REC-PIZ-IMP.
           EXIT.
       IMP-VAL-VEC-CUR SECTION.
       INI-IMP-VAL-VEC-CUR.
           SET   DIM-J                    TO 1.
           SEARCH VEC-ICG  AT END 
                GO TO FIN-IMP-VAL-VEC-CUR
           WHEN
              ( PIZ-COD-CONC IN PIZ (DIM-I) =
                                     VEC-COD-CNDC IN VEC-ICG (DIM-J) AND
                PIZ-COD-SUBC IN PIZ (DIM-I) =
                                     VEC-COD-TCDC IN VEC-ICG (DIM-J))
                PERFORM CAL-IMP-PIZ-CUR.
       FIN-IMP-VAL-VEC-CUR.
           EXIT.
       CAL-IMP-PIZ-CUR SECTION.
       INI-CAL-IMP-PIZ-CUR.
           MOVE VEC-SGV-LIQU IN VEC-ICG (DIM-J) 
                             TO DIM-VAL-MCAL IN DIM-VARI.
           IF  PIZ-IND-INCL IN PIZ (DIM-I) = 'S'
               COMPUTE DIM-VAL-CALC IN DIM-VARI ROUNDED =
                                    VEC-SGV-LIQU IN VEC-ICG (DIM-J) -
                                    VEC-SGV-LIQU IN VEC-ICG (DIM-J) /
                                   ( 1 + PIZ-SGV-TIMP IN PIZ (DIM-I)
                                    / 100) 
               MOVE DIM-VAL-CALC IN DIM-VARI TO PES-SGV-DECI 
               MOVE OPZ-COD-VCOC IN OPZ-FLD  TO PES-COD-VCAM
               PERFORM PES-SCTV
               MOVE PES-SGV-ENTE             TO DIM-VAL-CALC IN DIM-VARI
               SUBTRACT DIM-VAL-CALC
                   FROM VEC-SGV-LIQU IN VEC-ICG (DIM-J)
           ELSE
               COMPUTE DIM-VAL-CALC IN DIM-VARI ROUNDED =
                                       VEC-SGV-LIQU IN VEC-ICG (DIM-J) *
                                       PIZ-SGV-TIMP IN PIZ (DIM-I) / 100
               MOVE DIM-VAL-CALC IN DIM-VARI TO PES-SGV-DECI 
               MOVE OPZ-COD-VCOC IN OPZ-FLD TO PES-COD-VCAM
               PERFORM PES-SCTV
               MOVE PES-SGV-ENTE            TO DIM-VAL-CALC IN DIM-VARI.
       
           SET   DIM-J                    TO 1.
           SEARCH VEC-ICG  AT END 
                  PERFORM GRA-VEC-PIZ
           WHEN
              ( VEC-COD-CNDC IN VEC-ICG (DIM-J) = 'IMP' AND
                VEC-COD-TCDC IN VEC-ICG (DIM-J) =
                                         PIZ-COD-IMPU IN PIZ (DIM-I))
                  PERFORM ACT-VEC-PIZ.
           ADD DIM-VAL-CALC  IN DIM-VARI   TO WSS-VAL-IMPU IN WSS-VARI.
       FIN-CAL-IMP-PIZ-CUR.
           EXIT.
       IMP-VAL-CAP-CUR SECTION.
       INI-IMP-VAL-CAP-CUR.
           MOVE WSS-VAL-CRED IN WSS-VARI TO DIM-VAL-CALC IN DIM-VARI.
           PERFORM IMP-VAL-ALL.
       FIN-IMP-VAL-CAP-CUR.
           EXIT.
       IMP-VAL-SDO-CUR SECTION.
       INI-IMP-VAL-SDO-CUR.
           MOVE WSS-VAL-CRED IN WSS-VARI TO DIM-VAL-CALC IN DIM-VARI.
           PERFORM IMP-VAL-ALL.
       FIN-IMP-VAL-SDO-CUR.
           EXIT.
       IMP-VAL-ALL SECTION.
       INI-IMP-VAL-ALL.
           MOVE DIM-VAL-CALC IN DIM-VARI TO DIM-VAL-MCAL IN DIM-VARI.
           COMPUTE  DIM-VAL-CALC IN DIM-VARI ROUNDED =
                    DIM-VAL-CALC IN DIM-VARI *
                    PIZ-SGV-TIMP IN PIZ (DIM-I) / 100.
           MOVE DIM-VAL-CALC IN DIM-VARI   TO PES-SGV-DECI
           MOVE OPZ-COD-VCOC IN OPZ-FLD    TO PES-COD-VCAM
           PERFORM PES-SCTV
           MOVE PES-SGV-ENTE               TO DIM-VAL-CALC IN DIM-VARI.
           SET  DIM-J                      TO 1.
           SEARCH VEC-ICG  AT END 
                  PERFORM GRA-VEC-PIZ
           WHEN
              ( VEC-COD-CNDC IN VEC-ICG (DIM-J) = 'IMP' AND
                VEC-COD-TCDC IN VEC-ICG (DIM-J) =
                                         PIZ-COD-IMPU IN PIZ (DIM-I))
                  PERFORM ACT-VEC-PIZ.
           ADD DIM-VAL-CALC IN DIM-VARI   TO WSS-VAL-IMPU IN WSS-VARI.
       FIN-IMP-VAL-ALL.
           EXIT.
       ACT-VEC-PIZ SECTION.
       INI-ACT-VEC-PIZ.
           ADD DIM-VAL-MCAL IN DIM-VARI 
                                TO VEC-VAL-MCAL IN VEC-ICG (DIM-J).
           ADD DIM-VAL-CALC IN DIM-VARI
                               TO VEC-SGV-LIQU IN VEC-ICG (DIM-J).
       FIN-ACT-VEC-PIZ.
           EXIT.
       GRA-VEC-PIZ SECTION.
       INI-GRA-VEC-PIZ.
           ADD  1                        TO VEC-TOPE.
           MOVE DIM-VAL-CALC IN DIM-VARI
                                TO VEC-SGV-LIQU IN VEC-ICG (VEC-TOPE).
           MOVE PIZ-SGV-TIMP IN PIZ (DIM-I) 
                                TO VEC-VAL-TIMP IN VEC-ICG (VEC-TOPE).
           MOVE 'IMP'           TO VEC-COD-CNDC IN VEC-ICG (VEC-TOPE).
           MOVE PCZ-COD-COMI IN PCZ (DIM-I)
                                TO VEC-COD-TCDC IN VEC-ICG (VEC-TOPE).
           MOVE DIM-VAL-MCAL IN DIM-VARI
                                TO VEC-VAL-MCAL IN VEC-ICG (VEC-TOPE).
           MOVE PIZ-FEC-FPLA IN PIZ
                                TO VEC-FEC-FACT IN VEC-ICG (VEC-TOPE).
           MOVE SPACES          TO VEC-INT-TIPT IN VEC-ICG (VEC-TOPE).
       FIN-GRA-VEC-PIZ.
           EXIT.
       REC-PIZ-IDL SECTION.
       INI-REC-PIZ-IDL.
           MOVE SPACES              TO DIM-CIC-IMPU IN DIM-VARI.
           MOVE 'CBZ'               TO TAB-COD-SIST FIO-SIST.
           MOVE 'IPT'               TO TAB-COD-TTAB IN TAB.
           MOVE PIZ-COD-IMPU IN PIZ (DIM-I) TO TAB-COD-CTAB IN TAB.
           MOVE FIO-GET-KEY         TO FIO-CMND.
           PERFORM GNS-FIO-TAB.
           IF FIO-STAT-OKS
               IF TAB-IND-VIGE IN TAB = 'N'
                   MOVE 'COD    NVG' TO DIM-STAT
                   GO TO FIN-REC-PIZ-IDL
               ELSE
                   MOVE TAB-CIC-CTAB IN TAB 
                                       TO DIM-CIC-IMPU IN DIM-VARI
           ELSE
               MOVE 'COD    NEX'       TO DIM-STAT IN DIM-VARI
               GO TO FIN-REC-PIZ-IDL.
       FIN-REC-PIZ-IDL.
           EXIT.

       OBT-CIC-PIZ SECTION.
       INI-OBT-CIC-PIZ.
           MOVE 'CBZ'                       TO TAB-COD-SIST FIO-SIST.
           MOVE 'IPT'                       TO TAB-COD-TTAB IN TAB.
           MOVE PIZ-COD-IMPU IN PIZ (DIM-I) TO TAB-COD-CTAB IN TAB.
           MOVE FIO-GET-KEY         TO FIO-CMND.
           PERFORM GNS-FIO-TAB.
           IF FIO-STAT-OKS
               IF TAB-IND-VIGE IN TAB = 'N'
                   MOVE 'COD    NVG'        TO DIM-STAT
                   GO TO FIN-OBT-CIC-PIZ
               ELSE
                   MOVE TAB-CIC-CTAB IN TAB TO DIM-CIC-IMPU
           ELSE
               MOVE 'COD    NEX'            TO DIM-STAT
               GO TO FIN-OBT-CIC-PIZ.
           MOVE 'CBZ'                       TO TAB-COD-SIST FIO-SIST.
           MOVE 'CPT'                       TO TAB-COD-TTAB IN TAB.
           MOVE PIZ-COD-CONC IN PIZ (DIM-I) TO TAB-COD-CTAB IN TAB.
           MOVE FIO-GET-KEY         TO FIO-CMND.
           PERFORM GNS-FIO-TAB.
           IF FIO-STAT-OKS
               IF TAB-IND-VIGE IN TAB = 'N'
                   MOVE 'COD    NVG'        TO DIM-STAT
                   GO TO FIN-OBT-CIC-PIZ
               ELSE
                   MOVE TAB-CIC-CTAB IN TAB TO DIM-CIC-CONC
           ELSE
               MOVE 'COD    NEX'            TO DIM-STAT
               GO TO FIN-OBT-CIC-PIZ.
           MOVE 'CBZ'                       TO TAB-COD-SIST FIO-SIST.
           MOVE 'DCP'                       TO TAB-COD-TTAB IN TAB.
           MOVE PIZ-COD-SUBC IN PIZ (DIM-I) TO TAB-COD-CTAB IN TAB.
           MOVE FIO-GET-KEY         TO FIO-CMND.
           PERFORM GNS-FIO-TAB.
           IF FIO-STAT-OKS
               IF TAB-IND-VIGE IN TAB = 'N'
                   MOVE 'COD    NVG'        TO DIM-STAT
                   GO TO FIN-OBT-CIC-PIZ
               ELSE
                   MOVE TAB-CIC-CTAB IN TAB TO DIM-CIC-SUBC
           ELSE
               MOVE 'COD    NEX'            TO DIM-STAT
               GO TO FIN-OBT-CIC-PIZ.
       FIN-OBT-CIC-PIZ.
           EXIT.

       OBT-PLAN-COMI SECTION.
       INI-OBT-PLAN-COMI.
           MOVE SPACES TO DCO-STAT DCO-MENS. 
           IF OPZ-COD-PLCO IN OPZ-FLD NOT > SPACES
               MOVE SPACES TO PCZ
               GO TO FIN-OBT-PLAN-COMI.
      *HZF-INI 12-DEC-1996
           PERFORM OBT-CIC-ICLI.
           MOVE RDZ-CIC-ICLI IN RDZ TO CCO-CIC-ICLI.
      *HZF-FIN 12-DEC-1996
       LUP-OBT-PLAN-COMI.
           MOVE OPZ-COD-OFOC IN OPZ-FLD TO WSS-TIP-OFIC IN WSS-VARI.
           PERFORM BUS-REG-PCZ.
           IF PCZ-KEY-IPCP IN PCZ NOT > SPACES
               MOVE '*' TO WSS-TIP-OFIC IN WSS-VARI
               PERFORM BUS-REG-PCZ.
           IF PCZ-KEY-IPCP IN PCZ NOT > SPACES AND WSS-TIP-PROC = 'NEG'
               MOVE 'CUR' TO WSS-TIP-PROC
               GO TO LUP-OBT-PLAN-COMI.

      *HZF-INI 12-DEC-1996
           IF PCZ-KEY-IPCP IN PCZ NOT > SPACES AND
              CCO-IIC-ICLI NOT = ZEROES AND
              WSS-TIP-PROC NOT = 'CAN'
              MOVE SPACES TO CCO-CAI-ICLI
              MOVE ZEROES TO CCO-IIC-ICLI
              IF OPZ-IND-RENO IN OPZ-FLD NOT = SPACES
                  MOVE 'NEG' TO WSS-TIP-PROC
                  GO TO LUP-OBT-PLAN-COMI
              ELSE
                  GO TO LUP-OBT-PLAN-COMI.
      *HZF-FIN 12-DEC-1996
       FIN-OBT-PLAN-COMI.
           EXIT.
      *HZF-INI 12-DEC-1996
       OBT-CIC-ICLI SECTION.
       INI-OBT-CIC-ICLI.
           MOVE OPZ-CAI-IOPC IN OPZ TO RDZ-CAI-IOPC IN RDZ.
           MOVE OPZ-IIC-IOPC IN OPZ TO RDZ-IIC-IOPC IN RDZ.
           MOVE ZEROES              TO RDZ-NUM-IDLC IN RDZ.
           MOVE 'RDZ-KEY-IDLC' TO FIO-AKEY.
           MOVE FIO-GET-NLS TO FIO-CMND.
           PERFORM CBZ-FIO-RDZ.
           IF FIO-STAT-OKS AND
              RDZ-CAI-IOPC IN RDZ = OPZ-CAI-IOPC IN OPZ AND
              RDZ-IIC-IOPC IN RDZ = OPZ-IIC-IOPC IN OPZ AND
              RDZ-NUM-IDLC IN RDZ = ZEROS
               NEXT SENTENCE
           ELSE
               MOVE SPACES TO RDZ-CAI-ICLI IN RDZ
               MOVE ZEROES TO RDZ-CIC-ICLI IN RDZ. 
      *
       FIN-OBT-CIC-ICLI.
           EXIT.
      *HZF-FIN 12-DEC-1996

       BUS-REG-PCZ SECTION.
       INI-BUS-REG-PCZ.
           MOVE OPZ-COD-PLCO IN OPZ-FLD  TO PCZ-COD-PLAN IN PCZ.
      *HZF-INI 12-DEC-1996 
           MOVE CCO-CIC-ICLI             TO PCZ-CIC-ICLI IN PCZ.
      *HZF-FIN 12-DEC-1996 
           MOVE WSS-TIP-PROC IN WSS-VARI TO PCZ-COD-EVEN IN PCZ.
           MOVE WSS-TIP-OFIC IN WSS-VARI TO PCZ-COD-OFIC IN PCZ.
           MOVE OPZ-NUM-DCOL IN OPZ-FLD  TO PCZ-NUM-DPLA IN PCZ.
           MOVE OPZ-NUM-MCOL IN OPZ-FLD  TO PCZ-NUM-MPLA IN PCZ.
           MOVE OPZ-NUM-SCOL IN OPZ-FLD  TO PCZ-NUM-SPLA IN PCZ.
           MOVE OPZ-NUM-ACOL IN OPZ-FLD  TO PCZ-NUM-APLA IN PCZ.
           MOVE FIO-GET-LEQ TO FIO-CMND.
       LUP-BUS-REG-PCZ.
           PERFORM CBZ-FIO-PCZ.
           IF FIO-STAT-OKS AND
              PCZ-COD-PLAN IN PCZ = OPZ-COD-PLCO IN OPZ-FLD AND
              PCZ-COD-EVEN IN PCZ = WSS-TIP-PROC IN WSS-VARI AND
      *HZF-INI 12-DEC-1996
              PCZ-CIC-ICLI IN PCZ = CCO-CIC-ICLI AND
      *HZF-FIN 12-DEC-1996
              PCZ-COD-OFIC IN PCZ = WSS-TIP-OFIC IN WSS-VARI
               IF PCZ-IND-VIGE IN PCZ = 'N'
                   MOVE FIO-GET-PRV TO FIO-CMND
                   GO TO LUP-BUS-REG-PCZ
               ELSE
                   NEXT SENTENCE
           ELSE
               MOVE SPACES TO PCZ.
       FIN-BUS-REG-PCZ.
           EXIT.
       OBT-PLAN-IMPU SECTION.
       INI-OBT-PLAN-IMPU.
           MOVE SPACES                   TO DIM-STAT DIM-MENS. 
           MOVE ZEROES                   TO WSS-VAL-IMPU IN WSS-VARI.
           IF  OPZ-COD-PLIM IN OPZ-FLD   NOT > SPACES
               MOVE SPACES               TO PIZ
               GO TO FIN-OBT-PLAN-IMPU.
           MOVE OPZ-COD-PLIM IN OPZ-FLD  TO PIZ-COD-PLAN IN PIZ.
           MOVE 'CUR'                    TO PIZ-COD-EVEN IN PIZ.
           MOVE OPZ-COD-OFOC IN OPZ-FLD  TO PIZ-COD-OFIC IN PIZ.
           MOVE OPZ-NUM-SCOL IN OPZ-FLD  TO PIZ-NUM-SPLA IN PIZ.
           MOVE OPZ-NUM-ACOL IN OPZ-FLD  TO PIZ-NUM-APLA IN PIZ.
           MOVE OPZ-NUM-MCOL IN OPZ-FLD  TO PIZ-NUM-MPLA IN PIZ.
           MOVE OPZ-NUM-DCOL IN OPZ-FLD  TO PIZ-NUM-DPLA IN PIZ.
           MOVE FIO-GET-LEQ              TO FIO-CMND.
       LUP-OBT-PLAN-IMPU.
           PERFORM CBZ-FIO-PIZ.
           IF NOT (FIO-STAT-OKS AND
              OPZ-COD-PLIM IN OPZ-FLD = PIZ-COD-PLAN IN PIZ)
              MOVE SPACES TO PIZ
              MOVE OPZ-COD-PLIM IN OPZ-FLD  TO PIZ-COD-PLAN IN PIZ
              MOVE FIO-GET-NLS           TO FIO-CMND
              PERFORM CBZ-FIO-PIZ
              IF NOT (FIO-STAT-OKS AND
                 OPZ-COD-PLIM IN OPZ-FLD = PIZ-COD-PLAN IN PIZ)
                 MOVE 'PIZCOMIPLANX'          TO DIM-STAT
                 MOVE OPZ-COD-PLIM IN OPZ-FLD TO DIM-MENS
                 GO TO FIN-OBT-PLAN-IMPU.
           IF NOT  PIZ-COD-EVEN IN PIZ = 'CUR' OR
              PIZ-FEC-FPLA IN PIZ > OPZ-FEC-FCOL IN OPZ
              MOVE SPACES                TO PIZ
              GO TO FIN-OBT-PLAN-IMPU.
           IF NOT (OPZ-COD-OFOC IN OPZ-FLD = PIZ-COD-OFIC IN PIZ OR
              PIZ-COD-OFIC IN PIZ = '*  ')
              MOVE OPZ-NUM-SCOL IN OPZ-FLD TO PIZ-NUM-SPLA IN PIZ
              MOVE OPZ-NUM-ACOL IN OPZ-FLD TO PIZ-NUM-APLA IN PIZ
              MOVE OPZ-NUM-MCOL IN OPZ-FLD TO PIZ-NUM-MPLA IN PIZ
              MOVE OPZ-NUM-DCOL IN OPZ-FLD TO PIZ-NUM-DPLA IN PIZ
              MOVE '*  '         TO PIZ-COD-OFIC IN PIZ 
              GO TO LUP-OBT-PLAN-IMPU.
           IF PIZ-IND-VIGE IN PIZ = 'N'
              MOVE FIO-GET-PRV           TO FIO-CMND
              GO TO LUP-OBT-PLAN-IMPU.
       FIN-OBT-PLAN-IMPU.
           EXIT.
       OBT-VIMP-GNOT SECTION.
       INI-OBT-VIMP-GNOT.
           MOVE OPZ-SGV-VCOM IN OPZ-FLD TO WSS-SGV-VCOM IN WSS-VARI.
           MOVE ZEROES TO OPZ-SGV-VCOM IN OPZ-FLD.
           MOVE 0 TO WSS-VAL-IMPU IN WSS-VARI.
           MOVE 0 TO WSS-VAL-GNOT IN WSS-VARI.

      *     IF SCR-CIC-OPEC = 'D'
               MOVE 'N' TO WSS-INTR.
       
      *     ELSE
      *         MOVE 'S' TO WSS-INTR.

           MOVE OPZ-CAI-IOPC IN OPZ-FLD TO UVD-CAI-IOPC IN UVD.
           MOVE OPZ-IIC-IOPC IN OPZ-FLD TO UVD-IIC-IOPC IN UVD.
           PERFORM BUS-UVD.
           IF MSG-COD-MENS > SPACES
               GO TO FIN-OBT-VIMP-GNOT.
           PERFORM REC-PIZ-IDL VARYING DIM-I FROM 1
                               BY 1
                               UNTIL ( DIM-I > DIM-MAX
                               OR    DIM-CIC-IMPU IN DIM-VARI = 'IMP'
                               OR    PIZ-COD-IMPU IN PIZ (DIM-I)
                                                     NOT > SPACES
                               OR  DIM-STAT > SPACES).
            IF DIM-STAT  >  SPACES
               MOVE DIM-STAT                TO MSG-COD-MENS
               GO TO FIN-OBT-VIMP-GNOT.
           
           MOVE ZEROES          TO      WSS-VAL-PORT IN WSS-VARI.
           MOVE ZEROES TO WSS-FEC-FMAV IN WSS-VARI.
           MOVE OPZ-CAI-IOPC IN OPZ-FLD TO DLZ-CAI-IOPC IN DLZ.
           MOVE OPZ-IIC-IOPC IN OPZ-FLD TO DLZ-IIC-IOPC IN DLZ.
           MOVE 0                       TO DLZ-NUM-IDLC IN DLZ.
           MOVE FIO-GET-NLS TO FIO-CMND.
       LUP-OBT-VIMP-GNOT.
           PERFORM CBZ-FIO-DLZ.
           IF NOT ( FIO-STAT-OKS AND
                    DLZ-CAI-IOPC IN DLZ = OPZ-CAI-IOPC IN OPZ-FLD AND
                    DLZ-IIC-IOPC IN DLZ = OPZ-IIC-IOPC IN OPZ-FLD )
               GO TO FIN-OBT-VIMP-GNOT.
           IF  (DLZ-MSC-STAT IN DLZ = 'R' OR 'C')
               MOVE FIO-GET-NXT  TO FIO-CMND
               GO TO LUP-OBT-VIMP-GNOT.
           
           MOVE OPZ-COD-TOOC IN OPZ-FLD TO OPZ-COD-TOOC IN OPZ.
           MOVE OPZ-COD-AOOC IN OPZ-FLD TO OPZ-COD-AOOC IN OPZ.
           PERFORM OBT-PORT.
           PERFORM COZ-TRF.
           PERFORM OBT-GNOT.
           IF NOT (DIM-CIC-IMPU IN DIM-VARI = 'IMP')
                  GO TO CON-OBT-VIMP-GNOT.
           MOVE 'CBZ'               TO MSC-COD-SIST FIO-SIST.
           MOVE 'TIMP'              TO MSC-COD-TMSC IN MSC.
           MOVE DLZ-MSC-TIMP IN DLZ TO MSC-COD-CMSC IN MSC.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM GNS-FIO-MSC.
           IF NOT FIO-STAT-OKS
               MOVE 'DLZTIMPNEX'        TO MSG-COD-MENS
               MOVE MSC-COD-TABL IN MSC TO FRM-MEN2
               GO TO FIN-OBT-VIMP-GNOT.
           MOVE MSC-CIC-MSCL IN MSC TO WSS-CIC-IMPU.

           MOVE DLZ-COD-TDOC IN DLZ TO IMZ-COD-TDOC IN IMZ.
           MOVE DLZ-MSC-TIMP IN DLZ TO IMZ-MSC-TIMP IN IMZ.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM CBZ-FIO-IMZ.
           IF NOT FIO-STAT-OKS
               MOVE 'IMP    NEX' TO MSG-COD-MENS
               MOVE IMZ-COD-TABL IN IMZ TO FRM-MEN2
               MOVE FIO-BCK-OUT TO FIO-CMND
               PERFORM CBZ-FIO-OPZ
               GO TO FIN-OBT-VIMP-GNOT.

           IF DLZ-NUM-IDLC IN DLZ > UVD-IMAX IN UVD
               MOVE 'DLZFVENNODET'      TO MSG-COD-MENS
               MOVE DLZ-KEY-IDLC IN DLZ TO FRM-MEN2
               MOVE FIO-BCK-OUT TO FIO-CMND
               PERFORM CBZ-FIO-OPZ
               GO TO FIN-OBT-VIMP-GNOT.
           IF OPZ-IND-AFER IN OPZ-FLD = 'N'
               GO TO DFD-OBT-VIMP-GNOT.
           MOVE DLZ-NUM-DVEN IN UVD(DLZ-NUM-IDLC IN DLZ) TO FEC-ITM1.
           MOVE DLZ-NUM-MVEN IN UVD(DLZ-NUM-IDLC IN DLZ) TO FEC-ITM2.
           MOVE DLZ-NUM-SVEN IN UVD(DLZ-NUM-IDLC IN DLZ) TO FEC-ITM3.
           MOVE DLZ-NUM-AVEN IN UVD(DLZ-NUM-IDLC IN DLZ) TO FEC-ITM4.
           MOVE FEC-VHBL-S   TO FEC-VHBL.
           MOVE FEC-FBLK-N   TO FEC-FBLK.
           MOVE FEC-CHOY-N   TO FEC-CHOY.
           MOVE FEC-FORM-FEC TO FEC-FORM.
           MOVE FEC-VAL-FEC  TO FEC-CMND.
           PERFORM PRO-FEC.
           IF ( NOT FEC-STAT-OKS ) AND ( NOT FEC-STAT-FER )
               MOVE 'LIQDDIAIMPU' TO MSG-COD-MENS
               MOVE FIO-BCK-OUT   TO FIO-CMND
               PERFORM CBZ-FIO-OPZ
               GO TO FIN-OBT-VIMP-GNOT.
           IF FEC-STAT-FER
               MOVE FEC-SIG-HBL TO FEC-CMND
               PERFORM CAL-FEC
               IF NOT FEC-STAT-OKS
                   MOVE 'LIQSHBLIMPU' TO MSG-COD-MENS
                   MOVE FIO-BCK-OUT TO FIO-CMND
                   PERFORM CBZ-FIO-OPZ
                   GO TO FIN-OBT-VIMP-GNOT.
           MOVE FEC-ITM1 TO DLZ-NUM-DVEN IN UVD(DLZ-NUM-IDLC IN DLZ).
           MOVE FEC-ITM2 TO DLZ-NUM-MVEN IN UVD(DLZ-NUM-IDLC IN DLZ).
           MOVE FEC-ITM3 TO DLZ-NUM-SVEN IN UVD(DLZ-NUM-IDLC IN DLZ).
           MOVE FEC-ITM4 TO DLZ-NUM-AVEN IN UVD(DLZ-NUM-IDLC IN DLZ).
       DFD-OBT-VIMP-GNOT.
           MOVE OPZ-FEC-FCOL IN OPZ-FLD                  TO FEC-FEC1.
           MOVE DLZ-NUM-DVEN IN UVD(DLZ-NUM-IDLC IN DLZ) TO FEC-DEC2.
           MOVE DLZ-NUM-MVEN IN UVD(DLZ-NUM-IDLC IN DLZ) TO FEC-MEC2.
           MOVE DLZ-NUM-SVEN IN UVD(DLZ-NUM-IDLC IN DLZ) TO FEC-SEC2.
           MOVE DLZ-NUM-AVEN IN UVD(DLZ-NUM-IDLC IN DLZ) TO FEC-AEC2.

           MOVE FEC-FORM-FEC TO FEC-FORM.
           MOVE FEC-DIF-MES  TO FEC-CMND.
           PERFORM CAL-FEC.
           IF NOT FEC-STAT-OKS
               MOVE FIO-BCK-OUT TO FIO-CMND
               PERFORM CBZ-FIO-OPZ
               GO TO FIN-OBT-VIMP-GNOT.
           IF FEC-NDIA > 0
               ADD 1 TO FEC-NMES.

           IF WSS-CIC-IMPU = 'I'
               GO TO CON-OBT-VIMP-GNOT.

           MULTIPLY IMZ-VAL-TIMP IN IMZ BY FEC-NMES
               GIVING WSS-AUX-IMPU IN WSS-VARI.
           IF WSS-AUX-IMPU IN WSS-VARI > IMZ-VAL-TOPE IN IMZ
               MOVE IMZ-VAL-TOPE IN IMZ TO WSS-AUX-IMPU IN WSS-VARI.
           IF WSS-IND-TMON IN WSS-VARI = WSS-IND-TMMN IN WSS-VARI
               MULTIPLY CAM-SGV-VCAM IN CAM BY DLZ-VAL-NDLC IN
                        DLZ GIVING WSS-VAL-NDLC IN WSS-VARI
           ELSE
               MOVE DLZ-VAL-NDLC IN DLZ TO WSS-VAL-NDLC IN WSS-VARI.
           MULTIPLY WSS-AUX-IMPU IN WSS-VARI BY WSS-VAL-NDLC IN WSS-VARI
               GIVING WSS-AUX-IMPU IN WSS-VARI.

           DIVIDE WSS-AUX-IMPU IN WSS-VARI BY 100
               GIVING WSS-AUX-IMPU IN WSS-VARI.
           MOVE OPZ-COD-VCOC IN OPZ-FLD  TO PES-COD-VCAM IN PES-VARI.
           MOVE WSS-AUX-IMPU IN WSS-VARI TO PES-SGV-DECI IN PES-VARI.
           PERFORM PES-SCTV.
           MOVE PES-SGV-ENTE IN PES-VARI TO WSS-AUX-IMPU IN WSS-VARI.

       CON-OBT-VIMP-GNOT.

           MOVE FIO-GET-KEY-UPD TO FIO-CMND.
           PERFORM CBZ-FIO-DLZ.
           IF NOT FIO-STAT-OKS
               MOVE 'DLZ    NGKUP' TO MSG-COD-MENS
               MOVE DLZ-KEY-IDLC IN DLZ TO FRM-MEN2
               MOVE FIO-BCK-OUT TO FIO-CMND
               PERFORM CBZ-FIO-OPZ
               GO TO FIN-OBT-VIMP-GNOT.

           IF DIM-CIC-CONC IN DIM-VARI = 'IMP'
              IF WSS-CIC-IMPU NOT = 'I'
                 MOVE WSS-AUX-IMPU IN WSS-VARI TO DLZ-VAL-IMPU IN DLZ
                 ADD DLZ-VAL-IMPU IN DLZ TO WSS-VAL-IMPU
              ELSE
                 ADD DLZ-VAL-IMPU IN DLZ TO WSS-VAL-IMPU.

           IF WSS-INTR = 'S'
               MOVE NTZ-VAL-GNOT IN NTZ  TO DLZ-VAL-GNOT IN DLZ
           ELSE
               MOVE ZEROES               TO DLZ-VAL-GNOT IN DLZ.
           MOVE DLZ-FEC-FVEN IN UVD(DLZ-NUM-IDLC IN DLZ) TO
                DLZ-FEC-FMAV IN DLZ.
           IF OPZ-IND-AFER IN OPZ-FLD NOT = 'N'
              MOVE DLZ-NUM-DMAV IN DLZ TO FEC-ITM1
              MOVE DLZ-NUM-MMAV IN DLZ TO FEC-ITM2
              MOVE DLZ-NUM-SMAV IN DLZ TO FEC-ITM3
              MOVE DLZ-NUM-AMAV IN DLZ TO FEC-ITM4
              PERFORM ANL-FRDO
              IF MSG-COD-MENS NOT > SPACES
                 MOVE FEC-ITM1 TO DLZ-NUM-DMAV IN DLZ
                 MOVE FEC-ITM2 TO DLZ-NUM-MMAV IN DLZ
                 MOVE FEC-ITM3 TO DLZ-NUM-SMAV IN DLZ
                 MOVE FEC-ITM4 TO DLZ-NUM-AMAV IN DLZ
              ELSE
                 GO TO FIN-OBT-VIMP-GNOT.
           IF DLZ-FEC-FMAV IN DLZ > WSS-FEC-FMAV IN WSS-VARI
              MOVE DLZ-FEC-FMAV IN DLZ TO WSS-FEC-FMAV IN WSS-VARI
              MOVE DLZ-NUM-SMAV IN DLZ TO OPZ-NUM-SMAV IN OPZ-FLD
              MOVE DLZ-NUM-AMAV IN DLZ TO OPZ-NUM-AMAV IN OPZ-FLD
              MOVE DLZ-NUM-MMAV IN DLZ TO OPZ-NUM-MMAV IN OPZ-FLD
              MOVE DLZ-NUM-DMAV IN DLZ TO OPZ-NUM-DMAV IN OPZ-FLD.

           MOVE OPZ-NUM-DCOL IN OPZ-FLD TO DLZ-NUM-DDEV IN DLZ.
           MOVE OPZ-NUM-MCOL IN OPZ-FLD TO DLZ-NUM-MDEV IN DLZ.
           MOVE OPZ-NUM-SCOL IN OPZ-FLD TO DLZ-NUM-SDEV IN DLZ.
           MOVE OPZ-NUM-ACOL IN OPZ-FLD TO DLZ-NUM-ADEV IN DLZ.

           MOVE FIO-MOD TO FIO-CMND.
           PERFORM CBZ-FIO-DLZ.
           IF NOT FIO-STAT-OKS
               MOVE 'DLZ    NOUPD' TO MSG-COD-MENS
               MOVE DLZ-KEY-IDLC IN DLZ TO FRM-MEN2
               MOVE FIO-BCK-OUT TO FIO-CMND
               PERFORM CBZ-FIO-OPZ
               GO TO FIN-OBT-VIMP-GNOT.

           ADD 1 TO DLZ-NUM-IDLC IN DLZ.
           MOVE FIO-GET-NLS TO FIO-CMND.
           GO TO LUP-OBT-VIMP-GNOT.
       FIN-OBT-VIMP-GNOT.
           EXIT.
       SUM-DIAS-CALC SECTION.
       INI-SUM-DIAS-CALC.
           MOVE DLZ-NUM-DVEN IN UVD(DLZ-NUM-IDLC IN DLZ) TO FEC-ITM1.
           MOVE DLZ-NUM-MVEN IN UVD(DLZ-NUM-IDLC IN DLZ) TO FEC-ITM2.
           MOVE DLZ-NUM-SVEN IN UVD(DLZ-NUM-IDLC IN DLZ) TO FEC-ITM3.
           MOVE DLZ-NUM-AVEN IN UVD(DLZ-NUM-IDLC IN DLZ) TO FEC-ITM4.
           MOVE FEC-FORM-FEC TO FEC-FORM.
           MOVE FEC-SUM-DIA  TO FEC-CMND.
           MOVE 15           TO FEC-NDIA.
           PERFORM CAL-FEC.
           MOVE FEC-ITM1 TO DLZ-NUM-DVEN IN UVD(DLZ-NUM-IDLC IN DLZ).
           MOVE FEC-ITM2 TO DLZ-NUM-MVEN IN UVD(DLZ-NUM-IDLC IN DLZ).
           MOVE FEC-ITM3 TO DLZ-NUM-SVEN IN UVD(DLZ-NUM-IDLC IN DLZ).
           MOVE FEC-ITM4 TO DLZ-NUM-AVEN IN UVD(DLZ-NUM-IDLC IN DLZ).
       FIN-SUM-DIAS-CALC.
           EXIT.
       OBT-GNOT SECTION.
       INI-OBT-GNOT.
           IF WSS-INTR = 'S' AND DLZ-COD-NOTC IN DLZ > SPACES
               MOVE DLZ-COD-NOTC IN DLZ TO NTZ-COD-NOTA IN NTZ
               MOVE OPZ-COD-OFOC IN OPZ TO NTZ-COD-OFIC IN NTZ
               MOVE DLZ-COD-TDOC IN DLZ TO NTZ-COD-TDOC IN NTZ
               MOVE FIO-GET-KEY TO FIO-CMND
               PERFORM CBZ-FIO-NTZ
               IF NOT FIO-STAT-OKS
                   MOVE 'NTZ    NEX' TO MSG-COD-MENS
                   MOVE NTZ-COD-TABL IN NTZ TO FRM-MEN2
                   MOVE FIO-BCK-OUT TO FIO-CMND
                   PERFORM CBZ-FIO-OPZ
                   GO TO FIN-OBT-GNOT
               ELSE
                   ADD NTZ-VAL-GNOT IN NTZ TO WSS-VAL-GNOT IN WSS-VARI
           ELSE
               MOVE 0 TO NTZ-VAL-GNOT IN NTZ.
       FIN-OBT-GNOT.
           EXIT.
       OBT-PORT SECTION.
       INI-OBT-PORT.
           IF DLZ-IND-PORD IN DLZ = 'S'
              MOVE OPZ-NUM-SCOL IN OPZ-FLD TO CAM-SVCA
              MOVE OPZ-NUM-ACOL IN OPZ-FLD TO CAM-AVCA
              MOVE OPZ-NUM-MCOL IN OPZ-FLD TO CAM-MVCA
              MOVE OPZ-NUM-DCOL IN OPZ-FLD TO CAM-DVCA
              MOVE 'MPORTE'                TO CAM-CVCA IN CAM-VARI(1)
              MOVE OPZ-COD-VCOC IN OPZ-FLD TO CAM-CVCA IN CAM-VARI(2)
              PERFORM TAB-BUS-CVG
              IF MSG-COD-MENS > SPACES
                 MOVE 'CAMPORTENEX' TO MSG-COD-MENS
                 MOVE FRM-SUAR-MAL TO FRM-SUAR
                 GO TO FIN-OBT-PORT
              ELSE
                 ADD CAM-SGV-VCAM IN CAM TO WSS-VAL-PORT IN WSS-VARI.
       FIN-OBT-PORT.
           EXIT.
       COZ-TRF SECTION.
       INI-COZ-TRF.
           MOVE ZEROES  TO  WSS-CAL-COM-TRF IN WSS-VARI.
           IF DLZ-VAL-CTRA IN DLZ > ZEROES 
              PERFORM REC-PCZ-TRF VARYING DCO-I FROM 1
                                 BY 1
                                 UNTIL ( DCO-I > DCO-MAX
                                 OR PCZ-COD-COMI IN PCZ (DCO-I)
                                                    NOT > SPACES
                                 OR  DCO-STAT > SPACES)
              IF NOT CAL-COM-TRF
                     MOVE 'COMTRFONOV' TO MSG-COD-MENS
                     MOVE FRM-SUAR-MAL TO FRM-SUAR.
       FIN-COZ-TRF.
           EXIT.
       REC-PCZ-TRF SECTION.
       INI-REC-PCZ-TRF.
           MOVE 'CBZ'                       TO TAB-COD-SIST FIO-SIST.
           MOVE 'CMS'                       TO TAB-COD-TTAB IN TAB.
           MOVE PCZ-COD-COMI IN PCZ (DCO-I) TO TAB-COD-CTAB IN TAB.
           MOVE FIO-GET-KEY         TO FIO-CMND.
           PERFORM GNS-FIO-TAB.
           IF FIO-STAT-OKS
               IF TAB-IND-VIGE IN TAB = 'N'
                   GO TO FIN-REC-PCZ-TRF
               ELSE
                   MOVE TAB-CIC-CTAB IN TAB TO DCO-CIC-COMI
           ELSE
               MOVE 'COD    NEX'            TO DCO-STAT
               GO TO FIN-REC-PCZ-TRF.
           IF NOT ( DCO-CIC-COMI IN DCO-VARI = 'TRF' AND
                    NOT CAL-COM-TRF )
              GO TO FIN-REC-PCZ-TRF.
           MOVE 'CBZ'                       TO TAB-COD-SIST FIO-SIST.
           MOVE 'CPT'                       TO TAB-COD-TTAB IN TAB.
           MOVE PCZ-COD-CONC IN PCZ (DCO-I) TO TAB-COD-CTAB IN TAB.
           MOVE FIO-GET-KEY         TO FIO-CMND.
           PERFORM GNS-FIO-TAB.
           IF FIO-STAT-OKS
               IF TAB-IND-VIGE IN TAB = 'N'
                   MOVE 'COD    NVG'        TO DCO-STAT
                   GO TO FIN-REC-PCZ-TRF
               ELSE
                   MOVE TAB-CIC-CTAB IN TAB TO DCO-CIC-CONC
           ELSE
               MOVE 'COD    NEX'            TO DCO-STAT
               GO TO FIN-REC-PCZ-TRF.
           IF NOT ( DCO-CIC-CONC IN DCO-VARI = 'DOC' )
              GO TO FIN-REC-PCZ-TRF.
           MOVE PCZ-SGV-TIMP IN PCZ (DCO-I) TO WSS-VAL-CTRA  IN WSS-VARI
           MOVE DLZ-VAL-CTRA IN DLZ TO PCZ-SGV-TIMP IN PCZ (DCO-I) 
           MOVE DLZ-VAL-SDLC IN DLZ TO DCO-VAL-CALC IN DCO-VARI
           PERFORM COZ-VAL-ALL.
           IF WSS-COM-CAL IN WSS-VARI > 0
              MOVE  1               TO WSS-CAL-COM-TRF.
       FIN-REC-PCZ-TRF.
           EXIT.
       VRF-ROPZ SECTION.
       INI-VRF-ROPZ.
           MOVE OPZ-COD-TOOC IN OPZ-FLD TO WSS-TIO-PADL.
           MOVE OPZ-COD-AOOC IN OPZ-FLD TO WSS-AUX-PADL.
           MOVE 'UNACTA'                TO WSS-GLS-PADL.
           MOVE 'CBZ'        TO FIO-SIST.
           MOVE 'VSN'        TO TAB-COD-TTAB IN TAB.
           MOVE WSS-KEY-PADL TO TAB-COD-CTAB IN TAB.
           MOVE FIO-GET-KEY  TO FIO-CMND.
           PERFORM GNS-FIO-TAB.
           IF FIO-STAT-OKS AND TAB-MSC-STAT IN TAB = 'S'
               PERFORM VAL-PTM-ADL
               IF MSG-COD-MENS > SPACES
                   MOVE 'CBZ'        TO MSG-COD-SIST
                   PERFORM GET-MSG
                   MOVE MSG-GLS-DESC TO FRM-MEN1
                   MOVE FRM-SUAR-MAL TO FRM-SUAR
                   GO TO FIN-VRF-ROPZ.
            PERFORM KEY-OPZ-OPZ.
            MOVE FIO-GET-KEY     TO FIO-CMND.
            PERFORM CBZ-FIO-OPZ.
            IF NOT FIO-STAT-OKS
                MOVE 'OPZ    NOUPD' TO MSG-COD-MENS
                MOVE OPZ-KEY-IOPC IN OPZ TO FRM-MEN2
                MOVE FIO-BCK-OUT TO FIO-CMND
                PERFORM CBZ-FIO-OPZ
                MOVE FRM-SUAR-MAL TO FRM-SUAR
                GO TO FIN-VRF-ROPZ.
           MOVE FRM-SUAR-OKS TO FRM-SUAR.
           PERFORM CHK-VOPZ.
           IF FRM-SUAR =  FRM-SUAR-MAL
               GO TO FIN-VRF-ROPZ.
           PERFORM PRO-DLZ.
           IF FRM-SUAR =  FRM-SUAR-MAL
               GO TO FIN-VRF-ROPZ.
           PERFORM PRO-RDZ.
           IF FRM-SUAR =  FRM-SUAR-MAL
               GO TO FIN-VRF-ROPZ.
           PERFORM PRO-CYZ.
           IF FRM-SUAR =  FRM-SUAR-MAL
               GO TO FIN-VRF-ROPZ.
           IF POZ-COD-COTO IN POZ NOT = 'LAC' AND
              OPZ-IND-RENO IN OPZ-FLD > SPACES AND
              WSS-OPC-LNBT > SPACES
               MOVE 'CBZ'          TO MSG-COD-SIST
               MOVE 'OPZPRGACCTNO' TO MSG-COD-MENS
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS
               MOVE FRM-SUAR-MAL TO FRM-SUAR
               GO TO FIN-VRF-ROPZ.
           PERFORM PRO-ROZ.
           IF FRM-SUAR =  FRM-SUAR-MAL
                GO TO FIN-VRF-ROPZ.
           PERFORM PRO-RCO.
           IF FRM-SUAR =  FRM-SUAR-MAL
                GO TO FIN-VRF-ROPZ.
           PERFORM ULT-VEZ.
           IF FRM-SUAR =  FRM-SUAR-MAL
               GO TO FIN-VRF-ROPZ
           ELSE
               MOVE OPZ-NUM-VCVG IN OPZ TO OPZ-NUM-VCVG IN OPZ-FLD.
       FIN-VRF-ROPZ.
           EXIT.

       VAL-PTM-ADL SECTION.
       INI-VAL-PTM-ADL.
           MOVE SPACES TO MSG-COD-MENS.
           MOVE SPACES                  TO RCO-CIC-ICLI IN RCO.
           MOVE AUZ-CAI-ICYA IN OPZ-FLD TO RCO-CAI-IOPE IN RCO.
           MOVE AUZ-IIC-ICYA IN OPZ-FLD TO RCO-IIC-IOPE IN RCO.
           MOVE 'RCO-KEY-IOPE' TO FIO-AKEY.
           MOVE FIO-GET-NLS    TO FIO-CMND.
       LUP-VAL-PTM-ADL.
           PERFORM SGC-FIO-RCO.
           IF NOT ( FIO-STAT-OKS AND
                    RCO-CAI-IOPE IN RCO = AUZ-CAI-ICYA IN OPZ-FLD AND
                    RCO-IIC-IOPE IN RCO = AUZ-IIC-ICYA IN OPZ-FLD )
               GO TO FIN-VAL-PTM-ADL.
           IF NOT ( RCO-COD-STAT IN RCO = 'VIG' OR
                    RCO-COD-STAT IN RCO NOT > SPACES )
               GO TO NXT-VAL-PTM-ADL.
           MOVE RCO-CIC-ICLI IN RCO TO RDZ-CIC-ICLI IN RDZ.
           MOVE SPACES              TO RDZ-CIC-IOPC IN RDZ.
           MOVE ZEROES              TO RDZ-NUM-IDLC IN RDZ.
           MOVE FIO-GET-NLS TO FIO-CMND.
       LUP-RDZ.
           PERFORM CBZ-FIO-RDZ.
           IF NOT ( FIO-STAT-OKS AND
                    RDZ-CIC-ICLI IN RDZ = RCO-CIC-ICLI IN RCO )
               GO TO NXT-VAL-PTM-ADL.
           IF RDZ-NUM-IDLC IN RDZ NOT = ZEROES
               MOVE FIO-GET-NXT TO FIO-CMND
               GO TO LUP-RDZ.
           MOVE RDZ-CAI-IOPC IN RDZ TO OPZ-CAI-IOPC IN OPZ.
           MOVE RDZ-IIC-IOPC IN RDZ TO OPZ-IIC-IOPC IN OPZ.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM CBZ-FIO-OPZ.
           IF NOT ( FIO-STAT-OKS                                  AND
                    OPZ-COD-TOOC IN OPZ = OPZ-COD-TOOC IN OPZ-FLD AND
                    OPZ-COD-AOOC IN OPZ = OPZ-COD-AOOC IN OPZ-FLD AND
                    OPZ-VAL-SCRE IN OPZ > ZEROES )
               MOVE FIO-GET-NXT TO FIO-CMND
               GO TO LUP-RDZ.
           IF OPZ-CAI-IOPC IN OPZ = OPZ-CAI-IOPC IN OPZ-FLD AND
              OPZ-IIC-IOPC IN OPZ = OPZ-IIC-IOPC IN OPZ-FLD
               MOVE FIO-GET-NXT TO FIO-CMND
               GO TO LUP-RDZ.
           MOVE OPZ-CAI-IOPC IN OPZ TO AUZ-CAI-IOPC IN AUZ.
           MOVE OPZ-IIC-IOPC IN OPZ TO AUZ-IIC-IOPC IN AUZ.
           MOVE 'AUT'               TO AUZ-NUM-ICAN IN AUZ.
           MOVE 1                   TO AUZ-NUM-ICYA IN AUZ.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM CBZ-FIO-AUZ.
           IF NOT FIO-STAT-OKS
               MOVE FIO-GET-NXT TO FIO-CMND
               GO TO LUP-RDZ.
           IF AUZ-CAI-ICYA IN AUZ = AUZ-CAI-ICYA IN OPZ-FLD AND
              AUZ-IIC-ICYA IN AUZ = AUZ-IIC-ICYA IN OPZ-FLD
               MOVE 'AUZICYZ=PADL'      TO MSG-COD-MENS
               MOVE OPZ-CIC-IOPC IN OPZ TO FRM-MEN2
               GO TO FIN-VAL-PTM-ADL
           ELSE
               MOVE FIO-GET-NXT TO FIO-CMND
               GO TO LUP-RDZ.
       NXT-VAL-PTM-ADL.
           MOVE 'RCO-KEY-IOPE' TO FIO-AKEY.
           MOVE FIO-GET-NXT    TO FIO-CMND.
           GO TO LUP-VAL-PTM-ADL.
       FIN-VAL-PTM-ADL.
           EXIT.

       CHK-VOPZ SECTION.
       INI-CHK-VOPZ.
           MOVE SPACES TO FRM-MENS.
           MOVE 'S' TO WSS-EPOC.

           PERFORM KEY-OPZ-OPZ.

           MOVE ZEROES     TO WSS-FMIV.
           MOVE '99999999' TO WSS-FMAV.
           MOVE ZEROES TO WSS-NEEV.

           MOVE OPZ-COD-VCOC IN OPZ TO POZ-COD-VCOC IN POZ.
           MOVE OPZ-COD-TOOC IN OPZ TO POZ-COD-TOOC IN POZ.
           MOVE OPZ-COD-AOOC IN OPZ TO POZ-COD-AOOC IN POZ.
           MOVE ZEROES              TO POZ-NUM-IPOC IN POZ.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM CBZ-FIO-POZ.
           IF NOT FIO-STAT-OKS
               MOVE 'N' TO WSS-EPOC
           ELSE
           IF POZ-NUM-PMIN IN POZ NOT > ZEROES AND
              POZ-NUM-PMAX IN POZ NOT > ZEROES
               MOVE 'Z' TO WSS-EPOC.

           IF WSS-EPOC NOT = 'S'
               GO TO SK1-CHK-VOPZ.

           IF POZ-NUM-PMIN IN POZ > ZEROES
               MOVE POZ-IND-PMIN IN POZ TO WSS-USEP
               MOVE POZ-NUM-PMIN IN POZ TO WSS-VSEP
               PERFORM CAL-FECH
               IF MSG-COD-MENS > SPACES
                   GO TO ERR-CHK-VOPZ
               ELSE
                   MOVE FEC-ITM1 TO WSS-DMIV
                   MOVE FEC-ITM2 TO WSS-MMIV
                   MOVE FEC-ITM3 TO WSS-SMIV
                   MOVE FEC-ITM4 TO WSS-AMIV.

           IF POZ-NUM-PMAX IN POZ > ZEROES
               MOVE POZ-IND-PMAX IN POZ TO WSS-USEP
               MOVE POZ-NUM-PMAX IN POZ TO WSS-VSEP
               PERFORM CAL-FECH
               IF MSG-COD-MENS > SPACES
                   GO TO ERR-CHK-VOPZ
               ELSE
                   MOVE FEC-ITM1 TO WSS-DMAV
                   MOVE FEC-ITM2 TO WSS-MMAV
                   MOVE FEC-ITM3 TO WSS-SMAV
                   MOVE FEC-ITM4 TO WSS-AMAV.

           MOVE ZEROES TO WSS-FPPI WSS-FPPC.

       SK1-CHK-VOPZ.

           IF POZ-IND-CAUT IN POZ = 'S' OR 'C' OR 'A'
               IF AUZ-IIC-ICYA IN OPZ-FLD NOT > ZEROES
                   MOVE 'AUZICYZNBLKS' TO MSG-COD-MENS
                   GO TO ERR-CHK-VOPZ.

           MOVE ZEROES TO WSS-FUVC WSS-NEUV.
           MOVE 'N'    TO WSS-IVUV.
           PERFORM VEZ-CHK-VOPZ.
           IF MSG-COD-MENS > SPACES
               GO TO ERR-CHK-VOPZ.
           IF WSS-EPOC = 'S'
               IF WSS-NEEV = ZEROES
                   MOVE 'OPZFFINFMIN<' TO MSG-COD-MENS
                   GO TO ERR-CHK-VOPZ.

           IF WSS-ULTIMO-VENC-EN-ZERO
               MOVE 'OPZUVNCZERO=' TO MSG-COD-MENS
               MOVE WSS-NEUV TO FRM-MEN2
               GO TO ERR-CHK-VOPZ.

           GO TO FIN-CHK-VOPZ.
       ERR-CHK-VOPZ.
           IF FRM-MEN1 NOT > SPACES
               MOVE 'CBZ' TO MSG-COD-SIST
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MEN1.
           MOVE FRM-SUAR-MAL TO FRM-SUAR.
       FIN-CHK-VOPZ.
           EXIT.
       VEZ-CHK-VOPZ SECTION.
       INI-VEZ-CHK-VOPZ.
           MOVE ZEROES TO WSS-VAL-TVEN.
           MOVE SPACES TO WSS-IND-IVFI.
           MOVE SPACES TO MSG-COD-MENS.
           MOVE OPZ-CAI-IOPC IN OPZ TO VEZ-CAI-IOPC IN VEZ.
           MOVE OPZ-IIC-IOPC IN OPZ TO VEZ-IIC-IOPC IN VEZ.
           MOVE ZEROES              TO VEZ-NUM-IVEN IN VEZ.
           MOVE FIO-GET-NLS TO FIO-CMND.
       LUP-VEZ-CHK-VOPZ.
           PERFORM CBZ-FIO-VEZ.
           IF NOT ( FIO-STAT-OKS AND
                    VEZ-CAI-IOPC IN VEZ = OPZ-CAI-IOPC IN OPZ AND
                    VEZ-IIC-IOPC IN VEZ = OPZ-IIC-IOPC IN OPZ )
               IF FIO-CMND = FIO-GET-NLS
                   MOVE 'CBZ'          TO MSG-COD-SIST
                   MOVE 'OPZ    NOVEZ' TO MSG-COD-MENS
                   PERFORM GET-MSG
                   MOVE MSG-GLS-DESC   TO CPT-STR1
                   MOVE MSG-GLS-DATA   TO CPT-STR2
                   PERFORM CPT-BLKS
                   MOVE CPT-STRN       TO FRM-MENS

                   GO TO FIN-VEZ-CHK-VOPZ
               ELSE
                   GO TO UVC-VEZ-CHK-VOPZ.
           IF OPZ-FEC-FCOL IN OPZ > VEZ-FEC-FVEN IN VEZ
               MOVE 'VEZFVENFCOL<' TO MSG-COD-MENS
               GO TO FIN-VEZ-CHK-VOPZ.

            MOVE VEZ-CIC-IOPC IN VEZ TO DLZ-CIC-IOPC IN DLZ
            MOVE VEZ-NUM-IDLC IN VEZ TO DLZ-NUM-IDLC IN DLZ
            MOVE FIO-GET-KEY TO FIO-CMND
            PERFORM CBZ-FIO-DLZ
            IF NOT FIO-STAT-OKS
                MOVE 'DLZ    NEX  '      TO MSG-COD-MENS
                MOVE DLZ-KEY-IDLC IN DLZ TO FRM-MEN2
                GO TO FIN-VEZ-CHK-VOPZ
            ELSE
                IF NOT ( DLZ-MSC-STAT IN DLZ = 'R' OR 'C' )
                    ADD VEZ-VAL-FINA IN VEZ TO WSS-VAL-TVEN.
           IF WSS-EPOC = 'N'
               GO TO SK2-VEZ-CHK-VOPZ.

           IF VEZ-VAL-SCAP IN VEZ > ZEROES
               IF WSS-FPPC NOT > ZEROES OR
                  WSS-FPPC     > VEZ-FEC-FVEN IN VEZ
                   MOVE VEZ-FEC-FVEN IN VEZ TO WSS-FPPC.
                       
           IF WSS-FPPI NOT > ZEROES OR
              WSS-FPPI     > VEZ-FEC-FVEN IN VEZ
               MOVE VEZ-FEC-FVEN IN VEZ TO WSS-FPPI.

       SK2-VEZ-CHK-VOPZ.
           MOVE VEZ-FEC-FVEN IN VEZ TO WSS-FVNC.

           IF ( WSS-FVNC > WSS-FUVC ) OR ( WSS-FVNC = WSS-FUVC )
               IF WSS-FVNC > WSS-FUVC
                   MOVE WSS-FVNC            TO WSS-FUVC
                   MOVE VEZ-NUM-IVEN IN VEZ TO WSS-NEUV
                   IF VEZ-VAL-SCAP IN VEZ NOT > ZEROES
                       MOVE 'Z' TO WSS-IVUV
                   ELSE
                       MOVE 'N' TO WSS-IVUV
               ELSE
               IF WSS-ULTIMO-VENC-EN-ZERO
                   IF VEZ-VAL-SCAP IN VEZ NOT > ZEROES
                       MOVE 'Z' TO WSS-IVUV
                   ELSE
                       MOVE 'N' TO WSS-IVUV.

           IF WSS-EPOC = 'S'
               IF WSS-FVNC > WSS-FMAV
                   MOVE 'OPZFFINFMAX>' TO MSG-COD-MENS
                   GO TO FIN-VEZ-CHK-VOPZ.

           MOVE FIO-GET-NXT TO FIO-CMND.
           GO TO LUP-VEZ-CHK-VOPZ.

       UVC-VEZ-CHK-VOPZ.
           IF WSS-IND-IVFI > SPACES
               IF WSS-VAL-TVEN < OPZ-VAL-CRED IN OPZ-FLD
                   GO TO POZ-VEZ-CHK-VOPZ
               ELSE
                   MOVE 'OPZCRE<=CAPI' TO MSG-COD-MENS
                   MOVE 'CBZ'          TO MSG-COD-SIST
                   PERFORM GET-MSG
                   MOVE SPACES              TO WSS-MSG-STR
                   MOVE OPZ-VAL-CRED IN OPZ TO WSS-NUM-FALF
                   MOVE MSG-GLS-DESC IN MSG TO WSS-MSG-GLS-DESC
                   MOVE WSS-VAL-TVEN        TO WSS-NUM-FEDT
                   MOVE MSG-GLS-DATA IN MSG TO WSS-MSG-GLS-DATA
                   MOVE WSS-MSG-STR         TO CPT-STRN
                   PERFORM CPT-BLKS
                   MOVE CPT-STRN            TO FRM-MENS
                   GO TO FIN-VEZ-CHK-VOPZ.

           IF WSS-VAL-TVEN NOT = OPZ-VAL-CRED IN OPZ-FLD
               MOVE 'OPZ    TVEZ' TO MSG-COD-MENS
               MOVE 'CBZ'         TO MSG-COD-SIST
               PERFORM GET-MSG

               MOVE SPACES              TO WSS-MSG-STR
               MOVE OPZ-VAL-CRED IN OPZ TO WSS-NUM-FALF
               MOVE MSG-GLS-DESC IN MSG TO WSS-MSG-GLS-DESC
               MOVE WSS-VAL-TVEN        TO WSS-NUM-FEDT
               MOVE MSG-GLS-DATA IN MSG TO WSS-MSG-GLS-DATA
               MOVE WSS-MSG-STR         TO CPT-STRN
               PERFORM CPT-BLKS
               MOVE CPT-STRN            TO FRM-MENS
               GO TO FIN-VEZ-CHK-VOPZ.
       POZ-VEZ-CHK-VOPZ.
           IF WSS-EPOC = 'S'
               IF WSS-FUVC < WSS-FMIV
                   MOVE ZEROES TO WSS-NEEV
               ELSE
                   MOVE 1      TO WSS-NEEV.
       FIN-VEZ-CHK-VOPZ.
           EXIT.

       CAL-FECH SECTION.
       INI-CAL-FECH.
           MOVE SPACES TO MSG-COD-MENS.
           IF WSS-USEP = 'D'
               MOVE WSS-VSEP    TO FEC-NDIA
               MOVE FEC-SUM-DIA TO FEC-CMND
           ELSE
           IF WSS-USEP = 'M'
               MOVE WSS-VSEP    TO FEC-NMES
               MOVE FEC-SUM-MES TO FEC-CMND
           ELSE
           IF WSS-USEP = 'A'
               MOVE WSS-VSEP    TO FEC-NANO
               MOVE FEC-SUM-ANO TO FEC-CMND
           ELSE
               MOVE 'INDUSEPINV' TO MSG-COD-MENS
               GO TO FIN-CAL-FECH.

           MOVE OPZ-FEC-FCOL IN OPZ-FLD TO FEC-FECH.
           MOVE FEC-FORM-FEC            TO FEC-FORM.
           PERFORM CAL-FEC.
           IF NOT FEC-STAT-OKS
               MOVE 'CALFECHFSUM' TO MSG-COD-MENS.
       FIN-CAL-FECH.
           EXIT.

       ANL-FRDO SECTION.
       INI-ANL-FRDO.
           MOVE SPACES TO MSG-COD-MENS.

           MOVE FEC-FBLK-N   TO FEC-FBLK.
           MOVE FEC-CHOY-N   TO FEC-CHOY.
           MOVE FEC-VHBL-S   TO FEC-VHBL.
           MOVE FEC-VAL-FEC  TO FEC-CMND.
           MOVE FEC-FORM-FEC TO FEC-FORM.
           PERFORM PRO-FEC.
           IF ( NOT FEC-STAT-OKS ) AND ( NOT FEC-STAT-FER )
               MOVE 'ANLFRDOFVHBL' TO MSG-COD-MENS
               MOVE FEC-STAT       TO FRM-MEN2
               GO TO FIN-ANL-FRDO.

           IF FEC-STAT-FER
               MOVE FEC-FORM-FEC TO FEC-FORM
               MOVE FEC-SIG-HBL  TO FEC-CMND
               PERFORM CAL-FEC
               IF NOT FEC-STAT-OKS
                   MOVE 'ANLFRDOFSHBL' TO MSG-COD-MENS
                   MOVE FEC-STAT       TO FRM-MEN2
                   GO TO FIN-ANL-FRDO.

           MOVE SPACES TO MSG-COD-MENS.
       FIN-ANL-FRDO.
           EXIT.

       PRO-DLZ SECTION.
       INI-PRO-DLZ.
           MOVE ZEROES TO WSS-VAL-NDLC.
           MOVE ZEROES TO WSS-NUM-VCOR.
           MOVE OPZ-CIC-IOPC IN OPZ TO DLZ-CIC-IOPC IN DLZ.
           MOVE ZEROES              TO DLZ-NUM-IDLC IN DLZ.
           MOVE FIO-GET-NLS TO FIO-CMND.
           PERFORM CBZ-FIO-DLZ.            
           IF NOT ( FIO-STAT-OKS AND
                    OPZ-CIC-IOPC IN OPZ = DLZ-CIC-IOPC IN DLZ )
               MOVE FRM-SUAR-MAL TO FRM-SUAR
               MOVE 'CBZ' TO MSG-COD-SIST
               MOVE 'OPZ    NODLZ' TO MSG-COD-MENS
               PERFORM GET-MSG

               MOVE MSG-GLS-DESC TO CPT-STR1
               MOVE MSG-GLS-DATA TO CPT-STR2
               PERFORM CPT-BLKS
               MOVE CPT-STRN     TO FRM-MENS

               GO TO FIN-PRO-DLZ.
       LUP-INP-DLZ.
           IF NOT ( DLZ-MSC-STAT IN DLZ = 'R' OR 'C' )
               ADD DLZ-VAL-NDLC TO WSS-VAL-NDLC.
           IF SCR-CIC-TDOC        = 'LTR' AND
              OPZ-IND-VSTR IN OPZ = 'N'
               ADD 1 TO WSS-NUM-VCOR.
           MOVE FIO-GET-NXT TO FIO-CMND.
           PERFORM CBZ-FIO-DLZ.
           IF FIO-STAT-OKS AND
              OPZ-CIC-IOPC IN OPZ = DLZ-CIC-IOPC IN DLZ
               GO TO LUP-INP-DLZ.
           IF ( SCR-CIC-TDOC            = 'LTR'        ) AND
              ( OPZ-IND-VSTR IN OPZ     = 'N'          ) AND
              ( OPZ-NUM-VCOR IN OPZ NOT = WSS-NUM-VCOR )
               MOVE FRM-SUAR-MAL   TO FRM-SUAR
               MOVE 'CBZ'          TO MSG-COD-SIST
               MOVE 'OPZVCOR<>DLZ' TO MSG-COD-MENS
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC   TO FRM-MENS
               GO TO FIN-PRO-DLZ.
           IF OPZ-VAL-CRED IN OPZ NOT = WSS-VAL-NDLC
               MOVE FRM-SUAR-MAL   TO FRM-SUAR
               MOVE 'CBZ'          TO MSG-COD-SIST
               MOVE 'OPZCRED<>DLZ' TO MSG-COD-MENS
               PERFORM GET-MSG
               MOVE SPACES         TO WSS-MSG-STR
               MOVE OPZ-VAL-CRED IN OPZ TO WSS-NUM-FALF
               MOVE MSG-GLS-DESC IN MSG TO WSS-MSG-GLS-DESC
               MOVE WSS-VAL-NDLC        TO WSS-NUM-FEDT
               MOVE MSG-GLS-DATA IN MSG TO WSS-MSG-GLS-DATA
               MOVE WSS-MSG-STR TO CPT-STRN
               PERFORM CPT-BLKS
               MOVE CPT-STRN     TO FRM-MENS

               GO TO FIN-PRO-DLZ.
       FIN-PRO-DLZ.           
           EXIT.           

       PRO-RDZ SECTION.
       INI-PRO-RDZ.
           MOVE ZEROES TO WSS-NUM-PDIR.
           MOVE 'RDZ-KEY-IDLC' TO FIO-AKEY.
           MOVE OPZ-CIC-IOPC IN OPZ TO RDZ-CIC-IOPC IN RDZ.
           MOVE ZEROES              TO RDZ-NUM-IDLC IN RDZ.
           MOVE FIO-GET-NLS TO FIO-CMND.
           PERFORM CBZ-FIO-RDZ.
           IF NOT ( FIO-STAT-OKS AND
                    RDZ-CIC-IOPC IN RDZ = OPZ-CIC-IOPC IN OPZ AND
                    RDZ-NUM-IDLC IN RDZ = ZEROES )
               MOVE FRM-SUAR-MAL TO FRM-SUAR
               MOVE 'CBZ' TO MSG-COD-SIST
               MOVE 'OPZ    NORDZ' TO MSG-COD-MENS
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO CPT-STR1
               MOVE MSG-GLS-DATA TO CPT-STR2
               PERFORM CPT-BLKS
               MOVE CPT-STRN         TO FRM-MENS
               GO TO FIN-PRO-RDZ.
       LUP-INP-RDZ.
           MOVE ZEROES              TO WSS-NUM-PIND.
           ADD RDZ-VAL-LIMD         TO WSS-NUM-PDIR.
           MOVE RDZ-CIC-ICLI IN RDZ TO WSS-CIC-ICLI.
           MOVE 'RDZ-KEY-IDLC' TO FIO-AKEY.
           MOVE OPZ-CIC-IOPC IN OPZ TO RDZ-CIC-IOPC IN RDZ.
           MOVE 1                   TO RDZ-NUM-IDLC IN RDZ.
           MOVE FIO-GET-NLS TO FIO-CMND.
           PERFORM CBZ-FIO-RDZ.
           IF ( FIO-STAT-OKS AND
                RDZ-CIC-IOPC IN RDZ = OPZ-CIC-IOPC IN OPZ )
                PERFORM VAL-DEU-IND.
           IF FRM-SUAR = FRM-SUAR-MAL
               GO TO FIN-PRO-RDZ.

           MOVE OPZ-CIC-IOPC IN OPZ TO RDZ-CIC-IOPC IN RDZ.
           MOVE ZEROES              TO RDZ-NUM-IDLC IN RDZ.
           MOVE FIO-GET-NLS TO FIO-CMND.
       LU2-PRO-RDZ.
           MOVE 'RDZ-KEY-IDLC' TO FIO-AKEY.
           PERFORM CBZ-FIO-RDZ.
           IF NOT ( FIO-STAT-OKS AND
                    RDZ-CIC-IOPC IN RDZ = OPZ-CIC-IOPC IN OPZ AND
                    RDZ-NUM-IDLC IN RDZ = ZEROES )
               GO TO VAL-PRO-RDZ.
           IF RDZ-CIC-ICLI IN RDZ = WSS-CIC-ICLI
               MOVE 'RDZ-KEY-IDLC' TO FIO-AKEY
               MOVE FIO-GET-NXT TO FIO-CMND
               PERFORM CBZ-FIO-RDZ
               IF FIO-STAT-OKS AND
                  RDZ-CIC-IOPC IN RDZ = OPZ-CIC-IOPC IN OPZ AND
                  RDZ-NUM-IDLC IN RDZ = ZEROES
                   GO TO LUP-INP-RDZ
               ELSE
                   NEXT SENTENCE
           ELSE
               MOVE FIO-GET-NXT TO FIO-CMND
               GO TO LU2-PRO-RDZ.
       VAL-PRO-RDZ.
           IF WSS-NUM-PDIR < 100
               MOVE FRM-SUAR-MAL TO FRM-SUAR
               MOVE 'CBZ' TO MSG-COD-SIST
               MOVE 'NUMPDIR100<' TO MSG-COD-MENS
               PERFORM GET-MSG

               MOVE SPACES TO WSS-MSG-STR
               MOVE MSG-GLS-DESC IN MSG TO WSS-MSG-GLS-DESC
               MOVE WSS-NUM-PDIR TO WSS-NUM-FEDT
               MOVE MSG-GLS-DATA IN MSG TO WSS-MSG-GLS-DATA
               MOVE WSS-MSG-STR TO CPT-STRN
               PERFORM CPT-BLKS
               MOVE CPT-STRN         TO FRM-MENS

               GO TO FIN-PRO-RDZ.
       FIN-PRO-RDZ.
           EXIT.

       PRO-CYZ SECTION.
       INI-PRO-CYZ.
           MOVE SPACES TO WSS-OPC-CACC.
           MOVE SPACES TO WSS-OPC-LNBT.
           MOVE OPZ-CIC-IOPC IN OPZ TO CYZ-CIC-IOPC IN CYZ.
           MOVE ZEROES              TO CYZ-NUM-ICAN IN CYZ.
           MOVE ZEROES              TO CYZ-NUM-ICYA IN CYZ.
           MOVE FIO-GET-NLS TO FIO-CMND.
       LUP-PRO-CYZ.
           PERFORM CBZ-FIO-CYZ.
           IF NOT ( FIO-STAT-OKS AND
                    CYZ-CIC-IOPC IN CYZ = OPZ-CIC-IOPC IN OPZ AND
                    CYZ-NUM-ICAN IN CYZ = ZEROES )
               IF WSS-OPC-CACC > SPACES
                   GO TO CON-PRO-CYZ
               ELSE
                   MOVE 'OPZ    NOCYZ' TO MSG-COD-MENS
                   GO TO MSG-PRO-CYZ.
           IF CYZ-IND-TCYA IN CYZ > SPACES
               MOVE 'TCYA'              TO MSC-COD-TMSC IN MSC
               MOVE CYZ-IND-TCYA IN CYZ TO MSC-COD-CMSC IN MSC
               MOVE 'TAB'       TO FIO-SIST
               MOVE FIO-GET-KEY TO FIO-CMND
               PERFORM GNS-FIO-MSC
               IF FIO-STAT-OKS
                   IF MSC-CIC-CMSC IN MSC = 'CC'
                       IF ( WSS-OPC-CACC > SPACES ) AND
                          ( WSS-OPC-CACC NOT = 'CC' )
                           MOVE 'CANTCYACC=<>' TO MSG-COD-MENS
                           GO TO MSG-PRO-CYZ
                       ELSE
                           MOVE MSC-CIC-CMSC IN MSC TO WSS-OPC-CACC
                           IF MSC-COD-DAT1(2) NOT > SPACES
                               MOVE 'MSCTCYZCCLB?' TO MSG-COD-MENS
                               MOVE MSC-COD-TABL IN MSC TO FRM-MEN2
                               GO TO MSG-PRO-CYZ
                           ELSE
                           IF ( WSS-OPC-LNBT > SPACES      ) AND
                              ( WSS-OPC-LNBT NOT = MSC-COD-DAT1(2) )
                               MOVE 'CANTCYZLB=<>' TO MSG-COD-MENS
                               GO TO MSG-PRO-CYZ
                           ELSE
                               MOVE MSC-COD-DAT1(2) TO WSS-OPC-LNBT
                   ELSE
                   IF MSC-CIC-CMSC IN MSC = 'AH'
                       IF ( WSS-OPC-CACC > SPACES ) AND
                          ( WSS-OPC-CACC NOT = 'AH' )
                           MOVE 'CAZTCYZAH=<>' TO MSG-COD-MENS
                           GO TO MSG-PRO-CYZ
                       ELSE
                           MOVE MSC-CIC-CMSC IN MSC TO WSS-OPC-CACC
                           IF MSC-COD-DAT1(2) NOT > SPACES
                               MOVE 'MSCTCYAAHLB?' TO MSG-COD-MENS
                               MOVE MSC-COD-TABL IN MSC TO FRM-MEN2
                               GO TO MSG-PRO-CYZ
                           ELSE
                           IF ( WSS-OPC-LNBT > SPACES      ) AND
                              ( WSS-OPC-LNBT NOT = MSC-COD-DAT1(2) )
                               MOVE 'CANTCYALB=<>' TO MSG-COD-MENS
                               GO TO MSG-PRO-CYZ
                           ELSE
                               MOVE MSC-COD-DAT1(2) TO WSS-OPC-LNBT
                   ELSE
                       IF ( WSS-OPC-CACC > SPACES ) AND
                          ( WSS-OPC-CACC = 'CC' OR 'AH' )
                           MOVE 'CANTCYACA=<>' TO MSG-COD-MENS
                           GO TO MSG-PRO-CYZ
                       ELSE
                           MOVE MSC-CIC-CMSC IN MSC TO WSS-OPC-CACC
               ELSE
                   MOVE 'CYZTCYANEX' TO MSG-COD-MENS
                   MOVE CYZ-IND-TCYA IN CYZ TO FRM-MEN2
                   GO TO MSG-PRO-CYZ
           ELSE
               MOVE 'CYZTCYABLK' TO MSG-COD-MENS
               MOVE CYZ-KEY-ICYA IN CYZ TO FRM-MEN2
               GO TO MSG-PRO-CYZ.
           MOVE FIO-GET-NXT TO FIO-CMND.
           GO TO LUP-PRO-CYZ.
       CON-PRO-CYZ.
           IF OPZ-IND-RENO IN OPZ NOT > SPACES
               GO TO FIN-PRO-CYZ.
           PERFORM VAL-TCYA-OPZ-CAZ.
       MSG-PRO-CYZ.
           IF MSG-COD-MENS > SPACES
               MOVE 'CBZ' TO MSG-COD-SIST
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MEN1
               MOVE FRM-SUAR-MAL TO FRM-SUAR
               GO TO FIN-PRO-CYZ.
       FIN-PRO-CYZ.
           EXIT.

       VAL-TCYA-OPZ-CAZ SECTION.
       INI-VAL-TCYA-OPZ-CAZ.
           MOVE SPACES TO MSG-COD-MENS.
           MOVE OPZ-CIC-IOPC IN OPZ TO ROZ-CIC-IOPC IN ROZ.
           MOVE SPACES              TO ROZ-KEY-IVCT IN ROZ.
           MOVE FIO-GET-NLS TO FIO-CMND.
       LUP-VAL-TCYA-OPZ-CAZ.
           PERFORM CBZ-FIO-ROZ.
           IF NOT ( FIO-STAT-OKS AND
                    ROZ-CIC-IOPC IN ROZ = OPZ-CIC-IOPC IN OPZ )
               GO TO FIN-VAL-TCYA-OPZ-CAZ.
           MOVE ROZ-KEY-IVCT IN ROZ TO CAZ-KEY-ICAN IN CAZ.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM CBZ-FIO-CAZ.
           IF NOT FIO-STAT-OKS
               MOVE 'ROZ    CAZNX' TO MSG-COD-MENS
               GO TO FIN-VAL-TCYA-OPZ-CAZ.
           MOVE SPACES              TO CYZ-KEY-ICYA IN CYZ.
           MOVE CAZ-KEY-ICAN IN CAZ TO CYZ-KEY-ICAN IN CYZ.
           MOVE FIO-GET-NLS TO FIO-CMND.
           PERFORM CBZ-FIO-CYZ.
           IF NOT ( FIO-STAT-OKS AND
                    CYZ-KEY-ICAN IN CYZ = CAZ-KEY-ICAN IN CAZ )
               GO TO NXT-VAL-TCYA-OPZ-CAZ.
           IF POZ-COD-COTO IN POZ NOT = 'LAC' AND
              CYZ-IND-TCYA IN CYZ > SPACES
               MOVE 'TAB'               TO FIO-SIST
               MOVE 'TCYA'              TO MSC-COD-TMSC IN MSC
               MOVE CYZ-IND-TCYA IN CYZ TO MSC-COD-CMSC IN MSC
               MOVE FIO-GET-KEY TO FIO-CMND
               PERFORM GNS-FIO-MSC
               IF FIO-STAT-OKS
                  IF ( ( MSC-CIC-CMSC IN MSC     = 'CC' AND
                         WSS-OPC-CACC        NOT = 'CC' ) OR
                       ( MSC-CIC-CMSC IN MSC NOT = 'CC' AND
                         WSS-OPC-CACC            = 'CC' ) )
                      MOVE 'OPZCAZTCYACC' TO MSG-COD-MENS
                      GO TO FIN-VAL-TCYA-OPZ-CAZ
                  ELSE
                  IF ( ( MSC-CIC-CMSC IN MSC     = 'AH' AND
                         WSS-OPC-CACC        NOT = 'AH' ) OR
                       ( MSC-CIC-CMSC IN MSC NOT = 'AH' AND
                         WSS-OPC-CACC            = 'AH' ) )
                      MOVE 'OPZCAZTCYAAH' TO MSG-COD-MENS
                      GO TO FIN-VAL-TCYA-OPZ-CAZ.
       NXT-VAL-TCYA-OPZ-CAZ.
           MOVE FIO-GET-NXT TO FIO-CMND.
           GO TO LUP-VAL-TCYA-OPZ-CAZ.
       FIN-VAL-TCYA-OPZ-CAZ.
           EXIT.

       PRO-ROZ SECTION.
       INI-PRO-ROZ.
           IF OPZ-IND-RENO IN OPZ = SPACES
               GO TO FIN-PRO-ROZ.
           MOVE OPZ-CIC-IOPC IN OPZ TO ROZ-CIC-IOPC IN ROZ.
           MOVE SPACES              TO ROZ-CIC-IOPV IN ROZ.
           MOVE ZEROES              TO ROZ-NUM-IVCT IN ROZ.
           MOVE FIO-GET-NLS TO FIO-CMND.
           PERFORM CBZ-FIO-ROZ.
           IF NOT ( FIO-STAT-OKS AND
                    OPZ-CIC-IOPC IN OPZ = ROZ-CIC-IOPC IN ROZ )
               MOVE FRM-SUAR-MAL TO FRM-SUAR
               MOVE 'CBZ' TO MSG-COD-SIST
               MOVE 'OPZ    NOROZ' TO MSG-COD-MENS
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO CPT-STR1
               MOVE MSG-GLS-DATA TO CPT-STR2
               PERFORM CPT-BLKS
               MOVE CPT-STRN     TO FRM-MENS.

       FIN-PRO-ROZ.
           EXIT.

       PRO-RCO SECTION.
       INI-PRO-RCO.
           MOVE OPZ-COD-VCOC IN OPZ TO POZ-COD-VCOC IN POZ.
           MOVE OPZ-COD-TOOC IN OPZ TO POZ-COD-TOOC IN POZ.
           MOVE OPZ-COD-AOOC IN OPZ TO POZ-COD-AOOC IN POZ.
           MOVE ZEROES              TO POZ-NUM-IPOC IN POZ.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM CBZ-FIO-POZ.
           MOVE FIO-STAT TO PGM-STAT-POZ.
           IF NOT PGM-STAT-POZ-OKS
               GO TO FIN-PRO-RCO.

           MOVE ZEROES TO WSS-NUM-COTO.
           MOVE ZEROES TO WSS-NUM-ACTI.
           MOVE OPZ-CIC-IOPC IN OPZ TO RDZ-CIC-IOPC IN RDZ.
           MOVE ZEROES              TO RDZ-NUM-IDLC IN RDZ.
           MOVE 'RDZ-KEY-IDLC' TO FIO-AKEY.
           MOVE FIO-GET-NLS    TO FIO-CMND.
           PERFORM CBZ-FIO-RDZ.
           IF NOT ( FIO-STAT-OKS AND
                    RDZ-CIC-IOPC IN RDZ = OPZ-CIC-IOPC IN OPZ AND
                    RDZ-NUM-IDLC IN RDZ = ZEROES ) 
               MOVE 'CBZ'          TO MSG-COD-SIST
               MOVE 'OPZ    NORDZ' TO MSG-COD-MENS
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO CPT-STR1
               MOVE MSG-GLS-DATA TO CPT-STR2
               PERFORM CPT-BLKS
               MOVE CPT-STRN     TO FRM-MENS
               MOVE FRM-SUAR-MAL TO FRM-SUAR
               GO TO FIN-PRO-RCO.

           IF POZ-COD-ACTI IN POZ NOT > SPACES
               MOVE 1 TO WSS-NUM-ACTI IN WSS-VARI.
           IF POZ-COD-COTO IN POZ = 'LAC' OR
              POZ-COD-COTO IN POZ NOT > SPACES
               MOVE 1 TO WSS-NUM-COTO IN WSS-VARI.
       LUP-PRO-RCO.
           IF WSS-NUM-ACTI IN WSS-VARI NOT > ZEROES
               MOVE RDZ-CIC-ICLI IN RDZ TO DBC-CIC-ICLI IN DBC
               MOVE FIO-GET-KEY TO FIO-CMND
               PERFORM SGC-FIO-DBC
               PERFORM VAL-ACTI
               IF MSG-COD-MENS NOT > SPACES
                   MOVE 1 TO WSS-NUM-ACTI IN WSS-VARI.
           MOVE SPACES              TO RCO-KEY-IRCO IN RCO.
           MOVE RDZ-CIC-ICLI IN RDZ TO RCO-CIC-ICLI IN RCO.
           MOVE FIO-GET-NLS TO FIO-CMND.
       NXT-PRO-RCO.
           IF WSS-NUM-COTO IN WSS-VARI > ZEROES
               GO TO NXT-RDZ-PRO-RCO.
           PERFORM SGC-FIO-RCO.
           IF NOT ( FIO-STAT-OKS AND
                    RDZ-CIC-ICLI IN RDZ = RCO-CIC-ICLI IN RCO )
               GO TO NXT-RDZ-PRO-RCO.
           PERFORM VAL-COTO.
           IF NOT ( MSG-COD-MENS > SPACES OR
                    RCO-MSC-STAT IN RCO = 'D' OR
                    RCO-MSC-STAT IN RCO = 'E' OR
                    RCO-COD-STAT IN RCO = 'ELI' )
               MOVE 1 TO WSS-NUM-COTO IN WSS-VARI.
           MOVE FIO-GET-NXT TO FIO-CMND
           GO TO NXT-PRO-RCO.
       NXT-RDZ-PRO-RCO.
           IF WSS-NUM-ACTI IN WSS-VARI > ZEROES AND
              WSS-NUM-COTO IN WSS-VARI > ZEROES
               GO TO FIN-PRO-RCO.
           MOVE 'RDZ-KEY-IDLC' TO FIO-AKEY.
           MOVE FIO-GET-NXT    TO FIO-CMND.
           PERFORM CBZ-FIO-RDZ.
           IF FIO-STAT-OKS AND
              RDZ-CIC-IOPC IN RDZ = OPZ-CIC-IOPC IN OPZ AND
              RDZ-NUM-IDLC IN RDZ = ZEROES
               GO TO LUP-PRO-RCO.
           IF WSS-NUM-ACTI NOT > ZEROES
               MOVE 'CBZ'           TO MSG-COD-SIST
               MOVE 'CODACTISNOPLT' TO MSG-COD-MENS
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MEN1
               MOVE POZ-COD-ACTI TO FRM-MEN2
               MOVE FRM-SUAR-MAL TO FRM-SUAR
               GO TO FIN-PRO-RCO.
           IF WSS-NUM-COTO NOT > ZEROES
               MOVE 'CBZ'           TO MSG-COD-SIST
               MOVE 'CODCOTOSNOPLT' TO MSG-COD-MENS
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MEN1
               MOVE POZ-COD-COTO TO FRM-MEN2
               MOVE FRM-SUAR-MAL TO FRM-SUAR
               GO TO FIN-PRO-RCO.
       FIN-PRO-RCO.
           EXIT.

       ULT-VEZ SECTION.
       INI-ULT-VEZ.
           MOVE OPZ-CIC-IOPC IN OPZ TO VEZ-CIC-IOPC IN VEZ.
           MOVE 999 TO VEZ-NUM-IVEN IN VEZ.
           MOVE FIO-GET-LEQ TO FIO-CMND.
           PERFORM CBZ-FIO-VEZ.
           IF NOT ( FIO-STAT-OKS AND
                    OPZ-CIC-IOPC IN OPZ = VEZ-CIC-IOPC IN VEZ )
               MOVE ZEROES TO VEZ-NUM-IVEN IN VEZ.
           MOVE VEZ-NUM-IVEN IN VEZ TO OPZ-NUM-VCVG IN OPZ.
       FIN-ULT-VEZ.
           EXIT.

       VAL-DEU-IND SECTION.
       INI-VAL-DEU-IND.
           IF RDZ-CIC-ICLI = WSS-CIC-ICLI
               MOVE RDZ-CIC-ICLI IN RDZ TO DBC-CIC-ICLI IN DBC
               MOVE FIO-GET-KEY TO FIO-CMND
               PERFORM SGC-FIO-DBC
               MOVE FRM-SUAR-MAL TO FRM-SUAR
               MOVE 'CBZ' TO MSG-COD-SIST
               MOVE 'CICICLIICLI=' TO MSG-COD-MENS
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO CPT-STR1
               MOVE MSG-GLS-DATA TO CPT-STR2
               PERFORM CPT-BLKS
               MOVE CPT-STRN     TO FRM-MENS

               GO TO FIN-VAL-DEU-IND.
           ADD RDZ-VAL-LIMD TO WSS-NUM-PIND.
           MOVE 'RDZ-KEY-IDLC' TO FIO-AKEY.
           MOVE FIO-GET-NXT TO FIO-CMND.
           PERFORM CBZ-FIO-RDZ.
           IF FIO-STAT-OKS AND
              RDZ-CIC-IOPC IN RDZ = OPZ-CIC-IOPC IN OPZ
                 GO TO INI-VAL-DEU-IND.
       FIN-VAL-DEU-IND.
           EXIT.

       VAL-ACTI SECTION.
       INI-VAL-ACTI.
           MOVE SPACES TO MSG-COD-MENS.
           MOVE SPACES TO WSS-COD-DIGT.
           IF POZ-COD-ACTI IN POZ > SPACES
               MOVE POZ-COD-ACTI IN POZ TO NUM-NUME
               MOVE NUM-ZERO-S TO NUM-ZERO
               MOVE NUM-SGNO-N TO NUM-SGNO
               MOVE 9 TO NUM-NENT
               MOVE 0 TO NUM-NDCM
               CALL 'GNSPVNUM' USING NUM-VARI
               IF NUM-STAT-OKS
                   MOVE 'TAB' TO TAB-COD-SIST
                   MOVE 'ACT' TO TAB-COD-TTAB IN TAB
                   MOVE POZ-COD-ACTI IN POZ TO TAB-COD-CTAB IN TAB
                   PERFORM BUS-TAB
                   IF MSG-COD-MENS > SPACES
                       MOVE NUM-NN9N TO WSS-NUM-DIGT
                       MOVE WSS-NUM-DIGT TO WSS-COD-DIGT
                   ELSE
                   IF POZ-COD-ACTI IN POZ NOT = DBC-COD-ACTI IN DBC 
                       MOVE 'CODACTINOPLT' TO MSG-COD-MENS
                       GO TO FIN-VAL-ACTI
                   ELSE
                       NEXT SENTENCE
               ELSE
                   IF POZ-COD-ACTI IN POZ NOT = DBC-COD-ACTI IN DBC 
                       MOVE 'CODACTINOPLT' TO MSG-COD-MENS
                       GO TO FIN-VAL-ACTI.
           IF WSS-COD-DIGT NOT > SPACES
               GO TO FIN-VAL-ACTI.
           MOVE 'TAB' TO TAB-COD-SIST
           MOVE 'ACT' TO TAB-COD-TTAB IN TAB
           MOVE DBC-COD-ACTI IN DBC TO TAB-COD-CTAB IN TAB
           PERFORM BUS-TAB
           PERFORM BUS-FAM VARYING WSS-I FROM 1 BY 1 UNTIL WSS-I > 10 OR
                           WSS-COD-DIGT = TAB-COD-DAT2 (WSS-I).
           IF WSS-I > 10
               MOVE 'CODACTINEFAM' TO MSG-COD-MENS
               GO TO FIN-VAL-ACTI.
       FIN-VAL-ACTI.
           EXIT.

       VAL-COTO SECTION.
       INI-VAL-COTO.
           MOVE SPACES TO MSG-COD-MENS.
           MOVE SPACES TO WSS-COD-DIGT.
           IF POZ-COD-COTO IN POZ > SPACES
               MOVE POZ-COD-COTO IN POZ TO NUM-NUME
               MOVE NUM-ZERO-S TO NUM-ZERO
               MOVE NUM-SGNO-N TO NUM-SGNO
               MOVE 3 TO NUM-NENT
               MOVE 0 TO NUM-NDCM
               CALL 'GNSPVNUM' USING NUM-VARI
               IF NUM-STAT-OKS
                   MOVE 'TAB' TO TAB-COD-SIST
                   MOVE 'TIO' TO TAB-COD-TTAB IN TAB
                   MOVE POZ-COD-COTO IN POZ TO TAB-COD-CTAB IN TAB
                   PERFORM BUS-TAB
                   IF MSG-COD-MENS > SPACES
                       MOVE NUM-NN9N TO WSS-NUM-DIGT
                       MOVE WSS-NUM-DIGT TO WSS-COD-DIGT
                   ELSE
                   IF RCO-COD-TOPR IN RCO NOT = POZ-COD-COTO IN POZ
                       MOVE 'CODCOTONOPLT' TO MSG-COD-MENS
                       GO TO FIN-VAL-COTO
                   ELSE
                       NEXT SENTENCE
               ELSE
                   IF RCO-COD-TOPR IN RCO NOT = POZ-COD-COTO IN POZ
                       MOVE 'CODCOTONOPLT' TO MSG-COD-MENS
                       GO TO FIN-VAL-COTO.
           IF WSS-COD-DIGT NOT > SPACES
               GO TO FIN-VAL-COTO.
           MOVE 'TAB' TO TAB-COD-SIST
           MOVE 'TIO' TO TAB-COD-TTAB IN TAB
           MOVE RCO-COD-TOPR IN RCO TO TAB-COD-CTAB IN TAB
           PERFORM BUS-TAB
           PERFORM BUS-FAM VARYING WSS-I FROM 1 BY 1 UNTIL WSS-I > 10 OR
                           WSS-COD-DIGT = TAB-COD-DAT2 (WSS-I).
           IF WSS-I > 10
               MOVE 'CODCOTONEFAM' TO MSG-COD-MENS
               GO TO FIN-VAL-COTO.
       FIN-VAL-COTO.
           EXIT.

       BUS-FAM SECTION.
       INI-BUS-FAM.
       FIN-BUS-FAM.
           EXIT.

       GET-ROZ-NOV SECTION.
       INI-GET-ROZ-NOV.
           MOVE OPZ-CIC-IOPC IN OPZ TO ROZ-CIC-IOPC IN ROZ.
           MOVE LOW-VALUES          TO ROZ-KEY-IVCT IN ROZ.
           MOVE '23' TO PGM-STAT-CAZ.
           MOVE FIO-GET-NLS TO FIO-CMND.
       CIC-GET-ROZ-NOV.
           PERFORM CBZ-FIO-ROZ.
           IF NOT FIO-STAT-OKS
               MOVE FIO-STAT TO PGM-STAT-ROZ
               GO TO FIN-GET-ROZ-NOV.

           IF OPZ-CIC-IOPC IN OPZ NOT = ROZ-CIC-IOPC IN ROZ
               GO TO FIN-GET-ROZ-NOV.

           IF ROZ-IIC-IOPV IN ROZ > ZEROES AND
              ROZ-NUM-IVCT IN ROZ > ZEROES
       
                MOVE FIO-STAT TO PGM-STAT-ROZ
                MOVE ROZ-KEY-IVCT IN ROZ TO CAZ-KEY-ICAN IN CAZ
                MOVE FIO-GET-KEY TO FIO-CMND
                PERFORM CBZ-FIO-CAZ
                MOVE FIO-STAT TO PGM-STAT-CAZ
           ELSE
                MOVE FIO-GET-NXT TO FIO-CMND
                GO TO CIC-GET-ROZ-NOV.
       FIN-GET-ROZ-NOV.
           EXIT.

       GET-ROZ-REN SECTION.
       INI-GET-ROZ-REN.
           MOVE OPZ-COD-VCOC IN OPZ TO OPZ-COD-VCOC IN OPZ-FLD.
           PERFORM BUS-COD-PESO.
           MOVE ZEROES TO WSS-TOT-RCAN.
           MOVE OPZ-CIC-IOPC IN OPZ TO ROZ-CIC-IOPC IN ROZ.
           MOVE LOW-VALUES          TO ROZ-KEY-IVCT IN ROZ.
           MOVE FIO-GET-NLS TO FIO-CMND.
           MOVE '23' TO PGM-STAT-ROZ.
       CIC-GET-ROZ-REN.
           PERFORM CBZ-FIO-ROZ.
           IF NOT FIO-STAT-OKS
               GO TO VRF-RCAN.

           IF OPZ-CIC-IOPC IN OPZ NOT = ROZ-CIC-IOPC IN ROZ
               GO TO VRF-RCAN.

           IF NOT ( ROZ-IIC-IOPV IN ROZ > ZEROES AND
                    ROZ-NUM-IVCT IN ROZ > ZEROES )
                       MOVE FIO-GET-NXT TO FIO-CMND
                       GO TO CIC-GET-ROZ-REN
           ELSE       
                MOVE FIO-STAT TO PGM-STAT-ROZ
                MOVE ROZ-KEY-IVCT IN ROZ TO CAZ-KEY-ICAN IN CAZ
                MOVE FIO-GET-KEY TO FIO-CMND
                PERFORM CBZ-FIO-CAZ
                IF FIO-STAT-OKS AND
                   ( CAZ-MSC-STAT IN CAZ = 'C' OR 'W' OR 'P' ) OR
                   ( OPZ-ACTIVADA              AND
                     CAZ-MSC-STAT IN CAZ = 'A' )
                       MOVE CAZ-KEY-ICAN TO RCAN-CAN-KEY-ICAN
                       ADD 1 TO WSS-TOT-RCAN
                       MOVE ROZ-COD-VCVR IN ROZ TO WSS-COD-VCOC-CNV
                       MOVE CAZ-SGV-TREN IN CAZ TO WSS-SGV-RENO-CNV
                       PERFORM CONVIERTE-VALOR
                       IF MSG-COD-MENS > SPACES
                           MOVE 'CBZ'        TO MSG-COD-SIST
                           PERFORM GET-MSG
                           MOVE MSG-GLS-DESC TO FRM-MENS
                           MOVE SCR-STAT-CON TO SCR-STAT
                           GO TO FIN-GET-ROZ-REN
                       ELSE
                           ADD WSS-SGV-RENO-CNV TO WSS-SGV-RENO
                           MOVE FIO-GET-NXT TO FIO-CMND
                           GO TO CIC-GET-ROZ-REN.
       VRF-RCAN.
           IF WSS-TOT-RCAN = ZEROES
               GO TO FIN-GET-ROZ-REN.

           MOVE RCAN-CAN-KEY-ICAN TO CAZ-KEY-ICAN.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM CBZ-FIO-CAZ.
           MOVE FIO-STAT TO PGM-STAT-CAZ.
       FIN-GET-ROZ-REN.
           EXIT.
       COPY SGCBGCLI.
       COPY SGCBFDBC.
       COPY CBZBFCAZ.
       COPY CBZBFRDZ.
       COPY CBZBFCOZ.
       COPY CBZBFCYZ.
       COPY CBZBFAUZ.
       COPY CBZBFROZ.
       COPY CBZBFDLZ.
       COPY CBZBFVEZ.
       COPY CBZBFIMZ.
       COPY CBZBFICZ.
       COPY CBZBFNTZ.
       COPY CBZBFTOZ.
       COPY CBZBFPOZ.
       COPY CBZBGUVD.
       COPY CBZBGRNO.
       COPY CBZBGCLI.
       COPY GNSBVIDC.
       COPY GNSBPVRF.
       COPY GNSBVIND.
       COPY GNSBVMSC.
       COPY CBZBFPIZ.
       COPY CBZBFPCZ.
       COPY GNSBGFEC.
       COPY GNSBPFEC.
       COPY GNSBGHOY.
       COPY GNSBGCPT.
       COPY GNSBGSTR.
       COPY GNSBBMSC.
       COPY GNSBBTAB.
       COPY GNSBFTAB.
       COPY GNSBGCAM.
       COPY GNSBGPES.
       COPY GNSBVCOD.
       COPY GNSBVTAB.
       COPY GNSBVNUM.
       COPY TABBBOFI.
       COPY TABBBCVG.
       COPY TABBFOFI.
       COPY TABBBUSR.
       COPY TABBFUSR.
       COPY TABBFCAM.
       COPY TABBVTDU.
       COPY TABBVOFI.
       COPY TABBVUSR.
       COPY SGCBGDOM.
       COPY SGCBFRCO.
       COPY SGCBFOPE.
       COPY SGCBFRCD.
       COPY CBZBGINT.
       COPY GNSBGQUE.
      *>>>>
*% END

