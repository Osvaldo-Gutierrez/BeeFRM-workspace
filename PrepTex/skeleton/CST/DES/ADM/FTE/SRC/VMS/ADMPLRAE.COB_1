       IDENTIFICATION DIVISION.
      *=======================
       PROGRAM-ID.      ADMPLRAE.
       AUTHOR.          CONSIST.
       DATE-WRITTEN.    09-Oct-91 02:15 AM.

      * Programa Listador de Reporte RAE con Sort.

       ENVIRONMENT DIVISION.
      *====================
       CONFIGURATION SECTION.
      *---------------------
       SPECIAL-NAMES.
            DECIMAL-POINT IS COMMA.
       INPUT-OUTPUT SECTION.
      *--------------------
       FILE-CONTROL.
           SELECT GNSSRT         ASSIGN TO 'SYS$DISK:'.
           SELECT RPTRAE	   ASSIGN TO RPTRAE.

       DATA DIVISION.
      *=============
       FILE SECTION.
      *------------
       SD  GNSSRT.
       COPY ADMRRRAE.
       FD  RPTRAE LABEL RECORDS OMITTED
           REPORT IS RPT-RAE
           .

       WORKING-STORAGE SECTION.
      *-----------------------
       COPY ADMBRIDT.
       COPY GNSWCFIO.
       COPY GNSWVFIO.
       COPY GNSWGRPT.
       COPY GNSBRTAB.
       COPY GNSBRMSG.
       COPY ADMRWRAE.
       COPY GNSWGSYS.
       01  PGM-STAT.
           03 PGM-STAT-SRT            VALUE ' ' PIC X(01).
              88 PGM-STAT-SRT-OKS     VALUE ' '.
              88 PGM-STAT-SRT-MAL     VALUE 'M'.
           03 PGM-SOKS                VALUE ' ' PIC X(01).
           03 PGM-SMAL                VALUE 'M' PIC X(01).
      *<<<< WSS
       COPY GNSWGFEC.
       COPY GNSWGHOY.
       01  WSS-VARI.
      * AUXILIAR PARA ALMACENAR LAS HORAS QUE RESULTAN DE LA DIVISION DE LOS
      * MINUTOS TOTALES EN LOS CORTES DE CONTROL
           03  WSS-NUM-HORA VALUE ZEROES PIC 9(04).

           03  WSS-COD-CLIE              PIC X(04).
           03  WSS-COD-FUNC              PIC X(04).
           03  WSS-COD-PROY              PIC X(04).
           03  WSS-COD-ACTI              PIC X(04).
           03  WSS-COD-ENTI              PIC X(04).
           03  WSS-FEC-FLEE.
               05  WSS-NUM-DLEE          PIC 9(02).
               05  WSS-NUM-MLEE          PIC 9(02).
               05  WSS-NUM-SLEE          PIC 9(02).
               05  WSS-NUM-ALEE          PIC 9(02).
           03  WSS-FEC-FINI.
               05  WSS-NUM-SINI          PIC 9(02).
               05  WSS-NUM-AINI          PIC 9(02).
               05  WSS-NUM-MINI          PIC 9(02).
               05  WSS-NUM-DINI          PIC 9(02).
           03  WSS-FEC-FTER.
               05  WSS-NUM-STER          PIC 9(02).
               05  WSS-NUM-ATER          PIC 9(02).
               05  WSS-NUM-MTER          PIC 9(02).
               05  WSS-NUM-DTER          PIC 9(02).
           03  WSS-IND-ENT  VALUE 0      PIC 9(01).
           03  WSS-IND-FUN  VALUE 0      PIC 9(01).
      *>>>>

       REPORT SECTION.
      *--------------
       COPY ADMRFRAE.
           .
       COPY ADMRTRAE.

       PROCEDURE DIVISION.
      *==================
       DECLARATIVES.
       DEC-CF-RAE-IDT-COD-FUNC SECTION.
           USE BEFORE REPORTING CF-RAE-IDT-COD-FUNC.
       INI-CF-RAE-IDT-COD-FUNC.
      *<<<< CF_RAE_IDT_COD_FUNC 
           ADD WSS-VAL-HFNC TO WSS-VAL-HFIN.
           MOVE 1 TO WSS-IND-FUN.
      *>>>>
       FIN-CF-RAE-IDT-COD-FUNC.
           EXIT.
       DEC-CF-RAE-IDT-COD-ENTI SECTION.
           USE BEFORE REPORTING CF-RAE-IDT-COD-ENTI.
       INI-CF-RAE-IDT-COD-ENTI.
      *<<<< CF_RAE_IDT_COD_ENTI 
           DIVIDE WSS-VAL-MTOT BY 60 GIVING WSS-NUM-HORA
                                     REMAINDER WSS-VAL-MTOT.
           IF WSS-VAL-MTOT NOT < 30
               ADD 1 TO WSS-NUM-HORA.
           ADD WSS-NUM-HORA TO WSS-VAL-HTOT.
           ADD WSS-VAL-HTOT TO WSS-VAL-HFNC.
           MOVE 1 TO WSS-IND-ENT.
      *>>>>
       FIN-CF-RAE-IDT-COD-ENTI.
           EXIT.
       DEC-DL-RAE SECTION.
           USE BEFORE REPORTING DL-RAE.
       INI-DL-RAE.
       FIN-DL-RAE.
           EXIT.
       DEC-FF-RAE SECTION.
           USE BEFORE REPORTING FF-RAE.
       INI-FF-RAE.
       FIN-FF-RAE.
           EXIT.
       DEC-DL-AUX SECTION.
           USE BEFORE REPORTING DL-AUX.
       INI-DL-AUX.
       FIN-DL-AUX.
           EXIT.
       END DECLARATIVES.

       MAIN SECTION.
      *------------
       INI-MAIN.
           MOVE 'ADMPLRAE' TO FIO-PROG.
           MOVE FIO-ACCS-UPD TO FIO-ACCS.
            MOVE FIO-ACC      TO FIO-CMND.
           MOVE 'GNS'        TO FIO-SIST.
           PERFORM GNS-FIO-TAB.

           MOVE FIO-INP      TO FIO-CMND.
           MOVE 'GNS'        TO FIO-SIST.
           PERFORM GNS-FIO-TAB.
           SORT GNSSRT
       COPY ADMRSRAE.
           INPUT  PROCEDURE IS INP-SRT
           OUTPUT PROCEDURE IS OUT-SRT.
       FIN-MAIN.
      *<<<< FIN
      *CIERRE DE ARCHIVOS DIFERENTES DEL ARCHIVO BASE EN VAX

           MOVE FIO-CLO TO FIO-CMND.
           MOVE 'ADM'   TO FIO-SIST.
           PERFORM GNS-FIO-TAB.

           MOVE 'GNS'   TO FIO-SIST.
           MOVE FIO-CLO TO FIO-CMND.
           PERFORM GNS-FIO-TAB.
      *>>>>
           PERFORM GNS-PRO-END.

       INP-SRT SECTION.
      *---------------
       INI-INP-SRT.
      *<<<< INI_INP
      *APERTURA DE ARCHIVOS DIFERENTES DEL ARCHIVO BASE EN VAX
           MOVE 'ADM'        TO FIO-SIST.
           MOVE FIO-ACCS-UPD TO FIO-ACCS.
           MOVE FIO-ACC      TO FIO-CMND.
           PERFORM GNS-FIO-TAB.
           MOVE 'ADM'   TO FIO-SIST.
           MOVE FIO-INP TO FIO-CMND.
           PERFORM GNS-FIO-TAB.

      *    DISPLAY 'INICIO DE CAPTURA DE PARAMETROS'.

           MOVE ZEROES TO WSS-FEC-FINI IN WSS-VARI.
           MOVE ZEROES TO WSS-FEC-FTER IN WSS-VARI.

      *ICU
      *CAPTURA DE CLIENTE
           DISPLAY 'CLIENTE : '.
           ACCEPT  WSS-COD-CLIE IN WSS-VARI.
           DISPLAY WSS-COD-CLIE IN WSS-VARI.

      *VAL-COD VALIDA CLIENTE
           IF WSS-COD-CLIE IN WSS-VARI NOT = '*' AND
              WSS-COD-CLIE IN WSS-VARI > SPACES
               MOVE 'ADM' TO TAB-COD-SIST
               MOVE 'CLI' TO TAB-COD-TTAB IN TAB
               MOVE WSS-COD-CLIE IN WSS-VARI TO TAB-COD-CTAB IN TAB
               PERFORM BUS-TAB
               IF MSG-COD-MENS = 'COD    NEX'
                   DISPLAY 'CLIENTE INEXISTENTE'
                   COPY GNSBGGBK.

      *CAPTURA DE PROYECTO
           DISPLAY 'PROYECTO : '.
           ACCEPT  WSS-COD-PROY IN WSS-VARI.
           DISPLAY WSS-COD-PROY IN WSS-VARI.

      *VAL-COD VALIDA PROYECTO
           IF WSS-COD-PROY IN WSS-VARI NOT = '*' AND
              WSS-COD-PROY IN WSS-VARI > SPACES
               MOVE 'ADM' TO TAB-COD-SIST
               MOVE 'PRO' TO TAB-COD-TTAB IN TAB
               MOVE WSS-COD-PROY IN WSS-VARI TO TAB-COD-CTAB IN TAB
               PERFORM BUS-TAB
               IF MSG-COD-MENS = 'COD    NEX'
                   DISPLAY 'PROYECTO INEXISTENTE'
                   COPY GNSBGGBK.

      *CAPTURA DE FUNCIONARIO
           DISPLAY 'FUNCIONARIO : '.
           ACCEPT  WSS-COD-FUNC IN WSS-VARI.
           DISPLAY WSS-COD-FUNC IN WSS-VARI.

      *VAL-COD VALIDA FUNCIONARIO
           IF WSS-COD-FUNC IN WSS-VARI NOT = '*' AND
              WSS-COD-FUNC IN WSS-VARI > SPACES
               MOVE 'ADM' TO TAB-COD-SIST
               MOVE 'FUN' TO TAB-COD-TTAB IN TAB
               MOVE WSS-COD-FUNC IN WSS-VARI TO TAB-COD-CTAB IN TAB
               PERFORM BUS-TAB
               IF MSG-COD-MENS = 'COD    NEX'
                   DISPLAY 'FUNCIONARIO INEXISTENTE'
                   COPY GNSBGGBK.

      *ICU
           DISPLAY 'FECHA INICIO DDMMSSAA / * : '.
           ACCEPT  WSS-FEC-FLEE IN WSS-VARI.
           DISPLAY WSS-FEC-FLEE IN WSS-VARI.
           IF WSS-FEC-FLEE IN WSS-VARI NOT > SPACES OR
              WSS-FEC-FLEE IN WSS-VARI = '*'
               MOVE ZEROES TO WSS-FEC-FINI IN WSS-VARI
               GO TO FIN-VAL-FEC-INI.
      *VAL-FEC VALIDAR FECHA
           MOVE WSS-FEC-FLEE IN WSS-VARI TO FEC-FECH.
           MOVE FEC-FORM-FEC TO FEC-FORM.
           MOVE FEC-FBLK-S  TO FEC-FBLK.
           MOVE FEC-CHOY-LE TO FEC-CHOY.
           MOVE FEC-VHBL-N  TO FEC-VHBL.
           MOVE FEC-VAL-FEC TO FEC-CMND.
           PERFORM PRO-FEC.
           IF NOT FEC-STAT-OKS
               DISPLAY 'FECHA INICIO INVALIDA'
               COPY GNSBGGBK.

           MOVE WSS-NUM-DLEE IN WSS-VARI TO WSS-NUM-DINI IN WSS-VARI
                                            WSS-NUM-DINI IN WSS-RAE.
           MOVE WSS-NUM-MLEE IN WSS-VARI TO WSS-NUM-MINI IN WSS-VARI
                                            WSS-NUM-MINI IN WSS-RAE.
           MOVE WSS-NUM-SLEE IN WSS-VARI TO WSS-NUM-SINI IN WSS-VARI
                                            WSS-NUM-SINI IN WSS-RAE.
           MOVE WSS-NUM-ALEE IN WSS-VARI TO WSS-NUM-AINI IN WSS-VARI
                                            WSS-NUM-AINI IN WSS-RAE.

       FIN-VAL-FEC-INI.
           MOVE ZEROES TO WSS-FEC-FLEE IN WSS-VARI.

           DISPLAY 'FECHA TERMINO DDMMSSAA / *  : '.
           ACCEPT  WSS-FEC-FLEE IN WSS-VARI.
           DISPLAY WSS-FEC-FLEE IN WSS-VARI.

           IF WSS-FEC-FLEE IN WSS-VARI NOT > SPACES OR
              WSS-FEC-FLEE IN WSS-VARI = '*'
               GO TO FIN-VAL-FEC-TER.

           MOVE WSS-FEC-FLEE IN WSS-VARI TO FEC-FECH.
           MOVE FEC-FORM-FEC TO FEC-FORM.
           MOVE FEC-FBLK-S  TO FEC-FBLK.
           MOVE FEC-CHOY-LE TO FEC-CHOY.
           MOVE FEC-VHBL-N  TO FEC-VHBL.
           MOVE FEC-VAL-FEC TO FEC-CMND.
           PERFORM PRO-FEC.
           IF NOT FEC-STAT-OKS
               DISPLAY 'FECHA TERMINO INVALIDA'
               COPY GNSBGGBK.

           MOVE WSS-NUM-DLEE IN WSS-VARI TO WSS-NUM-DTER IN WSS-VARI
                                            WSS-NUM-DFIN IN WSS-RAE.
           MOVE WSS-NUM-MLEE IN WSS-VARI TO WSS-NUM-MTER IN WSS-VARI
                                            WSS-NUM-MFIN IN WSS-RAE.
           MOVE WSS-NUM-SLEE IN WSS-VARI TO WSS-NUM-STER IN WSS-VARI
                                            WSS-NUM-SFIN IN WSS-RAE.
           MOVE WSS-NUM-ALEE IN WSS-VARI TO WSS-NUM-ATER IN WSS-VARI
                                            WSS-NUM-AFIN IN WSS-RAE.

      *     DISPLAY 'FIN DE VALIDACION DE PARAMETROS'.
       FIN-VAL-FEC-TER.
      *>>>>
           MOVE FIO-ACCS-UPD TO FIO-ACCS.
           MOVE FIO-ACC      TO FIO-CMND.
           PERFORM ADM-FIO-IDT.
           MOVE FIO-INP TO FIO-CMND.
           PERFORM ADM-FIO-IDT.
       FST-INP-SRT.
      *<<<< INI_FST_INP
           MOVE WSS-FEC-FINI IN WSS-VARI TO IDT-FEC-FACT IN IDT.
           IF WSS-COD-FUNC IN WSS-VARI NOT = '*' AND
              WSS-COD-FUNC IN WSS-VARI > SPACES
               MOVE WSS-COD-FUNC IN WSS-VARI TO IDT-COD-FUNC IN IDT
               MOVE 1                        TO IDT-NUM-CORR IN IDT
           ELSE
               MOVE SPACES TO IDT-COD-FUNC IN IDT
               MOVE 1      TO IDT-NUM-CORR IN IDT.
           MOVE FIO-GET-NLS TO FIO-CMND.
           PERFORM ADM-FIO-IDT.
           GO TO LUP-INP-SRT.
      *>>>>
           MOVE FIO-GET-FST TO FIO-CMND.
           PERFORM ADM-FIO-IDT.
       LUP-INP-SRT.
           IF NOT FIO-STAT-OKS
              GO TO FIN-INP-SRT.
      *<<<< LUP_INP
      *ICU
           IF WSS-COD-CLIE IN WSS-VARI NOT = '*' AND
              WSS-COD-CLIE IN WSS-VARI > SPACES
               IF IDT-COD-CLIE IN IDT NOT = WSS-COD-CLIE IN WSS-VARI
                   GO TO NXT-INP-SRT. 
           IF WSS-COD-PROY IN WSS-VARI NOT = '*' AND
              WSS-COD-PROY IN WSS-VARI > SPACES
               IF IDT-COD-PROY IN IDT NOT = WSS-COD-PROY IN WSS-VARI
                   GO TO NXT-INP-SRT. 
           IF WSS-COD-FUNC IN WSS-VARI NOT = '*' AND
              WSS-COD-FUNC IN WSS-VARI > SPACES
               IF IDT-COD-FUNC IN IDT NOT = WSS-COD-FUNC IN WSS-VARI
                   GO TO NXT-INP-SRT. 
      *ICU
           IF NOT ( WSS-FEC-FTER IN WSS-VARI = ZEROES OR
                    WSS-FEC-FTER IN WSS-VARI = '*' )
               IF WSS-FEC-FTER IN WSS-VARI < IDT-FEC-FACT IN IDT
                   GO TO FIN-INP-SRT. 

           IF IDT-FEC-FACT IN IDT < WSS-FEC-FINI IN WSS-VARI
               GO TO NXT-INP-SRT. 
      *>>>>
       MOV-INP-SRT.
       COPY ADMRMRAE.
           RELEASE SRT.
       NXT-INP-SRT.
           MOVE FIO-GET-NXT TO FIO-CMND.
           PERFORM ADM-FIO-IDT.
           GO TO LUP-INP-SRT.
       FIN-INP-SRT.
           MOVE FIO-CLO TO FIO-CMND.
           PERFORM ADM-FIO-IDT.

       OUT-SRT SECTION.
      *---------------
       INI-OUT-SRT.
           IF PGM-STAT-SRT-MAL
               GO TO EXT-OUT-SRT.
           OPEN OUTPUT RPTRAE.
           CALL 'GNSPLHDR' USING RPT-VARI.
           INITIATE RPT-RAE.
           RETURN GNSSRT AT END
                GO TO FIN-OUT-SRT.
      *<<<< FST_OUT
           MOVE 0 TO WSS-IND-ENT, WSS-IND-FUN.
           MOVE ZEROES TO WSS-VAL-HTOT.
           MOVE ZEROES TO WSS-VAL-MTOT.
           MOVE ZEROES TO WSS-VAL-HFNC.
           MOVE ZEROES TO WSS-VAL-HFIN.
      *BUS-TAB BUSCA GLOSA DE CODIGO EN TABLA
       BUS-FUN.
           IF IDT-COD-FUNC IN SRT > SPACES
               MOVE 'ADM' TO TAB-COD-SIST
               MOVE 'FUN' TO TAB-COD-TTAB IN TAB
               MOVE IDT-COD-FUNC IN SRT TO TAB-COD-CTAB IN TAB
               PERFORM BUS-TAB
               MOVE TAB-GLS-DCOR IN TAB TO WSS-GLS-FUNC IN WSS-RAE.
      *BUS-TAB BUSCA GLOSA DE CODIGO EN TABLA
       BUS-CLI.
           IF IDT-COD-CLIE IN SRT > SPACES
               MOVE 'ADM' TO TAB-COD-SIST
               MOVE 'CLI' TO TAB-COD-TTAB IN TAB
               MOVE IDT-COD-CLIE IN SRT TO TAB-COD-CTAB IN TAB
               PERFORM BUS-TAB
               MOVE TAB-GLS-DCOR IN TAB TO WSS-GLS-CLIE IN WSS-RAE.
      *BUS-TAB BUSCA GLOSA DE CODIGO EN TABLA
       BUS-PRO.
           IF IDT-COD-PROY IN SRT > SPACES
               MOVE 'ADM' TO TAB-COD-SIST
               MOVE 'PRO' TO TAB-COD-TTAB IN TAB
               MOVE IDT-COD-PROY IN SRT TO TAB-COD-CTAB IN TAB
               PERFORM BUS-TAB
               MOVE TAB-GLS-DCOR IN TAB TO WSS-GLS-PROY IN WSS-RAE.
      *BUS-TAB busca glosa de codigo en tabla
       BUS-ACT.
           IF IDT-COD-ACTI IN SRT > SPACES
               MOVE 'ADM' TO TAB-COD-SIST
               MOVE 'ACT' TO TAB-COD-TTAB IN TAB
               MOVE IDT-COD-ACTI IN SRT TO TAB-COD-CTAB IN TAB
               PERFORM BUS-TAB
               MOVE TAB-GLS-DESC IN TAB TO WSS-GLS-ACTI IN WSS-RAE.
      *BUS-TAB busca glosa de codigo en tabla
       BUS-ENT.
           IF IDT-COD-ENTI IN SRT > SPACES
               MOVE 'ADM' TO TAB-COD-SIST
               MOVE 'ENT' TO TAB-COD-TTAB IN TAB
               MOVE IDT-COD-ENTI IN SRT TO TAB-COD-CTAB IN TAB
               PERFORM BUS-TAB
               MOVE TAB-GLS-DESC IN TAB TO WSS-GLS-ENTI IN WSS-RAE.
       FIN-BUS-ENT.
      *>>>>
       LUP-OUT-SRT.
       GEN-OUT-SRT.
           GENERATE DL-RAE.
      *<<<< FIN_GEN_OUT
           IF 1 = WSS-IND-ENT
               GENERATE DL-AUX
               MOVE 0           TO WSS-IND-ENT
               MOVE ZEROES      TO WSS-VAL-HTOT, WSS-VAL-MTOT.

           IF 1 = WSS-IND-FUN
               MOVE 0           TO WSS-IND-FUN
               MOVE ZEROES      TO WSS-VAL-HFNC.

           ADD IDT-NUM-HTOT IN SRT TO WSS-VAL-HTOT.
           ADD IDT-NUM-MTOT IN SRT TO WSS-VAL-MTOT.
      * Optimizar, solo leer en cortes de control
           PERFORM BUS-FUN THRU BUS-ENT.
      *>>>>
       NXT-OUT-SRT.
           RETURN GNSSRT AT END
                GO TO FIN-OUT-SRT.
           GO TO LUP-OUT-SRT.
       FIN-OUT-SRT.
      *<<<< FIN_OUT
      *  Para hacer el calculo previo a imprimir DL-AUX,
      *    coherente con la secuencia del programa
           PERFORM DEC-CF-RAE-IDT-COD-ENTI.
           GENERATE DL-AUX.
      *  Para no volver a sumar al hacer los cortes de control por
      *    el final footing, coherente con la secuencia del programa
           MOVE ZEROES      TO WSS-VAL-HTOT, WSS-VAL-MTOT.
      *>>>>
           TERMINATE RPT-RAE.
           CLOSE RPTRAE.
       EXT-OUT-SRT.
           EXIT.

       COPY ADMBFIDT.
       COPY GNSBBSYS.
       COPY GNSBFTAB.
       COPY GNSBFMSG.

       GNS-PRO-END SECTION.
       INI-GNS-PRO-END.
           STOP RUN.
       FIN-GNS-PRO-END.
           EXIT.

      *<<<< EOF
       COPY GNSBBMSG.
       COPY GNSBBTAB.
       COPY GNSBGHOY.
       COPY GNSBGFEC.
      *>>>>
