*%! Codigo adicional para archivo LDCPARDC
*%! INCLUDE DE ELEMENTOS DE C.A. PARA PLATAFORMA COMERCIAL
*% IF PGM_CHI AND PGM_BCI
*%     INCLUDE 'GNSTXT:GNSPPPTC.TXT'
*% END
*% INCLUDE 'LDCSRCPAI:FNCSIS.SRC'
*% LARGO_MI_COMMAREA = 350
*% IF PGM_DTC
*% INCLUDE 'GNSSRC:MANEJO_VSI.SRC'
*% END
*% IF PGM_BMS AND FIN_SCR_VARI
      *<<<< PGM_BMS AND FIN_SCR_VARI
       COPY LDCWGENG.
           03 SCR-CLF     VALUE SPACES            PIC X(60).
           03 SCR-FS-RDC                          PIC 9(02).
           03 SCR-RDC-DISP    VALUE SPACES        PIC X(02).
           03 SCR-LDC     VALUE SPACES            PIC X(100).
      *>>>>
*% END
*% IF PGM_BMS AND WSS
      *<<<< PGM_BMS AND WSS
       COPY LDCWGPMP.
      *>>>>
*% END
*% IF WSS
      *<<<< WSS
       01  PGM-VAR-ADIC.
           03 PGM-STAT-ADIC.
              05 PGM-STAT-RDC           VALUE '23'      PIC X(02).
                 88 PGM-STAT-RDC-OKS    VALUE '00'.
                 88 PGM-STAT-RDC-NUL    VALUE '  '.
              05 PGM-STAT-DBC           VALUE '23'      PIC X(02).
                 88 PGM-STAT-DBC-OKS    VALUE '00'.
                 88 PGM-STAT-DBC-NUL    VALUE '  '.

       01  WSS-VARI.
           03  WSS-COD-COPE.
               05  WSS-COD-TOPE                   PIC X(03).
               05  WSS-COD-AOPE                   PIC X(03).
           03  WSS-NUM-PER                        PIC 9(03).
           03  WSS-IND-PER                        PIC X(01).
           03  RDC-KEY-IRDC.
               05  RDC-KEY-ICLI.
                   07  RDC-CAI-ICLI               PIC X(04).
                   07  RDC-IIC-ICLI               PIC 9(08).
               05  RDC-KEY-ICLF.
                   07  RDC-CAI-ICLF               PIC X(04).
                   07  RDC-IIC-ICLF               PIC 9(08).
           03  WSS-CIC-ICLF.
               05  WSS-CAI-ICLF VALUE SPACES      PIC X(04).
               05  WSS-IIC-ICLF VALUE ZEROES      PIC 9(08).
           03  WSS-IFLD       VALUE ZEROES        PIC 9(02).
           03  WSS-IMAX       VALUE ZEROES        PIC 9(02).
           03  WSS-MOV        VALUE ZEROES        PIC 9(02).
           03  WSS-FS-RDC     VALUE ZEROES        PIC 9(02).

*% IF PGM_DB2
           EXEC SQL INCLUDE SGCBRDBC END-EXEC.
       COPY GNSWGRQS REPLACING ==SQL-REQA== BY ==SQL-DBC-REQA==.
           EXEC SQL INCLUDE LDCBRRDC END-EXEC.
       COPY GNSWGRQS REPLACING ==SQL-REQA== BY ==SQL-RDC-REQA==.
*% ELSE
       COPY SGCBRDBC.
       COPY LDCBRRDC.
*% END
*% IF PGM_DTC
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-DBC-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-RDC-REQA==.
*% END
       COPY GNSWGCPT.
*% IF PGM_PU
      *<<<< PGM_PU
       COPY GNSWGHOY.
      *>>>>
*% END
      *>>>>
*% END
*% IF SYS_SCOD AND PGM_DB2 AND PGM_PQ
      *<<<< SYS_SCOD AND PGM_DB2 AND PGM_PQ
      *JSS-IBM
           IF SYS-SCOD = 'SD'
*%!            MOVE +{gnstca} TO SYS-TCMA
               MOVE +9000     TO SYS-TCMA
               EXEC CICS RETRIEVE
                 INTO(SCR-VARI) LENGTH(SYS-TCMA)
               END-EXEC.
      *>>>>
*% END
*% IF PGM_PQ AND INI_FIO
      *<<<< PGM_PQ AND INI_FIO
*% IF PGM_CHI AND PGM_BCI
      *<<<< ISP-INI  24-JAN-1996 11:35:48 
           IF SCR-OFRM-SRV
              MOVE WSS-IDX-IRDC TO SCR-IPRO
           ELSE
      *<<<< ISP-FIN  24-JAN-1996 11:35:48 
*% END
           IF SCR-DESDE-CMN
               MOVE SPACES TO SCR-VEC-ENG
               MOVE 1 TO SCR-IPRO
               GO TO FIN-INI-FIO.
           IF SCR-INST-EXT = WSS-INST-FPEN-CIC
               MOVE WSS-INST-NULL TO SCR-INST-EXT
               PERFORM ING-FPEN-CIC.
       FIN-INI-FIO.
      *>>>>
*% END
*% IF INI_FIO AND PGM_VMS
      *<<<< INI_FIO AND PGM_VMS

           MOVE FIO-ACCS-UPD TO FIO-ACCS.
           MOVE FIO-ACC      TO FIO-CMND.
           MOVE 'LDC'        TO FIO-SIST.
           PERFORM LDC-FIO-RDC.
           MOVE FIO-UPD TO FIO-CMND.
           PERFORM LDC-FIO-RDC.

           MOVE FIO-ACCS-UPD TO FIO-ACCS.
           MOVE FIO-ACC      TO FIO-CMND.
           MOVE 'TAB'        TO FIO-SIST.
           PERFORM GNS-FIO-TAB.
           MOVE FIO-INP TO FIO-CMND.
           PERFORM GNS-FIO-TAB.

           MOVE FIO-ACCS-UPD TO FIO-ACCS.
           MOVE FIO-ACC      TO FIO-CMND.
           MOVE 'DEU'        TO FIO-SIST.
           PERFORM GNS-FIO-TAB.
           MOVE FIO-INP TO FIO-CMND.
           PERFORM GNS-FIO-TAB.

           MOVE FIO-ACCS-UPD TO FIO-ACCS.
           MOVE FIO-ACC      TO FIO-CMND.
           MOVE 'SGC'        TO FIO-SIST.
           PERFORM SGC-FIO-DBC.
           MOVE FIO-INP TO FIO-CMND.
           PERFORM SGC-FIO-DBC.
      *>>>>
*% END
*% IF FIN_FND_KEY
      *<<<< FIN_FND_KEY
           IF NOT FIO-STAT-OKS
               MOVE 'DEU'        TO MSG-COD-SIST
               MOVE 'CLF    NEX' TO MSG-COD-MENS
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS
               MOVE '00' TO FIO-STAT
               MOVE SCR-STAT-CON TO SCR-STAT
               GO TO FIN-FND-KEY.

           MOVE '00' TO PGM-STAT-CLF.

           IF SCR-CMND = 'ACT' 
              IF CLF-MSC-STAT IN CLF = 'C'
      *        LDC eliminada o cerrada
                  MOVE 'DEU'           TO MSG-COD-SIST
                  MOVE 'CLF    EXTING' TO MSG-COD-MENS
                  PERFORM GET-MSG
                  MOVE MSG-GLS-DESC TO FRM-MENS
                  MOVE SCR-STAT-CON TO SCR-STAT
                  MOVE '00' TO FIO-STAT
                  GO TO FIN-FND-KEY
              ELSE
                  IF CLF-MSC-STAT IN CLF = 'R'
      *              CLF fue renovada
                      MOVE 'DEU'           TO MSG-COD-SIST
                      MOVE 'CLF    MCAYA' TO MSG-COD-MENS
                      PERFORM GET-MSG
                      MOVE MSG-GLS-DESC TO FRM-MENS
                      MOVE SCR-STAT-CON TO SCR-STAT
                      MOVE '00' TO FIO-STAT
                      GO TO FIN-FND-KEY
                  ELSE
                      IF CLF-MSC-STAT IN CLF = 'A'
      *               LDC activada 
                         MOVE 'DEU'          TO MSG-COD-SIST
                         MOVE 'CLF    ACAYA' TO MSG-COD-MENS
                         PERFORM GET-MSG
                         MOVE MSG-GLS-DESC TO FRM-MENS
                         MOVE SCR-STAT-CON TO SCR-STAT
                         MOVE '00' TO FIO-STAT
                         GO TO FIN-FND-KEY.

           MOVE 01   TO SCR-FS-RDC.
           MOVE CLF-KEY-ICLF IN CLF TO RDC-KEY-ICLF IN RDC.
           MOVE CLF-CAI-ICLF IN CLF TO RDC-CAI-ICLF IN WSS-VARI.
           MOVE CLF-IIC-ICLF IN CLF TO RDC-IIC-ICLF IN WSS-VARI.
           MOVE 'RDC-KEY-ICLF'      TO FIO-AKEY.
           MOVE FIO-GET-NLS TO FIO-CMND.

       LEE-RDC.
           PERFORM LDC-FIO-RDC.
           IF NOT FIO-STAT-OKS OR
              CLF-KEY-ICLF IN CLF NOT = RDC-KEY-ICLF IN RDC
              MOVE ZEROES TO SCR-FS-RDC

              IF FIO-STAT-OKS
                  MOVE 'RDC-KEY-ICLF' TO FIO-AKEY
                  MOVE FIO-END-BRW TO FIO-CMND
                  PERFORM LDC-FIO-RDC
                  IF SCR-CMND = 'ACT' 
                      GO TO FIN-FND-KEY
                  ELSE
                      MOVE 'DEU'          TO MSG-COD-SIST
                      MOVE 'CLF    NORDC' TO MSG-COD-MENS
                      PERFORM GET-MSG
                      MOVE MSG-GLS-DESC TO FRM-MENS
                      MOVE SCR-STAT-CON TO SCR-STAT
                      GO TO FIN-FND-KEY
              ELSE 
                  IF SCR-CMND = 'ACT' 
                      GO TO FIN-FND-KEY
                  ELSE
                      MOVE 'DEU'          TO MSG-COD-SIST
                      MOVE 'CLF    NORDC' TO MSG-COD-MENS
                      PERFORM GET-MSG
                      MOVE MSG-GLS-DESC TO FRM-MENS
                      MOVE SCR-STAT-CON TO SCR-STAT
                      GO TO FIN-FND-KEY.

       CARGA-RDC.
           MOVE SPACES TO MSG-COD-MENS.
           MOVE ZEROES TO WSS-IFLD.
           MOVE 12     TO WSS-IMAX.
           PERFORM PUT-TAB-RDC.
           IF WSS-IFLD < WSS-IMAX
              ADD 1 TO WSS-IFLD
              PERFORM LIM-RES-LIN UNTIL WSS-IFLD > WSS-IMAX.

           IF MSG-COD-MENS > SPACES
               MOVE 'DEU' TO MSG-COD-SIST
               MOVE SPACES TO FIO-AKEY
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS.

           MOVE '00' TO FIO-STAT.
           GO TO FIN-FND-KEY.
      *>>>>
*% END
*% IF INI_CMN_MOD
      *<<<< INI_CMN_MOD
           MOVE CLF-CAI-ICLF IN RDC-FLD TO RDC-CAI-ICLF IN WSS-VARI.
           MOVE CLF-IIC-ICLF IN RDC-FLD TO RDC-IIC-ICLF IN WSS-VARI.
           IF SCR-FS-RDC > ZEROES
              PERFORM DEL-RDC
              IF MSG-COD-MENS > SPACES
      *          ERROR INCONSISTENCIA EN LA ELIMINACION : INFORMAR
                 GO TO FIN-CMN-MOD.
           GO TO GEN-RDC.
      *>>>>
*% END
*% IF FIN_CMN_MOD
      *<<<< FIN_CMN_MOD
       GEN-RDC.
           MOVE ZEROS TO WSS-IFLD  WSS-MOV.
           PERFORM PUT-RDC  VARYING WSS-IFLD FROM 1 BY 1 UNTIL
                                                      WSS-IFLD > 12.

       MOD-CLF.
           MOVE CLF-CAI-ICLF IN RDC-FLD TO CLF-CAI-ICLF IN CLF.
           MOVE CLF-IIC-ICLF IN RDC-FLD TO CLF-IIC-ICLF IN CLF.
           MOVE FIO-GET-KEY-UPD TO FIO-CMND.
           PERFORM LDC-FIO-CLF.
           IF NOT FIO-STAT-OKS
               GO TO FIN-CMN-MOD.
           MOVE 'I' TO CLF-MSC-STAT IN CLF.
           MOVE FIO-MOD TO FIO-CMND.
           PERFORM LDC-FIO-CLF.

*% IF PGM_BMS
      *<<<< PGM_BMS
           IF SCR-IND-ENG IN SCR-VEC-ENG(SCR-IPRO) = 'S'
               PERFORM EGR-FPEN-CIC.
      *>>>>
*% END
      *>>>>
*% END
*% IF PGM_BMS AND FIN_CMN_ING OR SCR_GFLD_VAL_MKY
      *<<<< PGM_BMS AND FIN_CMN_ING OR SCR_GFLD_VAL_MKY
           IF FRM-FFLD = FRM-FFLD-PF10 AND
              SCR-IND-ENG IN SCR-VEC-ENG(SCR-IPRO) = 'S'
               PERFORM EGR-FPEN-CIC.
      *>>>>
*% END
*% IF PGM_BMS AND FIN_SCR_GIKY OR FIN_SCR_GCNF OR FIN_SCR_GFLD
      *<<<< PGM_BMS AND FIN_SCR_GIKY OR FIN_SCR_GCNF OR FIN_SCR_GFLD
           IF FRM-FFLD = FRM-FFLD-PF3 AND
              SCR-IND-ENG IN SCR-VEC-ENG(SCR-IPRO) = 'S'
                   PERFORM EGR-FTER-CIC.
      *>>>>
*% END
*% IF PGM_BMS AND EOF
      *<<<< PGM_BMS AND EOF

*% IF PGM_PQ
      *<<<< PGM_PQ
      *  CODIGO ADICIONAL PARA ENGANCHE PROGRAMAS
       ING-FPEN-CIC SECTION.
       INI-ING-FPEN-CIC.
           MOVE LOW-VALUES TO RDC-FLD.
           PERFORM ING-SETE.
           PERFORM SCR-CLRA-RDC.
           PERFORM HBL-IKY.
           PERFORM HBL-KEY-RDC.
       FIN-ING-FPEN-CIC.
           EXIT.

       ING-SETE SECTION.
       INI-ING-SETE.
           PERFORM CRG-TBL-ENG.
           MOVE WSS-NTRN(SCR-IPRO)     TO SCR-NTRN.
           MOVE WSS-PROG(SCR-IPRO)     TO SCR-PROG.
           MOVE WSS-NMAP(SCR-IPRO)     TO SCR-NMAP.
           MOVE WSS-NLIB(SCR-IPRO)     TO SCR-NLIB.

           MOVE WSS-NTRV(SCR-IPRO)     TO SCR-NTRV.
           MOVE WSS-PROV(SCR-IPRO)     TO SCR-PROV.
       FIN-ING-SETE.
           EXIT.

       HBL-KEY-RDC SECTION.
       INI-HBL-KEY-RDC.
           MOVE SPACES TO MSG-COD-MENS.
           MOVE LOW-VALUES TO RDC-FLD.
           PERFORM SCR-CLRA-RDC.
           MOVE SCR-CAI-ICLF IN SCR-VARI TO CLF-CAI-ICLF IN RDC-FLD.
           MOVE SCR-IIC-ICLF IN SCR-VARI TO CLF-IIC-ICLF IN RDC-FLD.
           MOVE SCR-CAI-ICLF IN SCR-VARI TO CLF-CAI-ICLF IN CLF.
           MOVE SCR-IIC-ICLF IN SCR-VARI TO CLF-IIC-ICLF IN CLF.

           MOVE 'ACT'        TO SCR-CMND.
           MOVE 'MOD'        TO SCR-CCPP.
           PERFORM FND-KEY.

      * FLB 24/JUL/92 DIO ALGO MALO 
      * FLB 24/JUL/92 LE AGREGUE QUE SE VAYA Y NO HABILITE LOS CAMPOS
           IF MSG-COD-MENS > SPACES
               MOVE SCR-INST-GKY TO SCR-INST
      *    MOVE FRM-CPSF-AEY TO FRM-CPIM-AEY
               PERFORM PRO-ALL
               PERFORM UNP-IKY-RDC
               PERFORM EDT-KEY-RDC

               PERFORM SCR-MSSG
               IF SCR-IND-FST IN SCR-VEC-FST(SCR-IPRO) = 'S'
                   MOVE SPACES TO SCR-IND-FST IN SCR-VEC-FST(SCR-IPRO)
                   PERFORM SCR-INIT
                   PERFORM SCR-EXIT
                   GO TO FIN-HBL-KEY-RDC
               ELSE
                   PERFORM SCR-PUTA
                   PERFORM SCR-EXIT
                   GO TO FIN-HBL-KEY-RDC.

           PERFORM PUT-CLF-RDC.

           MOVE +4 TO CLF-CAI-ICLF-LEN IN RDC-FLD.
      *ISP   25-JUL-1990 DEBE SER REEMPLAZADO POR VARIABLE
      *     INHIBE MOVE FRM-CPSF TO FRM-CPIM-AEY
           MOVE '1' TO FRM-CPIM-AEY.
      *ISP EN HBL-FLD
           PERFORM HBL-FLD.
           MOVE FRM-CPIM-AEY TO CLF-CAI-ICLF-ATR IN RDC-FLD.
           MOVE FRM-CPIM-AEY TO CLF-IIC-ICLF-ATR IN RDC-FLD.

           MOVE SCR-INST-GFL TO SCR-INST.

           PERFORM EDT-KEY-RDC.
           PERFORM EDT-FLD-RDC.

           MOVE 'GNS' TO MSG-COD-SIST.
           MOVE 'FLDING' TO MSG-COD-MENS.
           PERFORM GET-MSG.
           MOVE MSG-GLS-DESC TO FRM-MENS.
           PERFORM SCR-MSSG.

           IF SCR-IND-FST IN SCR-VEC-FST(SCR-IPRO) = 'S'
               MOVE SPACES TO SCR-IND-FST IN SCR-VEC-FST(SCR-IPRO)
               PERFORM SCR-INIT
               PERFORM STP-EXIT
           ELSE
               PERFORM SCR-PUTA.
*% IF PGM_CHI AND PGM_BCI
      *<<<< ISP-INI  24-JAN-1996 11:35:48 
           IF SCR-OFRM-SRV
                EXEC CICS
                 RETURN
                END-EXEC.
      *<<<< ISP-FIN  24-JAN-1996 11:35:48 
*% END
           PERFORM SCR-EXIT.
       FIN-HBL-KEY-RDC.
           EXIT.

      *>>>>
*% END

       EGR-FTER-CIC SECTION.
       INI-EGR-FTER-CIC.
*% IF PGM_PQ
      *<<<< PGM_PQ
           MOVE 'S' TO SCR-IND-ENG IN SCR-VEC-ENG(WSS-IDX-ILDC).
           MOVE 'S' TO SCR-IND-FST IN SCR-VEC-FST(WSS-IDX-ILDC).
           SUBTRACT 1 FROM WSS-IDX-ILDC GIVING SCR-IPRO.
           MOVE 'ING'        TO SCR-CMND.
           MOVE 'ING'        TO SCR-CCPP.
           PERFORM EGR-FPEN-CIC.
*% ELSE
           PERFORM CRG-TBL-ENG.
           MOVE WSS-IDX-ICLF TO SCR-IPRO.
           MOVE WSS-INST-FTER-CIC TO SCR-INST-EXT.
           MOVE WSS-PROG(SCR-IPRO) TO SYS-PROG.
           MOVE 'ING'        TO SCR-CMND.
           MOVE 'ING'        TO SCR-CCPP.
           MOVE SCR-VARI TO SYS-CMMA.
*% IF NOT PGM_DB2
      *<<<< NOT PGM_DB2
           MOVE SCR-TCMA TO SYS-TCMA.
           MOVE SYS-XCTL TO SYS-CMND.
*% IF PGM_CHI AND PGM_BCI
      *<<<< ISP-INI  24-JAN-1996 11:35:48 
           IF SCR-OFRM-SRV
               MOVE WSS-IDX-IRDC TO SCR-IPRO
           ELSE
      *<<<< ISP-FIN  24-JAN-1996 11:35:48 
*% END
           PERFORM GNS-PRO-SYS.
      *>>>>
*% ELSE
      *<<<< PGM_DB2
*%!        MOVE +{gnstca} TO SYS-TCMA.
           MOVE SCR-TCMA  TO SYS-TCMA.
           EXEC CICS START
                TRANSID( WSS-NTRN IN WSS-PPRO(SCR-IPRO) )
                TERMID ( EIBTRMID )
                FROM   ( SYS-CMMA )
                LENGTH ( SYS-TCMA )
           END-EXEC.
           EXEC CICS RETURN
           END-EXEC.
      *>>>>
*% END
      *>>>>
*% END
       FIN-EGR-FTER-CIC.
           EXIT.

       EGR-FPEN-CIC SECTION.
       INI-EGR-FPEN-CIC.
           PERFORM CRG-TBL-ENG.
           ADD 1 TO SCR-IPRO.
           IF SCR-IPRO > WSS-TOT-IIDX
                  PERFORM EGR-FTER-CIC
                  GO TO FIN-EGR-FPEN-CIC.
           IF SCR-IND-ENG IN SCR-VEC-ENG(SCR-IPRO) = SPACES
               GO TO INI-EGR-FPEN-CIC.
           MOVE WSS-INST-FPEN-CIC TO SCR-INST-EXT.
           MOVE WSS-PROG(SCR-IPRO) TO SYS-PROG.

*% IF PGM_CHI AND PGM_BCI AND PGM_PU
      *<<<< ISP-INI  24-JAN-1996 11:35:48 
      *      PARA PLATAFORMA NO DEBE CAMBIAR COMANDO
           IF NOT SCR-OFRM-SRV
                MOVE 'ING'        TO SCR-CMND
                MOVE 'ING'        TO SCR-CCPP.
      *<<<< ISP-FIN  24-JAN-1996 11:35:48 
*% ELSE
           MOVE 'ING'        TO SCR-CMND.
           MOVE 'ING'        TO SCR-CCPP.
*% END

           MOVE SCR-VARI TO SYS-CMMA.
*% IF NOT PGM_DB2
      *<<<< NOT PGM_DB2
           MOVE SCR-TCMA TO SYS-TCMA.
           MOVE SYS-XCTL TO SYS-CMND.
*% IF PGM_CHI AND PGM_BCI AND PGM_PU
      *<<<< ISP-INI  24-JAN-1996 11:35:48 
           IF SCR-OFRM-SRV
               MOVE WSS-IDX-IRDC TO SCR-IPRO
           ELSE
      *<<<< ISP-FIN  24-JAN-1996 11:35:48 
*% END
           PERFORM GNS-PRO-SYS.
      *>>>>
*% ELSE
      *<<<< PGM_DB2
*%!        MOVE +{gnstca} TO SYS-TCMA.
           MOVE SCR-TCMA  TO SYS-TCMA.
           EXEC CICS START
                TRANSID( WSS-NTRN IN WSS-PPRO(SCR-IPRO) )
                TERMID ( EIBTRMID )
                FROM   ( SYS-CMMA )
                LENGTH ( SYS-TCMA )
           END-EXEC.
           EXEC CICS RETURN
           END-EXEC.
      *>>>>
*% END
       FIN-EGR-FPEN-CIC.
           EXIT.

       SCR-INIT SECTION.
       INI-SCR-INIT.
           MOVE 3  TO FRM-PLIN.
           MOVE 19 TO FRM-NLIN.
           MOVE FRM-CLR-FRM TO FRM-CMND.
           PERFORM GNS-PRO-FRM.
           MOVE FRM-SINI-DBNF TO FRM-SINI.
           MOVE SCR-NMAP TO FRM-NAME.
           MOVE SCR-NLIB TO FRM-NLIB.
           MOVE RDC-FLD TO FRM-DFLD.
           MOVE FRM-INI TO FRM-CMND.
           PERFORM GNS-PRO-FRM.
       FIN-SCR-INIT.
           EXIT.

       COPY LDCBGMPT.

      *>>>>
*% END
*% IF EOF
      *<<<< EOF
       COPY GNSBVCOD.
       COPY GNSBVTAB.
*% IF PGM_DB2 
      *<<<< PGM_DB2 
           EXEC SQL INCLUDE SGCBFDBC END-EXEC.
           EXEC SQL INCLUDE LDCBFRDC END-EXEC.
      *>>>>
*% ELSE
      *<<<< NOT PGM_DB2 
       COPY SGCBFDBC.
       COPY LDCBFRDC.
      *>>>>
*% END
       COPY GNSBGCPT.

*% IF PGM_PQ
      *<<<< PGM_PQ
       PUT-TAB-RDC SECTION.
       INI-PUT-TAB-RDC.
           ADD 1 TO WSS-IFLD.
           IF WSS-IFLD > WSS-IMAX
              GO TO FIN-PUT-TAB-RDC.

           MOVE RDC-CAI-ICLI IN RDC TO DBC-CAI-ICLI IN DBC.
           MOVE RDC-IIC-ICLI IN RDC TO DBC-IIC-ICLI IN DBC.
      *KEY-CLI BUSCA CLIENTE POR MEDIO DE CIC
           MOVE 'DBC-KEY-IDBC'  TO FIO-AKEY.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM SGC-FIO-DBC.
           MOVE FIO-STAT TO PGM-STAT-DBC.
           IF NOT FIO-STAT-OKS
      *  cliente inexistente
              MOVE 'TAB' TO MSG-COD-SIST
              MOVE 'CLI    NEX' TO MSG-COD-MENS
              PERFORM GET-MSG
              MOVE MSG-GLS-DESC TO FRM-MENS
              MOVE FIO-STAT-NEX TO PGM-STAT-DBC
              MOVE SCR-STAT-CON TO SCR-STAT
              GO TO FIN-PUT-TAB-RDC.

           MOVE DBC-NUM-ICLI IN DBC TO FRM-NUM-ICLI
                                             IN RDC-FLD(WSS-IFLD).
           MOVE DBC-VRF-ICLI IN DBC TO FRM-VRF-ICLI
                                             IN RDC-FLD(WSS-IFLD).
           MOVE DBC-IND-ICLI IN DBC TO FRM-IND-ICLI
                                             IN RDC-FLD(WSS-IFLD).
           MOVE DBC-GLS-ICLI IN DBC TO FRM-GLS-ICLI
                                             IN RDC-FLD(WSS-IFLD).
           MOVE DBC-GLS-NOMC IN DBC TO CPT-STRN
           PERFORM CPT-BLKS.
           MOVE CPT-STRN TO FRM-GLS-NOMC IN RDC-FLD(WSS-IFLD).

       NXT-PUT-TAB-RDC.
           MOVE 'RDC-KEY-ICLF' TO FIO-AKEY.
           MOVE FIO-GET-NXT    TO FIO-CMND.
           PERFORM LDC-FIO-RDC.
           IF FIO-STAT-OKS AND
              RDC-CAI-ICLF IN WSS-VARI = RDC-CAI-ICLF IN RDC AND
              RDC-IIC-ICLF IN WSS-VARI = RDC-IIC-ICLF IN RDC
               GO TO INI-PUT-TAB-RDC.

           IF FIO-STAT-OKS
               MOVE 'RDC-KEY-ICLF' TO FIO-AKEY
               MOVE FIO-END-BRW TO FIO-CMND
               PERFORM LDC-FIO-RDC.
       FIN-PUT-TAB-RDC.
           EXIT.

       LIM-RES-LIN SECTION.
       INI-LIM-RES-LIN.
           MOVE ZEROES TO FRM-NUM-ICLI   IN RDC-FLD(WSS-IFLD).

           MOVE SPACES TO FRM-VRF-ICLI   IN RDC-FLD(WSS-IFLD).
           MOVE SPACES TO FRM-IND-ICLI   IN RDC-FLD(WSS-IFLD).
           MOVE IDC-INIC-GLS TO FRM-GLS-ICLI   IN RDC-FLD(WSS-IFLD).
           MOVE SPACES TO FRM-GLS-NOMC   IN RDC-FLD(WSS-IFLD).
           ADD 1 TO WSS-IFLD.
       FIN-LIM-RES-LIN.
           EXIT.

      *>>>>
*% END
*% IF PGM_PU
      *<<<< PGM_PU
       PUT-RDC SECTION.
       INI-PUT-RDC.
      *FLB CST  24-AUG-1994 CORRIGE PROBLEMA INFORMADO POR MOR BCI
      * NO OCURRIA EN BCP Y BRB
           IF FRM-NUM-ICLI IN RDC-FLD(WSS-IFLD) = ZEROES
              GO TO FIN-PUT-RDC.
      *FLB CST  24-AUG-1994 CORRIGE PROBLEMA INFORMADO POR MOR BCI

           ADD 1 TO WSS-MOV.
      *FLB CST  1-MAR-1995 
           MOVE SPACES                  TO RDC-GLS-FLAG IN RDC.
           IF SCR-CCPP = 'ING'
               MOVE 'I' TO RDC-MSC-TACC IN RDC
               MOVE 'I' TO RDC-MSC-STAT IN RDC
           ELSE
           IF SCR-CCPP = 'MOD'
               MOVE 'M' TO RDC-MSC-TACC IN RDC
               MOVE 'M' TO RDC-MSC-STAT IN RDC.

           PERFORM GET-FHOY.
      *    Fecha Transaccion
           MOVE HOY-FHOY TO RDC-FEC-FTRN IN RDC.
      *    Hora Transaccion
           MOVE HOY-HHOY TO RDC-HRA-HRTR IN RDC.
      *    Codigo Origen transaccion
      *<<<< NOT PGM_VMS
           MOVE SCR-OTRN TO RDC-COD-OTRN IN RDC.
      *    Autor Transaccion
           MOVE SCR-USER TO RDC-COD-ATRN IN RDC.
      *FLB CST  1-MAR-1995 FIN
           MOVE CLF-CAI-ICLF IN RDC-FLD TO RDC-CAI-ICLF IN RDC.
           MOVE CLF-IIC-ICLF IN RDC-FLD TO RDC-IIC-ICLF IN RDC.

      *IDC-CLI BUSCA CLIENTE POR MEDIO DE IDC
           MOVE FRM-NUM-ICLI IN RDC-FLD(WSS-IFLD) TO DBC-NUM-ICLI IN DBC
           MOVE FRM-IND-ICLI IN RDC-FLD(WSS-IFLD) TO DBC-IND-ICLI IN DBC
           MOVE FRM-GLS-ICLI IN RDC-FLD(WSS-IFLD) TO DBC-GLS-ICLI IN DBC
           MOVE 'DBC-IDC-ICLI'  TO FIO-AKEY.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM SGC-FIO-DBC.
           IF NOT FIO-STAT-OKS
              MOVE 'TAB' TO MSG-COD-SIST
              MOVE 'CLI    NEX' TO MSG-COD-MENS
              PERFORM GET-MSG
              MOVE MSG-GLS-DESC TO FRM-MENS
              MOVE FIO-STAT-NEX TO PGM-STAT-DBC
              MOVE SCR-STAT-CON TO SCR-STAT
              MOVE 13 TO WSS-IFLD
              GO TO FIN-PUT-RDC.

           MOVE DBC-CAI-ICLI IN DBC TO RDC-CAI-ICLI IN RDC.
           MOVE DBC-IIC-ICLI IN DBC TO RDC-IIC-ICLI IN RDC.
           MOVE 100                     TO RDC-VAL-PRDC IN RDC.
           MOVE SPACES                  TO RDC-COD-RDCF IN RDC.
           MOVE SPACES                  TO RDC-GLS-DISP IN RDC.

           MOVE FIO-PUT TO FIO-CMND.
           PERFORM LDC-FIO-RDC.
           IF NOT FIO-STAT-OKS
      *          ERROR INCONSISTENCIA EN LA ELIMINACION : INFORMAR
              MOVE FIO-MENS TO FRM-MENS
              MOVE 13 TO WSS-IFLD.
       FIN-PUT-RDC.
           EXIT.

       VAL-RDC-IGUA SECTION.
       INI-VAL-RDC-IGUA.
           IF NOT (
              FRM-NUM-ICLI IN RDC-FLD(WSS-IFLD) NOT = ZEROES OR
              FRM-VRF-ICLI IN RDC-FLD(WSS-IFLD) > SPACES 
                   ) OR
              WSS-IFLD = FRM-IFLD
                GO TO FIN-VAL-RDC-IGUA.

           IF FRM-NUM-ICLI IN RDC-FLD(FRM-IFLD) =
                       FRM-NUM-ICLI IN RDC-FLD(WSS-IFLD) AND 

              FRM-VRF-ICLI IN RDC-FLD(FRM-IFLD) =
                       FRM-VRF-ICLI IN RDC-FLD(WSS-IFLD) AND

              FRM-IND-ICLI IN RDC-FLD(FRM-IFLD) =
                       FRM-IND-ICLI IN RDC-FLD(WSS-IFLD) AND

              FRM-GLS-ICLI IN RDC-FLD(FRM-IFLD) =
                       FRM-GLS-ICLI IN RDC-FLD(WSS-IFLD) 

               MOVE 'RDC=S' TO MSG-COD-MENS.
       FIN-VAL-RDC-IGUA.
           EXIT.

       DEL-RDC SECTION.
       INI-DEL-RDC.
           MOVE SPACES                   TO RDC-CIC-ICLI IN RDC.

           MOVE RDC-KEY-ICLF IN WSS-VARI TO RDC-KEY-ICLF IN RDC.
           MOVE FIO-GET-NLS TO FIO-CMND.
       LUP-DEL-RDC.
           MOVE 'RDC-KEY-ICLF' TO FIO-AKEY.
           PERFORM LDC-FIO-RDC.
           IF FIO-STAT-OKS
              MOVE 'RDC-KEY-ICLF' TO FIO-AKEY
              MOVE FIO-END-BRW TO FIO-CMND
              PERFORM LDC-FIO-RDC.

           IF NOT ( FIO-STAT-OKS AND
                    RDC-KEY-ICLF IN WSS-VARI = RDC-KEY-ICLF IN RDC )
              MOVE '00' TO FIO-STAT
              GO TO FIN-DEL-RDC.

           MOVE 'RDC-KEY-IRDC' TO FIO-AKEY.
           MOVE FIO-GET-KEY-UPD TO FIO-CMND.
           PERFORM LDC-FIO-RDC.
           IF NOT FIO-STAT-OKS
              GO TO FIN-DEL-RDC.

           MOVE 'RDC-KEY-IRDC' TO FIO-AKEY.
           MOVE FIO-DEL TO FIO-CMND.
           PERFORM LDC-FIO-RDC.
           IF NOT FIO-STAT-OKS
               MOVE 'DEU'        TO MSG-COD-SIST
               MOVE 'RDC    DEL' TO MSG-COD-MENS
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS
               GO TO FIN-DEL-RDC.

           MOVE RDC-KEY-ICLF IN WSS-VARI TO RDC-KEY-ICLF IN RDC.
*% IF PGM_DB2 
           MOVE FIO-GET-NXT TO FIO-CMND.
*% ELSE
           MOVE FIO-GET-NLS TO FIO-CMND.
*% END
           GO TO LUP-DEL-RDC.
       FIN-DEL-RDC.
           EXIT.

       COPY GNSBGHOY.
      *>>>>
*% END

      *>>>>
*% END
