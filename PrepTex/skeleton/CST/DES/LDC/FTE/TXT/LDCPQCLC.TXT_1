*%! Codigo adicional para archivo
*% INCLUDE 'PAISRC:FNCSIS.SRC'
*% LARGO_TOTAL_COMMAREA = 269
*%! LARGO_MI_COMMAREA = 19
*% IF MI_COMMAREA
      *<<<< MI_COMMAREA
           03 CMA-VARI.
              05  WSS-IND-ACUM          VALUE 0       PIC 9(01).
                 88 DESPLIEGA           VALUE 0.
                 88 ACUMULA             VALUE 0.
                 88 SOLO-ACUMULA        VALUE 1.
                 88 YA-ACUMULO          VALUE 1.
              05 WSS-VAL-CDIS      COMP-3             PIC S9(11).
              05 WSS-VAL-CUTI      COMP-3             PIC S9(11).
              05 SCR-IND-MCLI                         PIC X(01).
      *ALD-BNL
              05 SCR-IMAX          COMP               PIC S9(04).
              05 SCR-I             COMP               PIC S9(04).
              05 SCR-IND-OCIC                         PIC X(01).
      *>>>>
*% END
*% IF WSS
      *<<<< WSS
*% IF PGM_DTC
      *<<<< PGM_DTC
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-CRI-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-FIA-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-REC-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-RCE-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-CIC-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-DBC-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-DCP-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-DCE-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-OFI-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-USR-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-CAM-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-GDG-REQA==.

       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-ARC-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-ARG-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-LDC-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-RDC-REQA==.
      *>>>>
*% END
*% IF NOT PGM_DB2
      * Entidades de LDC
       COPY LDCBRLDC.
       COPY LDCBRARC.
       COPY LDCBRARG.
       COPY LDCBRRDC.
      * Entidades de SGC
       COPY SGCBRDBC.
       COPY SGCBRREC.
      * Entidades de DEU
       COPY DEUBRCRI.
       COPY DEUBRFIA.
*% ELSE
           EXEC SQL INCLUDE LDCBRLDC END-EXEC.
       COPY GNSWGRQS REPLACING ==SQL-REQA== BY ==SQL-LDC-REQA==.
           EXEC SQL INCLUDE LDCBRARC END-EXEC.
       COPY GNSWGRQS REPLACING ==SQL-REQA== BY ==SQL-ARC-REQA==.
           EXEC SQL INCLUDE LDCBRARG END-EXEC.
       COPY GNSWGRQS REPLACING ==SQL-REQA== BY ==SQL-ARG-REQA==.
           EXEC SQL INCLUDE LDCBRRDC END-EXEC.
       COPY GNSWGRQS REPLACING ==SQL-REQA== BY ==SQL-RDC-REQA==.
           EXEC SQL INCLUDE SGCBRDBC END-EXEC.
       COPY GNSWGRQS REPLACING ==SQL-REQA== BY ==SQL-DBC-REQA==.
           EXEC SQL INCLUDE SGCBRREC END-EXEC.
       COPY GNSWGRQS REPLACING ==SQL-REQA== BY ==SQL-REC-REQA==.
           EXEC SQL INCLUDE DEUBRCRI END-EXEC.
       COPY GNSWGRQS REPLACING ==SQL-REQA== BY ==SQL-CRI-REQA==.
           EXEC SQL INCLUDE DEUBRFIA END-EXEC.
       COPY GNSWGRQS REPLACING ==SQL-REQA== BY ==SQL-FIA-REQA==.
*% END
*% IF PGM_BSH
      * Entidades de GAR
       COPY GARBRGDG.
*% ELSE
*% IF PGM_DB2
           EXEC SQL INCLUDE GARBRGDG END-EXEC.
       COPY GNSWGRQS REPLACING ==SQL-REQA== BY ==SQL-GDG-REQA==.
*% ELSE
      * Entidades de GAR
       COPY GARBRGDG.
*% END
*% END

      * Entidades de GNS
       COPY GNSBRRCE.
       COPY GNSWGCPT.
       COPY GNSWGSTR.
       COPY GNSWGFEC.
       COPY GNSWGHOY.
      * Entidades de TAB
       COPY TABBROFI.
       COPY TABBRUSR.
       COPY LDCWGCCU.
       COPY LDCWGCEG.
       01  CLC-VARI.
           03 CLF-VEZ-ARC                            PIC X(01).
           03 CLF-PRM-VEZ-ARC      VALUE 'P'         PIC X(01).
           03 CLF-OTR-VEZ-ARC      VALUE 'O'         PIC X(01).
           03 CLF-VEZ-ARG                            PIC X(01).
           03 CLF-PRM-VEZ-ARG      VALUE 'P'         PIC X(01).
           03 CLF-OTR-VEZ-ARG      VALUE 'O'         PIC X(01).
           03 CLC-I                COMP              PIC S9(04).
           03 CLC-EXI-ARC                            PIC X(01).
           03 CLC-EXI-ARG                            PIC X(01).
           03 CLC-IMP                                PIC X(01).
           03 CLC-SI-IMP    VALUE 'S'                PIC X(01).
           03 CLC-NO-IMP    VALUE 'S'                PIC X(01).
           03 CLC-NAME-QUE.
              05 CLC-TERM                            PIC X(04).
              05 CLC-TYPE      VALUE 'CLC'           PIC X(04).
      *<<<< 
           03 CLC-LONG-TS   COMP VALUE +608          PIC S9(04).
      *>>>>
           03 CLC-TS.
              05 CLC-VEC-TS OCCURS 8.
*% IF PGM_DB2
                 07 CLC-NUM-ILDC         COMP       PIC S9(04).
*% ELSE
                 07 CLC-NUM-ILDC                     PIC 9(02).
*% END
                 07 CLC-IND-VIGE                     PIC X(01).
                 07 CLC-COD-VCLC                     PIC X(04).
                 07 CLC-COD-TOOC                     PIC X(05).
                 07 CLC-COD-AOOC                     PIC X(08).
                 07 CLC-COD-TOGA                     PIC X(05).
                 07 CLC-COD-AOGA                     PIC X(08).
                 07 CLC-NUM-PORG                     PIC 9(03).
                 07 CLC-IND-MGAR                     PIC X(01).
      *<<<< 
                 07 CLC-COD-SGAR                     PIC X(01).
      *>>>>
                 07 CLC-FEC-FVEN.
                    09 CLC-NUM-DVEN                  PIC 9(02).
                    09 CLC-NUM-MVEN                  PIC 9(02).
                    09 CLC-NUM-SVEN                  PIC 9(02).
                    09 CLC-NUM-AVEN                  PIC 9(02).
                 07 CLC-VAL-CMLC                     PIC S9(11)V9(4).
                 07 CLC-VAL-CDLC                     PIC S9(11)V9(4).

      * DEFINE 01  WSS-VARI DE PGM1ANIDX
       01  WSS-VARI.
      * SMC-INI 23-11-1993
           03 WSS-FEC-FCIE     VALUE 0            PIC 9(08).
           03 WSS-CIC-ICLF                        PIC X(12).
      * SMC-FIN 23-11-1993
           03 WSS-IMAX                  VALUE 8    PIC 9(02).
      * PARA USAR GARSRC:ERRFNDKEY.SRC
           03 WSS-IBUS                             PIC 9(01).
           03 WSS-IBUS-LDC                         PIC 9(01).
           03 WSS-YA-ACUMULO            VALUE 1    PIC 9(01).

           03 WSS-I                 VALUE ZEROES   PIC 9(02).

           03 WSS-IND-LDC               VALUE 'N'  PIC X(01).
           03 PGM-STAT-ADI.
              05 PGM-STAT-RDC           VALUE '23' PIC X(02).
                   88 PGM-STAT-RDC-OKS  VALUE '00'.
                   88 PGM-STAT-RDC-NUL  VALUE '  '.
           03 WSS-FEC-FHOY.
              05 WSS-NUM-SHOY                      PIC 9(02).
              05 WSS-NUM-AHOY                      PIC 9(02).
              05 WSS-NUM-MHOY                      PIC 9(02).
              05 WSS-NUM-DHOY                      PIC 9(02).
              05  WSS-COD-PESO                           PIC X(06).
           03  ARC-KEY-IARC.
               05  ARC-KEY-ILDC.
                   07 ARC-CAI-ICLF                       PIC X(04).
                   07 ARC-IIC-ICLF                       PIC 9(08).
*% IF PGM_DB2
                   07 ARC-NUM-ILDC  COMP                 PIC S9(04).
               05 ARC-NUM-IARC      COMP                 PIC S9(04).
*% ELSE
                   07 ARC-NUM-ILDC                       PIC 9(02).
               05 ARC-NUM-IARC                           PIC 9(01).
*% END
           03  ARG-KEY-IARG.
               05 ARG-KEY-ILDC.
                   07 ARG-CAI-ICLF                       PIC X(04).
                   07 ARG-IIC-ICLF                       PIC 9(08).
*% IF PGM_DB2
                   07 ARG-NUM-ILDC  COMP                 PIC S9(04).
               05 ARG-NUM-IARG      COMP                 PIC S9(04).
*% ELSE
                   07 ARG-NUM-ILDC                       PIC 9(02).
               05 ARG-NUM-IARG                           PIC 9(01).
*% END
           03  WSS-FIN        VALUE ZEROES               PIC 9(01).
           03  WSS-IARC       VALUE ZEROES               PIC 9(02).
           03  WSS-IARG       VALUE ZEROES               PIC 9(02).
           03  WSS-IFLD       VALUE ZEROES               PIC 9(02).
           03  WSS-J          VALUE ZEROES               PIC 9(02).
           03  WSS-FS-ARC     VALUE ZEROES               PIC 9(02).
           03  WSS-FS-ARG     VALUE ZEROES               PIC 9(02).
      *JSS-INI 8-OCT-1993 INDICADOR PARA SABER SI EXISTE
      *               POR LO MENOS UN ARC O ARG
           03  WSS-IND-ACAG   VALUE 'N'                  PIC X(01).
      *JSS-FIN
      *>>>>
*% END
*% IF INI_FIO
      *<<<< INI_FIO
*% IF NOT PGM_VSI AND PGM_UVS
      *<<<< NOT PGM_VSI AND PGM_UVS
           PERFORM GNS-HDL-VSM.
      *>>>>
*% END
      * OBTIENE CODIGO VALOR DE CAMBIO DE PESOS MEDIANTE CIC DE LA MONED
           MOVE 'TAB'          TO FIO-SIST.
           MOVE 'VLR'          TO TAB-CIC-TTAB IN TAB.
           MOVE '0999  '       TO TAB-CIC-CTAB IN TAB.
           MOVE 'TAB-CIC-TABL' TO FIO-AKEY.
           MOVE FIO-GET-KEY    TO FIO-CMND.
           PERFORM GNS-FIO-TAB.
           IF NOT FIO-STAT-OKS
               MOVE 'TAB'          TO MSG-COD-SIST
               MOVE 'CIC0999  NEX' TO MSG-COD-MENS
               PERFORM GET-MSG
               PERFORM PRG-ABT.
           MOVE TAB-COD-CTAB IN TAB TO CCU-COD-PESO IN CCU-VARI.

      *>>>>
*% END
*% IF PFS_SCR_ACC
      *<<<< PFS_SCR_ACC
           IF FRM-FFLD = FRM-FFLD-PF6
                    OR   FRM-FFLD-PF5
               PERFORM VAL-NUM-KEY-CLC
               PERFORM VAL-NUM-FLD-CLC
               PERFORM RST-STAT
               PERFORM FND-SCR-KEY THRU FIN-SCR-KEY
               IF SCR-STAT NOT = SCR-STAT-ABT
                   PERFORM SCR-TRL
               ELSE
                   PERFORM DESSCRTRL
                   GO TO FIN-SCR-ACC.
      *>>>>
*% END
*% IF INI_FND_KEY
      *<<<< INI_FND_KEY

      * ASUME MENSAJE DEL SISTEMA DEL HIJO EN ERRFNDKEY.SRC
           MOVE 1 TO WSS-IBUS, WSS-IBUS-LDC.
           MOVE SPACES TO FRM-MENS.

           IF FRM-FFLD = FRM-FFLD-PF5
               MOVE PGM-SNUL TO PGM-STAT-CLF
               MOVE PGM-SNUL TO PGM-STAT-DBC
               SUBTRACT 1 FROM SCR-I GIVING CLC-I
               IF CLC-I NOT > ZEROES
                   MOVE 'CLF LDCPRV' TO MSG-COD-MENS
                   GO TO ERR-FND-KEY
               ELSE
                   GO TO CARGA-LDC
           ELSE
           IF FRM-FFLD = FRM-FFLD-PF6
               MOVE PGM-SNUL TO PGM-STAT-CLF
               MOVE PGM-SNUL TO PGM-STAT-DBC
               ADD 1 SCR-I GIVING CLC-I
               IF CLC-I > SCR-IMAX
                   MOVE 'CLF LDCNXT' TO MSG-COD-MENS
                   GO TO ERR-FND-KEY
               ELSE
                   GO TO CARGA-LDC.

           GO TO LEE-PAD-CLF.
      *>>>>
*% END
*% IF FIN_FND_KEY
      *<<<< FIN_FND_KEY
       LEE-PAD-CLF.
      * Lee por Capacidad de Credito y luego busca Cliente
           IF CLF-IIC-ICLF IN CLC-FLD > ZEROES
               PERFORM KEY-ALL-CLC
               MOVE FIO-GET-KEY TO FIO-CMND
               PERFORM LDC-FIO-CLF
               MOVE FIO-STAT TO PGM-STAT-CLF
               IF FIO-STAT-OKS
                  PERFORM GET-CUR-RDC
                  IF NOT PGM-STAT-RDC-OKS
                     MOVE 'DEU'          TO MSG-COD-SIST
                     MOVE 'CLF    NORDC' TO MSG-COD-MENS
                     MOVE SCR-STAT-CON TO SCR-STAT
                     GO TO ERR-FND-KEY
                  ELSE
                     MOVE RDC-CIC-ICLI IN RDC TO DBC-CIC-ICLI IN DBC
                     MOVE FIO-GET-KEY    TO FIO-CMND
                     PERFORM SGC-FIO-DBC
                     MOVE FIO-STAT TO PGM-STAT-DBC
                     IF NOT FIO-STAT-OKS
                        MOVE 'TAB'        TO MSG-COD-SIST
                        MOVE 'CLI    NEX' TO MSG-COD-MENS
                        PERFORM GET-MSG
                        MOVE MSG-GLS-DESC TO FRM-MENS
                        MOVE FIO-STAT-NEX TO PGM-STAT-DBC
                        MOVE SCR-STAT-CON TO SCR-STAT
                        GO TO ERR-FND-KEY
                     ELSE
                        PERFORM GET-NXT-RDC
                        MOVE '00' TO PGM-STAT-DBC
                        MOVE '00' TO FIO-STAT
                        GO TO FIN-BUS-PAD
           ELSE
              MOVE 'CLF    NEX' TO MSG-COD-MENS
              GO TO ERR-FND-KEY.

      * Lee Cliente y luego busca Capacidad de Credito
      *    busca el padre por alguna de las llaves (la digitada)
           IF DBC-NUM-ICLI IN CLC-FLD NOT = ZEROES
      *IDC-CLI Busca Cliente por medio de IdC
               MOVE DBC-NUM-ICLI IN CLC-FLD TO DBC-NUM-ICLI IN DBC
               MOVE DBC-IND-ICLI IN CLC-FLD TO DBC-IND-ICLI IN DBC
               MOVE DBC-GLS-ICLI IN CLC-FLD TO DBC-GLS-ICLI IN DBC
               MOVE 'DBC-IDC-ICLI' TO FIO-AKEY
               MOVE FIO-GET-KEY    TO FIO-CMND
               PERFORM GET-CLI
               IF MSG-COD-MENS NOT > SPACES
                   MOVE DBC-GLS-NOMC IN DBC TO CPT-STRN
                   PERFORM CPT-BLKS
                   MOVE CPT-STRN TO DBC-GLS-NOMC IN CLC-FLD
                   MOVE DBC-CAI-ICLI IN DBC TO
                        DBC-CAI-ICLI IN CLC-FLD
                   MOVE DBC-IIC-ICLI IN DBC TO
                        DBC-IIC-ICLI IN CLC-FLD
                   MOVE '00' TO PGM-STAT-DBC
                   GO TO FIN-BUS-CLI-KEY.

           IF DBC-GLS-NOMC IN CLC-FLD > SPACES
      *NOM-CLI Busca Cliente por medio del Nombre
               MOVE DBC-GLS-NOMC IN CLC-FLD TO STR-GLS-GSTR
               PERFORM STR-UNS
               MOVE STR-GLS-FUNS IN STR-VARI(1) TO
                    DBC-GLS-APAT IN DBC
               MOVE STR-GLS-FUNS IN STR-VARI(2) TO
                    DBC-GLS-AMAT IN DBC
               MOVE STR-GLS-FUNS IN STR-VARI(3) TO
                    DBC-GLS-NOMB IN DBC
               MOVE 'DBC-GLS-NOMC' TO FIO-AKEY
               MOVE FIO-GET-NLS    TO FIO-CMND
               PERFORM GET-CLI
               IF MSG-COD-MENS NOT > SPACES
                   MOVE DBC-NUM-ICLI IN DBC TO
                        DBC-NUM-ICLI IN CLC-FLD
                   MOVE DBC-VRF-ICLI IN DBC TO
                        DBC-VRF-ICLI IN CLC-FLD
                   MOVE DBC-IND-ICLI IN DBC TO
                        DBC-IND-ICLI IN CLC-FLD
                   MOVE DBC-GLS-ICLI IN DBC TO
                        DBC-GLS-ICLI IN CLC-FLD
                   MOVE DBC-GLS-NOMC IN DBC TO CPT-STRN
                   PERFORM CPT-BLKS
                   MOVE CPT-STRN TO DBC-GLS-NOMC IN CLC-FLD
                   MOVE DBC-CAI-ICLI IN DBC TO
                        DBC-CAI-ICLI IN CLC-FLD
                   MOVE DBC-IIC-ICLI IN DBC TO
                        DBC-IIC-ICLI IN CLC-FLD
                   MOVE '00' TO PGM-STAT-DBC
                   GO TO FIN-BUS-CLI-KEY.

       FIN-BUS-CLI-KEY.
            IF MSG-COD-MENS > SPACES
                GO TO ERR-FND-KEY.

           MOVE '00' TO PGM-STAT-DBC.

      *SMC-INI 23-11-1993
           MOVE SPACES TO MSG-COD-MENS
           PERFORM BUS-CLF.
           IF MSG-COD-MENS > SPACES
              PERFORM GET-MSG
              MOVE MSG-GLS-DESC TO FRM-MENS
              GO TO ERR-FND-KEY.
      *SMC-FIN 23-11-1993  

       FIN-BUS-PAD.

           IF NOT FIO-STAT-OKS
               MOVE 'CLF    NEX' TO MSG-COD-MENS
               GO TO ERR-FND-KEY.

      * NO ESTA EN BNL, A LO MEJOR SIGNIFICA OTRA LLAVE
           MOVE CLF-KEY-ICLF IN CLF TO LDC-CIC-ICLF IN LDC.
           MOVE ZEROES TO LDC-NUM-ILDC IN LDC.
           MOVE FIO-GET-NLS TO FIO-CMND.
           PERFORM LDC-FIO-LDC.
           IF NOT FIO-STAT-OKS OR
              LDC-CIC-ICLF IN LDC NOT = CLF-KEY-ICLF IN CLF
               MOVE 'LDC    NEX' TO MSG-COD-MENS
               GO TO ERR-FND-KEY.
           IF FIO-STAT-OKS
               MOVE FIO-END-BRW TO FIO-CMND
               PERFORM LDC-FIO-LDC.

           PERFORM GET-FHOY.
           MOVE HOY-SHOY           TO WSS-NUM-SHOY IN WSS-VARI.
           MOVE HOY-AHOY           TO WSS-NUM-AHOY IN WSS-VARI.
           MOVE HOY-MHOY           TO WSS-NUM-MHOY IN WSS-VARI.
           MOVE HOY-DHOY           TO WSS-NUM-DHOY IN WSS-VARI.

      *FLB CST  21-SEP-1994 CCU FUNCIONE LUEGO MCA/CMX Y ANTES ACA

      *    IF ( CLF-MSC-STAT IN CLF = 'A' OR 'V' ) AND
           IF ( CLF-MSC-STAT IN CLF = 'A' OR 
                CLF-MSC-STAT IN CLF = 'V' OR
                CLF-COD-STAT IN CLF = 'M' AND
                CLF-MSC-STAT IN CLF NOT = 'V' OR
                CLF-COD-STAT IN CLF = 'X' ) AND
      *FLB CST  21-SEP-1994 
              ( CLF-FEC-FVEN IN CLF NOT < WSS-FEC-FHOY IN WSS-VARI )

               MOVE CLF-KEY-ICLF IN CLF TO CCU-CIC-ICLF
               MOVE SPACES TO CCU-CAI-IOPC(1)
               MOVE ZEROES TO CCU-IIC-IOPC(1)
               MOVE SPACES TO CCU-CAI-DCAN(1)
               MOVE ZEROES TO CCU-IIC-DCAN(1)
               MOVE ZEROES TO CCU-NUM-DCAN(1)
               MOVE SPACES TO CCU-OPE-INDS
               PERFORM LDC-PRO-CCU
               IF CCU-NUM-MENS < CCU-NUM-CALC AND
                  CCU-NUM-MENS > ZEROES
                   IF CCU-MEN1 > SPACES AND CCU-MEN2 > SPACES
                       MOVE CCU-MENS TO FRM-MENS
                       GO TO ERR-FND-KEY
                   ELSE
                   IF CCU-MEN1 > SPACES
                       MOVE CCU-MEN1 TO FRM-MEN1
                       GO TO ERR-FND-KEY
                   ELSE
                   IF CCU-MEN2 > SPACES
                       MOVE CCU-MEN2 TO FRM-MEN2
                       GO TO ERR-FND-KEY
                   ELSE
                       GO TO ERR-FND-KEY
               ELSE
      * LTM-INI 29-04-1994
      * JPA ini  7-APR-1995 
                    MULTIPLY CCU-VAL-CUTI IN CCU-VARI BY 1 
                             GIVING WSS-VAL-CUTI ROUNDED
      *             MOVE CCU-VAL-CUTI IN CCU-VARI TO WSS-VAL-CUTI
      * JPA fin  7-APR-1995 
                    MOVE WSS-VAL-CUTI TO FRM-VAL-CUTI IN CLC-FLD
                   SUBTRACT    WSS-VAL-CUTI FROM 
                               CLF-VAL-CMAX IN CLF GIVING
                               FRM-VAL-CDIS IN CLC-FLD
      * LTM-FIN 29-04-1994
           ELSE
               MOVE 'CLF    NOVIG' TO MSG-COD-MENS
               GO TO ERR-FND-KEY.

      *JSS-INI 27-FEB-1996
           MOVE 'TAB' TO FIO-SIST.
           MOVE 'TIO ' TO TAB-COD-TTAB IN TAB.
           MOVE CLF-COD-TOCF IN CLF TO TAB-COD-CTAB IN TAB.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM GNS-FIO-TAB.
           IF FIO-STAT-OKS AND TAB-CIC-CTAB IN TAB = 'CGE'
               GO TO FIN-FND-KEY.
      *JSS-FIN 27-FEB-1996

      *ALD-BNL
           MOVE CCU-CIC-ICLF TO CLF-CIC-ICLF IN CLF.
           MOVE ZEROES TO SCR-IMAX.
           MOVE 1 TO SCR-I.
           PERFORM OBT-DAT-TS.
           MOVE 1 TO SCR-I.
           MOVE SCR-I TO CLC-I.

       CARGA-LDC.
           MOVE SPACES TO MSG-COD-MENS.
           PERFORM PUT-TAB-LDC.
      *FLB CST  21-SEP-1994 CCU FUNCIONE LUEGO MCA/CMX Y ANTES ACA
           IF MSG-COD-MENS > SPACES
               MOVE 'DEU' TO MSG-COD-SIST
               PERFORM GET-MSG.

           IF MSG-COD-MENS > SPACES AND
              CCU-MENS NOT > SPACES AND
              ( NOT ( CLF-COD-STAT IN CLF = 'M' OR 'X' ) OR
                CLF-MSC-STAT = 'V' )
               MOVE MSG-GLS-DESC TO FRM-MENS
           ELSE
           IF MSG-COD-MENS > SPACES AND
              CCU-MENS NOT > SPACES AND
              ( CLF-COD-STAT IN CLF = 'M' OR 'X' )
               MOVE MSG-GLS-DESC TO FRM-MEN1
               MOVE 'DEU' TO MSG-COD-SIST
               MOVE 'CLFREN-' TO MSG-COD-TMSG
               MOVE CLF-COD-STAT IN CLF TO MSG-COD-CMSG
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MEN2
           ELSE
           IF MSG-COD-MENS > SPACES
               IF CCU-MEN1 > SPACES 
                   MOVE CCU-MEN1 TO FRM-MEN2
               ELSE
                   MOVE CCU-MEN2 TO FRM-MEN2
           ELSE
           IF ( CLF-COD-STAT IN CLF = 'M' OR 'X' ) AND
              CLF-MSC-STAT NOT = 'V' 
               MOVE 'DEU' TO MSG-COD-SIST
               MOVE 'CLFREN-' TO MSG-COD-TMSG
               MOVE CLF-COD-STAT IN CLF TO MSG-COD-CMSG
               PERFORM GET-MSG
               IF CCU-MENS NOT > SPACES
                   MOVE MSG-GLS-DESC TO FRM-MENS
               ELSE
                   IF CCU-MEN1 > SPACES 
                       MOVE MSG-GLS-DESC TO FRM-MEN2
                   ELSE
                       MOVE CCU-MEN2 TO FRM-MEN1
                       MOVE MSG-GLS-DESC TO FRM-MEN2
           ELSE
               MOVE CCU-MENS TO FRM-MENS.
      *FLB CST  21-SEP-1994 

      * FMR: CMT verificar si existen
           IF FRM-MEN2 NOT > SPACES
               MOVE CLF-CIC-ICLF IN CLF TO RCE-GLS-IENT IN RCE
*% IF PGM_PER
      *<<<< PGM_PER
               MOVE 'LDC'               TO RCE-COD-SIST IN RCE
               MOVE 'CEM'               TO RCE-COD-ENTI IN RCE
      *>>>>
*% ELSE
      *<<<< NOT PGM_PER
               MOVE 'DEU'               TO RCE-COD-SIST IN RCE
               MOVE 'CLF'               TO RCE-COD-ENTI IN RCE
      *>>>>
*% END
               MOVE SPACES              TO RCE-COD-SENT IN RCE
               MOVE 'RCE-KEY-IENT' TO FIO-AKEY
               MOVE FIO-GET-KEY    TO FIO-CMND
               PERFORM GNS-FIO-RCE
               IF FIO-STAT-OKS
                   MOVE 'DEU'          TO MSG-COD-SIST
                   MOVE 'CLFEXTCMT'    TO MSG-COD-MENS
                   PERFORM GET-MSG
                   MOVE MSG-GLS-DESC   TO FRM-MEN2
               ELSE
                   MOVE SPACES         TO FRM-MEN2.

           MOVE '00' TO FIO-STAT.
           GO TO FIN-FND-KEY.


           MOVE '00' TO FIO-STAT.
           GO TO FIN-FND-KEY.

       ERR-FND-KEY.
           MOVE SCR-STAT-CON TO SCR-STAT.
           IF FRM-MENS > SPACES
               MOVE '00' TO FIO-STAT.
               GO TO FIN-FND-KEY.

      *    Busca mensaje error en Sistema LDC
           IF WSS-IBUS = 0 AND WSS-IBUS-LDC = 0
      *        busco por padre y no encontro padre
               MOVE SPACES TO PGM-STAT
               MOVE 'DEU' TO MSG-COD-SIST
               MOVE FIO-STAT-NEX TO PGM-STAT-CLF
           ELSE
      *        todos otros casos: el error pertenece al sistema LDC
               MOVE 'DEU' TO MSG-COD-SIST.
           PERFORM GET-MSG.
           MOVE MSG-GLS-DESC TO FRM-MENS.
           MOVE '00' TO FIO-STAT.
           GO TO FIN-FND-KEY.
      *>>>>
*% END
*% IF PFS_GET_CON OR PFS_GET_ACC
      *<<<< PFS_GET_CON OR PFS_GET_ACC
           IF NOT ( FRM-FFLD = FRM-FFLD-PF6
                          OR   FRM-FFLD-PF5
                  )
      *>>>>
*% END
*% IF INI_HBL_IKY
      *<<<< INI_HBL_IKY
           IF SCR-DESDE-CMN
               MOVE SPACES TO SCR-IND-MCLI.
      *>>>>
*% END
*% IF EOF
      *<<<< EOF
*% IF NOT PGM_VSI AND PGM_UVS
      *<<<< NOT PGM_VSI AND PGM_UVS
       COPY GNSBGVSM.
       COPY GNSBHVSM.
      *>>>>
*% END
      *SMC-INI 23-11-1993
       BUS-CLF SECTION.
       INI-BUS-CLF.
           MOVE DBC-CIC-ICLI IN DBC TO RDC-CIC-ICLI IN RDC.
           MOVE SPACES              TO RDC-CIC-ICLF IN RDC.

           MOVE FIO-GET-NLS TO FIO-CMND.
           PERFORM LDC-FIO-RDC.
           MOVE FIO-STAT TO PGM-STAT-RDC.
           IF NOT ( FIO-STAT-OKS AND 
                    DBC-CIC-ICLI IN DBC = RDC-CIC-ICLI IN RDC )
               MOVE 'DEU'          TO MSG-COD-SIST
               MOVE 'CLF    NORDC' TO MSG-COD-MENS
               GO TO BRW-BUS-CLF.

           MOVE ZEROES TO WSS-FEC-FCIE.
           MOVE RDC-CIC-ICLF IN RDC TO WSS-CIC-ICLF.
       LUP-BUS-CLF.
           MOVE RDC-CIC-ICLF IN RDC TO CLF-CIC-ICLF IN CLF.
           MOVE CLF-CAI-ICLF IN CLF TO CLF-CAI-ICLF IN CLC-FLD.
           MOVE CLF-IIC-ICLF IN CLF TO CLF-IIC-ICLF IN CLC-FLD.
           MOVE FIO-GET-KEY TO FIO-CMND.
           MOVE FIO-STAT TO PGM-STAT-CLF.
           PERFORM LDC-FIO-CLF.
           IF NOT FIO-STAT-OKS
               MOVE 'CLF    NEX' TO MSG-COD-MENS
               GO TO BRW-BUS-CLF.

           IF NOT ( CLF-MSC-STAT IN CLF = 'C' OR 'R' )
               GO TO BRW-BUS-CLF.

           IF CLF-FEC-FCIE IN CLF > WSS-FEC-FCIE
               MOVE CLF-CIC-ICLF IN CLF TO WSS-CIC-ICLF
               MOVE CLF-FEC-FCIE IN CLF TO WSS-FEC-FCIE.

       NXT-BUS-CLF.
           MOVE FIO-GET-NXT TO FIO-CMND.
           PERFORM LDC-FIO-RDC.
           MOVE FIO-STAT TO PGM-STAT-RDC.
           IF FIO-STAT-OKS AND 
              DBC-CIC-ICLI IN DBC = RDC-CIC-ICLI IN RDC
               GO TO LUP-BUS-CLF.

           MOVE WSS-CIC-ICLF TO CLF-CIC-ICLF IN CLF.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM LDC-FIO-CLF.
           MOVE FIO-STAT TO PGM-STAT-CLF.
           MOVE CLF-CAI-ICLF IN CLF TO CLF-CAI-ICLF IN CLC-FLD.
           MOVE CLF-IIC-ICLF IN CLF TO CLF-IIC-ICLF IN CLC-FLD.
       BRW-BUS-CLF.
           IF PGM-STAT-RDC-OKS
               MOVE FIO-END-BRW TO FIO-CMND
               PERFORM LDC-FIO-RDC.
       FIN-BUS-CLF.
           EXIT.

      *SMC-FIN 23-11-1993
       RST-STAT SECTION.
       INI-RST-STAT.
           MOVE SCR-STPP     TO SCR-STAT.
           MOVE SCR-MFLD-NOT TO SCR-MFLD.
       FIN-RST-STAT.
           EXIT.

       PUT-TAB-LDC SECTION.
       INI-PUT-TAB-LDC.
           PERFORM RED-TS.
           PERFORM LLE-DAT-PNT VARYING CLC-I FROM 1 BY 1
                   UNTIL CLC-I > WSS-IMAX.
       FIN-PUT-TAB-LDC.
           EXIT.

       LLE-DAT-PNT SECTION.
       INI-LLE-DAT-PNT.
           MOVE CLC-NUM-ILDC(CLC-I) TO FRM-NUM-ILDC IN CLC-FLD(CLC-I).
           MOVE CLC-IND-VIGE(CLC-I) TO FRM-IND-VIGE IN CLC-FLD(CLC-I).
           MOVE CLC-COD-TOOC(CLC-I) TO FRM-COD-TOOC IN CLC-FLD(CLC-I).
           MOVE CLC-COD-AOOC(CLC-I) TO FRM-COD-AOOC IN CLC-FLD(CLC-I).
           MOVE CLC-COD-TOGA(CLC-I) TO FRM-COD-TOGA IN CLC-FLD(CLC-I).
           MOVE CLC-COD-AOGA(CLC-I) TO FRM-COD-AOGA IN CLC-FLD(CLC-I).
           MOVE CLC-NUM-PORG(CLC-I) TO FRM-NUM-PORG IN CLC-FLD(CLC-I).
           MOVE CLC-IND-MGAR(CLC-I) TO FRM-IND-MGAR IN CLC-FLD(CLC-I).
           MOVE CLC-COD-SGAR(CLC-I) TO FRM-COD-SGAR IN CLC-FLD(CLC-I).
           MOVE CLC-COD-VCLC(CLC-I) TO FRM-COD-VCLC IN CLC-FLD(CLC-I).
           MOVE CLC-FEC-FVEN(CLC-I) TO FRM-FEC-FVEN IN CLC-FLD(CLC-I).
           MOVE CLC-VAL-CMLC(CLC-I) TO FRM-VAL-CMLC IN CLC-FLD(CLC-I).
           MOVE CLC-VAL-CDLC(CLC-I) TO FRM-VAL-CDLC IN CLC-FLD(CLC-I).
      *JPA ini  7-APR-1995 
      *    MOVE CLC-VAL-CDLC(CLC-I) TO FRM-VAL-CDLC IN CLC-FLD(CLC-I).
           MULTIPLY CLC-VAL-CDLC(CLC-I) BY 1 GIVING
                    FRM-VAL-CDLC IN CLC-FLD(CLC-I) ROUNDED.
      *JPA fin  7-APR-1995 
       FIN-LLE-DAT-PNT.
           EXIT.

      * Entidades de LDC
*% IF NOT PGM_DB2
       COPY LDCBFLDC.
       COPY LDCBFARC.
       COPY LDCBFARG.
       COPY LDCBFRDC.
      * Entidades de SGC
       COPY SGCBFDBC.
       COPY SGCBFREC.
      * Entidades de DEU
       COPY DEUBFCRI.
       COPY DEUBFFIA.
*% ELSE
           EXEC SQL INCLUDE LDCBFLDC END-EXEC.
           EXEC SQL INCLUDE LDCBFARC END-EXEC.
           EXEC SQL INCLUDE LDCBFARG END-EXEC.
           EXEC SQL INCLUDE LDCBFRDC END-EXEC.
      * Entidades de SGC
           EXEC SQL INCLUDE SGCBFDBC END-EXEC.
           EXEC SQL INCLUDE SGCBFREC END-EXEC.
      * Entidades de DEU
           EXEC SQL INCLUDE DEUBFCRI END-EXEC.
           EXEC SQL INCLUDE DEUBFFIA END-EXEC.
*% END
*% IF PGM_BSH 
       COPY GARBFGDG.
*% ELSE
*% IF PGM_DB2
           EXEC SQL INCLUDE GARBFGDG END-EXEC.
*% ELSE
       COPY GARBFGDG.
*% END
*% END
       COPY SGCBGCLI.
       COPY TABBFOFI.
       COPY TABBBOFI.
       COPY TABBFUSR.
       COPY TABBBUSR.
       COPY GNSBFRCE.
       COPY GNSBVCOD.
       COPY GNSBVTAB.
       COPY GNSBGCPT.
       COPY GNSBGSTR.
       COPY GNSBGHOY.

       OBT-DAT-TS SECTION.
       INI-OBT-DAT-TS.
           MOVE EIBTRMID TO CLC-TERM.
           EXEC CICS HANDLE CONDITION QIDERR(CON-OBT-DAT-TS)
                                     ITEMERR(CON-OBT-DAT-TS)
           END-EXEC.

           EXEC CICS DELETEQ TS QUEUE(CLC-NAME-QUE)
           END-EXEC.
       CON-OBT-DAT-TS.
           PERFORM CLR-VEC-TS VARYING CLC-I FROM 1 BY 1 UNTIL
                   CLC-I > WSS-IMAX.
           MOVE                   1 TO CLC-I IN CLC-VARI.
           MOVE CLF-CIC-ICLF IN CLF TO LDC-CIC-ICLF IN LDC.
           MOVE ZEROES              TO LDC-NUM-ILDC IN LDC.
           MOVE FIO-GET-NLS TO FIO-CMND.
       LUP-LEE-LDC.
           PERFORM LDC-FIO-LDC.
           IF NOT (FIO-STAT-OKS AND
              CLF-CIC-ICLF IN CLF = LDC-CIC-ICLF IN LDC)
              IF CLC-IMP = CLC-SI-IMP
                   PERFORM WRT-TS
                   GO TO FIN-OBT-DAT-TS
               ELSE
                   GO TO FIN-OBT-DAT-TS.
           PERFORM MOV-DAT-LDC.
           MOVE LDC-KEY-ILDC IN LDC TO ARC-KEY-ILDC IN ARC.
           MOVE ZEROES              TO ARC-NUM-IARC IN ARC.
      *FLB 15/DIC/92 TRASLADADAS AQUI
           MOVE LDC-KEY-ILDC IN LDC TO ARG-KEY-ILDC IN ARG.
           MOVE ZEROES              TO ARG-NUM-IARG IN ARG.
      *FLB
           MOVE CLF-PRM-VEZ-ARC TO CLF-VEZ-ARC.
           MOVE CLF-PRM-VEZ-ARG TO CLF-VEZ-ARG.
           MOVE 'S' TO CLC-EXI-ARC IN CLC-VARI.
           MOVE 'S' TO CLC-EXI-ARG IN CLC-VARI.
      *JSS-INI 8-OCT-1993
           MOVE 'N' TO WSS-IND-ACAG.
      *JSS-FIN
       LUP-ARC-ARG.
           IF CLC-EXI-ARC = 'N'
               GO TO CHK-EXI-ARG.
           IF CLF-VEZ-ARC = CLF-PRM-VEZ-ARC
               MOVE FIO-GET-NLS TO FIO-CMND
               MOVE CLF-OTR-VEZ-ARC TO CLF-VEZ-ARC
           ELSE
               MOVE FIO-GET-NXT TO FIO-CMND.
           MOVE 'S' TO CLC-EXI-ARC IN CLC-VARI.
           PERFORM LDC-FIO-ARC.
           IF NOT (FIO-STAT-OKS AND
              LDC-KEY-ILDC IN LDC = ARC-KEY-ILDC IN ARC )
               MOVE 'N' TO CLC-EXI-ARC IN CLC-VARI
               IF FIO-STAT-OKS
                   MOVE FIO-END-BRW TO FIO-CMND
      *JSS-INI 8-OCT-1993
                   PERFORM LDC-FIO-ARC
               ELSE
                   NEXT SENTENCE
           ELSE
               MOVE 'S' TO WSS-IND-ACAG.
      *JSS-FIN
       CHK-EXI-ARG.
           IF CLC-EXI-ARG = 'N'
               GO TO CHK-EXI-ARC-ARG.
           IF CLF-VEZ-ARG = CLF-PRM-VEZ-ARG
               MOVE FIO-GET-NLS TO FIO-CMND
               MOVE CLF-OTR-VEZ-ARG TO CLF-VEZ-ARG
           ELSE
               MOVE FIO-GET-NXT TO FIO-CMND.
           MOVE 'S' TO CLC-EXI-ARG IN CLC-VARI.
           PERFORM LDC-FIO-ARG.
           IF NOT (FIO-STAT-OKS AND
              LDC-KEY-ILDC IN LDC = ARG-KEY-ILDC IN ARG )
               MOVE 'N' TO CLC-EXI-ARG IN CLC-VARI
               IF FIO-STAT-OKS
                   MOVE FIO-END-BRW TO FIO-CMND
      *JSS-INI 8-OCT-1993
                   PERFORM LDC-FIO-ARG
               ELSE
                   NEXT SENTENCE
           ELSE
               MOVE 'S' TO WSS-IND-ACAG.
      *JSS-FIN
       CHK-EXI-ARC-ARG.
           IF CLC-EXI-ARG = 'N' AND
              CLC-EXI-ARC = 'N'
      *JSS-INI 8-OCT-1993 INDICA QUE NO EXISTE NI ARC NI ARG PARA LDC
               IF WSS-IND-ACAG = 'N'
                   ADD 1 TO CLC-I
                   IF CLC-I > WSS-IMAX
                       PERFORM WRT-TS
                       PERFORM CLR-VEC-TS VARYING CLC-I FROM 1 BY 1
                                          UNTIL CLC-I > WSS-IMAX
                       MOVE 1 TO CLC-I
                       MOVE CLC-NO-IMP TO CLC-IMP
                       MOVE FIO-GET-NXT TO FIO-CMND
                       GO TO LUP-LEE-LDC
                   ELSE
                       MOVE FIO-GET-NXT TO FIO-CMND
                       GO TO LUP-LEE-LDC
               ELSE
      *JSS-FIN
                   MOVE FIO-GET-NXT TO FIO-CMND
                   GO TO LUP-LEE-LDC.
           PERFORM MOV-ARC-ARG.
           GO TO LUP-ARC-ARG.
       FIN-OBT-DAT-TS.
           EXIT.

       MOV-DAT-LDC SECTION.
       INI-MOV-DAT-LDC.
           MOVE LDC-NUM-ILDC IN LDC TO CLC-NUM-ILDC(CLC-I).
           MOVE LDC-IND-VIGE IN LDC TO CLC-IND-VIGE(CLC-I).
           MOVE SPACES              TO CLC-COD-TOOC(CLC-I).
           MOVE SPACES              TO CLC-COD-AOOC(CLC-I).
           MOVE SPACES              TO CLC-COD-TOGA(CLC-I).
           MOVE SPACES              TO CLC-COD-AOGA(CLC-I).
           MOVE ZEROES              TO CLC-NUM-PORG(CLC-I).
           MOVE LDC-IND-MGAR IN LDC TO CLC-IND-MGAR(CLC-I).
           MOVE SPACES              TO CLC-COD-SGAR(CLC-I).

           IF LDC-FEC-FVEN IN LDC NOT > ZEROES
              MOVE CLF-NUM-DVEN IN CLF TO CLC-NUM-DVEN(CLC-I)
              MOVE CLF-NUM-MVEN IN CLF TO CLC-NUM-MVEN(CLC-I)
              MOVE CLF-NUM-SVEN IN CLF TO CLC-NUM-SVEN(CLC-I)
              MOVE CLF-NUM-AVEN IN CLF TO CLC-NUM-AVEN(CLC-I)
           ELSE
              MOVE LDC-NUM-DVEN IN LDC TO CLC-NUM-DVEN(CLC-I)
              MOVE LDC-NUM-MVEN IN LDC TO CLC-NUM-MVEN(CLC-I)
              MOVE LDC-NUM-SVEN IN LDC TO CLC-NUM-SVEN(CLC-I)
              MOVE LDC-NUM-AVEN IN LDC TO CLC-NUM-AVEN(CLC-I).

           MOVE CTOT-LCR IN CCU-VARI(LDC-NUM-ILDC IN LDC) TO
                         CLC-VAL-CMLC(CLC-I).
           MOVE CDIS-LCR IN CCU-VARI(LDC-NUM-ILDC IN LDC) TO
                         CLC-VAL-CDLC(CLC-I).
       FIN-MOV-DAT-LDC.
           EXIT.

       MOV-ARC-ARG SECTION.
       INI-MOV-ARC-ARG.
           IF CLC-EXI-ARC = 'N'
               MOVE SPACES              TO CLC-COD-TOOC(CLC-I)
               MOVE SPACES              TO CLC-COD-AOOC(CLC-I)
               MOVE SPACES              TO CLC-COD-VCLC(CLC-I)
           ELSE
               PERFORM PUT-TAB-ARC.

           IF CLC-EXI-ARG = 'N'
               MOVE SPACES              TO CLC-COD-TOGA(CLC-I)
               MOVE SPACES              TO CLC-COD-AOGA(CLC-I)
               MOVE ZEROES              TO CLC-NUM-PORG(CLC-I)
               MOVE SPACES              TO CLC-COD-SGAR(CLC-I)
           ELSE
               PERFORM PUT-TAB-ARG.
           MOVE CLC-SI-IMP TO CLC-IMP.
           ADD 1 TO CLC-I.
           IF CLC-I > WSS-IMAX
               PERFORM WRT-TS
               PERFORM CLR-VEC-TS VARYING CLC-I FROM 1 BY 1 UNTIL
                                  CLC-I > WSS-IMAX
               MOVE 1 TO CLC-I
               MOVE CLC-NO-IMP TO CLC-IMP.
       FIN-MOV-ARC-ARG.
           EXIT.

       PUT-TAB-ARC SECTION.
       INI-PUT-TAB-ARC.
           IF ARC-IIC-IOPC IN ARC > ZEROES
               MOVE ARC-CAI-IOPC IN ARC TO CLC-COD-TOOC(CLC-I)
               MOVE ARC-IIC-IOPC IN ARC TO CLC-COD-AOOC(CLC-I)
               GO TO FIN-PUT-TAB-ARC.

      *BUS-TAB Busca Glosa Moneda de Tabla
           IF ARC-COD-VCOC IN ARC > SPACES
              MOVE 'TAB' TO TAB-COD-SIST
              MOVE 'VLR' TO TAB-COD-TTAB IN TAB
              MOVE ARC-COD-VCOC IN ARC TO TAB-COD-CTAB IN TAB
              PERFORM BUS-TAB
              MOVE TAB-GLS-ABRV IN TAB TO CLC-COD-VCLC(CLC-I).

      *BUS-TAB Busca Glosa Tipo Operacion de Tabla
           IF ARC-COD-TOOC IN ARC > SPACES
              MOVE 'TAB'               TO TAB-COD-SIST
              MOVE 'TIO'               TO TAB-COD-TTAB IN TAB
              MOVE ARC-COD-TOOC IN ARC TO TAB-COD-CTAB IN TAB
              PERFORM BUS-TAB
              MOVE TAB-GLS-ABRV IN TAB TO CLC-COD-TOOC(CLC-I).

      *BUS-TAB Busca Glosa Cod. Auxiliar de Tabla
           IF ARC-COD-AOOC IN ARC > SPACES
              MOVE 'TAB'               TO TAB-COD-SIST
              MOVE 'AUX'               TO TAB-COD-TTAB IN TAB
              MOVE ARC-COD-COOC IN ARC TO TAB-COD-CTAB IN TAB
              PERFORM BUS-TAB
              MOVE TAB-GLS-ABRV IN TAB TO CLC-COD-AOOC(CLC-I).
       FIN-PUT-TAB-ARC.
           EXIT.

       PUT-TAB-ARG SECTION.
       INI-PUT-TAB-ARG.
           IF ARG-IIC-IGAR IN ARG > ZEROES
               MOVE ARG-CAI-IGAR IN ARG TO CLC-COD-TOGA(CLC-I)
               MOVE ARG-IIC-IGAR IN ARG TO CLC-COD-AOGA(CLC-I)
               MOVE ARG-NUM-PORG IN ARG TO CLC-NUM-PORG(CLC-I)
      *FLB CST  13-FEB-1995 
               MOVE 'TAB' TO FIO-SIST
               MOVE 'TIO ' TO TAB-COD-TTAB IN TAB
               MOVE ARG-COD-TOGA IN ARG TO TAB-COD-CTAB IN TAB
               MOVE FIO-GET-KEY TO FIO-CMND
               PERFORM GNS-FIO-TAB
      * Esta en sistema GAR
               IF NOT ( TAB-CIC-CTAB IN TAB = 'AVL' OR 'FIA' )
                   MOVE ARG-CIC-IGAR IN ARG TO GAR-CLV-GDG-1 IN GDG
                   MOVE FIO-GET-KEY TO FIO-CMND
                   PERFORM GAR-FIO-GDG
                   IF NOT FIO-STAT-OKS OR
                      GAR-IND-CPL IN GDG NOT = 'S'
                       MOVE 'P' TO CLC-COD-SGAR(CLC-I)
                   ELSE
                   IF GAR-FEC-ALZ IN GDG > ZEROES
                       MOVE 'L' TO CLC-COD-SGAR(CLC-I)
                   ELSE
                       MOVE 'C' TO CLC-COD-SGAR(CLC-I)
               ELSE
      * Esta en sistema DEU
      *FLB CST  17-MAR-1995 
                   PERFORM BUS-EST-FIA.
      *FLB CST  13-FEB-1995 FIN

           IF ARG-IIC-IGAR IN ARG > ZEROES
      *SMC-INI 22-11-1993
               IF CLC-IND-MGAR(CLC-I) = 'U'
                  MOVE 'E'   TO CLC-IND-MGAR(CLC-I)
                  GO TO FIN-PUT-TAB-ARG
               ELSE                  
      *SMC-FIN 22-11-1993   
                  GO TO FIN-PUT-TAB-ARG.

      *BUS-TAB Busca Glosa Moneda de Tabla
           IF ARG-COD-TOGA IN ARG > SPACES
              MOVE 'TAB'               TO TAB-COD-SIST
              MOVE 'TIO'               TO TAB-COD-TTAB IN TAB
              MOVE ARG-COD-TOGA IN ARG TO TAB-COD-CTAB IN TAB
              PERFORM BUS-TAB
              MOVE TAB-GLS-ABRV IN TAB TO CLC-COD-TOGA(CLC-I).

      *BUS-TAB Busca Glosa Cod. Auxiliar de Tabla
           IF ARG-COD-AOGA IN ARG > SPACES
              MOVE 'TAB'               TO TAB-COD-SIST
              MOVE 'AUX'               TO TAB-COD-TTAB IN TAB
              MOVE ARG-COD-COGA IN ARG TO TAB-COD-CTAB IN TAB
              PERFORM BUS-TAB
              MOVE TAB-GLS-ABRV IN TAB TO CLC-COD-AOGA(CLC-I).

           MOVE ARG-NUM-PORG IN ARG TO CLC-NUM-PORG(CLC-I).

           MOVE SPACES TO CLC-COD-SGAR(CLC-I).
       FIN-PUT-TAB-ARG.
           EXIT.

       WRT-TS SECTION.
       INI-WRT-TS.
           ADD 1 TO SCR-IMAX.
           EXEC CICS WRITEQ TS QUEUE(CLC-NAME-QUE)
                               FROM(CLC-TS)
                               LENGTH(CLC-LONG-TS)
           END-EXEC.
       FIN-WRT-TS.
           EXIT.

       RED-TS SECTION.
       INI-RED-TS.
           MOVE EIBTRMID TO CLC-TERM.
           MOVE CLC-I TO SCR-I.
           EXEC CICS HANDLE CONDITION QIDERR(FIN-RED-TS)
                                     ITEMERR(FIN-RED-TS)
           END-EXEC.
           EXEC CICS READQ TS QUEUE(CLC-NAME-QUE)
                               INTO(CLC-TS)
                               LENGTH(CLC-LONG-TS)
                               ITEM(CLC-I)
           END-EXEC.
       FIN-RED-TS.
           EXIT.

       CLR-VEC-TS SECTION.
       INI-CLR-VEC-TS.
           MOVE ZEROES              TO CLC-NUM-ILDC(CLC-I).
           MOVE SPACES              TO CLC-IND-VIGE(CLC-I).
           MOVE SPACES              TO CLC-COD-TOOC(CLC-I).
           MOVE SPACES              TO CLC-COD-AOOC(CLC-I).
           MOVE SPACES              TO CLC-COD-TOGA(CLC-I).
           MOVE SPACES              TO CLC-COD-AOGA(CLC-I).
           MOVE ZEROES              TO CLC-NUM-PORG(CLC-I).
           MOVE SPACES              TO CLC-IND-MGAR(CLC-I).
           MOVE SPACES              TO CLC-COD-SGAR(CLC-I).
           MOVE SPACES              TO CLC-COD-VCLC(CLC-I).
           MOVE SPACES              TO CLC-FEC-FVEN(CLC-I).
           MOVE ZEROES              TO CLC-VAL-CMLC(CLC-I).
           MOVE ZEROES              TO CLC-VAL-CDLC(CLC-I).
       FIN-CLR-VEC-TS.
           EXIT.

       GET-CUR-RDC SECTION.
       INI-GET-CUR-RDC.
           MOVE CLF-CIC-ICLF IN CLF TO RDC-CIC-ICLF IN RDC.
           MOVE 'RDC-KEY-ICLF' TO FIO-AKEY.
           MOVE FIO-GET-NLS    TO FIO-CMND.
           PERFORM LDC-FIO-RDC.
           IF FIO-STAT-CDK
               MOVE '00' TO FIO-STAT.
      *FLB CST  21-JAN-1994 
           IF FIO-STAT-OKS AND
              CLF-CIC-ICLF IN CLF NOT = RDC-CIC-ICLF IN RDC
               MOVE 'RDC-KEY-ICLF' TO FIO-AKEY
               MOVE FIO-END-BRW TO FIO-CMND
               PERFORM LDC-FIO-RDC
               MOVE '23' TO FIO-STAT.

           MOVE FIO-STAT TO PGM-STAT-RDC.
       FIN-GET-CUR-RDC.
           EXIT.

       GET-NXT-RDC SECTION.
       INI-GET-NXT-RDC.
           MOVE SPACES TO MSG-COD-SIST.
           MOVE SPACES TO MSG-COD-MENS.
           MOVE 'RDC-KEY-ICLF' TO FIO-AKEY.
           MOVE FIO-GET-NXT TO FIO-CMND.
           PERFORM LDC-FIO-RDC.
           IF FIO-STAT-OKS AND
              CLF-CIC-ICLF IN CLF = RDC-CIC-ICLF IN RDC
                MOVE 'M' TO SCR-IND-MCLI
           ELSE
                MOVE SPACES TO SCR-IND-MCLI
                IF FIO-STAT-OKS
                    MOVE FIO-END-BRW TO FIO-CMND
                    MOVE 'RDC-KEY-ICLF' TO FIO-AKEY
                    PERFORM LDC-FIO-RDC.
       FIN-GET-NXT-RDC.
           EXIT.

       COPY LDCBGCCU.
       COPY LDCBGCEG.
       COPY LDCBKCCU.
       COPY LDCBKCEG.

       BUS-EST-FIA SECTION.
       INI-BUS-EST-FIA.
           MOVE ARG-CIC-IGAR IN ARG TO FIA-CIC-IESC IN FIA.
           MOVE ZEROES              TO FIA-NUM-IFIA IN FIA.
           MOVE FIO-GET-NLS TO FIO-CMND.
           PERFORM DEU-FIO-FIA.
           IF NOT FIO-STAT-OKS OR
              FIA-CIC-IESC IN FIA NOT = ARG-CIC-IGAR IN ARG
               MOVE 'P' TO CLC-COD-SGAR(CLC-I)
               GO TO BRW-BUS-EST-FIA.
           MOVE 'L' TO CLC-COD-SGAR(CLC-I).
       LUP-BUS-EST-FIA.
           IF FIA-MSC-STAT IN FIA NOT = 'S'
               MOVE 'P' TO CLC-COD-SGAR(CLC-I)
               GO TO BRW-BUS-EST-FIA.

           IF FIA-FEC-FVEN IN FIA < HOY-FHOY AND
              FIA-FEC-FVEN IN FIA > ZEROES AND
              FIA-FEC-FALZ IN FIA NOT > ZEROES AND
              FIA-MSC-STAT IN FIA NOT = 'M' AND
              CLC-COD-SGAR(CLC-I) = 'L'
               MOVE 'V' TO CLC-COD-SGAR(CLC-I)
           ELSE
           IF FIA-FEC-FALZ IN FIA NOT > ZEROES AND
              FIA-MSC-STAT IN FIA NOT = 'M'
               MOVE 'C' TO CLC-COD-SGAR(CLC-I).

           MOVE FIO-GET-NXT TO FIO-CMND.
           PERFORM DEU-FIO-FIA.
           IF FIO-STAT-OKS AND
              FIA-CIC-IESC IN FIA = ARG-CIC-IGAR IN ARG
               GO TO LUP-BUS-EST-FIA.
       BRW-BUS-EST-FIA.
           IF FIO-STAT-OKS
               MOVE FIO-END-BRW TO FIO-CMND
               PERFORM DEU-FIO-FIA.
       FIN-BUS-EST-FIA.
           EXIT.

      *>>>>
*% END
