*% IF PGM_DTC
*%! INCLUDE DE ELEMENTOS DE C.A. PARA PLATAFORMA COMERCIAL
*% IF PGM_CHI AND PGM_BCI
*%     INCLUDE 'GNSTXT:GNSPPPTC.TXT'
*% END
*% INCLUDE 'GNSSRC:MANEJO_VSI.SRC'
*% END
*%! Codigo adicional para archivo LDCPAARG
*% LARGO_MI_COMMAREA = 350
*% IF PGM_BMS AND FIN_SCR_VARI
      *<<<< PGM_BMS AND FIN_SCR_VARI
       COPY LDCWGENG.
           03 SCR-CLF     VALUE SPACES            PIC X(64).
           03 SCR-LDC     VALUE SPACES            PIC X(100).
      *>>>>
*% END
*% IF FIN_SCR_VARI
      *<<<< FIN_SCR_VARI
      *FLB CST  13-JAN-1995 AHORA, ADEMAS CUENTA CUANTOS ARG
           03 SCR-FS-ARG                          PIC 9(02).
           03 SCR-ARG-DISP    VALUE SPACES        PIC X(48).
      *>>>>
*% END
*% IF PGM_BMS AND WSS
      *<<<< PGM_BMS AND WSS
       COPY LDCWGPMP.
      *>>>>
*% END
*% IF WSS
      *<<<< WSS
       01  WSS-VARI.
           03  WSS-CIC-ICLI                       PIC X(12).
           03  WSS-COD-COPE.
               05  WSS-COD-TOPE                   PIC X(03).
               05  WSS-COD-AOPE                   PIC X(03).
           03  WSS-NUM-PER                        PIC 9(03).
           03  WSS-IND-PER                        PIC X(01).
           03  ARG-KEY-IARG.
               05  ARG-KEY-ILDC.
                   07  ARG-CAI-ICLF               PIC X(04).
                   07  ARG-IIC-ICLF               PIC X(08).
*% IF PGM_DB2
                   07  ARG-NUM-ILDC  COMP         PIC S9(04).
               05  ARG-NUM-IARG      COMP         PIC S9(04).
*% ELSE
                   07  ARG-NUM-ILDC               PIC 9(02).
               05  ARG-NUM-IARG                   PIC 9(01).
*% END
           03  WSS-IFLD       VALUE ZEROES        PIC 9(02).
           03  WSS-IMAX       VALUE ZEROES        PIC 9(02).
           03  WSS-MOV        VALUE ZEROES        PIC 9(02).

*% IF PGM_DB2
           EXEC SQL INCLUDE LDCBRCLF END-EXEC.
       COPY GNSWGRQS REPLACING ==SQL-REQA== BY ==SQL-CLF-REQA==.
           EXEC SQL INCLUDE LDCBRARG END-EXEC.
       COPY GNSWGRQS REPLACING ==SQL-REQA== BY ==SQL-ARG-REQA==.
           EXEC SQL INCLUDE LDCBRRDC END-EXEC.
       COPY GNSWGRQS REPLACING ==SQL-REQA== BY ==SQL-RDC-REQA==.
           EXEC SQL INCLUDE SGCBRDBC END-EXEC.
       COPY GNSWGRQS REPLACING ==SQL-REQA== BY ==SQL-DBC-REQA==.
           EXEC SQL INCLUDE DEUBRFIA END-EXEC.
       COPY GNSWGRQS REPLACING ==SQL-REQA== BY ==SQL-FIA-REQA==.
*% ELSE
       COPY LDCBRCLF.
       COPY LDCBRARG.
       COPY LDCBRRDC.
       COPY SGCBRDBC.
       COPY DEUBRFIA.
*% END
*% IF PGM_BSH
       COPY GARBRGDG.
*% ELSE
*% IF PGM_DB2
           EXEC SQL INCLUDE GARBRGDG END-EXEC.
       COPY GNSWGRQS REPLACING ==SQL-REQA== BY ==SQL-GDG-REQA==.
*% ELSE
       COPY GARBRGDG.
*% END
*% END
       COPY GNSBRCIC.
*% IF PGM_DTC 
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-GDG-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-FIA-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-CLF-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-ARG-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-DBC-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-RDC-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-CIC-REQA==.
*% IF  PGM_PU 
      *<<<< PGM_PU
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-TAG-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-TIO-REQA==.
      *>>>>
*% END
*% END
*% IF  PGM_PU 
      *<<<< PGM_PU
*% IF PGM_BSH
       COPY GARBRTAG.
*% ELSE
*% IF PGM_DB2
           EXEC SQL INCLUDE GARBRTAG END-EXEC.
       COPY GNSWGRQS REPLACING ==SQL-REQA== BY ==SQL-TAG-REQA==.
*% ELSE
       COPY GARBRTAG.
*% END
*% END
       COPY TABBRTIO.
       COPY GNSWGCIC.
       COPY GNSWGHOY.
      *>>>>
*% ELSE
       COPY GNSWGCPT.
*% END
      *>>>>
*% END
*% IF SYS_SCOD AND PGM_DB2 AND PGM_PQ
      *<<<< SYS_SCOD AND PGM_DB2 AND PGM_PQ
      *JSS-IBM
           IF SYS-SCOD = 'SD'
*%!            MOVE +{gnstca} TO SYS-TCMA
               MOVE +9000     TO SYS-TCMA
               EXEC CICS RETRIEVE
                 INTO(SCR-VARI) LENGTH(SYS-TCMA)
               END-EXEC.
      *>>>>
*% END
*% IF PGM_PQ AND INI_FIO
      *<<<< PGM_PQ AND INI_FIO
*% IF PGM_CHI AND PGM_BCI
      *<<<< ISP-INI  24-JAN-1996 11:35:48 
           IF SCR-OFRM-SRV
              MOVE WSS-IDX-IARG TO SCR-IPRO
           ELSE
      *<<<< ISP-FIN  24-JAN-1996 11:35:48 
*% END
           IF SCR-DESDE-CMN
               MOVE SPACES TO SCR-VEC-ENG
               MOVE 1 TO SCR-IPRO
               GO TO FIN-INI-FIO.
           IF SCR-INST-EXT = WSS-INST-FPEN-CIC
               MOVE WSS-INST-NULL TO SCR-INST-EXT
               PERFORM ING-FPEN-CIC.
       FIN-INI-FIO.
      *>>>>
*% END
*% IF PGM_VMS AND INI_FIO
      *<<<< PGM_VMS AND INI_FIO
           MOVE FIO-ACCS-UPD TO FIO-ACCS.
           MOVE FIO-ACC      TO FIO-CMND.
           MOVE 'TAB'        TO FIO-SIST.
           PERFORM GNS-FIO-TAB.
           MOVE FIO-INP TO FIO-CMND.
           PERFORM GNS-FIO-TAB.

           MOVE FIO-ACCS-UPD TO FIO-ACCS.
           MOVE FIO-ACC      TO FIO-CMND.
           MOVE 'DEU'        TO FIO-SIST.
           PERFORM GNS-FIO-TAB.
           MOVE FIO-INP TO FIO-CMND.
           PERFORM GNS-FIO-TAB.

           MOVE FIO-ACCS-UPD TO FIO-ACCS.
           MOVE FIO-ACC      TO FIO-CMND.
           MOVE 'LDC'        TO FIO-SIST.
           PERFORM LDC-FIO-CLF.
           MOVE FIO-UPD TO FIO-CMND.
           PERFORM LDC-FIO-CLF.

           MOVE FIO-ACCS-UPD TO FIO-ACCS.
           MOVE FIO-ACC      TO FIO-CMND.
           MOVE 'DEU'        TO FIO-SIST.
           PERFORM DEU-FIO-FIA.
           MOVE FIO-UPD TO FIO-CMND.
           PERFORM DEU-FIO-FIA.

           MOVE FIO-ACCS-UPD TO FIO-ACCS.
           MOVE FIO-ACC      TO FIO-CMND.
           MOVE 'LDC'        TO FIO-SIST.
           PERFORM LDC-FIO-ARG.
           MOVE FIO-UPD TO FIO-CMND.
           PERFORM LDC-FIO-ARG.

           MOVE FIO-ACCS-UPD TO FIO-ACCS.
           MOVE FIO-ACC      TO FIO-CMND.
           MOVE 'GAR'        TO FIO-SIST.
           PERFORM GAR-FIO-GDG.
           MOVE FIO-UPD TO FIO-CMND.
           PERFORM GAR-FIO-GDG.
      *>>>>
*% END
*% IF FND_KEY
      *<<<< FND_KEY
           MOVE SPACES TO MSG-COD-MENS.
           IF SCR-CCPP = 'ACC' AND SCR-STAT = SCR-STAT-CON AND
              LDC-NUM-ILDC IN ARG-FLD = ZEROES
                MOVE 1 TO LDC-NUM-ILDC IN LDC.
      *>>>>
*% END
*% IF FIN_FND_KEY
      *<<<< FIN_FND_KEY
           IF NOT FIO-STAT-OKS
               MOVE 'DEU'        TO MSG-COD-SIST
               MOVE 'LDC    NEX' TO MSG-COD-MENS
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS
               MOVE FIO-STAT-NEX TO FIO-STAT
               MOVE SCR-STAT-CON TO SCR-STAT
               GO TO FIN-FND-KEY.

      *LTM-INI
           MOVE 'RDC-KEY-ICLF' TO FIO-AKEY.
           MOVE LDC-CAI-ICLF IN ARG-FLD TO RDC-CAI-ICLF IN RDC.
           MOVE LDC-IIC-ICLF IN ARG-FLD TO RDC-IIC-ICLF IN RDC.
           MOVE FIO-GET-NLS TO FIO-CMND.
           PERFORM LDC-FIO-RDC.
           IF (NOT FIO-STAT-OKS) OR
              (RDC-CAI-ICLF IN RDC NOT = LDC-CAI-ICLF IN ARG-FLD) OR
              (RDC-IIC-ICLF IN RDC NOT = LDC-IIC-ICLF IN ARG-FLD)
      *        CLF no tiene RDC asociado
               MOVE 'DEU'         TO MSG-COD-SIST
               MOVE 'RDC    NEX'  TO MSG-COD-MENS
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC  TO FRM-MENS
               MOVE '00'          TO FIO-STAT
               MOVE SCR-STAT-CON  TO SCR-STAT
               GO TO FIN-FND-KEY
           ELSE
               MOVE RDC-CIC-ICLI   TO WSS-CIC-ICLI IN WSS-VARI
               MOVE 'RDC-KEY-ICLF' TO FIO-AKEY
               MOVE FIO-GET-NXT    TO FIO-CMND
               PERFORM LDC-FIO-RDC
               IF FIO-STAT-OKS AND
                  RDC-CAI-ICLF IN RDC = LDC-CAI-ICLF IN ARG-FLD AND
                  RDC-IIC-ICLF IN RDC = LDC-IIC-ICLF IN ARG-FLD
                   MOVE 'MULTIPLES CLIENTES' TO DBC-GLS-NOMC IN DBC
                   MOVE ZEROES               TO DBC-NUM-ICLI IN DBC
                   MOVE SPACES               TO DBC-VRF-ICLI IN DBC
                                                DBC-IND-ICLI IN DBC
                   MOVE IDC-INIC-GLS         TO DBC-GLS-ICLI IN DBC
                   MOVE PGM-SOKS             TO PGM-STAT-DBC
                   IF SCR-CCPP = 'MOD' 
                       PERFORM PUT-LDC-ARG
                       PERFORM PUT-DBC-ARG
                   ELSE
                       NEXT SENTENCE
               ELSE
                   MOVE WSS-CIC-ICLI IN WSS-VARI
                                     TO DBC-CIC-ICLI IN DBC
                   MOVE FIO-GET-KEY  TO FIO-CMND
                   PERFORM SGC-FIO-DBC
                   MOVE FIO-STAT     TO PGM-STAT-DBC       
                   IF NOT FIO-STAT-OKS
      *                RDC no tiene DBC asociado
                       MOVE 'TAB'         TO MSG-COD-SIST
                       MOVE 'CLI    NEX'  TO MSG-COD-MENS
                       PERFORM GET-MSG
                       MOVE MSG-GLS-DESC  TO FRM-MENS
                       MOVE '00'          TO FIO-STAT
                       MOVE SCR-STAT-CON  TO SCR-STAT
                       GO TO FIN-FND-KEY
                   ELSE
                       MOVE DBC-GLS-NOMC IN DBC  TO CPT-STRN
                       PERFORM CPT-BLKS
                       MOVE CPT-STRN TO DBC-GLS-NOMC IN DBC
                       IF SCR-CCPP = 'MOD' 
                           PERFORM PUT-LDC-ARG
                           PERFORM PUT-DBC-ARG.
      *LTM-FIN

           MOVE LDC-CAI-ICLF IN LDC TO CLF-CAI-ICLF IN CLF.
           MOVE LDC-IIC-ICLF IN LDC TO CLF-IIC-ICLF IN CLF.
           MOVE FIO-GET-KEY    TO FIO-CMND.
           PERFORM LDC-FIO-CLF.
           MOVE FIO-STAT TO PGM-STAT-CLF.
           IF NOT FIO-STAT-OKS
      *        LDC no tiene CLF asociado
               MOVE 'DEU' TO MSG-COD-SIST
               MOVE 'CLF    NEX' TO MSG-COD-MENS
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS
               MOVE FIO-STAT-NEX TO FIO-STAT
               MOVE SCR-STAT-CON TO SCR-STAT
               GO TO FIN-FND-KEY.

      *FLB CST  13-JAN-1995 
      *    IF SCR-CMND = 'ACT'
           IF SCR-CMND = 'ACT' OR 'MSI'
              IF CLF-MSC-STAT IN CLF = 'C'
      *        LDC eliminada o cerrada
                  MOVE 'DEU'           TO MSG-COD-SIST
                  MOVE 'CLF    EXTING' TO MSG-COD-MENS
                  PERFORM GET-MSG
                  MOVE MSG-GLS-DESC TO FRM-MENS
                  MOVE SCR-STAT-CON TO SCR-STAT
                  MOVE '00' TO FIO-STAT
                  GO TO FIN-FND-KEY
              ELSE
              IF CLF-MSC-STAT IN CLF = 'R'
      *        CLF fue renovada
                  MOVE 'DEU'           TO MSG-COD-SIST
                  MOVE 'CLF    MCAYA' TO MSG-COD-MENS
                  PERFORM GET-MSG
                  MOVE MSG-GLS-DESC TO FRM-MENS
                  MOVE SCR-STAT-CON TO SCR-STAT
                  MOVE '00' TO FIO-STAT
                  GO TO FIN-FND-KEY
              ELSE
              IF CLF-MSC-STAT IN CLF = 'A'
      *        LDC activada 
                  MOVE 'DEU'          TO MSG-COD-SIST
                  MOVE 'CLF    ACAYA' TO MSG-COD-MENS
                  PERFORM GET-MSG
                  MOVE MSG-GLS-DESC TO FRM-MENS
                  MOVE SCR-STAT-CON TO SCR-STAT
                  MOVE '00' TO FIO-STAT
                  GO TO FIN-FND-KEY
              ELSE
      *FLB CST  13-JAN-1995 
              IF SCR-CMND = 'ACT' AND
                 CLF-COD-STAT IN CLF = 'X'
      *        LDC activada 
                  MOVE 'DEU'          TO MSG-COD-SIST
                  MOVE 'CLFSTATMSI'   TO MSG-COD-MENS
                  PERFORM GET-MSG
                  MOVE MSG-GLS-DESC TO FRM-MENS
                  MOVE SCR-STAT-CON TO SCR-STAT
                  MOVE '00' TO FIO-STAT
                  GO TO FIN-FND-KEY
              ELSE
              IF SCR-CMND = 'MSI' AND
                 CLF-COD-STAT IN CLF NOT = 'X' AND
                 CLF-COD-STAT IN CLF NOT = 'M' 
                  MOVE 'DEU'          TO MSG-COD-SIST
                  MOVE 'CLFSTATNOMSI' TO MSG-COD-MENS
                  PERFORM GET-MSG
                  MOVE MSG-GLS-DESC TO FRM-MENS
                  MOVE SCR-STAT-CON TO SCR-STAT
                  MOVE '00' TO FIO-STAT
                  GO TO FIN-FND-KEY.

           IF ( SCR-CMND = 'ACT' OR 'MSI' ) AND
              NOT ( LDC-IND-MGAR IN LDC = 'Y' OR 'O' )
               MOVE 'DEU'        TO MSG-COD-SIST
               MOVE 'MGARNOT=OY' TO MSG-COD-MENS
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS
               MOVE SCR-STAT-CON TO SCR-STAT
               MOVE '00' TO FIO-STAT
               GO TO FIN-FND-KEY.

           MOVE ZEROES TO SCR-FS-ARG.
           MOVE LDC-KEY-ILDC IN LDC TO ARG-KEY-ILDC IN WSS-VARI.
           MOVE ZEROES              TO ARG-NUM-IARG IN WSS-VARI.
           MOVE ARG-KEY-IARG IN WSS-VARI TO ARG-KEY-IARG IN ARG.
           MOVE FIO-GET-NLS TO FIO-CMND.
       LEE-ARG.
           PERFORM LDC-FIO-ARG.
           IF NOT FIO-STAT-OKS OR
              ARG-KEY-ILDC IN WSS-VARI NOT = ARG-KEY-ILDC IN ARG

              IF FIO-STAT-OKS
                  MOVE FIO-END-BRW TO FIO-CMND
                  PERFORM LDC-FIO-ARG
                  MOVE '00' TO FIO-STAT
                  IF SCR-CMND = 'ACT' OR 'MSI'
                      GO TO FIN-FND-KEY
                  ELSE
                      MOVE 'DEU'        TO MSG-COD-SIST
                      MOVE 'LDCSINARG'   TO MSG-COD-MENS
                      PERFORM GET-MSG
                      MOVE MSG-GLS-DESC TO FRM-MENS
                      MOVE SCR-STAT-CON TO SCR-STAT
                      GO TO FIN-FND-KEY
              ELSE 
                  MOVE '00' TO FIO-STAT
                  IF SCR-CMND = 'ACT' OR 'MSI'
                      GO TO FIN-FND-KEY
                  ELSE
                      MOVE 'DEU'        TO MSG-COD-SIST
                      MOVE 'LDCSINARG'  TO MSG-COD-MENS
                      PERFORM GET-MSG
                      MOVE MSG-GLS-DESC TO FRM-MENS
                      MOVE SCR-STAT-CON TO SCR-STAT
                      GO TO FIN-FND-KEY.

       CARGA-ARG.
           MOVE SPACES TO MSG-COD-MENS.
           MOVE ZEROES TO WSS-IFLD.
           MOVE 9      TO WSS-IMAX.
           PERFORM PUT-TAB-ARG.
           IF WSS-IFLD < WSS-IMAX
              ADD 1 TO WSS-IFLD
              PERFORM LIM-RES-LIN UNTIL WSS-IFLD > WSS-IMAX.

           IF MSG-COD-MENS > SPACES
               MOVE 'DEU' TO MSG-COD-SIST
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS.

           MOVE '00' TO FIO-STAT.
           GO TO FIN-FND-KEY.
      *>>>>
*% END
*% IF INI_CMN_MOD
      *<<<< INI_CMN_MOD
           MOVE LDC-CAI-ICLF IN ARG-FLD TO ARG-CAI-ICLF IN WSS-VARI.
           MOVE LDC-IIC-ICLF IN ARG-FLD TO ARG-IIC-ICLF IN WSS-VARI.
           MOVE LDC-NUM-ILDC IN ARG-FLD TO ARG-NUM-ILDC IN WSS-VARI.
           IF SCR-FS-ARG > ZEROES
              PERFORM DEL-ARG
              IF MSG-COD-MENS > SPACES
      *          ERROR INCONSISTENCIA EN LA ELIMINACION : INFORMAR
                 GO TO FIN-CMN-MOD.
           GO TO GEN-ARG.
      *>>>>
*% END
*% IF FIN_CMN_MOD
      *<<<< FIN_CMN_MOD
       GEN-ARG.
           MOVE ZEROS TO WSS-IFLD  WSS-MOV.

           PERFORM PUT-ARG  VARYING WSS-IFLD FROM 1 BY 1 UNTIL
                                                      WSS-IFLD > 9.
           IF WSS-MOV NOT > 1
               MOVE LDC-CAI-ICLF IN ARG-FLD TO LDC-CAI-ICLF IN LDC
               MOVE LDC-IIC-ICLF IN ARG-FLD TO LDC-IIC-ICLF IN LDC
               MOVE LDC-NUM-ILDC IN ARG-FLD TO LDC-NUM-ILDC IN LDC
               MOVE FIO-GET-KEY-UPD TO FIO-CMND
               PERFORM LDC-FIO-LDC
               IF NOT FIO-STAT-OKS
                   MOVE FIO-MENS TO FRM-MENS
                   GO TO FIN-CMN-MOD
               ELSE
               IF WSS-MOV = 1
                   MOVE 'U' TO LDC-IND-MGAR IN LDC
                   MOVE FIO-MOD TO FIO-CMND
                   PERFORM LDC-FIO-LDC
               ELSE
                   MOVE 'S' TO LDC-IND-MGAR IN LDC
                   MOVE FIO-MOD TO FIO-CMND
                   PERFORM LDC-FIO-LDC.

       MOD-CLF.
           MOVE LDC-CAI-ICLF IN ARG-FLD TO CLF-CAI-ICLF IN CLF.
           MOVE LDC-IIC-ICLF IN ARG-FLD TO CLF-IIC-ICLF IN CLF.
           MOVE FIO-GET-KEY-UPD TO FIO-CMND.
           PERFORM LDC-FIO-CLF.
           IF NOT FIO-STAT-OKS
               GO TO FIN-CMN-MOD.
           MOVE 'I' TO CLF-MSC-STAT IN CLF.
           MOVE FIO-MOD TO FIO-CMND.
           PERFORM LDC-FIO-CLF.

*% IF PGM_BMS
      *<<<< PGM_BMS
           IF SCR-IND-ENG IN SCR-VEC-ENG(SCR-IPRO) = 'S'
               PERFORM EGR-FPEN-CIC.
      *>>>>
*% END
      *>>>>
*% END
*% IF PGM_BMS AND FIN_CMN_ING OR SCR_GFLD_VAL_MKY
      *<<<< PGM_BMS AND FIN_CMN_ING OR SCR_GFLD_VAL_MKY
           IF FRM-FFLD = FRM-FFLD-PF10 AND
              SCR-IND-ENG IN SCR-VEC-ENG(SCR-IPRO) = 'S'
               PERFORM EGR-FPEN-CIC.
      *>>>>
*% END
*% IF PGM_BMS AND FIN_SCR_GIKY OR FIN_SCR_GCNF OR FIN_SCR_GFLD
      *<<<< PGM_BMS AND FIN_SCR_GIKY OR FIN_SCR_GCNF OR FIN_SCR_GFLD
           IF FRM-FFLD = FRM-FFLD-PF3 AND
              SCR-IND-ENG IN SCR-VEC-ENG(SCR-IPRO) = 'S'
               PERFORM EGR-FTER-CIC.
      *>>>>
*% END
*% IF PGM_BMS AND EOF
      *<<<< PGM_BMS AND EOF

*% IF PGM_PQ
      *<<<< PGM_PQ
      *  CODIGO ADICIONAL PARA ENGANCHE PROGRAMAS
       ING-FPEN-CIC SECTION.
       INI-ING-FPEN-CIC.
           MOVE LOW-VALUES TO ARG-FLD.
           PERFORM ING-SETE.
           PERFORM SCR-CLRA-ARG.
           PERFORM HBL-IKY.
           PERFORM HBL-KEY-ARG.
       FIN-ING-FPEN-CIC.
           EXIT.

       HBL-KEY-ARG SECTION.
       INI-HBL-KEY-ARG.
           MOVE SPACES TO MSG-COD-MENS.
           MOVE LOW-VALUES TO ARG-FLD.
           PERFORM SCR-CLRA-ARG.
           MOVE SCR-CAI-ICLF IN SCR-VARI TO LDC-CAI-ICLF IN ARG-FLD.
           MOVE SCR-IIC-ICLF IN SCR-VARI TO LDC-IIC-ICLF IN ARG-FLD.
           MOVE SCR-NUM-ILDC IN SCR-VARI TO LDC-NUM-ILDC IN ARG-FLD.

           MOVE 'MOD'        TO SCR-CCPP.
           MOVE 'ACT'        TO SCR-CMND.
           PERFORM FND-KEY.

      * FLB 24/JUL/92 DIO ALGO MALO 
      * FLB 24/JUL/92 LE AGREGUE QUE SE VAYA Y NO HABILITE LOS CAMPOS
           IF MSG-COD-MENS > SPACES
               MOVE SCR-INST-GKY TO SCR-INST
      *    MOVE FRM-CPSF-AEY TO FRM-CPIM-AEY
               PERFORM PRO-ALL
               PERFORM UNP-IKY-ARG
               PERFORM EDT-KEY-ARG

               PERFORM SCR-MSSG
               IF SCR-IND-FST IN SCR-VEC-FST(SCR-IPRO) = 'S'
                   MOVE SPACES TO SCR-IND-FST IN SCR-VEC-FST(SCR-IPRO)
                   PERFORM SCR-INIT
                   PERFORM SCR-EXIT
                   GO TO FIN-HBL-KEY-ARG
               ELSE
                   PERFORM SCR-PUTA
                   PERFORM SCR-EXIT
                   GO TO FIN-HBL-KEY-ARG.

           PERFORM PUT-CLF-ARG.

           MOVE +4 TO LDC-CAI-ICLF-LEN IN ARG-FLD.
      *ISP   25-JUL-1990 DEBE SER REEMPLAZADO POR VARIABLE
      *     INHIBE MOVE FRM-CPSF TO FRM-CPIM-AEY
           MOVE '1' TO FRM-CPIM-AEY.
           PERFORM HBL-FLD.
      *ALD-BNL.
           MOVE FRM-CPIM-AEY TO LDC-CAI-ICLF-ATR.
           MOVE FRM-CPIM-AEY TO LDC-IIC-ICLF-ATR.
           MOVE FRM-CPIM-AEY TO LDC-NUM-ILDC-ATR.
      *
           MOVE SCR-INST-GFL TO SCR-INST.

       CIC-HBL-KEY-ARG.
      *
           PERFORM EDT-KEY-ARG.
           PERFORM EDT-FLD-ARG.

           MOVE 'GNS' TO MSG-COD-SIST.
           MOVE 'FLDING' TO MSG-COD-MENS.
           PERFORM GET-MSG.
           MOVE MSG-GLS-DESC TO FRM-MENS.
           PERFORM SCR-MSSG.

           IF SCR-IND-FST IN SCR-VEC-FST(SCR-IPRO) = 'S'
               MOVE SPACES TO SCR-IND-FST IN SCR-VEC-FST(SCR-IPRO)
               PERFORM SCR-INIT
               PERFORM STP-EXIT
           ELSE
               PERFORM SCR-PUTA.
*% IF PGM_CHI AND PGM_BCI
      *<<<< ISP-INI  24-JAN-1996 11:35:48 
           IF SCR-OFRM-SRV
                EXEC CICS
                 RETURN
                END-EXEC.
      *<<<< ISP-FIN  24-JAN-1996 11:35:48 
*% END
           PERFORM SCR-EXIT.
       FIN-HBL-KEY-ARG.
           EXIT.

       ING-SETE SECTION.
       INI-ING-SETE.
           PERFORM CRG-TBL-ENG.
           MOVE WSS-NTRN(SCR-IPRO)     TO SCR-NTRN.
           MOVE WSS-PROG(SCR-IPRO)     TO SCR-PROG.
           MOVE WSS-NMAP(SCR-IPRO)     TO SCR-NMAP.
           MOVE WSS-NLIB(SCR-IPRO)     TO SCR-NLIB.
      *     MOVE WSS-NEMO(WSS-IDX-IARG) TO SCR-NEMO.

           MOVE WSS-NTRV(SCR-IPRO)     TO SCR-NTRV.
           MOVE WSS-PROV(SCR-IPRO)     TO SCR-PROV.
       FIN-ING-SETE.
           EXIT.
      *>>>>
*% END
       EGR-FTER-CIC SECTION.
       INI-EGR-FTER-CIC.
*% IF PGM_PQ
      *<<<< PGM_PQ
           MOVE 'S' TO SCR-IND-ENG IN SCR-VEC-ENG(WSS-IDX-ILDC).
           MOVE 'S' TO SCR-IND-FST IN SCR-VEC-FST(WSS-IDX-ILDC).
           SUBTRACT 1 FROM WSS-IDX-ILDC GIVING SCR-IPRO.
           MOVE 'ING'        TO SCR-CMND.
           MOVE 'ING'        TO SCR-CCPP.
           PERFORM EGR-FPEN-CIC.
*% ELSE
           PERFORM CRG-TBL-ENG.
           MOVE WSS-IDX-ILDC TO SCR-IPRO.
           MOVE 'S' TO SCR-IND-ENG IN SCR-VEC-ENG(SCR-IPRO).
           MOVE 'S' TO SCR-IND-FST IN SCR-VEC-FST(SCR-IPRO).
           MOVE WSS-INST-FPEN-CIC TO SCR-INST-EXT.
           MOVE WSS-PROG(SCR-IPRO) TO SYS-PROG.
           MOVE SCR-VARI TO SYS-CMMA.
*% IF NOT PGM_DB2
      *<<<< NOT PGM_DB2
           MOVE SCR-TCMA TO SYS-TCMA.
           MOVE SYS-XCTL TO SYS-CMND.
*% IF PGM_CHI AND PGM_BCI
      *<<<< ISP-INI  24-JAN-1996 11:35:48 
           IF SCR-OFRM-SRV
               MOVE WSS-IDX-IARG TO SCR-IPRO
           ELSE
      *<<<< ISP-FIN  24-JAN-1996 11:35:48 
*% END
           PERFORM GNS-PRO-SYS.
*% ELSE
      *<<<< PGM_DB2
*%!        MOVE +{gnstca} TO SYS-TCMA.
           MOVE SCR-TCMA  TO SYS-TCMA.
           EXEC CICS START
                TRANSID( WSS-NTRN IN WSS-PPRO(SCR-IPRO) )
                TERMID ( EIBTRMID )
                FROM   ( SYS-CMMA )
                LENGTH ( SYS-TCMA )
           END-EXEC.
           EXEC CICS RETURN
           END-EXEC.
      *>>>>
*% END
      *>>>>
*% END
       FIN-EGR-FTER-CIC.
           EXIT.

       EGR-FPEN-CIC SECTION.
       INI-EGR-FPEN-CIC.
           PERFORM CRG-TBL-ENG.
           ADD 1 TO SCR-IPRO.
           IF SCR-IPRO > WSS-TOT-IIDX
                  PERFORM EGR-FTER-CIC
                  GO TO FIN-EGR-FPEN-CIC.
           IF SCR-IND-ENG IN SCR-VEC-ENG(SCR-IPRO) = SPACES
               GO TO INI-EGR-FPEN-CIC.
           MOVE WSS-INST-FPEN-CIC TO SCR-INST-EXT.
           MOVE WSS-PROG(SCR-IPRO) TO SYS-PROG.
*% IF PGM_PQ
      *<<<< PGM_PQ
           MOVE 'ING'        TO SCR-CMND.
           MOVE 'ING'        TO SCR-CCPP.
*% END
           MOVE SCR-VARI TO SYS-CMMA.
*% IF NOT PGM_DB2
      *<<<< NOT PGM_DB2
           MOVE SCR-TCMA TO SYS-TCMA.
           MOVE SYS-XCTL TO SYS-CMND.
*% IF PGM_CHI AND PGM_BCI AND PGM_PU
      *<<<< ISP-INI  24-JAN-1996 11:35:48 
           IF SCR-OFRM-SRV
               MOVE WSS-IDX-IARG TO SCR-IPRO
           ELSE
      *<<<< ISP-FIN  24-JAN-1996 11:35:48 
*% END
           PERFORM GNS-PRO-SYS.
*% ELSE
      *<<<< PGM_DB2
*%!        MOVE +{gnstca} TO SYS-TCMA.
           MOVE SCR-TCMA  TO SYS-TCMA.
           EXEC CICS START
                TRANSID( WSS-NTRN IN WSS-PPRO(SCR-IPRO) )
                TERMID ( EIBTRMID )
                FROM   ( SYS-CMMA )
                LENGTH ( SYS-TCMA )
           END-EXEC.
           EXEC CICS RETURN
           END-EXEC.
      *>>>>
*% END
       FIN-EGR-FPEN-CIC.
           EXIT.

       SCR-INIT SECTION.
       INI-SCR-INIT.
           MOVE 3  TO FRM-PLIN.
           MOVE 19 TO FRM-NLIN.
           MOVE FRM-CLR-FRM TO FRM-CMND.
           PERFORM GNS-PRO-FRM.
           MOVE FRM-SINI-DBNF TO FRM-SINI.
           MOVE SCR-NMAP TO FRM-NAME.
           MOVE SCR-NLIB TO FRM-NLIB.
           MOVE ARG-FLD TO FRM-DFLD.
           MOVE FRM-INI TO FRM-CMND.
           PERFORM GNS-PRO-FRM.
       FIN-SCR-INIT.
           EXIT.

       COPY LDCBGMPT.

      *>>>>
*% END
*% IF EOF
      *<<<< EOF
*% IF PGM_PQ
      *<<<< PGM_PQ
       PUT-TAB-ARG SECTION.
       INI-PUT-TAB-ARG.
           ADD 1 TO WSS-IFLD.
           IF WSS-IFLD > WSS-IMAX
              GO TO FIN-PUT-TAB-ARG.

           ADD 1 TO SCR-FS-ARG.

           MOVE ARG-COD-TOGA IN ARG TO FRM-COD-TOGA
                                             IN ARG-FLD(WSS-IFLD).
           MOVE ARG-COD-AOGA IN ARG TO FRM-COD-AOGA
                                             IN ARG-FLD(WSS-IFLD).
           MOVE ARG-CAI-IGAR IN ARG TO FRM-CAI-IGAR
                                             IN ARG-FLD(WSS-IFLD).
           MOVE ARG-IIC-IGAR IN ARG TO FRM-IIC-IGAR
                                             IN ARG-FLD(WSS-IFLD).
           MOVE ARG-NUM-PORG IN ARG TO FRM-NUM-PORG
                                             IN ARG-FLD(WSS-IFLD).

           MOVE SPACES TO FRM-GLS-TOGA IN ARG-FLD(WSS-IFLD).
      *BUS-TAB Busca Glosa Moneda de Tabla
           IF ARG-COD-TOGA IN ARG > SPACES
              MOVE 'TAB'               TO TAB-COD-SIST
              MOVE 'TIO'               TO TAB-COD-TTAB IN TAB
              MOVE ARG-COD-TOGA IN ARG TO TAB-COD-CTAB IN TAB
              PERFORM BUS-TAB
              MOVE TAB-GLS-ABRV IN TAB TO
                              FRM-GLS-TOGA IN ARG-FLD(WSS-IFLD).

           MOVE SPACES TO FRM-GLS-AOGA IN ARG-FLD(WSS-IFLD).
      *BUS-TAB Busca Glosa Cod. Auxiliar de Tabla
           IF ARG-COD-AOGA IN ARG > SPACES
              MOVE 'TAB'               TO TAB-COD-SIST
              MOVE 'AUX'               TO TAB-COD-TTAB IN TAB
              MOVE SPACES              TO TAB-COD-CTAB IN TAB
              MOVE ARG-COD-TOGA IN ARG TO WSS-COD-TOPE
              MOVE ARG-COD-AOGA IN ARG TO WSS-COD-AOPE
              MOVE WSS-COD-COPE        TO TAB-COD-CTAB IN TAB
              PERFORM BUS-TAB
              MOVE TAB-GLS-ABRV IN TAB TO
                              FRM-GLS-AOGA IN ARG-FLD(WSS-IFLD).

       NXT-PUT-TAB-ARG.
           MOVE FIO-GET-NXT    TO FIO-CMND.
           PERFORM LDC-FIO-ARG.
           IF FIO-STAT-OKS AND
              ARG-KEY-ILDC IN WSS-VARI = ARG-KEY-ILDC IN ARG
              GO TO INI-PUT-TAB-ARG.

           IF FIO-STAT-OKS
               MOVE FIO-END-BRW TO FIO-CMND
               PERFORM LDC-FIO-ARG.
       FIN-PUT-TAB-ARG.
           EXIT.

       LIM-RES-LIN SECTION.
       INI-LIM-RES-LIN.
           MOVE SPACES TO FRM-COD-TOGA   IN ARG-FLD(WSS-IFLD),
                          FRM-GLS-TOGA   IN ARG-FLD(WSS-IFLD),
                          FRM-COD-AOGA   IN ARG-FLD(WSS-IFLD),
                          FRM-GLS-AOGA   IN ARG-FLD(WSS-IFLD),
                          FRM-CAI-IGAR   IN ARG-FLD(WSS-IFLD).

           MOVE ZEROES TO FRM-IIC-IGAR   IN ARG-FLD(WSS-IFLD).
           ADD 1 TO WSS-IFLD.
       FIN-LIM-RES-LIN.
           EXIT.

      *>>>>
*% END
*% IF PGM_PU
      *<<<< PGM_PU
       VAL-ARG-IGUA SECTION.
       INI-VAL-ARG-IGUA.
           IF NOT (
              FRM-COD-TOGA IN ARG-FLD(WSS-IFLD) > SPACES OR
              FRM-COD-AOGA IN ARG-FLD(WSS-IFLD) > SPACES OR
              FRM-CAI-IGAR IN ARG-FLD(WSS-IFLD) > SPACES OR
              FRM-IIC-IGAR IN ARG-FLD(WSS-IFLD) > ZEROES OR
              FRM-NUM-PORG IN ARG-FLD(WSS-IFLD) > ZEROES 
                   ) OR
              WSS-IFLD = FRM-IFLD
                GO TO FIN-VAL-ARG-IGUA.

           IF FRM-COD-TOGA IN ARG-FLD(FRM-IFLD) =
                       FRM-COD-TOGA IN ARG-FLD(WSS-IFLD) AND 

              FRM-COD-AOGA IN ARG-FLD(FRM-IFLD) =
                       FRM-COD-AOGA IN ARG-FLD(WSS-IFLD) AND

              FRM-CAI-IGAR IN ARG-FLD(FRM-IFLD) = 
                       FRM-CAI-IGAR IN ARG-FLD(WSS-IFLD) AND

              FRM-IIC-IGAR IN ARG-FLD(FRM-IFLD) = 
                       FRM-IIC-IGAR IN ARG-FLD(WSS-IFLD) 

               MOVE 'ARG=S' TO MSG-COD-MENS.

       FIN-VAL-ARG-IGUA.
           EXIT.

       PUT-ARG SECTION.
       INI-PUT-ARG.
           IF FRM-COD-TOGA IN ARG-FLD(WSS-IFLD) NOT > SPACES AND
              FRM-COD-AOGA IN ARG-FLD(WSS-IFLD) NOT > SPACES AND
              FRM-CAI-IGAR IN ARG-FLD(WSS-IFLD) NOT > SPACES AND
              FRM-IIC-IGAR IN ARG-FLD(WSS-IFLD) = ZEROES     AND
              FRM-NUM-PORG IN ARG-FLD(WSS-IFLD) = ZEROES
              GO TO FIN-PUT-ARG.

           ADD 1 TO WSS-MOV.
      *FLB CST  29-MAR-1995 
           MOVE SPACES                  TO ARG-GLS-FLAG IN ARG.
           IF SCR-CCPP = 'ING'
               MOVE 'I' TO ARG-MSC-TACC IN ARG
               MOVE 'I' TO ARG-MSC-STAT IN ARG
           ELSE
           IF SCR-CCPP = 'MOD'
               MOVE 'M' TO ARG-MSC-TACC IN ARG
               MOVE 'M' TO ARG-MSC-STAT IN ARG.

           PERFORM GET-FHOY.
      *    Fecha Transaccion
           MOVE HOY-FHOY TO ARG-FEC-FTRN IN ARG.
      *    Hora Transaccion
           MOVE HOY-HHOY TO ARG-HRA-HRTR IN ARG.
      *    Codigo Origen transaccion
           MOVE SCR-OTRN TO ARG-COD-OTRN IN ARG.
      *    Autor Transaccion
           MOVE SCR-USER TO ARG-COD-ATRN IN ARG.
      *FLB CST  29-MAR-1995 FIN
           MOVE LDC-CAI-ICLF IN ARG-FLD TO ARG-CAI-ICLF IN ARG.
           MOVE LDC-IIC-ICLF IN ARG-FLD TO ARG-IIC-ICLF IN ARG.
           MOVE LDC-NUM-ILDC IN ARG-FLD TO ARG-NUM-ILDC IN ARG.
           MOVE WSS-MOV                 TO ARG-NUM-IARG IN ARG.
           MOVE FRM-CAI-IGAR IN ARG-FLD(WSS-IFLD) TO
                                           ARG-CAI-IGAR IN ARG.
           MOVE FRM-IIC-IGAR IN ARG-FLD(WSS-IFLD) TO
                                           ARG-IIC-IGAR IN ARG.
           MOVE FRM-COD-TOGA IN ARG-FLD(WSS-IFLD) TO
                                           ARG-COD-TOGA IN ARG.
           MOVE FRM-COD-AOGA IN ARG-FLD(WSS-IFLD) TO
                                           ARG-COD-AOGA IN ARG.
           MOVE FRM-NUM-PORG IN ARG-FLD(WSS-IFLD) TO
                                           ARG-NUM-PORG IN ARG.
           MOVE SPACES                  TO ARG-GLS-DISP IN ARG.

           MOVE FIO-PUT TO FIO-CMND.
           PERFORM LDC-FIO-ARG.
           IF NOT FIO-STAT-OKS
      *          ERROR INCONSISTENCIA EN LA ELIMINACION : INFORMAR
              MOVE FIO-MENS TO FRM-MENS
              MOVE 10 TO WSS-IFLD.
       FIN-PUT-ARG.
           EXIT.

       DEL-ARG SECTION.
       INI-DEL-ARG.
           MOVE ARG-KEY-ILDC IN WSS-VARI TO ARG-KEY-ILDC IN ARG.
           MOVE ZEROES                   TO ARG-NUM-IARG IN ARG.
           MOVE FIO-GET-NLS TO FIO-CMND.
       LUP-DEL-ARG.
           PERFORM LDC-FIO-ARG.
           IF FIO-STAT-OKS
               MOVE FIO-END-BRW TO FIO-CMND.
               PERFORM LDC-FIO-ARG.

           IF NOT ( FIO-STAT-OKS AND
              ARG-KEY-ILDC IN WSS-VARI = ARG-KEY-ILDC IN ARG )
               GO TO FIN-DEL-ARG.

           MOVE FIO-GET-KEY-UPD TO FIO-CMND.
           PERFORM LDC-FIO-ARG.
           IF NOT FIO-STAT-OKS
               GO TO FIN-DEL-ARG.

           MOVE FIO-DEL TO FIO-CMND.
           PERFORM LDC-FIO-ARG.
           IF NOT FIO-STAT-OKS
               MOVE 'DEU'        TO MSG-COD-SIST
               MOVE 'ARG    DEL' TO MSG-COD-MENS
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS
               GO TO FIN-DEL-ARG.

*% IF PGM_DB2
           MOVE FIO-GET-NXT TO FIO-CMND.
*% ELSE
           MOVE ARG-KEY-ILDC IN WSS-VARI TO ARG-KEY-ILDC IN ARG.
           MOVE FIO-GET-NLS TO FIO-CMND.
*% END
           GO TO LUP-DEL-ARG.
       FIN-DEL-ARG.
           EXIT.

       COPY GNSBGHOY.
*% IF PGM_BSH 
       COPY GARBFTAG.
*% ELSE
*% IF PGM_DB2
           EXEC SQL INCLUDE GARBFTAG END-EXEC.
*% ELSE
       COPY GARBFTAG.
*% END
*% END
*% END
       COPY GNSBVCOD.
       COPY GNSBVTAB.
*% IF PGM_DB2 
           EXEC SQL INCLUDE LDCBFCLF END-EXEC.
           EXEC SQL INCLUDE LDCBFARG END-EXEC.
           EXEC SQL INCLUDE LDCBFRDC END-EXEC.
           EXEC SQL INCLUDE SGCBFDBC END-EXEC.
           EXEC SQL INCLUDE DEUBFFIA END-EXEC.
*% ELSE
       COPY LDCBFCLF.
       COPY LDCBFARG.
       COPY LDCBFRDC.
       COPY SGCBFDBC.
       COPY DEUBFFIA.
*% END
*% IF PGM_BSH 
       COPY GARBFGDG.
*% ELSE
*% IF PGM_DB2
           EXEC SQL INCLUDE GARBFGDG END-EXEC.
*% ELSE
       COPY GARBFGDG.
*% END
*% END
       COPY GNSBFCIC.
*% IF PGM_PU AND NOT PGM_ARG AND NOT ERRGLS
       COPY GNSBEGLS.
*% END
*% IF PGM_PQ
       COPY GNSBGCPT.
*% END
      *>>>>
*% END
