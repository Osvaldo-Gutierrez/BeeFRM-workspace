*% PGM_PTC = TRUE
*% INCLUDE 'LDCSRCPAI:FNCSIS.SRC'
*% LARGO_TOTAL_COMMAREA = 269
*%! LARGO_MI_COMMAREA = 19
*% IF MI_COMMAREA
      *<<<< MI_COMMAREA
           03 SCR-NUM-PANT                       PIC 9(03).
           03 SCR-TOT-OCCU                       PIC 9(03).
           03 CMA-VARI.
              05  WSS-IND-ACUM          VALUE 0  PIC 9(01).
                 88 DESPLIEGA           VALUE 0.
                 88 ACUMULA             VALUE 0.
                 88 SOLO-ACUMULA        VALUE 1.
                 88 YA-ACUMULO          VALUE 1.
              05 WSS-VAL-CDIS      COMP-3        PIC S9(11).
              05 WSS-VAL-CUTI      COMP-3        PIC S9(11).
              05 SCR-IND-MCLI                    PIC X(01).
      *ALD-BNL
              05 SCR-IMAX          COMP          PIC S9(04).
              05 SCR-I             COMP          PIC S9(04).
              05 SCR-IND-OCIC                    PIC X(01).
      *>>>>
*% END
*% IF WSS
      *<<<< WSS
       COPY LDCWXCLN.
       01  WSS-VARI.
           03 WSS-IND-TMPS     VALUE ZEROES      PIC 9(05).
           03 WSS-MAX-PANT     VALUE 3           PIC 9(05).
      *     03 WSS-IND-PANT     VALUE 1           PIC 9(05).

*% IF PGM_DTC
      *<<<< PGM_DTC
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-CRI-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-FIA-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-REC-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-RCE-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-CIC-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-DBC-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-DCP-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-DCE-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-OFI-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-USR-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-CAM-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-GDG-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-ARC-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-ARG-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-LDC-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-RDC-REQA==.
      *>>>>
*% END
*% IF NOT PGM_DB2
      * Entidades de LDC
       COPY LDCBRLDC.
       COPY LDCBRARC.
       COPY LDCBRARG.
       COPY LDCBRRDC.
      * Entidades de SGC
       COPY SGCBRDBC.
       COPY SGCBRREC.
      * Entidades de DEU
       COPY DEUBRCRI.
       COPY DEUBRFIA.
*% ELSE
           EXEC SQL INCLUDE LDCBRLDC END-EXEC.
       COPY GNSWGRQS REPLACING ==SQL-REQA== BY ==SQL-LDC-REQA==.
           EXEC SQL INCLUDE LDCBRARC END-EXEC.
       COPY GNSWGRQS REPLACING ==SQL-REQA== BY ==SQL-ARC-REQA==.
           EXEC SQL INCLUDE LDCBRARG END-EXEC.
       COPY GNSWGRQS REPLACING ==SQL-REQA== BY ==SQL-ARG-REQA==.
           EXEC SQL INCLUDE LDCBRRDC END-EXEC.
       COPY GNSWGRQS REPLACING ==SQL-REQA== BY ==SQL-RDC-REQA==.
           EXEC SQL INCLUDE SGCBRDBC END-EXEC.
       COPY GNSWGRQS REPLACING ==SQL-REQA== BY ==SQL-DBC-REQA==.
           EXEC SQL INCLUDE SGCBRREC END-EXEC.
       COPY GNSWGRQS REPLACING ==SQL-REQA== BY ==SQL-REC-REQA==.
           EXEC SQL INCLUDE DEUBRCRI END-EXEC.
       COPY GNSWGRQS REPLACING ==SQL-REQA== BY ==SQL-CRI-REQA==.
           EXEC SQL INCLUDE DEUBRFIA END-EXEC.
       COPY GNSWGRQS REPLACING ==SQL-REQA== BY ==SQL-FIA-REQA==.
*% END
*% IF PGM_BSH
      * Entidades de GAR
       COPY GARBRGDG.
*% ELSE
*% IF PGM_DB2
           EXEC SQL INCLUDE GARBRGDG END-EXEC.
       COPY GNSWGRQS REPLACING ==SQL-REQA== BY ==SQL-GDG-REQA==.
*% ELSE
      * Entidades de GAR
       COPY GARBRGDG.
*% END
*% END
      
      * MHM ini 31-JAN-1996
       COPY LDCWGCLN.
      * MHM fin 31-JAN-1996
      * Entidades de GNS
       COPY GNSBRRCE.
       COPY GNSWGCPT.
       COPY GNSWGSTR.
       COPY GNSWGPES.
      * Entidades de TAB
       COPY TABWGTVC.
       COPY TABBRCAM.
       COPY TABBROFI.
       COPY TABBRUSR.
       COPY LDCWGCCU.
       COPY LDCWGCEG.
      *<<<< INI ISP 14-MAY-1996
       01  WSS-CLC-EDT.
           03 WSS-CLC-EDT-CDIS-EDT    PIC ---.---.---.--9.
           03 WSS-CLC-EDT-CDIS-ALF    PIC X(15).
      *<<<< FIN ISP 14-MAY-1996
       01  CLN-VARI.
           03 CLF-VEZ-ARC                            PIC X(01).
           03 CLF-PRM-VEZ-ARC      VALUE 'P'         PIC X(01).
           03 CLF-OTR-VEZ-ARC      VALUE 'O'         PIC X(01).
           03 CLF-VEZ-ARG                            PIC X(01).
           03 CLF-PRM-VEZ-ARG      VALUE 'P'         PIC X(01).
           03 CLF-OTR-VEZ-ARG      VALUE 'O'         PIC X(01).
           03 CLN-I                COMP              PIC S9(04).
           03 CLN-EXI-ARC                            PIC X(01).
           03 CLN-EXI-ARG                            PIC X(01).
           03 CLN-IMP                                PIC X(01).
           03 CLN-SI-IMP    VALUE 'S'                PIC X(01).
           03 CLN-NO-IMP    VALUE 'S'                PIC X(01).
      
       01  WSS-MONE.
           03  WSS-COD-UEFES VALUE SPACES          PIC X(06).
           03  WSS-COD-PESOS VALUE SPACES          PIC X(06).
      
      * DEFINE 01  WSS-VARI DE PGM1ANIDX
        01  WSS-GLS-TIPO VALUE SPACES.
            03  WSS-GLS-TIPO-1                     PIC X(12).
            03  WSS-GLS-TIPO-2                     PIC X(01).
            03  WSS-GLS-TIPO-3                     PIC X(05).
       01  WSS-VARI.
           03 WSS-CLC-DCOR.
              05 WSS-GLS-TOOC                      PIC X(05).
              05 WSS-GLS-AOOC.
                 07 FILLER                         PIC X(03).
                 07 WSS-GLS-AOOC-EXT               PIC X(05).
           03 WSS-FEC-FCIE     VALUE 0             PIC 9(08).
           03 WSS-CIC-ICLF                         PIC X(12).
           03 WSS-IMAX                  VALUE 3    PIC 9(02).
      * PARA USAR GARSRC:ERRFNDKEY.SRC
           03 WSS-IBUS                             PIC 9(01).
           03 WSS-IBUS-LDC                         PIC 9(01).
           03 WSS-YA-ACUMULO            VALUE 1    PIC 9(01).
           03 WSS-I                 VALUE ZEROES   PIC 9(02).
           03 WSS-IND-LDC               VALUE 'N'  PIC X(01).
           03 PGM-STAT-ADI.
              05 PGM-STAT-RDC           VALUE '23' PIC X(02).
                   88 PGM-STAT-RDC-OKS  VALUE '00'.
                   88 PGM-STAT-RDC-NUL  VALUE '  '.
           03 WSS-FEC-FHOY.
              05 WSS-NUM-SHOY                      PIC 9(02).
              05 WSS-NUM-AHOY                      PIC 9(02).
              05 WSS-NUM-MHOY                      PIC 9(02).
              05 WSS-NUM-DHOY                      PIC 9(02).
              05  WSS-COD-PESO                           PIC X(06).
           03  ARC-KEY-IARC.
               05  ARC-KEY-ILDC.
                   07 ARC-CAI-ICLF                       PIC X(04).
                   07 ARC-IIC-ICLF                       PIC 9(08).
*% IF PGM_DB2
                   07 ARC-NUM-ILDC  COMP                 PIC S9(04).
               05 ARC-NUM-IARC      COMP                 PIC S9(04).
*% ELSE
                   07 ARC-NUM-ILDC                       PIC 9(02).
               05 ARC-NUM-IARC                           PIC 9(01).
*% END
           03  ARG-KEY-IARG.
               05 ARG-KEY-ILDC.
                   07 ARG-CAI-ICLF                       PIC X(04).
                   07 ARG-IIC-ICLF                       PIC 9(08).
*% IF PGM_DB2
                   07 ARG-NUM-ILDC  COMP                 PIC S9(04).
               05 ARG-NUM-IARG      COMP                 PIC S9(04).
*% ELSE
                   07 ARG-NUM-ILDC                       PIC 9(02).
               05 ARG-NUM-IARG                           PIC 9(01).
*% END
           03  WSS-FIN        VALUE ZEROES               PIC 9(01).
           03  WSS-IARC       VALUE ZEROES               PIC 9(02).
           03  WSS-IARG       VALUE ZEROES               PIC 9(02).
           03  WSS-IFLD       VALUE ZEROES               PIC 9(02).
           03  WSS-J          VALUE ZEROES               PIC 9(02).
           03  WSS-FS-ARC     VALUE ZEROES               PIC 9(02).
           03  WSS-FS-ARG     VALUE ZEROES               PIC 9(02).
      *JSS-INI 8-OCT-1993 INDICADOR PARA SABER SI EXISTE
      *               POR LO MENOS UN ARC O ARG
           03  WSS-IND-ACAG   VALUE 'N'                  PIC X(01).
      *JSS-FIN
      *>>>> WSS
*% END
*% IF INI_FIO
      *<<<< INI_FIO
      *PTC-INI-MAN
           IF SCR-OFRM-SRV
                MOVE TSK-TERM-ALF TO CLN-COD-TERM
                MOVE TSK-TERM-ALF TO CLN-COD-TERM-MAS
           ELSE
                MOVE EIBTRMID     TO CLN-COD-TERM
                MOVE EIBTRMID     TO CLN-COD-TERM-MAS.

           IF FRM-FFLD = FRM-FFLD-PF5 AND
              SCR-INST = SCR-INST-GAB
                MOVE FRM-FFLD-PF5 TO WSS-FRM-FFLD
                MOVE FRM-FFLD-RET TO FRM-FFLD
                MOVE SCR-INST-GKY TO SCR-INST
           ELSE
           IF FRM-FFLD = FRM-FFLD-PF6 AND
              SCR-INST = SCR-INST-GAB
                MOVE FRM-FFLD-PF6 TO WSS-FRM-FFLD
                MOVE FRM-FFLD-RET TO FRM-FFLD
                MOVE SCR-INST-GKY TO SCR-INST
           ELSE
                MOVE FRM-FFLD-RET TO WSS-FRM-FFLD.
      *>>>>
*% IF NOT PGM_VSI AND PGM_UVS
      *<<<< NOT PGM_VSI AND PGM_UVS
           PERFORM GNS-HDL-VSM.
      *>>>>
*% END
           PERFORM GET-FHOY.
      * OBTIENE CODIGO VALOR DE CAMBIO DE PESOS MEDIANTE CIC DE LA MONED
           MOVE 'TAB'          TO FIO-SIST.
           MOVE 'VLR'          TO TAB-CIC-TTAB IN TAB.
           MOVE '0999  '       TO TAB-CIC-CTAB IN TAB.
           MOVE 'TAB-CIC-TABL' TO FIO-AKEY.
           MOVE FIO-GET-KEY    TO FIO-CMND.
           PERFORM GNS-FIO-TAB.
           IF NOT FIO-STAT-OKS
               MOVE 'TAB'          TO MSG-COD-SIST
               MOVE 'CIC0999  NEX' TO MSG-COD-MENS
               PERFORM GET-MSG
               PERFORM PRG-ABT.
           MOVE TAB-COD-CTAB IN TAB TO CCU-COD-PESO IN CCU-VARI.
           MOVE TAB-COD-CTAB IN TAB TO WSS-COD-PESOS TVC-MNAC.
      
           MOVE 'TAB'          TO FIO-SIST.
           MOVE 'VLR'          TO TAB-CIC-TTAB.
           MOVE '0998'         TO TAB-CIC-CTAB.
           MOVE FIO-GET-KEY    TO FIO-CMND.
           MOVE 'TAB-CIC-TABL' TO FIO-AKEY.
           PERFORM GNS-FIO-TAB.
           IF NOT FIO-STAT-OKS
               GO TO FIN-INI.
           MOVE TAB-COD-CTAB IN TAB TO WSS-COD-UEFES.
      
      *>>>>
*% END
*% IF INI_SCR_COM
      *<<<< INI_SCR_COM
           MOVE CLN-NOM-TSCLN  TO QUE-COLA.
           MOVE QUE-DEL TO QUE-CMND.
           PERFORM GNS-PRO-QUE.
      *>>>>
*% END
*% IF PFS_SCR_GKEY_PREV
      *<<<< PFS_SCR_GKEY_PREV
           IF WSS-FRM-FFLD = FRM-FFLD-PF5 OR
              WSS-FRM-FFLD = FRM-FFLD-PF6
                 IF FRM-FFLD = FRM-FFLD-PF5
                     MOVE FRM-FFLD-RET TO FRM-FFLD
              ELSE
                 IF FRM-FFLD = FRM-FFLD-PF6
                     MOVE FRM-FFLD-RET TO FRM-FFLD.
      *>>>>
*% END
*% IF PFS_SCR_ACC
      *<<<< PFS_SCR_ACC
      *     IF FRM-FFLD = FRM-FFLD-PF6
      *              OR   FRM-FFLD-PF5
      *         PERFORM VAL-NUM-KEY-CLN
      *         PERFORM VAL-NUM-FLD-CLN
      *         PERFORM RST-STAT
      *         PERFORM FND-SCR-KEY THRU FIN-SCR-KEY
      *         IF SCR-STAT NOT = SCR-STAT-ABT
      *             PERFORM SCR-TRL
      *         ELSE
      *             PERFORM DESSCRTRL
      *             GO TO FIN-SCR-ACC.
      *>>>>
*% END
*% IF INI_FND_KEY
      *<<<< INI_FND_KEY
           IF WSS-FRM-FFLD = FRM-FFLD-PF5 OR
              WSS-FRM-FFLD = FRM-FFLD-PF6
              GO TO FIN-FND-KEY.
           PERFORM ANL-KEY-CLN.
           MOVE 1 TO SCR-NUM-PANT.
           GO TO FIN-FND-KEY.

      * ASUME MENSAJE DEL SISTEMA DEL HIJO EN ERRFNDKEY.SRC
      *     MOVE 1 TO WSS-IBUS, WSS-IBUS-LDC.
      *     MOVE SPACES TO FRM-MENS.
      * 
      *     IF FRM-FFLD = FRM-FFLD-PF5
      *         MOVE PGM-SNUL TO PGM-STAT-CLF
      *         MOVE PGM-SNUL TO PGM-STAT-DBC
      *         SUBTRACT 1 FROM SCR-I GIVING CLN-I
      *         IF CLN-I NOT > ZEROES
      *             MOVE 'CLF LDCPRV' TO MSG-COD-MENS
      *             GO TO ERR-FND-KEY
      *         ELSE
      *             GO TO CARGA-LDC
      *     ELSE
      *     IF FRM-FFLD = FRM-FFLD-PF6
      *         MOVE PGM-SNUL TO PGM-STAT-CLF
      *         MOVE PGM-SNUL TO PGM-STAT-DBC
      *         ADD 1 SCR-I GIVING CLN-I
      *         IF CLN-I > SCR-IMAX
      *             MOVE 'CLF LDCNXT' TO MSG-COD-MENS
      *             GO TO ERR-FND-KEY
      *         ELSE
      *             GO TO CARGA-LDC.
      * 
      *     GO TO LEE-PAD-CLF.
      *>>>>
*% END
*% IF PUT_SCR
      *<<<< PUT_SCR
           IF WSS-FRM-FFLD = FRM-FFLD-PF5 OR
              WSS-FRM-FFLD = FRM-FFLD-PF6
              GO TO EXT-PUT-SCR.
           MOVE WSS-CIC-ICLI TO DBC-CIC-ICLI IN DBC.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM SGC-FIO-DBC.
           IF FIO-STAT-OKS
                 MOVE '00' TO PGM-STAT-DBC
                 MOVE DBC-GLS-NOMC IN DBC TO CPT-STRN
                 PERFORM CPT-BLKS
                 MOVE CPT-STRN            TO DBC-GLS-NOMC IN DBC.
       EXT-PUT-SCR.
      *>>>>
*% END
*% IF FIN_PUT_SCR
      *<<<< FIN_PUT_SCR

      * AQUI MOVER LOS DATOS DE TS-CLN A PANTALLA
           MOVE SCR-TOT-OCCU TO CLN-MAS-NUM-TOCC.
           MOVE 'N'          TO CLN-MAS-IND-HMAS.
           IF WSS-FRM-FFLD = FRM-FFLD-RET
                 MOVE ZEROES TO QUE-NITM
           ELSE
           IF WSS-FRM-FFLD = FRM-FFLD-PF6
                 COMPUTE QUE-NITM = (SCR-NUM-PANT * WSS-MAX-PANT)
                 IF QUE-NITM NOT < SCR-TOT-OCCU
                     MOVE 'CLF' TO MSG-COD-SIST
                     MOVE 'CLNPF6 NEX' TO MSG-COD-MENS
                     PERFORM GET-MSG
                     MOVE MSG-GLS-DESC TO FRM-MENS
                     COMPUTE QUE-NITM =
                            (SCR-NUM-PANT * WSS-MAX-PANT) - 3
                 ELSE
                     ADD 1 TO SCR-NUM-PANT
           ELSE
           IF WSS-FRM-FFLD = FRM-FFLD-PF5
                 COMPUTE QUE-NITM = (SCR-NUM-PANT * WSS-MAX-PANT) - 5
                 IF QUE-NITM < 1
                    MOVE 'CLF' TO MSG-COD-SIST
                    MOVE 'CLNPF5 NEX' TO MSG-COD-MENS
                    PERFORM GET-MSG
                    MOVE MSG-GLS-DESC TO FRM-MENS
                    COMPUTE QUE-NITM = (SCR-NUM-PANT * WSS-MAX-PANT) - 3
                 ELSE
                    SUBTRACT 1 FROM QUE-NITM
                    SUBTRACT 1 FROM SCR-NUM-PANT.
           MOVE CLN-NOM-TSCLN  TO QUE-COLA.
           MOVE CLN-LEN-TSCLN  TO QUE-LITM.
       CIC-LEE-TS.
           ADD 1 TO QUE-NITM.
           MOVE QUE-GET TO QUE-CMND.
           PERFORM GNS-PRO-QUE.
           IF QUE-STAT = QUE-STAT-OKS
               MOVE QUE-ITEM TO CLN-ITEM
               PERFORM MOV-TS-FRM
               GO TO CIC-LEE-TS
           ELSE
           IF QUE-NITM = 1
               MOVE 'LDC' TO MSG-COD-SIST
               MOVE 'CLN    NEX' TO MSG-COD-MENS
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS.
      *INI-CAF.
      * MHM ini 1-FEB-1996
      *     PERFORM GNS-ERR-QUE.
      *     MOVE SCR-OTRN        TO CLN-TERM-H.
      *     MOVE CLN-NAME-QUE-H  TO QUE-COLA.
      *     MOVE QUE-DEL         TO QUE-CMND.
      *     PERFORM GNS-PRO-QUE.
      *     MOVE CLF-CAI-ICLF IN CLN-FLD TO CLN-CLF-CAI-ICLF.
      *     MOVE CLF-IIC-ICLF IN CLN-FLD TO CLN-CLF-IIC-ICLF.
      *     MOVE DBC-NUM-ICLI IN CLN-FLD TO CLN-DBC-NUM-ICLI.
      *     MOVE DBC-VRF-ICLI IN CLN-FLD TO CLN-DBC-VRF-ICLI.
      *     MOVE DBC-IND-ICLI IN CLN-FLD TO CLN-DBC-IND-ICLI.
      *     MOVE DBC-GLS-ICLI IN CLN-FLD TO CLN-DBC-GLS-ICLI.
      *     MOVE DBC-GLS-NOMC IN CLN-FLD TO CLN-DBC-GLS-NOMC.
      *     MOVE FRM-GLS-NOMC IN CLN-FLD TO CLN-FRM-GLS-NOMC.
      *     MOVE DBC-COD-ACTI IN CLN-FLD TO CLN-DBC-COD-ACTI.
      *     MOVE CLF-CAI-CREN IN CLN-FLD TO CLN-CLF-CAI-CREN.
      *     MOVE CLF-IIC-CREN IN CLN-FLD TO CLN-CLF-IIC-CREN.
      *     MOVE CLF-FEC-FPRV IN CLN-FLD TO CLN-CLF-FEC-FPRV.
      *     MOVE FRM-GLS-TOCF IN CLN-FLD TO CLN-FRM-GLS-TOCF.
      *     MOVE FRM-GLS-CRSB IN CLN-FLD TO CLN-FRM-GLS-CRSB.
      *     MOVE CLF-NUM-PREV IN CLN-FLD TO CLN-CLF-NUM-PREV.
      *     MOVE FRM-GLS-AOCF IN CLN-FLD TO CLN-FRM-GLS-AOCF.
      *     MOVE DBC-FEC-FINP IN CLN-FLD TO CLN-DBC-FEC-FINP.
      *     MOVE FRM-GLS-OFIC IN CLN-FLD TO CLN-FRM-GLS-OFIC.
      *     MOVE CLF-FEC-FURV IN CLN-FLD TO CLN-CLF-FEC-FURV.
      *     MOVE FRM-GLS-VCCF IN CLN-FLD TO CLN-FRM-GLS-VCCF.
      *     MOVE CLF-FEC-FAPE IN CLN-FLD TO CLN-CLF-FEC-FAPE.
      *     MOVE FRM-GLS-EJEC IN CLN-FLD TO CLN-FRM-GLS-EJEC.
      *     MOVE CLF-FEC-FCIE IN CLN-FLD TO CLN-CLF-FEC-FCIE.
      *     MOVE FRM-GLS-STAT IN CLN-FLD TO CLN-FRM-GLS-STAT.
      *     MOVE CLF-FEC-FVEN IN CLN-FLD TO CLN-CLF-FEC-FVEN.
      *     MOVE FRM-GLS-AGES IN CLN-FLD TO CLN-FRM-GLS-AGES.
      *     MOVE FRM-GLS-RAZC IN CLN-FLD TO CLN-FRM-GLS-RAZC.
      *     MOVE CLF-VAL-CMAX IN CLN-FLD TO CLN-CLF-VAL-CMAX.
      *     MOVE FRM-VAL-CUTI IN CLN-FLD TO CLN-FRM-VAL-CUTI.
      **<<<< INI ISP 14-MAY-1996
      **     MOVE FRM-VAL-CDIS IN CLN-FLD TO CLN-FRM-VAL-CDIS.
      *     MOVE FRM-VAL-CDIS IN CLN-FLD TO
      *          WSS-CLC-EDT-CDIS-EDT.
      *     MOVE WSS-CLC-EDT-CDIS-EDT TO WSS-CLC-EDT-CDIS-ALF.
      *     MOVE WSS-CLC-EDT-CDIS-ALF TO     CLN-FRM-VAL-CDIS.
      **<<<< FIN ISP 14-MAY-1996
      *     MOVE USR-COD-AGES IN CLN-FLD TO CLN-USR-COD-AGES.
      *     MOVE CRI-IND-CRSB IN CLN-FLD TO CLN-CRI-IND-CRSB.
      *     MOVE DBC-COD-OFIC IN CLN-FLD TO CLN-DBC-COD-OFIC.
      *
      *     MOVE FRM-GLS-PREV IN CLN-FLD TO CLN-FRM-GLS-PREV.
      *
      *     MOVE CLN-FIL-TS     TO QUE-ITEM.
      *     MOVE CLN-LONG-TS-H  TO QUE-LITM.
      *     MOVE SCR-OTRN       TO CLN-TERM-H.
      *     MOVE CLN-NAME-QUE-H TO QUE-COLA.
      *     MOVE QUE-PUT        TO QUE-CMND.
      *     PERFORM GNS-PRO-QUE.
      ** MHM fin 1-FEB-1996
      ** ISP-INI 04-02-2004
      *     MOVE SCR-OTRN       TO CLN-TLDC-TERM.
      *     MOVE CLN-TLDC-COLA TO QUE-COLA.
      *     MOVE 1 TO QUE-NITM.
      *     MOVE CLN-TLDC-LITM  TO QUE-LITM.
      *      MOVE QUE-GET TO QUE-CMND.
      *     PERFORM GNS-PRO-QUE.
      * 
      *     IF QUE-STAT = QUE-STAT-OKS
      *          MOVE QUE-DEL TO QUE-CMND
      *          PERFORM GNS-PRO-QUE
      *          MOVE CLN-TLDC-ITEM  TO QUE-ITEM
      *          MOVE QUE-PUT TO QUE-CMND
      *          PERFORM GNS-PRO-QUE.
      ** ISP-FIN 04-02-2004
      *FIN-CAF.
      *>>>>
*% END
*% IF FIN_FND_KEY
      *<<<< FIN_FND_KEY
       LEE-PAD-CLF.
      * Lee por Capacidad de Credito y luego busca Cliente
           IF CLF-IIC-ICLF IN CLN-FLD > ZEROES
               PERFORM KEY-ALL-CLN
               MOVE FIO-GET-KEY TO FIO-CMND
               PERFORM LDC-FIO-CLF
               MOVE FIO-STAT TO PGM-STAT-CLF
               IF FIO-STAT-OKS
                  PERFORM GET-CUR-RDC
                  IF NOT PGM-STAT-RDC-OKS
                     MOVE 'DEU'          TO MSG-COD-SIST
                     MOVE 'CLF    NORDC' TO MSG-COD-MENS
                     MOVE SCR-STAT-CON TO SCR-STAT
                     GO TO ERR-FND-KEY
                  ELSE
                     MOVE RDC-CIC-ICLI IN RDC TO DBC-CIC-ICLI IN DBC
                     MOVE FIO-GET-KEY         TO FIO-CMND
                     PERFORM SGC-FIO-DBC
                     MOVE FIO-STAT TO PGM-STAT-DBC
                     IF NOT FIO-STAT-OKS
                        MOVE 'TAB'        TO MSG-COD-SIST
                        MOVE 'CLI    NEX' TO MSG-COD-MENS
                        PERFORM GET-MSG
                        MOVE MSG-GLS-DESC TO FRM-MENS
                        MOVE FIO-STAT-NEX TO PGM-STAT-DBC
                        MOVE SCR-STAT-CON TO SCR-STAT
                        GO TO ERR-FND-KEY
                     ELSE
                        PERFORM GET-NXT-RDC
                        MOVE '00' TO PGM-STAT-DBC
                        MOVE '00' TO FIO-STAT
                        GO TO FIN-BUS-PAD
           ELSE
              MOVE 'CLF    NEX' TO MSG-COD-MENS
              GO TO ERR-FND-KEY.
      
      * Lee Cliente y luego busca Capacidad de Credito
      *    busca el padre por alguna de las llaves (la digitada)
           IF DBC-NUM-ICLI IN CLN-FLD NOT = ZEROES
      *IDC-CLI Busca Cliente por medio de IdC
               MOVE DBC-NUM-ICLI IN CLN-FLD TO DBC-NUM-ICLI IN DBC
               MOVE DBC-IND-ICLI IN CLN-FLD TO DBC-IND-ICLI IN DBC
               MOVE DBC-GLS-ICLI IN CLN-FLD TO DBC-GLS-ICLI IN DBC
               MOVE 'DBC-IDC-ICLI' TO FIO-AKEY
               MOVE FIO-GET-KEY    TO FIO-CMND
               PERFORM GET-CLI
               IF MSG-COD-MENS NOT > SPACES
                   MOVE DBC-GLS-NOMC IN DBC TO CPT-STRN
                   PERFORM CPT-BLKS
                   MOVE CPT-STRN TO DBC-GLS-NOMC IN CLN-FLD
                   MOVE DBC-CAI-ICLI IN DBC TO
                        DBC-CAI-ICLI IN CLN-FLD
                   MOVE DBC-IIC-ICLI IN DBC TO
                        DBC-IIC-ICLI IN CLN-FLD
                   MOVE '00' TO PGM-STAT-DBC
                   GO TO FIN-BUS-CLI-KEY
               ELSE
                   MOVE MSG-GLS-DESC TO FRM-MENS
                                        CLN-GLS-MENS
                   MOVE 'S' TO SCR-IERR.
           IF DBC-GLS-NOMC IN CLN-FLD > SPACES

      *NOM-CLI Busca Cliente por medio del Nombre
               MOVE DBC-GLS-NOMC IN CLN-FLD TO STR-GLS-GSTR
               PERFORM STR-UNS
               MOVE STR-GLS-FUNS IN STR-VARI(1) TO
                    DBC-GLS-APAT IN DBC
               MOVE STR-GLS-FUNS IN STR-VARI(2) TO
                    DBC-GLS-AMAT IN DBC
               MOVE STR-GLS-FUNS IN STR-VARI(3) TO
                    DBC-GLS-NOMB IN DBC
               MOVE 'DBC-GLS-NOMC' TO FIO-AKEY
               MOVE FIO-GET-NLS    TO FIO-CMND
               PERFORM GET-CLI
               IF MSG-COD-MENS NOT > SPACES
                   MOVE DBC-NUM-ICLI IN DBC TO
                        DBC-NUM-ICLI IN CLN-FLD
                   MOVE DBC-VRF-ICLI IN DBC TO
                        DBC-VRF-ICLI IN CLN-FLD
                   MOVE DBC-IND-ICLI IN DBC TO
                        DBC-IND-ICLI IN CLN-FLD
                   MOVE DBC-GLS-ICLI IN DBC TO
                        DBC-GLS-ICLI IN CLN-FLD
                   MOVE DBC-GLS-NOMC IN DBC TO CPT-STRN
                   PERFORM CPT-BLKS
                   MOVE CPT-STRN TO DBC-GLS-NOMC IN CLN-FLD
                   MOVE DBC-CAI-ICLI IN DBC TO
                        DBC-CAI-ICLI IN CLN-FLD
                   MOVE DBC-IIC-ICLI IN DBC TO
                        DBC-IIC-ICLI IN CLN-FLD
                   MOVE '00' TO PGM-STAT-DBC
                   GO TO FIN-BUS-CLI-KEY
               ELSE
                   MOVE MSG-GLS-DESC TO FRM-MENS
                                        CLN-GLS-MENS
                   MOVE 'S' TO SCR-IERR.

      
       FIN-BUS-CLI-KEY.
            IF MSG-COD-MENS > SPACES
                GO TO ERR-FND-KEY.
           MOVE '00' TO PGM-STAT-DBC.
           MOVE SPACES TO MSG-COD-MENS
           PERFORM BUS-CLF.
           IF MSG-COD-MENS > SPACES
              PERFORM GET-MSG
              MOVE MSG-GLS-DESC TO FRM-MENS
              GO TO ERR-FND-KEY.

      
       FIN-BUS-PAD.
           IF NOT FIO-STAT-OKS
               MOVE 'CLF    NEX' TO MSG-COD-MENS
               GO TO ERR-FND-KEY.
      
      * NO ESTA EN BNL, A LO MEJOR SIGNIFICA OTRA LLAVE
           MOVE CLF-KEY-ICLF IN CLF TO LDC-CIC-ICLF IN LDC.
           MOVE ZEROES TO LDC-NUM-ILDC IN LDC.
           MOVE FIO-GET-NLS TO FIO-CMND.
           PERFORM LDC-FIO-LDC.
           IF NOT FIO-STAT-OKS OR
              LDC-CIC-ICLF IN LDC NOT = CLF-KEY-ICLF IN CLF
               MOVE 'LDC    NEX' TO MSG-COD-MENS
               GO TO ERR-FND-KEY.
           IF FIO-STAT-OKS
               MOVE FIO-END-BRW TO FIO-CMND
               PERFORM LDC-FIO-LDC.
      
           PERFORM GET-FHOY.
           MOVE HOY-SHOY           TO WSS-NUM-SHOY IN WSS-VARI.
           MOVE HOY-AHOY           TO WSS-NUM-AHOY IN WSS-VARI.
           MOVE HOY-MHOY           TO WSS-NUM-MHOY IN WSS-VARI.
           MOVE HOY-DHOY           TO WSS-NUM-DHOY IN WSS-VARI.
      
      *FLB CST  21-SEP-1994 CCU FUNCIONE LUEGO MCA/CMX Y ANTES ACA
      
           IF ( CLF-MSC-STAT IN CLF = 'A' OR
                CLF-MSC-STAT IN CLF = 'V' OR
                CLF-COD-STAT IN CLF = 'M' AND
                CLF-MSC-STAT IN CLF NOT = 'V' OR
                CLF-COD-STAT IN CLF = 'X' ) AND
              ( CLF-FEC-FVEN IN CLF NOT < WSS-FEC-FHOY IN WSS-VARI )
      
               MOVE CLF-KEY-ICLF IN CLF TO CCU-CIC-ICLF
               MOVE SPACES TO CCU-CAI-IOPC(1)
               MOVE ZEROES TO CCU-IIC-IOPC(1)
               MOVE SPACES TO CCU-CAI-DCAN(1)
               MOVE ZEROES TO CCU-IIC-DCAN(1)
               MOVE ZEROES TO CCU-NUM-DCAN(1)
               MOVE SPACES TO CCU-OPE-INDS
               PERFORM LDC-PRO-CCU
               IF CCU-NUM-MENS < CCU-NUM-CALC AND
                  CCU-NUM-MENS > ZEROES
                   IF CCU-MEN1 > SPACES AND CCU-MEN2 > SPACES
                       MOVE CCU-MENS TO FRM-MENS
                       GO TO ERR-FND-KEY
                   ELSE
                   IF CCU-MEN1 > SPACES
                       MOVE CCU-MEN1 TO FRM-MEN1
                       GO TO ERR-FND-KEY
                   ELSE
                   IF CCU-MEN2 > SPACES
                       MOVE CCU-MEN2 TO FRM-MEN2
                       GO TO ERR-FND-KEY
                   ELSE
                       GO TO ERR-FND-KEY
               ELSE
                   MULTIPLY CCU-VAL-CUTI IN CCU-VARI BY 1
                            GIVING WSS-VAL-CUTI ROUNDED
                   MOVE WSS-VAL-CUTI TO FRM-VAL-CUTI IN CLN-FLD
                   SUBTRACT    WSS-VAL-CUTI FROM
                               CLF-VAL-CMAX IN CLF GIVING
                               FRM-VAL-CDIS IN CLN-FLD
           ELSE
               MOVE 'CLF    NOVIG' TO MSG-COD-MENS
               GO TO ERR-FND-KEY.
      
           MOVE 'TAB' TO FIO-SIST.
           MOVE 'TIO ' TO TAB-COD-TTAB IN TAB.
           MOVE CLF-COD-TOCF IN CLF TO TAB-COD-CTAB IN TAB.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM GNS-FIO-TAB.
           IF FIO-STAT-OKS AND TAB-CIC-CTAB IN TAB = 'CGE'
               GO TO FIN-FND-KEY.
           MOVE CCU-CIC-ICLF TO CLF-CIC-ICLF IN CLF.
      *     MOVE ZEROES TO SCR-IMAX.
           MOVE 1 TO SCR-I.
           PERFORM OBT-DAT-TS.
           MOVE 1 TO SCR-I.
           MOVE SCR-I TO CLN-I.
      
       CARGA-LDC.
           MOVE SPACES TO MSG-COD-MENS.
      *     PERFORM PUT-TAB-LDC.
      *FLB CST  21-SEP-1994 CCU FUNCIONE LUEGO MCA/CMX Y ANTES ACA
           IF MSG-COD-MENS > SPACES
               MOVE 'DEU' TO MSG-COD-SIST
               PERFORM GET-MSG.
           IF MSG-COD-MENS > SPACES AND
              CCU-MENS NOT > SPACES AND
              ( NOT ( CLF-COD-STAT IN CLF = 'M' OR 'X' ) OR
                CLF-MSC-STAT = 'V' )
               MOVE MSG-GLS-DESC TO FRM-MENS
           ELSE
           IF MSG-COD-MENS > SPACES AND
              CCU-MENS NOT > SPACES AND
              ( CLF-COD-STAT IN CLF = 'M' OR 'X' )
               MOVE MSG-GLS-DESC TO FRM-MEN1
               MOVE 'DEU' TO MSG-COD-SIST
               MOVE 'CLFREN-' TO MSG-COD-TMSG
               MOVE CLF-COD-STAT IN CLF TO MSG-COD-CMSG
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MEN2
           ELSE
           IF MSG-COD-MENS > SPACES
               IF CCU-MEN1 > SPACES
                   MOVE CCU-MEN1 TO FRM-MEN2
               ELSE
                   MOVE CCU-MEN2 TO FRM-MEN2
           ELSE
           IF ( CLF-COD-STAT IN CLF = 'M' OR 'X' ) AND
              CLF-MSC-STAT NOT = 'V'
               MOVE 'DEU' TO MSG-COD-SIST
               MOVE 'CLFREN-' TO MSG-COD-TMSG
               MOVE CLF-COD-STAT IN CLF TO MSG-COD-CMSG
               PERFORM GET-MSG
               IF CCU-MENS NOT > SPACES
                   MOVE MSG-GLS-DESC TO FRM-MENS
               ELSE
                   IF CCU-MEN1 > SPACES
                       MOVE MSG-GLS-DESC TO FRM-MEN2
                   ELSE
                       MOVE CCU-MEN2 TO FRM-MEN1
                       MOVE MSG-GLS-DESC TO FRM-MEN2
           ELSE
               MOVE CCU-MENS TO FRM-MENS.
      
      * FMR: CMT verificar si existen
           IF FRM-MEN2 NOT > SPACES
               MOVE CLF-CIC-ICLF IN CLF TO RCE-GLS-IENT IN RCE
*% IF PGM_PER
      *<<<< PGM_PER
               MOVE 'LDC'               TO RCE-COD-SIST IN RCE
               MOVE 'CEM'               TO RCE-COD-ENTI IN RCE
      *>>>>
*% ELSE
      *<<<< NOT PGM_PER
               MOVE 'DEU'               TO RCE-COD-SIST IN RCE
               MOVE 'CLF'               TO RCE-COD-ENTI IN RCE
      *>>>>
*% END
               MOVE SPACES              TO RCE-COD-SENT IN RCE
               MOVE 'RCE-KEY-IENT' TO FIO-AKEY
               MOVE FIO-GET-KEY    TO FIO-CMND
               PERFORM GNS-FIO-RCE
               IF FIO-STAT-OKS
                   MOVE 'DEU'          TO MSG-COD-SIST
                   MOVE 'CLFEXTCMT'    TO MSG-COD-MENS
                   PERFORM GET-MSG
                   MOVE MSG-GLS-DESC   TO FRM-MEN2
               ELSE
                   MOVE SPACES         TO FRM-MEN2.
           MOVE '00' TO FIO-STAT.
           GO TO FIN-FND-KEY.
      
       ERR-FND-KEY.
           MOVE SCR-STAT-CON TO SCR-STAT.
           IF FRM-MENS > SPACES
               MOVE '00' TO FIO-STAT.
               GO TO FIN-FND-KEY.
      
      *    Busca mensaje error en Sistema LDC
           IF WSS-IBUS = 0 AND WSS-IBUS-LDC = 0
      *        busco por padre y no encontro padre
               MOVE SPACES TO PGM-STAT
               MOVE 'DEU' TO MSG-COD-SIST
               MOVE FIO-STAT-NEX TO PGM-STAT-CLF
           ELSE
      *        todos otros casos: el error pertenece al sistema LDC
               MOVE 'DEU' TO MSG-COD-SIST.
           PERFORM GET-MSG.
           MOVE MSG-GLS-DESC TO FRM-MENS.
           MOVE '00' TO FIO-STAT.
           GO TO FIN-FND-KEY.
      *>>>>
*% END
*% IF PFS_GET_CON OR PFS_GET_ACC
      *<<<< PFS_GET_CON OR PFS_GET_ACC
           IF NOT ( FRM-FFLD = FRM-FFLD-PF6
                          OR   FRM-FFLD-PF5
                  )
      *>>>>
*% END
*% IF INI_HBL_IKY
      *<<<< INI_HBL_IKY
           IF SCR-DESDE-CMN
               MOVE SPACES TO SCR-IND-MCLI.
      *>>>>
*% END
*% IF EOF
      *<<<< EOF
*% IF NOT PGM_VSI AND PGM_UVS
      *<<<< NOT PGM_VSI AND PGM_UVS
       COPY GNSBGVSM.
       COPY GNSBHVSM.
      *>>>>
*% END
      *SMC-INI 23-11-1993
       BUS-CLF SECTION.
       INI-BUS-CLF.
           MOVE DBC-CIC-ICLI IN DBC TO RDC-CIC-ICLI IN RDC.
           MOVE SPACES              TO RDC-CIC-ICLF IN RDC.      
           MOVE FIO-GET-NLS TO FIO-CMND.
           PERFORM LDC-FIO-RDC.
           MOVE FIO-STAT TO PGM-STAT-RDC.
           IF NOT ( FIO-STAT-OKS AND
                    DBC-CIC-ICLI IN DBC = RDC-CIC-ICLI IN RDC )
               MOVE 'DEU'          TO MSG-COD-SIST
               MOVE 'CLF    NORDC' TO MSG-COD-MENS
               GO TO BRW-BUS-CLF.      
           MOVE ZEROES TO WSS-FEC-FCIE.
           MOVE RDC-CIC-ICLF IN RDC TO WSS-CIC-ICLF.
           
       LUP-BUS-CLF.
           MOVE RDC-CIC-ICLF IN RDC TO CLF-CIC-ICLF IN CLF.
           MOVE CLF-CAI-ICLF IN CLF TO CLF-CAI-ICLF IN CLN-FLD.
           MOVE CLF-IIC-ICLF IN CLF TO CLF-IIC-ICLF IN CLN-FLD.
           MOVE FIO-GET-KEY TO FIO-CMND.
           MOVE FIO-STAT TO PGM-STAT-CLF.
           PERFORM LDC-FIO-CLF.
           IF NOT FIO-STAT-OKS
               MOVE 'CLF    NEX' TO MSG-COD-MENS
               GO TO BRW-BUS-CLF.      
           IF NOT ( CLF-MSC-STAT IN CLF = 'C' OR 'R' )
               GO TO BRW-BUS-CLF.      
           IF CLF-FEC-FCIE IN CLF > WSS-FEC-FCIE
               MOVE CLF-CIC-ICLF IN CLF TO WSS-CIC-ICLF
               MOVE CLF-FEC-FCIE IN CLF TO WSS-FEC-FCIE.
      
       NXT-BUS-CLF.
           MOVE FIO-GET-NXT TO FIO-CMND.
           PERFORM LDC-FIO-RDC.
           MOVE FIO-STAT TO PGM-STAT-RDC.
           IF FIO-STAT-OKS AND
              DBC-CIC-ICLI IN DBC = RDC-CIC-ICLI IN RDC
               GO TO LUP-BUS-CLF.
           MOVE WSS-CIC-ICLF TO CLF-CIC-ICLF IN CLF.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM LDC-FIO-CLF.
           MOVE FIO-STAT TO PGM-STAT-CLF.
           MOVE CLF-CAI-ICLF IN CLF TO CLF-CAI-ICLF IN CLN-FLD.
           MOVE CLF-IIC-ICLF IN CLF TO CLF-IIC-ICLF IN CLN-FLD.

       BRW-BUS-CLF.
           IF PGM-STAT-RDC-OKS
               MOVE FIO-END-BRW TO FIO-CMND
               PERFORM LDC-FIO-RDC.
       FIN-BUS-CLF.
           EXIT.
      
      *SMC-FIN 23-11-1993
       RST-STAT SECTION.
       INI-RST-STAT.
           MOVE SCR-STPP     TO SCR-STAT.
           MOVE SCR-MFLD-NOT TO SCR-MFLD.
       FIN-RST-STAT.
           EXIT.
      
      *<<<CAF--------------.
      * PUT-TAB-LDC SECTION.
      * INI-PUT-TAB-LDC.
      *     PERFORM RED-TS.
      *     PERFORM LLE-DAT-PNT VARYING CLN-I FROM 1 BY 1
      *             UNTIL CLN-I > WSS-IMAX.
      * FIN-PUT-TAB-LDC.
      *     EXIT.
      *
      * LLE-DAT-PNT SECTION.
      * INI-LLE-DAT-PNT.
      *     MOVE CLN-COD-TINF(CLN-I) TO FRM-COD-TINF IN CLN-FLD(CLN-I).   
      *     MOVE CLN-NUM-ILDC(CLN-I) TO FRM-NUM-ILDC IN CLN-FLD(CLN-I).
      *     MOVE CLN-NUM-CORR(CLN-I) TO FRM-NUM-CORR IN CLN-FLD(CLN-I).           
      *     MOVE CLN-IND-VIGE(CLN-I) TO FRM-IND-VIGE IN CLN-FLD(CLN-I).
      *     MOVE CLN-COD-TIPO(CLN-I) TO FRM-COD-TIPO IN CLN-FLD(CLN-I).
      *     MOVE CLN-GLS-TIPO(CLN-I) TO FRM-GLS-TIPO IN CLN-FLD(CLN-I).
      *     MOVE CLN-COD-VCLC(CLN-I) TO FRM-COD-MLDC IN CLN-FLD(CLN-I).
      *     MOVE CLN-GLS-VCLC(CLN-I) TO FRM-GLS-MLDC IN CLN-FLD(CLN-I).
      *     MOVE CLN-FEC-FVEN(CLN-I) TO FRM-FEC-FVEN IN CLN-FLD(CLN-I).
      *     MOVE CLN-VAL-CMLC(CLN-I) TO FRM-VAL-CMLC IN CLN-FLD(CLN-I).
      *     MOVE CLN-VAL-CDLC(CLN-I) TO FRM-VAL-CDLC IN CLN-FLD(CLN-I).
      *     MOVE CLN-IND-MGAR(CLN-I) TO FRM-IND-MGAR IN CLN-FLD(CLN-I).
      *     MOVE CLN-COD-SGAR(CLN-I) TO FRM-COD-SGAR IN CLN-FLD(CLN-I).
      *     MOVE CLN-COD-TOOP(CLN-I) TO FRM-COD-TOOP IN CLN-FLD(CLN-I).
      *     MOVE CLN-COD-AOOP(CLN-I) TO FRM-COD-AOOP IN CLN-FLD(CLN-I).
      **INI-CAF
      *     MOVE CLN-GLS-TOOP(CLN-I) TO FRM-GLS-TOOP IN CLN-FLD(CLN-I).
      *     MOVE CLN-GLS-AOOP(CLN-I) TO FRM-GLS-AOOP IN CLN-FLD(CLN-I).
      **FIN-CAF
      *     MOVE CLN-CAI-IOPR(CLN-I) TO FRM-CAI-IOPR IN CLN-FLD(CLN-I).
      *     MOVE CLN-IIC-IOPR(CLN-I) TO FRM-IIC-IOPR IN CLN-FLD(CLN-I).
      *     MOVE CLN-COD-VARC(CLN-I) TO FRM-COD-VARC IN CLN-FLD(CLN-I).
      *     MOVE CLN-GLS-VARC(CLN-I) TO FRM-GLS-VARC IN CLN-FLD(CLN-I).
      *     MOVE CLN-NUM-PORG(CLN-I) TO FRM-NUM-PORG IN CLN-FLD(CLN-I).
      *     MOVE CLN-VAL-CACT(CLN-I) TO FRM-VAL-CACT IN CLN-FLD(CLN-I).
      * FIN-LLE-DAT-PNT.
      *     EXIT.
      *-----------CAF>>>
      * Entidades de LDC
*% IF NOT PGM_DB2
       COPY LDCBFLDC.
       COPY LDCBFARC.
       COPY LDCBFARG.
       COPY LDCBFRDC.
      * Entidades de SGC
       COPY SGCBFDBC.
       COPY SGCBFREC.
      * Entidades de DEU
       COPY DEUBFCRI.
       COPY DEUBFFIA.
*% ELSE
           EXEC SQL INCLUDE LDCBFLDC END-EXEC.
           EXEC SQL INCLUDE LDCBFARC END-EXEC.
           EXEC SQL INCLUDE LDCBFARG END-EXEC.
           EXEC SQL INCLUDE LDCBFRDC END-EXEC.
      * Entidades de SGC
           EXEC SQL INCLUDE SGCBFDBC END-EXEC.
           EXEC SQL INCLUDE SGCBFREC END-EXEC.
      * Entidades de DEU
           EXEC SQL INCLUDE DEUBFCRI END-EXEC.
           EXEC SQL INCLUDE DEUBFFIA END-EXEC.
*% END
*% IF PGM_BSH
       COPY GARBFGDG.
*% ELSE
*% IF PGM_DB2
           EXEC SQL INCLUDE GARBFGDG END-EXEC.
*% ELSE
       COPY GARBFGDG.
*% END
*% END
       COPY SGCBGCLI.
       COPY TABBFOFI.
       COPY TABBBOFI.
       COPY TABBFUSR.
       COPY TABBBUSR.
       COPY GNSBFRCE.
       COPY GNSBVCOD.
       COPY GNSBVTAB.
       COPY GNSBGCPT.
       COPY GNSBGSTR.
      
       OBT-DAT-TS SECTION.
       INI-OBT-DAT-TS.
      *INI-CAF.
      *     MOVE SCR-OTRN TO CLN-TERM-A.
      *     EXEC CICS HANDLE CONDITION QIDERR(CON-OBT-DAT-TS)
      *                               ITEMERR(CON-OBT-DAT-TS)
      *     END-EXEC.
      *     EXEC CICS DELETEQ TS QUEUE(CLN-NAME-QUE-A)
      *     END-EXEC.
      * CON-OBT-DAT-TS.
      *FIN-CAF.      
           MOVE CLN-SI-IMP TO CLN-IMP.
      *INI-CAF.
      *     PERFORM CLR-VEC-TS VARYING CLN-I FROM 1 BY 1 UNTIL
      *             CLN-I > WSS-IMAX.
      *FIN-CAF.
           MOVE                   1 TO CLN-I IN CLN-VARI.
           MOVE CLF-CIC-ICLF IN CLF TO LDC-CIC-ICLF IN LDC.
           MOVE ZEROES              TO LDC-NUM-ILDC IN LDC.
           MOVE FIO-GET-NLS TO FIO-CMND.

       LUP-LEE-LDC.
           PERFORM LDC-FIO-LDC.
           IF NOT FIO-STAT-OKS
              GO TO FIN-OBT-DAT-TS.
           IF CLF-CIC-ICLF IN CLF = LDC-CIC-ICLF IN LDC
              IF CLN-IMP = CLN-SI-IMP
                 PERFORM WRT-TS-LDC
                 MOVE LDC-KEY-ILDC IN LDC TO ARC-KEY-ILDC IN ARC
                 MOVE ZEROES              TO ARC-NUM-IARC IN ARC
                 MOVE LDC-KEY-ILDC IN LDC TO ARG-KEY-ILDC IN ARG
                 MOVE ZEROES              TO ARG-NUM-IARG IN ARG
       LUP-LEE-ARC.
                 MOVE FIO-GET-NLS TO FIO-CMND.
                 PERFORM LDC-FIO-ARC.
                 IF FIO-STAT-OKS
                    IF LDC-KEY-ILDC IN LDC = ARC-KEY-ILDC IN ARC
                       PERFORM WRT-TS-LDC
                       PERFORM WRT-TS-ARC
                       MOVE FIO-GET-NXT TO FIO-CMND
                       GO TO LUP-LEE-ARC
                    ELSE
                       MOVE FIO-GET-NXT TO FIO-CMND
                       GO TO LUP-LEE-ARC
                 ELSE
                    MOVE SPACES TO WSS-GLS-TIPO
                    MOVE SPACES TO WSS-CLC-DCOR IN WSS-VARI
       LUP-LEE-ARG.
                 MOVE FIO-GET-NLS TO FIO-CMND.
                 PERFORM LDC-FIO-ARG.
                 IF FIO-STAT-OKS
                    IF LDC-KEY-ILDC IN LDC = ARG-KEY-ILDC IN ARG
                       PERFORM WRT-TS-LDC
                       PERFORM WRT-TS-ARG
                       MOVE FIO-GET-NXT TO FIO-CMND
                       GO TO LUP-LEE-ARG
                    ELSE
                       MOVE FIO-GET-NXT TO FIO-CMND
                       GO TO LUP-LEE-ARG
                 ELSE
                    MOVE SPACES TO WSS-GLS-TIPO
                    MOVE SPACES TO WSS-CLC-DCOR IN WSS-VARI
              MOVE FIO-GET-NXT TO FIO-CMND
              GO TO LUP-LEE-LDC.
       FIN-OBT-DAT-TS.
           EXIT.

       LEE-DAT-ARG SECTION.
       INI-LEE-DAT-ARG.
              LUP-ARC-ARG.
                  IF CLN-EXI-ARC = 'N'
                      GO TO CHK-EXI-ARG.
                  IF CLF-VEZ-ARC = CLF-PRM-VEZ-ARC
                      MOVE FIO-GET-NLS TO FIO-CMND
                      MOVE CLF-OTR-VEZ-ARC TO CLF-VEZ-ARC
                  ELSE
                      MOVE FIO-GET-NXT TO FIO-CMND.
                  MOVE 'S' TO CLN-EXI-ARC IN CLN-VARI.
                  PERFORM LDC-FIO-ARC.
                  IF NOT (FIO-STAT-OKS AND
                     LDC-KEY-ILDC IN LDC = ARC-KEY-ILDC IN ARC )
                      MOVE 'N' TO CLN-EXI-ARC IN CLN-VARI
                      IF FIO-STAT-OKS
                          MOVE FIO-END-BRW TO FIO-CMND
                          PERFORM LDC-FIO-ARC
                      ELSE
                          NEXT SENTENCE
                  ELSE
                      MOVE 'S' TO WSS-IND-ACAG.
       
              CHK-EXI-ARG.
                  IF CLN-EXI-ARG = 'N'
                      GO TO CHK-EXI-ARC-ARG.
                  IF CLF-VEZ-ARG = CLF-PRM-VEZ-ARG
                      MOVE FIO-GET-NLS TO FIO-CMND
                      MOVE CLF-OTR-VEZ-ARG TO CLF-VEZ-ARG
                  ELSE
                      MOVE FIO-GET-NXT TO FIO-CMND.
                  MOVE 'S' TO CLN-EXI-ARG IN CLN-VARI.
                  PERFORM LDC-FIO-ARG.
                  IF NOT (FIO-STAT-OKS AND
                     LDC-KEY-ILDC IN LDC = ARG-KEY-ILDC IN ARG )
                      MOVE 'N' TO CLN-EXI-ARG IN CLN-VARI
                      IF FIO-STAT-OKS
                          MOVE FIO-END-BRW TO FIO-CMND
                          PERFORM LDC-FIO-ARG
                      ELSE
                          NEXT SENTENCE
                  ELSE
                      MOVE 'S' TO WSS-IND-ACAG.
       
              CHK-EXI-ARC-ARG.
                  IF CLN-EXI-ARG = 'N' AND
                     CLN-EXI-ARC = 'N'
                      IF WSS-IND-ACAG = 'N'
                          ADD 1 TO CLN-I
                          IF CLN-I > WSS-IMAX
                              PERFORM WRT-TS
                              PERFORM CLR-VEC-TS VARYING CLN-I FROM 1 BY 1
                                                 UNTIL CLN-I > WSS-IMAX
                              MOVE 1 TO CLN-I
                              MOVE CLN-NO-IMP TO CLN-IMP
                              MOVE FIO-GET-NXT TO FIO-CMND
                              GO TO LUP-LEE-LDC
                          ELSE
                              MOVE FIO-GET-NXT TO FIO-CMND
                              GO TO LUP-LEE-LDC
                      ELSE
                          MOVE FIO-GET-NXT TO FIO-CMND
                          GO TO LUP-LEE-LDC.
                  PERFORM MOV-ARC-ARG.
                  GO TO LUP-ARC-ARG.
       FIN-LEE-DAT-ARG.
           EXIT.

       MOV-DAT-LDC SECTION.
       INI-MOV-DAT-LDC.
           MOVE CLN-I TO CLN-ITEM-TLDC.
           MOVE LDC-NUM-ILDC IN LDC TO CLN-NUM-ILDC(CLN-I).
           MOVE LDC-IND-VIGE IN LDC TO CLN-IND-VIGE(CLN-I).
           MOVE SPACES              TO CLN-COD-TOOP(CLN-I).
           MOVE SPACES              TO CLN-COD-AOOP(CLN-I).
           MOVE ZEROES              TO CLN-NUM-PORG(CLN-I).
           MOVE LDC-IND-MGAR IN LDC TO CLN-IND-MGAR(CLN-I).
           MOVE SPACES              TO CLN-COD-SGAR(CLN-I).
           IF LDC-FEC-FVEN IN LDC NOT > ZEROES
              MOVE CLF-NUM-DVEN IN CLF TO CLN-NUM-DVEN(CLN-I)
              MOVE CLF-NUM-MVEN IN CLF TO CLN-NUM-MVEN(CLN-I)
              MOVE CLF-NUM-SVEN IN CLF TO CLN-NUM-SVEN(CLN-I)
              MOVE CLF-NUM-AVEN IN CLF TO CLN-NUM-AVEN(CLN-I)
           ELSE
              MOVE LDC-NUM-DVEN IN LDC TO CLN-NUM-DVEN(CLN-I)
              MOVE LDC-NUM-MVEN IN LDC TO CLN-NUM-MVEN(CLN-I)
              MOVE LDC-NUM-SVEN IN LDC TO CLN-NUM-SVEN(CLN-I)
              MOVE LDC-NUM-AVEN IN LDC TO CLN-NUM-AVEN(CLN-I).
              
           MULTIPLY CTOT-LCR IN CCU-VARI(LDC-NUM-ILDC) BY 1 GIVING
                    CLN-VAL-CMLC(CLN-I) ROUNDED.
           MULTIPLY CDIS-LCR IN CCU-VARI(LDC-NUM-ILDC) BY 1 GIVING
                    CLN-VAL-CDLC(CLN-I) ROUNDED.

      *INI-CAF              
      *     MOVE 'TAB' TO TAB-COD-SIST.
      *     MOVE 'VLR' TO TAB-COD-TTAB.
      *     MOVE LDC-COD-VCLC IN LDC TO TAB-COD-CTAB IN TAB.
      *     PERFORM BUS-TAB.
      *     MOVE LDC-COD-VCLC IN LDC TO CLN-COD-VCLC(CLN-I).
      *     MOVE TAB-GLS-ABRV IN TAB TO CLN-GLS-VCLC(CLN-I).
      *FIN-CAF

           MOVE LDC-VAL-CMAX IN LDC TO CLN-VAL-CACT(CLN-I).     
           IF CLF-COD-VCCF IN CLF = LDC-COD-VCLC IN LDC
               GO TO CIC-PRO-CMAX.      
           MOVE LDC-VAL-CMAX IN LDC TO TVC-VALO.      
           MOVE LDC-COD-VCLC IN LDC TO TVC-MON1 IN TVC-VARI.
           MOVE CLF-COD-VCCF IN CLF TO TVC-MON2 IN TVC-VARI.      
           MOVE HOY-FHOY(1:4)     TO TVC-FCAM(5:4).
           MOVE HOY-FHOY(5:2)     TO TVC-FCAM(3:2).
           MOVE HOY-FHOY(7:2)     TO TVC-FCAM(1:2).
           PERFORM TAB-PRO-TVC.
           IF TVC-CMSG NOT > SPACES
               MOVE TVC-VALO          TO CLN-VAL-CACT(CLN-I).      

       CIC-PRO-CMAX.
           MOVE LDC-COD-TIPO IN LDC TO CLN-COD-TIPO(CLN-I).
           MOVE 'L'                 TO CLN-COD-TINF(CLN-I).
           MOVE 'LDC'               TO FIO-SIST
           MOVE 'TLC'               TO TAB-COD-TTAB IN TAB
           MOVE LDC-COD-TIPO IN LDC TO TAB-COD-CTAB IN TAB
           MOVE FIO-GET-KEY TO FIO-CMND
           PERFORM GNS-FIO-TAB
           IF FIO-STAT-OKS
                 MOVE TAB-GLS-DCOR IN TAB TO CLN-GLS-TIPO(CLN-I).

      *     MOVE LDC-COD-VCLC IN LDC TO CLN-COD-VCLC(CLN-I).
           MOVE LDC-KEY-ILDC IN LDC TO ARC-KEY-ILDC IN ARC.
           MOVE ZEROES              TO ARC-NUM-IARC IN ARC.
           MOVE FIO-GET-NLS TO FIO-CMND.
           PERFORM LDC-FIO-ARC.
           IF ( FIO-STAT-OKS AND
                LDC-KEY-ILDC IN LDC = ARC-KEY-ILDC IN ARC )
                   MOVE 'C'                 TO CLN-COD-TINF(CLN-I)
                   MOVE ARC-NUM-IARC IN ARC TO CLN-NUM-CORR(CLN-I)
                   MOVE ARC-COD-TOOC IN ARC TO CLN-COD-TOOP(CLN-I)
                   MOVE ARC-COD-AOOC IN ARC TO CLN-COD-AOOP(CLN-I)
                   IF LDC-VAL-CACT IN LDC = ZEROES
                       MOVE CLN-GLS-TIPO(CLN-I) TO WSS-GLS-TIPO-1
                       MOVE '(DES)' TO             WSS-GLS-TIPO-3
                       MOVE WSS-GLS-TIPO         TO CLN-GLS-TIPO(CLN-I)
                   ELSE
                   NEXT SENTENCE
               ELSE
                   MOVE SPACES TO WSS-GLS-TIPO
                   MOVE SPACES TO WSS-CLC-DCOR IN WSS-VARI.
       FIN-MOV-DAT-LDC.
           EXIT.
      
      *<<<CAF--------------
      * MOV-ARC-ARG SECTION.
      * INI-MOV-ARC-ARG.
      *     IF CLN-EXI-ARC = 'N'
      *         IF WSS-CLC-DCOR IN WSS-VARI NOT > SPACES
      *             MOVE SPACES              TO CLN-COD-TOOP(CLN-I)
      *             MOVE SPACES              TO CLN-COD-AOOP(CLN-I)
      *             MOVE SPACES              TO CLN-COD-VCLC(CLN-I)
      *         ELSE
      *             NEXT SENTENCE
      *     ELSE
      *         PERFORM PUT-TAB-ARC.
      *     IF CLN-EXI-ARG = 'N'
      *         MOVE ZEROES              TO CLN-NUM-PORG(CLN-I)
      *         MOVE SPACES              TO CLN-COD-SGAR(CLN-I)
      *     ELSE
      *         PERFORM PUT-TAB-ARG.
      *     MOVE CLN-SI-IMP TO CLN-IMP.
      *     ADD 1 TO CLN-I.
      *     IF CLN-I > WSS-IMAX
      *         PERFORM WRT-TS
      *         PERFORM CLR-VEC-TS VARYING CLN-I FROM 1 BY 1 UNTIL
      *                            CLN-I > WSS-IMAX
      *         MOVE 1 TO CLN-I
      *         MOVE CLN-NO-IMP TO CLN-IMP.
      * FIN-MOV-ARC-ARG.
      *     EXIT.
      *--------------CAF>>>
           
      *<<<CAF**************
      * PUT-TAB-ARC SECTION.
      * INI-PUT-TAB-ARC.
      *          MOVE ARC-CAI-IOPC IN ARC TO CLN-CAI-IOPR(CLN-I)
      *          MOVE ARC-IIC-IOPC IN ARC TO CLN-IIC-IOPR(CLN-I)
      *          GO TO FIN-PUT-TAB-ARC.
      *
      **BUS-TAB Busca Glosa Moneda de Tabla
      *     IF ARC-COD-VCOC IN ARC > SPACES
      *        MOVE 'TAB' TO TAB-COD-SIST
      *        MOVE 'VLR' TO TAB-COD-TTAB IN TAB
      *        MOVE ARC-COD-VCOC IN ARC TO TAB-COD-CTAB IN TAB
      *        PERFORM BUS-TAB
      *        MOVE ARC-COD-VCOC IN ARC TO CLN-COD-VARC(CLN-I).
      *        MOVE TAB-GLS-ABRV IN TAB TO CLN-GLS-VARC(CLN-I).
      *
      **BUS-TAB Busca Glosa Tipo Operacion de Tabla
      *     IF ARC-COD-TOOC IN ARC > SPACES
      *        MOVE 'TAB'               TO TAB-COD-SIST
      *        MOVE 'TIO'               TO TAB-COD-TTAB IN TAB
      *        MOVE ARC-COD-TOOC IN ARC TO TAB-COD-CTAB IN TAB
      *        PERFORM BUS-TAB
      *        MOVE ARC-COD-TOOC IN ARC TO CLN-COD-TOOP(CLN-I)
      *        MOVE TAB-GLS-ABRV IN TAB TO CLN-GLS-TOOP(CLN-I).
      *
      **BUS-TAB Busca Glosa Cod. Auxiliar de Tabla
      *     IF ARC-COD-AOOC IN ARC > SPACES
      *        MOVE 'TAB'               TO TAB-COD-SIST
      *        MOVE 'AUX'               TO TAB-COD-TTAB IN TAB
      *        MOVE ARC-COD-COOC IN ARC TO TAB-COD-CTAB IN TAB
      *        PERFORM BUS-TAB
      *        MOVE TAB-GLS-ABRV IN TAB TO CLN-GLS-AOOP(CLN-I).
      * FIN-PUT-TAB-ARC.
      *     EXIT.
      **************CAF>>>

      *<<<CAF**************
      * PUT-TAB-ARG SECTION.
      * INI-PUT-TAB-ARG.
      *     MOVE 'G'                 TO CLN-COD-TINF(CLN-I).
      *     MOVE ARG-NUM-IARG IN ARG TO CLN-NUM-CORR(CLN-I).
      *     IF ARG-IIC-IGAR IN ARG > ZEROES
      *         MOVE ARG-CAI-IGAR IN ARG TO CLN-CAI-IOPR(CLN-I)
      *         MOVE ARG-IIC-IGAR IN ARG TO CLN-IIC-IOPR(CLN-I)
      *         MOVE ARG-NUM-PORG IN ARG TO CLN-NUM-PORG(CLN-I)
      *         MOVE 'TAB' TO FIO-SIST
      *         MOVE 'TIO ' TO TAB-COD-TTAB IN TAB
      *         MOVE ARG-COD-TOGA IN ARG TO TAB-COD-CTAB IN TAB
      *         MOVE FIO-GET-KEY TO FIO-CMND
      *         PERFORM GNS-FIO-TAB
      *
      ** Esta en sistema GAR
      *         IF NOT ( TAB-CIC-CTAB IN TAB = 'AVL' OR 'FIA' )
      ** INI =======================================================
      *            MOVE ARG-CIC-IGAR IN ARG TO GAR-CLV-GDG-1 IN GDG
      **             MOVE ARG-CIC-IGAR IN ARG TO GDG-KEY-IGDG  IN GDG
      ** FIN =======================================================
      *             MOVE FIO-GET-KEY TO FIO-CMND
      *             PERFORM GAR-FIO-GDG
      *             IF NOT FIO-STAT-OKS OR
      ** INI =======================================================
      *                GAR-IND-CPL  IN GDG NOT = 'S'
      **                GDG-IND-GTAC IN GDG NOT = 'S'
      *                 MOVE 'P' TO CLN-COD-SGAR(CLN-I)
      ** FIN =======================================================
      *             ELSE
      ** INI =======================================================
      *             IF GAR-FEC-ALZ  IN GDG > ZEROES
      **             IF GDG-FEC-FALZ IN GDG > ZEROES
      ** FIN =======================================================
      *                 MOVE 'L' TO CLN-COD-SGAR(CLN-I)
      *             ELSE
      *                 MOVE 'C' TO CLN-COD-SGAR(CLN-I)
      *         ELSE
      ** Esta en sistema DEU
      *             PERFORM BUS-EST-FIA.
      *     IF ARG-IIC-IGAR IN ARG > ZEROES
      *         IF CLN-IND-MGAR(CLN-I) = 'U'
      *            MOVE 'E'   TO CLN-IND-MGAR(CLN-I)
      *            GO TO FIN-PUT-TAB-ARG
      *         ELSE
      *            GO TO FIN-PUT-TAB-ARG.
      *
      **BUS-TAB Busca Glosa Moneda de Tabla
      *     IF ARG-COD-TOGA IN ARG > SPACES
      *        MOVE 'TAB'               TO TAB-COD-SIST
      *        MOVE 'TIO'               TO TAB-COD-TTAB IN TAB
      *        MOVE ARG-COD-TOGA IN ARG TO TAB-COD-CTAB IN TAB
      *        PERFORM BUS-TAB
      *        MOVE ARG-COD-TOGA IN ARG TO CLN-COD-TOOP(CLN-I)
      *        MOVE TAB-GLS-ABRV IN TAB TO CLN-GLS-TOOP(CLN-I).
      *
      **BUS-TAB Busca Glosa Cod. Auxiliar de Tabla
      *     IF ARG-COD-AOGA IN ARG > SPACES
      *        MOVE 'TAB'               TO TAB-COD-SIST
      *        MOVE 'AUX'               TO TAB-COD-TTAB IN TAB
      *        MOVE ARG-COD-COGA IN ARG TO TAB-COD-CTAB IN TAB
      *        PERFORM BUS-TAB
      *        MOVE TAB-GLS-ABRV IN TAB TO CLN-GLS-AOOP(CLN-I).
      *     MOVE ARG-NUM-PORG IN ARG TO CLN-NUM-PORG(CLN-I).
      *     MOVE SPACES TO CLN-COD-SGAR(CLN-I).
      * FIN-PUT-TAB-ARG.
      *     EXIT.
      ***************CAF>>>
      
      *<<<CAF***************      
      * WRT-TS SECTION.
      * INI-WRT-TS.
      *     ADD 1 TO SCR-IMAX.
      *     EXEC CICS WRITEQ TS QUEUE(CLN-NAME-QUE-A)
      *                         FROM(CLN-TS)
      *                         LENGTH(CLN-LONG-TS-A)
      *     END-EXEC.
      * FIN-WRT-TS.
      *     EXIT.
      
      * RED-TS SECTION.
      * INI-RED-TS.
      *     MOVE SCR-OTRN TO CLN-TERM-A.
      *     MOVE CLN-I TO SCR-I.
      *     EXEC CICS HANDLE CONDITION QIDERR(FIN-RED-TS)
      *                               ITEMERR(FIN-RED-TS)
      *     END-EXEC.
      *     EXEC CICS READQ TS QUEUE(CLN-NAME-QUE-A)
      *                         INTO(CLN-TS)
      *                         LENGTH(CLN-LONG-TS-A)
      *                         ITEM(CLN-I)
      *     END-EXEC.
      * FIN-RED-TS.
      *     EXIT.
      ****************CAF>>>

       GET-CUR-RDC SECTION.
       INI-GET-CUR-RDC.
           MOVE CLF-CIC-ICLF IN CLF TO RDC-CIC-ICLF IN RDC.
           MOVE 'RDC-KEY-ICLF' TO FIO-AKEY.
           MOVE FIO-GET-NLS    TO FIO-CMND.
           PERFORM LDC-FIO-RDC.
           IF FIO-STAT-CDK
               MOVE '00' TO FIO-STAT.
           IF FIO-STAT-OKS AND
              CLF-CIC-ICLF IN CLF NOT = RDC-CIC-ICLF IN RDC
               MOVE 'RDC-KEY-ICLF' TO FIO-AKEY
               MOVE FIO-END-BRW TO FIO-CMND
               PERFORM LDC-FIO-RDC
               MOVE '23' TO FIO-STAT.
           MOVE FIO-STAT TO PGM-STAT-RDC.
       FIN-GET-CUR-RDC.
           EXIT.
      
       GET-NXT-RDC SECTION.
       INI-GET-NXT-RDC.
           MOVE SPACES TO MSG-COD-SIST.
           MOVE SPACES TO MSG-COD-MENS.
           MOVE 'RDC-KEY-ICLF' TO FIO-AKEY.
           MOVE FIO-GET-NXT TO FIO-CMND.
           PERFORM LDC-FIO-RDC.
           IF FIO-STAT-OKS AND
              CLF-CIC-ICLF IN CLF = RDC-CIC-ICLF IN RDC
                MOVE 'M' TO SCR-IND-MCLI
           ELSE
                MOVE SPACES TO SCR-IND-MCLI
                IF FIO-STAT-OKS
                    MOVE FIO-END-BRW TO FIO-CMND
                    MOVE 'RDC-KEY-ICLF' TO FIO-AKEY
                    PERFORM LDC-FIO-RDC.
       FIN-GET-NXT-RDC.
           EXIT.
      
       COPY LDCBGCCU.
       COPY LDCBGCEG.
       COPY LDCBKCCU.
       COPY LDCBKCEG.
      
       BUS-EST-FIA SECTION.
       INI-BUS-EST-FIA.
           MOVE ARG-CIC-IGAR IN ARG TO FIA-CIC-IESC IN FIA.
           MOVE ZEROES              TO FIA-NUM-IFIA IN FIA.
           MOVE FIO-GET-NLS TO FIO-CMND.
           PERFORM DEU-FIO-FIA.
           IF NOT FIO-STAT-OKS OR
              FIA-CIC-IESC IN FIA NOT = ARG-CIC-IGAR IN ARG
               MOVE 'P' TO CLN-COD-SGAR(CLN-I)
               GO TO BRW-BUS-EST-FIA.
           MOVE 'L' TO CLN-COD-SGAR(CLN-I).
       
       LUP-BUS-EST-FIA.
           IF FIA-MSC-STAT IN FIA NOT = 'S'
               MOVE 'P' TO CLN-COD-SGAR(CLN-I)
               GO TO BRW-BUS-EST-FIA.
      
           IF FIA-FEC-FVEN IN FIA < HOY-FHOY AND
              FIA-FEC-FVEN IN FIA > ZEROES AND
              FIA-FEC-FALZ IN FIA NOT > ZEROES AND
              FIA-MSC-STAT IN FIA NOT = 'M' AND
              CLN-COD-SGAR(CLN-I) = 'L'
               MOVE 'V' TO CLN-COD-SGAR(CLN-I)
           ELSE
           IF FIA-FEC-FALZ IN FIA NOT > ZEROES AND
              FIA-MSC-STAT IN FIA NOT = 'M'
               MOVE 'C' TO CLN-COD-SGAR(CLN-I).
      
           MOVE FIO-GET-NXT TO FIO-CMND.
           PERFORM DEU-FIO-FIA.
           IF FIO-STAT-OKS AND
              FIA-CIC-IESC IN FIA = ARG-CIC-IGAR IN ARG
               GO TO LUP-BUS-EST-FIA.
       BRW-BUS-EST-FIA.
           IF FIO-STAT-OKS
               MOVE FIO-END-BRW TO FIO-CMND
               PERFORM DEU-FIO-FIA.
       FIN-BUS-EST-FIA.
           EXIT.

      *Transforma valor de una moneda a otra
      *INPUT  : TVC-VALO, TVC-MON1, TVC-MON2, TVC-FCAM
      *OUTPUT : TVC-VALO, TVC-CMSG
       TAB-PRO-TVC SECTION.
       INI-TAB-PRO-TVC.
           MOVE SPACES TO TVC-CMSG.
           IF TVC-MON2 = TVC-MON1
               GO TO FIN-TAB-PRO-TVC.
           IF TVC-MNAC NOT > SPACES
               MOVE 'TAB'  TO FIO-SIST
               MOVE 'VLR'  TO TAB-CIC-TTAB IN TAB
               MOVE '0999' TO TAB-CIC-CTAB IN TAB
               MOVE 'TAB-CIC-TABL' TO FIO-AKEY
               MOVE FIO-GET-KEY    TO FIO-CMND
               PERFORM GNS-FIO-TAB
               IF NOT FIO-STAT-OKS
                   MOVE SPACES TO TVC-MNAC
               ELSE
                   MOVE TAB-COD-CTAB IN TAB TO TVC-MNAC.

      *Convertir TVC-VALO de TVC-MON1 a TVC-MON2
      *a) Convertir monto en TVC-MON1 a Moneda Nacional
           IF TVC-MON1 = TVC-MNAC
               NEXT SENTENCE
           ELSE
               MOVE TVC-DCAM IN TVC-VARI   TO CAM-NUM-DCAM IN CAM(1)
               MOVE TVC-MCAM IN TVC-VARI   TO CAM-NUM-MCAM IN CAM(1)
               MOVE TVC-SCAM IN TVC-VARI   TO CAM-NUM-SCAM IN CAM(1)
               MOVE TVC-ACAM IN TVC-VARI   TO CAM-NUM-ACAM IN CAM(1)
               MOVE CAM-FEC-FCAM IN CAM(1) TO CAM-FEC-FCAM IN CAM(2)
               MOVE TVC-MON1 IN TVC-VARI   TO CAM-COD-VCAM IN CAM(1)
               MOVE TVC-MNAC IN TVC-VARI   TO CAM-COD-VCAM IN CAM(2)
               MOVE FIO-GET-KEY TO FIO-CMND
               PERFORM TAB-FIO-CAM
               IF NOT ( FIO-STAT-OKS AND CAM-MSC-STAT IN CAM = 'S' )
                   MOVE 'TVCCAMBNXNV' TO TVC-CMSG
                   GO TO FIN-TAB-PRO-TVC
               ELSE
                   MULTIPLY CAM-SGV-VCAM IN CAM BY TVC-VALO IN TVC-VARI
                            GIVING TVC-VALO IN TVC-VARI
                   MOVE TVC-VALO IN TVC-VARI TO PES-SGV-DECI
                   MOVE TVC-MNAC IN TVC-VARI TO PES-CIC-VCAM
                   PERFORM PES-SCTV
                   MOVE PES-SGV-ENTE TO TVC-VALO IN TVC-VARI.
      *b) TVC-VALO en Moneda Nacional (TVC-MNAC) convertir a TVC-MON2
           IF TVC-MNAC = TVC-MON2
               NEXT SENTENCE
           ELSE
               MOVE TVC-DCAM IN TVC-VARI   TO CAM-NUM-DCAM IN CAM(1)
               MOVE TVC-MCAM IN TVC-VARI   TO CAM-NUM-MCAM IN CAM(1)
               MOVE TVC-SCAM IN TVC-VARI   TO CAM-NUM-SCAM IN CAM(1)
               MOVE TVC-ACAM IN TVC-VARI   TO CAM-NUM-ACAM IN CAM(1)
               MOVE CAM-FEC-FCAM IN CAM(1) TO CAM-FEC-FCAM IN CAM(2)
               MOVE TVC-MON2 IN TVC-VARI   TO CAM-COD-VCAM IN CAM(1)
               MOVE TVC-MNAC IN TVC-VARI   TO CAM-COD-VCAM IN CAM(2)
               MOVE FIO-GET-KEY TO FIO-CMND
               PERFORM TAB-FIO-CAM
               IF NOT ( FIO-STAT-OKS AND CAM-MSC-STAT IN CAM = 'S' AND
                        CAM-SGV-VCAM IN CAM > 0 )
                   MOVE 'TVCCAMBNXNV0' TO TVC-CMSG
                   GO TO FIN-TAB-PRO-TVC
               ELSE
                   DIVIDE TVC-VALO IN TVC-VARI BY CAM-SGV-VCAM IN CAM
                          GIVING TVC-VALO IN TVC-VARI ROUNDED
                   MOVE TVC-VALO IN TVC-VARI TO PES-SGV-DECI
                   MOVE TVC-MON2 IN TVC-VARI TO PES-CIC-VCAM
                   PERFORM PES-SCTV
                   MOVE PES-SGV-ENTE TO TVC-VALO IN TVC-VARI.
       FIN-TAB-PRO-TVC.
           EXIT.

       COPY TABBFCAM.
       COPY GNSBGPES.

       WRT-TS-LDC SECTION.
       INI-WRT-TS-LDC.
           ADD 1 TO SCR-TOT-OCCU.
           MOVE 'L'                TO CLN-COD-TINF.
           MOVE LDC-NUM-ILDC IN LDC TO CLN-NUM-ILDC.
           MOVE ZEROES              TO CLN-NUM-CORR.
           MOVE LDC-IND-VIGE IN LDC TO CLN-IND-VIGE.
           MOVE SPACES              TO CLN-COD-TIPO.
           MOVE SPACES                  TO CLN-GLS-TIPO.
           MOVE SPACES                  TO CLN-COD-VCLC.
           MOVE SPACES                  TO CLN-GLS-VCLC.
           IF LDC-FEC-FVEN IN LDC NOT > ZEROES
              MOVE CLF-NUM-DVEN IN CLF TO CLN-NUM-DVEN
              MOVE CLF-NUM-MVEN IN CLF TO CLN-NUM-MVEN
              MOVE CLF-NUM-SVEN IN CLF TO CLN-NUM-SVEN
              MOVE CLF-NUM-AVEN IN CLF TO CLN-NUM-AVEN
           ELSE
              MOVE LDC-NUM-DVEN IN LDC TO CLN-NUM-DVEN
              MOVE LDC-NUM-MVEN IN LDC TO CLN-NUM-MVEN
              MOVE LDC-NUM-SVEN IN LDC TO CLN-NUM-SVEN
              MOVE LDC-NUM-AVEN IN LDC TO CLN-NUM-AVEN.
           MULTIPLY CTOT-LCR IN CCU-VARI(LDC-NUM-ILDC) BY 1 GIVING
                    CLN-VAL-CMLC ROUNDED.
           MULTIPLY CDIS-LCR IN CCU-VARI(LDC-NUM-ILDC) BY 1 GIVING
                    CLN-VAL-CDLC ROUNDED.
           MOVE LDC-IND-MGAR IN LDC TO CLN-IND-MGAR.
           MOVE SPACES              TO CLN-COD-SGAR.
           MOVE SPACES              TO CLN-COD-TOOP.
           MOVE SPACES              TO CLN-COD-AOOP.
           MOVE SPACES              TO CLN-GLS-TOOP.
           MOVE SPACES              TO CLN-GLS-AOOP.
           MOVE SPACES              TO CLN-CAI-IOPR.
           MOVE SPACES              TO CLN-IIC-IOPR.
           MOVE SPACES              TO CLN-COD-VARC.
           MOVE SPACES              TO CLN-GLS-VARC.
           MOVE ZEROES              TO CLN-NUM-PORG.

           MOVE LDC-VAL-CMAX IN LDC TO CLN-VAL-CACT.
           IF CLF-COD-VCCF IN CLF = LDC-COD-VCLC IN LDC
               GO TO CIC-PRO-CMAX.      
           MOVE LDC-VAL-CMAX IN LDC TO TVC-VALO.      
           MOVE LDC-COD-VCLC IN LDC TO TVC-MON1 IN TVC-VARI.
           MOVE CLF-COD-VCCF IN CLF TO TVC-MON2 IN TVC-VARI.      
           MOVE HOY-FHOY(1:4)     TO TVC-FCAM(5:4).
           MOVE HOY-FHOY(5:2)     TO TVC-FCAM(3:2).
           MOVE HOY-FHOY(7:2)     TO TVC-FCAM(1:2).
           PERFORM TAB-PRO-TVC.
           IF TVC-CMSG NOT > SPACES
               MOVE TVC-VALO      TO CLN-VAL-CACT.

           MOVE CAV-NOM-TSCAV  TO QUE-COLA.
           MOVE CAV-LEN-TSCAV  TO QUE-LITM.
           MOVE CAV-ITEM       TO QUE-ITEM.
           MOVE QUE-PUT        TO QUE-CMND.
           PERFORM GNS-PRO-QUE.           
       FIN-WRT-TS-LDC.
           EXIT.

       WRT-TS-ARC SECTION.
       INI-WRT-TS-ARC.
           MOVE 'C'                 TO CLN-COD-TINF.
           MOVE ARC-NUM-IARC IN ARC TO CLN-NUM-CORR.
           MOVE ARC-COD-TOOC IN ARC TO CLN-COD-TOOP.
           MOVE ARC-COD-AOOC IN ARC TO CLN-COD-AOOP.
           IF LDC-VAL-CACT IN LDC = ZEROES
              MOVE CLN-GLS-TIPO TO WSS-GLS-TIPO-1
              MOVE '(DES)'      TO WSS-GLS-TIPO-3
              MOVE WSS-GLS-TIPO TO CLN-GLS-TIPO.
           MOVE ARC-CAI-IOPC IN ARC TO CLN-CAI-IOPR.
           MOVE ARC-IIC-IOPC IN ARC TO CLN-IIC-IOPR.
       
      *BUS-TAB Busca Glosa Moneda de Tabla
           IF ARC-COD-VCOC IN ARC > SPACES
              MOVE 'TAB' TO TAB-COD-SIST
              MOVE 'VLR' TO TAB-COD-TTAB IN TAB
              MOVE ARC-COD-VCOC IN ARC TO TAB-COD-CTAB IN TAB
              PERFORM BUS-TAB
              MOVE ARC-COD-VCOC IN ARC TO CLN-COD-VARC.
              MOVE TAB-GLS-ABRV IN TAB TO CLN-GLS-VARC.
       
      *BUS-TAB Busca Glosa Tipo Operacion de Tabla
           IF ARC-COD-TOOC IN ARC > SPACES
              MOVE 'TAB'               TO TAB-COD-SIST
              MOVE 'TIO'               TO TAB-COD-TTAB IN TAB
              MOVE ARC-COD-TOOC IN ARC TO TAB-COD-CTAB IN TAB
              PERFORM BUS-TAB
              MOVE ARC-COD-TOOC IN ARC TO CLN-COD-TOOP.
              MOVE TAB-GLS-ABRV IN TAB TO CLN-GLS-TOOP.
       
      *BUS-TAB Busca Glosa Cod. Auxiliar de Tabla
           IF ARC-COD-AOOC IN ARC > SPACES
              MOVE 'TAB'               TO TAB-COD-SIST
              MOVE 'AUX'               TO TAB-COD-TTAB IN TAB
              MOVE ARC-COD-COOC IN ARC TO TAB-COD-CTAB IN TAB
              PERFORM BUS-TAB
              MOVE TAB-GLS-ABRV IN TAB TO CLN-GLS-AOOP.
       FIN-WRT-TS-ARC.
       EXIT.

       WRT-TS-ARG SECTION.
       INI-WRT-TS-ARG.
           MOVE 'G'                 TO CLN-COD-TINF.
           MOVE ARG-NUM-IARG IN ARG TO CLN-NUM-CORR.
           IF ARG-IIC-IGAR IN ARG > ZEROES
               MOVE ARG-CAI-IGAR IN ARG TO CLN-CAI-IOPR
               MOVE ARG-IIC-IGAR IN ARG TO CLN-IIC-IOPR
               MOVE ARG-NUM-PORG IN ARG TO CLN-NUM-PORG
               MOVE 'TAB' TO FIO-SIST
               MOVE 'TIO ' TO TAB-COD-TTAB IN TAB
               MOVE ARG-COD-TOGA IN ARG TO TAB-COD-CTAB IN TAB
               MOVE FIO-GET-KEY TO FIO-CMND
               PERFORM GNS-FIO-TAB

      * Esta en sistema GAR
               IF NOT ( TAB-CIC-CTAB IN TAB = 'AVL' OR 'FIA' )
                  MOVE ARG-CIC-IGAR IN ARG TO GAR-CLV-GDG-1 IN GDG
                  MOVE FIO-GET-KEY TO FIO-CMND
                  PERFORM GAR-FIO-GDG
                  IF NOT FIO-STAT-OKS OR GAR-IND-CPL IN GDG NOT = 'S'
                     MOVE 'P' TO CLN-COD-SGAR
                  ELSE
                  IF GAR-FEC-ALZ  IN GDG > ZEROES
                     MOVE 'L' TO CLN-COD-SGAR
                  ELSE
                     MOVE 'C' TO CLN-COD-SGAR
               ELSE

      * Esta en sistema DEU
                  PERFORM BUS-EST-FIA.
           IF ARG-IIC-IGAR IN ARG > ZEROES
               IF CLN-IND-MGAR(CLN-I) = 'U'
                  MOVE 'E'   TO CLN-IND-MGAR
                  GO TO FIN-WRT-TS-ARG
               ELSE
                  GO TO FIN-WRT-TS-ARG.
      
      *BUS-TAB Busca Glosa Moneda de Tabla
           IF ARG-COD-TOGA IN ARG > SPACES
              MOVE 'TAB'               TO TAB-COD-SIST
              MOVE 'TIO'               TO TAB-COD-TTAB IN TAB
              MOVE ARG-COD-TOGA IN ARG TO TAB-COD-CTAB IN TAB
              PERFORM BUS-TAB
              MOVE ARG-COD-TOGA IN ARG TO CLN-COD-TOOP
              MOVE TAB-GLS-ABRV IN TAB TO CLN-GLS-TOOP.
      
      *BUS-TAB Busca Glosa Cod. Auxiliar de Tabla
           IF ARG-COD-AOGA IN ARG > SPACES
              MOVE 'TAB'               TO TAB-COD-SIST
              MOVE 'AUX'               TO TAB-COD-TTAB IN TAB
              MOVE ARG-COD-COGA IN ARG TO TAB-COD-CTAB IN TAB
              PERFORM BUS-TAB
              MOVE TAB-GLS-ABRV IN TAB TO CLN-GLS-AOOP.
           MOVE ARG-NUM-PORG IN ARG TO CLN-NUM-PORG.
           MOVE SPACES TO CLN-COD-SGAR.
       FIN-WRT-TS-ARG.
     EXIT.

       MOV-TS-FRM SECTION.
       INI-MOV-TS-FRM.
           IF SCR-OFRM-SRV
               GO TO FIN-MOV-TS-FRM
           ELSE
               IF CLN-I > WSS-MAX-PANT
                   GO TO FIN-MOV-TS-FRM.
           MOVE CLN-COD-TINF TO FRM-COD-TINF IN CLN-FLD(CLN-I).   
           MOVE CLN-NUM-ILDC TO FRM-NUM-ILDC IN CLN-FLD(CLN-I).
           MOVE CLN-NUM-CORR TO FRM-NUM-CORR IN CLN-FLD(CLN-I).           
           MOVE CLN-IND-VIGE TO FRM-IND-VIGE IN CLN-FLD(CLN-I).
           MOVE CLN-COD-TIPO TO FRM-COD-TIPO IN CLN-FLD(CLN-I).
           MOVE CLN-GLS-TIPO TO FRM-GLS-TIPO IN CLN-FLD(CLN-I).
           MOVE CLN-COD-VCLC TO FRM-COD-MLDC IN CLN-FLD(CLN-I).
           MOVE CLN-GLS-VCLC TO FRM-GLS-MLDC IN CLN-FLD(CLN-I).
           MOVE CLN-FEC-FVEN TO FRM-FEC-FVEN IN CLN-FLD(CLN-I).
           MOVE CLN-VAL-CMLC TO FRM-VAL-CMLC IN CLN-FLD(CLN-I).
           MOVE CLN-VAL-CDLC TO FRM-VAL-CDLC IN CLN-FLD(CLN-I).
           MOVE CLN-IND-MGAR TO FRM-IND-MGAR IN CLN-FLD(CLN-I).
           MOVE CLN-COD-SGAR TO FRM-COD-SGAR IN CLN-FLD(CLN-I).
           MOVE CLN-COD-TOOP TO FRM-COD-TOOP IN CLN-FLD(CLN-I).
           MOVE CLN-COD-AOOP TO FRM-COD-AOOP IN CLN-FLD(CLN-I).
      *INI-CAF
           MOVE CLN-GLS-TOOP TO FRM-GLS-TOOP IN CLN-FLD(CLN-I).
           MOVE CLN-GLS-AOOP TO FRM-GLS-AOOP IN CLN-FLD(CLN-I).
      *FIN-CAF
           MOVE CLN-CAI-IOPR TO FRM-CAI-IOPR IN CLN-FLD(CLN-I).
           MOVE CLN-IIC-IOPR TO FRM-IIC-IOPR IN CLN-FLD(CLN-I).
           MOVE CLN-COD-VARC TO FRM-COD-VARC IN CLN-FLD(CLN-I).
           MOVE CLN-GLS-VARC TO FRM-GLS-VARC IN CLN-FLD(CLN-I).
           MOVE CLN-NUM-PORG TO FRM-NUM-PORG IN CLN-FLD(CLN-I).
           MOVE CLN-VAL-CACT TO FRM-VAL-CACT IN CLN-FLD(CLN-I).
           ADD 1 TO CLN-I.
       FIN-MOV-TS-FRM.
           EXIT.
      *>>>>
*% END
*% IF INI_SCR_COM AND NOT PGM_PTC
      *<<<< INI_SCR_COM AND NOT PGM_PTC
      *INI-CAF.
      *     MOVE SCR-OTRN        TO CLN-TERM-H.
      *     MOVE CLN-NAME-QUE-H  TO QUE-COLA.
      *     MOVE QUE-DEL         TO QUE-CMND.
      *     PERFORM GNS-PRO-QUE.
      *     MOVE SCR-OTRN        TO CLN-TERM-A.
      *     MOVE CLN-NAME-QUE-A  TO QUE-COLA.
      *     MOVE QUE-DEL         TO QUE-CMND.
      *     PERFORM GNS-PRO-QUE.
      *FIN-CAF.
      *>>>>
*% END
*% IF INI_FIO AND NOT PGM_PTC
       PERFORM GNS-ERR-QUE.
*% END
