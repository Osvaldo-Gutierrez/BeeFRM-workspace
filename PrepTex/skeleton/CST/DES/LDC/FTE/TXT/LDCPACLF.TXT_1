*%! Codigo adicional para archivo LDCPACLF
*% INCLUDE 'LDCSRCPAI:FNCSIS.SRC'
*% LARGO_MI_COMMAREA = 200
*% IF PGM_DTC
*% INCLUDE 'GNSSRC:MANEJO_VSI.SRC'
*% END
*% REG = 'CLF'
*% IF PGM_BMS AND FIN_SCR_VARI
      *<<<< PGM_BMS AND FIN_SCR_VARI
      * ISP: VARIABLES EN CMMA, COMUNES PARA ENGANCHE PROGRAMAS CLF-LDC
       COPY LDCWGENG.
           03 SCR-IND-MCLI  VALUE SPACES          PIC X(01).
           03 SCR-IND-OCIC  VALUE SPACES          PIC X(01).
      *FLB CST  9-JAN-1995 debia ser X(62)
      *    03 SCR-CLF-DISP  VALUE SPACES          PIC X(58).
           03 SCR-COD-STAT  VALUE SPACES          PIC X(01).

*% IF PGM_ARG
      *<<<< PGM_ARG
           03 SCR-CLF-DIS1          VALUE SPACES  PIC X(32).
      *>>>>
*% ELSE
      *<<<< NOT PGM_ARG
           03 SCR-CLF-DIS1          VALUE SPACES  PIC X(30).
      *>>>>
*% END
           03 SCR-VAL-CMAX  COMP-3  VALUE ZEROES  PIC 9(11).
*% IF PGM_ARG
      *<<<< PGM_ARG
           03 SCR-CLF-DISP  VALUE SPACES          PIC X(18).
      *>>>>
*% ELSE
      *<<<< NOT PGM_ARG
           03 SCR-CLF-DISP  VALUE SPACES          PIC X(20).
      *>>>>
*% END
      *>>>>
*% END
*% IF WSS
      *<<<< WSS
      * Modulo variables de trabajo para ENGANCHE
       COPY LDCWGPMP.
      * Modulo variables de trabajo para LDCPSVCL
       COPY LDCWGVCL.
      * Modulo variables de trabajo para LDCPSMCA
       COPY LDCWGMCA.

       01  PGM-VAR-ADIC.
           03 PGM-STAT-ADIC.
              05 PGM-STAT-LDC        VALUE '23'   PIC X(02).
                 88 PGM-STAT-LDC-OKS VALUE '00'.
                 88 PGM-STAT-LDC-NUL VALUE '  '.
              05 PGM-STAT-ARC        VALUE '23'   PIC X(02).
                 88 PGM-STAT-ARC-OKS VALUE '00'.
                 88 PGM-STAT-ARC-NUL VALUE '  '.
              05 PGM-STAT-ARG        VALUE '23'   PIC X(02).
                 88 PGM-STAT-ARG-OKS VALUE '00'.
                 88 PGM-STAT-ARG-NUL VALUE '  '.
              05 PGM-STAT-RDC        VALUE '23'   PIC X(02).
                 88 PGM-STAT-RDC-OKS VALUE '00'.
                 88 PGM-STAT-RDC-NUL VALUE '  '.

       01  WSS-VARI.
*% IF PGM_PU
      *<<<< PGM_PU
      *LTM-INI 30-04-1994
           03 WSS-TRMO         VALUE 0            PIC 9(03).
      *LTM-FIN 30-04-1994
      *SMC-INI 26-10-1993
           03 WSS-VSN-VCTG                        PIC X(01).
               88  USA-CTG     VALUE 'N'.
      *SMC-FIN 26-10-1993
      *>>>>
*% END
           03 WSS-FEC-FCIE     VALUE 0            PIC 9(08).
           03 WSS-CIC-ICLF                        PIC X(12).
           03 WSS-CLA-OPE.
               05 WSS-TIP-OPE                     PIC X(03).
               05 WSS-STP-OPE                     PIC X(03).
           03 WSS-IND-PER                         PIC X(01).
           03 WSS-NUM-PER                         PIC 9(03).
           03 WSS-NDIA                            PIC 9(05).
           03 WSS-TOT-CLI      VALUE ZEROES       PIC 9(02).
           03 WSS-TOT-ARC                         PIC 9(02).
           03 WSS-TOT-ARG                         PIC 9(02).
           03 WSS-CPT-NOMB VALUE SPACES.
              05  WSS-CPT-DESC                    PIC X(27).
              05  WSS-CPT-CAI                     PIC X(04).
              05  WSS-CPT-IIC                     PIC X(08).
           03  WSS-CPT-NOMB-R  REDEFINES  WSS-CPT-NOMB PIC X(39).
      * COMPONE MENSAJE DE ACUERDO A :
      *    ENTIDA A PROCESAR                 ( CLF )
      *    COMANDO QUE SE PROCESA            ( ING O MOD )
      *    ESTADO DESPUES DE APLICAR COMANDO ( I O V )
      *    ASIGNACION O NO DE CIC            ( S O N )
      *    DEBEN EXISTIR LAS COMBINACIONES DE MENSAJES RESPECTIVAS
           03  WSS-MSG-CLF.
               05 WSS-MSG-CLF-CLF                 PIC X(03).
               05 WSS-MSG-CLF-CMD                 PIC X(03).
               05 WSS-MSG-CLF-STS                 PIC X(01).
               05 WSS-MSG-CLF-CIC                 PIC X(01).
           03  LDC-KEY-ILDC.
               05 LDC-KEY-ICLF.
                  07 LDC-CAI-ICLF                 PIC X(04).
                  07 LDC-IIC-ICLF                 PIC X(08).
               05 LDC-NUM-ILDC         COMP       PIC S9(04).
           03  ARC-KEY-IARC.
               05  ARC-KEY-ILDC.
                   07  ARC-CAI-ICLF               PIC X(04).
                   07  ARC-IIC-ICLF               PIC X(08).
*% IF PGM_DB2
                   07  ARC-NUM-ILDC   COMP        PIC S9(04).
               05  ARC-NUM-IARC       COMP        PIC S9(04).
*% ELSE
                   07  ARC-NUM-ILDC               PIC 9(02).
               05  ARC-NUM-IARC                   PIC 9(01).
*% END
           03  ARG-KEY-IARG.
               05  ARG-KEY-ILDC.
                   07  ARG-CAI-ICLF               PIC X(04).
                   07  ARG-IIC-ICLF               PIC X(08).
*% IF PGM_DB2
                   07  ARG-NUM-ILDC  COMP         PIC S9(04).
               05  ARG-NUM-IARG      COMP         PIC S9(04).
*% ELSE
                   07  ARG-NUM-ILDC               PIC 9(02).
               05  ARG-NUM-IARG                   PIC 9(01).
*% END
           03  WSS-FEC-FVEN.
               05 WSS-NUM-SVEN                    PIC 9(02).
               05 WSS-NUM-AVEN                    PIC 9(02).
               05 WSS-NUM-MVEN                    PIC 9(02).
               05 WSS-NUM-DVEN                    PIC 9(02).
           03  WSS-FEC-FPRV.
               05  WSS-NUM-SPRV                   PIC 9(02).
               05  WSS-NUM-APRV                   PIC 9(02).
               05  WSS-NUM-MPRV                   PIC 9(02).
               05  WSS-NUM-DPRV                   PIC 9(02).
           03  WSS-FEC-FVE1.
               05 WSS-NUM-SVE1                    PIC 9(02).
               05 WSS-NUM-AVE1                    PIC 9(02).
               05 WSS-NUM-MVE1                    PIC 9(02).
               05 WSS-NUM-DVE1                    PIC 9(02).
           03  WSS-FEC-FVE2.
               05 WSS-NUM-SVE2                    PIC 9(02).
               05 WSS-NUM-AVE2                    PIC 9(02).
               05 WSS-NUM-MVE2                    PIC 9(02).
               05 WSS-NUM-DVE2                    PIC 9(02).
           03  WSS-FHOY.
               05 WSS-SHOY                        PIC 9(02).
               05 WSS-AHOY                        PIC 9(02).
               05 WSS-MHOY                        PIC 9(02).
               05 WSS-DHOY                        PIC 9(02).
           03  WSS-FEC-FPR1.
               05  WSS-NUM-SPR1                   PIC 9(02).
               05  WSS-NUM-APR1                   PIC 9(02).
               05  WSS-NUM-MPR1                   PIC 9(02).
               05  WSS-NUM-DPR1                   PIC 9(02).
*% IF PGM_PU
      *<<<< PGM_PU
           03 WSS-VAL-RSG1        COMP-3          PIC S9(11)V9(4).
           03 WSS-VAL-RSG2        COMP-3          PIC S9(11)V9(4).
      *HPM ini 9-FEB-1994
           03 WSS-VAL-CMP-USD     COMP-3          PIC S9(11)V9(4).
      *HPM fin 9-FEB-1994
           03 WSS-VAL-CMAX-USD    COMP-3          PIC S9(11)V9(4).
           03 WSS-VAL-RSG1-USD    COMP-3          PIC S9(11)V9(4).
           03 WSS-VAL-RSG2-USD    COMP-3          PIC S9(11)V9(4).
           03 WSS-COD-USD                         PIC X(06).
           03 WSS-SGV-VCAM        COMP-3          PIC S9(11)V9(4).
           03 WSS-CIC-TOCF                        PIC X(06).
           03 WSS-EXISTE-GRUPO                    PIC 9(02).
      *AMP-INI 24-NOV-1993
           03 WSS-COD1                            PIC X(06).
           03 WSS-COD2                            PIC X(06).
           03 WSS-COD-MNAC                        PIC X(06).
           03 WSS-SAL1           COMP-3           PIC S9(11)V9(4).
      *AMP-INI 24-NOV-1993
      *>>>>
*% END
      *FLB CST  13-DEC-1993 
           03 WSS-VSN-OCAI                        PIC X(01).
      *FLB CST  13-JAN-1995 
           03 VEC-CMND.
              05 CMND-ING       VALUE 'ING'       PIC X(03).
              05 CMND-MOD       VALUE 'MOD'       PIC X(03).
              05 CMND-ELI       VALUE 'ELI'       PIC X(03).
              05 CMND-CON       VALUE 'CON'       PIC X(03).
              05 CMND-VRF       VALUE 'VRF'       PIC X(03).
              05 CMND-ACA       VALUE 'ACA'       PIC X(03).
              05 CMND-CIE       VALUE 'CIE'       PIC X(03).
              05 CMND-REV       VALUE 'REV'       PIC X(03).
              05 CMND-MCA       VALUE 'MCA'       PIC X(03).
              05 CMND-MSI       VALUE 'MSI'       PIC X(03).
              05 CMND-CMX       VALUE 'CMX'       PIC X(03).
              05 CMND-REA       VALUE 'REA'       PIC X(03).

*% IF PGM_DB2
           EXEC SQL INCLUDE LDCBRLDC END-EXEC.
       COPY GNSWGRQS REPLACING ==SQL-REQA== BY ==SQL-LDC-REQA==.
           EXEC SQL INCLUDE LDCBRARC END-EXEC.
       COPY GNSWGRQS REPLACING ==SQL-REQA== BY ==SQL-ARC-REQA==.
           EXEC SQL INCLUDE LDCBRARG END-EXEC.
       COPY GNSWGRQS REPLACING ==SQL-REQA== BY ==SQL-ARG-REQA==.
           EXEC SQL INCLUDE LDCBRRDC END-EXEC.
       COPY GNSWGRQS REPLACING ==SQL-REQA== BY ==SQL-RDC-REQA==.
           EXEC SQL INCLUDE LDCBRLAC END-EXEC.
       COPY GNSWGRQS REPLACING ==SQL-REQA== BY ==SQL-LAC-REQA==.
*% ELSE
      *<<<< NOT PGM_DB2
       COPY LDCBRLDC.
       COPY LDCBRARC.
       COPY LDCBRARG.
       COPY LDCBRRDC.
       COPY LDCBRLAC.
      *>>>>
*% END

       COPY TABBRCAM.
*% IF PGM_PER AND PGM_PU
      *AMP-INI  2-NOV-1993
        COPY SGCBROPE.
        COPY TABWGCTE.
      *AMP-FIN  2-NOV-1993
*% END

       COPY GNSBRCIC.
       COPY GNSWGCIC.
  
       COPY TABBRTIO.

*% IF PGM_DB2
           EXEC SQL INCLUDE SGCBRREC END-EXEC.
       COPY GNSWGRQS REPLACING ==SQL-REQA== BY ==SQL-REC-REQA==.
           EXEC SQL INCLUDE SGCBRDBC END-EXEC.
       COPY GNSWGRQS REPLACING ==SQL-REQA== BY ==SQL-DBC-REQA==.
*% ELSE
       COPY SGCBRREC.
       COPY SGCBRDBC.
*% END
*% IF PGM_DTC
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-CIC-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-DBC-REQA==.

       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-ARC-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-ARG-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-CAM-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-LAC-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-LDC-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-RDC-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-REC-REQA==.
*% IF PGM_PER AND PGM_PU
      *AMP-INI  2-NOV-1993
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-OPE-REQA==.
      *AMP-FIN  2-NOV-1993
*% END
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-TIO-REQA==.
*% END
       COPY GNSWGCPT.
       COPY GNSWGSTR.
      *>>>>
*% END
*% IF SYS_SCOD AND PGM_DB2
      *<<<< SYS_SCOD AND PGM_DB2
      *JSS-IBM
           IF SYS-SCOD = 'SD'
*%!            MOVE +{gnstca} TO SYS-TCMA
               MOVE +9000     TO SYS-TCMA
               EXEC CICS RETRIEVE
                 INTO(SCR-VARI) LENGTH(SYS-TCMA)
               END-EXEC.
      *>>>>
*% END
*% IF INI_FIO
      *<<<< INI_FIO
      *FLB CST  13-JAN-1995 
           MOVE 'DEU'           TO FIO-SIST.
           MOVE 'PRM'           TO TAB-COD-TTAB IN TAB.
           MOVE 'CMNDCLF'       TO TAB-COD-CTAB IN TAB.
           MOVE FIO-GET-KEY     TO FIO-CMND.
           PERFORM GNS-FIO-TAB.
           IF FIO-STAT-OKS AND TAB-IND-VIGE IN TAB = 'S'
               MOVE TAB-GLS-DATA IN TAB TO VEC-CMND.

*% IF PGM_PQ
      *<<<< PGM_PQ
           IF SCR-DESDE-CMN
               MOVE SPACES TO SCR-IND-MCLI
      * ORIGEN = 'C'LF
               MOVE SPACES TO SCR-VEC-ENG
               MOVE 'C' TO SCR-IND-COL
               MOVE 1 TO SCR-IPRO
               GO TO FIN-INI-FIO.
           IF SCR-INST-EXT = WSS-INST-FTER-CIC
               MOVE WSS-INST-NULL TO SCR-INST-EXT
               PERFORM ING-FTER-CIC.
       FIN-INI-FIO.
      *>>>>
*% END
*% IF PGM_VMS
      *<<<< INI_FIO AND PGM_VMS

           MOVE FIO-ACCS-UPD TO FIO-ACCS.
           MOVE FIO-ACC      TO FIO-CMND.
           MOVE 'GNS'        TO FIO-SIST.
           PERFORM GNS-FIO-CIC.
           MOVE FIO-UPD TO FIO-CMND.
           PERFORM GNS-FIO-CIC.

           MOVE FIO-ACCS-UPD TO FIO-ACCS.
           MOVE FIO-ACC      TO FIO-CMND.
           MOVE 'TAB'        TO FIO-SIST.
           PERFORM GNS-FIO-TAB.
           MOVE FIO-INP TO FIO-CMND.
           PERFORM GNS-FIO-TAB.

           MOVE FIO-ACCS-UPD TO FIO-ACCS.
           MOVE FIO-ACC      TO FIO-CMND.
           MOVE 'DEU'        TO FIO-SIST.
           PERFORM GNS-FIO-TAB.
           MOVE FIO-INP TO FIO-CMND.
           PERFORM GNS-FIO-TAB.

           MOVE FIO-ACCS-UPD TO FIO-ACCS.
           MOVE FIO-ACC      TO FIO-CMND.
           MOVE 'TAB'        TO FIO-SIST.
           PERFORM TAB-FIO-OFI.
           MOVE FIO-INP TO FIO-CMND.
           PERFORM TAB-FIO-OFI.

           MOVE FIO-ACCS-UPD TO FIO-ACCS.
           MOVE FIO-ACC      TO FIO-CMND.
           MOVE 'TAB'        TO FIO-SIST.
           PERFORM TAB-FIO-USR.
           MOVE FIO-INP TO FIO-CMND.
           PERFORM TAB-FIO-USR.

           MOVE FIO-ACCS-UPD TO FIO-ACCS.
           MOVE FIO-ACC      TO FIO-CMND.
           MOVE 'SGC'        TO FIO-SIST.
           PERFORM SGC-FIO-DBC.
           MOVE FIO-INP TO FIO-CMND.
           PERFORM SGC-FIO-DBC.

           MOVE FIO-ACCS-UPD TO FIO-ACCS.
           MOVE FIO-ACC      TO FIO-CMND.
           MOVE 'SGC'        TO FIO-SIST.
           PERFORM GNS-FIO-TAB.
           MOVE FIO-INP TO FIO-CMND.
           PERFORM GNS-FIO-TAB.

           MOVE FIO-ACCS-UPD TO FIO-ACCS.
           MOVE FIO-ACC      TO FIO-CMND.
           MOVE 'LDC'        TO FIO-SIST.
           PERFORM LDC-FIO-LDC.
           MOVE FIO-UPD TO FIO-CMND.
           PERFORM LDC-FIO-LDC.

           MOVE FIO-ACCS-UPD TO FIO-ACCS.
           MOVE FIO-ACC      TO FIO-CMND.
           MOVE 'LDC'        TO FIO-SIST.
           PERFORM LDC-FIO-ARC.
           MOVE FIO-UPD TO FIO-CMND.
           PERFORM LDC-FIO-ARC.

           MOVE FIO-ACCS-UPD TO FIO-ACCS.
           MOVE FIO-ACC      TO FIO-CMND.
           MOVE 'LDC'        TO FIO-SIST.
           PERFORM LDC-FIO-ARG.
           MOVE FIO-UPD TO FIO-CMND.
           PERFORM LDC-FIO-ARG.

           MOVE FIO-ACCS-UPD TO FIO-ACCS.
           MOVE FIO-ACC      TO FIO-CMND.
           MOVE 'LDC'        TO FIO-SIST.
           PERFORM LDC-FIO-RDC.
           MOVE FIO-UPD TO FIO-CMND.
           PERFORM LDC-FIO-RDC.

      *>>>>
*% END
      *>>>>
*% END
*% IF INI_FND_KEY
      *<<<< INI_FND_KEY
      * COMANDO ING, DIGITE CLAVE
           IF SCR-CCPP = 'ING' 
      *        CLF-IIC-ICLF IN CLF-FLD > ZEROES
               PERFORM FND-DIRECTO
               GO TO FIN-FND-KEY.

           MOVE ZEROES TO WSS-TOT-CLI.
           IF CLF-IIC-ICLF IN CLF-FLD > ZEROES
      *       SE DIGITO LO NECESARIO PARA BUSCAR DIRECTO
               PERFORM FND-DIRECTO
               IF FIO-STAT-OKS
                  PERFORM GET-CUR-RDC
                  IF NOT PGM-STAT-RDC-OKS
      *    CLF no tiene RDC asociado
                     MOVE 'DEU' TO MSG-COD-SIST
                     MOVE 'CLF    NORDC' TO MSG-COD-MENS
                     MOVE SCR-STAT-CON TO SCR-STAT
                     GO TO ERR-FND-KEY
                  ELSE
*% IF NOT PGM_BNL
                    MOVE RDC-CIC-ICLI IN RDC TO DBC-CIC-ICLI IN DBC
*% ELSE
                    MOVE RDC-IIC-ICLI IN RDC TO DBC-IIC-ICLI IN DBC
*% END
      *KEY-CLI BUSCA CLIENTE POR MEDIO DE CIC
                    MOVE 'DBC-KEY-IDBC'  TO FIO-AKEY
                    MOVE FIO-GET-KEY TO FIO-CMND
                    PERFORM SGC-FIO-DBC
                    MOVE FIO-STAT TO PGM-STAT-DBC
                    IF NOT FIO-STAT-OKS
      *        cliente inexistente
                       MOVE 'TAB'        TO MSG-COD-SIST
                       MOVE 'CLI    NEX' TO MSG-COD-MENS
                       PERFORM GET-MSG
                       MOVE MSG-GLS-DESC TO FRM-MENS
                       MOVE FIO-STAT-NEX TO PGM-STAT-DBC
                       MOVE SCR-STAT-CON TO SCR-STAT
                       GO TO FIN-FND-KEY
                    ELSE
                       PERFORM GET-NXT-RDC
                       GO TO EXA-COM-STAT
               ELSE
                   MOVE 'CLF    NEX' TO MSG-COD-MENS
                   GO TO ERR-FND-KEY.

      *    BUSCA EL PADRE POR ALGUNA DE LAS LLAVES (LA DIGITADA)
           IF DBC-NUM-ICLI IN CLF-FLD NOT = ZEROES
      *IDC-CLI BUSCA CLIENTE POR MEDIO DE IDC
               MOVE DBC-NUM-ICLI IN CLF-FLD TO DBC-NUM-ICLI IN DBC
               MOVE DBC-IND-ICLI IN CLF-FLD TO DBC-IND-ICLI IN DBC
               MOVE DBC-GLS-ICLI IN CLF-FLD TO DBC-GLS-ICLI IN DBC
               MOVE 'DBC-IDC-ICLI'  TO FIO-AKEY
               MOVE FIO-GET-KEY TO FIO-CMND
               PERFORM SGC-FIO-DBC
               MOVE FIO-STAT TO PGM-STAT-DBC
               IF FIO-STAT-OKS
                   GO TO CON-BUS-DBC.

           IF DBC-GLS-NOMC IN CLF-FLD > SPACES
      *NOM-CLI BUSCA CLIENTE POR MEDIO DEL NOMBRE
               MOVE DBC-GLS-NOMC IN CLF-FLD TO STR-GLS-GSTR
               PERFORM STR-UNS
               MOVE STR-GLS-FUNS IN STR-VARI(1) TO
                    DBC-GLS-APAT IN DBC
               MOVE STR-GLS-FUNS IN STR-VARI(2) TO
                    DBC-GLS-AMAT IN DBC
               MOVE STR-GLS-FUNS IN STR-VARI(3) TO
                    DBC-GLS-NOMB IN DBC
               MOVE 'DBC-GLS-NOMC'   TO FIO-AKEY
               MOVE FIO-GET-NLS TO FIO-CMND
               PERFORM SGC-FIO-DBC
               MOVE FIO-STAT TO PGM-STAT-DBC
               IF FIO-STAT-OKS
                   GO TO CON-BUS-DBC.

           MOVE 'TAB'        TO MSG-COD-SIST.
           MOVE 'CLI    NEX' TO MSG-COD-MENS.
           GO TO AFT-SIS-ERR-FND-KEY.

       CON-BUS-DBC.
      *    SE ENCONTRO EL DBC Y BUSCA EL CLF
           MOVE '00' TO PGM-STAT-DBC.
           PERFORM BUS-CLF.
           IF MSG-COD-MENS > SPACES
               GO TO ERR-FND-KEY
           ELSE
               GO TO EXA-COM-STAT.

       FND-DIRECTO.
      *>>>>
*% END
*% IF FIN_FND_KEY
      *<<<< FIN_FND_KEY
       EXA-COM-STAT.
       FIN-ANL-CLF.
           MOVE PGM-STAT-CLF TO FIO-STAT.

      * EXAMINA STATUS DE REGISTRO

           IF SCR-CCPP = 'ACC' AND SCR-STAT = SCR-STAT-CON
               GO TO FIN-FND-KEY.

           IF SCR-CMND = CMND-REA AND
              CLF-MSC-STAT IN CLF = 'C' 
               GO TO FIN-FND-KEY.

           IF SCR-CMND = CMND-REA
               MOVE 'CLF    NOCER' TO MSG-COD-MENS
               GO TO ERR-FND-KEY.

           IF SCR-CMND NOT = CMND-REA AND
              CLF-MSC-STAT IN CLF = 'C' 
               MOVE 'CLF    EXTING' TO MSG-COD-MENS
               GO TO ERR-FND-KEY.

           IF CLF-MSC-STAT IN CLF = 'R'
               MOVE 'CLF    MCAYA' TO MSG-COD-MENS
               GO TO ERR-FND-KEY.

      *FLB CST  9-JAN-1995 
           MOVE CLF-VAL-CMAX IN CLF TO SCR-VAL-CMAX IN SCR-VARI.

           IF CLF-MSC-STAT IN CLF = 'A' AND SCR-CMND = CMND-MCA
      *FLB CST  9-JAN-1995 
           OR CLF-MSC-STAT IN CLF = 'A' AND SCR-CMND = CMND-MSI
           OR CLF-MSC-STAT IN CLF = 'A' AND SCR-CMND = CMND-CMX
           OR CLF-MSC-STAT IN CLF = 'A' AND SCR-CMND = CMND-CIE
           OR CLF-MSC-STAT IN CLF = 'A' AND SCR-CMND = CMND-REV
               IF SCR-CMND = CMND-MSI
                   MOVE 'DEU'        TO MSG-COD-SIST
                   MOVE 'PROMPTMSI'  TO MSG-COD-MENS
                   PERFORM GET-MSG
                   MOVE MSG-GLS-DESC TO FRM-MEN1
                   GO TO FIN-FND-KEY
               ELSE
                   GO TO FIN-FND-KEY.

           IF SCR-CMND = 'MCA'
      *FLB CST  9-JAN-1995 
           OR SCR-CMND = CMND-MSI
           OR SCR-CMND = CMND-CMX
           OR SCR-CMND = CMND-CIE
           OR SCR-CMND = CMND-REV
              MOVE 'CLF   NOACA' TO MSG-COD-MENS
              GO TO ERR-FND-KEY.

           IF CLF-MSC-STAT IN CLF = 'A'
               MOVE 'CLF    ACAYA' TO MSG-COD-MENS
               GO TO ERR-FND-KEY.

           IF CLF-MSC-STAT IN CLF = 'V' AND SCR-CMND = CMND-ACA
               GO TO FIN-FND-KEY.

           IF SCR-CMND = CMND-ACA
               MOVE 'CLF    NOVRF' TO MSG-COD-MENS
               GO TO ERR-FND-KEY.

           IF SCR-CMND = CMND-MOD
           OR SCR-CMND = CMND-VRF
           OR SCR-CMND = CMND-ELI
               GO TO FIN-FND-KEY.

           MOVE 'CLF   NOEST' TO MSG-COD-MENS.

       ERR-FND-KEY.
      *    TODOS OTROS CASOS: EL ERROR PERTENECE AL SISTEMA DEU
           MOVE 'DEU' TO MSG-COD-SIST.
       AFT-SIS-ERR-FND-KEY.
           PERFORM GET-MSG.
           MOVE MSG-GLS-DESC TO FRM-MENS.

           IF SCR-CCPP = 'ING'
               MOVE '00' TO PGM-STAT-CLF
               MOVE '00' TO FIO-STAT
           ELSE
               MOVE '23' TO PGM-STAT-CLF
               MOVE '23' TO FIO-STAT.

           IF NOT (
                   PGM-STAT-DBC-OKS OR
                   PGM-STAT-CLF-OKS
                  )
               MOVE SCR-STAT-ABT TO SCR-STAT
               GO TO FIN-FND-KEY.

      * DESPLIEGA DATOS DEL CLF
      *                   O DBC

           MOVE SCR-STAT-CON TO SCR-STAT.
      * JVM: No limpia llaves al desplegar msg de error
           MOVE PGM-NO-LIMPIAR-NADA TO PGM-ICLR.
      *     PERFORM SCR-CLRA-CLF.
           IF PGM-STAT-DBC-OKS
               PERFORM PUT-DBC-CLF.

           IF PGM-STAT-CLF-OKS
               PERFORM PUT-CLF-CLF.

           GO TO FIN-FND-KEY.
      *>>>>
*% END
*% IF PUT_SCR 
      *<<<< PUT_SCR 
           IF SCR-CMND = CMND-REA
               PERFORM VAL-CON-RDC-CLF
               IF MSG-COD-MENS > SPACES
                   PERFORM GET-MSG
                   MOVE MSG-GLS-DESC TO FRM-MENS
                   MOVE SCR-STAT-CON TO SCR-STAT
      *AMP-INI  20-OCT-1993
                   GO TO FIN-PUT-SCR
               ELSE
                   MOVE CLF-CAI-ICLF IN CLF-FLD TO
                        CLF-CAI-ICLF IN CLF
                   MOVE CLF-IIC-ICLF IN CLF-FLD TO
                        CLF-IIC-ICLF IN CLF
                   MOVE FIO-GET-KEY  TO FIO-CMND
                   PERFORM LDC-FIO-CLF
           ELSE
               NEXT SENTENCE.
      *AMP-FIN  20-OCT-1993
      *>>>>
*% END
*% IF INI_PRO_CONF AND PGM_PU
      *<<<< INI_PRO_CONF AND PGM_PU
           IF SCR-CMND = CMND-ACA OR CMND-REV
               MOVE 'A' TO CLF-MSC-STAT IN CLF-FLD
           ELSE
           IF SCR-CMND = CMND-CIE
               MOVE 'C' TO CLF-MSC-STAT IN CLF-FLD
           ELSE
           IF SCR-CMND = CMND-REA
               MOVE SPACES TO CLF-COD-RAZC IN CLF-FLD
               MOVE SPACES TO FRM-GLS-RAZC IN CLF-FLD
               MOVE 'I' TO CLF-MSC-STAT    IN CLF-FLD
               MOVE ZEROES TO CLF-FEC-FCIE IN CLF-FLD
           ELSE
      *FLB CST  13-JAN-1995 
           IF SCR-CMND = CMND-VRF AND SCR-COD-STAT = 'M'
               MOVE 'V' TO CLF-MSC-STAT IN CLF-FLD
           ELSE
           IF SCR-CMND = CMND-VRF AND SCR-COD-STAT = 'X'
               MOVE 'A' TO CLF-MSC-STAT IN CLF-FLD
           ELSE
               MOVE 'I' TO CLF-MSC-STAT IN CLF-FLD.

           MOVE 'DEU'  TO MSC-COD-SIST.
           MOVE 'STA ' TO MSC-COD-TMSC IN MSC.
           MOVE CLF-MSC-STAT IN CLF-FLD TO MSC-COD-CMSC IN MSC.
           PERFORM BUS-MSC.
           IF NOT MSG-COD-MENS > SPACES
               MOVE MSC-GLS-DESC IN MSC TO
                    FRM-GLS-STAT IN CLF-FLD
           ELSE
               MOVE SPACES TO FRM-GLS-STAT IN CLF-FLD.

      *>>>>
*% END
*% IF INI_CMN_MOD
      *<<<< INI_CMN_MOD
           IF SCR-CMND = CMND-MCA OR CMND-MSI
               PERFORM LDC-PRO-MCA
               IF MSG-COD-MENS > SPACES AND 
                  MSG-COD-MENS NOT = 'MCAOK' AND
                  MSG-COD-MENS NOT = 'MSIOK'
                   GO TO FIN-CMN-MOD.
      *>>>>
*% END
*% IF CMN_MOD_RET
      *<<<< CMN_MOD_RET
      *FLB BCP  13-JAN-1995 
           IF SCR-CMND = CMND-ACA OR CMND-REV OR CMND-CMX
               MOVE 'A' TO CLF-MSC-STAT IN CLF-FLD
           ELSE
           IF SCR-CMND = CMND-CIE
               MOVE 'C' TO CLF-MSC-STAT IN CLF-FLD
           ELSE
           IF SCR-CMND = CMND-MCA OR CMND-MSI
               MOVE CLF-CAI-CREN IN CLF TO CLF-CAI-CREN IN CLF-FLD
               MOVE CLF-IIC-CREN IN CLF TO CLF-IIC-CREN IN CLF-FLD
               MOVE 'I' TO CLF-MSC-STAT IN CLF-FLD
           ELSE
               MOVE 'I' TO CLF-MSC-STAT IN CLF-FLD.
      *>>>>
*% END
*% IF CMN_MOD
      *<<<< CMN_MOD
      *FLB CST  9-JAN-1995 REVISADO PARA MSI
      *FLB CST  21-SEP-1994 CCU FUNCIONE LUEGO MCA/MSI Y ANTES ACA
           IF SCR-CMND = CMND-ACA
               MOVE SPACES TO CLF-COD-STAT IN CLF
           ELSE
           IF SCR-CMND = CMND-MCA
               MOVE 'M' TO CLF-COD-STAT IN CLF
               MOVE SCR-INST-HCM TO SCR-INST
           ELSE
           IF SCR-CMND = CMND-MSI
               MOVE SCR-INST-HCM TO SCR-INST
               MOVE 'X' TO CLF-COD-STAT IN CLF.
      *FLB CST  21-SEP-1994 

           MOVE 'M'      TO CLF-MSC-TACC IN CLF.
      *>>>>
*% END
*% IF FIN_CMN_MOD 
      *<<<< FIN_CMN_MOD 
      *FLB CST  19-JAN-1995 
           IF NOT FIO-STAT-OKS
               MOVE FIO-MENS TO FRM-MENS
               MOVE FIO-BCK-OUT  TO FIO-CMND
               PERFORM LDC-FIO-CLF
               GO TO FIN-CMN-MOD.
      *>>>>
*% END
*% IF FIN_CMN_MOD AND PGM_PER
      *<<<< FIN_CMN_MOD AND PGM_PER
      *AMP-INI   2-NOV-1993   /   24-NOV-1993 -> HABILITA 'ACA'
      *    IF SCR-CMND = 'XXX'
           IF SCR-CMND = CMND-ACA
               MOVE ZEROES TO CTE-CMMA
               PERFORM CREDITO-ORDINARIO
               IF NOT CTE-STAT-OKS
                   MOVE 'UPDTFCFAIL' TO MSG-COD-MENS
                   PERFORM GET-MSG
                   MOVE MSG-GLS-DESC TO FRM-MENS
                   MOVE FRM-SUAR-MAL TO FRM-SUAR
                   MOVE FIO-BCK-OUT  TO FIO-CMND
                   PERFORM LDC-FIO-CLF
                   GO TO FIN-CMN-MOD
               ELSE
                   IF MSG-COD-MENS > SPACES
                       PERFORM GET-MSG
                       MOVE MSG-GLS-DESC TO FRM-MENS
                       MOVE FRM-SUAR-MAL TO FRM-SUAR
                       MOVE FIO-BCK-OUT  TO FIO-CMND
                       PERFORM LDC-FIO-CLF
                       GO TO FIN-CMN-MOD
                   ELSE
                       NEXT SENTENCE.
      *AMP-FIN   2-NOV-1993
      *>>>>
*% END
*% IF INI_CMN_ING
      *<<<< INI_CMN_ING
      *GET-CIC Obtener CIC
       CIC-GET-CIC-ING.
           IF CLF-IIC-ICLF IN CLF-FLD > ZEROES
      *        INDICA QUE NO INVOCO A RUTINA OBTENCION CIC
               MOVE 'N' TO SCR-IND-OCIC
           ELSE
      *        INDICA QUE SI INVOCO A RUTINA OBTENCION CIC
               MOVE 'S' TO SCR-IND-OCIC
      *FLB CST  22-DEC-1993 
      *        MOVE 'L' TO CIC-COD-TCIC IN CIC
      *        MOVE CLF-COD-OFIC IN CLF-FLD TO CIC-COD-CCIC IN CIC
               MOVE CLF-CAI-ICLF IN CLF-FLD TO CIC-CAI-ICIC IN CIC

               MOVE CIC-GET TO CIC-CMND
               PERFORM PRO-CIC
               IF CIC-STAT NOT = CIC-STAT-OKS
                   MOVE CIC-MENS TO FRM-MENS
                   MOVE FIO-STAT-NEX TO FIO-STAT
                   GO TO FIN-CMN-ING
               ELSE
                   MOVE CIC-CIC-ICIC TO CLF-CIC-ICLF IN CLF
                   MOVE FIO-GET-KEY TO FIO-CMND
                   PERFORM LDC-FIO-CLF
                   IF FIO-STAT-OKS
                       GO TO CIC-GET-CIC-ING
                   ELSE
                       MOVE CIC-CAI-ICIC TO CLF-CAI-ICLF IN CLF-FLD
                       MOVE CIC-IIC-ICIC TO CLF-IIC-ICLF IN CLF-FLD.

           MOVE SPACES TO CLF-GLS-FLAG IN CLF.
           MOVE SPACES TO CLF-CAI-CREN IN CLF.
           MOVE ZEROES TO CLF-IIC-CREN IN CLF.
           MOVE ZEROES TO CLF-GLS-DISP IN CLF.

           MOVE 'I'      TO CLF-MSC-TACC IN CLF.
      *>>>>
*% END
*% IF CMN_ING
      *<<<< CMN_ING

           IF DBC-IND-ICLI IN CLF-FLD NOT = 'M'
              PERFORM PUT-RDC
              IF NOT FIO-STAT-OKS
                 MOVE 'DEU'        TO MSG-COD-SIST
                 MOVE 'RDC    PUT' TO MSG-COD-MENS
                 PERFORM GET-MSG
                 MOVE MSG-GLS-DESC TO FRM-MENS
                 GO TO FIN-CMN-ING.
      *>>>>
*% END
*% IF FIN_CMN_ING
      *<<<< FIN_CMN_ING
           MOVE FIO-STAT TO PGM-STAT-CLF.
           IF NOT FIO-STAT-OKS
      *        ERROR INCONSISTENCIA EN EL INGRESO : INFORMAR
               MOVE FIO-MENS TO FRM-MENS
               GO TO FIN-CMN-ING.

      * LTM-INI 22-04-1994
           MOVE 'TAB'     TO TAB-COD-SIST.
           MOVE 'TIO'     TO TAB-COD-TTAB IN TAB.
           MOVE CLF-COD-TOCF IN CLF-FLD TO TAB-COD-CTAB IN TAB.
           PERFORM VAL-COD.
           IF TAB-CIC-CTAB IN TAB = 'CGE'
               MOVE CLF-CAI-ICLF IN CLF-FLD TO LDC-CAI-ICLF IN LDC
               MOVE CLF-IIC-ICLF IN CLF-FLD TO LDC-IIC-ICLF IN LDC
               MOVE 01        TO LDC-NUM-ILDC IN LDC
               MOVE HOY-FHOY  TO LDC-FEC-FTRN IN LDC
               MOVE HOY-HHOY  TO LDC-HRA-HRTR IN LDC
               MOVE 'I'       TO LDC-MSC-TACC IN LDC
               MOVE 'I'       TO LDC-MSC-STAT IN LDC
               MOVE SCR-OTRN  TO LDC-COD-OTRN IN LDC
               MOVE SCR-USER  TO LDC-COD-ATRN IN LDC
               MOVE 'CODIGO DE GRUPO' TO LDC-GLS-DESC IN LDC
               MOVE 'COD.GRU' TO LDC-GLS-DCOR IN LDC
               MOVE CLF-VAL-CMAX IN CLF-FLD TO LDC-VAL-CMAX IN LDC
*% IF MON_LDC
      *<<<< MON_LDC
               MOVE CLF-COD-VCCF IN CLF-FLD TO LDC-COD-VCLC IN LDC
      *>>>>
*% END
               MOVE 'S'       TO LDC-IND-MGAR IN LDC
               MOVE CLF-NUM-PVIG IN CLF-FLD TO LDC-NUM-PVIG IN LDC
               MOVE CLF-IND-PVIG IN CLF-FLD TO LDC-IND-PVIG IN LDC
               MOVE 'S'       TO LDC-IND-VIGE IN LDC
               MOVE CLF-NUM-DVEN IN CLF-FLD TO LDC-NUM-DVEN IN LDC
               MOVE CLF-NUM-MVEN IN CLF-FLD TO LDC-NUM-MVEN IN LDC
               MOVE CLF-NUM-SVEN IN CLF-FLD TO LDC-NUM-SVEN IN LDC
               MOVE CLF-NUM-AVEN IN CLF-FLD TO LDC-NUM-AVEN IN LDC
               MOVE 0         TO LDC-VAL-RSG1 IN LDC
               MOVE 0         TO LDC-VAL-RSG2 IN LDC
               MOVE SPACES    TO LDC-GLS-DISP IN LDC 
      *FLB CST  14-MAR-1995 10-OCT-1994 Linea de Libre Disponibilidad
               MOVE 'DEU' TO FIO-SIST
               MOVE 'VSN'       TO TAB-COD-TTAB IN TAB
               MOVE 'CODTIPLDC' TO TAB-COD-CTAB IN TAB
               MOVE FIO-GET-KEY TO FIO-CMND
               PERFORM GNS-FIO-TAB
               IF NOT ( FIO-STAT-OKS AND TAB-IND-VIGE IN TAB = 'S' )
                   MOVE SPACES TO LDC-COD-TIPO IN LDC 
                   MOVE FIO-PUT TO FIO-CMND
                   PERFORM LDC-FIO-LDC
                   IF NOT FIO-STAT-OKS
      *        Error inconsistencia en el ingreso : hacer LOGTB e inform
                       MOVE FIO-MENS TO FRM-MENS
                       PERFORM BCK-OUT
                       GO TO FIN-CMN-ING
                   ELSE
                       GO TO NO-ENGANCHA
               ELSE
                   MOVE 'DEU' TO FIO-SIST
                   MOVE 'TLC'   TO TAB-CIC-TTAB IN TAB
                   MOVE 'LIBRE' TO TAB-CIC-CTAB IN TAB
                   MOVE 'TAB-CIC-TABL' TO FIO-AKEY
                   MOVE FIO-GET-KEY TO FIO-CMND
                   PERFORM GNS-FIO-TAB
                   IF NOT FIO-STAT-OKS
                       MOVE 'DEU' TO MSG-COD-SIST
                       MOVE 'CICLIBRENEX' TO MSG-COD-MENS
                       PERFORM GET-MSG 
                       MOVE MSG-GLS-DESC TO FRM-MENS
                       PERFORM BCK-OUT
                       GO TO FIN-CMN-ING
                   ELSE
                       MOVE TAB-COD-CTAB IN TAB TO LDC-COD-TIPO IN LDC
                       MOVE FIO-PUT TO FIO-CMND
                       PERFORM LDC-FIO-LDC
                       IF NOT FIO-STAT-OKS
      *        Error inconsistencia en el ingreso : hacer LOGTB e inform
                           MOVE FIO-MENS TO FRM-MENS
                           PERFORM BCK-OUT
                           GO TO FIN-CMN-ING
                       ELSE
                           GO TO NO-ENGANCHA.
      *FLB CST  14-MAR-1995 FIN
      * LTM-FIN 22-04-1994

           IF DBC-IND-ICLI IN CLF-FLD = 'M'
              MOVE 'S'    TO SCR-IND-ENG IN SCR-VEC-ENG(WSS-IDX-IRDC)
              MOVE 'S'    TO SCR-IND-FST IN SCR-VEC-FST(WSS-IDX-IRDC)
           ELSE
              MOVE SPACES TO SCR-IND-ENG IN SCR-VEC-ENG(WSS-IDX-IRDC)
              MOVE SPACES TO SCR-IND-FST IN SCR-VEC-FST(WSS-IDX-IRDC).

           MOVE 'S'    TO SCR-IND-ENG IN SCR-VEC-ENG(WSS-IDX-ILDC).
           MOVE 'S'    TO SCR-IND-FST IN SCR-VEC-FST(WSS-IDX-ILDC).
           PERFORM EGR-FPEN-CIC.

       NO-ENGANCHA.
      *-------------
           IF PGM-STAT-CLF-OKS
               MOVE 'CLF'               TO WSS-MSG-CLF-CLF
               MOVE SCR-CCPP            TO WSS-MSG-CLF-CMD
               MOVE CLF-MSC-STAT IN CLF TO WSS-MSG-CLF-STS
               MOVE SCR-IND-OCIC        TO WSS-MSG-CLF-CIC
               MOVE 'DEU'       TO MSG-COD-SIST
               MOVE WSS-MSG-CLF TO MSG-COD-MENS
               PERFORM GET-MSG
               IF SCR-IND-OCIC = 'S'
                   MOVE CLF-CAI-ICLF IN CLF-FLD TO WSS-CPT-CAI
                   MOVE CLF-IIC-ICLF IN CLF-FLD TO WSS-CPT-IIC
                   PERFORM MSG-CLF
               ELSE
                   PERFORM MSG-CLF.
      *>>>>
*% END
*% IF CMN_ELI
      *<<<< CMN_ELI
           PERFORM DEL-ARC.
           IF MSG-COD-MENS > SPACES
      *        ERROR INCONSISTENCIA EN LA ELIMINACION : INFORMAR
               GO TO FIN-CMN-ELI.

           PERFORM DEL-ARG.
           IF MSG-COD-MENS > SPACES
      *        ERROR INCONSISTENCIA EN LA ELIMINACION : INFORMAR
               GO TO FIN-CMN-ELI.

           PERFORM DEL-LDC.
           IF MSG-COD-MENS > SPACES
      *        ERROR INCONSISTENCIA EN LA ELIMINACION : INFORMAR
               GO TO FIN-CMN-ELI.

           PERFORM DEL-RDC.
           IF MSG-COD-MENS > SPACES
      *       ERROR INCONSISTENCIA EN LA ELIMINACION : INFORMAR
              GO TO FIN-CMN-ELI.
      *>>>>
*% END
*% IF INI_CMN_ACC
      *<<<< INI_CMN_ACC
      *FLB CST  10-FEB-1995 
           IF SCR-CMND = CMND-VRF
               MOVE SPACES TO MSG-COD-MENS
               MOVE ZEROES TO WSS-TOT-CLI
                              WSS-TOT-ARC
                              WSS-TOT-ARG
               PERFORM LDC-PRO-VCL
               IF MSG-COD-MENS > SPACES
                   GO TO ERR-ACC.
      *>>>>
*% END
*% IF CMN_ACC
      *<<<< CMN_ACC
      *FLB CST  21-SEP-1994 CCU FUNCIONE LUEGO MCA/CMX Y ANTES ACA
      *    MOVE 'I' TO CLF-COD-STAT IN CLF.

      *FLB CST  10-FEB-1995 
           IF SCR-CMND = CMND-VRF
               MOVE SCR-INST-HCM TO SCR-INST
      *FLB CST  13-JAN-1995 
               IF SCR-COD-STAT IN SCR-VARI = 'X'
                   MOVE ' ' TO CLF-COD-STAT IN CLF
                   MOVE 'A' TO CLF-MSC-STAT IN CLF
               ELSE
                   MOVE 'V' TO CLF-MSC-STAT IN CLF.

FM0194     PERFORM GET-FHOY.
FM0194*    Fecha Transaccion
FM0194     MOVE HOY-FHOY TO CLF-FEC-FTRN IN CLF.
FM0194*    Hora Transaccion
FM0194     MOVE HOY-HHOY TO CLF-HRA-HRTR IN CLF.
FM0194*    Codigo Origen transaccion
FM0194     MOVE SCR-OTRN TO CLF-COD-OTRN IN CLF.
FM0194*    Autor Transaccion
FM0194     MOVE SCR-USER TO CLF-COD-ATRN IN CLF.

           MOVE FIO-MOD TO FIO-CMND.
           PERFORM LDC-FIO-CLF.
           MOVE FIO-STAT TO PGM-STAT-CLF.
           IF FIO-STAT-OKS
               MOVE 'ACCLFOK' TO MSG-COD-TMSG
               MOVE CLF-MSC-STAT IN CLF TO MSG-COD-CMSG
           ELSE
               MOVE 'ACCLFER' TO MSG-COD-TMSG
               MOVE CLF-MSC-STAT IN CLF TO MSG-COD-CMSG.

       ERR-ACC.
      *GET-MSG Busca mensaje en tabla
           MOVE 'DEU' TO MSG-COD-SIST.
           PERFORM GET-MSG.
           PERFORM MSG-CLF.
      *>>>>
*% END
*% IF FIN_HBL_KEY
      *<<<< FIN_HBL_KEY
      *>>>>
*% END
*% IF EOF
      *<<<< EOF
      *  Codigo adicional para rutina LDCPSVCL
       COPY LDCBGVCL.
       COPY LDCBKVCL.
      *  Codigo adicional para rutina LDCPSMCA
       COPY LDCBGMCA.
       COPY LDCBKMCA.

      *  CODIGO ADICIONAL PARA ENGANCHE PROGRAMAS
       COPY LDCBGMPT.

*% IF PGM_PQ
      *<<<< PGM_PQ
       ING-FTER-CIC SECTION.
       INI-ING-FTER-CIC.
           PERFORM ING-SETE.
           MOVE SCR-INST-GKY TO SCR-INST.
           PERFORM HBL-KEY.
           PERFORM SCR-CLRA-CLF.
           PERFORM EDT-KEY-CLF.
           PERFORM EDT-FLD-CLF.

      * BUSCAR MENSAJE
           MOVE SPACES TO SCR-CIC-ICLF
                          SCR-VEC-ENG
                          SCR-VEC-FST
                          SCR-IND-COL
                          SCR-INST-EXT
                          SCR-MENS-EXT.
           PERFORM SCR-INIT.
           PERFORM SCR-EXIT.
       FIN-ING-FTER-CIC.
           EXIT.

       ING-SETE SECTION.
       INI-ING-SETE.
           PERFORM CRG-TBL-ENG.
           MOVE WSS-NTRN(SCR-IPRO) TO SCR-NTRN.
           MOVE WSS-PROG(SCR-IPRO) TO SCR-PROG.
           MOVE WSS-NTRV(SCR-IPRO) TO SCR-NTRV.
           MOVE WSS-PROV(SCR-IPRO) TO SCR-PROV.
           MOVE WSS-NMAP(SCR-IPRO) TO SCR-NMAP.
           MOVE WSS-NLIB(SCR-IPRO) TO SCR-NLIB.
       FIN-ING-SETE.
           EXIT.

       SCR-INIT SECTION.
       INI-SCR-INIT.
           MOVE 3  TO FRM-PLIN.
           MOVE 19 TO FRM-NLIN.
           MOVE FRM-CLR-FRM TO FRM-CMND.
           PERFORM GNS-PRO-FRM.
           MOVE FRM-SINI-DBNF TO FRM-SINI.
           MOVE SCR-NMAP TO FRM-NAME.
           MOVE SCR-NLIB TO FRM-NLIB.
           MOVE CLF-FLD TO FRM-DFLD.
           MOVE FRM-INI TO FRM-CMND.
           PERFORM GNS-PRO-FRM.
       FIN-SCR-INIT.
           EXIT.
      *>>>>
*% END
*% IF PGM_PU
      *<<<< PGM_PU
       EGR-FPEN-CIC SECTION.
       INI-EGR-FPEN-CIC.
           MOVE CLF-CAI-ICLF IN CLF-FLD TO SCR-CAI-ICLF.
           MOVE CLF-IIC-ICLF IN CLF-FLD TO SCR-IIC-ICLF.
           PERFORM CRG-TBL-ENG.
           ADD 1 TO SCR-IPRO.
           IF SCR-IND-ENG IN SCR-VEC-ENG(SCR-IPRO) = SPACES
               GO TO INI-EGR-FPEN-CIC.
           MOVE WSS-INST-FPEN-CIC TO SCR-INST-EXT.
           MOVE WSS-PROG(SCR-IPRO) TO SYS-PROG.
           MOVE SCR-VARI TO SYS-CMMA.
*% IF NOT PGM_DB2
      *<<<< NOT PGM_DB2
           MOVE SCR-TCMA TO SYS-TCMA.
           MOVE SYS-XCTL TO SYS-CMND.
           PERFORM GNS-PRO-SYS.
*% ELSE
      *<<<< PGM_DB2
*%!        MOVE +{gnstca} TO SYS-TCMA.
           MOVE SCR-TCMA  TO SYS-TCMA.
           EXEC CICS START
                TRANSID( WSS-NTRN IN WSS-PPRO(SCR-IPRO) )
                TERMID ( EIBTRMID )
                FROM   ( SYS-CMMA )
                LENGTH ( SYS-TCMA )
           END-EXEC.
           EXEC CICS RETURN
           END-EXEC.
      *>>>>
*% END
       FIN-EGR-FPEN-CIC.
           EXIT.
      *>>>>
*% END
*% IF PGM_PQ
      *<<<< PGM_PQ
       BUS-CLF SECTION.
       INI-BUS-CLF.
*% IF NOT PGM_BNL
           MOVE DBC-CIC-ICLI IN DBC TO RDC-CIC-ICLI IN RDC.
*% ELSE
           MOVE SPACES              TO RDC-CAI-ICLI IN RDC.
           MOVE DBC-IIC-ICLI IN DBC TO RDC-IIC-ICLI IN RDC.
*% END
           MOVE SPACES              TO RDC-CIC-ICLF IN RDC.

           MOVE FIO-GET-NLS TO FIO-CMND.
           PERFORM LDC-FIO-RDC.
           MOVE FIO-STAT TO PGM-STAT-RDC.
           IF NOT ( FIO-STAT-OKS AND 
*% IF NOT PGM_BNL
                    DBC-CIC-ICLI IN DBC = RDC-CIC-ICLI IN RDC )
*% ELSE
                    DBC-IIC-ICLI IN DBC = RDC-IIC-ICLI IN RDC )
*% END
               MOVE 'DEU'          TO MSG-COD-SIST
               MOVE 'CLF    NORDC' TO MSG-COD-MENS
               GO TO BRW-BUS-CLF.

           MOVE ZEROES TO WSS-FEC-FCIE.
           MOVE RDC-CIC-ICLF IN RDC TO WSS-CIC-ICLF.
       LUP-BUS-CLF.
           MOVE RDC-CIC-ICLF IN RDC TO CLF-CIC-ICLF IN CLF.
           MOVE CLF-CAI-ICLF IN CLF TO CLF-CAI-ICLF IN CLF-FLD.
           MOVE CLF-IIC-ICLF IN CLF TO CLF-IIC-ICLF IN CLF-FLD.
           MOVE FIO-GET-KEY TO FIO-CMND.
           MOVE FIO-STAT TO PGM-STAT-CLF.
           PERFORM LDC-FIO-CLF.
           IF NOT FIO-STAT-OKS
               MOVE 'CLF    NEX' TO MSG-COD-MENS
               GO TO BRW-BUS-CLF.

           IF NOT ( CLF-MSC-STAT IN CLF = 'C' OR 'R' )
               GO TO BRW-BUS-CLF.

           IF CLF-FEC-FCIE IN CLF > WSS-FEC-FCIE
      *AMP-INI  27-OCT-1993
              AND CLF-MSC-STAT IN CLF NOT = 'R'
      *AMP-FIN  27-OCT-1993
               MOVE CLF-CIC-ICLF IN CLF TO WSS-CIC-ICLF
               MOVE CLF-FEC-FCIE IN CLF TO WSS-FEC-FCIE.

       NXT-BUS-CLF.
           MOVE FIO-GET-NXT TO FIO-CMND.
           PERFORM LDC-FIO-RDC.
           MOVE FIO-STAT TO PGM-STAT-RDC.
           IF FIO-STAT-OKS AND 
*% IF NOT PGM_BNL
              DBC-CIC-ICLI IN DBC = RDC-CIC-ICLI IN RDC
*% ELSE
              DBC-IIC-ICLI IN DBC = RDC-IIC-ICLI IN RDC
*% END
               GO TO LUP-BUS-CLF.

           MOVE WSS-CIC-ICLF TO CLF-CIC-ICLF IN CLF.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM LDC-FIO-CLF.
           MOVE FIO-STAT TO PGM-STAT-CLF.
           MOVE CLF-CAI-ICLF IN CLF TO CLF-CAI-ICLF IN CLF-FLD.
           MOVE CLF-IIC-ICLF IN CLF TO CLF-IIC-ICLF IN CLF-FLD.
       BRW-BUS-CLF.
           IF PGM-STAT-RDC-OKS
               MOVE FIO-END-BRW TO FIO-CMND
               PERFORM LDC-FIO-RDC.
       FIN-BUS-CLF.
           EXIT.

       GET-CUR-RDC SECTION.
       INI-GET-CUR-RDC.
           MOVE CLF-CIC-ICLF IN CLF TO RDC-CIC-ICLF IN RDC.
           MOVE 'RDC-KEY-ICLF' TO FIO-AKEY.
           MOVE FIO-GET-NLS    TO FIO-CMND.
           PERFORM LDC-FIO-RDC.
           IF FIO-STAT-CDK
               MOVE '00' TO FIO-STAT.
           IF NOT ( FIO-STAT-OKS AND
                    CLF-CIC-ICLF IN CLF = RDC-CIC-ICLF IN RDC )
               MOVE '23' TO PGM-STAT-RDC
               IF FIO-STAT-OKS
                   MOVE 'RDC-KEY-ICLF' TO FIO-AKEY
                   MOVE FIO-END-BRW TO FIO-CMND
                   PERFORM LDC-FIO-RDC
               ELSE
                   NEXT SENTENCE
           ELSE
               MOVE '00' TO PGM-STAT-RDC
               MOVE 1 TO WSS-TOT-CLI.

       FIN-GET-CUR-RDC.
           EXIT.

       GET-NXT-RDC SECTION.
       INI-GET-NXT-RDC.
           MOVE SPACES TO MSG-COD-SIST.
           MOVE SPACES TO MSG-COD-MENS.
           MOVE 'RDC-KEY-ICLF' TO FIO-AKEY.
           MOVE FIO-GET-NXT TO FIO-CMND.
           PERFORM LDC-FIO-RDC.
           IF FIO-STAT-OKS AND
              CLF-CIC-ICLF IN CLF = RDC-CIC-ICLF IN RDC
                ADD 1 TO WSS-TOT-CLI
                MOVE 'M' TO SCR-IND-MCLI
           ELSE
                MOVE SPACES TO SCR-IND-MCLI.
       FIN-GET-NXT-RDC.
           EXIT.

       GET-NXT-ARC SECTION.
       INI-GET-NXT-ARC.
           MOVE SPACES TO MSG-COD-SIST.
           MOVE SPACES TO MSG-COD-MENS.
           MOVE FIO-GET-NXT TO FIO-CMND.
           PERFORM LDC-FIO-ARC.
           IF FIO-STAT-OKS AND
              ARC-KEY-ILDC IN WSS-VARI = ARC-KEY-ILDC IN ARC
              ADD 1 TO WSS-TOT-ARC.
       FIN-GET-NXT-ARC.
           EXIT.

       GET-NXT-ARG SECTION.
       INI-GET-NXT-ARG.
           MOVE SPACES TO MSG-COD-SIST.
           MOVE SPACES TO MSG-COD-MENS.
           MOVE FIO-GET-NXT TO FIO-CMND.
           PERFORM LDC-FIO-ARG.
           IF FIO-STAT-OKS AND
              ARG-KEY-ILDC IN WSS-VARI = ARG-KEY-ILDC IN ARG
              ADD 1 TO WSS-TOT-ARG.
       FIN-GET-NXT-ARG.
           EXIT.

      *>>>>
*% END
*% IF PGM_PU
      *<<<< PGM_PU
*% IF  PGM_PER
      *<<<< PGM_PER
      *AMP-INI   2-NOV-1993
       CREDITO-ORDINARIO SECTION.
       INI-CREDITO-ORDINARIO.
           MOVE CLF-CAI-ICLF IN CLF-FLD TO LDC-CAI-ICLF IN LDC.
           MOVE CLF-IIC-ICLF IN CLF-FLD TO LDC-IIC-ICLF IN LDC.
           MOVE FIO-GET-NLS TO FIO-CMND.
           PERFORM LDC-FIO-LDC.
      *AMP-INI 23-MAR-1994
      *    IF NOT ( FIO-STAT-OKS AND
      *        LDC-CAI-ICLF IN LDC = CLF-CAI-ICLF IN CLF-FLD AND
      *        LDC-IIC-ICLF IN LDC = CLF-IIC-ICLF IN CLF-FLD AND
      *        LDC-IND-VIGE IN LDC = 'S' )
      *        GO TO FIN-CREDITO-ORDINARIO.
           IF NOT ( FIO-STAT-OKS AND
               LDC-CAI-ICLF IN LDC = CLF-CAI-ICLF IN CLF-FLD AND
               LDC-IIC-ICLF IN LDC = CLF-IIC-ICLF IN CLF-FLD )
               GO TO FIN-CREDITO-ORDINARIO.
      *AMP-FIN 23-MAR-1994

       LUP-CREDITO-ORDINARIO.
      *AMP-INI 23-MAR-1994
           IF LDC-IND-VIGE IN LDC NOT = 'S'
               GO TO NXT-CREDITO-ORDINARIO.
      *AMP-FIN 23-MAR-1994
           PERFORM BUSCA-ARC.
      *AMP-INI 24-NOV-1993
           IF NOT CTE-STAT-OKS OR MSG-COD-MENS > SPACES
               GO TO FIN-CREDITO-ORDINARIO.
      *AMP MAL GO TO FIN-BUSCA-ARC.
      *AMP-INI 24-NOV-1993
      *AMP-INI 23-MAR-1994
       NXT-CREDITO-ORDINARIO.
      *AMP-FIN 23-MAR-1994
           MOVE FIO-GET-NXT TO FIO-CMND.
           PERFORM LDC-FIO-LDC.
      *AMP-INI 23-MAR-1994
      *    IF NOT ( FIO-STAT-OKS AND
      *        LDC-CAI-ICLF IN LDC = CLF-CAI-ICLF IN CLF-FLD AND
      *        LDC-IIC-ICLF IN LDC = CLF-IIC-ICLF IN CLF-FLD AND
      *        LDC-IND-VIGE IN LDC = 'S' )
      *        GO TO FIN-CREDITO-ORDINARIO.
           IF NOT ( FIO-STAT-OKS AND
               LDC-CAI-ICLF IN LDC = CLF-CAI-ICLF IN CLF-FLD AND
               LDC-IIC-ICLF IN LDC = CLF-IIC-ICLF IN CLF-FLD )
               GO TO FIN-CREDITO-ORDINARIO.
      *AMP-FIN 23-MAR-1994
           GO TO LUP-CREDITO-ORDINARIO.
       FIN-CREDITO-ORDINARIO.
           EXIT.

       BUSCA-ARC SECTION.
       INI-BUSCA-ARC.
           MOVE LDC-CIC-ICLF IN LDC     TO ARC-CIC-ICLF IN ARC.
           MOVE LDC-NUM-ILDC IN LDC     TO ARC-NUM-ILDC IN ARC.
           MOVE ZEROES                  TO ARC-NUM-IARC IN ARC.
           MOVE FIO-GET-NLS TO FIO-CMND.
           PERFORM LDC-FIO-ARC.
           IF NOT ( FIO-STAT-OKS AND
                    LDC-CIC-ICLF IN LDC = ARC-CIC-ICLF IN ARC AND
                    LDC-NUM-ILDC IN LDC = ARC-NUM-ILDC IN ARC )
               GO TO FIN-BUSCA-ARC.
       LUP-BUSCA-ARC.
           IF ARC-IIC-IOPC IN ARC > ZEROES AND
              ARC-COD-TOOC IN ARC = 'CTE' AND
              ARC-COD-AOOC IN ARC = 'ORD'
                PERFORM ACTUALIZA-FILE-CENTRAL
      *AMP-INI 24-NOV-1993
      *         IF NOT CTE-STAT-OKS
                IF NOT CTE-STAT-OKS OR MSG-COD-MENS > SPACES
      *AMP-INI 24-NOV-1993
                    GO TO FIN-BUSCA-ARC.
           MOVE FIO-GET-NXT TO FIO-CMND.
           PERFORM LDC-FIO-ARC.
           IF NOT ( FIO-STAT-OKS AND
                    LDC-CIC-ICLF IN LDC = ARC-CIC-ICLF IN ARC AND
                    LDC-NUM-ILDC IN LDC = ARC-NUM-ILDC IN ARC )
               GO TO FIN-BUSCA-ARC.
           GO TO LUP-BUSCA-ARC.
       FIN-BUSCA-ARC.
           EXIT.

       ACTUALIZA-FILE-CENTRAL SECTION.
       INI-ACTUALIZA-FILE-CENTRAL.
      *AMP-INI 24-NOV-1993
           MOVE SPACES TO MSG-COD-MENS.
      *AMP-INI 24-NOV-1993
           MOVE 'UPDT' TO CTE-TOPE IN CTE-VARI.
           MOVE SPACES TO CTE-TAUX IN CTE-VARI.
           MOVE ARC-CAI-IOPC IN ARC TO OPE-CAI-IOPE IN OPE.
           MOVE ARC-IIC-IOPC IN ARC TO OPE-IIC-IOPE IN OPE.
           MOVE OPE-CIC-IOPE IN OPE TO CTE-NCTA.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM SGC-FIO-OPE.
           IF NOT FIO-STAT-OKS
               MOVE 'OSCTOPEINEX' TO MSG-COD-MENS
               GO TO FIN-ACTUALIZA-FILE-CENTRAL.
           MOVE 'TAB' TO FIO-SIST.
           MOVE 'TAB' TO TAB-COD-SIST.
           MOVE 'VLR' TO TAB-COD-TTAB IN TAB.
           MOVE OPE-COD-VCOP IN OPE TO TAB-COD-CTAB IN TAB.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM GNS-FIO-TAB.
           IF NOT FIO-STAT-OKS
               MOVE 'OSCVLRINEX' TO MSG-COD-MENS
               GO TO FIN-ACTUALIZA-FILE-CENTRAL.
           MOVE TAB-EXT-CTAB IN TAB TO CTE-MONE.
      *AMP-INI  24-NOV-1993
      * OBTENGO CODIGO MONEDA NACIONAL
           MOVE 'TAB'               TO FIO-SIST.
           MOVE 'VLR'               TO TAB-CIC-TTAB IN TAB.
           MOVE '0999'              TO TAB-CIC-CTAB IN TAB.
           MOVE 'TAB-CIC-TABL'      TO FIO-AKEY.
           MOVE FIO-GET-KEY         TO FIO-CMND.
           PERFORM GNS-FIO-TAB.
           IF NOT FIO-STAT-OKS
               MOVE 'TAB'           TO MSG-COD-SIST
               MOVE 'CIC0999NEX'    TO MSG-COD-MENS
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC    TO FRM-MENS
               MOVE FRM-SUAR-MAL    TO FRM-SUAR
               GO TO FIN-ACTUALIZA-FILE-CENTRAL.
           MOVE TAB-COD-CTAB IN TAB TO WSS-COD-MNAC IN WSS-VARI.

      * CASO I: MONEDA CLF = MONEDA OPE
           IF OPE-COD-VCOP IN OPE = CLF-COD-VCCF IN CLF-FLD
               MOVE LDC-VAL-CMAX IN LDC TO WSS-SAL1
               GO TO UPD-ACTUALIZA-FILE-CENTRAL.
      * CASO II: MONEDA CLF = MONEDA NACIONAL
           IF CLF-COD-VCCF IN CLF-FLD = WSS-COD-MNAC IN WSS-VARI
               MOVE OPE-COD-VCOP IN OPE     TO WSS-COD1 IN WSS-VARI
               MOVE CLF-COD-VCCF IN CLF-FLD TO WSS-COD2 IN WSS-VARI
               GO TO CON-ACTUALIZA-FILE-CENTRAL.
      * CASO III: MONEDA OPE = MONEDA NACIONAL
           IF OPE-COD-VCOP IN OPE = WSS-COD-MNAC IN WSS-VARI
               MOVE CLF-COD-VCCF IN CLF-FLD TO WSS-COD1 IN WSS-VARI
               MOVE OPE-COD-VCOP IN OPE     TO WSS-COD2 IN WSS-VARI
               GO TO CON-ACTUALIZA-FILE-CENTRAL.
      * CASO IV: MONEDA OPE, MONEDA CLF NOT = MONEDA NACIONAL
           MOVE CLF-COD-VCCF IN CLF-FLD  TO WSS-COD1 IN WSS-VARI.
           MOVE WSS-COD-MNAC IN WSS-VARI TO WSS-COD2 IN WSS-VARI.
           PERFORM GET-FHOY.
           MOVE HOY-SHOY                 TO CAM-NUM-SCAM IN CAM(1).
           MOVE HOY-AHOY                 TO CAM-NUM-ACAM IN CAM(1).
           MOVE HOY-MHOY                 TO CAM-NUM-MCAM IN CAM(1).
           MOVE HOY-DHOY                 TO CAM-NUM-DCAM IN CAM(1).
           MOVE CAM-FEC-FCAM IN CAM(1)   TO CAM-FEC-FCAM IN CAM(2).
           MOVE WSS-COD1 IN WSS-VARI     TO CAM-COD-VCAM IN CAM(1).
           MOVE WSS-COD2 IN WSS-VARI     TO CAM-COD-VCAM IN CAM(2).
           MOVE FIO-GET-KEY              TO FIO-CMND.
           PERFORM TAB-FIO-CAM.
           IF NOT ( FIO-STAT-OKS AND CAM-IND-VIGE IN CAM = 'S' )
               MOVE 'TAB'        TO MSG-COD-SIST
               MOVE 'CAM    NEX' TO MSG-COD-MENS
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS
               MOVE FRM-SUAR-MAL TO FRM-SUAR
               GO TO FIN-ACTUALIZA-FILE-CENTRAL.
           COMPUTE WSS-SAL1   ROUNDED = LDC-VAL-CMAX IN LDC *
                              CAM-SGV-VCAM IN CAM.
           MOVE OPE-COD-VCOP IN OPE      TO WSS-COD1 IN WSS-VARI.
           MOVE WSS-COD-MNAC IN WSS-VARI TO WSS-COD2 IN WSS-VARI.
       CON-ACTUALIZA-FILE-CENTRAL.
           PERFORM GET-FHOY.
           MOVE HOY-SHOY               TO CAM-NUM-SCAM IN CAM(1).
           MOVE HOY-AHOY               TO CAM-NUM-ACAM IN CAM(1).
           MOVE HOY-MHOY               TO CAM-NUM-MCAM IN CAM(1).
           MOVE HOY-DHOY               TO CAM-NUM-DCAM IN CAM(1).
           MOVE CAM-FEC-FCAM IN CAM(1) TO CAM-FEC-FCAM IN CAM(2).
           MOVE WSS-COD1 IN WSS-VARI   TO CAM-COD-VCAM IN CAM(1).
           MOVE WSS-COD2 IN WSS-VARI   TO CAM-COD-VCAM IN CAM(2).
           MOVE FIO-GET-KEY            TO FIO-CMND.
           PERFORM TAB-FIO-CAM.
           IF NOT ( FIO-STAT-OKS AND CAM-IND-VIGE IN CAM = 'S' )
               MOVE 'TAB'        TO MSG-COD-SIST
               MOVE 'CAM    NEX' TO MSG-COD-MENS
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS
               MOVE FRM-SUAR-MAL TO FRM-SUAR
               GO TO FIN-ACTUALIZA-FILE-CENTRAL.

      * CASO II: MONEDA CLF = MONEDA NACIONAL
           IF CLF-COD-VCCF IN CLF-FLD = WSS-COD-MNAC IN WSS-VARI
               COMPUTE WSS-SAL1 ROUNDED = LDC-VAL-CMAX IN LDC /
                                          CAM-SGV-VCAM IN CAM
               GO TO UPD-ACTUALIZA-FILE-CENTRAL.
      * CASO III: MONEDA OPE = MONEDA NACIONAL
           IF OPE-COD-VCOP IN OPE = WSS-COD-MNAC IN WSS-VARI
               COMPUTE WSS-SAL1 ROUNDED = LDC-VAL-CMAX IN LDC *
                                          CAM-SGV-VCAM IN CAM
               GO TO UPD-ACTUALIZA-FILE-CENTRAL.
      * CASO IV: MONEDA OPE, MONEDA CLF NOT = MONEDA NACIONAL
           COMPUTE WSS-SAL1 ROUNDED = WSS-SAL1 /
                                       CAM-SGV-VCAM IN CAM.

       UPD-ACTUALIZA-FILE-CENTRAL.
           MOVE WSS-SAL1 IN WSS-VARI TO CTE-SAL1.
      *    MOVE LDC-VAL-CMAX IN LDC TO CTE-SAL1.
      *AMP-FIN   24-NOV-1993
           MOVE CTE-CMMA            TO SYS-CMMA.
           MOVE CTE-TCMA            TO SYS-TCMA.
           MOVE SYS-LINK            TO SYS-CMND.
      *AMP       28-MAR-1994 EL UPDT DEBE SER CON ISC Y NO DESDE TPA
      *    MOVE 'BCCRTP01'          TO SYS-PROG.
           MOVE 'BCCFTP11'          TO SYS-PROG.
           PERFORM GNS-PRO-SYS.
           MOVE SYS-CMMA            TO CTE-CMMA.
       FIN-ACTUALIZA-FILE-CENTRAL.
           EXIT.
      *AMP-FIN   2-NOV-1993
      *>>>>
*% END
       MSG-CLF SECTION.
       INI-MSG-CLF.
           MOVE MSG-GLS-DESC   TO WSS-CPT-DESC.
           MOVE WSS-CPT-NOMB-R TO CPT-STRN.
           PERFORM CPT-BLKS.
           MOVE CPT-STRN       TO FRM-MENS.
       FIN-MSG-CLF.
           EXIT.

       BCK-OUT SECTION.
       INI-BCK-OUT.
       FIN-BCK-OUT.
           EXIT.

       DEL-LDC SECTION.
       INI-DEL-LDC.
           MOVE SPACES TO LDC-KEY-ILDC IN LDC.
           MOVE CLF-KEY-ICLF IN CLF TO LDC-CIC-ICLF IN LDC.
           MOVE FIO-GET-NLS TO FIO-CMND.
       LUP-DEL-LDC.
           PERFORM LDC-FIO-LDC.
           IF FIO-STAT-OKS
               MOVE FIO-END-BRW TO FIO-CMND
               PERFORM LDC-FIO-LDC.

           IF NOT ( FIO-STAT-OKS AND
              CLF-KEY-ICLF IN CLF = LDC-CIC-ICLF IN LDC )
               GO TO FIN-DEL-LDC.

           MOVE FIO-GET-KEY-UPD TO FIO-CMND.
           PERFORM LDC-FIO-LDC.
           IF NOT FIO-STAT-OKS
               GO TO FIN-DEL-LDC.

           MOVE FIO-DEL TO FIO-CMND.
           PERFORM LDC-FIO-LDC.
           IF NOT FIO-STAT-OKS
               MOVE 'DEU'        TO MSG-COD-SIST
               MOVE 'LDC    DEL' TO MSG-COD-MENS
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS
               GO TO FIN-DEL-LDC.

*% IF PGM_DB2
           MOVE FIO-GET-NXT TO FIO-CMND.
*% ELSE
           MOVE CLF-KEY-ICLF IN CLF TO LDC-CIC-ICLF IN LDC.
           MOVE FIO-GET-NLS TO FIO-CMND.
*% END
           GO TO LUP-DEL-LDC.
       FIN-DEL-LDC.
           EXIT.

       DEL-ARC SECTION.
       INI-DEL-ARC.
           MOVE SPACES TO ARC-KEY-IARC IN ARC.
           MOVE CLF-KEY-ICLF IN CLF TO ARC-CIC-ICLF IN ARC.
           MOVE FIO-GET-NLS TO FIO-CMND.
       LUP-DEL-ARC.
*% IF PGM_DB2
           PERFORM LDC-FIO-AYC.
*% ELSE
           PERFORM LDC-FIO-ARC.
*% END
           IF FIO-STAT-OKS
               MOVE FIO-END-BRW TO FIO-CMND
*% IF PGM_DB2
               PERFORM LDC-FIO-AYC.
*% ELSE
               PERFORM LDC-FIO-ARC.
*% END

           IF NOT ( FIO-STAT-OKS AND
              ARC-CIC-ICLF IN ARC = CLF-KEY-ICLF IN CLF )
               GO TO FIN-DEL-ARC.

           MOVE FIO-GET-KEY-UPD TO FIO-CMND.
*% IF PGM_DB2
           PERFORM LDC-FIO-AYC.
*% ELSE
           PERFORM LDC-FIO-ARC.
*% END
           IF NOT FIO-STAT-OKS
               GO TO FIN-DEL-ARC.

           MOVE FIO-DEL TO FIO-CMND.
*% IF PGM_DB2
           PERFORM LDC-FIO-AYC.
*% ELSE
           PERFORM LDC-FIO-ARC.
*% END
           IF NOT FIO-STAT-OKS
               MOVE 'DEU'        TO MSG-COD-SIST
               MOVE 'ARC    DEL' TO MSG-COD-MENS
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS
               GO TO FIN-DEL-ARC.

*% IF PGM_DB2
           MOVE FIO-GET-NXT TO FIO-CMND.
*% ELSE
           MOVE CLF-KEY-ICLF IN CLF TO ARC-CIC-ICLF IN ARC.
           MOVE FIO-GET-NLS TO FIO-CMND.
*% END
           GO TO LUP-DEL-ARC.
       FIN-DEL-ARC.
           EXIT.

       DEL-ARG SECTION.
       INI-DEL-ARG.
           MOVE SPACES TO ARG-KEY-IARG IN ARG.
           MOVE CLF-KEY-ICLF IN CLF TO ARG-CIC-ICLF IN ARG.
           MOVE FIO-GET-NLS TO FIO-CMND.
       LUP-DEL-ARG.
*% IF PGM_DB2
           PERFORM LDC-FIO-AYG.
*% ELSE
           PERFORM LDC-FIO-ARG.
*% END
           IF FIO-STAT-OKS
               MOVE FIO-END-BRW TO FIO-CMND
*% IF PGM_DB2
               PERFORM LDC-FIO-AYG.
*% ELSE
               PERFORM LDC-FIO-ARG.
*% END

           IF NOT ( FIO-STAT-OKS AND
              ARG-CIC-ICLF IN ARG = CLF-KEY-ICLF IN CLF )
               GO TO FIN-DEL-ARG.

           MOVE FIO-GET-KEY-UPD TO FIO-CMND.
*% IF PGM_DB2
           PERFORM LDC-FIO-AYG.
*% ELSE
           PERFORM LDC-FIO-ARG.
*% END
           IF NOT FIO-STAT-OKS
               GO TO FIN-DEL-ARG.

           MOVE FIO-DEL TO FIO-CMND.
*% IF PGM_DB2
           PERFORM LDC-FIO-AYG.
*% ELSE
           PERFORM LDC-FIO-ARG.
*% END
           IF NOT FIO-STAT-OKS
               MOVE 'DEU'        TO MSG-COD-SIST
               MOVE 'ARG    DEL' TO MSG-COD-MENS
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS
               GO TO FIN-DEL-ARG.

*% IF PGM_DB2
           MOVE FIO-GET-NXT TO FIO-CMND.
*% ELSE
           MOVE CLF-KEY-ICLF IN CLF TO ARG-CIC-ICLF IN ARG.
           MOVE FIO-GET-NLS TO FIO-CMND.
*% END
           GO TO LUP-DEL-ARG.
       FIN-DEL-ARG.
           EXIT.

       DEL-RDC SECTION.
       INI-DEL-RDC.
           MOVE SPACES                TO RDC-CIC-ICLI IN RDC.
           MOVE CLF-KEY-ICLF IN CLF   TO RDC-KEY-ICLF IN RDC.
           MOVE 'RDC-KEY-ICLF' TO FIO-AKEY.
           MOVE FIO-GET-NLS TO FIO-CMND.
       LUP-DEL-RDC.
           PERFORM LDC-FIO-RDC.
           IF FIO-STAT-OKS
               MOVE 'RDC-KEY-ICLF' TO FIO-AKEY
               MOVE FIO-END-BRW TO FIO-CMND
               PERFORM LDC-FIO-RDC.

           IF NOT ( FIO-STAT-OKS AND
              RDC-KEY-ICLF IN RDC = CLF-KEY-ICLF IN CLF )
               GO TO FIN-DEL-RDC.

           MOVE FIO-GET-KEY-UPD TO FIO-CMND.
           PERFORM LDC-FIO-RDC.
           IF NOT FIO-STAT-OKS
              GO TO FIN-DEL-RDC.

           MOVE FIO-DEL TO FIO-CMND.
           PERFORM LDC-FIO-RDC.
           IF NOT FIO-STAT-OKS
               MOVE 'DEU'        TO MSG-COD-SIST
               MOVE 'RDC    DEL' TO MSG-COD-MENS
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS
               GO TO FIN-DEL-RDC.

           MOVE 'RDC-KEY-ICLF' TO FIO-AKEY.
*% IF PGM_DB2
           MOVE FIO-GET-NXT TO FIO-CMND.
*% ELSE
           MOVE CLF-KEY-ICLF IN CLF TO RDC-KEY-ICLF IN RDC.
           MOVE FIO-GET-NLS TO FIO-CMND.
*% END
           GO TO LUP-DEL-RDC.
       FIN-DEL-RDC.
           EXIT.

       PUT-RDC SECTION.
       INI-PUT-RDC.
           IF DBC-IND-ICLI IN CLF-FLD = 'M'
               GO TO FIN-PUT-RDC.
           MOVE SPACES TO  RDC-GLS-FLAG IN RDC.
           MOVE 100                     TO RDC-VAL-PRDC IN RDC.
           MOVE SPACES                  TO RDC-COD-RDCF IN RDC.
           MOVE ZEROES                  TO RDC-GLS-DISP IN RDC.

*% IF PGM_BNL
      *    MOVE DBC-CAI-ICLI IN CLF-FLD TO RDC-CAI-ICLI IN RDC.
           MOVE SPACES                  TO RDC-CAI-ICLI IN RDC.
*% ELSE
           MOVE DBC-CAI-ICLI IN CLF-FLD TO RDC-CAI-ICLI IN RDC.
*% END
           MOVE DBC-IIC-ICLI IN CLF-FLD TO RDC-IIC-ICLI IN RDC.
           MOVE CLF-CAI-ICLF IN CLF-FLD TO RDC-CAI-ICLF IN RDC.
           MOVE CLF-IIC-ICLF IN CLF-FLD TO RDC-IIC-ICLF IN RDC.

           MOVE FIO-PUT TO FIO-CMND.
           PERFORM LDC-FIO-RDC.
           IF NOT FIO-STAT-OKS
      *        Error inconsistencia en el ingreso : hacer LOGTB e inform
               MOVE FIO-MENS TO FRM-MENS
               PERFORM BCK-OUT.
       FIN-PUT-RDC.
           EXIT.

      *>>>>
*% END
*% IF PGM_DB2
      *<<<< PGM_DB2
           EXEC SQL INCLUDE LDCBFLDC END-EXEC.

           EXEC SQL INCLUDE LDCBFARC END-EXEC.
           EXEC SQL INCLUDE LDCBFAYC END-EXEC.

           EXEC SQL INCLUDE LDCBFARG END-EXEC.
           EXEC SQL INCLUDE LDCBFAYG END-EXEC.

           EXEC SQL INCLUDE LDCBFRDC END-EXEC.

      * ini RMV (15-SEP-1994)
           EXEC SQL INCLUDE SGCBFREC END-EXEC.
           EXEC SQL INCLUDE LDCBFLAC END-EXEC.
      * fin RMV (15-SEP-1994)
      *>>>>
*% ELSE
       COPY LDCBFLDC.
       COPY LDCBFARC.
       COPY LDCBFARG.
       COPY LDCBFRDC.
       COPY SGCBFREC.
       COPY LDCBFLAC.
*% END

       COPY TABBFCAM.
*% IF PGM_PER AND PGM_PU 
      *<<<< PGM_PER AND PGM_PU 
      *AMP-INI  3-NOV-1993
       COPY SGCBFOPE.
      *AMP-FIN  3-NOV-1993
      *>>>>
*% END

       COPY GNSBFCIC.
       COPY GNSBGCIC.

*% IF PGM_DB2
      *<<<< PGM_DB2
           EXEC SQL INCLUDE SGCBFDBC END-EXEC.
      *>>>>
*% ELSE
       COPY SGCBFDBC.
*% END
       COPY GNSBGCPT.
       COPY GNSBGSTR.
       COPY SGCBGCLI.
       COPY GNSBPFEC.

*% IF PGM_PU 
      *<<<< PGM_PU 
        COPY LDCBGLAC.
      *>>>>
*% END
      *>>>>
*% END
