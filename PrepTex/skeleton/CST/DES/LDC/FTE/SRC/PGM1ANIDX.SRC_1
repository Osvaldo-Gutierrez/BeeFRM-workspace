*% IF CMAVARI
*%!  SIEMPRE LEE HASTA EL ULTIMO REGISTRO DE LOS POSIBLES DE MOSTRAR
*%!    HASTA QUE SE PROGRAME CAMBIOS EN PREGUNTAS SOBRE WSS-POS-INI Y FIN
*%!    LUEGO DE PF5 Y PF6
*% ACUMULA = TRUE
*%!  INICIALIZA VARIABLES GENERICAS SEGUN PARAMETROS DEL LLAMADO
*% IF UNI_HIJ_ALF
*% PIC = 'X'
*% BLKZER = 'SPACES'
*% LOWZER = 'LOW-VALUES'
*% ELSE
*% PIC = '9'
*% BLKZER = 'ZEROES'
*% LOWZER = 'ZEROES    '
*% END
*% IF PGM_IBM
           02 CMA-VARI.
*% ELSE
           03 CMA-VARI.
*% END
              05  WSS-POS-INI            COMP-3       PIC S9(5).
              05  WSS-POS-ACT            COMP-3       PIC S9(5).
              05  WSS-POS-FIN            COMP-3       PIC S9(5).
              05  WSS-CLV-INI.
                  07 {KEYPADPAD}-INI                 PIC X({LENKEYPAD}).
                  07 {KEYUNIHIJ}-INI                 PIC {PIC}({LENKEYHIJ}).
              05  WSS-CLV-FIN.
                  07 {KEYPADPAD}-FIN                 PIC X({LENKEYPAD}).
                  07 {KEYUNIHIJ}-FIN                 PIC {PIC}({LENKEYHIJ}).
*% IF NOT PGM_DTC
              05   WSS-CLV-ACT.
                 07 {KEYPADPAD}-ACT                  PIC X({LENKEYPAD}).
                 07 {KEYUNIHIJ}-ACT                  PIC {PIC}({LENKEYHIJ}).
*% END
      *>>>>
*% END
*% IF WSSVARI
*% IF NO_UNI_FRM
       01  VEC-KEY-UNI-HIJ.    
           03  VEC-{KEYUNIFLD}.
               05 {KEYUNIFLD}   OCCURS {IMAX}      PIC {PIC}({LENKEYHIJ}).

*% END
       01  WSS-VARI.
           03  WSS-IMAX               VALUE {IMAX}     PIC 9(02).
           03  {KEYHIJHIJ}.
               05 {KEYPADPAD}                        PIC X({LENKEYPAD}).
               05 {KEYUNIHIJ}                        PIC {PIC}({LENKEYHIJ}).
      * PARA USAR GARSRC:ERRFNDKEY.SRC
           03  WSS-IBUS                               PIC 9(01).
           03  WSS-IBUS-{HIJ}                           PIC 9(01).
*% IF ACUMULA
           03  WSS-IND-ACUMULA        VALUE 0         PIC 9(01).
               88 DESPLIEGA           VALUE 0.
               88 SOLO-ACUMULA        VALUE 1.
           03  WSS-SOLO-ACUMULA       VALUE 0         PIC 9(01).
*% END
      *>>>>
*% END
*% IF OPEHIJ
           MOVE FIO-ACCS-UPD TO FIO-ACCS.
           MOVE FIO-ACC      TO FIO-CMND.
           MOVE '{SISREG}'        TO FIO-SIST.
           PERFORM {SISREG}-FIO-{HIJ}.
           MOVE FIO-INP TO FIO-CMND.
           PERFORM {SISREG}-FIO-{HIJ}.
*% END
*% IF INIFNDKEY
      * WSS-POS-INI CONTIENE LA POSICION INICIAL DEL ARREGLO QUE SE LLENA
      *             ESTO ES, 1, 1 + WSS-IMAX, 2*(1 + WSS-IMAX),
      *             3*(1 + WSS-IMAX), ETC

      * WSS-POS-ACT CONTIENE LA POSICION ACTUAL, MIENTRAS AVANZA HASTA
      *             ALCANZAR WSS-POS-FIN  ESTO ES, 1,2,3,4,...
      *             CUANDO RETROCEDE Y AVANZA, CONTIENE
      *             WSS-POS-INI + WSS-IMAX, CON LA RESTRICCION QUE
      *             WSS-POS-ACT NOT > WSS-POS-FIN

      * WSS-POS-FIN CONTIENE EL TOTAL DE REGISTROS {HIJ} ENCONTRADOS

      * ASUME MENSAJE DEL SISTEMA DEL HIJO EN ERRFNDKEY.SRC
           MOVE 1 TO WSS-IBUS, WSS-IBUS-{HIJ}.
*% IF NO_UNI_FRM
           MOVE {BLKZER} TO VEC-{KEYUNIFLD}.

*% END
*% IF PGM_VAX
           MOVE ZEROES     TO WSS-IND-ACUMULA.

*% END
           IF FRM-FFLD = FRM-FFLD-PF5
*% FOR I = 1 TO {NREG}
               MOVE PGM-SNUL TO PGM-STAT-{REG{I}}
*% NEXT I
               IF WSS-POS-INI < WSS-IMAX
                   MOVE '{HIJ}    NOPRV' TO MSG-COD-MENS
                   GO TO ERR-FND-KEY
               ELSE
*% IF PGM_DTC OR PGM_VSI
                   MOVE WSS-CLV-INI TO {KEYHIJHIJ} IN {HIJ}
                   MOVE FIO-GET-NLS TO FIO-CMND
                   MOVE '{KEYHIJHIJ}' TO FIO-AKEY
                   PERFORM {SISREG}-FIO-{HIJ}
                   IF NOT FIO-STAT-OKS
                       MOVE 'PGM    ERR' TO MSG-COD-MENS
                       GO TO ERR-FND-KEY
                   ELSE
*% IF PGM_VSI OR ARC_BAS_VSI
                       MOVE '{KEYHIJHIJ}' TO FIO-AKEY
                       MOVE FIO-GET-PRV TO FIO-CMND
                       PERFORM {SISREG}-FIO-{HIJ}
*% END
                       MOVE FIO-GET-PRV TO FIO-CMND
                       MOVE '{KEYHIJHIJ}' TO FIO-AKEY
                       GO TO LEE-{HIJ}
*% ELSE
*%! VAX
*% IF UNI_HIJ_ALF
                   MOVE '{RPH}-KEY-PRV' TO FIO-AKEY
                   MOVE FIO-GET-PRV TO FIO-CMND
*% ELSE
                   MOVE WSS-CLV-INI TO WSS-CLV-ACT
                   SUBTRACT 1 FROM {KEYUNIHIJ}-ACT IN
                                   WSS-CLV-ACT
                   MOVE WSS-CLV-ACT TO {KEYHIJHIJ} IN {HIJ}
                   MOVE FIO-GET-NLS TO FIO-CMND
                   MOVE '{KEYHIJHIJ}' TO FIO-AKEY
*% END
                   GO TO LEE-{HIJ}
*% END
           ELSE
           IF FRM-FFLD = FRM-FFLD-PF6
*% FOR I = 1 TO {NREG}
               MOVE PGM-SNUL TO PGM-STAT-{REG{I}}
*% NEXT I
               IF WSS-POS-FIN NOT > WSS-POS-INI + WSS-IMAX - 1
                   MOVE '{HIJ}    NONXT' TO MSG-COD-MENS
                   GO TO ERR-FND-KEY
               ELSE
                   MOVE WSS-CLV-FIN TO {KEYHIJHIJ} IN {HIJ}
                   MOVE FIO-GET-NLS TO FIO-CMND
                   MOVE '{KEYHIJHIJ}' TO FIO-AKEY
                   PERFORM {SISREG}-FIO-{HIJ}
*% IF {HIJ}_EN_FRM
                   MOVE FIO-STAT TO PGM-STAT-{HIJ}
*% END
                   MOVE FIO-GET-NXT TO FIO-CMND
                   GO TO LEE-{HIJ}.

      * INICIALIZA POSICION DE PUNTERO Y LLAVES
           SUBTRACT WSS-IMAX FROM 1 GIVING WSS-POS-INI.
           MOVE ZEROES TO WSS-POS-ACT, WSS-POS-FIN.
           MOVE SPACES TO WSS-CLV-INI, WSS-CLV-FIN.
*% IF PGM_VAX

           MOVE SPACES TO {PAD}.
           MOVE SPACES TO {HIJ}.
           MOVE SPACES TO WSS-CLV-ACT.
*% END
           MOVE FRM-FFLD-PF6 TO FRM-FFLD.

*% INCLUDE INIVAR OF 'GEN:{SISREG}PQ{FRM}.GEN'
*% IF LEE_PAD
           GO TO LEE-PAD-{PAD}.
*% ELSE
       LEE-PAD-{PAD}.
*% END
*% END
*% IF FINFNDKEY
*% IF LEE_PAD
       LEE-PAD-{PAD}.
*% INCLUDE LEEPAD OF 'GEN:{SISREG}PQ{FRM}.GEN'
*% END

           IF NOT FIO-STAT-OKS
               MOVE '{PAD}    NEX' TO MSG-COD-MENS
*% IF {HIJ}_EN_FRM
               MOVE FIO-STAT-NEX TO PGM-STAT-{HIJ}
*% END
               GO TO ERR-FND-KEY.

*% IF PAD_EQU_HIJ AND ARC_BAS_VSI
           MOVE FIO-END-BRW TO FIO-CMND.
           PERFORM {SISREG}-FIO-{PAD}.
*% END
*%!      * BUSCA OTROS HIJOS DEL PADRE, EVENTUALMENTE
*% INCLUDE ANLPAD OF 'GEN:{SISREG}PQ{FRM}.GEN'

           MOVE {KEYPADPAD} IN {PAD} TO {KEYPADPAD}-FIN 
                                        IN CMA-VARI.
           MOVE {KEYPADPAD} IN {PAD} TO {KEYPADPAD}-INI
                                        IN CMA-VARI.
*% IF PGM_VAX
           MOVE {KEYPADPAD} IN {PAD} TO {KEYPADPAD}-ACT
                                        IN CMA-VARI.
*% END

           MOVE {KEYPADPAD} IN {PAD} TO {KEYPADPAD} IN WSS-VARI.
           MOVE {LOWZER}             TO {KEYUNIHIJ} IN WSS-VARI. 
           MOVE {KEYHIJHIJ} IN WSS-VARI TO {KEYHIJHIJ} IN {HIJ}.
           MOVE FIO-GET-NLS TO FIO-CMND.
       LEE-{HIJ}.
           PERFORM {SISREG}-FIO-{HIJ}.
*% IF {HIJ}_EN_FRM
           MOVE FIO-STAT TO PGM-STAT-{HIJ}.
*% END
           MOVE {KEYHIJHIJ} IN {HIJ} TO {KEYHIJHIJ} IN WSS-VARI.
           IF NOT FIO-STAT-OKS OR
              {KEYPADPAD} IN WSS-VARI NOT = {KEYPADPAD}-FIN
                                                    IN CMA-VARI
               IF WSS-POS-ACT = ZEROES
                   MOVE '{HIJ}    NEX' TO MSG-COD-MENS
                   GO TO ERR-FND-KEY
               ELSE
                   IF FRM-FFLD = FRM-FFLD-PF5
                       MOVE '{HIJ}    NOPRV' TO MSG-COD-MENS
                       GO TO ERR-FND-KEY
                   ELSE
                       MOVE '{HIJ}    NONXT' TO MSG-COD-MENS
                       GO TO ERR-FND-KEY.
       CARGA-{HIJ}.
      *    INICIALIZA POSICION DEL INDICE DEL GRUPO DE OCURRENCIAS
           IF FRM-FFLD = FRM-FFLD-PF6
               MOVE ZEROES TO FRM-IFLD
           ELSE
               ADD 1 , WSS-IMAX GIVING FRM-IFLD.

           MOVE SPACES TO MSG-COD-MENS.
           PERFORM PUT-TAB-{HIJ}.

*% IF NO_UNI_FRM
           MOVE {KEYUNIFLD} IN VEC-{KEYUNIFLD}(1) TO 
                                      {KEYUNIHIJ}-INI IN CMA-VARI.
*% ELSE
           MOVE {KEYUNIFLD} IN {FRM}-FLD(1) TO 
                                      {KEYUNIHIJ}-INI IN CMA-VARI.
*% END
*% IF ACUMULA AND NO_UNI_FRM
           IF FRM-FFLD = FRM-FFLD-PF6
               IF FRM-IFLD > WSS-IMAX
                   MOVE {KEYUNIFLD} IN VEC-{KEYUNIFLD}(WSS-IMAX) TO
                        {KEYUNIHIJ}-FIN IN CMA-VARI
               ELSE
                   MOVE {KEYUNIFLD} IN VEC-{KEYUNIFLD}(FRM-IFLD) TO
                        {KEYUNIHIJ}-FIN IN CMA-VARI.
*% END
*% IF ACUMULA AND NOT NO_UNI_FRM
           IF FRM-FFLD = FRM-FFLD-PF6
               IF FRM-IFLD > WSS-IMAX
                   MOVE {KEYUNIFLD} IN {FRM}-FLD(WSS-IMAX) TO
                        {KEYUNIHIJ}-FIN IN CMA-VARI
               ELSE
                   MOVE {KEYUNIFLD} IN {FRM}-FLD(FRM-IFLD) TO
                        {KEYUNIHIJ}-FIN IN CMA-VARI.
*% END

           IF FRM-FFLD = FRM-FFLD-PF5
*% IF NO_UNI_FRM
               MOVE {KEYUNIFLD} IN VEC-{KEYUNIFLD}(WSS-IMAX) TO
                    {KEYUNIHIJ}-FIN IN CMA-VARI
*% ELSE
               MOVE {KEYUNIFLD} IN {FRM}-FLD(WSS-IMAX) TO
                    {KEYUNIHIJ}-FIN IN CMA-VARI
*% END
               SUBTRACT WSS-IMAX FROM WSS-POS-INI IN CMA-VARI
           ELSE
*%! PARA CUANDO SE IMPLEMENTE LEER SOLO UN PANTALLAZO, SIN LLEGAR AL
*%!   FINAL DE LOS REGISTROS POSIBLES DE MOSTRAR
*% IF NOT ACUMULA AND NO_UNI_FRM
               MOVE {KEYUNIFLD} IN VEC-{KEYUNIFLD}(FRM-IFLD) TO
                    {KEYUNIHIJ}-FIN IN CMA-VARI
*% END
*% IF NOT ACUMULA AND NOT NO_UNI_FRM
               MOVE {KEYUNIFLD} IN {FRM}-FLD(FRM-IFLD) TO
                    {KEYUNIHIJ}-FIN IN CMA-VARI
*% END
               ADD 1 TO FRM-IFLD
               PERFORM LIM-RES-LIN UNTIL FRM-IFLD > WSS-IMAX
               ADD WSS-IMAX TO WSS-POS-INI
               IF WSS-POS-FIN = ZEROES
                   MOVE WSS-POS-ACT TO WSS-POS-FIN.

      * MUEVE ACUMULADORES A {FRM}-FLD
*% INCLUDE TOTVAR OF 'GEN:{SISREG}PQ{FRM}.GEN'

           IF MSG-COD-MENS > SPACES
               MOVE '{SISMSG}' TO FIO-SIST
               MOVE SPACES TO FIO-AKEY
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS.

*% IF {HIJ}_EN_FRM
           MOVE '00' TO PGM-STAT-{HIJ}.
*% END
           MOVE '00' TO FIO-STAT.
           GO TO FIN-FND-KEY.
*% END
*% IF PUTTAB
       PUT-TAB-{HIJ} SECTION.
       INI-PUT-TAB-{HIJ}.

*% INCLUDE SELECCION OF 'GEN:{SISREG}PQ{FRM}.GEN'
           IF FRM-FFLD = FRM-FFLD-PF5
               SUBTRACT 1 FROM FRM-IFLD
           ELSE
               IF WSS-POS-FIN = ZEROES
                   ADD 1 TO WSS-POS-ACT
*% IF ACUMULA
                   IF WSS-POS-ACT > WSS-IMAX
      *                SOLO ACUMULA, SIN DESPLEGAR
                       MOVE WSS-SOLO-ACUMULA TO WSS-IND-ACUMULA
                       GO TO DSPL-O-ACUM
                   ELSE
                       ADD 1 TO FRM-IFLD
*% ELSE
                   ADD 1 TO FRM-IFLD
*% END
               ELSE
                   ADD 1 TO FRM-IFLD.

*% IF NO_UNI_FRM
           MOVE {KEYUNIHIJ} IN {HIJ} TO {KEYUNIFLD}
                                        IN VEC-{KEYUNIFLD}(FRM-IFLD).
*% ELSE
           MOVE {KEYUNIHIJ} IN {HIJ} TO {KEYUNIFLD}
                                        IN {FRM}-FLD(FRM-IFLD).
*% END
*% INCLUDE MOVFLD OF 'GEN:{SISREG}PQ{FRM}.GEN'

*% INCLUDE BUSTAB OF 'GEN:{SISREG}PQ{FRM}.GEN'

       DSPL-O-ACUM.
*% INCLUDE SUMVAL OF 'GEN:{SISREG}PQ{FRM}.GEN'

       NXT-PUT-TAB-{HIJ}.
           IF FRM-FFLD = FRM-FFLD-PF5 
               IF FRM-IFLD > 1
*% IF PGM_VAX AND NOT UNI_HIJ_ALF
                   SUBTRACT 1 FROM {KEYUNIHIJ}-ACT IN CMA-VARI
                   MOVE WSS-CLV-ACT TO {KEYHIJHIJ} IN {HIJ}
                   MOVE FIO-GET-KEY TO FIO-CMND
                   MOVE '{KEYHIJHIJ}' TO FIO-AKEY
*% ELSE
                   MOVE FIO-GET-PRV TO FIO-CMND
                   MOVE '{KEYHIJHIJ}' TO FIO-AKEY
*% END
               ELSE
                   GO TO FIN-PUT-TAB-{HIJ}
           ELSE
           IF WSS-POS-FIN = ZEROES
*% IF NOT ACUMULA
               IF FRM-IFLD < WSS-IMAX
                   MOVE '{KEYHIJHIJ}' TO FIO-AKEY
                   MOVE FIO-GET-NXT TO FIO-CMND
               ELSE
                   GO TO FIN-PUT-TAB-{HIJ}
*% ELSE
               MOVE '{KEYHIJHIJ}' TO FIO-AKEY
               MOVE FIO-GET-NXT TO FIO-CMND
*% END
           ELSE
               IF FRM-IFLD < WSS-IMAX
                   MOVE '{KEYHIJHIJ}' TO FIO-AKEY
                   MOVE FIO-GET-NXT TO FIO-CMND
               ELSE
                   GO TO FIN-PUT-TAB-{HIJ}.

           PERFORM {SISREG}-FIO-{HIJ}.
           MOVE {KEYHIJHIJ} IN {HIJ} TO {KEYHIJHIJ} IN WSS-VARI.
           IF FIO-STAT-OKS AND
               {KEYPADPAD}-FIN IN CMA-VARI = {KEYPADPAD} IN WSS-VARI
               GO TO INI-PUT-TAB-{HIJ}.

       FIN-PUT-TAB-{HIJ}.
           EXIT.
*% END
*% IF LIMRESLIN
       LIM-RES-LIN SECTION.
       INI-LIM-RES-LIN.
*% INCLUDE LIMRESLIN OF 'GEN:{SISREG}PQ{FRM}.GEN'
           ADD 1 TO FRM-IFLD.
       FIN-LIM-RES-LIN.
           EXIT.
*% END

