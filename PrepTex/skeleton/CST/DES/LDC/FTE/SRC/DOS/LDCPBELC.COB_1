       IDENTIFICATION DIVISION.
      *========================
       PROGRAM-ID.       LDCPBELC.
       AUTHOR.           CONSIST.
       DATE-WRITTEN.     5-MAR-1996. 

      * PROGRAMA BATCH QUE PERMITE ELIMINAR LAS CALIFICACIONES 
      * EN ESTADO INGRESADA, VERIFICADA Y "NO REVISADAS" Y SE 
      * GENERA UN ARCHIVO SAM (LDCELC) PARA POSTERIORMENTE SER
      * LISTADO.

       ENVIRONMENT DIVISION.
      *=====================
       CONFIGURATION SECTION.
      *=====================
       SPECIAL-NAMES.
           DECIMAL-POINT IS COMMA.

       INPUT-OUTPUT SECTION.
      *====================
       FILE-CONTROL.
      *-------------

       DATA DIVISION.
      *=============
       FILE SECTION.
      *------------

       WORKING-STORAGE SECTION.
      *-----------------------
       COPY LDCBRCLF.
       COPY LDCBRLDC.
       COPY LDCBRARC.
       COPY LDCBRARG.
       COPY LDCBRRDC.
       COPY LDCBRELC.
       COPY GNSWGFEC.
       COPY GNSWGHOY.

       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-TAB-REQA==.
       COPY GNSBRTAB.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-MSC-REQA==.
       COPY GNSBRMSC.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-MSG-REQA==.
       COPY GNSBRMSG.
       COPY GNSWVIDD.
       COPY GNSWGRQA.
       COPY GNSWGUIB.
       COPY GNSWGELS.
       COPY GNSWCFIO.
       COPY GNSWVFIO.
       COPY GNSWGSYS.
       COPY GNSWGFPB.
       COPY TABWGTVC.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-CLF-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-RDC-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-LDC-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-ARC-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-ARG-REQA==.

       01  WSS-VARI.
           03  WSS-I                 VALUE 0          PIC 9(02).
           03  WSS-J                 VALUE 0          PIC 9(02).
           03  WSS-K                 VALUE 0          PIC 9(02).
           03  WSS-NUM-RBAD          VALUE 0          PIC 9(02).
           03  WSS-NUM-LCLF          VALUE 0          PIC 9(08). 
           03  WSS-REG-BCLF          VALUE 0          PIC 9(08). 
           03  WSS-REG-BLDC          VALUE 0          PIC 9(08). 
           03  WSS-REG-BARC          VALUE 0          PIC 9(08). 
           03  WSS-REG-BARG          VALUE 0          PIC 9(08). 
           03  WSS-REG-BRDC          VALUE 0          PIC 9(08). 
           03 WSS-FBEG.
              05 WSS-SBEG           PIC 9(02).
              05 WSS-ABEG           PIC 9(02).
              05 WSS-MBEG           PIC 9(02).
              05 WSS-DBEG           PIC 9(02).
           03 WSS-FPRO.
              05 WSS-DPRO           PIC 9(02).
              05 WSS-MPRO           PIC 9(02).
              05 WSS-SPRO           PIC 9(02).
              05 WSS-APRO           PIC 9(02).
           03 VEC-ARC-ARG OCCURS 15.
              05 VEC-NUM-NARC       PIC 9(02). 
              05 VEC-ARC-COOC       PIC X(06).
              05 VEC-COD-VCOC       PIC X(06).
              05 VEC-CIC-IOPC       PIC X(12).
              05 VEC-NUM-NARG       PIC 9(02). 
              05 VEC-COD-COGA       PIC X(06).
              05 VEC-CIC-IGAR       PIC X(12).
              05 VEC-NUM-PORG       PIC 9(03). 
      *

       PROCEDURE DIVISION.
      *===================
       MAIN SECTION.
      *------------
       INI-MAIN.
      *
       COPY GNSBGEDB.
      *EFECTUA APERTURA DE ARCHIVOS
           PERFORM INICIO-ELC.

      *LEE  LA PRIMERA CLF
           MOVE FIO-GET-FST TO FIO-CMND.
           PERFORM LDC-FIO-CLF.
           IF NOT FIO-STAT-OKS 
               DISPLAY 'ERROR: NO EXISTEN DATOS EN LDCCLF '
               DISPLAY 'PROCESO CANCELADO...'.

      *PROCESO PRINCIPAL
           PERFORM PROCESO-ELC UNTIL NOT FIO-STAT-OKS.

      *CIERRA ARCHIVOS
           PERFORM FINAL-ELC.

      *ESTADISTICA Y FIN DEL PGM.
           PERFORM ESTADISTICAS.

       FIN-MAIN.
           EXIT.

       INICIO-ELC SECTION.
      *-------------------
       INI-INICIO-ELC.
           MOVE 'LDCPBELC' TO FIO-PROG.
           PERFORM GNS-BUS-IDD.

      *APERTURA DE ARCHIVOS

      *LDCCLF
           MOVE FIO-UPD TO FIO-CMND.
           PERFORM LDC-FIO-CLF.
           IF NOT FIO-STAT-OKS
               DISPLAY 'ERROR AL ABRIR I/O ARCHIVO LDCCLF '
               DISPLAY 'FIO-UPD  '    FIO-STAT
               MOVE 1 TO WSS-NUM-RBAD IN WSS-VARI
               PERFORM ESTADISTICAS.

      *LDCLDC
           MOVE FIO-UPD TO FIO-CMND.
           PERFORM LDC-FIO-LDC.
           IF NOT FIO-STAT-OKS
               DISPLAY 'ERROR AL ABRIR ARCHIVO LDCLDC '
               DISPLAY 'DE INPUT   '    FIO-STAT
               MOVE 1 TO WSS-NUM-RBAD IN WSS-VARI
               PERFORM ESTADISTICAS.

      *LDCARC
           MOVE FIO-UPD TO FIO-CMND.
           PERFORM LDC-FIO-ARC.
           IF NOT FIO-STAT-OKS
               DISPLAY 'ERROR AL ABRIR ARCHIVO LDCARC '
               DISPLAY 'DE INPUT   '    FIO-STAT
               MOVE 1 TO WSS-NUM-RBAD IN WSS-VARI
               PERFORM ESTADISTICAS.

      *LDCARG
           MOVE FIO-UPD TO FIO-CMND.
           PERFORM LDC-FIO-ARG.
           IF NOT FIO-STAT-OKS
               DISPLAY 'ERROR AL ABRIR ARCHIVO LDCARG '
               DISPLAY 'DE INPUT   '    FIO-STAT
               MOVE 1 TO WSS-NUM-RBAD IN WSS-VARI
               PERFORM ESTADISTICAS.

      *LDCRDC
           MOVE FIO-UPD TO FIO-CMND.
           PERFORM LDC-FIO-RDC.
           IF NOT FIO-STAT-OKS
               DISPLAY 'ERROR AL ABRIR ARCHIVO LDCRDC '
               DISPLAY 'DE INPUT   '    FIO-STAT
               MOVE 1 TO WSS-NUM-RBAD IN WSS-VARI
               PERFORM ESTADISTICAS.

      *LDCELC
           MOVE FIO-OUT TO FIO-CMND.
           PERFORM LDC-FIO-ELC.
           IF NOT FIO-STAT-OKS
               DISPLAY 'ERROR AL ABRIR ARCHIVO LDCELC '
               DISPLAY 'DE OUPUT   '    FIO-STAT
               MOVE 1 TO WSS-NUM-RBAD IN WSS-VARI
               PERFORM ESTADISTICAS.


       COPY GNSBGFPB.
           MOVE FPB-DPRO TO WSS-DPRO.
           MOVE FPB-MPRO TO WSS-MPRO.
           MOVE FPB-SPRO TO WSS-SPRO.
           MOVE FPB-APRO TO WSS-APRO.
      *    DISPLAY 'INGRESE FECHA DE PROCESO:'.
      *    ACCEPT WSS-FINI.
           DISPLAY "FECHA DE PROCESO : " WSS-FPRO.

      * Resta 60 dias a Fecha de Proceso
           MOVE WSS-DPRO IN WSS-VARI TO FEC-ITM1.
           MOVE WSS-MPRO IN WSS-VARI TO FEC-ITM2.
           MOVE WSS-SPRO IN WSS-VARI TO FEC-ITM3.
           MOVE WSS-APRO IN WSS-VARI TO FEC-ITM4.
           MOVE FEC-FORM-FEC         TO FEC-FORM.
           MOVE FEC-RST-DIA          TO FEC-CMND.
           MOVE 60                   TO FEC-NDIA.
           PERFORM CAL-FEC.
           MOVE FEC-ITM1 TO WSS-DBEG IN WSS-VARI.
           MOVE FEC-ITM2 TO WSS-MBEG IN WSS-VARI.
           MOVE FEC-ITM3 TO WSS-SBEG IN WSS-VARI.
           MOVE FEC-ITM4 TO WSS-ABEG IN WSS-VARI.

       FIN-INICIO-ELC.
           EXIT.

       PROCESO-ELC SECTION.
      *--------------------
       INI-PROCESO-ELC.

           MOVE FIO-GET-KEY-UPD TO FIO-CMND
           PERFORM LDC-FIO-CLF
           IF NOT FIO-STAT-OKS 
              DISPLAY 'ERROR AL GET-KEY-UPD ARCHIVO LDCCLF '
              DISPLAY 'GET-KEY-UPD '    FIO-STAT
              MOVE 1 TO WSS-NUM-RBAD IN WSS-VARI
              PERFORM FINAL-ELC
              PERFORM ESTADISTICAS.

           ADD 1 TO WSS-NUM-LCLF IN WSS-VARI. 


           IF ( WSS-FBEG NOT < CLF-FEC-FAPE IN CLF AND
                CLF-MSC-STAT IN CLF = 'I' AND
                CLF-CIC-CREN IN CLF = SPACES ) OR
              ( WSS-FBEG NOT < CLF-FEC-FAPE IN CLF AND
                CLF-MSC-STAT IN CLF = 'V' AND
                CLF-CIC-CREN IN CLF = SPACES ) OR
              ( WSS-FBEG NOT < CLF-FEC-FPRV IN CLF AND
                CLF-MSC-STAT IN CLF = 'A' ) 
              PERFORM PROCESA-RDC
              PERFORM PROCESA-LDC
              MOVE FIO-DEL TO FIO-CMND
              PERFORM LDC-FIO-CLF
              IF FIO-STAT-OKS
                  ADD 1  TO WSS-REG-BCLF
              ELSE
                  DISPLAY '%ERROR AL BORRAR CLF : '
                                         CLF-KEY-ICLF IN CLF.
      * SMC pendiente
      *     ELSE
      *        MOVE FIO-ULK-REC TO FIO-CMND
      *        PERFORM LDC-FIO-CLF.
      * SMC pendiente

           MOVE FIO-GET-NXT TO FIO-CMND.
           PERFORM LDC-FIO-CLF.

       FIN-PROCESO-ELC.
           EXIT.

       PROCESA-LDC SECTION.
      *--------------------
       INI-PROCESA-LDC.

           MOVE CLF-KEY-ICLF IN CLF TO LDC-CIC-ICLF IN LDC.
           MOVE ZEROS               TO LDC-NUM-ILDC IN LDC.
           MOVE FIO-GET-NLS TO FIO-CMND.

       LUP-PROCESA-LDC.
           PERFORM LDC-FIO-LDC.
           IF NOT ( FIO-STAT-OKS AND
                    LDC-CIC-ICLF IN LDC = CLF-CIC-ICLF IN CLF )
               GO TO FIN-PROCESA-LDC.

           PERFORM LIMPIA-VEC.
           PERFORM PROCESA-ARC.
           PERFORM PROCESA-ARG.
           PERFORM GRABA-ELC-LDC.
           MOVE 1  TO WSS-J. 
           PERFORM GRABA-ELC-ARCARG UNTIL WSS-J > WSS-I.

      * Lee con control exclusivo para borrar LDC.
           MOVE FIO-GET-KEY-UPD TO FIO-CMND.
           PERFORM LDC-FIO-LDC.
           IF NOT FIO-STAT-OKS
              DISPLAY '%ERROR AL LEER CON UPD LDC : '
                                        LDC-KEY-ILDC IN LDC.

           MOVE FIO-DEL TO FIO-CMND.
           PERFORM LDC-FIO-LDC.
           IF FIO-STAT-OKS
               ADD 1  TO WSS-REG-BLDC
           ELSE
               DISPLAY '%ERROR AL BORRAR LDC : '
                                         LDC-KEY-ILDC IN LDC.

           MOVE FIO-GET-NXT TO FIO-CMND.
           GO TO LUP-PROCESA-LDC.

       FIN-PROCESA-LDC.
           EXIT.

       PROCESA-RDC SECTION.
       INI-PROCESA-RDC.
      *--------------------
           MOVE CLF-KEY-ICLF IN CLF TO RDC-KEY-ICLF IN RDC.
           MOVE 'RDC-KEY-ICLF' TO FIO-AKEY.
           MOVE FIO-GET-NLS TO FIO-CMND.
           PERFORM LDC-FIO-RDC.

       LUP-PROCESA-RDC.
           IF NOT ( FIO-STAT-OKS AND
              RDC-KEY-ICLF IN RDC = CLF-KEY-ICLF IN CLF )
              GO TO FIN-PROCESA-RDC.                  

      * Lee con control exclusivo para borrar RDC.
           MOVE FIO-GET-KEY-UPD TO FIO-CMND.
           PERFORM LDC-FIO-RDC.
           IF NOT FIO-STAT-OKS
              DISPLAY '%ERROR AL LEER CON UPD RDC : '
                                        RDC-KEY-ICLF IN RDC.

      * Para el caso de las no revisada ser manejara el X en 
      * en CLF-MSC-STAT para efectos del listado.

           IF ( WSS-FBEG NOT < CLF-FEC-FPRV IN CLF AND
                CLF-MSC-STAT IN CLF = 'A' ) 
                MOVE 'X'             TO CLF-MSC-STAT IN CLF.

           PERFORM GRABA-ELC-CLF.

           MOVE FIO-DEL TO FIO-CMND.
           PERFORM LDC-FIO-RDC.
           IF FIO-STAT-OKS
               ADD 1  TO WSS-REG-BRDC
           ELSE
               DISPLAY '%ERROR AL BORRAR RDC : '
                                         RDC-KEY-ICLF IN RDC.

           MOVE 'RDC-KEY-ICLF' TO FIO-AKEY.
           MOVE FIO-GET-NXT TO FIO-CMND.
           PERFORM LDC-FIO-RDC.
           GO TO LUP-PROCESA-RDC.
				
       FIN-PROCESA-RDC.
           EXIT.

       PROCESA-ARC SECTION.
       INI-PROCESA-ARC.
      *--------------------
           MOVE ZEROS               TO WSS-I
                                       WSS-J.
           MOVE LDC-KEY-ILDC IN LDC TO ARC-KEY-ILDC IN ARC.
           MOVE ZEROES              TO ARC-NUM-IARC IN ARC.
           MOVE FIO-GET-NLS TO FIO-CMND.
           PERFORM LDC-FIO-ARC.

       LUP-PROCESA-ARC.
           IF NOT ( FIO-STAT-OKS AND
                    ARC-KEY-ILDC IN ARC = LDC-KEY-ILDC IN LDC )
              MOVE WSS-I   TO WSS-J
              GO TO FIN-PROCESA-ARC.  

           ADD 1 TO WSS-I.
           MOVE ARC-NUM-IARC IN ARC TO VEC-NUM-NARC (WSS-I)
           MOVE ARC-COD-COOC IN ARC TO VEC-ARC-COOC (WSS-I)
           MOVE ARC-COD-VCOC IN ARC TO VEC-COD-VCOC (WSS-I)
           MOVE ARC-CIC-IOPC IN ARC TO VEC-CIC-IOPC (WSS-I).

      * Lee con control exclusivo para borrar ARC.
           MOVE FIO-GET-KEY-UPD TO FIO-CMND.
           PERFORM LDC-FIO-ARC.
           IF NOT FIO-STAT-OKS
              DISPLAY '%ERROR AL LEER CON UPD ARC : '
                                        ARC-KEY-IARC IN ARC.

           MOVE FIO-DEL TO FIO-CMND.
           PERFORM LDC-FIO-ARC.
           IF FIO-STAT-OKS
               ADD 1  TO WSS-REG-BARC
           ELSE
               DISPLAY '%ERROR AL BORRAR ARC : '
                                        ARC-KEY-IARC IN ARC.

           MOVE FIO-GET-NXT TO FIO-CMND.
           PERFORM LDC-FIO-ARC.
           GO TO LUP-PROCESA-ARC.

       FIN-PROCESA-ARC.
           EXIT.

       PROCESA-ARG SECTION.
       INI-PROCESA-ARG.
      *--------------------
           MOVE ZEROS               TO WSS-I.
           MOVE LDC-KEY-ILDC IN LDC TO ARG-KEY-ILDC IN ARG.
           MOVE ZEROES              TO ARG-NUM-IARG IN ARG.
           MOVE FIO-GET-NLS TO FIO-CMND.
           PERFORM LDC-FIO-ARG.

       LUP-PROCESA-ARG.
           IF NOT ( FIO-STAT-OKS AND
                    ARG-KEY-ILDC IN ARG = LDC-KEY-ILDC IN LDC )
              IF WSS-I NOT > WSS-J
                 MOVE WSS-J TO WSS-I
                 GO TO FIN-PROCESA-ARG  
              ELSE
                 GO TO FIN-PROCESA-ARG.  

           ADD 1 TO WSS-I.
           MOVE ARG-NUM-IARG IN ARG TO VEC-NUM-NARG (WSS-I)
           MOVE ARG-COD-COGA IN ARG TO VEC-COD-COGA (WSS-I)
           MOVE ARG-CIC-IGAR IN ARG TO VEC-CIC-IGAR (WSS-I)
           MOVE ARG-NUM-PORG IN ARG TO VEC-NUM-PORG (WSS-I).

           IF LDC-IND-MGAR IN LDC = 'U' AND
              ARG-IIC-IGAR IN ARG > ZEROES 
               MOVE 'E' TO LDC-IND-MGAR IN LDC.

      * Lee con control exclusivo para borrar ARG.
           MOVE FIO-GET-KEY-UPD TO FIO-CMND.
           PERFORM LDC-FIO-ARG.
           IF NOT FIO-STAT-OKS
              DISPLAY '%ERROR AL LEER CON UPD ARG : '
                                        ARG-KEY-IARG IN ARG.

           MOVE FIO-DEL TO FIO-CMND.
           PERFORM LDC-FIO-ARG.
           IF FIO-STAT-OKS
               ADD 1  TO WSS-REG-BARG
           ELSE
               DISPLAY '%ERROR AL BORRAR ARG : '
                                         ARG-KEY-IARG IN ARG.

           MOVE FIO-GET-NXT TO FIO-CMND.
           PERFORM LDC-FIO-ARG.
           GO TO LUP-PROCESA-ARG.
       FIN-PROCESA-ARG.
           EXIT.

       GRABA-ELC-CLF SECTION.
       INI-GRABA-ELC-CLF.
      *----------------------
           MOVE CLF-COD-OFIC IN CLF  TO ELC-COD-OFIC IN ELC.
           MOVE CLF-COD-EJEC IN CLF  TO ELC-COD-EJEC IN ELC.
           MOVE CLF-KEY-ICLF IN CLF  TO ELC-KEY-IELC IN ELC.
           MOVE CLF-MSC-STAT IN CLF  TO ELC-MSC-STAT IN ELC.
           MOVE 'A'                  TO ELC-MSC-TREG IN ELC.
           MOVE ZEROS                TO ELC-COD-COR1 IN ELC.
           MOVE ZEROS                TO ELC-COD-COR2 IN ELC.
           MOVE RDC-CIC-ICLI IN RDC  TO ELC-CIC-ICLI IN ELC.
           MOVE CLF-VAL-CMAX IN CLF  TO ELC-VAL-CMAX IN ELC.
           MOVE CLF-COD-VCCF IN CLF  TO ELC-COD-VCCF IN ELC.
           MOVE CLF-FEC-FVEN IN CLF  TO ELC-FEC-FCLF IN ELC.
           MOVE SPACES               TO ELC-GLS-DSP1 IN ELC.

      * Graba archivo ELC con Tipo de Registro A (CLF).
           MOVE FIO-PUT TO FIO-CMND.
           PERFORM LDC-FIO-ELC.           

       FIN-GRABA-ELC-CLF.
           EXIT.

       GRABA-ELC-LDC SECTION.
       INI-GRABA-ELC-LDC. 
      *----------------------
           MOVE CLF-COD-OFIC IN CLF  TO ELC-COD-OFIC IN ELC.
           MOVE CLF-COD-EJEC IN CLF  TO ELC-COD-EJEC IN ELC.
           MOVE CLF-KEY-ICLF IN CLF  TO ELC-KEY-IELC IN ELC.
           MOVE CLF-MSC-STAT IN CLF  TO ELC-MSC-STAT IN ELC.
           MOVE 'B'                  TO ELC-MSC-TREG IN ELC.
           MOVE LDC-NUM-ILDC IN LDC  TO ELC-COD-COR1 IN ELC.
           MOVE ZEROS                TO ELC-COD-COR2 IN ELC.
           MOVE LDC-GLS-DESC IN LDC  TO ELC-GLS-DESC IN ELC.
           MOVE LDC-VAL-CMAX IN LDC  TO ELC-VAL-CLDC IN ELC.
           MOVE LDC-FEC-FVEN IN LDC  TO ELC-FEC-FLDC IN ELC.
           MOVE LDC-IND-MGAR IN LDC  TO ELC-IND-MGAR IN ELC.
           MOVE SPACES               TO ELC-GLS-DSP2 IN ELC.

      * Graba archivo ELC con Tipo de Registro A (CLF).
           MOVE FIO-PUT TO FIO-CMND.
           PERFORM LDC-FIO-ELC.           
       FIN-GRABA-ELC-LDC. 
           EXIT.

       GRABA-ELC-ARCARG SECTION.
       INI-GRABA-ELC-ARCARG.
      *-------------------------
           MOVE CLF-COD-OFIC IN CLF   TO ELC-COD-OFIC IN ELC.
           MOVE CLF-COD-EJEC IN CLF   TO ELC-COD-EJEC IN ELC.
           MOVE CLF-KEY-ICLF IN CLF   TO ELC-KEY-IELC IN ELC.
           MOVE CLF-MSC-STAT IN CLF   TO ELC-MSC-STAT IN ELC.
           MOVE 'B'                   TO ELC-MSC-TREG IN ELC.
           MOVE LDC-NUM-ILDC IN LDC   TO ELC-COD-COR1 IN ELC.
           MOVE WSS-J                 TO ELC-COD-COR2 IN ELC.
           MOVE VEC-NUM-NARC (WSS-J)  TO ELC-NUM-NARC IN ELC. 
           MOVE VEC-ARC-COOC (WSS-J)  TO ELC-ARC-COOC IN ELC. 
           MOVE VEC-COD-VCOC (WSS-J)  TO ELC-COD-VCOC IN ELC. 
           MOVE VEC-CIC-IOPC (WSS-J)  TO ELC-CIC-IOPC IN ELC. 
           MOVE VEC-NUM-NARG (WSS-J)  TO ELC-NUM-NARG IN ELC. 
           MOVE VEC-COD-COGA (WSS-J)  TO ELC-COD-COGA IN ELC. 
           MOVE VEC-CIC-IGAR (WSS-J)  TO ELC-CIC-IGAR IN ELC. 
           MOVE VEC-NUM-PORG (WSS-J)  TO ELC-NUM-PORG IN ELC. 
           MOVE SPACES                TO ELC-GLS-DSP3 IN ELC.
           ADD 1 TO WSS-J.          

      * Graba archivo ELC con Tipo de Registro B (ARC-ARG).
           MOVE FIO-PUT TO FIO-CMND.
           PERFORM LDC-FIO-ELC.           

       FIN-GRABA-ELC-ARCARG.
           EXIT.

       LIMPIA-VEC SECTION.
       INI-LIMPIA-VEC. 
      *-------------------
           MOVE 1 TO WSS-K.                

       LUP-LIMPIA-VEC. 
           IF WSS-K > 15
              GO TO FIN-LIMPIA-VEC. 

           MOVE ZEROS  TO VEC-NUM-NARC (WSS-K)
                          VEC-NUM-NARG (WSS-K)
                          VEC-NUM-PORG (WSS-K).


           MOVE SPACES TO VEC-ARC-COOC (WSS-K)
                          VEC-COD-VCOC (WSS-K)
                          VEC-CIC-IOPC (WSS-K)
                          VEC-COD-COGA (WSS-K)
                          VEC-CIC-IGAR (WSS-K).

           ADD 1 TO WSS-K.
           GO TO LUP-LIMPIA-VEC. 

       FIN-LIMPIA-VEC. 
           EXIT.

       FINAL-ELC SECTION.
       INI-FINAL-ELC.
      *------------------
           MOVE FIO-CLO TO FIO-CMND.
           PERFORM LDC-FIO-CLF.
           PERFORM LDC-FIO-LDC.
           PERFORM LDC-FIO-RDC.
           PERFORM LDC-FIO-ARC.
           PERFORM LDC-FIO-ARG.
           PERFORM LDC-FIO-ELC.

       FIN-FINAL-ELC.
           EXIT.
      *
       ESTADISTICAS SECTION.
      *---------------------
       INI-ESTADISTICAS.

           DISPLAY ' '.
           DISPLAY 'ESTADISTICAS  LDCPBELC'.
           DISPLAY '----------------------'.
           DISPLAY 'PROCESADOS CLF  : ' 
                   WSS-NUM-LCLF IN WSS-VARI.
           DISPLAY 'ELIMINADOS CLF  : ' 
                   WSS-REG-BCLF IN WSS-VARI.
           DISPLAY 'ELIMINADOS LDC  : ' 
                   WSS-REG-BLDC IN WSS-VARI.
           DISPLAY 'ELIMINADOS ARC  : ' 
                   WSS-REG-BARC IN WSS-VARI.
           DISPLAY 'ELIMINADOS ARG  : ' 
                   WSS-REG-BARG IN WSS-VARI.
           DISPLAY 'ELIMINADOS RDC  : ' 
                   WSS-REG-BRDC IN WSS-VARI.
      *
           IF WSS-NUM-RBAD IN WSS-VARI > ZEROES
               PERFORM PRG-ABT
           ELSE
               PERFORM INI-GNS-PRO-END.
       FIN-ESTADISTICAS.
           EXIT.

       COPY LDCBFCLF.
       COPY LDCBFLDC.
       COPY LDCBFARC.
       COPY LDCBFARG.
       COPY LDCBFRDC.
       COPY LDCBFELC.

       COPY GNSBFTAB.
       COPY GNSBFMSG.
       COPY GNSBGDTC.
       COPY GNSBGIDD.
       COPY GNSBTABT.
       COPY GNSBBSYS.
       COPY GNSBGABT.
       COPY GNSBGEND.
       COPY GNSBPFEC.
       COPY GNSBGFEC.
       COPY GNSBBMSG.
       COPY GNSBGHOY.
