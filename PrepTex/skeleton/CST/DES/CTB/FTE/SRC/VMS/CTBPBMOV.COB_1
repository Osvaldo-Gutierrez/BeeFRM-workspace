       IDENTIFICATION DIVISION.
      *=======================
       PROGRAM-ID.      CTBPBMOV.
       AUTHOR.          CONSIST.

      * ACTUALIZACION MOVIMIENTOS Y SALDOS DIARIOS

       ENVIRONMENT DIVISION.
      *====================
       CONFIGURATION SECTION.
      *---------------------
       SPECIAL-NAMES.
            DECIMAL-POINT IS COMMA.
      * INPUT-OUTPUT SECTION.
      *--------------------
      * FILE-CONTROL.

       DATA DIVISION.
      *=============
       FILE SECTION.
      *------------

       WORKING-STORAGE SECTION.
      *-----------------------
       COPY CTBBRCPB.
       COPY CTBBRMOV.

       COPY CTBBRHCP.
       COPY CTBBRHMV.
       COPY CTBBRHDC.

       COPY CTBBRSLD.
       COPY CTBBRACM.

       COPY CTBBRCTB.

       COPY GNSWCFIO.
       COPY GNSWVFIO.

       COPY GNSWGHOY.
       COPY GNSWGSYS.

       01  WSS-VARI.
           03 WSS-FMIN             VALUE 0            PIC 9(06).

           03  WSS-FEC-FMES.
               05 WSS-NUM-SMES                       PIC 9(02).
               05 WSS-NUM-AMES                       PIC 9(02).
               05 WSS-NUM-MMES                       PIC 9(02).

           03  WSS-VAL-ADEB                          PIC 9(12).
           03  WSS-VAL-AHAB                          PIC 9(12).
           03  WSS-AUX-ADEB                          PIC 9(12).
           03  WSS-AUX-AHAB                          PIC 9(12).

       01  WSS-CTB.
           03  WSS-CTB-NUM-CCTB.
               05  WSS-CTB-COD-NCTA.      
                   07  WSS-CTB-COD-PART.
                       09  WSS-CTB-IND-GGRP         PIC X(01).
                       09  WSS-CTB-IND-GRUP         PIC X(01).
                       09  WSS-CTB-IND-SGRP         PIC X(01).
                   07  WSS-CTB-COD-CMAY             PIC X(02).
               05  WSS-CTB-COD-SCTA                 PIC X(03).

       PROCEDURE DIVISION.
      *==================
       MAIN SECTION.
       INI-MAIN.
           PERFORM INI.
           PERFORM PRO-CPB UNTIL NOT FIO-STAT-OKS.
           PERFORM FIN.
           STOP RUN.
       FIN-MAIN.
           EXIT.

       PRO-CPB SECTION.
       INI-PRO-CPB.
      *    IF CPB-IND-ESTA IN CPB = 'I'
           IF CPB-IND-ESTA IN CPB NOT =  'V'
               GO TO CIC-NXT-CPB.
           PERFORM WRT-HCP.
           PERFORM FST-MOV.
           PERFORM PRO-MOV UNTIL NOT ( FIO-STAT-OKS AND
                     CPB-FEC-FCPB IN CPB = MOV-FEC-FMOV IN MOV AND
                     CPB-NUM-COMP IN CPB = MOV-NUM-COMP IN MOV ).
           PERFORM DEL-CPB.
       CIC-NXT-CPB.
           PERFORM NXT-CPB.
       FIN-PRO-CPB.
            EXIT.

       WRT-HCP SECTION.
       INI-WRT-HCP.
           MOVE CPB TO HCP.
           MOVE 'A' TO HCP-IND-ESTA IN HCP.
           MOVE FIO-PUT TO FIO-CMND.
           PERFORM CTB-FIO-HCP.
       FIN-WRT-HCP.
           EXIT.

       FST-MOV SECTION.
       INI-FST-MOV.
           PERFORM KEY-ALL-MOV.
           MOVE FIO-GET-NLS TO FIO-CMND.
           PERFORM CTB-FIO-MOV.
       FIN-FST-MOV.
           EXIT.

       PRO-MOV SECTION.
       INI-PRO-MOV.
           PERFORM WRT-HMV.
           PERFORM PRO-FMIN.
           PERFORM PRO-CMPL.
           PERFORM PRO-SLD.
           PERFORM DEL-MOV.
           PERFORM NXT-MOV.
       FIN-PRO-CPB.
           EXIT.

       DEL-CPB SECTION.
       INI-DEL-CPB.
           MOVE FIO-DEL TO FIO-CMND.
           PERFORM CTB-FIO-CPB.
       FIN-DEL-CPB.
           EXIT.

       NXT-CPB SECTION.
       INI-NXT-CPB.
           MOVE FIO-GET-NXT TO FIO-CMND.
           PERFORM CTB-FIO-CPB.
       FIN-NXT-CPB.
           EXIT.

       WRT-HMV SECTION.
       INI-WRT-HMV.
           PERFORM RET-ALL-HMV.
      *     MOVE 'A' TO HMV-IND-ESTA IN HMV.
           MOVE FIO-PUT TO FIO-CMND.
           PERFORM CTB-FIO-HMV.
       FIN-WRT-HMV.
           EXIT.

       PRO-FMIN SECTION.
       INI-PRO-FMIN.
           IF MOV-FEC-FMOV IN MOV < WSS-FMIN
               MOVE MOV-FEC-FMOV IN MOV TO WSS-FMIN
               MOVE ZEROES TO HMV-COD-MVTO
               MOVE FIO-GET-KEY TO FIO-CMND
               PERFORM CTB-FIO-HMV
               MOVE WSS-FMIN TO HMV-FEC-FFAC IN HMV
               MOVE FIO-MOD TO FIO-CMND
               PERFORM CTB-FIO-HMV.
       FIN-PRO-FMIN.
           EXIT.

       GET-FMIN SECTION.
       INI-GET-FMIN.
      *ISP REGISTRO FMIN ( FMIN ESTA EN HMV-FEC-FFAC IN HMV )
           MOVE ZEROES TO HMV-COD-MVTO IN HMV.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM CTB-FIO-HMV.
           IF FIO-STAT-OKS
               MOVE HMV-FEC-FFAC IN HMV TO WSS-FMIN
           ELSE
               MOVE ZEROES TO HMV
               MOVE ZEROES TO WSS-FMIN
               MOVE WSS-FMIN TO HMV-FEC-FFAC IN HMV
               MOVE FIO-PUT TO FIO-CMND
               PERFORM CTB-FIO-HMV.
       FIN-GET-FMIN.
           EXIT.

       PRO-CMPL SECTION.
       INI-PRO-CMPL.
           MOVE MOV-NUM-CCTB IN MOV TO CTB-NUM-CCTB IN CTB.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM CTB-FIO-CTB.
           IF NOT FIO-STAT-OKS
               DISPLAY 'ISP CUENTA INEXISTENTE ' CTB-NUM-CCTB
               DISPLAY 'PARA MOVIMIENTO        ' MOV-COD-MVTO
           ELSE
               IF CTB-IND-OBDC IN CTB = 'S'
                   PERFORM RET-ALL-HDC
                   MOVE FIO-PUT TO FIO-CMND
                   PERFORM CTB-FIO-HDC
                   IF NOT FIO-STAT-OKS
                       DISPLAY 'ERROR AL GRABAR HDC ' FIO-STAT
                       DISPLAY 'PARA MOVIMIENTO     ' MOV-COD-MVTO.
       FIN-PRO-CMPL.
           EXIT.

       DEL-MOV SECTION.
       INI-DEL-MOV.
           MOVE FIO-DEL TO FIO-CMND.
           PERFORM CTB-FIO-MOV.
       FIN-DEL-MOV.
           EXIT.

       NXT-MOV SECTION.
       INI-NXT-MOV.
           MOVE FIO-GET-NXT TO FIO-CMND.
           PERFORM CTB-FIO-MOV.
       FIN-NXT-MOV.
           EXIT.

       PRO-SLD SECTION.
       INI-PRO-SLD.
           PERFORM PUT-SLD-WSS.
           MOVE '1' TO SLD-IND-TREG IN SLD.
           MOVE MOV-NUM-CCTB IN MOV TO SLD-NUM-CTB1 IN SLD.
           MOVE MOV-NUM-CCDC IN MOV TO SLD-NUM-CDC1 IN SLD.
           PERFORM SLD-DIA.
           MOVE '2' TO SLD-IND-TREG IN SLD.
           MOVE MOV-NUM-CCDC IN MOV TO SLD-NUM-CDC2 IN SLD.
           MOVE MOV-NUM-CCTB IN MOV TO SLD-NUM-CTB2 IN SLD.
           PERFORM SLD-DIA.

           MOVE SLD-FEC-FSLD TO WSS-FEC-FMES.
           MOVE MOV-NUM-CCTB TO WSS-CTB.

           MOVE '1' TO ACM-IND-TREG.
           MOVE WSS-CTB             TO ACM-NUM-CTB1.
           MOVE MOV-NUM-CCDC IN MOV TO ACM-NUM-CDC1.
           PERFORM SLD-MES.
           PERFORM SLD-ACM UNTIL 
                       NOT ( FIO-STAT-OKS                AND
                             ACM-IND-TREG = '1'          AND
                             ACM-NUM-CTB1 = WSS-CTB      AND 
                             ACM-NUM-CDC1 = MOV-NUM-CCDC ).   
           MOVE '2' TO ACM-IND-TREG.
           MOVE WSS-CTB             TO ACM-NUM-CTB2.
           MOVE MOV-NUM-CCDC IN MOV TO ACM-NUM-CDC2.
           PERFORM SLD-MES.
           PERFORM SLD-ACM UNTIL 
                       NOT ( FIO-STAT-OKS                AND
                             ACM-IND-TREG = '2'          AND
                             ACM-NUM-CTB2 = WSS-CTB      AND
                             ACM-NUM-CDC2 = MOV-NUM-CCDC ).   

           MOVE '1'                 TO ACM-IND-TREG.
           MOVE ZEROES              TO WSS-CTB-COD-SCTA.
           MOVE WSS-CTB             TO ACM-NUM-CTB1.
           MOVE MOV-NUM-CCDC IN MOV TO ACM-NUM-CDC1.
           PERFORM SLD-MES.
           PERFORM SLD-ACM UNTIL 
                       NOT ( FIO-STAT-OKS                AND
                             ACM-IND-TREG = '1'          AND
                             ACM-NUM-CTB1 = WSS-CTB      AND 
                             ACM-NUM-CDC1 = MOV-NUM-CCDC ).   
           MOVE '2'                 TO ACM-IND-TREG.
           MOVE WSS-CTB             TO ACM-NUM-CTB2.
           MOVE MOV-NUM-CCDC IN MOV TO ACM-NUM-CDC2.
           PERFORM SLD-MES.
           PERFORM SLD-ACM UNTIL 
                       NOT ( FIO-STAT-OKS                AND
                             ACM-IND-TREG = '2'          AND
                             ACM-NUM-CTB2 = WSS-CTB      AND
                             ACM-NUM-CDC2 = MOV-NUM-CCDC ).   

           MOVE '1'                 TO ACM-IND-TREG.
           MOVE ZEROES              TO WSS-CTB-COD-CMAY.
           MOVE WSS-CTB             TO ACM-NUM-CTB1.
           MOVE MOV-NUM-CCDC IN MOV TO ACM-NUM-CDC1.
           PERFORM SLD-MES.
           PERFORM SLD-ACM UNTIL 
                       NOT ( FIO-STAT-OKS                AND
                             ACM-IND-TREG = '1'          AND
                             ACM-NUM-CTB1 = WSS-CTB      AND 
                             ACM-NUM-CDC1 = MOV-NUM-CCDC ).   
           MOVE '2'                 TO ACM-IND-TREG.
           MOVE WSS-CTB             TO ACM-NUM-CTB2.
           MOVE MOV-NUM-CCDC IN MOV TO ACM-NUM-CDC2.
           PERFORM SLD-MES.
           PERFORM SLD-ACM UNTIL 
                       NOT ( FIO-STAT-OKS                AND
                             ACM-IND-TREG = '2'          AND
                             ACM-NUM-CTB2 = WSS-CTB      AND
                             ACM-NUM-CDC2 = MOV-NUM-CCDC ).   

           MOVE '1'                 TO ACM-IND-TREG.
           MOVE ZEROES              TO WSS-CTB-IND-SGRP.
           MOVE WSS-CTB             TO ACM-NUM-CTB1.
           MOVE MOV-NUM-CCDC IN MOV TO ACM-NUM-CDC1.
           PERFORM SLD-MES.
           PERFORM SLD-ACM UNTIL 
                       NOT ( FIO-STAT-OKS                AND
                             ACM-IND-TREG = '1'          AND
                             ACM-NUM-CTB1 = WSS-CTB      AND 
                             ACM-NUM-CDC1 = MOV-NUM-CCDC ).   
           MOVE '2'                 TO ACM-IND-TREG.
           MOVE WSS-CTB             TO ACM-NUM-CTB2.
           MOVE MOV-NUM-CCDC IN MOV TO ACM-NUM-CDC2.
           PERFORM SLD-MES.
           PERFORM SLD-ACM UNTIL 
                       NOT ( FIO-STAT-OKS                AND
                             ACM-IND-TREG = '2'          AND
                             ACM-NUM-CTB2 = WSS-CTB      AND
                             ACM-NUM-CDC2 = MOV-NUM-CCDC ).   

           MOVE '1'                 TO ACM-IND-TREG.
           MOVE ZEROES              TO WSS-CTB-IND-GRUP.
           MOVE WSS-CTB             TO ACM-NUM-CTB1.
           MOVE MOV-NUM-CCDC IN MOV TO ACM-NUM-CDC1.
           PERFORM SLD-MES.
           PERFORM SLD-ACM UNTIL 
                       NOT ( FIO-STAT-OKS                AND
                             ACM-IND-TREG = '1'          AND
                             ACM-NUM-CTB1 = WSS-CTB      AND 
                             ACM-NUM-CDC1 = MOV-NUM-CCDC ).   
           MOVE '2'                 TO ACM-IND-TREG.
           MOVE WSS-CTB             TO ACM-NUM-CTB2.
           MOVE MOV-NUM-CCDC IN MOV TO ACM-NUM-CDC2.
           PERFORM SLD-MES.
           PERFORM SLD-ACM UNTIL 
                       NOT ( FIO-STAT-OKS                AND
                             ACM-IND-TREG = '2'          AND
                             ACM-NUM-CTB2 = WSS-CTB      AND
                             ACM-NUM-CDC2 = MOV-NUM-CCDC ).   
       FIN-PRO-SLD.
           EXIT.

       SLD-DIA SECTION.
       INI-SLD-DIA.
           MOVE MOV-FEC-FMOV IN MOV TO SLD-FEC-FSLD IN SLD.
           MOVE SPACES TO SLD-COD-MONE IN SLD.
           PERFORM CLR-FLD-SLD.           
           PERFORM ADD-SLD.
           MOVE FIO-PUT TO FIO-CMND.
           PERFORM CTB-FIO-SLD.
           IF NOT FIO-STAT-OKS
               MOVE FIO-GET-KEY TO FIO-CMND
               PERFORM CTB-FIO-SLD
               PERFORM ADD-SLD
               MOVE FIO-MOD TO FIO-CMND
               PERFORM CTB-FIO-SLD.
       FIN-SLD-DIA.
           EXIT.

       SLD-MES SECTION.
       INI-SLD-MES.
           MOVE WSS-FEC-FMES TO ACM-FEC-FSLD.
           MOVE SPACES       TO ACM-COD-MONE.
           PERFORM CLR-FLD-ACM.
           PERFORM ADD-ACM.
           MOVE FIO-PUT TO FIO-CMND.
           PERFORM CTB-FIO-ACM.
           IF NOT FIO-STAT-OKS
               MOVE FIO-GET-KEY TO FIO-CMND
               PERFORM CTB-FIO-ACM
               PERFORM ADD-ACM
               MOVE FIO-MOD TO FIO-CMND
               PERFORM CTB-FIO-ACM.
           PERFORM FST-ACM.
       FIN-SLD-MES.
           EXIT.

       SLD-ACM SECTION.
       INI-SLD-ACM.
           IF ACM-FEC-FSLD < WSS-FEC-FMES
               ADD ACM-VAL-MDEB TO WSS-AUX-ADEB
               ADD ACM-VAL-MHAB TO WSS-AUX-AHAB
           ELSE
           IF ACM-FEC-FSLD = WSS-FEC-FMES
               ADD  ACM-VAL-MDEB TO WSS-AUX-ADEB
               ADD  ACM-VAL-MHAB TO WSS-AUX-AHAB
               MOVE WSS-AUX-ADEB TO ACM-VAL-ADEB
               MOVE WSS-AUX-AHAB TO ACM-VAL-AHAB
               MOVE FIO-MOD TO FIO-CMND
               PERFORM CTB-FIO-ACM
           ELSE
               ADD WSS-VAL-ADEB TO ACM-VAL-ADEB
               ADD WSS-VAL-AHAB TO ACM-VAL-AHAB
               MOVE FIO-MOD TO FIO-CMND
               PERFORM CTB-FIO-ACM.
           PERFORM NXT-ACM.           
       FIN-SLD-ACM.
           EXIT.

       FST-ACM SECTION.
       INI-FST-ACM.
           MOVE ZEROES TO ACM-FEC-FSLD.
           MOVE FIO-GET-NLS TO FIO-CMND.
           PERFORM CTB-FIO-ACM.
           MOVE ZEROES TO WSS-AUX-ADEB.
           MOVE ZEROES TO WSS-AUX-AHAB.
       FIN-FST-ACM.
           EXIT.

       NXT-ACM SECTION.
       INI-NXT-ACM.
           MOVE FIO-GET-NXT TO FIO-CMND.
           PERFORM CTB-FIO-ACM.
       FIN-NXT-ACM.
           EXIT.

       PUT-SLD-WSS SECTION.
       INI-PUT-SLD-WSS.
           IF MOV-IND-TRAT IN MOV = 'D'
               MOVE ZEROES              TO WSS-VAL-AHAB
               MOVE MOV-VAL-MVTO IN MOV TO WSS-VAL-ADEB
           ELSE
               MOVE ZEROES              TO WSS-VAL-ADEB
               MOVE MOV-VAL-MVTO IN MOV TO WSS-VAL-AHAB.
       FIN-PUT-SLD-WSS.
           EXIT.

       ADD-SLD SECTION.
       INI-ADD-SLD.
           IF MOV-IND-TRAT IN MOV = 'D'
               ADD WSS-VAL-ADEB TO SLD-VAL-ADEB
           ELSE
               ADD WSS-VAL-AHAB TO SLD-VAL-AHAB.
       FIN-ADD-SLD.
           EXIT.

       ADD-ACM SECTION.
       INI-ADD-ACM.
           ADD WSS-VAL-ADEB TO ACM-VAL-MDEB.
           ADD WSS-VAL-AHAB TO ACM-VAL-MHAB.
       FIN-ADD-ACM.
           EXIT.
           
       COPY CTBBFCPB.
       COPY CTBBFMOV.

       COPY CTBBFHCP.
       COPY CTBBFHMV.
       COPY CTBBFHDC.

       COPY CTBBFSLD.
       COPY CTBBFACM.

       COPY CTBBFCTB.

       COPY GNSBGHOY.
       COPY GNSBGSYS.

       KEY-ALL-MOV SECTION.
       INI-KEY-ALL-MOV.
           MOVE CPB-FEC-FCPB IN CPB TO MOV-FEC-FMOV IN MOV.
           MOVE CPB-NUM-COMP IN CPB TO MOV-NUM-COMP IN MOV.
           MOVE 0                   TO MOV-NUM-MVTO IN MOV.
       FIN-KEY-ALL-MOV.
           EXIT.

       RET-ALL-HMV SECTION.
       INI-RET-ALL-HMV.
           MOVE MOV-FEC-FMOV IN MOV TO HMV-FEC-FMOV IN HMV.
           MOVE MOV-NUM-COMP IN MOV TO HMV-NUM-COMP IN HMV.
           MOVE MOV-NUM-MVTO IN MOV TO HMV-NUM-MVTO IN HMV.
           MOVE MOV-COD-TMOV IN MOV TO HMV-COD-TMOV IN HMV.
           MOVE MOV-NUM-CCTB IN MOV TO HMV-NUM-CCTB IN HMV.
           MOVE MOV-VRF-CCTB IN MOV TO HMV-VRF-CCTB IN HMV.
           MOVE MOV-NUM-CCDC IN MOV TO HMV-NUM-CCDC IN HMV.
           MOVE MOV-VRF-CCDC IN MOV TO HMV-VRF-CCDC IN HMV.
           MOVE MOV-GLS-MVTO IN MOV TO HMV-GLS-MVTO IN HMV.
           MOVE MOV-NUM-REFE IN MOV TO HMV-NUM-REFE IN HMV.
           MOVE MOV-COD-FINA IN MOV TO HMV-COD-FINA IN HMV.
           MOVE MOV-VAL-MVTO IN MOV TO HMV-VAL-MVTO IN HMV.
           MOVE MOV-IND-TRAT IN MOV TO HMV-IND-TRAT IN HMV.
           MOVE MOV-FEC-FFAC IN MOV TO HMV-FEC-FFAC IN HMV.
           MOVE MOV-NUM-FACT IN MOV TO HMV-NUM-FACT IN HMV.
           MOVE MOV-FEC-FING IN MOV TO HMV-FEC-FING IN HMV.
       FIN-RET-ALL-HMV.
           EXIT.

       RET-ALL-HDC SECTION.
       INI-RET-ALL-HDC.
           MOVE MOV-COD-MVTO IN MOV TO HDC-COD-DCOM IN HDC.
           MOVE MOV-NUM-RUTR IN MOV TO HDC-NUM-RUTR IN HDC.
           MOVE MOV-VRF-RUTR IN MOV TO HDC-VRF-RUTR IN HDC.
           MOVE MOV-FEC-FOPE IN MOV TO HDC-FEC-FOPE IN HDC.
           MOVE MOV-COD-TOPE IN MOV TO HDC-COD-TOPE IN HDC.
           MOVE MOV-COD-MOTI IN MOV TO HDC-COD-MOTI IN HDC.
           MOVE MOV-COD-BANC IN MOV TO HDC-COD-BANC IN HDC.
           MOVE MOV-NUM-DOCI IN MOV TO HDC-NUM-DOCI IN HDC.
           MOVE MOV-NUM-DOCF IN MOV TO HDC-NUM-DOCF IN HDC.
           MOVE MOV-VAL-DOCT IN MOV TO HDC-VAL-DOCT IN HDC.
           MOVE MOV-COD-AUTZ IN MOV TO HDC-COD-AUTZ IN HDC.
           MOVE MOV-FEC-FEMI IN MOV TO HDC-FEC-FEMI IN HDC.
           MOVE MOV-FEC-FVCT IN MOV TO HDC-FEC-FVCT IN HDC.
           MOVE MOV-VAL-TINT IN MOV TO HDC-VAL-TINT IN HDC.
           MOVE MOV-NUM-AMOR IN MOV TO HDC-NUM-AMOR IN HDC.
           MOVE MOV-MSA-PPGN IN MOV TO HDC-MSA-PPGN IN HDC.
           MOVE MOV-FEC-FFGN IN MOV TO HDC-FEC-FFGN IN HDC.
           MOVE MOV-COD-GENE IN MOV TO HDC-COD-GENE IN HDC.
           MOVE MOV-VAL-MTO1 IN MOV TO HDC-VAL-MTO1 IN HDC.
           MOVE MOV-VAL-MTO2 IN MOV TO HDC-VAL-MTO2 IN HDC.
       FIN-RET-ALL-HDC.
           EXIT.

       CLR-FLD-SLD SECTION.
       INI-CLR-FLD-SLD.
           MOVE ZEROES              TO SLD-VAL-ADEB IN SLD.
           MOVE ZEROES              TO SLD-VAL-AHAB IN SLD.
           MOVE ZEROES              TO SLD-VAL-ADCM IN SLD.
           MOVE ZEROES              TO SLD-VAL-AHCM IN SLD.
           MOVE SPACES              TO SLD-GLS-DISP IN SLD.
       FIN-CLR-FLD-SLD.
           EXIT.

       CLR-FLD-ACM SECTION.
       INI-CLR-FLD-ACM.
           MOVE ZEROES TO ACM-VAL-MDEB.
           MOVE ZEROES TO ACM-VAL-MHAB.
           MOVE ZEROES TO ACM-VAL-ADEB.
           MOVE ZEROES TO ACM-VAL-AHAB.
           MOVE ZEROES TO ACM-VAL-ADCM.
           MOVE ZEROES TO ACM-VAL-AHCM.
       FIN-CLR-FLD-ACM.
           EXIT.

       INI SECTION.
       INI-INI.
           MOVE FIO-INP TO FIO-CMND.
           PERFORM CTB-FIO-CTB.
           IF NOT FIO-STAT-OKS
               DISPLAY 'ERROR APERTURA ARCHIVO CTBCTB: ABORTO'
               STOP RUN.
           MOVE FIO-UPD TO FIO-CMND.
           PERFORM CTB-FIO-SLD.
           IF NOT FIO-STAT-OKS
               DISPLAY 'ERROR APERTURA ARCHIVO CTBSLD: ABORTO'
               STOP RUN.
           MOVE FIO-UPD TO FIO-CMND.
           PERFORM CTB-FIO-ACM.
           IF NOT FIO-STAT-OKS
               DISPLAY 'ERROR APERTURA ARCHIVO CTBACM: ABORTO'
               STOP RUN.
           MOVE FIO-UPD TO FIO-CMND.
           PERFORM CTB-FIO-CPB.
           IF NOT FIO-STAT-OKS
               DISPLAY 'ERROR APERTURA ARCHIVO CTBCPB: ABORTO'
               STOP RUN.
           MOVE FIO-UPD TO FIO-CMND.
           PERFORM CTB-FIO-MOV.
           IF NOT FIO-STAT-OKS
               DISPLAY 'ERROR APERTURA ARCHIVO CTBMOV: ABORTO'
               STOP RUN.
           MOVE FIO-UPD TO FIO-CMND.
           PERFORM CTB-FIO-HCP.
           IF NOT FIO-STAT-OKS
               DISPLAY 'ERROR APERTURA ARCHIVO CTBHCP: ABORTO'
               STOP RUN.
           MOVE FIO-UPD TO FIO-CMND.
           PERFORM CTB-FIO-HMV.
           IF NOT FIO-STAT-OKS
               DISPLAY 'ERROR APERTURA ARCHIVO CTBHMV: ABORTO'
               STOP RUN.
           MOVE FIO-UPD TO FIO-CMND.
           PERFORM CTB-FIO-HDC.
           IF NOT FIO-STAT-OKS
               DISPLAY 'ERROR APERTURA ARCHIVO CTBHDC: ABORTO'
               STOP RUN.
           MOVE FIO-GET-FST TO FIO-CMND.
           PERFORM CTB-FIO-CPB.
           IF NOT FIO-STAT-OKS
               DISPLAY 'ARCHIVO CTBCPB VACIO: FIN PROCESO'
               STOP RUN.
           PERFORM GET-FMIN.
       FIN-INI.
           EXIT.

       FIN SECTION.
       INI-FIN.
      *     PERFORM GET-TIME.
           PERFORM GET-FHOY.
           MOVE ZEROES TO HMV-COD-MVTO.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM CTB-FIO-HMV.
           MOVE HOY-FHOY TO HMV-FEC-FING IN HMV.
           MOVE FIO-MOD TO FIO-CMND.
           PERFORM CTB-FIO-HMV.
           MOVE FIO-CLO TO FIO-CMND.
           PERFORM CTB-FIO-CPB.
           MOVE FIO-CLO TO FIO-CMND.
           PERFORM CTB-FIO-MOV.
           MOVE FIO-CLO TO FIO-CMND.
           PERFORM CTB-FIO-HCP.
           MOVE FIO-CLO TO FIO-CMND.
           PERFORM CTB-FIO-HMV.
           MOVE FIO-CLO TO FIO-CMND.
           PERFORM CTB-FIO-HDC.
       FIN-FIN.
           EXIT.
