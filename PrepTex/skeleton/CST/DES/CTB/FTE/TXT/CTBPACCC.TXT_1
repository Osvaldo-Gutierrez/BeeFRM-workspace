*%  CODIGO ADICIONAL PARA PROGRAMA CTBPACCC
*% IF FIN_SCR_VARI
      *<<<< IF FIN_SCR_VARI
           03 SCR-CCC-VARI.
               05 SCR-CCC-TREG                    PIC X(01).
               05 SCR-CCC-PNTR                    PIC 9(03).
               05 SCR-CCC-VEC.
                  07 SCR-FEC-ELEM   OCCURS 100 TIMES.
                     09 SCR-FEC-FSLD.
                        11 SCR-NUM-SSLD           PIC 9(02).
                        11 SCR-NUM-ASLD           PIC 9(02).
                        11 SCR-NUM-MSLD           PIC 9(02).
                        11 SCR-NUM-DSLD           PIC 9(02).
            03 WSS-IND-PNTR                       PIC 9(03).
      *>>>> END
*% END
*% IF WSS
      *<<<< IF WSS
       COPY CTBBRCTB.
       COPY CTBBRCDC.
       01  WSS-CCC-VARI.
           03 WSS-TCMA   COMP        PIC S9(04)   VALUE +2000.
      *>>>> END
*% END
*% CMA_USR = TRUE
*% IF CMA
      *<<<< IF CMA
           02  FILLER                              PIC X(2000).
      *>>>> END
*% END
*% IF INI_FIO
      *<<<< IF INI_FIO
           MOVE WSS-TCMA TO SCR-TCMA.
      *>>>> END
*% END
*% IF INI_FND_KEY
      *<<<< IF INI_FND_KEY
           IF SCR-CCC-TREG = '1'
               MOVE '1'                     TO SLD-IND-TREG IN SLD
               MOVE CTB-NUM-CCTB IN CCC-FLD TO SLD-NUM-CTB1 IN SLD
               MOVE CDC-NUM-CCDC IN CCC-FLD TO SLD-NUM-CDC1 IN SLD
           ELSE
               MOVE '2'                     TO SLD-IND-TREG IN SLD
               MOVE CDC-NUM-CCDC IN CCC-FLD TO SLD-NUM-CDC2 IN SLD
               MOVE CTB-NUM-CCTB IN CCC-FLD TO SLD-NUM-CTB2 IN SLD.
      *>>>> END
*% END
*% IF FND_KEY
      *<<<< IF FND_KEY
           MOVE FIO-FND-NLS TO FIO-CMND.
           PERFORM CTB-FIO-SLD.
           IF FIO-STAT-OKS
               MOVE FIO-GET-NXT TO FIO-CMND
               PERFORM CTB-FIO-SLD
               MOVE FIO-END-BRW TO FIO-CMND
               PERFORM CTB-FIO-SLD
               GO TO FIN-FND-KEY.
      *>>>> END
*% END
*% IF EOF
      *<<<< IF EOF
       COPY CTBBFCTB.
       COPY CTBBFCDC.
       COPY GNSBVCOD.
       COPY GNSBVTAB.

       NXT-SLD SECTION.
       INI-NXT-SLD.
           MOVE FIO-GET-NXT TO FIO-CMND.
           PERFORM CTB-FIO-SLD.
           IF NOT ( FIO-STAT-OKS AND
                    SLD-FEC-FSLD IN SLD = 
                    SCR-FEC-FSLD IN SCR-CCC-VARI( SCR-CCC-PNTR ) AND
                    WSS-IND-PNTR < 15 )
               GO TO FIN-NXT-SLD.
           IF SLD-IND-TREG NOT = SCR-CCC-TREG
               GO TO INI-NXT-SLD.
           IF ( SCR-CCC-TREG = '1' AND
                SLD-NUM-CTB1 IN SLD NOT = CTB-NUM-CCTB IN CCC-FLD ) OR
              ( SCR-CCC-TREG = '2' AND
                SLD-NUM-CDC2 IN SLD NOT = CDC-NUM-CCDC IN CCC-FLD )
               GO TO INI-NXT-SLD.
           MOVE SLD-NUM-DSLD IN SLD TO
                FRM-NUM-DSLD IN CCC-FLD( WSS-IND-PNTR ).
           MOVE SLD-NUM-MSLD IN SLD TO
                FRM-NUM-MSLD IN CCC-FLD( WSS-IND-PNTR ).
           MOVE SLD-NUM-SSLD IN SLD TO
                FRM-NUM-SSLD IN CCC-FLD( WSS-IND-PNTR ).
           MOVE SLD-NUM-ASLD IN SLD TO
                FRM-NUM-ASLD IN CCC-FLD( WSS-IND-PNTR ).
           MOVE SLD-VAL-ADEB IN SLD TO
                FRM-VAL-ADEB IN CCC-FLD( WSS-IND-PNTR ).
           MOVE SLD-VAL-AHAB IN SLD TO
                FRM-VAL-AHAB IN CCC-FLD( WSS-IND-PNTR ).
           IF SCR-CCC-TREG = '1'
               MOVE SLD-NUM-CTB1 IN SLD TO CTB-NUM-CCTB IN CTB
               MOVE FIO-GET-KEY TO FIO-CMND
               PERFORM CTB-FIO-CTB
               MOVE CTB-VRF-CCTB IN CTB TO
                    FRM-VRF-CCTB IN CCC-FLD( WSS-IND-PNTR )
               MOVE SLD-NUM-CDC1 IN SLD TO CDC-NUM-CCDC IN CDC
               MOVE FIO-GET-KEY TO FIO-CMND
               PERFORM CTB-FIO-CDC
               MOVE CDC-VRF-CCDC IN CDC TO
                    FRM-VRF-CCDC IN CCC-FLD( WSS-IND-PNTR )
               MOVE SLD-NUM-CTB1 IN SLD TO 
                    FRM-NUM-CCTB IN CCC-FLD( WSS-IND-PNTR )
               MOVE SLD-NUM-CDC1 IN SLD TO 
                    FRM-NUM-CCDC IN CCC-FLD( WSS-IND-PNTR )
           ELSE
               MOVE SLD-NUM-CDC2 IN SLD TO CDC-NUM-CCDC IN CDC
               MOVE FIO-GET-KEY TO FIO-CMND
               PERFORM CTB-FIO-CDC
               MOVE CDC-VRF-CCDC IN CDC TO
                    FRM-VRF-CCDC IN CCC-FLD( WSS-IND-PNTR )
               MOVE SLD-NUM-CTB2 IN SLD TO CTB-NUM-CCTB IN CTB
               MOVE FIO-GET-KEY TO FIO-CMND
               PERFORM CTB-FIO-CTB
               MOVE CTB-VRF-CCTB IN CTB TO
                    FRM-VRF-CCTB IN CCC-FLD( WSS-IND-PNTR )
               MOVE SLD-NUM-CTB2 IN SLD TO 
                    FRM-NUM-CCTB IN CCC-FLD( WSS-IND-PNTR )
               MOVE SLD-NUM-CDC2 IN SLD TO 
                    FRM-NUM-CCDC IN CCC-FLD( WSS-IND-PNTR ).
           ADD 1 TO WSS-IND-PNTR.
           GO TO INI-NXT-SLD.
       FIN-NXT-SLD.
           EXIT.
  
       EDT-FRM-CCC SECTION.
       INI-EDT-FRM-CCC.
      *     IF FRM-NUM-CCTB-LEN IN CCC-FLD( FRM-IFLD ) = -9
      *          MOVE -1 TO FRM-NUM-CCTB-LEN IN CCC-FLD( FRM-IFLD )
      *          GO TO FIN-EDT-FRM-CCC.
           MOVE FRM-NUM-CCTB     IN CCC-FLD( FRM-IFLD ) TO
                FRM-NUM-CCTB-EDT IN CCC-FLD( FRM-IFLD ).
      *     IF FRM-NUM-CCDC-LEN IN CCC-FLD( FRM-IFLD ) = -9
      *          MOVE -1 TO FRM-NUM-CCDC-LEN IN CCC-FLD( FRM-IFLD )
      *          GO TO FIN-EDT-FRM-CCC.
           MOVE FRM-NUM-CCDC     IN CCC-FLD( FRM-IFLD ) TO
                FRM-NUM-CCDC-EDT IN CCC-FLD( FRM-IFLD ).

      *     IF FRM-VAL-ADEB-LEN IN CCC-FLD( FRM-IFLD ) = -9
      *          MOVE -1 TO FRM-VAL-ADEB-LEN IN CCC-FLD( FRM-IFLD )
      *          GO TO FIN-EDT-FRM-CCC.
           MOVE FRM-VAL-ADEB     IN CCC-FLD( FRM-IFLD ) TO
                FRM-VAL-ADEB-EDT IN CCC-FLD( FRM-IFLD ).
      *     IF FRM-VAL-AHAB-LEN IN CCC-FLD( FRM-IFLD ) = -9
      *          MOVE -1 TO FRM-VAL-AHAB-LEN IN CCC-FLD( FRM-IFLD )
      *          GO TO FIN-EDT-FRM-CCC.
           MOVE FRM-VAL-AHAB     IN CCC-FLD( FRM-IFLD ) TO
                FRM-VAL-AHAB-EDT IN CCC-FLD( FRM-IFLD ).
       FIN-EDT-FRM-CCC.
           EXIT.
      *>>>> END
*% END
