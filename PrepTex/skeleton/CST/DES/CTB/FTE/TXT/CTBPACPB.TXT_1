*%     CODIGO ADICIONAL PARA PROGRAMA CTBPACPB
*% IF WSS
      *<<<< WSS
       COPY CTBBRMOV.
       COPY CTBBRCTB.
       COPY CTBBRCDC.
       COPY CTBBRMDC.
       COPY CTBBRCOR.
       01  WSS-VARI.
           03 WSS-OPID                         PIC X(03).
           03 WSS-VAL-TDEB                     PIC 9(12).
           03 WSS-VAL-THAB                     PIC 9(12).
           03 WSS-NUM-TMOV                     PIC 9(03).
           03 WSS-IND-VALI                     PIC X(01).
           03 PGM-STAT-PGM-CPB.
              05 PGM-STAT-MOV           VALUE '23'      PIC X(02).
                 88 PGM-STAT-MOV-OKS    VALUE '00'.
                 88 PGM-STAT-MOV-NUL    VALUE '  '.
      *>>>> END
*% END
*% IF INI_FIO_VAX
      *<<<< INI_FIO_VAX
           MOVE FIO-ACCS-UPD TO FIO-ACCS.
           MOVE FIO-ACC      TO FIO-CMND.
           PERFORM CTB-FIO-COR.
           MOVE FIO-UPD TO FIO-CMND.
           PERFORM CTB-FIO-COR.
           IF NOT FIO-STAT-OKS
               DISPLAY 'ERROR DE APERTURA ARCHIVO CTBCOR: ABORTO'
               STOP RUN.
           MOVE FIO-ACCS-UPD TO FIO-ACCS.
           MOVE FIO-ACC      TO FIO-CMND.
           MOVE 'CTB'        TO FIO-SIST.
           PERFORM GNS-FIO-MSG.
           MOVE FIO-INP TO FIO-CMND.
           MOVE 'CTB'   TO FIO-SIST.
           PERFORM GNS-FIO-MSG.
      *>>>> END
*% END
*% IF FIN_CMN_ING OR FIN_CMN_MOD
      *<<<< FIN_CMN_ING OR FIN_CMN_MOD
           PERFORM SET-TMP.
      *<<<< END
*% END
*% IF INI_CMN_ING
      *<<<< IF INI_CMN_ING
           MOVE 1 TO CPB-NUM-UMOV IN CPB.
      *>>>> END
*% END
*% IF FIN_CMN_ING
      *<<<< IF FIN_CMN_ING
           IF FIO-STAT-OKS
               PERFORM ADD-COR
               IF NOT FIO-STAT-OKS
                   MOVE 'COR    ERR' TO MSG-COD-MENS
                   MOVE 'CTB'         TO MSG-COD-SIST
                   PERFORM GET-MSG
                   MOVE MSG-GLS-DESC  TO CPB-GLS-MEN1.
           MOVE SCR-INST-HCM TO SCR-INST.
         
      *         MOVE 'MVTIFLDMEN1' TO MSG-COD-MENS
      *         MOVE 'CTB'         TO MSG-COD-SIST
      *         PERFORM GET-MSG
      *         MOVE MSG-GLS-DESC  TO CPB-GLS-MEN1
      *         MOVE 'MVTIFLDMEN2' TO MSG-COD-MENS
      *         MOVE 'CTB'         TO MSG-COD-SIST
      *         PERFORM GET-MSG
      *         MOVE MSG-GLS-DESC  TO CPB-GLS-MEN2.
      *         MOVE CPB-GLS-MENS  TO SCR-MENS-EXT
      *         MOVE  'S' TO SCR-IND-ENG IN SCR-VEC-ENG(2)
      *         MOVE  'S' TO SCR-IND-FST IN SCR-VEC-FST(2)
      *         PERFORM EGR-FPEN-FRW
      *     ELSE
      *         PERFORM ING-MVT.
      *>>>> END
*% END
*% IF INI_CMN_ACC
      *<<<< IF INI_CMN_ACC
           IF SCR-STAT = SCR-STAT-ABT OR SCR-VFLD = SCR-VFLD-NOT
              MOVE 'ACCION NO REALIZADA' TO FRM-MENS
              GO TO FIN-CMN-ACC.
           IF SCR-CMND = 'VAL'
                   PERFORM VAL-CPB
                   IF WSS-IND-VALI = 'N'
                        GO TO FIN-CMN-ACC.
      *>>>> END
*% END
*% IF CMN_ACC
      *<<<< IF CMN_ACC
           MOVE 'V' TO CPB-IND-ESTA IN CPB.
           MOVE FIO-MOD TO FIO-CMND.
           PERFORM CTB-FIO-CPB.
           IF FIO-STAT-OKS
               MOVE 'VALICPBOKS' TO MSG-COD-MENS
               MOVE 'CTB'        TO MSG-COD-SIST
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS
           ELSE
               MOVE 'VALICPBERR' TO MSG-COD-MENS
               MOVE 'CTB'        TO MSG-COD-SIST
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS.
      *>>>> END
*% END
*% IF EOF_IBM
      *<<<< IF EOF_IBM
       GET-OPID SECTION.
       INI-GET-OPID.
           EXEC CICS
                ASSIGN OPID(WSS-OPID)
           END-EXEC.
       FIN-GET-OPID.
           EXIT.

       VAL-ING-CPB SECTION.
       INI-VAL-ING-CPB.
           IF SCR-IND-CICL = 'N'
               MOVE 'MVTMKEYING ' TO MSG-COD-MENS
               MOVE 'CTB'        TO MSG-COD-SIST
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO CPB-GLS-MENS
               PERFORM EGR-FINI-FRW
           ELSE
               PERFORM EGR-FPEN-FRW.
       FIN-VAL-ING-CPB.
           EXIT.

       EGR-GIKY-ACC SECTION.

       ING-FPEN-CIC SECTION.
       INI-ING-FPEN-CIC.
           PERFORM ING-SETE.
      *JSS PERFORM SCR-TRL.
      *    ( LA UNICA DIFERENCIA CON EL PARRAFO SCR-TRL ES EL SCR-INIT )
           MOVE SCR-STPP TO SCR-STAT.
           MOVE SCR-GLS-PRMT( SCR-I ) TO FRM-MENS.
           IF SCR-STAT = SCR-STAT-MOD
               MOVE SCR-INST-GFL TO SCR-INST
               PERFORM HBL-FLD
               PERFORM SCR-MSSG
               IF FRM-FFLD NOT = FRM-FFLD-PF12
                   PERFORM EDT-FLD-CPB
                   PERFORM SCR-INIT
                   PERFORM SCR-EXIT
               ELSE
                   PERFORM SCR-INIT
                   PERFORM SCR-EXIT.
           IF SCR-STAT = SCR-STAT-SON
               MOVE SCR-INST-GCS TO SCR-INST
               PERFORM PRO-ALL
               PERFORM SCR-MSSG
               IF FRM-FFLD NOT = FRM-FFLD-PF12
                   PERFORM EDT-FLD-CPB
                   PERFORM SCR-INIT
                   PERFORM SCR-EXIT
               ELSE
                   PERFORM SCR-INIT
                   PERFORM SCR-EXIT.
      *ASUME SCR-STAT-CON.
           MOVE SCR-STAT-CON TO SCR-STAT.
           MOVE SCR-INST-GAB TO SCR-INST.
           PERFORM PRO-ALL.
           PERFORM SCR-MSSG.
           IF FRM-FFLD NOT = FRM-FFLD-PF12
               PERFORM EDT-FLD-CPB
               PERFORM SCR-INIT
               PERFORM SCR-EXIT
           ELSE
               PERFORM SCR-INIT
               PERFORM SCR-EXIT.
       FIN-ING-FPEN-CIC.
           EXIT.

       ING-FTER-CIC SECTION.
       INI-ING-FTER-CIC.
           PERFORM ING-SETE.
           MOVE SCR-INST-GKY TO SCR-INST.
           PERFORM HBL-IKY.
           PERFORM SCR-CLRA-CPB.
           MOVE SCR-MENS-EXT TO CPB-GLS-MENS.
           PERFORM EDT-KEY-CPB.
           PERFORM EDT-FLD-CPB.
           PERFORM SCR-INIT.
           PERFORM SCR-EXIT.
       FIN-ING-FTER-CIC.
           EXIT.

       ING-FTER-CMN SECTION.
       INI-ING-FTER-CMN.
           PERFORM ING-SETE.
           PERFORM PRO-ALL.
           PERFORM SCR-CLRA-CPB.
           MOVE SCR-MENS-EXT TO CPB-GLS-MENS.
           PERFORM SCR-INIT.
       FIN-ING-FTER-CMN.
           EXIT.

       ING-SETE SECTION.
       INI-ING-SETE.
           MOVE WSS-NTRN(SCR-IPRO) TO SCR-NTRN.
           MOVE WSS-PROG(SCR-IPRO) TO SCR-PROG.
           MOVE WSS-NMAP(SCR-IPRO) TO SCR-NMAP.
           MOVE WSS-NLIB(SCR-IPRO) TO SCR-NLIB.
      *JSS MOVE CPB-FLD-EXT TO CPB-FLD.
       FIN-ING-SETE.
           EXIT.

       EGR-FINI-FRW SECTION.
       INI-EGR-FINI-FRW.
           ADD 1 TO SCR-IPRO.
           MOVE WSS-INST-FTER-CIC TO SCR-INST-EXT.
           PERFORM PRO-ALL.
           PERFORM EDT-KEY-CPB.
           PERFORM EDT-FLD-CPB.
           PERFORM SCR-PUTA.
           PERFORM VAL-NUM-KEY-CPB.
           PERFORM VAL-NUM-FLD-CPB.
      *JSS MOVE CPB-FLD  TO CPB-FLD-EXT.
           MOVE WSS-PROG(SCR-IPRO) TO FRM-PROG.
           MOVE SCR-VARI TO FRM-CMMA.
           MOVE SCR-TCMA TO FRM-TCMA.
           MOVE FRM-XCT TO FRM-CMND.
           PERFORM GNS-PRO-FRM.
       FIN-EGR-FINI-FRW.
           EXIT.

       ING-MVT SECTION.
       INI-ING-MVT.
           PERFORM CMN-MOD.
           IF FIO-STAT-OKS
               IF SCR-IND-CICL = 'S' AND
                  MOV-NUM-MVTO IN MVT-FLD > ZEROES
                   MOVE 'CPBMFLDMEN1' TO MSG-COD-MENS
                   MOVE 'CTB'         TO MSG-COD-SIST
                   PERFORM GET-MSG
                   MOVE MSG-GLS-DESC  TO CPB-GLS-MEN1
                   MOVE 'CPBMFLDMEN2' TO MSG-COD-MENS
                   MOVE 'CTB'         TO MSG-COD-SIST
                   PERFORM GET-MSG
                   MOVE MSG-GLS-DESC  TO CPB-GLS-MEN2
                   PERFORM EGR-FPEN-FRW
               ELSE
                   MOVE 'MVTIKEYING' TO MSG-COD-MENS
                   MOVE 'CTB'        TO MSG-COD-SIST
                   PERFORM GET-MSG
                   MOVE MSG-GLS-DESC TO CPB-GLS-MENS
                   PERFORM EGR-FINI-FRW.
       FIN-ING-MVT.
           EXIT.

       EGR-MOD-MOV SECTION.
       INI-EGR-MOD-MOV.
           ADD 1 TO SCR-IPRO.
           MOVE WSS-INST-FTER-CIC TO SCR-INST-EXT.
           PERFORM PRO-ALL.
           PERFORM EDT-KEY-CPB.
           PERFORM EDT-FLD-CPB.
           PERFORM SCR-PUTA.
           PERFORM VAL-NUM-KEY-CPB.
           PERFORM VAL-NUM-FLD-CPB.
      *JSS MOVE CPB-FLD  TO CPB-FLD-EXT.
           MOVE WSS-PROG(SCR-IPRO) TO FRM-PROG.
           MOVE SCR-VARI TO FRM-CMMA.
           MOVE SCR-TCMA TO FRM-TCMA.
           MOVE FRM-XCT TO FRM-CMND.
           PERFORM GNS-PRO-FRM.
       FIN-EGR-MOD-MOV.
           EXIT.

       EGR-FPEN-FRW SECTION.
       INI-EGR-FPEN-FRW.
           ADD 1 TO SCR-IPRO.
           MOVE WSS-INST-FPEN-CIC TO SCR-INST-EXT.
      *JSS MOVE CPB-FLD  TO CPB-FLD-EXT.
           MOVE WSS-PROG(SCR-IPRO) TO FRM-PROG.
           MOVE SCR-VARI TO FRM-CMMA.
           MOVE SCR-TCMA TO FRM-TCMA.
           MOVE FRM-XCT TO FRM-CMND.
           PERFORM GNS-PRO-FRM.
       FIN-EGR-FPEN-FRW.
           EXIT.

       EGR-FPEN-BCK SECTION.
       INI-EGR-FPEN-BCK.
           SUBTRACT 1 FROM SCR-IPRO.
           MOVE WSS-INST-FPEN-CIC TO SCR-INST-EXT.
      *JSS MOVE CPB-FLD  TO CPB-FLD-EXT.
           MOVE WSS-PROG(SCR-IPRO) TO FRM-PROG.
           MOVE SCR-VARI TO FRM-CMMA.
           MOVE SCR-TCMA TO FRM-TCMA.
           MOVE FRM-XCT TO FRM-CMND.
           PERFORM GNS-PRO-FRM.
       FIN-EGR-FPEN-BCK.
           EXIT.

       EGR-FTER-CIC SECTION.
       INI-EGR-FTER-CIC.
           MOVE 1 TO SCR-IPRO.
           MOVE WSS-INST-FTER-CIC TO SCR-INST-EXT.
           MOVE WSS-PROG(SCR-IPRO) TO FRM-PROG.
           MOVE SCR-VARI TO FRM-CMMA.
           MOVE SCR-TCMA TO FRM-TCMA.
           MOVE FRM-XCT TO FRM-CMND.
           PERFORM GNS-PRO-FRM.
       FIN-FTER-CIC.
           EXIT.

       EGR-FTER-CMN SECTION.
       INI-EGR-FTER-CMN.
           MOVE 1 TO SCR-IPRO.
           MOVE WSS-INST-FTER-CMN TO SCR-INST-EXT.
           MOVE WSS-PROG(SCR-IPRO) TO FRM-PROG.
           MOVE SCR-VARI TO FRM-CMMA.
           MOVE SCR-TCMA TO FRM-TCMA.
           MOVE FRM-XCT TO FRM-CMND.
           PERFORM GNS-PRO-FRM.
       FIN-FTER-CMN.
           EXIT.

       SCR-INIT SECTION.
       INI-SCR-INIT.
           MOVE 3  TO FRM-PLIN.
           MOVE 19 TO FRM-NLIN.
           MOVE FRM-CLR-FRM TO FRM-CMND.
           PERFORM GNS-PRO-FRM.
           MOVE FRM-SINI-DBNF TO FRM-SINI.
           MOVE SCR-NMAP TO FRM-NAME.
           MOVE SCR-NLIB TO FRM-NLIB.
           MOVE CPB-FLD TO FRM-DFLD.
           MOVE FRM-INI TO FRM-CMND.
           PERFORM GNS-PRO-FRM.
       FIN-SCR-INIT.
           EXIT.
      *>>>> END
*% END
*% IF EOF_VAX
      *<<<< IF EOF_VAX
       GET-OPID SECTION.
       INI-GET-OPID.
       FIN-GET-OPID.
           EXIT.

       SET-TMP SECTION.
       INI-SET-TMP.
           CALL 'LIB$SET_SYMBOL' USING BY DESCRIPTOR
                               'CTB$CPB' CPB.

           MOVE CPB-NUM-DMOV IN CPB TO MOV-NUM-DMOV IN MOV.
           MOVE CPB-NUM-MMOV IN CPB TO MOV-NUM-MMOV IN MOV.
           MOVE CPB-NUM-SMOV IN CPB TO MOV-NUM-SMOV IN MOV.
           MOVE CPB-NUM-AMOV IN CPB TO MOV-NUM-AMOV IN MOV.
           MOVE CPB-NUM-COMP IN CPB TO MOV-NUM-COMP IN MOV.
           MOVE 1                   TO MOV-NUM-MVTO IN MOV.
           CALL 'LIB$SET_SYMBOL' USING BY DESCRIPTOR
                               'CTB$MOV' MOV.
       FIN-SET-TMP.
           EXIT.


      *>>>> END
*% END
*% IF EOF
      *<<<< IF EOF

       VAL-CPB SECTION.
       INI-VAL-CPB.
           MOVE 'S' TO WSS-IND-VALI.
           MOVE ZEROES TO WSS-VAL-TDEB.
           MOVE ZEROES TO WSS-VAL-THAB.
           MOVE ZEROES TO WSS-NUM-TMOV.
      *     PERFORM KEY-ALL-MVT.
           MOVE FIO-FND-NLS TO FIO-CMND.
           PERFORM CTB-FIO-MOV.
           IF NOT FIO-STAT-OKS AND
              CPB-NUM-TMOV IN CPB-FLD > ZEROES
               MOVE 'VALICPBTOMOV' TO MSG-COD-MENS
               MOVE 'CTB'        TO MSG-COD-SIST
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS
               GO TO FIN-VAL-CPB.
       CIC-GET-CPB.
            MOVE FIO-GET-NXT TO FIO-CMND.
            PERFORM CTB-FIO-MOV.
            IF ( FIO-STAT-OKS AND 
                 CPB-NUM-DMOV IN CPB-FLD = MOV-NUM-DMOV IN MOV AND
                 CPB-NUM-MMOV IN CPB-FLD = MOV-NUM-MMOV IN MOV AND
                 CPB-NUM-SMOV IN CPB-FLD = MOV-NUM-SMOV IN MOV AND
                 CPB-NUM-AMOV IN CPB-FLD = MOV-NUM-AMOV IN MOV AND
                 CPB-NUM-COMP IN CPB-FLD = MOV-NUM-COMP IN MOV )
                    IF MOV-IND-TRAT IN MOV = 'D'
                        ADD MOV-VAL-MVTO IN MOV TO WSS-VAL-TDEB
                        ADD 1 TO WSS-NUM-TMOV
                        GO TO CIC-GET-CPB
                    ELSE
                        ADD MOV-VAL-MVTO IN MOV TO WSS-VAL-THAB
                        ADD 1 TO WSS-NUM-TMOV
                        GO TO CIC-GET-CPB.
            MOVE FIO-END-BRW TO FIO-CMND.
            PERFORM CTB-FIO-MOV.
            IF CPB-NUM-TMOV IN CPB-FLD NOT = WSS-NUM-TMOV
               MOVE 'N' TO WSS-IND-VALI
               MOVE 'VALICPBTOMOV' TO MSG-COD-MENS
               MOVE 'CTB'        TO MSG-COD-SIST
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS
               GO TO FIN-VAL-CPB.
            IF CPB-VAL-TOTA IN CPB-FLD NOT = WSS-VAL-TDEB
               MOVE 'N' TO WSS-IND-VALI
               MOVE 'VALICPBTODEB ' TO MSG-COD-MENS
               MOVE 'CTB'        TO MSG-COD-SIST
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS
               GO TO FIN-VAL-CPB.
            IF CPB-VAL-TOTA IN CPB-FLD NOT = WSS-VAL-THAB
               MOVE 'N' TO WSS-IND-VALI
               MOVE 'VALICPBTOHAB' TO MSG-COD-MENS
               MOVE 'CTB'        TO MSG-COD-SIST
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS
               GO TO FIN-VAL-CPB.
       FIN-VAL-CPB.
            EXIT.

       GET-COR SECTION.
       INI-GET-COR.
           PERFORM KEY-ALL-COR.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM CTB-FIO-COR.
           IF FIO-STAT-OKS
               COMPUTE CPB-NUM-COMP IN CPB-FLD =
                       COR-NUM-CORR IN COR + 1
           ELSE
               MOVE 1              TO CPB-NUM-COMP IN CPB-FLD
               MOVE ZEROES         TO COR-NUM-CORR IN COR
               MOVE FIO-PUT TO FIO-CMND
               PERFORM CTB-FIO-COR
               IF NOT FIO-STAT-OKS
                   MOVE 'ASSCORRERR' TO MSG-COD-MENS
                   MOVE 'CTB'        TO MSG-COD-SIST
                   PERFORM GET-MSG
                   MOVE MSG-GLS-DESC TO CPB-GLS-MENS
                   PERFORM SCR-MSSG
                   PERFORM SCR-PUTA
                   PERFORM SCR-EXIT.
       FIN-GET-COR.
           EXIT.

       ADD-COR SECTION.
       INI-ADD-COR.
           PERFORM KEY-ALL-COR.
           MOVE FIO-GET-KEY-UPD TO FIO-CMND.
           PERFORM CTB-FIO-COR.
           ADD 1 TO COR-NUM-CORR IN COR.
           MOVE FIO-MOD TO FIO-CMND.
           PERFORM CTB-FIO-COR.
       FIN-ADD-COR.
           EXIT.

       KEY-ALL-COR SECTION.
       INI-KEY-ALL-COR.
           MOVE ZEROES                  TO COR-NUM-DCOR IN COR.
           MOVE CPB-NUM-MMOV IN CPB-FLD TO COR-NUM-MCOR IN COR.
           MOVE CPB-NUM-SMOV IN CPB-FLD TO COR-NUM-SCOR IN COR.
           MOVE CPB-NUM-AMOV IN CPB-FLD TO COR-NUM-ACOR IN COR.
       FIN-KEY-ALL-COR.
           EXIT.

       COPY CTBBFCTB.
       COPY CTBBFCDC.
       COPY CTBBFMDC.
       COPY CTBBFMOV.
       COPY CTBBFCOR.
      *>>>> END
*% END
