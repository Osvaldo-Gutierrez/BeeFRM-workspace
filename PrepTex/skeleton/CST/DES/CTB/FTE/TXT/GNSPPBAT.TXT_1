*%! CODIGO ADICIONAL PARA PROGRAMAS LISTADORES BATCH.
*% IF WSS
       01  WSS-VARI.
           03 WSS-COLA.
              05 WSS-TERM                               PIC  X(4).
              05 FILLER      VALUE 'CTL'                PIC  X(4).
           03 WSS-LARG  COMP VALUE +80                  PIC S9(4).
           03 WSS-SIND.
              05 I           VALUE 0                    PIC  9(3).
              05 J           VALUE 0                    PIC  9(3).
           03 WSS-TABL       VALUE SPACES.
              05 WSS-IDX-NFIS   OCCURS 4.
                 07 WSS-NFIS                            PIC X(75).
                 07 WSS-PRNT                            PIC X(75).
           03 WSS-PLST.
              05 FILLER      VALUE '* $$ LST CLASS='    PIC X(15).
              05 WSS-PCLS                               PIC X(1).
              05 FILLER      VALUE ',DISP='             PIC X(6).
              05 WSS-PDEL                               PIC X(1).
              05 FILLER      VALUE ',LST=00E'           PIC X(8).
           03 WSS-PJOB.
              05 FILLER      VALUE '* $$ JOB JNM=BSM'   PIC X(16).
              05 WSS-PNAM                               PIC X(4).
              05 FILLER      VALUE ',DISP=D,CLASS=A'    PIC X(15).
           03 WSS-JJOB.
              05 FILLER      VALUE '// JOB '            PIC X(07).
              05 WSS-JNAM                               PIC X(6).
              05 FILLER      VALUE SPACES               PIC X(20).
              05 FILLER      VALUE SPACES               PIC X(18).
           03 WSS-JCMN                                  PIC X(75).
           03 WSS-QFLD                                  PIC X(75).
           03 WSS-VEC-ILEE.
              05 WSS-ILEE       OCCURS 20               PIC X.
           03 WSS-VEC-ORDE.
              05 WSS-ORDE       OCCURS 20               PIC 99.
           03 WSS-IFIN       VALUE 0                    PIC 9.
           03 WSS-LSUB  COMP VALUE +0                   PIC S9(4).
           03 WSS-ITEM  COMP VALUE +0                   PIC S9(4).
           03 WSS-SARE.
              05 WSS-IDX-SFLD   OCCURS 204.
                 07 FILLER                              PIC X(8).
                 07 WSS-SFLD                            PIC X(80).
*% END
*% IF INI_FIO
           IF SCR-SISG NOT > SPACES
               MOVE SCR-SIST TO SCR-SISG.
*% END
*% IF INI_SCR_PGM
           IF SCR-INST = SCR-INST-HKY
               PERFORM SCR-TRL
           ELSE
           IF SCR-INST = SCR-INST-GCS
                PERFORM GET-ACC
           ELSE
           IF SCR-INST = SCR-INST-GAB OR SCR-INST = SCR-INST-GFL
                PERFORM GET-CON
                MOVE 'COM' TO SCR-CCPP.
           GO TO TRL-SCR-PGM.
*% END
*% IF CMN_PGM
           IF SCR-VFLD = SCR-VFLD-NOT OR SCR-STAT = SCR-STAT-ABT
               MOVE 'NO FUE SUBMITIDO' TO FRM-MENS
               MOVE 'COM'        TO SCR-CCPP
               GO TO FIN-CMN-PGM.
           MOVE EIBTRMID TO WSS-PNAM WSS-TERM.
           MOVE WSS-PJOB TO WSS-SFLD (1).
           MOVE '* $$ LST CLASS=R' TO WSS-SFLD (2).
           PERFORM ERR-QUE THRU FIN-ERR-QUE.
           MOVE 1 TO WSS-ITEM.
           PERFORM GEN-SUB THRU FIN-GEN-SUB VARYING I FROM 3 BY 1
               UNTIL I > 200 OR WSS-IFIN NOT = 0.
           IF WSS-IFIN = 2
               MOVE 'NADA QUE SUBMITIR' TO FRM-MENS
               MOVE 'COM'        TO SCR-CCPP
               GO TO FIN-CMN-PGM.

      * CHEQUEAR SI NUM TARJETAS > 200

           SUBTRACT 1 FROM I.
           MOVE '/&'       TO WSS-SFLD (I).
           ADD 1           TO I.
           MOVE '* $$ EOJ' TO WSS-SFLD (I).
           COMPUTE WSS-LSUB = 88 * I.
           PERFORM PUT-POW THRU FIN-PUT-POW.
           PERFORM DEL-QUE THRU FIN-DEL-QUE.
           MOVE 'COM' TO SCR-CCPP.
           IF WSS-IFIN = 2
               MOVE 'NADA QUE SUBMITIR' TO FRM-MENS
           ELSE
               MOVE 'SUBMITIDO OK' TO FRM-MENS.
           GO TO FIN-CMN-PGM.
*% END
*% IF FND_KEY
           MOVE SCR-SISG TO FIO-SIST.
           MOVE SPACES   TO BAT-KEY-TRYC.
*% END
*% IF INI_CMN_ACC
           IF SCR-VFLD = SCR-VFLD-NOT OR SCR-STAT = SCR-STAT-ABT
               MOVE 'NO FUE INGRESADO' TO FRM-MENS
               GO TO FIN-CMN-ACC.
      *JSS PERFORM GEN-BAT.
      *    MOVE 'INGRESADO OK' TO FRM-MENS.
           GO TO CON-CMN-ACC.
*% END
*% IF CMN_ACC
       CON-CMN-ACC.
           PERFORM RET-ALL.
           MOVE SCR-SISG     TO FIO-SIST.
           MOVE 'R'          TO BAT-KEY-TRYC.
           MOVE FIO-FND-NLS  TO FIO-CMND.
           PERFORM GNS-FIO-BAT.
           IF FIO-STAT-OKS
               PERFORM LEE-REP
               MOVE FIO-END-BRW  TO FIO-CMND
               PERFORM GNS-FIO-BAT
               PERFORM FIO-TSS THRU FIN-FIO-TSS
               MOVE 'INGRESADO OK' TO FRM-MENS
           ELSE
               MOVE 'ERROR AL INGRESAR' TO FRM-MENS.
*% END
*% IF EOF
       LEE-REP SECTION.
       INI-LEE-REP.
           MOVE FIO-GET-NXT  TO FIO-CMND.
           PERFORM GNS-FIO-BAT.
           IF NOT ( FIO-STAT-OKS AND
                    BAT-KEY-PROC IN BAT = BAT-KEY-PROC IN BCH-FLD AND
                    BAT-KEY-TREG = 'R')
               GO TO FIN-LEE-REP.
           COMPUTE I = BAT-KEY-CORR + 1.
           MOVE BAT-GLS-NFIS IN BAT TO WSS-NFIS (I).
           MOVE BAT-GLS-PRNT IN BAT TO WSS-PRNT (I).
           GO TO INI-LEE-REP.
       FIN-LEE-REP.
           EXIT.

       FIO-TSS SECTION.
       INI-FIO-TSS.
           MOVE EIBTRMID                TO WSS-TERM.
           MOVE SPACES                  TO BAT.
           MOVE BAT-KEY-PROC IN BCH-FLD TO BAT-KEY-PROC IN BAT.
           MOVE SPACES                  TO BAT-KEY-TRYC.
           MOVE FIO-GET-KEY             TO FIO-CMND.
           PERFORM GNS-FIO-BAT.
           MOVE BAT-VEC-ILEE            TO WSS-VEC-ILEE.
           MOVE BAT-KEY-PROC IN BCH-FLD TO WSS-JNAM.
           MOVE BAT-GLS-CMND            TO WSS-JCMN.
           IF BCH-IND-IDEL = 'S'
               MOVE 'D' TO WSS-PDEL
           ELSE
               MOVE 'K' TO WSS-PDEL.
           MOVE BCH-GLS-COLA TO WSS-PCLS.
           MOVE WSS-JJOB     TO WSS-QFLD.
           PERFORM PUT-QUE.
           MOVE WSS-PLST     TO WSS-QFLD.
           PERFORM PUT-QUE.
           PERFORM PUT-TSS-LEFT VARYING I FROM 1 BY 1 UNTIL I > 4.
           MOVE WSS-JCMN     TO WSS-QFLD.
           PERFORM PUT-QUE.
           MOVE ZEROES TO WSS-VEC-ORDE.
           PERFORM VER-ORD VARYING I FROM 1 BY 1 UNTIL I > 20.
           PERFORM MOV-ORD VARYING J FROM 1 BY 1 UNTIL J > 20.
           PERFORM PUT-TSS-RIGH  VARYING I FROM 1 BY 1 UNTIL I > 4.
           MOVE '/*'        TO WSS-QFLD.
           PERFORM PUT-QUE.
       FIN-FIO-TSS.
           EXIT.

       PUT-TSS-LEFT SECTION.
       INI-PUT-TSS-LEFT.
           IF WSS-NFIS (I) > SPACES
               MOVE WSS-NFIS (I) TO WSS-QFLD
               PERFORM PUT-QUE.
       FIN-PUT-TSS-LEFT.
           EXIT.

       VER-ORD SECTION.
       INI-VER-ORD.
           IF WSS-ILEE (I) NOT = '0'
               PERFORM CON-NUM
               MOVE I TO WSS-ORDE (J).
       FIN-VER-ORD.
           EXIT.

       CON-NUM SECTION.
       INI-CON-NUM.
           IF WSS-ILEE (I) IS NUMERIC
               MOVE WSS-ILEE (I) TO J
               GO TO FIN-CON-NUM.
           IF WSS-ILEE (I) = 'A' MOVE 10 TO J
           ELSE
           IF WSS-ILEE (I) = 'B' MOVE 11 TO J
           ELSE
           IF WSS-ILEE (I) = 'C' MOVE 12 TO J
           ELSE
           IF WSS-ILEE (I) = 'D' MOVE 13 TO J
           ELSE
           IF WSS-ILEE (I) = 'E' MOVE 14 TO J
           ELSE
           IF WSS-ILEE (I) = 'F' MOVE 15 TO J
           ELSE
           IF WSS-ILEE (I) = 'G' MOVE 16 TO J
           ELSE
           IF WSS-ILEE (I) = 'H' MOVE 17 TO J
           ELSE
           IF WSS-ILEE (I) = 'I' MOVE 18 TO J
           ELSE
           IF WSS-ILEE (I) = 'J' MOVE 19 TO J
           ELSE
           IF WSS-ILEE (I) = 'K' MOVE 20 TO J.
       FIN-CON-NUM.
           EXIT.

       MOV-ORD SECTION.
       INI-MOV-ORD.
           IF WSS-ORDE (J) NOT = 0
               MOVE WSS-ORDE (J) TO I
               IF WSS-ILEE (I) NOT = '0'
                   MOVE BCH-DAT-DATO (I) TO WSS-QFLD
                   PERFORM PUT-QUE.
       FIN-MOV-ORD.
           EXIT.

       PUT-TSS-RIGH SECTION.
       INI-PUT-TSS-RIGH.
           IF WSS-PRNT (I) > SPACES
               MOVE WSS-PRNT (I) TO WSS-QFLD
               PERFORM PUT-QUE.
       FIN-PUT-TSS-RIGH.
           EXIT.

       PUT-QUE SECTION.
       INI-PUT-QUE.
           EXEC CICS WRITEQ TS QUEUE(WSS-COLA)
                               FROM(WSS-QFLD)
                               LENGTH(WSS-LARG)
                               AUXILIARY
           END-EXEC.
       FIN-PUT-QUE.
           EXIT.

      *JSS

       ERR-QUE SECTION.
       INI-ERR-QUE.
           EXEC CICS HANDLE CONDITION
                             QIDERR (QUE-ERR)
                             ITEMERR(QUE-FIN)
           END-EXEC.
       FIN-ERR-QUE.
           EXIT.

       QUE-FIN SECTION.
       INI-QUE-FIN.
           MOVE 1 TO WSS-IFIN.
           GO TO FIN-GET-QUE.
       FIN-QUE-FIN.
           EXIT.

       QUE-ERR SECTION.
       INI-QUE-ERR.
           MOVE 2 TO WSS-IFIN.
           GO TO FIN-GET-QUE.
       FIN-QUE-ERR.
           EXIT.

       GET-QUE SECTION.
       INI-GET-QUE.
           EXEC CICS READQ TS QUEUE(WSS-COLA)
                              INTO(WSS-SFLD (I))
                              LENGTH(WSS-LARG)
                              ITEM(WSS-ITEM)
           END-EXEC.
       FIN-GET-QUE.
           EXIT.

       GEN-SUB SECTION.
       INI-GEN-SUB.
           PERFORM GET-QUE THRU FIN-GET-QUE.
           ADD 1  TO WSS-ITEM.
       FIN-GEN-SUB.
           EXIT.

       PUT-POW SECTION.
       INI-PUT-POW.
           EXEC CICS LINK     PROGRAM('BIMSUBM2')
                              COMMAREA(WSS-SARE)
                              LENGTH(WSS-LSUB)
           END-EXEC.
       FIN-PUT-POW.
           EXIT.

       DEL-QUE SECTION.
       INI-DEL-QUE.
           EXEC CICS DELETEQ TS QUEUE(WSS-COLA)
           END-EXEC.
       FIN-DEL-QUE.
           EXIT.
*% END
