*%      CODIGO ADICIONAL PARA PROGRAMA LISTADOR CTBPLMAY
*% IF WSS
      *<<<< WSS
       COPY CTBBRHCP.
       COPY CTBBRCTB.
       COPY CTBBRCDC.
       COPY CTBBRACM.
       01  WSS-VARI.
           03 WSS-IND-CMAY     VALUE 0   PIC 9(01).
           03 WSS-IND-PPHH     VALUE 0   PIC 9(01).
           03 WSS-FEC-FMES.
              05 WSS-NUM-MMES            PIC 9(02).
              05 WSS-NUM-SMES            PIC 9(02).
              05 WSS-NUM-AMES            PIC 9(02).
       01  WSS-CTB.
           03 CTA-COD-PART               PIC X(03).
           03 CTA-COD-CMAY               PIC X(02).
           03 CTA-COD-SCTA               PIC X(03).
           03 SUB-COD-PART               PIC X(03).
           03 SUB-COD-CMAY               PIC X(02).
           03 SUB-COD-SCTA               PIC X(03).
           03 WSS-TOT-DSUB               PIC 9(12).
           03 WSS-TOT-ASUB               PIC 9(12).
           03 WSS-TOT-DCTA               PIC 9(12).
           03 WSS-TOT-ACTA               PIC 9(12).
      *>>>> END
*% END
*% IF RR
      *<<<< RR
           03 HMV-NUM-MVTO               PIC 9(03).
      *>>>> END
*% END
*% IF INI_INP
      *<<<< INI_INP
           MOVE ZEROES TO WSS-NUM-SMAY IN WSS-MAY.
           MOVE ZEROES TO WSS-VAL-TDMA IN WSS-MAY.
           MOVE ZEROES TO WSS-VAL-THMA IN WSS-MAY.
           MOVE ZEROES TO WSS-VAL-SDMA IN WSS-MAY.
           MOVE ZEROES TO WSS-VAL-SAMA IN WSS-MAY.
           MOVE ZEROES TO WSS-VAL-SDEU IN WSS-MAY.
           MOVE ZEROES TO WSS-VAL-SACR IN WSS-MAY.
           MOVE ZEROES TO WSS-VAL-DSUB IN WSS-MAY.
           MOVE ZEROES TO WSS-VAL-ASUB IN WSS-MAY.
           MOVE ZEROES TO WSS-VAL-DCTA IN WSS-MAY.
           MOVE ZEROES TO WSS-VAL-ACTA IN WSS-MAY.
           MOVE ZEROES TO WSS-NUM-AMAY IN WSS-MAY.
           MOVE ZEROES TO WSS-VAL-DEBE IN WSS-MAY.
           MOVE ZEROES TO WSS-VAL-HABE IN WSS-MAY.
           MOVE ZEROES TO WSS-VAL-DEUD IN WSS-MAY.
           MOVE ZEROES TO WSS-VAL-ACRE IN WSS-MAY.
           MOVE ZEROES TO WSS-TOT-DSUB.
           MOVE ZEROES TO WSS-TOT-ASUB.
           MOVE ZEROES TO WSS-TOT-DCTA.
           MOVE ZEROES TO WSS-TOT-ACTA.
           MOVE ZEROES TO WSS-TOT-SDEU IN WSS-MAY.
           MOVE ZEROES TO WSS-TOT-SACR IN WSS-MAY.
      *>>>> END
*% END
*% IF FIN_FST_INP
      *<<<< FIN_FST_INP
           MOVE WSS-NUM-SMES TO HMV-NUM-SMOV IN HMV.
           MOVE WSS-NUM-AMES TO HMV-NUM-AMOV IN HMV.
           MOVE WSS-NUM-MMES TO HMV-NUM-MMOV IN HMV.
           MOVE ZEROES       TO HMV-NUM-DMOV IN HMV.
           MOVE FIO-GET-NLS TO FIO-CMND.
           PERFORM CTB-FIO-HMV.
      *>>>> END
*% END
*% IF PH_MAY
      *<<<< PH_MAY
           IF WSS-IND-PPHH = 0
               MOVE 1 TO WSS-IND-PPHH
               MOVE 1 TO PRINT-SWITCH
               MOVE ZEROES TO PAGE-COUNTER
               GO TO FIN-PH-MAY.
      *>>>> END
*% END
*% IF CH_MAY_CTB_COD_CMAY
      *<<<< CH_MAY_CTB_COD_CMAY
      * RESPALDO CUENTA CONTABLE
           MOVE CTB-COD-PART IN SRT TO CTA-COD-PART IN WSS-CTB.
           MOVE CTB-COD-CMAY IN SRT TO CTA-COD-CMAY IN WSS-CTB.
           MOVE '000'               TO CTA-COD-SCTA IN WSS-CTB.
      * BUSQUEDA CUENTA CONTABLE
           MOVE CTB-COD-PART IN SRT TO CTB-COD-PART IN CTB.
           MOVE CTB-COD-CMAY IN SRT TO CTB-COD-CMAY IN CTB.
           MOVE '000'               TO CTB-COD-SCTA IN CTB.
           MOVE '000'               TO WSS-COD-SCTA IN WSS-MAY.
           MOVE SPACES              TO CTB-VRF-CCTB.
           MOVE SPACES              TO CTB-GLS-CCTB.
           MOVE FIO-GET-KEY TO FIO-CMND.
      *     PERFORM CTB-FIO-CTB.
           CALL 'CTBPFCTB' USING FIO-VARI CTB.
      * BUSQUEDA CENTRO DE COSTOS
           MOVE CDC-NUM-CDC0 IN SRT TO CDC-NUM-CDC0 IN CDC.
           MOVE CDC-NUM-CDC3 IN SRT TO CDC-NUM-CDC3 IN CDC.
           MOVE '0'                 TO CDC-VRF-CCDC IN CDC.
           MOVE FIO-GET-KEY TO FIO-CMND.
      *     PERFORM CTB-FIO-CDC.
           CALL 'CTBPFCDC' USING FIO-VARI CDC.
      *>>>> END
*% END
*% IF CF_MAY_CTB_COD_CMAY
      *<<<< CF_MAY_CTB_COD_CMAY
      * BUSQUEDA SALDOS ACUMULADOS 
           MOVE '1' TO ACM-IND-TREG.
      * RESTAURAR CUENTA CONTABLE
      * AUXILIAR PARA LLENAR CTB EN ACM.
           MOVE CTA-COD-PART IN WSS-CTB TO CTB-COD-PART IN CTB.
           MOVE CTA-COD-CMAY IN WSS-CTB TO CTB-COD-CMAY IN CTB.
           MOVE CTA-COD-SCTA IN WSS-CTB TO CTB-COD-SCTA IN CTB.
           MOVE CTB-NUM-CCTB IN CTB TO ACM-NUM-CTB1.

      * AUXILIAR PARA LLENAR CDC EN ACM.
           MOVE CDC-NUM-CDC0 IN SRT TO CDC-NUM-CDC0 IN CDC.
           MOVE CDC-NUM-CDC3 IN SRT TO CDC-NUM-CDC3 IN CDC.
           MOVE CDC-NUM-CCDC IN CDC TO ACM-NUM-CDC1.

           MOVE HMV-NUM-SMOV IN SRT TO ACM-NUM-SSLD.
           MOVE HMV-NUM-AMOV IN SRT TO ACM-NUM-ASLD.
           MOVE HMV-NUM-MMOV IN SRT TO ACM-NUM-MSLD.
           MOVE FIO-GET-KEY TO FIO-CMND.
      *     PERFORM CTB-FIO-ACM.
           CALL 'CTBPFACM' USING FIO-VARI ACM.
           IF NOT FIO-STAT-OKS
               DISPLAY 'ERROR: SALDO ACUMLADO NO EXISTE'
               DISPLAY ACM.
           COMPUTE WSS-VAL-TDMA = ACM-VAL-ADEB - ACM-VAL-MDEB.
           COMPUTE WSS-VAL-THMA = ACM-VAL-AHAB - ACM-VAL-MHAB.
           IF WSS-VAL-TDMA > WSS-VAL-THMA
               COMPUTE WSS-VAL-SDMA = WSS-VAL-TDMA - WSS-VAL-THMA
               MOVE ZEROES TO WSS-VAL-SAMA
           ELSE
               COMPUTE WSS-VAL-SAMA = WSS-VAL-THMA - WSS-VAL-TDMA
               MOVE ZEROES TO WSS-VAL-SDMA.

            IF WSS-TOT-DCTA > WSS-TOT-ACTA
               MOVE ZEROES TO WSS-VAL-SACR IN WSS-MAY
               COMPUTE WSS-VAL-SDEU IN WSS-MAY = 
                       WSS-TOT-DCTA - WSS-TOT-ACTA
            ELSE
               MOVE ZEROES TO WSS-VAL-SDEU IN WSS-MAY
               COMPUTE WSS-VAL-SACR IN WSS-MAY = 
                       WSS-TOT-ACTA - WSS-TOT-DCTA.

           IF ( WSS-VAL-SDMA IN WSS-MAY + WSS-VAL-SDEU IN WSS-MAY >
                 WSS-VAL-SAMA IN WSS-MAY + WSS-VAL-SACR IN WSS-MAY )
                  MOVE ZEROES TO WSS-VAL-ACTA
                  COMPUTE WSS-VAL-DCTA = 
                                         ( WSS-VAL-SDMA IN WSS-MAY + 
                                           WSS-VAL-SDEU IN WSS-MAY ) - 
                                         ( WSS-VAL-SAMA IN WSS-MAY + 
                                           WSS-VAL-SACR IN WSS-MAY )
           ELSE
                  MOVE ZEROES TO WSS-VAL-DCTA
                  COMPUTE WSS-VAL-ACTA = 
                                         ( WSS-VAL-SAMA IN WSS-MAY + 
                                           WSS-VAL-SACR IN WSS-MAY ) -
                                         ( WSS-VAL-SDMA IN WSS-MAY + 
                                           WSS-VAL-SDEU IN WSS-MAY ).
           MOVE ZEROES TO WSS-TOT-DCTA.
           MOVE ZEROES TO WSS-TOT-ACTA.
      *>>>> END
*% END
*% IF CH_MAY_CTB_COD_SCTA
      *<<<< CH_MAY_CTB_COD_SCTA
           MOVE WSS-VAL-DEBE IN SRT TO WSS-TOT-DSUB.
           MOVE WSS-VAL-HABE IN SRT TO WSS-TOT-ASUB.
      * RESPALDO SUBCUENTA CONTABLE
           MOVE CTB-COD-PART IN SRT TO SUB-COD-PART IN WSS-CTB.
           MOVE CTB-COD-CMAY IN SRT TO SUB-COD-CMAY IN WSS-CTB.
           MOVE CTB-COD-SCTA IN SRT TO SUB-COD-SCTA IN WSS-CTB.
      * BUSQUEDA CUENTA CONTABLE
           MOVE CTB-COD-PART IN SRT TO CTB-COD-PART IN CTB.
           MOVE CTB-COD-CMAY IN SRT TO CTB-COD-CMAY IN CTB.
           MOVE CTB-COD-SCTA IN SRT TO CTB-COD-SCTA IN CTB.
           MOVE SPACES              TO CTB-VRF-CCTB.
           MOVE SPACES              TO CTB-GLS-CCTB.
           MOVE FIO-GET-KEY TO FIO-CMND.
      *     PERFORM CTB-FIO-CTB.
           CALL 'CTBPFCTB' USING FIO-VARI CTB.
      * BUSQUEDA CENTRO DE COSTOS
           MOVE CDC-NUM-CDC0 IN SRT TO CDC-NUM-CDC0 IN CDC.
           MOVE CDC-NUM-CDC3 IN SRT TO CDC-NUM-CDC3 IN CDC.
           MOVE '0'                 TO CDC-VRF-CCDC IN CDC.
           MOVE FIO-GET-KEY TO FIO-CMND.
      *     PERFORM CTB-FIO-CDC.
           CALL 'CTBPFCDC' USING FIO-VARI CDC.
      *>>>> END
*% END
*% IF CF_MAY_CTB_COD_SCTA
      *<<<< CF_MAY_CTB_COD_SCTA
           MOVE WSS-VAL-DEBE IN SRT TO WSS-VAL-DEUD.
           MOVE WSS-VAL-HABE IN SRT TO WSS-VAL-ACRE.
      * BUSQUEDA SALDOS ACUMULADOS 
           MOVE '1' TO ACM-IND-TREG.
      * RESTAURAR CUENTA CONTABLE
      * AUXILIAR PARA LLENAR CTB EN ACM.
           MOVE SUB-COD-PART IN WSS-CTB TO CTB-COD-PART IN CTB.
           MOVE SUB-COD-CMAY IN WSS-CTB TO CTB-COD-CMAY IN CTB.
           MOVE SUB-COD-SCTA IN WSS-CTB TO CTB-COD-SCTA IN CTB.
           MOVE CTB-NUM-CCTB IN CTB TO ACM-NUM-CTB1.

      * AUXILIAR PARA LLENAR CDC EN ACM.
           MOVE CDC-NUM-CDC0 IN SRT TO CDC-NUM-CDC0 IN CDC.
           MOVE CDC-NUM-CDC3 IN SRT TO CDC-NUM-CDC3 IN CDC.
           MOVE CDC-NUM-CCDC IN CDC TO ACM-NUM-CDC1.

           MOVE HMV-NUM-SMOV IN SRT TO ACM-NUM-SSLD.
           MOVE HMV-NUM-AMOV IN SRT TO ACM-NUM-ASLD.
           MOVE HMV-NUM-MMOV IN SRT TO ACM-NUM-MSLD.
           MOVE FIO-GET-KEY TO FIO-CMND.
      *     PERFORM CTB-FIO-ACM.
           CALL 'CTBPFACM' USING FIO-VARI ACM.
           COMPUTE WSS-VAL-TDMA = ACM-VAL-ADEB - ACM-VAL-MDEB.
           COMPUTE WSS-VAL-THMA = ACM-VAL-AHAB - ACM-VAL-MHAB.
           IF WSS-VAL-TDMA > WSS-VAL-THMA
               COMPUTE WSS-VAL-SDMA = WSS-VAL-TDMA - WSS-VAL-THMA
               MOVE ZEROES TO WSS-VAL-SAMA
           ELSE
               COMPUTE WSS-VAL-SAMA = WSS-VAL-THMA - WSS-VAL-TDMA
               MOVE ZEROES TO WSS-VAL-SDMA.
            IF ( WSS-VAL-SDMA IN WSS-MAY + WSS-TOT-SDEU IN WSS-MAY >
                 WSS-VAL-SAMA IN WSS-MAY + WSS-TOT-SACR IN WSS-MAY )
                  MOVE ZEROES TO WSS-VAL-ASUB
                  COMPUTE WSS-VAL-DSUB = 
                                         ( WSS-VAL-SDMA IN WSS-MAY + 
                                           WSS-TOT-SDEU IN WSS-MAY ) - 
                                         ( WSS-VAL-SAMA IN WSS-MAY + 
                                           WSS-TOT-SACR IN WSS-MAY )
             ELSE
                  MOVE ZEROES TO WSS-VAL-DSUB
                  COMPUTE WSS-VAL-ASUB = 
                                         ( WSS-VAL-SAMA IN WSS-MAY + 
                                           WSS-TOT-SACR IN WSS-MAY ) -
                                         ( WSS-VAL-SDMA IN WSS-MAY + 
                                           WSS-TOT-SDEU IN WSS-MAY ).
      *>>>> END
*% END
*% IF RS
      *<<<< RS
              ON ASCENDING KEY HMV-NUM-COMP IN SRT
              ON ASCENDING KEY HMV-NUM-MVTO IN SRT
      *>>>> END
*% END
*% IF INI_INP
      *<<<< INI_INP
           MOVE ZEROES TO ACM-VAL-MDEB.
           MOVE ZEROES TO ACM-VAL-MHAB.
           MOVE ZEROES TO ACM-VAL-ADEB.
           MOVE ZEROES TO ACM-VAL-AHAB.
           MOVE ZEROES TO ACM-VAL-ADCM.
           MOVE ZEROES TO ACM-VAL-AHCM.
           MOVE FIO-INP TO FIO-CMND.
           PERFORM CTB-FIO-HCP.
           IF NOT FIO-STAT-OKS
               DISPLAY 'ERROR APERTURA ARCHIVO HCP: ABORTO'
               STOP RUN.
           MOVE FIO-INP TO FIO-CMND.
           PERFORM CTB-FIO-CTB.
           IF NOT FIO-STAT-OKS
               DISPLAY 'ERROR APERTURA ARCHIVO CTB: ABORTO'
               STOP RUN.
           MOVE FIO-INP TO FIO-CMND.
           PERFORM CTB-FIO-CDC.
           IF NOT FIO-STAT-OKS
               DISPLAY 'ERROR APERTURA ARCHIVO CDC: ABORTO'
               STOP RUN.
           MOVE FIO-INP TO FIO-CMND.
           PERFORM CTB-FIO-ACM.
           IF NOT FIO-STAT-OKS
               DISPLAY 'ERROR APERTURA ARCHIVO ACM: ABORTO'
               STOP RUN.

           MOVE 'CTB'        TO FIO-SIST.
           MOVE FIO-ACCS-UPD TO FIO-ACCS.
           MOVE FIO-ACC      TO FIO-CMND.
           PERFORM GNS-FIO-TAB.
           MOVE 'CTB' TO FIO-SIST.
           MOVE FIO-INP TO FIO-CMND.
           PERFORM GNS-FIO-TAB.
           IF NOT FIO-STAT-OKS
               DISPLAY 'ERROR APERTURA ARCHIVO CTBTAB: ABORTO'
               STOP RUN.

           DISPLAY ' PERIODO DE PROCESO MMSSAA : '.
           ACCEPT WSS-FEC-FMES.
           MOVE WSS-NUM-SMES TO WSS-NUM-SMAY.
           MOVE WSS-NUM-AMES TO WSS-NUM-AMAY.
           MOVE 'CTB' TO TAB-COD-SIST.
           MOVE 'MES' TO TAB-COD-TTAB.
           MOVE WSS-NUM-MMES TO TAB-COD-CTAB.
           PERFORM BUS-TAB.
           MOVE TAB-GLS-DESC TO WSS-GLS-MMAY.
      *>>>> END
*% END
*% IF LUP_INP
      *<<<< LUP_INP
           IF HMV-NUM-SMOV IN HMV > WSS-NUM-SMES OR
              HMV-NUM-AMOV IN HMV > WSS-NUM-AMES OR
              HMV-NUM-MMOV IN HMV > WSS-NUM-MMES
              GO TO FIN-INP-SRT.
           MOVE HMV-NUM-CCTB TO CTB-NUM-CCTB IN CTB.
           MOVE HMV-NUM-CCDC TO CDC-NUM-CCDC IN CDC.
           IF HMV-IND-TRAT IN HMV = 'D'
               MOVE HMV-VAL-MVTO IN HMV TO WSS-VAL-DEBE IN WSS-MAY
               MOVE ZEROES              TO WSS-VAL-HABE IN WSS-MAY
           ELSE
               MOVE HMV-VAL-MVTO IN HMV TO WSS-VAL-HABE IN WSS-MAY
               MOVE ZEROES              TO WSS-VAL-DEBE IN WSS-MAY.

           MOVE HMV-FEC-FMOV IN HMV TO HCP-FEC-FCPB IN HCP.
           MOVE HMV-NUM-COMP IN HMV TO HCP-NUM-COMP IN HCP.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM CTB-FIO-HCP.
      *>>>> END
*% END
*% IF LUP_OUT
      *<<<< LUP_OUT
           ADD  WSS-VAL-DEBE IN SRT TO WSS-TOT-DSUB.
           ADD  WSS-VAL-HABE IN SRT TO WSS-TOT-ASUB.
           IF WSS-TOT-DSUB > WSS-TOT-ASUB
               MOVE ZEROES TO WSS-VAL-ACRE IN WSS-MAY
               COMPUTE WSS-VAL-DEUD IN WSS-MAY = 
                       WSS-TOT-DSUB - WSS-TOT-ASUB
           ELSE
               MOVE ZEROES TO WSS-VAL-DEUD IN WSS-MAY
               COMPUTE WSS-VAL-ACRE IN WSS-MAY = 
                       WSS-TOT-ASUB - WSS-TOT-DSUB.
      *>>>> END
*% END
*% IF RM
      *<<<< RM
           MOVE HMV-NUM-MVTO IN HMV TO HMV-NUM-MVTO IN SRT.
      *>>>> END
*% END
*% IF FIN_GEN_OUT
      *<<<< FIN_GEN_OUT
           ADD  WSS-VAL-DEBE IN SRT TO WSS-TOT-DCTA.
           ADD  WSS-VAL-HABE IN SRT TO WSS-TOT-ACTA.
           MOVE WSS-VAL-DEUD IN WSS-MAY TO WSS-TOT-SDEU IN WSS-MAY.
           MOVE WSS-VAL-ACRE IN WSS-MAY TO WSS-TOT-SACR IN WSS-MAY.
      *>>>> END
*% END
*% IF EOF
      *<<<< EOF
       COPY CTBBFHCP.
       COPY CTBBFCTB.
       COPY CTBBFCDC.
       COPY CTBBFACM.
       COPY GNSBSTAB.
       COPY GNSBSMSG.
      *>>>> END
*% END
