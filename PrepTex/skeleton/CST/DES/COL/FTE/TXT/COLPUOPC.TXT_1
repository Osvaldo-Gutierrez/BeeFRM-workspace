*%! Codigo adicional para archivo
*% IF PGM_CHI AND PGM_BCI
*%     PGM_PTC = TRUE
*% END
*% IF MI_COMMAREA
      *<<<< MI_COMMAREA
       COPY COLWGENG.
       COPY GNSWGRQA REPLACING ==01  ADR-REQA== BY ==02  SCR-RQA1==.
       COPY GNSWGRQA REPLACING ==01  ADR-REQA== BY ==02  SCR-RQA2==.
           02 SCR-KEY-IRDC                         PIC X(04).
           02 SCR-IND-MRDC                         PIC X(01).
           02 SCR-IND-MITR                         PIC X(01).
           02 SCR-IND-MCOM                         PIC X(01).
           02 SCR-IND-MCYA                         PIC X(01).
           02 SCR-IND-ACAN                         PIC X(03).
           02 SCR-MSC-TCAN                         PIC X(01).
           02 SCR-OPC-STAT                         PIC X(01).
      *>>>>
*% END
*% LARGO_MI_COMMAREA = 2750
*% IF WSS
      *<<<< WSS
*% IF PGM_PTC
       COPY GNSWGQUE.
*% END
       COPY COLBRPOC.
       COPY COLWGRNO.

       COPY COLWGSTO.

      *DAD ini  21-JUL-1992
       COPY COLWGLAV.
      *DAD fin  21-JUL-1992

       01  WSS-VARI.
*% IF PGM_CHI
      *DAD ini  01-OCT-1993   (Memo.22-09-93)
           03  WSS-CIC-COOC        VALUE SPACES       PIC X(03).
               88 VAL-PTM-CON      VALUE 'CON'.
           03  WSS-CON-ICLI        VALUE 50000000     PIC 9(08).
      *DAD fin  01-OCT-1993
*% END
      *DAD ini  15-MAR-1993   (Memo.14-10-92 Pto.1)
           03  WSS-FEC-FCTB.
               05  WSS-NUM-SCTB                       PIC 9(02).
               05  WSS-NUM-ACTB                       PIC 9(02).
               05  WSS-NUM-MCTB                       PIC 9(02).
               05  WSS-NUM-DCTB                       PIC 9(02).
           03  WSS-FEC-FAUX.
               05  WSS-NUM-SAUX                       PIC 9(02).
               05  WSS-NUM-AAUX                       PIC 9(02).
               05  WSS-NUM-MAUX                       PIC 9(02).
               05  WSS-NUM-DAUX                       PIC 9(02).
      *DAD fin  15-MAR-1993
      *DAD ini  21-JUL-1992
           03 WSS-IND-ILDC                             PIC X(01).
           03 WSS-CIC-ILDC.
              05 WSS-CAI-ILDC                          PIC X(04).
              05 WSS-IIC-ILDC                          PIC 9(08).
      *DAD fin  21-JUL-1992
      *DAD ini  22-MAR-1991 
           03  WSS-VAL-PESO                            PIC 9(11).
      *DAD fin  22-MAR-1991 
           03  WSS-VLR.    
               05  WSS-CIC-VCAM.
                   07  WSS-CIC-TVAL               PIC X(01).
                   07  WSS-CIC-CVAL               PIC X(03).
                   07  WSS-CIC-TCAM               PIC X(08).
           03  WSS-NUM-DIGT                       PIC 9(02).
           03  WSS-COD-DIGT                       PIC X(02).
           03  WSS-I                              PIC 9(02).
           03  WSS-COD-TINT                       PIC X(12).
           03  PGM-STAT-POC          VALUE '23'   PIC X(02).
               88 PGM-STAT-POC-OKS   VALUE '00'.
               88 PGM-STAT-POC-NUL   VALUE '  '.
           03  WSS-GLS-DAT1          VALUE SPACES PIC X(01).
           03  BUS-POR-KEYS          VALUE SPACES PIC X(01).
           03  BUS-POR-CLTE          VALUE 'C'    PIC X(01).
           03  WSS-COD-CAUX.
               05  WSS-COD-TOOC                   PIC X(03).
               05  WSS-COD-AOOC                   PIC X(03).
           03  WSS-MRDC              VALUE 0      PIC 9(01).
               88  WSS-MISMO-RDC     VALUE 0.
               88  WSS-OTRO-RDC      VALUE 1.
           03  WSS-MISMO             VALUE 0      PIC 9(01).
           03  WSS-OTRO              VALUE 1      PIC 9(01).
      *ALD
           03  WSS-MEN2.
               05  FILLER            VALUE SPACES PIC X(01).
               05  WSS-SGV-VAL1-EDT  PIC --------------,---.
               05  WSS-GLS-GUI1                    PIC X(01).
               05  WSS-SGV-VAL2-EDT  PIC --------------,---.
           03  NOV-SGV-DIFE          COMP-3        PIC S9(11)V9(4).
           03  NOV-SGV-SNOV          COMP-3        PIC S9(11)V9(4).
           03  WSS-VAL-SVEN          COMP-3        PIC S9(11)V9(4).

           03  WSS-CPT-NOMB.
               05  WSS-CPT-DESC                    PIC X(40).
               05  WSS-CPT-CAI                     PIC X(04).
               05  WSS-CPT-IIC                     PIC X(08).
               05  WSS-GLS-DATA                    PIC X(40).
           03  WSS-CPT-NOMB-R  REDEFINES  WSS-CPT-NOMB PIC X(92).
      *Registros de GENESIS
       COPY GNSBRCIC.
      *Registros de TABLAS
       COPY TABBRCAM.
      *Registros de CLIENTES
       COPY SGCBRDBC.
       COPY SGCBRRCO.
       COPY SGCBROPE.
       COPY SGCBRRCD.
      *Registros de COLOCACIONES
       COPY COLBRRDC.
       COPY COLBRITR.
       COPY COLBRCOM.
       COPY COLBRDLC.
       COPY COLBRVEN.
       COPY COLBREVC.
       COPY COLBRCYA.
       COPY COLBRAUT.
       COPY COLBRCAN.
       COPY COLBRROV.
      *DAD ini  08-ABR-1992   (Memo.02-03-92 Pto.2)
       COPY COLBRRCE.
      *DAD fin  08-ABR-1992
      *
       COPY GNSWGCPT.
       COPY GNSWGSTR.
       COPY GNSWGPES.
       COPY GNSWGCIC.
      *
       COPY COLWGPMP.
      *>>>>
*% END
*% IF WSS_DTC
      *<<<< WSS_DTC
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-POC-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-TAB-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-CIC-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-OFI-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-USR-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-DBC-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-RCO-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-OPE-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-RCD-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-RDC-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-ITR-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-COM-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-CYA-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-AUT-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-CAN-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-ROV-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-DLC-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-VEN-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-EVC-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-CAM-REQA==.
      *DAD ini  08-ABR-1992   (Memo.02-03-92 Pto.2)
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-RCE-REQA==.
      *DAD fin  08-ABR-1992
      *>>>>
*% END
*% IF INI_FIO
      *<<<< INI_FIO
*% IF PGM_PTC
           PERFORM GNS-ERR-QUE.
*% END
           IF SCR-DESDE-CMN
               MOVE SPACES TO SCR-RQA1
                              SCR-RQA2
               MOVE 'O'    TO SCR-IND-OOD
               MOVE 1 TO SCR-IPRO
               GO TO FIN-INI-FIO.
      *JSS IF SCR-INST-EXT = WSS-INST-FTER-CIC
      *        MOVE WSS-INST-NULL TO SCR-INST-EXT
      *        PERFORM ING-FTER-CIC.
       FIN-INI-FIO.
      *>>>>
*% END
*% IF CMN_MOD_RET
      *<<<< CMN_MOD_RET
           MOVE SYS-GET-DATE TO SYS-CMND.
           PERFORM GNS-PRO-SYS.
           MOVE SYS-TSTP TO OPC-STP-ITRN IN OPC.
           IF SCR-CMND = 'MCA'
               GO TO AUT-FND-KEY.
      *BUS-MSC busca glosa de miscelaneo en tabla
      *    MOVE 'COL' TO MSC-COD-SIST.
      *    MOVE 'IEVC' TO MSC-COD-TMSC IN MSC.
      *    MOVE OPC-IND-VSTR IN OPC-FLD TO MSC-COD-CMSC IN MSC.
      *    PERFORM BUS-MSC.
      *    IF MSC-CIC-CMSC IN MSC = 'N'
      *        MOVE 1 TO OPC-NUM-IVEN IN OPC
      *    ELSE
      *        MOVE ZEROES TO OPC-NUM-IVEN IN OPC.
           MOVE 1 TO OPC-NUM-IVEN IN OPC.
      *    MOVE 'M' TO OPC-MSC-STAT IN OPC.
           IF OPC-APROBADA-CTC
               NEXT SENTENCE
           ELSE
               IF OPC-LIQUIDADA-CTC
                   MOVE STO-APROBADA-CTC IN STO-VARI
                                         TO OPC-MSC-STAT IN OPC
               ELSE
                   MOVE STO-MODIFICADA   IN STO-VARI
                                         TO OPC-MSC-STAT IN OPC.
           PERFORM GET-UPD-ITR.
           IF NOT FIO-STAT-OKS
               GO TO FIN-CMN-MOD.
           IF ITR-COD-TINT IN OPC-FLD NOT = 'MULTIPLES'
               MOVE ITR-COD-TINT IN ITR TO WSS-COD-TINT IN WSS-VARI.
           PERFORM GET-UPD-COM.

           PERFORM GET-UPD-CYA.

           PERFORM GET-UPD-ROV.
       AUT-FND-KEY.
           PERFORM GET-UPD-AUT.

           PERFORM GET-UPD-RDC.
           IF NOT FIO-STAT-OKS
               GO TO FIN-CMN-MOD.
      *>>>>
*% END
*% IF FIN_CMN_MOD
      *<<<< FIN_CMN_MOD
           IF NOT FIO-STAT-OKS
      *        Error inconsistencia en la modificacion : informar
               MOVE FIO-MENS TO FRM-MENS
               GO TO FIN-CMN-MOD.
           IF SCR-CMND = 'MCA'
               GO TO MOD-AUT-FND-KEY.
           PERFORM MOD-ITR.
           IF NOT FIO-STAT-OKS
               GO TO FIN-CMN-MOD.
           PERFORM MOD-COM.
           IF NOT FIO-STAT-OKS
               GO TO FIN-CMN-MOD.
           IF PGM-STAT-CYA-OKS
               PERFORM MOD-CYA
               IF NOT FIO-STAT-OKS
                   GO TO FIN-CMN-MOD.
           PERFORM MOD-ROV.
           IF NOT FIO-STAT-OKS
               GO TO FIN-CMN-MOD.
       MOD-AUT-FND-KEY.
           PERFORM MOD-RDC.
           IF NOT FIO-STAT-OKS
               GO TO FIN-CMN-MOD.
           PERFORM MOD-AUT.
           IF NOT FIO-STAT-OKS
               GO TO FIN-CMN-MOD.
      *>>>>
*% END
*% IF INI_CMN_ING
      *<<<< INI_CMN_ING
           MOVE SPACES TO OPC-GLS-FLAG IN OPC.
      *    MOVE 'I'    TO OPC-MSC-STAT IN OPC.
           MOVE STO-INGRESADA IN STO-VARI TO OPC-MSC-STAT IN OPC.
           MOVE SPACES TO OPC-MSC-TACC IN OPC.
      *    MOVE SPACES TO OPC-MSC-STAT IN OPC.
           MOVE SPACES TO OPC-COD-OTRN IN OPC.
           MOVE SPACES TO OPC-COD-ATRN IN OPC.
           MOVE ZEROES TO OPC-NUM-VCOR IN OPC.
           MOVE ZEROES TO OPC-NUM-VCVG IN OPC.
           MOVE ZEROES TO OPC-NUM-VCCO IN OPC.
           MOVE ZEROES TO OPC-NUM-VCCM IN OPC.
           MOVE ZEROES TO OPC-NUM-VCCV IN OPC.
           MOVE ZEROES TO OPC-NUM-TVCC IN OPC.
           MOVE SPACES TO OPC-MSC-TCVE IN OPC.
           MOVE SPACES TO OPC-MSC-BCCR IN OPC.
           MOVE SPACES TO OPC-MSC-VICR IN OPC.
           MOVE SPACES TO OPC-COD-AGES IN OPC.
           MOVE SPACES TO OPC-GLS-DISP IN OPC.
           MOVE SYS-GET-DATE TO SYS-CMND.
           PERFORM GNS-PRO-SYS.
           MOVE SYS-TSTP TO OPC-STP-ITRN IN OPC.
      *BUS-MSC busca glosa de miscelaneo en tabla
      *    MOVE 'COL' TO MSC-COD-SIST.
      *    MOVE 'IEVC' TO MSC-COD-TMSC IN MSC.
      *    MOVE OPC-IND-VSTR IN OPC-FLD TO MSC-COD-CMSC IN MSC.
      *    PERFORM BUS-MSC.
      *    IF MSC-CIC-CMSC IN MSC = 'N'
      *        MOVE 1 TO OPC-NUM-IVEN IN OPC
      *    ELSE
      *        MOVE ZEROES TO OPC-NUM-IVEN IN OPC.
           MOVE 1 TO OPC-NUM-IVEN IN OPC.
      *>>>>
*% END
*% IF CMN_ING
      *<<<< CMN_ING
      *GET-CIC Obtener CIC
           IF OPC-IIC-IOPC IN OPC-FLD NOT > ZEROES
               MOVE 'D'  TO CIC-COD-TCIC IN CIC
               MOVE OPC-COD-OFOC IN OPC-FLD TO CIC-COD-CCIC IN CIC
      *        MOVE SPACES TO CIC-CAI-ICIC IN CIC
               MOVE CIC-GET TO CIC-CMND
               PERFORM PRO-CIC
               IF CIC-STAT NOT = CIC-STAT-OKS
                   MOVE CIC-MENS TO FRM-MENS
                   MOVE FIO-STAT-NEX TO FIO-STAT
                   GO TO FIN-CMN-ING
               ELSE
                   MOVE CIC-CIC-ICIC TO OPC-CIC-IOPC IN OPC
                   MOVE 'GNS' TO MSG-COD-SIST
                   MOVE 'MSGKEY' TO MSG-COD-MENS
                   PERFORM GET-MSG
                   MOVE CIC-CAI-ICIC TO OPC-CAI-IOPC     IN OPC-FLD
                   MOVE CIC-IIC-ICIC TO OPC-IIC-IOPC-EDT IN OPC-EDT
                   MOVE OPC-IIC-IOPC-EDT IN OPC-EDT TO 
                        OPC-IIC-IOPC-ALF IN OPC-FLD

                   MOVE MSG-GLS-DESC            TO WSS-CPT-DESC
                   MOVE OPC-CAI-IOPC IN OPC-FLD TO WSS-CPT-CAI
                   MOVE OPC-IIC-IOPC IN OPC-FLD TO WSS-CPT-IIC
                   MOVE MSG-GLS-DATA            TO WSS-GLS-DATA
                   MOVE WSS-CPT-NOMB-R          TO CPT-STRN
                   PERFORM CPT-BLKS
                   MOVE CPT-STRN                TO FRM-MENS

      *            STRING MSG-GLS-DESC
      *                   OPC-CAI-IOPC     IN OPC-FLD
      *                   OPC-IIC-IOPC-ALF IN OPC-FLD
      *                   MSG-GLS-DATA DELIMITED BY SIZE
      *              INTO FRM-MENS
                   MOVE FRM-MENS TO SCR-MENS-EXT
           ELSE
      *ISP ENGANCHE CON LLAVES DIGITADAS POR EL USUARIO
               MOVE OPC-CAI-IOPC IN OPC-FLD TO CIC-CAI-ICIC
               MOVE OPC-IIC-IOPC IN OPC-FLD TO CIC-IIC-ICIC.
      *>>>>
*% END
*% IF FIN_CMN_ING
      *<<<< FIN_CMN_ING
           IF NOT FIO-STAT-OKS
      *        Error inconsistencia en el ingreso : informar
               MOVE FIO-MENS TO FRM-MENS
               GO TO FIN-CMN-ING.
           PERFORM PUT-RDC.
           IF NOT FIO-STAT-OKS
               GO TO FIN-CMN-ING.
           PERFORM PUT-ITR.
           IF NOT FIO-STAT-OKS
               GO TO FIN-CMN-ING.
           PERFORM PUT-COM.
           IF NOT FIO-STAT-OKS
               GO TO FIN-CMN-ING.
           PERFORM PUT-CYA.
           IF NOT FIO-STAT-OKS
               GO TO FIN-CMN-ING.
           PERFORM PUT-AUT.
           IF NOT FIO-STAT-OKS
               GO TO FIN-CMN-ING.
           PERFORM PUT-ROV.
           IF NOT FIO-STAT-OKS
               GO TO FIN-CMN-ING.
           MOVE CIC-CAI-ICIC TO SCR-CAI-IOPC.
           MOVE CIC-IIC-ICIC TO SCR-IIC-IOPC.
           MOVE  ZEROES      TO SCR-NUM-IDOC.
           IF DBC-IND-ICLI IN OPC-FLD = 'M'
               MOVE 'S'    TO SCR-IND-ENG IN SCR-VEC-ENG(WSS-IDX-IDIR)
               MOVE 'S'    TO SCR-IND-FST IN SCR-VEC-FST(WSS-IDX-IDIR)
           ELSE
               MOVE SPACES TO SCR-IND-ENG IN SCR-VEC-ENG(WSS-IDX-IDIR)
               MOVE SPACES TO SCR-IND-FST IN SCR-VEC-FST(WSS-IDX-IDIR).
           IF ITR-COD-TINT IN OPC-FLD = 'MULTIPLES'
               MOVE 'S'    TO SCR-IND-ENG IN SCR-VEC-ENG(WSS-IDX-IICG)
               MOVE 'S'    TO SCR-IND-FST IN SCR-VEC-FST(WSS-IDX-IICG)
           ELSE
               MOVE SPACES TO SCR-IND-ENG IN SCR-VEC-ENG(WSS-IDX-IICG)
               MOVE SPACES TO SCR-IND-FST IN SCR-VEC-FST(WSS-IDX-IICG).
           IF CYA-IND-TCYA IN OPC-FLD = 'M'
               MOVE 'S'    TO SCR-IND-ENG IN SCR-VEC-ENG(WSS-IDX-ICYA)
               MOVE 'S'    TO SCR-IND-FST IN SCR-VEC-FST(WSS-IDX-ICYA)
           ELSE
               MOVE SPACES TO SCR-IND-ENG IN SCR-VEC-ENG(WSS-IDX-ICYA)
               MOVE SPACES TO SCR-IND-FST IN SCR-VEC-FST(WSS-IDX-ICYA).
           MOVE 'S' TO SCR-IND-ENG IN SCR-VEC-ENG(WSS-IDX-IDLC).
           MOVE 'S' TO SCR-IND-FST IN SCR-VEC-FST(WSS-IDX-IDLC).
           PERFORM EGR-FPEN-CIC.
      *>>>>
*% END
*% IF FIN_CMN_ELI
      *<<<< FIN_CMN_ELI
           IF NOT FIO-STAT-OKS
      *        Error inconsistencia en la eliminacion : informar
               MOVE FIO-MENS TO FRM-MENS
               GO TO FIN-CMN-ELI.
           PERFORM DEL-DLC.
           IF NOT FIO-STAT-OKS
               PERFORM BCK-OUT
               GO TO FIN-CMN-ELI.
           PERFORM DEL-CYA.
           IF NOT FIO-STAT-OKS
               PERFORM BCK-OUT
               GO TO FIN-CMN-ELI.
           PERFORM DEL-ITR.
           IF NOT FIO-STAT-OKS
               PERFORM BCK-OUT
               GO TO FIN-CMN-ELI.
           PERFORM DEL-RDC.
           IF NOT FIO-STAT-OKS
               PERFORM BCK-OUT
               GO TO FIN-CMN-ELI.
           PERFORM DEL-VEN.
           IF NOT FIO-STAT-OKS
               PERFORM BCK-OUT
               GO TO FIN-CMN-ELI.
           PERFORM DEL-EVC.
           IF NOT FIO-STAT-OKS
               PERFORM BCK-OUT
               GO TO FIN-CMN-ELI.
      *DAD ini  08-ABR-1992   (Memo.02-03-92 Pto.2)
           PERFORM DEL-RCE.
           IF NOT FIO-STAT-OKS
               PERFORM BCK-OUT
               GO TO FIN-CMN-ELI.
      *DAD fin  08-ABR-1992
      *>>>>
*% END
*% IF INI_STP_EXIT
      *<<<< INI_STP_EXIT
           IF SCR-CCPP = 'ING'
               MOVE 'COLPIOPC' TO SCR-PROV
               MOVE 'KO43'     TO SCR-NTRV
           ELSE
               MOVE 'COLPQOPC' TO SCR-PROV
               MOVE 'KO40'     TO SCR-NTRV.
      *>>>>
*% END
*% IF PFS_SCR_GFLD
      *<<<< PFS_SCR_GFLD
           IF NOT ( ( SCR-CCPP = 'MOD' OR  SCR-CCPP = 'ACC' OR
                      SCR-CCPP = 'ELI'                      OR
                    ( SCR-CCPP = 'ACT' AND SCR-ACTU = SCR-ACTU-MOD ) )
                      AND ( FRM-FFLD = FRM-FFLD-PF6 OR
                            FRM-FFLD = FRM-FFLD-PF5 ) )
      *>>>>
*% END
*% IF PFS_GET_CON OR PFS_GET_ACC OR PFS_SCR_GKEY
      *<<<< PFS_GET_CON OR PFS_GET_ACC OR PFS_SCR_GKEY
           IF NOT ( FRM-FFLD = FRM-FFLD-PF6 OR FRM-FFLD = FRM-FFLD-PF5 )
      *>>>>
*% END
*% IF FIN_HBL_IKY
      *<<<< FIN_HBL_IKY
           MOVE FRM-CPIM-UBY TO OPC-COD-TOOC-ATR IN OPC-FLD.
           MOVE FRM-CPIM-UBY TO OPC-COD-VCOC-ATR IN OPC-FLD.
           MOVE FRM-CPIM-UBY TO OPC-COD-AOOC-ATR IN OPC-FLD.
           MOVE FRM-CPIM-UBY TO CAN-CAI-IOPC-ATR IN OPC-FLD.
           MOVE FRM-CPIM-UBY TO CAN-IIC-IOPC-ATR IN OPC-FLD.
           MOVE FRM-CPIM-UBY TO CAN-NUM-ICAN-ATR IN OPC-FLD.
      *>>>>
*% END
*% IF FIN_HBL_KEY
      *<<<< FIN_HBL_KEY
           IF SCR-CMND = 'MCA'
      *        PERFORM PRO-IKY-CAN.
               MOVE FRM-CPIM-AEY TO CAN-CAI-IOPC-ATR IN OPC-FLD
               MOVE FRM-CPIM-AEY TO CAN-IIC-IOPC-ATR IN OPC-FLD
               MOVE FRM-CPIM-AEY TO CAN-NUM-ICAN-ATR IN OPC-FLD.
      *>>>>
*% END
*% IF FIN_HBL_FLD
      *<<<< FIN_HBL_FLD
           PERFORM PRO-FLD-BCI.

           MOVE FRM-CPIM-AEY TO OPC-COD-TOOC-ATR IN OPC-FLD.
           MOVE FRM-CPIM-AEY TO OPC-COD-VCOC-ATR IN OPC-FLD.
           MOVE FRM-CPIM-AEY TO OPC-COD-AOOC-ATR IN OPC-FLD.
           MOVE 0            TO OPC-COD-TOOC-LEN IN OPC-FLD.
           MOVE -1           TO OPC-COD-OFOC-LEN IN OPC-FLD.

      *DAD ini  21-JUL-1992   Cambie la ubicacion para leer la POC
           MOVE OPC-COD-VCOC IN OPC-FLD TO POC-COD-VCOC IN POC.
           MOVE OPC-COD-TOOC IN OPC-FLD TO POC-COD-TOOC IN POC.
           MOVE OPC-COD-AOOC IN OPC-FLD TO POC-COD-AOOC IN POC.
           MOVE ZEROES                  TO POC-NUM-IPOC IN POC.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM COL-FIO-POC.
           IF NOT FIO-STAT-OKS
               GO TO CON-HBL-FLD.

           IF POC-COD-COTO IN POC = 'LAC'
               MOVE FRM-CPIM-UBY TO OPC-CAI-ILDC-ATR IN OPC-FLD
               MOVE FRM-CPIM-UBY TO OPC-IIC-ILDC-ATR IN OPC-FLD
               MOVE FRM-CPIM-AEY TO CYA-CAI-ICYA-ATR IN OPC-FLD
               MOVE FRM-CPIM-AEY TO CYA-IIC-ICYA-ATR IN OPC-FLD
               MOVE FRM-CPIM-AEY TO AUT-CAI-ICYA-ATR IN OPC-FLD
               MOVE FRM-CPIM-AEY TO AUT-IIC-ICYA-ATR IN OPC-FLD
           ELSE
               MOVE FRM-CPIM-AEY TO OPC-CAI-ILDC-ATR IN OPC-FLD
               MOVE FRM-CPIM-AEY TO OPC-IIC-ILDC-ATR IN OPC-FLD.
      *DAD fin  21-JUL-1992

           IF SCR-CMND = 'MCA'
               PERFORM PRO-FLD-OPC
               PERFORM PRO-MKY-OPC
               MOVE FRM-CPIM-UBY TO RDC-NUM-DIRE-ATR IN OPC-FLD
      *DAD ini  12-AUG-1992   (Memo.24-07-92 Pto.1)
               MOVE FRM-CPIM-UBY TO OPC-VAL-SEGD-ATR IN OPC-FLD
      *DAD fin  12-AUG-1992
               MOVE FRM-CPIM-UBY TO OPC-COD-CDOC-ATR IN OPC-FLD
               MOVE FRM-CPIM-UBY TO OPC-COD-RMOC-ATR IN OPC-FLD
      *DAD ini  21-AUG-1992   (Memo.07-08-92 Pto.3)
               IF POC-COD-COTO IN POC NOT = 'LAC'
                   MOVE FRM-CPIM-UBY TO AUT-CAI-ICYA-ATR IN OPC-FLD
                   MOVE FRM-CPIM-UBY TO AUT-IIC-ICYA-ATR IN OPC-FLD.
           IF SCR-CMND = 'MCA'
      *DAD fin  21-AUG-1992
               IF DBC-IND-ICLI IN OPC-FLD = 'M' AND
                  SCR-IND-MRDC = 'M'
                   MOVE FRM-CPIM-AEY TO RDC-NUM-DIRE-ATR IN OPC-FLD
                   MOVE 0            TO OPC-COD-OFOC-LEN IN OPC-FLD
      *DAD ini  12-AUG-1992   (Memo.24-07-92 Pto.1)
      *             MOVE -1           TO OPC-COD-RMOC-LEN IN OPC-FLD
                   MOVE -1           TO OPC-VAL-SEGD-LEN IN OPC-FLD
      *DAD fin  12-AUG-1992
               ELSE
                   MOVE 0            TO OPC-COD-OFOC-LEN IN OPC-FLD
                   MOVE -1           TO RDC-NUM-DIRE-LEN IN OPC-FLD.

           IF SCR-CCPP NOT = 'ING'
               GO TO CON-HBL-FLD.
      *DAD ini  21-AUG-1992 / 21-JUL-1992
      *   Cambie la ubicacion para leer la POC
      *DAD fin  21-AUG-1992 / 21-JUL-1992
           IF POC-IND-GARA IN POC > SPACES
               MOVE POC-IND-GARA IN POC TO NUM-NUME
               MOVE NUM-ZERO-S TO NUM-ZERO
               MOVE NUM-SGNO-N TO NUM-SGNO
               MOVE 3          TO NUM-NENT
               MOVE 0          TO NUM-NDCM
               CALL 'GNSPVNUM' USING NUM-VARI
               IF NOT NUM-STAT-OKS
                   MOVE FRM-CPIM-AEY TO OPC-IND-GARA-ATR IN OPC-FLD.
           IF POC-IND-AFER IN POC > SPACES
               MOVE FRM-CPIM-AEY TO OPC-IND-AFER-ATR IN OPC-FLD.
           IF POC-IND-RENO IN POC > SPACES
               MOVE POC-IND-RENO IN POC TO NUM-NUME
               MOVE NUM-ZERO-S TO NUM-ZERO
               MOVE NUM-SGNO-N TO NUM-SGNO
               MOVE 3          TO NUM-NENT
               MOVE 0          TO NUM-NDCM
               CALL 'GNSPVNUM' USING NUM-VARI
               IF NOT NUM-STAT-OKS
                  MOVE FRM-CPIM-AEY TO OPC-IND-RENO-ATR IN OPC-FLD.
      *     IF POC-COD-TIPT IN POC > SPACES OR
      *        POC-COD-CVTI IN POC > SPACES OR
      *        POC-MSC-TFPR IN POC > SPACES OR
      *        POC-NUM-PREP IN POC > ZEROES OR
      *        POC-MSC-UTPR IN POC > SPACES
      *         MOVE FRM-CPIM-AEY TO ITR-COD-TINT-ATR IN OPC-FLD.
           IF POC-COD-TCOM IN POC > SPACES
               MOVE FRM-CPIM-AEY TO COM-COD-TINT-ATR IN OPC-FLD.
           IF POC-MSC-MCVF IN POC > SPACES
               MOVE FRM-CPIM-AEY TO OPC-MSC-MCVF-ATR IN OPC-FLD.
           IF POC-COD-SEGD IN POC > SPACES
               MOVE POC-COD-SEGD IN POC TO NUM-NUME
               MOVE NUM-ZERO-S TO NUM-ZERO
               MOVE NUM-SGNO-N TO NUM-SGNO
               MOVE 6          TO NUM-NENT
               MOVE 0          TO NUM-NDCM
               CALL 'GNSPVNUM' USING NUM-VARI
               IF NOT NUM-STAT-OKS
                   MOVE FRM-CPIM-AEY TO OPC-COD-SEGD-ATR IN OPC-FLD.
           IF POC-COD-CDOC IN POC > SPACES
               MOVE POC-COD-CDOC IN POC TO NUM-NUME
               MOVE NUM-ZERO-S TO NUM-ZERO
               MOVE NUM-SGNO-N TO NUM-SGNO
               MOVE 3          TO NUM-NENT
               MOVE 0          TO NUM-NDCM
               CALL 'GNSPVNUM' USING NUM-VARI
               IF NOT NUM-STAT-OKS
                   MOVE FRM-CPIM-AEY TO OPC-COD-CDOC-ATR IN OPC-FLD.
           IF POC-IND-TABO IN POC > SPACES
               MOVE POC-IND-TABO IN POC TO NUM-NUME
               MOVE NUM-ZERO-S TO NUM-ZERO
               MOVE NUM-SGNO-N TO NUM-SGNO
               MOVE 5          TO NUM-NENT
               MOVE 0          TO NUM-NDCM
               CALL 'GNSPVNUM' USING NUM-VARI
               IF NOT NUM-STAT-OKS
                   MOVE FRM-CPIM-AEY TO CYA-IND-TCYA-ATR IN OPC-FLD.
       CON-HBL-FLD.
           IF DBC-IND-ICLI IN OPC-FLD = 'M' AND
              SCR-IND-MRDC = 'M'
               MOVE FRM-CPIM-AEY TO DBC-IND-ICLI-ATR IN OPC-FLD
               MOVE FRM-CPIM-AEY TO DBC-GLS-ICLI-ATR IN OPC-FLD
               MOVE FRM-CPIM-AEY TO DBC-NUM-ICLI-ATR IN OPC-FLD
               MOVE FRM-CPIM-AEY TO DBC-VRF-ICLI-ATR IN OPC-FLD
               MOVE FRM-CPIM-AEY TO DBC-GLS-NOMC-ATR IN OPC-FLD
               MOVE FRM-CPIM-AEY TO RDC-NUM-DIRE-ATR IN OPC-FLD.
           MOVE FRM-CPIM-AEY TO ITR-COD-TINT-ATR IN OPC-FLD.
           IF ITR-COD-TINT IN OPC-FLD = 'MULTIPLES' AND
              SCR-IND-MITR = 'M'
               MOVE FRM-CPIM-AEY TO ITR-SGV-TINT-ATR IN OPC-FLD.
           IF COM-COD-TINT IN OPC-FLD = 'MULTIPLES' AND
              SCR-IND-MCOM = 'M'
               MOVE FRM-CPIM-AEY TO COM-COD-TINT-ATR IN OPC-FLD
               MOVE FRM-CPIM-AEY TO COM-SGV-TINT-ATR IN OPC-FLD.
           IF CYA-IND-TCYA IN OPC-FLD = 'M' AND
              SCR-IND-MCYA = 'M'
               MOVE FRM-CPIM-AEY TO CYA-IND-TCYA-ATR IN OPC-FLD
               MOVE FRM-CPIM-AEY TO CYA-CAI-ICYA-ATR IN OPC-FLD
               MOVE FRM-CPIM-AEY TO CYA-IIC-ICYA-ATR IN OPC-FLD.
      *>>>>
*% END
*% IF EOF
      *<<<< EOF
*% IF PGM_PTC
       COPY GNSBGQUE.
*% END
       BCK-OUT SECTION.
       INI-BCK-OUT.
           MOVE FIO-BCK-OUT TO FIO-CMND.
           PERFORM COL-FIO-RDC.
           IF FIO-STAT-OKS
      *        Para informar que el backout se realizo con exito
               MOVE '49' TO FIO-STAT.
       FIN-BCK-OUT.
           EXIT.

      * INIT
      * ====

       INI-REG-RDC SECTION.
       INI-INI-REG-RDC.
           MOVE SPACES   TO RDC-GLS-FLAG IN RDC.
      *     MOVE SPACES   TO RDC-COD-OINV IN RDC.
           MOVE SPACES   TO RDC-GLS-DISP IN RDC.
       FIN-INI-REG-RDC.
           EXIT.

       INI-REG-ITR SECTION.
       INI-INI-REG-ITR.
           MOVE SPACES   TO ITR-GLS-FLAG IN ITR.
      *     MOVE SPACES   TO ITR-COD-OINV IN ITR.
           MOVE ZEROES   TO ITR-FEC-FTER IN ITR.
           MOVE ZEROES   TO ITR-SGV-SPRD IN ITR.
           MOVE ZEROES   TO ITR-SGV-MNTO IN ITR.
           MOVE SPACES   TO ITR-GLS-DISP IN ITR.
       FIN-INI-REG-ITR.
           EXIT.

       INI-REG-COM SECTION.
       INI-INI-REG-COM.
           MOVE SPACES   TO COM-GLS-FLAG IN COM.
      *     MOVE SPACES   TO COM-COD-OINV IN COM.
           MOVE ZEROES   TO COM-FEC-FTER IN COM.
           MOVE ZEROES   TO COM-SGV-SPRD IN COM.
           MOVE ZEROES   TO COM-SGV-MNTO IN COM.
           MOVE SPACES   TO COM-GLS-DISP IN COM.
       FIN-INI-REG-COM.
           EXIT.

       INI-REG-CYA SECTION.
       INI-INI-REG-CYA.
           MOVE SPACES TO CYA-GLS-FLAG IN CYA.
      *     MOVE SPACES TO CYA-COD-OINV IN CYA.
           MOVE SPACES TO CYA-VRF-ICYA IN CYA.
           MOVE ZEROES TO CYA-SGV-LIQU IN CYA.
           MOVE SPACES TO CYA-GLS-DISP IN CYA.
       FIN-INI-REG-CYA.
           EXIT.

       INI-REG-AUT SECTION.
       INI-INI-REG-AUT.
           MOVE SPACES TO AUT-GLS-FLAG IN AUT.
      *     MOVE SPACES TO AUT-COD-OINV IN AUT.
           MOVE SPACES TO AUT-VRF-ICYA IN AUT.
           MOVE ZEROES TO AUT-SGV-LIQU IN AUT.
           MOVE SPACES TO AUT-GLS-DISP IN AUT.
           MOVE SPACES TO AUT-IND-TCYA IN AUT.
           MOVE SPACES TO AUT-COD-OFIC IN AUT.
           MOVE 'TCYA' TO MSC-CIC-TMSC IN MSC.
           MOVE 'CCTE' TO MSC-CIC-CMSC IN MSC.
           MOVE 'TAB' TO FIO-SIST.
           MOVE 'MSC-CIC-TABL' TO FIO-AKEY.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM GNS-FIO-MSC.
           IF FIO-STAT-OKS
               MOVE MSC-COD-CMSC IN MSC TO AUT-IND-TCYA IN AUT.
           MOVE SPACES TO AUT-COD-OFIC IN AUT.
           MOVE AUT-CAI-ICYA IN OPC-FLD TO OPE-CAI-IOPE IN OPE.
           MOVE AUT-IIC-ICYA IN OPC-FLD TO OPE-IIC-IOPE IN OPE.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM SGC-FIO-OPE.
           IF FIO-STAT-OKS
               MOVE OPE-COD-OFOP IN OPE TO AUT-COD-OFIC IN AUT.
       FIN-INI-REG-AUT.
           EXIT.

       INI-REG-ROV SECTION.
       INI-INI-REG-ROV.
           MOVE SPACES   TO ROV-GLS-FLAG IN ROV.
      *     MOVE SPACES   TO ROV-COD-OINV IN ROV.
           MOVE SPACES   TO ROV-COD-VCVR IN ROV.
           MOVE SPACES   TO ROV-GLS-DISP IN ROV.
       FIN-INI-REG-ROV.
           EXIT.

      * GET-UPD
      * =======

       GET-UPD-RDC SECTION.
       INI-GET-UPD-RDC.
           IF DBC-IND-ICLI IN OPC-FLD = 'M'
               MOVE '00' TO FIO-STAT
               GO TO FIN-GET-UPD-RDC.
           MOVE OPC-CAI-IOPC IN OPC-FLD TO RDC-CIC-IOPC IN RDC.
           MOVE OPC-IIC-IOPC IN OPC-FLD TO RDC-IIC-IOPC IN RDC.
           MOVE ZEROES                  TO RDC-NUM-IDLC IN RDC.
           MOVE 'RDC-KEY-IDLC'  TO FIO-AKEY.
           MOVE FIO-GET-KEY-UPD TO FIO-CMND.
           PERFORM COL-FIO-RDC.
           IF NOT FIO-STAT-OKS
      *        COMo la transaccion Termina no es necesario hacer UNLOCK de
      *        RDC
      *        comunicar que no se pudo actualizar con mensaje pertinente
                MOVE FIO-MENS TO FRM-MENS
                GO TO FIN-GET-UPD-RDC.
           IF RDC-CAI-ICLI IN OPC-FLD = RDC-CAI-ICLI IN RDC AND
              RDC-IIC-ICLI IN OPC-FLD = RDC-IIC-ICLI IN RDC
               MOVE WSS-MISMO TO WSS-MRDC
           ELSE
               MOVE WSS-OTRO  TO WSS-MRDC.
       FIN-GET-UPD-RDC.
           EXIT.

       GET-UPD-ITR SECTION.
       INI-GET-UPD-ITR.
           IF ITR-COD-TINT IN OPC-FLD = 'MULTIPLES'
               MOVE '00' TO FIO-STAT
               GO TO FIN-GET-UPD-ITR.
           PERFORM GET-CUR-ITR.
           IF NOT FIO-STAT-OKS
                 MOVE '23' TO PGM-STAT-ITR
           ELSE
                 MOVE FIO-GET-KEY-UPD TO FIO-CMND
                 PERFORM COL-FIO-ITR
                 IF NOT FIO-STAT-OKS
      *        COMo la transaccion Termina no es necesario hacer UNLOCK de
      *        ITR
      *        comunicar que no se pudo actualizar con mensaje pertinente
                       MOVE '23' TO PGM-STAT-ITR
                       MOVE FIO-MENS TO FRM-MENS
                  ELSE
                       MOVE '00' TO PGM-STAT-ITR.
       FIN-GET-UPD-ITR.
           EXIT.

       GET-UPD-COM SECTION.
       INI-GET-UPD-COM.
           IF COM-COD-TINT IN OPC-FLD = 'MULTIPLES'
               MOVE '00' TO FIO-STAT
               GO TO FIN-GET-UPD-COM.
               
           PERFORM GET-CUR-COM.
           IF NOT FIO-STAT-OKS
               MOVE '23' TO PGM-STAT-COM
           ELSE
               MOVE FIO-GET-KEY-UPD TO FIO-CMND
               PERFORM COL-FIO-COM
               IF NOT FIO-STAT-OKS
                   MOVE '23' TO PGM-STAT-COM
      *        COMo la transaccion Termina no es necesario hacer UNLOCK de
      *        COM
      *        comunicar que no se pudo actualizar con mensaje pertinente
               ELSE
                    MOVE '00' TO PGM-STAT-COM.
       FIN-GET-UPD-COM.
           EXIT.

       GET-UPD-CYA SECTION.
       INI-GET-UPD-CYA.
           IF CYA-IND-TCYA IN OPC-FLD = 'M'
               MOVE '00' TO FIO-STAT
               GO TO FIN-GET-UPD-CYA.
           MOVE OPC-CIC-IOPC IN OPC TO CYA-CIC-IOPC IN CYA.
           MOVE ZEROES              TO CYA-NUM-ICAN IN CYA.
           MOVE 1                   TO CYA-NUM-ICYA IN CYA.
           MOVE FIO-GET-KEY-UPD TO FIO-CMND.
           PERFORM COL-FIO-CYA.
           IF NOT FIO-STAT-OKS
                 MOVE '23' TO PGM-STAT-CYA
      *        COMo la transaccion Termina no es necesario hacer UNLOCK de
      *        CYA
      *        comunicar que no se pudo actualizar con mensaje pertinente
           ELSE
                MOVE '00' TO PGM-STAT-CYA.
       FIN-GET-UPD-CYA.
           EXIT.

       GET-UPD-AUT SECTION.
       INI-GET-UPD-AUT.
           MOVE OPC-CAI-IOPC IN OPC-FLD TO AUT-CAI-IOPC IN AUT.
           MOVE OPC-IIC-IOPC IN OPC-FLD TO AUT-IIC-IOPC IN AUT.
           MOVE 'AUT'                   TO AUT-NUM-ICAN IN AUT.
           MOVE 1                       TO AUT-NUM-ICYA IN AUT.
           MOVE FIO-GET-KEY-UPD TO FIO-CMND.
           PERFORM COL-FIO-AUT.
           IF NOT FIO-STAT-OKS
               MOVE '23' TO PGM-STAT-AUT
      *        COMo la transaccion Termina no es necesario hacer UNLOCK de
      *        AUT
      *        comunicar que no se pudo actualizar con mensaje pertinente
           ELSE
               MOVE '00' TO PGM-STAT-AUT.
           MOVE '00' TO FIO-STAT.
       FIN-GET-UPD-AUT.
           EXIT.

       GET-UPD-ROV SECTION.
       INI-GET-UPD-ROV.
           MOVE '23' TO PGM-STAT-ROV.
      * MODIFICA ROV
           IF CAN-IIC-IOPC IN OPC-FLD > ZEROES
               MOVE OPC-CIC-IOPC IN OPC TO ROV-CIC-IOPC IN ROV
               MOVE CAN-CAI-IOPC IN OPC-FLD TO ROV-CAI-IOPV IN ROV
               MOVE CAN-IIC-IOPC IN OPC-FLD TO ROV-IIC-IOPV IN ROV
               MOVE CAN-NUM-ICAN IN OPC-FLD TO ROV-NUM-IVCT IN ROV
               MOVE FIO-GET-KEY-UPD TO FIO-CMND
               PERFORM COL-FIO-ROV
               IF FIO-STAT-OKS
                   MOVE FIO-STAT TO PGM-STAT-ROV
               ELSE
      *    Error inconsistencia en la modificacion : hacer LOGTB e informar
                   MOVE FIO-MENS TO FRM-MENS
                   PERFORM BCK-OUT.
       FIN-GET-UPD-ROV.
           EXIT.

      * PUT
      * ===

       PUT-RDC SECTION.
       INI-PUT-RDC.
           IF DBC-IND-ICLI IN OPC-FLD NOT = 'M'
      *         MOVE SYS-TSTP TO RDC-STP-IINV IN RDC
               PERFORM INI-REG-RDC
               MOVE OPC-CIC-IOPC IN OPC TO RDC-CIC-IOPC IN RDC
               MOVE ZEROES              TO RDC-NUM-IDLC IN RDC
               MOVE 100 TO RDC-VAL-LIMD IN RDC
               MOVE FIO-PUT TO FIO-CMND
               PERFORM COL-FIO-RDC
               IF NOT FIO-STAT-OKS
      *        Error inconsistencia en el ingreso : hacer LOGTB e informar
                   MOVE FIO-MENS TO FRM-MENS
                   PERFORM BCK-OUT.
       FIN-PUT-RDC.
           EXIT.

       PUT-ITR SECTION.
       INI-PUT-ITR.
           IF ITR-COD-TINT IN OPC-FLD = 'MULTIPLES'
               GO TO FIN-PUT-ITR.
      *    MOVE SYS-TSTP TO ITR-STP-IINV IN ITR.
           PERFORM INI-REG-ITR.
           MOVE OPC-CIC-IOPC IN OPC TO ITR-CIC-IOPC IN ITR.
           MOVE ZEROES              TO ITR-NUM-ICAN IN ITR.
           MOVE SPACES              TO ITR-CIC-IOPV IN ITR.
           MOVE ZEROES              TO ITR-NUM-IVCT IN ITR.
           MOVE 'INT'               TO ITR-IND-TTAS IN ITR.
           MOVE ZEROES              TO ITR-FEC-FINI IN ITR.
           MOVE OPC-COD-VCOC IN OPC-FLD TO POC-COD-VCOC IN POC.
           MOVE OPC-COD-TOOC IN OPC-FLD TO POC-COD-TOOC IN POC.
           MOVE OPC-COD-AOOC IN OPC-FLD TO POC-COD-AOOC IN POC.
           MOVE ZEROES                  TO POC-NUM-IPOC IN POC.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM COL-FIO-POC.
           IF POC-COD-CVTI IN POC > SPACES
               MOVE ITR-SGV-TINT IN OPC-FLD TO ITR-SGV-SPRD IN ITR
               MOVE ZEROES TO ITR-SGV-TINT IN ITR.
           MOVE POC-COD-TINT IN POC TO ITR-COD-TINT IN ITR.
      *    MOVE ITR-COD-TINT IN OPC-FLD TO ITR-COD-TINT IN ITR.
           MOVE FIO-PUT TO FIO-CMND.
           PERFORM COL-FIO-ITR.
           IF NOT FIO-STAT-OKS
      *        Error inconsistencia en el ingreso : hacer LOGTB e informar
               MOVE FIO-MENS TO FRM-MENS
               PERFORM BCK-OUT.
       FIN-PUT-ITR.
           EXIT.

       PUT-COM SECTION.
       INI-PUT-COM.
           IF COM-COD-TINT IN OPC-FLD NOT = 'MULTIPLES'
               IF COM-COD-TINT IN OPC-FLD > SPACES
      *             MOVE SYS-TSTP TO COM-STP-IINV IN COM
                   PERFORM INI-REG-COM
                   MOVE OPC-CIC-IOPC IN OPC TO COM-CIC-IOPC IN COM
                   MOVE ZEROES              TO COM-NUM-ICAN IN COM
                   MOVE SPACES              TO COM-CIC-IOPV IN COM
                   MOVE ZEROES              TO COM-NUM-IVCT IN COM
                   MOVE 'COM'               TO COM-IND-TTAS IN COM
                   MOVE ZEROES              TO COM-FEC-FINI IN COM
                   MOVE FIO-PUT TO FIO-CMND
                   PERFORM COL-FIO-COM
                   IF NOT FIO-STAT-OKS
      *        Error inconsistencia en el ingreso : hacer LOGTB e informar
                       MOVE FIO-MENS TO FRM-MENS
                       PERFORM BCK-OUT.
       FIN-PUT-COM.
           EXIT.

       PUT-CYA SECTION.
       INI-PUT-CYA.
           IF CYA-IND-TCYA IN OPC-FLD NOT = 'M'
      *         MOVE SYS-TSTP TO CYA-STP-IINV IN CYA
               PERFORM INI-REG-CYA
               MOVE OPC-CIC-IOPC IN OPC TO CYA-CIC-IOPC IN CYA
               MOVE ZEROES              TO CYA-NUM-ICAN IN CYA
               MOVE 1                   TO CYA-NUM-ICYA IN CYA
               MOVE OPC-SGV-LIQU IN OPC-FLD TO CYA-SGV-LIQU IN CYA
               MOVE FIO-PUT TO FIO-CMND
               PERFORM COL-FIO-CYA
               IF NOT FIO-STAT-OKS
      *        Error inconsistencia en el ingreso : hacer LOGTB e informar
                   MOVE FIO-MENS TO FRM-MENS
                   PERFORM BCK-OUT.
       FIN-PUT-CYA.
           EXIT.

       PUT-AUT SECTION.
       INI-PUT-AUT.
           IF AUT-IIC-ICYA IN OPC-FLD > ZEROES
               IF AUT-CAI-ICYA IN OPC-FLD > SPACES OR
                  AUT-IIC-ICYA IN OPC-FLD > ZEROES
      *         MOVE SYS-TSTP TO AUT-STP-IINV IN AUT
               PERFORM INI-REG-AUT
               MOVE OPC-CIC-IOPC IN OPC TO AUT-CIC-IOPC IN AUT
               MOVE 'AUT'               TO AUT-NUM-ICAN IN AUT
               MOVE 1                   TO AUT-NUM-ICYA IN AUT
               MOVE FIO-PUT TO FIO-CMND
               PERFORM COL-FIO-AUT
               IF NOT FIO-STAT-OKS
      *        Error inconsistencia en el ingreso : hacer LOGTB e informar
                   MOVE FIO-MENS TO FRM-MENS
                   PERFORM BCK-OUT.
       FIN-PUT-AUT.
           EXIT.

       PUT-ROV SECTION.
       INI-PUT-ROV.
      * INGRESA ROV SOLO PARA NOVACIONES
           PERFORM BUS-CIC-RENO
           IF OPC-IND-RENO IN OPC = RNO-CIC-NOV IN RNO-VARI
               PERFORM INI-REG-ROV
               MOVE OPC-CIC-IOPC IN OPC TO ROV-CIC-IOPC IN ROV
               MOVE CAN-CAI-IOPC IN OPC-FLD TO ROV-CAI-IOPV IN ROV
               MOVE CAN-IIC-IOPC IN OPC-FLD TO ROV-IIC-IOPV IN ROV
               MOVE CAN-NUM-ICAN IN OPC-FLD TO ROV-NUM-IVCT IN ROV
               PERFORM RET-ROV-OPC
               MOVE FIO-PUT TO FIO-CMND
               PERFORM COL-FIO-ROV
               IF NOT FIO-STAT-OKS
      *        Error inconsistencia en el ingreso : hacer LOGTB e informar
                   MOVE FIO-MENS TO FRM-MENS
                   PERFORM BCK-OUT.
       FIN-PUT-ROV.
           EXIT.

      * MOD
      * ===

       MOD-RDC SECTION.
       INI-MOD-RDC.
           IF DBC-IND-ICLI IN OPC-FLD = 'M'
               GO TO FIN-MOD-RDC.
           IF WSS-MISMO-RDC
      *         MOVE SYS-TSTP TO RDC-STP-IINV IN RDC
               MOVE FIO-MOD TO FIO-CMND
               PERFORM COL-FIO-RDC
           ELSE
               MOVE FIO-DEL TO FIO-CMND
               PERFORM COL-FIO-RDC
               IF NOT FIO-STAT-OKS
      *        Error inconsistencia en la eliminacion : hacer LOGTB e informar
                   MOVE FIO-MENS TO FRM-MENS
                   PERFORM BCK-OUT
                   GO TO FIN-MOD-RDC
               ELSE
                   PERFORM PUT-RDC.
           IF NOT FIO-STAT-OKS
      *        Error inconsistencia en la eliminacion : hacer LOGTB e informar
               MOVE FIO-MENS TO FRM-MENS
               PERFORM BCK-OUT
               GO TO FIN-MOD-RDC.
       FIN-MOD-RDC.
           EXIT.

       MOD-ITR SECTION.
       INI-MOD-ITR.
           IF ITR-COD-TINT IN OPC-FLD = 'MULTIPLES'
               GO TO FIN-MOD-ITR.
      *    MOVE SYS-TSTP TO ITR-STP-IINV IN ITR.
           MOVE WSS-COD-TINT IN WSS-VARI TO ITR-COD-TINT IN ITR.
           IF ITR-COD-CVTI IN ITR > SPACES
               MOVE ITR-SGV-TINT IN OPC-FLD TO ITR-SGV-SPRD IN ITR
               MOVE ZEROES TO ITR-SGV-TINT IN ITR.
           MOVE FIO-MOD TO FIO-CMND.
           PERFORM COL-FIO-ITR.
           IF NOT FIO-STAT-OKS
      *    Error inconsistencia en la modificacion : hacer LOGTB e informar
               MOVE FIO-MENS TO FRM-MENS
               PERFORM BCK-OUT.
       FIN-MOD-ITR.
           EXIT.

       MOD-COM SECTION.
       INI-MOD-COM.
           IF COM-COD-TINT IN OPC-FLD = 'MULTIPLES'
               GO TO FIN-MOD-COM.
           IF PGM-STAT-COM-OKS
               IF COM-COD-TINT IN OPC-FLD > SPACES
      *             MOVE SYS-TSTP TO COM-STP-IINV IN COM
                   MOVE FIO-MOD TO FIO-CMND
               ELSE
                   MOVE FIO-DEL TO FIO-CMND
           ELSE
               IF COM-COD-TINT IN OPC-FLD > SPACES
                   PERFORM PUT-COM
                   GO TO FIN-MOD-COM
               ELSE
                   GO TO FIN-MOD-COM.
           PERFORM COL-FIO-COM.
           IF NOT FIO-STAT-OKS
      *    Error inconsistencia en la modificacion : hacer LOGTB e informar
               MOVE FIO-MENS TO FRM-MENS
               PERFORM BCK-OUT.
       FIN-MOD-COM.
           EXIT.

       MOD-CYA SECTION.
       INI-MOD-CYA.
           IF CYA-IND-TCYA IN OPC-FLD NOT = 'M'
      *         MOVE SYS-TSTP TO CYA-STP-IINV IN CYA
               MOVE FIO-MOD TO FIO-CMND
               PERFORM COL-FIO-CYA
               IF NOT FIO-STAT-OKS
      *        Error inconsistencia en la modificacion : hacer LOGTB e informar
                   MOVE FIO-MENS TO FRM-MENS
                   PERFORM BCK-OUT.
       FIN-MOD-CYA.
           EXIT.

       MOD-AUT SECTION.
       INI-MOD-AUT.
           IF PGM-STAT-AUT-OKS
               IF AUT-CAI-ICYA IN OPC-FLD > SPACES OR
                  AUT-IIC-ICYA IN OPC-FLD > ZEROES
                   MOVE FIO-MOD TO FIO-CMND
               ELSE
                   MOVE FIO-DEL TO FIO-CMND
           ELSE
               IF AUT-CAI-ICYA IN OPC-FLD > SPACES OR
                  AUT-IIC-ICYA IN OPC-FLD > ZEROES
                   PERFORM PUT-AUT
                   GO TO FIN-MOD-AUT
               ELSE
                   GO TO FIN-MOD-AUT.
           PERFORM COL-FIO-AUT.
           IF NOT FIO-STAT-OKS
      *        Error inconsistencia en la modificacion : hacer LOGTB e informar
               MOVE FIO-MENS TO FRM-MENS
               PERFORM BCK-OUT.
       FIN-MOD-AUT.
           EXIT.

       MOD-ROV SECTION.
       INI-MOD-ROV.
           IF PGM-STAT-ROV-OKS
                PERFORM RET-ROV-OPC
                MOVE FIO-MOD TO FIO-CMND
                PERFORM COL-FIO-ROV
                IF NOT FIO-STAT-OKS
      *    Error inconsistencia en la modificacion : hacer LOGTB e informar
                   MOVE FIO-MENS TO FRM-MENS
                   PERFORM BCK-OUT.
       FIN-MOD-ROV.
           EXIT.

      *DELETE
      *======

       DEL-DLC SECTION.
       INI-DEL-DLC.
           MOVE OPC-CIC-IOPC IN OPC TO DLC-CIC-IOPC IN DLC.
           MOVE ZEROES              TO DLC-NUM-IDLC IN DLC.
           MOVE FIO-GET-NLS TO FIO-CMND.
           PERFORM COL-FIO-DLC.
           IF NOT ( FIO-STAT-OKS AND
                    OPC-CIC-IOPC IN OPC = DLC-CIC-IOPC IN DLC )
               MOVE '00' TO FIO-STAT
               GO TO FIN-DEL-DLC.
       LUP-DEL-DLC.
           MOVE FIO-GET-KEY-UPD TO FIO-CMND.
           PERFORM COL-FIO-DLC.
           IF NOT FIO-STAT-OKS
               GO TO FIN-DEL-DLC.
           MOVE FIO-DEL TO FIO-CMND.
           PERFORM COL-FIO-DLC.
           IF NOT FIO-STAT-OKS
               GO TO FIN-DEL-DLC.
           MOVE FIO-GET-NXT TO FIO-CMND.
           PERFORM COL-FIO-DLC.
           IF FIO-STAT-OKS AND
              OPC-CIC-IOPC IN OPC = DLC-CIC-IOPC IN DLC
               GO TO LUP-DEL-DLC.
           MOVE '00' TO FIO-STAT.
       FIN-DEL-DLC.
           EXIT.

       DEL-VEN SECTION.
       INI-DEL-VEN.
           MOVE OPC-CIC-IOPC IN OPC TO VEN-CIC-IOPC IN VEN.
           MOVE ZEROES              TO VEN-NUM-IVEN IN VEN.
           MOVE FIO-GET-NLS TO FIO-CMND.
           PERFORM COL-FIO-VEN.
           IF NOT ( FIO-STAT-OKS AND
                    OPC-CIC-IOPC IN OPC = VEN-CIC-IOPC IN VEN )
               MOVE '00' TO FIO-STAT
               GO TO FIN-DEL-VEN.
       LUP-DEL-VEN.
           MOVE FIO-GET-KEY-UPD TO FIO-CMND.
           PERFORM COL-FIO-VEN.
           IF NOT FIO-STAT-OKS
               GO TO FIN-DEL-VEN.
           MOVE FIO-DEL TO FIO-CMND.
           PERFORM COL-FIO-VEN.
           IF NOT FIO-STAT-OKS
               GO TO FIN-DEL-VEN.
           MOVE FIO-GET-NXT TO FIO-CMND.
           PERFORM COL-FIO-VEN.
           IF FIO-STAT-OKS AND
              OPC-CIC-IOPC IN OPC = VEN-CIC-IOPC IN VEN
               GO TO LUP-DEL-VEN.
           MOVE '00' TO FIO-STAT.
       FIN-DEL-VEN.
           EXIT.

       DEL-EVC SECTION.
       INI-DEL-EVC.
           MOVE OPC-CIC-IOPC IN OPC TO EVC-CIC-IOPC IN EVC.
           MOVE ZEROES              TO EVC-NUM-IEVC IN EVC.
           MOVE FIO-GET-NLS TO FIO-CMND.
           PERFORM COL-FIO-EVC.
           IF NOT ( FIO-STAT-OKS AND
                    OPC-CIC-IOPC IN OPC = EVC-CIC-IOPC IN EVC )
               MOVE '00' TO FIO-STAT
               GO TO FIN-DEL-EVC.
       LUP-DEL-EVC.
           MOVE FIO-GET-KEY-UPD TO FIO-CMND.
           PERFORM COL-FIO-EVC.
           IF NOT FIO-STAT-OKS
               GO TO FIN-DEL-EVC.
           MOVE FIO-DEL TO FIO-CMND.
           PERFORM COL-FIO-EVC.
           IF NOT FIO-STAT-OKS
               GO TO FIN-DEL-EVC.
           MOVE FIO-GET-NXT TO FIO-CMND.
           PERFORM COL-FIO-EVC.
           IF FIO-STAT-OKS AND
              OPC-CIC-IOPC IN OPC = EVC-CIC-IOPC IN EVC
               GO TO LUP-DEL-EVC.
           MOVE '00' TO FIO-STAT.
       FIN-DEL-EVC.
           EXIT.

       DEL-RDC SECTION.
       INI-DEL-RDC.
           MOVE OPC-CIC-IOPC IN OPC TO RDC-CIC-IOPC IN RDC.
           MOVE ZEROES              TO RDC-NUM-IDLC IN RDC.
           MOVE 'RDC-KEY-IDLC' TO FIO-AKEY.
           MOVE FIO-GET-NLS    TO FIO-CMND.
           PERFORM COL-FIO-RDC.
           IF NOT ( FIO-STAT-OKS AND
                    RDC-CIC-IOPC IN RDC = OPC-CIC-IOPC IN OPC )
               MOVE '00' TO FIO-STAT
               GO TO FIN-DEL-RDC.
       LUP-DEL-RDC.
           MOVE 'RDC-KEY-IDLC'  TO FIO-AKEY.
           MOVE FIO-GET-KEY-UPD TO FIO-CMND.
           PERFORM COL-FIO-RDC.
           IF NOT FIO-STAT-OKS
               GO TO FIN-DEL-RDC.
           MOVE 'RDC-KEY-IDLC' TO FIO-AKEY.
           MOVE FIO-DEL        TO FIO-CMND.
           PERFORM COL-FIO-RDC.
           IF NOT FIO-STAT-OKS
               GO TO FIN-DEL-RDC.
           MOVE 'RDC-KEY-IDLC' TO FIO-AKEY.
           MOVE FIO-GET-NXT    TO FIO-CMND.
           PERFORM COL-FIO-RDC.
           IF FIO-STAT-OKS AND
              OPC-CIC-IOPC IN OPC = RDC-CIC-IOPC IN RDC
               GO TO LUP-DEL-RDC.
           MOVE '00' TO FIO-STAT.
       FIN-DEL-RDC.
           EXIT.

       DEL-ITR SECTION.
       INI-DEL-ITR.
           MOVE OPC-CIC-IOPC IN OPC TO ITR-CIC-IOPC IN ITR.
           MOVE ZEROES              TO ITR-NUM-ICAN IN ITR.
           MOVE SPACES              TO ITR-CIC-IOPV IN ITR
           MOVE ZEROES              TO ITR-NUM-IVCT IN ITR
           MOVE SPACES              TO ITR-IND-TTAS IN ITR.
           MOVE ZEROES              TO ITR-FEC-FINI IN ITR.
           MOVE 'ITR-KEY-IICG' TO FIO-AKEY.
           MOVE FIO-GET-NLS    TO FIO-CMND.
           PERFORM COL-FIO-ITR.
           IF NOT ( FIO-STAT-OKS AND
                    ITR-CIC-IOPC IN ITR = OPC-CIC-IOPC IN OPC )
               MOVE '00' TO FIO-STAT
               GO TO FIN-DEL-ITR.
       LUP-DEL-ITR.
           MOVE 'ITR-KEY-IICG'  TO FIO-AKEY.
           MOVE FIO-GET-KEY-UPD TO FIO-CMND.
           PERFORM COL-FIO-ITR.
           IF NOT FIO-STAT-OKS
               GO TO FIN-DEL-ITR.
           MOVE 'ITR-KEY-IICG' TO FIO-AKEY.
           MOVE FIO-DEL        TO FIO-CMND.
           PERFORM COL-FIO-ITR.
           IF NOT FIO-STAT-OKS
               GO TO FIN-DEL-ITR.
           MOVE 'ITR-KEY-IICG' TO FIO-AKEY.
           MOVE FIO-GET-NXT    TO FIO-CMND.
           PERFORM COL-FIO-ITR.
           IF FIO-STAT-OKS AND
              OPC-CIC-IOPC IN OPC = ITR-CIC-IOPC IN ITR
               GO TO LUP-DEL-ITR.
           MOVE '00' TO FIO-STAT.
       FIN-DEL-ITR.
           EXIT.

       DEL-CYA SECTION.
       INI-DEL-CYA.
           MOVE OPC-CIC-IOPC IN OPC TO CYA-CIC-IOPC IN CYA.
           MOVE SPACES              TO CYA-NUM-ICAN IN CYA.
           MOVE ZEROES              TO CYA-NUM-ICYA IN CYA.
           MOVE FIO-GET-NLS TO FIO-CMND.
           PERFORM COL-FIO-CYA.
           IF NOT ( FIO-STAT-OKS AND
                    CYA-CIC-IOPC IN CYA = OPC-CIC-IOPC IN OPC )
               MOVE '00' TO FIO-STAT
               GO TO FIN-DEL-CYA.
       LUP-DEL-CYA.
           MOVE FIO-GET-KEY-UPD TO FIO-CMND.
           PERFORM COL-FIO-CYA.
           IF NOT FIO-STAT-OKS
               GO TO FIN-DEL-CYA.
           MOVE FIO-DEL TO FIO-CMND.
           PERFORM COL-FIO-CYA.
           IF NOT FIO-STAT-OKS
               GO TO FIN-DEL-CYA.
           MOVE FIO-GET-NXT TO FIO-CMND.
           PERFORM COL-FIO-CYA.
           IF FIO-STAT-OKS AND
              OPC-CIC-IOPC IN OPC = CYA-CIC-IOPC IN CYA
               GO TO LUP-DEL-CYA.
           MOVE '00' TO FIO-STAT.
       FIN-DEL-CYA.
           EXIT.

      *DAD ini  08-ABR-1992   (Memo.02-03-92 Pto.2)
       DEL-RCE SECTION.
       INI-DEL-RCE.
           MOVE OPC-CIC-IOPC IN OPC TO RCE-CIC-IOPC IN RCE.
           MOVE ZEROES              TO RCE-NUM-IDLC IN RCE.
           MOVE FIO-GET-NLS TO FIO-CMND.
           PERFORM COL-FIO-RCE.
           IF NOT ( FIO-STAT-OKS AND
                    OPC-CIC-IOPC IN OPC = RCE-CIC-IOPC IN RCE )
               MOVE '00' TO FIO-STAT
               GO TO FIN-DEL-RCE.
       LUP-DEL-RCE.
           MOVE FIO-GET-KEY-UPD TO FIO-CMND.
           PERFORM COL-FIO-RCE.
           IF NOT FIO-STAT-OKS
               GO TO FIN-DEL-RCE.
           MOVE FIO-DEL TO FIO-CMND.
           PERFORM COL-FIO-RCE.
           IF NOT FIO-STAT-OKS
               GO TO FIN-DEL-RCE.
           MOVE FIO-GET-NXT TO FIO-CMND.
           PERFORM COL-FIO-RCE.
           IF FIO-STAT-OKS AND
              OPC-CIC-IOPC IN OPC = RCE-CIC-IOPC IN RCE
               GO TO LUP-DEL-RCE.
           MOVE '00' TO FIO-STAT.
       FIN-DEL-RCE.
           EXIT.
      *DAD fin  08-ABR-1992

       GET-CUR-ITR SECTION.
       INI-GET-CUR-ITR.
           MOVE 'ITR-KEY-IICG' TO FIO-AKEY.
           MOVE OPC-CIC-IOPC IN OPC TO ITR-CIC-IOPC IN ITR.
           MOVE ZEROES              TO ITR-NUM-ICAN IN ITR.
           MOVE SPACES              TO ITR-CIC-IOPV IN ITR
           MOVE ZEROES              TO ITR-NUM-IVCT IN ITR
           MOVE 'INT'               TO ITR-IND-TTAS IN ITR.
           MOVE ZEROES              TO ITR-FEC-FINI IN ITR.
           MOVE FIO-GET-NLS TO FIO-CMND.
           PERFORM COL-FIO-ITR.
           IF NOT ( FIO-STAT-OKS AND
                    ITR-CIC-IOPC IN ITR = OPC-CIC-IOPC IN OPC AND
                    ITR-NUM-ICAN IN ITR = ZEROES              AND
                    ITR-CIC-IOPV IN ITR = SPACES              AND
                    ITR-NUM-IVCT IN ITR = ZEROES              AND
                    ITR-IND-TTAS IN ITR = 'INT'  )
               MOVE '23' TO FIO-STAT.
       FIN-GET-CUR-ITR.
           EXIT.

       GET-CUR-COM SECTION.
       INI-GET-CUR-COM.
           MOVE 'COM-KEY-IICG' TO FIO-AKEY.
           MOVE OPC-CIC-IOPC IN OPC TO COM-CIC-IOPC IN COM.
           MOVE ZEROES              TO COM-NUM-ICAN IN COM.
           MOVE SPACES              TO COM-CIC-IOPV IN COM.
           MOVE ZEROES              TO COM-NUM-IVCT IN COM.
           MOVE 'COM'               TO COM-IND-TTAS IN COM.
           MOVE ZEROES              TO COM-FEC-FINI IN COM.
           MOVE FIO-GET-NLS TO FIO-CMND.
           PERFORM COL-FIO-COM.
           IF NOT ( FIO-STAT-OKS AND
                    COM-CIC-IOPC IN COM = OPC-CIC-IOPC IN OPC AND
                    COM-NUM-ICAN IN COM = ZEROES              AND
                    COM-CIC-IOPV IN COM = SPACES              AND
                    COM-NUM-IVCT IN COM = ZEROES              AND
                    COM-IND-TTAS IN COM = 'COM' )
               MOVE '23' TO FIO-STAT.
       FIN-GET-CUR-COM.
           EXIT.

       COPY COLBFRDC.
       COPY COLBFROV.
       COPY COLBFCYA.
       COPY COLBFAUT.
       COPY COLBFCAN.
       COPY COLBFITR.
       COPY COLBFCOM.
       COPY COLBFDLC.
       COPY COLBFVEN.
       COPY COLBFEVC.
       COPY COLBFPOC.
      *DAD ini  08-ABR-1992   (Memo.02-03-92 Pto.2)
       COPY COLBFRCE.
      *DAD fin  08-ABR-1992
       COPY GNSBGCPT.
       COPY GNSBGSTR.
       COPY GNSBPFEC.
       COPY GNSBGPES.
       COPY GNSBGCIC.
       COPY GNSBFCIC.
       COPY GNSBGCAM.
      *
       COPY TABBVUSR.
       COPY TABBFCAM.
      *
       COPY SGCBGDOM.
       COPY SGCBFDBC.
       COPY SGCBFRCO.
       COPY SGCBFOPE.
       COPY SGCBFRCD.
       COPY COLB3OPC.

       BUS-FAM SECTION.
       INI-BUS-FAM.
       FIN-BUS-FAM.
           EXIT.

      *  CODIGO ADICIONAL PARA ENGANCHE PROGRAMAS

       EGR-FPEN-CIC SECTION.
       INI-EGR-FPEN-CIC.
           PERFORM CRG-TBL-ENG.
           ADD 1 TO SCR-IPRO.
           IF SCR-IND-ENG IN SCR-VEC-ENG(SCR-IPRO) = SPACES
               GO TO INI-EGR-FPEN-CIC.
           MOVE WSS-INST-FPEN-CIC TO SCR-INST-EXT.
           MOVE WSS-PROG(SCR-IPRO) TO SYS-PROG.
           MOVE SCR-VARI TO SYS-CMMA.
           MOVE SCR-TCMA TO SYS-TCMA.
           MOVE SYS-XCTL TO SYS-CMND.
*% IF PGM_PTC
           IF NOT SCR-OFRM-SRV
*% END
           PERFORM GNS-PRO-SYS.
       FIN-EGR-FPEN-CIC.
           EXIT.

       COPY COLBGMPT.
       COPY COLBGRNO.
      *>>>>
*% END
