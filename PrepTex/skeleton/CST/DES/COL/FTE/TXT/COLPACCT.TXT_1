*%! Codigo adicional para archivo
*% RA1 = "CCT"
*% FRM = "CCT"
*% NRA = 1
*% INCLUDE 'PFSALLF78'
*% IF WSS
      *<<<< WSS
       01  WSS-VARI.
           03  WSS-FEC-FCOM.
               05  WSS-NUM-SCOM                       PIC 9(02).
               05  WSS-NUM-ACOM                       PIC 9(02).
               05  WSS-NUM-MCOM                       PIC 9(02).
               05  WSS-NUM-DCOM                       PIC 9(02).
           03  WSS-UBFD.
               05  WSS-TAB-UBFD                      PIC X(03).
               05  WSS-COD-UBFD                      PIC X(12).
           03  BUS-POR-KEYS             VALUE SPACES PIC X(01).
           03  BUS-POR-CLIE             VALUE 'C'    PIC X(01).
           03  WSS-ICOR                 VALUE 0      PIC 9(01).
               88 NO-ASIGNE-CORRELATIVO VALUE 0.
       COPY GNSWGSTR.
       COPY SGCBRDBC.
       COPY COLBROPC.
       COPY COLBRDLC.
       COPY COLBRRDC.
       COPY COLBRRCV.
       COPY COLBRVEN.
       COPY COLBREVC.
       COPY COLBRICG.
       COPY COLBRTOC.
       COPY COLBRRDT.
       COPY COLWGVEN.
       COPY GNSWGCPT.
       COPY GNSWGPES.
       COPY TABBRCAM.
       COPY TABBRVLR.
      *SMC-INI 09.09.1993
       COPY COLWGINT.
      *SMC-FIN 09.09.1993
       COPY GNSWGCVI.
      *>>>>
*% END
*% IF WSS_DTC
      *<<<< WSS_DTC
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-RCV-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-VEN-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-DBC-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-OPC-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-DLC-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-RDC-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-EVC-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-ICG-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-TOC-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-RDT-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-CAM-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-VLR-REQA==.
      *>>>>
*% END
*% IF INI_FIO
      *<<<< INI_FIO
            MOVE ZEROES TO CCT-SGV-GAST IN CCT.
      *>>>>
*% END
*% IF INI_FND_KEY
      *<<<< INI_FND_KEY
      *>>>>
*% END
*% IF FND_KEY
      *<<<< FND_KEY
           IF SCR-CCPP = 'ING'
               PERFORM BUS-COR-CCT
               PERFORM CLR-CCT
               GO TO CON-FND-KEY.

           IF FRM-FFLD = FRM-FFLD-PF7 OR FRM-FFLD-PF8
               PERFORM LEE-NXT-PRV
               IF FIO-STAT-OKS
                   PERFORM SCR-CLRA-CCT
                   MOVE CCT-NUM-IVCT IN CCT TO VEN-NUM-IVCT IN CCT-FLD
                   MOVE CCT-NUM-IVCT IN CCT TO VEN-NUM-IVCT IN VEN
                   GO TO CON-FND-KEY
               ELSE
                   MOVE SPACES TO PGM-STAT
                   IF FRM-FFLD = FRM-FFLD-PF7
                       MOVE 'COL'          TO MSG-COD-SIST
                       MOVE 'CCT    NOPRV' TO MSG-COD-MENS
                       PERFORM GET-MSG
                       MOVE MSG-GLS-DESC TO FRM-MENS
                       MOVE '00'         TO FIO-STAT
                       MOVE SCR-STAT-CON TO SCR-STAT
                       GO TO FIN-FND-KEY
                   ELSE
                       MOVE 'COL'          TO MSG-COD-SIST
                       MOVE 'CCT    NONXT' TO MSG-COD-MENS
                       PERFORM GET-MSG
                       MOVE MSG-GLS-DESC TO FRM-MENS
                       MOVE '00'         TO FIO-STAT
                       MOVE SCR-STAT-CON TO SCR-STAT
                       GO TO FIN-FND-KEY.

           IF CCT-IIC-IOPC IN CCT NOT > ZEROES
               PERFORM ANL-KEY-CCT
               IF NOT FIO-STAT-OKS
                   GO TO NXT-FND-KEY.

           IF CCT-NUM-ICCT IN CCT NOT > ZEROES
               PERFORM BUS-COR-CCT1
               PERFORM CLR-CCT.
       CON-FND-KEY.
      *>>>>
*% END
*% IF FIN_FND_KEY
      *<<<< FIN_FND_KEY
           IF SCR-CCPP = 'ACT' AND NO-ASIGNE-CORRELATIVO AND
              NOT FIO-STAT-OKS
               PERFORM BUS-COR-CCT
               PERFORM CLR-CCT
               MOVE '23' TO FIO-STAT.

           IF FIO-STAT-OKS AND
              (SCR-CCPP = 'MOD' OR SCR-CCPP = 'ELI' OR
              (SCR-CCPP = 'ACT' AND SCR-ACTU = SCR-ACTU-MOD))
                PERFORM BUS-SIG-CCT
                IF FIO-STAT-OKS
                    MOVE 'COL'        TO MSG-COD-SIST
                    MOVE 'NUMICCTINV' TO MSG-COD-MENS
                    PERFORM GET-MSG
                    MOVE MSG-GLS-DESC TO FRM-MENS
                    MOVE '00'         TO FIO-STAT
                    MOVE SCR-STAT-CON TO SCR-STAT
                    GO TO FIN-FND-KEY
                ELSE
                    MOVE '00' TO FIO-STAT.

           IF FIO-STAT-OKS
               MOVE ADR-CCT-REQA TO SCR-CCT-REQA.

           MOVE CCT-CAI-IOPC IN CCT TO OPC-CAI-IOPC IN OPC.
           MOVE CCT-IIC-IOPC IN CCT TO OPC-IIC-IOPC IN OPC.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM COL-FIO-OPC.
           IF NOT FIO-STAT-OKS
               MOVE 'COL'        TO MSG-COD-SIST
               MOVE 'OPCIOPCNEX' TO MSG-COD-MENS
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS
               MOVE '00'         TO FIO-STAT
               MOVE SCR-STAT-CON TO SCR-STAT
               GO TO FIN-FND-KEY.

           MOVE CCT-CAI-IOPC IN CCT     TO VEN-CAI-IOPC IN VEN.
           MOVE CCT-IIC-IOPC IN CCT     TO VEN-IIC-IOPC IN VEN.
           MOVE VEN-NUM-IVCT IN CCT-FLD TO VEN-NUM-IVEN IN VEN.
           MOVE FIO-GET-KEY TO FIO-CMND.
           IF OPC-IND-VSTR IN OPC NOT = 'S'
               PERFORM COL-FIO-VEN
               IF NOT FIO-STAT-OKS
                   MOVE 'COL'        TO MSG-COD-SIST
                   MOVE 'NUMIVCTNEX' TO MSG-COD-MENS
                   PERFORM GET-MSG
                   MOVE MSG-GLS-DESC TO FRM-MENS
                   MOVE '00'         TO FIO-STAT
                   MOVE SCR-STAT-CON TO SCR-STAT
                   GO TO FIN-FND-KEY
               ELSE
                   NEXT SENTENCE
           ELSE
               PERFORM COL-OBT-VEN
               IF NOT VEN-STAT-OKS
                   MOVE 'COL'        TO MSG-COD-SIST
                   MOVE 'NUMIVCTNEX' TO MSG-COD-MENS
                   PERFORM GET-MSG
                   MOVE MSG-GLS-DESC TO FRM-MENS
                   MOVE '00'         TO FIO-STAT
                   MOVE SCR-STAT-CON TO SCR-STAT
                   GO TO FIN-FND-KEY.

           MOVE '00' TO PGM-STAT-VEN.
           PERFORM PUT-VEN-CCT.
           MOVE PGM-STAT-CCT TO FIO-STAT.
           IF BUS-POR-KEYS = BUS-POR-CLIE
               IF FIO-STAT-OKS
                   PERFORM BUS-CCT-SCTB
                   MOVE '00' TO FIO-STAT
                   GO TO NXT-FND-KEY
               ELSE
                   PERFORM BUS-CCT-SCTB
                   MOVE '23' TO FIO-STAT
                   GO TO NXT-FND-KEY.

           IF FIO-STAT-OKS
               PERFORM BUS-CCT-SCTB
               PERFORM ANL-CIC-IOPC
               GO TO NXT-FND-KEY.

           IF ( SCR-CCPP = 'ING' OR SCR-CCPP = 'ACT' )
               PERFORM BUS-CCT-SCTB
               PERFORM ANL-CIC-IOPC
               IF FIO-STAT-OKS
                   MOVE '23' TO FIO-STAT
               ELSE
                   MOVE SCR-STAT-CON TO SCR-STAT
                   MOVE '00' TO FIO-STAT.
       NXT-FND-KEY.
      *DAD ini  27-MAY-1991 
           IF PGM-STAT-OPC-OKS
               IF OPC-MSC-STAT IN OPC NOT = 'A'
                   MOVE 'COL'          TO MSG-COD-SIST
                   MOVE 'OPC    NOACA' TO MSG-COD-MENS
                   PERFORM GET-MSG
                   MOVE MSG-GLS-DESC TO FRM-MENS
                   MOVE SCR-STAT-CON TO SCR-STAT
                   IF SCR-CCPP = 'ING'
                       MOVE '23' TO FIO-STAT
                   ELSE
                       MOVE '00' TO FIO-STAT
               ELSE
               IF OPC-VAL-SCRE IN OPC NOT > ZEROES
                   MOVE 'COL'          TO MSG-COD-SIST
                   MOVE 'OPC    YACAN' TO MSG-COD-MENS
                   PERFORM GET-MSG
                   IF SCR-STPP = SCR-STAT-CON
                       MOVE MSG-GLS-DESC TO FRM-MEN2
                   ELSE
                       MOVE MSG-GLS-DESC TO FRM-MENS
                       MOVE '00'         TO FIO-STAT
                       MOVE SCR-STAT-CON TO SCR-STAT.
      *DAD fin  27-MAY-1991 
      *>>>>
*% END
*% IF FIN_CMN_MOD
      *<<<< FIN_CMN_MOD
           IF NOT FIO-STAT-OKS
      *        Error inconsistencia en el ingreso : informar
               MOVE FIO-MENS TO FRM-MENS
               GO TO FIN-CMN-MOD.

           PERFORM PRO-VEN.
           IF NOT FIO-STAT-OKS
               PERFORM BCK-OUT
               GO TO FIN-CMN-MOD.
      *>>>>
*% END
*% IF INI_CMN_ING
      *<<<< INI_CMN_ING
            MOVE ZEROES TO CCT-SGV-GAST IN CCT.
      *>>>>
*% END
*% IF FIN_CMN_ING
      *<<<< FIN_CMN_ING
           IF NOT FIO-STAT-OKS
      *        Error inconsistencia en el ingreso : informar
               MOVE FIO-MENS TO FRM-MENS
               GO TO FIN-CMN-ING.

           PERFORM PRO-VEN.
           IF NOT FIO-STAT-OKS
               PERFORM BCK-OUT
               GO TO FIN-CMN-ING.
      *>>>>
*% END
*% IF CMN_ACC
      *<<<< CMN_ACC
           MOVE FIO-MOD TO FIO-CMND.
           PERFORM COL-FIO-CCT.
           IF NOT FIO-STAT-OKS
               PERFORM BCK-OUT
               GO TO FIN-CMN-ACC.

           MOVE CCT-CAI-IOPC IN CCT-FLD TO VEN-CAI-IOPC IN VEN.
           MOVE CCT-IIC-IOPC IN CCT-FLD TO VEN-IIC-IOPC IN VEN.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM COL-FIO-VEN.
           IF NOT FIO-STAT-OKS
               GO TO FIN-CMN-ACC.

           MOVE FIO-GET-KEY-UPD TO FIO-CMND.
           PERFORM COL-FIO-VEN.
           MOVE 'M' TO VEN-IND-SCTB IN VEN.
           MOVE FIO-MOD TO FIO-CMND.
           PERFORM COL-FIO-VEN.
           IF NOT FIO-STAT-OKS
               PERFORM BCK-OUT
               GO TO FIN-CMN-ACC.
           MOVE 'COL'       TO MSG-COD-SIST.
           MOVE 'CMNDEXCOK' TO MSG-COD-MENS.
           PERFORM GET-MSG.
           MOVE MSG-GLS-DESC TO FRM-MENS.
           MOVE '00'         TO FIO-STAT.
      *>>>>
*% END
*% IF FIN_CMN_ELI
      *<<<< FIN_CMN_ELI
           IF NOT FIO-STAT-OKS
      *        Error inconsistencia en el ingreso : informar
               MOVE FIO-MENS TO FRM-MENS
               GO TO FIN-CMN-ELI.

           PERFORM PRO-VEN.
           IF NOT FIO-STAT-OKS
               PERFORM BCK-OUT
               GO TO FIN-CMN-ELI.
      *>>>>
*% END
*% IF FIN_HBL_FLD
      *<<<< FIN_HBL_FLD
           IF SCR-CMND = 'EXC'
               MOVE FRM-CPIM-AEY TO CCT-IND-SCTB-ATR IN CCT-FLD
               MOVE 'M'          TO CCT-IND-SCTB     IN CCT-FLD.
      *>>>>
*% END
*% IF INI_SCR_TRL
      *<<<< INI_SCR_TRL
      *BUS-USR busca usuario en tablas
           IF SCR-STAT NOT = SCR-STAT-CON
               IF SCR-USER > SPACES
                   MOVE SCR-USER TO CCT-COD-RCCT IN CCT-FLD
                   MOVE SCR-USER TO CCT-COD-RCCT IN CCT
                   MOVE SCR-USER TO USR-COD-USER IN USR
                   PERFORM BUS-USR
                   MOVE USR-GLS-DESC IN USR TO FRM-GLS-RCCT IN CCT-FLD.
      *>>>>
*% END
*% IF EOF_PQ
      *<<<< EOF_PQ
       RET-ALL-CCT SECTION.
       INI-RET-ALL-CCT.
           PERFORM KEY-ALL-CCT.
           PERFORM RET-OPC-CCT.
           PERFORM RET-CCT-CCT.
           PERFORM RET-VEN-CCT.
           PERFORM RET-DLC-CCT.
       FIN-RET-ALL-CCT.
           EXIT.

       RET-OPC-CCT SECTION.
       INI-RET-OPC-CCT.
           MOVE OPC-MSC-TVOC IN CCT-FLD TO OPC-MSC-TVOC IN OPC.
           MOVE OPC-COD-TOOC IN CCT-FLD TO OPC-COD-TOOC IN OPC.
           MOVE OPC-COD-OFOC IN CCT-FLD TO OPC-COD-OFOC IN OPC.
           MOVE OPC-NUM-DCOL IN CCT-FLD TO OPC-NUM-DCOL IN OPC.
           MOVE OPC-NUM-MCOL IN CCT-FLD TO OPC-NUM-MCOL IN OPC.
           MOVE OPC-NUM-SCOL IN CCT-FLD TO OPC-NUM-SCOL IN OPC.
           MOVE OPC-NUM-ACOL IN CCT-FLD TO OPC-NUM-ACOL IN OPC.
           MOVE OPC-COD-VCOC IN CCT-FLD TO OPC-COD-VCOC IN OPC.
       FIN-RET-OPC-CCT.
           EXIT.
       
       RET-CCT-CCT SECTION.
       INI-RET-CCT-CCT.
           MOVE CCT-IND-SCTA IN CCT-FLD TO CCT-IND-SCTA IN CCT.
           MOVE CCT-NUM-DCCT IN CCT-FLD TO CCT-NUM-DCCT IN CCT.
           MOVE CCT-NUM-MCCT IN CCT-FLD TO CCT-NUM-MCCT IN CCT.
           MOVE CCT-NUM-SCCT IN CCT-FLD TO CCT-NUM-SCCT IN CCT.
           MOVE CCT-NUM-ACCT IN CCT-FLD TO CCT-NUM-ACCT IN CCT.
           MOVE CCT-IND-SCTB IN CCT-FLD TO CCT-IND-SCTB IN CCT.
           MOVE CCT-COD-RCCT IN CCT-FLD TO CCT-COD-RCCT IN CCT.
           MOVE CCT-IND-ACEL IN CCT-FLD TO CCT-IND-ACEL IN CCT.
      *<<<< FIN_RET_CCT_CCT
           IF CCT-IND-SCTB IN CCT-FLD = 'VIG'
               MOVE SPACES TO CCT-IND-SCTB IN CCT.
      *>>>>
      *<<<< FIN_RET_CCT_CCT
           MOVE CCT-CAI-IOPC IN CCT-FLD TO CCT-CAI-IOPV IN CCT.
           MOVE CCT-IIC-IOPC IN CCT-FLD TO CCT-IIC-IOPV IN CCT.
           MOVE VEN-NUM-IVCT IN CCT-FLD TO CCT-NUM-IVCT IN CCT.
      *>>>>
       FIN-RET-CCT-CCT.
           EXIT.
       
       RET-VEN-CCT SECTION.
       INI-RET-VEN-CCT.
           MOVE VEN-VAL-SCAP IN CCT-FLD TO VEN-VAL-SCAP IN VEN.
           MOVE VEN-NUM-DVEN IN CCT-FLD TO VEN-NUM-DVEN IN VEN.
           MOVE VEN-NUM-MVEN IN CCT-FLD TO VEN-NUM-MVEN IN VEN.
           MOVE VEN-NUM-SVEN IN CCT-FLD TO VEN-NUM-SVEN IN VEN.
           MOVE VEN-NUM-AVEN IN CCT-FLD TO VEN-NUM-AVEN IN VEN.
           MOVE VEN-VAL-SFIN IN CCT-FLD TO VEN-VAL-SFIN IN VEN.
           MOVE VEN-NUM-DIMV IN CCT-FLD TO VEN-NUM-DIMV IN VEN.
           MOVE VEN-NUM-MIMV IN CCT-FLD TO VEN-NUM-MIMV IN VEN.
           MOVE VEN-NUM-SIMV IN CCT-FLD TO VEN-NUM-SIMV IN VEN.
           MOVE VEN-NUM-AIMV IN CCT-FLD TO VEN-NUM-AIMV IN VEN.
           MOVE VEN-IND-SCBZ IN CCT-FLD TO VEN-IND-SCBZ IN VEN.
           MOVE VEN-IND-SCTB IN CCT-FLD TO VEN-IND-SCTB IN VEN.
       FIN-RET-VEN-CCT.
           EXIT.
       
       RET-DLC-CCT SECTION.
       INI-RET-DLC-CCT.
           MOVE DLC-VAL-SDLC IN CCT-FLD TO DLC-VAL-SDLC IN DLC.
           MOVE DLC-COD-UBFD IN CCT-FLD TO DLC-COD-UBFD IN DLC.
           MOVE DLC-IND-SCTB IN CCT-FLD TO DLC-IND-SCTB IN DLC.
       FIN-RET-DLC-CCT.
           EXIT.
      *>>>>
*% END
*% IF EOF_PU
      *<<<< EOF_PU
       PUT-ALL-CCT SECTION.
       INI-PUT-ALL-CCT.
           PERFORM PUT-OPC-CCT.
           PERFORM PUT-CCT-CCT.
           PERFORM PUT-VEN-CCT.
           PERFORM PUT-DLC-CCT.
      *<<<< FIN_PUT_ALL_CCT
      *     IF CCT-NUM-ICCT IN CCT-FLD = 1 AND
      *       (SCR-CCPP = 'ING' OR (SCR-CCPP = 'ACT' AND
      *        SCR-ACTU = SCR-ACTU-ING))
      *         MOVE VEN-IND-SCTB IN CCT-FLD TO CCT-IND-SCTA IN CCT-FLD
      *         IF CCT-IND-SCTA IN CCT-FLD > SPACES
      *             MOVE 'COL' TO MSC-COD-SIST
      *             MOVE 'SCTB' TO MSC-COD-TMSC IN MSC
      *             MOVE CCT-IND-SCTA IN CCT-FLD TO MSC-COD-CMSC IN MSC
      *             PERFORM BUS-MSC
      *             MOVE MSC-GLS-DESC IN MSC TO FRM-GLS-SCTA IN CCT-FLD.
      *>>>>
       FIN-PUT-ALL-CCT.
           EXIT.
       
       PUT-OPC-CCT SECTION.
       INI-PUT-OPC-CCT.
           IF PGM-STAT-OPC-NUL
               GO TO FIN-PUT-OPC-CCT.
           IF NOT PGM-STAT-OPC-OKS
               PERFORM CLR-OPC-CCT
               GO TO FIN-PUT-OPC-CCT.
           MOVE OPC-MSC-TVOC IN OPC TO OPC-MSC-TVOC IN CCT-FLD.
           MOVE OPC-COD-TOOC IN OPC TO OPC-COD-TOOC IN CCT-FLD.
           MOVE OPC-COD-OFOC IN OPC TO OPC-COD-OFOC IN CCT-FLD.
           MOVE OPC-NUM-DCOL IN OPC TO OPC-NUM-DCOL IN CCT-FLD.
           MOVE OPC-NUM-MCOL IN OPC TO OPC-NUM-MCOL IN CCT-FLD.
           MOVE OPC-NUM-SCOL IN OPC TO OPC-NUM-SCOL IN CCT-FLD.
           MOVE OPC-NUM-ACOL IN OPC TO OPC-NUM-ACOL IN CCT-FLD.
           MOVE OPC-COD-VCOC IN OPC TO OPC-COD-VCOC IN CCT-FLD.

      *BUS-MSC busca glosa de miscelaneo en tabla
           IF OPC-MSC-TVOC IN CCT-FLD > SPACES
               MOVE 'TAB'                   TO MSC-COD-SIST
               MOVE 'TVAL'                  TO MSC-COD-TMSC IN MSC
               MOVE OPC-MSC-TVOC IN CCT-FLD TO MSC-COD-CMSC IN MSC
               PERFORM BUS-MSC
               MOVE MSC-GLS-DESC IN MSC TO FRM-GLS-TVOC IN CCT-FLD.

      *BUS-TAB busca glosa de codigo en tabla
           IF OPC-COD-TOOC IN CCT-FLD > SPACES
               MOVE 'TAB'                   TO TAB-COD-SIST
               MOVE 'TIO'                   TO TAB-COD-TTAB IN TAB
               MOVE OPC-COD-TOOC IN CCT-FLD TO TAB-COD-CTAB IN TAB
               PERFORM BUS-TAB
               MOVE TAB-GLS-DESC IN TAB TO FRM-GLS-TOOC IN CCT-FLD.

      *BUS-OFI busca oficina en tablas
           IF OPC-COD-OFOC IN CCT-FLD > SPACES
               MOVE OPC-COD-OFOC IN CCT-FLD TO OFI-COD-OFIC IN OFI
               PERFORM BUS-OFI
               MOVE OFI-GLS-DESC IN OFI TO FRM-GLS-OFOC IN CCT-FLD.

      *BUS-TAB busca glosa de codigo en tabla
           IF OPC-COD-VCOC IN CCT-FLD > SPACES
               MOVE 'TAB'                   TO TAB-COD-SIST
               MOVE 'VLR'                   TO TAB-COD-TTAB IN TAB
               MOVE OPC-COD-VCOC IN CCT-FLD TO TAB-COD-CTAB IN TAB
               PERFORM BUS-TAB
               MOVE TAB-GLS-DESC IN TAB TO FRM-GLS-VCOC IN CCT-FLD.
       FIN-PUT-OPC-CCT.
           EXIT.

       PUT-CCT-CCT SECTION.
       INI-PUT-CCT-CCT.
           IF PGM-STAT-CCT-NUL
               GO TO FIN-PUT-CCT-CCT.
           IF NOT PGM-STAT-CCT-OKS
               PERFORM CLR-CCT-CCT
               GO TO FIN-PUT-CCT-CCT.
           MOVE CCT-CAI-IOPC IN CCT TO CCT-CAI-IOPC IN CCT-FLD.
           MOVE CCT-IIC-IOPC IN CCT TO CCT-IIC-IOPC IN CCT-FLD.
           MOVE CCT-NUM-IDLC IN CCT TO CCT-NUM-IDLC IN CCT-FLD.
           MOVE CCT-NUM-ICCT IN CCT TO CCT-NUM-ICCT IN CCT-FLD.
           MOVE CCT-IND-SCTA IN CCT TO CCT-IND-SCTA IN CCT-FLD.
           MOVE CCT-NUM-DCCT IN CCT TO CCT-NUM-DCCT IN CCT-FLD.
           MOVE CCT-NUM-MCCT IN CCT TO CCT-NUM-MCCT IN CCT-FLD.
           MOVE CCT-NUM-SCCT IN CCT TO CCT-NUM-SCCT IN CCT-FLD.
           MOVE CCT-NUM-ACCT IN CCT TO CCT-NUM-ACCT IN CCT-FLD.
           MOVE CCT-IND-SCTB IN CCT TO CCT-IND-SCTB IN CCT-FLD.
           MOVE CCT-COD-RCCT IN CCT TO CCT-COD-RCCT IN CCT-FLD.
           MOVE CCT-IND-ACEL IN CCT TO CCT-IND-ACEL IN CCT-FLD.

      *BUS-MSC busca glosa de miscelaneo en tabla
           IF CCT-IND-SCTA IN CCT-FLD > SPACES
               MOVE 'COL'                   TO MSC-COD-SIST
               MOVE 'SCTB'                  TO MSC-COD-TMSC IN MSC
               MOVE CCT-IND-SCTA IN CCT-FLD TO MSC-COD-CMSC IN MSC
               PERFORM BUS-MSC
               MOVE MSC-GLS-DESC IN MSC TO FRM-GLS-SCTA IN CCT-FLD.

      *BUS-MSC busca glosa de miscelaneo en tabla
           IF CCT-IND-SCTB IN CCT-FLD > SPACES
               MOVE 'COL'                   TO MSC-COD-SIST
               MOVE 'SCTB'                  TO MSC-COD-TMSC IN MSC
               MOVE CCT-IND-SCTB IN CCT-FLD TO MSC-COD-CMSC IN MSC
               PERFORM BUS-MSC
               MOVE MSC-GLS-DESC IN MSC TO FRM-GLS-SCTB IN CCT-FLD.


      *BUS-USR busca usuario en tablas
           IF CCT-COD-RCCT IN CCT-FLD > SPACES
               MOVE CCT-COD-RCCT IN CCT-FLD TO USR-COD-USER IN USR
               PERFORM BUS-USR
               MOVE USR-GLS-DESC IN USR TO FRM-GLS-RCCT IN CCT-FLD.
       FIN-PUT-CCT-CCT.
           EXIT.

       PUT-DLC-CCT SECTION.
       INI-PUT-DLC-CCT.
           IF PGM-STAT-DLC-NUL
               GO TO FIN-PUT-DLC-CCT.
           IF NOT PGM-STAT-DLC-OKS
               PERFORM CLR-DLC-CCT
               GO TO FIN-PUT-DLC-CCT.
           MOVE DLC-VAL-SDLC IN DLC TO DLC-VAL-SDLC IN CCT-FLD.
           MOVE DLC-COD-UBFD IN DLC TO DLC-COD-UBFD IN CCT-FLD.
           MOVE DLC-IND-SCTB IN DLC TO DLC-IND-SCTB IN CCT-FLD.

      *BUS-MSC busca glosa de miscelaneo en tabla
           IF DLC-IND-SCTB IN CCT-FLD > SPACES
               MOVE 'COL'                   TO MSC-COD-SIST
               MOVE 'SCTB'                  TO MSC-COD-TMSC IN MSC
               MOVE DLC-IND-SCTB IN CCT-FLD TO MSC-COD-CMSC IN MSC
               PERFORM BUS-MSC
               MOVE MSC-GLS-DESC IN MSC TO FRM-GLS-SCTB IN CCT-FLD.
      *<<<< FIN_PUT_DLC_CCT
      *BUS-TAB busca glosa de codigo en tabla
           MOVE DLC-COD-UBFD IN CCT-FLD TO WSS-UBFD.
           IF WSS-TAB-UBFD NOT > SPACES
               MOVE SPACES TO FRM-GLS-UBFD IN CCT-FLD
           ELSE
           IF WSS-TAB-UBFD = 'OFI'
               MOVE WSS-COD-UBFD TO OFI-COD-OFIC IN OFI
               PERFORM BUS-OFI
               IF MSG-COD-MENS = 'COD    NEX'
                   MOVE SPACES TO FRM-GLS-UBFD IN CCT-FLD
               ELSE
                   MOVE OFI-GLS-DESC IN OFI TO FRM-GLS-UBFD IN CCT-FLD
            ELSE
               MOVE 'TAB'        TO TAB-COD-SIST
               MOVE WSS-TAB-UBFD TO TAB-COD-TTAB IN TAB
               MOVE WSS-COD-UBFD TO TAB-COD-CTAB IN TAB
               PERFORM BUS-TAB
               MOVE TAB-GLS-DESC IN TAB TO FRM-GLS-UBFD IN CCT-FLD.
      *      IF CCT-NUM-ICCT IN CCT-FLD = 1 AND
      *        (SCR-CCPP = 'ING' OR (SCR-CCPP = 'ACT' AND
      *         SCR-ACTU = SCR-ACTU-ING))
      *          MOVE DLC-IND-SCTB IN CCT-FLD TO CCT-IND-SCTA IN CCT-FLD
      *          IF CCT-IND-SCTA IN CCT-FLD > SPACES
      *              MOVE 'COL' TO MSC-COD-SIST
      *              MOVE 'SCTB' TO MSC-COD-TMSC IN MSC
      *              MOVE CCT-IND-SCTA IN CCT-FLD TO MSC-COD-CMSC IN MSC
      *              PERFORM BUS-MSC
      *              MOVE MSC-GLS-DESC IN MSC TO FRM-GLS-SCTA IN CCT-FLD.
      *>>>>
       FIN-PUT-DLC-CCT.
           EXIT.

       PUT-VEN-CCT SECTION.
       INI-PUT-VEN-CCT.
           IF PGM-STAT-VEN-NUL
               GO TO FIN-PUT-VEN-CCT.
           IF NOT PGM-STAT-VEN-OKS
               PERFORM CLR-VEN-CCT
               GO TO FIN-PUT-VEN-CCT.
           MOVE VEN-NUM-IVCT IN VEN TO VEN-NUM-IVCT IN CCT-FLD.
           MOVE VEN-NUM-IVEN IN VEN TO VEN-NUM-IVEN IN CCT-FLD.
           MOVE VEN-VAL-SCAP IN VEN TO VEN-VAL-SCAP IN CCT-FLD.
           MOVE VEN-NUM-DVEN IN VEN TO VEN-NUM-DVEN IN CCT-FLD.
           MOVE VEN-NUM-MVEN IN VEN TO VEN-NUM-MVEN IN CCT-FLD.
           MOVE VEN-NUM-SVEN IN VEN TO VEN-NUM-SVEN IN CCT-FLD.
           MOVE VEN-NUM-AVEN IN VEN TO VEN-NUM-AVEN IN CCT-FLD.
           MOVE VEN-VAL-SFIN IN VEN TO VEN-VAL-SFIN IN CCT-FLD.
           MOVE VEN-NUM-DIMV IN VEN TO VEN-NUM-DIMV IN CCT-FLD.
           MOVE VEN-NUM-MIMV IN VEN TO VEN-NUM-MIMV IN CCT-FLD.
           MOVE VEN-NUM-SIMV IN VEN TO VEN-NUM-SIMV IN CCT-FLD.
           MOVE VEN-NUM-AIMV IN VEN TO VEN-NUM-AIMV IN CCT-FLD.
           MOVE VEN-IND-SCBZ IN VEN TO VEN-IND-SCBZ IN CCT-FLD.
           MOVE VEN-IND-SCTB IN VEN TO VEN-IND-SCTB IN CCT-FLD.

      *BUS-MSC busca glosa de miscelaneo en tabla
           IF VEN-IND-SCBZ IN CCT-FLD > SPACES
               MOVE 'COL'                   TO MSC-COD-SIST
               MOVE 'SCBZ'                  TO MSC-COD-TMSC IN MSC
               MOVE VEN-IND-SCBZ IN CCT-FLD TO MSC-COD-CMSC IN MSC
               PERFORM BUS-MSC
               MOVE MSC-GLS-DESC IN MSC TO FRM-GLS-SCBZ IN CCT-FLD.

      *BUS-MSC busca glosa de miscelaneo en tabla
           IF VEN-IND-SCTB IN CCT-FLD > SPACES
               MOVE 'COL'                   TO MSC-COD-SIST
               MOVE 'SCTB'                  TO MSC-COD-TMSC IN MSC
               MOVE VEN-IND-SCTB IN CCT-FLD TO MSC-COD-CMSC IN MSC
               PERFORM BUS-MSC
               MOVE MSC-GLS-DESC IN MSC TO FRM-GLS-SCTB IN CCT-FLD.
      *<<<< FIN_PUT_VEN_CCT
           IF (SCR-CCPP = 'ING' OR
              (SCR-CCPP = 'ACT' AND SCR-ACTU = SCR-ACTU-ING))
            MOVE VEN-IND-SCTB IN CCT-FLD TO CCT-IND-SCTA IN CCT-FLD
            IF CCT-IND-SCTA IN CCT-FLD > SPACES
                MOVE 'COL'                   TO MSC-COD-SIST
                MOVE 'SCTB'                  TO MSC-COD-TMSC IN MSC
                MOVE CCT-IND-SCTA IN CCT-FLD TO MSC-COD-CMSC IN MSC
                PERFORM BUS-MSC
                MOVE MSC-GLS-DESC IN MSC TO FRM-GLS-SCTA IN CCT-FLD.
      *>>>>
       FIN-PUT-VEN-CCT.
           EXIT.
      *>>>>
*% END
*% IF EOF
      *<<<< EOF
       BUS-CCT-SCTB SECTION.
       INI-BUS-CCT-SCTB.
       FIN-BUS-CCT-SCTB.
           EXIT.

       BUS-SIG-CCT SECTION.
       INI-BUS-SIG-CCT.
           PERFORM PUT-ALL-CCT.
           ADD 1 TO CCT-NUM-ICCT IN CCT.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM COL-FIO-CCT.
           PERFORM RET-ALL-CCT.
       FIN-BUS-SIG-CCT.
           EXIT.

       CLR-CCT SECTION.
       INI-CLR-CCT.
           MOVE SPACES TO CCT-COD-ATRN IN CCT.
           MOVE SPACES TO CCT-FEC-FCCT IN CCT.
           MOVE SPACES TO CCT-FEC-FINP IN CCT.
           MOVE SPACES TO CCT-COD-RCCT IN CCT.
           MOVE SPACES TO CCT-IND-SCTB IN CCT.
           MOVE ZEROES TO CCT-SGV-GAST IN CCT.
       FIN-CLR-CCT.
           EXIT.

       PRO-VEN SECTION.
       INI-PRO-VEN.
           MOVE CCT-CAI-IOPC IN CCT     TO VEN-CAI-IOPC IN VEN.
           MOVE CCT-IIC-IOPC IN CCT     TO VEN-IIC-IOPC IN VEN.
           MOVE VEN-NUM-IVCT IN CCT-FLD TO VEN-NUM-IVEN IN VEN.
       LUP-PRO-VEN.
           MOVE FIO-GET-KEY-UPD TO FIO-CMND.
           PERFORM COL-FIO-VEN
           IF NOT FIO-STAT-OKS
               MOVE '00' TO FIO-STAT
               GO TO FIN-PRO-VEN.

           IF SCR-CCPP = 'ELI'
               MOVE CCT-IND-SCTA IN CCT-FLD TO VEN-IND-SCTB IN VEN
           ELSE
               MOVE CCT-IND-SCTB IN CCT-FLD TO VEN-IND-SCTB IN VEN.
           MOVE FIO-MOD TO FIO-CMND.
           PERFORM COL-FIO-VEN.
           IF NOT FIO-STAT-OKS
               GO TO FIN-PRO-VEN.

           PERFORM PRO-RDT.
           IF NOT FIO-STAT-OKS
               GO TO FIN-PRO-VEN.

           PERFORM PRO-DLC.
           IF NOT FIO-STAT-OKS
               GO TO FIN-PRO-VEN.

           IF CCT-IND-ACEL IN CCT = 'S'
               ADD 1 TO VEN-NUM-IVEN IN VEN
               GO TO LUP-PRO-VEN.
       FIN-PRO-VEN.
           EXIT.

       PRO-RDT SECTION.
       INI-PRO-RDT.
           MOVE CCT-CAI-IOPC IN CCT TO OPC-CAI-IOPC IN OPC.
           MOVE CCT-IIC-IOPC IN CCT TO OPC-IIC-IOPC IN OPC.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM COL-FIO-OPC.

           MOVE CCT-CAI-IOPC IN CCT     TO VEN-CAI-IOPC IN VEN.
           MOVE CCT-IIC-IOPC IN CCT     TO VEN-IIC-IOPC IN VEN.
      *     MOVE VEN-NUM-IVCT IN CCT-FLD TO VEN-NUM-IVEN IN VEN.
           MOVE FIO-GET-KEY TO FIO-CMND.
           IF OPC-IND-VSTR IN OPC NOT = 'S'
               PERFORM COL-FIO-VEN
           ELSE
               PERFORM COL-OBT-VEN.

           MOVE OPC-COD-TOOC IN OPC TO TOC-COD-TOCR IN TOC.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM COL-FIO-TOC.

           MOVE 'COL'               TO MSC-COD-SIST FIO-SIST.
           MOVE 'OPEC'              TO MSC-COD-TMSC IN MSC.
           MOVE TOC-MSC-OPEC IN TOC TO MSC-COD-CMSC IN MSC.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM GNS-FIO-MSC.

           MOVE VEN-CIC-IOPC IN VEN     TO RDT-CIC-IOPC IN RDT.
           MOVE VEN-NUM-IDLC IN VEN     TO RDT-NUM-IDLC IN RDT.
           MOVE CCT-IND-SCTB IN CCT-FLD TO RDT-IND-SCTB IN RDT.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM COL-FIO-RDT.
           IF FIO-STAT-OKS
               GO TO CON-PRO-RDT.

           IF SCR-CCPP = 'ELI'
               MOVE '00' TO FIO-STAT
               GO TO FIN-PRO-RDT.

           IF MSC-CIC-CMSC IN MSC = 'D'
               MOVE VEN-VAL-FINA IN VEN TO RDT-VAL-SRDT IN RDT
           ELSE
               MOVE VEN-VAL-CAPI IN VEN TO RDT-VAL-SRDT IN RDT.

           MOVE FIO-PUT TO FIO-CMND.
           PERFORM COL-FIO-RDT.
           GO TO FIN-PRO-RDT.
       CON-PRO-RDT.
           MOVE FIO-GET-KEY-UPD TO FIO-CMND.
           PERFORM COL-FIO-RDT.
           IF NOT FIO-STAT-OKS
               GO TO FIN-PRO-RDT.

           IF MSC-CIC-CMSC IN MSC = 'D'
               IF SCR-CCPP = 'ELI'
                   SUBTRACT VEN-VAL-FINA IN VEN FROM RDT-VAL-SRDT IN RDT
                                              GIVING RDT-VAL-SRDT IN RDT
               ELSE
                   ADD VEN-VAL-FINA IN VEN TO RDT-VAL-SRDT IN RDT
           ELSE
               IF SCR-CCPP = 'ELI'
                   SUBTRACT VEN-VAL-CAPI IN VEN FROM RDT-VAL-SRDT IN RDT
                                              GIVING RDT-VAL-SRDT IN RDT
               ELSE
                   ADD VEN-VAL-CAPI IN VEN TO RDT-VAL-SRDT IN RDT.

           IF RDT-VAL-SRDT IN RDT NOT > ZEROES
               MOVE FIO-DEL TO FIO-CMND
           ELSE
               MOVE FIO-MOD TO FIO-CMND.
           PERFORM COL-FIO-RDT.
       FIN-PRO-RDT.
           EXIT.


       PRO-DLC SECTION.
       INI-PRO-DLC.
           MOVE CCT-CAI-IOPC IN CCT TO RDT-CAI-IOPC IN RDT.
           MOVE CCT-IIC-IOPC IN CCT TO RDT-IIC-IOPC IN RDT.
           MOVE CCT-NUM-IDLC IN CCT TO RDT-NUM-IDLC IN RDT.
           MOVE SPACES              TO RDT-IND-SCTB IN RDT.
           MOVE FIO-GET-NLS TO FIO-CMND.
           PERFORM COL-FIO-RDT.
           IF NOT ( FIO-STAT-OKS AND
                    CCT-CIC-IOPC IN CCT = RDT-CIC-IOPC IN RDT AND
                    CCT-NUM-IDLC IN CCT = RDT-NUM-IDLC IN RDT )
               GO TO CO1-PRO-DLC.

           MOVE FIO-GET-NXT TO FIO-CMND.
           PERFORM COL-FIO-RDT.
           IF NOT ( FIO-STAT-OKS AND
                    CCT-CIC-IOPC IN CCT = RDT-CIC-IOPC IN RDT AND
                    CCT-NUM-IDLC IN CCT = RDT-NUM-IDLC IN RDT )
               GO TO CO2-PRO-DLC.

           MOVE CCT-CIC-IOPC IN CCT TO DLC-CIC-IOPC IN DLC.
           MOVE CCT-NUM-IDLC IN CCT TO DLC-NUM-IDLC IN DLC.
           MOVE FIO-GET-KEY-UPD TO FIO-CMND.
           PERFORM COL-FIO-DLC.
           IF NOT FIO-STAT-OKS
               GO TO FIN-PRO-DLC.

           MOVE 'MUL' TO DLC-IND-SCTB IN DLC.
           MOVE FIO-MOD TO FIO-CMND.
           PERFORM COL-FIO-DLC.
           GO TO FIN-PRO-DLC.
       CO1-PRO-DLC.
           MOVE CCT-CIC-IOPC IN CCT TO DLC-CIC-IOPC IN DLC.
           MOVE CCT-NUM-IDLC IN CCT TO DLC-NUM-IDLC IN DLC.
           MOVE FIO-GET-KEY-UPD TO FIO-CMND.
           PERFORM COL-FIO-DLC.
           IF NOT FIO-STAT-OKS
               GO TO FIN-PRO-DLC.

           IF SCR-CCPP = 'ELI'
               MOVE CCT-IND-SCTA IN CCT-FLD TO DLC-IND-SCTB IN DLC
           ELSE
               MOVE CCT-IND-SCTB IN CCT-FLD TO DLC-IND-SCTB IN DLC.

           MOVE FIO-MOD TO FIO-CMND.
           PERFORM COL-FIO-DLC.
           GO TO FIN-PRO-DLC.
       CO2-PRO-DLC.
           MOVE CCT-CIC-IOPC IN CCT TO DLC-CIC-IOPC IN DLC.
           MOVE CCT-NUM-IDLC IN CCT TO DLC-NUM-IDLC IN DLC.
           MOVE FIO-GET-KEY-UPD TO FIO-CMND.
           PERFORM COL-FIO-DLC.
           IF NOT FIO-STAT-OKS
               GO TO FIN-PRO-DLC.

           IF SCR-CCPP = 'ELI'
               MOVE CCT-IND-SCTA IN CCT-FLD TO DLC-IND-SCTB IN DLC
           ELSE
               MOVE CCT-IND-SCTB IN CCT-FLD TO DLC-IND-SCTB IN DLC.

           MOVE FIO-MOD TO FIO-CMND.
           PERFORM COL-FIO-DLC.
       FIN-PRO-DLC.
           EXIT.

       BCK-OUT SECTION.
       INI-BCK-OUT.
           MOVE FIO-BCK-OUT TO FIO-CMND.
           PERFORM COL-FIO-DLC.
           IF FIO-STAT-OKS
      *        Para informar que el backout se realizo con exito
               MOVE '49' TO FIO-STAT.
       FIN-BCK-OUT.
           EXIT.

       LEE-NXT-PRV SECTION.
       INI-LEE-NXT-PRV.
           IF SCR-CCT-REQA > SPACES
               PERFORM LEE-NXT-PRV-CCT
           ELSE
               PERFORM LEE-NXT-PRV-CIC.
       FIN-LEE-NXT-PRV.
           EXIT.

       LEE-NXT-PRV-CCT SECTION.
       INI-LEE-NXT-PRV-CCT.
           MOVE SCR-CCT-REQA TO ADR-CCT-REQA.
           MOVE FIO-KDEF-S TO FIO-KDEF.
           IF FRM-FFLD = FRM-FFLD-PF7
               MOVE FIO-GET-PRV TO FIO-CMND
           ELSE
               MOVE FIO-GET-NXT TO FIO-CMND.
           PERFORM COL-FIO-CCT.
           IF FIO-STAT-OKS
               MOVE '00' TO PGM-STAT-CCT
               MOVE ADR-CCT-REQA TO SCR-CCT-REQA.
       FIN-LEE-NXT-PRV-CCT.
           EXIT.

       LEE-NXT-PRV-CIC SECTION.
       INI-LEE-NXT-PRV-CIC.
           IF CCT-IIC-IOPC IN CCT > ZEROES AND
              CCT-NUM-IDLC IN CCT > ZEROES AND
              CCT-NUM-ICCT IN CCT > ZEROES
               MOVE FIO-GET-KEY TO FIO-CMND
               PERFORM COL-FIO-CCT
               IF FIO-STAT-OKS
                   IF FRM-FFLD = FRM-FFLD-PF7
                       MOVE FIO-GET-PRV TO FIO-CMND
                   ELSE
                       MOVE FIO-GET-NXT TO FIO-CMND
               ELSE
                   IF FRM-FFLD = FRM-FFLD-PF7
                       MOVE FIO-GET-LEQ TO FIO-CMND
                   ELSE
                       MOVE FIO-GET-NLS TO FIO-CMND
           ELSE
               IF FRM-FFLD = FRM-FFLD-PF7
                   MOVE FIO-GET-LEQ TO FIO-CMND
               ELSE
                   MOVE FIO-GET-NLS TO FIO-CMND.
           PERFORM COL-FIO-CCT.
           IF FIO-STAT-OKS
               MOVE '00' TO PGM-STAT-CCT
               MOVE ADR-CCT-REQA TO SCR-CCT-REQA.
       FIN-LEE-NXT-PRV-CIC.
           EXIT.

       BUS-COR-CCT1 SECTION.
       INI-BUS-COR-CCT1.
           MOVE 99 TO CCT-NUM-ICCT IN CCT.
       LUP-BUS-COR-CCT1.
           MOVE FIO-GET-LEQ TO FIO-CMND.
           PERFORM COL-FIO-CCT.
           IF NOT ( FIO-STAT-OKS AND
                    CCT-CAI-IOPC IN CCT-FLD = CCT-CAI-IOPC IN CCT AND
                    CCT-IIC-IOPC IN CCT-FLD = CCT-IIC-IOPC IN CCT AND
                    CCT-NUM-IDLC IN CCT-FLD = CCT-NUM-IDLC IN CCT )
               PERFORM KEY-ALL-CCT
               MOVE ZEROES TO CCT-NUM-ICCT IN CCT.

           IF SCR-CCPP = 'ING' OR
              (SCR-CCPP = 'ACT' AND SCR-ACTU = SCR-ACTU-ING)
               ADD 1 TO CCT-NUM-ICCT IN CCT
               MOVE CCT-NUM-ICCT IN CCT TO CCT-NUM-ICCT IN CCT-FLD
           ELSE
               IF CCT-NUM-IVCT IN CCT NOT = VEN-NUM-IVCT IN CCT-FLD
                   SUBTRACT 1 FROM CCT-NUM-ICCT IN CCT
                   GO TO LUP-BUS-COR-CCT1.
           MOVE 1 TO WSS-ICOR.
       FIN-BUS-COR-CCT1.
           EXIT.

       COPY GNSBGSTR.
       COPY COLBFRCV.
       COPY COLBFVEN.
       COPY COLBGKCT.
       COPY COLBGCCT.
       COPY SGCBFDBC.
       COPY COLBFDLC.
       COPY COLBFOPC.
       COPY COLBFRDC.
       COPY COLBGVEN.
       COPY GNSBPFEC.
       COPY COLBFEVC.
       COPY COLBFICG.
       COPY COLBFTOC.
       COPY COLBFRDT.
       COPY SGCBGCLI.
       COPY GNSBGCPT.
       COPY GNSBGPES.
      *SMC-INI 09.09.1993
       COPY COLBGINT.
      *SMC-FIN 09.09.1993
       COPY GNSBGCVI.
       COPY TABBFCAM.
       COPY TABBFVLR.
      *>>>>
*% END
