*%! Codigo adicional para archivo
*% RA1 = "CCR"
*% FRM = "CCR"
*% NRA = 1
*% INCLUDE 'PFSALLF78'
*% IF WSS
      *<<<< WSS
       01  WSS-VARI.
           03  WSS-FEC-FCOM.
               05  WSS-NUM-SCOM                       PIC 9(02).
               05  WSS-NUM-ACOM                       PIC 9(02).
               05  WSS-NUM-MCOM                       PIC 9(02).
               05  WSS-NUM-DCOM                       PIC 9(02).
           03  BUS-POR-KEYS             VALUE SPACES PIC X(01).
           03  BUS-POR-CLIE             VALUE 'C'    PIC X(01).
           03  WSS-ICOR                 VALUE 0      PIC 9(01).
               88 NO-ASIGNE-CORRELATIVO VALUE 0.
      *     03  PGM-STAT-DLC           VALUE '23'     PIC X(02).
      *         88 PGM-STAT-DLC-OKS    VALUE '00'.
      *         88 PGM-STAT-DLC-NUL    VALUE '  '.
           03 WSS-FEC-FEC1.
              05 WSS-NUM-SEC1           PIC 9(02).
              05 WSS-NUM-AEC1           PIC 9(02).
              05 WSS-NUM-MEC1           PIC 9(02).
              05 WSS-NUM-DEC1           PIC 9(02).
           03 WSS-FEC-FEC2.
              05 WSS-NUM-SEC2           PIC 9(02).
              05 WSS-NUM-AEC2           PIC 9(02).
              05 WSS-NUM-MEC2           PIC 9(02).
              05 WSS-NUM-DEC2           PIC 9(02).

       COPY GNSWGSTR.
       COPY SGCBRDBC.
       COPY COLBROPC.
       COPY COLBRDLC.
       COPY COLBRRDC.
       COPY GNSWGCPT.
      *>>>>
*% END
*% IF WSS_DTC 
      *<<<< WSS_DTC
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-DBC-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-OPC-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-DLC-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-RDC-REQA==.
      *>>>>
*% END
*% IF INI_FND_KEY
      *<<<< INI_FND_KEY
      *>>>>
*% END
*% IF FND_KEY
      *<<<< FND_KEY
           IF SCR-CCPP = 'ING' OR 'ELI'
               PERFORM BUS-COR-CCR
               PERFORM CLR-CCR
               GO TO CON-FND-KEY.

           IF FRM-FFLD = FRM-FFLD-PF7 OR FRM-FFLD-PF8
               PERFORM LEE-NXT-PRV
               IF FIO-STAT-OKS
                   PERFORM SCR-CLRA-CCR
                   GO TO CON-FND-KEY
               ELSE
                   MOVE SPACES TO PGM-STAT
                   IF FRM-FFLD = FRM-FFLD-PF7
                       MOVE 'COL'          TO MSG-COD-SIST
                       MOVE 'CCR    NOPRV' TO MSG-COD-MENS
                       PERFORM GET-MSG
                       MOVE MSG-GLS-DESC TO FRM-MENS
                       MOVE '00'         TO FIO-STAT
                       MOVE SCR-STAT-CON TO SCR-STAT
                       GO TO FIN-FND-KEY
                   ELSE
                       MOVE 'COL'          TO MSG-COD-SIST
                       MOVE 'CCR    NONXT' TO MSG-COD-MENS
                       PERFORM GET-MSG
                       MOVE MSG-GLS-DESC TO FRM-MENS
                       MOVE '00'         TO FIO-STAT
                       MOVE SCR-STAT-CON TO SCR-STAT
                       GO TO FIN-FND-KEY.

           IF CCR-IIC-IOPC IN CCR NOT > ZEROES
               PERFORM ANL-KEY-CCR
               IF NOT FIO-STAT-OKS
                   GO TO NXT-FND-KEY.

           IF CCR-NUM-ICCR IN CCR NOT > ZEROES 
               PERFORM BUS-COR-CCR
               PERFORM CLR-CCR.
       CON-FND-KEY.
      *>>>>
*% END
*% IF FIN_FND_KEY
      *<<<< FIN_FND_KEY
           IF SCR-CCPP = 'ACT' AND NO-ASIGNE-CORRELATIVO AND 
              NOT FIO-STAT-OKS
               PERFORM BUS-COR-CCR
               PERFORM CLR-CCR
               MOVE '23' TO FIO-STAT.

           IF FIO-STAT-OKS AND
              (SCR-CCPP = 'MOD' OR SCR-CCPP = 'ELI' OR 
              (SCR-CCPP = 'ACT' AND SCR-ACTU = SCR-ACTU-MOD))
                PERFORM BUS-SIG-CCR
                IF FIO-STAT-OKS
                    MOVE 'COL'        TO MSG-COD-SIST
                    MOVE 'NUMICCRINV' TO MSG-COD-MENS
                    PERFORM GET-MSG
                    MOVE MSG-GLS-DESC TO FRM-MENS
                    MOVE '00'         TO FIO-STAT
                    MOVE SCR-STAT-CON TO SCR-STAT
                    GO TO FIN-FND-KEY
                ELSE
                    MOVE '00' TO FIO-STAT.

           IF FIO-STAT-OKS
               MOVE ADR-CCR-REQA TO SCR-CCR-REQA.

           IF BUS-POR-KEYS = BUS-POR-CLIE
               IF FIO-STAT-OKS
                   PERFORM BUS-CCR-SCRA
                   MOVE '00' TO FIO-STAT
                   GO TO NXT-FND-KEY
               ELSE
                   PERFORM BUS-CCR-SCRA
                   MOVE '23' TO FIO-STAT
                   GO TO NXT-FND-KEY.

           IF FIO-STAT-OKS
               PERFORM BUS-CCR-SCRA
               PERFORM ANL-CIC-IOPC
               GO TO NXT-FND-KEY.

           IF ( SCR-CCPP = 'ING' OR SCR-CCPP = 'ACT' )
               PERFORM BUS-CCR-SCRA
               PERFORM ANL-CIC-IOPC
               IF FIO-STAT-OKS
                   MOVE '23' TO FIO-STAT
               ELSE
                   MOVE SCR-STAT-CON TO SCR-STAT
                   MOVE '00' TO FIO-STAT.
       NXT-FND-KEY.
      *DAD ini  27-MAY-1991 
           IF PGM-STAT-OPC-OKS
               IF OPC-MSC-STAT IN OPC NOT = 'A'
                   MOVE 'COL'          TO MSG-COD-SIST
                   MOVE 'OPC    NOACA' TO MSG-COD-MENS
                   PERFORM GET-MSG
                   MOVE MSG-GLS-DESC TO FRM-MENS
                   MOVE SCR-STAT-CON TO SCR-STAT
                   IF SCR-CCPP = 'ING'
                       MOVE '23' TO FIO-STAT
                   ELSE
                       MOVE '00' TO FIO-STAT
               ELSE
               IF OPC-VAL-SCRE IN OPC NOT > ZEROES
                   MOVE 'COL'          TO MSG-COD-SIST
                   MOVE 'OPC    YACAN' TO MSG-COD-MENS
                   PERFORM GET-MSG
                   IF SCR-STPP = SCR-STAT-CON
                       MOVE MSG-GLS-DESC TO FRM-MEN2
                   ELSE
                       MOVE MSG-GLS-DESC TO FRM-MENS
                       MOVE '00'         TO FIO-STAT
                       MOVE SCR-STAT-CON TO SCR-STAT.
      *DAD fin  27-MAY-1991 
      *>>>>
*% END
*% IF FIN_CMN_ING
      *<<<< FIN_CMN_ING
           IF NOT FIO-STAT-OKS
      *        Error inconsistencia en el ingreso : informar
               MOVE FIO-MENS TO FRM-MENS
               GO TO FIN-CMN-ING.

           PERFORM MOD-DLC.
           IF NOT FIO-STAT-OKS
               PERFORM BCK-OUT
               GO TO FIN-CMN-ING.
      *>>>>
*% END
*% IF FIN_CMN_MOD
      *<<<< FIN_CMN_MOD
           IF NOT FIO-STAT-OKS
      *        Error inconsistencia en el ingreso : informar
               MOVE FIO-MENS TO FRM-MENS
               GO TO FIN-CMN-MOD.

           PERFORM MOD-DLC.
           IF NOT FIO-STAT-OKS
               PERFORM BCK-OUT
               GO TO FIN-CMN-MOD.
      *>>>>
*% END
*% IF FIN_CMN_ELI
      *<<<< FIN_CMN_ELI
           IF NOT FIO-STAT-OKS
               GO TO FIN-CMN-ELI.

           PERFORM KEY-CCR-CCR.
           SUBTRACT 1 FROM CCR-NUM-ICCR IN CCR.
           IF CCR-NUM-ICCR IN CCR > ZEROES
               MOVE FIO-GET-KEY TO FIO-CMND
               PERFORM COL-FIO-CCR
               IF FIO-STAT-OKS
                   NEXT SENTENCE
               ELSE
                   MOVE 'COL'          TO MSG-COD-SIST
                   MOVE 'CCR-1    NEX' TO MSG-COD-MENS
                   PERFORM GET-MSG
                   MOVE MSG-GLS-DESC TO FRM-MENS
                   GO TO FIN-CMN-ELI
           ELSE
               MOVE SPACES TO CCR-IND-SCRT IN CCR.

           MOVE CCR-IND-SCRT IN CCR TO CCR-IND-SCRT IN CCR-FLD.
           PERFORM MOD-DLC.
           IF NOT FIO-STAT-OKS
               MOVE 'COL'          TO MSG-COD-SIST
               MOVE 'DLC    NOMOD' TO MSG-COD-MENS
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS.
      *>>>>
*% END
*% IF FIN_HBL_FLD
      *<<<< FIN_HBL_FLD
      *BUS-USR busca usuario en tablas
           IF SCR-USER > SPACES
               MOVE SCR-USER TO USR-COD-USER IN USR
                                CCR-COD-RCCR IN CCR-FLD
               PERFORM BUS-USR
               MOVE USR-GLS-DESC IN USR TO FRM-GLS-RCCR IN CCR-FLD.
      *>>>>
*% END
*% IF INI_SCR_TRL
      *<<<< INI_SCR_TRL
      *DAD
      *BUS-USR busca usuario en tablas
           IF SCR-STAT NOT = SCR-STAT-CON
               IF SCR-USER > SPACES
                   MOVE SCR-USER TO CCR-COD-RCCR IN CCR-FLD
                   MOVE SCR-USER TO CCR-COD-RCCR IN CCR
                   MOVE SCR-USER TO USR-COD-USER IN USR
                   PERFORM BUS-USR
                   MOVE USR-GLS-DESC IN USR TO FRM-GLS-RCCR IN CCR-FLD.
      *
      *>>>>
*% END
*% IF EOF_PQ
      *<<<< EOF_PQ
       RET-ALL-CCR SECTION.
       INI-RET-ALL-CCR.
           PERFORM KEY-ALL-CCR.
           PERFORM RET-OPC-CCR.
           PERFORM RET-CCR-CCR.
           PERFORM RET-DLC-CCR.
       FIN-RET-ALL-CCR.
           EXIT.

       RET-OPC-CCR SECTION.
       INI-RET-OPC-CCR.
           MOVE OPC-MSC-TVOC IN CCR-FLD TO OPC-MSC-TVOC IN OPC.
           MOVE OPC-COD-TOOC IN CCR-FLD TO OPC-COD-TOOC IN OPC.
           MOVE OPC-COD-OFOC IN CCR-FLD TO OPC-COD-OFOC IN OPC.
       FIN-RET-OPC-CCR.
           EXIT.
       
       RET-CCR-CCR SECTION.
       INI-RET-CCR-CCR.
           MOVE CCR-IND-SCRA IN CCR-FLD TO CCR-IND-SCRA IN CCR.
           MOVE CCR-NUM-DCCR IN CCR-FLD TO CCR-NUM-DCCR IN CCR.
           MOVE CCR-NUM-MCCR IN CCR-FLD TO CCR-NUM-MCCR IN CCR.
           MOVE CCR-NUM-SCCR IN CCR-FLD TO CCR-NUM-SCCR IN CCR.
           MOVE CCR-NUM-ACCR IN CCR-FLD TO CCR-NUM-ACCR IN CCR.
           MOVE CCR-NUM-DING IN CCR-FLD TO CCR-NUM-DING IN CCR.
           MOVE CCR-NUM-MING IN CCR-FLD TO CCR-NUM-MING IN CCR.
           MOVE CCR-NUM-SING IN CCR-FLD TO CCR-NUM-SING IN CCR.
           MOVE CCR-NUM-AING IN CCR-FLD TO CCR-NUM-AING IN CCR.
           MOVE CCR-IND-SCRT IN CCR-FLD TO CCR-IND-SCRT IN CCR.
           MOVE CCR-COD-RCCR IN CCR-FLD TO CCR-COD-RCCR IN CCR.
      *<<<< FIN_RET_CCR_CCR 
           IF CCR-IND-SCRT IN CCR-FLD = 'VIG'
               MOVE SPACES TO CCR-IND-SCRT IN CCR.
      *>>>>
       FIN-RET-CCR-CCR.
           EXIT.
       
       RET-DLC-CCR SECTION.
       INI-RET-DLC-CCR.
           MOVE DLC-IND-SCRT IN CCR-FLD TO DLC-IND-SCRT IN DLC.
       FIN-RET-DLC-CCR.
           EXIT.
      *>>>>
*% END
*% IF EOF_PU
      *<<<< EOF_PU
       PUT-ALL-CCR SECTION.
       INI-PUT-ALL-CCR.
           PERFORM PUT-OPC-CCR.
           PERFORM PUT-CCR-CCR.
           PERFORM PUT-DLC-CCR.
       FIN-PUT-ALL-CCR.
           EXIT.
       
       PUT-OPC-CCR SECTION.
       INI-PUT-OPC-CCR.
           IF PGM-STAT-OPC-NUL
               GO TO FIN-PUT-OPC-CCR.
           IF NOT PGM-STAT-OPC-OKS
               PERFORM CLR-OPC-CCR
               GO TO FIN-PUT-OPC-CCR.
           MOVE OPC-MSC-TVOC IN OPC TO OPC-MSC-TVOC IN CCR-FLD.
           MOVE OPC-COD-TOOC IN OPC TO OPC-COD-TOOC IN CCR-FLD.
           MOVE OPC-COD-OFOC IN OPC TO OPC-COD-OFOC IN CCR-FLD.
      *BUS-MSC busca glosa de miscelaneo en tabla
           IF OPC-MSC-TVOC IN CCR-FLD > SPACES
               MOVE 'TAB' TO MSC-COD-SIST
               MOVE 'TVAL' TO MSC-COD-TMSC IN MSC
               MOVE OPC-MSC-TVOC IN CCR-FLD TO MSC-COD-CMSC IN MSC
               PERFORM BUS-MSC
               MOVE MSC-GLS-DESC IN MSC TO
                    FRM-GLS-TVOC IN CCR-FLD.
      *BUS-TAB busca glosa de codigo en tabla
           IF OPC-COD-TOOC IN CCR-FLD > SPACES
               MOVE 'TAB' TO TAB-COD-SIST
               MOVE 'TIO' TO TAB-COD-TTAB IN TAB
               MOVE OPC-COD-TOOC IN CCR-FLD TO TAB-COD-CTAB IN TAB
               PERFORM BUS-TAB
               MOVE TAB-GLS-DESC IN TAB TO
                    FRM-GLS-TOOC IN CCR-FLD.
      *BUS-OFI busca oficina en tablas
           IF OPC-COD-OFOC IN CCR-FLD > SPACES
               MOVE OPC-COD-OFOC IN CCR-FLD TO OFI-COD-OFIC IN OFI
               PERFORM BUS-OFI
               MOVE OFI-GLS-DESC IN OFI TO FRM-GLS-OFOC IN CCR-FLD.
       FIN-PUT-OPC-CCR.
           EXIT.
       
       PUT-CCR-CCR SECTION.
       INI-PUT-CCR-CCR.
           IF PGM-STAT-CCR-NUL
               GO TO FIN-PUT-CCR-CCR.
           IF NOT PGM-STAT-CCR-OKS
               PERFORM CLR-CCR-CCR
               GO TO FIN-PUT-CCR-CCR.
           MOVE CCR-CAI-IOPC IN CCR TO CCR-CAI-IOPC IN CCR-FLD.
           MOVE CCR-IIC-IOPC IN CCR TO CCR-IIC-IOPC IN CCR-FLD.
           MOVE CCR-NUM-IDLC IN CCR TO CCR-NUM-IDLC IN CCR-FLD.
           MOVE CCR-NUM-ICCR IN CCR TO CCR-NUM-ICCR IN CCR-FLD.
           MOVE CCR-IND-SCRA IN CCR TO CCR-IND-SCRA IN CCR-FLD.
           MOVE CCR-NUM-DCCR IN CCR TO CCR-NUM-DCCR IN CCR-FLD.
           MOVE CCR-NUM-MCCR IN CCR TO CCR-NUM-MCCR IN CCR-FLD.
           MOVE CCR-NUM-SCCR IN CCR TO CCR-NUM-SCCR IN CCR-FLD.
           MOVE CCR-NUM-ACCR IN CCR TO CCR-NUM-ACCR IN CCR-FLD.
           MOVE CCR-NUM-DING IN CCR TO CCR-NUM-DING IN CCR-FLD.
           MOVE CCR-NUM-MING IN CCR TO CCR-NUM-MING IN CCR-FLD.
           MOVE CCR-NUM-SING IN CCR TO CCR-NUM-SING IN CCR-FLD.
           MOVE CCR-NUM-AING IN CCR TO CCR-NUM-AING IN CCR-FLD.
           MOVE CCR-IND-SCRT IN CCR TO CCR-IND-SCRT IN CCR-FLD.
           MOVE CCR-COD-RCCR IN CCR TO CCR-COD-RCCR IN CCR-FLD.
      *BUS-MSC busca glosa de miscelaneo en tabla
           IF CCR-IND-SCRA IN CCR-FLD > SPACES
               MOVE 'COL' TO MSC-COD-SIST
               MOVE 'SCRT' TO MSC-COD-TMSC IN MSC
               MOVE CCR-IND-SCRA IN CCR-FLD TO MSC-COD-CMSC IN MSC
               PERFORM BUS-MSC
               MOVE MSC-GLS-DESC IN MSC TO
                    FRM-GLS-SCRA IN CCR-FLD.
      *BUS-MSC busca glosa de miscelaneo en tabla
           IF CCR-IND-SCRT IN CCR-FLD > SPACES
               MOVE 'COL' TO MSC-COD-SIST
               MOVE 'SCRT' TO MSC-COD-TMSC IN MSC
               MOVE CCR-IND-SCRT IN CCR-FLD TO MSC-COD-CMSC IN MSC
               PERFORM BUS-MSC
               MOVE MSC-GLS-DESC IN MSC TO
                    FRM-GLS-SCRT IN CCR-FLD.
      *BUS-USR busca usuario en tablas
           IF CCR-COD-RCCR IN CCR-FLD > SPACES
               MOVE CCR-COD-RCCR IN CCR-FLD TO USR-COD-USER IN USR
               PERFORM BUS-USR
               MOVE USR-GLS-DESC IN USR TO FRM-GLS-RCCR IN CCR-FLD.
       FIN-PUT-CCR-CCR.
           EXIT.
       
       PUT-DLC-CCR SECTION.
       INI-PUT-DLC-CCR.
           IF PGM-STAT-DLC-NUL
               GO TO FIN-PUT-DLC-CCR.
           IF NOT PGM-STAT-DLC-OKS
               PERFORM CLR-DLC-CCR
               GO TO FIN-PUT-DLC-CCR.
           MOVE DLC-IND-SCRT IN DLC TO DLC-IND-SCRT IN CCR-FLD.
      *BUS-MSC busca glosa de miscelaneo en tabla
           IF DLC-IND-SCRT IN CCR-FLD > SPACES
               MOVE 'COL' TO MSC-COD-SIST
               MOVE 'SCRT' TO MSC-COD-TMSC IN MSC
               MOVE DLC-IND-SCRT IN CCR-FLD TO MSC-COD-CMSC IN MSC
               PERFORM BUS-MSC
               MOVE MSC-GLS-DESC IN MSC TO
                    FRM-GLS-SCRT IN CCR-FLD.
      *<<<< FIN_PUT_DLC_CCR 
            IF CCR-NUM-ICCR IN CCR-FLD = 1 AND
              (SCR-CCPP = 'ING' OR (SCR-CCPP = 'ACT' AND
               SCR-ACTU = SCR-ACTU-ING))
                MOVE DLC-IND-SCRT IN CCR-FLD TO CCR-IND-SCRA IN CCR-FLD
                IF CCR-IND-SCRA IN CCR-FLD > SPACES
                    MOVE 'COL' TO MSC-COD-SIST
                    MOVE 'SCRT' TO MSC-COD-TMSC IN MSC
                    MOVE CCR-IND-SCRA IN CCR-FLD TO MSC-COD-CMSC IN MSC
                    PERFORM BUS-MSC
                    MOVE MSC-GLS-DESC IN MSC TO FRM-GLS-SCRA IN CCR-FLD.
      *>>>>
       FIN-PUT-DLC-CCR.
           EXIT.
      *>>>>
*% END
*% IF EOF
      *<<<< EOF
       BUS-CCR-SCRA SECTION.
       INI-BUS-CCR-SCRA.
           IF CCR-NUM-ICCR IN CCR = 1
               GO TO FIN-BUS-CCR-SCRA.

           PERFORM PUT-ALL-CCR.
           SUBTRACT 1 FROM CCR-NUM-ICCR IN CCR.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM COL-FIO-CCR.
           IF FIO-STAT-OKS
               MOVE CCR-IND-SCRT IN CCR TO CCR-IND-SCRA IN CCR-FLD
           ELSE
               MOVE SPACES TO CCR-IND-SCRA IN CCR-FLD.

      *BUS-MSC busca glosa de miscelaneo en tabla
           IF CCR-IND-SCRA IN CCR-FLD > SPACES
               MOVE 'COL'                   TO MSC-COD-SIST
               MOVE 'SCRT'                  TO MSC-COD-TMSC IN MSC
               MOVE CCR-IND-SCRA IN CCR-FLD TO MSC-COD-CMSC IN MSC
               PERFORM BUS-MSC
               MOVE MSC-GLS-DESC IN MSC TO FRM-GLS-SCRA IN CCR-FLD.
           PERFORM RET-ALL-CCR.
       FIN-BUS-CCR-SCRA.
           EXIT.

       CLR-CCR SECTION.
       INI-CLR-CCR.
           MOVE SPACES TO CCR-IND-SCRA IN CCR.
           MOVE SPACES TO CCR-COD-ATRN IN CCR.
           MOVE SPACES TO CCR-FEC-FCCR IN CCR.
           MOVE SPACES TO CCR-FEC-FING IN CCR.
           MOVE SPACES TO CCR-COD-RCCR IN CCR.
           MOVE SPACES TO CCR-IND-SCRT IN CCR.
       FIN-CLR-CCR.
           EXIT.

       MOD-DLC SECTION.
       INI-MOD-DLC.
           MOVE CCR-CAI-IOPC IN CCR TO DLC-CAI-IOPC IN DLC.
           MOVE CCR-IIC-IOPC IN CCR TO DLC-IIC-IOPC IN DLC.
           MOVE CCR-NUM-IDLC IN CCR TO DLC-NUM-IDLC IN DLC.
           MOVE FIO-GET-KEY-UPD TO FIO-CMND.
           PERFORM COL-FIO-DLC.
           IF NOT FIO-STAT-OKS
               GO TO FIN-MOD-DLC.

           IF SCR-CCPP = 'ELI'
               MOVE CCR-IND-SCRA IN CCR-FLD TO DLC-IND-SCRT IN DLC
           ELSE
               MOVE CCR-IND-SCRT IN CCR-FLD TO DLC-IND-SCRT IN DLC.

           MOVE FIO-MOD TO FIO-CMND.
           PERFORM COL-FIO-DLC.
       FIN-MOD-DLC.
           EXIT.

       BCK-OUT SECTION.
       INI-BCK-OUT.
           MOVE FIO-BCK-OUT TO FIO-CMND.
           PERFORM COL-FIO-DLC.
           IF FIO-STAT-OKS
      *        Para informar que el backout se realizo con exito
               MOVE '49' TO FIO-STAT.
       FIN-BCK-OUT.
           EXIT.

       LEE-NXT-PRV SECTION.
       INI-LEE-NXT-PRV.
           IF SCR-CCR-REQA > SPACES
               PERFORM LEE-NXT-PRV-CCR
           ELSE
               PERFORM LEE-NXT-PRV-CIC.
       FIN-LEE-NXT-PRV.
           EXIT.

       LEE-NXT-PRV-CCR SECTION.
       INI-LEE-NXT-PRV-CCR.
           MOVE SCR-CCR-REQA TO ADR-CCR-REQA.
           MOVE FIO-KDEF-S TO FIO-KDEF.
           IF FRM-FFLD = FRM-FFLD-PF7
               MOVE FIO-GET-PRV TO FIO-CMND
           ELSE
               MOVE FIO-GET-NXT TO FIO-CMND.
           PERFORM COL-FIO-CCR.
           IF FIO-STAT-OKS
               MOVE '00'         TO PGM-STAT-CCR
               MOVE ADR-CCR-REQA TO SCR-CCR-REQA.
       FIN-LEE-NXT-PRV-CCR.
           EXIT.

       LEE-NXT-PRV-CIC SECTION.
       INI-LEE-NXT-PRV-CIC.
           IF CCR-IIC-IOPC IN CCR > ZEROES AND
              CCR-NUM-IDLC IN CCR > ZEROES AND
              CCR-NUM-ICCR IN CCR > ZEROES
               MOVE FIO-GET-KEY TO FIO-CMND
               PERFORM COL-FIO-CCR
               IF FIO-STAT-OKS
                   IF FRM-FFLD = FRM-FFLD-PF7
                       MOVE FIO-GET-PRV TO FIO-CMND
                   ELSE
                       MOVE FIO-GET-NXT TO FIO-CMND
               ELSE
                   IF FRM-FFLD = FRM-FFLD-PF7
                       MOVE FIO-GET-LEQ TO FIO-CMND
                   ELSE
                       MOVE FIO-GET-NLS TO FIO-CMND
           ELSE
               IF FRM-FFLD = FRM-FFLD-PF7
                   MOVE FIO-GET-LEQ TO FIO-CMND
               ELSE
                   MOVE FIO-GET-NLS TO FIO-CMND.
           PERFORM COL-FIO-CCR.
           IF FIO-STAT-OKS
               MOVE '00'         TO PGM-STAT-CCR
               MOVE ADR-CCR-REQA TO SCR-CCR-REQA.
       FIN-LEE-NXT-PRV-CIC.
           EXIT.

       BUS-SIG-CCR SECTION.
       INI-BUS-SIG-CCR.
           PERFORM PUT-ALL-CCR.
           ADD 1 TO CCR-NUM-ICCR IN CCR.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM COL-FIO-CCR.
           PERFORM RET-ALL-CCR.
       FIN-BUS-SIG-CCR.
           EXIT.

       COPY GNSBGSTR.
       COPY COLBGKCR.
       COPY COLBGCCR.
       COPY SGCBFDBC.
       COPY COLBFDLC.
       COPY COLBFOPC.
       COPY COLBFRDC.
       COPY SGCBGCLI.
       COPY GNSBGCPT.
      *>>>>
*% END
