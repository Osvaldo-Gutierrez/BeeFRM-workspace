*%! Codigo adicional para archivo
*% IF WSS
      *<<<< WSS
       COPY GNSBRMSC.
       COPY TABBRUSR.
       COPY TABBROFI.
       COPY COLBRPOC.
       COPY COLBRITR.
       COPY COLBRCOM.
       COPY COLBRCYA.
       COPY COLBRRDC.
       COPY SGCBRDBC.
       COPY GNSWGFEC.
       COPY GNSWGHOY.
       COPY GNSWGCPT.
       COPY GNSWVNUM.
       COPY GNSWCNUM.
       01  WSS-VARI.
           03 WSS-FEC-FINI.
              05 WSS-NUM-DINI                     PIC 9(02).
              05 WSS-NUM-MINI                     PIC 9(02).
              05 WSS-NUM-SINI                     PIC 9(02).
              05 WSS-NUM-AINI                     PIC 9(02).
           03 WSS-FEC-FTER.
              05 WSS-NUM-DTER                     PIC 9(02).
              05 WSS-NUM-MTER                     PIC 9(02).
              05 WSS-NUM-STER                     PIC 9(02).
              05 WSS-NUM-ATER                     PIC 9(02).
           03 WSS-FEC-FFEC.
              05 WSS-NUM-SFEC                     PIC 9(02).
              05 WSS-NUM-AFEC                     PIC 9(02).
              05 WSS-NUM-MFEC                     PIC 9(02).
              05 WSS-NUM-DFEC                     PIC 9(02).
           03 WSS-FEC-FFET.
              05 WSS-NUM-SFET                     PIC 9(02).
              05 WSS-NUM-AFET                     PIC 9(02).
              05 WSS-NUM-MFET                     PIC 9(02).
              05 WSS-NUM-DFET                     PIC 9(02).
           03 WSS-FEC-FPVC.
              05 WSS-NUM-SPVC                     PIC 9(02).
              05 WSS-NUM-APVC                     PIC 9(02).
              05 WSS-NUM-MPVC                     PIC 9(02).
              05 WSS-NUM-DPVC                     PIC 9(02).
           03 WSS-RES     VALUE ZEROES            PIC 9(05).

           03 WSS-COD-OFOC                        PIC X(03).
           03 WSS-COD-RMOC                        PIC X(12).
           03 WSS-NUM-DIGT                        PIC 9(02).
           03 WSS-COD-DIGT                        PIC X(02).
           03 WSS-I                               PIC 9(02).
           03 WSS-IND-MITR                        PIC X(01).
           03 WSS-IND-MCOM                        PIC X(01).
           03 WSS-IND-MRDC                        PIC X(01).

      *ICU[
           03  WSS-USEP                           PIC X(01).
           03  WSS-VSEP                      COMP PIC 9(04).
           03  WSS-FVNC.
               05  WSS-SVNC                       PIC 9(02).
               05  WSS-AVNC                       PIC 9(02).
               05  WSS-MVNC                       PIC 9(02).
               05  WSS-DVNC                       PIC 9(02).
           03  WSS-FMIV.
               05  WSS-SMIV                       PIC 9(02).
               05  WSS-AMIV                       PIC 9(02).
               05  WSS-MMIV                       PIC 9(02).
               05  WSS-DMIV                       PIC 9(02).
           03  WSS-FMAV.
               05  WSS-SMAV                       PIC 9(02).
               05  WSS-AMAV                       PIC 9(02).
               05  WSS-MMAV                       PIC 9(02).
               05  WSS-DMAV                       PIC 9(02).
           03  WSS-NEEV                      COMP PIC 9(04).
           03  WSS-FPPC.
               05  WSS-SPPC                       PIC 9(02).
               05  WSS-APPC                       PIC 9(02).
               05  WSS-MPPC                       PIC 9(02).
               05  WSS-DPPC                       PIC 9(02).
           03  WSS-FPPI.
               05  WSS-SPPI                       PIC 9(02).
               05  WSS-APPI                       PIC 9(02).
               05  WSS-MPPI                       PIC 9(02).
               05  WSS-DPPI                       PIC 9(02).
           03  WSS-FIPC.
               05  WSS-SIPC                       PIC 9(02).
               05  WSS-AIPC                       PIC 9(02).
               05  WSS-MIPC                       PIC 9(02).
               05  WSS-DIPC                       PIC 9(02).
           03  WSS-FSPC.
               05  WSS-SSPC                       PIC 9(02).
               05  WSS-ASPC                       PIC 9(02).
               05  WSS-MSPC                       PIC 9(02).
               05  WSS-DSPC                       PIC 9(02).
           03  WSS-FIPI.
               05  WSS-SIPI                       PIC 9(02).
               05  WSS-AIPI                       PIC 9(02).
               05  WSS-MIPI                       PIC 9(02).
               05  WSS-DIPI                       PIC 9(02).
           03  WSS-FSPI.
               05  WSS-SSPI                       PIC 9(02).
               05  WSS-ASPI                       PIC 9(02).
               05  WSS-MSPI                       PIC 9(02).
               05  WSS-DSPI                       PIC 9(02).
           03  WSS-FUVC.
               05  WSS-SUVC                       PIC 9(02).
               05  WSS-AUVC                       PIC 9(02).
               05  WSS-MUVC                       PIC 9(02).
               05  WSS-DUVC                       PIC 9(02).
           03  WSS-NEUV                           PIC 9(03).
           03  WSS-IVUV              VALUE SPACES PIC X(01).
               88 WSS-ULTIMO-VENC-EN-ZERO VALUE 'Z'.
           03  WSS-EPOC              VALUE 'N'    PIC X(01).
           03  WSS-IND-MCYA        VALUE SPACES   PIC X(01).

       COPY COLBREVC.
       COPY TABBRCAM.
       COPY GNSWGCVI.
      *SMC-INI 09.09.1993
       COPY COLWGINT.
      *SMC-FIN 09.09.1993
      *ICU]
      *>>>>
*% END
*% IF WSS_DTC
      *<<<< WSS_DTC
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-MSC-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-USR-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-OFI-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-POC-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-ITR-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-COM-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-CYA-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-RDC-REQA==. 
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-DBC-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-EVC-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-CAM-REQA==.
      *>>>>
*% END
*% IF CH_CCF_SRT_GLS_OBSV
      *<<<< CH_CCF_SRT_GLS_OBSV
      * Llena glosa correspondiente a Banca
           IF DBC-IND-TICL IN SRT = 'P'
	       MOVE 'PERSONAS' TO WSS-GLS-TICL IN WSS-CCF
           ELSE
               MOVE 'EMPRESAS' TO WSS-GLS-TICL IN WSS-CCF.
*% END           
*% IF INI_INP
      *<<<< INI_INP
           DISPLAY 'INICIO CAPTURA DE PARAMETROS'.

      *Captura Fecha de Inicio
           DISPLAY 'FECHA DE INICIO ( DDMMAAAA ) : '.
           ACCEPT  WSS-FEC-FINI IN WSS-VARI.
           DISPLAY WSS-FEC-FINI IN WSS-VARI.
      *Captura Fecha de Termino
           DISPLAY 'FECHA DE TERMINO ( DDMMAAAA ) : '.
           ACCEPT  WSS-FEC-FTER IN WSS-VARI.
           DISPLAY WSS-FEC-FTER IN WSS-VARI.
      *Captura Codigo de Oficina
           DISPLAY 'OFICINA : '.
           ACCEPT  WSS-COD-OFOC IN WSS-VARI.
           DISPLAY WSS-COD-OFOC IN WSS-VARI.
      *Captura Ejecutivo Comercial
           DISPLAY 'EJECUTIVO COMERCIAL : '.
           ACCEPT  WSS-COD-RMOC IN WSS-VARI.
           DISPLAY WSS-COD-RMOC IN WSS-VARI.

           DISPLAY 'FIN    CAPTURA DE PARAMETROS'.
           DISPLAY 'INICIO VALIDACION DE PARAMETROS'.

      *VAL-FEC Valida Fecha de Inicio
           MOVE WSS-FEC-FINI    IN WSS-VARI TO FEC-FECH.
           MOVE FEC-FORM-FEC TO FEC-FORM.
           MOVE FEC-FBLK-N   TO FEC-FBLK.
           MOVE FEC-CHOY-LE  TO FEC-CHOY.
           MOVE FEC-VHBL-N   TO FEC-VHBL.
           MOVE FEC-VAL-FEC  TO FEC-CMND.
           PERFORM PRO-FEC.
           IF NOT FEC-STAT-OKS
               DISPLAY 'ABORTO: FECHA DE INICIO ERRONEA'
               DISPLAY WSS-FEC-FINI ' ' FEC-MENS
               PERFORM GNS-PRO-END.

      *VAL-FEC Valida Fecha de Termino
           DISPLAY WSS-FEC-FTER IN WSS-VARI.
           MOVE WSS-FEC-FTER IN WSS-VARI TO FEC-FECH.
           MOVE FEC-FORM-FEC TO FEC-FORM.
           MOVE FEC-FBLK-N   TO FEC-FBLK.
           MOVE FEC-CHOY-N   TO FEC-CHOY.
           MOVE FEC-VHBL-N   TO FEC-VHBL.
           MOVE FEC-VAL-FEC  TO FEC-CMND.
           PERFORM PRO-FEC.
           IF NOT FEC-STAT-OKS
               DISPLAY 'ABORTO: FECHA DE TERMINO ERRONEA'
               DISPLAY WSS-FEC-FTER ' ' FEC-MENS
               PERFORM GNS-PRO-END.

      *CMP-FEC Compara Fecha de Inicio con Fecha de Termino
           MOVE WSS-FEC-FINI IN WSS-VARI TO FEC-FEC1.
           MOVE WSS-FEC-FTER IN WSS-VARI TO FEC-FEC2.
           MOVE FEC-FORM-FEC TO FEC-FORM.
           MOVE FEC-CMP-FEC  TO FEC-CMND.
           PERFORM PRO-FEC.
           IF FEC-STAT-GRT
               MOVE 'TAB'         TO MSG-COD-SIST
               MOVE 'FECFINIFTER' TO MSG-COD-MENS IN MSG
               PERFORM GET-MSG
               DISPLAY 'ABORTO:'
               DISPLAY MSG-GLS-DESC IN MSG
               PERFORM GNS-PRO-END.

           MOVE WSS-NUM-DINI IN WSS-VARI TO WSS-NUM-DINI IN WSS-CCF
                                            WSS-NUM-DFEC IN WSS-VARI.
           MOVE WSS-NUM-MINI IN WSS-VARI TO WSS-NUM-MINI IN WSS-CCF
                                            WSS-NUM-MFEC IN WSS-VARI.
           MOVE WSS-NUM-SINI IN WSS-VARI TO WSS-NUM-SINI IN WSS-CCF
                                            WSS-NUM-SFEC IN WSS-VARI.
           MOVE WSS-NUM-AINI IN WSS-VARI TO WSS-NUM-AINI IN WSS-CCF
                                            WSS-NUM-AFEC IN WSS-VARI.
           MOVE WSS-NUM-DTER IN WSS-VARI TO WSS-NUM-DTER IN WSS-CCF
                                            WSS-NUM-DFET IN WSS-VARI.
           MOVE WSS-NUM-MTER IN WSS-VARI TO WSS-NUM-MTER IN WSS-CCF
                                            WSS-NUM-MFET IN WSS-VARI.
           MOVE WSS-NUM-STER IN WSS-VARI TO WSS-NUM-STER IN WSS-CCF
                                            WSS-NUM-SFET IN WSS-VARI.
           MOVE WSS-NUM-ATER IN WSS-VARI TO WSS-NUM-ATER IN WSS-CCF
                                            WSS-NUM-AFET IN WSS-VARI.

      *VAL-OFI Valida Codigo de Oficina en TABLAS
           IF WSS-COD-OFOC IN WSS-VARI NOT > SPACES
               MOVE '*' TO WSS-COD-OFOC IN WSS-VARI.
           IF WSS-COD-OFOC IN WSS-VARI NOT = '*'
               DISPLAY WSS-COD-OFOC IN WSS-VARI
               MOVE WSS-COD-OFOC IN WSS-VARI TO OFI-COD-OFIC IN OFI
               PERFORM VAL-OFI
               IF MSG-COD-MENS > SPACES
                   DISPLAY 'ABORTO : OFICINA INEXISTENTE ' WSS-COD-OFOC
                   PERFORM GNS-PRO-END.

      *VAL-USR Valida Codigo de Usuario en TABLAS
           IF WSS-COD-RMOC IN WSS-VARI NOT > SPACES
               MOVE '*' TO WSS-COD-RMOC IN WSS-VARI.
           IF WSS-COD-RMOC IN WSS-VARI NOT = '*'
               DISPLAY WSS-COD-RMOC IN WSS-VARI
               MOVE WSS-COD-RMOC IN WSS-VARI TO USR-COD-USER IN USR
               PERFORM VAL-USR
               IF MSG-COD-MENS > SPACES
                   DISPLAY 'ABORTO : USUARIO INEXISTENTE '
                           WSS-COD-RMOC
                   PERFORM GNS-PRO-END.

           DISPLAY 'FIN VALIDACION DE PARAMETROS'.
      *>>>>
*% END
*% IF INI_FST_INP
      *<<<< INI_FST_INP
      * Lee primer registro OPC con Fecha Inicial del rango de fechas
           MOVE WSS-FEC-FFEC IN WSS-VARI TO OPC-FEC-FCOL IN OPC.
           MOVE 'OPC-FEC-FCOL' TO FIO-AKEY.
           MOVE FIO-GET-NLS    TO FIO-CMND.
           PERFORM COL-FIO-OPC.
           IF NOT FIO-STAT-OKS OR
              OPC-FEC-FCOL IN OPC > WSS-FEC-FFET IN WSS-VARI
               DISPLAY 'NO HAY REGISTROS PARA RANGO DE FECHAS : DESDE '
                       WSS-FEC-FINI IN WSS-VARI ' A '
                       WSS-FEC-FTER IN WSS-VARI
               GO TO FIN-INP-SRT.
           GO TO LUP-INP-SRT.
      *>>>>
*% END
*% IF LUP_INP
      *<<<< LUP_INP
      *DAD
           IF OPC-MSC-STAT IN OPC NOT = 'A'
               GO TO NXT-INP-SRT.
      *
           IF WSS-COD-OFOC IN WSS-VARI NOT = '*'
               IF WSS-COD-OFOC IN WSS-VARI NOT = OPC-COD-OFOC IN OPC
                   GO TO NXT-INP-SRT.

           IF WSS-COD-RMOC IN WSS-VARI NOT = '*'
               IF WSS-COD-RMOC IN WSS-VARI NOT = OPC-COD-RMOC IN OPC
                   GO TO NXT-INP-SRT.

           MOVE OPC-CIC-IOPC IN OPC TO RDC-CIC-IOPC IN RDC.
           MOVE ZEROES              TO RDC-NUM-IDLC IN RDC.
           MOVE 'RDC-KEY-IDLC' TO FIO-AKEY.
           MOVE FIO-GET-KEY    TO FIO-CMND.
	   PERFORM COL-FIO-RDC.
	   IF NOT FIO-STAT-OKS
	       DISPLAY 'OPERACION ' OPC-CIC-IOPC IN OPC ' SIN CLIENTE'
	       GO TO NXT-INP-SRT.
                      
           MOVE RDC-CIC-ICLI IN RDC TO DBC-CIC-ICLI IN DBC.
           MOVE FIO-GET-KEY TO FIO-CMND.
	   PERFORM SGC-FIO-DBC.
	   IF NOT FIO-STAT-OKS
	       DISPLAY 'CLIENTE ' DBC-CIC-ICLI IN DBC ' INEXISTENTE'
               GO TO NXT-INP-SRT
           ELSE
               MOVE DBC-GLS-NOMC IN DBC TO CPT-STRN
               PERFORM CPT-BLKS
               MOVE CPT-STRN TO DBC-GLS-NOMC IN DBC.

           MOVE OPC-COD-VCOC IN OPC TO POC-COD-VCOC IN POC.
           MOVE OPC-COD-TOOC IN OPC TO POC-COD-TOOC IN POC.
           MOVE OPC-COD-AOOC IN OPC TO POC-COD-AOOC IN POC.
           MOVE 1                   TO POC-NUM-IPOC IN POC.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM COL-FIO-POC.
           IF NOT FIO-STAT-OKS
               DISPLAY 'OPERACION ' OPC-KEY-IOPC ' SIN PLANTILLA'
               GO TO NXT-INP-SRT
           ELSE
               PERFORM VAL-PLA-POC.

           GO TO NXT-INP-SRT.
      *>>>>
*% END
*% IF INI_NXT_INP
      *<<<< IF INI_NXT_INP
      * Mueve la Llave Alternativa por la cual se leera OPC
           MOVE 'OPC-FEC-FCOL' TO FIO-AKEY.
      *>>>>
*% END
*% IF FIN_NXT_INP
      *<<<< FIN_NXT_INP
      * Verifica que Fecha no sobrepase Fecha Superior del rango
      * de fechas
           IF OPC-FEC-FCOL IN OPC > WSS-FEC-FFET IN WSS-VARI
               GO TO FIN-INP-SRT.
      *>>>>
*% END
*% IF FST_OUT
      *<<<< FST_OUT
      * Llena glosa correspondiente a Banca
           IF DBC-IND-TICL IN SRT = 'P'
	       MOVE 'PERSONAS' TO WSS-GLS-TICL IN WSS-CCF
           ELSE
               MOVE 'EMPRESAS' TO WSS-GLS-TICL IN WSS-CCF.
      *>>>>
*% END
*% IF LUP_OUT
      *<<<< LUP_OUT
      * Mediante BUS-OFI se Obtiene Nombre de la Oficina de Tabla OFI
           IF OPC-COD-OFOC IN SRT > SPACES
               MOVE OPC-COD-OFOC IN SRT TO OFI-COD-OFIC IN OFI
               PERFORM BUS-OFI
               MOVE OFI-GLS-DESC IN OFI TO WSS-GLS-OFOC IN WSS-CCF
           ELSE
               MOVE SPACES TO WSS-GLS-OFOC IN WSS-CCF.

      * Mediante BUS-USR Busca Usuario de Tabla USR
           IF OPC-COD-RMOC IN SRT > SPACES
               MOVE OPC-COD-RMOC IN SRT TO USR-COD-USER IN USR
               PERFORM BUS-USR
               MOVE USR-GLS-DESC IN USR TO WSS-GLS-RMOC IN WSS-CCF
           ELSE
               MOVE SPACES TO WSS-GLS-RMOC IN WSS-CCF.

      * Llena glosa de observaciones
           IF SRT-GLS-OBSV IN SRT > SPACES
               MOVE 'COL' TO MSG-COD-SIST
               MOVE SRT-GLS-OBSV IN SRT TO MSG-COD-MENS
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO WSS-GLS-OBSV IN WSS-CCF.
      *>>>>
*% END
*% IF EOF
      *<<<< EOF
      **************************************************************************
       VAL-PLA-POC SECTION.
       INI-VAL-PLA-POC.
      * Validaciones del programa interactivo
      *<<<< OPC_VAL_CRED
           IF NOT ( (POC-VAL-CMIN IN POC = ZEROES OR
              POC-VAL-CMIN IN POC NOT > OPC-VAL-CRED IN OPC ) AND
              ( POC-VAL-CMAX IN POC = ZEROES OR
              POC-VAL-CMAX IN POC NOT < OPC-VAL-CRED IN OPC ) )
               MOVE 'VALCREDNORNG' TO SRT-GLS-OBSV IN SRT
               PERFORM GRABAR.

      *<<<< OPC_IND_RENO
           MOVE SPACES TO WSS-COD-DIGT.
           IF POC-IND-RENO IN POC > SPACES
               MOVE POC-IND-RENO IN POC TO NUM-NUME
               MOVE NUM-ZERO-S TO NUM-ZERO
               MOVE NUM-SGNO-N TO NUM-SGNO
               MOVE 3 TO NUM-NENT
               MOVE 0 TO NUM-NDCM
               CALL 'GNSPVNUM' USING NUM-VARI
               IF NUM-STAT-OKS
                   MOVE NUM-NN9N TO WSS-NUM-DIGT
                   MOVE WSS-NUM-DIGT TO WSS-COD-DIGT
               ELSE
                   IF POC-IND-RENO IN POC NOT = OPC-IND-RENO IN OPC
                       MOVE 'INDRENONEPLT' TO SRT-GLS-OBSV IN SRT
                       PERFORM GRABAR.

       CON-VAL-OPC-IND-RENO.
      *VAL-IND Valida miscelaneo de tabla
           MOVE 'COL' TO MSC-COD-SIST.
           MOVE 'RENO' TO MSC-COD-TMSC IN MSC.
           MOVE OPC-IND-RENO IN OPC TO MSC-COD-CMSC IN MSC.
           PERFORM VAL-MSC.
           IF MSG-COD-MENS NOT = SPACES
               GO TO FIN-VAL-OPC-IND-RENO.
           IF WSS-COD-DIGT NOT > SPACES
               GO TO FIN-VAL-OPC-IND-RENO.
           PERFORM BUS-FAM VARYING WSS-I FROM 1 BY 1 UNTIL WSS-I > 10 OR
                           WSS-COD-DIGT = MSC-COD-DAT2 (WSS-I).
           IF WSS-I > 10
               MOVE 'INDRENONEFAM' TO SRT-GLS-OBSV IN SRT
               PERFORM GRABAR.
       FIN-VAL-OPC-IND-RENO.

      *<<<< OPC_COD_SEGD
           MOVE SPACES TO WSS-COD-DIGT.
           IF POC-COD-SEGD IN POC > SPACES
               MOVE POC-COD-SEGD IN POC TO NUM-NUME
               MOVE NUM-ZERO-S TO NUM-ZERO
               MOVE NUM-SGNO-N TO NUM-SGNO
               MOVE 6 TO NUM-NENT
               MOVE 0 TO NUM-NDCM
               CALL 'GNSPVNUM' USING NUM-VARI
               IF NUM-STAT-OKS
                   MOVE NUM-NN9N TO WSS-NUM-DIGT
                   MOVE WSS-NUM-DIGT TO WSS-COD-DIGT
               ELSE
                   IF POC-COD-SEGD IN POC NOT = OPC-COD-SEGD IN OPC
                       MOVE 'CODSEGDNEPLT' TO SRT-GLS-OBSV IN SRT
                       PERFORM GRABAR.

       CON-VAL-OPC-COD-SEGD.
      *VAL-COD Valida codigo de tabla
           MOVE 'COL' TO TAB-COD-SIST.
           MOVE 'SDG' TO TAB-COD-TTAB IN TAB.
           MOVE OPC-COD-SEGD IN OPC TO TAB-COD-CTAB IN TAB.
           PERFORM VAL-TAB.
           IF MSG-COD-MENS NOT = SPACES
               GO TO FIN-VAL-OPC-COD-SEGD.
           IF WSS-COD-DIGT NOT > SPACES
               GO TO FIN-VAL-OPC-COD-SEGD.

           PERFORM BUS-FAM VARYING WSS-I FROM 1 BY 1 UNTIL WSS-I > 10 OR
                           WSS-COD-DIGT = TAB-COD-DAT2 (WSS-I).
           IF WSS-I > 10
               MOVE 'CODSEGDNEFAM' TO SRT-GLS-OBSV IN SRT
               PERFORM GRABAR.
       FIN-VAL-OPC-COD-SEGD.

      *<<<< OPC_FEC_FCOL
           IF POC-NUM-DCMI IN POC NOT > ZEROES
               MOVE ZEROES TO POC-NUM-DCMI IN POC.
           IF POC-NUM-DCMA IN POC NOT > ZEROES
               MOVE ZEROES TO POC-NUM-DCMA IN POC.
           IF POC-NUM-MCMI IN POC NOT > ZEROES
               MOVE ZEROES TO POC-NUM-MCMI IN POC.
           IF POC-NUM-MCMA IN POC NOT > ZEROES
               MOVE ZEROES TO POC-NUM-MCMA IN POC.
           IF NOT (( POC-NUM-DCMI IN POC NOT > ZEROES OR 
              POC-NUM-DCMI IN POC NOT > OPC-NUM-DCOL IN OPC ) AND
              ( POC-NUM-DCMA IN POC NOT > ZEROES OR
              POC-NUM-DCMA IN POC NOT < OPC-NUM-DCOL IN OPC ) AND
              ( POC-NUM-MCMI IN POC NOT > ZEROES OR
              POC-NUM-MCMI IN POC NOT > OPC-NUM-MCOL IN OPC ) AND
              ( POC-NUM-MCMA IN POC NOT > ZEROES OR
              POC-NUM-MCMA IN POC NOT < OPC-NUM-MCOL IN OPC ) )
               MOVE 'FECFCOLNCUR' TO SRT-GLS-OBSV IN SRT
               PERFORM GRABAR.

      *<<<< ITR_SGV_TINT
           PERFORM GET-CUR-ITR.
           IF NOT FIO-STAT-OKS
               MOVE 'OPC    NOICG' TO SRT-GLS-OBSV IN SRT
               PERFORM GRABAR
               GO TO FIN-VAL-ITR-SGV-TINT.
           PERFORM GET-NXT-ITR.
           IF WSS-IND-MITR = 'M'
               IF POC-IND-MTIC IN POC NOT = 'S'
                   MOVE 'ITRTINTNOMUL' TO SRT-GLS-OBSV IN SRT
                   PERFORM GRABAR
                   GO TO FIN-VAL-ITR-SGV-TINT
               ELSE
                   GO TO FIN-VAL-ITR-SGV-TINT.

           IF ITR-COD-CVTI IN ITR > SPACES 
               IF ITR-SGV-SPRD IN ITR = ZEROES AND
                  POC-IND-TICE IN POC NOT = 'S'
                   MOVE 'CODTINTTINTZ' TO SRT-GLS-OBSV IN SRT
                   PERFORM GRABAR
                   GO TO FIN-VAL-ITR-SGV-TINT 
               ELSE
                   IF ITR-SGV-SPRD IN ITR < ZEROES AND
                      POC-IND-TINE IN POC NOT = 'S'
                       MOVE 'CODTINTTINTN' TO SRT-GLS-OBSV IN SRT
                       PERFORM GRABAR
                       GO TO FIN-VAL-ITR-SGV-TINT
                   ELSE
                       NEXT SENTENCE
           ELSE
               IF ITR-SGV-TINT IN ITR = ZEROES AND
                  POC-IND-TICE IN POC NOT = 'S'
                   MOVE 'CODTINTTINTZ' TO SRT-GLS-OBSV IN SRT
                   PERFORM GRABAR
                   GO TO FIN-VAL-ITR-SGV-TINT
               ELSE
                   IF ITR-SGV-TINT IN ITR < ZEROES AND
                      POC-IND-TINE IN POC NOT = 'S'
                       MOVE 'CODTINTTINTN' TO SRT-GLS-OBSV IN SRT
                       PERFORM GRABAR
                       GO TO FIN-VAL-ITR-SGV-TINT.
       CON-VAL-ITR-SGV-TINT.
       FIN-VAL-ITR-SGV-TINT.

      *<<<< ITR_SGV_TINT
           PERFORM GET-CUR-COM.
           IF NOT FIO-STAT-OKS
               MOVE ZEROES TO COM-SGV-TINT IN COM 
               MOVE SPACES TO COM-COD-TINT IN COM
               GO TO NXT-VAL-COM-SGV-TINT.
           PERFORM GET-NXT-COM.
           IF WSS-IND-MCOM = 'M'
               GO TO FIN-VAL-COM-SGV-TINT.
       NXT-VAL-COM-SGV-TINT.
           IF COM-SGV-TINT IN COM = ZEROES AND
              POC-IND-TCCE IN POC NOT = 'S'
               MOVE 'CODTCOMCOMZ' TO SRT-GLS-OBSV IN SRT
               PERFORM GRABAR
               GO TO FIN-VAL-COM-SGV-TINT.
           IF COM-SGV-TINT IN COM < ZEROES AND
              POC-IND-TCNE IN POC NOT = 'S'
               MOVE 'CODTCOMCOMN' TO SRT-GLS-OBSV IN SRT
               PERFORM GRABAR
               GO TO FIN-VAL-COM-SGV-TINT.
       CON-VAL-COM-SGV-TINT.
       FIN-VAL-COM-SGV-TINT.

           IF POC-COD-TCOM IN POC NOT = COM-COD-TINT IN COM AND
              POC-COD-TCOM IN POC > SPACES
               MOVE 'COMTINTNEPLT' TO SRT-GLS-OBSV IN SRT
               PERFORM GRABAR.

           IF ( COM-COD-TINT IN COM > SPACES AND
                COM-SGV-TINT IN COM = ZEROES AND
                POC-IND-TCCE IN POC NOT = 'S' ) OR
              ( COM-COD-TINT IN COM > SPACES AND
                COM-SGV-TINT IN COM < ZEROES AND
                POC-IND-TCNE IN POC NOT = 'S' ) OR
              ( COM-COD-TINT IN COM NOT > SPACES AND
                COM-SGV-TINT IN COM NOT = ZEROES )
               MOVE 'CODTINTSGVN' TO SRT-GLS-OBSV IN SRT
               PERFORM GRABAR.

       CON-VAL-COM-COD-TINT.
           MOVE SPACES TO WSS-COD-DIGT.
           IF POC-IND-GARA IN POC > SPACES
               MOVE POC-IND-GARA IN POC TO NUM-NUME
               MOVE NUM-ZERO-S TO NUM-ZERO
               MOVE NUM-SGNO-N TO NUM-SGNO
               MOVE 3 TO NUM-NENT
               MOVE 0 TO NUM-NDCM
               CALL 'GNSPVNUM' USING NUM-VARI
               IF NUM-STAT-OKS
                   MOVE NUM-NN9N TO WSS-NUM-DIGT
                   MOVE WSS-NUM-DIGT TO WSS-COD-DIGT
               ELSE
                   IF POC-IND-GARA IN POC NOT = OPC-IND-GARA IN OPC
                       MOVE 'INDGARANEPLT' TO SRT-GLS-OBSV IN SRT
                       PERFORM GRABAR.

       CON-VAL-OPC-IND-GARA.
      *VAL-IND Valida miscelaneo de tabla
           MOVE 'COL' TO MSC-COD-SIST.
           MOVE 'GARA' TO MSC-COD-TMSC IN MSC.
           MOVE OPC-IND-GARA IN OPC TO MSC-COD-CMSC IN MSC.
           PERFORM VAL-MSC.
           IF MSG-COD-MENS NOT = SPACES
               GO TO FIN-VAL-OPC-IND-GARA.
           IF WSS-COD-DIGT NOT > SPACES
               GO TO FIN-VAL-OPC-IND-GARA.
           PERFORM BUS-FAM VARYING WSS-I FROM 1 BY 1 UNTIL WSS-I > 10 OR
                           WSS-COD-DIGT = MSC-COD-DAT2 (WSS-I).
           IF WSS-I > 10
               MOVE 'INDGARANEFAM' TO SRT-GLS-OBSV IN SRT
               PERFORM GRABAR.
       FIN-VAL-OPC-IND-GARA.

           IF POC-IND-AFER IN POC NOT = OPC-IND-AFER IN OPC AND
              POC-IND-AFER IN POC > SPACES
               MOVE 'INDAFERNEPLT' TO SRT-GLS-OBSV IN SRT
               PERFORM GRABAR.
       CON-VAL-OPC-IND-AFER.

      *<<<< OPC_MSC_MCVF
           IF POC-MSC-MCVF IN POC NOT = OPC-MSC-MCVF IN OPC AND
              POC-MSC-MCVF IN POC > SPACES
               MOVE 'MSCMCVFNEPLT' TO SRT-GLS-OBSV IN SRT
               PERFORM GRABAR.
       CON-VAL-OPC-MSC-MCVF.

      *<<<< CYA_IND_TCYA
           PERFORM GET-CUR-CYA.
           IF NOT FIO-STAT-OKS
      *        no existe CYA asociado a la OPC
               MOVE 'CYA    NEX' TO SRT-GLS-OBSV IN SRT
               GO TO FIN-VAL-CYA-IND-TCYA.

           PERFORM GET-NXT-CYA
           IF WSS-IND-MCYA = 'M'
               MOVE 'M' TO CYA-IND-TCYA IN CYA.

           MOVE SPACES TO WSS-COD-DIGT.
           IF POC-IND-TABO IN POC > SPACES
               MOVE POC-IND-TABO IN POC TO NUM-NUME
               MOVE NUM-ZERO-S TO NUM-ZERO
               MOVE NUM-SGNO-N TO NUM-SGNO
               MOVE 5 TO NUM-NENT
               MOVE 0 TO NUM-NDCM
               CALL 'GNSPVNUM' USING NUM-VARI
               IF NUM-STAT-OKS
                   MOVE NUM-NN9N TO WSS-NUM-DIGT
                   MOVE WSS-NUM-DIGT TO WSS-COD-DIGT
               ELSE
                   IF POC-IND-TABO IN POC NOT = CYA-IND-TCYA IN CYA 
                       MOVE 'INDTCYANEPLT' TO SRT-GLS-OBSV IN SRT
                       PERFORM GRABAR.

       CON-VAL-CYA-IND-TCYA.
           IF CYA-IND-TCYA IN CYA = 'M'
               MOVE SPACES TO CYA-CAI-ICYA IN CYA
               MOVE ZEROES TO CYA-IIC-ICYA IN CYA
               GO TO FIN-VAL-CYA-IND-TCYA.
      *VAL-IND Valida miscelaneo de tabla
           MOVE 'TAB' TO MSC-COD-SIST.
           MOVE 'TCYA' TO MSC-COD-TMSC IN MSC.
           MOVE CYA-IND-TCYA IN CYA TO MSC-COD-CMSC IN MSC.
           PERFORM VAL-MSC.
           IF MSG-COD-MENS NOT = SPACES
               GO TO FIN-VAL-CYA-IND-TCYA.
           IF WSS-COD-DIGT NOT > SPACES
               GO TO FIN-VAL-CYA-IND-TCYA.
           PERFORM BUS-FAM VARYING WSS-I FROM 1 BY 1 UNTIL WSS-I > 10 OR
                           WSS-COD-DIGT = MSC-COD-DAT2 (WSS-I).
           IF WSS-I > 10
               MOVE 'INDTCYANEFAM' TO SRT-GLS-OBSV IN SRT
               PERFORM GRABAR.
       FIN-VAL-CYA-IND-TCYA.

      *<<<< OPC_COD_CDOC
           MOVE SPACES TO WSS-COD-DIGT.
           IF POC-COD-CDOC IN POC > SPACES
               MOVE POC-COD-CDOC IN POC TO NUM-NUME
               MOVE NUM-ZERO-S TO NUM-ZERO
               MOVE NUM-SGNO-N TO NUM-SGNO
               MOVE 3 TO NUM-NENT
               MOVE 0 TO NUM-NDCM
               CALL 'GNSPVNUM' USING NUM-VARI
               IF NUM-STAT-OKS
                   MOVE NUM-NN9N TO WSS-NUM-DIGT
                   MOVE WSS-NUM-DIGT TO WSS-COD-DIGT
               ELSE
                   IF POC-COD-CDOC IN POC NOT = OPC-COD-CDOC IN OPC
                       MOVE 'CODCDOCNEPLT' TO SRT-GLS-OBSV IN SRT
                       PERFORM GRABAR.

       CON-VAL-OPC-COD-CDOC.
      *VAL-COD Valida codigo de tabla
           MOVE 'COL' TO TAB-COD-SIST.
           MOVE 'DES' TO TAB-COD-TTAB IN TAB.
           MOVE OPC-COD-CDOC IN OPC TO TAB-COD-CTAB IN TAB.
           PERFORM VAL-TAB.
           IF MSG-COD-MENS NOT = SPACES
               GO TO FIN-VAL-OPC-COD-CDOC.
           IF WSS-COD-DIGT NOT > SPACES
               GO TO FIN-VAL-OPC-COD-CDOC.
           PERFORM BUS-FAM VARYING WSS-I FROM 1 BY 1 UNTIL WSS-I > 10 OR
                           WSS-COD-DIGT = TAB-COD-DAT2 (WSS-I).
           IF WSS-I > 10
               MOVE 'CODCDOCNEFAM' TO SRT-GLS-OBSV IN SRT
               PERFORM GRABAR.
       FIN-VAL-OPC-COD-CDOC.

           PERFORM GET-CUR-RDC.
           IF NOT FIO-STAT-OKS
               MOVE 'OPC    NORDC' TO SRT-GLS-OBSV IN SRT
               PERFORM GRABAR
               GO TO FIN-VAL-CON-FLD-OPC.
           PERFORM GET-NXT-RDC.
           IF WSS-IND-MRDC IN WSS-VARI NOT = 'M'
               MOVE RDC-CIC-ICLI IN RDC TO DBC-CIC-ICLI IN DBC
               MOVE FIO-GET-KEY TO FIO-CMND
	       PERFORM SGC-FIO-DBC
               PERFORM VAL-ACTI
               IF MSG-COD-MENS > SPACES
                   MOVE MSG-COD-MENS TO SRT-GLS-OBSV IN SRT
                   PERFORM GRABAR
                   GO TO FIN-VAL-CON-FLD-OPC.
       FIN-VAL-CON-FLD-OPC.

      *ICU[
       INI-VAL-OPC-NUM-VCVG.
           IF OPC-NUM-VCVG IN OPC < POC-NUM-VMIN IN POC OR
              OPC-NUM-VCVG IN OPC > POC-NUM-VMAX IN POC
               MOVE 'NUMVCVGNORNG' TO SRT-GLS-OBSV IN SRT
               PERFORM GRABAR.
       FIN-VAL-OPC-NUM-VCVG.

           PERFORM CHK-VOPC.
           PERFORM CHK-FPCI.
      *ICU]

       
       FIN-VAL-PLA-POC.
           EXIT.
      **************************************************************************
       VAL-ACTI SECTION.
       INI-VAL-ACTI.
               MOVE SPACES TO WSS-COD-DIGT.
           IF POC-COD-ACTI IN POC > SPACES
               MOVE POC-COD-ACTI IN POC TO NUM-NUME
               MOVE NUM-ZERO-S TO NUM-ZERO
               MOVE NUM-SGNO-N TO NUM-SGNO
               MOVE 9 TO NUM-NENT
               MOVE 0 TO NUM-NDCM
               CALL 'GNSPVNUM' USING NUM-VARI
               IF NUM-STAT-OKS
                   MOVE 'TAB' TO TAB-COD-SIST
                   MOVE 'ACT' TO TAB-COD-TTAB IN TAB
                   MOVE POC-COD-ACTI IN POC TO TAB-COD-CTAB IN TAB
                   PERFORM BUS-TAB
                   IF MSG-COD-MENS > SPACES
                       MOVE NUM-NN9N TO WSS-NUM-DIGT
                       MOVE WSS-NUM-DIGT TO WSS-COD-DIGT
                   ELSE
                   IF POC-COD-ACTI IN POC NOT = DBC-COD-ACTI IN DBC 
                       MOVE 'CODACTINEPLT' TO SRT-GLS-OBSV IN SRT
                       PERFORM GRABAR
                   ELSE
                       NEXT SENTENCE
               ELSE
                   IF POC-COD-ACTI IN POC NOT = DBC-COD-ACTI IN DBC 
                       MOVE 'CODACTINEPLT' TO SRT-GLS-OBSV IN SRT
                       PERFORM GRABAR.

           IF WSS-COD-DIGT NOT > SPACES
               GO TO FIN-VAL-ACTI.
           MOVE 'TAB' TO TAB-COD-SIST
           MOVE 'ACT' TO TAB-COD-TTAB IN TAB
           MOVE DBC-COD-ACTI IN DBC TO TAB-COD-CTAB IN TAB
           PERFORM BUS-TAB
           PERFORM BUS-FAM VARYING WSS-I FROM 1 BY 1 UNTIL WSS-I > 10 OR
                           WSS-COD-DIGT = TAB-COD-DAT2 (WSS-I).
           IF WSS-I > 10
               MOVE 'CODACTINEFAM' TO SRT-GLS-OBSV IN SRT
               PERFORM GRABAR.
       FIN-VAL-ACTI.
           EXIT.
      **************************************************************************
       GRABAR SECTION.
       INI-GRABAR.
           MOVE DBC-GLS-NOMC IN DBC TO CPT-STRN.
           PERFORM CPT-BLKS.
           MOVE CPT-STRN TO DBC-GLS-NOMC IN DBC.
           COPY COLRMCCF.
           RELEASE SRT.
      * MOVE SPACES TO SRT-GLS-OBSV IN SRT.
       FIN-GRABAR.
           EXIT.
      **************************************************************************
       BUS-FAM SECTION.
       INI-BUS-FAM.
       FIN-BUS-FAM.
           EXIT.
      **************************************************************************
       GET-CUR-ITR SECTION.
       INI-GET-CUR-ITR.
           MOVE 'ITR-KEY-IICG' TO FIO-AKEY.
           MOVE OPC-CIC-IOPC IN OPC TO ITR-CIC-IOPC IN ITR.
           MOVE ZEROES              TO ITR-NUM-ICAN IN ITR.
           MOVE SPACES              TO ITR-CIC-IOPV IN ITR
           MOVE ZEROES              TO ITR-NUM-IVCT IN ITR
           MOVE 'INT'               TO ITR-IND-TTAS IN ITR.
           MOVE ZEROES              TO ITR-FEC-FINI IN ITR.
           MOVE FIO-GET-NLS TO FIO-CMND.
           PERFORM COL-FIO-ITR.
           IF NOT ( FIO-STAT-OKS AND
                    ITR-CIC-IOPC IN ITR = OPC-CIC-IOPC IN OPC AND
                    ITR-NUM-ICAN IN ITR = ZEROES              AND
                    ITR-CIC-IOPV IN ITR = SPACES              AND
                    ITR-NUM-IVCT IN ITR = ZEROES              AND
                    ITR-IND-TTAS IN ITR = 'INT'  )
               MOVE '23' TO FIO-STAT.
       FIN-GET-CUR-ITR.
           EXIT.

       GET-NXT-ITR SECTION.
       INI-GET-NXT-ITR.
           MOVE 'ITR-KEY-IICG' TO FIO-AKEY.
           MOVE FIO-GET-NXT TO FIO-CMND.
           PERFORM COL-FIO-ITR.
           IF FIO-STAT-OKS                              AND
              ITR-CIC-IOPC IN ITR = OPC-CIC-IOPC IN OPC AND
              ITR-NUM-ICAN IN ITR = ZEROES              AND
              ITR-CIC-IOPV IN ITR = SPACES              AND
              ITR-NUM-IVCT IN ITR = ZEROES              AND
              ITR-IND-TTAS IN ITR = 'INT'
                MOVE 'M' TO WSS-IND-MITR
           ELSE
                MOVE SPACES TO WSS-IND-MITR
                PERFORM GET-CUR-ITR.
       FIN-GET-NXT-ITR.
           EXIT.
      **************************************************************************
       GET-CUR-COM SECTION.
       INI-GET-CUR-COM.
           MOVE 'COM-KEY-IICG' TO FIO-AKEY.
           MOVE OPC-CIC-IOPC IN OPC TO COM-CIC-IOPC IN COM.
           MOVE ZEROES              TO COM-NUM-ICAN IN COM.
           MOVE SPACES              TO COM-CIC-IOPV IN COM.
           MOVE ZEROES              TO COM-NUM-IVCT IN COM.
           MOVE 'COM'               TO COM-IND-TTAS IN COM.
           MOVE ZEROES              TO COM-FEC-FINI IN COM.
           MOVE FIO-GET-NLS TO FIO-CMND.
           PERFORM COL-FIO-COM.
           IF NOT ( FIO-STAT-OKS AND
                    COM-CIC-IOPC IN COM = OPC-CIC-IOPC IN OPC AND
                    COM-NUM-ICAN IN COM = ZEROES              AND
                    COM-CIC-IOPV IN COM = SPACES              AND
                    COM-NUM-IVCT IN COM = ZEROES              AND
                    COM-IND-TTAS IN COM = 'COM' )
               MOVE '23' TO FIO-STAT.
       FIN-GET-CUR-COM.
           EXIT.

       GET-NXT-COM SECTION.
       INI-GET-NXT-COM.
           MOVE 'COM-KEY-IICG' TO FIO-AKEY.
           MOVE FIO-GET-NXT TO FIO-CMND.
           PERFORM COL-FIO-COM.
           IF FIO-STAT-OKS                              AND
              COM-CIC-IOPC IN COM = OPC-CIC-IOPC IN OPC AND
              COM-NUM-ICAN IN COM = ZEROES              AND
              COM-CIC-IOPV IN COM = SPACES              AND
              COM-NUM-IVCT IN COM = ZEROES              AND
              COM-IND-TTAS IN COM = 'COM'
                MOVE 'M' TO WSS-IND-MCOM
           ELSE
                MOVE SPACES TO WSS-IND-MCOM
                PERFORM GET-CUR-COM.
       FIN-GET-NXT-COM.
           EXIT.
      **************************************************************************
       GET-CUR-RDC SECTION.
       INI-GET-CUR-RDC.
           MOVE OPC-CAI-IOPC IN OPC TO RDC-CAI-IOPC IN RDC.
           MOVE OPC-IIC-IOPC IN OPC TO RDC-IIC-IOPC IN RDC.
           MOVE ZEROES              TO RDC-NUM-IDLC IN RDC.
           MOVE 'RDC-KEY-IDLC' TO FIO-AKEY.
           MOVE FIO-GET-KEY    TO FIO-CMND.
           PERFORM COL-FIO-RDC.
       FIN-GET-CUR-RDC.
           EXIT.

       GET-NXT-RDC SECTION.
       INI-GET-NXT-RDC.
           MOVE SPACES TO MSG-COD-SIST.
           MOVE SPACES TO MSG-COD-MENS.
           MOVE 'RDC-KEY-IDLC' TO FIO-AKEY.
           MOVE FIO-GET-NXT TO FIO-CMND.
           PERFORM COL-FIO-RDC.
           IF FIO-STAT-OKS AND
              OPC-CAI-IOPC IN OPC = RDC-CAI-IOPC IN RDC AND
              OPC-IIC-IOPC IN OPC = RDC-IIC-IOPC IN RDC AND
              RDC-NUM-IDLC IN RDC = ZEROES
                MOVE 'M' TO WSS-IND-MRDC
           ELSE
                MOVE SPACES TO WSS-IND-MRDC
                PERFORM GET-CUR-RDC.
       FIN-GET-NXT-RDC.
           EXIT.


      *ICU[
       CHK-VOPC SECTION.
       INI-CHK-VOPC.
           MOVE 'S' TO WSS-EPOC.

      *     PERFORM KEY-OPC-OPC.

           MOVE ZEROES     TO WSS-FMIV.
           MOVE '99999999' TO WSS-FMAV.
           MOVE ZEROES TO WSS-NEEV.

      *     MOVE OPC-COD-VCOC IN OPC TO POC-COD-VCOC IN POC.
      *     MOVE OPC-COD-TOOC IN OPC TO POC-COD-TOOC IN POC.
      *     MOVE OPC-COD-AOOC IN OPC TO POC-COD-AOOC IN POC.
      *     MOVE ZEROES              TO POC-NUM-IPOC IN POC.
      *     MOVE FIO-GET-KEY TO FIO-CMND.
      *     PERFORM COL-FIO-POC.
      *     IF NOT FIO-STAT-OKS
      *        GO TO FIN-CHK-VOPC.
      *         MOVE 'N' TO WSS-EPOC
      *     ELSE

           IF POC-NUM-PMIN IN POC NOT > ZEROES AND
              POC-NUM-PMAX IN POC NOT > ZEROES
      *        GO TO FIN-CHK-VOPC.
               MOVE 'Z' TO WSS-EPOC.

           IF WSS-EPOC NOT = 'S'
               GO TO SK1-CHK-VOPC.

           IF POC-NUM-PMIN IN POC > ZEROES
               MOVE POC-IND-PMIN IN POC TO WSS-USEP
               MOVE POC-NUM-PMIN IN POC TO WSS-VSEP
               PERFORM CAL-FECH
               IF MSG-COD-MENS > SPACES
                   PERFORM GRABAR
      *             GO TO ERR-CHK-VOPC
               ELSE
                   MOVE FEC-ITM1 TO WSS-DMIV
                   MOVE FEC-ITM2 TO WSS-MMIV
                   MOVE FEC-ITM3 TO WSS-SMIV
                   MOVE FEC-ITM4 TO WSS-AMIV.

           IF POC-NUM-PMAX IN POC > ZEROES
               MOVE POC-IND-PMAX IN POC TO WSS-USEP
               MOVE POC-NUM-PMAX IN POC TO WSS-VSEP
               PERFORM CAL-FECH
               IF MSG-COD-MENS > SPACES
                   PERFORM GRABAR
      *             GO TO ERR-CHK-VOPC
               ELSE
                   MOVE FEC-ITM1 TO WSS-DMAV
                   MOVE FEC-ITM2 TO WSS-MMAV
                   MOVE FEC-ITM3 TO WSS-SMAV
                   MOVE FEC-ITM4 TO WSS-AMAV.

      *JSS-TRC
      *     MOVE 'FECHA MINIMA : ' TO DSP-GLS-MEN1.
      *     MOVE WSS-FMIV          TO DSP-GLS-MEN2.
      *     PERFORM GNS-DSP-MENS.
      *JSS-TRC
      *     MOVE 'FECHA MAXIMA : ' TO DSP-GLS-MEN1.
      *     MOVE WSS-FMAV          TO DSP-GLS-MEN2.
      *     PERFORM GNS-DSP-MENS.

           MOVE ZEROES TO WSS-FPPI WSS-FPPC.

       SK1-CHK-VOPC.

           MOVE ZEROES TO WSS-FUVC WSS-NEUV.
           MOVE SPACES TO WSS-IVUV.

           MOVE OPC-CAI-IOPC IN OPC TO EVC-CAI-IOPC IN EVC.
           MOVE OPC-IIC-IOPC IN OPC TO EVC-IIC-IOPC IN EVC.
           MOVE ZEROES              TO EVC-NUM-IEVC IN EVC.
           MOVE FIO-GET-NLS TO FIO-CMND.
       LUP-CHK-VOPC.
           PERFORM COL-FIO-EVC.
           IF NOT ( FIO-STAT-OKS AND
                    EVC-CAI-IOPC IN EVC = OPC-CAI-IOPC IN OPC AND
                    EVC-IIC-IOPC IN EVC = OPC-IIC-IOPC IN OPC )
               GO TO EEV-CHK-VOPC.

           IF WSS-EPOC = 'N'
               GO TO SK2-CHK-VOPC.

           IF ( EVC-VAL-VENC IN EVC > ZEROES ) OR
              ( EVC-MSC-BCCR IN EVC NOT = 'I' )
               IF WSS-FPPC NOT > ZEROES OR
                  WSS-FPPC     > EVC-FEC-FPVC IN EVC
                   IF OPC-IND-AFER IN OPC = 'N'
                       MOVE EVC-FEC-FPVC IN EVC TO WSS-FPPC
                   ELSE
                       MOVE EVC-NUM-DPVC IN EVC TO FEC-ITM1
                       MOVE EVC-NUM-MPVC IN EVC TO FEC-ITM2
                       MOVE EVC-NUM-SPVC IN EVC TO FEC-ITM3
                       MOVE EVC-NUM-APVC IN EVC TO FEC-ITM4
                       PERFORM ANL-FRDO
                       IF MSG-COD-MENS NOT > SPACES
                           MOVE FEC-ITM1 TO WSS-DPPC
                           MOVE FEC-ITM2 TO WSS-MPPC
                           MOVE FEC-ITM3 TO WSS-SPPC
                           MOVE FEC-ITM4 TO WSS-APPC
                       ELSE
                           PERFORM GRABAR.
      *                     GO TO ERR-CHK-VOPC.
                       
           IF WSS-FPPI NOT > ZEROES OR
              WSS-FPPI     > EVC-FEC-FPVC IN EVC
                   IF OPC-IND-AFER IN OPC = 'N'
                       MOVE EVC-FEC-FPVC IN EVC TO WSS-FPPI
                   ELSE
                       MOVE EVC-NUM-DPVC IN EVC TO FEC-ITM1
                       MOVE EVC-NUM-MPVC IN EVC TO FEC-ITM2
                       MOVE EVC-NUM-SPVC IN EVC TO FEC-ITM3
                       MOVE EVC-NUM-APVC IN EVC TO FEC-ITM4
                       PERFORM ANL-FRDO
                       IF MSG-COD-MENS NOT > SPACES
                           MOVE FEC-ITM1 TO WSS-DPPI
                           MOVE FEC-ITM2 TO WSS-MPPI
                           MOVE FEC-ITM3 TO WSS-SPPI
                           MOVE FEC-ITM4 TO WSS-APPI
                       ELSE
      *ICU[                           
      *                     MOVE 'ANLFRDOFVHBL' TO SRT-GLS-OBSV IN SRT
      *                    mismas situaciones. distintos mensajes
      *                    para que no aparezca la misma opc repetida
                           MOVE 'ANLFRDOFVHBI' TO SRT-GLS-OBSV IN SRT
      *ICU]
                           PERFORM GRABAR.
      *                     GO TO ERR-CHK-VOPC.

       SK2-CHK-VOPC.

           IF EVC-NUM-VIGU IN EVC NOT > 1
               MOVE EVC-NUM-DPVC IN EVC TO FEC-ITM1
               MOVE EVC-NUM-MPVC IN EVC TO FEC-ITM2
               MOVE EVC-NUM-SPVC IN EVC TO FEC-ITM3
               MOVE EVC-NUM-APVC IN EVC TO FEC-ITM4
               GO TO HBL-CHK-VOPC.

           COMPUTE EVC-NUM-SEVE IN EVC = EVC-NUM-SEVE IN EVC *
                                       ( EVC-NUM-VIGU IN EVC - 1 ).
           IF EVC-IND-UTSV IN EVC = 'D'
               MOVE FEC-SUM-DIA         TO FEC-CMND
               MOVE EVC-NUM-SEVE IN EVC TO FEC-NDIA
           ELSE
           IF EVC-IND-UTSV IN EVC = 'M'
               MOVE FEC-SUM-MES         TO FEC-CMND
               MOVE EVC-NUM-SEVE IN EVC TO FEC-NMES
           ELSE
           IF EVC-IND-UTSV IN EVC = 'A'
               MOVE FEC-SUM-ANO         TO FEC-CMND
               MOVE EVC-NUM-SEVE IN EVC TO FEC-NANO
           ELSE
      *         MOVE 'EVCUTSVINV' TO MSG-COD-MENS
               MOVE 'EVCUTSVINV' TO SRT-GLS-OBSV IN SRT
               PERFORM GRABAR.
      *         GO TO ERR-CHK-VOPC.


           MOVE EVC-NUM-DPVC IN EVC TO FEC-ITM1.
           MOVE EVC-NUM-MPVC IN EVC TO FEC-ITM2.
           MOVE EVC-NUM-SPVC IN EVC TO FEC-ITM3.
           MOVE EVC-NUM-APVC IN EVC TO FEC-ITM4.
           MOVE FEC-FORM-FEC TO FEC-FORM.
           PERFORM CAL-FEC.
      *    PERFORM PRO-FEC.
           IF NOT FEC-STAT-OKS
      *         MOVE 'CHKVOPCFSUM' TO MSG-COD-MENS
               MOVE 'CHKVOPCFSUM' TO SRT-GLS-OBSV IN SRT
               PERFORM GRABAR.
      *         GO TO ERR-CHK-VOPC.

           MOVE EVC-IND-UTSV IN EVC TO INT-IPER.
           MOVE EVC-NUM-DPVE IN EVC TO CVI-DVEN.
           PERFORM CHK-DIA-VEN.

      *JSS-TRC.
      *     MOVE 'UTSV,'             TO DSP-GLS-MENA.
      *     MOVE 'SEVE : '           TO DSP-GLS-MENB.
      *     MOVE EVC-IND-UTSV IN EVC TO DSP-GLS-MENC.
      *     MOVE EVC-NUM-SEVE IN EVC TO DSP-SV1-13V4.
      *     PERFORM GNS-DSP-MENS.

      *JSS-TRC.
      *     MOVE 'FECHA FINAL ESTRUC (S/FER) :' TO DSP-GLS-MENS.
      *     MOVE FEC-FECH                       TO DSP-GLS-MEN2.
      *     PERFORM GNS-DSP-MENS.

           IF OPC-IND-AFER IN OPC = 'N'
               GO TO CON-CHK-VOPC.

       HBL-CHK-VOPC.

           MOVE FEC-FBLK-N  TO FEC-FBLK.
           MOVE FEC-CHOY-N  TO FEC-CHOY.
           MOVE FEC-VHBL-S  TO FEC-VHBL.
           MOVE FEC-VAL-FEC TO FEC-CMND.
           MOVE FEC-FORM-FEC TO FEC-FORM.
           PERFORM PRO-FEC.
           IF ( NOT FEC-STAT-OKS ) AND ( NOT FEC-STAT-FER )
      *         MOVE 'CHKVOPCFVHBL' TO MSG-COD-MENS
               MOVE 'CHKVOPCFVHBL' TO SRT-GLS-OBSV IN SRT
               PERFORM GRABAR.
      *         GO TO ERR-CHK-VOPC.

           IF NOT FEC-STAT-FER
               GO TO CON-CHK-VOPC.

           MOVE FEC-FORM-FEC TO FEC-FORM.
           MOVE FEC-SIG-HBL  TO FEC-CMND.
      *    PERFORM PRO-FEC.
           PERFORM CAL-FEC.
           IF NOT FEC-STAT-OKS
      *         MOVE 'CHKVOPCFSHBL' TO MSG-COD-MENS
               MOVE 'CHKVOPCFSHBL' TO SRT-GLS-OBSV IN SRT
               PERFORM GRABAR.
      *         GO TO ERR-CHK-VOPC.

       CON-CHK-VOPC.

           MOVE FEC-ITM1 TO WSS-DVNC.
           MOVE FEC-ITM2 TO WSS-MVNC.
           MOVE FEC-ITM3 TO WSS-SVNC.
           MOVE FEC-ITM4 TO WSS-AVNC.

      *JSS-TRC
      *     MOVE 'FECHA ESTRUCTURA : ' TO DSP-GLS-MEN1.
      *     MOVE WSS-FVNC              TO DSP-GLS-MEN2.
      *     PERFORM GNS-DSP-MENS.

           IF ( WSS-FUVC NOT > ZEROES OR
                WSS-FVNC     > WSS-FUVC ) 
               MOVE WSS-FVNC            TO WSS-FUVC
               MOVE EVC-NUM-IEVC IN EVC TO WSS-NEUV
               IF ( EVC-MSC-BCCR IN EVC = 'I' ) AND
                  (  EVC-VAL-VENC IN EVC NOT > ZEROES )
                   MOVE 'Z' TO WSS-IVUV
               ELSE
                   MOVE SPACES TO WSS-IVUV.

           IF WSS-EPOC = 'S'
               IF WSS-FVNC > WSS-FMAV
      *             MOVE 'OPCFFINFMAX>' TO MSG-COD-MENS
                   MOVE 'OPCFFINFMAX>' TO SRT-GLS-OBSV IN SRT
                   PERFORM GRABAR.
      *             GO TO ERR-CHK-VOPC.
           IF WSS-EPOC = 'S'
               IF WSS-FVNC NOT < WSS-FMIV
                   ADD 1 TO WSS-NEEV.

           MOVE FIO-GET-NXT TO FIO-CMND.
           GO TO LUP-CHK-VOPC.
       EEV-CHK-VOPC.

           IF WSS-EPOC = 'S'
               IF WSS-NEEV = ZEROES
      *             MOVE 'OPCFFINFMIN<' TO MSG-COD-MENS
                   MOVE 'OPCFFINFMIN<' TO SRT-GLS-OBSV IN SRT
                   PERFORM GRABAR.
      *             GO TO ERR-CHK-VOPC.

           IF WSS-ULTIMO-VENC-EN-ZERO
      *         MOVE 'OPCUVNCZERO=' TO MSG-COD-MENS
               MOVE 'OPCUVNCZERO=' TO SRT-GLS-OBSV IN SRT
      *         MOVE WSS-NEUV TO FRM-MEN2
               PERFORM GRABAR.
      *         GO TO ERR-CHK-VOPC.

           GO TO FIN-CHK-VOPC.

      * ERR-CHK-VOPC.
      *     MOVE 'COL' TO MSG-COD-SIST.
      *     PERFORM GET-MSG.
      *     MOVE MSG-GLS-DESC TO FRM-MEN1.
      *     MOVE FRM-SUAR-MAL TO FRM-SUAR.
      *     PERFORM GRABAR.
       FIN-CHK-VOPC.
           EXIT.

       CHK-FPCI SECTION.
       INI-CHK-FPCI.
           IF WSS-EPOC = 'N'
               GO TO FIN-CHK-FPCI.

           IF POC-NUM-MINC IN POC NOT > ZEROES AND
              POC-NUM-MAXC IN POC NOT > ZEROES AND
              POC-NUM-MINI IN POC NOT > ZEROES AND
              POC-NUM-MAXI IN POC NOT > ZEROES
               GO TO FIN-CHK-FPCI.

           MOVE ZEROES     TO WSS-FIPC WSS-FIPI.
           MOVE '99999999' TO WSS-FSPC WSS-FSPI.

           IF POC-NUM-MINC IN POC > ZEROES
               MOVE POC-IND-MINC IN POC TO WSS-USEP
               MOVE POC-NUM-MINC IN POC TO WSS-VSEP
               PERFORM CAL-FECH
               IF MSG-COD-MENS > SPACES
                   PERFORM GRABAR
      *             GO TO ERR-CHK-FPCI
               ELSE
                   MOVE FEC-ITM1 TO WSS-DIPC
                   MOVE FEC-ITM2 TO WSS-MIPC
                   MOVE FEC-ITM3 TO WSS-SIPC
                   MOVE FEC-ITM4 TO WSS-AIPC.

           IF POC-NUM-MAXC IN POC > ZEROES
               MOVE POC-IND-MAXC IN POC TO WSS-USEP
               MOVE POC-NUM-MAXC IN POC TO WSS-VSEP
               PERFORM CAL-FECH
               IF MSG-COD-MENS > SPACES
                   PERFORM GRABAR
      *             GO TO ERR-CHK-FPCI
               ELSE
                   MOVE FEC-ITM1 TO WSS-DSPC
                   MOVE FEC-ITM2 TO WSS-MSPC
                   MOVE FEC-ITM3 TO WSS-SSPC
                   MOVE FEC-ITM4 TO WSS-ASPC.

           IF POC-NUM-MINI IN POC > ZEROES
               MOVE POC-IND-MINI IN POC TO WSS-USEP
               MOVE POC-NUM-MINI IN POC TO WSS-VSEP
               PERFORM CAL-FECH
               IF MSG-COD-MENS > SPACES
                   PERFORM GRABAR
      *             GO TO ERR-CHK-FPCI
               ELSE
                   MOVE FEC-ITM1 TO WSS-DIPI
                   MOVE FEC-ITM2 TO WSS-MIPI
                   MOVE FEC-ITM3 TO WSS-SIPI
                   MOVE FEC-ITM4 TO WSS-AIPI.

           IF POC-NUM-MAXI IN POC > ZEROES
               MOVE POC-IND-MAXI IN POC TO WSS-USEP
               MOVE POC-NUM-MAXI IN POC TO WSS-VSEP
               PERFORM CAL-FECH
               IF MSG-COD-MENS > SPACES
                   PERFORM GRABAR
      *             GO TO ERR-CHK-FPCI
               ELSE
                   MOVE FEC-ITM1 TO WSS-DSPI
                   MOVE FEC-ITM2 TO WSS-MSPI
                   MOVE FEC-ITM3 TO WSS-SSPI
                   MOVE FEC-ITM4 TO WSS-ASPI.

           IF WSS-FPPC < WSS-FIPC
      *         MOVE 'EVCFPPCMINC<' TO MSG-COD-MENS
               MOVE 'EVCFPPCMINC<' TO SRT-GLS-OBSV IN SRT
               PERFORM GRABAR
      *         GO TO ERR-CHK-FPCI
           ELSE
           IF WSS-FPPC > WSS-FSPC
      *         MOVE 'EVCFPPCMAXC>' TO MSG-COD-MENS
               MOVE 'EVCFPPCMAXC>' TO SRT-GLS-OBSV IN SRT
               PERFORM GRABAR.
      *         GO TO ERR-CHK-FPCI.

           IF WSS-FPPI < WSS-FIPI
      *         MOVE 'EVCFPPIMINI<' TO MSG-COD-MENS
               MOVE 'EVCFPPIMINI<' TO SRT-GLS-OBSV IN SRT
               PERFORM GRABAR
      *         GO TO ERR-CHK-FPCI
           ELSE
           IF WSS-FPPI > WSS-FSPI
      *         MOVE 'EVCFPPIMAXI>' TO MSG-COD-MENS
               MOVE 'EVCFPPIMAXI>' TO SRT-GLS-OBSV IN SRT
               PERFORM GRABAR.
      *         GO TO ERR-CHK-FPCI.
           GO TO FIN-CHK-FPCI.

      * ERR-CHK-FPCI.
      *     MOVE 'COL' TO MSG-COD-SIST.
      *     PERFORM GET-MSG.
      *     MOVE MSG-GLS-DESC TO FRM-MEN1.
      *     MOVE FRM-SUAR-MAL TO FRM-SUAR.
      *     PERFORM GRABAR.
       FIN-CHK-FPCI.
           EXIT.

       CAL-FECH SECTION.
       INI-CAL-FECH.
           MOVE SPACES TO MSG-COD-MENS.
           IF WSS-USEP = 'D'
               MOVE WSS-VSEP    TO FEC-NDIA
               MOVE FEC-SUM-DIA TO FEC-CMND
           ELSE
           IF WSS-USEP = 'M'
               MOVE WSS-VSEP    TO FEC-NMES
               MOVE FEC-SUM-MES TO FEC-CMND
           ELSE
           IF WSS-USEP = 'A'
               MOVE WSS-VSEP    TO FEC-NANO
               MOVE FEC-SUM-ANO TO FEC-CMND
           ELSE
      *         MOVE 'INDUSEPINV' TO MSG-COD-MENS
               MOVE 'INDUSEPINV' TO SRT-GLS-OBSV IN SRT
               GO TO FIN-CAL-FECH.

      *ICU[
      *     MOVE OPC-FEC-FCOL IN OPC TO FEC-FECH.
           MOVE OPC-NUM-DCOL IN OPC TO FEC-ITM1 IN FEC-VARI.
           MOVE OPC-NUM-MCOL IN OPC TO FEC-ITM2 IN FEC-VARI.
           MOVE OPC-NUM-SCOL IN OPC TO FEC-ITM3 IN FEC-VARI.
           MOVE OPC-NUM-ACOL IN OPC TO FEC-ITM4 IN FEC-VARI.
      *ICU]
           MOVE FEC-FORM-FEC            TO FEC-FORM.
      *    PERFORM PRO-FEC.
           PERFORM CAL-FEC.
           IF NOT FEC-STAT-OKS
      *         MOVE 'CALFECHFSUM' TO MSG-COD-MENS.
               MOVE 'CALFECHFSUM' TO SRT-GLS-OBSV IN SRT.
       FIN-CAL-FECH.
           EXIT.

       ANL-FRDO SECTION.
       INI-ANL-FRDO.
           MOVE SPACES TO MSG-COD-MENS.

           MOVE FEC-FBLK-N   TO FEC-FBLK.
           MOVE FEC-CHOY-N   TO FEC-CHOY.
           MOVE FEC-VHBL-S   TO FEC-VHBL.
           MOVE FEC-VAL-FEC  TO FEC-CMND.
           MOVE FEC-FORM-FEC TO FEC-FORM.
           PERFORM PRO-FEC.
           IF ( NOT FEC-STAT-OKS ) AND ( NOT FEC-STAT-FER )
      *         MOVE 'ANLFRDOFVHBL' TO MSG-COD-MENS
               MOVE 'ANLFRDOFVHBL' TO SRT-GLS-OBSV IN SRT
               GO TO FIN-ANL-FRDO.

           IF FEC-STAT-FER
               MOVE FEC-FORM-FEC TO FEC-FORM
               MOVE FEC-SIG-HBL  TO FEC-CMND
      *        PERFORM PRO-FEC
               PERFORM CAL-FEC
               IF NOT FEC-STAT-OKS
      *             MOVE 'ANLFRDOFSHBL' TO MSG-COD-MENS
                   MOVE 'ANLFRDOFSHBL' TO SRT-GLS-OBSV IN SRT
                   GO TO FIN-ANL-FRDO.

           MOVE SPACES TO MSG-COD-MENS.
       FIN-ANL-FRDO.
           EXIT.


       CHK-1ER-VCTO SECTION.
       INI-CHK-1ER-VCTO.
      * obtencion de la menor fecha 1er vcto entre las EVC de la OPC
           MOVE '99999999' TO WSS-FEC-FPVC IN WSS-VARI.
           MOVE OPC-CIC-IOPC IN OPC TO EVC-CIC-IOPC IN EVC.
           MOVE ZEROES              TO EVC-NUM-IEVC IN EVC.
           MOVE FIO-GET-KEY TO FIO-CMND.
       INI-LUP-CHK-1ER-VCTO.
           PERFORM COL-FIO-EVC.
           IF NOT ( FIO-STAT-OKS AND
                OPC-CIC-IOPC IN OPC = EVC-CIC-IOPC IN EVC )
               GO TO FIN-LUP-CHK-1ER-VCTO.
           IF EVC-FEC-FPVC IN EVC < WSS-FEC-FPVC IN WSS-VARI
               MOVE EVC-FEC-FPVC IN EVC TO WSS-FEC-FPVC IN WSS-VARI.
           GO TO INI-LUP-CHK-1ER-VCTO.
       FIN-LUP-CHK-1ER-VCTO.
      * calculo del periodo 1er vcto exp. en dias
      * fecha 1er vcto
           MOVE WSS-NUM-SPVC IN WSS-VARI TO FEC-SEC1.
           MOVE WSS-NUM-APVC IN WSS-VARI TO FEC-AEC1.
           MOVE WSS-NUM-MPVC IN WSS-VARI TO FEC-MEC1.
           MOVE WSS-NUM-DPVC IN WSS-VARI TO FEC-DEC1.
      * fecha colocacion
           MOVE OPC-NUM-SCOL IN OPC TO FEC-SEC2.
           MOVE OPC-NUM-ACOL IN OPC TO FEC-AEC2.
           MOVE OPC-NUM-MCOL IN OPC TO FEC-MEC2.
           MOVE OPC-NUM-DCOL IN OPC TO FEC-DEC2.
           MOVE FEC-FORM-FEC TO FEC-CMND.
           MOVE FEC-DIF-DIA TO FEC-CMND.
      *    PERFORM PRO-FEC.
           PERFORM CAL-FEC.
           MOVE FEC-NDIA TO WSS-RES IN WSS-VARI.
       FIN-CHK-1ER-VCTO.
           EXIT.

       GET-CUR-CYA SECTION.
       INI-GET-CUR-CYA.
           MOVE 'CYA-KEY-ICYA' TO FIO-AKEY.
           MOVE OPC-CIC-IOPC IN OPC TO CYA-CIC-IOPC IN CYA.
           MOVE ZEROES              TO CYA-NUM-ICAN IN CYA.
           MOVE ZEROES              TO CYA-NUM-ICYA IN CYA.
           MOVE FIO-GET-NLS TO FIO-CMND.
           PERFORM COL-FIO-CYA.
           IF NOT (FIO-STAT-OKS AND
              OPC-CIC-IOPC = CYA-CIC-IOPC AND
              CYA-NUM-ICAN = ZEROES )
               MOVE '23' TO FIO-STAT.
       FIN-GET-CUR-CYA.
           EXIT.

       GET-NXT-CYA SECTION.
       INI-GET-NXT-CYA.
           MOVE SPACES TO MSG-COD-SIST.
           MOVE SPACES TO MSG-COD-MENS.
           MOVE 'CYA-KEY-ICYA' TO FIO-AKEY.
           MOVE FIO-GET-NXT TO FIO-CMND.
           PERFORM COL-FIO-CYA.
           IF FIO-STAT-OKS                              AND
              OPC-CIC-IOPC IN OPC = CYA-CIC-IOPC IN CYA AND
              CYA-NUM-ICAN IN CYA = ZEROES
               MOVE 'M' TO WSS-IND-MCYA
           ELSE
               MOVE SPACES TO WSS-IND-MCYA
               PERFORM GET-CUR-CYA.
       FIN-GET-NXT-CYA.
           EXIT.

       COPY GNSBGCVI.
      *SMC-INI 09.09.1993
       COPY GNSBGINT.
      *SMC-FIN 09.09.1993
       COPY GNSBPFEC.
       COPY COLBFEVC.
       COPY COLBFCYA.
       COPY TABBFCAM.
      * ICU]
      **************************************************************************

       COPY GNSBFMSC.
       COPY TABBFUSR.
       COPY TABBFOFI.
       COPY COLBFPOC.
       COPY COLBFITR.
       COPY COLBFCOM.
       COPY COLBFRDC.
       COPY SGCBFDBC.
       COPY GNSBBMSG.
       COPY GNSBBMSC.
       COPY GNSBBTAB.
       COPY TABBBUSR.
       COPY TABBBOFI.
       COPY GNSBVMSC.
       COPY GNSBVTAB.
       COPY TABBVUSR.
       COPY TABBVOFI.
       COPY GNSBGFEC.
       COPY GNSBGHOY.
       COPY GNSBGCPT.
       COPY SGCBGCLI.
      *>>>>
*% END
