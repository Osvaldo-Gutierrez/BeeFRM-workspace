*%! Codigo adicional para archivo
*% IF RW
      *<<<< RW
       01  WSS-D3A-RED     REDEFINES     WSS-D3A.
           03  WSS-FEC-FACR.
               05  WSS-NUM-DACR                   PIC X(02).
               05  WSS-NUM-MACR                   PIC X(02).
               05  WSS-NUM-SACR                   PIC X(02).
               05  WSS-NUM-AACR                   PIC X(02).
           03  WSS-D3A-RED-ELE  OCCURS 12.
               05  WSS-D3A-ELE.
                   07  WSS-MOPE                   PIC 9(08).
      *DAD
                   07  WSS-TMIN                   PIC 9(03)V9(02).
                   07  WSS-TMAX                   PIC 9(03)V9(02).
                   07  WSS-TPRM                   PIC 9(03)V9(02).
      *
       COPY COLRWD3B.
       01  WSS-D3B-RED     REDEFINES     WSS-D3B.
           03  WSS-D3B-RED-ELE  OCCURS 19.
               05  WSS-D3B-ELE.
                   07  WSS-MOPE                   PIC 9(08).
      *DAD
                   07  WSS-TMIN                   PIC 9(03)V9(02).
                   07  WSS-TMAX                   PIC 9(03)V9(02).
                   07  WSS-TPRM                   PIC 9(03)V9(02).
      *
       COPY COLRWD3C.
      *>>>>
*% END
*% IF WSS
      *<<<< WSS
       COPY GNSBRMSC.
       COPY COLBRDLC.
       COPY COLBRICG.
       COPY COLBRTOC.
       COPY COLBRDCC.
       COPY COLBRAUX.
       COPY TABBROFI.
       COPY TABBRCAM.
       COPY TABBRCOM.
       COPY GNSWGFEC.
       COPY GNSWGHOY.
      *DAD
      *SMC-INI 09.09.1993
       COPY COLWGINT.
      *SMC-FIN 09.09.1993
       COPY GNSWGCVI.
      *
       01  WSS-VARI.
           03  WSS-FEC-FINF.
               05  WSS-NUM-DINF               PIC X(02).
               05  WSS-NUM-MINF               PIC X(02).
               05  WSS-NUM-SINF               PIC X(02).
               05  WSS-NUM-AINF               PIC X(02).
           03  WSS-FEC-FIN1.
               05  WSS-NUM-SIN1               PIC X(02).
               05  WSS-NUM-AIN1               PIC X(02).
               05  WSS-NUM-MIN1               PIC X(02).
               05  WSS-NUM-DIN1               PIC X(02).
           03  WSS-COD-PESO                   PIC X(06).
           03  WSS-NUM-IOFI                   PIC 9(02).
           03  WSS-NUM-ITOC                   PIC 9(02).
           03  WSS-SWC-OFIC                   PIC X(03).
           03  WSS-OFIC                       PIC 9(04).
           03  WSS-TOCO                       PIC 9(04).
           03  WSS-OPEC                       PIC X(01).
           03  WSS-VAL-SPRD                   PIC 9(03)V9(04).
           03  WSS-VAL-TASA                   PIC 9(03)V9(04).
           03  WSS-VAL-PPON                   PIC 9(11)V9(04).
           03  WSS-IND     VALUE 0            PIC 9(03).
           03  WSS-SUB     VALUE 0            PIC 9(03).
      *DAD
           03  WSS-VAL-TEQV                   PIC 9(03)V9(02).
           03  WSS-COD-UEFE                   PIC X(06).
           03  WSS-NUM-OPCS  VALUE 0          PIC 9(07).
           03  WSS-NUM-DLCR  VALUE 0          PIC 9(07).
           03  WSS-NUM-DLCS  VALUE 0          PIC 9(07).
      *
       01  WSS-MAT.
           03  WSS-ELE OCCURS 31.
               05  WSS-MNTO                       PIC 9(08).
      *DAD
               05  WSS-TMIN                       PIC 9(03)V9(02).
               05  WSS-TMAX                       PIC 9(03)V9(02).
               05  WSS-TPRM                       PIC 9(03)V9(02).
      *
           03  WSS-ELE-CONT OCCURS 31.
               05  WSS-CONT                       PIC 9(03).
           03  WSS-ELD OCCURS 31.
               05  WSS-MTOD                       PIC 9(11)V9(04).
           03  WSS-ELE-PPON OCCURS 31.
               05  WSS-PPON                       PIC 9(11)V9(04).

       01  WSS-VEC.
           03  WSS-ELE-OFIC 
               OCCURS 99 INDEXED BY WSS-NUM-OFIC.
               05  WSS-COD-OFIC                   PIC X(03).
           03  WSS-ELE-TOCO
               OCCURS 99 INDEXED BY WSS-NUM-TOCO.
               05  WSS-COD-TOCR                   PIC X(03).
               05  WSS-MSC-OPEC                   PIC X(01). 
      *>>>>
*% END
*% IF WSS_DTC
      *<<<< WSS_DTC
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-MSC-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-DLC-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-ICG-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-TOC-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-DCC-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-OFI-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-CAM-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-COM-REQA==.
      *>>>>
*% END
*% IF RT
      *<<<< RT
       COPY COLRTD3B.
       COPY COLRTD3C.
      *>>>>
*% END
*% IF INI
      *<<<< INI
      *DAD
           DISPLAY 'INICIO CAPTURA DE PARAMETROS'.
      *
           DISPLAY 'INGRESE FECHA DEL INFORME'.
           ACCEPT WSS-FEC-FINF IN WSS-VARI.
           DISPLAY 'FECHA DEL INFORME : ' WSS-FEC-FINF IN WSS-VARI.
      *DAD
           DISPLAY 'FIN CAPTURA DE PARAMETROS'.
           DISPLAY 'INICIO VALIDACION DE PARAMETROS'.
      *        
      *VAL-FEC Valida Fecha de Informe
      *DAD
           DISPLAY WSS-FEC-FINF IN WSS-VARI.
      *
           MOVE WSS-FEC-FINF IN WSS-VARI TO FEC-FECH.
           MOVE FEC-FORM-FEC TO FEC-FORM.
           MOVE FEC-FBLK-N   TO FEC-FBLK.
           MOVE FEC-CHOY-LE  TO FEC-CHOY.
           MOVE FEC-VHBL-S   TO FEC-VHBL.
           MOVE FEC-VAL-FEC  TO FEC-CMND.
           PERFORM PRO-FEC.
           IF NOT FEC-STAT-OKS
               DISPLAY FEC-MENS
               PERFORM GNS-PRO-END.

           MOVE WSS-NUM-DINF IN WSS-VARI TO WSS-NUM-DACR IN WSS-D3A-RED.
           MOVE WSS-NUM-DINF IN WSS-VARI TO WSS-NUM-DIN1 IN WSS-VARI.
           MOVE WSS-NUM-MINF IN WSS-VARI TO WSS-NUM-MACR IN WSS-D3A-RED.
           MOVE WSS-NUM-MINF IN WSS-VARI TO WSS-NUM-MIN1 IN WSS-VARI.
           MOVE WSS-NUM-SINF IN WSS-VARI TO WSS-NUM-SACR IN WSS-D3A-RED.
           MOVE WSS-NUM-SINF IN WSS-VARI TO WSS-NUM-SIN1 IN WSS-VARI.
           MOVE WSS-NUM-AINF IN WSS-VARI TO WSS-NUM-AACR IN WSS-D3A-RED.
           MOVE WSS-NUM-AINF IN WSS-VARI TO WSS-NUM-AIN1 IN WSS-VARI.

           DISPLAY 'FIN VALIDACION DE PARAMETROS'.
      *>>>>
*% END
*% IF INI_INP
      *<<<< INI_INP
       INI-GET-OFI.
           MOVE ZEROES      TO WSS-OFIC.
           MOVE FIO-GET-FST TO FIO-CMND.
       LUP-OFI.
           PERFORM TAB-FIO-OFI.
           IF NOT FIO-STAT-OKS
               GO TO INI-GET-TOC.
           MOVE OFI-COD-COMU IN OFI TO COM-COD-COMU IN COM.
           MOVE FIO-GET-KEY  TO FIO-CMND.
           PERFORM TAB-FIO-COM.
           IF NOT FIO-STAT-OKS
               MOVE 'TAB'        TO MSG-COD-SIST
               MOVE 'CODCOMUNEX' TO MSG-COD-MENS
               PERFORM GET-MSG
               DISPLAY MSG-GLS-DESC
               GO TO NXT-GET-OFI.
           IF COM-COD-REGI IN COM = '13'
               ADD 1 TO WSS-OFIC
               MOVE OFI-COD-OFIC TO WSS-COD-OFIC(WSS-OFIC).
       NXT-GET-OFI.
           MOVE FIO-GET-NXT TO FIO-CMND.
           GO TO LUP-OFI.

       INI-GET-TOC.
           MOVE ZEROES      TO WSS-TOCO.
           MOVE FIO-GET-FST TO FIO-CMND.
       LUP-TOC.
           PERFORM COL-FIO-TOC.
           IF NOT FIO-STAT-OKS
               GO TO INI-GET-CIC.
           ADD 1 TO WSS-TOCO.
           MOVE TOC-COD-TOCR TO WSS-COD-TOCR(WSS-TOCO).
           MOVE TOC-MSC-OPEC TO WSS-MSC-OPEC(WSS-TOCO).
       NXT-GET-TOC.
           MOVE FIO-GET-NXT TO FIO-CMND.
           GO TO LUP-TOC.

       INI-GET-CIC.
           MOVE 'TAB'          TO FIO-SIST.
           MOVE 'VLR'          TO TAB-CIC-TTAB IN TAB.
           MOVE '0999  '       TO TAB-CIC-CTAB IN TAB.
           MOVE 'TAB-CIC-TABL' TO FIO-AKEY.
           MOVE FIO-GET-KEY    TO FIO-CMND.
           PERFORM GNS-FIO-TAB.
           IF NOT FIO-STAT-OKS
               MOVE 'TAB'          TO MSG-COD-SIST
               MOVE 'CIC0999  NEX' TO MSG-COD-MENS
               PERFORM GET-MSG
               DISPLAY MSG-GLS-DESC   TAB-CIC-CTAB
               PERFORM GNS-PRO-END.
           MOVE TAB-COD-CTAB IN TAB TO WSS-COD-PESO IN WSS-VARI.
      *DAD
           MOVE 'TAB'          TO FIO-SIST.
           MOVE 'VLR'          TO TAB-CIC-TTAB IN TAB.
           MOVE '0998  '       TO TAB-CIC-CTAB IN TAB.
           MOVE 'TAB-CIC-TABL' TO FIO-AKEY.
           MOVE FIO-GET-KEY    TO FIO-CMND.
           PERFORM GNS-FIO-TAB.
           IF NOT FIO-STAT-OKS
               MOVE 'TAB'          TO MSG-COD-SIST
               MOVE 'CIC0998  NEX' TO MSG-COD-MENS
               PERFORM GET-MSG
               DISPLAY MSG-GLS-DESC   TAB-CIC-CTAB
               PERFORM GNS-PRO-END.
           MOVE TAB-COD-CTAB IN TAB TO WSS-COD-UEFE IN WSS-VARI.
      *
           MOVE ZEROES TO WSS-MAT.
      *>>>>
*% END
*% IF INI_FST_INP
      *<<<< INI_FST_INP
      *DAD
           MOVE WSS-FEC-FIN1 IN WSS-VARI TO OPC-FEC-FING IN OPC.
           MOVE 'OPC-FEC-FING' TO FIO-AKEY.
           MOVE FIO-GET-KEY    TO FIO-CMND.
           PERFORM COL-FIO-OPC.
           IF NOT FIO-STAT-OKS
               DISPLAY 'NO HAY REGISTROS PARA FECHA DE INFORME : '
                       WSS-FEC-FINF IN WSS-VARI
               GO TO FIN-INP-SRT.
           GO TO INI-OUT-SRT.
      *
      *>>>>
*% END
*% IF LUP_INP
      *<<<< LUP_INP
           IF OPC-MSC-TVOC IN OPC NOT = '0' OR
      *DAD
              OPC-MSC-STAT IN OPC NOT = 'A'
      *
               GO TO NXT-INP-SRT.

           PERFORM CHQ-OFI.
           IF WSS-SWC-OFIC IN WSS-VARI = 'NEX'
               GO TO NXT-INP-SRT.
           MOVE OPC-CIC-IOPC IN OPC TO DLC-CIC-IOPC IN DLC.
           MOVE ZEROES              TO DLC-NUM-IDLC IN DLC.
           MOVE FIO-GET-NLS TO FIO-CMND.
      *DAD
           ADD  1  TO WSS-NUM-OPCS IN WSS-VARI.
      *
       LUP-DLC.
           PERFORM COL-FIO-DLC.
           IF NOT FIO-STAT-OKS OR
              DLC-CAI-IOPC IN DLC NOT = OPC-CAI-IOPC IN OPC OR
              DLC-IIC-IOPC IN DLC NOT = OPC-IIC-IOPC IN OPC OR
      *DAD
              DLC-IND-SCTB IN DLC NOT = SPACES OR
              DLC-IND-SCRT IN DLC NOT = SPACES OR
              DLC-IND-SCBZ IN DLC NOT = SPACES
      *
               GO TO NXT-INP-SRT.
      *DAD
           ADD  1  TO WSS-NUM-DLCR IN WSS-VARI.
           PERFORM BUS-DCC.
           IF DCC-GLS-DISP IN DCC = 'X'
               GO TO NXT-GET-DLC.
      *
           PERFORM BUS-TOC.

           IF WSS-OPEC NOT = 'D'
               PERFORM GET-ICG-OPC
           ELSE
               PERFORM GET-ICG-DLC               
               IF NOT FIO-STAT-OKS
                   PERFORM GET-ICG-OPC.
           IF FIO-STAT-OKS
      *DAD
               MOVE ICG-COD-TINT TO INT-TIPT
               MOVE ICG-SGV-SPRD TO WSS-VAL-SPRD
      *
               MOVE ICG-SGV-TINT TO WSS-VAL-TASA
           ELSE
      *DAD
               MOVE SPACES       TO INT-TIPT
               MOVE ZEROES       TO WSS-VAL-SPRD
      *
               MOVE ZEROES       TO WSS-VAL-TASA
               DISPLAY 'REGISTRO OPC NO TIENE INTERESES ' OPC-KEY-IOPC. 

           IF DLC-COD-PLZO = 'C1'
               IF WSS-OPEC = 'I'
                   IF OPC-COD-CVOC = '999'
      *                interbancaria no reaj.
                       MOVE  1 TO WSS-IND
                   ELSE
                       IF OPC-COD-CVOC = '998'
      *                interbancaria reaj. uf.
                           MOVE  5 TO WSS-IND
                       ELSE
                           NEXT SENTENCE
               ELSE
                   IF WSS-OPEC = 'K'
      *            broker
                       MOVE  3 TO WSS-IND
                   ELSE
                       IF OPC-COD-CVOC = '999'
      *            op. no reajustable
                           MOVE  2 TO WSS-IND
                       ELSE
                           NEXT SENTENCE
           ELSE
           IF DLC-COD-PLZO = 'C2'
               IF WSS-OPEC = 'I'
                   IF OPC-COD-CVOC = '999'
      *                interbancaria no reaj.
                       MOVE  6 TO WSS-IND
                   ELSE
                       IF OPC-COD-CVOC = '998'
      *                interbancaria reaj. uf.
                           MOVE 12 TO WSS-IND
                       ELSE
                           NEXT SENTENCE
               ELSE
                   IF WSS-OPEC = 'K'
      *            broker
                       MOVE 10 TO WSS-IND
                   ELSE
                       IF OPC-COD-CVOC = '999'
      *            op. no reajustable
                           MOVE  7 TO WSS-IND
                       ELSE
                           IF OPC-COD-CVOC = '998'
      *                op. reajustable uf.
                               MOVE 8  TO WSS-IND
                           ELSE
      *                op. reajustable tc.
                           MOVE  9 TO WSS-IND
           ELSE
           IF DLC-COD-PLZO = 'C3' OR
              DLC-COD-PLZO = 'C4' OR
              DLC-COD-PLZO = '-1'
               IF WSS-OPEC = 'K'
      *            broker
                   MOVE 16 TO WSS-IND
               ELSE
                   IF OPC-COD-CVOC = '999'
      *            op. no reajustable
                       MOVE 13 TO WSS-IND
                   ELSE
                       IF OPC-COD-CVOC = '998'
      *                op. reajustable uf.
                           MOVE 14 TO WSS-IND
                       ELSE
      *                op. reajustable tc.
                           MOVE 15 TO WSS-IND
           ELSE
           IF DLC-COD-PLZO = 'M1' OR
              DLC-COD-PLZO = 'M2' OR
              DLC-COD-PLZO = '+1'
               IF OPC-COD-CVOC = '999'
      *            op. no reajustable
                   MOVE 18 TO WSS-IND
               ELSE
                   IF OPC-COD-CVOC = '998'
      *                op. reajustable uf.
                       MOVE 19 TO WSS-IND
                   ELSE
      *                op. reajustable tc.
                       MOVE 20 TO WSS-IND
           ELSE
           IF DLC-COD-PLZO = 'L0' OR
              DLC-COD-PLZO = 'L3' OR
              DLC-COD-PLZO = 'L5'
               IF WSS-OPEC = 'V'
      *            l.c. vivienda
                   MOVE 29 TO WSS-IND
               ELSE
                   IF WSS-OPEC = 'H'
      *            l.c. fines generales
                       MOVE 30 TO WSS-IND
                   ELSE
                       IF OPC-COD-CVOC = '999'
      *            op. no reajustable
                           MOVE 24 TO WSS-IND
                       ELSE
                           IF OPC-COD-CVOC = '998'
      *            op. reajustable uf.
                               MOVE 25 TO WSS-IND
                           ELSE
      *            op. reajustable tc.
                               MOVE 26 TO WSS-IND
           ELSE
               DISPLAY 'REGISTRO DLC NO PROCESADO ' DLC-KEY-IDLC IN DLC
               GO TO NXT-GET-DLC.

           PERFORM CAL-TAS-EQV.
           IF INT-CMSG > SPACES
               DISPLAY 'DOCUMENTO : ' DLC-KEY-IDLC IN DLC
               IF INT-CMSG = 'CAM    NEX'
      *DAD
                   DISPLAY 'TASA INT./V. CAMBIO/FECHA : ' INT-TIPT '/'
                           INT-VCAM '/' INT-FINT 
      *
                   GO TO NXT-GET-DLC
               ELSE
                   GO TO NXT-GET-DLC.
      *DAD
           ADD  1  TO WSS-NUM-DLCS IN WSS-VARI.
      *
           IF OPC-COD-VCOC IN OPC NOT = '0999  '
               PERFORM CON-VAL-PESOS
               MULTIPLY DLC-VAL-SDLC IN DLC BY CAM-SGV-VCAM IN CAM
                   GIVING DLC-VAL-SDLC IN DLC.

           ADD DLC-VAL-SDLC TO WSS-MTOD IN WSS-ELD(WSS-IND).

           MULTIPLY WSS-VAL-TEQV BY DLC-VAL-SDLC IN DLC
               GIVING WSS-VAL-PPON IN WSS-VARI.

           ADD WSS-VAL-PPON TO WSS-PPON IN WSS-ELE-PPON(WSS-IND).
           ADD 1            TO WSS-CONT(WSS-IND).

      * CALCULO TASAS EXTREMAS
           IF WSS-CONT(WSS-IND) = 1 
               MOVE WSS-VAL-TEQV TO WSS-TMIN IN WSS-ELE(WSS-IND)
           ELSE
               IF WSS-VAL-TEQV < WSS-TMIN IN WSS-ELE(WSS-IND)
                   MOVE WSS-VAL-TEQV TO WSS-TMIN IN WSS-ELE(WSS-IND).

           IF WSS-VAL-TEQV > WSS-TMAX IN WSS-ELE(WSS-IND)
               MOVE WSS-VAL-TEQV TO WSS-TMAX IN WSS-ELE(WSS-IND).
       NXT-GET-DLC.
           MOVE FIO-GET-NXT TO FIO-CMND.
           GO TO LUP-DLC.
      *>>>>
*% END
*% IF INI_NXT_INP
      *<<<< INI_NXT_INP
      *DAD
           MOVE 'OPC-FEC-FING' TO FIO-AKEY.
      *
      *>>>>
*% END
*% IF FIN_NXT_INP
      *<<<< FIN_NXT_INP
      *DAD
           IF OPC-FEC-FING IN OPC NOT = WSS-FEC-FIN1 IN WSS-VARI
               GO TO FIN-INP-SRT.
      *
      *>>>>
*% END
*% IF FIN_INP
      *<<<< FIN_INP
      *DAD
           DISPLAY 'TOTAL OPC PROCESADOS : ' WSS-NUM-OPCS IN WSS-VARI.
           DISPLAY 'TOTAL DLC LEIDOS     : ' WSS-NUM-DLCR IN WSS-VARI.
           DISPLAY 'TOTAL DLC PROCESADOS : ' WSS-NUM-DLCS IN WSS-VARI.
           IF WSS-NUM-DLCS IN WSS-VARI NOT > ZEROES
               GO TO FIN-OUT-SRT.
      *
           PERFORM CAL-PROM.
           PERFORM CAR-MATR.
           GENERATE DL-D3A.
           GENERATE DL-D3B.
           GENERATE DL-D3C.
      *>>>>
*% END
*% IF EOF
      *<<<< EOF
      **************************************************************************
       CHQ-OFI SECTION.
       INI-CHQ-OFI.
           MOVE 'NEX' TO WSS-SWC-OFIC.
           MOVE  1    TO WSS-NUM-IOFI.
           SET WSS-NUM-OFIC TO 1.
           SEARCH WSS-ELE-OFIC VARYING WSS-NUM-IOFI
                  WHEN WSS-COD-OFIC(WSS-NUM-OFIC) = OPC-COD-OFOC
                         GO TO BUS-OKS.
           GO TO FIN-CHQ-OFI.
       BUS-OKS.
           MOVE SPACES TO WSS-SWC-OFIC.
       FIN-CHQ-OFI.
           EXIT.
      **************************************************************************
       BUS-TOC SECTION.
       INI-BUS-TOC.
           MOVE SPACES TO WSS-OPEC.
           MOVE  1     TO WSS-NUM-ITOC.
           SET WSS-NUM-TOCO TO 1.
           SEARCH WSS-ELE-TOCO VARYING WSS-NUM-TOCO
                  WHEN WSS-COD-TOCR(WSS-NUM-TOCO) = OPC-COD-TOOC
                         GO TO FND-OKS.
           GO TO FIN-BUS-TOC.
       FND-OKS.
           MOVE WSS-MSC-OPEC(WSS-NUM-TOCO) TO WSS-OPEC.
       FIN-BUS-TOC.
           EXIT.
      **************************************************************************
      *DAD
       BUS-DCC SECTION.
       INI-BUS-DCC.
      * Forma Llave COD-CCTB para Leer DCC
           MOVE 'CAP'               TO DCC-MSC-TCCT IN DCC.
           MOVE OPC-COD-VCOC IN OPC TO DCC-COD-VCAM IN DCC.
           MOVE OPC-COD-TOOC IN OPC TO DCC-COD-TOCR IN DCC.
      *ALDI/ Modifica PLAZO.
      *     IF DLC-COD-PLZO IN DLC = '-1' OR 
      *        DLC-COD-PLZO IN DLC = '+1'
      *         MOVE DLC-COD-PLZO IN DLC TO DCC-COD-PLZO IN DCC
      *     ELSE
      *         IF DLC-MSC-TPZO IN DLC = 'C'
      *             MOVE '-1' TO DCC-COD-PLZO IN DCC
      *         ELSE
      *             MOVE '+1' TO DCC-COD-PLZO IN DCC.
      *ALDF
           MOVE DLC-COD-PLZO IN DLC TO DCC-COD-PLZO IN DCC.

           MOVE SPACES  TO DCC-IND-SCRT IN DCC.
           MOVE SPACES  TO DCC-IND-SCTB IN DCC.
           MOVE SPACES  TO DCC-IND-SCBZ IN DCC.

      * Con BUS-TAB Busca Estado de IND-PCTB de Tabla AUX para Completar Llave
           MOVE 'COL'               TO TAB-COD-SIST.
           MOVE 'AUX'               TO TAB-COD-TTAB IN TAB.
           MOVE OPC-COD-COOC IN OPC TO TAB-COD-CTAB IN TAB.
           PERFORM BUS-TAB.
           IF MSG-COD-MENS > SPACES
               DISPLAY MSG-GLS-DESC ' : ' TAB-COD-TABL IN TAB
               MOVE 'X' TO DCC-GLS-DISP IN DCC
               GO TO FIN-BUS-DCC.
           MOVE TAB TO AUX.
           IF AUX-IND-PCTB NOT = 'N'
               MOVE OPC-COD-AOOC IN OPC TO DCC-COD-AOCR IN DCC
           ELSE
               MOVE SPACES TO DCC-COD-AOCR IN DCC.

      * Obtiene Ind. Exclucion Credito al Leer DCC por Llave COD-CCTB Formada
           MOVE FIO-GET-KEY  TO FIO-CMND.
           PERFORM COL-FIO-DCC.
           IF NOT FIO-STAT-OKS
               MOVE 'X'          TO DCC-GLS-DISP IN DCC
               MOVE 'GNS'        TO MSG-COD-SIST
               MOVE 'COD    NEX' TO MSG-COD-MENS IN MSG
               PERFORM GET-MSG
               DISPLAY MSG-GLS-DESC ' : ' DCC-COD-TABL IN DCC
               GO TO FIN-BUS-DCC.
       FIN-BUS-DCC.
           EXIT.
      *
      **************************************************************************
       GET-ICG-OPC SECTION.
       INI-GET-ICG-OPC.
           MOVE OPC-CAI-IOPC IN OPC TO ICG-CAI-IOPC IN ICG.
           MOVE OPC-IIC-IOPC IN OPC TO ICG-IIC-IOPC IN ICG.
           MOVE ZEROES              TO ICG-NUM-ICAN IN ICG.
           MOVE SPACES              TO ICG-CIC-IOPV IN ICG.
           MOVE ZEROES              TO ICG-NUM-IVCT IN ICG.
           MOVE 'INT'               TO ICG-IND-TTAS IN ICG.
           MOVE ZEROES              TO ICG-FEC-FINI IN ICG.
           MOVE FIO-GET-NLS TO FIO-CMND.
           PERFORM COL-FIO-ICG.
           IF NOT ( FIO-STAT-OKS AND
                    ICG-CAI-IOPC IN ICG = OPC-CAI-IOPC IN OPC AND
                    ICG-IIC-IOPC IN ICG = OPC-IIC-IOPC IN OPC AND
                    ICG-NUM-ICAN IN ICG = ZEROES              AND
                    ICG-CIC-IOPV IN ICG = SPACES              AND
                    ICG-NUM-IVCT IN ICG = ZEROES              AND
                    ICG-IND-TTAS IN ICG = 'INT' )
                     MOVE '23' TO FIO-STAT.
       FIN-GET-ICG-OPC.
           EXIT.
      **************************************************************************
       GET-ICG-DLC SECTION.
       INI-GET-ICG-DLC.
           MOVE DLC-CAI-IOPC IN DLC TO ICG-CAI-IOPC IN ICG.
           MOVE DLC-IIC-IOPC IN DLC TO ICG-IIC-IOPC IN ICG.
           MOVE DLC-NUM-IDLC IN DLC TO ICG-NUM-ICAN IN ICG.
           MOVE SPACES              TO ICG-CIC-IOPV IN ICG.
           MOVE ZEROES              TO ICG-NUM-IVCT IN ICG.
           MOVE 'INT'               TO ICG-IND-TTAS IN ICG.
           MOVE ZEROES              TO ICG-FEC-FINI IN ICG.
           MOVE FIO-GET-NLS TO FIO-CMND.
           PERFORM COL-FIO-ICG.
           IF NOT ( FIO-STAT-OKS AND
                    ICG-CAI-IOPC IN ICG = DLC-CAI-IOPC IN DLC AND
                    ICG-IIC-IOPC IN ICG = DLC-IIC-IOPC IN DLC AND
                    ICG-NUM-ICAN IN ICG = DLC-NUM-IDLC IN DLC AND
                    ICG-CIC-IOPV IN ICG = SPACES              AND
                    ICG-NUM-IVCT IN ICG = ZEROES              AND
                    ICG-IND-TTAS IN ICG = 'INT' )
                     PERFORM GET-ICG-OPC.
       FIN-GET-ICG-DLC.
           EXIT.
      **************************************************************************
       CAL-TAS-EQV SECTION.
       INI-CAL-TAS-EQV.
      *DAD
      * Calculo tasa de interes a partir de una tasa y periodo dado
      * Tasa Interes.                    * INT-TIPT.
      * Valor Tasa Informada.            * INT-TINT.
      * Fecha Inicial Periodo.           * INT-FINI.
      * Separacion entre Vencimientos.   * INT-SEPA.
      * Unidad de separacion.            * INT-IPER.
      * Analiza Feriado ?                * INT-AFER.
      * IF INT-CVTI > SPACES
      * Fecha Interes.                   * INT-FINT.
      * Moneda.                          * INT-VCAM.
      *ALDI/ 19-JUN-1989
           MOVE ZEROES TO WSS-VAL-TEQV IN WSS-VARI.
      *ALDF
      *    MOVE WSS-VAL-TASA TO WSS-VAL-TEQV.
      *5     MOVE WSS-FEC-FINF TO INT-FINI.
      *5     MOVE 1            TO INT-SEPA.
           IF OPC-COD-VCOC IN OPC = WSS-COD-UEFE IN WSS-VARI
               MOVE  360  TO INT-SEPA INT-SEPD
           ELSE
               MOVE  30   TO INT-SEPA INT-SEPD.
      *5     MOVE 'M'          TO INT-IPER.
      *5     MOVE 'N'          TO INT-AFER.
           MOVE WSS-VAL-TASA TO INT-TINT.
           IF INT-CVTI > SPACES
               MOVE INT-IBTV-UNA-VEZ    TO INT-IBTV
               MOVE ICG-FEC-FINI IN ICG TO INT-FINT
               MOVE OPC-COD-VCOC IN OPC TO INT-VCAM
               MOVE WSS-VAL-SPRD        TO INT-TINT
      *        En el Ingreso ICG-FEC-FINI = ZEROES
               IF INT-FINT NOT > ZEROES
                   MOVE OPC-FEC-FCOL IN OPC TO INT-FINT.
      *5     PERFORM PRO-IPER.
      *5     IF INT-CMSG > SPACES
      *5         GO TO MSG-MAIN.
      *5     MOVE INT-FINI TO FEC-FECH.
      *5     PERFORM PRO-AFER.
      *5     IF INT-CMSG > SPACES
      *5         GO TO MSG-MAIN.
           PERFORM OBT-VTIN.
           IF INT-CMSG > SPACES
               GO TO MSG-MAIN.
           MULTIPLY INT-TIPE BY 100 GIVING WSS-VAL-TEQV IN WSS-VARI
                                                           ROUNDED.
           GO TO FIN-CAL-TAS-EQV.
       MSG-MAIN.
           MOVE 'GNS'    TO MSG-COD-SIST.
           MOVE INT-CMSG TO MSG-COD-MENS.
           PERFORM GET-MSG.
           DISPLAY MSG-GLS-DESC.
      *
       FIN-CAL-TAS-EQV.
           EXIT.
      **************************************************************************
       CON-VAL-PESOS SECTION.
       INI-CON-VAL-PESOS.
           MOVE 'TAB'          TO FIO-SIST.
           MOVE 'VLR'          TO TAB-CIC-TTAB IN TAB.
           MOVE OPC-COD-VCOC   TO TAB-CIC-CTAB IN TAB.
           MOVE 'TAB-CIC-TABL' TO FIO-AKEY.
           MOVE FIO-GET-KEY    TO FIO-CMND.
           PERFORM GNS-FIO-TAB.
           IF NOT FIO-STAT-OKS
               MOVE 'TAB'         TO MSG-COD-SIST
               MOVE 'VCAM    NEX' TO MSG-COD-MENS
               PERFORM GET-MSG
               DISPLAY MSG-GLS-DESC   TAB-CIC-CTAB
               PERFORM GNS-PRO-END.

           MOVE WSS-FEC-FIN1 IN WSS-VARI TO CAM-FEC-FCAM IN CAM(1).
           MOVE WSS-FEC-FIN1 IN WSS-VARI TO CAM-FEC-FCAM IN CAM(2).
           MOVE TAB-COD-CTAB IN TAB      TO CAM-COD-VCAM IN CAM(1).
           MOVE WSS-COD-PESO IN WSS-VARI TO CAM-COD-VCAM IN CAM(2).
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM TAB-FIO-CAM.
           IF NOT FIO-STAT-OKS
      *DAD
               DISPLAY 'NO EXISTE VALOR DE CAMBIO A ESTA FECHA : '
                        WSS-FEC-FINF ' PARA : ' TAB-COD-CTAB IN TAB
      *
               PERFORM GNS-PRO-END.
           IF CAM-IND-VIGE NOT = 'S'
               DISPLAY 'INDICADOR DE VIGENCIA NO VALIDO A ESTA FECHA : '
                        WSS-FEC-FINF ' PARA : ' TAB-COD-CTAB IN TAB
               PERFORM GNS-PRO-END.
       FIN-CON-VAL-PESOS.
           EXIT.
      **************************************************************************
       CAL-PROM SECTION.
       INI-CAL-PROM.
           MOVE 1 TO WSS-IND.
       LUP-CAL.
           IF WSS-CONT(WSS-IND) = ZEROES
               MOVE ZEROES TO WSS-TPRM IN WSS-ELE(WSS-IND)
               GO TO NXT-LUP
           ELSE
               DIVIDE WSS-PPON IN WSS-ELE-PPON(WSS-IND)
                   BY WSS-MTOD IN WSS-ELD(WSS-IND)
                   GIVING WSS-TPRM IN WSS-ELE(WSS-IND)
               DIVIDE WSS-MTOD IN WSS-ELD(WSS-IND)
                   BY 1000
                   GIVING WSS-MNTO(WSS-IND) ROUNDED.
       NXT-LUP.
           ADD 1 TO WSS-IND.
           IF WSS-IND NOT > 31
               GO TO LUP-CAL.
       FIN-CAL-PROM.
           EXIT.
      **************************************************************************
       CAR-MATR SECTION.
       INI-CAR-MATR.
           MOVE 1 TO WSS-IND.
       LUP-CAR.
           ADD WSS-MNTO IN WSS-ELE(WSS-IND) TO WSS-VAL-TMTO IN WSS-D3C.
           ADD WSS-TMIN IN WSS-ELE(WSS-IND) TO WSS-VAL-TMIO IN WSS-D3C.
           ADD WSS-TMAX IN WSS-ELE(WSS-IND) TO WSS-VAL-TMAO IN WSS-D3C.
      *DAD
           ADD WSS-TPRM IN WSS-ELE(WSS-IND) TO WSS-VAL-TPRO IN WSS-D3C.
      *
           IF WSS-IND < 13
               MOVE WSS-ELE(WSS-IND) TO WSS-D3A-ELE(WSS-IND)
           ELSE
               COMPUTE WSS-SUB = WSS-IND - 12
               MOVE WSS-ELE(WSS-IND) TO WSS-D3B-ELE(WSS-SUB).

           ADD 1 TO WSS-IND.
           IF WSS-IND NOT > 31
               GO TO LUP-CAR.
       FIN-CAR-MATR.
           EXIT.
      **************************************************************************

       COPY COLBFDLC.
       COPY COLBFICG.
       COPY COLBFTOC.
       COPY COLBFDCC.
       COPY TABBFOFI.
       COPY TABBFCAM.
       COPY TABBFCOM.
       COPY GNSBFMSC.
       COPY GNSBBTAB.
       COPY GNSBBMSG.
       COPY GNSBGFEC.
       COPY GNSBPFEC.
       COPY GNSBGHOY.
      *DAD
      *SMC-INI 09.09.1993
       COPY COLBGINT.
      *SMC-FIN 09.09.1993
       COPY GNSBGCVI.
      *
      *>>>>
*% END
