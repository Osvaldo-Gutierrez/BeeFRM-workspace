*%! Codigo adicional para progarma
*% IF PGM_CHI AND PGM_BCI
*%     PGM_PTC = TRUE
*% END
*% IF FIN_SCR_VARI
      *<<<< FIN_SCR_VARI
      *ISP DEBE QUEDAR PRIMERO QUE LABEL FIN_SCR_VARI DE PROG ANTIGUO
       COPY COLWGENG.
      *>>>>
*% END
*% IF WSS
      *<<<< WSS
       01  WSS-VARI.
      *DAD ini 22-MAR-1991 
           03  WSS-VAL-PESO                            PIC 9(11).
      *DAD fin 22-MAR-1991 
      *ALD/19-JUL-1988
           03  WSS-MEN1.
               05  FILLER               VALUE SPACES PIC X(01).
               05  WSS-SGV-VAL1-EDT     PIC --------------,---.
               05  WSS-GLS-GUI1                      PIC X(01).
               05  WSS-SGV-VAL2-EDT     PIC --------------,---.
           03  WSS-MEN2.
               05  FILLER               VALUE SPACES PIC X(01).
               05  WSS-NUM-VAL1-EDT                   PIC ----.
               05  FILLER               VALUE SPACES PIC X(01).
               05  WSS-IND-DMA1                      PIC X(01).
               05  FILLER               VALUE SPACES PIC X(01).
               05  WSS-GLS-GUI2                      PIC X(01).
               05  FILLER               VALUE SPACES PIC X(01).
               05  WSS-NUM-VAL2-EDT                   PIC ----.
               05  FILLER               VALUE SPACES PIC X(01).
               05  WSS-IND-DMA2                      PIC X(01).
           03  WSS-NUM-NFEC             VALUE 0      PIC 9(03).
           03  WSS-FEC-NFE1.
               05  WSS-NUM-DFE1         VALUE 0      PIC 9(02).
               05  WSS-NUM-MFE1         VALUE 0      PIC 9(02).
               05  WSS-NUM-SFE1         VALUE 0      PIC 9(02).
               05  WSS-NUM-AFE1         VALUE 0      PIC 9(02).
           03  WSS-FEC-NFE2.
               05  WSS-NUM-DFE2         VALUE 0      PIC 9(02).
               05  WSS-NUM-MFE2         VALUE 0      PIC 9(02).
               05  WSS-NUM-SFE2         VALUE 0      PIC 9(02).
               05  WSS-NUM-AFE2         VALUE 0      PIC 9(02).
           03  WSS-FEC-NFE3.
               05  WSS-NUM-DFE3         VALUE 0      PIC 9(02).
               05  WSS-NUM-MFE3         VALUE 0      PIC 9(02).
               05  WSS-NUM-SFE3         VALUE 0      PIC 9(02).
               05  WSS-NUM-AFE3         VALUE 0      PIC 9(02).
      *

           03  WSS-ICOR                 VALUE 0      PIC 9(01).
               88 NO-ASIGNE-CORRELATIVO VALUE 0.
           03  WSS-NUM-JUL              VALUE 0      PIC 9(06).
           03  WSS-NUM-DVDO             VALUE 0      PIC 9(06).
           03  WSS-NUM-VIGU             VALUE 0      PIC 9(06).
           03  WSS-NUM-REMA             VALUE 0      PIC 9(06).
           03  WSS-FEC-FPVC.
               05  WSS-NUM-DPVC         VALUE 0      PIC 9(02).
               05  WSS-NUM-MPVC         VALUE 0      PIC 9(02).
               05  WSS-NUM-SPVC         VALUE 0      PIC 9(02).
               05  WSS-NUM-APVC         VALUE 0      PIC 9(02).
           03  WSS-FEC-FUVC.
               05  WSS-NUM-DUVC         VALUE 0      PIC 9(02).
               05  WSS-NUM-MUVC         VALUE 0      PIC 9(02).
               05  WSS-NUM-SUVC         VALUE 0      PIC 9(02).
               05  WSS-NUM-AUVC         VALUE 0      PIC 9(02).
           03  WSS-FEC-FCO1.
               05  WSS-NUM-SCO1         VALUE 0      PIC 9(02).
               05  WSS-NUM-ACO1         VALUE 0      PIC 9(02).
               05  WSS-NUM-MCO1         VALUE 0      PIC 9(02).
               05  WSS-NUM-DCO1         VALUE 0      PIC 9(02).
           03  WSS-FEC-FCO2.
               05  WSS-NUM-SCO2         VALUE 0      PIC 9(02).
               05  WSS-NUM-ACO2         VALUE 0      PIC 9(02).
               05  WSS-NUM-MCO2         VALUE 0      PIC 9(02).
               05  WSS-NUM-DCO2         VALUE 0      PIC 9(02).
           03  WSS-OPEC                 VALUE SPACES PIC X(08).
       COPY SGCBRDBC.
       COPY COLBROPC.
       COPY COLBRDLC.
       COPY COLBRTOC.
       COPY COLBRCYA.
      *ALD/18-JUL-1988 
       COPY COLBRPOC.
       COPY COLBRPVC.
       COPY TABBRCAM.

       COPY COLWGSTO.

      *
*% IF PGM_PTC
      *PTC ini
       COPY GNSWGQUE.
      *PTC fin
*% END
       COPY GNSWGCPT.
       COPY GNSWGPES.
      *>>>>
*% END
*% IF WSS_DTC
      *<<<< WSS_DTC
      *ALD/18-JUL-1988
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-POC-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-PVC-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-CAM-REQA==.
      *
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-OPC-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-DLC-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-CYA-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-DBC-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-TOC-REQA==.
      *>>>>
*% END
*% IF FIN_SCR_VARI
      *<<<< FIN_SCR_VARI
       COPY GNSWGRQA REPLACING ==01  ADR-REQA== BY ==02  SCR-RQA1==.
      *>>>>
*% END
*% IF PFS_GET_CON OR PFS_GET_ACC OR PFS_SCR_GKEY
      *<<<< PFS_GET_CON OR PFS_GET_ACC OR PFS_SCR_GKEY
           IF NOT ( FRM-FFLD = FRM-FFLD-PF8 OR FRM-FFLD = FRM-FFLD-PF7 )
      *>>>>
*% END
*% IF PFS_SCR_GFLD
      *<<<< PFS_SCR_GFLD
           IF NOT ( ( SCR-CCPP = 'MOD' OR  SCR-CCPP = 'ACC' OR
                      SCR-CCPP = 'ELI'                      OR
                    ( SCR-CCPP = 'ACT' AND SCR-ACTU = SCR-ACTU-MOD ) )
                      AND ( FRM-FFLD = FRM-FFLD-PF8 OR
                            FRM-FFLD = FRM-FFLD-PF7 ) )
      *>>>>
*% END
*% IF PFS_SCR_MOD
      *<<<< PFS_SCR_MOD
           IF FRM-FFLD = FRM-FFLD-PF8 OR FRM-FFLD-PF7
               PERFORM RST-STAT
               PERFORM FND-SCR-KEY THRU FIN-SCR-KEY
               IF SCR-STAT NOT = SCR-STAT-ABT
                   PERFORM SCR-TRL
               ELSE
                   MOVE SPACES TO SCR-RQA1
                   PERFORM DESSCRTRL
                   GO TO FIN-SCR-MOD.
           MOVE SPACES TO SCR-RQA1.
      *>>>>
*% END
*% IF PFS_SCR_ELI
      *<<<< PFS_SCR_ELI
           IF FRM-FFLD = FRM-FFLD-PF8 OR FRM-FFLD-PF7
               PERFORM VAL-NUM-KEY-EVC
               PERFORM RST-STAT
               PERFORM FND-SCR-KEY THRU FIN-SCR-KEY
               IF SCR-STAT NOT = SCR-STAT-ABT
                   PERFORM SCR-TRL
               ELSE
                   MOVE SPACES TO SCR-RQA1
                   PERFORM DESSCRTRL
                   GO TO FIN-SCR-ELI.
           MOVE SPACES TO SCR-RQA1.
      *>>>>
*% END
*% IF PFS_SCR_ACT
      *<<<< PFS_SCR_ACT
           IF FRM-FFLD = FRM-FFLD-PF8 OR FRM-FFLD-PF7
               PERFORM RST-STAT
               PERFORM FND-SCR-KEY THRU FIN-SCR-KEY
               IF SCR-STAT NOT = SCR-STAT-ABT
                   PERFORM SCR-TRL
               ELSE
                   MOVE SPACES TO SCR-RQA1
                   PERFORM DESSCRTRL
                   GO TO FIN-SCR-ACT.
           MOVE SPACES TO SCR-RQA1.
      *>>>>
*% END
*% IF PFS_SCR_ACC
      *<<<< PFS_SCR_ACC
           IF FRM-FFLD = FRM-FFLD-PF8 OR FRM-FFLD-PF7
               PERFORM VAL-NUM-KEY-EVC
               PERFORM RST-STAT
               PERFORM FND-SCR-KEY THRU FIN-SCR-KEY
               IF SCR-STAT NOT = SCR-STAT-ABT
                   PERFORM SCR-TRL
               ELSE
                   MOVE SPACES TO SCR-RQA1
                   PERFORM DESSCRTRL
                   GO TO FIN-SCR-ACC.
           MOVE SPACES TO SCR-RQA1.
      *>>>>
*% END
*% IF FND_KEY
      *<<<< FND_KEY
           IF SCR-CCPP = 'ING'
               PERFORM BUS-COR-EVC
               GO TO CON-FND-KEY.
           IF FRM-FFLD = FRM-FFLD-PF7 OR FRM-FFLD-PF8
               PERFORM LEE-NXT-PRV
               IF FIO-STAT-OKS
                   PERFORM SCR-CLRA-EVC
                   GO TO CON-FND-KEY
               ELSE
      *ALD/16-JUL-1988
                   PERFORM CLR-FLD-EVC
      *            MOVE SPACES TO PGM-STAT
      * 
                   IF FRM-FFLD = FRM-FFLD-PF7
                       MOVE 'COL' TO MSG-COD-SIST
                       MOVE 'EVC    NOPRV' TO MSG-COD-MENS
                       PERFORM GET-MSG
                       MOVE MSG-GLS-DESC TO FRM-MENS
                       MOVE '00' TO FIO-STAT
                       MOVE SCR-STAT-CON TO SCR-STAT
                       GO TO FIN-FND-KEY
                   ELSE
                       MOVE 'COL' TO MSG-COD-SIST
                       MOVE 'EVC    NONXT' TO MSG-COD-MENS
                       PERFORM GET-MSG
                       MOVE MSG-GLS-DESC TO FRM-MENS
                       MOVE '00' TO FIO-STAT
                       MOVE SCR-STAT-CON TO SCR-STAT
                       GO TO FIN-FND-KEY.
           IF EVC-NUM-IEVC IN EVC NOT > ZEROES
               PERFORM BUS-COR-EVC.
       CON-FND-KEY.
      *>>>>
*% END
*% IF FIN_FND_KEY
      *<<<< FIN_FND_KEY
           IF SCR-CCPP = 'ACT' AND NO-ASIGNE-CORRELATIVO AND
              NOT FIO-STAT-OKS
               MOVE FIO-STAT-NEX TO FIO-STAT
               GO TO FIN-FND-KEY.
           IF NOT FIO-STAT-OKS
               MOVE '23' TO PGM-STAT-EVC
           ELSE
               MOVE '00' TO PGM-STAT-EVC.
           MOVE EVC-CAI-IOPC IN EVC TO OPC-CAI-IOPC IN OPC.
           MOVE EVC-IIC-IOPC IN EVC TO OPC-IIC-IOPC IN OPC.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM COL-FIO-OPC.
           IF NOT FIO-STAT-OKS
               MOVE 'COL' TO MSG-COD-SIST
               MOVE 'EVC    NOOPC' TO MSG-COD-MENS
               PERFORM GET-MSG

               MOVE MSG-GLS-DESC TO CPT-STR1
               MOVE MSG-GLS-DATA TO CPT-STR2
               PERFORM CPT-BLKS
               MOVE CPT-STRN     TO FRM-MENS

               MOVE '00' TO FIO-STAT
               MOVE SCR-STAT-CON TO SCR-STAT
               GO TO FIN-FND-KEY.
           MOVE '00' TO PGM-STAT-OPC.
           PERFORM PUT-OPC-EVC.

      *ALD/16-JUL-1988
           PERFORM KEY-PVC-EVC.
           IF PVC-CIC-IPVC IN PVC NOT > SPACES
               MOVE OPC-COD-VCOC IN OPC TO POC-COD-VCOC IN POC
               MOVE OPC-COD-TOOC IN OPC TO POC-COD-TOOC IN POC
               MOVE OPC-COD-AOOC IN OPC TO POC-COD-AOOC IN POC
               MOVE ZEROES              TO POC-NUM-IPOC IN POC
               MOVE FIO-GET-KEY TO FIO-CMND
               PERFORM COL-FIO-POC
               IF NOT FIO-STAT-OKS
                   MOVE FIO-STAT TO PGM-STAT-PVC
               ELSE
                   MOVE POC-COD-IPVC IN POC TO PVC-CIC-IPVC IN PVC
                   MOVE FIO-GET-KEY TO FIO-CMND
                   PERFORM COL-FIO-PVC
                   MOVE FIO-STAT TO PGM-STAT-PVC
                   IF FIO-STAT-OKS
                       MOVE PVC-CIC-IPVC IN PVC TO PVC-CIC-IPVC 
                                                   IN EVC-FLD
                       IF PVC-MSC-STAT IN PVC = 'N'
                           MOVE 'COL' TO MSG-COD-SIST
                           MOVE 'PVC    NVG' TO MSG-COD-MENS
                           PERFORM GET-MSG
                           MOVE MSG-GLS-DESC TO FRM-MENS
                           MOVE '00' TO FIO-STAT
                           MOVE SCR-STAT-CON TO SCR-STAT
                           GO TO FIN-FND-KEY.
      *

           IF OPC-IND-VSTR IN OPC NOT = 'S'
               MOVE 'COL' TO MSG-COD-SIST
               MOVE 'EVC    NOVAL' TO MSG-COD-MENS
               PERFORM GET-MSG

               MOVE MSG-GLS-DESC TO CPT-STR1
               MOVE MSG-GLS-DATA TO CPT-STR2
               PERFORM CPT-BLKS
               MOVE CPT-STRN     TO FRM-MENS

               MOVE '00' TO FIO-STAT
               MOVE SCR-STAT-CON TO SCR-STAT
               GO TO FIN-FND-KEY.


           IF NOT PGM-STAT-EVC-OKS
               MOVE OPC-MSC-TVOC IN OPC TO OPC-MSC-TVOC IN EVC-FLD
               MOVE OPC-COD-TOOC IN OPC TO OPC-COD-TOOC IN EVC-FLD
               MOVE OPC-COD-OFOC IN OPC TO OPC-COD-OFOC IN EVC-FLD.
      *        MOVE '23' TO FIO-STAT
      *        GO TO FIN-FND-KEY.
           MOVE '00' TO PGM-STAT-OPC.
           MOVE PGM-STAT-EVC TO FIO-STAT.
      *ALD
      *    IF NOT ( OPC-MSC-STAT IN OPC = 'L' OR 'A' )

      *    IF  OPC-MSC-STAT IN OPC NOT = 'A' AND
      *        OPC-MSC-STAT IN OPC NOT = 'D'
           IF ( NOT OPC-ACTIVADA ) AND ( NOT OPC-DESACTIVADA )
                IF SCR-CMND = 'MCA'
                    MOVE 'OPC    ACANO' TO MSG-COD-MENS
                    GO TO SIG-FND-KEY
                ELSE                
                   GO TO FIN-FND-KEY.
      *     IF OPC-MSC-STAT IN OPC = 'L'
      *         MOVE 'OPC    LIQYA' TO MSG-COD-MENS.

      *    IF OPC-MSC-STAT IN OPC = 'A'
           IF OPC-ACTIVADA
               IF SCR-CMND = 'MCA'
                   MOVE '00' TO FIO-STAT
                   GO TO FIN-FND-KEY
               ELSE
                   MOVE 'OPC    ACAYA' TO MSG-COD-MENS.
      *    IF OPC-MSC-STAT IN OPC = 'D'
           IF OPC-DESACTIVADA
               MOVE 'OPC    DESYA' TO MSG-COD-MENS.
       SIG-FND-KEY.
           MOVE 'COL' TO MSG-COD-SIST.
           PERFORM GET-MSG.

           MOVE MSG-GLS-DESC TO CPT-STR1
           MOVE MSG-GLS-DATA TO CPT-STR2
           PERFORM CPT-BLKS
           MOVE CPT-STRN     TO FRM-MENS

           MOVE '00' TO FIO-STAT.
           MOVE SCR-STAT-CON TO SCR-STAT.
           GO TO FIN-FND-KEY.
      *>>>>
*% END
*% IF SCR_GFLD_VAL_FLD
      *<<<< SCR_GFLD_VAL_FLD
      *ISP ES NECESARIO TENER LOS DATOS DE LA OPERACION
      *    PARA LA VALIDACION DE CAMPOS
           MOVE EVC-CAI-IOPC IN EVC-FLD TO OPC-CAI-IOPC IN OPC.
           MOVE EVC-IIC-IOPC IN EVC-FLD TO OPC-IIC-IOPC IN OPC.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM COL-FIO-OPC.
           IF NOT FIO-STAT-OKS
               MOVE 'COL' TO MSG-COD-SIST
               MOVE 'OPC    NEX' TO MSG-COD-MENS
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS
               MOVE FRM-SUAR-MAL TO FRM-SUAR
               GO TO ERR-SCR-GFLD.
      *>>>>
*% END
*% IF CMN_ING
      *<<<< CMN_ING
           MOVE SPACES TO EVC-GLS-FLAG IN EVC.
      *     MOVE SPACES TO EVC-IND-AINV IN EVC.
      *     MOVE SPACES TO EVC-COD-OINV IN EVC.
           MOVE ZEROES TO EVC-NUM-DURV IN EVC.
           MOVE SPACES TO EVC-IND-UTDV IN EVC.
           MOVE ZEROES TO EVC-NUM-VCAN IN EVC.
      *     MOVE ZEROES TO EVC-NUM-IVCT IN EVC.
      *    MOVE EVC-NUM-DPVC IN EVC TO EVC-NUM-DPVE.
      *    MOVE SPACES TO EVC-GLS-DISP IN EVC.
      *>>>>
*% END
*% IF FIN_HBL_FLD
      *<<<< FIN_HBL_FLD
           IF SCR-CMND = 'MCA'
               PERFORM PRO-FLD-EVC
               MOVE FRM-CPIM-UBY TO EVC-IND-CAUT-ATR IN EVC-FLD
               MOVE  0           TO FRM-NUM-DURV-LEN IN EVC-FLD
               MOVE -1 TO EVC-IND-CAUT-LEN IN EVC-FLD.
      *>>>>
*% END
*% IF CMN_ING OR CMN_MOD
      *<<<< CMN_ING OR CMN_MOD
           PERFORM GET-FHOY.
      *     MOVE HOY-STP-ITRN IN HOY-VARI TO EVC-STP-IINV IN EVC.
      *>>>>
*% END
*% IF WSS
      *<<<< WSS
       COPY COLWGPMP.
      *>>>>
*% END
*% CMA_USR = TRUE
*% IF CMA
      *<<<< CMA
           02 FILLER                      PIC X(3000).
      *>>>>
*% END
*% IF FIN_SCR_GIKY OR FIN_SCR_GCNF OR FIN_SCR_GFLD
      *<<<< FIN_SCR_GIKY OR FIN_SCR_GCNF OR FIN_SCR_GFLD
           IF FRM-FFLD = FRM-FFLD-PF3 AND
              SCR-IND-ENG IN SCR-VEC-ENG(SCR-IPRO) = 'S'
               PERFORM EGR-EOV.
      *>>>>
*% END
*% IF FIN_CMN_ING OR SCR_GFLD_VAL_MKY
      *<<<< FIN_CMN_ING OR SCR_GFLD_VAL_MKY
           IF FRM-FFLD = FRM-FFLD-PF10 AND
              SCR-IND-ENG IN SCR-VEC-ENG(SCR-IPRO) = 'S'
               PERFORM EGR-EOV.
      *>>>>
*% END
*% IF FIN_CMN_MOD
      *<<<< FIN_CMN_MOD
           IF SCR-CMND = 'MCA'
               GO TO FIN-CMN-MOD.
           MOVE EVC-CAI-IOPC IN EVC TO OPC-CAI-IOPC IN OPC.
           MOVE EVC-IIC-IOPC IN EVC TO OPC-IIC-IOPC IN OPC.
           MOVE FIO-GET-KEY-UPD TO FIO-CMND.
           PERFORM COL-FIO-OPC.
           IF FIO-STAT-OKS
*% IF PGM_PER
      *        IF OPC-MSC-STAT IN OPC NOT = 'F'
               IF NOT OPC-APROBADA-CTC
*% END
      *            MOVE 'M' TO OPC-MSC-STAT IN OPC
                   MOVE STO-MODIFICADA IN STO-VARI
                                       TO OPC-MSC-STAT IN OPC
                   MOVE FIO-MOD TO FIO-CMND
                   PERFORM COL-FIO-OPC.
      *>>>>
*% END
*% IF FIN_CMN_ING
      *<<<< FIN_CMN_ING
           IF SCR-IND-ENG IN SCR-VEC-ENG(SCR-IPRO) NOT = 'S'
               MOVE EVC-CAI-IOPC IN EVC TO OPC-CAI-IOPC IN OPC
               MOVE EVC-IIC-IOPC IN EVC TO OPC-IIC-IOPC IN OPC
               MOVE FIO-GET-KEY-UPD TO FIO-CMND
               PERFORM COL-FIO-OPC
               IF FIO-STAT-OKS
*% IF PGM_PER
      *            IF OPC-MSC-STAT IN OPC NOT = 'F'
                   IF NOT OPC-APROBADA-CTC
*% END
      *                MOVE 'M' TO OPC-MSC-STAT IN OPC
                       MOVE STO-MODIFICADA IN STO-VARI
                                           TO OPC-MSC-STAT IN OPC
                       MOVE FIO-MOD TO FIO-CMND
                       PERFORM COL-FIO-OPC.
      *>>>>
*% END
*% IF FIN_CMN_ELI
      *<<<< FIN_CMN_ELI
      *DAD ini  08-JAN-1993   (Memo.06-01-93)
           MOVE EVC-CAI-IOPC IN EVC TO OPC-CAI-IOPC IN OPC.
           MOVE EVC-IIC-IOPC IN EVC TO OPC-IIC-IOPC IN OPC.
           MOVE FIO-GET-KEY-UPD TO FIO-CMND.
           PERFORM COL-FIO-OPC.
           IF FIO-STAT-OKS
*% IF PGM_PER
      *        IF OPC-MSC-STAT IN OPC NOT = 'F'
               IF NOT OPC-APROBADA-CTC
*% END
      *            MOVE 'M' TO OPC-MSC-STAT IN OPC
                   MOVE STO-MODIFICADA IN STO-VARI
                                       TO OPC-MSC-STAT IN OPC
                   MOVE FIO-MOD TO FIO-CMND
                   PERFORM COL-FIO-OPC.
      *DAD fin  08-JAN-1993
      *>>>>
*% END
*% IF INI_FIO
      *<<<< INI_FIO
*% IF PGM_PTC
      *PTC ini
           PERFORM GNS-ERR-QUE.
      *PTC fin
*% END
           MOVE +3000 TO SCR-TCMA.
           IF SCR-DESDE-CMN
               MOVE SPACES TO SCR-RQA1
               MOVE SPACES TO SCR-VEC-ENG
               MOVE 1 TO SCR-IPRO
               GO TO FIN-INI-FIO.
           IF SCR-INST-EXT = WSS-INST-FPEN-CIC
               MOVE WSS-INST-NULL TO SCR-INST-EXT
               MOVE 'GNS' TO MSG-COD-SIST
               MOVE 'MSGKEY' TO MSG-COD-MENS
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO SCR-MENS-EXT
      *         MOVE 'KO13COLPAEVCCOLFEVCCOLAEVC' TO
      *                  WSS-VEC-PPRO IN WSS-PPRO(WSS-IDX-IEOV)
               MOVE 'KQ13COLPQEVCCOLFEVCCOLAEVC' TO
                        WSS-VEC-PPRO IN WSS-PPRO(WSS-IDX-IEOV)
               MOVE 'KU13COLPUEVC'               TO
                       WSS-VEC-PPRV IN WSS-PPRO(WSS-IDX-IEOV)
               PERFORM ING-FPEN-CIC.
       FIN-INI-FIO.
      *>>>>
*% END
*% IF FIN_HBL_FLD
      *<<<< FIN_HBL_FLD
      *ALD/ELIMINAR
           MOVE FRM-CPIM-AEY TO EVC-NUM-DESD-ATR IN EVC-FLD.
           MOVE FRM-CPIM-AEY TO EVC-SGV-FVAR-ATR IN EVC-FLD.
           MOVE FRM-CPIM-AEY TO EVC-IND-FVAR-ATR IN EVC-FLD.
      *    MOVE FRM-CPIM-AEY TO EVC-IND-CAUT-ATR IN EVC-FLD.
      *
      *HPM ini
           MOVE EVC-CAI-IOPC IN EVC-FLD TO OPC-CAI-IOPC IN OPC.
           MOVE EVC-IIC-IOPC IN EVC-FLD TO OPC-IIC-IOPC IN OPC.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM COL-FIO-OPC.
           IF NOT FIO-STAT-OKS
               MOVE 'COL'          TO MSG-COD-SIST
               MOVE 'EVC    NOOPC' TO MSG-COD-MENS
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO CPT-STR1
               MOVE MSG-GLS-DATA TO CPT-STR2
               PERFORM CPT-BLKS
               MOVE CPT-STRN     TO FRM-MENS
               MOVE '00' TO FIO-STAT
               MOVE SCR-STAT-CON TO SCR-STAT
               GO TO FIN-HBL-FLD.
           IF OPC-PENDIENTE-CTC
               IF ( SCR-CCPP = 'MOD' ) OR
                  ( SCR-CCPP = 'ACT' AND SCR-ACTU = SCR-ACTU-MOD )
                   MOVE FRM-CPIM-AEY TO EVC-NUM-VIGU-ATR IN EVC-FLD.
      *HPM fin
      *ALD/16-JUL-1988
           IF SCR-CCPP NOT = 'ING'
               GO TO FIN-HBL-FLD.

           IF PVC-CIC-IPVC IN EVC-FLD NOT > SPACES
               GO TO FIN-HBL-FLD.

           IF NOT PGM-STAT-PVC-OKS
               MOVE PVC-CIC-IPVC IN EVC-FLD TO PVC-CIC-IPVC IN PVC
               MOVE FIO-GET-KEY TO FIO-CMND
               PERFORM COL-FIO-PVC
               IF NOT FIO-STAT-OKS
                   GO TO FIN-HBL-FLD
               ELSE
                   MOVE EVC-CAI-IOPC IN EVC-FLD TO OPC-CAI-IOPC IN OPC
                   MOVE EVC-IIC-IOPC IN EVC-FLD TO OPC-IIC-IOPC IN OPC
                   MOVE FIO-GET-KEY TO FIO-CMND
                   PERFORM COL-FIO-OPC
                   IF NOT FIO-STAT-OKS
                       GO TO FIN-HBL-FLD.

           IF PVC-NUM-DVMI IN PVC = PVC-NUM-DVMA IN PVC AND
              PVC-IND-DVMI IN PVC = PVC-IND-DVMA IN PVC AND
              PVC-NUM-DVMI IN PVC > ZEROES
               MOVE PVC-NUM-DVMI IN PVC TO FRM-NUM-DURV IN EVC-FLD
               MOVE PVC-IND-DVMI IN PVC TO FRM-IND-UTDV IN EVC-FLD
               MOVE FRM-CPIM-AEY TO FRM-NUM-DURV-ATR IN EVC-FLD
               MOVE FRM-CPIM-AEY TO FRM-IND-UTDV-ATR IN EVC-FLD
               MOVE 0            TO EVC-NUM-VIGU-LEN IN EVC-FLD
               MOVE -1           TO EVC-NUM-IDLC-LEN IN EVC-FLD.

           IF PVC-NUM-VIMI IN PVC = PVC-NUM-VIMA IN PVC AND
              PVC-NUM-VIMI IN PVC > ZEROES
               MOVE PVC-NUM-VIMI IN PVC TO EVC-NUM-VIGU IN EVC-FLD
               MOVE FRM-CPIM-AEY TO EVC-NUM-VIGU-ATR IN EVC-FLD.

           IF PVC-NUM-SPMI IN PVC = PVC-NUM-SPMA IN PVC AND
              PVC-IND-SPMI IN PVC = PVC-IND-SPMA IN PVC AND
              PVC-NUM-SPMI IN PVC > ZEROES
               MOVE PVC-NUM-SPMI IN PVC TO FRM-NUM-SPVE IN EVC-FLD
               MOVE PVC-IND-SPMI IN PVC TO FRM-IND-UTPV IN EVC-FLD
               MOVE FRM-CPIM-AEY TO FRM-NUM-SPVE-ATR IN EVC-FLD
               MOVE FRM-CPIM-AEY TO FRM-IND-UTPV-ATR IN EVC-FLD.

           IF PVC-NUM-DESD IN PVC > ZEROES
               MOVE PVC-NUM-DESD IN PVC TO EVC-NUM-DESD IN EVC-FLD
               MOVE FRM-CPIM-AEY TO EVC-NUM-DESD-ATR IN EVC-FLD.

           IF PVC-NUM-SVMI IN PVC = PVC-NUM-SVMA IN PVC AND
              PVC-IND-SVMI IN PVC = PVC-IND-SVMA IN PVC AND
              PVC-NUM-SVMI IN PVC > ZEROES
               MOVE PVC-NUM-SVMI IN PVC TO EVC-NUM-SEVE IN EVC-FLD
               MOVE PVC-IND-SVMI IN PVC TO EVC-IND-UTSV IN EVC-FLD
               MOVE FRM-CPIM-AEY TO EVC-NUM-SEVE-ATR IN EVC-FLD
               MOVE FRM-CPIM-AEY TO EVC-IND-UTSV-ATR IN EVC-FLD.

           IF PVC-MSC-TCVE IN PVC > SPACES
               MOVE PVC-MSC-TCVE IN PVC TO EVC-MSC-TCVE IN EVC-FLD
               MOVE 'COL' TO TAB-COD-SIST
               MOVE 'CVC' TO TAB-COD-TTAB IN TAB
               MOVE EVC-MSC-TCVE IN EVC-FLD TO TAB-COD-CTAB IN TAB
               PERFORM BUS-TAB
               MOVE TAB-GLS-DESC IN TAB TO FRM-GLS-TCVE IN EVC-FLD
               MOVE FRM-CPIM-AEY TO EVC-MSC-TCVE-ATR IN EVC-FLD.

           IF PVC-VAL-VVMI IN PVC = PVC-VAL-VVMA IN PVC AND
              PVC-VAL-VVMI IN PVC > ZEROES AND
              PVC-COD-VCOC IN PVC = OPC-COD-VCOC IN OPC
               MOVE PVC-VAL-VVMI IN PVC TO EVC-VAL-VENC IN EVC-FLD
               MOVE FRM-CPIM-AEY TO EVC-VAL-VENC-ATR IN EVC-FLD.

           IF PVC-SGV-FMMI IN PVC     = PVC-SGV-FMMA IN PVC AND
              PVC-SGV-FMMI IN PVC NOT = ZEROES AND
              PVC-COD-VCOC IN PVC     = OPC-COD-VCOC IN OPC
               MOVE 'M' TO EVC-IND-FVAR IN EVC-FLD.

           IF PVC-SGV-FPMI IN PVC     = PVC-SGV-FPMA IN PVC AND
              PVC-SGV-FPMI IN PVC NOT = ZEROES AND
              PVC-SGV-FMMI IN PVC     = ZEROES AND
              PVC-SGV-FMMA IN PVC     = ZEROES
               MOVE 'P' TO EVC-IND-FVAR IN EVC-FLD.

           MOVE 'COL' TO MSC-COD-SIST.
           MOVE 'FVAR' TO MSC-COD-TMSC IN MSC.
           MOVE EVC-IND-FVAR IN EVC-FLD TO MSC-COD-CMSC IN MSC.
           PERFORM BUS-MSC.

           IF MSC-CIC-CMSC IN MSC = 'M' AND
              PVC-SGV-FMMI IN PVC = PVC-SGV-FMMA IN PVC AND
              PVC-SGV-FMMI IN PVC NOT = ZEROES AND
              PVC-COD-VCOC IN PVC = OPC-COD-VCOC IN OPC
               MOVE PVC-SGV-FMMI IN PVC TO EVC-SGV-FVAR IN EVC-FLD
               MOVE FRM-CPIM-AEY TO EVC-IND-FVAR-ATR IN EVC-FLD
               MOVE FRM-CPIM-AEY TO EVC-SGV-FVAR-ATR IN EVC-FLD.

           IF MSC-CIC-CMSC IN MSC = 'P' AND
              PVC-SGV-FPMI IN PVC = PVC-SGV-FPMA IN PVC AND
              PVC-SGV-FPMI IN PVC NOT = ZEROES
               MOVE PVC-SGV-FPMI IN PVC TO EVC-SGV-FVAR IN EVC-FLD
               MOVE FRM-CPIM-AEY TO EVC-IND-FVAR-ATR IN EVC-FLD
               MOVE FRM-CPIM-AEY TO EVC-SGV-FVAR-ATR IN EVC-FLD.
      *
      *>>>>
*% END
*% IF FIN_HBL_IKY
      *<<<< FIN_HBL_IKY
           IF SCR-IND-ENG IN SCR-VEC-ENG(SCR-IPRO) = 'S'
               PERFORM HBL-KEY-EVC.
      *>>>>
*% END
*% IF EOF
      *<<<< EOF

       HBL-KEY-EVC SECTION.
       INI-HBL-KEY-EVC.
           MOVE SCR-INST-GKY TO SCR-INST.
      *ISP   25-JUL-1990 DEBE SER REEMPLAZADO POR VARIABLE
      *     INHIBE MOVE FRM-CPSF TO FRM-CPIM-AEY
           MOVE '1' TO FRM-CPIM-AEY.
           MOVE FRM-CPIM-AEY TO EVC-CAI-IOPC-ATR IN EVC-FLD.
           MOVE FRM-CPIM-AEY TO EVC-IIC-IOPC-ATR IN EVC-FLD.
           MOVE FRM-CPIM-AEY TO EVC-NUM-IEVC-ATR IN EVC-FLD.
           MOVE +4 TO EVC-CAI-IOPC-LEN IN EVC-FLD.
           MOVE -1 TO PVC-CIC-IPVC-LEN IN EVC-FLD.
           PERFORM SCR-CLRA-EVC.
           MOVE SCR-CAI-IOPC IN SCR-VARI TO EVC-CAI-IOPC IN EVC-FLD.
           MOVE SCR-IIC-IOPC IN SCR-VARI TO EVC-IIC-IOPC IN EVC-FLD.

      * ISP SCR-DMSG LIMPIA TODO Y HACE STP-EXIT
           MOVE PGM-LIMPIAR-CAMPOS TO PGM-ICLR.

      *ISP SE REQUIEREN PARA BUS-COR-EVC
           MOVE SCR-CAI-IOPC IN SCR-VARI TO EVC-CAI-IOPC IN EVC.
           MOVE SCR-IIC-IOPC IN SCR-VARI TO EVC-IIC-IOPC IN EVC.
           PERFORM BUS-COR-EVC.

           MOVE SCR-CAI-IOPC IN SCR-VARI TO OPC-CAI-IOPC IN OPC.
           MOVE SCR-IIC-IOPC IN SCR-VARI TO OPC-IIC-IOPC IN OPC.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM COL-FIO-OPC.
           MOVE FIO-STAT TO PGM-STAT-OPC.
           IF NOT FIO-STAT-OKS
               MOVE 'COL' TO MSG-COD-SIST
               MOVE 'OPC    NEX' TO MSG-COD-MENS
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS
               MOVE SCR-STAT-CON TO SCR-STAT
               PERFORM CLR-OPC-EVC
           ELSE
               PERFORM PUT-OPC-EVC.

           PERFORM EDT-KEY-EVC.
           PERFORM EDT-FLD-EVC.

           IF SCR-IND-FST IN SCR-VEC-FST(SCR-IPRO) = 'S'
               MOVE SPACES TO SCR-IND-FST IN SCR-VEC-FST(SCR-IPRO)
               PERFORM SCR-INIT
               PERFORM SCR-EXIT
           ELSE
               PERFORM SCR-PUTA.

      *     IF SCR-IND-FST IN SCR-VEC-FST(SCR-IPRO) = 'S'
      *         MOVE SPACES TO SCR-IND-FST IN SCR-VEC-FST(SCR-IPRO)
      *         PERFORM SCR-INIT
      *     ELSE
      *         PERFORM SCR-PUTA.
      *     PERFORM SCR-EXIT.
       FIN-HBL-KEY-EVC.
           EXIT.
      *>>>>
*% END
*% IF EOF
      *<<<< EOF
       BCK-OUT SECTION.
       INI-BCK-OUT.
           MOVE FIO-BCK-OUT TO FIO-CMND.
           PERFORM COL-FIO-EVC.
           IF FIO-STAT-OKS
      *        Para informar que el backout se realizo con exito
               MOVE '49' TO FIO-STAT.
       FIN-BCK-OUT.
           EXIT.

       BUS-COR-EVC SECTION.
       INI-BUS-COR-EVC.
           MOVE 99 TO EVC-NUM-IEVC IN EVC.
           MOVE FIO-GET-LEQ TO FIO-CMND.
           PERFORM COL-FIO-EVC.
           IF NOT ( FIO-STAT-OKS AND
                    EVC-CAI-IOPC IN EVC-FLD = EVC-CAI-IOPC IN EVC AND
                    EVC-IIC-IOPC IN EVC-FLD = EVC-IIC-IOPC IN EVC )
               PERFORM KEY-ALL-EVC
               MOVE ZEROES TO EVC-NUM-IEVC IN EVC.
           IF SCR-CCPP = 'ING' OR 'ACT'
               ADD 1 TO EVC-NUM-IEVC IN EVC
               MOVE EVC-NUM-IEVC IN EVC TO EVC-NUM-IEVC IN EVC-FLD.
           MOVE 1 TO WSS-ICOR.
       FIN-BUS-COR-EVC.
           EXIT.

       RST-STAT SECTION.
       INI-RST-STAT.
           MOVE SCR-STPP     TO SCR-STAT.
           MOVE SCR-MFLD-NOT TO SCR-MFLD.
       FIN-RST-STAT.
           EXIT.

       GET-TSTP SECTION.
       INI-GET-TSTP.
           MOVE SYS-GET-DATE TO SYS-CMND.
           PERFORM GNS-PRO-SYS.
      *    MOVE SYS-TSTP TO EVC-STP-IINV IN EVC.
       FIN-GET-TSTP.
           EXIT.

       LEE-NXT-PRV SECTION.
       INI-LEE-NXT-PRV.
           IF SCR-RQA1 > SPACES
               PERFORM LEE-NXT-PRV-EVC
           ELSE
               PERFORM LEE-NXT-PRV-CIC.
       FIN-LEE-NXT-PRV.
           EXIT.

       LEE-NXT-PRV-EVC SECTION.
       INI-LEE-NXT-PRV-EVC.
           MOVE SCR-RQA1 TO ADR-EVC-REQA.
           MOVE FIO-KDEF-S TO FIO-KDEF.
           IF FRM-FFLD = FRM-FFLD-PF7
               MOVE FIO-GET-PRV TO FIO-CMND
           ELSE
               MOVE FIO-GET-NXT TO FIO-CMND.
           PERFORM COL-FIO-EVC.
           IF FIO-STAT-OKS
               MOVE '00' TO PGM-STAT-EVC
               MOVE ADR-EVC-REQA TO SCR-RQA1.
       FIN-LEE-NXT-PRV-EVC.
           EXIT.

       LEE-NXT-PRV-CIC SECTION.
       INI-LEE-NXT-PRV-CIC.
           IF EVC-CIC-IOPC IN EVC > SPACES AND
              EVC-NUM-IEVC IN EVC > ZEROES
               MOVE FIO-GET-KEY    TO FIO-CMND
               PERFORM COL-FIO-EVC
               IF FIO-STAT-OKS
                   IF FRM-FFLD = FRM-FFLD-PF7
                       MOVE FIO-GET-PRV TO FIO-CMND
                   ELSE
                       MOVE FIO-GET-NXT TO FIO-CMND
               ELSE
                   IF FRM-FFLD = FRM-FFLD-PF7
                       MOVE FIO-GET-LEQ TO FIO-CMND
                   ELSE
                       MOVE FIO-GET-NLS TO FIO-CMND
           ELSE
               IF FRM-FFLD = FRM-FFLD-PF7
                   MOVE FIO-GET-LEQ TO FIO-CMND
               ELSE
                   MOVE FIO-GET-NLS TO FIO-CMND.
           PERFORM COL-FIO-EVC.
           IF FIO-STAT-OKS
               MOVE '00' TO PGM-STAT-EVC
               MOVE ADR-EVC-REQA TO SCR-RQA1.
       FIN-LEE-NXT-PRV-CIC.
           EXIT.

       COPY COLBFOPC.
       COPY COLBFDLC.
       COPY COLBFCYA.
       COPY COLBGEOV.
       COPY TABBVOFI.
       COPY GNSBPFEC.
*% IF PGM_PTC
      *PTC ini
       COPY GNSBGQUE.
      *PTC fin
*% END
       COPY GNSBGCPT.
       COPY GNSBGPES.
       COPY SGCBFDBC.
       COPY COLBFTOC.
      *ALD/18-JUL-1988 
       COPY COLBFPOC.
       COPY COLBFPVC.
       COPY TABBFCAM.
      *
      *>>>>
      *  CODIGO ADICIONAL PARA ENGANCHE PROGRAMAS
       ING-FPEN-CIC SECTION.
       INI-ING-FPEN-CIC.
           PERFORM ING-SETE.
           MOVE SCR-MENS-EXT TO EVC-GLS-MENS.
           PERFORM HBL-IKY.
       FIN-ING-FPEN-CIC.
           EXIT.

       ING-FTER-CIC SECTION.
       INI-ING-FTER-CIC.
           PERFORM ING-SETE.
           MOVE SCR-MENS-EXT TO EVC-GLS-MENS.
           PERFORM HBL-IKY.
       FIN-ING-FTER-CIC.
           EXIT.

       ING-FTER-CMN SECTION.
       INI-ING-FTER-CMN.
           PERFORM ING-SETE.
           PERFORM PRO-ALL.
           PERFORM SCR-CLRA-EVC.
           MOVE SCR-MENS-EXT TO EVC-GLS-MENS.
           PERFORM SCR-INIT.
       FIN-ING-FTER-CMN.
           EXIT.

       ING-SETE SECTION.
       INI-ING-SETE.
           PERFORM CRG-TBL-ENG.
           MOVE WSS-NTRN(SCR-IPRO) TO SCR-NTRN.
           MOVE WSS-PROG(SCR-IPRO) TO SCR-PROG.
           MOVE WSS-NMAP(SCR-IPRO) TO SCR-NMAP.
           MOVE WSS-NLIB(SCR-IPRO) TO SCR-NLIB.

           MOVE WSS-NTRV(SCR-IPRO) TO SCR-NTRV.
           MOVE WSS-PROV(SCR-IPRO) TO SCR-PROV.
       FIN-ING-SETE.
           EXIT.

       EGR-FPEN-CIC SECTION.
       INI-EGR-FPEN-CIC.
           PERFORM CRG-TBL-ENG.
           ADD 1 TO SCR-IPRO.
           IF SCR-IPRO > WSS-TOT-IIDX
                  PERFORM EGR-FTER-CIC
                  GO TO FIN-EGR-FPEN-CIC.
           IF SCR-IND-ENG IN SCR-VEC-ENG(SCR-IPRO) = SPACES
               GO TO INI-EGR-FPEN-CIC.
           MOVE WSS-INST-FPEN-CIC TO SCR-INST-EXT.
           MOVE WSS-PROG(SCR-IPRO) TO SYS-PROG.
           MOVE SCR-VARI TO SYS-CMMA.
           MOVE SCR-TCMA TO SYS-TCMA.
           MOVE SYS-XCTL TO SYS-CMND.
           PERFORM GNS-PRO-SYS.
       FIN-EGR-FPEN-CIC.
           EXIT.

       EGR-FTER-CIC SECTION.
       INI-EGR-FTER-CIC.
           PERFORM CRG-TBL-ENG.
           MOVE WSS-IDX-IOPC TO SCR-IPRO.
           MOVE WSS-INST-FTER-CIC TO SCR-INST-EXT.
           MOVE WSS-PROG(SCR-IPRO) TO SYS-PROG.
           MOVE SCR-VARI TO SYS-CMMA.
           MOVE SCR-TCMA TO SYS-TCMA.
           MOVE SYS-XCTL TO SYS-CMND.
           PERFORM GNS-PRO-SYS.
       FIN-EGR-FTER-CIC.
           EXIT.

       EGR-FTER-CMN SECTION.
       INI-EGR-FTER-CMN.
           PERFORM CRG-TBL-ENG.
           MOVE WSS-IDX-IOPC TO SCR-IPRO.
           MOVE WSS-INST-FTER-CMN TO SCR-INST-EXT.
           MOVE WSS-PROG(SCR-IPRO) TO SYS-PROG.
           MOVE SCR-VARI TO SYS-CMMA.
           MOVE SCR-TCMA TO SYS-TCMA.
           MOVE SYS-XCTL TO SYS-CMND.
           PERFORM GNS-PRO-SYS.
       FIN-EGR-FTER-CMN.
           EXIT.

       SCR-INIT SECTION.
       INI-SCR-INIT.
           MOVE 3  TO FRM-PLIN.
           MOVE 19 TO FRM-NLIN.
           MOVE FRM-CLR-FRM TO FRM-CMND.
           PERFORM GNS-PRO-FRM.
           MOVE FRM-SINI-DBNF TO FRM-SINI.
           MOVE SCR-NMAP TO FRM-NAME.
           MOVE SCR-NLIB TO FRM-NLIB.
           MOVE EVC-FLD TO FRM-DFLD.
           MOVE FRM-INI TO FRM-CMND.
           PERFORM GNS-PRO-FRM.
       FIN-SCR-INIT.
           EXIT.
       COPY COLBGMPT.
      *>>>>
*% END
*% IF EOF_PQ
      *<<<< EOF_PQ
       PRO-FLD-EVC SECTION.
       INI-PRO-FLD-EVC.
           MOVE FRM-CPIM-AEY TO FRM-NUM-DURV-ATR IN EVC-FLD.
           MOVE FRM-CPIM-AEY TO FRM-IND-UTDV-ATR IN EVC-FLD.
           MOVE FRM-CPIM-AEY TO FRM-NUM-SPVE-ATR IN EVC-FLD.
           MOVE FRM-CPIM-AEY TO FRM-IND-UTPV-ATR IN EVC-FLD.
           PERFORM PRO-OPC-EVC.
           PERFORM PRO-EVC-EVC.
           PERFORM PRO-PVC-EVC.
       FIN-PRO-FLD-EVC.
           EXIT.
       
       PRO-OPC-EVC SECTION.
       INI-PRO-OPC-EVC.
       FIN-PRO-OPC-EVC.
           EXIT.
       
       PRO-EVC-EVC SECTION.
       INI-PRO-EVC-EVC.
           MOVE FRM-CPIM-AEY TO EVC-NUM-IDLC-ATR IN EVC-FLD.
           MOVE FRM-CPIM-AEY TO EVC-NUM-VIGU-ATR IN EVC-FLD.
           MOVE FRM-CPIM-AEY TO EVC-FEC-FPVC-ATR IN EVC-FLD.
           MOVE FRM-CPIM-AEY TO EVC-NUM-DPVE-ATR IN EVC-FLD.
           MOVE FRM-CPIM-AEY TO EVC-MSC-TCVE-ATR IN EVC-FLD.
           MOVE FRM-CPIM-AEY TO EVC-NUM-DESD-ATR IN EVC-FLD.
           MOVE FRM-CPIM-AEY TO EVC-VAL-VENC-ATR IN EVC-FLD.
           MOVE FRM-CPIM-AEY TO EVC-NUM-SEVE-ATR IN EVC-FLD.
           MOVE FRM-CPIM-AEY TO EVC-IND-UTSV-ATR IN EVC-FLD.
           MOVE FRM-CPIM-AEY TO EVC-SGV-FVAR-ATR IN EVC-FLD.
           MOVE FRM-CPIM-AEY TO EVC-IND-CAUT-ATR IN EVC-FLD.
           MOVE FRM-CPIM-AEY TO EVC-IND-FVAR-ATR IN EVC-FLD.
       FIN-PRO-EVC-EVC.
           EXIT.

       PRO-PVC-EVC SECTION.
       INI-PRO-PVC-EVC.
       FIN-PRO-PVC-EVC.
           EXIT.
      *>>>>
*% END
*% IF EOF_PU
      *<<<< EOF_PU
       
       PUT-OPC-EVC SECTION.
       INI-PUT-OPC-EVC.
           IF PGM-STAT-OPC-NUL
               GO TO FIN-PUT-OPC-EVC.
           IF NOT PGM-STAT-OPC-OKS
               PERFORM CLR-OPC-EVC
               GO TO FIN-PUT-OPC-EVC.
           MOVE OPC-MSC-TVOC IN OPC TO OPC-MSC-TVOC IN EVC-FLD.
           MOVE OPC-COD-TOOC IN OPC TO OPC-COD-TOOC IN EVC-FLD.
           MOVE OPC-COD-OFOC IN OPC TO OPC-COD-OFOC IN EVC-FLD.
      *BUS-MSC busca glosa de miscelaneo en tabla
           IF OPC-MSC-TVOC IN EVC-FLD > SPACES
               MOVE 'TAB' TO MSC-COD-SIST
               MOVE 'TVAL' TO MSC-COD-TMSC IN MSC
               MOVE OPC-MSC-TVOC IN EVC-FLD TO MSC-COD-CMSC IN MSC
               PERFORM BUS-MSC
               MOVE MSC-GLS-DESC IN MSC TO
                    FRM-GLS-TVOC IN EVC-FLD.
      *BUS-TAB busca glosa de codigo en tabla
           IF OPC-COD-TOOC IN EVC-FLD > SPACES
               MOVE 'TAB' TO TAB-COD-SIST
               MOVE 'TIO' TO TAB-COD-TTAB IN TAB
               MOVE OPC-COD-TOOC IN EVC-FLD TO TAB-COD-CTAB IN TAB
               PERFORM BUS-TAB
               MOVE TAB-GLS-DESC IN TAB TO
                    FRM-GLS-TOOC IN EVC-FLD.
      *BUS-OFI busca oficina en tablas
           IF OPC-COD-OFOC IN EVC-FLD > SPACES
               MOVE OPC-COD-OFOC IN EVC-FLD TO OFI-COD-OFIC IN OFI
               PERFORM BUS-OFI
               MOVE OFI-GLS-DESC IN OFI TO FRM-GLS-OFOC IN EVC-FLD.
      *<<<< FIN_PUT_OPC_EVC
      *BUS-TAB busca glosa de codigo en tabla
      * NO EXISTE OPC-COD-VCOC IN EVC-FLD
           MOVE 'TAB' TO TAB-COD-SIST.
           MOVE 'VLR' TO TAB-COD-TTAB IN TAB.
           MOVE OPC-COD-VCOC IN OPC TO TAB-COD-CTAB IN TAB.
           PERFORM BUS-TAB.
           MOVE TAB-GLS-DESC IN TAB TO FRM-GLS-VCOC IN EVC-FLD.
      *>>>>
       FIN-PUT-OPC-EVC.
           EXIT.
      *>>>>
*% END
