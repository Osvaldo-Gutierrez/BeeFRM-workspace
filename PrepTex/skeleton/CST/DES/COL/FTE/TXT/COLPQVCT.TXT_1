*%! Codigo adicional para archivo
*% INCLUDE 'GNSSRC:MANEJO_VSI.SRC'
*% IF MI_COMMAREA
      *<<<< FIN_SCR_VARI
           03  SCR-VARI-PFS.
               05  SCR-KEY-IVCT-ASCE      PIC X(35).
               05  SCR-KEY-IVCT-DESC      PIC X(35).
      *>>>>
      *<<<< MI_COMMAREA
           03  SCR-KEY-ACC.
               04 SCR-KEY-FEC            PIC X(08).
           03  SCR-VAL-TOTA              PIC S9(11)V9(04) COMP-3.
           03  SCR-COL-COP               PIC  X(12).
           03  SCR-ULT-OPC               PIC  9(02).

      *>>>>
*% END
*% LARGO_MI_COMMAREA = 100
*% IF WSS
      *<<<<
       01  PFS-VARI.
           03 PFS-IVEZ-TOT        VALUE 'S' PIC X(01).
      * << Variables definidas por codigo adicional
       01  WR-FRM-LIN-DET.
           02 WR-VCT-COD-EJE       PIC X(12).
           02 FILLER               PIC X(01).
           02 WR-VCT-NOM-CLI       PIC X(25).
           02 FILLER               PIC X(01).
           02 WR-VCT-KEY-IOPC      PIC X(12).
           02 FILLER               PIC X(01).
           02 WR-VCT-VAL-TAS       PIC Z9,9999. 
           02 FILLER               PIC X(01).
           02 WR-VCT-VAL-VCT       PIC ZZ.ZZZ.ZZZ.ZZ9,9999.
       01  WR-FRM-TOTA.
           02 WR-FRM-GLS-TOTA      PIC X(08).
           02 WR-FRM-VAL-TOTA      PIC ZZ.ZZZ.ZZZ.ZZ9,9999.
      *>>>>
*% END
*% IF PFS_SCR_ACC
      *<<<< PFS_SCR_ACC
            IF FRM-FFLD = FRM-FFLD-PF5 OR FRM-FFLD-PF6 OR
                          FRM-FFLD-PF7 OR FRM-FFLD-PF8
               PERFORM VAL-NUM-KEY-VCT
               PERFORM VAL-NUM-FLD-VCT
               PERFORM SCRL-TAB-VCT
               PERFORM SCR-TRL.
      *>>>>
*% END
*% IF PUT_SCR
      *<<<< PUT_SCR
            IF PGM-STAT-VCT-OKS
               PERFORM INIT-VARI
               MOVE 'VCT-KEY-IVCT' TO FIO-AKEY
               MOVE FIO-GET-NLS TO FIO-CMND
               PERFORM COL-FIO-VCT
               IF FIO-STAT-OKS
                   MOVE SPACES TO SCR-KEY-IVCT-ASCE
                                  SCR-KEY-IVCT-DESC
                   PERFORM LLENAR-TABLA-ASCE
                   MOVE SCR-KEY-IVCT-DESC TO
                        VCT-KEY-IVCT IN VCT 
               ELSE
                   PERFORM LIMPIAR-TABLA VARYING FRM-IFLD FROM 1 BY 1
                                         UNTIL   FRM-IFLD > 10
                   MOVE 'COL' TO MSG-COD-SIST
                   MOVE 'VCT    NEX' TO MSG-COD-MENS
                   PERFORM GET-MSG
                   MOVE MSG-GLS-DESC TO FRM-MENS.
      *>>>>
*% END
*% IF PFS_GET_CON
      *<<<< PFS_GET_CON
           IF NOT ( FRM-FFLD = FRM-FFLD-PF5 )
           IF NOT ( FRM-FFLD = FRM-FFLD-PF6 )
      *>>>>
*% END
*% IF FND_KEY
      *<<<< FND_KEY
           MOVE VCT-FEC-VTO IN VCT TO SCR-KEY-FEC.
      *Lectura de primer registro (busqueda)
           MOVE SPACES TO VCT-KEY-IOPC IN VCT
           MOVE FIO-GET-NLS TO FIO-CMND.
           PERFORM COL-FIO-VCT.
           MOVE FIO-STAT TO PGM-STAT-VCT.
      *Si no encontro ningun registro entonces abandona la Seccion
           IF NOT FIO-STAT-OKS
              GO TO BUS-MSG-NEX.
           MOVE FIO-END-BRW TO FIO-CMND.
           PERFORM COL-FIO-VCT.
           PERFORM VER-CAM-KEY.
           IF FIO-STAT-OKS
              GO TO FIN-FND-KEY.
       BUS-MSG-NEX.
           MOVE 1              TO SCR-ULT-OPC
           MOVE +0             TO SCR-VAL-TOTA
           IF VCT-COD-EJE IN VCT-FLD > SPACES
              MOVE 'VCTNEXEJE' TO MSG-COD-MENS 
           ELSE
              MOVE 'VCTNEXOFI' TO MSG-COD-MENS.

           MOVE 'COL' TO MSG-COD-SIST
           PERFORM GET-MSG
           MOVE MSG-GLS-DESC TO FRM-MENS.
           GO TO FIN-FND-KEY.
      *>>>>
*% END
*% IF EOF
      *<<<< EOF
       SCRL-TAB-VCT SECTION.
       INI-SCRL-TAB-VCT.
           IF FRM-FFLD = FRM-FFLD-PF5
               PERFORM SCRL-TAB-VCT-PF5
               GO TO FIN-SCRL-TAB-VCT.
           IF FRM-FFLD = FRM-FFLD-PF6
               PERFORM SCRL-TAB-VCT-PF6
               GO TO FIN-SCRL-TAB-VCT.
       FIN-SCRL-TAB-VCT.
           EXIT.
   
       LLENAR-TABLA-ASCE SECTION.
       INI-LLENAR-TABLA-ASCE.
           MOVE 1 TO FRM-IFLD.
       LUP-LLENAR-TABLA-ASCE.
           IF PFS-IVEZ-TOT = 'S'
               PERFORM PROCESO-CADA-HIJO.
           IF FRM-IFLD NOT > 10
               PERFORM CARGAR-TABLA.
           IF FRM-IFLD = 1
               MOVE VCT-KEY-IVCT IN VCT TO SCR-KEY-IVCT-DESC
               MOVE SPACES              TO SCR-KEY-IVCT-ASCE
           ELSE
           IF FRM-IFLD = 10
               MOVE VCT-KEY-IVCT IN VCT TO SCR-KEY-IVCT-ASCE.
       NXT-LLENAR-TABLA-ASCE.
           ADD 1 TO FRM-IFLD.
           IF PFS-IVEZ-TOT = 'N'
               IF FRM-IFLD > 10
                   GO TO FIN-LLENAR-TABLA-ASCE.
           MOVE 'VCT-KEY-IVCT' TO FIO-AKEY.
           MOVE FIO-GET-NXT TO FIO-CMND.
           PERFORM COL-FIO-VCT.
           PERFORM VER-CAM-KEY.
           IF FIO-STAT-OKS
               GO TO LUP-LLENAR-TABLA-ASCE.
           PERFORM LIMPIAR-TABLA VARYING FRM-IFLD FROM FRM-IFLD BY 1
                                 UNTIL   FRM-IFLD > 10.
       FIN-LLENAR-TABLA-ASCE.
           MOVE 'VCT-KEY-IVCT' TO FIO-AKEY.
           MOVE FIO-END-BRW TO FIO-CMND.
           PERFORM COL-FIO-VCT.
       EXT-LLENAR-TABLA-ASCE.
           EXIT.
  
       LLENAR-TABLA-DESC SECTION.
       INI-LLENAR-TABLA-DESC.
           MOVE 10 TO FRM-IFLD.
       LUP-LLENAR-TABLA-DESC.
           PERFORM CARGAR-TABLA.
           IF FRM-IFLD = 10
               MOVE VCT-KEY-IVCT IN VCT TO SCR-KEY-IVCT-ASCE
               MOVE SPACES              TO SCR-KEY-IVCT-DESC
           ELSE
           IF FRM-IFLD = 1
               MOVE VCT-KEY-IVCT IN VCT TO SCR-KEY-IVCT-DESC.
       PRV-LLENAR-TABLA-DESC.
           SUBTRACT 1 FROM FRM-IFLD.
           IF FRM-IFLD < 1
               GO TO FIN-LLENAR-TABLA-DESC.
           MOVE 'VCT-KEY-IVCT' TO FIO-AKEY.
           MOVE FIO-GET-PRV TO FIO-CMND.
           PERFORM COL-FIO-VCT.
           PERFORM VER-CAM-KEY.
           IF FIO-STAT-OKS
              GO TO LUP-LLENAR-TABLA-DESC.
           PERFORM LIMPIAR-TABLA VARYING FRM-IFLD FROM FRM-IFLD BY -1
                                 UNTIL   FRM-IFLD < 1.
       FIN-LLENAR-TABLA-DESC.
           MOVE 'VCT-KEY-IVCT' TO FIO-AKEY.
           MOVE FIO-END-BRW TO FIO-CMND.
           PERFORM COL-FIO-VCT.
       EXT-LLENAR-TABLA-DESC.
           EXIT.
    
       SCRL-TAB-VCT-PF5 SECTION.
       INI-SCRL-TAB-VCT-PF5.
           IF SCR-KEY-IVCT-DESC NOT > SPACES
               MOVE 'VCTHIJONOPRV' TO MSG-COD-MENS
               GO TO MSG-SCRL-TAB-VCT-PF5.
           MOVE SCR-KEY-IVCT-DESC TO VCT-KEY-IVCT IN VCT.
           MOVE 'VCT-KEY-IVCT' TO FIO-AKEY.
           MOVE FIO-GET-LEQ TO FIO-CMND.
           PERFORM COL-FIO-VCT.
           IF NOT ( FIO-STAT-OKS AND
               VCT-KEY-IVCT IN VCT = SCR-KEY-IVCT-DESC )
               MOVE 'VCTCURRNEX' TO MSG-COD-MENS
               GO TO MSG-SCRL-TAB-VCT-PF5.
           MOVE 'VCT-KEY-IVCT' TO FIO-AKEY.
           MOVE FIO-GET-PRV TO FIO-CMND.
           PERFORM COL-FIO-VCT.
           PERFORM VER-CAM-KEY.
           IF FIO-STAT-OKS
               PERFORM LLENAR-TABLA-DESC
               GO TO FIN-SCRL-TAB-VCT-PF5.
           IF FIO-STAT-OKS
               MOVE 'VCT-KEY-IVCT' TO FIO-AKEY
               MOVE FIO-END-BRW TO FIO-CMND
               PERFORM COL-FIO-VCT.
           MOVE 'VCTHIJONOPRV' TO MSG-COD-MENS.
       MSG-SCRL-TAB-VCT-PF5.
           MOVE 'COL' TO MSG-COD-SIST.
           PERFORM GET-MSG.
           MOVE MSG-GLS-DESC TO FRM-MEN2.
       FIN-SCRL-TAB-VCT-PF5.
           EXIT.
   
       SCRL-TAB-VCT-PF6 SECTION.
       INI-SCRL-TAB-VCT-PF6.
           IF SCR-KEY-IVCT-ASCE NOT > SPACES
               MOVE 'VCTHIJONONXT' TO MSG-COD-MENS
               GO TO MSG-SCRL-TAB-VCT-PF6.
           MOVE SCR-KEY-IVCT-ASCE TO VCT-KEY-IVCT IN VCT.
           MOVE 'VCT-KEY-IVCT' TO FIO-AKEY.
           MOVE FIO-GET-NLS TO FIO-CMND.
           PERFORM COL-FIO-VCT.
           IF NOT ( FIO-STAT-OKS AND
               VCT-KEY-IVCT IN VCT = SCR-KEY-IVCT-ASCE )
               MOVE 'VCTCURRNEX' TO MSG-COD-MENS
               GO TO MSG-SCRL-TAB-VCT-PF6.
           MOVE 'VCT-KEY-IVCT' TO FIO-AKEY.
           MOVE FIO-GET-NXT TO FIO-CMND.
           PERFORM COL-FIO-VCT.
           PERFORM VER-CAM-KEY.
           IF FIO-STAT-OKS
               MOVE 'N' TO PFS-IVEZ-TOT
               PERFORM LLENAR-TABLA-ASCE
               GO TO FIN-SCRL-TAB-VCT-PF6.
           IF FIO-STAT-OKS
               MOVE 'VCT-KEY-IVCT' TO FIO-AKEY
               MOVE FIO-END-BRW TO FIO-CMND
               PERFORM COL-FIO-VCT.
           MOVE 'VCTHIJONONXT' TO MSG-COD-MENS.
       MSG-SCRL-TAB-VCT-PF6.
           MOVE 'COL' TO MSG-COD-SIST.
           PERFORM GET-MSG.
           MOVE MSG-GLS-DESC TO FRM-MEN2.
       FIN-SCRL-TAB-VCT-PF6.
           EXIT.
 
       CARGAR-TABLA SECTION.
       INI-CARGAR-TABLA.
           MOVE SPACES              TO WR-FRM-LIN-DET.
           MOVE VCT-COD-EJE IN VCT  TO WR-VCT-COD-EJE
           MOVE VCT-NOM-CLI IN VCT  TO WR-VCT-NOM-CLI
           MOVE VCT-KEY-IOPC IN VCT TO WR-VCT-KEY-IOPC
           MOVE VCT-VAL-TAS IN VCT  TO WR-VCT-VAL-TAS
           MOVE VCT-VAL-VCT IN VCT  TO WR-VCT-VAL-VCT
           MOVE WR-FRM-LIN-DET TO FRM-LIN-DET IN VCT-FLD(FRM-IFLD).
           MOVE FRM-IFLD            TO SCR-ULT-OPC.
       FIN-CARGAR-TABLA.
           EXIT.
       LIMPIAR-TABLA SECTION.
       INI-LIMPIAR-TABLA.
           MOVE SPACES TO FRM-LIN-DET IN VCT-FLD(FRM-IFLD).
       FIN-LIMPIAR-TABLA.
           EXIT.
       INIT-VARI SECTION.
       INI-INIT-VARI.
           MOVE 1                  TO SCR-ULT-OPC
           MOVE 0                  TO SCR-VAL-TOTA.
       FIN-INIT-VARI.
           EXIT.
       PROCESO-CADA-HIJO SECTION.
       INI-PROCESO-CADA-HIJO.
           ADD  VCT-VAL-VCT  IN VCT TO SCR-VAL-TOTA.
           MOVE VCT-KEY-IOPC IN VCT TO SCR-COL-COP.
       FIN-PROCESO-CADA-HIJO.
           EXIT.
       VER-CAM-KEY SECTION.
       INI-VER-CAM-KEY.
      *Se chequea que no exista cambio de clave 
      *dependiendo si se digito ofi/eje o ofi/eje/fec
           MOVE FIO-STAT TO PGM-STAT-VCT.
           IF NOT FIO-STAT-OKS
              GO TO FIN-VER-CAM-KEY.
           IF VCT-FEC-VTO IN VCT NOT = SCR-KEY-FEC
              MOVE PGM-SRNF TO FIO-STAT.
           IF VCT-COD-OFI IN VCT NOT = VCT-COD-OFI IN VCT-FLD
              MOVE PGM-SRNF TO FIO-STAT.
           IF VCT-COD-EJE IN VCT-FLD > SPACES AND
              VCT-COD-EJE IN VCT-FLD NOT = VCT-COD-EJE IN VCT
              MOVE PGM-SRNF TO FIO-STAT.
           MOVE FIO-STAT TO PGM-STAT-VCT.
       FIN-VER-CAM-KEY.
           EXIT.
       PON-TOT-FRM SECTION.
       INI-PON-TOT-FRM.
           IF (SCR-INST NOT = SCR-INST-GAB)
               GO TO FIN-PON-TOT-FRM.

           MOVE FRM-LIN-DET(SCR-ULT-OPC) TO WR-FRM-LIN-DET
           IF (WR-VCT-KEY-IOPC = SCR-COL-COP OR 
               WR-VCT-KEY-IOPC NOT > SPACES)
               MOVE SCR-VAL-TOTA         TO WR-FRM-VAL-TOTA
               MOVE 'Total : '           TO WR-FRM-GLS-TOTA
               MOVE WR-FRM-TOTA          TO FRM-GLS-TOTA
           ELSE
           IF (FRM-MEN2 NOT > SPACES)
               MOVE 'COL'                TO MSG-COD-SIST
               MOVE 'LDAEXIPAG'          TO MSG-COD-MENS
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC         TO FRM-MEN2
               MOVE SPACES               TO FRM-GLS-TOTA.
       FIN-PON-TOT-FRM.
           EXIT.
      *>>>>
*% END
