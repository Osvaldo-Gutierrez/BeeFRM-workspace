*% IF FIN_SCR_VARI
      *<<<< FIN_SCR_VARI
           03  SCR-VARI-PFS.
               05  SCR-KEY-IRLO-ASCE      PIC X(24).
               05  SCR-KEY-IRLO-DESC      PIC X(24).
               05  SCR-KEY-ILDA-RAIZ      PIC X(12).
               05  SCR-KEY-ILDA-ACTU.
                   07 SCR-KEY-ILDA-ACTU-CIC PIC X(12).
                   07 SCR-KEY-ILDA-ACTU-COP PIC X(12).
               05  SCR-KEY-ACC            PIC X(13).
      *>>>>
*% END
*% IF MI_COMMAREA
      *<<< Variables de mi commarea
           03  SCR-CAR-FECH                   PIC  X(10).
           03  SCR-KEY-VCAM.
               04 SCR-CAM-FEC1                PIC  X(08).
               04 SCR-CAM-FEC2                PIC  X(08).
               04 SCR-CAM-COD1                PIC  X(06).
               04 SCR-CAM-COD2                PIC  X(06).
           03  SCR-SGV-VCAM                   PIC S9(11)V9(04) COMP-3.
           03  SCR-VAL-UTLZ                   PIC S9(11)V9(04) COMP-3.
           03  SCR-VAL-DISP                   PIC S9(11)V9(04) COMP-3.
           03  SCR-COL-COP                    PIC  X(12).
           03  SCR-ULT-OPC                    PIC  9(02).
*% END
*% LARGO_MI_COMMAREA = 173
*% IF WSS AND PGM_DTC
      *<<<< WSS AND PGM_DTC
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-CAM-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-RLO-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-OPC-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-DLC-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-ICG-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-DBC-REQA==.
      *>>>>
*% END
*% IF WSS
      *<<<< WSS
       01  PFS-VARI.
           03 PFS-IVEZ-TOT        VALUE 'S' PIC X(01).
      *>>>>
       COPY TABBRCAM.
       COPY COLBRRLO.
       COPY COLBROPC.
       COPY COLBRDLC.
       COPY COLBRICG.
       COPY SGCBRDBC.
       COPY GNSWGCPT.
       COPY GNSWGHOY.
      * << Variables definidas por codigo adicional
       01  WR-VARIABLES.
           02 WR-COP.
              03 WR-NUM-SIS.
                 04 WR-NUM-SIS-L       PIC X(01).
                 04 FILLER             PIC X(03).
              03 WR-COD-CRR            PIC X(08).
           02 WR-ENTERO                PIC S9(11).
      *  Linea de detalle
       01  WR-FRM-LIN-DET.
           02 WR-FRM-CIC-IOPC      PIC X(12).
           02 FILLER               PIC X(01).
           02 WR-FRM-FEC-FCOL.
              03 OPC-NUM-DCOL      PIC X(02).
              03 OPC-NUM-MCOL      PIC X(02).
              03 OPC-NUM-SCOL      PIC X(02).
              03 OPC-NUM-ACOL      PIC X(02).
           02 FILLER               PIC X(01).
           02 WR-FRM-FEC-FMAV.
              03 DLC-NUM-DMAV      PIC X(02).
              03 DLC-NUM-MMAV      PIC X(02).
              03 DLC-NUM-SMAV      PIC X(02).
              03 DLC-NUM-AMAV      PIC X(02).
           02 FILLER               PIC X(01).
           02 WR-FRM-SGV-TINT      PIC ZZ9,9999. 
           02 WR-FRM-VAL-CRED      PIC ---.---.---.--9,9999.
           02 WR-FRM-VAL-SCRE      PIC ---.---.---.--9,9999.
       01  WR-FRM-DISP.
           02 WR-FRM-GLS-DISP      PIC X(17).
           02 WR-FRM-VAL-DISP      PIC ---.---.---.--9,9999.
       01  WR-FRM-UTLZ.
           02 WR-FRM-GLS-UTLZ      PIC X(17).
           02 WR-FRM-VAL-UTLZ      PIC ---.---.---.--9,9999.
      *>>>>
*% END
*% IF FND_KEY
      *<< 
           MOVE SPACES              TO SCR-VARI-PFS.
      *<< Analizo por llave de acceso
           IF (LDA-NUM-SIS IN AVA-FLD > SPACES)
               MOVE 'LDA-COP'       TO SCR-KEY-ACC
           ELSE
              MOVE FIO-GET-NLS      TO FIO-CMND
              MOVE DBC-CIC-ICLI     TO CLI-CIC IN LDA
              MOVE 'LDA-CLV-LDA-1'  TO FIO-AKEY SCR-KEY-ACC
              PERFORM COL-FIO-LDA
              IF DBC-CIC-ICLI NOT = CLI-CIC IN LDA
                 MOVE '23'          TO FIO-STAT PGM-STAT-LDA
                 GO TO FIN-FND-KEY.
*% END
*% IF PFS_SCR_ACC
      *<<<< PFS_SCR_ACC
           IF FRM-FFLD = FRM-FFLD-PF5 OR FRM-FFLD-PF6 OR
                         FRM-FFLD-PF7 OR FRM-FFLD-PF8
               PERFORM VAL-NUM-KEY-AVA
               PERFORM VAL-NUM-FLD-AVA
               PERFORM SCRL-TAB-AVA
               PERFORM SCR-TRL.
      *>>>>
*% END
*% IF PUT_SCR
      *<<<< PUT_SCR
           IF PGM-STAT-LDA-OKS
               PERFORM INIT-VARI
               MOVE LDA-COP IN LDA TO SCR-KEY-ILDA-ACTU-COP
               MOVE CLI-CIC IN LDA TO SCR-KEY-ILDA-ACTU-CIC
               MOVE LDA-COP IN LDA TO SCR-KEY-ILDA-RAIZ
               MOVE SPACES TO LDA-CLV-RLO-1 IN RLO
               MOVE SCR-KEY-ILDA-RAIZ TO LDA-COP IN RLO
               MOVE 'LDA-CLV-RLO-1' TO FIO-AKEY
               MOVE FIO-GET-NLS TO FIO-CMND
               PERFORM COL-FIO-RLO
               IF FIO-STAT-OKS AND
                  LDA-COP IN RLO = SCR-KEY-ILDA-RAIZ
                   MOVE SPACES TO SCR-KEY-IRLO-ASCE
                                  SCR-KEY-IRLO-DESC
                   PERFORM LLENAR-TABLA-ASCE
               ELSE
                   PERFORM LIMPIAR-TABLA VARYING FRM-IFLD FROM 1 BY 1
                                         UNTIL   FRM-IFLD > 8
                   MOVE 'COL' TO MSG-COD-SIST
                   MOVE 'RLO    NEX' TO MSG-COD-MENS
                   PERFORM GET-MSG
                   MOVE MSG-GLS-DESC TO FRM-MENS.
      *>>>>
*% END
*% IF PFS_GET_CON
      *<<<< PFS_GET_CON
           IF NOT ( FRM-FFLD = FRM-FFLD-PF5 )
           IF NOT ( FRM-FFLD = FRM-FFLD-PF6 )
           IF NOT ( FRM-FFLD = FRM-FFLD-PF7 )
           IF NOT ( FRM-FFLD = FRM-FFLD-PF8 )
      *>>>>
*% END
*% IF EOF
      *<<<< EOF
       SCRL-TAB-AVA SECTION.
       INI-SCRL-TAB-AVA.
           IF FRM-FFLD = FRM-FFLD-PF5
               PERFORM SCRL-TAB-AVA-PF5
               GO TO FIN-SCRL-TAB-AVA.
           IF FRM-FFLD = FRM-FFLD-PF6
               PERFORM SCRL-TAB-AVA-PF6
               GO TO FIN-SCRL-TAB-AVA.
           IF FRM-FFLD = FRM-FFLD-PF7
               PERFORM SCRL-TAB-AVA-PF7
               GO TO FIN-SCRL-TAB-AVA.
           IF FRM-FFLD = FRM-FFLD-PF8
               PERFORM SCRL-TAB-AVA-PF8
               GO TO FIN-SCRL-TAB-AVA.
       FIN-SCRL-TAB-AVA.
           EXIT.
        
       LLENAR-TABLA-ASCE SECTION.
       INI-LLENAR-TABLA-ASCE.
           MOVE 1 TO FRM-IFLD.
       LUP-LLENAR-TABLA-ASCE.
           IF PFS-IVEZ-TOT = 'S'
               PERFORM PROCESO-CADA-HIJO.
           IF FRM-IFLD NOT > 8
               PERFORM CARGAR-TABLA.
           IF FRM-IFLD = 1
               MOVE LDA-CLV-RLO-1 IN RLO TO SCR-KEY-IRLO-DESC
               MOVE SPACES              TO SCR-KEY-IRLO-ASCE
           ELSE
           IF FRM-IFLD = 8
               MOVE LDA-CLV-RLO-1 IN RLO TO SCR-KEY-IRLO-ASCE.
       NXT-LLENAR-TABLA-ASCE.
           ADD 1 TO FRM-IFLD.
           IF PFS-IVEZ-TOT = 'N'
               IF FRM-IFLD > 8
                   GO TO FIN-LLENAR-TABLA-ASCE.
           MOVE 'LDA-CLV-RLO-1' TO FIO-AKEY.
           MOVE FIO-GET-NXT TO FIO-CMND.
           PERFORM COL-FIO-RLO.
           IF FIO-STAT-OKS AND
               LDA-COP IN RLO = SCR-KEY-ILDA-RAIZ
               GO TO LUP-LLENAR-TABLA-ASCE.
           PERFORM LIMPIAR-TABLA VARYING FRM-IFLD FROM FRM-IFLD BY 1
                                 UNTIL   FRM-IFLD > 8.
       FIN-LLENAR-TABLA-ASCE.
           EXIT.
        
       LLENAR-TABLA-DESC SECTION.
       INI-LLENAR-TABLA-DESC.
           MOVE 8 TO FRM-IFLD.
       LUP-LLENAR-TABLA-DESC.
           PERFORM CARGAR-TABLA.
           IF FRM-IFLD = 8
               MOVE LDA-CLV-RLO-1 IN RLO TO SCR-KEY-IRLO-ASCE
               MOVE SPACES              TO SCR-KEY-IRLO-DESC
           ELSE
           IF FRM-IFLD = 1
               MOVE LDA-CLV-RLO-1 IN RLO TO SCR-KEY-IRLO-DESC.
       PRV-LLENAR-TABLA-DESC.
           SUBTRACT 1 FROM FRM-IFLD.
           IF FRM-IFLD < 1
               GO TO FIN-LLENAR-TABLA-DESC.
           MOVE 'LDA-CLV-RLO-1' TO FIO-AKEY.
           MOVE FIO-GET-PRV TO FIO-CMND.
           PERFORM COL-FIO-RLO.
           IF FIO-STAT-OKS AND
              LDA-COP IN RLO = SCR-KEY-ILDA-RAIZ
               GO TO LUP-LLENAR-TABLA-DESC.
           PERFORM LIMPIAR-TABLA VARYING FRM-IFLD FROM FRM-IFLD BY -1
                                 UNTIL   FRM-IFLD < 1.
       FIN-LLENAR-TABLA-DESC.
           EXIT.
        
       SCRL-TAB-AVA-PF5 SECTION.
       INI-SCRL-TAB-AVA-PF5.
           IF SCR-KEY-IRLO-DESC NOT > SPACES
               MOVE 'RLO    NOPRV' TO MSG-COD-MENS
               GO TO MSG-SCRL-TAB-AVA-PF5.
           MOVE SCR-KEY-IRLO-DESC TO LDA-CLV-RLO-1 IN RLO.
           MOVE 'LDA-CLV-RLO-1' TO FIO-AKEY.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM COL-FIO-RLO.
           IF NOT FIO-STAT-OKS
               MOVE 'RLOCURRNEX' TO MSG-COD-MENS
               GO TO MSG-SCRL-TAB-AVA-PF5.
           MOVE 'LDA-CLV-RLO-1' TO FIO-AKEY.
           MOVE FIO-GET-PRV TO FIO-CMND.
           PERFORM COL-FIO-RLO.
           IF FIO-STAT-OKS AND
              LDA-COP IN RLO = SCR-KEY-ILDA-RAIZ
               PERFORM LLENAR-TABLA-DESC
               GO TO FIN-SCRL-TAB-AVA-PF5.
           MOVE 'RLO    NOPRV' TO MSG-COD-MENS.
       MSG-SCRL-TAB-AVA-PF5.
           MOVE 'COL' TO MSG-COD-SIST.
           PERFORM GET-MSG.
           MOVE MSG-GLS-DESC TO FRM-MEN2.
       FIN-SCRL-TAB-AVA-PF5.
           EXIT.
     
       SCRL-TAB-AVA-PF6 SECTION.
       INI-SCRL-TAB-AVA-PF6.
           IF SCR-KEY-IRLO-ASCE NOT > SPACES
               MOVE 'RLO    NONXT' TO MSG-COD-MENS
               GO TO MSG-SCRL-TAB-AVA-PF6.
           MOVE SCR-KEY-IRLO-ASCE TO LDA-CLV-RLO-1 IN RLO.
           MOVE 'LDA-CLV-RLO-1' TO FIO-AKEY.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM COL-FIO-RLO.
           IF NOT FIO-STAT-OKS
               MOVE 'RLOCURRNEX' TO MSG-COD-MENS
               GO TO MSG-SCRL-TAB-AVA-PF6.
           MOVE 'LDA-CLV-RLO-1' TO FIO-AKEY.
           MOVE FIO-GET-NXT TO FIO-CMND.
           PERFORM COL-FIO-RLO.
           IF FIO-STAT-OKS AND
              LDA-COP IN RLO = SCR-KEY-ILDA-RAIZ
               MOVE 'N' TO PFS-IVEZ-TOT
               PERFORM LLENAR-TABLA-ASCE
               GO TO FIN-SCRL-TAB-AVA-PF6.
           MOVE 'RLO    NONXT' TO MSG-COD-MENS.
       MSG-SCRL-TAB-AVA-PF6.
           MOVE 'COL' TO MSG-COD-SIST.
           PERFORM GET-MSG.
           MOVE MSG-GLS-DESC TO FRM-MEN2.
       FIN-SCRL-TAB-AVA-PF6.
           EXIT.
        
       SCRL-TAB-AVA-PF7 SECTION.
       INI-SCRL-TAB-AVA-PF7.
           MOVE SCR-KEY-ILDA-ACTU-COP TO LDA-COP IN LDA
           MOVE SCR-KEY-ILDA-ACTU-CIC TO CLI-CIC IN LDA.
           MOVE SCR-KEY-ACC TO FIO-AKEY.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM COL-FIO-LDA.
           IF NOT FIO-STAT-OKS
               MOVE 'LDACURRNEX' TO MSG-COD-MENS
               GO TO MSG-SCRL-TAB-AVA-PF7.
           MOVE SCR-KEY-ACC TO FIO-AKEY.
           MOVE FIO-GET-PRV TO FIO-CMND.
           PERFORM COL-FIO-LDA.
           IF NOT FIO-STAT-OKS
               MOVE 'LDA    NOPRV' TO MSG-COD-MENS
               GO TO MSG-SCRL-TAB-AVA-PF7.
           MOVE FIO-STAT TO PGM-STAT-LDA.
           PERFORM PUT-SCR.
           GO TO FIN-SCRL-TAB-AVA-PF7.
       MSG-SCRL-TAB-AVA-PF7.
           MOVE 'COL' TO MSG-COD-SIST.
           PERFORM GET-MSG.
           MOVE MSG-GLS-DESC TO FRM-MEN2.
       FIN-SCRL-TAB-AVA-PF7.
           EXIT.
        
       SCRL-TAB-AVA-PF8 SECTION.
       INI-SCRL-TAB-AVA-PF8.
           MOVE SCR-KEY-ILDA-ACTU-COP TO LDA-COP IN LDA
           MOVE SCR-KEY-ILDA-ACTU-CIC TO CLI-CIC IN LDA.
           MOVE SCR-KEY-ACC TO FIO-AKEY.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM COL-FIO-LDA.
           IF NOT FIO-STAT-OKS
               MOVE 'LDACURRNEX' TO MSG-COD-MENS
               GO TO MSG-SCRL-TAB-AVA-PF8.
           MOVE SCR-KEY-ACC TO FIO-AKEY.
           MOVE FIO-GET-NXT TO FIO-CMND.
           PERFORM COL-FIO-LDA.
           IF NOT FIO-STAT-OKS
               MOVE 'LDA    NONXT' TO MSG-COD-MENS
               GO TO MSG-SCRL-TAB-AVA-PF8.
           MOVE FIO-STAT TO PGM-STAT-LDA.
           PERFORM PUT-SCR.
           GO TO FIN-SCRL-TAB-AVA-PF8.
       MSG-SCRL-TAB-AVA-PF8.
           MOVE 'COL' TO MSG-COD-SIST.
           PERFORM GET-MSG.
           MOVE MSG-GLS-DESC TO FRM-MEN2.
       FIN-SCRL-TAB-AVA-PF8.
           EXIT.
      *>>>>
      *<<<< EOF
       CARGAR-TABLA SECTION.
       INI-CARGAR-TABLA.
           MOVE SPACES             TO WR-FRM-LIN-DET
           MOVE COL-COP IN RLO     TO WR-FRM-CIC-IOPC
           PERFORM LEER-OPC.
           IF OPC-VAL-SCRE > 0 AND (OPC-MSC-STAT = 'A' OR = 'B')
              NEXT SENTENCE
           ELSE
              IF FRM-FFLD = FRM-FFLD-PF5
                 ADD 1 TO FRM-IFLD
                 GO TO FIN-CARGAR-TABLA
              ELSE
                 SUBTRACT 1 FROM FRM-IFLD
                 GO TO FIN-CARGAR-TABLA.

           MOVE COL-COP IN RLO     TO DLC-CIC-IOPC IN DLC
           MOVE '001'              TO DLC-NUM-IDLC IN DLC
           MOVE 'DLC-KEY-IDLC'     TO FIO-AKEY
           MOVE FIO-GET-KEY        TO FIO-CMND
           PERFORM COL-FIO-DLC
           IF NOT FIO-STAT-OKS
              MOVE ZEROES          TO DLC-FEC-FMAV IN DLC.

           MOVE COL-COP IN RLO     TO ICG-CIC-IOPC IN ICG
           MOVE '000'              TO ICG-NUM-ICAN IN ICG
           MOVE SPACES             TO ICG-CIC-IOPV IN ICG
           MOVE '000'              TO ICG-NUM-IVCT IN ICG
           MOVE 'INT'              TO ICG-IND-TTAS IN ICG
           MOVE '00000000'         TO ICG-FEC-FINI IN ICG
           MOVE 'ICG-KEY-IICG'     TO FIO-AKEY
           MOVE FIO-GET-KEY        TO FIO-CMND
           PERFORM COL-FIO-ICG
           IF FIO-STAT-OKS
              NEXT SENTENCE
           ELSE
              MOVE 0                TO ICG-SGV-TINT IN ICG.

           MOVE CORR OPC-FEC-FCOL IN OPC TO WR-FRM-FEC-FCOL
           MOVE CORR DLC-FEC-FMAV IN DLC TO WR-FRM-FEC-FMAV
           MOVE      ICG-SGV-TINT IN ICG TO WR-FRM-SGV-TINT 
           MOVE      OPC-VAL-CRED IN OPC TO WR-FRM-VAL-CRED 
           MOVE      OPC-VAL-SCRE IN OPC TO WR-FRM-VAL-SCRE 
           MOVE      WR-FRM-LIN-DET      TO FRM-LIN-DET(FRM-IFLD).
           MOVE      FRM-IFLD            TO SCR-ULT-OPC.
       FIN-CARGAR-TABLA.
           EXIT.
       INIT-VARI SECTION.
       INI-INIT-VARI.
           MOVE 1                   TO SCR-ULT-OPC
           MOVE 0                   TO SCR-VAL-UTLZ
           MOVE LDA-VAL-AUT IN LDA  TO SCR-VAL-DISP.
       FIN-INIT-VARI.
           EXIT.
       PROCESO-CADA-HIJO SECTION.
       INI-PROCESO-CADA-HIJO.
           PERFORM LEER-OPC.
           IF OPC-VAL-SCRE > 0 AND (OPC-MSC-STAT = 'A' OR = 'B')
               ADD OPC-VAL-SCRE IN OPC TO SCR-VAL-UTLZ
               SUBTRACT OPC-VAL-SCRE IN OPC FROM SCR-VAL-DISP
               MOVE COL-COP IN RLO TO SCR-COL-COP.
       FIN-PROCESO-CADA-HIJO.
           EXIT.
       LIMPIAR-TABLA SECTION.
       INI-LIMPIAR-TABLA.
           MOVE SPACES TO FRM-LIN-DET IN AVA-FLD(FRM-IFLD).
       FIN-LIMPIAR-TABLA.
           EXIT.
       LEER-OPC SECTION.
       INI-LEER-OPC.
           MOVE COL-COP IN RLO     TO OPC-CIC-IOPC IN OPC
           MOVE 'OPC-KEY-IOPC'     TO FIO-AKEY
           MOVE FIO-GET-KEY        TO FIO-CMND
           PERFORM COL-FIO-OPC
           IF NOT FIO-STAT-OKS
              MOVE 0               TO OPC-VAL-SCRE IN OPC
              MOVE 0               TO OPC-VAL-CRED IN OPC
              MOVE ZEROES          TO OPC-FEC-FCOL IN OPC.

           IF (OPC-COD-VCOC = '0999  ')
               GO TO FIN-LEER-OPC.

           IF (SCR-CAR-FECH NOT = 'CARGADA OK')
               MOVE 'CARGADA OK'   TO SCR-CAR-FECH
               PERFORM GET-FHOY
               MOVE HOY-FHOY       TO SCR-CAM-FEC1 SCR-CAM-FEC2.

           MOVE SCR-CAM-FEC1       TO CAM-FEC-FCAM IN CAM (1)
           MOVE SCR-CAM-FEC2       TO CAM-FEC-FCAM IN CAM (2)
           MOVE OPC-COD-VCOC       TO CAM-COD-VCAM IN CAM (1)
           MOVE '0999  '           TO CAM-COD-VCAM IN CAM (2)
 
           IF (SCR-KEY-VCAM NOT = CAM-KEY-CAMB IN CAM)
               MOVE CAM-KEY-CAMB IN CAM TO SCR-KEY-VCAM
               MOVE 'CAM-KEY-CAMB' TO FIO-AKEY
               MOVE FIO-GET-KEY    TO FIO-CMND
               PERFORM TAB-FIO-CAM
               IF NOT FIO-STAT-OKS
                  MOVE 'En TABLA CAM, no econtre valor paridad a hoy '
                  TO FIO-MENS
                  MOVE OPC-COD-VCOC TO FIO-MENS-FIL
                  GO TO PRG-ABT
               ELSE
                  MOVE CAM-SGV-VCAM IN CAM TO SCR-SGV-VCAM.

               COMPUTE WR-ENTERO ROUNDED = OPC-VAL-SCRE * SCR-SGV-VCAM.
               MOVE WR-ENTERO           TO OPC-VAL-SCRE.
       FIN-LEER-OPC.
           EXIT.
       PON-TOT-FRM SECTION.
       INI-PON-TOT-FRM.
           IF (SCR-INST NOT = SCR-INST-GAB)
               GO TO FIN-PON-TOT-FRM.

           MOVE FRM-LIN-DET(SCR-ULT-OPC) TO WR-FRM-LIN-DET
           IF (WR-FRM-CIC-IOPC     = SCR-COL-COP OR 
               WR-FRM-CIC-IOPC NOT > SPACES)
               MOVE SCR-VAL-DISP         TO WR-FRM-VAL-DISP
               MOVE SCR-VAL-UTLZ         TO WR-FRM-VAL-UTLZ
               MOVE 'Monto utilizado:'   TO WR-FRM-GLS-UTLZ
               MOVE 'Cupo disponible:'   TO WR-FRM-GLS-DISP
               MOVE WR-FRM-DISP          TO FRM-GLS-DISP
               MOVE WR-FRM-UTLZ          TO FRM-GLS-UTLZ
           ELSE
           IF (FRM-MEN2 NOT > SPACES)
               MOVE 'COL'                TO MSG-COD-SIST
               MOVE 'LDAEXIPAG'          TO MSG-COD-MENS
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC         TO FRM-MEN2
               MOVE SPACES               TO FRM-GLS-DISP
               MOVE SPACES               TO FRM-GLS-UTLZ.
       FIN-PON-TOT-FRM.
           EXIT.
      *Copia el modulo FIO asociado a la entidad RLO, OPC, DLC, ICG
       COPY TABBFCAM.
       COPY COLBFRLO.
       COPY COLBFOPC.
       COPY COLBFDLC.
       COPY COLBFICG.
       COPY SGCBFDBC.
       COPY GNSBGCPT.
       COPY GNSBGHOY.
      *>>>>
*% END
