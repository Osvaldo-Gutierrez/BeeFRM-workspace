       IDENTIFICATION DIVISION.
      *========================
       PROGRAM-ID.   GARPQGDG.
       AUTHOR.       CONSIST.
       DATE-WRITTEN. 09-Apr-96 05:35 PM.

      * NOMBRE PROGRAMA                   GARPQGDG
      * VERSION                           3.1
      * OPCION                            CON
      * ARCHIVO BASE                      GARGDG
      * PANTALLA                          GARGDG
      * INP/OUT                           DATACOM
      * TAMANO COMMAREA                   250




       ENVIRONMENT DIVISION.
      *=====================
       CONFIGURATION SECTION.
      *----------------------
       SPECIAL-NAMES.
               DECIMAL-POINT IS COMMA.

       DATA DIVISION.
      *==============

       WORKING-STORAGE SECTION.
      *------------------------
      * COPY GNSWGSCR.
       COPY GNSWCSCR.
      *PTC-INI
      *PTC-SUB
       COPY GNSWVSCR.
      *COPY GNSWV3CR.
      *PTC-FIN

      *<<<<  LDC_SI AND PGM_IBM AND FIN_SCR_VARI
       COPY LDCWGENG.
           03 SCR-CLF     VALUE SPACES            PIC X(64).
           03 SCR-LDC     VALUE SPACES            PIC X(100).
           03 SCR-ARG     VALUE SPACES            PIC X(50).
      *>>>>

      *<<<< CMAVARI
           03 CMA-VARI.
              05 SCR-IND-MGDD     VALUE SPACES      PIC X(01).
                 88 MULTIPLES-GDD      VALUE 'M'.
              05 DBC-KEY-IDBC.
                 07 DBC-CAI-ICLI  VALUE SPACES      PIC X(04).
                 07 DBC-IIC-ICLI  VALUE ZEROES      PIC 9(08).
              05 CMA-IND-KPAD     VALUE SPACES      PIC X(01).
              05 GAR-CLV-GDD-1.
                 07 GDD-CIC-ICLI  VALUE SPACES      PIC X(12).
                 07 GAR-CLV-GDD-2  VALUE SPACES      PIC X(12).
  
      *>>>>
      *<<<< FIN_SCR_VARI
              05 GAR-NUM-SIS      VALUE SPACES      PIC X(04).
              05 GAR-COD-CRR      VALUE ZEROES      PIC X(08).
              05 GAR-IND-CPL      VALUE SPACES      PIC X(01).
              05 GAR-IND-EXI-GAP  VALUE SPACES      PIC X(01).
              05 GAR-IND-VTO      VALUE SPACES      PIC X(01).
              05 GAR-PCT-PON      VALUE ZEROES      PIC S9(03)V9(02).
              05 GAR-PCT-AJT-SUP  VALUE ZEROES      PIC S9(03)V9(02).
              05 WSS-EST-ANT      VALUE SPACES      PIC X(02).
              05 WSS-ES1-1        VALUE SPACES      PIC X(02).
              05 WSS-ES1-2        VALUE SPACES      PIC X(02).
              05 WSS-ES1-3        VALUE SPACES      PIC X(02).
              05 WSS-ES1-4        VALUE SPACES      PIC X(02).
              05 CMA-IND-DAP      VALUE SPACES      PIC X(01).
              05 FRM-CAI-IOPD     VALUE SPACES      PIC X(04).
              05 FRM-IIC-IOPD     VALUE ZEROES      PIC X(08).
              05 SCR-IND-V001     VALUE SPACES      PIC X(01).
              05 CMA-GLS-DISP     VALUE SPACES      PIC X(13).
      *>>>>
       COPY GARWIGDG.

       COPY GARBRGDG.


       COPY GNSWVIDD.
       COPY GNSWGRQA.
       COPY GNSWGUIB.
       COPY GNSWGELS.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-GDG-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-TAB-REQA==.
       COPY GNSBRTAB.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-MSC-REQA==.
       COPY GNSBRMSC.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-MSG-REQA==.
       COPY GNSBRMSG.
       COPY GNSWCFIO.
       COPY GNSWVFIO.
      *PTC-INI
      *PTC-SUB
       COPY GNSWGFRM.
      *COPY GNSWG3CF.
      *PTC-FIN
       COPY GNSWVNUM.
       COPY GNSWCNUM.
       COPY GNSWGFEC.
       COPY GNSWGHOY.
       COPY GNSWCVRF.
       COPY GNSWVVRF.
       COPY GNSWGIDC.
       COPY GNSWGSYS.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-OFI-REQA==.
       COPY TABBROFI.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-USR-REQA==.
       COPY TABBRUSR.

      *PTC ini
       COPY GNSWGQUE.
      *PTC fin
      *<<<< LDC_SI AND PGM_IBM AND WSS 

       COPY LDCWGPMP.

      *>>>> WSS 

      *<<<< WSS
      *<<<< WSS
       01  PGM-VAR-ADIC.
           03 PGM-STAT-ADIC.
              05 PGM-STAT-GDD.
                 88 PGM-STAT-GDD-NUL VALUE '  '.
                 07 PGM-STT1-GDD        VALUE '2' PIC X(01).
                    88 PGM-STAT-GDD-OKS VALUE '0'.
                 07 PGM-STT2-GDD        VALUE '3' PIC X(01).
       01  WSS-BUS-VARI.
           03 WSS-IBUS                 VALUE 0      PIC 9(01).
           03 WSS-IBUS-GDG           VALUE 0      PIC 9(01).
       01  WSS-GDD-VARI.
              03 WSS-MGDD              VALUE 0      PIC 9(01).
                 88 WSS-MISMO-GDD      VALUE 0.
                 88 WSS-OTRO-GDD       VALUE 1.
                 88 WSS-PRIMER-GDD     VALUE 2.
              03 WSS-MISMO               VALUE 0    PIC 9(01).
              03 WSS-OTRO                VALUE 1    PIC 9(01).
              03 WSS-PRIMER              VALUE 2    PIC 9(01).
       COPY SGCBRDBC.
       COPY GARBRGDD.
      *<<<< PGM_PU OR NOT NO_CIC_PQ
       COPY GNSBRCIC.
       COPY GNSWGCIC.
      *<<<< PGM_DTC
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-CIC-REQA==.
      *>>>>
      *>>>>
      *<<<< UNS_FLD
       COPY GNSWGCPT.
       COPY GNSWGSTR.
      *>>>>
      *<<<< PGM_DTC
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-GDD-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-DBC-REQA==.
      *>>>>
      *>>>>
       01  WSS-VARI.
           03  WSS-IND-EXI-GDO                      PIC X(01).
      *RVM-CST-INI 1-APR-1996
           03  WSS-ALZ-DAP       VALUE SPACES       PIC X(01).
      *RVM-CST-FIN 1-APR-1996
      *<<<< PGM_CHI
       COPY GARWGDAP.

       COPY DAPBROPD.
       COPY DAPBRRCC.
      *<<<< PGM_DTC
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-OPD-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-RCC-REQA==.
      *>>>>
      *>>>>
      *<<<< PGM_VMS OR PGM_DTC
       COPY GARBRGMO.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-GMO-REQA==.
       COPY GARBRTAG.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-TAG-REQA==.
       COPY GARBRGDO.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-GDO-REQA==.
      *>>>>
      *<<<< PGM_CHI
           COPY USPC113.
      *>>>>
      *>>>>


       01  PGM-VARI.
           03 PGM-ICLR                  VALUE ' '       PIC X(01).
           03 PGM-LIMPIAR-TODO          VALUE ' '       PIC X(01).
           03 PGM-LIMPIAR-LLAVES        VALUE 'K'       PIC X(01).
           03 PGM-LIMPIAR-CAMPOS        VALUE 'F'       PIC X(01).
           03 PGM-NO-LIMPIAR-NADA       VALUE 'N'       PIC X(01).
           03 PGM-PROG                                  PIC X(08).
           03 PGM-NTRN                                  PIC X(04).
           03 PGM-STAT.
              05 PGM-STAT-GDG.
                 88 PGM-STAT-GDG-NUL    VALUE '  '.
                 07 PGM-STT1-GDG        VALUE '2' PIC X(01).
                    88 PGM-STAT-GDG-OKS VALUE '0'.
                 07 PGM-STT2-GDG        VALUE '3' PIC X(01).
              05 PGM-STAT-DBC.
                 88 PGM-STAT-DBC-NUL    VALUE '  '.
                 07 PGM-STT1-DBC        VALUE '2' PIC X(01).
                    88 PGM-STAT-DBC-OKS VALUE '0'.
                 07 PGM-STT2-DBC        VALUE '3' PIC X(01).

           03 PGM-SRNF                  VALUE '23'      PIC X(02).
           03 PGM-SOKS                  VALUE '00'      PIC X(02).
           03 PGM-SNUL                  VALUE '  '      PIC X(02).
           03 PGM-SUAR                  VALUE SPACES    PIC X(15).

       LINKAGE SECTION.
      *----------------
       01  DFHCOMMAREA.
           02 FILLER                    PIC X(850).
       COPY GNSLGFIO.

       PROCEDURE DIVISION.
      *===================

       MAIN SECTION.
       INI-MAIN.
           PERFORM INI.
       LUP-MAIN.
           IF SCR-INST = SCR-INST-HCM
                 PERFORM SCR-COM.
           IF SCR-CCPP = 'MOD'
                 PERFORM SCR-MOD
           ELSE
           IF SCR-CCPP = 'ING'
                 PERFORM SCR-ING
           ELSE
           IF SCR-CCPP = 'ACC'
                 PERFORM SCR-ACC
           ELSE
           IF SCR-CCPP = 'ELI'
                 PERFORM SCR-ELI
           ELSE
                 MOVE SCR-INST-HCM TO SCR-INST.

           GO TO LUP-MAIN.
       FIN-MAIN.
           EXIT.

       INI SECTION.
       INI-INI.
       COPY GNSBGEIB.

       COPY GNSBGEDB.
           MOVE LOW-VALUES TO GDG-FLD.
           MOVE LOW-VALUES TO GDG-EDT.

           PERFORM GNS-PRO-RCK.
           PERFORM GNS-BUS-VCA.

           MOVE +850 TO SCR-TCMA.
           PERFORM GNS-HDL-SYS.
           PERFORM GNS-HDL-FRM.
           MOVE 'GARPQGDG' TO FIO-PROG.
           PERFORM GNS-BUS-IDD.

      *<<<< INI_FIO
      *PTC ini
           PERFORM GNS-ERR-QUE.
      *PTC fin
      *<<<< INI_FIO
           IF SCR-CMND = 'ALZ'
               MOVE 'GAR'       TO FIO-SIST
               MOVE 'VSN '      TO TAB-COD-TTAB IN TAB
               MOVE 'ALZDAPESP' TO TAB-COD-CTAB IN TAB
               MOVE FIO-GET-KEY TO FIO-CMND
               PERFORM GNS-FIO-TAB
               IF FIO-STAT-OKS
                   MOVE TAB-IND-VIGE IN TAB TO WSS-ALZ-DAP IN WSS-VARI
               ELSE
                   MOVE 'N' TO WSS-ALZ-DAP IN WSS-VARI.
      *>>>>
      *<<<< LDC_SI AND PGM_IBM AND INI_FIO AND PGM_BMS
      *<<<< ISP-INI  24-JAN-1996 11:35:48 
           IF SCR-OFRM-SRV
              MOVE WSS-IDX-IGDG TO SCR-IPRO
           ELSE
      *<<<< ISP-FIN  24-JAN-1996 11:35:48 
           IF SCR-DESDE-CMN
               MOVE SPACES TO SCR-VEC-ENG
               MOVE 1 TO SCR-IPRO
               GO TO FIN-INI-FIO.
           IF SCR-INST-EXT = WSS-INST-FPEN-CIC
               MOVE WSS-INST-NULL TO SCR-INST-EXT
               MOVE 'GNS' TO MSG-COD-SIST
               MOVE 'FLDING' TO MSG-COD-MENS
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO SCR-MENS-EXT
               PERFORM ING-FPEN-CIC.
       FIN-INI-FIO.
      *>>>>

       FIN-INI.
           EXIT.

       COPY GNSBHSYS.
       COPY GNSBHFRM.
       COPY GNSBPRCK.
       COPY GNSBBVCA.
       COPY GNSBBIDD.

       SCR-COM SECTION.
       INI-SCR-COM.

           MOVE FRM-CPSF-AEY TO FRM-CPIM-AEY.
           PERFORM PRO-ALL.
           PERFORM SCR-CLRA-GDG.
           PERFORM EDT-KEY-GDG.
           PERFORM EDT-FLD-GDG.
           PERFORM SCR-PUTA.
           MOVE SCR-INST-HCM TO SCR-INST.
           MOVE SCR-CMNP     TO SYS-PROG.
           MOVE SCR-VARI     TO SYS-CMMA.
           MOVE SCR-TCMA     TO SYS-TCMA.
           MOVE SYS-XCTL     TO SYS-CMND.
           PERFORM GNS-PRO-SYS.
       XCT-ERR.
           MOVE 'XCTERR    ' TO MSG-COD-MENS.
           MOVE 'GNS'        TO MSG-COD-SIST.
           PERFORM GET-MSG.
           MOVE MSG-GLS-DESC TO SYS-MEN1.
           MOVE SYS-PROG     TO SYS-MEN2.
           MOVE SYS-ABOR     TO SYS-CMND.
           PERFORM GNS-PRO-SYS.
       COPY GNSBGGBK.
       FIN-SCR-COM.
           EXIT.

       SCR-MOD SECTION.
       INI-SCR-MOD.

           IF SCR-INST = SCR-INST-HKY
               PERFORM HBL-KEY
               MOVE SCR-INST-GKY TO SCR-INST
               PERFORM SCR-DMSG
           ELSE
           IF SCR-INST = SCR-INST-GKY
                PERFORM SCR-KEY
                IF SCR-STAT NOT = SCR-STAT-ABT
                        PERFORM SCR-TRL
                ELSE
                        PERFORM DESSCRTRL
                        GO TO FIN-SCR-MOD
           ELSE
           IF SCR-INST = SCR-INST-GAB
                PERFORM GET-CON
           ELSE
           IF SCR-INST = SCR-INST-BRW
               MOVE SCR-FFLD TO FRM-FFLD
               PERFORM BRW-SCR-MOD.
           PERFORM DESSCRTRL.
      *<<<< PFS_SCR_MOD
           IF ( FRM-FFLD = FRM-FFLD-PF5 OR FRM-FFLD-PF6 OR
                           FRM-FFLD-PF7 OR FRM-FFLD-PF8 ) AND
              SCR-STAT = SCR-STAT-CON
               PERFORM VAL-NUM-KEY-GDG
               PERFORM VAL-NUM-FLD-GDG.
           IF FRM-FFLD = FRM-FFLD-PF5 OR FRM-FFLD-PF6 OR
                         FRM-FFLD-PF7 OR FRM-FFLD-PF8
               PERFORM RST-STAT
               PERFORM FND-SCR-KEY THRU FIN-SCR-KEY
               IF SCR-STAT NOT = SCR-STAT-ABT
                   PERFORM SCR-TRL
               ELSE
                   PERFORM DESSCRTRL
                   GO TO FIN-SCR-MOD.
      *>>>>

       MSG-SCR-MOD.
           MOVE SPACES TO FRM-MENS.
           PERFORM SCR-MSSG.
       FIN-SCR-MOD.

           EXIT.

       BRW-SCR-MOD SECTION.
       INI-BRW-SCR-MOD.

       FIN-BRW-SCR-MOD.
           EXIT.

       SCR-ING SECTION.
       INI-SCR-ING.

           IF SCR-INST = SCR-INST-HKY
               PERFORM HBL-IKY
               MOVE SCR-INST-GKY TO SCR-INST
      *PTC-INI
               IF NOT SCR-OFRM-SRV
                   PERFORM SCR-DMSG
               ELSE
                   PERFORM SCR-PUTA
      *PTC-FIN
           ELSE
           IF SCR-INST = SCR-INST-GKY
                PERFORM SCR-RST
                PERFORM GET-IKY
                IF NOT FRM-STAT-ABT
                        MOVE SPACES TO FRM-MENS
                        PERFORM FND-KEY
                        IF NOT FIO-STAT-OKS AND
                           FIO-STAT NOT = FIO-STAT-NEX
      *JSS                  PERFORM CLR-FLD-GDG
                            MOVE PGM-LIMPIAR-TODO TO PGM-ICLR
                            PERFORM SCR-TRL
                        ELSE
      *PTC-INI
                        MOVE 'S' TO SCR-IERR
      *PTC-FIN
                        MOVE PGM-LIMPIAR-CAMPOS TO PGM-ICLR
                        IF FRM-MENS NOT > SPACES
                            MOVE 'REGEXI    ' TO MSG-COD-MENS
                            MOVE 'GNS' TO MSG-COD-SIST
                            PERFORM GET-MSG
                            MOVE MSG-GLS-DESC TO FRM-MENS
                            PERFORM SCR-MSSG
                            MOVE SCR-STAT-ABT TO SCR-STAT
                            PERFORM DESSCRTRL
                            GO TO FIN-SCR-ING
                        ELSE
                            PERFORM SCR-MSSG
                            MOVE SCR-STAT-ABT TO SCR-STAT
                            PERFORM DESSCRTRL
                            GO TO FIN-SCR-ING
                ELSE
                        MOVE SPACES TO FRM-MENS
                        PERFORM SCR-MSSG
                        PERFORM DESSCRTRL
                        GO TO FIN-SCR-ING
           ELSE
           IF SCR-INST = SCR-INST-GAB
                PERFORM GET-CON.
           PERFORM DESSCRTRL.

       MSG-SCR-ING.
           MOVE SPACES TO FRM-MENS.
           PERFORM SCR-MSSG.
       FIN-SCR-ING.

           EXIT.

       SCR-ACC SECTION.
       INI-SCR-ACC.

           IF SCR-INST = SCR-INST-HKY
               PERFORM HBL-KEY
               MOVE SCR-INST-GKY TO SCR-INST
               PERFORM SCR-DMSG
           ELSE
           IF SCR-INST = SCR-INST-GKY
                PERFORM SCR-KEY
                IF SCR-STAT NOT = SCR-STAT-ABT
                        PERFORM SCR-TRL
                ELSE
                        PERFORM DESSCRTRL
                        GO TO FIN-SCR-ACC
           ELSE
           IF SCR-INST = SCR-INST-GAB
                PERFORM GET-CON
           ELSE
           IF SCR-INST = SCR-INST-BRW
               MOVE SCR-FFLD TO FRM-FFLD
               PERFORM BRW-SCR-ACC.
           PERFORM DESSCRTRL.
      *<<<< PFS_SCR_ACC
           IF FRM-FFLD = FRM-FFLD-PF5 OR FRM-FFLD-PF6 OR
                         FRM-FFLD-PF7 OR FRM-FFLD-PF8
               PERFORM VAL-NUM-KEY-GDG
               PERFORM VAL-NUM-FLD-GDG
               PERFORM RST-STAT
               PERFORM FND-SCR-KEY THRU FIN-SCR-KEY
               IF SCR-STAT NOT = SCR-STAT-ABT
                   PERFORM SCR-TRL
               ELSE
                   PERFORM DESSCRTRL
                   GO TO FIN-SCR-ACC.
      *>>>>

           MOVE SPACES TO FRM-MENS.
           PERFORM SCR-MSSG.
       FIN-SCR-ACC.

           EXIT.

       BRW-SCR-ACC SECTION.
       INI-BRW-SCR-ACC.

       FIN-BRW-SCR-ACC.
           EXIT.

       SCR-ELI SECTION.
       INI-SCR-ELI.

           IF SCR-INST = SCR-INST-HKY
               PERFORM HBL-KEY
               MOVE SCR-INST-GKY TO SCR-INST
               PERFORM SCR-DMSG
           ELSE
           IF SCR-INST = SCR-INST-GKY
                PERFORM SCR-KEY
                IF SCR-STAT NOT = SCR-STAT-ABT
                        PERFORM SCR-TRL
                ELSE
                        PERFORM DESSCRTRL
                        GO TO FIN-SCR-ELI
           ELSE
           IF SCR-INST = SCR-INST-GAB
                PERFORM GET-CON
           ELSE
           IF SCR-INST = SCR-INST-BRW
               MOVE SCR-FFLD TO FRM-FFLD
               PERFORM BRW-SCR-ELI.
           PERFORM DESSCRTRL.
      *<<<< PFS_SCR_ELI
           IF FRM-FFLD = FRM-FFLD-PF5 OR FRM-FFLD-PF6 OR
                         FRM-FFLD-PF7 OR FRM-FFLD-PF8
               PERFORM VAL-NUM-KEY-GDG
               PERFORM VAL-NUM-FLD-GDG
               PERFORM RST-STAT
               PERFORM FND-SCR-KEY THRU FIN-SCR-KEY
               IF SCR-STAT NOT = SCR-STAT-ABT
                   PERFORM SCR-TRL
               ELSE
                   PERFORM DESSCRTRL
                   GO TO FIN-SCR-ELI.
      *>>>>

           MOVE SPACES TO FRM-MENS.
           PERFORM SCR-MSSG.
       FIN-SCR-ELI.

           EXIT.

       BRW-SCR-ELI SECTION.
       INI-BRW-SCR-ELI.

       FIN-BRW-SCR-ELI.
           EXIT.



       SCR-DMSG SECTION.
       INI-SCR-DMSG.
           IF PGM-ICLR = PGM-NO-LIMPIAR-NADA
               NEXT SENTENCE
           ELSE
           IF PGM-ICLR = PGM-LIMPIAR-TODO
               PERFORM SCR-CLRA-GDG
               PERFORM EDT-KEY-GDG
               PERFORM EDT-FLD-GDG
           ELSE
           IF PGM-ICLR = PGM-LIMPIAR-LLAVES
               PERFORM CLR-KEY-GDG
               PERFORM EDT-KEY-GDG
           ELSE
               PERFORM CLR-FLD-GDG
               PERFORM EDT-FLD-GDG.
           PERFORM SCR-PUTA.
           PERFORM SCR-EXIT.
       FIN-SCR-DMSG.
           EXIT.

       SCR-KEY SECTION.
       INI-SCR-KEY.
           PERFORM SCR-RST.
           PERFORM GET-KEY.
           IF FRM-STAT-ABT
                   MOVE SPACES TO FRM-MENS
                   PERFORM SCR-MSSG
                   GO TO FIN-SCR-KEY.
       FND-SCR-KEY.
           MOVE SPACES TO FRM-MENS.
           PERFORM FND-KEY.
           IF FIO-STAT-OKS
               PERFORM PUT-SCR
               MOVE PGM-LIMPIAR-TODO TO PGM-ICLR
               GO TO FIN-SCR-KEY.
      *JSS ELSE
      *        PERFORM CLR-FLD-GDG.
       ERR-SCR-KEY.
      *PTC-INI
           MOVE 'S' TO SCR-IERR.
      *PTC-FIN
           MOVE PGM-LIMPIAR-CAMPOS TO PGM-ICLR.
           IF FRM-MENS NOT > SPACES
               IF FIO-STAT-EOF
                   MOVE 'REGEOF    ' TO MSG-COD-MENS
                   MOVE 'GNS' TO MSG-COD-SIST
                   PERFORM GET-MSG
                   MOVE MSG-GLS-DESC TO FRM-MENS
               ELSE
               IF FIO-STAT = FIO-STAT-NEX
                   MOVE 'REGNEX    ' TO MSG-COD-MENS
                   MOVE 'GNS' TO MSG-COD-SIST
                   PERFORM GET-MSG
                   MOVE MSG-GLS-DESC TO FRM-MENS
               ELSE
                   MOVE 'FIOSTAT' TO MSG-COD-TMSG
                   MOVE FIO-STAT  TO MSG-COD-CMSG
                   MOVE 'GNS'     TO MSG-COD-SIST
                   PERFORM GET-MSG
                   MOVE MSG-GLS-DESC TO FRM-MENS.
           PERFORM SCR-MSSG.
           MOVE SCR-STAT-ABT TO SCR-STAT.
       FIN-SCR-KEY.
           EXIT.

       SCR-RST SECTION.
       INI-SCR-RST.
           MOVE SPACES       TO PGM-ICLR.
           MOVE SPACES       TO SCR-ACTU.
           MOVE SCR-STPP     TO SCR-STAT.
           MOVE SCR-MFLD-NOT TO SCR-MFLD.
           MOVE LOW-VALUES   TO GDG-FLD.

       FIN-SCR-RST.
           EXIT.

       GET-KEY SECTION.
       INI-GET-KEY.

           PERFORM SCR-GKEY.
           IF FRM-STAT-ABT
               MOVE SCR-STAT-ABT TO SCR-STAT.
       FIN-GET-KEY.
           EXIT.

       GET-IKY SECTION.
       INI-GET-IKY.

           PERFORM SCR-GIKY.
           IF FRM-STAT-ABT
               MOVE SCR-STAT-ABT TO SCR-STAT.
       FIN-GET-IKY.
           EXIT.

       FND-KEY SECTION.
       INI-FND-KEY.

      *<<<< INGFNDKEY
      * CODIGO AGREGADO PARA M:N
           IF SCR-CCPP = 'ING' 
               IF GDG-COD-CRR IN GDG-FLD > ZEROES
                   MOVE 1 TO WSS-IBUS-GDG
                   MOVE GDG-NUM-SIS IN GDG-FLD TO
                        GAR-NUM-SIS IN GDG
                   MOVE GDG-COD-CRR IN GDG-FLD TO
                        GAR-COD-CRR IN GDG
                   MOVE FIO-GET-KEY TO FIO-CMND
                   PERFORM GAR-FIO-GDG
                   IF FIO-STAT-OKS
      *<<<< NOT ING_SBR_HIJ
      *            se encontro el hijo : error
      *            no ingresa sobre el hijo encontrado
                       MOVE '00' TO PGM-STAT-GDG
                       MOVE 'GDG    EXT' TO MSG-COD-MENS
                       GO TO ERR-FND-KEY
                   ELSE
                       MOVE '23' TO FIO-STAT
                       GO TO FIN-FND-KEY
      *>>>>
               ELSE
                   PERFORM FND-DIRECTO
                   GO TO FIN-FND-KEY.    
      * CODIGO AGREGADO PARA M:N

      *>>>>
      *<<<< BUSNXTPRV
           MOVE SPACES TO MSG-COD-MENS.
           MOVE 0 TO WSS-IBUS.
           MOVE 0 TO WSS-IBUS-GDG.
           MOVE '23' TO PGM-STAT-GDD.

           IF ( FRM-FFLD = FRM-FFLD-PF6 OR FRM-FFLD-PF5 ) AND
              GAR-CLV-GDD-2 IN CMA-VARI > SPACES
               PERFORM LEE-NXT-PRV-XGDD
               IF WSS-IBUS = 3
                   PERFORM SCR-CLRA-GDG
                   GO TO EXA-COM-STAT
               ELSE
                   MOVE PGM-SNUL TO PGM-STAT-GDG
                   MOVE PGM-SNUL TO PGM-STAT-DBC
                   IF FRM-FFLD = FRM-FFLD-PF5
                       MOVE 'GDD    NOPRV' TO MSG-COD-MENS
                       GO TO ERR-FND-KEY
                   ELSE
                       MOVE 'GDD    NONXT' TO MSG-COD-MENS
                       GO TO ERR-FND-KEY
           ELSE
           IF FRM-FFLD = FRM-FFLD-PF6 OR FRM-FFLD-PF5
               MOVE 'GDD    NEX' TO MSG-COD-MENS
               GO TO ERR-FND-KEY.

           IF FRM-FFLD = FRM-FFLD-PF8 
              OR FRM-FFLD-PF7
               PERFORM LEE-NXT-PRV-XDBC
               IF WSS-IBUS = 1
                   GO TO CON-BUS-DBC
               ELSE
                   MOVE PGM-SNUL TO PGM-STAT-GDG
                   MOVE PGM-SNUL TO PGM-STAT-DBC
                   IF FRM-FFLD = FRM-FFLD-PF7
                       MOVE 'DBC    NOPRV' TO MSG-COD-MENS
                       GO TO ERR-FND-KEY
                   ELSE
                       MOVE 'DBC    NONXT' TO MSG-COD-MENS
                       GO TO ERR-FND-KEY.
      *>>>>
      *<<<< FNDIRECTO
           IF GDG-COD-CRR IN GDG-FLD > ZEROES AND
              DBC-NUM-ICLI IN GDG-FLD = ZEROES AND
              DBC-GLS-NOMC IN GDG-FLD NOT > SPACES
      *       se digito lo necesario para buscar directo
      * Buscara Cliente por medio de NOM cuando PF7 O PF8
               MOVE 'N' TO CMA-IND-KPAD IN CMA-VARI
               PERFORM FND-DIRECTO
               IF FIO-STAT-OKS
                   MOVE 2 TO WSS-IBUS
      *            para buscar RPH y PAD
                   PERFORM GET-CUR-GDD
                   IF FIO-STAT-OKS
                       MOVE 3 TO WSS-IBUS
                       MOVE GDD-CIC-ICLI IN GDD TO
                            DBC-KEY-IDBC IN DBC
                        MOVE FIO-GET-KEY TO FIO-CMND
                        PERFORM SGC-FIO-DBC
                        MOVE FIO-STAT TO PGM-STAT-DBC
                        IF FIO-STAT-OKS
                            GO TO EXA-COM-STAT
                        ELSE
                            MOVE 'GDD    NODBC' TO MSG-COD-MENS
                            GO TO EXA-COM-STAT 
                   ELSE
                       MOVE 'GDD    NEX' TO MSG-COD-MENS
                       GO TO EXA-COM-STAT
               ELSE
                   MOVE SPACES TO GAR-CLV-GDD-2 IN CMA-VARI
                   MOVE SPACES TO GDD-CIC-ICLI IN CMA-VARI
                   MOVE SPACES TO DBC-KEY-IDBC IN CMA-VARI
                   MOVE 'GDG    NEX' TO MSG-COD-MENS
                   GO TO ERR-FND-KEY.

      *>>>>
      *<<<< BUSPADHIJ

      *FLB CST  4-MAY-1994 
           MOVE SPACES TO GAR-CLV-GDD-2 IN CMA-VARI.
           MOVE SPACES TO GDD-CIC-ICLI IN CMA-VARI.
           MOVE SPACES TO DBC-KEY-IDBC IN CMA-VARI.

      *    pudo haberse digitadp el campo llave del hijo o no
      *    busca el padre por alguna de las llaves (la digitada)
           IF DBC-NUM-ICLI IN GDG-FLD NOT = ZEROES
      *IDC-CLI Busca Cliente por medio de IdC
      *IDC-CLI lo busco y valido al leer llaves
               MOVE 'I' TO CMA-IND-KPAD IN CMA-VARI
               MOVE 1 TO WSS-IBUS
               GO TO CON-BUS-DBC.
           IF DBC-GLS-NOMC IN GDG-FLD > SPACES
      *NOM-CLI Busca Cliente por medio del Nombre
               MOVE 'N' TO CMA-IND-KPAD IN CMA-VARI
      *<<<< UNS_FLD
               MOVE DBC-GLS-NOMC IN GDG-FLD TO STR-GLS-GSTR
               PERFORM STR-UNS
               MOVE STR-GLS-FUNS IN STR-VARI(1) TO 
                    DBC-GLS-APAT IN DBC
               MOVE STR-GLS-FUNS IN STR-VARI(2) TO 
                    DBC-GLS-AMAT IN DBC
               MOVE STR-GLS-FUNS IN STR-VARI(3) TO 
                    DBC-GLS-NOMB IN DBC
      *>>>>
               MOVE 'DBC-GLS-NOMC'   TO FIO-AKEY
               MOVE FIO-GET-NLS TO FIO-CMND
               PERFORM GET-CLI
               IF MSG-COD-MENS NOT > SPACES
                   MOVE 1 TO WSS-IBUS.

      * SI SE PROCESA SUBENTIDAD, LA BUSQUEDA POR LLAVE ALTERNATIVA
      *  DEBE SER UN PARRAFO CON LOOP

           IF WSS-IBUS = 0
               MOVE 'DBC    NEX' TO MSG-COD-MENS
               GO TO ERR-FND-KEY.

       CON-BUS-DBC.
      *    se encontro el padre y busca el GDG
           MOVE '00' TO PGM-STAT-DBC.

      * Para permitir Ant/Sig aunque padre no tenga operaciones
           MOVE DBC-KEY-IDBC IN DBC TO DBC-KEY-IDBC IN CMA-VARI.

      *    se digito tambien el hijo, se busca directamente GDD
           IF GDG-COD-CRR IN GDG-FLD > ZEROES AND
              NOT (FRM-FFLD = FRM-FFLD-PF8 OR FRM-FFLD-PF7)
      *        Buscara Cliente por medio de NOM cuando PF7 O PF8
               MOVE 'N' TO CMA-IND-KPAD IN CMA-VARI
               PERFORM GET-GDD
               IF WSS-IBUS = 1
                   MOVE 'GDD    NEX' TO MSG-COD-MENS
                   GO TO ERR-FND-KEY
               ELSE
               IF WSS-IBUS = 2
                   MOVE 'GDG    NEX' TO MSG-COD-MENS
                   GO TO ERR-FND-KEY
               ELSE
      *            se encontro el hijo
                   GO TO EXA-COM-STAT
           ELSE
      *    no se digito el hijo, se busca el ultimo
               PERFORM BUS-ULT-GDG
               IF WSS-IBUS = 3
      *            se encontro el hijo
                   GO TO EXA-COM-STAT
               ELSE
                   MOVE 'GDD    NEX' TO MSG-COD-MENS
                   GO TO ERR-FND-KEY.

       FND-DIRECTO.
           MOVE 1 TO WSS-IBUS-GDG.

      *>>>>
           PERFORM KEY-ALL-GDG.

           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM GAR-FIO-GDG.
           MOVE FIO-STAT TO PGM-STAT-GDG.

      *<<<< FINFNDKEY

       EXA-COM-STAT.
      *<<<< NOT PGM_VMS
           MOVE GDG-FEC-ULT-ACT IN GDG TO SCR-UMOD.
      *     MOVE GDG-HOR-ACT IN GDG TO SCR-UMOD-HOR.
      *>>>>

           IF WSS-IBUS = 2 OR 3
      *        se encontro el hijo
      *<<<< PGM_HIJ
               MOVE '00' TO PGM-STAT-GDG
      *>>>>
      *FLB CST 20-09-1993
      *        MOVE GAR-CLV-GDD-2 IN GDD TO GAR-CLV-GDD-2 IN CMA-VARI.
               MOVE GAR-CLV-GDG-1 IN GDG TO GAR-CLV-GDD-2 IN CMA-VARI.

           IF WSS-IBUS = 3
      *        se encontro la relacion completa
               MOVE '00' TO PGM-STAT-GDD
               MOVE GDD-CIC-ICLI IN GDD TO GDD-CIC-ICLI IN CMA-VARI
               MOVE '00' TO PGM-STAT-DBC
               MOVE GDD-CIC-ICLI IN GDD TO DBC-KEY-IDBC IN CMA-VARI
           ELSE
      *       GDG incompleto
               MOVE '23' TO PGM-STAT-GDD
               MOVE '23' TO PGM-STAT-DBC
      *FLB CST 20-09-1993
      *        MOVE SPACES TO GDD-CIC-ICLI IN CMA-VARI
      *        MOVE SPACES TO DBC-KEY-IDBC IN CMA-VARI
               MOVE SPACES TO DBC-CAI-ICLI IN CMA-VARI
               MOVE ZEROES TO DBC-IIC-ICLI IN CMA-VARI
               MOVE DBC-KEY-IDBC IN CMA-VARI TO GDD-CIC-ICLI IN CMA-VARI
      *FLB CST 20-09-1993
               GO TO ANL-GDG.

      * Determina si tiene multiples padres para comando consulta
           IF NOT ( SCR-CCPP = 'ACC' AND SCR-STAT = SCR-STAT-CON )
               GO TO ANL-GDG.

           MOVE SPACES TO MSG-COD-SIST.
           MOVE SPACES TO MSG-COD-MENS.

      * Se posiciona por la llave del hijo
           MOVE 'GAR-CLV-GDD-2' TO FIO-AKEY.
           MOVE FIO-GET-NLS TO FIO-CMND.
           PERFORM GAR-FIO-GDD.

      *    Busca siguiente por la llave del hijo
           MOVE 'GAR-CLV-GDD-2' TO FIO-AKEY.
           MOVE FIO-GET-NXT TO FIO-CMND.

           PERFORM GAR-FIO-GDD.
           IF FIO-STAT-OKS AND
              GAR-CLV-GDG-1  IN GDG = GAR-CLV-GDD-2  IN GDD
                MOVE 'M' TO SCR-IND-MGDD
      *<<<< NOT MUL_FLD
      *<<<< MUL_MSG
                MOVE 'GAR'      TO MSG-COD-SIST
                MOVE 'GDGMDDIR' TO MSG-COD-MENS
                PERFORM GET-MSG
                MOVE MSG-GLS-DESC TO FRM-MEN2
      *>>>>
      *>>>>
           ELSE
                MOVE SPACES TO SCR-IND-MGDD.

           IF FIO-STAT-OKS
               MOVE 'GAR-CLV-GDD-2' TO FIO-AKEY
               MOVE FIO-END-BRW TO FIO-CMND
               PERFORM GAR-FIO-GDD.

           MOVE GDD-CIC-ICLI IN CMA-VARI TO GDD-CIC-ICLI IN GDD.
           MOVE GAR-CLV-GDD-2 IN CMA-VARI TO GAR-CLV-GDD-2 IN GDD.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM GAR-FIO-GDD.

       ANL-GDG.
       FIN-ANL-GDG.
           MOVE PGM-STAT-GDG TO FIO-STAT. 

      *>>>>
      *<<<< EXACMNSTA
      * EXAMINA STATUS DE REGISTRO

           IF SCR-CCPP = 'ACC' AND SCR-STPP = SCR-STAT-CON
               GO TO FIN-FND-KEY.

      *<<<< EXA_CMN_ACC
      *<<<< PGM_CHI
      *FLB CST  10-NOV-1993 VALIDA USR CONTRA OFICINA
           IF SCR-CCPP = 'ACC' AND SCR-STAT = SCR-STAT-CON
               GO TO FIN-VAL-OFI-USP-GDG.

           MOVE 'TAB'          TO FIO-SIST.
           MOVE 'VSN'          TO TAB-COD-TTAB IN TAB.
           MOVE 'OFIUSP'       TO TAB-COD-CTAB IN TAB.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM GNS-FIO-TAB.
           IF NOT ( FIO-STAT-OKS AND TAB-MSC-STAT IN TAB = 'S' )
               GO TO FIN-VAL-OFI-USP-GDG.
           COPY USPC143.
           IF USP-COD-OFICINA NOT = GAR-COD-OFI IN GDG 
               MOVE 'USRNODEOFI' TO MSG-COD-MENS
               GO TO ERR-FND-KEY.

       FIN-VAL-OFI-USP-GDG.
           MOVE PGM-STAT-GDG TO FIO-STAT. 
      *FLB CST  10-NOV-1993 VALIDA USR CONTRA OFICINA

      *>>>>
      * Garantia Alzada
           IF GAR-ES1 IN GDG > '19'
               MOVE 'GDGALZ' TO MSG-COD-MENS
               GO TO ERR-FND-KEY.
      *>>>>

           IF SCR-CMND = 'AGA'
               MOVE SCR-STAT-SON TO SCR-STAT.

           IF GDG-MSC-STAT IN GDG = 'E'
               MOVE 'GDG   EXTING' TO MSG-COD-MENS
               GO TO ERR-FND-KEY.

           IF GDG-MSC-STAT IN GDG = 'A' AND SCR-CMND = 'MGA'
           OR GDG-MSC-STAT IN GDG = 'A' AND SCR-CMND = 'ALZ'
           OR GDG-MSC-STAT IN GDG = 'A' AND SCR-CMND = 'EJE'
                   GO TO FIN-FND-KEY.

           IF GDG-MSC-STAT IN GDG = 'A'
               MOVE 'GDG    AGAYA' TO MSG-COD-MENS
               GO TO ERR-FND-KEY.

           IF GDG-MSC-STAT IN GDG = 'I' AND SCR-CMND = 'MOD'
           OR GDG-MSC-STAT IN GDG = 'I' AND SCR-CMND = 'AGA'
           OR GDG-MSC-STAT IN GDG = 'I' AND SCR-CCPP = 'ELI'

                   GO TO FIN-FND-KEY.

           IF GDG-MSC-STAT IN GDG = 'I'
               MOVE 'GDG    NOAGA' TO MSG-COD-MENS
               GO TO ERR-FND-KEY.

           IF GDG-MSC-STAT IN GDG = 'E'
               MOVE 'GDG    EXTGD' TO MSG-COD-MENS
           ELSE
               MOVE 'GDG    NOEST' TO MSG-COD-MENS.

      *>>>>
      *<<<< ERRFNDKEY
       ERR-FND-KEY.
           IF WSS-IBUS = 0 AND WSS-IBUS-GDG = 0
      *        busco por padre y no encontro padre
               MOVE SPACES TO PGM-STAT
               MOVE 'TAB' TO MSG-COD-SIST
               MOVE '23' TO PGM-STAT-DBC
           ELSE
      *     IF MSG-COD-MENS = 'USRNODEOFI'
      *         MOVE 'TAB' TO MSG-COD-SIST
      *     ELSE
      *        todos otros casos: el error pertenece al sistema GAR
               MOVE 'GAR' TO MSG-COD-SIST.
           PERFORM GET-MSG.
           MOVE MSG-GLS-DESC TO FRM-MENS.

           MOVE SCR-STAT-CON TO SCR-STAT.
           MOVE '00' TO FIO-STAT.       
           IF FRM-FFLD = FRM-FFLD-PF6 OR
              FRM-FFLD = FRM-FFLD-PF5 OR
              SCR-CCPP = 'ING'
               GO TO FIN-FND-KEY.

           IF PGM-STAT-DBC-OKS 
      *        Despliega solo datos del DBC

               PERFORM SCR-CLRA-GDG
           ELSE
           IF FRM-FFLD = FRM-FFLD-PF8
              OR FRM-FFLD-PF7
               GO TO FIN-FND-KEY
           ELSE
           IF PGM-STAT-GDG-OKS 
               MOVE PGM-SNUL TO PGM-STAT-GDG
           ELSE
               MOVE '23' TO FIO-STAT.

           GO TO FIN-FND-KEY.
      *>>>>
       FIN-FND-KEY.
           IF FIO-STAT = FIO-STAT-NEX
               MOVE 'S' TO SCR-IERR.
       EXT-FND-KEY.
           EXIT.
 
       PUT-SCR SECTION.
       INI-PUT-SCR.

           PERFORM PUT-ALL-GDG.

       FIN-PUT-SCR.
           EXIT.

       STP-EXIT SECTION.
       INI-STP-EXIT.

           MOVE SCR-PROG TO PGM-PROG.
           MOVE SCR-NTRN TO PGM-NTRN.

           MOVE SCR-PROV TO SCR-PROG.
           MOVE SCR-NTRV TO SCR-NTRN.

           MOVE PGM-PROG TO SCR-PROV
           MOVE PGM-NTRN TO SCR-NTRV.

       FIN-STP-EXIT.
           EXIT.

       SCR-EXIT SECTION.
       INI-SCR-EXIT.
           MOVE 'P'      TO SCR-ICMN.
           MOVE SCR-NTRN TO SYS-NTRN.
           MOVE SCR-VARI TO SYS-CMMA.
           MOVE SCR-TCMA TO SYS-TCMA.
           MOVE SYS-RTRN TO SYS-CMND.
           PERFORM GNS-PRO-SYS.
       FIN-SCR-EXIT.
           EXIT.

       SCR-PUTA SECTION.
       INI-SCR-PUTA.
           MOVE SCR-NMAP TO FRM-NAME.
           MOVE SCR-NLIB TO FRM-NLIB.
           MOVE GDG-FLD TO FRM-DFLD.
           MOVE FRM-PUT-ALL TO FRM-CMND.
           PERFORM GNS-PRO-FRM.
       FIN-SCR-PUTA.
           EXIT.

       SCR-MSSG SECTION.
       INI-SCR-MSSG.
           IF FRM-MEN1 NOT > SPACES
               MOVE SPACES TO FRM-MEN1.
           IF FRM-MEN2 NOT > SPACES
               MOVE SPACES TO FRM-MEN2.
           MOVE FRM-MENS TO GDG-GLS-MENS.
       FIN-SCR-MSSG.
           EXIT.

       SCR-GKEY SECTION.
       INI-SCR-GKEY.
           MOVE SCR-NMAP TO FRM-NAME.
           MOVE SCR-NLIB TO FRM-NLIB.
           MOVE FRM-GET-ALL TO FRM-CMND.
           PERFORM GNS-PRO-FRM.
           MOVE SPACES TO FRM-MENS.
           IF NOT ( FRM-FFLD = FRM-FFLD-RET  OR FRM-FFLD-PF10 OR
                               FRM-FFLD-PF12 OR FRM-FFLD-PF3 )

               MOVE 'PFSINV    ' TO MSG-COD-MENS
               MOVE 'GNS' TO MSG-COD-SIST
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS
               PERFORM FST-KEY-GDG
               PERFORM SCR-MSSG
               PERFORM SCR-PUTA
               PERFORM SCR-EXIT.
           MOVE FRM-DFLD TO GDG-FLD.
           IF FRM-STAT-ABT
               GO TO FIN-SCR-GKEY.
           MOVE FRM-SUAR-OKS TO FRM-SUAR.
           PERFORM VAL-NUM-KEY-GDG.
           IF FRM-SUAR EQUAL FRM-SUAR-MAL OR FRM-SUAR-CLR
      *PTC-INI
               MOVE 'S' TO SCR-IERR
      *PTC-FIN
               PERFORM SCR-MSSG
               PERFORM EDT-KEY-GDG
               PERFORM SCR-PUTA
               PERFORM SCR-EXIT.
      *JSS
           PERFORM CLR-FLD-GDG.

           PERFORM VAL-IKY-GDG.
           IF FRM-SUAR EQUAL FRM-SUAR-MAL OR FRM-SUAR-CLR
               GO TO ERR-SCR-GKEY.

           PERFORM VAL-MKY-GDG.
           IF FRM-SUAR EQUAL FRM-SUAR-MAL OR FRM-SUAR-CLR
               GO TO ERR-SCR-GKEY.

           PERFORM VAL-AKY-GDG.
           IF FRM-SUAR EQUAL FRM-SUAR-MAL OR FRM-SUAR-CLR
               GO TO ERR-SCR-GKEY.

           PERFORM VAL-CON-KEY-GDG.
           IF NOT ( FRM-SUAR EQUAL FRM-SUAR-MAL OR FRM-SUAR-CLR )
               GO TO FIN-SCR-GKEY.
           IF FRM-UCUR NOT > SPACES
               PERFORM FST-KEY-GDG.
       ERR-SCR-GKEY.
      *PTC-INI
           MOVE 'S' TO SCR-IERR.
      *PTC-FIN

           PERFORM SCR-MSSG.
           PERFORM EDT-KEY-GDG.
           PERFORM SCR-PUTA.
           PERFORM SCR-EXIT.
       FIN-SCR-GKEY.

           PERFORM SCR-MSSG.

       SCR-GIKY SECTION.
       INI-SCR-GIKY.
           MOVE SCR-NMAP TO FRM-NAME.
           MOVE SCR-NLIB TO FRM-NLIB.
           MOVE FRM-GET-ALL TO FRM-CMND.
           PERFORM GNS-PRO-FRM.
           MOVE SPACES TO FRM-MENS.
           IF NOT ( FRM-FFLD = FRM-FFLD-RET  OR FRM-FFLD-PF10 OR
                               FRM-FFLD-PF12 OR FRM-FFLD-PF3 )

               MOVE 'PFSINV    ' TO MSG-COD-MENS
               MOVE 'GNS' TO MSG-COD-SIST
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS
               PERFORM FST-KEY-GDG
               PERFORM SCR-MSSG
               PERFORM SCR-PUTA
               PERFORM SCR-EXIT.
           MOVE FRM-DFLD TO GDG-FLD.
           IF FRM-STAT-ABT
               GO TO FIN-SCR-GIKY.
           MOVE FRM-SUAR-OKS TO FRM-SUAR.
           PERFORM VAL-NUM-KEY-GDG.
           IF FRM-SUAR EQUAL FRM-SUAR-MAL OR FRM-SUAR-CLR
      *PTC-INI
               MOVE 'S' TO SCR-IERR
      *PTC-FIN
               PERFORM SCR-MSSG
               PERFORM EDT-IKY-GDG
               PERFORM SCR-PUTA
               PERFORM SCR-EXIT.
      *JSS
           PERFORM CLR-FLD-GDG.

           PERFORM VAL-IKY-GDG.
           IF FRM-SUAR EQUAL FRM-SUAR-MAL OR FRM-SUAR-CLR
               GO TO ERR-SCR-GIKY.

           PERFORM VAL-CON-IKY-GDG.
           IF NOT ( FRM-SUAR EQUAL FRM-SUAR-MAL OR FRM-SUAR-CLR )
               GO TO FIN-SCR-GIKY.
           IF FRM-UCUR NOT > SPACES
               PERFORM FST-KEY-GDG.
       ERR-SCR-GIKY.
      *PTC-INI
           MOVE 'S' TO SCR-IERR.
      *PTC-FIN

           PERFORM SCR-MSSG.
           PERFORM EDT-IKY-GDG.
           PERFORM SCR-PUTA.
           PERFORM SCR-EXIT.
       FIN-SCR-GIKY.
      *<<<< LDC_SI AND PGM_IBM AND (FIN_SCR_GIKY OR FIN_SCR_GCNF OR FIN_SCR_GFLD)
           IF FRM-FFLD = FRM-FFLD-PF3 AND
              SCR-IND-ENG IN SCR-VEC-ENG(SCR-IPRO) = 'S' 
      *       AND SCR-IND-COL = 'C'
               PERFORM EGR-FTER-CIC.
      *>>>>

           PERFORM SCR-MSSG.

       GET-CON SECTION.
       INI-GET-CON.
           MOVE SCR-NMAP TO FRM-NAME.
           MOVE SCR-NLIB TO FRM-NLIB.
           MOVE FRM-GET-ALL TO FRM-CMND.
           PERFORM GNS-PRO-FRM.
           IF NOT ( FRM-FFLD = FRM-FFLD-RET  OR FRM-FFLD-PF10 OR
                               FRM-FFLD-PF12 OR FRM-FFLD-PF3 )
      *<<<< PFS_GET_CON OR PFS_GET_ACC
           IF NOT
              ( FRM-FFLD = FRM-FFLD-PF5 OR FRM-FFLD = FRM-FFLD-PF6 OR
                FRM-FFLD = FRM-FFLD-PF7 OR FRM-FFLD = FRM-FFLD-PF8 )
      *>>>>

               MOVE 'PFSINV    ' TO MSG-COD-MENS
               MOVE 'GNS' TO MSG-COD-SIST
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO GDG-GLS-MEN2
               MOVE SCR-PRMT     TO GDG-GLS-MEN1
               PERFORM FST-MSG
               PERFORM SCR-PUTA
               PERFORM SCR-EXIT.
           MOVE FRM-DFLD TO GDG-FLD.

       FIN-GET-CON.
           MOVE SCR-STAT-CON TO SCR-STAT.

       CLR-MSG SECTION.
       INI-CLR-MSG.
           MOVE SPACES TO GDG-GLS-MENS.
       FIN-CLR-MSG.
           EXIT.

       HBL-IKY SECTION.
       INI-HBL-IKY.

      *PTC-INI
           IF NOT SCR-OFRM-SRV
      *PTC-FIN
           IF SCR-DESDE-CMN
               MOVE GDG-GLS-MENS TO FRM-MENS
               MOVE LOW-VALUES TO GDG-FLD
      * FLB  7-NOV-1994
               PERFORM CLR-KEY-GDG

               IF FRM-MENS < SPACES
                   MOVE LOW-VALUES TO GDG-GLS-MENS
               ELSE
                   MOVE FRM-MENS TO GDG-GLS-MENS.
           PERFORM PRO-MKY-GDG.
           PERFORM PRO-AKY-GDG.
           PERFORM UNP-IKY-GDG.
           PERFORM FST-KEY-GDG.
      *<<<< LDC_SI AND PGM_IBM AND FIN_HBL_IKY
           IF SCR-IND-ENG IN SCR-VEC-ENG(SCR-IPRO) = 'S'
               PERFORM HBL-KEY-GDG.
      *>>>>

       FIN-HBL-IKY.
           EXIT.

       HBL-KEY SECTION.
       INI-HBL-KEY.

      *PTC-INI
           IF NOT SCR-OFRM-SRV
      *PTC-FIN
           IF SCR-DESDE-CMN
               MOVE GDG-GLS-MENS TO FRM-MENS
               MOVE LOW-VALUES TO GDG-FLD
               IF FRM-MENS < SPACES
                   MOVE LOW-VALUES TO GDG-GLS-MENS
               ELSE
                   MOVE FRM-MENS TO GDG-GLS-MENS.
           PERFORM UNP-KEY-GDG.
           PERFORM FST-KEY-GDG.

      *<<<< FIN_HBL_KEY
           IF SCR-CCPP NOT = 'ING'
               MOVE FRM-CPIM-AEY TO GDG-TIP-OPE-ATR IN GDG-FLD
               MOVE FRM-CPIM-AEY TO GDG-STP-OPE-ATR IN GDG-FLD.
      *>>>>
       FIN-HBL-KEY.
           EXIT.

       HBL-FLD SECTION.
       INI-HBL-FLD.

           PERFORM PRO-IKY-GDG.
           PERFORM PRO-AKY-GDG.
           PERFORM UNP-MKY-GDG.
           PERFORM UNP-FLD-GDG.
           PERFORM FST-FLD-GDG.

       FIN-HBL-FLD.
           EXIT.

       FST-MSG SECTION.
       INI-FST-MSG.
           MOVE -1 TO GDG-GLS-MENS-LEN.
       FIN-FST-MSG.
           EXIT.

       PRO-ALL SECTION.
       INI-PRO-ALL.

           PERFORM PRO-KEY-GDG.
           PERFORM FST-MSG.

       FIN-PRO-ALL.
           EXIT.

       SCR-TRL SECTION.
       INI-SCR-TRL.


      *PTC-INI
           IF SCR-STAT NOT = SCR-STPP
               MOVE 'S' TO SCR-IERR.
      *PTC-FIN
           IF FRM-MEN1 NOT > SPACES
               MOVE SCR-PRMT TO FRM-MEN1.
      *<<<< LDC_SI AND PGM_IBM AND FIN_SCR_TRL
           IF SCR-IND-ENG IN SCR-VEC-ENG(SCR-IPRO) = 'S'
               MOVE 'F10GDGNINFIA' TO MSG-COD-MENS
               PERFORM MSG-PF10.
      *>>>>

           IF SCR-STAT = SCR-STAT-MOD
               PERFORM HBL-FLD
               PERFORM SCR-MSSG
               PERFORM EDT-KEY-GDG
               PERFORM EDT-FLD-GDG
               PERFORM SCR-PUTA
               PERFORM STP-EXIT
               MOVE SCR-INST-GFL TO SCR-INST
               PERFORM SCR-EXIT.
           IF SCR-STAT = SCR-STAT-SON
               PERFORM PRO-ALL
               PERFORM SCR-MSSG
               PERFORM EDT-KEY-GDG
               PERFORM EDT-FLD-GDG
               PERFORM SCR-PUTA
               PERFORM STP-EXIT
               MOVE SCR-INST-GCS TO SCR-INST
               PERFORM SCR-EXIT.
      *ASUME SCR-STAT-CON.
           MOVE SCR-STAT-CON TO SCR-STAT.
      *    MOVE FRM-CPSF-AEY TO FRM-CPIM-AEY.
           PERFORM PRO-ALL.
           PERFORM SCR-MSSG.
           PERFORM EDT-KEY-GDG.
           PERFORM EDT-FLD-GDG.
           PERFORM SCR-PUTA.
           MOVE SCR-INST-GAB TO SCR-INST.
           PERFORM SCR-EXIT.
       FIN-SCR-TRL.
           EXIT.

       DESSCRTRL SECTION.
       INI-DESSCRTRL.
           MOVE SCR-VFLD-NOT TO SCR-VFLD.
           MOVE FRM-FFLD TO SCR-FFLD.
       FIN-DESSCRTRL.
           IF SCR-FFLD-PF10 OR SCR-FFLD-PF3
                 MOVE SCR-INST-HCM TO SCR-INST
           ELSE
                 MOVE SCR-INST-HKY TO SCR-INST.
       EXT-DESSCRTRL.
           EXIT.

       PGM-EBR-ALL SECTION.
       INI-PGM-EBR-ALL.
           MOVE FIO-EBR-ALL TO FIO-CMND.
           PERFORM GAR-FIO-GDG.
       FIN-PGM-EBR-ALL.
           EXIT.

       COPY GARBQGDG.
       COPY GNSBVNUM.
       COPY GARBFGDG.
       COPY GNSBFMSG.
       COPY GNSBGSYS.
       COPY GNSBGDTC.
      *PTC-INI
      *PTC-SUB
       COPY GNSBGFRM.
      *COPY GNSBG3CF.
      *PTC-FIN
       COPY GNSBGMSG.
       COPY GNSBEKEY.
       COPY GNSBIABT.
       COPY GNSBBTAB.
       COPY GNSBVCOD.
       COPY GNSBVTAB.
       COPY GNSBFTAB.
       COPY GNSBVIND.
       COPY GNSBVMSC.
       COPY GNSBFMSC.
       COPY GNSBVIDC.
       COPY GNSBPVRF.
       COPY GNSBEGLS.
       COPY GNSBGFEC.
       COPY GNSBGHOY.
       COPY TABBBOFI.
       COPY TABBVOFI.
       COPY TABBFOFI.
       COPY TABBBUSR.
       COPY TABBVTDU.
       COPY TABBFUSR.

      *PTC ini
       COPY GNSBGQUE.
      *PTC fin
      *<<<< LDC_SI AND PGM_IBM AND EOF
       MSG-PF10 SECTION.
       INI-MSG-PF10.
      *GET-MSG Busca mensaje en tabla
           MOVE 'DEU' TO MSG-COD-SIST.
           PERFORM GET-MSG.
           MOVE MSG-GLS-DESC TO FRM-MEN2.
           MOVE FRM-MEN2     TO GDG-GLS-MEN2 IN GDG-FLD.
       FIN-MSG-PF10.
           EXIT.

       HBL-KEY-GDG SECTION.
       INI-HBL-KEY-GDG.
           MOVE SCR-INST-GKY TO SCR-INST.
      *ISP   25-JUL-1990 DEBE SER REEMPLAZADO POR VARIABLE
      *     INHIBE MOVE FRM-CPSF TO FRM-CPIM-AEY
           MOVE '1' TO FRM-CPIM-AEY.
           MOVE FRM-CPIM-AEY TO GDG-NUM-SIS-ATR IN GDG-FLD.
           MOVE FRM-CPIM-AEY TO GDG-COD-CRR-ATR IN GDG-FLD.
      *<<<< ISP-INI  24-JAN-1996 11:35:48 
      * EN MTX DEBE CAPTURAR LLAVES DE USUARIO EN PANTALLA
           IF SCR-OFRM-SRV
               MOVE SCR-NMAP TO FRM-NAME
               MOVE SCR-NLIB TO FRM-NLIB
               MOVE FRM-GET-ALL TO FRM-CMND
               PERFORM GNS-PRO-FRM
               MOVE FRM-DFLD TO GDG-FLD
               PERFORM VAL-NUM-KEY-GDG
               PERFORM VAL-NUM-FLD-GDG
           ELSE
      *<<<< ISP-INI  24-JAN-1996 11:35:48 
           PERFORM SCR-CLRA-GDG.
      * ISP SCR-DMSG LIMPIA TODO Y HACE STP-EXIT
           MOVE PGM-NO-LIMPIAR-NADA TO PGM-ICLR.
           MOVE SCR-CAI-IGAR IN SCR-VARI TO GDG-NUM-SIS  IN GDG-FLD.
           MOVE SCR-IIC-IGAR IN SCR-VARI TO GDG-COD-CRR  IN GDG-FLD.
           MOVE +4 TO GDG-NUM-SIS-LEN                    IN GDG-FLD.
           MOVE -1 TO GDG-TIP-OPE-LEN                    IN GDG-FLD.
      *
           PERFORM EDT-KEY-GDG.
           PERFORM EDT-FLD-GDG.

           MOVE 'F10GDGNINFIA' TO MSG-COD-MENS.
           PERFORM MSG-PF10.
      *<<<< ISP-INI  24-JAN-1996 11:35:48 
      * BAJO MTX DEBE REGRABAR PANTALLA Y LLAMAR A SCR-ING

           IF SCR-OFRM-SRV
           IF SCR-IND-FST IN SCR-VEC-FST(SCR-IPRO) = 'S'

               MOVE GDG-FLD TO FRM-DFLD

      * INI - COPY - GNSBGFRM
               MOVE SCR-OTRN TO QUE-TERM
               MOVE 'TSI'    TO QUE-TYPE
               MOVE 1        TO QUE-NITM
               MOVE +2014    TO QUE-LITM
               MOVE QUE-DEL  TO QUE-CMND
               PERFORM GNS-PRO-QUE
               MOVE SCR-OTRN TO QUE-TERM
               MOVE 'TSI'    TO QUE-TYPE
               MOVE 1        TO QUE-NITM
               MOVE +2014    TO QUE-LITM
               MOVE FRM-DFLD TO FRM-AUXI
      * NO DEBE GRABAR TSI EN FORMATO MTX, SI NO QUE EN FORMATO
      * PROGRAMA. ESTE PROGRAMA RELEERA TSI SIN PASAR POR MTX
      *         MOVE MSG-COD-MENS TO FRM-COD-MENS
      *         MOVE FRM-MENS     TO FRM-GLS-MENS
      *         MOVE FRM-AUXI     TO FRM-DATA
      *         MOVE FRM-NAME TO FRM-NAME-IDEN
               MOVE FRM-DFLD TO QUE-DATA
               MOVE QUE-PUT  TO QUE-CMND
               PERFORM GNS-PRO-QUE
      * FIN - COPY - GNSBGFRM

               PERFORM SCR-ING.

      *<<<< ISP-INI  24-JAN-1996 11:35:48 

           IF SCR-IND-FST IN SCR-VEC-FST(SCR-IPRO) = 'S'
               MOVE SPACES TO SCR-IND-FST IN SCR-VEC-FST(SCR-IPRO)
               PERFORM SCR-INIT
               PERFORM SCR-EXIT
           ELSE
      *<<<< ISP-INI  24-JAN-1996 11:35:48 
           IF SCR-OFRM-SRV
                EXEC CICS
                 RETURN
                END-EXEC.
      *<<<< ISP-FIN  24-JAN-1996 11:35:48 
               PERFORM SCR-PUTA.
       FIN-HBL-KEY-CLF.
           EXIT.

      *  CODIGO ADICIONAL PARA ENGANCHE PROGRAMAS
       ING-FPEN-CIC SECTION.
       INI-ING-FPEN-CIC.
           PERFORM ING-SETE.
           PERFORM SCR-CLRA-GDG.
           MOVE SCR-MENS-EXT TO GDG-GLS-MENS.
           PERFORM HBL-IKY.
       FIN-ING-FPEN-CIC.
           EXIT.

       ING-SETE SECTION.
       INI-ING-SETE.
           PERFORM CRG-TBL-ENG.
           MOVE WSS-NTRN(SCR-IPRO)     TO SCR-NTRN.
           MOVE WSS-PROG(SCR-IPRO)     TO SCR-PROG.
           MOVE WSS-NMAP(SCR-IPRO)     TO SCR-NMAP.
           MOVE WSS-NLIB(SCR-IPRO)     TO SCR-NLIB.

           MOVE WSS-NTRV(SCR-IPRO)     TO SCR-NTRV.
           MOVE WSS-PROV(SCR-IPRO)     TO SCR-PROV.
       FIN-ING-SETE.
           EXIT.

       EGR-FPEN-CIC SECTION.
       INI-EGR-FPEN-CIC.
           PERFORM CRG-TBL-ENG.
           ADD 1 TO SCR-IPRO.
           IF SCR-IPRO > WSS-TOT-IIDX
                  PERFORM EGR-FTER-CIC
                  GO TO FIN-EGR-FPEN-CIC.
           IF SCR-IND-ENG IN SCR-VEC-ENG(SCR-IPRO) = SPACES
               GO TO INI-EGR-FPEN-CIC.
           MOVE WSS-INST-FPEN-CIC TO SCR-INST-EXT.
           MOVE WSS-PROG(SCR-IPRO) TO SYS-PROG.
           MOVE SCR-VARI TO SYS-CMMA.
           MOVE SCR-TCMA TO SYS-TCMA.
           MOVE SYS-XCTL TO SYS-CMND.
           PERFORM GNS-PRO-SYS.
       FIN-EGR-FPEN-CIC.
           EXIT.

       EGR-FTER-CIC SECTION.
       INI-EGR-FTER-CIC.
           PERFORM CRG-TBL-ENG.
           MOVE WSS-IDX-ILDC TO SCR-IPRO.
           MOVE 'S' TO SCR-IND-ENG IN SCR-VEC-ENG(SCR-IPRO).
           MOVE 'S' TO SCR-IND-FST IN SCR-VEC-FST(SCR-IPRO).
           MOVE WSS-INST-FPEN-CIC TO SCR-INST-EXT.
           MOVE WSS-PROG(SCR-IPRO) TO SYS-PROG.
           MOVE SCR-VARI TO SYS-CMMA.
           MOVE SCR-TCMA TO SYS-TCMA.
           MOVE SYS-XCTL TO SYS-CMND.
           PERFORM GNS-PRO-SYS.
       FIN-EGR-FTER-CIC.
           EXIT.

       SCR-INIT SECTION.
       INI-SCR-INIT.
           MOVE 3  TO FRM-PLIN.
           MOVE 19 TO FRM-NLIN.
           MOVE FRM-CLR-FRM TO FRM-CMND.
           PERFORM GNS-PRO-FRM.
           MOVE FRM-SINI-DBNF TO FRM-SINI.
           MOVE SCR-NMAP TO FRM-NAME.
           MOVE SCR-NLIB TO FRM-NLIB.
           MOVE GDG-FLD TO FRM-DFLD.
           MOVE FRM-INI TO FRM-CMND.
           PERFORM GNS-PRO-FRM.
       FIN-SCR-INIT.
           EXIT.

       COPY LDCBGMPT.

      *>>>>
      *<<<< EOF
       RST-STAT SECTION.
       INI-RST-STAT.
           MOVE SCR-STPP     TO SCR-STAT.
           MOVE SCR-MFLD-NOT TO SCR-MFLD.
       FIN-RST-STAT.
           EXIT.

      *<<<< EOFPQPU

       GET-GDD SECTION.
       INI-GET-GDD.
           MOVE DBC-KEY-IDBC IN DBC TO GDD-CIC-ICLI IN GDD.
           MOVE GDG-NUM-SIS IN GDG-FLD TO GAR-NUM-SIS IN GDD.
           MOVE GDG-COD-CRR IN GDG-FLD TO GAR-COD-CRR IN GDD.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM GAR-FIO-GDD.
           IF FIO-STAT-OKS AND 
              GDD-CIC-ICLI IN GDD = DBC-KEY-IDBC IN DBC
               MOVE GAR-CLV-GDD-2 IN GDD TO GAR-CLV-GDG-1 IN GDG
               MOVE 2 TO WSS-IBUS
               MOVE FIO-GET-KEY TO FIO-CMND
               PERFORM GAR-FIO-GDG
               IF FIO-STAT-OKS
                   MOVE 3 TO WSS-IBUS.
       FIN-GET-GDD.
           EXIT.

       GET-CUR-GDD SECTION.
       INI-GET-CUR-GDD.
           MOVE GAR-CLV-GDG-1 IN GDG TO GAR-CLV-GDD-2 IN GDD.
           MOVE 'GAR-CLV-GDD-2' TO FIO-AKEY.
           MOVE FIO-GET-NLS TO FIO-CMND.
           PERFORM GAR-FIO-GDD.
           IF FIO-STAT-OKS
               MOVE 'GAR-CLV-GDD-2' TO FIO-AKEY
               MOVE FIO-END-BRW TO FIO-CMND
               PERFORM GAR-FIO-GDD.
           IF NOT
              GAR-CLV-GDG-1 IN GDG = GAR-CLV-GDD-2 IN GDD
               MOVE '23' TO FIO-STAT.
       FIN-GET-CUR-GDD.
           EXIT.

       COPY SGCBFDBC.
       COPY GARBFGDD.
       COPY SGCBGCLI.

      *<<<< PGM_PU OR NOT NO_CIC_PQ
       COPY GNSBFCIC.
      *>>>>
      *<<<< UNS_FLD
       COPY GNSBGCPT.
       COPY GNSBGSTR.
      *>>>>

      *>>>>
      *<<<< PGM_CHI
       BUS-GDO-OPD SECTION.
       INI-BUS-GDO-OPD.
           MOVE SPACES TO MSG-COD-MENS.
           MOVE GDG-NUM-SIS IN GDG-FLD TO GAR-NUM-SIS IN GDO.
           MOVE GDG-COD-CRR IN GDG-FLD TO GAR-COD-CRR IN GDO.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM GAR-FIO-GDO.
           IF NOT FIO-STAT-OKS
               MOVE 'GAR'          TO MSG-COD-SIST
               MOVE 'GDO    NEX'   TO MSG-COD-MENS
           ELSE
               MOVE GAR-COD-DOC IN GDO TO OPD-CIC-IOPD IN DAP-VARI
               MOVE OPD-CAI-IOPD IN DAP-VARI TO OPD-CAI-IOPD IN OPD
               MOVE OPD-IIC-IOPD IN DAP-VARI TO OPD-IIC-IOPD IN OPD
               MOVE FIO-GET-KEY TO FIO-CMND
               PERFORM DAP-FIO-OPD
               IF NOT FIO-STAT-OKS
                   MOVE 'GAR'          TO MSG-COD-SIST
                   MOVE 'OPD    NEX'   TO MSG-COD-MENS
               ELSE
               IF OPD-COD-STAT IN OPD NOT = 'G'
                   MOVE 'GAR'            TO MSG-COD-SIST
                   MOVE 'OPD    NOVIG'   TO MSG-COD-MENS.
       FIN-BUS-GDO-OPD.
           EXIT.

      *>>>>
      *<<<< EOF AND PGM_PQ
      *<<<< EOFPQ
       LEE-NXT-PRV-XGDD SECTION.
       INI-LEE-NXT-PRV-XGDD.
           MOVE GAR-CLV-GDD-1 IN CMA-VARI TO GAR-CLV-GDD-1 IN GDD. 
           IF FRM-FFLD = FRM-FFLD-PF5
      *<<<< NOT PGM_VMS
               MOVE FIO-GET-LEQ TO FIO-CMND
      *>>>>
               PERFORM GAR-FIO-GDD
               MOVE FIO-GET-PRV TO FIO-CMND
           ELSE
               MOVE FIO-GET-NLS TO FIO-CMND
               PERFORM GAR-FIO-GDD
               MOVE FIO-GET-NXT TO FIO-CMND.

           PERFORM GAR-FIO-GDD.
           MOVE FIO-STAT TO PGM-STAT-GDD.
           IF FIO-STAT-OKS 
               MOVE FIO-END-BRW TO FIO-CMND
               PERFORM GAR-FIO-GDD.
           IF PGM-STAT-GDD-OKS AND
              GDD-CIC-ICLI IN GDD = DBC-KEY-IDBC IN CMA-VARI
               MOVE GAR-CLV-GDD-2 IN GDD TO GAR-CLV-GDG-1 IN GDG
               MOVE FIO-GET-KEY TO FIO-CMND
               PERFORM GAR-FIO-GDG
               IF FIO-STAT-OKS
                   MOVE 3 TO WSS-IBUS
                   MOVE GAR-NUM-SIS IN GDG TO GDG-NUM-SIS IN GDG-FLD
                   MOVE GAR-COD-CRR IN GDG TO GDG-COD-CRR IN GDG-FLD
               ELSE
                   MOVE 'DAT ERR' TO MSG-COD-MENS
                   MOVE 'GAR' TO MSG-COD-SIST
                   PERFORM GET-MSG
                   MOVE MSG-GLS-DESC TO FRM-MENS
           ELSE
               MOVE '23' TO FIO-STAT.

       FIN-LEE-NXT-PRV-XGDD.
           EXIT.

       LEE-NXT-PRV-XDBC SECTION.
       INI-LEE-NXT-PRV-XDBC.
           MOVE DBC-KEY-IDBC IN CMA-VARI TO DBC-KEY-IDBC IN DBC.
           MOVE FIO-GET-KEY    TO FIO-CMND.
           PERFORM SGC-FIO-DBC.
           IF CMA-IND-KPAD IN CMA-VARI = 'I'
               MOVE 'DBC-IDC-ICLI'  TO FIO-AKEY
           ELSE
               MOVE 'DBC-GLS-NOMC'  TO FIO-AKEY.

      *FLB CST  13-OCT-1993 
           MOVE FIO-GET-NLS TO FIO-CMND.
           PERFORM SGC-FIO-DBC.
      * BUSCA POR LLAVE SECUNDARIA EL REGISTRO DE PANTALLA ANTERIOR
           PERFORM BUS-DBC-ANT UNTIL
                FIO-STAT-OKS AND
                DBC-KEY-IDBC IN DBC = DBC-KEY-IDBC IN CMA-VARI OR
                NOT FIO-STAT-OKS.

           MOVE 0 TO WSS-IBUS.
           MOVE '23' TO PGM-STAT-DBC.
           IF FIO-STAT-OKS 
               PERFORM LEE-NXT-PRV-DBC
               IF FRM-FFLD = FRM-FFLD-PF7
                   MOVE 'GAR'      TO FIO-SIST
                   MOVE 'VSN '     TO TAB-COD-TTAB IN TAB
      *<<<< NOT PGM_ARG
                   MOVE 'SISVSI'   TO TAB-COD-CTAB IN TAB
                   MOVE FIO-GET-KEY TO FIO-CMND
                   PERFORM GNS-FIO-TAB
                   IF FIO-STAT-OKS AND
                      TAB-IND-VIGE IN TAB = 'S'
                       MOVE 0 TO WSS-IBUS
                       MOVE '23' TO PGM-STAT-DBC
                       PERFORM LEE-NXT-PRV-DBC.
      *>>>>
      *FLB CST  13-OCT-1993 
       FIN-LEE-NXT-PRV-XDBC.
           EXIT.

       BUS-DBC-ANT SECTION.
       INI-BUS-DBC-ANT.
           IF CMA-IND-KPAD IN CMA-VARI = 'I'
               MOVE 'DBC-IDC-ICLI'  TO FIO-AKEY
           ELSE
               MOVE 'DBC-GLS-NOMC'  TO FIO-AKEY.
           MOVE FIO-GET-NXT TO FIO-CMND.
           PERFORM SGC-FIO-DBC.
       FIN-BUS-DBC-ANT.
           EXIT.

       LEE-NXT-PRV-DBC SECTION.
       INI-LEE-NXT-PRV-DBC.
           IF FRM-FFLD = FRM-FFLD-PF7
               MOVE FIO-GET-PRV TO FIO-CMND
           ELSE
               MOVE FIO-GET-NXT TO FIO-CMND.
           IF CMA-IND-KPAD IN CMA-VARI = 'I'
               MOVE 'DBC-IDC-ICLI'  TO FIO-AKEY
           ELSE
               MOVE 'DBC-GLS-NOMC'  TO FIO-AKEY.
           PERFORM SGC-FIO-DBC.
           MOVE FIO-STAT TO PGM-STAT-DBC.
           IF FIO-STAT-OKS
               MOVE 1 TO WSS-IBUS.
       FIN-LEE-NXT-PRV-DBC.
           EXIT.

       BUS-ULT-GDG SECTION.
       INI-BUS-ULT-GDG.
      *<<<< PGM_DTC OR PGM_DB2
           MOVE DBC-KEY-IDBC IN DBC TO GDD-CIC-ICLI IN GDD.
      *    se busca el ultimo hijo, luego de encontrar el padre
           MOVE '999999999999' TO GAR-CLV-GDD-2 IN GDD.
           MOVE FIO-GET-LEQ TO FIO-CMND.
      *>>>>
      *<<<< NOT PGM_VSI
           PERFORM GAR-FIO-GDD.
           IF FIO-STAT-OKS AND 
              GDD-CIC-ICLI IN GDD = DBC-KEY-IDBC IN DBC
               MOVE GAR-CLV-GDD-2 IN GDD TO GAR-CLV-GDG-1 IN GDG
               MOVE FIO-GET-KEY TO FIO-CMND
               PERFORM GAR-FIO-GDG
               IF FIO-STAT-OKS
                   MOVE 3 TO WSS-IBUS
                   MOVE GAR-NUM-SIS IN GDG TO GDG-NUM-SIS IN GDG-FLD
                   MOVE GAR-COD-CRR IN GDG TO GDG-COD-CRR IN GDG-FLD.
      *>>>>
       FIN-BUS-ULT-GDG.
           EXIT.
      *>>>>

      *<<<< PGM_CHI
       COPY GARBGEDP.
      *>>>>
      *>>>>
      *<<<< EOF

       COPY GARBFTAG.

      *<<<< PGM_CHI
       COPY GARBFGDO.

       COPY DAPBFOPD.
       COPY DAPBFRCC.

      *>>>>

      *>>>>



