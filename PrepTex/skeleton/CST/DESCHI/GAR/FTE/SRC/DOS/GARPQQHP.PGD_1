       IDENTIFICATION DIVISION.
      *========================
       PROGRAM-ID.   GARPQQHP.
       AUTHOR.       CONSIST.
       DATE-WRITTEN. 16-Sep-94 04:21 PM.

      * NOMBRE PROGRAMA                   GARPQQHP
      * VERSION                           3.1
      * OPCION                            CON
      * ARCHIVO BASE                      GARGVT
      * PANTALLA                          GARQHP
      * INP/OUT                           DATACOM
      * TAMANO COMMAREA                   250


       ENVIRONMENT DIVISION.
      *=====================
       CONFIGURATION SECTION.
      *----------------------
       SPECIAL-NAMES.
               DECIMAL-POINT IS COMMA.

       DATA DIVISION.
      *==============

       WORKING-STORAGE SECTION.
      *------------------------
      * COPY GNSWGSCR.
       COPY GNSWCSCR.
       COPY GNSWVSCR.
      *<<<< FIN_SCR_VARI

           03 CMA-VARI.
              05  CMA-POS-ACT            COMP         PIC S9(04).
              05  CMA-CLV-INI.
                  07 GAR-CLV-GVT-1-INI                 PIC X(15).
                  07 GAR-COD-ITM-TSN-INI                 PIC 9(03).
              05  CMA-CLV-FIN.
                  07 GAR-CLV-GVT-1                     PIC X(15).
                  07 GAR-COD-ITM-TSN-FIN                 PIC 9(03).
              05  CMA-1VEZ                            PIC X(01).
      *>>>>
              05  WSS-SUM-ITM            COMP-3       PIC S9(03).
              05  WSS-SUM-VAL            COMP-3       PIC S9(11)V9(4).
      *>>>>
       COPY GARWIQHP.

       COPY GARBRGVT.


       COPY GNSWVIDD.
       COPY GNSWGRQA.
       COPY GNSWGUIB.
       COPY GNSWGELS.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-GVT-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-TAB-REQA==.
       COPY GNSBRTAB.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-MSG-REQA==.
       COPY GNSBRMSG.
       COPY GNSWCFIO.
       COPY GNSWVFIO.
       COPY GNSWGFRM.
       COPY GNSWVNUM.
       COPY GNSWCNUM.
       COPY GNSWGSYS.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-OFI-REQA==.
       COPY TABBROFI.

      *<<<< WSS
       COPY GARBRGDG.
       COPY GARBRGTP.
       COPY GARBRTAG.

      * Define 01  WSS-VARI de PGM1ANIDX
       01  WSS-VARI.
           03  WSS-IMAX               VALUE 9      PIC 9(02).
           03  GAR-CLV-GTP-1.
               05 GAR-CLV-GVT-1                        PIC X(15).
               05 GAR-COD-ITM-TSN                        PIC 9(03).
      * PARA USAR GARSRC:ERRFNDKEY.SRC
           03  WSS-IBUS                               PIC 9(01).
           03  WSS-IBUS-GTP                           PIC 9(01).
      *>>>>

      *<<<< WSS_DTC
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-GDG-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-GTP-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-TAG-REQA==.
      *>>>>
       01  PGM-VARI.
           03 PGM-ICLR                  VALUE ' '       PIC X(01).
           03 PGM-LIMPIAR-TODO          VALUE ' '       PIC X(01).
           03 PGM-LIMPIAR-LLAVES        VALUE 'K'       PIC X(01).
           03 PGM-LIMPIAR-CAMPOS        VALUE 'F'       PIC X(01).
           03 PGM-NO-LIMPIAR-NADA       VALUE 'N'       PIC X(01).
           03 PGM-PROG                                  PIC X(08).
           03 PGM-NTRN                                  PIC X(04).
           03 PGM-STAT.
              05 PGM-STAT-GVT.
                 88 PGM-STAT-GVT-NUL    VALUE '  '.
                 07 PGM-STT1-GVT        VALUE '2' PIC X(01).
                    88 PGM-STAT-GVT-OKS VALUE '0'.
                 07 PGM-STT2-GVT        VALUE '3' PIC X(01).
              05 PGM-STAT-GDG.
                 88 PGM-STAT-GDG-NUL    VALUE '  '.
                 07 PGM-STT1-GDG        VALUE '2' PIC X(01).
                    88 PGM-STAT-GDG-OKS VALUE '0'.
                 07 PGM-STT2-GDG        VALUE '3' PIC X(01).
           03 PGM-SRNF                  VALUE '23'      PIC X(02).
           03 PGM-SOKS                  VALUE '00'      PIC X(02).
           03 PGM-SNUL                  VALUE '  '      PIC X(02).
           03 PGM-SUAR                  VALUE SPACES    PIC X(15).

       LINKAGE SECTION.
      *----------------
       01  DFHCOMMAREA.
           02 FILLER                    PIC X(350).
       COPY GNSLGFIO.

       PROCEDURE DIVISION.
      *===================

       MAIN SECTION.
       INI-MAIN.
           PERFORM INI.
       LUP-MAIN.
           IF SCR-INST = SCR-INST-HCM
                 PERFORM SCR-COM.
           IF SCR-CCPP = 'ACC'
                 PERFORM SCR-ACC
           ELSE
                 MOVE SCR-INST-HCM TO SCR-INST.
           GO TO LUP-MAIN.
       FIN-MAIN.
           EXIT.

       INI SECTION.
       INI-INI.
       COPY GNSBGEIB.
       COPY GNSBGEDB.
           MOVE LOW-VALUES TO QHP-FLD.
           MOVE LOW-VALUES TO QHP-EDT.
           PERFORM GNS-PRO-RCK.
           PERFORM GNS-BUS-VCA.
           PERFORM GNS-HDL-SYS.
           PERFORM GNS-HDL-FRM.
           MOVE 'GARPQQHP' TO FIO-PROG.
           PERFORM GNS-BUS-IDD.
      *<<<< INI_FIO
           MOVE +350 TO SCR-TCMA.
      *>>>>
       FIN-INI.
           EXIT.

       COPY GNSBHSYS.
       COPY GNSBHFRM.
       COPY GNSBPRCK.
       COPY GNSBBVCA.
       COPY GNSBBIDD.

       SCR-COM SECTION.
       INI-SCR-COM.
           MOVE FRM-CPSF-AEY TO FRM-CPIM-AEY.
           PERFORM PRO-ALL.
           PERFORM SCR-CLRA-QHP.
           PERFORM EDT-KEY-QHP.
           PERFORM EDT-FLD-QHP.
           PERFORM SCR-PUTA.
           MOVE SCR-INST-HCM TO SCR-INST.
           MOVE SCR-CMNP     TO SYS-PROG.
           MOVE SCR-VARI     TO SYS-CMMA.
           MOVE SCR-TCMA     TO SYS-TCMA.
           MOVE SYS-XCTL     TO SYS-CMND.
           PERFORM GNS-PRO-SYS.
       XCT-ERR.
           MOVE 'XCTERR    ' TO MSG-COD-MENS.
           MOVE 'GNS'        TO MSG-COD-SIST.
           PERFORM GET-MSG.
           MOVE MSG-GLS-DESC TO SYS-MEN1.
           MOVE SYS-PROG     TO SYS-MEN2.
           MOVE SYS-ABOR     TO SYS-CMND.
           PERFORM GNS-PRO-SYS.
       COPY GNSBGGBK.
       FIN-SCR-COM.
           EXIT.



       SCR-ACC SECTION.
       INI-SCR-ACC.
           IF SCR-INST = SCR-INST-HKY
               MOVE SCR-INST-GKY TO SCR-INST
               PERFORM HBL-KEY
               PERFORM SCR-DMSG
           ELSE
           IF SCR-INST = SCR-INST-GKY
                PERFORM SCR-KEY
                IF SCR-STAT NOT = SCR-STAT-ABT
                        PERFORM SCR-TRL
                ELSE
                        PERFORM DESSCRTRL
                        GO TO FIN-SCR-ACC
           ELSE
           IF SCR-INST = SCR-INST-GAB
                PERFORM GET-CON
           ELSE
           IF SCR-INST = SCR-INST-BRW
               MOVE SCR-FFLD TO FRM-FFLD
               PERFORM BRW-SCR-ACC.
           PERFORM DESSCRTRL.
      *<<<< PFS_SCR_ACC
           IF FRM-FFLD = FRM-FFLD-PF6
                    OR   FRM-FFLD-PF5
               PERFORM VAL-NUM-KEY-QHP
               PERFORM VAL-NUM-FLD-QHP
               PERFORM RST-STAT
               PERFORM FND-SCR-KEY THRU FIN-SCR-KEY
               IF SCR-STAT NOT = SCR-STAT-ABT
                   PERFORM SCR-TRL
               ELSE
                   PERFORM DESSCRTRL
                   GO TO FIN-SCR-ACC.
      *>>>>
           MOVE SPACES TO FRM-MENS.
           PERFORM SCR-MSSG.
       FIN-SCR-ACC.
           EXIT.

       BRW-SCR-ACC SECTION.
       INI-BRW-SCR-ACC.
       FIN-BRW-SCR-ACC.
           EXIT.




       SCR-DMSG SECTION.
       INI-SCR-DMSG.
           IF PGM-ICLR = PGM-NO-LIMPIAR-NADA
               NEXT SENTENCE
           ELSE
           IF PGM-ICLR = PGM-LIMPIAR-TODO
               PERFORM SCR-CLRA-QHP
               PERFORM EDT-KEY-QHP
               PERFORM EDT-FLD-QHP
           ELSE
           IF PGM-ICLR = PGM-LIMPIAR-LLAVES
               PERFORM CLR-KEY-QHP
               PERFORM EDT-KEY-QHP
           ELSE
               PERFORM CLR-FLD-QHP
               PERFORM EDT-FLD-QHP.
           PERFORM SCR-PUTA.
           PERFORM SCR-EXIT.
       FIN-SCR-DMSG.
           EXIT.

       SCR-KEY SECTION.
       INI-SCR-KEY.
           PERFORM SCR-RST.
           PERFORM GET-KEY.
           IF FRM-STAT-ABT
                   MOVE SPACES TO FRM-MENS
                   PERFORM SCR-MSSG
                   GO TO FIN-SCR-KEY.
       FND-SCR-KEY.
           MOVE SPACES TO FRM-MENS.
           PERFORM FND-KEY.
           IF FIO-STAT-OKS
               PERFORM PUT-SCR
               MOVE PGM-LIMPIAR-TODO TO PGM-ICLR
               GO TO FIN-SCR-KEY.
      *JSS ELSE
      *        PERFORM CLR-FLD-QHP.
       ERR-SCR-KEY.
           MOVE PGM-LIMPIAR-CAMPOS TO PGM-ICLR.
           IF FRM-MENS NOT > SPACES
               IF FIO-STAT-EOF
                   MOVE 'REGEOF    ' TO MSG-COD-MENS
                   MOVE 'GNS' TO MSG-COD-SIST
                   PERFORM GET-MSG
                   MOVE MSG-GLS-DESC TO FRM-MENS
               ELSE
               IF FIO-STAT = FIO-STAT-NEX
                   MOVE 'REGNEX    ' TO MSG-COD-MENS
                   MOVE 'GNS' TO MSG-COD-SIST
                   PERFORM GET-MSG
                   MOVE MSG-GLS-DESC TO FRM-MENS
               ELSE
                   MOVE 'FIOSTAT' TO MSG-COD-TMSG
                   MOVE FIO-STAT  TO MSG-COD-CMSG
                   MOVE 'GNS'     TO MSG-COD-SIST
                   PERFORM GET-MSG
                   MOVE MSG-GLS-DESC TO FRM-MENS.
           PERFORM SCR-MSSG.
           MOVE SCR-STAT-ABT TO SCR-STAT.
       FIN-SCR-KEY.
           EXIT.

       SCR-RST SECTION.
       INI-SCR-RST.
           MOVE SPACES       TO PGM-ICLR.
           MOVE SPACES       TO SCR-ACTU.
           MOVE SCR-STPP     TO SCR-STAT.
           MOVE SCR-MFLD-NOT TO SCR-MFLD.
           MOVE LOW-VALUES   TO QHP-FLD.
       FIN-SCR-RST.
           EXIT.

       GET-KEY SECTION.
       INI-GET-KEY.
           PERFORM SCR-GKEY.
           IF FRM-STAT-ABT
               MOVE SCR-STAT-ABT TO SCR-STAT.
       FIN-GET-KEY.
           EXIT.

       GET-IKY SECTION.
       INI-GET-IKY.
           PERFORM SCR-GIKY.
           IF FRM-STAT-ABT
               MOVE SCR-STAT-ABT TO SCR-STAT.
       FIN-GET-IKY.
           EXIT.

       FND-KEY SECTION.
       INI-FND-KEY.
      *<<<< INI_FND_KEY
      * CMA-POS-ACT CONTIENE LA POSICION ALCANZADA AL LLENAR LA PANTALLA
           MOVE ZEROES TO CMA-POS-ACT.

      * ASUME MENSAJE DEL SISTEMA DEL HIJO EN ERRFNDKEY.SRC
           MOVE 1 TO WSS-IBUS, WSS-IBUS-GTP.

           IF FRM-FFLD = FRM-FFLD-PF5
               MOVE PGM-SNUL TO PGM-STAT-GDG
               MOVE PGM-SNUL TO PGM-STAT-GVT
               MOVE CMA-CLV-INI TO GAR-CLV-GTP-1 IN GTP
               MOVE 'N' TO CMA-1VEZ
               MOVE FIO-GET-LEQ TO FIO-CMND
               PERFORM GAR-FIO-GTP
               IF NOT FIO-STAT-OKS OR
                  GAR-CLV-GVT-1 IN GTP NOT = GAR-CLV-GVT-1 IN CMA-VARI
                   MOVE 'GTP    NEX' TO MSG-COD-MENS
                   GO TO ERR-FND-KEY
               ELSE
                   MOVE FIO-GET-PRV TO FIO-CMND
                   GO TO LEE-GTP
           ELSE
           IF FRM-FFLD = FRM-FFLD-PF6
               MOVE PGM-SNUL TO PGM-STAT-GDG
               MOVE PGM-SNUL TO PGM-STAT-GVT
               MOVE 'N' TO CMA-1VEZ
               MOVE CMA-CLV-FIN TO GAR-CLV-GTP-1 IN GTP
               MOVE FIO-GET-NLS TO FIO-CMND
               PERFORM GAR-FIO-GTP
               IF NOT FIO-STAT-OKS OR
                  GAR-CLV-GVT-1 IN GTP NOT = GAR-CLV-GVT-1 IN CMA-VARI
                   MOVE 'GTP    NEX' TO MSG-COD-MENS
                   GO TO ERR-FND-KEY
               ELSE
                   MOVE FIO-GET-NXT TO FIO-CMND
                   GO TO LEE-GTP.

      * INICIALIZA LLAVES INICIAL Y FINAL DE PANTALLA
           MOVE SPACES TO CMA-CLV-INI, CMA-CLV-FIN.
           MOVE 'S' TO CMA-1VEZ.
           MOVE FRM-FFLD-PF6 TO FRM-FFLD.

           MOVE ZEROES TO WSS-SUM-ITM, WSS-SUM-VAL.

           MOVE GVT-NUM-SIS IN QHP-FLD TO GAR-NUM-SIS IN GDG.
           MOVE GVT-COD-CRR IN QHP-FLD TO GAR-COD-CRR IN GDG.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM GAR-FIO-GDG.
           MOVE FIO-STAT TO PGM-STAT-GDG.
           IF NOT FIO-STAT-OKS
               MOVE 'GDG    NEX' TO MSG-COD-MENS
               GO TO ERR-FND-KEY.
       LEE-PAD-GVT.

      *BUSCA ULTIMA GVT
           IF GVT-COD-TSN IN QHP-FLD NOT > ZEROES
               MOVE GAR-COD-TSN IN GDG TO GVT-COD-TSN IN QHP-FLD.
      *>>>>
           PERFORM KEY-ALL-QHP.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM GAR-FIO-GVT.
           MOVE FIO-STAT TO PGM-STAT-GVT.
      *<<<< FIN_FND_KEY

           IF NOT FIO-STAT-OKS
               MOVE 'GVT    NEX' TO MSG-COD-MENS
               GO TO ERR-FND-KEY.


           MOVE GAR-CLV-GVT-1 IN GVT TO GAR-CLV-GVT-1 
                                        IN CMA-VARI.
           MOVE GAR-CLV-GVT-1 IN GVT TO GAR-CLV-GVT-1-INI
                                        IN CMA-VARI.

           MOVE GAR-CLV-GVT-1 IN GVT TO GAR-CLV-GVT-1 IN WSS-VARI.
           MOVE ZEROES                TO GAR-COD-ITM-TSN
                                        IN GAR-CLV-GTP-1 IN WSS-VARI.
           MOVE GAR-CLV-GTP-1 IN WSS-VARI TO GAR-CLV-GTP-1 IN GTP.
           MOVE FIO-GET-NLS TO FIO-CMND.
       LEE-GTP.
           PERFORM GAR-FIO-GTP.

           IF ( NOT FIO-STAT-OKS OR 
                GAR-CLV-GVT-1 IN GTP NOT = GAR-CLV-GVT-1 IN CMA-VARI )
              AND CMA-1VEZ = 'S'
               MOVE 'GTP    NEX' TO MSG-COD-MENS
               GO TO ERR-FND-KEY
           ELSE
           IF FRM-FFLD = FRM-FFLD-PF5 AND
              ( NOT FIO-STAT-OKS OR 
                GAR-CLV-GVT-1 IN GTP NOT = GAR-CLV-GVT-1 IN CMA-VARI )
               MOVE 'GTP    NOPRV' TO MSG-COD-MENS
               GO TO ERR-FND-KEY
           ELSE
           IF FRM-FFLD = FRM-FFLD-PF6 AND
              ( NOT FIO-STAT-OKS OR 
                GAR-CLV-GVT-1 IN GTP NOT = GAR-CLV-GVT-1 IN CMA-VARI )
               MOVE 'GTP    NONXT' TO MSG-COD-MENS
               GO TO ERR-FND-KEY.

       CARGA-GTP.

      *    INICIALIZA POSICION DEL INDICE DEL GRUPO DE OCURRENCIAS
           IF FRM-FFLD = FRM-FFLD-PF6
               MOVE ZEROES TO FRM-IFLD
           ELSE
               ADD 1 , WSS-IMAX GIVING FRM-IFLD.

           MOVE SPACES TO FRM-MENS.
           MOVE SPACES TO MSG-GLS-DESC.
           PERFORM PUT-TAB-GTP.
           IF CMA-POS-ACT = ZEROES AND FRM-FFLD = FRM-FFLD-PF5
               MOVE 'GTP    NOPRV' TO MSG-COD-MENS
               GO TO ERR-FND-KEY
           ELSE
           IF CMA-POS-ACT = ZEROES AND FRM-FFLD = FRM-FFLD-PF6
               MOVE 'GTP    NONXT' TO MSG-COD-MENS
               GO TO ERR-FND-KEY.

           IF FRM-FFLD = FRM-FFLD-PF6
               ADD 1 TO FRM-IFLD
               PERFORM LIM-RES-LIN UNTIL FRM-IFLD > WSS-IMAX.

      * MUEVE ACUMULADORES A QHP-FLD
           MOVE WSS-SUM-ITM TO FRM-SUM-ITM IN QHP-FLD.
           MOVE WSS-SUM-VAL TO FRM-SUM-VAL IN QHP-FLD.

           IF MSG-COD-MENS > SPACES
               MOVE 'GAR' TO FIO-SIST
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS.

           MOVE '00' TO FIO-STAT.
           GO TO FIN-FND-KEY.

       ERR-FND-KEY.
               MOVE 'GAR' TO MSG-COD-SIST.
           PERFORM GET-MSG.
           MOVE MSG-GLS-DESC TO FRM-MENS.
           MOVE SCR-STAT-CON TO SCR-STAT.
           MOVE '00' TO FIO-STAT.
           GO TO FIN-FND-KEY.
      *>>>>
      *>>>>
       FIN-FND-KEY.
           EXIT.
 
       PUT-SCR SECTION.
       INI-PUT-SCR.
           PERFORM PUT-ALL-QHP.
       FIN-PUT-SCR.
           EXIT.

       STP-EXIT SECTION.
       INI-STP-EXIT.
           MOVE SCR-PROG TO PGM-PROG.
           MOVE SCR-NTRN TO PGM-NTRN.

           MOVE SCR-PROV TO SCR-PROG.
           MOVE SCR-NTRV TO SCR-NTRN.

           MOVE PGM-PROG TO SCR-PROV
           MOVE PGM-NTRN TO SCR-NTRV.
       FIN-STP-EXIT.
           EXIT.

       SCR-EXIT SECTION.
       INI-SCR-EXIT.
           MOVE 'P'      TO SCR-ICMN.
           MOVE SCR-NTRN TO SYS-NTRN.
           MOVE SCR-VARI TO SYS-CMMA.
           MOVE SCR-TCMA TO SYS-TCMA.
           MOVE SYS-RTRN TO SYS-CMND.
           PERFORM GNS-PRO-SYS.
       FIN-SCR-EXIT.
           EXIT.

       SCR-PUTA SECTION.
       INI-SCR-PUTA.
           MOVE SCR-NMAP TO FRM-NAME.
           MOVE SCR-NLIB TO FRM-NLIB.
           MOVE QHP-FLD TO FRM-DFLD.
           MOVE FRM-PUT-ALL TO FRM-CMND.
           PERFORM GNS-PRO-FRM.
       FIN-SCR-PUTA.
           EXIT.

       SCR-MSSG SECTION.
       INI-SCR-MSSG.
           IF FRM-MEN1 NOT > SPACES
               MOVE SPACES TO FRM-MEN1.
           IF FRM-MEN2 NOT > SPACES
               MOVE SPACES TO FRM-MEN2.
           MOVE FRM-MENS TO QHP-GLS-MENS.
       FIN-SCR-MSSG.
           EXIT.

       SCR-GKEY SECTION.
       INI-SCR-GKEY.
           MOVE SCR-NMAP TO FRM-NAME.
           MOVE SCR-NLIB TO FRM-NLIB.
           MOVE FRM-GET-ALL TO FRM-CMND.
           PERFORM GNS-PRO-FRM.
           MOVE SPACES TO FRM-MENS.
           IF NOT ( FRM-FFLD = FRM-FFLD-RET  OR FRM-FFLD-PF10 OR
                               FRM-FFLD-PF12 OR FRM-FFLD-PF3 )
               MOVE 'PFSINV    ' TO MSG-COD-MENS
               MOVE 'GNS' TO MSG-COD-SIST
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS
               PERFORM FST-KEY-QHP
               PERFORM SCR-MSSG
               PERFORM SCR-PUTA
               PERFORM SCR-EXIT.
           MOVE FRM-DFLD TO QHP-FLD.
           IF FRM-STAT-ABT
               GO TO FIN-SCR-GKEY.
           MOVE FRM-SUAR-OKS TO FRM-SUAR.
           PERFORM VAL-NUM-KEY-QHP.
           IF FRM-SUAR EQUAL FRM-SUAR-MAL OR FRM-SUAR-CLR
               PERFORM SCR-MSSG
               PERFORM EDT-KEY-QHP
               PERFORM SCR-PUTA
               PERFORM SCR-EXIT.
      *JSS
           PERFORM CLR-FLD-QHP.
           PERFORM VAL-IKY-QHP.
           IF FRM-SUAR EQUAL FRM-SUAR-MAL OR FRM-SUAR-CLR
               GO TO ERR-SCR-GKEY.
           PERFORM VAL-MKY-QHP.
           IF FRM-SUAR EQUAL FRM-SUAR-MAL OR FRM-SUAR-CLR
               GO TO ERR-SCR-GKEY.
           PERFORM VAL-AKY-QHP.
           IF FRM-SUAR EQUAL FRM-SUAR-MAL OR FRM-SUAR-CLR
               GO TO ERR-SCR-GKEY.
           PERFORM VAL-CON-KEY-QHP.
           IF NOT ( FRM-SUAR EQUAL FRM-SUAR-MAL OR FRM-SUAR-CLR )
               GO TO FIN-SCR-GKEY.
           IF FRM-UCUR NOT > SPACES
               PERFORM FST-KEY-QHP.
       ERR-SCR-GKEY.
           PERFORM SCR-MSSG.
           PERFORM EDT-KEY-QHP.
           PERFORM SCR-PUTA.
           PERFORM SCR-EXIT.
       FIN-SCR-GKEY.
           PERFORM SCR-MSSG.

       SCR-GIKY SECTION.
       INI-SCR-GIKY.
           MOVE SCR-NMAP TO FRM-NAME.
           MOVE SCR-NLIB TO FRM-NLIB.
           MOVE FRM-GET-ALL TO FRM-CMND.
           PERFORM GNS-PRO-FRM.
           MOVE SPACES TO FRM-MENS.
           IF NOT ( FRM-FFLD = FRM-FFLD-RET  OR FRM-FFLD-PF10 OR
                               FRM-FFLD-PF12 OR FRM-FFLD-PF3 )
               MOVE 'PFSINV    ' TO MSG-COD-MENS
               MOVE 'GNS' TO MSG-COD-SIST
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS
               PERFORM FST-KEY-QHP
               PERFORM SCR-MSSG
               PERFORM SCR-PUTA
               PERFORM SCR-EXIT.
           MOVE FRM-DFLD TO QHP-FLD.
           IF FRM-STAT-ABT
               GO TO FIN-SCR-GIKY.
           MOVE FRM-SUAR-OKS TO FRM-SUAR.
           PERFORM VAL-NUM-KEY-QHP.
           IF FRM-SUAR EQUAL FRM-SUAR-MAL OR FRM-SUAR-CLR
               PERFORM SCR-MSSG
               PERFORM EDT-IKY-QHP
               PERFORM SCR-PUTA
               PERFORM SCR-EXIT.
      *JSS
           PERFORM CLR-FLD-QHP.
           PERFORM VAL-IKY-QHP.
           IF FRM-SUAR EQUAL FRM-SUAR-MAL OR FRM-SUAR-CLR
               GO TO ERR-SCR-GIKY.
           PERFORM VAL-CON-IKY-QHP.
           IF NOT ( FRM-SUAR EQUAL FRM-SUAR-MAL OR FRM-SUAR-CLR )
               GO TO FIN-SCR-GIKY.
           IF FRM-UCUR NOT > SPACES
               PERFORM FST-KEY-QHP.
       ERR-SCR-GIKY.
           PERFORM SCR-MSSG.
           PERFORM EDT-IKY-QHP.
           PERFORM SCR-PUTA.
           PERFORM SCR-EXIT.
       FIN-SCR-GIKY.
           PERFORM SCR-MSSG.

       GET-CON SECTION.
       INI-GET-CON.
           MOVE SCR-NMAP TO FRM-NAME.
           MOVE SCR-NLIB TO FRM-NLIB.
           MOVE FRM-GET-ALL TO FRM-CMND.
           PERFORM GNS-PRO-FRM.
           IF NOT ( FRM-FFLD = FRM-FFLD-RET  OR FRM-FFLD-PF10 OR
                               FRM-FFLD-PF12 OR FRM-FFLD-PF3 )
      *<<<< PFS_GET_CON OR PFS_GET_ACC
           IF NOT ( FRM-FFLD = FRM-FFLD-PF6
                          OR   FRM-FFLD-PF5
                  )
      *>>>>
               MOVE 'PFSINV    ' TO MSG-COD-MENS
               MOVE 'GNS' TO MSG-COD-SIST
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO QHP-GLS-MEN2
               MOVE SCR-PRMT     TO QHP-GLS-MEN1
               PERFORM FST-MSG
               PERFORM SCR-PUTA
               PERFORM SCR-EXIT.
           MOVE FRM-DFLD TO QHP-FLD.
       FIN-GET-CON.
           MOVE SCR-STAT-CON TO SCR-STAT.

       CLR-MSG SECTION.
       INI-CLR-MSG.
           MOVE SPACES TO QHP-GLS-MENS.
       FIN-CLR-MSG.
           EXIT.

       HBL-IKY SECTION.
       INI-HBL-IKY.
           IF SCR-DESDE-CMN
               MOVE QHP-GLS-MENS TO FRM-MENS
               MOVE LOW-VALUES TO QHP-FLD
               IF FRM-MENS < SPACES
                   MOVE LOW-VALUES TO QHP-GLS-MENS
               ELSE
                   MOVE FRM-MENS TO QHP-GLS-MENS.
           MOVE FRM-CPSF-AEY TO FRM-CPIM-AEY.
           PERFORM PRO-MKY-QHP.
           PERFORM PRO-AKY-QHP.
           PERFORM UNP-IKY-QHP.
           PERFORM FST-KEY-QHP.
           MOVE '1' TO FRM-CPIM-AEY.
       FIN-HBL-IKY.
           EXIT.

       HBL-KEY SECTION.
       INI-HBL-KEY.
           IF SCR-DESDE-CMN
               MOVE QHP-GLS-MENS TO FRM-MENS
               MOVE LOW-VALUES TO QHP-FLD
               IF FRM-MENS < SPACES
                   MOVE LOW-VALUES TO QHP-GLS-MENS
               ELSE
                   MOVE FRM-MENS TO QHP-GLS-MENS.
           MOVE FRM-CPSF-AEY TO FRM-CPIM-AEY.
           PERFORM UNP-KEY-QHP.
           PERFORM FST-KEY-QHP.
           MOVE '1' TO FRM-CPIM-AEY.
       FIN-HBL-KEY.
           EXIT.

       HBL-FLD SECTION.
       INI-HBL-FLD.
           PERFORM PRO-IKY-QHP.
           PERFORM PRO-AKY-QHP.
           PERFORM UNP-MKY-QHP.
           PERFORM UNP-FLD-QHP.
           PERFORM FST-FLD-QHP.
       FIN-HBL-FLD.
           EXIT.

       FST-MSG SECTION.
       INI-FST-MSG.
           MOVE -1 TO QHP-GLS-MENS-LEN.
       FIN-FST-MSG.
           EXIT.

       PRO-ALL SECTION.
       INI-PRO-ALL.
           PERFORM PRO-KEY-QHP.
           PERFORM FST-MSG.
       FIN-PRO-ALL.
           EXIT.

       SCR-TRL SECTION.
       INI-SCR-TRL.
           IF FRM-MEN1 NOT > SPACES
               MOVE SCR-PRMT TO FRM-MEN1.
           IF SCR-STAT = SCR-STAT-MOD
               MOVE SCR-INST-GFL TO SCR-INST
               PERFORM HBL-FLD
               PERFORM SCR-MSSG
               PERFORM EDT-KEY-QHP
               PERFORM EDT-FLD-QHP
               PERFORM SCR-PUTA
               PERFORM STP-EXIT
               PERFORM SCR-EXIT.
           IF SCR-STAT = SCR-STAT-SON
               MOVE SCR-INST-GCS TO SCR-INST
               PERFORM PRO-ALL
               PERFORM SCR-MSSG
               PERFORM EDT-KEY-QHP
               PERFORM EDT-FLD-QHP
               PERFORM SCR-PUTA
               PERFORM STP-EXIT
               PERFORM SCR-EXIT.
      *ASUME SCR-STAT-CON.
           MOVE SCR-STAT-CON TO SCR-STAT.
           MOVE SCR-INST-GAB TO SCR-INST.
      *    MOVE FRM-CPSF-AEY TO FRM-CPIM-AEY.
           PERFORM PRO-ALL.
           PERFORM SCR-MSSG.
           PERFORM EDT-KEY-QHP.
           PERFORM EDT-FLD-QHP.
           PERFORM SCR-PUTA.
           PERFORM SCR-EXIT.
       FIN-SCR-TRL.
           EXIT.

       DESSCRTRL SECTION.
       INI-DESSCRTRL.
           MOVE SCR-VFLD-NOT TO SCR-VFLD.
           MOVE FRM-FFLD TO SCR-FFLD.
       FIN-DESSCRTRL.
           IF SCR-FFLD-PF10 OR SCR-FFLD-PF3
                 MOVE SCR-INST-HCM TO SCR-INST
           ELSE
                 MOVE SCR-INST-HKY TO SCR-INST.
       EXT-DESSCRTRL.
           EXIT.

       COPY GARBQQHP.
       COPY GNSBVNUM.
       COPY GARBFGVT.
       COPY GNSBFMSG.
       COPY GNSBGSYS.
       COPY GNSBGDTC.
       COPY GNSBGFRM.
       COPY GNSBGMSG.
       COPY GNSBEKEY.
       COPY GNSBIABT.
       COPY GNSBBTAB.
       COPY GNSBFTAB.
       COPY GNSBEGLS.
       COPY TABBBOFI.
       COPY TABBFOFI.

      *<<<< EOF
       RST-STAT SECTION.
       INI-RST-STAT.
           MOVE SCR-STPP     TO SCR-STAT.
           MOVE SCR-MFLD-NOT TO SCR-MFLD.
       FIN-RST-STAT.
           EXIT.
      *>>>>
      *<<<< EOF
       PUT-TAB-GTP SECTION.
       INI-PUT-TAB-GTP.


           ADD 1 TO CMA-POS-ACT.
      *FLB BFA 24-05-1993
           IF FRM-FFLD = FRM-FFLD-PF6
               GO TO PUT-PF6.

           SUBTRACT 1 FROM FRM-IFLD.
           IF FRM-IFLD = 1
               MOVE GAR-COD-ITM-TSN IN GTP TO 
                    GAR-COD-ITM-TSN-INI IN CMA-CLV-INI
           ELSE
               IF FRM-IFLD = WSS-IMAX
                   MOVE GAR-COD-ITM-TSN IN GTP TO 
                        GAR-COD-ITM-TSN-FIN IN CMA-CLV-FIN.
           GO TO MOV-FLD.

       PUT-PF6.

           IF CMA-1VEZ = 'S' AND CMA-POS-ACT > WSS-IMAX
      *    SOLO ACUMULA, SIN DESPLEGAR
               GO TO DSPL-O-ACUM.

           ADD 1 TO FRM-IFLD.
           IF FRM-IFLD = 1
               MOVE GAR-COD-ITM-TSN IN GTP TO 
                    GAR-COD-ITM-TSN-INI IN CMA-CLV-INI
               MOVE GAR-COD-ITM-TSN IN GTP TO 
                    GAR-COD-ITM-TSN-FIN IN CMA-CLV-FIN
           ELSE
           IF FRM-IFLD NOT > WSS-IMAX
               MOVE GAR-COD-ITM-TSN IN GTP TO 
                    GAR-COD-ITM-TSN-FIN IN CMA-CLV-FIN.
       MOV-FLD.

           MOVE GAR-COD-ITM-TSN IN GTP TO
                    FRM-COD-ITM-TSN IN QHP-FLD(FRM-IFLD).
           MOVE GAR-IDN-ITM-TSN IN GTP TO
                    FRM-IDN-ITM-TSN IN QHP-FLD(FRM-IFLD).
           MOVE GAR-CTD-ITM-TSN IN GTP TO
                    FRM-CTD-ITM-TSN IN QHP-FLD(FRM-IFLD).
           MOVE GAR-VAL-UNT-ITM IN GTP TO
                    FRM-VAL-UNT-ITM IN QHP-FLD(FRM-IFLD).
           MOVE GAR-FA-CMB-EST  IN GTP TO
                    FRM-FA-CMB-EST  IN QHP-FLD(FRM-IFLD).
           MOVE GAR-FM-CMB-EST  IN GTP TO
                    FRM-FM-CMB-EST  IN QHP-FLD(FRM-IFLD).
           MOVE GAR-FD-CMB-EST  IN GTP TO
                    FRM-FD-CMB-EST  IN QHP-FLD(FRM-IFLD).


      *BUS-TAB busca glosa de codigo en tabla
           IF GAR-COD-EST-ITM IN GTP > SPACES
               MOVE 'GAR' TO TAB-COD-SIST
               MOVE 'ES1' TO TAB-COD-TTAB IN TAB
               MOVE GAR-COD-EST-ITM IN GTP TO TAB-COD-CTAB IN TAB
               PERFORM BUS-TAB
               MOVE TAB-GLS-ABRV IN TAB TO
                    FRM-GLS-EST-ITM IN QHP-FLD(FRM-IFLD)
           ELSE
               MOVE SPACES TO FRM-GLS-EST-ITM IN QHP-FLD(FRM-IFLD).

       DSPL-O-ACUM.
           IF CMA-1VEZ NOT = 'S'
               GO TO NXT-PUT-TAB-GTP.
           IF GAR-COD-EST-ITM IN GTP > '09' AND
              GAR-COD-EST-ITM IN GTP < '20'

               ADD 1 TO WSS-SUM-ITM
               COMPUTE WSS-SUM-VAL = WSS-SUM-VAL +
                                     GAR-CTD-ITM-TSN IN GTP *
                                     GAR-VAL-UNT-ITM IN GTP.

       NXT-PUT-TAB-GTP.
           IF FRM-FFLD = FRM-FFLD-PF5 
               IF FRM-IFLD > 1
                   MOVE FIO-GET-PRV TO FIO-CMND
               ELSE
                   GO TO FIN-PUT-TAB-GTP
           ELSE
           IF CMA-1VEZ NOT = 'S'
               IF FRM-IFLD < WSS-IMAX
                   MOVE FIO-GET-NXT TO FIO-CMND
               ELSE
                   GO TO FIN-PUT-TAB-GTP
           ELSE
               MOVE FIO-GET-NXT TO FIO-CMND.

           PERFORM GAR-FIO-GTP.
           MOVE GAR-CLV-GTP-1 IN GTP TO GAR-CLV-GTP-1 IN WSS-VARI.
           IF FIO-STAT-OKS AND
               GAR-CLV-GVT-1 IN CMA-VARI = GAR-CLV-GVT-1 IN WSS-VARI
               GO TO INI-PUT-TAB-GTP.

       FIN-PUT-TAB-GTP.
           EXIT.

       LIM-RES-LIN SECTION.
       INI-LIM-RES-LIN.
           MOVE SPACES TO FRM-IDN-ITM-TSN IN QHP-FLD(FRM-IFLD), 
                          FRM-GLS-EST-ITM IN QHP-FLD(FRM-IFLD).

           MOVE ZEROES TO FRM-COD-ITM-TSN IN QHP-FLD(FRM-IFLD), 
                          FRM-CTD-ITM-TSN IN QHP-FLD(FRM-IFLD), 
                          FRM-VAL-UNT-ITM IN QHP-FLD(FRM-IFLD), 
                          FRM-FA-CMB-EST  IN QHP-FLD(FRM-IFLD), 
                          FRM-FM-CMB-EST  IN QHP-FLD(FRM-IFLD), 
                          FRM-FD-CMB-EST  IN QHP-FLD(FRM-IFLD).
           ADD 1 TO FRM-IFLD.
       FIN-LIM-RES-LIN.
           EXIT.

       COPY GARBFGDG.
       COPY GARBFGTP.
       COPY GARBFTAG.
      *>>>>
