       IDENTIFICATION DIVISION.
      *========================
       PROGRAM-ID.   GARPQGXD.
       AUTHOR.       CONSIST.
       DATE-WRITTEN. 20-Sep-94 09:24 AM.

      * NOMBRE PROGRAMA                   GARPQGXD
      * VERSION                           3.1
      * OPCION                            CON
      * ARCHIVO BASE                      GARGDD
      * PANTALLA                          GARGXD
      * INP/OUT                           DATACOM
      * TAMANO COMMAREA                   250


       ENVIRONMENT DIVISION.
      *=====================
       CONFIGURATION SECTION.
      *----------------------
       SPECIAL-NAMES.
               DECIMAL-POINT IS COMMA.

       DATA DIVISION.
      *==============

       WORKING-STORAGE SECTION.
      *------------------------
      * COPY GNSWGSCR.
       COPY GNSWCSCR.
       COPY GNSWVSCR.
      *<<<< FIN_SCR_VARI

           03 CMA-VARI.
              05  CMA-POS-ACT            COMP         PIC S9(04).
              05  CMA-CLV-INI.
                  07 DBC-KEY-IDBC-INI                 PIC X(12).
                  07 GAR-CLV-GDD-2-INI                 PIC X(12).
              05  CMA-CLV-FIN.
                  07 DBC-KEY-IDBC                     PIC X(12).
                  07 GAR-CLV-GDD-2-FIN                 PIC X(12).
              05  CMA-1VEZ                            PIC X(01).
      *>>>>
              05  WSS-IND-TIP-STP                        PIC 9(01).
              05  WSS-COD-PESO                           PIC X(06).
              05  WSS-VAL-CML-TSN        COMP-3          PIC S9(11).
              05  WSS-VAL-LIQ-TSN        COMP-3          PIC S9(11).
              05  WSS-VAL-PON            COMP-3          PIC S9(11).
              05  WSS-REA-CML            COMP-3          PIC S9(11).
              05  WSS-REA-LIQ            COMP-3          PIC S9(11).
              05  WSS-REA-PON            COMP-3          PIC S9(11).
              05  WSS-NRE-CML            COMP-3          PIC S9(11).
              05  WSS-NRE-LIQ            COMP-3          PIC S9(11).
              05  WSS-NRE-PON            COMP-3          PIC S9(11).
              05  WSS-GEN-CML            COMP-3          PIC S9(11).
              05  WSS-GEN-LIQ            COMP-3          PIC S9(11).
              05  WSS-GEN-PON            COMP-3          PIC S9(11).
              05  WSS-ESP-CML            COMP-3          PIC S9(11).
              05  WSS-ESP-LIQ            COMP-3          PIC S9(11).
              05  WSS-ESP-PON            COMP-3          PIC S9(11).
      *>>>>
       COPY GARWIGXD.

       COPY GARBRGDD.


       COPY GNSWVIDD.
       COPY GNSWGRQA.
       COPY GNSWGUIB.
       COPY GNSWGELS.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-GDD-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-TAB-REQA==.
       COPY GNSBRTAB.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-MSC-REQA==.
       COPY GNSBRMSC.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-MSG-REQA==.
       COPY GNSBRMSG.
       COPY GNSWCFIO.
       COPY GNSWVFIO.
       COPY GNSWGFRM.
       COPY GNSWVNUM.
       COPY GNSWCNUM.
       COPY GNSWCVRF.
       COPY GNSWVVRF.
       COPY GNSWGIDC.
       COPY GNSWGSYS.

      *<<<< WSS
       COPY GARBRGDG.
       COPY GARBRGDO.
       COPY GARBRGES.
       COPY GARBRGSE.
       COPY GARBRGVT.
       COPY GARBRTAG.
       COPY SGCBRDBC.
      *<<<< NOT PGM_BFA
       COPY DEUBRFIA.
      *>>>>
      *<<<< NOT PGM_PER
       COPY DAPBROPD.
      *>>>>
       COPY TABBRCAM.
       COPY GNSWGCPT.
       COPY GNSWGSTR.
       COPY GNSWGFEC.
       COPY GNSWGHOY.
      *<<<< NOT PGM_PER
       COPY GNSWGINT.
      *>>>>
       COPY GNSWGPES.

      * DEFINE 01  WSS-VARI DE PGM1ANIDX
       01  WSS-VARI.
           03  WSS-IMAX               VALUE 8      PIC 9(02).
           03  GAR-CLV-GDD-1.
               05 DBC-KEY-IDBC                        PIC X(12).
               05 GAR-CLV-GDD-2                        PIC X(12).
      * PARA USAR GARSRC:ERRFNDKEY.SRC
           03  WSS-IBUS                               PIC 9(01).
           03  WSS-IBUS-GDD                           PIC 9(01).
      *>>>>
       COPY GARWGEXV.
           03 PGM-STAT-ADI.
              05 PGM-STAT-GDD.
                 88 PGM-STAT-GDD-NUL    VALUE '  '.
                 07 PGM-STT1-GDD        VALUE '2' PIC X(01).
                    88 PGM-STAT-GDD-OKS VALUE '0'.
                 07 PGM-STT2-GDD        VALUE '3' PIC X(01).
           03 WSS-COD-LIM                VALUE SPACE     PIC X(01).
           03 WSS-COD-REAL               VALUE SPACE     PIC X(01).

      *<<<< NOT PGM_PER
       COPY GARWGDAP.
      *>>>>
       COPY GARWGVCR.
      *>>>>
      *<<<< WSS_DTC
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-GDG-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-GDO-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-GES-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-GSE-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-GVT-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-TAG-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-DBC-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-FIA-REQA==.
      *<<<< NOT PGM_PER
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-OPD-REQA==.
      *>>>>
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-CAM-REQA==.
      *>>>>
       01  PGM-VARI.
           03 PGM-ICLR                  VALUE ' '       PIC X(01).
           03 PGM-LIMPIAR-TODO          VALUE ' '       PIC X(01).
           03 PGM-LIMPIAR-LLAVES        VALUE 'K'       PIC X(01).
           03 PGM-LIMPIAR-CAMPOS        VALUE 'F'       PIC X(01).
           03 PGM-NO-LIMPIAR-NADA       VALUE 'N'       PIC X(01).
           03 PGM-PROG                                  PIC X(08).
           03 PGM-NTRN                                  PIC X(04).
           03 PGM-STAT.
              05 PGM-STAT-DBC.
                 88 PGM-STAT-DBC-NUL    VALUE '  '.
                 07 PGM-STT1-DBC        VALUE '2' PIC X(01).
                    88 PGM-STAT-DBC-OKS VALUE '0'.
                 07 PGM-STT2-DBC        VALUE '3' PIC X(01).
           03 PGM-SRNF                  VALUE '23'      PIC X(02).
           03 PGM-SOKS                  VALUE '00'      PIC X(02).
           03 PGM-SNUL                  VALUE '  '      PIC X(02).
           03 PGM-SUAR                  VALUE SPACES    PIC X(15).

       LINKAGE SECTION.
      *----------------
       01  DFHCOMMAREA.
           02 FILLER                    PIC X(430).
       COPY GNSLGFIO.

       PROCEDURE DIVISION.
      *===================

       MAIN SECTION.
       INI-MAIN.
           PERFORM INI.
       LUP-MAIN.
           IF SCR-INST = SCR-INST-HCM
                 PERFORM SCR-COM.
           IF SCR-CCPP = 'ACC'
                 PERFORM SCR-ACC
           ELSE
                 MOVE SCR-INST-HCM TO SCR-INST.
           GO TO LUP-MAIN.
       FIN-MAIN.
           EXIT.

       INI SECTION.
       INI-INI.
       COPY GNSBGEIB.
       COPY GNSBGEDB.
           MOVE LOW-VALUES TO GXD-FLD.
           MOVE LOW-VALUES TO GXD-EDT.
           PERFORM GNS-PRO-RCK.
           PERFORM GNS-BUS-VCA.
           MOVE +430 TO SCR-TCMA.
           PERFORM GNS-HDL-SYS.
           PERFORM GNS-HDL-FRM.
           MOVE 'GARPQGXD' TO FIO-PROG.
           PERFORM GNS-BUS-IDD.
      *<<<< INI_FIO
      * Obtiene Codigo Valor de Cambio de Pesos Mediante CIC de la Moneda '0999'
           MOVE 'TAB'          TO FIO-SIST.
           MOVE 'VLR'          TO TAB-CIC-TTAB IN TAB.
           MOVE '0999  '       TO TAB-CIC-CTAB IN TAB.
           MOVE 'TAB-CIC-TABL' TO FIO-AKEY.
           MOVE FIO-GET-KEY    TO FIO-CMND.
           PERFORM GNS-FIO-TAB.
           IF NOT FIO-STAT-OKS
               MOVE 'TAB'          TO MSG-COD-SIST
               MOVE 'CIC0999  NEX' TO MSG-COD-MENS
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS
               PERFORM PRG-ABT
           ELSE
           MOVE TAB-COD-CTAB IN TAB TO WSS-COD-PESO IN CMA-VARI.



      * OBTIENE CIC DE CODIGO GARANTIA ESPECIFICA
           MOVE 'GAR'          TO FIO-SIST.
           MOVE 'LIM'          TO TAB-CIC-TTAB IN TAB.
           MOVE 'E'            TO TAB-CIC-CTAB IN TAB.
           MOVE 'TAB-CIC-TABL' TO FIO-AKEY.
           MOVE FIO-GET-KEY    TO FIO-CMND.
           PERFORM GNS-FIO-TAB.
           IF NOT FIO-STAT-OKS
               MOVE 'GAR'          TO MSG-COD-SIST
               MOVE 'CICESP  NEX'  TO MSG-COD-MENS
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS
               PERFORM PRG-ABT.
           MOVE TAB-COD-CTAB IN TAB TO WSS-COD-LIM IN WSS-VARI.

      * OBTIENE CIC DE GARANTIA REAL
           MOVE 'GAR'          TO FIO-SIST.
           MOVE 'RAL'          TO TAB-CIC-TTAB IN TAB.
           MOVE 'R'            TO TAB-CIC-CTAB IN TAB.
           MOVE 'TAB-CIC-TABL' TO FIO-AKEY.
           MOVE FIO-GET-KEY    TO FIO-CMND.
           PERFORM GNS-FIO-TAB.
           IF NOT FIO-STAT-OKS
               MOVE 'GAR'          TO MSG-COD-SIST
               MOVE 'CICRAL  NEX'  TO MSG-COD-MENS
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS
               PERFORM PRG-ABT.
           MOVE TAB-COD-CTAB IN TAB TO WSS-COD-REAL IN WSS-VARI.

      *>>>>
       FIN-INI.
           EXIT.

       COPY GNSBHSYS.
       COPY GNSBHFRM.
       COPY GNSBPRCK.
       COPY GNSBBVCA.
       COPY GNSBBIDD.

       SCR-COM SECTION.
       INI-SCR-COM.
           MOVE FRM-CPSF-AEY TO FRM-CPIM-AEY.
           PERFORM PRO-ALL.
           PERFORM SCR-CLRA-GXD.
           PERFORM EDT-KEY-GXD.
           PERFORM EDT-FLD-GXD.
           PERFORM SCR-PUTA.
           MOVE SCR-INST-HCM TO SCR-INST.
           MOVE SCR-CMNP     TO SYS-PROG.
           MOVE SCR-VARI     TO SYS-CMMA.
           MOVE SCR-TCMA     TO SYS-TCMA.
           MOVE SYS-XCTL     TO SYS-CMND.
           PERFORM GNS-PRO-SYS.
       XCT-ERR.
           MOVE 'XCTERR    ' TO MSG-COD-MENS.
           MOVE 'GNS'        TO MSG-COD-SIST.
           PERFORM GET-MSG.
           MOVE MSG-GLS-DESC TO SYS-MEN1.
           MOVE SYS-PROG     TO SYS-MEN2.
           MOVE SYS-ABOR     TO SYS-CMND.
           PERFORM GNS-PRO-SYS.
       COPY GNSBGGBK.
       FIN-SCR-COM.
           EXIT.



       SCR-ACC SECTION.
       INI-SCR-ACC.
           IF SCR-INST = SCR-INST-HKY
               MOVE SCR-INST-GKY TO SCR-INST
               PERFORM HBL-KEY
               PERFORM SCR-DMSG
           ELSE
           IF SCR-INST = SCR-INST-GKY
                PERFORM SCR-KEY
                IF SCR-STAT NOT = SCR-STAT-ABT
                        PERFORM SCR-TRL
                ELSE
                        PERFORM DESSCRTRL
                        GO TO FIN-SCR-ACC
           ELSE
           IF SCR-INST = SCR-INST-GAB
                PERFORM GET-CON
           ELSE
           IF SCR-INST = SCR-INST-BRW
               MOVE SCR-FFLD TO FRM-FFLD
               PERFORM BRW-SCR-ACC.
           PERFORM DESSCRTRL.
      *<<<< PFS_SCR_ACC
           IF FRM-FFLD = FRM-FFLD-PF6
                    OR   FRM-FFLD-PF5
               PERFORM VAL-NUM-KEY-GXD
               PERFORM VAL-NUM-FLD-GXD
               PERFORM RST-STAT
               PERFORM FND-SCR-KEY THRU FIN-SCR-KEY
               IF SCR-STAT NOT = SCR-STAT-ABT
                   PERFORM SCR-TRL
               ELSE
                   PERFORM DESSCRTRL
                   GO TO FIN-SCR-ACC.
      *>>>>
           MOVE SPACES TO FRM-MENS.
           PERFORM SCR-MSSG.
       FIN-SCR-ACC.
           EXIT.

       BRW-SCR-ACC SECTION.
       INI-BRW-SCR-ACC.
       FIN-BRW-SCR-ACC.
           EXIT.




       SCR-DMSG SECTION.
       INI-SCR-DMSG.
           IF PGM-ICLR = PGM-NO-LIMPIAR-NADA
               NEXT SENTENCE
           ELSE
           IF PGM-ICLR = PGM-LIMPIAR-TODO
               PERFORM SCR-CLRA-GXD
               PERFORM EDT-KEY-GXD
               PERFORM EDT-FLD-GXD
           ELSE
           IF PGM-ICLR = PGM-LIMPIAR-LLAVES
               PERFORM CLR-KEY-GXD
               PERFORM EDT-KEY-GXD
           ELSE
               PERFORM CLR-FLD-GXD
               PERFORM EDT-FLD-GXD.
           PERFORM SCR-PUTA.
           PERFORM SCR-EXIT.
       FIN-SCR-DMSG.
           EXIT.

       SCR-KEY SECTION.
       INI-SCR-KEY.
           PERFORM SCR-RST.
           PERFORM GET-KEY.
           IF FRM-STAT-ABT
                   MOVE SPACES TO FRM-MENS
                   PERFORM SCR-MSSG
                   GO TO FIN-SCR-KEY.
       FND-SCR-KEY.
           MOVE SPACES TO FRM-MENS.
           PERFORM FND-KEY.
           IF FIO-STAT-OKS
               PERFORM PUT-SCR
               MOVE PGM-LIMPIAR-TODO TO PGM-ICLR
               GO TO FIN-SCR-KEY.
      *JSS ELSE
      *        PERFORM CLR-FLD-GXD.
       ERR-SCR-KEY.
           MOVE PGM-LIMPIAR-CAMPOS TO PGM-ICLR.
           IF FRM-MENS NOT > SPACES
               IF FIO-STAT-EOF
                   MOVE 'REGEOF    ' TO MSG-COD-MENS
                   MOVE 'GNS' TO MSG-COD-SIST
                   PERFORM GET-MSG
                   MOVE MSG-GLS-DESC TO FRM-MENS
               ELSE
               IF FIO-STAT = FIO-STAT-NEX
                   MOVE 'REGNEX    ' TO MSG-COD-MENS
                   MOVE 'GNS' TO MSG-COD-SIST
                   PERFORM GET-MSG
                   MOVE MSG-GLS-DESC TO FRM-MENS
               ELSE
                   MOVE 'FIOSTAT' TO MSG-COD-TMSG
                   MOVE FIO-STAT  TO MSG-COD-CMSG
                   MOVE 'GNS'     TO MSG-COD-SIST
                   PERFORM GET-MSG
                   MOVE MSG-GLS-DESC TO FRM-MENS.
           PERFORM SCR-MSSG.
           MOVE SCR-STAT-ABT TO SCR-STAT.
       FIN-SCR-KEY.
           EXIT.

       SCR-RST SECTION.
       INI-SCR-RST.
           MOVE SPACES       TO PGM-ICLR.
           MOVE SPACES       TO SCR-ACTU.
           MOVE SCR-STPP     TO SCR-STAT.
           MOVE SCR-MFLD-NOT TO SCR-MFLD.
           MOVE LOW-VALUES   TO GXD-FLD.
       FIN-SCR-RST.
           EXIT.

       GET-KEY SECTION.
       INI-GET-KEY.
           PERFORM SCR-GKEY.
           IF FRM-STAT-ABT
               MOVE SCR-STAT-ABT TO SCR-STAT.
       FIN-GET-KEY.
           EXIT.

       GET-IKY SECTION.
       INI-GET-IKY.
           PERFORM SCR-GIKY.
           IF FRM-STAT-ABT
               MOVE SCR-STAT-ABT TO SCR-STAT.
       FIN-GET-IKY.
           EXIT.

       FND-KEY SECTION.
       INI-FND-KEY.
      *<<<< INI_FND_KEY
           PERFORM GET-FHOY.
      * CMA-POS-ACT CONTIENE LA POSICION ALCANZADA AL LLENAR LA PANTALLA
           MOVE ZEROES TO CMA-POS-ACT.

      * ASUME MENSAJE DEL SISTEMA DEL HIJO EN ERRFNDKEY.SRC
           MOVE 1 TO WSS-IBUS, WSS-IBUS-GDD.

           IF FRM-FFLD = FRM-FFLD-PF5
               MOVE CMA-CLV-INI TO GAR-CLV-GDD-1 IN GDD
               MOVE 'N' TO CMA-1VEZ
               MOVE FIO-GET-LEQ TO FIO-CMND
               PERFORM GAR-FIO-GDD
               IF NOT FIO-STAT-OKS OR
                  GDD-CIC-ICLI IN GDD NOT = DBC-KEY-IDBC IN CMA-VARI
                   MOVE 'GDD    NEX' TO MSG-COD-MENS
                   GO TO ERR-FND-KEY
               ELSE
                   MOVE FIO-GET-PRV TO FIO-CMND
                   GO TO LEE-GDD
           ELSE
           IF FRM-FFLD = FRM-FFLD-PF6
               MOVE 'N' TO CMA-1VEZ
               MOVE CMA-CLV-FIN TO GAR-CLV-GDD-1 IN GDD
               MOVE FIO-GET-NLS TO FIO-CMND
               PERFORM GAR-FIO-GDD
               IF NOT FIO-STAT-OKS OR
                  GDD-CIC-ICLI IN GDD NOT = DBC-KEY-IDBC IN CMA-VARI
                   MOVE 'GDD    NEX' TO MSG-COD-MENS
                   GO TO ERR-FND-KEY
               ELSE
                   MOVE FIO-GET-NXT TO FIO-CMND
                   GO TO LEE-GDD.

      * INICIALIZA LLAVES INICIAL Y FINAL DE PANTALLA
           MOVE SPACES TO CMA-CLV-INI, CMA-CLV-FIN.
           MOVE 'S' TO CMA-1VEZ.
           MOVE FRM-FFLD-PF6 TO FRM-FFLD.

      *<<<< INIVAR 

           IF FRM-TIP-OPE IN GXD-FLD NOT > SPACES
               MOVE SPACES TO FRM-TIP-OPE IN GXD-FLD.
           IF FRM-STP-OPE IN GXD-FLD NOT > SPACES
               MOVE SPACES TO FRM-STP-OPE IN GXD-FLD.

      * LIMPIA ACUMULADORES
              MOVE ZEROES TO WSS-REA-CML, WSS-REA-LIQ, WSS-REA-PON,
                             WSS-NRE-CML, WSS-NRE-LIQ, WSS-NRE-PON.
              MOVE ZEROES TO WSS-GEN-CML, WSS-GEN-LIQ, WSS-GEN-PON,
                             WSS-ESP-CML, WSS-ESP-LIQ, WSS-ESP-PON.

      *>>>>
           GO TO LEE-PAD-DBC.
      *>>>>
           PERFORM KEY-ALL-GXD.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM GAR-FIO-GDD.
           MOVE FIO-STAT TO PGM-STAT-GDD.
      *<<<< FIN_FND_KEY
       LEE-PAD-DBC.
      *<<<< LEEPAD

           MOVE SPACES TO MSG-COD-MENS.
           IF DBC-IND-ICLI IN GXD-FLD = 'M'
               MOVE ZEROES TO DBC-NUM-ICLI IN GXD-FLD
               MOVE SPACES TO DBC-VRF-ICLI IN GXD-FLD
               MOVE SPACES TO DBC-GLS-ICLI IN GXD-FLD
               MOVE 'GAR'        TO MSG-COD-SIST
               MOVE 'NO MUL DEU' TO MSG-COD-MENS
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS
               GO TO FIN-BUS-CLI-KEY.

      *    busca el padre por alguna de las llaves (la digitada)
           IF DBC-NUM-ICLI IN GXD-FLD NOT = ZEROES
      *IDC-CLI Busca Cliente por medio de IdC
               MOVE DBC-NUM-ICLI IN GXD-FLD TO DBC-NUM-ICLI IN DBC
               MOVE DBC-IND-ICLI IN GXD-FLD TO DBC-IND-ICLI IN DBC
               MOVE DBC-GLS-ICLI IN GXD-FLD TO DBC-GLS-ICLI IN DBC
               MOVE 'DBC-IDC-ICLI' TO FIO-AKEY
               MOVE FIO-GET-KEY    TO FIO-CMND
               PERFORM GET-CLI
               IF MSG-COD-MENS = SPACES
                   MOVE DBC-GLS-NOMC IN DBC TO CPT-STRN
                   PERFORM CPT-BLKS
                   MOVE CPT-STRN TO DBC-GLS-NOMC IN GXD-FLD
                   MOVE DBC-CAI-ICLI IN DBC TO
                        DBC-CAI-ICLI IN GXD-FLD 
                   MOVE DBC-IIC-ICLI IN DBC TO
                        DBC-IIC-ICLI IN GXD-FLD 
                   MOVE '00' TO PGM-STAT-DBC
                   GO TO FIN-BUS-CLI-KEY.

           IF DBC-GLS-NOMC IN GXD-FLD > SPACES
      *NOM-CLI Busca Cliente por medio del Nombre
               MOVE DBC-GLS-NOMC IN GXD-FLD TO STR-GLS-GSTR
               PERFORM STR-UNS
               MOVE STR-GLS-FUNS IN STR-VARI(1) TO 
                    DBC-GLS-APAT IN DBC
               MOVE STR-GLS-FUNS IN STR-VARI(2) TO 
                    DBC-GLS-AMAT IN DBC
               MOVE STR-GLS-FUNS IN STR-VARI(3) TO 
                    DBC-GLS-NOMB IN DBC
               MOVE 'DBC-GLS-NOMC' TO FIO-AKEY
               MOVE FIO-GET-NLS    TO FIO-CMND
               PERFORM GET-CLI
               IF MSG-COD-MENS = SPACES
                   MOVE DBC-NUM-ICLI IN DBC TO 
                        DBC-NUM-ICLI IN GXD-FLD
                   MOVE DBC-VRF-ICLI IN DBC TO
                        DBC-VRF-ICLI IN GXD-FLD 
                   MOVE DBC-IND-ICLI IN DBC TO
                        DBC-IND-ICLI IN GXD-FLD 
                   MOVE DBC-GLS-ICLI IN DBC TO
                        DBC-GLS-ICLI IN GXD-FLD 
                   MOVE DBC-GLS-NOMC IN DBC TO CPT-STRN
                   PERFORM CPT-BLKS
                   MOVE CPT-STRN TO DBC-GLS-NOMC IN GXD-FLD
                   MOVE DBC-CAI-ICLI IN DBC TO
                        DBC-CAI-ICLI IN GXD-FLD 
                   MOVE DBC-IIC-ICLI IN DBC TO
                        DBC-IIC-ICLI IN GXD-FLD 
                   MOVE '00' TO PGM-STAT-DBC
                   GO TO FIN-BUS-CLI-KEY.

       FIN-BUS-CLI-KEY.
            IF MSG-COD-MENS > SPACES
                MOVE 0 TO WSS-IBUS, WSS-IBUS-GDD
                GO TO ERR-FND-KEY.

      * BUSCA FIANZA, ESTO NO ES GENERICO
           MOVE DBC-CIC-ICLI IN DBC TO FIA-CIC-ICLI IN FIA.
           MOVE SPACES              TO FIA-CIC-ICFS IN FIA.
           MOVE 'FIA-GLS-ICYF' TO FIO-AKEY.
           MOVE FIO-GET-NLS TO FIO-CMND.
           PERFORM DEU-FIO-FIA.
           IF NOT ( FIO-STAT-OKS AND
                    FIA-CIC-ICLI IN FIA = DBC-CIC-ICLI IN DBC )
               GO TO FIN-BUS-FIA.

       LUP-BUS-FIA.
           IF FIA-MSC-STAT IN FIA NOT = 'S'
               GO TO NXT-BUS-FIA.

           IF FIA-FEC-FALZ IN FIA > ZEROES AND
              FRM-GLS-EFIA IN GXD-FLD NOT > SPACES
               MOVE 'FIANZA ALZADA' TO FRM-GLS-EFIA IN GXD-FLD
               GO TO NXT-BUS-FIA.

           IF FIA-FEC-FVEN IN FIA > HOY-FHOY OR
              FIA-FEC-FVEN IN FIA NOT > ZEROES
               MOVE 'EXISTE FIANZA' TO FRM-GLS-EFIA IN GXD-FLD
               GO TO FIN-BUS-FIA.

           MOVE 'FIANZA VENCIDA' TO FRM-GLS-EFIA IN GXD-FLD.

      *Lee la siguiente fianza
       NXT-BUS-FIA.
           MOVE 'FIA-GLS-ICYF' TO FIO-AKEY.
           MOVE FIO-GET-NXT TO FIO-CMND.
           PERFORM DEU-FIO-FIA.
           IF FIO-STAT-OKS AND
              FIA-CIC-ICLI IN FIA = DBC-CIC-ICLI IN DBC
               IF FIA-FEC-FALZ IN FIA > ZEROES
                   GO TO NXT-BUS-FIA
               ELSE
                   GO TO LUP-BUS-FIA.
       FIN-BUS-FIA.

           MOVE '00' TO FIO-STAT.

      *>>>>

           IF NOT FIO-STAT-OKS
               MOVE 'DBC    NEX' TO MSG-COD-MENS
               GO TO ERR-FND-KEY.


           MOVE DBC-KEY-IDBC IN DBC TO DBC-KEY-IDBC 
                                        IN CMA-VARI.
           MOVE DBC-KEY-IDBC IN DBC TO DBC-KEY-IDBC-INI
                                        IN CMA-VARI.

           MOVE DBC-KEY-IDBC IN DBC TO DBC-KEY-IDBC IN WSS-VARI.
           MOVE LOW-VALUES            TO GAR-CLV-GDD-2
                                        IN GAR-CLV-GDD-1 IN WSS-VARI.
           MOVE GAR-CLV-GDD-1 IN WSS-VARI TO GAR-CLV-GDD-1 IN GDD.
           MOVE FIO-GET-NLS TO FIO-CMND.
       LEE-GDD.
           PERFORM GAR-FIO-GDD.

           IF ( NOT FIO-STAT-OKS OR 
                GDD-CIC-ICLI IN GDD NOT = DBC-KEY-IDBC IN CMA-VARI )
              AND CMA-1VEZ = 'S'
               MOVE 'GDD    NEX' TO MSG-COD-MENS
               GO TO ERR-FND-KEY
           ELSE
           IF FRM-FFLD = FRM-FFLD-PF5 AND
              ( NOT FIO-STAT-OKS OR 
                GDD-CIC-ICLI IN GDD NOT = DBC-KEY-IDBC IN CMA-VARI )
               MOVE 'GDD    NOPRV' TO MSG-COD-MENS
               GO TO ERR-FND-KEY
           ELSE
           IF FRM-FFLD = FRM-FFLD-PF6 AND
              ( NOT FIO-STAT-OKS OR 
                GDD-CIC-ICLI IN GDD NOT = DBC-KEY-IDBC IN CMA-VARI )
               MOVE 'GDD    NONXT' TO MSG-COD-MENS
               GO TO ERR-FND-KEY.

       CARGA-GDD.
      *<<<< ANTES_PUT_TAB
      *>>>>

      *    INICIALIZA POSICION DEL INDICE DEL GRUPO DE OCURRENCIAS
           IF FRM-FFLD = FRM-FFLD-PF6
               MOVE ZEROES TO FRM-IFLD
           ELSE
               ADD 1 , WSS-IMAX GIVING FRM-IFLD.

           MOVE SPACES TO FRM-MENS.
           MOVE SPACES TO MSG-GLS-DESC.
           PERFORM PUT-TAB-GDD.
           IF CMA-POS-ACT = ZEROES AND FRM-FFLD = FRM-FFLD-PF5
               MOVE 'GDD    NOPRV' TO MSG-COD-MENS
               GO TO ERR-FND-KEY
           ELSE
           IF CMA-POS-ACT = ZEROES AND FRM-FFLD = FRM-FFLD-PF6
               MOVE 'GDD    NONXT' TO MSG-COD-MENS
               GO TO ERR-FND-KEY.

           IF FRM-FFLD = FRM-FFLD-PF6
               ADD 1 TO FRM-IFLD
               PERFORM LIM-RES-LIN UNTIL FRM-IFLD > WSS-IMAX.

      * MUEVE ACUMULADORES A GXD-FLD
      *<<<< TOTVAR
           MOVE WSS-REA-CML TO FRM-REA-CML IN GXD-FLD.
           MOVE WSS-REA-LIQ TO FRM-REA-LIQ IN GXD-FLD.
           MOVE WSS-REA-PON TO FRM-REA-PON IN GXD-FLD.
           MOVE WSS-NRE-CML TO FRM-NRE-CML IN GXD-FLD.
           MOVE WSS-NRE-LIQ TO FRM-NRE-LIQ IN GXD-FLD.
           MOVE WSS-NRE-PON TO FRM-NRE-PON IN GXD-FLD.

           MOVE WSS-GEN-CML TO FRM-GEN-CML IN GXD-FLD.
           MOVE WSS-GEN-LIQ TO FRM-GEN-LIQ IN GXD-FLD.
           MOVE WSS-GEN-PON TO FRM-GEN-PON IN GXD-FLD.
           MOVE WSS-ESP-CML TO FRM-ESP-CML IN GXD-FLD.
           MOVE WSS-ESP-LIQ TO FRM-ESP-LIQ IN GXD-FLD.
           MOVE WSS-ESP-PON TO FRM-ESP-PON IN GXD-FLD.
      *>>>>

           IF MSG-COD-MENS > SPACES
               MOVE 'GAR' TO FIO-SIST
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS.

           MOVE '00' TO FIO-STAT.
           GO TO FIN-FND-KEY.

       ERR-FND-KEY.
      *    Busca mensaje error en Sistema SGC
           IF WSS-IBUS = 0 AND WSS-IBUS-GDD = 0
      *        busco por padre y no encontro padre
               MOVE SPACES TO PGM-STAT
               MOVE 'TAB'  TO MSG-COD-SIST
               MOVE '23'   TO PGM-STAT-DBC
           ELSE
      *        todos otros casos: el error pertenece al sistema GAR
               MOVE 'GAR' TO MSG-COD-SIST.
           PERFORM GET-MSG.
           MOVE MSG-GLS-DESC TO FRM-MENS.
           MOVE SCR-STAT-CON TO SCR-STAT.
           MOVE '00' TO FIO-STAT.
           GO TO FIN-FND-KEY.
      *>>>>
      *>>>>
       FIN-FND-KEY.
           EXIT.
 
       PUT-SCR SECTION.
       INI-PUT-SCR.
           PERFORM PUT-ALL-GXD.
       FIN-PUT-SCR.
           EXIT.

       STP-EXIT SECTION.
       INI-STP-EXIT.
           MOVE SCR-PROG TO PGM-PROG.
           MOVE SCR-NTRN TO PGM-NTRN.

           MOVE SCR-PROV TO SCR-PROG.
           MOVE SCR-NTRV TO SCR-NTRN.

           MOVE PGM-PROG TO SCR-PROV
           MOVE PGM-NTRN TO SCR-NTRV.
       FIN-STP-EXIT.
           EXIT.

       SCR-EXIT SECTION.
       INI-SCR-EXIT.
           MOVE 'P'      TO SCR-ICMN.
           MOVE SCR-NTRN TO SYS-NTRN.
           MOVE SCR-VARI TO SYS-CMMA.
           MOVE SCR-TCMA TO SYS-TCMA.
           MOVE SYS-RTRN TO SYS-CMND.
           PERFORM GNS-PRO-SYS.
       FIN-SCR-EXIT.
           EXIT.

       SCR-PUTA SECTION.
       INI-SCR-PUTA.
           MOVE SCR-NMAP TO FRM-NAME.
           MOVE SCR-NLIB TO FRM-NLIB.
           MOVE GXD-FLD TO FRM-DFLD.
           MOVE FRM-PUT-ALL TO FRM-CMND.
           PERFORM GNS-PRO-FRM.
       FIN-SCR-PUTA.
           EXIT.

       SCR-MSSG SECTION.
       INI-SCR-MSSG.
           IF FRM-MEN1 NOT > SPACES
               MOVE SPACES TO FRM-MEN1.
           IF FRM-MEN2 NOT > SPACES
               MOVE SPACES TO FRM-MEN2.
           MOVE FRM-MENS TO GXD-GLS-MENS.
       FIN-SCR-MSSG.
           EXIT.

       SCR-GKEY SECTION.
       INI-SCR-GKEY.
           MOVE SCR-NMAP TO FRM-NAME.
           MOVE SCR-NLIB TO FRM-NLIB.
           MOVE FRM-GET-ALL TO FRM-CMND.
           PERFORM GNS-PRO-FRM.
           MOVE SPACES TO FRM-MENS.
           IF NOT ( FRM-FFLD = FRM-FFLD-RET  OR FRM-FFLD-PF10 OR
                               FRM-FFLD-PF12 OR FRM-FFLD-PF3 )
               MOVE 'PFSINV    ' TO MSG-COD-MENS
               MOVE 'GNS' TO MSG-COD-SIST
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS
               PERFORM FST-KEY-GXD
               PERFORM SCR-MSSG
               PERFORM SCR-PUTA
               PERFORM SCR-EXIT.
           MOVE FRM-DFLD TO GXD-FLD.
           IF FRM-STAT-ABT
               GO TO FIN-SCR-GKEY.
           MOVE FRM-SUAR-OKS TO FRM-SUAR.
           PERFORM VAL-NUM-KEY-GXD.
           IF FRM-SUAR EQUAL FRM-SUAR-MAL OR FRM-SUAR-CLR
               PERFORM SCR-MSSG
               PERFORM EDT-KEY-GXD
               PERFORM SCR-PUTA
               PERFORM SCR-EXIT.
      *JSS
           PERFORM CLR-FLD-GXD.
           PERFORM VAL-IKY-GXD.
           IF FRM-SUAR EQUAL FRM-SUAR-MAL OR FRM-SUAR-CLR
               GO TO ERR-SCR-GKEY.
           PERFORM VAL-MKY-GXD.
           IF FRM-SUAR EQUAL FRM-SUAR-MAL OR FRM-SUAR-CLR
               GO TO ERR-SCR-GKEY.
           PERFORM VAL-AKY-GXD.
           IF FRM-SUAR EQUAL FRM-SUAR-MAL OR FRM-SUAR-CLR
               GO TO ERR-SCR-GKEY.
           PERFORM VAL-CON-KEY-GXD.
           IF NOT ( FRM-SUAR EQUAL FRM-SUAR-MAL OR FRM-SUAR-CLR )
               GO TO FIN-SCR-GKEY.
           IF FRM-UCUR NOT > SPACES
               PERFORM FST-KEY-GXD.
       ERR-SCR-GKEY.
           PERFORM SCR-MSSG.
           PERFORM EDT-KEY-GXD.
           PERFORM SCR-PUTA.
           PERFORM SCR-EXIT.
       FIN-SCR-GKEY.
           PERFORM SCR-MSSG.

       SCR-GIKY SECTION.
       INI-SCR-GIKY.
           MOVE SCR-NMAP TO FRM-NAME.
           MOVE SCR-NLIB TO FRM-NLIB.
           MOVE FRM-GET-ALL TO FRM-CMND.
           PERFORM GNS-PRO-FRM.
           MOVE SPACES TO FRM-MENS.
           IF NOT ( FRM-FFLD = FRM-FFLD-RET  OR FRM-FFLD-PF10 OR
                               FRM-FFLD-PF12 OR FRM-FFLD-PF3 )
               MOVE 'PFSINV    ' TO MSG-COD-MENS
               MOVE 'GNS' TO MSG-COD-SIST
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS
               PERFORM FST-KEY-GXD
               PERFORM SCR-MSSG
               PERFORM SCR-PUTA
               PERFORM SCR-EXIT.
           MOVE FRM-DFLD TO GXD-FLD.
           IF FRM-STAT-ABT
               GO TO FIN-SCR-GIKY.
           MOVE FRM-SUAR-OKS TO FRM-SUAR.
           PERFORM VAL-NUM-KEY-GXD.
           IF FRM-SUAR EQUAL FRM-SUAR-MAL OR FRM-SUAR-CLR
               PERFORM SCR-MSSG
               PERFORM EDT-IKY-GXD
               PERFORM SCR-PUTA
               PERFORM SCR-EXIT.
      *JSS
           PERFORM CLR-FLD-GXD.
           PERFORM VAL-IKY-GXD.
           IF FRM-SUAR EQUAL FRM-SUAR-MAL OR FRM-SUAR-CLR
               GO TO ERR-SCR-GIKY.
           PERFORM VAL-CON-IKY-GXD.
           IF NOT ( FRM-SUAR EQUAL FRM-SUAR-MAL OR FRM-SUAR-CLR )
               GO TO FIN-SCR-GIKY.
           IF FRM-UCUR NOT > SPACES
               PERFORM FST-KEY-GXD.
       ERR-SCR-GIKY.
           PERFORM SCR-MSSG.
           PERFORM EDT-IKY-GXD.
           PERFORM SCR-PUTA.
           PERFORM SCR-EXIT.
       FIN-SCR-GIKY.
           PERFORM SCR-MSSG.

       GET-CON SECTION.
       INI-GET-CON.
           MOVE SCR-NMAP TO FRM-NAME.
           MOVE SCR-NLIB TO FRM-NLIB.
           MOVE FRM-GET-ALL TO FRM-CMND.
           PERFORM GNS-PRO-FRM.
           IF NOT ( FRM-FFLD = FRM-FFLD-RET  OR FRM-FFLD-PF10 OR
                               FRM-FFLD-PF12 OR FRM-FFLD-PF3 )
      *<<<< PFS_GET_CON OR PFS_GET_ACC
           IF NOT ( FRM-FFLD = FRM-FFLD-PF6
                          OR   FRM-FFLD-PF5
                  )
      *>>>>
               MOVE 'PFSINV    ' TO MSG-COD-MENS
               MOVE 'GNS' TO MSG-COD-SIST
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO GXD-GLS-MEN2
               MOVE SCR-PRMT     TO GXD-GLS-MEN1
               PERFORM FST-MSG
               PERFORM SCR-PUTA
               PERFORM SCR-EXIT.
           MOVE FRM-DFLD TO GXD-FLD.
       FIN-GET-CON.
           MOVE SCR-STAT-CON TO SCR-STAT.

       CLR-MSG SECTION.
       INI-CLR-MSG.
           MOVE SPACES TO GXD-GLS-MENS.
       FIN-CLR-MSG.
           EXIT.

       HBL-IKY SECTION.
       INI-HBL-IKY.
           IF SCR-DESDE-CMN
               MOVE GXD-GLS-MENS TO FRM-MENS
               MOVE LOW-VALUES TO GXD-FLD
               IF FRM-MENS < SPACES
                   MOVE LOW-VALUES TO GXD-GLS-MENS
               ELSE
                   MOVE FRM-MENS TO GXD-GLS-MENS.
           MOVE FRM-CPSF-AEY TO FRM-CPIM-AEY.
           PERFORM PRO-MKY-GXD.
           PERFORM PRO-AKY-GXD.
           PERFORM UNP-IKY-GXD.
           PERFORM FST-KEY-GXD.
           MOVE '1' TO FRM-CPIM-AEY.
       FIN-HBL-IKY.
           EXIT.

       HBL-KEY SECTION.
       INI-HBL-KEY.
           IF SCR-DESDE-CMN
               MOVE GXD-GLS-MENS TO FRM-MENS
               MOVE LOW-VALUES TO GXD-FLD
               IF FRM-MENS < SPACES
                   MOVE LOW-VALUES TO GXD-GLS-MENS
               ELSE
                   MOVE FRM-MENS TO GXD-GLS-MENS.
           MOVE FRM-CPSF-AEY TO FRM-CPIM-AEY.
           PERFORM UNP-KEY-GXD.
           PERFORM FST-KEY-GXD.
           MOVE '1' TO FRM-CPIM-AEY.
       FIN-HBL-KEY.
           EXIT.

       HBL-FLD SECTION.
       INI-HBL-FLD.
           PERFORM PRO-IKY-GXD.
           PERFORM PRO-AKY-GXD.
           PERFORM UNP-MKY-GXD.
           PERFORM UNP-FLD-GXD.
           PERFORM FST-FLD-GXD.
       FIN-HBL-FLD.
           EXIT.

       FST-MSG SECTION.
       INI-FST-MSG.
           MOVE -1 TO GXD-GLS-MENS-LEN.
       FIN-FST-MSG.
           EXIT.

       PRO-ALL SECTION.
       INI-PRO-ALL.
           PERFORM PRO-KEY-GXD.
           PERFORM FST-MSG.
       FIN-PRO-ALL.
           EXIT.

       SCR-TRL SECTION.
       INI-SCR-TRL.
           IF FRM-MEN1 NOT > SPACES
               MOVE SCR-PRMT TO FRM-MEN1.
           IF SCR-STAT = SCR-STAT-MOD
               MOVE SCR-INST-GFL TO SCR-INST
               PERFORM HBL-FLD
               PERFORM SCR-MSSG
               PERFORM EDT-KEY-GXD
               PERFORM EDT-FLD-GXD
               PERFORM SCR-PUTA
               PERFORM STP-EXIT
               PERFORM SCR-EXIT.
           IF SCR-STAT = SCR-STAT-SON
               MOVE SCR-INST-GCS TO SCR-INST
               PERFORM PRO-ALL
               PERFORM SCR-MSSG
               PERFORM EDT-KEY-GXD
               PERFORM EDT-FLD-GXD
               PERFORM SCR-PUTA
               PERFORM STP-EXIT
               PERFORM SCR-EXIT.
      *ASUME SCR-STAT-CON.
           MOVE SCR-STAT-CON TO SCR-STAT.
           MOVE SCR-INST-GAB TO SCR-INST.
      *    MOVE FRM-CPSF-AEY TO FRM-CPIM-AEY.
           PERFORM PRO-ALL.
           PERFORM SCR-MSSG.
           PERFORM EDT-KEY-GXD.
           PERFORM EDT-FLD-GXD.
           PERFORM SCR-PUTA.
           PERFORM SCR-EXIT.
       FIN-SCR-TRL.
           EXIT.

       DESSCRTRL SECTION.
       INI-DESSCRTRL.
           MOVE SCR-VFLD-NOT TO SCR-VFLD.
           MOVE FRM-FFLD TO SCR-FFLD.
       FIN-DESSCRTRL.
           IF SCR-FFLD-PF10 OR SCR-FFLD-PF3
                 MOVE SCR-INST-HCM TO SCR-INST
           ELSE
                 MOVE SCR-INST-HKY TO SCR-INST.
       EXT-DESSCRTRL.
           EXIT.

       COPY GARBQGXD.
       COPY GNSBVNUM.
       COPY GARBFGDD.
       COPY GNSBFMSG.
       COPY GNSBGSYS.
       COPY GNSBGDTC.
       COPY GNSBGFRM.
       COPY GNSBGMSG.
       COPY GNSBEKEY.
       COPY GNSBIABT.
       COPY GNSBFTAB.
       COPY GNSBVIND.
       COPY GNSBVMSC.
       COPY GNSBFMSC.
       COPY GNSBVIDC.
       COPY GNSBPVRF.

      *<<<< EOF
       RST-STAT SECTION.
       INI-RST-STAT.
           MOVE SCR-STPP     TO SCR-STAT.
           MOVE SCR-MFLD-NOT TO SCR-MFLD.
       FIN-RST-STAT.
           EXIT.
      *>>>>
      *<<<< EOF
       PUT-TAB-GDD SECTION.
       INI-PUT-TAB-GDD.

      *<<<< SELECCION
           MOVE GAR-CLV-GDD-2 IN GDD TO GAR-CLV-GDG-1 IN GDG.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM GAR-FIO-GDG.
           IF NOT FIO-STAT-OKS
               MOVE 'GAR'        TO MSG-COD-SIST
               MOVE 'GDG    NEX' TO MSG-COD-MENS
               GO TO FIN-PUT-TAB-GDD.

      * GARANTIAS COMPLETAS VIGENTES Y QUE NO ESTAN EN TRAMITE DE 
      * ALZAMIENTO
           IF ( GAR-ES1 IN GDG < '10' OR > '14' ) OR
              GAR-IND-CPL IN GDG NOT = 'S'
               GO TO NXT-PUT-TAB-GDD.

           IF WSS-IND-TIP-STP > 0 AND
              GAR-TIP-OPE IN GDG NOT = FRM-TIP-OPE IN GXD-FLD
               GO TO NXT-PUT-TAB-GDD.

           IF WSS-IND-TIP-STP = 2 AND
              GAR-STP-OPE IN GDG NOT = FRM-STP-OPE IN GXD-FLD
               GO TO NXT-PUT-TAB-GDD.

      *>>>>

           ADD 1 TO CMA-POS-ACT.
      *FLB BFA 24-05-1993
           IF FRM-FFLD = FRM-FFLD-PF6
               GO TO PUT-PF6.

           SUBTRACT 1 FROM FRM-IFLD.
           IF FRM-IFLD = 1
               MOVE GAR-CLV-GDD-2 IN GDD TO 
                    GAR-CLV-GDD-2-INI IN CMA-CLV-INI
           ELSE
               IF FRM-IFLD = WSS-IMAX
                   MOVE GAR-CLV-GDD-2 IN GDD TO 
                        GAR-CLV-GDD-2-FIN IN CMA-CLV-FIN.
           GO TO MOV-FLD.

       PUT-PF6.

           IF CMA-1VEZ = 'S' AND CMA-POS-ACT > WSS-IMAX
      *    SOLO ACUMULA, SIN DESPLEGAR
               GO TO DSPL-O-ACUM.

           ADD 1 TO FRM-IFLD.
           IF FRM-IFLD = 1
               MOVE GAR-CLV-GDD-2 IN GDD TO 
                    GAR-CLV-GDD-2-INI IN CMA-CLV-INI
               MOVE GAR-CLV-GDD-2 IN GDD TO 
                    GAR-CLV-GDD-2-FIN IN CMA-CLV-FIN
           ELSE
           IF FRM-IFLD NOT > WSS-IMAX
               MOVE GAR-CLV-GDD-2 IN GDD TO 
                    GAR-CLV-GDD-2-FIN IN CMA-CLV-FIN.
       MOV-FLD.

      *<<<< MOVFLD
           MOVE GAR-CLV-GDG-1 IN GDG TO FRM-GAR-ID
                                      IN GXD-FLD(FRM-IFLD).
           MOVE GAR-COD-LIM IN GDG TO FRM-COD-LIM
                                      IN GXD-FLD(FRM-IFLD).
           MOVE GAR-COD-GRA IN GDG TO FRM-COD-GRA
                                      IN GXD-FLD(FRM-IFLD).

           MOVE GAR-CLV-GDD-1 IN GDD TO GAR-CLV-GDD-1 IN WSS-VARI.

           MOVE 'GAR-CLV-GDD-2' TO FIO-AKEY.
           MOVE FIO-GET-NLS TO FIO-CMND.
           PERFORM GAR-FIO-GDD.
           IF NOT FIO-STAT-OKS
               MOVE 'GAR'        TO MSG-COD-SIST
               MOVE 'PGM    ERR' TO MSG-COD-MENS
               GO TO FIN-PUT-TAB-GDD.
           MOVE 'GAR-CLV-GDD-2' TO FIO-AKEY.
           MOVE FIO-GET-NXT TO FIO-CMND.
           PERFORM GAR-FIO-GDD.
           IF FIO-STAT-OKS AND
               GAR-CLV-GDD-2 IN GDD = GAR-CLV-GDG-1 IN GDG
               MOVE 'M' TO FRM-IND-MUL-DEU IN GXD-FLD(FRM-IFLD)
           ELSE
               MOVE '1' TO FRM-IND-MUL-DEU IN GXD-FLD(FRM-IFLD).

           MOVE GAR-CLV-GDD-1 IN WSS-VARI TO GAR-CLV-GDD-1 IN GDD.

           IF FRM-FFLD = FRM-FFLD-PF5
               MOVE FIO-GET-LEQ TO FIO-CMND
           ELSE
               MOVE FIO-GET-NLS TO FIO-CMND.
           PERFORM GAR-FIO-GDD.
           IF NOT FIO-STAT-OKS
               MOVE 'GAR'        TO MSG-COD-SIST
               MOVE 'PGM    ERR' TO MSG-COD-MENS
               GO TO FIN-PUT-TAB-GDD.
      *>>>>

      *<<<< BUSTAB
      *BUS-TAB BUSCA GLOSA DE CODIGO EN TABLA
           MOVE 'TAB' TO TAB-COD-SIST.
           MOVE 'TIO' TO TAB-COD-TTAB IN TAB.
           MOVE GAR-TIP-OPE IN GDG TO TAB-COD-CTAB IN TAB.
           PERFORM BUS-TAB.
           IF MSG-COD-MENS = SPACES
               MOVE TAB-GLS-ABRV IN TAB TO
                    FRM-ABV-TIP-OPE IN GXD-FLD(FRM-IFLD)
           ELSE
               MOVE SPACES TO FRM-ABV-TIP-OPE IN GXD-FLD(FRM-IFLD).

      *BUS-TAB BUSCA CODIGO DE TABLA
           MOVE 'TAB'              TO TAB-COD-SIST.
           MOVE 'AUX'              TO TAB-COD-TTAB IN TAB.
           MOVE SPACES             TO TAB-COD-CTAB IN TAB.
           MOVE GAR-TIP-OPE IN GDG TO GAR-TIP-OPE  IN TAG.
           MOVE GAR-STP-OPE IN GDG TO GAR-STP-OPE  IN TAG.
           MOVE GAR-CLA-OPE IN TAG TO TAB-COD-CTAB IN TAB.
           PERFORM BUS-TAB.
           IF MSG-COD-MENS = SPACES
               MOVE TAB-GLS-ABRV IN TAB TO
                    FRM-ABV-STP-OPE IN GXD-FLD(FRM-IFLD)
           ELSE
               MOVE SPACES TO FRM-ABV-STP-OPE IN GXD-FLD(FRM-IFLD).

           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM GAR-FIO-TAG.
           IF NOT FIO-STAT-OKS
               PERFORM ERR-VAL
               GO TO FIN-PUT-TAB-GDD
           ELSE
               MOVE GAR-TIP-REA-NRE IN TAG TO FRM-TIP-REA-NRE
                                                  IN GXD-FLD(FRM-IFLD).
      *>>>>

       DSPL-O-ACUM.
      *<<<< ANLHIJ
      * BUSCA VALORES EN LA TASACION VIGENTE
           MOVE GAR-NUM-SIS IN GDG TO GAR-NUM-SIS IN GVT.
           MOVE GAR-COD-CRR IN GDG TO GAR-COD-CRR IN GVT.
           MOVE GAR-COD-TSN IN GDG TO GAR-COD-TSN IN GVT.
           MOVE FIO-GET-KEY     TO FIO-CMND.
           PERFORM GAR-FIO-GVT.
           IF NOT FIO-STAT-OKS
               MOVE 'GAR'        TO MSG-COD-SIST
               MOVE 'GVT    NEX' TO MSG-COD-MENS
               PERFORM ERR-VAL
               GO TO FIN-PUT-TAB-GDD.

      * SE DETERMINA SI LA TASACION ESTA VENCIDA O NO


           MOVE WSS-NO-EXA-VENC TO WSS-IND-EXAV.
      * Excluye los Subtipos de Garantia que no requieren Tasacion Efectiva
           IF GAR-PDO-VIG-TSN IN TAG NOT > ZEROES
               GO TO EXA-VEN-SEG.

      * Excluye los Creditos Hipotecarios
           MOVE GAR-NUM-SIS IN GDG TO GAR-NUM-SIS IN GES.
           MOVE GAR-COD-CRR IN GDG TO GAR-COD-CRR IN GES.
           MOVE ZEROES             TO GAR-COD-ESP IN GES.
           MOVE FIO-GET-NLS TO FIO-CMND.
           PERFORM GAR-FIO-GES.
           IF NOT FIO-STAT-OKS OR
              GAR-NUM-SIS IN GDG NOT = GAR-NUM-SIS IN GES OR
              GAR-COD-CRR IN GDG NOT = GAR-COD-CRR IN GES
               MOVE SPACES TO GES
               MOVE ZEROES TO GAR-COD-CRR IN GES
                              GAR-FEC-VTO-CDT IN GES
                              GAR-COD-ESP IN GES
               IF FIO-STAT-OKS
                   MOVE FIO-END-BRW TO FIO-CMND
                   PERFORM GAR-FIO-GES
               ELSE
                   NEXT SENTENCE
           ELSE 
               MOVE FIO-END-BRW TO FIO-CMND
               PERFORM GAR-FIO-GES
               IF GAR-COD-SIS-CDT IN GES > SPACES
                   MOVE 'TAB'                  TO TAB-COD-SIST
                   MOVE 'SIS'                  TO TAB-COD-TTAB IN TAB
                   MOVE GAR-COD-SIS-CDT IN GES TO TAB-COD-CTAB IN TAB
                   PERFORM BUS-TAB
                   IF MSG-COD-MENS = SPACES AND TAB-CIC-CTAB = 'HIP'
                       GO TO EXA-VEN-SEG.

           MOVE WSS-SI-EXA-VENC TO WSS-IND-EXAV.
           PERFORM GET-FHOY.
           IF GAR-UTP-VIG-TSN IN TAG = 'D'
              MOVE FEC-SUM-DIA TO FEC-CMND
              MOVE GAR-PDO-VIG-TSN IN TAG TO FEC-NDIA
           ELSE
           IF GAR-UTP-VIG-TSN IN TAG = 'M'
              MOVE FEC-SUM-MES TO FEC-CMND
              MOVE GAR-PDO-VIG-TSN IN TAG TO FEC-NMES
           ELSE
           IF GAR-UTP-VIG-TSN IN TAG = 'A'
              MOVE FEC-SUM-ANO TO FEC-CMND
              MOVE GAR-PDO-VIG-TSN IN TAG TO FEC-NANO.

           MOVE GAR-FEC-TSN IN GVT TO FEC-FVLD.
           MOVE FEC-DVLD TO FEC-ITM1.
           MOVE FEC-MVLD TO FEC-ITM2.
           MOVE FEC-AVLD TO FEC-ITM4.
           MOVE FEC-SVLD TO FEC-ITM3.
           MOVE FEC-FORM-FEC TO FEC-FORM.
           PERFORM CAL-FEC.
           IF MSG-COD-MENS = SPACES
               MOVE FEC-ITM1 TO WSS-FEC-DVTA IN WSS-VARI
               MOVE FEC-ITM2 TO WSS-FEC-MVTA IN WSS-VARI
               MOVE FEC-ITM4 TO WSS-FEC-AVTA IN WSS-VARI
               MOVE FEC-ITM3 TO WSS-FEC-SVTA IN WSS-VARI
           ELSE
               GO TO EXA-VEN-SEG.

      * Tasacion Vencida
           IF WSS-FEC-FVTA IN WSS-VARI > HOY-FHOY
               GO TO EXA-VEN-SEG.

           MOVE 'TASACION VENCIDA' TO FRM-MEN1.

       EXA-VEN-SEG.


      * SE DETERMINA SI EL SEGURO ESTA VENCIDO O NO


      * Excluye los Creditos Hipotecarios
           IF WSS-IND-EXAV = WSS-NO-EXA-VENC 
               GO TO MOV-GVT.

           IF GAR-IND-EXI-GSE IN GDG = 'S'
               MOVE GAR-NUM-SIS IN GDG TO GAR-NUM-SIS IN GSE
               MOVE GAR-COD-CRR IN GDG TO GAR-COD-CRR IN GSE
               MOVE FIO-GET-KEY TO FIO-CMND
               PERFORM GAR-FIO-GSE
               IF NOT FIO-STAT-OKS
                   GO TO MOV-GVT
               ELSE
                   NEXT SENTENCE
           ELSE
               GO TO MOV-GVT.

      * Seguro Vigente
           IF GAR-FEC-VTO-SEG IN GSE > HOY-FHOY
               GO TO MOV-GVT.

           MOVE 'SEGURO VENCIDO' TO FRM-MEN2.

       MOV-GVT.
      *<<<< PGM_CHI
           PERFORM VLR-DAP.
           IF MSG-COD-MENS > SPACES
               PERFORM ERR-VAL
               GO TO FIN-PUT-TAB-GDD.
      *>>>>

      * LA VALORIZACION DE GARANTIAS ESPECIFICAS DEBE HACERSE AQUI, PUES DEBE 
      * HABERSE CALCULADO PREVIA Y EVENTUALMENTE EL VALOR DEL DEPOSITO A
      * PLAZO PROPIO EN GARANTIA

           IF GAR-COD-LIM IN GDG NOT = WSS-COD-LIM IN WSS-VARI
               GO TO GTIA-GENERAL.

      * GARANTIA ESPECIFICA, VALORIZA LOS CREDITOS CORRESPONDIENTES
           MOVE DBC-KEY-IDBC IN CMA-VARI TO DBC-KEY-IDBC IN VCR-VARI.
           MOVE GAR-NUM-SIS  IN GDG      TO GAR-NUM-SIS  IN VCR-VARI.
           MOVE GAR-COD-CRR  IN GDG      TO GAR-COD-CRR  IN VCR-VARI.
           MOVE GAR-VCB      IN GDG      TO GAR-VCB      IN VCR-VARI.
           MOVE WSS-COD-PESO IN CMA-VARI TO VCR-COD-PESO IN VCR-VARI.
      *<<<< NOT PGM_PER
           PERFORM GAR-PRO-VCR.
      *>>>>
           IF FRM-MENS = SPACES AND MSG-COD-MENS > SPACES
               GO TO FIN-PUT-TAB-GDD.

       GTIA-GENERAL.
      * GARANTIA GENERAL
           IF GAR-VCB IN GDG = WSS-COD-PESO IN CMA-VARI
               MOVE GAR-VAL-CML-TSN IN GVT TO WSS-VAL-CML-TSN  
               MOVE GAR-VAL-LIQ-TSN IN GVT TO WSS-VAL-LIQ-TSN  
               MOVE GAR-VAL-PON     IN GVT TO WSS-VAL-PON     
               GO TO PUT-FLD.

           MOVE HOY-FHOY                 TO CAM-FEC-FCAM IN CAM(1)
           MOVE HOY-FHOY                 TO CAM-FEC-FCAM IN CAM(2).

           MOVE GAR-VCB     IN GDG       TO CAM-COD-VCAM IN CAM(1).
           MOVE WSS-COD-PESO IN CMA-VARI TO CAM-COD-VCAM IN CAM(2).
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM TAB-FIO-CAM.
           IF NOT (
              FIO-STAT-OKS AND CAM-IND-VIGE IN CAM = 'S'
              )
               MOVE 'TAB'        TO MSG-COD-SIST
               MOVE 'CAM    NEX' TO MSG-COD-MENS
               PERFORM ERR-VAL
               GO TO FIN-PUT-TAB-GDD.

           MULTIPLY GAR-VAL-CML-TSN IN GVT BY CAM-SGV-VCAM IN CAM
                 GIVING WSS-VAL-CML-TSN ROUNDED.
           MULTIPLY GAR-VAL-LIQ-TSN IN GVT BY CAM-SGV-VCAM IN CAM
                 GIVING WSS-VAL-LIQ-TSN ROUNDED.
           MULTIPLY GAR-VAL-PON     IN GVT BY CAM-SGV-VCAM IN CAM
                 GIVING WSS-VAL-PON     ROUNDED.
       PUT-FLD.
      *FLB 23-08-1993
           IF CMA-POS-ACT NOT > WSS-IMAX 
               MOVE WSS-VAL-CML-TSN TO FRM-VAL-CML-TSN 
                                              IN GXD-FLD(FRM-IFLD)
               MOVE WSS-VAL-LIQ-TSN TO FRM-VAL-LIQ-TSN 
                                              IN GXD-FLD(FRM-IFLD)
               MOVE WSS-VAL-PON     TO FRM-VAL-PON
                                              IN GXD-FLD(FRM-IFLD).
      *FLB FIN 23-08-1993
      *>>>>
           IF CMA-1VEZ NOT = 'S'
               GO TO NXT-PUT-TAB-GDD.
      *<<<< SUMVAL
           IF GAR-TIP-REA-NRE IN TAG = WSS-COD-REAL IN WSS-VARI
               ADD WSS-VAL-CML-TSN TO WSS-REA-CML
               ADD WSS-VAL-LIQ-TSN TO WSS-REA-LIQ
               ADD WSS-VAL-PON     TO WSS-REA-PON
           ELSE
               ADD WSS-VAL-CML-TSN TO WSS-NRE-CML
               ADD WSS-VAL-LIQ-TSN TO WSS-NRE-LIQ
               ADD WSS-VAL-PON     TO WSS-NRE-PON.

           IF GAR-COD-LIM IN GDG NOT = WSS-COD-LIM IN WSS-VARI
               ADD WSS-VAL-CML-TSN TO WSS-GEN-CML
               ADD WSS-VAL-LIQ-TSN TO WSS-GEN-LIQ
               ADD WSS-VAL-PON     TO WSS-GEN-PON
           ELSE
               ADD WSS-VAL-CML-TSN TO WSS-ESP-CML
               ADD WSS-VAL-LIQ-TSN TO WSS-ESP-LIQ
               ADD WSS-VAL-PON     TO WSS-ESP-PON.
      *>>>>

       NXT-PUT-TAB-GDD.
           IF FRM-FFLD = FRM-FFLD-PF5 
               IF FRM-IFLD > 1
                   MOVE FIO-GET-PRV TO FIO-CMND
               ELSE
                   GO TO FIN-PUT-TAB-GDD
           ELSE
           IF CMA-1VEZ NOT = 'S'
               IF FRM-IFLD < WSS-IMAX
                   MOVE FIO-GET-NXT TO FIO-CMND
               ELSE
                   GO TO FIN-PUT-TAB-GDD
           ELSE
               MOVE FIO-GET-NXT TO FIO-CMND.

           PERFORM GAR-FIO-GDD.
           MOVE GAR-CLV-GDD-1 IN GDD TO GAR-CLV-GDD-1 IN WSS-VARI.
           IF FIO-STAT-OKS AND
               DBC-KEY-IDBC IN CMA-VARI = DBC-KEY-IDBC IN WSS-VARI
               GO TO INI-PUT-TAB-GDD.

       FIN-PUT-TAB-GDD.
           EXIT.

       LIM-RES-LIN SECTION.
       INI-LIM-RES-LIN.
      *<<<< LIMRESLIN
           MOVE SPACES TO FRM-GAR-ID      IN GXD-FLD(FRM-IFLD),
                          FRM-ABV-TIP-OPE IN GXD-FLD(FRM-IFLD),
                          FRM-ABV-STP-OPE IN GXD-FLD(FRM-IFLD),
                          FRM-COD-LIM     IN GXD-FLD(FRM-IFLD),
                          FRM-COD-GRA     IN GXD-FLD(FRM-IFLD),
                          FRM-TIP-REA-NRE IN GXD-FLD(FRM-IFLD),
                          FRM-IND-MUL-DEU IN GXD-FLD(FRM-IFLD).

           MOVE ZEROES TO FRM-VAL-CML-TSN IN GXD-FLD(FRM-IFLD),
                          FRM-VAL-LIQ-TSN IN GXD-FLD(FRM-IFLD),
                          FRM-VAL-PON     IN GXD-FLD(FRM-IFLD).
      *>>>>
           ADD 1 TO FRM-IFLD.
       FIN-LIM-RES-LIN.
           EXIT.
       ERR-VAL SECTION.
       INI-ERR-VAL.
           IF FRM-IFLD NOT > WSS-IMAX
               MOVE ZEROES TO FRM-VAL-CML-TSN
                                  IN GXD-FLD(FRM-IFLD)
               MOVE ZEROES TO FRM-VAL-LIQ-TSN
                                  IN GXD-FLD(FRM-IFLD)
               MOVE ZEROES TO FRM-VAL-PON     
                                  IN GXD-FLD(FRM-IFLD).
       FIN-ERR-VAL.
           EXIT.
      *>>>>
      *<<<< EOF
      *<<<< NOT PGM_PER
       COPY GARBGEDP.
       VLR-DAP SECTION.
       INI-VLR-DAP.
           PERFORM EXA-DAP.
           IF FRM-SUAR NOT = FRM-SUAR-MAL AND
              OPD-COD-TOPD IN DAP-VARI = GAR-TIP-OPE IN GDG AND
              OPD-COD-AOPD IN DAP-VARI = GAR-STP-OPE IN GDG
      *       Es Dep Plazo Propio
               PERFORM BUS-GDO-OPD
               IF MSG-COD-MENS = SPACES
      *Tasa Interes             : INT-TINT
      *Valor Tasa Informada     : INT-TINT
      *Valor de Cambio          : INT-VCAM
      *Fecha Inicial Periodo    : INT-FUNO
      *Fecha Final   Periodo    : INT-FDOS
      *Fecha Basa Tasa Variable : INT-FBTV ( opcional )
      *Fecha de Proceso         : INT-FPRO ( la rutina la obtiene)
                   MOVE OPD-COD-TINT IN OPD TO INT-TIPT
                   MOVE OPD-SGV-TINT IN OPD TO INT-TINT
                   MOVE OPD-COD-VCAM IN OPD TO INT-VCAM
                   MOVE OPD-NUM-DREA IN OPD TO INT-DUNO
                   MOVE OPD-NUM-MREA IN OPD TO INT-MUNO
                   MOVE OPD-NUM-SREA IN OPD TO INT-SUNO
                   MOVE OPD-NUM-AREA IN OPD TO INT-AUNO
                   PERFORM OBT-FDOS
                   PERFORM GNS-CAL-INT
                   IF INT-CMSG = SPACES
                       COMPUTE GAR-VAL-CML-TSN IN GVT ROUNDED = 
                               GAR-VAL-CML-TSN IN GVT +
                               OPD-VAL-SCAP IN OPD * INT-TIPE
                       MOVE GAR-VAL-CML-TSN IN GVT TO
                            GAR-VAL-LIQ-TSN IN GVT
                       MOVE GAR-VAL-CML-TSN IN GVT TO
                            GAR-VAL-PON     IN GVT
                   ELSE
                       GO TO ERR-VLR-DAP
               ELSE
                   GO TO ERR-VLR-DAP.
           GO TO FIN-VLR-DAP.
       ERR-VLR-DAP.
           IF INT-CMSG > SPACES
               MOVE INT-CMSG TO MSG-COD-MENS
               MOVE INT-MENS TO FRM-MENS
           ELSE
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS
               MOVE FRM-SUAR-MAL TO FRM-SUAR.
       FIN-VLR-DAP.
           EXIT.

       OBT-FDOS SECTION.
       INI-OBT-FDOS.
           PERFORM GET-FHOY.
           IF HOY-FHOY NOT > OPD-FEC-FPVC IN OPD
               MOVE HOY-DHOY            TO INT-DDOS
               MOVE HOY-MHOY            TO INT-MDOS
               MOVE HOY-SHOY            TO INT-SDOS
               MOVE HOY-AHOY            TO INT-ADOS
           ELSE
               MOVE OPD-NUM-DPVC IN OPD TO INT-DDOS
               MOVE OPD-NUM-MPVC IN OPD TO INT-MDOS
               MOVE OPD-NUM-SPVC IN OPD TO INT-SDOS
               MOVE OPD-NUM-APVC IN OPD TO INT-ADOS.
       FIN-OBT-FDOS.
           EXIT.


       BUS-GDO-OPD SECTION.
       INI-BUS-GDO-OPD.
           MOVE SPACES TO MSG-COD-MENS.
           MOVE GAR-CLV-GDG-1 IN GDG TO GAR-CLV-GDO-1 IN GDO.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM GAR-FIO-GDO.
           IF NOT FIO-STAT-OKS
               MOVE 'GAR'          TO MSG-COD-SIST
               MOVE 'GDO    NEX'   TO MSG-COD-MENS
           ELSE
               MOVE GAR-COD-DOC IN GDO TO OPD-CIC-IOPD IN DAP-VARI
               MOVE OPD-CAI-IOPD IN DAP-VARI TO OPD-CAI-IOPD IN OPD
               MOVE OPD-IIC-IOPD IN DAP-VARI TO OPD-IIC-IOPD IN OPD
               MOVE FIO-GET-KEY TO FIO-CMND
               PERFORM DAP-FIO-OPD
               IF NOT FIO-STAT-OKS
                   MOVE 'GAR'          TO MSG-COD-SIST
                   MOVE 'OPD    NEX'   TO MSG-COD-MENS
               ELSE
               IF OPD-COD-STAT IN OPD NOT = 'G'
                   MOVE 'GAR'            TO MSG-COD-SIST
                   MOVE 'OPD    NOVIG'   TO MSG-COD-MENS.
       FIN-BUS-GDO-OPD.
           EXIT.

      *>>>>
       COPY GARBGVCR.
       COPY GARBKVCR.

       COPY GARBFGDG.
      *<<<< NOT PGM_PER
       COPY GARBFGDO.
      *>>>>
       COPY GARBFGES.
       COPY GARBFGSE.
       COPY GARBFGVT.
       COPY GARBFTAG.

       COPY SGCBFDBC.
      *<<<< NOT PGM_BFA
       COPY DEUBFFIA.
      *>>>>
      *<<<< NOT PGM_PER
       COPY DAPBFOPD.
      *>>>>

       COPY TABBFCAM.

       COPY SGCBGCLI.

       COPY GNSBBTAB.
       COPY GNSBVCOD.
       COPY GNSBVTAB.
       COPY GNSBGCPT.
       COPY GNSBGSTR.
       COPY GNSBGFEC.
       COPY GNSBPFEC.
       COPY GNSBGHOY.
      *<<<< NOT PGM_PER
       COPY GNSBGINT.
      *>>>>
       COPY GNSBGPES.

       COPY GNSBEGLS.
      *>>>>
