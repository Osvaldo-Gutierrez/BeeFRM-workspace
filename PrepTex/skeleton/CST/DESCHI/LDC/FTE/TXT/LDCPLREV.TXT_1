*%! Codigo adicional para archivo LDCPLREV
*% IF RW
      *<<<< RW
       COPY LDCRWRE1. 
      *>>>>
*% END
*% IF WSS
      *<<<< WSS
      *Entidades de GNS
       COPY GNSBRMSC.
       COPY GNSWGHOY.
       COPY GNSWGFEC.
       COPY GNSWGCPT.
       COPY GNSWGIDC.
      *Entidades de TAB
       COPY TABBROFI.
       COPY TABBRUSR.
      *Entidades de LDC
*% IF PGM_DB2
      *<<<< PGM_DB2
           EXEC SQL INCLUDE LDCBRLDC END-EXEC.
       COPY GNSWGRQS REPLACING ==SQL-REQA== BY ==SQL-LDC-REQA==.
           EXEC SQL INCLUDE LDCBRARC END-EXEC.
       COPY GNSWGRQS REPLACING ==SQL-REQA== BY ==SQL-ARC-REQA==.
           EXEC SQL INCLUDE LDCBRARG END-EXEC.
       COPY GNSWGRQS REPLACING ==SQL-REQA== BY ==SQL-ARG-REQA==.
           EXEC SQL INCLUDE LDCBRRDL END-EXEC.
       COPY GNSWGRQS REPLACING ==SQL-REQA== BY ==SQL-RDL-REQA==.
           EXEC SQL INCLUDE SGCBRDBC END-EXEC.
       COPY GNSWGRQS REPLACING ==SQL-REQA== BY ==SQL-DBC-REQA==.
      *
           EXEC SQL INCLUDE SGCBROPE END-EXEC.
       COPY GNSWGRQS REPLACING ==SQL-REQA== BY ==SQL-OPE-REQA==.
           EXEC SQL INCLUDE SGCBRRCO END-EXEC.
       COPY GNSWGRQS REPLACING ==SQL-REQA== BY ==SQL-RCO-REQA==.
           EXEC SQL INCLUDE COLBRRDC END-EXEC.
       COPY GNSWGRQS REPLACING ==SQL-REQA== BY ==SQL-RDC-REQA==.
           EXEC SQL INCLUDE COLBROPC END-EXEC.
       COPY GNSWGRQS REPLACING ==SQL-REQA== BY ==SQL-OPC-REQA==.
           EXEC SQL INCLUDE COLBRDLC END-EXEC.
       COPY GNSWGRQS REPLACING ==SQL-REQA== BY ==SQL-DLC-REQA==.
           EXEC SQL INCLUDE DEUBRFIA END-EXEC.
       COPY GNSWGRQS REPLACING ==SQL-REQA== BY ==SQL-FIA-REQA==.
           EXEC SQL INCLUDE DEUBRAMF END-EXEC.
       COPY GNSWGRQS REPLACING ==SQL-REQA== BY ==SQL-AMF-REQA==.
      *>>>>
*% ELSE
      *<<<< NOT PGM_DB2
       COPY LDCBRLDC.
       COPY LDCBRARC.
       COPY LDCBRARG.
       COPY LDCBRRDC REPLACING RDC BY RDL.
       COPY SGCBRDBC.
      *
       COPY SGCBROPE.
       COPY SGCBRRCO.
       COPY COLBRRDC.
       COPY COLBROPC.
       COPY COLBRDLC.
       COPY DEUBRFIA.
       COPY DEUBRAMF.
      *>>>>
*% END
*% IF PGM_BSH
       COPY GARBRGDD.
       COPY GARBRGDG.
       COPY GARBRGVT.
       COPY GARBRGES.
*% ELSE
*% IF PGM_DB2
           EXEC SQL INCLUDE GARBRGDD END-EXEC.
       COPY GNSWGRQS REPLACING ==SQL-REQA== BY ==SQL-GDD-REQA==.
           EXEC SQL INCLUDE GARBRGDG END-EXEC.
       COPY GNSWGRQS REPLACING ==SQL-REQA== BY ==SQL-GDG-REQA==.
           EXEC SQL INCLUDE GARBRGVT END-EXEC.
       COPY GNSWGRQS REPLACING ==SQL-REQA== BY ==SQL-GVT-REQA==.
           EXEC SQL INCLUDE GARBRGES END-EXEC.
       COPY GNSWGRQS REPLACING ==SQL-REQA== BY ==SQL-GES-REQA==.
*% ELSE
       COPY GARBRGDD.
       COPY GARBRGDG.
       COPY GARBRGVT.
       COPY GARBRGES.
*% END
*% END

       COPY TABBRCAM.
       01  WSS-VARI.
      *RVM-CST-INI 10-MAY-1996
           03  WSS-PVEZ              VALUE 'S'       PIC X(01).
           03  WSS-NUM-ICLI-ANT      VALUE SPACES    PIC X(08).
           03  WSS-COD-OFIC-ANT      VALUE SPACES    PIC X(03).
           03  WSS-COD-EJEC-ANT      VALUE SPACES    PIC X(12).
      *RVM-CST-FIN 10-MAY-1996
           03  WSS-FEC-FPRO.
               05  WSS-NUM-DPRO                      PIC 9(02).
               05  WSS-NUM-MPRO                      PIC 9(02).
               05  WSS-NUM-SPRO                      PIC 9(02).
               05  WSS-NUM-APRO                      PIC 9(02).
           03  WSS-FEC-FTER.
               05  WSS-NUM-STER                      PIC 9(02).
               05  WSS-NUM-ATER                      PIC 9(02).
               05  WSS-NUM-MTER                      PIC 9(02).
               05  WSS-NUM-DTER                      PIC 9(02).
           03  WSS-FEC-FPAS.
               05  WSS-NUM-SPAS                      PIC Z(02).
               05  WSS-NUM-APAS                      PIC Z(02).
               05  WSS-NUM-MPAS                      PIC Z(02).
               05  WSS-NUM-DPAS                      PIC Z(02).
           03  WSS-COD-OFIC                          PIC X(03).
           03  WSS-COD-EJEC                          PIC X(12).
           03  WSS-COD-STAT                          PIC X(01).
           03  WSS-CLA-OPE.
               05  WSS-TIP-OPE                       PIC X(03).
               05  WSS-STP-OPE                       PIC X(03).
           03  ARC-KEY-IARC.
               05  ARC-KEY-ILDC.
                   07  ARC-CAI-ICLF               PIC X(04).      
                   07  ARC-IIC-ICLF               PIC 9(08).      
*% IF PGM_DB2
                   07  ARC-NUM-ILDC   COMP        PIC S9(04).
               05  ARC-NUM-IARC       COMP        PIC S9(04).
*% ELSE
                   07  ARC-NUM-ILDC               PIC 9(02).
               05  ARC-NUM-IARC                   PIC 9(01).
*% END
           03  ARG-KEY-IARG.
               05  ARG-KEY-ILDC.
                   07  ARG-CAI-ICLF               PIC X(04).      
                   07  ARG-IIC-ICLF               PIC 9(08).      
*% IF PGM_DB2
                   07  ARG-NUM-ILDC  COMP         PIC S9(04).
               05  ARG-NUM-IARG      COMP         PIC S9(04).
*% ELSE
                   07  ARG-NUM-ILDC               PIC 9(02).
               05  ARG-NUM-IARG                   PIC 9(01).
*% END
           03  WSS-IARC       VALUE ZEROES        PIC 9(02).
           03  WSS-IARG       VALUE ZEROES        PIC 9(02).
           03  WSS-IFLD       VALUE ZEROES        PIC 9(02).
           03  WSS-MOV        VALUE ZEROES        PIC 9(02).
           03  WSS-FIN        VALUE ZEROES        PIC 9(01).

           03  WSS-TAB-ARC   OCCURS 9 TIMES.
               05  WSS-COD-TOOC                   PIC X(05).
               05  WSS-COD-AOOC                   PIC X(08).
               05  WSS-COD-VCOC                   PIC X(05).

           03  WSS-TAB-ARG   OCCURS 9 TIMES.
      *DAD ini  15-SEP-1992
               05  WSS-COD-TGAR                   PIC X(03).
      *DAD fin  15-SEP-1992
               05  WSS-COD-TOGA                   PIC X(05).
               05  WSS-COD-AOGA                   PIC X(08).
               05  WSS-NUM-PORG                   PIC 9(03).

           03 WSS-FEC-FHOY.
              05 WSS-NUM-SHOY                      PIC 9(02).
              05 WSS-NUM-AHOY                      PIC 9(02).
              05 WSS-NUM-MHOY                      PIC 9(02).
              05 WSS-NUM-DHOY                      PIC 9(02).
           03  WSS-STAT-RDC          VALUE ZEROES  PIC 9(01).
           03  WSS-IND-MCLI          VALUE SPACES  PIC X(01).
      *FLB CST  24-JAN-1994 
           03  WSS-CIC-TOCF                        PIC X(03).
       COPY LDCWGCCU.
      *>>>>
*% END
*% IF WSS_DTC
      *<<<< WSS_DTC
      * Entidades de TAB
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-CAM-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-OFI-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-USR-REQA==.
      * Entidades de GNS
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-MSC-REQA==.
      * Entidades de COL
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-OPC-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-DLC-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-RDC-REQA==.
      * Entidades de DEU
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-FIA-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-AMF-REQA==.
      * Entidades de GAR
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-GDD-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-GDG-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-GVT-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-GES-REQA==.
      * Entidades de LDC
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-LDC-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-ARC-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-ARG-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-RDL-REQA==.
      * Entidades de SGC
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-DBC-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-OPE-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-RCO-REQA==.
      *>>>>
*% END
*% IF RT
      *<<<< RT
       COPY LDCRTRE1. 
      *>>>>
*% END
*% IF INI
*% IF PGM_ARG
           MOVE FIO-INP      TO FIO-CMND.
           MOVE 'GNS'        TO FIO-SIST.
           PERFORM GNS-FIO-TAB.
*% END
      *<<<< INI
           MOVE FIO-ACCS-UPD TO FIO-ACCS.
           MOVE FIO-ACC      TO FIO-CMND.
           MOVE 'LDC'        TO FIO-SIST.
           PERFORM LDC-FIO-LDC.
           MOVE FIO-INP TO FIO-CMND.
           PERFORM LDC-FIO-LDC.

           MOVE 'LDC'        TO FIO-SIST.
           MOVE FIO-ACCS-UPD TO FIO-ACCS.
           MOVE FIO-ACC      TO FIO-CMND.
           PERFORM LDC-FIO-ARC.
           MOVE FIO-INP TO FIO-CMND.
           PERFORM LDC-FIO-ARC.

           MOVE 'LDC'        TO FIO-SIST.
           MOVE FIO-ACCS-UPD TO FIO-ACCS.
           MOVE FIO-ACC      TO FIO-CMND.
           PERFORM LDC-FIO-ARG.
           MOVE FIO-INP TO FIO-CMND.
           PERFORM LDC-FIO-ARG.

           MOVE 'LDC'        TO FIO-SIST.
           MOVE FIO-ACCS-UPD TO FIO-ACCS.
           MOVE FIO-ACC      TO FIO-CMND.
           PERFORM LDC-FIO-RDC.
           MOVE FIO-INP TO FIO-CMND.
           PERFORM LDC-FIO-RDC.

           MOVE 'TAB'        TO FIO-SIST.
           MOVE FIO-ACCS-UPD TO FIO-ACCS.
           MOVE FIO-ACC      TO FIO-CMND.
           PERFORM GNS-FIO-TAB.
           MOVE FIO-INP TO FIO-CMND.
           PERFORM GNS-FIO-TAB.

           MOVE 'DEU'        TO FIO-SIST.
           MOVE FIO-ACCS-UPD TO FIO-ACCS.
           MOVE FIO-ACC      TO FIO-CMND.
           PERFORM GNS-FIO-TAB.
           MOVE FIO-INP TO FIO-CMND.
           PERFORM GNS-FIO-TAB.

           MOVE 'TAB'        TO FIO-SIST.
           MOVE FIO-ACCS-UPD TO FIO-ACCS.
           MOVE FIO-ACC      TO FIO-CMND.
           PERFORM TAB-FIO-OFI.
           MOVE FIO-INP TO FIO-CMND.
           PERFORM TAB-FIO-OFI.

           MOVE 'TAB'        TO FIO-SIST.
           MOVE FIO-ACCS-UPD TO FIO-ACCS.
           MOVE FIO-ACC      TO FIO-CMND.
           PERFORM TAB-FIO-USR.
           MOVE FIO-INP TO FIO-CMND.
           PERFORM TAB-FIO-USR.

           MOVE 'SGC'        TO FIO-SIST.
           MOVE FIO-ACCS-UPD TO FIO-ACCS.
           MOVE FIO-ACC      TO FIO-CMND.
           PERFORM SGC-FIO-DBC.
           MOVE FIO-INP TO FIO-CMND.
           PERFORM SGC-FIO-DBC.

      *FLB CST  14-MAR-1994 DE AUI EN ADELANTE POR FLB
           MOVE FIO-ACCS-UPD TO FIO-ACCS.
           MOVE FIO-ACC      TO FIO-CMND.
           MOVE 'TAB'        TO FIO-SIST.
           PERFORM TAB-FIO-CAM.
           MOVE FIO-INP TO FIO-CMND.
           PERFORM TAB-FIO-CAM.

           MOVE 'GAR'   TO FIO-SIST.
           MOVE FIO-ACCS-UPD TO FIO-ACCS.
           MOVE FIO-ACC      TO FIO-CMND.
           PERFORM GAR-FIO-GDD.
           MOVE FIO-INP TO FIO-CMND.
           PERFORM GAR-FIO-GDD.

           MOVE 'GAR'   TO FIO-SIST.
           MOVE FIO-ACCS-UPD TO FIO-ACCS.
           MOVE FIO-ACC      TO FIO-CMND.
           PERFORM GAR-FIO-GDG.
           MOVE FIO-INP TO FIO-CMND.
           PERFORM GAR-FIO-GDG.

           MOVE 'GAR'   TO FIO-SIST.
           MOVE FIO-ACCS-UPD TO FIO-ACCS.
           MOVE FIO-ACC      TO FIO-CMND.
           PERFORM GAR-FIO-GVT.
           MOVE FIO-INP TO FIO-CMND.
           PERFORM GAR-FIO-GVT.

           MOVE 'GAR'   TO FIO-SIST.
           MOVE FIO-ACCS-UPD TO FIO-ACCS.
           MOVE FIO-ACC      TO FIO-CMND.
           PERFORM GAR-FIO-GES.
           MOVE FIO-INP TO FIO-CMND.
           PERFORM GAR-FIO-GES.

           MOVE 'COL'   TO FIO-SIST.
           MOVE FIO-ACCS-UPD TO FIO-ACCS.
           MOVE FIO-ACC      TO FIO-CMND.
           PERFORM COL-FIO-RDC.
           MOVE FIO-INP TO FIO-CMND.
           PERFORM COL-FIO-RDC.

           MOVE 'COL'   TO FIO-SIST.
           MOVE FIO-ACCS-UPD TO FIO-ACCS.
           MOVE FIO-ACC      TO FIO-CMND.
           PERFORM COL-FIO-DLC.
           MOVE FIO-INP TO FIO-CMND.
           PERFORM COL-FIO-DLC.

           MOVE 'COL'   TO FIO-SIST.
           MOVE FIO-ACCS-UPD TO FIO-ACCS.
           MOVE FIO-ACC      TO FIO-CMND.
           PERFORM COL-FIO-OPC.
           MOVE FIO-INP TO FIO-CMND.
           PERFORM COL-FIO-OPC.

           MOVE 'DEU'   TO FIO-SIST.
           MOVE FIO-ACCS-UPD TO FIO-ACCS.
           MOVE FIO-ACC      TO FIO-CMND.
           PERFORM DEU-FIO-FIA.
           MOVE FIO-INP TO FIO-CMND.
           PERFORM DEU-FIO-FIA.

           MOVE 'DEU'   TO FIO-SIST.
           MOVE FIO-ACCS-UPD TO FIO-ACCS.
           MOVE FIO-ACC      TO FIO-CMND.
           PERFORM DEU-FIO-AMF.
           MOVE FIO-INP TO FIO-CMND.
           PERFORM DEU-FIO-AMF.
      *>>>>
*% END
*% IF INI
      *<<<< INI
           DISPLAY ' '.
           DISPLAY 'INICIO CAPTURA PARAMETROS'.
           DISPLAY ' '.
      * Captura codigo de oficina,ejecutivo,estado,fecha parametro
           DISPLAY 'INGRESE FECHA PROXIMA REVISION (ddmmssaa) : '.
           ACCEPT WSS-FEC-FPRO IN WSS-VARI.
           DISPLAY WSS-FEC-FPRO IN WSS-VARI.
     
           DISPLAY 'INGRESE COD. OFICINA  (XXX/*)    : '.
           ACCEPT WSS-COD-OFIC IN WSS-VARI.
           DISPLAY WSS-COD-OFIC IN WSS-VARI.

           DISPLAY 'INGRESE COD. EJECUTIVO (X(12)/*) : '.
           ACCEPT WSS-COD-EJEC IN WSS-VARI.
           DISPLAY WSS-COD-EJEC IN WSS-VARI.

           DISPLAY 'INGRESE COD. ESTADO    (X/*)     : '.
           ACCEPT WSS-COD-STAT IN WSS-VARI.
           DISPLAY WSS-COD-STAT IN WSS-VARI.

           DISPLAY 'FIN CAPTURA PARAMETROS'.
           DISPLAY ' '.
           DISPLAY 'INICIO VALIDACION PARAMETROS'.

      *VAL-FEC Valida fecha proceso
           MOVE WSS-FEC-FPRO IN WSS-VARI TO FEC-FECH.
           MOVE FEC-FORM-FEC             TO FEC-FORM.
           MOVE FEC-FBLK-N               TO FEC-FBLK.
           MOVE FEC-CHOY-N               TO FEC-CHOY.  
           MOVE FEC-VHBL-N               TO FEC-VHBL.
           MOVE FEC-VAL-FEC              TO FEC-CMND.
           PERFORM PRO-FEC.
           IF NOT FEC-STAT-OKS
              DISPLAY ' '
              DISPLAY ' PROCESO CANCELADO '
              DISPLAY ' ERROR EN VALIDACION F. DE PROCESO : ' 
                        WSS-FEC-FPRO IN WSS-VARI '  ' FEC-MENS
*% IF PGM_ARG
      *<<<< PGM_ARG
              PERFORM DB2-VSM-ABT.
      *>>>>
*% ELSE
      *<<<< NOT PGM_ARG
              PERFORM GNS-PRO-ABT.
      *>>>>
*% END
 
      *VAL-OFI Valida codigo de oficina
           IF WSS-COD-OFIC IN WSS-VARI > SPACES AND
              WSS-COD-OFIC IN WSS-VARI NOT = '*'
              MOVE WSS-COD-OFIC IN WSS-VARI TO OFI-COD-OFIC IN OFI
              PERFORM VAL-OFI
              IF MSG-GLS-MENS = 'COD    NEX'
                 DISPLAY ' '
                 DISPLAY ' PROCESO CANCELADO '
                 DISPLAY ' ERROR EN VALIDACION COD. OFICINA : ' 
                           WSS-COD-OFIC IN WSS-VARI
*% IF PGM_ARG
      *<<<< PGM_ARG
                 PERFORM DB2-VSM-ABT.
      *>>>>
*% ELSE
      *<<<< NOT PGM_ARG
                 PERFORM GNS-PRO-ABT.
      *>>>>
*% END

      *VAL-USR Valida codigo de ejecutivo
           IF WSS-COD-EJEC IN WSS-VARI > SPACES AND
              WSS-COD-EJEC IN WSS-VARI NOT = '*'
              MOVE WSS-COD-EJEC IN WSS-VARI TO USR-COD-USER IN USR
              PERFORM VAL-USR
              IF MSG-GLS-MENS = 'COD    NEX'
                 DISPLAY ' '
                 DISPLAY ' PROCESO CANCELADO '
                 DISPLAY ' ERROR EN VALIDACION COD. EJECUTIVO : ' 
                           WSS-COD-EJEC IN WSS-VARI
*% IF PGM_ARG
      *<<<< PGM_ARG
                 PERFORM DB2-VSM-ABT.
      *>>>>
*% ELSE
      *<<<< NOT PGM_ARG
                 PERFORM GNS-PRO-ABT.
      *>>>>
*% END

      *VAL-MSC Valida codigo de estado
           IF WSS-COD-STAT IN WSS-VARI > SPACES AND
              WSS-COD-STAT IN WSS-VARI NOT = '*'
              MOVE 'DEU'  TO MSC-COD-SIST
              MOVE 'STA ' TO MSC-COD-TMSC IN MSC
              MOVE WSS-COD-STAT IN WSS-VARI TO MSC-COD-CMSC IN MSC
              PERFORM VAL-MSC
              IF MSG-GLS-MENS = 'COD    NEX'
*% IF PGM_ARG
      *<<<< PGM_ARG
                 PERFORM DB2-VSM-ABT.
      *>>>>
*% ELSE
      *<<<< NOT PGM_ARG
                 PERFORM GNS-PRO-ABT.
      *>>>>
*% END

           IF WSS-COD-STAT IN WSS-VARI = 'C' OR 'R'
                 DISPLAY ' '
                 DISPLAY ' PROCESO CANCELADO '
                 DISPLAY ' ESTADO DEBE SER ING, VER O ACT : ' 
*% IF PGM_ARG
      *<<<< PGM_ARG
                 PERFORM DB2-VSM-ABT.
      *>>>>
*% ELSE
      *<<<< NOT PGM_ARG
                 PERFORM GNS-PRO-ABT.
      *>>>>
*% END

           MOVE WSS-NUM-DPRO IN WSS-VARI TO WSS-NUM-DHAS IN WSS-REV
                                            WSS-NUM-DTER IN WSS-VARI.
           MOVE WSS-NUM-MPRO IN WSS-VARI TO WSS-NUM-MHAS IN WSS-REV
                                            WSS-NUM-MTER IN WSS-VARI.
           MOVE WSS-NUM-SPRO IN WSS-VARI TO WSS-NUM-SHAS IN WSS-REV
                                            WSS-NUM-STER IN WSS-VARI.
           MOVE WSS-NUM-APRO IN WSS-VARI TO WSS-NUM-AHAS IN WSS-REV
                                            WSS-NUM-ATER IN WSS-VARI.
           DISPLAY ' '.
           DISPLAY 'FIN VALIDACION PARAMETROS'.
           DISPLAY ' '.

           MOVE SPACES TO CCU-CMMA.
      * OBTIENE CODIGO VALOR DE CAMBIO DE PESOS MEDIANTE CIC DE LA MONEDA '0999'
           MOVE 'TAB'          TO FIO-SIST.
           MOVE 'VLR'          TO TAB-CIC-TTAB IN TAB.
           MOVE '0999  '       TO TAB-CIC-CTAB IN TAB.
           MOVE 'TAB-CIC-TABL' TO FIO-AKEY.
           MOVE FIO-GET-KEY    TO FIO-CMND.
           PERFORM GNS-FIO-TAB.
           IF NOT FIO-STAT-OKS
              DISPLAY ' ' 
              DISPLAY ' PROCESO CANCELADO ' 
              DISPLAY ' ERROR EN OBTENCION CIC MONEDA 0999 : ' 
                        TAB-COD-CTAB IN TAB ' FS: ' FIO-STAT
*% IF PGM_ARG
      *<<<< PGM_ARG
              PERFORM DB2-VSM-ABT.
      *>>>>
*% ELSE
      *<<<< NOT PGM_ARG
              PERFORM GNS-PRO-ABT.
      *>>>>
*% END
           MOVE TAB-COD-CTAB IN TAB TO CCU-COD-PESO IN CCU-VARI.

           PERFORM GET-FHOY.
           MOVE HOY-SHOY           TO WSS-NUM-SHOY IN WSS-VARI.
           MOVE HOY-AHOY           TO WSS-NUM-AHOY IN WSS-VARI.
           MOVE HOY-MHOY           TO WSS-NUM-MHOY IN WSS-VARI.
           MOVE HOY-DHOY           TO WSS-NUM-DHOY IN WSS-VARI.
      *>>>>
*% END
*% IF LUP_INP
      *<<<< LUP_INP

           IF WSS-COD-OFIC IN WSS-VARI > SPACES AND
              WSS-COD-OFIC IN WSS-VARI NOT = '*' AND
              WSS-COD-OFIC IN WSS-VARI NOT = CLF-COD-OFIC IN CLF
               GO TO NXT-INP-SRT.

           IF WSS-COD-EJEC IN WSS-VARI > SPACES AND
              WSS-COD-EJEC IN WSS-VARI NOT = '*' AND
              WSS-COD-EJEC IN WSS-VARI NOT = CLF-COD-EJEC IN CLF
               GO TO NXT-INP-SRT.

      *FLB CST  15-MAR-1994 
           IF CLF-MSC-STAT IN CLF = 'C' OR 'R'
               GO TO NXT-INP-SRT.

           IF WSS-COD-STAT IN WSS-VARI > SPACES AND
              WSS-COD-STAT IN WSS-VARI NOT = '*' AND
              WSS-COD-STAT IN WSS-VARI NOT = CLF-MSC-STAT IN CLF
               GO TO NXT-INP-SRT.

           IF CLF-FEC-FPRV IN CLF > WSS-FEC-FTER IN WSS-VARI 
               GO TO NXT-INP-SRT. 

      *>>>>
*% END
*% IF INI_OUT
      *<<<< INI_OUT
           MOVE FIO-INP TO FIO-CMND.
           PERFORM LDC-FIO-CLF.
      *>>>>
*% END
*% IF LUP_OUT
      *<<<< LUP_OUT
      *BUS-OFI busca oficina en tablas
           MOVE SPACES TO WSS-GLS-OFIC IN WSS-REV.
           IF CLF-COD-OFIC IN SRT > SPACES
               MOVE CLF-COD-OFIC IN SRT TO OFI-COD-OFIC IN OFI
               PERFORM BUS-OFI
               MOVE OFI-GLS-DESC IN OFI TO WSS-GLS-OFIC IN WSS-REV.
      *BUS-USR busca usuario en tablas
           MOVE SPACES TO WSS-GLS-EJEC IN WSS-REV.
           IF CLF-COD-EJEC IN SRT > SPACES
               MOVE CLF-COD-EJEC IN SRT TO USR-COD-USER IN USR
               PERFORM BUS-USR
               MOVE USR-GLS-DESC IN USR TO WSS-GLS-EJEC IN WSS-REV.
      *BUS-TAB busca glosa de codigo de estado
           MOVE SPACES TO WSS-GLS-STAT IN WSS-REV.
           IF CLF-MSC-STAT IN SRT > SPACES
               MOVE 'DEU'               TO MSC-COD-SIST
               MOVE 'STA '              TO MSC-COD-TMSC IN MSC
               MOVE CLF-MSC-STAT IN SRT TO MSC-COD-CMSC IN MSC
               PERFORM BUS-MSC
               MOVE MSC-GLS-ABRV IN MSC TO WSS-GLS-STAT IN WSS-REV.

      * JVM: SI EXISTE MAS DE UN CLIENTE DESPLIEGA "MULTIPLES CLIENTES"
      * EN EL NOMBRE Y BLANCOS EN RUT ; posteriormente cuando se modi-
      * fique layout del listado para mostrar todos los clientes debe
      * hacerse LOOP para obtener desde RDC todos los clientes de la CLF
      *
      * Obtiene Datos desde RDC para datos clientes 
           PERFORM GET-CUR-RDC.
           IF WSS-STAT-RDC IN WSS-VARI = 1
              PERFORM RST-DBC
           ELSE
              PERFORM GET-RDC-DBC
              PERFORM GET-NXT-RDC
              IF WSS-IND-MCLI IN WSS-VARI = 'M'
                 MOVE 'MULTIPLES CLIENTES' TO DBC-GLS-NOMC IN DBC.

      *BUS-TAB busca glosa de codigo en tabla
           MOVE SPACES TO WSS-GLS-VCCF IN WSS-REV.
           IF CLF-COD-VCCF IN SRT > SPACES
               MOVE 'TAB'               TO TAB-COD-SIST
               MOVE 'VLR'               TO TAB-COD-TTAB IN TAB
               MOVE CLF-COD-VCCF IN SRT TO TAB-COD-CTAB IN TAB
               PERFORM BUS-TAB
               MOVE TAB-GLS-DCOR IN TAB TO WSS-GLS-VCCF IN WSS-REV.
      *BUS-TAB busca glosa de codigo en tabla
           MOVE SPACES TO WSS-GLS-TOCF IN WSS-REV.
           IF CLF-COD-TOCF IN SRT > SPACES
               MOVE 'TAB'               TO TAB-COD-SIST
               MOVE 'TIO'               TO TAB-COD-TTAB IN TAB
               MOVE CLF-COD-TOCF IN SRT TO TAB-COD-CTAB IN TAB
               PERFORM BUS-TAB
      *FLB CST  24-JAN-1994 
               MOVE TAB-CIC-CTAB IN TAB TO WSS-CIC-TOCF 
               MOVE TAB-GLS-DCOR IN TAB TO WSS-GLS-TOCF IN WSS-REV
           ELSE
               MOVE 'CGE' TO WSS-CIC-TOCF 
               DISPLAY 'CLF SIN TIPO OPERACION ' 
                                         CLF-CAI-ICLF IN SRT ' '
                                         CLF-IIC-ICLF IN SRT.

           MOVE CLF-FEC-FAPE IN SRT TO WSS-FEC-FPAS IN WSS-VARI.
           MOVE WSS-NUM-DPAS IN WSS-VARI TO WSS-NUM-DAPE IN WSS-REV.
           MOVE WSS-NUM-MPAS IN WSS-VARI TO WSS-NUM-MAPE IN WSS-REV.
           MOVE WSS-NUM-SPAS IN WSS-VARI TO WSS-NUM-SAPE IN WSS-REV.
           MOVE WSS-NUM-APAS IN WSS-VARI TO WSS-NUM-AAPE IN WSS-REV.
      *
           MOVE CLF-FEC-FURV IN SRT TO WSS-FEC-FPAS IN WSS-VARI.
           MOVE WSS-NUM-DPAS IN WSS-VARI TO WSS-NUM-DURV IN WSS-REV.
           MOVE WSS-NUM-MPAS IN WSS-VARI TO WSS-NUM-MURV IN WSS-REV.
           MOVE WSS-NUM-SPAS IN WSS-VARI TO WSS-NUM-SURV IN WSS-REV.
           MOVE WSS-NUM-APAS IN WSS-VARI TO WSS-NUM-AURV IN WSS-REV.
      *
           MOVE CLF-FEC-FPRV IN SRT TO WSS-FEC-FPAS IN WSS-VARI.
           MOVE WSS-NUM-DPAS IN WSS-VARI TO WSS-NUM-DPRV IN WSS-REV.
           MOVE WSS-NUM-MPAS IN WSS-VARI TO WSS-NUM-MPRV IN WSS-REV.
           MOVE WSS-NUM-SPAS IN WSS-VARI TO WSS-NUM-SPRV IN WSS-REV.
           MOVE WSS-NUM-APAS IN WSS-VARI TO WSS-NUM-APRV IN WSS-REV.
      *
           MOVE CLF-FEC-FVEN IN SRT TO WSS-FEC-FPAS IN WSS-VARI.
           MOVE WSS-NUM-DPAS IN WSS-VARI TO WSS-NUM-DVEN IN WSS-REV.
           MOVE WSS-NUM-MPAS IN WSS-VARI TO WSS-NUM-MVEN IN WSS-REV.
           MOVE WSS-NUM-SPAS IN WSS-VARI TO WSS-NUM-SVEN IN WSS-REV.
           MOVE WSS-NUM-APAS IN WSS-VARI TO WSS-NUM-AVEN IN WSS-REV.

      *FLB CST  24-JAN-1994 
           IF WSS-CIC-TOCF = 'CGE'
               MOVE ZEROES TO WSS-VAL-CUCF IN WSS-REV
               MOVE ZEROES TO WSS-VAL-CDCF IN WSS-REV
               GO TO FIN-CCU.
      *FLB CST  24-JAN-1994 

           MOVE CLF-CAI-ICLF IN SRT TO CCU-CAI-ICLF.
           MOVE CLF-IIC-ICLF IN SRT TO CCU-IIC-ICLF.
           MOVE SPACES TO CCU-CAI-IOPC(1).
           MOVE ZEROES TO CCU-IIC-IOPC(1).
           MOVE SPACES TO CCU-CAI-DCAN(1).
           MOVE ZEROES TO CCU-IIC-DCAN(1).
           MOVE ZEROES TO CCU-NUM-DCAN(1).
           MOVE SPACES TO CCU-OPE-INDS.
           MOVE SPACES TO CCU-CAI-ICLI.
           MOVE ZEROES TO CCU-IIC-ICLI.
           MOVE ZEROES TO CCU-VAL-CUTI.
           CALL 'LDCSBCCU' USING CCU-CMMA .
           IF CCU-NUM-MENS < CCU-NUM-CALC AND
              CCU-NUM-MENS > ZEROES
               MOVE ZEROES TO WSS-VAL-CUCF IN WSS-REV
               MOVE ZEROES TO WSS-VAL-CDCF IN WSS-REV
               MOVE CCU-COD-SIST IN CCU-VARI TO MSG-COD-SIST
               MOVE CCU-COD-MENS IN CCU-VARI TO MSG-COD-MENS
               PERFORM GET-MSG
               IF CCU-CAMB > SPACES 
                   MOVE CCU-CAMB TO CCU-MEN2
                   MOVE MSG-GLS-DESC TO CCU-MEN1
                   DISPLAY 'CALIFICACION ' CCU-CAI-ICLF CCU-IIC-ICLF
                   DISPLAY 'ERROR CALCULO CUPOS ' CCU-MENS
                   DISPLAY ' '
               ELSE
                   MOVE MSG-GLS-DESC TO CCU-MENS
                   DISPLAY 'CALIFICACION ' CCU-CAI-ICLF CCU-IIC-ICLF
                   DISPLAY 'ERROR CALCULO CUPOS ' CCU-MENS
                   DISPLAY ' '
           ELSE
               MOVE CCU-VAL-CUTI IN CCU-VARI TO
                                         WSS-VAL-CUCF IN WSS-REV
               SUBTRACT CCU-VAL-CUTI IN CCU-VARI FROM
                          CLF-VAL-CMAX IN SRT GIVING
                                         WSS-VAL-CDCF IN WSS-REV.
      *FLB CST  24-JAN-1994 
       FIN-CCU.
      *RVM-CST-INI 10-MAY-1996 
           IF WSS-PVEZ IN WSS-VARI  NOT = 'S' AND
              DBC-NUM-ICLI IN DBC NOT = WSS-NUM-ICLI-ANT IN WSS-VARI AND
              CLF-COD-OFIC IN SRT     = WSS-COD-OFIC-ANT IN WSS-VARI AND
              CLF-COD-EJEC IN SRT     = WSS-COD-EJEC-ANT IN WSS-VARI
               GENERATE TRL-LIN.

           MOVE 'N'                 TO WSS-PVEZ         IN WSS-VARI.
           MOVE DBC-NUM-ICLI IN DBC TO WSS-NUM-ICLI-ANT IN WSS-VARI.
           MOVE CLF-COD-OFIC IN SRT TO WSS-COD-OFIC-ANT IN WSS-VARI.
           MOVE CLF-COD-EJEC IN SRT TO WSS-COD-EJEC-ANT IN WSS-VARI.
      *RVM-CST-FIN 10-MAY-1996
      *>>>>
*% END
*% IF FIN_GEN_OUT
      *<<<< FIN_GEN_OUT
           MOVE CLF-CAI-ICLF IN SRT TO LDC-CAI-ICLF IN LDC.
           MOVE CLF-IIC-ICLF IN SRT TO LDC-IIC-ICLF IN LDC.
           MOVE ZEROS               TO LDC-NUM-ILDC IN LDC.
           MOVE FIO-GET-NLS TO FIO-CMND.
           PERFORM LDC-FIO-LDC.
           IF NOT ( FIO-STAT-OKS AND
                    CLF-CAI-ICLF IN SRT = LDC-CAI-ICLF IN LDC AND
                    CLF-IIC-ICLF IN SRT = LDC-IIC-ICLF IN LDC )
                    GO TO NXT-OUT-SRT.
           GENERATE HDR-RE1.
       GEN-RE1.
           PERFORM CLR-TAB VARYING WSS-IFLD FROM 1 BY 1 UNTIL 
                                                      WSS-IFLD > 9.
       CARGA-ARC.
           MOVE ZEROES TO WSS-IFLD WSS-IARC.
           MOVE LDC-KEY-ILDC IN LDC      TO ARC-KEY-ILDC IN WSS-VARI.
           MOVE ZEROES                   TO ARC-NUM-IARC IN WSS-VARI.
           MOVE ARC-KEY-IARC IN WSS-VARI TO ARC-KEY-IARC IN ARC.
           MOVE FIO-GET-NLS TO FIO-CMND.
       LEE-ARC. 
           PERFORM LDC-FIO-ARC.
           IF NOT FIO-STAT-OKS OR
              ARC-KEY-ILDC IN WSS-VARI NOT = ARC-KEY-ILDC IN ARC
              GO TO CARGA-ARG.
           PERFORM PUT-TAB-ARC.

       CARGA-ARG.
           MOVE ZEROES TO WSS-IFLD  WSS-IARG.
           MOVE LDC-KEY-ILDC IN LDC      TO ARG-KEY-ILDC IN WSS-VARI.
           MOVE ZEROES                   TO ARG-NUM-IARG IN WSS-VARI.
           MOVE ARG-KEY-IARG IN WSS-VARI TO ARG-KEY-IARG IN ARG.
           MOVE FIO-GET-NLS TO FIO-CMND.
       LEE-ARG. 
           PERFORM LDC-FIO-ARG.
           IF NOT FIO-STAT-OKS OR
              ARG-KEY-ILDC IN WSS-VARI NOT = ARG-KEY-ILDC IN ARG
              GO TO GEN-DET-RE1.
           PERFORM PUT-TAB-ARG.

       GEN-DET-RE1.
           PERFORM GEN-DET-LDC.
           GENERATE TRL-RE1.
           MOVE FIO-GET-NXT TO FIO-CMND.
           PERFORM LDC-FIO-LDC.
           IF FIO-STAT-OKS AND
              CLF-CAI-ICLF IN SRT = LDC-CAI-ICLF IN LDC AND
              CLF-IIC-ICLF IN SRT = LDC-IIC-ICLF IN LDC
              GO TO GEN-RE1.
      *>>>>
*% END
*% IF FIN_TMT
      *<<<< FIN_TMT
           MOVE FIO-CLO TO FIO-CMND.
           PERFORM LDC-FIO-CLF.

           MOVE FIO-CLO TO FIO-CMND.
           PERFORM LDC-FIO-LDC.

           MOVE FIO-CLO TO FIO-CMND.
           PERFORM SGC-FIO-DBC.

           MOVE FIO-CLO TO FIO-CMND.
           PERFORM LDC-FIO-ARC.

           MOVE FIO-CLO TO FIO-CMND.
           PERFORM LDC-FIO-ARG.

           MOVE FIO-CLO TO FIO-CMND.
           PERFORM LDC-FIO-RDC.

           MOVE 'TAB' TO FIO-SIST.                    

           MOVE FIO-CLO TO FIO-CMND.
           PERFORM GNS-FIO-TAB.

           MOVE FIO-CLO TO FIO-CMND.
           PERFORM TAB-FIO-OFI.

           MOVE FIO-CLO TO FIO-CMND.
           PERFORM TAB-FIO-USR.

      *FLB CST  14-MAR-1994 DE AQUI EN ADELANTE HECHO POR FLB
           MOVE FIO-CLO TO FIO-CMND.
           PERFORM TAB-FIO-CAM.

           MOVE FIO-CLO TO FIO-CMND.
           PERFORM GAR-FIO-GDD.

           MOVE FIO-CLO TO FIO-CMND.
           PERFORM GAR-FIO-GDG.

           MOVE FIO-CLO TO FIO-CMND.
           PERFORM GAR-FIO-GVT.

           MOVE FIO-CLO TO FIO-CMND.
           PERFORM GAR-FIO-GES.

           MOVE FIO-CLO TO FIO-CMND.
           PERFORM COL-FIO-RDC.

           MOVE FIO-CLO TO FIO-CMND.
           PERFORM COL-FIO-DLC.

           MOVE FIO-CLO TO FIO-CMND.
           PERFORM COL-FIO-OPC.

           MOVE FIO-CLO TO FIO-CMND.
           PERFORM DEU-FIO-FIA.

           MOVE FIO-CLO TO FIO-CMND.
           PERFORM DEU-FIO-AMF.
      *>>>>
*% END
*% IF FIN AND PGM_ARG
      *<<<< FIN AND PGM_ARG
           PERFORM STP-GNS-PRO-END.
      *>>>>
*% END
*% IF EOF
      *<<<< EOF
       GEN-DET-LDC SECTION.
       INI-GEN-DET-LDC.
           MOVE LDC-NUM-ILDC IN LDC TO WSS-NUM-ILDC IN WSS-RE1.
           MOVE LDC-GLS-DESC IN LDC TO WSS-GLS-DESC IN WSS-RE1.
           MOVE LDC-IND-VIGE IN LDC TO WSS-IND-VIGE IN WSS-RE1.
           MOVE LDC-IND-MGAR IN LDC TO WSS-IND-MGAR IN WSS-RE1.
           IF WSS-CIC-TOCF = 'CGE'
               MOVE ZEROES TO WSS-VAL-CMLC IN WSS-RE1
               MOVE ZEROES TO WSS-VAL-CDLC IN WSS-RE1
           ELSE
               MOVE CTOT-LCR IN CCU-VARI(LDC-NUM-ILDC IN LDC) TO
                                       WSS-VAL-CMLC IN WSS-RE1
               MOVE CDIS-LCR IN CCU-VARI(LDC-NUM-ILDC IN LDC) TO
                                       WSS-VAL-CDLC IN WSS-RE1.

      *ELIMINAR SI FUNCIONA EXTRACION MONEDA DE LDC
      *     MOVE WSS-GLS-VCCF IN WSS-REV TO WSS-GLS-VCCR IN WSS-RE1.
           MOVE '-'                 TO WSS-GLS-GUI1 IN WSS-RE1. 
           MOVE '-'                 TO WSS-GLS-GUI2 IN WSS-RE1. 
           IF LDC-FEC-FVEN IN LDC NOT > SPACES
               MOVE SPACES TO WSS-NUM-DVEN IN WSS-RE1
               MOVE SPACES TO WSS-NUM-MVEN IN WSS-RE1
               MOVE SPACES TO WSS-NUM-SVEN IN WSS-RE1
               MOVE SPACES TO WSS-NUM-AVEN IN WSS-RE1
           ELSE              
               MOVE LDC-NUM-DVEN IN LDC TO WSS-NUM-DVEN IN WSS-RE1
               MOVE LDC-NUM-MVEN IN LDC TO WSS-NUM-MVEN IN WSS-RE1
               MOVE LDC-NUM-SVEN IN LDC TO WSS-NUM-SVEN IN WSS-RE1
               MOVE LDC-NUM-AVEN IN LDC TO WSS-NUM-AVEN IN WSS-RE1.
           MOVE 0 TO WSS-FIN.
           PERFORM CMP-DET-LDC VARYING WSS-IFLD FROM 1 BY 1 
                                 UNTIL WSS-FIN = 1 OR WSS-IFLD > 9.
       FIN-GEN-DET-LDC.
           EXIT.

       CMP-DET-LDC SECTION.
       INI-CMP-DET-LDC.
           IF WSS-IARC = ZEROS AND WSS-IARG = ZEROS
               MOVE 1 TO WSS-FIN
               MOVE SPACES TO WSS-GLS-VCCR IN WSS-RE1
               MOVE SPACES TO WSS-COD-TOOC IN WSS-RE1
               MOVE SPACES TO WSS-COD-AOOC IN WSS-RE1
      *DAD ini  15-SEP-1992
               MOVE SPACES TO WSS-COD-TGAR IN WSS-RE1
      *DAD fin  15-SEP-1992
               MOVE SPACES TO WSS-COD-TOGA IN WSS-RE1
               MOVE SPACES TO WSS-COD-AOGA IN WSS-RE1
               MOVE ZEROES TO WSS-NUM-PORG IN WSS-RE1
               GO TO GEN-GEN-RE1.

           IF WSS-IFLD > WSS-IARC AND WSS-IFLD > WSS-IARG 
               MOVE 1 TO WSS-FIN
               GO TO FIN-CMP-DET-LDC.

           IF WSS-IFLD > 1
               MOVE ZEROES TO WSS-NUM-ILDC IN WSS-RE1
               MOVE SPACES TO WSS-GLS-DESC IN WSS-RE1
               MOVE SPACES TO WSS-IND-VIGE IN WSS-RE1
               MOVE SPACES TO WSS-IND-MGAR IN WSS-RE1
               MOVE ZEROES TO WSS-VAL-CMLC IN WSS-RE1
               MOVE ZEROES TO WSS-VAL-CDLC IN WSS-RE1
               MOVE SPACES TO WSS-NUM-DVEN IN WSS-RE1
               MOVE SPACES TO WSS-GLS-GUI1 IN WSS-RE1 
               MOVE SPACES TO WSS-NUM-MVEN IN WSS-RE1
               MOVE SPACES TO WSS-GLS-GUI2 IN WSS-RE1 
               MOVE SPACES TO WSS-NUM-SVEN IN WSS-RE1
               MOVE SPACES TO WSS-NUM-AVEN IN WSS-RE1.

           MOVE SPACES TO WSS-GLS-VCCR IN WSS-RE1.
           MOVE SPACES TO WSS-COD-TOOC IN WSS-RE1.
           MOVE SPACES TO WSS-COD-AOOC IN WSS-RE1.
      *DAD ini  15-SEP-1992
           MOVE SPACES TO WSS-COD-TGAR IN WSS-RE1.
      *DAD fin  15-SEP-1992
           MOVE SPACES TO WSS-COD-TOGA IN WSS-RE1.
           MOVE SPACES TO WSS-COD-AOGA IN WSS-RE1.
           MOVE ZEROES TO WSS-NUM-PORG IN WSS-RE1.

      *DAD ini  15-SEP-1992
      *     IF WSS-IARC = 1
      *         MOVE WSS-COD-VCOC IN WSS-VARI(1) TO 
      *                              WSS-GLS-VCCR IN WSS-RE1.
      *DAD fin  15-SEP-1992

           IF WSS-IARC > ZEROES AND WSS-IARC NOT < WSS-IFLD                
      *DAD ini  15-SEP-1992
               MOVE WSS-COD-VCOC IN WSS-VARI(WSS-IFLD) TO 
                                    WSS-GLS-VCCR IN WSS-RE1
      *DAD fin  15-SEP-1992
               MOVE WSS-COD-TOOC IN WSS-VARI(WSS-IFLD) TO 
                                    WSS-COD-TOOC IN WSS-RE1
               MOVE WSS-COD-AOOC IN WSS-VARI(WSS-IFLD) TO 
                                    WSS-COD-AOOC IN WSS-RE1.

           IF WSS-IARG > ZEROES AND WSS-IARG NOT < WSS-IFLD
      *DAD ini  15-SEP-1992
               MOVE WSS-COD-TGAR IN WSS-VARI(WSS-IFLD) TO 
                                    WSS-COD-TGAR IN WSS-RE1
      *DAD fin  15-SEP-1992
               MOVE WSS-COD-TOGA IN WSS-VARI(WSS-IFLD) TO 
                                    WSS-COD-TOGA IN WSS-RE1
               MOVE WSS-COD-AOGA IN WSS-VARI(WSS-IFLD) TO 
                                    WSS-COD-AOGA IN WSS-RE1
               MOVE WSS-NUM-PORG IN WSS-VARI(WSS-IFLD) TO 
                                    WSS-NUM-PORG IN WSS-RE1.
       GEN-GEN-RE1.
           GENERATE DL-RE1.
       FIN-CMP-DET-LDC.
           EXIT.

       CLR-TAB SECTION.
       INI-CLR-TAB.
           MOVE SPACES TO WSS-COD-TOOC IN WSS-VARI(WSS-IFLD).
           MOVE SPACES TO WSS-COD-AOOC IN WSS-VARI(WSS-IFLD).
           MOVE SPACES TO WSS-COD-VCOC IN WSS-VARI(WSS-IFLD).
      *DAD ini  15-SEP-1992
           MOVE SPACES TO WSS-COD-TGAR IN WSS-VARI(WSS-IFLD).
      *DAD fin  15-SEP-1992
           MOVE SPACES TO WSS-COD-TOGA IN WSS-VARI(WSS-IFLD).
           MOVE SPACES TO WSS-COD-AOGA IN WSS-VARI(WSS-IFLD).
           MOVE ZEROES TO WSS-NUM-PORG IN WSS-VARI(WSS-IFLD).
       FIN-CLR-TAB.
           EXIT.

       PUT-TAB-ARC SECTION.
       INI-PUT-TAB-ARC.
           ADD 1 TO WSS-IARC IN WSS-VARI
                    WSS-IFLD IN WSS-VARI.
           IF ARC-IIC-IOPC IN ARC > ZEROES
               MOVE ARC-CAI-IOPC IN ARC TO WSS-COD-TOOC
                                                IN WSS-VARI(WSS-IFLD)
               MOVE ARC-IIC-IOPC IN ARC TO WSS-COD-AOOC 
                                                IN WSS-VARI(WSS-IFLD)
      *DAD ini  15-SEP-1992
               IF ARC-COD-VCOC IN ARC > SPACES
                   MOVE 'TAB'               TO TAB-COD-SIST
                   MOVE 'VLR'               TO TAB-COD-TTAB IN TAB
                   MOVE ARC-COD-VCOC IN ARC TO TAB-COD-CTAB IN TAB
                   PERFORM BUS-TAB
                   MOVE TAB-GLS-ABRV IN TAB TO WSS-COD-VCOC
                                                IN WSS-VARI(WSS-IFLD)
                   GO TO NXT-PUT-TAB-ARC
               ELSE
      *DAD fin  15-SEP-1992
                   GO TO NXT-PUT-TAB-ARC.

      *BUS-TAB Busca Glosa Moneda de Tabla
           IF ARC-COD-VCOC IN ARC > SPACES
               MOVE 'TAB'               TO TAB-COD-SIST
               MOVE 'VLR'               TO TAB-COD-TTAB IN TAB
               MOVE ARC-COD-VCOC IN ARC TO TAB-COD-CTAB IN TAB
               PERFORM BUS-TAB
               MOVE TAB-GLS-ABRV IN TAB TO WSS-COD-VCOC
                                                IN WSS-VARI(WSS-IFLD).
      *BUS-TAB Busca Glosa Tipo Operacion de Tabla
           IF ARC-COD-TOOC IN ARC > SPACES
               MOVE 'TAB'               TO TAB-COD-SIST
               MOVE 'TIO'               TO TAB-COD-TTAB IN TAB
               MOVE ARC-COD-TOOC IN ARC TO TAB-COD-CTAB IN TAB
               PERFORM BUS-TAB
               MOVE TAB-GLS-ABRV IN TAB TO WSS-COD-TOOC
                                                IN WSS-VARI(WSS-IFLD).
      *BUS-TAB Busca Glosa Cod. Auxiliar de Tabla
           IF ARC-COD-AOOC IN ARC > SPACES
               MOVE 'TAB'               TO TAB-COD-SIST
               MOVE 'AUX'               TO TAB-COD-TTAB IN TAB
               MOVE SPACES              TO TAB-COD-CTAB IN TAB
               MOVE ARC-COD-TOOC IN ARC TO WSS-TIP-OPE 
               MOVE ARC-COD-AOOC IN ARC TO WSS-STP-OPE 
               MOVE WSS-CLA-OPE         TO TAB-COD-CTAB IN TAB
               PERFORM BUS-TAB
               MOVE TAB-GLS-ABRV IN TAB TO WSS-COD-AOOC
                                                IN WSS-VARI(WSS-IFLD).
       NXT-PUT-TAB-ARC.
           MOVE FIO-GET-NXT    TO FIO-CMND.
           PERFORM LDC-FIO-ARC.
           IF FIO-STAT-OKS AND
              ARC-KEY-ILDC IN WSS-VARI = ARC-KEY-ILDC IN ARC
              GO TO INI-PUT-TAB-ARC.
       FIN-PUT-TAB-ARC.
           EXIT.

       PUT-TAB-ARG SECTION.
       INI-PUT-TAB-ARG.
           ADD 1 TO WSS-IARG IN WSS-VARI
                    WSS-IFLD IN WSS-VARI.
           IF ARG-IIC-IGAR IN ARG > ZEROES
               MOVE ARG-CAI-IGAR IN ARG TO WSS-COD-TOGA
                                                IN WSS-VARI(WSS-IFLD)
               MOVE ARG-IIC-IGAR IN ARG TO WSS-COD-AOGA 
                                                IN WSS-VARI(WSS-IFLD)
               MOVE ARG-NUM-PORG IN ARG TO WSS-NUM-PORG 
                                                IN WSS-VARI(WSS-IFLD)
      *DAD ini  15-SEP-1992
               MOVE ARG-COD-TOGA IN ARG TO WSS-COD-TGAR
      *DAD fin  15-SEP-1992
                                                IN WSS-VARI(WSS-IFLD)
               GO TO NXT-PUT-TAB-ARG.

           MOVE ARG-NUM-PORG IN ARG TO WSS-NUM-PORG 
                                                 IN WSS-VARI(WSS-IFLD).
      *BUS-TAB Busca Glosa Tipo Operacion de Tabla
           IF ARG-COD-TOGA IN ARG > SPACES
               MOVE 'TAB'               TO TAB-COD-SIST
               MOVE 'TIO'               TO TAB-COD-TTAB IN TAB
               MOVE ARG-COD-TOGA IN ARG TO TAB-COD-CTAB IN TAB
               PERFORM BUS-TAB
               MOVE TAB-GLS-ABRV IN TAB TO WSS-COD-TOGA
                                                IN WSS-VARI(WSS-IFLD).
      *BUS-TAB Busca Glosa Cod. Auxiliar de Tabla
           IF ARG-COD-AOGA IN ARG > SPACES
               MOVE 'TAB'               TO TAB-COD-SIST
               MOVE 'AUX'               TO TAB-COD-TTAB IN TAB
               MOVE SPACES              TO TAB-COD-CTAB IN TAB
               MOVE ARG-COD-TOGA IN ARG TO WSS-TIP-OPE 
               MOVE ARG-COD-AOGA IN ARG TO WSS-STP-OPE 
               MOVE WSS-CLA-OPE         TO TAB-COD-CTAB IN TAB
               PERFORM BUS-TAB
               MOVE TAB-GLS-ABRV IN TAB TO WSS-COD-AOGA
                                                IN WSS-VARI(WSS-IFLD).
       NXT-PUT-TAB-ARG.
           MOVE FIO-GET-NXT    TO FIO-CMND.
           PERFORM LDC-FIO-ARG.
           IF FIO-STAT-OKS AND
              ARG-KEY-ILDC IN WSS-VARI = ARG-KEY-ILDC IN ARG
              GO TO INI-PUT-TAB-ARG.
       FIN-PUT-TAB-ARG.
           EXIT.

       GET-CUR-RDC SECTION.                                             
       INI-GET-CUR-RDC.                                                 
           MOVE 0 TO WSS-STAT-RDC IN WSS-VARI.
           MOVE CLF-CAI-ICLF IN SRT TO RDC-CAI-ICLF IN RDL.             
           MOVE CLF-IIC-ICLF IN SRT TO RDC-IIC-ICLF IN RDL.             
           MOVE 'RDC-KEY-ICLF' TO FIO-AKEY.                             
           MOVE FIO-GET-NLS    TO FIO-CMND.                             
           PERFORM LDC-FIO-RDC.                                         
           IF NOT ( FIO-STAT-OKS AND                                          
                    CLF-CAI-ICLF IN SRT = RDC-CAI-ICLF IN RDL AND
                    CLF-IIC-ICLF IN SRT = RDC-IIC-ICLF IN RDL )
              MOVE 1 TO WSS-STAT-RDC IN WSS-VARI.
       FIN-GET-CUR-RDC.                                                 
           EXIT.                                                        
                                                                        
       GET-NXT-RDC SECTION.                                             
       INI-GET-NXT-RDC.                                                 
           MOVE 'RDC-KEY-ICLF' TO FIO-AKEY.                             
           MOVE FIO-GET-NXT TO FIO-CMND.                                
           PERFORM LDC-FIO-RDC.                                         
           IF FIO-STAT-OKS AND                                          
              CLF-CAI-ICLF IN SRT = RDC-CAI-ICLF IN RDL AND
              CLF-IIC-ICLF IN SRT = RDC-IIC-ICLF IN RDL                 
                MOVE 'M'    TO WSS-IND-MCLI IN WSS-VARI
           ELSE
                MOVE SPACES TO WSS-IND-MCLI IN WSS-VARI.
       FIN-GET-NXT-RDC.                                                 
           EXIT.                                                        

      * Lee con CIC CLIENTE archivo DBC
       GET-RDC-DBC SECTION.
       INI-GET-RDC-DBC.
           MOVE RDC-CIC-ICLI IN RDL TO DBC-CIC-ICLI IN DBC.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM SGC-FIO-DBC.
           IF NOT FIO-STAT-OKS
              PERFORM RST-DBC
           ELSE
              MOVE DBC-GLS-NOMC IN DBC TO CPT-STRN
              PERFORM CPT-BLKS
              MOVE CPT-STRN TO DBC-GLS-NOMC IN DBC.
       FIN-GET-RDC-DBC.
           EXIT.

       RST-DBC SECTION.
       INI-RST-DBC.
           MOVE 'CLIENTE INEXISTENTE' TO DBC-GLS-NOMC IN DBC.
           MOVE ZEROES TO DBC-NUM-ICLI IN DBC.
           MOVE SPACES TO DBC-VRF-ICLI IN DBC.
           MOVE SPACES TO DBC-IND-ICLI IN DBC.
           MOVE IDC-INIC-GLS TO DBC-GLS-ICLI IN DBC.
       FIN-RST-DBC.
           EXIT.

      *Entidades de GNS
       COPY GNSBFMSC.
       COPY GNSBGFEC.
       COPY GNSBGHOY.
       COPY GNSBBMSG.
       COPY GNSBBTAB.
       COPY GNSBVTAB.
       COPY GNSBBMSC.
       COPY GNSBVMSC.
       COPY GNSBGCPT.
      *Entidades de TAB
       COPY TABBFOFI.
       COPY TABBFUSR.
       COPY TABBVOFI.
       COPY TABBBOFI.
       COPY TABBBUSR.
       COPY TABBVUSR.
      *Entidades de LDC
*% IF PGM_DB2
      *<<<< PGM_DB2
           EXEC SQL INCLUDE LDCBFLDC END-EXEC.
           EXEC SQL INCLUDE LDCBFARC END-EXEC.
           EXEC SQL INCLUDE LDCBFARG END-EXEC.
           EXEC SQL INCLUDE LDCBFRDL END-EXEC.
           EXEC SQL INCLUDE SGCBFDBC END-EXEC.
      *
           EXEC SQL INCLUDE SGCBFOPE END-EXEC.
           EXEC SQL INCLUDE SGCBFRCO END-EXEC.
           EXEC SQL INCLUDE COLBRRDC END-EXEC.
           EXEC SQL INCLUDE COLBROPC END-EXEC.
           EXEC SQL INCLUDE COLBRDLC END-EXEC.
           EXEC SQL INCLUDE DEUBFFIA END-EXEC.
           EXEC SQL INCLUDE DEUBFAMF END-EXEC.
      *>>>>
*% ELSE
      *<<<< NOT PGM_DB2
       COPY LDCBFLDC.
       COPY LDCBFARC.
       COPY LDCBFARG.
       COPY LDCBFRDC REPLACING RDC BY RDL
                  ==ADR-RDC-REQA== BY ==ADR-RDL-REQA==.
       COPY SGCBFDBC.
      *
       COPY SGCBFOPE.
       COPY SGCBFRCO.
       COPY COLBFRDC.
       COPY COLBFOPC.
       COPY COLBFDLC.
       COPY DEUBFFIA.
       COPY DEUBFAMF.
      *>>>>
*% END
*% IF PGM_BSH 
       COPY GARBFGDD.
       COPY GARBFGDG.
       COPY GARBFGVT.
       COPY GARBFGES.
*% ELSE
*% IF PGM_DB2
           EXEC SQL INCLUDE GARBFGDD END-EXEC.
           EXEC SQL INCLUDE GARBFGDG END-EXEC.
           EXEC SQL INCLUDE GARBFGVT END-EXEC.
           EXEC SQL INCLUDE GARBFGES END-EXEC.
*% ELSE
       COPY GARBFGDD.
       COPY GARBFGDG.
       COPY GARBFGVT.
       COPY GARBFGES.
*% END
*% END
       COPY TABBFCAM.
*% IF PGM_ARG AND NOT PGM_DB2
      *<<<< PGM_ARG AND NOT PGM_DB2
       COPY GNSBTABV.
      *>>>>
*% END
      *>>>>
*% END
