*%! Codigo adicional para archivo LDCPLLAV
*% IF IOS
      *<<<< IOS
           SELECT RPTLAR       ASSIGN TO UT-S-RPTLAR.
      *>>>>
*% END
*% IF FLS
      *<<<< FLS
       FD  RPTLAR LABEL RECORDS OMITTED
           REPORT IS RPT-LAR.
       01  PASO.
           03 FILLER                              PIC X(01).
      *>>>>
*% END
*% IF RW
      *<<<< RW
       COPY LDCRWLAR.
      *>>>>
*% END
*% IF WSS
      *<<<< WSS
      *Entidades de GNS
       COPY GNSBRMSC.
       COPY GNSWGHOY.
       COPY GNSWGFEC.
       COPY GNSWGCPT.
       COPY GNSWGIDC.
      *Entidades de TAB
       COPY TABBROFI.
       COPY TABBRUSR.
      *Entidades de LDC
*% IF PGM_DB2
      *<<<< PGM_DB2
           EXEC SQL INCLUDE LDCBRCLF END-EXEC.
       COPY GNSWGRQS REPLACING ==SQL-REQA== BY ==SQL-CLF-REQA==.
           EXEC SQL INCLUDE LDCBRARC END-EXEC.
       COPY GNSWGRQS REPLACING ==SQL-REQA== BY ==SQL-ARC-REQA==.
           EXEC SQL INCLUDE LDCBRARG END-EXEC.
       COPY GNSWGRQS REPLACING ==SQL-REQA== BY ==SQL-ARG-REQA==.
           EXEC SQL INCLUDE LDCBRRDL END-EXEC.
       COPY GNSWGRQS REPLACING ==SQL-REQA== BY ==SQL-RDL-REQA==.
           EXEC SQL INCLUDE SGCBRDBC END-EXEC.
       COPY GNSWGRQS REPLACING ==SQL-REQA== BY ==SQL-DBC-REQA==.
      *
           EXEC SQL INCLUDE SGCBROPE END-EXEC.
       COPY GNSWGRQS REPLACING ==SQL-REQA== BY ==SQL-OPE-REQA==.
           EXEC SQL INCLUDE SGCBRRCO END-EXEC.
       COPY GNSWGRQS REPLACING ==SQL-REQA== BY ==SQL-RCO-REQA==.
           EXEC SQL INCLUDE COLBRRDC END-EXEC.
       COPY GNSWGRQS REPLACING ==SQL-REQA== BY ==SQL-RDC-REQA==.
           EXEC SQL INCLUDE COLBROPC END-EXEC.
       COPY GNSWGRQS REPLACING ==SQL-REQA== BY ==SQL-OPC-REQA==.
           EXEC SQL INCLUDE COLBRDLC END-EXEC.
       COPY GNSWGRQS REPLACING ==SQL-REQA== BY ==SQL-DLC-REQA==.
           EXEC SQL INCLUDE DEUBRFIA END-EXEC.
       COPY GNSWGRQS REPLACING ==SQL-REQA== BY ==SQL-FIA-REQA==.
           EXEC SQL INCLUDE DEUBRAMF END-EXEC.
       COPY GNSWGRQS REPLACING ==SQL-REQA== BY ==SQL-AMF-REQA==.
      *>>>>
*% ELSE
      *<<<< NOT PGM_DB2
       COPY LDCBRCLF.
       COPY LDCBRARC.
       COPY LDCBRARG.
       COPY LDCBRRDC REPLACING RDC BY RDL.
       COPY SGCBRDBC.
      *
       COPY SGCBROPE.
       COPY SGCBRRCO.
       COPY COLBRRDC.
       COPY COLBROPC.
       COPY COLBRDLC.
      *>>>>
*% END
       COPY TABBRCAM.
       01  WSS-VARI.
      *RVM-CST-INI 30-SEP-1996
           03  WSS-COD-TIPO                           PIC X(03).
      *RVM-CST-FIN 30-SEP-1996
      *RVM-CST-INI 10-NOV-1995
      *     03  WSS-FEC-FPRO.
      *         05  WSS-NUM-DPRO                      PIC 9(02).
      *         05  WSS-NUM-MPRO                      PIC 9(02).
      *         05  WSS-NUM-SPRO                      PIC 9(02).
      *         05  WSS-NUM-APRO                      PIC 9(02).
      *     03  WSS-FEC-FTER.
      *         05  WSS-NUM-STER                      PIC 9(02).
      *         05  WSS-NUM-ATER                      PIC 9(02).
      *         05  WSS-NUM-MTER                      PIC 9(02).
      *         05  WSS-NUM-DTER                      PIC 9(02).
      *     03  WSS-FEC-FPAS.
      *         05  WSS-NUM-SPAS                      PIC Z(02).
      *         05  WSS-NUM-APAS                      PIC Z(02).
      *         05  WSS-NUM-MPAS                      PIC Z(02).
      *         05  WSS-NUM-DPAS                      PIC Z(02).
      *RVM-CST-FIN 10-NOV-1995
      *RVM-CST-INI 5-JUL-1996
           03  WSS-COD-OFIC-ANT       VALUE SPACES   PIC X(03).
      *RVM-CST-FIN 5-JUL-1996
           03  WSS-COD-OFIC                          PIC X(03).
           03  WSS-COD-EJEC                          PIC X(12).
           03  WSS-COD-STAT                          PIC X(01).
           03  WSS-SGV-VCAM-UF                       PIC S9(11)V9(4).
           03  WSS-COD-PESO                          PIC X(06).
           03  WSS-COD-UF                            PIC X(06).
           03  WSS-CLA-OPE.
               05  WSS-TIP-OPE                       PIC X(03).
               05  WSS-STP-OPE                       PIC X(03).
           03  ARC-KEY-IARC.
               05  ARC-KEY-ILDC.
                   07  ARC-CAI-ICLF               PIC X(04).      
                   07  ARC-IIC-ICLF               PIC 9(08).      
*% IF PGM_DB2
                   07  ARC-NUM-ILDC   COMP        PIC S9(04).
               05  ARC-NUM-IARC       COMP        PIC S9(04).
*% ELSE
                   07  ARC-NUM-ILDC               PIC 9(02).
               05  ARC-NUM-IARC                   PIC 9(01).
*% END
           03  ARG-KEY-IARG.
               05  ARG-KEY-ILDC.
                   07  ARG-CAI-ICLF               PIC X(04).      
                   07  ARG-IIC-ICLF               PIC 9(08).      
*% IF PGM_DB2
                   07  ARG-NUM-ILDC  COMP         PIC S9(04).
               05  ARG-NUM-IARG      COMP         PIC S9(04).
*% ELSE
                   07  ARG-NUM-ILDC               PIC 9(02).
               05  ARG-NUM-IARG                   PIC 9(01).
*% END
           03  WSS-IARC       VALUE ZEROES        PIC 9(02).
           03  WSS-IARG       VALUE ZEROES        PIC 9(02).
           03  WSS-IFLD       VALUE ZEROES        PIC 9(02).
           03  WSS-MOV        VALUE ZEROES        PIC 9(02).
           03  WSS-FIN        VALUE ZEROES        PIC 9(01).

           03  WSS-TAB-ARC   OCCURS 9 TIMES.
               05  WSS-COD-TOOC                   PIC X(05).
               05  WSS-COD-AOOC                   PIC X(08).
               05  WSS-COD-VCOC                   PIC X(05).

           03  WSS-TAB-ARG   OCCURS 9 TIMES.
      *DAD ini  15-SEP-1992
               05  WSS-COD-TGAR                   PIC X(03).
      *DAD fin  15-SEP-1992
               05  WSS-COD-TOGA                   PIC X(05).
               05  WSS-COD-AOGA                   PIC X(08).
               05  WSS-NUM-PORG                   PIC 9(03).

           03 WSS-FEC-FHOY.
              05 WSS-NUM-SHOY                      PIC 9(02).
              05 WSS-NUM-AHOY                      PIC 9(02).
              05 WSS-NUM-MHOY                      PIC 9(02).
              05 WSS-NUM-DHOY                      PIC 9(02).
           03  WSS-STAT-RDC          VALUE ZEROES  PIC 9(01).
           03  WSS-IND-MCLI          VALUE SPACES  PIC X(01).
      *FLB CST  24-JAN-1994 
           03  WSS-CIC-TOCF                        PIC X(03).
           03  WSS-AUX-CUTI          VALUE ZEROES  PIC 9(11).
           03  WSS-AUX-CDIS          VALUE ZEROES  PIC S9(11).
           03  WSS-VAL-PES           VALUE ZEROES  PIC 9(15).
           03  WSS-VAL-UF            VALUE ZEROES  PIC 9(12)V9(04).
           03  WSS-AUX-EJEC          VALUE SPACES  PIC X(12).
       COPY LDCWGCCU.
      *>>>>
*% END
*% IF WSS_DTC
      *<<<< WSS_DTC
      * Entidades de TAB
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-CAM-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-OFI-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-USR-REQA==.
      * Entidades de GNS
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-MSC-REQA==.
      * Entidades de COL
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-OPC-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-DLC-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-RDC-REQA==.
      * Entidades de LDC
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-CLF-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-ARC-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-ARG-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-RDL-REQA==.
      * Entidades de SGC
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-DBC-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-OPE-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-RCO-REQA==.
      *>>>>
*% END
*% IF RF
      *<<<< RF
      *>>>>
*% END
*% IF RT
      *<<<< RT
       COPY LDCRFLAR.
           .
       COPY LDCRTLAR.
      *>>>>
*% END
*% IF PH_LAV
      *<<<< PH_LAV
           MOVE SPACES TO WSS-GLS-OFIC IN WSS-LAV.
           IF CLF-COD-OFIC IN SRT > SPACES
               MOVE CLF-COD-OFIC IN SRT TO OFI-COD-OFIC IN OFI
               PERFORM BUS-OFI
               MOVE OFI-GLS-DESC IN OFI TO WSS-GLS-OFIC IN WSS-LAV.

           MOVE SPACES TO WSS-GLS-EJEC IN WSS-LAV.
           IF CLF-COD-EJEC IN SRT > SPACES
               MOVE CLF-COD-EJEC IN SRT TO USR-COD-USER IN USR
               PERFORM BUS-USR
               MOVE USR-GLS-DESC IN USR TO WSS-GLS-EJEC IN WSS-LAV.
      *>>>>
*% END
*% IF CF_LAV_CLF_COD_OFIC
      *<<<< CF_CLF_CLF_COD_OFIC
           MOVE ZEROES TO PAGE-COUNTER IN RPT-LAV.
      *>>>>
*% END 
*% IF CF_LAV_CLF_COD_EJEC
      *<<<< CF_CLF_CLF_COD_EJEC
           MOVE SPACES TO WSS-GLS-EJE IN WSS-LAV.
           IF CLF-COD-EJEC IN SRT > SPACES
               MOVE CLF-COD-EJEC IN SRT TO USR-COD-USER IN USR
               PERFORM BUS-USR
               MOVE USR-GLS-DESC IN USR TO WSS-GLS-EJE IN WSS-LAV.
      *>>>>
*% END 
*% IF FIN_DEC
      *<<<< FIN_DEC
       DEC-PH-LAR SECTION.
           USE BEFORE REPORTING PH-LAR.
       INI-PH-LAR.
       FIN-PH-LAR.
           EXIT.
       DEC-FF-LAR SECTION.
           USE BEFORE REPORTING FF-LAR.
       INI-FF-LAR.
       FIN-FF-LAR.
           EXIT.
      *>>>>
*% END
*% IF INI
*% IF PGM_ARG
           MOVE FIO-INP      TO FIO-CMND.
           MOVE 'GNS'        TO FIO-SIST.
           PERFORM GNS-FIO-TAB.
*% END
      *<<<< INI
           MOVE 'LDC'        TO FIO-SIST.
           MOVE FIO-ACCS-UPD TO FIO-ACCS.
           MOVE FIO-ACC      TO FIO-CMND.
           PERFORM LDC-FIO-CLF.
           MOVE FIO-INP TO FIO-CMND.
           PERFORM LDC-FIO-CLF.
 
           MOVE 'LDC'        TO FIO-SIST.
           MOVE FIO-ACCS-UPD TO FIO-ACCS.
           MOVE FIO-ACC      TO FIO-CMND.
           PERFORM LDC-FIO-ARC.
           MOVE FIO-INP TO FIO-CMND.
           PERFORM LDC-FIO-ARC.

           MOVE 'LDC'        TO FIO-SIST.
           MOVE FIO-ACCS-UPD TO FIO-ACCS.
           MOVE FIO-ACC      TO FIO-CMND.
           PERFORM LDC-FIO-ARG.
           MOVE FIO-INP TO FIO-CMND.
           PERFORM LDC-FIO-ARG.

           MOVE 'LDC'        TO FIO-SIST.
           MOVE FIO-ACCS-UPD TO FIO-ACCS.
           MOVE FIO-ACC      TO FIO-CMND.
           PERFORM LDC-FIO-RDC.
           MOVE FIO-INP TO FIO-CMND.
           PERFORM LDC-FIO-RDC.

           MOVE 'TAB'        TO FIO-SIST.
           MOVE FIO-ACCS-UPD TO FIO-ACCS.
           MOVE FIO-ACC      TO FIO-CMND.
           PERFORM GNS-FIO-TAB.
           MOVE FIO-INP TO FIO-CMND.
           PERFORM GNS-FIO-TAB.

           MOVE 'DEU'        TO FIO-SIST.
           MOVE FIO-ACCS-UPD TO FIO-ACCS.
           MOVE FIO-ACC      TO FIO-CMND.
           PERFORM GNS-FIO-TAB.
           MOVE FIO-INP TO FIO-CMND.
           PERFORM GNS-FIO-TAB.

           MOVE 'TAB'        TO FIO-SIST.
           MOVE FIO-ACCS-UPD TO FIO-ACCS.
           MOVE FIO-ACC      TO FIO-CMND.
           PERFORM TAB-FIO-OFI.
           MOVE FIO-INP TO FIO-CMND.
           PERFORM TAB-FIO-OFI.

           MOVE 'TAB'        TO FIO-SIST.
           MOVE FIO-ACCS-UPD TO FIO-ACCS.
           MOVE FIO-ACC      TO FIO-CMND.
           PERFORM TAB-FIO-USR.
           MOVE FIO-INP TO FIO-CMND.
           PERFORM TAB-FIO-USR.

           MOVE 'SGC'        TO FIO-SIST.
           MOVE FIO-ACCS-UPD TO FIO-ACCS.
           MOVE FIO-ACC      TO FIO-CMND.
           PERFORM SGC-FIO-DBC.
           MOVE FIO-INP TO FIO-CMND.
           PERFORM SGC-FIO-DBC.

           MOVE 'COL'   TO FIO-SIST.
           MOVE FIO-ACCS-UPD TO FIO-ACCS.
           MOVE FIO-ACC      TO FIO-CMND.
           PERFORM COL-FIO-RDC.
           MOVE FIO-INP TO FIO-CMND.
           PERFORM COL-FIO-RDC.

           MOVE 'COL'   TO FIO-SIST.
           MOVE FIO-ACCS-UPD TO FIO-ACCS.
           MOVE FIO-ACC      TO FIO-CMND.
           PERFORM COL-FIO-DLC.
           MOVE FIO-INP TO FIO-CMND.
           PERFORM COL-FIO-DLC.

           MOVE 'COL'   TO FIO-SIST.
           MOVE FIO-ACCS-UPD TO FIO-ACCS.
           MOVE FIO-ACC      TO FIO-CMND.
           PERFORM COL-FIO-OPC.
           MOVE FIO-INP TO FIO-CMND.
           PERFORM COL-FIO-OPC.

      *>>>>
*% END
*% IF INI
      *<<<< INI
           DISPLAY ' '.
           DISPLAY 'INICIO CAPTURA PARAMETROS'.
           DISPLAY ' '.
      * Captura codigo de oficina,ejecutivo,estado,fecha parametro
      *RVM-CST-INI 10-NOV-1995
      *     DISPLAY 'INGRESE FECHA VENCIMIENTO (ddmmssaa) : '.
      *     ACCEPT WSS-FEC-FPRO IN WSS-VARI.
      *     DISPLAY WSS-FEC-FPRO IN WSS-VARI.
      *RVM-CST-FIN 10-NOV-1995
     
           DISPLAY 'INGRESE COD. OFICINA  (XXX/*)    : '.
           ACCEPT WSS-COD-OFIC IN WSS-VARI.
           DISPLAY WSS-COD-OFIC IN WSS-VARI.

           DISPLAY 'INGRESE COD. EJECUTIVO (X(12)/*) : '.
           ACCEPT WSS-COD-EJEC IN WSS-VARI.
           DISPLAY WSS-COD-EJEC IN WSS-VARI.

           DISPLAY 'INGRESE COD. ESTADO    (X/*)     : '.
           ACCEPT WSS-COD-STAT IN WSS-VARI.
           DISPLAY WSS-COD-STAT IN WSS-VARI.

      *RVM-CST-INI 30-SEP-1996
           DISPLAY 'TIPO DE LINEA                 : '.
           ACCEPT  WSS-COD-TIPO IN WSS-VARI.
           DISPLAY WSS-COD-TIPO IN WSS-VARI.

      *VALIDA TIPO DE LINEA
           IF WSS-COD-TIPO IN WSS-VARI NOT > SPACES
               DISPLAY 'ERROR: PARAMETRO TIPO DE LINEA OBLIGATORIO '
               PERFORM GNS-PRO-ABT.

           MOVE 'DEU'                    TO TAB-COD-SIST.
           MOVE 'TLC'                    TO TAB-COD-TTAB IN TAB.
           MOVE WSS-COD-TIPO IN WSS-VARI TO TAB-COD-CTAB IN TAB.
           PERFORM BUS-TAB.
           IF MSG-COD-MENS > SPACES
               DISPLAY 'ERROR: PARAMETRO TIPO DE LINEA NO '
                       'EXISTE EN TLC   : '
               WSS-COD-TIPO IN WSS-VARI
               PERFORM GNS-PRO-ABT.
      *RVM-CST-FIN 30-SEP-1996

           DISPLAY 'FIN CAPTURA PARAMETROS'.
           DISPLAY ' '.
           DISPLAY 'INICIO VALIDACION PARAMETROS'.

      *RVM-CST-INI 10-NOV-1995
      *VAL-FEC Valida fecha proceso
      *     MOVE WSS-FEC-FPRO IN WSS-VARI TO FEC-FECH.
      *     MOVE FEC-FORM-FEC             TO FEC-FORM.
      *     MOVE FEC-FBLK-N               TO FEC-FBLK.
      *     MOVE FEC-CHOY-N               TO FEC-CHOY.  
      *     MOVE FEC-VHBL-N               TO FEC-VHBL.
      *     MOVE FEC-VAL-FEC              TO FEC-CMND.
      *     PERFORM PRO-FEC.
      *     IF NOT FEC-STAT-OKS
      *        DISPLAY ' '
      *        DISPLAY ' PROCESO CANCELADO '
      *        DISPLAY ' ERROR EN VALIDACION F. DE PROCESO : ' 
      *                  WSS-FEC-FPRO IN WSS-VARI '  ' FEC-MENS
*% IF PGM_ARG
      *<<<< PGM_ARG
      *        PERFORM DB2-VSM-ABT.
      *>>>>
*% ELSE
      *<<<< NOT PGM_ARG
      *        PERFORM GNS-PRO-ABT.
      *>>>>
*% END
      *RVM-CST-FIN 10-NOV-1995
 
      *VAL-OFI Valida codigo de oficina
           IF WSS-COD-OFIC IN WSS-VARI > SPACES AND
              WSS-COD-OFIC IN WSS-VARI NOT = '*'
              MOVE WSS-COD-OFIC IN WSS-VARI TO OFI-COD-OFIC IN OFI
              PERFORM VAL-OFI
              IF MSG-GLS-MENS = 'COD    NEX'
                 DISPLAY ' '
                 DISPLAY ' PROCESO CANCELADO '
                 DISPLAY ' ERROR EN VALIDACION COD. OFICINA : ' 
                           WSS-COD-OFIC IN WSS-VARI
*% IF PGM_ARG
      *<<<< PGM_ARG
                 PERFORM DB2-VSM-ABT.
      *>>>>
*% ELSE
      *<<<< NOT PGM_ARG
                 PERFORM GNS-PRO-ABT.
      *>>>>
*% END

      *VAL-USR Valida codigo de ejecutivo
           IF WSS-COD-EJEC IN WSS-VARI > SPACES AND
              WSS-COD-EJEC IN WSS-VARI NOT = '*'
              MOVE WSS-COD-EJEC IN WSS-VARI TO USR-COD-USER IN USR
              PERFORM VAL-USR
              IF MSG-GLS-MENS = 'COD    NEX'
                 DISPLAY ' '
                 DISPLAY ' PROCESO CANCELADO '
                 DISPLAY ' ERROR EN VALIDACION COD. EJECUTIVO : ' 
                           WSS-COD-EJEC IN WSS-VARI
*% IF PGM_ARG
      *<<<< PGM_ARG
                 PERFORM DB2-VSM-ABT.
      *>>>>
*% ELSE
      *<<<< NOT PGM_ARG
                 PERFORM GNS-PRO-ABT.
      *>>>>
*% END

      *VAL-MSC Valida codigo de estado
           IF WSS-COD-STAT IN WSS-VARI > SPACES AND
              WSS-COD-STAT IN WSS-VARI NOT = '*'
              MOVE 'DEU'  TO MSC-COD-SIST
              MOVE 'STA ' TO MSC-COD-TMSC IN MSC
              MOVE WSS-COD-STAT IN WSS-VARI TO MSC-COD-CMSC IN MSC
              PERFORM VAL-MSC
              IF MSG-GLS-MENS = 'COD    NEX'
                 DISPLAY ' '
                 DISPLAY ' PROCESO CANCELADO '
                 DISPLAY ' ERROR EN VALIDACION COD. DE ESTADO : ' 
                           WSS-COD-STAT IN WSS-VARI
*% IF PGM_ARG
      *<<<< PGM_ARG
                 PERFORM DB2-VSM-ABT.
      *>>>>
*% ELSE
      *<<<< NOT PGM_ARG
                 PERFORM GNS-PRO-ABT.
      *>>>>
*% END

           IF WSS-COD-STAT IN WSS-VARI = 'C' OR 'R'
                 DISPLAY ' '
                 DISPLAY ' PROCESO CANCELADO '
                 DISPLAY ' ESTADO DEBE SER ING, VER O ACT : ' 
*% IF PGM_ARG
      *<<<< PGM_ARG
                 PERFORM DB2-VSM-ABT.
      *>>>>
*% ELSE
      *<<<< NOT PGM_ARG
                 PERFORM GNS-PRO-ABT.
      *>>>>
*% END
      *RVM-CST-INI 10-NOV-1995
      *     MOVE WSS-NUM-DPRO IN WSS-VARI TO WSS-NUM-DHAS IN WSS-LAV
      *                                      WSS-NUM-DTER IN WSS-VARI.
      *     MOVE WSS-NUM-MPRO IN WSS-VARI TO WSS-NUM-MHAS IN WSS-LAV
      *                                      WSS-NUM-MTER IN WSS-VARI.
      *     MOVE WSS-NUM-SPRO IN WSS-VARI TO WSS-NUM-SHAS IN WSS-LAV
      *                                      WSS-NUM-STER IN WSS-VARI.
      *     MOVE WSS-NUM-APRO IN WSS-VARI TO WSS-NUM-AHAS IN WSS-LAV
      *                                      WSS-NUM-ATER IN WSS-VARI.
      *RVM-CST-FIN 10-NOV-1995

           DISPLAY ' '.
           DISPLAY 'FIN VALIDACION PARAMETROS'.
           DISPLAY ' '.

           MOVE SPACES TO CCU-CMMA.

      * OBTIENE COD. VALOR DE CAMBIO UF CON CIC DE LA MONEDA '0998'
           MOVE 'TAB'          TO FIO-SIST.
           MOVE 'VLR'          TO TAB-CIC-TTAB IN TAB.
           MOVE '0998  '       TO TAB-CIC-CTAB IN TAB.
           MOVE 'TAB-CIC-TABL' TO FIO-AKEY.
           MOVE FIO-GET-KEY    TO FIO-CMND.
           PERFORM GNS-FIO-TAB.
           IF NOT FIO-STAT-OKS
              DISPLAY ' ' 
              DISPLAY ' PROCESO CANCELADO ' 
              DISPLAY ' ERROR EN OBTENCION CIC MONEDA 0998 : ' 
                        TAB-COD-CTAB IN TAB ' FS: ' FIO-STAT
*% IF PGM_ARG
      *<<<< PGM_ARG
              PERFORM DB2-VSM-ABT.
      *>>>>
*% ELSE
      *<<<< NOT PGM_ARG
              PERFORM GNS-PRO-ABT.
      *>>>>
*% END
           MOVE TAB-COD-CTAB IN TAB TO WSS-COD-UF IN WSS-VARI.

      * OBTIENE COD. VALOR DE CAMBIO DE PESOS CON CIC DE LA MONEDA '0999'
           MOVE 'TAB'          TO FIO-SIST.
           MOVE 'VLR'          TO TAB-CIC-TTAB IN TAB.
           MOVE '0999  '       TO TAB-CIC-CTAB IN TAB.
           MOVE 'TAB-CIC-TABL' TO FIO-AKEY.
           MOVE FIO-GET-KEY    TO FIO-CMND.
           PERFORM GNS-FIO-TAB.
           IF NOT FIO-STAT-OKS
              DISPLAY ' ' 
              DISPLAY ' PROCESO CANCELADO ' 
              DISPLAY ' ERROR EN OBTENCION CIC MONEDA 0999 : ' 
                        TAB-COD-CTAB IN TAB ' FS: ' FIO-STAT
*% IF PGM_ARG
      *<<<< PGM_ARG
              PERFORM DB2-VSM-ABT.
      *>>>>
*% ELSE
      *<<<< NOT PGM_ARG
              PERFORM GNS-PRO-ABT.
      *>>>>
*% END
           MOVE TAB-COD-CTAB IN TAB TO WSS-COD-PESO IN WSS-VARI.
           MOVE TAB-COD-CTAB IN TAB TO CCU-COD-PESO IN CCU-VARI.

           PERFORM GET-FHOY.
           MOVE HOY-SHOY           TO WSS-NUM-SHOY IN WSS-VARI.
           MOVE HOY-AHOY           TO WSS-NUM-AHOY IN WSS-VARI.
           MOVE HOY-MHOY           TO WSS-NUM-MHOY IN WSS-VARI.
           MOVE HOY-DHOY           TO WSS-NUM-DHOY IN WSS-VARI.
      *RVM-CST-INI 10-NOV-1995
           MOVE HOY-DHOY           TO WSS-NUM-DHAS IN WSS-LAV.
           MOVE HOY-MHOY           TO WSS-NUM-MHAS IN WSS-LAV.
           MOVE HOY-SHOY           TO WSS-NUM-SHAS IN WSS-LAV.
           MOVE HOY-AHOY           TO WSS-NUM-AHAS IN WSS-LAV.
      *RVM-CST-FIN 10-NOV-1995
      *RVM-CST-INI  8-JUL-1996
           MOVE HOY-DHOY           TO WSS-NUM-DHAS IN WSS-LAR.
           MOVE HOY-MHOY           TO WSS-NUM-MHAS IN WSS-LAR.
           MOVE HOY-SHOY           TO WSS-NUM-SHAS IN WSS-LAR.
           MOVE HOY-AHOY           TO WSS-NUM-AHAS IN WSS-LAR.
      *RVM-CST-FIN  8-JUL-1996

           MOVE WSS-NUM-DHOY IN WSS-VARI TO CAM-NUM-DCAM IN CAM(1).
           MOVE WSS-NUM-MHOY IN WSS-VARI TO CAM-NUM-MCAM IN CAM(1).
           MOVE WSS-NUM-SHOY IN WSS-VARI TO CAM-NUM-SCAM IN CAM(1).
           MOVE WSS-NUM-AHOY IN WSS-VARI TO CAM-NUM-ACAM IN CAM(1).
           MOVE CAM-FEC-FCAM IN CAM(1) TO CAM-FEC-FCAM IN CAM(2).
      *BUSCA VALOR DE CAMBIO DE UF A PESO
           MOVE WSS-COD-UF   IN WSS-VARI TO CAM-COD-VCAM IN CAM(1).
           MOVE WSS-COD-PESO IN WSS-VARI TO CAM-COD-VCAM IN CAM(2).
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM TAB-FIO-CAM.
           IF NOT ( FIO-STAT-OKS AND CAM-MSC-STAT IN CAM = 'S' AND
                    CAM-SGV-VCAM IN CAM > 0 )
               DISPLAY 'ERROR: NO EXISTE VALOR DE CAMBIO DE : '
                 CAM-COD-VCAM IN CAM(1) ' A : '
                 CAM-COD-VCAM IN CAM(2) ' AL : '
                 CAM-FEC-FCAM IN CAM(1)
           ELSE
               MOVE CAM-SGV-VCAM IN CAM TO WSS-SGV-VCAM-UF IN WSS-VARI.
      *>>>>
*% END
*% IF LUP_INP
      *<<<< LUP_INP
             
           MOVE 'DEU'               TO TAB-COD-SIST.
           MOVE 'TLC'               TO TAB-COD-TTAB IN TAB.
           MOVE LDC-COD-TIPO IN LDC TO TAB-COD-CTAB IN TAB.
           PERFORM BUS-TAB.
           IF MSG-COD-MENS > SPACES
               DISPLAY 'CODIGO INEXISTENTE TABLA TLC ' 
                       LDC-COD-TIPO IN LDC 
               GO TO NXT-INP-SRT.

      *RVM-CST-INI 30-SEP-1996
      *     IF TAB-CIC-CTAB IN TAB NOT = 'MLT' OR
      *         LDC-IND-VIGE IN LDC NOT = 'S'
      *         GO TO NXT-INP-SRT.

           IF WSS-COD-TIPO IN WSS-VARI = LDC-COD-TIPO IN LDC AND
              TAB-CIC-CTAB IN TAB      = 'MLT' AND
              LDC-IND-VIGE IN LDC      = 'S'
                  NEXT SENTENCE
              ELSE
                  GO TO NXT-INP-SRT.
      *RVM-CST-FIN 30-SEP-1996

           MOVE LDC-CIC-ICLF IN LDC TO CLF-KEY-ICLF IN CLF.
           MOVE FIO-GET-KEY  TO FIO-CMND.
           PERFORM LDC-FIO-CLF.
           IF NOT FIO-STAT-OKS
               MOVE 'DEU' TO MSG-COD-SIST
               MOVE 'CLF    NEX' TO MSG-COD-MENS
               PERFORM GET-MSG
               DISPLAY CLF-KEY-ICLF IN CLF ' ' MSG-GLS-DESC
               GO TO NXT-INP-SRT.
           IF CLF-MSC-STAT IN CLF NOT = 'A'
               GO TO NXT-INP-SRT.

           IF WSS-COD-OFIC IN WSS-VARI > SPACES AND
              WSS-COD-OFIC IN WSS-VARI NOT = '*' AND
              WSS-COD-OFIC IN WSS-VARI NOT = CLF-COD-OFIC IN CLF
               GO TO NXT-INP-SRT.

           IF WSS-COD-EJEC IN WSS-VARI > SPACES AND
              WSS-COD-EJEC IN WSS-VARI NOT = '*' AND
              WSS-COD-EJEC IN WSS-VARI NOT = CLF-COD-EJEC IN CLF
               GO TO NXT-INP-SRT.

           IF WSS-COD-STAT IN WSS-VARI > SPACES AND
              WSS-COD-STAT IN WSS-VARI NOT = '*' AND
              WSS-COD-STAT IN WSS-VARI NOT = CLF-MSC-STAT IN CLF
               GO TO NXT-INP-SRT.
      *>>>>
*% END
*% IF INI_OUT
      *<<<< INI_OUT
           MOVE FIO-INP TO FIO-CMND.
           PERFORM LDC-FIO-CLF.

           OPEN OUTPUT RPTLAR.
           INITIATE RPT-LAR.
      *>>>>
*% END
*% IF FST_OUT
      *<<<< FST_OUT
           MOVE CLF-COD-OFIC IN SRT TO WSS-COD-OFIC IN WSS-LAR.
           MOVE CLF-COD-OFIC IN SRT TO WSS-COD-OFIC-ANT IN WSS-VARI.
           MOVE ZEROES TO WSS-VAL-ATRZ IN WSS-LAR.
           MOVE ZEROES TO WSS-VAL-UTIL IN WSS-LAR.
           MOVE ZEROES TO WSS-NUM-TLIN IN WSS-LAR.
      *>>>>
*% END
*% IF LUP_OUT
      *<<<< LUP_OUT
           IF LDC-COD-VCLC IN SRT = WSS-COD-PESO IN WSS-VARI
               MOVE 1 TO WSS-NUM-LINPES IN WSS-LAV
               MOVE LDC-VAL-CMAX IN SRT TO WSS-VAL-TPE IN WSS-LAV
               MOVE ZEROES TO WSS-NUM-LINUF IN WSS-LAV
               MOVE ZEROES TO WSS-VAL-TUF   IN WSS-LAV
           ELSE
               IF LDC-COD-VCLC IN SRT = WSS-COD-UF IN WSS-VARI
                   MOVE 1 TO WSS-NUM-LINUF  IN WSS-LAV
                   MOVE LDC-VAL-CMAX IN SRT TO WSS-VAL-TUF IN WSS-LAV
                   MOVE ZEROES TO WSS-NUM-LINPES IN WSS-LAV
                   MOVE ZEROES TO WSS-VAL-TPE    IN WSS-LAV
               ELSE
                   MOVE ZEROES TO WSS-NUM-LINUF  IN WSS-LAV
                   MOVE ZEROES TO WSS-VAL-TUF    IN WSS-LAV
                   MOVE ZEROES TO WSS-NUM-LINPES IN WSS-LAV
                   MOVE ZEROES TO WSS-VAL-TPE    IN WSS-LAV
                   DISPLAY 'COD-MONEDA NO SUMABLE A TOTALES '
                            LDC-COD-VCLC IN SRT.

      *RVM-CST-INI 11-OCT-1995
      *BUS-OFI  oficina en tablas
      *     MOVE SPACES TO WSS-GLS-OFIC IN WSS-LAV.
      *     IF CLF-COD-OFIC IN SRT > SPACES
      *         MOVE CLF-COD-OFIC IN SRT TO OFI-COD-OFIC IN OFI
      *         PERFORM BUS-OFI
      *         MOVE OFI-GLS-DESC IN OFI TO WSS-GLS-OFIC IN WSS-LAV.
      *BUS-USR busca usuario en tablas
      *     MOVE SPACES TO WSS-GLS-EJEC IN WSS-LAV.
      *     IF CLF-COD-EJEC IN SRT > SPACES
      *         MOVE CLF-COD-EJEC IN SRT TO USR-COD-USER IN USR
      *         PERFORM BUS-USR
      *         MOVE USR-GLS-DESC IN USR TO WSS-GLS-EJEC IN WSS-LAV.
      *RVM-CST-FIN 11-OCT-1995

      * Obtiene Datos desde RDC para datos clientes 
           PERFORM GET-CUR-RDC.
           IF WSS-STAT-RDC IN WSS-VARI = 1
              PERFORM RST-DBC
           ELSE
              PERFORM GET-RDC-DBC
              PERFORM GET-NXT-RDC

      *BUS-TAB busca glosa de codigo en tabla
           MOVE SPACES TO WSS-GLS-VCLC IN WSS-LAV.
           IF LDC-COD-VCLC IN SRT > SPACES
               MOVE 'TAB'               TO TAB-COD-SIST
               MOVE 'VLR'               TO TAB-COD-TTAB IN TAB
               MOVE LDC-COD-VCLC IN SRT TO TAB-COD-CTAB IN TAB
               PERFORM BUS-TAB
               MOVE TAB-GLS-DCOR IN TAB TO WSS-GLS-VCLC IN WSS-LAV.
 
      *BUS-TAB busca CIC de codigo en tabla
           IF CLF-COD-TOCF IN SRT > SPACES
               MOVE 'TAB'               TO TAB-COD-SIST
               MOVE 'TIO'               TO TAB-COD-TTAB IN TAB
               MOVE CLF-COD-TOCF IN SRT TO TAB-COD-CTAB IN TAB
               PERFORM BUS-TAB
      *FLB CST  24-JAN-1994 
               MOVE TAB-CIC-CTAB IN TAB TO WSS-CIC-TOCF 
           ELSE
               MOVE 'CGE' TO WSS-CIC-TOCF 
               DISPLAY 'CLF SIN TIPO OPERACION ' 
                                         CLF-CAI-ICLF IN SRT ' '
                                         CLF-IIC-ICLF IN SRT.
      *FLB CST  24-JAN-1994 

      *RVM-CST-INI 30-OCT-1995
      *AHORA MUESTRA LA FECHA DE VENCIMIENTO DE LDC
      *     MOVE CLF-FEC-FVEN IN CLF      TO WSS-FEC-FPAS IN WSS-VARI.
      *     MOVE WSS-NUM-DPAS IN WSS-VARI TO WSS-NUM-DVEN IN WSS-LAV.
      *     MOVE WSS-NUM-MPAS IN WSS-VARI TO WSS-NUM-MVEN IN WSS-LAV.
      *     MOVE WSS-NUM-SPAS IN WSS-VARI TO WSS-NUM-SVEN IN WSS-LAV.
      *     MOVE WSS-NUM-APAS IN WSS-VARI TO WSS-NUM-AVEN IN WSS-LAV.
      *RVM-CST-FIN 30-OCT-1995

           IF WSS-CIC-TOCF = 'CGE'
               MOVE ZEROES TO WSS-VAL-CDLC   IN WSS-LAV
               MOVE ZEROES TO WSS-NUM-LINUF  IN WSS-LAV
               MOVE ZEROES TO WSS-VAL-TUF    IN WSS-LAV
               MOVE ZEROES TO WSS-NUM-LINPES IN WSS-LAV
               MOVE ZEROES TO WSS-VAL-TPE    IN WSS-LAV
               GO TO FIN-CCU.

           MOVE CLF-CAI-ICLF IN SRT TO CCU-CAI-ICLF.
           MOVE CLF-IIC-ICLF IN SRT TO CCU-IIC-ICLF.
           MOVE SPACES TO CCU-CAI-IOPC(1).
           MOVE ZEROES TO CCU-IIC-IOPC(1).
           MOVE SPACES TO CCU-CAI-DCAN(1).
           MOVE ZEROES TO CCU-IIC-DCAN(1).
           MOVE ZEROES TO CCU-NUM-DCAN(1).
           MOVE SPACES TO CCU-OPE-INDS.
           MOVE SPACES TO CCU-CAI-ICLI.
           MOVE ZEROES TO CCU-IIC-ICLI.
           MOVE ZEROES TO CCU-VAL-CUTI.
           CALL 'LDCSBCCU' USING CCU-CMMA .
           IF CCU-NUM-MENS < CCU-NUM-CALC AND
              CCU-NUM-MENS > ZEROES
               MOVE ZEROES TO WSS-VAL-CDLC IN WSS-LAV
               MOVE CCU-COD-SIST IN CCU-VARI TO MSG-COD-SIST
               MOVE CCU-COD-MENS IN CCU-VARI TO MSG-COD-MENS
               PERFORM GET-MSG
               IF CCU-CAMB > SPACES 
                   MOVE CCU-CAMB TO CCU-MEN2
                   MOVE MSG-GLS-DESC TO CCU-MEN1
                   DISPLAY 'CALIFICACION ' CCU-CAI-ICLF CCU-IIC-ICLF
                   DISPLAY 'ERROR CALCULO CUPOS ' CCU-MENS
                   DISPLAY ' '
               ELSE
                   MOVE MSG-GLS-DESC TO CCU-MENS
                   DISPLAY 'CALIFICACION ' CCU-CAI-ICLF CCU-IIC-ICLF
                   DISPLAY 'ERROR CALCULO CUPOS ' CCU-MENS
                   DISPLAY ' '
           ELSE
      *CUPO UTILIZADO POR LA LINEA
               IF CLF-COD-VCCF IN SRT = LDC-COD-VCLC IN SRT
      *REDONDEA
                   MULTIPLY CDIS-LCR IN CCU-VARI(LDC-NUM-ILDC IN SRT)
                        BY 1 GIVING WSS-AUX-CDIS IN WSS-VARI ROUNDED
                   MOVE WSS-AUX-CDIS IN WSS-VARI TO 
                        WSS-VAL-CDLC IN WSS-LAV
               ELSE
                   IF CLF-COD-VCCF IN SRT = WSS-COD-PESO IN WSS-VARI AND
                       LDC-COD-VCLC IN SRT = WSS-COD-UF IN WSS-VARI
      *CONVIERTE DE PESOS A UF
                       COMPUTE WSS-VAL-CDLC IN WSS-LAV =
                         CDIS-LCR IN CCU-VARI(LDC-NUM-ILDC IN SRT) /
                         WSS-SGV-VCAM-UF IN WSS-VARI
                   ELSE
      *CONVIERTE DE UF A PESOS
                       COMPUTE WSS-VAL-CDLC IN WSS-LAV =
                         CDIS-LCR IN CCU-VARI(LDC-NUM-ILDC IN SRT) *
                         WSS-SGV-VCAM-UF IN WSS-VARI.
  

      *RVM-CST-INI 4-JUL-1996
           IF CLF-COD-OFIC IN SRT = WSS-COD-OFIC-ANT IN WSS-VARI
      *ACUMULA TOTALIZADORES
            ADD 1 TO WSS-NUM-TLIN IN WSS-LAR
            IF LDC-COD-VCLC IN SRT = WSS-COD-UF IN WSS-VARI
      *MOVER VALORES EN UF
               ADD LDC-VAL-CMAX IN SRT TO WSS-VAL-ATRZ IN WSS-LAR
               IF CCU-NUM-MENS < CCU-NUM-CALC AND
                  CCU-NUM-MENS > ZEROES
                   NEXT SENTENCE
               ELSE
                   ADD CUTI-LCR IN CCU-VARI(LDC-NUM-ILDC IN SRT) TO 
                       WSS-VAL-UTIL IN WSS-LAR
            ELSE
      *CONVERTIR A UF
               COMPUTE WSS-VAL-ATRZ IN WSS-LAR ROUNDED = 
                   WSS-VAL-ATRZ IN WSS-LAR  +
                  ( LDC-VAL-CMAX IN SRT / WSS-SGV-VCAM-UF IN WSS-VARI )
               IF CCU-NUM-MENS < CCU-NUM-CALC AND
                  CCU-NUM-MENS > ZEROES
                   NEXT SENTENCE
               ELSE
                   COMPUTE WSS-VAL-UTIL IN WSS-LAR ROUNDED =
                       WSS-VAL-UTIL IN WSS-LAR      +
                      ( CUTI-LCR IN CCU-VARI(LDC-NUM-ILDC IN SRT) /
                              WSS-SGV-VCAM-UF IN WSS-VARI )
           ELSE
            MOVE CLF-COD-OFIC IN SRT TO WSS-COD-OFIC-ANT IN WSS-VARI
            MOVE WSS-COD-OFIC IN WSS-LAR TO OFI-COD-OFIC IN OFI
            PERFORM BUS-OFI
            MOVE OFI-GLS-DESC IN OFI TO WSS-GLS-OFIC IN WSS-LAR
            GENERATE DL-LAR
            MOVE CLF-COD-OFIC IN SRT TO WSS-COD-OFIC IN WSS-LAR
            MOVE 1      TO WSS-NUM-TLIN IN WSS-LAR
            MOVE ZEROES TO WSS-VAL-ATRZ IN WSS-LAR
            MOVE ZEROES TO WSS-VAL-UTIL IN WSS-LAR
            IF LDC-COD-VCLC IN SRT = WSS-COD-UF IN WSS-VARI
      *MOVER VALORES EN UF
               ADD LDC-VAL-CMAX IN SRT TO WSS-VAL-ATRZ IN WSS-LAR
               IF CCU-NUM-MENS < CCU-NUM-CALC AND
                  CCU-NUM-MENS > ZEROES
                   NEXT SENTENCE
               ELSE
                   ADD CUTI-LCR IN CCU-VARI(LDC-NUM-ILDC IN SRT) TO
                       WSS-VAL-UTIL IN WSS-LAR
            ELSE
      *CONVERTIR A UF
               COMPUTE WSS-VAL-ATRZ IN WSS-LAR ROUNDED = 
                   WSS-VAL-ATRZ IN WSS-LAR  +
                  ( LDC-VAL-CMAX IN SRT / WSS-SGV-VCAM-UF IN WSS-VARI )
               IF CCU-NUM-MENS < CCU-NUM-CALC AND
                  CCU-NUM-MENS > ZEROES
                   NEXT SENTENCE
               ELSE
                   COMPUTE WSS-VAL-UTIL IN WSS-LAR ROUNDED = 
                       WSS-VAL-UTIL IN WSS-LAR      +
                      ( CUTI-LCR IN CCU-VARI(LDC-NUM-ILDC IN SRT) /
                              WSS-SGV-VCAM-UF IN WSS-VARI ).
      *RVM-CST-FIN 4-JUL-1996

       FIN-CCU.
      *>>>>
*% END
*% IF FIN_TMT
      *<<<< FIN_TMT
           MOVE WSS-COD-OFIC IN WSS-LAR TO OFI-COD-OFIC IN OFI.
           PERFORM BUS-OFI.
           MOVE OFI-GLS-DESC IN OFI TO WSS-GLS-OFIC IN WSS-LAR.
           GENERATE DL-LAR.

           TERMINATE RPT-LAR.
           CLOSE RPTLAR.

           MOVE FIO-CLO TO FIO-CMND.
           PERFORM LDC-FIO-CLF.

           MOVE FIO-CLO TO FIO-CMND.
           PERFORM SGC-FIO-DBC.

           MOVE FIO-CLO TO FIO-CMND.
           PERFORM LDC-FIO-RDC.

           MOVE 'TAB' TO FIO-SIST.                    

           MOVE FIO-CLO TO FIO-CMND.
           PERFORM GNS-FIO-TAB.

           MOVE FIO-CLO TO FIO-CMND.
           PERFORM TAB-FIO-OFI.

           MOVE FIO-CLO TO FIO-CMND.
           PERFORM TAB-FIO-USR.

      *>>>>
*% END
*% IF EOF
      *<<<< EOF
       GET-CUR-RDC SECTION.
       INI-GET-CUR-RDC.
           MOVE 0 TO WSS-STAT-RDC IN WSS-VARI.
           MOVE CLF-CAI-ICLF IN SRT TO RDC-CAI-ICLF IN RDL.
           MOVE CLF-IIC-ICLF IN SRT TO RDC-IIC-ICLF IN RDL.
           MOVE 'RDC-KEY-ICLF' TO FIO-AKEY.
           MOVE FIO-GET-NLS    TO FIO-CMND.
           PERFORM LDC-FIO-RDC.
           IF NOT ( FIO-STAT-OKS AND
                    CLF-CAI-ICLF IN SRT = RDC-CAI-ICLF IN RDL AND
                    CLF-IIC-ICLF IN SRT = RDC-IIC-ICLF IN RDL )
              MOVE 1 TO WSS-STAT-RDC IN WSS-VARI.
       FIN-GET-CUR-RDC.                                                 
           EXIT.                                                        
                                                                        
       GET-NXT-RDC SECTION.                                             
       INI-GET-NXT-RDC.                                                 
           MOVE 'RDC-KEY-ICLF' TO FIO-AKEY.                             
           MOVE FIO-GET-NXT TO FIO-CMND.                                
           PERFORM LDC-FIO-RDC.                                         
           IF FIO-STAT-OKS AND                                          
              CLF-CAI-ICLF IN SRT = RDC-CAI-ICLF IN RDL AND
              CLF-IIC-ICLF IN SRT = RDC-IIC-ICLF IN RDL                 
                MOVE 'M'    TO WSS-IND-MCLI IN WSS-VARI
           ELSE
                MOVE SPACES TO WSS-IND-MCLI IN WSS-VARI.
       FIN-GET-NXT-RDC.                                                 
           EXIT.                                                        

      * Lee con CIC CLIENTE archivo DBC
       GET-RDC-DBC SECTION.
       INI-GET-RDC-DBC.
           MOVE RDC-CIC-ICLI IN RDL TO DBC-CIC-ICLI IN DBC.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM SGC-FIO-DBC.
           IF NOT FIO-STAT-OKS
              PERFORM RST-DBC
           ELSE
              MOVE DBC-GLS-NOMC IN DBC TO CPT-STRN
              PERFORM CPT-BLKS
              MOVE CPT-STRN TO DBC-GLS-NOMC IN DBC.
       FIN-GET-RDC-DBC.
           EXIT.

       RST-DBC SECTION.
       INI-RST-DBC.
           MOVE 'CLIENTE INEXISTENTE' TO DBC-GLS-NOMC IN DBC.
           MOVE ZEROES TO DBC-NUM-ICLI IN DBC.
           MOVE SPACES TO DBC-VRF-ICLI IN DBC.
           MOVE SPACES TO DBC-IND-ICLI IN DBC.
           MOVE IDC-INIC-GLS TO DBC-GLS-ICLI IN DBC.
       FIN-RST-DBC.
           EXIT.

      *Entidades de GNS
       COPY GNSBFMSC.
       COPY GNSBGFEC.
       COPY GNSBGHOY.
       COPY GNSBBMSG.
       COPY GNSBBTAB.
       COPY GNSBVTAB.
       COPY GNSBBMSC.
       COPY GNSBVMSC.
       COPY GNSBGCPT.
      *Entidades de TAB
       COPY TABBFCAM.
       COPY TABBFOFI.
       COPY TABBFUSR.
       COPY TABBVOFI.
       COPY TABBBOFI.
       COPY TABBBUSR.
       COPY TABBVUSR.
      *Entidades de LDC
*% IF PGM_DB2
      *<<<< PGM_DB2
           EXEC SQL INCLUDE LDCBFCLF END-EXEC.
           EXEC SQL INCLUDE LDCBFARC END-EXEC.
           EXEC SQL INCLUDE LDCBFARG END-EXEC.
           EXEC SQL INCLUDE LDCBFRDL END-EXEC.
           EXEC SQL INCLUDE SGCBFDBC END-EXEC.
      *
           EXEC SQL INCLUDE SGCBFOPE END-EXEC.
           EXEC SQL INCLUDE SGCBFRCO END-EXEC.
           EXEC SQL INCLUDE COLBFRDC END-EXEC.
           EXEC SQL INCLUDE COLBFOPC END-EXEC.
           EXEC SQL INCLUDE COLBFDLC END-EXEC.
      *>>>>
*% ELSE
      *<<<< NOT PGM_DB2
       COPY LDCBFCLF.
       COPY LDCBFARC.
       COPY LDCBFARG.
       COPY LDCBFRDC REPLACING RDC BY RDL
                  ==ADR-RDC-REQA== BY ==ADR-RDL-REQA==.
       COPY SGCBFDBC.
      *
       COPY SGCBFOPE.
       COPY SGCBFRCO.
       COPY COLBFRDC.
       COPY COLBFOPC.
       COPY COLBFDLC.
      *>>>>
*% END
*% IF PGM_ARG AND NOT PGM_DB2
      *<<<< PGM_ARG AND NOT PGM_DB2
       COPY GNSBTABV.
      *>>>>
*% END
      *>>>>
*% END
