       IDENTIFICATION DIVISION.
      *========================
       PROGRAM-ID.   LDCPQLDC.
       AUTHOR.       CONSIST.
       DATE-WRITTEN. 21-Feb-95 03:39 PM.

      * NOMBRE PROGRAMA                   LDCPQLDC
      * VERSION                           3.1
      * OPCION                            CON
      * ARCHIVO BASE                      LDCLDC
      * PANTALLA                          LDCLDC
      * INP/OUT                           DATACOM
      * TAMANO COMMAREA                   250


       ENVIRONMENT DIVISION.
      *=====================
       CONFIGURATION SECTION.
      *----------------------
       SPECIAL-NAMES.
               DECIMAL-POINT IS COMMA.

       DATA DIVISION.
      *==============

       WORKING-STORAGE SECTION.
      *------------------------
      * COPY GNSWGSCR.
       COPY GNSWCSCR.
       COPY GNSWVSCR.
      *<<<< PGM_BMS AND FIN_SCR_VARI
       COPY LDCWGENG.
           03 SCR-IND-MCLI  VALUE SPACES            PIC X(01).
           03 SCR-IND-OCIC  VALUE SPACES            PIC X(01).
      *JSS-INI 21-MAR-1994
      *    03 SCR-CLF-DISP  VALUE SPACES            PIC X(62).
           03 SCR-COD-TOGA  VALUE SPACES            PIC X(03).
           03 SCR-COD-OFIC  VALUE SPACES            PIC X(03).
           03 SCR-COD-EJEC  VALUE SPACES            PIC X(12).
      *<<<< NOT PGM_ARG
           03 SCR-NUM-ICLI  VALUE SPACES            PIC X(08).
      *>>>>
           03 SCR-VRF-ICLI  VALUE SPACES            PIC X(01).
           03 SCR-IND-ICLI  VALUE SPACES            PIC X(01).
      *<<<< NOT PGM_ARG
           03 SCR-GLS-ICLI  VALUE SPACES            PIC X(03).
      *>>>>
           03 SCR-VAL-CMAX  VALUE ZEROES            PIC 9(11).
           03 SCR-COD-VCCF  VALUE SPACES            PIC X(06).
           03 SCR-COD-TOOC  VALUE SPACES            PIC X(03).
           03 SCR-COD-AOOC  VALUE SPACES            PIC X(03).
      *    03 SCR-CLF-DISP  VALUE SPACES            PIC X(08).
           03 SCR-COD-VCOC  VALUE SPACES            PIC X(06).
      *<<<< NOT PGM_ARG
           03 SCR-CLF-DISP  VALUE SPACES            PIC X(02).
      *>>>>
      *JSS-FIN 21-MAR-1994
      *FLB CST  11-MAY-1994 FIN

           03 CMA-VARI.
              05 ARG-CAI-IGAR                       PIC X(04).
      * Si > zeroes, en CMN-ING enganchar a GAR y/o FIA
              05 ARG-IIC-IGAR                       PIC 9(08).
      * Si > zeroes, en CMN-ING enganchar a GAR y/o FIA
              05 ARC-CAI-IOPC                       PIC X(04).
              05 ARC-IIC-IOPC                       PIC 9(08).
              05 CMA-NUM-ARC                        PIC 9(01).
              05 CMA-NUM-ARG                        PIC 9(01).
              05 CLF-FEC-FAPE.
                 07 CLF-NUM-DAPE                    PIC 9(02).
                 07 CLF-NUM-MAPE                    PIC 9(02).
                 07 CLF-NUM-SAPE                    PIC 9(02).
                 07 CLF-NUM-AAPE                    PIC 9(02).
              05 CLF-FEC-FVEN.
                 07 CLF-NUM-SVEN                    PIC 9(02).
                 07 CLF-NUM-AVEN                    PIC 9(02).
                 07 CLF-NUM-MVEN                    PIC 9(02).
                 07 CLF-NUM-DVEN                    PIC 9(02).
              05 CLF-NUM-PVIG                       PIC 9(03).
              05 CLF-IND-PVIG                       PIC X(01).
      *<<<< NOT PGM_ARG
              05 CLF-VAL-CMAX    COMP-3             PIC S9(11)V9(4).
      *>>>>
              05 CMA-IND-IOPC                       PIC X(01).
      *FLB CST  23-JUN-1994
              05 CMA-IND-IGAR                       PIC X(01).
              05 SCR-LDC-DISP  VALUE SPACES         PIC X(34).
      *FLB CST  23-JUN-1994 FIN
      *>>>>
      *<<<< FIN_SCR_VARI
           03  SCR-VARI-PFS.
               05  SCR-KEY-ILDC-ACTU      PIC X(14).
               05  SCR-KEY-ILDC-RAIZ      PIC X(12).
      *>>>>
       COPY LDCWILDC.

       COPY LDCBRLDC.


       COPY GNSWVIDD.
       COPY GNSWGRQA.
       COPY GNSWGUIB.
       COPY GNSWGELS.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-LDC-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-TAB-REQA==.
       COPY GNSBRTAB.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-MSC-REQA==.
       COPY GNSBRMSC.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-MSG-REQA==.
       COPY GNSBRMSG.
       COPY GNSWCFIO.
       COPY GNSWVFIO.
       COPY GNSWGFRM.
       COPY GNSWVNUM.
       COPY GNSWCNUM.
       COPY GNSWGFEC.
       COPY GNSWGHOY.
       COPY GNSWCVRF.
       COPY GNSWVVRF.
       COPY GNSWGIDC.
       COPY GNSWGSYS.

      *<<<< WSS
      *<<<< PGM_BMS
       COPY LDCWGPMP.
      *>>>>
      *<<<< PGM_PQ
       COPY LDCWGVCL.
      *>>>>
       01  WSS-VARI.
      *LTM-INI 13.04.1994
           03  WSS-IFIN          VALUE SPACES     PIC X(01).
      *LTM-FIN 13.04.1994
           03  WSS-CIC-ICLI                       PIC X(12).
           03  WSS-COD-COPE.
               05  WSS-COD-TOPE                   PIC X(03).
               05  WSS-COD-AOPE                   PIC X(03).
           03  WSS-NUM-PER                        PIC 9(03).
           03  WSS-IND-PER                        PIC X(01).
           03  ARC-KEY-IARC.
               05  ARC-KEY-ILDC.
                   07  ARC-CAI-ICLF               PIC X(04).
                   07  ARC-IIC-ICLF               PIC 9(08).
      *<<<< NOT PGM_DB2
                   07  ARC-NUM-ILDC               PIC 9(02).
               05  ARC-NUM-IARC                   PIC 9(01).
      *>>>>
           03  ARG-KEY-IARG.
               05  ARG-KEY-ILDC.
                   07  ARG-CAI-ICLF               PIC X(04).
                   07  ARG-IIC-ICLF               PIC 9(08).
      *<<<< NOT PGM_DB2
                   07  ARG-NUM-ILDC               PIC 9(02).
               05  ARG-NUM-IARG                   PIC 9(01).
      *>>>>
           03  WSS-NDIA       VALUE ZEROES        PIC 9(04).
           03  WSS-NANO       VALUE ZEROES        PIC 9(06).
           03  WSS-MOV        VALUE ZEROES        PIC 9(02).
           03  WSS-FS-ARC     VALUE ZEROES        PIC 9(02).

           03  WSS-FEC-FVEN.
               05  WSS-NUM-SVEN                   PIC 9(02).
               05  WSS-NUM-AVEN                   PIC 9(02).
               05  WSS-NUM-MVEN                   PIC 9(02).
               05  WSS-NUM-DVEN                   PIC 9(02).
           03  WSS-FEC-FVE1.
               05  WSS-NUM-SVE1                   PIC 9(02).
               05  WSS-NUM-AVE1                   PIC 9(02).
               05  WSS-NUM-MVE1                   PIC 9(02).
               05  WSS-NUM-DVE1                   PIC 9(02).
           03  WSS-CIC-TOCF   VALUE SPACES        PIC X(12).
      *<<<< NOT PGM_DB2
       COPY LDCBRCLF.
       COPY LDCBRARC.
       COPY LDCBRARG.
       COPY LDCBRRDC.


       COPY GARBRTAG.

       COPY SGCBRDBC.

       COPY GNSBRCIC.
       COPY GNSWGCIC.
       COPY GNSWGCPT.         

       COPY TABBRTIO.
      *<<<< PGM_DTC

       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-CIC-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-CLF-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-ARC-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-ARG-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-RDC-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-DBC-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-TIO-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-TAG-REQA==.
      *>>>>
      *>>>>
      *>>>>
       01  PGM-VARI.
           03 PGM-ICLR                  VALUE ' '       PIC X(01).
           03 PGM-LIMPIAR-TODO          VALUE ' '       PIC X(01).
           03 PGM-LIMPIAR-LLAVES        VALUE 'K'       PIC X(01).
           03 PGM-LIMPIAR-CAMPOS        VALUE 'F'       PIC X(01).
           03 PGM-NO-LIMPIAR-NADA       VALUE 'N'       PIC X(01).
           03 PGM-PROG                                  PIC X(08).
           03 PGM-NTRN                                  PIC X(04).
           03 PGM-STAT.
              05 PGM-STAT-CLF.
                 88 PGM-STAT-CLF-NUL    VALUE '  '.
                 07 PGM-STT1-CLF        VALUE '2' PIC X(01).
                    88 PGM-STAT-CLF-OKS VALUE '0'.
                 07 PGM-STT2-CLF        VALUE '3' PIC X(01).
              05 PGM-STAT-LDC.
                 88 PGM-STAT-LDC-NUL    VALUE '  '.
                 07 PGM-STT1-LDC        VALUE '2' PIC X(01).
                    88 PGM-STAT-LDC-OKS VALUE '0'.
                 07 PGM-STT2-LDC        VALUE '3' PIC X(01).
              05 PGM-STAT-DBC.
                 88 PGM-STAT-DBC-NUL    VALUE '  '.
                 07 PGM-STT1-DBC        VALUE '2' PIC X(01).
                    88 PGM-STAT-DBC-OKS VALUE '0'.
                 07 PGM-STT2-DBC        VALUE '3' PIC X(01).
              05 PGM-STAT-ARC.
                 88 PGM-STAT-ARC-NUL    VALUE '  '.
                 07 PGM-STT1-ARC        VALUE '2' PIC X(01).
                    88 PGM-STAT-ARC-OKS VALUE '0'.
                 07 PGM-STT2-ARC        VALUE '3' PIC X(01).
              05 PGM-STAT-ARG.
                 88 PGM-STAT-ARG-NUL    VALUE '  '.
                 07 PGM-STT1-ARG        VALUE '2' PIC X(01).
                    88 PGM-STAT-ARG-OKS VALUE '0'.
                 07 PGM-STT2-ARG        VALUE '3' PIC X(01).
              05 PGM-STAT-WSS.
                 88 PGM-STAT-WSS-NUL    VALUE '  '.
                 07 PGM-STT1-WSS        VALUE '2' PIC X(01).
                    88 PGM-STAT-WSS-OKS VALUE '0'.
                 07 PGM-STT2-WSS        VALUE '3' PIC X(01).
           03 PGM-SRNF                  VALUE '23'      PIC X(02).
           03 PGM-SOKS                  VALUE '00'      PIC X(02).
           03 PGM-SNUL                  VALUE '  '      PIC X(02).
           03 PGM-SUAR                  VALUE SPACES    PIC X(15).
           03 PGM-CMMA.
              05 PGM-CMMA-CHR OCCURS 566 PIC X(01).

       LINKAGE SECTION.
      *----------------
       01  DFHCOMMAREA.
           02 DFH-CMMA OCCURS 566 PIC X(01).
       COPY GNSLGFIO.

       PROCEDURE DIVISION.
      *===================

       MAIN SECTION.
       INI-MAIN.
           PERFORM INI.
       LUP-MAIN.
           IF SCR-INST = SCR-INST-HCM
                 PERFORM SCR-COM.
           IF SCR-CCPP = 'MOD'
                 PERFORM SCR-MOD
           ELSE
           IF SCR-CCPP = 'ING'
                 PERFORM SCR-ING
           ELSE
           IF SCR-CCPP = 'ACC'
                 PERFORM SCR-ACC
           ELSE
           IF SCR-CCPP = 'ELI'
                 PERFORM SCR-ELI
           ELSE
                 MOVE SCR-INST-HCM TO SCR-INST.
           GO TO LUP-MAIN.
       FIN-MAIN.
           EXIT.

       INI SECTION.
       INI-INI.
       COPY GNSBGEIB.
       COPY GNSBGEDB.
           MOVE LOW-VALUES TO LDC-FLD.
           MOVE LOW-VALUES TO LDC-EDT.
           PERFORM GNS-PRO-RCK.
           PERFORM GNS-BUS-VCA.
           MOVE +566 TO SCR-TCMA.
           PERFORM GNS-HDL-SYS.
           PERFORM GNS-HDL-FRM.
           MOVE 'LDCPQLDC' TO FIO-PROG.
           PERFORM GNS-BUS-IDD.
      *<<<< ( INI_FIO ) AND ( NOT PGM_VSI )
           PERFORM GNS-HDL-VSM.
      *>>>>
      *<<<< INI_FIO 
      *<<<< PGM_PQ
           MOVE SPACES TO ARG-CAI-IGAR IN CMA-VARI.
           MOVE ZEROES TO ARG-IIC-IGAR IN CMA-VARI.
           IF SCR-DESDE-CMN
               MOVE SPACES TO SCR-VEC-ENG
               MOVE WSS-IDX-ILDC TO SCR-IPRO
               MOVE 'L' TO SCR-IND-COL
           ELSE
           IF SCR-INST-EXT = WSS-INST-FPEN-CIC AND
              SCR-IND-COL = 'C'
               MOVE WSS-INST-NULL TO SCR-INST-EXT
               MOVE SPACES TO MSG-COD-MENS
               PERFORM ING-FPEN-CIC
           ELSE
           IF SCR-INST-EXT = WSS-INST-FPEN-CIC
               MOVE SPACES TO SCR-VEC-ENG
               MOVE WSS-IDX-ILDC TO SCR-IPRO
               MOVE 'L' TO SCR-IND-COL
               MOVE LOW-VALUES TO LDC-FLD
               MOVE 'ING' TO SCR-CCPP SCR-CMND
               MOVE SCR-INST-HKY TO SCR-INST
               MOVE SPACES TO SCR-IND-FST IN SCR-VEC-FST(SCR-IPRO)
               PERFORM ING-SETE
               PERFORM SCR-INIT
               MOVE 'C' TO SCR-ICMN
               MOVE ZEROES TO SCR-INST-EXT.
      *>>>>
      *>>>>
       FIN-INI.
           EXIT.

       COPY GNSBHSYS.
       COPY GNSBHFRM.
       COPY GNSBPRCK.
       GNS-BUS-VCA SECTION.
       INI-GNS-BUS-VCA.
           MOVE 0 TO FRM-IFLD.
       LUP-GNS-BUS-VCA.
           ADD 1 TO FRM-IFLD.
           IF FRM-IFLD NOT > EIBCALEN AND
              FRM-IFLD NOT > 566
                MOVE DFH-CMMA(FRM-IFLD) TO PGM-CMMA-CHR(FRM-IFLD)
                GO TO LUP-GNS-BUS-VCA.
           MOVE PGM-CMMA TO SCR-VARI.
       FIN-GNS-BUS-VCA.
           EXIT.
       COPY GNSBBIDD.

       SCR-COM SECTION.
       INI-SCR-COM.
           MOVE FRM-CPSF-AEY TO FRM-CPIM-AEY.
           PERFORM PRO-ALL.
           PERFORM SCR-CLRA-LDC.
           PERFORM EDT-KEY-LDC.
           PERFORM EDT-FLD-LDC.
           PERFORM SCR-PUTA.
           MOVE SCR-INST-HCM TO SCR-INST.
           MOVE SCR-CMNP     TO SYS-PROG.
           MOVE SCR-VARI     TO SYS-CMMA.
           MOVE SCR-TCMA     TO SYS-TCMA.
           MOVE SYS-XCTL     TO SYS-CMND.
           PERFORM GNS-PRO-SYS.
       XCT-ERR.
           MOVE 'XCTERR    ' TO MSG-COD-MENS.
           MOVE 'GNS'        TO MSG-COD-SIST.
           PERFORM GET-MSG.
           MOVE MSG-GLS-DESC TO SYS-MEN1.
           MOVE SYS-PROG     TO SYS-MEN2.
           MOVE SYS-ABOR     TO SYS-CMND.
           PERFORM GNS-PRO-SYS.
       COPY GNSBGGBK.
       FIN-SCR-COM.
           EXIT.

       SCR-MOD SECTION.
       INI-SCR-MOD.
           IF SCR-INST = SCR-INST-HKY
               MOVE SCR-INST-GKY TO SCR-INST
               PERFORM HBL-KEY
               PERFORM SCR-DMSG
           ELSE
           IF SCR-INST = SCR-INST-GKY
                PERFORM SCR-KEY
                IF SCR-STAT NOT = SCR-STAT-ABT
                        PERFORM SCR-TRL
                ELSE
                        PERFORM DESSCRTRL
                        GO TO FIN-SCR-MOD
           ELSE
           IF SCR-INST = SCR-INST-GAB
                PERFORM GET-CON
           ELSE
           IF SCR-INST = SCR-INST-BRW
               MOVE SCR-FFLD TO FRM-FFLD
               PERFORM BRW-SCR-MOD.
           PERFORM DESSCRTRL.
       MSG-SCR-MOD.
           MOVE SPACES TO FRM-MENS.
           PERFORM SCR-MSSG.
       FIN-SCR-MOD.
           EXIT.

       BRW-SCR-MOD SECTION.
       INI-BRW-SCR-MOD.
       FIN-BRW-SCR-MOD.
           EXIT.

       SCR-ING SECTION.
       INI-SCR-ING.
           IF SCR-INST = SCR-INST-HKY
               MOVE SCR-INST-GKY TO SCR-INST
               PERFORM HBL-IKY
               PERFORM SCR-DMSG
           ELSE
           IF SCR-INST = SCR-INST-GKY
                PERFORM SCR-RST
                PERFORM GET-IKY
                IF NOT FRM-STAT-ABT
                        MOVE SPACES TO FRM-MENS
                        PERFORM FND-KEY
                        IF NOT FIO-STAT-OKS AND
                           FIO-STAT NOT = FIO-STAT-NEX
      *JSS                  PERFORM CLR-FLD-LDC
                            MOVE PGM-LIMPIAR-TODO TO PGM-ICLR
                            PERFORM SCR-TRL
                        ELSE
                        MOVE PGM-LIMPIAR-CAMPOS TO PGM-ICLR
                        IF FRM-MENS NOT > SPACES
                            MOVE 'REGEXI    ' TO MSG-COD-MENS
                            MOVE 'GNS' TO MSG-COD-SIST
                            PERFORM GET-MSG
                            MOVE MSG-GLS-DESC TO FRM-MENS
                            PERFORM SCR-MSSG
                            MOVE SCR-STAT-ABT TO SCR-STAT
                            PERFORM DESSCRTRL
                            GO TO FIN-SCR-ING
                        ELSE
                            PERFORM SCR-MSSG
                            MOVE SCR-STAT-ABT TO SCR-STAT
                            PERFORM DESSCRTRL
                            GO TO FIN-SCR-ING
                ELSE
                        MOVE SPACES TO FRM-MENS
                        PERFORM SCR-MSSG
                        PERFORM DESSCRTRL
                        GO TO FIN-SCR-ING
           ELSE
           IF SCR-INST = SCR-INST-GAB
                PERFORM GET-CON.
           PERFORM DESSCRTRL.
       MSG-SCR-ING.
           MOVE SPACES TO FRM-MENS.
           PERFORM SCR-MSSG.
       FIN-SCR-ING.
           EXIT.

       SCR-ACC SECTION.
       INI-SCR-ACC.
           IF SCR-INST = SCR-INST-HKY
               MOVE SCR-INST-GKY TO SCR-INST
               PERFORM HBL-KEY
               PERFORM SCR-DMSG
           ELSE
           IF SCR-INST = SCR-INST-GKY
                PERFORM SCR-KEY
                IF SCR-STAT NOT = SCR-STAT-ABT
                        PERFORM SCR-TRL
                ELSE
                        PERFORM DESSCRTRL
                        GO TO FIN-SCR-ACC
           ELSE
           IF SCR-INST = SCR-INST-GAB
                PERFORM GET-CON
           ELSE
           IF SCR-INST = SCR-INST-BRW
               MOVE SCR-FFLD TO FRM-FFLD
               PERFORM BRW-SCR-ACC.
           PERFORM DESSCRTRL.
      *<<<< PFS_SCR_ACC
           IF FRM-FFLD = FRM-FFLD-PF5 OR FRM-FFLD-PF6 OR
                         FRM-FFLD-PF7 OR FRM-FFLD-PF8
               PERFORM VAL-NUM-KEY-LDC
               PERFORM VAL-NUM-FLD-LDC
               PERFORM SCRL-TAB-LDC
               PERFORM SCR-TRL.
      *>>>>
           MOVE SPACES TO FRM-MENS.
           PERFORM SCR-MSSG.
       FIN-SCR-ACC.
           EXIT.

       BRW-SCR-ACC SECTION.
       INI-BRW-SCR-ACC.
       FIN-BRW-SCR-ACC.
           EXIT.

       SCR-ELI SECTION.
       INI-SCR-ELI.
           IF SCR-INST = SCR-INST-HKY
               MOVE SCR-INST-GKY TO SCR-INST
               PERFORM HBL-KEY
               PERFORM SCR-DMSG
           ELSE
           IF SCR-INST = SCR-INST-GKY
                PERFORM SCR-KEY
                IF SCR-STAT NOT = SCR-STAT-ABT
                        PERFORM SCR-TRL
                ELSE
                        PERFORM DESSCRTRL
                        GO TO FIN-SCR-ELI
           ELSE
           IF SCR-INST = SCR-INST-GAB
                PERFORM GET-CON
           ELSE
           IF SCR-INST = SCR-INST-BRW
               MOVE SCR-FFLD TO FRM-FFLD
               PERFORM BRW-SCR-ELI.
           PERFORM DESSCRTRL.
           MOVE SPACES TO FRM-MENS.
           PERFORM SCR-MSSG.
       FIN-SCR-ELI.
           EXIT.

       BRW-SCR-ELI SECTION.
       INI-BRW-SCR-ELI.
       FIN-BRW-SCR-ELI.
           EXIT.



       SCR-DMSG SECTION.
       INI-SCR-DMSG.
           IF PGM-ICLR = PGM-NO-LIMPIAR-NADA
               NEXT SENTENCE
           ELSE
           IF PGM-ICLR = PGM-LIMPIAR-TODO
               PERFORM SCR-CLRA-LDC
               PERFORM EDT-KEY-LDC
               PERFORM EDT-FLD-LDC
           ELSE
           IF PGM-ICLR = PGM-LIMPIAR-LLAVES
               PERFORM CLR-KEY-LDC
               PERFORM EDT-KEY-LDC
           ELSE
               PERFORM CLR-FLD-LDC
               PERFORM EDT-FLD-LDC.
           PERFORM SCR-PUTA.
           PERFORM SCR-EXIT.
       FIN-SCR-DMSG.
           EXIT.

       SCR-KEY SECTION.
       INI-SCR-KEY.
           PERFORM SCR-RST.
           PERFORM GET-KEY.
           IF FRM-STAT-ABT
                   MOVE SPACES TO FRM-MENS
                   PERFORM SCR-MSSG
                   GO TO FIN-SCR-KEY.
       FND-SCR-KEY.
           MOVE SPACES TO FRM-MENS.
           PERFORM FND-KEY.
           IF FIO-STAT-OKS
               PERFORM PUT-SCR
               MOVE PGM-LIMPIAR-TODO TO PGM-ICLR
               GO TO FIN-SCR-KEY.
      *JSS ELSE
      *        PERFORM CLR-FLD-LDC.
       ERR-SCR-KEY.
           MOVE PGM-LIMPIAR-CAMPOS TO PGM-ICLR.
           IF FRM-MENS NOT > SPACES
               IF FIO-STAT-EOF
                   MOVE 'REGEOF    ' TO MSG-COD-MENS
                   MOVE 'GNS' TO MSG-COD-SIST
                   PERFORM GET-MSG
                   MOVE MSG-GLS-DESC TO FRM-MENS
               ELSE
               IF FIO-STAT = FIO-STAT-NEX
                   MOVE 'REGNEX    ' TO MSG-COD-MENS
                   MOVE 'GNS' TO MSG-COD-SIST
                   PERFORM GET-MSG
                   MOVE MSG-GLS-DESC TO FRM-MENS
               ELSE
                   MOVE 'FIOSTAT' TO MSG-COD-TMSG
                   MOVE FIO-STAT  TO MSG-COD-CMSG
                   MOVE 'GNS'     TO MSG-COD-SIST
                   PERFORM GET-MSG
                   MOVE MSG-GLS-DESC TO FRM-MENS.
           PERFORM SCR-MSSG.
           MOVE SCR-STAT-ABT TO SCR-STAT.
       FIN-SCR-KEY.
           EXIT.

       SCR-RST SECTION.
       INI-SCR-RST.
           MOVE SPACES       TO PGM-ICLR.
           MOVE SPACES       TO SCR-ACTU.
           MOVE SCR-STPP     TO SCR-STAT.
           MOVE SCR-MFLD-NOT TO SCR-MFLD.
           MOVE LOW-VALUES   TO LDC-FLD.
       FIN-SCR-RST.
           EXIT.

       GET-KEY SECTION.
       INI-GET-KEY.
           PERFORM SCR-GKEY.
           IF FRM-STAT-ABT
               MOVE SCR-STAT-ABT TO SCR-STAT.
       FIN-GET-KEY.
           EXIT.

       GET-IKY SECTION.
       INI-GET-IKY.
           PERFORM SCR-GIKY.
           IF FRM-STAT-ABT
               MOVE SCR-STAT-ABT TO SCR-STAT.
       FIN-GET-IKY.
           EXIT.

       FND-KEY SECTION.
       INI-FND-KEY.
           PERFORM KEY-ALL-LDC.
      *<<<< FND_KEY
           MOVE ZEROES TO CMA-NUM-ARC IN CMA-VARI.
           MOVE ZEROES TO CMA-NUM-ARG IN CMA-VARI.
      *FLB CST  23-JUN-1994
           MOVE SPACES TO CMA-IND-IGAR IN CMA-VARI.
           MOVE SPACES TO CMA-IND-IOPC IN CMA-VARI.
           MOVE SPACES TO ARC-CAI-IOPC IN CMA-VARI.
           MOVE ZEROES TO ARC-IIC-IOPC IN CMA-VARI.
      *>>>>
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM LDC-FIO-LDC.
           MOVE FIO-STAT TO PGM-STAT-LDC.
      *<<<< FIN_FND_KEY
           IF SCR-CCPP = 'ING' AND PGM-STAT-LDC-OKS OR
              SCR-CCPP NOT = 'ING' AND NOT PGM-STAT-LDC-OKS 
               GO TO FIN-FND-KEY.
      *LTM-INI 13.04.1994
           IF (SCR-CCPP = 'ING') OR (SCR-CCPP = 'ACT' AND
               NOT PGM-STAT-LDC-OKS)
               PERFORM BUS-ENT-ANEX
               IF WSS-IFIN = 'S'
                   GO TO FIN-FND-KEY.
      *LTM-FIN 13.04.1994
           MOVE PGM-STAT-LDC TO FIO-STAT.

      *>>>>
       FIN-FND-KEY.
           EXIT.
 
       PUT-SCR SECTION.
       INI-PUT-SCR.
      *<<<< PUT_SCR
           IF PGM-STAT-LDC-OKS
               MOVE LDC-CIC-ICLF IN LDC TO SCR-KEY-ILDC-RAIZ
               MOVE LDC-KEY-ILDC IN LDC TO SCR-KEY-ILDC-ACTU.
      *>>>>
      *<<<< PUT_SCR
      *LTM-INI 13.04.1994
           PERFORM BUS-ENT-ANEX.
      *LTM-FIN 13.04.1994
      *>>>>
           PERFORM PUT-ALL-LDC.
       FIN-PUT-SCR.
           EXIT.

       STP-EXIT SECTION.
       INI-STP-EXIT.
           MOVE SCR-PROG TO PGM-PROG.
           MOVE SCR-NTRN TO PGM-NTRN.

           MOVE SCR-PROV TO SCR-PROG.
           MOVE SCR-NTRV TO SCR-NTRN.

           MOVE PGM-PROG TO SCR-PROV
           MOVE PGM-NTRN TO SCR-NTRV.
       FIN-STP-EXIT.
           EXIT.

       SCR-EXIT SECTION.
       INI-SCR-EXIT.
           MOVE 'P'      TO SCR-ICMN.
           MOVE SCR-NTRN TO SYS-NTRN.
           MOVE SCR-VARI TO SYS-CMMA.
           MOVE SCR-TCMA TO SYS-TCMA.
           MOVE SYS-RTRN TO SYS-CMND.
           PERFORM GNS-PRO-SYS.
       FIN-SCR-EXIT.
           EXIT.

       SCR-PUTA SECTION.
       INI-SCR-PUTA.
           MOVE SCR-NMAP TO FRM-NAME.
           MOVE SCR-NLIB TO FRM-NLIB.
           MOVE LDC-FLD TO FRM-DFLD.
           MOVE FRM-PUT-ALL TO FRM-CMND.
           PERFORM GNS-PRO-FRM.
       FIN-SCR-PUTA.
           EXIT.

       SCR-MSSG SECTION.
       INI-SCR-MSSG.
           IF FRM-MEN1 NOT > SPACES
               MOVE SPACES TO FRM-MEN1.
           IF FRM-MEN2 NOT > SPACES
               MOVE SPACES TO FRM-MEN2.
           MOVE FRM-MENS TO LDC-GLS-MENS.
       FIN-SCR-MSSG.
           EXIT.

       SCR-GKEY SECTION.
       INI-SCR-GKEY.
           MOVE SCR-NMAP TO FRM-NAME.
           MOVE SCR-NLIB TO FRM-NLIB.
           MOVE FRM-GET-ALL TO FRM-CMND.
           PERFORM GNS-PRO-FRM.
           MOVE SPACES TO FRM-MENS.
           IF NOT ( FRM-FFLD = FRM-FFLD-RET  OR FRM-FFLD-PF10 OR
                               FRM-FFLD-PF12 OR FRM-FFLD-PF3 )
               MOVE 'PFSINV    ' TO MSG-COD-MENS
               MOVE 'GNS' TO MSG-COD-SIST
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS
               PERFORM FST-KEY-LDC
               PERFORM SCR-MSSG
               PERFORM SCR-PUTA
               PERFORM SCR-EXIT.
           MOVE FRM-DFLD TO LDC-FLD.
           IF FRM-STAT-ABT
               GO TO FIN-SCR-GKEY.
           MOVE FRM-SUAR-OKS TO FRM-SUAR.
           PERFORM VAL-NUM-KEY-LDC.
           IF FRM-SUAR EQUAL FRM-SUAR-MAL OR FRM-SUAR-CLR
               PERFORM SCR-MSSG
               PERFORM EDT-KEY-LDC
               PERFORM SCR-PUTA
               PERFORM SCR-EXIT.
      *JSS
           PERFORM CLR-FLD-LDC.
           PERFORM VAL-IKY-LDC.
           IF FRM-SUAR EQUAL FRM-SUAR-MAL OR FRM-SUAR-CLR
               GO TO ERR-SCR-GKEY.
           PERFORM VAL-MKY-LDC.
           IF FRM-SUAR EQUAL FRM-SUAR-MAL OR FRM-SUAR-CLR
               GO TO ERR-SCR-GKEY.
           PERFORM VAL-AKY-LDC.
           IF FRM-SUAR EQUAL FRM-SUAR-MAL OR FRM-SUAR-CLR
               GO TO ERR-SCR-GKEY.
           PERFORM VAL-CON-KEY-LDC.
           IF NOT ( FRM-SUAR EQUAL FRM-SUAR-MAL OR FRM-SUAR-CLR )
               GO TO FIN-SCR-GKEY.
           IF FRM-UCUR NOT > SPACES
               PERFORM FST-KEY-LDC.
       ERR-SCR-GKEY.
           PERFORM SCR-MSSG.
           PERFORM EDT-KEY-LDC.
           PERFORM SCR-PUTA.
           PERFORM SCR-EXIT.
       FIN-SCR-GKEY.
           PERFORM SCR-MSSG.

       SCR-GIKY SECTION.
       INI-SCR-GIKY.
           MOVE SCR-NMAP TO FRM-NAME.
           MOVE SCR-NLIB TO FRM-NLIB.
           MOVE FRM-GET-ALL TO FRM-CMND.
           PERFORM GNS-PRO-FRM.
           MOVE SPACES TO FRM-MENS.
           IF NOT ( FRM-FFLD = FRM-FFLD-RET  OR FRM-FFLD-PF10 OR
                               FRM-FFLD-PF12 OR FRM-FFLD-PF3 )
               MOVE 'PFSINV    ' TO MSG-COD-MENS
               MOVE 'GNS' TO MSG-COD-SIST
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS
               PERFORM FST-KEY-LDC
               PERFORM SCR-MSSG
               PERFORM SCR-PUTA
               PERFORM SCR-EXIT.
           MOVE FRM-DFLD TO LDC-FLD.
           IF FRM-STAT-ABT
               GO TO FIN-SCR-GIKY.
           MOVE FRM-SUAR-OKS TO FRM-SUAR.
           PERFORM VAL-NUM-KEY-LDC.
           IF FRM-SUAR EQUAL FRM-SUAR-MAL OR FRM-SUAR-CLR
               PERFORM SCR-MSSG
               PERFORM EDT-IKY-LDC
               PERFORM SCR-PUTA
               PERFORM SCR-EXIT.
      *JSS
           PERFORM CLR-FLD-LDC.
           PERFORM VAL-IKY-LDC.
           IF FRM-SUAR EQUAL FRM-SUAR-MAL OR FRM-SUAR-CLR
               GO TO ERR-SCR-GIKY.
           PERFORM VAL-CON-IKY-LDC.
           IF NOT ( FRM-SUAR EQUAL FRM-SUAR-MAL OR FRM-SUAR-CLR )
               GO TO FIN-SCR-GIKY.
           IF FRM-UCUR NOT > SPACES
               PERFORM FST-KEY-LDC.
       ERR-SCR-GIKY.
           PERFORM SCR-MSSG.
           PERFORM EDT-IKY-LDC.
           PERFORM SCR-PUTA.
           PERFORM SCR-EXIT.
       FIN-SCR-GIKY.
      *<<<< PGM_BMS AND (FIN_SCR_GIKY OR FIN_SCR_GCNF OR FIN_SCR_GFLD)
           IF FRM-FFLD = FRM-FFLD-PF3 AND
              SCR-IND-ENG IN SCR-VEC-ENG(SCR-IPRO) = 'S' AND
              SCR-IND-COL = 'C'
               PERFORM EGR-FTER-CIC.
      *>>>>
           PERFORM SCR-MSSG.

       GET-CON SECTION.
       INI-GET-CON.
           MOVE SCR-NMAP TO FRM-NAME.
           MOVE SCR-NLIB TO FRM-NLIB.
           MOVE FRM-GET-ALL TO FRM-CMND.
           PERFORM GNS-PRO-FRM.
           IF NOT ( FRM-FFLD = FRM-FFLD-RET  OR FRM-FFLD-PF10 OR
                               FRM-FFLD-PF12 OR FRM-FFLD-PF3 )
      *<<<< PFS_GET_CON
           IF NOT ( FRM-FFLD = FRM-FFLD-PF5 )
           IF NOT ( FRM-FFLD = FRM-FFLD-PF6 )
      *>>>>
               MOVE 'PFSINV    ' TO MSG-COD-MENS
               MOVE 'GNS' TO MSG-COD-SIST
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO LDC-GLS-MEN2
               MOVE SCR-PRMT     TO LDC-GLS-MEN1
               PERFORM FST-MSG
               PERFORM SCR-PUTA
               PERFORM SCR-EXIT.
           MOVE FRM-DFLD TO LDC-FLD.
       FIN-GET-CON.
           MOVE SCR-STAT-CON TO SCR-STAT.

       CLR-MSG SECTION.
       INI-CLR-MSG.
           MOVE SPACES TO LDC-GLS-MENS.
       FIN-CLR-MSG.
           EXIT.

       HBL-IKY SECTION.
       INI-HBL-IKY.
           IF SCR-DESDE-CMN
               MOVE LDC-GLS-MENS TO FRM-MENS
               MOVE LOW-VALUES TO LDC-FLD
      * FLB  7-NOV-1994
               PERFORM CLR-KEY-LDC

               IF FRM-MENS < SPACES
                   MOVE LOW-VALUES TO LDC-GLS-MENS
               ELSE
                   MOVE FRM-MENS TO LDC-GLS-MENS.
           MOVE FRM-CPSF-AEY TO FRM-CPIM-AEY.
           PERFORM PRO-MKY-LDC.
           PERFORM PRO-AKY-LDC.
           PERFORM UNP-IKY-LDC.
           PERFORM FST-KEY-LDC.
           MOVE '1' TO FRM-CPIM-AEY.
       FIN-HBL-IKY.
           EXIT.

       HBL-KEY SECTION.
       INI-HBL-KEY.
           IF SCR-DESDE-CMN
               MOVE LDC-GLS-MENS TO FRM-MENS
               MOVE LOW-VALUES TO LDC-FLD
               IF FRM-MENS < SPACES
                   MOVE LOW-VALUES TO LDC-GLS-MENS
               ELSE
                   MOVE FRM-MENS TO LDC-GLS-MENS.
           MOVE FRM-CPSF-AEY TO FRM-CPIM-AEY.
           PERFORM UNP-KEY-LDC.
           PERFORM FST-KEY-LDC.
           MOVE '1' TO FRM-CPIM-AEY.
       FIN-HBL-KEY.
           EXIT.

       HBL-FLD SECTION.
       INI-HBL-FLD.
           PERFORM PRO-IKY-LDC.
           PERFORM PRO-AKY-LDC.
           PERFORM UNP-MKY-LDC.
           PERFORM UNP-FLD-LDC.
           PERFORM FST-FLD-LDC.
       FIN-HBL-FLD.
           EXIT.

       FST-MSG SECTION.
       INI-FST-MSG.
           MOVE -1 TO LDC-GLS-MENS-LEN.
       FIN-FST-MSG.
           EXIT.

       PRO-ALL SECTION.
       INI-PRO-ALL.
           PERFORM PRO-KEY-LDC.
           PERFORM FST-MSG.
       FIN-PRO-ALL.
           EXIT.

       SCR-TRL SECTION.
       INI-SCR-TRL.
           IF FRM-MEN1 NOT > SPACES
               MOVE SCR-PRMT TO FRM-MEN1.
           IF SCR-STAT = SCR-STAT-MOD
               MOVE SCR-INST-GFL TO SCR-INST
               PERFORM HBL-FLD
               PERFORM SCR-MSSG
               PERFORM EDT-KEY-LDC
               PERFORM EDT-FLD-LDC
               PERFORM SCR-PUTA
               PERFORM STP-EXIT
               PERFORM SCR-EXIT.
           IF SCR-STAT = SCR-STAT-SON
               MOVE SCR-INST-GCS TO SCR-INST
               PERFORM PRO-ALL
               PERFORM SCR-MSSG
               PERFORM EDT-KEY-LDC
               PERFORM EDT-FLD-LDC
               PERFORM SCR-PUTA
               PERFORM STP-EXIT
               PERFORM SCR-EXIT.
      *ASUME SCR-STAT-CON.
           MOVE SCR-STAT-CON TO SCR-STAT.
           MOVE SCR-INST-GAB TO SCR-INST.
      *    MOVE FRM-CPSF-AEY TO FRM-CPIM-AEY.
           PERFORM PRO-ALL.
           PERFORM SCR-MSSG.
           PERFORM EDT-KEY-LDC.
           PERFORM EDT-FLD-LDC.
           PERFORM SCR-PUTA.
           PERFORM SCR-EXIT.
       FIN-SCR-TRL.
           EXIT.

       DESSCRTRL SECTION.
       INI-DESSCRTRL.
           MOVE SCR-VFLD-NOT TO SCR-VFLD.
           MOVE FRM-FFLD TO SCR-FFLD.
       FIN-DESSCRTRL.
           IF SCR-FFLD-PF10 OR SCR-FFLD-PF3
                 MOVE SCR-INST-HCM TO SCR-INST
           ELSE
                 MOVE SCR-INST-HKY TO SCR-INST.
       EXT-DESSCRTRL.
           EXIT.

       COPY LDCBQLDC.
       COPY GNSBVNUM.
       COPY LDCBFLDC.
       COPY GNSBFMSG.
       COPY GNSBGSYS.
       COPY GNSBGDTC.
       COPY GNSBGFRM.
       COPY GNSBGMSG.
       COPY GNSBEKEY.
       COPY GNSBIABT.
       COPY GNSBBTAB.
       COPY GNSBVCOD.
       COPY GNSBVTAB.
       COPY GNSBFTAB.
       COPY GNSBBMSC.
       COPY GNSBVIND.
       COPY GNSBVMSC.
       COPY GNSBFMSC.
       COPY GNSBVIDC.
       COPY GNSBPVRF.
       COPY GNSBEGLS.
       COPY GNSBGFEC.
       COPY GNSBGHOY.

      *<<<< ( EOF ) AND ( NOT PGM_VSI )
       COPY GNSBGVSM.
       COPY GNSBHVSM.
      *>>>>
      *<<<< EOF
       SCRL-TAB-LDC SECTION.
       INI-SCRL-TAB-LDC.
           IF FRM-FFLD = FRM-FFLD-PF7 OR FRM-FFLD-PF5
               PERFORM SCRL-TAB-LDC-PF7
               GO TO FIN-SCRL-TAB-LDC.
           IF FRM-FFLD = FRM-FFLD-PF8  OR FRM-FFLD-PF6
               PERFORM SCRL-TAB-LDC-PF8
               GO TO FIN-SCRL-TAB-LDC.
       FIN-SCRL-TAB-LDC.
           EXIT.

       SCRL-TAB-LDC-PF7 SECTION.
       INI-SCRL-TAB-LDC-PF7.
           MOVE SCR-KEY-ILDC-ACTU TO LDC-KEY-ILDC IN LDC.
           MOVE 'LDC-KEY-ILDC' TO FIO-AKEY.
           MOVE FIO-GET-LEQ TO FIO-CMND.
           PERFORM LDC-FIO-LDC.
           IF NOT ( FIO-STAT-OKS AND
               LDC-KEY-ILDC IN LDC = SCR-KEY-ILDC-ACTU )
               MOVE 'LDCCURRNEX' TO MSG-COD-MENS
               GO TO MSG-SCRL-TAB-LDC-PF7.
       PRV-SCRL-TAB-LDC-PF8.
           MOVE 'LDC-KEY-ILDC' TO FIO-AKEY.
           MOVE FIO-GET-PRV TO FIO-CMND.
           PERFORM LDC-FIO-LDC.
           IF NOT ( FIO-STAT-OKS
              AND
              LDC-CIC-ICLF IN LDC = SCR-KEY-ILDC-RAIZ )
               MOVE 'LDC    NOPRV' TO MSG-COD-MENS
               GO TO MSG-SCRL-TAB-LDC-PF7.
           MOVE FIO-STAT TO PGM-STAT-LDC.
           PERFORM SCR-CLRA-LDC.
           PERFORM PUT-SCR.
           GO TO FIN-SCRL-TAB-LDC-PF7.
       MSG-SCRL-TAB-LDC-PF7.
           MOVE 'LDC' TO MSG-COD-SIST.
           PERFORM GET-MSG.
           MOVE MSG-GLS-DESC TO FRM-MEN2.
       FIN-SCRL-TAB-LDC-PF7.
           EXIT.

       SCRL-TAB-LDC-PF8 SECTION.
       INI-SCRL-TAB-LDC-PF8.
           MOVE SCR-KEY-ILDC-ACTU TO LDC-KEY-ILDC IN LDC.
           MOVE 'LDC-KEY-ILDC' TO FIO-AKEY.
           MOVE FIO-GET-NLS TO FIO-CMND.
           PERFORM LDC-FIO-LDC.
           IF NOT ( FIO-STAT-OKS AND
               LDC-KEY-ILDC IN LDC = SCR-KEY-ILDC-ACTU )
               MOVE 'LDCCURRNEX' TO MSG-COD-MENS
               GO TO MSG-SCRL-TAB-LDC-PF8.
       NXT-SCRL-TAB-LDC-PF8.
           MOVE 'LDC-KEY-ILDC' TO FIO-AKEY.
           MOVE FIO-GET-NXT TO FIO-CMND.
           PERFORM LDC-FIO-LDC.
           IF NOT ( FIO-STAT-OKS
              AND
              LDC-CIC-ICLF IN LDC = SCR-KEY-ILDC-RAIZ )
               MOVE 'LDC    NONXT' TO MSG-COD-MENS
               GO TO MSG-SCRL-TAB-LDC-PF8.
           MOVE FIO-STAT TO PGM-STAT-LDC.
           PERFORM SCR-CLRA-LDC.
           PERFORM PUT-SCR.
           GO TO FIN-SCRL-TAB-LDC-PF8.
       MSG-SCRL-TAB-LDC-PF8.
           MOVE 'LDC' TO MSG-COD-SIST.
           PERFORM GET-MSG.
           MOVE MSG-GLS-DESC TO FRM-MEN2.
       FIN-SCRL-TAB-LDC-PF8.
           EXIT.
      *>>>>
      *<<<< EOF
       COPY GNSBPFEC.
      *<<<< NOT PGM_DB2
       COPY LDCBFCLF.
       COPY LDCBFARC.
       COPY LDCBFARG.
       COPY LDCBFRDC.

      *>>>>


       COPY GARBFTAG.

       COPY SGCBFDBC.

       COPY GNSBFCIC.

       COPY GNSBGCPT.
      *<<<< PGM_PQ
       GET-ARC SECTION.
       INI-GET-ARC.
           MOVE '00' TO FIO-STAT.
           MOVE LDC-CAI-ICLF IN LDC TO ARC-CAI-ICLF IN WSS-VARI.
           MOVE LDC-IIC-ICLF IN LDC TO ARC-IIC-ICLF IN WSS-VARI.
           MOVE LDC-NUM-ILDC IN LDC TO ARC-NUM-ILDC IN WSS-VARI.
           MOVE ZEROES              TO ARC-NUM-IARC IN WSS-VARI.
           MOVE ARC-KEY-IARC IN WSS-VARI TO ARC-KEY-IARC IN ARC.

           MOVE FIO-GET-NLS TO FIO-CMND.
           PERFORM LDC-FIO-ARC.
           IF NOT ( FIO-STAT-OKS AND
                    ARC-KEY-ILDC IN WSS-VARI = ARC-KEY-ILDC IN ARC )
               MOVE '23' TO PGM-STAT-ARC
               IF FIO-STAT-OKS
                   MOVE FIO-END-BRW TO FIO-CMND
                   PERFORM LDC-FIO-ARC
                   GO TO FIN-GET-ARC
               ELSE
                   GO TO FIN-GET-ARC.

           MOVE ARC-KEY-IARC IN ARC TO ARC-KEY-IARC IN WSS-VARI.
       LUP-ARC.
           ADD 1 TO CMA-NUM-ARC IN CMA-VARI.
           IF CMA-NUM-ARC IN CMA-VARI > 1
               MOVE '00' TO PGM-STAT-ARC
      *Existen multiples ARC
               MOVE FIO-END-BRW TO FIO-CMND
               PERFORM LDC-FIO-ARC
               GO TO FIN-GET-ARC.

       NXT-LUP-ARC.
           MOVE FIO-GET-NXT    TO FIO-CMND.
           PERFORM LDC-FIO-ARC.
           IF FIO-STAT-OKS AND
              ARC-KEY-ILDC IN WSS-VARI = ARC-KEY-ILDC IN ARC
               GO TO LUP-ARC.

       END-LUP-ARC.
      *Existe 1 unico ARC
           IF FIO-STAT-OKS
               MOVE FIO-END-BRW TO FIO-CMND
               PERFORM LDC-FIO-ARC.

           MOVE ARC-KEY-IARC IN WSS-VARI TO ARC-KEY-IARC IN ARC.
           MOVE FIO-GET-KEY    TO FIO-CMND.
           PERFORM LDC-FIO-ARC.
           IF FIO-STAT-OKS
               MOVE '00' TO PGM-STAT-ARC.
           IF ARC-IIC-IOPC IN ARC > ZEROES
               MOVE ARC-CAI-IOPC IN ARC TO ARC-CAI-IOPC IN CMA-VARI
               MOVE ARC-IIC-IOPC IN ARC TO ARC-IIC-IOPC IN CMA-VARI
               MOVE ARC-IND-IOPC IN ARC TO CMA-IND-IOPC IN CMA-VARI.
       FIN-GET-ARC.
           EXIT.

       GET-ARG SECTION.
       INI-GET-ARG.
           MOVE '00' TO FIO-STAT.
           MOVE LDC-CAI-ICLF IN LDC TO ARG-CAI-ICLF IN WSS-VARI.
           MOVE LDC-IIC-ICLF IN LDC TO ARG-IIC-ICLF IN WSS-VARI.
           MOVE LDC-NUM-ILDC IN LDC TO ARG-NUM-ILDC IN WSS-VARI.
           MOVE ZEROES              TO ARG-NUM-IARG IN WSS-VARI.
           MOVE ARG-KEY-IARG IN WSS-VARI TO ARG-KEY-IARG IN ARG.

           MOVE FIO-GET-NLS TO FIO-CMND.
           PERFORM LDC-FIO-ARG.
           IF NOT ( FIO-STAT-OKS AND
                    ARG-KEY-ILDC IN WSS-VARI = ARG-KEY-ILDC IN ARG )
               MOVE '23' TO PGM-STAT-ARG
               IF FIO-STAT-OKS
                   MOVE FIO-END-BRW TO FIO-CMND
                   PERFORM LDC-FIO-ARG
                   GO TO FIN-GET-ARG
               ELSE
                   GO TO FIN-GET-ARG.

           MOVE ARG-KEY-IARG IN ARG TO ARG-KEY-IARG IN WSS-VARI.
       LUP-ARG.
           ADD 1 TO CMA-NUM-ARG IN CMA-VARI.
           IF CMA-NUM-ARG IN CMA-VARI > 1
               MOVE '00' TO PGM-STAT-ARG
      *Existen multiples ARG
               MOVE FIO-END-BRW TO FIO-CMND
               PERFORM LDC-FIO-ARG
               GO TO FIN-GET-ARG.

       NXT-LUP-ARG.
           MOVE FIO-GET-NXT    TO FIO-CMND.
           PERFORM LDC-FIO-ARG.
           IF FIO-STAT-OKS AND
              ARG-KEY-ILDC IN WSS-VARI = ARG-KEY-ILDC IN ARG
               GO TO LUP-ARG.

       END-LUP-ARG.
      *Existe 1 unico ARG
           IF FIO-STAT-OKS
               MOVE FIO-END-BRW TO FIO-CMND
               PERFORM LDC-FIO-ARG.

           MOVE ARG-KEY-IARG IN WSS-VARI TO ARG-KEY-IARG IN ARG.
           MOVE FIO-GET-KEY    TO FIO-CMND.
           PERFORM LDC-FIO-ARG.
           IF FIO-STAT-OKS
               MOVE '00' TO PGM-STAT-ARG.
       FIN-GET-ARG.
           EXIT.
      *>>>>
      *<<<< EOF AND PGM_BMS 
      *  CODIGO ADICIONAL PARA ENGANCHE PROGRAMAS

      *<<<< PGM_PQ
       ING-FPEN-CIC SECTION.
       INI-ING-FPEN-CIC.
           MOVE LOW-VALUES TO LDC-FLD.
           PERFORM ING-SETE.
           PERFORM SCR-CLRA-LDC.
           PERFORM HBL-IKY.
           PERFORM HBL-KEY-LDC.
       FIN-ING-FPEN-CIC.
           EXIT.

       ING-SETE SECTION.
       INI-ING-SETE.
           PERFORM CRG-TBL-ENG.
           MOVE WSS-NTRN(SCR-IPRO)     TO SCR-NTRN.
           MOVE WSS-PROG(SCR-IPRO)     TO SCR-PROG.
           MOVE WSS-NMAP(SCR-IPRO)     TO SCR-NMAP.
           MOVE WSS-NLIB(SCR-IPRO)     TO SCR-NLIB.
      *     MOVE WSS-NEMO(WSS-IDX-ICAD) TO SCR-NEMO.

           MOVE WSS-NTRV(SCR-IPRO)     TO SCR-NTRV.
           MOVE WSS-PROV(SCR-IPRO)     TO SCR-PROV.
       FIN-ING-SETE.
           EXIT.

       HBL-KEY-LDC SECTION.
       INI-HBL-KEY-LDC.
           MOVE LOW-VALUES TO LDC-FLD.
           PERFORM SCR-CLRA-LDC.
           MOVE SCR-CAI-ICLF IN SCR-VARI TO LDC-CAI-ICLF IN LDC-FLD.
           MOVE SCR-IIC-ICLF IN SCR-VARI TO LDC-IIC-ICLF IN LDC-FLD.

           MOVE 'ING'                  TO SCR-CCPP.
           MOVE 'ING'                  TO SCR-CMND.
           PERFORM VAL-LDC-NUM-ILDC.

           IF MSG-COD-MENS NOT > SPACES
               PERFORM FND-KEY
               IF MSG-COD-MENS > SPACES
                   MOVE MSG-GLS-DESC TO FRM-MENS.

      * FLB 24/JUL/92 DIO ALGO MALO 
      * FLB 24/JUL/92 LE AGREGUE QUE SE VAYA Y NO HABILITE LOS CAMPOS
           IF MSG-COD-MENS > SPACES
               PERFORM CLR-CLF-LDC
      *         MOVE SCR-STAT-CON TO SCR-STAT
      *         MOVE SCR-INST-GAB TO SCR-INST
                MOVE SCR-INST-GKY TO SCR-INST

      *    MOVE FRM-CPSF-AEY TO FRM-CPIM-AEY
               PERFORM PRO-ALL
               PERFORM UNP-IKY-LDC

               PERFORM SCR-MSSG
               PERFORM EDT-KEY-LDC
      *         PERFORM EDT-FLD-LDC
               IF SCR-IND-FST IN SCR-VEC-FST(SCR-IPRO) = 'S'
                   MOVE SPACES TO SCR-IND-FST IN SCR-VEC-FST(SCR-IPRO)
                   PERFORM SCR-INIT
                   PERFORM SCR-EXIT
                   GO TO FIN-HBL-KEY-LDC
               ELSE
                   PERFORM SCR-PUTA
                   PERFORM SCR-EXIT
                   GO TO FIN-HBL-KEY-LDC.

           MOVE +4 TO LDC-CAI-ICLF-LEN IN LDC-FLD.
      *ISP   25-JUL-1990 DEBE SER REEMPLAZADO POR VARIABLE
      *     INHIBE MOVE FRM-CPSF TO FRM-CPIM-AEY
           MOVE '1' TO FRM-CPIM-AEY.
           PERFORM HBL-FLD.
      *ALD-BNL.
           MOVE FRM-CPIM-AEY TO LDC-CAI-ICLF-ATR.
           MOVE FRM-CPIM-AEY TO LDC-IIC-ICLF-ATR.
           MOVE FRM-CPIM-AEY TO LDC-NUM-ILDC-ATR.
      *
           MOVE SCR-INST-GFL TO SCR-INST.

       CIC-HBL-KEY-CLF.
      *
           PERFORM EDT-KEY-LDC.
           PERFORM EDT-FLD-LDC.

           MOVE 'GNS' TO MSG-COD-SIST.
           MOVE 'FLDING' TO MSG-COD-MENS.
           PERFORM GET-MSG.
           MOVE MSG-GLS-DESC TO FRM-MEN1.
           MOVE FRM-MEN1     TO LDC-GLS-MEN1 IN LDC-FLD.

           MOVE 'F10LDCNINCLF' TO MSG-COD-MENS.
           PERFORM MSG-PF10.

           PERFORM SCR-MSSG.

           IF SCR-IND-FST IN SCR-VEC-FST(SCR-IPRO) = 'S'
               MOVE SPACES TO SCR-IND-FST IN SCR-VEC-FST(SCR-IPRO)
               PERFORM SCR-INIT
               PERFORM STP-EXIT
           ELSE
               PERFORM SCR-PUTA.
           PERFORM SCR-EXIT.
       FIN-HBL-KEY-LDC.
           EXIT.

       MSG-PF10 SECTION.
       INI-MSG-PF10.
      *GET-MSG Busca mensaje en tabla
           MOVE 'DEU' TO MSG-COD-SIST.
           PERFORM GET-MSG.
           MOVE MSG-GLS-DESC TO FRM-MEN2.
           MOVE FRM-MEN2     TO LDC-GLS-MEN2 IN LDC-FLD.
       FIN-MSG-PF10.
           EXIT.

      *>>>>
       EGR-FPEN-CIC SECTION.
       INI-EGR-FPEN-CIC.
           PERFORM CRG-TBL-ENG.
           ADD 1 TO SCR-IPRO.
           IF SCR-IPRO > WSS-TOT-IIDX
                  PERFORM EGR-FTER-CIC
                  GO TO FIN-EGR-FPEN-CIC.
           IF SCR-IND-ENG IN SCR-VEC-ENG(SCR-IPRO) = SPACES
               GO TO INI-EGR-FPEN-CIC.
           MOVE WSS-INST-FPEN-CIC TO SCR-INST-EXT.
           MOVE WSS-PROG(SCR-IPRO) TO SYS-PROG.
           MOVE SCR-VARI TO SYS-CMMA.
      *<<<< PGM_PQ OR (PGM_PU AND NOT PGM_DB2)
           MOVE SCR-TCMA TO SYS-TCMA.
           MOVE SYS-XCTL TO SYS-CMND.
           PERFORM GNS-PRO-SYS.
      *>>>>
       FIN-EGR-FPEN-CIC.
           EXIT.

       EGR-FTER-CIC SECTION.
       INI-EGR-FTER-CIC.
           PERFORM CRG-TBL-ENG.
           MOVE WSS-IDX-ICLF TO SCR-IPRO.
           MOVE WSS-INST-FTER-CIC TO SCR-INST-EXT.
           MOVE WSS-PROG(SCR-IPRO) TO SYS-PROG.
           MOVE SCR-VARI TO SYS-CMMA.
      *<<<< PGM_PQ OR (PGM_PU AND NOT PGM_DB2)
           MOVE SCR-TCMA TO SYS-TCMA.
           MOVE SYS-XCTL TO SYS-CMND.
           PERFORM GNS-PRO-SYS.
      *>>>>
       FIN-EGR-FTER-CIC.
           EXIT.

       SCR-INIT SECTION.
       INI-SCR-INIT.
           MOVE 3  TO FRM-PLIN.
           MOVE 19 TO FRM-NLIN.
           MOVE FRM-CLR-FRM TO FRM-CMND.
           PERFORM GNS-PRO-FRM.
           MOVE FRM-SINI-DBNF TO FRM-SINI.
           MOVE SCR-NMAP TO FRM-NAME.
           MOVE SCR-NLIB TO FRM-NLIB.
           MOVE LDC-FLD TO FRM-DFLD.
           MOVE FRM-INI TO FRM-CMND.
           PERFORM GNS-PRO-FRM.
       FIN-SCR-INIT.
           EXIT.


       COPY LDCBGMPT.

      *>>>>
      *>>>>
      *<<<< EOF
      *LTM-INI 13.04.1994
       BUS-ENT-ANEX SECTION.
       INI-BUS-ENT-ANEX.
           MOVE ZEROES TO CMA-NUM-ARC IN CMA-VARI.
           MOVE ZEROES TO CMA-NUM-ARG IN CMA-VARI.
           MOVE SPACES TO CMA-IND-IOPC IN CMA-VARI.
           MOVE SPACES TO ARC-CAI-IOPC IN CMA-VARI.
           MOVE ZEROES TO ARC-IIC-IOPC IN CMA-VARI.
           MOVE SPACES              TO WSS-IFIN.
           MOVE LDC-CAI-ICLF IN LDC TO CLF-CAI-ICLF IN CLF.
           MOVE LDC-IIC-ICLF IN LDC TO CLF-IIC-ICLF IN CLF.
           MOVE FIO-GET-KEY    TO FIO-CMND.
           PERFORM LDC-FIO-CLF.
           MOVE FIO-STAT TO PGM-STAT-CLF
           IF NOT FIO-STAT-OKS
      *        LDC no tiene CLF asociado
               MOVE 'DEU' TO MSG-COD-SIST
               MOVE 'CLF    NEX' TO MSG-COD-MENS
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS
               MOVE '00' TO FIO-STAT
               MOVE SCR-STAT-CON TO SCR-STAT
               MOVE 'S'          TO WSS-IFIN
               GO TO FIN-BUS-ENT-ANEX.

      *    >>>>  

           MOVE 'RDC-KEY-ICLF' TO FIO-AKEY.
           MOVE CLF-CAI-ICLF   TO RDC-CAI-ICLF.
           MOVE CLF-IIC-ICLF   TO RDC-IIC-ICLF.
           MOVE FIO-GET-NLS    TO FIO-CMND.
           PERFORM LDC-FIO-RDC.
           IF (NOT FIO-STAT-OKS) OR
              (RDC-CIC-ICLF IN RDC NOT = CLF-CIC-ICLF IN CLF)  
      *        CLF no tiene RDC asociado
               MOVE 'DEU'         TO MSG-COD-SIST
               MOVE 'RDC    NEX'  TO MSG-COD-MENS
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC  TO FRM-MENS
               MOVE '00'          TO FIO-STAT
               MOVE SCR-STAT-CON  TO SCR-STAT
               MOVE 'S'           TO WSS-IFIN
               GO TO FIN-BUS-ENT-ANEX
           ELSE
               MOVE RDC-CIC-ICLI   TO WSS-CIC-ICLI IN WSS-VARI
               MOVE 'RDC-KEY-ICLF' TO FIO-AKEY
               MOVE FIO-GET-NXT    TO FIO-CMND
               PERFORM LDC-FIO-RDC
               IF FIO-STAT-OKS AND
                  RDC-CIC-ICLF IN RDC = CLF-CIC-ICLF IN CLF
                   MOVE 'MULTIPLES CLIENTES' TO DBC-GLS-NOMC IN DBC
                   MOVE ZEROES               TO DBC-NUM-ICLI IN DBC
                   MOVE SPACES               TO DBC-VRF-ICLI IN DBC
                                                DBC-IND-ICLI IN DBC
      *FLB CST  11-MAY-1994 
                   MOVE IDC-INIC-GLS         TO DBC-GLS-ICLI IN DBC
                   MOVE PGM-SOKS             TO PGM-STAT-DBC
               ELSE
                   MOVE WSS-CIC-ICLI IN WSS-VARI
                                     TO DBC-CIC-ICLI IN DBC
                   MOVE FIO-GET-KEY  TO FIO-CMND
                   PERFORM SGC-FIO-DBC
                   MOVE FIO-STAT     TO PGM-STAT-DBC       
                   IF NOT FIO-STAT-OKS
      *                RDC no tiene DBC asociado
                       MOVE 'DEU'         TO MSG-COD-SIST
                       MOVE 'DBC    NEX'  TO MSG-COD-MENS
                       PERFORM GET-MSG
                       MOVE MSG-GLS-DESC  TO FRM-MENS
                       MOVE '00'          TO FIO-STAT
                       MOVE SCR-STAT-CON  TO SCR-STAT
                       MOVE 'S'           TO WSS-IFIN
                       GO TO FIN-BUS-ENT-ANEX
                   ELSE
                       MOVE DBC-GLS-NOMC IN DBC  TO CPT-STRN
                       PERFORM CPT-BLKS
                       MOVE CPT-STRN TO DBC-GLS-NOMC IN DBC.      
              
      *    <<<<                  

           IF SCR-CCPP = 'ACC' AND SCR-STAT = SCR-STAT-CON
               PERFORM GET-ARC
               PERFORM GET-ARG
               MOVE PGM-STAT-LDC TO FIO-STAT
               MOVE 'S'          TO WSS-IFIN
               GO TO FIN-BUS-ENT-ANEX.

           IF CLF-MSC-STAT IN CLF = 'C'
      *        LDC eliminada
               MOVE 'DEU'           TO MSG-COD-SIST
               MOVE 'CLF    EXTING' TO MSG-COD-MENS
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS
               MOVE SCR-STAT-CON TO SCR-STAT
               MOVE '00' TO FIO-STAT
               MOVE 'S'          TO WSS-IFIN
               GO TO FIN-BUS-ENT-ANEX.

           IF CLF-MSC-STAT IN CLF = 'R'
      *        CLF fue renovada
               MOVE 'DEU'           TO MSG-COD-SIST
               MOVE 'CLF    MCAYA' TO MSG-COD-MENS
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS
               MOVE SCR-STAT-CON TO SCR-STAT
               MOVE '00' TO FIO-STAT
               MOVE 'S'          TO WSS-IFIN
               GO TO FIN-BUS-ENT-ANEX.

           IF CLF-MSC-STAT IN CLF = 'A' 
      *        LDC activada 
               MOVE 'DEU'          TO MSG-COD-SIST
               MOVE 'CLF    ACAYA' TO MSG-COD-MENS
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS
               MOVE SCR-STAT-CON TO SCR-STAT
               MOVE '00' TO FIO-STAT
               MOVE 'S'          TO WSS-IFIN
               GO TO FIN-BUS-ENT-ANEX.

           MOVE CLF-NUM-DAPE IN CLF TO CLF-NUM-DAPE IN CMA-VARI.
           MOVE CLF-NUM-MAPE IN CLF TO CLF-NUM-MAPE IN CMA-VARI.
           MOVE CLF-NUM-SAPE IN CLF TO CLF-NUM-SAPE IN CMA-VARI.
           MOVE CLF-NUM-AAPE IN CLF TO CLF-NUM-AAPE IN CMA-VARI.
           MOVE CLF-NUM-DVEN IN CLF TO CLF-NUM-DVEN IN CMA-VARI.
           MOVE CLF-NUM-MVEN IN CLF TO CLF-NUM-MVEN IN CMA-VARI.
           MOVE CLF-NUM-SVEN IN CLF TO CLF-NUM-SVEN IN CMA-VARI.
           MOVE CLF-NUM-AVEN IN CLF TO CLF-NUM-AVEN IN CMA-VARI.
           MOVE CLF-NUM-PVIG IN CLF TO CLF-NUM-PVIG IN CMA-VARI.
           MOVE CLF-IND-PVIG IN CLF TO CLF-IND-PVIG IN CMA-VARI.
           MOVE CLF-VAL-CMAX IN CLF TO CLF-VAL-CMAX IN CMA-VARI.

           IF SCR-CCPP = 'ING' 
               PERFORM PUT-CLF-LDC
               PERFORM PUT-DBC-LDC
               MOVE PGM-STAT-LDC TO FIO-STAT 
               MOVE 'S'          TO WSS-IFIN
               GO TO FIN-BUS-ENT-ANEX.

           PERFORM GET-ARC.
           PERFORM GET-ARG.
       FIN-BUS-ENT-ANEX.
           EXIT.
      *LTM-FIN 13.04.1994
      *>>>>
