       IDENTIFICATION DIVISION.
      *========================
       PROGRAM-ID.   SGCPUCFP.
       AUTHOR.       CONSIST.
       DATE-WRITTEN. 08-May-19 11:37 AM.

      * NOMBRE PROGRAMA                   SGCPUCFP
      * VERSION PGM                       3.1
      * VERSION SKL                       08.07.21
      * OPCION                            UPD
      * ARCHIVO BASE                      SGCADP
      * PANTALLA                          SGCCFP
      * INP/OUT                           DATACOM
      * TAMANO COMMAREA                   250


       ENVIRONMENT DIVISION.
      *=====================
       CONFIGURATION SECTION.
      *----------------------
       SPECIAL-NAMES.
               DECIMAL-POINT IS COMMA.

       DATA DIVISION.
      *==============

       WORKING-STORAGE SECTION.
      *------------------------
      * COPY GNSWGSCR.
       COPY GNSWGCVT.
       77  WSS-TAG-SGCPUCFP-INI PIC X(125) VALUE                        
           '<IDNPGM NOM=$SGCPUCFP$ SKL=$08.07.21$ VSN=${vsnpu}$        
      -    'GEN=$08-May-19 11:37 AM$ FNC=${fncpu}$/>'.    
       COPY GNSWCSCR.
       COPY GNSWVSCR.
      *<<<< FIN_SCR_VARI
       COPY SGCWGE2S.
      *>>>>
       COPY SGCWICFP.
       COPY SGCBRADP.


       COPY GNSWVIDD.
       COPY GNSWGRQA.
       COPY GNSWGUIB.
       COPY GNSWGELS.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-ADP-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-TAB-REQA==.
       COPY GNSBRTAB.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-MSC-REQA==.
       COPY GNSBRMSC.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-MSG-REQA==.
       COPY GNSBRMSG.
       COPY GNSWCFIO.
       COPY GNSWVFIO.
       COPY GNSWGFRM.
       COPY GNSWVNUM.
       COPY GNSWCNUM.
       COPY GNSWGFEC.
       COPY GNSWGHOY.
       COPY GNSWCVRF.
       COPY GNSWVVRF.
       COPY GNSWGIDC.
       COPY GNSWGSYS.

      *<<<< WSS
       COPY SGCWGE2W.
       01  WSS-ENG.
           03  WSS-IND-ENG                        PIC X(03).
           03  WSS-IND-IVEC                       PIC X(01).
           03  WSS-NUM-IVEC                       PIC 9(03).
           03  WSS-ENG-APO                        PIC X(01).
       COPY GNSWGQUE.
       COPY GNSBRRCE.
       COPY SGCBREDS.
       COPY SGCBRREC.
       COPY SGCBRADP REPLACING ==  ADP== BY ==  WSS-ADP==.
       COPY SGCBRCCM REPLACING ==  CCM== BY ==  WSS-CCM==.
       COPY GNSWGSTR.
       COPY GNSWGCPT.
       COPY SGCBRDBC.
       COPY SGCBRCCM.
       COPY SGCBREDP.
       01  WSS-VARI.
           03  WSS-COD-IPOD.
               05  WSS-GLS-IPO1                           PIC X(01).
               05  WSS-GLS-IPO2                           PIC X(02).
           03  WSS-GLS-IENT.
               05  WSS-CAI-IMDT                           PIC X(04).
               05  WSS-IIC-IMDT                           PIC X(08).
               05  WSS-NUM-IEDP                           PIC 9(03).
               05  WSS-IND-PODE                           PIC X(03).
               05  WSS-FIL-IENT                           PIC X(12).
           03 WSS-IADP                      VALUE 0 PIC 9(01).
              88 WSS-EXISTE-PODER           VALUE 1.
           03 WSS-ICCM                      VALUE 0 PIC 9(01).
              88 WSS-EXISTE-CONDICION       VALUE 1.
           03 WSS-EXST-YES                  VALUE 1 PIC 9(01).
           03 WSS-EXST-NOT                  VALUE 0 PIC 9(01).
           03 WSS-COD-CREC.
              05 WSS-COD-TREC                           PIC X(02).
              05 WSS-COD-AREC                           PIC X(10).
      *>>>>
      *<<<< WSS_DTC
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-DBC-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-CCM-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-EDP-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-RCE-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-EDS-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-REC-REQA==.
      *>>>>
       01  PGM-VARI.
           03 PGM-ICLR                  VALUE ' '       PIC X(01).
           03 PGM-LIMPIAR-TODO          VALUE ' '       PIC X(01).
           03 PGM-LIMPIAR-LLAVES        VALUE 'K'       PIC X(01).
           03 PGM-LIMPIAR-CAMPOS        VALUE 'F'       PIC X(01).
           03 PGM-NO-LIMPIAR-NADA       VALUE 'N'       PIC X(01).
           03 PGM-PROG                                  PIC X(08).
           03 PGM-NTRN                                  PIC X(04).
           03 PGM-STAT.
              05 PGM-STAT-ADP.
                 88 PGM-STAT-ADP-NUL    VALUE '  '.
                 07 PGM-STT1-ADP        VALUE '2' PIC X(01).
                    88 PGM-STAT-ADP-OKS VALUE '0'.
                 07 PGM-STT2-ADP        VALUE '3' PIC X(01).
              05 PGM-STAT-DBC.
                 88 PGM-STAT-DBC-NUL    VALUE '  '.
                 07 PGM-STT1-DBC        VALUE '2' PIC X(01).
                    88 PGM-STAT-DBC-OKS VALUE '0'.
                 07 PGM-STT2-DBC        VALUE '3' PIC X(01).
              05 PGM-STAT-EDP.
                 88 PGM-STAT-EDP-NUL    VALUE '  '.
                 07 PGM-STT1-EDP        VALUE '2' PIC X(01).
                    88 PGM-STAT-EDP-OKS VALUE '0'.
                 07 PGM-STT2-EDP        VALUE '3' PIC X(01).
              05 PGM-STAT-CCM.
                 88 PGM-STAT-CCM-NUL    VALUE '  '.
                 07 PGM-STT1-CCM        VALUE '2' PIC X(01).
                    88 PGM-STAT-CCM-OKS VALUE '0'.
                 07 PGM-STT2-CCM        VALUE '3' PIC X(01).
           03 PGM-SRNF                  VALUE '23'      PIC X(02).
           03 PGM-SOKS                  VALUE '00'      PIC X(02).
           03 PGM-SNUL                  VALUE '  '      PIC X(02).
           03 PGM-SUAR                  VALUE SPACES    PIC X(15).

       LINKAGE SECTION.
      *----------------
       01  DFHCOMMAREA.
      *<<<< CMA
           02 FILLER                      PIC X(2250).
      *>>>>
       COPY GNSLGFIO.

       PROCEDURE DIVISION.
      *===================

       MAIN SECTION.
       INI-MAIN.
           PERFORM INI.
       LUP-MAIN.
           IF SCR-INST = SCR-INST-HCM
                 PERFORM SCR-COM.
           IF SCR-CCPP = 'MOD'
                 PERFORM SCR-MOD
           ELSE
           IF SCR-CCPP = 'ING'
                 PERFORM SCR-ING
           ELSE
           IF SCR-CCPP = 'ACC'
                 PERFORM SCR-ACC
           ELSE
           IF SCR-CCPP = 'ELI'
                 PERFORM SCR-ELI
           ELSE
           IF SCR-CCPP = 'ACT'
                 PERFORM SCR-ACT
           ELSE
           IF SCR-CCPP = 'PGM'
                 PERFORM SCR-PGM
           ELSE
                 MOVE SCR-INST-HCM TO SCR-INST.
           GO TO LUP-MAIN.
       FIN-MAIN.
           EXIT.

       INI SECTION.
       INI-INI.
       COPY GNSBGEIB.
       COPY GNSBGEDB.
           MOVE LOW-VALUES TO CFP-FLD.
           MOVE LOW-VALUES TO CFP-EDT.
           PERFORM GNS-PRO-RCK.
           PERFORM GNS-BUS-VCA.
           PERFORM GNS-HDL-SYS.
           PERFORM GNS-HDL-FRM.
           MOVE 'SGCPUCFP' TO FIO-PROG.
           PERFORM GNS-BUS-IDD.
      *<<<< INI_FIO
           MOVE LOW-VALUES   TO CFP-FLD.
           MOVE LOW-VALUES   TO CFP-EDT.
           MOVE +2250 TO SCR-TCMA.
           IF SCR-DESDE-CMN
               MOVE SPACES TO SCR-VEC-ENG
               MOVE 1 TO SCR-IPRO
               GO TO FIN-INI-FIO.
           IF SCR-INST-EXT = WSS-INST-FPEN-CIC
               IF SCR-COD-AUX2 = 'F10'
                   MOVE SPACES TO SCR-COD-AUX2
                   PERFORM SET-IGRP.
           IF SCR-INST-EXT = WSS-INST-FPEN-CIC
               MOVE WSS-INST-NULL TO SCR-INST-EXT
               MOVE 'FST'         TO SCR-COD-AUX1
               MOVE ZEROES        TO SCR-NUM-ICMP
               PERFORM ING-FPEN-CIC.
       FIN-INI-FIO.
      *>>>>
       FIN-INI.
           EXIT.

       COPY GNSBHSYS.
       COPY GNSBHFRM.
       COPY GNSBPRCK.
       COPY GNSBBVCA.
       COPY GNSBBIDD.

       SCR-COM SECTION.
       INI-SCR-COM.
           PERFORM STP-EXIT.
           MOVE FRM-CPSF-AEY TO FRM-CPIM-AEY.
           PERFORM PRO-ALL.
           PERFORM SCR-CLRA-CFP.
           PERFORM EDT-KEY-CFP.
           PERFORM EDT-FLD-CFP.
           PERFORM SCR-PUTA.
           MOVE SCR-INST-HCM TO SCR-INST.
           MOVE SCR-CMNP     TO SYS-PROG.
           MOVE SCR-VARI     TO SYS-CMMA.
           MOVE SCR-TCMA     TO SYS-TCMA.
           MOVE SYS-XCTL     TO SYS-CMND.
           PERFORM GNS-PRO-SYS.
       XCT-ERR.
           MOVE 'XCTERR    ' TO MSG-COD-MENS.
           MOVE 'GNS'        TO MSG-COD-SIST.
           PERFORM GET-MSG.
           MOVE MSG-GLS-DESC TO SYS-MEN1.
           MOVE SYS-PROG     TO SYS-MEN2.
           MOVE SYS-ABOR     TO SYS-CMND.
           PERFORM GNS-PRO-SYS.
       COPY GNSBGGBK.
       FIN-SCR-COM.
           EXIT.

       SCR-MOD SECTION.
       INI-SCR-MOD.
           IF SCR-INST = SCR-INST-HKY
               PERFORM HBL-KEY
               MOVE SCR-INST-GKY TO SCR-INST
               PERFORM SCR-DMSG
           ELSE
           IF SCR-INST = SCR-INST-GFL
               PERFORM GET-FLD
           ELSE
           IF SCR-INST = SCR-INST-GCS
               PERFORM GET-ACC.
           PERFORM DESSCRTRL.
           IF FRM-FFLD = FRM-FFLD-PF7 OR FRM-FFLD-PF8
               PERFORM XCT-PRGP.
           IF NOT ( FRM-FFLD = FRM-FFLD-PF5 OR FRM-FFLD-PF6 )
               GO TO MSG-SCR-MOD.
       MSG-SCR-MOD.
           IF SCR-STAT = SCR-STAT-CON
               MOVE SPACES TO FRM-MENS
           ELSE
           IF SCR-STAT = SCR-STAT-ABT OR SCR-VFLD = SCR-VFLD-NOT
               MOVE 'MODNOT    ' TO MSG-COD-MENS
               MOVE 'GNS' TO MSG-COD-SIST
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS
           ELSE
               MOVE SPACES TO FRM-MENS
               PERFORM CMN-MOD
               IF FIO-STAT-OKS
                   IF FRM-MEN1 NOT > SPACES
                       MOVE 'MODYES    ' TO MSG-COD-MENS
                       MOVE 'GNS' TO MSG-COD-SIST
                       PERFORM GET-MSG
                       MOVE MSG-GLS-DESC TO FRM-MEN1
                   ELSE
                       NEXT SENTENCE
               ELSE
               IF FRM-MENS NOT > SPACES
                   MOVE 'FIOSTAT' TO MSG-COD-TMSG
                   MOVE FIO-STAT  TO MSG-COD-CMSG
                   MOVE 'GNS'     TO MSG-COD-SIST
                   PERFORM GET-MSG
                   MOVE MSG-GLS-DESC TO FRM-MENS.
           PERFORM SCR-MSSG.
       FIN-SCR-MOD.
           EXIT.

       SCR-ING SECTION.
       INI-SCR-ING.
           IF SCR-INST = SCR-INST-HKY
               PERFORM HBL-IKY
               MOVE SCR-INST-GKY TO SCR-INST
               PERFORM SCR-DMSG
           ELSE
           IF SCR-INST = SCR-INST-GFL
                PERFORM GET-FLD
           ELSE
           IF SCR-INST = SCR-INST-GCS
                PERFORM GET-ACC.
           PERFORM DESSCRTRL.
       MSG-SCR-ING.
           IF SCR-STAT = SCR-STAT-CON
               MOVE SPACES TO FRM-MENS
           ELSE
           IF SCR-STAT = SCR-STAT-ABT OR SCR-VFLD = SCR-VFLD-NOT
               MOVE 'INGNOT    ' TO MSG-COD-MENS
               MOVE 'GNS' TO MSG-COD-SIST
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS
           ELSE
               MOVE SPACES TO FRM-MENS
               PERFORM CMN-ING
               IF FIO-STAT-OKS
                   IF FRM-MEN1 NOT > SPACES
                       MOVE 'INGYES    ' TO MSG-COD-MENS
                       MOVE 'GNS' TO MSG-COD-SIST
                       PERFORM GET-MSG
                       MOVE MSG-GLS-DESC TO FRM-MEN1
                   ELSE
                       NEXT SENTENCE
               ELSE
               IF FRM-MENS NOT > SPACES
                   MOVE 'FIOSTAT' TO MSG-COD-TMSG
                   MOVE FIO-STAT  TO MSG-COD-CMSG
                   MOVE 'GNS'     TO MSG-COD-SIST
                   PERFORM GET-MSG
                   MOVE MSG-GLS-DESC TO FRM-MENS.
           PERFORM SCR-MSSG.
       FIN-SCR-ING.
           EXIT.

       SCR-ACC SECTION.
       INI-SCR-ACC.
           IF SCR-INST = SCR-INST-HKY
               PERFORM HBL-KEY
               MOVE SCR-INST-GKY TO SCR-INST
               PERFORM SCR-DMSG
           ELSE
           IF SCR-INST = SCR-INST-GFL
                PERFORM GET-FLD
           ELSE
           IF SCR-INST = SCR-INST-GCS
                PERFORM GET-ACC.
           PERFORM DESSCRTRL.
           IF FRM-FFLD = FRM-FFLD-PF7 OR FRM-FFLD-PF8 OR
                         FRM-FFLD-PF5 OR FRM-FFLD-PF6
               PERFORM XCT-PRGP.
           MOVE SPACES TO FRM-MENS.
           IF SCR-STAT NOT = SCR-STAT-CON
               PERFORM CMN-ACC.
           PERFORM SCR-MSSG.
       FIN-SCR-ACC.
           EXIT.

       SCR-ELI SECTION.
       INI-SCR-ELI.
           IF SCR-INST = SCR-INST-HKY
               PERFORM HBL-KEY
               MOVE SCR-INST-GKY TO SCR-INST
               PERFORM SCR-DMSG
           ELSE
           IF SCR-INST = SCR-INST-GCS
                PERFORM GET-ACC.
           PERFORM DESSCRTRL.
           IF FRM-FFLD = FRM-FFLD-PF7 OR FRM-FFLD-PF8 OR
                         FRM-FFLD-PF5 OR FRM-FFLD-PF6
               PERFORM XCT-PRGP.
           IF SCR-STAT = SCR-STAT-CON
               MOVE SPACES TO FRM-MENS
           ELSE
           IF SCR-STAT = SCR-STAT-ABT OR SCR-VFLD = SCR-VFLD-NOT
               MOVE 'ELINOT    ' TO MSG-COD-MENS
               MOVE 'GNS' TO MSG-COD-SIST
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS
           ELSE
               MOVE SPACES TO FRM-MENS
               PERFORM CMN-ELI
               IF FIO-STAT-OKS
                   IF FRM-MEN1 NOT > SPACES
                       MOVE 'ELIYES    ' TO MSG-COD-MENS
                       MOVE 'GNS' TO MSG-COD-SIST
                       PERFORM GET-MSG
                       MOVE MSG-GLS-DESC TO FRM-MEN1
                   ELSE
                       NEXT SENTENCE
               ELSE
               IF FRM-MENS NOT > SPACES
                   MOVE 'FIOSTAT' TO MSG-COD-TMSG
                   MOVE FIO-STAT  TO MSG-COD-CMSG
                   MOVE 'GNS'     TO MSG-COD-SIST
                   PERFORM GET-MSG
                   MOVE MSG-GLS-DESC TO FRM-MENS.
           PERFORM SCR-MSSG.
       FIN-SCR-ELI.
           EXIT.

       SCR-ACT SECTION.
       INI-SCR-ACT.
           IF SCR-INST = SCR-INST-HKY
               PERFORM HBL-KEY
               MOVE SCR-INST-GKY TO SCR-INST
               PERFORM SCR-DMSG
           ELSE
           IF SCR-INST = SCR-INST-GFL
                PERFORM GET-FLD
           ELSE
           IF SCR-INST = SCR-INST-GCS
                PERFORM GET-ACC.
           PERFORM DESSCRTRL.
           IF ( FRM-FFLD = FRM-FFLD-PF7 OR FRM-FFLD-PF8  OR
                           FRM-FFLD-PF5 OR FRM-FFLD-PF6 ) AND
              SCR-ACTU = SCR-ACTU-MOD
               PERFORM XCT-PRGP.
           IF SCR-ACTU = SCR-ACTU-MOD
                  PERFORM MSG-SCR-MOD
           ELSE
                  PERFORM MSG-SCR-ING.
       FIN-SCR-ACT.
           EXIT.

       SCR-PGM SECTION.
       INI-SCR-PGM.
           IF SCR-INST = SCR-INST-HKY
               PERFORM HBL-KEY
               MOVE SCR-INST-GKY TO SCR-INST
               PERFORM SCR-DMSG
           ELSE
           IF SCR-INST = SCR-INST-GFL
                PERFORM GET-FLD
           ELSE
           IF SCR-INST = SCR-INST-GCS
                PERFORM GET-ACC.
       TRL-SCR-PGM.
           PERFORM DESSCRTRL.
           IF FRM-FFLD = FRM-FFLD-PF7 OR FRM-FFLD-PF8 OR
                         FRM-FFLD-PF5 OR FRM-FFLD-PF6
               PERFORM XCT-PRGP.
           MOVE SPACES TO FRM-MENS.
           IF SCR-STAT NOT = SCR-STAT-CON
               PERFORM CMN-PGM.
           PERFORM SCR-MSSG.
       FIN-SCR-PGM.
           EXIT.

       SCR-DMSG SECTION.
       INI-SCR-DMSG.
           IF PGM-ICLR = PGM-NO-LIMPIAR-NADA
               NEXT SENTENCE
           ELSE
           IF PGM-ICLR = PGM-LIMPIAR-TODO
               PERFORM SCR-CLRA-CFP
               PERFORM EDT-KEY-CFP
               PERFORM EDT-FLD-CFP
           ELSE
           IF PGM-ICLR = PGM-LIMPIAR-LLAVES
               PERFORM CLR-KEY-CFP
               PERFORM EDT-KEY-CFP
           ELSE
               PERFORM CLR-FLD-CFP
               PERFORM EDT-FLD-CFP.
           PERFORM STP-EXIT.
           PERFORM SCR-PUTA.
           PERFORM SCR-EXIT.
       FIN-SCR-DMSG.
           EXIT.

       XCT-PRGP SECTION.
       INI-XCT-PRGP.
           MOVE SCR-INST-BRW TO SCR-INST.
           PERFORM STP-EXIT.
           MOVE FRM-FFLD   TO SCR-FFLD.
      *
           MOVE SCR-PROG     TO SYS-PROG.
           MOVE SCR-VARI     TO SYS-CMMA.
           MOVE SCR-TCMA     TO SYS-TCMA.
           MOVE SYS-XCTL     TO SYS-CMND.
           PERFORM GNS-PRO-SYS.
           PERFORM XCT-ERR.
       FIN-XCT-PRGP.
           EXIT.

       SCR-RST SECTION.
       INI-SCR-RST.
           MOVE SPACES       TO PGM-ICLR.
           MOVE SPACES       TO SCR-ACTU.
           MOVE SCR-STPP     TO SCR-STAT.
           MOVE SCR-MFLD-NOT TO SCR-MFLD.
           MOVE LOW-VALUES   TO CFP-FLD.
           MOVE LOW-VALUES TO CFP-EDT.
       FIN-SCR-RST.
           EXIT.

       GET-FLD SECTION.
       INI-GET-FLD.
           PERFORM SCR-GFLD.
           IF FRM-STAT-ABT
               MOVE SCR-STAT-ABT TO SCR-STAT.
       FIN-GET-FLD.
           EXIT.

       CMN-MOD SECTION.
       INI-CMN-MOD.
           PERFORM KEY-ALL-CFP.
           MOVE FIO-GET-KEY-UPD TO FIO-CMND.
           PERFORM SGC-FIO-ADP.
           IF NOT FIO-STAT-OKS
               GO TO FIN-CMN-MOD.
           PERFORM RET-ALL-CFP.
      *<<<< CMN_ING OR CMN_MOD
           PERFORM GET-FHOY.
           MOVE HOY-STP-ITRN IN HOY-VARI TO ADP-STP-ITRN IN ADP.
      *>>>>
           MOVE FIO-MOD TO FIO-CMND.
           PERFORM SGC-FIO-ADP.
      *<<<< FIN_CMN_MOD
           IF NOT FIO-STAT-OKS
               MOVE FIO-MENS TO FRM-MENS
               GO TO FIN-CMN-MOD.
           IF NOT ( CCM-NUM-ICCM IN CFP-FLD > ZEROES AND
                  ( CCM-FEC-FINI IN CFP-FLD > ZEROES OR
                    CCM-FEC-FTER IN CFP-FLD > ZEROES OR
                    CCM-COD-REGI IN CFP-FLD > SPACES OR
                    CCM-COD-VCML IN CFP-FLD > SPACES OR
                    CCM-COD-COMU IN CFP-FLD > SPACES OR
                    CCM-VAL-LIMI IN CFP-FLD > ZEROES OR
                    CCM-CIC-IOPE IN CFP-FLD > SPACES ) )
               GO TO FIN-CMN-MOD.
           MOVE FIO-GET-KEY-UPD TO FIO-CMND.
           PERFORM SGC-FIO-CCM.
           IF FIO-STAT-OKS
               PERFORM RET-CCM-CFP
               MOVE ADP-STP-ITRN IN ADP TO CCM-STP-ITRN IN CCM
               MOVE FIO-MOD TO FIO-CMND
               PERFORM SGC-FIO-CCM
               IF NOT FIO-STAT-OKS
                   MOVE FIO-MENS TO FRM-MENS
                   MOVE FIO-BCK-OUT TO FIO-CMND
                   PERFORM SGC-FIO-CCM
               ELSE
                   NEXT SENTENCE
           ELSE
               PERFORM RET-CCM-CFP
               MOVE ADP-STP-ITRN IN ADP TO CCM-STP-ITRN IN CCM
               MOVE FIO-PUT TO FIO-CMND
               PERFORM SGC-FIO-CCM
               IF NOT FIO-STAT-OKS
                   MOVE FIO-MENS TO FRM-MENS
                   MOVE FIO-BCK-OUT TO FIO-CMND
                   PERFORM SGC-FIO-CCM.
      *>>>>
       FIN-CMN-MOD.
           EXIT.

       CMN-ING SECTION.
       INI-CMN-ING.
           MOVE SPACES TO ADP.
      *<<<< INI_CMN_ING
           MOVE SPACES TO ADP.
           MOVE ZEROES TO ADP-NUM-ICMP IN ADP.
      *>>>>
           PERFORM RET-ALL-CFP.
      *<<<< CMN_ING OR CMN_MOD
           PERFORM GET-FHOY.
           MOVE HOY-STP-ITRN IN HOY-VARI TO ADP-STP-ITRN IN ADP.
      *>>>>
           MOVE FIO-PUT TO FIO-CMND.
           PERFORM SGC-FIO-ADP.
      *<<<< FIN_CMN_ING
           IF NOT FIO-STAT-OKS
               MOVE FIO-MENS TO FRM-MENS
               GO TO FIN-CMN-ING.
           IF CCM-NUM-ICCM IN CFP-FLD > ZEROES AND
              ( CCM-FEC-FINI IN CFP-FLD > ZEROES OR
                CCM-FEC-FTER IN CFP-FLD > ZEROES OR
                CCM-COD-REGI IN CFP-FLD > SPACES OR
                CCM-COD-VCML IN CFP-FLD > SPACES OR
                CCM-COD-COMU IN CFP-FLD > SPACES OR
                CCM-VAL-LIMI IN CFP-FLD > ZEROES OR
                CCM-CIC-IOPE IN CFP-FLD > SPACES )
               MOVE ADP-STP-ITRN IN ADP TO CCM-STP-ITRN IN CCM
               MOVE FIO-PUT TO FIO-CMND
               PERFORM SGC-FIO-CCM
               IF NOT FIO-STAT-OKS
                   MOVE FIO-MENS TO FRM-MENS
                   MOVE FIO-BCK-OUT TO FIO-CMND
                   PERFORM SGC-FIO-CCM.
      *>>>>
      *<<<< FIN_CMN_ING
           PERFORM GET-FEC-CMT.
           PERFORM SET-QUE.
           MOVE QUE-MOD      TO QUE-CMND.
           PERFORM GNS-PRO-QUE.
           IF QUE-STAT NOT = QUE-STAT-OKS
                 PERFORM SET-QUE
                 MOVE QUE-PUT TO QUE-CMND
                 PERFORM GNS-PRO-QUE.
      *>>>>
      *<<<< FIN_CMN_ING
      * DESPUES DEL CODIGO DE PROGRAMACION NO ENGANCHE
           PERFORM HBL-IKY.
      *>>>>
       FIN-CMN-ING.
           EXIT.

       CMN-ACC SECTION.
       INI-CMN-ACC.
           IF SCR-STAT = SCR-STAT-ABT OR SCR-VFLD = SCR-VFLD-NOT
               MOVE 'ACCION NO REALIZADA' TO FRM-MENS
               GO TO FIN-CMN-ACC.
           PERFORM KEY-ALL-CFP.
           MOVE FIO-GET-KEY-UPD TO FIO-CMND.
           PERFORM SGC-FIO-ADP.
           IF NOT FIO-STAT-OKS
               GO TO FIN-CMN-ACC.
           PERFORM RET-ALL-CFP.
       FIN-CMN-ACC.
           EXIT.

       CMN-ELI SECTION.
       INI-CMN-ELI.
      *<<<< INI_CMN_ELI
           IF CCM-NUM-ICCM IN CFP-FLD > ZEROES
               PERFORM KEY-ALL-CFP
               MOVE FIO-GET-KEY-UPD TO FIO-CMND
               PERFORM SGC-FIO-CCM
               IF NOT FIO-STAT-OKS
                   MOVE FIO-MENS TO FRM-MENS
                   GO TO FIN-CMN-ELI
               ELSE
                   MOVE FIO-DEL TO FIO-CMND
                   PERFORM SGC-FIO-CCM
                   IF NOT FIO-STAT-OKS
                       MOVE FIO-MENS TO FRM-MENS
                       GO TO FIN-CMN-ELI
                   ELSE
                       MOVE 'SGC'          TO MSG-COD-SIST
                       MOVE 'CCM    ELISI' TO MSG-COD-MENS
                       PERFORM GET-MSG
                       MOVE MSG-GLS-DESC TO FRM-MENS
                       GO TO FIN-CMN-ELI.
      *>>>>
           PERFORM KEY-ALL-CFP.
           MOVE FIO-GET-KEY-UPD TO FIO-CMND.
           PERFORM SGC-FIO-ADP.
           IF NOT FIO-STAT-OKS
               GO TO FIN-CMN-ELI.
           MOVE FIO-DEL TO FIO-CMND.
           PERFORM SGC-FIO-ADP.
      *<<<< FIN_CMN_ELI
           IF NOT FIO-STAT-OKS
               MOVE FIO-MENS TO FRM-MENS
               GO TO FIN-CMN-ELI.
           MOVE 'SGC'          TO MSG-COD-SIST.
           MOVE 'ADP    ELISI' TO MSG-COD-MENS.
           PERFORM GET-MSG.
           MOVE MSG-GLS-DESC TO FRM-MENS.
      *>>>>
       FIN-CMN-ELI.
           EXIT.

       CMN-PGM SECTION.
       INI-CMN-PGM.
           PERFORM RET-ALL-CFP.
       FIN-CMN-PGM.
           EXIT.

       STP-EXIT SECTION.
       INI-STP-EXIT.
           MOVE SCR-PROG TO PGM-PROG.
           MOVE SCR-NTRN TO PGM-NTRN.

           MOVE SCR-PROV TO SCR-PROG.
           MOVE SCR-NTRV TO SCR-NTRN.

           MOVE PGM-PROG TO SCR-PROV
           MOVE PGM-NTRN TO SCR-NTRV.
       FIN-STP-EXIT.
           EXIT.

       SCR-EXIT SECTION.
       INI-SCR-EXIT.
           MOVE 'P'      TO SCR-ICMN.
           MOVE SCR-NTRN TO SYS-NTRN.
           MOVE SCR-VARI TO SYS-CMMA.
           MOVE SCR-TCMA TO SYS-TCMA.
           MOVE SYS-RTRN TO SYS-CMND.
           PERFORM GNS-PRO-SYS.
       FIN-SCR-EXIT.
           EXIT.

       SCR-PUTA SECTION.
       INI-SCR-PUTA.
           MOVE SCR-NMAP TO FRM-NAME.
           MOVE SCR-NLIB TO FRM-NLIB.
           MOVE CFP-FLD TO FRM-DFLD.
           MOVE FRM-PUT-ALL TO FRM-CMND.
           PERFORM GNS-PRO-FRM.
       FIN-SCR-PUTA.
           EXIT.

       SCR-MSSG SECTION.
       INI-SCR-MSSG.
           IF FRM-MEN1 NOT > SPACES
               MOVE SPACES TO FRM-MEN1.
           IF FRM-MEN2 NOT > SPACES
               MOVE SPACES TO FRM-MEN2.
           MOVE FRM-MENS TO CFP-GLS-MENS.
       FIN-SCR-MSSG.
           EXIT.

       SCR-GFLD SECTION.
       INI-SCR-GFLD.
           MOVE SCR-NMAP TO FRM-NAME.
           MOVE SCR-NLIB TO FRM-NLIB.
           MOVE FRM-GET-ALL TO FRM-CMND.
           PERFORM GNS-PRO-FRM.
           MOVE SPACES TO FRM-MENS.
           IF NOT ( FRM-FFLD = FRM-FFLD-RET  OR FRM-FFLD-PF10 OR
                               FRM-FFLD-PF12 OR FRM-FFLD-PF3 )
               MOVE 'PFSINV    ' TO MSG-COD-MENS
               MOVE 'GNS' TO MSG-COD-SIST
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS
               PERFORM FST-FLD-CFP
               PERFORM SCR-MSSG
               PERFORM SCR-PUTA
               PERFORM SCR-EXIT.
           MOVE FRM-DFLD TO CFP-FLD.
           IF FRM-STAT-ABT
               GO TO FIN-SCR-GFLD.
           MOVE FRM-SUAR-OKS TO FRM-SUAR.
           PERFORM VAL-NUM-KEY-CFP.
           IF FRM-SUAR EQUAL FRM-SUAR-MAL OR FRM-SUAR-CLR
               PERFORM SCR-MSSG
               PERFORM EDT-KEY-CFP
               PERFORM SCR-PUTA
               PERFORM SCR-EXIT.
           PERFORM VAL-NUM-FLD-CFP.
           IF FRM-SUAR EQUAL FRM-SUAR-MAL OR FRM-SUAR-CLR
               PERFORM SCR-MSSG
               PERFORM EDT-KEY-CFP
               PERFORM EDT-FLD-CFP
               PERFORM SCR-PUTA
               PERFORM SCR-EXIT.
      *<<<< SCR_GFLD_VAL_MKY
           IF FRM-FFLD = FRM-FFLD-PF10 AND
              SCR-IND-ENG IN SCR-VEC-ENG(SCR-IPRO) = 'S'
                  MOVE SPACES TO ADP-COD-CLAP IN ADP
                  MOVE SPACES TO SCR-COD-AUX1
                  PERFORM HBL-KEY-CFP.
      *>>>>
           PERFORM VAL-MKY-CFP.
           IF FRM-SUAR EQUAL FRM-SUAR-MAL OR FRM-SUAR-CLR
               GO TO ERR-SCR-GFLD.
           PERFORM VAL-FLD-CFP.
           IF FRM-SUAR EQUAL FRM-SUAR-MAL OR FRM-SUAR-CLR
               GO TO ERR-SCR-GFLD.
           PERFORM VAL-CON-FLD-CFP.
           IF NOT ( FRM-SUAR EQUAL FRM-SUAR-MAL OR FRM-SUAR-CLR )
               GO TO FIN-SCR-GFLD.
           IF FRM-UCUR NOT > SPACES
               PERFORM FST-FLD-CFP.
       ERR-SCR-GFLD.
           PERFORM SCR-MSSG.
           PERFORM EDT-KEY-CFP.
           PERFORM EDT-FLD-CFP.
           PERFORM SCR-PUTA.
           PERFORM SCR-EXIT.
       FIN-SCR-GFLD.
      *<<<< FIN_SCR_GIKY OR PFS_SCR_ING OR FIN_SCR_GFLD
           IF FRM-FFLD = FRM-FFLD-PF3 AND
              SCR-IND-ENG IN SCR-VEC-ENG(SCR-IPRO) = 'S'
               PERFORM EGR-FTER-CIC.
      *>>>>
      *<<<< FIN_SCR_GFLD
           IF FRM-FFLD = FRM-FFLD-PF12
               MOVE 'FST' TO SCR-COD-AUX1.
      *>>>>
           MOVE SCR-STAT-MOD TO SCR-STAT.

       GET-ACC SECTION.
       INI-GET-ACC.
           MOVE SCR-NMAP TO FRM-NAME.
           MOVE SCR-NLIB TO FRM-NLIB.
           MOVE FRM-GET-ALL TO FRM-CMND.
           PERFORM GNS-PRO-FRM.
           IF NOT ( FRM-FFLD = FRM-FFLD-RET  OR FRM-FFLD-PF10 OR
                               FRM-FFLD-PF12 OR FRM-FFLD-PF3 )
               MOVE 'PFSINV    ' TO MSG-COD-MENS
               MOVE 'GNS' TO MSG-COD-SIST
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO CFP-GLS-MEN2
               MOVE SCR-PRMT     TO CFP-GLS-MEN1
               PERFORM FST-MSG
               PERFORM SCR-PUTA
               PERFORM SCR-EXIT.
           MOVE FRM-DFLD TO CFP-FLD.
           IF NOT ( ( FRM-FFLD = FRM-FFLD-PF12 OR FRM-FFLD-PF3 ) OR
                      SCR-CONF > SPACES )
               PERFORM VAL-NUM-KEY-CFP
               PERFORM VAL-NUM-FLD-CFP.
       FIN-GET-ACC.
           MOVE SCR-STAT-SON TO SCR-STAT.

       GET-CON SECTION.
       INI-GET-CON.
           MOVE SCR-NMAP TO FRM-NAME.
           MOVE SCR-NLIB TO FRM-NLIB.
           MOVE FRM-GET-ALL TO FRM-CMND.
           PERFORM GNS-PRO-FRM.
           IF NOT ( FRM-FFLD = FRM-FFLD-RET  OR FRM-FFLD-PF10 OR
                               FRM-FFLD-PF12 OR FRM-FFLD-PF3 )
               MOVE 'PFSINV    ' TO MSG-COD-MENS
               MOVE 'GNS' TO MSG-COD-SIST
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO CFP-GLS-MEN2
               MOVE SCR-PRMT     TO CFP-GLS-MEN1
               PERFORM FST-MSG
               PERFORM SCR-PUTA
               PERFORM SCR-EXIT.
           MOVE FRM-DFLD TO CFP-FLD.
       FIN-GET-CON.
           MOVE SCR-STAT-CON TO SCR-STAT.

       CLR-MSG SECTION.
       INI-CLR-MSG.
           MOVE SPACES TO CFP-GLS-MENS.
       FIN-CLR-MSG.
           EXIT.

       HBL-IKY SECTION.
       INI-HBL-IKY.
           IF SCR-DESDE-CMN
               MOVE CFP-GLS-MENS TO FRM-MENS
               MOVE LOW-VALUES TO CFP-FLD
      * FLB  7-NOV-1994
               PERFORM CLR-KEY-CFP

               IF FRM-MENS < SPACES
                   MOVE LOW-VALUES TO CFP-GLS-MENS
               ELSE
                   MOVE FRM-MENS TO CFP-GLS-MENS.
           PERFORM PRO-FLD-CFP.
           PERFORM PRO-MKY-CFP.
           PERFORM UNP-IKY-CFP.
           PERFORM FST-KEY-CFP.
      *<<<< FIN_HBL_IKY
           IF SCR-IND-ENG IN SCR-VEC-ENG(SCR-IPRO) = 'S'
               PERFORM HBL-KEY-CFP.
      *>>>>
       FIN-HBL-IKY.
           EXIT.

       HBL-KEY SECTION.
       INI-HBL-KEY.
      *<<<<<<INI_HBL_KEY
           IF SCR-DESDE-CMN
               MOVE CFP-GLS-MENS TO FRM-MENS
               MOVE LOW-VALUES TO CFP-FLD
               MOVE FRM-MENS TO CFP-GLS-MENS.
           MOVE FRM-CPSF-AEY TO FRM-CPIM-AEY.
           PERFORM PRO-FLD-CFP.
           PERFORM UNP-KEY-CFP.
           PERFORM FST-KEY-CFP.
           MOVE '1' TO FRM-CPIM-AEY.
           GO TO FIN-HBL-KEY.
      *>>>>>>
           IF SCR-DESDE-CMN
               MOVE CFP-GLS-MENS TO FRM-MENS
               MOVE LOW-VALUES TO CFP-FLD
               IF FRM-MENS < SPACES
                   MOVE LOW-VALUES TO CFP-GLS-MENS
               ELSE
                   MOVE FRM-MENS TO CFP-GLS-MENS.
           MOVE FRM-CPSF-AEY TO FRM-CPIM-AEY.
           PERFORM PRO-FLD-CFP.
           MOVE '1' TO FRM-CPIM-AEY.
           PERFORM UNP-KEY-CFP.
           PERFORM FST-KEY-CFP.
       FIN-HBL-KEY.
           EXIT.

       HBL-FLD SECTION.
       INI-HBL-FLD.
           PERFORM UNP-MKY-CFP.
           PERFORM UNP-FLD-CFP.
           PERFORM FST-FLD-CFP.
      *<<<< FIN_HBL_FLD
           IF CCM-NUM-ICCM-ALF IN CFP-FLD NOT > SPACES OR
              CCM-NUM-ICCM-ALF IN CFP-FLD = ZEROES
               PERFORM PRO-CCM-CFP.
      *>>>>
       FIN-HBL-FLD.
           EXIT.

       FST-MSG SECTION.
       INI-FST-MSG.
           MOVE -1 TO CFP-GLS-MENS-LEN.
       FIN-FST-MSG.
           EXIT.

       PRO-ALL SECTION.
       INI-PRO-ALL.
           PERFORM PRO-KEY-CFP.
           PERFORM PRO-FLD-CFP.
           PERFORM FST-MSG.
       FIN-PRO-ALL.
           EXIT.

       SCR-TRL SECTION.
       INI-SCR-TRL.
           IF FRM-MEN1 NOT > SPACES
               MOVE SCR-PRMT TO FRM-MEN1.
           IF SCR-STAT = SCR-STAT-MOD
               PERFORM HBL-FLD
               PERFORM SCR-MSSG
               PERFORM EDT-KEY-CFP
               PERFORM EDT-FLD-CFP
               PERFORM SCR-PUTA
               MOVE SCR-INST-GFL TO SCR-INST
               PERFORM SCR-EXIT.
           IF SCR-STAT = SCR-STAT-SON
               PERFORM PRO-ALL
               PERFORM SCR-MSSG
               PERFORM EDT-KEY-CFP
               PERFORM EDT-FLD-CFP
               PERFORM SCR-PUTA
               MOVE SCR-INST-GCS TO SCR-INST
               PERFORM SCR-EXIT.
      *ASUME SCR-STAT-CON.
           MOVE SCR-STAT-CON TO SCR-STAT.
      *    MOVE FRM-CPSF-AEY TO FRM-CPIM-AEY.
           PERFORM PRO-ALL.
           PERFORM SCR-MSSG.
           PERFORM EDT-KEY-CFP.
           PERFORM EDT-FLD-CFP.
           PERFORM SCR-PUTA.
           MOVE SCR-INST-GAB TO SCR-INST.
           PERFORM SCR-EXIT.
       FIN-SCR-TRL.
           EXIT.

       DESSCRTRL SECTION.
       INI-DESSCRTRL.
           IF SCR-INST = SCR-INST-GCF
                  PERFORM SCR-GCNF
                  GO TO FIN-DESSCRTRL.
           MOVE SCR-VFLD-NOT TO SCR-VFLD.
           MOVE FRM-FFLD TO SCR-FFLD.
           IF SCR-STAT = SCR-STAT-ABT OR SCR-STAT-CON
                  GO TO FIN-DESSCRTRL.
           IF SCR-FFLD-RET OR SCR-FFLD-PF10
                  MOVE SCR-VFLD-YES TO SCR-VFLD
                  PERFORM PRO-CONF.
       FIN-DESSCRTRL.
           IF SCR-FFLD-PF10 OR SCR-FFLD-PF3
                 MOVE SCR-INST-HCM TO SCR-INST
           ELSE
                 MOVE SCR-INST-HKY TO SCR-INST.
       EXT-DESSCRTRL.
           EXIT.

       PRO-CONF SECTION.
       INI-PRO-CONF.
           IF FRM-MENS NOT > SPACES
               IF SCR-CONF NOT > SPACES
                   GO TO FIN-PRO-CONF
               ELSE
                   MOVE SCR-CONF TO FRM-MENS
           ELSE
               IF FRM-MEN1 NOT > SPACES
                   MOVE SCR-CONF TO FRM-MEN1.
           PERFORM PRO-KEY-CFP.
           PERFORM PRO-FLD-CFP.
           PERFORM FST-MSG.
           PERFORM SCR-MSSG.
           IF SCR-STAT = SCR-STAT-MOD
               PERFORM EDT-KEY-CFP
               PERFORM EDT-FLD-CFP.
           PERFORM SCR-PUTA.
           MOVE SCR-INST-GCF TO SCR-INST.
           PERFORM SCR-EXIT.
       FIN-PRO-CONF.
           EXIT.

       SCR-GCNF SECTION.
       INI-SCR-GCNF.
           MOVE SCR-NMAP TO FRM-NAME.
           MOVE SCR-NLIB TO FRM-NLIB.
           MOVE FRM-GET-ALL TO FRM-CMND.
           PERFORM GNS-PRO-FRM.
           IF NOT ( FRM-FFLD = FRM-FFLD-RET  OR FRM-FFLD-PF10 OR
                               FRM-FFLD-PF12 OR FRM-FFLD-PF3  OR
                               FRM-FFLD-PF4 )
               MOVE 'PFSINV    ' TO MSG-COD-MENS
               MOVE 'GNS' TO MSG-COD-SIST
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO CFP-GLS-MEN2
               MOVE SCR-CONF     TO CFP-GLS-MEN1
               PERFORM FST-MSG
               PERFORM SCR-PUTA
               PERFORM SCR-EXIT.
           MOVE FRM-DFLD TO CFP-FLD.
           MOVE FRM-FFLD TO SCR-FFLD.
           IF FRM-FFLD = FRM-FFLD-PF3
               MOVE SCR-VFLD-NOT TO SCR-VFLD
           ELSE
           IF FRM-FFLD = FRM-FFLD-RET OR FRM-FFLD-PF10 OR FRM-FFLD-PF4
               MOVE SCR-VFLD-YES TO SCR-VFLD
               PERFORM VAL-NUM-KEY-CFP
               PERFORM VAL-NUM-FLD-CFP
           ELSE
           IF FRM-FFLD = FRM-FFLD-PF12
               MOVE SCR-STPP TO SCR-STAT
               IF SCR-STAT = SCR-STAT-MOD
                   PERFORM VAL-NUM-KEY-CFP
                   PERFORM VAL-NUM-FLD-CFP
                   PERFORM SCR-TRL
               ELSE
                   MOVE SCR-VFLD-NOT TO SCR-VFLD.
       FIN-SCR-GCNF.
           EXIT.

      * PGM-EBR-ALL SECTION.
      * INI-PGM-EBR-ALL.
      *     MOVE 'GNS' TO FIO-SIST.
      *     MOVE FIO-EBR-ALL TO FIO-CMND.
      *     PERFORM GNS-FIO-TAB.
      * FIN-PGM-EBR-ALL.
      *     EXIT.


       COPY SGCBUCFP.
       COPY GNSBVNUM.
       COPY SGCBFADP.
       COPY GNSBFMSG.
       COPY GNSBGSYS.
       COPY GNSBGDTC.
       COPY GNSBGFRM.
       COPY GNSBGMSG.
       COPY GNSBEKEY.
       COPY GNSBIABT.
       COPY GNSBBTAB.
       COPY GNSBVCOD.
       COPY GNSBVTAB.
       COPY GNSBFTAB.
       COPY GNSBVIND.
       COPY GNSBVMSC.
       COPY GNSBFMSC.
       COPY GNSBVIDC.
       COPY GNSBPVRF.
       COPY GNSBGFEC.
       COPY GNSBGHOY.

      *<<<< EOF
      *  MANEJO DE COLAS
       SET-QUE SECTION.
       INI-SET-QUE.
           PERFORM ERR-QUE.
           MOVE EIBTRMID TO QUE-TERM.
           COMPUTE QUE-LITM = 7 + 125.
           MOVE 'KEY' TO QUE-TYPE.
           MOVE 'ENT' TO QUE-IKEY.
           MOVE +125  TO QUE-LDAT.
           MOVE +0    TO QUE-PCUR.
           MOVE +1    TO QUE-NITM.

           MOVE 'CFP'                   TO KEY-COD-ENTI.
           MOVE DBC-GLS-NOMC IN CFP-FLD TO KEY-GLS-NOMC.
           MOVE DBC-NUM-ICLI IN CFP-FLD TO KEY-NUM-ICLI.
           MOVE DBC-VRF-ICLI IN CFP-FLD TO KEY-VRF-ICLI.
           MOVE DBC-IND-ICLI IN CFP-FLD TO KEY-IND-ICLI.
           MOVE DBC-GLS-ICLI IN CFP-FLD TO KEY-GLS-ICLI.
           MOVE SPACES                  TO KEY-CAI-IOPE.
           MOVE SPACES                  TO KEY-IIC-IOPE.
           MOVE ZEROES                  TO KEY-FEC-FENT.
           MOVE ADP-NUM-IEDP IN CFP-FLD TO KEY-NUM-IENT.
           MOVE ADP-COD-IPOD IN CFP-FLD TO KEY-COD-IENT.
           MOVE EDP-NUM-DINF IN EDP     TO KEY-NUM-DCMT.
           MOVE EDP-NUM-MINF IN EDP     TO KEY-NUM-MCMT.
           MOVE EDP-NUM-SINF IN EDP     TO KEY-NUM-SCMT.
           MOVE EDP-NUM-AINF IN EDP     TO KEY-NUM-ACMT.
           MOVE ZEROES                  TO KEY-NUM-GCMT.
      *BUS-TAB busca glosa de codigo en tabla
           MOVE EDP-CIC-IMDT IN EDP TO EDS-CIC-ICLI IN EDS.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM SGC-FIO-EDS.
           IF FIO-STAT-OKS
               MOVE 'TAB'               TO TAB-COD-SIST
               MOVE 'ABG'               TO TAB-COD-TTAB IN TAB
               MOVE EDS-COD-ABGI IN EDS TO TAB-COD-CTAB IN TAB
               PERFORM BUS-TAB
               MOVE TAB-GLS-DCOR IN TAB     TO KEY-COD-USER
           ELSE
               MOVE SPACES                  TO KEY-COD-USER.

           MOVE KEY-VARI TO QUE-DATA.
       FIN-SET-QUE.
           EXIT.

       CHK-QUEU SECTION.
       INI-CHK-QUEU.
           MOVE 1       TO QUE-NITM.
           MOVE QUE-GET TO QUE-CMND.
           PERFORM GNS-PRO-QUE.
       FIN-CHK-QUEU.
           EXIT.

       QUE-EOQ SECTION.
       INI-QUE-EOQ.
           MOVE QUE-STAT-EOQ TO QUE-STAT.
           GO TO FIN-GNS-PRO-QUE.
       FIN-QUE-EOQ.
           EXIT.

       QUE-NEX SECTION.
       INI-QUE-NEX.
           MOVE QUE-STAT-NEX TO QUE-STAT.
           GO TO FIN-GNS-PRO-QUE.
       FIN-QUE-NEX.
           EXIT.

      **************************************************************
       ERR-QUE SECTION.
       INI-ERR-QUE.
           EXEC CICS HANDLE CONDITION
                     QIDERR (QUE-NEX)
                     ITEMERR(QUE-EOQ)
           END-EXEC.
       FIN-ERR-QUE.
           EXIT.

       GNS-PRO-QUE SECTION.
       INI-GNS-PRO-QUE.
           IF QUE-CMND = QUE-PUT
               GO TO PUT-QUE
           ELSE
           IF QUE-CMND = QUE-GET
               GO TO GET-QUE
           ELSE
           IF QUE-CMND = QUE-MOD
               GO TO MOD-QUE
           ELSE
           IF QUE-CMND = QUE-DEL
               GO TO DEL-QUE.
           MOVE 'Comando invalido :' TO QUE-MEN1.
           MOVE QUE-CMND             TO QUE-MEN2.
           EXEC CICS XCTL
                     PROGRAM('GNSPPABT')
                     COMMAREA(QUE-MENS)
                     LENGTH(+79)
           END-EXEC.

       PUT-QUE.
           EXEC CICS WRITEQ TS
                     QUEUE(QUE-COLA)
                     FROM(QUE-ITEM)
                     LENGTH(QUE-LITM)
                     AUXILIARY
           END-EXEC.
       FIN-PUT-QUE.
           GO TO FIN-GNS-PRO-QUE.

       GET-QUE.
           EXEC CICS READQ TS
                     QUEUE(QUE-COLA)
                     INTO(QUE-ITEM)
                     LENGTH(QUE-LITM)
                     ITEM(QUE-NITM)
           END-EXEC.
       FIN-GET-QUE.
           GO TO FIN-GNS-PRO-QUE.

       MOD-QUE.
           EXEC CICS WRITEQ TS
                     QUEUE(QUE-COLA)
                     FROM(QUE-ITEM)
                     LENGTH(QUE-LITM)
                     ITEM(QUE-NITM)
                     REWRITE
           END-EXEC.
       FIN-MOD-QUE.
           GO TO FIN-GNS-PRO-QUE.

       DEL-QUE.
           EXEC CICS DELETEQ TS
                     QUEUE(QUE-COLA)
           END-EXEC.
       FIN-DEL-QUE.
           GO TO FIN-GNS-PRO-QUE.

       FIN-GNS-PRO-QUE.
           EXIT.
       BUS-FINF SECTION.
       INI-BUS-FINF.
           IF SCR-IND-ENG IN SCR-VEC-ENG(SCR-IPRO) = 'S'
               MOVE SCR-CAI-ICIC TO EDP-CAI-IMDT IN EDP
               MOVE SCR-IIC-ICIC TO EDP-IIC-IMDT IN EDP
               MOVE SCR-NUM-IEDP TO EDP-NUM-IEDP IN EDP
               IF SCR-IND-ING = 'FAC'
                   MOVE 'F' TO EDP-IND-TINF IN EDP
               ELSE
                   MOVE 'P' TO EDP-IND-TINF IN EDP
           ELSE
               MOVE ADP-NUM-IEDP IN CFP-FLD TO EDP-NUM-IEDP IN EDP
               MOVE ADP-CAI-IMDT IN CFP-FLD TO EDP-CAI-IMDT IN EDP
               MOVE ADP-IIC-IMDT IN CFP-FLD TO EDP-IIC-IMDT IN EDP
               IF SCR-IND-ING = 'FAC'
                   MOVE 'F' TO EDP-IND-TINF IN EDP
               ELSE
                   MOVE 'P' TO EDP-IND-TINF IN EDP.

           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM SGC-FIO-EDP.

      *ISP SE REQUIERE ESCRIBIR ESTE CODIGO, PUES AUN NO ESTA SOLUCIONADO
      *    EL PROBLEMA DE 'F' O 'P'
           IF NOT FIO-STAT-OKS
               IF EDP-IND-TINF IN EDP = 'F'
                   MOVE 'P' TO EDP-IND-TINF IN EDP
                   MOVE FIO-GET-KEY TO FIO-CMND
                   PERFORM SGC-FIO-EDP
               ELSE
                   MOVE 'F' TO EDP-IND-TINF IN EDP
                   MOVE FIO-GET-KEY TO FIO-CMND
                   PERFORM SGC-FIO-EDP.
           MOVE FIO-STAT TO PGM-STAT-EDP.

           IF FIO-STAT-OKS
               MOVE EDP-NUM-SINF IN EDP TO EDP-NUM-SINF IN CFP-FLD
               MOVE EDP-NUM-AINF IN EDP TO EDP-NUM-AINF IN CFP-FLD
               MOVE EDP-NUM-MINF IN EDP TO EDP-NUM-MINF IN CFP-FLD
               MOVE EDP-NUM-DINF IN EDP TO EDP-NUM-DINF IN CFP-FLD.
       FIN-BUS-FINF.
           EXIT.

       GET-FEC-CMT SECTION.
       INI-GET-FEC-CMT.
           MOVE ADP-CAI-IMDT IN CFP-FLD TO EDP-CAI-IMDT IN EDP.
           MOVE ADP-IIC-IMDT IN CFP-FLD TO EDP-IIC-IMDT IN EDP.
           MOVE 'F'                     TO EDP-IND-TINF IN EDP.
           IF SCR-IND-ENG IN SCR-VEC-ENG(SCR-IPRO) = 'S'
               IF SCR-IND-ING = 'FAC'
                   MOVE 'F' TO EDP-IND-TINF IN EDP
               ELSE
                   MOVE 'P' TO EDP-IND-TINF IN EDP.
           MOVE ADP-NUM-IEDP IN CFP-FLD TO EDP-NUM-IEDP IN EDP.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM SGC-FIO-EDP.
       FIN-GET-FEC-CMT.
           EXIT.

       VRF-ENG SECTION.
       INI-VRF-ENG.
           MOVE SPACES TO WSS-IND-ENG.
           MOVE SCR-CAI-ICIC TO EDP-CAI-IMDT IN EDP.
           MOVE SCR-IIC-ICIC TO EDP-IIC-IMDT IN EDP.
           IF SCR-IND-ING = 'FAC'
               MOVE 'F' TO EDP-IND-TINF IN EDP
           ELSE
               MOVE 'P' TO EDP-IND-TINF IN EDP.
           MOVE SCR-NUM-IEDP TO EDP-NUM-IEDP IN EDP.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM SGC-FIO-EDP.
       CIC-VRF-ENG.
           ADD 1 TO SCR-NUM-ICOR.
           IF SCR-NUM-ICOR > 55
               GO TO FIN-VRF-ENG.
           IF EDP-IND-PODE IN EDP(SCR-NUM-ICOR) NOT > SPACES OR
              EDP-IND-PODE IN EDP(SCR-NUM-ICOR) = 'N'
               GO TO CIC-VRF-ENG.

           MOVE 'N' TO WSS-IND-IVEC.
           PERFORM VRF-VEC-EDP VARYING WSS-NUM-IVEC FROM 1 BY  1
                   UNTIL WSS-NUM-IVEC = SCR-NUM-ICOR.
           IF WSS-IND-IVEC = 'S'
               GO TO CIC-VRF-ENG
           ELSE
               MOVE 'SAM' TO WSS-IND-ENG.
       FIN-VRF-ENG.
           EXIT.

       VRF-VEC-EDP SECTION.
       INI-VRF-VEC-EDP.
           IF EDP-IND-PODE IN EDP(SCR-NUM-ICOR) =
              EDP-IND-PODE IN EDP(WSS-NUM-IVEC)
                MOVE 'S' TO WSS-IND-IVEC.
       FIN-VRF-VEC-EDP.
           EXIT.

       HBL-KEY-CFP SECTION.
       INI-HBL-KEY-CFP.
           PERFORM SCR-CLRA-CFP.
           MOVE +8 TO DBC-NUM-ICLI-LEN IN CFP-FLD.
           PERFORM BUS-COR-ICCM.
      *ISP   27-JUL-1990 DEBE SER REEMPLAZADO POR VARIABLE
      *     INHIBE MOVE FRM-CPSF TO FRM-CPIM-AEY
           MOVE '1' TO FRM-CPIM-AEY.
           PERFORM HBL-FLD.
           MOVE SCR-INST-GFL TO SCR-INST.
           MOVE SCR-CAI-ICIC TO ADP-CAI-IMDT IN CFP-FLD.
           MOVE SCR-IIC-ICIC TO ADP-IIC-IMDT IN CFP-FLD.
           MOVE SCR-NUM-IEDP TO ADP-NUM-IEDP IN CFP-FLD.
           MOVE SCR-COD-APOD TO ADP-COD-IPOD IN CFP-FLD.
           MOVE SCR-NUM-IGRP TO ADP-NUM-IGRP IN CFP-FLD.

           PERFORM BUS-FINF.
           MOVE ADP-COD-IPOD IN CFP-FLD TO WSS-COD-IPOD IN WSS-VARI.
           IF WSS-GLS-IPO2 NOT > SPACES
               IF ( WSS-GLS-IPO1 NOT < '0' AND WSS-GLS-IPO1 NOT > '9' )
                  OR
                  ( WSS-GLS-IPO1 NOT < 'A' AND WSS-GLS-IPO1 NOT > 'Z' )
                     MOVE SPACES TO FRM-GLS-IPOD IN CFP-FLD
                     GO TO NO-VAL-ADP-COD-IPOD.
           MOVE 'SGC'                   TO TAB-COD-SIST.
           MOVE 'FAC'                   TO TAB-COD-TTAB IN TAB.
           MOVE ADP-COD-IPOD IN CFP-FLD TO TAB-COD-CTAB IN TAB.
           PERFORM BUS-TAB.
           MOVE TAB-GLS-DESC IN TAB TO FRM-GLS-IPOD IN CFP-FLD.
       NO-VAL-ADP-COD-IPOD.

           IF SCR-COD-AUX1 = 'FST'
               MOVE 'SEC' TO SCR-COD-AUX1
               MOVE 'SGC'        TO MSG-COD-SIST
               MOVE SCR-EXT-MENS TO MSG-COD-MENS
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO CFP-GLS-MENS IN CFP-FLD
           ELSE
                   PERFORM PSB-ENG-APO
                   MOVE SPACES TO SCR-COD-CLAP
                   IF FRM-FFLD = FRM-FFLD-PF10
                       PERFORM VRF-ENG
                       IF WSS-IND-ENG = 'SAM'
                           MOVE EDP-IND-PODE IN EDP(SCR-NUM-ICOR) TO
                             SCR-COD-APOD
                           MOVE EDP-IND-PODE IN EDP(SCR-NUM-ICOR) TO
                             ADP-COD-IPOD IN CFP-FLD
                           PERFORM SET-IGRP
                           MOVE SCR-NUM-IGRP TO ADP-NUM-IGRP IN CFP-FLD
                           MOVE 'SGC'          TO MSG-COD-SIST
                           MOVE 'APO    INGNX' TO MSG-COD-MENS
                           PERFORM GET-MSG
                           MOVE MSG-GLS-DESC TO CFP-GLS-MENS IN CFP-FLD

                       ELSE
                            PERFORM EGR-FTER-CIC
                   ELSE
                       MOVE 'SGC'          TO MSG-COD-SIST
                       MOVE 'CFP    INGNX' TO MSG-COD-MENS
                       PERFORM GET-MSG
                       MOVE MSG-GLS-DESC TO CFP-GLS-MENS IN CFP-FLD
                       ADD 1             TO SCR-NUM-IGRP
                       MOVE SCR-NUM-IGRP TO ADP-NUM-IGRP IN CFP-FLD.

      *ISP SIEMPRE VA A BUSCAR DATOS DE DBC Y LOS CARGA
           MOVE SCR-CAI-ICIC TO DBC-CAI-ICLI IN DBC.
           MOVE SCR-IIC-ICIC TO DBC-IIC-ICLI IN DBC.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM GET-CLI.
           IF MSG-COD-MENS NOT = SPACES
               MOVE MSG-GLS-DESC TO FRM-MENS
           ELSE
               MOVE DBC-GLS-NOMC IN DBC TO CPT-STRN
               PERFORM CPT-BLKS
               MOVE CPT-STRN TO DBC-GLS-NOMC IN CFP-FLD
               MOVE DBC-NUM-ICLI IN DBC TO DBC-NUM-ICLI IN CFP-FLD
               MOVE DBC-VRF-ICLI IN DBC TO DBC-VRF-ICLI IN CFP-FLD
               MOVE DBC-IND-ICLI IN DBC TO DBC-IND-ICLI IN CFP-FLD
               MOVE DBC-GLS-ICLI IN DBC TO DBC-GLS-ICLI IN CFP-FLD.
           PERFORM EDT-KEY-CFP.
           PERFORM EDT-FLD-CFP.
           IF SCR-IND-FST IN SCR-VEC-FST(SCR-IPRO) = 'S'
               MOVE SPACES TO SCR-IND-FST IN SCR-VEC-FST(SCR-IPRO)
               PERFORM SCR-INIT
               PERFORM STP-EXIT
           ELSE
               PERFORM SCR-PUTA.
           PERFORM SCR-EXIT.
       FIN-HBL-KEY-CFP.
           EXIT.

       DET-PFS-ENG SECTION.
       INI-DET-PFS-ENG.
           IF FRM-FFLD = FRM-FFLD-PF10
               MOVE 'F10' TO SCR-COD-AUX2
           ELSE
               MOVE 'ENT' TO SCR-COD-AUX2.
       FIN-DET-PFS-ENG.
           EXIT.

       SET-IGRP SECTION.
       INI-SET-IGRP.
           IF SCR-IND-ING = 'FAC'
               MOVE 1 TO SCR-NUM-IGRP
           ELSE
               MOVE 2 TO SCR-NUM-IGRP.
       FIN-SET-IGRP.
           EXIT.

       PSB-ENG-APO SECTION.
       INI-PSB-ENG-APO.
           IF ADP-COD-CLAP IN ADP NOT > SPACES
               GO TO FIN-PSB-ENG-APO.
           MOVE 'S' TO WSS-ENG-APO.
           MOVE SCR-CAI-ICIC TO REC-CAI-ICLI IN REC.
           MOVE SCR-IIC-ICIC TO REC-IIC-ICLI IN REC.
           MOVE 'OP'         TO REC-COD-TREC IN REC.
           MOVE SPACES       TO REC-CIC-IREL IN REC.
           MOVE ZEROES       TO REC-NUM-TREC IN REC.
           MOVE FIO-GET-NLS TO FIO-CMND.
           PERFORM SGC-FIO-REC.
       CIC-PSB-ENG-APO.
           IF FIO-STAT-OKS AND
              REC-CAI-ICLI IN REC = SCR-CAI-ICIC AND
              REC-IIC-ICLI IN REC = SCR-IIC-ICIC AND
              REC-COD-TREC IN REC = 'OP'
                 IF REC-COD-AREC IN REC = ADP-COD-CLAP IN ADP AND
                    REC-NUM-TREC IN REC = SCR-NUM-IEDP
                     MOVE 'N' TO WSS-ENG-APO
                 ELSE
                     MOVE FIO-GET-NXT TO FIO-CMND
                     PERFORM SGC-FIO-REC
                     GO TO CIC-PSB-ENG-APO.
           IF WSS-ENG-APO = 'S'
                PERFORM CRG-IDX-ENG
                MOVE ADP-COD-CLAP IN ADP TO SCR-COD-CLAP
                MOVE 'S' TO SCR-IND-ENG IN SCR-VEC-ENG(WSS-IDX-IAPO)
                MOVE 'S' TO SCR-IND-FST IN SCR-VEC-FST(WSS-IDX-IAPO)
                MOVE 'ASG    INGOK' TO SCR-EXT-MENS
                PERFORM DET-PFS-ENG
                PERFORM EGR-FPEN-CIC.
       FIN-PSB-ENG-APO.
           EXIT.

      *  CODIGO ADICIONAL PARA ENGANCHE PROGRAMAS
       ING-FPEN-CIC SECTION.
       INI-ING-FPEN-CIC.
           PERFORM ING-SETE.
           MOVE MSG-GLS-DESC TO CFP-GLS-MENS.
           PERFORM HBL-IKY.
       FIN-ING-FPEN-CIC.
           EXIT.

       ING-SETE SECTION.
       INI-ING-SETE.
           PERFORM CRG-IDX-ENG.
           PERFORM CRG-TBL-ENG.
           MOVE WSS-NTRN(SCR-IPRO) TO SCR-NTRN.
           MOVE WSS-PROG(SCR-IPRO) TO SCR-PROG.
           MOVE WSS-NMAP(SCR-IPRO) TO SCR-NMAP.
           MOVE WSS-NLIB(SCR-IPRO) TO SCR-NLIB.

           MOVE WSS-NTRV(SCR-IPRO) TO SCR-NTRV.
           MOVE WSS-PROV(SCR-IPRO) TO SCR-PROV.
       FIN-ING-SETE.
           EXIT.

       EGR-FPEN-CIC SECTION.
       INI-EGR-FPEN-CIC.
           PERFORM CRG-TBL-ENG.
           ADD 1 TO SCR-IPRO.
           IF SCR-IPRO > WSS-TOT-IIDX
                  PERFORM EGR-FTER-CIC
                  GO TO FIN-EGR-FPEN-CIC.
           IF SCR-IND-ENG IN SCR-VEC-ENG(SCR-IPRO) = SPACES
               GO TO INI-EGR-FPEN-CIC.
           MOVE WSS-INST-FPEN-CIC TO SCR-INST-EXT.
           MOVE WSS-PROG(SCR-IPRO) TO SYS-PROG.
           MOVE SCR-VARI           TO SYS-CMMA.
           MOVE SCR-TCMA           TO SYS-TCMA.
           MOVE SYS-XCTL           TO SYS-CMND.
           PERFORM GNS-PRO-SYS.
       FIN-EGR-FPEN-CIC.
           EXIT.

       EGR-FTER-CIC SECTION.
       INI-EGR-FTER-CIC.
           IF SCR-IND-ING = 'FAC'
               MOVE 'FAC    INGPX' TO SCR-EXT-MENS
           ELSE
           IF SCR-IND-ING = 'EDP'
               MOVE 'EDP    INGPX' TO SCR-EXT-MENS
           ELSE
               MOVE 'ERR    INGPX' TO SCR-EXT-MENS.
           PERFORM CRG-IDX-ENG.
           PERFORM CRG-TBL-ENG.
           MOVE 1 TO SCR-IPRO.
           MOVE WSS-INST-FTER-CIC TO SCR-INST-EXT.
           MOVE WSS-PROG(SCR-IPRO) TO SYS-PROG.
           MOVE SCR-VARI           TO SYS-CMMA.
           MOVE SCR-TCMA           TO SYS-TCMA.
           MOVE SYS-XCTL           TO SYS-CMND.
           PERFORM GNS-PRO-SYS.
       FIN-EGR-FTER-CIC.
           EXIT.

       SCR-INIT SECTION.
       INI-SCR-INIT.
           MOVE 3  TO FRM-PLIN.
           MOVE 19 TO FRM-NLIN.
           MOVE FRM-CLR-FRM TO FRM-CMND.
           PERFORM GNS-PRO-FRM.
           MOVE FRM-SINI-DBNF TO FRM-SINI.
           MOVE SCR-NMAP TO FRM-NAME.
           MOVE SCR-NLIB TO FRM-NLIB.
           MOVE CFP-FLD TO FRM-DFLD.
           MOVE FRM-INI TO FRM-CMND.
           PERFORM GNS-PRO-FRM.
       FIN-SCR-INIT.
           EXIT.
       COPY SGCBGE2C.
      *>>>>
      *<<<< EOF
       BUS-COR-IGRP SECTION.
       INI-BUS-COR-IGRP.
           MOVE 00 TO ADP-NUM-IGRP IN CFP-FLD.
           MOVE 99 TO ADP-NUM-IGRP IN ADP.
           MOVE 99 TO ADP-NUM-ICMP IN ADP.
           MOVE ADP-CIC-IMDT IN ADP TO ADP-CIC-IMDT IN WSS-ADP.
           MOVE ADP-IND-TINF IN ADP TO ADP-IND-TINF IN WSS-ADP.
           MOVE ADP-NUM-IEDP IN ADP TO ADP-NUM-IEDP IN WSS-ADP.
           MOVE ADP-COD-IPOD IN ADP TO ADP-COD-IPOD IN WSS-ADP.
           MOVE FIO-GET-LEQ TO FIO-CMND.
           PERFORM SGC-FIO-ADP.
           IF FIO-STAT-OKS AND
              ADP-CIC-IMDT IN ADP = ADP-CIC-IMDT IN WSS-ADP AND
              ADP-IND-TINF IN ADP = ADP-IND-TINF IN WSS-ADP AND
              ADP-NUM-IEDP IN ADP = ADP-NUM-IEDP IN WSS-ADP AND
              ADP-COD-IPOD IN ADP = ADP-COD-IPOD IN WSS-ADP
               MOVE ADP-NUM-IGRP IN ADP TO ADP-NUM-IGRP IN CFP-FLD
               MOVE WSS-EXST-YES TO WSS-IADP.
           IF SCR-CCPP = 'ING' OR 'ACT'
               ADD  1 TO ADP-NUM-IGRP IN CFP-FLD
               MOVE WSS-EXST-NOT TO WSS-IADP.
       FIN-BUS-COR-IGRP.
           EXIT.

       BUS-COR-ICMP SECTION.
       INI-BUS-COR-ICMP.
           MOVE 99 TO ADP-NUM-ICMP IN ADP.
           MOVE ADP-CIC-IMDT IN ADP TO ADP-CIC-IMDT IN WSS-ADP.
           MOVE ADP-IND-TINF IN ADP TO ADP-IND-TINF IN WSS-ADP.
           MOVE ADP-NUM-IEDP IN ADP TO ADP-NUM-IEDP IN WSS-ADP.
           MOVE ADP-COD-IPOD IN ADP TO ADP-COD-IPOD IN WSS-ADP.
           MOVE ADP-NUM-IGRP IN ADP TO ADP-NUM-IGRP IN WSS-ADP.
           MOVE FIO-GET-LEQ TO FIO-CMND.
           PERFORM SGC-FIO-ADP.
           IF FIO-STAT-OKS AND
              ADP-CIC-IMDT IN ADP = ADP-CIC-IMDT IN WSS-ADP AND
              ADP-IND-TINF IN ADP = ADP-IND-TINF IN WSS-ADP AND
              ADP-NUM-IEDP IN ADP = ADP-NUM-IEDP IN WSS-ADP AND
              ADP-COD-IPOD IN ADP = ADP-COD-IPOD IN WSS-ADP AND
              ADP-NUM-IGRP IN ADP = ADP-NUM-IGRP IN WSS-ADP
               IF SCR-CCPP = 'ING' OR 'ACT'
                   MOVE WSS-EXST-NOT TO WSS-IADP
               ELSE
                   MOVE WSS-EXST-YES TO WSS-IADP
           ELSE
               MOVE 'SGC'          TO MSG-COD-SIST
               MOVE 'ADP    NOIGR' TO MSG-COD-MENS
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS
               MOVE FIO-STAT-NEX TO FIO-STAT.
       FIN-BUS-COR-ICMP.
           EXIT.

       BUS-COR-ICCM SECTION.
       INI-BUS-COR-ICCM.
           MOVE 00 TO CCM-NUM-ICCM IN CFP-FLD.
           MOVE 99 TO CCM-NUM-ICCM IN CCM.
           MOVE CCM-CIC-IMDT IN CCM TO CCM-CIC-IMDT IN WSS-CCM.
           MOVE CCM-IND-TINF IN CCM TO CCM-IND-TINF IN WSS-CCM.
           MOVE CCM-NUM-IEDP IN CCM TO CCM-NUM-IEDP IN WSS-CCM.
           MOVE CCM-COD-IPOD IN CCM TO CCM-COD-IPOD IN WSS-CCM.
           MOVE CCM-NUM-IGRP IN CCM TO CCM-NUM-IGRP IN WSS-CCM.
           MOVE FIO-GET-LEQ TO FIO-CMND.
           PERFORM SGC-FIO-CCM.
           IF FIO-STAT-OKS AND
              CCM-CIC-IMDT IN CCM = CCM-CIC-IMDT IN WSS-CCM AND
              CCM-IND-TINF IN CCM = CCM-IND-TINF IN WSS-CCM AND
              CCM-NUM-IEDP IN CCM = CCM-NUM-IEDP IN WSS-CCM AND
              CCM-COD-IPOD IN CCM = CCM-COD-IPOD IN WSS-CCM AND
              CCM-NUM-IGRP IN CCM = CCM-NUM-IGRP IN WSS-CCM
               MOVE CCM-NUM-ICCM IN CCM TO CCM-NUM-ICCM IN CFP-FLD
               MOVE '00' TO PGM-STAT-CCM
               MOVE WSS-EXST-YES TO WSS-ICCM.
           IF SCR-CCPP = 'ING' OR 'ACT'
               MOVE '23' TO PGM-STAT-CCM
               ADD 1 TO CCM-NUM-ICCM IN CFP-FLD
               MOVE WSS-EXST-NOT TO WSS-ICCM.
       FIN-BUS-COR-ICCM.
           EXIT.

       COPY SGCBFDBC.
       COPY SGCBFCCM.
       COPY SGCBFEDP.
       COPY GNSBFRCE.
       COPY SGCBFEDS.
       COPY SGCBFREC.
       COPY GNSBEGLS.
       COPY SGCBGCLI.
       COPY GNSBGCPT.
       COPY GNSBGSTR.
      *>>>>
