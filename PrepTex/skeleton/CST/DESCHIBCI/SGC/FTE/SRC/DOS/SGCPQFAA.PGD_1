       IDENTIFICATION DIVISION.
      *========================
       PROGRAM-ID.   SGCPQFAA.
       AUTHOR.       CONSIST.
       DATE-WRITTEN. 20-Aug-14 06:14 PM.

      * NOMBRE PROGRAMA                   SGCPQFAA
      * VERSION PGM                       3.1
      * VERSION SKL                       07.08.21
      * OPCION                            CON
      * ARCHIVO BASE                      SGCEDP
      * PANTALLA                          SGCFAA
      * INP/OUT                           DATACOM
      * TAMANO COMMAREA                   250

      *<<<< PGM_DTC
      *>>>>
      *<<<< PGM_DTC
      *>>>>

       ENVIRONMENT DIVISION.
      *=====================
       CONFIGURATION SECTION.
      *----------------------
       SPECIAL-NAMES.
               DECIMAL-POINT IS COMMA.
       DATA DIVISION.
      *==============

       WORKING-STORAGE SECTION.
      *------------------------
      * COPY GNSWGSCR.
       COPY GNSWGCVT.
      *<<<< PGM_DTC
      *>>>>
       77  WSS-TAG-SGCPQFAA-INI PIC X(125) VALUE                        
           '<IDNPGM NOM=$SGCPQFAA$ SKL=$07.08.21$ VSN=${vsnpq}$        
      -    'GEN=$20-Aug-14 06:14 PM$ FNC=${fncpq}$/>'.    

       COPY GNSWCSCR.
       COPY GNSWVSCR.
      *<<<< PGM_DTC
      *>>>>
      *<<<< FIN_SCR_VARI
      *ISP ENGANCHE VARIBLES EXTENSION COMMAREA
       COPY SGCWGE2S.
      *>>>>
      *<<<< PGM_DTC
      *<<<< FIN_SCR_VARI
       COPY GNSWGRQA REPLACING
                     ==01  ADR-REQA== BY ==02  SCR-DBC-REQA==.
           02 SCR-KEY-IDBC                     PIC X(03).
       COPY GNSWGRQA REPLACING
                     ==01  ADR-REQA== BY ==02  SCR-EDP-REQA==.
           02 SCR-KEY-IEDP                     PIC X(03).
      *>>>>
      *>>>>
       COPY SGCWIFAA.

       COPY SGCBREDP.


       COPY GNSWVIDD.
       COPY GNSWGRQA.
       COPY GNSWGUIB.
       COPY GNSWGELS.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-EDP-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-TAB-REQA==.
       COPY GNSBRTAB.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-MSC-REQA==.
       COPY GNSBRMSC.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-MSG-REQA==.
       COPY GNSBRMSG.
       COPY GNSWCFIO.
       COPY GNSWVFIO.
       COPY GNSWGFRM.
       COPY GNSWVNUM.
       COPY GNSWCNUM.
       COPY GNSWGFEC.
       COPY GNSWGHOY.
       COPY GNSWCVRF.
       COPY GNSWVVRF.
       COPY GNSWGIDC.
       COPY GNSWGSYS.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-OFI-REQA==.
       COPY TABBROFI.

      *<<<< WSS
      *ISP ENGANCHE
       COPY SGCWGE2W.
      * VARIABLE PARA DETERMINAR SI SE ENGANCHA DEPENDIENDO DEL VECTOR.
       01  WSS-PODE.
           03  WSS-NUM-PODE                         PIC 9(03).
       COPY GNSWGQUE. 
       COPY GNSBRRCE.
      *>>>>
      *<<<< PGM_DTC
      *>>>>
      *<<<< PGM_DTC
      *>>>>
      *<<<<
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-DBC-REQA==. 
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-DCE-REQA==. 
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-CCM-REQA==. 
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-EDS-REQA==. 
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-USR-REQA==. 
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-RCE-REQA==.
      *>>>>
      *<<<< PGM_DTC
      *>>>>
      *<<<<
       COPY SGCBRDCE.
       COPY SGCBRCCM.
       COPY SGCBREDS.
       COPY SGCBRDBC.
       COPY TABBRUSR.
       COPY TABBRCOM.
       COPY GNSWGSTR.
       COPY GNSWGCPT.
       01  WSS-VARI.
           03  WSS-FEC-FEDP                               PIC X(08).
           03  WSS-VEC-PODE.
               05  WSS-ELM-PODE      OCCURS 100           PIC X(01).
           03  WSS-COD-MENS.
               05  WSS-GLS-MENS                           PIC X(09).
               05  WSS-IND-RSTR                           PIC X(01).
               05  WSS-IND-CMTS                           PIC X(01).
           03  WSS-GLS-IENT.
               05  WSS-CAI-IMDT                           PIC X(04).
               05  WSS-IIC-IMDT                           PIC X(08).
               05  WSS-NUM-IEDP                           PIC 9(03).
               05  WSS-IND-PODE                           PIC X(01).
               05  WSS-FIL-IENT                           PIC X(14).
           03  WSS-ICOR                          VALUE 0  PIC 9(01).
               88 NO-ASIGNE-CORRELATIVO          VALUE 0.
           03  WSS-IMAX                          VALUE 55 PIC 9(02).
           03  WSS-I                                      PIC 9(02).
           03  WSS-CIC-ICLI                               PIC X(12).
           03  WSS-IND-CMTR                               PIC X(01).
      *>>>>
       01  PGM-VARI.
           03 PGM-ICLR                  VALUE ' '       PIC X(01).
           03 PGM-LIMPIAR-TODO          VALUE ' '       PIC X(01).
           03 PGM-LIMPIAR-LLAVES        VALUE 'K'       PIC X(01).
           03 PGM-LIMPIAR-CAMPOS        VALUE 'F'       PIC X(01).
           03 PGM-NO-LIMPIAR-NADA       VALUE 'N'       PIC X(01).
           03 PGM-PROG                                  PIC X(08).
           03 PGM-NTRN                                  PIC X(04).
           03 PGM-STAT.
              05 PGM-STAT-DBC.
                 88 PGM-STAT-DBC-NUL    VALUE '  '.
                 07 PGM-STT1-DBC        VALUE '2' PIC X(01).
                    88 PGM-STAT-DBC-OKS VALUE '0'.
                 07 PGM-STT2-DBC        VALUE '3' PIC X(01).
              05 PGM-STAT-EDP.
                 88 PGM-STAT-EDP-NUL    VALUE '  '.
                 07 PGM-STT1-EDP        VALUE '2' PIC X(01).
                    88 PGM-STAT-EDP-OKS VALUE '0'.
                 07 PGM-STT2-EDP        VALUE '3' PIC X(01).
      *<<<< PGM_DTC
      *>>>>
           03 PGM-SRNF                  VALUE '23'      PIC X(02).
           03 PGM-SOKS                  VALUE '00'      PIC X(02).
           03 PGM-SNUL                  VALUE '  '      PIC X(02).
           03 PGM-SUAR                  VALUE SPACES    PIC X(15).
           03 PGM-CMMA.
              05 PGM-CMMA-CHR OCCURS 847 PIC X(01).

       LINKAGE SECTION.
      *----------------
       01  DFHCOMMAREA.
           02 DFH-CMMA OCCURS 847 PIC X(01).
       COPY GNSLGFIO.

       PROCEDURE DIVISION.
      *===================

       MAIN SECTION.
       INI-MAIN.
           PERFORM INI.
       LUP-MAIN.
           IF SCR-INST = SCR-INST-HCM
                 PERFORM SCR-COM.
           IF SCR-CCPP = 'ACC'
                 PERFORM SCR-ACC
           ELSE
                 MOVE SCR-INST-HCM TO SCR-INST.
      *<<<< PGM_DTC
      *>>>>
           GO TO LUP-MAIN.
       FIN-MAIN.
           EXIT.

       INI SECTION.
       INI-INI.
      *<<<< PGM_DTC
      *>>>>
       COPY GNSBGEIB.
      *<<<< PGM_DTC
      *>>>>
       COPY GNSBGEDB.
           MOVE LOW-VALUES TO FAA-FLD.
           MOVE LOW-VALUES TO FAA-EDT.
      *<<<< PGM_DTC
      *>>>>
           PERFORM GNS-PRO-RCK.
      *<<<< PGM_DTC
      *>>>>
           PERFORM GNS-BUS-VCA.
      *<<<< PGM_DTC
      *>>>>
           MOVE +847 TO SCR-TCMA.
           PERFORM GNS-HDL-SYS.
           PERFORM GNS-HDL-FRM.
           MOVE 'SGCPQFAA' TO FIO-PROG.
           PERFORM GNS-BUS-IDD.
      *<<<< PGM_DTC
      *>>>>
      *<<<< INI_FIO
      *     MOVE +2250 TO SCR-TCMA.
      *     NO ES NECESARIO, PUES PFSALLALL PONE EL TAMANO
           IF SCR-DESDE-CMN
      * MARCA QUE INGRESO POR 'FAC'
               MOVE 'FAC'    TO SCR-IND-ING
               MOVE 1 TO SCR-IPRO
               GO TO FIN-INI-FIO.
           IF SCR-INST-EXT = WSS-INST-FTER-CIC
               MOVE WSS-INST-NULL TO SCR-INST-EXT
               PERFORM ING-FTER-CIC.
       FIN-INI-FIO.
      *>>>>
      *<<<< PGM_DTC
      *<<<< INI_FIO
           IF SCR-DESDE-CMN
               PERFORM GNS-CLR-RQA.
      *>>>>
      *>>>>
       FIN-INI.
           EXIT.

       COPY GNSBHSYS.
       COPY GNSBHFRM.
       COPY GNSBPRCK.
       GNS-BUS-VCA SECTION.
       INI-GNS-BUS-VCA.
           MOVE 0 TO FRM-IFLD.
       LUP-GNS-BUS-VCA.
           ADD 1 TO FRM-IFLD.
           IF FRM-IFLD NOT > EIBCALEN AND
              FRM-IFLD NOT > 847
                MOVE DFH-CMMA(FRM-IFLD) TO PGM-CMMA-CHR(FRM-IFLD)
                GO TO LUP-GNS-BUS-VCA.
           MOVE PGM-CMMA TO SCR-VARI.
       FIN-GNS-BUS-VCA.
           EXIT.
       COPY GNSBBIDD.

       SCR-COM SECTION.
       INI-SCR-COM.
      *<<<< PGM_DTC
      *>>>>
           MOVE FRM-CPSF-AEY TO FRM-CPIM-AEY.
           PERFORM PRO-ALL.
           PERFORM SCR-CLRA-FAA.
           PERFORM EDT-KEY-FAA.
           PERFORM EDT-FLD-FAA.
           PERFORM SCR-PUTA.
           MOVE SCR-INST-HCM TO SCR-INST.
           MOVE SCR-CMNP     TO SYS-PROG.
           MOVE SCR-VARI     TO SYS-CMMA.
           MOVE SCR-TCMA     TO SYS-TCMA.
           MOVE SYS-XCTL     TO SYS-CMND.
           PERFORM GNS-PRO-SYS.
       XCT-ERR.
           MOVE 'XCTERR    ' TO MSG-COD-MENS.
           MOVE 'GNS'        TO MSG-COD-SIST.
           PERFORM GET-MSG.
           MOVE MSG-GLS-DESC TO SYS-MEN1.
           MOVE SYS-PROG     TO SYS-MEN2.
           MOVE SYS-ABOR     TO SYS-CMND.
           PERFORM GNS-PRO-SYS.
       COPY GNSBGGBK.
       FIN-SCR-COM.
           EXIT.



       SCR-ACC SECTION.
       INI-SCR-ACC.
      *<<<< PGM_DTC
      *>>>>
           IF SCR-INST = SCR-INST-HKY
               PERFORM HBL-KEY
               MOVE SCR-INST-GKY TO SCR-INST
               PERFORM SCR-DMSG
           ELSE
           IF SCR-INST = SCR-INST-GKY
                PERFORM SCR-KEY
                IF SCR-STAT NOT = SCR-STAT-ABT
                        PERFORM SCR-TRL
                ELSE
                        PERFORM DESSCRTRL
                        GO TO FIN-SCR-ACC
           ELSE
           IF SCR-INST = SCR-INST-GAB
                PERFORM GET-CON
           ELSE
           IF SCR-INST = SCR-INST-BRW
               MOVE SCR-FFLD TO FRM-FFLD
               PERFORM BRW-SCR-ACC.
           PERFORM DESSCRTRL.
      *<<<< PGM_DTC
      *<<<< PFS_SCR_ACC
           IF FRM-FFLD = FRM-FFLD-PF5 OR FRM-FFLD-PF6 OR
                         FRM-FFLD-PF7 OR FRM-FFLD-PF8
               PERFORM VAL-NUM-KEY-FAA
               PERFORM VAL-NUM-FLD-FAA
               PERFORM RST-STAT
               PERFORM FND-SCR-KEY THRU FIN-SCR-KEY
               IF SCR-STAT NOT = SCR-STAT-ABT
                   PERFORM SCR-TRL
               ELSE
                   PERFORM GNS-CLR-RQA
                   PERFORM DESSCRTRL
                   GO TO FIN-SCR-ACC.
           PERFORM GNS-CLR-RQA.
      *>>>>
      *>>>>
           MOVE SPACES TO FRM-MENS.
           PERFORM SCR-MSSG.
       FIN-SCR-ACC.
      *<<<< PGM_DTC
      *>>>>
           EXIT.

       BRW-SCR-ACC SECTION.
       INI-BRW-SCR-ACC.
      *<<<< PGM_DTC
      *>>>>
       FIN-BRW-SCR-ACC.
           EXIT.




       SCR-DMSG SECTION.
       INI-SCR-DMSG.
      *<<<< PGM_DTC
      *>>>>
           IF PGM-ICLR = PGM-NO-LIMPIAR-NADA
               NEXT SENTENCE
           ELSE
           IF PGM-ICLR = PGM-LIMPIAR-TODO
               PERFORM SCR-CLRA-FAA
               PERFORM EDT-KEY-FAA
               PERFORM EDT-FLD-FAA
           ELSE
           IF PGM-ICLR = PGM-LIMPIAR-LLAVES
               PERFORM CLR-KEY-FAA
               PERFORM EDT-KEY-FAA
           ELSE
               PERFORM CLR-FLD-FAA
               PERFORM EDT-FLD-FAA.
           PERFORM SCR-PUTA.
           PERFORM SCR-EXIT.
       FIN-SCR-DMSG.
           EXIT.

       SCR-KEY SECTION.
       INI-SCR-KEY.
           PERFORM SCR-RST.
           PERFORM GET-KEY.
           IF FRM-STAT-ABT
                   MOVE SPACES TO FRM-MENS
                   PERFORM SCR-MSSG
                   GO TO FIN-SCR-KEY.
       FND-SCR-KEY.
           MOVE SPACES TO FRM-MENS.
           PERFORM FND-KEY.
           IF FIO-STAT-OKS
               PERFORM PUT-SCR
               MOVE PGM-LIMPIAR-TODO TO PGM-ICLR
               GO TO FIN-SCR-KEY.
      *JSS ELSE
      *        PERFORM CLR-FLD-FAA.
       ERR-SCR-KEY.
           MOVE PGM-LIMPIAR-CAMPOS TO PGM-ICLR.
           IF FRM-MENS NOT > SPACES
               IF FIO-STAT-EOF
                   MOVE 'REGEOF    ' TO MSG-COD-MENS
                   MOVE 'GNS' TO MSG-COD-SIST
                   PERFORM GET-MSG
                   MOVE MSG-GLS-DESC TO FRM-MENS
               ELSE
               IF FIO-STAT = FIO-STAT-NEX
                   MOVE 'REGNEX    ' TO MSG-COD-MENS
                   MOVE 'GNS' TO MSG-COD-SIST
                   PERFORM GET-MSG
                   MOVE MSG-GLS-DESC TO FRM-MENS
               ELSE
                   MOVE 'FIOSTAT' TO MSG-COD-TMSG
                   MOVE FIO-STAT  TO MSG-COD-CMSG
                   MOVE 'GNS'     TO MSG-COD-SIST
      *<<<< PGM_DTC
      *>>>>
                   PERFORM GET-MSG
                   MOVE MSG-GLS-DESC TO FRM-MENS.
           PERFORM SCR-MSSG.
           MOVE SCR-STAT-ABT TO SCR-STAT.
       FIN-SCR-KEY.
           EXIT.

       SCR-RST SECTION.
       INI-SCR-RST.
           MOVE SPACES       TO PGM-ICLR.
           MOVE SPACES       TO SCR-ACTU.
           MOVE SCR-STPP     TO SCR-STAT.
           MOVE SCR-MFLD-NOT TO SCR-MFLD.
           MOVE LOW-VALUES   TO FAA-FLD.
           MOVE LOW-VALUES TO FAA-EDT.
      *<<<< PGM_DTC
      *>>>>
       FIN-SCR-RST.
           EXIT.

       GET-KEY SECTION.
       INI-GET-KEY.
      *<<<< PGM_DTC
      *>>>>
           PERFORM SCR-GKEY.
           IF FRM-STAT-ABT
               MOVE SCR-STAT-ABT TO SCR-STAT.
       FIN-GET-KEY.
           EXIT.

       GET-IKY SECTION.
       INI-GET-IKY.
      *<<<< PGM_DTC
      *>>>>
           PERFORM SCR-GIKY.
           IF FRM-STAT-ABT
               MOVE SCR-STAT-ABT TO SCR-STAT.
       FIN-GET-IKY.
           EXIT.

       FND-KEY SECTION.
       INI-FND-KEY.
      *<<<< PGM_DTC
      *>>>>
      *<<<<
           IF NOT (FRM-FFLD = FRM-FFLD-PF8 OR 
                   FRM-FFLD = FRM-FFLD-PF7 OR
                   FRM-FFLD = FRM-FFLD-PF6 OR
                   FRM-FFLD = FRM-FFLD-PF5 )
               IF SCR-CCPP = 'ING'
                   PERFORM BUS-CIC-CLI
                   IF NOT FIO-STAT-OKS
                       MOVE MSG-GLS-DESC TO FRM-MENS
                       MOVE '00' TO FIO-STAT
                       MOVE SCR-STAT-CON TO SCR-STAT
                       GO TO FIN-FND-KEY
                   ELSE
                       PERFORM BUS-COR-EDP
               ELSE
                   IF EDP-NUM-IEDP IN FAA-FLD NOT > ZEROES
                       PERFORM BUS-CIC-CLI
                       IF NOT FIO-STAT-OKS
                           MOVE MSG-GLS-DESC TO FRM-MENS
                           MOVE '00' TO FIO-STAT
                           MOVE SCR-STAT-CON TO SCR-STAT
                           GO TO FIN-FND-KEY
                       ELSE
                           PERFORM BUS-COR-EDP
                   ELSE
                       PERFORM BUS-CIC-CLI
                       IF NOT FIO-STAT-OKS
                           MOVE MSG-GLS-DESC TO FRM-MENS
                           MOVE '00' TO FIO-STAT
                           MOVE SCR-STAT-CON TO SCR-STAT
                           GO TO FIN-FND-KEY.
      *>>>>
           PERFORM KEY-ALL-FAA.
      *<<<< PGM_DTC
      *>>>>
      *<<<< FND_KEY
      *<<<< PGM_DTC
           IF FRM-FFLD = FRM-FFLD-PF5 OR FRM-FFLD-PF6
               PERFORM LEE-NXT-PRV-FAA
               IF MSG-COD-MENS = 'EDPSI'
                   PERFORM SCR-CLRA-FAA
                   GO TO FIN-FND-KEY
               ELSE
                   MOVE SPACES TO PGM-STAT
                   IF FRM-FFLD = FRM-FFLD-PF5
                       MOVE 'SGC' TO MSG-COD-SIST
                       MOVE 'FAC    NOPRV' TO MSG-COD-MENS
                       PERFORM GET-MSG
                       MOVE MSG-GLS-DESC TO FRM-MENS
                       MOVE '00' TO FIO-STAT
                       MOVE SCR-STAT-CON TO SCR-STAT
                       GO TO FIN-FND-KEY
                   ELSE
                       MOVE 'SGC' TO MSG-COD-SIST
                       MOVE 'FAC    NONXT' TO MSG-COD-MENS
                       PERFORM GET-MSG
                       MOVE MSG-GLS-DESC TO FRM-MENS
                       MOVE '00' TO FIO-STAT
                       MOVE SCR-STAT-CON TO SCR-STAT
                       GO TO FIN-FND-KEY.

           IF FRM-FFLD = FRM-FFLD-PF7 OR FRM-FFLD-PF8
               PERFORM LEE-NXT-PRV
               IF FIO-STAT-OKS
                   PERFORM SCR-CLRA-FAA
                   GO TO FIN-FND-KEY
               ELSE
                   MOVE SPACES TO PGM-STAT
                   IF FRM-FFLD = FRM-FFLD-PF7
                       MOVE 'SGC' TO MSG-COD-SIST
                       MOVE 'EDP    NOPRV' TO MSG-COD-MENS
                       PERFORM GET-MSG
                       MOVE MSG-GLS-DESC TO FRM-MENS
                       MOVE '00' TO FIO-STAT
                       MOVE SCR-STAT-CON TO SCR-STAT
                       GO TO FIN-FND-KEY
                   ELSE
                       MOVE 'SGC' TO MSG-COD-SIST
                       MOVE 'EDP    NONXT' TO MSG-COD-MENS
                       PERFORM GET-MSG
                       MOVE MSG-GLS-DESC TO FRM-MENS
                       MOVE '00' TO FIO-STAT
                       MOVE SCR-STAT-CON TO SCR-STAT
                       GO TO FIN-FND-KEY.
      *>>>>
      *>>>>
           MOVE FIO-GET-KEY TO FIO-CMND.
      *<<<< PGM_DTC
      *>>>>
           PERFORM SGC-FIO-EDP.
           IF FIO-STAT-OKS
               MOVE EDP-STP-ITRN IN EDP TO SCR-UMOD.
           MOVE FIO-STAT TO PGM-STAT-EDP.
      *<<<< PGM_DTC
      *>>>>
      *<<<<
           IF SCR-CCPP = 'ACT' AND NOT FIO-STAT-OKS
              IF NO-ASIGNE-CORRELATIVO
                  MOVE FIO-STAT-NEX TO FIO-STAT
                  GO TO FIN-FND-KEY.
           IF FIO-STAT-OKS
      *<<<< PGM_DTC
               MOVE ADR-EDP-REQA TO SCR-EDP-REQA
      *>>>>
               IF EDP-MSC-STAT IN EDP = 'A' 
                   IF SCR-CMND NOT = 'DVF'
                       MOVE 'SGC' TO MSG-COD-SIST
                       MOVE 'EDP    YAACA' TO MSG-COD-MENS
                       PERFORM GET-MSG
                       MOVE MSG-GLS-DESC TO FRM-MENS
                       MOVE '00' TO FIO-STAT
                       MOVE SCR-STAT-CON TO SCR-STAT
                       GO TO FIN-FND-KEY
                   ELSE
                       GO TO FIN-FND-KEY
               ELSE
                   IF SCR-CMND = 'DVF'
                       MOVE 'SGC' TO MSG-COD-SIST
                       MOVE 'EDP    YADES' TO MSG-COD-MENS
                       PERFORM GET-MSG
                       MOVE MSG-GLS-DESC TO FRM-MENS
                       MOVE '00' TO FIO-STAT
                       MOVE SCR-STAT-CON TO SCR-STAT
                       GO TO FIN-FND-KEY
                   ELSE
                       GO TO FIN-FND-KEY.
           IF SCR-CCPP = 'ACT' OR SCR-CCPP = 'ING'
               MOVE EDP-CIC-IMDT IN EDP TO DCE-CIC-ICLI IN DCE
               MOVE FIO-GET-KEY TO FIO-CMND
               PERFORM SGC-FIO-DCE
               MOVE 'SGC'          TO FIO-SIST
               MOVE 'SOC'          TO TAB-COD-TTAB
               MOVE DCE-COD-TSOC IN DCE TO TAB-COD-CTAB
               MOVE FIO-GET-KEY    TO FIO-CMND
               PERFORM GNS-FIO-TAB
               IF TAB-COD-DAT1 (4) > SPACES
                   PERFORM PUT-EDP VARYING WSS-I FROM 1 BY 1
                         UNTIL WSS-I > WSS-IMAX
                   MOVE '23' TO FIO-STAT
               ELSE
                   MOVE '23' TO FIO-STAT.
      *>>>>
       FIN-FND-KEY.
           EXIT.
 
       PUT-SCR SECTION.
       INI-PUT-SCR.
           IF PGM-STAT-EDP-OKS
               MOVE EDP-STP-ITRN IN EDP TO SCR-UMOD.
      *<<<< PGM_DTC
      *>>>>
           PERFORM PUT-ALL-FAA.
      *<<<< PGM_DTC
      *>>>>
       FIN-PUT-SCR.
           EXIT.

       STP-EXIT SECTION.
       INI-STP-EXIT.
      *<<<< PGM_DTC
      *>>>>
           MOVE SCR-PROG TO PGM-PROG.
           MOVE SCR-NTRN TO PGM-NTRN.

           MOVE SCR-PROV TO SCR-PROG.
           MOVE SCR-NTRV TO SCR-NTRN.

           MOVE PGM-PROG TO SCR-PROV
           MOVE PGM-NTRN TO SCR-NTRV.
      *<<<< PGM_DTC
      *>>>>
       FIN-STP-EXIT.
           EXIT.

       SCR-EXIT SECTION.
       INI-SCR-EXIT.
           MOVE 'P'      TO SCR-ICMN.
           MOVE SCR-NTRN TO SYS-NTRN.
      *<<<< PGM_DTC
      *>>>>
           MOVE SCR-VARI TO SYS-CMMA.
           MOVE SCR-TCMA TO SYS-TCMA.
           MOVE SYS-RTRN TO SYS-CMND.
           PERFORM GNS-PRO-SYS.
       FIN-SCR-EXIT.
           EXIT.

       SCR-PUTA SECTION.
       INI-SCR-PUTA.
      *<<<< PGM_DTC
      *>>>>
           MOVE SCR-NMAP TO FRM-NAME.
           MOVE SCR-NLIB TO FRM-NLIB.
           MOVE FAA-FLD TO FRM-DFLD.
      *<<<< PGM_DTC
      *>>>>
           MOVE FRM-PUT-ALL TO FRM-CMND.
           PERFORM GNS-PRO-FRM.
       FIN-SCR-PUTA.
           EXIT.

       SCR-MSSG SECTION.
       INI-SCR-MSSG.
           IF FRM-MEN1 NOT > SPACES
               MOVE SPACES TO FRM-MEN1.
           IF FRM-MEN2 NOT > SPACES
               MOVE SPACES TO FRM-MEN2.
           MOVE FRM-MENS TO FAA-GLS-MENS.
       FIN-SCR-MSSG.
           EXIT.

       SCR-GKEY SECTION.
       INI-SCR-GKEY.
           MOVE SCR-NMAP TO FRM-NAME.
           MOVE SCR-NLIB TO FRM-NLIB.
           MOVE FRM-GET-ALL TO FRM-CMND.
           PERFORM GNS-PRO-FRM.
           MOVE SPACES TO FRM-MENS.
      *<<<< PGM_DTC
      *>>>>
           IF NOT ( FRM-FFLD = FRM-FFLD-RET  OR FRM-FFLD-PF10 OR
                               FRM-FFLD-PF12 OR FRM-FFLD-PF3 )
      *<<<< PGM_DTC
      *<<<< PFS_SCR_GKEY
           IF NOT ( FRM-FFLD = FRM-FFLD-PF8 OR FRM-FFLD = FRM-FFLD-PF7 )
      *>>>>
      *>>>>
               MOVE 'PFSINV    ' TO MSG-COD-MENS
               MOVE 'GNS' TO MSG-COD-SIST
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS
               PERFORM FST-KEY-FAA
               PERFORM SCR-MSSG
               PERFORM SCR-PUTA
               PERFORM SCR-EXIT.
           MOVE FRM-DFLD TO FAA-FLD.
           IF FRM-STAT-ABT
               GO TO FIN-SCR-GKEY.
           MOVE FRM-SUAR-OKS TO FRM-SUAR.
           PERFORM VAL-NUM-KEY-FAA.
           IF FRM-SUAR EQUAL FRM-SUAR-MAL OR FRM-SUAR-CLR
               PERFORM SCR-MSSG
               PERFORM EDT-KEY-FAA
               PERFORM SCR-PUTA
               PERFORM SCR-EXIT.
      *JSS
           PERFORM CLR-FLD-FAA.
      *<<<< PGM_DTC
      *>>>>
           PERFORM VAL-IKY-FAA.
           IF FRM-SUAR EQUAL FRM-SUAR-MAL OR FRM-SUAR-CLR
               GO TO ERR-SCR-GKEY.
      *<<<< PGM_DTC
      *>>>>
           PERFORM VAL-MKY-FAA.
           IF FRM-SUAR EQUAL FRM-SUAR-MAL OR FRM-SUAR-CLR
               GO TO ERR-SCR-GKEY.
      *<<<< PGM_DTC
      *>>>>
           PERFORM VAL-AKY-FAA.
           IF FRM-SUAR EQUAL FRM-SUAR-MAL OR FRM-SUAR-CLR
               GO TO ERR-SCR-GKEY.
      *<<<< PGM_DTC
      *>>>>
           PERFORM VAL-CON-KEY-FAA.
           IF NOT ( FRM-SUAR EQUAL FRM-SUAR-MAL OR FRM-SUAR-CLR )
               GO TO FIN-SCR-GKEY.
           IF FRM-UCUR NOT > SPACES
               PERFORM FST-KEY-FAA.
       ERR-SCR-GKEY.
      *<<<< PGM_DTC
      *>>>>
           PERFORM SCR-MSSG.
           PERFORM EDT-KEY-FAA.
           PERFORM SCR-PUTA.
           PERFORM SCR-EXIT.
       FIN-SCR-GKEY.
      *<<<< PGM_DTC
      *>>>>
           PERFORM SCR-MSSG.

       SCR-GIKY SECTION.
       INI-SCR-GIKY.
           MOVE SCR-NMAP TO FRM-NAME.
           MOVE SCR-NLIB TO FRM-NLIB.
           MOVE FRM-GET-ALL TO FRM-CMND.
           PERFORM GNS-PRO-FRM.
           MOVE SPACES TO FRM-MENS.
           IF NOT ( FRM-FFLD = FRM-FFLD-RET  OR FRM-FFLD-PF10 OR
                               FRM-FFLD-PF12 OR FRM-FFLD-PF3 )
      *<<<< PGM_DTC
      *>>>>
               MOVE 'PFSINV    ' TO MSG-COD-MENS
               MOVE 'GNS' TO MSG-COD-SIST
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS
               PERFORM FST-KEY-FAA
               PERFORM SCR-MSSG
               PERFORM SCR-PUTA
               PERFORM SCR-EXIT.
           MOVE FRM-DFLD TO FAA-FLD.
           IF FRM-STAT-ABT
               GO TO FIN-SCR-GIKY.
           MOVE FRM-SUAR-OKS TO FRM-SUAR.
           PERFORM VAL-NUM-KEY-FAA.
           IF FRM-SUAR EQUAL FRM-SUAR-MAL OR FRM-SUAR-CLR
               PERFORM SCR-MSSG
               PERFORM EDT-IKY-FAA
               PERFORM SCR-PUTA
               PERFORM SCR-EXIT.
      *JSS
           PERFORM CLR-FLD-FAA.
      *<<<< PGM_DTC
      *>>>>
           PERFORM VAL-IKY-FAA.
           IF FRM-SUAR EQUAL FRM-SUAR-MAL OR FRM-SUAR-CLR
               GO TO ERR-SCR-GIKY.
      *<<<< PGM_DTC
      *>>>>
           PERFORM VAL-CON-IKY-FAA.
           IF NOT ( FRM-SUAR EQUAL FRM-SUAR-MAL OR FRM-SUAR-CLR )
               GO TO FIN-SCR-GIKY.
           IF FRM-UCUR NOT > SPACES
               PERFORM FST-KEY-FAA.
       ERR-SCR-GIKY.
      *<<<< PGM_DTC
      *>>>>
           PERFORM SCR-MSSG.
           PERFORM EDT-IKY-FAA.
           PERFORM SCR-PUTA.
           PERFORM SCR-EXIT.
       FIN-SCR-GIKY.
      *<<<< PGM_DTC
      *>>>>
           PERFORM SCR-MSSG.

       GET-CON SECTION.
       INI-GET-CON.
           MOVE SCR-NMAP TO FRM-NAME.
           MOVE SCR-NLIB TO FRM-NLIB.
           MOVE FRM-GET-ALL TO FRM-CMND.
           PERFORM GNS-PRO-FRM.
           IF NOT ( FRM-FFLD = FRM-FFLD-RET  OR FRM-FFLD-PF10 OR
                               FRM-FFLD-PF12 OR FRM-FFLD-PF3 )
      *<<<< PGM_DTC
      *<<<< PFS_GET_CON OR PFS_GET_ACC
           IF NOT
              ( FRM-FFLD = FRM-FFLD-PF5 OR FRM-FFLD = FRM-FFLD-PF6 OR
                FRM-FFLD = FRM-FFLD-PF7 OR FRM-FFLD = FRM-FFLD-PF8 )
      *>>>>
      *>>>>
               MOVE 'PFSINV    ' TO MSG-COD-MENS
               MOVE 'GNS' TO MSG-COD-SIST
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FAA-GLS-MEN2
               MOVE SCR-PRMT     TO FAA-GLS-MEN1
               PERFORM FST-MSG
               PERFORM SCR-PUTA
               PERFORM SCR-EXIT.
           MOVE FRM-DFLD TO FAA-FLD.
      *<<<< PGM_DTC
      *>>>>
       FIN-GET-CON.
           MOVE SCR-STAT-CON TO SCR-STAT.

       CLR-MSG SECTION.
       INI-CLR-MSG.
           MOVE SPACES TO FAA-GLS-MENS.
       FIN-CLR-MSG.
           EXIT.

       HBL-IKY SECTION.
       INI-HBL-IKY.
      *<<<< PGM_DTC
      *>>>>
           IF SCR-DESDE-CMN
               MOVE FAA-GLS-MENS TO FRM-MENS
               MOVE LOW-VALUES TO FAA-FLD
      * FLB  7-NOV-1994
               PERFORM CLR-KEY-FAA

               IF FRM-MENS < SPACES
                   MOVE LOW-VALUES TO FAA-GLS-MENS
               ELSE
                   MOVE FRM-MENS TO FAA-GLS-MENS.
           PERFORM PRO-MKY-FAA.
           PERFORM PRO-AKY-FAA.
           PERFORM UNP-IKY-FAA.
           PERFORM FST-KEY-FAA.
      *<<<< PGM_DTC
      *>>>>
       FIN-HBL-IKY.
           EXIT.

       HBL-KEY SECTION.
       INI-HBL-KEY.
      *<<<< PGM_DTC
      *>>>>
           IF SCR-DESDE-CMN
               MOVE FAA-GLS-MENS TO FRM-MENS
               MOVE LOW-VALUES TO FAA-FLD
               IF FRM-MENS < SPACES
                   MOVE LOW-VALUES TO FAA-GLS-MENS
               ELSE
                   MOVE FRM-MENS TO FAA-GLS-MENS.
           PERFORM UNP-KEY-FAA.
           PERFORM FST-KEY-FAA.
      *<<<< PGM_DTC
      *>>>>
       FIN-HBL-KEY.
           EXIT.

       HBL-FLD SECTION.
       INI-HBL-FLD.
      *<<<< PGM_DTC
      *>>>>
           PERFORM PRO-IKY-FAA.
           PERFORM PRO-AKY-FAA.
           PERFORM UNP-MKY-FAA.
           PERFORM UNP-FLD-FAA.
           PERFORM FST-FLD-FAA.
      *<<<< PGM_DTC
      *>>>>
       FIN-HBL-FLD.
           EXIT.

       FST-MSG SECTION.
       INI-FST-MSG.
           MOVE -1 TO FAA-GLS-MENS-LEN.
       FIN-FST-MSG.
           EXIT.

       PRO-ALL SECTION.
       INI-PRO-ALL.
      *<<<< PGM_DTC
      *>>>>
           PERFORM PRO-KEY-FAA.
           PERFORM FST-MSG.
      *<<<< PGM_DTC
      *>>>>
       FIN-PRO-ALL.
           EXIT.

       SCR-TRL SECTION.
       INI-SCR-TRL.
      *<<<< PGM_DTC
      *>>>>
      *<<<< PGM_DTC
      *>>>>
           IF FRM-MEN1 NOT > SPACES
               MOVE SCR-PRMT TO FRM-MEN1.
      *<<<< PGM_DTC
      *>>>>
           IF SCR-STAT = SCR-STAT-MOD
               PERFORM HBL-FLD
               PERFORM SCR-MSSG
               PERFORM EDT-KEY-FAA
               PERFORM EDT-FLD-FAA
               PERFORM SCR-PUTA
               PERFORM STP-EXIT
               MOVE SCR-INST-GFL TO SCR-INST
               PERFORM SCR-EXIT.
           IF SCR-STAT = SCR-STAT-SON
               PERFORM PRO-ALL
               PERFORM SCR-MSSG
               PERFORM EDT-KEY-FAA
               PERFORM EDT-FLD-FAA
               PERFORM SCR-PUTA
               PERFORM STP-EXIT
               MOVE SCR-INST-GCS TO SCR-INST
               PERFORM SCR-EXIT.
      *ASUME SCR-STAT-CON.
           MOVE SCR-STAT-CON TO SCR-STAT.
      *    MOVE FRM-CPSF-AEY TO FRM-CPIM-AEY.
           PERFORM PRO-ALL.
           PERFORM SCR-MSSG.
           PERFORM EDT-KEY-FAA.
           PERFORM EDT-FLD-FAA.
           PERFORM SCR-PUTA.
           MOVE SCR-INST-GAB TO SCR-INST.
           PERFORM SCR-EXIT.
       FIN-SCR-TRL.
           EXIT.

       DESSCRTRL SECTION.
       INI-DESSCRTRL.
           MOVE SCR-VFLD-NOT TO SCR-VFLD.
           MOVE FRM-FFLD TO SCR-FFLD.
       FIN-DESSCRTRL.
           IF SCR-FFLD-PF10 OR SCR-FFLD-PF3
                 MOVE SCR-INST-HCM TO SCR-INST
           ELSE
                 MOVE SCR-INST-HKY TO SCR-INST.
       EXT-DESSCRTRL.
           EXIT.

      * PGM-EBR-ALL SECTION.
      * INI-PGM-EBR-ALL.
      *     MOVE 'GNS' TO FIO-SIST.
      *     MOVE FIO-EBR-ALL TO FIO-CMND.
      *     PERFORM GNS-FIO-TAB.
      * FIN-PGM-EBR-ALL.
      *     EXIT.

       COPY SGCBQFAA.
       COPY GNSBVNUM.
       COPY SGCBFEDP.
       COPY GNSBFMSG.
       COPY GNSBGSYS.
       COPY GNSBGDTC.
       COPY GNSBGFRM.
       COPY GNSBGMSG.
       COPY GNSBEKEY.
       COPY GNSBIABT.
       COPY GNSBBTAB.
       COPY GNSBVCOD.
       COPY GNSBVTAB.
       COPY GNSBFTAB.
       COPY GNSBVIND.
       COPY GNSBVMSC.
       COPY GNSBFMSC.
       COPY GNSBVIDC.
       COPY GNSBPVRF.
       COPY GNSBGFEC.
       COPY GNSBGHOY.
       COPY TABBBOFI.
       COPY TABBVOFI.
       COPY TABBFOFI.

      *<<<< EOF

      *  MANEJO DE COLAS
       SET-QUE SECTION.
       INI-SET-QUE.
           PERFORM ERR-QUE.
           MOVE EIBTRMID TO QUE-TERM.
           COMPUTE QUE-LITM = 7 + 125.
           MOVE 'KEY' TO QUE-TYPE.
           MOVE 'ENT' TO QUE-IKEY.
           MOVE +125  TO QUE-LDAT.
           MOVE +0    TO QUE-PCUR.
           MOVE +1    TO QUE-NITM.
   
           MOVE 'CFP'                   TO KEY-COD-ENTI.
           MOVE DBC-GLS-NOMC IN FAA-FLD TO KEY-GLS-NOMC.
           MOVE DBC-NUM-ICLI IN FAA-FLD TO KEY-NUM-ICLI.
           MOVE DBC-VRF-ICLI IN FAA-FLD TO KEY-VRF-ICLI.
           MOVE DBC-IND-ICLI IN FAA-FLD TO KEY-IND-ICLI.
           MOVE DBC-GLS-ICLI IN FAA-FLD TO KEY-GLS-ICLI.
           MOVE SPACES                  TO KEY-CAI-IOPE.
           MOVE SPACES                  TO KEY-IIC-IOPE.
           MOVE ZEROES                  TO KEY-FEC-FENT.
           MOVE EDP-NUM-IEDP IN EDP     TO KEY-NUM-IENT.
           MOVE SPACES                  TO KEY-COD-IENT.
           MOVE EDP-NUM-DINF IN EDP     TO KEY-NUM-DCMT.
           MOVE EDP-NUM-MINF IN EDP     TO KEY-NUM-MCMT.
           MOVE EDP-NUM-SINF IN EDP     TO KEY-NUM-SCMT.
           MOVE EDP-NUM-AINF IN EDP     TO KEY-NUM-ACMT.
           MOVE ZEROES                  TO KEY-NUM-GCMT.
      * Mediante BUS-OFI Busca Oficina Obteniendo Codigos de Tabla OFI
      *     MOVE EDP-COD-OFII IN EDP TO OFI-COD-OFIC IN OFI.
      *     PERFORM BUS-OFI.
      * Mediante BUS-TAB Busca Comuna Obteniendo Codigos de Tabla COM
      *     MOVE 'TAB'               TO TAB-COD-SIST.
      *     MOVE 'COM'               TO TAB-COD-TTAB IN TAB.
      *     MOVE OFI-COD-COMU IN OFI TO TAB-COD-CTAB IN TAB.
      *     PERFORM BUS-TAB.
      * Obtiene Region de Oficina de Operacion del Credito
      *     MOVE TAB TO COM.
           MOVE SPACES TO KEY-COD-USER.
      *     IF COM-COD-REGI IN COM > SPACES AND
      *        COM-COD-REGI IN COM = '13' 
            IF EDP-COD-ABGI IN EDP > SPACES
                MOVE EDP-COD-ABGI IN EDP TO NUM-NUME
                MOVE NUM-ZERO-S TO NUM-ZERO
                MOVE NUM-SGNO-N TO NUM-SGNO
                MOVE 12 TO NUM-NENT
                MOVE 0  TO NUM-NDCM
                CALL 'GNSPKNUM' USING DFHEIBLK DFHCOMMAREA NUM-VARI     
                IF NOT NUM-STAT-OKS
                    MOVE EDP-COD-ABGI IN EDP TO KEY-COD-USER.
           MOVE KEY-VARI TO QUE-DATA.
       FIN-SET-QUE.
           EXIT.

       CHK-QUEU SECTION.
       INI-CHK-QUEU.
           MOVE 1 TO QUE-NITM.
           MOVE QUE-GET TO QUE-CMND.
           PERFORM GNS-PRO-QUE.
       FIN-CHK-QUEU.
           EXIT.

       QUE-EOQ SECTION.
       INI-QUE-EOQ.
           MOVE QUE-STAT-EOQ TO QUE-STAT.
           GO TO FIN-GNS-PRO-QUE.
       FIN-QUE-EOQ.
           EXIT.

       QUE-NEX SECTION.
       INI-QUE-NEX.
           MOVE QUE-STAT-NEX TO QUE-STAT.
           GO TO FIN-GNS-PRO-QUE.
       FIN-QUE-NEX.
           EXIT.

      **************************************************************

       ERR-QUE SECTION.
       INI-ERR-QUE.
           EXEC CICS HANDLE CONDITION
                     QIDERR (QUE-NEX)
                     ITEMERR(QUE-EOQ)
           END-EXEC.
       FIN-ERR-QUE.
           EXIT.

       GNS-PRO-QUE SECTION.
       INI-GNS-PRO-QUE.
           IF QUE-CMND = QUE-PUT
               GO TO PUT-QUE
           ELSE
           IF QUE-CMND = QUE-GET
               GO TO GET-QUE
           ELSE
           IF QUE-CMND = QUE-MOD
               GO TO MOD-QUE
           ELSE
           IF QUE-CMND = QUE-DEL
               GO TO DEL-QUE.
           MOVE 'Comando invalido :' TO QUE-MEN1.
           MOVE QUE-CMND             TO QUE-MEN2.
           EXEC CICS XCTL
                     PROGRAM('GNSPPABT')
                     COMMAREA(QUE-MENS)
                     LENGTH(+79)
           END-EXEC.

       PUT-QUE.
           EXEC CICS WRITEQ TS
                     QUEUE(QUE-COLA)
                     FROM(QUE-ITEM)
                     LENGTH(QUE-LITM)
                     AUXILIARY
           END-EXEC.
       FIN-PUT-QUE.
           GO TO FIN-GNS-PRO-QUE.

       GET-QUE.
           EXEC CICS READQ TS
                     QUEUE(QUE-COLA)
                     INTO(QUE-ITEM)
                     LENGTH(QUE-LITM)
                     ITEM(QUE-NITM)
           END-EXEC.
       FIN-GET-QUE.
           GO TO FIN-GNS-PRO-QUE.

       MOD-QUE.
           EXEC CICS WRITEQ TS
                     QUEUE(QUE-COLA)
                     FROM(QUE-ITEM)
                     LENGTH(QUE-LITM)
                     ITEM(QUE-NITM)
                     REWRITE
           END-EXEC.
       FIN-MOD-QUE.
           GO TO FIN-GNS-PRO-QUE.

       DEL-QUE.
           EXEC CICS DELETEQ TS
                     QUEUE(QUE-COLA)
           END-EXEC.
       FIN-DEL-QUE.
           GO TO FIN-GNS-PRO-QUE.

       FIN-GNS-PRO-QUE.
           EXIT.

      *>>>>
      *<<<< EOF
      *  CODIGO ADICIONAL PARA ENGANCHE PROGRAMAS

       DET-ENG-FAA SECTION.
       INI-DET-ENG-FAA.
       FIN-DET-ENG-FAA.
           EXIT.

       ING-FTER-CIC SECTION.
       INI-ING-FTER-CIC.
           PERFORM ING-SETE.
           MOVE SCR-INST-GKY TO SCR-INST.
           PERFORM HBL-IKY.
           PERFORM SCR-CLRA-FAA.
           PERFORM EDT-KEY-FAA.
           PERFORM EDT-FLD-FAA.
           MOVE 'SGC' TO MSG-COD-SIST.
           MOVE SCR-EXT-MENS TO MSG-COD-MENS.
           PERFORM GET-MSG.
           MOVE MSG-GLS-DESC TO FAA-GLS-MENS.
           MOVE ZEROES TO SCR-NUM-ICOR.
           MOVE SPACES TO SCR-CIC-ICIC
                          SCR-VEC-ENG
                          SCR-VEC-FST
                          SCR-COD-AUX1
                          SCR-INST-EXT
                          SCR-EXT-MENS.
           PERFORM SCR-INIT.
           PERFORM SCR-EXIT.
       FIN-ING-FTER-CIC.
           EXIT.

       ING-SETE SECTION.
       INI-ING-SETE.
           PERFORM CRG-IDX-ENG.
           PERFORM CRG-TBL-ENG.
           MOVE WSS-NTRN(SCR-IPRO) TO SCR-NTRN.
           MOVE WSS-PROG(SCR-IPRO) TO SCR-PROG.
           MOVE WSS-NMAP(SCR-IPRO) TO SCR-NMAP.
           MOVE WSS-NLIB(SCR-IPRO) TO SCR-NLIB.

           MOVE WSS-NTRV(SCR-IPRO) TO SCR-NTRV.
           MOVE WSS-PROV(SCR-IPRO) TO SCR-PROV.
       FIN-ING-SETE.
           EXIT.

       EGR-FPEN-CIC SECTION.
       INI-EGR-FPEN-CIC.
           PERFORM CRG-TBL-ENG.
           ADD 1 TO SCR-IPRO.
           IF SCR-IND-ENG IN SCR-VEC-ENG(SCR-IPRO) = SPACES
               GO TO INI-EGR-FPEN-CIC.
           MOVE WSS-INST-FPEN-CIC TO SCR-INST-EXT.
           MOVE WSS-PROG(SCR-IPRO) TO SYS-PROG.
           MOVE SCR-VARI TO SYS-CMMA.
           MOVE SCR-TCMA TO SYS-TCMA.
           MOVE SYS-XCTL TO SYS-CMND.
           PERFORM GNS-PRO-SYS.
       FIN-EGR-FPEN-CIC.
           EXIT.

       SCR-INIT SECTION.
       INI-SCR-INIT.
           MOVE 3  TO FRM-PLIN.
           MOVE 19 TO FRM-NLIN.
           MOVE FRM-CLR-FRM TO FRM-CMND.
           PERFORM GNS-PRO-FRM.
           MOVE FRM-SINI-DBNF TO FRM-SINI.
           MOVE SCR-NMAP TO FRM-NAME.
           MOVE SCR-NLIB TO FRM-NLIB.
           MOVE FAA-FLD TO FRM-DFLD.
           MOVE FRM-INI TO FRM-CMND.
           PERFORM GNS-PRO-FRM.
       FIN-SCR-INIT.
           EXIT.
       COPY SGCBGE2C.
      *
      *>>>>
      *<<<< PGM_DTC
      *<<<< EOF
       RST-STAT SECTION.
       INI-RST-STAT.
           MOVE SCR-STPP     TO SCR-STAT.
           MOVE SCR-MFLD-NOT TO SCR-MFLD.
       FIN-RST-STAT.
           EXIT.

       GNS-CLR-RQA SECTION.
       INI-GNS-CLR-RQA.
           MOVE SPACES TO SCR-DBC-REQA.
           MOVE SPACES TO SCR-KEY-IDBC.
           MOVE SPACES TO SCR-EDP-REQA.
           MOVE SPACES TO SCR-KEY-IEDP.
       FIN-GNS-CLR-RQA.
           EXIT.
      *>>>>
      *>>>>
      *<<<< EOF
      *<<<< PGM_DTC
       LEE-NXT-PRV-FAA SECTION.
       INI-LEE-NXT-PRV-FAA.
           MOVE SPACES TO MSG-COD-MENS.
           IF SCR-EDP-REQA > SPACES
               PERFORM LEE-NXT-PRV-EDP
           ELSE
               MOVE 'EDPNO' TO MSG-COD-MENS.
       FIN-LEE-NXT-PRV-FAA.
           EXIT.

       LEE-NXT-PRV SECTION.
       INI-LEE-NXT-PRV.
           IF SCR-DBC-REQA > SPACES
               PERFORM LEE-NXT-PRV-DBC
           ELSE
               PERFORM LEE-NXT-PRV-NOM.
       FIN-LEE-NXT-PRV.
           EXIT.

       LEE-NXT-PRV-DBC SECTION.
       INI-LEE-NXT-PRV-DBC.
           MOVE FIO-KDEF-S TO FIO-KDEF.
           MOVE SCR-DBC-REQA TO ADR-DBC-REQA.
           IF FRM-FFLD = FRM-FFLD-PF7
               MOVE FIO-GET-PRV TO FIO-CMND
           ELSE
               MOVE FIO-GET-NXT TO FIO-CMND.
       LUP-LEE-NXT-PRV-DBC.
           IF SCR-KEY-IDBC = 'NOM'
               MOVE 'DBC-GLS-NOMC'  TO FIO-AKEY
           ELSE
               MOVE 'DBC-IDC-ICLI'  TO FIO-AKEY.
           PERFORM SGC-FIO-DBC.
           MOVE FIO-STAT TO PGM-STAT-DBC.
           IF NOT FIO-STAT-OKS
               MOVE 'DBCNO' TO MSG-COD-MENS
               GO TO FIN-LEE-NXT-PRV-DBC.
           MOVE DBC-CIC-ICLI IN DBC TO EDP-CIC-IMDT IN EDP.
           MOVE 'F' TO EDP-IND-TINF IN EDP.
           MOVE ZEROES TO EDP-NUM-IEDP IN EDP.
           MOVE FIO-GET-NLS TO FIO-CMND.
           IF FRM-FFLD = FRM-FFLD-PF7
               MOVE 99 TO EDP-NUM-IEDP IN EDP
               MOVE FIO-GET-LEQ TO FIO-CMND.
           PERFORM SGC-FIO-EDP.
           IF FIO-STAT-OKS AND
              DBC-CIC-ICLI IN DBC = EDP-CIC-IMDT IN EDP AND
              EDP-IND-TINF IN EDP = 'F'
               PERFORM PUT-DBC
               MOVE '00' TO PGM-STAT-EDP
               MOVE ADR-EDP-REQA TO SCR-EDP-REQA
               MOVE ADR-DBC-REQA TO SCR-DBC-REQA
               MOVE 'DBCSI' TO MSG-COD-MENS
               GO TO FIN-LEE-NXT-PRV-DBC.
           IF FRM-FFLD = FRM-FFLD-PF7
               MOVE FIO-GET-PRV TO FIO-CMND
               GO TO LUP-LEE-NXT-PRV-DBC
           ELSE
               MOVE FIO-GET-NXT TO FIO-CMND
               GO TO LUP-LEE-NXT-PRV-DBC.
       FIN-LEE-NXT-PRV-DBC.
           EXIT.

       LEE-NXT-PRV-NOM SECTION.
       INI-LEE-NXT-PRV-NOM.
           MOVE 'NOM' TO SCR-KEY-IDBC.
           IF DBC-GLS-NOMC IN DBC > SPACES
               MOVE FIO-GET-KEY    TO FIO-CMND
               MOVE 'DBC-GLS-NOMC' TO FIO-AKEY
               PERFORM SGC-FIO-DBC
               IF FIO-STAT-OKS
                   IF FRM-FFLD = FRM-FFLD-PF7
                       MOVE FIO-GET-PRV TO FIO-CMND
                   ELSE
                       MOVE FIO-GET-NXT TO FIO-CMND
               ELSE
                   IF FRM-FFLD = FRM-FFLD-PF7
                       MOVE FIO-GET-LEQ TO FIO-CMND
                   ELSE
                       MOVE FIO-GET-NLS TO FIO-CMND
           ELSE
               IF FRM-FFLD = FRM-FFLD-PF7
                   MOVE FIO-GET-LEQ TO FIO-CMND
               ELSE
                   MOVE FIO-GET-NLS TO FIO-CMND.
       LUP-LEE-NXT-PRV-NOM.
           MOVE 'DBC-GLS-NOMC'  TO FIO-AKEY.
           PERFORM SGC-FIO-DBC.
           MOVE FIO-STAT TO PGM-STAT-DBC.
           IF NOT FIO-STAT-OKS
               MOVE 'DBCNO' TO MSG-COD-MENS
               GO TO FIN-LEE-NXT-PRV-NOM.
           MOVE DBC-CIC-ICLI IN DBC TO EDP-CIC-IMDT IN EDP.
           MOVE 'F' TO EDP-IND-TINF IN EDP.
           MOVE ZEROES TO EDP-NUM-IEDP IN EDP.
           MOVE FIO-GET-NLS TO FIO-CMND.
           IF FRM-FFLD = FRM-FFLD-PF7
               MOVE 99 TO EDP-NUM-IEDP IN EDP
               MOVE FIO-GET-LEQ TO FIO-CMND.
           PERFORM SGC-FIO-EDP.
           IF FIO-STAT-OKS AND
              DBC-CIC-ICLI IN DBC = EDP-CIC-IMDT IN EDP AND
              EDP-IND-TINF IN EDP = 'F'
               PERFORM PUT-DBC
               MOVE '00' TO PGM-STAT-EDP
               MOVE ADR-EDP-REQA TO SCR-EDP-REQA
               MOVE ADR-DBC-REQA TO SCR-DBC-REQA
               MOVE 'DBCSI' TO MSG-COD-MENS
               GO TO FIN-LEE-NXT-PRV-NOM.
           IF FRM-FFLD = FRM-FFLD-PF7
               MOVE FIO-GET-PRV TO FIO-CMND
               GO TO LUP-LEE-NXT-PRV-NOM
           ELSE
               MOVE FIO-GET-NXT TO FIO-CMND
               GO TO LUP-LEE-NXT-PRV-NOM.
       FIN-LEE-NXT-PRV-NOM.
           EXIT.

       LEE-NXT-PRV-EDP SECTION.
       INI-LEE-NXT-PRV-EDP.
           MOVE SCR-EDP-REQA TO ADR-EDP-REQA.
           MOVE ADR-VKEY IN ADR-EDP-REQA TO WSS-CIC-ICLI IN WSS-VARI.
           MOVE FIO-KDEF-S TO FIO-KDEF.
       LUP-NXT-PRV-EDP.
           IF FRM-FFLD = FRM-FFLD-PF5
               MOVE FIO-GET-PRV TO FIO-CMND
           ELSE
               MOVE FIO-GET-NXT TO FIO-CMND.
           PERFORM SGC-FIO-EDP.
           IF FIO-STAT-OKS AND
              EDP-CIC-IMDT IN EDP = WSS-CIC-ICLI IN WSS-VARI
               IF EDP-IND-TINF IN EDP = 'F'
                   MOVE '00' TO PGM-STAT-EDP
                   MOVE '00' TO PGM-STAT-DBC
                   MOVE ADR-EDP-REQA TO SCR-EDP-REQA
                   MOVE 'EDPSI' TO MSG-COD-MENS
                   GO TO FIN-LEE-NXT-PRV-EDP
               ELSE
                   GO TO LUP-NXT-PRV-EDP.
           MOVE 'EDPNO' TO MSG-COD-MENS.
       FIN-LEE-NXT-PRV-EDP.
           EXIT.
      *>>>>
       COM-CIC-EDS SECTION.
       INI-COM-CIC-EDS.
           MOVE DBC-CIC-ICLI IN DBC TO EDS-CIC-ICLI IN EDS.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM SGC-FIO-EDS.
           IF NOT FIO-STAT-OKS
               MOVE 'SGC' TO MSG-COD-SIST
               MOVE 'MESNEXIEDS' TO MSG-COD-MENS
               PERFORM GET-MSG
               MOVE FIO-STAT-NEX TO FIO-STAT
               GO TO FIN-COM-CIC-EDS.
       FIN-COM-CIC-EDS.      
               EXIT.

       BUS-COR-EDP SECTION.
       INI-BUS-COR-EDP.
           MOVE 0 TO EDP-NUM-IEDP IN FAA-FLD.
           MOVE EDP-CAI-IMDT IN FAA-FLD TO EDP-CAI-IMDT IN EDP.
           MOVE EDP-IIC-IMDT IN FAA-FLD TO EDP-IIC-IMDT IN EDP.
           MOVE 'F' TO EDP-IND-TINF IN EDP.
           MOVE 99 TO EDP-NUM-IEDP IN EDP.
           MOVE FIO-GET-LEQ TO FIO-CMND.
           PERFORM SGC-FIO-EDP.
           IF FIO-STAT-OKS AND
              EDP-CAI-IMDT IN FAA-FLD = EDP-CAI-IMDT IN EDP AND
              EDP-IIC-IMDT IN FAA-FLD = EDP-IIC-IMDT IN EDP AND
              EDP-IND-TINF IN EDP = 'F'
               MOVE EDP-NUM-IEDP IN EDP TO EDP-NUM-IEDP IN FAA-FLD.

           IF FIO-STAT-OKS
               MOVE FIO-END-BRW TO FIO-CMND
               PERFORM SGC-FIO-EDP.

           IF SCR-CCPP = 'ING' OR 'ACT'
               PERFORM BUS-COR-PEDP
               ADD 1 TO EDP-NUM-IEDP IN FAA-FLD.
           MOVE 1 TO WSS-ICOR.
       FIN-BUS-COR-EDP.
           EXIT.

       BUS-COR-PEDP SECTION.
       INI-BUS-COR-PEDP.
           MOVE EDP-CAI-IMDT IN FAA-FLD TO EDP-CAI-IMDT IN EDP.
           MOVE EDP-IIC-IMDT IN FAA-FLD TO EDP-IIC-IMDT IN EDP.
           MOVE 'P' TO EDP-IND-TINF IN EDP.
           MOVE 99 TO EDP-NUM-IEDP IN EDP.
           MOVE FIO-GET-LEQ TO FIO-CMND.
           PERFORM SGC-FIO-EDP.
           IF FIO-STAT-OKS AND
              EDP-CAI-IMDT IN FAA-FLD = EDP-CAI-IMDT IN EDP AND
              EDP-IIC-IMDT IN FAA-FLD = EDP-IIC-IMDT IN EDP AND
              EDP-IND-TINF IN EDP = 'P'
               IF EDP-NUM-IEDP IN EDP > EDP-NUM-IEDP IN FAA-FLD
                   MOVE EDP-NUM-IEDP IN EDP TO EDP-NUM-IEDP IN
                                                        FAA-FLD.

           IF FIO-STAT-OKS
               MOVE FIO-END-BRW TO FIO-CMND
               PERFORM SGC-FIO-EDP.

       FIN-BUS-COR-PEDP.
           EXIT.

       BUS-CIC-CLI SECTION.
       INI-BUS-CIC-CLI.
           IF DBC-NUM-ICLI IN FAA-FLD > ZEROES
      *IDC-CLI Busca Cliente por medio de IdC
               MOVE DBC-NUM-ICLI IN FAA-FLD TO DBC-NUM-ICLI IN DBC
               MOVE DBC-IND-ICLI IN FAA-FLD TO DBC-IND-ICLI IN DBC
               MOVE DBC-GLS-ICLI IN FAA-FLD TO DBC-GLS-ICLI IN DBC
               MOVE 'DBC-IDC-ICLI'  TO FIO-AKEY
      *<<<< PGM_DTC
               MOVE 'IDC' TO SCR-KEY-IDBC
      *>>>>
               MOVE FIO-GET-KEY-ALT TO FIO-CMND
               PERFORM GET-CLI
               MOVE DBC-GLS-NOMC IN DBC TO CPT-STRN
               PERFORM CPT-BLKS
               MOVE CPT-STRN TO DBC-GLS-NOMC IN FAA-FLD
      *        MOVE DBC-GLS-NOMC IN DBC TO DBC-GLS-NOMC IN FAA-FLD
               IF MSG-COD-MENS > SPACES
                   MOVE FIO-STAT-NEX TO FIO-STAT
                   GO TO FIN-BUS-CIC-CLI
               ELSE
                   MOVE '00' TO PGM-STAT-DBC
                   PERFORM COM-CIC-EDS
                   IF FIO-STAT-NEX = FIO-STAT
                       GO TO FIN-BUS-CIC-CLI
                   ELSE
      *<<<< PGM_DTC
                      MOVE ADR-DBC-REQA TO SCR-DBC-REQA
      *>>>>
                      MOVE DBC-CAI-ICLI IN DBC TO
                            EDP-CAI-IMDT IN FAA-FLD
                      MOVE DBC-IIC-ICLI IN DBC TO
                            EDP-IIC-IMDT IN FAA-FLD
           ELSE
           IF DBC-GLS-NOMC IN FAA-FLD > SPACES
               MOVE SPACES TO DBC-GLS-NOMC IN DBC
      *NOM-CLI Busca Cliente por medio del Nombre

               MOVE DBC-GLS-NOMC IN FAA-FLD TO STR-GLS-GSTR
               PERFORM STR-UNS
               MOVE STR-GLS-FUNS IN STR-VARI(1) TO DBC-GLS-APAT IN DBC
               MOVE STR-GLS-FUNS IN STR-VARI(2) TO DBC-GLS-AMAT IN DBC
               MOVE STR-GLS-FUNS IN STR-VARI(3) TO DBC-GLS-NOMB IN DBC

               MOVE 'DBC-GLS-NOMC'  TO FIO-AKEY
      *<<<< PGM_DTC
               MOVE 'NOM' TO SCR-KEY-IDBC
      *>>>>
               MOVE FIO-GET-NLS-ALT TO FIO-CMND
               PERFORM GET-CLI
               IF MSG-COD-MENS > SPACES
                   MOVE FIO-STAT-NEX TO FIO-STAT
                   GO TO FIN-BUS-CIC-CLI
               ELSE
                   MOVE '00' TO PGM-STAT-DBC
                   PERFORM COM-CIC-EDS
                   IF FIO-STAT-NEX = FIO-STAT
                       GO TO FIN-BUS-CIC-CLI
                   ELSE
      *<<<< PGM_DTC
                       MOVE ADR-DBC-REQA TO SCR-DBC-REQA
      *>>>>
                       MOVE DBC-GLS-NOMC IN DBC TO CPT-STRN
                       PERFORM CPT-BLKS
                       MOVE CPT-STRN TO DBC-GLS-NOMC IN FAA-FLD
                       MOVE DBC-NUM-ICLI IN DBC TO
                            DBC-NUM-ICLI IN FAA-FLD
                       MOVE DBC-VRF-ICLI IN DBC TO
                            DBC-VRF-ICLI IN FAA-FLD
                       MOVE DBC-IND-ICLI IN DBC TO
                            DBC-IND-ICLI IN FAA-FLD
                       MOVE DBC-GLS-ICLI IN DBC TO
                            DBC-GLS-ICLI IN FAA-FLD
                       MOVE DBC-CAI-ICLI IN DBC TO
                            EDP-CAI-IMDT IN FAA-FLD
                       MOVE DBC-IIC-ICLI IN DBC TO
                            EDP-IIC-IMDT IN FAA-FLD.
           MOVE 'F' TO EDP-IND-TINF IN EDP.
           PERFORM PUT-DBC.
       FIN-BUS-CIC-CLI.
           EXIT.

       PUT-EDP SECTION.
       INI-PUT-EDP.
           MOVE 'S' TO EDP-IND-PODE IN FAA-FLD( WSS-I ).
       FIN-PUT-EDP.
           EXIT.
 
       PUT-DBC SECTION.
       INI-PUT-DBC.
       FIN-PUT-DBC.
           EXIT.

       COPY SGCBFDBC.
       COPY SGCBFEDS.
       COPY SGCBFDCE.
       COPY SGCBFCCM.
       COPY GNSBFRCE.
       COPY GNSBEGLS.
       COPY SGCBGCLI.
       COPY GNSBGSTR.
       COPY GNSBGCPT.
       COPY TABBFUSR.
       COPY TABBBUSR.
       COPY TABBVUSR.
       COPY TABBVTDU.
      *>>>>
      *<<<< PGM_DTC
      *>>>>
      *<<<< PGM_DTC
      *>>>>
      *<<<< PGM_DTC
      *>>>>
