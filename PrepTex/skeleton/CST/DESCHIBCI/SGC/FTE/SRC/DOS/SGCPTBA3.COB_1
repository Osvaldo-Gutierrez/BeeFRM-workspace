       IDENTIFICATION DIVISION.
      *=======================
       PROGRAM-ID.      SGCPTBA3.
       AUTHOR.          RENE MAHMUD V.
       DATE-WRITTEN.    25/06/93.
       DATE-COMPILED.
       REMARKS.
      ******************************************************************
      *                                                                *
      *  SISTEMA    : S.G.C.                                           *
      *  SUBSISTEMA :                                                  *
      *  ANALISTA   : RENE MAHMUD.                                     *
      *  OBJETIVO   : ACTUALIZA TABLAS DCP Y DCE DEL DIRECTORIO A      *
      *               PARTIR DE ARCHIVO SAM, LA MODIFICACION ES SOBRE  *
      *               LOS CAMPOS DCP-COD-TBAN Y DCE-COD-TBAN           *
      *               DCE-COD-TBAN.                                    *
      *                                                                *
      * ARCHIVOS Y TABLAS                                              *
      *     ENTRADA :  - SGCV0BAN : ARCHIVO CON CODIGOS DE TIPO DE     *
      *                             BANCA.                             *
      *                                                                *
      *        I       - DBC , TABLA B.D. 100.                         *
      *     I  -  O :  - DCP , TABLA B.D. 100.                         *
      *                - DCE , TABLA B.D. 100.                         *
      *                                                                *
      *     SALIDA  :                                                  *
      *                                                                *
      ******************************************************************
      *  MANTENCIONES :                                                *
      *  =============                                                 *
      *                                                                *
      *     PROGRAMADOR : G. URETA Q.                                  *
      *     FECHA       : 19/01/1998.-                                 *
      *     CAMBIO      : SE AGRANDA A 3 BYTES CAMPO TIPO BANCA.       *
      *                                                                *
      ******************************************************************
      *                                                                *
      *     PROGRAMADOR : XXXXXXXX.                                    *
      *     FECHA       : DD/MM/SSAA.-                                 *
      *     CAMBIO      : XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX      *
      *                                                                *
      ******************************************************************


           EJECT
       ENVIRONMENT DIVISION.
      *====================
       CONFIGURATION SECTION.
       SPECIAL-NAMES.
           C01 IS CANAL-1.
       INPUT-OUTPUT SECTION.
       FILE-CONTROL.
      *
           SELECT  SGCV0BAN ASSIGN TO  DA-S-SGCV0BAN
                                       STATUS IS FS-SGCV0BAN.
           EJECT
       DATA DIVISION.
      *=============
       FILE SECTION.
       FD  SGCV0BAN
           LABEL RECORDS STANDARD
           RECORD CONTAINS 11
           BLOCK CONTAINS 0 RECORDS.
       01  REG-SGCV0BAN.
           02 SGCV0BAN-IDC-ICLI             PIC X(08).
           02 SGCV0BAN-COD-TBAN             PIC X(03).
      *

       WORKING-STORAGE SECTION.
      *-----------------------
       01  W-ACUMULADORES.
           02 WA-BAN-LEI                    PIC 9(06).
           02 WA-DBC-LEI                    PIC 9(06).
           02 WA-DBC-INE                    PIC 9(06).
           02 WA-DBC-ACT                    PIC 9(06).
           02 WA-DBC-NAC                    PIC 9(06).
           02 WA-DCP-LEI                    PIC 9(06).
           02 WA-DCP-INE                    PIC 9(06).
           02 WA-DCP-MOD                    PIC 9(06).
           02 WA-DCE-LEI                    PIC 9(06).
           02 WA-DCE-INE                    PIC 9(06).
           02 WA-DCE-MOD                    PIC 9(06).

       01  W-FILE-STATUS.
           02 FS-SGCV0BAN                   PIC 9(02).

       01  W-SWITCH.
           02 WS-RETURN-CODE                PIC 9(03).
           02 WS-DBC-RTN-CODE               PIC X(02).

       01  W-CONSTANTES.
           02 CC-TAB                        PIC X(15) VALUE SPACES.

       01  WP-FECHA-PARAM.
           03 FILLER                        PIC X(17).
           03 WS-FECHA-PROC                 PIC X(08).

       01  W-REG-DE-TRABAJO.
           02 WR-INFOR-ERROR.
              03 WR-SECC-ERR                PIC X(10).
              03 WR-PARR-ERR                PIC X(30).
              03 WR-ARCH-ERR                PIC X(20).
              03 WR-OPER-ERR                PIC X(40).
              03 WR-COD-RET                 PIC 9(02).
              03 WR-REG-ERR                 PIC X(12).

           COPY BIBBAUD1.

      ******************************************************************
      *      USER INFORMATION BLOCK                                    *
      ******************************************************************
      *
       01  UIB.
           05 FILLER                 PIC X(32) VALUE 'SGCPTBA3'.
      *
      ******************************************************************
      *      REQUEST AREA                                              *
      ******************************************************************
      *
       01  REQ-DBC-AREA.
           02 REQ-DBC-CMD                   PIC X(05).
           02 REQ-DBC-TBLNM                 PIC X(03) VALUE 'DBC'.
           02 REQ-DBC-KEYNM                 PIC X(05) VALUE 'DBC02'.
           02 REQ-DBC-RTN-CODE              PIC X(02) VALUE SPACES.
           02 REQ-DBC-INT-RTN-CD            PIC X(01).
           02 REQ-DBC-DBID                  PIC S9(04) COMP VALUE +100.
           02 REQ-DBC-TBLID                 PIC X(07).
           02 FILLER                        PIC X(25).
           02 REQ-DBC-COUNT-MAX             PIC S9(04) COMP.
           02 REQ-DBC-IO-COUNT              PIC S9(04) COMP.
           02 FILLER                        PIC X(22).
           02 REQ-DBC-KEY-VALUE             PIC X(12).

       01  REQ-DCE-AREA.
           02 REQ-DCE-CMD                   PIC X(05).
           02 REQ-DCE-TBLNM                 PIC X(03) VALUE 'DCE'.
           02 REQ-DCE-KEYNM                 PIC X(05) VALUE 'DCE00'.
           02 REQ-DCE-RTN-CODE              PIC X(02) VALUE SPACES.
           02 REQ-DCE-INT-RTN-CD            PIC X(01).
           02 REQ-DCE-DBID                  PIC S9(04) COMP VALUE +100.
           02 REQ-DCE-TBLID                 PIC X(07).
           02 FILLER                        PIC X(25).
           02 REQ-DCE-COUNT-MAX             PIC S9(04) COMP.
           02 REQ-DCE-IO-COUNT              PIC S9(04) COMP.
           02 FILLER                        PIC X(22).
           02 REQ-DCE-KEY-VALUE             PIC X(12).

       01  REQ-DCP-AREA.
           02 REQ-DCP-CMD                   PIC X(05).
           02 REQ-DCP-TBLNM                 PIC X(03) VALUE 'DCP'.
           02 REQ-DCP-KEYNM                 PIC X(05) VALUE 'DCP00'.
           02 REQ-DCP-RTN-CODE              PIC X(02) VALUE SPACES.
           02 REQ-DCP-INT-RTN-CD            PIC X(01).
           02 REQ-DCP-DBID                  PIC S9(04) COMP VALUE +100.
           02 REQ-DCP-TBLID                 PIC X(07).
           02 FILLER                        PIC X(25).
           02 REQ-DCP-COUNT-MAX             PIC S9(04) COMP.
           02 REQ-DCP-IO-COUNT              PIC S9(04) COMP.
           02 FILLER                        PIC X(22).
           02 REQ-DCP-KEY-VALUE             PIC X(12).

       01  REG-DBC.
           COPYDD DGC-R-DBC.DGC-E-DBC00(PROD),01,D

       01  REG-DCP.
           COPYDD DGC-R-DCP.DGC-E-DCP00(PROD),01,D

       01  REG-DCE.
           COPYDD DGC-R-DCE.DGC-E-DCE00(PROD),01,D

      *
      ******************************************************************
      *                 ELEMENT LIST                                   *
      ******************************************************************
      *
       01  ELEM-LIST.
           03 ELEM-1                        PIC X(05).
           03 ELEM-SEC                      PIC X(01).
           03 FILLER                        PIC X(05) VALUE SPACES.

           EJECT
       PROCEDURE DIVISION.
      *===================
           ENTRY 'DBMSCBL'.
       A-CONTROL SECTION.
           COPY BIBBAUD2.
       AA-INICIO.
           PERFORM B-INICIAR.
       AB-PROCESO.
           PERFORM C-PROCESAR.
       AC-TERMINO.
           PERFORM D-TERMINAR.
           GOBACK.

           EJECT
       B-INICIAR SECTION.
      *==================
       BA-CONTROL.
      *-----------
           PERFORM BB-INICIALIZAR-VARIABLES.
           PERFORM BC-ABRIR-ARCHIVOS.
           PERFORM BD-ACEPTAR-FECHA.
           GO TO BZ-FIN-SECTION.

       BB-INICIALIZAR-VARIABLES.
      * ------------------------
           INITIALIZE W-ACUMULADORES
                      W-REG-DE-TRABAJO
                      W-FILE-STATUS
                      W-SWITCH.

       BC-ABRIR-ARCHIVOS.
      *------------------
           OPEN  INPUT   SGCV0BAN.

           IF FS-SGCV0BAN NOT = 00 THEN
              MOVE 100                                 TO WS-RETURN-CODE
              MOVE 'B-INICIAR'                         TO WR-SECC-ERR
              MOVE 'BC-ABRIR-ARCHIVO'                  TO WR-PARR-ERR
              MOVE 'SGCV0BAN'                          TO WR-ARCH-ERR
              MOVE 'OPEN INPUT'                        TO WR-OPER-ERR
              MOVE FS-SGCV0BAN                         TO WR-COD-RET
              PERFORM D-TERMINAR
              GOBACK
           END-IF.

       BD-ACEPTAR-FECHA.
      *------------------
           ACCEPT WP-FECHA-PARAM.
           IF WS-FECHA-PROC IS NOT NUMERIC
              MOVE 100                                 TO WS-RETURN-CODE
              MOVE 'B-INICIAR'                         TO WR-SECC-ERR
              MOVE 'BD-ACEPTAR-FECHA'                  TO WR-PARR-ERR
              MOVE 'PARAMETR'                          TO WR-ARCH-ERR
              MOVE 'ACCEPT    '                        TO WR-OPER-ERR
              MOVE 14                                  TO WR-COD-RET
              PERFORM D-TERMINAR
              GOBACK
           END-IF.

       BZ-FIN-SECTION.
      *---------------
           EXIT.


           EJECT
       C-PROCESAR SECTION.
      *===================
       CA-CONTROL.
      *-----------
           PERFORM CB-READ-SGCV0BAN.
           PERFORM CC-MODIFICA-DCP-DCE   UNTIL
                   FS-SGCV0BAN = 10.
           GO TO CZ-FIN-SECTION.

       CB-READ-SGCV0BAN.
      *-----------------
           READ SGCV0BAN.
           IF FS-SGCV0BAN NOT = 00 AND NOT = 10 THEN
              MOVE 100                                 TO WS-RETURN-CODE
              MOVE 'C-PROCESAR'                        TO WR-SECC-ERR
              MOVE 'CB-READ-SGCV0BAN'                  TO WR-PARR-ERR
              MOVE 'SGCV0BAN'                          TO WR-ARCH-ERR
              MOVE 'READ'                              TO WR-OPER-ERR
              MOVE FS-SGCV0BAN                         TO WR-COD-RET
              PERFORM D-TERMINAR
              GOBACK
           ELSE
              IF FS-SGCV0BAN = 00 THEN
                 ADD 1 TO WA-BAN-LEI
              END-IF
           END-IF.

       CC-MODIFICA-DCP-DCE.
      *--------------------
           PERFORM CD-ACTUALIZA-DBC.
           IF WS-DBC-RTN-CODE = '  '
              IF DBC-IND-TICL = 'E'
                 PERFORM CE-ACTUALIZA-DCE
                 IF REQ-DCE-RTN-CODE = '  '
                    PERFORM CH-ACTUALIZA-DBC
                 END-IF
              ELSE
                 PERFORM CF-ACTUALIZA-DCP
                 IF REQ-DCP-RTN-CODE = '  '
                    PERFORM CH-ACTUALIZA-DBC
                 END-IF
              END-IF
           ELSE
              DISPLAY 'REG. INEXISTENTE : ' REG-SGCV0BAN
           END-IF.
           PERFORM CB-READ-SGCV0BAN.

       CD-ACTUALIZA-DBC.
      *-----------------
           PERFORM CD1-REDKY-DBC.
           MOVE REQ-DBC-RTN-CODE TO WS-DBC-RTN-CODE.

       CD1-REDKY-DBC.
      *--------------
           MOVE SGCV0BAN-IDC-ICLI TO REQ-DBC-KEY-VALUE.
           MOVE 'REDKY'           TO REQ-DBC-CMD.
           MOVE 'DBC00'           TO ELEM-1.
           CALL 'DBNTRY' USING UIB REQ-DBC-AREA DBC ELEM-LIST.
           IF REQ-DBC-RTN-CODE NOT = '  ' AND NOT = '14' THEN
              MOVE 100                              TO WS-RETURN-CODE
              MOVE 'C-PROCESAR SECTION'             TO WR-SECC-ERR
              MOVE 'CD1-REDKY-DBC'                  TO WR-PARR-ERR
              MOVE 'DBC'                            TO WR-ARCH-ERR
              MOVE 'REDKY'                          TO WR-OPER-ERR
              MOVE REQ-DBC-RTN-CODE                 TO WR-COD-RET
              PERFORM D-TERMINAR
              GOBACK
           END-IF.

       CE-ACTUALIZA-DCE.
      *-----------------
           PERFORM CE1-RDUKY-DCE.
           IF REQ-DCE-RTN-CODE = '  '
              ADD 1 TO WA-DCE-LEI
              PERFORM CE2-UPDAT-DCE
              ADD 1 TO WA-DCE-MOD
           ELSE
              ADD 1 TO WA-DCE-INE
              PERFORM CE3-RELES-DCE
           END-IF.

       CE1-RDUKY-DCE.
      *--------------
           MOVE DBC-CIC-ICLI      TO REQ-DCE-KEY-VALUE.
           MOVE 'RDUKY'           TO REQ-DCE-CMD.
           MOVE 'DCE'             TO REQ-DCE-TBLNM.
           MOVE 'DCE00'           TO ELEM-1.
           CALL 'DBNTRY' USING UIB REQ-DCE-AREA DCE ELEM-LIST.
           IF REQ-DCE-RTN-CODE NOT = '  ' AND NOT = '14' THEN
              MOVE 100                              TO WS-RETURN-CODE
              MOVE 'C-PROCESAR SECTION'             TO WR-SECC-ERR
              MOVE 'CE1-RDUKY-DCE'                  TO WR-PARR-ERR
              MOVE 'DCE'                            TO WR-ARCH-ERR
              MOVE 'RDUKY'                          TO WR-OPER-ERR
              MOVE REQ-DCE-RTN-CODE                 TO WR-COD-RET
              PERFORM D-TERMINAR
              GOBACK
           END-IF.

       CE2-UPDAT-DCE.
      *--------------
           MOVE SGCV0BAN-COD-TBAN TO DCE-COD-TBAN.
           MOVE WS-FECHA-PROC     TO DCE-FEC-FTRN.
           MOVE 'UPDAT'           TO REQ-DCE-CMD.
           CALL 'DBNTRY' USING UIB REQ-DCE-AREA DCE ELEM-LIST.
           IF REQ-DCE-RTN-CODE NOT = '  ' THEN
              MOVE 100                              TO WS-RETURN-CODE
              MOVE 'C-PROCESAR SECTION'             TO WR-SECC-ERR
              MOVE 'CE2-UPDAT-DCE'                  TO WR-PARR-ERR
              MOVE 'DCE'                            TO WR-ARCH-ERR
              MOVE 'UPDAT'                          TO WR-OPER-ERR
              MOVE REQ-DCE-RTN-CODE                 TO WR-COD-RET
              PERFORM D-TERMINAR
              GOBACK
           END-IF.

       CE3-RELES-DCE.
      *--------------
           MOVE 'RELES'           TO REQ-DCE-CMD.
           CALL 'DBNTRY' USING UIB REQ-DCE-AREA DCE ELEM-LIST.
           IF REQ-DCE-RTN-CODE NOT = '  ' AND NOT = '14' THEN
              MOVE 100                              TO WS-RETURN-CODE
              MOVE 'C-PROCESAR SECTION'             TO WR-SECC-ERR
              MOVE 'CE3-RELES-DCE'                  TO WR-PARR-ERR
              MOVE 'DCE'                            TO WR-ARCH-ERR
              MOVE 'RELES'                          TO WR-OPER-ERR
              MOVE REQ-DCE-RTN-CODE                 TO WR-COD-RET
              PERFORM D-TERMINAR
              GOBACK
           END-IF.

       CF-ACTUALIZA-DCP.
      *-----------------
           PERFORM CF1-RDUKY-DCP.
           IF REQ-DCP-RTN-CODE = '  '
              ADD 1 TO WA-DCP-LEI
              PERFORM CF2-UPDAT-DCP
              ADD 1 TO WA-DCP-MOD
           ELSE
              ADD 1 TO WA-DCP-INE
              PERFORM CF3-RELES-DCP
           END-IF.

       CF1-RDUKY-DCP.
      *-------------
           MOVE DBC-CIC-ICLI      TO REQ-DCP-KEY-VALUE.
           MOVE 'RDUKY'           TO REQ-DCP-CMD.
           MOVE 'DCP00'           TO ELEM-1.
           CALL 'DBNTRY' USING UIB REQ-DCP-AREA DCP ELEM-LIST.
           IF REQ-DCP-RTN-CODE NOT = '  ' AND NOT = '14' THEN
              MOVE 100                              TO WS-RETURN-CODE
              MOVE 'C-PROCESAR SECTION'             TO WR-SECC-ERR
              MOVE 'CF1-RDUKY-DCP'                  TO WR-PARR-ERR
              MOVE 'DCP'                            TO WR-ARCH-ERR
              MOVE 'RDUKY'                          TO WR-OPER-ERR
              MOVE REQ-DCP-RTN-CODE                 TO WR-COD-RET
              PERFORM D-TERMINAR
              GOBACK
           END-IF.

       CF2-UPDAT-DCP.
      *--------------
           MOVE SGCV0BAN-COD-TBAN TO DCP-COD-TBAN.
           MOVE WS-FECHA-PROC     TO DCP-FEC-FTRN.
           MOVE 'UPDAT'           TO REQ-DCP-CMD.
           CALL 'DBNTRY' USING UIB REQ-DCP-AREA DCP ELEM-LIST.
           IF REQ-DCP-RTN-CODE NOT = '  ' THEN
              MOVE 100                              TO WS-RETURN-CODE
              MOVE 'C-PROCESAR SECTION'             TO WR-SECC-ERR
              MOVE 'CF-UPDAT-DCP'                   TO WR-PARR-ERR
              MOVE 'DCP'                            TO WR-ARCH-ERR
              MOVE 'UPDAT'                          TO WR-OPER-ERR
              MOVE REQ-DCP-RTN-CODE                 TO WR-COD-RET
              PERFORM D-TERMINAR
              GOBACK
           END-IF.

       CF3-RELES-DCP.
      *--------------
           MOVE 'RELES'           TO REQ-DCP-CMD.
           CALL 'DBNTRY' USING UIB REQ-DCP-AREA DCP ELEM-LIST.
           IF REQ-DCP-RTN-CODE NOT = '  ' THEN
              MOVE 100                              TO WS-RETURN-CODE
              MOVE 'C-PROCESAR SECTION'             TO WR-SECC-ERR
              MOVE 'CF3-RELES-DCP'                  TO WR-PARR-ERR
              MOVE 'DCP'                            TO WR-ARCH-ERR
              MOVE 'RELES'                          TO WR-OPER-ERR
              MOVE REQ-DCP-RTN-CODE                 TO WR-COD-RET
              PERFORM D-TERMINAR
              GOBACK
           END-IF.

       CH-ACTUALIZA-DBC.
      *-----------------
           PERFORM CH1-RDUKY-DBC.
           IF REQ-DBC-RTN-CODE = '  '
              PERFORM CH2-UPDAT-DBC
              ADD 1 TO WA-DBC-ACT
           ELSE
              ADD 1 TO WA-DBC-NAC
              PERFORM CH3-RELES-DBC
           END-IF.

       CH1-RDUKY-DBC.
      *-------------
      *    MOVE DBC-CIC-ICLI      TO REQ-DBC-KEY-VALUE.
           MOVE 'RDUKY'           TO REQ-DBC-CMD.
           MOVE 'DBC00'           TO ELEM-1.
           CALL 'DBNTRY' USING UIB REQ-DBC-AREA DBC ELEM-LIST.
           IF REQ-DBC-RTN-CODE NOT = '  ' AND NOT = '14' THEN
              MOVE 100                              TO WS-RETURN-CODE
              MOVE 'C-PROCESAR SECTION'             TO WR-SECC-ERR
              MOVE 'CH1-RDUKY-DBC'                  TO WR-PARR-ERR
              MOVE 'DBC'                            TO WR-ARCH-ERR
              MOVE 'RDUKY'                          TO WR-OPER-ERR
              MOVE REQ-DBC-RTN-CODE                 TO WR-COD-RET
              PERFORM D-TERMINAR
              GOBACK
           END-IF.

       CH2-UPDAT-DBC.
      *--------------
           MOVE WS-FECHA-PROC     TO DBC-FEC-FTRN.
           MOVE 'UPDAT'           TO REQ-DBC-CMD.
           CALL 'DBNTRY' USING UIB REQ-DBC-AREA DBC ELEM-LIST.
           IF REQ-DBC-RTN-CODE NOT = '  ' THEN
              MOVE 100                              TO WS-RETURN-CODE
              MOVE 'C-PROCESAR SECTION'             TO WR-SECC-ERR
              MOVE 'CH-UPDAT-DBC'                   TO WR-PARR-ERR
              MOVE 'DBC'                            TO WR-ARCH-ERR
              MOVE 'UPDAT'                          TO WR-OPER-ERR
              MOVE REQ-DBC-RTN-CODE                 TO WR-COD-RET
              PERFORM D-TERMINAR
              GOBACK
           END-IF.

       CH3-RELES-DBC.
      *--------------
           MOVE 'RELES'           TO REQ-DBC-CMD.
           CALL 'DBNTRY' USING UIB REQ-DBC-AREA DBC ELEM-LIST.
           IF REQ-DBC-RTN-CODE NOT = '  ' THEN
              MOVE 100                              TO WS-RETURN-CODE
              MOVE 'C-PROCESAR SECTION'             TO WR-SECC-ERR
              MOVE 'CH3-RELES-DBC'                  TO WR-PARR-ERR
              MOVE 'DBC'                            TO WR-ARCH-ERR
              MOVE 'RELES'                          TO WR-OPER-ERR
              MOVE REQ-DBC-RTN-CODE                 TO WR-COD-RET
              PERFORM D-TERMINAR
              GOBACK
           END-IF.

       CZ-FIN-SECTION.
      *---------------
           EXIT.

           EJECT
       D-TERMINAR SECTION.
      *===================
       DA-CONTROL.
      *-----------
           PERFORM DB-ENVIA-MSG-SEGUN-TERM.
           PERFORM DC-ESTADISTICAS.
           PERFORM DD-VERIFICA-PROCESO.
           PERFORM DF-CERRAR-ARCHIVOS.
           GO TO   DZ-FIN-SECTION.

       DB-ENVIA-MSG-SEGUN-TERM.
      *------------------------
           IF WS-RETURN-CODE = 00 THEN
              DISPLAY CC-TAB '***************************************'
                              UPON CONSOLE
              DISPLAY CC-TAB '*   PROCESO TERMINO EN FORMA NORMAL   *'
                              UPON CONSOLE
              DISPLAY CC-TAB '***************************************'
                              UPON CONSOLE
              DISPLAY CC-TAB '***************************************'
              DISPLAY CC-TAB '*   PROCESO TERMINO EN FORMA NORMAL   *'
              DISPLAY CC-TAB '***************************************'
           ELSE
              MOVE 100 TO RETURN-CODE
              DISPLAY CC-TAB '***************************************'
                              UPON CONSOLE
              DISPLAY CC-TAB '***************************************'
                              UPON CONSOLE
              DISPLAY CC-TAB '***   TERMINO ERRONEO DEL PROCESO   ***'
                              UPON CONSOLE
              DISPLAY CC-TAB '***************************************'
                              UPON CONSOLE
              DISPLAY CC-TAB '***************************************'
                              UPON CONSOLE
              DISPLAY CC-TAB
              DISPLAY CC-TAB '***************************************'
              DISPLAY CC-TAB '***************************************'
              DISPLAY CC-TAB '***   TERMINO ERRONEO DEL PROCESO   ***'
              DISPLAY CC-TAB '***************************************'
              DISPLAY CC-TAB '***************************************'
              PERFORM DE-MOSTRAR-ERROR
           END-IF.

       DC-ESTADISTICAS.
      *----------------
           DISPLAY CC-TAB.
           DISPLAY CC-TAB '***************************************'.
           DISPLAY CC-TAB '*                                     *'.
           DISPLAY CC-TAB '*     ESTADISTICAS DEL  PROCESO       *'.
           DISPLAY CC-TAB '*     PROGRAMA      :  SGCPTBA3       *'.
           DISPLAY CC-TAB '*                                     *'.
           DISPLAY CC-TAB '***************************************'.
           DISPLAY CC-TAB
           DISPLAY CC-TAB 'REG. LEIDOS DESDE SGCV0BAN    : ' WA-BAN-LEI
           DISPLAY CC-TAB
           DISPLAY CC-TAB 'REG. LEIDOS TABLA DBC         : ' WA-DBC-LEI
           DISPLAY CC-TAB 'REG. INEXISTENTE TABLA DBC    : ' WA-DBC-INE
           DISPLAY CC-TAB
           DISPLAY CC-TAB 'REG. ACTUALIZADOS TABLA DBC   : ' WA-DBC-ACT
           DISPLAY CC-TAB 'REG. NO ACTUALIZ. TABLA DBC   : ' WA-DBC-NAC
           DISPLAY CC-TAB
           DISPLAY CC-TAB
           DISPLAY CC-TAB 'REG. LEIDOS TABLA DCP         : ' WA-DCP-LEI
           DISPLAY CC-TAB 'REG. INEXISTENTE TABLA DCP    : ' WA-DCP-INE
           DISPLAY CC-TAB 'REG. MODIFICADOS TABLA DCP    : ' WA-DCP-MOD
           DISPLAY CC-TAB
           DISPLAY CC-TAB 'REG. LEIDOS TABLA DCE         : ' WA-DCE-LEI
           DISPLAY CC-TAB 'REG. INEXISTENTE TABLA DCE    : ' WA-DCE-INE
           DISPLAY CC-TAB 'REG. MODIFICADOS TABLA DCE    : ' WA-DCE-MOD
           DISPLAY CC-TAB
           DISPLAY CC-TAB '***************************************'.

       DD-VERIFICA-PROCESO.
      *--------------------
           IF WA-DCP-MOD = 0 AND WA-DCE-MOD = 0 AND
              WS-RETURN-CODE = 0
              DISPLAY CC-TAB
              DISPLAY CC-TAB '***************************************'
              DISPLAY CC-TAB '*  NO SE ENCONTRARON REGISTROS EN LAS *'
              DISPLAY CC-TAB '* TABLAS DBC DCP Y DCE PARA MODIFICAR *'
              DISPLAY CC-TAB '***************************************'
           END-IF.

       DE-MOSTRAR-ERROR.
      *-----------------
           DISPLAY CC-TAB '*****************************************'.
           DISPLAY CC-TAB '* ERROR FUE EN SECCION : ' WR-SECC-ERR.
           DISPLAY CC-TAB '* PARRAFO              : ' WR-PARR-ERR.
           DISPLAY CC-TAB '* ARCHIVO/TABLA        : ' WR-ARCH-ERR.
           DISPLAY CC-TAB '* OPERACION            : ' WR-OPER-ERR.
           DISPLAY CC-TAB '* CODIGO DE RETORNO    : ' WR-COD-RET.
           DISPLAY CC-TAB '* LLAVE REG. PROCESADO : ' WR-REG-ERR.

       DF-CERRAR-ARCHIVOS.
      *-------------------
           CLOSE   SGCV0BAN.

       DZ-FIN-SECTION.
      *---------------
           EXIT.
