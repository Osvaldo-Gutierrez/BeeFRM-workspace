       IDENTIFICATION DIVISION.
      *========================
       PROGRAM-ID.   SGCPUCAP.
       AUTHOR.       CONSIST.
       DATE-WRITTEN. 08-May-19 11:36 AM.

      * NOMBRE PROGRAMA                   SGCPUCAP
      * VERSION PGM                       3.1
      * VERSION SKL                       08.07.21
      * OPCION                            UPD
      * ARCHIVO BASE                      SGCADP
      * PANTALLA                          SGCCAP
      * INP/OUT                           DATACOM
      * TAMANO COMMAREA                   250


       ENVIRONMENT DIVISION.
      *=====================
       CONFIGURATION SECTION.
      *----------------------
       SPECIAL-NAMES.
               DECIMAL-POINT IS COMMA.

       DATA DIVISION.
      *==============

       WORKING-STORAGE SECTION.
      *------------------------
      * COPY GNSWGSCR.
       COPY GNSWGCVT.
       77  WSS-TAG-SGCPUCAP-INI PIC X(125) VALUE                        
           '<IDNPGM NOM=$SGCPUCAP$ SKL=$08.07.21$ VSN=${vsnpu}$        
      -    'GEN=$08-May-19 11:36 AM$ FNC=${fncpu}$/>'.    
       COPY GNSWCSCR.
       COPY GNSWVSCR.
      *<<<< FIN_SCR_VARI
       COPY GNSWGRQA REPLACING
                     ==01  ADR-REQA== BY ==02  SCR-DBC-REQA==.
           02 SCR-KEY-IDBC                     PIC X(03).
      *>>>>
       COPY SGCWICAP.
       COPY SGCBRADP.


       COPY GNSWVIDD.
       COPY GNSWGRQA.
       COPY GNSWGUIB.
       COPY GNSWGELS.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-ADP-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-TAB-REQA==.
       COPY GNSBRTAB.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-MSC-REQA==.
       COPY GNSBRMSC.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-MSG-REQA==.
       COPY GNSBRMSG.
       COPY GNSWCFIO.
       COPY GNSWVFIO.
       COPY GNSWGFRM.
       COPY GNSWVNUM.
       COPY GNSWCNUM.
       COPY GNSWGFEC.
       COPY GNSWGHOY.
       COPY GNSWCVRF.
       COPY GNSWVVRF.
       COPY GNSWGIDC.
       COPY GNSWGSYS.

      *<<<< WSS_DTC
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-REC-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-CCM-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-DBC-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-RCE-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-EDP-REQA==.
      *>>>>
      *<<<< WSS_IBM
       COPY SGCBRDBC.
       COPY SGCBRREC.
       COPY SGCBRCCM.
       COPY SGCBREDP.
       COPY GNSWGCPT.
       COPY GNSWGSTR.
       COPY GNSWGQUE.
       COPY GNSBRRCE.
        01  WSS-VARI.
           03  WSS-COD-MENS.
               05 WSS-GLS-MENS                            PIC X(09).
               05 WSS-IND-RSTR                            PIC X(01).
               05 WSS-IND-CMTR                            PIC X(01).
      *ALD/4-JUL-1989
           03  WSS-COD-IPOD.
      *
               05 WSS-GLS-IPO1                            PIC X(01).
               05 WSS-GLS-IPO2                            PIC X(02).
           03  WSS-GLS-NOMB.
               05 FILLER                 VALUE SPACES     PIC X(10).
               05 WSS-NOMB                                PIC X(50).
           03  WSS-GLS-IENT.
               05  WSS-CAI-IMDT                           PIC X(04).
               05  WSS-IIC-IMDT                           PIC X(08).
               05  WSS-NUM-IEDP                           PIC 9(03).
               05  WSS-IND-PODE                           PIC X(03).
               05  WSS-FIL-IENT                           PIC X(12).
           03  WSS-ICOR                  VALUE 0          PIC 9(01).
               88 NO-ASIGNE-CORRELATIVO  VALUE 0.
           03  WSS-IMAX                  VALUE 5          PIC 9(01).
           03  WSS-CIC-ICLI                               PIC X(12).
           03  WSS-I                                      PIC 9(01).
           03  WSS-K                                      PIC 9(01).
           03  WSS-NUM-DIGI                               PIC 9(02).
           03  WSS-ITEM.
               05  WSS-NUM-ITEM                           PIC 9(03).
               05  WSS-NUM-IMAX                           PIC 9(03).
           03  WSS-KEY-IREC                               PIC X(03).
      *>>>>
       01  PGM-VARI.
           03 PGM-ICLR                  VALUE ' '       PIC X(01).
           03 PGM-LIMPIAR-TODO          VALUE ' '       PIC X(01).
           03 PGM-LIMPIAR-LLAVES        VALUE 'K'       PIC X(01).
           03 PGM-LIMPIAR-CAMPOS        VALUE 'F'       PIC X(01).
           03 PGM-NO-LIMPIAR-NADA       VALUE 'N'       PIC X(01).
           03 PGM-PROG                                  PIC X(08).
           03 PGM-NTRN                                  PIC X(04).
           03 PGM-STAT.
              05 PGM-STAT-ADP.
                 88 PGM-STAT-ADP-NUL    VALUE '  '.
                 07 PGM-STT1-ADP        VALUE '2' PIC X(01).
                    88 PGM-STAT-ADP-OKS VALUE '0'.
                 07 PGM-STT2-ADP        VALUE '3' PIC X(01).
              05 PGM-STAT-DBC.
                 88 PGM-STAT-DBC-NUL    VALUE '  '.
                 07 PGM-STT1-DBC        VALUE '2' PIC X(01).
                    88 PGM-STAT-DBC-OKS VALUE '0'.
                 07 PGM-STT2-DBC        VALUE '3' PIC X(01).
              05 PGM-STAT-EDP.
                 88 PGM-STAT-EDP-NUL    VALUE '  '.
                 07 PGM-STT1-EDP        VALUE '2' PIC X(01).
                    88 PGM-STAT-EDP-OKS VALUE '0'.
                 07 PGM-STT2-EDP        VALUE '3' PIC X(01).
           03 PGM-SRNF                  VALUE '23'      PIC X(02).
           03 PGM-SOKS                  VALUE '00'      PIC X(02).
           03 PGM-SNUL                  VALUE '  '      PIC X(02).
           03 PGM-SUAR                  VALUE SPACES    PIC X(15).

       LINKAGE SECTION.
      *----------------
       01  DFHCOMMAREA.
      *<<<< CMA
           02 FILLER                      PIC X(3000).
      *>>>>
       COPY GNSLGFIO.

       PROCEDURE DIVISION.
      *===================

       MAIN SECTION.
       INI-MAIN.
           PERFORM INI.
       LUP-MAIN.
           IF SCR-INST = SCR-INST-HCM
                 PERFORM SCR-COM.
           IF SCR-CCPP = 'MOD'
                 PERFORM SCR-MOD
           ELSE
           IF SCR-CCPP = 'ING'
                 PERFORM SCR-ING
           ELSE
           IF SCR-CCPP = 'ACC'
                 PERFORM SCR-ACC
           ELSE
           IF SCR-CCPP = 'ELI'
                 PERFORM SCR-ELI
           ELSE
           IF SCR-CCPP = 'ACT'
                 PERFORM SCR-ACT
           ELSE
           IF SCR-CCPP = 'PGM'
                 PERFORM SCR-PGM
           ELSE
                 MOVE SCR-INST-HCM TO SCR-INST.
           GO TO LUP-MAIN.
       FIN-MAIN.
           EXIT.

       INI SECTION.
       INI-INI.
       COPY GNSBGEIB.
       COPY GNSBGEDB.
           MOVE LOW-VALUES TO CAP-FLD.
           MOVE LOW-VALUES TO CAP-EDT.
           PERFORM GNS-PRO-RCK.
           PERFORM GNS-BUS-VCA.
           MOVE +3000 TO SCR-TCMA.
           PERFORM GNS-HDL-SYS.
           PERFORM GNS-HDL-FRM.
           MOVE 'SGCPUCAP' TO FIO-PROG.
           PERFORM GNS-BUS-IDD.
      *<<<< INI_FIO
           MOVE +3000 TO SCR-TCMA.
           IF SCR-DESDE-CMN
               PERFORM GNS-CLR-RQA.
      *>>>>
       FIN-INI.
           EXIT.

       COPY GNSBHSYS.
       COPY GNSBHFRM.
       COPY GNSBPRCK.
       COPY GNSBBVCA.
       COPY GNSBBIDD.

       SCR-COM SECTION.
       INI-SCR-COM.
           PERFORM STP-EXIT.
           MOVE FRM-CPSF-AEY TO FRM-CPIM-AEY.
           PERFORM PRO-ALL.
           PERFORM SCR-CLRA-CAP.
           PERFORM EDT-KEY-CAP.
           PERFORM EDT-FLD-CAP.
           PERFORM SCR-PUTA.
           MOVE SCR-INST-HCM TO SCR-INST.
           MOVE SCR-CMNP     TO SYS-PROG.
           MOVE SCR-VARI     TO SYS-CMMA.
           MOVE SCR-TCMA     TO SYS-TCMA.
           MOVE SYS-XCTL     TO SYS-CMND.
           PERFORM GNS-PRO-SYS.
       XCT-ERR.
           MOVE 'XCTERR    ' TO MSG-COD-MENS.
           MOVE 'GNS'        TO MSG-COD-SIST.
           PERFORM GET-MSG.
           MOVE MSG-GLS-DESC TO SYS-MEN1.
           MOVE SYS-PROG     TO SYS-MEN2.
           MOVE SYS-ABOR     TO SYS-CMND.
           PERFORM GNS-PRO-SYS.
       COPY GNSBGGBK.
       FIN-SCR-COM.
           EXIT.

       SCR-MOD SECTION.
       INI-SCR-MOD.
           IF SCR-INST = SCR-INST-HKY
               PERFORM HBL-KEY
               MOVE SCR-INST-GKY TO SCR-INST
               PERFORM SCR-DMSG
           ELSE
           IF SCR-INST = SCR-INST-GFL
               PERFORM GET-FLD
           ELSE
           IF SCR-INST = SCR-INST-GCS
               PERFORM GET-ACC.
           PERFORM DESSCRTRL.
           IF FRM-FFLD = FRM-FFLD-PF7 OR FRM-FFLD-PF8
               PERFORM XCT-PRGP.
           IF NOT ( FRM-FFLD = FRM-FFLD-PF5 OR FRM-FFLD-PF6 )
               GO TO MSG-SCR-MOD.
       MSG-SCR-MOD.
           IF SCR-STAT = SCR-STAT-CON
               MOVE SPACES TO FRM-MENS
           ELSE
           IF SCR-STAT = SCR-STAT-ABT OR SCR-VFLD = SCR-VFLD-NOT
               MOVE 'MODNOT    ' TO MSG-COD-MENS
               MOVE 'GNS' TO MSG-COD-SIST
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS
           ELSE
               MOVE SPACES TO FRM-MENS
               PERFORM CMN-MOD
               IF FIO-STAT-OKS
                   IF FRM-MEN1 NOT > SPACES
                       MOVE 'MODYES    ' TO MSG-COD-MENS
                       MOVE 'GNS' TO MSG-COD-SIST
                       PERFORM GET-MSG
                       MOVE MSG-GLS-DESC TO FRM-MEN1
                   ELSE
                       NEXT SENTENCE
               ELSE
               IF FRM-MENS NOT > SPACES
                   MOVE 'FIOSTAT' TO MSG-COD-TMSG
                   MOVE FIO-STAT  TO MSG-COD-CMSG
                   MOVE 'GNS'     TO MSG-COD-SIST
                   PERFORM GET-MSG
                   MOVE MSG-GLS-DESC TO FRM-MENS.
           PERFORM SCR-MSSG.
       FIN-SCR-MOD.
           EXIT.

       SCR-ING SECTION.
       INI-SCR-ING.
           IF SCR-INST = SCR-INST-HKY
               PERFORM HBL-IKY
               MOVE SCR-INST-GKY TO SCR-INST
               PERFORM SCR-DMSG
           ELSE
           IF SCR-INST = SCR-INST-GFL
                PERFORM GET-FLD
           ELSE
           IF SCR-INST = SCR-INST-GCS
                PERFORM GET-ACC.
           PERFORM DESSCRTRL.
       MSG-SCR-ING.
           IF SCR-STAT = SCR-STAT-CON
               MOVE SPACES TO FRM-MENS
           ELSE
           IF SCR-STAT = SCR-STAT-ABT OR SCR-VFLD = SCR-VFLD-NOT
               MOVE 'INGNOT    ' TO MSG-COD-MENS
               MOVE 'GNS' TO MSG-COD-SIST
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS
           ELSE
               MOVE SPACES TO FRM-MENS
               PERFORM CMN-ING
               IF FIO-STAT-OKS
                   IF FRM-MEN1 NOT > SPACES
                       MOVE 'INGYES    ' TO MSG-COD-MENS
                       MOVE 'GNS' TO MSG-COD-SIST
                       PERFORM GET-MSG
                       MOVE MSG-GLS-DESC TO FRM-MEN1
                   ELSE
                       NEXT SENTENCE
               ELSE
               IF FRM-MENS NOT > SPACES
                   MOVE 'FIOSTAT' TO MSG-COD-TMSG
                   MOVE FIO-STAT  TO MSG-COD-CMSG
                   MOVE 'GNS'     TO MSG-COD-SIST
                   PERFORM GET-MSG
                   MOVE MSG-GLS-DESC TO FRM-MENS.
           PERFORM SCR-MSSG.
       FIN-SCR-ING.
           EXIT.

       SCR-ACC SECTION.
       INI-SCR-ACC.
           IF SCR-INST = SCR-INST-HKY
               PERFORM HBL-KEY
               MOVE SCR-INST-GKY TO SCR-INST
               PERFORM SCR-DMSG
           ELSE
           IF SCR-INST = SCR-INST-GFL
                PERFORM GET-FLD
           ELSE
           IF SCR-INST = SCR-INST-GCS
                PERFORM GET-ACC.
           PERFORM DESSCRTRL.
           IF FRM-FFLD = FRM-FFLD-PF7 OR FRM-FFLD-PF8 OR
                         FRM-FFLD-PF5 OR FRM-FFLD-PF6
               PERFORM XCT-PRGP.
           MOVE SPACES TO FRM-MENS.
           IF SCR-STAT NOT = SCR-STAT-CON
               PERFORM CMN-ACC.
           PERFORM SCR-MSSG.
       FIN-SCR-ACC.
           EXIT.

       SCR-ELI SECTION.
       INI-SCR-ELI.
           IF SCR-INST = SCR-INST-HKY
               PERFORM HBL-KEY
               MOVE SCR-INST-GKY TO SCR-INST
               PERFORM SCR-DMSG
           ELSE
           IF SCR-INST = SCR-INST-GCS
                PERFORM GET-ACC.
           PERFORM DESSCRTRL.
           IF FRM-FFLD = FRM-FFLD-PF7 OR FRM-FFLD-PF8 OR
                         FRM-FFLD-PF5 OR FRM-FFLD-PF6
               PERFORM XCT-PRGP.
           IF SCR-STAT = SCR-STAT-CON
               MOVE SPACES TO FRM-MENS
           ELSE
           IF SCR-STAT = SCR-STAT-ABT OR SCR-VFLD = SCR-VFLD-NOT
               MOVE 'ELINOT    ' TO MSG-COD-MENS
               MOVE 'GNS' TO MSG-COD-SIST
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS
           ELSE
               MOVE SPACES TO FRM-MENS
               PERFORM CMN-ELI
               IF FIO-STAT-OKS
                   IF FRM-MEN1 NOT > SPACES
                       MOVE 'ELIYES    ' TO MSG-COD-MENS
                       MOVE 'GNS' TO MSG-COD-SIST
                       PERFORM GET-MSG
                       MOVE MSG-GLS-DESC TO FRM-MEN1
                   ELSE
                       NEXT SENTENCE
               ELSE
               IF FRM-MENS NOT > SPACES
                   MOVE 'FIOSTAT' TO MSG-COD-TMSG
                   MOVE FIO-STAT  TO MSG-COD-CMSG
                   MOVE 'GNS'     TO MSG-COD-SIST
                   PERFORM GET-MSG
                   MOVE MSG-GLS-DESC TO FRM-MENS.
           PERFORM SCR-MSSG.
       FIN-SCR-ELI.
           EXIT.

       SCR-ACT SECTION.
       INI-SCR-ACT.
           IF SCR-INST = SCR-INST-HKY
               PERFORM HBL-KEY
               MOVE SCR-INST-GKY TO SCR-INST
               PERFORM SCR-DMSG
           ELSE
           IF SCR-INST = SCR-INST-GFL
                PERFORM GET-FLD
           ELSE
           IF SCR-INST = SCR-INST-GCS
                PERFORM GET-ACC.
           PERFORM DESSCRTRL.
           IF ( FRM-FFLD = FRM-FFLD-PF7 OR FRM-FFLD-PF8  OR
                           FRM-FFLD-PF5 OR FRM-FFLD-PF6 ) AND
              SCR-ACTU = SCR-ACTU-MOD
               PERFORM XCT-PRGP.
           IF SCR-ACTU = SCR-ACTU-MOD
                  PERFORM MSG-SCR-MOD
           ELSE
                  PERFORM MSG-SCR-ING.
       FIN-SCR-ACT.
           EXIT.

       SCR-PGM SECTION.
       INI-SCR-PGM.
           IF SCR-INST = SCR-INST-HKY
               PERFORM HBL-KEY
               MOVE SCR-INST-GKY TO SCR-INST
               PERFORM SCR-DMSG
           ELSE
           IF SCR-INST = SCR-INST-GFL
                PERFORM GET-FLD
           ELSE
           IF SCR-INST = SCR-INST-GCS
                PERFORM GET-ACC.
       TRL-SCR-PGM.
           PERFORM DESSCRTRL.
           IF FRM-FFLD = FRM-FFLD-PF7 OR FRM-FFLD-PF8 OR
                         FRM-FFLD-PF5 OR FRM-FFLD-PF6
               PERFORM XCT-PRGP.
           MOVE SPACES TO FRM-MENS.
           IF SCR-STAT NOT = SCR-STAT-CON
               PERFORM CMN-PGM.
           PERFORM SCR-MSSG.
       FIN-SCR-PGM.
           EXIT.

       SCR-DMSG SECTION.
       INI-SCR-DMSG.
           IF PGM-ICLR = PGM-NO-LIMPIAR-NADA
               NEXT SENTENCE
           ELSE
           IF PGM-ICLR = PGM-LIMPIAR-TODO
               PERFORM SCR-CLRA-CAP
               PERFORM EDT-KEY-CAP
               PERFORM EDT-FLD-CAP
           ELSE
           IF PGM-ICLR = PGM-LIMPIAR-LLAVES
               PERFORM CLR-KEY-CAP
               PERFORM EDT-KEY-CAP
           ELSE
               PERFORM CLR-FLD-CAP
               PERFORM EDT-FLD-CAP.
           PERFORM STP-EXIT.
           PERFORM SCR-PUTA.
           PERFORM SCR-EXIT.
       FIN-SCR-DMSG.
           EXIT.

       XCT-PRGP SECTION.
       INI-XCT-PRGP.
           MOVE SCR-INST-BRW TO SCR-INST.
           PERFORM STP-EXIT.
           MOVE FRM-FFLD   TO SCR-FFLD.
      *
           MOVE SCR-PROG     TO SYS-PROG.
           MOVE SCR-VARI     TO SYS-CMMA.
           MOVE SCR-TCMA     TO SYS-TCMA.
           MOVE SYS-XCTL     TO SYS-CMND.
           PERFORM GNS-PRO-SYS.
           PERFORM XCT-ERR.
       FIN-XCT-PRGP.
           EXIT.

       SCR-RST SECTION.
       INI-SCR-RST.
           MOVE SPACES       TO PGM-ICLR.
           MOVE SPACES       TO SCR-ACTU.
           MOVE SCR-STPP     TO SCR-STAT.
           MOVE SCR-MFLD-NOT TO SCR-MFLD.
           MOVE LOW-VALUES   TO CAP-FLD.
           MOVE LOW-VALUES TO CAP-EDT.
       FIN-SCR-RST.
           EXIT.

       GET-FLD SECTION.
       INI-GET-FLD.
           PERFORM SCR-GFLD.
           IF FRM-STAT-ABT
               MOVE SCR-STAT-ABT TO SCR-STAT.
       FIN-GET-FLD.
           EXIT.

       CMN-MOD SECTION.
       INI-CMN-MOD.
   *<<<<INI_CMN_MOD
           PERFORM KEY-ALL-CAP.
           MOVE FIO-GET-KEY-UPD TO FIO-CMND.
           PERFORM SGC-FIO-ADP.
           IF NOT FIO-STAT-OKS
               GO TO FIN-CMN-MOD.
           PERFORM RET-ALL-CAP.
           MOVE FIO-MOD TO FIO-CMND.
           PERFORM SGC-FIO-ADP.
           GO TO FIN-CMN-MOD.
    *>>>>
           PERFORM KEY-ALL-CAP.
           MOVE FIO-GET-KEY-UPD TO FIO-CMND.
           PERFORM SGC-FIO-ADP.
           IF FIO-STAT-OKS AND
              ADP-STP-ITRN IN ADP NOT = SCR-UMOD
               MOVE FIO-ULK-REC TO FIO-CMND
               PERFORM SGC-FIO-ADP
               MOVE FIO-BCK-OUT TO FIO-CMND
               PERFORM SGC-FIO-ADP
               MOVE 'GNS' TO MSG-COD-SIST
               MOVE 'GNSACCSSIMUL' TO MSG-COD-MENS
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS
               GO TO FIN-CMN-MOD.
           IF NOT FIO-STAT-OKS
               GO TO FIN-CMN-MOD.
           PERFORM RET-STT-ADP.
           PERFORM RET-ALL-CAP.
           PERFORM RET-HDR-ADP.
           MOVE FIO-MOD TO FIO-CMND.
           PERFORM SGC-FIO-ADP.
       FIN-CMN-MOD.
           EXIT.

       CMN-ING SECTION.
       INI-CMN-ING.
           MOVE SPACES TO ADP.
      *<<<< INI_CMN_ING
      *INI-JGM 31-07-1998.
           MOVE ZEROES TO ADP-NUM-IGRP IN ADP.
           MOVE ZEROES TO ADP-NUM-ICMP IN ADP.
      *RRM  MOVE ZEROES TO ADP-NUM-IAPO IN ADP.
           MOVE ZEROES TO ADP-NUM-IPOD IN ADP.
      *FIN-JGM 31-07-1998.
           PERFORM RET-ALL-CAP.
           MOVE FIO-PUT TO FIO-CMND.
           PERFORM SGC-FIO-ADP.
           GO TO FIN-CMN-ING.
           PERFORM RET-STT-ADP.
           PERFORM RET-ALL-CAP.
           PERFORM RET-HDR-ADP.
           MOVE FIO-PUT TO FIO-CMND.
           PERFORM SGC-FIO-ADP.
       FIN-CMN-ING.
           EXIT.

       CMN-ACC SECTION.
       INI-CMN-ACC.
           IF SCR-STAT = SCR-STAT-ABT OR SCR-VFLD = SCR-VFLD-NOT
               MOVE 'ACCION NO REALIZADA' TO FRM-MENS
               GO TO FIN-CMN-ACC.
   *<<<<INI_CMN_ACC
           PERFORM KEY-ALL-CAP.
           MOVE FIO-GET-KEY-UPD TO FIO-CMND.
           PERFORM SGC-FIO-ADP.
           IF NOT FIO-STAT-OKS
               GO TO FIN-CMN-ACC.
           PERFORM RET-ALL-CAP.
           GO TO FIN-CMN-ACC.
   *>>>>
           PERFORM KEY-ALL-CAP.
           MOVE FIO-GET-KEY-UPD TO FIO-CMND.
           PERFORM SGC-FIO-ADP.
           IF FIO-STAT-OKS AND
              ADP-STP-ITRN IN ADP NOT = SCR-UMOD
               MOVE FIO-ULK-REC TO FIO-CMND
               PERFORM SGC-FIO-ADP
               MOVE FIO-BCK-OUT TO FIO-CMND
               PERFORM SGC-FIO-ADP
               MOVE 'GNS' TO MSG-COD-SIST
               MOVE 'GNSACCSSIMUL' TO MSG-COD-MENS
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS
               GO TO FIN-CMN-ACC.
           IF NOT FIO-STAT-OKS
               GO TO FIN-CMN-ACC.
           PERFORM RET-ALL-CAP.
       FIN-CMN-ACC.
           EXIT.

       CMN-ELI SECTION.
       INI-CMN-ELI.
       *<<<<INI_CMN_ELI
           PERFORM KEY-ALL-CAP.
           MOVE FIO-GET-KEY-UPD TO FIO-CMND.
           PERFORM SGC-FIO-ADP.
           IF NOT FIO-STAT-OKS
               GO TO FIN-CMN-ELI.
           MOVE FIO-DEL TO FIO-CMND.
            PERFORM SGC-FIO-ADP.
           GO TO FIN_CMN_ELI.
       *>>>>
           PERFORM KEY-ALL-CAP.
           MOVE FIO-GET-KEY-UPD TO FIO-CMND.
           PERFORM SGC-FIO-ADP.
           IF FIO-STAT-OKS AND
              ADP-STP-ITRN IN ADP NOT = SCR-UMOD
               MOVE FIO-ULK-REC TO FIO-CMND
               PERFORM SGC-FIO-ADP
               MOVE FIO-BCK-OUT TO FIO-CMND
               PERFORM SGC-FIO-ADP
               MOVE 'GNS' TO MSG-COD-SIST
               MOVE 'GNSACCSSIMUL' TO MSG-COD-MENS
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS
               GO TO FIN-CMN-ELI.
           IF NOT FIO-STAT-OKS
               GO TO FIN-CMN-ELI.
           MOVE FIO-DEL TO FIO-CMND.
           PERFORM SGC-FIO-ADP.
       FIN-CMN-ELI.
           EXIT.

       CMN-PGM SECTION.
       INI-CMN-PGM.
           PERFORM RET-ALL-CAP.
       FIN-CMN-PGM.
           EXIT.

       STP-EXIT SECTION.
       INI-STP-EXIT.
           MOVE SCR-PROG TO PGM-PROG.
           MOVE SCR-NTRN TO PGM-NTRN.

           MOVE SCR-PROV TO SCR-PROG.
           MOVE SCR-NTRV TO SCR-NTRN.

           MOVE PGM-PROG TO SCR-PROV
           MOVE PGM-NTRN TO SCR-NTRV.
       FIN-STP-EXIT.
           EXIT.

       SCR-EXIT SECTION.
       INI-SCR-EXIT.
           MOVE 'P'      TO SCR-ICMN.
           MOVE SCR-NTRN TO SYS-NTRN.
           MOVE SCR-VARI TO SYS-CMMA.
           MOVE SCR-TCMA TO SYS-TCMA.
           MOVE SYS-RTRN TO SYS-CMND.
           PERFORM GNS-PRO-SYS.
       FIN-SCR-EXIT.
           EXIT.

       SCR-PUTA SECTION.
       INI-SCR-PUTA.
           MOVE SCR-NMAP TO FRM-NAME.
           MOVE SCR-NLIB TO FRM-NLIB.
           MOVE CAP-FLD TO FRM-DFLD.
           MOVE FRM-PUT-ALL TO FRM-CMND.
           PERFORM GNS-PRO-FRM.
       FIN-SCR-PUTA.
           EXIT.

       SCR-MSSG SECTION.
       INI-SCR-MSSG.
           IF FRM-MEN1 NOT > SPACES
               MOVE SPACES TO FRM-MEN1.
           IF FRM-MEN2 NOT > SPACES
               MOVE SPACES TO FRM-MEN2.
           MOVE FRM-MENS TO CAP-GLS-MENS.
       FIN-SCR-MSSG.
           EXIT.

       SCR-GFLD SECTION.
       INI-SCR-GFLD.
           MOVE SCR-NMAP TO FRM-NAME.
           MOVE SCR-NLIB TO FRM-NLIB.
           MOVE FRM-GET-ALL TO FRM-CMND.
           PERFORM GNS-PRO-FRM.
           MOVE SPACES TO FRM-MENS.
           IF NOT ( FRM-FFLD = FRM-FFLD-RET  OR FRM-FFLD-PF10 OR
                               FRM-FFLD-PF12 OR FRM-FFLD-PF3 )
               MOVE 'PFSINV    ' TO MSG-COD-MENS
               MOVE 'GNS' TO MSG-COD-SIST
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS
               PERFORM FST-FLD-CAP
               PERFORM SCR-MSSG
               PERFORM SCR-PUTA
               PERFORM SCR-EXIT.
           MOVE FRM-DFLD TO CAP-FLD.
           IF FRM-STAT-ABT
               GO TO FIN-SCR-GFLD.
           MOVE FRM-SUAR-OKS TO FRM-SUAR.
           PERFORM VAL-NUM-KEY-CAP.
           IF FRM-SUAR EQUAL FRM-SUAR-MAL OR FRM-SUAR-CLR
               PERFORM SCR-MSSG
               PERFORM EDT-KEY-CAP
               PERFORM SCR-PUTA
               PERFORM SCR-EXIT.
           PERFORM VAL-NUM-FLD-CAP.
           IF FRM-SUAR EQUAL FRM-SUAR-MAL OR FRM-SUAR-CLR
               PERFORM SCR-MSSG
               PERFORM EDT-KEY-CAP
               PERFORM EDT-FLD-CAP
               PERFORM SCR-PUTA
               PERFORM SCR-EXIT.
           PERFORM VAL-MKY-CAP.
           IF FRM-SUAR EQUAL FRM-SUAR-MAL OR FRM-SUAR-CLR
               GO TO ERR-SCR-GFLD.
           PERFORM VAL-FLD-CAP.
           IF FRM-SUAR EQUAL FRM-SUAR-MAL OR FRM-SUAR-CLR
               GO TO ERR-SCR-GFLD.
           PERFORM VAL-CON-FLD-CAP.
           IF NOT ( FRM-SUAR EQUAL FRM-SUAR-MAL OR FRM-SUAR-CLR )
               GO TO FIN-SCR-GFLD.
           IF FRM-UCUR NOT > SPACES
               PERFORM FST-FLD-CAP.
       ERR-SCR-GFLD.
           PERFORM SCR-MSSG.
           PERFORM EDT-KEY-CAP.
           PERFORM EDT-FLD-CAP.
           PERFORM SCR-PUTA.
           PERFORM SCR-EXIT.
       FIN-SCR-GFLD.
           MOVE SCR-STAT-MOD TO SCR-STAT.

       GET-ACC SECTION.
       INI-GET-ACC.
           MOVE SCR-NMAP TO FRM-NAME.
           MOVE SCR-NLIB TO FRM-NLIB.
           MOVE FRM-GET-ALL TO FRM-CMND.
           PERFORM GNS-PRO-FRM.
           IF NOT ( FRM-FFLD = FRM-FFLD-RET  OR FRM-FFLD-PF10 OR
                               FRM-FFLD-PF12 OR FRM-FFLD-PF3 )
               MOVE 'PFSINV    ' TO MSG-COD-MENS
               MOVE 'GNS' TO MSG-COD-SIST
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO CAP-GLS-MEN2
               MOVE SCR-PRMT     TO CAP-GLS-MEN1
               PERFORM FST-MSG
               PERFORM SCR-PUTA
               PERFORM SCR-EXIT.
           MOVE FRM-DFLD TO CAP-FLD.
           IF NOT ( ( FRM-FFLD = FRM-FFLD-PF12 OR FRM-FFLD-PF3 ) OR
                      SCR-CONF > SPACES )
               PERFORM VAL-NUM-KEY-CAP
               PERFORM VAL-NUM-FLD-CAP.
       FIN-GET-ACC.
           MOVE SCR-STAT-SON TO SCR-STAT.

       GET-CON SECTION.
       INI-GET-CON.
           MOVE SCR-NMAP TO FRM-NAME.
           MOVE SCR-NLIB TO FRM-NLIB.
           MOVE FRM-GET-ALL TO FRM-CMND.
           PERFORM GNS-PRO-FRM.
           IF NOT ( FRM-FFLD = FRM-FFLD-RET  OR FRM-FFLD-PF10 OR
                               FRM-FFLD-PF12 OR FRM-FFLD-PF3 )
      *<<<< PFS_GET_CON OR PFS_SCR_GKEY
           IF NOT ( FRM-FFLD = FRM-FFLD-PF8 OR FRM-FFLD = FRM-FFLD-PF7 )
      *>>>>
      *<<<< PFS_GET_CON
           IF NOT ( FRM-FFLD = FRM-FFLD-PF5 OR FRM-FFLD-PF6 )
      *>>>>
               MOVE 'PFSINV    ' TO MSG-COD-MENS
               MOVE 'GNS' TO MSG-COD-SIST
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO CAP-GLS-MEN2
               MOVE SCR-PRMT     TO CAP-GLS-MEN1
               PERFORM FST-MSG
               PERFORM SCR-PUTA
               PERFORM SCR-EXIT.
           MOVE FRM-DFLD TO CAP-FLD.
       FIN-GET-CON.
           MOVE SCR-STAT-CON TO SCR-STAT.

       CLR-MSG SECTION.
       INI-CLR-MSG.
           MOVE SPACES TO CAP-GLS-MENS.
       FIN-CLR-MSG.
           EXIT.

       HBL-IKY SECTION.
       INI-HBL-IKY.
   *<<<<INI_HBL_IKY
           IF SCR-DESDE-CMN
               MOVE CAP-GLS-MENS TO FRM-MENS
               MOVE LOW-VALUES TO CAP-FLD
               MOVE FRM-MENS TO CAP-GLS-MENS.
           MOVE FRM-CPSF-AEY TO FRM-CPIM-AEY.
           PERFORM PRO-FLD-CAP.
           PERFORM PRO-MKY-CAP.
           PERFORM UNP-IKY-CAP.
           PERFORM FST-KEY-CAP.
           MOVE '1' TO FRM-CPIM-AEY.
           GO TO FIN-HBL-IKY.
   *>>>>
           IF SCR-DESDE-CMN
               MOVE CAP-GLS-MENS TO FRM-MENS
               MOVE LOW-VALUES TO CAP-FLD
      * FLB  7-NOV-1994
               PERFORM CLR-KEY-CAP

               IF FRM-MENS < SPACES
                   MOVE LOW-VALUES TO CAP-GLS-MENS
               ELSE
                   MOVE FRM-MENS TO CAP-GLS-MENS.
           PERFORM PRO-FLD-CAP.
           PERFORM PRO-MKY-CAP.
           PERFORM UNP-IKY-CAP.
           PERFORM FST-KEY-CAP.
       FIN-HBL-IKY.
           EXIT.

       HBL-KEY SECTION.
       INI-HBL-KEY.
   *<<<<INI_HBL_KEY
           IF SCR-DESDE-CMN
               MOVE CAP-GLS-MENS TO FRM-MENS
               MOVE LOW-VALUES TO CAP-FLD
               MOVE FRM-MENS TO CAP-GLS-MENS.
           MOVE FRM-CPSF-AEY TO FRM-CPIM-AEY.
           PERFORM PRO-FLD-CAP.
           PERFORM UNP-KEY-CAP.
           PERFORM FST-KEY-CAP.
           MOVE '1' TO FRM-CPIM-AEY.
           GO TO FIN-HBL-KEY.
   *>>>>
           IF SCR-DESDE-CMN
               MOVE CAP-GLS-MENS TO FRM-MENS
               MOVE LOW-VALUES TO CAP-FLD
               IF FRM-MENS < SPACES
                   MOVE LOW-VALUES TO CAP-GLS-MENS
               ELSE
                   MOVE FRM-MENS TO CAP-GLS-MENS.
           MOVE FRM-CPSF-AEY TO FRM-CPIM-AEY.
           PERFORM PRO-FLD-CAP.
           MOVE '1' TO FRM-CPIM-AEY.
           PERFORM UNP-KEY-CAP.
           PERFORM FST-KEY-CAP.
       FIN-HBL-KEY.
           EXIT.

       HBL-FLD SECTION.
       INI-HBL-FLD.
           PERFORM UNP-MKY-CAP.
           PERFORM UNP-FLD-CAP.
           PERFORM FST-FLD-CAP.
       FIN-HBL-FLD.
           EXIT.

       FST-MSG SECTION.
       INI-FST-MSG.
           MOVE -1 TO CAP-GLS-MENS-LEN.
       FIN-FST-MSG.
           EXIT.

       PRO-ALL SECTION.
       INI-PRO-ALL.
           PERFORM PRO-KEY-CAP.
           PERFORM PRO-FLD-CAP.
           PERFORM FST-MSG.
       FIN-PRO-ALL.
           EXIT.

       SCR-TRL SECTION.
       INI-SCR-TRL.
           IF FRM-MEN1 NOT > SPACES
               MOVE SCR-PRMT TO FRM-MEN1.
           IF SCR-STAT = SCR-STAT-MOD
               PERFORM HBL-FLD
               PERFORM SCR-MSSG
               PERFORM EDT-KEY-CAP
               PERFORM EDT-FLD-CAP
               PERFORM SCR-PUTA
               MOVE SCR-INST-GFL TO SCR-INST
               PERFORM SCR-EXIT.
           IF SCR-STAT = SCR-STAT-SON
               PERFORM PRO-ALL
               PERFORM SCR-MSSG
               PERFORM EDT-KEY-CAP
               PERFORM EDT-FLD-CAP
               PERFORM SCR-PUTA
               MOVE SCR-INST-GCS TO SCR-INST
               PERFORM SCR-EXIT.
      *ASUME SCR-STAT-CON.
           MOVE SCR-STAT-CON TO SCR-STAT.
      *    MOVE FRM-CPSF-AEY TO FRM-CPIM-AEY.
           PERFORM PRO-ALL.
           PERFORM SCR-MSSG.
           PERFORM EDT-KEY-CAP.
           PERFORM EDT-FLD-CAP.
           PERFORM SCR-PUTA.
           MOVE SCR-INST-GAB TO SCR-INST.
           PERFORM SCR-EXIT.
       FIN-SCR-TRL.
           EXIT.

       DESSCRTRL SECTION.
       INI-DESSCRTRL.
           IF SCR-INST = SCR-INST-GCF
                  PERFORM SCR-GCNF
                  GO TO FIN-DESSCRTRL.
           MOVE SCR-VFLD-NOT TO SCR-VFLD.
           MOVE FRM-FFLD TO SCR-FFLD.
           IF SCR-STAT = SCR-STAT-ABT OR SCR-STAT-CON
                  GO TO FIN-DESSCRTRL.
           IF SCR-FFLD-RET OR SCR-FFLD-PF10
                  MOVE SCR-VFLD-YES TO SCR-VFLD
                  PERFORM PRO-CONF.
       FIN-DESSCRTRL.
           IF SCR-FFLD-PF10 OR SCR-FFLD-PF3
                 MOVE SCR-INST-HCM TO SCR-INST
           ELSE
                 MOVE SCR-INST-HKY TO SCR-INST.
       EXT-DESSCRTRL.
           EXIT.

       PRO-CONF SECTION.
       INI-PRO-CONF.
           IF FRM-MENS NOT > SPACES
               IF SCR-CONF NOT > SPACES
                   GO TO FIN-PRO-CONF
               ELSE
                   MOVE SCR-CONF TO FRM-MENS
           ELSE
               IF FRM-MEN1 NOT > SPACES
                   MOVE SCR-CONF TO FRM-MEN1.
           PERFORM PRO-KEY-CAP.
           PERFORM PRO-FLD-CAP.
           PERFORM FST-MSG.
           PERFORM SCR-MSSG.
           IF SCR-STAT = SCR-STAT-MOD
               PERFORM EDT-KEY-CAP
               PERFORM EDT-FLD-CAP.
           PERFORM SCR-PUTA.
           MOVE SCR-INST-GCF TO SCR-INST.
           PERFORM SCR-EXIT.
       FIN-PRO-CONF.
           EXIT.

       SCR-GCNF SECTION.
       INI-SCR-GCNF.
           MOVE SCR-NMAP TO FRM-NAME.
           MOVE SCR-NLIB TO FRM-NLIB.
           MOVE FRM-GET-ALL TO FRM-CMND.
           PERFORM GNS-PRO-FRM.
           IF NOT ( FRM-FFLD = FRM-FFLD-RET  OR FRM-FFLD-PF10 OR
                               FRM-FFLD-PF12 OR FRM-FFLD-PF3  OR
                               FRM-FFLD-PF4 )
               MOVE 'PFSINV    ' TO MSG-COD-MENS
               MOVE 'GNS' TO MSG-COD-SIST
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO CAP-GLS-MEN2
               MOVE SCR-CONF     TO CAP-GLS-MEN1
               PERFORM FST-MSG
               PERFORM SCR-PUTA
               PERFORM SCR-EXIT.
           MOVE FRM-DFLD TO CAP-FLD.
           MOVE FRM-FFLD TO SCR-FFLD.
           IF FRM-FFLD = FRM-FFLD-PF3
               MOVE SCR-VFLD-NOT TO SCR-VFLD
           ELSE
           IF FRM-FFLD = FRM-FFLD-RET OR FRM-FFLD-PF10 OR FRM-FFLD-PF4
               MOVE SCR-VFLD-YES TO SCR-VFLD
               PERFORM VAL-NUM-KEY-CAP
               PERFORM VAL-NUM-FLD-CAP
           ELSE
           IF FRM-FFLD = FRM-FFLD-PF12
               MOVE SCR-STPP TO SCR-STAT
               IF SCR-STAT = SCR-STAT-MOD
                   PERFORM VAL-NUM-KEY-CAP
                   PERFORM VAL-NUM-FLD-CAP
                   PERFORM SCR-TRL
               ELSE
                   MOVE SCR-VFLD-NOT TO SCR-VFLD.
       FIN-SCR-GCNF.
           EXIT.

      * PGM-EBR-ALL SECTION.
      * INI-PGM-EBR-ALL.
      *     MOVE 'GNS' TO FIO-SIST.
      *     MOVE FIO-EBR-ALL TO FIO-CMND.
      *     PERFORM GNS-FIO-TAB.
      * FIN-PGM-EBR-ALL.
      *     EXIT.

       RET-STT-ADP SECTION.
       INI-RET-STT-ADP.
           IF SCR-CCPP = 'ING'
               MOVE 'I' TO ADP-MSC-TACC IN ADP
               MOVE 'I' TO ADP-MSC-STAT IN ADP
           ELSE
           IF SCR-CCPP = 'MOD'
               MOVE 'M' TO ADP-MSC-TACC IN ADP
               MOVE 'M' TO ADP-MSC-STAT IN ADP.
       FIN-RET-STT-ADP.
           EXIT.

       RET-HDR-ADP SECTION.
       INI-RET-HDR-ADP.
           PERFORM GET-FHOY.
      *    Fecha Transaccion
           MOVE HOY-FHOY TO ADP-FEC-FTRN IN ADP.
      *    Hora Transaccion
           MOVE HOY-HHOY TO ADP-HRA-HRTR IN ADP.
      *    Codigo Origen transaccion
      *<<<< NOT PGM_VMS
           MOVE SCR-OTRN TO ADP-COD-OTRN IN ADP.
      *    Autor Transaccion
           MOVE SCR-USER TO ADP-COD-ATRN IN ADP.
      *>>>>
       FIN-RET-HDR-ADP.
           EXIT.

       COPY SGCBUCAP.
       COPY GNSBVNUM.
       COPY SGCBFADP.
       COPY GNSBFMSG.
       COPY GNSBGSYS.
       COPY GNSBGDTC.
       COPY GNSBGFRM.
       COPY GNSBGMSG.
       COPY GNSBEKEY.
       COPY GNSBIABT.
       COPY GNSBBTAB.
       COPY GNSBVCOD.
       COPY GNSBVTAB.
       COPY GNSBFTAB.
       COPY GNSBVIND.
       COPY GNSBVMSC.
       COPY GNSBFMSC.
       COPY GNSBVIDC.
       COPY GNSBPVRF.
       COPY GNSBGFEC.
       COPY GNSBGHOY.

      *<<<< EOF
       RST-STAT SECTION.
       INI-RST-STAT.
           MOVE SCR-STPP     TO SCR-STAT.
           MOVE SCR-MFLD-NOT TO SCR-MFLD.
       FIN-RST-STAT.
           EXIT.

       GNS-CLR-RQA SECTION.
       INI-GNS-CLR-RQA.
           MOVE SPACES TO SCR-DBC-REQA.
           MOVE SPACES TO SCR-KEY-IDBC.
       FIN-GNS-CLR-RQA.
           EXIT.
      *>>>>
      *<<<< EOF
      *  MANEJO DE COLAS
       SET-QUE SECTION.
       INI-SET-QUE.
           PERFORM GNS-ERR-QUE.
           MOVE EIBTRMID TO QUE-TERM.
           COMPUTE QUE-LITM = 7 + 111.
           MOVE 'KEY' TO QUE-TYPE.
           MOVE 'ENT' TO QUE-IKEY.
           MOVE +111  TO QUE-LDAT.
           MOVE +0    TO QUE-PCUR.
           MOVE +1    TO QUE-NITM.
           MOVE 'CFP'                   TO KEY-COD-ENTI.
           MOVE DBC-GLS-NOMC IN CAP-FLD TO KEY-GLS-NOMC.
           MOVE DBC-NUM-ICLI IN CAP-FLD TO KEY-NUM-ICLI.
           MOVE DBC-VRF-ICLI IN CAP-FLD TO KEY-VRF-ICLI.
           MOVE DBC-IND-ICLI IN CAP-FLD TO KEY-IND-ICLI.
           MOVE DBC-GLS-ICLI IN CAP-FLD TO KEY-GLS-ICLI.
           MOVE SPACES                  TO KEY-CAI-IOPE.
           MOVE SPACES                  TO KEY-IIC-IOPE.
           MOVE ZEROES                  TO KEY-FEC-FENT.
           MOVE ADP-NUM-IEDP IN CAP-FLD TO KEY-NUM-IENT.
           MOVE ADP-COD-IPOD IN CAP-FLD TO KEY-COD-IENT.
           MOVE ZEROES                  TO KEY-FEC-FCMT.
           MOVE EDP-NUM-DINF IN CAP-FLD TO KEY-NUM-DCMT.
           MOVE EDP-NUM-MINF IN CAP-FLD TO KEY-NUM-MCMT.
           MOVE EDP-NUM-SINF IN CAP-FLD TO KEY-NUM-SCMT.
           MOVE EDP-NUM-AINF IN CAP-FLD TO KEY-NUM-ACMT.
           MOVE ZEROES                  TO KEY-NUM-GCMT.
           MOVE KEY-VARI TO QUE-DATA.
       FIN-SET-QUE.
           EXIT.
      *>>>>
      *<<<< EOF_IBM
       LEE-NXT-PRV SECTION.
       INI-LEE-NXT-PRV.
           MOVE SPACES TO MSG-COD-MENS.
           IF SCR-DBC-REQA > SPACES
               PERFORM LEE-NXT-PRV-DBC
           ELSE
               PERFORM LEE-NXT-PRV-NOM.
       FIN-LEE-NXT-PRV.
           EXIT.

       LEE-NXT-PRV-DBC SECTION.
       INI-LEE-NXT-PRV-DBC.
           MOVE FIO-KDEF-S TO FIO-KDEF.
           MOVE SCR-DBC-REQA TO ADR-DBC-REQA.
           IF FRM-FFLD = FRM-FFLD-PF7
               MOVE FIO-GET-PRV TO FIO-CMND
           ELSE
               MOVE FIO-GET-NXT TO FIO-CMND.
       LUP-LEE-NXT-PRV-DBC.
           MOVE 'DBC-GLS-NOMC'  TO FIO-AKEY.
           PERFORM SGC-FIO-DBC.
           MOVE FIO-STAT TO PGM-STAT-DBC.
           IF NOT FIO-STAT-OKS
               MOVE 'DBCNO' TO MSG-COD-MENS
               GO TO FIN-LEE-NXT-PRV-DBC.
           MOVE ADR-DBC-REQA TO SCR-DBC-REQA.
       FIN-LEE-NXT-PRV-DBC.
           EXIT.

       LEE-NXT-PRV-NOM SECTION.
       INI-LEE-NXT-PRV-NOM.
           IF DBC-GLS-NOMC IN DBC > SPACES
               MOVE FIO-GET-KEY    TO FIO-CMND
               MOVE 'DBC-GLS-NOMC' TO FIO-AKEY
               PERFORM SGC-FIO-DBC
               IF FIO-STAT-OKS
                   IF FRM-FFLD = FRM-FFLD-PF7
                       MOVE FIO-GET-PRV TO FIO-CMND
                   ELSE
                       MOVE FIO-GET-NXT TO FIO-CMND
               ELSE
                   IF FRM-FFLD = FRM-FFLD-PF7
                       MOVE FIO-GET-LEQ TO FIO-CMND
                   ELSE
                       MOVE FIO-GET-NLS TO FIO-CMND
           ELSE
               IF FRM-FFLD = FRM-FFLD-PF7
                   MOVE FIO-GET-LEQ TO FIO-CMND
               ELSE
                   MOVE FIO-GET-NLS TO FIO-CMND.
       LUP-LEE-NXT-PRV-NOM.
           MOVE 'DBC-GLS-NOMC'  TO FIO-AKEY.
           PERFORM SGC-FIO-DBC.
           MOVE FIO-STAT TO PGM-STAT-DBC.
           IF NOT FIO-STAT-OKS
               MOVE 'DBCNO' TO MSG-COD-MENS
               GO TO FIN-LEE-NXT-PRV-NOM.
           MOVE ADR-DBC-REQA TO SCR-DBC-REQA.
       FIN-LEE-NXT-PRV-NOM.
           EXIT.

       BUS-ADP SECTION.
       INI-BUS-ADP.
           MOVE SPACES              TO ADP-KEY-IADP IN ADP.
           MOVE DBC-CAI-ICLI IN DBC TO ADP-CAI-IMDT IN ADP.
           MOVE DBC-IIC-ICLI IN DBC TO ADP-IIC-IMDT IN ADP.
           MOVE 'P'                 TO ADP-IND-TINF IN ADP.
           MOVE ADP-NUM-IEDP IN CAP-FLD TO ADP-NUM-IEDP IN ADP.
           MOVE SPACES TO ADP-COD-IPOD IN ADP.
      *RRM  MOVE ZEROES TO ADP-NUM-AGRP IN ADP.
           MOVE ZEROES TO ADP-NUM-IGRP IN ADP.
           MOVE ZEROES TO ADP-NUM-ICMP IN ADP.
           MOVE FIO-GET-NLS    TO FIO-CMND.
       NXT-ADP-ADP.
           PERFORM SGC-FIO-ADP.
           IF FIO-STAT-OKS AND
              ADP-CIC-IMDT IN ADP = DBC-CIC-ICLI IN DBC AND
              ADP-NUM-IEDP IN ADP = ADP-NUM-IEDP IN CAP-FLD AND
              ADP-IND-TINF IN ADP = 'P'
               MOVE ADP-COD-IPOD IN ADP TO ADP-COD-IPOD IN CAP-FLD
               MOVE ADP-COD-IPOD IN ADP TO FRM-COD-IPOD IN CAP-FLD
               MOVE '00' TO PGM-STAT-ADP
               GO TO AUX-BUS-ADP.
           MOVE FIO-STAT-NEX TO FIO-STAT.
      *RVM: 3-JUL-1992
       AUX-BUS-ADP.
           IF FIO-STAT-OKS
               MOVE FIO-END-BRW TO FIO-CMND
               PERFORM SGC-FIO-ADP.
       FIN-BUS-ADP.
      *RVM:
           EXIT.

       BUS-IPOD SECTION.
       INI-BUS-IPOD.
           MOVE SPACES              TO ADP-KEY-IADP IN ADP.
           MOVE DBC-CAI-ICLI IN DBC TO ADP-CAI-IMDT IN ADP.
           MOVE DBC-IIC-ICLI IN DBC TO ADP-IIC-IMDT IN ADP.
           MOVE 'P'                 TO ADP-IND-TINF IN ADP.
           MOVE ADP-NUM-IEDP IN CAP-FLD TO ADP-NUM-IEDP IN ADP.
           MOVE ADP-COD-IPOD IN CAP-FLD TO ADP-COD-IPOD IN ADP.
           MOVE ZEROES TO ADP-NUM-IGRP IN ADP.
           MOVE ZEROES TO ADP-NUM-ICMP IN ADP.
           MOVE FIO-GET-NLS    TO FIO-CMND.
       NXT-IPOD-ADP.
           PERFORM SGC-FIO-ADP.
           IF FIO-STAT-OKS AND
              ADP-CIC-IMDT IN ADP = DBC-CIC-ICLI IN DBC AND
              ADP-NUM-IEDP IN ADP = ADP-NUM-IEDP IN CAP-FLD AND
              ADP-COD-IPOD IN ADP = ADP-COD-IPOD IN CAP-FLD AND
              ADP-IND-TINF IN ADP = 'P'
               MOVE ADP-COD-IPOD IN ADP TO ADP-COD-IPOD IN CAP-FLD
               MOVE '00' TO PGM-STAT-ADP
               GO TO FIN-BUS-IPOD.
           MOVE FIO-STAT-NEX TO FIO-STAT.
       FIN-BUS-IPOD.
           EXIT.

       PUT-DBC SECTION.
       INI-PUT-DBC.
           MOVE DBC-GLS-NOMC IN DBC TO CPT-STRN.
           PERFORM CPT-BLKS.
           MOVE CPT-STRN TO DBC-GLS-NOMC IN CAP-FLD.

           MOVE DBC-NUM-ICLI IN DBC TO DBC-NUM-ICLI IN CAP-FLD.
           MOVE DBC-VRF-ICLI IN DBC TO DBC-VRF-ICLI IN CAP-FLD.
           MOVE DBC-IND-ICLI IN DBC TO DBC-IND-ICLI IN CAP-FLD.
           MOVE DBC-GLS-ICLI IN DBC TO DBC-GLS-ICLI IN CAP-FLD.
           MOVE DBC-CAI-ICLI IN DBC TO ADP-CAI-IMDT IN CAP-FLD.
           MOVE DBC-IIC-ICLI IN DBC TO ADP-IIC-IMDT IN CAP-FLD.
       FIN-PUT-DBC.
           EXIT.

       BUS-CIC-CLI SECTION.
       INI-BUS-CIC-CLI.
           IF DBC-NUM-ICLI IN CAP-FLD > ZEROES
      *IDC-CLI Busca Cliente por medio de IdC
               MOVE DBC-NUM-ICLI IN CAP-FLD TO DBC-NUM-ICLI IN DBC
               MOVE DBC-IND-ICLI IN CAP-FLD TO DBC-IND-ICLI IN DBC
               MOVE DBC-GLS-ICLI IN CAP-FLD TO DBC-GLS-ICLI IN DBC
               MOVE 'DBC-IDC-ICLI'  TO FIO-AKEY
               MOVE FIO-GET-KEY     TO FIO-CMND
               PERFORM SGC-FIO-DBC
               IF NOT FIO-STAT-OKS
                   MOVE 'CLI    NEX' TO MSG-COD-MENS
                   MOVE 'SGC'        TO MSG-COD-SIST
                   PERFORM GET-MSG
                   MOVE MSG-GLS-DESC IN MSG TO FRM-MENS
                   MOVE FIO-STAT-NEX        TO FIO-STAT
                   GO TO FIN-BUS-CIC-CLI
               ELSE
                   MOVE '00' TO PGM-STAT-DBC

                   MOVE DBC-GLS-NOMC IN DBC TO CPT-STRN
                   PERFORM CPT-BLKS
                   MOVE CPT-STRN TO DBC-GLS-NOMC IN CAP-FLD

                   MOVE ADR-DBC-REQA TO SCR-DBC-REQA
                   MOVE DBC-CAI-ICLI IN DBC TO ADP-CAI-IMDT IN CAP-FLD
                   MOVE DBC-IIC-ICLI IN DBC TO ADP-IIC-IMDT IN CAP-FLD
           ELSE
           IF DBC-GLS-NOMC IN CAP-FLD > SPACES
               MOVE SPACES TO DBC-GLS-NOMC IN DBC
      *NOM-CLI Busca Cliente por medio del Nombre

               MOVE DBC-GLS-NOMC IN CAP-FLD TO STR-GLS-GSTR
               PERFORM STR-UNS
               MOVE STR-GLS-FUNS IN STR-VARI(1) TO DBC-GLS-APAT IN DBC
               MOVE STR-GLS-FUNS IN STR-VARI(2) TO DBC-GLS-AMAT IN DBC
               MOVE STR-GLS-FUNS IN STR-VARI(3) TO DBC-GLS-NOMB IN DBC

               MOVE 'DBC-GLS-NOMC'  TO FIO-AKEY
               MOVE FIO-GET-NLS     TO FIO-CMND
               PERFORM SGC-FIO-DBC
               IF NOT FIO-STAT-OKS
                   MOVE 'CLI    NEX' TO MSG-COD-MENS
                   MOVE 'SGC'        TO MSG-COD-SIST
                   PERFORM GET-MSG
                   MOVE MSG-GLS-DESC IN MSG TO FRM-MENS
                   MOVE FIO-STAT-NEX        TO FIO-STAT
                   GO TO FIN-BUS-CIC-CLI
               ELSE
                   MOVE '00'         TO PGM-STAT-DBC
                   MOVE ADR-DBC-REQA TO SCR-DBC-REQA

                   MOVE DBC-GLS-NOMC IN DBC TO CPT-STRN
                   PERFORM CPT-BLKS
                   MOVE CPT-STRN TO DBC-GLS-NOMC IN CAP-FLD

                   MOVE DBC-NUM-ICLI IN DBC TO DBC-NUM-ICLI IN CAP-FLD
                   MOVE DBC-VRF-ICLI IN DBC TO DBC-VRF-ICLI IN CAP-FLD
                   MOVE DBC-IND-ICLI IN DBC TO DBC-IND-ICLI IN CAP-FLD
                   MOVE DBC-GLS-ICLI IN DBC TO DBC-GLS-ICLI IN CAP-FLD
                   MOVE DBC-CAI-ICLI IN DBC TO ADP-CAI-IMDT IN CAP-FLD
                   MOVE DBC-IIC-ICLI IN DBC TO ADP-IIC-IMDT IN CAP-FLD.
           MOVE 'P' TO ADP-IND-TINF IN ADP.
       FIN-BUS-CIC-CLI.
           EXIT.

       SCRL-TAB-CAP SECTION.
       INI-SCRL-TAB-CAP.
           MOVE SPACES TO MSG-COD-MENS.
           IF FRM-FFLD = FRM-FFLD-PF6
               IF FRM-NUM-IAPO IN CAP-FLD(WSS-IMAX) > ZEROES OR
                  FRM-COD-CLAP IN CAP-FLD(WSS-IMAX) > SPACES
                   PERFORM PUT-TAB-ASC
               ELSE
                   MOVE 'CLI    N+ADP' TO MSG-COD-MENS
           ELSE
               IF FRM-NUM-IAPO IN CAP-FLD(1) > ZEROES OR
                  FRM-COD-CLAP IN CAP-FLD(1) > SPACES
                   PERFORM PUT-TAB-DSC
               ELSE
                   MOVE 'CLI    N-ADP' TO MSG-COD-MENS.
           IF MSG-COD-MENS > SPACES
               MOVE 'SGC'        TO MSG-COD-SIST
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MEN1.
       FIN-SCRL-TAB-CAP.
           EXIT.

       BUS-COR-EDP SECTION.
       INI-BUS-COR-EDP.
           MOVE DBC-CIC-ICLI IN DBC TO EDP-CIC-IMDT IN EDP.
           MOVE 'F'                 TO EDP-IND-TINF IN EDP.
           MOVE 99                  TO EDP-NUM-IEDP IN EDP.
           MOVE FIO-GET-LEQ TO FIO-CMND.
           PERFORM SGC-FIO-EDP.
           IF FIO-STAT-OKS AND
              EDP-CIC-IMDT IN EDP = DBC-CIC-ICLI IN DBC AND
              EDP-IND-TINF IN EDP = 'F'
               MOVE EDP-NUM-IEDP IN EDP TO ADP-NUM-IEDP IN CAP-FLD
           ELSE
               MOVE ZEROES TO ADP-NUM-IEDP IN CAP-FLD.

           IF FIO-STAT-OKS
               MOVE FIO-END-BRW TO FIO-CMND
               PERFORM SGC-FIO-EDP.

           MOVE DBC-CIC-ICLI IN DBC TO EDP-CIC-IMDT IN EDP.
           MOVE 'P'                 TO EDP-IND-TINF IN EDP.
           MOVE 99                  TO EDP-NUM-IEDP IN EDP.
           MOVE FIO-GET-LEQ TO FIO-CMND.
           PERFORM SGC-FIO-EDP.
           IF FIO-STAT-OKS AND
              EDP-CIC-IMDT IN EDP = DBC-CIC-ICLI IN DBC AND
              EDP-IND-TINF IN EDP = 'P'
               MOVE EDP-NUM-IEDP IN EDP TO ADP-NUM-IEDP IN ADP
           ELSE
               MOVE ZEROES TO ADP-NUM-IEDP IN ADP.

           IF FIO-STAT-OKS
               MOVE FIO-END-BRW TO FIO-CMND
               PERFORM SGC-FIO-EDP.

           IF ADP-NUM-IEDP IN     ADP NOT > ZEROES AND
              ADP-NUM-IEDP IN CAP-FLD NOT > ZEROES
               MOVE FIO-STAT-NEX TO FIO-STAT
               GO TO FIN-BUS-COR-EDP.
           IF ADP-NUM-IEDP IN ADP NOT < ADP-NUM-IEDP IN CAP-FLD
               MOVE ADP-NUM-IEDP IN ADP TO ADP-NUM-IEDP IN CAP-FLD
           ELSE
               MOVE ADP-NUM-IEDP IN CAP-FLD TO ADP-NUM-IEDP IN ADP.
       FIN-BUS-COR-EDP.
           EXIT.

       PUT-TAB-DBC-REC SECTION.
       INI-PUT-TAB-DBC-REC.
           MOVE REC-CIC-IREL IN REC TO DBC-CIC-ICLI.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM SGC-FIO-DBC.

           MOVE DBC-GLS-NOMC IN DBC TO CPT-STRN.
           PERFORM CPT-BLKS.
           MOVE CPT-STRN TO WSS-NOMB IN WSS-VARI.

           MOVE WSS-GLS-NOMB IN WSS-VARI TO FRM-GLS-NAPO IN
                                            CAP-FLD(WSS-I).
           MOVE DBC-NUM-ICLI IN DBC TO FRM-NUM-IAPO IN
                                            CAP-FLD(WSS-I).
           MOVE DBC-VRF-ICLI IN DBC TO FRM-VRF-IAPO IN
                                            CAP-FLD(WSS-I).
           MOVE DBC-IND-ICLI IN DBC TO FRM-IND-IAPO IN
                                            CAP-FLD(WSS-I).
           MOVE DBC-GLS-ICLI IN DBC TO FRM-GLS-IAPO IN
                                            CAP-FLD(WSS-I).
           MOVE SPACES TO FRM-COD-CLAP IN CAP-FLD(WSS-I).
           MOVE ZEROES TO FRM-NUM-APAR IN CAP-FLD(WSS-I).
           MOVE SPACES TO FRM-GLS-CONE IN CAP-FLD(WSS-I).
       FIN-PUT-TAB-DBC-REC.
           EXIT.

       PUT-TAB SECTION.
       INI-PUT-TAB.
           MOVE 1                TO QUE-NITM.
           MOVE EIBTRMID         TO QUE-TERM.
           MOVE 'CAP'            TO QUE-TYPE.
           MOVE +6               TO QUE-LITM.
           MOVE QUE-GET TO QUE-CMND.
           PERFORM GNS-PRO-QUE.
           MOVE QUE-ITEM TO WSS-ITEM IN WSS-VARI.
           IF WSS-NUM-IMAX IN WSS-VARI NOT > 1
               MOVE 'NEXTMP' TO MSG-COD-MENS
               GO TO FIN-PUT-TAB.
           ADD 1 TO QUE-NITM.
           MOVE EIBTRMID         TO QUE-TERM.
           MOVE 'CAP'            TO QUE-TYPE.
           MOVE +900             TO QUE-LITM.
           MOVE QUE-GET TO QUE-CMND
           PERFORM GNS-PRO-QUE.

           MOVE QUE-ITEM TO FRM-GLS-NAPO-TBL.
           MOVE QUE-NITM TO WSS-NUM-ITEM.
           MOVE 1 TO QUE-NITM.
           MOVE EIBTRMID         TO QUE-TERM.
           MOVE 'CAP'            TO QUE-TYPE.
           MOVE +6               TO QUE-LITM.
           MOVE WSS-ITEM IN WSS-VARI TO QUE-ITEM.
           MOVE QUE-MOD TO QUE-CMND
           PERFORM GNS-PRO-QUE.
       FIN-PUT-TAB.
           EXIT.

       PUT-TAB-ASC SECTION.
       INI-PUT-TAB-ASC.
           PERFORM GNS-ERR-QUE.
           MOVE 1 TO QUE-NITM.
           MOVE EIBTRMID         TO QUE-TERM.
           MOVE 'CAP'            TO QUE-TYPE.
           MOVE +6               TO QUE-LITM.
           MOVE QUE-GET TO QUE-CMND
           PERFORM GNS-PRO-QUE.
           MOVE QUE-ITEM TO WSS-ITEM IN WSS-VARI.
           MOVE WSS-NUM-ITEM TO QUE-NITM.
           ADD 1 TO QUE-NITM.
           IF QUE-NITM > WSS-NUM-IMAX IN WSS-VARI
               MOVE 'CLI    N+ADP' TO MSG-COD-MENS
               GO TO FIN-PUT-TAB-ASC.
           IF QUE-NITM = WSS-NUM-IMAX IN WSS-VARI
               MOVE 'CLI    N+ADP' TO MSG-COD-MENS
           ELSE
               MOVE 'ADP    SIG' TO MSG-COD-MENS.
           MOVE EIBTRMID         TO QUE-TERM.
           MOVE 'CAP'            TO QUE-TYPE.
           MOVE +900             TO QUE-LITM.
           MOVE QUE-GET TO QUE-CMND
           PERFORM GNS-PRO-QUE.
           MOVE QUE-ITEM TO FRM-GLS-NAPO-TBL.
           MOVE QUE-NITM TO WSS-NUM-ITEM.

           MOVE 1 TO QUE-NITM.
           MOVE EIBTRMID         TO QUE-TERM.
           MOVE 'CAP'            TO QUE-TYPE.
           MOVE +6               TO QUE-LITM.
           MOVE WSS-ITEM IN WSS-VARI TO QUE-ITEM.
           MOVE QUE-MOD TO QUE-CMND
           PERFORM GNS-PRO-QUE.
       FIN-PUT-TAB-ASC.
           EXIT.

       PUT-TAB-DSC SECTION.
       INI-PUT-TAB-DSC.
           PERFORM GNS-ERR-QUE.
           MOVE 1 TO QUE-NITM.
           MOVE EIBTRMID         TO QUE-TERM.
           MOVE 'CAP'            TO QUE-TYPE.
           MOVE +6               TO QUE-LITM.
           MOVE QUE-GET TO QUE-CMND
           PERFORM GNS-PRO-QUE.
           MOVE QUE-ITEM TO WSS-ITEM IN WSS-VARI.
           MOVE WSS-NUM-ITEM TO QUE-NITM.
           SUBTRACT 1 FROM QUE-NITM.
           IF QUE-NITM < 2
               MOVE 'CLI    N-ADP' TO MSG-COD-MENS
               GO TO FIN-PUT-TAB-DSC.
           IF QUE-NITM = 2
               MOVE 'CLI    N-ADP' TO MSG-COD-MENS
           ELSE
               MOVE 'ADP    ANT' TO MSG-COD-MENS.
           MOVE EIBTRMID         TO QUE-TERM.
           MOVE 'CAP'            TO QUE-TYPE.
           MOVE +900             TO QUE-LITM.
           MOVE QUE-GET TO QUE-CMND
           PERFORM GNS-PRO-QUE.
           MOVE QUE-ITEM TO FRM-GLS-NAPO-TBL.
           MOVE QUE-NITM TO WSS-NUM-ITEM.

           MOVE 1 TO QUE-NITM.
           MOVE EIBTRMID         TO QUE-TERM.
           MOVE 'CAP'            TO QUE-TYPE.
           MOVE +6               TO QUE-LITM.
           MOVE WSS-ITEM IN WSS-VARI TO QUE-ITEM.
           MOVE QUE-MOD TO QUE-CMND
           PERFORM GNS-PRO-QUE.
       FIN-PUT-TAB-DSC.
           EXIT.

       PUT-TAB-EDP SECTION.
       INI-PUT-TAB-EDP.
           MOVE ADP-CAI-IMDT IN CAP-FLD TO EDP-CAI-IMDT IN EDP.
           MOVE ADP-IIC-IMDT IN CAP-FLD TO EDP-IIC-IMDT IN EDP.
           MOVE 'F'                     TO EDP-IND-TINF IN EDP.
           MOVE 99                      TO EDP-NUM-IEDP IN EDP.
           MOVE FIO-GET-LEQ TO FIO-CMND.
       CON-SIG-PUT-TAB-EDP.
           PERFORM SGC-FIO-EDP.
           IF FIO-STAT-OKS AND
              EDP-CAI-IMDT IN EDP = ADP-CAI-IMDT IN ADP AND
              EDP-IIC-IMDT IN EDP = ADP-IIC-IMDT IN ADP AND
              EDP-IND-TINF IN EDP = 'F'
               IF EDP-MSC-STAT IN EDP = 'A'
                   GO TO SIG-PUT-TAB-EDP
               ELSE
                   MOVE FIO-GET-PRV TO FIO-CMND
                   GO TO CON-SIG-PUT-TAB-EDP
           ELSE
               MOVE ZEROES TO EDP-NUM-IEDP IN EDP.

       SIG-PUT-TAB-EDP.
      *RVM:  3-JUL-1992
           IF FIO-STAT-OKS
               MOVE FIO-END-BRW TO FIO-CMND
               PERFORM SGC-FIO-EDP.
      *RVM:
           PERFORM GNS-ERR-QUE.
           PERFORM DEL-TMP-STRG.
           PERFORM PUT-TMP-STR1.
           MOVE 0                       TO WSS-I   IN WSS-VARI.
           MOVE 1                       TO WSS-NUM-IMAX IN WSS-VARI.
           MOVE ADP-CAI-IMDT IN CAP-FLD TO EDP-CAI-IMDT IN EDP.
           MOVE ADP-IIC-IMDT IN CAP-FLD TO EDP-IIC-IMDT IN EDP.
           MOVE 'P'                     TO EDP-IND-TINF IN EDP.
      *    MOVE ZEROES                  TO EDP-NUM-IEDP IN EDP.
           MOVE FIO-GET-NLS TO FIO-CMND.
           PERFORM SGC-FIO-EDP.
           IF NOT ( FIO-STAT-OKS AND
              EDP-CAI-IMDT IN EDP = ADP-CAI-IMDT IN ADP AND
              EDP-IIC-IMDT IN EDP = ADP-IIC-IMDT IN ADP AND
              EDP-IND-TINF IN EDP = 'P' )
               GO TO GET-NXT-EDP.
           IF EDP-MSC-STAT IN EDP = 'A'  AND
              SCR-CMND = 'CNV'
               GO TO GET-NXT-EDP.
           IF EDP-MSC-STAT IN EDP NOT = 'A'  AND
              SCR-CMND = 'CON'
               GO TO GET-NXT-EDP.
       LEE-REG-EDP.
           MOVE EDP-NUM-IEDP IN EDP TO ADP-NUM-IEDP IN ADP.
           MOVE EDP-NUM-IEDP IN EDP TO ADP-NUM-IEDP IN CAP-FLD.
           MOVE FRM-COD-IPOD IN CAP-FLD TO WSS-COD-IPOD IN WSS-VARI.
           IF WSS-GLS-IPO2 NOT > SPACES
               IF ( WSS-GLS-IPO1 NOT < '0' AND WSS-GLS-IPO1 NOT > '9' )
                  OR
                  ( WSS-GLS-IPO1 NOT < 'A' AND WSS-GLS-IPO1 NOT > 'Z' )
                     GO TO CON-PUT-TAB-EDP.
           MOVE 'SGC'                   TO TAB-COD-SIST.
           MOVE 'FAC'                   TO TAB-COD-TTAB IN TAB.
           MOVE FRM-COD-IPOD IN CAP-FLD TO TAB-COD-CTAB IN TAB.
           PERFORM VAL-COD.
           MOVE TAB-COD-DAT2(1) TO NUM-NUME.
           MOVE NUM-ZERO-N TO NUM-ZERO.
           MOVE NUM-SGNO-N TO NUM-SGNO.
           MOVE 2          TO NUM-NENT.
           MOVE 0          TO NUM-NDCM.
           CALL 'GNSPKNUM' USING DFHEIBLK DFHCOMMAREA NUM-VARI.
           IF NUM-STAT-OKS
               MOVE NUM-NN9N TO WSS-NUM-DIGI
               MOVE EDP-IND-PODE IN EDP(WSS-NUM-DIGI) TO
                                 ADP-COD-IPOD IN CAP-FLD
           ELSE
               MOVE 'SGC'         TO MSG-COD-SIST
               MOVE 'FACINDNONUM' TO MSG-COD-MENS
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS
               MOVE '00'         TO FIO-STAT
               MOVE SCR-STAT-CON TO SCR-STAT
               GO TO FIN-PUT-TAB-EDP.
       CON-PUT-TAB-EDP.
           MOVE ADP-COD-IPOD IN CAP-FLD TO ADP-COD-IPOD IN ADP.
           MOVE ZEROES                  TO ADP-NUM-IGRP IN ADP.
           MOVE ZEROES                  TO ADP-NUM-ICMP IN ADP.
           MOVE FIO-GET-NLS TO FIO-CMND.
           PERFORM SGC-FIO-ADP.
           IF NOT ( FIO-STAT-OKS AND
              ADP-CAI-IMDT IN ADP = ADP-CAI-IMDT IN CAP-FLD AND
              ADP-IIC-IMDT IN ADP = ADP-IIC-IMDT IN CAP-FLD AND
              ADP-NUM-IEDP IN ADP = ADP-NUM-IEDP IN CAP-FLD AND
              ADP-COD-IPOD IN ADP = ADP-COD-IPOD IN CAP-FLD AND
              ADP-IND-TINF IN ADP = 'P' )
               GO TO GET-NXT-EDP.
           IF WSS-I IN WSS-VARI > ZEROES
               MOVE 'SGC' TO TAB-COD-SIST
               MOVE 'CNX' TO TAB-COD-TTAB IN TAB
               MOVE 'O'   TO TAB-COD-CTAB IN TAB
               PERFORM BUS-TAB
               MOVE TAB-GLS-DESC IN TAB TO FRM-GLS-CONE IN
                                           CAP-FLD(WSS-I).
       LUP-PUT-TAB-EDP.
           ADD 1  TO WSS-I.
           IF WSS-I > WSS-IMAX
               PERFORM PUT-TMP-STRG
               MOVE 0 TO WSS-I
               GO TO LUP-PUT-TAB-EDP.
           PERFORM PUT-TAB-CAP.
           IF WSS-KEY-IREC > SPACES
               PERFORM PUT-TAB-REC.
           MOVE FIO-GET-NXT TO FIO-CMND.
           PERFORM SGC-FIO-ADP.
           IF FIO-STAT-OKS AND
              ADP-CAI-IMDT IN ADP = ADP-CAI-IMDT IN CAP-FLD AND
              ADP-IIC-IMDT IN ADP = ADP-IIC-IMDT IN CAP-FLD AND
              ADP-NUM-IEDP IN ADP = ADP-NUM-IEDP IN CAP-FLD AND
              ADP-COD-IPOD IN ADP = ADP-COD-IPOD IN CAP-FLD AND
              ADP-IND-TINF IN ADP = 'P'
               IF WSS-I IN WSS-VARI = WSS-IMAX IN WSS-VARI
                   PERFORM MOV-CNX-CAP
                   GO TO LUP-PUT-TAB-EDP
               ELSE
                   GO TO LUP-PUT-TAB-EDP.
       GET-NXT-EDP.
           MOVE FIO-GET-NXT TO FIO-CMND.
           PERFORM SGC-FIO-EDP.
           IF NOT ( FIO-STAT-OKS AND
              EDP-CAI-IMDT IN EDP = ADP-CAI-IMDT IN CAP-FLD AND
              EDP-IIC-IMDT IN EDP = ADP-IIC-IMDT IN CAP-FLD )
               GO TO NXT-PUT-TAB-EDP.
           IF EDP-IND-TINF IN EDP NOT = 'P'
               GO TO GET-NXT-EDP.
           IF EDP-MSC-STAT IN EDP = 'A'  AND
              SCR-CMND = 'CNV'
               GO TO GET-NXT-EDP.
           IF EDP-MSC-STAT IN EDP NOT = 'A'  AND
              SCR-CMND = 'CON'
               GO TO GET-NXT-EDP.
           GO TO LEE-REG-EDP.
       NXT-PUT-TAB-EDP.
      *     IF WSS-KEY-IREC > SPACES AND
      *        WSS-I = WSS-IMAX
      *         PERFORM PUT-TMP-STRG.
           IF WSS-I IN WSS-VARI > ZEROES AND
              WSS-I IN WSS-VARI NOT > WSS-IMAX IN WSS-VARI
               ADD 1 TO WSS-I
               PERFORM CLR-TAB-CAP VARYING WSS-I FROM WSS-I BY 1
                                       UNTIL WSS-I > WSS-IMAX
               PERFORM PUT-TMP-STRG.
           PERFORM MOD-TMP-STR1.
       FIN-PUT-TAB-EDP.
           EXIT.

       PUT-TAB-FAC SECTION.
       INI-PUT-TAB-FAC.
           PERFORM GNS-ERR-QUE.
           PERFORM DEL-TMP-STRG.
           PERFORM PUT-TMP-STR1.
           MOVE 0                       TO WSS-I   IN WSS-VARI.
           MOVE 1                       TO WSS-NUM-IMAX IN WSS-VARI.
           MOVE ADP-CAI-IMDT IN CAP-FLD TO ADP-CAI-IMDT IN ADP.
           MOVE ADP-IIC-IMDT IN CAP-FLD TO ADP-IIC-IMDT IN ADP.
           MOVE 'P'                     TO ADP-IND-TINF IN ADP.
           MOVE ADP-NUM-IEDP IN CAP-FLD TO ADP-NUM-IEDP IN ADP
           MOVE ADP-COD-IPOD IN CAP-FLD TO ADP-COD-IPOD IN ADP
           MOVE ZEROES                  TO ADP-NUM-IGRP IN ADP.
           MOVE ZEROES                  TO ADP-NUM-ICMP IN ADP.
           MOVE FIO-GET-NLS TO FIO-CMND.
           PERFORM SGC-FIO-ADP.
           IF NOT ( FIO-STAT-OKS AND
              ADP-CAI-IMDT IN ADP = ADP-CAI-IMDT IN CAP-FLD AND
              ADP-IIC-IMDT IN ADP = ADP-IIC-IMDT IN CAP-FLD AND
              ADP-NUM-IEDP IN ADP = ADP-NUM-IEDP IN CAP-FLD AND
              ADP-COD-IPOD IN ADP = ADP-COD-IPOD IN CAP-FLD AND
              ADP-IND-TINF IN ADP = 'P' )
               GO TO FIN-PUT-TAB-FAC.
       LUP-PUT-TAB-FAC.
           ADD 1  TO WSS-I.
           IF WSS-I > WSS-IMAX
               PERFORM PUT-TMP-STRG
               MOVE 0 TO WSS-I
               GO TO LUP-PUT-TAB-FAC.
           PERFORM PUT-TAB-CAP.
           IF WSS-KEY-IREC > SPACES
               PERFORM PUT-TAB-REC.
           MOVE FIO-GET-NXT TO FIO-CMND.
           PERFORM SGC-FIO-ADP.
           IF FIO-STAT-OKS AND
              ADP-CAI-IMDT IN ADP = ADP-CAI-IMDT IN CAP-FLD AND
              ADP-IIC-IMDT IN ADP = ADP-IIC-IMDT IN CAP-FLD AND
              ADP-NUM-IEDP IN ADP = ADP-NUM-IEDP IN CAP-FLD AND
              ADP-COD-IPOD IN ADP = ADP-COD-IPOD IN CAP-FLD AND
              ADP-IND-TINF IN ADP = 'P'
               IF WSS-I IN WSS-VARI = WSS-IMAX IN WSS-VARI
                   PERFORM MOV-CNX-CAP
                   GO TO LUP-PUT-TAB-FAC
               ELSE
                   GO TO LUP-PUT-TAB-FAC.
      *     IF WSS-KEY-IREC > SPACES AND
      *        WSS-I = WSS-IMAX
      *         PERFORM PUT-TMP-STRG.
           IF WSS-I IN WSS-VARI > ZEROES AND
              WSS-I IN WSS-VARI NOT > WSS-IMAX IN WSS-VARI
               ADD 1 TO WSS-I
               PERFORM CLR-TAB-CAP VARYING WSS-I FROM WSS-I BY 1
                                       UNTIL WSS-I > WSS-IMAX
               PERFORM PUT-TMP-STRG.
           PERFORM MOD-TMP-STR1.
       FIN-PUT-TAB-FAC.
           EXIT.

       MOV-CNX-CAP SECTION.
       INI-MOV-CNX-CAP.
           MOVE 'SGC'               TO TAB-COD-SIST.
           MOVE 'CNX'               TO TAB-COD-TTAB IN TAB.
           MOVE ADP-IND-CONE IN ADP TO TAB-COD-CTAB IN TAB.
           PERFORM BUS-TAB.
           IF NOT ( TAB-CIC-CTAB IN TAB = 'O' OR
              TAB-CIC-CTAB IN TAB = 'Y' )
               GO TO FIN-MOV-CNX-CAP.
           IF TAB-CIC-CTAB IN TAB = 'O'
                MOVE TAB-GLS-DESC IN TAB TO FRM-GLS-CONE IN
                                           CAP-FLD(WSS-IMAX).
           IF TAB-CIC-CTAB IN TAB = 'Y'
               MOVE TAB-GLS-DESC IN TAB TO FRM-GLS-CONE IN
                                           CAP-FLD(WSS-IMAX).
       FIN-MOV-CNX-CAP.
           EXIT.

       PUT-TAB-CAP SECTION.
       INI-PUT-TAB-CAP.
           MOVE SPACES TO WSS-KEY-IREC IN WSS-VARI.
           IF ADP-CIC-IAPO IN ADP > SPACES
               MOVE ADP-CIC-IAPO IN ADP TO DBC-CIC-ICLI IN DBC
               MOVE FIO-GET-KEY TO FIO-CMND
               PERFORM SGC-FIO-DBC
               IF FIO-STAT-OKS

                   MOVE DBC-GLS-NOMC IN DBC TO CPT-STRN
                   PERFORM CPT-BLKS
                   MOVE CPT-STRN TO FRM-GLS-NAPO IN CAP-FLD(WSS-I)

                   MOVE DBC-NUM-ICLI IN DBC TO FRM-NUM-IAPO IN
                                             CAP-FLD(WSS-I)
                   MOVE DBC-VRF-ICLI IN DBC TO FRM-VRF-IAPO IN
                                             CAP-FLD(WSS-I)
                   MOVE DBC-IND-ICLI IN DBC TO FRM-IND-IAPO IN
                                             CAP-FLD(WSS-I)
                   MOVE DBC-GLS-ICLI IN DBC TO FRM-GLS-IAPO IN
                                             CAP-FLD(WSS-I)
               ELSE
                   MOVE SPACES TO FRM-GLS-NAPO IN CAP-FLD(WSS-I)
                   MOVE ZEROES TO FRM-NUM-IAPO IN CAP-FLD(WSS-I)
                   MOVE SPACES TO FRM-VRF-IAPO IN CAP-FLD(WSS-I)
                   MOVE SPACES TO FRM-IND-IAPO IN CAP-FLD(WSS-I)
                   MOVE SPACES TO FRM-GLS-IAPO IN CAP-FLD(WSS-I)
           ELSE
               MOVE 'REC' TO WSS-KEY-IREC IN WSS-VARI
               MOVE SPACES TO FRM-GLS-NAPO IN CAP-FLD(WSS-I)
               MOVE ZEROES TO FRM-NUM-IAPO IN CAP-FLD(WSS-I)
               MOVE SPACES TO FRM-VRF-IAPO IN CAP-FLD(WSS-I)
               MOVE SPACES TO FRM-IND-IAPO IN CAP-FLD(WSS-I)
               MOVE SPACES TO FRM-GLS-IAPO IN CAP-FLD(WSS-I)
               MOVE ADP-COD-CLAP IN ADP TO FRM-COD-CLAP IN
                                              CAP-FLD(WSS-I)
               MOVE ADP-NUM-APAR IN ADP TO FRM-NUM-APAR IN
                                              CAP-FLD(WSS-I).
           IF ADP-IND-CONE IN ADP NOT > SPACES
               GO TO FIN-PUT-TAB-CAP.
           MOVE 'SGC'               TO TAB-COD-SIST.
           MOVE 'CNX'               TO TAB-COD-TTAB IN TAB.
           MOVE ADP-IND-CONE IN ADP TO TAB-COD-CTAB IN TAB.
           PERFORM BUS-TAB.
           IF NOT ( TAB-CIC-CTAB IN TAB = 'O' OR
              TAB-CIC-CTAB IN TAB = 'Y' )
               GO TO FIN-PUT-TAB-CAP.
           IF TAB-CIC-CTAB IN TAB = 'O'
               IF WSS-I > 1
                   SUBTRACT 1 FROM WSS-I GIVING WSS-K IN WSS-VARI
                   MOVE TAB-GLS-DESC IN TAB TO FRM-GLS-CONE IN
                                                CAP-FLD(WSS-K).
           IF TAB-CIC-CTAB IN TAB = 'Y'
               IF WSS-I > 1
                   SUBTRACT 1 FROM WSS-I GIVING WSS-K IN WSS-VARI
                   MOVE TAB-GLS-DESC IN TAB TO FRM-GLS-CONE IN
                                                CAP-FLD(WSS-K).
       FIN-PUT-TAB-CAP.
           EXIT.

       PUT-TAB-REC SECTION.
       INI-PUT-TAB-REC.
           MOVE SPACES                   TO REC-KEY-IREC IN REC.
           MOVE ADP-CIC-IMDT IN ADP      TO REC-CIC-ICLI IN REC.
           MOVE REC-COD-OPOD IN REC-VARI TO REC-COD-TREC IN REC.
           MOVE FIO-GET-NLS TO FIO-CMND.
       LUP-PUT-TAB-REC.
           PERFORM SGC-FIO-REC.
           IF NOT ( FIO-STAT-OKS AND
              ADP-CIC-IMDT IN ADP = REC-CIC-ICLI IN REC AND
              REC-COD-OPOD IN REC-VARI = REC-COD-TREC IN REC)
               GO TO FIN-PUT-TAB-REC.
           IF NOT (REC-NUM-TREC IN REC = ADP-NUM-IEDP IN ADP AND
               REC-COD-AREC IN REC = ADP-COD-CLAP IN ADP  AND
               REC-IND-VIGE IN REC NOT = 'N' )
               MOVE FIO-GET-NXT TO FIO-CMND
               GO TO LUP-PUT-TAB-REC.
       LUP-GEN-REC.
           ADD 1 TO WSS-I.
           IF WSS-I > WSS-IMAX
               PERFORM PUT-TMP-STRG
               MOVE 0 TO WSS-I
               GO TO LUP-GEN-REC.
           PERFORM PUT-TAB-DBC-REC.
           MOVE FIO-GET-NXT TO FIO-CMND.
       LUP-BUS-SIG-REC.
           PERFORM SGC-FIO-REC.
           IF NOT ( FIO-STAT-OKS AND
              ADP-CIC-IMDT IN ADP = REC-CIC-ICLI IN REC AND
              REC-COD-OPOD IN REC-VARI = REC-COD-TREC IN REC)
      *         IF WSS-I =  WSS-IMAX
      *             PERFORM PUT-TMP-STRG
      *             MOVE 0 TO WSS-I
      *             GO TO FIN-PUT-TAB-REC
      *         ELSE
                   GO TO FIN-PUT-TAB-REC.
           IF NOT (REC-NUM-TREC IN REC = ADP-NUM-IEDP IN ADP AND
               REC-COD-AREC IN REC = ADP-COD-CLAP IN ADP  AND
               REC-IND-VIGE IN REC NOT = 'N' )
               MOVE FIO-GET-NXT TO FIO-CMND
               GO TO LUP-BUS-SIG-REC.
           GO TO LUP-GEN-REC.
       FIN-PUT-TAB-REC.
           EXIT.

       PUT-TMP-STRG SECTION.
       INI-PUT-TMP-STRG.
           ADD 1 TO WSS-NUM-IMAX IN WSS-VARI.
           MOVE EIBTRMID         TO QUE-TERM.
           MOVE 'CAP'            TO QUE-TYPE.
           MOVE WSS-NUM-IMAX IN WSS-VARI TO QUE-NITM.
           MOVE FRM-GLS-NAPO-TBL TO QUE-ITEM.
           MOVE +900             TO QUE-LITM.
           MOVE QUE-PUT          TO QUE-CMND.
           PERFORM GNS-PRO-QUE.
           PERFORM CLR-TAB-CAP VARYING WSS-I FROM 1 BY 1
                                       UNTIL WSS-I > WSS-IMAX.
       FIN-PUT-TMP-STRG.
           EXIT.

       MOD-TMP-STRG SECTION.
       INI-MOD-TMP-STRG.
           SUBTRACT 1 FROM WSS-NUM-IMAX IN WSS-VARI GIVING WSS-K IN
                                                           WSS-VARI.
           MOVE EIBTRMID         TO QUE-TERM.
           MOVE 'CAP'            TO QUE-TYPE.
           MOVE +900             TO QUE-LITM.
           MOVE WSS-K IN WSS-VARI TO QUE-NITM.
           MOVE QUE-GET TO QUE-CMND
           PERFORM GNS-PRO-QUE.
           MOVE QUE-ITEM TO FRM-GLS-NAPO-TBL.
           MOVE 'SGC'               TO TAB-COD-SIST.
           MOVE 'CNX'               TO TAB-COD-TTAB IN TAB.
           MOVE ADP-IND-CONE IN ADP TO TAB-COD-CTAB IN TAB.
           PERFORM BUS-TAB.
           MOVE TAB-GLS-DESC IN TAB TO FRM-GLS-CONE IN
                                                CAP-FLD(WSS-IMAX).
           MOVE EIBTRMID         TO QUE-TERM.
           MOVE 'CAP'            TO QUE-TYPE.
           MOVE FRM-GLS-NAPO-TBL TO QUE-ITEM.
           MOVE +900             TO QUE-LITM.
           MOVE WSS-K IN WSS-VARI TO QUE-NITM.
           MOVE QUE-MOD          TO QUE-CMND.
           PERFORM GNS-PRO-QUE.
       FIN-MOD-TMP-STRG.
           EXIT.

       MOD-TMP-STR1 SECTION.
       INI-MOD-TMP-STR1.
           MOVE ZEROES               TO WSS-NUM-ITEM IN WSS-VARI.
           MOVE EIBTRMID             TO QUE-TERM.
           MOVE 'CAP'                TO QUE-TYPE.
           MOVE  1                   TO QUE-NITM.
           MOVE WSS-ITEM IN WSS-VARI TO QUE-ITEM.
           MOVE +6                   TO QUE-LITM.
           MOVE QUE-MOD              TO QUE-CMND.
           PERFORM GNS-PRO-QUE.
       FIN-MOD-TMP-STR1.
           EXIT.

       PUT-TMP-STR1 SECTION.
       INI-PUT-TMP-STR1.
           MOVE ZEROES               TO WSS-NUM-IMAX IN WSS-VARI.
           MOVE 1                    TO WSS-NUM-ITEM IN WSS-VARI.
           MOVE EIBTRMID             TO QUE-TERM.
           MOVE 'CAP'                TO QUE-TYPE.
           MOVE  1                   TO QUE-NITM.
           MOVE WSS-ITEM IN WSS-VARI TO QUE-ITEM.
           MOVE +6                   TO QUE-LITM.
           MOVE QUE-PUT              TO QUE-CMND.
           PERFORM GNS-PRO-QUE.
       FIN-PUT-TMP-STR1.
           EXIT.

       CLR-TAB-CAP SECTION.
       INI-CLR-TAB-CAP.
           MOVE SPACES TO FRM-GLS-NAPO IN CAP-FLD(WSS-I).
           MOVE ZEROES TO FRM-NUM-IAPO IN CAP-FLD(WSS-I).
           MOVE SPACES TO FRM-VRF-IAPO IN CAP-FLD(WSS-I).
           MOVE SPACES TO FRM-IND-IAPO IN CAP-FLD(WSS-I).
           MOVE SPACES TO FRM-GLS-IAPO IN CAP-FLD(WSS-I).
           MOVE SPACES TO FRM-COD-CLAP IN CAP-FLD(WSS-I).
           MOVE ZEROES TO FRM-NUM-APAR IN CAP-FLD(WSS-I).
           MOVE SPACES TO FRM-GLS-CONE IN CAP-FLD(WSS-I).
       FIN-CLR-TAB-CAP.
           EXIT.

       DEL-TMP-STRG SECTION.
       INI-DEL-TMP-STRG.
           MOVE EIBTRMID         TO QUE-TERM.
           MOVE 'CAP'            TO QUE-TYPE.
           MOVE QUE-DEL          TO QUE-CMND.
           PERFORM GNS-PRO-QUE.
       FIN-DEL-TMP-STRG.
           EXIT.

       COPY SGCBFDBC.
       COPY SGCBFREC.
       COPY SGCBFCCM.
       COPY GNSBFRCE.
       COPY SGCBFEDP.
       COPY GNSBGCPT.
       COPY GNSBGSTR.
       COPY GNSBGQUE.
      *>>>>
