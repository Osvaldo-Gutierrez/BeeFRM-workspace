       IDENTIFICATION DIVISION.
      *========================
       PROGRAM-ID.   SGCPUEDP.
       AUTHOR.       CONSIST.
       DATE-WRITTEN. 08-May-19 11:39 AM.

      * NOMBRE PROGRAMA                   SGCPUEDP
      * VERSION PGM                       3.1
      * VERSION SKL                       08.07.21
      * OPCION                            UPD
      * ARCHIVO BASE                      SGCEDP
      * PANTALLA                          SGCEDP
      * INP/OUT                           DATACOM
      * TAMANO COMMAREA                   250


       ENVIRONMENT DIVISION.
      *=====================
       CONFIGURATION SECTION.
      *----------------------
       SPECIAL-NAMES.
               DECIMAL-POINT IS COMMA.

       DATA DIVISION.
      *==============

       WORKING-STORAGE SECTION.
      *------------------------
      * COPY GNSWGSCR.
       COPY GNSWGCVT.
       77  WSS-TAG-SGCPUEDP-INI PIC X(125) VALUE                        
           '<IDNPGM NOM=$SGCPUEDP$ SKL=$08.07.21$ VSN=${vsnpu}$        
      -    'GEN=$08-May-19 11:39 AM$ FNC=${fncpu}$/>'.    
       COPY GNSWCSCR.
       COPY GNSWVSCR.
      *<<<< FIN_SCR_VARI
       COPY SGCWGE2S.
      *<<<< FIN_SCR_VARI
       COPY GNSWGRQA REPLACING
                     ==01  ADR-REQA== BY ==02  SCR-DBC-REQA==.
           02 SCR-KEY-IDBC                     PIC X(03).
       COPY GNSWGRQA REPLACING
                     ==01  ADR-REQA== BY ==02  SCR-EDP-REQA==.
           02 SCR-KEY-IEDP                     PIC X(03).
      * CMMA CARACTER A CARACTER
       01  SCR-VARI-RED REDEFINES SCR-VARI.
           03 SCR-DFH    OCCURS 847      PIC X(01).
      * CMMA CARACTER A CARACTER
      *>>>>
       COPY SGCWIEDP.
       COPY SGCBREDP.


       COPY GNSWVIDD.
       COPY GNSWGRQA.
       COPY GNSWGUIB.
       COPY GNSWGELS.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-EDP-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-TAB-REQA==.
       COPY GNSBRTAB.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-MSC-REQA==.
       COPY GNSBRMSC.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-MSG-REQA==.
       COPY GNSBRMSG.
       COPY GNSWCFIO.
       COPY GNSWVFIO.
       COPY GNSWGFRM.
       COPY GNSWVNUM.
       COPY GNSWCNUM.
       COPY GNSWGFEC.
       COPY GNSWGHOY.
       COPY GNSWCVRF.
       COPY GNSWVVRF.
       COPY GNSWGIDC.
       COPY GNSWGSYS.

      *<<<< WSS
       COPY SGCWGE2W.
      * VARIABLE PARA DETERMINAR SI SE ENGANCHA DEPENDIENDO DEL VECTOR.
       01  WSS-PODE.
           03  WSS-NUM-PODE                         PIC 9(03).
       COPY GNSWGQUE.
       COPY GNSBRRCE.

      *>>>>
      *<<<< WSS_DTC
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-ADP-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-CCM-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-REC-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-DBC-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-OFI-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-USR-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-RCE-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-EDS-REQA==.
      *>>>>
      *<<<< WSS_IBM
       COPY SGCBRADP.
       COPY SGCBRREC.
       COPY SGCBRCCM.
       COPY SGCBRDBC.
       COPY TABBROFI.
       COPY TABBRUSR.
       COPY TABBRCOM.
       COPY SGCBREDS.
       COPY GNSWGSTR.
       COPY GNSWGCPT.
       01  WSS-VARI.
           03  WSS-FEC-FEDP                                PIC X(08).
           03  WSS-COD-MENS.
               05  WSS-GLS-MENS                           PIC X(09).
               05  WSS-IND-RSTR                           PIC X(01).
               05  WSS-IND-CMTR                           PIC X(01).
           03  WSS-GLS-IENT.
               05  WSS-CAI-IMDT                           PIC X(04).
               05  WSS-IIC-IMDT                           PIC X(08).
               05  WSS-NUM-IEDP                           PIC 9(03).
               05  WSS-IND-PODE                           PIC X(01).
               05  WSS-FIL-IENT                           PIC X(14).
           03  WSS-IFAC                          VALUE 0  PIC 9(01).
               88 NO-EXISTE-FAC                  VALUE 0.
               88 EXISTE-FAC                     VALUE 1.
           03  WSS-ICOR                          VALUE 0  PIC 9(01).
               88 NO-ASIGNE-CORRELATIVO          VALUE 0.
           03  WSS-IMAX                          VALUE 55 PIC 9(02).
           03  WSS-I                                      PIC 9(02).
           03  WSS-CIC-ICLI                               PIC X(12).
           03  CLS-VARI.
               05  CLS-I                                  PIC 9(02).
               05  CLS-IIMX                 VALUE 10      PIC 9(02).
               05  CLS-IMAX                               PIC 9(02).
               05  CLS-RMAX                 VALUE 55      PIC 9(02).
               05  CLS-VEC-CLAP.
                   07  CLS-COD-CLAP OCCURS 10             PIC X(05).
           03  WSS-IND-PODR                               PIC X(01).
           03  WSS-IND-MPOD                               PIC X(01).
           03  WSS-COD-IPOD                               PIC X(03).
           03  WSS-VEC-PODE.
               05  VEC-IND-PODE    OCCURS 100             PIC X(01).
      *>>>>
       01  PGM-VARI.
           03 PGM-ICLR                  VALUE ' '       PIC X(01).
           03 PGM-LIMPIAR-TODO          VALUE ' '       PIC X(01).
           03 PGM-LIMPIAR-LLAVES        VALUE 'K'       PIC X(01).
           03 PGM-LIMPIAR-CAMPOS        VALUE 'F'       PIC X(01).
           03 PGM-NO-LIMPIAR-NADA       VALUE 'N'       PIC X(01).
           03 PGM-PROG                                  PIC X(08).
           03 PGM-NTRN                                  PIC X(04).
           03 PGM-STAT.
              05 PGM-STAT-ADP.
                 88 PGM-STAT-ADP-NUL    VALUE '  '.
                 07 PGM-STT1-ADP        VALUE '2' PIC X(01).
                    88 PGM-STAT-ADP-OKS VALUE '0'.
                 07 PGM-STT2-ADP        VALUE '3' PIC X(01).
              05 PGM-STAT-DBC.
                 88 PGM-STAT-DBC-NUL    VALUE '  '.
                 07 PGM-STT1-DBC        VALUE '2' PIC X(01).
                    88 PGM-STAT-DBC-OKS VALUE '0'.
                 07 PGM-STT2-DBC        VALUE '3' PIC X(01).
              05 PGM-STAT-EDP.
                 88 PGM-STAT-EDP-NUL    VALUE '  '.
                 07 PGM-STT1-EDP        VALUE '2' PIC X(01).
                    88 PGM-STAT-EDP-OKS VALUE '0'.
                 07 PGM-STT2-EDP        VALUE '3' PIC X(01).
           03 PGM-SRNF                  VALUE '23'      PIC X(02).
           03 PGM-SOKS                  VALUE '00'      PIC X(02).
           03 PGM-SNUL                  VALUE '  '      PIC X(02).
           03 PGM-SUAR                  VALUE SPACES    PIC X(15).

       LINKAGE SECTION.
      *----------------
       01  DFHCOMMAREA.
           02 FILLER                    PIC X(329).
       COPY GNSLGFIO.

       PROCEDURE DIVISION.
      *===================

       MAIN SECTION.
       INI-MAIN.
           PERFORM INI.
       LUP-MAIN.
           IF SCR-INST = SCR-INST-HCM
                 PERFORM SCR-COM.
           IF SCR-CCPP = 'MOD'
                 PERFORM SCR-MOD
           ELSE
           IF SCR-CCPP = 'ING'
                 PERFORM SCR-ING
           ELSE
           IF SCR-CCPP = 'ACC'
                 PERFORM SCR-ACC
           ELSE
           IF SCR-CCPP = 'ELI'
                 PERFORM SCR-ELI
           ELSE
           IF SCR-CCPP = 'ACT'
                 PERFORM SCR-ACT
           ELSE
           IF SCR-CCPP = 'PGM'
                 PERFORM SCR-PGM
           ELSE
                 MOVE SCR-INST-HCM TO SCR-INST.
           GO TO LUP-MAIN.
       FIN-MAIN.
           EXIT.

       INI SECTION.
       INI-INI.
       COPY GNSBGEIB.
       COPY GNSBGEDB.
           MOVE LOW-VALUES TO EDP-FLD.
           MOVE LOW-VALUES TO EDP-EDT.
           PERFORM GNS-PRO-RCK.
      *     PERFORM GNS-BUS-VCA.
      * CMMA CARACTER A CARACTER
           PERFORM GNS-BUS-VCA VARYING FRM-IFLD FROM 1 BY 1 UNTIL
                                       FRM-IFLD > EIBCALEN OR
                                       FRM-IFLD > 933.
           MOVE +847 TO SCR-TCMA.
      * CMMA CARACTER A CARACTER
           MOVE +847 TO SCR-TCMA.
           PERFORM GNS-HDL-SYS.
           PERFORM GNS-HDL-FRM.
           MOVE 'SGCPUEDP' TO FIO-PROG.
           PERFORM GNS-BUS-IDD.
      *<<<< PGM_DTC
      *>>>>
      *<<<< INI_FIO
           IF SCR-DESDE-CMN
      * MARCA QUE INGRESO POR 'EDP'
               MOVE 'EDP' TO SCR-IND-ING
               MOVE     1 TO SCR-IPRO
               GO TO FIN-INI-FIO.
           IF SCR-INST-EXT = WSS-INST-FTER-CIC
               MOVE WSS-INST-NULL TO SCR-INST-EXT
               PERFORM ING-FTER-CIC.
           GO TO FIN-INI-FIO.
           PERFORM GNS-PRO-RCK.
           PERFORM GNS-BUS-VCA.
           MOVE +329 TO SCR-TCMA.
           PERFORM GNS-HDL-SYS.
           PERFORM GNS-HDL-FRM.
           MOVE 'SGCPUEDP' TO FIO-PROG.
           PERFORM GNS-BUS-IDD.
       FIN-INI.
           EXIT.

       COPY GNSBHSYS.
       COPY GNSBHFRM.
       COPY GNSBPRCK.
       COPY GNSBBVCA.
       COPY GNSBBIDD.

       SCR-COM SECTION.
       INI-SCR-COM.
           PERFORM STP-EXIT.
           MOVE FRM-CPSF-AEY TO FRM-CPIM-AEY.
           PERFORM PRO-ALL.
           PERFORM SCR-CLRA-EDP.
           PERFORM EDT-KEY-EDP.
           PERFORM EDT-FLD-EDP.
           PERFORM SCR-PUTA.
           MOVE SCR-INST-HCM TO SCR-INST.
           MOVE SCR-CMNP     TO SYS-PROG.
           MOVE SCR-VARI     TO SYS-CMMA.
           MOVE SCR-TCMA     TO SYS-TCMA.
           MOVE SYS-XCTL     TO SYS-CMND.
           PERFORM GNS-PRO-SYS.
       XCT-ERR.
           MOVE 'XCTERR    ' TO MSG-COD-MENS.
           MOVE 'GNS'        TO MSG-COD-SIST.
           PERFORM GET-MSG.
           MOVE MSG-GLS-DESC TO SYS-MEN1.
           MOVE SYS-PROG     TO SYS-MEN2.
           MOVE SYS-ABOR     TO SYS-CMND.
           PERFORM GNS-PRO-SYS.
       COPY GNSBGGBK.
       FIN-SCR-COM.
           EXIT.

       SCR-MOD SECTION.
       INI-SCR-MOD.
           IF SCR-INST = SCR-INST-HKY
               PERFORM HBL-KEY
               MOVE SCR-INST-GKY TO SCR-INST
               PERFORM SCR-DMSG
           ELSE
           IF SCR-INST = SCR-INST-GFL
               PERFORM GET-FLD
           ELSE
           IF SCR-INST = SCR-INST-GCS
               PERFORM GET-ACC.
           PERFORM DESSCRTRL.
           IF FRM-FFLD = FRM-FFLD-PF7 OR FRM-FFLD-PF8
               PERFORM XCT-PRGP.
           IF NOT ( FRM-FFLD = FRM-FFLD-PF5 OR FRM-FFLD-PF6 )
               GO TO MSG-SCR-MOD.
       MSG-SCR-MOD.
           IF SCR-STAT = SCR-STAT-CON
               MOVE SPACES TO FRM-MENS
           ELSE
           IF SCR-STAT = SCR-STAT-ABT OR SCR-VFLD = SCR-VFLD-NOT
               MOVE 'MODNOT    ' TO MSG-COD-MENS
               MOVE 'GNS' TO MSG-COD-SIST
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS
           ELSE
               MOVE SPACES TO FRM-MENS
               PERFORM CMN-MOD
               IF FIO-STAT-OKS
                   IF FRM-MEN1 NOT > SPACES
                       MOVE 'MODYES    ' TO MSG-COD-MENS
                       MOVE 'GNS' TO MSG-COD-SIST
                       PERFORM GET-MSG
                       MOVE MSG-GLS-DESC TO FRM-MEN1
                   ELSE
                       NEXT SENTENCE
               ELSE
               IF FRM-MENS NOT > SPACES
                   MOVE 'FIOSTAT' TO MSG-COD-TMSG
                   MOVE FIO-STAT  TO MSG-COD-CMSG
                   MOVE 'GNS'     TO MSG-COD-SIST
                   PERFORM GET-MSG
                   MOVE MSG-GLS-DESC TO FRM-MENS.
           PERFORM SCR-MSSG.
       FIN-SCR-MOD.
           EXIT.

       SCR-ING SECTION.
       INI-SCR-ING.
           IF SCR-INST = SCR-INST-HKY
               PERFORM HBL-IKY
               MOVE SCR-INST-GKY TO SCR-INST
               PERFORM SCR-DMSG
           ELSE
           IF SCR-INST = SCR-INST-GFL
                PERFORM GET-FLD
           ELSE
           IF SCR-INST = SCR-INST-GCS
                PERFORM GET-ACC.
           PERFORM DESSCRTRL.
       MSG-SCR-ING.
           IF SCR-STAT = SCR-STAT-CON
               MOVE SPACES TO FRM-MENS
           ELSE
           IF SCR-STAT = SCR-STAT-ABT OR SCR-VFLD = SCR-VFLD-NOT
               MOVE 'INGNOT    ' TO MSG-COD-MENS
               MOVE 'GNS' TO MSG-COD-SIST
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS
           ELSE
               MOVE SPACES TO FRM-MENS
               PERFORM CMN-ING
               IF FIO-STAT-OKS
                   IF FRM-MEN1 NOT > SPACES
                       MOVE 'INGYES    ' TO MSG-COD-MENS
                       MOVE 'GNS' TO MSG-COD-SIST
                       PERFORM GET-MSG
                       MOVE MSG-GLS-DESC TO FRM-MEN1
                   ELSE
                       NEXT SENTENCE
               ELSE
               IF FRM-MENS NOT > SPACES
                   MOVE 'FIOSTAT' TO MSG-COD-TMSG
                   MOVE FIO-STAT  TO MSG-COD-CMSG
                   MOVE 'GNS'     TO MSG-COD-SIST
                   PERFORM GET-MSG
                   MOVE MSG-GLS-DESC TO FRM-MENS.
           PERFORM SCR-MSSG.
       FIN-SCR-ING.
           EXIT.

       SCR-ACC SECTION.
       INI-SCR-ACC.
           IF SCR-INST = SCR-INST-HKY
               PERFORM HBL-KEY
               MOVE SCR-INST-GKY TO SCR-INST
               PERFORM SCR-DMSG
           ELSE
           IF SCR-INST = SCR-INST-GFL
                PERFORM GET-FLD
           ELSE
           IF SCR-INST = SCR-INST-GCS
                PERFORM GET-ACC.
           PERFORM DESSCRTRL.
           IF FRM-FFLD = FRM-FFLD-PF7 OR FRM-FFLD-PF8 OR
                         FRM-FFLD-PF5 OR FRM-FFLD-PF6
               PERFORM XCT-PRGP.
           MOVE SPACES TO FRM-MENS.
           IF SCR-STAT NOT = SCR-STAT-CON
               PERFORM CMN-ACC.
           PERFORM SCR-MSSG.
       FIN-SCR-ACC.
           EXIT.

       SCR-ELI SECTION.
       INI-SCR-ELI.
           IF SCR-INST = SCR-INST-HKY
               PERFORM HBL-KEY
               MOVE SCR-INST-GKY TO SCR-INST
               PERFORM SCR-DMSG
           ELSE
           IF SCR-INST = SCR-INST-GCS
                PERFORM GET-ACC.
           PERFORM DESSCRTRL.
           IF FRM-FFLD = FRM-FFLD-PF7 OR FRM-FFLD-PF8 OR
                         FRM-FFLD-PF5 OR FRM-FFLD-PF6
               PERFORM XCT-PRGP.
           IF SCR-STAT = SCR-STAT-CON
               MOVE SPACES TO FRM-MENS
           ELSE
           IF SCR-STAT = SCR-STAT-ABT OR SCR-VFLD = SCR-VFLD-NOT
               MOVE 'ELINOT    ' TO MSG-COD-MENS
               MOVE 'GNS' TO MSG-COD-SIST
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS
           ELSE
               MOVE SPACES TO FRM-MENS
               PERFORM CMN-ELI
               IF FIO-STAT-OKS
                   IF FRM-MEN1 NOT > SPACES
                       MOVE 'ELIYES    ' TO MSG-COD-MENS
                       MOVE 'GNS' TO MSG-COD-SIST
                       PERFORM GET-MSG
                       MOVE MSG-GLS-DESC TO FRM-MEN1
                   ELSE
                       NEXT SENTENCE
               ELSE
               IF FRM-MENS NOT > SPACES
                   MOVE 'FIOSTAT' TO MSG-COD-TMSG
                   MOVE FIO-STAT  TO MSG-COD-CMSG
                   MOVE 'GNS'     TO MSG-COD-SIST
                   PERFORM GET-MSG
                   MOVE MSG-GLS-DESC TO FRM-MENS.
           PERFORM SCR-MSSG.
       FIN-SCR-ELI.
           EXIT.

       SCR-ACT SECTION.
       INI-SCR-ACT.
           IF SCR-INST = SCR-INST-HKY
               PERFORM HBL-KEY
               MOVE SCR-INST-GKY TO SCR-INST
               PERFORM SCR-DMSG
           ELSE
           IF SCR-INST = SCR-INST-GFL
                PERFORM GET-FLD
           ELSE
           IF SCR-INST = SCR-INST-GCS
                PERFORM GET-ACC.
           PERFORM DESSCRTRL.
           IF ( FRM-FFLD = FRM-FFLD-PF7 OR FRM-FFLD-PF8  OR
                           FRM-FFLD-PF5 OR FRM-FFLD-PF6 ) AND
              SCR-ACTU = SCR-ACTU-MOD
               PERFORM XCT-PRGP.
           IF SCR-ACTU = SCR-ACTU-MOD
                  PERFORM MSG-SCR-MOD
           ELSE
                  PERFORM MSG-SCR-ING.
       FIN-SCR-ACT.
           EXIT.

       SCR-PGM SECTION.
       INI-SCR-PGM.
           IF SCR-INST = SCR-INST-HKY
               PERFORM HBL-KEY
               MOVE SCR-INST-GKY TO SCR-INST
               PERFORM SCR-DMSG
           ELSE
           IF SCR-INST = SCR-INST-GFL
                PERFORM GET-FLD
           ELSE
           IF SCR-INST = SCR-INST-GCS
                PERFORM GET-ACC.
       TRL-SCR-PGM.
           PERFORM DESSCRTRL.
           IF FRM-FFLD = FRM-FFLD-PF7 OR FRM-FFLD-PF8 OR
                         FRM-FFLD-PF5 OR FRM-FFLD-PF6
               PERFORM XCT-PRGP.
           MOVE SPACES TO FRM-MENS.
           IF SCR-STAT NOT = SCR-STAT-CON
               PERFORM CMN-PGM.
           PERFORM SCR-MSSG.
       FIN-SCR-PGM.
           EXIT.

       SCR-DMSG SECTION.
       INI-SCR-DMSG.
           IF PGM-ICLR = PGM-NO-LIMPIAR-NADA
               NEXT SENTENCE
           ELSE
           IF PGM-ICLR = PGM-LIMPIAR-TODO
               PERFORM SCR-CLRA-EDP
               PERFORM EDT-KEY-EDP
               PERFORM EDT-FLD-EDP
           ELSE
           IF PGM-ICLR = PGM-LIMPIAR-LLAVES
               PERFORM CLR-KEY-EDP
               PERFORM EDT-KEY-EDP
           ELSE
               PERFORM CLR-FLD-EDP
               PERFORM EDT-FLD-EDP.
           PERFORM STP-EXIT.
           PERFORM SCR-PUTA.
           PERFORM SCR-EXIT.
       FIN-SCR-DMSG.
           EXIT.

       XCT-PRGP SECTION.
       INI-XCT-PRGP.
           MOVE SCR-INST-BRW TO SCR-INST.
           PERFORM STP-EXIT.
           MOVE FRM-FFLD   TO SCR-FFLD.
      *
           MOVE SCR-PROG     TO SYS-PROG.
           MOVE SCR-VARI     TO SYS-CMMA.
           MOVE SCR-TCMA     TO SYS-TCMA.
           MOVE SYS-XCTL     TO SYS-CMND.
           PERFORM GNS-PRO-SYS.
           PERFORM XCT-ERR.
       FIN-XCT-PRGP.
           EXIT.

       SCR-RST SECTION.
       INI-SCR-RST.
           MOVE SPACES       TO PGM-ICLR.
           MOVE SPACES       TO SCR-ACTU.
           MOVE SCR-STPP     TO SCR-STAT.
           MOVE SCR-MFLD-NOT TO SCR-MFLD.
           MOVE LOW-VALUES   TO EDP-FLD.
           MOVE LOW-VALUES TO EDP-EDT.
       FIN-SCR-RST.
           EXIT.

       GET-FLD SECTION.
       INI-GET-FLD.
           PERFORM SCR-GFLD.
           IF FRM-STAT-ABT
               MOVE SCR-STAT-ABT TO SCR-STAT.
       FIN-GET-FLD.
           EXIT.

       CMN-MOD SECTION.
       INI-CMN-MOD.
      *<<<< CMN_ING OR INI_CMN_MOD OR INI_CMN_ELI
           MOVE 'P' TO EDP-IND-TINF IN EDP.
      *>>>>
           PERFORM KEY-ALL-EDP.
           MOVE FIO-GET-KEY-UPD TO FIO-CMND.
           PERFORM SGC-FIO-EDP.
           IF FIO-STAT-OKS AND
              EDP-STP-ITRN IN EDP NOT = SCR-UMOD
               MOVE FIO-ULK-REC TO FIO-CMND
               PERFORM SGC-FIO-EDP
               MOVE FIO-BCK-OUT TO FIO-CMND
               PERFORM SGC-FIO-EDP
               MOVE 'GNS' TO MSG-COD-SIST
               MOVE 'GNSACCSSIMUL' TO MSG-COD-MENS
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS
               GO TO FIN-CMN-MOD.
           IF NOT FIO-STAT-OKS
               GO TO FIN-CMN-MOD.
           PERFORM RET-ALL-EDP.
      *<<<< CMN_ING OR CMN_MOD
           PERFORM GET-FHOY.
           MOVE HOY-DHOY IN HOY-VARI TO EDP-NUM-DTRN IN EDP.
           MOVE HOY-MHOY IN HOY-VARI TO EDP-NUM-MTRN IN EDP.
           MOVE HOY-AHOY IN HOY-VARI TO EDP-NUM-ATRN IN EDP.
           MOVE HOY-SHOY IN HOY-VARI TO EDP-NUM-STRN IN EDP.
           MOVE HOY-HHOY IN HOY-VARI TO EDP-HRA-HRTR IN EDP.
      *>>>>
           MOVE FIO-MOD TO FIO-CMND.
           PERFORM SGC-FIO-EDP.
      *<<<< FIN_CMN_MOD
           IF NOT FIO-STAT-OKS
      *        Error inconsistencia en el ingreso : informar
               MOVE FIO-MENS TO FRM-MENS
               GO TO FIN-CMN-MOD.
           PERFORM MOD-ADP.
           PERFORM KEY-ADP-EDP.
           PERFORM RET-ADP-EDP.
           MOVE EDP-CIC-IMDT IN EDP TO ADP-CIC-IMDT IN ADP.
           MOVE EDP-NUM-IEDP IN EDP TO ADP-NUM-IEDP IN ADP.
           MOVE 'P' TO ADP-IND-TINF IN ADP.
           MOVE 1   TO ADP-NUM-IGRP IN ADP.
           MOVE ZEROES TO ADP-NUM-ICMP IN ADP.
           MOVE EDP-STP-ITRN IN EDP TO ADP-STP-ITRN IN ADP.
           MOVE SPACES TO ADP-MSC-TACC IN ADP.
           MOVE SPACES TO ADP-MSC-STAT IN ADP.
           MOVE SPACES TO ADP-COD-OTRN IN ADP.
           MOVE SPACES TO ADP-COD-ATRN IN ADP.
           MOVE SPACES TO ADP-IND-CONE IN ADP.
           MOVE SPACES TO ADP-GLS-DISP IN ADP.
           PERFORM PUT-ADP VARYING FRM-IFLD FROM 1 BY 1
                UNTIL FRM-IFLD > WSS-IMAX.
           MOVE '00' TO FIO-STAT.
      *>>>>
       FIN-CMN-MOD.
           EXIT.

       CMN-ING SECTION.
       INI-CMN-ING.
           MOVE SPACES TO EDP.
           PERFORM RET-ALL-EDP.
      *<<<< CMN_ING OR INI_CMN_MOD OR INI_CMN_ELI
           MOVE 'P' TO EDP-IND-TINF IN EDP.
      *>>>>
      *<<<< CMN_ING
           MOVE SPACES TO EDP-MSC-TACC IN EDP.
           MOVE SPACES TO EDP-MSC-STAT IN EDP.
           MOVE SPACES TO EDP-COD-OTRN IN EDP.
           MOVE SPACES TO EDP-COD-ATRN IN EDP.
           MOVE SPACES TO EDP-COD-ABGI IN EDP.
           MOVE SPACES TO EDP-COD-OFII IN EDP.
           MOVE SPACES TO EDP-COD-TINS IN EDP.
           MOVE SPACES TO EDP-GLS-DISP IN EDP.
      *>>>>
      *<<<< CMN_ING OR CMN_MOD
           PERFORM GET-FHOY.
           MOVE HOY-DHOY IN HOY-VARI TO EDP-NUM-DTRN IN EDP.
           MOVE HOY-MHOY IN HOY-VARI TO EDP-NUM-MTRN IN EDP.
           MOVE HOY-AHOY IN HOY-VARI TO EDP-NUM-ATRN IN EDP.
           MOVE HOY-SHOY IN HOY-VARI TO EDP-NUM-STRN IN EDP.
           MOVE HOY-HHOY IN HOY-VARI TO EDP-HRA-HRTR IN EDP.
      *>>>>
           MOVE FIO-PUT TO FIO-CMND.
           PERFORM SGC-FIO-EDP.
      *<<<< FIN_CMN_ING
           MOVE FIO-STAT TO PGM-STAT-ADP.
           PERFORM SET-QUE.
           MOVE QUE-MOD      TO QUE-CMND.
           PERFORM GNS-PRO-QUE.
           IF QUE-STAT NOT = QUE-STAT-OKS
               PERFORM SET-QUE
               MOVE QUE-PUT TO QUE-CMND
               PERFORM GNS-PRO-QUE.
           IF NOT PGM-STAT-ADP-OKS
      *        Error inconsistencia en el ingreso : informar
               MOVE FIO-MENS TO FRM-MENS
               GO TO FIN-CMN-ING.
           PERFORM KEY-ADP-EDP.
           PERFORM RET-ADP-EDP.
           MOVE EDP-CIC-IMDT IN EDP TO ADP-CIC-IMDT IN ADP.
           MOVE EDP-NUM-IEDP IN EDP TO ADP-NUM-IEDP IN ADP.
           MOVE 'P'    TO ADP-IND-TINF IN ADP.
           MOVE 1      TO ADP-NUM-IGRP IN ADP.
           MOVE ZEROES TO ADP-NUM-ICMP IN ADP.
           MOVE EDP-STP-ITRN IN EDP TO ADP-STP-ITRN IN ADP.
           MOVE SPACES TO ADP-MSC-TACC IN ADP.
           MOVE SPACES TO ADP-MSC-STAT IN ADP.
           MOVE SPACES TO ADP-COD-OTRN IN ADP.
           MOVE SPACES TO ADP-COD-ATRN IN ADP.
           MOVE SPACES TO ADP-IND-CONE IN ADP.
           MOVE SPACES TO ADP-GLS-DISP IN ADP.
           PERFORM PUT-ADP VARYING FRM-IFLD FROM 1 BY 1
                UNTIL FRM-IFLD > WSS-IMAX.
           MOVE '00' TO FIO-STAT.
      *>>>>
      *<<<< FIN_CMN_ING
      *ISP ENGANCHE
           PERFORM CRG-IDX-ENG.
           PERFORM DET-ENG-FAC VARYING WSS-NUM-PODE FROM 1 BY 1 UNTIL
                                       WSS-NUM-PODE > WSS-IMAX OR
               ( EDP-IND-PODE IN EDP(WSS-NUM-PODE) NOT = SPACES AND
                 EDP-IND-PODE IN EDP(WSS-NUM-PODE) NOT = 'S'    AND
                 EDP-IND-PODE IN EDP(WSS-NUM-PODE) NOT = 'N' ).
           MOVE EDP-CAI-IMDT IN EDP TO SCR-CAI-ICIC.
           MOVE EDP-IIC-IMDT IN EDP TO SCR-IIC-ICIC.
           MOVE EDP-NUM-IEDP IN EDP TO SCR-NUM-IEDP.
           MOVE EDP-IND-PODE IN EDP(WSS-NUM-PODE) TO SCR-COD-APOD.
           MOVE ADP-COD-CLAP IN ADP TO SCR-COD-CLAP.
           MOVE 'EDP    INGOK' TO SCR-EXT-MENS.
           MOVE 1 TO SCR-NUM-ICOR.
           MOVE 'F10' TO SCR-COD-AUX2.
           IF ADP-COD-CLAP IN EDP-FLD > SPACES
               MOVE WSS-IDX-ICFP TO SCR-IPRO
      *ISP ES NECESARIO INICIALIZAR ESTA VARIABLE
      *    PARA EVITAR ASRA EN REC(APO)
               MOVE 1 TO SCR-NUM-IGRP
               MOVE 'S' TO SCR-IND-ENG IN SCR-VEC-ENG(WSS-IDX-IAPO)
               MOVE 'S' TO SCR-IND-FST IN SCR-VEC-FST(WSS-IDX-IAPO)
               PERFORM EGR-FPEN-CIC
           ELSE
               IF WSS-NUM-PODE NOT > WSS-IMAX
                   MOVE WSS-NUM-PODE        TO SCR-NUM-ICOR
                   MOVE 'F10' TO SCR-COD-AUX2
                   MOVE 'S' TO SCR-IND-ENG IN SCR-VEC-ENG(WSS-IDX-ICFP)
                   MOVE 'S' TO SCR-IND-FST IN SCR-VEC-FST(WSS-IDX-ICFP)
                   PERFORM EGR-FPEN-CIC.
       CFP-CMN-ING.
      *>>>>
       FIN-CMN-ING.
           EXIT.

       CMN-ACC SECTION.
       INI-CMN-ACC.
           IF SCR-STAT = SCR-STAT-ABT OR SCR-VFLD = SCR-VFLD-NOT
               MOVE 'ACCION NO REALIZADA' TO FRM-MENS
               GO TO FIN-CMN-ACC.
      *<<<< INI_CMN_ACC
           IF NOT (SCR-CMND = 'VRF' OR
              SCR-CMND = 'DVF')
               MOVE 'GNS' TO MSG-COD-SIST
               MOVE 'CMDINV' TO MSG-COD-MENS
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS
               GO TO FIN-CMN-ACC.
           MOVE 'P' TO EDP-IND-TINF IN EDP.
      *>>>>
           PERFORM KEY-ALL-EDP.
           MOVE FIO-GET-KEY-UPD TO FIO-CMND.
           PERFORM SGC-FIO-EDP.
           IF FIO-STAT-OKS AND
              EDP-STP-ITRN IN EDP NOT = SCR-UMOD
               MOVE FIO-ULK-REC TO FIO-CMND
               PERFORM SGC-FIO-EDP
               MOVE FIO-BCK-OUT TO FIO-CMND
               PERFORM SGC-FIO-EDP
               MOVE 'GNS' TO MSG-COD-SIST
               MOVE 'GNSACCSSIMUL' TO MSG-COD-MENS
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS
               GO TO FIN-CMN-ACC.
           IF NOT FIO-STAT-OKS
               GO TO FIN-CMN-ACC.
           PERFORM RET-ALL-EDP.
      *<<<< CMN_ACC
           IF SCR-CMND = 'VRF'
               MOVE 'EDP    ACAOK' TO MSG-COD-MENS
               MOVE 'A' TO EDP-MSC-STAT IN EDP.
           IF SCR-CMND = 'DVF'
               MOVE 'EDP    DESOK' TO MSG-COD-MENS
               MOVE SPACES TO EDP-MSC-STAT IN EDP.
           MOVE FIO-MOD TO FIO-CMND.
           PERFORM SGC-FIO-EDP.
           IF FIO-STAT-OKS
               MOVE 'SGC' TO MSG-COD-SIST
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS.
      *>>>>
       FIN-CMN-ACC.
           EXIT.

       CMN-ELI SECTION.
       INI-CMN-ELI.
      *<<<< CMN_ING OR INI_CMN_MOD OR INI_CMN_ELI
           MOVE 'P' TO EDP-IND-TINF IN EDP.
      *>>>>
           PERFORM KEY-ALL-EDP.
           MOVE FIO-GET-KEY-UPD TO FIO-CMND.
           PERFORM SGC-FIO-EDP.
           IF FIO-STAT-OKS AND
              EDP-STP-ITRN IN EDP NOT = SCR-UMOD
               MOVE FIO-ULK-REC TO FIO-CMND
               PERFORM SGC-FIO-EDP
               MOVE FIO-BCK-OUT TO FIO-CMND
               PERFORM SGC-FIO-EDP
               MOVE 'GNS' TO MSG-COD-SIST
               MOVE 'GNSACCSSIMUL' TO MSG-COD-MENS
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS
               GO TO FIN-CMN-ELI.
           IF NOT FIO-STAT-OKS
               GO TO FIN-CMN-ELI.
           MOVE FIO-DEL TO FIO-CMND.
           PERFORM SGC-FIO-EDP.
      *<<<< FIN_CMN_ELI
           IF NOT FIO-STAT-OKS
      *        Error inconsistencia en la eliminacion : informar
               MOVE FIO-MENS TO FRM-MENS
               GO TO FIN-CMN-ELI.
           PERFORM DEL-ADP.
           IF NOT FIO-STAT-OKS
      *        Error inconsistencia en la eliminacion : hacer LOGTB e informar
               MOVE FIO-MENS TO FRM-MENS
               PERFORM BCK-OUT
               GO TO FIN-CMN-ELI.
      *>>>>
       FIN-CMN-ELI.
           EXIT.

       CMN-PGM SECTION.
       INI-CMN-PGM.
           PERFORM RET-ALL-EDP.
       FIN-CMN-PGM.
           EXIT.

       STP-EXIT SECTION.
       INI-STP-EXIT.
           MOVE SCR-PROG TO PGM-PROG.
           MOVE SCR-NTRN TO PGM-NTRN.

           MOVE SCR-PROV TO SCR-PROG.
           MOVE SCR-NTRV TO SCR-NTRN.

           MOVE PGM-PROG TO SCR-PROV
           MOVE PGM-NTRN TO SCR-NTRV.
       FIN-STP-EXIT.
           EXIT.

       SCR-EXIT SECTION.
       INI-SCR-EXIT.
           MOVE 'P'      TO SCR-ICMN.
           MOVE SCR-NTRN TO SYS-NTRN.
           MOVE SCR-VARI TO SYS-CMMA.
           MOVE SCR-TCMA TO SYS-TCMA.
           MOVE SYS-RTRN TO SYS-CMND.
           PERFORM GNS-PRO-SYS.
       FIN-SCR-EXIT.
           EXIT.

       SCR-PUTA SECTION.
       INI-SCR-PUTA.
           MOVE SCR-NMAP TO FRM-NAME.
           MOVE SCR-NLIB TO FRM-NLIB.
           MOVE EDP-FLD TO FRM-DFLD.
           MOVE FRM-PUT-ALL TO FRM-CMND.
           PERFORM GNS-PRO-FRM.
       FIN-SCR-PUTA.
           EXIT.

       SCR-MSSG SECTION.
       INI-SCR-MSSG.
           IF FRM-MEN1 NOT > SPACES
               MOVE SPACES TO FRM-MEN1.
           IF FRM-MEN2 NOT > SPACES
               MOVE SPACES TO FRM-MEN2.
           MOVE FRM-MENS TO EDP-GLS-MENS.
       FIN-SCR-MSSG.
           EXIT.

       SCR-GFLD SECTION.
       INI-SCR-GFLD.
           MOVE SCR-NMAP TO FRM-NAME.
           MOVE SCR-NLIB TO FRM-NLIB.
           MOVE FRM-GET-ALL TO FRM-CMND.
           PERFORM GNS-PRO-FRM.
           MOVE SPACES TO FRM-MENS.
           IF NOT ( FRM-FFLD = FRM-FFLD-RET  OR FRM-FFLD-PF10 OR
                               FRM-FFLD-PF12 OR FRM-FFLD-PF3 )
      *<<<< PFS_SCR_GFLD
           IF NOT ( ( SCR-CCPP = 'MOD' OR  SCR-CCPP = 'ACC' OR
                      SCR-CCPP = 'ELI'                      OR
                    ( SCR-CCPP = 'ACT' AND SCR-ACTU = SCR-ACTU-MOD ) )
                      AND ( FRM-FFLD = FRM-FFLD-PF8 OR
                            FRM-FFLD = FRM-FFLD-PF7 OR
                            FRM-FFLD = FRM-FFLD-PF5 OR
                            FRM-FFLD = FRM-FFLD-PF6 ) )
      *>>>>
               MOVE 'PFSINV    ' TO MSG-COD-MENS
               MOVE 'GNS' TO MSG-COD-SIST
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS
               PERFORM FST-FLD-EDP
               PERFORM SCR-MSSG
               PERFORM SCR-PUTA
               PERFORM SCR-EXIT.
           MOVE FRM-DFLD TO EDP-FLD.
           IF FRM-STAT-ABT
               GO TO FIN-SCR-GFLD.
           MOVE FRM-SUAR-OKS TO FRM-SUAR.
           PERFORM VAL-NUM-KEY-EDP.
           IF FRM-SUAR EQUAL FRM-SUAR-MAL OR FRM-SUAR-CLR
               PERFORM SCR-MSSG
               PERFORM EDT-KEY-EDP
               PERFORM SCR-PUTA
               PERFORM SCR-EXIT.
           PERFORM VAL-NUM-FLD-EDP.
           IF FRM-SUAR EQUAL FRM-SUAR-MAL OR FRM-SUAR-CLR
               PERFORM SCR-MSSG
               PERFORM EDT-KEY-EDP
               PERFORM EDT-FLD-EDP
               PERFORM SCR-PUTA
               PERFORM SCR-EXIT.
           PERFORM VAL-MKY-EDP.
           IF FRM-SUAR EQUAL FRM-SUAR-MAL OR FRM-SUAR-CLR
               GO TO ERR-SCR-GFLD.
           PERFORM VAL-FLD-EDP.
           IF FRM-SUAR EQUAL FRM-SUAR-MAL OR FRM-SUAR-CLR
               GO TO ERR-SCR-GFLD.
           PERFORM VAL-CON-FLD-EDP.
           IF NOT ( FRM-SUAR EQUAL FRM-SUAR-MAL OR FRM-SUAR-CLR )
               GO TO FIN-SCR-GFLD.
           IF FRM-UCUR NOT > SPACES
               PERFORM FST-FLD-EDP.
       ERR-SCR-GFLD.
           PERFORM SCR-MSSG.
           PERFORM EDT-KEY-EDP.
           PERFORM EDT-FLD-EDP.
           PERFORM SCR-PUTA.
           PERFORM SCR-EXIT.
       FIN-SCR-GFLD.
           MOVE SCR-STAT-MOD TO SCR-STAT.

       GET-ACC SECTION.
       INI-GET-ACC.
           MOVE SCR-NMAP TO FRM-NAME.
           MOVE SCR-NLIB TO FRM-NLIB.
           MOVE FRM-GET-ALL TO FRM-CMND.
           PERFORM GNS-PRO-FRM.
           IF NOT ( FRM-FFLD = FRM-FFLD-RET  OR FRM-FFLD-PF10 OR
                               FRM-FFLD-PF12 OR FRM-FFLD-PF3 )
      *<<<< PFS_GET_CON OR PFS_GET_ACC
           IF NOT
              ( FRM-FFLD = FRM-FFLD-PF5 OR FRM-FFLD = FRM-FFLD-PF6 OR
                FRM-FFLD = FRM-FFLD-PF7 OR FRM-FFLD = FRM-FFLD-PF8 )
      *>>>>
               MOVE 'PFSINV    ' TO MSG-COD-MENS
               MOVE 'GNS' TO MSG-COD-SIST
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO EDP-GLS-MEN2
               MOVE SCR-PRMT     TO EDP-GLS-MEN1
               PERFORM FST-MSG
               PERFORM SCR-PUTA
               PERFORM SCR-EXIT.
           MOVE FRM-DFLD TO EDP-FLD.
           IF NOT ( ( FRM-FFLD = FRM-FFLD-PF12 OR FRM-FFLD-PF3 ) OR
                      SCR-CONF > SPACES )
               PERFORM VAL-NUM-KEY-EDP
               PERFORM VAL-NUM-FLD-EDP.
       FIN-GET-ACC.
           MOVE SCR-STAT-SON TO SCR-STAT.

       GET-CON SECTION.
       INI-GET-CON.
           MOVE SCR-NMAP TO FRM-NAME.
           MOVE SCR-NLIB TO FRM-NLIB.
           MOVE FRM-GET-ALL TO FRM-CMND.
           PERFORM GNS-PRO-FRM.
           IF NOT ( FRM-FFLD = FRM-FFLD-RET  OR FRM-FFLD-PF10 OR
                               FRM-FFLD-PF12 OR FRM-FFLD-PF3 )
      *<<<< PFS_GET_CON OR PFS_GET_ACC
           IF NOT
              ( FRM-FFLD = FRM-FFLD-PF5 OR FRM-FFLD = FRM-FFLD-PF6 OR
                FRM-FFLD = FRM-FFLD-PF7 OR FRM-FFLD = FRM-FFLD-PF8 )
      *>>>>
               MOVE 'PFSINV    ' TO MSG-COD-MENS
               MOVE 'GNS' TO MSG-COD-SIST
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO EDP-GLS-MEN2
               MOVE SCR-PRMT     TO EDP-GLS-MEN1
               PERFORM FST-MSG
               PERFORM SCR-PUTA
               PERFORM SCR-EXIT.
           MOVE FRM-DFLD TO EDP-FLD.
       FIN-GET-CON.
           MOVE SCR-STAT-CON TO SCR-STAT.

       CLR-MSG SECTION.
       INI-CLR-MSG.
           MOVE SPACES TO EDP-GLS-MENS.
       FIN-CLR-MSG.
           EXIT.

       HBL-IKY SECTION.
       INI-HBL-IKY.
           IF SCR-DESDE-CMN
               MOVE EDP-GLS-MENS TO FRM-MENS
               MOVE LOW-VALUES TO EDP-FLD
               IF FRM-MENS < SPACES
                   MOVE LOW-VALUES TO EDP-GLS-MENS
               ELSE
                   MOVE FRM-MENS TO EDP-GLS-MENS.
           MOVE FRM-CPSF-AEY TO FRM-CPIM-AEY.
           PERFORM PRO-FLD-EDP.
           PERFORM PRO-MKY-EDP.
           PERFORM UNP-IKY-EDP.
           PERFORM FST-KEY-EDP.
           MOVE '1' TO FRM-CPIM-AEY.
           GO TO FIN-HBL-IKY.
           IF SCR-DESDE-CMN
               MOVE EDP-GLS-MENS TO FRM-MENS
               MOVE LOW-VALUES TO EDP-FLD
      * FLB  7-NOV-1994
               PERFORM CLR-KEY-EDP

               IF FRM-MENS < SPACES
                   MOVE LOW-VALUES TO EDP-GLS-MENS
               ELSE
                   MOVE FRM-MENS TO EDP-GLS-MENS.
           PERFORM PRO-FLD-EDP.
           PERFORM PRO-MKY-EDP.
           PERFORM UNP-IKY-EDP.
           PERFORM FST-KEY-EDP.
       FIN-HBL-IKY.
           EXIT.

       HBL-KEY SECTION.
       INI-HBL-KEY.
           IF SCR-DESDE-CMN
               MOVE EDP-GLS-MENS TO FRM-MENS
               MOVE LOW-VALUES TO EDP-FLD
               IF FRM-MENS < SPACES
                   MOVE LOW-VALUES TO EDP-GLS-MENS
               ELSE
                   MOVE FRM-MENS TO EDP-GLS-MENS.
           MOVE FRM-CPSF-AEY TO FRM-CPIM-AEY.
           PERFORM PRO-FLD-EDP.
           MOVE '1' TO FRM-CPIM-AEY.
           PERFORM UNP-KEY-EDP.
           PERFORM FST-KEY-EDP.
      *<<<< FIN_HBL_KEY
           IF  NOT (SCR-CMND = 'CON' AND SCR-CCPP = 'ACC')
                MOVE FRM-CPIM-AEY TO FRM-NUM-IMDR-ATR IN EDP-FLD
                MOVE FRM-CPIM-AEY TO FRM-VRF-IMDR-ATR IN EDP-FLD
                MOVE FRM-CPIM-AEY TO FRM-IND-IMDR-ATR IN EDP-FLD
                MOVE FRM-CPIM-AEY TO FRM-GLS-IMDR-ATR IN EDP-FLD
                MOVE FRM-CPIM-AEY TO FRM-GLS-NMDR-ATR IN EDP-FLD.
      *>>>>
       FIN-HBL-KEY.
           EXIT.

       HBL-FLD SECTION.
       INI-HBL-FLD.
           PERFORM UNP-MKY-EDP.
           PERFORM UNP-FLD-EDP.
           PERFORM FST-FLD-EDP.
       FIN-HBL-FLD.
           EXIT.

       FST-MSG SECTION.
       INI-FST-MSG.
           MOVE -1 TO EDP-GLS-MENS-LEN.
       FIN-FST-MSG.
           EXIT.

       PRO-ALL SECTION.
       INI-PRO-ALL.
           PERFORM PRO-KEY-EDP.
           PERFORM PRO-FLD-EDP.
           PERFORM FST-MSG.
       FIN-PRO-ALL.
           EXIT.

       SCR-TRL SECTION.
       INI-SCR-TRL.
           IF FRM-MEN1 NOT > SPACES
               MOVE SCR-PRMT TO FRM-MEN1.
           IF SCR-STAT = SCR-STAT-MOD
               PERFORM HBL-FLD
               PERFORM SCR-MSSG
               PERFORM EDT-KEY-EDP
               PERFORM EDT-FLD-EDP
               PERFORM SCR-PUTA
               MOVE SCR-INST-GFL TO SCR-INST
               PERFORM SCR-EXIT.
           IF SCR-STAT = SCR-STAT-SON
               PERFORM PRO-ALL
               PERFORM SCR-MSSG
               PERFORM EDT-KEY-EDP
               PERFORM EDT-FLD-EDP
               PERFORM SCR-PUTA
               MOVE SCR-INST-GCS TO SCR-INST
               PERFORM SCR-EXIT.
      *ASUME SCR-STAT-CON.
           MOVE SCR-STAT-CON TO SCR-STAT.
      *    MOVE FRM-CPSF-AEY TO FRM-CPIM-AEY.
           PERFORM PRO-ALL.
           PERFORM SCR-MSSG.
           PERFORM EDT-KEY-EDP.
           PERFORM EDT-FLD-EDP.
           PERFORM SCR-PUTA.
           MOVE SCR-INST-GAB TO SCR-INST.
           PERFORM SCR-EXIT.
       FIN-SCR-TRL.
           EXIT.

       DESSCRTRL SECTION.
       INI-DESSCRTRL.
           IF SCR-INST = SCR-INST-GCF
                  PERFORM SCR-GCNF
                  GO TO FIN-DESSCRTRL.
           MOVE SCR-VFLD-NOT TO SCR-VFLD.
           MOVE FRM-FFLD TO SCR-FFLD.
           IF SCR-STAT = SCR-STAT-ABT OR SCR-STAT-CON
                  GO TO FIN-DESSCRTRL.
           IF SCR-FFLD-RET OR SCR-FFLD-PF10
                  MOVE SCR-VFLD-YES TO SCR-VFLD
                  PERFORM PRO-CONF.
       FIN-DESSCRTRL.
           IF SCR-FFLD-PF10 OR SCR-FFLD-PF3
                 MOVE SCR-INST-HCM TO SCR-INST
           ELSE
                 MOVE SCR-INST-HKY TO SCR-INST.
       EXT-DESSCRTRL.
           EXIT.

       PRO-CONF SECTION.
       INI-PRO-CONF.
           IF FRM-MENS NOT > SPACES
               IF SCR-CONF NOT > SPACES
                   GO TO FIN-PRO-CONF
               ELSE
                   MOVE SCR-CONF TO FRM-MENS
           ELSE
               IF FRM-MEN1 NOT > SPACES
                   MOVE SCR-CONF TO FRM-MEN1.
           PERFORM PRO-KEY-EDP.
           PERFORM PRO-FLD-EDP.
           PERFORM FST-MSG.
           PERFORM SCR-MSSG.
           IF SCR-STAT = SCR-STAT-MOD
               PERFORM EDT-KEY-EDP
               PERFORM EDT-FLD-EDP.
           PERFORM SCR-PUTA.
           MOVE SCR-INST-GCF TO SCR-INST.
           PERFORM SCR-EXIT.
       FIN-PRO-CONF.
           EXIT.

       SCR-GCNF SECTION.
       INI-SCR-GCNF.
           MOVE SCR-NMAP TO FRM-NAME.
           MOVE SCR-NLIB TO FRM-NLIB.
           MOVE FRM-GET-ALL TO FRM-CMND.
           PERFORM GNS-PRO-FRM.
           IF NOT ( FRM-FFLD = FRM-FFLD-RET  OR FRM-FFLD-PF10 OR
                               FRM-FFLD-PF12 OR FRM-FFLD-PF3  OR
                               FRM-FFLD-PF4 )
               MOVE 'PFSINV    ' TO MSG-COD-MENS
               MOVE 'GNS' TO MSG-COD-SIST
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO EDP-GLS-MEN2
               MOVE SCR-CONF     TO EDP-GLS-MEN1
               PERFORM FST-MSG
               PERFORM SCR-PUTA
               PERFORM SCR-EXIT.
           MOVE FRM-DFLD TO EDP-FLD.
           MOVE FRM-FFLD TO SCR-FFLD.
           IF FRM-FFLD = FRM-FFLD-PF3
               MOVE SCR-VFLD-NOT TO SCR-VFLD
           ELSE
           IF FRM-FFLD = FRM-FFLD-RET OR FRM-FFLD-PF10 OR FRM-FFLD-PF4
               MOVE SCR-VFLD-YES TO SCR-VFLD
               PERFORM VAL-NUM-KEY-EDP
               PERFORM VAL-NUM-FLD-EDP
           ELSE
           IF FRM-FFLD = FRM-FFLD-PF12
               MOVE SCR-STPP TO SCR-STAT
               IF SCR-STAT = SCR-STAT-MOD
                   PERFORM VAL-NUM-KEY-EDP
                   PERFORM VAL-NUM-FLD-EDP
                   PERFORM SCR-TRL
               ELSE
                   MOVE SCR-VFLD-NOT TO SCR-VFLD.
       FIN-SCR-GCNF.
           EXIT.

      * PGM-EBR-ALL SECTION.
      * INI-PGM-EBR-ALL.
      *     MOVE 'GNS' TO FIO-SIST.
      *     MOVE FIO-EBR-ALL TO FIO-CMND.
      *     PERFORM GNS-FIO-TAB.
      * FIN-PGM-EBR-ALL.
      *     EXIT.


       COPY SGCBUEDP.
       COPY GNSBVNUM.
       COPY SGCBFEDP.
       COPY GNSBFMSG.
       COPY GNSBGSYS.
       COPY GNSBGDTC.
       COPY GNSBGFRM.
       COPY GNSBGMSG.
       COPY GNSBEKEY.
       COPY GNSBIABT.
       COPY GNSBFTAB.
       COPY GNSBVIND.
       COPY GNSBVMSC.
       COPY GNSBFMSC.
       COPY GNSBVIDC.
       COPY GNSBPVRF.
       COPY GNSBGFEC.
       COPY GNSBGHOY.

      *<<<< EOF

       CPT-NOMC SECTION.
       INI-CPT-NOMC.
           MOVE DBC-GLS-NOMC IN DBC TO CPT-STRN.
           PERFORM CPT-BLKS.
           MOVE CPT-STRN TO DBC-GLS-NOMC IN EDP-FLD.
       FIN-CPT-NOMC.
           EXIT.

      *  MANEJO DE COLAS
       SET-QUE SECTION.
       INI-SET-QUE.
           PERFORM ERR-QUE.
           MOVE EIBTRMID TO QUE-TERM.
           COMPUTE QUE-LITM = 7 + 125.
           MOVE 'KEY' TO QUE-TYPE.
           MOVE 'ENT' TO QUE-IKEY.
           MOVE +125  TO QUE-LDAT.
           MOVE +0    TO QUE-PCUR.
           MOVE +1    TO QUE-NITM.

           MOVE 'CFP'                   TO KEY-COD-ENTI.
           MOVE DBC-GLS-NOMC IN EDP-FLD TO KEY-GLS-NOMC.
           MOVE DBC-NUM-ICLI IN EDP-FLD TO KEY-NUM-ICLI.
           MOVE DBC-VRF-ICLI IN EDP-FLD TO KEY-VRF-ICLI.
           MOVE DBC-IND-ICLI IN EDP-FLD TO KEY-IND-ICLI.
           MOVE DBC-GLS-ICLI IN EDP-FLD TO KEY-GLS-ICLI.
           MOVE SPACES                  TO KEY-CAI-IOPE.
           MOVE SPACES                  TO KEY-IIC-IOPE.
           MOVE ZEROES                  TO KEY-FEC-FENT.
           MOVE EDP-NUM-IEDP IN EDP-FLD TO KEY-NUM-IENT.
           MOVE SPACES                  TO KEY-COD-IENT.
           MOVE EDP-FEC-FINF IN EDP-FLD TO KEY-FEC-FCMT.
           MOVE ZEROES                  TO KEY-NUM-GCMT.
      *BUS-TAB busca glosa de codigo en tabla
           MOVE EDP-CIC-IMDT IN EDP TO EDS-CIC-ICLI IN EDS.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM SGC-FIO-EDS.
           MOVE SPACES                  TO KEY-COD-USER.
           IF FIO-STAT-OKS
      *         MOVE EDS-COD-OFII IN EDS TO OFI-COD-OFIC IN OFI
      *         PERFORM BUS-OFI
      *         MOVE 'TAB'               TO TAB-COD-SIST
      *         MOVE 'COM'               TO TAB-COD-TTAB IN TAB
      *         MOVE OFI-COD-COMU IN OFI TO TAB-COD-CTAB IN TAB
      *         PERFORM BUS-TAB
      *         MOVE TAB TO COM
      *         IF COM-COD-REGI IN COM > SPACES AND
      *            COM-COD-REGI IN COM = '13'
               IF EDS-COD-ABGI IN EDS > SPACES
                   MOVE EDS-COD-ABGI IN EDS TO NUM-NUME
                   MOVE NUM-ZERO-S TO NUM-ZERO
                   MOVE NUM-SGNO-N TO NUM-SGNO
                   MOVE 12 TO NUM-NENT
                   MOVE 0  TO NUM-NDCM
                   CALL 'GNSPKNUM' USING DFHEIBLK DFHCOMMAREA NUM-VARI
                   IF NOT NUM-STAT-OKS
                       MOVE EDS-COD-ABGI IN EDS TO KEY-COD-USER.
           MOVE KEY-VARI TO QUE-DATA.
       FIN-SET-QUE.
           EXIT.

       CHK-QUEU SECTION.
       INI-CHK-QUEU.
           MOVE 1 TO QUE-NITM.
           MOVE QUE-GET TO QUE-CMND.
           PERFORM GNS-PRO-QUE.
       FIN-CHK-QUEU.
           EXIT.

       QUE-EOQ SECTION.
       INI-QUE-EOQ.
           MOVE QUE-STAT-EOQ TO QUE-STAT.
           GO TO FIN-GNS-PRO-QUE.
       FIN-QUE-EOQ.
           EXIT.

       QUE-NEX SECTION.
       INI-QUE-NEX.
           MOVE QUE-STAT-NEX TO QUE-STAT.
           GO TO FIN-GNS-PRO-QUE.
       FIN-QUE-NEX.
           EXIT.

      **************************************************************

       ERR-QUE SECTION.
       INI-ERR-QUE.
           EXEC CICS HANDLE CONDITION
                     QIDERR (QUE-NEX)
                     ITEMERR(QUE-EOQ)
           END-EXEC.
       FIN-ERR-QUE.
           EXIT.

       GNS-PRO-QUE SECTION.
       INI-GNS-PRO-QUE.
           IF QUE-CMND = QUE-PUT
               GO TO PUT-QUE
           ELSE
           IF QUE-CMND = QUE-GET
               GO TO GET-QUE
           ELSE
           IF QUE-CMND = QUE-MOD
               GO TO MOD-QUE
           ELSE
           IF QUE-CMND = QUE-DEL
               GO TO DEL-QUE.
           MOVE 'Comando invalido :' TO QUE-MEN1.
           MOVE QUE-CMND             TO QUE-MEN2.
           EXEC CICS XCTL
                     PROGRAM('GNSPPABT')
                     COMMAREA(QUE-MENS)
                     LENGTH(+79)
           END-EXEC.

       PUT-QUE.
           EXEC CICS WRITEQ TS
                     QUEUE(QUE-COLA)
                     FROM(QUE-ITEM)
                     LENGTH(QUE-LITM)
                     AUXILIARY
           END-EXEC.
       FIN-PUT-QUE.
           GO TO FIN-GNS-PRO-QUE.

       GET-QUE.
           EXEC CICS READQ TS
                     QUEUE(QUE-COLA)
                     INTO(QUE-ITEM)
                     LENGTH(QUE-LITM)
                     ITEM(QUE-NITM)
           END-EXEC.
       FIN-GET-QUE.
           GO TO FIN-GNS-PRO-QUE.

       MOD-QUE.
           EXEC CICS WRITEQ TS
                     QUEUE(QUE-COLA)
                     FROM(QUE-ITEM)
                     LENGTH(QUE-LITM)
                     ITEM(QUE-NITM)
                     REWRITE
           END-EXEC.
       FIN-MOD-QUE.
           GO TO FIN-GNS-PRO-QUE.

       DEL-QUE.
           EXEC CICS DELETEQ TS
                     QUEUE(QUE-COLA)
           END-EXEC.
       FIN-DEL-QUE.
           GO TO FIN-GNS-PRO-QUE.

       FIN-GNS-PRO-QUE.
           EXIT.

      *>>>>
      *<<<< EOF
      *  CODIGO ADICIONAL PARA ENGANCHE PROGRAMAS

       DET-ENG-FAC SECTION.
       INI-DET-ENG-FAC.
       FIN-DET-ENG-FAC.
           EXIT.

       ING-FTER-CIC SECTION.
       INI-ING-FTER-CIC.
           PERFORM ING-SETE.
           MOVE SCR-INST-GKY TO SCR-INST.
           PERFORM HBL-IKY.
           PERFORM SCR-CLRA-EDP.
           PERFORM EDT-KEY-EDP.
           PERFORM EDT-FLD-EDP.
           MOVE 'SGC' TO MSG-COD-SIST.
           MOVE SCR-EXT-MENS TO MSG-COD-MENS.
           PERFORM GET-MSG.
           MOVE MSG-GLS-DESC TO EDP-GLS-MENS.
           MOVE ZEROES TO SCR-NUM-ICOR.
           MOVE SPACES TO SCR-CIC-ICIC
                          SCR-VEC-ENG
                          SCR-VEC-FST
                          SCR-COD-AUX1
                          SCR-INST-EXT
                          SCR-EXT-MENS.
           PERFORM SCR-INIT.
           PERFORM SCR-EXIT.
       FIN-ING-FTER-CIC.
           EXIT.

       ING-SETE SECTION.
       INI-ING-SETE.
           PERFORM CRG-IDX-ENG.
           PERFORM CRG-TBL-ENG.
           MOVE WSS-NTRN(SCR-IPRO) TO SCR-NTRN.
           MOVE WSS-PROG(SCR-IPRO) TO SCR-PROG.
           MOVE WSS-NMAP(SCR-IPRO) TO SCR-NMAP.
           MOVE WSS-NLIB(SCR-IPRO) TO SCR-NLIB.
       FIN-ING-SETE.
           EXIT.

       EGR-FPEN-CIC SECTION.
       INI-EGR-FPEN-CIC.
           PERFORM CRG-TBL-ENG.
           ADD 1 TO SCR-IPRO.
           IF SCR-IND-ENG IN SCR-VEC-ENG(SCR-IPRO) = SPACES
               GO TO INI-EGR-FPEN-CIC.
           MOVE WSS-INST-FPEN-CIC TO SCR-INST-EXT.
           MOVE WSS-PROG(SCR-IPRO) TO SYS-PROG.
           MOVE SCR-VARI TO SYS-CMMA.
           MOVE SCR-TCMA TO SYS-TCMA.
           MOVE SYS-XCTL TO SYS-CMND.
           PERFORM GNS-PRO-SYS.
       FIN-EGR-FPEN-CIC.
           EXIT.

       SCR-INIT SECTION.
       INI-SCR-INIT.
           MOVE 3  TO FRM-PLIN.
           MOVE 19 TO FRM-NLIN.
           MOVE FRM-CLR-FRM TO FRM-CMND.
           PERFORM GNS-PRO-FRM.
           MOVE FRM-SINI-DBNF TO FRM-SINI.
           MOVE SCR-NMAP TO FRM-NAME.
           MOVE SCR-NLIB TO FRM-NLIB.
           MOVE EDP-FLD TO FRM-DFLD.
           MOVE FRM-INI TO FRM-CMND.
           PERFORM GNS-PRO-FRM.
       FIN-SCR-INIT.
           EXIT.
       COPY SGCBGE2C.
      *
      *>>>>
      *<<<< EOF
       RST-STAT SECTION.
       INI-RST-STAT.
           MOVE SCR-STPP     TO SCR-STAT.
           MOVE SCR-MFLD-NOT TO SCR-MFLD.
       FIN-RST-STAT.
           EXIT.

       GNS-CLR-RQA SECTION.
       INI-GNS-CLR-RQA.
           MOVE SPACES TO SCR-DBC-REQA.
           MOVE SPACES TO SCR-KEY-IDBC.
           MOVE SPACES TO SCR-EDP-REQA.
           MOVE SPACES TO SCR-KEY-IEDP.
       FIN-GNS-CLR-RQA.
           EXIT.
      *>>>>
      *<<<< EOF
       BCK-OUT SECTION.
       INI-BCK-OUT.
           MOVE FIO-BCK-OUT TO FIO-CMND.
           PERFORM SGC-FIO-ADP.
           IF FIO-STAT-OKS
      *        Para informar que el backout se realizo con exito
               MOVE '49' TO FIO-STAT.
       FIN-BCK-OUT.
           EXIT.
       CHK-VEC-PODE SECTION.
       INI-CHK-VEC-PODE.
           IF ADP-COD-IPOD IN ADP = EDP-IND-PODE IN EDP( FRM-IFLD ) AND
              ADP-NUM-IGRP IN ADP = 1 AND
              ADP-NUM-ICMP IN ADP = ZEROES
               MOVE FRM-SUAR-OKS TO FRM-SUAR.
       FIN-CHK-VEC-PODE.
           EXIT.
      *<<<< PGM_DTC
       LEE-NXT-PRV-POD SECTION.
       INI-LEE-NXT-PRV-POD.
           MOVE SPACES TO MSG-COD-MENS.
           IF SCR-EDP-REQA > SPACES
               PERFORM LEE-NXT-PRV-EDP
           ELSE
               MOVE 'EDPNO' TO MSG-COD-MENS.
       FIN-LEE-NXT-PRV-POD.
           EXIT.

       LEE-NXT-PRV SECTION.
       INI-LEE-NXT-PRV.
           IF SCR-DBC-REQA > SPACES
               PERFORM LEE-NXT-PRV-DBC
           ELSE
               PERFORM LEE-NXT-PRV-NOM.
       FIN-LEE-NXT-PRV.
           EXIT.

       LEE-NXT-PRV-DBC SECTION.
       INI-LEE-NXT-PRV-DBC.
           MOVE FIO-KDEF-S TO FIO-KDEF.
           MOVE SCR-DBC-REQA TO ADR-DBC-REQA.
           IF FRM-FFLD = FRM-FFLD-PF7
               MOVE FIO-GET-PRV TO FIO-CMND
           ELSE
               MOVE FIO-GET-NXT TO FIO-CMND.
       LUP-LEE-NXT-PRV-DBC.
           IF SCR-KEY-IDBC = 'NOM'
               MOVE 'DBC-GLS-NOMC'  TO FIO-AKEY
           ELSE
               MOVE 'DBC-IDC-ICLI'  TO FIO-AKEY.
           PERFORM SGC-FIO-DBC.
           MOVE FIO-STAT TO PGM-STAT-DBC.
           IF NOT FIO-STAT-OKS
               MOVE 'DBCNO' TO MSG-COD-MENS
               GO TO FIN-LEE-NXT-PRV-DBC.
           MOVE DBC-CIC-ICLI IN DBC TO EDP-CIC-IMDT IN EDP.
           MOVE 'P' TO EDP-IND-TINF IN EDP.
           MOVE ZEROES TO EDP-NUM-IEDP IN EDP.
           MOVE FIO-GET-NLS TO FIO-CMND.
           IF FRM-FFLD = FRM-FFLD-PF7
               MOVE 99 TO EDP-NUM-IEDP IN EDP
               MOVE FIO-GET-LEQ TO FIO-CMND.
           PERFORM SGC-FIO-EDP.
           IF FIO-STAT-OKS AND
              DBC-CIC-ICLI IN DBC = EDP-CIC-IMDT IN EDP AND
              EDP-IND-TINF IN EDP = 'P'
               MOVE '00' TO PGM-STAT-EDP
               MOVE ADR-EDP-REQA TO SCR-EDP-REQA
               MOVE ADR-DBC-REQA TO SCR-DBC-REQA
               MOVE 'DBCSI' TO MSG-COD-MENS
               GO TO FIN-LEE-NXT-PRV-DBC.
           IF FRM-FFLD = FRM-FFLD-PF7
               MOVE FIO-GET-PRV TO FIO-CMND
               GO TO LUP-LEE-NXT-PRV-DBC
           ELSE
               MOVE FIO-GET-NXT TO FIO-CMND
               GO TO LUP-LEE-NXT-PRV-DBC.
       FIN-LEE-NXT-PRV-DBC.
           EXIT.

       LEE-NXT-PRV-NOM SECTION.
       INI-LEE-NXT-PRV-NOM.
           MOVE 'NOM' TO SCR-KEY-IDBC.
           IF DBC-GLS-NOMC IN DBC > SPACES
               MOVE FIO-GET-KEY    TO FIO-CMND
               MOVE 'DBC-GLS-NOMC' TO FIO-AKEY
               PERFORM SGC-FIO-DBC
               IF FIO-STAT-OKS
                   IF FRM-FFLD = FRM-FFLD-PF7
                       MOVE FIO-GET-PRV TO FIO-CMND
                   ELSE
                       MOVE FIO-GET-NXT TO FIO-CMND
               ELSE
                   IF FRM-FFLD = FRM-FFLD-PF7
                       MOVE FIO-GET-LEQ TO FIO-CMND
                   ELSE
                       MOVE FIO-GET-NLS TO FIO-CMND
           ELSE
               IF FRM-FFLD = FRM-FFLD-PF7
                   MOVE FIO-GET-LEQ TO FIO-CMND
               ELSE
                   MOVE FIO-GET-NLS TO FIO-CMND.
       LUP-LEE-NXT-PRV-NOM.
           MOVE 'DBC-GLS-NOMC'  TO FIO-AKEY.
           PERFORM SGC-FIO-DBC.
           MOVE FIO-STAT TO PGM-STAT-DBC.
           IF NOT FIO-STAT-OKS
               MOVE 'DBCNO' TO MSG-COD-MENS
               GO TO FIN-LEE-NXT-PRV-NOM.
           MOVE DBC-CIC-ICLI IN DBC TO EDP-CIC-IMDT IN EDP.
           MOVE 'P' TO EDP-IND-TINF IN EDP.
           MOVE ZEROES TO EDP-NUM-IEDP IN EDP.
           MOVE FIO-GET-NLS TO FIO-CMND.
           IF FRM-FFLD = FRM-FFLD-PF7
               MOVE 99 TO EDP-NUM-IEDP IN EDP
               MOVE FIO-GET-LEQ TO FIO-CMND.
           PERFORM SGC-FIO-EDP.
           IF FIO-STAT-OKS AND
              DBC-CIC-ICLI IN DBC = EDP-CIC-IMDT IN EDP AND
              EDP-IND-TINF IN EDP = 'P'
               MOVE '00' TO PGM-STAT-EDP
               MOVE ADR-EDP-REQA TO SCR-EDP-REQA
               MOVE ADR-DBC-REQA TO SCR-DBC-REQA
               MOVE 'DBCSI' TO MSG-COD-MENS
               GO TO FIN-LEE-NXT-PRV-NOM.
           IF FRM-FFLD = FRM-FFLD-PF7
               MOVE FIO-GET-PRV TO FIO-CMND
               GO TO LUP-LEE-NXT-PRV-NOM
           ELSE
               MOVE FIO-GET-NXT TO FIO-CMND
               GO TO LUP-LEE-NXT-PRV-NOM.
       FIN-LEE-NXT-PRV-NOM.
           EXIT.

       LEE-NXT-PRV-EDP SECTION.
       INI-LEE-NXT-PRV-EDP.
           MOVE SCR-EDP-REQA TO ADR-EDP-REQA.
           MOVE ADR-VKEY IN ADR-EDP-REQA TO WSS-CIC-ICLI IN WSS-VARI.
           MOVE FIO-KDEF-S TO FIO-KDEF.
       LUP-NXT-PRV-EDP.
           IF FRM-FFLD = FRM-FFLD-PF5
               MOVE FIO-GET-PRV TO FIO-CMND
           ELSE
               MOVE FIO-GET-NXT TO FIO-CMND.
           PERFORM SGC-FIO-EDP.
           IF FIO-STAT-OKS AND
              EDP-CIC-IMDT IN EDP = WSS-CIC-ICLI IN WSS-VARI
               IF EDP-IND-TINF IN EDP = 'P'
                   MOVE '00' TO PGM-STAT-EDP
                   MOVE '00' TO PGM-STAT-DBC
                   MOVE ADR-EDP-REQA TO SCR-EDP-REQA
                   MOVE 'EDPSI' TO MSG-COD-MENS
                   GO TO FIN-LEE-NXT-PRV-EDP
               ELSE
                   GO TO LUP-NXT-PRV-EDP.
           MOVE 'EDPNO' TO MSG-COD-MENS.
       FIN-LEE-NXT-PRV-EDP.
           EXIT.
      *>>>>
       BUS-COR-EDP SECTION.
       INI-BUS-COR-EDP.
           MOVE 0 TO WSS-IFAC IN WSS-VARI.
           IF SCR-STAT = SCR-STAT-CON
               PERFORM BUS-COR-FEPO
               IF FIO-STAT-OKS AND
                  EDP-CAI-IMDT IN EDP-FLD = EDP-CAI-IMDT IN EDP AND
                  EDP-IIC-IMDT IN EDP-FLD = EDP-IIC-IMDT IN EDP AND
                  EDP-IND-TINF IN EDP = 'F'
                   MOVE 1 TO WSS-IFAC IN WSS-VARI
                   GO TO FIN-BUS-COR-EDP.

           MOVE 0 TO EDP-NUM-IEDP IN EDP-FLD.
           MOVE EDP-CAI-IMDT IN EDP-FLD TO EDP-CAI-IMDT IN EDP.
           MOVE EDP-IIC-IMDT IN EDP-FLD TO EDP-IIC-IMDT IN EDP.
           MOVE 'P' TO EDP-IND-TINF IN EDP.
           MOVE 99 TO EDP-NUM-IEDP IN EDP.
           MOVE FIO-GET-LEQ TO FIO-CMND.
           PERFORM SGC-FIO-EDP.
           IF FIO-STAT-OKS AND
              EDP-CAI-IMDT IN EDP-FLD = EDP-CAI-IMDT IN EDP AND
              EDP-IIC-IMDT IN EDP-FLD = EDP-IIC-IMDT IN EDP AND
              EDP-IND-TINF IN EDP = 'P'
               MOVE EDP-NUM-IEDP IN EDP TO EDP-NUM-IEDP IN EDP-FLD.

      *     IF ( SCR-CCPP = 'ING' OR 'ACT' ) AND
           IF FIO-STAT-OKS
               MOVE FIO-END-BRW TO FIO-CMND
               PERFORM SGC-FIO-EDP.

           IF SCR-CCPP = 'ING' OR 'ACT'
               PERFORM BUS-COR-FEDP
               ADD 1 TO EDP-NUM-IEDP IN EDP-FLD.
           MOVE 1 TO WSS-ICOR.
       FIN-BUS-COR-EDP.
           EXIT.

       BUS-COR-FEDP SECTION.
       INI-BUS-COR-FEDP.
           MOVE EDP-CAI-IMDT IN EDP-FLD TO EDP-CAI-IMDT IN EDP.
           MOVE EDP-IIC-IMDT IN EDP-FLD TO EDP-IIC-IMDT IN EDP.
           MOVE 'F' TO EDP-IND-TINF IN EDP.
           MOVE 99 TO EDP-NUM-IEDP IN EDP.
           MOVE FIO-GET-LEQ TO FIO-CMND.
           PERFORM SGC-FIO-EDP.
           IF FIO-STAT-OKS AND
              EDP-CAI-IMDT IN EDP-FLD = EDP-CAI-IMDT IN EDP AND
              EDP-IIC-IMDT IN EDP-FLD = EDP-IIC-IMDT IN EDP AND
              EDP-IND-TINF IN EDP = 'F'
               IF EDP-NUM-IEDP IN EDP > EDP-NUM-IEDP IN EDP-FLD
                   MOVE EDP-NUM-IEDP IN EDP TO EDP-NUM-IEDP IN
                                                        EDP-FLD.
           IF FIO-STAT-OKS
               MOVE FIO-END-BRW TO FIO-CMND
               PERFORM SGC-FIO-EDP.

       FIN-BUS-COR-FEDP.
           EXIT.

       BUS-COR-FEPO SECTION.
       INI-BUS-COR-FEPO.
           MOVE 0 TO EDP-NUM-IEDP IN EDP-FLD.
           MOVE EDP-CAI-IMDT IN EDP-FLD TO EDP-CAI-IMDT IN EDP.
           MOVE EDP-IIC-IMDT IN EDP-FLD TO EDP-IIC-IMDT IN EDP.
           MOVE 'F' TO EDP-IND-TINF IN EDP.
           MOVE 99 TO EDP-NUM-IEDP IN EDP.
           MOVE FIO-GET-LEQ TO FIO-CMND.
           PERFORM SGC-FIO-EDP.
           IF FIO-STAT-OKS AND
              EDP-CAI-IMDT IN EDP-FLD = EDP-CAI-IMDT IN EDP AND
              EDP-IIC-IMDT IN EDP-FLD = EDP-IIC-IMDT IN EDP AND
              EDP-IND-TINF IN EDP = 'F'
               MOVE EDP-NUM-IEDP IN EDP TO EDP-NUM-IEDP IN EDP-FLD.

           IF FIO-STAT-OKS
               MOVE FIO-END-BRW TO FIO-CMND
               PERFORM SGC-FIO-EDP.

           MOVE 1 TO WSS-ICOR.
       FIN-BUS-COR-FEPO.
           EXIT.


       BUS-CIC-CLI SECTION.
       INI-BUS-CIC-CLI.
           IF DBC-NUM-ICLI IN EDP-FLD > ZEROES
      *IDC-CLI Busca Cliente por medio de IdC
               MOVE DBC-NUM-ICLI IN EDP-FLD TO DBC-NUM-ICLI IN DBC
               MOVE DBC-IND-ICLI IN EDP-FLD TO DBC-IND-ICLI IN DBC
               MOVE DBC-GLS-ICLI IN EDP-FLD TO DBC-GLS-ICLI IN DBC
               MOVE 'DBC-IDC-ICLI'  TO FIO-AKEY
      *<<<< PGM_DTC
               MOVE 'IDC' TO SCR-KEY-IDBC
      *>>>>
               MOVE FIO-GET-KEY-ALT TO FIO-CMND
               PERFORM GET-CLI

               PERFORM CPT-NOMC

      *        MOVE DBC-GLS-NOMC IN DBC TO DBC-GLS-NOMC IN EDP-FLD
               IF MSG-COD-MENS > SPACES
                   MOVE FIO-STAT-NEX TO FIO-STAT
                   GO TO FIN-BUS-CIC-CLI
               ELSE
                   MOVE '00' TO PGM-STAT-DBC
      *<<<< PGM_DTC
                   MOVE ADR-DBC-REQA TO SCR-DBC-REQA
      *>>>>
                   MOVE DBC-CAI-ICLI IN DBC TO
                       EDP-CAI-IMDT IN EDP-FLD
                   MOVE DBC-IIC-ICLI IN DBC TO
                       EDP-IIC-IMDT IN EDP-FLD
           ELSE
           IF DBC-GLS-NOMC IN EDP-FLD > SPACES
               MOVE SPACES TO DBC-GLS-NOMC IN DBC
      *NOM-CLI Busca Cliente por medio del Nombre

               MOVE DBC-GLS-NOMC IN EDP-FLD TO STR-GLS-GSTR
               PERFORM STR-UNS
               MOVE STR-GLS-FUNS IN STR-VARI(1) TO DBC-GLS-APAT IN DBC
               MOVE STR-GLS-FUNS IN STR-VARI(2) TO DBC-GLS-AMAT IN DBC
               MOVE STR-GLS-FUNS IN STR-VARI(3) TO DBC-GLS-NOMB IN DBC

               MOVE 'DBC-GLS-NOMC'  TO FIO-AKEY
      *<<<< PGM_DTC
               MOVE 'NOM' TO SCR-KEY-IDBC
      *>>>>
               MOVE FIO-GET-NLS-ALT TO FIO-CMND
               PERFORM GET-CLI
               IF MSG-COD-MENS > SPACES
                   MOVE FIO-STAT-NEX TO FIO-STAT
                   GO TO FIN-BUS-CIC-CLI
               ELSE
                   MOVE '00' TO PGM-STAT-DBC
      *<<<< PGM_DTC
                   MOVE ADR-DBC-REQA TO SCR-DBC-REQA
      *>>>>
                   PERFORM CPT-NOMC

                   MOVE DBC-NUM-ICLI IN DBC TO
                       DBC-NUM-ICLI IN EDP-FLD
                   MOVE DBC-VRF-ICLI IN DBC TO
                       DBC-VRF-ICLI IN EDP-FLD
                   MOVE DBC-IND-ICLI IN DBC TO
                       DBC-IND-ICLI IN EDP-FLD
                   MOVE DBC-GLS-ICLI IN DBC TO
                       DBC-GLS-ICLI IN EDP-FLD
                   MOVE DBC-CAI-ICLI IN DBC TO
                       EDP-CAI-IMDT IN EDP-FLD
                   MOVE DBC-IIC-ICLI IN DBC TO
                       EDP-IIC-IMDT IN EDP-FLD.
           MOVE 'P' TO EDP-IND-TINF IN EDP.
       FIN-BUS-CIC-CLI.
           EXIT.

       MOV-IND-PODE SECTION.
       INI-MOV-IND-PODE.
           MOVE FRM-SUAR-OKS TO FRM-SUAR.
           PERFORM BUS-CLS-APOD.
           IF FRM-SUAR = FRM-SUAR-MAL
               GO TO FIN-MOV-IND-PODE.
           PERFORM INI-COD-IPOD VARYING CLS-I FROM 1 BY 1
                UNTIL CLS-I > CLS-RMAX.
           MOVE EDP-CAI-IMDT IN EDP-FLD TO ADP-CAI-IMDT IN ADP.
           MOVE EDP-IIC-IMDT IN EDP-FLD TO ADP-IIC-IMDT IN ADP.
           MOVE 'P'                     TO ADP-IND-TINF IN ADP.
           MOVE EDP-NUM-IEDP IN EDP-FLD TO ADP-NUM-IEDP IN ADP.
           MOVE SPACES                  TO ADP-COD-IPOD IN ADP.
           MOVE ZEROES                  TO ADP-NUM-IGRP IN ADP.
           MOVE ZEROES                  TO ADP-NUM-ICMP IN ADP.
           MOVE FIO-GET-NLS TO FIO-CMND.
       LUP-MOV-IND-PODE.
           MOVE FRM-SUAR-OKS TO FRM-SUAR.
           PERFORM SGC-FIO-ADP.
           IF NOT ( FIO-STAT-OKS AND
              EDP-CAI-IMDT IN EDP-FLD = ADP-CAI-IMDT IN ADP AND
              EDP-IIC-IMDT IN EDP-FLD = ADP-IIC-IMDT IN ADP AND
              ADP-IND-TINF IN ADP     = 'P' )
               GO TO EXT-MOV-IND-PODE.
           IF ADP-NUM-IEDP IN ADP NOT = EDP-NUM-IEDP IN EDP-FLD
               MOVE FIO-GET-NXT TO FIO-CMND
               GO TO LUP-MOV-IND-PODE.
       CON-MOV-IND-PODE.
           MOVE ADP-COD-IPOD IN ADP TO WSS-COD-IPOD IN WSS-VARI.
           IF ADP-CAI-IAPO IN ADP = ADP-CAI-IAPO IN EDP-FLD AND
              ADP-IIC-IAPO IN ADP = ADP-IIC-IAPO IN EDP-FLD
               MOVE 'Y' TO ADP-IND-CONE IN ADP
               GO TO NXT-MOV-IND-PODE.
           MOVE FRM-SUAR-MAL TO FRM-SUAR.
           PERFORM BUS-CLAS VARYING CLS-I FROM 1 BY 1
                        UNTIL CLS-I > CLS-IMAX OR
                        FRM-SUAR = FRM-SUAR-OKS.
           IF FRM-SUAR = FRM-SUAR-MAL
               MOVE FIO-GET-NXT TO FIO-CMND
               GO TO LUP-MOV-IND-PODE.
           IF ADP-NUM-APAR IN ADP NOT = 1
               MOVE 'Y' TO ADP-IND-CONE IN ADP.
       NXT-MOV-IND-PODE.
           IF ADP-IND-CONE IN ADP = 'Y'
               MOVE ADP-COD-IPOD TO WSS-IND-PODR IN WSS-VARI
               MOVE ADP-COD-IPOD TO WSS-IND-MPOD IN WSS-VARI
               PERFORM BUS-COD-IPOD VARYING CLS-I FROM 1 BY 1
                       UNTIL CLS-I > CLS-RMAX
               GO TO STA-MOV-IND-PODE.
           MOVE FIO-GET-NXT TO FIO-CMND
           PERFORM SGC-FIO-ADP
           IF NOT FIO-STAT-OKS
               MOVE ADP-COD-IPOD TO WSS-IND-PODR IN WSS-VARI
               MOVE 'S'          TO WSS-IND-MPOD IN WSS-VARI
               PERFORM BUS-COD-IPOD VARYING CLS-I FROM 1 BY 1
                       UNTIL CLS-I > CLS-RMAX
               GO TO EXT-MOV-IND-PODE.
           IF EDP-CAI-IMDT IN EDP-FLD = ADP-CAI-IMDT IN ADP AND
              EDP-IIC-IMDT IN EDP-FLD = ADP-IIC-IMDT IN ADP AND
              ADP-COD-IPOD IN ADP     = WSS-COD-IPOD IN WSS-VARI AND
              ADP-NUM-IEDP IN ADP     = EDP-NUM-IEDP IN EDP-FLD AND
              ADP-IND-TINF IN ADP     = 'P'
               IF ADP-IND-CONE IN ADP = 'Y'
                   MOVE ADP-COD-IPOD TO WSS-IND-PODR IN WSS-VARI
                   MOVE ADP-COD-IPOD TO WSS-IND-MPOD IN WSS-VARI
                   PERFORM BUS-COD-IPOD VARYING CLS-I FROM 1 BY 1
                       UNTIL CLS-I > CLS-RMAX
                   GO TO STA-MOV-IND-PODE
               ELSE
                   MOVE ADP-COD-IPOD TO WSS-IND-PODR IN WSS-VARI
                   MOVE 'S'          TO WSS-IND-MPOD IN WSS-VARI
                   PERFORM BUS-COD-IPOD VARYING CLS-I FROM 1 BY 1
                       UNTIL CLS-I > CLS-RMAX
                   GO TO STA-MOV-IND-PODE
           ELSE
               IF ADP-COD-IPOD IN ADP NOT = WSS-COD-IPOD IN WSS-VARI
                   MOVE WSS-COD-IPOD IN WSS-VARI TO
                                        WSS-IND-PODR IN WSS-VARI
                   MOVE 'S'          TO WSS-IND-MPOD IN WSS-VARI
                   PERFORM BUS-COD-IPOD VARYING CLS-I FROM 1 BY 1
                       UNTIL CLS-I > CLS-RMAX
                   GO TO CON-MOV-IND-PODE.
       STA-MOV-IND-PODE.
           IF FIO-STAT-OKS AND
              EDP-CAI-IMDT IN EDP-FLD = ADP-CAI-IMDT IN ADP AND
              EDP-IIC-IMDT IN EDP-FLD = ADP-IIC-IMDT IN ADP AND
              ADP-NUM-IEDP IN ADP     = EDP-NUM-IEDP IN EDP-FLD AND
              ADP-IND-TINF IN ADP     = 'P'
              IF ADP-COD-IPOD IN ADP = WSS-COD-IPOD IN WSS-VARI
                  MOVE FIO-GET-NXT TO FIO-CMND
                  PERFORM SGC-FIO-ADP
                  GO TO STA-MOV-IND-PODE
              ELSE
                  GO TO CON-MOV-IND-PODE.
       EXT-MOV-IND-PODE.
           MOVE WSS-VEC-PODE IN WSS-VARI TO EDP-VEC-PODE IN EDP.
           MOVE FRM-SUAR-OKS TO FRM-SUAR.
       FIN-MOV-IND-PODE.
           EXIT.

       BUS-COD-IPOD SECTION.
       INI-BUS-COD-IPOD.
           IF EDP-IND-PODE IN EDP(CLS-I) = WSS-IND-PODR IN WSS-VARI
               MOVE WSS-IND-MPOD IN WSS-VARI TO VEC-IND-PODE
                                                 IN WSS-VARI(CLS-I).
       FIN-BUS-COD-IPOD.
           EXIT.

       INI-COD-IPOD SECTION.
       INI-INI-COD-IPOD.
           MOVE 'N' TO VEC-IND-PODE IN WSS-VARI(CLS-I).
       FIN-INI-COD-IPOD.
           EXIT.
       BUS-CLS-APOD SECTION.
       INI-BUS-CLS-APOD.
           PERFORM CLR-CLS-CLAP VARYING CLS-I FROM 1 BY 1 UNTIL
                   CLS-I > CLS-IIMX.
           MOVE SPACES TO REC-KEY-IREC IN REC
           MOVE ZEROES TO CLS-IMAX IN CLS-VARI.
           MOVE ADP-CIC-IAPO IN ADP TO REC-CIC-ICLI IN REC
           MOVE REC-COD-APOD IN REC-VARI TO REC-COD-TREC IN REC
           MOVE FIO-GET-NLS TO FIO-CMND.
       LUP-BUS-CLS-APOD.
           PERFORM SGC-FIO-REC.
           IF NOT ( FIO-STAT-OKS AND
              ADP-CIC-IAPO IN ADP = REC-CIC-ICLI IN REC AND
              REC-COD-APOD IN REC-VARI = REC-COD-TREC IN REC)
               GO TO FIN-BUS-CLS-APOD.
           IF REC-NUM-TREC IN REC NOT = EDP-NUM-IEDP IN EDP-FLD OR
              REC-CAI-IREL IN REC NOT = EDP-CAI-IMDT IN EDP-FLD OR
              REC-IIC-IREL IN REC NOT = EDP-IIC-IMDT IN EDP-FLD OR
              REC-IND-VIGE IN REC     = 'N'
               MOVE FIO-GET-NXT TO FIO-CMND
               GO TO LUP-BUS-CLS-APOD.
           ADD 1 TO CLS-IMAX IN CLS-VARI.
           IF CLS-IMAX IN CLS-VARI > CLS-IIMX
               MOVE 'SGC' TO MSG-COD-SIST
               MOVE 'CLS    OVFLW' TO MSG-COD-MENS
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS
               MOVE FRM-SUAR-MAL TO FRM-SUAR
               GO TO FIN-BUS-CLS-APOD.
           MOVE REC-COD-AREC IN REC TO CLS-COD-CLAP IN
                                           CLS-VARI(CLS-IMAX).
           MOVE FIO-GET-NXT TO FIO-CMND.
           GO TO LUP-BUS-CLS-APOD.
       FIN-BUS-CLS-APOD.
           EXIT.
       CLR-CLS-CLAP SECTION.
       INI-CLR-CLS-CLAP.
           MOVE SPACES TO CLS-COD-CLAP IN CLS-VARI(CLS-I).
       FIN-CLR-CLS-CLAP.
           EXIT.
       BUS-CLAS SECTION.
       INI-BUS-CLAS.
           IF ADP-COD-CLAP IN ADP = CLS-COD-CLAP IN CLS-VARI(CLS-I)
               MOVE FRM-SUAR-OKS TO FRM-SUAR.
       FIN-BUS-CLAS.
           EXIT.

       COPY SGCBFADP.
       COPY SGCBFREC.
       COPY SGCBFCCM.
       COPY GNSBFRCE.
       COPY GNSBBTAB.
       COPY SGCBFDBC.
       COPY GNSBEGLS.
       COPY SGCBGCLI.
       COPY GNSBGSTR.
       COPY GNSBGCPT.
       COPY TABBFUSR.
       COPY SGCBFEDS.
       COPY TABBBUSR.
       COPY TABBVUSR.
       COPY TABBFOFI.
       COPY TABBBOFI.
       COPY TABBVOFI.
      *>>>>
      *<<<< EOF_PU

       PUT-ADP SECTION.
       INI-PUT-ADP.
           IF EDP-IND-PODE IN EDP( FRM-IFLD ) = 'N' OR
              EDP-IND-PODE IN EDP( FRM-IFLD ) NOT > SPACES
               GO TO FIN-PUT-ADP.
           MOVE EDP-IND-PODE IN EDP( FRM-IFLD ) TO ADP-COD-IPOD IN ADP.
           MOVE FIO-PUT TO FIO-CMND.
           PERFORM SGC-FIO-ADP.
       FIN-PUT-ADP.
           EXIT.

       MOD-ADP SECTION.
       INI-MOD-ADP.
           MOVE EDP-CIC-IMDT IN EDP TO ADP-CIC-IMDT IN ADP.
           MOVE EDP-NUM-IEDP IN EDP TO ADP-NUM-IEDP IN ADP.
           MOVE 'P'                 TO ADP-IND-TINF IN ADP.
           MOVE FIO-GET-NLS TO FIO-CMND.
           PERFORM SGC-FIO-ADP.
           IF NOT (
                   FIO-STAT-OKS AND
                   ADP-CIC-IMDT IN ADP = EDP-CIC-IMDT IN EDP AND
                   ADP-NUM-IEDP IN ADP = EDP-NUM-IEDP IN EDP AND
                   ADP-IND-TINF IN ADP = 'P'
                   )
               IF FIO-STAT-OKS
                   GO TO BRW-MOD-ADP
               ELSE
                   GO TO FIN-MOD-ADP.
       LUP-MOD-ADP.
           IF NOT ( ADP-NUM-IGRP IN ADP = 1 AND
              ADP-NUM-ICMP IN ADP = ZEROES )
               MOVE FIO-GET-NXT TO FIO-CMND
               PERFORM SGC-FIO-ADP
               IF FIO-STAT-OKS AND
                  ADP-CIC-IMDT IN ADP = EDP-CIC-IMDT IN EDP AND
                  ADP-NUM-IEDP IN ADP = EDP-NUM-IEDP IN EDP AND
                  ADP-IND-TINF IN ADP = 'P'
                   GO TO LUP-MOD-ADP
               ELSE
                   GO TO BRW-MOD-ADP.

           MOVE FRM-SUAR-MAL TO FRM-SUAR.
           PERFORM CHK-VEC-PODE VARYING FRM-IFLD FROM 1 BY 1
                    UNTIL FRM-IFLD > WSS-IMAX
                            OR FRM-SUAR = FRM-SUAR-OKS.

           MOVE FIO-END-BRW TO FIO-CMND.
           PERFORM SGC-FIO-ADP.
           MOVE FIO-GET-KEY-UPD TO FIO-CMND.
           PERFORM SGC-FIO-ADP.
           IF FRM-SUAR = FRM-SUAR-OKS
               PERFORM RET-ADP-EDP
               PERFORM KEY-ADP-EDP
               MOVE FIO-MOD TO FIO-CMND
               PERFORM SGC-FIO-ADP
               MOVE FIO-GET-NLS TO FIO-CMND
               PERFORM SGC-FIO-ADP
               MOVE FIO-GET-NXT TO FIO-CMND
               PERFORM SGC-FIO-ADP
           ELSE
               MOVE FIO-DEL TO FIO-CMND
               PERFORM SGC-FIO-ADP
               MOVE FIO-GET-NLS TO FIO-CMND
               PERFORM SGC-FIO-ADP.

           IF FIO-STAT-OKS AND
              ADP-CIC-IMDT IN ADP = EDP-CIC-IMDT IN EDP AND
              ADP-NUM-IEDP IN ADP = EDP-NUM-IEDP IN EDP AND
              ADP-IND-TINF IN ADP = 'P'
               GO TO LUP-MOD-ADP.

           IF NOT FIO-STAT-OKS
               GO TO FIN-MOD-ADP.
       BRW-MOD-ADP.
           MOVE FIO-END-BRW TO FIO-CMND.
           PERFORM SGC-FIO-ADP.
       FIN-MOD-ADP.
           EXIT.

       DEL-ADP SECTION.
       INI-DEL-ADP.
           MOVE EDP-CIC-IMDT IN EDP TO ADP-CIC-IMDT IN ADP.
           MOVE EDP-NUM-IEDP IN EDP TO ADP-NUM-IEDP IN ADP.
           MOVE 'P'                 TO ADP-IND-TINF IN ADP.
           MOVE FIO-GET-NLS TO FIO-CMND.
           PERFORM SGC-FIO-ADP.
           IF NOT (
                   FIO-STAT-OKS AND
                   ADP-CIC-IMDT IN ADP = EDP-CIC-IMDT IN EDP AND
                   ADP-NUM-IEDP IN ADP = EDP-NUM-IEDP IN EDP AND
                   ADP-IND-TINF IN ADP = 'P'
                   )
               IF FIO-STAT-OKS
                   GO TO BRW-DEL-ADP
               ELSE
                   GO TO FIN-DEL-ADP.
       LUP-DEL-ADP.
           MOVE FIO-END-BRW TO FIO-CMND.
           PERFORM SGC-FIO-ADP.
           MOVE FIO-GET-KEY-UPD TO FIO-CMND.
           PERFORM SGC-FIO-ADP.
           MOVE FIO-DEL TO FIO-CMND.
           PERFORM SGC-FIO-ADP.
           IF NOT FIO-STAT-OKS
               GO TO FIN-DEL-ADP.

           MOVE FIO-GET-NLS TO FIO-CMND.
           PERFORM SGC-FIO-ADP.
           IF FIO-STAT-OKS AND
              ADP-CIC-IMDT IN ADP = EDP-CIC-IMDT IN EDP AND
              ADP-NUM-IEDP IN ADP = EDP-NUM-IEDP IN EDP AND
              ADP-IND-TINF IN ADP = 'P'
               GO TO LUP-DEL-ADP.
           IF NOT FIO-STAT-OKS
               GO TO FIN-DEL-ADP.

       BRW-DEL-ADP.
           MOVE FIO-END-BRW TO FIO-CMND.
           PERFORM SGC-FIO-ADP.
       FIN-DEL-ADP.
           EXIT.

      *>>>>
