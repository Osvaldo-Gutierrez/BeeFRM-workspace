       IDENTIFICATION DIVISION.
      *=======================
       PROGRAM-ID.      SGCPGTCL.
       AUTHOR.          CONSIST.
       DATE-WRITTEN.    11-Mar-91 05:12 PM.

      * Programa Actualizador Batch de Campo DBC-COD-TICL en Archivo DBC.

       ENVIRONMENT DIVISION.
      *====================

       DATA DIVISION.
      *=============
       WORKING-STORAGE SECTION.
      *-----------------------
      *<<<< WSS_DTC
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-TAB-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-MSG-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-OFI-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-DBC-REQA==.
      *<<<< DEU
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-CAM-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-REC-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-RDE-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-ESC-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-FIA-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-AMF-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-OPC-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-RDC-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-DLC-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-RDT-REQA==.
      *>>>>
      *<<<< WSS
       COPY GNSWGRQA.
       COPY GNSWGUIB.
       COPY GNSWGELS.
       COPY GNSWGIFD.
       COPY GNSWCFIO.
       COPY GNSWVFIO.
       COPY GNSWGSYS.
       COPY GNSBRTAB.
       COPY GNSBRMSG.
       COPY TABBROFI.
       COPY SGCBRDBC.
      *<<<< DEU
       COPY TABBRCAM.
       COPY SGCBRREC.
       COPY DEUBRRDE.
       COPY DEUBRESC.
       COPY DEUBRFIA.
       COPY DEUBRAMF.
       COPY COLBROPC.
       COPY COLBRRDC.
       COPY COLBRDLC.
       COPY COLBRRDT.
       COPY DEUWGDEU.
       COPY GNSWGHOY.

       01  WSS-VARI.
           03 WSS-COD-OFIC                        PIC X(03).
           03 WSS-COD-TICL                        PIC X(02).
           03 WSS-IND-NEXT                        PIC 9(01).
           03 WSS-IND-ERRO           VALUE 0      PIC 9(01).
           03 WSS-VAL-DPES                        PIC 9(11).
      *     03 WSS-VAL-TDEU                        PIC 9(11).
           03 WSS-VAL-TDEU                        PIC 9(11)V9(04).
           03 WSS-IND                VALUE 0      PIC 9(02).
           03 WSS-IND-RDBC           VALUE 0      PIC 9(05).
           03 WSS-IND-PDBC           VALUE 0      PIC 9(05).
           03 WSS-IND-ROKS           VALUE 0      PIC 9(05).
           03 WSS-IND-RERR           VALUE 0      PIC 9(05).
      *>>>>


       PROCEDURE DIVISION.
      *==================
       MAIN SECTION.
      *------------
       INI-MAIN.
           COPY GNSBGEDB.
           MOVE 'SGCPGTCL' TO FIO-PROG.
           PERFORM BUS-FSIS.
           PERFORM OPEN-FILE.
           PERFORM LUP-UPD-DBC.
           PERFORM CLOSE-FILE.
       FIN-MAIN.
           PERFORM GNS-PRO-END.
       COPY GNSBFTAB.
       COPY GNSBFMSG.
       COPY TABBFOFI.
       COPY SGCBFDBC.
      *<<<< DEU
       COPY TABBFCAM.
       COPY SGCBFREC.
      *COPY DEUBFRDE.
       DEU-FIO-RDE SECTION.
       INI-DEU-FIO-RDE.
      * Lee y Mueve desde RDE en Memoria al Registro RDE
           PERFORM GET-RDE.
       FIN-DEU-FIO-RDE.
           EXIT.
       GET-RDE SECTION.
       INI-GET-RDE.
      * Lee y Mueve desde RDE en Memoria al Registro RDE
           MOVE '00' TO FIO-STAT.
           ADD  1  TO DEU-R.
           IF DEU-R > DEU-RMAX OR
              DEU-R > 60
               MOVE '10' TO FIO-STAT
               GO TO FIN-GET-RDE.
           MOVE DEU-CIC-ICLI IN DEU        TO RDE-CIC-ICLI IN RDE.
           MOVE RDE-IND-TIPD IN DEU(DEU-R) TO RDE-IND-TIPD IN RDE.
           MOVE RDE-IND-SCRT IN DEU(DEU-R) TO RDE-IND-SCRT IN RDE.
           MOVE RDE-IND-SCTB IN DEU(DEU-R) TO RDE-IND-SCTB IN RDE.
           MOVE RDE-IND-SCBZ IN DEU(DEU-R) TO RDE-IND-SCBZ IN RDE.
           MOVE RDE-COD-COCR IN DEU(DEU-R) TO RDE-COD-COCR IN RDE.
           MOVE RDE-COD-VCCR IN DEU(DEU-R) TO RDE-COD-VCCR IN RDE.
           MOVE RDE-COD-OFCR IN DEU(DEU-R) TO RDE-COD-OFCR IN RDE.
           MOVE RDE-VAL-DEUD IN DEU(DEU-R) TO RDE-VAL-DEUD IN RDE.
       FIN-GET-RDE.
           EXIT.
       COPY DEUBFESC.
       COPY DEUBFFIA.
       COPY DEUBFAMF.
       COPY COLBFOPC.
       COPY COLBFRDC.
       COPY COLBFDLC.
       COPY COLBFRDT.
       COPY TABBGCAM.
       COPY DEUBCDEU.
       COPY GNSBGHOY.
           COPY GNSBGDTC.
           COPY GNSBGIFD.
           COPY GNSBTABT.
           COPY GNSBBSYS.
           COPY GNSBBMSG.
           COPY GNSBBTAB.
           COPY GNSBVTAB.
           COPY TABBVOFI.
           COPY GNSBGEND.
      **************************************************************************
       OPEN-FILE SECTION.
      *-----------------
       INI-OPEN-FILE.
           MOVE FIO-INP TO FIO-CMND.
           PERFORM SGC-FIO-DBC.
       FIN-OPEN-FILE.
           EXIT.
      **************************************************************************
       LUP-UPD-DBC SECTION.
      *-------------------
       INI-LUP-UPD-DBC.
      * Programacion de Ciclo para Registro DBC
           MOVE FIO-GET-FST TO FIO-CMND.
           PERFORM SGC-FIO-DBC.
       LUP-LUP-UPD-DBC.
      * Proceso de Seleccion y Clasificacion a Partir del Registro DBC
           IF NOT FIO-STAT-OKS
               GO TO FIN-LUP-UPD-DBC.
           ADD  1  TO WSS-IND-RDBC IN WSS-VARI.

      * Seleccion del Registro para Proceso mediante Oficina y Existencia Deuda
           PERFORM SEL-REG-PRO.
           IF WSS-IND-NEXT IN WSS-VARI = 1
               GO TO NXT-LUP-UPD-DBC.

      * Actualiza el registro DBC seleccionado con campo DBC-COD-TICL lleno
           ADD  1  TO WSS-IND-PDBC IN WSS-VARI.
           MOVE FIO-MOD TO FIO-CMND.
           PERFORM SGC-FIO-DBC.
           IF NOT FIO-STAT-OKS
               MOVE 'SGC'          TO MSG-COD-SIST
               MOVE 'DBC    NOMOD' TO MSG-COD-MENS
               PERFORM GET-MSG
               DISPLAY MSG-GLS-DESC ' CLIENTE : ' DBC-GLS-NOMC IN DBC
               ADD 1 TO WSS-IND-RERR IN WSS-VARI
           ELSE
               ADD 1 TO WSS-IND-ROKS IN WSS-VARI.
       NXT-LUP-UPD-DBC.
           MOVE FIO-GET-NXT TO FIO-CMND.
           PERFORM SGC-FIO-DBC.
           GO TO LUP-LUP-UPD-DBC.
       FIN-LUP-UPD-DBC.
           EXIT.
      **************************************************************************
       CLOSE-FILE SECTION.
      *------------------
       INI-CLOSE-FILE.
           DISPLAY 'REGISTROS DBC LEIDOS                  : '
                                  WSS-IND-RDBC IN WSS-VARI.
           DISPLAY 'REGISTROS DBC PROCESADOS              : '
                                  WSS-IND-PDBC IN WSS-VARI.
           DISPLAY 'REGISTROS DBC ACTUALIZADOS            : '
                                  WSS-IND-ROKS IN WSS-VARI.
           DISPLAY 'REGISTROS DBC CON ERROR AL ACTUALIZAR : '
                                  WSS-IND-RERR IN WSS-VARI.
           MOVE FIO-CLO TO FIO-CMND.
           PERFORM SGC-FIO-DBC.
       FIN-CLOSE-FILE.
           EXIT.
      **************************************************************************
      *<<<< EOF
      **************************************************************************
      **************************************************************************
      * Seleccion del Registro para Proceso mediante Oficina y Existencia Deuda
       SEL-REG-PRO SECTION.
       INI-SEL-REG-PRO.
           MOVE  1  TO WSS-IND-NEXT IN WSS-VARI.

      * Exclusion del Registro para Proceso si Tipo Cliente tiene informacion
           IF DBC-COD-TICL IN DBC > SPACES
               GO TO FIN-SEL-REG-PRO.

      * Toma de UPD el registro DBC seleccionado
           MOVE FIO-GET-KEY-UPD TO FIO-CMND.
           PERFORM SGC-FIO-DBC.

      * Carga con "CODIGO" campo DBC-COD-TICL en DBC segun Codigo Oficina
           IF DBC-COD-OFIC IN DBC = '000'
               MOVE 'EX' TO DBC-COD-TICL IN DBC
               GO TO CON-SEL-REG-PRO
           ELSE
           IF DBC-COD-OFIC IN DBC = ' ' OR
              DBC-COD-OFIC IN DBC NOT NUMERIC
               MOVE 'NC' TO DBC-COD-TICL IN DBC
               GO TO CON-SEL-REG-PRO.

      * Libera el registro DBC seleccionado tomado de UPD si Oficina < 10
           IF DBC-COD-OFIC IN DBC NOT > '009'
               DISPLAY 'CODIGO OFICINA ERRONEO : ' DBC-COD-OFIC IN DBC
                       ' DEL CLIENTE : ' DBC-GLS-NOMC IN DBC
               MOVE FIO-ULK-REC TO FIO-CMND
               PERFORM SGC-FIO-DBC
               GO TO FIN-SEL-REG-PRO.

      *VAL-OFI Valida Codigo de Oficina en TABLAS
           IF DBC-COD-OFIC IN DBC > '009'
               MOVE DBC-COD-OFIC IN DBC TO OFI-COD-OFIC IN OFI
               PERFORM VAL-OFI
               IF MSG-COD-MENS > SPACES
                   DISPLAY MSG-GLS-DESC IN MSG
                           ' OFICINA : '     DBC-COD-OFIC IN DBC
                           ' DEL CLIENTE : ' DBC-GLS-NOMC IN DBC
                   MOVE FIO-ULK-REC TO FIO-CMND
                   PERFORM SGC-FIO-DBC
                   GO TO FIN-SEL-REG-PRO.

      * Determina Existencia de Deuda del Cliente mediante Rutina Choque Deuda
           PERFORM DET-DEU-CLI.
           IF WSS-IND-ERRO IN WSS-VARI = 1
               DISPLAY 'FALLO DETERMINAR EXISTENCIA DE DEUDA DEL '
                       'CLIENTE : ' DBC-GLS-NOMC IN DBC
               MOVE FIO-ULK-REC TO FIO-CMND
               PERFORM SGC-FIO-DBC
               GO TO FIN-SEL-REG-PRO.

      *     DISPLAY 'CLIENTE CON/SIN DEUDA : ' DBC-GLS-NOMC IN DBC.

      * Carga con "CODIGO" campo DBC-COD-TICL en DBC segun Existencia Deuda y
      * Oficina valida
           IF WSS-VAL-TDEU IN WSS-VARI > ZEROES
               MOVE 'DE' TO DBC-COD-TICL IN DBC
           ELSE
               MOVE 'EX' TO DBC-COD-TICL IN DBC.
       CON-SEL-REG-PRO.
           MOVE  0  TO WSS-IND-NEXT IN WSS-VARI.
       FIN-SEL-REG-PRO.
           EXIT.
      **************************************************************************
      **************************************************************************
      * Determina Existencia de Deuda del Cliente mediante Rutina Choque Deuda
       DET-DEU-CLI SECTION.
       INI-DET-DEU-CLI.
      * Inicializa tabla RDE que utiliza la Rutina de Choque Deudas
           MOVE  0  TO WSS-IND-ERRO IN WSS-VARI.
           PERFORM CLR-TAB-RDE VARYING WSS-IND IN WSS-VARI FROM 1 BY 1
                           UNTIL WSS-IND IN WSS-VARI > 60.

      * Invocacion Rutina de Choque Deudas que llena tabla RDE
           PERFORM GET-FHOY.
           PERFORM INI-CAM.
           MOVE HOY-FHOY TO DEU-FEC-FPRO.
           MOVE 'R'      TO DEU-FPRO IN DEU.
           MOVE DBC-CIC-ICLI IN DBC TO DEU-CIC-ICLI IN DEU.
           PERFORM CAL-DEU.
           IF DEU-STAT NOT = DEU-STAT-OKS
               MOVE 'DEU'    TO MSG-COD-SIST
               MOVE DEU-STAT TO MSG-COD-MENS
               PERFORM GET-MSG
               DISPLAY MSG-GLS-DESC  DEU-MEN2
               MOVE  1  TO WSS-IND-ERRO IN WSS-VARI
               GO TO FIN-DET-DEU-CLI.

      ** Lee y Calcula Total Deuda Cliente en Pesos en RDE
      * Lee e Informa Deuda del Cliente en RDE
           MOVE ZEROES TO WSS-VAL-TDEU IN WSS-VARI.
           MOVE 0      TO DEU-R.
           MOVE FIO-GET-NLS TO FIO-CMND.
           PERFORM DEU-FIO-RDE.
           IF NOT FIO-STAT-OKS OR
              RDE-CIC-ICLI IN RDE NOT = DBC-CIC-ICLI IN DBC
      *         DISPLAY 'CLIENTE SIN DEUDA : ' DBC-GLS-NOMC IN DBC
               GO TO FIN-DET-DEU-CLI.
       LUP-DET-DEU-CLI.
      * Calcula Deuda en Pesos
      *     PERFORM CAL-DPES.
      *     IF WSS-IND-ERRO IN WSS-VARI = 1
      *         GO TO FIN-DET-DEU-CLI.
      *     ADD WSS-VAL-DPES IN WSS-VARI TO WSS-VAL-TDEU IN WSS-VARI.
      * Determina Existencia de Deuda al examinar el Total Deuda del Cliente
           MOVE RDE-VAL-DEUD IN RDE TO WSS-VAL-TDEU IN WSS-VARI
           IF WSS-VAL-TDEU IN WSS-VARI > ZEROES
      *         DISPLAY 'CLIENTE CON DEUDA : ' DBC-GLS-NOMC IN DBC
               GO TO FIN-DET-DEU-CLI.

           MOVE FIO-GET-NXT TO FIO-CMND.
           PERFORM DEU-FIO-RDE.
           IF FIO-STAT-OKS AND
              RDE-CIC-ICLI IN RDE = DBC-CIC-ICLI IN DBC
               GO TO LUP-DET-DEU-CLI.
       FIN-DET-DEU-CLI.
           EXIT.
      **************************************************************************
       CLR-TAB-RDE SECTION.
       INI-CLR-TAB-RDE.
      * Inicializa tabla RDE utiliza la Rutina de Choque Deudas
           MOVE SPACES TO RDE-KEY-IRDE IN DEU(WSS-IND).
           MOVE ZEROES TO RDE-VAL-DEUD IN DEU(WSS-IND).
       FIN-CLR-TAB-RDE.
           EXIT.
      **************************************************************************
       CAL-DPES SECTION.
       INI-CAL-DPES.
      * Calcula Deuda en Pesos
           IF RDE-COD-VCCR IN RDE NOT > SPACES
               MOVE RDE-VAL-DEUD IN RDE TO WSS-VAL-DPES IN WSS-VARI
           ELSE
           IF RDE-COD-VCCR IN RDE = CAM-COD-MNAC
               MOVE RDE-VAL-DEUD IN RDE TO WSS-VAL-DPES IN WSS-VARI
           ELSE
               MOVE RDE-COD-VCCR IN RDE TO CAM-COD-VCAM IN CAM(1)
               PERFORM GET-CAM
               IF NOT FIO-STAT-OKS
                   MOVE ZEROES TO WSS-VAL-DPES IN WSS-VARI
                   MOVE  1     TO WSS-IND-ERRO IN WSS-VARI
               ELSE
                   IF CAM-IND-VIGE IN CAM = 'N'
                       MOVE ZEROES TO WSS-VAL-DPES IN WSS-VARI
                   ELSE
                       MULTIPLY RDE-VAL-DEUD IN RDE BY
                                CAM-SGV-VCAM IN CAM GIVING
                                WSS-VAL-DPES IN WSS-VARI.
       FIN-CAL-DPES.
           EXIT.
      **************************************************************************
      **************************************************************************
      *>>>>
