*%! Codigo adicional para archivo
*% NO_HDR_CST = TRUE
*% PGM_PTC = TRUE
*% NO_TIENE_TIMESTAMP = TRUE
*%! RVM: 30-03-92 VSI NO MANEJA PFS DEPENDIENTES DE DTC
*% IF PGM_ARG
*% FRM = "DIR"
*% PADRE = "DBC"
*% KEY_PADRE = "DBC-GLS-NOMC"
*% LARGO_KEY_PADRE = 75
*% RELACION_PADRE_HIJO = "DBC-CIC-ICLI"
*% LARGO_RELACION_PADRE_HIJO = 12
*% FIO_PADRE = "SGC-FIO-DBC"
*% SIST_PADRE = "SGC"
*% KEY_BROWSE_PADRE = "DBC-GLS-NOMC"
*% ORG_PADRE_VSI = TRUE
*% HIJO = "RCD"
*% KEY_HIJO = "RCD-KEY-IRCD"
*% LARGO_KEY_HIJO = 14
*% RELACION_HIJO_PADRE = "RCD-CIC-ICLI"
*% FIO_HIJO = "SGC-FIO-RCD"
*% SIST_HIJO = "SGC"
*% KEY_BROWSE_HIJO = "RCD-KEY-IRCD"
*% YO_LEO_EL_PRIMER_HIJO = TRUE
*% ORG_HIJO_VSI = TRUE
*%
*% ACEPTE_PF5 = TRUE
*% ACEPTE_PF6 = TRUE
*% ACEPTE_PF7 = TRUE
*% ACEPTE_PF8 = TRUE
*%
*% INICIALIZAR_VARIABLES = FALSE
*% COLAR_HIJOS = FALSE
*% LEER_TODOS_LOS_HIJOS = FALSE
*% NUMERO_LINEAS_TABLA = 1
*%
*% INCLUDE 'GNSSRC:PFSCONIDX.SRC'
*% END
*% IF PGM_DTC
*% RA1 = "DBC"
*% RA2 = "RCD"
*% NRA = 2
*% FRM = "DIR"
*% INCLUDE 'PFSALLALL'
*% END
*% IF CMT_ID_PQ
      *<<<< CMT_ID_PQ
      * ACTUALIZA ARCHIVO SGCRCD EN FORMA INTERACTIVA.
      *************************************************************
      * ETIQUETA INI : JCT-INI 16-JUN-2012
      * MODIFICACION : 16-JUN-2012 JTORRES
      * PROYECTO     : SERNAC FINANCIERO - DIRECCION DE CORREO
      * OBJETIVO     : SE INCORPORA FUNCION QUE PERMITA NO ELIMINAR
      *                DIRECCIONES DE CORREO ASOCIADAS A SERNAC
      *                FINANCIERO
      * ETIQUETA FIN : JCT-FIN 16-JUN-2012
      *************************************************************
      *>>>>
*% END
*% IF CMT_ID_PU
      *<<<< CMT_ID_PU
      * ACTUALIZA ARCHIVO SGCRCD EN FORMA INTERACTIVA.
      *================================================================
      *MODIFICACION : VALIDACION LARGO NUMERO DE TELEFONO
      *FECHA        : JUL-2013
      *AUTOR        : AFRI-BEE
      *ETIQUETA     : *AFRI-INI/31072013    LARGO NUMERO TELEFONO
      *================================================================
      * MANTENCION: CAMBIO LARGO NUMERO TELEFONO EVEREST PORTAL
      * AUTOR: AFRI-CGC
      * FECHA: DICIEMBRE 2014
      * ETIQUETA: *AFRI-INI 18-DIC-2014 CAMBIO LARGO TELEFONO
      *--------------------------------------------------------------
      * MANTENCION: PORTABILIDAD
      * AUTOR: BEE-NGA
      * FECHA: AGOSTO 2016
      * ETIQUETA:*NGA-INI 19-08-2016 PORTABILIDAD
      *--------------------------------------------------------------
      *>>>>
*% END
*% IF WSS_DTC
      *<<<< WSS_DTC
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-DBC-REQA==.
      *>>>>
*% END
*% IF WSS
      *<<<< WSS
*% IF PGM_PQ
      *JCT-INI 16-JUN-2012
       COPY SGCBRRCO.
       COPY SGCBROPE.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-RCO-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-OPE-REQA==.
      *JCT-FIN 16-JUN-2012

       COPY SGCWGDIR.
       COPY SGCMXW01.
*% END
       COPY GNSWGSTR.
*% IF PGM_PU
       COPY GNSWGCVT.
*% END
       COPY GNSWGCPT.
       COPY SGCBRDBC.
*% IF PGM_PU
      *FSA-AFRI-INI-15042003
       COPY SGCWGVCL.
      *FSA-AFRI-FIN-15042003
      *AFRI-INI 18-DIC-2014 CAMBIO LARGO TELEFONO
      *AFRI-INI/31072013    LARGO NUMERO TELEFONO
      *COPY SGCWGTEL.
      *AFRI-FIN/31072013    LARGO NUMERO TELEFONO
       COPY SGCWGFON.
      *AFRI-FIN 18-DIC-2014 CAMBIO LARGO TELEFONO
*% END

*%! IF PGM_PER

*%! END
       01  WSS-VARI.
          03 WSS-COD-LUGA.
              05 WSS-COD-COMU                   PIC X(04).
              05 WSS-GLS-PAIS REDEFINES WSS-COD-COMU.
                 07 WSS-IND-PAIS                PIC X(01).
                 07 WSS-COD-PAIS                PIC X(03).
           03 WSS-ICOR                  VALUE 0 PIC 9(01).
              88 NO-ASIGNE-CORRELATIVO  VALUE 0.
           03 WSS-CIC-ICLI                      PIC X(12).
           03 WSS-NUM-DIRE                      PIC 9(02).
*% IF PGM_VMS
           03 WSS-NUM-DIRE-VAX   VALUE ZEROES   PIC 9(02).
*% END
*% IF NOT PGM_PER
      *DAD ini  26-AUG-1992
           03 WSS-IND                                   PIC 9(02).
           03 WSS-IND-STAT                              PIC X(01).
           03 WSS-GLS-FONO.
              05 WSS-NUM-FONO         OCCURS 12         PIC X(01).
      *DAD fin  26-AUG-1992
*% END
*% IF PGM_PQ
      *JCT-INI 16-JUN-2012
          03 WSS-DIR-ASOC                             PIC X(01).
      *JCT-FIN 16-JUN-2012
*% END
      *>>>>
*% END
*% IF INI_FIO AND PGM_VMS
      *<<<< INI_FIO AND PGM_VMS

           MOVE FIO-ACCS-UPD TO FIO-ACCS.
           MOVE FIO-ACC      TO FIO-CMND.
           MOVE 'TAB'        TO FIO-SIST.
           PERFORM GNS-FIO-TAB.
           MOVE FIO-INP TO FIO-CMND.
           PERFORM GNS-FIO-TAB.

           MOVE FIO-ACCS-UPD TO FIO-ACCS.
           MOVE FIO-ACC      TO FIO-CMND.
           MOVE 'SGC'        TO FIO-SIST.
           PERFORM SGC-FIO-DBC.
           MOVE FIO-UPD TO FIO-CMND.
           PERFORM SGC-FIO-DBC.
      *>>>>
*% END
*% IF PUT_SCR
      *<<<< PUT_SCR
           IF SCR-CCPP = 'ELI' AND RCD-NUM-DIRE IN RCD = 1
               MOVE 'SGC'          TO FIO-SIST
               MOVE 'VSN'          TO TAB-COD-TTAB
               MOVE 'RCDDIR1ELI  ' TO TAB-COD-CTAB
               MOVE FIO-GET-KEY TO FIO-CMND
               PERFORM GNS-FIO-TAB
               IF FIO-STAT-OKS AND TAB-MSC-STAT = 'S'
                   NEXT SENTENCE
               ELSE
                 MOVE 'SGC'          TO MSG-COD-SIST
                 MOVE 'RCDDIR1NOELI' TO MSG-COD-MENS
                 PERFORM GET-MSG
                 MOVE MSG-GLS-DESC   TO FRM-MENS
      *<<<< JCT-INI 16-JUN-2012
      **         MOVE SCR-STAT-CON   TO SCR-STAT.
                 MOVE SCR-STAT-CON   TO SCR-STAT
           ELSE
              IF SCR-CCPP = 'ELI'
                 PERFORM VRF-SER-FINA
                 IF WSS-DIR-ASOC IN WSS-VARI = 'S'
                    MOVE 'SGC'          TO MSG-COD-SIST
                    MOVE 'DIR SERNAC  ' TO MSG-COD-MENS
                    PERFORM GET-MSG
                    MOVE MSG-GLS-DESC   TO FRM-MENS
                    MOVE SCR-STAT-CON   TO SCR-STAT.
      *<<<< JCT-FIN 16-JUN-2012
      *>>>>
*% END
*% IF INI_FND_KEY
      *<<<< INI_FND_KEY
           IF NOT (FRM-FFLD = FRM-FFLD-PF8 OR
                   FRM-FFLD = FRM-FFLD-PF7 OR
                   FRM-FFLD = FRM-FFLD-PF6 OR
                   FRM-FFLD = FRM-FFLD-PF5 )
               IF SCR-CCPP = 'ING'
                   PERFORM BUS-CIC-CLI
                   IF NOT FIO-STAT-OKS
                       GO TO FIN-FND-KEY
                   ELSE
                       PERFORM BUS-COR-DIR
               ELSE
                   IF RCD-NUM-DIRE IN DIR-FLD NOT > ZEROES
                       PERFORM BUS-CIC-CLI
                       IF NOT FIO-STAT-OKS
                           GO TO FIN-FND-KEY
                       ELSE
                           PERFORM BUS-COR-DIR
                    ELSE
                        PERFORM BUS-CIC-CLI
                        IF NOT FIO-STAT-OKS
                           GO TO FIN-FND-KEY.
      *>>>>
*% END
*% IF FND_KEY
      *<<<< FND_KEY
*%! RVM: 30-03-92 VSI NO MANEJA PFS DEPENDIENTES DE DTC
*% IF PGM_DTC
           IF FRM-FFLD = FRM-FFLD-PF5 OR FRM-FFLD-PF6
               MOVE PGM-SNUL TO PGM-STAT-DBC
               MOVE PGM-SNUL TO PGM-STAT-RCD
               PERFORM LEE-NXT-PRV-RCD
               IF MSG-COD-MENS = 'RCDSI'
                   PERFORM CLR-RCD-DIR
                   GO TO CON-FND-KEY
               ELSE
                   IF FRM-FFLD = FRM-FFLD-PF5
                       MOVE 'SGC' TO MSG-COD-SIST
                       MOVE 'RCD    NOPRV' TO MSG-COD-MENS
                       PERFORM GET-MSG
                       MOVE MSG-GLS-DESC TO FRM-MENS
                       MOVE '00' TO FIO-STAT
                       MOVE SCR-STAT-CON TO SCR-STAT
                       GO TO FIN-FND-KEY
                   ELSE
                       MOVE 'SGC' TO MSG-COD-SIST
                       MOVE 'RCD    NONXT' TO MSG-COD-MENS
                       PERFORM GET-MSG
                       MOVE MSG-GLS-DESC TO FRM-MENS
                       MOVE '00' TO FIO-STAT
                       MOVE SCR-STAT-CON TO SCR-STAT
                       GO TO FIN-FND-KEY.

           IF FRM-FFLD = FRM-FFLD-PF7 OR FRM-FFLD-PF8
               PERFORM LEE-NXT-PRV
               IF FIO-STAT-OKS
                   PERFORM SCR-CLRA-DIR
                   PERFORM BUS-RCD
                   GO TO CON-FND-KEY
               ELSE
                   MOVE SPACES TO PGM-STAT
                   IF FRM-FFLD = FRM-FFLD-PF7
                       MOVE 'SGC' TO MSG-COD-SIST
                       MOVE 'DBC    NOPRV' TO MSG-COD-MENS
                       PERFORM GET-MSG
                       MOVE MSG-GLS-DESC TO FRM-MENS
                       MOVE '00' TO FIO-STAT
                       MOVE SCR-STAT-CON TO SCR-STAT
                       GO TO FIN-FND-KEY
                   ELSE
                       MOVE 'SGC' TO MSG-COD-SIST
                       MOVE 'DBC    NONXT' TO MSG-COD-MENS
                       PERFORM GET-MSG
                       MOVE MSG-GLS-DESC TO FRM-MENS
                       MOVE '00' TO FIO-STAT
                       MOVE SCR-STAT-CON TO SCR-STAT
                       GO TO FIN-FND-KEY.

           IF SCR-OFRM-SRV AND
              SCR-CMND = 'CON'
                MOVE 'CON'  TO CMMA-RCD-COD-CMND
                MOVE DBC-NUM-ICLI IN DIR-FLD TO CMMA-RCD-NUM-ICLI
                MOVE DBC-IND-ICLI IN DIR-FLD TO CMMA-RCD-IND-ICLI
                MOVE DBC-GLS-ICLI IN DIR-FLD TO CMMA-RCD-GLS-ICLI
                MOVE TSK-TERM-ALF            TO CMMA-RCD-GLS-COLA-TERM
                MOVE SCR-LIDD                TO CMMA-RCD-LIDD
                MOVE SCR-QIDD                TO CMMA-RCD-QIDD

                MOVE 'SGCPPDIR'              TO SYS-PROG
                MOVE CMMA-RCD-TCMA           TO SYS-TCMA
                MOVE CMMA-RCD                TO SYS-CMMA
                MOVE SYS-LINK                TO SYS-CMND
                PERFORM GNS-PRO-SYS.

*% END
      *>>>>
*% END
*% IF FIN_FND_KEY
      *<<<< FIN_FND_KEY
           IF SCR-CCPP = 'ACT' AND NOT FIO-STAT-OKS
               IF NO-ASIGNE-CORRELATIVO
                   MOVE FIO-STAT-NEX TO FIO-STAT.
       CON-FND-KEY.
*% IF PGM_DOS OR PGM_MVS
           IF FIO-STAT-OKS
               MOVE RCD-STP-ITRN IN RCD TO SCR-UMOD
*% END
*%! RVM: 30-03-92 VSI NO MANEJA PFS DEPENDIENTES DE DTC
*% IF PGM_DTC
               MOVE ADR-RCD-REQA TO SCR-RCD-REQA.
*% END
      *>>>>
*% END
*% IF CMN_MOD
      *<<<< CMN_MOD
*% IF PGM_DOS OR PGM_MVS
           IF RCD-STP-ITRN IN RCD NOT = SCR-UMOD
      *GET-MSG Busca mensaje en tabla
               MOVE 'GNS' TO MSG-COD-SIST
               MOVE 'UPD    SIMUL' TO MSG-COD-MENS
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS
               GO TO FIN-CMN-MOD.
*% END
           PERFORM GET-FHOY.
           MOVE HOY-DHOY IN HOY-VARI TO RCD-NUM-DTRN IN RCD.
           MOVE HOY-MHOY IN HOY-VARI TO RCD-NUM-MTRN IN RCD.
           MOVE HOY-AHOY IN HOY-VARI TO RCD-NUM-ATRN IN RCD.
           MOVE HOY-SHOY IN HOY-VARI TO RCD-NUM-STRN IN RCD.
           MOVE HOY-HHOY IN HOY-VARI TO RCD-HRA-HRTR IN RCD.
           PERFORM RET-HDR-RCD.
      *>>>>
*% END
*% IF FIN_CMN_MOD
      *<<<< FIN_CMN_MOD
      *>>>>
*% END
*% IF CMN_ING
      *<<<< CMN_ING
           MOVE RCD-CIC-ICLI IN RCD TO DBC-CIC-ICLI IN DBC.
           MOVE FIO-GET-KEY-UPD TO FIO-CMND.
           PERFORM SGC-FIO-DBC.
           IF NOT FIO-STAT-OKS
      *        Como la transaccion Termina no es necesario hacer UNLOCK de
      *        DBC
      *        Comunicar que no se pudo actualizar con mensaje pertinente
               MOVE FIO-MENS TO FRM-MENS
               GO TO FIN-CMN-ING.
           PERFORM GET-FHOY.
           MOVE HOY-DHOY IN HOY-VARI TO RCD-NUM-DTRN IN RCD.
           MOVE HOY-MHOY IN HOY-VARI TO RCD-NUM-MTRN IN RCD.
           MOVE HOY-AHOY IN HOY-VARI TO RCD-NUM-ATRN IN RCD.
           MOVE HOY-SHOY IN HOY-VARI TO RCD-NUM-STRN IN RCD.
           MOVE HOY-HHOY IN HOY-VARI TO RCD-HRA-HRTR IN RCD.
           PERFORM RET-HDR-RCD.
      *>>>>
*% END
*% IF FIN_CMN_ING
      *<<<< FIN_CMN_ING
           IF NOT FIO-STAT-OKS
      *        Error inconsistencia en el ingreso : informar
               MOVE FIO-MENS TO FRM-MENS
               GO TO FIN-CMN-ING.
           MOVE RCD-CIC-ICLI IN RCD TO DBC-CIC-ICLI IN DBC.
           MOVE RCD-STP-ITRN IN RCD TO DBC-STP-ITRN IN DBC.
           ADD 1 TO DBC-NUM-TDIR IN DBC.
           PERFORM RET-HDR-DBC.
           MOVE FIO-MOD TO FIO-CMND.
           PERFORM SGC-FIO-DBC.
           IF NOT FIO-STAT-OKS
      *        Error inconsistencia en el ingreso : hacer LOGTB e informar
               MOVE FIO-MENS TO FRM-MENS
               PERFORM BCK-OUT
               GO TO FIN-CMN-ING.
      *>>>>
*% END
*% IF CMN_ELI
      *<<<< CMN_ELI
*% IF PGM_DOS OR PGM_MVS
           IF RCD-STP-ITRN IN RCD NOT = SCR-UMOD
      *GET-MSG Busca mensaje en tabla
               MOVE 'GNS' TO MSG-COD-SIST
               MOVE 'UPD    SIMUL' TO MSG-COD-MENS
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS
               GO TO FIN-CMN-ELI.
*% END
           MOVE RCD-CIC-ICLI IN RCD TO DBC-CIC-ICLI IN DBC.
           MOVE FIO-GET-KEY-UPD TO FIO-CMND.
           PERFORM SGC-FIO-DBC.
           IF NOT FIO-STAT-OKS
      *        Como la transaccion Termina no es necesario hacer UNLOCK de
      *        DBC
      *        Comunicar que no se pudo actualizar con mensaje pertinente
               MOVE FIO-MENS TO FRM-MENS
               GO TO FIN-CMN-ELI.
      *>>>>
*% END
*% IF FIN_CMN_ELI
      *<<<< FIN_CMN_ELI
           IF NOT FIO-STAT-OKS
      *        Error inconsistencia en la eliminacion : informar
               MOVE FIO-MENS TO FRM-MENS
               GO TO FIN-CMN-ELI.
           MOVE RCD-CIC-ICLI IN RCD TO DBC-CIC-ICLI IN DBC.
           MOVE RCD-STP-ITRN IN RCD TO DBC-STP-ITRN IN DBC.
           SUBTRACT 1 FROM DBC-NUM-TDIR IN DBC.
           PERFORM RET-HDR-DBC.
           MOVE FIO-MOD TO FIO-CMND.
           PERFORM SGC-FIO-DBC.
           IF NOT FIO-STAT-OKS
      *Error inconsistencia en la eliminacion : hacer LOGTB e informar
               MOVE FIO-MENS TO FRM-MENS
               PERFORM BCK-OUT
               GO TO FIN-CMN-ELI.
      *>>>>
*% END
*% IF PGM_PQ
*% IF PFS_SCR_MOD
      *<<<< PFS_SCR_MOD
           IF (FRM-FFLD = FRM-FFLD-PF5 OR FRM-FFLD-PF6 OR
                          FRM-FFLD-PF7 OR FRM-FFLD-PF8) AND
              SCR-STAT = SCR-STAT-CON
               PERFORM VAL-NUM-KEY-DIR
               PERFORM VAL-NUM-FLD-DIR.
           IF FRM-FFLD = FRM-FFLD-PF5 OR FRM-FFLD-PF6 OR
                         FRM-FFLD-PF7 OR FRM-FFLD-PF8
               PERFORM RST-STAT
               PERFORM FND-SCR-KEY THRU FIN-SCR-KEY
               IF SCR-STAT NOT = SCR-STAT-ABT
                   PERFORM SCR-TRL
               ELSE
                   PERFORM GNS-CLR-RQA
                   PERFORM DESSCRTRL
                   GO TO FIN-SCR-MOD.
           PERFORM GNS-CLR-RQA.
      *>>>>
*% END
*% IF SCR_GIKY_VAL_IKY
      *PTC-INI:   20-NOV-2002 14:37:48
           IF SCR-OFRM-SRV AND
              SCR-CCPP = 'ING'
              MOVE PTC-DBC-TYPE TO QUE-TYPE
              MOVE TSK-TERM-ALF TO QUE-TERM
              MOVE PTC-DBC-LENG TO QUE-LITM
              MOVE 1            TO QUE-NITM
              MOVE QUE-GET      TO QUE-CMND
              PERFORM GNS-PRO-QUE
              IF QUE-STAT = QUE-STAT-OKS
                  MOVE QUE-ITEM TO PTC-DBC-ITEM
                  MOVE PTC-DBC-DBC-NUM-ICLI TO DBC-NUM-ICLI IN DIR-FLD
                  MOVE PTC-DBC-DBC-VRF-ICLI TO DBC-VRF-ICLI IN DIR-FLD
                  MOVE PTC-DBC-DBC-IND-ICLI TO DBC-IND-ICLI IN DIR-FLD
                  MOVE PTC-DBC-DBC-GLS-ICLI TO DBC-GLS-ICLI IN DIR-FLD.
      *PTC-FIN:   20-NOV-2002 14:37:55
*% END
*% END
*% IF EOF_PQ
*% IF PGM_ARG
       CARGAR-TABLA SECTION.
       INI-CARGAR-TABLA.
           MOVE PGM-SOKS TO PGM-STAT-RCD.

           IF NOT (FRM-FFLD = FRM-FFLD-PF5 OR
              FRM-FFLD = FRM-FFLD-PF6)
           MOVE FIO-GET-KEY TO FIO-CMND
           PERFORM SGC-FIO-DBC
           IF NOT  FIO-STAT-OKS
               MOVE SPACES TO SCR-KEY-IDBC-ACTU
           ELSE
              MOVE DBC-GLS-NOMC IN DBC TO SCR-KEY-IDBC-ACTU.

           MOVE RCD-CAI-ICLI IN RCD TO RCD-CAI-ICLI IN DIR-FLD.
           MOVE RCD-IIC-ICLI IN RCD TO RCD-IIC-ICLI IN DIR-FLD.
           MOVE RCD-NUM-DIRE IN RCD TO RCD-NUM-DIRE IN DIR-FLD.
           MOVE RCD-MSC-TDIR IN RCD TO RCD-MSC-TDIR IN DIR-FLD.
           MOVE RCD-GLS-DIRE IN RCD TO RCD-GLS-DIRE IN DIR-FLD.
           MOVE RCD-GLS-FONO IN RCD TO RCD-GLS-FONO IN DIR-FLD.
           MOVE RCD-COD-LUGA IN RCD TO RCD-COD-LUGA IN DIR-FLD.
           MOVE RCD-MSC-SDIR IN RCD TO RCD-MSC-SDIR IN DIR-FLD.
           MOVE RCD-NUM-DVRF IN RCD TO RCD-NUM-DVRF IN DIR-FLD.
           MOVE RCD-NUM-MVRF IN RCD TO RCD-NUM-MVRF IN DIR-FLD.
           MOVE RCD-NUM-SVRF IN RCD TO RCD-NUM-SVRF IN DIR-FLD.
           MOVE RCD-NUM-AVRF IN RCD TO RCD-NUM-AVRF IN DIR-FLD.
      *BUS-MSC busca glosa de miscelaneo en tabla
           IF RCD-MSC-TDIR IN DIR-FLD > SPACES
               MOVE 'SGC' TO MSC-COD-SIST
               MOVE 'TDIR' TO MSC-COD-TMSC IN MSC
               MOVE RCD-MSC-TDIR IN DIR-FLD TO MSC-COD-CMSC IN MSC
               PERFORM BUS-MSC
               MOVE MSC-GLS-DESC IN MSC TO
                    FRM-GLS-TDIR IN DIR-FLD
           ELSE
               MOVE SPACES TO
                    FRM-GLS-TDIR IN DIR-FLD.
           MOVE RCD-COD-LUGA IN DIR-FLD TO LOC-LUGA.
           PERFORM TAB-BUS-LOC.
           MOVE LOC-DESC TO FRM-GLS-LUGA IN DIR-FLD.
      *BUS-MSC busca glosa de miscelaneo en tabla
           IF RCD-MSC-SDIR IN DIR-FLD > SPACES
               MOVE 'SGC' TO MSC-COD-SIST
               MOVE 'SDIR' TO MSC-COD-TMSC IN MSC
               MOVE RCD-MSC-SDIR IN DIR-FLD TO MSC-COD-CMSC IN MSC
               PERFORM BUS-MSC
               MOVE MSC-GLS-DESC IN MSC TO
                    FRM-GLS-SDIR IN DIR-FLD
           ELSE
               MOVE SPACES TO
                    FRM-GLS-SDIR IN DIR-FLD.
       FIN-CARGAR-TABLA.
           EXIT.
       LIMPIAR-TABLA SECTION.
       INI-LIMPIAR-TABLA.
           PERFORM SCR-CLRA-DIR.
       FIN-LIMPIAR-TABLA.
           EXIT.
       INIT-VARI SECTION.
       INI-INIT-VARI.
       FIN-INIT-VARI.
           EXIT.
       PROCESO-CADA-HIJO SECTION.
       INI-PROCESO-CADA-HIJO.
       FIN-PROCESO-CADA-HIJO.
           EXIT.
*% END
*% END
*% IF EOF
      *<<<< EOF
*%! RVM: 30-03-92 VSI NO MANEJA PFS DEPENDIENTES DE DTC
*% IF PGM_DTC
       LEE-NXT-PRV SECTION.
       INI-LEE-NXT-PRV.
           MOVE SPACES TO MSG-COD-MENS.
           IF SCR-DBC-REQA > SPACES
               PERFORM LEE-NXT-PRV-DBC
           ELSE
               PERFORM LEE-NXT-PRV-NOM.
       FIN-LEE-NXT-PRV.
           EXIT.

       LEE-NXT-PRV-DBC SECTION.
       INI-LEE-NXT-PRV-DBC.
           MOVE SCR-DBC-REQA TO ADR-DBC-REQA.
           MOVE FIO-KDEF-S TO FIO-KDEF.
           IF FRM-FFLD = FRM-FFLD-PF7
               MOVE FIO-GET-PRV TO FIO-CMND
           ELSE
               MOVE FIO-GET-NXT TO FIO-CMND.
           MOVE 'DBC-GLS-NOMC' TO FIO-AKEY.
           PERFORM SGC-FIO-DBC.
           MOVE FIO-STAT TO PGM-STAT-DBC.
           IF FIO-STAT-OKS
               MOVE ADR-DBC-REQA TO SCR-DBC-REQA.
       FIN-LEE-NXT-PRV-DBC.
           EXIT.

       LEE-NXT-PRV-NOM SECTION.
       INI-LEE-NXT-PRV-NOM.
           IF DBC-GLS-NOMC IN DBC > SPACES
               MOVE FIO-GET-KEY    TO FIO-CMND
               MOVE 'DBC-GLS-NOMC' TO FIO-AKEY
               PERFORM SGC-FIO-DBC
               IF FIO-STAT-OKS
                   IF FRM-FFLD = FRM-FFLD-PF7
                       MOVE FIO-GET-PRV TO FIO-CMND
                   ELSE
                       MOVE FIO-GET-NXT TO FIO-CMND
               ELSE
                   IF FRM-FFLD = FRM-FFLD-PF7
                       MOVE FIO-GET-LEQ TO FIO-CMND
                   ELSE
                       MOVE FIO-GET-NLS TO FIO-CMND
           ELSE
               IF FRM-FFLD = FRM-FFLD-PF7
                   MOVE FIO-GET-LEQ TO FIO-CMND
               ELSE
                   MOVE FIO-GET-NLS TO FIO-CMND.
           MOVE 'DBC-GLS-NOMC' TO FIO-AKEY.
           PERFORM SGC-FIO-DBC.
           MOVE FIO-STAT TO PGM-STAT-DBC.
           IF FIO-STAT-OKS
               MOVE ADR-DBC-REQA TO SCR-DBC-REQA.
       FIN-LEE-NXT-PRV-NOM.
           EXIT.

       LEE-NXT-PRV-RCD SECTION.
       INI-LEE-NXT-PRV-RCD.
           MOVE SCR-RCD-REQA TO ADR-RCD-REQA.
           MOVE ADR-VKEY IN ADR-RCD-REQA TO WSS-CIC-ICLI IN WSS-VARI.
           MOVE FIO-KDEF-S TO FIO-KDEF.
           IF FRM-FFLD = FRM-FFLD-PF5
               MOVE FIO-GET-PRV TO FIO-CMND
           ELSE
               MOVE FIO-GET-NXT TO FIO-CMND.
           PERFORM SGC-FIO-RCD.
           IF FIO-STAT-OKS AND
              RCD-CIC-ICLI IN RCD = WSS-CIC-ICLI IN WSS-VARI
               MOVE '00' TO PGM-STAT-RCD
               MOVE ADR-RCD-REQA TO SCR-RCD-REQA
               MOVE 'RCDSI' TO MSG-COD-MENS
               MOVE RCD-CIC-ICLI IN RCD TO DBC-CIC-ICLI IN DBC
               MOVE FIO-GET-KEY TO FIO-CMND
               PERFORM SGC-FIO-DBC
               MOVE FIO-STAT TO PGM-STAT-DBC
               GO TO FIN-LEE-NXT-PRV-RCD.
           MOVE 'RCDNO' TO MSG-COD-MENS.
           MOVE WSS-CIC-ICLI IN WSS-VARI TO DBC-CIC-ICLI IN DBC.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM SGC-FIO-DBC.
           MOVE FIO-STAT TO PGM-STAT-DBC.
           MOVE SCR-RCD-REQA TO ADR-RCD-REQA.
           MOVE FIO-KDEF-S   TO FIO-KDEF.
           MOVE FIO-GET-KEY  TO FIO-CMND.
           PERFORM SGC-FIO-RCD.
           MOVE FIO-STAT TO PGM-STAT-RCD.
       FIN-LEE-NXT-PRV-RCD.
           EXIT.

       BUS-RCD SECTION.
       INI-BUS-RCD.
           MOVE DBC-CAI-ICLI IN DBC TO RCD-CAI-ICLI IN RCD.
           MOVE DBC-IIC-ICLI IN DBC TO RCD-IIC-ICLI IN RCD.
           MOVE ZEROES              TO RCD-NUM-DIRE IN RCD.
           MOVE FIO-GET-NLS    TO FIO-CMND.
           IF FRM-FFLD = FRM-FFLD-PF7
               MOVE 99  TO RCD-NUM-DIRE IN RCD
               MOVE FIO-GET-LEQ TO FIO-CMND.
           PERFORM SGC-FIO-RCD.
           IF FIO-STAT-OKS AND
              RCD-CIC-ICLI IN RCD = DBC-CIC-ICLI IN DBC
               MOVE '00' TO PGM-STAT-RCD
               MOVE ADR-RCD-REQA TO SCR-RCD-REQA
               GO TO FIN-BUS-RCD.
           MOVE FIO-STAT-NEX TO FIO-STAT.
       FIN-BUS-RCD.
           EXIT.
*% END

       BUS-CIC-CLI SECTION.
       INI-BUS-CIC-CLI.
           IF DBC-NUM-ICLI IN DIR-FLD > ZEROES
      *IDC-CLI Busca Cliente por medio de IdC
               MOVE DBC-NUM-ICLI IN DIR-FLD TO DBC-NUM-ICLI IN DBC
               MOVE DBC-IND-ICLI IN DIR-FLD TO DBC-IND-ICLI IN DBC
               MOVE DBC-GLS-ICLI IN DIR-FLD TO DBC-GLS-ICLI IN DBC
               MOVE 'DBC-IDC-ICLI'  TO FIO-AKEY
               MOVE FIO-GET-KEY-ALT TO FIO-CMND
               PERFORM GET-CLI
               IF MSG-COD-MENS > SPACES
                   MOVE MSG-GLS-DESC TO FRM-MENS
                   MOVE FIO-STAT-NEX TO FIO-STAT
               ELSE
                   MOVE '00' TO PGM-STAT-DBC
*%! RVM: 30-03-92 VSI NO MANEJA PFS DEPENDIENTES DE DTC
*% IF PGM_DTC
                   MOVE ADR-DBC-REQA TO SCR-DBC-REQA
*% END
                   MOVE DBC-GLS-NOMC IN DBC TO CPT-STRN
                   PERFORM CPT-BLKS
                   MOVE CPT-STRN TO DBC-GLS-NOMC IN DIR-FLD
                   MOVE DBC-CAI-ICLI IN DBC TO RCD-CAI-ICLI IN DIR-FLD
                   MOVE DBC-IIC-ICLI IN DBC TO RCD-IIC-ICLI IN DIR-FLD
                   MOVE DBC-NUM-TDIR IN DBC TO DBC-NUM-TDIR IN DIR-FLD
                   MOVE '00' TO FIO-STAT
           ELSE
      *NOM-CLI Busca Cliente por medio del Nombre
               MOVE SPACES TO DBC-GLS-NOMC IN DBC
               MOVE DBC-GLS-NOMC IN DIR-FLD TO STR-GLS-GSTR
               PERFORM STR-UNS
               MOVE STR-GLS-FUNS IN STR-VARI(1) TO DBC-GLS-APAT IN DBC
               MOVE STR-GLS-FUNS IN STR-VARI(2) TO DBC-GLS-AMAT IN DBC
               MOVE STR-GLS-FUNS IN STR-VARI(3) TO DBC-GLS-NOMB IN DBC
               MOVE 'DBC-GLS-NOMC'  TO FIO-AKEY
               MOVE FIO-GET-NLS-ALT TO FIO-CMND
               PERFORM GET-CLI
               IF MSG-COD-MENS > SPACES
                   MOVE MSG-GLS-DESC TO FRM-MENS
                   MOVE FIO-STAT-NEX TO FIO-STAT
               ELSE
                   MOVE '00' TO PGM-STAT-DBC
*%! RVM: 30-03-92 VSI NO MANEJA PFS DEPENDIENTES DE DTC
*% IF PGM_DTC
                   MOVE ADR-DBC-REQA TO SCR-DBC-REQA
*% END
                   MOVE DBC-GLS-NOMC IN DBC TO CPT-STRN
                   PERFORM CPT-BLKS
                   MOVE CPT-STRN TO DBC-GLS-NOMC IN DIR-FLD
                   MOVE DBC-NUM-ICLI IN DBC TO DBC-NUM-ICLI IN DIR-FLD
                   MOVE DBC-VRF-ICLI IN DBC TO DBC-VRF-ICLI IN DIR-FLD
                   MOVE DBC-IND-ICLI IN DBC TO DBC-IND-ICLI IN DIR-FLD
                   MOVE DBC-GLS-ICLI IN DBC TO DBC-GLS-ICLI IN DIR-FLD
                   MOVE DBC-CAI-ICLI IN DBC TO RCD-CAI-ICLI IN DIR-FLD
                   MOVE DBC-IIC-ICLI IN DBC TO RCD-IIC-ICLI IN DIR-FLD
                   MOVE DBC-NUM-TDIR IN DBC TO DBC-NUM-TDIR IN DIR-FLD
                   MOVE '00' TO FIO-STAT.
       FIN-BUS-CIC-CLI.
           EXIT.

       BUS-COR-DIR SECTION.
       INI-BUS-COR-DIR.
           IF SCR-CCPP = 'ING'
              PERFORM ASG-COR-DIR
              GO TO FIN-BUS-COR-DIR.
           MOVE 0 TO RCD-NUM-DIRE IN DIR-FLD.
           MOVE RCD-CAI-ICLI IN DIR-FLD TO RCD-CAI-ICLI IN RCD.
           MOVE RCD-IIC-ICLI IN DIR-FLD TO RCD-IIC-ICLI IN RCD.
*% IF PGM_DOS OR PGM_MVS
           MOVE 99 TO RCD-NUM-DIRE IN RCD.
           MOVE FIO-GET-LEQ TO FIO-CMND.
           PERFORM SGC-FIO-RCD.
           IF FIO-STAT-OKS
               MOVE FIO-END-BRW TO FIO-CMND
               PERFORM SGC-FIO-RCD.
           IF FIO-STAT-OKS AND
              RCD-CAI-ICLI IN DIR-FLD = RCD-CAI-ICLI IN RCD AND
              RCD-IIC-ICLI IN DIR-FLD = RCD-IIC-ICLI IN RCD
               MOVE RCD-NUM-DIRE IN RCD TO RCD-NUM-DIRE IN DIR-FLD.
*% ELSE
           MOVE 0 TO RCD-NUM-DIRE IN RCD.
           MOVE 0 TO RCD-NUM-DIRE IN DIR-FLD.
           MOVE FIO-GET-NLS TO FIO-CMND.
           PERFORM SGC-FIO-RCD.
           IF NOT ( FIO-STAT-OKS AND
              RCD-CAI-ICLI IN DIR-FLD = RCD-CAI-ICLI IN RCD AND
              RCD-IIC-ICLI IN DIR-FLD = RCD-IIC-ICLI IN RCD )
              GO TO FIN-BUS-COR-DIR.
       LUP-RCD.
           MOVE RCD-NUM-DIRE IN RCD TO WSS-NUM-DIRE-VAX IN WSS-VARI.
           MOVE FIO-GET-NXT TO FIO-CMND.
           PERFORM SGC-FIO-RCD.
           IF FIO-STAT-OKS AND
              RCD-CAI-ICLI IN DIR-FLD = RCD-CAI-ICLI IN RCD AND
              RCD-IIC-ICLI IN DIR-FLD = RCD-IIC-ICLI IN RCD
               GO TO LUP-RCD.

           MOVE RCD-CAI-ICLI IN DIR-FLD TO RCD-CAI-ICLI IN RCD.
           MOVE RCD-IIC-ICLI IN DIR-FLD TO RCD-IIC-ICLI IN RCD.
           MOVE WSS-NUM-DIRE-VAX IN WSS-VARI TO RCD-CAI-ICLI IN RCD.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM SGC-FIO-RCD.
           MOVE RCD-NUM-DIRE IN RCD TO RCD-NUM-DIRE IN DIR-FLD.
*% END
      *     IF SCR-CCPP = 'ING' OR 'ACT'
      *         ADD 1 TO RCD-NUM-DIRE IN DIR-FLD.
           MOVE 1 TO WSS-ICOR.
       FIN-BUS-COR-DIR.
           EXIT.

       ASG-COR-DIR SECTION.
       INI-ASG-COR-DIR.
           MOVE 1                       TO WSS-NUM-DIRE IN WSS-VARI.
           MOVE ZEROS                   TO RCD-NUM-DIRE IN DIR-FLD.
           MOVE RCD-CAI-ICLI IN DIR-FLD TO RCD-CAI-ICLI IN RCD.
           MOVE RCD-IIC-ICLI IN DIR-FLD TO RCD-IIC-ICLI IN RCD.
           MOVE ZEROS                   TO RCD-NUM-DIRE IN RCD.
           MOVE FIO-GET-NLS TO FIO-CMND.
       LUP-ASG-COR-DIR.
           PERFORM SGC-FIO-RCD.
           IF NOT (FIO-STAT-OKS AND
              RCD-CAI-ICLI IN DIR-FLD = RCD-CAI-ICLI IN RCD AND
              RCD-IIC-ICLI IN DIR-FLD = RCD-IIC-ICLI IN RCD)
              MOVE WSS-NUM-DIRE IN WSS-VARI TO RCD-NUM-DIRE IN DIR-FLD
              GO TO FIN-ASG-COR-DIR.
           IF RCD-NUM-DIRE IN RCD = WSS-NUM-DIRE IN WSS-VARI
               ADD 1 TO WSS-NUM-DIRE IN WSS-VARI
               MOVE FIO-GET-NXT TO FIO-CMND
               GO TO LUP-ASG-COR-DIR.
           MOVE WSS-NUM-DIRE IN WSS-VARI TO RCD-NUM-DIRE IN DIR-FLD.
           MOVE 1 TO WSS-ICOR.
       FIN-ASG-COR-DIR.
           IF ( FIO-CMND NOT = FIO-GET-NLS ) OR ( FIO-STAT-OKS )
               MOVE FIO-END-BRW TO FIO-CMND
               PERFORM SGC-FIO-RCD.
       EXT-ASG-COR-DIR.
           EXIT.

       BCK-OUT SECTION.
       INI-BCK-OUT.
           MOVE FIO-BCK-OUT TO FIO-CMND.
           PERFORM SGC-FIO-RCD.
       FIN-BCK-OUT.
           EXIT.

*% IF PGM_PQ
      *JCT-INI 16-JUN-2012
       VRF-SER-FINA SECTION.
       INI-VRF-SER-FINA.
           MOVE 'N'          TO WSS-DIR-ASOC IN WSS-VARI.
           MOVE 'SGC'        TO FIO-SIST.
           MOVE RCD-CIC-ICLI IN RCD TO RCO-CIC-ICLI IN RCO.
           MOVE SPACES              TO RCO-CIC-IOPE IN RCO.
           MOVE FIO-GET-NLS TO FIO-CMND.
       LUP-VRF-SER-FINA.
           PERFORM SGC-FIO-RCO.
           IF NOT ( FIO-STAT-OKS AND
                    RCD-CIC-ICLI IN RCD = RCO-CIC-ICLI IN RCO )
              GO TO FIN-VRF-SER-FINA.

           IF RCO-CIC-IOPE IN RCO(1:2) NOT = 'DC'
              GO TO LEE-NXT-SER-FINA.

           IF RCD-NUM-DIRE IN RCD NOT = RCO-NUM-DIRE IN RCO
              GO TO LEE-NXT-SER-FINA.

           MOVE RCO-CIC-IOPE IN RCO TO OPE-CIC-IOPE IN OPE.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM SGC-FIO-OPE.
           IF NOT FIO-STAT-OKS
              GO TO LEE-NXT-SER-FINA.

           MOVE 'S'          TO WSS-DIR-ASOC IN WSS-VARI.
           GO TO FIN-VRF-SER-FINA.

       LEE-NXT-SER-FINA.
           MOVE 'SGC'        TO FIO-SIST.
           MOVE FIO-GET-NXT TO FIO-CMND.
           GO TO LUP-VRF-SER-FINA.
       FIN-VRF-SER-FINA.
           EXIT.

       COPY SGCBFRCO.
       COPY SGCBFOPE.

      *JCT-FIN 16-JUN-2012

*% END
      *>>>>
      *<<<<
       COPY GNSBGSTR.
       COPY GNSBGCPT.
       COPY SGCBFDBC.
       COPY GNSBEGLS.
       COPY GNSBBTAB.
       COPY GNSBVCOD.
       COPY GNSBVTAB.
       COPY SGCBGCLI.
*% IF PGM_PU
       COPY SGCBGFON.
*% END
      *>>>>
*% END
*% IF EOF AND ( PGM_PU OR PGM_VMS)
      *FSA-AFRI-INI-15042003
       COPY SGCBKVCL.
      *FSA-AFRI-FIN-15042003
      *AFRI-INI/31072013    LARGO NUMERO TELEFONO
       COPY SGCBGTEL.
      *AFRI-FIN/31072013    LARGO NUMERO TELEFONO
      *<<<< EOF_PU

       RET-HDR-DBC SECTION.
       INI-RET-HDR-DBC.
           PERFORM GET-FHOY.
      *    Fecha Transaccion
           MOVE HOY-FHOY TO DBC-FEC-FTRN IN DBC.
      *    Hora Transaccion
           MOVE HOY-HHOY TO DBC-HRA-HRTR IN DBC.
*% IF PGM_DOS OR PGM_MVS
      *    Codigo Origen transaccion
           MOVE SCR-OTRN TO DBC-COD-OTRN IN DBC.
      *    Autor Transaccion
           MOVE SCR-USER TO DBC-COD-ATRN IN DBC.
*% END
           IF SCR-CCPP = 'ING'
               MOVE 'I' TO DBC-MSC-TACC IN DBC
               MOVE 'I' TO DBC-MSC-STAT IN DBC
           ELSE
           IF SCR-CCPP = 'MOD'
               MOVE 'M' TO DBC-MSC-TACC IN DBC
               MOVE 'M' TO DBC-MSC-STAT IN DBC.
       FIN-RET-HDR-DBC.
           EXIT.

       RET-HDR-RCD SECTION.
       INI-RET-HDR-RCD.
           PERFORM GET-FHOY.
      *    Fecha Transaccion
           MOVE HOY-FHOY TO RCD-FEC-FTRN IN RCD.
      *    Hora Transaccion
           MOVE HOY-HHOY TO RCD-HRA-HRTR IN RCD.
*% IF PGM_DOS OR PGM_MVS
      *    Codigo Origen transaccion
           MOVE SCR-OTRN TO RCD-COD-OTRN IN RCD.
      *    Autor Transaccion
           MOVE SCR-USER TO RCD-COD-ATRN IN RCD.
*% END
           IF SCR-CCPP = 'ING'
               MOVE 'I' TO RCD-MSC-TACC IN RCD
               MOVE 'I' TO RCD-MSC-STAT IN RCD
           ELSE
           IF SCR-CCPP = 'MOD'
               MOVE 'M' TO RCD-MSC-TACC IN RCD
               MOVE 'M' TO RCD-MSC-STAT IN RCD.
       FIN-RET-HDR-RCD.
           EXIT.
      *>>>>
*% END
*% IF FIN_HBL_IKY
      *<<<< FIN_HBL_IKY
           MOVE '1' TO FRM-CPIM-AEY.
      *>>>>
*% END
*% IF FIN_HBL_KEY
      *<<<< FIN_HBL_KEY
           MOVE '1' TO FRM-CPIM-AEY.
      *>>>>
*% END
