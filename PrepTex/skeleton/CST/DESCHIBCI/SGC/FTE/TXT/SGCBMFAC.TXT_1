*%! Codigo adicional para archivo
*% IF FIN_PUT_ALL_FAC
      *<<<< FIN_PUT_ALL_FAC
           PERFORM SET-QUE.
           MOVE QUE-MOD TO QUE-CMND.
           PERFORM GNS-PRO-QUE.
           IF QUE-STAT NOT = QUE-STAT-OKS
               PERFORM SET-QUE
               MOVE QUE-PUT TO QUE-CMND
               PERFORM GNS-PRO-QUE.
           MOVE EDP-CAI-IMDT IN FAC-FLD TO CCM-CAI-IMDT IN CCM.
           MOVE EDP-IIC-IMDT IN FAC-FLD TO CCM-IIC-IMDT IN CCM.
           MOVE 'P'                     TO CCM-IND-TINF IN CCM.
           MOVE EDP-NUM-IEDP IN FAC-FLD TO CCM-NUM-IEDP IN CCM.
           MOVE SPACES                  TO CCM-COD-IPOD IN CCM.
           MOVE ZEROES                  TO CCM-NUM-IGRP IN CCM.
           MOVE ZEROES                  TO CCM-NUM-ICCM IN CCM.
           MOVE FIO-GET-NLS TO FIO-CMND.
           PERFORM SGC-FIO-CCM.
           IF FIO-STAT-OKS AND
              EDP-CAI-IMDT IN FAC-FLD = CCM-CAI-IMDT IN CCM AND
              EDP-IIC-IMDT IN FAC-FLD = CCM-IIC-IMDT IN CCM AND
              CCM-IND-TINF IN CCM     = 'P'  AND
              EDP-NUM-IEDP IN FAC-FLD = CCM-NUM-IEDP IN CCM
               MOVE 'S' TO WSS-IND-RSTR IN WSS-VARI
           ELSE
               MOVE 'N' TO WSS-IND-RSTR IN WSS-VARI.
           MOVE EDP-CAI-IMDT IN FAC-FLD TO WSS-CAI-IMDT.
           MOVE EDP-IIC-IMDT IN FAC-FLD TO WSS-IIC-IMDT.
           MOVE EDP-NUM-IEDP IN FAC-FLD TO WSS-NUM-IEDP.
           MOVE SPACES                  TO WSS-IND-PODE.
      *ALD
      *    MOVE SCR-SIST                TO RCE-COD-SIST IN RCE.
           MOVE 'SGC'                   TO RCE-COD-SIST IN RCE.
           MOVE 'CFP'                   TO RCE-COD-ENTI IN RCE.
           MOVE WSS-GLS-IENT            TO RCE-GLS-IENT IN RCE.
           MOVE 'RCE-KEY-IENT' TO FIO-AKEY.
           MOVE FIO-GET-NLS TO FIO-CMND.
           PERFORM GNS-FIO-RCE.
           MOVE RCE-GLS-IENT TO WSS-GLS-IENT.
           MOVE 'N' TO WSS-IND-CMTS IN WSS-VARI.
           IF FIO-STAT-OKS            AND
      *ALD
      *       RCE-COD-SIST = SCR-SIST AND
              RCE-COD-SIST = 'SGC'    AND
              RCE-COD-ENTI = 'CFP'
              IF WSS-CAI-IMDT = EDP-CAI-IMDT IN FAC-FLD AND
                 WSS-IIC-IMDT = EDP-IIC-IMDT IN FAC-FLD AND
                 WSS-NUM-IEDP = EDP-NUM-IEDP IN FAC-FLD 
                 MOVE 'S' TO WSS-IND-CMTS IN WSS-VARI.
            MOVE 'SGC'          TO MSG-COD-SIST.
            MOVE 'EDPRSTCMT'    TO WSS-GLS-MENS IN WSS-VARI.
            MOVE WSS-COD-MENS IN WSS-VARI TO MSG-COD-MENS.
            PERFORM GET-MSG.
            MOVE MSG-GLS-DESC TO FRM-MEN2.

           IF SCR-CMND = 'CON'
               MOVE 'SGC'          TO FIO-SIST
               MOVE 'VSN'          TO TAB-COD-TTAB IN TAB
               MOVE 'FECEDP'       TO TAB-COD-CTAB IN TAB
               MOVE FIO-GET-KEY TO FIO-CMND
               PERFORM GNS-FIO-TAB
               IF FIO-STAT-OKS AND
                  TAB-MSC-STAT IN TAB = 'S'
                   MOVE TAB-GLS-DCOR IN TAB TO WSS-FEC-FEDP
                   IF EDP-FEC-FTRN IN EDP NOT > WSS-FEC-FEDP
                       PERFORM CLR-FLD-FAC
                       MOVE 'SGC'          TO MSG-COD-SIST
                       MOVE 'FAAFTRN<FVSN' TO MSG-COD-MENS
                       PERFORM GET-MSG
                       MOVE MSG-GLS-DESC TO FRM-MENS
                   ELSE
                       NEXT SENTENCE
               ELSE
                   NEXT SENTENCE.

      *>>>>
*% END
*% IF FIN_PUT_EDP_FAC
      *<<<< FIN_PUT_EDP_FAC
      *     PERFORM BUS-REGI.
      *     IF COM-COD-REGI IN COM > SPACES AND
      *        COM-COD-REGI IN COM = '13'
            IF EDP-COD-ABGI IN FAC-FLD > SPACES
                MOVE EDP-COD-ABGI IN FAC-FLD TO NUM-NUME
                MOVE NUM-ZERO-S TO NUM-ZERO
                MOVE NUM-SGNO-N TO NUM-SGNO
                MOVE 12 TO NUM-NENT
                MOVE 0  TO NUM-NDCM
                CALL 'GNSPVNUM' USING NUM-VARI
                IF NOT NUM-STAT-OKS
                   MOVE EDP-COD-ABGI IN FAC-FLD TO USR-COD-USER IN USR
                   PERFORM BUS-USR
                   MOVE USR-GLS-DESC IN USR TO FRM-GLS-ABGI IN FAC-FLD.
      *>>>>
*% END
*% IF EDP_COD_ABGI
      *<<<< EDP_COD_ABGI
      *     PERFORM BUS-REGI.
      *     IF NOT ( COM-COD-REGI IN COM > SPACES AND
      *        COM-COD-REGI IN COM = '13')
      *         GO TO CON-EDP-COD-ABGI.
            MOVE EDP-COD-ABGI IN FAC-FLD TO NUM-NUME.
            MOVE NUM-ZERO-S TO NUM-ZERO.
            MOVE NUM-SGNO-N TO NUM-SGNO.
            MOVE 12 TO NUM-NENT.
            MOVE 0  TO NUM-NDCM.
            CALL 'GNSPVNUM' USING NUM-VARI.
            IF NUM-STAT-OKS
                GO TO CON-EDP-COD-ABGI.
      *VAL-TDU Valida Tipo de Usuario
           MOVE 'ABG'        TO USR-COD-TTAB IN USR.
           MOVE EDP-COD-ABGI IN FAC-FLD TO USR-COD-USER IN USR.
           PERFORM VAL-TDU.
           IF MSG-COD-MENS > SPACES
               MOVE MSG-GLS-DESC TO FRM-MENS
               MOVE FRM-SUAR-MAL TO FRM-SUAR.
           IF MSG-COD-MENS NOT = 'COD    NEX' AND
              EDP-COD-ABGI IN FAC-FLD > SPACES
               MOVE USR-GLS-DESC IN USR TO FRM-GLS-ABGI IN FAC-FLD
           ELSE
               MOVE SPACES TO FRM-GLS-ABGI IN FAC-FLD.
           GO TO FIN-VAL-EDP-COD-ABGI.
       CON-EDP-COD-ABGI.
      *>>>>
*% END
*% IF FIN_PUT_DBC_FAC
      *<<<< FIN_PUT_DBC_FAC
           
           MOVE DBC-GLS-NOMC IN DBC TO CPT-STRN.
           PERFORM CPT-BLKS.
           MOVE CPT-STRN TO DBC-GLS-NOMC IN FAC-FLD.
           
      *>>>>
*% END
*% IF INI_KEY_EDP_FAC
      *<<<< INI_KEY_EDP_FAC
           MOVE 'F' TO EDP-IND-TINF IN EDP.
      *>>>>
*% END 
*% IF EDP_FEC_FINF
      *<<<< EDP_FEC_FINF
           IF EDP-FEC-FINF IN FAC-FLD NOT > ZEROES
               PERFORM GET-FHOY
               MOVE HOY-DHOY TO EDP-NUM-DINF IN FAC-FLD
               MOVE HOY-MHOY TO EDP-NUM-MINF IN FAC-FLD
               MOVE HOY-SHOY TO EDP-NUM-SINF IN FAC-FLD
               MOVE HOY-AHOY TO EDP-NUM-AINF IN FAC-FLD.
      *>>>>
*% END
*% IF EDP_IND_PODE
      *<<<< EDP_IND_PODE
           IF EDP-IND-PODE IN FAC-FLD(FRM-IFLD) NOT > SPACES
               MOVE 'N' TO EDP-IND-PODE IN FAC-FLD(FRM-IFLD)
               GO TO FIN-VAL-EDP-IND-PODE.
      *Ald/28-DEC-1990
      *     MOVE 'SGC' TO TAB-COD-SIST.
      *     MOVE 'IPD' TO TAB-COD-TTAB IN TAB.
      *     MOVE EDP-IND-PODE IN FAC-FLD(FRM-IFLD) TO TAB-COD-CTAB IN TAB.
      *     PERFORM VAL-COD.
      *>>>>
*% END
*% IF INI_VAL_CON_KEY_FAC
      *<<<< INI_VAL_CON_KEY_FAC
           IF FRM-FFLD = FRM-FFLD-PF7 OR FRM-FFLD-PF8
               GO TO FIN-VAL-CON-KEY-FAC.
      *>>>>
*% END
*% IF FIN_VAL_CON_KEY_FAC
      *<<<< FIN_VAL_CON_KEY_FAC
           IF NOT ( ( ( DBC-GLS-NOMC IN FAC-FLD     > SPACES     OR
                        DBC-NUM-ICLI IN FAC-FLD     > ZEROES )   AND
                        EDP-NUM-IEDP IN FAC-FLD     > ZEROES )   OR
                    ( ( DBC-GLS-NOMC IN FAC-FLD     > SPACES     OR
                        DBC-NUM-ICLI IN FAC-FLD     > ZEROES )   AND
                        EDP-NUM-IEDP IN FAC-FLD NOT > ZEROES ) ) 
                MOVE 'GNS' TO MSG-COD-SIST
                MOVE 'VALCONKEY' TO MSG-COD-MENS
                PERFORM GET-MSG
                MOVE MSG-GLS-DESC TO FRM-MENS
                MOVE FRM-SUAR-MAL TO FRM-SUAR
                GO TO FIN-VAL-CON-KEY-FAC.
      *>>>>
*% END
*% IF EOF
      *<<<< EOF
       BUS-REGI SECTION.
       INI-BUS-REGI.
      * Mediante BUS-OFI Busca Oficina Obteniendo Codigos de Tabla OFI
           IF EDP-COD-OFII IN FAC-FLD NOT > SPACES
               MOVE SPACES TO COM-COD-REGI IN COM
               GO TO FIN-BUS-REGI.
      * Mediante BUS-TAB Busca Comuna Obteniendo Codigos de Tabla COM
           MOVE 'TAB'               TO TAB-COD-SIST.
           MOVE 'COM'               TO TAB-COD-TTAB IN TAB.
           MOVE OFI-COD-COMU IN OFI TO TAB-COD-CTAB IN TAB.
           PERFORM BUS-TAB.
           IF MSG-COD-MENS = 'COD    NEX'
               MOVE SPACES TO COM-COD-REGI IN COM
               GO TO FIN-BUS-REGI.
      * Obtiene Region de Oficina de Operacion del Credito
           MOVE TAB TO COM.
       FIN-BUS-REGI.
           EXIT.
      *>>>>
*% END
