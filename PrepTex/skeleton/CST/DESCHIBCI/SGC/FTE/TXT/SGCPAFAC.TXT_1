*% CMA_USR = TRUE
*% NO_HDR_CST = TRUE
*% LARGO_MI_COMMAREA = 79
*% LARGO_TOTAL_COMMAREA = 847
*% IF FIN_SCR_VARI
      *<<<< FIN_SCR_VARI
      *ISP ENGANCHE VARIBLES EXTENSION COMMAREA
       COPY SGCWGE2S.
      *>>>>
      *<<<< PGM_DTC
      *<<<< FIN_SCR_VARI
       COPY GNSWGRQA REPLACING
                     ==01  ADR-REQA== BY ==02  SCR-DBC-REQA==.
           02 SCR-KEY-IDBC                     PIC X(03).
       COPY GNSWGRQA REPLACING
                     ==01  ADR-REQA== BY ==02  SCR-EDP-REQA==.
           02 SCR-KEY-IEDP                     PIC X(03).
      * CMMA CARACTER A CARACTER
       01  SCR-VARI-RED REDEFINES SCR-VARI.
           03 SCR-DFH    OCCURS 847      PIC X(01).
      * CMMA CARACTER A CARACTER
      *>>>>
*% END
*% IF WSS
      *<<<< WSS
      *ISP ENGANCHE
       COPY SGCWGE2W.
      * VARIABLE PARA DETERMINAR SI SE ENGANCHA DEPENDIENDO DEL VECTOR.
       01  WSS-PODE.
           03  WSS-NUM-PODE                         PIC 9(03).
       COPY GNSWGQUE.
       COPY GNSBRRCE.
      *>>>>
*% END
*% IF PFS_SCR_MOD AND PGM_PQ
      *<<<< PFS_SCR_MOD
           IF ( FRM-FFLD = FRM-FFLD-PF5 OR FRM-FFLD-PF6 OR
                           FRM-FFLD-PF7 OR FRM-FFLD-PF8 ) AND
              SCR-STAT = SCR-STAT-CON
               PERFORM VAL-NUM-KEY-FAC
               PERFORM VAL-NUM-FLD-FAC.
           IF FRM-FFLD = FRM-FFLD-PF5 OR FRM-FFLD-PF6 OR
                         FRM-FFLD-PF7 OR FRM-FFLD-PF8
               PERFORM RST-STAT
               PERFORM FND-SCR-KEY THRU FIN-SCR-KEY
               IF SCR-STAT NOT = SCR-STAT-ABT
                   PERFORM SCR-TRL
               ELSE
                   PERFORM GNS-CLR-RQA
                   PERFORM DESSCRTRL
                   GO TO FIN-SCR-MOD.
           PERFORM GNS-CLR-RQA.
      *>>>>
*% END
*% IF PFS_SCR_GFLD AND PGM_PU
      *<<<< PFS_SCR_GFLD
           IF NOT ( ( SCR-CCPP = 'MOD' OR  SCR-CCPP = 'ACC' OR
                      SCR-CCPP = 'ELI'                      OR
                    ( SCR-CCPP = 'ACT' AND SCR-ACTU = SCR-ACTU-MOD ) )
                      AND ( FRM-FFLD = FRM-FFLD-PF8 OR
                            FRM-FFLD = FRM-FFLD-PF7 OR
                            FRM-FFLD = FRM-FFLD-PF5 OR
                            FRM-FFLD = FRM-FFLD-PF6 ) )
      *>>>>
*% END
*% IF INI_SCR_MOD AND PGM_PU
           IF SCR-INST = SCR-INST-HKY
               MOVE SCR-INST-GKY TO SCR-INST
               PERFORM HBL-KEY
               PERFORM SCR-DMSG
           ELSE
           IF SCR-INST = SCR-INST-GFL
               PERFORM GET-FLD
           ELSE
           IF SCR-INST = SCR-INST-GCS
               PERFORM GET-ACC.
           IF FRM-FFLD = FRM-FFLD-PF7 OR FRM-FFLD-PF8 OR
                         FRM-FFLD-PF5 OR FRM-FFLD-PF6
               PERFORM XCT-PRGP.
           PERFORM DESSCRTRL.
           GO TO MSG-SCR-MOD.
*% END
*% IF CMA
      *<<<< CMA
      *ISP ENGANCHE
      * BYTES ADICIONALES PARA ENGANCHE
      *     02 FILLER                      PIC X(2250).
      * NO ES NECESARIO, PUES PFSALLALL PONE FILLER
      *>>>>
            02 WSS-DFH    OCCURS 847     PIC X(01).
      * CMMA CARACTER A CARACTER
*% END
*% IF FIN_CMN_ING
      *<<<< FIN_CMN_ING
           PERFORM SET-QUE.
           MOVE QUE-MOD      TO QUE-CMND.
           PERFORM GNS-PRO-QUE.
           IF QUE-STAT NOT = QUE-STAT-OKS
                PERFORM SET-QUE
                MOVE QUE-PUT TO QUE-CMND
                PERFORM GNS-PRO-QUE.
      *>>>>
*% END
*% IF FIN_CMN_ING
      *<<<< FIN_CMN_ING
      *ISP ENGANCHE
           PERFORM DET-ENG-FAC VARYING WSS-NUM-PODE FROM 1 BY 1 UNTIL
                                       WSS-NUM-PODE > WSS-IMAX OR
               ( EDP-IND-PODE IN EDP(WSS-NUM-PODE) NOT = SPACES AND
                 EDP-IND-PODE IN EDP(WSS-NUM-PODE) NOT = 'N' ).
           IF WSS-NUM-PODE NOT > WSS-IMAX
               PERFORM CRG-IDX-ENG
               MOVE EDP-CAI-IMDT IN EDP TO SCR-CAI-ICIC
               MOVE EDP-IIC-IMDT IN EDP TO SCR-IIC-ICIC
               MOVE EDP-NUM-IEDP IN EDP TO SCR-NUM-IEDP
               MOVE WSS-NUM-PODE        TO SCR-NUM-ICOR
               MOVE EDP-IND-PODE IN EDP(WSS-NUM-PODE) TO SCR-COD-APOD
               MOVE 'S' TO SCR-IND-ENG IN SCR-VEC-ENG(WSS-IDX-ICFP)
               MOVE 'S' TO SCR-IND-FST IN SCR-VEC-FST(WSS-IDX-ICFP)
               MOVE 'FAC    INGOK' TO SCR-EXT-MENS
               MOVE 'F10' TO SCR-COD-AUX2
               PERFORM EGR-FPEN-CIC.
      *>>>>
*% END
*% IF EOF
      *<<<< EOF

      *  MANEJO DE COLAS
       SET-QUE SECTION.
       INI-SET-QUE.
           PERFORM ERR-QUE.
           MOVE EIBTRMID TO QUE-TERM.
           COMPUTE QUE-LITM = 7 + 125.
           MOVE 'KEY' TO QUE-TYPE.
           MOVE 'ENT' TO QUE-IKEY.
           MOVE +125  TO QUE-LDAT.
           MOVE +0    TO QUE-PCUR.
           MOVE +1    TO QUE-NITM.

           MOVE 'CFP'                   TO KEY-COD-ENTI.
           MOVE DBC-GLS-NOMC IN FAC-FLD TO KEY-GLS-NOMC.
           MOVE DBC-NUM-ICLI IN FAC-FLD TO KEY-NUM-ICLI.
           MOVE DBC-VRF-ICLI IN FAC-FLD TO KEY-VRF-ICLI.
           MOVE DBC-IND-ICLI IN FAC-FLD TO KEY-IND-ICLI.
           MOVE DBC-GLS-ICLI IN FAC-FLD TO KEY-GLS-ICLI.
           MOVE SPACES                  TO KEY-CAI-IOPE.
           MOVE SPACES                  TO KEY-IIC-IOPE.
           MOVE ZEROES                  TO KEY-FEC-FENT.
           MOVE EDP-NUM-IEDP IN EDP     TO KEY-NUM-IENT.
           MOVE SPACES                  TO KEY-COD-IENT.
           MOVE EDP-NUM-DINF IN EDP     TO KEY-NUM-DCMT.
           MOVE EDP-NUM-MINF IN EDP     TO KEY-NUM-MCMT.
           MOVE EDP-NUM-SINF IN EDP     TO KEY-NUM-SCMT.
           MOVE EDP-NUM-AINF IN EDP     TO KEY-NUM-ACMT.
           MOVE ZEROES                  TO KEY-NUM-GCMT.
      * Mediante BUS-OFI Busca Oficina Obteniendo Codigos de Tabla OFI
      *     MOVE EDP-COD-OFII IN EDP TO OFI-COD-OFIC IN OFI.
      *     PERFORM BUS-OFI.
      * Mediante BUS-TAB Busca Comuna Obteniendo Codigos de Tabla COM
      *     MOVE 'TAB'               TO TAB-COD-SIST.
      *     MOVE 'COM'               TO TAB-COD-TTAB IN TAB.
      *     MOVE OFI-COD-COMU IN OFI TO TAB-COD-CTAB IN TAB.
      *     PERFORM BUS-TAB.
      * Obtiene Region de Oficina de Operacion del Credito
      *     MOVE TAB TO COM.
           MOVE SPACES TO KEY-COD-USER.
      *     IF COM-COD-REGI IN COM > SPACES AND
      *        COM-COD-REGI IN COM = '13'
            IF EDP-COD-ABGI IN EDP > SPACES
                MOVE EDP-COD-ABGI IN EDP TO NUM-NUME
                MOVE NUM-ZERO-S TO NUM-ZERO
                MOVE NUM-SGNO-N TO NUM-SGNO
                MOVE 12 TO NUM-NENT
                MOVE 0  TO NUM-NDCM
                CALL 'GNSPKNUM' USING DFHEIBLK DFHCOMMAREA NUM-VARI
                IF NOT NUM-STAT-OKS
                    MOVE EDP-COD-ABGI IN EDP TO KEY-COD-USER.
           MOVE KEY-VARI TO QUE-DATA.
       FIN-SET-QUE.
           EXIT.

       CHK-QUEU SECTION.
       INI-CHK-QUEU.
           MOVE 1 TO QUE-NITM.
           MOVE QUE-GET TO QUE-CMND.
           PERFORM GNS-PRO-QUE.
       FIN-CHK-QUEU.
           EXIT.

       QUE-EOQ SECTION.
       INI-QUE-EOQ.
           MOVE QUE-STAT-EOQ TO QUE-STAT.
           GO TO FIN-GNS-PRO-QUE.
       FIN-QUE-EOQ.
           EXIT.

       QUE-NEX SECTION.
       INI-QUE-NEX.
           MOVE QUE-STAT-NEX TO QUE-STAT.
           GO TO FIN-GNS-PRO-QUE.
       FIN-QUE-NEX.
           EXIT.

      **************************************************************

       ERR-QUE SECTION.
       INI-ERR-QUE.
           EXEC CICS HANDLE CONDITION
                     QIDERR (QUE-NEX)
                     ITEMERR(QUE-EOQ)
           END-EXEC.
       FIN-ERR-QUE.
           EXIT.

       GNS-PRO-QUE SECTION.
       INI-GNS-PRO-QUE.
           IF QUE-CMND = QUE-PUT
               GO TO PUT-QUE
           ELSE
           IF QUE-CMND = QUE-GET
               GO TO GET-QUE
           ELSE
           IF QUE-CMND = QUE-MOD
               GO TO MOD-QUE
           ELSE
           IF QUE-CMND = QUE-DEL
               GO TO DEL-QUE.
           MOVE 'Comando invalido :' TO QUE-MEN1.
           MOVE QUE-CMND             TO QUE-MEN2.
           EXEC CICS XCTL
                     PROGRAM('GNSPPABT')
                     COMMAREA(QUE-MENS)
                     LENGTH(+79)
           END-EXEC.

       PUT-QUE.
           EXEC CICS WRITEQ TS
                     QUEUE(QUE-COLA)
                     FROM(QUE-ITEM)
                     LENGTH(QUE-LITM)
                     AUXILIARY
           END-EXEC.
       FIN-PUT-QUE.
           GO TO FIN-GNS-PRO-QUE.

       GET-QUE.
           EXEC CICS READQ TS
                     QUEUE(QUE-COLA)
                     INTO(QUE-ITEM)
                     LENGTH(QUE-LITM)
                     ITEM(QUE-NITM)
           END-EXEC.
       FIN-GET-QUE.
           GO TO FIN-GNS-PRO-QUE.

       MOD-QUE.
           EXEC CICS WRITEQ TS
                     QUEUE(QUE-COLA)
                     FROM(QUE-ITEM)
                     LENGTH(QUE-LITM)
                     ITEM(QUE-NITM)
                     REWRITE
           END-EXEC.
       FIN-MOD-QUE.
           GO TO FIN-GNS-PRO-QUE.

       DEL-QUE.
           EXEC CICS DELETEQ TS
                     QUEUE(QUE-COLA)
           END-EXEC.
       FIN-DEL-QUE.
           GO TO FIN-GNS-PRO-QUE.

       FIN-GNS-PRO-QUE.
           EXIT.

      *>>>>
*% END
*% IF EOF
      *<<<< EOF
      *  CODIGO ADICIONAL PARA ENGANCHE PROGRAMAS

       DET-ENG-FAC SECTION.
       INI-DET-ENG-FAC.
       FIN-DET-ENG-FAC.
           EXIT.

       ING-FTER-CIC SECTION.
       INI-ING-FTER-CIC.
           PERFORM ING-SETE.
           MOVE SCR-INST-GKY TO SCR-INST.
           PERFORM HBL-IKY.
           PERFORM SCR-CLRA-FAC.
           PERFORM EDT-KEY-FAC.
           PERFORM EDT-FLD-FAC.
           MOVE 'SGC' TO MSG-COD-SIST.
           MOVE SCR-EXT-MENS TO MSG-COD-MENS.
           PERFORM GET-MSG.
           MOVE MSG-GLS-DESC TO FAC-GLS-MENS.
           MOVE ZEROES TO SCR-NUM-ICOR.
           MOVE SPACES TO SCR-CIC-ICIC
                          SCR-VEC-ENG
                          SCR-VEC-FST
                          SCR-COD-AUX1
                          SCR-INST-EXT
                          SCR-EXT-MENS.
           PERFORM SCR-INIT.
           PERFORM SCR-EXIT.
       FIN-ING-FTER-CIC.
           EXIT.

       ING-SETE SECTION.
       INI-ING-SETE.
           PERFORM CRG-IDX-ENG.
           PERFORM CRG-TBL-ENG.
           MOVE WSS-NTRN(SCR-IPRO) TO SCR-NTRN.
           MOVE WSS-PROG(SCR-IPRO) TO SCR-PROG.
           MOVE WSS-NMAP(SCR-IPRO) TO SCR-NMAP.
           MOVE WSS-NLIB(SCR-IPRO) TO SCR-NLIB.

           MOVE WSS-NTRV(SCR-IPRO) TO SCR-NTRV.
           MOVE WSS-PROV(SCR-IPRO) TO SCR-PROV.
       FIN-ING-SETE.
           EXIT.

       EGR-FPEN-CIC SECTION.
       INI-EGR-FPEN-CIC.
           PERFORM CRG-TBL-ENG.
           ADD 1 TO SCR-IPRO.
           IF SCR-IND-ENG IN SCR-VEC-ENG(SCR-IPRO) = SPACES
               GO TO INI-EGR-FPEN-CIC.
           MOVE WSS-INST-FPEN-CIC TO SCR-INST-EXT.
           MOVE WSS-PROG(SCR-IPRO) TO SYS-PROG.
           MOVE SCR-VARI TO SYS-CMMA.
           MOVE SCR-TCMA TO SYS-TCMA.
           MOVE SYS-XCTL TO SYS-CMND.
           PERFORM GNS-PRO-SYS.
       FIN-EGR-FPEN-CIC.
           EXIT.

       SCR-INIT SECTION.
       INI-SCR-INIT.
           MOVE 3  TO FRM-PLIN.
           MOVE 19 TO FRM-NLIN.
           MOVE FRM-CLR-FRM TO FRM-CMND.
           PERFORM GNS-PRO-FRM.
           MOVE FRM-SINI-DBNF TO FRM-SINI.
           MOVE SCR-NMAP TO FRM-NAME.
           MOVE SCR-NLIB TO FRM-NLIB.
           MOVE FAC-FLD TO FRM-DFLD.
           MOVE FRM-INI TO FRM-CMND.
           PERFORM GNS-PRO-FRM.
       FIN-SCR-INIT.
           EXIT.
       COPY SGCBGE2C.
      *
      *>>>>
*% END
*% IF WSS_DTC
      *<<<<
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-DBC-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-DCE-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-CCM-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-EDS-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-USR-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-RCE-REQA==.
      *>>>>
*% END
*% IF WSS_IBM
      *<<<<
       COPY SGCBRDCE.
       COPY SGCBRCCM.
       COPY SGCBREDS.
       COPY SGCBRDBC.
       COPY TABBRUSR.
       COPY TABBRCOM.
       COPY GNSWGSTR.
       COPY GNSWGCPT.
       01  WSS-VARI.
           03  WSS-FEC-FEDP                               PIC X(08).
           03  WSS-COD-MENS.
               05  WSS-GLS-MENS                           PIC X(09).
               05  WSS-IND-RSTR                           PIC X(01).
               05  WSS-IND-CMTS                           PIC X(01).
           03  WSS-GLS-IENT.
               05  WSS-CAI-IMDT                           PIC X(04).
               05  WSS-IIC-IMDT                           PIC X(08).
               05  WSS-NUM-IEDP                           PIC 9(03).
               05  WSS-IND-PODE                           PIC X(01).
               05  WSS-FIL-IENT                           PIC X(14).
           03  WSS-ICOR                          VALUE 0  PIC 9(01).
               88 NO-ASIGNE-CORRELATIVO          VALUE 0.
           03  WSS-IMAX                          VALUE 55 PIC 9(02).
           03  WSS-I                                      PIC 9(02).
           03  WSS-CIC-ICLI                               PIC X(12).
           03  WSS-IND-CMTR                               PIC X(01).
      *>>>>
*% END
*% IF INI_FND_KEY
      *<<<<
           IF NOT (FRM-FFLD = FRM-FFLD-PF8 OR
                   FRM-FFLD = FRM-FFLD-PF7 OR
                   FRM-FFLD = FRM-FFLD-PF6 OR
                   FRM-FFLD = FRM-FFLD-PF5 )
               IF SCR-CCPP = 'ING'
                   PERFORM BUS-CIC-CLI
                   IF NOT FIO-STAT-OKS
                       MOVE MSG-GLS-DESC TO FRM-MENS
                       MOVE '00' TO FIO-STAT
                       MOVE SCR-STAT-CON TO SCR-STAT
                       GO TO FIN-FND-KEY
                   ELSE
                       PERFORM BUS-COR-EDP
               ELSE
                   IF EDP-NUM-IEDP IN FAC-FLD NOT > ZEROES
                       PERFORM BUS-CIC-CLI
                       IF NOT FIO-STAT-OKS
                           MOVE MSG-GLS-DESC TO FRM-MENS
                           MOVE '00' TO FIO-STAT
                           MOVE SCR-STAT-CON TO SCR-STAT
                           GO TO FIN-FND-KEY
                       ELSE
                           PERFORM BUS-COR-EDP
                   ELSE
                       PERFORM BUS-CIC-CLI
                       IF NOT FIO-STAT-OKS
                           MOVE MSG-GLS-DESC TO FRM-MENS
                           MOVE '00' TO FIO-STAT
                           MOVE SCR-STAT-CON TO SCR-STAT
                           GO TO FIN-FND-KEY.
      *>>>>
*% END
*% IF FND_KEY
      *<<<< FND_KEY
*%! RVM: 25-06-92 VSI NO MANEJA PFS DEPENDIENTES DE DTC
*% IF PGM_DTC
      *<<<< PGM_DTC
           IF FRM-FFLD = FRM-FFLD-PF5 OR FRM-FFLD-PF6
               PERFORM LEE-NXT-PRV-FAC
               IF MSG-COD-MENS = 'EDPSI'
                   PERFORM SCR-CLRA-FAC
                   GO TO FIN-FND-KEY
               ELSE
                   MOVE SPACES TO PGM-STAT
                   IF FRM-FFLD = FRM-FFLD-PF5
                       MOVE 'SGC' TO MSG-COD-SIST
                       MOVE 'FAC    NOPRV' TO MSG-COD-MENS
                       PERFORM GET-MSG
                       MOVE MSG-GLS-DESC TO FRM-MENS
                       MOVE '00' TO FIO-STAT
                       MOVE SCR-STAT-CON TO SCR-STAT
                       GO TO FIN-FND-KEY
                   ELSE
                       MOVE 'SGC' TO MSG-COD-SIST
                       MOVE 'FAC    NONXT' TO MSG-COD-MENS
                       PERFORM GET-MSG
                       MOVE MSG-GLS-DESC TO FRM-MENS
                       MOVE '00' TO FIO-STAT
                       MOVE SCR-STAT-CON TO SCR-STAT
                       GO TO FIN-FND-KEY.

           IF FRM-FFLD = FRM-FFLD-PF7 OR FRM-FFLD-PF8
               PERFORM LEE-NXT-PRV
               IF FIO-STAT-OKS
                   PERFORM SCR-CLRA-FAC
                   GO TO FIN-FND-KEY
               ELSE
                   MOVE SPACES TO PGM-STAT
                   IF FRM-FFLD = FRM-FFLD-PF7
                       MOVE 'SGC' TO MSG-COD-SIST
                       MOVE 'EDP    NOPRV' TO MSG-COD-MENS
                       PERFORM GET-MSG
                       MOVE MSG-GLS-DESC TO FRM-MENS
                       MOVE '00' TO FIO-STAT
                       MOVE SCR-STAT-CON TO SCR-STAT
                       GO TO FIN-FND-KEY
                   ELSE
                       MOVE 'SGC' TO MSG-COD-SIST
                       MOVE 'EDP    NONXT' TO MSG-COD-MENS
                       PERFORM GET-MSG
                       MOVE MSG-GLS-DESC TO FRM-MENS
                       MOVE '00' TO FIO-STAT
                       MOVE SCR-STAT-CON TO SCR-STAT
                       GO TO FIN-FND-KEY.
      *>>>>
*% END
      *>>>>
*% END
*% IF FIN_FND_KEY
      *<<<<
           IF SCR-CCPP = 'ACT' AND NOT FIO-STAT-OKS
              IF NO-ASIGNE-CORRELATIVO
                  MOVE FIO-STAT-NEX TO FIO-STAT
                  GO TO FIN-FND-KEY.
           IF FIO-STAT-OKS
*%! RVM: 25-06-92 VSI NO MANEJA PFS DEPENDIENTES DE DTC
*% IF PGM_DTC
      *<<<< PGM_DTC
               MOVE ADR-EDP-REQA TO SCR-EDP-REQA
      *>>>>
*% END
               IF EDP-MSC-STAT IN EDP = 'A'
                   IF SCR-CMND NOT = 'DVF'
                       MOVE 'SGC' TO MSG-COD-SIST
                       MOVE 'EDP    YAACA' TO MSG-COD-MENS
                       PERFORM GET-MSG
                       MOVE MSG-GLS-DESC TO FRM-MENS
                       MOVE '00' TO FIO-STAT
                       MOVE SCR-STAT-CON TO SCR-STAT
                       GO TO FIN-FND-KEY
                   ELSE
                       GO TO FIN-FND-KEY
               ELSE
                   IF SCR-CMND = 'DVF'
                       MOVE 'SGC' TO MSG-COD-SIST
                       MOVE 'EDP    YADES' TO MSG-COD-MENS
                       PERFORM GET-MSG
                       MOVE MSG-GLS-DESC TO FRM-MENS
                       MOVE '00' TO FIO-STAT
                       MOVE SCR-STAT-CON TO SCR-STAT
                       GO TO FIN-FND-KEY
                   ELSE
                       GO TO FIN-FND-KEY.
           IF SCR-CCPP = 'ACT' OR SCR-CCPP = 'ING'
               MOVE EDP-CIC-IMDT IN EDP TO DCE-CIC-ICLI IN DCE
               MOVE FIO-GET-KEY TO FIO-CMND
               PERFORM SGC-FIO-DCE
               MOVE 'SGC'          TO FIO-SIST
               MOVE 'SOC'          TO TAB-COD-TTAB
               MOVE DCE-COD-TSOC IN DCE TO TAB-COD-CTAB
               MOVE FIO-GET-KEY    TO FIO-CMND
               PERFORM GNS-FIO-TAB
               IF TAB-COD-DAT1 (4) > SPACES
                   PERFORM PUT-EDP VARYING WSS-I FROM 1 BY 1
                         UNTIL WSS-I > WSS-IMAX
                   MOVE '23' TO FIO-STAT
               ELSE
                   MOVE '23' TO FIO-STAT.
      *>>>>
*% END
*% IF INI_CMN_ACC
      *<<<< INI_CMN_ACC
           IF NOT ( SCR-CMND = 'VRF' OR
              SCR-CMND = 'DVF' )
               MOVE 'GNS' TO MSG-COD-SIST
               MOVE 'CMDINV' TO MSG-COD-MENS
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS
               GO TO FIN-CMN-ACC.
           MOVE 'F' TO EDP-IND-TINF IN EDP.
      *>>>>
*% END
*% IF CMN_ACC
      *<<<< CMN_ACC
           IF SCR-CMND = 'VRF'
               MOVE 'A' TO EDP-MSC-STAT IN EDP
               MOVE 'EDP    ACAOK' TO MSG-COD-MENS.
           IF SCR-CMND = 'DVF'
               MOVE SPACES TO EDP-MSC-STAT IN EDP
               MOVE 'EDP    DESOK' TO MSG-COD-MENS.
           MOVE FIO-MOD TO FIO-CMND.
           PERFORM SGC-FIO-EDP.
           IF FIO-STAT-OKS
               MOVE 'SGC' TO MSG-COD-SIST
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS.
      *>>>>
*% END
*% IF CMN_ING OR INI_CMN_MOD
      *<<<< CMN_ING OR INI_CMN_MOD
           MOVE 'F' TO EDP-IND-TINF IN EDP.
      *>>>>
*% END
*% IF CMN_ING OR CMN_MOD
      *<<<< CMN_ING OR CMN_MOD
           PERFORM GET-FHOY.
           MOVE HOY-DHOY IN HOY-VARI TO EDP-NUM-DTRN IN EDP.
           MOVE HOY-MHOY IN HOY-VARI TO EDP-NUM-MTRN IN EDP.
           MOVE HOY-AHOY IN HOY-VARI TO EDP-NUM-ATRN IN EDP.
           MOVE HOY-SHOY IN HOY-VARI TO EDP-NUM-STRN IN EDP.
           MOVE HOY-HHOY IN HOY-VARI TO EDP-HRA-HRTR IN EDP.
      *>>>>
*% END
*% IF EOF
      *<<<< EOF
       RST-STAT SECTION.
       INI-RST-STAT.
           MOVE SCR-STPP     TO SCR-STAT.
           MOVE SCR-MFLD-NOT TO SCR-MFLD.
       FIN-RST-STAT.
           EXIT.

       GNS-CLR-RQA SECTION.
       INI-GNS-CLR-RQA.
           MOVE SPACES TO SCR-DBC-REQA.
           MOVE SPACES TO SCR-KEY-IDBC.
           MOVE SPACES TO SCR-EDP-REQA.
           MOVE SPACES TO SCR-KEY-IEDP.
       FIN-GNS-CLR-RQA.
           EXIT.
      *>>>>
      *<<<< EOF
*%! RVM: 25-06-92 VSI NO MANEJA PFS DEPENDIENTES DE DTC
*% IF PGM_DTC
      *<<<< PGM_DTC
       LEE-NXT-PRV-FAC SECTION.
       INI-LEE-NXT-PRV-FAC.
           MOVE SPACES TO MSG-COD-MENS.
           IF SCR-EDP-REQA > SPACES
               PERFORM LEE-NXT-PRV-EDP
           ELSE
               MOVE 'EDPNO' TO MSG-COD-MENS.
       FIN-LEE-NXT-PRV-FAC.
           EXIT.

       LEE-NXT-PRV SECTION.
       INI-LEE-NXT-PRV.
           IF SCR-DBC-REQA > SPACES
               PERFORM LEE-NXT-PRV-DBC
           ELSE
               PERFORM LEE-NXT-PRV-NOM.
       FIN-LEE-NXT-PRV.
           EXIT.

       LEE-NXT-PRV-DBC SECTION.
       INI-LEE-NXT-PRV-DBC.
           MOVE FIO-KDEF-S TO FIO-KDEF.
           MOVE SCR-DBC-REQA TO ADR-DBC-REQA.
           IF FRM-FFLD = FRM-FFLD-PF7
               MOVE FIO-GET-PRV TO FIO-CMND
           ELSE
               MOVE FIO-GET-NXT TO FIO-CMND.
       LUP-LEE-NXT-PRV-DBC.
           IF SCR-KEY-IDBC = 'NOM'
               MOVE 'DBC-GLS-NOMC'  TO FIO-AKEY
           ELSE
               MOVE 'DBC-IDC-ICLI'  TO FIO-AKEY.
           PERFORM SGC-FIO-DBC.
           MOVE FIO-STAT TO PGM-STAT-DBC.
           IF NOT FIO-STAT-OKS
               MOVE 'DBCNO' TO MSG-COD-MENS
               GO TO FIN-LEE-NXT-PRV-DBC.
           MOVE DBC-CIC-ICLI IN DBC TO EDP-CIC-IMDT IN EDP.
           MOVE 'F' TO EDP-IND-TINF IN EDP.
           MOVE ZEROES TO EDP-NUM-IEDP IN EDP.
           MOVE FIO-GET-NLS TO FIO-CMND.
           IF FRM-FFLD = FRM-FFLD-PF7
               MOVE 99 TO EDP-NUM-IEDP IN EDP
               MOVE FIO-GET-LEQ TO FIO-CMND.
           PERFORM SGC-FIO-EDP.
           IF FIO-STAT-OKS AND
              DBC-CIC-ICLI IN DBC = EDP-CIC-IMDT IN EDP AND
              EDP-IND-TINF IN EDP = 'F'
               PERFORM PUT-DBC
               MOVE '00' TO PGM-STAT-EDP
               MOVE ADR-EDP-REQA TO SCR-EDP-REQA
               MOVE ADR-DBC-REQA TO SCR-DBC-REQA
               MOVE 'DBCSI' TO MSG-COD-MENS
               GO TO FIN-LEE-NXT-PRV-DBC.
           IF FRM-FFLD = FRM-FFLD-PF7
               MOVE FIO-GET-PRV TO FIO-CMND
               GO TO LUP-LEE-NXT-PRV-DBC
           ELSE
               MOVE FIO-GET-NXT TO FIO-CMND
               GO TO LUP-LEE-NXT-PRV-DBC.
       FIN-LEE-NXT-PRV-DBC.
           EXIT.

       LEE-NXT-PRV-NOM SECTION.
       INI-LEE-NXT-PRV-NOM.
           MOVE 'NOM' TO SCR-KEY-IDBC.
           IF DBC-GLS-NOMC IN DBC > SPACES
               MOVE FIO-GET-KEY    TO FIO-CMND
               MOVE 'DBC-GLS-NOMC' TO FIO-AKEY
               PERFORM SGC-FIO-DBC
               IF FIO-STAT-OKS
                   IF FRM-FFLD = FRM-FFLD-PF7
                       MOVE FIO-GET-PRV TO FIO-CMND
                   ELSE
                       MOVE FIO-GET-NXT TO FIO-CMND
               ELSE
                   IF FRM-FFLD = FRM-FFLD-PF7
                       MOVE FIO-GET-LEQ TO FIO-CMND
                   ELSE
                       MOVE FIO-GET-NLS TO FIO-CMND
           ELSE
               IF FRM-FFLD = FRM-FFLD-PF7
                   MOVE FIO-GET-LEQ TO FIO-CMND
               ELSE
                   MOVE FIO-GET-NLS TO FIO-CMND.
       LUP-LEE-NXT-PRV-NOM.
           MOVE 'DBC-GLS-NOMC'  TO FIO-AKEY.
           PERFORM SGC-FIO-DBC.
           MOVE FIO-STAT TO PGM-STAT-DBC.
           IF NOT FIO-STAT-OKS
               MOVE 'DBCNO' TO MSG-COD-MENS
               GO TO FIN-LEE-NXT-PRV-NOM.
           MOVE DBC-CIC-ICLI IN DBC TO EDP-CIC-IMDT IN EDP.
           MOVE 'F' TO EDP-IND-TINF IN EDP.
           MOVE ZEROES TO EDP-NUM-IEDP IN EDP.
           MOVE FIO-GET-NLS TO FIO-CMND.
           IF FRM-FFLD = FRM-FFLD-PF7
               MOVE 99 TO EDP-NUM-IEDP IN EDP
               MOVE FIO-GET-LEQ TO FIO-CMND.
           PERFORM SGC-FIO-EDP.
           IF FIO-STAT-OKS AND
              DBC-CIC-ICLI IN DBC = EDP-CIC-IMDT IN EDP AND
              EDP-IND-TINF IN EDP = 'F'
               PERFORM PUT-DBC
               MOVE '00' TO PGM-STAT-EDP
               MOVE ADR-EDP-REQA TO SCR-EDP-REQA
               MOVE ADR-DBC-REQA TO SCR-DBC-REQA
               MOVE 'DBCSI' TO MSG-COD-MENS
               GO TO FIN-LEE-NXT-PRV-NOM.
           IF FRM-FFLD = FRM-FFLD-PF7
               MOVE FIO-GET-PRV TO FIO-CMND
               GO TO LUP-LEE-NXT-PRV-NOM
           ELSE
               MOVE FIO-GET-NXT TO FIO-CMND
               GO TO LUP-LEE-NXT-PRV-NOM.
       FIN-LEE-NXT-PRV-NOM.
           EXIT.

       LEE-NXT-PRV-EDP SECTION.
       INI-LEE-NXT-PRV-EDP.
           MOVE SCR-EDP-REQA TO ADR-EDP-REQA.
           MOVE ADR-VKEY IN ADR-EDP-REQA TO WSS-CIC-ICLI IN WSS-VARI.
           MOVE FIO-KDEF-S TO FIO-KDEF.
       LUP-NXT-PRV-EDP.
           IF FRM-FFLD = FRM-FFLD-PF5
               MOVE FIO-GET-PRV TO FIO-CMND
           ELSE
               MOVE FIO-GET-NXT TO FIO-CMND.
           PERFORM SGC-FIO-EDP.
           IF FIO-STAT-OKS AND
              EDP-CIC-IMDT IN EDP = WSS-CIC-ICLI IN WSS-VARI
               IF EDP-IND-TINF IN EDP = 'F'
                   MOVE '00' TO PGM-STAT-EDP
                   MOVE '00' TO PGM-STAT-DBC
                   MOVE ADR-EDP-REQA TO SCR-EDP-REQA
                   MOVE 'EDPSI' TO MSG-COD-MENS
                   GO TO FIN-LEE-NXT-PRV-EDP
               ELSE
                   GO TO LUP-NXT-PRV-EDP.
           MOVE 'EDPNO' TO MSG-COD-MENS.
       FIN-LEE-NXT-PRV-EDP.
           EXIT.
      *>>>>
*% END
       COM-CIC-EDS SECTION.
       INI-COM-CIC-EDS.
           MOVE DBC-CIC-ICLI IN DBC TO EDS-CIC-ICLI IN EDS.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM SGC-FIO-EDS.
           IF NOT FIO-STAT-OKS
               MOVE 'SGC' TO MSG-COD-SIST
               MOVE 'MESNEXIEDS' TO MSG-COD-MENS
               PERFORM GET-MSG
               MOVE FIO-STAT-NEX TO FIO-STAT
               GO TO FIN-COM-CIC-EDS.
       FIN-COM-CIC-EDS.
               EXIT.

       BUS-COR-EDP SECTION.
       INI-BUS-COR-EDP.
           MOVE 0 TO EDP-NUM-IEDP IN FAC-FLD.
           MOVE EDP-CAI-IMDT IN FAC-FLD TO EDP-CAI-IMDT IN EDP.
           MOVE EDP-IIC-IMDT IN FAC-FLD TO EDP-IIC-IMDT IN EDP.
           MOVE 'F' TO EDP-IND-TINF IN EDP.
           MOVE 99 TO EDP-NUM-IEDP IN EDP.
           MOVE FIO-GET-LEQ TO FIO-CMND.
           PERFORM SGC-FIO-EDP.
           IF FIO-STAT-OKS AND
              EDP-CAI-IMDT IN FAC-FLD = EDP-CAI-IMDT IN EDP AND
              EDP-IIC-IMDT IN FAC-FLD = EDP-IIC-IMDT IN EDP AND
              EDP-IND-TINF IN EDP = 'F'
               MOVE EDP-NUM-IEDP IN EDP TO EDP-NUM-IEDP IN FAC-FLD.

           IF FIO-STAT-OKS
               MOVE FIO-END-BRW TO FIO-CMND
               PERFORM SGC-FIO-EDP.

           IF SCR-CCPP = 'ING' OR 'ACT'
               PERFORM BUS-COR-PEDP
               ADD 1 TO EDP-NUM-IEDP IN FAC-FLD.
           MOVE 1 TO WSS-ICOR.
       FIN-BUS-COR-EDP.
           EXIT.

       BUS-COR-PEDP SECTION.
       INI-BUS-COR-PEDP.
           MOVE EDP-CAI-IMDT IN FAC-FLD TO EDP-CAI-IMDT IN EDP.
           MOVE EDP-IIC-IMDT IN FAC-FLD TO EDP-IIC-IMDT IN EDP.
           MOVE 'P' TO EDP-IND-TINF IN EDP.
           MOVE 99 TO EDP-NUM-IEDP IN EDP.
           MOVE FIO-GET-LEQ TO FIO-CMND.
           PERFORM SGC-FIO-EDP.
           IF FIO-STAT-OKS AND
              EDP-CAI-IMDT IN FAC-FLD = EDP-CAI-IMDT IN EDP AND
              EDP-IIC-IMDT IN FAC-FLD = EDP-IIC-IMDT IN EDP AND
              EDP-IND-TINF IN EDP = 'P'
               IF EDP-NUM-IEDP IN EDP > EDP-NUM-IEDP IN FAC-FLD
                   MOVE EDP-NUM-IEDP IN EDP TO EDP-NUM-IEDP IN
                                                        FAC-FLD.

           IF FIO-STAT-OKS
               MOVE FIO-END-BRW TO FIO-CMND
               PERFORM SGC-FIO-EDP.

       FIN-BUS-COR-PEDP.
           EXIT.

       BUS-CIC-CLI SECTION.
       INI-BUS-CIC-CLI.
           IF DBC-NUM-ICLI IN FAC-FLD > ZEROES
      *IDC-CLI Busca Cliente por medio de IdC
               MOVE DBC-NUM-ICLI IN FAC-FLD TO DBC-NUM-ICLI IN DBC
               MOVE DBC-IND-ICLI IN FAC-FLD TO DBC-IND-ICLI IN DBC
               MOVE DBC-GLS-ICLI IN FAC-FLD TO DBC-GLS-ICLI IN DBC
               MOVE 'DBC-IDC-ICLI'  TO FIO-AKEY
*%! RVM: 25-06-92 VSI NO MANEJA PFS DEPENDIENTES DE DTC
*% IF PGM_DTC
      *<<<< PGM_DTC
               MOVE 'IDC' TO SCR-KEY-IDBC
      *>>>>
*% END
               MOVE FIO-GET-KEY-ALT TO FIO-CMND
               PERFORM GET-CLI
               MOVE DBC-GLS-NOMC IN DBC TO CPT-STRN
               PERFORM CPT-BLKS
               MOVE CPT-STRN TO DBC-GLS-NOMC IN FAC-FLD
      *        MOVE DBC-GLS-NOMC IN DBC TO DBC-GLS-NOMC IN FAC-FLD
               IF MSG-COD-MENS > SPACES
                   MOVE FIO-STAT-NEX TO FIO-STAT
                   GO TO FIN-BUS-CIC-CLI
               ELSE
                   MOVE '00' TO PGM-STAT-DBC
                   PERFORM COM-CIC-EDS
                   IF FIO-STAT-NEX = FIO-STAT
                       GO TO FIN-BUS-CIC-CLI
                   ELSE
*%! RVM: 25-06-92 VSI NO MANEJA PFS DEPENDIENTES DE DTC
*% IF PGM_DTC
      *<<<< PGM_DTC
                      MOVE ADR-DBC-REQA TO SCR-DBC-REQA
      *>>>>
*% END
                      MOVE DBC-CAI-ICLI IN DBC TO
                            EDP-CAI-IMDT IN FAC-FLD
                      MOVE DBC-IIC-ICLI IN DBC TO
                            EDP-IIC-IMDT IN FAC-FLD
           ELSE
           IF DBC-GLS-NOMC IN FAC-FLD > SPACES
               MOVE SPACES TO DBC-GLS-NOMC IN DBC
      *NOM-CLI Busca Cliente por medio del Nombre

               MOVE DBC-GLS-NOMC IN FAC-FLD TO STR-GLS-GSTR
               PERFORM STR-UNS
               MOVE STR-GLS-FUNS IN STR-VARI(1) TO DBC-GLS-APAT IN DBC
               MOVE STR-GLS-FUNS IN STR-VARI(2) TO DBC-GLS-AMAT IN DBC
               MOVE STR-GLS-FUNS IN STR-VARI(3) TO DBC-GLS-NOMB IN DBC

               MOVE 'DBC-GLS-NOMC'  TO FIO-AKEY
*%! RVM: 25-06-92 VSI NO MANEJA PFS DEPENDIENTES DE DTC
*% IF PGM_DTC
      *<<<< PGM_DTC
               MOVE 'NOM' TO SCR-KEY-IDBC
      *>>>>
*% END
               MOVE FIO-GET-NLS-ALT TO FIO-CMND
               PERFORM GET-CLI
               IF MSG-COD-MENS > SPACES
                   MOVE FIO-STAT-NEX TO FIO-STAT
                   GO TO FIN-BUS-CIC-CLI
               ELSE
                   MOVE '00' TO PGM-STAT-DBC
                   PERFORM COM-CIC-EDS
                   IF FIO-STAT-NEX = FIO-STAT
                       GO TO FIN-BUS-CIC-CLI
                   ELSE
*%! RVM: 25-06-92 VSI NO MANEJA PFS DEPENDIENTES DE DTC
*% IF PGM_DTC
      *<<<< PGM_DTC
                       MOVE ADR-DBC-REQA TO SCR-DBC-REQA
      *>>>>
*% END
                       MOVE DBC-GLS-NOMC IN DBC TO CPT-STRN
                       PERFORM CPT-BLKS
                       MOVE CPT-STRN TO DBC-GLS-NOMC IN FAC-FLD
                       MOVE DBC-NUM-ICLI IN DBC TO
                            DBC-NUM-ICLI IN FAC-FLD
                       MOVE DBC-VRF-ICLI IN DBC TO
                            DBC-VRF-ICLI IN FAC-FLD
                       MOVE DBC-IND-ICLI IN DBC TO
                            DBC-IND-ICLI IN FAC-FLD
                       MOVE DBC-GLS-ICLI IN DBC TO
                            DBC-GLS-ICLI IN FAC-FLD
                       MOVE DBC-CAI-ICLI IN DBC TO
                            EDP-CAI-IMDT IN FAC-FLD
                       MOVE DBC-IIC-ICLI IN DBC TO
                            EDP-IIC-IMDT IN FAC-FLD.
           MOVE 'F' TO EDP-IND-TINF IN EDP.
           PERFORM PUT-DBC.
       FIN-BUS-CIC-CLI.
           EXIT.

       PUT-EDP SECTION.
       INI-PUT-EDP.
           MOVE 'S' TO EDP-IND-PODE IN FAC-FLD( WSS-I ).
       FIN-PUT-EDP.
           EXIT.

       PUT-DBC SECTION.
       INI-PUT-DBC.
       FIN-PUT-DBC.
           EXIT.

       COPY SGCBFDBC.
       COPY SGCBFEDS.
       COPY SGCBFDCE.
       COPY SGCBFCCM.
       COPY GNSBFRCE.
       COPY GNSBEGLS.
       COPY SGCBGCLI.
       COPY GNSBGSTR.
       COPY GNSBGCPT.
       COPY TABBFUSR.
       COPY TABBBUSR.
       COPY TABBVUSR.
       COPY TABBVTDU.
      *>>>>
*% END
*% IF PGM_PU
*% IF INI_HBL_IKY
           IF SCR-DESDE-CMN
               MOVE FAC-GLS-MENS TO FRM-MENS
               MOVE LOW-VALUES TO FAC-FLD
               IF FRM-MENS < SPACES
                   MOVE LOW-VALUES TO FAC-GLS-MENS
               ELSE
                   MOVE FRM-MENS TO FAC-GLS-MENS.
           MOVE FRM-CPSF-AEY TO FRM-CPIM-AEY.
           PERFORM PRO-FLD-FAC.
           PERFORM PRO-MKY-FAC.
           PERFORM UNP-IKY-FAC.
           PERFORM FST-KEY-FAC.
           MOVE '1' TO FRM-CPIM-AEY.
           GO TO FIN-HBL-IKY.
*% END
*% IF PGM_POS_EDB
           PERFORM GNS-PRO-RCK.
      *     PERFORM GNS-BUS-VCA.
      * CMMA CARACTER A CARACTER
           PERFORM GNS-BUS-VCA VARYING FRM-IFLD FROM 1 BY 1 UNTIL
                                       FRM-IFLD > EIBCALEN OR
                                       FRM-IFLD > 933.
           MOVE +847 TO SCR-TCMA.
      * CMMA CARACTER A CARACTER
           MOVE +847 TO SCR-TCMA.
           PERFORM GNS-HDL-SYS.
           PERFORM GNS-HDL-FRM.
           MOVE 'SGCPUFAC' TO FIO-PROG.
           PERFORM GNS-BUS-IDD.
      *<<<< PGM_DTC
      *>>>>
      *<<<< INI_FIO
      *     MOVE +2250 TO SCR-TCMA.
      *     NO ES NECESARIO, PUES PFSALLALL PONE EL TAMANO
           IF SCR-DESDE-CMN
      * MARCA QUE INGRESO POR 'FAC'
               MOVE 'FAC'    TO SCR-IND-ING
               MOVE 1 TO SCR-IPRO
               GO TO FIN-INI-FIO.
           IF SCR-INST-EXT = WSS-INST-FTER-CIC
               MOVE WSS-INST-NULL TO SCR-INST-EXT
               PERFORM ING-FTER-CIC.
       FIN-INI-FIO.
      *>>>>
      *<<<< PGM_DTC
      *<<<< INI_FIO
           MOVE +847 TO SCR-TCMA.
           IF SCR-DESDE-CMN
               PERFORM GNS-CLR-RQA.
           GO TO FIN-INI.
      *>>>>
      *>>>>
*% END
*% END
*% IF PGM_PQ
*% IF INI_HBL_IKY
           IF SCR-DESDE-CMN
               MOVE FAC-GLS-MENS TO FRM-MENS
               MOVE LOW-VALUES TO FAC-FLD
               IF FRM-MENS < SPACES
                   MOVE LOW-VALUES TO FAC-GLS-MENS
               ELSE
                   MOVE FRM-MENS TO FAC-GLS-MENS.
           MOVE FRM-CPSF-AEY TO FRM-CPIM-AEY.
           PERFORM PRO-MKY-FAC.
           PERFORM PRO-AKY-FAC.
           PERFORM UNP-IKY-FAC.
           PERFORM FST-KEY-FAC.
           MOVE '1' TO FRM-CPIM-AEY.
           GO TO FIN-HBL-IKY.
*% END
*% IF INI_HBL_KEY
           IF SCR-DESDE-CMN
               MOVE FAC-GLS-MENS TO FRM-MENS
               MOVE LOW-VALUES TO FAC-FLD
               IF FRM-MENS < SPACES
                   MOVE LOW-VALUES TO FAC-GLS-MENS
               ELSE
                   MOVE FRM-MENS TO FAC-GLS-MENS.
           MOVE FRM-CPSF-AEY TO FRM-CPIM-AEY.
           PERFORM UNP-KEY-FAC.
           PERFORM FST-KEY-FAC.
           MOVE '1' TO FRM-CPIM-AEY.
           GO TO FIN-HBL-KEY.
*% END
*% IF PGM_POS_EDB
           PERFORM GNS-PRO-RCK.
      *     PERFORM GNS-BUS-VCA.
      * CMMA CARACTER A CARACTER
           PERFORM GNS-BUS-VCA VARYING FRM-IFLD FROM 1 BY 1 UNTIL
                                       FRM-IFLD > EIBCALEN OR
                                       FRM-IFLD > 933.
           MOVE +847 TO SCR-TCMA.
      * CMMA CARACTER A CARACTER
      *<<<< PGM_DTC
      *>>>>
           MOVE +847 TO SCR-TCMA.
           PERFORM GNS-HDL-SYS.
           PERFORM GNS-HDL-FRM.
           MOVE 'SGCPQFAC' TO FIO-PROG.
           PERFORM GNS-BUS-IDD.
      *<<<< PGM_DTC
      *>>>>
      *<<<< INI_FIO
      *     MOVE +2250 TO SCR-TCMA.
      *     NO ES NECESARIO, PUES PFSALLALL PONE EL TAMANO
           IF SCR-DESDE-CMN
      * MARCA QUE INGRESO POR 'FAC'
               MOVE 'FAC'    TO SCR-IND-ING
               MOVE 1 TO SCR-IPRO
               GO TO FIN-INI-FIO.
           IF SCR-INST-EXT = WSS-INST-FTER-CIC
               MOVE WSS-INST-NULL TO SCR-INST-EXT
               PERFORM ING-FTER-CIC.
       FIN-INI-FIO.
      *>>>>
      *<<<< PGM_DTC
      *<<<< INI_FIO
           MOVE +847 TO SCR-TCMA.
           IF SCR-DESDE-CMN
               PERFORM GNS-CLR-RQA.
           GO TO FIN-INI.
*% END
*% END
*% IF PFS_SCR_ACC
      *<<<< PFS_SCR_ACC
           IF FRM-FFLD = FRM-FFLD-PF5 OR FRM-FFLD-PF6 OR
                         FRM-FFLD-PF7 OR FRM-FFLD-PF8
               PERFORM VAL-NUM-KEY-FAC
               PERFORM VAL-NUM-FLD-FAC
               PERFORM RST-STAT
               PERFORM FND-SCR-KEY THRU FIN-SCR-KEY
               IF SCR-STAT NOT = SCR-STAT-ABT
                   PERFORM SCR-TRL
               ELSE
                   PERFORM GNS-CLR-RQA
                   PERFORM DESSCRTRL
                   GO TO FIN-SCR-ACC.
           PERFORM GNS-CLR-RQA.
      *>>>>
*% END
*% IF PFS_SCR_ELI
      *<<<< PFS_SCR_ELI
           IF FRM-FFLD = FRM-FFLD-PF5 OR FRM-FFLD-PF6 OR
                         FRM-FFLD-PF7 OR FRM-FFLD-PF8
               PERFORM VAL-NUM-KEY-FAC
               PERFORM VAL-NUM-FLD-FAC
               PERFORM RST-STAT
               PERFORM FND-SCR-KEY THRU FIN-SCR-KEY
               IF SCR-STAT NOT = SCR-STAT-ABT
                   PERFORM SCR-TRL
               ELSE
                   PERFORM GNS-CLR-RQA
                   PERFORM DESSCRTRL
                   GO TO FIN-SCR-ELI.
           PERFORM GNS-CLR-RQA.
      *>>>>
*% END
*% IF PFS_SCR_ACT
      *<<<< PFS_SCR_ACT
           IF ( FRM-FFLD = FRM-FFLD-PF5 OR FRM-FFLD-PF6 OR
                           FRM-FFLD-PF7 OR FRM-FFLD-PF8 ) AND
              SCR-STAT = SCR-STAT-CON
               PERFORM VAL-NUM-KEY-FAC
               PERFORM VAL-NUM-FLD-FAC.
           IF FRM-FFLD = FRM-FFLD-PF5 OR FRM-FFLD-PF6 OR
                         FRM-FFLD-PF7 OR FRM-FFLD-PF8
               PERFORM RST-STAT
               PERFORM FND-SCR-KEY THRU FIN-SCR-KEY
               IF SCR-STAT NOT = SCR-STAT-ABT
                   PERFORM SCR-TRL
               ELSE
                   PERFORM GNS-CLR-RQA
                   PERFORM DESSCRTRL
                   GO TO FIN-SCR-ACT.
           PERFORM GNS-CLR-RQA.
      *>>>>
*% END
*% IF PFS_SCR_GKEY
      *<<<< PFS_SCR_GKEY
           IF NOT ( FRM-FFLD = FRM-FFLD-PF8 OR FRM-FFLD = FRM-FFLD-PF7 )
      *>>>>
*% END
*% IF PFS_GET_CON OR PFS_GET_ACC
      *<<<< PFS_GET_CON OR PFS_GET_ACC
           IF NOT
              ( FRM-FFLD = FRM-FFLD-PF5 OR FRM-FFLD = FRM-FFLD-PF6 OR
                FRM-FFLD = FRM-FFLD-PF7 OR FRM-FFLD = FRM-FFLD-PF8 )
      *>>>>
*% END
