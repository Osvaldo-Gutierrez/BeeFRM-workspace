*%! Codigo adicional para archivo
*% NO_HDR_CST = TRUE
*% NO_TIENE_TIMESTAMP = TRUE
*% IF FIN_SCR_VARI
      *<<<< FIN_SCR_VARI
       COPY SGCWGE2S.
      *>>>>
*% END
*% CMA_USR = TRUE
*% IF CMA
      *<<<< CMA
           02 FILLER                      PIC X(2250).
      *>>>>
*% END
*% IF FIN_SCR_GIKY OR PFS_SCR_ING OR FIN_SCR_GFLD
      *<<<< FIN_SCR_GIKY OR PFS_SCR_ING OR FIN_SCR_GFLD
           IF FRM-FFLD = FRM-FFLD-PF3 AND
              SCR-IND-ENG IN SCR-VEC-ENG(SCR-IPRO) = 'S'
               PERFORM EGR-FTER-CIC.
      *>>>>
*% END
*% IF FIN_HBL_FLD
      *<<<< FIN_HBL_FLD
           IF CCM-NUM-ICCM-ALF IN CFP-FLD NOT > SPACES OR
              CCM-NUM-ICCM-ALF IN CFP-FLD = ZEROES
               PERFORM PRO-CCM-CFP.
      *>>>>
*% END
*% IF INI_HBL_KEY AND PGM_PU
      *<<<<<<INI_HBL_KEY
           IF SCR-DESDE-CMN
               MOVE CFP-GLS-MENS TO FRM-MENS
               MOVE LOW-VALUES TO CFP-FLD
               MOVE FRM-MENS TO CFP-GLS-MENS.
           MOVE FRM-CPSF-AEY TO FRM-CPIM-AEY.
           PERFORM PRO-FLD-CFP.
           PERFORM UNP-KEY-CFP.
           PERFORM FST-KEY-CFP.
           MOVE '1' TO FRM-CPIM-AEY.
           GO TO FIN-HBL-KEY.
      *>>>>>>
*% END
*% IF FIN_SCR_GFLD
      *<<<< FIN_SCR_GFLD
           IF FRM-FFLD = FRM-FFLD-PF12
               MOVE 'FST' TO SCR-COD-AUX1.
      *>>>>
*% END
*% IF SCR_GFLD_VAL_MKY
      *<<<< SCR_GFLD_VAL_MKY
           IF FRM-FFLD = FRM-FFLD-PF10 AND
              SCR-IND-ENG IN SCR-VEC-ENG(SCR-IPRO) = 'S'
                  MOVE SPACES TO ADP-COD-CLAP IN ADP
                  MOVE SPACES TO SCR-COD-AUX1
                  PERFORM HBL-KEY-CFP.
      *>>>>
*% END
*% IF INI_FIO
      *<<<< INI_FIO
           MOVE LOW-VALUES   TO CFP-FLD.
           MOVE LOW-VALUES   TO CFP-EDT.
           MOVE +2250 TO SCR-TCMA.
           IF SCR-DESDE-CMN
               MOVE SPACES TO SCR-VEC-ENG
               MOVE 1 TO SCR-IPRO
               GO TO FIN-INI-FIO.
           IF SCR-INST-EXT = WSS-INST-FPEN-CIC
               IF SCR-COD-AUX2 = 'F10'
                   MOVE SPACES TO SCR-COD-AUX2
                   PERFORM SET-IGRP.
           IF SCR-INST-EXT = WSS-INST-FPEN-CIC
               MOVE WSS-INST-NULL TO SCR-INST-EXT
               MOVE 'FST'         TO SCR-COD-AUX1
               MOVE ZEROES        TO SCR-NUM-ICMP
               PERFORM ING-FPEN-CIC.
       FIN-INI-FIO.
      *>>>>
*% END
*% IF FIN_HBL_IKY
      *<<<< FIN_HBL_IKY
           IF SCR-IND-ENG IN SCR-VEC-ENG(SCR-IPRO) = 'S'
               PERFORM HBL-KEY-CFP.
      *>>>>
*% END
*% IF INI_HBL_KEY AND PGM_PQ
    *<<<<INI_HBL_KEY
           IF SCR-DESDE-CMN
               MOVE CFP-GLS-MENS TO FRM-MENS
               MOVE LOW-VALUES TO CFP-FLD
               MOVE FRM-MENS TO CFP-GLS-MENS.
           MOVE FRM-CPSF-AEY TO FRM-CPIM-AEY.
           PERFORM UNP-KEY-CFP.
           PERFORM FST-KEY-CFP.
           MOVE '1' TO FRM-CPIM-AEY.
           GO TO FIN_HBL_KEY.
    *>>>>
*% END
*% IF SCR_GIKY_VAL_CON_IKY
           IF FRM-FFLD = FRM-FFLD-PF10 AND
              SCR-IND-ENG IN SCR-VEC-ENG(SCR-IPRO) = 'S'
                  MOVE SPACES TO ADP-COD-CLAP IN ADP
                  MOVE SPACES TO SCR-COD-AUX1
                  PERFORM HBL-KEY-CFP.
      *>>>>
*% END
*% IF EOF
      *<<<< EOF
      *  MANEJO DE COLAS
       SET-QUE SECTION.
       INI-SET-QUE.
           PERFORM ERR-QUE.
           MOVE EIBTRMID TO QUE-TERM.
           COMPUTE QUE-LITM = 7 + 125.
           MOVE 'KEY' TO QUE-TYPE.
           MOVE 'ENT' TO QUE-IKEY.
           MOVE +125  TO QUE-LDAT.
           MOVE +0    TO QUE-PCUR.
           MOVE +1    TO QUE-NITM.

           MOVE 'CFP'                   TO KEY-COD-ENTI.
           MOVE DBC-GLS-NOMC IN CFP-FLD TO KEY-GLS-NOMC.
           MOVE DBC-NUM-ICLI IN CFP-FLD TO KEY-NUM-ICLI.
           MOVE DBC-VRF-ICLI IN CFP-FLD TO KEY-VRF-ICLI.
           MOVE DBC-IND-ICLI IN CFP-FLD TO KEY-IND-ICLI.
           MOVE DBC-GLS-ICLI IN CFP-FLD TO KEY-GLS-ICLI.
           MOVE SPACES                  TO KEY-CAI-IOPE.
           MOVE SPACES                  TO KEY-IIC-IOPE.
           MOVE ZEROES                  TO KEY-FEC-FENT.
           MOVE ADP-NUM-IEDP IN CFP-FLD TO KEY-NUM-IENT.
           MOVE ADP-COD-IPOD IN CFP-FLD TO KEY-COD-IENT.
           MOVE EDP-NUM-DINF IN EDP     TO KEY-NUM-DCMT.
           MOVE EDP-NUM-MINF IN EDP     TO KEY-NUM-MCMT.
           MOVE EDP-NUM-SINF IN EDP     TO KEY-NUM-SCMT.
           MOVE EDP-NUM-AINF IN EDP     TO KEY-NUM-ACMT.
           MOVE ZEROES                  TO KEY-NUM-GCMT.
      *BUS-TAB busca glosa de codigo en tabla
           MOVE EDP-CIC-IMDT IN EDP TO EDS-CIC-ICLI IN EDS.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM SGC-FIO-EDS.
           IF FIO-STAT-OKS
               MOVE 'TAB'               TO TAB-COD-SIST
               MOVE 'ABG'               TO TAB-COD-TTAB IN TAB
               MOVE EDS-COD-ABGI IN EDS TO TAB-COD-CTAB IN TAB
               PERFORM BUS-TAB
               MOVE TAB-GLS-DCOR IN TAB     TO KEY-COD-USER
           ELSE
               MOVE SPACES                  TO KEY-COD-USER.

           MOVE KEY-VARI TO QUE-DATA.
       FIN-SET-QUE.
           EXIT.

       CHK-QUEU SECTION.
       INI-CHK-QUEU.
           MOVE 1       TO QUE-NITM.
           MOVE QUE-GET TO QUE-CMND.
           PERFORM GNS-PRO-QUE.
       FIN-CHK-QUEU.
           EXIT.

       QUE-EOQ SECTION.
       INI-QUE-EOQ.
           MOVE QUE-STAT-EOQ TO QUE-STAT.
           GO TO FIN-GNS-PRO-QUE.
       FIN-QUE-EOQ.
           EXIT.

       QUE-NEX SECTION.
       INI-QUE-NEX.
           MOVE QUE-STAT-NEX TO QUE-STAT.
           GO TO FIN-GNS-PRO-QUE.
       FIN-QUE-NEX.
           EXIT.

      **************************************************************
       ERR-QUE SECTION.
       INI-ERR-QUE.
           EXEC CICS HANDLE CONDITION
                     QIDERR (QUE-NEX)
                     ITEMERR(QUE-EOQ)
           END-EXEC.
       FIN-ERR-QUE.
           EXIT.

       GNS-PRO-QUE SECTION.
       INI-GNS-PRO-QUE.
           IF QUE-CMND = QUE-PUT
               GO TO PUT-QUE
           ELSE
           IF QUE-CMND = QUE-GET
               GO TO GET-QUE
           ELSE
           IF QUE-CMND = QUE-MOD
               GO TO MOD-QUE
           ELSE
           IF QUE-CMND = QUE-DEL
               GO TO DEL-QUE.
           MOVE 'Comando invalido :' TO QUE-MEN1.
           MOVE QUE-CMND             TO QUE-MEN2.
           EXEC CICS XCTL
                     PROGRAM('GNSPPABT')
                     COMMAREA(QUE-MENS)
                     LENGTH(+79)
           END-EXEC.

       PUT-QUE.
           EXEC CICS WRITEQ TS
                     QUEUE(QUE-COLA)
                     FROM(QUE-ITEM)
                     LENGTH(QUE-LITM)
                     AUXILIARY
           END-EXEC.
       FIN-PUT-QUE.
           GO TO FIN-GNS-PRO-QUE.

       GET-QUE.
           EXEC CICS READQ TS
                     QUEUE(QUE-COLA)
                     INTO(QUE-ITEM)
                     LENGTH(QUE-LITM)
                     ITEM(QUE-NITM)
           END-EXEC.
       FIN-GET-QUE.
           GO TO FIN-GNS-PRO-QUE.

       MOD-QUE.
           EXEC CICS WRITEQ TS
                     QUEUE(QUE-COLA)
                     FROM(QUE-ITEM)
                     LENGTH(QUE-LITM)
                     ITEM(QUE-NITM)
                     REWRITE
           END-EXEC.
       FIN-MOD-QUE.
           GO TO FIN-GNS-PRO-QUE.

       DEL-QUE.
           EXEC CICS DELETEQ TS
                     QUEUE(QUE-COLA)
           END-EXEC.
       FIN-DEL-QUE.
           GO TO FIN-GNS-PRO-QUE.

       FIN-GNS-PRO-QUE.
           EXIT.
       BUS-FINF SECTION.
       INI-BUS-FINF.
           IF SCR-IND-ENG IN SCR-VEC-ENG(SCR-IPRO) = 'S'
               MOVE SCR-CAI-ICIC TO EDP-CAI-IMDT IN EDP
               MOVE SCR-IIC-ICIC TO EDP-IIC-IMDT IN EDP
               MOVE SCR-NUM-IEDP TO EDP-NUM-IEDP IN EDP
               IF SCR-IND-ING = 'FAC'
                   MOVE 'F' TO EDP-IND-TINF IN EDP
               ELSE
                   MOVE 'P' TO EDP-IND-TINF IN EDP
           ELSE
               MOVE ADP-NUM-IEDP IN CFP-FLD TO EDP-NUM-IEDP IN EDP
               MOVE ADP-CAI-IMDT IN CFP-FLD TO EDP-CAI-IMDT IN EDP
               MOVE ADP-IIC-IMDT IN CFP-FLD TO EDP-IIC-IMDT IN EDP
               IF SCR-IND-ING = 'FAC'
                   MOVE 'F' TO EDP-IND-TINF IN EDP
               ELSE
                   MOVE 'P' TO EDP-IND-TINF IN EDP.

           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM SGC-FIO-EDP.

      *ISP SE REQUIERE ESCRIBIR ESTE CODIGO, PUES AUN NO ESTA SOLUCIONADO
      *    EL PROBLEMA DE 'F' O 'P'
           IF NOT FIO-STAT-OKS
               IF EDP-IND-TINF IN EDP = 'F'
                   MOVE 'P' TO EDP-IND-TINF IN EDP
                   MOVE FIO-GET-KEY TO FIO-CMND
                   PERFORM SGC-FIO-EDP
               ELSE
                   MOVE 'F' TO EDP-IND-TINF IN EDP
                   MOVE FIO-GET-KEY TO FIO-CMND
                   PERFORM SGC-FIO-EDP.
           MOVE FIO-STAT TO PGM-STAT-EDP.

           IF FIO-STAT-OKS
               MOVE EDP-NUM-SINF IN EDP TO EDP-NUM-SINF IN CFP-FLD
               MOVE EDP-NUM-AINF IN EDP TO EDP-NUM-AINF IN CFP-FLD
               MOVE EDP-NUM-MINF IN EDP TO EDP-NUM-MINF IN CFP-FLD
               MOVE EDP-NUM-DINF IN EDP TO EDP-NUM-DINF IN CFP-FLD.
       FIN-BUS-FINF.
           EXIT.

       GET-FEC-CMT SECTION.
       INI-GET-FEC-CMT.
           MOVE ADP-CAI-IMDT IN CFP-FLD TO EDP-CAI-IMDT IN EDP.
           MOVE ADP-IIC-IMDT IN CFP-FLD TO EDP-IIC-IMDT IN EDP.
           MOVE 'F'                     TO EDP-IND-TINF IN EDP.
           IF SCR-IND-ENG IN SCR-VEC-ENG(SCR-IPRO) = 'S'
               IF SCR-IND-ING = 'FAC'
                   MOVE 'F' TO EDP-IND-TINF IN EDP
               ELSE
                   MOVE 'P' TO EDP-IND-TINF IN EDP.
           MOVE ADP-NUM-IEDP IN CFP-FLD TO EDP-NUM-IEDP IN EDP.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM SGC-FIO-EDP.
       FIN-GET-FEC-CMT.
           EXIT.

       VRF-ENG SECTION.
       INI-VRF-ENG.
           MOVE SPACES TO WSS-IND-ENG.
           MOVE SCR-CAI-ICIC TO EDP-CAI-IMDT IN EDP.
           MOVE SCR-IIC-ICIC TO EDP-IIC-IMDT IN EDP.
           IF SCR-IND-ING = 'FAC'
               MOVE 'F' TO EDP-IND-TINF IN EDP
           ELSE
               MOVE 'P' TO EDP-IND-TINF IN EDP.
           MOVE SCR-NUM-IEDP TO EDP-NUM-IEDP IN EDP.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM SGC-FIO-EDP.
       CIC-VRF-ENG.
           ADD 1 TO SCR-NUM-ICOR.
           IF SCR-NUM-ICOR > 55
               GO TO FIN-VRF-ENG.
           IF EDP-IND-PODE IN EDP(SCR-NUM-ICOR) NOT > SPACES OR
              EDP-IND-PODE IN EDP(SCR-NUM-ICOR) = 'N'
               GO TO CIC-VRF-ENG.

           MOVE 'N' TO WSS-IND-IVEC.
           PERFORM VRF-VEC-EDP VARYING WSS-NUM-IVEC FROM 1 BY  1
                   UNTIL WSS-NUM-IVEC = SCR-NUM-ICOR.
           IF WSS-IND-IVEC = 'S'
               GO TO CIC-VRF-ENG
           ELSE
               MOVE 'SAM' TO WSS-IND-ENG.
       FIN-VRF-ENG.
           EXIT.

       VRF-VEC-EDP SECTION.
       INI-VRF-VEC-EDP.
           IF EDP-IND-PODE IN EDP(SCR-NUM-ICOR) =
              EDP-IND-PODE IN EDP(WSS-NUM-IVEC)
                MOVE 'S' TO WSS-IND-IVEC.
       FIN-VRF-VEC-EDP.
           EXIT.

       HBL-KEY-CFP SECTION.
       INI-HBL-KEY-CFP.
           PERFORM SCR-CLRA-CFP.
           MOVE +8 TO DBC-NUM-ICLI-LEN IN CFP-FLD.
           PERFORM BUS-COR-ICCM.
      *ISP   27-JUL-1990 DEBE SER REEMPLAZADO POR VARIABLE
      *     INHIBE MOVE FRM-CPSF TO FRM-CPIM-AEY
           MOVE '1' TO FRM-CPIM-AEY.
           PERFORM HBL-FLD.
           MOVE SCR-INST-GFL TO SCR-INST.
           MOVE SCR-CAI-ICIC TO ADP-CAI-IMDT IN CFP-FLD.
           MOVE SCR-IIC-ICIC TO ADP-IIC-IMDT IN CFP-FLD.
           MOVE SCR-NUM-IEDP TO ADP-NUM-IEDP IN CFP-FLD.
           MOVE SCR-COD-APOD TO ADP-COD-IPOD IN CFP-FLD.
           MOVE SCR-NUM-IGRP TO ADP-NUM-IGRP IN CFP-FLD.

           PERFORM BUS-FINF.
           MOVE ADP-COD-IPOD IN CFP-FLD TO WSS-COD-IPOD IN WSS-VARI.
           IF WSS-GLS-IPO2 NOT > SPACES
               IF ( WSS-GLS-IPO1 NOT < '0' AND WSS-GLS-IPO1 NOT > '9' )
                  OR
                  ( WSS-GLS-IPO1 NOT < 'A' AND WSS-GLS-IPO1 NOT > 'Z' )
                     MOVE SPACES TO FRM-GLS-IPOD IN CFP-FLD
                     GO TO NO-VAL-ADP-COD-IPOD.
           MOVE 'SGC'                   TO TAB-COD-SIST.
           MOVE 'FAC'                   TO TAB-COD-TTAB IN TAB.
           MOVE ADP-COD-IPOD IN CFP-FLD TO TAB-COD-CTAB IN TAB.
           PERFORM BUS-TAB.
           MOVE TAB-GLS-DESC IN TAB TO FRM-GLS-IPOD IN CFP-FLD.
       NO-VAL-ADP-COD-IPOD.

           IF SCR-COD-AUX1 = 'FST'
               MOVE 'SEC' TO SCR-COD-AUX1
               MOVE 'SGC'        TO MSG-COD-SIST
               MOVE SCR-EXT-MENS TO MSG-COD-MENS
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO CFP-GLS-MENS IN CFP-FLD
           ELSE
                   PERFORM PSB-ENG-APO
                   MOVE SPACES TO SCR-COD-CLAP
                   IF FRM-FFLD = FRM-FFLD-PF10
                       PERFORM VRF-ENG
                       IF WSS-IND-ENG = 'SAM'
                           MOVE EDP-IND-PODE IN EDP(SCR-NUM-ICOR) TO
                             SCR-COD-APOD
                           MOVE EDP-IND-PODE IN EDP(SCR-NUM-ICOR) TO
                             ADP-COD-IPOD IN CFP-FLD
                           PERFORM SET-IGRP
                           MOVE SCR-NUM-IGRP TO ADP-NUM-IGRP IN CFP-FLD
                           MOVE 'SGC'          TO MSG-COD-SIST
                           MOVE 'APO    INGNX' TO MSG-COD-MENS
                           PERFORM GET-MSG
                           MOVE MSG-GLS-DESC TO CFP-GLS-MENS IN CFP-FLD

                       ELSE
                            PERFORM EGR-FTER-CIC
                   ELSE
                       MOVE 'SGC'          TO MSG-COD-SIST
                       MOVE 'CFP    INGNX' TO MSG-COD-MENS
                       PERFORM GET-MSG
                       MOVE MSG-GLS-DESC TO CFP-GLS-MENS IN CFP-FLD
                       ADD 1             TO SCR-NUM-IGRP
                       MOVE SCR-NUM-IGRP TO ADP-NUM-IGRP IN CFP-FLD.

      *ISP SIEMPRE VA A BUSCAR DATOS DE DBC Y LOS CARGA
           MOVE SCR-CAI-ICIC TO DBC-CAI-ICLI IN DBC.
           MOVE SCR-IIC-ICIC TO DBC-IIC-ICLI IN DBC.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM GET-CLI.
           IF MSG-COD-MENS NOT = SPACES
               MOVE MSG-GLS-DESC TO FRM-MENS
           ELSE
               MOVE DBC-GLS-NOMC IN DBC TO CPT-STRN
               PERFORM CPT-BLKS
               MOVE CPT-STRN TO DBC-GLS-NOMC IN CFP-FLD
               MOVE DBC-NUM-ICLI IN DBC TO DBC-NUM-ICLI IN CFP-FLD
               MOVE DBC-VRF-ICLI IN DBC TO DBC-VRF-ICLI IN CFP-FLD
               MOVE DBC-IND-ICLI IN DBC TO DBC-IND-ICLI IN CFP-FLD
               MOVE DBC-GLS-ICLI IN DBC TO DBC-GLS-ICLI IN CFP-FLD.
           PERFORM EDT-KEY-CFP.
           PERFORM EDT-FLD-CFP.
           IF SCR-IND-FST IN SCR-VEC-FST(SCR-IPRO) = 'S'
               MOVE SPACES TO SCR-IND-FST IN SCR-VEC-FST(SCR-IPRO)
               PERFORM SCR-INIT
               PERFORM STP-EXIT
           ELSE
               PERFORM SCR-PUTA.
           PERFORM SCR-EXIT.
       FIN-HBL-KEY-CFP.
           EXIT.

       DET-PFS-ENG SECTION.
       INI-DET-PFS-ENG.
           IF FRM-FFLD = FRM-FFLD-PF10
               MOVE 'F10' TO SCR-COD-AUX2
           ELSE
               MOVE 'ENT' TO SCR-COD-AUX2.
       FIN-DET-PFS-ENG.
           EXIT.

       SET-IGRP SECTION.
       INI-SET-IGRP.
           IF SCR-IND-ING = 'FAC'
               MOVE 1 TO SCR-NUM-IGRP
           ELSE
               MOVE 2 TO SCR-NUM-IGRP.
       FIN-SET-IGRP.
           EXIT.

       PSB-ENG-APO SECTION.
       INI-PSB-ENG-APO.
           IF ADP-COD-CLAP IN ADP NOT > SPACES
               GO TO FIN-PSB-ENG-APO.
           MOVE 'S' TO WSS-ENG-APO.
           MOVE SCR-CAI-ICIC TO REC-CAI-ICLI IN REC.
           MOVE SCR-IIC-ICIC TO REC-IIC-ICLI IN REC.
           MOVE 'OP'         TO REC-COD-TREC IN REC.
           MOVE SPACES       TO REC-CIC-IREL IN REC.
           MOVE ZEROES       TO REC-NUM-TREC IN REC.
           MOVE FIO-GET-NLS TO FIO-CMND.
           PERFORM SGC-FIO-REC.
       CIC-PSB-ENG-APO.
           IF FIO-STAT-OKS AND
              REC-CAI-ICLI IN REC = SCR-CAI-ICIC AND
              REC-IIC-ICLI IN REC = SCR-IIC-ICIC AND
              REC-COD-TREC IN REC = 'OP'
                 IF REC-COD-AREC IN REC = ADP-COD-CLAP IN ADP AND
                    REC-NUM-TREC IN REC = SCR-NUM-IEDP
                     MOVE 'N' TO WSS-ENG-APO
                 ELSE
                     MOVE FIO-GET-NXT TO FIO-CMND
                     PERFORM SGC-FIO-REC
                     GO TO CIC-PSB-ENG-APO.
           IF WSS-ENG-APO = 'S'
                PERFORM CRG-IDX-ENG
                MOVE ADP-COD-CLAP IN ADP TO SCR-COD-CLAP
                MOVE 'S' TO SCR-IND-ENG IN SCR-VEC-ENG(WSS-IDX-IAPO)
                MOVE 'S' TO SCR-IND-FST IN SCR-VEC-FST(WSS-IDX-IAPO)
                MOVE 'ASG    INGOK' TO SCR-EXT-MENS
                PERFORM DET-PFS-ENG
                PERFORM EGR-FPEN-CIC.
       FIN-PSB-ENG-APO.
           EXIT.

      *  CODIGO ADICIONAL PARA ENGANCHE PROGRAMAS
       ING-FPEN-CIC SECTION.
       INI-ING-FPEN-CIC.
           PERFORM ING-SETE.
           MOVE MSG-GLS-DESC TO CFP-GLS-MENS.
           PERFORM HBL-IKY.
       FIN-ING-FPEN-CIC.
           EXIT.

       ING-SETE SECTION.
       INI-ING-SETE.
           PERFORM CRG-IDX-ENG.
           PERFORM CRG-TBL-ENG.
           MOVE WSS-NTRN(SCR-IPRO) TO SCR-NTRN.
           MOVE WSS-PROG(SCR-IPRO) TO SCR-PROG.
           MOVE WSS-NMAP(SCR-IPRO) TO SCR-NMAP.
           MOVE WSS-NLIB(SCR-IPRO) TO SCR-NLIB.

           MOVE WSS-NTRV(SCR-IPRO) TO SCR-NTRV.
           MOVE WSS-PROV(SCR-IPRO) TO SCR-PROV.
       FIN-ING-SETE.
           EXIT.

       EGR-FPEN-CIC SECTION.
       INI-EGR-FPEN-CIC.
           PERFORM CRG-TBL-ENG.
           ADD 1 TO SCR-IPRO.
           IF SCR-IPRO > WSS-TOT-IIDX
                  PERFORM EGR-FTER-CIC
                  GO TO FIN-EGR-FPEN-CIC.
           IF SCR-IND-ENG IN SCR-VEC-ENG(SCR-IPRO) = SPACES
               GO TO INI-EGR-FPEN-CIC.
           MOVE WSS-INST-FPEN-CIC TO SCR-INST-EXT.
           MOVE WSS-PROG(SCR-IPRO) TO SYS-PROG.
           MOVE SCR-VARI           TO SYS-CMMA.
           MOVE SCR-TCMA           TO SYS-TCMA.
           MOVE SYS-XCTL           TO SYS-CMND.
           PERFORM GNS-PRO-SYS.
       FIN-EGR-FPEN-CIC.
           EXIT.

       EGR-FTER-CIC SECTION.
       INI-EGR-FTER-CIC.
           IF SCR-IND-ING = 'FAC'
               MOVE 'FAC    INGPX' TO SCR-EXT-MENS
           ELSE
           IF SCR-IND-ING = 'EDP'
               MOVE 'EDP    INGPX' TO SCR-EXT-MENS
           ELSE
               MOVE 'ERR    INGPX' TO SCR-EXT-MENS.
           PERFORM CRG-IDX-ENG.
           PERFORM CRG-TBL-ENG.
           MOVE 1 TO SCR-IPRO.
           MOVE WSS-INST-FTER-CIC TO SCR-INST-EXT.
           MOVE WSS-PROG(SCR-IPRO) TO SYS-PROG.
           MOVE SCR-VARI           TO SYS-CMMA.
           MOVE SCR-TCMA           TO SYS-TCMA.
           MOVE SYS-XCTL           TO SYS-CMND.
           PERFORM GNS-PRO-SYS.
       FIN-EGR-FTER-CIC.
           EXIT.

       SCR-INIT SECTION.
       INI-SCR-INIT.
           MOVE 3  TO FRM-PLIN.
           MOVE 19 TO FRM-NLIN.
           MOVE FRM-CLR-FRM TO FRM-CMND.
           PERFORM GNS-PRO-FRM.
           MOVE FRM-SINI-DBNF TO FRM-SINI.
           MOVE SCR-NMAP TO FRM-NAME.
           MOVE SCR-NLIB TO FRM-NLIB.
           MOVE CFP-FLD TO FRM-DFLD.
           MOVE FRM-INI TO FRM-CMND.
           PERFORM GNS-PRO-FRM.
       FIN-SCR-INIT.
           EXIT.
       COPY SGCBGE2C.
      *>>>>
*% END
*% IF WSS_DTC
      *<<<< WSS_DTC
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-DBC-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-CCM-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-EDP-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-RCE-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-EDS-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-REC-REQA==.
      *>>>>
*% END
*% IF WSS
      *<<<< WSS
       COPY SGCWGE2W.
       01  WSS-ENG.
           03  WSS-IND-ENG                        PIC X(03).
           03  WSS-IND-IVEC                       PIC X(01).
           03  WSS-NUM-IVEC                       PIC 9(03).
           03  WSS-ENG-APO                        PIC X(01).
       COPY GNSWGQUE.
       COPY GNSBRRCE.
       COPY SGCBREDS.
       COPY SGCBRREC.
       COPY SGCBRADP REPLACING ==  ADP== BY ==  WSS-ADP==.
       COPY SGCBRCCM REPLACING ==  CCM== BY ==  WSS-CCM==.
       COPY GNSWGSTR.
       COPY GNSWGCPT.
       COPY SGCBRDBC.
       COPY SGCBRCCM.
       COPY SGCBREDP.
       01  WSS-VARI.
           03  WSS-COD-IPOD.
               05  WSS-GLS-IPO1                           PIC X(01).
               05  WSS-GLS-IPO2                           PIC X(02).
           03  WSS-GLS-IENT.
               05  WSS-CAI-IMDT                           PIC X(04).
               05  WSS-IIC-IMDT                           PIC X(08).
               05  WSS-NUM-IEDP                           PIC 9(03).
               05  WSS-IND-PODE                           PIC X(03).
               05  WSS-FIL-IENT                           PIC X(12).
           03 WSS-IADP                      VALUE 0 PIC 9(01).
              88 WSS-EXISTE-PODER           VALUE 1.
           03 WSS-ICCM                      VALUE 0 PIC 9(01).
              88 WSS-EXISTE-CONDICION       VALUE 1.
           03 WSS-EXST-YES                  VALUE 1 PIC 9(01).
           03 WSS-EXST-NOT                  VALUE 0 PIC 9(01).
           03 WSS-COD-CREC.
              05 WSS-COD-TREC                           PIC X(02).
              05 WSS-COD-AREC                           PIC X(10).
      *>>>>
*% END
*% IF INI_FND_KEY
      *<<<< INI_FND_KEY
           PERFORM KEY-ALL-CFP.
           IF DBC-NUM-ICLI IN CFP-FLD > ZEROES
      *IDC-CLI Busca Cliente por medio de IdC
               MOVE DBC-NUM-ICLI IN CFP-FLD TO DBC-NUM-ICLI IN DBC
               MOVE DBC-IND-ICLI IN CFP-FLD TO DBC-IND-ICLI IN DBC
               MOVE DBC-GLS-ICLI IN CFP-FLD TO DBC-GLS-ICLI IN DBC
               MOVE 'DBC-IDC-ICLI'  TO FIO-AKEY
               MOVE FIO-GET-KEY-ALT TO FIO-CMND
               PERFORM GET-CLI
               MOVE DBC-GLS-NOMC IN DBC TO CPT-STRN
               PERFORM CPT-BLKS
               MOVE CPT-STRN TO DBC-GLS-NOMC IN CFP-FLD
               IF MSG-COD-MENS > SPACES
                   MOVE FIO-STAT-NEX TO FIO-STAT
                   MOVE MSG-GLS-DESC TO FRM-MENS
                   GO TO FIN-FND-KEY
               ELSE
                   MOVE DBC-CAI-ICLI IN DBC TO ADP-CAI-IMDT IN CFP-FLD
                   MOVE DBC-IIC-ICLI IN DBC TO ADP-IIC-IMDT IN CFP-FLD
           ELSE
           IF DBC-GLS-NOMC IN CFP-FLD > SPACES
      *NOM-CLI Busca Cliente por medio del Nombre
               MOVE SPACES TO DBC-GLS-NOMC IN DBC

               MOVE DBC-GLS-NOMC IN CFP-FLD TO STR-GLS-GSTR
               PERFORM STR-UNS
               MOVE STR-GLS-FUNS IN STR-VARI(1) TO DBC-GLS-APAT IN DBC
               MOVE STR-GLS-FUNS IN STR-VARI(2) TO DBC-GLS-AMAT IN DBC
               MOVE STR-GLS-FUNS IN STR-VARI(3) TO DBC-GLS-NOMB IN DBC

               MOVE 'DBC-GLS-NOMC'  TO FIO-AKEY
               MOVE FIO-GET-NLS-ALT TO FIO-CMND
               PERFORM GET-CLI
               IF MSG-COD-MENS > SPACES
                   MOVE ZEROES TO DBC-NUM-ICLI IN CFP-FLD
                   MOVE SPACES TO DBC-VRF-ICLI IN CFP-FLD
                   MOVE SPACES TO DBC-IND-ICLI IN CFP-FLD
                   MOVE SPACES TO DBC-GLS-ICLI IN CFP-FLD
                   MOVE MSG-GLS-DESC TO FRM-MENS
                   MOVE FIO-STAT-NEX TO FIO-STAT
                   GO TO FIN-FND-KEY
               ELSE
                   MOVE DBC-GLS-NOMC IN DBC TO CPT-STRN
                   PERFORM CPT-BLKS
                   MOVE CPT-STRN TO DBC-GLS-NOMC IN CFP-FLD
                   MOVE DBC-NUM-ICLI IN DBC TO DBC-NUM-ICLI IN CFP-FLD
                   MOVE DBC-VRF-ICLI IN DBC TO DBC-VRF-ICLI IN CFP-FLD
                   MOVE DBC-IND-ICLI IN DBC TO DBC-IND-ICLI IN CFP-FLD
                   MOVE DBC-GLS-ICLI IN DBC TO DBC-GLS-ICLI IN CFP-FLD
                   MOVE DBC-CAI-ICLI IN DBC TO ADP-CAI-IMDT IN CFP-FLD
                   MOVE DBC-IIC-ICLI IN DBC TO ADP-IIC-IMDT IN CFP-FLD.
           PERFORM BUS-FINF.
           IF SCR-CCPP NOT = 'ING'
               GO TO CON-FND-ACC.
           PERFORM KEY-ALL-CFP.
           PERFORM BUS-COR-IGRP.
           PERFORM KEY-ALL-CFP.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM SGC-FIO-ADP.
           PERFORM BUS-COR-ICCM.
           MOVE WSS-EXST-NOT TO WSS-IADP.
           MOVE WSS-EXST-NOT TO WSS-ICCM.
           GO TO STT-FND-KEY.
       CON-FND-ACC.
           PERFORM KEY-ALL-CFP.
           IF ADP-NUM-IGRP IN ADP NOT > ZEROES
               PERFORM BUS-COR-IGRP
           ELSE
           IF ADP-NUM-ICMP IN ADP NOT > ZEROES
               PERFORM BUS-COR-ICMP
               IF FIO-STAT = FIO-STAT-NEX
                   GO TO FIN-FND-KEY
               ELSE
                   NEXT SENTENCE
           ELSE
               MOVE FIO-GET-KEY TO FIO-CMND
               PERFORM SGC-FIO-ADP
               IF NOT FIO-STAT-OKS
                   MOVE 'SGC'        TO MSG-COD-SIST
                   MOVE 'ADP    NEX' TO MSG-COD-MENS
                   PERFORM GET-MSG
                   MOVE MSG-GLS-DESC TO FRM-MENS
                   MOVE FIO-STAT-NEX TO FIO-STAT
                   GO TO FIN-FND-KEY
               ELSE
                   MOVE WSS-EXST-YES TO WSS-IADP.
           PERFORM KEY-CCM-CFP.
           IF CCM-NUM-ICCM IN CCM NOT > ZEROES
               PERFORM BUS-COR-ICCM
           ELSE
               MOVE FIO-GET-KEY TO FIO-CMND
               PERFORM SGC-FIO-CCM
               MOVE FIO-STAT TO PGM-STAT-CCM
               IF NOT FIO-STAT-OKS
                   MOVE 'SGC'        TO MSG-COD-SIST
                   MOVE 'CCM    NEX' TO MSG-COD-MENS
                   PERFORM GET-MSG
                   MOVE MSG-GLS-DESC TO FRM-MENS
                   MOVE FIO-STAT-NEX TO FIO-STAT
                   GO TO FIN-FND-KEY
               ELSE
                   MOVE WSS-EXST-YES TO WSS-ICCM.
       STT-FND-KEY.
           IF WSS-EXISTE-PODER
               MOVE '00' TO FIO-STAT
           ELSE
               MOVE '23' TO FIO-STAT.
      *>>>>
*% END
*% IF FIN_FND_KEY
      *<<<< FIN_FND_KEY
           MOVE ADP-KEY-IEDP IN ADP TO EDP-KEY-IEDP IN EDP.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM SGC-FIO-EDP.
           MOVE FIO-STAT TO PGM-STAT-EDP.
           MOVE PGM-STAT-ADP TO FIO-STAT.
      *>>>>
*% END
*% IF INI_CMN_ING
      *<<<< INI_CMN_ING
           MOVE SPACES TO ADP.
           MOVE ZEROES TO ADP-NUM-ICMP IN ADP.
      *>>>>
*% END
*% IF CMN_ING OR CMN_MOD
      *<<<< CMN_ING OR CMN_MOD
           PERFORM GET-FHOY.
           MOVE HOY-STP-ITRN IN HOY-VARI TO ADP-STP-ITRN IN ADP.
      *>>>>
*% END
*% IF INI_CMN_ELI
      *<<<< INI_CMN_ELI
           IF CCM-NUM-ICCM IN CFP-FLD > ZEROES
               PERFORM KEY-ALL-CFP
               MOVE FIO-GET-KEY-UPD TO FIO-CMND
               PERFORM SGC-FIO-CCM
               IF NOT FIO-STAT-OKS
                   MOVE FIO-MENS TO FRM-MENS
                   GO TO FIN-CMN-ELI
               ELSE
                   MOVE FIO-DEL TO FIO-CMND
                   PERFORM SGC-FIO-CCM
                   IF NOT FIO-STAT-OKS
                       MOVE FIO-MENS TO FRM-MENS
                       GO TO FIN-CMN-ELI
                   ELSE
                       MOVE 'SGC'          TO MSG-COD-SIST
                       MOVE 'CCM    ELISI' TO MSG-COD-MENS
                       PERFORM GET-MSG
                       MOVE MSG-GLS-DESC TO FRM-MENS
                       GO TO FIN-CMN-ELI.
      *>>>>
*% END
*% IF FIN_CMN_ELI
      *<<<< FIN_CMN_ELI
           IF NOT FIO-STAT-OKS
               MOVE FIO-MENS TO FRM-MENS
               GO TO FIN-CMN-ELI.
           MOVE 'SGC'          TO MSG-COD-SIST.
           MOVE 'ADP    ELISI' TO MSG-COD-MENS.
           PERFORM GET-MSG.
           MOVE MSG-GLS-DESC TO FRM-MENS.
      *>>>>
*% END
*% IF FIN_CMN_ING
      *<<<< FIN_CMN_ING
           IF NOT FIO-STAT-OKS
               MOVE FIO-MENS TO FRM-MENS
               GO TO FIN-CMN-ING.
           IF CCM-NUM-ICCM IN CFP-FLD > ZEROES AND
              ( CCM-FEC-FINI IN CFP-FLD > ZEROES OR
                CCM-FEC-FTER IN CFP-FLD > ZEROES OR
                CCM-COD-REGI IN CFP-FLD > SPACES OR
                CCM-COD-VCML IN CFP-FLD > SPACES OR
                CCM-COD-COMU IN CFP-FLD > SPACES OR
                CCM-VAL-LIMI IN CFP-FLD > ZEROES OR
                CCM-CIC-IOPE IN CFP-FLD > SPACES )
               MOVE ADP-STP-ITRN IN ADP TO CCM-STP-ITRN IN CCM
               MOVE FIO-PUT TO FIO-CMND
               PERFORM SGC-FIO-CCM
               IF NOT FIO-STAT-OKS
                   MOVE FIO-MENS TO FRM-MENS
                   MOVE FIO-BCK-OUT TO FIO-CMND
                   PERFORM SGC-FIO-CCM.
      *>>>>
*% END
*% IF FIN_CMN_ING
      *<<<< FIN_CMN_ING
           PERFORM GET-FEC-CMT.
           PERFORM SET-QUE.
           MOVE QUE-MOD      TO QUE-CMND.
           PERFORM GNS-PRO-QUE.
           IF QUE-STAT NOT = QUE-STAT-OKS
                 PERFORM SET-QUE
                 MOVE QUE-PUT TO QUE-CMND
                 PERFORM GNS-PRO-QUE.
      *>>>>
*% END
*% IF FIN_CMN_ING
      *<<<< FIN_CMN_ING
      * DESPUES DEL CODIGO DE PROGRAMACION NO ENGANCHE
           PERFORM HBL-IKY.
      *>>>>
*% END
*% IF FIN_CMN_MOD
      *<<<< FIN_CMN_MOD
           IF NOT FIO-STAT-OKS
               MOVE FIO-MENS TO FRM-MENS
               GO TO FIN-CMN-MOD.
           IF NOT ( CCM-NUM-ICCM IN CFP-FLD > ZEROES AND
                  ( CCM-FEC-FINI IN CFP-FLD > ZEROES OR
                    CCM-FEC-FTER IN CFP-FLD > ZEROES OR
                    CCM-COD-REGI IN CFP-FLD > SPACES OR
                    CCM-COD-VCML IN CFP-FLD > SPACES OR
                    CCM-COD-COMU IN CFP-FLD > SPACES OR
                    CCM-VAL-LIMI IN CFP-FLD > ZEROES OR
                    CCM-CIC-IOPE IN CFP-FLD > SPACES ) )
               GO TO FIN-CMN-MOD.
           MOVE FIO-GET-KEY-UPD TO FIO-CMND.
           PERFORM SGC-FIO-CCM.
           IF FIO-STAT-OKS
               PERFORM RET-CCM-CFP
               MOVE ADP-STP-ITRN IN ADP TO CCM-STP-ITRN IN CCM
               MOVE FIO-MOD TO FIO-CMND
               PERFORM SGC-FIO-CCM
               IF NOT FIO-STAT-OKS
                   MOVE FIO-MENS TO FRM-MENS
                   MOVE FIO-BCK-OUT TO FIO-CMND
                   PERFORM SGC-FIO-CCM
               ELSE
                   NEXT SENTENCE
           ELSE
               PERFORM RET-CCM-CFP
               MOVE ADP-STP-ITRN IN ADP TO CCM-STP-ITRN IN CCM
               MOVE FIO-PUT TO FIO-CMND
               PERFORM SGC-FIO-CCM
               IF NOT FIO-STAT-OKS
                   MOVE FIO-MENS TO FRM-MENS
                   MOVE FIO-BCK-OUT TO FIO-CMND
                   PERFORM SGC-FIO-CCM.
      *>>>>
*% END
*% IF EOF
      *<<<< EOF
       BUS-COR-IGRP SECTION.
       INI-BUS-COR-IGRP.
           MOVE 00 TO ADP-NUM-IGRP IN CFP-FLD.
           MOVE 99 TO ADP-NUM-IGRP IN ADP.
           MOVE 99 TO ADP-NUM-ICMP IN ADP.
           MOVE ADP-CIC-IMDT IN ADP TO ADP-CIC-IMDT IN WSS-ADP.
           MOVE ADP-IND-TINF IN ADP TO ADP-IND-TINF IN WSS-ADP.
           MOVE ADP-NUM-IEDP IN ADP TO ADP-NUM-IEDP IN WSS-ADP.
           MOVE ADP-COD-IPOD IN ADP TO ADP-COD-IPOD IN WSS-ADP.
           MOVE FIO-GET-LEQ TO FIO-CMND.
           PERFORM SGC-FIO-ADP.
           IF FIO-STAT-OKS AND
              ADP-CIC-IMDT IN ADP = ADP-CIC-IMDT IN WSS-ADP AND
              ADP-IND-TINF IN ADP = ADP-IND-TINF IN WSS-ADP AND
              ADP-NUM-IEDP IN ADP = ADP-NUM-IEDP IN WSS-ADP AND
              ADP-COD-IPOD IN ADP = ADP-COD-IPOD IN WSS-ADP
               MOVE ADP-NUM-IGRP IN ADP TO ADP-NUM-IGRP IN CFP-FLD
               MOVE WSS-EXST-YES TO WSS-IADP.
           IF SCR-CCPP = 'ING' OR 'ACT'
               ADD  1 TO ADP-NUM-IGRP IN CFP-FLD
               MOVE WSS-EXST-NOT TO WSS-IADP.
       FIN-BUS-COR-IGRP.
           EXIT.

       BUS-COR-ICMP SECTION.
       INI-BUS-COR-ICMP.
           MOVE 99 TO ADP-NUM-ICMP IN ADP.
           MOVE ADP-CIC-IMDT IN ADP TO ADP-CIC-IMDT IN WSS-ADP.
           MOVE ADP-IND-TINF IN ADP TO ADP-IND-TINF IN WSS-ADP.
           MOVE ADP-NUM-IEDP IN ADP TO ADP-NUM-IEDP IN WSS-ADP.
           MOVE ADP-COD-IPOD IN ADP TO ADP-COD-IPOD IN WSS-ADP.
           MOVE ADP-NUM-IGRP IN ADP TO ADP-NUM-IGRP IN WSS-ADP.
           MOVE FIO-GET-LEQ TO FIO-CMND.
           PERFORM SGC-FIO-ADP.
           IF FIO-STAT-OKS AND
              ADP-CIC-IMDT IN ADP = ADP-CIC-IMDT IN WSS-ADP AND
              ADP-IND-TINF IN ADP = ADP-IND-TINF IN WSS-ADP AND
              ADP-NUM-IEDP IN ADP = ADP-NUM-IEDP IN WSS-ADP AND
              ADP-COD-IPOD IN ADP = ADP-COD-IPOD IN WSS-ADP AND
              ADP-NUM-IGRP IN ADP = ADP-NUM-IGRP IN WSS-ADP
               IF SCR-CCPP = 'ING' OR 'ACT'
                   MOVE WSS-EXST-NOT TO WSS-IADP
               ELSE
                   MOVE WSS-EXST-YES TO WSS-IADP
           ELSE
               MOVE 'SGC'          TO MSG-COD-SIST
               MOVE 'ADP    NOIGR' TO MSG-COD-MENS
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS
               MOVE FIO-STAT-NEX TO FIO-STAT.
       FIN-BUS-COR-ICMP.
           EXIT.

       BUS-COR-ICCM SECTION.
       INI-BUS-COR-ICCM.
           MOVE 00 TO CCM-NUM-ICCM IN CFP-FLD.
           MOVE 99 TO CCM-NUM-ICCM IN CCM.
           MOVE CCM-CIC-IMDT IN CCM TO CCM-CIC-IMDT IN WSS-CCM.
           MOVE CCM-IND-TINF IN CCM TO CCM-IND-TINF IN WSS-CCM.
           MOVE CCM-NUM-IEDP IN CCM TO CCM-NUM-IEDP IN WSS-CCM.
           MOVE CCM-COD-IPOD IN CCM TO CCM-COD-IPOD IN WSS-CCM.
           MOVE CCM-NUM-IGRP IN CCM TO CCM-NUM-IGRP IN WSS-CCM.
           MOVE FIO-GET-LEQ TO FIO-CMND.
           PERFORM SGC-FIO-CCM.
           IF FIO-STAT-OKS AND
              CCM-CIC-IMDT IN CCM = CCM-CIC-IMDT IN WSS-CCM AND
              CCM-IND-TINF IN CCM = CCM-IND-TINF IN WSS-CCM AND
              CCM-NUM-IEDP IN CCM = CCM-NUM-IEDP IN WSS-CCM AND
              CCM-COD-IPOD IN CCM = CCM-COD-IPOD IN WSS-CCM AND
              CCM-NUM-IGRP IN CCM = CCM-NUM-IGRP IN WSS-CCM
               MOVE CCM-NUM-ICCM IN CCM TO CCM-NUM-ICCM IN CFP-FLD
               MOVE '00' TO PGM-STAT-CCM
               MOVE WSS-EXST-YES TO WSS-ICCM.
           IF SCR-CCPP = 'ING' OR 'ACT'
               MOVE '23' TO PGM-STAT-CCM
               ADD 1 TO CCM-NUM-ICCM IN CFP-FLD
               MOVE WSS-EXST-NOT TO WSS-ICCM.
       FIN-BUS-COR-ICCM.
           EXIT.

       COPY SGCBFDBC.
       COPY SGCBFCCM.
       COPY SGCBFEDP.
       COPY GNSBFRCE.
       COPY SGCBFEDS.
       COPY SGCBFREC.
       COPY GNSBEGLS.
       COPY SGCBGCLI.
       COPY GNSBGCPT.
       COPY GNSBGSTR.
      *>>>>
*% END
*% IF EOF_PQ
      *<<<< EOF_PQ
       PRO-CCM-CFP SECTION.
       INI-PRO-CCM-CFP.
           MOVE FRM-CPIM-AEY TO CCM-FEC-FINI-ATR IN CFP-FLD.
           MOVE FRM-CPIM-AEY TO CCM-FEC-FTER-ATR IN CFP-FLD.
           MOVE FRM-CPIM-AEY TO CCM-COD-REGI-ATR IN CFP-FLD.
           MOVE FRM-CPIM-AEY TO CCM-COD-COMU-ATR IN CFP-FLD.
           MOVE FRM-CPIM-AEY TO CCM-VAL-LIMI-ATR IN CFP-FLD.
           MOVE FRM-CPIM-AEY TO CCM-CIC-IOPE-ATR IN CFP-FLD.
           MOVE FRM-CPIM-AEY TO CCM-COD-VCML-ATR IN CFP-FLD.
       FIN-PRO-CCM-CFP.
           EXIT.
      *>>>>
*% END
