*%! Codigo adicional para archivo
*% NO_HDR_CST = TRUE
*% PGM_PTC = TRUE
*% IF PFS_SCR_MOD AND PGM_PQ
      *<<<< PFS_SCR_MOD AND PGM_PQ
           IF ( FRM-FFLD = FRM-FFLD-PF5 OR FRM-FFLD-PF6 OR
                           FRM-FFLD-PF7 OR FRM-FFLD-PF8 ) AND
              SCR-STAT = SCR-STAT-CON
               PERFORM VAL-NUM-KEY-REC
               PERFORM VAL-NUM-FLD-REC.
           IF FRM-FFLD = FRM-FFLD-PF5 OR FRM-FFLD-PF6 OR
                         FRM-FFLD-PF7 OR FRM-FFLD-PF8
               PERFORM RST-STAT
               PERFORM FND-SCR-KEY THRU FIN-SCR-KEY
               IF SCR-STAT NOT = SCR-STAT-ABT
                   PERFORM SCR-TRL
               ELSE
                   PERFORM GNS-CLR-RQA
                   PERFORM DESSCRTRL
                   GO TO FIN-SCR-MOD.
           PERFORM GNS-CLR-RQA.
      *>>>>
*% END
*% IF PGM_ARG
*% IF PFS_SCR_ACC
      *<<<< PFS_SCR_ACC
           IF FRM-FFLD = FRM-FFLD-PF7 OR FRM-FFLD-PF8
              MOVE SCR-KEY-IDBC-RAIZ TO DBC-CIC-ICLI IN DBC
              MOVE FIO-GET-KEY TO FIO-CMND
              PERFORM SGC-FIO-DBC
              MOVE DBC-GLS-NOMC IN DBC TO SCR-KEY-IDBC-ACTU.
*% END
*% END
*% IF PGM_ARG
*% FRM = "REC"
*% PADRE = "DBC"
*% KEY_PADRE = "DBC-GLS-NOMC"
*% LARGO_KEY_PADRE = 75
*% RELACION_PADRE_HIJO = "DBC-CIC-ICLI"
*% LARGO_RELACION_PADRE_HIJO = 12
*% FIO_PADRE = "SGC-FIO-DBC"
*% SIST_PADRE = "SGC"
*% KEY_BROWSE_PADRE = "DBC-GLS-NOMC"
*% ORG_PADRE_VSI = TRUE
*% HIJO = "REC"
*% KEY_HIJO = "REC-KEY-IREC"
*% LARGO_KEY_HIJO = 28
*% RELACION_HIJO_PADRE = "REC-CIC-ICLI"
*% FIO_HIJO = "SGC-FIO-REC"
*% SIST_HIJO = "SGC"
*% KEY_BROWSE_HIJO = "REC-KEY-IREC"
*% YO_LEO_EL_PRIMER_HIJO = TRUE
*% ORG_HIJO_VSI = TRUE
*%
*% ACEPTE_PF5 = TRUE
*% ACEPTE_PF6 = TRUE
*% ACEPTE_PF7 = TRUE
*% ACEPTE_PF8 = TRUE
*%
*% INICIALIZAR_VARIABLES = FALSE
*% COLAR_HIJOS = FALSE
*% LEER_TODOS_LOS_HIJOS = FALSE
*% NUMERO_LINEAS_TABLA = 1
*%
*% INCLUDE 'GNSSRC:PFSCONIDX.SRC'
*% END
*% IF PGM_DOS OR PGM_MVS
*%! CODIGO ADICIONAL PARA ENGANCHE PROGRAMAS
*% LARGO_MI_COMMAREA = 2250
*% IF FIN_SCR_VARI
      *<<<< FIN_SCR_VARI
       COPY SGCWGE2S.
      *>>>>
*% END
*% IF CMT_ID_PU
      *****************************************************************
      *   MANTENCIONES                                                *
      *   ============                                                *
      *         PROGRAMADOR : CIMA     (OGB)                          *
      *         FECHA       : 21 DE JULIO DE 2014                     *
      *         CAMBIO      : CAMBIA VALIDACIONES DE CAMPOS           *
      *         ETIQUETA    :                                         *
      *       * CIMA-INI / VALIDACIONES MOD RELA ART 85 / JULIO 2014  *
      *****************************************************************
      *                                                               *
      *  FECHA    : 08/02/2015                                        *
      *  PROYECTO : ADMINISTRACION DE ALTAS Y BAJAS    WEB- 52962     *
      *  OBJETIVO : 1.- INCORPORAR Y PROCESAR NUEVOS CAMPOS.          *
      *             2.- REGULARIZAR NOMBRE DEL PROGRAMA               *
      *             3.- MOSTRAR GLOSA EN PANTALLA REC CAMPO 10        *
      *  CAMBIO   : SE MODIFICA PROGRAMA CTAPBCCL Y SE DEJA COMO      *
      *             SGCPBCC1 PARA REGULARIZAR EL NOMBRE DE ESTE       *
      *             SE AGREGAN VALIDACIONES Y NUEVOS CAMPOS           *
      *                                                               *
      *             SE MODIFICA BU PU PQ PU                           *
      *                                                               *
      *  AUTOR    : BEE-TEAM(JCD)                                     *
      *  ETIQUETA : *JCD-INI 03-FEB-2015 Altas y Bajas en la WEB      *
      *****************************************************************
*% END
*% IF WSS
      *<<<< WSS
       COPY SGCWGE2W.
      * VARIABLE PARA DETERMINAR SI SE ENGANCHA DEPENDIENDO DEL VECTOR.
       01  WSS-PODE.
           03  WSS-NUM-PODE                       PIC 9(03).
       01  WSS-ENG.
           03  WSS-IND-IVEC                       PIC X(01).
           03  WSS-NUM-IVEC                       PIC 9(03).
           03  WSS-NUM-LIMI                       PIC 9(03).
       01 PGM-STAT-DBC.
          88 PGM-STAT-DBC-NUL    VALUE '  '.
          03 PGM-STT1-DBC        VALUE '2' PIC X(01).
          88 PGM-STAT-DBC-OKS VALUE '0'.
          03 PGM-STT2-DBC        VALUE '3' PIC X(01).
*% IF PGM_PQ
      *JCD-INI 03-FEB-2015 Altas y Bajas en la WEB
       01 WSS-VARI-CONS.
           03 WC-VIGENTE  VALUE 'S'                     PIC X(01).
           03 WC-SGC      VALUE 'SGC'                   PIC X(03).
           03 WC-REC      VALUE 'REC'                   PIC X(03).
      *JCD-FIN 03-FEB-2015 Altas y Bajas en la WEB
*% END
*% IF PGM_PU
      *JCD-INI 03-FEB-2015 Altas y Bajas en la WEB
       01 WSS-VARI-CONS.
           03 WC-ACTIVADA VALUE 'S'                     PIC X(01).
      *JCD-FIN 03-FEB-2015 Altas y Bajas en la WEB
*% END
      *>>>>
*% END
*%! LARGO_MI_COMMAREA=500
*% LARGO_MI_COMMAREA=1482
*% IF CMA
      *<<<< CMA
      * BYTES ADICIONALES PARA ENGANCHE
      * NO ES NECESARIO, PUES PFSALLALL PONE FILLER
      *     02 FILLER                      PIC X(2250).
      *>>>>
*% END
*% IF FIN_SCR_GIKY OR PFS_SCR_ING OR SCR_GFLD_VAL_MKY
      *<<<< FIN_SCR_GIKY OR PFS_SCR_ING OR SCR_GFLD_VAL_MKY
           IF FRM-FFLD = FRM-FFLD-PF3 AND
              SCR-IND-ENG IN SCR-VEC-ENG(SCR-IPRO) = 'S'
               PERFORM EGR-FTER-CIC.
      *>>>>
*% END
*% IF SCR_GFLD_VAL_MKY
      *<<<< SCR_GFLD_VAL_MKY
           IF FRM-FFLD = FRM-FFLD-PF10 AND
              SCR-IND-ENG IN SCR-VEC-ENG(SCR-IPRO) = 'S'
                PERFORM ENG-CFP.
      *>>>>
*% END
*% IF INI_FIO
      *<<<< INI_FIO
           IF SCR-DESDE-CMN
               MOVE SPACES TO SCR-VEC-ENG
               MOVE WSS-INST-NULL TO SCR-INST-EXT
               MOVE 1 TO SCR-IPRO
               GO TO FIN-INI-FIO.
           IF SCR-INST-EXT = WSS-INST-FPEN-CIC
               MOVE WSS-INST-NULL TO SCR-INST-EXT
               PERFORM ING-FPEN-CIC.
       FIN-INI-FIO.
      *>>>>
*% END
*% IF FIN_HBL_IKY
      *<<<< FIN_HBL_IKY
           IF SCR-IND-ENG IN SCR-VEC-ENG(SCR-IPRO) = 'S'
               PERFORM HBL-KEY-REC.
           PERFORM OBT-NEMO
           IF SCR-NEMO = TAB-COD-CTAB IN TAB AND
              SCR-CCPP = 'ING'
               MOVE FRM-CPIM-UBY TO REC-NUM-TREC-ATR.
      *JSS-INI 25-APR-1994
      *     IF PGM-ICLR = PGM-LIMPIAR-CAMPOS AND
      *        ( SCR-CMND = 'IVR' OR 'IMR' ) AND
      *        FRM-NUM-ICLI IN REC-FLD NOT = SPACES AND
      *        FRM-NUM-ICLI IN REC-FLD NOT = ZEROES
      *         MOVE 0 TO REC-NUM-TREC IN REC-FLD
      *         MOVE 0 TO FRM-NUM-ICLI-LEN IN REC-FLD
      *         IF SCR-CMND = 'IVR'
      *             MOVE ZEROES TO FRM-NUM-IREL IN REC-FLD
      *             MOVE SPACES TO FRM-VRF-IREL IN REC-FLD
      *             MOVE SPACES TO FRM-IND-IREL IN REC-FLD
      *             MOVE SPACES TO FRM-GLS-IREL IN REC-FLD
      *             MOVE SPACES TO FRM-GLS-NOMR IN REC-FLD
      *             MOVE -1 TO FRM-NUM-IREL-LEN IN REC-FLD
      *         ELSE
      *             MOVE SPACES TO REC-COD-TREC IN REC-FLD
      *             MOVE -1 TO REC-COD-TREC-LEN IN REC-FLD.
      *JSS-FIN
      *>>>>
*% END
*% IF FIN_SCR_ING
      *<<<< FIN_SCR_ING
      *JSS-INI 25-APR-1994
      *     IF ( SCR-CMND NOT = 'ING' ) AND
      *        ( FRM-FFLD = FRM-FFLD-PF10 OR FRM-FFLD-RET )
      *         MOVE PGM-LIMPIAR-CAMPOS TO PGM-ICLR.
      * EXT-SCR-ING.
      *JSS-FIN 25-APR-1994
      *>>>>
*% END
*% IF FIN_HBL_FLD
      *<<<< FIN_HBL_FLD
      *MHM-INI 10-JUN-2003
           MOVE 'SGC' TO TAB-COD-SIST.
           MOVE 'REC ' TO TAB-COD-TTAB IN TAB.
           MOVE REC-COD-TREC IN REC-FLD TO TAB-COD-CTAB IN TAB.
           PERFORM VAL-COD.
           IF MSG-COD-MENS = 'COD    NEX' OR
              REC-COD-TREC IN REC-FLD NOT > SPACES
               MOVE SPACES TO WSS-CIC-TREC IN WSS-VARI
           ELSE
               MOVE TAB-CIC-CTAB IN TAB TO
                    WSS-CIC-TREC IN WSS-VARI.
           IF WSS-GLS-TREC IN WSS-VARI = 'OB' OR
              WSS-GLS-TREC IN WSS-VARI = 'BO' OR
              WSS-GLS-TREC IN WSS-VARI = 'CS' OR
              WSS-GLS-TREC IN WSS-VARI = 'TC'
               MOVE FRM-CPIM-AEY TO REC-IND-ADI2-ATR IN REC-FLD.
      *MHM-FIN 10-JUN-2003
           IF SCR-IND-ENG IN SCR-VEC-ENG(SCR-IPRO) = 'S'
      *ISP   27-JUL-1990 DEBE SER REEMPLAZADO POR VARIABLE
      *     INHIBE MOVE FRM-CPSF TO FRM-CPIM-AEY
               MOVE '1' TO FRM-CPIM-AEY
               MOVE FRM-CPIM-AEY TO REC-IND-VIGE-ATR IN REC-FLD
               MOVE FRM-CPIM-AEY TO REC-COD-AREC-ATR IN REC-FLD
      *MHM-INI 16-MAY-2003
               MOVE FRM-CPIM-AEY TO REC-COD-SARC-ATR IN REC-FLD
      *MHM-FIN 16-MAY-2003
               MOVE +1 TO REC-IND-VIGE-LEN IN REC-FLD
               MOVE -1 TO REC-FEC-FTER-LEN IN REC-FLD.
      *>>>>
*% END
*% IF SCR_GIKY_VAL_CON_IKY
      *<<<< SCR_GIKY_VAL_CON_IKY
           IF FRM-FFLD = FRM-FFLD-PF10 AND
              SCR-IND-ENG IN SCR-VEC-ENG(SCR-IPRO) = 'S'
               PERFORM ENG-CFP.
      *>>>>
*% END
*% IF PFS_SCR_ELI AND PGM_PU
      *<<<< PFS_SCR_ELI
      * CIMA-INI / VALIDACIONES MOD RELA ART 85 / JULIO 2014
           IF WSS-IND-NELI = WSS-CT-1
              GO TO FIN-SCR-ELI.
      * CIMA-FIN / VALIDACIONES MOD RELA ART 85 / JULIO 2014
      *>>>>
*% END
*% IF EOF_PQ
*% IF PGM_ARG
       CARGAR-TABLA SECTION.
       INI-CARGAR-TABLA.
           MOVE PGM-SOKS TO PGM-STAT-REC.
           PERFORM PUT-REC-REC.
       FIN-CARGAR-TABLA.
           EXIT.
       LIMPIAR-TABLA SECTION.
       INI-LIMPIAR-TABLA.
           PERFORM SCR-CLRA-REC.
           MOVE DBC-GLS-NOMC IN DBC TO CPT-STRN
           PERFORM CPT-BLKS
           MOVE CPT-STRN            TO FRM-GLS-NOMC IN REC-FLD
           MOVE DBC-NUM-ICLI IN DBC TO FRM-NUM-ICLI IN REC-FLD
           MOVE DBC-IND-ICLI IN DBC TO FRM-IND-ICLI IN REC-FLD
           MOVE DBC-GLS-ICLI IN DBC TO FRM-GLS-ICLI IN REC-FLD
           MOVE DBC-VRF-ICLI IN DBC TO FRM-VRF-ICLI IN REC-FLD.
       FIN-LIMPIAR-TABLA.
           EXIT.
       INIT-VARI SECTION.
       INI-INIT-VARI.
       FIN-INIT-VARI.
           EXIT.
       PROCESO-CADA-HIJO SECTION.
       INI-PROCESO-CADA-HIJO.
       FIN-PROCESO-CADA-HIJO.
           EXIT.
*% END
*% END
*% IF EOF
      *<<<< EOF
       CPT-NOMC SECTION.
       INI-CPT-NOMC.
           MOVE DBC-GLS-NOMC IN DBC TO CPT-STRN.
           PERFORM CPT-BLKS.
       FIN-CPT-NOMC.
           EXIT.

       DET-ENG-FAC SECTION.
       INI-DET-ENG-FAC.
       FIN-DET-ENG-FAC.
           EXIT.

       DET-IDX-ENG SECTION.
       INI-DET-IDX-ENG.
           IF SCR-IND-ING = 'EDP'
               MOVE WSS-IDX-IFAC TO SCR-IPRO
           ELSE
               MOVE WSS-IDX-IFAC TO SCR-IPRO.
       FIN-DET-IDX-ENG.
           EXIT.

       HBL-KEY-REC SECTION.
       INI-HBL-KEY-REC.
           MOVE SCR-INST-GKY TO SCR-INST.
           PERFORM SCR-CLRA-REC.
      *ISP   27-JUL-1990 DEBE SER REEMPLAZADO POR VARIABLE
      *     INHIBE MOVE FRM-CPSF TO FRM-CPIM-AEY
           MOVE '1' TO FRM-CPIM-AEY.
           MOVE FRM-CPIM-AEY TO FRM-NUM-ICLI-ATR IN REC-FLD.
           MOVE FRM-CPIM-AEY TO FRM-VRF-ICLI-ATR IN REC-FLD.
           MOVE FRM-CPIM-AEY TO FRM-IND-ICLI-ATR IN REC-FLD.
           MOVE FRM-CPIM-AEY TO FRM-GLS-ICLI-ATR IN REC-FLD.
           MOVE FRM-CPIM-AEY TO REC-COD-TREC-ATR IN REC-FLD.
           MOVE FRM-CPIM-AEY TO REC-NUM-TREC-ATR IN REC-FLD.
           MOVE +8           TO FRM-NUM-ICLI-LEN IN REC-FLD.
           MOVE -1           TO FRM-NUM-IREL-LEN IN REC-FLD.
           MOVE SCR-CAI-ICIC TO REC-CAI-ICLI IN REC-FLD.
           MOVE SCR-IIC-ICIC TO REC-IIC-ICLI IN REC-FLD.
           MOVE SCR-NUM-IEDP TO REC-NUM-TREC IN REC-FLD.
      * ISP SCR-DMSG LIMPIA TODO Y HACE STP-EXIT
           MOVE PGM-LIMPIAR-CAMPOS TO PGM-ICLR.
      * ISP    NO ES NECESARIO, PUES LO HACE SCR-CLRA-REC Y ASI NO LO
      *        BORRA EN INSTANCIA DE DIGITAR CAMPOS.
      *     MOVE SCR-COD-CLAP TO REC-COD-AREC IN REC-FLD.
      *     MOVE 'S'          TO REC-IND-VIGE IN REC-FLD.

      * BUSCA TABLA REC CON CIC = 'OP'
           MOVE 'SGC' TO TAB-COD-SIST.
           MOVE 'REC' TO TAB-CIC-TTAB IN TAB.
           MOVE 'OP'  TO TAB-CIC-CTAB IN TAB.
           MOVE 'TAB-CIC-TABL' TO FIO-AKEY.
           PERFORM BUS-TAB.
           MOVE TAB-COD-CTAB IN TAB TO REC-COD-TREC IN REC-FLD.
           MOVE TAB-GLS-DESC IN TAB TO FRM-GLS-TREC IN REC-FLD.

           IF SCR-IND-FST IN SCR-VEC-FST(SCR-IPRO) = 'S'
                  MOVE 'REGISTRO INGRESADO OK; INGRESE EL PROXIMO' TO
                  REC-GLS-MENS IN REC-FLD.
           MOVE SCR-CAI-ICIC TO DBC-CAI-ICLI IN DBC.
           MOVE SCR-IIC-ICIC TO DBC-IIC-ICLI IN DBC.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM GET-CLI.
           IF MSG-COD-MENS NOT = SPACES
               MOVE MSG-GLS-DESC TO FRM-MENS
           ELSE

               PERFORM CPT-NOMC
               MOVE CPT-STRN TO FRM-GLS-NOMC IN REC-FLD

               MOVE DBC-NUM-ICLI IN DBC TO FRM-NUM-ICLI IN REC-FLD
               MOVE DBC-VRF-ICLI IN DBC TO FRM-VRF-ICLI IN REC-FLD
               MOVE DBC-IND-ICLI IN DBC TO FRM-IND-ICLI IN REC-FLD
               MOVE DBC-GLS-ICLI IN DBC TO FRM-GLS-ICLI IN REC-FLD.
           IF SCR-IND-ING = 'EDP'
               MOVE SCR-COD-CLAP TO REC-COD-AREC IN REC-FLD.

           PERFORM EDT-KEY-REC.
           PERFORM EDT-FLD-REC.
           IF SCR-IND-FST IN SCR-VEC-FST(SCR-IPRO) = 'S'
               MOVE SPACES TO SCR-IND-FST IN SCR-VEC-FST(SCR-IPRO)
               PERFORM SCR-INIT
               PERFORM SCR-EXIT
           ELSE
               PERFORM SCR-PUTA.
       FIN-HBL-KEY-REC.
           EXIT.

       ENG-CFP SECTION.
       INI-ENG-CFP.
           MOVE SCR-CAI-ICIC TO EDP-CAI-IMDT IN EDP.
           MOVE SCR-IIC-ICIC TO EDP-IIC-IMDT IN EDP.
           IF SCR-IND-ING = 'FAC'
               MOVE 'F' TO EDP-IND-TINF IN EDP
           ELSE
               MOVE 'P' TO EDP-IND-TINF IN EDP.
           MOVE SCR-NUM-IEDP TO EDP-NUM-IEDP IN EDP.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM SGC-FIO-EDP.
           IF SCR-COD-AUX2 = 'F10'
               PERFORM ENG-NEW-FAC
           ELSE
               PERFORM ENG-NEW-APO.
       FIN-ENG-CFP.
           EXIT.

       ENG-NEW-FAC SECTION.
       INI-ENG-NEW-FAC.
       CIC-VRF-ENG.
           MOVE SCR-NUM-ICOR TO WSS-NUM-LIMI.
           IF SCR-NUM-ICOR > 55
               PERFORM EGR-FTER-CIC.
           IF SCR-IND-ING = 'EDP'
               IF EDP-IND-PODE IN EDP(SCR-NUM-ICOR) NOT > SPACES OR
                  EDP-IND-PODE IN EDP(SCR-NUM-ICOR) = 'N' OR
                  EDP-IND-PODE IN EDP(SCR-NUM-ICOR) = 'S'
                  ADD 1 TO SCR-NUM-ICOR
                  GO TO CIC-VRF-ENG.

           IF SCR-IND-ING = 'FAC'
               IF EDP-IND-PODE IN EDP(SCR-NUM-ICOR) NOT > SPACES OR
                  EDP-IND-PODE IN EDP(SCR-NUM-ICOR) = 'N'
                  ADD 1 TO SCR-NUM-ICOR
                  GO TO CIC-VRF-ENG.

           MOVE 'N' TO WSS-IND-IVEC.
           PERFORM VRF-VEC-EDP VARYING WSS-NUM-IVEC FROM 1 BY  1
                   UNTIL WSS-NUM-IVEC = WSS-NUM-LIMI.
           IF WSS-IND-IVEC = 'S'
               ADD 1 TO SCR-NUM-ICOR
               GO TO CIC-VRF-ENG.

           PERFORM CRG-IDX-ENG.
           PERFORM DET-IDX-ENG.
           MOVE EDP-IND-PODE IN EDP(SCR-NUM-ICOR) TO SCR-COD-APOD.
           MOVE 'S' TO SCR-IND-ENG IN SCR-VEC-ENG(WSS-IDX-ICFP).
           MOVE 'S' TO SCR-IND-FST IN SCR-VEC-FST(WSS-IDX-ICFP).
           PERFORM EGR-FPEN-CIC.
       FIN-ENG-NEW-FAC.
           EXIT.

       ENG-NEW-APO SECTION.
       INI-ENG-NEW-APO.
           PERFORM CRG-IDX-ENG.
           PERFORM DET-IDX-ENG.
           ADD 1 TO SCR-NUM-IGRP.
           MOVE 'S' TO SCR-IND-ENG IN SCR-VEC-ENG(WSS-IDX-ICFP).
           MOVE 'S' TO SCR-IND-FST IN SCR-VEC-FST(WSS-IDX-ICFP).
           PERFORM EGR-FPEN-CIC.
       FIN-ENG-NEW-APO.
           EXIT.

       VRF-VEC-EDP SECTION.
       INI-VRF-VEC-EDP.
           IF EDP-IND-PODE IN EDP(SCR-NUM-ICOR) =
              EDP-IND-PODE IN EDP(WSS-NUM-IVEC)
                MOVE 'S' TO WSS-IND-IVEC.
       FIN-VRF-VEC-EDP.
           EXIT.

       ING-FPEN-CIC SECTION.
       INI-ING-FPEN-CIC.
           PERFORM ING-SETE.
           MOVE 'SGC' TO MSG-COD-SIST.
           MOVE SCR-EXT-MENS TO MSG-COD-MENS.
           PERFORM GET-MSG.
           MOVE MSG-GLS-DESC TO REC-GLS-MENS IN REC-FLD.
           PERFORM HBL-IKY.
       FIN-ING-FPEN-CIC.
           EXIT.

       ING-SETE SECTION.
       INI-ING-SETE.
           PERFORM CRG-IDX-ENG.
           PERFORM CRG-TBL-ENG.
           MOVE WSS-NTRN(SCR-IPRO) TO SCR-NTRN.
           MOVE WSS-PROG(SCR-IPRO) TO SCR-PROG.
           MOVE WSS-NMAP(SCR-IPRO) TO SCR-NMAP.
           MOVE WSS-NLIB(SCR-IPRO) TO SCR-NLIB.

           MOVE WSS-NTRV(SCR-IPRO) TO SCR-NTRV.
           MOVE WSS-PROV(SCR-IPRO) TO SCR-PROV.
       FIN-ING-SETE.
           EXIT.

       EGR-FPEN-CIC SECTION.
       INI-EGR-FPEN-CIC.
           MOVE 'APO    INGOK' TO SCR-EXT-MENS.
           PERFORM CRG-IDX-ENG.
           PERFORM CRG-TBL-ENG.
           ADD 1 TO SCR-IPRO.
           IF SCR-IPRO > WSS-TOT-IIDX
                  PERFORM EGR-FTER-CIC
                  GO TO FIN-EGR-FPEN-CIC.
           IF SCR-IND-ENG IN SCR-VEC-ENG(SCR-IPRO) = SPACES
               GO TO INI-EGR-FPEN-CIC.
           MOVE WSS-INST-FPEN-CIC TO SCR-INST-EXT.
           MOVE WSS-PROG(SCR-IPRO) TO SYS-PROG.
           MOVE SCR-VARI TO SYS-CMMA.
           MOVE SCR-TCMA TO SYS-TCMA.
           MOVE SYS-XCTL TO SYS-CMND.
      *PTC-INI
           IF NOT SCR-OFRM-SRV
      *PTC-FIN
           PERFORM GNS-PRO-SYS.
       FIN-EGR-FPEN-CIC.
           EXIT.

       EGR-FTER-CIC SECTION.
       INI-EGR-FTER-CIC.
           IF SCR-IND-ING = 'FAC'
               MOVE 'FAC    INGPX' TO SCR-EXT-MENS
           ELSE
           IF SCR-IND-ING = 'EDP'
               MOVE 'EDP    INGPX' TO SCR-EXT-MENS
           ELSE
               MOVE 'ERR    INGPX' TO SCR-EXT-MENS.
           PERFORM CRG-IDX-ENG.
           PERFORM CRG-TBL-ENG.
           MOVE 1 TO SCR-IPRO.
           MOVE WSS-INST-FTER-CIC TO SCR-INST-EXT.
           MOVE WSS-PROG(SCR-IPRO) TO SYS-PROG.
           MOVE SCR-VARI TO SYS-CMMA.
           MOVE SCR-TCMA TO SYS-TCMA.
           MOVE SYS-XCTL TO SYS-CMND.
      *PTC-INI
           IF NOT SCR-OFRM-SRV
      *PTC-FIN
           PERFORM GNS-PRO-SYS.
       FIN-EGR-FTER-CIC.
           EXIT.

       EGR-FTER-CMN SECTION.
       INI-EGR-FTER-CMN.
       FIN-EGR-FTER-CMN.
           EXIT.

       SCR-INIT SECTION.
       INI-SCR-INIT.
           MOVE 3  TO FRM-PLIN.
           MOVE 19 TO FRM-NLIN.
           MOVE FRM-CLR-FRM TO FRM-CMND.
           PERFORM GNS-PRO-FRM.
           MOVE FRM-SINI-DBNF TO FRM-SINI.
           MOVE SCR-NMAP TO FRM-NAME.
           MOVE SCR-NLIB TO FRM-NLIB.
           MOVE REC-FLD TO FRM-DFLD.
           MOVE FRM-INI TO FRM-CMND.
           PERFORM GNS-PRO-FRM.
       FIN-SCR-INIT.
           EXIT.
       COPY SGCBGE2C.
      *>>>>
*% END
*%! FIN CODIGO ADICIONAL PARA ENGANCHE
*% END
*%! RVM: 30-03-92 VSI NO MANEJA PFS DEPENDIENTES DE DTC
*% IF PGM_DTC
*% TCA = 2250
*% RA1 = "DBC"
*% RA2 = "REC"
*% NRA = 2
*% FRM = "REC"
*% INCLUDE 'PFSALLALL'
*% END
*% IF WSS_DTC
      *<<<< WSS_DTC
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-DBC-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-EDP-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-DCP-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-DCE-REQA==.
      *>>>>
*% END
*% IF WSS
      *<<<< WSS
       COPY SGCBREDP.
       COPY SGCBRDBC.
       COPY SGCBRDCP.
       COPY SGCBRDCE.
       COPY GNSWGCPT.
       COPY GNSWGSTR.
       01  WSS-VARI.
           03 WSS-COD-CREC.
              05 WSS-COD-TREC                           PIC X(02).
      *MHM-INI 16-MAY-2003
      *        05 WSS-COD-AREC                           PIC X(10).
              05 WSS-COD-AREC.
                 07 WSS-COD-REC1                        PIC X(05).
                 07 WSS-COD-SARC                        PIC X(05).
      *MHM-FIN 16-MAY-2003
           03 WSS-ICOR                          VALUE 0 PIC 9(01).
              88 NO-ASIGNE-CORRELATIVO          VALUE 0.
           03 WSS-IKEY                                  PIC 9(02).
           03 WSS-FEC-FCNC.
              05 WSS-NUM-DCNC                           PIC 9(02).
              05 WSS-NUM-MCNC                           PIC 9(02).
              05 WSS-NUM-SCNC                           PIC 9(02).
              05 WSS-NUM-ACNC                           PIC 9(02).
           03 WSS-CIC-ICLI                              PIC X(12).
           03 WSS-CIC-TREC.
              05 WSS-GLS-TREC      VALUE SPACES         PIC X(02).
              05 WSS-GLS-FILL      VALUE SPACES         PIC X(10).
      *MHM-INI 28-MAY-2003
      *    03 FRM-POS-CURS         VALUE -1             PIC S9(04).
      *    03 FRM-IND-ERRO         VALUE -1             PIC S9(04).
      *    03 FRM-ERR-NUME         VALUE -9             PIC S9(04).
      *MHM-FIN 28-MAY-2003
*% IF PGM_PU
      *PVG INI 04-DIC-2008
           03 WSS-GLS-AVIG.
              05 WSS-IND-AVIG       VALUE 'S'           PIC X(01).
              05 WSS-IND-FIL1       VALUE SPACES        PIC X(01).
      *PVG FIN 04-DIC-2008
      *PVG INI 29-AGO-2013
           03  WSS-I                                    PIC 9(02).
           03  WSS-IMAX             VALUE 30            PIC 9(02).
           03  WSS-GLS-DATA.
               05  WSS-GLS-DAT1.
                   07  WSS-COD-DAT1     OCCURS 30       PIC X(02).
           03  WSS-FEC-FINI.
               05  WSS-NUM-SINI                         PIC 9(02).
               05  WSS-NUM-AINI                         PIC 9(02).
               05  WSS-NUM-MINI                         PIC 9(02).
               05  WSS-NUM-DINI                         PIC 9(02).
      *    03  WSS-FEC-FTER.
      *        05  WSS-NUM-STER                         PIC 9(02).
      *        05  WSS-NUM-ATER                         PIC 9(02).
      *        05  WSS-NUM-MTER                         PIC 9(02).
      *        05  WSS-NUM-DTER                         PIC 9(02).
      *PVG FIN 29-AGO-2013
      * CIMA-INI / VALIDACIONES MOD RELA ART 85 / JULIO 2014
           03  WSS-NUM-PPAR                             PIC 9(03).
           03  WSS-IND-NELI         VALUE ZEROES        PIC 9(01).
           03  WSS-CONSTANTES.
               05 WSS-CT-SGC     VALUE 'SGC'            PIC X(03).
               05 WSS-CT-REC     VALUE 'REC'            PIC X(03).
               05 WSS-CT-ELI     VALUE 'ELI'            PIC X(03).
               05 WSS-CT-VSN     VALUE 'VSN'            PIC X(03).
               05 WSS-CT-S       VALUE 'S'              PIC X(01).
               05 WSS-CT-P       VALUE 'P'              PIC X(01).
               05 WSS-CT-N       VALUE 'N'              PIC X(01).
               05 WSS-CT-1       VALUE 1                PIC 9(01).
               05 WSS-CT-MNEL    VALUE 'CODRELNOELI'    PIC X(11).
               05 WSS-CT-PPAR    VALUE 'PORCENPARTI'    PIC X(11).
               05 WSS-CT-VAPO    VALUE 'VALASO>PORCE'   PIC X(12).
      * CIMA-FIN / VALIDACIONES MOD RELA ART 85 / JULIO 2014
*% END
      *>>>>
*% END
*% IF INI_FIO AND PGM_VMS
      *<<<< INI_FIO AND PGM_VMS

           MOVE FIO-ACCS-UPD TO FIO-ACCS.
           MOVE FIO-ACC      TO FIO-CMND.
           MOVE 'TAB'        TO FIO-SIST.
           PERFORM GNS-FIO-TAB.
           MOVE FIO-INP TO FIO-CMND.
           PERFORM GNS-FIO-TAB.

           MOVE FIO-ACCS-UPD TO FIO-ACCS.
           MOVE FIO-ACC      TO FIO-CMND.
           MOVE 'SGC'        TO FIO-SIST.
           PERFORM SGC-FIO-DBC.
           MOVE FIO-UPD TO FIO-CMND.
           PERFORM SGC-FIO-DBC.

           MOVE FIO-ACCS-UPD TO FIO-ACCS.
           MOVE FIO-ACC      TO FIO-CMND.
           MOVE 'SGC'        TO FIO-SIST.
           PERFORM SGC-FIO-DCP.
           MOVE FIO-UPD TO FIO-CMND.
           PERFORM SGC-FIO-DCP.

           MOVE FIO-ACCS-UPD TO FIO-ACCS.
           MOVE FIO-ACC      TO FIO-CMND.
           MOVE 'SGC'        TO FIO-SIST.
           PERFORM SGC-FIO-DCE.
           MOVE FIO-UPD TO FIO-CMND.
           PERFORM SGC-FIO-DCE.
      *>>>>
*% END
*% IF INI_FND_KEY
      *>>>>
*%! RVM: 30-03-92 VSI NO MANEJA PFS DEPENDIENTES DE DTC
*% IF PGM_DTC
           IF NOT (FRM-FFLD = FRM-FFLD-PF8 OR
                   FRM-FFLD = FRM-FFLD-PF7 OR
                   FRM-FFLD = FRM-FFLD-PF6 OR
                   FRM-FFLD = FRM-FFLD-PF5 )
               IF SCR-CCPP = 'ING'
                   PERFORM BUS-COR-REC
               ELSE
                  IF REC-NUM-TREC IN REC-FLD NOT > ZEROES
                      PERFORM ANL-KEY-REC
                      IF NOT FIO-STAT-OKS
      *MHM-INI 09-DIC-2008 SE INHIBE PARA RESPETAR MARCA DE ERROR MCI
      *                   MOVE '00' TO FIO-STAT
      *MHM-FIN 09-DIC-2008
                          MOVE SCR-STAT-CON TO SCR-STAT
                          GO TO FIN-FND-KEY
                      ELSE
                          NEXT SENTENCE
                  ELSE
                      PERFORM BUS-RUT-CLI
                      IF NOT FIO-STAT-OKS
                          MOVE '00' TO FIO-STAT
                          MOVE SCR-STAT-CON TO SCR-STAT
                          GO TO FIN-FND-KEY.
*% END
      *>>>>
*% END
*% IF FND_KEY
      *<<<< FND_KEY
           MOVE FRM-GLS-NOMC IN REC-FLD TO DBC-GLS-NOMC IN DBC.
*% IF PGM_ARG
           MOVE REC-CIC-ICLI IN REC TO SCR-KEY-IDBC-RAIZ
*% END
*%! RVM: 30-03-92 VSI NO MANEJA PFS DEPENDIENTES DE DTC
*% IF PGM_DTC
           IF FRM-FFLD = FRM-FFLD-PF5 OR FRM-FFLD-PF6
               PERFORM LEE-NXT-PRV-REL
               IF MSG-COD-MENS = 'RECSI'
                   PERFORM SCR-CLRA-REC
                   GO TO CON-FND-KEY
               ELSE
                   MOVE SPACES TO PGM-STAT
                   IF FRM-FFLD = FRM-FFLD-PF5
                       MOVE 'SGC' TO MSG-COD-SIST
                       MOVE 'REC    NOPRV' TO MSG-COD-MENS
                       PERFORM GET-MSG
                       MOVE MSG-GLS-DESC TO FRM-MENS
                       MOVE '00' TO FIO-STAT
                       MOVE SCR-STAT-CON TO SCR-STAT
                       GO TO FIN-FND-KEY
                   ELSE
                       MOVE 'SGC' TO MSG-COD-SIST
                       MOVE 'REC    NONXT' TO MSG-COD-MENS
                       PERFORM GET-MSG
                       MOVE MSG-GLS-DESC TO FRM-MENS
                       MOVE '00' TO FIO-STAT
                       MOVE SCR-STAT-CON TO SCR-STAT
                       GO TO FIN-FND-KEY.

           IF FRM-FFLD = FRM-FFLD-PF7 OR FRM-FFLD-PF8
               PERFORM LEE-NXT-PRV
               IF FIO-STAT-OKS
                   PERFORM SCR-CLRA-REC
                   PERFORM BUS-REC
                   IF NOT FIO-STAT-OKS

                       PERFORM CPT-NOMC
                       MOVE CPT-STRN TO FRM-GLS-NOMC IN REC-FLD

                       MOVE DBC-NUM-ICLI IN DBC TO FRM-NUM-ICLI IN
                                                           REC-FLD
                       MOVE DBC-IND-ICLI IN DBC TO FRM-IND-ICLI IN
                                                           REC-FLD
                       MOVE DBC-GLS-ICLI IN DBC TO FRM-GLS-ICLI IN
                                                           REC-FLD
                       MOVE DBC-VRF-ICLI IN DBC TO FRM-VRF-ICLI IN
                                                           REC-FLD
                       MOVE 'SGC' TO MSG-COD-SIST
                       MOVE 'RECCLTENEX' TO MSG-COD-MENS
                       PERFORM GET-MSG
                       MOVE MSG-GLS-DESC TO FRM-MENS
                       MOVE '00' TO FIO-STAT
                       MOVE SCR-STAT-CON TO SCR-STAT
                       GO TO FIN-FND-KEY
                   ELSE
                       GO TO CON-FND-KEY
               ELSE
                   MOVE SPACES TO PGM-STAT
                   IF FRM-FFLD = FRM-FFLD-PF7
                       MOVE 'SGC' TO MSG-COD-SIST
                       MOVE 'DBC    NOPRV' TO MSG-COD-MENS
                       PERFORM GET-MSG
                       MOVE MSG-GLS-DESC TO FRM-MENS
                       MOVE '00' TO FIO-STAT
                       MOVE SCR-STAT-CON TO SCR-STAT
                       GO TO FIN-FND-KEY
                   ELSE
                       MOVE 'SGC' TO MSG-COD-SIST
                       MOVE 'DBC    NONXT' TO MSG-COD-MENS
                       PERFORM GET-MSG
                       MOVE MSG-GLS-DESC TO FRM-MENS
                       MOVE '00' TO FIO-STAT
                       MOVE SCR-STAT-CON TO SCR-STAT
                       GO TO FIN-FND-KEY.
*% END
      *>>>>
*% END
*% IF FIN_FND_KEY
      *<<<< FIN_FND_KEY
*% IF PGM_ARG
           MOVE REC-KEY-IREC IN REC TO SCR-KEY-IREC-ASCE
*% END
           IF SCR-CCPP = 'ACT' AND NOT FIO-STAT-OKS
               IF NO-ASIGNE-CORRELATIVO
                   MOVE FIO-STAT-NEX TO FIO-STAT
               ELSE
                   PERFORM BUS-NMB-CLI
                   MOVE '23' TO FIO-STAT.
           IF FRM-NUM-ICLI IN REC-FLD = FRM-NUM-IREL IN REC-FLD AND
              FRM-VRF-ICLI IN REC-FLD = FRM-VRF-IREL IN REC-FLD AND
              FRM-IND-ICLI IN REC-FLD = FRM-IND-IREL IN REC-FLD AND
              FRM-GLS-ICLI IN REC-FLD = FRM-GLS-IREL IN REC-FLD AND
              REC-COD-TREC IN REC-FLD NOT = REC-COD-MCLI        AND
              ( FRM-NUM-ICLI IN REC-FLD NOT = ZEROES OR
                FRM-IND-ICLI IN REC-FLD > SPACES OR
                FRM-GLS-ICLI IN REC-FLD > SPACES )
               MOVE 'SGC' TO MSG-COD-SIST
               MOVE 'NUMRUTC=RUTR' TO MSG-COD-MENS
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS
               MOVE '00' TO FIO-STAT
               MOVE SCR-STAT-CON TO SCR-STAT
               GO TO FIN-FND-KEY.
       CON-FND-KEY.
*% IF PGM_DOS OR PGM_MVS
           IF FIO-STAT-OKS
*%! RVM: 30-03-92 VSI NO MANEJA PFS DEPENDIENTES DE DTC
*% IF PGM_DTC
               MOVE ADR-REC-REQA        TO SCR-REC-REQA
*% END
               MOVE REC-STP-ITRN IN REC TO SCR-UMOD.
*% END
      *>>>>
*% END
*% IF CMN_MOD
      *<<<< CMN_MOD
*% IF PGM_DOS OR PGM_MVS
           IF REC-STP-ITRN IN REC NOT = SCR-UMOD
      *GET-MSG Busca mensaje en tabla
               MOVE 'GNS' TO MSG-COD-SIST
               MOVE 'UPD    SIMUL' TO MSG-COD-MENS
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS
               GO TO FIN-CMN-MOD.
*% END
      *>>>>
*% END
*% IF FIN_CMN_MOD
      *<<<< FIN_CMN_MOD
           IF NOT FIO-STAT-OKS
               GO TO FIN-CMN-MOD.
*% IF PGM_CHI OR PGM_ARG
      *ALD
           MOVE REC-CIC-ICLI IN REC TO DBC-CIC-ICLI IN DBC.
           MOVE FIO-GET-KEY-UPD TO FIO-CMND.
           PERFORM SGC-FIO-DBC.
           IF NOT FIO-STAT-OKS
               MOVE FIO-MENS TO FRM-MENS
               PERFORM BCK-OUT
               GO TO FIN-CMN-MOD.
           IF ( REC-COD-TREC IN REC = REC-COD-DCOM IN REC-VARI OR
                REC-COD-TREC IN REC = REC-COD-SOCD IN REC-VARI ) AND
                REC-FEC-FINI IN REC > DBC-FEC-FA85 IN DBC
                 MOVE REC-STP-ITRN IN REC TO DBC-STP-ITRN IN DBC
                 MOVE REC-FEC-FINI IN REC TO DBC-FEC-FA85 IN DBC
                 PERFORM RET-HDR-DBC
                 MOVE FIO-MOD TO FIO-CMND
                 PERFORM SGC-FIO-DBC
                 IF NOT FIO-STAT-OKS
                     MOVE FIO-MENS TO FRM-MENS
                     PERFORM BCK-OUT
                     GO TO FIN-CMN-MOD
                 ELSE
                     NEXT SENTENCE
           ELSE
              MOVE FIO-ULK-REC TO FIO-CMND
              PERFORM SGC-FIO-DBC.
      *
*% END
           MOVE 'SGC' TO FIO-SIST.
           MOVE 'REC' TO TAB-COD-TTAB IN TAB.
           MOVE REC-COD-TREC IN REC-FLD TO TAB-COD-CTAB IN TAB.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM GNS-FIO-TAB.
           IF NOT FIO-STAT-OKS
               MOVE '00' TO FIO-STAT
               GO TO FIN-CMN-MOD.
           MOVE TAB-GLS-DATA IN TAB     TO WSS-COD-TREC.
           IF WSS-COD-TREC NOT > SPACES
               GO TO FIN-CMN-MOD.
           MOVE REC-CAI-IREL IN REC-FLD TO REC-CAI-ICLI IN REC.
           MOVE REC-IIC-IREL IN REC-FLD TO REC-IIC-ICLI IN REC.
           MOVE REC-CAI-ICLI IN REC-FLD TO REC-CAI-IREL IN REC.
           MOVE REC-IIC-ICLI IN REC-FLD TO REC-IIC-IREL IN REC.
           MOVE WSS-COD-TREC            TO REC-COD-TREC IN REC.
           MOVE REC-NUM-TREC IN REC-FLD TO REC-NUM-TREC IN REC.
           MOVE FIO-GET-KEY-UPD TO FIO-CMND.
           PERFORM SGC-FIO-REC.
           IF NOT FIO-STAT-OKS
               MOVE FIO-PUT TO FIO-CMND
           ELSE
               MOVE FIO-MOD TO FIO-CMND.
           MOVE HOY-DHOY IN HOY-VARI TO REC-NUM-DTRN IN REC.
           MOVE HOY-MHOY IN HOY-VARI TO REC-NUM-MTRN IN REC.
           MOVE HOY-AHOY IN HOY-VARI TO REC-NUM-ATRN IN REC.
           MOVE HOY-SHOY IN HOY-VARI TO REC-NUM-STRN IN REC.
           MOVE HOY-HHOY IN HOY-VARI TO REC-HRA-HRTR IN REC.
           PERFORM RET-REC-REC.
           MOVE REC-CAI-IREL IN REC-FLD TO REC-CAI-ICLI IN REC.
           MOVE REC-IIC-IREL IN REC-FLD TO REC-IIC-ICLI IN REC.
           MOVE REC-CAI-ICLI IN REC-FLD TO REC-CAI-IREL IN REC.
           MOVE REC-IIC-ICLI IN REC-FLD TO REC-IIC-IREL IN REC.
           MOVE WSS-COD-TREC            TO REC-COD-TREC IN REC.
           MOVE REC-NUM-TREC IN REC-FLD TO REC-NUM-TREC IN REC.
           PERFORM RET-HDR-REC.
           PERFORM SGC-FIO-REC.
*% IF PGM_CHI OR PGM_ARG
      *ALD
           MOVE REC-CIC-ICLI IN REC TO DBC-CIC-ICLI IN DBC.
           MOVE FIO-GET-KEY-UPD TO FIO-CMND.
           PERFORM SGC-FIO-DBC.
           IF NOT FIO-STAT-OKS
               MOVE FIO-MENS TO FRM-MENS
               PERFORM BCK-OUT
               GO TO FIN-CMN-MOD.
           IF ( REC-COD-TREC IN REC = REC-COD-COMD IN REC-VARI OR
                REC-COD-TREC IN REC = REC-COD-PERA IN REC-VARI ) AND
                REC-FEC-FINI IN REC > DBC-FEC-FA85 IN DBC
                 MOVE REC-STP-ITRN IN REC TO DBC-STP-ITRN IN DBC
                 MOVE REC-FEC-FINI IN REC TO DBC-FEC-FA85 IN DBC
                 PERFORM RET-HDR-DBC
                 MOVE FIO-MOD TO FIO-CMND
                 PERFORM SGC-FIO-DBC
                 IF NOT FIO-STAT-OKS
                     MOVE FIO-MENS TO FRM-MENS
                     PERFORM BCK-OUT
                     GO TO FIN-CMN-MOD
                 ELSE
                     NEXT SENTENCE
           ELSE
              MOVE FIO-ULK-REC TO FIO-CMND
              PERFORM SGC-FIO-DBC.
      *
*% END
      *>>>>
*% END
*% IF INI_CMN_ING
      *<<<< INI_CMN_ING
           MOVE SPACES TO REC.
           MOVE ZEROES TO REC-NUM-TREC IN REC.
           MOVE ZEROES TO REC-STP-ITRN IN REC.
           MOVE ZEROES TO REC-FEC-FINI IN REC.
           MOVE ZEROES TO REC-FEC-FINP IN REC.
           MOVE ZEROES TO REC-FEC-FTER IN REC.
           MOVE ZEROES TO REC-FEC-FOUT IN REC.
           MOVE ZEROES TO REC-SGV-AREC IN REC.
           MOVE ZEROES TO REC-FEC-FVAL IN REC.
           MOVE ZEROES TO REC-FEC-FVRF IN REC.
           PERFORM RET-HDR-REC.
      *>>>>
*% END
*% IF PFS_SCR_ELI AND PGM_PU
      *<<<< PFS_SCR_ELI
      * CIMA-INI / VALIDACIONES MOD RELA ART 85 / JULIO 2014
       CON-SCR-ELI.
           IF WSS-IND-NELI = WSS-CT-1
              GO TO FIN-SCR-ELI.
      * CIMA-FIN / VALIDACIONES MOD RELA ART 85 / JULIO 2014
      *>>>>
*% END
*% IF INI_SCR_ELI AND PGM_PU
      *<<<< INI_SCR_ELI
      * CIMA-INI / VALIDACIONES MOD RELA ART 85 / JULIO 2014
           IF SCR-INST = SCR-INST-HKY
               PERFORM HBL-KEY
               MOVE SCR-INST-GKY TO SCR-INST
               PERFORM SCR-DMSG
           ELSE
           IF SCR-INST = SCR-INST-GCS
                PERFORM GET-ACC.
           IF SCR-CMND = WSS-CT-ELI
              PERFORM CHK-ELI
              IF WSS-IND-NELI = WSS-CT-1
                 MOVE WSS-CT-MNEL   TO MSG-COD-MENS
                 MOVE WSS-CT-SGC    TO MSG-COD-SIST
                 PERFORM GET-MSG
                 MOVE MSG-GLS-DESC TO FRM-MENS
                 PERFORM SCR-MSSG
                 MOVE SCR-STAT-ABT TO SCR-STAT.
           PERFORM DESSCRTRL.
           IF FRM-FFLD = FRM-FFLD-PF7 OR FRM-FFLD-PF8 OR
                         FRM-FFLD-PF5 OR FRM-FFLD-PF6
               PERFORM XCT-PRGP.
           GO TO CON-SCR-ELI.
      * CIMA-FIN / VALIDACIONES MOD RELA ART 85 / JULIO 2014
      *>>>>
*% END
*% IF CMN_ING OR CMN_MOD
      *<<<< CMN_ING OR CMN_MOD
           PERFORM GET-FHOY.
           MOVE HOY-DHOY IN HOY-VARI TO REC-NUM-DTRN IN REC.
           MOVE HOY-MHOY IN HOY-VARI TO REC-NUM-MTRN IN REC.
           MOVE HOY-AHOY IN HOY-VARI TO REC-NUM-ATRN IN REC.
           MOVE HOY-SHOY IN HOY-VARI TO REC-NUM-STRN IN REC.
           MOVE HOY-HHOY IN HOY-VARI TO REC-HRA-HRTR IN REC.
           PERFORM RET-HDR-REC.
      *>>>>
*% END
*% IF FIN_CMN_ING
      *<<<< FIN_CMN_ING
           IF NOT FIO-STAT-OKS
               GO TO FIN-CMN-ING.
*% IF PGM_CHI OR PGM_ARG
      *ALD
           MOVE REC-CIC-ICLI IN REC TO DBC-CIC-ICLI IN DBC.
           MOVE FIO-GET-KEY-UPD TO FIO-CMND.
           PERFORM SGC-FIO-DBC.
           IF NOT FIO-STAT-OKS
               MOVE FIO-MENS TO FRM-MENS
               PERFORM BCK-OUT
               GO TO FIN-CMN-ING.
           IF ( REC-COD-TREC IN REC = REC-COD-DCOM IN REC-VARI OR
                REC-COD-TREC IN REC = REC-COD-SOCD IN REC-VARI ) AND
                REC-FEC-FINI IN REC > DBC-FEC-FA85 IN DBC
                 MOVE REC-STP-ITRN IN REC TO DBC-STP-ITRN IN DBC
                 MOVE REC-FEC-FINI IN REC TO DBC-FEC-FA85 IN DBC
                 PERFORM RET-HDR-DBC
                 MOVE FIO-MOD TO FIO-CMND
                 PERFORM SGC-FIO-DBC
                 IF NOT FIO-STAT-OKS
                     MOVE FIO-MENS TO FRM-MENS
                     PERFORM BCK-OUT
                     GO TO FIN-CMN-ING
                 ELSE
                     NEXT SENTENCE
           ELSE
              MOVE FIO-ULK-REC TO FIO-CMND
              PERFORM SGC-FIO-DBC.
      *
*% END
           MOVE 'SGC' TO FIO-SIST.
           MOVE 'REC' TO TAB-COD-TTAB IN TAB.
           MOVE REC-COD-TREC IN REC-FLD TO TAB-COD-CTAB IN TAB.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM GNS-FIO-TAB.
           IF NOT FIO-STAT-OKS
               MOVE '00' TO FIO-STAT
               GO TO FIN-CMN-ING.
           MOVE TAB-GLS-DATA IN TAB     TO WSS-COD-TREC.
           IF WSS-COD-TREC NOT > SPACES
               GO TO FIN-CMN-ING.
           MOVE HOY-DHOY IN HOY-VARI TO REC-NUM-DTRN IN REC.
           MOVE HOY-MHOY IN HOY-VARI TO REC-NUM-MTRN IN REC.
           MOVE HOY-AHOY IN HOY-VARI TO REC-NUM-ATRN IN REC.
           MOVE HOY-SHOY IN HOY-VARI TO REC-NUM-STRN IN REC.
           MOVE HOY-HHOY IN HOY-VARI TO REC-HRA-HRTR IN REC.
           MOVE REC-CAI-IREL IN REC-FLD TO REC-CAI-ICLI IN REC.
           MOVE REC-IIC-IREL IN REC-FLD TO REC-IIC-ICLI IN REC.
           MOVE REC-CAI-ICLI IN REC-FLD TO REC-CAI-IREL IN REC.
           MOVE REC-IIC-ICLI IN REC-FLD TO REC-IIC-IREL IN REC.
           MOVE WSS-COD-TREC            TO REC-COD-TREC IN REC.
           MOVE REC-NUM-TREC IN REC-FLD TO REC-NUM-TREC IN REC.
           PERFORM RET-HDR-REC.
           MOVE FIO-PUT TO FIO-CMND.
           PERFORM SGC-FIO-REC.
*% IF PGM_CHI OR PGM_ARG
      *ALD
           MOVE REC-CIC-ICLI IN REC TO DBC-CIC-ICLI IN DBC.
           MOVE FIO-GET-KEY-UPD TO FIO-CMND.
           PERFORM SGC-FIO-DBC.
           IF NOT FIO-STAT-OKS
               MOVE FIO-MENS TO FRM-MENS
               PERFORM BCK-OUT
               GO TO FIN-CMN-ING.
           IF ( REC-COD-TREC IN REC = REC-COD-COMD IN REC-VARI OR
                REC-COD-TREC IN REC = REC-COD-PERA IN REC-VARI ) AND
                REC-FEC-FINI IN REC > DBC-FEC-FA85 IN DBC
                 MOVE REC-STP-ITRN IN REC TO DBC-STP-ITRN IN DBC
                 MOVE REC-FEC-FINI IN REC TO DBC-FEC-FA85 IN DBC
                 PERFORM RET-HDR-DBC
                 MOVE FIO-MOD TO FIO-CMND
                 PERFORM SGC-FIO-DBC
                 IF NOT FIO-STAT-OKS
                     MOVE FIO-MENS TO FRM-MENS
                     PERFORM BCK-OUT
                     GO TO FIN-CMN-ING
                 ELSE
                     NEXT SENTENCE
           ELSE
              MOVE FIO-ULK-REC TO FIO-CMND
              PERFORM SGC-FIO-DBC.
      *
*% END
      *>>>>
*% END
*% IF FIN_CMN_ING
      *<<<< FIN_CMN_ING
*% IF PGM_DOS OR PGM_MVS
      *ISP ENGANCHE
           IF FRM-FFLD = FRM-FFLD-PF10 AND
              SCR-IND-ENG IN SCR-VEC-ENG(SCR-IPRO) = 'S'
                PERFORM ENG-CFP.
*% END
      *>>>>
*% END
*% IF CMN_ELI
      *<<<< CMN_ELI
*% IF PGM_DOS OR PGM_MVS
           IF REC-STP-ITRN IN REC NOT = SCR-UMOD
      *GET-MSG Busca mensaje en tabla
               MOVE 'GNS' TO MSG-COD-SIST
               MOVE 'UPD    SIMUL' TO MSG-COD-MENS
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS
               GO TO FIN-CMN-ELI.
*% END
      *>>>>
*% END
*% IF FIN_CMN_ELI
      *<<<< FIN_CMN_ELI
           IF NOT FIO-STAT-OKS
               GO TO FIN-CMN-ELI.
           MOVE 'SGC' TO FIO-SIST.
           MOVE 'REC' TO TAB-COD-TTAB IN TAB.
           MOVE REC-COD-TREC IN REC-FLD TO TAB-COD-CTAB IN TAB.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM GNS-FIO-TAB.
           IF NOT FIO-STAT-OKS
               MOVE '00' TO FIO-STAT
               GO TO FIN-CMN-ELI.
           MOVE TAB-GLS-DATA IN TAB     TO WSS-COD-TREC.
           IF WSS-COD-TREC NOT > SPACES
               GO TO FIN-CMN-ELI.
           MOVE REC-CAI-IREL IN REC-FLD TO REC-CAI-ICLI IN REC.
           MOVE REC-IIC-IREL IN REC-FLD TO REC-IIC-ICLI IN REC.
           MOVE REC-CAI-ICLI IN REC-FLD TO REC-CAI-IREL IN REC.
           MOVE REC-IIC-ICLI IN REC-FLD TO REC-IIC-IREL IN REC.
           MOVE WSS-COD-TREC            TO REC-COD-TREC IN REC.
           MOVE REC-NUM-TREC IN REC-FLD TO REC-NUM-TREC IN REC.
           MOVE FIO-GET-KEY-UPD TO FIO-CMND.
           PERFORM SGC-FIO-REC.
           IF NOT FIO-STAT-OKS
               MOVE '00' TO FIO-STAT
           ELSE
               MOVE FIO-DEL TO FIO-CMND
               PERFORM SGC-FIO-REC.
      *>>>>
*% END
*% IF EOF
      *<<<< EOF
*%! RVM: 30-03-92 VSI NO MANEJA PFS DEPENDIENTES DE DTC
*% IF PGM_DTC
       LEE-NXT-PRV-REL SECTION.
       INI-LEE-NXT-PRV-REL.
           MOVE SPACES TO MSG-COD-MENS.
           IF SCR-REC-REQA > SPACES
               PERFORM LEE-NXT-PRV-REC
           ELSE
               MOVE 'RECNO' TO MSG-COD-MENS.
       FIN-LEE-NXT-PRV-REL.
           EXIT.

       LEE-NXT-PRV SECTION.
       INI-LEE-NXT-PRV.
           MOVE SPACES TO MSG-COD-MENS.
           IF SCR-DBC-REQA > SPACES
               PERFORM LEE-NXT-PRV-DBC
           ELSE
               PERFORM LEE-NXT-PRV-NOM.
       FIN-LEE-NXT-PRV.
           EXIT.

       LEE-NXT-PRV-DBC SECTION.
       INI-LEE-NXT-PRV-DBC.
           MOVE SCR-DBC-REQA TO ADR-DBC-REQA.
           MOVE FIO-KDEF-S TO FIO-KDEF.
           IF FRM-FFLD = FRM-FFLD-PF7
               MOVE FIO-GET-PRV TO FIO-CMND
           ELSE
               MOVE FIO-GET-NXT TO FIO-CMND.
           MOVE 'DBC-GLS-NOMC' TO FIO-AKEY.
           PERFORM SGC-FIO-DBC.
           IF FIO-STAT-OKS
               MOVE ADR-DBC-REQA TO SCR-DBC-REQA.
       FIN-LEE-NXT-PRV-DBC.
           EXIT.

       LEE-NXT-PRV-NOM SECTION.
       INI-LEE-NXT-PRV-NOM.
           IF DBC-GLS-NOMC IN DBC > SPACES
               MOVE FIO-GET-KEY    TO FIO-CMND
               MOVE 'DBC-GLS-NOMC' TO FIO-AKEY
               PERFORM SGC-FIO-DBC
               IF FIO-STAT-OKS
                   IF FRM-FFLD = FRM-FFLD-PF7
                       MOVE FIO-GET-PRV TO FIO-CMND
                   ELSE
                       MOVE FIO-GET-NXT TO FIO-CMND
               ELSE
                   IF FRM-FFLD = FRM-FFLD-PF7
                       MOVE FIO-GET-LEQ TO FIO-CMND
                   ELSE
                       MOVE FIO-GET-NLS TO FIO-CMND
           ELSE
               IF FRM-FFLD = FRM-FFLD-PF7
                   MOVE FIO-GET-LEQ TO FIO-CMND
               ELSE
                   MOVE FIO-GET-NLS TO FIO-CMND.
           MOVE 'DBC-GLS-NOMC' TO FIO-AKEY.
           PERFORM SGC-FIO-DBC.
           IF FIO-STAT-OKS
               MOVE ADR-DBC-REQA TO SCR-DBC-REQA.
       FIN-LEE-NXT-PRV-NOM.
           EXIT.

       LEE-NXT-PRV-REC SECTION.
       INI-LEE-NXT-PRV-REC.
           MOVE SCR-REC-REQA TO ADR-REC-REQA.
           MOVE ADR-VKEY IN ADR-REC-REQA TO WSS-CIC-ICLI IN WSS-VARI.
           MOVE FIO-KDEF-S TO FIO-KDEF.
           IF FRM-FFLD = FRM-FFLD-PF5
               MOVE FIO-GET-PRV TO FIO-CMND
           ELSE
               MOVE FIO-GET-NXT TO FIO-CMND.
           PERFORM SGC-FIO-REC.
           IF FIO-STAT-OKS AND
              REC-CIC-ICLI IN REC = WSS-CIC-ICLI IN WSS-VARI
               MOVE '00' TO PGM-STAT-REC
               MOVE ADR-REC-REQA TO SCR-REC-REQA
               MOVE 'RECSI' TO MSG-COD-MENS
               GO TO FIN-LEE-NXT-PRV-REC.
           MOVE 'RECNO' TO MSG-COD-MENS.
       FIN-LEE-NXT-PRV-REC.
           EXIT.
*% END

       BUS-REC SECTION.
       INI-BUS-REC.
           MOVE SPACES TO REC-KEY-IREC IN REC.
           MOVE DBC-CAI-ICLI IN DBC TO REC-CAI-ICLI IN REC.
           MOVE DBC-IIC-ICLI IN DBC TO REC-IIC-ICLI IN REC.
           MOVE FIO-GET-NLS    TO FIO-CMND.
           PERFORM SGC-FIO-REC.
           IF FIO-STAT-OKS AND
              REC-CIC-ICLI IN REC = DBC-CIC-ICLI IN DBC
               MOVE '00' TO PGM-STAT-REC
*%! RVM: 30-03-92 VSI NO MANEJA PFS DEPENDIENTES DE DTC
*% IF PGM_DTC
               MOVE ADR-REC-REQA TO SCR-REC-REQA
*% END
               GO TO FIN-BUS-REC.
           MOVE FIO-STAT-NEX TO FIO-STAT.
*%! RVM: 30-03-92 VSI NO MANEJA PFS DEPENDIENTES DE DTC
*% IF PGM_DTC
           MOVE SPACES TO SCR-REC-REQA.
*% END
       FIN-BUS-REC.
           EXIT.

       BUS-NMB-CLI SECTION.
       INI-BUS-NMB-CLI.
      *BUS-CLI busca cliente
           MOVE REC-CAI-ICLI IN REC-FLD TO DBC-CAI-ICLI IN DBC.
           MOVE REC-IIC-ICLI IN REC-FLD TO DBC-IIC-ICLI IN DBC.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM SGC-FIO-DBC.
           IF NOT FIO-STAT-OKS
               MOVE 'SGC'        TO MSG-COD-SIST
               MOVE 'CLI    NEX' TO MSG-COD-MENS
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC IN MSG TO FRM-GLS-NOMC IN REC-FLD
           ELSE
*%! RVM: 30-03-92 VSI NO MANEJA PFS DEPENDIENTES DE DTC
*% IF PGM_DTC
               MOVE ADR-DBC-REQA TO SCR-DBC-REQA
*% END
               PERFORM CPT-NOMC
               MOVE CPT-STRN TO FRM-GLS-NOMC IN REC-FLD

      *        MOVE DBC-GLS-NOMC IN DBC TO FRM-GLS-NOMC IN REC-FLD
               MOVE DBC-NUM-ICLI IN DBC TO FRM-NUM-ICLI IN REC-FLD
               MOVE DBC-IND-ICLI IN DBC TO FRM-IND-ICLI IN REC-FLD
               MOVE DBC-GLS-ICLI IN DBC TO FRM-GLS-ICLI IN REC-FLD
*% IF PGM_ARG
               MOVE DBC-VRF-ICLI IN DBC TO FRM-VRF-ICLI IN REC-FLD
               MOVE DBC-MSC-SCLI IN DBC TO FRM-MSC-SCLT IN REC-FLD.
*% ELSE
               MOVE DBC-VRF-ICLI IN DBC TO FRM-VRF-ICLI IN REC-FLD.
*% END
      *BUS-CLI busca cliente
           MOVE REC-CAI-IREL IN REC-FLD TO DBC-CAI-ICLI IN DBC.
           MOVE REC-IIC-IREL IN REC-FLD TO DBC-IIC-ICLI IN DBC.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM SGC-FIO-DBC.
           IF NOT FIO-STAT-OKS
               MOVE 'SGC'        TO MSG-COD-SIST
               MOVE 'CLI    NEX' TO MSG-COD-MENS
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC IN MSG TO FRM-GLS-NOMR IN REC-FLD
           ELSE

               PERFORM CPT-NOMC
               MOVE CPT-STRN TO FRM-GLS-NOMR IN REC-FLD

               MOVE DBC-NUM-ICLI IN DBC TO FRM-NUM-IREL IN REC-FLD
               MOVE DBC-IND-ICLI IN DBC TO FRM-IND-IREL IN REC-FLD
               MOVE DBC-GLS-ICLI IN DBC TO FRM-GLS-IREL IN REC-FLD
*% IF PGM_ARG
               MOVE DBC-VRF-ICLI IN DBC TO FRM-VRF-IREL IN REC-FLD
               MOVE DBC-MSC-SCLI IN DBC TO FRM-MSC-SREL IN REC-FLD.
*% ELSE
               MOVE DBC-VRF-ICLI IN DBC TO FRM-VRF-IREL IN REC-FLD.
*% END
       FIN-BUS-NMB-CLI.
           EXIT.
       ANL-KEY-REC SECTION.
       INI-ANL-KEY-REC.
           PERFORM BUS-RUT-CLI.
           IF NOT FIO-STAT-OKS
               GO TO FIN-ANL-KEY-REC.
           PERFORM KEY-ALL-REC.
           IF FRM-NUM-IREL IN REC-FLD NOT = ZEROES
               MOVE 3 TO WSS-IKEY IN WSS-VARI
           ELSE
           IF REC-COD-TREC IN REC-FLD > SPACES
               MOVE 2 TO WSS-IKEY IN WSS-VARI
           ELSE
               MOVE 1 TO WSS-IKEY IN WSS-VARI.
           MOVE FIO-GET-NLS TO FIO-CMND.
           PERFORM SGC-FIO-REC.
           IF WSS-IKEY IN WSS-VARI = 3
               IF FIO-STAT-OKS AND
                  REC-CAI-ICLI IN REC-FLD = REC-CAI-ICLI IN REC AND
                  REC-IIC-ICLI IN REC-FLD = REC-IIC-ICLI IN REC AND
                  REC-CAI-IREL IN REC-FLD = REC-CAI-IREL IN REC AND
                  REC-IIC-IREL IN REC-FLD = REC-IIC-IREL IN REC AND
                  REC-COD-TREC IN REC-FLD = REC-COD-TREC IN REC
                   PERFORM BUS-COR-REC
                   MOVE '00' TO FIO-STAT
               ELSE
                   MOVE 1 TO REC-NUM-TREC IN REC-FLD
                   MOVE 1 TO WSS-ICOR
                   MOVE '00' TO FIO-STAT
           ELSE
           IF WSS-IKEY IN WSS-VARI = 2
               IF FIO-STAT-OKS AND
                  REC-CAI-ICLI IN REC-FLD = REC-CAI-ICLI IN REC AND
                  REC-IIC-ICLI IN REC-FLD = REC-IIC-ICLI IN REC AND
                  REC-COD-TREC IN REC-FLD = REC-COD-TREC IN REC
                   MOVE REC-CAI-IREL IN REC TO REC-CAI-IREL IN REC-FLD
                   MOVE REC-IIC-IREL IN REC TO REC-IIC-IREL IN REC-FLD
                   PERFORM BUS-COR-REC
                   MOVE '00' TO FIO-STAT
               ELSE
                   MOVE 'SGC' TO MSG-COD-SIST
                   MOVE 'RECTRECNEX' TO MSG-COD-MENS
                   PERFORM GET-MSG
                   MOVE MSG-GLS-DESC TO FRM-MENS
                   MOVE FIO-STAT-NEX TO FIO-STAT
           ELSE
               IF FIO-STAT-OKS AND
                  REC-CAI-ICLI IN REC-FLD = REC-CAI-ICLI IN REC AND
                  REC-IIC-ICLI IN REC-FLD = REC-IIC-ICLI IN REC
                   MOVE REC-CAI-IREL IN REC TO REC-CAI-IREL IN REC-FLD
                   MOVE REC-IIC-IREL IN REC TO REC-IIC-IREL IN REC-FLD
                   MOVE REC-COD-TREC IN REC TO REC-COD-TREC IN REC-FLD
                   PERFORM BUS-COR-REC
                   MOVE '00' TO FIO-STAT
               ELSE
                   MOVE 'SGC' TO MSG-COD-SIST
                   MOVE 'RECCLTENEX' TO MSG-COD-MENS
                   PERFORM GET-MSG
                   MOVE MSG-GLS-DESC TO FRM-MENS
                   MOVE FIO-STAT-NEX TO FIO-STAT.
       FIN-ANL-KEY-REC.
           EXIT.
       BUS-RUT-CLI SECTION.
       INI-BUS-RUT-CLI.
           IF FRM-GLS-NOMC IN REC-FLD > SPACES AND
              FRM-NUM-ICLI IN REC-FLD = ZEROES
      *NOM-CLI Busca Cliente por medio del Nombre

               MOVE FRM-GLS-NOMC IN REC-FLD TO STR-GLS-GSTR
               PERFORM STR-UNS
               MOVE STR-GLS-FUNS IN STR-VARI(1) TO DBC-GLS-APAT IN DBC
               MOVE STR-GLS-FUNS IN STR-VARI(2) TO DBC-GLS-AMAT IN DBC
               MOVE STR-GLS-FUNS IN STR-VARI(3) TO DBC-GLS-NOMB IN DBC

               MOVE 'DBC-GLS-NOMC'  TO FIO-AKEY
               MOVE FIO-GET-NLS-ALT TO FIO-CMND
               PERFORM SGC-FIO-DBC
               IF FIO-STAT-OKS
*%! RVM: 30-03-92 VSI NO MANEJA PFS DEPENDIENTES DE DTC
*% IF PGM_DTC
                   MOVE ADR-DBC-REQA TO SCR-DBC-REQA
*% END
                   PERFORM CPT-NOMC
                   MOVE CPT-STRN TO FRM-GLS-NOMC IN REC-FLD

                   MOVE DBC-NUM-ICLI IN DBC TO FRM-NUM-ICLI IN REC-FLD
                   MOVE DBC-IND-ICLI IN DBC TO FRM-IND-ICLI IN REC-FLD
                   MOVE DBC-GLS-ICLI IN DBC TO FRM-GLS-ICLI IN REC-FLD
                   MOVE DBC-VRF-ICLI IN DBC TO FRM-VRF-ICLI IN REC-FLD
                   MOVE DBC-CAI-ICLI IN DBC TO REC-CAI-ICLI IN REC-FLD
                   MOVE DBC-IIC-ICLI IN DBC TO REC-IIC-ICLI IN REC-FLD
               ELSE
                   MOVE 'SGC' TO MSG-COD-SIST
                   MOVE 'RECRUTCNEX' TO MSG-COD-MENS
                   PERFORM GET-MSG
                   MOVE MSG-GLS-DESC TO FRM-MENS
                   MOVE FIO-STAT-NEX TO FIO-STAT
                   GO TO FIN-BUS-RUT-CLI.
           IF FRM-GLS-NOMR IN REC-FLD > SPACES AND
              FRM-NUM-IREL IN REC-FLD = ZEROES
      *NOM-CLI Busca Cliente por medio del Nombre

               MOVE FRM-GLS-NOMR IN REC-FLD TO STR-GLS-GSTR
               PERFORM STR-UNS
               MOVE STR-GLS-FUNS IN STR-VARI(1) TO DBC-GLS-APAT IN DBC
               MOVE STR-GLS-FUNS IN STR-VARI(2) TO DBC-GLS-AMAT IN DBC
               MOVE STR-GLS-FUNS IN STR-VARI(3) TO DBC-GLS-NOMB IN DBC

               MOVE 'DBC-GLS-NOMC' TO FIO-AKEY
               MOVE FIO-GET-NLS-ALT TO FIO-CMND
               PERFORM SGC-FIO-DBC
               IF FIO-STAT-OKS

                   PERFORM CPT-NOMC
                   MOVE CPT-STRN TO FRM-GLS-NOMR IN REC-FLD

                   MOVE DBC-NUM-ICLI IN DBC TO FRM-NUM-IREL IN REC-FLD
                   MOVE DBC-IND-ICLI IN DBC TO FRM-IND-IREL IN REC-FLD
                   MOVE DBC-GLS-ICLI IN DBC TO FRM-GLS-IREL IN REC-FLD
                   MOVE DBC-VRF-ICLI IN DBC TO FRM-VRF-IREL IN REC-FLD
                   MOVE DBC-CAI-ICLI IN DBC TO REC-CAI-IREL IN REC-FLD
                   MOVE DBC-IIC-ICLI IN DBC TO REC-IIC-IREL IN REC-FLD
               ELSE
                   MOVE 'SGC' TO MSG-COD-SIST
                   MOVE 'RECRUTRNEX' TO MSG-COD-MENS
                   PERFORM GET-MSG
                   MOVE MSG-GLS-DESC TO FRM-MENS
                   MOVE FIO-STAT-NEX TO FIO-STAT
                   GO TO FIN-BUS-RUT-CLI.
       FIN-BUS-RUT-CLI.
           EXIT.

       BUS-COR-REC SECTION.
       INI-BUS-COR-REC.
*% IF PGM_DOS OR PGM_MVS
           IF SCR-IND-ENG IN SCR-VEC-ENG(SCR-IPRO) = 'S'
               GO TO FIN-BUS-COR-REC.
*% END
           PERFORM OBT-NEMO
           IF SCR-NEMO = TAB-COD-CTAB IN TAB AND
              SCR-CCPP = 'ING'
               GO TO FIN-BUS-COR-REC.
           MOVE 0 TO REC-NUM-TREC IN REC-FLD.
           MOVE REC-CAI-ICLI IN REC-FLD TO REC-CAI-ICLI IN REC.
           MOVE REC-IIC-ICLI IN REC-FLD TO REC-IIC-ICLI IN REC.
           MOVE REC-CAI-IREL IN REC-FLD TO REC-CAI-IREL IN REC.
           MOVE REC-IIC-IREL IN REC-FLD TO REC-IIC-IREL IN REC.
           MOVE REC-COD-TREC IN REC-FLD TO REC-COD-TREC IN REC.
           MOVE 0                       TO REC-NUM-TREC IN REC.
           MOVE FIO-GET-NLS TO FIO-CMND.
        LUP-BUS-COR-REC.
           PERFORM SGC-FIO-REC.
           IF FIO-STAT-OKS
               IF REC-CAI-ICLI IN REC-FLD = REC-CAI-ICLI IN REC AND
                  REC-IIC-ICLI IN REC-FLD = REC-IIC-ICLI IN REC AND
                  REC-CAI-IREL IN REC-FLD = REC-CAI-IREL IN REC AND
                  REC-IIC-IREL IN REC-FLD = REC-IIC-IREL IN REC AND
                  REC-COD-TREC IN REC-FLD = REC-COD-TREC IN REC
                   MOVE REC-NUM-TREC IN REC TO REC-NUM-TREC IN REC-FLD
                  MOVE FIO-GET-NXT TO FIO-CMND
                   GO TO LUP-BUS-COR-REC.
           IF SCR-CCPP = 'ING' OR 'ACT'
               ADD 1 TO REC-NUM-TREC IN REC-FLD.
           MOVE 1 TO WSS-ICOR.
       FIN-BUS-COR-REC.
           EXIT.

       BCK-OUT SECTION.
       INI-BCK-OUT.
           MOVE FIO-BCK-OUT TO FIO-CMND.
           PERFORM SGC-FIO-DBC.
           IF FIO-STAT-OKS
      *        Para informar que el backout se realizo con exito
               MOVE '49' TO FIO-STAT.
       FIN-BCK-OUT.
           EXIT.

       OBT-NEMO SECTION.
       INI-OBT-NEMO.
           MOVE 'SGC' TO FIO-SIST.
           MOVE 'PRM' TO TAB-CIC-TTAB.
           MOVE 'SGCACTAPO' TO TAB-CIC-CTAB.
           MOVE FIO-GET-KEY TO FIO-CMND.
           MOVE 'TAB-CIC-TABL' TO FIO-AKEY.
           PERFORM GNS-FIO-TAB.
           IF NOT FIO-STAT-OKS
               MOVE 'SGCACTAPO' TO TAB-COD-CTAB IN TAB.
       FIN-OBT-NEMO.
           EXIT.

       COPY SGCBFEDP.
       COPY SGCBFDBC.
       COPY SGCBFDCP.
       COPY SGCBFDCE.
       COPY GNSBGSTR.
       COPY GNSBGCPT.
       COPY SGCBGCLI.
       COPY GNSBBMSC.
      *>>>>
*% END
*% IF EOF AND ( PGM_PU OR PGM_VMS)
      *<<<< EOF AND ( PGM_PU OR PGM_VMS)
       RET-HDR-DBC SECTION.
       INI-RET-HDR-DBC.
           PERFORM GET-FHOY.
      *    Fecha Transaccion
           MOVE HOY-FHOY TO DBC-FEC-FTRN IN DBC.
      *    Hora Transaccion
           MOVE HOY-HHOY TO DBC-HRA-HRTR IN DBC.
*% IF PGM_DOS OR PGM_MVS
      *    Codigo Origen transaccion
           MOVE SCR-OTRN TO DBC-COD-OTRN IN DBC.
      *    Autor Transaccion
           MOVE SCR-USER TO DBC-COD-ATRN IN DBC.
*% END
           IF SCR-CCPP = 'ING'
               MOVE 'I' TO DBC-MSC-TACC IN DBC
               MOVE 'I' TO DBC-MSC-STAT IN DBC
           ELSE
           IF SCR-CCPP = 'MOD'
               MOVE 'M' TO DBC-MSC-TACC IN DBC
               MOVE 'M' TO DBC-MSC-STAT IN DBC.
       FIN-RET-HDR-DBC.
           EXIT.

       RET-HDR-REC SECTION.
       INI-RET-HDR-REC.
           PERFORM GET-FHOY.
      *    Fecha Transaccion
           MOVE HOY-FHOY TO REC-FEC-FTRN IN REC.
      *    Hora Transaccion
           MOVE HOY-HHOY TO REC-HRA-HRTR IN REC.
*% IF PGM_DOS OR PGM_MVS
      *    Codigo Origen transaccion
           MOVE SCR-OTRN TO REC-COD-OTRN IN REC.
      *    Autor Transaccion
           MOVE SCR-USER TO REC-COD-ATRN IN REC.
*% END
           IF SCR-CCPP = 'ING'
               MOVE 'I' TO REC-MSC-TACC IN REC
               MOVE 'I' TO REC-MSC-STAT IN REC
           ELSE
           IF SCR-CCPP = 'MOD'
               MOVE 'M' TO REC-MSC-TACC IN REC
               MOVE 'M' TO REC-MSC-STAT IN REC.
       FIN-RET-HDR-REC.
           EXIT.
      * CIMA-INI / VALIDACIONES MOD RELA ART 85 / JULIO 2014
       CHK-ELI SECTION.
       INI-CHK-ELI.
           MOVE ZEROES                  TO WSS-IND-NELI.
           MOVE SPACES                  TO TAB.
           MOVE WSS-CT-SGC              TO TAB-COD-SIST.
           MOVE WSS-CT-REC              TO TAB-COD-TTAB IN TAB.
           MOVE REC-COD-TREC IN REC-FLD TO TAB-COD-CTAB IN TAB.
           PERFORM BUS-TAB.
           IF TAB-IND-VIGE IN TAB = WSS-CT-S AND
              MSG-COD-MENS NOT > SPACES
              IF TAB-GLS-DATA IN TAB(53:1) = WSS-CT-S
                 MOVE WSS-CT-1    TO WSS-IND-NELI.

           IF TAB-GLS-DATA IN TAB(1:2) NOT > SPACES
              GO TO FIN-CHK-ELI.
           MOVE SPACES                   TO TAB.
           MOVE WSS-CT-SGC               TO TAB-COD-SIST.
           MOVE WSS-CT-REC               TO TAB-COD-TTAB IN TAB.
           MOVE TAB-GLS-DATA IN TAB(1:2) TO TAB-COD-CTAB IN TAB.
           PERFORM BUS-TAB.
           IF TAB-IND-VIGE IN TAB = WSS-CT-S AND
              MSG-COD-MENS NOT > SPACES
              IF TAB-GLS-DATA IN TAB(53:1) = WSS-CT-S
                 MOVE WSS-CT-1   TO WSS-IND-NELI.

       FIN-CHK-ELI.
           EXIT.
      * CIMA-FIN / VALIDACIONES MOD RELA ART 85 / JULIO 2014
      *>>>>
*% END
