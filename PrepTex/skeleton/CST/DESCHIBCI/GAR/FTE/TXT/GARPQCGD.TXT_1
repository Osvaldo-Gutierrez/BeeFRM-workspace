*% NO_TIENE_TIMESTAMP = TRUE
*%! CODIGO ADICIONAL PARA ARCHIVO
*% NO_HDR_CST = TRUE
*% FMT_CHI = TRUE
*% GEN_BCI = TRUE
*% LARGO_MI_COMMAREA = 242
*% FRM = 'CGD'
*%! IF NOT PGM_MCP
*% PGM_PTC = TRUE
*%! END
*% IF NOT PGM_CLB AND NOT PGM_MEX
*% !     INCLUDE 'GARSRC:PFSALLF56.SRC'
*% END
*% PAD = 'DBC'
*% HIJ = 'GDD'
*%!  NO HAY REGISTROS DE PANTALLA QUE NO SE LIMPIAN
*% NREG = 0
*% SISPAD = 'SGC'
*% SISREG = 'GAR'
*% REG = 'DBC'
*% LENKEYHIJ = '12'
*% UNI_HIJ_ALF = TRUE
*% IMAX = '4 '
*% LEE_PAD = TRUE
*%!   NO_IBUS ==> PARA BUSCAR MENSAJE DEL SISTEMA SGC EN ERRFNDKEY.SRC
*% NO_IBUS = FALSE
*% FIO_STA_OKS = TRUE
*% ACUMULA = TRUE
*% IF FIN_SCR_VARI
      *<<<< FIN_SCR_VARI
*%!  Inicializa variables genericas segun parametros del llamado
           03 CMA-VARI.
              05  CMA-POS-ACT            COMP         PIC S9(04).
              05  CMA-INI.
                  07 DBC-KEY-IDBC-INI                 PIC X(12).
                  07 GDD-KEY-AGDD-INI                 PIC X(12).

              05  CMA-FIN.
                  07 DBC-KEY-IDBC                     PIC X(12).
                  07 GDD-KEY-AGDD-FIN                 PIC X(12).
              05  CMA-1VEZ                            PIC X(01).
*% IF PGM_VMS
              05  CMA-ACT.
                  07 DBC-KEY-IDBC-ACT                 PIC X(12).
                  07 GDD-KEY-AGDD-ACT                 PIC X(12).
*% END
      *>>>>
              05  WSS-COD-SOPE                        PIC 9(01).
              05  WSS-COD-PESO                        PIC X(06).
              05  WSS-SGV-VCTS        COMP-3          PIC S9(11).
              05  WSS-SGV-LTSN        COMP-3          PIC S9(11).
              05  WSS-SGV-VPND        COMP-3          PIC S9(11).
              05  WSS-REA-CML         COMP-3          PIC S9(11).
              05  WSS-REA-LIQ         COMP-3          PIC S9(11).
              05  WSS-REA-PON         COMP-3          PIC S9(11).
              05  WSS-NRE-CML         COMP-3          PIC S9(11).
              05  WSS-NRE-LIQ         COMP-3          PIC S9(11).
              05  WSS-NRE-PON         COMP-3          PIC S9(11).
              05  WSS-GEN-CML         COMP-3          PIC S9(11).
              05  WSS-GEN-LIQ         COMP-3          PIC S9(11).
              05  WSS-GEN-PON         COMP-3          PIC S9(11).
              05  WSS-ESP-CML         COMP-3          PIC S9(11).
              05  WSS-ESP-LIQ         COMP-3          PIC S9(11).
              05  WSS-ESP-PON         COMP-3          PIC S9(11).
              05  CNE-DBC-CAI-ICLI                    PIC X(04).
              05  CNE-DBC-IIC-ICLI                    PIC X(08).
      *>>>>
*% END
*% IF WSS
      *<<<< WSS
*% IF GEN_BCI
      *<<<< GEN_BCI
      *PTC-INI-MAN
       COPY GARWXCGD.
      *PTC-FIN-MAN
      *>>>>
*% END
*% IF PGM_MEX
       COPY SGCWGICB.
*% END
       COPY GARBRGDG.
       COPY GARBRGDO.
       COPY GARBRGES.
       COPY GARBRGSE.
       COPY GARBRGVT.
       COPY GARBRTAG.
       COPY COLBRDLC.
       COPY COLBRICG.
       COPY COLBROPC.
       COPY COLBRRDC.
       COPY SGCBRDBC.
*% IF NOT PGM_BFA
      *<<<< NOT PGM_BFA
       COPY DEUBRFIA.
      *>>>>
*% END
       COPY TABBRCAM.
       COPY TABWRCAM.
       COPY GNSWGCPT.
       COPY GNSWGSTR.
       COPY GNSWGPES.
*% IF PGM_DTC
      *<<<< PGM_DTC
       COPY GNSWGFEC.
       COPY GNSWGHOY.
      *>>>>
*% END
      
      * Define 01  wss-vari de pgm1anidx
       01  WSS-VARI.
           03  WSS-IMAX               VALUE 4         PIC 9(02).
           03  WSS-IMAX-MTX           VALUE 10        PIC 9(02).

           03  GDD-KEY-IGDD.
               05 DBC-KEY-IDBC                        PIC X(12).
               05 GDD-KEY-AGDD                        PIC X(12).
      * PARA USAR GARSRC:ERRFNDKEY.SRC
           03  WSS-IBUS                               PIC 9(01).
           03  WSS-IBUS-GDD                           PIC 9(01).
      *>>>>
           03 WSS-DLC-RDC                             PIC X(01).
           03 WSS-IND-RDC                             PIC 9(01).
           03 WSS-VAL-DIFE         VALUE ZEROES       PIC S9(11).

*% IF FMT_CHI
      *<<<< FMT_CHI
           03 WSS-COD-CGTA.
               05 WSS-TIP-CGTA                        PIC X(03).
               05 WSS-STP-CGTA                        PIC X(03).
      *>>>>
*% END      
      *MHM-INI 27-OCT-2003
           03 WSS-GLS-CGTA.
              05 WSS-GLS-TOPE                   PIC X(40).
              05 WSS-GLS-SOPE                   PIC X(40).
      *MHM-FIN 27-OCT-2003
              05 WSS-GO-TO-FIN-GDD   VALUE SPACES     PIC X(01).
       COPY GARWGEXV.
           03 PGM-STAT-ADI.
              05  PGM-STAT-GDD           VALUE '23'   PIC X(02).
                  88 PGM-STAT-GDD-OKS    VALUE '00'.
                  88 PGM-STAT-GDD-NUL    VALUE '  '.
              05  PGM-STAT-GES.
                  88 PGM-STAT-GES-NUL    VALUE '  '.
                  07 PGM-STT1-GES        VALUE '2'    PIC X(01).
                     88 PGM-STAT-GES-OKS VALUE '0'.
                  07 PGM-STT2-GES        VALUE '3'    PIC X(01).
           03 WSS-COD-LGTA               VALUE SPACE  PIC X(01).
           03 WSS-COD-REAL               VALUE SPACE  PIC X(01).
           03 WSS-COD-PREL.
              05 WSS-COD-PREL-1 PIC X(01).
              05 WSS-COD-PREL-2 PIC X(01).

*% IF GEN_BCI
      *<<<< GEN_BCI
           03 WSS-CIC-TOPE    VALUE SPACES      PIC X(03).
           03 WSS-IND-HIPT    VALUE SPACES      PIC X(01).
           03 WSS-IND-ENFE    VALUE SPACES      PIC X(01).
      *    INDICADOR DE EXCEPCION NORMATIVA DE TASACION UNO
           03 WSS-IND-ENT1    VALUE SPACES      PIC X(01).
      *    INDICADOR DE EXCEPCION NORMATIVA DE TASACION DOS
           03 WSS-IND-ENT2    VALUE SPACES      PIC X(01).
      *    INDICADOR DE EXCEPCION NORMATIVA DE TASACION TRES
           03 WSS-IND-ENT3    VALUE SPACES      PIC X(01).
      *    INDICADOR DE EXCEPCION NORMATIVA DE SEGUROS UNO
           03 WSS-IND-ENS1    VALUE SPACES      PIC X(01).
      *    INDICADOR DE EXCEPCION NORMATIVA DE SEGUROS DOS
           03 WSS-IND-ENS2    VALUE SPACES      PIC X(01).
           03 WSS-VAL-SCRE    VALUE ZEROES      PIC 9(13)V9(04).
           03 WSS-FEC-FTSN.
              05 WSS-NUM-STSN                   PIC 9(02).
              05 WSS-NUM-ATSN                   PIC 9(02).
              05 WSS-NUM-MTSN                   PIC 9(02).
              05 WSS-NUM-DTSN                   PIC 9(02).
           03 WSS-FEC-FTRA.
              05 WSS-NUM-STRA                   PIC 9(02).
              05 WSS-NUM-ATRA                   PIC 9(02).
              05 WSS-NUM-MTRA                   PIC 9(02).
              05 WSS-NUM-DTRA                   PIC 9(02).
           03 WSS-COD-ESTG    VALUE SPACES      PIC X(01).
           03 WSS-IND-TASV       VALUE 'N'      PIC X(01).
           03 WSS-IND-SEGV       VALUE 'N'      PIC X(01).
           03 WSS-IND-NRTA    VALUE SPACES      PIC X(01).
           03 WSS-IND-NRNS    VALUE SPACES      PIC X(01).
           03 WSS-IND-LLNT    VALUE SPACES      PIC X(01).

       COPY LDCBRCLF.
       COPY LDCBRLDC.
       COPY LDCBRARG.
       COPY LDCBRRDC REPLACING RDC BY RDL.
       COPY DAPBROPD.
      *>>>>
*% END
      
       COPY GARWGVCR.
       COPY COLWGINT.
       COPY GARWGDAP.
      *>>>>
*% END
*% IF WSS_DTC
      *<<<< WSS_DTC
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-GDG-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-GDO-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-GES-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-GSE-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-GVT-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-TAG-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-DBC-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-FIA-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-CAM-REQA==.
*% IF GEN_BCI
      *<<<< GEN_BCI
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-CLF-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-DLC-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-ICG-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-LDC-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-ARG-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-RDL-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-OPC-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-OPD-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-RDC-REQA==.
      *>>>>
*% END
      *>>>>
*% END
*% IF INI_FIO AND PGM_VMS
      *<<<< INI_FIO
      
           MOVE FIO-ACCS-UPD TO FIO-ACCS.
           MOVE FIO-ACC      TO FIO-CMND.
           MOVE 'TAB'        TO FIO-SIST.
           PERFORM GNS-FIO-TAB.
           MOVE FIO-INP TO FIO-CMND.
           PERFORM GNS-FIO-TAB.
      
           MOVE FIO-ACCS-UPD TO FIO-ACCS.
           MOVE FIO-ACC      TO FIO-CMND.
           MOVE 'TAB'        TO FIO-SIST.
           PERFORM TAB-FIO-CAM.
           MOVE FIO-INP TO FIO-CMND.
           PERFORM TAB-FIO-CAM.
      
           MOVE FIO-ACCS-UPD TO FIO-ACCS.
           MOVE FIO-ACC      TO FIO-CMND.
           MOVE 'GAR'        TO FIO-SIST.
           PERFORM GAR-FIO-TAG.
           MOVE FIO-INP TO FIO-CMND.
           PERFORM GAR-FIO-TAG.
      
           MOVE FIO-ACCS-UPD TO FIO-ACCS.
           MOVE FIO-ACC      TO FIO-CMND.
           MOVE 'GAR'        TO FIO-SIST.
           PERFORM GAR-FIO-GDG.
           MOVE FIO-INP TO FIO-CMND.
           PERFORM GAR-FIO-GDG.
      
           MOVE FIO-ACCS-UPD TO FIO-ACCS.
           MOVE FIO-ACC      TO FIO-CMND.
           MOVE 'GAR'        TO FIO-SIST.
           PERFORM GAR-FIO-GES.
           MOVE FIO-INP TO FIO-CMND.
           PERFORM GAR-FIO-GES.
      
           MOVE FIO-ACCS-UPD TO FIO-ACCS.
           MOVE FIO-ACC      TO FIO-CMND.
           MOVE 'GAR'        TO FIO-SIST.
           PERFORM GAR-FIO-GSE.
           MOVE FIO-INP TO FIO-CMND.
           PERFORM GAR-FIO-GSE.
      
           MOVE FIO-ACCS-UPD TO FIO-ACCS.
           MOVE FIO-ACC      TO FIO-CMND.
           MOVE 'GAR'        TO FIO-SIST.
           PERFORM GAR-FIO-GVT.
           MOVE FIO-INP TO FIO-CMND.
           PERFORM GAR-FIO-GVT.
      
           MOVE FIO-ACCS-UPD TO FIO-ACCS.
           MOVE FIO-ACC      TO FIO-CMND.
           MOVE 'SGC'        TO FIO-SIST.
           PERFORM SGC-FIO-DBC.
           MOVE FIO-INP TO FIO-CMND.
           PERFORM SGC-FIO-DBC.
      
           MOVE FIO-ACCS-UPD TO FIO-ACCS.
           MOVE FIO-ACC      TO FIO-CMND.
           MOVE 'DEU'        TO FIO-SIST.
           PERFORM DEU-FIO-FIA.
           MOVE FIO-INP TO FIO-CMND.
           PERFORM DEU-FIO-FIA.
      
           MOVE FIO-ACCS-UPD TO FIO-ACCS.
           MOVE FIO-ACC      TO FIO-CMND.
           MOVE 'SGC'        TO FIO-SIST.
           PERFORM SGC-FIO-TAB.
           MOVE FIO-INP TO FIO-CMND.
           PERFORM SGC-FIO-TAB.
      
           MOVE FIO-ACCS-INP TO FIO-ACCS.
           MOVE FIO-ACC      TO FIO-CMND.
           MOVE 'GAR'        TO FIO-SIST.
           PERFORM GAR-FIO-GDO.
           MOVE FIO-INP TO FIO-CMND.
           PERFORM GAR-FIO-GDO.
      
      *>>>> INI_FIO
*% END
*% IF INI_FIO
      *<<<< INI_FIO
      *PTC-INI-MAN
           MOVE TSK-TERM-ALF TO WSX-COD-TERM.
      *PTC-FIN-MAN
      * Obtiene Codigo Valor de Cambio de Pesos Mediante CIC de la Moned
           MOVE 'TAB'          TO FIO-SIST.
           MOVE 'VLR'          TO TAB-CIC-TTAB IN TAB.
           MOVE '0999  '       TO TAB-CIC-CTAB IN TAB.
           MOVE 'TAB-CIC-TABL' TO FIO-AKEY.
           MOVE FIO-GET-KEY    TO FIO-CMND.
           PERFORM GNS-FIO-TAB.
           IF NOT FIO-STAT-OKS
               MOVE 'TAB'          TO MSG-COD-SIST
               MOVE 'CIC0999  NEX' TO MSG-COD-MENS
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS
               PERFORM PRG-ABT
           ELSE
           MOVE TAB-COD-CTAB IN TAB TO WSS-COD-PESO IN CMA-VARI.
*% IF PGM_VMS
      *<<<< PGM_VMS
           MOVE WSS-COD-PESO IN CMA-VARI TO VCR-COD-PESO IN VCR-VARI.
      *>>>>
*% END
      * Obtiene cic de codigo garantia especifica
           MOVE 'GAR'          TO FIO-SIST.
           MOVE 'LIM'          TO TAB-CIC-TTAB IN TAB.
           MOVE 'E'            TO TAB-CIC-CTAB IN TAB.
           MOVE 'TAB-CIC-TABL' TO FIO-AKEY.
           MOVE FIO-GET-KEY    TO FIO-CMND.
           PERFORM GNS-FIO-TAB.
           IF NOT FIO-STAT-OKS
               MOVE 'GAR'          TO MSG-COD-SIST
               MOVE 'CICESP  NEX'  TO MSG-COD-MENS
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS
               PERFORM PRG-ABT.
           MOVE TAB-COD-CTAB IN TAB TO WSS-COD-LGTA IN WSS-VARI.
      
      * Obtiene cic de garantia real
           MOVE 'GAR'          TO FIO-SIST.
           MOVE 'RAL'          TO TAB-CIC-TTAB IN TAB.
           MOVE 'R'            TO TAB-CIC-CTAB IN TAB.
           MOVE 'TAB-CIC-TABL' TO FIO-AKEY.
           MOVE FIO-GET-KEY    TO FIO-CMND.
           PERFORM GNS-FIO-TAB.
           IF NOT FIO-STAT-OKS
               MOVE 'GAR'          TO MSG-COD-SIST
               MOVE 'CICRAL  NEX'  TO MSG-COD-MENS
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS
               PERFORM PRG-ABT.

           MOVE TAB-COD-CTAB IN TAB TO WSS-COD-REAL IN WSS-VARI.
      
      *>>>>
*% END
*% IF INI_FND_KEY
      *<<<< INI_FND_KEY
           PERFORM GET-FHOY.
      
      *<<<< EVP-INI INIFNDKEY
      * CMA-POS-ACT Contiene la posicion alcanzada al llenar la pantalla
           MOVE ZEROES TO CMA-POS-ACT.
      
      * Asume mensaje del sistema del hijo en errfndkey.src
           MOVE 1 TO WSS-IBUS, WSS-IBUS-GDD.
           IF FRM-FFLD = FRM-FFLD-PF5
               MOVE CMA-INI TO GDD-KEY-IGDD IN GDD
               MOVE 'N' TO CMA-1VEZ
               MOVE FIO-GET-LEQ TO FIO-CMND
               PERFORM GAR-FIO-GDD
               IF NOT FIO-STAT-OKS OR
                  GDD-CIC-DCLI IN GDD NOT = DBC-KEY-IDBC IN CMA-VARI
                   MOVE 'GDD    NEX' TO MSG-COD-MENS
                   GO TO ERR-FND-KEY
               ELSE
                   MOVE FIO-GET-PRV TO FIO-CMND
                   GO TO LEE-GDD
           ELSE
           IF FRM-FFLD = FRM-FFLD-PF6
               MOVE 'N' TO CMA-1VEZ
               MOVE CMA-FIN TO GDD-KEY-IGDD IN GDD
               MOVE FIO-GET-NLS TO FIO-CMND
               PERFORM GAR-FIO-GDD
               IF NOT FIO-STAT-OKS OR
                  GDD-CIC-DCLI IN GDD NOT = DBC-KEY-IDBC IN CMA-VARI
                   MOVE 'GDD    NEX' TO MSG-COD-MENS
                   GO TO ERR-FND-KEY
               ELSE
                   MOVE FIO-GET-NXT TO FIO-CMND
                   GO TO LEE-GDD.

      * Inicializa llaves inicial y final de pantalla
           MOVE SPACES TO CMA-INI, CMA-FIN.
           MOVE 'S' TO CMA-1VEZ.
           MOVE FRM-FFLD-PF6 TO FRM-FFLD.

*% IF FMT_CHI
      *<<<< FMT_CHI
           IF FRM-TIP-CGTA IN CGD-FLD NOT > SPACES
               MOVE SPACES TO FRM-TIP-CGTA IN CGD-FLD.

           IF FRM-STP-CGTA IN CGD-FLD NOT > SPACES
               MOVE SPACES TO FRM-STP-CGTA IN CGD-FLD.
      *>>>>
*% ELSE
           IF FRM-COD-CGTA IN CGD-FLD NOT > SPACES
               MOVE SPACES TO FRM-COD-CGTA IN CGD-FLD.
*% END

      * Limpia acumuladores
              MOVE ZEROES TO WSS-REA-CML, WSS-REA-LIQ, WSS-REA-PON.
              MOVE ZEROES TO WSS-NRE-CML, WSS-NRE-LIQ, WSS-NRE-PON.
              MOVE ZEROES TO WSS-GEN-CML, WSS-GEN-LIQ, WSS-GEN-PON.
              MOVE ZEROES TO WSS-ESP-CML, WSS-ESP-LIQ, WSS-ESP-PON.
      
           GO TO LEE-PAD-DBC.
      *>>>> EVP-INI INIFNDKEY
*% END
*% IF FIN_FND_KEY
      *<<<< FIN_FND_KEY
      *<<<< EVP-INI FINFNDKEY
      
       LEE-PAD-DBC.
           MOVE SPACES TO MSG-COD-MENS.
*% IF NOT FMT_CHI
           IF DBC-IDC-ICLI IN CGD-FLD = 'M'
               MOVE ZEROES TO DBC-IDC-ICLI IN CGD-FLD
*% ELSE
           IF DBC-IND-ICLI IN CGD-FLD = 'M'
               MOVE ZEROES TO DBC-NUM-ICLI IN CGD-FLD
               MOVE SPACES TO DBC-VRF-ICLI IN CGD-FLD
               MOVE SPACES TO DBC-GLS-ICLI IN CGD-FLD
*% END
               MOVE 'GAR'        TO MSG-COD-SIST
               MOVE 'NO MUL DEU' TO MSG-COD-MENS
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS
               GO TO FIN-BUS-CLI-KEY.
      
      *    busca el padre por alguna de las llaves (la digitada)
*% IF NOT FMT_CHI
           IF DBC-IDC-ICLI IN CGD-FLD NOT = ZEROES
               MOVE DBC-IDC-ICLI IN CGD-FLD TO DBC-IDC-ICLI IN DBC
*% ELSE
           IF DBC-NUM-ICLI IN CGD-FLD NOT = ZEROES
               MOVE DBC-NUM-ICLI IN CGD-FLD TO DBC-NUM-ICLI IN DBC
               MOVE DBC-IND-ICLI IN CGD-FLD TO DBC-IND-ICLI IN DBC
               MOVE DBC-GLS-ICLI IN CGD-FLD TO DBC-GLS-ICLI IN DBC
*% END
               MOVE 'DBC-IDC-ICLI' TO FIO-AKEY
               MOVE FIO-GET-KEY    TO FIO-CMND
               PERFORM GET-CLI
               IF MSG-COD-MENS = SPACES
                   MOVE DBC-GLS-NOMC IN DBC TO CPT-STRN
                   PERFORM CPT-BLKS
                   MOVE CPT-STRN TO DBC-GLS-NOMC IN CGD-FLD
                   MOVE DBC-CAI-ICLI IN DBC TO
                        CNE-DBC-CAI-ICLI
                   MOVE DBC-IIC-ICLI IN DBC TO
                        CNE-DBC-IIC-ICLI
                   MOVE '00' TO PGM-STAT-DBC
                   GO TO FIN-BUS-CLI-KEY.
      
           IF DBC-GLS-NOMC IN CGD-FLD > SPACES
      *NOM-CLI Busca Cliente por medio del Nombre
               MOVE DBC-GLS-NOMC IN CGD-FLD TO DBC-GLS-NOMC IN DBC
*% IF PGM_CLB OR PGM_MEX

*% ELSE
               MOVE STR-GLS-FUNS IN STR-VARI(3) TO
                    DBC-GLS-NOMB IN DBC
*% END
               MOVE 'DBC-GLS-NOMC' TO FIO-AKEY
               MOVE FIO-GET-NLS    TO FIO-CMND
               PERFORM GET-CLI
               IF MSG-COD-MENS = SPACES
*% IF NOT FMT_CHI
                   MOVE DBC-IDC-ICLI IN DBC TO
                        DBC-IDC-ICLI IN CGD-FLD
*% ELSE
                   MOVE DBC-NUM-ICLI IN DBC TO
                        DBC-NUM-ICLI IN CGD-FLD
                   MOVE DBC-VRF-ICLI IN DBC TO
                        DBC-VRF-ICLI IN CGD-FLD
                   MOVE DBC-IND-ICLI IN DBC TO
                        DBC-IND-ICLI IN CGD-FLD
                   MOVE DBC-GLS-ICLI IN DBC TO
                        DBC-GLS-ICLI IN CGD-FLD
*% END

                   MOVE DBC-GLS-NOMC IN DBC TO CPT-STRN
                   PERFORM CPT-BLKS
                   MOVE CPT-STRN TO DBC-GLS-NOMC IN CGD-FLD
                   MOVE DBC-CAI-ICLI IN DBC TO
                        CNE-DBC-CAI-ICLI
                   MOVE DBC-IIC-ICLI IN DBC TO
                        CNE-DBC-IIC-ICLI
                   MOVE '00' TO PGM-STAT-DBC
                   GO TO FIN-BUS-CLI-KEY.
      
       FIN-BUS-CLI-KEY.
            IF MSG-COD-MENS > SPACES
                MOVE 0 TO WSS-IBUS, WSS-IBUS-GDD
                GO TO ERR-FND-KEY.
      
      * Busca fianza, esto no es generico
           MOVE DBC-CIC-ICLI IN DBC TO FIA-CIC-ICLI IN FIA.
           MOVE SPACES              TO FIA-CIC-ICFS IN FIA.
           MOVE 'FIA-GLS-ICYF' TO FIO-AKEY.
           MOVE FIO-GET-NLS TO FIO-CMND.
           PERFORM DEU-FIO-FIA.
           IF NOT ( FIO-STAT-OKS AND
                    FIA-CIC-ICLI IN FIA = DBC-CIC-ICLI IN DBC )
               GO TO FIN-BUS-FIA.
      
       LUP-BUS-FIA.
           IF FIA-MSC-STAT IN FIA NOT = 'S'
               GO TO NXT-BUS-FIA.
      
           IF FIA-FEC-FALZ IN FIA > ZEROES AND
              FRM-GLS-EFIA IN CGD-FLD NOT > SPACES
               MOVE 'FIANZA ALZADA' TO FRM-GLS-EFIA IN CGD-FLD
               GO TO NXT-BUS-FIA.
      
           IF FIA-FEC-FVEN IN FIA > HOY-FHOY OR
              FIA-FEC-FVEN IN FIA NOT > ZEROES
               MOVE 'EXISTE FIANZA' TO FRM-GLS-EFIA IN CGD-FLD
               GO TO FIN-BUS-FIA.
      
           MOVE 'FIANZA VENCIDA' TO FRM-GLS-EFIA IN CGD-FLD.
      
      *Lee la siguiente fianza
       NXT-BUS-FIA.
           MOVE 'FIA-GLS-ICYF' TO FIO-AKEY.
           MOVE FIO-GET-NXT TO FIO-CMND.
           PERFORM DEU-FIO-FIA.
           IF FIO-STAT-OKS AND
              FIA-CIC-ICLI IN FIA = DBC-CIC-ICLI IN DBC
               IF FIA-FEC-FALZ IN FIA > ZEROES
                   GO TO NXT-BUS-FIA
               ELSE
                   GO TO LUP-BUS-FIA.
       FIN-BUS-FIA.
      
           MOVE '00' TO FIO-STAT.
      
           IF NOT FIO-STAT-OKS
               MOVE 'DBC    NEX' TO MSG-COD-MENS
               GO TO ERR-FND-KEY.
      
      
           MOVE DBC-KEY-IDBC IN DBC TO DBC-KEY-IDBC
                                        IN CMA-VARI.
           MOVE DBC-KEY-IDBC IN DBC TO DBC-KEY-IDBC-INI
                                        IN CMA-VARI.
      
           MOVE DBC-KEY-IDBC IN DBC TO DBC-KEY-IDBC IN WSS-VARI.
           MOVE LOW-VALUES            TO GDD-KEY-AGDD
                                        IN GDD-KEY-IGDD IN WSS-VARI.
           MOVE GDD-KEY-IGDD IN WSS-VARI TO GDD-KEY-IGDD IN GDD.
           MOVE FIO-GET-NLS TO FIO-CMND.

      *PTC-INI-MAN

           IF SCR-OFRM-SRV
                MOVE WSX-NOM-TSCGD TO QUE-COLA
                MOVE QUE-GET TO QUE-CMND
                MOVE WSX-LEN-TSCGD TO QUE-LITM
                MOVE 1 TO QUE-NITM
                PERFORM GNS-PRO-QUE
                IF QUE-STAT = QUE-STAT-OKS
                    MOVE 'S' TO WSX-LEE-SGTE-GDD
                    MOVE QUE-ITEM TO WSX-TAB-CGD-INP
                    MOVE WSX-INP-KEY-GTIA TO GDD-CIC-GTIA IN GDD
                    MOVE QUE-DEL TO QUE-CMND
                    PERFORM GNS-PRO-QUE.
               
      *PTC-FIN-MAN

       LEE-GDD.
           PERFORM GAR-FIO-GDD.

      *PTC-INI-MAN

               IF FIO-STAT-OKS AND
                  WSX-LEE-SGTE-GDD = 'S'
                   MOVE FIO-GET-NXT TO FIO-CMND
                   PERFORM GAR-FIO-GDD.

      *PTC-FIN-MAN

           IF ( NOT FIO-STAT-OKS OR
                GDD-CIC-DCLI IN GDD NOT = DBC-KEY-IDBC IN CMA-VARI )
              AND CMA-1VEZ = 'S'
               MOVE 'GDD    NEX' TO MSG-COD-MENS
               GO TO ERR-FND-KEY
           ELSE
           IF FRM-FFLD = FRM-FFLD-PF5 AND
              ( NOT FIO-STAT-OKS OR
                GDD-CIC-DCLI IN GDD NOT = DBC-KEY-IDBC IN CMA-VARI )
               MOVE 'GDD    NOPRV' TO MSG-COD-MENS
               GO TO ERR-FND-KEY
           ELSE
           IF FRM-FFLD = FRM-FFLD-PF6 AND
              ( NOT FIO-STAT-OKS OR
                GDD-CIC-DCLI IN GDD NOT = DBC-KEY-IDBC IN CMA-VARI )
               MOVE 'GDD    NONXT' TO MSG-COD-MENS
               GO TO ERR-FND-KEY.
       CARGA-GDD.
      *----------------------------------------------------*
      *    Inicializa posicion del indice del grupo de ocurrencias
           IF FRM-FFLD = FRM-FFLD-PF6
               MOVE ZEROES TO FRM-IFLD
           ELSE
               ADD 1 , WSS-IMAX GIVING FRM-IFLD.

           MOVE SPACES TO FRM-MENS.
           MOVE SPACES TO MSG-GLS-DESC.

*% IF PGM_MCP
      *RRM-INI 1-OCT-2002
           MOVE ZEROES TO FRM-IDX-IFLD.
      *RRM-FIN 1-OCT-2002
*% END      

           PERFORM PUT-TAB-GDD.

*% IF PGM_MCP
      *RRM-INI 27-SEP-2002
           IF SYS-IND-AMBI = SYS-IND-AMBI-PPMTX
              MOVE SPACES TO FRM-FFLD
              IF FRM-IDX-IFLD > WSS-IMAX-MTX
                 MOVE 'MTX   CONNXT' TO MSG-COD-MENS
                 GO TO ERR-FND-KEY
              ELSE
                 MOVE SPACES TO MSG-COD-MENS.
      *RRM-FIN 27-SEP-2002
*% END      

           IF CMA-POS-ACT = ZEROES AND FRM-FFLD = FRM-FFLD-PF5
               MOVE 'GDD    NOPRV' TO MSG-COD-MENS
               GO TO ERR-FND-KEY
           ELSE
           IF CMA-POS-ACT = ZEROES AND FRM-FFLD = FRM-FFLD-PF6
               MOVE 'GDD    NONXT' TO MSG-COD-MENS
               GO TO ERR-FND-KEY.
      
           IF FRM-FFLD = FRM-FFLD-PF6
               ADD 1 TO FRM-IFLD
               PERFORM LIM-RES-LIN UNTIL FRM-IFLD > WSS-IMAX.
      
      * Mueve acumuladores a CGD-FLD
           MOVE WSS-REA-CML TO FRM-REA-CML IN CGD-FLD.
           MOVE WSS-REA-LIQ TO FRM-REA-LIQ IN CGD-FLD.
           MOVE WSS-REA-PON TO FRM-REA-PON IN CGD-FLD.
           MOVE WSS-NRE-CML TO FRM-NRE-CML IN CGD-FLD.
           MOVE WSS-NRE-LIQ TO FRM-NRE-LIQ IN CGD-FLD.
           MOVE WSS-NRE-PON TO FRM-NRE-PON IN CGD-FLD.
      
           MOVE WSS-GEN-CML TO FRM-GEN-CML IN CGD-FLD.
           MOVE WSS-GEN-LIQ TO FRM-GEN-LIQ IN CGD-FLD.
           MOVE WSS-GEN-PON TO FRM-GEN-PON IN CGD-FLD.
           MOVE WSS-ESP-CML TO FRM-ESP-CML IN CGD-FLD.
           MOVE WSS-ESP-LIQ TO FRM-ESP-LIQ IN CGD-FLD.
           MOVE WSS-ESP-PON TO FRM-ESP-PON IN CGD-FLD.
      
           IF MSG-COD-MENS > SPACES
               MOVE 'GAR' TO FIO-SIST
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS.
      
           MOVE '00' TO FIO-STAT.
           GO TO FIN-FND-KEY.
       ERR-FND-KEY.
      *    Busca mensaje error en Sistema SGC
           IF WSS-IBUS = 0 AND WSS-IBUS-GDD = 0
      *        busco por padre y no encontro padre
               MOVE SPACES TO PGM-STAT
               MOVE 'TAB'  TO MSG-COD-SIST
               MOVE '23'   TO PGM-STAT-DBC
           ELSE
      *        todos otros casos: el error pertenece al sistema GAR
               MOVE 'GAR' TO MSG-COD-SIST.

           PERFORM GET-MSG.
           MOVE MSG-GLS-DESC TO FRM-MENS.
           MOVE SCR-STAT-CON TO SCR-STAT.
           MOVE '00' TO FIO-STAT.
           GO TO FIN-FND-KEY.
      *>>>> EVP-FIN ERRFNDKEY
*% END
*% IF EOF
      *<<<< EOF
       RST-STAT SECTION.
       INI-RST-STAT.
           MOVE SCR-STPP TO SCR-STAT.
           MOVE SCR-MFLD-NOT TO SCR-MFLD.
       FIN-RST-STAT.
           EXIT.
      *>>>>
      
      *<<<< EOF
      
       PUT-TAB-GDD SECTION.
       INI-PUT-TAB-GDD.
      *<<<< SELECCION
           MOVE GDD-KEY-AGDD IN GDD TO GDG-KEY-IGDG IN GDG.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM GAR-FIO-GDG.
           IF NOT FIO-STAT-OKS
               MOVE 'GAR'        TO MSG-COD-SIST
               MOVE 'GDG    NEX' TO MSG-COD-MENS
               GO TO FIN-PUT-TAB-GDD.
      
      *MHM-INI 26-SEP-2003
      ** Garantias completas vigentes y que no estan en tramite de
      ** alzamiento
      *     IF ( GDG-IND-EST1 IN GDG < '10' OR > '14' ) OR
      *          GDG-IND-GTAC IN GDG NOT = 'S'
      *          GO TO NXT-PUT-TAB-GDD.

      *MHM-INI 2-OCT-2003
           IF FRM-TIP-CGTA IN CGD-FLD > SPACES AND
              GDG-COD-TOPE IN GDG NOT = FRM-TIP-CGTA IN CGD-FLD
               GO TO NXT-PUT-TAB-GDD.

           IF FRM-STP-CGTA IN CGD-FLD > SPACES AND
              GDG-COD-SOPE IN GDG NOT = FRM-STP-CGTA IN CGD-FLD
               GO TO NXT-PUT-TAB-GDD.
      *MHM-FIN 2-OCT-2003
           MOVE SPACES TO WSS-COD-ESTG IN WSS-VARI.

           IF GDG-IND-GTAC IN GDG = 'N'
               MOVE 'I' TO WSS-COD-ESTG IN WSS-VARI
           ELSE
              IF GDG-IND-GTAC IN GDG = 'S' AND
                 GDG-IND-EST1 IN GDG < '20'
                  MOVE 'A' TO WSS-COD-ESTG IN WSS-VARI
              ELSE
                 IF GDG-IND-GTAC IN GDG = 'S' AND
                    GDG-IND-EST1 IN GDG > '19'
                     MOVE 'C' TO WSS-COD-ESTG IN WSS-VARI.

           IF FRM-COD-ESTG IN CGD-FLD > SPACES AND
              FRM-COD-ESTG IN CGD-FLD NOT = WSS-COD-ESTG IN WSS-VARI
               GO TO NXT-PUT-TAB-GDD.
      *MHM-FIN 26-SEP-2003
      
*% IF FMT_CHI
      *<<<< FMT_CHI
           MOVE FRM-TIP-CGTA IN CGD-FLD TO WSS-TIP-CGTA IN WSS-VARI.
           MOVE FRM-STP-CGTA IN CGD-FLD TO WSS-STP-CGTA IN WSS-VARI.
      *>>>>
*% END
           IF WSS-COD-SOPE > 0 AND
*% IF FMT_CHI
      *<<<< FMT_CHI
              GDG-COD-CGTA IN GDG NOT = WSS-COD-CGTA IN WSS-VARI
      *>>>>
*% ELSE
              GDG-COD-CGTA IN GDG NOT = FRM-COD-CGTA IN CGD-FLD
*% END
              GO TO NXT-PUT-TAB-GDD.
      
           IF WSS-COD-SOPE = 2 AND
*% IF FMT_CHI
      *<<<< FMT_CHI
              GDG-COD-CGTA IN GDG NOT = WSS-COD-CGTA IN WSS-VARI
      *>>>>
*% ELSE
              GDG-COD-CGTA IN GDG NOT = FRM-COD-CGTA IN CGD-FLD
*% END
              GO TO NXT-PUT-TAB-GDD.
      
      *>>>>
           IF SCR-OFRM-SRV
               MOVE 1 TO CMA-POS-ACT
           ELSE
               ADD 1 TO CMA-POS-ACT.
      
           IF FRM-FFLD = FRM-FFLD-PF6
               GO TO PUT-PF6.
      
           SUBTRACT 1 FROM FRM-IFLD.
           IF FRM-IFLD = 1
               MOVE GDD-KEY-AGDD IN GDD TO
                    GDD-KEY-AGDD-INI IN CMA-INI
           ELSE
               IF FRM-IFLD = WSS-IMAX
                   MOVE GDD-KEY-AGDD IN GDD TO
                        GDD-KEY-AGDD-FIN IN CMA-FIN.
           GO TO MOV-FLD.
      
       PUT-PF6.
      
*% IF PGM_MCP
      *RRM-INI 1-OCT-2002
           IF SCR-OFRM-SRV
               MOVE 1 TO FRM-IFLD
               ADD  1 TO FRM-IDX-IFLD
           ELSE
               ADD  1 TO FRM-IFLD.
      
           DISPLAY "CGD: FRM-IDX-IFLD= " FRM-IDX-IFLD
                   ";  WSS-IMAX-MTX= " WSS-IMAX-MTX.
      
           IF FRM-IDX-IFLD > WSS-IMAX-MTX
               GO TO FIN-PUT-TAB-GDD.
      *RRM-FIN 1-OCT-2002
*% END      

           IF CMA-1VEZ = 'S' AND CMA-POS-ACT > WSS-IMAX
      *    SOLO ACUMULA, SIN DESPLEGAR
               GO TO DSPL-O-ACUM.
      
*% IF FMT_CHI
      *ISP-INI 30-10-2003
      *    ADD 1 TO FRM-IFLD.
           IF SCR-OFRM-SRV
                MOVE 1 TO FRM-IFLD
                MOVE SPACES TO FRM-KEY-IGDG IN CGD-FLD(1)
           ELSE
                ADD 1 TO FRM-IFLD.
      *ISP-FIN 30-10-2003
                
*% END      
           IF FRM-IFLD = 1
               MOVE GDD-KEY-AGDD IN GDD TO
                    GDD-KEY-AGDD-INI IN CMA-INI
               MOVE GDD-KEY-AGDD IN GDD TO
                    GDD-KEY-AGDD-FIN IN CMA-FIN
           ELSE
           IF FRM-IFLD NOT > WSS-IMAX
               MOVE GDD-KEY-AGDD IN GDD TO
                    GDD-KEY-AGDD-FIN IN CMA-FIN.
       MOV-FLD.
      
      *<<<< MOVFLD
      *MHM-INI 26-SEP-2003
           MOVE 'GAR' TO TAB-COD-SIST.
           MOVE 'ESG' TO TAB-COD-TTAB IN TAB.
           MOVE WSS-COD-ESTG IN WSS-VARI TO TAB-COD-CTAB IN TAB.
           PERFORM BUS-TAB.
           IF MSG-COD-MENS = SPACES
               MOVE TAB-GLS-ABRV IN TAB TO
                    FRM-GLS-ESTG IN CGD-FLD(FRM-IFLD)
           ELSE
               MOVE SPACES TO FRM-GLS-ESTG IN CGD-FLD(FRM-IFLD).
      *MHM-FIN 26-SEP-2003

           MOVE GDG-KEY-IGDG IN GDG TO FRM-KEY-IGDG
                                    IN CGD-FLD(FRM-IFLD).

           MOVE GDG-COD-LGTA IN GDG TO FRM-GDG-COD-LGTA
                                    IN CGD-FLD(FRM-IFLD).

           MOVE GDG-COD-GGTA IN GDG TO WSS-COD-PREL IN WSS-VARI.
           MOVE WSS-COD-PREL-2 IN WSS-VARI TO FRM-GDG-COD-GGTA
                                    IN CGD-FLD(FRM-IFLD).
      
           MOVE GDD-KEY-IGDD IN GDD TO GDD-KEY-IGDD IN WSS-VARI.
      
           MOVE 'GDD-KEY-AGDD' TO FIO-AKEY.
           MOVE FIO-GET-NLS TO FIO-CMND.
           PERFORM GAR-FIO-GDD.
           IF NOT FIO-STAT-OKS
              OR GDD-KEY-AGDD IN GDD NOT = GDG-KEY-IGDG IN GDG
               MOVE 'GAR'        TO MSG-COD-SIST
               MOVE 'PGM    ERR' TO MSG-COD-MENS
               GO TO FIN-PUT-TAB-GDD.

           MOVE 'GDD-KEY-AGDD' TO FIO-AKEY.
           MOVE FIO-GET-NXT TO FIO-CMND.
           PERFORM GAR-FIO-GDD.
           IF FIO-STAT-OKS AND
               GDD-KEY-AGDD IN GDD = GDG-KEY-IGDG IN GDG
               MOVE 'M' TO FRM-IND-MUL-DEU IN CGD-FLD(FRM-IFLD)
           ELSE
               MOVE '1' TO FRM-IND-MUL-DEU IN CGD-FLD(FRM-IFLD).

*% IF GEN_BCI
      *<<<< GEN_BCI
           MOVE GDG-IND-ECRT IN GDG TO 
                              FRM-IND-COMT IN CGD-FLD(FRM-IFLD).
           MOVE GDG-IND-ECRS IN GDG TO 
                              FRM-IND-COMS IN CGD-FLD(FRM-IFLD).
      *>>>>
*% END
           MOVE GDD-KEY-IGDD IN WSS-VARI TO GDD-KEY-IGDD IN GDD.
      
           IF FRM-FFLD = FRM-FFLD-PF5
               MOVE FIO-GET-LEQ TO FIO-CMND
           ELSE
               MOVE FIO-GET-NLS TO FIO-CMND.
      *PTC-INI-MAN
           IF SCR-OFRM-SRV
               MOVE FIO-GET-NLS TO FIO-CMND.
      *PTC-FIN-MAN
      
           PERFORM GAR-FIO-GDD.
           IF NOT FIO-STAT-OKS
               MOVE 'GAR'        TO MSG-COD-SIST
               MOVE 'PGM    ERR' TO MSG-COD-MENS
               GO TO FIN-PUT-TAB-GDD.
      *>>>>
      
      *<<<< BUSTAB
      *---------------------------------------------------------*
      *BUS-TAB Busca glosa de codigo en tabla
           MOVE 'TAB' TO TAB-COD-SIST.
*% IF GEN_BCI
      *<<<< GEN_BCI
           MOVE 'AUX' TO TAB-COD-TTAB IN TAB.
      *>>>>
*% ELSE
           MOVE 'GTA' TO TAB-COD-TTAB IN TAB.
*% END
           MOVE GDG-COD-CGTA IN GDG TO TAB-COD-CTAB IN TAB.
           PERFORM BUS-TAB.
           IF MSG-COD-MENS = SPACES
      *MHM-INI 27-OCT-2003
      *         MOVE TAB-GLS-DCOR IN TAB TO
      *              FRM-GDG-GLS-CGTA IN CGD-FLD(FRM-IFLD)
                MOVE TAB-GLS-DCOR IN TAB TO WSS-GLS-SOPE IN WSS-VARI
      *MHM-FIN 27-OCT-2003
      *MHM-INI 22-OCT
               MOVE TAB-COD-DAT1 IN TAB-GLS-DAT1(1) TO
                                       WSS-IND-NRTA IN WSS-VARI
               IF TAB-COD-DAT1 IN TAB-GLS-DAT1(2) = 'A'
                   MOVE 'S' TO WSS-IND-NRNS IN WSS-VARI
               ELSE
                   MOVE SPACES TO WSS-IND-NRNS IN WSS-VARI
      *MHM-FIN 22-OCT
           ELSE
      *MHM-INI 22-OCT
               MOVE SPACES TO WSS-IND-NRTA IN WSS-VARI
               MOVE SPACES TO WSS-IND-NRNS IN WSS-VARI
      *MHM-FIN 22-OCT
      *MHM-INI 27-OCT-2003
      *         MOVE SPACES TO FRM-GDG-GLS-CGTA IN CGD-FLD(FRM-IFLD).
                MOVE SPACES TO WSS-GLS-SOPE IN WSS-VARI.

           MOVE 'TAB'                   TO TAB-COD-SIST.
           MOVE 'TIO'                   TO TAB-COD-TTAB IN TAB.
           MOVE SPACES                  TO TAB-COD-CTAB IN TAB.
           MOVE GDG-TIP-CGTA IN GDG     TO TAB-COD-CTAB IN TAB.
           PERFORM BUS-TAB             
           IF MSG-COD-MENS = SPACES
               MOVE TAB-GLS-DCOR IN TAB TO WSS-GLS-TOPE IN WSS-VARI
           ELSE
               MOVE SPACES TO WSS-GLS-TOPE IN WSS-VARI.
               
           MOVE WSS-GLS-CGTA TO CPT-STRN.
           PERFORM CPT-BLKS.
           MOVE CPT-STRN TO FRM-GDG-GLS-CGTA IN CGD-FLD(FRM-IFLD).
      *MHM-FIN 27-OCT-2003
      *--------------------------------------------------------*
      
           MOVE GDG-COD-CGTA IN GDG TO TAG-COD-AGTA IN TAG.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM GAR-FIO-TAG.
           IF NOT FIO-STAT-OKS
               PERFORM ERR-VAL
               GO TO FIN-PUT-TAB-GDD
           ELSE
               MOVE TAG-IND-TREA IN TAG TO FRM-TAG-IND-TREA
                                        IN CGD-FLD(FRM-IFLD).
      *>>>>
      
       DSPL-O-ACUM.
      *MHM-INI 1-OCT-2003
           IF GDG-IND-GTAC IN GDG = 'N'
               MOVE ZEROES TO WSS-SGV-VCTS
               MOVE ZEROES TO WSS-SGV-LTSN
               MOVE ZEROES TO WSS-SGV-VPND
               GO TO PUT-FLD.

      *MHM-FIN 1-OCT-2003
      *<<<< ANLHIJ
      *------------------------------------------------------*
      * Busca valores en la tasacion vigente
           MOVE GDG-CAI-GTIA IN GDG TO GVT-CAI-GTIA IN GVT.
           MOVE GDG-IIC-GTIA IN GDG TO GVT-IIC-GTIA IN GVT.
           MOVE GDG-COD-TSCN IN GDG TO GVT-COD-TASN IN GVT.
           MOVE FIO-GET-KEY     TO FIO-CMND.
           PERFORM GAR-FIO-GVT.
           IF NOT FIO-STAT-OKS
               MOVE 'GAR'        TO MSG-COD-SIST
               MOVE 'GVT    NEX' TO MSG-COD-MENS
               PERFORM ERR-VAL
               GO TO FIN-PUT-TAB-GDD.
      
           MOVE 'N' TO WSS-IND-TASV IN WSS-VARI.
      * Se determina si la tasacion esta vencida o no
           MOVE WSS-NO-EXA-VENC TO WSS-IND-EXAV.

      * Excluye los Subtipos de Garantia que no requieren Tasacion Efect
           IF TAG-NUM-PVTS IN TAG NOT > ZEROES
               GO TO EXA-VEN-SEG.
      
      * Excluye los Creditos Hipotecarios
           MOVE GDG-CAI-GTIA IN GDG TO GES-CAI-GTIA IN GES.
           MOVE GDG-IIC-GTIA IN GDG TO GES-IIC-GTIA IN GES.
           MOVE ZEROES              TO GES-NUM-IGES IN GES.
           MOVE FIO-GET-NLS TO FIO-CMND.
           PERFORM GAR-FIO-GES.
           IF NOT FIO-STAT-OKS OR
              GDG-CAI-GTIA IN GDG NOT = GES-CAI-GTIA IN GES OR
              GDG-IIC-GTIA IN GDG NOT = GES-IIC-GTIA IN GES
              MOVE SPACES TO GES
              MOVE ZEROES TO GES-IIC-GTIA IN GES
                              GES-FEC-FVCR IN GES
                              GES-NUM-IGES IN GES
              IF FIO-STAT-OKS
                 MOVE FIO-END-BRW TO FIO-CMND
                 PERFORM GAR-FIO-GES
              ELSE
                   NEXT SENTENCE
           ELSE
               MOVE FIO-END-BRW TO FIO-CMND
               PERFORM GAR-FIO-GES
               IF GES-COD-SIST IN GES > SPACES
                   MOVE 'TAB'                  TO TAB-COD-SIST
                   MOVE 'SIS'                  TO TAB-COD-TTAB IN TAB
                   MOVE GES-COD-SIST IN GES TO TAB-COD-CTAB IN TAB
                   PERFORM BUS-TAB
                   IF MSG-COD-MENS = SPACES AND
                      TAB-CIC-CTAB = 'HIP'
                       GO TO EXA-VEN-SEG.
      
           MOVE WSS-SI-EXA-VENC TO WSS-IND-EXAV.
           PERFORM GET-FHOY.
 
           IF TAG-COD-TPVT IN TAG = 'D'
              MOVE FEC-SUM-DIA TO FEC-CMND
              MOVE TAG-NUM-PVTS IN TAG TO FEC-NDIA
           ELSE
           IF TAG-COD-TPVT IN TAG = 'M'
              MOVE FEC-SUM-MES TO FEC-CMND
              MOVE TAG-NUM-PVTS IN TAG TO FEC-NMES
           ELSE
           IF TAG-COD-TPVT IN TAG = 'A'
              MOVE FEC-SUM-ANO TO FEC-CMND
              MOVE TAG-NUM-PVTS IN TAG TO FEC-NANO.
      
           MOVE GVT-FEC-FTSN IN GVT TO FEC-FVLD.
           MOVE FEC-DVLD TO FEC-ITM1.
           MOVE FEC-MVLD TO FEC-ITM2.
           MOVE FEC-AVLD TO FEC-ITM4.
           MOVE FEC-SVLD TO FEC-ITM3.
           MOVE FEC-FORM-FEC TO FEC-FORM.
           PERFORM CAL-FEC.
           IF MSG-COD-MENS = SPACES
               MOVE FEC-ITM1 TO WSS-FEC-DVTA IN WSS-VARI
               MOVE FEC-ITM2 TO WSS-FEC-MVTA IN WSS-VARI
               MOVE FEC-ITM4 TO WSS-FEC-AVTA IN WSS-VARI
               MOVE FEC-ITM3 TO WSS-FEC-SVTA IN WSS-VARI
           ELSE
               GO TO EXA-VEN-SEG.
      
      * Tasacion Vencida
           IF WSS-FEC-FVTA IN WSS-VARI > HOY-FHOY
               GO TO EXA-VEN-SEG.
      
            MOVE 'S' TO WSS-IND-TASV IN WSS-VARI.
      *MHM-INI 21-OCT-2003
      *     MOVE 'GAR' TO MSG-COD-SIST.
      *     MOVE 'FECTSN<HOY' TO MSG-COD-MENS.
      *     PERFORM GET-MSG.
      *     MOVE MSG-GLS-DESC TO FRM-MEN1.
      *MHM-FIN 21-OCT-2003      

       EXA-VEN-SEG.
           MOVE 'N' TO WSS-IND-SEGV IN WSS-VARI.
      * Se determina si el seguro esta vencido o no
      * Excluye los Creditos Hipotecarios
           IF WSS-IND-EXAV = WSS-NO-EXA-VENC
               GO TO MOV-GVT.
      
           IF GDG-IND-EGSE IN GDG NOT = 'S'
              GO TO MOV-GVT.
      
           MOVE GDG-CAI-GTIA IN GDG TO GSE-CAI-GTIA IN GSE.
           MOVE GDG-IIC-GTIA IN GDG TO GSE-IIC-GTIA IN GSE.
           MOVE ZEROES              TO GSE-NUM-IGSE IN GSE.
           MOVE FIO-GET-NLS TO FIO-CMND.
       GSE-LUP.
           PERFORM GAR-FIO-GSE.
           IF NOT ( FIO-STAT-OKS AND
                    GDG-CAI-GTIA IN GDG = GSE-CAI-GTIA IN GSE AND
                    GDG-IIC-GTIA IN GDG = GSE-IIC-GTIA IN GSE    )
      *MHM-INI 21-OCT-2003
      *        MOVE 'SEGURO VENCIDO' TO FRM-MEN2
      *MHM-FIN 21-OCT-2003
              GO TO MOV-GVT.
      
      * Seguro Vigente
           IF GSE-FEC-FVTS IN GSE > HOY-FHOY
               GO TO MOV-GVT.
      
           MOVE 'S' TO WSS-IND-SEGV IN WSS-VARI.
           MOVE FIO-GET-NXT TO FIO-CMND.
           GO TO GSE-LUP.
      
       MOV-GVT.
*% IF PGM_CHI
      *<<<< PGM_CHI
           MOVE SPACES TO MSG-COD-MENS.
           PERFORM VLR-DAP.
           IF MSG-COD-MENS > SPACES
               PERFORM ERR-VAL
               GO TO FIN-PUT-TAB-GDD.
      *>>>>
*% END
      * la valorizacion de garantias especificas debe hacerse aqui, pues
      * haberse calculado previa y eventualmente el valor del deposito a
      * plazo propio en garantia
      
           IF GDG-COD-LGTA IN GDG NOT = WSS-COD-LGTA IN WSS-VARI
               GO TO GTIA-GENERAL.
      
      * garantia especifica, valoriza los creditos correspondientes
           MOVE DBC-KEY-IDBC IN CMA-VARI TO DBC-KEY-IDBC IN VCR-VARI.
           MOVE GDG-CAI-GTIA IN GDG      TO VCR-CAI-GTIA IN VCR-VARI.
           MOVE GDG-IIC-GTIA IN GDG      TO VCR-IIC-GTIA IN VCR-VARI.
           MOVE GDG-COD-VCAM IN GDG      TO VCR-COD-VCAM IN VCR-VARI.
           MOVE WSS-COD-PESO IN CMA-VARI TO VCR-COD-PESO IN VCR-VARI.
*% IF NOT PGM_PER
      *<<<< NOT PGM_PER
           PERFORM GAR-PRO-VCR.
      *>>>>
*% ELSE
*% END
      *MHM-INI 19-NOV-2003
      **MHM-INI 03-NOV-2003
      **PTC-INI-MAN
      *     IF SCR-OFRM-SRV
      *         IF ( FRM-MENS = SPACES  AND MSG-COD-MENS > SPACES )
      *               MOVE SPACES TO MSG-COD-MENS
      *               MOVE 'S' TO WSS-GO-TO-FIN-GDD
      *               GO TO NXT-PUT-TAB-GDD-MTX.
      **PTC-FIN-MAN
      **MHM-FIN 03-NOV-2003
      *MHM-FIN 19-NOV-2003
           IF FRM-MENS = SPACES AND MSG-COD-MENS > SPACES
               GO TO FIN-PUT-TAB-GDD.
      
       GTIA-GENERAL.
      * Garantia general
           IF GDG-COD-VCAM IN GDG = WSS-COD-PESO IN CMA-VARI
               MOVE GVT-SGV-VCTS IN GVT TO WSS-SGV-VCTS
               MOVE GVT-SGV-LTSN IN GVT TO WSS-SGV-LTSN
               MOVE GVT-SGV-VPND IN GVT TO WSS-SGV-VPND
               GO TO PUT-FLD.
      
           MOVE HOY-FHOY                 TO CAM-FEC-FCAM IN CAM(1)
           MOVE HOY-FHOY                 TO CAM-FEC-FCAM IN CAM(2).
      
           MOVE GDG-COD-VCAM IN GDG      TO CAM-COD-VCAM IN CAM(1).
           MOVE WSS-COD-PESO IN CMA-VARI TO CAM-COD-VCAM IN CAM(2).
           MOVE FIO-GET-KEY TO FIO-CMND.
*% IF PGM_MCP
      *<<<< PGM_MCP
           PERFORM TAB-FIO-CA1.
      *>>>>
*% ELSE
           PERFORM TAB-FIO-CAM.
*% END
           IF NOT (
              FIO-STAT-OKS AND CAM-IND-VIGE IN CAM = 'S'
              )
               MOVE 'TAB'        TO MSG-COD-SIST
               MOVE 'CAM    NEX' TO MSG-COD-MENS
               PERFORM ERR-VAL
               GO TO FIN-PUT-TAB-GDD.
      
           MULTIPLY GVT-SGV-VCTS IN GVT 
                 BY CAM-SGV-VCAM IN CAM
             GIVING WSS-SGV-VCTS ROUNDED.

           MULTIPLY GVT-SGV-LTSN IN GVT
                 BY CAM-SGV-VCAM IN CAM
             GIVING WSS-SGV-LTSN ROUNDED.

           MULTIPLY GVT-SGV-VPND IN GVT 
                 BY CAM-SGV-VCAM IN CAM
             GIVING WSS-SGV-VPND ROUNDED.
      *--------------------------------------------------*
       PUT-FLD.

           IF CMA-POS-ACT NOT > WSS-IMAX
               MOVE WSS-SGV-VCTS TO FRM-GVT-SGV-VCTS
                                 IN CGD-FLD(FRM-IFLD)
               MOVE WSS-SGV-LTSN TO FRM-GVT-SGV-LTSN
                                 IN CGD-FLD(FRM-IFLD)
               MOVE WSS-SGV-VPND TO FRM-GVT-SGV-VPND
                                 IN CGD-FLD(FRM-IFLD).

      *MHM-INI 22-OCT-2003
           IF CMA-POS-ACT > WSS-IMAX
               GO TO CNT-NO-CPLTA.
               
           MOVE SPACES TO FRM-GLS-NORT IN CGD-FLD(FRM-IFLD).
           MOVE SPACES TO FRM-GLS-NORS IN CGD-FLD(FRM-IFLD).

           MOVE 'N' TO WSS-IND-LLNT IN WSS-VARI.
           IF GDG-IND-EGVT IN GDG NOT = 'S'
               GO TO CNT-EXC-SEG.

           IF GDG-IND-GTAC IN GDG = 'N'
               GO TO CNT-NO-CPLTA.

           IF WSS-IND-NRTA IN WSS-VARI = 'N'
               MOVE 'NO APLICA RETASAR' TO
                                FRM-GLS-NORT IN CGD-FLD(FRM-IFLD)
               GO TO CNT-EXC-SEG.

           IF WSS-IND-TASV IN WSS-VARI NOT = 'S'
               MOVE 'AL DIA' TO FRM-GLS-NORT IN CGD-FLD(FRM-IFLD)
               GO TO CNT-EXC-SEG.

           IF GDG-IND-ECRT IN GDG = 'S'
               MOVE 'VENCIDA CON EXCEPCION COMERCIAL' TO
                                FRM-GLS-NORT IN CGD-FLD(FRM-IFLD)
               GO TO CNT-EXC-SEG.

           PERFORM EXC-NOR-TAS.
           MOVE 'S' TO WSS-IND-LLNT IN WSS-VARI.

           IF WSS-IND-ENT1 = 'S'
               MOVE 'NO PRESENTA DEUDAS VIGENTES' TO
                   FRM-GLS-NORT IN CGD-FLD(FRM-IFLD)
           ELSE
           IF WSS-IND-ENT2 = 'S'
               MOVE 'UNICA DEUDA HIPOTECARIA' TO
                   FRM-GLS-NORT IN CGD-FLD(FRM-IFLD)
           ELSE
           IF WSS-IND-ENT3 = 'S'
               MOVE 'TASACION VIGENTE EN CURSE' TO
                   FRM-GLS-NORT IN CGD-FLD(FRM-IFLD)
           ELSE
               MOVE 'TASACION VENCIDA, DEBE RETASAR' TO
                   FRM-GLS-NORT IN CGD-FLD(FRM-IFLD).

       CNT-EXC-SEG.
           IF GDG-IND-EGSE IN GDG NOT = 'S'
               MOVE 'N' TO WSS-IND-ENS1 IN WSS-VARI
               MOVE 'N' TO WSS-IND-ENS2 IN WSS-VARI
               GO TO CNT-NO-CPLTA.

           IF WSS-IND-NRNS IN WSS-VARI NOT = 'S'
              MOVE 'NO APLICA RENOVAR'
                              TO FRM-GLS-NORS IN CGD-FLD(FRM-IFLD)
              GO TO CNT-NO-CPLTA.

           IF WSS-IND-SEGV IN WSS-VARI NOT = 'S'
               MOVE 'AL DIA'  TO FRM-GLS-NORS IN CGD-FLD(FRM-IFLD)
               GO TO CNT-NO-CPLTA.

           IF GDG-IND-ECRS IN GDG = 'S'
               MOVE 'VENCIDA CON EXCEPCION COMERCIAL'
                              TO FRM-GLS-NORS IN CGD-FLD(FRM-IFLD)
               GO TO CNT-NO-CPLTA.

           IF WSS-IND-LLNT IN WSS-VARI NOT = 'S'
               PERFORM EXC-NOR-TAS.
               
           PERFORM EXC-NOR-SEG.

           IF WSS-IND-ENS1 = 'S'
               MOVE 'VENCIDO, AMPARA CREDITOS VIGENTES' TO
                   FRM-GLS-NORS IN CGD-FLD(FRM-IFLD)
           ELSE
           IF WSS-IND-ENS2 = 'S'
               MOVE 'VENCIDO, LINEAS DE CREDITOS VGTES' TO
                   FRM-GLS-NORS IN CGD-FLD(FRM-IFLD)
           ELSE
               MOVE 'VENCIDO, NO ES NECESARIO RENOVAR' TO
                   FRM-GLS-NORS IN CGD-FLD(FRM-IFLD).

       CNT-NO-CPLTA.
      *MHM-INI 22-OCT-2003
      *>>>>
           IF CMA-1VEZ NOT = 'S'
               GO TO NXT-PUT-TAB-GDD.
      *<<<< SUMVAL
           IF TAG-IND-TREA IN TAG = WSS-COD-REAL IN WSS-VARI
               ADD WSS-SGV-VCTS TO WSS-REA-CML
               ADD WSS-SGV-LTSN TO WSS-REA-LIQ
               ADD WSS-SGV-VPND TO WSS-REA-PON
           ELSE
               ADD WSS-SGV-VCTS TO WSS-NRE-CML
               ADD WSS-SGV-LTSN TO WSS-NRE-LIQ
               ADD WSS-SGV-VPND TO WSS-NRE-PON.
      
           IF GDG-COD-LGTA IN GDG NOT = WSS-COD-LGTA IN WSS-VARI
               ADD WSS-SGV-VCTS TO WSS-GEN-CML
               ADD WSS-SGV-LTSN TO WSS-GEN-LIQ
               ADD WSS-SGV-VPND TO WSS-GEN-PON
           ELSE
               ADD WSS-SGV-VCTS TO WSS-ESP-CML
               ADD WSS-SGV-LTSN TO WSS-ESP-LIQ
               ADD WSS-SGV-VPND TO WSS-ESP-PON.
      *>>>>
      
       NXT-PUT-TAB-GDD.

*% IF PGM_MCP
      *RRM-INI 26-SEP-2002
           IF SYS-IND-AMBI = SYS-IND-AMBI-PPMTX
              IF FRM-IDX-IFLD > ZEROES
                  PERFORM PUT-MTX-IDX-CGD
                  MOVE FIO-GET-NXT TO FIO-CMND
                  GO TO NXT-PUT-TAB-GDD-MTX
              ELSE
                  MOVE FIO-GET-NXT TO FIO-CMND
                  GO TO NXT-PUT-TAB-GDD-MTX.
      *RRM-FIN 26-SEP-2002
*% END      

*% IF NOT PGM_CLB AND NOT PGM_MEX
           IF FRM-FFLD = FRM-FFLD-PF5
               IF FRM-IFLD > 1
*% IF PGM_VAX AND NOT UNI_HIJ_ALF
                   SUBTRACT 1 FROM GDD-KEY-AGDD-ACT
                   MOVE CMA-ACT TO GDD-KEY-IGDD IN GDD
                   MOVE FIO-GET-KEY TO FIO-CMND
*% ELSE
                   MOVE FIO-GET-PRV TO FIO-CMND
*% END
               ELSE
                   GO TO FIN-PUT-TAB-GDD
           ELSE
           IF CMA-1VEZ NOT = 'S'
               IF FRM-IFLD < WSS-IMAX
                   MOVE FIO-GET-NXT TO FIO-CMND
               ELSE
                   GO TO FIN-PUT-TAB-GDD
           ELSE
               MOVE FIO-GET-NXT TO FIO-CMND.
*% END
           IF FRM-FFLD = FRM-FFLD-PF5
              IF FRM-IFLD > 1
                 MOVE FIO-GET-PRV TO FIO-CMND
              ELSE
                 GO TO FIN-PUT-TAB-GDD
           ELSE
              IF CMA-1VEZ NOT = 'S'
                 IF FRM-IFLD < WSS-IMAX
                    MOVE FIO-GET-NXT TO FIO-CMND
                 ELSE
                    GO TO FIN-PUT-TAB-GDD
              ELSE
                 MOVE FIO-GET-NXT TO FIO-CMND.
      
      *RRM-INI 26-SEP-2002
       NXT-PUT-TAB-GDD-MTX.
      *RRM-FIN 26-SEP-2002
      *PTC-INI-MAN
      * EN ESTE PUNTO EL PROGRAMA NO SABE SI LA GDD CANDIDATA
      * FUE EFECTIVAMENTE SELECIONADA, POR LO TANTO PARA LA
      * PRIMERA OCURRENCIA DEBE ESTAR LLENA Y PARA LAS
      * SIGUENTES NO DEBE SER IGUAL A LA ANTEIOR

           IF SCR-OFRM-SRV AND
              FRM-KEY-IGDG IN CGD-FLD(1) > SPACES AND
              FRM-KEY-IGDG IN CGD-FLD(1) NOT = WSX-FRM-KEY-IGDG
                 PERFORM MOV-TS-PTC.

           IF WSS-GO-TO-FIN-GDD = 'S'
                MOVE 'N' TO WSS-GO-TO-FIN-GDD
                GO TO  FIN-PUT-TAB-GDD.

      *PTC-FIN-MAN


           PERFORM GAR-FIO-GDD.
           MOVE GDD-KEY-IGDD IN GDD TO GDD-KEY-IGDD IN WSS-VARI.
           IF FIO-STAT-OKS AND
               DBC-KEY-IDBC IN CMA-VARI = DBC-KEY-IDBC IN WSS-VARI
               GO TO INI-PUT-TAB-GDD.
      
       FIN-PUT-TAB-GDD.
           EXIT.
      
       LIM-RES-LIN SECTION.
       INI-LIM-RES-LIN.
      *<<<< LIMRESLIN
           MOVE SPACES TO FRM-KEY-IGDG     IN CGD-FLD(FRM-IFLD),
                          FRM-GDG-GLS-CGTA IN CGD-FLD(FRM-IFLD),
                          FRM-GDG-COD-LGTA IN CGD-FLD(FRM-IFLD),
                          FRM-GDG-COD-GGTA IN CGD-FLD(FRM-IFLD),
                          FRM-TAG-IND-TREA IN CGD-FLD(FRM-IFLD),
                          FRM-IND-MUL-DEU  IN CGD-FLD(FRM-IFLD),
                          FRM-IND-COMT     IN CGD-FLD(FRM-IFLD),
                          FRM-GLS-NORT     IN CGD-FLD(FRM-IFLD),
                          FRM-IND-COMS     IN CGD-FLD(FRM-IFLD),
                          FRM-GLS-NORS     IN CGD-FLD(FRM-IFLD),
      *MHM-INI 1-OCT-2003
                          FRM-GLS-ESTG     IN CGD-FLD(FRM-IFLD).
      *MHM-FIN 1-OCT-2003
      
           MOVE ZEROES TO FRM-GVT-SGV-VCTS IN CGD-FLD(FRM-IFLD),
                          FRM-GVT-SGV-LTSN IN CGD-FLD(FRM-IFLD),
                          FRM-GVT-SGV-VPND IN CGD-FLD(FRM-IFLD).
      *>>>>
           ADD 1 TO FRM-IFLD.
       FIN-LIM-RES-LIN.
           EXIT.
       ERR-VAL SECTION.
       INI-ERR-VAL.
           IF FRM-IFLD NOT > WSS-IMAX
             MOVE ZEROES TO FRM-GVT-SGV-VCTS IN CGD-FLD(FRM-IFLD)
             MOVE ZEROES TO FRM-GVT-SGV-LTSN IN CGD-FLD(FRM-IFLD)
             MOVE ZEROES TO FRM-GVT-SGV-VPND IN CGD-FLD(FRM-IFLD).
                                  
       FIN-ERR-VAL.
           EXIT.
      *>>>>
*% END
*% IF PFS_SCR_ACC
      *<<<< PFS_SCR_ACC
           IF FRM-FFLD = FRM-FFLD-PF6
                 OR FRM-FFLD-PF5
              PERFORM VAL-NUM-KEY-CGD
              PERFORM VAL-NUM-FLD-CGD
              PERFORM RST-STAT
              PERFORM FND-SCR-KEY THRU FIN-SCR-KEY
              IF SCR-STAT NOT = SCR-STAT-ABT
              PERFORM SCR-TRL
              ELSE
              PERFORM DESSCRTRL
              GO TO FIN-SCR-ACC.
      *>>>>
*% END
*% IF PFS_SCR_GFLD
      *<<<< PFS_SCR_GFLD
           IF NOT ( ( SCR-CCPP = 'MOD' OR SCR-CCPP = 'ACC' OR
                  SCR-CCPP = 'ELI' OR
                ( SCR-CCPP = 'ACT' AND SCR-ACTU = SCR-ACTU-MOD ) )
                   AND ( FRM-FFLD = FRM-FFLD-PF6
                   OR FRM-FFLD-PF5
                   ) )
      *>>>>
*% END
*% IF PFS_GET_CON OR PFS_GET_ACC
      *<<<< PFS_GET_CON OR PFS_GET_ACC
           IF NOT ( FRM-FFLD = FRM-FFLD-PF6
                OR FRM-FFLD-PF5)
      *>>>>
*% END
*% IF FIN_PUT_SCR
      *<<<< FIN_PUT_SCR
      *PTC-INI-MAN

           IF SCR-OFRM-SRV
                MOVE 'N' TO WSX-IND-HMAS
                IF WSX-IDX-CGD < WSX-TOT-OCC-CGD
                     MOVE WSX-IDX-CGD TO WSX-NUM-TCGD
                ELSE
                     MOVE WSX-TOT-OCC-CGD TO WSX-NUM-TCGD
                     IF WSX-IDX-CGD > WSX-TOT-OCC-CGD
                         MOVE 'S' TO WSX-IND-HMAS.

           IF SCR-OFRM-SRV
               IF WSX-IDX-CGD NOT = ZEROES
                PERFORM PUT-TAB-CGD.

      *PTC-FIN-MAN
      *>>>> FIN_PUT_SCR
*% END
*% IF EOF
      *<<<< EOF
       COPY GARBGEDP.
*% IF PGM_CHI AND NOT GEN_BCI
      *<<<< PGM_CHI AND NOT GEN_BCI
       COPY GARBGDAP.
      *>>>>
*% END
*% PGM_CGD = TRUE
*% IF GEN_BCI
      *<<<< GEN_BCI
       VLR-DAP SECTION.
       INI-VLR-DAP.
           PERFORM EXA-DAP.
           IF FRM-SUAR NOT = FRM-SUAR-MAL AND
              OPD-COD-TOPD IN DAP-VARI = GDG-COD-TOPE IN GDG AND
              OPD-COD-AOPD IN DAP-VARI = GDG-COD-SOPE IN GDG
      *       Es Dep Plazo Propio
               PERFORM BUS-GDO-OPD
               IF MSG-COD-MENS = SPACES
      *Tasa Interes             : INT-TINT
      *Valor Tasa Informada     : INT-TINT
      *Valor de Cambio          : INT-VCAM
      *Fecha Inicial Periodo    : INT-FUNO
      *Fecha Final   Periodo    : INT-FDOS
      *Fecha Basa Tasa Variable : INT-FBTV ( opcional )
      *Fecha de Proceso         : INT-FPRO ( la rutina la obtiene)
                   MOVE OPD-COD-TINT IN OPD TO INT-TIPT
                   MOVE OPD-SGV-TINT IN OPD TO INT-TINT
                   MOVE OPD-COD-VCAM IN OPD TO INT-VCAM
                   MOVE OPD-NUM-DREA IN OPD TO INT-DUNO
                   MOVE OPD-NUM-MREA IN OPD TO INT-MUNO
                   MOVE OPD-NUM-SREA IN OPD TO INT-SUNO
                   MOVE OPD-NUM-AREA IN OPD TO INT-AUNO
                   PERFORM OBT-FDOS
                   PERFORM GNS-CAL-INT
                   IF INT-CMSG = SPACES
                       COMPUTE GVT-SGV-VCTS IN GVT ROUNDED =
                               GVT-SGV-VCTS IN GVT +
                               OPD-VAL-SCAP IN OPD * INT-TIPE
                       MOVE GVT-SGV-VCTS IN GVT TO
                            GVT-SGV-LTSN IN GVT
                       MOVE GVT-SGV-VCTS IN GVT TO
                            GVT-SGV-VPND IN GVT
                   ELSE
                       GO TO ERR-VLR-DAP
               ELSE
                   GO TO ERR-VLR-DAP.
           GO TO FIN-VLR-DAP.
       ERR-VLR-DAP.
           IF INT-CMSG > SPACES
               MOVE INT-CMSG TO MSG-COD-MENS
               MOVE INT-MENS TO FRM-MENS
           ELSE
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS
               MOVE FRM-SUAR-MAL TO FRM-SUAR.
       FIN-VLR-DAP.
           EXIT.
      
       OBT-FDOS SECTION.
       INI-OBT-FDOS.
           PERFORM GET-FHOY.
           IF HOY-FHOY NOT > OPD-FEC-FPVC IN OPD
               MOVE HOY-DHOY            TO INT-DDOS
               MOVE HOY-MHOY            TO INT-MDOS
               MOVE HOY-SHOY            TO INT-SDOS
               MOVE HOY-AHOY            TO INT-ADOS
           ELSE
               MOVE OPD-NUM-DPVC IN OPD TO INT-DDOS
               MOVE OPD-NUM-MPVC IN OPD TO INT-MDOS
               MOVE OPD-NUM-SPVC IN OPD TO INT-SDOS
               MOVE OPD-NUM-APVC IN OPD TO INT-ADOS.
       FIN-OBT-FDOS.
           EXIT.

       COPY GNSBGINT.
      *>>>>
*% END
       BUS-GDO-OPD SECTION.
       INI-BUS-GDO-OPD.
           MOVE SPACES              TO MSG-COD-MENS.
      *MHM-INI 8-SEP-2003
      *     MOVE SPACES              TO DAP-CIC-TGAR IN DAP-VARI.
      *MHM-INI 8-SEP-2003
           MOVE GDG-KEY-IGDG IN GDG TO GDO-KEY-IGDO IN GDO.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM GAR-FIO-GDO.
           IF NOT FIO-STAT-OKS
               MOVE 'GAR'          TO MSG-COD-SIST
               MOVE 'GDO    NEX'   TO MSG-COD-MENS
               GO TO FIN-BUS-GDO-OPD.
           MOVE GDO-COD-DOCU IN GDO TO OPD-IIC-IOPD IN DAP-VARI.
           MOVE OPD-CAI-IOPD IN DAP-VARI TO OPD-CAI-IOPD IN OPD.
           MOVE OPD-IIC-IOPD IN DAP-VARI TO OPD-IIC-IOPD IN OPD.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM DAP-FIO-OPD.
           IF NOT FIO-STAT-OKS
               MOVE 'GAR'          TO MSG-COD-SIST
               MOVE 'OPD    NEX'   TO MSG-COD-MENS
           ELSE
              IF OPD-COD-STAT IN OPD NOT = 'G'
                  MOVE 'GAR'            TO MSG-COD-SIST
                  MOVE 'OPD    NOVIG'   TO MSG-COD-MENS.
       FIN-BUS-GDO-OPD.
           EXIT.
      
*% IF GEN_BCI
      *<<<< GEN_BCI

       EXC-NOR-TAS SECTION.
       INI-EXC-NOR-TAS.
           IF GDG-COD-LGTA IN GDG = 'E'
               PERFORM GAR-ESP
           ELSE
               PERFORM GAR-GRL.
       FIN-EXC-NOR-TAS.
           EXIT.
           
       GAR-ESP SECTION.
       INI-GAR-ESP.
           MOVE ZEROES TO WSS-VAL-SCRE IN WSS-VARI.
           MOVE 'S'    TO WSS-IND-HIPT IN WSS-VARI.
           MOVE 'N'    TO WSS-IND-ENFE IN WSS-VARI.
           MOVE 'N'    TO WSS-IND-ENT1 IN WSS-VARI.
           MOVE 'N'    TO WSS-IND-ENT2 IN WSS-VARI.
           MOVE 'N'    TO WSS-IND-ENT3 IN WSS-VARI.
           
           MOVE GDG-CAI-GTIA IN GDG TO GES-CAI-GTIA IN GES.
           MOVE GDG-IIC-GTIA IN GDG TO GES-IIC-GTIA IN GES.
           MOVE ZEROES TO GES-NUM-IGES IN GES.
           MOVE FIO-GET-NLS TO FIO-CMND.
       LUP-GAR-ESP.
           PERFORM GAR-FIO-GES.
           IF NOT ( FIO-STAT-OKS AND
              GES-CAI-GTIA IN GES = GDG-CAI-GTIA AND
              GES-IIC-GTIA IN GES = GDG-IIC-GTIA )
      *PVG INI 15-OCT-2003
              IF FIO-STAT-OKS OR FIO-STAT-EOF
                 MOVE FIO-END-BRW TO FIO-CMND
                 PERFORM GAR-FIO-GES
                 GO TO CNT-GAR-ESP
              ELSE
      *PVG FIN 15-OCT-2003
                 GO TO CNT-GAR-ESP.
           
           MOVE GES-CAI-IOPC IN GES TO OPC-CAI-IOPC IN OPC.
           MOVE GES-IIC-IOPC IN GES TO OPC-IIC-IOPC IN OPC.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM COL-FIO-OPC.
           IF NOT FIO-STAT-OKS
               GO TO FIN-GAR-ESP.

      *MHM-INI 22-OCT-2003
           IF OPC-MSC-STAT IN OPC NOT = 'A' OR
              OPC-VAL-SCRE IN OPC NOT > ZEROES
               GO TO NXT-GAR-ESP.
      *MHM-FIN 22-OCT-2003
               
           IF OPC-MSC-STAT IN OPC = 'A'
               ADD OPC-VAL-SCRE IN OPC TO WSS-VAL-SCRE IN WSS-VARI.
               
           IF OPC-COD-TOPC IN OPC NOT = 'F'
               MOVE 'N' TO WSS-IND-HIPT IN WSS-VARI
               PERFORM CMP-FEC.

       NXT-GAR-ESP.           
           MOVE FIO-GET-NXT TO FIO-CMND.
           GO TO LUP-GAR-ESP.
           
       CNT-GAR-ESP.
           IF WSS-VAL-SCRE IN WSS-VARI NOT > ZEROES
               MOVE 'S' TO WSS-IND-ENT1 IN WSS-VARI.
               
           IF WSS-IND-HIPT IN WSS-VARI = 'S'
               MOVE 'S' TO WSS-IND-ENT2 IN WSS-VARI.

           IF WSS-IND-ENFE IN WSS-VARI = 'S'
               MOVE 'S' TO WSS-IND-ENT3 IN WSS-VARI.
           
       FIN-GAR-ESP.
           EXIT.
           
       CMP-FEC SECTION.
       INI-CMP-FEC.
           PERFORM LEE-TIO.
           IF WSS-CIC-TOPE IN WSS-VARI = '951'
               MOVE 2 TO FEC-NANO
           ELSE
               MOVE 1 TO FEC-NANO.
           PERFORM LEE-GVT.
           IF WSS-FEC-FTSN IN WSS-VARI NOT > SPACES
               GO TO FIN-CMP-FEC.
           PERFORM RST-FECHA.
           IF WSS-FEC-FTRA IN WSS-VARI NOT < OPC-FEC-FINP IN OPC AND
              OPC-VAL-SCRE IN OPC > ZEROES
               MOVE 'S' TO WSS-IND-ENFE IN WSS-VARI.
       FIN-CMP-FEC.
           EXIT.

       LEE-TIO SECTION.
       INI-LEE-TIO.
           MOVE SPACES              TO WSS-CIC-TOPE IN WSS-VARI.
           MOVE 'TAB'               TO TAB-COD-SIST.
           MOVE 'TIO'               TO TAB-COD-TTAB IN TAB.
           MOVE SPACES              TO TAB-COD-CTAB IN TAB.
           MOVE GDG-COD-TOPE IN GDG TO TAB-COD-CTAB IN TAB.
           PERFORM BUS-TAB.
           IF MSG-COD-MENS = SPACES
               MOVE TAB-CIC-CTAB IN TAB TO WSS-CIC-TOPE IN WSS-VARI.
       FIN-LEE-TIO.
           EXIT.

       LEE-GVT SECTION.
       INI-LEE-GVT.
           MOVE SPACES TO WSS-FEC-FTSN IN WSS-VARI.
           MOVE GDG-CAI-GTIA IN GDG TO GVT-CAI-GTIA IN GVT.
           MOVE GDG-IIC-GTIA IN GDG TO GVT-IIC-GTIA IN GVT.
           MOVE GDG-COD-TSCN IN GDG TO GVT-COD-TASN IN GVT.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM GAR-FIO-GVT.
           IF FIO-STAT-OKS
               MOVE GVT-FEC-FTSN IN GVT TO WSS-FEC-FTSN IN WSS-VARI.
       FIN-LEE-GVT.
           EXIT.
           
           
       RST-FECHA SECTION.
       INI-RST-FECHA.
           MOVE SPACES TO WSS-FEC-FTRA IN WSS-VARI.
           MOVE WSS-NUM-DTSN IN WSS-VARI TO FEC-ITM1.
           MOVE WSS-NUM-MTSN IN WSS-VARI TO FEC-ITM2.
           MOVE WSS-NUM-STSN IN WSS-VARI TO FEC-ITM3.
           MOVE WSS-NUM-ATSN IN WSS-VARI TO FEC-ITM4.
           MOVE FEC-FORM-FEC TO FEC-FORM.
           MOVE FEC-SUM-ANO  TO FEC-CMND.
           PERFORM CAL-FEC.
           IF FEC-STAT-OKS
               MOVE FEC-ITM1 TO WSS-NUM-DTRA IN WSS-VARI
               MOVE FEC-ITM2 TO WSS-NUM-MTRA IN WSS-VARI
               MOVE FEC-ITM3 TO WSS-NUM-STRA IN WSS-VARI
               MOVE FEC-ITM4 TO WSS-NUM-ATRA IN WSS-VARI.
       FIN-RST-FECHA.
           EXIT.
           
       GAR-GRL SECTION.
       INI-GAR-GRL.
           MOVE ZEROES TO WSS-VAL-SCRE IN WSS-VARI.
           MOVE 'S'    TO WSS-IND-HIPT IN WSS-VARI.
           MOVE 'N'    TO WSS-IND-ENFE IN WSS-VARI.
           MOVE 'N'    TO WSS-IND-ENT1 IN WSS-VARI.
           MOVE 'N'    TO WSS-IND-ENT2 IN WSS-VARI.
           MOVE 'N'    TO WSS-IND-ENT3 IN WSS-VARI.

           MOVE GDG-CAI-GTIA IN GDG TO GDD-CAI-GTIA IN GDD.
           MOVE GDG-IIC-GTIA IN GDG TO GDD-IIC-GTIA IN GDD.
           MOVE 'GDD-KEY-AGDD' TO FIO-AKEY.
           MOVE FIO-GET-NLS TO FIO-CMND.
       LUP-GDD-GAR-GRL.
           PERFORM GAR-FIO-GDD.
           IF NOT ( FIO-STAT-OKS AND
              GDD-CAI-GTIA IN GDD = GDG-CAI-GTIA AND
              GDD-IIC-GTIA IN GDD = GDG-IIC-GTIA )
               GO TO CNT-GAR-GRL.

           MOVE GDD-CAI-DCLI IN GDD TO RDC-CAI-ICLI IN RDC
           MOVE GDD-IIC-DCLI IN GDD TO RDC-IIC-ICLI IN RDC
           MOVE FIO-GET-NLS TO FIO-CMND.
       LUP-RDC-GAR-GRL.
           PERFORM COL-FIO-RDC.
           IF NOT ( FIO-STAT-OKS AND
              RDC-CAI-ICLI IN RDC = GDD-CAI-DCLI IN GDD AND
              RDC-IIC-ICLI IN RDC = GDD-IIC-DCLI IN GDD )
               GO TO NXT-GDD-GRL.
               
           MOVE RDC-CAI-IOPC IN RDC TO OPC-CAI-IOPC IN OPC.
           MOVE RDC-IIC-IOPC IN RDC TO OPC-IIC-IOPC IN OPC.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM COL-FIO-OPC.
           IF NOT FIO-STAT-OKS
               GO TO NXT-RDC-GRL.
               
      *MHM-INI 22-OCT-2003
           IF OPC-MSC-STAT IN OPC NOT = 'A' OR
              OPC-VAL-SCRE IN OPC NOT > ZEROES
               GO TO NXT-RDC-GRL.
      *MHM-FIN 22-OCT-2003

           IF OPC-MSC-STAT IN OPC = 'A'
               ADD OPC-VAL-SCRE IN OPC TO WSS-VAL-SCRE IN WSS-VARI.
               
           IF OPC-COD-TOPC IN OPC NOT = 'F'
               MOVE 'N' TO WSS-IND-HIPT IN WSS-VARI
               PERFORM CMP-FEC.
           
       NXT-RDC-GRL.
           MOVE FIO-GET-NXT TO FIO-CMND.
           GO TO LUP-RDC-GAR-GRL.
           
       NXT-GDD-GRL.
           MOVE FIO-GET-NXT TO FIO-CMND.
           MOVE 'GDD-KEY-AGDD' TO FIO-AKEY.
           GO TO LUP-GDD-GAR-GRL.

       CNT-GAR-GRL.
           IF WSS-VAL-SCRE IN WSS-VARI NOT > ZEROES
               MOVE 'S' TO WSS-IND-ENT1 IN WSS-VARI.
               
           IF WSS-IND-HIPT IN WSS-VARI = 'S'
               MOVE 'S' TO WSS-IND-ENT2 IN WSS-VARI.

           IF WSS-IND-ENFE IN WSS-VARI = 'S'
               MOVE 'S' TO WSS-IND-ENT3 IN WSS-VARI.

       FIN-GAR-GRL.
           EXIT.
           

       EXC-NOR-SEG SECTION.
       INI-EXC-NOR-SEG.
           MOVE 'N' TO WSS-IND-ENS1 IN WSS-VARI.
           MOVE 'N' TO WSS-IND-ENS2 IN WSS-VARI.
           
           IF WSS-VAL-SCRE IN WSS-VARI > ZEROES
               MOVE 'S' TO WSS-IND-ENS1 IN WSS-VARI
               GO TO FIN-EXC-NOR-SEG.
           
           MOVE GDG-CAI-GTIA IN GDG TO GDD-CAI-GTIA IN GDD.
           MOVE GDG-IIC-GTIA IN GDG TO GDD-IIC-GTIA IN GDD.
           MOVE 'GDD-KEY-AGDD' TO FIO-AKEY.
           MOVE FIO-GET-NLS TO FIO-CMND.
       LUP-GDD-EXC-SEG.
           PERFORM GAR-FIO-GDD.
           IF NOT ( FIO-STAT-OKS AND
              GDD-CAI-GTIA IN GDD = GDG-CAI-GTIA IN GDG AND
              GDD-IIC-GTIA IN GDD = GDG-IIC-GTIA IN GDG)
               GO TO FIN-EXC-NOR-SEG.

           MOVE GDD-CAI-DCLI IN GDD TO RDC-CAI-ICLI IN RDL.
           MOVE GDD-IIC-DCLI IN GDD TO RDC-IIC-ICLI IN RDL.
           MOVE FIO-GET-NLS TO FIO-CMND.
       LUP-RDC-EXC-SEG.
           PERFORM LDC-FIO-RDC.
           IF NOT ( FIO-STAT-OKS AND
              RDC-CAI-ICLI IN RDL = GDD-CAI-DCLI IN GDD AND
              RDC-IIC-ICLI IN RDL = GDD-IIC-DCLI IN GDD )
               GO TO NXT-GDD-EXC-SEG.

           MOVE RDC-CAI-ICLF IN RDL TO CLF-CAI-ICLF IN CLF.
           MOVE RDC-IIC-ICLF IN RDL TO CLF-IIC-ICLF IN CLF.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM LDC-FIO-CLF.
           IF NOT FIO-STAT-OKS
               GO TO NXT-RDC-EXC-SEG.
               
           MOVE CLF-CAI-ICLF IN CLF TO LDC-CAI-ICLF IN LDC.
           MOVE CLF-IIC-ICLF IN CLF TO LDC-IIC-ICLF IN LDC.
           MOVE ZEROES              TO LDC-NUM-ILDC IN LDC.
           MOVE FIO-GET-NLS TO FIO-CMND.
       LUP-LDC-EXC-SEG.
           PERFORM LDC-FIO-LDC.
           IF NOT ( FIO-STAT-OKS AND
              LDC-CAI-ICLF IN LDC = CLF-CAI-ICLF IN CLF AND
              LDC-IIC-ICLF IN LDC = CLF-IIC-ICLF IN CLF )
               GO TO NXT-RDC-EXC-SEG.
               
           IF LDC-IND-VIGE IN LDC NOT = 'S'
               GO TO NXT-LDC-EXC-SEG.
           
           MOVE LDC-CAI-ICLF IN LDC TO ARG-CAI-ICLF IN ARG.
           MOVE LDC-IIC-ICLF IN LDC TO ARG-IIC-ICLF IN ARG.
           MOVE LDC-NUM-ILDC IN LDC TO ARG-NUM-ILDC IN ARG.
           MOVE ZEROES              TO ARG-NUM-IARG IN ARG.
           MOVE FIO-GET-NLS TO FIO-CMND.
       LUP-ARG-EXC-SEG.
           PERFORM LDC-FIO-ARG.
           IF NOT ( FIO-STAT-OKS AND
              ARG-CAI-ICLF IN ARG = LDC-CAI-ICLF IN LDC AND
              ARG-IIC-ICLF IN ARG = LDC-IIC-ICLF IN LDC AND
              ARG-NUM-ILDC IN ARG = LDC-NUM-ILDC IN LDC )
               GO TO NXT-LDC-EXC-SEG.

           IF GDG-CIC-GTIA IN GDG = ARG-CIC-IGAR IN ARG
               MOVE 'S' TO WSS-IND-ENS2 IN WSS-VARI.
               
           IF GDG-COD-CGTA = ARG-COD-COGA IN ARG
               MOVE 'S' TO WSS-IND-ENS2 IN WSS-VARI.
               
           IF GDG-COD-TOPE = ARG-COD-TOGA IN ARG
               MOVE 'S' TO WSS-IND-ENS2 IN WSS-VARI.

           IF GDG-COD-SOPE = ARG-COD-AOGA IN ARG
               MOVE 'S' TO WSS-IND-ENS2 IN WSS-VARI.
               
           MOVE FIO-GET-NXT TO FIO-CMND.
           GO TO LUP-ARG-EXC-SEG.

       NXT-LDC-EXC-SEG.
           MOVE FIO-GET-NXT TO FIO-CMND.
           GO TO LUP-LDC-EXC-SEG.

       NXT-RDC-EXC-SEG.
           MOVE FIO-GET-NXT TO FIO-CMND.
           GO TO LUP-RDC-EXC-SEG.

       NXT-GDD-EXC-SEG.
           MOVE 'GDD-KEY-AGDD' TO FIO-AKEY.
           MOVE FIO-GET-NXT TO FIO-CMND.
           GO TO LUP-GDD-EXC-SEG.

       FIN-EXC-NOR-SEG.
           EXIT.
       
       COPY LDCBFRDC REPLACING RDC BY RDL
                  ==ADR-RDC-REQA== BY ==ADR-RDL-REQA==.
       COPY LDCBFCLF.
       COPY LDCBFLDC.
       COPY LDCBFARG.
       COPY DAPBFOPD.
      *>>>>
*% END      
       COPY GARBGVCR.
       COPY GARBKVCR.
       COPY GARBFGDG.
       COPY GARBFGDO.
       COPY GARBFGES.
       COPY GARBFGSE.
       COPY GARBFGVT.
       COPY GARBFTAG.
       COPY COLBFDLC.
       COPY COLBFICG.
       COPY COLBFOPC.
       COPY COLBFRDC.
      *MHM-INI 8-SEP-2003
      * COPY COLBGINT.
      *MHM-INI 8-SEP-2003
       COPY SGCBFDBC.
*% IF NOT PGM_BFA
      *<<<< NOT PGM_BFA
       COPY DEUBFFIA.
      *>>>>
*% END
       COPY TABBFCAM.
*% IF PGM_MCP
      *<<<< PGM_MCP
       COPY TABBFCA1.
      *>>>>
*% END
       COPY SGCBGCLI.
       COPY GNSBBTAB.
       COPY GNSBVCOD.
       COPY GNSBVTAB.
       COPY GNSBGCPT.
       COPY GNSBGSTR.
       COPY GNSBPFEC.
       COPY GNSBGPES.
       COPY GNSBGVSM.
       COPY GNSBHVSM.
      *>>>>
*% IF PGM_DTC
      *<<<< PGM_DTC
       COPY GNSBGFEC.
       COPY GNSBGHOY.

      *PTC-INI-MAN
       MOV-TS-PTC SECTION.
       INI-MOV-TS-PTC.
           ADD 1 TO WSX-IDX-CGD.
           MOVE FRM-KEY-IGDG     IN CGD-FLD(1) TO
                   WSX-KEY-IGDG     IN WSX-TAB-CGD(WSX-IDX-CGD).
           MOVE FRM-GDG-GLS-CGTA IN CGD-FLD(1) TO
                   WSX-GDG-GLS-CGTA IN WSX-TAB-CGD(WSX-IDX-CGD).
           MOVE FRM-TAG-IND-TREA IN CGD-FLD(1) TO
                   WSX-TAG-IND-TREA IN WSX-TAB-CGD(WSX-IDX-CGD).
           MOVE FRM-GDG-COD-LGTA IN CGD-FLD(1) TO
                   WSX-GDG-COD-LGTA IN WSX-TAB-CGD(WSX-IDX-CGD).
           MOVE FRM-GDG-COD-GGTA IN CGD-FLD(1) TO
                   WSX-GDG-COD-GGTA IN WSX-TAB-CGD(WSX-IDX-CGD).
           MOVE FRM-GVT-SGV-VCTS IN CGD-FLD(1) TO
                   WSX-GVT-SGV-VCTS-RED IN WSX-TAB-CGD(WSX-IDX-CGD).
           MOVE FRM-GVT-SGV-LTSN IN CGD-FLD(1) TO
                   WSX-GVT-SGV-LTSN-RED IN WSX-TAB-CGD(WSX-IDX-CGD).
           MOVE FRM-GVT-SGV-VPND IN CGD-FLD(1) TO
                   WSX-GVT-SGV-VPND-RED IN WSX-TAB-CGD(WSX-IDX-CGD).
           MOVE FRM-IND-MUL-DEU IN CGD-FLD(1) TO
                   WSX-IND-MUL-DEU IN WSX-TAB-CGD(WSX-IDX-CGD).
           MOVE FRM-IND-COMT IN CGD-FLD(1) TO
                   WSX-IND-COMT IN WSX-TAB-CGD(WSX-IDX-CGD).
           MOVE FRM-GLS-NORT IN CGD-FLD(1) TO
                   WSX-GLS-NORT IN WSX-TAB-CGD(WSX-IDX-CGD).
           MOVE FRM-IND-COMS IN CGD-FLD(1) TO
                   WSX-IND-COMS IN WSX-TAB-CGD(WSX-IDX-CGD).
           MOVE FRM-GLS-NORS IN CGD-FLD(1) TO
                   WSX-GLS-NORS IN WSX-TAB-CGD(WSX-IDX-CGD).
      *MHM-INI 03-NOV-2003
           MOVE FRM-GLS-ESTG IN CGD-FLD(1) TO
                   WSX-GLS-ESTG IN WSX-TAB-CGD(WSX-IDX-CGD).
      *MHM-FIN 03-NOV-2003


           MOVE FRM-KEY-IGDG IN CGD-FLD(1) TO WSX-FRM-KEY-IGDG.
           MOVE SPACES TO FRM-KEY-IGDG IN CGD-FLD(1).

       FIN-MOV-TS-PTC.
           EXIT.

       PUT-TAB-CGD SECTION.
       INI-PUT-TAB-CGD.
           MOVE WSX-NOM-TSCGD  TO QUE-COLA
           MOVE QUE-DEL        TO QUE-CMND
           PERFORM GNS-PRO-QUE

           MOVE WSX-NOM-TSCGD  TO QUE-COLA.
           MOVE WSX-LEN-TSCGD  TO QUE-LITM.
           MOVE WSX-TAB-CGD    TO QUE-ITEM.
           MOVE QUE-PUT        TO QUE-CMND.
           PERFORM GNS-PRO-QUE.
       FIN-PUT-TAB-CGD.
           EXIT.

      *PTC-FIN-MAN
      *>>>>
*% END
*% END
