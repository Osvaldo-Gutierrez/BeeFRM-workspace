*% PGM_PTC = TRUE
*% FMT_CHI = TRUE
*% GEN_BCI = TRUE
*% IF PGM_DTC
*% IF EOF
      *<<<< EOF
       COPY GNSBGVSM.
       COPY GNSBHVSM.
       COPY GNSBGHOY.
      *>>>> END EOF
*% END
*% END
*% IF NOT PGM_MCP AND PGM_PQ
*%!    HASTA AQUI PARA MANEJAR VSAM EN AMBIENTE DTC
*%     INCLUDE 'GARSRC:PFSALLRPH.SRC'
*% END
*%! Codigo adicional generico
*%!**************************
*% PGM_HIJ = FALSE
*% FRM = 'GDD'
*% PAD = 'DBC'
*% RPH = 'GDD'
*% HIJ = 'GDG'
*%!**************************
*% KEYHIJ = 'GDG-IIC-GTIA'
*% PICHIJ = 'ZEROES'
*% CAIHIJHIJ = 'GDG-CAI-GTIA'
*% KEYHIJHIJ = 'GDG-KEY-IGDG'
*% IICHIJHIJ = 'GDG-IIC-GTIA'
*%!**************************
*% CAIHIJFLD = 'GDD-CAI-GTIA'
*% IICHIJFLD = 'GDD-IIC-GTIA'
*%!**************************
*% KEYHIJRPH = 'GDD-KEY-AGDD'
*% CAIHIJRPH = 'GDD-CAI-GTIA'
*% IICHIJRPH = 'GDD-IIC-GTIA'
*% KEYRPHRPH = 'GDD-KEY-IGDD'
*% KEYPADRPH = 'GDD-CIC-DCLI'
*% CAIPADRPH = 'GDD-CAI-DCLI'
*% IICPADRPH = 'GDD-IIC-DCLI'
*%!**************************
*% KEYPADPAD = 'DBC-KEY-IDBC'
*% CAIPADPAD = 'DBC-CAI-ICLI'
*% IICPADPAD = 'DBC-IIC-ICLI'
*% KEYPADALT = 'DBC-GLS-NOMC'
*%!**************************
*% SISPAD = 'SGC'
*% SISHIJ = 'GAR'
*% SISREG = 'GAR'
*% KEYPAD = 'DBC-IDC-ICLI'
*% MNECORPAD = 'CLI'
*% UNS_FLD = TRUE 
*% PAD_CLI = TRUE 
*%! Codigo adicional no generico
*% PGM_GDD = TRUE
*% GRA_GMO = TRUE
*% KEY_2 = TRUE
*% CMA_USR = TRUE
*% FLDPAD = 'DBC-NUM-ICLI'
*% CAIREG = 'GDD-CAI-GTIA'
*% IICREG = 'GDD-IIC-GTIA'
*% REG = 'GDD'
*% IF FIN_SCR_VARI
      *<<<< FIN_SCR_VARI
      *<<<< CMAVARI
*% IF NOT PGM_MVS
       01  SCR-VARI-AUX.
*% END
           03 CMA-VARI.
              05 GAR-KEY-IGDD.
                 07 GDD-CIC-DCLI.
                    09 GDD-CAI-ICLI           VALUE SPACES  PIC X(04).
                    09 GDD-IIC-ICLI           VALUE ZEROES  PIC 9(08).
                 07 GDD-KEY-AGDD              VALUE SPACES  PIC X(12).
  
      *>>>>
              05 WSS-COD-PESO                        PIC X(06).
              05 GAR-CAI-GTIA                        PIC X(04).
              05 GAR-IIC-GTIA                        PIC X(08).
              05 GAR-IND-GTAC                         PIC X(01). 
              05 CNE-GDD-CAI-DCLI                    PIC X(04).
              05 CNE-GDD-IIC-DCLI                    PIC X(08).
              05 FRM-NUM-QDEU                        PIC 9(03).
      *>>>>
*% END
*% IF WSS
      *<<<< WSS
      *PTC-INI-MAN
       COPY GARWXGDG.
       COPY GARWXGDD.
      *PTC-INI-MAN
       COPY SGCBRDBC.
       COPY GARBRGDG.
       COPY GNSWGCPT.
       COPY GNSWGSTR.
*% IF PGM_DTC
       COPY GNSWGHOY.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-GDG-REQA==.
*% IF NOT PGM_MEX
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-DBC-REQA==.
*% END
*% END
      *>>>>
       COPY GARBRTAG.
       COPY GARBRGMO.
*% IF PGM_DTC
      *<<<< PGM_DTC AND WSS
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-GMO-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-TAG-REQA==.
      *>>>>
*% END
*% IF PGM_CLB OR PGM_MEX
      *<<<<
       COPY GNSWGPES.
*% IF PGM_MEX
       COPY SGCWGICB.
      *>>>>
*% END
*% END
*% IF NOT PGM_PQ
      *<<<< NOT PGM_PQ
       COPY GNSWGPES.
      *>>>>
*% END
*% IF PGM_CHI AND PGM_PQ
      *<<<< PGM_CHI AND PGM_PQ
       COPY USPC113.
      *>>>>
*% END

       01  WSS-VARI.
      *MHM-INI 23-OCT-2003
           03 WSS-GLS-CGTA.
              05 WSS-GLS-TOPE                   PIC X(40).
              05 WSS-GLS-SOPE                   PIC X(40).
      *MHM-FIN 23-OCT-2003
           03 WSS-CPO.
*% IF PGM_ARG
      *<<<< PGM_ARG
              05 DBC-GLS-ICLI                     PIC X(02).
              05 DBC-NUM-ICLI                     PIC 9(11).
              05 DBC-VRF-ICLI                     PIC X(01).
              05 DBC-IND-ICLI                     PIC X(01).
      *>>>>
*% END
*% IF NOT PGM_ARG AND NOT PGM_MEX
      *<<<< 
              05 DBC-NUM-ICLI                     PIC 9(08).
              05 DBC-VRF-ICLI                     PIC X(01).
              05 DBC-IND-ICLI                     PIC X(01).
              05 DBC-GLS-ICLI                     PIC X(03).
           03 WSS-CLA-OPE.
              05 WSS-COD-TOPE                     PIC X(03).
              05 WSS-COD-SOPE                     PIC X(03).

           03 WSS-DATOS-ADICIONALES.
              05 WSS-CLASE-GARANTIA               PIC X(02).
              05 FILLER                           PIC X(58).
      *>>>>
*% END
*% IF PGM_MEX
              05 DBC-IDC-ICLI PIC 9(12). 
           03 WSS-CLA-OPE.
              05 WSS-COD-TOPE                     PIC X(03).
              05 WSS-COD-SOPE                     PIC X(03).

           03 WSS-DATOS-ADICIONALES.
              05 WSS-CLASE-GARANTIA               PIC X(02).
              05 FILLER                           PIC X(58).
*% END
*% END
*% CMA_USR = TRUE
*% IF CMA AND ( PGM_MVS OR PGM_DOS )
           02 FILLER                              PIC X(400).
*% END
*% IF INI_FIO
      *<<<< INI_FIO
      *PTC-INI-MAN                                         
           MOVE TSK-TERM-ALF TO WSX-COD-TERM IN WSX-TSGDD. 
           MOVE TSK-TERM-ALF TO WSX-COD-TERM IN WSX-TSGDG. 
      *PTC-FIN-MAN                                         
*% IF PGM_MVS OR PGM_DOS 
      *<<<< PGM_MVS OR PGM_DOS 
           MOVE +400 TO SCR-TCMA.
      *>>>>
*% END
*% IF PGM_VMS
      *<<<< PGM_VMS

           MOVE FIO-ACCS-UPD TO FIO-ACCS.
           MOVE FIO-ACC      TO FIO-CMND.
           MOVE 'TAB'        TO FIO-SIST.
           PERFORM GNS-FIO-TAB.
           MOVE FIO-INP TO FIO-CMND.
           PERFORM GNS-FIO-TAB.

           MOVE FIO-ACCS-UPD TO FIO-ACCS.
           MOVE FIO-ACC      TO FIO-CMND.
           MOVE 'TAB'        TO FIO-SIST.
           PERFORM TAB-FIO-OFI.
           MOVE FIO-INP TO FIO-CMND.
           PERFORM TAB-FIO-OFI.

           MOVE FIO-ACCS-UPD TO FIO-ACCS.
           MOVE FIO-ACC      TO FIO-CMND.
           MOVE 'TAB'        TO FIO-SIST.
           PERFORM TAB-FIO-USR.
           MOVE FIO-INP TO FIO-CMND.
           PERFORM TAB-FIO-USR.

           MOVE FIO-ACCS-UPD TO FIO-ACCS.
           MOVE FIO-ACC      TO FIO-CMND.
           MOVE 'SGC'        TO FIO-SIST.
           PERFORM SGC-FIO-DBC.
           MOVE FIO-INP TO FIO-CMND.
           PERFORM SGC-FIO-DBC.

           MOVE FIO-ACCS-UPD TO FIO-ACCS.
           MOVE FIO-ACC      TO FIO-CMND.
           MOVE 'SGC'        TO FIO-SIST.
           PERFORM SGC-FIO-TAB.
           MOVE FIO-INP TO FIO-CMND.
           PERFORM SGC-FIO-TAB.

           MOVE FIO-ACCS-UPD TO FIO-ACCS.
           MOVE FIO-ACC      TO FIO-CMND.
           MOVE 'GAR'        TO FIO-SIST.
           PERFORM GAR-FIO-GDG.
           MOVE FIO-UPD TO FIO-CMND.
           PERFORM GAR-FIO-GDG.

           MOVE FIO-ACCS-UPD TO FIO-ACCS.
           MOVE FIO-ACC      TO FIO-CMND.
           MOVE 'GAR'        TO FIO-SIST.
           PERFORM GAR-FIO-TAG.
           MOVE FIO-UPD TO FIO-CMND.
           PERFORM GAR-FIO-TAG.

           MOVE FIO-ACCS-UPD TO FIO-ACCS.
           MOVE FIO-ACC      TO FIO-CMND.
           MOVE 'GAR'        TO FIO-SIST.
           PERFORM GAR-FIO-GMO.
           MOVE FIO-UPD TO FIO-CMND.
           PERFORM GAR-FIO-GMO.
*% END

      * OBTIENE CODIGO VALOR DE CAMBIO DE PESOS MEDIANTE CIC DE LA MONEDA '0999'
           MOVE 'TAB'          TO FIO-SIST.
           MOVE 'VLR'          TO TAB-CIC-TTAB IN TAB.
           MOVE '0999  '       TO TAB-CIC-CTAB IN TAB.
           MOVE 'TAB-CIC-TABL' TO FIO-AKEY.
           MOVE FIO-GET-KEY    TO FIO-CMND.
           PERFORM GNS-FIO-TAB.
           IF NOT FIO-STAT-OKS
               MOVE 'TAB'          TO MSG-COD-SIST
               MOVE 'CIC0999  NEX' TO MSG-COD-MENS
               PERFORM GET-MSG
               PERFORM PRG-ABT.
           MOVE TAB-COD-CTAB IN TAB TO WSS-COD-PESO IN CMA-VARI.
      *>>>> INI_FIO
*% END
*% IF INI_FND_KEY
*% FIN_BUS_HIJ = TRUE
      *<<<< EVP-INI INIFNDKEY
      * CODIGO PARA M:N EN RELACION PADRE-HIJO

           IF SCR-CCPP = 'ING'
               GO TO FND-DIRECTO.

           MOVE SPACES TO MSG-COD-MENS.
           MOVE '23' TO PGM-STAT-GDD.

*%! CAH-INI 31-MAR-1997 (IGUALAR CODIGO UNYSIS)
*%! IF NOT PGM_MCP
*%! CAH-FIN 31-MAR-1997 (IGUALAR CODIGO UNYSIS)
      *>>>>
           IF FRM-FFLD = FRM-FFLD-PF6
              OR FRM-FFLD-PF5
               PERFORM LEE-NXT-PRV-XDBC
               IF PGM-STAT-GDD-OKS
                   MOVE PGM-SNUL TO PGM-STAT-DBC
                   GO TO EXA-COM-STAT
               ELSE
                   MOVE PGM-SNUL TO PGM-STAT-DBC
                   MOVE PGM-SNUL TO PGM-STAT-GDD
                   MOVE PGM-SNUL TO PGM-STAT-GDG
                   IF FRM-FFLD = FRM-FFLD-PF5
                       MOVE 'GDD    NOPRV' TO MSG-COD-MENS
                       GO TO ERR-FND-KEY
                   ELSE
                       MOVE 'GDD    NONXT' TO MSG-COD-MENS
                       GO TO ERR-FND-KEY.

           IF FRM-FFLD = FRM-FFLD-PF8
              OR FRM-FFLD-PF7
               PERFORM LEE-NXT-PRV-XGDG
               IF PGM-STAT-GDD-OKS
                   MOVE PGM-SNUL TO PGM-STAT-GDG
                   GO TO EXA-COM-STAT
               ELSE
                   MOVE PGM-SNUL TO PGM-STAT-DBC
                   MOVE PGM-SNUL TO PGM-STAT-GDD
                   MOVE PGM-SNUL TO PGM-STAT-GDG
                   IF FRM-FFLD = FRM-FFLD-PF7
                       MOVE 'DBC    NOPRV' TO MSG-COD-MENS
                       GO TO ERR-FND-KEY
                   ELSE
                       MOVE 'DBC    NONXT' TO MSG-COD-MENS
                       GO TO ERR-FND-KEY.
      *<<<<
           MOVE SPACES TO GDD-CIC-DCLI IN CMA-VARI.
           MOVE SPACES TO GDD-KEY-AGDD IN CMA-VARI.

*% IF NOT PGM_MEX
           IF DBC-NUM-ICLI IN GDD-FLD NOT = ZEROES
               MOVE DBC-NUM-ICLI IN GDD-FLD TO DBC-NUM-ICLI IN DBC
               MOVE DBC-IND-ICLI IN GDD-FLD TO DBC-IND-ICLI IN DBC
               MOVE DBC-GLS-ICLI IN GDD-FLD TO DBC-GLS-ICLI IN DBC
               MOVE 'DBC-IDC-ICLI'  TO FIO-AKEY
               MOVE FIO-GET-KEY TO FIO-CMND
               PERFORM GET-CLI
               MOVE FIO-STAT TO PGM-STAT-DBC
               IF MSG-COD-MENS NOT > SPACES
                   MOVE DBC-KEY-IDBC IN DBC TO GDD-CIC-DCLI IN CMA-VARI
                   GO TO CON-BUS-DBC.
*% END
*% IF PGM_MEX
           IF  DBC-IDC-ICLI IN GDD-FLD NOT = SPACES
                MOVE DBC-IDC-ICLI IN GDD-FLD TO DBC-IDC-ICLI IN DBC
               MOVE 'DBC-IDC-ICLI'  TO FIO-AKEY
               MOVE FIO-GET-KEY TO FIO-CMND
               PERFORM GET-CLI
               MOVE FIO-STAT TO PGM-STAT-DBC
               IF MSG-COD-MENS NOT > SPACES
                   MOVE DBC-KEY-IDBC IN DBC TO GDD-CIC-DCLI IN CMA-VARI
                   GO TO CON-BUS-DBC.
*% END
           IF DBC-GLS-NOMC IN GDD-FLD > SPACES
               MOVE DBC-GLS-NOMC IN GDD-FLD TO STR-GLS-GSTR
               PERFORM STR-UNS
               MOVE STR-GLS-FUNS IN STR-VARI(1) TO 
                    DBC-GLS-APAT IN DBC
               MOVE STR-GLS-FUNS IN STR-VARI(2) TO 
                    DBC-GLS-AMAT IN DBC
*% IF PGM_CLB OR PGM_MEX
               MOVE STR-GLS-FUNS IN STR-VARI(3) TO 
                    DBC-GLS-NOM1 IN DBC
               MOVE STR-GLS-FUNS IN STR-VARI(4) TO 
                    DBC-GLS-NOM2 IN DBC
*% ELSE
              MOVE STR-GLS-FUNS IN STR-VARI(3) TO 
                    DBC-GLS-NOMB IN DBC
*% END
               MOVE 'DBC-GLS-NOMC'   TO FIO-AKEY
               MOVE FIO-GET-NLS TO FIO-CMND
               PERFORM GET-CLI
               MOVE FIO-STAT TO PGM-STAT-DBC
               IF MSG-COD-MENS NOT > SPACES
                   MOVE DBC-KEY-IDBC IN DBC TO GDD-CIC-DCLI IN CMA-VARI
                   GO TO CON-BUS-DBC.
*% IF NOT PGM_MEX
      * No se encontro el padre 
           IF DBC-NUM-ICLI IN GDD-FLD NOT = ZEROES OR
              DBC-GLS-NOMC IN GDD-FLD > SPACES 
               MOVE 'CLI    NEX' TO MSG-COD-MENS
               GO TO ERR-FND-KEY.
*% END
*% IF PGM_MEX
      * No se encontro el padre 
           IF DBC-IDC-ICLI IN GDD-FLD NOT = SPACES OR
              DBC-GLS-NOMC IN GDD-FLD > SPACES 
               MOVE 'CLI    NEX' TO MSG-COD-MENS
               GO TO ERR-FND-KEY.
*% END
      * Busca por el hijo
           MOVE GDD-CAI-GTIA IN GDD-FLD TO GDD-CAI-GTIA IN GDD.
           MOVE GDD-IIC-GTIA IN GDD-FLD TO GDD-IIC-GTIA IN GDD.

           MOVE 'GDD-KEY-AGDD' TO FIO-AKEY.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM GAR-FIO-GDD.
      *MHM-INI 01-DIC-2003
      *     MOVE '00' TO PGM-STAT-GDD.
           MOVE FIO-STAT TO PGM-STAT-GDD.
      *MHM-FIN 01-DIC-2003
           IF NOT FIO-STAT-OKS OR
              GDD-CAI-GTIA IN GDD NOT = GDD-CAI-GTIA IN GDD-FLD OR
              GDD-IIC-GTIA IN GDD NOT = GDD-IIC-GTIA IN GDD-FLD 

               MOVE 'GDD    NEX' TO MSG-COD-MENS
               MOVE GDD-CAI-GTIA IN GDD-FLD TO GDG-CAI-GTIA IN GDG
               MOVE GDD-IIC-GTIA IN GDD-FLD TO GDG-IIC-GTIA IN GDG
               MOVE FIO-GET-KEY TO FIO-CMND
               PERFORM GAR-FIO-GDG

               MOVE FIO-STAT TO PGM-STAT-GDG
               IF NOT FIO-STAT-OKS
                   MOVE 'GDG    NEX' TO MSG-COD-MENS
                   GO TO ERR-FND-KEY
               ELSE
                   GO TO ERR-FND-KEY.

           GO TO EXA-COM-STAT.

       CON-BUS-DBC.
      *    se encontro el padre y busca el GDG
           MOVE '00' TO PGM-STAT-DBC.

      *    se digito el hijo, se busca directamente GDD
           IF GDD-IIC-GTIA IN GDD-FLD > ZEROES
               MOVE DBC-CAI-ICLI IN DBC TO CNE-GDD-CAI-DCLI
               MOVE DBC-IIC-ICLI IN DBC TO CNE-GDD-IIC-DCLI
*% IF NOT PGM_MEX
               MOVE DBC-NUM-ICLI IN DBC TO DBC-NUM-ICLI IN GDD-FLD
               MOVE DBC-IND-ICLI IN DBC TO DBC-IND-ICLI IN GDD-FLD
               MOVE DBC-GLS-ICLI IN DBC TO DBC-GLS-ICLI IN GDD-FLD
               MOVE DBC-VRF-ICLI IN DBC TO DBC-VRF-ICLI IN GDD-FLD
               MOVE DBC-GLS-NOMC IN DBC TO DBC-GLS-NOMC IN GDD-FLD
               GO TO FND-DIRECTO.
*% END
*% IF PGM_MEX
               MOVE DBC-IDC-ICLI IN DBC TO DBC-IDC-ICLI IN GDD-FLD
               MOVE DBC-GLS-NOMC IN DBC TO DBC-GLS-NOMC IN GDD-FLD
               GO TO FND-DIRECTO.
*% END 
           PERFORM BUS-ULT-GDD.
           IF MSG-COD-MENS > SPACES 
               GO TO ERR-FND-KEY.

           GO TO EXA-COM-STAT.

       FND-DIRECTO.
      *>>>> EVP-FIN INIFNDKEY
*% END
*% IF FIN_FND_KEY
      *<<<< EVP-INI FINFNDKEY

      *RRM-INI 26-SEP-2002
      *    Cuenta numero de deudores de la garantia
           PERFORM CUENTA-GDD.
           PERFORM KEY-GDD-GDD.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM GAR-FIO-GDD.
           MOVE FIO-STAT TO PGM-STAT-GDD.
      *RRM-FIN 26-SEP-2002

           IF SCR-CCPP = 'ING'     AND FIO-STAT-OKS OR
              SCR-CCPP NOT = 'ING' AND NOT FIO-STAT-OKS 
               MOVE DBC-GLS-NOMC IN DBC TO CPT-STRN
               PERFORM CPT-BLKS
               MOVE CPT-STRN TO DBC-GLS-NOMC IN GDD-FLD
               GO TO FIN-FND-KEY.

       EXA-COM-STAT.
           MOVE GDD-CAI-GTIA IN GDD TO GDD-CAI-GTIA IN GDD-FLD.
           MOVE GDD-IIC-GTIA IN GDD TO GDD-IIC-GTIA IN GDD-FLD.

           MOVE GDD-CAI-DCLI IN GDD TO CNE-GDD-CAI-DCLI.
           MOVE GDD-IIC-DCLI IN GDD TO CNE-GDD-IIC-DCLI.

           IF GDD-CIC-DCLI IN GDD NOT = GDD-CIC-DCLI IN CMA-VARI
               MOVE GDD-CIC-DCLI IN GDD TO DBC-KEY-IDBC IN DBC
               MOVE FIO-GET-KEY TO FIO-CMND
               PERFORM SGC-FIO-DBC
               MOVE FIO-STAT TO PGM-STAT-DBC
               IF NOT FIO-STAT-OKS
                   MOVE 'CLI    NEX' TO MSG-COD-MENS
                   GO TO ERR-FND-KEY
               ELSE
                   MOVE DBC-KEY-IDBC IN DBC TO GDD-CIC-DCLI IN CMA-VARI.

           IF SCR-CCPP NOT = 'ING' AND
              GDD-KEY-AGDD IN GDD = GDD-KEY-AGDD IN CMA-VARI
               GO TO FIN-ANL-GDD.

           MOVE GDD-CAI-GTIA IN GDD TO GDG-CAI-GTIA IN GDG.
           MOVE GDD-IIC-GTIA IN GDD TO GDG-IIC-GTIA IN GDG.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM GAR-FIO-GDG.

           MOVE FIO-STAT TO PGM-STAT-GDG.
           IF NOT FIO-STAT-OKS
               MOVE 'GDG    NEX' TO MSG-COD-MENS
               GO TO ERR-FND-KEY.

           MOVE GDD-KEY-AGDD IN GDD TO GDD-KEY-AGDD IN CMA-VARI.

       ANL-GDD.
            IF GDG-MSC-STAT IN GDG = 'A'
                MOVE 'GDG    AGAYA' TO MSG-COD-MENS
                GO TO ERR-FND-KEY.

           IF SCR-CCPP = 'ACC' AND
              SCR-STAT = SCR-STAT-CON
              GO TO FIN-VAL-OFI-USP-GDD.

           MOVE 'TAB'          TO FIO-SIST.
           MOVE 'VSN'          TO TAB-COD-TTAB IN TAB.
           MOVE 'OFIUSP'       TO TAB-COD-CTAB IN TAB.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM GNS-FIO-TAB.
           IF NOT ( FIO-STAT-OKS AND TAB-MSC-STAT IN TAB = 'S' )
               GO TO FIN-VAL-OFI-USP-GDD.
      *MHM-INI 29-JUL-2003
      *ALD-BCI-INI/07032000
           COPY USPC143.
           MOVE 'GARGTUCG/CEN' TO USP-PTA-STR.
           COPY USPC103.
           IF USP-PERMISO = 'P'
               GO TO FIN-VAL-OFI-USP-GDD.
      *    COPY USPC143.
      *ALD-BCI-FIN/07032000
           IF USP-COD-OFICINA NOT = GDG-COD-OFIC IN GDG
               MOVE 'USRNODEOFI' TO MSG-COD-MENS
               GO TO ERR-FND-KEY.
      *MHM-FIN 29-JUL-2003
      
       FIN-VAL-OFI-USP-GDD.
           MOVE PGM-STAT-GDD TO FIO-STAT.

      * Garantia Alzada
           IF SCR-CCPP NOT = 'ACC' AND
               GDG-IND-EST1 IN GDG > '19'
               MOVE 'GDGALZ' TO MSG-COD-MENS
               GO TO ERR-FND-KEY.
*% IF FMT_CHI
      *<<<< FMT_CHI
           MOVE GDG-TIP-CGTA IN GDG TO GDG-TIP-CGTA IN GDD-FLD.
           MOVE GDG-STP-CGTA IN GDG TO GDG-STP-CGTA IN GDD-FLD.

           MOVE GDG-TIP-CGTA IN GDD-FLD TO TAG-TIP-AGTA IN TAG.
           MOVE GDG-STP-CGTA IN GDD-FLD TO TAG-STP-AGTA IN TAG.
      *>>>>
*% ELSE
           MOVE GDG-COD-CGTA IN GDG TO GDG-COD-CGTA IN GDD-FLD.
           MOVE GDG-COD-CGTA IN GDD-FLD TO TAG-COD-AGTA IN TAG.
*% END
      
      *BUS-TAB Busca codigo de tabla
      
           MOVE 'TAB' TO TAB-COD-SIST.
*% IF GEN_BCI
      *<<<< GEN_BCI
           MOVE 'AUX' TO TAB-COD-TTAB IN TAB.
      *>>>>
*% ELSE
           MOVE 'GTA' TO TAB-COD-TTAB IN TAB.
*% END
           MOVE SPACES TO TAB-COD-CTAB IN TAB.

*% IF FMT_CHI
      *<<<< FMT_CHI
           MOVE GDG-COD-CGTA IN GDG TO TAB-COD-CTAB IN TAB.
      *>>>>
*% ELSE
           MOVE GDG-COD-CGTA IN GDD-FLD TO TAB-COD-CTAB IN TAB.
*% END
           PERFORM BUS-TAB.
           IF MSG-COD-MENS = SPACES
      *MHM-INI 23-OCT-2003
      *         MOVE TAB-GLS-DESC IN TAB TO
      *              FRM-GLS-CGTA IN GDD-FLD
      *     ELSE
      *         MOVE SPACES TO FRM-GLS-CGTA IN GDD-FLD.
               MOVE TAB-GLS-DESC IN TAB     TO WSS-GLS-SOPE IN WSS-VARI
           ELSE
               MOVE SPACES TO WSS-GLS-SOPE IN WSS-VARI.

           IF GDG-TIP-CGTA IN GDD-FLD > SPACES
               MOVE 'TAB'                   TO TAB-COD-SIST
               MOVE 'TIO'                   TO TAB-COD-TTAB IN TAB
               MOVE SPACES                  TO TAB-COD-CTAB IN TAB
               MOVE GDG-TIP-CGTA IN GDD-FLD TO TAB-COD-CTAB IN TAB
               PERFORM BUS-TAB
               MOVE TAB-GLS-DESC IN TAB     TO WSS-GLS-TOPE IN WSS-VARI
           ELSE
               MOVE SPACES TO WSS-GLS-TOPE IN WSS-VARI.

           MOVE WSS-GLS-CGTA TO CPT-STRN.
           PERFORM CPT-BLKS.
           MOVE CPT-STRN TO FRM-GLS-CGTA IN GDD-FLD.
      *MHM-FIN 23-OCT-2003

      * Busca Glosa Tabla Real/no Real
           MOVE FIO-GET-KEY    TO FIO-CMND.
           PERFORM GAR-FIO-TAG.
           IF NOT FIO-STAT-OKS
                MOVE 'TAG    NEX' TO MSG-COD-MENS
                MOVE 'GAR' TO MSG-COD-SIST
                PERFORM GET-MSG
           ELSE
                MOVE SPACES TO MSG-COD-MENS
                MOVE 'GAR' TO TAB-COD-SIST
                MOVE 'RAL' TO TAB-COD-TTAB IN TAB
      
                MOVE TAG-IND-TREA IN TAG TO 
                     TAB-COD-CTAB IN TAB
                PERFORM BUS-TAB
                IF MSG-COD-MENS = SPACES
                    MOVE TAB-GLS-DESC IN TAB TO 
                         FRM-GLS-TREA IN GDD-FLD
                ELSE
                    MOVE SPACES TO FRM-GLS-TREA IN GDD-FLD.

           MOVE GDG-CAI-GTIA IN GDG TO GAR-CAI-GTIA IN CMA-VARI.
           MOVE GDG-IIC-GTIA IN GDG TO GAR-IIC-GTIA IN CMA-VARI.
           MOVE GDG-IND-GTAC IN GDG TO GAR-IND-GTAC IN CMA-VARI.

      * Valida Este permitido esta Entidad para Tipo-Subtipo
           IF TAG-IND-EGDD IN TAG = 'N'
               MOVE 'TAG    NOPGM' TO MSG-COD-MENS
               GO TO ERR-FND-KEY.

           IF SCR-CCPP = 'ING'
               PERFORM PUT-DBC-GDD
               PERFORM PUT-GDG-GDD
           ELSE
           IF SCR-CCPP = 'ELI' AND 
              GDG-IND-GTAC IN GDG = 'S'
      *       Se posiciona por la llave del hijo
               MOVE 'GDD-KEY-AGDD' TO FIO-AKEY
               MOVE FIO-GET-NLS TO FIO-CMND
               PERFORM GAR-FIO-GDD

      *    Busca siguiente por la llave del hijo
               MOVE 'GDD-KEY-AGDD' TO FIO-AKEY
               MOVE FIO-GET-NXT TO FIO-CMND
               PERFORM GAR-FIO-GDD
               IF NOT ( FIO-STAT-OKS AND
                        GDG-KEY-IGDG  IN GDG = GDD-KEY-AGDD  IN GDD
                      )
                   MOVE 'GDDELIULTDEU' TO MSG-COD-MENS
                   IF FIO-STAT-OKS 
                       MOVE 'GDD-KEY-AGDD' TO FIO-AKEY
                       MOVE FIO-END-BRW TO FIO-CMND
                       PERFORM GAR-FIO-GDD
                       GO TO ERR-FND-KEY
                   ELSE
                       GO TO ERR-FND-KEY
               ELSE
                   MOVE 'GDD-KEY-AGDD' TO FIO-AKEY
                   MOVE FIO-END-BRW TO FIO-CMND
                   PERFORM GAR-FIO-GDD
                   GO TO ERR-FND-KEY.
       FIN-ANL-GDD.
           MOVE PGM-STAT-GDD TO FIO-STAT. 
           GO TO FIN-FND-KEY.

       ERR-FND-KEY.
           IF MSG-COD-MENS = 'CLI    NEX' 
      *        busco por padre y no encontro padre
               MOVE SPACES TO PGM-STAT
               MOVE 'TAB' TO MSG-COD-SIST
               MOVE FIO-STAT-NEX TO PGM-STAT-DBC
           ELSE
      *        todos otros casos: el error pertenece al sistema GAR
               MOVE 'GAR' TO MSG-COD-SIST.
           PERFORM GET-MSG.
           MOVE MSG-GLS-DESC TO FRM-MENS.

      * Todo malo, GENESIS deja pantalla en status aborto
           IF NOT ( PGM-STAT-DBC-OKS OR PGM-STAT-GDG-OKS OR
                    PGM-STAT-DBC-NUL OR PGM-STAT-GDG-NUL )
               IF SCR-CCPP = 'ING'
                   MOVE '00' TO FIO-STAT
                   GO TO FIN-FND-KEY
               ELSE
                   MOVE '23' TO FIO-STAT
                   GO TO FIN-FND-KEY.

      * DESPLIEGA DATOS DE DBC O GDG

           MOVE SCR-STAT-CON TO SCR-STAT.
           IF SCR-CCPP = 'ING' AND 
              PGM-STAT-DBC-OKS 
              PERFORM PUT-DBC-GDD.

           IF SCR-CCPP = 'ING' AND 
              PGM-STAT-GDG-OKS
              PERFORM PUT-GDG-GDD.

           IF SCR-CCPP = 'ING' 
               GO TO FIN-FND-KEY.

      * Despliega lo bueno o mantiene lo que habia, luego de PF's
           MOVE '00' TO FIO-STAT.

           GO TO FIN-FND-KEY.
      *>>>> EVP-FIN FINFNDKEY
*% END
*% IF INI_CMN_ING
      *<<<< INI_CMN_ING
           MOVE SPACES TO GDD-GLS-FLAG IN GDD.
           MOVE SPACES TO GDD-MSC-TACC IN GDD.
           MOVE SPACES TO GDD-CIC-UING IN GDD.
           MOVE 'I'    TO GDD-MSC-STAT IN GDD.

      *>>>>
*% END
*% IF CMN_ING OR CMN_MOD
      *<<<< INI_CMN_ING OR INI_CMN_MOD
           PERFORM GET-FHOY.
           IF SCR-CCPP = 'ING'
              OR SCR-CMND = 'COP'
               MOVE 'I'      TO GDD-MSC-TACC IN GDD

               MOVE HOY-FHOY TO GDD-FEC-FING IN GDD
*% IF PGM_MVS
               MOVE SCR-USER TO GDD-CIC-UING IN GDD
*% END
           ELSE
*% IF PGM_MVS
      *         MOVE SCR-USER TO GDD-CIC-UACT IN GDD
*% END
               MOVE 'M'      TO GDD-MSC-TACC    IN GDD.
*% IF PGM_MVS
*% END
*% IF PGM_VMS
           MOVE GDD-KEY-IGDD IN GDD TO GDD-KEY-PRV IN GDD.
*% END
      *>>>>
*% END
*% IF FIN_CMN_ING
      *<<<< FIN_CMN_ING
           IF NOT FIO-STAT-OKS
      *        Error inconsistencia en el ingreso : informar
               MOVE FIO-MENS TO FRM-MENS
               GO TO FIN-CMN-ING. 

           IF GAR-IND-GTAC IN CMA-VARI NOT = 'S'
               GO TO SIG-CMN-ING.

           MOVE '1' TO GMO-COD-MOVI IN GMO.
           PERFORM ESC-GMO-GDD.
           IF MSG-COD-MENS > SPACES
               MOVE 'GAR' TO MSG-COD-SIST
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS
               MOVE SCR-STAT-CON TO SCR-STAT
               GO TO FIN-CMN-ING.

       SIG-CMN-ING.
           IF NOT FIO-STAT-OKS                                                  
      *        Error inconsistencia en el ingreso : informar                    
               MOVE FIO-MENS TO FRM-MENS
               GO TO FIN-CMN-ING. 

           MOVE GDD-CAI-GTIA IN GDD TO GDG-CAI-GTIA IN GDG.
           MOVE GDD-IIC-GTIA IN GDD TO GDG-IIC-GTIA IN GDG.
           MOVE FIO-GET-KEY-UPD TO FIO-CMND.
           PERFORM GAR-FIO-GDG.
           IF FIO-STAT-OKS
               MOVE 'S' TO GDG-IND-EGDD IN GDG
               MOVE FIO-MOD TO FIO-CMND
               PERFORM GAR-FIO-GDG.

      *>>>>
*% END
*% IF FIN_CMN_MOD
      *<<<< FIN_CMN_MOD
           IF NOT FIO-STAT-OKS                                                  
      *        Error inconsistencia en la modificacion : informar               
               MOVE FIO-MENS TO FRM-MENS
               GO TO FIN-CMN-MOD.
      *>>>>
*% END
*% IF FIN_PUT_SCR
      *<<<< FIN_PUT_SCR
      *PTC-INI-MAN                      
           IF SCR-OFRM-SRV              
              PERFORM PUT-ALL-GDD-PTC.  
      *PTC-FIN-MAN                      
      *>>>>
*% END
*% IF SCR_GIKY_VAL_IKY
      *<<<< SCR_GIKY_VAL_IKY
      *PTC-INI-MAN                                            
           IF SCR-OFRM-SRV                                    
              MOVE WSX-NOM-TSGDG  TO QUE-COLA                 
              MOVE WSX-LEN-TSGDG  TO QUE-LITM                 
              MOVE QUE-GET        TO QUE-CMND                 
              MOVE 1 TO QUE-NITM
              PERFORM GNS-PRO-QUE                             
              IF QUE-STAT = QUE-STAT-OKS                      
                 MOVE QUE-ITEM      TO WSX-TAB-GDG            
                 MOVE WSX-CAI-NGAR TO GDD-CAI-GTIA IN GDD-FLD  
                 MOVE WSX-IIC-NGAR TO GDD-IIC-GTIA IN GDD-FLD. 
      *PTC-FIN-MAN                                            
      *>>>>
*% END
*% IF INI_CMN_ELI
      *<<<< INI_CMN_ELI
      *MHM-INI 01-DIC-2003
           MOVE SPACES TO GDD-KEY-IGDD IN GDD.
           MOVE GAR-CAI-GTIA IN CMA-VARI TO GDD-CAI-GTIA IN GDD.
           MOVE GAR-IIC-GTIA IN CMA-VARI TO GDD-IIC-GTIA IN GDD.

           MOVE FIO-GET-NLS TO FIO-CMND.
           MOVE 'GDD-KEY-AGDD' TO FIO-AKEY.
           PERFORM GAR-FIO-GDD.

           MOVE FIO-GET-NXT TO FIO-CMND.
           MOVE 'GDD-KEY-AGDD' TO FIO-AKEY.
           PERFORM GAR-FIO-GDD.
           IF NOT ( FIO-STAT-OKS AND
              GDD-CAI-GTIA IN GDD = GAR-CAI-GTIA IN CMA-VARI AND
              GDD-IIC-GTIA IN GDD = GAR-IIC-GTIA IN CMA-VARI )
               MOVE 'GAR' TO MSG-COD-SIST
               MOVE 'GDD    ULTREG' TO MSG-COD-MENS
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS
               MOVE SCR-STAT-CON TO SCR-STAT
               GO TO FIN-CMN-ELI.

      *MHM-FIN 01-DIC-2003
      *>>>>
*% END
*% IF FIN_CMN_ELI
      *<<<< FIN_CMN_ELI
           IF NOT FIO-STAT-OKS
      *        Error inconsistencia en la eliminacion : informar
               MOVE FIO-MENS TO FRM-MENS
               GO TO FIN-CMN-ELI.

           IF GAR-IND-GTAC IN CMA-VARI NOT = 'S'
               GO TO SIG-CMN-ELI.

           MOVE '3' TO GMO-COD-MOVI IN GMO.
           PERFORM ESC-GMO-GDD.

           IF MSG-COD-MENS > SPACES
               MOVE 'GAR' TO MSG-COD-SIST
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS
               MOVE SCR-STAT-CON TO SCR-STAT
               GO TO FIN-CMN-ELI.
       SIG-CMN-ELI.

           IF NOT FIO-STAT-OKS
      *        Error inconsistencia en la eliminacion : informar
               MOVE FIO-MENS TO FRM-MENS
               GO TO FIN-CMN-ELI.

      * Guarda Llave Padre

      * Para saber si queda o no un hijo y grabar el Indicador en GDG
           MOVE SPACES TO GDD-KEY-IGDD IN GDD.
           MOVE GAR-CAI-GTIA IN CMA-VARI TO GDD-CAI-GTIA IN GDD.
           MOVE GAR-IIC-GTIA IN CMA-VARI TO GDD-IIC-GTIA IN GDD.

           MOVE FIO-GET-NLS TO FIO-CMND.
           MOVE 'GDD-KEY-AGDD' TO FIO-AKEY.
           PERFORM GAR-FIO-GDD.
           IF FIO-STAT-OKS AND
              GDD-CAI-GTIA IN GDD = GAR-CAI-GTIA IN CMA-VARI AND
              GDD-IIC-GTIA IN GDD = GAR-IIC-GTIA IN CMA-VARI
               GO TO FIN-CMN-ELI.

      * No quedo ningun hijo
           MOVE GAR-CAI-GTIA IN CMA-VARI TO GDG-CAI-GTIA IN GDG.
           MOVE GAR-IIC-GTIA IN CMA-VARI TO GDG-IIC-GTIA IN GDG.
           MOVE FIO-GET-KEY-UPD TO FIO-CMND.
           PERFORM GAR-FIO-GDG.
           IF FIO-STAT-OKS
               MOVE ' ' TO GDG-IND-EGDD IN GDG
               MOVE FIO-MOD TO FIO-CMND
               PERFORM GAR-FIO-GDG
               IF NOT FIO-STAT-OKS
                   MOVE FIO-MENS TO FRM-MENS
               ELSE
                   NEXT SENTENCE
           ELSE
               MOVE FIO-MENS TO FRM-MENS.


      *>>>>
*% END
*% IF EOF AND PGM_PQ
      *<<<< EOF AND PGM_PQ
      *PTC-INI-MAN                                             
       PUT-ALL-GDD-PTC SECTION.                                
       INI-PUT-ALL-GDD-PTC.                                    
           MOVE ZEROES TO WSX-IDX-GDD.                         
           MOVE SPACES                  TO GDD-CIC-DCLI IN GDD. 
           MOVE GDD-CAI-GTIA IN GDD-FLD TO GDD-CAI-GTIA IN GDD.  
           MOVE GDD-IIC-GTIA IN GDD-FLD TO GDD-IIC-GTIA IN GDD.  
           MOVE FIO-GET-NLS TO FIO-CMND.                       
       LUP-PUT-ALL-GDD-PTC.                                    
      *  Se posiciona por la llave del hijo                    
           MOVE 'GDD-KEY-AGDD' TO FIO-AKEY                    
           PERFORM GAR-FIO-GDD.                                
           IF NOT (FIO-STAT-OKS AND                            
                   GDD-CAI-GTIA IN GDD-FLD = GDD-CAI-GTIA IN GDD AND
                   GDD-IIC-GTIA IN GDD-FLD = GDD-IIC-GTIA IN GDD)
              GO TO END-PUT-ALL-GDD-PTC.                       
                                                               
           ADD 1 TO WSX-IDX-GDD.                               
                                                               
           MOVE GDD-CAI-DCLI IN GDD TO DBC-CAI-ICLI IN DBC.    
           MOVE GDD-IIC-DCLI IN GDD TO DBC-IIC-ICLI IN DBC.    
           MOVE FIO-GET-KEY TO FIO-CMND.                       
           PERFORM SGC-FIO-DBC.                                
           IF NOT FIO-STAT-OKS                                 
              GO TO END-PUT-ALL-GDD-PTC.                       
                                                               
           MOVE DBC-GLS-NOMC IN DBC TO CPT-STRN.               
           PERFORM CPT-BLKS.                                   
           MOVE CPT-STRN TO WSX-GLS-NOMC IN WSX-TAB-GDD(WSX-IDX-GDD)
                                                               
           MOVE DBC-NUM-ICLI IN DBC TO                         
                WSX-NUM-ICLI IN WSX-TAB-GDD(WSX-IDX-GDD).      
           MOVE DBC-VRF-ICLI IN DBC TO                         
                WSX-VRF-ICLI IN WSX-TAB-GDD(WSX-IDX-GDD).      
           MOVE DBC-IND-ICLI IN DBC TO                         
                WSX-IND-ICLI IN WSX-TAB-GDD(WSX-IDX-GDD).      
           MOVE DBC-GLS-ICLI IN DBC TO                         
                WSX-GLS-ICLI IN WSX-TAB-GDD(WSX-IDX-GDD).      

           MOVE DBC-COD-EJEC IN DBC TO
                    WSX-COD-EJEC IN WSX-TAB-GDD(WSX-IDX-GDD).
      *BUS-USR busca usuario en tablas
           IF DBC-COD-EJEC IN DBC > SPACES
               MOVE DBC-COD-EJEC IN DBC TO USR-COD-USER IN USR
               PERFORM BUS-USR
               MOVE USR-GLS-DESC IN USR TO
               WSX-GLS-EJEC IN WSX-TAB-GDD(WSX-IDX-GDD)
           ELSE
               MOVE SPACES TO
                 WSX-GLS-EJEC IN WSX-TAB-GDD(WSX-IDX-GDD).

                                                               
           MOVE GDD-SGV-VLIM IN GDD TO                      
                WSX-VAL-LIM-DDR-EDT IN WSX-TAB-GDD(WSX-IDX-GDD)
                                                               
           MOVE GDD-SGV-PLIM IN GDD TO                      
                WSX-PCT-LIM-DDR-EDT IN WSX-TAB-GDD(WSX-IDX-GDD)
                                                               
           MOVE FIO-GET-NXT TO FIO-CMND.                       
           GO TO LUP-PUT-ALL-GDD-PTC.                          
                                                               
       END-PUT-ALL-GDD-PTC.                                    
           MOVE WSX-NOM-TSGDD  TO QUE-COLA.                    
           MOVE QUE-DEL        TO QUE-CMND.                    
           PERFORM GNS-PRO-QUE.                                
                                                               
           MOVE WSX-NOM-TSGDD  TO QUE-COLA.                    
           MOVE WSX-LEN-TSGDD  TO QUE-LITM.                    
           MOVE WSX-TAB-GDD    TO QUE-ITEM.                    
           MOVE QUE-PUT        TO QUE-CMND.                    
           PERFORM GNS-PRO-QUE.                                
       FIN-PUT-ALL-GDD-PTC.                                    
           EXIT.                                               
      *PTC-FIN-MAN                                             

      *>>>>
*% END
*% IF EOF
      *<<<< EOF
       COPY GARBFTAG.
       COPY GNSBVCOD.
*% IF PGM_DOS OR PGM_MVS OR PGM_MCP
       COPY GNSBVTAB.
*% END
      *<<<< EOFPQPU
       COPY SGCBFDBC.
*% IF PGM_VMS
       COPY SGCBFTAB.
*% END
       COPY GARBFGDG.
       COPY SGCBGCLI.
       COPY GNSBGCPT.
       COPY GNSBGSTR.
      *>>>>
*% IF EOF AND PGM_PQ
      *<<<< EOF AND PGM_PQ
      *>>>> NOT PGM_MCP
       LEE-NXT-PRV-XGDG SECTION.
       INI-LEE-NXT-PRV-XGDG.
           PERFORM POS-CMA.
           IF MSG-COD-MENS = 'GDD    NEX'
               GO TO BRW-LEE-NXT-PRV-XGDG.

*% IF NOT PGM_VMS
      *<<<< NOT PGM_VMS
           IF FRM-FFLD = FRM-FFLD-PF7
               MOVE FIO-GET-PRV TO FIO-CMND
           ELSE
               MOVE FIO-GET-NXT TO FIO-CMND.
      *>>>>
*% ELSE
      *<<<< PGM_VMS
           MOVE FIO-GET-NXT TO FIO-CMND.
      *>>>>
*% END
           MOVE 'GDD-KEY-AGDD' TO FIO-AKEY.
           PERFORM GAR-FIO-GDD.
           IF FIO-STAT-OKS AND
              GDD-KEY-AGDD IN GDD = GDD-KEY-AGDD IN CMA-VARI
               MOVE '00' TO PGM-STAT-GDD
           ELSE
               MOVE '23' TO PGM-STAT-GDD.

       BRW-LEE-NXT-PRV-XGDG.
           IF FIO-STAT-OKS 
               MOVE 'GDD-KEY-AGDD' TO FIO-AKEY
               MOVE FIO-END-BRW TO FIO-CMND
               PERFORM GAR-FIO-GDD.
       FIN-LEE-NXT-PRV-XGDG.
           EXIT.
       POS-CMA SECTION.
       INI-POS-CMA.
           MOVE GDD-KEY-AGDD IN CMA-VARI TO GDD-KEY-AGDD IN GDD.
           MOVE 'GDD-KEY-AGDD' TO FIO-AKEY.
           MOVE FIO-GET-NLS TO FIO-CMND.
           PERFORM GAR-FIO-GDD.
           IF NOT FIO-STAT-OKS OR
              GDD-KEY-AGDD IN GDD NOT = GDD-KEY-AGDD IN CMA-VARI 
               MOVE 'GDD    NEX' TO MSG-COD-MENS
               GO TO FIN-POS-CMA.

       LUP-POS-CMA.
           IF GDD-KEY-IGDD IN GDD = GAR-KEY-IGDD IN CMA-VARI 
               GO TO FIN-POS-CMA.

           MOVE FIO-GET-NXT TO FIO-CMND.
           MOVE 'GDD-KEY-AGDD' TO FIO-AKEY.
           PERFORM GAR-FIO-GDD.
           IF FIO-STAT-OKS AND
              GDD-KEY-AGDD IN GDD = GDD-KEY-AGDD IN CMA-VARI 
               GO TO LUP-POS-CMA.

           MOVE 'GDD    NEX' TO MSG-COD-MENS.
       FIN-POS-CMA.
           EXIT.
      *>>>>
       LEE-NXT-PRV-XDBC SECTION.
       INI-LEE-NXT-PRV-XDBC.
           MOVE GAR-KEY-IGDD IN CMA-VARI TO GDD-KEY-IGDD IN GDD. 
*% IF NOT PGM_VMS
      *<<<< NOT PGM_VMS
           IF FRM-FFLD = FRM-FFLD-PF5
               MOVE FIO-GET-LEQ TO FIO-CMND
           ELSE
               MOVE FIO-GET-NLS TO FIO-CMND.
*% ELSE
           MOVE FIO-GET-KEY TO FIO-CMND.

*% END
           PERFORM GAR-FIO-GDD.
           IF FRM-FFLD = FRM-FFLD-PF5
*% IF PGM_VMS
               MOVE 'GDD-KEY-PRV' TO FIO-AKEY
*% END
               MOVE FIO-GET-PRV TO FIO-CMND
           ELSE
               MOVE FIO-GET-NXT TO FIO-CMND.
           PERFORM GAR-FIO-GDD.

           IF FIO-STAT-OKS AND
              GDD-CIC-DCLI IN GDD = GDD-CIC-DCLI IN CMA-VARI
               MOVE '00' TO PGM-STAT-GDD
               MOVE FIO-END-BRW TO FIO-CMND
               PERFORM GAR-FIO-GDD
           ELSE
               IF FIO-STAT-OKS
                   MOVE FIO-END-BRW TO FIO-CMND
                   PERFORM GAR-FIO-GDD
                   MOVE '23' TO PGM-STAT-GDD.
       FIN-LEE-NXT-PRV-XDBC.
           EXIT.

       BUS-ULT-GDD SECTION.
       INI-BUS-ULT-GDD.
      *    se busca el ultimo hijo, luego de encontrar el padre
           MOVE DBC-KEY-IDBC IN DBC  TO GDD-CIC-DCLI IN GDD.
*% IF PGM_VMS
           MOVE '~~~~~~~~~~~~~~~~~~' TO GDD-KEY-AGDD IN GDD.
           MOVE GDD-KEY-IGDD IN GDD  TO GDD-KEY-PRV IN GDD.
           MOVE 'GDD-KEY-PRV' TO FIO-AKEY.
           MOVE FIO-GET-PRV TO FIO-CMND.
*% ELSE
           MOVE SPACES               TO GDD-KEY-AGDD IN GDD.
           MOVE FIO-GET-NLS TO FIO-CMND.
*% END
           PERFORM GAR-FIO-GDD.
           IF NOT FIO-STAT-OKS OR
              GDD-CIC-DCLI IN GDD NOT = DBC-KEY-IDBC IN DBC 
               MOVE 'GDD    NEX' TO MSG-COD-MENS
               IF FIO-STAT-OKS
                   MOVE FIO-END-BRW TO FIO-CMND
                   PERFORM GAR-FIO-GDD
                   GO TO FIN-BUS-ULT-GDD
               ELSE
                   GO TO FIN-BUS-ULT-GDD
           ELSE
               MOVE FIO-END-BRW TO FIO-CMND
               PERFORM GAR-FIO-GDD.

           MOVE SPACES TO MSG-COD-MENS.
           MOVE '00' TO PGM-STAT-GDD.
       FIN-BUS-ULT-GDD.
           EXIT.
      *>>>>
*% END

       CUENTA-GDD SECTION.
       INI-CUENTA-GDD.
           MOVE ZEROES TO FRM-NUM-QDEU IN CMA-VARI.
           MOVE 'GDD-KEY-AGDD' TO FIO-AKEY.
           MOVE FIO-GET-NLS TO FIO-CMND.
           PERFORM GAR-FIO-GDD.
       LUP-CUENTA-GDD.
           IF NOT ( FIO-STAT-OKS AND
              GDD-CAI-GTIA IN GDD = GDD-CAI-GTIA IN GDD-FLD AND
              GDD-IIC-GTIA IN GDD = GDD-IIC-GTIA IN GDD-FLD )
               GO TO BRW-CUENTA-GDD.

           ADD 1 TO FRM-NUM-QDEU IN CMA-VARI.

       NXT-CUENTA-GDD.
           MOVE 'GDD-KEY-AGDD' TO FIO-AKEY.
           MOVE FIO-GET-NXT TO FIO-CMND.
           PERFORM GAR-FIO-GDD.
           GO TO LUP-CUENTA-GDD.
       BRW-CUENTA-GDD.
           IF FIO-STAT-OKS
               MOVE 'GDD-KEY-AGDD' TO FIO-AKEY
               MOVE FIO-END-BRW TO FIO-CMND
               PERFORM GAR-FIO-GDD.
           MOVE FRM-NUM-QDEU IN CMA-VARI TO FRM-NUM-QDEU IN GDD-FLD.
       FIN-CUENTA-GDD.
           EXIT.
      *>>>>
*% END
*% IF (EOF AND NOT PGM_PQ) OR (EOF AND PGM_CLB) OR (EOF AND PGM_MEX)
      *<<<< (EOF AND NOT PGM_PQ) OR ( EOF AND PGM_MCP)
       COPY GNSBGPES.

       ESC-GMO-GDD SECTION.
       INI-ESC-GMO-GDD.
           MOVE ZEROES   TO GMO-NUM-IMOV IN GMO.
           PERFORM INI-GMO.
           MOVE 'GDD001' TO GMO-COD-CMPO IN GMO.
           MOVE 'N'      TO GMO-IND-VALO IN GMO.
           MOVE 'N'      TO GMO-IND-CLVE IN GMO.
*% IF NOT PGM_MEX
           MOVE DBC-NUM-ICLI IN GDD-FLD TO 
                DBC-NUM-ICLI IN WSS-CPO.

           MOVE DBC-VRF-ICLI IN GDD-FLD TO
                DBC-VRF-ICLI IN WSS-CPO.

           MOVE DBC-IND-ICLI IN GDD-FLD TO
                DBC-IND-ICLI IN WSS-CPO.

           MOVE DBC-GLS-ICLI IN GDD-FLD TO
                DBC-GLS-ICLI IN WSS-CPO.
*% END
*% IF PGM_MEX
           MOVE DBC-IDC-ICLI IN GDD-FLD TO 
                DBC-IDC-ICLI IN WSS-CPO.
*% END
           IF GMO-COD-MOVI IN GMO = '1'
              MOVE WSS-CPO TO GMO-GLS-NCMP IN GMO
           ELSE
           IF GMO-COD-MOVI IN GMO = '3'
              MOVE WSS-CPO TO GMO-GLS-CMPA IN GMO.
               
           MOVE FIO-PUT TO FIO-CMND.
           PERFORM GAR-FIO-GMO.
           IF NOT FIO-STAT-OKS
               MOVE 'GMO   PUT' TO MSG-COD-MENS.
       FIN-ESC-GMO-GDD.
           EXIT.   


       INI-GMO SECTION.
       INI-INI-GMO.
               MOVE SPACES   TO GMO-GLS-FLAG IN GMO.
               MOVE ZEROES   TO GMO-NUM-TASN IN GMO.
               MOVE SPACES   TO GMO-COD-CMPO IN GMO.
               MOVE SPACES   TO GMO-COD-CLVA IN GMO.
               MOVE SPACES   TO GMO-GLS-CMPA IN GMO.
               MOVE ZEROES   TO GMO-SGV-CMPA IN GMO.
               MOVE SPACES   TO GMO-COD-NCLV IN GMO.
               MOVE SPACES   TO GMO-GLS-NCMP IN GMO.
               MOVE ZEROES   TO GMO-SGV-NCMP IN GMO.
               MOVE SPACES   TO GMO-COD-TMOV IN GMO.
               MOVE SPACES   TO GMO-GLS-DISP IN GMO.

               PERFORM GET-FHOY.
               MOVE HOY-FHOY TO GMO-FEC-FMOV IN GMO.
               MOVE HOY-HHOY TO GMO-HRA-HMOV IN GMO.
*% IF PGM_MVS OR PGM_DOS
      *<<<< PGM_MVS OR PGM_DOS
               MOVE SCR-OTRN TO GMO-TML-TMOV IN GMO.
               MOVE SCR-USER TO GMO-CIC-UING IN GMO.
      *<<<< 
*% ELSE
      *<<<< PGM_VMS
      * FALTA ESCRIBIR TERMINAL Y USUARIO
               MOVE SPACES                  TO GMO-TML-TMOV IN GMO.
               MOVE SPACES                  TO GMO-CIC-UING IN GMO.
      *<<<< 
*% END
               MOVE HOY-FHOY                TO GMO-FEC-FING IN GMO.
               MOVE GDD-CAI-GTIA IN GDD     TO GMO-CAI-GTIA IN GMO.
               MOVE GDD-IIC-GTIA IN GDD     TO GMO-IIC-GTIA IN GMO.
               MOVE GDG-COD-OFIC IN GDD-FLD TO GMO-COD-OFMV IN GMO.
               ADD 1                        TO GMO-NUM-IMOV IN GMO.
               MOVE 'S'                     TO GMO-IND-VALO IN GMO.
               MOVE 'N'                     TO GMO-IND-CLVE IN GMO.
       FIN-INI-GMO.
           EXIT.

       COPY GARBFGMO.
      *>>>>
*% END
