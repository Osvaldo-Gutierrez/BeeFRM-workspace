*%! Codigo adicional para archivo
*% FRM = 'QHP'
*% IF NOT PGM_DB2 AND NOT PGM_MCP
*%!     INCLUDE 'GARSRC:PFSALLF56.SRC'
*% END
*%! IF NOT PGM_MCP
*% PGM_PTC = TRUE
*%! END
*% NREG = 2
*% PAD = 'GVT'
*% HIJ = 'GTP'
*% REG1 = 'GDG'
*% REG2 = 'GVT'
*% KEYHIJHIJ = 'GTP-KEY-IGTP'
*% KEYPADHIJ = 'GTP-KEY-IGVT'
*% KEYUNIHIJ = 'GTP-COD-ITSN'
*% KEYUNIFLD = 'FRM-COD-ITSN'
*% KEYPADPAD = 'GVT-KEY-IGVT'
*% LENKEYPAD = '15'
*% LENKEYHIJ = '03'
*% SISPAD = 'GAR'
*% SISREG = 'GAR'
*% SISSRC = 'GAR'
*% IMAX = '9 '
*% ACUMULA = TRUE
*% NO_IBUS = TRUE
*% FIO_STA_OKS = TRUE
*% IF EOF AND PGM_DTC
      *<<<< EOF AND PGM_DTC
      *MHM-INI 23-OCT-2003
       COPY GNSBGCPT.
      *MHM-FIN 23-OCT-2003
       COPY GNSBGVSM.
       COPY GNSBHVSM.
      *>>>>
*% END
*% IF FIN_SCR_VARI
      *<<<< FIN_SCR_VARI
*%!  INICIALIZA VARIABLES GENERICAS SEGUN PARAMETROS DEL LLAMADO
           03 CMA-VARI.
              05  CMA-POS-ACT            COMP         PIC S9(04).
              05  CMA-INI.
                  07 GAR-KEY-IGVT-INI                 PIC X(15).
                  07 GAR-COD-ITSN-INI                 PIC 9(03).

              05  CMA-FIN.
                  07 GAR-KEY-IGVT-FIN                 PIC X(15).
                  07 GAR-COD-ITSN-FIN                 PIC 9(03).
              05  CMA-1VEZ                            PIC X(01).
*% IF PGM_VMS
              05  CMA-ACT.
                  07 GAR-KEY-IGVT-ACT                  PIC X(15).
                  07 GAR-COD-ITSN-ACT                  PIC 9(03).
*% END
      *>>>>
              05  WSS-SUM-ITM            COMP-3        PIC S9(03).
              05  WSS-SUM-VAL            COMP-3        PIC S9(11)V9(4).
      *>>>>
*% END
*% IF WSS
      *<<<< WSS
      *PTC-INI-MAN      
       COPY GARWXQHP.   
      *PTC-FIN-MAN      

       COPY GARBRGDG.
       COPY GARBRGTP.
       COPY GARBRTAG.
      *MHM-INI 23-OCT-2003
       COPY GNSWGCPT.
      *MHM-FIN 23-OCT-2003
*% IF PGM_MCP
*% END
      * Define 01  WSS-VARI de PGM1ANIDX
       01  WSS-VARI.
           03  WSS-IMAX               VALUE 9      PIC 9(02).
           03  WSS-IMAX-MTX           VALUE 10     PIC 9(02).
           03  WSS-IGTP.
               05 GAR-KEY-IGVT                     PIC X(15).
               05 GAR-COD-ITSN                     PIC 9(03).
      * PARA USAR GARSRC:ERRFNDKEY.SRC
           03  WSS-IBUS                            PIC 9(01).
           03  WSS-IBUS-GTP                        PIC 9(01).
      *MHM-INI 23-OCT-2003
           03 WSS-GLS-CGTA.
              05 WSS-GLS-TOPE                   PIC X(40).
              05 WSS-GLS-SOPE                   PIC X(40).
      *MHM-FIN 23-OCT-2003
      *>>>>
*% END
*% IF WSS_DTC
      *<<<< WSS_DTC
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-GDG-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-GTP-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-TAG-REQA==.
      *>>>>
*% END
*% CMA_USR = TRUE
*% IF CMA AND PGM_MVS
           02 FILLER                    PIC X(350).
*% END
*% IF INI_FIO AND PGM_MVS
      *<<<< INI_FIO
      *PTC-INI-MAN
           MOVE TSK-TERM-ALF TO WSS-COD-TERM.
      *PTC-FIN-MAN

           MOVE WSS-NOM-TSQHP  TO QUE-COLA.
           MOVE QUE-DEL        TO QUE-CMND.
           PERFORM GNS-PRO-QUE.

           MOVE +350 TO SCR-TCMA.
      *>>>>
*% END
*% IF INI_FIO AND PGM_VAX
      *<<<< INI_FIO

           MOVE FIO-ACCS-UPD TO FIO-ACCS.
           MOVE FIO-ACC      TO FIO-CMND.
           MOVE 'GAR'        TO FIO-SIST.
           PERFORM GAR-FIO-GTP.
           MOVE FIO-INP TO FIO-CMND.
           PERFORM GAR-FIO-GTP.

           MOVE FIO-ACCS-UPD TO FIO-ACCS.
           MOVE FIO-ACC      TO FIO-CMND.
           MOVE 'TAB'        TO FIO-SIST.
           PERFORM GNS-FIO-TAB.
           MOVE FIO-INP TO FIO-CMND.
           PERFORM GNS-FIO-TAB.

           MOVE FIO-ACCS-UPD TO FIO-ACCS.
           MOVE FIO-ACC      TO FIO-CMND.
           MOVE 'TAB'        TO FIO-SIST.
           PERFORM TAB-FIO-OFI.
           MOVE FIO-INP TO FIO-CMND.
           PERFORM TAB-FIO-OFI.

           MOVE FIO-ACCS-UPD TO FIO-ACCS.
           MOVE FIO-ACC      TO FIO-CMND.
           MOVE 'GAR'        TO FIO-SIST.
           PERFORM GAR-FIO-TAG.
           MOVE FIO-INP TO FIO-CMND.
           PERFORM GAR-FIO-TAG.

           MOVE FIO-ACCS-UPD TO FIO-ACCS.
           MOVE FIO-ACC      TO FIO-CMND.
           MOVE 'GAR'        TO FIO-SIST.
           PERFORM GAR-FIO-GDG.
           MOVE FIO-INP TO FIO-CMND.
           PERFORM GAR-FIO-GDG.

      *>>>> INI_FIO
*% END
*% IF INI_FND_KEY
      *<<<< INI_FND_KEY
      * CMA-POS-ACT contiene la posicion alcanzada al llenar la pantalla
           MOVE ZEROES TO CMA-POS-ACT.

      * Asume mensaje del sistema del hijo en errfndkey.src
           MOVE 1 TO WSS-IBUS, WSS-IBUS-GTP.

*% IF NOT PGM_MCP1
           IF FRM-FFLD = FRM-FFLD-PF5
               MOVE PGM-SNUL TO PGM-STAT-GDG
               MOVE PGM-SNUL TO PGM-STAT-GVT

*% IF PGM_DTC OR PGM_VSI OR PGM_MCP
               MOVE CMA-INI TO GTP-KEY-IGTP IN GTP
               MOVE 'N'     TO CMA-1VEZ
               MOVE FIO-GET-LEQ TO FIO-CMND
               PERFORM GAR-FIO-GTP
               IF NOT FIO-STAT-OKS OR
                  GTP-COD-TASN IN GTP NOT = GAR-KEY-IGVT-FIN IN CMA-VARI
                   MOVE 'GTP    NEX' TO MSG-COD-MENS
                   GO TO ERR-FND-KEY
               ELSE
                   MOVE FIO-GET-PRV TO FIO-CMND
                   GO TO LEE-GTP
*% ELSE
               MOVE CMA-INI TO CMA-ACT
               SUBTRACT 1 FROM GAR-COD-ITSN-ACT IN CMA-ACT
      *
               MOVE CMA-ACT TO GTP-KEY-IGTP IN GTP
               MOVE FIO-GET-NLS TO FIO-CMND
               GO TO LEE-GTP
*% END
           ELSE
           IF FRM-FFLD = FRM-FFLD-PF6
               MOVE PGM-SNUL TO PGM-STAT-GDG
               MOVE PGM-SNUL TO PGM-STAT-GVT
               MOVE 'N'      TO CMA-1VEZ

               MOVE CMA-FIN TO GTP-KEY-IGTP IN GTP
               MOVE FIO-GET-NLS TO FIO-CMND
               PERFORM GAR-FIO-GTP
               IF NOT FIO-STAT-OKS OR
                  GTP-COD-TASN IN GTP NOT = GAR-KEY-IGVT-FIN IN CMA-VARI
                   MOVE 'GTP    NEX' TO MSG-COD-MENS
                   GO TO ERR-FND-KEY
               ELSE
                   MOVE FIO-GET-NXT TO FIO-CMND
                   GO TO LEE-GTP.
*% END
      * Inicializa llaves inicial y final de pantalla
           MOVE SPACES TO CMA-INI, CMA-FIN.
           MOVE 'S' TO CMA-1VEZ.
*% IF PGM_VAX
           MOVE SPACES TO GVT.
           MOVE SPACES TO GTP.
           MOVE SPACES TO CMA-ACT.
*% END
*% IF NOT PGM_MCP1
           MOVE FRM-FFLD-PF6 TO FRM-FFLD.
*% END
           MOVE ZEROES TO WSS-SUM-ITM, WSS-SUM-VAL.

           MOVE GVT-CAI-GTIA IN QHP-FLD TO GDG-CAI-GTIA IN GDG.
           MOVE GVT-IIC-GTIA IN QHP-FLD TO GDG-IIC-GTIA IN GDG.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM GAR-FIO-GDG.
           MOVE FIO-STAT TO PGM-STAT-GDG.
           IF NOT FIO-STAT-OKS
               MOVE 'GDG    NEX' TO MSG-COD-MENS
               GO TO ERR-FND-KEY.
       LEE-PAD-GVT.

      *Busca ultima gvt
           IF GVT-COD-TASN IN QHP-FLD NOT > ZEROES
               MOVE GDG-COD-TSCN IN GDG TO GVT-COD-TASN IN QHP-FLD.
      *>>>>
*% END
*% IF FIN_FND_KEY
      *<<<< FIN_FND_KEY

           IF NOT FIO-STAT-OKS
               MOVE 'GVT    NEX' TO MSG-COD-MENS
               GO TO ERR-FND-KEY.


           MOVE GVT-KEY-IGVT IN GVT TO GAR-KEY-IGVT-FIN IN CMA-VARI.
           MOVE GVT-KEY-IGVT IN GVT TO GAR-KEY-IGVT-INI IN CMA-VARI.
                                        
*% IF PGM_VAX
           MOVE GVT-KEY-IGVT IN GVT TO GAR-KEY-IGVT-ACT IN CMA-VARI.
*% END
           MOVE GVT-KEY-IGVT IN GVT TO GAR-KEY-IGVT IN WSS-IGTP.
           MOVE ZEROES              TO GAR-COD-ITSN IN WSS-IGTP.

           MOVE GAR-KEY-IGVT IN WSS-IGTP TO GTP-KEY-IGTP IN GTP.
           MOVE FIO-GET-NLS TO FIO-CMND.
       LEE-GTP.
           PERFORM GAR-FIO-GTP.

           IF ( NOT FIO-STAT-OKS OR 
                GTP-COD-TASN IN GTP NOT = GAR-KEY-IGVT-FIN IN CMA-VARI )
                AND CMA-1VEZ = 'S'
               MOVE 'GTP    NEX' TO MSG-COD-MENS
*% IF NOT PGM_MCP1
               GO TO ERR-FND-KEY
*% ELSE
               GO TO ERR-FND-KEY.
*% END
*% IF NOT PGM_MCP1
           ELSE
           IF FRM-FFLD = FRM-FFLD-PF5 AND
              ( NOT FIO-STAT-OKS OR 
                GTP-COD-TASN IN GTP NOT = GAR-KEY-IGVT-FIN IN CMA-VARI)
               MOVE 'GTP    NOPRV' TO MSG-COD-MENS
               GO TO ERR-FND-KEY
           ELSE
           IF FRM-FFLD = FRM-FFLD-PF6 AND
              ( NOT FIO-STAT-OKS OR 
                GTP-COD-TASN IN GTP NOT = GAR-KEY-IGVT-FIN IN CMA-VARI )
               MOVE 'GTP    NONXT' TO MSG-COD-MENS
               GO TO ERR-FND-KEY.
*% END

       CARGA-GTP.
      *    Inicializa posicion del indice del grupo de ocurrencias
*% IF NOT PGM_MCP1
           IF FRM-FFLD = FRM-FFLD-PF6
               MOVE ZEROES TO FRM-IFLD
           ELSE
               ADD 1 , WSS-IMAX GIVING FRM-IFLD.
*% END

           MOVE SPACES TO FRM-MENS.
           MOVE SPACES TO MSG-GLS-DESC.
           PERFORM PUT-TAB-GTP.

*% IF PGM_MCP
      *<<<< PGM_MCP
      *RRM-INI 27-SEP-2002
           IF SYS-IND-AMBI = SYS-IND-AMBI-PPMTX
              MOVE SPACES TO FRM-FFLD 
              IF FRM-IFLD-MTX > WSS-IMAX-MTX
                 MOVE 'MTX   CONNXT' TO MSG-COD-MENS
                 GO TO ERR-FND-KEY
              ELSE
                 MOVE SPACES TO MSG-COD-MENS.
      *RRM-FIN 27-SEP-2002
      *>>>>
*% END

*% IF NOT PGM_MCP1
           IF CMA-POS-ACT = ZEROES AND
               FRM-FFLD = FRM-FFLD-PF5
               MOVE 'GTP    NOPRV' TO MSG-COD-MENS
               GO TO ERR-FND-KEY
           ELSE
           IF CMA-POS-ACT = ZEROES AND
               FRM-FFLD = FRM-FFLD-PF6
               MOVE 'GTP    NONXT' TO MSG-COD-MENS
               GO TO ERR-FND-KEY.

           IF FRM-FFLD = FRM-FFLD-PF6
               ADD 1 TO FRM-IFLD
               PERFORM LIM-RES-LIN UNTIL FRM-IFLD > WSS-IMAX.
*% END

      * Mueve acumuladores a qhp-fld
           MOVE WSS-SUM-ITM TO FRM-SUM-ITM IN QHP-FLD.
           MOVE WSS-SUM-VAL TO FRM-SUM-VAL IN QHP-FLD.

           IF MSG-COD-MENS > SPACES
               MOVE 'GAR' TO FIO-SIST
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS.

           MOVE '00' TO FIO-STAT.
           GO TO FIN-FND-KEY.

       ERR-FND-KEY.
           MOVE 'GAR' TO MSG-COD-SIST.
           PERFORM GET-MSG.
           MOVE MSG-GLS-DESC TO FRM-MENS.
           MOVE SCR-STAT-CON TO SCR-STAT.
           MOVE '00' TO FIO-STAT.
           GO TO FIN-FND-KEY.
      *>>>>
      *>>>>
*% END
*% IF PFS_SCR_ACC
      *<<<< PFS_SCR_ACC
           IF FRM-FFLD = FRM-FFLD-PF6
                    OR   FRM-FFLD-PF5
               PERFORM VAL-NUM-KEY-QHP
               PERFORM VAL-NUM-FLD-QHP
               PERFORM RST-STAT
               PERFORM FND-SCR-KEY THRU FIN-SCR-KEY
               IF SCR-STAT NOT = SCR-STAT-ABT
                   PERFORM SCR-TRL
               ELSE
                   PERFORM DESSCRTRL
                   GO TO FIN-SCR-ACC.
      *>>>>
*% END
*% IF PFS_SCR_GFLD                                            
      *<<<< PFS_SCR_GFLD                                            
           IF NOT ( ( SCR-CCPP = 'MOD' OR SCR-CCPP = 'ACC' OR            
                SCR-CCPP = 'ELI' OR                                           
              ( SCR-CCPP = 'ACT' AND SCR-ACTU = SCR-ACTU-MOD ) )            
              AND ( FRM-FFLD = FRM-FFLD-PF6                                 
                   OR FRM-FFLD-PF5) )                      
      *>>>>                                       
*% END                  
*% IF PFS_GET_CON OR PFS_GET_ACC                              
      *<<<< PFS_GET_CON OR PFS_GET_ACC                              
           IF NOT ( FRM-FFLD = FRM-FFLD-PF6                              
               OR FRM-FFLD-PF5)                      
      *>>>>                                                         
*% END
*% IF EOF
      *<<<< EOF
       RST-STAT SECTION.                                             
       INI-RST-STAT.                                                 
           MOVE SCR-STPP TO SCR-STAT.                                    
           MOVE SCR-MFLD-NOT TO SCR-MFLD.                                
       FIN-RST-STAT.                                                 
           EXIT.                                                         
      *>>>>                                                         
*% END
*% IF EOF
      *<<<< EOF
       PUT-TAB-GTP SECTION.
       INI-PUT-TAB-GTP.

           ADD 1 TO CMA-POS-ACT.
*% IF NOT PGM_MCP1
           IF FRM-FFLD = FRM-FFLD-PF6
               GO TO PUT-PF6.
*% END
           SUBTRACT 1 FROM FRM-IFLD.
           IF FRM-IFLD = 1
               MOVE GTP-COD-ITSN IN GTP TO 
                    GAR-COD-ITSN-INI IN CMA-INI
           ELSE
               IF FRM-IFLD = WSS-IMAX
                   MOVE GTP-COD-ITSN IN GTP TO 
                        GAR-COD-ITSN-FIN IN CMA-FIN.
           GO TO MOV-FLD.

       PUT-PF6.
*% IF PGM_MCP
      *<<<< PGM_MCP
      *RRM-INI 30-SEP-2002
      *    ADD 1 TO FRM-IFLD.
           IF SCR-OFRM-SRV
               MOVE 1 TO FRM-IFLD
               ADD  1 TO FRM-IDX-IFLD
           ELSE
               ADD  1 TO FRM-IFLD.

           IF FRM-IDX-IFLD > WSS-IMAX-MTX
               GO TO FIN-PUT-TAB-GTP.
      *RRM-INI 30-SEP-2002
      *>>>>
*% END

           IF CMA-1VEZ = 'S' AND CMA-POS-ACT > WSS-IMAX
      *    Solo acumula, sin desplegar
               GO TO DSPL-O-ACUM.

*% IF NOT PGM_MCP
      *<<<< NOT PGM_MCP
           ADD 1 TO FRM-IFLD.
      *>>>>
*% END
           IF FRM-IFLD = 1
               MOVE GTP-COD-ITSN IN GTP TO 
                    GAR-COD-ITSN-INI IN CMA-INI

               MOVE GTP-COD-ITSN IN GTP TO 
                    GAR-COD-ITSN-FIN IN CMA-FIN
           ELSE
           IF FRM-IFLD NOT > WSS-IMAX
               MOVE GTP-COD-ITSN IN GTP TO 
                    GAR-COD-ITSN-FIN IN CMA-FIN.
       MOV-FLD.
      *PTC-INI-MAN                    
           IF SCR-OFRM-SRV            
              MOVE 1 TO FRM-IFLD.     
      *PTC-FIN-MAN                    

           MOVE GTP-COD-ITSN IN GTP TO
                    FRM-COD-ITSN IN QHP-FLD(FRM-IFLD).

           MOVE GTP-COD-IITS IN GTP TO
                    FRM-COD-IITS IN QHP-FLD(FRM-IFLD).

           MOVE GTP-SGV-ITSN IN GTP TO
                    FRM-SGV-ITSN IN QHP-FLD(FRM-IFLD).

           MOVE GTP-SGV-VTSN IN GTP TO
                    FRM-SGV-VTSN IN QHP-FLD(FRM-IFLD).

           MOVE GTP-NUM-SCES  IN GTP TO
                    FRM-NUM-SCES IN QHP-FLD(FRM-IFLD).
           MOVE GTP-NUM-ACES  IN GTP TO
                    FRM-NUM-ACES IN QHP-FLD(FRM-IFLD).
           MOVE GTP-NUM-MCES  IN GTP TO
                    FRM-NUM-MCES IN QHP-FLD(FRM-IFLD).
           MOVE GTP-NUM-DCES  IN GTP TO
                    FRM-NUM-DCES IN QHP-FLD(FRM-IFLD).


      *BUS-TAB busca glosa de codigo en tabla
           IF GTP-COD-EITS IN GTP > SPACES
               MOVE 'GAR' TO TAB-COD-SIST
               MOVE 'ES1' TO TAB-COD-TTAB IN TAB
               MOVE GTP-COD-EITS IN GTP TO TAB-COD-CTAB IN TAB
               PERFORM BUS-TAB
               MOVE TAB-GLS-DCOR IN TAB TO
                    FRM-GLS-EITS IN QHP-FLD(FRM-IFLD)
           ELSE
               MOVE SPACES TO FRM-GLS-EITS IN QHP-FLD(FRM-IFLD).

       DSPL-O-ACUM.
           IF CMA-1VEZ NOT = 'S'
               GO TO NXT-PUT-TAB-GTP.

           IF GTP-COD-EITS IN GTP > '09' AND
              GTP-COD-EITS IN GTP < '20'

               ADD 1 TO WSS-SUM-ITM
               COMPUTE WSS-SUM-VAL = WSS-SUM-VAL +
                                     GTP-SGV-ITSN IN GTP *
                                     GTP-SGV-VTSN IN GTP.

       NXT-PUT-TAB-GTP.

*% IF PGM_MCP
      *<<<< PGM_MCP
      *RRM-INI 27-SEP-2002
           IF SYS-IND-AMBI = SYS-IND-AMBI-PPMTX
               PERFORM PUT-MTX-IDX-QHP
               MOVE FIO-GET-NXT TO FIO-CMND
               GO TO NXT-PUT-TAB-GTP-MTX.
      *RRM-FIN 27-SEP-2002
      *>>>>
*% END
*% IF NOT PGM_MCP1
           IF FRM-FFLD = FRM-FFLD-PF5 
               IF FRM-IFLD > 1
*% IF PGM_VAX AND NOT UNI_HIJ_ALF
                   SUBTRACT 1 FROM GAR-COD-ITSN-ACT

                   MOVE CMA-ACT     TO GTP-KEY-IGTP IN GTP
                   MOVE FIO-GET-KEY TO FIO-CMND
*% ELSE
                   MOVE FIO-GET-PRV TO FIO-CMND
*% END
               ELSE
                   GO TO FIN-PUT-TAB-GTP
           ELSE
*% END
           IF CMA-1VEZ NOT = 'S'
               IF FRM-IFLD < WSS-IMAX
                   MOVE FIO-GET-NXT TO FIO-CMND
               ELSE
                   GO TO FIN-PUT-TAB-GTP
           ELSE
               MOVE FIO-GET-NXT TO FIO-CMND.

      *RRM-INI 27-SEP-2002
       NXT-PUT-TAB-GTP-MTX.
      *RRM-FIN 27-SEP-2002
      *PTC-INI-MAN                                             
           IF SCR-OFRM-SRV                                     
              ADD 1 TO WSS-IDX-QHP                             
              MOVE FRM-COD-ITSN IN QHP-FLD(1) TO            
                   WSS-COD-ITM-TSN IN WSS-TAB-QHP(WSS-IDX-QHP) 
              MOVE FRM-COD-IITS IN QHP-FLD(1) TO            
                   WSS-IDN-ITM-TSN IN WSS-TAB-QHP(WSS-IDX-QHP) 
              MOVE FRM-SGV-ITSN IN QHP-FLD(1) TO            
                   WSS-CTD-ITM-TSN IN WSS-TAB-QHP(WSS-IDX-QHP) 
              MOVE FRM-SGV-VTSN IN QHP-FLD(1) TO            
               WSS-VAL-UNT-ITM-RED IN WSS-TAB-QHP(WSS-IDX-QHP) 
              MOVE FRM-FEC-FCES IN QHP-FLD(1) TO            
                   WSS-FEC-CMB-EST IN WSS-TAB-QHP(WSS-IDX-QHP) 
              MOVE FRM-GLS-EITS IN QHP-FLD(1) TO            
                   WSS-GLS-EST-ITM IN WSS-TAB-QHP(WSS-IDX-QHP).
      *PTC-FIN-FIN                                             

           PERFORM GAR-FIO-GTP.
           MOVE GTP-KEY-IGTP IN GTP TO GAR-KEY-IGVT IN WSS-VARI.
           IF FIO-STAT-OKS AND
               GAR-KEY-IGVT-FIN IN CMA-VARI = GAR-KEY-IGVT IN WSS-IGTP
               GO TO INI-PUT-TAB-GTP.
      *PTC-INI-MAN                  
           IF SCR-OFRM-SRV          
              PERFORM PUT-TAB-QHP.  
       FIN-PUT-TAB-GTP-PTC.         
      *PTC-FIN-MAN                  

       FIN-PUT-TAB-GTP.
           EXIT.

       LIM-RES-LIN SECTION.
       INI-LIM-RES-LIN.
           MOVE SPACES TO FRM-COD-IITS IN QHP-FLD(FRM-IFLD), 
                          FRM-GLS-EITS IN QHP-FLD(FRM-IFLD).

           MOVE ZEROES TO FRM-COD-ITSN IN QHP-FLD(FRM-IFLD), 
                          FRM-SGV-ITSN IN QHP-FLD(FRM-IFLD), 
                          FRM-SGV-VTSN IN QHP-FLD(FRM-IFLD), 
                          FRM-NUM-SCES IN QHP-FLD(FRM-IFLD), 
                          FRM-NUM-ACES IN QHP-FLD(FRM-IFLD), 
                          FRM-NUM-MCES IN QHP-FLD(FRM-IFLD), 
                          FRM-NUM-DCES IN QHP-FLD(FRM-IFLD).
           ADD 1 TO FRM-IFLD.
       FIN-LIM-RES-LIN.
           EXIT.


*% IF PGM_MCP
*% END
       COPY GARBFGDG.
       COPY GARBFGTP.
       COPY GARBFTAG.
      *PTC-INI-MAN                                
       PUT-TAB-QHP SECTION.                       
       INI-PUT-TAB-QHP.                           
           MOVE WSS-NOM-TSQHP  TO QUE-COLA.        
           MOVE QUE-DEL        TO QUE-CMND.        
           PERFORM GNS-PRO-QUE.                    
                                                  
           MOVE WSS-NOM-TSQHP  TO QUE-COLA.       
           MOVE WSS-LEN-TSQHP  TO QUE-LITM.       
           MOVE WSS-TAB-QHP    TO QUE-ITEM.       
           MOVE QUE-PUT        TO QUE-CMND.       
           PERFORM GNS-PRO-QUE.                   
       FIN-PUT-TAB-QHP.                           
           EXIT.                                  
                                                  
      *PTC-FIN-MAN                                
      *>>>>
*% END
