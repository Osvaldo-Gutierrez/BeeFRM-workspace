*%! NO_TIENE_TIMESTAMP = TRUE
*%! NO_HDR_CST = TRUE
*% PGM_GDG = TRUE
*% PGM_PTC = TRUE
*% FMT_CHI = TRUE
*% GEN_BCI = TRUE
*% VSNPQ = "06.06.22"
*% FNCPQ = "OWFBGL"
*% VSNPU = "06.06.22"
*% FNCPU = "OWFBGL"
*% IF NOT PGM_BFA
*% LDC_SI = TRUE
*% ELSE
*% LDC_SI = FALSE
*% END
*% IF LDC_SI AND PGM_MVS 
*% LARGO_TOTAL_COMMAREA = 780
*% ELSE
*% LARGO_TOTAL_COMMAREA = 430
*% END
*%! LARGO_TOTAL_COMMAREA = 783
*% IF PGM_MVS
*% LARGO_TOTAL_COMMAREA = 1200
*% ELSE
*% LARGO_TOTAL_COMMAREA = 785
*% END
*%! 
*%!ISP+FLB ==================================
*%!ISP+FLB AQUI EMPIEZA EL CODIGO DE ENGANCHE
*%!ISP+FLB ==================================
*% IF LDC_SI AND PGM_MVS AND FIN_SCR_VARI
      *<<<<  LDC_SI AND PGM_MVS AND FIN_SCR_VARI
       COPY LDCWGENG.
           03 SCR-CLF     VALUE SPACES            PIC X(64).
           03 SCR-LDC     VALUE SPACES            PIC X(100).
           03 SCR-ARG     VALUE SPACES            PIC X(50).
      *>>>>
*% END
*% IF LDC_SI AND PGM_MVS AND WSS 
      *<<<< LDC_SI AND PGM_MVS AND WSS 
      *PTC-INI-MAN
      *PTC-SUB
       COPY BGLWXGDG.
       COPY BGLMXW01.
      *PTC-FIN-MAN

       COPY LDCWGPMP.
      *>>>> WSS 
*% END
*% IF LDC_SI AND PGM_MVS AND FIN_SCR_TRL
      *<<<< LDC_SI AND PGM_MVS AND FIN_SCR_TRL
           IF SCR-IND-ENG IN SCR-VEC-ENG(SCR-IPRO) = 'S'
               MOVE 'F10GDGNINFIA' TO MSG-COD-MENS
               PERFORM MSG-PF10.
      *>>>>
*% END
*% IF LDC_SI AND PGM_MVS AND INI_PRO_CONF
      *<<<< ISP-INI  24-JAN-1996 11:35:48 
           IF SCR-OFRM-SRV
               IF SCR-CONF NOT > SPACES
                   GO TO FIN-PRO-CONF.
      *<<<< ISP-FIN  24-JAN-1996 11:35:48 
      *<<<< LDC_SI AND PGM_MVS AND INI_PRO_CONF
           IF SCR-IND-ENG IN SCR-VEC-ENG(SCR-IPRO) = 'S'
               MOVE 'F10GDGSINFIA' TO MSG-COD-MENS
               PERFORM MSG-PF10.
      *>>>>
*% END
*% IF LDC_SI AND PGM_MVS AND ( FIN_SCR_GIKY OR FIN_SCR_GCNF OR FIN_SCR_GFLD )
      *<<<< LDC_SI AND PGM_MVS AND (FIN_SCR_GIKY OR FIN_SCR_GCNF OR FIN_SCR_GFLD
           IF FRM-FFLD = FRM-FFLD-PF3 AND
              SCR-IND-ENG IN SCR-VEC-ENG(SCR-IPRO) = 'S' 
      *       AND SCR-IND-COL = 'C'
               PERFORM EGR-FTER-CIC.
      *>>>>
*% END
*% IF LDC_SI AND PGM_MVS AND FIN_CMN_ING 
      *<<<< LDC_SI AND PGM_MVS AND FIN_CMN_ING
*% IF GEN_BCI
      *<<<< GEN_BCI
      * PTC-INI-MAN
           IF SCR-OFRM-SRV AND
              FIO-STAT-OKS
               MOVE TSK-TERM-ALF TO WXGDG-FIGA-COD-TERM
               MOVE WXGDG-FIGA-COLA TO QUE-COLA
               MOVE WXGDG-FIGA-LITM TO QUE-LITM
               MOVE GDG-KEY-IGDG IN GDG TO QUE-ITEM
               MOVE QUE-PUT TO QUE-CMND
               PERFORM GNS-PRO-QUE.
      * PTC-FIN-MAN
      *>>>>
*% END
           IF SCR-IND-ENG IN SCR-VEC-ENG(SCR-IPRO) = 'S' 
                PERFORM EGR-FPEN-CIC.
      *>>>>
*% END
*% IF LDC_SI AND PGM_MVS AND INI_FIO AND PGM_BMS
      *<<<< LDC_SI AND PGM_MVS AND INI_FIO AND PGM_BMS
*% IF GEN_BCI
      *<<<< GEN_BCI
      *PTC ini
           PERFORM GNS-ERR-QUE.
      *PTC fin
*% IF PGM_PU
      *<<<< PGM_PU
      *PTC-INI-MAN
      *     IF SCR-OFRM-SRV
      * ESTA ANTES DE OBTENER CMMA
              MOVE TSK-TERM-ALF TO WSX-COD-TERM.
      *PTC-FIN-MAN
      *>>>>
*% END
      *LOP-INI 12-12-2002
           MOVE SPACES TO WSS-IND-ALZA IN WSS-VARI.
           IF SCR-CMND ='ALS'
              MOVE 'ALZ' TO SCR-CMND
              MOVE 'ALS' TO WSS-IND-ALZA IN WSS-VARI.
      *LOP-FIN 12-12-2002
           IF SCR-CMND = 'ALZ'
               MOVE 'BGL'       TO FIO-SIST
               MOVE 'VSN '      TO TAB-COD-TTAB IN TAB
               MOVE 'ALZDAPESP' TO TAB-COD-CTAB IN TAB
               MOVE FIO-GET-KEY TO FIO-CMND
               PERFORM GNS-FIO-TAB
               IF FIO-STAT-OKS
                   MOVE TAB-IND-VIGE IN TAB TO WSS-ALZ-DAP IN WSS-VARI
               ELSE
                   MOVE 'N' TO WSS-ALZ-DAP IN WSS-VARI.
      *>>>>
      *<<<< LDC_SI AND PGM_IBM AND INI_FIO AND PGM_BMS
      *<<<< ISP-INI  24-JAN-1996 11:35:48 
           IF SCR-OFRM-SRV
              MOVE WSS-IDX-IGDG TO SCR-IPRO
           ELSE
      *<<<< ISP-FIN  24-JAN-1996 11:35:48 
*% END
           IF SCR-DESDE-CMN
               MOVE SPACES TO SCR-VEC-ENG
               MOVE 1 TO SCR-IPRO
               GO TO FIN-INI-FIO.

           IF SCR-INST-EXT = WSS-INST-FPEN-CIC
               MOVE WSS-INST-NULL TO SCR-INST-EXT
               MOVE 'GNS' TO MSG-COD-SIST
               MOVE 'FLDING' TO MSG-COD-MENS
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO SCR-MENS-EXT
               PERFORM ING-FPEN-CIC.
       FIN-INI-FIO.
      *>>>>
*% END
*% IF LDC_SI AND PGM_MVS AND FIN_HBL_IKY
      *<<<< LDC_SI AND PGM_MVS AND FIN_HBL_IKY
           IF SCR-IND-ENG IN SCR-VEC-ENG(SCR-IPRO) = 'S'
               PERFORM HBL-KEY-GDG.

           MOVE FRM-CPIM-AEY TO GDG-CAI-GTIA-ATR IN GDG-FLD.
           MOVE FRM-CPIM-AEY TO GDG-CAI-GTIA-STP.

           MOVE FRM-CPIM-AEY TO GDG-IIC-GTIA-ATR IN GDG-FLD.
           MOVE FRM-CPIM-AEY TO GDG-IIC-GTIA-STP.

           MOVE +0           TO GDG-CAI-GTIA-LEN IN GDG-FLD.
*% IF FMT_CHI
      *<<<< FMT_CHI

           MOVE -1           TO GDG-TIP-CGTA-LEN IN GDG-FLD.
      *>>>>
*% ELSE
           MOVE -1           TO GDG-COD-CGTA-LEN IN GDG-FLD.
*% END
      *>>>>
*% END
*% IF PGM_MCP AND FIN_HBL_IKY
      *<<<<
           MOVE FRM-CPIM-AEY TO GDG-CAI-GTIA-ATR IN GDG-FLD.
           MOVE FRM-CPIM-AEY TO GDG-CAI-GTIA-STP.

           MOVE FRM-CPIM-AEY TO GDG-IIC-GTIA-ATR IN GDG-FLD.
           MOVE FRM-CPIM-AEY TO GDG-IIC-GTIA-STP.
*% IF FMT_CHI
      *<<<< FMT_CHI
           MOVE FRM-POS-CURS TO GDG-TIP-CGTA-LEN IN GDG-FLD.
      *>>>>
*% ELSE
           MOVE FRM-POS-CURS TO GDG-COD-CGTA-LEN IN GDG-FLD.
*% END
      *>>>>
*% END
*% IF LDC_SI AND PGM_MVS AND EOF
      *<<<< LDC_SI AND PGM_MVS AND EOF
       MSG-PF10 SECTION.
       INI-MSG-PF10.
           MOVE 'DEU' TO MSG-COD-SIST.
           PERFORM GET-MSG.
           MOVE MSG-GLS-DESC TO FRM-MEN2.
           MOVE FRM-MEN2     TO GDG-GLS-MEN2 IN GDG-FLD.
       FIN-MSG-PF10.
           EXIT.

       HBL-KEY-GDG SECTION.
       INI-HBL-KEY-GDG.
           MOVE SCR-INST-GKY TO SCR-INST.
           MOVE FRM-CPIM-AEY TO GDG-CAI-GTIA-ATR IN GDG-FLD.
           MOVE FRM-CPIM-AEY TO GDG-CAI-GTIA-STP.

           MOVE FRM-CPIM-AEY TO GDG-IIC-GTIA-ATR IN GDG-FLD.
           MOVE FRM-CPIM-AEY TO GDG-IIC-GTIA-STP.
*% IF GEN_BCI
      *<<<< GEN_BCI
      *<<<< ISP-INI  24-JAN-1996 11:35:48 
      * EN MTX DEBE CAPTURAR LLAVES DE USUARIO EN PANTALLA
           IF SCR-OFRM-SRV
               MOVE SCR-NMAP TO FRM-NAME
               MOVE SCR-NLIB TO FRM-NLIB
               MOVE FRM-GET-ALL TO FRM-CMND
               PERFORM GNS-PRO-FRM
               MOVE FRM-DFLD TO GDG-FLD
               PERFORM VAL-NUM-KEY-GDG
               PERFORM VAL-NUM-FLD-GDG
           ELSE
      *>>>> ISP-INI  24-JAN-1996 11:35:48 
      *>>>>
*% END
           PERFORM SCR-CLRA-GDG.
      * 
           MOVE PGM-NO-LIMPIAR-NADA TO PGM-ICLR.

           MOVE SCR-CAI-IGAR IN SCR-VARI TO GDG-CAI-GTIA IN GDG-FLD.
           MOVE SCR-IIC-IGAR IN SCR-VARI TO GDG-IIC-GTIA IN GDG-FLD.

           MOVE +4           TO GDG-CAI-GTIA-LEN IN GDG-FLD.
*% IF FMT_CHI
      *<<<< FMT_CHI
           MOVE FRM-POS-CURS TO GDG-TIP-CGTA-LEN IN GDG-FLD.
      *>>>>
*% ELSE
           MOVE FRM-POS-CURS TO GDG-COD-CGTA-LEN IN GDG-FLD.
*% END
      *
           PERFORM EDT-KEY-GDG.
           PERFORM EDT-FLD-GDG.
           MOVE 'F10GDGNINFIA' TO MSG-COD-MENS.
           PERFORM MSG-PF10.
*% IF GEN_BCI
      *<<<< GEN_BCI
      *<<<< ISP-INI  24-JAN-1996 11:35:48 
      * BAJO MTX DEBE REGRABAR PANTALLA Y LLAMAR A SCR-ING

           IF SCR-OFRM-SRV
           IF SCR-IND-FST IN SCR-VEC-FST(SCR-IPRO) = 'S'

               MOVE GDG-FLD TO FRM-DFLD

      * INI - COPY - GNSBGFRM
               MOVE SCR-OTRN TO QUE-TERM
               MOVE 'TSI'    TO QUE-TYPE
               MOVE 1        TO QUE-NITM
               MOVE +2014    TO QUE-LITM
               MOVE QUE-DEL  TO QUE-CMND
               PERFORM GNS-PRO-QUE
               MOVE SCR-OTRN TO QUE-TERM
               MOVE 'TSI'    TO QUE-TYPE
               MOVE 1        TO QUE-NITM
               MOVE +2014    TO QUE-LITM
               MOVE FRM-DFLD TO FRM-AUXI
      * NO DEBE GRABAR TSI EN FORMATO MTX, SI NO QUE EN FORMATO
      * PROGRAMA. ESTE PROGRAMA RELEERA TSI SIN PASAR POR MTX
      *         MOVE MSG-COD-MENS TO FRM-COD-MENS
      *         MOVE FRM-MENS     TO FRM-GLS-MENS
      *         MOVE FRM-AUXI     TO FRM-DATA
      *         MOVE FRM-NAME TO FRM-NAME-IDEN
               MOVE FRM-DFLD TO QUE-DATA
               MOVE QUE-PUT  TO QUE-CMND
               PERFORM GNS-PRO-QUE
      * FIN - COPY - GNSBGFRM

               PERFORM SCR-ING.
      *<<<< ISP-INI  24-JAN-1996 11:35:48 
      *>>>>
*% END
           IF SCR-IND-FST IN SCR-VEC-FST(SCR-IPRO) = 'S'
               MOVE SPACES TO SCR-IND-FST IN SCR-VEC-FST(SCR-IPRO)
               PERFORM SCR-INIT
               PERFORM SCR-EXIT
           ELSE
*% IF GEN_BCI
      *<<<< GEN_BCI
      *<<<< ISP-INI  24-JAN-1996 11:35:48 
           IF SCR-OFRM-SRV
                EXEC CICS
                 RETURN
                END-EXEC.
      *<<<< ISP-FIN  24-JAN-1996 11:35:48 
      *>>>>
*% END
               PERFORM SCR-PUTA.
       FIN-HBL-KEY-CLF.
           EXIT.

      *  CODIGO ADICIONAL PARA ENGANCHE PROGRAMAS
       ING-FPEN-CIC SECTION.
       INI-ING-FPEN-CIC.
           PERFORM ING-SETE.
           PERFORM SCR-CLRA-GDG.
           MOVE SCR-MENS-EXT TO GDG-GLS-MENS.
           PERFORM HBL-IKY.
       FIN-ING-FPEN-CIC.
           EXIT.

       ING-SETE SECTION.
       INI-ING-SETE.
           PERFORM CRG-TBL-ENG.
           MOVE WSS-NTRN(SCR-IPRO)     TO SCR-NTRN.
           MOVE WSS-PROG(SCR-IPRO)     TO SCR-PROG.
           MOVE WSS-NMAP(SCR-IPRO)     TO SCR-NMAP.
           MOVE WSS-NLIB(SCR-IPRO)     TO SCR-NLIB.

           MOVE WSS-NTRV(SCR-IPRO)     TO SCR-NTRV.
           MOVE WSS-PROV(SCR-IPRO)     TO SCR-PROV.
       FIN-ING-SETE.
           EXIT.

       EGR-FPEN-CIC SECTION.
       INI-EGR-FPEN-CIC.
           PERFORM CRG-TBL-ENG.
           ADD 1 TO SCR-IPRO.
           IF SCR-IPRO > WSS-TOT-IIDX
                  PERFORM EGR-FTER-CIC
                  GO TO FIN-EGR-FPEN-CIC.
           IF SCR-IND-ENG IN SCR-VEC-ENG(SCR-IPRO) = SPACES
               GO TO INI-EGR-FPEN-CIC.

           MOVE WSS-INST-FPEN-CIC TO SCR-INST-EXT.
           MOVE WSS-PROG(SCR-IPRO) TO SYS-PROG.
           MOVE SCR-VARI TO SYS-CMMA.
           MOVE SCR-TCMA TO SYS-TCMA.
           MOVE SYS-XCTL TO SYS-CMND.
*% IF GEN_BCI
      *<<<< GEN_BCI
      *<<<< ISP-INI  24-JAN-1996 11:35:48 
           IF SCR-OFRM-SRV
               MOVE WSS-IDX-IGDG TO SCR-IPRO
           ELSE
      *>>>> ISP-FIN  24-JAN-1996 11:35:48 
      *>>>>
*% END
           PERFORM GNS-PRO-SYS.
       FIN-EGR-FPEN-CIC.
           EXIT.

       EGR-FTER-CIC SECTION.
       INI-EGR-FTER-CIC.
           PERFORM CRG-TBL-ENG.
           MOVE WSS-IDX-ILDC TO SCR-IPRO.
           MOVE 'S' TO SCR-IND-ENG IN SCR-VEC-ENG(SCR-IPRO).
           MOVE 'S' TO SCR-IND-FST IN SCR-VEC-FST(SCR-IPRO).

           MOVE WSS-INST-FPEN-CIC TO SCR-INST-EXT.
           MOVE WSS-PROG(SCR-IPRO) TO SYS-PROG.

           MOVE SCR-VARI TO SYS-CMMA.
           MOVE SCR-TCMA TO SYS-TCMA.
           MOVE SYS-XCTL TO SYS-CMND.
*% IF GEN_BCI
      *<<<< GEN_BCI
      *<<<< ISP-INI  24-JAN-1996 11:35:48 
           IF SCR-OFRM-SRV
               MOVE WSS-IDX-IGDG TO SCR-IPRO
           ELSE
      *>>>> ISP-FIN  24-JAN-1996 11:35:48 
      *>>>>
*% END
           PERFORM GNS-PRO-SYS.
       FIN-EGR-FTER-CIC.
           EXIT.

       SCR-INIT SECTION.
       INI-SCR-INIT.
           MOVE 3  TO FRM-PLIN.
           MOVE 19 TO FRM-NLIN.
           MOVE FRM-CLR-FRM TO FRM-CMND.
           PERFORM GNS-PRO-FRM.
           MOVE FRM-SINI-DBNF TO FRM-SINI.
           MOVE SCR-NMAP TO FRM-NAME.
           MOVE SCR-NLIB TO FRM-NLIB.
           MOVE GDG-FLD TO FRM-DFLD.
           MOVE FRM-INI TO FRM-CMND.
           PERFORM GNS-PRO-FRM.
       FIN-SCR-INIT.
           EXIT.

       COPY LDCBGMPT.
      *>>>>
*% END
*% IF PGM_DTC AND PGM_UVS
*% INCLUDE 'BGLSRC:GNSVSIDTC.SRC'
*% END
*% IF NOT PGM_CLB AND NOT PGM_MEX AND PGM_PQ
*%   INCLUDE 'BGLSRC:PFSALLALL.SRC'
*% END
*% FRM = 'GDG'
*% PGM_HIJ = TRUE
*% PAD = 'DBC'
*% RPH = 'GDD'
*% HIJ = 'GDG'
*% REG = 'GDG'
*% KEYHIJ = 'GDG-IIC-GTIA'
*% PICHIJ = 'ZEROES'
*% PICPAD = 'ZEROES'
*% CAIREG = 'GDG-CAI-GTIA'
*% CAIFLD = 'GDG-CAI-GTIA'
*% IICREG = 'GDG-IIC-GTIA'
*% IICFLD = 'GDG-IIC-GTIA'
*% KEYHIJHIJ = 'GDG-KEY-IGDG'
*% KEYHIJRPH = 'GDD-KEY-AGDD'
*% KEYRPHRPH = 'GDD-KEY-IGDD'
*% KEYPADRPH = 'GDD-CIC-DCLI'
*% KEYPADPAD = 'DBC-KEY-IDBC'
*% ING_SBR_HIJ = FALSE
*% SISPAD = 'SGC'
*% SISHIJ = 'GDG'
*% SISREG = 'GDG'
*% KEYPAD = 'DBC-IDC-ICLI'
*% KEYPADALT = 'DBC-GLS-NOMC'
*% SCRKEYALT = 'NOM'
*% MNECORPAD = 'CLI'
*% UNS_FLD = TRUE 
*% COMMODACT = 'MGA'
*% ESTACT = 'AGA'
*% CMN_ACT_1 = TRUE
*% CMN_ACT_2 = TRUE
*% CMNACT1 = 'ALZ'
*% CMNACT2 = 'EJE'
*% IF FIN_SCR_VARI
      *<<<< CMAVARI OF PGMMAN
*% IF PGM_VMS
      *<<<< PGM_VMS
       01  SCR-VARI-AUX.
      *>>>>
*% END
           03 CMA-VARI.
              05 WSS-IND-CMUL                       PIC X(01).
              05 GAR-CIC-OFIC     VALUE '0000'      PIC X(04).
              05 SCR-IND-MGDD     VALUE SPACES      PIC X(01).
                 88 MULTIPLES-GDD      VALUE 'M'.

              05 DBC-KEY-IDBC.
                 07 DBC-CAI-ICLI  VALUE SPACES      PIC X(04).
                 07 DBC-IIC-ICLI  VALUE ZEROES      PIC 9(08).

              05 CMA-IND-KPAD     VALUE SPACES      PIC X(01).
              05 GAR-KEY-IGDD.
                 07 GAR-CIC-DCLI  VALUE SPACES      PIC X(12).
                 07 GAR-KEY-AGDD  VALUE SPACES      PIC X(12).
      *>>>>
      *<<<< FIN_SCR_VARI
              05 GAR-CAI-GTIA                        PIC X(04).
              05 GAR-IIC-GTIA                        PIC X(08).
              05 GAR-IND-GTAC                        PIC X(01).
              05 GAR-IND-EGAP                        PIC X(01).
              05 GAR-IND-SVTO                        PIC X(01).
              05 GAR-SGV-PPCT                        PIC S9(03)V9(02).
              05 GAR-SGV-PAJU                        PIC S9(03)V9(02).
              05 WSS-EST-ANT                         PIC X(02).
              05 WSS-ES1-1                           PIC X(02).
              05 WSS-ES1-2                           PIC X(02).
              05 WSS-ES1-3                           PIC X(02).
              05 WSS-ES1-4                           PIC X(02).
      *
              05 CMA-IND-DAP                         PIC X(01).
              05 FRM-CAI-IOPD                        PIC X(04).
              05 FRM-IIC-IOPD                        PIC X(08).
              05 SCR-IND-V001      VALUE SPACES      PIC X(01).
              05 CMA-CIC-TGAR                        PIC X(06).
              05 CMA-FEC-FAPE                        PIC X(08).
              05 CMA-FEC-FTSN                        PIC X(08).
              05 CMA-TIP-DOC                        PIC X(03).
              05 CMA-DOC-SALD           VALUE 0     PIC 9(13)V99.
      *
              05 CNE-GDD-CIC-ICLI.  
                 07 CNE-DBC-CAI-ICLI                PIC X(04).
                 07 CNE-DBC-IIC-ICLI                PIC X(08).
              05 CNE-DBC-GLS-NOMC                   PIC X(50). 
              05 CNE-GDG-CIC-ICLI.    
                 07 CNE-GDG-CAI-ICLI                PIC X(04).
                 07 CNE-GDG-IIC-ICLI                PIC X(08).
              05 CNE-GDG-GLS-NOMP                   PIC X(50).
              05 CMA-GLS-DISP                       PIC X(34).
              05 WSS-ES2-ANT                        PIC X(02).
      *MHM-INI 29-OCT-2003
              05 CMA-CIC-UING                       PIC X(12).
      *MHM-INI 29-OCT-2003
      ********************************
      *RET-STT-GDG. section aasteri
      ********************************
       01  SCR-VARI-RED REDEFINES SCR-VARI.
*% IF PGM_MVS
           03 SCR-DFH    OCCURS 1200 PIC X(01).
*% ELSE
           03 SCR-DFH    OCCURS 785 PIC X(01).
*% END
       77  WSS-LEYO-GORI       VALUE 'N'         PIC X(01).             
*% END
*% IF WSS
      *<<<< WSS
      *<<<< WSS OF PGMMAN
       01  PGM-VAR-ADIC.
           03 PGM-STAT-ADIC.
              05 PGM-STAT-GDD.
                 88 PGM-STAT-GDD-NUL VALUE '  '.
                 07 PGM-STT1-GDD        VALUE '2' PIC X(01).
                    88 PGM-STAT-GDD-OKS VALUE '0'.
                 07 PGM-STT2-GDD        VALUE '3' PIC X(01).
       01  WSS-VARI-GDG.                                                
           03 WSS-IND-ECRS             PIC X(01).                       
           03 WSS-IND-ECRT             PIC X(01).                       
                                                                        

       01  WSS-BUS-VARI.
           03 WSS-IBUS                 VALUE 0      PIC 9(01).
           03 WSS-IBUS-GDG           VALUE 0      PIC 9(01).
       01  WSS-GDD-VARI.
              03 WSS-MGDD              VALUE 0      PIC 9(01).
                 88 WSS-MISMO-GDD      VALUE 0.
                 88 WSS-OTRO-GDD       VALUE 1.
                 88 WSS-PRIMER-GDD     VALUE 2.
              03 WSS-MISMO               VALUE 0    PIC 9(01).
              03 WSS-OTRO                VALUE 1    PIC 9(01).
              03 WSS-PRIMER              VALUE 2    PIC 9(01).

      *COPY SGCWGICB.
       COPY SGCBRDBC.
       COPY BGLBRGDD.
      *MHM-INI 30-JUL-2003
       COPY BGLBRGDO.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-GDO-REQA==.
       COPY COLBROPC.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-OPC-REQA==.
       COPY COLBRDLC.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-DLC-REQA==.
      *MHM-FIN 30-JUL-2003
*% IF PGM_PU OR NOT NO_CIC_PQ
      *<<<< PGM_PU OR NOT NO_CIC_PQ
       COPY GNSBRCIC.
       COPY GNSWGCIC.
*% IF PGM_DTC
      *<<<< PGM_DTC
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-CIC-REQA==.
      *>>>>
*% END
      *>>>>
*% END
      *<<<< UNS_FLD
       COPY GNSWGCPT.
       COPY GNSWGSTR.
      *>>>>
*% IF PGM_DTC
      *<<<< PGM_DTC
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-GDD-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-DBC-REQA==.
      *>>>>
*% END
      *>>>>
       01  WSS-VARI.
      *EVA-AFRI/MAYO2006                                                
           03  WSS-EXT-PNTL                            PIC X(02).       
           03  WSS-I     VALUE ZEROES                  PIC 9(02).       
           03  WSS-GLS-DATA.                                            
               05  WSS-VEC-PNTL OCCURS 20 TIMES.                        
                   07 WSS-COD-PNTL                     PIC X(03).       
      *EVA-AFRI/JUN2006                                                 
           03  PTT-COD-PTLL                            PIC X(06).       
           03  PTT-EXT-PNTL   VALUE 'NO'               PIC X(02).       
           03  PTT-I     VALUE ZEROES                  PIC 9(02).       
           03  PTT-GLS-DATA.                                            
               05  PTT-VEC-PNTL OCCURS 10 TIMES.                        
                   07 PTT-COD-PNTL                     PIC X(06).       
      *FIN-AFRI/MAYO2006                                                
           03 WSS-ANT                                   PIC X(02).
           03 WSS-MARC-4                                PIC X(01). 
           03 WSS-CIC-ICLI-GDG.
              05 WSS-CAI-ICLI                           PIC X(04).
              05 WSS-IIC-ICLI                           PIC X(08).
           03  WSS-IND-EXI-GDO                          PIC X(01).
           03  WSS-ALZ-DAP           VALUE SPACES       PIC X(01).
           03  WSS-FEC-ULT-ACT                          PIC X(08).
           03  WSS-IND-CCAD                             PIC X(01).
           03  WSS-NUM-TIPO-ALF                         PIC X(06).
           03  WSS-NUM-TIPO  REDEFINES WSS-NUM-TIPO-ALF PIC 9(06).
           03  WSS-KEY-IGDG.
               05 WSS-CAI-GTIA                          PIC X(04).
               05 WSS-IIC-GTIA                          PIC X(08).
           03  WSS-FRM-MENS.
               05 WSS-FRM-MENS1                         PIC X(21).
               05 WSS-FRM-MENS2                         PIC X(12).
           03  WSS-FRM-IIC-IOPD      VALUE SPACES       PIC X(18).
      *AFRI-INI JUL/2004                                                
           03  WSS-GLS-TGAR.                                            
               05 WSS-VEC-TGAR   OCCURS 10 TIMES.                       
                  07 WSS-IND-TGAR                      PIC X(06).       
      *AFRI-FIN JUL/2004                                                
*% IF FMT_CHI
      *<<<< FMT_IDC
           03 WSS-COD-CGTA.
               05 WSS-TIP-CGTA                          PIC X(03).
               05 WSS-STP-CGTA                          PIC X(03).
*% IF GEN_BCI
      *<<<< GEN_BCI
           03  WSS-FEC-FVTO.
               05 WSS-NUM-SVTO                          PIC X(02).
               05 WSS-NUM-AVTO                          PIC X(02).
               05 WSS-NUM-MVTO                          PIC X(02).
               05 WSS-NUM-DVTO                          PIC X(02).

           03  WSS-CIC-CTAB         VALUE SPACES        PIC X(03).
           03 WSS-IND-ALZA          VALUE SPACES        PIC X(03).
           03 WSS-FIO-STAT-BKP      VALUE SPACES        PIC X(02).
      *MHM-INI 23-OCT-2003
           03 WSS-GLS-CGTA.
              05 WSS-GLS-TOPE                   PIC X(40).
              05 WSS-GLS-SOPE                   PIC X(40).
      *MHM-FIN 23-OCT-2003
      *MHM-INI 03-DIC-2003
           03 WSS-IND-EGAP          VALUE SPACES       PIC X(01).
           03 WSS-IND-GAPB          VALUE SPACES       PIC X(01).
      *MHM-FIN 03-DIC-2003
*% IF PGM_PU
      *LOP-INI 6-DIC-2002
           03 WSS-COD-CVMC.
              05  WSS-COD-MENS                         PIC X(12).
              05  WSS-COD-MEN2                         PIC X(12).
              05  WSS-NUM-MENS                         PIC 9(02).
              05  WSS-NUM-MEN2                         PIC 9(02).
              05  WSS-CAMB                             PIC X(28).
           03 WSS-FEC-FCIE     VALUE 0                 PIC 9(08).
           03 WSS-CIC-ICLF                             PIC X(12).
           03 WSS-T                    VALUE ZEROES    PIC 9(02).
      *LOP-FIN 6-DIC-2002
      *LOP-INI 6-DIC-2002
       COPY LDCWGCCU.
       COPY LDCWGCEG.
       COPY LDCBRCLF.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-CLF-REQA==.
       COPY LDCBRRDC REPLACING RDC BY RDL.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-RDC-REQA==.
      *LOP-FIN 6-DIC-2002
*% END
       COPY BGLWGDAP.
       COPY DAPBROPD.
       COPY DAPBRRCC.
       COPY USPC113.
      *>>>>
*% END
      *>>>>
*% END
       01  WSS-FRM-MEN2.
           03 WSS-CAI-MEN2                  PIC X(04).
           03 WSS-BLK1       VALUE SPACES   PIC X(03).
           03 WSS-NUM-MEN2                  PIC 9(08).
           03 WSS-BLK2       VALUE SPACES   PIC X(24).
*% IF PGM_MEX OR GEN_BCI
      *<<<< PGM_MEX
       COPY BGLBRGSL.
       COPY BGLBRGSO.
      *>>>>
*% END
*% IF PGM_PER OR PGM_CLB OR PGM_MEX
      *<<<< (PGM_PER OR PGM_CLB OR PGM_MEX)
       COPY BGLWGDAP.
       COPY BGLWGVDO.
      *>>>>
*% END
*% IF PGM_VMS OR PGM_DTC OR PGM_MCP
      *<<<< PGM_VMS OR PGM_DTC
*%!
*% IF PGM_PER OR PGM_CLB OR PGM_MEX
       COPY COLBROPC.
       COPY BGLBRGMO.
       COPY BGLBRTAG.
       COPY BGLBRGDO.
*% IF PGM_DTC
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-GMO-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-TAG-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-GDO-REQA==.
*% END
*% ELSE
       COPY BGLBRGMO.
       COPY BGLBRTAG.
*% IF PGM_DTC
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-GMO-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-TAG-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-OPD-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-RCC-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-GAP-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-GLE-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-GES-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-GIN-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-GDP-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-GVT-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-GUB-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-GTP-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-GSI-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-GSE-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-GVE-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-GIM-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-GSO-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-GSL-REQA==.
*% END
*% END
*% END
*% IF PGM_MVS OR PGM_MCP OR PGM_VSI OR PGM_DB2
      *<<<< PGM_VSI OR PGM_DB2
*% IF PGM_VSI OR PGM_MCP OR PGM_MVS
       COPY BGLBRGAP.
       COPY BGLBRGDP.
       COPY BGLBRGES.
       COPY BGLBRGIN.
       COPY BGLBRGLE.
       COPY BGLBRGSE.
       COPY BGLBRGSI.
       COPY BGLBRGTP.
       COPY BGLBRGUB.
       COPY BGLBRGVT.
       COPY BGLBRGIM.
       COPY BGLBRGVE.
*% ELSE
           EXEC SQL INCLUDE GARBRGAP END-EXEC.
       COPY GNSWGRQS REPLACING ==SQL-REQA== BY ==SQL-GAP-REQA==.
           EXEC SQL INCLUDE GARBRGDO END-EXEC.
       COPY GNSWGRQS REPLACING ==SQL-REQA== BY ==SQL-GDO-REQA==.
           EXEC SQL INCLUDE GARBRGDP END-EXEC.
       COPY GNSWGRQS REPLACING ==SQL-REQA== BY ==SQL-GDP-REQA==.
           EXEC SQL INCLUDE GARBRGES END-EXEC.
       COPY GNSWGRQS REPLACING ==SQL-REQA== BY ==SQL-GES-REQA==.
           EXEC SQL INCLUDE GARBRGIN END-EXEC.
       COPY GNSWGRQS REPLACING ==SQL-REQA== BY ==SQL-GIN-REQA==.
           EXEC SQL INCLUDE GARBRGLE END-EXEC.
       COPY GNSWGRQS REPLACING ==SQL-REQA== BY ==SQL-GLE-REQA==.
           EXEC SQL INCLUDE GARBRGSE END-EXEC.
       COPY GNSWGRQS REPLACING ==SQL-REQA== BY ==SQL-GSE-REQA==.
           EXEC SQL INCLUDE GARBRGSI END-EXEC.
       COPY GNSWGRQS REPLACING ==SQL-REQA== BY ==SQL-GSI-REQA==.
           EXEC SQL INCLUDE GARBRGTP END-EXEC.
       COPY GNSWGRQS REPLACING ==SQL-REQA== BY ==SQL-GTP-REQA==.
           EXEC SQL INCLUDE GARBRGUB END-EXEC.
       COPY GNSWGRQS REPLACING ==SQL-REQA== BY ==SQL-GUB-REQA==.
           EXEC SQL INCLUDE GARBRGVT END-EXEC.
       COPY GNSWGRQS REPLACING ==SQL-REQA== BY ==SQL-GVT-REQA==.
           EXEC SQL INCLUDE GARBRGIM END-EXEC.
       COPY GNSWGRQS REPLACING ==SQL-REQA== BY ==SQL-GIM-REQA==.
           EXEC SQL INCLUDE GARBRGIM END-EXEC.
       COPY GNSWGRQS REPLACING ==SQL-REQA== BY ==SQL-GVE-REQA==.
           EXEC SQL INCLUDE GARBRGVE END-EXEC.
       COPY GNSWGRQS REPLACING ==SQL-REQA== BY ==SQL-GMO-REQA==.
       COPY BGLBRTAG.
*% END
      *>>>>
*% END
*% IF PGM_PU OR PGM_PQ
      *<<<< PGM_PU OR PGM_PQ
       COPY BGLWGVCG.
*% IF GEN_BCI
      *<<<< GEN_BCI
       COPY BGLWGIDP.
      *>>>>
*% END
*% IF PGM_PER OR PGM_CLB OR PGM_MEX
      *<<<< PGM_PER OR PGM_CLB OR PGM_MEX
       COPY BGLWGIDP.
       COPY BGLWVVCG.
      *>>>>
*% END
*% IF PGM_MCP
       COPY GNSWGUIB.
*% END
*% IF NOT ( PGM_VSI OR PGM_DB2 )
      *<<<< NOT ( PGM_VSI OR PGM_DB2 )
       COPY BGLWGELI.
      *>>>>
*% END
       01  WSS-VARI-ADI.     
           03 WSS-REG                             PIC X(03).
           03 WSS-COD-CTA.
              05 WSS-COD-CGTA                     PIC X(03).
              05 WSS-VCB.
                 07 WSS-TIP-VCB                   PIC X(01).
                 07 WSS-COD-VCB                   PIC X(03).
                 07 WSS-TIP-CMB                   PIC X(02).
*% IF PGM_ARG
      *<<<< PGM_ARG
       COPY GNSWCVRF.
       COPY GNSWVVRF.
      *>>>>
*% END
      *>>>>
*% END
      *>>>>
*% END
*% IF INI_FIO AND (PGM_PER OR PGM_CLB OR PGM_MEX) AND NOT PGM_VSI
      *<<<< INI_FIO AND (PGM_PER OR PGM_CLB OR PGM_MEX) AND NOT PGM_VSI
           PERFORM GNS-HDL-VSM.
      *>>>>
*% END
*% IF INI_FIO AND PGM_VMS
      *<<<< INI_FIO AND PGM_VMS
           MOVE FIO-ACCS-UPD TO FIO-ACCS.
           MOVE FIO-ACC      TO FIO-CMND.
           MOVE 'GNS'        TO FIO-SIST.
           PERFORM GNS-FIO-CIC.
           MOVE FIO-UPD TO FIO-CMND.
           PERFORM GNS-FIO-CIC.

           MOVE FIO-ACCS-UPD TO FIO-ACCS.
           MOVE FIO-ACC      TO FIO-CMND.
           MOVE 'TAB'        TO FIO-SIST.
           PERFORM GNS-FIO-TAB.
           MOVE FIO-INP TO FIO-CMND.
           PERFORM GNS-FIO-TAB.

           MOVE FIO-ACCS-UPD TO FIO-ACCS.
           MOVE FIO-ACC      TO FIO-CMND.
           MOVE 'TAB'        TO FIO-SIST.
           PERFORM TAB-FIO-OFI.
           MOVE FIO-INP TO FIO-CMND.
           PERFORM TAB-FIO-OFI.

           MOVE FIO-ACCS-UPD TO FIO-ACCS.
           MOVE FIO-ACC      TO FIO-CMND.
           MOVE 'TAB'        TO FIO-SIST.
           PERFORM TAB-FIO-USR.
           MOVE FIO-INP TO FIO-CMND.
           PERFORM TAB-FIO-USR.

           MOVE FIO-ACCS-UPD TO FIO-ACCS.
           MOVE FIO-ACC      TO FIO-CMND.
           MOVE 'SGC'        TO FIO-SIST.
           PERFORM SGC-FIO-DBC.

           MOVE FIO-INP TO FIO-CMND.
           PERFORM SGC-FIO-DBC.

           MOVE FIO-ACCS-UPD TO FIO-ACCS.
           MOVE FIO-ACC      TO FIO-CMND.
           MOVE 'SGC'        TO FIO-SIST.
           PERFORM SGC-FIO-TAB.
           MOVE FIO-INP TO FIO-CMND.
           PERFORM SGC-FIO-TAB.

           MOVE FIO-ACCS-UPD TO FIO-ACCS.
           MOVE FIO-ACC      TO FIO-CMND.
           MOVE 'BGL'        TO FIO-SIST.
           PERFORM BGL-FIO-GDD.
           MOVE FIO-UPD TO FIO-CMND.
           PERFORM BGL-FIO-GDD.

           MOVE FIO-ACCS-UPD TO FIO-ACCS.
           MOVE FIO-ACC      TO FIO-CMND.
           MOVE 'BGL'        TO FIO-SIST.
           PERFORM BGL-FIO-GDO.
           MOVE FIO-UPD TO FIO-CMND.
           PERFORM BGL-FIO-GDO.

           MOVE FIO-INP TO FIO-CMND.
           PERFORM BGL-FIO-TAG.

           MOVE FIO-ACCS-UPD TO FIO-ACCS.
           MOVE FIO-ACC      TO FIO-CMND.
           MOVE 'BGL'        TO FIO-SIST.
           PERFORM BGL-FIO-GMO.
           MOVE FIO-UPD TO FIO-CMND.
           PERFORM BGL-FIO-GMO.
      *>>>> INI_FIO
*% END
*% IF FIN_HBL_FLD
      * EVA-INI-AFRI/ENERO2006                                          
           IF SCR-CMND = 'MST'                                          
              MOVE FRM-CPIM-AEY TO GDG-COD-RLCM-ATR IN GDG-FLD          
              MOVE FRM-CPIM-AEY TO GDG-COD-RLUN-ATR IN GDG-FLD          
              MOVE FRM-CPIM-AEY TO GDG-GLS-RLVR-ATR IN GDG-FLD          
              MOVE FRM-CPIM-AEY TO GDG-COD-OFIC-ATR IN GDG-FLD          
              MOVE FRM-CPIM-AEY TO GDG-IND-INOB-ATR IN GDG-FLD          
              MOVE FRM-CPIM-AEY TO GDG-GLS-DGTA-ATR IN GDG-FLD          
              MOVE FRM-CPIM-AEY TO GDG-GLS-DGT1-ATR IN GDG-FLD          
              MOVE FRM-CPIM-AEY TO GDG-CIC-EJOR-ATR IN GDG-FLD          
              MOVE FRM-CPIM-AEY TO GDG-FEC-FVTO-ATR IN GDG-FLD          
              MOVE FRM-CPIM-AEY TO GDG-COD-TGCM-ATR IN GDG-FLD          
              MOVE FRM-CPIM-AEY TO FRM-VRF-ICLI-ATR IN GDG-FLD          
              MOVE FRM-CPIM-AEY TO FRM-IND-ICLI-ATR IN GDG-FLD          
              MOVE FRM-CPIM-AEY TO FRM-GLS-ICLI-ATR IN GDG-FLD          
              MOVE FRM-CPIM-AEY TO FRM-NUM-ICLI-ATR IN GDG-FLD          
              MOVE FRM-CPIM-UBY TO GDG-STP-CGTA-ATR IN GDG-FLD          
              MOVE FRM-POS-CURS TO GDG-STP-CGTA-LEN IN GDG-FLD.         
      * EVA-FIN-AFRI/ENERO2006                                          
                                                                        
      * JGM-ini codigo que se agrega del BM
*% IF PGM_BMS
*% END
           MOVE FRM-CPIM-AEY TO GDG-FEC-FALZ-ATR IN GDG-FLD.             
           MOVE FRM-CPIM-AEY TO GDG-FEC-FALZ-STP.             

           MOVE FRM-CPIM-AEY TO GDG-IND-EST1-ATR IN GDG-FLD.         
           MOVE FRM-CPIM-AEY TO GDG-IND-EST1-STP.         

           MOVE FRM-CPIM-AEY TO GDG-COD-EST2-ATR IN GDG-FLD.
           MOVE FRM-CPIM-AEY TO GDG-COD-EST2-STP.

      *GDG-IND-EST1 = 05, 19
           IF SCR-CMND NOT = 'ING'  AND SCR-CMND NOT = 'MOD'
      *MHM-INI 7-AUG-2003
      *        MOVE FRM-CPIM-AEY TO GDG-IND-CLAS-ATR IN GDG-FLD
      *        MOVE FRM-CPIM-AEY TO GDG-IND-CLAS-STP
      
      *        MOVE FRM-CPIM-AEY TO GDG-VAL-MNTO-ATR IN GDG-FLD
      *        MOVE FRM-CPIM-AEY TO GDG-VAL-MNTO-STP
      *        MOVE FRM-CPIM-AEY TO GDG-COD-GORI-ATR IN GDG-FLD
      *        MOVE FRM-CPIM-AEY TO GDG-COD-GORI-STP
      
      *        MOVE FRM-CPIM-AEY TO GDG-COD-RFCP-ATR IN GDG-FLD
      *        MOVE FRM-CPIM-AEY TO GDG-COD-RFCP-STP
      *MHM-FIN 7-AUG-2003

              MOVE FRM-CPIM-AEY TO FRM-GLS-NOMC-ATR IN GDG-FLD
              MOVE FRM-CPIM-AEY TO FRM-GLS-NOMC-STP
      
              MOVE FRM-CPIM-AEY TO GDG-IND-CBAN-ATR IN GDG-FLD
              MOVE FRM-CPIM-AEY TO GDG-IND-CBAN-STP.
      
      *MHM-INI 13-AUG-2003
           IF SCR-CMND = 'MGA'
              MOVE FRM-CPIM-UBY TO FRM-GLS-NOMC-ATR IN GDG-FLD.
      *MHM-FIN 13-AUG-2003
      *MHM-INI 7-AUG-2003
      *        MOVE FRM-CPIM-AEY TO GDG-COD-DESP-ATR IN GDG-FLD
      *        MOVE FRM-CPIM-AEY TO GDG-COD-DESP-STP.
           IF SCR-CMND NOT = 'ALZ'
               MOVE FRM-CPIM-AEY TO GDG-COD-MALZ-ATR IN GDG-FLD.
      *MHM-INI 21-AUG-2003
      *     IF SCR-CMND = 'ING' OR SCR-CMND = 'MOD'
      *         MOVE FRM-CPIM-AEY TO GDG-COD-OFIC-ATR IN GDG-FLD
      *         MOVE FRM-CPIM-AEY TO GDG-CIC-EJOR-ATR IN GDG-FLD.
      *MHM-FIN 21-AUG-2003
           IF SCR-CMND NOT = 'MCA' AND SCR-CMND NOT = 'MGA'
               MOVE FRM-CPIM-AEY TO GDG-IND-ECRS-ATR IN GDG-FLD
               MOVE FRM-CPIM-AEY TO GDG-COD-RERS-ATR IN GDG-FLD
               MOVE FRM-CPIM-AEY TO GDG-FEC-FVES-ATR IN GDG-FLD
               MOVE FRM-CPIM-AEY TO GDG-IND-ECRT-ATR IN GDG-FLD
               MOVE FRM-CPIM-AEY TO GDG-COD-RERT-ATR IN GDG-FLD
               MOVE FRM-CPIM-AEY TO GDG-FEC-FVET-ATR IN GDG-FLD.
      *MHM-INI 21-AUG-2003
      *     IF SCR-CMND = 'ING' OR SCR-CMND = 'MOD'
      *         MOVE FRM-CPIM-AEY TO GDG-FEC-FVTO-ATR IN GDG-FLD.
      *MHM-FIN 7-AUG-2003
*% IF NOT PGM_ARG
      *<<<< NOT PGM_ARG
*% IF ( PGM_PER OR PGM_CLB OR PGM_MEX)

               IF CMA-CIC-TGAR IN CMA-VARI = 'DOCCBR' OR
                                             'DOCFCC' OR
                                             'DOCDPN' OR 
                                             'DOCVAL' OR
                                             'DOCCEX'
                  MOVE FRM-CPIM-AEY TO GDG-COD-VCAM-ATR IN GDG-FLD
                  MOVE FRM-CPIM-AEY TO GDG-COD-VCAM-STP.
      *>>>>
*% END
      *>>>>
*% END
*% IF NOT GEN_BCI
      *<<<< NOT GEN_BCI
      *RRM-INI 27-SEP-2002
           IF SCR-CMND NOT = "MOD" AND SCR-CMND NOT = "ING"           
               MOVE FRM-CPIM-AEY TO GDG-COD-UNIC-ATR  IN GDG-FLD
               MOVE FRM-CPIM-AEY TO GDG-COD-UNIC-STP.
      *RRM-INI 27-SEP-2002
      *>>>>
*% END
           IF SCR-CCPP = 'ING'
*% IF NOT FMT_CHI
      *<<<< NOT FMT_CHI
      *RRM-INI
               MOVE FRM-CPIM-AEY TO GDG-FEC-FEST-ATR IN GDG-FLD
               MOVE FRM-CPIM-AEY TO GDG-FEC-FEST-STP
               IF GDG-COD-CGTA IN GDG-FLD > 100 AND
                  GDG-COD-CGTA IN GDG-FLD < 130
                 MOVE FRM-CPIM-AEY TO GDG-IND-INOB-ATR IN GDG-FLD
                 MOVE FRM-CPIM-AEY TO GDG-IND-INOB-STP
                 MOVE SPACES TO WSS-EST-ANT IN CMA-VARI
                 MOVE SPACES TO WSS-ES2-ANT IN CMA-VARI
                 PERFORM ANL-HBL-FEC-VTO
                 GO TO INI-FECHA-HOY
               ELSE
      *RRM-FIN
      *>>>>
*% END
      *MHM-INI 16-OCT-2003
               MOVE FRM-CPIM-AEY TO GDG-FEC-FEST-ATR IN GDG-FLD
      *MHM-FIN 16-OCT-2003
               MOVE SPACES TO WSS-EST-ANT IN CMA-VARI
               MOVE SPACES TO WSS-ES2-ANT IN CMA-VARI
               PERFORM ANL-HBL-FEC-VTO
               GO TO INI-FECHA-HOY.

           IF SCR-CCPP = 'MOD'
      *MHM-INI 12-NOV-2003
               MOVE FRM-CPIM-AEY TO GDG-FEC-FEST-ATR IN GDG-FLD
      *MHM-FIN 12-NOV-2003
*% IF NOT FMT_CHI
      *<<<< NOT FMT_CHI
      *RRM-INI
               MOVE FRM-CPIM-AEY TO GDG-FEC-FEST-ATR IN GDG-FLD
               MOVE FRM-CPIM-AEY TO GDG-FEC-FEST-STP
               IF GDG-COD-CGTA IN GDG-FLD > 100 AND
                  GDG-COD-CGTA IN GDG-FLD < 130
                 MOVE FRM-CPIM-AEY TO GDG-IND-INOB-ATR IN GDG-FLD
                 MOVE FRM-CPIM-AEY TO GDG-IND-INOB-STP
                 PERFORM ANL-HBL-DBC-ICLI
                 PERFORM ANL-HBL-FEC-VTO
                 GO TO INI-FECHA-HOY
               ELSE
      *RRM-FIN
      *>>>>
*% END
               PERFORM ANL-HBL-DBC-ICLI
               PERFORM ANL-HBL-FEC-VTO
               IF SCR-CMND = 'MOD'
      *           MOVE FRM-POS-CURS TO GDG-COD-OFIC-LEN IN GDG-FLD
                  GO TO INI-FECHA-HOY.
 
      *MHM-INI 21-AUG-2003
      *     MOVE FRM-CPIM-AEY TO GDG-COD-OFIC-ATR IN GDG-FLD.
      *     MOVE FRM-CPIM-AEY TO GDG-COD-OFIC-STP.
      *MHM-FIN 21-AUG-2003

           MOVE FRM-CPIM-AEY TO GDG-COD-VCAM-ATR IN GDG-FLD.
           MOVE FRM-CPIM-AEY TO GDG-COD-VCAM-STP.

           MOVE FRM-CPIM-AEY TO GDG-COD-LGTA-ATR  IN GDG-FLD.
           MOVE FRM-CPIM-AEY TO GDG-COD-LGTA-STP.

           MOVE FRM-CPIM-AEY TO GDG-FEC-FSOL-ATR IN GDG-FLD.
           MOVE FRM-CPIM-AEY TO GDG-FEC-FSOL-STP.
*% IF FMT_CHI
      *<<<< FMT_CHI
           MOVE FRM-CPIM-AEY TO DBC-NUM-ICLI-ATR IN GDG-FLD.
           MOVE FRM-CPIM-AEY TO DBC-VRF-ICLI-ATR IN GDG-FLD.
           MOVE FRM-CPIM-AEY TO DBC-IND-ICLI-ATR IN GDG-FLD.
           MOVE FRM-CPIM-AEY TO DBC-GLS-ICLI-ATR IN GDG-FLD.
      *>>>>
*% ELSE
           MOVE FRM-CPIM-AEY TO DBC-IDC-ICLI-ATR IN GDG-FLD.
           MOVE FRM-CPIM-AEY TO DBC-IDC-ICLI-STP.
*% END
           MOVE FRM-CPIM-AEY TO DBC-GLS-NOMC-ATR IN GDG-FLD.
           MOVE FRM-CPIM-AEY TO DBC-GLS-NOMC-STP.

      *
      *------------------------------------------------*
           IF SCR-CMND = 'MGA'
      *RRM-INI
               MOVE FRM-CPIM-AEY TO GDG-FEC-FEST-ATR IN GDG-FLD
               MOVE FRM-CPIM-AEY TO GDG-FEC-FEST-STP
*% IF NOT GEN_BCI
      *<<<< NOT GEN_BCI
               MOVE FRM-CPIM-AEY TO GDG-COD-UNIC-ATR  IN GDG-FLD
               MOVE FRM-CPIM-AEY TO GDG-COD-UNIC-STP
      *RRM-FIN
      *>>>>
*% END
              MOVE FRM-POS-CURS TO GDG-GLS-DGTA-LEN IN GDG-FLD
      
              MOVE FRM-CPIM-AEY TO GDG-IND-EST1-ATR IN GDG-FLD
              MOVE FRM-CPIM-AEY TO GDG-IND-EST1-STP
      *
*% IF FMT_CHI
      *<<<< FMT_CHI
      *MHM-INI 13-OCT-2003
      *        MOVE FRM-CPIM-AEY TO FRM-NUM-ICLI-ATR IN GDG-FLD
      *        MOVE FRM-CPIM-AEY TO FRM-VRF-ICLI-ATR IN GDG-FLD
      *        MOVE FRM-CPIM-AEY TO FRM-IND-ICLI-ATR IN GDG-FLD
      *        MOVE FRM-CPIM-AEY TO FRM-GLS-ICLI-ATR IN GDG-FLD
      *MHM-FIN 13-OCT-2003
      *>>>>
*% ELSE
              MOVE FRM-CPIM-AEY TO FRM-IDC-ICLI-ATR IN GDG-FLD
              MOVE FRM-CPIM-AEY TO FRM-IDC-ICLI-STP
*% END
      *
      *MHM-INI 13-OCT-2003
      *        MOVE FRM-CPIM-AEY  TO FRM-GLS-NOMC-ATR IN GDG-FLD
      *        MOVE FRM-CPIM-AEY  TO FRM-GLS-NOMC-STP
      *MHM-FIN 13-OCT-2003
      *
              GO TO ANL-HBL-FECHA-HOY.
      *--------------------------------------------------*
      * EVA-AFRI/MAYO2006                                               
           IF SCR-CMND = 'AGA' OR SCR-CMND = 'ACE'                      
               MOVE FRM-POS-CURS TO GDG-GLS-MENS-LEN IN GDG-FLD
              GO TO ANL-HBL-FECHA-HOY.
      * FIN-AFRI                                                        
      *--------------------------------------------------*
           IF SCR-CMND NOT = 'ALZ' AND  
                       NOT = 'EJE' AND
                       NOT = 'CAN' AND
                       NOT = 'CAD'
              GO TO ANL-HBL-FECHA-HOY.
      *------------------------------------------------*           
           MOVE FRM-CPIM-AEY TO GDG-GLS-DGTA-ATR IN GDG-FLD.
           MOVE FRM-CPIM-AEY TO GDG-GLS-DGTA-STP.

           MOVE FRM-CPIM-AEY TO GDG-GLS-DGT1-ATR IN GDG-FLD.
           MOVE FRM-CPIM-AEY TO GDG-GLS-DGT1-STP.

           MOVE FRM-CPIM-AEY TO GDG-CIC-EJOR-ATR IN GDG-FLD.
           MOVE FRM-CPIM-AEY TO GDG-CIC-EJOR-STP.

      *MHM-INI 21-AUG-2003
      *     MOVE FRM-CPIM-AEY TO GDG-FEC-FVTO-ATR IN GDG-FLD.
      *     MOVE FRM-CPIM-AEY TO GDG-FEC-FVTO-STP.
      *MHM-FIN 21-AUG-2003
*% IF FMT_CHI
      *<<<< FMT_CHI
           MOVE FRM-CPIM-AEY TO FRM-NUM-ICLI-ATR IN GDG-FLD.
           MOVE FRM-CPIM-AEY TO FRM-VRF-ICLI-ATR IN GDG-FLD.
           MOVE FRM-CPIM-AEY TO FRM-IND-ICLI-ATR IN GDG-FLD.
           MOVE FRM-CPIM-AEY TO FRM-GLS-ICLI-ATR IN GDG-FLD.
      *>>>>
*% ELSE
           MOVE FRM-CPIM-AEY TO FRM-IDC-ICLI-ATR IN GDG-FLD.
           MOVE FRM-CPIM-AEY TO FRM-IDC-ICLI-STP.
*% END
           MOVE FRM-CPIM-AEY TO GDG-FEC-FEST-ATR IN GDG-FLD.
           MOVE FRM-CPIM-AEY TO GDG-FEC-FEST-STP.

           MOVE FRM-CPIM-AEY TO GDG-IND-INOB-ATR IN GDG-FLD.
           MOVE FRM-CPIM-AEY TO GDG-IND-INOB-STP.

           IF SCR-CMND = 'ALZ' OR = 'CAN' OR SCR-CMND = 'CAD'
              MOVE FRM-CPIM-UBY TO GDG-FEC-FALZ-ATR IN GDG-FLD
              MOVE FRM-CPIM-UST TO GDG-FEC-FALZ-STP

              MOVE FRM-CPIM-UBY TO GDG-IND-EST1-ATR IN GDG-FLD
              MOVE FRM-CPIM-UST TO GDG-IND-EST1-STP
              GO TO ANL-HBL-FECHA-HOY.

           IF SCR-CMND = 'EJE'
              MOVE FRM-CPIM-UBY TO GDG-COD-EST2-ATR IN GDG-FLD
              MOVE FRM-CPIM-UST TO GDG-COD-EST2-STP

      *MHM-INI 14-OCT-2003
      *        MOVE FRM-CPIM-UBY TO GDG-FEC-FALZ-ATR IN GDG-FLD
      *        MOVE FRM-CPIM-UST TO GDG-FEC-FALZ-STP
      *MHM-FIN 14-OCT-2003

              MOVE FRM-CPIM-UBY TO GDG-IND-EST1-ATR IN GDG-FLD
              MOVE FRM-CPIM-UST TO GDG-IND-EST1-STP.

       ANL-HBL-FECHA-HOY.
           GO TO INI-FECHA-HOY.                 
          

       ANL-HBL-DBC-ICLI.
           IF MULTIPLES-GDD
*% IF FMT_CHI
      *<<<< FMT_CHI
               MOVE FRM-CPIM-AEY TO DBC-NUM-ICLI-ATR IN GDG-FLD
               MOVE FRM-CPIM-AEY TO DBC-VRF-ICLI-ATR IN GDG-FLD
               MOVE FRM-CPIM-AEY TO DBC-IND-ICLI-ATR IN GDG-FLD
               MOVE FRM-CPIM-AEY TO DBC-GLS-ICLI-ATR IN GDG-FLD
      *>>>>
*% ELSE
               MOVE FRM-CPIM-AEY TO DBC-IDC-ICLI-ATR IN GDG-FLD
               MOVE FRM-CPIM-AEY TO DBC-IDC-ICLI-STP
*% END
               MOVE FRM-CPIM-AEY TO DBC-GLS-NOMC-ATR IN GDG-FLD
               MOVE FRM-CPIM-AEY TO DBC-GLS-NOMC-STP.
       ANL-HBL-COD-GRA.
       ANL-HBL-FEC-VTO.
           IF GAR-IND-SVTO IN CMA-VARI = 'N'
               MOVE FRM-CPIM-AEY TO GDG-FEC-FVTO-ATR IN GDG-FLD
               MOVE FRM-CPIM-AEY TO GDG-FEC-FVTO-STP

               IF SCR-CCPP = 'ING'
                   MOVE ZEROES TO GDG-NUM-SVTO IN GDG-FLD
                   MOVE ZEROES TO GDG-NUM-AVTO IN GDG-FLD
                   MOVE ZEROES TO GDG-NUM-MVTO IN GDG-FLD
                   MOVE ZEROES TO GDG-NUM-DVTO IN GDG-FLD.

      *RRM-INI 3-JUL-2002
           IF SCR-CCPP = 'MOD' AND SCR-OFRM-SRV
               MOVE FRM-CPIM-UBY TO GDG-FEC-FVTO-ATR IN GDG-FLD
               MOVE FRM-CPIM-UST TO GDG-FEC-FVTO-STP.
      *RRM-FIN 3-JUL-2002

      * 
        INI-FECHA-HOY.  
           IF SCR-CCPP =  'ING'
               PERFORM GET-FHOY
               MOVE HOY-FHOY TO GDG-FEC-FING IN GDG
               MOVE GDG-NUM-SING IN GDG TO GDG-NUM-SING IN GDG-FLD
               MOVE GDG-NUM-AING IN GDG TO GDG-NUM-AING IN GDG-FLD
               MOVE GDG-NUM-MING IN GDG TO GDG-NUM-MING IN GDG-FLD
               MOVE GDG-NUM-DING IN GDG TO GDG-NUM-DING IN GDG-FLD.
      * 
      *fin-JGM.
      *>>>>
*% END
*% IF INI_HBL_KEY
      *<<<<
      *EVA-INI-AFRI/ENERO2006                                           
           IF SCR-CMND = 'MST'                                          
              MOVE FRM-CPIM-AEY TO GDG-CAI-GTIA-ATR IN GDG-FLD          
              MOVE FRM-CPIM-AEY TO GDG-CAI-GTIA-ATR IN GDG-FLD          
              MOVE FRM-CPIM-AEY TO DBC-VRF-ICLI-ATR IN GDG-FLD          
              MOVE FRM-CPIM-AEY TO DBC-NUM-ICLI-ATR IN GDG-FLD          
              MOVE FRM-CPIM-AEY TO DBC-IND-ICLI-ATR IN GDG-FLD          
              MOVE FRM-CPIM-AEY TO DBC-GLS-ICLI-ATR IN GDG-FLD          
              MOVE FRM-CPIM-AEY TO DBC-GLS-NOMC-ATR IN GDG-FLD          
              MOVE FRM-CPIM-AEY TO GDG-TIP-CGTA-ATR IN GDG-FLD          
              MOVE FRM-CPIM-UBY TO GDG-STP-CGTA-ATR IN GDG-FLD          
              MOVE FRM-POS-CURS TO GDG-STP-CGTA-LEN IN GDG-FLD.         
      *EVA-FIN-AFRI/ENERO2006                                           
                                                                        
      *>>>>
*% END
*% IF FIN_HBL_KEY
      *<<<< FIN_HBL_KEY
           IF SCR-CCPP NOT = 'ING'
*% IF FMT_CHI
      *<<<< FMT_CHI
               MOVE FRM-CPIM-AEY TO GDG-TIP-CGTA-ATR IN GDG-FLD
               MOVE FRM-CPIM-AEY TO GDG-TIP-CGTA-STP
               MOVE FRM-CPIM-AEY TO GDG-STP-CGTA-ATR IN GDG-FLD
               MOVE FRM-CPIM-AEY TO GDG-STP-CGTA-STP.
      *>>>>
*% ELSE
               MOVE FRM-CPIM-AEY TO GDG-COD-CGTA-ATR IN GDG-FLD
               MOVE FRM-CPIM-AEY TO GDG-COD-CGTA-STP.
*% END
      *JGM()
      *>>>>
*% END
*% IF INI_FND_KEY
      * EVA-INI-AFRI/ENERO2006                                          
           IF SCR-CMND = 'MST'                                          
              MOVE GDG-CAI-GTIA IN GDG-FLD TO                           
                   GDG-CAI-GTIA IN GDG                                  
              MOVE GDG-IIC-GTIA IN GDG-FLD TO                           
                   GDG-IIC-GTIA IN GDG                                  
              MOVE FIO-GET-KEY TO FIO-CMND                              
              PERFORM BGL-FIO-GDG                                       
              IF NOT (FIO-STAT-OKS                                      
                 AND GDG-IND-EST1 IN GDG  = '05')                       
                  MOVE 'GDGNOTRAMITE' TO MSG-COD-MENS                   
                  GO TO ERR-FND-KEY                                     
              ELSE                                                      
                  PERFORM VAL-IND-GSO                                   
                  IF MSG-COD-MENS > SPACES                              
                      GO TO ERR-FND-KEY.                                
      * EVA-FIN-AFRI/ENERO2006                                          
      *<<<< EVP-INI INGFNDKEY
*% IF GEN_BCI
      *<<<< GEN_BCI
      *CGL-INI 07-06-2003
      * CODIGO AGREGADO PARA M:N
           IF SCR-CCPP = 'ING'
               IF GDG-IIC-GTIA IN GDG-FLD > ZEROES
                   MOVE 1 TO WSS-IBUS-GDG
                   MOVE GDG-CAI-GTIA IN GDG-FLD TO
                        GDG-CAI-GTIA IN GDG
                   MOVE GDG-IIC-GTIA IN GDG-FLD TO
                        GDG-IIC-GTIA IN GDG
                   MOVE FIO-GET-KEY TO FIO-CMND
                   PERFORM BGL-FIO-GDG
                   IF FIO-STAT-OKS
      *<<<< NOT ING_SBR_HIJ
      *            se encontro el hijo : error
      *            no ingresa sobre el hijo encontrado
                       MOVE '00' TO PGM-STAT-GDG
                       MOVE 'GDG    EXT' TO MSG-COD-MENS
                       GO TO ERR-FND-KEY
                   ELSE
                       MOVE '23' TO FIO-STAT
                       GO TO FIN-FND-KEY
      *>>>>
                 ELSE
                   PERFORM FND-DIRECTO
                   GO TO FIN-FND-KEY.
      *>>>>
*% ELSE
           IF WSS-MARC-4 IN WSS-VARI = 'S'
              MOVE 'COL'          TO MSG-COD-SIST
              MOVE 'OPC    YAACA' TO MSG-COD-MENS
              PERFORM GET-MSG
              MOVE MSG-GLS-DESC   TO FRM-MENS
              MOVE '00'           TO FIO-STAT
              MOVE SCR-STAT-CON   TO SCR-STAT
              GO TO FIN-FND-KEY.
 
      * CODIGO AGREGADO PARA M:N
           IF SCR-CCPP NOT = 'ING' 
              GO TO NTX-COD-AGREGADO.

      * se encuentra  hijo : error
      * no ingresa sobre el hijo encontrado
           IF GDG-IIC-GTIA IN GDG-FLD NOT > ZEROES
              PERFORM FND-DIRECTO
              GO TO FIN-FND-KEY
           ELSE
              MOVE 1 TO WSS-IBUS-GDG
              MOVE GDG-CAI-GTIA IN GDG-FLD TO GDG-CAI-GTIA IN GDG
              MOVE GDG-IIC-GTIA IN GDG-FLD TO GDG-IIC-GTIA IN GDG
              MOVE FIO-GET-KEY TO FIO-CMND
              PERFORM BGL-FIO-GDG
              IF FIO-STAT-OKS
                 MOVE '00' TO PGM-STAT-GDG
                 MOVE 'GDG    EXT' TO MSG-COD-MENS
                 GO TO ERR-FND-KEY
              ELSE
                 MOVE '23' TO FIO-STAT
                 GO TO FIN-FND-KEY.

       NTX-COD-AGREGADO.
*% END
      * CODIGO AGREGADO PARA M:N

           MOVE SPACES TO MSG-COD-MENS.
           MOVE 0      TO WSS-IBUS.
           MOVE 0      TO WSS-IBUS-GDG.
           MOVE '23'   TO PGM-STAT-GDD.

*% IF NOT PGM_MCP
           IF ( FRM-FFLD = FRM-FFLD-PF6 OR FRM-FFLD-PF5 ) AND
                GAR-KEY-AGDD IN CMA-VARI > SPACES
                PERFORM LEE-NXT-PRV-XGDD
                IF WSS-IBUS = 3
                   PERFORM SCR-CLRA-GDG
                   GO TO EXA-COM-STAT
                ELSE
                   MOVE PGM-SNUL TO PGM-STAT-GDG
                   MOVE PGM-SNUL TO PGM-STAT-DBC
                   IF FRM-FFLD = FRM-FFLD-PF5
                       MOVE 'GDD    NOPRV' TO MSG-COD-MENS
                       GO TO ERR-FND-KEY
                   ELSE
                       MOVE 'GDD    NONXT' TO MSG-COD-MENS
                       GO TO ERR-FND-KEY
           ELSE
           IF FRM-FFLD = FRM-FFLD-PF6 OR FRM-FFLD-PF5
               MOVE 'GDD    NEX' TO MSG-COD-MENS
               GO TO ERR-FND-KEY.

           IF FRM-FFLD = FRM-FFLD-PF8 
              OR FRM-FFLD-PF7
               PERFORM LEE-NXT-PRV-XDBC
               IF WSS-IBUS = 1
                   GO TO CON-BUS-DBC
               ELSE
                   MOVE PGM-SNUL TO PGM-STAT-GDG
                   MOVE PGM-SNUL TO PGM-STAT-DBC
                   IF FRM-FFLD = FRM-FFLD-PF7
                       MOVE 'DBC    NOPRV' TO MSG-COD-MENS
                       GO TO ERR-FND-KEY
                   ELSE
                       MOVE 'DBC    NONXT' TO MSG-COD-MENS
                       GO TO ERR-FND-KEY.
*% END
           IF GDG-IIC-GTIA IN GDG-FLD > ZEROES AND
*% IF FMT_CHI
      *<<<< FMT_CHI
              DBC-NUM-ICLI IN GDG-FLD = ZEROES AND
      *>>>>
*% ELSE
              DBC-IDC-ICLI IN GDG-FLD = ZEROES AND
*% END
              DBC-GLS-NOMC IN GDG-FLD NOT > SPACES

               MOVE 'N' TO CMA-IND-KPAD IN CMA-VARI
               PERFORM FND-DIRECTO
               IF FIO-STAT-OKS
                   MOVE 2 TO WSS-IBUS
      *            para buscar RPH y PAD
                   PERFORM GET-CUR-GDD
                   IF FIO-STAT-OKS
                       MOVE 3 TO WSS-IBUS
                       MOVE GDD-CIC-DCLI IN GDD TO DBC-KEY-IDBC IN DBC
                        MOVE FIO-GET-KEY TO FIO-CMND
                        PERFORM SGC-FIO-DBC
                        MOVE FIO-STAT TO PGM-STAT-DBC
                        IF FIO-STAT-OKS
                            GO TO EXA-COM-STAT
                        ELSE
                            MOVE 'GDD    NODBC' TO MSG-COD-MENS
                            GO TO EXA-COM-STAT 
                   ELSE
                       MOVE 'GDD    NEX' TO MSG-COD-MENS
                       GO TO EXA-COM-STAT
               ELSE
                   MOVE SPACES TO GAR-KEY-AGDD IN CMA-VARI
                   MOVE SPACES TO GAR-CIC-DCLI IN CMA-VARI
                   MOVE SPACES TO DBC-KEY-IDBC IN CMA-VARI
                   MOVE 'GDG    NEX' TO MSG-COD-MENS
                   GO TO ERR-FND-KEY.

      *
           MOVE SPACES TO GAR-KEY-AGDD IN CMA-VARI.
           MOVE SPACES TO GAR-CIC-DCLI IN CMA-VARI.
           MOVE SPACES TO DBC-KEY-IDBC IN CMA-VARI.
*% IF FMT_CHI
      *<<<< FMT_CHI
            IF DBC-NUM-ICLI IN GDG-FLD NOT = ZEROES
      *>>>>
*% ELSE
            IF DBC-IDC-ICLI IN GDG-FLD NOT = ZEROES
*% END
               MOVE 'I' TO CMA-IND-KPAD IN CMA-VARI
               MOVE 1 TO WSS-IBUS
               GO TO CON-BUS-DBC.
           IF DBC-GLS-NOMC IN GDG-FLD > SPACES
      *NOM-CLI Busca Cliente por medio del Nombre

               MOVE 'N' TO CMA-IND-KPAD IN CMA-VARI
               MOVE DBC-GLS-NOMC IN GDG-FLD TO DBC-GLS-NOMC IN DBC
               MOVE 'DBC-GLS-NOMC'   TO FIO-AKEY
               MOVE FIO-GET-NLS TO FIO-CMND
               PERFORM GET-CLI
               IF MSG-COD-MENS NOT > SPACES
                   MOVE 1 TO WSS-IBUS.

      * SI SE PROCESA SUBENTIDAD, LA BUSQUEDA POR LLAVE ALTERNATIVA
      *  DEBE SER UN PARRAFO CON LOOP

           IF WSS-IBUS = 0
               MOVE 'DBC    NEX' TO MSG-COD-MENS
               GO TO ERR-FND-KEY.

       CON-BUS-DBC.
      *    se encontro el padre y busca el GDG
           MOVE '00' TO PGM-STAT-DBC.

      * Para permitir Ant/Sig aunque padre no tenga operaciones
           MOVE DBC-KEY-IDBC IN DBC TO DBC-KEY-IDBC IN CMA-VARI.

      *    se digito tambien el hijo, se busca directamente GDD
           IF GDG-IIC-GTIA IN GDG-FLD > ZEROES 
*% IF NOT PGM_MCP
              AND NOT (FRM-FFLD = FRM-FFLD-PF8 OR FRM-FFLD-PF7)
*% END
      *        Buscara Cliente por medio de NOM cuando PF7 O PF8
               MOVE 'N' TO CMA-IND-KPAD IN CMA-VARI
               PERFORM GET-GDD
               IF WSS-IBUS = 1
                   MOVE 'GDD    NEX' TO MSG-COD-MENS
                   GO TO ERR-FND-KEY
               ELSE
               IF WSS-IBUS = 2
                   MOVE 'GDG    NEX' TO MSG-COD-MENS
                   GO TO ERR-FND-KEY
               ELSE
      *            se encontro el hijo
                   GO TO EXA-COM-STAT
           ELSE
      *    no se digito el hijo, se busca el ultimo
               MOVE DBC-KEY-IDBC IN DBC TO GDD-CIC-DCLI IN GDD
               MOVE '999999999999'      TO GDD-KEY-AGDD IN GDD
               MOVE 'GDD-KEY-IGDD' TO FIO-AKEY
               MOVE FIO-GET-LEQ TO FIO-CMND
               PERFORM BGL-FIO-GDD
               IF NOT (FIO-STAT-OKS AND
                       DBC-KEY-IDBC IN DBC = GDD-CIC-DCLI IN GDD)
                  MOVE 'GDD    NEX' TO MSG-COD-MENS
                  GO TO ERR-FND-KEY
               ELSE
                MOVE 3 TO WSS-IBUS
      *CGL-FIN 25-06-98
               PERFORM BUS-ULT-GDG
               IF WSS-IBUS = 3
      *            se encontro el hijo
                   GO TO EXA-COM-STAT
               ELSE
                   MOVE 'GDD    NEX' TO MSG-COD-MENS
                   GO TO ERR-FND-KEY.

       FND-DIRECTO.
           MOVE 1 TO WSS-IBUS-GDG.
      *>>>> EVP-FIN BUSPADHIJ
*% END
*% IF FIN_FND_KEY
      *<<<< EVP-INI FINFNDKEY
      * ISP INI  28-JAN-2004 13:37:42                                   
           IF SCR-HDR-MRCA = 'BCS' AND                                  
              NOT FIO-STAT-OKS AND                                      
              WSS-LEYO-GORI = 'N'                                       
                   MOVE 'S' TO WSS-LEYO-GORI                            
                   MOVE GDG-CIC-GTIA IN GDG TO GDG-COD-GORI IN GDG      
                   MOVE 'GDG-COD-GORI' TO FIO-AKEY                      
                   MOVE FIO-GET-KEY TO FIO-CMND                         
                   PERFORM BGL-FIO-GDG                                  
                   IF FIO-STAT-OKS                                      
                       MOVE GDG-CAI-GTIA IN GDG TO                      
                            GDG-CAI-GTIA IN GDG-FLD                     
                       MOVE GDG-IIC-GTIA IN GDG TO                      
                            GDG-IIC-GTIA IN GDG-FLD                     
                       GO TO INI-FND-KEY.                               

       EXA-COM-STAT.
           MOVE GDG-FEC-FTRN IN GDG TO SCR-UMOD.
           IF WSS-IBUS = 2 OR 3
      *        se encontro el hijo
               MOVE '00' TO PGM-STAT-GDG
               MOVE GDG-KEY-IGDG IN GDG TO GAR-KEY-AGDD IN CMA-VARI.

           IF WSS-IBUS = 3
      *        se encontro la relacion completa
               MOVE '00' TO PGM-STAT-GDD
               MOVE GDD-CIC-DCLI IN GDD TO GAR-CIC-DCLI IN CMA-VARI
               MOVE '00' TO PGM-STAT-DBC
               MOVE GDD-CIC-DCLI IN GDD TO DBC-KEY-IDBC IN CMA-VARI
           ELSE
      *       GDG incompleto
               MOVE '23' TO PGM-STAT-GDD
               MOVE '23' TO PGM-STAT-DBC
               MOVE SPACES TO DBC-CAI-ICLI IN CMA-VARI
               MOVE ZEROES TO DBC-IIC-ICLI IN CMA-VARI
               MOVE DBC-KEY-IDBC IN CMA-VARI TO GAR-CIC-DCLI IN CMA-VARI
               GO TO ANL-GDG.

      * Determina si tiene multiples padres para comando consulta
           IF NOT ( SCR-CCPP = 'ACC' AND SCR-STAT = SCR-STAT-CON )
               GO TO ANL-GDG.

           MOVE SPACES TO MSG-COD-SIST.
           MOVE SPACES TO MSG-COD-MENS.

      * Se posiciona por la llave del hijo
           MOVE 'GDD-KEY-AGDD' TO FIO-AKEY.
           MOVE FIO-GET-NLS TO FIO-CMND.
           PERFORM BGL-FIO-GDD.

      *    Busca siguiente por la llave del hijo
           MOVE 'GDD-KEY-AGDD' TO FIO-AKEY.
           MOVE FIO-GET-NXT TO FIO-CMND.

           PERFORM BGL-FIO-GDD.
           IF FIO-STAT-OKS AND
              GDG-KEY-IGDG  IN GDG = GDD-KEY-AGDD  IN GDD
                MOVE 'M' TO SCR-IND-MGDD
*% IF GEN_BCI
      *<<<< GEN_BCI
                MOVE 'BGL'      TO MSG-COD-SIST
                MOVE 'GDGMDDIR' TO MSG-COD-MENS
                PERFORM GET-MSG
                MOVE MSG-GLS-DESC TO FRM-MEN2
      *>>>>
*% END
           ELSE
                MOVE SPACES TO SCR-IND-MGDD.

           IF FIO-STAT-OKS
               MOVE 'GDD-KEY-AGDD' TO FIO-AKEY
               MOVE FIO-END-BRW TO FIO-CMND
               PERFORM BGL-FIO-GDD.

           MOVE GAR-CIC-DCLI IN CMA-VARI TO GDD-CIC-DCLI IN GDD.
           MOVE GAR-KEY-AGDD IN CMA-VARI TO GDD-KEY-AGDD IN GDD.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM BGL-FIO-GDD.

       ANL-GDG.
       FIN-ANL-GDG.
           MOVE PGM-STAT-GDG TO FIO-STAT. 
*% IF NOT GEN_BCI
      *<<<< NOT GEN_BCI
      * FLB CST   20-AUG-1993 SE NECESITA AQUI CMA-CIC-TGAR
      *BUS-TAB Busca codigo de tabla
           MOVE 'TAB' TO TAB-COD-SIST.
           MOVE 'GTA' TO TAB-COD-TTAB IN TAB.
           MOVE SPACES TO TAB-COD-CTAB IN TAB.
           MOVE GDG-COD-TOPE IN GDG TO TAG-COD-TOPE IN TAG.
           MOVE GDG-COD-SOPE IN GDG TO TAG-COD-SOPE IN TAG.
           MOVE TAG-COD-AGTA IN TAG TO TAB-COD-CTAB IN TAB.

           PERFORM BUS-TAB.
           IF MSG-COD-MENS = SPACES
               MOVE TAB-CIC-CTAB IN TAB TO CMA-CIC-TGAR IN CMA-VARI
               MOVE TAB-GLS-DESC IN TAB TO
                    FRM-GLS-CGTA IN GDG-FLD
           ELSE
               MOVE SPACES TO CMA-CIC-TGAR IN CMA-VARI
               MOVE SPACES TO FRM-GLS-CGTA IN GDG-FLD.

           MOVE PGM-STAT-GDG TO FIO-STAT. 

      *<<<< EVP-INI FINFNDKEY2
      * EXAMINA STATUS DE REGISTRO
*% END
           IF SCR-CCPP = 'ACC' AND SCR-STPP = SCR-STAT-CON
               GO TO FIN-FND-KEY.
*% IF GEN_BCI
      *<<<< GEN_BCI
      *FLB CST  10-NOV-1993 VALIDA USR CONTRA OFICINA
           IF SCR-CCPP = 'ACC' AND SCR-STAT = SCR-STAT-CON
               GO TO FIN-VAL-OFI-USP-GDG.
           IF SCR-OFRM-SRV                                              
              GO TO FIN-VAL-OFI-USP-GDG.                                
      
           MOVE 'TAB'          TO FIO-SIST.
           MOVE 'VSN'          TO TAB-COD-TTAB IN TAB.
           MOVE 'OFIUSP'       TO TAB-COD-CTAB IN TAB.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM GNS-FIO-TAB.
           IF NOT ( FIO-STAT-OKS AND TAB-MSC-STAT IN TAB = 'S' )
               GO TO FIN-VAL-OFI-USP-GDG.
      *ALD-BCI-INI/07032000
           COPY USPC143.
           MOVE 'BGLGTUCG/CEN' TO USP-PTA-STR.
           COPY USPC103.
           IF USP-PERMISO = 'P'
               GO TO FIN-VAL-OFI-USP-GDG.
      *    COPY USPC143.
      *ALD-BCI-FIN/07032000
           IF USP-COD-OFICINA NOT = GDG-COD-OFIC IN GDG
               MOVE 'USRNODEOFI' TO MSG-COD-MENS
               GO TO ERR-FND-KEY.
      
       FIN-VAL-OFI-USP-GDG.
           MOVE PGM-STAT-GDG TO FIO-STAT.
      *FLB CST  10-NOV-1993 VALIDA USR CONTRA OFICINA
      *>>>>
*% ELSE
           IF SCR-CMND = 'MGA' AND
              GDG-IND-EST1 IN GDG = '05'
              MOVE 'GDG    NOAGA' TO MSG-COD-MENS
              GO TO ERR-FND-KEY.
*% END 
      * Garantia Alzada
           IF GDG-IND-EST1 IN GDG > '19'
               MOVE 'GDGALZ' TO MSG-COD-MENS
               GO TO ERR-FND-KEY.
      *
      *INI-AFRI/MAY-2005                                                
           IF SCR-CMND = 'ALC' AND GDG-CAI-GTIA IN GDG NOT = '0800'     
               MOVE 'CMNDALCINV' TO MSG-COD-MENS                        
               GO TO ERR-FND-KEY.                                       
                                                                        
           IF GDG-IND-EST1 IN GDG NOT = '05' AND                        
              SCR-CMND = 'ALC'                                          
               MOVE 'GDGNOALC' TO MSG-COD-MENS                          
               GO TO ERR-FND-KEY.                                       
                                                                        
           IF GDG-IND-EST1 IN GDG = '07'                                
              IF NOT (SCR-CCPP = 'ACC' AND SCR-STAT = SCR-STAT-CON)     
                 MOVE 'GDG SOLO CON' TO MSG-COD-MENS                    
                 GO TO ERR-FND-KEY.                                     
      *FIN-AFRI/MAY-2005                                                
*% IF NOT GEN_BCI
      *<<<< NOT GEN_BCI
           IF SCR-CMND = 'CAN' AND
              GDG-IND-UTIL IN GDG = 'S' 
              MOVE 'GDGUTILS' TO MSG-COD-MENS    
               GO TO ERR-FND-KEY.
      *
           IF SCR-CMND = 'CAN' AND
              GDG-COD-EST2 IN GDG = '05'
              MOVE 'GAR  PROCJUR' TO MSG-COD-MENS
              GO TO ERR-FND-KEY.

           IF SCR-CMND = 'CAD' AND
              GDG-IND-UTIL IN GDG = 'N'
              MOVE 'GAR  NOUTILS' TO MSG-COD-MENS
              GO TO ERR-FND-KEY.
      *>>>>
*% END
      *
      * EVA-AFRI/MAYO2006                                               
           IF (SCR-CMND = 'AGA' OR SCR-CMND = 'ACE')                    
               MOVE SCR-STAT-SON TO SCR-STAT.                           
      * FIN-AFRI                                                        
           IF GDG-MSC-STAT IN GDG = 'E'
               MOVE 'GDG   EXTING' TO MSG-COD-MENS
               GO TO ERR-FND-KEY.
      *
*% IF GEN_BCI
      *<<<< GEN_BCI
      *MHM-INI 16-OCT-2003
           IF SCR-CMND = 'EJE' AND GDG-COD-EST2 IN GDG = '10'
               MOVE 'GDG    EJEYA' TO MSG-COD-MENS
               GO TO ERR-FND-KEY.           

           IF GDG-IND-GTAC IN GDG NOT = 'S' AND
              ( SCR-CMND = 'MOD' OR SCR-CMND = 'ELI' )
               MOVE FIO-STAT TO WSS-FIO-STAT-BKP
               MOVE GDG-CAI-GTIA IN GDG TO GSO-CAI-GTIA IN GSO 
               MOVE GDG-IIC-GTIA IN GDG TO GSO-IIC-GTIA IN GSO
               MOVE 'GSO-KEY-IGDG' TO FIO-AKEY
               MOVE FIO-GET-KEY TO FIO-CMND
               PERFORM BGL-FIO-GSO
               IF FIO-STAT-OKS
                   MOVE GSO-NUM-SBGL IN GSO TO GSL-NUM-SBGL IN GSL
                   MOVE FIO-GET-KEY TO FIO-CMND
                   PERFORM BGL-FIO-GSL
                   IF FIO-STAT-OKS AND GSL-COD-ESOL IN GSL NOT < '05'
                       MOVE 'GSLESOL>05' TO MSG-COD-MENS
                       GO TO ERR-FND-KEY 
                   ELSE
                       MOVE WSS-FIO-STAT-BKP TO FIO-STAT
               ELSE
                   MOVE WSS-FIO-STAT-BKP TO FIO-STAT.

      *MHM-FIN 16-OCT-2003
      
           IF GDG-MSC-STAT IN GDG = 'A' AND SCR-CMND = 'MGA'
           OR GDG-MSC-STAT IN GDG = 'A' AND SCR-CMND = 'ALZ'
           OR GDG-MSC-STAT IN GDG = 'A' AND SCR-CMND = 'EJE'
                   GO TO FIN-FND-KEY.
      
           IF GDG-MSC-STAT IN GDG = 'A'
               MOVE 'GDG    AGAYA' TO MSG-COD-MENS
               GO TO ERR-FND-KEY.
      
           IF GDG-MSC-STAT IN GDG = 'I' AND SCR-CMND = 'MOD'
           OR GDG-MSC-STAT IN GDG = 'I' AND SCR-CMND = 'AGA'
           OR GDG-MSC-STAT IN GDG = 'I' AND SCR-CMND = 'ACE'
           OR GDG-MSC-STAT IN GDG = 'I' AND SCR-CCPP = 'ELI'
      *INI-AFRI/MAY-2005                                                
           OR GDG-MSC-STAT IN GDG = 'I' AND SCR-CMND = 'ALC'            
           OR GDG-MSC-STAT IN GDG = 'I' AND SCR-CMND = 'MST'            
      *FIN-AFRI/MAY-2005                                                
                   GO TO FIN-FND-KEY.
      
           IF GDG-MSC-STAT IN GDG = 'I'
               MOVE 'GDG    NOAGA' TO MSG-COD-MENS
               GO TO ERR-FND-KEY.
      *>>>>
*% ELSE
           MOVE SPACES TO WSS-IND-CCAD IN WSS-VARI.
           MOVE DBC-CIC-ICLI IN DBC TO GDD-CIC-DCLI IN GDD.
           MOVE SPACES              TO GDD-CAI-GTIA IN GDD.
           MOVE ZEROES              TO GDD-IIC-GTIA IN GDD.
           MOVE FIO-GET-NLS TO FIO-CMND.
       LEE-GDD.
           PERFORM BGL-FIO-GDD.
           IF NOT FIO-STAT-OKS OR
              DBC-CIC-ICLI IN DBC NOT = GDD-CIC-DCLI IN GDD
              GO TO LEE-GDD-NTX.      

           IF GDD-KEY-AGDD IN GDD = GDG-KEY-IGDG IN GDG
              MOVE FIO-GET-NXT TO FIO-CMND
              GO TO LEE-GDD.

           MOVE GDD-KEY-AGDD IN GDD TO GDG-KEY-IGDG IN GDG.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM BGL-FIO-GDG.
           IF FIO-STAT-OKS AND
              GDG-MSC-STAT IN GDG = 'A' AND
              GDG-COD-LGTA IN GDG = 'G'
              MOVE 'S' TO WSS-IND-CCAD IN WSS-VARI
           ELSE
              MOVE FIO-GET-NXT TO FIO-CMND
              GO TO LEE-GDD.

       LEE-GDD-NTX.      
           MOVE GDG-CAI-GTIA IN GDG-FLD TO GDG-CAI-GTIA IN GDG.
           MOVE GDG-IIC-GTIA IN GDG-FLD TO GDG-IIC-GTIA IN GDG.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM BGL-FIO-GDG.
      
           MOVE DBC-CIC-ICLI IN DBC     TO GDD-CIC-DCLI IN GDD.
           MOVE GDG-CAI-GTIA IN GDG-FLD TO GDD-CAI-GTIA IN GDD.
           MOVE GDG-IIC-GTIA IN GDG-FLD TO GDD-IIC-GTIA IN GDD.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM BGL-FIO-GDD.
      
           IF WSS-IND-CCAD IN WSS-VARI NOT = 'S' AND
              SCR-CMND = 'CAD'
              MOVE 'CLI  SINOGAR' TO MSG-COD-MENS
              GO TO ERR-FND-KEY.

      *-----------------------------------------------*
      *MGA =>MOD,gARANTIA acTIVADA
      *ALZ => 
      *CAN =>Mod CANCELA 
      *EJE =>Mod,eJE
      *CAD =>Mod, cANCELACION DIRECT

           IF ( SCR-CMND = 'MGA' OR
                SCR-CMND = 'ALZ' OR 
                SCR-CMND = 'CAN' OR
                SCR-CMND = 'EJE' OR
                SCR-CMND = 'CAD'  )
                IF GDG-MSC-STAT IN GDG = 'A' 
                   GO TO FIN-FND-KEY.

           IF GDG-MSC-STAT IN GDG = 'A'
              MOVE 'GDG    AGAYA' TO MSG-COD-MENS
              GO TO ERR-FND-KEY.

      *----------------------------------------------*
      * AGA= Activar
           IF  SCR-CMND = 'AGA' AND GDG-MSC-STAT IN GDG = 'I'
               PERFORM VAL-GRADO-GDG-GAP
               IF NOT FIO-STAT-OKS
                  MOVE 'GDG-GRADO-GAP' TO MSG-COD-MENS
                  GO TO ERR-FND-KEY.
*% IF NOT FMT_CHI
      *<<<< NOT FMT_CHI
      *RRM-INI 3-JUN-2002
      *    Verificacion de si existe GSO obligatoria, la que debe estar
      *    en estado '09' para activar GDG.
           IF  SCR-CMND = 'AGA'
               PERFORM LECTURA-TAG
               IF NOT FIO-STAT-OKS
                   MOVE 'BGL' TO MSG-COD-SIST
                   MOVE 'TAG    NEX' TO MSG-COD-MENS
                   GO TO ERR-FND-KEY
               ELSE
                   IF TAG-IND-EGSL = 'S' AND TAG-IND-EGSO = 'S'
                      PERFORM LECTURA-GSO
                      IF MSG-COD-MENS > SPACES
                          GO TO ERR-FND-KEY
                      ELSE
                         IF GSO-COD-ESGA IN GSO NOT = '09' OR
                            GSL-COD-ESOL IN GSL NOT = '05'
                             MOVE 'BGL' TO MSG-COD-SIST
                             MOVE 'GDG NOAGA GSO' TO MSG-COD-MENS
                             GO TO ERR-FND-KEY.

      *    Verificacion de si exite registro publico para Hipotecarias.
           IF NOT SCR-CMND = 'AGA'
              GO TO CONTINUACION-FND-KEY
           ELSE
               MOVE GDG-COD-CGTA IN GDG TO WSS-NUM-TIPO-ALF IN WSS-VARI
               IF WSS-NUM-TIPO < 101 OR
                  WSS-NUM-TIPO > 129
                   GO TO CONTINUACION-FND-KEY.
      
           MOVE GDG-CIC-GTIA IN GDG TO GLE-CIC-GTIA IN GLE.
           MOVE SPACES              TO GLE-COD-PACR IN GLE.
           MOVE FIO-GET-NLS TO FIO-CMND.
           PERFORM BGL-FIO-GLE.
           IF NOT ( FIO-STAT-OKS AND
              GDG-CIC-GTIA IN GDG = GLE-CIC-GTIA IN GLE )
               MOVE 'BGL'        TO MSG-COD-SIST
               MOVE 'GLE    NEX' TO MSG-COD-MENS
               GO TO ERR-FND-KEY.

       LECT-LOOP-GLE.
           PERFORM BGL-FIO-GLE. 
           IF NOT ( FIO-STAT-OKS AND  
              GDG-CIC-GTIA IN GDG = GLE-CIC-GTIA IN GLE )
               MOVE PGM-STAT-GDG TO FIO-STAT
               GO TO CONTINUACION-FND-KEY.                        
           MOVE GLE-KEY-IGLE IN GLE TO GAP-KEY-IGAP IN GAP.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM BGL-FIO-GAP.
           IF NOT FIO-STAT-OKS
               MOVE 'BGL'        TO MSG-COD-SIST
               MOVE 'GAP    NEX' TO MSG-COD-MENS
               GO TO ERR-FND-KEY.
           IF GAP-IND-ESBA IN GAP = 'S' AND GLE-NUM-REGP NOT > SPACES
               MOVE 'BGL'        TO MSG-COD-SIST                       
               MOVE 'REGP NOT>0' TO MSG-COD-MENS 
               GO TO ERR-FND-KEY
           ELSE
               MOVE FIO-GET-NXT TO FIO-CMND
               GO TO LECT-LOOP-GLE.
       
       CONTINUACION-FND-KEY.                        

           PERFORM LECTURA-TAG.
           IF NOT FIO-STAT-OKS
               MOVE 'TAG    NEX' TO MSG-COD-MENS
               GO TO ERR-FND-KEY.
      
           IF SCR-CMND = 'ELI' AND
              TAG-IND-EGSL = 'S' AND TAG-IND-EGSO = 'S'
               PERFORM VER-GAR-GSO
               IF MSG-COD-MENS = 'GSO    NEX' OR MSG-COD-MENS = SPACES
                  MOVE '00'   TO FIO-STAT
                  MOVE SPACES TO MSG-COD-MENS
               ELSE
                  IF NOT FIO-STAT-OKS OR MSG-COD-MENS NOT = SPACES
                      GO TO ERR-FND-KEY.
      
           IF SCR-CMND = 'ELI' AND GDG-IND-EST1 IN GDG NOT = '05'
               MOVE 'GDG NOELI' TO MSG-COD-MENS
               GO TO ERR-FND-KEY.

      *RRM-FIN 3-JUN-2002
                                
      *RRM-INI 4-JUL-2002
           IF  SCR-CMND = 'AGA' AND SCR-OFRM-SRV
                MOVE SPACES TO MSG-COD-MENS 
                PERFORM VAL-CIM-AGA
                IF MSG-COD-MENS > SPACES
                   GO TO ERR-FND-KEY.
      *RRM-FIN 4-JUL-2002
      *>>>>
*% END
      * AGA= Activar, MOD = Modificar, ELI = Eliminar
           IF ( SCR-CMND = 'MOD' OR
                SCR-CMND = 'AGA' OR 
                SCR-CMND = 'ELI'  )
                IF GDG-MSC-STAT IN GDG = 'I'
                   GO TO FIN-FND-KEY.

           IF GDG-MSC-STAT IN GDG = 'I'
              MOVE 'GDG    NOAGA' TO MSG-COD-MENS
              GO TO ERR-FND-KEY.
      *>>>>
*% END
           IF GDG-MSC-STAT IN GDG = 'E'
               MOVE 'GDG    EXTGD' TO MSG-COD-MENS
           ELSE
               MOVE 'GDG    NOEST' TO MSG-COD-MENS.

       ERR-FND-KEY.
           MOVE 'S' TO SCR-IERR.

           IF WSS-IBUS = 0 AND WSS-IBUS-GDG = 0
      *        busco por padre y no encontro padre
               MOVE SPACES TO PGM-STAT
               MOVE 'TAB' TO MSG-COD-SIST
               MOVE '23' TO PGM-STAT-DBC
           ELSE
               MOVE 'BGL' TO MSG-COD-SIST.

           PERFORM GET-MSG.
           MOVE MSG-GLS-DESC TO FRM-MENS.

           MOVE SCR-STAT-CON TO SCR-STAT.
           MOVE '00' TO FIO-STAT. 
*% IF NOT PGM_MCP      
           IF FRM-FFLD = FRM-FFLD-PF6 OR
              FRM-FFLD = FRM-FFLD-PF5 OR
              SCR-CCPP = 'ING'
               GO TO FIN-FND-KEY.
*% END
           IF PGM-STAT-DBC-OKS 
      *        Despliega solo datos del DBC

               PERFORM SCR-CLRA-GDG
               MOVE '23' TO FIO-STAT
           ELSE
*% IF NOT PGM_MCP
           IF FRM-FFLD = FRM-FFLD-PF8
              OR FRM-FFLD-PF7
               GO TO FIN-FND-KEY
           ELSE
*% END
           IF PGM-STAT-GDG-OKS 
               MOVE PGM-SNUL TO PGM-STAT-GDG
               MOVE '23' TO FIO-STAT
           ELSE
               MOVE '23' TO FIO-STAT.

           MOVE 'S' TO SCR-IERR.
           GO TO FIN-FND-KEY.
      *>>>> EVP-FIN FINFNDKEY2
*% END
*% IF INI_CMN_ING
      *<<<< INI_CMN_ING
           MOVE SPACES TO GDG-GLS-FLAG IN GDG.
           MOVE SPACES TO GDG-MSC-TACC IN GDG.
           MOVE SPACES TO GDG-CIC-UING IN GDG.
           MOVE 'I'    TO GDG-MSC-STAT IN GDG.
*% IF GEN_BCI
      *<<<< GEN_BCI
      *PTC-INI-MAN
           IF SCR-OFRM-SRV AND
              SCR-CCPP = 'ING'
              MOVE PTC-GDG-TYPE TO QUE-TYPE
              MOVE TSK-TERM-ALF TO QUE-TERM
              MOVE PTC-GDG-LENG TO QUE-LITM
              MOVE 1            TO  QUE-NITM
              MOVE QUE-GET      TO QUE-CMND
              PERFORM GNS-PRO-QUE
              IF QUE-STAT = QUE-STAT-OKS
                  MOVE QUE-ITEM TO PTC-GDG-ITEM
                  MOVE PTC-GDG-GDG-CAI-IGAR TO GDG-CAI-GTIA IN GDG-FLD
                  MOVE PTC-GDG-GDG-IIC-IGAR TO GDG-IIC-GTIA IN GDG-FLD
                  MOVE QUE-DEL      TO QUE-CMND
                  PERFORM GNS-PRO-QUE.
      *PTC-FIN-MAN      
      *>>>>
*% END
           PERFORM GET-FHOY.
           IF SCR-CCPP = 'ING' OR SCR-CMND = 'COP'
               MOVE 'I'      TO GDG-MSC-TACC    IN GDG
               MOVE HOY-FHOY TO GDG-FEC-FING IN GDG
           ELSE
               MOVE 'M'      TO GDG-MSC-TACC IN GDG.

           MOVE SPACES TO GDG-COD-EST2 IN GDG.
           MOVE SPACES TO GDG-IND-GTAC IN GDG.
           MOVE SPACES TO GDG-IND-RALZ IN GDG.
           MOVE SPACES TO GDG-IND-EST1 IN GDG.
           MOVE SPACES TO GDG-IND-EGDG IN GDG.
           MOVE SPACES TO GDG-IND-EGDD IN GDG.
           MOVE SPACES TO GDG-IND-EGES IN GDG.
           MOVE SPACES TO GDG-IND-EGLE IN GDG.
           MOVE SPACES TO GDG-IND-EGDO IN GDG.
           MOVE SPACES TO GDG-IND-EGSE IN GDG.
           MOVE SPACES TO GDG-IND-EGVT IN GDG.
           MOVE SPACES TO GDG-IND-EGTP IN GDG.
           MOVE SPACES TO GDG-IND-EGUB IN GDG.
           MOVE SPACES TO GDG-IND-EGAP IN GDG.
           MOVE SPACES TO GDG-IND-EGIN IN GDG.
           MOVE SPACES TO GDG-IND-EGSI IN GDG.
           MOVE SPACES TO GDG-IND-EGDP IN GDG.
           MOVE SPACES TO GDG-IND-TESP IN GDG.
           MOVE ZEROES TO GDG-FEC-FALZ IN GDG.
           MOVE ZEROES TO GDG-COD-TSCN IN GDG.
           MOVE SPACES TO GDG-GLS-DISP IN GDG. 
*% IF GEN_BCI
      *<<<< GEN_BCI
           PERFORM RET-ALL-GDG.
      *>>>>
*% END
*% IF PGM_ARG
      *<<<< PGM_ARG
           MOVE ZEROES TO GAR-FEC-ACOM IN GDG.
           MOVE ZEROES TO GAR-FEC-AGTO IN GDG.
           MOVE ZEROES TO GAR-FEC-AIMP IN GDG.
      *>>>>
*% END
      *FLB CST 22-09-1993
       GET-CIC-GDG.
      *FLB CST 22-09-1993
           IF GDG-IIC-GTIA IN GDG-FLD NOT > ZEROES
              PERFORM BUS-CIC-GAR
      *MHM-INI 21-AGO-2003
      *        MOVE GAR-CIC-OFIC IN CMA-VARI TO CIC-CAI-ICIC IN CIC
              MOVE GDG-CAI-GTIA IN GDG-FLD TO CIC-CAI-ICIC IN CIC
      *MHM-FIN 21-AGO-2003
              MOVE CIC-GET TO CIC-CMND
              PERFORM PRO-CIC
              IF CIC-STAT NOT = CIC-STAT-OKS
                   MOVE CIC-MENS TO FRM-MENS
                   MOVE FIO-STAT-NEX TO FIO-STAT
                   GO TO FIN-CMN-ING
              ELSE
                   MOVE CIC-CAI-ICIC TO GDG-CAI-GTIA IN GDG
                   MOVE CIC-IIC-ICIC TO GDG-IIC-GTIA IN GDG
*% IF GEN_BCI
      *<<<<
      *FLB CST 22-09-1993
                   MOVE FIO-GET-KEY TO FIO-CMND
                   PERFORM BGL-FIO-GDG
                   IF FIO-STAT-OKS
                       GO TO GET-CIC-GDG
                   ELSE
      *FLB CST 22-09-1993
      *>>>>
*% END
                   MOVE GDG-CAI-GTIA IN GDG TO GDG-CAI-GTIA IN GDG-FLD 
                   MOVE GDG-IIC-GTIA IN GDG TO GDG-IIC-GTIA IN GDG-FLD
                   MOVE 'GNS' TO MSG-COD-SIST
                   MOVE 'INGYES' TO MSG-COD-MENS
                   PERFORM GET-MSG
                   MOVE MSG-GLS-DESC TO FRM-MENS
                   MOVE CIC-CAI-ICIC TO WSS-CAI-MEN2
                   MOVE CIC-NUM-ICIC TO WSS-NUM-MEN2 IN WSS-FRM-MEN2
                   MOVE WSS-FRM-MEN2 TO FRM-MEN2.
      *>>>>
*% END
*% IF CMN_ING
      *<<<< CMN_ING
      *<<<< EVP-INI CMN_ING
*% IF FMT_CHI
      *<<<< FMT_CHI
           IF NOT ( DBC-IND-ICLI IN GDG-FLD = 'M' OR
      *>>>>
*% ELSE
           IF NOT ( DBC-IDC-ICLI IN GDG-FLD = 'M' OR
*% END
               ( CNE-DBC-CAI-ICLI NOT > SPACES AND
                 CNE-DBC-IIC-ICLI NOT > ZEROES )
                  )
*% IF GEN_BCI
      *<<<< GEN_BCI
                AND
      *       no se ingreso el cliente en GAR-PRO-IDP
              NOT ( CMA-IND-DAP IN CMA-VARI = 'S' AND
                    FRM-COD-DEUD IN GDG-FLD = 'S' )
      *>>>>
*% END
               PERFORM PUT-GDD
               IF NOT FIO-STAT-OKS
                   GO TO FIN-CMN-ING.

           MOVE GDG-IND-EST1 IN GDG TO GDG-COD-ESTA IN GDG.
*% IF FMT_CHI
      *<<<< FMT_CHI
      *AFRI-INI/JUL2004
           MOVE 'BGL'        TO TAB-COD-SIST FIO-SIST.
           MOVE 'VGA'        TO TAB-COD-TTAB IN TAB.
           MOVE 'GDGFMUTUO'  TO TAB-COD-CTAB IN TAB.
           MOVE FIO-GET-KEY  TO FIO-CMND.
           PERFORM GNS-FIO-TAB.
           IF FIO-STAT-OKS AND TAB-IND-VIGE = 'S'
              MOVE TAB-GLS-DATA             TO WSS-GLS-TGAR
              MOVE GDG-TIP-CGTA IN GDG-FLD  TO WSS-TIP-CGTA
              MOVE GDG-STP-CGTA IN GDG-FLD  TO WSS-STP-CGTA
              IF( WSS-COD-CGTA IN WSS-VARI = WSS-IND-TGAR(1) AND
                 WSS-IND-TGAR(1) > SPACES) OR
                ( WSS-COD-CGTA IN WSS-VARI = WSS-IND-TGAR(2) AND
                 WSS-IND-TGAR(2) > SPACES) OR
                ( WSS-COD-CGTA IN WSS-VARI = WSS-IND-TGAR(3) AND
                 WSS-IND-TGAR(3) > SPACES) OR
                ( WSS-COD-CGTA IN WSS-VARI = WSS-IND-TGAR(4) AND
                 WSS-IND-TGAR(4) > SPACES) OR
                ( WSS-COD-CGTA IN WSS-VARI = WSS-IND-TGAR(5) AND
                 WSS-IND-TGAR(5) > SPACES) OR
                ( WSS-COD-CGTA IN WSS-VARI = WSS-IND-TGAR(6) AND
                 WSS-IND-TGAR(6) > SPACES) OR
                ( WSS-COD-CGTA IN WSS-VARI = WSS-IND-TGAR(7) AND
                 WSS-IND-TGAR(7) > SPACES) OR
                ( WSS-COD-CGTA IN WSS-VARI = WSS-IND-TGAR(8) AND
                 WSS-IND-TGAR(8) > SPACES) OR
                ( WSS-COD-CGTA IN WSS-VARI = WSS-IND-TGAR(9) AND
                 WSS-IND-TGAR(9) > SPACES) OR
                ( WSS-COD-CGTA IN WSS-VARI = WSS-IND-TGAR(10) AND
                 WSS-IND-TGAR(10) > SPACES) 
                  PERFORM GRABAR-GAP
      *AFRI-DIC2004           
                  IF NOT FIO-STAT-OKS
                      GO TO FIN-CMN-ING
                  ELSE
                      MOVE 'S' TO GDG-IND-EGAP IN GDG.
      *AFRI-DIC2004  
      
      *AFRI-FIN/JUL2004   
           IF DBC-NUM-ICLI IN GDG-FLD NOT = ZEROES 
      *>>>>
*% ELSE
           IF DBC-IDC-ICLI IN GDG-FLD NOT = ZEROES 
*% END
               MOVE 'S' TO GDG-IND-EGDD IN GDG.

      *>>>> EVP-FIN CMN_ING
*% IF GEN_BCI
      *<<<<
           IF CMA-IND-DAP IN CMA-VARI = 'S'
               MOVE SPACES TO MSG-COD-MENS
               MOVE GDG-CAI-GTIA IN GDG-FLD TO GAR-CAI-GTIA
                                               IN CMA-VARI
               MOVE GDG-IIC-GTIA IN GDG-FLD TO GAR-IIC-GTIA
                                               IN CMA-VARI
               MOVE FRM-CAI-IOPD IN GDG-FLD TO FRM-CAI-IOPD
                                               IN CMA-VARI
               MOVE FRM-IIC-IOPD IN GDG-FLD TO FRM-IIC-IOPD
                                               IN CMA-VARI
               PERFORM GAR-PRO-IDP
               IF MSG-COD-MENS > SPACES
                   PERFORM GET-MSG
                   MOVE MSG-GLS-DESC TO FRM-MEN1
                   MOVE FRM-SUAR-MAL TO FRM-SUAR
                   GO TO FIN-CMN-ING
               ELSE
                   MOVE 1   TO GDG-COD-TSCN IN GDG
                   MOVE 'S' TO GDG-IND-EGDO IN GDG
                   MOVE 'S' TO GDG-IND-EGVT IN GDG.
      *>>>>
*% END
*% IF (PGM_PER OR PGM_CLB OR PGM_MEX) 
      *<<<< (PGM_PER OR PGM_CLB OR PGM_MEX) 

           IF CMA-IND-DAP IN CMA-VARI NOT = 'S'
              GO TO GAR-PRO-IDP-FIN.

           MOVE SPACES TO MSG-COD-MENS.
           MOVE GDG-CAI-GTIA IN GDG-FLD TO GAR-CAI-GTIA IN CMA-VARI.
           MOVE GDG-IIC-GTIA IN GDG-FLD TO GAR-IIC-GTIA IN CMA-VARI.
      *RRM-INI 5-JUN-2002
      *    MOVE FRM-IIC-IOPD     IN GDG-FLD TO FRM-IIC-IOPD IN CMA-VARI.
           MOVE WSS-FRM-IIC-IOPD IN WSS-VARI TO
                                               FRM-IIC-IOPD IN CMA-VARI.
      *RRM-FIN 5-JUN-2002
                                               
           PERFORM GAR-PRO-IDP.
           IF MSG-COD-MENS > SPACES
              PERFORM GET-MSG
              MOVE MSG-GLS-DESC TO FRM-MENS
              MOVE FRM-SUAR-MAL TO FRM-SUAR
              GO TO FIN-CMN-ING.
              
           MOVE 1   TO GDG-COD-TSCN IN GDG.
           MOVE 'S' TO GDG-IND-EGDO IN GDG.
           MOVE 'S' TO GDG-IND-EGVT IN GDG.

       GAR-PRO-IDP-FIN.
      *>>>>
*% END
      *>>>>
*% END
*% IF FIN_CMN_ING
      *<<<< EVP-INI FINCMNING
      *<<<< FIN_CMN_ING
           IF NOT FIO-STAT-OKS                                                  
      *        Error inconsistencia en el ingreso : informar                    
               MOVE FIO-MENS TO FRM-MENS
               GO TO FIN-CMN-ING.                                               
      *>>>>
      *>>>> EVP-FIN FINCMNING
*% IF GEN_BCI
      *<<<< GEN_BCI
      *PTC-INI-MAN
           IF SCR-OFRM-SRV AND FIO-STAT-OKS AND SCR-IERR = 'N'
              MOVE WSX-NOM-TSGDG  TO QUE-COLA
              MOVE QUE-DEL        TO QUE-CMND
              PERFORM GNS-PRO-QUE
              MOVE GDG-KEY-IGDG IN GDG TO WSX-CIC-NGAR
              MOVE WSX-NOM-TSGDG  TO QUE-COLA
              MOVE WSX-LEN-TSGDG  TO QUE-LITM
              MOVE WSX-TAB-GDG    TO QUE-ITEM
              MOVE QUE-PUT        TO QUE-CMND
              PERFORM GNS-PRO-QUE.
       FIN-CMN-ING-2.
      *>>>>
*% END
*% END
*% IF CMN_MOD_RET
      *<<<< EVP-INI CMNMODRET
      *EVA-INI-AFRI/FEB 2006                                            
           MOVE GDG-IND-ECRS IN GDG TO WSS-IND-ECRS.                    
           MOVE GDG-IND-ECRT IN GDG TO WSS-IND-ECRT.                    
      *EVA-FIN-AFRI/FEB 2006                                            
*% IF GEN_BCI
      *<<<< GEN_BCI
      *PTC-INI-MAN
           IF SCR-OFRM-SRV AND
              SCR-CMND = 'MOD'
                PERFORM DEL-GDD
           ELSE
      *PTC-FIN-MAN
      *>>>>
*% END
           IF NOT (
*% IF FMT_CHI
      *<<<< FMT_CHI
              DBC-IND-ICLI IN GDG-FLD = 'M' OR
      *>>>>
*% ELSE
              DBC-IDC-ICLI IN GDG-FLD = 'M' OR
*% END
              ( CNE-DBC-CAI-ICLI = SPACES AND
                CNE-DBC-IIC-ICLI = ZEROES ) OR
              ( GDG-CAI-GTIA IN GDG-FLD = SPACES AND
                GDG-IIC-GTIA IN GDG-FLD = ZEROES ))
              
               PERFORM GET-UPD-GDD
               MOVE 'S' TO GDG-IND-EGDD IN GDG
           ELSE
      *        No modifica ni ingresa porque no hay GDD
               MOVE WSS-MISMO TO WSS-MGDD.
      *>>>> EVP-FIN CMNMODRET
*% END
*% IF INI_CMN_MOD AND GEN_BCI
      *<<<< INI_CMN_MOD AND GEN_BCI
           PERFORM KEY-ALL-GDG.
      * EVA-INI-AFRI/ENERO2006                                          
            IF SCR-CMND = 'MST'                                         
               PERFORM ACT-IND-GDG                                      
               IF MSG-COD-MENS > SPACES                                 
                  MOVE MSG-GLS-DESC TO FRM-MENS                         
                  MOVE FRM-SUAR-MAL TO FRM-SUAR                         
                  GO TO FIN-CMN-MOD                                     
               ELSE                                                     
                  GO TO FIN-CMN-MOD.                                    
      * EVA-FIN-AFRI/ENERO/2006                                         
      *MHM-INI 14-OCT-2003 FALTA REGULARIZAR VERSION MARGENES BCI
      **LOP-INI 20-DIC-2002
      *     IF SCR-CMND = 'ALZ'
      *        PERFORM ANL-LDC-GDD
      *        IF MSG-COD-MENS > SPACES
      *           MOVE MSG-GLS-DESC TO FRM-MENS
      *           MOVE FRM-SUAR-MAL TO FRM-SUAR
      *           GO TO FIN-CMN-MOD.
      **LOP-FIN 20-DIC-2002
      *MHM-FIN 14-OCT-2003
      *>>>>
*% END
*% IF CMN_MOD
      *<<<< CMN_MOD
*% IF GEN_BCI
      *<<<< GEN_BCI
      *CGL-INI 07-05-2003
           PERFORM GET-FHOY.
           MOVE HOY-FHOY TO GDG-FEC-FTRN IN GDG.
           MOVE HOY-HHOY TO GDG-HRA-HRTR IN GDG.
           IF SCR-CCPP = 'ING'
              OR SCR-CMND = 'COP'
               MOVE 'I'      TO GDG-MSC-TACC IN GDG
               MOVE HOY-FHOY TO GDG-FEC-FING IN GDG
               MOVE SCR-USER TO GDG-CIC-UING IN GDG
           ELSE
               MOVE SCR-USER TO GDG-COD-ATRN IN GDG
               MOVE 'M'      TO GDG-MSC-TACC IN GDG.
      
           MOVE SCR-OTRN     TO GDG-COD-OTRN  IN GDG.
           IF SCR-CMND NOT = 'ALZ'
               GO TO SIG-FIN-CMN-MOD.
      
      *<<<< PGM_CHI
      *DAD ini  16-JAN-1995
           IF CMA-IND-DAP IN CMA-VARI = 'S'
      *    IF CMA-IND-DAP IN CMA-VARI = 'S' AND
      *       GDG-FEC-ING-SIS IN GDG > '19950115'
      *DAD fin  16-JAN-1995
               PERFORM BUS-GDO-OPD
               IF MSG-COD-MENS = SPACES
                   MOVE FIO-GET-KEY-UPD TO FIO-CMND
                   PERFORM DAP-FIO-OPD
                   MOVE 'N' TO OPD-COD-GARA IN OPD
                   MOVE FIO-MOD TO FIO-CMND
                   PERFORM DAP-FIO-OPD
                   IF NOT FIO-STAT-OKS
                       MOVE FIO-MENS TO FRM-MENS
                       MOVE FRM-SUAR-MAL TO FRM-SUAR
                       GO TO FIN-CMN-MOD
                   ELSE
                       NEXT SENTENCE
               ELSE
      *RVM-CST-INI 1-APR-1996
                   IF MSG-COD-MENS = 'OPD    NEX'    AND
                      SCR-CMND = 'ALZ'               AND
                      WSS-ALZ-DAP IN WSS-VARI = 'S'
                       PERFORM GET-MSG
                       MOVE MSG-GLS-DESC TO FRM-MEN2
                       MOVE SPACES TO MSG-COD-MENS
                   ELSE
                   IF MSG-COD-MENS = 'OPD    NOVIG'  AND
                      SCR-CMND = 'ALZ'               AND
                      WSS-ALZ-DAP IN WSS-VARI = 'S'
                       IF OPD-COD-STAT IN OPD = 'L'
      *RVM-CST-INI 16-APR-1996
                           MOVE FIO-GET-KEY-UPD TO FIO-CMND
                           PERFORM DAP-FIO-OPD
                           MOVE 'N' TO OPD-COD-GARA IN OPD
                           MOVE FIO-MOD TO FIO-CMND
                           PERFORM DAP-FIO-OPD
      *RVM-CST-FIN 16-APR-1996
                           MOVE 'OPD    YALIQ' TO MSG-COD-MENS
                           PERFORM GET-MSG
                           MOVE MSG-GLS-DESC TO FRM-MEN2
                           MOVE SPACES TO MSG-COD-MENS
                       ELSE
                           MOVE SPACES TO MSG-COD-MENS
                   ELSE
      *RVM-CST-FIN 1-APR-1996
      *FLB CST  21-FEB-1995
                   IF MSG-COD-MENS NOT = 'OPD    NOVIG'
                       PERFORM GET-MSG
                       MOVE MSG-GLS-DESC TO FRM-MENS
                       MOVE FRM-SUAR-MAL TO FRM-SUAR
                       GO TO FIN-CMN-MOD
                   ELSE
                       MOVE SPACES TO MSG-COD-MENS.
      *FLB CST  21-FEB-1995 FIN
      *>>>>
      
      *ALD-ADA-INI/08112001
           MOVE GDG-TIP-CGTA IN GDG TO TAG-COD-TOPE IN TAG.
           MOVE GDG-STP-CGTA IN GDG TO TAG-COD-SOPE IN TAG.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM BGL-FIO-TAG.
           IF FIO-STAT-OKS
      *INI-AFRI/MAY-2005                                                
      *         IF TAG-IND-CTBL IN TAG = 'N'                            
              IF TAG-IND-CTBL IN TAG = 'N' OR                           
                 GDG-CAI-GTIA IN GDG = '0800'                           
      *FIN-AFRI/MAY-2005                                                
      *ALD-ADA-FIN/08112001
           MOVE HOY-FHOY TO GMO-FEC-FMOV IN GMO.
           MOVE HOY-HHOY TO GMO-HRA-HMOV IN GMO.
      *FLB CST  13-OCT-1993
           MOVE SCR-OTRN TO GMO-TML-TMOV IN GMO.
           MOVE SCR-USER TO GMO-CIC-UING IN GMO.
      
           MOVE HOY-FHOY TO GMO-FEC-FING IN GMO.
           MOVE GDG-CAI-GTIA IN GDG TO GMO-CAI-GTIA IN GMO.
           MOVE GDG-IIC-GTIA IN GDG TO GMO-IIC-GTIA IN GMO.
           MOVE ZEROES              TO GMO-NUM-IMOV IN GMO.
           MOVE '3'                 TO GMO-COD-MOVI IN GMO.
           MOVE GDG-COD-TSCN IN GDG TO GMO-NUM-TASN IN GMO.
           MOVE 'GDG001'            TO GMO-COD-CMPO IN GMO.
           MOVE 'N'                 TO GMO-IND-VALO IN GMO.
           MOVE 'S'                 TO GMO-IND-CLVE IN GMO.
           MOVE SPACES              TO GMO-GLS-CMPA IN GMO.
           MOVE ZEROES              TO GMO-SGV-CMPA IN GMO.
           MOVE GDG-IND-EST1 IN GDG TO GMO-COD-NCLV IN GMO.
           MOVE SPACES              TO GMO-GLS-NCMP IN GMO.
           MOVE ZEROES              TO GMO-SGV-NCMP IN GMO.
           MOVE GDG-COD-OFIC IN GDG TO GMO-COD-OFMV IN GMO.
           MOVE SPACES              TO GMO-COD-CLVA IN GMO.
           MOVE SPACES              TO GMO-COD-TMOV IN GMO.
           MOVE SPACES              TO GMO-GLS-DISP IN GMO.
           MOVE FIO-PUT TO FIO-CMND.
           PERFORM BGL-FIO-GMO.
      *ALD-ADA-INI/08112001
       CON-SIN-GRB-GMO.
      *ALD-ADA-FIN/08112001
      
       SIG-FIN-CMN-MOD.
      *>>>>
      *CGL-FIN 07-05-2003
      *>>>>
*% ELSE
*% IF FMT_CHI
      *<<<< FMT_CHI
           IF SCR-CMND = 'MOD'
               MOVE 'I' TO GDG-MSC-TACC IN GDG
               MOVE 'I' TO GDG-MSC-STAT IN GDG.

           IF SCR-CMND = 'MGA' OR SCR-CMND = 'EJE'
               MOVE 'M' TO GDG-MSC-TACC IN GDG
               MOVE 'A' TO GDG-MSC-STAT IN GDG.
      *>>>>
*% END
           IF (SCR-CMND = 'ALZ' OR SCR-CMND = 'CAN')                     
              MOVE GDG-FEC-FTRN IN GDG 
                                   TO WSS-FEC-ULT-ACT IN WSS-VARI.   

           PERFORM GET-FHOY.
           IF SCR-CCPP = 'ING' OR SCR-CMND = 'COP'
               MOVE 'I'      TO GDG-MSC-TACC IN GDG
               MOVE HOY-FHOY TO GDG-FEC-FING IN GDG
*% IF PGM_MVS
               MOVE SCR-USER TO GDG-CIC-UING IN GDG
*% END
           ELSE
*% IF PGM_MVS
*% END
               MOVE 'M'      TO GDG-MSC-TACC IN GDG.
*% IF PGM_MVS
*% END
           IF (SCR-CMND NOT = 'ALZ' AND NOT = 'CAN')  AND
              (SCR-CMND NOT = 'EJE' AND NOT = 'CAD')
              GO TO SIG-FIN-CMN-MOD.

*% IF (PGM_PER OR PGM_CLB OR PGM_MEX) 
      *<<<< (PGM_PER OR PGM_CLB OR PGM_MEX)

           IF GDG-IND-EST1 IN GDG = '20' AND
              GDG-COD-ESTA IN GDG = '15' AND
              GDG-FEC-FTRN IN GDG = WSS-FEC-ULT-ACT IN WSS-VARI

              MOVE '10' TO GDG-COD-ESTA IN GDG                               
              GO TO SIG-FIN-CMN-MOD.

           IF SCR-CMND = 'EJE' AND 
              GDG-IND-EST1 IN GDG NOT = '20'
              GO TO SIG-FIN-CMN-MOD.
      *>>>>
*% END
           MOVE HOY-FHOY TO GMO-FEC-FMOV IN GMO.
           MOVE HOY-HHOY TO GMO-HRA-HMOV IN GMO.
           MOVE SCR-OTRN TO GMO-TML-TMOV IN GMO.
           MOVE SCR-USER TO GMO-CIC-UING IN GMO.

           MOVE HOY-FHOY            TO GMO-FEC-FING IN GMO.
           MOVE GDG-CAI-GTIA IN GDG TO GMO-CAI-GTIA IN GMO.
           MOVE GDG-IIC-GTIA IN GDG TO GMO-IIC-GTIA IN GMO.
           MOVE ZEROES              TO GMO-NUM-IMOV IN GMO.
           MOVE '3'                 TO GMO-COD-MOVI IN GMO.
           MOVE GDG-COD-TSCN IN GDG TO GMO-NUM-TASN IN GMO.
           MOVE 'GDG001'            TO GMO-COD-CMPO IN GMO.
           MOVE 'N'                 TO GMO-IND-VALO IN GMO.
           MOVE 'S'                 TO GMO-IND-CLVE IN GMO.
           MOVE SPACES              TO GMO-GLS-CMPA IN GMO.
           MOVE ZEROES              TO GMO-SGV-CMPA IN GMO.
           MOVE GDG-IND-EST1 IN GDG TO GMO-COD-NCLV IN GMO.
           MOVE SPACES              TO GMO-GLS-NCMP IN GMO.
           MOVE ZEROES              TO GMO-SGV-NCMP IN GMO.
           MOVE GDG-COD-OFIC IN GDG TO GMO-COD-OFMV IN GMO.
      *     MOVE ZEROES             TO GMO-VAL-CCON IN GMO.
      *     MOVE ZEROES             TO GMO-VAL-CCOM IN GMO.
      *
           IF SCR-CMND = 'EJE' OR SCR-CMND = 'CAD'
              MOVE GDG-VAL-CCON IN GDG TO GMO-VAL-CCON IN GMO
              MOVE GDG-VAL-CCOM IN GDG TO GMO-VAL-CCOM IN GMO.
      *
           MOVE FIO-PUT TO FIO-CMND.
           PERFORM BGL-FIO-GMO.

       SIG-FIN-CMN-MOD.
      *>>>>
*% END
      *>>>>
*% END
*% IF FIN_CMN_MOD
      *<<<< FIN_CMN_MOD

           IF NOT FIO-STAT-OKS                                                  
      *        Error inconsistencia en la modificacion : informar               
               MOVE FIO-MENS TO FRM-MENS
               GO TO FIN-CMN-MOD.
*% IF GEN_BCI
      *<<<< GEN_BCI
      *EVA-INI-AFRI/FEB 2006                                            
           MOVE GDG-CAI-GTIA IN GDG-FLD TO                              
                POL-CAI-GTIA IN POL.                                    
           MOVE GDG-IIC-GTIA IN GDG-FLD TO                              
                POL-IIC-GTIA IN POL.                                    
           MOVE FIO-GET-KEY TO FIO-CMND.                                
           PERFORM BGL-FIO-POL.                                         
           IF FIO-STAT-OKS                                              
             IF                                                         
             ((GDG-IND-ECRS IN GDG-FLD NOT = WSS-IND-ECRS  OR           
               GDG-IND-ECRT IN GDG-FLD NOT = WSS-IND-ECRT ) AND         
              (POL-COD-ESGE IN POL = '11'))                             
                MOVE FIO-GET-KEY-UPD TO FIO-CMND                        
                PERFORM BGL-FIO-POL                                     
                MOVE '50' TO POL-COD-ESGE IN POL                        
                MOVE FIO-MOD TO FIO-CMND                                
                PERFORM BGL-FIO-POL.                                    
           MOVE '00' TO FIO-STAT.                                       
      *EVA-FIN-AFRI/FEB 2006                                            
      *PTC-INI-MAN
           IF NOT ( SCR-OFRM-SRV AND
                    SCR-CMND = 'MOD' )
      *PTC-FIN-MAN
      *>>>>
*% END
           IF WSS-OTRO-GDD
               PERFORM MOD-GDD
               IF NOT FIO-STAT-OKS
                   MOVE 'GDDMODERR' TO MSG-COD-MENS
                   MOVE 'BGL' TO MSG-COD-SIST
                   PERFORM GET-MSG
                   MOVE MSG-GLS-MENS TO FRM-MENS
                   GO TO FIN-CMN-MOD
               ELSE
                   NEXT SENTENCE
           ELSE
           IF WSS-PRIMER-GDD
               PERFORM PUT-GDD
               IF NOT FIO-STAT-OKS
                   MOVE 'GDDINGERR' TO MSG-COD-MENS
                   MOVE 'BGL' TO MSG-COD-SIST
                   PERFORM GET-MSG
                   MOVE MSG-GLS-MENS TO FRM-MENS
                   GO TO FIN-CMN-MOD.
      *
           IF SCR-CMND = 'CAN'                                           
              IF GDG-IND-EST1 IN GDG-FLD = '20'
                 MOVE 'CANOK ' TO MSG-COD-MENS                                 
              ELSE                                                          
                 MOVE 'CANOKTRAM ' TO MSG-COD-MENS.                            
      *
           IF SCR-CMND = 'CAN'                                           
               MOVE 'BGL'        TO MSG-COD-SIST
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS.
      *>>>>
*% END
*% IF INI_CMN_ACC
      *<<<< INI_CMN_ACC

*% IF PGM_VMS
      *<<<< PGM_VMS
           MOVE 'GDG' TO WSS-REG.
      *>>>>
*% END
*% IF FIN_HBL_KEY
      *<<<< FIN_HBL_KEY
           IF SCR-CMND = 'MST'                                          
              MOVE FRM-CPIM-AEY TO GDG-COD-RLCM-ATR IN GDG-FLD          
              MOVE FRM-CPIM-AEY TO GDG-COD-RLUN-ATR IN GDG-FLD          
              MOVE FRM-CPIM-AEY TO GDG-GLS-RLVR-ATR IN GDG-FLD          
              MOVE FRM-CPIM-AEY TO GDG-COD-OFIC-ATR IN GDG-FLD          
              MOVE FRM-CPIM-AEY TO GDG-IND-INOB-ATR IN GDG-FLD          
              MOVE FRM-CPIM-AEY TO GDG-GLS-DGTA-ATR IN GDG-FLD          
              MOVE FRM-CPIM-AEY TO GDG-GLS-DGT1-ATR IN GDG-FLD          
              MOVE FRM-CPIM-AEY TO GDG-CIC-EJOR-ATR IN GDG-FLD          
              MOVE FRM-CPIM-AEY TO GDG-FEC-FVTO-ATR IN GDG-FLD          
              MOVE FRM-CPIM-AEY TO GDG-COD-TGCM-ATR IN GDG-FLD          
              MOVE FRM-CPIM-AEY TO FRM-VRF-ICLI-ATR IN GDG-FLD          
              MOVE FRM-CPIM-AEY TO FRM-IND-ICLI-ATR IN GDG-FLD          
              MOVE FRM-CPIM-AEY TO FRM-GLS-ICLI-ATR IN GDG-FLD          
              MOVE FRM-CPIM-AEY TO FRM-NUM-ICLI-ATR IN GDG-FLD          
              MOVE FRM-CPIM-UBY TO GDG-STP-CGTA-ATR IN GDG-FLD          
              MOVE FRM-POS-CURS TO GDG-STP-CGTA-LEN IN GDG-FLD.         
      * EVA-FIN-AFRI/ENERO2006                                          
      *>>>>
*% END
*% IF GEN_BCI
      *<<<< GEN_BCI
      *AFRI-INI/MAY-2005                                                
           IF SCR-CMND = 'ALC'                                          
               MOVE GDG-CAI-GTIA IN GDG-FLD TO GDG-CAI-GTIA IN GDG      
               MOVE GDG-IIC-GTIA IN GDG-FLD TO GDG-IIC-GTIA IN GDG      
               MOVE FIO-GET-KEY-UPD  TO FIO-CMND                        
               PERFORM BGL-FIO-GDG                                      
               IF NOT FIO-STAT-OKS                                      
                   MOVE 'S' TO SCR-IERR                                 
                   MOVE 'BGL' TO MSG-COD-SIST                           
                   MOVE 'GDG   NOEXI'   TO MSG-COD-MENS                 
                   PERFORM GET-MSG                                      
                   MOVE MSG-GLS-DESC TO FRM-MENS                        
                   GO TO FIN-CMN-ACC                                    
               ELSE                                                     
                    MOVE '07'  TO GDG-IND-EST1 IN GDG                   
                    MOVE '005' TO GDG-COD-EST1 IN GDG                   
                    MOVE FIO-MOD TO FIO-CMND                            
                    PERFORM BGL-FIO-GDG                                 
                    IF FIO-STAT-OKS                                     
      *                MOVE 'S' TO SCR-IERR                             
                       MOVE 'BGL' TO MSG-COD-SIST                       
                       MOVE 'GDG   ALC'   TO MSG-COD-MENS               
                       PERFORM GET-MSG                                  
                       MOVE MSG-GLS-DESC TO FRM-MENS                    
                       GO TO FIN-CMN-ACC.                               
      *AFRI-FIN/MAY-2005                                                
           IF ((SCR-CMND = 'AGA' OR                                     
              SCR-CMND = 'ACE') AND GAR-IND-GTAC IN CMA-VARI NOT = 'S') 
               MOVE GDG-CAI-GTIA IN GDG-FLD TO GSO-CAI-GTIA IN GSO 
               MOVE GDG-IIC-GTIA IN GDG-FLD TO GSO-IIC-GTIA IN GSO
               MOVE 'GSO-KEY-IGDG' TO FIO-AKEY
               MOVE FIO-GET-KEY TO FIO-CMND
               PERFORM BGL-FIO-GSO
               IF (FIO-STAT-OKS AND GSO-COD-ESGA IN GSO < '07' OR       
                   FIO-STAT-OKS AND GSO-COD-ESGA IN GSO = '11')         
                   MOVE 'S' TO SCR-IERR
                   MOVE 'BGL' TO MSG-COD-SIST
                   MOVE 'GDG NOAGA GSO' TO MSG-COD-MENS
                   PERFORM GET-MSG
                   MOVE MSG-GLS-DESC TO FRM-MENS
                   GO TO FIN-CMN-ACC.

           IF NOT (SCR-CMND = 'AGA' OR SCR-CMND = 'ACE')                
               GO TO CNT-SIN-GAP.                                       
      * EVA                                                             
           IF SCR-CMND = 'AGA'                                          
              MOVE 'NO'         TO PTT-EXT-PNTL.                        
              MOVE 'BGL'        TO TAB-COD-SIST FIO-SIST.               
              MOVE 'VSN'        TO TAB-COD-TTAB IN TAB.                 
              MOVE 'BGLGLEGAP'  TO TAB-COD-CTAB IN TAB.                 
              MOVE FIO-GET-KEY TO FIO-CMND.                             
              PERFORM GNS-FIO-TAB.                                      
              IF NOT ( FIO-STAT-OKS AND                                 
                    TAB-IND-VIGE IN TAB = 'S')                          
                   GO TO FIN-CMN-ACC.                                   
              MOVE TAB-GLS-DATA IN TAB TO PTT-GLS-DATA.                 
              MOVE 'SI'         TO PTT-EXT-PNTL                         
              PERFORM BUS-PTT.                                          
              IF PTT-EXT-PNTL = 'SI'                                    
                 GO TO CNT-SIN-GAP.                                     
                                                                        
      *MHM-INI 20-DIC-2004                                              
           MOVE 'BGL'        TO TAB-COD-SIST FIO-SIST.                  
           MOVE 'VGD'        TO TAB-COD-TTAB IN TAB.                    
           MOVE GDG-TIP-CGTA IN GDG-FLD  TO WSS-TIP-CGTA.               
           MOVE GDG-STP-CGTA IN GDG-FLD  TO WSS-STP-CGTA.               
           MOVE WSS-COD-CGTA IN WSS-VARI TO TAB-COD-CTAB IN TAB.        
           MOVE FIO-GET-KEY  TO FIO-CMND.                               
            PERFORM GNS-FIO-TAB.                                         
           IF FIO-STAT-OKS AND TAB-IND-VIGE = 'S'                       
               GO TO CNT-DAP.                                           
      *MHM-FIN 20-DIC-2004                                              
      *MHM-INI 03-DIC-2003
           MOVE SPACES TO WSS-IND-EGAP IN WSS-VARI.
           MOVE SPACES TO WSS-IND-GAPB IN WSS-VARI.
      *MHM-FIN 03-DIC-2003
           MOVE GDG-CAI-GTIA IN GDG-FLD TO GAP-CAI-GTIA IN GAP.
           MOVE GDG-IIC-GTIA IN GDG-FLD TO GAP-IIC-GTIA IN GAP.
           MOVE ZEROES                  TO GAP-COD-PACR IN GAP.
           MOVE FIO-GET-NLS TO FIO-CMND.
       LUP-LEE-GAP.
           PERFORM BGL-FIO-GAP.
           IF NOT ( FIO-STAT-OKS AND
              GAP-CAI-GTIA IN GAP = GDG-CAI-GTIA IN GDG-FLD AND
              GAP-IIC-GTIA IN GAP = GDG-IIC-GTIA IN GDG-FLD )
               GO TO CNT-SIN-GAP.
      *MHM-INI 03-DIC-2003
           MOVE 'S' TO WSS-IND-EGAP IN WSS-VARI.
      *MHM-FIN 03-DIC-2003
           IF GAP-IND-ESBA IN GAP = 'S'
      *MHM-INI 03-DIC-2003
               MOVE 'S' TO WSS-IND-GAPB IN WSS-VARI
      *MHM-FIN 03-DIC-2003
               MOVE GAP-CAI-GTIA IN GAP TO GLE-CAI-GTIA IN GLE
               MOVE GAP-IIC-GTIA IN GAP TO GLE-IIC-GTIA IN GLE
               MOVE GAP-COD-PACR IN GAP TO GLE-COD-PACR IN GLE
               MOVE FIO-GET-KEY TO FIO-CMND
               PERFORM BGL-FIO-GLE
               IF NOT FIO-STAT-OKS
                  MOVE 'S' TO SCR-IERR
                  MOVE 'BGL' TO MSG-COD-SIST
                  MOVE 'GDG NOAGAGLE' TO MSG-COD-MENS
                  PERFORM GET-MSG
                  MOVE MSG-GLS-DESC TO FRM-MENS
                  GO TO FIN-CMN-ACC.

           MOVE FIO-GET-NXT TO FIO-CMND.
           GO TO LUP-LEE-GAP.

       CNT-SIN-GAP.
      *MHM-INI 03-DIC-2003
           IF WSS-IND-EGAP IN WSS-VARI = 'S' AND
              WSS-IND-GAPB IN WSS-VARI NOT = 'S'
               MOVE 'S' TO SCR-IERR
               MOVE 'BGL' TO MSG-COD-SIST
               MOVE 'GDG GAPNOBCO' TO MSG-COD-MENS
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS
               GO TO FIN-CMN-ACC.
              
      *MHM-FIN 03-DIC-2003
      *MHM-INI 20-DIC-2004                                              
       CNT-DAP.                                                         
      *MHM-FIN 20-DIC-2004                                              
      *MHM-INI 21-OCT-2003
           MOVE SPACES TO VCG-FEC-FVTO IN VCG-VARI.
           MOVE SCR-CMND    TO VCG-CMND IN VCG-VARI.                    
           IF GDG-COD-LGTA IN GDG-FLD NOT = 'E'
               GO TO CNT-NO-ESPECIFICA.

           IF NOT (SCR-CMND = 'AGA' OR SCR-CMND = 'ACE')                
               GO TO CNT-NO-ESPECIFICA.

           MOVE GDG-TIP-CGTA IN GDG-FLD TO TAG-COD-TOPE IN TAG.
           MOVE GDG-STP-CGTA IN GDG-FLD TO TAG-COD-SOPE IN TAG.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM BGL-FIO-TAG.
           IF TAG-IND-SVTO IN TAG NOT = 'S'
               GO TO CNT-NO-ESPECIFICA.

           MOVE ZEROES TO WSS-NUM-SVTO IN WSS-VARI.
           MOVE ZEROES TO WSS-NUM-AVTO IN WSS-VARI.
           MOVE ZEROES TO WSS-NUM-MVTO IN WSS-VARI.
           MOVE ZEROES TO WSS-NUM-DVTO IN WSS-VARI.

           MOVE GDG-CAI-GTIA IN GDG-FLD TO GES-CAI-GTIA IN GES.
           MOVE GDG-IIC-GTIA IN GDG-FLD TO GES-IIC-GTIA IN GES.
           MOVE ZEROES              TO GES-NUM-IGES IN GES.
           MOVE FIO-GET-NLS TO FIO-CMND.
       LUP-LEE-GES-AGA.
           PERFORM BGL-FIO-GES.
           IF NOT ( FIO-STAT-OKS AND
              GES-CAI-GTIA IN GES = GDG-CAI-GTIA IN GDG-FLD AND
              GES-IIC-GTIA IN GES = GDG-IIC-GTIA IN GDG-FLD )
      *MHM-INI 21-OCT-2003
              IF FIO-STAT-OKS OR FIO-STAT-EOF
                 MOVE FIO-END-BRW TO FIO-CMND
                 PERFORM BGL-FIO-GES
                 GO TO CNT-NO-ESPECIFICA
              ELSE
      *MHM-FIN 21-OCT-2003
               GO TO CNT-NO-ESPECIFICA.

           MOVE GES-CAI-IOPC IN GES TO DLC-CAI-IOPC IN DLC.
           MOVE GES-IIC-IOPC IN GES TO DLC-IIC-IOPC IN DLC.
           MOVE GES-NUM-IDLC IN GES TO DLC-NUM-IDLC IN DLC.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM COL-FIO-DLC.
           IF NOT FIO-STAT-OKS
               MOVE 'BGL' TO MSG-COD-SIST
               MOVE 'DLC    NEX' TO MSG-COD-MENS
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS
               GO TO FIN-CMN-ACC.

           IF DLC-FEC-FMAV IN DLC > WSS-FEC-FVTO IN WSS-VARI
              MOVE DLC-FEC-FMAV IN DLC TO WSS-FEC-FVTO IN WSS-VARI
              MOVE WSS-NUM-SVTO TO VCG-NUM-SVTO IN VCG-VARI
              MOVE WSS-NUM-AVTO TO VCG-NUM-AVTO IN VCG-VARI
              MOVE WSS-NUM-MVTO TO VCG-NUM-MVTO IN VCG-VARI
              MOVE WSS-NUM-DVTO TO VCG-NUM-DVTO IN VCG-VARI.

           MOVE FIO-GET-NXT TO FIO-CMND.
           GO TO LUP-LEE-GES-AGA.

       CNT-NO-ESPECIFICA.
      *MHM-FIN 21-OCT-2003
      *>>>>
*% END
           MOVE GDG-CAI-GTIA IN GDG-FLD TO GAR-CAI-GTIA IN CMA-VARI.
           MOVE GDG-IIC-GTIA IN GDG-FLD TO GAR-IIC-GTIA IN CMA-VARI.
           PERFORM GAR-PRO-VCG.
           IF MSG-COD-MENS NOT = 'GAR    CPLOK'
*% IF GEN_BCI
      *<<<< GEN_BCI
      *FLB CST  17-FEB-1995
               MOVE FIO-BCK-OUT TO FIO-CMND
               PERFORM BGL-FIO-GDG
               GO TO FIN-CMN-ACC.
           IF FRM-IIC-IOPD IN GDG-FLD > ZEROES                          
               MOVE FRM-CAI-IOPD IN GDG-FLD TO OPD-CAI-IOPD IN OPD      
               MOVE FRM-IIC-IOPD IN GDG-FLD TO OPD-IIC-IOPD IN OPD      
               MOVE FIO-GET-KEY-UPD TO FIO-CMND                         
               PERFORM DAP-FIO-OPD                                      
               MOVE 'S' TO OPD-COD-GARA IN OPD                          
               MOVE FIO-MOD TO FIO-CMND                                 
               PERFORM DAP-FIO-OPD.                                     
      *FLB CST  17-FEB-1995
      *MHM-INI 14-AUG-2003
           MOVE GDG-CAI-GTIA IN GDG-FLD TO GSO-CAI-GTIA IN GSO. 
           MOVE GDG-IIC-GTIA IN GDG-FLD TO GSO-IIC-GTIA IN GSO.
           MOVE 'GSO-KEY-IGDG' TO FIO-AKEY.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM BGL-FIO-GSO.
           IF NOT FIO-STAT-OKS
               GO TO ERR-CMN-ACC.

           MOVE FIO-GET-KEY-UPD TO FIO-CMND.
           PERFORM BGL-FIO-GSO.
           MOVE '10' TO GSO-COD-ESGA IN GSO.
           MOVE FIO-MOD TO FIO-CMND.
           PERFORM BGL-FIO-GSO.
           IF NOT FIO-STAT-OKS
               GO TO ERR-CMN-ACC.

           MOVE GSO-NUM-SBGL IN GSO TO GSL-NUM-SBGL IN GSL.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM BGL-FIO-GSL.
           IF NOT FIO-STAT-OKS
               GO TO ERR-CMN-ACC.

           MOVE FIO-GET-KEY-UPD TO FIO-CMND.
           PERFORM BGL-FIO-GSL.
           MOVE '10' TO GSL-COD-ESOL IN GSL.
           MOVE FIO-MOD TO FIO-CMND.
           PERFORM BGL-FIO-GSL.
           IF NOT FIO-STAT-OKS
               GO TO ERR-CMN-ACC.

       ERR-CMN-ACC.
      *MHM-FIN 14-AUG-2003
           GO TO FIN-CMN-ACC.
      *>>>>
*% ELSE
              MOVE 'S' TO SCR-IERR.
*% END
*% IF PGM_MCP
      *<<<< PGM_MCP
           IF SCR-CMND = 'AGA'
              MOVE GDG-IND-EST1 IN GDG-FLD TO WSS-ANT IN WSS-VARI
              MOVE '10'                    TO GDG-IND-EST1 IN GDG-FLD
              PERFORM KEY-LAF-GDG
              MOVE 'GDG-ES1'                TO LAF-COD-NFLD IN LAF
              MOVE  GDG-IND-EST1 IN GDG-FLD TO LAF-GLS-DNEW IN LAF
              MOVE WSS-ANT IN WSS-VARI      TO LAF-GLS-DOLD IN LAF
      *RRM-FIN 11-JUN-2002
      *       PERFORM PUT-LAF.
              PERFORM PUT-LAF
              IF FIO-STAT-OKS
                 PERFORM VRF-IND-TAG.
      *RRM-FIN 11-JUN-2002
           GO TO FIN-CMN-ACC.
      *>>>>
*% END
      *>>>>
*% END
*% IF CMN_ELI
      *<<<< CMN_ELI
*% IF ( PGM_VSI OR PGM_DB2 ) AND PGM_PU AND NOT PGM_VMS
      *<<<< ( PGM_VSI OR PGM_DB2 ) AND PGM_PU AND NOT PGM_VMS
           PERFORM ELI-GAP.
           PERFORM ELI-GDO.
           PERFORM ELI-GDP.
           PERFORM ELI-GES.
           PERFORM ELI-GIN.
           PERFORM ELI-GLE.
           PERFORM ELI-GSE.
           PERFORM ELI-GSI.
           PERFORM ELI-GTP.
           PERFORM ELI-GUB.
           PERFORM ELI-GVT.
*% ELSE
      *<<<< NOT (( PGM_VSI OR PGM_DB2 ) AND PGM_PU AND NOT PGM_VMS )
      *RRM-INI 31-MAY-2002
           IF GDG-IND-EST1 IN GDG NOT = '05'
               MOVE 'BGL' TO MSG-COD-SIST
               MOVE 'GDG NOELI' TO MSG-COD-MENS
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS
               GO TO FIN-CMN-ELI.
*% IF NOT GEN_BCI
      *<<<< NOT GEN_BCI
      *Verifica GSO, si es obligatorio
           PERFORM LECTURA-TAG
           IF NOT FIO-STAT-OKS
               MOVE 'BGL'        TO MSG-COD-SIST
               MOVE 'TAG    NEX' TO MSG-COD-MENS
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS
               GO TO FIN-CMN-ELI.
      
      *Verifica Eliminacion de GSO, si es obligatorio
           IF NOT ( TAG-IND-EGSL IN TAG = 'S' AND TAG-IND-EGSO = 'S' )
               GO TO SIGUE-COMANDO-ELI.
      
      *Analiza si todos los estados de GSL relacionados a GSO es '01'
           PERFORM VER-GAR-GSO.
           IF MSG-COD-MENS = 'GSO    NEX' OR MSG-COD-MENS = SPACES
               MOVE '00'   TO FIO-STAT
               MOVE SPACES TO MSG-COD-MENS
           ELSE
              IF NOT FIO-STAT-OKS OR MSG-COD-MENS NOT = SPACES
                  PERFORM GET-MSG
                  MOVE MSG-GLS-DESC TO FRM-MENS
                  GO TO FIN-CMN-ELI.
      
      *Busca si existe al menos 1 GSO asociada.
           MOVE GDG-KEY-IGDG IN GDG TO GSO-KEY-IGDG IN GSO.
           MOVE ZEROES              TO GSO-NUM-SBGL IN GSO.
           MOVE FIO-GET-NLS TO FIO-CMND.
           MOVE 'GSO-KEY-IGDG' TO FIO-AKEY.
           PERFORM BGL-FIO-GSO.
           IF NOT ( FIO-STAT-OKS AND
                    GDG-KEY-IGDG IN GDG = GSO-KEY-IGDG IN GSO )
      *No importa que no existan GSOs ya que se van e elimnar
      *        MOVE 'BGL'        TO MSG-COD-SIST
      *        MOVE 'GSO    NEX' TO MSG-COD-MENS
      *        PERFORM GET-MSG
      *        MOVE MSG-GLS-DESC TO FRM-MENS
               MOVE '00'   TO FIO-STAT
               GO TO SIGUE-COMANDO-ELI.
      
           PERFORM ELI-GAR-GSO.
      
           IF NOT FIO-STAT-OKS
               MOVE 'BGL' TO MSG-COD-SIST
               MOVE 'GDG NOELI' TO MSG-COD-MENS
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS
               GO TO FIN-CMN-ELI.
      *>>>>
*% END
       SIGUE-COMANDO-ELI.
      *RRM-FIN 31-MAY-2002

           PERFORM GAR-PRO-ELI.
      *>>>>
*% END
      *>>>>
*% END
*% IF FIN_CMN_ELI
      *<<<< FIN_CMN_ELI
           IF NOT FIO-STAT-OKS
      *        Error inconsistencia en la eliminacion : informar
               MOVE FIO-MENS TO FRM-MENS
               GO TO FIN-CMN-ELI.

           PERFORM DEL-GDD.
           IF NOT FIO-STAT-OKS
               GO TO FIN-CMN-ELI.
      *>>>>
*% END
*% IF EOF
      *<<<< EOF
      *Buscar tabla en garantia el CIC.
       BUS-CIC-GAR SECTION.
       INI-BUS-CIC-GAR.
      *BUS-TAB Busca codigo de tabla
           MOVE 'BGL'     TO TAB-COD-SIST.
           MOVE 'CIC'     TO TAB-COD-TTAB IN TAB.
           MOVE 'PROCIC'  TO TAB-COD-CTAB IN TAB.

           PERFORM BUS-TAB.
           IF MSG-COD-MENS = SPACES
              MOVE TAB-GLS-DAT1 IN TAB TO GAR-CIC-OFIC IN CMA-VARI
           ELSE
               MOVE SPACES TO GAR-CIC-OFIC IN CMA-VARI.
       FIN-BUS-CIC-GAR.
           EXIT.
*% IF (PGM_PER OR PGM_CLB OR PGM_MEX) AND NOT PGM_VSI
      *<<<< (PGM_PER OR PGM_CLB OR PGM_MEX) AND NOT PGM_VSI
       COPY GNSBGVSM.
       COPY GNSBHVSM.
      *>>>>
*% END
      *<<<< EOFPQPU
       GET-GDD SECTION.
       INI-GET-GDD.
           MOVE DBC-KEY-IDBC IN DBC     TO GDD-CIC-DCLI IN GDD.
           MOVE GDG-CAI-GTIA IN GDG-FLD TO GDD-CAI-GTIA IN GDD.
           MOVE GDG-IIC-GTIA IN GDG-FLD TO GDD-IIC-GTIA IN GDD.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM BGL-FIO-GDD.
           IF FIO-STAT-OKS AND 
              GDD-CIC-DCLI IN GDD = DBC-KEY-IDBC IN DBC
               MOVE GDD-KEY-AGDD IN GDD TO GDG-KEY-IGDG IN GDG
               MOVE 2 TO WSS-IBUS
               MOVE FIO-GET-KEY TO FIO-CMND
               PERFORM BGL-FIO-GDG
               IF FIO-STAT-OKS
                   MOVE 3 TO WSS-IBUS.
       FIN-GET-GDD.
           EXIT.

       GET-CUR-GDD SECTION.
       INI-GET-CUR-GDD.
           MOVE GDG-KEY-IGDG IN GDG TO GDD-KEY-AGDD IN GDD.
           MOVE 'GDD-KEY-AGDD' TO FIO-AKEY.
           MOVE FIO-GET-NLS TO FIO-CMND.
           PERFORM BGL-FIO-GDD.
           IF FIO-STAT-OKS
               MOVE 'GDD-KEY-AGDD' TO FIO-AKEY
               MOVE FIO-END-BRW TO FIO-CMND
               PERFORM BGL-FIO-GDD.
           IF NOT
              GDG-KEY-IGDG IN GDG = GDD-KEY-AGDD IN GDD
               MOVE '23' TO FIO-STAT.
       FIN-GET-CUR-GDD.
           EXIT.
       GET-CUR-GDD-MUL SECTION.
       INI-GET-CUR-GDD-MUL.
           MOVE SPACES   TO WSS-IND-CMUL IN CMA-VARI.
           MOVE GDG-KEY-IGDG IN GDG TO GDD-KEY-AGDD IN GDD.
           MOVE 'GDD-KEY-AGDD' TO FIO-AKEY.
           MOVE FIO-GET-NLS TO FIO-CMND.
           PERFORM BGL-FIO-GDD.
      *
           IF FIO-STAT-OKS   AND
              GDG-KEY-IGDG IN GDG = GDD-KEY-AGDD IN GDD
                MOVE 'GDD-KEY-AGDD' TO FIO-AKEY
                MOVE FIO-GET-NXT TO FIO-CMND
                PERFORM BGL-FIO-GDD
                IF FIO-STAT-OKS AND
                   GDG-KEY-IGDG IN GDG = GDD-KEY-AGDD IN GDD
                   MOVE 'M' TO WSS-IND-CMUL.

       FIN-GET-CUR-GDD-MUL.
           EXIT.

       COPY SGCBFDBC.
       COPY BGLBFGDD.
       COPY SGCBGCLI.
*% IF PGM_MEX OR GEN_BCI
      *<<<< PGM_MEX OR GEN_BCI
       COPY BGLBFGSL.
       COPY BGLBFGSO.
      *>>>>
*% END
*% IF PGM_PU OR NOT NO_CIC_PQ
      *<<<< PGM_PU OR NOT NO_CIC_PQ
       COPY GNSBFCIC.
      *>>>>
*% END
*% IF PGM_PU
      *<<<< PGM_PU
       COPY GNSBGCIC.
      *>>>>  
*% END
      *<<<< UNS_FLD
       COPY GNSBGCPT.
       COPY GNSBGSTR.
      *>>>>
*% IF (PGM_PER OR PGM_CLB OR PGM_MEX) 
      *<<<< (PGM_PER OR PGM_CLB OR PGM_MEX)
       BUS-GDO-OPD SECTION.
       INI-BUS-GDO-OPD.
           MOVE SPACES TO MSG-COD-MENS.
           MOVE SPACES TO DAP-CIC-TGAR IN DAP-VARI.
           MOVE GDG-CAI-GTIA IN GDG-FLD TO GDO-CAI-GTIA IN GDO.
           MOVE GDG-IIC-GTIA IN GDG-FLD TO GDO-IIC-GTIA IN GDO.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM BGL-FIO-GDO.
           IF NOT FIO-STAT-OKS
               MOVE 'BGL'          TO MSG-COD-SIST
               MOVE 'GDO    NEX'   TO MSG-COD-MENS
               GO TO FIN-BUS-GDO-OPD.
           MOVE GDO-COD-DOCU IN GDO TO OPD-IIC-IOPD IN DAP-VARI.
       FIN-BUS-GDO-OPD.
           EXIT.
*% END
      *>>>>
*% END
*% IF EOF AND PGM_PU
      *<<<< EOF AND PGM_PU
*% IF GEN_BCI
      *<<<< GEN_BCI
      * SOLO POR DEP A PLAZO PROPIO
       PUT-DBC-GDG SECTION.
       INI-PUT-DBC-GDG.
           IF DBC-KEY-IDBC IN CMA-VARI > SPACES
               MOVE DBC-KEY-IDBC IN CMA-VARI TO DBC-CIC-ICLI IN DBC
               MOVE 'DBC-KEY-IDBC'  TO FIO-AKEY
               MOVE FIO-GET-KEY TO FIO-CMND
               PERFORM SGC-FIO-DBC
               MOVE FIO-STAT TO PGM-STAT-DBC
           ELSE
               MOVE FIO-STAT-NEX TO PGM-STAT-DBC.
           IF PGM-STAT-DBC-NUL
               GO TO FIN-PUT-DBC-GDG.
           IF NOT PGM-STAT-DBC-OKS
               PERFORM CLR-DBC-GDG
               GO TO FIN-PUT-DBC-GDG.
           MOVE DBC-CAI-ICLI IN DBC TO CNE-DBC-CAI-ICLI IN SCR-VARI.
           MOVE DBC-IIC-ICLI IN DBC TO CNE-DBC-IIC-ICLI IN SCR-VARI.
           MOVE DBC-GLS-NOMC IN DBC TO DBC-GLS-NOMC IN GDG-FLD.
           MOVE DBC-IND-ICLI IN DBC TO DBC-IND-ICLI IN GDG-FLD.
           MOVE DBC-GLS-ICLI IN DBC TO DBC-GLS-ICLI IN GDG-FLD.
           MOVE DBC-NUM-ICLI IN DBC TO DBC-NUM-ICLI IN GDG-FLD.
           MOVE DBC-VRF-ICLI IN DBC TO DBC-VRF-ICLI IN GDG-FLD.
           MOVE DBC-GLS-NOMC IN DBC TO CPT-STRN.
           PERFORM CPT-BLKS.
           MOVE CPT-STRN TO DBC-GLS-NOMC IN GDG-FLD.
       FIN-PUT-DBC-GDG.
           EXIT.
      *>>>>
*% END
*% IF NOT ( PGM_VSI OR PGM_DB2 )
      *<<<< ( PGM_VSI OR PGM_DB2 )
      * COPY BGLBFGMO.
      *>>>>
*% END
*% IF ( PGM_VSI OR PGM_DB2 ) 
      *<<<< ( PGM_VSI OR PGM_DB2 ) 
*% IF PGM_VSI
       COPY BGLBFGAP.
       COPY BGLBFGDO.
       COPY BGLBFGDP.
       COPY BGLBFGES.
       COPY BGLBFGIN.
       COPY BGLBFGLE.
       COPY BGLBFGSE.
       COPY BGLBFGSI.
       COPY BGLBFGTP.
       COPY BGLBFGUB.
       COPY BGLBFGVT.
       COPY BGLBFGMO.
*% ELSE
*% IF PGM_DB2 
           EXEC SQL INCLUDE GARBFGAP END-EXEC.
           EXEC SQL INCLUDE GARBFGDO END-EXEC.
           EXEC SQL INCLUDE GARBFGDP END-EXEC.
           EXEC SQL INCLUDE GARBFGES END-EXEC.
           EXEC SQL INCLUDE GARBFGIN END-EXEC.
           EXEC SQL INCLUDE GARBFGLE END-EXEC.
           EXEC SQL INCLUDE GARBFGSE END-EXEC.
           EXEC SQL INCLUDE GARBFGSI END-EXEC.
           EXEC SQL INCLUDE GARBFGTP END-EXEC.
           EXEC SQL INCLUDE GARBFGUB END-EXEC.
           EXEC SQL INCLUDE GARBFGVT END-EXEC.
           EXEC SQL INCLUDE GARBFGMO END-EXEC.
*% END
*% END
      *>>>>
*% END
*%!
*% IF (PGM_PER) AND PGM_PU AND NOT PGM_VMS
      *<<<< (PGM_PER) AND PGM_PU AND NOT PGM_VMS
      * SOLO POR DEP A PLAZO PROPIO
       PUT-DBC-GDG SECTION.
       INI-PUT-DBC-GDG.
           IF DBC-KEY-IDBC IN CMA-VARI > SPACES
               MOVE DBC-KEY-IDBC IN CMA-VARI TO DBC-CIC-ICLI IN DBC
               MOVE 'DBC-KEY-IDBC'  TO FIO-AKEY
               MOVE FIO-GET-KEY TO FIO-CMND
               PERFORM SGC-FIO-DBC
               MOVE FIO-STAT TO PGM-STAT-DBC
           ELSE
               MOVE FIO-STAT-NEX TO PGM-STAT-DBC.
           IF PGM-STAT-DBC-NUL
               GO TO FIN-PUT-DBC-GDG.
           IF NOT PGM-STAT-DBC-OKS
               PERFORM CLR-DBC-GDG
               GO TO FIN-PUT-DBC-GDG.

           MOVE DBC-CAI-ICLI IN DBC TO CNE-DBC-CAI-ICLI IN SCR-VARI.
           MOVE DBC-IIC-ICLI IN DBC TO CNE-DBC-IIC-ICLI IN SCR-VARI.
           MOVE DBC-GLS-NOMC IN DBC TO DBC-GLS-NOMC IN GDG-FLD.
           MOVE DBC-IND-ICLI IN DBC TO DBC-IND-ICLI IN GDG-FLD.
           MOVE DBC-GLS-ICLI IN DBC TO DBC-GLS-ICLI IN GDG-FLD.
           MOVE DBC-NUM-ICLI IN DBC TO DBC-NUM-ICLI IN GDG-FLD.
           MOVE DBC-VRF-ICLI IN DBC TO DBC-VRF-ICLI IN GDG-FLD.
           MOVE DBC-GLS-NOMC IN DBC TO CPT-STRN.
           PERFORM CPT-BLKS.
           MOVE CPT-STRN TO DBC-GLS-NOMC IN GDG-FLD.
       FIN-PUT-DBC-GDG.
           EXIT.
      *>>>>
*% END
      *>>>>
*% END
*% IF EOF AND PGM_PQ
      *<<<< EOF AND PGM_PQ
      *<<<< EOFPQ
*% IF NOT PGM_MCP
       LEE-NXT-PRV-XGDD SECTION.
       INI-LEE-NXT-PRV-XGDD.
           MOVE GAR-KEY-IGDD IN CMA-VARI TO GDD-KEY-IGDD IN GDD. 
           IF FRM-FFLD = FRM-FFLD-PF5
*% IF PGM_VMS
      *<<<< PGM_VMS
               MOVE 'GDD-KEY-PRV' TO FIO-AKEY
               MOVE FIO-GET-NLS TO FIO-CMND
      *>>>>
*% ELSE
      *<<<< NOT PGM_VMS
               MOVE FIO-GET-LEQ TO FIO-CMND
      *>>>>
*% END
               PERFORM BGL-FIO-GDD
               MOVE FIO-GET-PRV TO FIO-CMND
           ELSE
               MOVE FIO-GET-NLS TO FIO-CMND
               PERFORM BGL-FIO-GDD
               MOVE FIO-GET-NXT TO FIO-CMND.

           PERFORM BGL-FIO-GDD.
           MOVE FIO-STAT TO PGM-STAT-GDD.
           IF FIO-STAT-OKS 
               MOVE FIO-END-BRW TO FIO-CMND
               PERFORM BGL-FIO-GDD.
           IF PGM-STAT-GDD-OKS AND
              GDD-CIC-DCLI IN GDD = DBC-KEY-IDBC IN CMA-VARI
               MOVE GDD-KEY-AGDD IN GDD TO GDG-KEY-IGDG IN GDG
               MOVE FIO-GET-KEY TO FIO-CMND
               PERFORM BGL-FIO-GDG
               IF FIO-STAT-OKS
                   MOVE 3 TO WSS-IBUS
                   MOVE GDG-CAI-GTIA IN GDG TO GDG-CAI-GTIA IN GDG-FLD
                   MOVE GDG-IIC-GTIA IN GDG TO GDG-IIC-GTIA IN GDG-FLD
               ELSE
                   MOVE 'DAT ERR' TO MSG-COD-MENS
                   MOVE 'BGL' TO MSG-COD-SIST
                   PERFORM GET-MSG
                   MOVE MSG-GLS-DESC TO FRM-MENS
           ELSE
               MOVE '23' TO FIO-STAT.

       FIN-LEE-NXT-PRV-XGDD.
           EXIT.

       LEE-NXT-PRV-XDBC SECTION.
       INI-LEE-NXT-PRV-XDBC.
           MOVE DBC-KEY-IDBC IN CMA-VARI TO DBC-KEY-IDBC IN DBC.
           MOVE FIO-GET-KEY    TO FIO-CMND.
           PERFORM SGC-FIO-DBC.
           IF CMA-IND-KPAD IN CMA-VARI = 'I'
               MOVE 'DBC-IDC-ICLI'  TO FIO-AKEY
           ELSE
               MOVE 'DBC-GLS-NOMC'  TO FIO-AKEY.

           MOVE FIO-GET-NLS TO FIO-CMND.
           PERFORM SGC-FIO-DBC.
      * BUSCA POR LLAVE SECUNDARIA EL REGISTRO DE PANTALLA ANTERIOR
           PERFORM BUS-DBC-ANT UNTIL
                FIO-STAT-OKS AND
                DBC-KEY-IDBC IN DBC = DBC-KEY-IDBC IN CMA-VARI OR
                NOT FIO-STAT-OKS.

           MOVE 0 TO WSS-IBUS.
           MOVE '23' TO PGM-STAT-DBC.
           IF FIO-STAT-OKS 
               PERFORM LEE-NXT-PRV-DBC
               IF FRM-FFLD = FRM-FFLD-PF7
                   MOVE 'BGL'      TO FIO-SIST
                   MOVE 'VSN '     TO TAB-COD-TTAB IN TAB
*% IF PGM_ARG
      *<<<< PGM_ARG
                   MOVE 'SISNOVSI'   TO TAB-COD-CTAB IN TAB
                   MOVE FIO-GET-KEY TO FIO-CMND
                   PERFORM GNS-FIO-TAB
                   IF FIO-STAT-OKS AND
                      TAB-IND-VIGE IN TAB = 'S'
                       NEXT SENTENCE
                   ELSE
                       MOVE 0 TO WSS-IBUS
                       MOVE '23' TO PGM-STAT-DBC
                       PERFORM LEE-NXT-PRV-DBC.
      *>>>>
*% ELSE
      *<<<< NOT PGM_ARG
                   MOVE 'SISVSI'   TO TAB-COD-CTAB IN TAB
                   MOVE FIO-GET-KEY TO FIO-CMND
                   PERFORM GNS-FIO-TAB
                   IF FIO-STAT-OKS AND
                      TAB-IND-VIGE IN TAB = 'S'
                       MOVE 0 TO WSS-IBUS
                       MOVE '23' TO PGM-STAT-DBC
                       PERFORM LEE-NXT-PRV-DBC.
      *>>>>
*% END
       FIN-LEE-NXT-PRV-XDBC.
           EXIT.
*% END
       BUS-DBC-ANT SECTION.
       INI-BUS-DBC-ANT.
           IF CMA-IND-KPAD IN CMA-VARI = 'I'
               MOVE 'DBC-IDC-ICLI'  TO FIO-AKEY
           ELSE
               MOVE 'DBC-GLS-NOMC'  TO FIO-AKEY.
           MOVE FIO-GET-NXT TO FIO-CMND.
           PERFORM SGC-FIO-DBC.
       FIN-BUS-DBC-ANT.
           EXIT.
*% IF NOT PGM_MCP
       LEE-NXT-PRV-DBC SECTION.
       INI-LEE-NXT-PRV-DBC.
           IF FRM-FFLD = FRM-FFLD-PF7
*% IF PGM_VMS
      *<<<< PGM_VMS
               MOVE 'DBC-GLS-NOMD' TO FIO-AKEY
      *>>>>
*% END
               MOVE FIO-GET-PRV TO FIO-CMND
           ELSE
               MOVE FIO-GET-NXT TO FIO-CMND.
*% IF PGM_VMS
      *<<<< PGM_VMS
           IF FRM-FFLD = FRM-FFLD-PF8
      *>>>>
*% END
           IF CMA-IND-KPAD IN CMA-VARI = 'I'
               MOVE 'DBC-IDC-ICLI'  TO FIO-AKEY
           ELSE
               MOVE 'DBC-GLS-NOMC'  TO FIO-AKEY.
           PERFORM SGC-FIO-DBC.
           MOVE FIO-STAT TO PGM-STAT-DBC.
           IF FIO-STAT-OKS
               MOVE 1 TO WSS-IBUS.
       FIN-LEE-NXT-PRV-DBC.
           EXIT.
*% END
       BUS-ULT-GDG SECTION.
       INI-BUS-ULT-GDG.
*% IF PGM_VMS
      *<<<< PGM_VMS
           STRING DBC-KEY-IDBC IN DBC
                  '999999999999' DELIMITED BY SIZE
              INTO GDD-KEY-PRV IN GDD.
      *    se busca el ultimo hijo, luego de encontrar el padre
           MOVE 'GDD-KEY-PRV' TO FIO-AKEY.
           MOVE FIO-GET-PRV TO FIO-CMND.
      *>>>>
*% END
*% IF PGM_DTC OR PGM_DB2
      *<<<< PGM_DTC OR PGM_DB2
           MOVE DBC-KEY-IDBC IN DBC TO GDD-CIC-DCLI IN GDD.
      *    se busca el ultimo hijo, luego de encontrar el padre
           MOVE '999999999999' TO GDD-KEY-AGDD IN GDD.
           MOVE FIO-GET-LEQ TO FIO-CMND.
      *>>>>
*% END
*% IF NOT PGM_VSI
      *<<<< NOT PGM_VSI
           PERFORM BGL-FIO-GDD.
           IF FIO-STAT-OKS AND 
              GDD-CIC-DCLI IN GDD = DBC-KEY-IDBC IN DBC
               MOVE GDD-KEY-AGDD IN GDD TO GDG-KEY-IGDG IN GDG
               MOVE FIO-GET-KEY TO FIO-CMND
               PERFORM BGL-FIO-GDG
               IF FIO-STAT-OKS
                   MOVE 3 TO WSS-IBUS
                   MOVE GDG-CAI-GTIA IN GDG TO GDG-CAI-GTIA IN GDG-FLD
                   MOVE GDG-IIC-GTIA IN GDG TO GDG-IIC-GTIA IN GDG-FLD.
      *>>>>
*% END
*% IF PGM_VSI
      *<<<< PGM_VSI
      *    se busca el ultimo hijo, luego de encontrar el padre
           MOVE DBC-KEY-IDBC IN DBC TO GDD-CIC-DCLI IN GDD.
           MOVE SPACES               TO GDD-KEY-AGDD IN GDD.
           MOVE SPACES               TO GDG-KEY-IGDG IN GDG.
           MOVE FIO-GET-NLS TO FIO-CMND.
           PERFORM BGL-FIO-GDD.
           IF NOT (
               FIO-STAT-OKS AND 
              GDD-CIC-DCLI IN GDD = DBC-KEY-IDBC IN DBC
                  )
               MOVE 'GDD    NEX' TO MSG-COD-MENS
               GO TO FIN-BUS-ULT-GDG.

       LUP-BUS-ULT-GDG.
           MOVE GDD-KEY-AGDD IN GDD TO GDG-KEY-IGDG IN GDG.
           MOVE FIO-GET-NXT TO FIO-CMND.
           PERFORM BGL-FIO-GDD.
           IF FIO-STAT-OKS AND 
              GDD-CIC-DCLI IN GDD = DBC-KEY-IDBC IN DBC
               GO TO LUP-BUS-ULT-GDG.
           IF FIO-STAT-OKS 
               MOVE FIO-END-BRW TO FIO-CMND
               PERFORM BGL-FIO-GDD.
           IF GDG-KEY-IGDG IN GDG > SPACES
               MOVE FIO-GET-KEY TO FIO-CMND
               PERFORM BGL-FIO-GDG
               IF FIO-STAT-OKS
                   MOVE 3 TO WSS-IBUS
                   MOVE GDG-CAI-GTIA IN GDG TO GDG-CAI-GTIA IN GDG-FLD
                   MOVE GDG-IIC-GTIA IN GDG TO GDG-IIC-GTIA IN GDG-FLD.

           MOVE DBC-KEY-IDBC IN DBC TO GDD-CIC-DCLI IN GDD.
           MOVE GDG-KEY-IGDG IN GDG TO GDD-KEY-AGDD IN GDD.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM BGL-FIO-GDD.
      *>>>>
*% END
       FIN-BUS-ULT-GDG.
           EXIT.
      *>>>>
*% IF (PGM_PER OR PGM_CLB OR PGM_MEX) 
      *<<<< (PGM_PER OR PGM_CLB OR PGM_MEX)
       COPY BGLBGEDP.
      *>>>>
*% END
      *>>>>
*% END
*% IF EOF AND PGM_PU
      *<<<< EOF AND PGM_PU
       ANL-KEY-ALL SECTION.
       INI-ANL-KEY-ALL.
       FIN-ANL-KEY-ALL.
           EXIT.

       BCK-OUT SECTION.
       INI-BCK-OUT.
           MOVE FIO-BCK-OUT TO FIO-CMND.
           PERFORM BGL-FIO-GDD.
           IF FIO-STAT-OKS
      *        Para informar que el backout se realizo con exito
               MOVE '49' TO FIO-STAT.
       FIN-BCK-OUT.
           EXIT.                                                                
 
      * INIT
      * ====

       INI-REG-GDD SECTION.
       INI-INI-REG-GDD.
           MOVE SPACES   TO GDD-GLS-FLAG IN GDD.
           MOVE 100      TO GDD-SGV-PLIM IN GDD.
           MOVE ZEROES   TO GDD-SGV-VLIM IN GDD.
           MOVE SPACES   TO GDD-GLS-DISP IN GDD.
       FIN-INI-REG-GDD.
           EXIT.

      * GET-UPD
      * =======

       GET-UPD-GDD SECTION.
       INI-GET-UPD-GDD.
           MOVE GDG-CAI-GTIA IN GDG-FLD TO GDD-CAI-GTIA IN GDD.
           MOVE GDG-IIC-GTIA IN GDG-FLD TO GDD-IIC-GTIA IN GDD.
           MOVE 'GDD-KEY-AGDD'  TO FIO-AKEY.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM BGL-FIO-GDD.
           IF NOT FIO-STAT-OKS
                MOVE WSS-PRIMER TO WSS-MGDD
      *FLB CST 22-SEP-1993
      *         MOVE FIO-MENS TO FRM-MENS
                GO TO FIN-GET-UPD-GDD.

           MOVE FIO-GET-KEY-UPD TO FIO-CMND.
           PERFORM BGL-FIO-GDD.

           IF CNE-DBC-CAI-ICLI = GDD-CAI-DCLI IN GDD AND
              CNE-DBC-IIC-ICLI = GDD-IIC-DCLI IN GDD
               MOVE WSS-MISMO TO WSS-MGDD
               MOVE FIO-ULK-REC TO FIO-CMND
               PERFORM BGL-FIO-GDD
           ELSE
               MOVE WSS-OTRO  TO WSS-MGDD.
       FIN-GET-UPD-GDD.
           EXIT.

      * PUT
      * ===

       PUT-GDD SECTION.
       INI-PUT-GDD.
*% IF FMT_CHI
      *<<<< FMT_CHI
           IF DBC-IND-ICLI IN GDG-FLD NOT = 'M'
      *>>>>
*% ELSE
           IF DBC-IDC-ICLI IN GDG-FLD NOT = 'M'
*% END
               PERFORM INI-REG-GDD
               MOVE SCR-USER TO GDD-CIC-UING IN GDD
               MOVE HOY-FHOY TO GDD-FEC-FING IN GDD
               MOVE 'I'      TO GDD-MSC-TACC IN GDD
               MOVE CNE-DBC-CAI-ICLI TO GDD-CAI-DCLI IN GDD
               MOVE CNE-DBC-IIC-ICLI TO GDD-IIC-DCLI IN GDD
               MOVE GDG-CAI-GTIA IN GDG TO GDD-CAI-GTIA IN GDD
               MOVE GDG-IIC-GTIA IN GDG TO GDD-IIC-GTIA IN GDD
               MOVE FIO-PUT TO FIO-CMND
               PERFORM BGL-FIO-GDD
               IF NOT FIO-STAT-OKS
      *        Error inconsistencia en el ingreso : hacer LOGTB e informar      
                   MOVE FIO-MENS TO FRM-MENS
                   PERFORM BCK-OUT.
       FIN-PUT-GDD.
           EXIT.

      * MOD
      * ===

       MOD-GDD SECTION.
       INI-MOD-GDD.
*% IF FMT_CHI
      *<<<< FMT_CHI
           IF DBC-IND-ICLI IN GDG-FLD = 'M' OR
      *>>>>
*% ELSE
           IF DBC-IDC-ICLI IN GDG-FLD = 'M' OR
*% END
              WSS-MISMO-GDD
               GO TO FIN-MOD-GDD.

           MOVE FIO-DEL TO FIO-CMND.
           PERFORM BGL-FIO-GDD.
           IF NOT FIO-STAT-OKS
      *    Error inconsistencia en la eliminacion : hacer 
      *    LOGTB e informar  
               MOVE FIO-MENS TO FRM-MENS
               PERFORM BCK-OUT
               GO TO FIN-MOD-GDD
           ELSE
               PERFORM PUT-GDD.
           IF NOT FIO-STAT-OKS
      *        Error inconsistencia en la eliminacion : hacer 
      *        LOGTB e informar  
               MOVE FIO-MENS TO FRM-MENS
               PERFORM BCK-OUT
               GO TO FIN-MOD-GDD.
       FIN-MOD-GDD.
           EXIT.

       VRF-GAR-DGP SECTION.
       INI-VRF-GAR-DGP.
           MOVE 'N' TO WSS-MARC-4 IN WSS-VARI.
           MOVE GDG-CAI-GTIA IN GDG-FLD TO GES-CAI-GTIA IN GES.
           MOVE GDG-IIC-GTIA IN GDG-FLD TO GES-IIC-GTIA IN GES.
           MOVE ZEROES                  TO GES-NUM-IGES IN GES.
           MOVE FIO-GET-NLS TO FIO-CMND.
           PERFORM BGL-FIO-GES.
       LEE-GES-1.
           IF NOT FIO-STAT-OKS
              GO TO FIN-VRF-GAR-DGP.

           IF NOT (GDG-CAI-GTIA IN GDG-FLD = GES-CAI-GTIA IN GES AND
                   GDG-IIC-GTIA IN GDG-FLD = GES-IIC-GTIA IN GES)
              MOVE FIO-GET-NXT TO FIO-CMND
              PERFORM BGL-FIO-GES
              GO TO LEE-GES-1.

           MOVE GES-CIC-IOPC IN GES TO OPC-CIC-IOPC IN OPC
           MOVE FIO-GET-KEY TO FIO-CMND
           PERFORM COL-FIO-OPC
           IF FIO-STAT-OKS
              IF OPC-MSC-STAT IN OPC = 'A' AND
                 OPC-VAL-SCRE IN OPC > ZEROES
                    MOVE 'S' TO WSS-MARC-4 IN WSS-VARI.
       FIN-VRF-GAR-DGP.
           EXIT.

 
      *DELETE
      *======
       DEL-GDD SECTION.
       INI-DEL-GDD.
           MOVE GDG-KEY-IGDG IN GDG TO GDD-KEY-AGDD IN GDD.
           MOVE 'GDD-KEY-AGDD' TO FIO-AKEY.
           MOVE FIO-GET-NLS TO FIO-CMND.
           PERFORM BGL-FIO-GDD.
           IF NOT ( FIO-STAT-OKS AND
              GDD-KEY-AGDD IN GDD = GDG-KEY-IGDG IN GDG )
               MOVE '00' TO FIO-STAT
               IF FIO-STAT-OKS 
                   MOVE 'GDD-KEY-AGDD' TO FIO-AKEY
                   MOVE FIO-END-BRW TO FIO-CMND
                   PERFORM BGL-FIO-GDD
                   GO TO FIN-DEL-GDD
               ELSE
                   GO TO FIN-DEL-GDD.
       LUP-DEL-GDD.
           MOVE 'GDD-KEY-AGDD' TO FIO-AKEY.
           MOVE FIO-END-BRW TO FIO-CMND.
           PERFORM BGL-FIO-GDD.

           MOVE FIO-GET-KEY-UPD TO FIO-CMND.
           PERFORM BGL-FIO-GDD.
           IF NOT FIO-STAT-OKS
               GO TO FIN-DEL-GDD.
           MOVE FIO-DEL TO FIO-CMND.
           PERFORM BGL-FIO-GDD.
           IF NOT FIO-STAT-OKS
               GO TO FIN-DEL-GDD.

           MOVE GAR-CIC-DCLI IN CMA-VARI TO GDD-CIC-DCLI IN GDD.
           MOVE 'GDD-KEY-AGDD' TO FIO-AKEY.
           MOVE FIO-GET-NLS TO FIO-CMND.
           PERFORM BGL-FIO-GDD.
           IF FIO-STAT-OKS AND
              GDG-KEY-IGDG IN GDG = GDD-KEY-AGDD IN GDD
               GO TO LUP-DEL-GDD.
           MOVE '00' TO FIO-STAT.
       FIN-DEL-GDD.
           EXIT.
*% IF GEN_BCI
      *<<<< GEN_BCI
      *LOP-INI 6-DIC-2002
       ANL-LDC-GDD SECTION.
       INI-ANL-LDC-GDD.
           MOVE SPACES               TO MSG-COD-MENS
           MOVE GDG-KEY-IGDG IN GDG TO GDD-KEY-AGDD IN GDD.
           MOVE 'GDD-KEY-AGDD' TO FIO-AKEY.
           MOVE FIO-GET-NLS TO FIO-CMND.
           PERFORM BGL-FIO-GDD.
           IF NOT ( FIO-STAT-OKS AND
              GDD-KEY-AGDD IN GDD = GDG-KEY-IGDG IN GDG )
               MOVE '00' TO FIO-STAT
               IF FIO-STAT-OKS
                   MOVE 'GDD-KEY-AGDD' TO FIO-AKEY
                   MOVE FIO-END-BRW TO FIO-CMND
                   PERFORM BGL-FIO-GDD
                   GO TO FIN-ANL-LDC-GDD
               ELSE
                   GO TO FIN-ANL-LDC-GDD.
      
       LUP-ANL-LDC-GDD.

           MOVE GDD-CIC-DCLI IN GDD  TO DBC-CIC-ICLI IN DBC.
           MOVE GDD-CIC-DCLI IN GDD  TO CCU-CIC-ICLI IN CCU-VARI.
           MOVE GDG-KEY-IGDG IN GDG TO CCU-KEY-IGDG IN CCU-VARI.
           PERFORM CCU-POR-MAR.
           IF MSG-COD-MENS > SPACES
              MOVE 'GDD-KEY-AGDD' TO FIO-AKEY
              MOVE FIO-END-BRW TO FIO-CMND
              PERFORM BGL-FIO-GDD
              GO TO FIN-ANL-LDC-GDD.
      
           IF WSS-IND-ALZA NOT = 'ALS'
           PERFORM LLAMA-CCU-LDC
           IF MSG-COD-MENS > SPACES
              MOVE 'GDD-KEY-AGDD' TO FIO-AKEY
              MOVE FIO-END-BRW TO FIO-CMND
              PERFORM BGL-FIO-GDD
              GO TO FIN-ANL-LDC-GDD.
      
           MOVE 'GDD-KEY-AGDD' TO FIO-AKEY.
           MOVE FIO-GET-NXT     TO FIO-CMND.
           PERFORM BGL-FIO-GDD.
           IF FIO-STAT-OKS AND
              GDG-KEY-IGDG IN GDG = GDD-KEY-AGDD IN GDD
               GO TO LUP-ANL-LDC-GDD.
      
           IF FIO-STAT-OKS
              MOVE FIO-END-BRW TO FIO-CMND
              PERFORM BGL-FIO-GDD.
      
           MOVE '00' TO FIO-STAT.
       FIN-ANL-LDC-GDD.
           EXIT.
      *LOP-FIN 6-DIC-2002

       VAL-USR-OFI SECTION.
       INI-VAL-USR-OFI.
           IF SCR-OFRM-SRV
              MOVE 'P'    TO USP-PERMISO
              MOVE SPACES TO USP-COD-USUARIO
              GO TO FIN-VAL-USR-OFI.
      *ALD-BCI-INI/07032000
      *    COPY USPC143.
      *ALD-BCI-FIN/07032000
       FIN-VAL-USR-OFI.
           EXIT.
      *ALD-BCI-INI/07032000
       VAL-PTA-USR SECTION.
       INI-VAL-PTA-USR.
           IF SCR-OFRM-SRV
              MOVE 'P'    TO USP-PERMISO
              MOVE SPACES TO USP-COD-USUARIO
              GO TO FIN-VAL-PTA-USR.
           COPY USPC143.
           MOVE 'BGLGTUCG/CEN' TO USP-PTA-STR.
           COPY USPC103.
       FIN-VAL-PTA-USR.
           EXIT.
      *ALD-BCI-FIN/07032000
      *>>>>
*% END
      *>>>>
       COPY BGLBGVCG.
       COPY BGLBKVCG.
*% IF (PGM_PER OR PGM_CLB OR PGM_MEX) AND PGM_PU
      *<<<< (PGM_PER OR PGM_CLB OR PGM_MEX) AND PGM_PU
       COPY BGLBGIDP.
       COPY BGLBKIDP.
      *>>>>
*% END
*% IF GEN_BCI AND PGM_PU
      *<<<< GEN_BCI AND PGM_PU
       COPY BGLBGIDP.
       COPY BGLBKIDP.
      *>>>>
*% END
*% IF ( PGM_VSI OR PGM_DB2 ) AND PGM_PU
      *<<<< ( PGM_VSI OR PGM_DB2 ) AND PGM_PU 
       COPY BGLBGVC2.
      *>>>>
*% END
*% IF NOT ( PGM_VSI OR PGM_DB2 ) AND PGM_PU
      *<<<< NOT ( PGM_VSI OR PGM_DB2 ) AND PGM_PU
       COPY BGLBGELI.
       COPY BGLBKELI.
      *>>>>
*% END
      *>>>>
*% END
*% IF INI_SCR_PUTA AND GEN_BCI
      *<<<< INI_SCR_PUTA AND GEN_BCI
      *LOP-INI 12-12-2002
           IF WSS-IND-ALZA IN WSS-VARI ='ALS'
              MOVE 'ALS' TO SCR-CMND.
      *LOP-FIN 12-12-2002
      *>>>>
*% END
*% IF SCR_GIKY_VAL_IKY AND GEN_BCI
      *<<<< SCR_GIKY_VAL_IKY AND GEN_BCI
      *PTC-INI-MAN
           IF SCR-OFRM-SRV AND SCR-CMND = 'ING'
               MOVE 'BGL' TO FIO-SIST
               MOVE 'VSN' TO TAB-COD-TTAB IN TAB
               MOVE '001' TO TAB-COD-CTAB IN TAB
               MOVE FIO-GET-KEY TO FIO-CMND
               PERFORM GNS-FIO-TAB
               IF NOT FIO-STAT-OKS OR
                  TAB-IND-VIGE IN TAB NOT = 'S'
      *        FLB: version 'B'anco
      *             MOVE 'B' TO SCR-IND-V001
                   MOVE SPACES TO MSG-COD-MENS
                   MOVE FRM-CPIM-AEY TO GDG-CAI-GTIA-ATR IN GDG-FLD
      *AFRI-INI/MAYO2005                                                
                   IF SCR-HDR-MRCA = 'BCS'                              
                      MOVE '0800' TO GDG-CAI-GTIA IN GDG-FLD            
                   ELSE                                                 
                      MOVE '0500' TO GDG-CAI-GTIA IN GDG-FLD
                   END-IF                                               
      *AFRI-FIN/MAYO2005                                                
                   MOVE 0  TO GDG-CAI-GTIA-LEN IN GDG-FLD
                   MOVE -1 TO GDG-IIC-GTIA-LEN IN GDG-FLD.
      *         ELSE
      *        FLB: version 'C'onsist
      *             MOVE 'C' TO SCR-IND-V001.

      *PTC-FIN-MAN
      *>>>>
*% END
*% IF EOF
      *<<<< EOF
*% IF GEN_BCI
      *<<<< GEN_BCI
       COPY BGLBGEDP.
*% IF PGM_PU
      *LOP-INI 6-DIC-2002
       COPY LDCBKCEG.
       COPY LDCBKCCU.
       COPY LDCBGCC1.
       COPY LDCBFCLF.
       COPY LDCBFRDC REPLACING RDC BY RDL.
       COPY BGLBGMAR.
       COPY LDCBGCCU.
      *LOP-FIN 6-DIC-2002
*% END
       COPY DAPBFRCC.
      *>>>>
*% END
       COPY BGLBFTAG.
*% IF (PGM_PER OR PGM_CLB OR PGM_MEX)
      *<<<< (PGM_PER OR PGM_CLB OR PGM_MEX) 
       COPY BGLBFGDO.
       COPY COLBFOPC.
      *>>>>
*% END
*% IF PGM_VMS
      *<<<< PGM_VMS
       COPY SGCBFTAB.
      *>>>>
*% END
*% IF EOF AND (PGM_PER OR PGM_CLB OR PGM_MEX)
      *<<<< EOF AND (PGM_PER OR PGM_CLB OR PGM_MEX)
      *LAV CST 20-JUL-1993 - VALIDA DOCTO NO EXISTA COMO GARANTIA
       COPY BGLBGVDO.
      *>>>>
*% END
*% IF NOT GEN_BCI
      *<<<< NOT GEN_BCI
       VAL-GRADO-GDG-GAP SECTION.
       INI-VAL-GRADO-GDG-GAP.

      *Activar una garantia. Numero de grado existe en GAP
           MOVE GDG-CAI-GTIA IN GDG TO GAP-CAI-GTIA IN GAP.
           MOVE GDG-IIC-GTIA IN GDG TO GAP-IIC-GTIA IN GAP.
           MOVE GDG-COD-GGTA IN GDG TO GAP-COD-PACR IN GAP.
      * Busca Garantia en tabla GAP
           MOVE FIO-GET-KEY    TO FIO-CMND.
           PERFORM BGL-FIO-GAP.
       FIN-VAL-GRADO-GDG-GAP.
           EXIT.
      *>>>>
*% END
      *RRM-INI 3-JUN-2002
       LECTURA-TAG SECTION.
       INI-LECTURA-TAG.
*% IF FMT_CHI
      *<<<< FMT_CHI
           IF SCR-CMND = 'ACE'                                          
              GO TO FIN-LECTURA-TAG.                                    
           MOVE GDG-TIP-CGTA IN GDG  TO WSS-TIP-CGTA IN WSS-VARI.
           MOVE GDG-STP-CGTA IN GDG  TO WSS-STP-CGTA IN WSS-VARI.
           MOVE WSS-COD-CGTA IN WSS-VARI TO TAG-COD-AGTA IN TAG.
      *>>>>
*% ELSE
           MOVE GDG-COD-CGTA IN GDG TO TAG-COD-AGTA IN TAG.
*% END
           MOVE FIO-GET-KEY    TO FIO-CMND.
           PERFORM BGL-FIO-TAG.
       FIN-LECTURA-TAG.
           EXIT.
*% IF GEN_BCI
      *<<<< GEN_BCI
       BUS-GDO-OPD SECTION.
       INI-BUS-GDO-OPD.
           MOVE SPACES TO MSG-COD-MENS.
           MOVE GDG-CAI-GTIA IN GDG-FLD TO GDO-CAI-GTIA IN GDO.
           MOVE GDG-IIC-GTIA IN GDG-FLD TO GDO-IIC-GTIA IN GDO.
           MOVE 1                       TO GDO-NUM-IGDO IN GDO.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM BGL-FIO-GDO.
           IF NOT FIO-STAT-OKS
               MOVE 'BGL'          TO MSG-COD-SIST
               MOVE 'GDO    NEX'   TO MSG-COD-MENS
           ELSE
               MOVE GDO-COD-DOCU IN GDO TO OPD-CIC-IOPD IN DAP-VARI
               MOVE OPD-CAI-IOPD IN DAP-VARI TO OPD-CAI-IOPD IN OPD
               MOVE OPD-IIC-IOPD IN DAP-VARI TO OPD-IIC-IOPD IN OPD
               MOVE FIO-GET-KEY TO FIO-CMND
               PERFORM DAP-FIO-OPD
               IF NOT FIO-STAT-OKS
                   MOVE 'BGL'          TO MSG-COD-SIST
                   MOVE 'OPD    NEX'   TO MSG-COD-MENS
               ELSE
               IF OPD-COD-STAT IN OPD NOT = 'G'
                   MOVE 'BGL'            TO MSG-COD-SIST
                   MOVE 'OPD    NOVIG'   TO MSG-COD-MENS.
       FIN-BUS-GDO-OPD.
           EXIT.
      *>>>>
*% END
*% IF NOT FMT_CHI
      *<<<< NOT FMT_CHI
       LECTURA-GSO SECTION.
       INI-LECTURA-GSO.
           MOVE SPACES TO MSG-COD-MENS.
           MOVE GDG-KEY-IGDG IN GDG TO GSO-KEY-IGDG IN GSO.
           MOVE ZEROES              TO GSO-NUM-SBGL IN GSO.
           MOVE FIO-GET-NLS TO FIO-CMND.
           MOVE 'GSO-KEY-IGDG' TO FIO-AKEY.
           PERFORM BGL-FIO-GSO.
           IF NOT ( FIO-STAT-OKS AND
              GDG-KEY-IGDG IN GDG = GSO-KEY-IGDG IN GSO )
               MOVE 'BGL'        TO MSG-COD-SIST
               MOVE 'GSO    NEX' TO MSG-COD-MENS
               GO TO FIN-LECTURA-GSO.
       LECT-LOOP-GSO.
           MOVE 'GSO-KEY-IGDG' TO FIO-AKEY.
           PERFORM BGL-FIO-GSO.
           IF NOT ( FIO-STAT-OKS AND
              GDG-KEY-IGDG IN GDG = GSO-KEY-IGDG IN GSO )
               MOVE '09' TO GSO-COD-ESGA IN GSO
               MOVE '05' TO GSL-COD-ESOL IN GSL
               MOVE '00' TO FIO-STAT
               GO TO FIN-LECTURA-GSO.
            MOVE GSO-NUM-SBGL IN GSO TO GSL-NUM-SBGL IN GSL.
            MOVE FIO-GET-KEY    TO FIO-CMND.
            PERFORM BGL-FIO-GSL.
            IF NOT FIO-STAT-OKS
               MOVE 'BGL'        TO MSG-COD-SIST
               MOVE 'GSL    NEX' TO MSG-COD-MENS
               GO TO FIN-LECTURA-GSO.
      
            IF GSO-COD-ESGA IN GSO = '09' AND
               GSL-COD-ESOL IN GSL = '05'
               MOVE FIO-GET-NXT TO FIO-CMND
               GO TO LECT-LOOP-GSO
            ELSE
               GO TO FIN-LECTURA-GSO.
       FIN-LECTURA-GSO.
           EXIT.
      *>>>>
*% END
       VRF-MOD-GSO SECTION.
       INI-VRF-MOD-GSO.
           IF NOT ( FIO-STAT-OKS AND
              GDG-CAI-GTIA IN GDG-FLD = GES-CAI-GTIA IN GES AND
              GDG-IIC-GTIA IN GDG-FLD = GES-IIC-GTIA IN GES)
               MOVE '00' TO FIO-STAT
               GO TO FIN-VRF-MOD-GSO.
      
           MOVE GDG-CIC-GTIA IN GDG TO GSO-CIC-GTIA IN GSO.
           MOVE GES-KEY-IGSL IN GES TO GSO-NUM-SBGL IN GSO.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM BGL-FIO-GSO.
           IF NOT FIO-STAT-OKS
               MOVE 'BGL'        TO MSG-COD-SIST
               MOVE 'GSO    NEX' TO MSG-COD-MENS
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS
               GO TO FIN-VRF-MOD-GSO.
      
           MOVE FIO-GET-KEY-UPD TO FIO-CMND.
           PERFORM BGL-FIO-GSO.
           IF NOT FIO-STAT-OKS
               MOVE 'BGL'        TO MSG-COD-SIST
               MOVE 'GSO  NOUPD' TO MSG-COD-MENS
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS
               GO TO FIN-VRF-MOD-GSO.
      
           MOVE '11' TO GSO-COD-ESGA IN GSO.
           MOVE FIO-MOD TO FIO-CMND.
           PERFORM BGL-FIO-GSO.
           IF NOT FIO-STAT-OKS
               MOVE 'BGL'        TO MSG-COD-SIST
               MOVE 'GSO  NOMOD' TO MSG-COD-MENS
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS
               GO TO FIN-VRF-MOD-GSO.
      
           MOVE FIO-GET-NXT TO FIO-CMND.
           PERFORM BGL-FIO-GES.
           GO TO INI-VRF-MOD-GSO.
       FIN-VRF-MOD-GSO.
           EXIT.
*% IF NOT FMT_CHI
      *<<<< NOT FMT_CHI
       ELI-GAR-GSO SECTION.
       INI-ELI-GAR-GSO.
           MOVE GDG-KEY-IGDG IN GDG TO GSO-KEY-IGDG IN GSO.
           MOVE ZEROES              TO GSO-NUM-SBGL IN GSO.
           MOVE FIO-GET-NLS TO FIO-CMND.
           MOVE 'GSO-KEY-IGDG' TO FIO-AKEY.
           PERFORM BGL-FIO-GSO.
           IF FIO-STAT-OKS AND
              GDG-KEY-IGDG IN GDG = GSO-KEY-IGDG IN GSO
               MOVE FIO-GET-KEY-UPD TO FIO-CMND
               PERFORM BGL-FIO-GSO
               IF FIO-STAT-OKS
                   MOVE FIO-DEL TO FIO-CMND
                   PERFORM BGL-FIO-GSO
                   IF FIO-STAT-OKS
                      GO TO INI-ELI-GAR-GSO
                   ELSE
                      GO TO FIN-ELI-GAR-GSO
               ELSE
                   GO TO FIN-ELI-GAR-GSO
           ELSE
               MOVE '00' TO FIO-STAT.
       FIN-ELI-GAR-GSO.
           EXIT.
      
       VER-GAR-GSO SECTION.
       INI-VER-GAR-GSO.
           MOVE SPACES TO MSG-COD-MENS.
           MOVE GDG-CAI-GTIA IN GDG-FLD TO GSO-CAI-GTIA IN GSO.
           MOVE GDG-IIC-GTIA IN GDG-FLD TO GSO-IIC-GTIA IN GSO.
           MOVE ZEROES                  TO GSO-NUM-SBGL IN GSO.
           MOVE FIO-GET-NLS TO FIO-CMND.
           MOVE 'GSO-KEY-IGDG' TO FIO-AKEY.
           PERFORM BGL-FIO-GSO.
           IF FIO-STAT-OKS AND
              GDG-KEY-IGDG IN GDG = GSO-KEY-IGDG IN GSO
               GO TO CICLO-GAR-GSO
           ELSE
               MOVE 'BGL'        TO MSG-COD-SIST
               MOVE 'GSO    NEX' TO MSG-COD-MENS
               GO TO FIN-VER-GAR-GSO.
      
       LUP-VER-GAR-GSO.
           MOVE 'GSO-KEY-IGDG' TO FIO-AKEY.
           PERFORM BGL-FIO-GSO.
           IF NOT ( FIO-STAT-OKS AND
              GDG-KEY-IGDG IN GDG = GSO-KEY-IGDG IN GSO)
               MOVE '00' TO FIO-STAT
               MOVE SPACES TO MSG-COD-MENS
               GO TO FIN-VER-GAR-GSO.
      
       CICLO-GAR-GSO.
           MOVE GSO-NUM-SBGL IN GSO TO GSL-NUM-SBGL IN GSL.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM BGL-FIO-GSL.
           IF NOT FIO-STAT-OKS
               MOVE 'BGL'        TO MSG-COD-SIST
               MOVE 'GSL    NEX' TO MSG-COD-MENS
               GO TO FIN-VER-GAR-GSO.
           IF GSL-COD-ESOL IN GSL NOT = '01'
               MOVE 'BGL' TO MSG-COD-SIST
               MOVE 'GDG NOELI' TO MSG-COD-MENS
               GO TO FIN-VER-GAR-GSO
            ELSE
               MOVE FIO-GET-NXT TO FIO-CMND
               GO TO LUP-VER-GAR-GSO.
       FIN-VER-GAR-GSO.
           EXIT.
      *>>>>
*% END
       VRF-IND-TAG SECTION.
       INI-VRF-IND-TAG.
*% IF FMT_CHI
      *<<<< FMT_CHI
           IF SCR-CMND = 'ACE'                                          
              GO TO FIN-VRF-IND-TAG.                                    
           MOVE GDG-TIP-CGTA IN GDG  TO WSS-TIP-CGTA IN WSS-VARI.
           MOVE GDG-STP-CGTA IN GDG  TO WSS-STP-CGTA IN WSS-VARI.
           MOVE WSS-COD-CGTA IN WSS-VARI TO TAG-COD-AGTA IN TAG.
      *>>>>
*% ELSE
           MOVE GDG-COD-CGTA IN GDG TO TAG-COD-AGTA IN TAG.
*% END
           MOVE FIO-GET-KEY         TO FIO-CMND.
           PERFORM BGL-FIO-TAG.
           IF NOT FIO-STAT-OKS
               MOVE 'BGL'        TO MSG-COD-SIST
               MOVE 'TAG    NEX' TO MSG-COD-MENS
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS
               GO TO FIN-VRF-IND-TAG.
      
           IF NOT ( TAG-IND-EGSL IN TAG = 'S' AND TAG-IND-EGSO = 'S' )
               GO TO FIN-VRF-IND-TAG.
      
           MOVE GDG-CAI-GTIA IN GDG-FLD TO GES-CAI-GTIA IN GES.
           MOVE GDG-IIC-GTIA IN GDG-FLD TO GES-IIC-GTIA IN GES.
           MOVE ZEROES                  TO GES-NUM-IGES IN GES.
           MOVE FIO-GET-NLS TO FIO-CMND.
           PERFORM BGL-FIO-GES.
           IF NOT ( FIO-STAT-OKS AND
              GDG-CAI-GTIA IN GDG-FLD = GES-CAI-GTIA IN GES AND
              GDG-IIC-GTIA IN GDG-FLD = GES-IIC-GTIA IN GES)
               MOVE 'BGL'        TO MSG-COD-SIST
               MOVE 'GES    NEX' TO MSG-COD-MENS
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS
               GO TO FIN-VRF-IND-TAG
           ELSE
               PERFORM VRF-MOD-GSO.
      
           IF NOT FIO-STAT-OKS
               GO TO FIN-VRF-IND-TAG.
       FIN-VRF-IND-TAG.
           EXIT.
      *RRM-FIN 3-JUN-2002
      *RRM-INI 4-JUL-2002
       VAL-CIM-AGA SECTION.
       INI-VAL-CIM-AGA.
           PERFORM VAL-GDG-FEC-FVTO-CIM.
*% IF NOT GEN_BCI
      *<<<< NOT GEN_BCI
           PERFORM VAL-GDG-COD-GGTA-CIM.
           PERFORM VAL-GDG-VAL-MNTO-CIM.
      *>>>>
*% END
           PERFORM VAL-GDG-IND-CBAN-CIM.
*% IF NOT GEN_BCI
      *<<<< NOT GEN_BCI
           PERFORM VAL-GDG-COD-DESP-CIM.
           PERFORM VAL-GDG-COD-RFCP-CIM. 
      *>>>>
*% END
           PERFORM VAL-FRM-IDC-ICLI-CIM.
           PERFORM VAL-DBC-GLS-NOMC-CIM.
       FIN-VAL-CIM-AGA.
           EXIT.

       VAL-GDG-FEC-FVTO-CIM SECTION.
       INI-VAL-GDG-FEC-FVTO-CIM.
      *VAL-FEC Validar Fecha
           MOVE GDG-FEC-FVTO IN GDG TO FEC-FECH.
           MOVE FEC-FORM-FEC        TO FEC-FORM.
           MOVE FEC-FBLK-S          TO FEC-FBLK.
           MOVE FEC-CHOY-LE         TO FEC-CHOY.
           MOVE FEC-VHBL-S          TO FEC-VHBL.
           MOVE FEC-VHBL-N          TO FEC-VHBL.

           MOVE GDG-NUM-SVTO IN GDG TO FEC-SVLD.
           MOVE GDG-NUM-AVTO IN GDG TO FEC-AVLD.
           MOVE GDG-NUM-MVTO IN GDG TO FEC-MVLD.
           MOVE GDG-NUM-DVTO IN GDG TO FEC-DVLD.

           MOVE TAG-IND-SVTO IN TAG TO GAR-IND-SVTO IN CMA-VARI.

           IF GAR-IND-SVTO IN CMA-VARI  = 'S'
              IF FEC-FVLD = '00000000'
                 MOVE 'VTO=0' TO MSG-COD-MENS
                 GO TO ERR-VAL-GDG-FEC-FVTO-CIM.

           MOVE FEC-CHOY-N TO FEC-CHOY.
           MOVE FEC-VAL-FEC TO FEC-CMND.
           PERFORM PRO-FEC.
           IF  NOT FEC-STAT-OKS
               MOVE 'FVEN  NOVAL' TO MSG-COD-MENS  
               GO TO FIN-VAL-GDG-FEC-FVTO-CIM.
           

           MOVE GDG-NUM-SSOL IN GDG TO FEC-SEC1.
           MOVE GDG-NUM-ASOL IN GDG TO FEC-AEC1.
           MOVE GDG-NUM-MSOL IN GDG TO FEC-MEC1.
           MOVE GDG-NUM-DSOL IN GDG TO FEC-DEC1.

           MOVE GDG-NUM-SVTO IN GDG TO FEC-SEC2.
           MOVE GDG-NUM-AVTO IN GDG TO FEC-AEC2.
           MOVE GDG-NUM-MVTO IN GDG TO FEC-MEC2.
           MOVE GDG-NUM-DVTO IN GDG TO FEC-DEC2.
           MOVE FEC-FORM-FEC TO FEC-FORM.
           MOVE FEC-CMP-FEC  TO FEC-CMND.
           PERFORM PRO-FEC.
           IF NOT FEC-STAT-LES
               MOVE 'VTO<=SOL' TO MSG-COD-MENS
               GO TO ERR-VAL-GDG-FEC-FVTO-CIM.

           MOVE GDG-FEC-FVTO IN GDG TO FEC-FEC1.

           MOVE GDG-NUM-DING IN GDG TO FEC-DEC2.
           MOVE GDG-NUM-MING IN GDG TO FEC-MEC2.
           MOVE GDG-NUM-AING IN GDG TO FEC-AEC2.
           MOVE GDG-NUM-SING IN GDG TO FEC-SEC2.
           MOVE FEC-FORM-FEC        TO FEC-FORM.
           MOVE FEC-CMP-FEC         TO FEC-CMND.
           PERFORM PRO-FEC.
           IF NOT FEC-STAT-GRT
               MOVE 'FVTO<=FING' TO MSG-COD-MENS
               GO TO ERR-VAL-GDG-FEC-FVTO-CIM.
           
           GO TO FIN-VAL-GDG-FEC-FVTO-CIM.

       ERR-VAL-GDG-FEC-FVTO-CIM.
           MOVE 'BGL'     TO MSG-COD-SIST.
       FIN-VAL-GDG-FEC-FVTO-CIM.
           EXIT.
*% IF NOT GEN_BCI
      *<<<< NOT GEN_BCI
       VAL-GDG-COD-GGTA-CIM SECTION.
       INI-VAL-GDG-COD-GGTA-CIM.
           MOVE GDG-IND-EGAP IN GDG TO GAR-IND-EGAP IN CMA-VARI.

           IF GDG-COD-GGTA IN GDG-FLD = '1' AND 
              GAR-IND-EGAP IN CMA-VARI = 'S'
               MOVE 'BGL'       TO MSG-COD-SIST
               MOVE 'GRAEXIGAP' TO MSG-COD-MENS.
       FIN-VAL-GDG-COD-GGTA-CIM.
           EXIT.
      *>>>>
*% END
       VAL-GDG-VAL-MNTO-CIM SECTION.
       INI-VAL-GDG-VAL-MNTO-CIM.
           IF GDG-VAL-MNTO IN GDG = ZEROES
               MOVE 'BGL'       TO MSG-COD-SIST
               MOVE 'MNTO=0' TO MSG-COD-MENS
               GO TO FIN-VAL-GDG-VAL-MNTO-CIM.
       FIN-VAL-GDG-VAL-MNTO-CIM.
           EXIT.

       VAL-GDG-IND-CBAN-CIM SECTION.
       INI-VAL-GDG-IND-CBAN-CIM.
           IF  GDG-IND-CBAN IN GDG NOT = 'N' AND NOT = 'S'
                MOVE 'BGL'         TO MSG-COD-SIST
                MOVE 'ICBAN   N/S' TO MSG-COD-MENS
                GO TO FIN-VAL-GDG-IND-CBAN-CIM.
       FIN-VAL-GDG-IND-CBAN-CIM.
           EXIT.
*% IF NOT GEN_BCI
      *<<<< NOT GEN_BCI
       VAL-GDG-COD-DESP-CIM SECTION.
       INI-VAL-GDG-COD-DESP-CIM.
      *VAL-COD Valida codigo de tabla
           MOVE 'BGL'               TO TAB-COD-SIST.
           MOVE 'DSP '              TO TAB-COD-TTAB IN TAB.
           MOVE GDG-COD-DESP IN GDG TO TAB-COD-CTAB IN TAB.
           PERFORM VAL-COD.
           IF MSG-COD-MENS = 'COD    NEX'
               MOVE 'BGL'        TO MSG-COD-SIST
               MOVE 'CDESP  NEX' TO MSG-COD-MENS.
       FIN-VAL-GDG-COD-DESP-CIM.
           EXIT.

       VAL-GDG-COD-RFCP-CIM SECTION.
       INI-VAL-GDG-COD-RFCP-CIM.
      *NO HAY VALIDACION
       FIN-VAL-GDG-COD-RFCP-CIM.
           EXIT.
      *>>>>
*% END
       VAL-FRM-IDC-ICLI-CIM SECTION.
       INI-VAL-FRM-IDC-ICLI-CIM.
      * Mover nombre propietario.
           IF GDG-IIC-ICLI IN GDG > ZEROES
               MOVE GDG-CIC-ICLI IN GDG TO DBC-CIC-ICLI IN DBC
               MOVE FIO-GET-KEY TO FIO-CMND
               PERFORM SGC-FIO-DBC
               IF FIO-STAT-OKS
*% IF FMT_CHI
      *<<<< FMT_CHI
                  MOVE DBC-NUM-ICLI IN DBC TO FRM-NUM-ICLI IN GDG-FLD
                  MOVE DBC-VRF-ICLI IN DBC TO FRM-VRF-ICLI IN GDG-FLD
                  MOVE DBC-IND-ICLI IN DBC TO FRM-IND-ICLI IN GDG-FLD
                  MOVE DBC-GLS-ICLI IN DBC TO FRM-GLS-ICLI IN GDG-FLD
      *>>>>
*% ELSE
                  MOVE DBC-IDC-ICLI IN DBC TO FRM-IDC-ICLI IN GDG-FLD
*% END
                  MOVE DBC-CAI-ICLI IN DBC TO CNE-GDG-CAI-ICLI
                  MOVE DBC-IIC-ICLI IN DBC TO CNE-GDG-IIC-ICLI
      
                  MOVE DBC-GLS-NOMC IN DBC TO CPT-STRN
                  PERFORM CPT-BLKS
                  MOVE CPT-STRN TO FRM-GLS-NOMC IN GDG-FLD
                  MOVE CPT-STRN TO CNE-GDG-GLS-NOMP
                ELSE
                  MOVE SPACES TO FRM-GLS-NOMC IN GDG-FLD
                  MOVE SPACES  TO CNE-GDG-GLS-NOMP
           ELSE
              MOVE GDG-GLS-NOMP IN GDG TO FRM-GLS-NOMC IN GDG-FLD
              MOVE GDG-GLS-NOMP IN GDG TO CNE-GDG-GLS-NOMP.
*% IF FMT_CHI
      *<<<< FMT_CHI
           IF FRM-NUM-ICLI IN GDG-FLD = ZEROES AND
      *>>>>
*% ELSE
           IF FRM-IDC-ICLI IN GDG-FLD = ZEROES AND
*% END
              GDG-IND-CBAN IN GDG     = 'S'
                  MOVE 'TAB'        TO MSG-COD-SIST
                  MOVE 'CLI X  NEX' TO MSG-COD-MENS
                  GO TO FIN-VAL-FRM-IDC-ICLI-CIM.
*% IF FMT_CHI
      *<<<< FMT_CHI
           IF FRM-NUM-ICLI IN GDG-FLD NOT = ZEROES AND
      *>>>>
*% ELSE
           IF FRM-IDC-ICLI IN GDG-FLD NOT = ZEROES AND
*% END
              GDG-IND-CBAN IN GDG         = 'N'
                  MOVE 'TAB'        TO MSG-COD-SIST
                  MOVE 'CLI Y NEX' TO MSG-COD-MENS
                  PERFORM GET-MSG
                  GO TO FIN-VAL-FRM-IDC-ICLI-CIM.
*% IF FMT_CHI
      *<<<< FMT_CHI
            IF FRM-NUM-ICLI IN GDG-FLD NOT = ZEROES
      *>>>>
*% ELSE
            IF FRM-IDC-ICLI IN GDG-FLD NOT = ZEROES
*% END
*% IF FMT_CHI
      *<<<< FMT_CHI
               MOVE FRM-NUM-ICLI IN GDG-FLD TO DBC-NUM-ICLI IN DBC
      *         MOVE FRM-IND-ICLI IN GDG-FLD TO DBC-IND-ICLI IN DBC
      *         MOVE FRM-GLS-ICLI IN GDG-FLD TO DBC-GLS-ICLI IN DBC
      *>>>>
*% ELSE
               MOVE FRM-IDC-ICLI IN GDG-FLD TO DBC-IDC-ICLI IN DBC
*% END
               MOVE 'DBC-IDC-ICLI'  TO FIO-AKEY
               MOVE FIO-GET-KEY TO FIO-CMND
               PERFORM SGC-FIO-DBC
               IF NOT FIO-STAT-OKS
                  MOVE 'TAB'        TO MSG-COD-SIST
                  MOVE 'CLI    NEX' TO MSG-COD-MENS
              ELSE
                 MOVE DBC-CAI-ICLI IN DBC TO CNE-GDG-CAI-ICLI
                 MOVE DBC-IIC-ICLI IN DBC TO CNE-GDG-IIC-ICLI
                 MOVE DBC-GLS-NOMC IN DBC TO CPT-STRN
                 PERFORM CPT-BLKS
                 MOVE CPT-STRN TO FRM-GLS-NOMC IN GDG-FLD.
       FIN-VAL-FRM-IDC-ICLI-CIM.
           EXIT.

       VAL-DBC-GLS-NOMC-CIM SECTION.
       INI-VAL-DBC-GLS-NOMC-CIM.
*% IF FMT_CHI
      *<<<< FMT_CHI
           IF FRM-NUM-ICLI IN GDG-FLD = ZEROES AND
      *>>>>
*% ELSE
           IF FRM-IDC-ICLI IN GDG-FLD = ZEROES AND
*% END
              GDG-IND-CBAN IN GDG     = 'N'    AND
              FRM-GLS-NOMC IN GDG-FLD NOT > SPACES
                  MOVE 'TAB'         TO MSG-COD-SIST
                  MOVE 'CLI-NOM-NEX' TO MSG-COD-MENS
                  PERFORM GET-MSG
                  MOVE SPACES        TO FRM-GLS-NOMC IN GDG-FLD
                  MOVE MSG-GLS-DESC  TO FRM-MENS
                  MOVE FRM-SUAR-MAL  TO FRM-SUAR.
      *            GO TO FIN-VAL-FRM-GLS-NOMC.
       FIN-VAL-DBC-GLS-NOMC-CIM.
           EXIT.
      *RRM-FIN 4-JUL-2002
       COPY BGLBFGIM.
       COPY BGLBFGVE.
       COPY BGLBFGAP.
       COPY BGLBFGDP.
       COPY BGLBFGES.
       COPY BGLBFGIN.
       COPY BGLBFGLE.
       COPY BGLBFGSE.
       COPY BGLBFGSI.
       COPY BGLBFGTP.
       COPY BGLBFGUB.
       COPY BGLBFGVT.
       COPY BGLBFGMO.
      *MHM-INI 30-JUL-2003
      * COPY BGLBVVCG.
       COPY DAPBFOPD.
       COPY BGLBFGDO.
       COPY COLBFOPC.
       COPY COLBFDLC.
       COPY GNSBGVSM.
      *MHM-FIN 30-JUL-2003
       COPY BGLBSELI.
       COPY BGLBGVC2.
      * COPY BGLBVUOF.
       COPY GNSBPFEC.                                                   
      *
       COPY TABBBUSR.
      *EVA-INI-AFRI/ENERO2006                                           
       VAL-IND-GSO SECTION.                                             
       INI-VAL-IND-GSO.                                                 
           MOVE GDG-CAI-GTIA IN GDG TO GSO-CAI-GTIA IN GSO.             
           MOVE GDG-IIC-GTIA IN GDG TO GSO-IIC-GTIA IN GSO.             
           MOVE FIO-GET-NLS TO FIO-CMND.                                
       LUP-VAL-IND-GSO.                                                 
           MOVE 'GSO-KEY-IGDG' TO FIO-AKEY.                             
           PERFORM BGL-FIO-GSO.                                         
           IF  NOT (FIO-STAT-OKS AND                                    
              GDG-CAI-GTIA IN GDG = GSO-CAI-GTIA IN GSO AND             
              GDG-IIC-GTIA IN GDG = GSO-IIC-GTIA IN GSO)                
               MOVE 'GSOSINGSLT' TO MSG-COD-MENS                        
               GO TO FIN-VAL-IND-GSO.                                   
           MOVE GSO-NUM-SBGL IN GSO TO GSL-NUM-SBGL IN GSL              
           MOVE FIO-GET-KEY TO FIO-CMND                                 
           PERFORM BGL-FIO-GSL                                          
           IF NOT FIO-STAT-OKS                                          
               MOVE 'GSOSINGSL' TO MSG-COD-MENS                         
               GO TO FIN-VAL-IND-GSO.                                   
           IF NOT (GSL-COD-TSOL IN GSL = 'T' AND                        
              GSO-COD-ESGA IN GSO = '03' AND                            
              GSO-COD-EST2 IN GSO = '05')                               
               MOVE 'GDGSINGSOVAL' TO MSG-COD-MENS                      
               MOVE FIO-GET-NXT TO FIO-CMND                             
               GO TO LUP-VAL-IND-GSO.                                   
       FIN-VAL-IND-GSO.                                                 
           EXIT.                                                        
      *EVA-FIN-AFRI/ENERO2006                                           
      *>>>>
*% END
*% IF EOF_PU
      *<<<<
      *EVA-INI-AFRI/ENERO2006                                           
       ACT-IND-GDG SECTION.                                             
       INI-ACT-IND-GDG.                                                 
           MOVE GDG-TIP-CGTA IN GDG TO TAG-TIP-AGTA IN TAG.             
           MOVE GDG-STP-CGTA IN GDG TO TAG-STP-AGTA IN TAG.             
           MOVE FIO-GET-KEY         TO FIO-CMND.                        
           PERFORM BGL-FIO-TAG.                                         
           IF NOT FIO-STAT-OKS                                          
               MOVE 'TAGNOEXISTE' TO MSG-COD-MENS                       
               GO TO FIN-ACT-IND-GDG.                                   
           MOVE FIO-GET-KEY-UPD TO FIO-CMND.                            
           PERFORM BGL-FIO-GDG.                                         
           MOVE GDG-STP-CGTA IN GDG-FLD TO GDG-STP-CGTA IN GDG.         
           MOVE TAG-IND-EGDG IN TAG TO GDG-IND-EGDG IN GDG.             
           MOVE TAG-IND-EGDD IN TAG TO GDG-IND-EGDD IN GDG.             
           MOVE TAG-IND-EGES IN TAG TO GDG-IND-EGES IN GDG.             
           MOVE TAG-IND-EGLE IN TAG TO GDG-IND-EGLE IN GDG.             
           MOVE TAG-IND-EGDO IN TAG TO GDG-IND-EGDO IN GDG.             
           MOVE TAG-IND-EGSE IN TAG TO GDG-IND-EGSE IN GDG.             
           MOVE TAG-IND-EGVT IN TAG TO GDG-IND-EGVT IN GDG.             
           MOVE TAG-IND-EGTP IN TAG TO GDG-IND-EGTP IN GDG.             
           MOVE TAG-IND-EGUB IN TAG TO GDG-IND-EGUB IN GDG.             
           MOVE TAG-IND-EGAP IN TAG TO GDG-IND-EGAP IN GDG.             
           MOVE TAG-IND-EGIN IN TAG TO GDG-IND-EGIN IN GDG.             
           MOVE TAG-IND-EGSI IN TAG TO GDG-IND-EGSI IN GDG.             
           MOVE TAG-IND-EGDP IN TAG TO GDG-IND-EGDP IN GDG.             
           MOVE TAG-IND-EGIM IN TAG TO GDG-IND-EGIM IN GDG.             
           MOVE TAG-IND-EGVE IN TAG TO GDG-IND-EGVE IN GDG.             
           MOVE FIO-MOD TO FIO-CMND.                                    
           PERFORM BGL-FIO-GDG.                                         
           IF NOT FIO-STAT-OKS                                          
               MOVE 'GDGNOACTMST' TO MSG-COD-MENS                       
               GO TO FIN-ACT-IND-GDG.                                   
       FIN-ACT-IND-GDG.                                                 
           EXIT.                                                        
      *EVA-FIN-AFRI/ENERO2006                                           
                                                                        
      *AFRI-INI /JUL2004                                                
       GRABAR-GAP SECTION.                                              
       INI-GRABAR-GAP.                                                  
           MOVE SPACES        TO GAP-GLS-FLAG IN GAP.                   
           MOVE GDG-CAI-GTIA IN GDG  TO GAP-CAI-GTIA IN GAP.            
           MOVE GDG-IIC-GTIA IN GDG  TO GAP-IIC-GTIA IN GAP.            
           MOVE '1'           TO GAP-COD-PACR IN GAP.                   
           MOVE  HOY-FHOY     TO GAP-FEC-FTRN IN GAP.                   
           MOVE  HOY-HHOY     TO GAP-HRA-HRTR IN GAP.                   
           MOVE 'I'           TO GAP-MSC-TACC IN GAP.                   
           MOVE 'I'           TO GAP-MSC-STAT IN GAP.                   
           MOVE SPACES        TO GAP-COD-OTRN IN GAP.                   
           MOVE 'BGLPUGDG'    TO GAP-COD-ATRN IN GAP.                   
           MOVE 'S'           TO GAP-IND-ESBA IN GAP.                   
           MOVE 'N'           TO GAP-IND-ESCL IN GAP.                   
           MOVE 'S'           TO GAP-IND-MASC IN GAP.                   
           MOVE SPACES        TO GAP-CAI-ICLI IN GAP.                   
           MOVE ZEROES        TO GAP-IIC-ICLI IN GAP.                   
           MOVE SPACES        TO GAP-GLS-NOMA IN GAP.                   
           MOVE 'BGL'         TO TAB-COD-SIST FIO-SIST.                 
           MOVE 'IDC'         TO TAB-COD-TTAB IN TAB.                   
           MOVE 'IDCBCO'      TO TAB-COD-CTAB IN TAB.                   
           MOVE FIO-GET-KEY   TO FIO-CMND.                              
           PERFORM GNS-FIO-TAB.                                         
           IF FIO-STAT-OKS AND TAB-IND-VIGE = 'S'                       
               MOVE TAB-GLS-DCOR   TO DBC-NUM-ICLI IN DBC               
               MOVE SPACES         TO DBC-IND-ICLI IN DBC               
               MOVE SPACES         TO DBC-GLS-ICLI IN DBC               
               MOVE 'DBC-IDC-ICLI' TO FIO-AKEY                          
               MOVE FIO-GET-KEY    TO FIO-CMND                          
               PERFORM SGC-FIO-DBC                                      
               IF FIO-STAT-OKS                                          
                   MOVE DBC-CAI-ICLI IN DBC TO GAP-CAI-ICLI IN GAP      
                   MOVE DBC-IIC-ICLI IN DBC TO GAP-IIC-ICLI IN GAP      
                   MOVE DBC-GLS-NOMC IN DBC TO GAP-GLS-NOMA IN GAP.     
           MOVE SPACES        TO GAP-COD-RFCA IN GAP                    
           MOVE 'P'           TO GAP-IND-MACR IN GAP                    
           MOVE '100'         TO GAP-SGV-MACR IN GAP                    
           MOVE SPACES        TO GAR-FOJ-ICR-ACR IN GAP                 
           MOVE ZEROES        TO GAR-NUM-ICR-ACR IN GAP                 
           MOVE ZEROES        TO GAR-ANO-ICR-ACR IN GAP                 
           MOVE HOY-FHOY      TO GAP-FEC-FING IN GAP                    
           MOVE 'BGLPUGDG'    TO GAP-CIC-UING IN GAP                    
           MOVE SPACES        TO GAP-GLS-DISP IN GAP.                   
           MOVE FIO-PUT       TO FIO-CMND.                              
           PERFORM BGL-FIO-GAP.                                         
       FIN-GRABAR-GAP.                                                  
           EXIT.                                                        
      *AFRI-FIN /JUL2004                                                
      *>>>>                                                             
       BUS-PTT SECTION.                                                 
       INI-BUS-PTT.                                                     
           MOVE 'NO'         TO PTT-EXT-PNTL.                           
           MOVE 1 TO PTT-I.                                             
       LUP-SIG-PTT.                                                     
           IF PTT-COD-PNTL(PTT-I) = PTT-COD-PTLL                        
              MOVE 'SI' TO PTT-EXT-PNTL                                 
              GO TO FIN-BUS-PTT.                                        
       NXT-SIG-PTT.                                                     
           ADD 1 TO PTT-I.                                              
           IF PTT-I > 20                                                
               GO TO FIN-BUS-PTT                                        
           ELSE                                                         
               GO TO LUP-SIG-PTT.                                       
       FIN-BUS-PTT.                                                     
           EXIT.                                                        
      *>>>>
*% END
