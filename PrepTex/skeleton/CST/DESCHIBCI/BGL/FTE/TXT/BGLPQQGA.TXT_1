*%! CODIGO ADICIONAL PARA ARCHIVO
*% FMT_CHI = TRUE
*% VSNPQ = "06.06.29"
*% FNCPQ = "OWFBGL"
*% VSNPU = "06.06.29"
*% FNCPU = "OWFBGL"
*% RA1 = 'DBC'
*% RA2 = 'GDG'
*% RA3 = 'GDD'
*% NRA = 3
*% FRM = 'QGA'
*%! IF NOT PGM_MCP
*% PGM_PTC = TRUE
*%! END
*% IF NOT PGM_CLB AND NOT PGM_MEX
*%    INCLUDE 'BGLSRC:PFSALLALL.SRC'
*% END
*% PGM_HIJ = TRUE
*% PAD = 'DBC'
*% RPH = 'GDD'
*% HIJ = 'GDG'
*% REG = 'GDG'
*% ING_SBR_HIJ = FALSE
*% SISPAD = 'SGC'
*% SISHIJ = 'BGL'
*% SISREG = 'BGL'
*% KEYPAD = 'DBC-IDC-ICLI'
*% KEYPADALT = 'DBC-GLS-NOMC'
*% SCRKEYPAD = 'IDC'
*% SCRKEYALT = 'NOM'
*% MNECORPAD = 'CLI'
*% UNS_FLD = TRUE 
*% MUL_FLD = TRUE 
*% LEE_PAD_F56 = TRUE 
*% NO_CIC_PQ = TRUE
*% IF CMT_ID
      *<<<<
      *-----------------------------------------------------------------
      *PROYECTO: CORRECCION VALORES CGD
      *OBJETIVO: Modificacion de calculo de valores para pantalla CGD
      *FECHA   : 19-JUN-2018
      *AUTOR   : CIMA-MVG
      *ETIQUETA: *MVG-INI 19-JUN-2018 CORRECCION VALORES CGD - 53926
      *-----------------------------------------------------------------
      *-----------------------------------------------------------------
      *  Autor     : BEE-MPB
      *  Fecha     : 05-02-2019
      *  NUB       : 54088
      *  Proyecto  : MODIFICACION PANTALLA GES
      *  ID        : MPB-INI 05-FEB-2019 MODIFICACION PANTALLA GES
      *  Cambios   : QUE CAMPOS SALDO DE CREDITO GES-IND-SCRE Y/O 
      *              FECHA DE VENC. GES-FEC-FVCR SE GRABEN DESDE 
      *              INFORMACION DEL CREDITO (SI E), O SEA DESDE OPC/DLC
      *----------------------------------------------------------------
      *>>>>
*% END
*% IF EOF AND PGM_DTC
      *<<<< EOF AND PGM_DTC
       COPY GNSBHVSM.
      *>>>>
*% END
*% IF FIN_SCR_VARI
      *<<<< CMAVARI OF PGMMAN
*% IF PGM_VMS
      *<<<< PGM_VMS
       01  SCR-VARI-AUX.
      *>>>>
*% END
           03 CMA-VARI.
              05 SCR-IND-MGDD     VALUE SPACES      PIC X(01).
                 88 MULTIPLES-GDD      VALUE 'M'.
              05 DBC-KEY-IDBC.
                 07 DBC-CAI-ICLI  VALUE SPACES      PIC X(04).
                 07 DBC-IIC-ICLI  VALUE ZEROES      PIC 9(08).
              05 CMA-IND-KPAD     VALUE SPACES      PIC X(01).

              05 GDD-KEY-IGDD.
                 07 GDD-CIC-DCLI  VALUE SPACES      PIC X(12).
                 07 GDD-KEY-AGDD  VALUE SPACES      PIC X(12).
  
      *>>>>
           03 CNE-DBC-CAI-ICLI                    PIC X(04).   
           03 CNE-DBC-IIC-ICLI                    PIC X(08).   
           03 CNE-GDG-IND-EST1                    PIC X(02).   
           03 CNE-GDG-CIC-EJOR                    PIC X(12).   
           03 CNE-GDG-COD-LGTA                    PIC X(01).   
           03 CNE-GLE-COD-REGI                    PIC X(02).   
           03 CNE-GDO-COD-TIEM                    PIC X(03).   
           03 CNE-GDO-COD-INEM                    PIC X(03).   
           03 CNE-GDO-COD-SIEM                    PIC X(03).   
*% END
*% IF WSS
      *<<<< WSS
      *XON-INI 15-NOV-2010   CLAUSULA DE COBERTURA
       01  D17.
           03     D17-CLA-COBT.
               05 D17-COD-GPRE              PIC 9(01) VALUE ZEROES.
               05 D17-COD-CARA              PIC 9(01) VALUE ZEROES.
               05 D17-COD-LIMI              PIC 9(01) VALUE ZEROES.
               05 D17-COD-PART              PIC 9(01) VALUE ZEROES.
      *XON-FIN 15-NOV-2010
      *
       01  PGM-VAR-ADIC.                                       
           03 PGM-STAT-ADIC.                                   
              05 PGM-STAT-GDD.                                 
                 88 PGM-STAT-GDD-NUL VALUE '  '.               
                 07 PGM-STT1-GDD        VALUE '2' PIC X(01).   
                    88 PGM-STAT-GDD-OKS VALUE '0'.             
                 07 PGM-STT2-GDD        VALUE '3' PIC X(01).   
*% IF PGM_DTC
      *<<<< PGM_DTC
      *>>>>
*% END
*% IF PGM_MEX
       COPY SGCWGICB.
*% END
       COPY DEUBRFIA.
       COPY DAPBROPD.
       COPY TABBRUSR.
       COPY BGLBRTAG.
       COPY BGLBRGVT.
       COPY BGLBRGES.
       COPY BGLBRGLE.
       COPY BGLBRGSE.
       COPY BGLBRGDO.
       COPY BGLBRGUB.
*% IF PGM_MCP
      *<<<< PGM_MCP
       COPY DEUBRFIA.
      *>>>>
*% END

       COPY COLBRDLC.
       COPY COLBROPC.
       COPY TABBRCAM.
       COPY TABWRCAM.
      *<<<< WSS OF PGMMAN
      *XON-INI 15-NOV-2010   CLAUSULA DE COBERTURA
       COPY BGLBRGAP.
      *XON-FIN 15-NOV-2010

       01  WSS-BUS-VARI.
           03 WSS-IBUS                 VALUE 0      PIC 9(01).
           03 WSS-IBUS-GDG           VALUE 0      PIC 9(01).

       01  WSS-GDD-VARI.
              03 WSS-MGDD              VALUE 0      PIC 9(01).
                 88 WSS-MISMO-GDD      VALUE 0.
                 88 WSS-OTRO-GDD       VALUE 1.
                 88 WSS-PRIMER-GDD     VALUE 2.
              03 WSS-MISMO               VALUE 0    PIC 9(01).
              03 WSS-OTRO                VALUE 1    PIC 9(01).
              03 WSS-PRIMER              VALUE 2    PIC 9(01).
       COPY SGCBRDBC.
       COPY BGLBRGDD.
*% IF PGM_PU OR NOT NO_CIC_PQ
      *<<<< PGM_PU OR NOT NO_CIC_PQ
       COPY GNSBRCIC.
       COPY GNSWGCIC.
*% IF PGM_DTC
      *<<<< PGM_DTC
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-CIC-REQA==.
      *>>>>
*% END
      *>>>>
*% END
      *<<<< UNS_FLD
       COPY GNSWGCPT.
       COPY GNSWGSTR.
      *>>>>
*% IF PGM_DTC
      *<<<< PGM_DTC
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-GDD-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-DBC-REQA==.
      *>>>>
*% END
      *>>>>
       01  WSS-VARI.
           03 WSS-CIC-GTIA-N             VALUE SPACES PIC X(12).
           03 WSS-NUM-IGES-N             VALUE ZEROES PIC 9(03).
           03 WSS-COD-PACR-N             VALUE SPACES PIC X(02).
           03 WSS-DLC-RDC                         PIC X(01).
           03 WSS-IND-RDC                         PIC 9(01).
           03 WSS-VAL-DIFE      VALUE ZEROES     PIC S9(11).
           03 WSS-FEC-FINI.                                 
              05 WSS-NUM-SINI                     PIC 9(02).
              05 WSS-NUM-AINI                     PIC 9(02).
              05 WSS-NUM-MINI                     PIC 9(02).
              05 WSS-NUM-DINI                     PIC 9(02).
           03 WSS-FEC-FTER.                                 
              05 WSS-NUM-STER                     PIC 9(02).
              05 WSS-NUM-ATER                     PIC 9(02).
              05 WSS-NUM-MTER                     PIC 9(02).
              05 WSS-NUM-DTER                     PIC 9(02).
      *MHM-INI 23-OCT-2003
           03 WSS-GLS-CGTA.
              05 WSS-GLS-TOPE                   PIC X(40).
              05 WSS-GLS-SOPE                   PIC X(40).
      *MHM-FIN 23-OCT-2003

       COPY BGLWGEXV.
           03 WSS-NUM-IDLC-903                    PIC 9(03).
           03 PGM-STAT-ADIC.
              05 PGM-STAT-TAG        VALUE '23'   PIC X(02).
                 88 PGM-STAT-TAG-OKS VALUE '00'.
                 88 PGM-STAT-TAG-NUL VALUE '  '.
              05 PGM-STAT-GES.
                 88 PGM-STAT-GES-NUL    VALUE '  '.
                 07 PGM-STT1-GES        VALUE '2' PIC X(01).
                    88 PGM-STAT-GES-OKS VALUE '0'.
                 07 PGM-STT2-GES        VALUE '3' PIC X(01).
           03 WSS-CIV-SIV.
              05 WSS-CIV-EMI                      PIC X(03).
              05 WSS-SIV-EMI                      PIC X(03).
      *MPB-INI 05-FEB-2019 MODIFICACION PANTALLA GES
           03 WSS-S      VALUE 'S'       PIC X(01).
           03 WSS-N      VALUE 'N'       PIC X(01).
      *MPB-FIN                                      
      *MVG-INI 19-JUN-2018 CORRECCION VALORES CGD - 53926
           03 WSS-1                     VALUE '1'       PIC  X(01).
           03 WSS-C                     VALUE 'C'       PIC  X(01).
      *MVG-FIN 19-JUN-2018 CORRECCION VALORES CGD - 53926

       COPY BGLWGVCR.
       COPY COLWGINT.
       COPY BGLWGDAP.
       COPY GNSWGPES.
      *MVG-INI 19-JUN-2018 CORRECCION VALORES CGD - 53926
       COPY GNSWINVC.
      *MVG-FIN 19-JUN-2018 CORRECCION VALORES CGD - 53926
      *
*% IF PGM_DTC
      *<<<< PGM_DTC
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-TAG-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-GVT-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-GES-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-GLE-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-GSE-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-GDO-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-GUB-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-FIA-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-DLC-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-CAM-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-USR-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-OPD-REQA==.
      *XON-INI 15-NOV-2010   CLAUSULA DE COBERTURA
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-GAP-REQA==.
      *XON-FIN 15-NOV-2010
      *MPB-INI 05-FEB-2019 MODIFICACION PANTALLA GES      
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-OPC-REQA==.
      *MPB-FIN      
      *>>>>
*% END
      *>>>>
*% END
*% IF FIN_PGM_STAT
      *<<<< FIN_PGM_STAT
              05 PGM-STAT-GDO.
                 88 PGM-STAT-GDO-NUL    VALUE '  '.
                 07 PGM-STT1-GDO        VALUE '2' PIC X(01).
                    88 PGM-STAT-GDO-OKS VALUE '0'.
                 07 PGM-STT2-GDO        VALUE '3' PIC X(01).
      *MHM-INI 2-OCT-2003
              05 PGM-STAT-GLE.
                 88 PGM-STAT-GLE-NUL    VALUE '  '.
                 07 PGM-STT1-GLE        VALUE '2' PIC X(01).
                    88 PGM-STAT-GLE-OKS VALUE '0'.
                 07 PGM-STT2-GLE        VALUE '3' PIC X(01).
      *MHM-FIN 2-OCT-2003
      *XON-INI 15-NOV-2010   CLAUSULA DE COBERTURA
           03 WSS-NUM-RDC               PIC 9(02) VALUE ZEROES.
           03 WSS-NUM-IGAP              PIC 9(02) VALUE ZEROES.
           03 WSS-IND-CARA              PIC X(01) VALUE SPACES.
      *XON-FIN 15-NOV-2010
      *>>>>
*% END
*% CMA_USR = TRUE
*% IF CMA AND ( PGM_MVS OR PGM_DOS )
           02 FILLER                       PIC X(500).
*% END
*% IF INI_FIO AND ( PGM_MVS OR PGM_DOS )
      *<<<< INI_FIO
           MOVE +500 TO SCR-TCMA.
      *>>>>
*% END
*% IF INI_FIO AND PGM_VMS
      *<<<< INI_FIO

           MOVE FIO-ACCS-INP TO FIO-ACCS.
           MOVE FIO-ACC      TO FIO-CMND.
           MOVE 'TAB'        TO FIO-SIST.
           PERFORM GNS-FIO-TAB.
           MOVE FIO-INP TO FIO-CMND.
           PERFORM GNS-FIO-TAB.

           MOVE FIO-ACCS-INP TO FIO-ACCS.
           MOVE FIO-ACC      TO FIO-CMND.
           MOVE 'TAB'        TO FIO-SIST.
           PERFORM TAB-FIO-OFI.
           MOVE FIO-INP TO FIO-CMND.
           PERFORM TAB-FIO-OFI.

           MOVE FIO-ACCS-INP TO FIO-ACCS.
           MOVE FIO-ACC      TO FIO-CMND.
           MOVE 'TAB'        TO FIO-SIST.
           PERFORM TAB-FIO-USR.
           MOVE FIO-INP TO FIO-CMND.
           PERFORM TAB-FIO-USR.

           MOVE FIO-ACCS-INP TO FIO-ACCS.
           MOVE FIO-ACC      TO FIO-CMND.
           MOVE 'SGC'        TO FIO-SIST.
           PERFORM SGC-FIO-DBC.
           MOVE FIO-INP TO FIO-CMND.
           PERFORM SGC-FIO-DBC.

           MOVE FIO-ACCS-INP TO FIO-ACCS.
           MOVE FIO-ACC      TO FIO-CMND.
           MOVE 'SGC'        TO FIO-SIST.
           PERFORM SGC-FIO-TAB.
           MOVE FIO-INP TO FIO-CMND.
           PERFORM SGC-FIO-TAB.

           MOVE FIO-ACCS-INP TO FIO-ACCS.
           MOVE FIO-ACC      TO FIO-CMND.
           MOVE 'BGL'        TO FIO-SIST.
           PERFORM BGL-FIO-GDD.
           MOVE FIO-INP TO FIO-CMND.
           PERFORM BGL-FIO-GDD.

           MOVE FIO-ACCS-INP TO FIO-ACCS.
           MOVE FIO-ACC      TO FIO-CMND.
           MOVE 'BGL'        TO FIO-SIST.
           PERFORM BGL-FIO-TAG.
           MOVE FIO-INP TO FIO-CMND.
           PERFORM BGL-FIO-TAG.

           MOVE FIO-ACCS-INP TO FIO-ACCS.
           MOVE FIO-ACC      TO FIO-CMND.
           MOVE 'BGL'        TO FIO-SIST.
           PERFORM BGL-FIO-GVT.
           MOVE FIO-INP TO FIO-CMND.
           PERFORM BGL-FIO-GVT.

           MOVE FIO-ACCS-INP TO FIO-ACCS.
           MOVE FIO-ACC      TO FIO-CMND.
           MOVE 'BGL'        TO FIO-SIST.
           PERFORM BGL-FIO-GDO.
           MOVE FIO-INP TO FIO-CMND.
           PERFORM BGL-FIO-GDO.

           MOVE FIO-ACCS-INP TO FIO-ACCS.
           MOVE FIO-ACC      TO FIO-CMND.
           MOVE 'BGL'        TO FIO-SIST.
           PERFORM BGL-FIO-GES.
           MOVE FIO-INP TO FIO-CMND.
           PERFORM BGL-FIO-GES.

           MOVE FIO-ACCS-INP TO FIO-ACCS.
           MOVE FIO-ACC      TO FIO-CMND.
           MOVE 'BGL'        TO FIO-SIST.
           PERFORM BGL-FIO-GLE.
           MOVE FIO-INP TO FIO-CMND.
           PERFORM BGL-FIO-GLE.

           MOVE FIO-ACCS-INP TO FIO-ACCS.
           MOVE FIO-ACC      TO FIO-CMND.
           MOVE 'BGL'        TO FIO-SIST.
           PERFORM BGL-FIO-GSE.
           MOVE FIO-INP TO FIO-CMND.
           PERFORM BGL-FIO-GSE.

           MOVE FIO-ACCS-INP TO FIO-ACCS.
           MOVE FIO-ACC      TO FIO-CMND.
           MOVE 'BGL'        TO FIO-SIST.
           PERFORM BGL-FIO-GUB.
           MOVE FIO-INP TO FIO-CMND.
           PERFORM BGL-FIO-GUB.

           MOVE FIO-ACCS-UPD TO FIO-ACCS.
           MOVE FIO-ACC      TO FIO-CMND.
           MOVE 'DEU'        TO FIO-SIST.
           PERFORM DEU-FIO-FIA.
           MOVE FIO-INP TO FIO-CMND.
           PERFORM DEU-FIO-FIA.

           MOVE FIO-ACCS-UPD TO FIO-ACCS.
           MOVE FIO-ACC      TO FIO-CMND.
           MOVE 'COL'        TO FIO-SIST.
           PERFORM COL-FIO-DLC.
           MOVE FIO-INP TO FIO-CMND.
           PERFORM COL-FIO-DLC.

           MOVE FIO-ACCS-UPD TO FIO-ACCS.
           MOVE FIO-ACC      TO FIO-CMND.
           MOVE 'TAB'        TO FIO-SIST.
           PERFORM TAB-FIO-CAM.
           MOVE FIO-INP TO FIO-CMND.
           PERFORM TAB-FIO-CAM.

      * OBTIENE CODIGO VALOR DE CAMBIO DE PESOS MEDIANTE CIC DE LA MONEDA '0999'
           MOVE 'TAB'          TO FIO-SIST.
           MOVE 'VLR'          TO TAB-CIC-TTAB IN TAB.
           MOVE '0999  '       TO TAB-CIC-CTAB IN TAB.
           MOVE 'TAB-CIC-TABL' TO FIO-AKEY.
           MOVE FIO-GET-KEY    TO FIO-CMND.
           PERFORM GNS-FIO-TAB.
           IF NOT FIO-STAT-OKS
               MOVE 'TAB'          TO MSG-COD-SIST
               MOVE 'CIC0999  NEX' TO MSG-COD-MENS
               PERFORM GET-MSG
               PERFORM PRG-ABT.
           MOVE TAB-COD-CTAB IN TAB TO VCR-COD-PESO IN VCR-VARI.
      *>>>> INI_FIO
*% END
*% IF INI_FND_KEY
      *<<<< BUSNXTPRV
           MOVE SPACES TO MSG-COD-MENS.
           MOVE 0 TO WSS-IBUS.
           MOVE 0 TO WSS-IBUS-GDG.
           MOVE '23' TO PGM-STAT-GDD.

*% IF NOT PGM_MCP
           IF ( FRM-FFLD = FRM-FFLD-PF6 OR FRM-FFLD-PF5 ) AND
              GDD-KEY-AGDD IN CMA-VARI > SPACES
               PERFORM LEE-NXT-PRV-XGDD
      *<<<< LEE_PAD_F56
               MOVE DBC-KEY-IDBC IN CMA-VARI TO DBC-KEY-IDBC IN DBC
               MOVE FIO-GET-KEY TO FIO-CMND
               PERFORM SGC-FIO-DBC
               MOVE FIO-STAT TO PGM-STAT-DBC

      *>>>>
               IF WSS-IBUS = 3
                   PERFORM SCR-CLRA-QGA
                   GO TO EXA-COM-STAT
               ELSE
                   MOVE PGM-SNUL TO PGM-STAT-GDG
                   MOVE PGM-SNUL TO PGM-STAT-DBC
                   IF FRM-FFLD = FRM-FFLD-PF5
                       MOVE 'GDD    NOPRV' TO MSG-COD-MENS
                       GO TO ERR-FND-KEY
                   ELSE
                       MOVE 'GDD    NONXT' TO MSG-COD-MENS
                       GO TO ERR-FND-KEY
           ELSE
           IF FRM-FFLD = FRM-FFLD-PF6 OR FRM-FFLD-PF5
               MOVE 'GDD    NEX' TO MSG-COD-MENS
               GO TO ERR-FND-KEY.

           IF FRM-FFLD = FRM-FFLD-PF8 
              OR FRM-FFLD-PF7
               PERFORM LEE-NXT-PRV-XDBC
               IF WSS-IBUS = 1
                   GO TO CON-BUS-DBC
               ELSE
                   MOVE PGM-SNUL TO PGM-STAT-GDG
                   MOVE PGM-SNUL TO PGM-STAT-DBC
                   IF FRM-FFLD = FRM-FFLD-PF7
                       MOVE 'DBC    NOPRV' TO MSG-COD-MENS
                       GO TO ERR-FND-KEY
                   ELSE
                       MOVE 'DBC    NONXT' TO MSG-COD-MENS
                       GO TO ERR-FND-KEY.
*% END
      *>>>>
      *<<<< FNDIRECTO
*% IF NOT FMT_CHI
           IF GDG-IIC-GTIA IN QGA-FLD > ZEROES AND
              DBC-IDC-ICLI IN QGA-FLD = ZEROES AND
              DBC-GLS-NOMC IN QGA-FLD NOT > SPACES
*% ELSE
           IF GDG-IIC-GTIA IN QGA-FLD > ZEROES AND
              DBC-NUM-ICLI IN QGA-FLD = ZEROES AND
              DBC-GLS-NOMC IN QGA-FLD NOT > SPACE
*% END
      *       se digito lo necesario para buscar directo
      * Buscara Cliente por medio de NOM cuando PF7 O PF8
               MOVE 'N' TO CMA-IND-KPAD IN CMA-VARI
               PERFORM FND-DIRECTO
               IF FIO-STAT-OKS
                   MOVE 2 TO WSS-IBUS
      *            para buscar RPH y PAD
                   PERFORM GET-CUR-GDD
                   IF FIO-STAT-OKS
                       MOVE 3 TO WSS-IBUS
                       MOVE GDD-CIC-DCLI IN GDD TO
                            DBC-KEY-IDBC IN DBC
                        MOVE FIO-GET-KEY TO FIO-CMND
                        PERFORM SGC-FIO-DBC
                        MOVE FIO-STAT TO PGM-STAT-DBC
                        IF FIO-STAT-OKS
                            GO TO EXA-COM-STAT
                        ELSE
                            MOVE 'GDD    NODBC' TO MSG-COD-MENS
                            GO TO EXA-COM-STAT 
                   ELSE
                       MOVE 'GDD    NEX' TO MSG-COD-MENS
                       GO TO EXA-COM-STAT
               ELSE
                   MOVE SPACES TO GDD-KEY-AGDD IN CMA-VARI
                   MOVE SPACES TO GDD-CIC-DCLI IN CMA-VARI
                   MOVE SPACES TO DBC-KEY-IDBC IN CMA-VARI
                   MOVE 'GDG    NEX' TO MSG-COD-MENS
                   GO TO ERR-FND-KEY.

      *>>>>
      *<<<< BUSPADHIJ

           MOVE SPACES TO GDD-KEY-AGDD IN CMA-VARI.
           MOVE SPACES TO GDD-CIC-DCLI IN CMA-VARI.
           MOVE SPACES TO DBC-KEY-IDBC IN CMA-VARI.

      *    pudo haberse digitadp el campo llave del hijo o no
      *    busca el padre por alguna de las llaves (la digitada)
*% IF NOT FMT_CHI
           IF DBC-IDC-ICLI IN QGA-FLD NOT = ZEROES
*% ELSE
           IF DBC-NUM-ICLI IN QGA-FLD NOT = ZEROES
*% END
               MOVE 'I' TO CMA-IND-KPAD IN CMA-VARI
               MOVE 1 TO WSS-IBUS
*% IF NOT FMT_CHI
           MOVE DBC-IDC-ICLI IN QGA-FLD TO DBC-IDC-ICLI IN DBC 
*% ELSE
           MOVE DBC-NUM-ICLI IN QGA-FLD TO DBC-NUM-ICLI IN DBC 
           MOVE DBC-IND-ICLI IN QGA-FLD TO DBC-IND-ICLI IN DBC 
           MOVE DBC-GLS-ICLI IN QGA-FLD TO DBC-GLS-ICLI IN DBC 
*% END                                            

           MOVE 'DBC-IDC-ICLI'  TO FIO-AKEY                    
           MOVE FIO-GET-KEY TO FIO-CMND                        
           PERFORM SGC-FIO-DBC                                 
           IF FIO-STAT-OKS                                     
              GO TO CON-BUS-DBC.                               
      *
           IF DBC-GLS-NOMC IN QGA-FLD > SPACES
               MOVE 'N' TO CMA-IND-KPAD IN CMA-VARI
               MOVE DBC-GLS-NOMC IN QGA-FLD TO DBC-GLS-NOMC IN DBC
               MOVE 'DBC-GLS-NOMC'   TO FIO-AKEY
               MOVE FIO-GET-NLS TO FIO-CMND
               PERFORM GET-CLI
               IF MSG-COD-MENS NOT > SPACES
                   MOVE 1 TO WSS-IBUS.

      * Si se procesa subentidad, la busqueda por llave alternativa
      *  Debe ser un parrafo con loop

           IF WSS-IBUS = 0
               MOVE 'DBC    NEX' TO MSG-COD-MENS
               GO TO ERR-FND-KEY.

       CON-BUS-DBC.
      *    se encontro el padre y busca el GDG
           MOVE '00' TO PGM-STAT-DBC.

      * Para permitir Ant/Sig aunque padre no tenga operaciones
           MOVE DBC-KEY-IDBC IN DBC TO DBC-KEY-IDBC IN CMA-VARI.

      *    se digito tambien el hijo, se busca directamente GDD
           IF GDG-IIC-GTIA IN QGA-FLD > ZEROES 
*% IF NOT PGM_MCP
              AND NOT (FRM-FFLD = FRM-FFLD-PF8 OR FRM-FFLD-PF7)
      *        Buscara Cliente por medio de NOM cuando PF7 O PF8
*% END
               MOVE 'N' TO CMA-IND-KPAD IN CMA-VARI
               PERFORM GET-GDD
               IF WSS-IBUS = 1
                   MOVE 'GDD    NEX' TO MSG-COD-MENS
                   GO TO ERR-FND-KEY
               ELSE
               IF WSS-IBUS = 2
                   MOVE 'GDG    NEX' TO MSG-COD-MENS
                   GO TO ERR-FND-KEY
               ELSE
      *            se encontro el hijo
                   GO TO EXA-COM-STAT
           ELSE
               PERFORM BUS-ULT-GDG
               IF WSS-IBUS = 3
                   GO TO EXA-COM-STAT
               ELSE
                   MOVE 'GDD    NEX' TO MSG-COD-MENS
                   GO TO ERR-FND-KEY.

       FND-DIRECTO.
           MOVE 1 TO WSS-IBUS-GDG.

      *>>>>
*% END
*% IF FIN_FND_KEY
      *<<<< FINFNDKEY

       EXA-COM-STAT.
*% IF NOT PGM_VMS
      *<<<< NOT PGM_VMS
      *>>>>
*% END

           IF WSS-IBUS = 2 OR 3
      *        se encontro el hijo
      *<<<< PGM_HIJ
               MOVE '00' TO PGM-STAT-GDG
      *>>>>
               MOVE GDG-KEY-IGDG IN GDG TO GDD-KEY-AGDD IN CMA-VARI.
           IF WSS-IBUS = 3
      *        se encontro la relacion completa
               MOVE '00' TO PGM-STAT-GDD
               MOVE GDD-CIC-DCLI IN GDD TO GDD-CIC-DCLI IN CMA-VARI
               MOVE '00' TO PGM-STAT-DBC
               MOVE GDD-CIC-DCLI IN GDD TO DBC-KEY-IDBC IN CMA-VARI
           ELSE
      *       GDG incompleto
               MOVE '23' TO PGM-STAT-GDD
               MOVE '23' TO PGM-STAT-DBC
               MOVE SPACES TO DBC-CAI-ICLI IN CMA-VARI
               MOVE ZEROES TO DBC-IIC-ICLI IN CMA-VARI
               MOVE DBC-KEY-IDBC IN CMA-VARI TO GDD-CIC-DCLI IN CMA-VARI
               GO TO ANL-GDG.

      * Determina si tiene multiples padres para comando consulta
           IF NOT ( SCR-CCPP = 'ACC' AND SCR-STAT = SCR-STAT-CON )
               GO TO ANL-GDG.

           MOVE SPACES TO MSG-COD-SIST.
           MOVE SPACES TO MSG-COD-MENS.

      * Se posiciona por la llave del hijo
           MOVE 'GDD-KEY-AGDD' TO FIO-AKEY.
           MOVE FIO-GET-NLS TO FIO-CMND.
           PERFORM BGL-FIO-GDD.

      *    Busca siguiente por la llave del hijo
           MOVE 'GDD-KEY-AGDD' TO FIO-AKEY.
           MOVE FIO-GET-NXT TO FIO-CMND.

           PERFORM BGL-FIO-GDD.
           IF FIO-STAT-OKS AND
              GDG-KEY-IGDG  IN GDG = GDD-KEY-AGDD  IN GDD
                MOVE 'M' TO SCR-IND-MGDD
      *<<<< MUL_FLD
                MOVE 'MULTIPLES' TO FRM-GLS-MULT IN QGA-FLD
      *>>>>
           ELSE
      *<<<< MUL_FLD
                MOVE SPACES      TO FRM-GLS-MULT IN QGA-FLD
      *>>>>
                MOVE SPACES TO SCR-IND-MGDD.

           IF FIO-STAT-OKS
               MOVE 'GDD-KEY-AGDD' TO FIO-AKEY
               MOVE FIO-END-BRW TO FIO-CMND
               PERFORM BGL-FIO-GDD.

           MOVE GDD-CIC-DCLI IN CMA-VARI TO GDD-CIC-DCLI IN GDD.
           MOVE GDD-KEY-AGDD IN CMA-VARI TO GDD-KEY-AGDD IN GDD.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM BGL-FIO-GDD.

       ANL-GDG.
       FIN-ANL-GDG.
           MOVE PGM-STAT-GDG TO FIO-STAT. 

      *>>>>
           GO TO FIN-FND-KEY.
      *<<<< ERRFNDKEY
       ERR-FND-KEY.
           IF WSS-IBUS = 0 AND WSS-IBUS-GDG = 0
      *        busco por padre y no encontro padre
               MOVE SPACES TO PGM-STAT
               MOVE 'TAB' TO MSG-COD-SIST
               MOVE '23' TO PGM-STAT-DBC
           ELSE
               MOVE 'BGL' TO MSG-COD-SIST.

           PERFORM GET-MSG.
           MOVE MSG-GLS-DESC TO FRM-MENS.

           MOVE SCR-STAT-CON TO SCR-STAT.
           MOVE '00' TO FIO-STAT. 
*% IF NOT PGM_MCP      
           IF FRM-FFLD = FRM-FFLD-PF6 OR
              FRM-FFLD = FRM-FFLD-PF5 OR
              SCR-CCPP = 'ING'
               GO TO FIN-FND-KEY.
*% END
           IF PGM-STAT-DBC-OKS 
      *        Despliega solo datos del DBC

*% IF PGM_VMS
      *<<<< PGM_VMS
               DISPLAY PGM-NCUR WITH NO ADVANCING
      *>>>>
*% END
               PERFORM SCR-CLRA-QGA
*% IF PGM_VMS
      *<<<< PGM_VMS
               DISPLAY PGM-SCUR WITH NO ADVANCING
               INITIALIZE QGA-DFLD
      *>>>>
*% END
*% IF PGM_VMS
      *<<<< PGM_VMS
               PERFORM SCR-DSP-MSSG
      *>>>>
*% END
           ELSE
*% IF NOT PGM_MCP
           IF FRM-FFLD = FRM-FFLD-PF8
              OR FRM-FFLD-PF7
               GO TO FIN-FND-KEY
           ELSE
*% END
           IF PGM-STAT-GDG-OKS 
               MOVE PGM-SNUL TO PGM-STAT-GDG
           ELSE
               MOVE '23' TO FIO-STAT.

           GO TO FIN-FND-KEY.
      *>>>>
*% END
*% IF EOF
      *<<<< EOF
      *<<<< EOFPQ
*% IF NOT PGM_MCP
       LEE-NXT-PRV-XGDD SECTION.
       INI-LEE-NXT-PRV-XGDD.
           MOVE GDD-KEY-IGDD IN CMA-VARI TO GDD-KEY-IGDD IN GDD. 
           IF FRM-FFLD = FRM-FFLD-PF5
*% IF PGM_VMS
      *<<<< PGM_VMS
               MOVE 'GDD-KEY-PRV' TO FIO-AKEY
               MOVE FIO-GET-NLS TO FIO-CMND
      *>>>>
*% ELSE
      *<<<< NOT PGM_VMS
               MOVE FIO-GET-LEQ TO FIO-CMND
      *>>>>
*% END
               PERFORM BGL-FIO-GDD
               MOVE FIO-GET-PRV TO FIO-CMND
           ELSE
               MOVE FIO-GET-NLS TO FIO-CMND
               PERFORM BGL-FIO-GDD
               MOVE FIO-GET-NXT TO FIO-CMND.

           PERFORM BGL-FIO-GDD.
           MOVE FIO-STAT TO PGM-STAT-GDD.
           IF FIO-STAT-OKS 
               MOVE FIO-END-BRW TO FIO-CMND
               PERFORM BGL-FIO-GDD.

           IF PGM-STAT-GDD-OKS AND
              GDD-CIC-DCLI IN GDD = DBC-KEY-IDBC IN CMA-VARI
               MOVE GDD-KEY-AGDD IN GDD TO GDG-KEY-IGDG IN GDG
               MOVE FIO-GET-KEY TO FIO-CMND
               PERFORM BGL-FIO-GDG
               IF FIO-STAT-OKS
                   MOVE 3 TO WSS-IBUS
                   MOVE GDG-CAI-GTIA IN GDG TO GDG-CAI-GTIA IN QGA-FLD
                   MOVE GDG-IIC-GTIA IN GDG TO GDG-IIC-GTIA IN QGA-FLD
               ELSE
                   MOVE 'DAT ERR' TO MSG-COD-MENS
                   MOVE 'BGL' TO MSG-COD-SIST
                   PERFORM GET-MSG
                   MOVE MSG-GLS-DESC TO FRM-MENS
           ELSE
               MOVE '23' TO FIO-STAT.

       FIN-LEE-NXT-PRV-XGDD.
           EXIT.

       LEE-NXT-PRV-XDBC SECTION.
       INI-LEE-NXT-PRV-XDBC.
           MOVE DBC-KEY-IDBC IN CMA-VARI TO DBC-KEY-IDBC IN DBC.
           MOVE FIO-GET-KEY    TO FIO-CMND.
           PERFORM SGC-FIO-DBC.
           IF CMA-IND-KPAD IN CMA-VARI = 'I'
               MOVE 'DBC-IDC-ICLI'  TO FIO-AKEY
           ELSE
               MOVE 'DBC-GLS-NOMC'  TO FIO-AKEY.

           MOVE FIO-GET-NLS TO FIO-CMND.
           PERFORM SGC-FIO-DBC.

      * Busca por llave secundaria el registro de pantalla anterior
           PERFORM BUS-DBC-ANT UNTIL
                FIO-STAT-OKS AND
                DBC-KEY-IDBC IN DBC = DBC-KEY-IDBC IN CMA-VARI OR
                NOT FIO-STAT-OKS.

           MOVE 0 TO WSS-IBUS.
           MOVE '23' TO PGM-STAT-DBC.
           IF FIO-STAT-OKS 
               PERFORM LEE-NXT-PRV-DBC
               IF FRM-FFLD = FRM-FFLD-PF7
                   MOVE 'BGL'      TO FIO-SIST
                   MOVE 'VSN '     TO TAB-COD-TTAB IN TAB
*% IF PGM_ARG
      *<<<< PGM_ARG
                   MOVE 'SISNOVSI'   TO TAB-COD-CTAB IN TAB
                   MOVE FIO-GET-KEY TO FIO-CMND
                   PERFORM GNS-FIO-TAB
                   IF FIO-STAT-OKS AND
                      TAB-IND-VIGE IN TAB = 'S'
                       NEXT SENTENCE
                   ELSE
                       MOVE 0 TO WSS-IBUS
                       MOVE '23' TO PGM-STAT-DBC
                       PERFORM LEE-NXT-PRV-DBC.
      *>>>>
*% ELSE
      *<<<< NOT PGM_ARG
                   MOVE 'SISVSI'   TO TAB-COD-CTAB IN TAB
                   MOVE FIO-GET-KEY TO FIO-CMND
                   PERFORM GNS-FIO-TAB
                   IF FIO-STAT-OKS AND
                      TAB-IND-VIGE IN TAB = 'S'
                       MOVE 0 TO WSS-IBUS
                       MOVE '23' TO PGM-STAT-DBC
                       PERFORM LEE-NXT-PRV-DBC.
      *>>>>
*% END
      *FLB CST  13-OCT-1993 
       FIN-LEE-NXT-PRV-XDBC.
           EXIT.
*% END
       BUS-DBC-ANT SECTION.
       INI-BUS-DBC-ANT.
           IF CMA-IND-KPAD IN CMA-VARI = 'I'
               MOVE 'DBC-IDC-ICLI'  TO FIO-AKEY
           ELSE
               MOVE 'DBC-GLS-NOMC'  TO FIO-AKEY.
           MOVE FIO-GET-NXT TO FIO-CMND.
           PERFORM SGC-FIO-DBC.
       FIN-BUS-DBC-ANT.
           EXIT.

*% IF NOT PGM_MCP
       LEE-NXT-PRV-DBC SECTION.
       INI-LEE-NXT-PRV-DBC.
           IF FRM-FFLD = FRM-FFLD-PF7
*% IF PGM_VMS
      *<<<< PGM_VMS
               MOVE 'DBC-GLS-NOMD' TO FIO-AKEY
      *>>>>
*% END
               MOVE FIO-GET-PRV TO FIO-CMND
           ELSE
               MOVE FIO-GET-NXT TO FIO-CMND.
*% IF PGM_VMS
      *<<<< PGM_VMS
           IF FRM-FFLD = FRM-FFLD-PF8
      *>>>>
*% END
           IF CMA-IND-KPAD IN CMA-VARI = 'I'
               MOVE 'DBC-IDC-ICLI'  TO FIO-AKEY
           ELSE
               MOVE 'DBC-GLS-NOMC'  TO FIO-AKEY.
           PERFORM SGC-FIO-DBC.
           MOVE FIO-STAT TO PGM-STAT-DBC.
           IF FIO-STAT-OKS
               MOVE 1 TO WSS-IBUS.
       FIN-LEE-NXT-PRV-DBC.
           EXIT.
*% END

       BUS-ULT-GDG SECTION.
       INI-BUS-ULT-GDG.
*% IF PGM_VMS
      *<<<< PGM_VMS
           STRING DBC-KEY-IDBC IN DBC
                  '999999999999' DELIMITED BY SIZE
              INTO GDD-KEY-PRV IN GDD.
      *    se busca el ultimo hijo, luego de encontrar el padre
           MOVE 'GDD-KEY-PRV' TO FIO-AKEY.
           MOVE FIO-GET-PRV TO FIO-CMND.
      *>>>>
*% END
*% IF PGM_DTC OR PGM_DB2
      *<<<< PGM_DTC OR PGM_DB2
           MOVE DBC-KEY-IDBC IN DBC TO GDD-CIC-DCLI IN GDD.
      *    se busca el ultimo hijo, luego de encontrar el padre
           MOVE '999999999999' TO GDD-KEY-AGDD IN GDD.
           MOVE FIO-GET-LEQ TO FIO-CMND.
      *>>>>
*% END
*% IF NOT PGM_VSI
      *<<<< NOT PGM_VSI
           MOVE DBC-KEY-IDBC IN DBC TO GDD-CIC-DCLI IN GDD.
           MOVE '9999'              TO GDD-CAI-GTIA IN GDD.
           MOVE '99999999'          TO GDD-IIC-GTIA IN GDD.
           MOVE FIO-GET-LEQ TO FIO-CMND.                   
           PERFORM BGL-FIO-GDD.
           IF FIO-STAT-OKS AND 
              GDD-CIC-DCLI IN GDD = DBC-KEY-IDBC IN DBC
               MOVE GDD-KEY-AGDD IN GDD TO GDG-KEY-IGDG IN GDG
               MOVE FIO-GET-KEY TO FIO-CMND
               PERFORM BGL-FIO-GDG
               IF FIO-STAT-OKS
                   MOVE 3 TO WSS-IBUS
                   MOVE GDG-CAI-GTIA IN GDG TO GDG-CAI-GTIA IN QGA-FLD
                   MOVE GDG-IIC-GTIA IN GDG TO GDG-IIC-GTIA IN QGA-FLD.
      *>>>>
*% END
*% IF PGM_VSI
      *<<<< PGM_VSI
      *    se busca el ultimo hijo, luego de encontrar el padre
           MOVE DBC-KEY-IDBC IN DBC TO GDD-CIC-DCLI IN GDD.
           MOVE SPACES               TO GDD-KEY-AGDD IN GDD.
           MOVE SPACES               TO GDG-KEY-IGDG IN GDG.
           MOVE FIO-GET-NLS TO FIO-CMND.
           PERFORM BGL-FIO-GDD.
           IF NOT (
               FIO-STAT-OKS AND 
              GDD-CIC-DCLI IN GDD = DBC-KEY-IDBC IN DBC
                  )
               MOVE 'GDD    NEX' TO MSG-COD-MENS
               GO TO FIN-BUS-ULT-GDG.
       LUP-BUS-ULT-GDG.
           MOVE GDD-KEY-AGDD IN GDD TO GDG-KEY-IGDG IN GDG.
           MOVE FIO-GET-NXT TO FIO-CMND.
           PERFORM BGL-FIO-GDD.
           IF FIO-STAT-OKS AND 
              GDD-CIC-DCLI IN GDD = DBC-KEY-IDBC IN DBC
               GO TO LUP-BUS-ULT-GDG.

           IF FIO-STAT-OKS 
               MOVE FIO-END-BRW TO FIO-CMND
               PERFORM BGL-FIO-GDD.

           IF GDG-KEY-IGDG IN GDG > SPACES
               MOVE FIO-GET-KEY TO FIO-CMND
               PERFORM BGL-FIO-GDG
               IF FIO-STAT-OKS
                   MOVE 3 TO WSS-IBUS
                   MOVE GDG-CAI-GTIA IN GDG TO GDG-CAI-GTIA IN QGA-FLD
                   MOVE GDG-IIC-GTIA IN GDG TO GDG-IIC-GTIA IN QGA-FLD.

           MOVE DBC-KEY-IDBC IN DBC TO GDD-CIC-DCLI IN GDD.
           MOVE GDG-KEY-IGDG IN GDG TO GDD-KEY-AGDD IN GDD.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM BGL-FIO-GDD.
      *>>>>
*% END
       FIN-BUS-ULT-GDG.
           EXIT.
      *>>>>
      *<<<< EOFPQPU

       GET-GDD SECTION.
       INI-GET-GDD.
           MOVE DBC-KEY-IDBC IN DBC TO GDD-CIC-DCLI IN GDD.
           MOVE GDG-CAI-GTIA IN QGA-FLD TO GDD-CAI-GTIA IN GDD.
           MOVE GDG-IIC-GTIA IN QGA-FLD TO GDD-IIC-GTIA IN GDD.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM BGL-FIO-GDD.
           IF FIO-STAT-OKS AND 
              GDD-CIC-DCLI IN GDD = DBC-KEY-IDBC IN DBC
               MOVE GDD-KEY-AGDD IN GDD TO GDG-KEY-IGDG IN GDG
               MOVE 2 TO WSS-IBUS
               MOVE FIO-GET-KEY TO FIO-CMND
               PERFORM BGL-FIO-GDG
               IF FIO-STAT-OKS
                   MOVE 3 TO WSS-IBUS.
       FIN-GET-GDD.
           EXIT.

       GET-CUR-GDD SECTION.
       INI-GET-CUR-GDD.
           MOVE GDG-KEY-IGDG IN GDG TO GDD-KEY-AGDD IN GDD.
           MOVE 'GDD-KEY-AGDD' TO FIO-AKEY.
           MOVE FIO-GET-NLS TO FIO-CMND.
           PERFORM BGL-FIO-GDD.
           IF FIO-STAT-OKS
               MOVE 'GDD-KEY-AGDD' TO FIO-AKEY
               MOVE FIO-END-BRW TO FIO-CMND
               PERFORM BGL-FIO-GDD.
           IF NOT
              GDG-KEY-IGDG IN GDG = GDD-KEY-AGDD IN GDD
               MOVE '23' TO FIO-STAT.
       FIN-GET-CUR-GDD.
           EXIT.

       COPY SGCBFDBC.
       COPY BGLBFGDD.
       COPY SGCBGCLI.
      *XON-INI 15-NOV-2010   CLAUSULA DE COBERTURA
       COPY BGLBFGAP.
      *XON-FIN 15-NOV-2010

*% IF PGM_PU OR NOT NO_CIC_PQ
      *<<<< PGM_PU OR NOT NO_CIC_PQ
       COPY GNSBFCIC.
      *>>>>
*% END
      *<<<< UNS_FLD
       COPY GNSBGCPT.
       COPY GNSBGSTR.
      *>>>>

      *>>>>
*%!  VALORIZA DOCUMENTO BCP
*% PGM_QGA = TRUE
       COPY BGLBGEDP.
       VLR-DAP SECTION.    
       INI-VLR-DAP.        
           PERFORM EXA-DAP.                           
           IF FRM-SUAR NOT = FRM-SUAR-MAL AND 
              OPD-COD-TOPD IN DAP-VARI = GDG-TIP-CGTA IN QGA-FLD AND 
              OPD-COD-AOPD IN DAP-VARI = GDG-STP-CGTA IN QGA-FLD     
      *       Es Dep Plazo Propio                                   
               PERFORM BUS-GDO-OPD                                  
               IF MSG-COD-MENS = SPACES                             
      *Tasa Interes             : INT-TINT                          
      *Valor Tasa Informada     : INT-TINT                          
      *Valor de Cambio          : INT-VCAM                          
      *Fecha Inicial Periodo    : INT-FUNO                          
      *Fecha Final   Periodo    : INT-FDOS                          
      *Fecha Basa Tasa Variable : INT-FBTV ( opcional )             
      *Fecha de Proceso         : INT-FPRO ( la rutina la obtiene)  
                   MOVE OPD-COD-TINT IN OPD TO INT-TIPT             
                   MOVE OPD-SGV-TINT IN OPD TO INT-TINT             
                   MOVE OPD-COD-VCAM IN OPD TO INT-VCAM             
                   MOVE OPD-NUM-DREA IN OPD TO INT-DUNO             
                   MOVE OPD-NUM-MREA IN OPD TO INT-MUNO             
                   MOVE OPD-NUM-SREA IN OPD TO INT-SUNO             
                   MOVE OPD-NUM-AREA IN OPD TO INT-AUNO             
                   PERFORM OBT-FDOS                                 
                   PERFORM GNS-CAL-INT                              
                   IF INT-CMSG = SPACES                             
                       COMPUTE GVT-SGV-VCTS IN GVT ROUNDED =     
                               GVT-SGV-VCTS IN GVT +             
                               OPD-VAL-SCAP IN OPD * INT-TIPE       
                       MOVE GVT-SGV-VCTS IN GVT TO               
                            GVT-SGV-LTSN IN GVT                  
                       MOVE GVT-SGV-VCTS IN GVT TO               
                            GVT-SGV-VPND     IN GVT                  
                   ELSE                                             
                       GO TO ERR-VLR-DAP                            
               ELSE                                                 
                   GO TO ERR-VLR-DAP.                               
           GO TO FIN-VLR-DAP.                                       
       ERR-VLR-DAP.                                                 
           IF INT-CMSG > SPACES                                     
               MOVE INT-CMSG TO MSG-COD-MENS                        
               MOVE INT-MENS TO FRM-MENS                            
           ELSE                                                     
               PERFORM GET-MSG                                      
               MOVE MSG-GLS-DESC TO FRM-MENS                        
               MOVE FRM-SUAR-MAL TO FRM-SUAR.                       
       FIN-VLR-DAP.                                                 
           EXIT.                  

       OBT-FDOS SECTION.                                         
       INI-OBT-FDOS.                                             
           PERFORM GET-FHOY.                                     
           IF HOY-FHOY NOT > OPD-FEC-FPVC IN OPD                 
               MOVE HOY-DHOY            TO INT-DDOS              
               MOVE HOY-MHOY            TO INT-MDOS              
               MOVE HOY-SHOY            TO INT-SDOS              
               MOVE HOY-AHOY            TO INT-ADOS              
           ELSE                                                  
               MOVE OPD-NUM-DPVC IN OPD TO INT-DDOS              
               MOVE OPD-NUM-MPVC IN OPD TO INT-MDOS              
               MOVE OPD-NUM-SPVC IN OPD TO INT-SDOS              
               MOVE OPD-NUM-APVC IN OPD TO INT-ADOS.             
       FIN-OBT-FDOS.                                             
           EXIT.                                                   

       BUS-GDO-OPD SECTION.
       INI-BUS-GDO-OPD.
           MOVE SPACES TO MSG-COD-MENS.
      *     MOVE SPACES TO DAP-CIC-TGAR IN DAP-VARI.
           MOVE GDG-CAI-GTIA IN QGA-FLD TO GDO-CAI-GTIA IN GDO.
           MOVE GDG-IIC-GTIA IN QGA-FLD TO GDO-IIC-GTIA IN GDO.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM BGL-FIO-GDO.
           IF NOT FIO-STAT-OKS
               MOVE 'BGL'          TO MSG-COD-SIST
               MOVE 'GDO    NEX'   TO MSG-COD-MENS
           ELSE
               MOVE GDO-COD-DOCU IN GDO TO OPD-CIC-IOPD IN DAP-VARI      
               MOVE OPD-CAI-IOPD IN DAP-VARI TO OPD-CAI-IOPD IN OPD     
               MOVE OPD-IIC-IOPD IN DAP-VARI TO OPD-IIC-IOPD IN OPD     
               MOVE FIO-GET-KEY TO FIO-CMND                             
               PERFORM DAP-FIO-OPD                                      
               IF NOT FIO-STAT-OKS                                      
                   MOVE 'BGL'          TO MSG-COD-SIST                  
                   MOVE 'OPD    NEX'   TO MSG-COD-MENS                  
               ELSE                                                     
               IF OPD-COD-STAT IN OPD NOT = 'G'                         
                   MOVE 'BGL'            TO MSG-COD-SIST                
                   MOVE 'OPD    NOVIG'   TO MSG-COD-MENS.               
               GO TO FIN-BUS-GDO-OPD.
       FIN-BUS-GDO-OPD.
           EXIT.


       COPY DEUBFFIA.
       COPY DAPBFOPD.
       COPY BGLBFTAG.
       COPY BGLBFGVT.
       COPY BGLBFGDO.
       COPY BGLBFGES.
       COPY BGLBFGLE.
       COPY BGLBFGSE.
       COPY BGLBFGUB.
       COPY BGLBGVCR.
       COPY BGLBKVCR.

*% IF PGM_MCP
      *<<<< PGM_MCP
       COPY DEUBFFIA.
       COPY DAPBFOPD.
      *>>>>
*% END
       COPY COLBFDLC.
*% IF PGM_VMS
      *<<<< PGM_VMS
       COPY SGCBFTAB.

      *>>>>
*% END
       COPY TABBFCAM.
*% IF PGM_MCP
      *<<<< PGM_MCP
       COPY TABBFCA1.
      *>>>>
*% END
       COPY GNSBGVSM.                                                   
       COPY GNSBPFEC.
       COPY GNSBGINT.
       COPY GNSBGPES.
       COPY TABBBUSR.
       COPY TABBFUSR.
      *MVG-INI 19-JUN-2018 CORRECCION VALORES CGD - 53926
       COPY GNSBINVC.
      *MVG-INI 19-JUN-2018 CORRECCION VALORES CGD - 53926
      *MPB-INI 05-FEB-2019 MODIFICACION PANTALLA GES
       COPY COLBFOPC.
       
       BUS-REG-OPC SECTION.                                 
       INI-BUS-REG-OPC.                                     
                                                         
           IF GES-CIC-IOPC IN GES NOT > SPACES              
               GO TO FIN-BUS-REG-OPC.                       
           MOVE GES-CIC-IOPC IN GES TO OPC-CIC-IOPC IN OPC. 
           MOVE FIO-GET-KEY         TO FIO-CMND.            
           PERFORM COL-FIO-OPC.                             
                                                     
           IF NOT FIO-STAT-OKS                              
               GO TO FIN-BUS-REG-OPC.                       

                                                     
           MOVE OPC-CIC-IOPC IN OPC TO DLC-CIC-IOPC IN DLC. 
           MOVE 1                   TO DLC-NUM-IDLC IN DLC. 
           MOVE FIO-GET-KEY         TO FIO-CMND.            
           PERFORM COL-FIO-DLC.                             
                                                     
           IF (NOT FIO-STAT-OKS OR                          
               OPC-CIC-IOPC IN OPC NOT = DLC-CIC-IOPC IN DLC)  
               GO TO FIN-BUS-REG-OPC.                        
                   
           IF OPC-VAL-SCRE IN OPC > ZEROES        
               MOVE WSS-S TO GES-IND-SCRE IN GES
           ELSE                              
               MOVE WSS-N TO GES-IND-SCRE IN GES.
           MOVE DLC-FEC-FMAV IN DLC TO GES-FEC-FVCR IN GES.
           
       FIN-BUS-REG-OPC.                                     
           EXIT.     
      *MPB-FIN
      *>>>>
*% END

