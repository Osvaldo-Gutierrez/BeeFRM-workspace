*%! NO_TIENE_TIMESTAMP = TRUE
*%! Codigo adicional para archivo
*%! NO_HDR_CST = TRUE
*%!*************************************
*% VSNPQ = "06.06.29"
*% FNCPQ = "OWFBGL"
*% FMT_CHI = TRUE
*% GEN_BCI = TRUE
*% FRM = 'QHT'
*% IF NOT PGM_DB2 AND NOT PGM_CLB AND NOT PGM_MEX 
*%     INCLUDE 'BGLSRC:PFSALLF56.SRC'
*% END
*%! IF NOT PGM_MCP
*% PGM_PTC = TRUE
*%! END
*% PAD = 'GDG'
*% HIJ = 'GVT'
*%!  No limpie campos de registros luego de PF's
*% NREG = 1
*% REG1 = 'GDG'
*% IMAX = '9 '
*% ACUMULA = FALSE
*% NO_IBUS = TRUE
*% FIO_STA_OKS = TRUE
*% IF EOF AND PGM_DTC
      *<<<< EOF AND PGM_DTC
      *MHM-INI 23-OCT-2003
       COPY GNSBGCPT.
      *MHM-FIN 23-OCT-2003
       COPY GNSBGVSM.
       COPY GNSBHVSM.
      *>>>>
*% END
*% IF FIN_SCR_VARI
      *<<<< FIN_SCR_VARI
*%!  INICIALIZA VARIABLES GENERICAS SEGUN PARAMETROS DEL LLAMADO
           03 CMA-VARI.
              05  CMA-POS-ACT            COMP         PIC S9(04).
              05  CMA-INI.
                  07 GAR-KEY-IGDG-INI                 PIC X(12).
                  07 GAR-COD-TSN-INI                  PIC 9(03).
              05  CMA-FIN.
                  07 GAR-KEY-IGDG-FIN                 PIC X(12).
                  07 GAR-COD-TSN-FIN                  PIC 9(03).
              05  CMA-1VEZ                            PIC X(01).
*% IF PGM_VMS OR PGM_CLB OR PGM_MEX
              05  CMA-ACT.
                  07 GAR-KEY-IGDG-ACT                  PIC X(12).
                  07 GAR-COD-TSN-ACT                   PIC 9(03).
*% END
      *>>>>
      *>>>>
*% END
*% IF WSS
      *<<<< WSS
      *PTC-INI-MAN                                 
       COPY BGLWXQHT.                              
       01  WSS-IDD   VALUE SPACES      PIC X(12).  
      *PTC-FIN-MAN                                 
       COPY TABBRIVB.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-IVB-REQA==.
       COPY BGLBRGES.
       COPY BGLBRGSE.
       COPY BGLBRGTP.
       COPY BGLBRGVT.
       COPY BGLBRTAG.

      * Define 01  WSS-VARI de PGM1ANIDX
       01  WSS-VARI.
      *     03  WSS-IMAX               VALUE 9         PIC 9(02).
           03  WSS-IMAX               VALUE 10         PIC 9(02).
           03  WSS-IGVT.
               05 GAR-KEY-IGDG                       PIC X(12).
               05 GAR-COD-TSN                         PIC 9(03).
      * PARA USAR BGLSRC:ERRFNDKEY.SRC
           03  WSS-IBUS                               PIC 9(01).
           03  WSS-IBUS-GVT                           PIC 9(01).

           03 WSS-IGTP.
              05 GVT-KEY-IGVT                        PIC X(15).
              05 FILLER                              PIC 9(03).
      *MHM-INI 23-OCT-2003
           03 WSS-GLS-CGTA.
              05 WSS-GLS-TOPE                   PIC X(40).
              05 WSS-GLS-SOPE                   PIC X(40).
      *MHM-FIN 23-OCT-2003
      *>>>>
       COPY BGLWGEXV.

      *MHM-INI 23-OCT-2003
       COPY GNSWGCPT.
      *MHM-FIN 23-OCT-2003
      *>>>>
*% END
*% IF WSS_DTC
      *<<<< WSS_DTC
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-GES-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-GSE-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-GTP-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-GVT-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-TAG-REQA==.
      *>>>>
*% END
*% CMA_USR = TRUE
*% IF CMA AND PGM_MVS
           02 FILLER                    PIC X(350).
*% END
*% IF INI_FIO AND PGM_MVS
      *<<<< INI_FIO
           MOVE +350 TO SCR-TCMA.
           MOVE TSK-TERM-ALF TO WSS-COD-TERM IN WSS-TSQHT.
      *>>>>
*% END
*% IF INI_FIO AND PGM_VAX
      *<<<< INI_FIO

           MOVE FIO-ACCS-UPD TO FIO-ACCS.
           MOVE FIO-ACC      TO FIO-CMND.
           MOVE 'TAB'        TO FIO-SIST.
           PERFORM GNS-FIO-TAB.
           MOVE FIO-INP TO FIO-CMND.
           PERFORM GNS-FIO-TAB.

           MOVE FIO-ACCS-UPD TO FIO-ACCS.
           MOVE FIO-ACC      TO FIO-CMND.
           MOVE 'TAB'        TO FIO-SIST.
           PERFORM TAB-FIO-OFI.
           MOVE FIO-INP TO FIO-CMND.
           PERFORM TAB-FIO-OFI.

           MOVE FIO-ACCS-UPD TO FIO-ACCS.
           MOVE FIO-ACC      TO FIO-CMND.
           MOVE 'BGL'       TO FIO-SIST.
           PERFORM BGL-FIO-GES.
           MOVE FIO-INP TO FIO-CMND.
           PERFORM BGL-FIO-GES.

           MOVE FIO-ACCS-UPD TO FIO-ACCS.
           MOVE FIO-ACC      TO FIO-CMND.
           MOVE 'BGL'       TO FIO-SIST.
           PERFORM BGL-FIO-GSE.
           MOVE FIO-INP TO FIO-CMND.
           PERFORM BGL-FIO-GSE.

           MOVE FIO-ACCS-UPD TO FIO-ACCS.
           MOVE FIO-ACC      TO FIO-CMND.
           MOVE 'BGL'       TO FIO-SIST.
           PERFORM BGL-FIO-GTP.
           MOVE FIO-INP TO FIO-CMND.
           PERFORM BGL-FIO-GTP.

           MOVE FIO-ACCS-UPD TO FIO-ACCS.
           MOVE FIO-ACC      TO FIO-CMND.
           MOVE 'BGL'        TO FIO-SIST.
           PERFORM BGL-FIO-GVT.
           MOVE FIO-INP TO FIO-CMND.
           PERFORM BGL-FIO-GVT.

           MOVE FIO-ACCS-UPD TO FIO-ACCS.
           MOVE FIO-ACC      TO FIO-CMND.
           MOVE 'BGL'        TO FIO-SIST.
           PERFORM BGL-FIO-TAG.
           MOVE FIO-INP TO FIO-CMND.
           PERFORM BGL-FIO-TAG.


      *>>>> INI_FIO
*% END
*% IF INI_FND_KEY
      *<<<< INI_FND_KEY
      * CMA-POS-ACT CONTIENE LA POSICION ALCANZADA AL LLENAR LA PANTALLA
           MOVE ZEROES TO CMA-POS-ACT.

      * ASUME MENSAJE DEL SISTEMA DEL HIJO EN ERRFNDKEY.SRC
           MOVE 1 TO WSS-IBUS, WSS-IBUS-GVT.

           IF FRM-FFLD = FRM-FFLD-PF5
               MOVE PGM-SNUL TO PGM-STAT-GDG

*% IF PGM_DTC OR PGM_VSI OR (PGM_CLB AND PGM_MVS AND PGM_MEX)
               MOVE CMA-INI TO GVT-KEY-IGVT IN GVT
               MOVE 'N' TO CMA-1VEZ
               MOVE FIO-GET-LEQ TO FIO-CMND
               PERFORM BGL-FIO-GVT
               IF NOT FIO-STAT-OKS OR
                  GVT-CIC-GTIA IN GVT NOT = GAR-KEY-IGDG-FIN IN CMA-VARI
                   MOVE 'GVT    NEX' TO MSG-COD-MENS
                   GO TO ERR-FND-KEY
               ELSE
                   MOVE FIO-GET-PRV TO FIO-CMND
                   GO TO LEE-GVT
*% ELSE
               MOVE CMA-INI TO CMA-ACT
               SUBTRACT 1 FROM GAR-COD-TSN-ACT IN CMA-ACT
               MOVE CMA-ACT TO GVT-KEY-IGVT IN GVT
               MOVE FIO-GET-NLS TO FIO-CMND
               GO TO LEE-GVT
*% END
           ELSE
           IF FRM-FFLD = FRM-FFLD-PF6
               MOVE PGM-SNUL TO PGM-STAT-GDG
               MOVE 'N' TO CMA-1VEZ
               MOVE CMA-FIN TO GVT-KEY-IGVT IN GVT
               MOVE FIO-GET-NLS TO FIO-CMND
               PERFORM BGL-FIO-GVT
               IF NOT FIO-STAT-OKS OR
                  GVT-CIC-GTIA IN GVT NOT = GAR-KEY-IGDG-FIN IN CMA-VARI
                   MOVE 'GVT    NEX' TO MSG-COD-MENS
                   GO TO ERR-FND-KEY
               ELSE
                   MOVE FIO-GET-NXT TO FIO-CMND
                   GO TO LEE-GVT.

      * INICIALIZA LLAVES INICIAL Y FINAL DE PANTALLA
           MOVE SPACES TO CMA-INI, CMA-FIN.
           MOVE 'S' TO CMA-1VEZ.
*% IF PGM_VAX

           MOVE SPACES TO GDG.
           MOVE SPACES TO GVT.
           MOVE SPACES TO CMA-ACT.
*% END

           MOVE FRM-FFLD-PF6 TO FRM-FFLD.

       LEE-PAD-GDG.
      *>>>>
*% END
*% IF FIN_FND_KEY
      *<<<< FIN_FND_KEY

           IF NOT FIO-STAT-OKS
               MOVE 'GDG    NEX' TO MSG-COD-MENS
               GO TO ERR-FND-KEY.


           MOVE GDG-KEY-IGDG IN GDG TO GAR-KEY-IGDG-FIN IN CMA-VARI.
           MOVE GDG-KEY-IGDG IN GDG TO GAR-KEY-IGDG-INI IN CMA-VARI.
*% IF PGM_VAX
           MOVE GDG-KEY-IGDG IN GDG TO GAR-KEY-IGDG-ACT IN CMA-VARI.
                                        
*% END
           MOVE GDG-KEY-IGDG IN GDG TO GAR-KEY-IGDG IN WSS-VARI.
           MOVE ZEROES              TO GAR-COD-TSN IN WSS-IGVT.
           MOVE WSS-IGVT IN WSS-VARI TO GVT-KEY-IGVT IN GVT.
           MOVE FIO-GET-NLS TO FIO-CMND.
       LEE-GVT.
           PERFORM BGL-FIO-GVT.
           IF ( NOT FIO-STAT-OKS OR 
                GVT-CIC-GTIA IN GVT NOT = GAR-KEY-IGDG-FIN IN CMA-VARI )
                AND CMA-1VEZ = 'S'
               MOVE 'GVT    NEX' TO MSG-COD-MENS

               GO TO ERR-FND-KEY
           ELSE
           IF FRM-FFLD = FRM-FFLD-PF5 AND
              ( NOT FIO-STAT-OKS OR 
               GVT-CIC-GTIA IN GVT NOT = GAR-KEY-IGDG-FIN IN CMA-VARI ) 
               MOVE 'GVT    NOPRV' TO MSG-COD-MENS
               GO TO ERR-FND-KEY
           ELSE
           IF FRM-FFLD = FRM-FFLD-PF6 AND
              ( NOT FIO-STAT-OKS OR 
                GVT-CIC-GTIA IN GVT NOT = GAR-KEY-IGDG-FIN IN CMA-VARI )
               MOVE 'GVT    NONXT' TO MSG-COD-MENS
               GO TO ERR-FND-KEY.
       CARGA-GVT.

      *    INICIALIZA POSICION DEL INDICE DEL GRUPO DE OCURRENCIAS
           IF FRM-FFLD = FRM-FFLD-PF6
               MOVE ZEROES TO FRM-IFLD
*% IF NOT FMT_CHI
      *<<<< NOT FMT_CHI
               MOVE ZEROES TO FRM-IDX-IFLD
      *>>>>
*% END
           ELSE
               ADD 1 , WSS-IMAX GIVING FRM-IFLD.

           MOVE SPACES TO FRM-MENS.
           MOVE SPACES TO MSG-GLS-DESC.
           PERFORM PUT-TAB-GVT.

*% IF PGM_MCP
      *<<<< PGM_MCP
      *RRM-INI 27-SEP-2002
           IF SYS-IND-AMBI = SYS-IND-AMBI-PPMTX 
              MOVE SPACES TO FRM-FFLD 
              IF FRM-IDX-IFLD > WSS-IMAX-MTX
                 MOVE 'MTX   CONNXT' TO MSG-COD-MENS
                 GO TO ERR-FND-KEY
              ELSE
                 MOVE SPACES TO MSG-COD-MENS.
      *RRM-FIN 27-SEP-2002
      *>>>>
*% END

           IF CMA-POS-ACT = ZEROES AND FRM-FFLD = FRM-FFLD-PF5
               MOVE 'GVT    NOPRV' TO MSG-COD-MENS
               GO TO ERR-FND-KEY
           ELSE
           IF CMA-POS-ACT = ZEROES AND FRM-FFLD = FRM-FFLD-PF6
               MOVE 'GVT    NONXT' TO MSG-COD-MENS
               GO TO ERR-FND-KEY.

           IF FRM-FFLD = FRM-FFLD-PF6
               ADD 1 TO FRM-IFLD
               PERFORM LIM-RES-LIN UNTIL FRM-IFLD > WSS-IMAX.
*%!CAH-FIN  31-MAR-1997   (IGUALAR CODIGO UNISYS)

           IF MSG-COD-MENS > SPACES
               MOVE 'BGL' TO FIO-SIST
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS.

           MOVE '00' TO FIO-STAT.
           GO TO FIN-FND-KEY.
       ERR-FND-KEY.
               MOVE 'BGL' TO MSG-COD-SIST.
           PERFORM GET-MSG.
           MOVE MSG-GLS-DESC TO FRM-MENS.
           MOVE SCR-STAT-CON TO SCR-STAT.
           MOVE '00' TO FIO-STAT.
           GO TO FIN-FND-KEY.
      *>>>>
      *>>>>
*% END
*% IF PFS_SCR_ACC
      *<<<< PFS_SCR_ACC
           IF FRM-FFLD = FRM-FFLD-PF6
                    OR   FRM-FFLD-PF5
               PERFORM VAL-NUM-KEY-QHT
               PERFORM VAL-NUM-FLD-QHT
               PERFORM RST-STAT
               PERFORM FND-SCR-KEY THRU FIN-SCR-KEY
               IF SCR-STAT NOT = SCR-STAT-ABT
                   PERFORM SCR-TRL
               ELSE
                   PERFORM DESSCRTRL
                   GO TO FIN-SCR-ACC.
      *>>>>
*% END
*% IF PFS_SCR_GFLD                                            
      *<<<< PFS_SCR_GFLD                                            
           IF NOT ( ( SCR-CCPP = 'MOD' OR SCR-CCPP = 'ACC' OR            
                SCR-CCPP = 'ELI' OR                                           
              ( SCR-CCPP = 'ACT' AND SCR-ACTU = SCR-ACTU-MOD ) )            
              AND ( FRM-FFLD = FRM-FFLD-PF6                                 
                   OR FRM-FFLD-PF5) )                      
      *>>>>                                       
*% END                  
*% IF PFS_GET_CON OR PFS_GET_ACC                              
      *<<<< PFS_GET_CON OR PFS_GET_ACC                              
           IF NOT ( FRM-FFLD = FRM-FFLD-PF6                              
               OR FRM-FFLD-PF5)                      
      *>>>>                                                         
*% END
*% IF EOF
      *<<<< EOF
      *MHM-INI 1-AUG-2003
      * RST-STAT SECTION.                                             
      * INI-RST-STAT.                                                 
      *     MOVE SCR-STPP TO SCR-STAT.                                    
      *     MOVE SCR-MFLD-NOT TO SCR-MFLD.                                
      * FIN-RST-STAT.                                                 
      *     EXIT.                                                         
      *MHM-FIN 1-AUG-2003
      *>>>>                                                         


      *<<<< EOF                                                     
       PUT-TAB-GVT SECTION.
       INI-PUT-TAB-GVT.
      *PTC-INI-MAN                                             
      * NO ES NECESARIO YA QUE ESTA INCIALIZADO EN WSS         
      * SI VA ESTA INSTRUCCION SE DEBE HACER GO TO A LUP Y NO A
      *    MOVE ZEROES TO WSS-IDX-QHT.                         
       LUP-PUT-TAB-GVT.                                        
      *PTC-FIN-MAN                                             

           ADD 1 TO CMA-POS-ACT.
           IF FRM-FFLD = FRM-FFLD-PF6
               GO TO PUT-PF6.

           SUBTRACT 1 FROM FRM-IFLD.
           IF FRM-IFLD = 1
               MOVE GVT-COD-TASN IN GVT TO 
                    GAR-COD-TSN-INI IN CMA-INI
           ELSE
               IF FRM-IFLD = WSS-IMAX
                   MOVE GVT-COD-TASN IN GVT TO 
                        GAR-COD-TSN-FIN IN CMA-FIN.
           GO TO MOV-FLD.

       PUT-PF6.

*% IF PGM_MCP
      *<<<< PGM_MCP
      *RRM-INI 30-SEP-2002
           IF SCR-OFRM-SRV
               MOVE 1 TO FRM-IFLD
           ELSE
               ADD 1 TO FRM-IFLD.
           ADD 1 TO FRM-IDX-IFLD

           IF FRM-IDX-IFLD > WSS-IMAX-MTX
               GO TO FIN-PUT-TAB-GVT.
      *RRM-INI 30-SEP-2002
      *>>>>
*% ELSE
           ADD 1 TO FRM-IFLD.
*% END

           IF FRM-IFLD = 1
               MOVE GVT-COD-TASN IN GVT TO 
                    GAR-COD-TSN-INI IN CMA-INI
               MOVE GVT-COD-TASN IN GVT TO 
                    GAR-COD-TSN-FIN IN CMA-FIN
           ELSE
           IF FRM-IFLD NOT > WSS-IMAX
               MOVE GVT-COD-TASN IN GVT TO 
                    GAR-COD-TSN-FIN IN CMA-FIN.
       MOV-FLD.


           MOVE GVT-CIC-GTIA IN GVT TO GTP-CIC-GTIA IN GTP.
           MOVE GVT-COD-TASN IN GVT TO GTP-NUM-ITSN IN GTP.
           MOVE ZEROES              TO GTP-COD-ITSN IN GTP.
           MOVE 'GTP-KEY-IGTP' TO FIO-AKEY.
           MOVE FIO-GET-NLS TO FIO-CMND.
           PERFORM BGL-FIO-GTP.
           MOVE GTP-KEY-IGTP IN GTP TO WSS-IGTP IN WSS-VARI.
      *PTC-INI-MAN                 
           IF SCR-OFRM-SRV         
              MOVE 1 TO FRM-IFLD.  
      *PTC-FIN-MAN                 
           IF FIO-STAT-OKS AND 
              GVT-KEY-IGVT IN WSS-IGTP = GVT-KEY-IGVT IN GVT
      *         MOVE 'TP' TO FRM-IND-GTP IN QHT-FLD(FRM-IFLD)
               MOVE 'BGL'    TO TAB-COD-SIST
               MOVE 'SIN '   TO TAB-COD-TTAB IN TAB
               MOVE 'S'      TO TAB-COD-CTAB IN TAB
               PERFORM BUS-TAB
               IF MSG-COD-MENS = SPACES
                   MOVE TAB-GLS-ABRV IN TAB TO 
                                      FRM-IND-GTP IN QHT-FLD(FRM-IFLD)
               ELSE
                   MOVE SPACES TO FRM-IND-GTP IN QHT-FLD(FRM-IFLD)
           ELSE
      *         MOVE '  ' TO FRM-IND-GTP IN QHT-FLD(FRM-IFLD).
               MOVE 'BGL'    TO TAB-COD-SIST
               MOVE 'SIN '   TO TAB-COD-TTAB IN TAB
               MOVE 'N'      TO TAB-COD-CTAB IN TAB
               PERFORM BUS-TAB
               IF MSG-COD-MENS = SPACES
                   MOVE TAB-GLS-ABRV IN TAB TO 
                                     FRM-IND-GTP IN QHT-FLD(FRM-IFLD)
               ELSE
                   MOVE SPACES TO FRM-IND-GTP IN QHT-FLD(FRM-IFLD).

           MOVE GVT-COD-TASN IN GVT TO
                    FRM-COD-TASN IN QHT-FLD(FRM-IFLD).

           MOVE GVT-SGV-VCTS IN GVT TO
                    FRM-SGV-VCTS IN QHT-FLD(FRM-IFLD).

           MOVE GVT-SGV-VPND IN GVT TO                
                    FRM-SGV-VPND IN QHT-FLD(FRM-IFLD).

           MOVE GVT-NUM-STSN  IN GVT TO
                    FRM-NUM-STSN  IN QHT-FLD(FRM-IFLD).
           MOVE GVT-NUM-ATSN  IN GVT TO
                    FRM-NUM-ATSN  IN QHT-FLD(FRM-IFLD).
           MOVE GVT-NUM-MTSN  IN GVT TO
                    FRM-NUM-MTSN  IN QHT-FLD(FRM-IFLD).
           MOVE GVT-NUM-DTSN  IN GVT TO
                    FRM-NUM-DTSN  IN QHT-FLD(FRM-IFLD).

*% IF GEN_BCI
      *<<<< GEN_BCI
      *BUS-TAB busca glosa de codigo en tabla
           IF GVT-COD-ITSD IN GVT > SPACES
               MOVE 'TAB' TO TAB-COD-SIST
               MOVE 'TAS' TO TAB-COD-TTAB IN TAB
               MOVE GVT-COD-EITS IN GVT TO TAB-COD-CTAB IN TAB
               PERFORM BUS-TAB
               MOVE TAB-GLS-DCOR IN TAB TO
                    FRM-GLS-ITSD IN QHT-FLD(FRM-IFLD)
           ELSE
               MOVE SPACES TO FRM-GLS-ITSD IN QHT-FLD(FRM-IFLD).
      *>>>>
*% ELSE
      *BUS-TAB busca glosa de codigo en tabla
           IF GVT-COD-ITSD IN GVT > SPACES
              MOVE 'TAS'               TO IVB-EXT-TTAB IN IVB
              MOVE GVT-COD-EITS IN GVT TO IVB-EXT-CTAB IN IVB
              MOVE 'IVB-KY2-TABS'      TO FIO-AKEY           
              MOVE FIO-GET-KEY         TO FIO-CMND           
              PERFORM TAB-FIO-IVB                            
              MOVE IVB-GLS-DESC IN IVB TO FRM-GLS-ITSD IN    
                                          QHT-FLD(FRM-IFLD)  
           ELSE
              MOVE SPACES TO FRM-GLS-ITSD IN QHT-FLD(FRM-IFLD).
*% END

       DSPL-O-ACUM.
           IF CMA-1VEZ NOT = 'S'
               GO TO NXT-PUT-TAB-GVT.

       NXT-PUT-TAB-GVT.

*% IF PGM_MCP
      *<<<< PGM_MCP
      *RRM-INI 27-SEP-2002
           IF SYS-IND-AMBI = SYS-IND-AMBI-PPMTX
                PERFORM PUT-MTX-IDX-QHT
                MOVE FIO-GET-NXT TO FIO-CMND
                GO TO NXT-PUT-TAB-GVT-MTX.
      *RRM-FIN 27-SEP-2002
      *>>>>
*% END

           IF FRM-FFLD = FRM-FFLD-PF5 
               IF FRM-IFLD > 1
*% IF PGM_VAX AND NOT UNI_HIJ_ALF
                   SUBTRACT 1 FROM GAR-COD-TSN-ACT
                   MOVE CMA-ACT TO GVT-KEY-IGVT IN GVT
                   MOVE FIO-GET-KEY TO FIO-CMND
*% ELSE
                   MOVE FIO-GET-PRV TO FIO-CMND
*% END
               ELSE
                   GO TO FIN-PUT-TAB-GVT
           ELSE
               IF FRM-IFLD < WSS-IMAX
                   MOVE FIO-GET-NXT TO FIO-CMND
               ELSE
                   GO TO FIN-PUT-TAB-GVT.
      *PTC-INI-MAN                                             
           IF SCR-OFRM-SRV                                     
              ADD 1 TO WSS-IDX-QHT                             
              MOVE FRM-COD-TASN IN QHT-FLD(1) TO                
                   WSS-COD-TSN IN WSS-TAB-QHT(WSS-IDX-QHT)     
              MOVE FRM-IND-GTP IN QHT-FLD(1) TO                
                   WSS-IND-GTP IN WSS-TAB-QHT(WSS-IDX-QHT)     
              MOVE FRM-SGV-VCTS IN QHT-FLD(1) TO            
                   WSS-VAL-CML-TSN-RED IN WSS-TAB-QHT(WSS-IDX-QHT)
              MOVE FRM-SGV-VPND IN QHT-FLD(1) TO               
                  WSS-VAL-PON-RED IN WSS-TAB-QHT(WSS-IDX-QHT)
              MOVE FRM-FEC-FTSN IN QHT-FLD(1) TO                
                   WSS-FEC-TSN IN WSS-TAB-QHT(WSS-IDX-QHT)     
              MOVE FRM-GLS-ITSD IN QHT-FLD(1) TO            
                   WSS-GLS-IIV-TSD IN WSS-TAB-QHT(WSS-IDX-QHT) 
              MOVE FRM-COD-TASN IN QHT-FLD(1) TO WSS-IDD.       
      *PTC-FIN-MAN                                             

*% IF PGM_MCP
      *<<<< PGM_MCP
      *RRM-INI 27-SEP-2002
       NXT-PUT-TAB-GVT-MTX.
      *RRM-FIN 27-SEP-2002
      *>>>>
*% END

           PERFORM BGL-FIO-GVT.
           MOVE GVT-KEY-IGVT IN GVT TO WSS-IGVT IN WSS-VARI.
           IF FIO-STAT-OKS AND
              GAR-KEY-IGDG-FIN IN CMA-VARI = GAR-KEY-IGDG IN WSS-VARI
              GO TO INI-PUT-TAB-GVT.
      *PTC-INI-MAN                     
           IF SCR-OFRM-SRV             
              PERFORM PUT-TAB-QHT.     
       FIN-PUT-TAB-GVT-PTC.            
      *PTC-FIN-MAN                     

       FIN-PUT-TAB-GVT.
           EXIT.
       LIM-RES-LIN SECTION.
       INI-LIM-RES-LIN.

           MOVE SPACES TO FRM-IND-GTP  IN QHT-FLD(FRM-IFLD),  
                          FRM-GLS-ITSD IN QHT-FLD(FRM-IFLD).

           MOVE ZEROES TO FRM-COD-TASN IN QHT-FLD(FRM-IFLD), 
                          FRM-SGV-VCTS IN QHT-FLD(FRM-IFLD), 
                          FRM-SGV-VPND IN QHT-FLD(FRM-IFLD),           
                          FRM-NUM-STSN IN QHT-FLD(FRM-IFLD), 
                          FRM-NUM-ATSN IN QHT-FLD(FRM-IFLD), 
                          FRM-NUM-MTSN IN QHT-FLD(FRM-IFLD), 
                          FRM-NUM-DTSN IN QHT-FLD(FRM-IFLD). 
           ADD 1 TO FRM-IFLD.
       FIN-LIM-RES-LIN.
           EXIT.

       COPY BGLBFGES.
       COPY BGLBFGSE.
       COPY BGLBFGTP.
       COPY BGLBFGVT.
       COPY BGLBFTAG.
       COPY TABBFIVB.
       COPY GNSBPFEC.

      *PTC-INI-MAN                                
       PUT-TAB-QHT SECTION.                       
       INI-PUT-TAB-QHT.                           
           MOVE WSS-NOM-TSQHT  TO QUE-COLA.       
           MOVE QUE-DEL        TO QUE-CMND.       
           PERFORM GNS-PRO-QUE.                   
                                                  
           MOVE WSS-NOM-TSQHT  TO QUE-COLA.       
           MOVE WSS-LEN-TSQHT  TO QUE-LITM.       
           MOVE WSS-TAB-QHT    TO QUE-ITEM.       
           MOVE QUE-PUT        TO QUE-CMND.       
           PERFORM GNS-PRO-QUE.                   
       FIN-PUT-TAB-QHT.                           
           EXIT.                                  
      *PTC-FIN-MAN                                
      *>>>>
*% END
