*%! NO_TIENE_TIMESTAMP = TRUE
*% FRM = 'GIM'
*% FMT_CHI = TRUE
*% IF NOT PGM_CLB AND NOT PGM_MEX AND PGM_PQ
*%     ! Codigo adicional para Funcion BGLPPVCG = PF5 desde BGLPAGIM
*%      INCLUDE 'BGLSRC:PFALL5.SRC'
*%     ! Codigo adicional programa BGLPAGIM
*% END
*%! IF NOT PGM_MCP
*% PGM_PTC = TRUE
*%! END
*% VSNPQ = "06.06.29"
*% FNCPQ = "OWFBGL"
*% VSNPU = "06.06.29"
*% FNCPU = "OWFBGL"
*% IF FIN_SCR_VARI
      *<<<< FIN_SCR_VARI
           03 CMA-VARI.
              05 GAR-CAI-GTIA                 PIC X(04).
              05 GAR-IIC-GTIA                 PIC X(08).
      *MHM-INI 29-OCT-2003
              05 CMA-CIC-UING                 PIC X(12).
      *MHM-FIN 29-OCT-2003
      *>>>>
*% END
*% IF WSS
      *<<<< WSS

      *********************************************
      *           MODULO   USPC113                *
      *********************************************
      *       DEFINICION IDENTIFICACION TS        *
      *********************************************

       01  UIB.
           02  FILLER                  PIC X(32) VALUE 'USPR002'.
       01  USP-LARGO-TS                PIC S9(4) COMP VALUE +150.
       01  USP-IDENTIFICACION.
           05  USP-TERMINAL            PIC X(04).
           05  USP-OPID-USU            PIC X(03).
           05  FILLER                  PIC X(01)  VALUE ' '.
       01  USP-LLENA-VECTOR            PIC X(1)   VALUE ' '.
       01  USP-USA-VECTOR              PIC X(1)   VALUE ' '.

      *********************************************
      *       DEFINICION AREA DE TRASPASO         *
      *********************************************

       01  AREA-TRASPASO.
           05  USP-PERMISO             PIC X(01).
           05  USP-PTA-NUM             PIC 9(03)  VALUE 0.
           05  USP-PTA-STR             PIC X(12)  VALUE SPACES.
           05  USP-AREA-COMUN.
               10  USP-TIPO-USUARIO.
                   15  USP-IDENT-TU    PIC X(03).
      *                TIPO DE USUARIO

                   15  USP-MODO-OP     PIC X(01).
      *                MODO OPERACION (CONSULTA/ACTUALIZACION)

               10  USP-SISTEMA.
                   15  USP-IDENT-SIS   PIC X(03).
      *                IDENTIFICACION DEL SISTEMA QUE SE ESTA PROCE_
      *                SANDO SEGUN USUARIOS Y PRIVILEGIOS

                   15  USP-GRUPO       PIC X(03).
      *                IDENTIFICACION DEL GRUPO DE SISTEMA QUE SE ESTA
      *                PROCESANDO SEGUN USUARIOS Y PRIVILEGIOS
      *

               10  USP-INDIC-PROCESO   PIC X(01).
      *            INDICADOR DE SISTEMA USUARIO Y PRIVILEGIO  ACTIVO

               10  USP-COD-OFICINA     PIC X(03).
      *            CODIGO DE LA OFICINA DEL USUARIO

               10  USP-COD-DEPTO       PIC X(03).
      *            CODIGO DEL DEPTO DEL USUARIO

               10  USP-COD-USUARIO     PIC X(12).
      *            CODIGO USUARIO (TABLA USR)

               10  USP-COD-TERMINAL    PIC X(04).
      *            CODIGO DE TERMINAL

               10  USP-OPID            PIC X(03).
      *            OPID DE USUARIO

               10  USP-FECHA.
      *            FECHA
                   15  USP-ANO         PIC X(02).
                   15  USP-MES         PIC X(02).
                   15  USP-DIA         PIC X(02).

               10  USP-HORA            PIC X(06).
      *            HORA

               10  USP-PASSWORD        PIC X(08).
      *            PASSWORD DE USUARIO(SOLO PARA CONECCION VIA RUTINA)

               10  USP-INDICADORES.
                   15  USP-USU-CMN1    PIC X(01).
      *            1   */CON       CONSULTA
      *            2   */MAN       CONSULTA Y MANTENCION
      *            3   */*         TODO
      *
                   15  USP-USU-CMN2    PIC X(01).
      *            P   *           PERMISO AL MENU
      *
                   15  USP-USU-CMN3    PIC X(01).
      *            P   */OFI       OTRAS OFICINAS
      *
                   15  USP-USU-CMN4    PIC X(01).
                   15  USP-USU-CMN5    PIC X(01).
                   15  USP-USU-CMN6    PIC X(01).
                   15  USP-USU-CMN7    PIC X(01).
                   15  USP-USU-CMN8    PIC X(01).
                   15  USP-USU-CMN9    PIC X(01).
                   15  USP-USU-CMN10   PIC X(01).
                   15  USP-USU-CMN11   PIC X(01).
                   15  USP-USU-CMN12   PIC X(01).
                   15  USP-USU-CMN13   PIC X(01).
                   15  USP-USU-CMN14   PIC X(01).
                   15  USP-USU-CMN15   PIC X(01).
                   15  USP-USU-CMN16   PIC X(01).
               10  USP-INDICADORES-RED REDEFINES USP-INDICADORES.
                   15  USP-USU-CMN-ARR OCCURS 16 TIMES   PIC X(01).
      *
      *            INDICADORES QUE  INDICAN PRIVILEGIO DE USUARIOS
      *
               10  FILLER              PIC X(78).
      *            DISPONIBLE USO FUTURO
      *
      *********************************************
      *     AREAS PARA LECTURA DE TABLA "STR"     *
      *********************************************
      *
      *01  COPYDD USP-R-STR.USP-E-STR01(PROD).
       01  USP-E-STR01.
           02  USP-CLV-STR-1.
               03  USP-COD-GST     PICTURE X(3).
               03  USP-COD-STR     PICTURE X(12).
           02  USP-COD-PTA         PICTURE X(3).
      *
       01  REQ-AREA.
               05  COD-CMND            PIC X(005).
               05  NOM-TABL            PIC X(003).
               05  NOM-CLAV            PIC X(005).
               05  RET-CODI            PIC X(002).
               05  RET-INTE            PIC X(001).
               05  NUM-BASE            PIC S9(004) COMP VALUE +120.
               05  NOM-REGI            PIC X(007).
               05  FILLER              PIC X(025).
               05  MAX-CONT            PIC S9(004) COMP.
               05  NOM-CONT            PIC S9(004) COMP.
               05  FILLER              PIC X(022).
               05  VAL-CLAV.
                   10  FECHA           PIC 9(008).
                   10  HORA            PIC 9(006).
      *
       01  ELEM-LIST.
               05  NOM-ELEM            PIC X(011).
               05  SEC-CODI            PIC X(001).
               05  FILLER              PIC X(005) VALUE SPACES.
      *
       01  REQ-AREA-STR.
               05  COD-CMND-STR        PIC X(005).
               05  NOM-TABL-STR        PIC X(003).
               05  NOM-CLAV-STR        PIC X(005).
               05  RET-CODI-STR        PIC X(002).
               05  RET-INTE-STR        PIC X(001).
               05  NUM-BASE-STR        PIC S9(004) COMP VALUE +120.
               05  NOM-REGI-STR        PIC X(007).
               05  FILLER              PIC X(025).
               05  MAX-CONT-STR        PIC S9(004) COMP.
               05  NOM-CONT-STR        PIC S9(004) COMP.
               05  FILLER              PIC X(022).
               05  VAL-CLAV-STR.
                   10  USP-COD-GST     PIC X(003).
                   10  USP-COD-STR     PIC X(012).
      *
       01  ELEM-LIST-STR.
               05  NOM-ELEM-STR        PIC X(011).
               05  SEC-CODI-STR        PIC X(001).
               05  FILLER              PIC X(005) VALUE SPACES.
      *
      *********************************************
      *           FIN   MODULO   USPC113          *
      *********************************************

       COPY BGLBRGDG.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-GDG-REQA==.
       COPY BGLBRGDD.                                                   
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-GDD-REQA==.        
       COPY SGCBRDBC.                                                   
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-DBC-REQA==.        
       COPY BGLBRGVT.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-GVT-REQA==. 
       COPY BGLBRTAG.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-TAG-REQA==. 
       01 WSS-VARI.
          03 WSS-COD-CGTA.
             05 WSS-COD-TOPE    PIC X(03).
             05 WSS-COD-SOPE    PIC X(03).
          03 WSS-IND-OBL1       PIC X(01).
          03 WSS-IND-OBL2       PIC X(01).
      *afri-ini/jul2004                                                 
          03 WSS-GLS-TGAR.                                              
             05 WSS-VEC-TGAR  OCCURS 10 TIMES.                          
                07 WSS-IND-TGAR    PIC X(06).                           
      *AFRI-FIN/JUL2004                                                 
      *MHM-INI 23-OCT-2003
           03 WSS-GLS-CGTA.
              05 WSS-GLS-TOPE                   PIC X(40).
              05 WSS-GLS-SOPE                   PIC X(40).
      *MHM-FIN 23-OCT-2003

      *MHM-INI 23-OCT-2003
       COPY GNSWGCPT.
      *MHM-FIN 23-OCT-2003
      *>>>>
*% END
*% IF PGM_ARG
*% LARGO_MI_COMMAREA = 15
*% ELSE
*% LARGO_MI_COMMAREA = 24
*% END
*% IF EOF
      *<<<< EOF
       COPY BGLBFGVT.
       COPY BGLBFGDD.                                                   
       COPY SGCBFDBC.                                                   
       COPY BGLBFGDG.
       COPY BGLBFTAG.
       COPY GNSBGVSM.
      *MHM-INI 23-OCT-2003
       COPY GNSBGCPT.
      *MHM-FIN 23-OCT-2003
      *>>>>
*% END
*% IF INI_FND_KEY
      *<<<< INI_FND_KEY
           MOVE '0' TO GIM-COD-DEST IN GIM-FLD.                         
           IF SCR-CMND NOT = 'ING'                                      
              MOVE GIM-CAI-GTIA IN GIM-FLD TO GVT-CAI-GTIA IN GVT       
              MOVE GIM-IIC-GTIA IN GIM-FLD TO GVT-IIC-GTIA IN GVT       
              MOVE 999                     TO GVT-COD-TASN IN GVT       
              MOVE FIO-GET-LEQ TO FIO-CMND                              
              PERFORM BGL-FIO-GVT                                       
              IF FIO-STAT-OKS AND                                       
                  GIM-CAI-GTIA IN GIM-FLD = GVT-CAI-GTIA IN GVT AND     
                  GIM-IIC-GTIA IN GIM-FLD = GVT-IIC-GTIA IN GVT         
                  MOVE FIO-STAT TO PGM-STAT-GVT                         
                  MOVE GVT-SGV-FISI IN GVT TO                           
                    GVT-SGV-FISI IN GIM-FLD                             
              ELSE                                                      
                  MOVE ZEROES TO GVT-SGV-FISI IN GIM-FLD.               
       BUS-GDG.
           MOVE GIM-CAI-GTIA IN GIM-FLD TO GDG-CAI-GTIA IN GDG.
           MOVE GIM-IIC-GTIA IN GIM-FLD TO GDG-IIC-GTIA IN GDG.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM BGL-FIO-GDG.
           MOVE FIO-STAT TO PGM-STAT-GDG.
           IF NOT FIO-STAT-OKS
               MOVE 'GDG    NEX' TO MSG-COD-MENS
               GO TO ERR-FND-KEY.
           IF SCR-CCPP = 'ACC' AND SCR-STAT = SCR-STAT-CON              
              GO TO FIN-VAL-OFI-USP-GIM.                                
                                                                        
           IF SCR-OFRM-SRV                                              
              GO TO FIN-VAL-OFI-USP-GIM.                                
           MOVE 'TAB'     TO FIO-SIST.                                  
           MOVE 'VSN'     TO TAB-COD-TTAB IN TAB.                       
           MOVE 'OFIUSP'  TO TAB-COD-CTAB IN TAB.                       
           MOVE FIO-GET-KEY TO FIO-CMND.                                
           PERFORM GNS-FIO-TAB.                                         
           IF NOT (FIO-STAT-OKS AND TAB-MSC-STAT IN TAB = 'S')          
              GO TO FIN-VAL-OFI-USP-GIM.                                
                                                                        

      **********************************
      *            MODULO  USPC143     *
      **********************************
       USP-CHEQUEO-TS.
           EXEC CICS HANDLE CONDITION
                              QIDERR(USP-IR-MENU-GENERAL)
           END-EXEC.
           EXEC CICS ASSIGN OPID(USP-OPID-USU)
           END-EXEC.
           MOVE EIBTRMID   TO USP-TERMINAL.
           EXEC CICS READQ TS QUEUE(USP-IDENTIFICACION)
                              INTO(USP-AREA-COMUN)
                              LENGTH(USP-LARGO-TS)
                              ITEM(+1)
           END-EXEC.
           GO TO USP-INICIO-PROGRAMA.
       USP-IR-MENU-GENERAL.
           EXEC CICS XCTL PROGRAM('USDP930')
           END-EXEC.
       USP-INICIO-PROGRAMA.
      ***************************************
      *            FIN  MODULO  USPC143     *
      ***************************************
      *
           MOVE 'BGLGTUCG/CEN' TO USP-PTA-STR.                          
      ****************************************
      *             MODULO  USPC103          *
      ****************************************
           IF USP-PTA-STR = '*/*         ' THEN
            IF USP-USU-CMN-ARR(1) = '3' THEN
               MOVE 'P' TO USP-PERMISO
            ELSE
               MOVE 'N' TO USP-PERMISO
           ELSE
            IF USP-PTA-STR = '*/MAN       ' THEN
             IF USP-USU-CMN-ARR(1) NOT < '2' THEN
               MOVE 'P' TO USP-PERMISO
             ELSE
               MOVE 'N' TO USP-PERMISO
            ELSE
             IF USP-PTA-STR = '*/CON       ' THEN
              IF USP-USU-CMN-ARR(1) NOT < '1' THEN
                 MOVE 'P' TO USP-PERMISO
              ELSE
                 MOVE 'N' TO USP-PERMISO
             ELSE
              IF USP-PTA-STR = '*           ' THEN
                 MOVE USP-USU-CMN-ARR(2) TO USP-PERMISO
              ELSE
               IF USP-PTA-STR = '*/OFI       ' THEN
                 MOVE USP-USU-CMN-ARR(3) TO USP-PERMISO
               ELSE
                 MOVE 'S' TO USP-USA-VECTOR.
           IF USP-LLENA-VECTOR = 'S' OR USP-USA-VECTOR = 'S' THEN
            IF  USP-PTA-NUM = ZEROS
            THEN MOVE  USP-PTA-STR   TO   USP-COD-STR IN USP-E-STR01
             MOVE  USP-PTA-STR   TO   USP-COD-STR IN REQ-AREA-STR
             MOVE  USP-GRUPO     TO   USP-COD-GST IN USP-E-STR01
             MOVE  USP-GRUPO     TO   USP-COD-GST IN REQ-AREA-STR
             MOVE  'REDKY'       TO   COD-CMND-STR
             MOVE  'STR01'       TO   NOM-CLAV-STR  NOM-ELEM-STR
             MOVE  'STR'         TO   NOM-TABL-STR
             CALL 'DBNTRY' USING UIB REQ-AREA-STR USP-E-STR01
                                ELEM-LIST-STR
             IF RET-CODI-STR NOT = SPACES
                   MOVE  ' ' TO   USP-PERMISO
             ELSE
                   MOVE USP-COD-PTA IN USP-E-STR01 TO   USP-PTA-NUM
                   EXEC CICS LINK PROGRAM ('USDR100')
                                COMMAREA (AREA-TRASPASO)
                                LENGTH (166)
                   END-EXEC
            ELSE
                   EXEC CICS LINK PROGRAM ('USDR100')
                                  COMMAREA (AREA-TRASPASO)
                                  LENGTH (166)
                   END-EXEC.
           MOVE  ZEROS  TO  USP-PTA-NUM.
           MOVE  SPACES TO  USP-PTA-STR.
           MOVE  SPACES TO  USP-USA-VECTOR.
      *
      *
      ****************************************
      *          FIN   MODULO  USPC103       *
           IF USP-PERMISO = 'P'                                         
              GO TO FIN-VAL-OFI-USP-GIM.                                
                                                                        
           IF USP-COD-OFICINA NOT = GDG-COD-OFIC IN GDG                 
              MOVE 'USRNODEOFI' TO MSG-COD-MENS                         
              GO TO ERR-FND-KEY.                                        
                                                                        
       FIN-VAL-OFI-USP-GIM.                                             
                                                                        
       FIN-BUS-GDG.
*% IF FMT_CHI
      *<<<< FMT_CHI
           MOVE GDG-TIP-CGTA IN GDG TO GDG-TIP-CGTA IN GIM-FLD.
           MOVE GDG-STP-CGTA IN GDG TO GDG-STP-CGTA IN GIM-FLD.
      *>>>>
*% ELSE
           MOVE GDG-COD-CGTA IN GDG TO GDG-COD-CGTA IN GIM-FLD.
*% END

      * Lee TAG
*% IF FMT_CHI
      *<<<< FMT_CHI
           MOVE GDG-TIP-CGTA IN GIM-FLD TO TAG-TIP-AGTA IN TAG.
           MOVE GDG-STP-CGTA IN GIM-FLD TO TAG-STP-AGTA IN TAG.
      *>>>>
*% ELSE
           MOVE GDG-COD-CGTA IN GIM-FLD TO TAG-COD-AGTA IN TAG.
*% END
           MOVE FIO-GET-KEY    TO FIO-CMND.
           PERFORM BGL-FIO-TAG.
           IF NOT FIO-STAT-OKS
                MOVE 'TAG    NEX' TO MSG-COD-MENS
                MOVE 'BGL' TO MSG-COD-SIST
                PERFORM GET-MSG
           ELSE
                MOVE SPACES TO MSG-COD-MENS
                MOVE 'BGL' TO TAB-COD-SIST
                MOVE 'RAL' TO TAB-COD-TTAB IN TAB
                MOVE TAG-IND-TREA IN TAG TO TAB-COD-CTAB IN TAB
                PERFORM BUS-TAB
                IF MSG-COD-MENS = SPACES
                    MOVE TAB-GLS-DESC IN TAB TO 
                         FRM-GLS-TREA IN GIM-FLD
                ELSE
                    MOVE SPACES TO FRM-GLS-TREA IN GIM-FLD.

           MOVE GDG-CAI-GTIA IN GDG TO GAR-CAI-GTIA IN CMA-VARI.
           MOVE GDG-IIC-GTIA IN GDG TO GAR-IIC-GTIA IN CMA-VARI.

           IF SCR-CMND = 'ING'
               PERFORM PUT-GDG-GIM.

      * Valida Este permitido esta Entidad para Tipo-Subtipo
           IF TAG-IND-EGIM IN TAG = 'N'
               MOVE 'TAG    NOPGM' TO MSG-COD-MENS
               GO TO ERR-FND-KEY.

      *>>>>
*% END
*% IF FIN_FND_KEY
      *<<<< FIN_FND_KEY
      * Comando Consulta Error lo trata el GENESIS
           IF SCR-CCPP = 'ACC' AND 
              SCR-STPP = SCR-STAT-CON
              GO TO FIN-FND-KEY.

      * Garantia Alzada
           IF GDG-IND-EST1 IN GDG > '19'
               MOVE 'GDGALZ' TO MSG-COD-MENS
               GO TO ERR-FND-KEY.

      * Garantia Completa
           IF SCR-CCPP = 'ELI' AND
              GDG-IND-GTAC IN GDG = 'S'
               MOVE 'GAR    CPL' TO MSG-COD-MENS
               GO TO ERR-FND-KEY.

           GO TO FIN-FND-KEY.
       ERR-FND-KEY.
           MOVE 'BGL' TO MSG-COD-SIST.
           PERFORM GET-MSG.
           MOVE MSG-GLS-DESC TO FRM-MENS.
           MOVE SCR-STAT-ABT TO SCR-STAT.
           IF SCR-CCPP = 'ING'
               MOVE '00' TO FIO-STAT
           ELSE
               MOVE FIO-STAT-NEX TO FIO-STAT.

      *>>>>
*% END
*% IF INI_CMN_ING
      *<<<< INI_CMN_ING
           MOVE SPACES TO GIM-GLS-FLAG IN GIM.
           MOVE SPACES TO GIM-MSC-TACC IN GIM.
           MOVE SPACES TO GIM-CIC-UING IN GIM.
           MOVE 'I'    TO GIM-MSC-STAT IN GIM.

      *>>>>
*% END
*% IF CMN_ING
      *<<<< INI_CMN_ING OR INI_CMN_MOD                                  
           MOVE GIM-CAI-GTIA IN GIM-FLD TO GVT-CAI-GTIA IN GVT.         
           MOVE GIM-IIC-GTIA IN GIM-FLD TO GVT-IIC-GTIA IN GVT.         
           MOVE 999                     TO GVT-COD-TASN IN GVT.         
           MOVE FIO-GET-LEQ TO FIO-CMND.                                
           PERFORM BGL-FIO-GVT.                                         
           IF FIO-STAT-OKS AND                                          
               (GIM-CAI-GTIA IN GIM-FLD = GVT-CAI-GTIA IN GVT AND       
                GIM-IIC-GTIA IN GIM-FLD = GVT-IIC-GTIA IN GVT)          
                MOVE FIO-GET-KEY-UPD TO FIO-CMND                        
                PERFORM BGL-FIO-GVT                                     
                IF FIO-STAT-OKS                                         
                  MOVE GVT-SGV-FISI IN GIM-FLD TO                       
                  GVT-SGV-FISI IN GVT                                   
                  MOVE FIO-MOD TO FIO-CMND                              
                  PERFORM BGL-FIO-GVT                                   
           ELSE                                                         
               MOVE 'BGL' TO MSG-COD-SIST                               
               MOVE 'GIMSINGVT' TO MSG-COD-MENS                         
               PERFORM GET-MSG                                          
               MOVE MSG-GLS-DESC TO FRM-MENS.                           
           PERFORM GET-FHOY.                                            
           IF SCR-CCPP = 'ING'                                          
              OR SCR-CMND = 'COP'                                       
               MOVE 'I'      TO GIM-MSC-TACC IN GIM                     
               MOVE HOY-FHOY TO GIM-FEC-FING IN GIM                     
               MOVE SCR-USER TO GIM-CIC-UING IN GIM                     
           ELSE                                                         
      *         MOVE SCR-USER TO GIM-CIC-UACT IN GIM                    
               MOVE 'M'      TO GIM-MSC-TACC    IN GIM.                 
      *>>>>                                                             
*% END
*% IF CMN_MOD
      *<<<< INI_CMN_ING OR INI_CMN_MOD
      *EVA-AFRI/AGOST2007                                               
           MOVE GIM-CIC-GTIA IN GIM  TO GDD-CIC-GTIA IN GDD.            
           MOVE 'GDD-KEY-AGDD'       TO  FIO-AKEY.                      
           MOVE FIO-GET-KEY  TO FIO-CMND.                               
                                                                        
           PERFORM BGL-FIO-GDD.                                         
           IF NOT FIO-STAT-OKS                                          
               GO TO FIN-CMN-MOD.                                       
                                                                        
           MOVE GDD-CIC-DCLI IN GDD  TO  DBC-KEY-IDBC IN DBC.           
           MOVE FIO-GET-KEY          TO  FIO-CMND.                      
           PERFORM SGC-FIO-DBC.                                         
           IF NOT FIO-STAT-OKS                                          
                GO TO FIN-CMN-MOD.                                      
                                                                        
           MOVE GIM-CAI-GTIA IN GIM-FLD TO GVT-CAI-GTIA IN GVT.         
           MOVE GIM-IIC-GTIA IN GIM-FLD TO GVT-IIC-GTIA IN GVT.         
           MOVE 999                     TO GVT-COD-TASN IN GVT.         
           MOVE FIO-GET-LEQ TO FIO-CMND.                                
           PERFORM BGL-FIO-GVT.                                         
           IF FIO-STAT-OKS AND                                          
               (GIM-CAI-GTIA IN GIM-FLD = GVT-CAI-GTIA IN GVT AND       
                GIM-IIC-GTIA IN GIM-FLD = GVT-IIC-GTIA IN GVT)          
                MOVE FIO-GET-KEY-UPD TO FIO-CMND                        
                PERFORM BGL-FIO-GVT                                     
                IF FIO-STAT-OKS                                         
                  MOVE GVT-SGV-FISI IN GIM-FLD TO                       
                  GVT-SGV-FISI IN GVT                                   
                  MOVE FIO-MOD TO FIO-CMND                              
                  PERFORM BGL-FIO-GVT.                                  
           PERFORM GET-FHOY.
           IF SCR-CCPP = 'ING'
              OR SCR-CMND = 'COP'
               MOVE 'I'      TO GIM-MSC-TACC IN GIM
               MOVE HOY-FHOY TO GIM-FEC-FING IN GIM
*% IF PGM_MVS
               MOVE SCR-USER TO GIM-CIC-UING IN GIM
*% END
           ELSE
*% IF PGM_MVS
      *         MOVE SCR-USER TO GIM-CIC-UACT IN GIM
*% END
               MOVE 'M'      TO GIM-MSC-TACC    IN GIM.
*% IF PGM_MVS
*% END
      *>>>>
*% END
*% IF FIN_CMN_MOD
      *<<<< FIN_CMN_MOD
           IF NOT FIO-STAT-OKS                                                  
      *        Error inconsistencia en la modificacion : informar               
               MOVE FIO-MENS TO FRM-MENS
               GO TO FIN-CMN-MOD.

      *>>>>
*% END
*% IF FIN_CMN_ING
      *<<<< FIN_CMN_ING
           IF NOT FIO-STAT-OKS                                                  
      *        Error inconsistencia en el ingreso : informar                    
               MOVE FIO-MENS TO FRM-MENS
               GO TO FIN-CMN-ING.

           MOVE GIM-CAI-GTIA IN GIM TO GDG-CAI-GTIA IN GDG.
           MOVE GIM-IIC-GTIA IN GIM TO GDG-IIC-GTIA IN GDG.
           MOVE FIO-GET-KEY-UPD TO FIO-CMND.
           PERFORM BGL-FIO-GDG.
           IF FIO-STAT-OKS
               MOVE 'S' TO GDG-IND-EGIM IN GDG
               MOVE FIO-MOD TO FIO-CMND
               PERFORM BGL-FIO-GDG.

      *>>>>
*% END
*% IF FIN_CMN_ELI
      *<<<< FIN_CMN_ELI
           IF NOT FIO-STAT-OKS
      *        Error inconsistencia en la eliminacion : informar
               MOVE FIO-MENS TO FRM-MENS
               GO TO FIN-CMN-ELI.

           MOVE GIM-CAI-GTIA IN GIM TO GDG-CAI-GTIA IN GDG.
           MOVE GIM-IIC-GTIA IN GIM TO GDG-IIC-GTIA IN GDG.
           MOVE FIO-GET-KEY-UPD TO FIO-CMND.
           PERFORM BGL-FIO-GDG.
           IF FIO-STAT-OKS
              MOVE ' ' TO GDG-IND-EGIM IN GDG
              MOVE FIO-MOD TO FIO-CMND
              PERFORM BGL-FIO-GDG.
      *>>>>
*% END
