       IDENTIFICATION DIVISION.
      *========================
       PROGRAM-ID.   BGLPAGDG.
       AUTHOR.       BEE.
       DATE-WRITTEN. 08-Nov-05 10:21 AM.

      * NOMBRE PROGRAMA                   BGLPAGDG
      * VERSION PGM                       3.1
      * VERSION SKL                       05.11.04.1
      * OPCION                            UPD
      * ARCHIVO BASE                      BGLGDG
      * PANTALLA                          BGLGDG
      * INP/OUT                           DATACOM
      * TAMANO COMMAREA                   250




       ENVIRONMENT DIVISION.
      *=====================
       CONFIGURATION SECTION.
      *----------------------
       SPECIAL-NAMES.
               DECIMAL-POINT IS COMMA.

       DATA DIVISION.
      *==============

       WORKING-STORAGE SECTION.
      *------------------------
      * COPY GNSWGSCR.
       COPY GNSWGCVT.

       77  WSS-TAG-BGLPAGDG-INI PIC X(125) VALUE                        
           '<IDNPGM NOM=$BGLPAGDG$ SKL=$05.11.04.1$ VSN=${vsnpu}$        
      -    'GEN=$08-Nov-05 10:21 AM$ FNC=${fncpu}$/>'.    
       COPY GNSWCSCR.
      *PTC-INI
      *PTC-SUB
      * ISP  10-MAY-2001 13:46:35 
      * COPY GNSWVSCR.
       COPY GNSWV3CR.
      *PTC-FIN

      *<<<<  LDC_SI AND PGM_MVS AND FIN_SCR_VARI
       COPY LDCWGENG.
           03 SCR-CLF     VALUE SPACES            PIC X(64).
           03 SCR-LDC     VALUE SPACES            PIC X(100).
           03 SCR-ARG     VALUE SPACES            PIC X(50).
      *>>>>
      *<<<< CMAVARI OF PGMMAN
           03 CMA-VARI.
              05 WSS-IND-CMUL                       PIC X(01).
              05 GAR-CIC-OFIC     VALUE '0000'      PIC X(04).
              05 SCR-IND-MGDD     VALUE SPACES      PIC X(01).
                 88 MULTIPLES-GDD      VALUE 'M'.

              05 DBC-KEY-IDBC.
                 07 DBC-CAI-ICLI  VALUE SPACES      PIC X(04).
                 07 DBC-IIC-ICLI  VALUE ZEROES      PIC 9(08).

              05 CMA-IND-KPAD     VALUE SPACES      PIC X(01).
              05 GAR-KEY-IGDD.
                 07 GAR-CIC-DCLI  VALUE SPACES      PIC X(12).
                 07 GAR-KEY-AGDD  VALUE SPACES      PIC X(12).
      *>>>>
      *<<<< FIN_SCR_VARI
              05 GAR-CAI-GTIA                        PIC X(04).
              05 GAR-IIC-GTIA                        PIC X(08).
              05 GAR-IND-GTAC                        PIC X(01).
              05 GAR-IND-EGAP                        PIC X(01).
              05 GAR-IND-SVTO                        PIC X(01).
              05 GAR-SGV-PPCT                        PIC S9(03)V9(02).
              05 GAR-SGV-PAJU                        PIC S9(03)V9(02).
              05 WSS-EST-ANT                         PIC X(02).
              05 WSS-ES1-1                           PIC X(02).
              05 WSS-ES1-2                           PIC X(02).
              05 WSS-ES1-3                           PIC X(02).
              05 WSS-ES1-4                           PIC X(02).
      *
              05 CMA-IND-DAP                         PIC X(01).
              05 FRM-CAI-IOPD                        PIC X(04).
              05 FRM-IIC-IOPD                        PIC X(08).
              05 SCR-IND-V001      VALUE SPACES      PIC X(01).
              05 CMA-CIC-TGAR                        PIC X(06).
              05 CMA-FEC-FAPE                        PIC X(08).
              05 CMA-FEC-FTSN                        PIC X(08).
              05 CMA-TIP-DOC                        PIC X(03).
              05 CMA-DOC-SALD           VALUE 0     PIC 9(13)V99.
      *
              05 CNE-GDD-CIC-ICLI.  
                 07 CNE-DBC-CAI-ICLI                PIC X(04).
                 07 CNE-DBC-IIC-ICLI                PIC X(08).
              05 CNE-DBC-GLS-NOMC                   PIC X(50). 
              05 CNE-GDG-CIC-ICLI.    
                 07 CNE-GDG-CAI-ICLI                PIC X(04).
                 07 CNE-GDG-IIC-ICLI                PIC X(08).
              05 CNE-GDG-GLS-NOMP                   PIC X(50).
              05 CMA-GLS-DISP                       PIC X(34).
              05 WSS-ES2-ANT                        PIC X(02).
      *MHM-INI 29-OCT-2003
              05 CMA-CIC-UING                       PIC X(12).
      *MHM-INI 29-OCT-2003
      ********************************
      *RET-STT-GDG. section aasteri
      ********************************
       01  SCR-VARI-RED REDEFINES SCR-VARI.
           03 SCR-DFH    OCCURS 1200 PIC X(01).

       COPY BGLWIGDG.
       COPY BGLBRGDG.


       COPY GNSWVIDD.
       COPY GNSWGRQA.
       COPY GNSWGUIB.
       COPY GNSWGELS.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-GDG-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-TAB-REQA==.
       COPY GNSBRTAB.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-MSC-REQA==.
       COPY GNSBRMSC.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-MSG-REQA==.
       COPY GNSBRMSG.
       COPY GNSWCFIO.
       COPY GNSWVFIO.
      *PTC-INI
      *PTC-SUB
      * ISP  10-MAY-2001 13:46:35 
      * COPY GNSWGFRM.
       COPY GNSWG3CF.
       COPY GNSWGTSK.
       COPY GNSWGQUE.
      *PTC-FIN
       COPY GNSWVNUM.
       COPY GNSWCNUM.
       COPY GNSWGFEC.
       COPY GNSWGHOY.
       COPY GNSWCVRF.
       COPY GNSWVVRF.
       COPY GNSWGIDC.
       COPY GNSWGSYS.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-OFI-REQA==.
       COPY TABBROFI.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-USR-REQA==.
       COPY TABBRUSR.

      *<<<< LDC_SI AND PGM_MVS AND WSS 
      *PTC-INI-MAN
      *PTC-SUB
       COPY BGLWXGDG.
       COPY BGLMXW01.
      *PTC-FIN-MAN

       COPY LDCWGPMP.

      *>>>> WSS 
      *<<<< WSS
      *<<<< WSS OF PGMMAN
       01  PGM-VAR-ADIC.
           03 PGM-STAT-ADIC.
              05 PGM-STAT-GDD.
                 88 PGM-STAT-GDD-NUL VALUE '  '.
                 07 PGM-STT1-GDD        VALUE '2' PIC X(01).
                    88 PGM-STAT-GDD-OKS VALUE '0'.
                 07 PGM-STT2-GDD        VALUE '3' PIC X(01).

       01  WSS-BUS-VARI.
           03 WSS-IBUS                 VALUE 0      PIC 9(01).
           03 WSS-IBUS-GDG           VALUE 0      PIC 9(01).
       01  WSS-GDD-VARI.
              03 WSS-MGDD              VALUE 0      PIC 9(01).
                 88 WSS-MISMO-GDD      VALUE 0.
                 88 WSS-OTRO-GDD       VALUE 1.
                 88 WSS-PRIMER-GDD     VALUE 2.
              03 WSS-MISMO               VALUE 0    PIC 9(01).
              03 WSS-OTRO                VALUE 1    PIC 9(01).
              03 WSS-PRIMER              VALUE 2    PIC 9(01).

      *COPY SGCWGICB.
       COPY SGCBRDBC.
       COPY BGLBRGDD.
      *MHM-INI 30-JUL-2003
       COPY BGLBRGDO.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-GDO-REQA==.
       COPY COLBROPC.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-OPC-REQA==.
       COPY COLBRDLC.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-DLC-REQA==.
      *MHM-FIN 30-JUL-2003
      *<<<< PGM_PU OR NOT NO_CIC_PQ
       COPY GNSBRCIC.
       COPY GNSWGCIC.
      *<<<< PGM_DTC
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-CIC-REQA==.
      *>>>>
      *>>>>
      *<<<< UNS_FLD
       COPY GNSWGCPT.
       COPY GNSWGSTR.
      *>>>>
      *<<<< PGM_DTC
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-GDD-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-DBC-REQA==.
      *>>>>
      *>>>>
       01  WSS-VARI.
           03 WSS-ANT                                   PIC X(02).
           03 WSS-MARC-4                                PIC X(01). 
           03 WSS-CIC-ICLI-GDG.
              05 WSS-CAI-ICLI                           PIC X(04).
              05 WSS-IIC-ICLI                           PIC X(08).
           03  WSS-IND-EXI-GDO                          PIC X(01).
           03  WSS-ALZ-DAP           VALUE SPACES       PIC X(01).
           03  WSS-FEC-ULT-ACT                          PIC X(08).
           03  WSS-IND-CCAD                             PIC X(01).
           03  WSS-NUM-TIPO-ALF                         PIC X(06).
           03  WSS-NUM-TIPO  REDEFINES WSS-NUM-TIPO-ALF PIC 9(06).
           03  WSS-KEY-IGDG.
               05 WSS-CAI-GTIA                          PIC X(04).
               05 WSS-IIC-GTIA                          PIC X(08).
           03  WSS-FRM-MENS.
               05 WSS-FRM-MENS1                         PIC X(21).
               05 WSS-FRM-MENS2                         PIC X(12).
           03  WSS-FRM-IIC-IOPD      VALUE SPACES       PIC X(18).
      *AFRI-INI JUL/2004
           03  WSS-GLS-TGAR.
               05 WSS-VEC-TGAR   OCCURS 10 TIMES.
                  07 WSS-IND-TGAR                      PIC X(06). 
      *AFRI-FIN JUL/2004
      *<<<< FMT_IDC
           03 WSS-COD-CGTA.
               05 WSS-TIP-CGTA                          PIC X(03).
               05 WSS-STP-CGTA                          PIC X(03).
      *<<<< GEN_BCI
           03  WSS-FEC-FVTO.
               05 WSS-NUM-SVTO                          PIC X(02).
               05 WSS-NUM-AVTO                          PIC X(02).
               05 WSS-NUM-MVTO                          PIC X(02).
               05 WSS-NUM-DVTO                          PIC X(02).

           03  WSS-CIC-CTAB         VALUE SPACES        PIC X(03).
           03 WSS-IND-ALZA          VALUE SPACES        PIC X(03).
           03 WSS-FIO-STAT-BKP      VALUE SPACES        PIC X(02).
      *MHM-INI 23-OCT-2003
           03 WSS-GLS-CGTA.
              05 WSS-GLS-TOPE                   PIC X(40).
              05 WSS-GLS-SOPE                   PIC X(40).
      *MHM-FIN 23-OCT-2003
      *MHM-INI 03-DIC-2003
           03 WSS-IND-EGAP          VALUE SPACES       PIC X(01).
           03 WSS-IND-GAPB          VALUE SPACES       PIC X(01).
      *MHM-FIN 03-DIC-2003

      *LOP-INI 6-DIC-2002
           03 WSS-COD-CVMC.
              05  WSS-COD-MENS                         PIC X(12).
              05  WSS-COD-MEN2                         PIC X(12).
              05  WSS-NUM-MENS                         PIC 9(02).
              05  WSS-NUM-MEN2                         PIC 9(02).
              05  WSS-CAMB                             PIC X(28).
           03 WSS-FEC-FCIE     VALUE 0                 PIC 9(08).
           03 WSS-CIC-ICLF                             PIC X(12).
           03 WSS-T                    VALUE ZEROES    PIC 9(02).
      *LOP-FIN 6-DIC-2002
      *LOP-INI 6-DIC-2002
       COPY LDCWGCCU.
       COPY LDCWGCEG.
       COPY LDCBRCLF.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-CLF-REQA==.
       COPY LDCBRRDC REPLACING RDC BY RDL.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-RDC-REQA==.
      *LOP-FIN 6-DIC-2002

       COPY BGLWGDAP.
       COPY DAPBROPD.
       COPY DAPBRRCC.
       COPY USPC113.
      *>>>>
      *>>>>
       01  WSS-FRM-MEN2.
           03 WSS-CAI-MEN2                  PIC X(04).
           03 WSS-BLK1       VALUE SPACES   PIC X(03).
           03 WSS-NUM-MEN2                  PIC 9(08).
           03 WSS-BLK2       VALUE SPACES   PIC X(24).
      *<<<< PGM_MEX
       COPY BGLBRGSL.
       COPY BGLBRGSO.
      *>>>>
      *<<<< PGM_VMS OR PGM_DTC
       COPY BGLBRGMO.
       COPY BGLBRTAG.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-GMO-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-TAG-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-OPD-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-RCC-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-GAP-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-GLE-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-GES-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-GIN-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-GDP-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-GSE-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-GSI-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-GTP-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-GUB-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-GVT-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-GSL-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-GSO-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-GVE-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-GIM-REQA==.
      *<<<< PGM_VSI OR PGM_DB2
       COPY BGLBRGAP.
       COPY BGLBRGDP.
       COPY BGLBRGES.
       COPY BGLBRGIN.
       COPY BGLBRGLE.
       COPY BGLBRGSE.
       COPY BGLBRGSI.
       COPY BGLBRGTP.
       COPY BGLBRGUB.
       COPY BGLBRGVT.
       COPY BGLBRGIM.
       COPY BGLBRGVE.
      *>>>>
      *<<<< PGM_PU OR PGM_PQ
       COPY BGLWGVCG.
      *<<<< GEN_BCI
       COPY BGLWGIDP.
      *>>>>
      *<<<< NOT ( PGM_VSI OR PGM_DB2 )
       COPY BGLWGELI.
      *>>>>
       01  WSS-VARI-ADI.     
           03 WSS-REG                             PIC X(03).
           03 WSS-COD-CTA.
              05 WSS-COD-CGTA                     PIC X(03).
              05 WSS-VCB.
                 07 WSS-TIP-VCB                   PIC X(01).
                 07 WSS-COD-VCB                   PIC X(03).
                 07 WSS-TIP-CMB                   PIC X(02).

      *>>>>
      *>>>>



       01  PGM-VARI.
           03 PGM-ICLR                  VALUE ' '       PIC X(01).
           03 PGM-LIMPIAR-TODO          VALUE ' '       PIC X(01).
           03 PGM-LIMPIAR-LLAVES        VALUE 'K'       PIC X(01).
           03 PGM-LIMPIAR-CAMPOS        VALUE 'F'       PIC X(01).
           03 PGM-NO-LIMPIAR-NADA       VALUE 'N'       PIC X(01).
           03 PGM-PROG                                  PIC X(08).
           03 PGM-NTRN                                  PIC X(04).
           03 PGM-STAT.
              05 PGM-STAT-GDG.
                 88 PGM-STAT-GDG-NUL    VALUE '  '.
                 07 PGM-STT1-GDG        VALUE '2' PIC X(01).
                    88 PGM-STAT-GDG-OKS VALUE '0'.
                 07 PGM-STT2-GDG        VALUE '3' PIC X(01).
              05 PGM-STAT-DBC.
                 88 PGM-STAT-DBC-NUL    VALUE '  '.
                 07 PGM-STT1-DBC        VALUE '2' PIC X(01).
                    88 PGM-STAT-DBC-OKS VALUE '0'.
                 07 PGM-STT2-DBC        VALUE '3' PIC X(01).

           03 PGM-SRNF                  VALUE '23'      PIC X(02).
           03 PGM-SOKS                  VALUE '00'      PIC X(02).
           03 PGM-SNUL                  VALUE '  '      PIC X(02).
           03 PGM-SUAR                  VALUE SPACES    PIC X(15).

       LINKAGE SECTION.
      *----------------
       01  DFHCOMMAREA.
           02 DFH-CMMA OCCURS 1200 PIC X(01).
       COPY GNSLGFIO.

       PROCEDURE DIVISION.
      *===================

       MAIN SECTION.
       INI-MAIN.
           PERFORM INI.
       LUP-MAIN.
           IF SCR-INST = SCR-INST-HCM
                 PERFORM SCR-COM.
           IF SCR-CCPP = 'MOD'
                 PERFORM SCR-MOD
           ELSE
           IF SCR-CCPP = 'ING'
                 PERFORM SCR-ING
           ELSE
           IF SCR-CCPP = 'ACC'
                 PERFORM SCR-ACC
           ELSE
           IF SCR-CCPP = 'ELI'
                 PERFORM SCR-ELI
           ELSE
           IF SCR-CCPP = 'ACT'
                 PERFORM SCR-ACT
           ELSE
           IF SCR-CCPP = 'PGM'
                 PERFORM SCR-PGM
           ELSE
                 MOVE SCR-INST-HCM TO SCR-INST.

           GO TO LUP-MAIN.
       FIN-MAIN.
           EXIT.

       INI SECTION.
       INI-INI.
       COPY GNSBGEIB.

       COPY GNSBGEDB.
           MOVE LOW-VALUES TO GDG-FLD.
           MOVE LOW-VALUES TO GDG-EDT.

           PERFORM GNS-PRO-RCK.
           PERFORM GNS-BUS-VCA.
           MOVE +1200 TO SCR-TCMA.
           PERFORM GNS-HDL-SYS.
           PERFORM GNS-HDL-FRM.
           MOVE 'BGLPAGDG' TO FIO-PROG.
           PERFORM GNS-BUS-IDD.
      *PTC-INI
           PERFORM GNS-ERR-QUE.
           PERFORM GET-TSK-TERM.
      *PTC-FIN

      *<<<< LDC_SI AND PGM_MVS AND INI_FIO AND PGM_BMS
      *<<<< GEN_BCI
      *PTC ini
           PERFORM GNS-ERR-QUE.
      *PTC fin
      *<<<< PGM_PU
      *PTC-INI-MAN
      *     IF SCR-OFRM-SRV
      * ESTA ANTES DE OBTENER CMMA
              MOVE TSK-TERM-ALF TO WSX-COD-TERM.
      *PTC-FIN-MAN
      *>>>>
      *LOP-INI 12-12-2002
           MOVE SPACES TO WSS-IND-ALZA IN WSS-VARI.
           IF SCR-CMND ='ALS'
              MOVE 'ALZ' TO SCR-CMND
              MOVE 'ALS' TO WSS-IND-ALZA IN WSS-VARI.
      *LOP-FIN 12-12-2002
           IF SCR-CMND = 'ALZ'
               MOVE 'BGL'       TO FIO-SIST
               MOVE 'VSN '      TO TAB-COD-TTAB IN TAB
               MOVE 'ALZDAPESP' TO TAB-COD-CTAB IN TAB
               MOVE FIO-GET-KEY TO FIO-CMND
               PERFORM GNS-FIO-TAB
               IF FIO-STAT-OKS
                   MOVE TAB-IND-VIGE IN TAB TO WSS-ALZ-DAP IN WSS-VARI
               ELSE
                   MOVE 'N' TO WSS-ALZ-DAP IN WSS-VARI.
      *>>>>
      *<<<< LDC_SI AND PGM_IBM AND INI_FIO AND PGM_BMS
      *<<<< ISP-INI  24-JAN-1996 11:35:48 
           IF SCR-OFRM-SRV
              MOVE WSS-IDX-IGDG TO SCR-IPRO
           ELSE
      *<<<< ISP-FIN  24-JAN-1996 11:35:48 
           IF SCR-DESDE-CMN
               MOVE SPACES TO SCR-VEC-ENG
               MOVE 1 TO SCR-IPRO
               GO TO FIN-INI-FIO.

           IF SCR-INST-EXT = WSS-INST-FPEN-CIC
               MOVE WSS-INST-NULL TO SCR-INST-EXT
               MOVE 'GNS' TO MSG-COD-SIST
               MOVE 'FLDING' TO MSG-COD-MENS
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO SCR-MENS-EXT
               PERFORM ING-FPEN-CIC.
       FIN-INI-FIO.
      *>>>>

       FIN-INI.
           EXIT.

       COPY GNSBHSYS.
       COPY GNSBHFRM.
       COPY GNSBPRCK.
       COPY GNSBBVCA.
       COPY GNSBBIDD.

       SCR-COM SECTION.
       INI-SCR-COM.

           PERFORM STP-EXIT.
           MOVE FRM-CPSF-AEY TO FRM-CPIM-AEY.
           PERFORM PRO-ALL.
           PERFORM SCR-CLRA-GDG.
           PERFORM EDT-KEY-GDG.
           PERFORM EDT-FLD-GDG.
           PERFORM SCR-PUTA.
           MOVE SCR-INST-HCM TO SCR-INST.
           MOVE SCR-CMNP     TO SYS-PROG.
           MOVE SCR-VARI     TO SYS-CMMA.
           MOVE SCR-TCMA     TO SYS-TCMA.
           MOVE SYS-XCTL     TO SYS-CMND.
      *PTC-INI
           IF NOT SCR-OFRM-SRV
      *PTC-FIN
           PERFORM GNS-PRO-SYS.
       XCT-ERR.
           MOVE 'XCTERR    ' TO MSG-COD-MENS.
           MOVE 'GNS'        TO MSG-COD-SIST.
           PERFORM GET-MSG.
           MOVE MSG-GLS-DESC TO SYS-MEN1.
           MOVE SYS-PROG     TO SYS-MEN2.
           MOVE SYS-ABOR     TO SYS-CMND.
      *PTC-INI
           IF NOT SCR-OFRM-SRV
      *PTC-FIN
           PERFORM GNS-PRO-SYS.
       COPY GNSBGGBK.
       FIN-SCR-COM.
           EXIT.

       SCR-MOD SECTION.
       INI-SCR-MOD.

           IF SCR-INST = SCR-INST-HKY
               PERFORM HBL-KEY
               MOVE SCR-INST-GKY TO SCR-INST
               PERFORM SCR-DMSG
           ELSE
           IF SCR-INST = SCR-INST-GFL
               PERFORM GET-FLD
           ELSE
           IF SCR-INST = SCR-INST-GCS
               PERFORM GET-ACC.
           PERFORM DESSCRTRL.
           IF FRM-FFLD = FRM-FFLD-PF7 OR FRM-FFLD-PF8
               PERFORM XCT-PRGP.
           IF NOT ( FRM-FFLD = FRM-FFLD-PF5 OR FRM-FFLD-PF6 )
               GO TO MSG-SCR-MOD.

       MSG-SCR-MOD.
           IF SCR-STAT = SCR-STAT-CON
               MOVE SPACES TO FRM-MENS
           ELSE
           IF SCR-STAT = SCR-STAT-ABT OR SCR-VFLD = SCR-VFLD-NOT
               MOVE 'MODNOT    ' TO MSG-COD-MENS
               MOVE 'GNS' TO MSG-COD-SIST
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS
           ELSE
               MOVE SPACES TO FRM-MENS
               PERFORM CMN-MOD
               IF FIO-STAT-OKS
                   IF FRM-MEN1 NOT > SPACES
                       MOVE 'MODYES    ' TO MSG-COD-MENS
                       MOVE 'GNS' TO MSG-COD-SIST
                       PERFORM GET-MSG
                       MOVE MSG-GLS-DESC TO FRM-MEN1
                   ELSE
                       NEXT SENTENCE
               ELSE
               IF FRM-MENS NOT > SPACES
                   MOVE 'FIOSTAT' TO MSG-COD-TMSG
                   MOVE FIO-STAT  TO MSG-COD-CMSG
                   MOVE 'GNS'     TO MSG-COD-SIST
                   PERFORM GET-MSG
                   MOVE MSG-GLS-DESC TO FRM-MENS.
           PERFORM SCR-MSSG.
       FIN-SCR-MOD.

           EXIT.

       SCR-ING SECTION.
       INI-SCR-ING.

           IF SCR-INST = SCR-INST-HKY
               PERFORM HBL-IKY
               MOVE SCR-INST-GKY TO SCR-INST
      *PTC-INI
               IF NOT SCR-OFRM-SRV
                   PERFORM SCR-DMSG
               ELSE
                   PERFORM SCR-PUTA
      *PTC-FIN
           ELSE
           IF SCR-INST = SCR-INST-GFL
                PERFORM GET-FLD
           ELSE
           IF SCR-INST = SCR-INST-GCS
                PERFORM GET-ACC.
           PERFORM DESSCRTRL.
       MSG-SCR-ING.
           IF SCR-STAT = SCR-STAT-CON
               MOVE SPACES TO FRM-MENS
           ELSE
           IF SCR-STAT = SCR-STAT-ABT OR SCR-VFLD = SCR-VFLD-NOT
               MOVE 'INGNOT    ' TO MSG-COD-MENS
               MOVE 'GNS' TO MSG-COD-SIST
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS
           ELSE
               MOVE SPACES TO FRM-MENS
               PERFORM CMN-ING
               IF FIO-STAT-OKS
                   IF FRM-MEN1 NOT > SPACES
                       MOVE 'INGYES    ' TO MSG-COD-MENS
                       MOVE 'GNS' TO MSG-COD-SIST
                       PERFORM GET-MSG
                       MOVE MSG-GLS-DESC TO FRM-MEN1
                   ELSE
                       NEXT SENTENCE
               ELSE
               IF FRM-MENS NOT > SPACES
                   MOVE 'FIOSTAT' TO MSG-COD-TMSG
                   MOVE FIO-STAT  TO MSG-COD-CMSG
                   MOVE 'GNS'     TO MSG-COD-SIST
                   PERFORM GET-MSG
                   MOVE MSG-GLS-DESC TO FRM-MENS.
           PERFORM SCR-MSSG.
       FIN-SCR-ING.

           EXIT.

       SCR-ACC SECTION.
       INI-SCR-ACC.

           IF SCR-INST = SCR-INST-HKY
               PERFORM HBL-KEY
               MOVE SCR-INST-GKY TO SCR-INST
               PERFORM SCR-DMSG
           ELSE
           IF SCR-INST = SCR-INST-GFL
                PERFORM GET-FLD
           ELSE
           IF SCR-INST = SCR-INST-GCS
                PERFORM GET-ACC.
           PERFORM DESSCRTRL.
           IF FRM-FFLD = FRM-FFLD-PF7 OR FRM-FFLD-PF8 OR
                         FRM-FFLD-PF5 OR FRM-FFLD-PF6
               PERFORM XCT-PRGP.
           MOVE SPACES TO FRM-MENS.
           IF SCR-STAT NOT = SCR-STAT-CON
               PERFORM CMN-ACC.
           PERFORM SCR-MSSG.
       FIN-SCR-ACC.

           EXIT.

       SCR-ELI SECTION.
       INI-SCR-ELI.

           IF SCR-INST = SCR-INST-HKY
               PERFORM HBL-KEY
               MOVE SCR-INST-GKY TO SCR-INST
               PERFORM SCR-DMSG
           ELSE
           IF SCR-INST = SCR-INST-GCS
                PERFORM GET-ACC.
           PERFORM DESSCRTRL.
           IF FRM-FFLD = FRM-FFLD-PF7 OR FRM-FFLD-PF8 OR
                         FRM-FFLD-PF5 OR FRM-FFLD-PF6
               PERFORM XCT-PRGP.
           IF SCR-STAT = SCR-STAT-CON
               MOVE SPACES TO FRM-MENS
           ELSE
           IF SCR-STAT = SCR-STAT-ABT OR SCR-VFLD = SCR-VFLD-NOT
               MOVE 'ELINOT    ' TO MSG-COD-MENS
               MOVE 'GNS' TO MSG-COD-SIST
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS
           ELSE
               MOVE SPACES TO FRM-MENS
               PERFORM CMN-ELI
               IF FIO-STAT-OKS
                   IF FRM-MEN1 NOT > SPACES
                       MOVE 'ELIYES    ' TO MSG-COD-MENS
                       MOVE 'GNS' TO MSG-COD-SIST
                       PERFORM GET-MSG
                       MOVE MSG-GLS-DESC TO FRM-MEN1
                   ELSE
                       NEXT SENTENCE
               ELSE
               IF FRM-MENS NOT > SPACES
                   MOVE 'FIOSTAT' TO MSG-COD-TMSG
                   MOVE FIO-STAT  TO MSG-COD-CMSG
                   MOVE 'GNS'     TO MSG-COD-SIST
                   PERFORM GET-MSG
                   MOVE MSG-GLS-DESC TO FRM-MENS.
           PERFORM SCR-MSSG.
       FIN-SCR-ELI.

           EXIT.

       SCR-ACT SECTION.
       INI-SCR-ACT.

           IF SCR-INST = SCR-INST-HKY
               PERFORM HBL-KEY
               MOVE SCR-INST-GKY TO SCR-INST
               PERFORM SCR-DMSG
           ELSE
           IF SCR-INST = SCR-INST-GFL
                PERFORM GET-FLD
           ELSE
           IF SCR-INST = SCR-INST-GCS
                PERFORM GET-ACC.
           PERFORM DESSCRTRL.
           IF ( FRM-FFLD = FRM-FFLD-PF7 OR FRM-FFLD-PF8  OR
                           FRM-FFLD-PF5 OR FRM-FFLD-PF6 ) AND
              SCR-ACTU = SCR-ACTU-MOD
               PERFORM XCT-PRGP.
           IF SCR-ACTU = SCR-ACTU-MOD
                  PERFORM MSG-SCR-MOD
           ELSE
                  PERFORM MSG-SCR-ING.
       FIN-SCR-ACT.

           EXIT.

       SCR-PGM SECTION.
       INI-SCR-PGM.

           IF SCR-INST = SCR-INST-HKY
               PERFORM HBL-KEY
               MOVE SCR-INST-GKY TO SCR-INST
               PERFORM SCR-DMSG
           ELSE
           IF SCR-INST = SCR-INST-GFL
                PERFORM GET-FLD
           ELSE
           IF SCR-INST = SCR-INST-GCS
                PERFORM GET-ACC.
       TRL-SCR-PGM.
           PERFORM DESSCRTRL.
           IF FRM-FFLD = FRM-FFLD-PF7 OR FRM-FFLD-PF8 OR
                         FRM-FFLD-PF5 OR FRM-FFLD-PF6
               PERFORM XCT-PRGP.
           MOVE SPACES TO FRM-MENS.
           IF SCR-STAT NOT = SCR-STAT-CON
               PERFORM CMN-PGM.
           PERFORM SCR-MSSG.
       FIN-SCR-PGM.

           EXIT.

       SCR-DMSG SECTION.
       INI-SCR-DMSG.
           IF PGM-ICLR = PGM-NO-LIMPIAR-NADA
               NEXT SENTENCE
           ELSE
           IF PGM-ICLR = PGM-LIMPIAR-TODO
               PERFORM SCR-CLRA-GDG
               PERFORM EDT-KEY-GDG
               PERFORM EDT-FLD-GDG
           ELSE
           IF PGM-ICLR = PGM-LIMPIAR-LLAVES
               PERFORM CLR-KEY-GDG
               PERFORM EDT-KEY-GDG
           ELSE
               PERFORM CLR-FLD-GDG
               PERFORM EDT-FLD-GDG.
           PERFORM STP-EXIT.
           PERFORM SCR-PUTA.
           PERFORM SCR-EXIT.
       FIN-SCR-DMSG.
           EXIT.

       XCT-PRGP SECTION.
       INI-XCT-PRGP.

           MOVE SCR-INST-BRW TO SCR-INST.
           PERFORM STP-EXIT.
           MOVE FRM-FFLD   TO SCR-FFLD.
      *
           MOVE SCR-PROG     TO SYS-PROG.
           MOVE SCR-VARI     TO SYS-CMMA.
           MOVE SCR-TCMA     TO SYS-TCMA.
           MOVE SYS-XCTL     TO SYS-CMND.
      *PTC-INI
           IF NOT SCR-OFRM-SRV
      *PTC-FIN
           PERFORM GNS-PRO-SYS.
           PERFORM XCT-ERR.
       FIN-XCT-PRGP.
           EXIT.

       SCR-RST SECTION.
       INI-SCR-RST.
           MOVE SPACES       TO PGM-ICLR.
           MOVE SPACES       TO SCR-ACTU.
           MOVE SCR-STPP     TO SCR-STAT.
           MOVE SCR-MFLD-NOT TO SCR-MFLD.
           MOVE LOW-VALUES   TO GDG-FLD.
           MOVE LOW-VALUES TO GDG-EDT.

       FIN-SCR-RST.
           EXIT.

       GET-FLD SECTION.
       INI-GET-FLD.

           PERFORM SCR-GFLD.
           IF FRM-STAT-ABT
               MOVE SCR-STAT-ABT TO SCR-STAT.
       FIN-GET-FLD.
           EXIT.

       CMN-MOD SECTION.
       INI-CMN-MOD.
      *<<<< INI_CMN_MOD AND GEN_BCI
           PERFORM KEY-ALL-GDG.
      *MHM-INI 14-OCT-2003 FALTA REGULARIZAR VERSION MARGENES BCI
      **LOP-INI 20-DIC-2002
      *     IF SCR-CMND = 'ALZ'
      *        PERFORM ANL-LDC-GDD
      *        IF MSG-COD-MENS > SPACES
      *           MOVE MSG-GLS-DESC TO FRM-MENS
      *           MOVE FRM-SUAR-MAL TO FRM-SUAR
      *           GO TO FIN-CMN-MOD.
      **LOP-FIN 20-DIC-2002
      *MHM-FIN 14-OCT-2003
      *>>>>

           PERFORM KEY-ALL-GDG.
           MOVE FIO-GET-KEY-UPD TO FIO-CMND.
           PERFORM BGL-FIO-GDG.
           IF FIO-STAT-OKS AND
              GDG-STP-ITRN IN GDG NOT = SCR-UMOD
               MOVE FIO-ULK-REC TO FIO-CMND
               PERFORM BGL-FIO-GDG
               MOVE FIO-BCK-OUT TO FIO-CMND
               PERFORM BGL-FIO-GDG
               MOVE 'GNS' TO MSG-COD-SIST
               MOVE 'GNSACCSSIMUL' TO MSG-COD-MENS
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS
               GO TO FIN-CMN-MOD.
           IF NOT FIO-STAT-OKS
               GO TO FIN-CMN-MOD.
      *<<<< EVP-INI CMNMODRET
      *<<<< GEN_BCI
      *PTC-INI-MAN
           IF SCR-OFRM-SRV AND
              SCR-CMND = 'MOD'
                PERFORM DEL-GDD
           ELSE
      *PTC-FIN-MAN
      *>>>>
           IF NOT (
      *<<<< FMT_CHI
              DBC-IND-ICLI IN GDG-FLD = 'M' OR
      *>>>>
              ( CNE-DBC-CAI-ICLI = SPACES AND
                CNE-DBC-IIC-ICLI = ZEROES ) OR
              ( GDG-CAI-GTIA IN GDG-FLD = SPACES AND
                GDG-IIC-GTIA IN GDG-FLD = ZEROES ))
              
               PERFORM GET-UPD-GDD
               MOVE 'S' TO GDG-IND-EGDD IN GDG
           ELSE
      *        No modifica ni ingresa porque no hay GDD
               MOVE WSS-MISMO TO WSS-MGDD.
      *>>>> EVP-FIN CMNMODRET

           PERFORM RET-STT-GDG.
           PERFORM RET-ALL-GDG.
           PERFORM RET-HDR-GDG.
      *<<<< CMN_MOD
      *<<<< GEN_BCI
      *CGL-INI 07-05-2003
           PERFORM GET-FHOY.
           MOVE HOY-FHOY TO GDG-FEC-FTRN IN GDG.
           MOVE HOY-HHOY TO GDG-HRA-HRTR IN GDG.
           IF SCR-CCPP = 'ING'
              OR SCR-CMND = 'COP'
               MOVE 'I'      TO GDG-MSC-TACC IN GDG
               MOVE HOY-FHOY TO GDG-FEC-FING IN GDG
               MOVE SCR-USER TO GDG-CIC-UING IN GDG
           ELSE
               MOVE SCR-USER TO GDG-COD-ATRN IN GDG
               MOVE 'M'      TO GDG-MSC-TACC IN GDG.
      
           MOVE SCR-OTRN     TO GDG-COD-OTRN  IN GDG.
           IF SCR-CMND NOT = 'ALZ'
               GO TO SIG-FIN-CMN-MOD.
      
      *<<<< PGM_CHI
      *DAD ini  16-JAN-1995
           IF CMA-IND-DAP IN CMA-VARI = 'S'
      *    IF CMA-IND-DAP IN CMA-VARI = 'S' AND
      *       GDG-FEC-ING-SIS IN GDG > '19950115'
      *DAD fin  16-JAN-1995
               PERFORM BUS-GDO-OPD
               IF MSG-COD-MENS = SPACES
                   MOVE FIO-GET-KEY-UPD TO FIO-CMND
                   PERFORM DAP-FIO-OPD
                   MOVE 'N' TO OPD-COD-GARA IN OPD
                   MOVE FIO-MOD TO FIO-CMND
                   PERFORM DAP-FIO-OPD
                   IF NOT FIO-STAT-OKS
                       MOVE FIO-MENS TO FRM-MENS
                       MOVE FRM-SUAR-MAL TO FRM-SUAR
                       GO TO FIN-CMN-MOD
                   ELSE
                       NEXT SENTENCE
               ELSE
      *RVM-CST-INI 1-APR-1996
                   IF MSG-COD-MENS = 'OPD    NEX'    AND
                      SCR-CMND = 'ALZ'               AND
                      WSS-ALZ-DAP IN WSS-VARI = 'S'
                       PERFORM GET-MSG
                       MOVE MSG-GLS-DESC TO FRM-MEN2
                       MOVE SPACES TO MSG-COD-MENS
                   ELSE
                   IF MSG-COD-MENS = 'OPD    NOVIG'  AND
                      SCR-CMND = 'ALZ'               AND
                      WSS-ALZ-DAP IN WSS-VARI = 'S'
                       IF OPD-COD-STAT IN OPD = 'L'
      *RVM-CST-INI 16-APR-1996
                           MOVE FIO-GET-KEY-UPD TO FIO-CMND
                           PERFORM DAP-FIO-OPD
                           MOVE 'N' TO OPD-COD-GARA IN OPD
                           MOVE FIO-MOD TO FIO-CMND
                           PERFORM DAP-FIO-OPD
      *RVM-CST-FIN 16-APR-1996
                           MOVE 'OPD    YALIQ' TO MSG-COD-MENS
                           PERFORM GET-MSG
                           MOVE MSG-GLS-DESC TO FRM-MEN2
                           MOVE SPACES TO MSG-COD-MENS
                       ELSE
                           MOVE SPACES TO MSG-COD-MENS
                   ELSE
      *RVM-CST-FIN 1-APR-1996
      *FLB CST  21-FEB-1995
                   IF MSG-COD-MENS NOT = 'OPD    NOVIG'
                       PERFORM GET-MSG
                       MOVE MSG-GLS-DESC TO FRM-MENS
                       MOVE FRM-SUAR-MAL TO FRM-SUAR
                       GO TO FIN-CMN-MOD
                   ELSE
                       MOVE SPACES TO MSG-COD-MENS.
      *FLB CST  21-FEB-1995 FIN
      *>>>>
      
      *ALD-ADA-INI/08112001
           MOVE GDG-TIP-CGTA IN GDG TO TAG-COD-TOPE IN TAG.
           MOVE GDG-STP-CGTA IN GDG TO TAG-COD-SOPE IN TAG.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM BGL-FIO-TAG.
           IF FIO-STAT-OKS
               IF TAG-IND-CTBL IN TAG = 'N'
                   GO TO CON-SIN-GRB-GMO.
      *ALD-ADA-FIN/08112001
           MOVE HOY-FHOY TO GMO-FEC-FMOV IN GMO.
           MOVE HOY-HHOY TO GMO-HRA-HMOV IN GMO.
      *FLB CST  13-OCT-1993
           MOVE SCR-OTRN TO GMO-TML-TMOV IN GMO.
           MOVE SCR-USER TO GMO-CIC-UING IN GMO.
      
           MOVE HOY-FHOY TO GMO-FEC-FING IN GMO.
           MOVE GDG-CAI-GTIA IN GDG TO GMO-CAI-GTIA IN GMO.
           MOVE GDG-IIC-GTIA IN GDG TO GMO-IIC-GTIA IN GMO.
           MOVE ZEROES              TO GMO-NUM-IMOV IN GMO.
           MOVE '3'                 TO GMO-COD-MOVI IN GMO.
           MOVE GDG-COD-TSCN IN GDG TO GMO-NUM-TASN IN GMO.
           MOVE 'GDG001'            TO GMO-COD-CMPO IN GMO.
           MOVE 'N'                 TO GMO-IND-VALO IN GMO.
           MOVE 'S'                 TO GMO-IND-CLVE IN GMO.
           MOVE SPACES              TO GMO-GLS-CMPA IN GMO.
           MOVE ZEROES              TO GMO-SGV-CMPA IN GMO.
           MOVE GDG-IND-EST1 IN GDG TO GMO-COD-NCLV IN GMO.
           MOVE SPACES              TO GMO-GLS-NCMP IN GMO.
           MOVE ZEROES              TO GMO-SGV-NCMP IN GMO.
           MOVE GDG-COD-OFIC IN GDG TO GMO-COD-OFMV IN GMO.
           MOVE SPACES              TO GMO-COD-CLVA IN GMO.
           MOVE SPACES              TO GMO-COD-TMOV IN GMO.
           MOVE SPACES              TO GMO-GLS-DISP IN GMO.
           MOVE FIO-PUT TO FIO-CMND.
           PERFORM BGL-FIO-GMO.
      *ALD-ADA-INI/08112001
       CON-SIN-GRB-GMO.
      *ALD-ADA-FIN/08112001
      
       SIG-FIN-CMN-MOD.
      *>>>>
      *CGL-FIN 07-05-2003
      *>>>>
      *>>>>

           MOVE FIO-MOD TO FIO-CMND.
           PERFORM BGL-FIO-GDG.
      *<<<< FIN_CMN_MOD

           IF NOT FIO-STAT-OKS                                                  
      *        Error inconsistencia en la modificacion : informar               
               MOVE FIO-MENS TO FRM-MENS
               GO TO FIN-CMN-MOD.
      *<<<< GEN_BCI
      *PTC-INI-MAN
           IF NOT ( SCR-OFRM-SRV AND
                    SCR-CMND = 'MOD' )
      *PTC-FIN-MAN
      *>>>>
           IF WSS-OTRO-GDD
               PERFORM MOD-GDD
               IF NOT FIO-STAT-OKS
                   MOVE 'GDDMODERR' TO MSG-COD-MENS
                   MOVE 'BGL' TO MSG-COD-SIST
                   PERFORM GET-MSG
                   MOVE MSG-GLS-MENS TO FRM-MENS
                   GO TO FIN-CMN-MOD
               ELSE
                   NEXT SENTENCE
           ELSE
           IF WSS-PRIMER-GDD
               PERFORM PUT-GDD
               IF NOT FIO-STAT-OKS
                   MOVE 'GDDINGERR' TO MSG-COD-MENS
                   MOVE 'BGL' TO MSG-COD-SIST
                   PERFORM GET-MSG
                   MOVE MSG-GLS-MENS TO FRM-MENS
                   GO TO FIN-CMN-MOD.
      *
           IF SCR-CMND = 'CAN'                                           
              IF GDG-IND-EST1 IN GDG-FLD = '20'
                 MOVE 'CANOK ' TO MSG-COD-MENS                                 
              ELSE                                                          
                 MOVE 'CANOKTRAM ' TO MSG-COD-MENS.                            
      *
           IF SCR-CMND = 'CAN'                                           
               MOVE 'BGL'        TO MSG-COD-SIST
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS.
      *>>>>

       FIN-CMN-MOD.
           EXIT.

       CMN-ING SECTION.
       INI-CMN-ING.
           MOVE SPACES TO GDG.
      *<<<< INI_CMN_ING
           MOVE SPACES TO GDG-GLS-FLAG IN GDG.
           MOVE SPACES TO GDG-MSC-TACC IN GDG.
           MOVE SPACES TO GDG-CIC-UING IN GDG.
           MOVE 'I'    TO GDG-MSC-STAT IN GDG.
      *<<<< GEN_BCI
      *PTC-INI-MAN
           IF SCR-OFRM-SRV AND
              SCR-CCPP = 'ING'
              MOVE PTC-GDG-TYPE TO QUE-TYPE
              MOVE TSK-TERM-ALF TO QUE-TERM
              MOVE PTC-GDG-LENG TO QUE-LITM
              MOVE 1            TO  QUE-NITM
              MOVE QUE-GET      TO QUE-CMND
              PERFORM GNS-PRO-QUE
              IF QUE-STAT = QUE-STAT-OKS
                  MOVE QUE-ITEM TO PTC-GDG-ITEM
                  MOVE PTC-GDG-GDG-CAI-IGAR TO GDG-CAI-GTIA IN GDG-FLD
                  MOVE PTC-GDG-GDG-IIC-IGAR TO GDG-IIC-GTIA IN GDG-FLD
                  MOVE QUE-DEL      TO QUE-CMND
                  PERFORM GNS-PRO-QUE.
      *PTC-FIN-MAN      
      *>>>>
           PERFORM GET-FHOY.
           IF SCR-CCPP = 'ING' OR SCR-CMND = 'COP'
               MOVE 'I'      TO GDG-MSC-TACC    IN GDG
               MOVE HOY-FHOY TO GDG-FEC-FING IN GDG
           ELSE
               MOVE 'M'      TO GDG-MSC-TACC IN GDG.

           MOVE SPACES TO GDG-COD-EST2 IN GDG.
           MOVE SPACES TO GDG-IND-GTAC IN GDG.
           MOVE SPACES TO GDG-IND-RALZ IN GDG.
           MOVE SPACES TO GDG-IND-EST1 IN GDG.
           MOVE SPACES TO GDG-IND-EGDG IN GDG.
           MOVE SPACES TO GDG-IND-EGDD IN GDG.
           MOVE SPACES TO GDG-IND-EGES IN GDG.
           MOVE SPACES TO GDG-IND-EGLE IN GDG.
           MOVE SPACES TO GDG-IND-EGDO IN GDG.
           MOVE SPACES TO GDG-IND-EGSE IN GDG.
           MOVE SPACES TO GDG-IND-EGVT IN GDG.
           MOVE SPACES TO GDG-IND-EGTP IN GDG.
           MOVE SPACES TO GDG-IND-EGUB IN GDG.
           MOVE SPACES TO GDG-IND-EGAP IN GDG.
           MOVE SPACES TO GDG-IND-EGIN IN GDG.
           MOVE SPACES TO GDG-IND-EGSI IN GDG.
           MOVE SPACES TO GDG-IND-EGDP IN GDG.
           MOVE SPACES TO GDG-IND-TESP IN GDG.
           MOVE ZEROES TO GDG-FEC-FALZ IN GDG.
           MOVE ZEROES TO GDG-COD-TSCN IN GDG.
           MOVE SPACES TO GDG-GLS-DISP IN GDG. 
      *<<<< GEN_BCI
           PERFORM RET-ALL-GDG.
      *>>>>
      *FLB CST 22-09-1993
       GET-CIC-GDG.
      *FLB CST 22-09-1993
           IF GDG-IIC-GTIA IN GDG-FLD NOT > ZEROES
              PERFORM BUS-CIC-GAR
      *MHM-INI 21-AGO-2003
      *        MOVE GAR-CIC-OFIC IN CMA-VARI TO CIC-CAI-ICIC IN CIC
              MOVE GDG-CAI-GTIA IN GDG-FLD TO CIC-CAI-ICIC IN CIC
      *MHM-FIN 21-AGO-2003
              MOVE CIC-GET TO CIC-CMND
              PERFORM PRO-CIC
              IF CIC-STAT NOT = CIC-STAT-OKS
                   MOVE CIC-MENS TO FRM-MENS
                   MOVE FIO-STAT-NEX TO FIO-STAT
                   GO TO FIN-CMN-ING
              ELSE
                   MOVE CIC-CAI-ICIC TO GDG-CAI-GTIA IN GDG
                   MOVE CIC-IIC-ICIC TO GDG-IIC-GTIA IN GDG
      *<<<<
      *FLB CST 22-09-1993
                   MOVE FIO-GET-KEY TO FIO-CMND
                   PERFORM BGL-FIO-GDG
                   IF FIO-STAT-OKS
                       GO TO GET-CIC-GDG
                   ELSE
      *FLB CST 22-09-1993
      *>>>>
                   MOVE GDG-CAI-GTIA IN GDG TO GDG-CAI-GTIA IN GDG-FLD 
                   MOVE GDG-IIC-GTIA IN GDG TO GDG-IIC-GTIA IN GDG-FLD
                   MOVE 'GNS' TO MSG-COD-SIST
                   MOVE 'INGYES' TO MSG-COD-MENS
                   PERFORM GET-MSG
                   MOVE MSG-GLS-DESC TO FRM-MENS
                   MOVE CIC-CAI-ICIC TO WSS-CAI-MEN2
                   MOVE CIC-NUM-ICIC TO WSS-NUM-MEN2 IN WSS-FRM-MEN2
                   MOVE WSS-FRM-MEN2 TO FRM-MEN2.
      *>>>>

           PERFORM RET-STT-GDG.
           PERFORM RET-ALL-GDG.
           PERFORM RET-HDR-GDG.
      *<<<< CMN_ING
      *<<<< EVP-INI CMN_ING
      *<<<< FMT_CHI
           IF NOT ( DBC-IND-ICLI IN GDG-FLD = 'M' OR
      *>>>>
               ( CNE-DBC-CAI-ICLI NOT > SPACES AND
                 CNE-DBC-IIC-ICLI NOT > ZEROES )
                  )
      *<<<< GEN_BCI
                AND
      *       no se ingreso el cliente en GAR-PRO-IDP
              NOT ( CMA-IND-DAP IN CMA-VARI = 'S' AND
                    FRM-COD-DEUD IN GDG-FLD = 'S' )
      *>>>>
               PERFORM PUT-GDD
               IF NOT FIO-STAT-OKS
                   GO TO FIN-CMN-ING.

           MOVE GDG-IND-EST1 IN GDG TO GDG-COD-ESTA IN GDG.
      *<<<< FMT_CHI
      *AFRI-INI/JUL2004
           MOVE 'BGL'        TO TAB-COD-SIST FIO-SIST.
           MOVE 'VGA'        TO TAB-COD-TTAB IN TAB.
           MOVE 'GDGFMUTUO'  TO TAB-COD-CTAB IN TAB.
           MOVE FIO-GET-KEY  TO FIO-CMND.
           PERFORM GNS-FIO-TAB.
           IF FIO-STAT-OKS AND TAB-IND-VIGE = 'S'
              MOVE TAB-GLS-DATA             TO WSS-GLS-TGAR
              MOVE GDG-TIP-CGTA IN GDG-FLD  TO WSS-TIP-CGTA
              MOVE GDG-STP-CGTA IN GDG-FLD  TO WSS-STP-CGTA
              IF( WSS-COD-CGTA IN WSS-VARI = WSS-IND-TGAR(1) AND
                 WSS-IND-TGAR(1) > SPACES) OR
                ( WSS-COD-CGTA IN WSS-VARI = WSS-IND-TGAR(2) AND
                 WSS-IND-TGAR(2) > SPACES) OR
                ( WSS-COD-CGTA IN WSS-VARI = WSS-IND-TGAR(3) AND
                 WSS-IND-TGAR(3) > SPACES) OR
                ( WSS-COD-CGTA IN WSS-VARI = WSS-IND-TGAR(4) AND
                 WSS-IND-TGAR(4) > SPACES) OR
                ( WSS-COD-CGTA IN WSS-VARI = WSS-IND-TGAR(5) AND
                 WSS-IND-TGAR(5) > SPACES) OR
                ( WSS-COD-CGTA IN WSS-VARI = WSS-IND-TGAR(6) AND
                 WSS-IND-TGAR(6) > SPACES) OR
                ( WSS-COD-CGTA IN WSS-VARI = WSS-IND-TGAR(7) AND
                 WSS-IND-TGAR(7) > SPACES) OR
                ( WSS-COD-CGTA IN WSS-VARI = WSS-IND-TGAR(8) AND
                 WSS-IND-TGAR(8) > SPACES) OR
                ( WSS-COD-CGTA IN WSS-VARI = WSS-IND-TGAR(9) AND
                 WSS-IND-TGAR(9) > SPACES) OR
                ( WSS-COD-CGTA IN WSS-VARI = WSS-IND-TGAR(10) AND
                 WSS-IND-TGAR(10) > SPACES) 
                  PERFORM GRABAR-GAP
      *AFRI-DIC2004           
                  IF NOT FIO-STAT-OKS
                      GO TO FIN-CMN-ING
                  ELSE
                      MOVE 'S' TO GDG-IND-EGAP IN GDG.
      *AFRI-DIC2004  
      
      *AFRI-FIN/JUL2004   
           IF DBC-NUM-ICLI IN GDG-FLD NOT = ZEROES 
      *>>>>
               MOVE 'S' TO GDG-IND-EGDD IN GDG.

      *>>>> EVP-FIN CMN_ING
      *<<<<
           IF CMA-IND-DAP IN CMA-VARI = 'S'
               MOVE SPACES TO MSG-COD-MENS
               MOVE GDG-CAI-GTIA IN GDG-FLD TO GAR-CAI-GTIA
                                               IN CMA-VARI
               MOVE GDG-IIC-GTIA IN GDG-FLD TO GAR-IIC-GTIA
                                               IN CMA-VARI
               MOVE FRM-CAI-IOPD IN GDG-FLD TO FRM-CAI-IOPD
                                               IN CMA-VARI
               MOVE FRM-IIC-IOPD IN GDG-FLD TO FRM-IIC-IOPD
                                               IN CMA-VARI
               PERFORM GAR-PRO-IDP
               IF MSG-COD-MENS > SPACES
                   PERFORM GET-MSG
                   MOVE MSG-GLS-DESC TO FRM-MEN1
                   MOVE FRM-SUAR-MAL TO FRM-SUAR
                   GO TO FIN-CMN-ING
               ELSE
                   MOVE 1   TO GDG-COD-TSCN IN GDG
                   MOVE 'S' TO GDG-IND-EGDO IN GDG
                   MOVE 'S' TO GDG-IND-EGVT IN GDG.
      *>>>>
      *>>>>

           MOVE FIO-PUT TO FIO-CMND.
           PERFORM BGL-FIO-GDG.
      *<<<< LDC_SI AND PGM_MVS AND FIN_CMN_ING
      *<<<< GEN_BCI
      * PTC-INI-MAN
           IF SCR-OFRM-SRV AND
              FIO-STAT-OKS
               MOVE TSK-TERM-ALF TO WXGDG-FIGA-COD-TERM
               MOVE WXGDG-FIGA-COLA TO QUE-COLA
               MOVE WXGDG-FIGA-LITM TO QUE-LITM
               MOVE GDG-KEY-IGDG IN GDG TO QUE-ITEM
               MOVE QUE-PUT TO QUE-CMND
               PERFORM GNS-PRO-QUE.
      * PTC-FIN-MAN
      *>>>>
           IF SCR-IND-ENG IN SCR-VEC-ENG(SCR-IPRO) = 'S' 
                PERFORM EGR-FPEN-CIC.
      *>>>>
      *<<<< EVP-INI FINCMNING
      *<<<< FIN_CMN_ING
           IF NOT FIO-STAT-OKS                                                  
      *        Error inconsistencia en el ingreso : informar                    
               MOVE FIO-MENS TO FRM-MENS
               GO TO FIN-CMN-ING.                                               
      *>>>>
      *>>>> EVP-FIN FINCMNING
      *<<<< GEN_BCI
      *PTC-INI-MAN
           IF SCR-OFRM-SRV AND FIO-STAT-OKS AND SCR-IERR = 'N'
              MOVE WSX-NOM-TSGDG  TO QUE-COLA
              MOVE QUE-DEL        TO QUE-CMND
              PERFORM GNS-PRO-QUE
              MOVE GDG-KEY-IGDG IN GDG TO WSX-CIC-NGAR
              MOVE WSX-NOM-TSGDG  TO QUE-COLA
              MOVE WSX-LEN-TSGDG  TO QUE-LITM
              MOVE WSX-TAB-GDG    TO QUE-ITEM
              MOVE QUE-PUT        TO QUE-CMND
              PERFORM GNS-PRO-QUE.
       FIN-CMN-ING-2.
      *>>>>

       FIN-CMN-ING.
           EXIT.

       CMN-ACC SECTION.
       INI-CMN-ACC.
           IF SCR-STAT = SCR-STAT-ABT OR SCR-VFLD = SCR-VFLD-NOT
               MOVE 'ACCION NO REALIZADA' TO FRM-MENS

               GO TO FIN-CMN-ACC.
      *<<<< INI_CMN_ACC
      *<<<< GEN_BCI
           IF SCR-CMND = 'AGA' AND GAR-IND-GTAC IN CMA-VARI NOT = 'S'
               MOVE GDG-CAI-GTIA IN GDG-FLD TO GSO-CAI-GTIA IN GSO 
               MOVE GDG-IIC-GTIA IN GDG-FLD TO GSO-IIC-GTIA IN GSO
               MOVE 'GSO-KEY-IGDG' TO FIO-AKEY
               MOVE FIO-GET-KEY TO FIO-CMND
               PERFORM BGL-FIO-GSO
               IF FIO-STAT-OKS AND GSO-COD-ESGA IN GSO < '07' OR
                  FIO-STAT-OKS AND GSO-COD-ESGA IN GSO = '11'
                   MOVE 'S' TO SCR-IERR
                   MOVE 'BGL' TO MSG-COD-SIST
                   MOVE 'GDG NOAGA GSO' TO MSG-COD-MENS
                   PERFORM GET-MSG
                   MOVE MSG-GLS-DESC TO FRM-MENS
                   GO TO FIN-CMN-ACC.

           IF SCR-CMND NOT = 'AGA'
               GO TO CNT-SIN-GAP.

      *MHM-INI 03-DIC-2003
           MOVE SPACES TO WSS-IND-EGAP IN WSS-VARI.
           MOVE SPACES TO WSS-IND-GAPB IN WSS-VARI.
      *MHM-FIN 03-DIC-2003
           MOVE GDG-CAI-GTIA IN GDG-FLD TO GAP-CAI-GTIA IN GAP.
           MOVE GDG-IIC-GTIA IN GDG-FLD TO GAP-IIC-GTIA IN GAP.
           MOVE ZEROES                  TO GAP-COD-PACR IN GAP.
           MOVE FIO-GET-NLS TO FIO-CMND.
       LUP-LEE-GAP.
           PERFORM BGL-FIO-GAP.
           IF NOT ( FIO-STAT-OKS AND
              GAP-CAI-GTIA IN GAP = GDG-CAI-GTIA IN GDG-FLD AND
              GAP-IIC-GTIA IN GAP = GDG-IIC-GTIA IN GDG-FLD )
               GO TO CNT-SIN-GAP.
      *MHM-INI 03-DIC-2003
           MOVE 'S' TO WSS-IND-EGAP IN WSS-VARI.
      *MHM-FIN 03-DIC-2003
           IF GAP-IND-ESBA IN GAP = 'S'
      *MHM-INI 03-DIC-2003
               MOVE 'S' TO WSS-IND-GAPB IN WSS-VARI
      *MHM-FIN 03-DIC-2003
               MOVE GAP-CAI-GTIA IN GAP TO GLE-CAI-GTIA IN GLE
               MOVE GAP-IIC-GTIA IN GAP TO GLE-IIC-GTIA IN GLE
               MOVE GAP-COD-PACR IN GAP TO GLE-COD-PACR IN GLE
               MOVE FIO-GET-KEY TO FIO-CMND
               PERFORM BGL-FIO-GLE
               IF NOT FIO-STAT-OKS
                  MOVE 'S' TO SCR-IERR
                  MOVE 'BGL' TO MSG-COD-SIST
                  MOVE 'GDG NOAGAGLE' TO MSG-COD-MENS
                  PERFORM GET-MSG
                  MOVE MSG-GLS-DESC TO FRM-MENS
                  GO TO FIN-CMN-ACC.

           MOVE FIO-GET-NXT TO FIO-CMND.
           GO TO LUP-LEE-GAP.

       CNT-SIN-GAP.
      *MHM-INI 03-DIC-2003
           IF WSS-IND-EGAP IN WSS-VARI = 'S' AND
              WSS-IND-GAPB IN WSS-VARI NOT = 'S'
               MOVE 'S' TO SCR-IERR
               MOVE 'BGL' TO MSG-COD-SIST
               MOVE 'GDG GAPNOBCO' TO MSG-COD-MENS
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS
               GO TO FIN-CMN-ACC.
              
      *MHM-FIN 03-DIC-2003
      *MHM-INI 21-OCT-2003
           MOVE SPACES TO VCG-FEC-FVTO IN VCG-VARI.
           IF GDG-COD-LGTA IN GDG-FLD NOT = 'E'
               GO TO CNT-NO-ESPECIFICA.

           IF SCR-CMND NOT = 'AGA'
               GO TO CNT-NO-ESPECIFICA.

           MOVE GDG-TIP-CGTA IN GDG-FLD TO TAG-COD-TOPE IN TAG.
           MOVE GDG-STP-CGTA IN GDG-FLD TO TAG-COD-SOPE IN TAG.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM BGL-FIO-TAG.
           IF TAG-IND-SVTO IN TAG NOT = 'S'
               GO TO CNT-NO-ESPECIFICA.

           MOVE ZEROES TO WSS-NUM-SVTO IN WSS-VARI.
           MOVE ZEROES TO WSS-NUM-AVTO IN WSS-VARI.
           MOVE ZEROES TO WSS-NUM-MVTO IN WSS-VARI.
           MOVE ZEROES TO WSS-NUM-DVTO IN WSS-VARI.


           MOVE GDG-CAI-GTIA IN GDG-FLD TO GES-CAI-GTIA IN GES.
           MOVE GDG-IIC-GTIA IN GDG-FLD TO GES-IIC-GTIA IN GES.
           MOVE ZEROES              TO GES-NUM-IGES IN GES.
           MOVE FIO-GET-NLS TO FIO-CMND.
       LUP-LEE-GES-AGA.
           PERFORM BGL-FIO-GES.
           IF NOT ( FIO-STAT-OKS AND
              GES-CAI-GTIA IN GES = GDG-CAI-GTIA IN GDG-FLD AND
              GES-IIC-GTIA IN GES = GDG-IIC-GTIA IN GDG-FLD )
      *MHM-INI 21-OCT-2003
              IF FIO-STAT-OKS OR FIO-STAT-EOF
                 MOVE FIO-END-BRW TO FIO-CMND
                 PERFORM BGL-FIO-GES
                 GO TO CNT-NO-ESPECIFICA
              ELSE
      *MHM-FIN 21-OCT-2003
               GO TO CNT-NO-ESPECIFICA.

           MOVE GES-CAI-IOPC IN GES TO DLC-CAI-IOPC IN DLC.
           MOVE GES-IIC-IOPC IN GES TO DLC-IIC-IOPC IN DLC.
           MOVE GES-NUM-IDLC IN GES TO DLC-NUM-IDLC IN DLC.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM COL-FIO-DLC.
           IF NOT FIO-STAT-OKS
               MOVE 'BGL' TO MSG-COD-SIST
               MOVE 'DLC    NEX' TO MSG-COD-MENS
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS
               GO TO FIN-CMN-ACC.

           IF DLC-FEC-FMAV IN DLC > WSS-FEC-FVTO IN WSS-VARI
              MOVE DLC-FEC-FMAV IN DLC TO WSS-FEC-FVTO IN WSS-VARI
              MOVE WSS-NUM-SVTO TO VCG-NUM-SVTO IN VCG-VARI
              MOVE WSS-NUM-AVTO TO VCG-NUM-AVTO IN VCG-VARI
              MOVE WSS-NUM-MVTO TO VCG-NUM-MVTO IN VCG-VARI
              MOVE WSS-NUM-DVTO TO VCG-NUM-DVTO IN VCG-VARI.

           MOVE FIO-GET-NXT TO FIO-CMND.
           GO TO LUP-LEE-GES-AGA.

       CNT-NO-ESPECIFICA.
      *MHM-FIN 21-OCT-2003
      *>>>>
           MOVE GDG-CAI-GTIA IN GDG-FLD TO GAR-CAI-GTIA IN CMA-VARI.
           MOVE GDG-IIC-GTIA IN GDG-FLD TO GAR-IIC-GTIA IN CMA-VARI.
           PERFORM GAR-PRO-VCG.
           IF MSG-COD-MENS NOT = 'GAR    CPLOK'
      *<<<< GEN_BCI
      *FLB CST  17-FEB-1995
               MOVE FIO-BCK-OUT TO FIO-CMND
               PERFORM BGL-FIO-GDG
               GO TO FIN-CMN-ACC.
      *FLB CST  17-FEB-1995
      *MHM-INI 14-AUG-2003
           MOVE GDG-CAI-GTIA IN GDG-FLD TO GSO-CAI-GTIA IN GSO. 
           MOVE GDG-IIC-GTIA IN GDG-FLD TO GSO-IIC-GTIA IN GSO.
           MOVE 'GSO-KEY-IGDG' TO FIO-AKEY.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM BGL-FIO-GSO.
           IF NOT FIO-STAT-OKS
               GO TO ERR-CMN-ACC.

           MOVE FIO-GET-KEY-UPD TO FIO-CMND.
           PERFORM BGL-FIO-GSO.
           MOVE '10' TO GSO-COD-ESGA IN GSO.
           MOVE FIO-MOD TO FIO-CMND.
           PERFORM BGL-FIO-GSO.
           IF NOT FIO-STAT-OKS
               GO TO ERR-CMN-ACC.

           MOVE GSO-NUM-SBGL IN GSO TO GSL-NUM-SBGL IN GSL.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM BGL-FIO-GSL.
           IF NOT FIO-STAT-OKS
               GO TO ERR-CMN-ACC.

           MOVE FIO-GET-KEY-UPD TO FIO-CMND.
           PERFORM BGL-FIO-GSL.
           MOVE '10' TO GSL-COD-ESOL IN GSL.
           MOVE FIO-MOD TO FIO-CMND.
           PERFORM BGL-FIO-GSL.
           IF NOT FIO-STAT-OKS
               GO TO ERR-CMN-ACC.

       ERR-CMN-ACC.
      *MHM-FIN 14-AUG-2003
           GO TO FIN-CMN-ACC.
      *>>>>
      *>>>>

           PERFORM KEY-ALL-GDG.
           MOVE FIO-GET-KEY-UPD TO FIO-CMND.
           PERFORM BGL-FIO-GDG.
           IF FIO-STAT-OKS AND
              GDG-STP-ITRN IN GDG NOT = SCR-UMOD
               MOVE FIO-ULK-REC TO FIO-CMND
               PERFORM BGL-FIO-GDG
               MOVE FIO-BCK-OUT TO FIO-CMND
               PERFORM BGL-FIO-GDG
               MOVE 'GNS' TO MSG-COD-SIST
               MOVE 'GNSACCSSIMUL' TO MSG-COD-MENS
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS
               GO TO FIN-CMN-ACC.
           IF NOT FIO-STAT-OKS
               GO TO FIN-CMN-ACC.

           PERFORM RET-ALL-GDG.

       FIN-CMN-ACC.
           EXIT.

       CMN-ELI SECTION.
       INI-CMN-ELI.

           PERFORM KEY-ALL-GDG.
           MOVE FIO-GET-KEY-UPD TO FIO-CMND.
           PERFORM BGL-FIO-GDG.
           IF FIO-STAT-OKS AND
              GDG-STP-ITRN IN GDG NOT = SCR-UMOD
               MOVE FIO-ULK-REC TO FIO-CMND
               PERFORM BGL-FIO-GDG
               MOVE FIO-BCK-OUT TO FIO-CMND
               PERFORM BGL-FIO-GDG
               MOVE 'GNS' TO MSG-COD-SIST
               MOVE 'GNSACCSSIMUL' TO MSG-COD-MENS
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS
               GO TO FIN-CMN-ELI.
           IF NOT FIO-STAT-OKS
               GO TO FIN-CMN-ELI.
      *<<<< CMN_ELI
      *<<<< NOT (( PGM_VSI OR PGM_DB2 ) AND PGM_PU AND NOT PGM_VMS )
      *RRM-INI 31-MAY-2002
           IF GDG-IND-EST1 IN GDG NOT = '05'
               MOVE 'BGL' TO MSG-COD-SIST
               MOVE 'GDG NOELI' TO MSG-COD-MENS
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS
               GO TO FIN-CMN-ELI.
      
      
       SIGUE-COMANDO-ELI.
      *RRM-FIN 31-MAY-2002

           PERFORM GAR-PRO-ELI.
      *>>>>
      *>>>>

           MOVE FIO-DEL TO FIO-CMND.
           PERFORM BGL-FIO-GDG.
      *<<<< FIN_CMN_ELI
           IF NOT FIO-STAT-OKS
      *        Error inconsistencia en la eliminacion : informar
               MOVE FIO-MENS TO FRM-MENS
               GO TO FIN-CMN-ELI.

           PERFORM DEL-GDD.
           IF NOT FIO-STAT-OKS
               GO TO FIN-CMN-ELI.
      *>>>>

       FIN-CMN-ELI.
           EXIT.

       CMN-PGM SECTION.
       INI-CMN-PGM.

           PERFORM RET-ALL-GDG.

       FIN-CMN-PGM.
           EXIT.

       STP-EXIT SECTION.
       INI-STP-EXIT.

           MOVE SCR-PROG TO PGM-PROG.
           MOVE SCR-NTRN TO PGM-NTRN.

           MOVE SCR-PROV TO SCR-PROG.
           MOVE SCR-NTRV TO SCR-NTRN.

           MOVE PGM-PROG TO SCR-PROV
           MOVE PGM-NTRN TO SCR-NTRV.

       FIN-STP-EXIT.
           EXIT.

       SCR-EXIT SECTION.
       INI-SCR-EXIT.

           MOVE 'P'      TO SCR-ICMN.
           MOVE SCR-NTRN TO SYS-NTRN.

           MOVE SCR-VARI TO SYS-CMMA.
           MOVE SCR-TCMA TO SYS-TCMA.
           MOVE SYS-RTRN TO SYS-CMND.
      *PTC-INI
           IF NOT SCR-OFRM-SRV
      *PTC-FIN
           PERFORM GNS-PRO-SYS.
       FIN-SCR-EXIT.
           EXIT.

       SCR-PUTA SECTION.
       INI-SCR-PUTA.
      *<<<< INI_SCR_PUTA AND GEN_BCI
      *LOP-INI 12-12-2002
           IF WSS-IND-ALZA IN WSS-VARI ='ALS'
              MOVE 'ALS' TO SCR-CMND.
      *LOP-FIN 12-12-2002
      *>>>>

      *PTC-INI
           IF FRM-SUAR EQUAL FRM-SUAR-MAL OR FRM-SUAR-CLR
               MOVE 'S' TO SCR-IERR.
      *PTC-FIN
           MOVE SCR-NMAP TO FRM-NAME.
           MOVE SCR-NLIB TO FRM-NLIB.
           MOVE GDG-FLD TO FRM-DFLD.
           MOVE FRM-PUT-ALL TO FRM-CMND.
           PERFORM GNS-PRO-FRM.
       FIN-SCR-PUTA.
           EXIT.

       SCR-MSSG SECTION.
       INI-SCR-MSSG.
           IF FRM-MEN1 NOT > SPACES
               MOVE SPACES TO FRM-MEN1.
           IF FRM-MEN2 NOT > SPACES
               MOVE SPACES TO FRM-MEN2.
           MOVE FRM-MENS TO GDG-GLS-MENS.
       FIN-SCR-MSSG.
           EXIT.

       SCR-GFLD SECTION.
       INI-SCR-GFLD.
           MOVE SCR-NMAP TO FRM-NAME.
           MOVE SCR-NLIB TO FRM-NLIB.
           MOVE FRM-GET-ALL TO FRM-CMND.
           PERFORM GNS-PRO-FRM.

           MOVE SPACES TO FRM-MENS.

           IF NOT ( FRM-FFLD = FRM-FFLD-RET  OR FRM-FFLD-PF10 OR
                               FRM-FFLD-PF12 OR FRM-FFLD-PF3 )

               MOVE 'PFSINV    ' TO MSG-COD-MENS
               MOVE 'GNS' TO MSG-COD-SIST
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS
               PERFORM FST-FLD-GDG
               PERFORM SCR-MSSG
               PERFORM SCR-PUTA
               PERFORM SCR-EXIT.
           MOVE FRM-DFLD TO GDG-FLD.
           IF FRM-STAT-ABT
               GO TO FIN-SCR-GFLD.
           MOVE FRM-SUAR-OKS TO FRM-SUAR.
           PERFORM VAL-NUM-KEY-GDG.
           IF FRM-SUAR EQUAL FRM-SUAR-MAL OR FRM-SUAR-CLR
      *PTC-INI
               MOVE 'S' TO SCR-IERR
      *PTC-FIN
               PERFORM SCR-MSSG
               PERFORM EDT-KEY-GDG
               PERFORM SCR-PUTA
               PERFORM SCR-EXIT.
           PERFORM VAL-NUM-FLD-GDG.
           IF FRM-SUAR EQUAL FRM-SUAR-MAL OR FRM-SUAR-CLR
      *PTC-INI
               MOVE 'S' TO SCR-IERR
      *PTC-FIN
               PERFORM SCR-MSSG
               PERFORM EDT-KEY-GDG
               PERFORM EDT-FLD-GDG
               PERFORM SCR-PUTA
               PERFORM SCR-EXIT.

           PERFORM VAL-MKY-GDG.
           IF FRM-SUAR EQUAL FRM-SUAR-MAL OR FRM-SUAR-CLR
      *PTC-INI
               MOVE 'S' TO SCR-IERR
      *PTC-FIN
               GO TO ERR-SCR-GFLD.

           PERFORM VAL-FLD-GDG.
           IF FRM-SUAR EQUAL FRM-SUAR-MAL OR FRM-SUAR-CLR
               GO TO ERR-SCR-GFLD.

           PERFORM VAL-CON-FLD-GDG.
           IF NOT ( FRM-SUAR EQUAL FRM-SUAR-MAL OR FRM-SUAR-CLR )
               GO TO FIN-SCR-GFLD.
           IF FRM-UCUR NOT > SPACES
               PERFORM FST-FLD-GDG.
       ERR-SCR-GFLD.
      *PTC-INI
           MOVE 'S' TO SCR-IERR.
      *PTC-FIN

           PERFORM SCR-MSSG.
           PERFORM EDT-KEY-GDG.
           PERFORM EDT-FLD-GDG.
           PERFORM SCR-PUTA.
           PERFORM SCR-EXIT.
       FIN-SCR-GFLD.
      *<<<< LDC_SI AND PGM_MVS AND (FIN_SCR_GIKY OR FIN_SCR_GCNF OR FIN_SCR_GFLD)
           IF FRM-FFLD = FRM-FFLD-PF3 AND
              SCR-IND-ENG IN SCR-VEC-ENG(SCR-IPRO) = 'S' 
      *       AND SCR-IND-COL = 'C'
               PERFORM EGR-FTER-CIC.
      *>>>>

           MOVE SCR-STAT-MOD TO SCR-STAT.

       GET-ACC SECTION.
       INI-GET-ACC.
           MOVE SCR-NMAP TO FRM-NAME.
           MOVE SCR-NLIB TO FRM-NLIB.
           MOVE FRM-GET-ALL TO FRM-CMND.
           PERFORM GNS-PRO-FRM.
           IF NOT ( FRM-FFLD = FRM-FFLD-RET  OR FRM-FFLD-PF10 OR
                               FRM-FFLD-PF12 OR FRM-FFLD-PF3 )

               MOVE 'PFSINV    ' TO MSG-COD-MENS
               MOVE 'GNS' TO MSG-COD-SIST
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO GDG-GLS-MEN2
               MOVE SCR-PRMT     TO GDG-GLS-MEN1
               PERFORM FST-MSG
               PERFORM SCR-PUTA
               PERFORM SCR-EXIT.
           MOVE FRM-DFLD TO GDG-FLD.
           IF NOT ( ( FRM-FFLD = FRM-FFLD-PF12 OR FRM-FFLD-PF3 ) OR
                      SCR-CONF > SPACES )
               PERFORM VAL-NUM-KEY-GDG
               PERFORM VAL-NUM-FLD-GDG.

       FIN-GET-ACC.
           MOVE SCR-STAT-SON TO SCR-STAT.

       GET-CON SECTION.
       INI-GET-CON.
           MOVE SCR-NMAP TO FRM-NAME.
           MOVE SCR-NLIB TO FRM-NLIB.
           MOVE FRM-GET-ALL TO FRM-CMND.
           PERFORM GNS-PRO-FRM.
           IF NOT ( FRM-FFLD = FRM-FFLD-RET  OR FRM-FFLD-PF10 OR
                               FRM-FFLD-PF12 OR FRM-FFLD-PF3 )

               MOVE 'PFSINV    ' TO MSG-COD-MENS
               MOVE 'GNS' TO MSG-COD-SIST
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO GDG-GLS-MEN2
               MOVE SCR-PRMT     TO GDG-GLS-MEN1
               PERFORM FST-MSG
               PERFORM SCR-PUTA
               PERFORM SCR-EXIT.
           MOVE FRM-DFLD TO GDG-FLD.

       FIN-GET-CON.
           MOVE SCR-STAT-CON TO SCR-STAT.

       CLR-MSG SECTION.
       INI-CLR-MSG.
           MOVE SPACES TO GDG-GLS-MENS.
       FIN-CLR-MSG.
           EXIT.

       HBL-IKY SECTION.
       INI-HBL-IKY.

      *PTC-INI
           IF NOT SCR-OFRM-SRV
      *PTC-FIN
           IF SCR-DESDE-CMN
               MOVE GDG-GLS-MENS TO FRM-MENS
               MOVE LOW-VALUES TO GDG-FLD
      * FLB  7-NOV-1994
               PERFORM CLR-KEY-GDG

               IF FRM-MENS < SPACES
                   MOVE LOW-VALUES TO GDG-GLS-MENS
               ELSE
                   MOVE FRM-MENS TO GDG-GLS-MENS.
           PERFORM PRO-FLD-GDG.
           PERFORM PRO-MKY-GDG.
           PERFORM UNP-IKY-GDG.
           PERFORM FST-KEY-GDG.
      *<<<< LDC_SI AND PGM_MVS AND FIN_HBL_IKY
           IF SCR-IND-ENG IN SCR-VEC-ENG(SCR-IPRO) = 'S'
               PERFORM HBL-KEY-GDG.

           MOVE FRM-CPIM-AEY TO GDG-CAI-GTIA-ATR IN GDG-FLD.
           MOVE FRM-CPIM-AEY TO GDG-CAI-GTIA-STP.

           MOVE FRM-CPIM-AEY TO GDG-IIC-GTIA-ATR IN GDG-FLD.
           MOVE FRM-CPIM-AEY TO GDG-IIC-GTIA-STP.

           MOVE +0           TO GDG-CAI-GTIA-LEN IN GDG-FLD.
      *<<<< FMT_CHI

           MOVE -1           TO GDG-TIP-CGTA-LEN IN GDG-FLD.
      *>>>>
      *>>>>

       FIN-HBL-IKY.
           EXIT.

       HBL-KEY SECTION.
       INI-HBL-KEY.

      *PTC-INI
           IF NOT SCR-OFRM-SRV
      *PTC-FIN
           IF SCR-DESDE-CMN
               MOVE GDG-GLS-MENS TO FRM-MENS
               MOVE LOW-VALUES TO GDG-FLD
               IF FRM-MENS < SPACES
                   MOVE LOW-VALUES TO GDG-GLS-MENS
               ELSE
                   MOVE FRM-MENS TO GDG-GLS-MENS.
           MOVE FRM-CPSF-AEY TO FRM-CPIM-AEY.
           PERFORM PRO-FLD-GDG.
           MOVE '1' TO FRM-CPIM-AEY.
           PERFORM UNP-KEY-GDG.
           PERFORM FST-KEY-GDG.
      *<<<< FIN_HBL_KEY
           IF SCR-CCPP NOT = 'ING'
      *<<<< FMT_CHI
               MOVE FRM-CPIM-AEY TO GDG-TIP-CGTA-ATR IN GDG-FLD
               MOVE FRM-CPIM-AEY TO GDG-TIP-CGTA-STP
               MOVE FRM-CPIM-AEY TO GDG-STP-CGTA-ATR IN GDG-FLD
               MOVE FRM-CPIM-AEY TO GDG-STP-CGTA-STP.
      *>>>>
      *JGM()
      *>>>>

       FIN-HBL-KEY.
           EXIT.

       HBL-FLD SECTION.
       INI-HBL-FLD.

           PERFORM UNP-MKY-GDG.
           PERFORM UNP-FLD-GDG.
           PERFORM FST-FLD-GDG.
      * JGM-ini codigo que se agrega del BM
           MOVE FRM-CPIM-AEY TO GDG-FEC-FALZ-ATR IN GDG-FLD.             
           MOVE FRM-CPIM-AEY TO GDG-FEC-FALZ-STP.             

           MOVE FRM-CPIM-AEY TO GDG-IND-EST1-ATR IN GDG-FLD.         
           MOVE FRM-CPIM-AEY TO GDG-IND-EST1-STP.         

           MOVE FRM-CPIM-AEY TO GDG-COD-EST2-ATR IN GDG-FLD.
           MOVE FRM-CPIM-AEY TO GDG-COD-EST2-STP.

      *GDG-IND-EST1 = 05, 19
           IF SCR-CMND NOT = 'ING'  AND SCR-CMND NOT = 'MOD'
      *MHM-INI 7-AUG-2003
      *        MOVE FRM-CPIM-AEY TO GDG-IND-CLAS-ATR IN GDG-FLD
      *        MOVE FRM-CPIM-AEY TO GDG-IND-CLAS-STP
      
      *        MOVE FRM-CPIM-AEY TO GDG-VAL-MNTO-ATR IN GDG-FLD
      *        MOVE FRM-CPIM-AEY TO GDG-VAL-MNTO-STP
      *        MOVE FRM-CPIM-AEY TO GDG-COD-GORI-ATR IN GDG-FLD
      *        MOVE FRM-CPIM-AEY TO GDG-COD-GORI-STP
      
      *        MOVE FRM-CPIM-AEY TO GDG-COD-RFCP-ATR IN GDG-FLD
      *        MOVE FRM-CPIM-AEY TO GDG-COD-RFCP-STP
      *MHM-FIN 7-AUG-2003

              MOVE FRM-CPIM-AEY TO FRM-GLS-NOMC-ATR IN GDG-FLD
              MOVE FRM-CPIM-AEY TO FRM-GLS-NOMC-STP
      
              MOVE FRM-CPIM-AEY TO GDG-IND-CBAN-ATR IN GDG-FLD
              MOVE FRM-CPIM-AEY TO GDG-IND-CBAN-STP.
      
      *MHM-INI 13-AUG-2003
           IF SCR-CMND = 'MGA'
              MOVE FRM-CPIM-UBY TO FRM-GLS-NOMC-ATR IN GDG-FLD.
      *MHM-FIN 13-AUG-2003
      *MHM-INI 7-AUG-2003
      *        MOVE FRM-CPIM-AEY TO GDG-COD-DESP-ATR IN GDG-FLD
      *        MOVE FRM-CPIM-AEY TO GDG-COD-DESP-STP.
           IF SCR-CMND NOT = 'ALZ'
               MOVE FRM-CPIM-AEY TO GDG-COD-MALZ-ATR IN GDG-FLD.
      *MHM-INI 21-AUG-2003
      *     IF SCR-CMND = 'ING' OR SCR-CMND = 'MOD'
      *         MOVE FRM-CPIM-AEY TO GDG-COD-OFIC-ATR IN GDG-FLD
      *         MOVE FRM-CPIM-AEY TO GDG-CIC-EJOR-ATR IN GDG-FLD.
      *MHM-FIN 21-AUG-2003
           IF SCR-CMND NOT = 'MCA' AND SCR-CMND NOT = 'MGA'
               MOVE FRM-CPIM-AEY TO GDG-IND-ECRS-ATR IN GDG-FLD
               MOVE FRM-CPIM-AEY TO GDG-COD-RERS-ATR IN GDG-FLD
               MOVE FRM-CPIM-AEY TO GDG-FEC-FVES-ATR IN GDG-FLD
               MOVE FRM-CPIM-AEY TO GDG-IND-ECRT-ATR IN GDG-FLD
               MOVE FRM-CPIM-AEY TO GDG-COD-RERT-ATR IN GDG-FLD
               MOVE FRM-CPIM-AEY TO GDG-FEC-FVET-ATR IN GDG-FLD.
      *MHM-INI 21-AUG-2003
      *     IF SCR-CMND = 'ING' OR SCR-CMND = 'MOD'
      *         MOVE FRM-CPIM-AEY TO GDG-FEC-FVTO-ATR IN GDG-FLD.
      *MHM-FIN 7-AUG-2003
      *<<<< NOT PGM_ARG
      *>>>>
           IF SCR-CCPP = 'ING'
      *MHM-INI 16-OCT-2003
               MOVE FRM-CPIM-AEY TO GDG-FEC-FEST-ATR IN GDG-FLD
      *MHM-FIN 16-OCT-2003
               MOVE SPACES TO WSS-EST-ANT IN CMA-VARI
               MOVE SPACES TO WSS-ES2-ANT IN CMA-VARI
               PERFORM ANL-HBL-FEC-VTO
               GO TO INI-FECHA-HOY.

           IF SCR-CCPP = 'MOD'
      *MHM-INI 12-NOV-2003
               MOVE FRM-CPIM-AEY TO GDG-FEC-FEST-ATR IN GDG-FLD
      *MHM-FIN 12-NOV-2003
               PERFORM ANL-HBL-DBC-ICLI
               PERFORM ANL-HBL-FEC-VTO
               IF SCR-CMND = 'MOD'
      *           MOVE FRM-POS-CURS TO GDG-COD-OFIC-LEN IN GDG-FLD
                  GO TO INI-FECHA-HOY.
 
      *MHM-INI 21-AUG-2003
      *     MOVE FRM-CPIM-AEY TO GDG-COD-OFIC-ATR IN GDG-FLD.
      *     MOVE FRM-CPIM-AEY TO GDG-COD-OFIC-STP.
      *MHM-FIN 21-AUG-2003

           MOVE FRM-CPIM-AEY TO GDG-COD-VCAM-ATR IN GDG-FLD.
           MOVE FRM-CPIM-AEY TO GDG-COD-VCAM-STP.

           MOVE FRM-CPIM-AEY TO GDG-COD-LGTA-ATR  IN GDG-FLD.
           MOVE FRM-CPIM-AEY TO GDG-COD-LGTA-STP.

           MOVE FRM-CPIM-AEY TO GDG-FEC-FSOL-ATR IN GDG-FLD.
           MOVE FRM-CPIM-AEY TO GDG-FEC-FSOL-STP.

      *<<<< FMT_CHI
           MOVE FRM-CPIM-AEY TO DBC-NUM-ICLI-ATR IN GDG-FLD.
           MOVE FRM-CPIM-AEY TO DBC-VRF-ICLI-ATR IN GDG-FLD.
           MOVE FRM-CPIM-AEY TO DBC-IND-ICLI-ATR IN GDG-FLD.
           MOVE FRM-CPIM-AEY TO DBC-GLS-ICLI-ATR IN GDG-FLD.
      *>>>>

           MOVE FRM-CPIM-AEY TO DBC-GLS-NOMC-ATR IN GDG-FLD.
           MOVE FRM-CPIM-AEY TO DBC-GLS-NOMC-STP.

      *
      *------------------------------------------------*
           IF SCR-CMND = 'MGA'
      *RRM-INI
               MOVE FRM-CPIM-AEY TO GDG-FEC-FEST-ATR IN GDG-FLD
               MOVE FRM-CPIM-AEY TO GDG-FEC-FEST-STP
              MOVE FRM-POS-CURS TO GDG-GLS-DGTA-LEN IN GDG-FLD
      
              MOVE FRM-CPIM-AEY TO GDG-IND-EST1-ATR IN GDG-FLD
              MOVE FRM-CPIM-AEY TO GDG-IND-EST1-STP
      *

      *<<<< FMT_CHI
      *MHM-INI 13-OCT-2003
      *        MOVE FRM-CPIM-AEY TO FRM-NUM-ICLI-ATR IN GDG-FLD
      *        MOVE FRM-CPIM-AEY TO FRM-VRF-ICLI-ATR IN GDG-FLD
      *        MOVE FRM-CPIM-AEY TO FRM-IND-ICLI-ATR IN GDG-FLD
      *        MOVE FRM-CPIM-AEY TO FRM-GLS-ICLI-ATR IN GDG-FLD
      *MHM-FIN 13-OCT-2003
      *>>>>
      *
      *MHM-INI 13-OCT-2003
      *        MOVE FRM-CPIM-AEY  TO FRM-GLS-NOMC-ATR IN GDG-FLD
      *        MOVE FRM-CPIM-AEY  TO FRM-GLS-NOMC-STP
      *MHM-FIN 13-OCT-2003
      *
              GO TO ANL-HBL-FECHA-HOY.
      *--------------------------------------------------*
           IF SCR-CMND = 'AGA'
               MOVE FRM-POS-CURS TO GDG-GLS-MENS-LEN IN GDG-FLD
              GO TO ANL-HBL-FECHA-HOY.
      *--------------------------------------------------*
           IF SCR-CMND NOT = 'ALZ' AND  
                       NOT = 'EJE' AND
                       NOT = 'CAN' AND
                       NOT = 'CAD'
              GO TO ANL-HBL-FECHA-HOY.
      *------------------------------------------------*           
           MOVE FRM-CPIM-AEY TO GDG-GLS-DGTA-ATR IN GDG-FLD.
           MOVE FRM-CPIM-AEY TO GDG-GLS-DGTA-STP.

           MOVE FRM-CPIM-AEY TO GDG-GLS-DGT1-ATR IN GDG-FLD.
           MOVE FRM-CPIM-AEY TO GDG-GLS-DGT1-STP.

           MOVE FRM-CPIM-AEY TO GDG-CIC-EJOR-ATR IN GDG-FLD.
           MOVE FRM-CPIM-AEY TO GDG-CIC-EJOR-STP.

      *MHM-INI 21-AUG-2003
      *     MOVE FRM-CPIM-AEY TO GDG-FEC-FVTO-ATR IN GDG-FLD.
      *     MOVE FRM-CPIM-AEY TO GDG-FEC-FVTO-STP.
      *MHM-FIN 21-AUG-2003

      *<<<< FMT_CHI
           MOVE FRM-CPIM-AEY TO FRM-NUM-ICLI-ATR IN GDG-FLD.
           MOVE FRM-CPIM-AEY TO FRM-VRF-ICLI-ATR IN GDG-FLD.
           MOVE FRM-CPIM-AEY TO FRM-IND-ICLI-ATR IN GDG-FLD.
           MOVE FRM-CPIM-AEY TO FRM-GLS-ICLI-ATR IN GDG-FLD.
      *>>>>

           MOVE FRM-CPIM-AEY TO GDG-FEC-FEST-ATR IN GDG-FLD.
           MOVE FRM-CPIM-AEY TO GDG-FEC-FEST-STP.

           MOVE FRM-CPIM-AEY TO GDG-IND-INOB-ATR IN GDG-FLD.
           MOVE FRM-CPIM-AEY TO GDG-IND-INOB-STP.

           IF SCR-CMND = 'ALZ' OR = 'CAN' OR SCR-CMND = 'CAD'
              MOVE FRM-CPIM-UBY TO GDG-FEC-FALZ-ATR IN GDG-FLD
              MOVE FRM-CPIM-UST TO GDG-FEC-FALZ-STP

              MOVE FRM-CPIM-UBY TO GDG-IND-EST1-ATR IN GDG-FLD
              MOVE FRM-CPIM-UST TO GDG-IND-EST1-STP
              GO TO ANL-HBL-FECHA-HOY.

           IF SCR-CMND = 'EJE'
              MOVE FRM-CPIM-UBY TO GDG-COD-EST2-ATR IN GDG-FLD
              MOVE FRM-CPIM-UST TO GDG-COD-EST2-STP

      *MHM-INI 14-OCT-2003
      *        MOVE FRM-CPIM-UBY TO GDG-FEC-FALZ-ATR IN GDG-FLD
      *        MOVE FRM-CPIM-UST TO GDG-FEC-FALZ-STP
      *MHM-FIN 14-OCT-2003

              MOVE FRM-CPIM-UBY TO GDG-IND-EST1-ATR IN GDG-FLD
              MOVE FRM-CPIM-UST TO GDG-IND-EST1-STP.

       ANL-HBL-FECHA-HOY.
           GO TO INI-FECHA-HOY.                 
          

       ANL-HBL-DBC-ICLI.
           IF MULTIPLES-GDD
      *<<<< FMT_CHI
               MOVE FRM-CPIM-AEY TO DBC-NUM-ICLI-ATR IN GDG-FLD
               MOVE FRM-CPIM-AEY TO DBC-VRF-ICLI-ATR IN GDG-FLD
               MOVE FRM-CPIM-AEY TO DBC-IND-ICLI-ATR IN GDG-FLD
               MOVE FRM-CPIM-AEY TO DBC-GLS-ICLI-ATR IN GDG-FLD
      *>>>>

               MOVE FRM-CPIM-AEY TO DBC-GLS-NOMC-ATR IN GDG-FLD
               MOVE FRM-CPIM-AEY TO DBC-GLS-NOMC-STP.
       ANL-HBL-COD-GRA.
       ANL-HBL-FEC-VTO.
           IF GAR-IND-SVTO IN CMA-VARI = 'N'
               MOVE FRM-CPIM-AEY TO GDG-FEC-FVTO-ATR IN GDG-FLD
               MOVE FRM-CPIM-AEY TO GDG-FEC-FVTO-STP

               IF SCR-CCPP = 'ING'
                   MOVE ZEROES TO GDG-NUM-SVTO IN GDG-FLD
                   MOVE ZEROES TO GDG-NUM-AVTO IN GDG-FLD
                   MOVE ZEROES TO GDG-NUM-MVTO IN GDG-FLD
                   MOVE ZEROES TO GDG-NUM-DVTO IN GDG-FLD.

      *RRM-INI 3-JUL-2002
           IF SCR-CCPP = 'MOD' AND SCR-OFRM-SRV
               MOVE FRM-CPIM-UBY TO GDG-FEC-FVTO-ATR IN GDG-FLD
               MOVE FRM-CPIM-UST TO GDG-FEC-FVTO-STP.
      *RRM-FIN 3-JUL-2002

      * 
        INI-FECHA-HOY.  
           IF SCR-CCPP =  'ING'
               PERFORM GET-FHOY
               MOVE HOY-FHOY TO GDG-FEC-FING IN GDG
               MOVE GDG-NUM-SING IN GDG TO GDG-NUM-SING IN GDG-FLD
               MOVE GDG-NUM-AING IN GDG TO GDG-NUM-AING IN GDG-FLD
               MOVE GDG-NUM-MING IN GDG TO GDG-NUM-MING IN GDG-FLD
               MOVE GDG-NUM-DING IN GDG TO GDG-NUM-DING IN GDG-FLD.
      * 
      *fin-JGM.
      *>>>>

       FIN-HBL-FLD.
           EXIT.

       FST-MSG SECTION.
       INI-FST-MSG.
           MOVE -1 TO GDG-GLS-MENS-LEN.
       FIN-FST-MSG.
           EXIT.

       PRO-ALL SECTION.
       INI-PRO-ALL.

           PERFORM PRO-KEY-GDG.
           PERFORM PRO-FLD-GDG.
           PERFORM FST-MSG.

       FIN-PRO-ALL.
           EXIT.

       SCR-TRL SECTION.
       INI-SCR-TRL.
      * PTC-INI
           IF SCR-STAT NOT = SCR-STPP
               MOVE FRM-SUAR-MAL TO FRM-SUAR.
      * PTC-FIN


           IF FRM-MEN1 NOT > SPACES
               MOVE SCR-PRMT TO FRM-MEN1.
      *<<<< LDC_SI AND PGM_MVS AND FIN_SCR_TRL
           IF SCR-IND-ENG IN SCR-VEC-ENG(SCR-IPRO) = 'S'
               MOVE 'F10GDGNINFIA' TO MSG-COD-MENS
               PERFORM MSG-PF10.
      *>>>>

           IF SCR-STAT = SCR-STAT-MOD
               PERFORM HBL-FLD
               PERFORM SCR-MSSG
               PERFORM EDT-KEY-GDG
               PERFORM EDT-FLD-GDG
               PERFORM SCR-PUTA
               MOVE SCR-INST-GFL TO SCR-INST
               PERFORM SCR-EXIT.
           IF SCR-STAT = SCR-STAT-SON
               PERFORM PRO-ALL
               PERFORM SCR-MSSG
               PERFORM EDT-KEY-GDG
               PERFORM EDT-FLD-GDG
               PERFORM SCR-PUTA
               MOVE SCR-INST-GCS TO SCR-INST
               PERFORM SCR-EXIT.
      *ASUME SCR-STAT-CON.
           MOVE SCR-STAT-CON TO SCR-STAT.
      *    MOVE FRM-CPSF-AEY TO FRM-CPIM-AEY.
           PERFORM PRO-ALL.
           PERFORM SCR-MSSG.
           PERFORM EDT-KEY-GDG.
           PERFORM EDT-FLD-GDG.
           PERFORM SCR-PUTA.
           MOVE SCR-INST-GAB TO SCR-INST.
           PERFORM SCR-EXIT.
       FIN-SCR-TRL.
           EXIT.

       DESSCRTRL SECTION.
       INI-DESSCRTRL.
           IF SCR-INST = SCR-INST-GCF
                  PERFORM SCR-GCNF
                  GO TO FIN-DESSCRTRL.
           MOVE SCR-VFLD-NOT TO SCR-VFLD.
           MOVE FRM-FFLD TO SCR-FFLD.
           IF SCR-STAT = SCR-STAT-ABT OR SCR-STAT-CON
                  GO TO FIN-DESSCRTRL.
           IF SCR-FFLD-RET OR SCR-FFLD-PF10
                  MOVE SCR-VFLD-YES TO SCR-VFLD
                  PERFORM PRO-CONF.
       FIN-DESSCRTRL.
           IF SCR-FFLD-PF10 OR SCR-FFLD-PF3
                 MOVE SCR-INST-HCM TO SCR-INST
           ELSE
                 MOVE SCR-INST-HKY TO SCR-INST.
       EXT-DESSCRTRL.
           EXIT.

       PRO-CONF SECTION.
       INI-PRO-CONF.
      *<<<< ISP-INI  24-JAN-1996 11:35:48 
           IF SCR-OFRM-SRV
               IF SCR-CONF NOT > SPACES
                   GO TO FIN-PRO-CONF.
      *<<<< ISP-FIN  24-JAN-1996 11:35:48 
      *<<<< LDC_SI AND PGM_MVS AND INI_PRO_CONF
           IF SCR-IND-ENG IN SCR-VEC-ENG(SCR-IPRO) = 'S'
               MOVE 'F10GDGSINFIA' TO MSG-COD-MENS
               PERFORM MSG-PF10.
      *>>>>

      *PTC-INI
           IF SCR-OFRM-SRV AND
              SCR-CONF NOT > SPACES
                MOVE SPACES TO FRM-MENS.
      *PTC-FIN
           IF FRM-MENS NOT > SPACES
               IF SCR-CONF NOT > SPACES
                   GO TO FIN-PRO-CONF
               ELSE
                   MOVE SCR-CONF TO FRM-MENS
           ELSE
               IF FRM-MEN1 NOT > SPACES
                   MOVE SCR-CONF TO FRM-MEN1.
           PERFORM PRO-KEY-GDG.
           PERFORM PRO-FLD-GDG.
           PERFORM FST-MSG.

           PERFORM SCR-MSSG.
           IF SCR-STAT = SCR-STAT-MOD
               PERFORM EDT-KEY-GDG
               PERFORM EDT-FLD-GDG.
           PERFORM SCR-PUTA.
           MOVE SCR-INST-GCF TO SCR-INST.
           PERFORM SCR-EXIT.
       FIN-PRO-CONF.
           EXIT.

       SCR-GCNF SECTION.
       INI-SCR-GCNF.
           MOVE SCR-NMAP TO FRM-NAME.
           MOVE SCR-NLIB TO FRM-NLIB.
           MOVE FRM-GET-ALL TO FRM-CMND.
           PERFORM GNS-PRO-FRM.
           IF NOT ( FRM-FFLD = FRM-FFLD-RET  OR FRM-FFLD-PF10 OR
                               FRM-FFLD-PF12 OR FRM-FFLD-PF3  OR
                               FRM-FFLD-PF4 )

               MOVE 'PFSINV    ' TO MSG-COD-MENS
               MOVE 'GNS' TO MSG-COD-SIST
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO GDG-GLS-MEN2
               MOVE SCR-CONF     TO GDG-GLS-MEN1
               PERFORM FST-MSG
               PERFORM SCR-PUTA
               PERFORM SCR-EXIT.
           MOVE FRM-DFLD TO GDG-FLD.
           MOVE FRM-FFLD TO SCR-FFLD.
           IF FRM-FFLD = FRM-FFLD-PF3
               MOVE SCR-VFLD-NOT TO SCR-VFLD
           ELSE
           IF FRM-FFLD = FRM-FFLD-RET OR FRM-FFLD-PF10 OR FRM-FFLD-PF4
               MOVE SCR-VFLD-YES TO SCR-VFLD
               PERFORM VAL-NUM-KEY-GDG
               PERFORM VAL-NUM-FLD-GDG
           ELSE
           IF FRM-FFLD = FRM-FFLD-PF12
               MOVE SCR-STPP TO SCR-STAT
               IF SCR-STAT = SCR-STAT-MOD
                   PERFORM VAL-NUM-KEY-GDG
                   PERFORM VAL-NUM-FLD-GDG
                   PERFORM SCR-TRL
               ELSE
                   MOVE SCR-VFLD-NOT TO SCR-VFLD.
      *<<<< LDC_SI AND PGM_MVS AND (FIN_SCR_GIKY OR FIN_SCR_GCNF OR FIN_SCR_GFLD)
           IF FRM-FFLD = FRM-FFLD-PF3 AND
              SCR-IND-ENG IN SCR-VEC-ENG(SCR-IPRO) = 'S' 
      *       AND SCR-IND-COL = 'C'
               PERFORM EGR-FTER-CIC.
      *>>>>

       FIN-SCR-GCNF.
           EXIT.

      * PGM-EBR-ALL SECTION.
      * INI-PGM-EBR-ALL.
      *     MOVE 'GNS' TO FIO-SIST.
      *     MOVE FIO-EBR-ALL TO FIO-CMND.
      *     PERFORM GNS-FIO-TAB.
      * FIN-PGM-EBR-ALL.
      *     EXIT.

       RET-STT-GDG SECTION.
       INI-RET-STT-GDG.
           IF SCR-CCPP = 'ING'
               MOVE 'I' TO GDG-MSC-TACC IN GDG
               MOVE 'I' TO GDG-MSC-STAT IN GDG
           ELSE
           IF SCR-CCPP = 'MOD'
               MOVE 'M' TO GDG-MSC-TACC IN GDG
               MOVE 'M' TO GDG-MSC-STAT IN GDG.
       FIN-RET-STT-GDG.
           EXIT.

       RET-HDR-GDG SECTION.
       INI-RET-HDR-GDG.
           PERFORM GET-FHOY.
      *    Fecha Transaccion
           MOVE HOY-FHOY TO GDG-FEC-FTRN IN GDG.
      *    Hora Transaccion
           MOVE HOY-HHOY TO GDG-HRA-HRTR IN GDG.
      *    Codigo Origen transaccion
      *<<<< NOT PGM_VMS
           MOVE SCR-OTRN TO GDG-COD-OTRN IN GDG.
      *    Autor Transaccion
           MOVE SCR-USER TO GDG-COD-ATRN IN GDG.
      *>>>>
       FIN-RET-HDR-GDG.
           EXIT.

       COPY BGLBUGDG.
       COPY GNSBVNUM.
       COPY BGLBFGDG.
       COPY GNSBFMSG.
       COPY GNSBGSYS.
       COPY GNSBGDTC.
      *PTC-INI
      *PTC-SUB
      * ISP  10-MAY-2001 13:46:35 
      * COPY GNSBGFRM.
       COPY GNSBG3CF.
      *PTC-FIN
       COPY GNSBGMSG.
       COPY GNSBEKEY.
       COPY GNSBIABT.
       COPY GNSBBTAB.
       COPY GNSBVCOD.
       COPY GNSBVTAB.
       COPY GNSBFTAB.
       COPY GNSBVIND.
       COPY GNSBVMSC.
       COPY GNSBFMSC.
       COPY GNSBVIDC.
       COPY GNSBPVRF.
       COPY GNSBEGLS.
       COPY GNSBGFEC.
       COPY GNSBGHOY.
       COPY TABBBOFI.
       COPY TABBVOFI.
       COPY TABBFOFI.
       COPY TABBVTDU.
       COPY TABBFUSR.
      *PTC-INI
       COPY GNSBGQUE.
       COPY GNSBGTSK.
      *PTC-FIN

      *<<<< LDC_SI AND PGM_MVS AND EOF
       MSG-PF10 SECTION.
       INI-MSG-PF10.
           MOVE 'DEU' TO MSG-COD-SIST.
           PERFORM GET-MSG.
           MOVE MSG-GLS-DESC TO FRM-MEN2.
           MOVE FRM-MEN2     TO GDG-GLS-MEN2 IN GDG-FLD.
       FIN-MSG-PF10.
           EXIT.

       HBL-KEY-GDG SECTION.
       INI-HBL-KEY-GDG.
           MOVE SCR-INST-GKY TO SCR-INST.
           MOVE FRM-CPIM-AEY TO GDG-CAI-GTIA-ATR IN GDG-FLD.
           MOVE FRM-CPIM-AEY TO GDG-CAI-GTIA-STP.

           MOVE FRM-CPIM-AEY TO GDG-IIC-GTIA-ATR IN GDG-FLD.
           MOVE FRM-CPIM-AEY TO GDG-IIC-GTIA-STP.
      *<<<< GEN_BCI
      *<<<< ISP-INI  24-JAN-1996 11:35:48 
      * EN MTX DEBE CAPTURAR LLAVES DE USUARIO EN PANTALLA
           IF SCR-OFRM-SRV
               MOVE SCR-NMAP TO FRM-NAME
               MOVE SCR-NLIB TO FRM-NLIB
               MOVE FRM-GET-ALL TO FRM-CMND
               PERFORM GNS-PRO-FRM
               MOVE FRM-DFLD TO GDG-FLD
               PERFORM VAL-NUM-KEY-GDG
               PERFORM VAL-NUM-FLD-GDG
           ELSE
      *>>>> ISP-INI  24-JAN-1996 11:35:48 
      *>>>>

           PERFORM SCR-CLRA-GDG.

      * 
           MOVE PGM-NO-LIMPIAR-NADA TO PGM-ICLR.

           MOVE SCR-CAI-IGAR IN SCR-VARI TO GDG-CAI-GTIA IN GDG-FLD.
           MOVE SCR-IIC-IGAR IN SCR-VARI TO GDG-IIC-GTIA IN GDG-FLD.

           MOVE +4           TO GDG-CAI-GTIA-LEN IN GDG-FLD.
      *<<<< FMT_CHI
           MOVE FRM-POS-CURS TO GDG-TIP-CGTA-LEN IN GDG-FLD.
      *>>>>

      *
           PERFORM EDT-KEY-GDG.
           PERFORM EDT-FLD-GDG.
           MOVE 'F10GDGNINFIA' TO MSG-COD-MENS.
           PERFORM MSG-PF10.

      *<<<< GEN_BCI
      *<<<< ISP-INI  24-JAN-1996 11:35:48 
      * BAJO MTX DEBE REGRABAR PANTALLA Y LLAMAR A SCR-ING

           IF SCR-OFRM-SRV
           IF SCR-IND-FST IN SCR-VEC-FST(SCR-IPRO) = 'S'

               MOVE GDG-FLD TO FRM-DFLD

      * INI - COPY - GNSBGFRM
               MOVE SCR-OTRN TO QUE-TERM
               MOVE 'TSI'    TO QUE-TYPE
               MOVE 1        TO QUE-NITM
               MOVE +2014    TO QUE-LITM
               MOVE QUE-DEL  TO QUE-CMND
               PERFORM GNS-PRO-QUE
               MOVE SCR-OTRN TO QUE-TERM
               MOVE 'TSI'    TO QUE-TYPE
               MOVE 1        TO QUE-NITM
               MOVE +2014    TO QUE-LITM
               MOVE FRM-DFLD TO FRM-AUXI
      * NO DEBE GRABAR TSI EN FORMATO MTX, SI NO QUE EN FORMATO
      * PROGRAMA. ESTE PROGRAMA RELEERA TSI SIN PASAR POR MTX
      *         MOVE MSG-COD-MENS TO FRM-COD-MENS
      *         MOVE FRM-MENS     TO FRM-GLS-MENS
      *         MOVE FRM-AUXI     TO FRM-DATA
      *         MOVE FRM-NAME TO FRM-NAME-IDEN
               MOVE FRM-DFLD TO QUE-DATA
               MOVE QUE-PUT  TO QUE-CMND
               PERFORM GNS-PRO-QUE
      * FIN - COPY - GNSBGFRM

               PERFORM SCR-ING.

      *<<<< ISP-INI  24-JAN-1996 11:35:48 
      *>>>>
           IF SCR-IND-FST IN SCR-VEC-FST(SCR-IPRO) = 'S'
               MOVE SPACES TO SCR-IND-FST IN SCR-VEC-FST(SCR-IPRO)
               PERFORM SCR-INIT
               PERFORM SCR-EXIT
           ELSE
      *<<<< GEN_BCI
      *<<<< ISP-INI  24-JAN-1996 11:35:48 
           IF SCR-OFRM-SRV
                EXEC CICS
                 RETURN
                END-EXEC.
      *<<<< ISP-FIN  24-JAN-1996 11:35:48 
      *>>>>
               PERFORM SCR-PUTA.
       FIN-HBL-KEY-CLF.
           EXIT.

      *  CODIGO ADICIONAL PARA ENGANCHE PROGRAMAS
       ING-FPEN-CIC SECTION.
       INI-ING-FPEN-CIC.
           PERFORM ING-SETE.
           PERFORM SCR-CLRA-GDG.
           MOVE SCR-MENS-EXT TO GDG-GLS-MENS.
           PERFORM HBL-IKY.
       FIN-ING-FPEN-CIC.
           EXIT.

       ING-SETE SECTION.
       INI-ING-SETE.
           PERFORM CRG-TBL-ENG.
           MOVE WSS-NTRN(SCR-IPRO)     TO SCR-NTRN.
           MOVE WSS-PROG(SCR-IPRO)     TO SCR-PROG.
           MOVE WSS-NMAP(SCR-IPRO)     TO SCR-NMAP.
           MOVE WSS-NLIB(SCR-IPRO)     TO SCR-NLIB.

           MOVE WSS-NTRV(SCR-IPRO)     TO SCR-NTRV.
           MOVE WSS-PROV(SCR-IPRO)     TO SCR-PROV.
       FIN-ING-SETE.
           EXIT.

       EGR-FPEN-CIC SECTION.
       INI-EGR-FPEN-CIC.
           PERFORM CRG-TBL-ENG.
           ADD 1 TO SCR-IPRO.
           IF SCR-IPRO > WSS-TOT-IIDX
                  PERFORM EGR-FTER-CIC
                  GO TO FIN-EGR-FPEN-CIC.
           IF SCR-IND-ENG IN SCR-VEC-ENG(SCR-IPRO) = SPACES
               GO TO INI-EGR-FPEN-CIC.

           MOVE WSS-INST-FPEN-CIC TO SCR-INST-EXT.
           MOVE WSS-PROG(SCR-IPRO) TO SYS-PROG.
           MOVE SCR-VARI TO SYS-CMMA.
           MOVE SCR-TCMA TO SYS-TCMA.
           MOVE SYS-XCTL TO SYS-CMND.
      *<<<< GEN_BCI
      *<<<< ISP-INI  24-JAN-1996 11:35:48 
           IF SCR-OFRM-SRV
               MOVE WSS-IDX-IGDG TO SCR-IPRO
           ELSE
      *>>>> ISP-FIN  24-JAN-1996 11:35:48 
      *>>>>
           PERFORM GNS-PRO-SYS.
       FIN-EGR-FPEN-CIC.
           EXIT.

       EGR-FTER-CIC SECTION.
       INI-EGR-FTER-CIC.
           PERFORM CRG-TBL-ENG.
           MOVE WSS-IDX-ILDC TO SCR-IPRO.
           MOVE 'S' TO SCR-IND-ENG IN SCR-VEC-ENG(SCR-IPRO).
           MOVE 'S' TO SCR-IND-FST IN SCR-VEC-FST(SCR-IPRO).

           MOVE WSS-INST-FPEN-CIC TO SCR-INST-EXT.
           MOVE WSS-PROG(SCR-IPRO) TO SYS-PROG.

           MOVE SCR-VARI TO SYS-CMMA.
           MOVE SCR-TCMA TO SYS-TCMA.
           MOVE SYS-XCTL TO SYS-CMND.
      *<<<< GEN_BCI
      *<<<< ISP-INI  24-JAN-1996 11:35:48 
           IF SCR-OFRM-SRV
               MOVE WSS-IDX-IGDG TO SCR-IPRO
           ELSE
      *>>>> ISP-FIN  24-JAN-1996 11:35:48 
      *>>>>
           PERFORM GNS-PRO-SYS.
       FIN-EGR-FTER-CIC.
           EXIT.

       SCR-INIT SECTION.
       INI-SCR-INIT.
           MOVE 3  TO FRM-PLIN.
           MOVE 19 TO FRM-NLIN.
           MOVE FRM-CLR-FRM TO FRM-CMND.
           PERFORM GNS-PRO-FRM.
           MOVE FRM-SINI-DBNF TO FRM-SINI.
           MOVE SCR-NMAP TO FRM-NAME.
           MOVE SCR-NLIB TO FRM-NLIB.
           MOVE GDG-FLD TO FRM-DFLD.
           MOVE FRM-INI TO FRM-CMND.
           PERFORM GNS-PRO-FRM.
       FIN-SCR-INIT.
           EXIT.

       COPY LDCBGMPT.

      *>>>>
      *<<<< EOF
      *Buscar tabla en garantia el CIC.
       BUS-CIC-GAR SECTION.
       INI-BUS-CIC-GAR.
      *BUS-TAB Busca codigo de tabla
           MOVE 'BGL'     TO TAB-COD-SIST.
           MOVE 'CIC'     TO TAB-COD-TTAB IN TAB.
           MOVE 'PROCIC'  TO TAB-COD-CTAB IN TAB.

           PERFORM BUS-TAB.
           IF MSG-COD-MENS = SPACES
              MOVE TAB-GLS-DAT1 IN TAB TO GAR-CIC-OFIC IN CMA-VARI
           ELSE
               MOVE SPACES TO GAR-CIC-OFIC IN CMA-VARI.
       FIN-BUS-CIC-GAR.
           EXIT.

      *<<<< EOFPQPU

       GET-GDD SECTION.
       INI-GET-GDD.
           MOVE DBC-KEY-IDBC IN DBC     TO GDD-CIC-DCLI IN GDD.
           MOVE GDG-CAI-GTIA IN GDG-FLD TO GDD-CAI-GTIA IN GDD.
           MOVE GDG-IIC-GTIA IN GDG-FLD TO GDD-IIC-GTIA IN GDD.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM BGL-FIO-GDD.
           IF FIO-STAT-OKS AND 
              GDD-CIC-DCLI IN GDD = DBC-KEY-IDBC IN DBC
               MOVE GDD-KEY-AGDD IN GDD TO GDG-KEY-IGDG IN GDG
               MOVE 2 TO WSS-IBUS
               MOVE FIO-GET-KEY TO FIO-CMND
               PERFORM BGL-FIO-GDG
               IF FIO-STAT-OKS
                   MOVE 3 TO WSS-IBUS.
       FIN-GET-GDD.
           EXIT.

       GET-CUR-GDD SECTION.
       INI-GET-CUR-GDD.
           MOVE GDG-KEY-IGDG IN GDG TO GDD-KEY-AGDD IN GDD.
           MOVE 'GDD-KEY-AGDD' TO FIO-AKEY.
           MOVE FIO-GET-NLS TO FIO-CMND.
           PERFORM BGL-FIO-GDD.
           IF FIO-STAT-OKS
               MOVE 'GDD-KEY-AGDD' TO FIO-AKEY
               MOVE FIO-END-BRW TO FIO-CMND
               PERFORM BGL-FIO-GDD.
           IF NOT
              GDG-KEY-IGDG IN GDG = GDD-KEY-AGDD IN GDD
               MOVE '23' TO FIO-STAT.
       FIN-GET-CUR-GDD.
           EXIT.
       GET-CUR-GDD-MUL SECTION.
       INI-GET-CUR-GDD-MUL.
           MOVE SPACES   TO WSS-IND-CMUL IN CMA-VARI.
           MOVE GDG-KEY-IGDG IN GDG TO GDD-KEY-AGDD IN GDD.
           MOVE 'GDD-KEY-AGDD' TO FIO-AKEY.
           MOVE FIO-GET-NLS TO FIO-CMND.
           PERFORM BGL-FIO-GDD.
      *
           IF FIO-STAT-OKS   AND
              GDG-KEY-IGDG IN GDG = GDD-KEY-AGDD IN GDD
                MOVE 'GDD-KEY-AGDD' TO FIO-AKEY
                MOVE FIO-GET-NXT TO FIO-CMND
                PERFORM BGL-FIO-GDD
                IF FIO-STAT-OKS AND
                   GDG-KEY-IGDG IN GDG = GDD-KEY-AGDD IN GDD
                   MOVE 'M' TO WSS-IND-CMUL.

       FIN-GET-CUR-GDD-MUL.
           EXIT.

       COPY SGCBFDBC.
       COPY BGLBFGDD.
       COPY SGCBGCLI.
      *<<<< PGM_MEX OR GEN_BCI
       COPY BGLBFGSL.
       COPY BGLBFGSO.
      *>>>>
      *<<<< PGM_PU OR NOT NO_CIC_PQ
       COPY GNSBFCIC.
      *>>>>
      *<<<< PGM_PU
       COPY GNSBGCIC.
      *>>>>  
      *<<<< UNS_FLD
       COPY GNSBGCPT.
       COPY GNSBGSTR.
      *>>>>
      *>>>>
      *<<<< EOF AND PGM_PU
      *<<<< GEN_BCI

      * SOLO POR DEP A PLAZO PROPIO
       PUT-DBC-GDG SECTION.
       INI-PUT-DBC-GDG.
           IF DBC-KEY-IDBC IN CMA-VARI > SPACES
               MOVE DBC-KEY-IDBC IN CMA-VARI TO DBC-CIC-ICLI IN DBC
               MOVE 'DBC-KEY-IDBC'  TO FIO-AKEY
               MOVE FIO-GET-KEY TO FIO-CMND
               PERFORM SGC-FIO-DBC
               MOVE FIO-STAT TO PGM-STAT-DBC
           ELSE
               MOVE FIO-STAT-NEX TO PGM-STAT-DBC.
           IF PGM-STAT-DBC-NUL
               GO TO FIN-PUT-DBC-GDG.
           IF NOT PGM-STAT-DBC-OKS
               PERFORM CLR-DBC-GDG
               GO TO FIN-PUT-DBC-GDG.
           MOVE DBC-CAI-ICLI IN DBC TO CNE-DBC-CAI-ICLI IN SCR-VARI.
           MOVE DBC-IIC-ICLI IN DBC TO CNE-DBC-IIC-ICLI IN SCR-VARI.
           MOVE DBC-GLS-NOMC IN DBC TO DBC-GLS-NOMC IN GDG-FLD.
           MOVE DBC-IND-ICLI IN DBC TO DBC-IND-ICLI IN GDG-FLD.
           MOVE DBC-GLS-ICLI IN DBC TO DBC-GLS-ICLI IN GDG-FLD.
           MOVE DBC-NUM-ICLI IN DBC TO DBC-NUM-ICLI IN GDG-FLD.
           MOVE DBC-VRF-ICLI IN DBC TO DBC-VRF-ICLI IN GDG-FLD.
           MOVE DBC-GLS-NOMC IN DBC TO CPT-STRN.
           PERFORM CPT-BLKS.
           MOVE CPT-STRN TO DBC-GLS-NOMC IN GDG-FLD.
       FIN-PUT-DBC-GDG.
           EXIT.
      *>>>>
      *<<<< ( PGM_VSI OR PGM_DB2 )
      * COPY BGLBFGMO.
      *>>>>
      *>>>>
      *<<<< EOF AND PGM_PU

       ANL-KEY-ALL SECTION.
       INI-ANL-KEY-ALL.
       FIN-ANL-KEY-ALL.
           EXIT.

       BCK-OUT SECTION.
       INI-BCK-OUT.
           MOVE FIO-BCK-OUT TO FIO-CMND.
           PERFORM BGL-FIO-GDD.
           IF FIO-STAT-OKS
      *        Para informar que el backout se realizo con exito
               MOVE '49' TO FIO-STAT.
       FIN-BCK-OUT.
           EXIT.                                                                
 
      * INIT
      * ====

       INI-REG-GDD SECTION.
       INI-INI-REG-GDD.
           MOVE SPACES   TO GDD-GLS-FLAG IN GDD.
           MOVE 100      TO GDD-SGV-PLIM IN GDD.
           MOVE ZEROES   TO GDD-SGV-VLIM IN GDD.
           MOVE SPACES   TO GDD-GLS-DISP IN GDD.
       FIN-INI-REG-GDD.
           EXIT.

      * GET-UPD
      * =======

       GET-UPD-GDD SECTION.
       INI-GET-UPD-GDD.
           MOVE GDG-CAI-GTIA IN GDG-FLD TO GDD-CAI-GTIA IN GDD.
           MOVE GDG-IIC-GTIA IN GDG-FLD TO GDD-IIC-GTIA IN GDD.
           MOVE 'GDD-KEY-AGDD'  TO FIO-AKEY.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM BGL-FIO-GDD.
           IF NOT FIO-STAT-OKS
                MOVE WSS-PRIMER TO WSS-MGDD
      *FLB CST 22-SEP-1993
      *         MOVE FIO-MENS TO FRM-MENS
                GO TO FIN-GET-UPD-GDD.

           MOVE FIO-GET-KEY-UPD TO FIO-CMND.
           PERFORM BGL-FIO-GDD.

           IF CNE-DBC-CAI-ICLI = GDD-CAI-DCLI IN GDD AND
              CNE-DBC-IIC-ICLI = GDD-IIC-DCLI IN GDD
               MOVE WSS-MISMO TO WSS-MGDD
               MOVE FIO-ULK-REC TO FIO-CMND
               PERFORM BGL-FIO-GDD
           ELSE
               MOVE WSS-OTRO  TO WSS-MGDD.
       FIN-GET-UPD-GDD.
           EXIT.

      * PUT
      * ===

       PUT-GDD SECTION.
       INI-PUT-GDD.
      *<<<< FMT_CHI
           IF DBC-IND-ICLI IN GDG-FLD NOT = 'M'
      *>>>>
               PERFORM INI-REG-GDD
               MOVE SCR-USER TO GDD-CIC-UING IN GDD
               MOVE HOY-FHOY TO GDD-FEC-FING IN GDD
               MOVE 'I'      TO GDD-MSC-TACC IN GDD
               MOVE CNE-DBC-CAI-ICLI TO GDD-CAI-DCLI IN GDD
               MOVE CNE-DBC-IIC-ICLI TO GDD-IIC-DCLI IN GDD
               MOVE GDG-CAI-GTIA IN GDG TO GDD-CAI-GTIA IN GDD
               MOVE GDG-IIC-GTIA IN GDG TO GDD-IIC-GTIA IN GDD
               MOVE FIO-PUT TO FIO-CMND
               PERFORM BGL-FIO-GDD
               IF NOT FIO-STAT-OKS
      *        Error inconsistencia en el ingreso : hacer LOGTB e informar      
                   MOVE FIO-MENS TO FRM-MENS
                   PERFORM BCK-OUT.
       FIN-PUT-GDD.
           EXIT.

      * MOD
      * ===

       MOD-GDD SECTION.
       INI-MOD-GDD.
      *<<<< FMT_CHI
           IF DBC-IND-ICLI IN GDG-FLD = 'M' OR
      *>>>>
              WSS-MISMO-GDD
               GO TO FIN-MOD-GDD.

           MOVE FIO-DEL TO FIO-CMND.
           PERFORM BGL-FIO-GDD.
           IF NOT FIO-STAT-OKS
      *    Error inconsistencia en la eliminacion : hacer 
      *    LOGTB e informar  
               MOVE FIO-MENS TO FRM-MENS
               PERFORM BCK-OUT
               GO TO FIN-MOD-GDD
           ELSE
               PERFORM PUT-GDD.
           IF NOT FIO-STAT-OKS
      *        Error inconsistencia en la eliminacion : hacer 
      *        LOGTB e informar  
               MOVE FIO-MENS TO FRM-MENS
               PERFORM BCK-OUT
               GO TO FIN-MOD-GDD.
       FIN-MOD-GDD.
           EXIT.

       VRF-GAR-DGP SECTION.
       INI-VRF-GAR-DGP.
           MOVE 'N' TO WSS-MARC-4 IN WSS-VARI.
           MOVE GDG-CAI-GTIA IN GDG-FLD TO GES-CAI-GTIA IN GES.
           MOVE GDG-IIC-GTIA IN GDG-FLD TO GES-IIC-GTIA IN GES.
           MOVE ZEROES                  TO GES-NUM-IGES IN GES.
           MOVE FIO-GET-NLS TO FIO-CMND.
           PERFORM BGL-FIO-GES.
       LEE-GES-1.
           IF NOT FIO-STAT-OKS
              GO TO FIN-VRF-GAR-DGP.

           IF NOT (GDG-CAI-GTIA IN GDG-FLD = GES-CAI-GTIA IN GES AND
                   GDG-IIC-GTIA IN GDG-FLD = GES-IIC-GTIA IN GES)
              MOVE FIO-GET-NXT TO FIO-CMND
              PERFORM BGL-FIO-GES
              GO TO LEE-GES-1.

           MOVE GES-CIC-IOPC IN GES TO OPC-CIC-IOPC IN OPC
           MOVE FIO-GET-KEY TO FIO-CMND
           PERFORM COL-FIO-OPC
           IF FIO-STAT-OKS
              IF OPC-MSC-STAT IN OPC = 'A' AND
                 OPC-VAL-SCRE IN OPC > ZEROES
                    MOVE 'S' TO WSS-MARC-4 IN WSS-VARI.
       FIN-VRF-GAR-DGP.
           EXIT.

 
      *DELETE
      *======
       DEL-GDD SECTION.
       INI-DEL-GDD.
           MOVE GDG-KEY-IGDG IN GDG TO GDD-KEY-AGDD IN GDD.
           MOVE 'GDD-KEY-AGDD' TO FIO-AKEY.
           MOVE FIO-GET-NLS TO FIO-CMND.
           PERFORM BGL-FIO-GDD.
           IF NOT ( FIO-STAT-OKS AND
              GDD-KEY-AGDD IN GDD = GDG-KEY-IGDG IN GDG )
               MOVE '00' TO FIO-STAT
               IF FIO-STAT-OKS 
                   MOVE 'GDD-KEY-AGDD' TO FIO-AKEY
                   MOVE FIO-END-BRW TO FIO-CMND
                   PERFORM BGL-FIO-GDD
                   GO TO FIN-DEL-GDD
               ELSE
                   GO TO FIN-DEL-GDD.
       LUP-DEL-GDD.
           MOVE 'GDD-KEY-AGDD' TO FIO-AKEY.
           MOVE FIO-END-BRW TO FIO-CMND.
           PERFORM BGL-FIO-GDD.

           MOVE FIO-GET-KEY-UPD TO FIO-CMND.
           PERFORM BGL-FIO-GDD.
           IF NOT FIO-STAT-OKS
               GO TO FIN-DEL-GDD.
           MOVE FIO-DEL TO FIO-CMND.
           PERFORM BGL-FIO-GDD.
           IF NOT FIO-STAT-OKS
               GO TO FIN-DEL-GDD.

           MOVE GAR-CIC-DCLI IN CMA-VARI TO GDD-CIC-DCLI IN GDD.
           MOVE 'GDD-KEY-AGDD' TO FIO-AKEY.
           MOVE FIO-GET-NLS TO FIO-CMND.
           PERFORM BGL-FIO-GDD.
           IF FIO-STAT-OKS AND
              GDG-KEY-IGDG IN GDG = GDD-KEY-AGDD IN GDD
               GO TO LUP-DEL-GDD.
           MOVE '00' TO FIO-STAT.
       FIN-DEL-GDD.
           EXIT.

      *<<<< GEN_BCI
      *LOP-INI 6-DIC-2002
       ANL-LDC-GDD SECTION.
       INI-ANL-LDC-GDD.
           MOVE SPACES               TO MSG-COD-MENS
           MOVE GDG-KEY-IGDG IN GDG TO GDD-KEY-AGDD IN GDD.
           MOVE 'GDD-KEY-AGDD' TO FIO-AKEY.
           MOVE FIO-GET-NLS TO FIO-CMND.
           PERFORM BGL-FIO-GDD.
           IF NOT ( FIO-STAT-OKS AND
              GDD-KEY-AGDD IN GDD = GDG-KEY-IGDG IN GDG )
               MOVE '00' TO FIO-STAT
               IF FIO-STAT-OKS
                   MOVE 'GDD-KEY-AGDD' TO FIO-AKEY
                   MOVE FIO-END-BRW TO FIO-CMND
                   PERFORM BGL-FIO-GDD
                   GO TO FIN-ANL-LDC-GDD
               ELSE
                   GO TO FIN-ANL-LDC-GDD.
      
       LUP-ANL-LDC-GDD.

           MOVE GDD-CIC-DCLI IN GDD  TO DBC-CIC-ICLI IN DBC.
           MOVE GDD-CIC-DCLI IN GDD  TO CCU-CIC-ICLI IN CCU-VARI.
           MOVE GDG-KEY-IGDG IN GDG TO CCU-KEY-IGDG IN CCU-VARI.
           PERFORM CCU-POR-MAR.
           IF MSG-COD-MENS > SPACES
              MOVE 'GDD-KEY-AGDD' TO FIO-AKEY
              MOVE FIO-END-BRW TO FIO-CMND
              PERFORM BGL-FIO-GDD
              GO TO FIN-ANL-LDC-GDD.
      
           IF WSS-IND-ALZA NOT = 'ALS'
           PERFORM LLAMA-CCU-LDC
           IF MSG-COD-MENS > SPACES
              MOVE 'GDD-KEY-AGDD' TO FIO-AKEY
              MOVE FIO-END-BRW TO FIO-CMND
              PERFORM BGL-FIO-GDD
              GO TO FIN-ANL-LDC-GDD.
      
           MOVE 'GDD-KEY-AGDD' TO FIO-AKEY.
           MOVE FIO-GET-NXT     TO FIO-CMND.
           PERFORM BGL-FIO-GDD.
           IF FIO-STAT-OKS AND
              GDG-KEY-IGDG IN GDG = GDD-KEY-AGDD IN GDD
               GO TO LUP-ANL-LDC-GDD.
      
           IF FIO-STAT-OKS
              MOVE FIO-END-BRW TO FIO-CMND
              PERFORM BGL-FIO-GDD.
      
           MOVE '00' TO FIO-STAT.
       FIN-ANL-LDC-GDD.
           EXIT.
      *LOP-FIN 6-DIC-2002

       VAL-USR-OFI SECTION.
       INI-VAL-USR-OFI.
           IF SCR-OFRM-SRV
              MOVE 'P'    TO USP-PERMISO
              MOVE SPACES TO USP-COD-USUARIO
              GO TO FIN-VAL-USR-OFI.
      *ALD-BCI-INI/07032000
      *    COPY USPC143.
      *ALD-BCI-FIN/07032000
       FIN-VAL-USR-OFI.
           EXIT.
      *ALD-BCI-INI/07032000
       VAL-PTA-USR SECTION.
       INI-VAL-PTA-USR.
           IF SCR-OFRM-SRV
              MOVE 'P'    TO USP-PERMISO
              MOVE SPACES TO USP-COD-USUARIO
              GO TO FIN-VAL-PTA-USR.
           COPY USPC143.
           MOVE 'BGLGTUCG/CEN' TO USP-PTA-STR.
           COPY USPC103.
       FIN-VAL-PTA-USR.
           EXIT.
      *ALD-BCI-FIN/07032000
      *>>>>
      *>>>>
       COPY BGLBGVCG.
       COPY BGLBKVCG.
      *<<<< GEN_BCI AND PGM_PU
       COPY BGLBGIDP.
       COPY BGLBKIDP.
      *>>>>
      *<<<< NOT ( PGM_VSI OR PGM_DB2 ) AND PGM_PU
       COPY BGLBGELI.
       COPY BGLBKELI.
      *>>>>
      *>>>>

      *<<<< EOF
      *<<<< GEN_BCI
       COPY BGLBGEDP.

      *LOP-INI 6-DIC-2002
       COPY LDCBKCEG.
       COPY LDCBKCCU.
       COPY LDCBGCC1.
       COPY LDCBFCLF.
       COPY LDCBFRDC REPLACING RDC BY RDL.
       COPY BGLBGMAR.
       COPY LDCBGCCU.
      *LOP-FIN 6-DIC-2002
       COPY DAPBFRCC.
      *>>>>
       COPY BGLBFTAG.

      *RRM-INI 3-JUN-2002
       LECTURA-TAG SECTION.
       INI-LECTURA-TAG.
      *<<<< FMT_CHI
           MOVE GDG-TIP-CGTA IN GDG  TO WSS-TIP-CGTA IN WSS-VARI.
           MOVE GDG-STP-CGTA IN GDG  TO WSS-STP-CGTA IN WSS-VARI.
           MOVE WSS-COD-CGTA IN WSS-VARI TO TAG-COD-AGTA IN TAG.
      *>>>>
           MOVE FIO-GET-KEY    TO FIO-CMND.
           PERFORM BGL-FIO-TAG.
       FIN-LECTURA-TAG.
           EXIT.
      
      *<<<< GEN_BCI
       BUS-GDO-OPD SECTION.
       INI-BUS-GDO-OPD.
           MOVE SPACES TO MSG-COD-MENS.
           MOVE GDG-CAI-GTIA IN GDG-FLD TO GDO-CAI-GTIA IN GDO.
           MOVE GDG-IIC-GTIA IN GDG-FLD TO GDO-IIC-GTIA IN GDO.
           MOVE 1                       TO GDO-NUM-IGDO IN GDO.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM BGL-FIO-GDO.
           IF NOT FIO-STAT-OKS
               MOVE 'BGL'          TO MSG-COD-SIST
               MOVE 'GDO    NEX'   TO MSG-COD-MENS
           ELSE
               MOVE GDO-COD-DOCU IN GDO TO OPD-CIC-IOPD IN DAP-VARI
               MOVE OPD-CAI-IOPD IN DAP-VARI TO OPD-CAI-IOPD IN OPD
               MOVE OPD-IIC-IOPD IN DAP-VARI TO OPD-IIC-IOPD IN OPD
               MOVE FIO-GET-KEY TO FIO-CMND
               PERFORM DAP-FIO-OPD
               IF NOT FIO-STAT-OKS
                   MOVE 'BGL'          TO MSG-COD-SIST
                   MOVE 'OPD    NEX'   TO MSG-COD-MENS
               ELSE
               IF OPD-COD-STAT IN OPD NOT = 'G'
                   MOVE 'BGL'            TO MSG-COD-SIST
                   MOVE 'OPD    NOVIG'   TO MSG-COD-MENS.
       FIN-BUS-GDO-OPD.
           EXIT.
      *>>>>
      
       VRF-MOD-GSO SECTION.
       INI-VRF-MOD-GSO.
           IF NOT ( FIO-STAT-OKS AND
              GDG-CAI-GTIA IN GDG-FLD = GES-CAI-GTIA IN GES AND
              GDG-IIC-GTIA IN GDG-FLD = GES-IIC-GTIA IN GES)
               MOVE '00' TO FIO-STAT
               GO TO FIN-VRF-MOD-GSO.
      
           MOVE GDG-CIC-GTIA IN GDG TO GSO-CIC-GTIA IN GSO.
           MOVE GES-KEY-IGSL IN GES TO GSO-NUM-SBGL IN GSO.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM BGL-FIO-GSO.
           IF NOT FIO-STAT-OKS
               MOVE 'BGL'        TO MSG-COD-SIST
               MOVE 'GSO    NEX' TO MSG-COD-MENS
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS
               GO TO FIN-VRF-MOD-GSO.
      
           MOVE FIO-GET-KEY-UPD TO FIO-CMND.
           PERFORM BGL-FIO-GSO.
           IF NOT FIO-STAT-OKS
               MOVE 'BGL'        TO MSG-COD-SIST
               MOVE 'GSO  NOUPD' TO MSG-COD-MENS
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS
               GO TO FIN-VRF-MOD-GSO.
      
           MOVE '11' TO GSO-COD-ESGA IN GSO.
           MOVE FIO-MOD TO FIO-CMND.
           PERFORM BGL-FIO-GSO.
           IF NOT FIO-STAT-OKS
               MOVE 'BGL'        TO MSG-COD-SIST
               MOVE 'GSO  NOMOD' TO MSG-COD-MENS
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS
               GO TO FIN-VRF-MOD-GSO.
      
           MOVE FIO-GET-NXT TO FIO-CMND.
           PERFORM BGL-FIO-GES.
           GO TO INI-VRF-MOD-GSO.
       FIN-VRF-MOD-GSO.
           EXIT.
      
      
       VRF-IND-TAG SECTION.
       INI-VRF-IND-TAG.
      *<<<< FMT_CHI
           MOVE GDG-TIP-CGTA IN GDG  TO WSS-TIP-CGTA IN WSS-VARI.
           MOVE GDG-STP-CGTA IN GDG  TO WSS-STP-CGTA IN WSS-VARI.
           MOVE WSS-COD-CGTA IN WSS-VARI TO TAG-COD-AGTA IN TAG.
      *>>>>
           MOVE FIO-GET-KEY         TO FIO-CMND.
           PERFORM BGL-FIO-TAG.
           IF NOT FIO-STAT-OKS
               MOVE 'BGL'        TO MSG-COD-SIST
               MOVE 'TAG    NEX' TO MSG-COD-MENS
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS
               GO TO FIN-VRF-IND-TAG.
      
           IF NOT ( TAG-IND-EGSL IN TAG = 'S' AND TAG-IND-EGSO = 'S' )
               GO TO FIN-VRF-IND-TAG.
      
           MOVE GDG-CAI-GTIA IN GDG-FLD TO GES-CAI-GTIA IN GES.
           MOVE GDG-IIC-GTIA IN GDG-FLD TO GES-IIC-GTIA IN GES.
           MOVE ZEROES                  TO GES-NUM-IGES IN GES.
           MOVE FIO-GET-NLS TO FIO-CMND.
           PERFORM BGL-FIO-GES.
           IF NOT ( FIO-STAT-OKS AND
              GDG-CAI-GTIA IN GDG-FLD = GES-CAI-GTIA IN GES AND
              GDG-IIC-GTIA IN GDG-FLD = GES-IIC-GTIA IN GES)
               MOVE 'BGL'        TO MSG-COD-SIST
               MOVE 'GES    NEX' TO MSG-COD-MENS
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS
               GO TO FIN-VRF-IND-TAG
           ELSE
               PERFORM VRF-MOD-GSO.
      
           IF NOT FIO-STAT-OKS
               GO TO FIN-VRF-IND-TAG.
       FIN-VRF-IND-TAG.
           EXIT.
      *RRM-FIN 3-JUN-2002
      *RRM-INI 4-JUL-2002
       VAL-CIM-AGA SECTION.
       INI-VAL-CIM-AGA.
           PERFORM VAL-GDG-FEC-FVTO-CIM.
           PERFORM VAL-GDG-IND-CBAN-CIM.
           PERFORM VAL-FRM-IDC-ICLI-CIM.
           PERFORM VAL-DBC-GLS-NOMC-CIM.
       FIN-VAL-CIM-AGA.
           EXIT.

       VAL-GDG-FEC-FVTO-CIM SECTION.
       INI-VAL-GDG-FEC-FVTO-CIM.
      *VAL-FEC Validar Fecha
           MOVE GDG-FEC-FVTO IN GDG TO FEC-FECH.
           MOVE FEC-FORM-FEC        TO FEC-FORM.
           MOVE FEC-FBLK-S          TO FEC-FBLK.
           MOVE FEC-CHOY-LE         TO FEC-CHOY.
           MOVE FEC-VHBL-S          TO FEC-VHBL.
           MOVE FEC-VHBL-N          TO FEC-VHBL.

           MOVE GDG-NUM-SVTO IN GDG TO FEC-SVLD.
           MOVE GDG-NUM-AVTO IN GDG TO FEC-AVLD.
           MOVE GDG-NUM-MVTO IN GDG TO FEC-MVLD.
           MOVE GDG-NUM-DVTO IN GDG TO FEC-DVLD.

           MOVE TAG-IND-SVTO IN TAG TO GAR-IND-SVTO IN CMA-VARI.

           IF GAR-IND-SVTO IN CMA-VARI  = 'S'
              IF FEC-FVLD = '00000000'
                 MOVE 'VTO=0' TO MSG-COD-MENS
                 GO TO ERR-VAL-GDG-FEC-FVTO-CIM.

           MOVE FEC-CHOY-N TO FEC-CHOY.
           MOVE FEC-VAL-FEC TO FEC-CMND.
           PERFORM PRO-FEC.
           IF  NOT FEC-STAT-OKS
               MOVE 'FVEN  NOVAL' TO MSG-COD-MENS  
               GO TO FIN-VAL-GDG-FEC-FVTO-CIM.
           

           MOVE GDG-NUM-SSOL IN GDG TO FEC-SEC1.
           MOVE GDG-NUM-ASOL IN GDG TO FEC-AEC1.
           MOVE GDG-NUM-MSOL IN GDG TO FEC-MEC1.
           MOVE GDG-NUM-DSOL IN GDG TO FEC-DEC1.

           MOVE GDG-NUM-SVTO IN GDG TO FEC-SEC2.
           MOVE GDG-NUM-AVTO IN GDG TO FEC-AEC2.
           MOVE GDG-NUM-MVTO IN GDG TO FEC-MEC2.
           MOVE GDG-NUM-DVTO IN GDG TO FEC-DEC2.
           MOVE FEC-FORM-FEC TO FEC-FORM.
           MOVE FEC-CMP-FEC  TO FEC-CMND.
           PERFORM PRO-FEC.
           IF NOT FEC-STAT-LES
               MOVE 'VTO<=SOL' TO MSG-COD-MENS
               GO TO ERR-VAL-GDG-FEC-FVTO-CIM.

           MOVE GDG-FEC-FVTO IN GDG TO FEC-FEC1.

           MOVE GDG-NUM-DING IN GDG TO FEC-DEC2.
           MOVE GDG-NUM-MING IN GDG TO FEC-MEC2.
           MOVE GDG-NUM-AING IN GDG TO FEC-AEC2.
           MOVE GDG-NUM-SING IN GDG TO FEC-SEC2.
           MOVE FEC-FORM-FEC        TO FEC-FORM.
           MOVE FEC-CMP-FEC         TO FEC-CMND.
           PERFORM PRO-FEC.
           IF NOT FEC-STAT-GRT
               MOVE 'FVTO<=FING' TO MSG-COD-MENS
               GO TO ERR-VAL-GDG-FEC-FVTO-CIM.
           
           GO TO FIN-VAL-GDG-FEC-FVTO-CIM.

       ERR-VAL-GDG-FEC-FVTO-CIM.
           MOVE 'BGL'     TO MSG-COD-SIST.
       FIN-VAL-GDG-FEC-FVTO-CIM.
           EXIT.


       VAL-GDG-VAL-MNTO-CIM SECTION.
       INI-VAL-GDG-VAL-MNTO-CIM.
           IF GDG-VAL-MNTO IN GDG = ZEROES
               MOVE 'BGL'       TO MSG-COD-SIST
               MOVE 'MNTO=0' TO MSG-COD-MENS
               GO TO FIN-VAL-GDG-VAL-MNTO-CIM.
       FIN-VAL-GDG-VAL-MNTO-CIM.
           EXIT.

       VAL-GDG-IND-CBAN-CIM SECTION.
       INI-VAL-GDG-IND-CBAN-CIM.
           IF  GDG-IND-CBAN IN GDG NOT = 'N' AND NOT = 'S'
                MOVE 'BGL'         TO MSG-COD-SIST
                MOVE 'ICBAN   N/S' TO MSG-COD-MENS
                GO TO FIN-VAL-GDG-IND-CBAN-CIM.
       FIN-VAL-GDG-IND-CBAN-CIM.
           EXIT.


       VAL-FRM-IDC-ICLI-CIM SECTION.
       INI-VAL-FRM-IDC-ICLI-CIM.
      * Mover nombre propietario.
           IF GDG-IIC-ICLI IN GDG > ZEROES
               MOVE GDG-CIC-ICLI IN GDG TO DBC-CIC-ICLI IN DBC
               MOVE FIO-GET-KEY TO FIO-CMND
               PERFORM SGC-FIO-DBC
               IF FIO-STAT-OKS
      *<<<< FMT_CHI
                  MOVE DBC-NUM-ICLI IN DBC TO FRM-NUM-ICLI IN GDG-FLD
                  MOVE DBC-VRF-ICLI IN DBC TO FRM-VRF-ICLI IN GDG-FLD
                  MOVE DBC-IND-ICLI IN DBC TO FRM-IND-ICLI IN GDG-FLD
                  MOVE DBC-GLS-ICLI IN DBC TO FRM-GLS-ICLI IN GDG-FLD
      *>>>>
                  MOVE DBC-CAI-ICLI IN DBC TO CNE-GDG-CAI-ICLI
                  MOVE DBC-IIC-ICLI IN DBC TO CNE-GDG-IIC-ICLI
      
                  MOVE DBC-GLS-NOMC IN DBC TO CPT-STRN
                  PERFORM CPT-BLKS
                  MOVE CPT-STRN TO FRM-GLS-NOMC IN GDG-FLD
                  MOVE CPT-STRN TO CNE-GDG-GLS-NOMP
                ELSE
                  MOVE SPACES TO FRM-GLS-NOMC IN GDG-FLD
                  MOVE SPACES  TO CNE-GDG-GLS-NOMP
           ELSE
              MOVE GDG-GLS-NOMP IN GDG TO FRM-GLS-NOMC IN GDG-FLD
              MOVE GDG-GLS-NOMP IN GDG TO CNE-GDG-GLS-NOMP.

      *<<<< FMT_CHI
           IF FRM-NUM-ICLI IN GDG-FLD = ZEROES AND
      *>>>>
              GDG-IND-CBAN IN GDG     = 'S'
                  MOVE 'TAB'        TO MSG-COD-SIST
                  MOVE 'CLI X  NEX' TO MSG-COD-MENS
                  GO TO FIN-VAL-FRM-IDC-ICLI-CIM.
            
      *<<<< FMT_CHI
           IF FRM-NUM-ICLI IN GDG-FLD NOT = ZEROES AND
      *>>>>
              GDG-IND-CBAN IN GDG         = 'N'
                  MOVE 'TAB'        TO MSG-COD-SIST
                  MOVE 'CLI Y NEX' TO MSG-COD-MENS
                  PERFORM GET-MSG
                  GO TO FIN-VAL-FRM-IDC-ICLI-CIM.
      

      *<<<< FMT_CHI
            IF FRM-NUM-ICLI IN GDG-FLD NOT = ZEROES
      *>>>>

      *<<<< FMT_CHI
               MOVE FRM-NUM-ICLI IN GDG-FLD TO DBC-NUM-ICLI IN DBC
      *         MOVE FRM-IND-ICLI IN GDG-FLD TO DBC-IND-ICLI IN DBC
      *         MOVE FRM-GLS-ICLI IN GDG-FLD TO DBC-GLS-ICLI IN DBC
      *>>>>
               MOVE 'DBC-IDC-ICLI'  TO FIO-AKEY
               MOVE FIO-GET-KEY TO FIO-CMND
               PERFORM SGC-FIO-DBC
               IF NOT FIO-STAT-OKS
                  MOVE 'TAB'        TO MSG-COD-SIST
                  MOVE 'CLI    NEX' TO MSG-COD-MENS
              ELSE
                 MOVE DBC-CAI-ICLI IN DBC TO CNE-GDG-CAI-ICLI
                 MOVE DBC-IIC-ICLI IN DBC TO CNE-GDG-IIC-ICLI
                 MOVE DBC-GLS-NOMC IN DBC TO CPT-STRN
                 PERFORM CPT-BLKS
                 MOVE CPT-STRN TO FRM-GLS-NOMC IN GDG-FLD.
       FIN-VAL-FRM-IDC-ICLI-CIM.
           EXIT.

       VAL-DBC-GLS-NOMC-CIM SECTION.
       INI-VAL-DBC-GLS-NOMC-CIM.
      *<<<< FMT_CHI
           IF FRM-NUM-ICLI IN GDG-FLD = ZEROES AND
      *>>>>
              GDG-IND-CBAN IN GDG     = 'N'    AND
              FRM-GLS-NOMC IN GDG-FLD NOT > SPACES
                  MOVE 'TAB'         TO MSG-COD-SIST
                  MOVE 'CLI-NOM-NEX' TO MSG-COD-MENS
                  PERFORM GET-MSG
                  MOVE SPACES        TO FRM-GLS-NOMC IN GDG-FLD
                  MOVE MSG-GLS-DESC  TO FRM-MENS
                  MOVE FRM-SUAR-MAL  TO FRM-SUAR.
      *            GO TO FIN-VAL-FRM-GLS-NOMC.
       FIN-VAL-DBC-GLS-NOMC-CIM.
           EXIT.
      *RRM-FIN 4-JUL-2002
       COPY BGLBFGIM.
       COPY BGLBFGVE.
       COPY BGLBFGAP.
       COPY BGLBFGDP.
       COPY BGLBFGES.
       COPY BGLBFGIN.
       COPY BGLBFGLE.
       COPY BGLBFGSE.
       COPY BGLBFGSI.
       COPY BGLBFGTP.
       COPY BGLBFGUB.
       COPY BGLBFGVT.
       COPY BGLBFGMO.
      *MHM-INI 30-JUL-2003
      * COPY BGLBVVCG.
       COPY DAPBFOPD.
       COPY BGLBFGDO.
       COPY COLBFOPC.
       COPY COLBFDLC.
       COPY GNSBGVSM.
      *MHM-FIN 30-JUL-2003
       COPY BGLBSELI.
       COPY BGLBGVC2.
      * COPY BGLBVUOF.
      *
       COPY TABBBUSR.
      *AFRI-INI /JUL2004
       GRABAR-GAP SECTION.
       INI-GRABAR-GAP.
           MOVE SPACES        TO GAP-GLS-FLAG IN GAP
           MOVE GDG-CAI-GTIA IN GDG  TO GAP-CAI-GTIA IN GAP
           MOVE GDG-IIC-GTIA IN GDG  TO GAP-IIC-GTIA IN GAP
           MOVE '1'           TO GAP-COD-PACR IN GAP
           MOVE  HOY-FHOY     TO GAP-FEC-FTRN IN GAP
           MOVE  HOY-HHOY     TO GAP-HRA-HRTR IN GAP
           MOVE 'I'           TO GAP-MSC-TACC IN GAP
           MOVE 'I'           TO GAP-MSC-STAT IN GAP
           MOVE SPACES        TO GAP-COD-OTRN IN GAP
           MOVE 'BGLPUGDG'    TO GAP-COD-ATRN IN GAP
           MOVE 'S'           TO GAP-IND-ESBA IN GAP
           MOVE 'N'           TO GAP-IND-ESCL IN GAP
           MOVE 'S'           TO GAP-IND-MASC IN GAP
           MOVE SPACES        TO GAP-CAI-ICLI IN GAP
           MOVE ZEROES        TO GAP-IIC-ICLI IN GAP.
           MOVE SPACES        TO GAP-GLS-NOMA IN GAP.
           MOVE 'BGL'         TO TAB-COD-SIST FIO-SIST
           MOVE 'IDC'         TO TAB-COD-TTAB IN TAB.
           MOVE 'IDCBCO'      TO TAB-COD-CTAB IN TAB.
           MOVE FIO-GET-KEY   TO FIO-CMND.
           PERFORM GNS-FIO-TAB.
           IF FIO-STAT-OKS AND TAB-IND-VIGE = 'S'
               MOVE TAB-GLS-DCOR   TO DBC-NUM-ICLI IN DBC
               MOVE SPACES         TO DBC-IND-ICLI IN DBC
               MOVE SPACES         TO DBC-GLS-ICLI IN DBC
               MOVE 'DBC-IDC-ICLI' TO FIO-AKEY
               MOVE FIO-GET-KEY    TO FIO-CMND
               PERFORM SGC-FIO-DBC
               IF FIO-STAT-OKS
                   MOVE DBC-CAI-ICLI IN DBC TO GAP-CAI-ICLI IN GAP
                   MOVE DBC-IIC-ICLI IN DBC TO GAP-IIC-ICLI IN GAP
                   MOVE DBC-GLS-NOMC IN DBC TO GAP-GLS-NOMA IN GAP.
           MOVE SPACES        TO GAP-COD-RFCA IN GAP
           MOVE 'P'           TO GAP-IND-MACR IN GAP
           MOVE '100'         TO GAP-SGV-MACR IN GAP
           MOVE SPACES        TO GAR-FOJ-ICR-ACR IN GAP
           MOVE ZEROES        TO GAR-NUM-ICR-ACR IN GAP
           MOVE ZEROES        TO GAR-ANO-ICR-ACR IN GAP
           MOVE HOY-FHOY      TO GAP-FEC-FING IN GAP
           MOVE 'BGLPUGDG'    TO GAP-CIC-UING IN GAP
           MOVE SPACES        TO GAP-GLS-DISP IN GAP. 
           MOVE FIO-PUT       TO FIO-CMND.
           PERFORM BGL-FIO-GAP.
       FIN-GRABAR-GAP.
           EXIT.
      *AFRI-FIN /JUL2004
      *>>>>




