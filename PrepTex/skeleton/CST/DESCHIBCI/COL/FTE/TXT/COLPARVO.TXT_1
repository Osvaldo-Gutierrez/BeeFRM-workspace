*%! Codigo adicional para archivo
*% IF MI_COMMAREA
      *<<<< MI_COMMAREA
      *>>>>
*% END
*% IF FIN_SCR_VARI
      *<<<< FIN_SCR_VARI
      *>>>>
*% END
*% IF WSS
      *<<<< WSS
       COPY COLBRRVO.
       COPY COLBRRDC.
       COPY SGCBRDBC.
       COPY GNSWGCPT.
       COPY GNSWGFEC.
       COPY GNSWGHOY.
       01  WSS-VARI.
           03 WSS-STAT.
              05 PGM-STAT-RVO.
                 88 PGM-STAT-RVO-NUL    VALUE '  '.
                 07 PGM-STT1-RVO        VALUE '2' PIC X(01).
                    88 PGM-STAT-RVO-OKS VALUE '0'.
                 07 PGM-STT2-RVO        VALUE '3' PIC X(01).
           03 WSS-COD-CAUX.
              05 WSS-COD-TOOC                        PIC X(03).
              05 WSS-COD-AOOC                        PIC X(03).
           03 WSS-CIC-COOC        VALUE SPACES       PIC X(03).
              88 VAL-PTM-CON      VALUE 'CON'.
           03 WSS-CIC-IOPC.
              05 WSS-CAI-IOPC                        PIC X(04).
              05 WSS-IIC-IOPC                        PIC X(08).
           03 WSS-IDD-GAUX                           PIC X(01).
           03 WSS-IFLD                               PIC 9(02).
           03 WSS-IMAX                               PIC 9(02).
      *>>>>
*% END
*% IF WSS_DTC
      *<<<< WSS_DTC
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-RVO-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-RDC-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-DBC-REQA==.
      *>>>>
*% END
*% IF WSS_IBM
      *<<<< WSS_IBM
      *>>>>
*% END
*% IF CMA
      *<<<< CMA
      *>>>>
*% END
*% IF BLLCELLS
      *<<<< BLLCELLS
      *>>>>
*% END
*% IF FIN_LUP_MAIN
      *<<<< FIN_LUP_MAIN
      *>>>>
*% END
*% IF PGM_INI
      *<<<< PGM_INI
      *>>>>
*% END
*% IF INI_FIO_IBM
      *<<<< INI_FIO_IBM
      *>>>>
*% END
*% IF INI_FIO
      *<<<< INI_FIO
      *>>>>
*% END
*% IF INI_SCR_COM
      *<<<< INI_SCR_COM
      *>>>>
*% END
*% IF INI_SCR_MOD
      *<<<< INI_SCR_MOD
      *>>>>
*% END
*% IF PFS_SCR_MOD
      *<<<< PFS_SCR_MOD
      *>>>>
*% END
*% IF FIN_SCR_MOD
      *<<<< FIN_SCR_MOD
      *>>>>
*% END
*% IF BRW_SCR_MOD
      *<<<< BRW_SCR_MOD
      *>>>>
*% END
*% IF INI_SCR_ING
      *<<<< INI_SCR_ING
      *>>>>
*% END
*% IF PFS_SCR_ING
      *<<<< PFS_SCR_ING
      *>>>>
*% END
*% IF FIN_SCR_ING
      *<<<< FIN_SCR_ING
      *>>>>
*% END
*% IF INI_SCR_ACC
      *<<<< INI_SCR_ACC
      *>>>>
*% END
*% IF PFS_SCR_ACC
      *<<<< PFS_SCR_ACC
      *>>>>
*% END
*% IF FIN_SCR_ACC
      *<<<< FIN_SCR_ACC
      *>>>>
*% END
*% IF BRW_SCR_ACC
      *<<<< BRW_SCR_ACC
      *>>>>
*% END
*% IF INI_SCR_ELI
      *<<<< INI_SCR_ELI
      *>>>>
*% END
*% IF PFS_SCR_ELI
      *<<<< PFS_SCR_ELI
      *>>>>
*% END
*% IF FIN_SCR_ELI
      *<<<< FIN_SCR_ELI
      *>>>>
*% END
*% IF BRW_SCR_ELI
      *<<<< BRW_SCR_ELI
      *>>>>
*% END
*% IF INI_SCR_ACT
      *<<<< INI_SCR_ACT
      *>>>>
*% END
*% IF PFS_SCR_ACT
      *<<<< PFS_SCR_ACT
      *>>>>
*% END
*% IF FIN_SCR_ACT
      *<<<< FIN_SCR_ACT
      *>>>>
*% END
*% IF BRW_SCR_ACT
      *<<<< BRW_SCR_ACT
      *>>>>
*% END
*% IF INI_SCR_PGM
      *<<<< INI_SCR_PGM
      *>>>>
*% END
*% IF PFS_SCR_PGM
      *<<<< PFS_SCR_PGM
      *>>>>
*% END
*% IF FIN_SCR_PGM
      *<<<< FIN_SCR_PGM
      *>>>>
*% END
*% IF BRW_SCR_PGM
      *<<<< BRW_SCR_PGM
      *>>>>
*% END
*% IF SCR_RST
      *<<<< SCR_RST
      *>>>>
*% END
*% IF GET_KEY
      *<<<< GET_KEY
      *>>>>
*% END
*% IF GET_IKY
      *<<<< GET_IKY
      *>>>>
*% END
*% IF INI_FND_KEY
      *<<<< INI_FND_KEY
      *>>>>
*% END
*% IF FND_KEY
      *<<<< FND_KEY
      *Busca Credito en Base de VIGENTES
           MOVE 'M' TO WSS-IDD-GAUX IN WSS-VARI.
           MOVE WSS-IDD-GAUX IN WSS-VARI TO IDD-GAUX.
      *>>>>
*% END
*% IF FIN_FND_KEY
      *<<<< FIN_FND_KEY
      *Busca Credito en Base de NO VIGENTES
      *     IF NOT FIO-STAT-OKS
           IF NOT PGM-STAT-OPC-OKS
               MOVE 'T' TO WSS-IDD-GAUX IN WSS-VARI
               MOVE WSS-IDD-GAUX IN WSS-VARI TO IDD-GAUX
               MOVE FIO-GET-KEY TO FIO-CMND
               PERFORM COL-FIO-OPC
               MOVE FIO-STAT TO PGM-STAT-OPC
      *         IF NOT FIO-STAT-OKS
               IF NOT PGM-STAT-OPC-OKS
                   MOVE 'COL'        TO MSG-COD-SIST
                   MOVE 'OPC    NEX' TO MSG-COD-MENS
                   PERFORM GET-MSG
                   MOVE MSG-GLS-DESC TO FRM-MENS
                   MOVE SCR-STAT-CON TO SCR-STAT
                   MOVE '00'         TO FIO-STAT
                   GO TO FIN-FND-KEY.

      *Valida Credito este Activado
           IF OPC-MSC-STAT IN OPC NOT = 'A'
               MOVE 'COL'          TO MSG-COD-SIST
               MOVE 'OPC    NOACA' TO MSG-COD-MENS
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS
               MOVE SCR-STAT-CON TO SCR-STAT
               MOVE '00'         TO FIO-STAT
               GO TO FIN-FND-KEY.

      *Valida Credito sea de Consumo
           MOVE 'COL'               TO TAB-COD-SIST.
           MOVE 'AUX'               TO TAB-COD-TTAB IN TAB.
           MOVE OPC-COD-COOC IN OPC TO TAB-COD-CTAB IN TAB.
           PERFORM VAL-COD.
           IF MSG-COD-MENS NOT = 'COD    NEX' AND
              OPC-COD-COOC IN OPC > SPACES
               MOVE TAB-CIC-CTAB IN TAB TO WSS-CIC-COOC IN WSS-VARI
               IF NOT VAL-PTM-CON
                   MOVE 'CREDITO NO ES DE CONSUMO' TO FRM-MENS
                   MOVE SCR-STAT-CON               TO SCR-STAT
                   MOVE '00'                       TO FIO-STAT
                   GO TO FIN-FND-KEY
               ELSE
                   NEXT SENTENCE
           ELSE
               MOVE 'COL'        TO MSG-COD-SIST
               MOVE 'AUXCOOCNEX' TO MSG-COD-MENS
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS
               MOVE SCR-STAT-CON TO SCR-STAT
               MOVE '00'         TO FIO-STAT
               GO TO FIN-FND-KEY.

      *Busca Relacion Deudor Credito
           MOVE OPC-CAI-IOPC IN OPC TO RDC-CAI-IOPC IN RDC.
           MOVE OPC-IIC-IOPC IN OPC TO RDC-IIC-IOPC IN RDC.
           MOVE ZEROES              TO RDC-NUM-IDLC IN RDC.
           MOVE WSS-IDD-GAUX IN WSS-VARI TO IDD-GAUX.
           MOVE 'RDC-KEY-IDLC' TO FIO-AKEY.
           MOVE FIO-GET-KEY    TO FIO-CMND.
           PERFORM COL-FIO-RDC.
           MOVE FIO-STAT TO PGM-STAT-RDC.
      *     IF NOT FIO-STAT-OKS OR
           IF NOT PGM-STAT-RDC-OKS
               MOVE 'COL'          TO MSG-COD-SIST
               MOVE 'OPC    NORDC' TO MSG-COD-MENS
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS
               MOVE SCR-STAT-CON TO SCR-STAT
               MOVE '00'         TO FIO-STAT
               GO TO FIN-FND-KEY.

      *Busca Deudor Credito
           MOVE RDC-CAI-ICLI IN RDC TO DBC-CAI-ICLI IN DBC.
           MOVE RDC-IIC-ICLI IN RDC TO DBC-IIC-ICLI IN DBC.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM SGC-FIO-DBC.
           MOVE FIO-STAT TO PGM-STAT-DBC.
      *     IF NOT FIO-STAT-OKS
           IF NOT PGM-STAT-DBC-OKS
               MOVE 'COL'          TO MSG-COD-SIST
               MOVE 'CICICLINOSGC' TO MSG-COD-MENS
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS
               MOVE SCR-STAT-CON TO SCR-STAT
               MOVE '00'         TO FIO-STAT
               GO TO FIN-FND-KEY.

           MOVE DBC-GLS-NOMC IN DBC TO CPT-STRN.
           PERFORM CPT-BLKS.
           MOVE CPT-STRN TO DBC-GLS-NOMC IN DBC.

       RVO-FIN-FND-KEY.
      *Busca Relacion Credito Original con Credito en Cartera Vencida
           MOVE OPC-CIC-IOPC IN OPC TO RVO-CIC-IOPC IN RVO.
           MOVE RVO-CIC-IOPC IN RVO TO WSS-CIC-IOPC IN WSS-VARI.
           MOVE SPACES              TO RVO-CIC-IVCD IN RVO.
           MOVE FIO-GET-NLS TO FIO-CMND.
           PERFORM COL-FIO-RVO.
           IF NOT ( FIO-STAT-OKS AND
                    RVO-CIC-IOPC IN RVO = OPC-CIC-IOPC IN OPC )
               IF SCR-CMND = 'ACT' 
                   MOVE '00' TO FIO-STAT
                   GO TO FIN-FND-KEY
               ELSE
                   MOVE 'COL'          TO MSG-COD-SIST
                   MOVE 'RVO    NOVCD' TO MSG-COD-MENS
                   PERFORM GET-MSG
                   MOVE MSG-GLS-DESC TO FRM-MENS
                   MOVE SCR-STAT-CON TO SCR-STAT
                   GO TO FIN-FND-KEY.

      *Carga Vector Relaciones de OPC Original con OPC en Cartera Vcda
      *y Limpia Saldo Vector NO Cargado con Relaciones de RVO
           MOVE SPACES TO MSG-COD-MENS.
           MOVE ZEROES TO WSS-IFLD IN WSS-VARI.
           MOVE  18    TO WSS-IMAX IN WSS-VARI.
           PERFORM PUT-TAB-RVO.
           IF WSS-IFLD IN WSS-VARI < WSS-IMAX IN WSS-VARI
               ADD  1  TO WSS-IFLD IN WSS-VARI
               PERFORM LIM-RES-LIN UNTIL
                       WSS-IFLD IN WSS-VARI > WSS-IMAX IN WSS-VARI.

           IF MSG-COD-MENS NOT > SPACES
               MOVE FIO-STAT TO PGM-STAT-RVO.

      *Recupera Credito Original
           MOVE WSS-CIC-IOPC IN WSS-VARI TO OPC-CIC-IOPC IN OPC.
           MOVE WSS-IDD-GAUX IN WSS-VARI TO IDD-GAUX.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM COL-FIO-OPC.

           MOVE '00' TO FIO-STAT.
           GO TO FIN-FND-KEY.
      *>>>>
*% END
*% IF PUT_SCR
      *<<<< PUT_SCR
      *>>>>
*% END
*% IF INI_STP_EXIT
      *<<<< INI_STP_EXIT
      *>>>>
*% END
*% IF FIN_STP_EXIT
      *<<<< FIN_STP_EXIT
      *>>>>
*% END
*% IF PFS_SCR_GKEY
      *<<<< PFS_SCR_GKEY
      *>>>>
*% END
*% IF SCR_GKEY_VAL_IKY
      *<<<< SCR_GKEY_VAL_IKY
      *>>>>
*% END
*% IF SCR_GKEY_VAL_MKY
      *<<<< SCR_GKEY_VAL_MKY
      *>>>>
*% END
*% IF SCR_GKEY_VAL_AKY
      *<<<< SCR_GKEY_VAL_AKY
      *>>>>
*% END
*% IF SCR_GKEY_VAL_CON_KEY
      *<<<< SCR_GKEY_VAL_CON_KEY
      *>>>>
*% END
*% IF ERR_SCR_GKEY
      *<<<< ERR_SCR_GKEY
      *>>>>
*% END
*% IF FIN_SCR_GKEY
      *<<<< FIN_SCR_GKEY
      *>>>>
*% END
*% IF PFS_SCR_GIKY
      *<<<< PFS_SCR_GIKY
      *>>>>
*% END
*% IF SCR_GIKY_VAL_IKY
      *<<<< SCR_GIKY_VAL_IKY
      *>>>>
*% END
*% IF SCR_GIKY_VAL_CON_IKY
      *<<<< SCR_GIKY_VAL_CON_IKY
      *>>>>
*% END
*% IF ERR_SCR_GIKY
      *<<<< ERR_SCR_GIKY
      *>>>>
*% END
*% IF FIN_SCR_GIKY
      *<<<< FIN_SCR_GIKY
      *>>>>
*% END
*% IF PFS_GET_CON
      *<<<< PFS_GET_CON
      *>>>>
*% END
*% IF FIN_GET_CON
      *<<<< FIN_GET_CON
      *>>>>
*% END
*% IF INI_HBL_IKY
      *<<<< INI_HBL_IKY
      *>>>>
*% END
*% IF FIN_HBL_IKY
      *<<<< FIN_HBL_IKY
      *>>>>
*% END
*% IF INI_HBL_KEY
      *<<<< INI_HBL_KEY
      *>>>>
*% END
*% IF FIN_HBL_KEY
      *<<<< FIN_HBL_KEY
      *>>>>
*% END
*% IF INI_HBL_FLD
      *<<<< INI_HBL_FLD
      *>>>>
*% END
*% IF FIN_HBL_FLD
      *<<<< FIN_HBL_FLD
      *>>>>
*% END
*% IF INI_PRO_ALL
      *<<<< INI_PRO_ALL
      *>>>>
*% END
*% IF FIN_PRO_ALL
      *<<<< FIN_PRO_ALL
      *>>>>
*% END
*% IF INI_SCR_TRL
      *<<<< INI_SCR_TRL
      *>>>>
*% END
*% IF INI_SCR_TRL_PQ
      *<<<< INI_SCR_TRL_PQ
      *>>>>
*% END
*% IF FIN_SCR_TRL
      *<<<< FIN_SCR_TRL
      *>>>>
*% END
*%! Codigo adicional para archivo
*% IF INI_XCT_PRGP
      *<<<< INI_XCT_PRGP
      *>>>>
*% END
*% IF GET_FLD
      *<<<< GET_FLD
      *>>>>
*% END
*% IF INI_CMN_MOD
      *<<<< INI_CMN_MOD
           PERFORM DEL-RVO.
           IF MSG-COD-MENS > SPACES
      *        ERROR INCONSISTENCIA EN LA ELIMINACION : INFORMAR
               GO TO FIN-CMN-MOD.
           GO TO GEN-RVO.
      *>>>>
*% END
*% IF CMN_MOD_RET
      *<<<< CMN_MOD_RET
      *>>>>
*% END
*% IF CMN_MOD
      *<<<< CMN_MOD
      *>>>>
*% END
*% IF FIN_CMN_MOD
      *<<<< FIN_CMN_MOD
       GEN-RVO.
           PERFORM PUT-RVO VARYING WSS-IFLD IN WSS-VARI FROM 1 BY 1
                             UNTIL WSS-IFLD IN WSS-VARI > 18.
      *>>>>
*% END
*% IF INI_CMN_ING
      *<<<< INI_CMN_ING
      *>>>>
*% END
*% IF CMN_ING
      *<<<< CMN_ING
      *>>>>
*% END
*% IF FIN_CMN_ING
      *<<<< FIN_CMN_ING
      *>>>>
*% END
*% IF ABT_CMN_ACC
      *<<<< ABT_CMN_ACC
      *>>>>
*% END
*% IF INI_CMN_ACC
      *<<<< INI_CMN_ACC
      *>>>>
*% END
*% IF CMN_ACC_RET
      *<<<< CMN_ACC_RET
      *>>>>
*% END
*% IF CMN_ACC
      *<<<< CMN_ACC
      *>>>>
*% END
*% IF INI_CMN_ELI
      *<<<< INI_CMN_ELI
      *>>>>
*% END
*% IF CMN_ELI
      *<<<< CMN_ELI
      *>>>>
*% END
*% IF FIN_CMN_ELI
      *<<<< FIN_CMN_ELI
      *>>>>
*% END
*% IF INI_CMN_PGM
      *<<<< INI_CMN_PGM
      *>>>>
*% END
*% IF CMN_PGM
      *<<<< CMN_PGM
      *>>>>
*% END
*% IF PFS_SCR_GFLD
      *<<<< PFS_SCR_GFLD
      *>>>>
*% END
*% IF SCR_GFLD_VAL_MKY
      *<<<< SCR_GFLD_VAL_MKY
      *>>>>
*% END
*% IF SCR_GFLD_VAL_FLD
      *<<<< SCR_GFLD_VAL_FLD
      *>>>>
*% END
*% IF SCR_GFLD_VAL_CON_FLD
      *<<<< SCR_GFLD_VAL_CON_FLD
      *>>>>
*% END
*% IF ERR_SCR_GFLD
      *<<<< ERR_SCR_GFLD
      *>>>>
*% END
*% IF FIN_SCR_GFLD
      *<<<< FIN_SCR_GFLD
      *>>>>
*% END
*% IF PFS_GET_ACC
      *<<<< PFS_GET_ACC
      *>>>>
*% END
*% IF FIN_GET_ACC
      *<<<< FIN_GET_ACC
      *>>>>
*% END
*% IF INI_SCR_TRL_PU
      *<<<< INI_SCR_TRL_PU
      *>>>>
*% END
*% IF INI_PRO_CONF
      *<<<< INI_PRO_CONF
      *>>>>
*% END
*% IF PFS_SCR_GCNF
      *<<<< PFS_SCR_GCNF
      *>>>>
*% END
*% IF FIN_SCR_GCNF
      *<<<< FIN_SCR_GCNF
      *>>>>
*% END
*% IF MANEJO_MAPA
      *<<<< MANEJO_MAPA
      *>>>>
*% END
*% IF EOF
      *<<<< EOF
      *Carga Vector Relaciones de OPC Original con OPC en Cartera Vcda
       PUT-TAB-RVO SECTION.
       INI-PUT-TAB-RVO.
           ADD 1 TO WSS-IFLD IN WSS-VARI.
           IF WSS-IFLD IN WSS-VARI > WSS-IMAX IN WSS-VARI
               GO TO FIN-PUT-TAB-RVO.

           MOVE RVO-CIC-IVCD IN RVO TO OPC-CIC-IOPC IN OPC.
           MOVE FIO-GET-KEY TO FIO-CMND.
           MOVE 'M'         TO IDD-GAUX.
           PERFORM COL-FIO-OPC.
           IF NOT FIO-STAT-OKS
      *  Operacion Inexistente
               MOVE 'COL'        TO MSG-COD-SIST
               MOVE 'OPC    NEX' TO MSG-COD-MENS
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS
               MOVE FIO-STAT-NEX TO PGM-STAT-OPC
               MOVE SCR-STAT-CON TO SCR-STAT
               GO TO FIN-PUT-TAB-RVO.

           MOVE OPC-CAI-IOPC IN OPC TO FRM-CAI-IVCD
                                             IN RVO-FLD(WSS-IFLD).
           MOVE OPC-IIC-IOPC IN OPC TO FRM-IIC-IVCD
                                             IN RVO-FLD(WSS-IFLD).
       NXT-PUT-TAB-RVO.
           MOVE FIO-GET-NXT TO FIO-CMND.
           PERFORM COL-FIO-RVO.
           IF FIO-STAT-OKS AND
               RVO-CIC-IOPC IN RVO = WSS-CIC-IOPC IN WSS-VARI
               GO TO INI-PUT-TAB-RVO.
       FIN-PUT-TAB-RVO.
           EXIT.

      *Limpia Vector Relaciones de OPC Original con OPC en Cartera Vcda
       LIM-RES-LIN SECTION.
       INI-LIM-RES-LIN.
           MOVE SPACES TO FRM-CAI-IVCD IN RVO-FLD(WSS-IFLD).
           MOVE ZEROES TO FRM-IIC-IVCD IN RVO-FLD(WSS-IFLD).
           ADD  1  TO WSS-IFLD IN WSS-VARI.
       FIN-LIM-RES-LIN.
           EXIT.

      *Elimina TODAS las Relaciones de OPC Original con OPC en Cartera Vcda
       DEL-RVO SECTION.
       INI-DEL-RVO.
           MOVE OPC-CAI-IOPC IN RVO-FLD TO RVO-CAI-IOPC IN RVO.
           MOVE OPC-IIC-IOPC IN RVO-FLD TO RVO-IIC-IOPC IN RVO.
           MOVE SPACES                  TO RVO-CIC-IVCD IN RVO.
           MOVE FIO-GET-NLS TO FIO-CMND.
       LUP-DEL-RVO.
           PERFORM COL-FIO-RVO.
           IF NOT ( FIO-STAT-OKS AND
                    RVO-CAI-IOPC IN RVO = OPC-CAI-IOPC IN RVO-FLD AND
                    RVO-IIC-IOPC IN RVO = OPC-IIC-IOPC IN RVO-FLD )
               MOVE '00' TO FIO-STAT
               GO TO FIN-DEL-RVO.

           MOVE FIO-GET-KEY-UPD TO FIO-CMND.
           PERFORM COL-FIO-RVO.
           IF NOT FIO-STAT-OKS
               GO TO FIN-DEL-RVO.

           MOVE FIO-DEL TO FIO-CMND.
           PERFORM COL-FIO-RVO.
           IF NOT FIO-STAT-OKS
               MOVE 'COL'          TO MSG-COD-SIST
               MOVE 'RVO    NODEL' TO MSG-COD-MENS
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS
               GO TO FIN-DEL-RVO.

           MOVE FIO-GET-NXT TO FIO-CMND.
           GO TO LUP-DEL-RVO.
       FIN-DEL-RVO.
           EXIT.

      *Graba TODAS las Relaciones de OPC Original con OPC en Cartera Vcda
       PUT-RVO SECTION.
       INI-PUT-RVO.
           IF FRM-CAI-IVCD IN RVO-FLD(WSS-IFLD) NOT > SPACES OR
              FRM-IIC-IVCD IN RVO-FLD(WSS-IFLD) NOT > ZEROES
               GO TO FIN-PUT-RVO.

           MOVE OPC-CAI-IOPC IN RVO-FLD TO RVO-CAI-IOPC IN RVO.
           MOVE OPC-IIC-IOPC IN RVO-FLD TO RVO-IIC-IOPC IN RVO.
           MOVE FRM-CAI-IVCD IN RVO-FLD(WSS-IFLD) TO
                                           RVO-CAI-IVCD IN RVO.
           MOVE FRM-IIC-IVCD IN RVO-FLD(WSS-IFLD) TO
                                           RVO-IIC-IVCD IN RVO.
           MOVE SPACES                  TO RVO-GLS-DISP IN RVO.
           MOVE FIO-PUT TO FIO-CMND.
           PERFORM COL-FIO-RVO.
           IF NOT FIO-STAT-OKS
               MOVE 'COL'          TO MSG-COD-SIST
               MOVE 'RVO    NOPUT' TO MSG-COD-MENS
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MEN1
      *        ERROR INCONSISTENCIA EN LA ELIMINACION : INFORMAR
               MOVE FIO-MENS     TO FRM-MEN2
               MOVE SCR-STAT-CON TO SCR-STAT
               MOVE 13 TO WSS-IFLD IN WSS-VARI
               GO TO FIN-PUT-RVO.
       FIN-PUT-RVO.
           EXIT.

      *COPY COLBFOPC.
      * Se debe ocupar IDD del programa con T=261
      * Modulo FIO para registro OPC en DATACOM, 25-MAR-1993 10:00:37.98
       COL-FIO-OPC SECTION.
       INI-COL-FIO-OPC.
           MOVE ADR-OPC-REQA TO ADR-REQA.
           MOVE 'OPC' TO ADR-TABL IN ADR-REQA.
      *
           MOVE 'COL'  TO IDD-SAUX.
      *DAD MOVE 'M'    TO IDD-GAUX.
           MOVE SPACES TO IDD-RAUX.
           MOVE 1 TO IDD-IAUX.
           SET IDD-ITBL TO 1.
           SEARCH IDD-VSIS VARYING IDD-IAUX
             AT END
               GO TO GRP-COL-FIO-OPC
             WHEN IDD-DENT( IDD-ITBL ) = IDD-DAUX
               MOVE IDD-IENT( IDD-ITBL) TO ADR-DBID IN ADR-REQA
               GO TO FSR-COL-FIO-OPC.
       GRP-COL-FIO-OPC.
           MOVE SPACES TO IDD-GAUX.
           MOVE 1      TO IDD-IAUX.
           SET IDD-ITBL TO 1.
           SEARCH IDD-VSIS VARYING IDD-IAUX
             AT END
               MOVE 'En COL-FIO-OPC, NO existe en IDD:' TO FIO-MEN1
               MOVE IDD-DAUX                            TO FIO-MEN2
               PERFORM PRG-ABT
             WHEN IDD-DENT( IDD-ITBL ) = IDD-DAUX
               MOVE IDD-IENT( IDD-ITBL) TO ADR-DBID IN ADR-REQA.
       FSR-COL-FIO-OPC.
      *
           MOVE 'OPC00' TO ADR-ELM1.
           MOVE FIO-PROG TO ADR-PROG.
           IF FIO-KDEF = FIO-KDEF-S
               GO TO CON-COL-FIO-OPC.
           MOVE FIO-CMND TO FIO-IAKY.
           IF NOT FIO-IAKY-CON AND
              ( FIO-AKEY = 'OPC-KEY-IOPC' OR FIO-AKEY NOT > SPACES )
               MOVE OPC-KEY-IOPC IN OPC TO ADR-VKEY IN ADR-REQA
               MOVE 'OPC00' TO ADR-DKEY IN ADR-REQA
           ELSE
           IF FIO-AKEY = 'OPC-FEC-FCOL'
               MOVE OPC-FEC-FCOL IN OPC TO ADR-VKEY IN ADR-REQA
               MOVE 'OPC01' TO ADR-DKEY IN ADR-REQA
           ELSE
           IF FIO-AKEY = 'OPC-FEC-FING'
               MOVE OPC-FEC-FING IN OPC TO ADR-VKEY IN ADR-REQA
               MOVE 'OPC02' TO ADR-DKEY IN ADR-REQA
           ELSE
           IF FIO-AKEY = 'OPC-FEC-FINP'
               MOVE OPC-FEC-FINP IN OPC TO ADR-VKEY IN ADR-REQA
               MOVE 'OPC03' TO ADR-DKEY IN ADR-REQA
           ELSE
               MOVE 'En COL-FIO-OPC, key' TO FIO-MENS
               MOVE FIO-AKEY   TO FIO-MENS-KEY
               MOVE 'Invalida' TO FIO-MENS-FIL
               PERFORM PRG-ABT.
       CON-COL-FIO-OPC.
           MOVE OPC TO FIO-DFLD.
           PERFORM GNS-FIO-DTC.
           IF FIO-STAT-OKS
               MOVE FIO-DFLD TO OPC
           ELSE
               MOVE 'COLOPC' TO FIO-MEN2
               IF FIO-STAT-FTL
                   PERFORM PRG-ABT.
           MOVE SPACES   TO FIO-AKEY.
           MOVE FIO-KDEF-N TO FIO-KDEF.
           MOVE ADR-REQA TO ADR-OPC-REQA.
       FIN-COL-FIO-OPC.
           EXIT.

      *COPY COLBFRDC.
      * Se debe ocupar IDD del programa con T=261
      * Modulo FIO para registro RDC en DATACOM, 25-MAR-1993 10:01:28.12
       COL-FIO-RDC SECTION.
       INI-COL-FIO-RDC.
           MOVE ADR-RDC-REQA TO ADR-REQA.
           MOVE 'RDC' TO ADR-TABL IN ADR-REQA.
      *
           MOVE 'COL'  TO IDD-SAUX.
      *DAD MOVE 'M'    TO IDD-GAUX.
           MOVE SPACES TO IDD-RAUX.
           MOVE 1 TO IDD-IAUX.
           SET IDD-ITBL TO 1.
           SEARCH IDD-VSIS VARYING IDD-IAUX
             AT END
               GO TO GRP-COL-FIO-RDC
             WHEN IDD-DENT( IDD-ITBL ) = IDD-DAUX
               MOVE IDD-IENT( IDD-ITBL) TO ADR-DBID IN ADR-REQA
               GO TO FSR-COL-FIO-RDC.
       GRP-COL-FIO-RDC.
           MOVE SPACES TO IDD-GAUX.
           MOVE 1      TO IDD-IAUX.
           SET IDD-ITBL TO 1.
           SEARCH IDD-VSIS VARYING IDD-IAUX
             AT END
               MOVE 'En COL-FIO-RDC, NO existe en IDD:' TO FIO-MEN1
               MOVE IDD-DAUX                            TO FIO-MEN2
               PERFORM PRG-ABT
             WHEN IDD-DENT( IDD-ITBL ) = IDD-DAUX
               MOVE IDD-IENT( IDD-ITBL) TO ADR-DBID IN ADR-REQA.
       FSR-COL-FIO-RDC.
      *
           MOVE 'RDC00' TO ADR-ELM1.
           MOVE FIO-PROG TO ADR-PROG.
           IF FIO-KDEF = FIO-KDEF-S
               GO TO CON-COL-FIO-RDC.
           MOVE FIO-CMND TO FIO-IAKY.
           IF NOT FIO-IAKY-CON AND
              ( FIO-AKEY = 'RDC-KEY-IRDC' OR FIO-AKEY NOT > SPACES )
               MOVE RDC-KEY-IRDC IN RDC TO ADR-VKEY IN ADR-REQA
               MOVE 'RDC00' TO ADR-DKEY IN ADR-REQA
           ELSE
           IF FIO-AKEY = 'RDC-KEY-IDLC'
               MOVE RDC-KEY-IDLC IN RDC TO ADR-VKEY IN ADR-REQA
               MOVE 'RDC01' TO ADR-DKEY IN ADR-REQA
           ELSE
               MOVE 'En COL-FIO-RDC, key' TO FIO-MENS
               MOVE FIO-AKEY   TO FIO-MENS-KEY
               MOVE 'Invalida' TO FIO-MENS-FIL
               PERFORM PRG-ABT.
       CON-COL-FIO-RDC.
           MOVE RDC TO FIO-DFLD.
           PERFORM GNS-FIO-DTC.
           IF FIO-STAT-OKS
               MOVE FIO-DFLD TO RDC
           ELSE
               MOVE 'COLRDC' TO FIO-MEN2
               IF FIO-STAT-FTL
                   PERFORM PRG-ABT.
           MOVE SPACES   TO FIO-AKEY.
           MOVE FIO-KDEF-N TO FIO-KDEF.
           MOVE ADR-REQA TO ADR-RDC-REQA.
       FIN-COL-FIO-RDC.
           EXIT.

       COPY COLBFRVO.
       COPY SGCBFDBC.

       COPY GNSBVCOD.
       COPY GNSBVTAB.
       COPY GNSBGCPT.
       COPY GNSBGFEC.
       COPY GNSBGHOY.
      *>>>>
*% END
*% IF EOF_IBM
      *<<<< EOF_IBM
      *>>>>
*% END
*% IF EOF_V31
      *<<<< EOF_V31
      *>>>>
*% END
*% IF EOF_PQ
      *<<<< EOF_PQ
      *>>>>
*% END
*% IF EOF_PU
      *<<<< EOF_PU
      *>>>>
*% END
