*%! Codigo adicional para archivo
*% LARGO_MI_COMMAREA = 20
*% IF MI_COMMAREA
      *<<<< MI_COMMAREA
           03 CMA-VARI.
              05 SCR-IMAX      COMP                   PIC S9(04).
              05 SCR-I         COMP                   PIC S9(04).
      *>>>>
*% END
*% IF WSS
      *<<<< WSS
       COPY GNSWGQUE.
       COPY COLWGDEC.
       COPY GNSBRMSC.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-MSC-REQA==.
       COPY GNSWGPES.
       COPY COLWGCCN.
       COPY TABBRCAM.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-CAM-REQA==.
       COPY COLBRCOM.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-COM-REQA==.
       COPY COLBRDIC.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-DIC-REQA==.
       COPY COLBRIXT.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-IXT-REQA==.
       COPY COLBRTOC.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-TOC-REQA==.
       COPY COLBROPC.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-OPC-REQA==.
       COPY COLBRROV.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-ROV-REQA==.
       COPY COLBRRCV.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-RCV-REQA==.
       COPY COLBRDLC.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-DLC-REQA==.
       COPY COLBREVC.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-EVC-REQA==.
       01  WSS-VARI.
           03  WSS-MSJE.
               05 WSS-FILL    VALUE 'VAR:'     PIC X(04).
               05 WSS-IIND                     PIC X(02).
               05 WSS-IIMA                     PIC X(02).
               05 WSS-IDEC                     PIC X(02).
           03  WSS-I                              PIC 9(02).
           03  WSS-IND-SLFI  VALUE 'N'            PIC X(01).
           03  AUX-CIC-IOPC      VALUE SPACES     PIC X(12).
           03  WSS-MSC-TVOC                       PIC X(06).
           03  WSS-COD-PESO                       PIC X(06).
           03  WSS-SGV-VCAM  VALUE ZEROES        PIC S9(11)V9(04).
           03  WSS-OPEC                           PIC X(01).
           03  WSS-VAL-DIFE          COMP-3        PIC S9(11)V9(4).
           03  WSS-SGV-TREN  VALUE ZEROES         PIC 9(11)V9(04).
           03  WSS-SGV-INTN  VALUE ZEROES         PIC S9(11)V9(04).
           03  WSS-SGV-RENO  VALUE ZEROES         PIC 9(11)V9(04).
           03  WSS-SGV-PASO  VALUE ZEROES            PIC S9(11)V9(05).
           03  WSS-SGV-CAPI  VALUE ZEROES         PIC 9(11)V9(04).
           03  WSS-SGV-REAJ  VALUE ZEROES         PIC S9(11)V9(04).
           03  WSS-IND-SWCOM                      PIC X(01).
           03  WSS-SGV-MIVA             COMP-3    PIC S9(11)V9(4).
           03  WSS-SGV-MNTO             COMP-3    PIC S9(11)V9(4).
           03  WSS-COD-CAUX.
               05 WSS-COD-TOOC          PIC X(03).
      *>>>>
*% END
*% IF PFS_SCR_ACC
      *<<<< PFS_SCR_ACC
           IF FRM-FFLD = FRM-FFLD-PF6
                    OR   FRM-FFLD-PF5
               PERFORM VAL-NUM-KEY-DEC
               PERFORM VAL-NUM-FLD-DEC
               PERFORM RST-STAT
               PERFORM FND-SCR-KEY THRU FIN-SCR-KEY
               IF SCR-STAT NOT = SCR-STAT-ABT
                   PERFORM SCR-TRL
               ELSE
                   PERFORM DESSCRTRL
                   GO TO FIN-SCR-ACC.
      *>>>>
*% END
*% IF INI_FND_KEY
      *<<<< INI_FND_KEY
           MOVE SPACES TO FRM-MEN1.
           IF FRM-FFLD = FRM-FFLD-PF5
               MOVE PGM-SNUL TO PGM-STAT-CAN
               MOVE PGM-SNUL TO PGM-STAT-OPC
               SUBTRACT 1 FROM SCR-I GIVING DEC-I
               IF DEC-I NOT > ZEROES
                   MOVE 'DEC CANPRV' TO MSG-COD-MENS
                   GO TO ERR-FND-KEY
               ELSE
                   GO TO CARGA-DEC
           ELSE
           IF FRM-FFLD = FRM-FFLD-PF6
               MOVE PGM-SNUL TO PGM-STAT-CAN
               MOVE PGM-SNUL TO PGM-STAT-OPC
               ADD 1 SCR-I GIVING DEC-I
               IF DEC-I > SCR-IMAX
                   MOVE 'DEC CANNXT' TO MSG-COD-MENS
                   GO TO ERR-FND-KEY
               ELSE
                   GO TO CARGA-DEC.
      *>>>>
*% END
*% IF FIN_FND_KEY
      *<<<< FIN_FND_KEY
           IF NOT FIO-STAT-OKS
               GO TO FIN-FND-KEY.
           MOVE CAN-KEY-ICAN IN CAN TO RCV-KEY-ICAN IN RCV.
           MOVE SPACES              TO RCV-CIC-IOPV IN RCV.
           MOVE ZEROES              TO RCV-NUM-IVCT IN RCV.
           MOVE FIO-GET-NLS TO FIO-CMND.
           PERFORM COL-FIO-RCV.
           IF NOT ( FIO-STAT-OKS AND
              CAN-KEY-ICAN IN CAN = RCV-KEY-ICAN IN RCV)
               GO TO FIN-FND-KEY.
      *
           MOVE ZEROES TO SCR-IMAX.
           MOVE 1 TO SCR-I.
           MOVE '00' TO FIO-STAT.
           PERFORM OBT-DAT-TS.
           MOVE 1 TO SCR-I.
           MOVE SCR-I TO DEC-I.
       CARGA-DEC.
           MOVE SPACES TO MSG-COD-MENS.
           PERFORM PUT-TAB-DEC.
           MOVE '00' TO FIO-STAT.
           GO TO FIN-FND-KEY.
      *
       ERR-FND-KEY.
           MOVE SCR-STAT-CON TO SCR-STAT.
      *    IF FRM-MENS > SPACES
      *        MOVE '00' TO FIO-STAT.
      *        GO TO FIN-FND-KEY.

           MOVE 'COL' TO MSG-COD-SIST.
           PERFORM GET-MSG.
           MOVE MSG-GLS-DESC TO FRM-MEN1.
           MOVE '00' TO FIO-STAT.
           GO TO FIN-FND-KEY.
      *>>>>
*% END
*% IF PFS_GET_CON OR PFS_GET_ACC
      *<<<< PFS_GET_CON OR PFS_GET_ACC
           IF NOT ( FRM-FFLD = FRM-FFLD-PF6
                          OR   FRM-FFLD-PF5
                  )
      *>>>>
*% END
*% IF EOF
      *<<<< EOF
       COPY GNSBGQUE.
       COPY GNSBFMSC.
       COPY GNSBGPES.
       COPY TABBFCAM.
       COPY COLBFROV.
       COPY COLBFRCV.
       COPY COLBFOPC.
       COPY COLBFTOC.
       COPY COLBFCOM.
       COPY COLBFDLC.
       COPY COLBFEVC.
       COPY COLBFDIC.
       COPY COLBFIXT.
       CAR-MOV-RCV SECTION.
       INI-CAR-MOV-RCV.
           IF WSS-OPEC NOT = 'D' AND
              WSS-IND-SLFI IN WSS-VARI NOT = 'S'
             MULTIPLY RCV-SGV-CAPI IN RCV BY WSS-SGV-VCAM IN WSS-VARI
             GIVING WSS-SGV-PASO IN WSS-VARI ROUNDED
           ELSE
           IF RCV-MSC-MCAN IN RCV NOT = 'V'
             MULTIPLY RCV-SGV-CAPI IN RCV BY WSS-SGV-VCAM IN WSS-VARI
             GIVING WSS-SGV-PASO IN WSS-VARI ROUNDED
           ELSE
             MULTIPLY RCV-SGV-FINA IN RCV BY WSS-SGV-VCAM IN WSS-VARI
             GIVING WSS-SGV-PASO IN WSS-VARI ROUNDED.

           IF OPC-MSC-TVOC IN OPC = WSS-MSC-TVOC IN WSS-VARI
              MOVE WSS-SGV-PASO IN WSS-VARI TO
                   PES-SGV-DECI IN PES-VARI
              PERFORM PES-SCTV
              MOVE PES-SGV-ENTE IN PES-VARI TO
                   WSS-SGV-PASO IN WSS-VARI.
      *CALCULO REAJUSTES
           COMPUTE WSS-SGV-REAJ IN WSS-VARI =
                             RCV-SGV-REAJ IN RCV.
           MOVE 'RJS'  TO DEC-COD-CPTO(DEC-I)
           IF WSS-SGV-REAJ IN WSS-VARI NOT = 0
              IF OPC-MSC-TVOC IN OPC = WSS-MSC-TVOC IN WSS-VARI
                 MOVE WSS-SGV-REAJ IN WSS-VARI TO
                      PES-SGV-DECI IN PES-VARI
                 PERFORM PES-SCTV
                 MOVE PES-SGV-ENTE IN PES-VARI TO
                      WSS-SGV-REAJ IN WSS-VARI
                 MOVE WSS-SGV-REAJ IN WSS-VARI TO
                      DEC-VAL-CPTO(DEC-I)
                 PERFORM INC-REG-TS
              ELSE
                 MOVE WSS-SGV-REAJ IN WSS-VARI TO
                      DEC-VAL-CPTO(DEC-I)
                 PERFORM INC-REG-TS.
      *INTERESES MORATORIOS
           IF RCV-SGV-INTM IN RCV NOT = 0
               MOVE 'INTMOR'  TO DEC-COD-CPTO(DEC-I)
               MOVE RCV-SGV-INTM IN RCV TO
                    DEC-VAL-CPTO(DEC-I)
               PERFORM INC-REG-TS.
      *
           IF CAN-SGV-IMOK IN CAN NOT = 0
               MOVE 'INTMOR'  TO DEC-COD-CPTO(DEC-I)
               MOVE CAN-SGV-IMOK IN CAN TO
                    DEC-VAL-CPTO(DEC-I)
               PERFORM INC-REG-TS.
      *
      *CALCULO CAPITAL
           IF RCV-SGV-CAPI IN RCV NOT = 0
             MULTIPLY RCV-SGV-CAPI IN RCV BY WSS-SGV-VCAM IN WSS-VARI
                              GIVING WSS-SGV-PASO IN WSS-VARI ROUNDED
             MOVE 'CPA'  TO DEC-COD-CPTO(DEC-I)
             IF OPC-MSC-TVOC IN OPC = WSS-MSC-TVOC IN WSS-VARI
               MOVE WSS-SGV-PASO IN WSS-VARI TO
                    PES-SGV-DECI IN PES-VARI
               PERFORM PES-SCTV
               MOVE PES-SGV-ENTE IN PES-VARI TO
                    WSS-SGV-PASO IN WSS-VARI
               MOVE WSS-SGV-PASO IN WSS-VARI TO
                      DEC-VAL-CPTO(DEC-I)
               MOVE DEC-VAL-CPTO(DEC-I) TO WSS-SGV-CAPI
               PERFORM INC-REG-TS
             ELSE
               MOVE WSS-SGV-PASO IN WSS-VARI TO
                      DEC-VAL-CPTO(DEC-I)
               MOVE DEC-VAL-CPTO(DEC-I) TO WSS-SGV-CAPI
               PERFORM INC-REG-TS.
           MOVE RCV-SGV-INTN IN RCV TO WSS-SGV-INTN IN WSS-VARI.

           IF (CAN-MSC-TCAN IN CAN = 'P' OR 'K' ) AND
              OPC-COD-VCOC IN OPC NOT = WSS-COD-PESO IN WSS-VARI
               MULTIPLY ROV-SGV-RENO IN ROV BY
                        WSS-SGV-VCAM IN WSS-VARI GIVING
                        WSS-SGV-RENO IN WSS-VARI
           ELSE
           IF (CAN-MSC-TCAN IN CAN = 'P' OR 'K' )
               MOVE ROV-SGV-RENO IN ROV TO WSS-SGV-RENO IN WSS-VARI
           ELSE
               MOVE CAN-SGV-TREN IN CAN TO WSS-SGV-RENO IN WSS-VARI.

           SUBTRACT WSS-SGV-RENO IN WSS-VARI FROM CAN-SGV-TREN IN CAN
                    GIVING WSS-SGV-TREN IN WSS-VARI.

           IF WSS-SGV-TREN IN WSS-VARI NOT < -10 AND
              WSS-SGV-TREN IN WSS-VARI NOT > 10
               MOVE CAN-SGV-TREN IN CAN TO WSS-SGV-RENO IN WSS-VARI.

      *    IF DEC-COD-CPTO(DEC-I) = 'CPA   ' AND
           IF (CAN-MSC-TCAN IN CAN = 'P' OR
               CAN-MSC-TCAN IN CAN = 'K' OR
              CAN-MSC-TCAN IN CAN = 'R')
               IF OPC-COD-VCOC IN OPC NOT = WSS-COD-PESO IN WSS-VARI
                   COMPUTE WSS-VAL-DIFE IN WSS-VARI =
                                    WSS-SGV-CAPI IN WSS-VARI -
                                    WSS-SGV-RENO IN WSS-VARI
                   MOVE WSS-VAL-DIFE IN WSS-VARI
                                  TO PES-SGV-DECI IN PES-VARI
                   PERFORM PES-SCTV
                   MOVE PES-SGV-ENTE IN PES-VARI TO WSS-VAL-DIFE
                   IF WSS-VAL-DIFE IN WSS-VARI > -10 AND
                      WSS-VAL-DIFE IN WSS-VARI < 10
                       MOVE WSS-SGV-RENO IN WSS-VARI
                                     TO PES-SGV-DECI IN PES-VARI
                       PERFORM PES-SCTV
                       MOVE PES-SGV-ENTE IN PES-VARI
                                     TO WSS-SGV-RENO IN WSS-VARI.

           IF ( CAN-MSC-TCAN IN CAN = 'P' OR 'K' )
             COMPUTE WSS-SGV-INTN IN WSS-VARI =
                                      WSS-SGV-RENO IN WSS-VARI +
                                      CAN-SGV-TPAG IN CAN -
                                      CAN-SGV-COMI IN CAN -
                                      WSS-SGV-CAPI IN WSS-VARI -
                                      WSS-SGV-REAJ IN WSS-VARI -
                                      WSS-SGV-MNTO IN WSS-VARI -
                                      WSS-SGV-MIVA IN WSS-VARI -
                                    ( RCV-SGV-INTM IN RCV +
                                      CAN-SGV-IMOK IN CAN ).

           IF WSS-SGV-INTN IN WSS-VARI NOT = 0
               IF OPC-MSC-TVOC IN OPC = WSS-MSC-TVOC IN WSS-VARI
                  MOVE WSS-SGV-INTN IN WSS-VARI TO
                       PES-SGV-DECI IN PES-VARI
                  PERFORM PES-SCTV
                  MOVE PES-SGV-ENTE IN PES-VARI TO
                       WSS-SGV-INTN IN WSS-VARI.

           IF WSS-SGV-INTN IN WSS-VARI NOT = 0
              IF WSS-SGV-INTN IN WSS-VARI < 0
                 MOVE ZEROES TO WSS-SGV-INTN IN WSS-VARI
              ELSE
                 MOVE 'INT'  TO DEC-COD-CPTO(DEC-I)
                 MOVE WSS-SGV-INTN IN WSS-VARI TO
                    DEC-VAL-CPTO(DEC-I)
                 PERFORM INC-REG-TS.

           IF WSS-OPEC NOT = 'D' AND
              WSS-IND-SLFI IN WSS-VARI = 'S' AND
              WSS-SGV-INTN IN WSS-VARI NOT = 0
               MOVE 'INTPNG'  TO DEC-COD-CPTO(DEC-I)
               IF OPC-MSC-TVOC IN OPC = WSS-MSC-TVOC IN WSS-VARI
                  MOVE WSS-SGV-INTN IN WSS-VARI TO
                       PES-SGV-DECI IN PES-VARI
                  PERFORM PES-SCTV
                  MOVE PES-SGV-ENTE IN PES-VARI TO
                       WSS-SGV-INTN IN WSS-VARI
                  MOVE WSS-SGV-INTN IN WSS-VARI TO
                  DEC-VAL-CPTO(DEC-I)
                  PERFORM INC-REG-TS
               ELSE
                  MOVE WSS-SGV-INTN IN WSS-VARI TO
                  DEC-VAL-CPTO(DEC-I)
                  PERFORM INC-REG-TS.
       FIN-CAR-MOV-RCV.
           EXIT.
       OBT-PARAM SECTION.
       INI-OBT-PARAM.
           MOVE 'TAB'          TO FIO-SIST.
           MOVE 'VLR'          TO TAB-CIC-TTAB IN TAB.
           MOVE '0999  '       TO TAB-CIC-CTAB IN TAB.
           MOVE 'TAB-CIC-TABL' TO FIO-AKEY.
           MOVE FIO-GET-KEY    TO FIO-CMND.
           PERFORM GNS-FIO-TAB.
           IF NOT FIO-STAT-OKS
               GO TO FIN-OBT-PARAM.
           MOVE TAB-COD-CTAB IN TAB TO WSS-COD-PESO IN WSS-VARI.

           MOVE 'TAB'  TO FIO-SIST.
           MOVE 'TVAL' TO MSC-CIC-TMSC IN MSC.
           MOVE '0'    TO MSC-CIC-CMSC IN MSC.
           MOVE 'MSC-CIC-TABL' TO FIO-AKEY.
           MOVE FIO-GET-KEY    TO FIO-CMND.
           PERFORM GNS-FIO-MSC.
           IF NOT FIO-STAT-OKS
               GO TO FIN-OBT-PARAM.
           MOVE MSC-COD-CMSC IN MSC TO WSS-MSC-TVOC IN WSS-VARI.
      *Lee TOC
           MOVE OPC-COD-TOOC IN OPC TO TOC-COD-TOCR IN TOC.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM COL-FIO-TOC.
      *Obtiene Como Opera
           MOVE 'COL'               TO MSC-COD-SIST FIO-SIST.
           MOVE 'OPEC'              TO MSC-COD-TMSC IN MSC.
           MOVE TOC-MSC-OPEC IN TOC TO MSC-COD-CMSC IN MSC.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM GNS-FIO-MSC.
           MOVE MSC-CIC-CMSC IN MSC TO WSS-OPEC IN WSS-VARI.

      *DPM INI  15-OCT-1996
           MOVE OPC-CIC-IOPC IN OPC TO EVC-CIC-IOPC IN EVC.
           MOVE ZEROES TO EVC-NUM-IEVC IN EVC.
           MOVE FIO-GET-NLS TO FIO-CMND.
           MOVE 'N' TO WSS-IND-SLFI IN WSS-VARI.
       LUP-LEE-EVC.
           PERFORM COL-FIO-EVC.
           IF FIO-STAT-OKS AND
              OPC-CIC-IOPC IN OPC = EVC-CIC-IOPC IN EVC
               IF EVC-MSC-TCVE IN EVC = 'FI'
                 MOVE 'S' TO WSS-IND-SLFI IN WSS-VARI
                 MOVE FIO-GET-NXT TO FIO-CMND
                 GO TO LUP-LEE-EVC
               ELSE
                 MOVE 'N' TO WSS-IND-SLFI IN WSS-VARI.
       FIN-OBT-PARAM.
           EXIT.
       LEE-OPC SECTION.
       INI-LEE-OPC.
      *LEER-DLC
           PERFORM LEE-DLC.
      *
           MOVE CAN-CIC-IOPC IN CAN TO OPC-CIC-IOPC IN OPC
           MOVE FIO-GET-KEY TO FIO-CMND
           PERFORM COL-FIO-OPC
           MOVE FIO-STAT TO PGM-STAT-OPC
           IF NOT FIO-STAT-OKS
              GO TO FIN-LEE-OPC.
           PERFORM OBT-PARAM.
           IF OPC-COD-VCOC IN OPC = WSS-COD-PESO IN WSS-VARI
              MOVE 1 TO WSS-SGV-VCAM IN WSS-VARI
              GO TO FIN-LEE-OPC.
           MOVE OPC-COD-VCOC IN OPC      TO CAM-COD-VCAM IN CAM(1).
           MOVE WSS-COD-PESO IN WSS-VARI TO CAM-COD-VCAM IN CAM(2).
           IF OPC-IND-RENO IN OPC = 'PRO'
               MOVE OPC-CIC-IOPC IN OPC TO AUX-CIC-IOPC IN WSS-VARI
               MOVE DLC-CIC-IOCO IN DLC TO OPC-CIC-IOPC IN OPC
               MOVE FIO-GET-KEY  TO FIO-CMND
               PERFORM COL-FIO-OPC
               IF FIO-STAT-OKS
                   MOVE OPC-FEC-FCOL IN OPC TO CAM-FEC-FCAM IN CAM(1)
                   MOVE OPC-FEC-FCOL IN OPC TO CAM-FEC-FCAM IN CAM(2)
                   MOVE AUX-CIC-IOPC IN WSS-VARI TO OPC-CIC-IOPC IN OPC
                   MOVE FIO-GET-KEY TO FIO-CMND
                   PERFORM COL-FIO-OPC
               ELSE
                   MOVE 'COL'        TO MSG-COD-SIST
                   MOVE 'OPCORIGNEX' TO MSG-COD-MENS
                   PERFORM GET-MSG
                   DISPLAY MSG-GLS-DESC   OPC-CIC-IOPC IN OPC
           ELSE
               MOVE OPC-FEC-FCOL IN OPC TO CAM-FEC-FCAM IN CAM(1)
               MOVE OPC-FEC-FCOL IN OPC TO CAM-FEC-FCAM IN CAM(2).
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM TAB-FIO-CAM.
           IF NOT FIO-STAT-OKS AND CAM-IND-VIGE NOT = 'S'
              GO TO FIN-LEE-OPC.
           MOVE CAM-SGV-VCAM IN CAM TO WSS-SGV-VCAM.
           MOVE CAM-SGV-VCAM IN CAM TO FRM-VAL-VAUF IN DEC-FLD.
       FIN-LEE-OPC.
           EXIT.
       LEE-DLC SECTION.
       INI-LEE-DLC.
           MOVE CAN-CIC-IOPC IN CAN TO DLC-CIC-IOPC IN DLC.
           MOVE RCV-NUM-IDLC IN RCV TO DLC-NUM-IDLC IN DLC.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM COL-FIO-DLC.
           IF NOT FIO-STAT-OKS
               GO TO FIN-LEE-DLC.
       FIN-LEE-DLC.
           EXIT.
       PRO-ROV SECTION.
       INI-PRO-ROV.
           IF CAN-MSC-TCAN IN CAN = 'P' OR 'R' OR 'K'
              MOVE SPACES              TO ROV-CIC-IOPC IN ROV
              MOVE OPC-CIC-IOPC IN OPC TO ROV-CIC-IOPV IN ROV
              MOVE CAN-NUM-ICAN IN CAN TO ROV-NUM-IVCT IN ROV
              MOVE FIO-GET-NLS         TO FIO-CMND
              MOVE 'ROV-KEY-IVCT'      TO FIO-AKEY
              PERFORM COL-FIO-ROV
              IF NOT ( FIO-STAT-OKS AND
                   OPC-CIC-IOPC IN OPC = ROV-CIC-IOPV IN ROV AND
                   CAN-NUM-ICAN IN CAN = ROV-NUM-IVCT IN ROV )
                  GO TO FIN-PRO-ROV.
       FIN-PRO-ROV.
           EXIT.
      *ALD-BCI-INI/05051998
       LEE-REG-COM SECTION.
       INI-LEE-REG-COM.

           MOVE ZEROES              TO WSS-SGV-MIVA.
           MOVE ZEROES              TO WSS-SGV-MNTO.

           MOVE 'N'                 TO WSS-IND-SWCOM.

           MOVE 'COM-KEY-IICG'      TO FIO-AKEY.
           MOVE OPC-CIC-IOPC IN OPC TO COM-CIC-IOPC IN COM.
           MOVE CAN-NUM-ICAN IN CAN TO COM-NUM-ICAN IN COM.
           MOVE SPACES              TO COM-CIC-IOPV IN COM.
           MOVE ZEROES              TO COM-NUM-IVCT IN COM.
           MOVE SPACES              TO COM-IND-TTAS IN COM.
           MOVE ZEROES              TO COM-FEC-FINI IN COM.
           MOVE FIO-GET-NLS TO FIO-CMND.
       LUP-LEE-REG-COM.
           PERFORM COL-FIO-COM.
           IF NOT ( FIO-STAT-OKS AND
               COM-CIC-IOPC IN COM = OPC-CIC-IOPC IN OPC AND
               CAN-NUM-ICAN IN CAN = COM-NUM-ICAN IN COM )
                 GO TO FIN-LEE-REG-COM
           ELSE
               IF COM-IND-TTAS IN COM NOT = 'CMO'
                   MOVE FIO-GET-NXT TO FIO-CMND
                   GO TO LUP-LEE-REG-COM
               ELSE
                   IF COM-FEC-FINI IN COM NOT = CAN-FEC-FOUT IN CAN
                       MOVE FIO-GET-NXT TO FIO-CMND
                       GO TO LUP-LEE-REG-COM.
           MOVE 'S'                 TO WSS-IND-SWCOM.
           MOVE COM-SGV-MIVA IN COM TO WSS-SGV-MIVA.
           MOVE COM-SGV-MNTO IN COM TO WSS-SGV-MNTO.
       FIN-LEE-REG-COM.
           EXIT.
       PRO-DIC SECTION.
       INI-PRO-DIC.
           MOVE LOW-VALUE TO DIC.
           MOVE CAN-CIC-IOPC IN CAN TO DIC-CIC-IOPC IN DIC.
           MOVE CAN-NUM-ICAN IN CAN TO DIC-NUM-ICAN IN DIC.
           MOVE DLC-NUM-IDLC IN DLC TO DIC-NUM-IDLC IN DIC.
           MOVE FIO-GET-NLS TO FIO-CMND.
       LUP-PRO-DIC.
           PERFORM COL-FIO-DIC.
           IF NOT ( FIO-STAT-OKS AND
                    CAN-CIC-IOPC IN CAN = DIC-CIC-IOPC IN DIC AND
                    CAN-NUM-ICAN IN CAN = DIC-NUM-ICAN IN DIC )
              GO TO FIN-PRO-DIC.
           IF CAN-MSC-STAT IN CAN = 'A'
               IF DIC-MSC-STAT IN DIC NOT = 'A'
                   GO TO NXT-PRO-DIC.
           IF DIC-SGV-CALC IN DIC NOT = 0
              MOVE DIC-IND-TALG IN DIC TO
                   DEC-COD-CPTO(DEC-I)
              MOVE DIC-SGV-CALC IN DIC TO
                   DEC-VAL-CPTO(DEC-I)
              PERFORM INC-REG-TS.
       NXT-PRO-DIC.
           MOVE FIO-GET-NXT TO FIO-CMND.
           GO TO LUP-PRO-DIC.
       FIN-PRO-DIC.
           EXIT.
       CAR-MOV-CAN SECTION.
      ********************
       INI-CAR-MOV-CAN.

           IF WSS-IND-SWCOM = 'N'
               GO TO CONT-PROC-NORM.

           IF COM-SGV-MIVA IN COM NOT = 0
               MOVE 'IVACOM' TO DEC-COD-CPTO(DEC-I)
               MOVE COM-SGV-MIVA IN COM TO
                   DEC-VAL-CPTO(DEC-I)
               PERFORM INC-REG-TS.


           IF COM-SGV-MNTO IN COM NOT = 0
               MOVE 'CONONO' TO DEC-COD-CPTO(DEC-I)
              MOVE COM-SGV-MNTO IN COM TO
                   DEC-VAL-CPTO(DEC-I)
              PERFORM INC-REG-TS
              GO TO CONT-SIN-GTP.

       CONT-PROC-NORM.
           IF CAN-SGV-GAST IN CAN NOT = 0
                MOVE 'GTP' TO DEC-COD-CPTO(DEC-I)
                MOVE CAN-SGV-GAST IN CAN TO
                   DEC-VAL-CPTO(DEC-I)
                PERFORM INC-REG-TS.

       CONT-SIN-GTP.
           IF CAN-SGV-DIFE IN CAN NOT = 0
                MOVE 'VALDIF' TO DEC-COD-CPTO(DEC-I)
                MOVE CAN-SGV-DIFE IN CAN TO
                   DEC-VAL-CPTO(DEC-I)
                PERFORM INC-REG-TS.
           IF CAN-SGV-TPAG IN CAN NOT = 0
                MOVE 'PAG' TO DEC-COD-CPTO(DEC-I)
                MOVE CAN-SGV-TPAG IN CAN TO
                DEC-VAL-CPTO(DEC-I)
                PERFORM INC-REG-TS.

           IF WSS-SGV-RENO IN WSS-VARI NOT = 0
                MOVE 'NEG' TO DEC-COD-CPTO(DEC-I)
                  MOVE WSS-SGV-RENO IN WSS-VARI TO
                       DEC-VAL-CPTO(DEC-I)
                  IF (CAN-MSC-TCAN IN CAN = 'P' OR 'K')
                      IF OPC-MSC-TVOC IN OPC = WSS-MSC-TVOC
                          MOVE WSS-SGV-RENO  TO
                          PES-SGV-DECI IN PES-VARI
                          PERFORM PES-SCTV
                          MOVE PES-SGV-ENTE IN PES-VARI TO
                               DEC-VAL-CPTO(DEC-I)
                               PERFORM INC-REG-TS
                      ELSE
                          PERFORM INC-REG-TS
                  ELSE
                      PERFORM INC-REG-TS.
       FIN-CAR-MOV-CAN.
           EXIT.
       OBT-DAT-TS SECTION.
       INI-OBT-DAT-TS.
           MOVE EIBTRMID TO DEC-TERM.
           EXEC CICS HANDLE CONDITION QIDERR(CON-OBT-DAT-TS)
                                     ITEMERR(CON-OBT-DAT-TS)
           END-EXEC.
           EXEC CICS DELETEQ TS QUEUE(DEC-NAME-QUE)
           END-EXEC.
       CON-OBT-DAT-TS.
           MOVE DEC-SI-IMP TO DEC-IMP.
           PERFORM CLR-VEC-TS VARYING DEC-I FROM 1 BY 1 UNTIL
                   DEC-I > DEC-IMAX.
           MOVE 1 TO DEC-I.
           PERFORM LEE-OPC.
           PERFORM PRO-ROV.
           PERFORM LEE-REG-COM.
           PERFORM CAR-MOV-RCV.
           PERFORM CAR-MOV-CAN.
           PERFORM PRO-DIC.
           PERFORM PRO-IXT.
      *OBTIENE VALOR NORMALIZA
           IF RCV-MSC-MCAN IN RCV NOT = 'V'
               GO TO NXT-OBT-DAT-TS.
           MOVE CAN-CIC-IOPC IN CAN TO OPC-CIC-IOPC IN OPC.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM COL-FIO-OPC.
      *

           MOVE CAN-FEC-FCAN IN CAN TO CCN-FCAN.
           MOVE CAN-CIC-IOPC IN CAN TO CCN-IOPC.
           MOVE CAN-SGV-TPAG IN CAN TO CCN-TPAG.
           MOVE '0999   '           TO CCN-VCAM.
           MOVE 'N'                 TO CCN-ICTA.
           MOVE 'V'                 TO CCN-IVIG.
           MOVE  IDD-FSIS     TO CCN-FSIS.
           MOVE CCN-DINP      TO SYS-CMMA.
           MOVE 'COLPPCCN'    TO SYS-PROG.
           MOVE +1012         TO SYS-TCMA.
           MOVE SYS-LINK      TO SYS-CMND.
           PERFORM GNS-PRO-SYS.
           MOVE SYS-CMMA TO CCN-DOUT.
           IF CCN-RETO = '0'
               IF CCN-CONO NOT = 0
                   MOVE 'COMNOR' TO DEC-COD-CPTO(DEC-I)
                   MOVE CCN-CONO TO DEC-VAL-CPTO(DEC-I)
                   MOVE 'COL' TO MSG-COD-SIST
                   MOVE 'COMNOREXIS' TO MSG-COD-MENS
                   PERFORM GET-MSG
                   MOVE MSG-GLS-DESC TO FRM-MEN2
                   MOVE '00' TO FIO-STAT
                   PERFORM INC-REG-TS.

       NXT-OBT-DAT-TS.
           IF DEC-IMP = DEC-SI-IMP
               PERFORM WRT-TS.
       FIN-OBT-DAT-TS.
           EXIT.
       PUT-TAB-DEC SECTION.
       INI-PUT-TAB-DEC.
           PERFORM RED-TS.
           PERFORM LLE-DAT-PNT VARYING DEC-I FROM 1 BY 1
                   UNTIL DEC-I > DEC-IMAX.
       FIN-PUT-TAB-DEC.
           EXIT.

       LLE-DAT-PNT SECTION.
       INI-LLE-DAT-PNT.
           MOVE DEC-COD-CPTO(DEC-I) TO FRM-COD-CPTO IN DEC-FLD(DEC-I).
           MOVE DEC-GLS-CPTO(DEC-I) TO FRM-GLS-CPTO IN DEC-FLD(DEC-I).
           MOVE DEC-VAL-CPTO(DEC-I) TO FRM-VAL-CPTO IN DEC-FLD(DEC-I).
       FIN-LLE-DAT-PNT.
           EXIT.

       INC-REG-TS SECTION.
       INI-INC-REG-TS.
           IF DEC-COD-CPTO(DEC-I) = 'COMNOR'
               MOVE 'COL'                     TO FIO-SIST
               MOVE 'MSG'                     TO TAB-COD-TTAB IN TAB
               MOVE 'DESCOMNOR'               TO TAB-COD-CTAB IN TAB
               MOVE FIO-GET-KEY    TO FIO-CMND
               PERFORM GNS-FIO-TAB
               IF NOT FIO-STAT-OKS
                   MOVE 'COMISION NORMALIZA' TO DEC-GLS-CPTO(DEC-I)
               ELSE
                   MOVE TAB-GLS-DESC IN TAB TO DEC-GLS-CPTO(DEC-I)
           ELSE
               MOVE 'COL'                     TO FIO-SIST
               MOVE 'ALG'                     TO TAB-CIC-TTAB IN TAB
               MOVE DEC-COD-CPTO(DEC-I)       TO TAB-CIC-CTAB IN TAB
               MOVE 'TAB-CIC-TABL' TO FIO-AKEY
               MOVE FIO-GET-KEY    TO FIO-CMND
               PERFORM GNS-FIO-TAB
               IF NOT FIO-STAT-OKS
                   MOVE SPACES TO DEC-GLS-CPTO(DEC-I)
               ELSE
                   MOVE TAB-GLS-DESC IN TAB TO DEC-GLS-CPTO(DEC-I).
           MOVE DEC-SI-IMP TO DEC-IMP.
           ADD 1 TO DEC-I.
           IF DEC-I > DEC-IMAX
               PERFORM WRT-TS
               PERFORM CLR-VEC-TS VARYING DEC-I FROM 1 BY 1
                                     UNTIL DEC-I > DEC-IMAX
               MOVE 1 TO DEC-I
               MOVE DEC-NO-IMP TO DEC-IMP.
       FIN-INC-REG-TS.
           EXIT.


       WRT-TS SECTION.
       INI-WRT-TS.
           ADD 1 TO SCR-IMAX.
           EXEC CICS WRITEQ TS QUEUE(DEC-NAME-QUE)
                               FROM(DEC-TS)
                               LENGTH(DEC-LONG-TS)
           END-EXEC.
       FIN-WRT-TS.
           EXIT.

       RED-TS SECTION.
       INI-RED-TS.
           MOVE EIBTRMID TO DEC-TERM.
           MOVE DEC-I TO SCR-I.
           EXEC CICS HANDLE CONDITION QIDERR(FIN-RED-TS)
                                     ITEMERR(FIN-RED-TS)
           END-EXEC.
           EXEC CICS READQ TS QUEUE(DEC-NAME-QUE)
                               INTO(DEC-TS)
                                LENGTH(DEC-LONG-TS)
                               ITEM(DEC-I)
           END-EXEC.
       FIN-RED-TS.
           EXIT.

       CLR-VEC-TS SECTION.
       INI-CLR-VEC-TS.
           MOVE SPACES              TO DEC-COD-CPTO(DEC-I).
           MOVE SPACES              TO DEC-GLS-CPTO(DEC-I).
           MOVE ZEROES              TO DEC-VAL-CPTO(DEC-I).
       FIN-CLR-VEC-TS.
           EXIT.
       RST-STAT SECTION.
       INI-RST-STAT.
           MOVE SCR-STPP     TO SCR-STAT.
           MOVE SCR-MFLD-NOT TO SCR-MFLD.
       FIN-RST-STAT.
           EXIT.
       PRO-IXT SECTION.
       INI-PRO-IXT.
           MOVE LOW-VALUE TO IXT.
           MOVE CAN-CIC-IOPC IN CAN TO IXT-CIC-IOPC IN IXT.
           MOVE CAN-NUM-ICAN IN CAN TO IXT-NUM-ICAN IN IXT.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM COL-FIO-IXT.
           IF NOT FIO-STAT-OKS
              GO TO FIN-PRO-IXT.

           IF CAN-MSC-STAT IN CAN = 'A'
               IF IXT-MSC-STAT IN IXT NOT = 'A'
                   GO TO FIN-PRO-IXT.

           IF IXT-SGV-MCAL IN IXT NOT = 0
              MOVE 'IMP   '            TO
                   DEC-COD-CPTO(DEC-I)
              MOVE IXT-SGV-MCAL IN IXT TO
                   DEC-VAL-CPTO(DEC-I)
              PERFORM INC-REG-TS.

       FIN-PRO-IXT.
           EXIT.
      *>>>>
*% END
