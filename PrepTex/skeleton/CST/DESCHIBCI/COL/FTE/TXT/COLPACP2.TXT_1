*%! Codigo adicional para archivo
*% NO_TIENE_TIMESTAMP = TRUE
*% LARGO_MI_COMMAREA = 4750
*% NO_HDR_CST = TRUE
*% IF FIN_SCR_VARI
      *<<<< FIN_SCR_VARI
       COPY COLWICPP REPLACING ==01  CPP-FLD== BY ==03  CPP-FLD==
                               ==01  CPP-EDT== BY ==03  CPP-EDT==.
       COPY COLWICP2 REPLACING ==01  CP2-FLD== BY ==03  CP2-FLD==
                               ==01  CP2-EDT== BY ==03  CP2-EDT==.
       COPY COLWGCPP.
      *>>>>
*% END
*% IF WSS
*% IF PGM_PQ
      *JCT-INI 11-01-2012 VALIDACION Y GENERACION AUTOMATIZADA DE PRODUC
       COPY COLBRPOC.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-POC-REQA==.
      *JCT-FIN 11-01-2012
*% END
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-MSC-REQA==.
       COPY GNSBRMSC.
       COPY GNSWGCPT.
       COPY GNSWCVRF.
       COPY GNSWVVRF.

       01  WSS-VARI.
*% IF PGM_PU
      *<<<<
      *HPM ini 3-JUN-1994
           03  WSS-IND-BLK                        PIC X(01).
      *HPM fin 3-JUN-1994
      *JCT-INI 11-01-2012 VALIDACION Y GENERACION AUTOMATIZADA DE PRODUC
           03  WSS-MOV-DEB                        PIC 9(03).
           03  WSS-MOV-HAB                        PIC 9(03).
           03  WSS-CPP-ERROR                      PIC X(01).
           03  WSS-I                              PIC 9(03).
           03  WSS-J                              PIC 9(03).
      *JCT-FIN 11-01-2012
      *>>>>
*% END
           03  WSS-COD-CAUX.
               05  WSS-COD-TOOC                   PIC X(03).
               05  WSS-COD-AOOC                   PIC X(03).
           03  WSS-POS                            PIC 9(02).
      *DAD
           03  WSS-IND                            PIC 9(02).
           03  WSS-IND-TALG                       PIC 9(01).
           03  WSS-GLS-DATA.
               05  FILLER                         PIC X(10).
               05  WSS-COD-MVTO      OCCURS 16    PIC X(03).
*% IF PGM_PQ
           03 FRM-I                               PIC 9(02).
           03 WSS-IND-HMAS                        PIC X(01).
           03 FLD-I                               PIC 9(02).
           03 WSS-IND-HFLD                        PIC X(01).
      *DAD
      *JCT-INI 11-01-2012 VALIDACION Y GENERACION AUTOMATIZADA DE PRODUC
           03 WSS-TAB-ERROR                       PIC X(01).
           03 WSS-COD-TTAB                        PIC X(03).
      *JCT-FIN 11-01-2012
*% ELSE
      *EVA
           03  WSS-IND-CP2                        PIC 9(02).
           03  WSS-IND-TALG-CP2                   PIC 9(01).
           03  WSS-GLS-DATA-CP2.
               05  FILLER-CP2                     PIC X(10).
               05  WSS-COD-MVTO-CP2  OCCURS 16    PIC X(03).
      *EVA
*% END
       COPY GNSBRLOG.
           03 LOG-GLS-DATA                       PIC X(695).
      *>>>>
*% END
*% IF FIN_PGM_STAT
      *<<<<
           03 PGM-STAT.
              05 PGM-STAT-CPP.
                 88 PGM-STAT-CPP-NUL    VALUE '  '.
                 07 PGM-STT1-CPP        VALUE '2' PIC X(01).
                    88 PGM-STAT-CPP-OKS VALUE '0'.
                 07 PGM-STT2-CPP        VALUE '3' PIC X(01).
      *>>>>
*% END
*% IF FIN_LUP_MAIN
      *<<<< FIN_LUP_MAIN
           MOVE FRM-MENS TO SCR-MENS-EXT.
           IF SCR-INST = SCR-INST-HCM
               PERFORM EGR-FTER-CMN
           ELSE
               PERFORM EGR-FTER-CIC.
      *>>>>
*% END 
*% IF INI_FIO	
      *<<<< INI_FIO
           MOVE WSS-TCMA TO SCR-TCMA.
           IF SCR-INST-EXT = WSS-INST-FPEN-CIC
                MOVE WSS-INST-NULL TO SCR-INST-EXT
                PERFORM ING-FPEN-CIC.
      *>>>>
*% END
*% IF PFS_SCR_GFLD OR PFS_SCR_GCNF OR PFS_GET_ACC 
      *<<<< PFS_SCR_GFLD OR PFS_SCR_GCNF OR PFS_GET_ACC 
           IF NOT ( FRM-FFLD = FRM-FFLD-PF7 )
*% IF PFS_GET_CON AND PGM_PQ
               MOVE 'CPPREGNONXT' TO MSG-COD-MENS
               MOVE 'COL' TO MSG-COD-SIST
*% END
      *>>>>
*% END
*% IF PFS_GET_CON
      *<<<< PFS_GET_CON
*% IF PGM_PQ
      *MVG-INI 26-JUN-2019 IGUALACION COL
           IF NOT ( FRM-FFLD = FRM-FFLD-PF7 )
               MOVE 'CPPREGNONXT' TO MSG-COD-MENS
               MOVE 'COL' TO MSG-COD-SIST
      *        MOVE 'PFSINV    ' TO MSG-COD-MENS
      *        MOVE 'GNS' TO MSG-COD-SIST
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO CP2-GLS-MEN2
               MOVE SCR-PRMT     TO CP2-GLS-MEN1
               PERFORM FST-MSG
               PERFORM SCR-PUTA
               PERFORM SCR-EXIT.
           MOVE FRM-DFLD TO CP2-FLD.
           GO TO FIN-GC.
      *MVG-FIN 26-JUN-2019 IGUALACION COL
*% END
*% IF PGM_PU
           IF NOT ( FRM-FFLD = FRM-FFLD-PF7 )
*%END
      *>>>> PFS_GET_CON
*% END
*% IF FIN_GET_CON 
      *<<<< FIN_GET_CON 
      *MVG-INI 26-JUN-2019 IGUALACION COL
*% IF PGM_PQ
       FIN-GC.
*% END
           IF FRM-FFLD = FRM-FFLD-PF7
               PERFORM VAL-NUM-KEY-CP2
               PERFORM VAL-NUM-FLD-CP2
               PERFORM EGR-FPEN-BCK.
      *MVG-FIN 26-JUN-2019 IGUALACION COL
      *>>>> FIN_GET_CON 
*% END
*% IF FIN_SCR_GCNF
      *<<<< FIN_SCR_GCNF
           IF FRM-FFLD = FRM-FFLD-PF7
               PERFORM VAL-NUM-KEY-CP2
               PERFORM VAL-NUM-FLD-CP2
               PERFORM EGR-FPEN-BCK.
      *>>>>
*% END
*% IF FIN_HBL_IKY
      *<<<<
      *MVG-INI 28-MAY-2019 IGUALACION COL
           MOVE FRM-CPSF-AEY TO FRM-CPIM-AEY.      
      *MVG-FIN 28-MAY-2019 IGUALACION COL
           MOVE '1' TO FRM-CPIM-AEY. 
      *>>>>
*% END
*% IF FIN_HBL_KEY
      *<<<< FIN_HBL_KEY
*% IF PGM_PQ
      *MVG-INI 28-MAY-2019 IGUALACION COL
           MOVE FRM-CPSF-AEY TO FRM-CPIM-AEY.      
      *MVG-FIN 28-MAY-2019 IGUALACION COL
*% END
           MOVE '1' TO FRM-CPIM-AEY.
      *>>>> FIN_HBL_KEY
*% END
*% IF FIN_HBL_FLD
      *<<<<
           IF SCR-CMND = 'COP'
               PERFORM UNP-IKY-CP2
               PERFORM FST-KEY-CP2.
      *>>>>
*% END
*% IF INI_PRO_ALL
      *<<<< INI_PRO_ALL
           MOVE '1'       TO FRM-CPIM-AEY.
*% IF PGM_PQ
           PERFORM CRG-CB-CPP.
*% END
      *>>>>
*% END
*% IF INI_SCR_MOD
      *<<<<
*% IF PGM_PU
      *MVG-INI 26-JUN-2019 IGUALACION COL
           IF SCR-INST = SCR-INST-HKY
               PERFORM HBL-KEY
               MOVE SCR-INST-GKY TO SCR-INST
               PERFORM SCR-DMSG
           ELSE
           IF SCR-INST = SCR-INST-GFL
               PERFORM GET-FLD
           ELSE
           IF SCR-INST = SCR-INST-GCS
               PERFORM GET-ACC.
JC
      *=>  PERFORM DESSCRTRL.
      *    IF FRM-FFLD = FRM-FFLD-PF7 OR FRM-FFLD-PF8
      *        PERFORM XCT-PRGP.
      *    IF NOT ( FRM-FFLD = FRM-FFLD-PF5 OR FRM-FFLD-PF6 )
      *=>      GO TO MSG-SCR-MOD.

           IF FRM-FFLD = FRM-FFLD-PF7 OR FRM-FFLD-PF8 OR
                         FRM-FFLD-PF5 OR FRM-FFLD-PF6
               PERFORM XCT-PRGP.
           PERFORM DESSCRTRL.
           GO TO MSG-SCR-MOD.
      *MVG-FIN 26-JUN-2019 IGUALACION COL
*% END
      *>>>>
*% END
*% IF INI_XCT_PRGP
      *<<<< INI_XCT_PRGP
           GO TO FIN-XCT-PRGP.
      *>>>>
*% END
*% IF ABT_CMN_ACC
      *<<<< ABT_CMN_ACC
               IF SCR-CMND = 'COP'
                   MOVE 'REGISTRO NO FUE COPIADO' TO FRM-MENS
                   GO TO FIN-CMN-ACC
               ELSE
      *>>>>
*% END
*% IF INI_CMN_ACC
      *<<<< INI_CMN_ACC
           IF SCR-CMND = 'COP'
               PERFORM RET-ALL-CP2
               PERFORM RET-HDR-CP2
               MOVE FIO-PUT  TO FIO-CMND
               PERFORM COL-FIO-CPP
               IF FIO-STAT-OKS
                   MOVE 'REGISTRO FUE COPIADO' TO FRM-MENS
               ELSE
                   MOVE 'ERROR : REGISTRO NO COPIADO' TO FRM-MENS
           ELSE
               MOVE 'COMANDO NO IMPLEMENTADO' TO FRM-MENS.
           GO TO FIN-CMN-ACC.
      *>>>>
*% END 
*% IF SCR_GFLD_VAL_CON_FLD
      *<<<< SCR_GFLD_VAL_CON_FLD
           IF FRM-FFLD = FRM-FFLD-PF7
               PERFORM EGR-FPEN-BCK.
      *>>>>
*% END
*% IF FIN_GET_ACC
      *<<<< FIN_GET_ACC
           IF FRM-FFLD = FRM-FFLD-PF7
               IF SCR-CONF > SPACES
                   PERFORM VAL-NUM-KEY-CP2
                   PERFORM VAL-NUM-FLD-CP2
                   PERFORM EGR-FPEN-BCK
               ELSE
                   PERFORM EGR-FPEN-BCK.
      *>>>>
*% END
*% IF FIN_RET_HDR_CPP 
      *<<<< FIN_RET_HDR_CPP
           IF SCR-CCPP = 'ING'
               MOVE 'I' TO CPP-MSC-TACC IN CPP
               MOVE 'I' TO CPP-MSC-STAT IN CPP
           ELSE
           IF SCR-CCPP = 'MOD'
               MOVE 'M' TO CPP-MSC-TACC IN CPP
               MOVE 'M' TO CPP-MSC-STAT IN CPP.
*% END
*% IF FIN_FND_KEY
      *<<<<
           MOVE FIO-STAT TO PGM-STAT-CPP.
      *>>>>
*% END
*% IF CMN_MOD_RET OR INI_CMN_ING
      *<<<<
           PERFORM RET-HDR-CP2.
      *>>>>
*% END
*% IF EOF
      *<<<<
       COPY GNSBBTAB.
       COPY GNSBVCOD.
       COPY GNSBVTAB.

       COPY GNSBBMSC.
       COPY GNSBVIND.
       COPY GNSBVMSC.
       COPY GNSBFMSC.

      *<<<< EOF
       ING-FPEN-CIC SECTION.
       INI-ING-FPEN-CIC.
           PERFORM ING-SETE.
      *JSS PERFORM SCR-TRL.
      *    ( LA UNICA DIFERENCIA CON EL PARRAFO SCR-TRL ES EL SCR-INIT
           MOVE SCR-STPP TO SCR-STAT.
      *     MOVE SCR-GLS-PRMT( SCR-I ) TO FRM-MENS.
           IF SCR-STAT = SCR-STAT-MOD
               MOVE SCR-INST-GFL TO SCR-INST
               PERFORM HBL-FLD
               PERFORM SCR-MSSG
               IF FRM-FFLD NOT = FRM-FFLD-PF12
                   PERFORM EDT-FLD-CP2
                   PERFORM SCR-INIT
                   PERFORM STP-EXIT
                   PERFORM SCR-EXIT
               ELSE
                   PERFORM SCR-INIT
                   PERFORM STP-EXIT
                   PERFORM SCR-EXIT.
           IF SCR-STAT = SCR-STAT-SON
               MOVE SCR-INST-GCS TO SCR-INST
               PERFORM PRO-ALL
               PERFORM SCR-MSSG
               IF FRM-FFLD NOT = FRM-FFLD-PF12
                   PERFORM EDT-FLD-CP2
                   PERFORM SCR-INIT
                   PERFORM STP-EXIT
                   PERFORM SCR-EXIT
               ELSE
                   PERFORM SCR-INIT
                   PERFORM STP-EXIT
                   PERFORM SCR-EXIT.
      *ASUME SCR-STAT-CON.
           MOVE SCR-STAT-CON TO SCR-STAT.
           MOVE SCR-INST-GAB TO SCR-INST.
           PERFORM PRO-ALL.
           PERFORM SCR-MSSG.
           IF FRM-FFLD NOT = FRM-FFLD-PF12
               PERFORM EDT-FLD-CP2
               PERFORM SCR-INIT
               PERFORM SCR-EXIT
           ELSE
               PERFORM SCR-INIT
               PERFORM SCR-EXIT.
       FIN-ING-FPEN-CIC.
           EXIT.

       ING-FTER-CIC SECTION.
       INI-ING-FTER-CIC.
           PERFORM ING-SETE.
           MOVE SCR-INST-GKY TO SCR-INST.
           PERFORM HBL-KEY.
           PERFORM SCR-CLRA-CP2.
           MOVE SCR-MENS-EXT TO CP2-GLS-MENS.
           PERFORM EDT-KEY-CP2.
           PERFORM EDT-FLD-CP2.
           PERFORM SCR-INIT.
           PERFORM SCR-EXIT.
       FIN-ING-FTER-CIC.
           EXIT.

       ING-FTER-CMN SECTION.
       INI-ING-FTER-CMN.
           PERFORM ING-SETE.
           PERFORM PRO-ALL.
           PERFORM SCR-CLRA-CP2.
           MOVE SCR-MENS-EXT TO CP2-GLS-MENS.
           PERFORM SCR-INIT.
       FIN-ING-FTER-CMN.
           EXIT.

       ING-SETE SECTION.
       INI-ING-SETE.
           MOVE WSS-NTRN(SCR-IPRO) TO SCR-NTRN.
           MOVE WSS-PROG(SCR-IPRO) TO SCR-PROG.
           MOVE WSS-NMAP(SCR-IPRO) TO SCR-NMAP.
           MOVE WSS-NLIB(SCR-IPRO) TO SCR-NLIB.
      *JSS MOVE CP2-FLD-EXT TO CP2-FLD.

           MOVE WSS-NTRV(SCR-IPRO) TO SCR-NTRV.
           MOVE WSS-PROV(SCR-IPRO) TO SCR-PROV.
       FIN-ING-SETE.
           EXIT.

       EGR-FPEN-FRW SECTION.
       INI-EGR-FPEN-FRW.
           ADD 1 TO SCR-IPRO.
           MOVE WSS-INST-FPEN-CIC TO SCR-INST-EXT.
      *JSS MOVE CP2-FLD  TO CP2-FLD-EXT.
           MOVE WSS-PROG(SCR-IPRO) TO SYS-PROG.
           MOVE SCR-VARI TO SYS-CMMA.
           MOVE SCR-TCMA TO SYS-TCMA.
           MOVE SYS-XCTL TO SYS-CMND.
           PERFORM GNS-PRO-SYS.
       FIN-EGR-FPEN-FRW.
           EXIT.

       EGR-FPEN-BCK SECTION.
       INI-EGR-FPEN-BCK.
           SUBTRACT 1 FROM SCR-IPRO.
           MOVE WSS-INST-FPEN-CIC TO SCR-INST-EXT.
      *JSS MOVE CP2-FLD  TO CP2-FLD-EXT.
           MOVE WSS-PROG(SCR-IPRO) TO SYS-PROG.
           MOVE SCR-VARI TO SYS-CMMA.
           MOVE SCR-TCMA TO SYS-TCMA.
           MOVE SYS-XCTL TO SYS-CMND.
           PERFORM GNS-PRO-SYS.
       FIN-EGR-FPEN-BCK.
           EXIT.

       EGR-FTER-CIC SECTION.
       INI-EGR-FTER-CIC.
           MOVE 1 TO SCR-IPRO.
           MOVE WSS-INST-FTER-CIC TO SCR-INST-EXT.
           MOVE WSS-PROG(SCR-IPRO) TO SYS-PROG.
           MOVE SCR-VARI TO SYS-CMMA.
           MOVE SCR-TCMA TO SYS-TCMA.
           MOVE SYS-XCTL TO SYS-CMND.
           PERFORM GNS-PRO-SYS.
       FIN-FTER-CIC.
           EXIT.

       EGR-FTER-CMN SECTION.
       INI-EGR-FTER-CMN.
           MOVE 1 TO SCR-IPRO.
           MOVE WSS-INST-FTER-CMN TO SCR-INST-EXT.
           MOVE WSS-PROG(SCR-IPRO) TO SYS-PROG.
           MOVE SCR-VARI TO SYS-CMMA.
           MOVE SCR-TCMA TO SYS-TCMA.
           MOVE SYS-XCTL TO SYS-CMND.
           PERFORM GNS-PRO-SYS.
       FIN-FTER-CMN.
           EXIT.

       SCR-INIT SECTION.
       INI-SCR-INIT.
           MOVE 3  TO FRM-PLIN.
           MOVE 19 TO FRM-NLIN.
           MOVE FRM-CLR-FRM TO FRM-CMND.
           PERFORM GNS-PRO-FRM.
           MOVE FRM-SINI-DBNF TO FRM-SINI.
           MOVE SCR-NMAP TO FRM-NAME.
           MOVE SCR-NLIB TO FRM-NLIB.
           MOVE CP2-FLD TO FRM-DFLD.
           MOVE FRM-INI TO FRM-CMND.
           PERFORM GNS-PRO-FRM.
       FIN-SCR-INIT.
           EXIT.

      *>>>>
*% END
*% IF EOF
      *<<<<
       COPY GNSBPFEC.

       COPY GNSBPVRF.
       COPY GNSBEGLS.
       COPY GNSBGCPT.
      *>>>>
*% END
*% IF EOF_PQ
      *<<<<
       CRG-CB-CPP SECTION.
       INI-CRG-CB-CPP.
      *BUS-TAB busca glosa de codigo en tabla
           IF FRM-COD-VCOC IN CP2-FLD > SPACES
               MOVE 'TAB' TO TAB-COD-SIST
               MOVE 'VLR ' TO TAB-COD-TTAB IN TAB
               MOVE FRM-COD-VCOC IN CP2-FLD TO TAB-COD-CTAB IN TAB
               PERFORM BUS-TAB
               MOVE TAB-GLS-DESC IN TAB TO
                    FRM-GLS-VCOC IN CP2-FLD
               MOVE TAB-GLS-DESC IN TAB TO
                    FRM-GLS-VCOC IN CPP-FLD
           ELSE
               MOVE SPACES TO FRM-GLS-VCOC IN CP2-FLD
               MOVE SPACES TO FRM-GLS-VCOC IN CPP-FLD.
      *BUS-TAB busca glosa de codigo en tabla
           IF FRM-COD-TOOC IN CP2-FLD > SPACES
               MOVE 'TAB' TO TAB-COD-SIST
               MOVE 'TIO ' TO TAB-COD-TTAB IN TAB
               MOVE FRM-COD-TOOC IN CP2-FLD TO TAB-COD-CTAB IN TAB
               PERFORM BUS-TAB
               MOVE TAB-GLS-DESC IN TAB TO
                    FRM-GLS-TOOC IN CP2-FLD
               MOVE TAB-GLS-DESC IN TAB TO
                    FRM-GLS-TOOC IN CPP-FLD
           ELSE
               MOVE SPACES TO FRM-GLS-TOOC IN CP2-FLD
               MOVE SPACES TO FRM-GLS-TOOC IN CPP-FLD.
      *BUS-TAB busca glosa de codigo en tabla
           IF FRM-COD-MVTO IN CP2-FLD > SPACES
               MOVE 'COL' TO TAB-COD-SIST
               MOVE 'MVT ' TO TAB-COD-TTAB IN TAB
               MOVE FRM-COD-MVTO IN CP2-FLD TO TAB-COD-CTAB IN TAB
               PERFORM BUS-TAB
               MOVE TAB-GLS-DESC IN TAB TO
                    FRM-GLS-MVTO IN CP2-FLD
               MOVE TAB-GLS-DESC IN TAB TO
                    FRM-GLS-MVTO IN CPP-FLD
           ELSE
               MOVE SPACES TO FRM-GLS-MVTO IN CP2-FLD
               MOVE SPACES TO FRM-GLS-MVTO IN CPP-FLD.
      *BUS-MSC busca glosa de miscelaneo en tabla
           IF FRM-IND-SCRT IN CP2-FLD > SPACES
               MOVE 'COL' TO MSC-COD-SIST
               MOVE 'SCRT' TO MSC-COD-TMSC IN MSC
               MOVE FRM-IND-SCRT IN CP2-FLD TO MSC-COD-CMSC IN MSC
               PERFORM BUS-MSC
               MOVE MSC-GLS-DESC IN MSC TO
                    FRM-GLS-SCRT IN CP2-FLD
               MOVE MSC-GLS-DESC IN MSC TO
                    FRM-GLS-SCRT IN CPP-FLD
           ELSE
               MOVE SPACES TO
                    FRM-GLS-SCRT IN CP2-FLD
               MOVE SPACES TO
                    FRM-GLS-SCRT IN CPP-FLD.
      *BUS-MSC busca glosa de miscelaneo en tabla
           IF FRM-IND-SCTB IN CP2-FLD > SPACES
               MOVE 'COL' TO MSC-COD-SIST
               MOVE 'SCTB' TO MSC-COD-TMSC IN MSC
               MOVE FRM-IND-SCTB IN CP2-FLD TO MSC-COD-CMSC IN MSC
               PERFORM BUS-MSC
               MOVE MSC-GLS-DESC IN MSC TO
                    FRM-GLS-SCTB IN CP2-FLD
               MOVE MSC-GLS-DESC IN MSC TO
                    FRM-GLS-SCTB IN CPP-FLD
           ELSE
               MOVE SPACES TO
                    FRM-GLS-SCTB IN CP2-FLD
               MOVE SPACES TO
                    FRM-GLS-SCTB IN CPP-FLD.

           MOVE 'COL' TO TAB-COD-SIST.
           MOVE 'AUX' TO TAB-COD-TTAB IN TAB.
           MOVE FRM-COD-TOOC IN CP2-FLD TO WSS-COD-TOOC IN WSS-VARI.
           MOVE FRM-COD-AOOC IN CP2-FLD TO WSS-COD-AOOC IN WSS-VARI.
           MOVE WSS-COD-CAUX IN WSS-VARI TO TAB-COD-CTAB IN TAB.
           PERFORM VAL-COD.
           IF MSG-COD-MENS NOT = 'COD    NEX' AND
              FRM-COD-AOOC IN CP2-FLD > SPACES
               MOVE TAB-GLS-DESC IN TAB TO FRM-GLS-AOOC IN CP2-FLD
               MOVE TAB-GLS-DESC IN TAB TO FRM-GLS-AOOC IN CPP-FLD
           ELSE
               MOVE SPACES TO FRM-GLS-AOOC IN CPP-FLD
               MOVE SPACES TO FRM-GLS-AOOC IN CP2-FLD.
        FIN-CRG-CB-CPP.
           EXIT.
      *>>>>	
*% END
*% IF EOF_PQ
      *<<<< EOF_PQ
      *JCT-INI 11-01-2012 VALIDACION Y GENERACION AUTOMATIZADA DE PRODUC
       COPY COLBFPOC.
      *JCT-FIN 11-01-2012

       COPY COLBQCPP.

      *<<<< EOF_PQ
      *JCT-INI 11-01-2012 VALIDACION Y GENERACION AUTOMATIZADA DE PRODUC
       VAL-REG-POC SECTION.
       INI-VAL-REG-POC.
           IF CPP-COD-VCOC IN CPP-FLD = '*     '
              GO TO FIN-VAL-REG-POC.
           IF CPP-COD-AOOC IN CPP-FLD = '*  '
              GO TO FIN-VAL-REG-POC.
           MOVE CPP-COD-VCOC IN CPP-FLD TO POC-COD-VCOC IN POC.
           MOVE CPP-COD-TOOC IN CPP-FLD TO POC-COD-TOOC IN POC.
           MOVE CPP-COD-AOOC IN CPP-FLD TO POC-COD-AOOC IN POC.
           MOVE 0                       TO POC-NUM-IPOC IN POC.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM COL-FIO-POC.
           IF NOT FIO-STAT-OKS
               MOVE 'COL' TO MSG-COD-SIST
               MOVE 'POC    NOEXI' TO MSG-COD-MENS
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS
               MOVE FRM-SUAR-MAL TO FRM-SUAR
               GO TO FIN-VAL-REG-POC.
           IF CPP-IND-SCRT IN CPP-FLD > SPACES
              IF POC-SIT-CRT1 IN POC NOT = CPP-IND-SCRT IN CPP-FLD AND
                 POC-SIT-CRT2 IN POC NOT = CPP-IND-SCRT IN CPP-FLD AND
                 POC-SIT-CRT3 IN POC NOT = CPP-IND-SCRT IN CPP-FLD
                  MOVE 'COL' TO MSG-COD-SIST
                  MOVE 'CRTNOEXIPOC ' TO MSG-COD-MENS
                  PERFORM GET-MSG
                  MOVE MSG-GLS-DESC TO FRM-MENS
                  MOVE FRM-SUAR-MAL TO FRM-SUAR
                  GO TO FIN-VAL-REG-POC.

           IF CPP-IND-SCTB IN CPP-FLD > SPACES
              IF POC-SIT-CTB1 IN POC NOT = CPP-IND-SCTB IN CPP-FLD AND
                 POC-SIT-CTB2 IN POC NOT = CPP-IND-SCTB IN CPP-FLD AND
                 POC-SIT-CTB3 IN POC NOT = CPP-IND-SCTB IN CPP-FLD
                  MOVE 'COL' TO MSG-COD-SIST
                  MOVE 'CTBNOEXIPOC ' TO MSG-COD-MENS
                  PERFORM GET-MSG
                  MOVE MSG-GLS-DESC TO FRM-MENS
                  MOVE FRM-SUAR-MAL TO FRM-SUAR
                  GO TO FIN-VAL-REG-POC.
       FIN-VAL-REG-POC.
           EXIT.

       VAL-COD-PROD SECTION.
       INI-VAL-COD-PROD.
           MOVE 'S'                      TO WSS-TAB-ERROR IN WSS-VARI.
           MOVE CPP-COD-TOOC IN CPP-FLD  TO WSS-COD-TOOC IN WSS-VARI.
           MOVE CPP-COD-AOOC IN CPP-FLD  TO WSS-COD-AOOC IN WSS-VARI.
           IF WSS-COD-AOOC IN WSS-VARI = '*  '
              MOVE 'N'                   TO WSS-TAB-ERROR IN WSS-VARI
              GO TO FIN-VAL-COD-PROD.

           MOVE 'COL'                    TO FIO-SIST.
           MOVE WSS-COD-TTAB IN WSS-VARI TO TAB-COD-TTAB IN TAB.
           MOVE SPACES                   TO TAB-COD-CTAB IN TAB.
           MOVE FIO-GET-NLS              TO FIO-CMND.
       LUP-VAL-COD-PROD.
           PERFORM GNS-FIO-TAB.
           IF NOT ( FIO-STAT-OKS AND
                    TAB-COD-TTAB IN TAB = WSS-COD-TTAB IN WSS-VARI )
              GO TO FIN-VAL-COD-PROD.

           IF WSS-COD-CAUX IN WSS-VARI = TAB-COD-CTAB IN TAB(1:6)
              MOVE 'N'             TO WSS-TAB-ERROR IN WSS-VARI
              GO TO FIN-VAL-COD-PROD.
       SIG-VAL-COD-PROD.
           MOVE 'COL'              TO FIO-SIST.
           MOVE FIO-GET-NXT        TO FIO-CMND.
           GO TO LUP-VAL-COD-PROD.
       FIN-VAL-COD-PROD.
           IF WSS-TAB-ERROR IN WSS-VARI = 'S'
               MOVE 'COL' TO MSG-COD-SIST
               IF WSS-COD-TTAB IN WSS-VARI = 'VCD'
                  MOVE 'CPP NOEXIVCD' TO MSG-COD-MENS
                  PERFORM GET-MSG
                  MOVE MSG-GLS-DESC   TO FRM-MENS
                  MOVE FRM-SUAR-MAL   TO FRM-SUAR
               ELSE
                  IF WSS-COD-TTAB IN WSS-VARI = 'CAS'
                     MOVE 'CPP NOEXICAS' TO MSG-COD-MENS
                     PERFORM GET-MSG
                     MOVE MSG-GLS-DESC   TO FRM-MENS
                     MOVE FRM-SUAR-MAL   TO FRM-SUAR.
           EXIT.
      *JCT-FIN 11-01-2012
      *>>>>
*% END
*% IF EOF_PU
      *<<<< EOF_PU
       RET-HDR-CP2 SECTION.
       INI-RET-HDR-CP2.
           PERFORM GET-FHOY.
      *    Fecha Transaccion
      *    MOVE HOY-FHOY TO CPP-FEC-FTRN IN CPP.
      *    Hora Transaccion
           MOVE HOY-HHOY TO CPP-HRA-HRTR IN CPP.
      *    Codigo Origen transaccion
           MOVE SCR-OTRN TO CPP-COD-OTRN IN CPP.
      *    Autor Transaccion
           MOVE SCR-USER TO CPP-COD-ATRN IN CPP.
           IF SCR-CCPP = 'ING'
               MOVE 'I' TO CPP-MSC-TACC IN CPP
               MOVE 'I' TO CPP-MSC-STAT IN CPP
           ELSE
           IF SCR-CCPP = 'MOD'
               MOVE 'M' TO CPP-MSC-TACC IN CPP
               MOVE 'M' TO CPP-MSC-STAT IN CPP.
       FIN-RET-HDR-CP2.
           EXIT.

       COPY COLBUCPP.

      *JCT-INI 11-01-2012 VALIDACION Y GENERACION AUTOMATIZADA DE PRODUC
       VAL-CAN-MOV SECTION.
       INI-VAL-CAN-MOV.
           IF CPP-IND-DBHB IN CPP-FLD(FRM-IFLD) = 'D'
              ADD 1        TO WSS-MOV-DEB.
           IF CPP-IND-DBHB IN CPP-FLD(FRM-IFLD) = 'H'
              ADD 1        TO WSS-MOV-HAB.
       FIN-VAL-CAN-MOV.
           EXIT.

       VAL-MOV-DUP SECTION.
       INI-VAL-MOV-DUP.
           MOVE 'N'           TO WSS-CPP-ERROR.
           MOVE ZEROES        TO WSS-I
                                 WSS-J.
       CICLO-I.
           ADD 1              TO WSS-I.
           IF WSS-I > 38
              GO TO FIN-VAL-MOV-DUP.

           COMPUTE WSS-J = WSS-I + 1.

           IF CPP-MSC-TCCT IN CPP-FLD(WSS-I) = SPACES AND
              CPP-IND-DBHB IN CPP-FLD(WSS-I) = SPACES AND
              CPP-IND-TALG IN CPP-FLD(WSS-I) = SPACES
              GO TO CICLO-I.

       CICLO-J.
           IF CPP-MSC-TCCT IN CPP-FLD(WSS-J) = SPACES AND
              CPP-IND-DBHB IN CPP-FLD(WSS-J) = SPACES AND
              CPP-IND-TALG IN CPP-FLD(WSS-J) = SPACES
              GO TO SIGUE-J.

           IF CPP-MSC-TCCT IN CPP-FLD(WSS-I) =
                              CPP-MSC-TCCT IN CPP-FLD(WSS-J) AND
              CPP-IND-DBHB IN CPP-FLD(WSS-I) =
                              CPP-IND-DBHB IN CPP-FLD(WSS-J) AND
              CPP-IND-TALG IN CPP-FLD(WSS-I) =
                              CPP-IND-TALG IN CPP-FLD(WSS-J)
              MOVE 'S'           TO WSS-CPP-ERROR
              GO TO FIN-VAL-MOV-DUP.
       SIGUE-J.
           ADD 1           TO WSS-J.
           IF WSS-J > 39
              GO TO CICLO-I.
           GO TO CICLO-J.
       FIN-VAL-MOV-DUP.
           EXIT.
      *JCT-FIN 11-01-2012
      *>>>>
*% END
