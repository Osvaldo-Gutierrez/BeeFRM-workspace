*%! Codigo adicional para archivo
*% IF FIN_SCR_VARI
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-OFI-REQA==.
       COPY TABBROFI.
*% END
*% IF FIN_PGM_STAT
              05 PGM-STAT-MOR.
                 88 PGM-STAT-MOR-NUL    VALUE '  '.
                 07 PGM-STT1-MOR        VALUE '2' PIC X(01).
                    88 PGM-STAT-MOR-OKS VALUE '0'.
                 07 PGM-STT2-MOR        VALUE '3' PIC X(01).
*% END
*% IF INI_FIO
      *<<<< ( INI_FIO ) AND ( NOT PGM_VSI )
           PERFORM GNS-HDL-VSM.
      *>>>>
*% END
*% IF MI_COMMAREA
      *<<<< FIN_SCR_VARI
           03  SCR-VARI-PFS.
               05  SCR-KEY-IMOR-ASCE      PIC X(44).
               05  SCR-KEY-IMOR-DESC      PIC X(44).
           03  SCR-CAR-FEC                PIC X(05).
           03  SCR-FEC-INF.
               05 SCR-INF-DES             PIC X(10).
               05 FILLER                  PIC X(05).
               05 SCR-INF-HAS             PIC X(10).
               
      *>>>>
*% END
*% LARGO_MI_COMMAREA = 118
*% IF WSS
      * << Variables definidas por codigo adicional
       01  WR-FRM-LIN-DET1.
           02 WR-MOR-NUM-RUT       PIC ZZZZZZZ9.
           02 FILLER               PIC X(01) VALUE '-'.
           02 WR-MOR-VRF-RUT       PIC X(01).
           02 FILLER               PIC X(02) VALUE SPACES.
           02 WR-MOR-NOM-CLI       PIC X(25).
           02 FILLER               PIC X(02) VALUE SPACES.
           02 WR-MOR-NRO-CTA       PIC X(08).
           02 FILLER               PIC X(02) VALUE SPACES.
           02 WR-MOR-NRO-TEL       PIC X(08).

       01  WR-FRM-LIN-DET2.
           02 FILLER               PIC X(26) VALUE SPACES.
           02 WR-MOR-KEY-IOPC      PIC X(12).
           02 FILLER               PIC X(02) VALUE SPACES.
           02 WR-MOR-FD-VTO        PIC X(02).
           02 FILLER               PIC X(01) VALUE '/'.
           02 WR-MOR-FM-VTO        PIC X(02).
           02 FILLER               PIC X(01) VALUE '/'.
           02 WR-MOR-FA-VTO        PIC X(04).
           02 FILLER               PIC X(02) VALUE SPACES.
           02 WR-MOR-COD-MON       PIC X(06).
           02 FILLER               PIC X(02) VALUE SPACES.
           02 WR-MOR-VAL-VCT       PIC ZZ.ZZZ.ZZZ.ZZ9,9999.

       01  WR-IND                  PIC 9(02).
      *>>>>
*% END
*% IF PFS_SCR_ACC
      *<<<< PFS_SCR_ACC
            IF FRM-FFLD = FRM-FFLD-PF5 OR FRM-FFLD-PF6 OR
                          FRM-FFLD-PF7 OR FRM-FFLD-PF8
               PERFORM VAL-NUM-KEY-MOR
               PERFORM VAL-NUM-FLD-MOR
               PERFORM SCRL-TAB-MOR
               PERFORM SCR-TRL.
      *>>>>
*% END
*% IF PUT_SCR
      *<<<< PUT_SCR
            IF PGM-STAT-MOR-OKS
               MOVE 'MOR-KEY-IMOR' TO FIO-AKEY
               MOVE FIO-GET-NLS TO FIO-CMND
               PERFORM COL-FIO-MOR
               IF FIO-STAT-OKS
                   MOVE SPACES TO SCR-KEY-IMOR-ASCE
                                  SCR-KEY-IMOR-DESC
                   PERFORM LLENAR-TABLA-ASCE
                   MOVE SCR-KEY-IMOR-DESC TO
                        MOR-KEY-IMOR IN MOR 
               ELSE
                   PERFORM LIMPIAR-TABLA VARYING FRM-IFLD FROM 1 BY 1
                                         UNTIL   FRM-IFLD > 06
                   MOVE 'COL' TO MSG-COD-SIST
                   MOVE 'MOR    NEX' TO MSG-COD-MENS
                   PERFORM GET-MSG
                   MOVE MSG-GLS-DESC TO FRM-MENS.
      *>>>>
*% END
*% IF PFS_GET_CON
      *<<<< PFS_GET_CON
           IF NOT ( FRM-FFLD = FRM-FFLD-PF5 )
           IF NOT ( FRM-FFLD = FRM-FFLD-PF6 )
      *>>>>
*% END
*% IF FND_KEY
      *<<<< FND_KEY
      *Lectura de primer registro (busqueda)
           MOVE FRM-COD-EJE TO MOR-COD-EJE IN MOR
           MOVE SPACES TO MOR-KEY-IOPC IN MOR
           MOVE SPACES TO MOR-FEC-VTO  IN MOR
           MOVE SPACES TO MOR-NRO-RUT  IN MOR
           MOVE FIO-GET-NLS TO FIO-CMND.
           PERFORM COL-FIO-MOR.
           MOVE FIO-STAT TO PGM-STAT-MOR.
      *Si no encontro ningun registro entonces abandona la Seccion
           IF NOT FIO-STAT-OKS
              GO TO BUS-MSG-NEX.
           MOVE FIO-END-BRW TO FIO-CMND.
           PERFORM COL-FIO-MOR.
           PERFORM VER-CAM-KEY.
           IF FIO-STAT-OKS
              GO TO FIN-FND-KEY.
       BUS-MSG-NEX.
           IF FRM-COD-EJE IN MOR-FLD > SPACES
              MOVE 'MORNEXEJE' TO MSG-COD-MENS 
           ELSE
              MOVE 'MORNEXOFI' TO MSG-COD-MENS.

           MOVE 'COL' TO MSG-COD-SIST
           PERFORM GET-MSG
           MOVE MSG-GLS-DESC TO FRM-MENS.
           GO TO FIN-FND-KEY.
      *>>>>
*% END
*% IF EOF
       COPY GNSBEGLS.
       COPY TABBBOFI.
       COPY TABBVOFI.
       COPY TABBFOFI.

      *<<<< ( EOF ) AND ( NOT PGM_VSI )
       COPY GNSBGVSM.
       COPY GNSBHVSM.
      *>>>>
      *<<<< EOF
       SCRL-TAB-MOR SECTION.
       INI-SCRL-TAB-MOR.
           IF FRM-FFLD = FRM-FFLD-PF5
               PERFORM SCRL-TAB-MOR-PF5
               GO TO FIN-SCRL-TAB-MOR.
           IF FRM-FFLD = FRM-FFLD-PF6
               PERFORM SCRL-TAB-MOR-PF6
               GO TO FIN-SCRL-TAB-MOR.
       FIN-SCRL-TAB-MOR.
           EXIT.
   
       LLENAR-TABLA-ASCE SECTION.
       INI-LLENAR-TABLA-ASCE.
           MOVE 1 TO FRM-IFLD.
       LUP-LLENAR-TABLA-ASCE.
           IF FRM-IFLD NOT > 06
               PERFORM CARGAR-TABLA.
           IF FRM-IFLD = 1
               MOVE MOR-KEY-IMOR IN MOR TO SCR-KEY-IMOR-DESC
               MOVE SPACES              TO SCR-KEY-IMOR-ASCE
           ELSE
           IF FRM-IFLD = 06
               MOVE MOR-KEY-IMOR IN MOR TO SCR-KEY-IMOR-ASCE.
       NXT-LLENAR-TABLA-ASCE.
           ADD 1 TO FRM-IFLD.
           MOVE 'MOR-KEY-IMOR' TO FIO-AKEY.
           MOVE FIO-GET-NXT TO FIO-CMND.
           PERFORM COL-FIO-MOR.
           PERFORM VER-CAM-KEY.
           IF FIO-STAT-OKS
               IF FRM-IFLD NOT < 7
                  PERFORM PON-MEN-FRM
               ELSE
                  GO TO LUP-LLENAR-TABLA-ASCE.
           PERFORM LIMPIAR-TABLA VARYING FRM-IFLD FROM FRM-IFLD BY 1
                                 UNTIL   FRM-IFLD > 06.
       FIN-LLENAR-TABLA-ASCE.
           MOVE 'MOR-KEY-IMOR' TO FIO-AKEY.
           MOVE FIO-END-BRW TO FIO-CMND.
           PERFORM COL-FIO-MOR.
       EXT-LLENAR-TABLA-ASCE.
           EXIT.
  
       LLENAR-TABLA-DESC SECTION.
       INI-LLENAR-TABLA-DESC.
           MOVE 06 TO FRM-IFLD.
       LUP-LLENAR-TABLA-DESC.
           PERFORM CARGAR-TABLA.
           IF FRM-IFLD = 06
               MOVE MOR-KEY-IMOR IN MOR TO SCR-KEY-IMOR-ASCE
               MOVE SPACES              TO SCR-KEY-IMOR-DESC
           ELSE
           IF FRM-IFLD = 1
               MOVE MOR-KEY-IMOR IN MOR TO SCR-KEY-IMOR-DESC.
       PRV-LLENAR-TABLA-DESC.
           SUBTRACT 1 FROM FRM-IFLD.
           IF FRM-IFLD < 1
               PERFORM PON-MEN-FRM
               GO TO FIN-LLENAR-TABLA-DESC.
           MOVE 'MOR-KEY-IMOR' TO FIO-AKEY.
           MOVE FIO-GET-PRV TO FIO-CMND.
           PERFORM COL-FIO-MOR.
           PERFORM VER-CAM-KEY.
           IF FIO-STAT-OKS
              GO TO LUP-LLENAR-TABLA-DESC.
           PERFORM LIMPIAR-TABLA VARYING FRM-IFLD FROM FRM-IFLD BY -1
                                 UNTIL   FRM-IFLD < 1.
       FIN-LLENAR-TABLA-DESC.
           MOVE 'MOR-KEY-IMOR' TO FIO-AKEY.
           MOVE FIO-END-BRW TO FIO-CMND.
           PERFORM COL-FIO-MOR.
       EXT-LLENAR-TABLA-DESC.
           EXIT.
    
       SCRL-TAB-MOR-PF5 SECTION.
       INI-SCRL-TAB-MOR-PF5.
           IF SCR-KEY-IMOR-DESC NOT > SPACES
               MOVE 'MORHIJONOPRV' TO MSG-COD-MENS
               GO TO MSG-SCRL-TAB-MOR-PF5.
           MOVE SCR-KEY-IMOR-DESC TO MOR-KEY-IMOR IN MOR.
           MOVE 'MOR-KEY-IMOR' TO FIO-AKEY.
           MOVE FIO-GET-LEQ TO FIO-CMND.
           PERFORM COL-FIO-MOR.
           IF NOT ( FIO-STAT-OKS AND
               MOR-KEY-IMOR IN MOR = SCR-KEY-IMOR-DESC )
               MOVE 'MORCURRNEX' TO MSG-COD-MENS
               GO TO MSG-SCRL-TAB-MOR-PF5.
           MOVE 'MOR-KEY-IMOR' TO FIO-AKEY.
           MOVE FIO-GET-PRV TO FIO-CMND.
           PERFORM COL-FIO-MOR.
           PERFORM VER-CAM-KEY.
           IF FIO-STAT-OKS
               PERFORM LLENAR-TABLA-DESC
               GO TO FIN-SCRL-TAB-MOR-PF5.
           IF FIO-STAT-OKS
               MOVE 'MOR-KEY-IMOR' TO FIO-AKEY
               MOVE FIO-END-BRW TO FIO-CMND
               PERFORM COL-FIO-MOR.
           MOVE 'MORHIJONOPRV' TO MSG-COD-MENS.
       MSG-SCRL-TAB-MOR-PF5.
           MOVE 'COL' TO MSG-COD-SIST.
           PERFORM GET-MSG.
           MOVE MSG-GLS-DESC TO FRM-MEN2.
       FIN-SCRL-TAB-MOR-PF5.
           EXIT.
   
       SCRL-TAB-MOR-PF6 SECTION.
       INI-SCRL-TAB-MOR-PF6.
           IF SCR-KEY-IMOR-ASCE NOT > SPACES
               MOVE 'MORHIJONONXT' TO MSG-COD-MENS
               GO TO MSG-SCRL-TAB-MOR-PF6.
           MOVE SCR-KEY-IMOR-ASCE TO MOR-KEY-IMOR IN MOR.
           MOVE 'MOR-KEY-IMOR' TO FIO-AKEY.
           MOVE FIO-GET-NLS TO FIO-CMND.
           PERFORM COL-FIO-MOR.
           IF NOT ( FIO-STAT-OKS AND
               MOR-KEY-IMOR IN MOR = SCR-KEY-IMOR-ASCE )
               MOVE 'MORCURRNEX' TO MSG-COD-MENS
               GO TO MSG-SCRL-TAB-MOR-PF6.
           MOVE 'MOR-KEY-IMOR' TO FIO-AKEY.
           MOVE FIO-GET-NXT TO FIO-CMND.
           PERFORM COL-FIO-MOR.
           PERFORM VER-CAM-KEY.
           IF FIO-STAT-OKS
               PERFORM LLENAR-TABLA-ASCE
               GO TO FIN-SCRL-TAB-MOR-PF6.
           IF FIO-STAT-OKS
               MOVE 'MOR-KEY-IMOR' TO FIO-AKEY
               MOVE FIO-END-BRW TO FIO-CMND
               PERFORM COL-FIO-MOR.
           MOVE 'MORHIJONONXT' TO MSG-COD-MENS.
       MSG-SCRL-TAB-MOR-PF6.
           MOVE 'COL' TO MSG-COD-SIST.
           PERFORM GET-MSG.
           MOVE MSG-GLS-DESC TO FRM-MEN2.
       FIN-SCRL-TAB-MOR-PF6.
           EXIT.
 
       CARGAR-TABLA SECTION.
       INI-CARGAR-TABLA.
           COMPUTE WR-IND = (FRM-IFLD * 2) - 1
           MOVE MOR-NUM-RUT IN MOR  TO WR-MOR-NUM-RUT.
           MOVE MOR-VRF-RUT IN MOR  TO WR-MOR-VRF-RUT
           MOVE MOR-NOM-CLI IN MOR  TO WR-MOR-NOM-CLI
           MOVE MOR-NRO-CTA IN MOR  TO WR-MOR-NRO-CTA
           MOVE MOR-NRO-TEL IN MOR  TO WR-MOR-NRO-TEL
           MOVE WR-FRM-LIN-DET1 TO FRM-LIN-DET IN MOR-FLD(WR-IND).

           MOVE MOR-KEY-IOPC IN MOR TO WR-MOR-KEY-IOPC
           MOVE MOR-FD-VTO   IN MOR TO WR-MOR-FD-VTO
           MOVE MOR-FM-VTO   IN MOR TO WR-MOR-FM-VTO
           MOVE MOR-FA-VTO   IN MOR TO WR-MOR-FA-VTO
           MOVE MOR-COD-MON  IN MOR TO WR-MOR-COD-MON
           MOVE MOR-VAL-VCT  IN MOR TO WR-MOR-VAL-VCT
           ADD  1                   TO WR-IND
           MOVE WR-FRM-LIN-DET2 TO FRM-LIN-DET IN MOR-FLD(WR-IND).
       FIN-CARGAR-TABLA.
           EXIT.
       LIMPIAR-TABLA SECTION.
       INI-LIMPIAR-TABLA.
           COMPUTE WR-IND = (FRM-IFLD * 2) - 1 
           MOVE SPACES TO FRM-LIN-DET IN MOR-FLD(WR-IND).
           ADD  1 TO WR-IND
           MOVE SPACES TO FRM-LIN-DET IN MOR-FLD(WR-IND).
       FIN-LIMPIAR-TABLA.
           EXIT.
       VER-CAM-KEY SECTION.
       INI-VER-CAM-KEY.
      *Se chequea que no exista cambio de clave 
      *dependiendo si se digito ofi/eje o ofi/eje/fec
           MOVE FIO-STAT TO PGM-STAT-MOR.
           IF NOT FIO-STAT-OKS
              GO TO FIN-VER-CAM-KEY.
           IF MOR-COD-OFI IN MOR NOT = MOR-COD-OFI IN MOR-FLD
              MOVE PGM-SRNF TO FIO-STAT.
           IF FRM-COD-EJE IN MOR-FLD > SPACES AND
              FRM-COD-EJE IN MOR-FLD NOT = MOR-COD-EJE IN MOR
              MOVE PGM-SRNF TO FIO-STAT.
           MOVE FIO-STAT TO PGM-STAT-MOR.
       FIN-VER-CAM-KEY.
           EXIT.
       PON-MEN-FRM SECTION.
       INI-PON-MEN-FRM.
           IF (FRM-MEN2 NOT > SPACES)
               MOVE 'COL'                TO MSG-COD-SIST
               MOVE 'MOREXIPAG'          TO MSG-COD-MENS
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC         TO FRM-MEN2.
       FIN-PON-MEN-FRM.
           EXIT.
      *>>>>
*% END
