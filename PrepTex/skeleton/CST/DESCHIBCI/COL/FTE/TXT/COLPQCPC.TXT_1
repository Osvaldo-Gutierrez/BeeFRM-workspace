*%! Codigo adicional para archivo COLPQCPC
*% INCLUDE 'GNSSRC:MANEJO_VSI.SRC'
*% LARGO_MI_COMMAREA = 2750
*%! GNSTCA = 270
*% PGM_PTC = TRUE
*% IF  CMT_ID_PQ
      *************************************************************
      * PROYECTO : CAE, CUADRO DE PAGO Y ORIGEN DE FINANCIAMIENTO
      * OBJETIVO GENERAL: DESPLEGAR EL TOTAL A PAGAR Y DETALLE DE LAS
      *                   CUOTAS A LA FECHA DE CONSULTA
      * ENTIDADES CONSULTADAS : OPC-CAN-ROV-RCV-CYA-ITR-CXE-VEN.
      * FECHA : NOVIEMBRE-2011
      * RESPONSABLE: AFRI-CGC
      *************************************************************
      *MANTENCION:
      *OBJETIVO: ELIMINAR OPERACION CON SALDO CERO
      *FECHA: MARZO 2012
      *RESPONSABLE: AFRI-CGC
      *ETIQUETA: *AFRI-FIN 06-MAR-2012 MEJORAS CAE
      *************************************************************
*% END
*% IF WSS 
      *PTC-INI
      *PTC-SUB
       01 WSS-DEBUG.
          03 WSS-DEBUG-2   VALUE SPACES  PIC X(40).
      * COPY GNSWVSCR.
       COPY GNSWV3CR.
           03 SCR-NUM-PANT               PIC 9(0005).
           03 SCR-CPC-FLD                PIC X(1100).
      *PTC-FIN
*% END
*% IF WSS
       03  WSS-I           VALUE ZEROES            PIC  9(03).
       COPY COLWXCPC.
       COPY COLBRPMC.
       COPY COLBRRDC.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-RDC-REQA==.
       COPY SGCBRDCP.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-DCP-REQA==.
       COPY SGCBRDCE.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-DCE-REQA==.
       COPY COLBROPC.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-OPC-REQA==.
       COPY COLBRDLC.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-DLC-REQA==.
       COPY COLBRCAN.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-CAN-REQA==.
       COPY COLBRICG.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-ICG-REQA==.
       COPY COLBRVEN.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-VEN-REQA==.
       COPY COLBRRCV.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-RCV-REQA==.
       COPY COLBRTOC.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-TOC-REQA==.
       COPY COLBRCXE.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-CXE-REQA==.
       COPY COLBRCEN.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-CEN-REQA==.
       COPY COLBRROV.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-ROV-REQA==.
       COPY COLBRCYA.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-CYA-REQA==.
       COPY COLBREVC.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-EVC-REQA==.
       COPY COLBRDIC.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-DIC-REQA==.
       COPY COLBRPCP.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-PCP-REQA==.
       COPY COLBRIXT.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-IXT-REQA==.
       COPY TABBRCAM.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-CAM-REQA==.
       COPY TABBROFI.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-OFI-REQA==.
       COPY TABBRTIO.
       COPY COLWGPCP.
       COPY GNSWGPES.
      * COPY GNSWGFRM.
       COPY COLWGVEN.
       COPY COLWICAN.
       COPY COLW2CAN.
       COPY COLW1CAN.
       COPY COLWGCPC.
       COPY COLBRITR.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-ITR-REQA==.
       COPY COLWGINT.
       COPY TABWGTXC.
      *<<<< WSS
       COPY GNSWGCPT.
      *>>>>
       01 WSS-NUM-CCUR.
           03 WSS-NUM-ICUR-EDT  PIC  ZZ9.
           03 WSS-NUM-ICUR-ALF       PIC X(03).
           03 WSS-NUM-ICUR      REDEFINES
              WSS-NUM-ICUR-ALF       PIC 9(03).
      ***************************************************************
       01  SCR-KEY-ICAN                     PIC X(03).
       01  SCR-CNAL          VALUE SPACES   PIC X(03).
       01  EIBTRNID          VALUE SPACES   PIC X(04).
      ***************************************************************
*% END
*% IF FIN_PGM_STAT
      *<<<<
              05 PGM-STAT-OPC.
                 88 PGM-STAT-OPC-NUL    VALUE '  '.
                 07 PGM-STT1-OPC        VALUE '2' PIC X(01).
                    88 PGM-STAT-OPC-OKS VALUE '0'.
                 07 PGM-STT2-OPC        VALUE '3' PIC X(01).
      *>>>>
      ***************************************************************
              05 PGM-STAT-CYA           VALUE '23'      PIC X(02).
                 88 PGM-STAT-CYA-OKS    VALUE '00'.
                 88 PGM-STAT-CYA-NUL    VALUE '  '.
              05 PGM-STAT-COM           VALUE '23'      PIC X(02).
                 88 PGM-STAT-COM-OKS    VALUE '00'.
                 88 PGM-STAT-COM-NUL    VALUE '  '.
              05 PGM-STAT-AUT           VALUE '23'      PIC X(02).
                 88 PGM-STAT-AUT-OKS    VALUE '00'.
                 88 PGM-STAT-AUT-NUL    VALUE '  '.
              05 PGM-STAT-VEN           VALUE '23'      PIC X(02).
                 88 PGM-STAT-VEN-OKS    VALUE '00'.
                 88 PGM-STAT-VEN-NUL    VALUE '  '.
              05 PGM-STAT-RDC           VALUE '23'      PIC X(02).
                 88 PGM-STAT-RDC-OKS    VALUE '00'.
                 88 PGM-STAT-RDC-NUL    VALUE '  '.
              05 PGM-STAT-RCV           VALUE '23'      PIC X(02).
                 88 PGM-STAT-RCV-OKS    VALUE '00'.
                 88 PGM-STAT-RCV-NUL    VALUE '  '.
              05 PGM-STAT-ITR           VALUE '23'      PIC X(02).
                 88 PGM-STAT-ITR-OKS    VALUE '00'.
                 88 PGM-STAT-ITR-NUL    VALUE '  '.
              05 PGM-STAT-ICG           VALUE '23'      PIC X(02).
                 88 PGM-STAT-ICG-OKS    VALUE '00'.
                 88 PGM-STAT-ICG-NUL    VALUE '  '.
              05 PGM-STAT-CAN           VALUE '23'      PIC X(02).
                 88 PGM-STAT-CAN-OKS    VALUE '00'.
                 88 PGM-STAT-CAN-NUL    VALUE '  '.
              05 PGM-STAT-ROV           VALUE '23'      PIC X(02).
                 88 PGM-STAT-ROV-OKS    VALUE '00'.
                 88 PGM-STAT-ROV-NUL    VALUE '  '.
           03 PGM-SMAL                VALUE 'M' PIC X(01).
      ****************************************************************
           03 PGM-CMMA.
              05 PGM-CMMA-CHR OCCURS 3000 PIC X(01).
*% END
*%! IF  SYS_SCOD
*%!           PERFORM GNS-HDL-VSM.
*%! END
*% IF INI_FIO
      *<<<< INI_FIO
           IF SCR-OFRM-SRV
               PERFORM CLR-FRM VARYING WSS-I FROM 1 BY 1
                                 UNTIL WSS-I > WSS-IMAX
                MOVE TSK-TERM-ALF TO CPC-COD-TERM
                MOVE TSK-TERM-ALF TO CPC-COD-TERM-MAS
           ELSE
                MOVE EIBTRMID     TO CPC-COD-TERM
                MOVE EIBTRMID     TO CPC-COD-TERM-MAS.
           MOVE +3859 TO SCR-TCMA.
           PERFORM GNS-ERR-QUE.
           IF ( FRM-FFLD = FRM-FFLD-PF5 ) AND ( SCR-NUM-PANT = 1 )
               MOVE SCR-CPC-FLD TO CPC-FLD
               GO TO FIN-INI.

           IF ( FRM-FFLD = FRM-FFLD-PF6 )
               MULTIPLY SCR-NUM-PANT BY WSS-IMAX GIVING QUE-NITM
               ADD 1              TO QUE-NITM
               MOVE CPC-NOM-TSCPC TO QUE-COLA
               MOVE CPC-LEN-TSCPC TO QUE-LITM
               MOVE QUE-GET       TO QUE-CMND
               PERFORM GNS-PRO-QUE
               IF QUE-STAT NOT = QUE-STAT-OKS
                  MOVE SCR-CPC-FLD TO CPC-FLD
                  GO TO FIN-INI.
      *>>>>
*% END
*% IF PFS_SCR_ACC
      *<<<< PFS_SCR_ACC
           IF FRM-FFLD = FRM-FFLD-PF5 OR FRM-FFLD-PF6
               PERFORM VAL-NUM-KEY-CPC
               PERFORM VAL-NUM-FLD-CPC
               PERFORM SCRL-TAB-CPC
               PERFORM SCR-TRL.
      *>>>>
*% END
*% IF PFS_GET_CON
      *<<<< PFS_GET_CON
           IF NOT ( FRM-FFLD = FRM-FFLD-PF5 OR FRM-FFLD-PF6 )
      *>>>>
*% END
*% IF FND_KEY
      *<<<< 
           MOVE SPACES TO DBC-IDC-ICLI IN DBC.
           MOVE DBC-NUM-ICLI IN CPC-FLD TO DBC-NUM-ICLI IN DBC.
           MOVE 'DBC-IDC-ICLI' TO FIO-AKEY.
      *>>>>
*% END
*% IF FIN_FND_KEY
      *FIN-FND-KEY.
           IF FIO-STAT = FIO-STAT-NEX
               MOVE 'S' TO SCR-IERR.
           IF NOT ( FIO-STAT-OKS AND
              DBC-NUM-ICLI IN CPC-FLD = DBC-NUM-ICLI IN DBC AND
              DBC-VRF-ICLI IN CPC-FLD = DBC-VRF-ICLI IN DBC )
               MOVE 'S' TO SCR-IERR
               GO TO EXT-FND-KEY1.
      *<<<<
           MOVE DBC-GLS-NOMC IN DBC TO FRM-GLS-NOMC IN CPC-FLD.
           PERFORM CARGA-VOCI.
           PERFORM OBT-CIC-MONE.
           MOVE ZEROES TO HOY-SHOY.
           MOVE ZEROES TO HOY-AHOY.
           MOVE ZEROES TO HOY-MHOY.
           MOVE ZEROES TO HOY-DHOY.

           MOVE ZEROES TO WSS-ENC-TOTA IN CPC-VARI.
           MOVE SPACES TO VEC-CPC.
           MOVE SPACES TO VEC-DCP.
           MOVE ZEROES TO WSS-VEN-TOTA IN CPC-VARI.
           MOVE 1 TO WSS-VEC-TAB IN WSS-VEC-CPC.
           MOVE 1 TO WSS-VEC-CAM IN WSS-VEC-CPC.
           MOVE SPACES TO RDC.
           MOVE DBC-CIC-ICLI IN DBC TO RDC-CIC-ICLI IN RDC.
           MOVE SPACES TO RDC-CIC-IOPC IN RDC.
           MOVE 000    TO RDC-NUM-IDLC IN RDC.
           MOVE FIO-GET-NLS TO FIO-CMND.
       LUP-BUSCA-OPC.
           PERFORM COL-FIO-RDC.
           IF NOT (FIO-STAT-OKS AND
                   DBC-CIC-ICLI IN DBC = RDC-CIC-ICLI IN RDC)
               MOVE WSS-ENC-TOTA IN CPC-VARI TO FRM-VAL-CCRE IN CPC-FLD
               GO TO EXT-FND-KEY1.

           IF RDC-NUM-IDLC IN RDC NOT = ZEROES
               GO TO NEXT-RDC.

           MOVE SPACES TO OPC.
           MOVE RDC-CIC-IOPC IN RDC TO OPC-CIC-IOPC IN OPC.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM COL-FIO-OPC.
           IF NOT FIO-STAT-OKS
               GO TO NEXT-RDC.

           IF OPC-MSC-STAT IN OPC NOT = 'A'
               GO TO NEXT-RDC.

           PERFORM VAL-OPC-OCI.
           IF WSS-IND-OKAY IN CPC-VARI NOT = 'S'
               GO TO NEXT-RDC.

           PERFORM VAL-OPC-ORI.
           IF WSS-IND-OKAY IN CPC-VARI NOT = 'S'
               GO TO NEXT-RDC.

      *AFRI-INI 06-MAR-2012 MEJORAS CAE
           IF OPC-VAL-SCRE IN OPC NOT > ZEROES
               PERFORM BUS-ULT-CAN-ORIG
               IF WSS-IND-OKAY IN CPC-VARI = 'S'
                   GO TO NEXT-RDC.

           MOVE SPACES TO OPC.
           MOVE RDC-CIC-IOPC IN RDC TO OPC-CIC-IOPC IN OPC.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM COL-FIO-OPC.
           IF NOT FIO-STAT-OKS
               GO TO NEXT-RDC.
      *AFRI-FIN 06-MAR-2012 MEJORAS CAE

           ADD 1 TO WSS-TOT-OPCS IN CPC-VARI.

           PERFORM GET-FHOY.
           MOVE HOY-SHOY       TO WSS-NUM-SPRO IN CPC-VARI.
           MOVE HOY-AHOY       TO WSS-NUM-APRO IN CPC-VARI.
           MOVE HOY-MHOY       TO WSS-NUM-MPRO IN CPC-VARI.
           MOVE HOY-DHOY       TO WSS-NUM-DPRO IN CPC-VARI.

           PERFORM BUS-SIT-DEU.

           MOVE SPACES TO DLC.
           MOVE OPC-CIC-IOPC IN OPC TO DLC-CIC-IOPC IN DLC.
           MOVE ZEROES TO DLC-NUM-IDLC IN DLC.
           MOVE FIO-GET-NLS TO FIO-CMND.
           PERFORM COL-FIO-DLC.
           IF NOT FIO-STAT-OKS
               MOVE SPACES TO DLC.

           ADD 1 TO WSS-ENC-TOTA IN CPC-VARI.
           SET WSS-COR-ENCA TO WSS-ENC-TOTA IN CPC-VARI.

           MOVE DLC-IND-SCBZ IN DLC TO WSS-IND-SCBZ IN CPC-VARI.
           MOVE OPC-CIC-IOPC IN OPC TO WSS-OPC-ORI IN CPC-VARI.
           MOVE OPC-VAL-CRED IN OPC TO WSS-ENC-SADP(WSS-COR-ENCA).

           MOVE OPC-COD-VCOC IN OPC TO WSS-COD-VCAM IN CPC-VARI.

           IF OPC-IND-RENO IN OPC = 'PRO'
               PERFORM BUS-OPC-INI.

           PERFORM BUS-ANO-LIC.

           MOVE SPACES TO ICG.
           MOVE OPC-CIC-IOPC IN OPC TO ICG-CIC-IOPC IN ICG.
           MOVE ZEROES TO ICG-NUM-ICAN IN ICG.
           MOVE SPACES TO ICG-CIC-IOPV IN ICG.
           MOVE ZEROES TO ICG-NUM-IVCT IN ICG.
           MOVE 'INT'  TO ICG-IND-TTAS IN ICG.
           MOVE 'COL'  TO FIO-SIST.
           MOVE FIO-GET-NLS TO FIO-CMND.
           PERFORM COL-FIO-ICG.
           IF NOT ( FIO-STAT-OKS AND
              ICG-CIC-IOPC IN ICG = OPC-CIC-IOPC IN OPC AND
              ICG-IND-TTAS IN ICG = 'INT' )
               MOVE SPACES TO ICG
               MOVE ZEROES TO ICG-SGV-TINT IN ICG.

           MOVE OPC-CIC-IOPC IN OPC TO WSS-DCP-OPCO IN CPC-VARI.
           MOVE WSS-OPC-ORI IN CPC-VARI TO WSS-DCP-OPCA IN CPC-VARI.
           MOVE OPC-COD-COOC IN OPC TO WSS-DCP-TIOP IN CPC-VARI.
           MOVE OPC-FEC-FCOL IN OPC TO WSS-DCP-FECC IN CPC-VARI.
           MOVE ICG-SGV-TINT IN ICG TO WSS-DCP-TAIN IN CPC-VARI.
           MOVE OPC-VAL-CRED IN OPC TO WSS-DCP-MOOR IN CPC-VARI.

           MOVE WSS-OPC-ORI IN CPC-VARI TO WSS-ENC-NOPC(WSS-COR-ENCA).
           MOVE OPC-COD-COOC IN OPC TO WSS-ENC-TOPC(WSS-COR-ENCA).
           IF DLC-IND-SCRT IN DLC = 'VDD'
               MOVE 'TGR' TO WSS-ENC-CART(WSS-COR-ENCA)
           ELSE
               MOVE 'BCI' TO WSS-ENC-CART(WSS-COR-ENCA).
           IF WSS-IND-SCBZ IN CPC-VARI = 'JUDIC'
               MOVE 'SI' TO WSS-ENC-COJU(WSS-COR-ENCA)
           ELSE
               MOVE 'NO' TO WSS-ENC-COJU(WSS-COR-ENCA).

           MOVE OPC-VAL-CRED IN OPC TO WSS-ENC-MONO(WSS-COR-ENCA).
           MOVE OPC-FEC-FCOL IN OPC TO WSS-ENC-FECC(WSS-COR-ENCA).
           MOVE WSS-IND-SITU IN CPC-VARI TO WSS-ENC-SITU(WSS-COR-ENCA).
           MOVE ICG-SGV-TINT IN ICG TO WSS-ENC-TIIN(WSS-COR-ENCA).

           MOVE ZEROES TO WSS-ENC-TOPA(WSS-COR-ENCA).
           MOVE ZEROES TO WSS-ENC-GACO(WSS-COR-ENCA).
           MOVE 'NO' TO WSS-ENC-ACEL(WSS-COR-ENCA).
           MOVE ZEROES TO WSS-ENC-CUMO(WSS-COR-ENCA).

           IF WSS-ENC-SITU(WSS-COR-ENCA) NOT = 'SI'
               PERFORM CRG-VEC-CPC
               GO TO NEXT-RDC.

      *EXISTE OBLIGACION DE PAGO SE REVISAN CANCELACIONES Y
      *VENCIMIENTOS PARA COMPLETAR ARREGLOS CPC Y DCP

           MOVE SPACES TO VEN.
           MOVE OPC-CIC-IOPC IN OPC TO VEN-CIC-IOPC IN VEN.
           MOVE ZEROES TO VEN-NUM-IVEN IN VEN.

           IF OPC-VAL-CRED IN OPC > OPC-VAL-SCRE IN OPC
               MOVE OPC-VAL-CRED IN OPC TO WSS-OPC-MONT IN CPC-VARI
           ELSE
               MOVE OPC-VAL-SCRE IN OPC TO WSS-OPC-MONT IN CPC-VARI.

           MOVE 'NO' TO WSS-IND-ACCE IN CPC-VARI.

           MOVE SPACES TO WSS-PAG-TOTA IN CPC-VARI.
           PERFORM BUS-CAN-OPC.

           MOVE SPACES TO CAN.
           PERFORM GET-FHOY.
           MOVE HOY-SHOY       TO WSS-NUM-SPRO IN CPC-VARI.
           MOVE HOY-AHOY       TO WSS-NUM-APRO IN CPC-VARI.
           MOVE HOY-MHOY       TO WSS-NUM-MPRO IN CPC-VARI.
           MOVE HOY-DHOY       TO WSS-NUM-DPRO IN CPC-VARI.
           MOVE WSS-FEC-PROC IN CPC-VARI TO WSS-FEC-CAMB IN CPC-VARI.

           MOVE OPC-COD-VCOC IN OPC TO WSS-COD-VCAM IN CPC-VARI.

           PERFORM OBT-VAL-CONV.

           IF WSS-IND-ACCE IN CPC-VARI NOT = SPACES
               MOVE WSS-IND-ACCE IN CPC-VARI TO
                                         WSS-ENC-ACEL(WSS-COR-ENCA).

           IF WSS-TIPO-ANT IN CPC-VARI NOT = 'CIE'
               MOVE FIO-GET-NXT TO FIO-CMND
               PERFORM COL-OBT-VEN
               IF VEN-CIC-IOPC IN VEN = OPC-CIC-IOPC IN OPC AND
                  VEN-NUM-IVEN IN VEN NOT > OPC-NUM-VCOR IN OPC
                   ADD 1 TO WSS-VEN-TOTA IN CPC-VARI
                   SET WSS-COR-VENC TO WSS-VEN-TOTA IN CPC-VARI
                   PERFORM INI-REG-DCP
               ELSE
                   GO TO FIN-VENC.

           IF WSS-PAG-TOTA IN CPC-VARI = 'S'
               MOVE ZEROES TO WSS-ENC-SADP(WSS-COR-ENCA)
               MOVE ZEROES TO WSS-ENC-CUMO(WSS-COR-ENCA)
               MOVE ZEROES TO WSS-ENC-GACO(WSS-COR-ENCA)
               MOVE ZEROES TO WSS-ENC-TOPA(WSS-COR-ENCA)
               PERFORM CRG-VEC-CPC
               GO TO NEXT-RDC.


       LOOP-VEN.
           MOVE WSS-OPC-MONT IN CPC-VARI TO OPC-VAL-SCRE IN OPC.
           MOVE HOY-SHOY       TO CAN-NUM-SCAN IN CAN.
           MOVE HOY-AHOY       TO CAN-NUM-ACAN IN CAN.
           MOVE HOY-MHOY       TO CAN-NUM-MCAN IN CAN.
           MOVE HOY-DHOY       TO CAN-NUM-DCAN IN CAN.
           MOVE VEN-FEC-FVEN IN VEN TO WSS-VEN-FECV(WSS-COR-VENC).
           MOVE CAN-FEC-FCAN IN CAN TO WSS-VEN-FECP(WSS-COR-VENC).

           IF WSS-ENC-ACEL(WSS-COR-ENCA) = 'SI'
               COMPUTE VEN-VAL-SCAP IN VEN = VEN-VAL-CAPI IN VEN -
                            WSS-VEN-CAUF(WSS-COR-VENC)
               COMPUTE VEN-VAL-SFIN IN VEN = VEN-VAL-FINA IN VEN -
                            WSS-VEN-CAUF(WSS-COR-VENC) -
                            WSS-VEN-INUF(WSS-COR-VENC).

           IF WSS-FEC-PROC IN CPC-VARI >= VEN-FEC-FIMV IN VEN
               MOVE 'MOR' TO WSS-VEN-SITU(WSS-COR-VENC)
           ELSE
               MOVE 'VIG' TO WSS-VEN-SITU(WSS-COR-VENC)
               MOVE WSS-VEN-TOTA IN CPC-VARI TO
                                            WSS-VEN-CORR(WSS-COR-VENC)
               ADD ZEROES TO WSS-VEN-IMUF(WSS-COR-VENC)
               ADD ZEROES TO WSS-VEN-COUF(WSS-COR-VENC)
               ADD ZEROES TO WSS-VEN-MOPE(WSS-COR-VENC)
               ADD ZEROES TO WSS-VEN-MOUF(WSS-COR-VENC)
               COMPUTE WSS-VEN-INUF(WSS-COR-VENC) ROUNDED =
                                WSS-VEN-INUF(WSS-COR-VENC) +
                   (VEN-VAL-SFIN IN VEN - VEN-VAL-SCAP IN VEN)
               MOVE WSS-VEN-INUF(WSS-COR-VENC) TO
                                            PES-SGV-DECI IN PES-VARI
               PERFORM PES-SCTV
               MOVE PES-SGV-ENTE IN PES-VARI TO
                                            WSS-VEN-INPE(WSS-COR-ENCA)
               PERFORM PES-SCTV
               MOVE PES-SGV-ENTE IN PES-VARI TO
                                            WSS-VEN-INPE(WSS-COR-ENCA)
               ADD VEN-VAL-SCAP IN VEN TO WSS-VEN-CAUF(WSS-COR-VENC)
               COMPUTE WSS-VEN-TCUF(WSS-COR-VENC) ROUNDED =
                                     WSS-VEN-TCUF(WSS-COR-VENC) +
                                     WSS-VEN-CAUF(WSS-COR-VENC) +
                                     WSS-VEN-COUF(WSS-COR-VENC) +
                                     WSS-VEN-IMUF(WSS-COR-VENC) +
                                     WSS-VEN-INUF(WSS-COR-VENC)
               COMPUTE WSS-VEN-SPUF(WSS-COR-VENC) ROUNDED =
                    WSS-OPC-MONT IN CPC-VARI - VEN-VAL-SCAP IN VEN
               COMPUTE WSS-OPC-MONT IN CPC-VARI ROUNDED =
                    WSS-OPC-MONT IN CPC-VARI - VEN-VAL-SCAP IN VEN
               ADD ZEROES TO WSS-VEN-GACO(WSS-COR-VENC)
               COMPUTE WSS-VEN-PACP(WSS-COR-VENC) ROUNDED =
                                    WSS-VEN-PACP(WSS-COR-VENC) +
                                    WSS-VEN-TCUF(WSS-COR-VENC) +
                                    WSS-VEN-MOUF(WSS-COR-VENC) +
                                    (WSS-VEN-GACO(WSS-COR-VENC) /
                                    WSS-VAL-CAMB IN CPC-VARI)
               MOVE ZEROES TO WSS-VEN-INMO(WSS-COR-VENC)

               MOVE SPACES TO WSS-VEN-NOPC(WSS-COR-VENC)
               MOVE SPACES TO WSS-VEN-TCYA(WSS-COR-VENC)
      *AFRI-INI 06-MAR-2012 MEJORAS CAE
      *        GO TO NEXT-VEN.
               GO TO FIN-VENC.
      *AFRI-FIN 06-MAR-2012 MEJORAS CAE

           PERFORM PRO-TCAN-CTE.
           MOVE WSS-VEN-TOTA IN CPC-VARI TO WSS-VEN-CORR(WSS-COR-VENC).
           MOVE 'N' TO WSS-VEN-PAGO(WSS-COR-VENC).
           ADD ZEROES TO WSS-VEN-IMUF(WSS-COR-VENC).
           COMPUTE CAN-SGV-COMI IN CAN-FLD ROUNDED =
                                             CAN-SGV-COMI IN CAN-FLD /
                                             WSS-VAL-CAMB IN CPC-VARI.
           ADD CAN-SGV-COMI IN CAN-FLD TO WSS-VEN-COUF(WSS-COR-VENC).
           ADD SCR-SGV-INTM TO WSS-VEN-MOPE(WSS-COR-VENC).
           COMPUTE SCR-SGV-INTM ROUNDED =
                                  SCR-SGV-INTM /
                                  WSS-VAL-CAMB IN CPC-VARI.
           ADD SCR-SGV-INTM TO WSS-VEN-MOUF(WSS-COR-VENC).
           COMPUTE WSS-VEN-INUF(WSS-COR-VENC) ROUNDED =
                                WSS-VEN-INUF(WSS-COR-VENC) +
               (VEN-VAL-FINA IN VEN - VEN-VAL-CAPI IN VEN).
           MOVE WSS-VEN-INUF(WSS-COR-VENC) TO PES-SGV-DECI IN PES-VARI.
           PERFORM PES-SCTV.
           MOVE PES-SGV-ENTE IN PES-VARI TO WSS-VEN-INPE(WSS-COR-ENCA).
           ADD VEN-VAL-SCAP IN CAN-FLD TO WSS-VEN-CAUF(WSS-COR-VENC).
           COMPUTE WSS-VEN-TCUF(WSS-COR-VENC) ROUNDED =
                           WSS-VEN-TCUF(WSS-COR-VENC) +
                           WSS-VEN-CAUF(WSS-COR-VENC) +
                           WSS-VEN-COUF(WSS-COR-VENC) +
                           WSS-VEN-IMUF(WSS-COR-VENC) +
                           WSS-VEN-INUF(WSS-COR-VENC).
           COMPUTE WSS-VEN-SPUF(WSS-COR-VENC) ROUNDED =
               WSS-OPC-MONT IN CPC-VARI - VEN-VAL-SCAP IN CAN-FLD.
           COMPUTE WSS-OPC-MONT IN CPC-VARI ROUNDED =
               WSS-OPC-MONT IN CPC-VARI - VEN-VAL-SCAP IN CAN-FLD.
           ADD CAN-SGV-GAST IN CAN-FLD TO WSS-VEN-GACO(WSS-COR-VENC).
           COMPUTE WSS-VEN-GAUF(WSS-COR-VENC) ROUNDED =
                     WSS-VEN-GACO(WSS-COR-VENC) /
                             WSS-VAL-CAMB IN CPC-VARI.
           COMPUTE WSS-VEN-PACP(WSS-COR-VENC) ROUNDED =
                           WSS-VEN-PACP(WSS-COR-VENC) +
                           WSS-VEN-TCUF(WSS-COR-VENC) +
                           WSS-VEN-MOUF(WSS-COR-VENC) +
                           (WSS-VEN-GACO(WSS-COR-VENC) /
                           WSS-VAL-CAMB IN CPC-VARI).
           COMPUTE WSS-VEN-PAPE(WSS-COR-VENC) ROUNDED =
                WSS-VEN-PACP(WSS-COR-VENC) * WSS-VAL-CAMB IN CPC-VARI.
           MOVE WSS-VEN-PAPE(WSS-COR-VENC) TO PES-SGV-DECI IN PES-VARI.
           PERFORM PES-SCTV.
           MOVE PES-SGV-ENTE IN PES-VARI TO WSS-VEN-PAPE(WSS-COR-VENC).
           ADD WSS-VAL-SVEN IN WSS-VARI TO WSS-VEN-PAPE(WSS-COR-VENC).
           MOVE WSS-VAL-SVEN IN WSS-VARI TO WSS-VEN-DEUD(WSS-COR-VENC).
           ADD CAN-SGV-TPAG IN CAN-FLD TO WSS-VEN-DEUD(WSS-COR-VENC).
           MOVE WSS-VEN-DEUD(WSS-COR-VENC) TO PES-SGV-DECI IN PES-VARI.
           PERFORM PES-SCTV.
           MOVE PES-SGV-ENTE IN PES-VARI TO WSS-VEN-DEUD(WSS-COR-VENC).
           MOVE ICG-SGV-TINT IN CAN-FLD TO WSS-VEN-INMO(WSS-COR-VENC).

           MOVE SPACES              TO WSS-VEN-NOPC(WSS-COR-VENC).
           MOVE SPACES              TO WSS-VEN-TCYA(WSS-COR-VENC).

       NEXT-VEN.
           MOVE FIO-GET-NXT TO FIO-CMND.
           IF WSS-ENC-ACEL(WSS-COR-ENCA) = 'SI'
               MOVE HOY-DHOY TO VEN-DTBS
               MOVE HOY-MHOY TO VEN-MTBS
               MOVE HOY-SHOY TO VEN-STBS
               MOVE HOY-AHOY TO VEN-ATBS
               MOVE 'S'      TO VEN-KEST
               PERFORM COL-OBT-VEN
               MOVE VEN-STAT TO WSS-DEBUG-2
               PERFORM GNS-ERR-QUE
               IF VEN-STAT-OKS AND
                  OPC-CIC-IOPC IN OPC = VEN-CIC-IOPC IN VEN
                   ADD 1 TO WSS-VEN-TOTA IN CPC-VARI
                   SET WSS-COR-VENC TO WSS-VEN-TOTA IN CPC-VARI
                   PERFORM INI-REG-DCP
                   GO TO LOOP-VEN
               ELSE
                   GO TO FIN-VENC.

           PERFORM COL-OBT-VEN.
           IF VEN-CIC-IOPC IN VEN = OPC-CIC-IOPC IN OPC AND
              VEN-NUM-IVEN IN VEN NOT > OPC-NUM-VCOR IN OPC
               ADD 1 TO WSS-VEN-TOTA IN CPC-VARI
               SET WSS-COR-VENC TO WSS-VEN-TOTA IN CPC-VARI
               PERFORM INI-REG-DCP
               GO TO LOOP-VEN.

       FIN-VENC.
           MOVE ZEROES TO WSS-ENC-CUMO(WSS-COR-ENCA).
           PERFORM BUS-SUM-CAMP.
           MOVE WSS-CON-MORA IN CPC-VARI TO WSS-ENC-CUMO(WSS-COR-ENCA).
           MOVE WSS-TOT-APAG IN CPC-VARI TO WSS-ENC-TOPA(WSS-COR-ENCA).
           MOVE WSS-SAL-DEPG IN CPC-VARI TO WSS-ENC-SADP(WSS-COR-ENCA).
           MOVE WSS-SUM-GACO IN CPC-VARI TO WSS-ENC-GACO(WSS-COR-ENCA).
           MOVE WSS-SAL-DEPG IN CPC-VARI TO WSS-DCP-SAPO IN CPC-VARI.

           PERFORM CRG-VEC-CPC.

       NEXT-RDC.
           IF (SCR-OFRM-SRV AND WSS-J > WSS-NITMMAX IN CPC-PANT)
               MOVE WSS-ENC-TOTA IN CPC-VARI TO FRM-VAL-CCRE IN CPC-FLD
               GO TO EXT-FND-KEY1.

           IF ((NOT SCR-OFRM-SRV) AND WSS-J > WSS-JMAX IN CPC-PANT)
               MOVE WSS-ENC-TOTA IN CPC-VARI TO FRM-VAL-CCRE IN CPC-FLD
               GO TO EXT-FND-KEY1.

           MOVE ZEROES TO WSS-VEN-TOTA IN CPC-VARI.
           MOVE FIO-GET-NXT TO FIO-CMND.
           GO TO LUP-BUSCA-OPC.
      *>>>>
       EXT-FND-KEY1.

           PERFORM PUT-TAB.

           MOVE '00' TO FIO-STAT.
           MOVE SCR-STAT-CON TO SCR-STAT.
           GO TO FIN-FND-KEY.
      *----------------------------------------------------------
       MSG-FND-KEY.
           MOVE 'TAB' TO MSG-COD-SIST.
           PERFORM GET-MSG.
           MOVE MSG-GLS-DESC TO FRM-MENS.
           MOVE '00' TO FIO-STAT.
           MOVE SCR-STAT-CON TO SCR-STAT.
           GO TO FIN-FND-KEY.
      *>>>>
*% END
*% IF EOF
      *>>>>
       CRG-VEC-CPC SECTION.
       INI-CRG-VEC-CPC.
           ADD 1 TO WSS-J IN CPC-PANT.
           IF WSS-J IN CPC-PANT > WSS-JMAX IN CPC-PANT
               GO TO FIN-CRG-VEC-CPC.

           PERFORM CLR-CPC-VEC.
           MOVE WSS-ENC-NOPC(WSS-COR-ENCA) TO WSS-DCP-OPCO IN CPC-VARI.
           MOVE WSS-DCP-CAIO TO WSS-CAI-IOPC-V(WSS-J).
           MOVE WSS-DCP-IICO TO WSS-IIC-IOPC-V(WSS-J).
           MOVE WSS-ENC-SITU(WSS-COR-ENCA) TO WSS-IND-SDEU-V(WSS-J).
           MOVE WSS-ENC-CART(WSS-COR-ENCA) TO WSS-IND-CART-V(WSS-J).
           MOVE WSS-ENC-ALIC(WSS-COR-ENCA) TO WSS-NUM-AGNO-V(WSS-J).
           MOVE WSS-ENC-COJU(WSS-COR-ENCA) TO WSS-IND-CJUD-V(WSS-J).
           MOVE WSS-ENC-ACEL(WSS-COR-ENCA) TO WSS-IND-ACEL-V(WSS-J).
           MOVE WSS-ENC-CUMO(WSS-COR-ENCA) TO WSS-IND-CIMP-V(WSS-J).
           MOVE WSS-ENC-GACO(WSS-COR-ENCA) TO WSS-SGV-COBR-V(WSS-J).
           MOVE WSS-ENC-TOPA(WSS-COR-ENCA) TO WSS-SGV-MPAR-V(WSS-J).
           MOVE WSS-ENC-TIIN(WSS-COR-ENCA) TO WSS-SGV-TINT-V(WSS-J).
           MOVE WSS-ENC-SADP(WSS-COR-ENCA) TO WSS-SGV-INSO-V(WSS-J).
           MOVE WSS-ENC-MONO(WSS-COR-ENCA) TO WSS-VAL-CRED-V(WSS-J).
           MOVE WSS-ENC-TOPC(WSS-COR-ENCA) TO WSS-COD-COOC-V(WSS-J).
           MOVE WSS-ENC-FECC(WSS-COR-ENCA) TO WSS-FEC-DISM IN CPC-VARI.
           MOVE WSS-NUM-SDIS IN CPC-VARI TO WSS-NUM-SCUR-V(WSS-J).
           MOVE WSS-NUM-ADIS IN CPC-VARI TO WSS-NUM-ACUR-V(WSS-J).
           MOVE WSS-NUM-MDIS IN CPC-VARI TO WSS-NUM-MCUR-V(WSS-J).
           MOVE WSS-NUM-DDIS IN CPC-VARI TO WSS-NUM-DCUR-V(WSS-J).

       FIN-CRG-VEC-CPC.
           EXIT.

       CLR-CPC-VEC SECTION.
       INI-CLR-CPC-VEC.
           MOVE SPACES TO WSS-CAI-IOPC-V(WSS-J).
           MOVE ZEROES TO WSS-IIC-IOPC-V(WSS-J).
           MOVE SPACES TO WSS-COD-COOC-V(WSS-J).
           MOVE SPACES TO WSS-IND-CART-V(WSS-J).
           MOVE SPACES TO WSS-IND-CJUD-V(WSS-J).
           MOVE SPACES TO WSS-IND-ACEL-V(WSS-J).
           MOVE ZEROES TO WSS-NUM-AGNO-V(WSS-J).
           MOVE SPACES TO WSS-VAL-CRED-ALF-V(WSS-J).
           MOVE SPACES TO WSS-IND-CIMP-ALF-V(WSS-J).
           MOVE ZEROES TO WSS-FEC-FCUR-V(WSS-J).
           MOVE SPACES TO WSS-SGV-COBR-ALF-V(WSS-J).
           MOVE SPACES TO WSS-SGV-MPAR-ALF-V(WSS-J).
           MOVE SPACES TO WSS-IND-SDEU-V(WSS-J).
           MOVE SPACES TO WSS-SGV-TINT-ALF-V(WSS-J).
           MOVE SPACES TO WSS-SGV-INSO-ALF-V(WSS-J).
       FIN-CLR-CPC-VEC.
           EXIT.

       PUT-TAB-ASC SECTION.
       INI-PUT-TAB-ASC.
           MOVE SPACES TO MSG-COD-MENS.
           MULTIPLY SCR-NUM-PANT BY WSS-IMAX GIVING QUE-NITM.
           MOVE 0 TO FRM-IFLD.
       LUP-PUT-TAB-ASC.
           ADD 1              TO QUE-NITM.
           MOVE CPC-NOM-TSCPC TO QUE-COLA.
           MOVE CPC-LEN-TSCPC TO QUE-LITM.
           MOVE QUE-GET       TO QUE-CMND.
           PERFORM GNS-PRO-QUE.
           IF QUE-STAT NOT = QUE-STAT-OKS
               IF FRM-IFLD = 0
                   MOVE 'CPCTABNONXT' TO MSG-COD-MENS
                   GO TO FIN-PUT-TAB-ASC
               ELSE
                   GO TO FIN-PUT-TAB-ASC.
           ADD 1 TO FRM-IFLD.
           MOVE QUE-ITEM TO FRM-CAI-IOPC-IDX(FRM-IFLD).
           IF FRM-IFLD < WSS-IMAX
               GO TO LUP-PUT-TAB-ASC.
       FIN-PUT-TAB-ASC.
           IF FRM-IFLD > 0 AND FRM-IFLD < WSS-IMAX
               ADD 1 FRM-IFLD GIVING WSS-I
               PERFORM CLR-FRM VARYING WSS-I FROM WSS-I BY 1
                                 UNTIL WSS-I > WSS-IMAX.
           IF FRM-IFLD > 0
               ADD 1 TO SCR-NUM-PANT.
           IF FRM-IFLD = WSS-IMAX
               ADD 1              TO QUE-NITM
               MOVE CPC-NOM-TSCPC TO QUE-COLA
               MOVE CPC-LEN-TSCPC TO QUE-LITM
               MOVE QUE-GET       TO QUE-CMND
               PERFORM GNS-PRO-QUE
               IF QUE-STAT = QUE-STAT-OKS
                   MOVE 'TAB'        TO MSG-COD-SIST
                   MOVE 'CPCTABDMAS' TO MSG-COD-MENS.
       EXT-PUT-TAB-ASC.
           EXIT.

       CLR-FRM SECTION.
       INI-CLR-FRM.
           MOVE SPACES TO FRM-CAI-IOPC IN CPC-FLD(WSS-I).
           MOVE ZEROES TO FRM-IIC-IOPC IN CPC-FLD(WSS-I).
           MOVE SPACES TO FRM-IND-SDEU IN CPC-FLD(WSS-I).
           MOVE SPACES TO FRM-IND-CART IN CPC-FLD(WSS-I).
           MOVE ZEROES TO FRM-NUM-AGNO IN CPC-FLD(WSS-I).
           MOVE SPACES TO FRM-IND-CJUD IN CPC-FLD(WSS-I).
           MOVE SPACES TO FRM-IND-ACEL IN CPC-FLD(WSS-I).
           MOVE ZEROES TO FRM-IND-CIMP IN CPC-FLD(WSS-I).
           MOVE ZEROES TO FRM-SGV-COBR IN CPC-FLD(WSS-I).
           MOVE ZEROES TO FRM-SGV-MPAR IN CPC-FLD(WSS-I).
           MOVE ZEROES TO FRM-SGV-TINT IN CPC-FLD(WSS-I).
           MOVE ZEROES TO FRM-SGV-INSO IN CPC-FLD(WSS-I).
           MOVE ZEROES TO FRM-VAL-CRED IN CPC-FLD(WSS-I).
           MOVE SPACES TO FRM-COD-COOC IN CPC-FLD(WSS-I).
           MOVE ZEROES TO FRM-NUM-SCUR IN CPC-FLD(WSS-I).
           MOVE ZEROES TO FRM-NUM-ACUR IN CPC-FLD(WSS-I).
           MOVE ZEROES TO FRM-NUM-MCUR IN CPC-FLD(WSS-I).
           MOVE ZEROES TO FRM-NUM-DCUR IN CPC-FLD(WSS-I).
       FIN-CLR-FRM.
           EXIT.

       PUT-TAB-DSC SECTION.
       INI-PUT-TAB-DSC.
           MOVE SPACES TO MSG-COD-MENS.
           IF SCR-NUM-PANT = 1
               MOVE 'CPCTABNOPRV' TO MSG-COD-MENS
               GO TO EXT-PUT-TAB-DSC.

           SUBTRACT 1 FROM SCR-NUM-PANT GIVING QUE-NITM.
           MULTIPLY QUE-NITM BY WSS-IMAX GIVING QUE-NITM.
           ADD 1 TO QUE-NITM.
           ADD 1 WSS-IMAX GIVING FRM-IFLD.
       LUP-PUT-TAB-DSC.
           SUBTRACT  1 FROM QUE-NITM.
           MOVE CPC-NOM-TSCPC TO QUE-COLA
           MOVE CPC-LEN-TSCPC TO QUE-LITM
           MOVE QUE-GET       TO QUE-CMND.
           PERFORM GNS-PRO-QUE.
           IF QUE-STAT NOT = QUE-STAT-OKS
               IF FRM-IFLD > WSS-IMAX
                   MOVE 'CPCTABNOPRV' TO MSG-COD-MENS
                   GO TO FIN-PUT-TAB-DSC
               ELSE
                   GO TO FIN-PUT-TAB-DSC.
           SUBTRACT 1 FROM FRM-IFLD.
           MOVE QUE-ITEM TO FRM-CAI-IOPC-IDX(FRM-IFLD).
           IF FRM-IFLD > 1
               GO TO LUP-PUT-TAB-DSC.
       FIN-PUT-TAB-DSC.

           IF FRM-IFLD NOT > WSS-IMAX AND FRM-IFLD > 1
               SUBTRACT 1 FROM FRM-IFLD GIVING WSS-I
               PERFORM CLR-FRM VARYING WSS-I FROM WSS-I BY -1
                                 UNTIL WSS-I < 1.

           IF FRM-IFLD NOT > WSS-IMAX
               SUBTRACT 1 FROM SCR-NUM-PANT
               MOVE 'TAB'        TO MSG-COD-SIST
               MOVE 'CPCTABDMAS' TO MSG-COD-MENS.
       EXT-PUT-TAB-DSC.
           EXIT.

       SCRL-TAB-CPC SECTION.
       INI-SCRL-TAB-CPC.
           MOVE SPACES TO MSG-COD-MENS.

           IF FRM-FFLD = FRM-FFLD-PF6
               PERFORM PUT-TAB-ASC
           ELSE
               PERFORM PUT-TAB-DSC.
           IF MSG-COD-MENS > SPACES
               MOVE 'TAB' TO MSG-COD-SIST
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MEN2.
       FIN-SCRL-TAB-CPC.
           EXIT.

       PUT-TAB SECTION.
       INI-PUT-TAB.
           MOVE CPC-NOM-TSCPC     TO QUE-COLA.
           MOVE QUE-DEL           TO QUE-CMND.
           PERFORM GNS-PRO-QUE.

           MOVE CPC-NOM-TSCPC-MAS TO QUE-COLA.
           MOVE QUE-DEL           TO QUE-CMND.
           PERFORM GNS-PRO-QUE.

           MOVE 1 TO SCR-NUM-PANT.
           MOVE SPACES TO CPC-VEC-TS.
           MOVE LOW-VALUES TO WSS-COD-CTAB-IDX-FRM.
      *
           MOVE 1 TO FRM-IFLD.
           MOVE ZEROES  TO WSS-NITM IN CPC-PANT.

           MOVE 1 TO WSS-F IN CPC-PANT.
       LUP-PUT-TAB.
           IF WSS-F IN CPC-PANT > WSS-FMAX IN CPC-PANT
              GO TO FIN-PUT-TAB.
           IF WSS-CAI-IOPC-V(WSS-F) > SPACES
              PERFORM PUT-TAB-CPC
              PERFORM PUT-CPC-QUE
              PERFORM SET-FRM-IFLD
           ELSE
           IF FRM-IFLD = 1 AND WSS-F = 1
              MOVE 'TAB' TO MSG-COD-SIST
              MOVE 'CPC    NEX' TO MSG-COD-MENS
              PERFORM GET-MSG
              MOVE MSG-GLS-DESC TO FRM-MENS
              MOVE '00' TO FIO-STAT
      *       MOVE 'S' TO SCR-IERR
              GO TO FIN-PUT-TAB
           ELSE
              MOVE '00' TO FIO-STAT
              GO TO FIN-PUT-TAB.

           ADD 1 TO WSS-F IN CPC-PANT.
           GO TO LUP-PUT-TAB.
       FIN-PUT-TAB.
           MOVE 1                  TO QUE-NITM.
           MOVE CPC-LEN-TSCPC-MAS  TO QUE-LITM.
           MOVE CPC-NOM-TSCPC-MAS  TO QUE-COLA.

           IF WSS-NITM > WSS-NITMMAX
              MOVE 'S'           TO CPC-MAS-IND-HMAS
           ELSE
              MOVE 'N'           TO CPC-MAS-IND-HMAS.

           MOVE WSS-NITM         TO WSS-NUM-ICUR.
           MOVE WSS-NUM-ICUR     TO WSS-NUM-ICUR-EDT.
           MOVE WSS-NUM-ICUR-EDT TO WSS-NUM-ICUR-ALF.
           MOVE WSS-NUM-ICUR-ALF TO CPC-MAS-NUM-TOCC.
           MOVE CPC-MAS-ITEM     TO QUE-ITEM.
           MOVE QUE-PUT          TO QUE-CMND.
           PERFORM GNS-PRO-QUE.
           IF WSS-NITM > WSS-IMAX
               MOVE 'TAB' TO MSG-COD-SIST
               MOVE 'CPCTABDMAS' TO MSG-COD-MENS
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MEN2.
       EXT-PUT-TAB.
           EXIT.

       PUT-TAB-CPC SECTION.
       INI-PUT-TAB-CPC.
           PERFORM CLR-WSS.

           MOVE WSS-CAI-IOPC-V(WSS-F) TO WSS-CAI-IOPC-CPC IN CPC-PANT.
           MOVE WSS-IIC-IOPC-V(WSS-F) TO WSS-IIC-IOPC-CPC IN CPC-PANT.
           MOVE WSS-COD-COOC-V(WSS-F) TO WSS-COD-COOC-CPC IN CPC-PANT.
           MOVE WSS-IND-CART-V(WSS-F) TO WSS-IND-CART-CPC IN CPC-PANT.
           MOVE WSS-IND-CJUD-V(WSS-F) TO WSS-IND-CJUD-CPC IN CPC-PANT.
           MOVE WSS-IND-ACEL-V(WSS-F) TO WSS-IND-ACEL-CPC IN CPC-PANT.
           MOVE WSS-NUM-AGNO-V(WSS-F) TO WSS-NUM-AGNO-CPC IN CPC-PANT.
           MOVE WSS-VAL-CRED-V(WSS-F) TO WSS-VAL-CRED-CPC IN CPC-PANT.
           MOVE WSS-IND-CIMP-V(WSS-F) TO WSS-IND-CIMP-CPC IN CPC-PANT.
           MOVE WSS-FEC-FCUR-V(WSS-F) TO WSS-FEC-FCUR-CPC IN CPC-PANT.
           MOVE WSS-SGV-COBR-V(WSS-F) TO WSS-SGV-COBR-CPC IN CPC-PANT.
           MOVE WSS-SGV-MPAR-V(WSS-F) TO WSS-SGV-MPAR-CPC IN CPC-PANT.
           MOVE WSS-IND-SDEU-V(WSS-F) TO WSS-IND-SDEU-CPC IN CPC-PANT.
           MOVE WSS-SGV-TINT-V(WSS-F) TO WSS-SGV-TINT-CPC IN CPC-PANT.
           MOVE WSS-SGV-INSO-V(WSS-F) TO WSS-SGV-INSO-CPC IN CPC-PANT.

           MOVE WSS-CAI-IOPC-CPC IN CPC-PANT TO WSS-CAI-IOPC-FRM.
           MOVE WSS-IIC-IOPC-CPC IN CPC-PANT TO WSS-IIC-IOPC-FRM.
           MOVE WSS-COD-COOC-CPC IN CPC-PANT TO WSS-COD-COOC-FRM.
           MOVE WSS-IND-CART-CPC IN CPC-PANT TO WSS-IND-CART-FRM.
           MOVE WSS-IND-CJUD-CPC IN CPC-PANT TO WSS-IND-CJUD-FRM.
           MOVE WSS-IND-ACEL-CPC IN CPC-PANT TO WSS-IND-ACEL-FRM.
           MOVE WSS-NUM-AGNO-CPC IN CPC-PANT TO WSS-NUM-AGNO-FRM.
           MOVE WSS-VAL-CRED-CPC IN CPC-PANT TO WSS-VAL-CRED-FRM.
           MOVE WSS-IND-CIMP-CPC IN CPC-PANT TO WSS-IND-CIMP-FRM.
           MOVE WSS-FEC-FCUR-CPC IN CPC-PANT TO WSS-FEC-FCUR-FRM.
           MOVE WSS-SGV-COBR-CPC IN CPC-PANT TO WSS-SGV-COBR-FRM.
           MOVE WSS-SGV-MPAR-CPC IN CPC-PANT TO WSS-SGV-MPAR-FRM.
           MOVE WSS-IND-SDEU-CPC IN CPC-PANT TO WSS-IND-SDEU-FRM.
           MOVE WSS-SGV-TINT-CPC IN CPC-PANT TO WSS-SGV-TINT-FRM.
           MOVE WSS-SGV-INSO-CPC IN CPC-PANT TO WSS-SGV-INSO-FRM.

           IF FRM-IFLD > WSS-IMAX
              GO TO FIN-PUT-TAB-CPC.

           MOVE WSS-CAI-IOPC-V(WSS-F) TO
                               FRM-CAI-IOPC IN CPC-FLD(FRM-IFLD).
           MOVE WSS-IIC-IOPC-V(WSS-F) TO
                               FRM-IIC-IOPC IN CPC-FLD(FRM-IFLD).
           MOVE WSS-COD-COOC-V(WSS-F) TO
                               FRM-COD-COOC IN CPC-FLD(FRM-IFLD).
           MOVE WSS-IND-CART-V(WSS-F) TO
                               FRM-IND-CART IN CPC-FLD(FRM-IFLD).
           MOVE WSS-IND-CJUD-V(WSS-F) TO
                               FRM-IND-CJUD IN CPC-FLD(FRM-IFLD).
           MOVE WSS-IND-ACEL-V(WSS-F) TO
                               FRM-IND-ACEL IN CPC-FLD(FRM-IFLD).
           MOVE WSS-NUM-AGNO-V(WSS-F) TO
                               FRM-NUM-AGNO IN CPC-FLD(FRM-IFLD).
           MOVE WSS-VAL-CRED-V(WSS-F) TO
                               FRM-VAL-CRED IN CPC-FLD(FRM-IFLD).
           MOVE WSS-IND-CIMP-V(WSS-F) TO
                               FRM-IND-CIMP IN CPC-FLD(FRM-IFLD).
           MOVE WSS-FEC-FCUR-V(WSS-F) TO
                               FRM-FEC-FCUR IN CPC-FLD(FRM-IFLD).
           MOVE WSS-SGV-COBR-V(WSS-F) TO
                               FRM-SGV-COBR IN CPC-FLD(FRM-IFLD).
           MOVE WSS-SGV-MPAR-V(WSS-F) TO
                               FRM-SGV-MPAR IN CPC-FLD(FRM-IFLD).
           MOVE WSS-IND-SDEU-V(WSS-F) TO
                               FRM-IND-SDEU IN CPC-FLD(FRM-IFLD).
           MOVE WSS-SGV-TINT-V(WSS-F) TO
                               FRM-SGV-TINT IN CPC-FLD(FRM-IFLD).
           MOVE WSS-SGV-INSO-V(WSS-F) TO
                               FRM-SGV-INSO IN CPC-FLD(FRM-IFLD).

       FIN-PUT-TAB-CPC.
           EXIT.

       CLR-WSS SECTION.
       INI-CLR-WSS.

           MOVE SPACES TO WSS-CAI-IOPC-CPC IN CPC-PANT.
           MOVE ZEROES TO WSS-IIC-IOPC-CPC IN CPC-PANT.
           MOVE SPACES TO WSS-COD-COOC-CPC IN CPC-PANT.
           MOVE SPACES TO WSS-IND-CART-CPC IN CPC-PANT.
           MOVE SPACES TO WSS-IND-CJUD-CPC IN CPC-PANT.
           MOVE SPACES TO WSS-IND-ACEL-CPC IN CPC-PANT.
           MOVE ZEROES TO WSS-NUM-AGNO-CPC IN CPC-PANT.
           MOVE ZEROES TO WSS-VAL-CRED-CPC IN CPC-PANT.
           MOVE ZEROES TO WSS-IND-CIMP-CPC IN CPC-PANT.
           MOVE ZEROES TO WSS-FEC-FCUR-CPC IN CPC-PANT.
           MOVE ZEROES TO WSS-SGV-COBR-CPC IN CPC-PANT.
           MOVE ZEROES TO WSS-SGV-MPAR-CPC IN CPC-PANT.
           MOVE SPACES TO WSS-IND-SDEU-CPC IN CPC-PANT.
           MOVE ZEROES TO WSS-SGV-TINT-CPC IN CPC-PANT.
           MOVE ZEROES TO WSS-SGV-INSO-CPC IN CPC-PANT.

           IF SCR-OFRM-SRV
               PERFORM CLR-FRM-MTX.
       FIN-CLR-WSS.
           EXIT.

       CLR-FRM-MTX SECTION.
       INI-CLR-FRM-MTX.

           MOVE SPACES TO FRM-CAI-IOPC IN CPC-FLD(1).
           MOVE ZEROES TO FRM-IIC-IOPC IN CPC-FLD(1).
           MOVE SPACES TO FRM-COD-COOC IN CPC-FLD(1).
           MOVE SPACES TO FRM-IND-CART IN CPC-FLD(1).
           MOVE SPACES TO FRM-IND-CJUD IN CPC-FLD(1).
           MOVE SPACES TO FRM-IND-ACEL IN CPC-FLD(1).
           MOVE ZEROES TO FRM-NUM-AGNO IN CPC-FLD(1).
           MOVE ZEROES TO FRM-VAL-CRED IN CPC-FLD(1).
           MOVE ZEROES TO FRM-IND-CIMP IN CPC-FLD(1).
           MOVE ZEROES TO FRM-FEC-FCUR IN CPC-FLD(1).
           MOVE ZEROES TO FRM-SGV-COBR IN CPC-FLD(1).
           MOVE ZEROES TO FRM-SGV-MPAR IN CPC-FLD(1).
           MOVE SPACES TO FRM-IND-SDEU IN CPC-FLD(1).
           MOVE ZEROES TO FRM-SGV-TINT IN CPC-FLD(1).
           MOVE ZEROES TO FRM-SGV-INSO IN CPC-FLD(1).

       FIN-CLR-FRM-MTX.
           EXIT.

       PUT-CPC-QUE SECTION.
       INI-PUT-CPC-QUE.
           PERFORM PRO-FLD-QUE.
           ADD 1 TO WSS-NITM.
           MOVE CPC-NOM-TSCPC    TO QUE-COLA.
           MOVE CPC-LEN-TSCPC    TO QUE-LITM.
           MOVE WSS-NITM         TO QUE-NITM.
           MOVE SPACES           TO QUE-ITEM.
           IF SCR-OFRM-SRV
              MOVE WSS-VAL-CRED-V(WSS-F) TO FRM-VAL-CRED-EDT IN CPC-EDT
              MOVE FRM-VAL-CRED-EDT IN CPC-EDT TO
                                     WSS-VAL-CRED-ALF-CPC
              MOVE WSS-SGV-COBR-V(WSS-F) TO FRM-SGV-COBR-EDT IN CPC-EDT
              MOVE FRM-SGV-COBR-EDT IN CPC-EDT TO
                                     WSS-SGV-COBR-ALF-CPC
              MOVE WSS-SGV-MPAR-V(WSS-F) TO FRM-SGV-MPAR-EDT IN CPC-EDT
              MOVE FRM-SGV-MPAR-EDT IN CPC-EDT TO
                                     WSS-SGV-MPAR-ALF-CPC
              MOVE WSS-SGV-TINT-V(WSS-F) TO FRM-SGV-TINT-EDT IN CPC-EDT
              MOVE FRM-SGV-TINT-EDT IN CPC-EDT TO
                                     WSS-SGV-TINT-ALF-CPC
              MOVE WSS-SGV-INSO-V(WSS-F) TO FRM-SGV-INSO-EDT IN CPC-EDT
              MOVE FRM-SGV-INSO-EDT IN CPC-EDT TO
                                     WSS-SGV-INSO-ALF-CPC
              MOVE CPC-VEC-TS    TO QUE-ITEM
           ELSE
              MOVE WSS-COD-CTAB-IDX-FRM  TO QUE-ITEM.
           MOVE QUE-PUT  TO QUE-CMND.
           PERFORM GNS-PRO-QUE.
       FIN-PUT-CPC-QUE.
           EXIT.

       SET-FRM-IFLD SECTION.
       INI-SET-FRM-IFLD.
           IF SCR-OFRM-SRV
                MOVE 1 TO FRM-IFLD
           ELSE
                ADD 1 TO FRM-IFLD.
       FIN-SET-FRM-IFLD.
           EXIT.

       PRO-FLD-QUE SECTION.
       INI-PRO-FLD-QUE.
           MOVE 'P' TO WSS-CAI-IOPC-ATR-CPC.
           MOVE 'P' TO WSS-IIC-IOPC-ATR-CPC.
           MOVE 'P' TO WSS-COD-COOC-ATR-CPC.
           MOVE 'P' TO WSS-IND-CART-ATR-CPC.
           MOVE 'P' TO WSS-IND-CJUD-ATR-CPC.
           MOVE 'P' TO WSS-IND-ACEL-ATR-CPC.
           MOVE 'P' TO WSS-NUM-AGNO-ATR-CPC.
           MOVE 'P' TO WSS-FEC-FTRN-ATR-CPC.
           MOVE 'P' TO WSS-IND-CIMP-ATR-CPC.
           MOVE 'P' TO WSS-FEC-FCUR-ATR-CPC.
           MOVE 'P' TO WSS-SGV-COBR-ATR-CPC.
           MOVE 'P' TO WSS-SGV-MPAR-ATR-CPC.
           MOVE 'P' TO WSS-IND-SDEU-ATR-CPC.
           MOVE 'P' TO WSS-SGV-TINT-ATR-CPC.
           MOVE 'P' TO WSS-SGV-INSO-ATR-CPC.
       FIN-PRO-FLD-QUE.
           EXIT.

       BUS-ANO-LIC SECTION.
       INI-BUS-ANO-LIC.

           MOVE 'COL'               TO TAB-COD-SIST FIO-SIST.
           MOVE 'VSN'               TO TAB-COD-TTAB IN TAB.
           MOVE 'LEETABCEN'         TO TAB-COD-CTAB IN TAB.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM GNS-FIO-TAB.
           IF FIO-STAT-OKS AND TAB-IND-VIGE IN TAB = 'S'
               GO TO LEE-TAB-CEN.

       LEE-ARC-LIC.
           MOVE SPACES TO PMC.

           MOVE DBC-NUM-ICLI IN DBC TO WSS-NUM-ICLI IN CPC-VARI.
           MOVE DBC-VRF-ICLI IN DBC TO WSS-DIG-VRF IN CPC-VARI.
           MOVE WSS-KEY-LIC IN CPC-VARI TO PMC-IDC-RALU IN PMC.
           MOVE FIO-GET-NLS TO FIO-CMND.
           PERFORM COL-FIO-PMC.
           IF NOT (FIO-STAT-OKS AND
              WSS-NUM-ICLI IN CPC-VARI = PMC-NUM-RALU IN PMC AND
              WSS-DIG-VRF IN CPC-VARI = PMC-VRF-DALU IN PMC)
               MOVE ZEROES TO WSS-ENC-ALIC(WSS-COR-ENCA)
               MOVE FIO-END-BRW TO FIO-CMND
               PERFORM COL-FIO-PMC
               GO TO FIN-BUS-ANO-LIC.

           MOVE PMC-ANO-ALIC IN PMC TO WSS-ENC-ALIC(WSS-COR-ENCA).
           MOVE FIO-END-BRW TO FIO-CMND.
           PERFORM COL-FIO-PMC.
           GO TO FIN-BUS-ANO-LIC.

       LEE-TAB-CEN.
           MOVE SPACES TO CEN.
           MOVE SPACES                    TO CEN-GLS-FLAG IN CEN.
           MOVE 'CAE'                     TO CEN-COD-ENTI IN CEN.
           MOVE DBC-CIC-ICLI IN DBC       TO CEN-CIC-IENT IN CEN.
           MOVE ZEROES                    TO CEN-FEC-FENT IN CEN.
           MOVE SPACES                    TO CEN-COD-RENT IN CEN.
           MOVE 999                       TO CEN-NUM-IENT IN CEN.
           MOVE SPACES                    TO CEN-COD-CCSE IN CEN.
           MOVE SPACES                    TO CEN-CIC-ISEN IN CEN.
           MOVE ZEROES                    TO CEN-NUM-ISEN IN CEN.
           MOVE FIO-GET-LEQ               TO FIO-CMND.
           PERFORM COL-FIO-CEN.
           IF NOT (FIO-STAT-OKS AND
            DBC-CIC-ICLI IN DBC = CEN-CIC-IENT IN CEN AND
            CEN-COD-ENTI IN CEN = 'CAE')
               MOVE ZEROES TO WSS-ENC-ALIC(WSS-COR-ENCA)
               GO TO FIN-BUS-ANO-LIC.

           MOVE CEN-COD-COD1 IN CEN(3:4) TO WSS-ENC-ALIC(WSS-COR-ENCA).

      *
       FIN-BUS-ANO-LIC.
           EXIT.

      *<<<<

      *COPY GNSBFTAB.
       COPY GNSBFTAB REPLACING GNS-FIO-TAB BY GEN-FIO-TAB.
       GNS-FIO-TAB SECTION.
       INI-GNS-FIO-TAB.

           IF FIO-CMND = FIO-GET-KEY AND
              FIO-AKEY = SPACES
               MOVE SPACES TO WSS-IND-RESP IN WSS-VEC-CPC
               SET WS-TAB TO 1
               SEARCH WSS-VEC-TAB-BF
               AT END
                     MOVE 'N' TO WSS-IND-RESP IN WSS-VEC-CPC
               WHEN
                   (WSS-TAB-SIST(WS-TAB) = TAB-COD-SIST AND
                   WSS-TAB-TTAB(WS-TAB) = TAB-COD-TTAB IN TAB AND
                   WSS-TAB-CTAB(WS-TAB) = TAB-COD-CTAB IN TAB)
                    MOVE 'S' TO WSS-IND-RESP IN WSS-VEC-CPC
               END-SEARCH

               IF WSS-IND-RESP IN WSS-VEC-CPC = 'N'
                   IF WSS-VEC-TAB IN WSS-VEC-CPC <=
                                           WSS-MAX-VEC IN WSS-VEC-CPC
                       SET WS-TAB TO WSS-VEC-TAB IN WSS-VEC-CPC
                       MOVE TAB-COD-SIST TO WSS-TAB-SIST(WS-TAB)
                       MOVE TAB-COD-TTAB IN TAB TO WSS-TAB-TTAB(WS-TAB)
                       MOVE TAB-COD-CTAB IN TAB TO WSS-TAB-CTAB(WS-TAB)
                       PERFORM GEN-FIO-TAB
                       SET WS-TAB TO WSS-VEC-TAB IN WSS-VEC-CPC
                       MOVE TAB TO WSS-BR-TAB(WS-TAB)
                       MOVE FIO-STAT TO WSS-TAB-STAT(WS-TAB)
                       ADD 1 TO WSS-VEC-TAB IN WSS-VEC-CPC
                       GO TO FIN-GNS-FIO-TAB
                   ELSE
                       PERFORM GEN-FIO-TAB
                       GO TO FIN-GNS-FIO-TAB
               ELSE
                   MOVE WSS-BR-TAB(WS-TAB) TO TAB
                   MOVE WSS-TAB-STAT(WS-TAB) TO FIO-STAT
                   GO TO FIN-GNS-FIO-TAB
           ELSE
               PERFORM GEN-FIO-TAB.

       FIN-GNS-FIO-TAB.
           EXIT.
*% END
*% IF EOF
       GET-FHOY SECTION.
       INI-GET-FHOY.
           IF HOY-SHOY = ZEROES AND
              HOY-AHOY = ZEROES AND
              HOY-MHOY = ZEROES AND
              HOY-DHOY = ZEROES
               PERFORM GET-FHOY-HOY.
       END-GET-FHOY.
           EXIT.
      *<<<<
       COPY SGCBFDBC.
       COPY GNSBGCPT.
      *>>>>
       COPY COLIOPMC.
       COPY COLBFRDC.
       COPY COLBFOPC.
       COPY COLBFDLC.
       COPY GNSBVTAB.
       COPY GNSBVCOD.
       COPY GNSBBMSG.
       COPY SGCBFDCP.
       COPY SGCBFDCE.
       COPY GNSBPFEC.
       COPY COLBFPCP.
       COPY GNSBGPES.
       COPY GNSBFMSC.
       COPY COLBFICG.
       COPY COLBFROV.
       COPY COLBFRCV.
       COPY COLBFCAN.
       COPY COLBFITR.
       COPY COLBFTOC.
       COPY COLBFEVC.
       COPY COLBFVEN.
       COPY COLBFCYA.
       COPY COLBFDIC.
       COPY COLBFCXE.
       COPY COLBFCEN.
       COPY COLBFIXT.
      *COPY TABBFCAM.
       COPY TABBFCAM REPLACING TAB-FIO-CAM BY TAV-FIO-CAM.
       TAB-FIO-CAM SECTION.
       INI-TAB-FIO-CAM.

           IF FIO-CMND = FIO-GET-KEY
               MOVE SPACES TO WSS-IND-RESP IN WSS-VEC-CPC
               SET WS-CAM TO 1
               SEARCH WSS-VEC-CAM-BF
               AT END
                     MOVE 'N' TO WSS-IND-RESP IN WSS-VEC-CPC
               WHEN
                   (WSS-CAM-VCAM(WS-CAM) = CAM-COD-VCAM IN CAM(1) AND
                    WSS-CAM-VCA2(WS-CAM) = CAM-COD-VCAM IN CAM(2) AND
                    WSS-FEC-FCAM(WS-CAM) = CAM-FEC-FCAM IN CAM(1))
                    MOVE 'S' TO WSS-IND-RESP IN WSS-VEC-CPC
               END-SEARCH

               IF WSS-IND-RESP IN WSS-VEC-CPC = 'N'
                   IF WSS-VEC-CAM IN WSS-VEC-CPC <=
                                          WSS-MAX-VEC IN WSS-VEC-CPC
                       SET WS-CAM TO WSS-VEC-CAM IN WSS-VEC-CPC
                       MOVE CAM-COD-VCAM IN CAM(1) TO
                                                   WSS-CAM-VCAM(WS-CAM)
                       MOVE CAM-COD-VCAM IN CAM(2) TO
                                                   WSS-CAM-VCA2(WS-CAM)
                       MOVE CAM-FEC-FCAM IN CAM(1) TO
                                                   WSS-FEC-FCAM(WS-CAM)
                       SET WS-CAM TO WSS-VEC-CAM IN WSS-VEC-CPC
                       PERFORM TAV-FIO-CAM
                       MOVE CAM TO WSS-BR-CAM(WS-CAM)
                       MOVE FIO-STAT TO WSS-CAM-STAT(WS-CAM)
                       ADD 1 TO WSS-VEC-CAM IN WSS-VEC-CPC
                       GO TO FIN-TAB-FIO-CAM
                   ELSE
                       PERFORM TAV-FIO-CAM
                       GO TO FIN-TAB-FIO-CAM
               ELSE
                   MOVE WSS-BR-CAM(WS-CAM) TO CAM
                   MOVE WSS-CAM-STAT(WS-CAM) TO FIO-STAT
                   GO TO FIN-TAB-FIO-CAM
           ELSE
               PERFORM TAV-FIO-CAM.

       FIN-TAB-FIO-CAM.
           EXIT.
      *AFRI-INI 06-MAR-2012 MEJORAS CAE
       BUS-ULT-CAN-ORIG SECTION.
       INI-BUS-ULT-CAN-ORIG.
           MOVE 'S' TO WSS-IND-OKAY IN CPC-VARI.
           MOVE SPACES TO CAN.
           MOVE OPC-CIC-IOPC IN OPC TO CAN-CIC-IOPC IN CAN.
           MOVE 999 TO CAN-NUM-ICAN IN CAN.
           MOVE FIO-GET-LEQ TO FIO-CMND.
           PERFORM COL-FIO-CAN.
           IF NOT FIO-STAT-OKS OR
              OPC-CIC-IOPC IN OPC NOT = CAN-CIC-IOPC IN CAN
      *ES UN PROBLEMA SALDO CERO SIN CANCELACIONES OPERACION FUERA
               GO TO FIN-BUS-ULT-CAN-ORIG.

           IF CAN-MSC-STAT IN CAN NOT = 'A'
      *PROBLEMA OPERACION SALDO CERO Y ULTIMA CANCELACION NO ACTIVADA
      *OPERACION FUERA
               GO TO FIN-BUS-ULT-CAN-ORIG.

           IF (CAN-SGV-TPAG IN CAN < ZEROES OR
               CAN-SGV-DIFE IN CAN < ZEROES OR
               CAN-SGV-TREN IN CAN < ZEROES)
      *PROBLEMA OPERACION SALDO CERO Y ULTIMA CAN UNA REVERSA
      * OPERACION FUERA
               GO TO FIN-BUS-ULT-CAN-ORIG.

           IF CAN-MSC-CANC IN CAN NOT = 'RTT' AND 'RTE'
               GO TO FIN-BUS-ULT-CAN-ORIG.

           PERFORM VEO-CYA.
           IF WSS-IND-TRAS IN CPC-VARI NOT = 'S'
               GO TO FIN-BUS-ULT-CAN-ORIG.

           PERFORM BUSCA-ROV.
      *ES UN PROBLEMA LA OPERACION SE DEJA FUERA
           IF ROV-CIC-IOPC IN ROV = SPACES
               GO TO FIN-BUS-ULT-CAN-ORIG.

           MOVE ROV-CIC-IOPC IN ROV TO OPC-CIC-IOPC IN OPC.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM COL-FIO-OPC.
           IF NOT FIO-STAT-OKS
      *OPERACION PRODUCTO DE LA CANCELACION NO INGRESADA
               MOVE 'N' TO WSS-IND-OKAY IN CPC-VARI
               GO TO FIN-BUS-ULT-CAN-ORIG.

           IF OPC-MSC-STAT IN OPC NOT = 'A'
               MOVE 'N' TO WSS-IND-OKAY IN CPC-VARI
               GO TO FIN-BUS-ULT-CAN-ORIG.

           IF OPC-VAL-SCRE IN OPC > ZEROES
               MOVE 'N' TO WSS-IND-OKAY IN CPC-VARI
               GO TO FIN-BUS-ULT-CAN-ORIG.

           IF OPC-VAL-SCRE IN OPC NOT > ZEROES
               GO TO INI-BUS-ULT-CAN-ORIG.


       FIN-BUS-ULT-CAN-ORIG.
           EXIT.
      *AFRI-FIN 06-MAR-2012 MEJORAS CAE
       COPY TABBFOFI.
       COPY COLBGVEN.
       COPY COLBGCPC.
       COPY COLBGINT.
       COPY COLB6CAN.
       COPY TABBKTXC.
       COPY GNSBGCAM.
       COPY COLBGPCP.
       COPY GNSBBTAB.
*% END
