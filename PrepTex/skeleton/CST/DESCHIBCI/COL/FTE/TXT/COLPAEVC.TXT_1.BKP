*%! Codigo adicional para progarma
*% HDR_CST = FALSE
*% HDR_EVC = TRUE
*%! PGM_PTC = TRUE
*% NO_TIENE_TIMESTAMP = TRUE
*% IF PGM_CHI AND PGM_BCI
*%     PGM_PTC = TRUE
*% END
*% IF CMT_ID
*% IF PGM_PU
      *==============================================================
      * MANTENCIONES
      *==============================================================
      * OBJETIVO: Setear dia de ven segun tioaux en coltab
      * PROYECTO: BGT con fecha de ven intereses trimestral, dma 15
      * FECHA   : Agosto 2013
      * AUTOR   : OGB
      * ETIQUETA: *CIMA-INI/BGT DIA VEN/OGB/08-2013
      *==============================================================
      * OBJETIVO: Validar fechas para bgt menores a 1 trimestre
      * PROYECTO: Cambiar fecha vcto a bgt
      * FECHA   : Diciembre 2014
      * AUTOR   : OGB
      * ETIQUETA: *OGB-INI 22-DIC-2014 BGT DIA MENOR A 1 TRIMESTRE
      *==============================================================
      *==============================================================
      * OBJETIVO: Validar Vcto. de BGT mayor y/o igual a un trimestre
      * PROYECTO: Corregir Fechas de Vencimientos para BGT
      * FECHA   : Agosto 2015
      * AUTOR   : BEE-PVC
      * ETIQUETA: *PVC-INI 19-AGO-2015 VCTO MAYOR-IGUAL DIA TRIM. BGT
      *==============================================================
*% END
*% END
*% IF FIN_SCR_VARI
      *<<<< FIN_SCR_VARI
      *ISP DEBE QUEDAR PRIMERO QUE LABEL FIN_SCR_VARI DE PROG ANTIGUO
       COPY COLWGENG.
      *>>>>
*% END
*% IF WSS
      *<<<< WSS
       01  WSS-VARI.
      *DAD ini 22-MAR-1991 
           03  WSS-VAL-PESO                            PIC 9(11).
      *DAD fin 22-MAR-1991 
      *ALD/19-JUL-1988
           03  WSS-MEN1.
               05  FILLER               VALUE SPACES PIC X(01).
               05  WSS-SGV-VAL1-EDT     PIC --------------,---.
               05  WSS-GLS-GUI1                      PIC X(01).
               05  WSS-SGV-VAL2-EDT     PIC --------------,---.
           03  WSS-MEN2.
               05  FILLER               VALUE SPACES PIC X(01).
               05  WSS-NUM-VAL1-EDT                   PIC ----.
               05  FILLER               VALUE SPACES PIC X(01).
               05  WSS-IND-DMA1                      PIC X(01).
               05  FILLER               VALUE SPACES PIC X(01).
               05  WSS-GLS-GUI2                      PIC X(01).
               05  FILLER               VALUE SPACES PIC X(01).
               05  WSS-NUM-VAL2-EDT                   PIC ----.
               05  FILLER               VALUE SPACES PIC X(01).
               05  WSS-IND-DMA2                      PIC X(01).
           03  WSS-NUM-NFEC             VALUE 0      PIC 9(03).
           03  WSS-FEC-NFE1.
               05  WSS-NUM-DFE1         VALUE 0      PIC 9(02).
               05  WSS-NUM-MFE1         VALUE 0      PIC 9(02).
               05  WSS-NUM-SFE1         VALUE 0      PIC 9(02).
               05  WSS-NUM-AFE1         VALUE 0      PIC 9(02).
           03  WSS-FEC-NFE2.
               05  WSS-NUM-DFE2         VALUE 0      PIC 9(02).
               05  WSS-NUM-MFE2         VALUE 0      PIC 9(02).
               05  WSS-NUM-SFE2         VALUE 0      PIC 9(02).
               05  WSS-NUM-AFE2         VALUE 0      PIC 9(02).
           03  WSS-FEC-NFE3.
               05  WSS-NUM-DFE3         VALUE 0      PIC 9(02).
               05  WSS-NUM-MFE3         VALUE 0      PIC 9(02).
               05  WSS-NUM-SFE3         VALUE 0      PIC 9(02).
               05  WSS-NUM-AFE3         VALUE 0      PIC 9(02).
      *

           03  WSS-ICOR                 VALUE 0      PIC 9(01).
               88 NO-ASIGNE-CORRELATIVO VALUE 0.
           03  WSS-NUM-JUL              VALUE 0      PIC 9(06).
           03  WSS-NUM-DVDO             VALUE 0      PIC 9(06).
           03  WSS-NUM-VIGU             VALUE 0      PIC 9(06).
           03  WSS-NUM-REMA             VALUE 0      PIC 9(06).
           03  WSS-FEC-FPVC.
               05  WSS-NUM-DPVC         VALUE 0      PIC 9(02).
               05  WSS-NUM-MPVC         VALUE 0      PIC 9(02).
               05  WSS-NUM-SPVC         VALUE 0      PIC 9(02).
               05  WSS-NUM-APVC         VALUE 0      PIC 9(02).
           03  WSS-FEC-FUVC.
               05  WSS-NUM-DUVC         VALUE 0      PIC 9(02).
               05  WSS-NUM-MUVC         VALUE 0      PIC 9(02).
               05  WSS-NUM-SUVC         VALUE 0      PIC 9(02).
               05  WSS-NUM-AUVC         VALUE 0      PIC 9(02).
           03  WSS-FEC-FCO1.
               05  WSS-NUM-SCO1         VALUE 0      PIC 9(02).
               05  WSS-NUM-ACO1         VALUE 0      PIC 9(02).
               05  WSS-NUM-MCO1         VALUE 0      PIC 9(02).
               05  WSS-NUM-DCO1         VALUE 0      PIC 9(02).
           03  WSS-FEC-FCO2.
               05  WSS-NUM-SCO2         VALUE 0      PIC 9(02).
               05  WSS-NUM-ACO2         VALUE 0      PIC 9(02).
               05  WSS-NUM-MCO2         VALUE 0      PIC 9(02).
               05  WSS-NUM-DCO2         VALUE 0      PIC 9(02).
           03  WSS-OPEC                 VALUE SPACES PIC X(08).
*% IF PGM_PU
      *CIMA-INI/BGT DIA VEN/OGB/08-2013
           03  WSS-DVC.
               05  WSS-NUM-DVCT                      PIC 9(02).
               05  FILLER               VALUE SPACES PIC X(58).
           03  WSS-CONS.
               05  WSS-GLS-SCOL         VALUE 'COL'  PIC X(03).
               05  WSS-GLS-TBGT         VALUE 'DVC'  PIC X(03).
               05  WSS-IND-SCTE         VALUE 'S'    PIC X(01).
               05  WSS-CT3              VALUE  03    PIC 9(02).
      *CIMA-FIN/BGT DIA VEN/OGB/08-2013
      *OGB-INI 22-DIC-2014 BGT DIA MENOR A 1 TRIMESTRE
           03  WSS-CT-1                 VALUE 1      PIC 9(01).
           03  WSS-FEC-FAXU.
               05 WSS-NUM-SAXU          VALUE 0      PIC 9(02).
               05 WSS-NUM-AAXU          VALUE 0      PIC 9(02).
               05 WSS-NUM-MAXU          VALUE 0      PIC 9(02).
               05 WSS-NUM-DAXU          VALUE 0      PIC 9(02).
           03  WSS-FEC-FAXE.
               05 WSS-NUM-SAXE          VALUE 0      PIC 9(02).
               05 WSS-NUM-AAXE          VALUE 0      PIC 9(02).
               05 WSS-NUM-MAXE          VALUE 0      PIC 9(02).
               05 WSS-NUM-DAXE          VALUE 0      PIC 9(02).
           03  WSS-IND-SBGT             VALUE ZEROES PIC 9(01).
           03  WSS-IND-BGTC             VALUE ZEROES PIC 9(01).
      *OGB-FIN 22-DIC-2014 BGT DIA MENOR A 1 TRIMESTRE
*% END
*% IF PGM_PQ
      *ISP INI 07-01-2005                                               
           03  WSS-IND-CORP           VALUE 'N'      PIC X(01).         
      *ISP FIN 07-01-2005                                               
*% END
       COPY SGCBRDBC.
       COPY COLBROPC.
       COPY COLBRDLC.
       COPY COLBRTOC.
       COPY COLBRCYA.
      *ALD/18-JUL-1988 
       COPY COLBRPOC.
       COPY COLBRPVC.
       COPY TABBRCAM.
      *
*% IF PGM_PQ
      *COPY GNSWGTSK.
      * ISP INI  28-JAN-2004 13:37:42                                   
       77  WSS-LOGN     VALUE 'N'                PIC X(01).             
       77  WSS-DBNM     VALUE ZEROES             PIC 9(03).             
       77  WSS-DBIM     VALUE ZEROES             PIC 9(02).             
       77  WSS-DBNP     VALUE ZEROES             PIC 9(03).             
       77  WSS-DBIP     VALUE ZEROES             PIC 9(02).             
       77  WSS-BUS-BDP  VALUE 'N'                PIC X(01).             
       77  WSS-ENC-IOPE VALUE 'N'                PIC X(01).             
      * ISP FIN  28-JAN-2004 13:37:42                                   
       COPY COLWGSTO.
       COPY GNSWGPES.
      *PTC ini
       COPY COLMXW01.
       COPY COLMXW05.
       COPY GNSWGQUE.
      *PTC fin
*% END
       COPY GNSWGCPT.
      *>>>>
*% END
*% IF WSS_DTC
      *<<<< WSS_DTC
      *ALD/18-JUL-1988
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-POC-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-PVC-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-CAM-REQA==.
      *
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-OPC-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-DLC-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-CYA-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-DBC-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-TOC-REQA==.
      *>>>>
*% END
*% IF FIN_SCR_VARI
      *<<<< FIN_SCR_VARI
       COPY GNSWGRQA REPLACING ==01  ADR-REQA== BY ==02  SCR-RQA1==.
      *>>>>
*% END
*% IF PFS_GET_CON OR PFS_GET_ACC OR PFS_SCR_GKEY
      *<<<< PFS_GET_CON OR PFS_GET_ACC OR PFS_SCR_GKEY
           IF NOT ( FRM-FFLD = FRM-FFLD-PF8 OR FRM-FFLD = FRM-FFLD-PF7 )
      *>>>>
*% END
*% IF PFS_SCR_GFLD
      *<<<< PFS_SCR_GFLD
           IF NOT ( ( SCR-CCPP = 'MOD' OR  SCR-CCPP = 'ACC' OR
                      SCR-CCPP = 'ELI'                      OR
                    ( SCR-CCPP = 'ACT' AND SCR-ACTU = SCR-ACTU-MOD ) )
                      AND ( FRM-FFLD = FRM-FFLD-PF8 OR
                            FRM-FFLD = FRM-FFLD-PF7 ) )
      *>>>>
*% END
*% IF PFS_SCR_MOD AND PGM_PU
      *>>>> PFS_SCR_MOD
           IF FRM-FFLD = FRM-FFLD-PF7 OR FRM-FFLD-PF8 OR                
                         FRM-FFLD-PF5 OR FRM-FFLD-PF6                   
               PERFORM XCT-PRGP.                                        
*% END
*% IF PFS_SCR_MOD AND PGM_PQ
      *<<<< PFS_SCR_MOD
           IF FRM-FFLD = FRM-FFLD-PF8 OR FRM-FFLD-PF7
               PERFORM RST-STAT
               PERFORM FND-SCR-KEY THRU FIN-SCR-KEY
               IF SCR-STAT NOT = SCR-STAT-ABT
                   PERFORM SCR-TRL
               ELSE
                   MOVE SPACES TO SCR-RQA1
                   PERFORM DESSCRTRL
                   GO TO FIN-SCR-MOD.
           MOVE SPACES TO SCR-RQA1.
      *>>>>
*% END
*% IF PFS_SCR_ELI
      *<<<< PFS_SCR_ELI
           IF FRM-FFLD = FRM-FFLD-PF8 OR FRM-FFLD-PF7
               PERFORM VAL-NUM-KEY-EVC
               PERFORM RST-STAT
               PERFORM FND-SCR-KEY THRU FIN-SCR-KEY
               IF SCR-STAT NOT = SCR-STAT-ABT
                   PERFORM SCR-TRL
               ELSE
                   MOVE SPACES TO SCR-RQA1
                   PERFORM DESSCRTRL
                   GO TO FIN-SCR-ELI.
           MOVE SPACES TO SCR-RQA1.
      *>>>>
*% END
*% IF PFS_SCR_ACT
      *<<<< PFS_SCR_ACT
           IF FRM-FFLD = FRM-FFLD-PF8 OR FRM-FFLD-PF7
               PERFORM RST-STAT
               PERFORM FND-SCR-KEY THRU FIN-SCR-KEY
               IF SCR-STAT NOT = SCR-STAT-ABT
                   PERFORM SCR-TRL
               ELSE
                   MOVE SPACES TO SCR-RQA1
                   PERFORM DESSCRTRL
                   GO TO FIN-SCR-ACT.
           MOVE SPACES TO SCR-RQA1.
      *>>>>
*% END
*% IF PFS_SCR_ACC
      *<<<< PFS_SCR_ACC
           IF FRM-FFLD = FRM-FFLD-PF8 OR FRM-FFLD-PF7
               PERFORM VAL-NUM-KEY-EVC
               PERFORM RST-STAT
               PERFORM FND-SCR-KEY THRU FIN-SCR-KEY
               IF SCR-STAT NOT = SCR-STAT-ABT
                   PERFORM SCR-TRL
               ELSE
                   MOVE SPACES TO SCR-RQA1
                   PERFORM DESSCRTRL
                   GO TO FIN-SCR-ACC.
           MOVE SPACES TO SCR-RQA1.
      *>>>>
*% END
*% IF FND_KEY
      *<<<< FND_KEY
      * ISP INI  28-JAN-2004 13:37:42                                   
           IF SCR-OFRM-SRV AND                                          
              SCR-CMND = 'CON'                                          
                PERFORM BUSCA-DBIM-DBIP.                                
      * ISP FIN  28-JAN-2004 13:37:42                                   
      * ISP INI  28-JAN-2004 13:37:42                                   
           IF SCR-OFRM-SRV AND                                          
              ( EVC-CAI-IOPC IN EVC-FLD > SPACES OR                     
                EVC-IIC-IOPC IN EVC-FLD > ZEROES ) AND                  
              SCR-CMND = 'CON'                                          
                 MOVE EVC-CAI-IOPC IN EVC-FLD TO                        
                      OPC-CAI-IOPC IN OPC                               
                 MOVE EVC-IIC-IOPC IN EVC-FLD TO                        
                      OPC-IIC-IOPC IN OPC                               
                 MOVE FIO-GET-KEY TO FIO-CMND                           
                 PERFORM COL-FIO-OPC                                    
                 IF NOT FIO-STAT-OKS                                    
                 IF WSS-BUS-BDP = 'N'                                   
                  MOVE 'S' TO WSS-BUS-BDP                               
                  IF WSS-DBIM > ZEROES AND                              
                     WSS-DBIP > ZEROES                                  
                       PERFORM INV-BD.                                  
      * ISP FIN  28-JAN-2004 13:37:42                                   
           PERFORM KEY-ALL-EVC.                                         
      *<<<< FND_KEY                                                     
           IF SCR-CCPP = 'ING'
               PERFORM BUS-COR-EVC
               GO TO CON-FND-KEY.
           IF FRM-FFLD = FRM-FFLD-PF7 OR FRM-FFLD-PF8
               PERFORM LEE-NXT-PRV
               IF FIO-STAT-OKS
                   PERFORM SCR-CLRA-EVC
                   GO TO CON-FND-KEY
               ELSE
      *ALD/16-JUL-1988
                   PERFORM CLR-FLD-EVC
      *            MOVE SPACES TO PGM-STAT
      * 
                   IF FRM-FFLD = FRM-FFLD-PF7
                       MOVE 'COL' TO MSG-COD-SIST
                       MOVE 'EVC    NOPRV' TO MSG-COD-MENS
                       PERFORM GET-MSG
                       MOVE MSG-GLS-DESC TO FRM-MENS
                       MOVE '00' TO FIO-STAT
                       MOVE SCR-STAT-CON TO SCR-STAT
                       GO TO FIN-FND-KEY
                   ELSE
                       MOVE 'COL' TO MSG-COD-SIST
                       MOVE 'EVC    NONXT' TO MSG-COD-MENS
                       PERFORM GET-MSG
                       MOVE MSG-GLS-DESC TO FRM-MENS
                       MOVE '00' TO FIO-STAT
                       MOVE SCR-STAT-CON TO SCR-STAT
                       GO TO FIN-FND-KEY.
           IF EVC-NUM-IEVC IN EVC NOT > ZEROES
               PERFORM BUS-COR-EVC.
       CON-FND-KEY.
      *>>>>
*% END
*% IF FIN_FND_KEY
      *<<<< FIN_FND_KEY
           IF SCR-CCPP = 'ACT' AND NO-ASIGNE-CORRELATIVO AND
              NOT FIO-STAT-OKS
               MOVE FIO-STAT-NEX TO FIO-STAT
               GO TO FIN-FND-KEY.
           IF NOT FIO-STAT-OKS
               MOVE '23' TO PGM-STAT-EVC
           ELSE
               MOVE '00' TO PGM-STAT-EVC.
           MOVE EVC-CAI-IOPC IN EVC TO OPC-CAI-IOPC IN OPC.
           MOVE EVC-IIC-IOPC IN EVC TO OPC-IIC-IOPC IN OPC.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM COL-FIO-OPC.
           IF NOT FIO-STAT-OKS
               MOVE 'COL' TO MSG-COD-SIST
               MOVE 'EVC    NOOPC' TO MSG-COD-MENS
               PERFORM GET-MSG

               MOVE MSG-GLS-DESC TO CPT-STR1
               MOVE MSG-GLS-DATA TO CPT-STR2
               PERFORM CPT-BLKS
               MOVE CPT-STRN     TO FRM-MENS

               MOVE '00' TO FIO-STAT
               MOVE SCR-STAT-CON TO SCR-STAT
               GO TO FIN-FND-KEY.
           MOVE '00' TO PGM-STAT-OPC.
           PERFORM PUT-OPC-EVC.

      *ALD/16-JUL-1988

           PERFORM KEY-PVC-EVC.


           IF PVC-CIC-IPVC IN PVC NOT > SPACES
      *PVG INI 06-AGO-2003                                              
              OR                                                        
             (SCR-OFRM-SRV AND PVC-CIC-IPVC IN PVC = 'EVCTCVE     ')    
      *PVG FIN 06-AGO-2003                                              
               MOVE OPC-COD-VCOC IN OPC TO POC-COD-VCOC IN POC
               MOVE OPC-COD-TOOC IN OPC TO POC-COD-TOOC IN POC
               MOVE OPC-COD-AOOC IN OPC TO POC-COD-AOOC IN POC
               MOVE ZEROES              TO POC-NUM-IPOC IN POC
               MOVE FIO-GET-KEY TO FIO-CMND
               PERFORM COL-FIO-POC
               IF NOT FIO-STAT-OKS


                   MOVE FIO-STAT TO PGM-STAT-PVC
               ELSE
                   MOVE POC-COD-IPVC IN POC TO PVC-CIC-IPVC IN PVC

                   MOVE FIO-GET-KEY TO FIO-CMND
                   PERFORM COL-FIO-PVC
                   MOVE FIO-STAT TO PGM-STAT-PVC
                   IF FIO-STAT-OKS
                       MOVE PVC-CIC-IPVC IN PVC TO PVC-CIC-IPVC 
                                                   IN EVC-FLD
                       IF PVC-MSC-STAT IN PVC = 'N'
                           MOVE 'COL' TO MSG-COD-SIST
                           MOVE 'PVC    NVG' TO MSG-COD-MENS
                           PERFORM GET-MSG
                           MOVE MSG-GLS-DESC TO FRM-MENS
                           MOVE '00' TO FIO-STAT
                           MOVE SCR-STAT-CON TO SCR-STAT
                           GO TO FIN-FND-KEY.
      *

           IF OPC-IND-VSTR IN OPC NOT = 'S'
               MOVE 'COL' TO MSG-COD-SIST
               MOVE 'EVC    NOVAL' TO MSG-COD-MENS
               PERFORM GET-MSG

               MOVE MSG-GLS-DESC TO CPT-STR1
               MOVE MSG-GLS-DATA TO CPT-STR2
               PERFORM CPT-BLKS
               MOVE CPT-STRN     TO FRM-MENS

               MOVE '00' TO FIO-STAT
               MOVE SCR-STAT-CON TO SCR-STAT
               GO TO FIN-FND-KEY.


           IF NOT PGM-STAT-EVC-OKS
               MOVE OPC-MSC-TVOC IN OPC TO OPC-MSC-TVOC IN EVC-FLD
               MOVE OPC-COD-TOOC IN OPC TO OPC-COD-TOOC IN EVC-FLD
               MOVE OPC-COD-OFOC IN OPC TO OPC-COD-OFOC IN EVC-FLD.
      *        MOVE '23' TO FIO-STAT
      *        GO TO FIN-FND-KEY.
           MOVE '00' TO PGM-STAT-OPC.
           MOVE PGM-STAT-EVC TO FIO-STAT.
      *ALD
      *    IF NOT ( OPC-MSC-STAT IN OPC = 'L' OR 'A' )

      *    IF  OPC-MSC-STAT IN OPC NOT = 'A' AND
      *        OPC-MSC-STAT IN OPC NOT = 'D'

      * RBG INI 16-APR-1996 
           IF OPC-APROBADA-APR
      * RBG INI 12-JUN-1996 
              IF SCR-CMND = 'MCA'
                    MOVE 'OPC    ACANO' TO MSG-COD-MENS
                    GO TO SIG-FND-KEY
              ELSE                 
      * RBG FIN 12-JUN-1996
                 MOVE 'OPC    APRYA' TO MSG-COD-MENS
                 GO TO SIG-FND-KEY.   
      * RBG FIN 16-APR-1996 

           IF ( NOT OPC-ACTIVADA ) AND ( NOT OPC-DESACTIVADA )
                IF SCR-CMND = 'MCA'
                    MOVE 'OPC    ACANO' TO MSG-COD-MENS
                    GO TO SIG-FND-KEY
                ELSE                
                   GO TO FIN-FND-KEY.
      *     IF OPC-MSC-STAT IN OPC = 'L'
      *         MOVE 'OPC    LIQYA' TO MSG-COD-MENS.

      *    IF OPC-MSC-STAT IN OPC = 'A'
           IF OPC-ACTIVADA
               IF SCR-CMND = 'MCA'
                   MOVE '00' TO FIO-STAT
                   GO TO FIN-FND-KEY
               ELSE
                   MOVE 'OPC    ACAYA' TO MSG-COD-MENS.
      *    IF OPC-MSC-STAT IN OPC = 'D'
           IF OPC-DESACTIVADA
               MOVE 'OPC    DESYA' TO MSG-COD-MENS.
       SIG-FND-KEY.
           MOVE 'COL' TO MSG-COD-SIST.
           PERFORM GET-MSG.

           MOVE MSG-GLS-DESC TO CPT-STR1
           MOVE MSG-GLS-DATA TO CPT-STR2
           PERFORM CPT-BLKS
           MOVE CPT-STRN     TO FRM-MENS

           MOVE '00' TO FIO-STAT.
           MOVE SCR-STAT-CON TO SCR-STAT.
           GO TO FIN-FND-KEY.
      *>>>>
*% END
*% IF FIN_PUT_SCR
      *<<<< FIN_PUT_SCR 
      *PTC-INI  (RRM)  25-NOV-2002 

           IF SCR-CMND = 'CON' AND
              SCR-OFRM-SRV
      *ISP INI 07-01-2005                                               
                 AND                                                    
                 WSS-IND-CORP = 'N'                                     
      *ISP FIN 07-01-2005                                               


                 MOVE TSK-TERM-ALF TO QUE-TERM
                 MOVE PTC-EVC-TYPE TO QUE-TYPE
                 MOVE QUE-DEL TO QUE-CMND
                 PERFORM GNS-PRO-QUE

                 MOVE EVC-CAI-IOPC IN EVC-FLD TO EVC-CAI-IOPC IN EVC
                 MOVE EVC-IIC-IOPC IN EVC-FLD TO EVC-IIC-IOPC IN EVC
                 MOVE ZEROES                  TO EVC-NUM-IEVC IN EVC
                 MOVE ZEROES TO QUE-NITM
                 MOVE FIO-GET-NLS TO FIO-CMND.

       CIC-PTC-EVC.
           IF SCR-CMND = 'CON' AND
              SCR-OFRM-SRV
      *ISP INI 07-01-2005                                               
                 AND                                                    
                 WSS-IND-CORP = 'N'                                     
      *ISP FIN 07-01-2005                                               
                 PERFORM COL-FIO-EVC
                 IF FIO-STAT-OKS AND
                    EVC-CAI-IOPC IN EVC = EVC-CAI-IOPC IN EVC-FLD AND
                    EVC-IIC-IOPC IN EVC = EVC-IIC-IOPC IN EVC-FLD

                     MOVE         EVC-NUM-IEVC IN EVC TO
                          PTC-EVC-EVC-NUM-IEVC-EDT

                     PERFORM GET-PTC-PVC

                     MOVE         EVC-NUM-IDLC IN EVC TO
                          PTC-EVC-EVC-NUM-IDLC-EDT

                     MOVE         EVC-NUM-VIGU IN EVC TO
                          PTC-EVC-EVC-NUM-VIGU-EDT

                     MOVE         EVC-NUM-DPVC IN EVC TO
                          PTC-EVC-EVC-NUM-DPVC
                     MOVE         EVC-NUM-MPVC IN EVC TO
                          PTC-EVC-EVC-NUM-MPVC
                     MOVE         EVC-NUM-SPVC IN EVC TO
                          PTC-EVC-EVC-NUM-SPVC
                     MOVE         EVC-NUM-APVC IN EVC TO
                          PTC-EVC-EVC-NUM-APVC

                     MOVE         EVC-NUM-DPVE IN EVC TO
                          PTC-EVC-EVC-NUM-DPVE-EDT

                     MOVE         EVC-MSC-TCVE IN EVC TO
                          PTC-EVC-EVC-MSC-TCVE

                     MOVE         EVC-NUM-DESD IN EVC TO
                          PTC-EVC-EVC-NUM-DESD-EDT

                     MOVE         EVC-VAL-VENC IN EVC TO
                          PTC-EVC-EVC-VAL-VENC-EDT

                     MOVE         EVC-NUM-SEVE IN EVC TO
                          PTC-EVC-EVC-NUM-SEVE-EDT

                     MOVE         EVC-IND-UTSV IN EVC TO
                          PTC-EVC-EVC-IND-UTSV

                     MOVE         EVC-SGV-FVAR IN EVC TO
                          PTC-EVC-EVC-SGV-FVAR-EDT

                     MOVE         EVC-IND-CAUT IN EVC TO
                          PTC-EVC-EVC-IND-CAUT

                     MOVE         EVC-IND-FVAR IN EVC TO
                          PTC-EVC-EVC-IND-FVAR

                     ADD 1 TO QUE-NITM
                     MOVE TSK-TERM-ALF TO QUE-TERM
                     MOVE PTC-EVC-TYPE TO QUE-TYPE
                     MOVE PTC-EVC-ITEM TO QUE-ITEM
                     MOVE PTC-EVC-LENG TO QUE-LITM
                     MOVE QUE-PUT  TO QUE-CMND
                     PERFORM GNS-PRO-QUE

                     MOVE FIO-GET-NXT TO FIO-CMND
                     GO TO CIC-PTC-EVC.

      *PTC-FIN: (RRM)  25-NOV-2002 
      *>>>>
*% END
*% IF SCR_GFLD_VAL_FLD
      *<<<< SCR_GFLD_VAL_FLD
      *ISP ES NECESARIO TENER LOS DATOS DE LA OPERACION
      *    PARA LA VALIDACION DE CAMPOS
           MOVE EVC-CAI-IOPC IN EVC-FLD TO OPC-CAI-IOPC IN OPC.
           MOVE EVC-IIC-IOPC IN EVC-FLD TO OPC-IIC-IOPC IN OPC.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM COL-FIO-OPC.
           IF NOT FIO-STAT-OKS
               MOVE 'COL' TO MSG-COD-SIST
               MOVE 'OPC    NEX' TO MSG-COD-MENS
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS
               MOVE FRM-SUAR-MAL TO FRM-SUAR
               GO TO ERR-SCR-GFLD.
      *>>>>
*% END
*% IF CMN_MOD_RET
      *<<<< CMN_MOD_RET
           PERFORM RET-HDR-EVC.
      *>>>>
*% END
*% IF INI_CMN_ING
      *<<<< INI_CMN_ING
*% IF PGM_PU
      *OGB-INI 22-DIC-2014 BGT DIA MENOR A 1 TRIMESTRE
           PERFORM CHECK-BGT-DVC.
           MOVE SPACES TO EVC.
      *OGB-FIN 22-DIC-2014 BGT DIA MENOR A 1 TRIMESTRE
           MOVE ZEROES TO EVC-NUM-VCAN IN EVC.
           MOVE ZEROES TO EVC-NUM-DURV IN EVC.
           MOVE ZEROES TO EVC-NUM-IVCT IN EVC.
           MOVE ZEROES TO EVC-VAL-VCVF IN EVC.
           PERFORM RET-HDR-EVC.
*% END
      *>>>>
*% END
*% IF CMN_ING
      *<<<< CMN_ING
      *CIMA-INI/BGT DIA VEN/OGB/08-2013
      *OGB-INI 22-DIC-2014 BGT DIA MENOR A 1 TRIMESTRE
      *    MOVE ZEROES TO WSS-DVC IN WSS-VARI.
      *    MOVE SPACES TO TAB-COD-CTAB IN TAB.
      *    MOVE WSS-GLS-SCOL TO FIO-SIST.
      *    MOVE SCR-CAI-IOPC IN SCR-VARI TO OPC-CAI-IOPC IN OPC.
      *    MOVE SCR-IIC-IOPC IN SCR-VARI TO OPC-IIC-IOPC IN OPC.
      *    MOVE FIO-GET-KEY TO FIO-CMND.
      *    PERFORM COL-FIO-OPC.
      *    IF FIO-STAT-OKS
      *       MOVE WSS-GLS-SCOL TO TAB-COD-SIST
      *       MOVE WSS-GLS-TBGT TO TAB-COD-TTAB IN TAB
      *       MOVE OPC-COD-COOC IN OPC TO TAB-COD-CTAB IN TAB
      *       MOVE FIO-GET-KEY TO FIO-CMND
      *       PERFORM GNS-FIO-TAB
      *       IF EVC-VAL-VENC IN EVC NOT > ZEROES
      *          IF FIO-STAT-OKS AND TAB-IND-VIGE IN TAB = WSS-IND-SCTE
           IF WSS-IND-BGTC = WSS-CT-1
                 PERFORM VER-FEC-BGT-TRI
                 IF WSS-IND-SBGT = WSS-CT-1
      *OGB-FIN 22-DIC-2014 BGT DIA MENOR A 1 TRIMESTRE
                    MOVE TAB-GLS-DATA IN TAB     TO WSS-DVC IN WSS-VARI
                    MOVE WSS-NUM-DVCT IN WSS-DVC TO EVC-NUM-DPVE IN EVC

                    MOVE OPC-NUM-DCOL IN OPC TO FEC-DEC1
                    MOVE OPC-NUM-MCOL IN OPC TO FEC-MEC1
                    MOVE OPC-NUM-SCOL IN OPC TO FEC-SEC1
                    MOVE OPC-NUM-ACOL IN OPC TO FEC-AEC1

                    MOVE EVC-NUM-DPVE IN EVC     TO FEC-DEC2
                    MOVE EVC-NUM-MPVC IN EVC     TO FEC-MEC2
                    MOVE EVC-NUM-SPVC IN EVC     TO FEC-SEC2
                    MOVE EVC-NUM-APVC IN EVC     TO FEC-AEC2

                    MOVE FEC-CMP-FEC  TO FEC-CMND
                    MOVE FEC-FORM-FEC TO FEC-FORM
                    PERFORM PRO-FEC

      *PVC-INI 19-08-2015 VCTO MAYOR-IGUAL DIA TRIM. BGT
      *             IF FEC-STAT-GRT
                    IF FEC-STAT-GRT OR FEC-STAT-EQL
      *PVC-FIN 19-08-2015 VCTO MAYOR-IGUAL DIA TRIM. BGT
                       MOVE FEC-SUM-MES          TO FEC-CMND
                       MOVE WSS-CT3 IN WSS-CONS  TO FEC-NMES
                       MOVE EVC-NUM-DPVC IN EVC  TO FEC-ITM1
                       MOVE EVC-NUM-MPVC IN EVC  TO FEC-ITM2
                       MOVE EVC-NUM-SPVC IN EVC  TO FEC-ITM3
                       MOVE EVC-NUM-APVC IN EVC  TO FEC-ITM4
                       MOVE FEC-FORM-FEC         TO FEC-FORM
                       PERFORM CAL-FEC
                       MOVE    FEC-FECH(1:2)    TO  EVC-NUM-DPVC IN EVC
                       MOVE    FEC-FECH(3:2)    TO  EVC-NUM-MPVC IN EVC
                       MOVE    FEC-FECH(5:2)    TO  EVC-NUM-SPVC IN EVC
                       MOVE    FEC-FECH(7:2)    TO  EVC-NUM-APVC IN EVC
                       MOVE WSS-NUM-DVCT        TO  EVC-NUM-DPVC IN EVC
                       SUBTRACT 1  FROM EVC-NUM-VIGU IN EVC
                       MOVE EVC-NUM-VIGU IN EVC TO
                                            EVC-NUM-VIGU IN EVC-FLD
                    ELSE
      *PVC-INI 19-08-2015 VCTO MAYOR-IGUAL DIA TRIM. BGT
      *                MOVE WSS-NUM-DVCT        TO  EVC-NUM-DPVC IN EVC.
                       MOVE WSS-NUM-DVCT        TO  EVC-NUM-DPVC IN EVC
               ELSE
               IF WSS-FEC-FAXE NOT = EVC-FEC-FPVC IN EVC AND
                  WSS-FEC-FAXE > ZEROES
                   MOVE WSS-FEC-FAXE TO EVC-FEC-FPVC IN EVC.
      *PVC-FIN 19-08-2015 VCTO MAYOR-IGUAL DIA TRIM. BGT
      *CIMA-FIN/BGT DIA VEN/OGB/08-2013
           MOVE SPACES TO EVC-GLS-FLAG IN EVC.
      *     MOVE SPACES TO EVC-IND-AINV IN EVC.
      *     MOVE SPACES TO EVC-COD-OINV IN EVC.
           MOVE ZEROES TO EVC-NUM-DURV IN EVC.
           MOVE SPACES TO EVC-IND-UTDV IN EVC.
           MOVE ZEROES TO EVC-NUM-VCAN IN EVC.
      *     MOVE ZEROES TO EVC-NUM-IVCT IN EVC.
      *    MOVE EVC-NUM-DPVC IN EVC TO EVC-NUM-DPVE.
      *    MOVE SPACES TO EVC-GLS-DISP IN EVC.
      *>>>>
*% END
*% IF CMN_MOD
      *<<<< CMN_MOD
      *CIMA-INI/BGT DIA VEN/OGB/08-2013
      *OGB-INI 22-DIC-2014 BGT DIA MENOR A 1 TRIMESTRE
      *    MOVE ZEROES TO WSS-DVC IN WSS-VARI.
      *    MOVE SPACES TO TAB-COD-CTAB IN TAB.
      *    MOVE WSS-GLS-SCOL TO FIO-SIST.
      *    MOVE EVC-CAI-IOPC IN EVC TO OPC-CAI-IOPC IN OPC.
      *    MOVE EVC-IIC-IOPC IN EVC TO OPC-IIC-IOPC IN OPC.
      *    MOVE FIO-GET-KEY TO FIO-CMND.
      *    PERFORM COL-FIO-OPC.
      *    IF FIO-STAT-OKS
      *       MOVE WSS-GLS-SCOL TO TAB-COD-SIST
      *       MOVE WSS-GLS-TBGT TO TAB-COD-TTAB IN TAB
      *       MOVE OPC-COD-COOC IN OPC TO TAB-COD-CTAB IN TAB
      *       MOVE FIO-GET-KEY TO FIO-CMND
      *       PERFORM GNS-FIO-TAB
      *       IF EVC-VAL-VENC IN EVC NOT > ZEROES
      *          IF FIO-STAT-OKS AND TAB-IND-VIGE IN TAB = WSS-IND-SCTE
           IF WSS-IND-BGTC = WSS-CT-1
                 PERFORM VER-FEC-BGT-TRI
                 IF WSS-IND-SBGT = WSS-CT-1
      *OGB-FIN 22-DIC-2014 BGT DIA MENOR A 1 TRIMESTRE
                    MOVE TAB-GLS-DATA IN TAB     TO WSS-DVC IN WSS-VARI
                    MOVE WSS-NUM-DVCT IN WSS-DVC TO EVC-NUM-DPVE IN EVC

                    MOVE OPC-NUM-DCOL IN OPC TO FEC-DEC1
                    MOVE OPC-NUM-MCOL IN OPC TO FEC-MEC1
                    MOVE OPC-NUM-SCOL IN OPC TO FEC-SEC1
                    MOVE OPC-NUM-ACOL IN OPC TO FEC-AEC1

                    MOVE EVC-NUM-DPVE IN EVC     TO FEC-DEC2
                    MOVE EVC-NUM-MPVC IN EVC     TO FEC-MEC2
                    MOVE EVC-NUM-SPVC IN EVC     TO FEC-SEC2
                    MOVE EVC-NUM-APVC IN EVC     TO FEC-AEC2

                    MOVE FEC-CMP-FEC  TO FEC-CMND
                    MOVE FEC-FORM-FEC TO FEC-FORM
                    PERFORM PRO-FEC

      *PVC-INI 19-08-2015 VCTO MAYOR-IGUAL DIA TRIM. BGT
      *             IF FEC-STAT-GRT
                    IF FEC-STAT-GRT OR FEC-STAT-EQL
      *PVC-FIN 19-08-2015 VCTO MAYOR-IGUAL DIA TRIM. BGT
                       MOVE FEC-SUM-MES          TO FEC-CMND
                       MOVE WSS-CT3 IN WSS-CONS  TO FEC-NMES
                       MOVE EVC-NUM-DPVC IN EVC  TO FEC-ITM1
                       MOVE EVC-NUM-MPVC IN EVC  TO FEC-ITM2
                       MOVE EVC-NUM-SPVC IN EVC  TO FEC-ITM3
                       MOVE EVC-NUM-APVC IN EVC  TO FEC-ITM4
                       MOVE FEC-FORM-FEC         TO FEC-FORM
                       PERFORM CAL-FEC
                       MOVE    FEC-FECH(1:2)    TO  EVC-NUM-DPVC IN EVC
                       MOVE    FEC-FECH(3:2)    TO  EVC-NUM-MPVC IN EVC
                       MOVE    FEC-FECH(5:2)    TO  EVC-NUM-SPVC IN EVC
                       MOVE    FEC-FECH(7:2)    TO  EVC-NUM-APVC IN EVC
                       MOVE WSS-NUM-DVCT        TO  EVC-NUM-DPVC IN EVC

                       SUBTRACT 1  FROM EVC-NUM-VIGU IN EVC
                       MOVE EVC-NUM-VIGU IN EVC TO
                                            EVC-NUM-VIGU IN EVC-FLD
                    ELSE
      *PVC-INI 19-08-2015 VCTO MAYOR-IGUAL DIA TRIM. BGT
      *                MOVE WSS-NUM-DVCT        TO  EVC-NUM-DPVC IN EVC.
                       MOVE WSS-NUM-DVCT        TO  EVC-NUM-DPVC IN EVC
               ELSE
               IF WSS-FEC-FAXE NOT = EVC-FEC-FPVC IN EVC AND
                  WSS-FEC-FAXE > ZEROES
                   MOVE WSS-FEC-FAXE TO EVC-FEC-FPVC IN EVC.
      *PVC-FIN 19-08-2015 VCTO MAYOR-IGUAL DIA TRIM. BGT
      *CIMA-FIN/BGT DIA VEN/OGB/08-2013
      *>>>>
*% END
*% IF FIN_HBL_FLD
      *<<<< FIN_HBL_FLD
           IF SCR-CMND = 'MCA'
               PERFORM PRO-FLD-EVC
               MOVE FRM-CPIM-UBY TO EVC-IND-CAUT-ATR IN EVC-FLD
               MOVE  0           TO FRM-NUM-DURV-LEN IN EVC-FLD
               MOVE -1 TO EVC-IND-CAUT-LEN IN EVC-FLD.
      *>>>>
*% END
*% IF CMN_ING OR CMN_MOD
      *<<<< CMN_ING OR CMN_MOD
           PERFORM GET-FHOY.
      *     MOVE HOY-STP-ITRN IN HOY-VARI TO EVC-STP-IINV IN EVC.
      *>>>>
*% END
*% IF WSS
      *<<<< WSS
       COPY COLWGPMP.
      *>>>>
*% END
*% CMA_USR = TRUE
*% IF CMA
      *<<<< CMA
           02 FILLER                      PIC X(3000).
      *>>>>
*% END
*% IF SCR_GIKY_VAL_IKY 
      *<<<< SCR_GIKY_VAL_IKY  
      *PTC-INI (RRM) 22-NOV-2002
           IF SCR-OFRM-SRV AND
              SCR-CCPP = 'ING'

              MOVE PTC-OPC-TYPE TO QUE-TYPE
              MOVE TSK-TERM-ALF TO QUE-TERM
              MOVE PTC-OPC-LENG TO QUE-LITM
              MOVE 1            TO  QUE-NITM
              MOVE QUE-GET      TO QUE-CMND
              PERFORM GNS-PRO-QUE
              IF QUE-STAT = QUE-STAT-OKS
                  MOVE QUE-ITEM TO PTC-OPC-ITEM
                  MOVE PTC-OPC-OPC-CAI-IOPC TO EVC-CAI-IOPC IN EVC-FLD
                  MOVE PTC-OPC-OPC-IIC-IOPC TO EVC-IIC-IOPC IN EVC-FLD.
      *PTC-FIN (RRM) 22-NOV-2002
      *>>>>
*% END
*% IF FIN_SCR_GIKY OR FIN_SCR_GCNF OR FIN_SCR_GFLD
      *<<<< FIN_SCR_GIKY OR FIN_SCR_GCNF OR FIN_SCR_GFLD
           IF FRM-FFLD = FRM-FFLD-PF3 AND
              SCR-IND-ENG IN SCR-VEC-ENG(SCR-IPRO) = 'S'
               PERFORM EGR-EOV.
      *>>>>
*% END
*% IF FIN_CMN_ING OR SCR_GFLD_VAL_MKY
      *<<<< FIN_CMN_ING OR SCR_GFLD_VAL_MKY
           IF FRM-FFLD = FRM-FFLD-PF10 AND
              SCR-IND-ENG IN SCR-VEC-ENG(SCR-IPRO) = 'S'
               PERFORM EGR-EOV.
      *>>>>
*% END
*% IF INI_CMN_MOD
      *<<<< INI_CMN_MOD
      *OGB-INI 22-DIC-2014 BGT DIA MENOR A 1 TRIMESTRE
           MOVE SPACES TO EVC.
           PERFORM CHECK-BGT-DVC.
           MOVE SPACES TO EVC.
      *OGB-FIN 22-DIC-2014 BGT DIA MENOR A 1 TRIMESTRE
      *>>>>
*% END
*% IF FIN_CMN_MOD
      *<<<< FIN_CMN_MOD
           IF SCR-CMND = 'MCA'
               GO TO FIN-CMN-MOD.
           MOVE EVC-CAI-IOPC IN EVC TO OPC-CAI-IOPC IN OPC.
           MOVE EVC-IIC-IOPC IN EVC TO OPC-IIC-IOPC IN OPC.
           MOVE FIO-GET-KEY-UPD TO FIO-CMND.
           PERFORM COL-FIO-OPC.
           IF FIO-STAT-OKS
*% IF PGM_PER
      *        IF OPC-MSC-STAT IN OPC NOT = 'F'
               IF NOT OPC-APROBADA-CTC
*% END
                   MOVE 'M' TO OPC-MSC-STAT IN OPC
                   MOVE FIO-MOD TO FIO-CMND
                   PERFORM COL-FIO-OPC.
      *>>>>
*% END
*% IF FIN_CMN_ING
      *<<<< FIN_CMN_ING
           IF SCR-IND-ENG IN SCR-VEC-ENG(SCR-IPRO) NOT = 'S'
               MOVE EVC-CAI-IOPC IN EVC TO OPC-CAI-IOPC IN OPC
               MOVE EVC-IIC-IOPC IN EVC TO OPC-IIC-IOPC IN OPC
               MOVE FIO-GET-KEY-UPD TO FIO-CMND
               PERFORM COL-FIO-OPC
               IF FIO-STAT-OKS
*% IF PGM_PER
      *            IF OPC-MSC-STAT IN OPC NOT = 'F'
                   IF NOT OPC-APROBADA-CTC
*% END
                       MOVE 'M' TO OPC-MSC-STAT IN OPC
                       MOVE FIO-MOD TO FIO-CMND
                       PERFORM COL-FIO-OPC.
      *>>>>
*% END
*% IF FIN_CMN_ELI
      *<<<< FIN_CMN_ELI
      *DAD ini  08-JAN-1993   (Memo.06-01-93)
           MOVE EVC-CAI-IOPC IN EVC TO OPC-CAI-IOPC IN OPC.
           MOVE EVC-IIC-IOPC IN EVC TO OPC-IIC-IOPC IN OPC.
           MOVE FIO-GET-KEY-UPD TO FIO-CMND.
           PERFORM COL-FIO-OPC.
           IF FIO-STAT-OKS
*% IF PGM_PER
      *        IF OPC-MSC-STAT IN OPC NOT = 'F'
               IF NOT OPC-APROBADA-CTC
*% END
                   MOVE 'M' TO OPC-MSC-STAT IN OPC
                   MOVE FIO-MOD TO FIO-CMND
                   PERFORM COL-FIO-OPC.
      *DAD fin  08-JAN-1993
      *>>>>
*% END
*% IF INI_FIO
      *<<<< INI_FIO
*% IF PGM_PTC
      *PTC ini
           PERFORM GNS-ERR-QUE.
      *PTC fin
*% END
*% IF PGM_PQ
           MOVE +3000 TO SCR-TCMA.
      * PTC ini
      *     IF SCR-DESDE-CMN
      *         MOVE SPACES TO SCR-RQA1
      *         MOVE SPACES TO SCR-VEC-ENG
      *         MOVE 1 TO SCR-IPRO
      *         GO TO FIN-INI-FIO.
      *     IF SCR-INST-EXT = WSS-INST-FPEN-CIC
      *         MOVE WSS-INST-NULL TO SCR-INST-EXT
      *         MOVE 'GNS' TO MSG-COD-SIST
      *         MOVE 'MSGKEY' TO MSG-COD-MENS
      *         PERFORM GET-MSG
      *         MOVE MSG-GLS-DESC TO SCR-MENS-EXT
      **         MOVE 'KO13COLPAEVCCOLFEVCCOLAEVC' TO
      **                  WSS-VEC-PPRO IN WSS-PPRO(WSS-IDX-IEOV)
      *         MOVE 'KQ13COLPQEVCCOLFEVCCOLAEVC' TO
      *                  WSS-VEC-PPRO IN WSS-PPRO(WSS-IDX-IEOV)
      *         MOVE 'KU13COLPUEVC'               TO
      *                 WSS-VEC-PPRV IN WSS-PPRO(WSS-IDX-IEOV)
      *         PERFORM ING-FPEN-CIC.
*% IF PGM_PTC
      * PTC ini
           IF SCR-OFRM-SRV
               MOVE WSS-IDX-IEOV TO SCR-IPRO
           ELSE
               IF SCR-DESDE-CMN
                   MOVE 1 TO SCR-IPRO
                   MOVE SPACES TO SCR-RQA1
                   MOVE SPACES TO SCR-VEC-ENG.
      *PTC fin
*% ELSE
           IF SCR-DESDE-CMN
                MOVE 1 TO SCR-IPRO
                MOVE SPACES TO SCR-RQA1
                MOVE SPACES TO SCR-VEC-ENG.
*% END
      * RBG fin
           IF SCR-INST-EXT = WSS-INST-FPEN-CIC
               MOVE WSS-INST-NULL TO SCR-INST-EXT
               MOVE 'GNS' TO MSG-COD-SIST
               MOVE 'MSGKEY' TO MSG-COD-MENS
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO SCR-MENS-EXT
      *         MOVE 'KO13COLPAEVCCOLFEVCCOLAEVC' TO
      *                  WSS-VEC-PPRO IN WSS-PPRO(WSS-IDX-IEOV)
               MOVE 'KQ13COLPQEVCCOLFEVCCOLAEVC' TO
                        WSS-VEC-PPRO IN WSS-PPRO(WSS-IDX-IEOV)
               MOVE 'KU13COLPUEVC'               TO
                       WSS-VEC-PPRV IN WSS-PPRO(WSS-IDX-IEOV)
               PERFORM ING-FPEN-CIC.

      *ISP INI 07-01-2005                                               
           MOVE TSK-TERM-ALF TO QUE-TERM.                               
           MOVE 'ICOL'       TO QUE-TYPE.                               
           MOVE +9999        TO QUE-LITM.                               
           MOVE 1            TO QUE-NITM.                               
           MOVE QUE-GET      TO QUE-CMND.                               
           PERFORM GNS-PRO-QUE.                                         
           IF QUE-STAT = QUE-STAT-OKS                                   
               MOVE 'S' TO WSS-IND-CORP IN WSS-VARI                     
           ELSE                                                         
               MOVE 'N' TO WSS-IND-CORP IN WSS-VARI.                    
      *ISP FIN 07-01-2005                                               
           IF SCR-OFRM-SRV                                              
               PERFORM VRF-LEE-FRM                                      
               IF WSS-LEE-FRM-EVC = 'S'                                 
                  GO TO FIN-INI-FIO.                                    
*% END
       FIN-INI-FIO.
      *>>>>
*% END
*% IF FIN_HBL_FLD
      *<<<< FIN_HBL_FLD
      *ALD/ELIMINAR
           MOVE FRM-CPIM-AEY TO EVC-NUM-DESD-ATR IN EVC-FLD.
           MOVE FRM-CPIM-AEY TO EVC-SGV-FVAR-ATR IN EVC-FLD.
           MOVE FRM-CPIM-AEY TO EVC-IND-FVAR-ATR IN EVC-FLD.
      *    MOVE FRM-CPIM-AEY TO EVC-IND-CAUT-ATR IN EVC-FLD.
      *
*% IF PGM_PER
      * HPM INI
           MOVE EVC-CAI-IOPC IN EVC-FLD TO OPC-CAI-IOPC IN OPC.
           MOVE EVC-IIC-IOPC IN EVC-FLD TO OPC-IIC-IOPC IN OPC.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM COL-FIO-OPC.
           IF NOT FIO-STAT-OKS
               MOVE 'COL'          TO MSG-COD-SIST
               MOVE 'EVC    NOOPC' TO MSG-COD-MENS
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO CPT-STR1
               MOVE MSG-GLS-DATA TO CPT-STR2
               PERFORM CPT-BLKS
               MOVE CPT-STRN     TO FRM-MENS
               MOVE '00' TO FIO-STAT
               MOVE SCR-STAT-CON TO SCR-STAT
               GO TO FIN-HBL-FLD.
           IF OPC-PENDIENTE-CTC
               IF ( SCR-CCPP = 'MOD' ) OR
                  ( SCR-CCPP = 'ACT' AND SCR-ACTU = SCR-ACTU-MOD )
                   MOVE FRM-CPIM-AEY TO EVC-NUM-VIGU-ATR IN EVC-FLD.
      *HPM FIN
*% END
      *ALD/16-JUL-1988
           IF SCR-CCPP NOT = 'ING'
               GO TO FIN-HBL-FLD.

           IF PVC-CIC-IPVC IN EVC-FLD NOT > SPACES
               GO TO FIN-HBL-FLD.

           IF NOT PGM-STAT-PVC-OKS
               MOVE PVC-CIC-IPVC IN EVC-FLD TO PVC-CIC-IPVC IN PVC
               MOVE FIO-GET-KEY TO FIO-CMND
               PERFORM COL-FIO-PVC
               IF NOT FIO-STAT-OKS
                   GO TO FIN-HBL-FLD
               ELSE
                   MOVE EVC-CAI-IOPC IN EVC-FLD TO OPC-CAI-IOPC IN OPC
                   MOVE EVC-IIC-IOPC IN EVC-FLD TO OPC-IIC-IOPC IN OPC
                   MOVE FIO-GET-KEY TO FIO-CMND
                   PERFORM COL-FIO-OPC
                   IF NOT FIO-STAT-OKS
                       GO TO FIN-HBL-FLD.

           IF PVC-NUM-DVMI IN PVC = PVC-NUM-DVMA IN PVC AND
              PVC-IND-DVMI IN PVC = PVC-IND-DVMA IN PVC AND
              PVC-NUM-DVMI IN PVC > ZEROES
               MOVE PVC-NUM-DVMI IN PVC TO FRM-NUM-DURV IN EVC-FLD
               MOVE PVC-IND-DVMI IN PVC TO FRM-IND-UTDV IN EVC-FLD
               MOVE FRM-CPIM-AEY TO FRM-NUM-DURV-ATR IN EVC-FLD
               MOVE FRM-CPIM-AEY TO FRM-IND-UTDV-ATR IN EVC-FLD
               MOVE 0            TO EVC-NUM-VIGU-LEN IN EVC-FLD
               MOVE -1           TO EVC-NUM-IDLC-LEN IN EVC-FLD.

           IF PVC-NUM-VIMI IN PVC = PVC-NUM-VIMA IN PVC AND
              PVC-NUM-VIMI IN PVC > ZEROES
               MOVE PVC-NUM-VIMI IN PVC TO EVC-NUM-VIGU IN EVC-FLD
               MOVE FRM-CPIM-AEY TO EVC-NUM-VIGU-ATR IN EVC-FLD.

           IF PVC-NUM-SPMI IN PVC = PVC-NUM-SPMA IN PVC AND
              PVC-IND-SPMI IN PVC = PVC-IND-SPMA IN PVC AND
              PVC-NUM-SPMI IN PVC > ZEROES
               MOVE PVC-NUM-SPMI IN PVC TO FRM-NUM-SPVE IN EVC-FLD
               MOVE PVC-IND-SPMI IN PVC TO FRM-IND-UTPV IN EVC-FLD
               MOVE FRM-CPIM-AEY TO FRM-NUM-SPVE-ATR IN EVC-FLD
               MOVE FRM-CPIM-AEY TO FRM-IND-UTPV-ATR IN EVC-FLD.

           IF PVC-NUM-DESD IN PVC > ZEROES
               MOVE PVC-NUM-DESD IN PVC TO EVC-NUM-DESD IN EVC-FLD
               MOVE FRM-CPIM-AEY TO EVC-NUM-DESD-ATR IN EVC-FLD.

           IF PVC-NUM-SVMI IN PVC = PVC-NUM-SVMA IN PVC AND
              PVC-IND-SVMI IN PVC = PVC-IND-SVMA IN PVC AND
              PVC-NUM-SVMI IN PVC > ZEROES
               MOVE PVC-NUM-SVMI IN PVC TO EVC-NUM-SEVE IN EVC-FLD
               MOVE PVC-IND-SVMI IN PVC TO EVC-IND-UTSV IN EVC-FLD
               MOVE FRM-CPIM-AEY TO EVC-NUM-SEVE-ATR IN EVC-FLD
               MOVE FRM-CPIM-AEY TO EVC-IND-UTSV-ATR IN EVC-FLD.

           IF PVC-MSC-TCVE IN PVC > SPACES
               MOVE PVC-MSC-TCVE IN PVC TO EVC-MSC-TCVE IN EVC-FLD
               MOVE 'COL' TO TAB-COD-SIST
               MOVE 'CVC' TO TAB-COD-TTAB IN TAB
               MOVE EVC-MSC-TCVE IN EVC-FLD TO TAB-COD-CTAB IN TAB
               PERFORM BUS-TAB
               MOVE TAB-GLS-DESC IN TAB TO FRM-GLS-TCVE IN EVC-FLD
               MOVE FRM-CPIM-AEY TO EVC-MSC-TCVE-ATR IN EVC-FLD.

           IF PVC-VAL-VVMI IN PVC = PVC-VAL-VVMA IN PVC AND
              PVC-VAL-VVMI IN PVC > ZEROES AND
              PVC-COD-VCOC IN PVC = OPC-COD-VCOC IN OPC
               MOVE PVC-VAL-VVMI IN PVC TO EVC-VAL-VENC IN EVC-FLD
               MOVE FRM-CPIM-AEY TO EVC-VAL-VENC-ATR IN EVC-FLD.

           IF PVC-SGV-FMMI IN PVC     = PVC-SGV-FMMA IN PVC AND
              PVC-SGV-FMMI IN PVC NOT = ZEROES AND
              PVC-COD-VCOC IN PVC     = OPC-COD-VCOC IN OPC
               MOVE 'M' TO EVC-IND-FVAR IN EVC-FLD.

           IF PVC-SGV-FPMI IN PVC     = PVC-SGV-FPMA IN PVC AND
              PVC-SGV-FPMI IN PVC NOT = ZEROES AND
              PVC-SGV-FMMI IN PVC     = ZEROES AND
              PVC-SGV-FMMA IN PVC     = ZEROES
               MOVE 'P' TO EVC-IND-FVAR IN EVC-FLD.

           MOVE 'COL' TO MSC-COD-SIST.
           MOVE 'FVAR' TO MSC-COD-TMSC IN MSC.
           MOVE EVC-IND-FVAR IN EVC-FLD TO MSC-COD-CMSC IN MSC.
           PERFORM BUS-MSC.

           IF MSC-CIC-CMSC IN MSC = 'M' AND
              PVC-SGV-FMMI IN PVC = PVC-SGV-FMMA IN PVC AND
              PVC-SGV-FMMI IN PVC NOT = ZEROES AND
              PVC-COD-VCOC IN PVC = OPC-COD-VCOC IN OPC
               MOVE PVC-SGV-FMMI IN PVC TO EVC-SGV-FVAR IN EVC-FLD
               MOVE FRM-CPIM-AEY TO EVC-IND-FVAR-ATR IN EVC-FLD
               MOVE FRM-CPIM-AEY TO EVC-SGV-FVAR-ATR IN EVC-FLD.

           IF MSC-CIC-CMSC IN MSC = 'P' AND
              PVC-SGV-FPMI IN PVC = PVC-SGV-FPMA IN PVC AND
              PVC-SGV-FPMI IN PVC NOT = ZEROES
               MOVE PVC-SGV-FPMI IN PVC TO EVC-SGV-FVAR IN EVC-FLD
               MOVE FRM-CPIM-AEY TO EVC-IND-FVAR-ATR IN EVC-FLD
               MOVE FRM-CPIM-AEY TO EVC-SGV-FVAR-ATR IN EVC-FLD.
      *
      *>>>>
*% END
*% IF FIN_HBL_IKY
      *<<<< FIN_HBL_IKY
           MOVE '1' TO FRM-CPIM-AEY.                                    
           IF SCR-IND-ENG IN SCR-VEC-ENG(SCR-IPRO) = 'S'
               PERFORM HBL-KEY-EVC.
      *>>>>
*% END
*% IF FIN_HBL_KEY
      *<<<< FIN_HBL_KEY
           MOVE '1' TO FRM-CPIM-AEY.
      *>>>>
*% END
*% IF EOF
      *<<<< EOF

       HBL-KEY-EVC SECTION.
       INI-HBL-KEY-EVC.
           MOVE SCR-INST-GKY TO SCR-INST.
      *ISP   25-JUL-1990 DEBE SER REEMPLAZADO POR VARIABLE
      *     INHIBE MOVE FRM-CPSF TO FRM-CPIM-AEY
           MOVE '1' TO FRM-CPIM-AEY.
           MOVE FRM-CPIM-AEY TO EVC-CAI-IOPC-ATR IN EVC-FLD.
           MOVE FRM-CPIM-AEY TO EVC-IIC-IOPC-ATR IN EVC-FLD.
           MOVE FRM-CPIM-AEY TO EVC-NUM-IEVC-ATR IN EVC-FLD.
           MOVE +4 TO EVC-CAI-IOPC-LEN IN EVC-FLD.
           MOVE -1 TO PVC-CIC-IPVC-LEN IN EVC-FLD.
           PERFORM SCR-CLRA-EVC.
           MOVE SCR-CAI-IOPC IN SCR-VARI TO EVC-CAI-IOPC IN EVC-FLD.
           MOVE SCR-IIC-IOPC IN SCR-VARI TO EVC-IIC-IOPC IN EVC-FLD.

      * ISP SCR-DMSG LIMPIA TODO Y HACE STP-EXIT
           MOVE PGM-LIMPIAR-CAMPOS TO PGM-ICLR.

      *ISP SE REQUIEREN PARA BUS-COR-EVC
           MOVE SCR-CAI-IOPC IN SCR-VARI TO EVC-CAI-IOPC IN EVC.
           MOVE SCR-IIC-IOPC IN SCR-VARI TO EVC-IIC-IOPC IN EVC.
           PERFORM BUS-COR-EVC.

           MOVE SCR-CAI-IOPC IN SCR-VARI TO OPC-CAI-IOPC IN OPC.
           MOVE SCR-IIC-IOPC IN SCR-VARI TO OPC-IIC-IOPC IN OPC.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM COL-FIO-OPC.
           MOVE FIO-STAT TO PGM-STAT-OPC.
           IF NOT FIO-STAT-OKS
               MOVE 'COL' TO MSG-COD-SIST
               MOVE 'OPC    NEX' TO MSG-COD-MENS
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS
               MOVE SCR-STAT-CON TO SCR-STAT
               PERFORM CLR-OPC-EVC
           ELSE
               PERFORM PUT-OPC-EVC.

           PERFORM EDT-KEY-EVC.
           PERFORM EDT-FLD-EVC.

           IF SCR-IND-FST IN SCR-VEC-FST(SCR-IPRO) = 'S'
               MOVE SPACES TO SCR-IND-FST IN SCR-VEC-FST(SCR-IPRO)
               PERFORM SCR-INIT
               PERFORM SCR-EXIT
           ELSE
               PERFORM SCR-PUTA.

      *     IF SCR-IND-FST IN SCR-VEC-FST(SCR-IPRO) = 'S'
      *         MOVE SPACES TO SCR-IND-FST IN SCR-VEC-FST(SCR-IPRO)
      *         PERFORM SCR-INIT
      *     ELSE
      *         PERFORM SCR-PUTA.
      *     PERFORM SCR-EXIT.
       FIN-HBL-KEY-EVC.
           EXIT.
      *>>>>
*% END
*% IF EOF
      *<<<< EOF
       BCK-OUT SECTION.
       INI-BCK-OUT.
           MOVE FIO-BCK-OUT TO FIO-CMND.
           PERFORM COL-FIO-EVC.
           IF FIO-STAT-OKS
      *        Para informar que el backout se realizo con exito
               MOVE '49' TO FIO-STAT.
       FIN-BCK-OUT.
           EXIT.

       BUS-COR-EVC SECTION.
       INI-BUS-COR-EVC.
           MOVE 99 TO EVC-NUM-IEVC IN EVC.
           MOVE FIO-GET-LEQ TO FIO-CMND.
           PERFORM COL-FIO-EVC.
           IF NOT ( FIO-STAT-OKS AND
                    EVC-CAI-IOPC IN EVC-FLD = EVC-CAI-IOPC IN EVC AND
                    EVC-IIC-IOPC IN EVC-FLD = EVC-IIC-IOPC IN EVC )
               PERFORM KEY-ALL-EVC
               MOVE ZEROES TO EVC-NUM-IEVC IN EVC.
*% IF PGM_PQ

      *LOP-INI CREDITOS SIN MORA                                        
           IF SCR-CMND = 'CON' AND SCR-OFRM-SRV AND                     
              EVC-NUM-IEVC IN EVC > 1           AND                     
              EVC-MSC-TCVE IN EVC = 'VA'                                
      *ISP INI 07-01-2005                                               
              AND WSS-IND-CORP ='S'                                     
      *ISP FIN 07-01-2005                                               
              MOVE FIO-GET-PRV TO FIO-CMND                              
              PERFORM COL-FIO-EVC                                       
              IF NOT ( FIO-STAT-OKS AND                                 
                    EVC-CAI-IOPC IN EVC-FLD = EVC-CAI-IOPC IN EVC AND   
                    EVC-IIC-IOPC IN EVC-FLD = EVC-IIC-IOPC IN EVC )     
               PERFORM KEY-ALL-EVC                                      
               MOVE ZEROES TO EVC-NUM-IEVC IN EVC.                      
      *LOP-FIN CREDITOS SIN MORA                                        


*% END
           IF SCR-CCPP = 'ING' OR 'ACT'
               ADD 1 TO EVC-NUM-IEVC IN EVC
               MOVE EVC-NUM-IEVC IN EVC TO EVC-NUM-IEVC IN EVC-FLD.
           MOVE 1 TO WSS-ICOR.
       FIN-BUS-COR-EVC.
           EXIT.

       RST-STAT SECTION.
       INI-RST-STAT.
           MOVE SCR-STPP     TO SCR-STAT.
           MOVE SCR-MFLD-NOT TO SCR-MFLD.
       FIN-RST-STAT.
           EXIT.

       GET-TSTP SECTION.
       INI-GET-TSTP.
           MOVE SYS-GET-DATE TO SYS-CMND.
           PERFORM GNS-PRO-SYS.
      *    MOVE SYS-TSTP TO EVC-STP-IINV IN EVC.
       FIN-GET-TSTP.
           EXIT.

       LEE-NXT-PRV SECTION.
       INI-LEE-NXT-PRV.
           IF SCR-RQA1 > SPACES
               PERFORM LEE-NXT-PRV-EVC
           ELSE
               PERFORM LEE-NXT-PRV-CIC.
       FIN-LEE-NXT-PRV.
           EXIT.

       LEE-NXT-PRV-EVC SECTION.
       INI-LEE-NXT-PRV-EVC.
           MOVE SCR-RQA1 TO ADR-EVC-REQA.
           MOVE FIO-KDEF-S TO FIO-KDEF.
           IF FRM-FFLD = FRM-FFLD-PF7
               MOVE FIO-GET-PRV TO FIO-CMND
           ELSE
               MOVE FIO-GET-NXT TO FIO-CMND.
           PERFORM COL-FIO-EVC.
           IF FIO-STAT-OKS
               MOVE '00' TO PGM-STAT-EVC
               MOVE ADR-EVC-REQA TO SCR-RQA1.
       FIN-LEE-NXT-PRV-EVC.
           EXIT.

       LEE-NXT-PRV-CIC SECTION.
       INI-LEE-NXT-PRV-CIC.
           IF EVC-CIC-IOPC IN EVC > SPACES AND
              EVC-NUM-IEVC IN EVC > ZEROES
               MOVE FIO-GET-KEY    TO FIO-CMND
               PERFORM COL-FIO-EVC
               IF FIO-STAT-OKS
                   IF FRM-FFLD = FRM-FFLD-PF7
                       MOVE FIO-GET-PRV TO FIO-CMND
                   ELSE
                       MOVE FIO-GET-NXT TO FIO-CMND
               ELSE
                   IF FRM-FFLD = FRM-FFLD-PF7
                       MOVE FIO-GET-LEQ TO FIO-CMND
                   ELSE
                       MOVE FIO-GET-NLS TO FIO-CMND
           ELSE
               IF FRM-FFLD = FRM-FFLD-PF7
                   MOVE FIO-GET-LEQ TO FIO-CMND
               ELSE
                   MOVE FIO-GET-NLS TO FIO-CMND.
           PERFORM COL-FIO-EVC.
           IF FIO-STAT-OKS
               MOVE '00' TO PGM-STAT-EVC
               MOVE ADR-EVC-REQA TO SCR-RQA1.
       FIN-LEE-NXT-PRV-CIC.
           EXIT.

       COPY COLBFOPC.
       COPY COLBFDLC.
       COPY COLBFCYA.
       COPY COLBGEOV.
       COPY TABBVOFI.
       COPY GNSBPFEC.
*% IF PGM_PQ
       COPY GNSBGPES.
*% END
       COPY GNSBGCPT.
       COPY SGCBFDBC.
       COPY COLBFTOC.
      *ALD/18-JUL-1988 
       COPY COLBFPOC.
       COPY COLBFPVC.
       COPY TABBFCAM.
      *
      *>>>>
      *  CODIGO ADICIONAL PARA ENGANCHE PROGRAMAS
       ING-FPEN-CIC SECTION.
       INI-ING-FPEN-CIC.
           PERFORM ING-SETE.
           MOVE SCR-MENS-EXT TO EVC-GLS-MENS.
           PERFORM HBL-IKY.
*% IF PGM_PTC
      *PTC ini
           IF SCR-OFRM-SRV
               EXEC CICS
                  RETURN
               END-EXEC.
      *PTC fin
*% END
       FIN-ING-FPEN-CIC.
           EXIT.

       ING-FTER-CIC SECTION.
       INI-ING-FTER-CIC.
           PERFORM ING-SETE.
           MOVE SCR-MENS-EXT TO EVC-GLS-MENS.
           PERFORM HBL-IKY.
       FIN-ING-FTER-CIC.
           EXIT.

       ING-FTER-CMN SECTION.
       INI-ING-FTER-CMN.
           PERFORM ING-SETE.
           PERFORM PRO-ALL.
           PERFORM SCR-CLRA-EVC.
           MOVE SCR-MENS-EXT TO EVC-GLS-MENS.
           PERFORM SCR-INIT.
       FIN-ING-FTER-CMN.
           EXIT.

       ING-SETE SECTION.
       INI-ING-SETE.
           PERFORM CRG-TBL-ENG.
           MOVE WSS-NTRN(SCR-IPRO) TO SCR-NTRN.
           MOVE WSS-PROG(SCR-IPRO) TO SCR-PROG.
           MOVE WSS-NMAP(SCR-IPRO) TO SCR-NMAP.
           MOVE WSS-NLIB(SCR-IPRO) TO SCR-NLIB.

           MOVE WSS-NTRV(SCR-IPRO) TO SCR-NTRV.
           MOVE WSS-PROV(SCR-IPRO) TO SCR-PROV.
       FIN-ING-SETE.
           EXIT.

       EGR-FPEN-CIC SECTION.
       INI-EGR-FPEN-CIC.
           PERFORM CRG-TBL-ENG.
           ADD 1 TO SCR-IPRO.
           IF SCR-IPRO > WSS-TOT-IIDX
                  PERFORM EGR-FTER-CIC
                  GO TO FIN-EGR-FPEN-CIC.
           IF SCR-IND-ENG IN SCR-VEC-ENG(SCR-IPRO) = SPACES
               GO TO INI-EGR-FPEN-CIC.
           MOVE WSS-INST-FPEN-CIC TO SCR-INST-EXT.
           MOVE WSS-PROG(SCR-IPRO) TO SYS-PROG.
           MOVE SCR-VARI TO SYS-CMMA.
           MOVE SCR-TCMA TO SYS-TCMA.
           MOVE SYS-XCTL TO SYS-CMND.
*% IF PGM_PTC
      *PTC ini
           IF SCR-OFRM-SRV
                MOVE WSS-IDX-IEOV TO SCR-IPRO
           ELSE
                PERFORM GNS-PRO-SYS.
      *PTC fin
*% ELSE
           PERFORM GNS-PRO-SYS.
*% END
       FIN-EGR-FPEN-CIC.
           EXIT.

       EGR-FTER-CIC SECTION.
       INI-EGR-FTER-CIC.
           PERFORM CRG-TBL-ENG.
           MOVE WSS-IDX-IOPC TO SCR-IPRO.
           MOVE WSS-INST-FTER-CIC TO SCR-INST-EXT.
           MOVE WSS-PROG(SCR-IPRO) TO SYS-PROG.
           MOVE SCR-VARI TO SYS-CMMA.
           MOVE SCR-TCMA TO SYS-TCMA.
           MOVE SYS-XCTL TO SYS-CMND.
*% IF PGM_PTC
      *PTC ini
           IF SCR-OFRM-SRV
                MOVE WSS-IDX-IEOV TO SCR-IPRO
           ELSE
                PERFORM GNS-PRO-SYS.
      *PTC fin
*% ELSE
           PERFORM GNS-PRO-SYS.
*% END
       FIN-EGR-FTER-CIC.
           EXIT.

       EGR-FTER-CMN SECTION.
       INI-EGR-FTER-CMN.
           PERFORM CRG-TBL-ENG.
           MOVE WSS-IDX-IOPC TO SCR-IPRO.
           MOVE WSS-INST-FTER-CMN TO SCR-INST-EXT.
           MOVE WSS-PROG(SCR-IPRO) TO SYS-PROG.
           MOVE SCR-VARI TO SYS-CMMA.
           MOVE SCR-TCMA TO SYS-TCMA.
           MOVE SYS-XCTL TO SYS-CMND.
*% IF PGM_PTC
      *PTC ini
           IF SCR-OFRM-SRV
                MOVE WSS-IDX-IEOV TO SCR-IPRO
           ELSE
                PERFORM GNS-PRO-SYS.
      *PTC fin
*% ELSE
           PERFORM GNS-PRO-SYS.
*% END
       FIN-EGR-FTER-CMN.
           EXIT.

       SCR-INIT SECTION.
       INI-SCR-INIT.
           MOVE 3  TO FRM-PLIN.
           MOVE 19 TO FRM-NLIN.
           MOVE FRM-CLR-FRM TO FRM-CMND.
           PERFORM GNS-PRO-FRM.
           MOVE FRM-SINI-DBNF TO FRM-SINI.
           MOVE SCR-NMAP TO FRM-NAME.
           MOVE SCR-NLIB TO FRM-NLIB.
           MOVE EVC-FLD TO FRM-DFLD.
           MOVE FRM-INI TO FRM-CMND.
           PERFORM GNS-PRO-FRM.
       FIN-SCR-INIT.
           EXIT.
*% IF PGM_PQ
       PGM-EBR-ALL SECTION.                                             
       INI-PGM-EBR-ALL.                                                 
           MOVE FIO-EBR-ALL TO FIO-CMND.                                
           PERFORM COL-FIO-OPC.                                         
       FIN-PGM-EBR-ALL.                                                 
           EXIT.                                                        
*% END
       COPY COLBGMPT.
      *>>>>
*% END
*% IF EOF_PQ
      *<<<< EOF_PQ
       PRO-FLD-EVC SECTION.
       INI-PRO-FLD-EVC.
           MOVE FRM-CPIM-AEY TO FRM-NUM-DURV-ATR IN EVC-FLD.
           MOVE FRM-CPIM-AEY TO FRM-IND-UTDV-ATR IN EVC-FLD.
           MOVE FRM-CPIM-AEY TO FRM-NUM-SPVE-ATR IN EVC-FLD.
           MOVE FRM-CPIM-AEY TO FRM-IND-UTPV-ATR IN EVC-FLD.
           PERFORM PRO-OPC-EVC.
           PERFORM PRO-EVC-EVC.
           PERFORM PRO-PVC-EVC.
       FIN-PRO-FLD-EVC.
           EXIT.
       
       PRO-OPC-EVC SECTION.
       INI-PRO-OPC-EVC.
       FIN-PRO-OPC-EVC.
           EXIT.
       
       PRO-EVC-EVC SECTION.
       INI-PRO-EVC-EVC.
           MOVE FRM-CPIM-AEY TO EVC-NUM-IDLC-ATR IN EVC-FLD.
           MOVE FRM-CPIM-AEY TO EVC-NUM-VIGU-ATR IN EVC-FLD.
           MOVE FRM-CPIM-AEY TO EVC-FEC-FPVC-ATR IN EVC-FLD.
           MOVE FRM-CPIM-AEY TO EVC-NUM-DPVE-ATR IN EVC-FLD.
           MOVE FRM-CPIM-AEY TO EVC-MSC-TCVE-ATR IN EVC-FLD.
           MOVE FRM-CPIM-AEY TO EVC-NUM-DESD-ATR IN EVC-FLD.
           MOVE FRM-CPIM-AEY TO EVC-VAL-VENC-ATR IN EVC-FLD.
           MOVE FRM-CPIM-AEY TO EVC-NUM-SEVE-ATR IN EVC-FLD.
           MOVE FRM-CPIM-AEY TO EVC-IND-UTSV-ATR IN EVC-FLD.
           MOVE FRM-CPIM-AEY TO EVC-SGV-FVAR-ATR IN EVC-FLD.
           MOVE FRM-CPIM-AEY TO EVC-IND-CAUT-ATR IN EVC-FLD.
           MOVE FRM-CPIM-AEY TO EVC-IND-FVAR-ATR IN EVC-FLD.
       FIN-PRO-EVC-EVC.
           EXIT.

       PRO-PVC-EVC SECTION.
       INI-PRO-PVC-EVC.
       FIN-PRO-PVC-EVC.
           EXIT.

      *PTC-INI  (RRM) 26-NOV-2002                                       
       GET-PTC-PVC SECTION.
       INI-GET-PTC-PVC.
      *    MOVE POC-COD-IPVC IN POC TO PVC-CIC-IPVC IN PVC.
      *    MOVE FIO-GET-KEY TO FIO-CMND.
      *    PERFORM COL-FIO-PVC.
      *    IF FIO-STAT-OKS

      *XXXX     MOVE PVC-NUM-DVMI IN PVC TO PTC-EVC-FRM-NUM-DURV.
      *XXXX     MOVE POC-COD-IPVC IN POC TO PTC-EVC-PVC-CIC-IPVC.

      *XXXX     MOVE PVC-IND-DVMI IN PVC TO PTC-EVC-FRM-IND-UTDV.

           MOVE EVC-NUM-DPVC IN EVC TO EVC-NUM-DPVC IN EVC-FLD
           MOVE EVC-NUM-MPVC IN EVC TO EVC-NUM-MPVC IN EVC-FLD
           MOVE EVC-NUM-SPVC IN EVC TO EVC-NUM-SPVC IN EVC-FLD
           MOVE EVC-NUM-APVC IN EVC TO EVC-NUM-APVC IN EVC-FLD
           PERFORM GET-PER-FEC
           MOVE FRM-NUM-SPVE IN EVC-FLD TO PTC-EVC-FRM-NUM-SPVE
           MOVE FRM-IND-UTPV IN EVC-FLD TO PTC-EVC-FRM-IND-UTPV.
      *    MOVE PVC-NUM-SPMI IN PVC TO PTC-EVC-FRM-NUM-SPVE-EDT.

      *    MOVE PVC-IND-SPMI IN PVC TO PTC-EVC-FRM-IND-UTPV.
       FIN-GET-PTC-PVC.
           EXIT.
      *PTC-FIN  (RRM) 26-NOV-2002                                       
      *>>>>                                                             
                                                                        
       VRF-LEE-FRM SECTION.                                             
       INI-VRF-LEE-FRM.                                                 
           MOVE TSK-TERM-ALF TO QUE-TERM.                               
           MOVE PTC-EVC-TYPE-LFRM TO QUE-TYPE.                          
           MOVE PTC-EVC-LENG-LFRM TO QUE-LITM.                          
           MOVE 1 TO QUE-NITM.                                          
           MOVE QUE-GET TO QUE-CMND.                                    
           PERFORM GNS-PRO-QUE.                                         
           IF QUE-STAT = QUE-STAT-OKS                                   
               MOVE 'S' TO WSS-LEE-FRM-EVC.                             
       FIN-VRF-LEE-FRM.                                                 
           EXIT.                                                        
      * ISP INI  28-JAN-2004 13:37:42                                   
       BUSCA-DBIM-DBIP SECTION.                                         
       INI-BUSCA-DBIM-DBIP.                                             
           MOVE 'COL'  TO IDD-SAUX.                                     
           MOVE 'M'    TO IDD-GAUX.                                     
           MOVE SPACES TO IDD-RAUX.                                     
           MOVE 1 TO IDD-IAUX.                                          
           SET IDD-ITBL TO 1.                                           
           SEARCH IDD-VSIS VARYING IDD-IAUX                             
             AT END                                                     
               GO TO DBM-BUSCA-DBIM-DBIP                                
             WHEN IDD-DENT( IDD-ITBL ) = IDD-DAUX                       
               MOVE IDD-IENT( IDD-ITBL) TO WSS-DBNM                     
               MOVE IDD-IAUX            TO WSS-DBIM                     
               GO TO CON-BUSCA-DBIM-DBIP.                               
       DBM-BUSCA-DBIM-DBIP.                                             
           MOVE 0 TO WSS-DBNM.                                          
           MOVE 0 TO WSS-DBIM.                                          
       CON-BUSCA-DBIM-DBIP.                                             
           MOVE 'COL'  TO IDD-SAUX.                                     
           MOVE 'P'    TO IDD-GAUX.                                     
           MOVE SPACES TO IDD-RAUX.                                     
           MOVE 1 TO IDD-IAUX.                                          
           SET IDD-ITBL TO 1.                                           
           SEARCH IDD-VSIS VARYING IDD-IAUX                             
             AT END                                                     
               GO TO DBP-BUSCA-DBIM-DBIP                                
             WHEN IDD-DENT( IDD-ITBL ) = IDD-DAUX                       
               MOVE IDD-IENT( IDD-ITBL) TO WSS-DBNP                     
               MOVE IDD-IAUX            TO WSS-DBIP                     
               GO TO FIN-BUSCA-DBIM-DBIP.                               
       DBP-BUSCA-DBIM-DBIP.                                             
           MOVE 0 TO WSS-DBNP.                                          
           MOVE 0 TO WSS-DBIP.                                          
       FIN-BUSCA-DBIM-DBIP.                                             
           EXIT.                                                        
                                                                        
       INV-BD SECTION.                                                  
       INI-INV-BD.                                                      
                                                                        
           MOVE WSS-DBNM TO IDD-IENT( WSS-DBIP ).                       
           MOVE WSS-DBNP TO IDD-IENT( WSS-DBIM ).                       
                                                                        
       FIN-INV-BD.                                                      
           EXIT.                                                        
                                                                        
      * ISP FIN  28-JAN-2004 13:37:42                                   
      *>>>>
*% END
*% IF EOF_PU
      *<<<< EOF_PU
       RET-HDR-EVC SECTION.                                             
       INI-RET-HDR-EVC.                                                 
           PERFORM GET-FHOY.                                            
      *    Fecha Transaccion                                            
           MOVE HOY-FHOY TO EVC-FEC-FTRN IN EVC.                        
      *    Hora Transaccion                                             
           MOVE HOY-HHOY TO EVC-HRA-HRTR IN EVC.                        
      *    Codigo Origen transaccion                                    
      *<<<< NOT PGM_VMS                                                 
           MOVE SCR-OTRN TO EVC-COD-OTRN IN EVC.                        
      *    Autor Transaccion                                            
           MOVE SCR-USER TO EVC-COD-ATRN IN EVC.                        
      *>>>>                                                             
           IF SCR-CCPP = 'ING'                                          
               MOVE 'I' TO EVC-MSC-TACC IN EVC                          
               MOVE 'I' TO EVC-MSC-STAT IN EVC                          
           ELSE                                                         
           IF SCR-CCPP = 'MOD'                                          
               MOVE 'M' TO EVC-MSC-TACC IN EVC                          
               MOVE 'M' TO EVC-MSC-STAT IN EVC.                         
       FIN-RET-HDR-EVC.                                                 
           EXIT.                                                        

       PUT-OPC-EVC SECTION.
       INI-PUT-OPC-EVC.
           IF PGM-STAT-OPC-NUL
               GO TO FIN-PUT-OPC-EVC.
           IF NOT PGM-STAT-OPC-OKS
               PERFORM CLR-OPC-EVC
               GO TO FIN-PUT-OPC-EVC.
           MOVE OPC-MSC-TVOC IN OPC TO OPC-MSC-TVOC IN EVC-FLD.
           MOVE OPC-COD-TOOC IN OPC TO OPC-COD-TOOC IN EVC-FLD.
           MOVE OPC-COD-OFOC IN OPC TO OPC-COD-OFOC IN EVC-FLD.
      *BUS-MSC busca glosa de miscelaneo en tabla
           IF OPC-MSC-TVOC IN EVC-FLD > SPACES
               MOVE 'TAB' TO MSC-COD-SIST
               MOVE 'TVAL' TO MSC-COD-TMSC IN MSC
               MOVE OPC-MSC-TVOC IN EVC-FLD TO MSC-COD-CMSC IN MSC
               PERFORM BUS-MSC
               MOVE MSC-GLS-DESC IN MSC TO
                    FRM-GLS-TVOC IN EVC-FLD.
      *BUS-TAB busca glosa de codigo en tabla
           IF OPC-COD-TOOC IN EVC-FLD > SPACES
               MOVE 'TAB' TO TAB-COD-SIST
               MOVE 'TIO' TO TAB-COD-TTAB IN TAB
               MOVE OPC-COD-TOOC IN EVC-FLD TO TAB-COD-CTAB IN TAB
               PERFORM BUS-TAB
               MOVE TAB-GLS-DESC IN TAB TO
                    FRM-GLS-TOOC IN EVC-FLD.
      *BUS-OFI busca oficina en tablas
           IF OPC-COD-OFOC IN EVC-FLD > SPACES
               MOVE OPC-COD-OFOC IN EVC-FLD TO OFI-COD-OFIC IN OFI
               PERFORM BUS-OFI
               MOVE OFI-GLS-DESC IN OFI TO FRM-GLS-OFOC IN EVC-FLD.
      *<<<< FIN_PUT_OPC_EVC
      *BUS-TAB busca glosa de codigo en tabla
      * NO EXISTE OPC-COD-VCOC IN EVC-FLD
           MOVE 'TAB' TO TAB-COD-SIST.
           MOVE 'VLR' TO TAB-COD-TTAB IN TAB.
           MOVE OPC-COD-VCOC IN OPC TO TAB-COD-CTAB IN TAB.
           PERFORM BUS-TAB.
           MOVE TAB-GLS-DESC IN TAB TO FRM-GLS-VCOC IN EVC-FLD.
      *>>>>
       FIN-PUT-OPC-EVC.
           EXIT.
       PGM-EBR-ALL SECTION.                                             
       INI-PGM-EBR-ALL.                                                 
           MOVE FIO-EBR-ALL TO FIO-CMND.                                
           PERFORM COL-FIO-EVC.                                         
       FIN-PGM-EBR-ALL.                                                 
           EXIT.                                                        
      *OGB-INI 22-DIC-2014 BGT DIA MENOR A 1 TRIMESTRE
       VER-FEC-BGT-TRI SECTION.                                         
       INI-VER-FEC-BGT-TRI.                                             
           MOVE ZEROES               TO WSS-IND-SBGT IN WSS-VARI.
           IF WSS-FEC-FAXE NOT > SPACES
              GO TO FIN-VER-FEC-BGT-TRI.

           MOVE FEC-SUM-MES          TO FEC-CMND.
           MOVE WSS-CT3 IN WSS-CONS  TO FEC-NMES.
           MOVE OPC-NUM-DCOL IN OPC  TO FEC-ITM1.
           MOVE OPC-NUM-MCOL IN OPC  TO FEC-ITM2.
           MOVE OPC-NUM-SCOL IN OPC  TO FEC-ITM3.
           MOVE OPC-NUM-ACOL IN OPC  TO FEC-ITM4.
           MOVE FEC-FORM-FEC         TO FEC-FORM.
           PERFORM CAL-FEC.
           MOVE    FEC-FECH(1:2)    TO  WSS-NUM-DAXU IN WSS-VARI.
           MOVE    FEC-FECH(3:2)    TO  WSS-NUM-MAXU IN WSS-VARI.
           MOVE    FEC-FECH(5:2)    TO  WSS-NUM-SAXU IN WSS-VARI.
           MOVE    FEC-FECH(7:2)    TO  WSS-NUM-AAXU IN WSS-VARI.
           IF WSS-FEC-FAXE NOT <  WSS-FEC-FAXU IN WSS-VARI
              MOVE WSS-CT-1  TO WSS-IND-SBGT IN WSS-VARI.
       FIN-VER-FEC-BGT-TRI.                                             
           EXIT.
OGB   *
       CHECK-BGT-DVC SECTION.
       INI-CHECK-BGT-DVC.
           MOVE ZEROES TO WSS-IND-BGTC.
           MOVE SPACES TO WSS-FEC-FAXE.

           MOVE ZEROES TO WSS-DVC IN WSS-VARI.
           MOVE SPACES TO TAB-COD-CTAB IN TAB.
           MOVE WSS-GLS-SCOL TO FIO-SIST.
           MOVE SCR-CAI-IOPC IN SCR-VARI TO OPC-CAI-IOPC IN OPC.
           MOVE SCR-IIC-IOPC IN SCR-VARI TO OPC-IIC-IOPC IN OPC.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM COL-FIO-OPC.
           IF FIO-STAT-OKS
              MOVE WSS-GLS-SCOL TO TAB-COD-SIST
              MOVE WSS-GLS-TBGT TO TAB-COD-TTAB IN TAB
              MOVE OPC-COD-COOC IN OPC TO TAB-COD-CTAB IN TAB
              MOVE FIO-GET-KEY TO FIO-CMND
              PERFORM GNS-FIO-TAB
              IF FIO-STAT-OKS AND TAB-IND-VIGE IN TAB = WSS-IND-SCTE
                 MOVE WSS-CT-1    TO WSS-IND-BGTC.

      *BUSCA EVC DE CAPITAL PARA OBTENER FECHA
           IF WSS-IND-BGTC = WSS-CT-1
              MOVE EVC-CAI-IOPC IN EVC-FLD TO EVC-CAI-IOPC IN EVC
              MOVE EVC-IIC-IOPC IN EVC-FLD TO EVC-IIC-IOPC IN EVC
              MOVE ZEROES                  TO EVC-NUM-IEVC IN EVC
              MOVE FIO-GET-NLS TO FIO-CMND
              PERFORM COL-FIO-EVC
              IF  ( FIO-STAT-OKS AND
                       EVC-CAI-IOPC IN EVC-FLD = EVC-CAI-IOPC IN EVC AND
                       EVC-IIC-IOPC IN EVC-FLD = EVC-IIC-IOPC IN EVC )
                 IF EVC-VAL-VENC IN EVC > ZEROES
                    MOVE EVC-FEC-FPVC IN EVC TO WSS-FEC-FAXE.

       FIN-CHECK-BGT-DVC.
           EXIT.
      *
      *OGB-FIN 22-DIC-2014 BGT DIA MENOR A 1 TRIMESTRE
*% END
