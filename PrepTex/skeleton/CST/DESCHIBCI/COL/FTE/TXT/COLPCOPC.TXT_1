*%! Codigo adicional
*% IF FEC
      *<<<< FEC
       DATE-WRITTEN. 30-JAN-1997 (ULTIMA MODIFICACION).
      *>>>>
*% END
*% IF PGM_CHI AND PGM_BCI
*%     PGM_PTC = TRUE
*% END
*% IF FIN_SCR_VARI
      *<<<< FIN_SCR_VARI
       COPY GNSWGRQA REPLACING ==01  ADR-REQA== BY ==02  SCR-RQA1==.
       COPY GNSWGRQA REPLACING ==01  ADR-REQA== BY ==02  SCR-RQA2==.
           02 SCR-KEY-IRDC                         PIC X(04).
           02 SCR-IND-MRDC                         PIC X(01).
           02 SCR-IND-MITR                         PIC X(01).
           02 SCR-IND-MCOM                         PIC X(01).
           02 SCR-IND-MCYA                         PIC X(01).
           02 SCR-MSC-TCAN                         PIC X(01).
           02 SCR-COD-PLZO                         PIC X(06).
              88 SCR-COD-PLZO-B90 VALUE 'C1' 'C2' 'USAB90'.
      *>>>>
*% END
*% IF WSS
      *<<<< WSS
*% IF PGM_PTC
      *PTC ini
       COPY GNSWGQUE.
      *PTC fin
*% END
       COPY COLWGPLP.
      *DAD ini  21-JUL-1992
       COPY COLWGLAV.
      *DAD fin  21-JUL-1992
      *JPA ini  22-MAR-1995
       COPY COLWGLDC.
      *JPA fin  22-MAR-1995

       01  WSS-VARI.
      *RVM-CST-INI 30-JAN-1997
           03  WSS-DAT-POS45.
               05  FILLER                             PIC X(02).
               05  WSS-COD-POS45                      PIC X(01).
      *RVM-CST-FIN 30-JAN-1997
      *SMC-INI 24.08.1993
           03 WSS-EVC-TCFP                        PIC X(01).
           03 WSS-SWT-PEVC                        PIC X(01).
           03 WSS-RCE-DISP.
              05 WSS-NUM-VCTE                     PIC 9(03).
              05 WSS-NUM-PRDO                     PIC 9(03).
              05 FILLER                           PIC X(02).
           03 WSS-COD-LRCE                        PIC X(01).
      *SMC-FIN 24.08.1993

      *Dado el uso del modulo de manejo BQ
           03 WSS-CAI-ICIC.
              05 WSS-COD-TCIC                     PIC X(01).
              05 WSS-COD-CCIC                     PIC X(03).
           03  WSS-MSC-TCAN                       PIC X(01).
      * ALD-BCI/14.06.1996 
           03  WSS-ROV-RENO   COMP-3 VALUE ZEROES PIC S9(11)V9(04).
           03  WSS-VAL-DIFE   COMP-3 VALUE ZEROES PIC  9(11)V9(04).
           03  WSS-VAL-PASO          VALUE ZEROES PIC  9(11)V9(04).
      * ALD-BCI/14.06.1996 
           03  WSS-SGV-RENO   COMP-3 VALUE ZEROES PIC S9(11)V9(04).
           03  RCAN-CAN-KEY-ICAN                  PIC X(15).
           03  WSS-CPT-NOMB.
               05  WSS-CPT-DESC                   PIC X(40).
               05  WSS-CPT-IOPV                   PIC X(12).
               05  WSS-CPT-DATA                   PIC X(40).
           03  WSS-CPT-NOMB-R REDEFINES WSS-CPT-NOMB PIC X(92).
           03  WSS-CIC-IOPV                       PIC X(12).
      *
      *DAD ini  31-MAR-1994   (Memo.26-01-94 pto.2)
           03  WSS-CMND                           PIC 9(04).
      *DAD fin  31-MAR-1994
      *DAD ini  21-JUL-1992
           03 WSS-CIC-ILDC.
              05 WSS-CAI-ILDC                     PIC X(04).
              05 WSS-IIC-ILDC                     PIC 9(08).
      *DAD fin  21-JUL-1992
      *DAD ini  25-JUL-1991
           03  WSS-CIC-KEEP                       PIC X(12).
      *ALD-BCI-INI/08.09.1995
           03  WSS-VAL-TMXC         VALUE 'S'     PIC X(01).
      *ALD-BCI-FIN/08.09.1995
           03  ORG-FEC-FCOL.
               05  ORG-NUM-SCOL                   PIC 9(02).
               05  ORG-NUM-ACOL                   PIC 9(02).
               05  ORG-NUM-MCOL                   PIC 9(02).
               05  ORG-NUM-DCOL                   PIC 9(02).
      *DAD fin  25-JUL-1991
           03  WSS-NTRN              VALUE SPACES PIC X(04).
           03  WSS-CMSG.
               05 WSS-CMS1                        PIC X(03).
               05 WSS-CMS2                        PIC X(04).
               05 WSS-CMS3                        PIC X(05).
           03  WSS-MEN1.
               05  WSS-MEN1-1                     PIC X(16).
               05  WSS-MEN1-2                     PIC X(24).
      *RBG INI Variable para recuperar las llaves de la DCC  
           03 WSS-MEN3                            PIC X(40).
      *RBG FIN
           03 WSS-VFIN-VEZ                VALUE 0 PIC 9(01).
              88 WSS-VFIN-PRIMERA-VEZ     VALUE 0.
           03 WSS-IKA1                  VALUE ' ' PIC X(01).
              88 WSS-IKA1-YES           VALUE 'S'.
           03 WSS-SUMAR-INTERES         VALUE 'S' PIC X(01).
              88 WSS-SUMAR-INTERES-SI   VALUE 'S'.
           03 WSS-CVI-VKA1              COMP-3    PIC 9(11)V9(05).
           03 WSS-CVI-VKCC              COMP-3    PIC 9(11)V9(05).
           03 WSS-CVI-VFCC              COMP-3    PIC 9(11)V9(05).
           03 WSS-VAL-VIFI              COMP-3    PIC 9(11)V9(05).
      *HPM ini   Variable para recalcular VEN-VAL-CAPI
           03  WSS-VAL-CAPI             COMP-3    PIC 9(11)V9(04).
      *HPM fin
           03 WSS-CMP-VIFI              COMP-3    PIC 9(11)V9(04).
           03 WSS-IEFI            VALUE SPACES    PIC X(01).
           03 WSS-IETV            VALUE SPACES    PIC X(01).
      *numero de estructuras 'IC', 'IN', 'IF', 'FE'
           03 WSS-NSAM                    VALUE 0 PIC 9(03).
      *numero de estructuras 'IO', 'CE', 'CO', 'FO' 'FP'
           03 WSS-NCAM                    VALUE 0 PIC 9(03).
      *numero de estructuras CO
           03 WSS-NECO                    VALUE 0 PIC 9(03).
      *numero de estructuras FO
           03 WSS-NEFO                    VALUE 0 PIC 9(03).
      *Indicador de estructura FO
           03 WSS-IEFO                            PIC X(01).
      *numero de estructuras FI
           03 WSS-NEFI                    VALUE 0 PIC 9(01).
           03 WSS-C1EV                            PIC X(02).
              88 WSS-C1EV-SAM     VALUE 'IC' 'IN' 'IF' 'FE'.
              88 WSS-C1EV-CAM     VALUE 'IO' 'CE' 'CO' 'FO' 'FP'.
      *ALD/22-AUG-1988
           03  WSS-TOT-RCAN   VALUE ZEROES        PIC 9(04).
           03  WSS-I                              PIC 9(02).
           03  WSS-NUM-DIGT                       PIC 9(02).
           03  WSS-COD-DIGT                       PIC X(02).
           03  WSS-MEN2.
               05  FILLER            VALUE SPACES PIC X(01).
               05  WSS-NUM-VAL1-EDT                   PIC ----.
               05  FILLER            VALUE SPACES PIC X(01).
               05  WSS-IND-DMA1                      PIC X(01).
               05  FILLER            VALUE SPACES PIC X(01).
               05  WSS-GLS-GUI2                      PIC X(01).
               05  FILLER            VALUE SPACES PIC X(01).
               05  WSS-NUM-VAL2-EDT                   PIC ----.
               05  FILLER            VALUE SPACES PIC X(01).
               05  WSS-IND-DMA2                      PIC X(01).
           03  PGM-STAT-POC          VALUE '23'   PIC X(02).              
               88  PGM-STAT-POC-OKS  VALUE '00'.                             
               88  PGM-STAT-POC-NUL  VALUE '  '.                             
           03  WSS-NUM-ACTI                       PIC 9(01).
           03  WSS-NUM-COTO                       PIC 9(01).
           03  WSS-COD-CAUX.
               05  WSS-COD-TOOC                   PIC X(03).
               05  WSS-COD-AOOC                   PIC X(03).
           03  WSS-NUM-TVEN                       PIC 9(03).
           03  WSS-VAL-TEVC             COMP-3    PIC 9(11)V9(05).
           03  WSS-VAL-TEFI             COMP-3    PIC 9(11)V9(05).
           03  WSS-VAL-SCYA             COMP-3    PIC 9(11)V9(05).
           03  WSS-CVI-TCAP             COMP-3    PIC 9(11)V9(05).
           03  WSS-CVI-IDNI             COMP-3    PIC 9(11)V9(04).
           03  WSS-CVI-VINT             COMP-3    PIC 9(11)V9(04).
           03  WSS-VAL-TCAP             COMP-3    PIC 9(11)V9(05).
           03  WSS-VAL-TVEN             COMP-3    PIC 9(11)V9(05).
           03  WSS-VAL-NDLC             COMP-3    PIC 9(11)V9(05).
           03  WSS-NUM-PDIR             COMP-3    PIC 9(11)V9(05).
           03  WSS-NUM-PIND             COMP-3    PIC 9(11)V9(05).
           03  WSS-NUM-FALF                   PIC  --.---.--9,99999.
           03  WSS-NUM-FEDT                   PIC  --.---.--9,99999.
           03  WSS-VAL-CRED   COMP-3 VALUE ZEROES PIC 9(11)V9(04).
           03  WSS-IND-TMON          VALUE SPACES PIC X(01).
           03  WSS-IND-TMMN          VALUE 'N'    PIC X(01).
           03  WSS-IND-TMMX          VALUE 'E'    PIC X(01).
      * RBG  29-NOV-1995 
           03  WSS-VAL-TAS                        PIC 9(2)V9(06).
           03  WSS-VAL-IVA                        PIC 9(2)V9(04).
           03  WSS-VAL-MON1                       PIC 9(11)V9(06).
           03  WSS-VAL-MON2                       PIC 9(11)V9(06).
           03  WSS-VAL-MON3                       PIC 9(11)V9(06).
           03  WSS-VAL-MON4          VALUE ZEROES PIC 9(11)V9(04).    
           03  WSS-GLS-ABRV                       PIC X(5).
           03  WSS-NUM-ABRV REDEFINES WSS-GLS-ABRV PIC 9(5).
      * RBG  29-NOV-1995 
      *
           03  WSS-GLS-DAT1          VALUE SPACES PIC X(01).
           03  BUS-POR-KEYS          VALUE SPACES PIC X(01).
           03  BUS-POR-CLTE          VALUE 'C'    PIC X(01).
           03  WSS-CIC-ICLI                       PIC X(12).
           03  WSS-KEY-DISP.
               05  WSS-CAI-DISP                   PIC X(04).
               05  WSS-IIC-DISP                   PIC 9(08).
           03  WSS-MRDC              VALUE 0      PIC 9(01).
               88  WSS-MISMO-RDC     VALUE 0.
               88  WSS-OTRO-RDC      VALUE 1.
           03  WSS-MISMO             VALUE 0      PIC 9(01).
           03  WSS-OTRO              VALUE 1      PIC 9(01).
           03  WSS-CIC-IMPU                       PIC X(04).
           03  WSS-VAL-IMPU   COMP-3 VALUE 0      PIC 9(11)V9(04).
           03  WSS-AUX-IMPU   COMP-3 VALUE 0      PIC 9(11)V9(04).
           03  WSS-VAL-GNOT   COMP-3 VALUE 0      PIC 9(11)V9(04).

           03  WSS-SGV-LIQU          VALUE +0     PIC S9(13)V9(05).
      *                             SIGN LEADING SEPARATE.
           03  WSS-SGV-LIQU-ALF                   PIC X(24).
           03  WSS-SGV-LIQU-EDT REDEFINES WSS-SGV-LIQU-ALF
                                     PIC --.---.---.---.---,-----.

           03  WSS-NUM-TABN          VALUE 0      PIC 9(03).
           03  WSS-NUM-TABZ          VALUE 0      PIC 9(03).
           03  WSS-INTR                           PIC X(01).
           03  WSS-KEY-ICYA.
               05  WSS-CIC-IOPC                   PIC X(12).
               05  WSS-NUM-ICAN                   PIC X(03).
               05  WSS-NUM-ICYA                   PIC 9(01).
      *    03  WSS-KEY-IEVC                       PIC X(15).
           03  WSS-FEC-FPVC VALUE ZEROES.
               05  WSS-NUM-SPVC                   PIC 9(02).
               05  WSS-NUM-APVC                   PIC 9(02).
               05  WSS-NUM-MPVC                   PIC 9(02).
               05  WSS-NUM-DPVC                   PIC 9(02).
           03  WSS-FEC-FIMV VALUE ZEROES.
               05  WSS-NUM-SIMV                   PIC 9(02).
               05  WSS-NUM-AIMV                   PIC 9(02).
               05  WSS-NUM-MIMV                   PIC 9(02).
               05  WSS-NUM-DIMV                   PIC 9(02).
           03  WSS-FEC-FAUX VALUE ZEROES.
               05  WSS-NUM-SAUX                   PIC 9(02).
               05  WSS-NUM-AAUX                   PIC 9(02).
               05  WSS-NUM-MAUX                   PIC 9(02).
               05  WSS-NUM-DAUX                   PIC 9(02).
           03  WSS-MSC-TCVE                       PIC X(02).
           03  WSS-COD-PESO                       PIC X(06).
           03  WSS-PESO                 VALUE ' ' PIC X(01).
               88 WSS-PESO-SI           VALUE 'S'.
               88 WSS-PESO-NO           VALUE 'N'.
      *
           03  WSS-NUM-VCVG                       PIC 9(03).
      *    03  WSS-AEVC                           PIC X(105).
           03  WSS-AXSV                           PIC 9(04).
           03  WSS-AXUS                           PIC X(01).
           03  WSS-AXSP                           PIC 9(04).
           03  WSS-AXUP                           PIC X(01).
           03  WSS-AXTT.
               05 WSS-BCTI                        PIC X(01).
               05 WSS-PBTI                        PIC X(01).
               05 WSS-BPBT                        PIC X(01).
               05 WSS-SPBT                        PIC X(01).
               05 WSS-CVTI                        PIC X(03).
               05 WSS-TFPR                        PIC X(01).
               05 WSS-PREP                        PIC 9(03).
               05 WSS-UTPR                        PIC X(01).
           03  WSS-IETB              VALUE SPACES PIC X(01).
           03  WSS-TIMC                    COMP   PIC 9(03)V9(08).
           03  WSS-TTMC.
               05 WSS-TTM1                        PIC X(01).
               05 WSS-TTM2                        PIC X(01).
               05 WSS-TTM3                        PIC X(10).
           03  WSS-CMMC              VALUE SPACES PIC X(01).
           03  WSS-TMAX                    COMP   PIC 9(03)V9(08).
           03  WSS-TMXC                    COMP   PIC 9(03)V9(08).
           03  WSS-TB90                    COMP   PIC 9(03)V9(08).
           03  WSS-TS90                    COMP   PIC 9(03)V9(08).
           03  WSS-PLZO                           PIC X(12).
               88 WSS-PLZO-B90              VALUE 'C1' 'C2'.
           03  WSS-VDLC.
               05  WSS-DLC-MIPL        OCCURS 50  PIC X(01).
               05  WSS-DLC-TINT COMP   OCCURS 50  PIC S9(03)V9(06).
               05  WSS-DLC-NDLC COMP-3 OCCURS 50  PIC 9(11)V9(04).
               05  WSS-VAL-SEVD COMP-3 OCCURS 50  PIC 9(11)V9(04).
           03  WSS-NUM-MDLC            VALUE 0    PIC 9(04).
           03  WSS-IDLC         COMP              PIC 9(04).
           03  WSS-LDLC         COMP VALUE 50     PIC 9(04).
           03  WSS-EEVC         OCCURS 50.
               05  WSS-REVC                       PIC X(105).
               05  WSS-SPVE                       PIC 9(04).
               05  WSS-UTPV                       PIC X(01).
               05  WSS-SEVE                       PIC 9(04).
               05  WSS-UTSV                       PIC X(01).
               05  WSS-VIGU                       PIC 9(03).
               05  WSS-FPVC.
                   07  WSS-SPVC                   PIC 9(02).
                   07  WSS-APVC                   PIC 9(02).
                   07  WSS-MPVC                   PIC 9(02).
                   07  WSS-DPVC                   PIC 9(02).
               05  WSS-FFPV.
                   07  WSS-SFPV                   PIC 9(02).
                   07  WSS-AFPV                   PIC 9(02).
                   07  WSS-MFPV                   PIC 9(02).
                   07  WSS-DFPV                   PIC 9(02).
               05  WSS-DVEN                       PIC 9(02).
           03  WSS-LEFO                 VALUE  50 PIC 9(02).
           03  WSS-MEFO                           PIC 9(02).
           03  WSS-FAVC.
               05  WSS-SAVC                       PIC 9(02).
               05  WSS-AAVC                       PIC 9(02).
               05  WSS-MAVC                       PIC 9(02).
               05  WSS-DAVC                       PIC 9(02).
           03  WSS-FMVC.
               05  WSS-SMVC                       PIC 9(02).
               05  WSS-AMVC                       PIC 9(02).
               05  WSS-MMVC                       PIC 9(02).
               05  WSS-DMVC                       PIC 9(02).
           03  WSS-IMVC                           PIC 9(02).
      *
           03  WSS-USEP                           PIC X(01).
           03  WSS-VSEP                      COMP PIC 9(04).
           03  WSS-FVNC.
               05  WSS-SVNC                       PIC 9(02).
               05  WSS-AVNC                       PIC 9(02).
               05  WSS-MVNC                       PIC 9(02).
               05  WSS-DVNC                       PIC 9(02).
           03  WSS-FMIV.
               05  WSS-SMIV                       PIC 9(02).
               05  WSS-AMIV                       PIC 9(02).
               05  WSS-MMIV                       PIC 9(02).
               05  WSS-DMIV                       PIC 9(02).
           03  WSS-FMAV.
               05  WSS-SMAV                       PIC 9(02).
               05  WSS-AMAV                       PIC 9(02).
               05  WSS-MMAV                       PIC 9(02).
               05  WSS-DMAV                       PIC 9(02).
           03  WSS-NEEV                      COMP PIC 9(04).
           03  WSS-FPPC.
               05  WSS-SPPC                       PIC 9(02).
               05  WSS-APPC                       PIC 9(02).
               05  WSS-MPPC                       PIC 9(02).
               05  WSS-DPPC                       PIC 9(02).
           03  WSS-FPPI.
               05  WSS-SPPI                       PIC 9(02).
               05  WSS-APPI                       PIC 9(02).
               05  WSS-MPPI                       PIC 9(02).
               05  WSS-DPPI                       PIC 9(02).
           03  WSS-FIPC.
               05  WSS-SIPC                       PIC 9(02).
               05  WSS-AIPC                       PIC 9(02).
               05  WSS-MIPC                       PIC 9(02).
               05  WSS-DIPC                       PIC 9(02).
           03  WSS-FSPC.
               05  WSS-SSPC                       PIC 9(02).
               05  WSS-ASPC                       PIC 9(02).
               05  WSS-MSPC                       PIC 9(02).
               05  WSS-DSPC                       PIC 9(02).
           03  WSS-FIPI.
               05  WSS-SIPI                       PIC 9(02).
               05  WSS-AIPI                       PIC 9(02).
               05  WSS-MIPI                       PIC 9(02).
               05  WSS-DIPI                       PIC 9(02).
           03  WSS-FSPI.
               05  WSS-SSPI                       PIC 9(02).
               05  WSS-ASPI                       PIC 9(02).
               05  WSS-MSPI                       PIC 9(02).
               05  WSS-DSPI                       PIC 9(02).
           03  WSS-FUVC.
               05  WSS-SUVC                       PIC 9(02).
               05  WSS-AUVC                       PIC 9(02).
               05  WSS-MUVC                       PIC 9(02).
               05  WSS-DUVC                       PIC 9(02).
           03  WSS-NEUV                           PIC 9(03).
           03  WSS-IVUV              VALUE SPACES PIC X(01).
               88 WSS-ULTIMO-VENC-EN-ZERO VALUE 'Z'.
           03  WSS-EPOC              VALUE 'N'    PIC X(01).
           03  WSS-OPEC                           PIC X(08).
           03  WSS-MIPL                           PIC X(12).
           03  WSS-MIPL-P                         PIC X(12).
      *JSS
           03  WSS-VEDT-ALF                       PIC X(24).
           03  WSS-VEDT-EDT REDEFINES WSS-VEDT-ALF
                                     PIC --.---.---.---.---,-----.
      *JSS-NEW
           03  WSS-LEVC COMP             VALUE 10 PIC 9(02).
           03  WSS-MEVC COMP             VALUE 0  PIC 9(02).
           03  WSS-IEVC COMP             VALUE 0  PIC 9(02).
           03  WSS-EVC1 COMP             VALUE 0  PIC 9(02).
           03  WSS-TCFO COMP             VALUE 0  PIC 9(02).
           03  WSS-TCCO COMP             VALUE 0  PIC 9(02).
           03  WSS-VCVC OCCURS 10.
               05  WSS-BCCR                       PIC X(01).
               05  WSS-VICR                       PIC X(01).
           03  WSS-FMIN.
               05  WSS-SMIN                       PIC 9(02).
               05  WSS-AMIN                       PIC 9(02).
               05  WSS-MMIN                       PIC 9(02).
               05  WSS-DMIN                       PIC 9(02).
           03  WSS-J                              PIC 9(02).
           03  WSS-K                              PIC 9(02).
           03  WSS-L                              PIC 9(02).
       01  REG.
           02 REG-FILL                            PIC X(01).
      * COPY COLBREVC REPLACING ==01  EVC.== BY
      *                         ==02 REG-EVC OCCURS 10.==.
       COPY COLBREVC REPLACING ==01  EVC== BY
                               ==02 REG-EVC OCCURS 10==.
           02 WSS-FPVF OCCURS 10.
              03 WSS-SPVF  PIC 9(02).
              03 WSS-APVF  PIC 9(02).
              03 WSS-MPVF  PIC 9(02).
              03 WSS-DPVF  PIC 9(02).
      *JSS-NEW

      *JSS-TRC
      * COPY GNSWGDSP.
      *JSS
       01  SCR-INST-BRW              VALUE 'BRW'  PIC X(03).
      *
      *Registros de GENESIS
       COPY GNSBRTAB.
      *Registros de TABLAS
       COPY TABBROFI.
       COPY TABBRUSR.
      *ALD/22-AUG-1988
       COPY TABBRCAM.
      *Registros de CLIENTES
       COPY SGCBRDBC.
      *RVM-CST-INI 14-OCT-1996
       COPY SGCBRDCP.
       COPY SGCBRDCE.
      *RVM-CST-FIN 14-OCT-1996
      *Registros de Colocaciones
       COPY COLBRCAN.
       COPY COLBRRDC.
       COPY COLBRITR.
       COPY COLBRCOM.
       COPY COLBRCYA.
       COPY COLBRAUT.
       COPY COLBRROV.
       COPY COLBRDLC.
       COPY COLBREVC.
       COPY COLBRVEN.
       COPY COLBRIMP.
       COPY COLBRICG.
       COPY COLBRNTR.
       COPY COLBRTOC.
       COPY COLBRPOC.
       COPY COLBRRCE.
       COPY COLBRRCV.
      *
       COPY COLWGUVD.
       COPY COLWGVIN.

       COPY COLWGSTO.
      *
       COPY GNSWGFEC.
       COPY GNSWGHOY.
       COPY GNSWGCPT.
      *
       COPY GNSWGIDC.
       COPY GNSWCVRF.
       COPY GNSWVVRF.
      *
      *SMC-INI 09.09.1993
       COPY COLWGINT.
      *SMC-FIN 09.09.1993
       COPY GNSWGCVI.
      *
       COPY GNSWGPES.
       COPY SGCBRRCO.
       COPY SGCBROPE.
       COPY SGCBRRCD.
      *
      *DAD ini  02-AUG-1994       (Manejo de LDC)
       COPY LDCWGCCU.
       COPY LDCWGCEG.
       COPY SGCWGGRP.
       COPY SGCBRREC.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-REC-REQA==.
      *DAD fin  02-AUG-1994
      *RVM-CST-INI 6-AUG-1996
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-SDC-REQA==.
       COPY SGCBRDCC REPLACING ==01  DCC== BY ==01  SDC==.
      *RVM-CST-FIN 6-AUG-1996
      *>>>>
*% END
*% IF WSS_DTC
      *<<<< WSS_DTC
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-TAB-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-OFI-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-USR-REQA==.
      *ALD/22-AUG-1988
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-CAM-REQA==.
      *
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-DBC-REQA==.
      *RVM-CST-INI 14-OCT-1996
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-DCP-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-DCE-REQA==.
      *RVM-CST-FIN 14-OCT-1996
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-RDC-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-ITR-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-COM-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-CYA-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-AUT-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-ROV-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-DLC-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-EVC-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-VEN-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-IMP-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-ICG-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-NTR-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-TOC-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-RCO-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-OPE-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-RCD-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-POC-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-RCE-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-RCV-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-AUX-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-CAN-REQA==.
      *>>>>
*% END
*% CMA_USR = TRUE
*% IF CMA
      *<<<< CMA
           02 FILLER                      PIC X(3000).
      *>>>>
*% END
*% IF INI_FIO
      *<<<< INI_FIO
*% IF PGM_PTC
      *PTC ini
           PERFORM GNS-ERR-QUE.
      *PTC fin
*% END
           MOVE +3000 TO SCR-TCMA.
           IF SCR-DESDE-CMN
               MOVE SPACES TO SCR-RQA1
                              SCR-RQA2.
      *>>>>
*% END
*% IF FIN_PRO_CONF
      *<<<< FIN_PRO_CONF
      *Se mueve la transaccion del programa liquidador
           MOVE 'KO44' TO WSS-NTRN.
      *>>>>
*% END
*% IF SCR_EXIT
      *<<<< SCR_EXIT
           IF WSS-NTRN > SPACES
               MOVE WSS-NTRN TO SYS-NTRN.
      *>>>>
*% END
*% IF ABT_CMN_ACC
      *<<<< ABT_CMN_ACC
               MOVE 'COL' TO MSG-COD-SIST
               MOVE 'OPC    NOLIQ' TO MSG-COD-MENS
               PERFORM GET-MSG
               MOVE  MSG-GLS-DESC TO FRM-MENS
      *>>>>
*% END
*% IF INI_CMN_ACC
      *<<<< INI_CMN_ACC
           MOVE 0  TO WSS-VAL-TEVC
                      WSS-VAL-SCYA
                      WSS-VAL-VIFI.
      *
           MOVE 'TAB'  TO FIO-SIST.
           MOVE 'TVAL' TO MSC-CIC-TMSC IN MSC.
           MOVE '0'    TO MSC-CIC-CMSC IN MSC.
           MOVE 'MSC-CIC-TABL' TO FIO-AKEY.
           MOVE FIO-GET-KEY    TO FIO-CMND.
           PERFORM GNS-FIO-MSC.
           IF NOT FIO-STAT-OKS
               MOVE 'OPCTVALCICNX' TO MSG-COD-MENS
               MOVE MSC-CIC-TABL   TO FRM-MEN2
               GO TO MSG-CMN-ACC.
           IF OPC-MSC-TVOC IN OPC-FLD = MSC-COD-CMSC IN MSC
              MOVE WSS-IND-TMMN IN WSS-VARI TO WSS-IND-TMON IN WSS-VARI
           ELSE
              MOVE WSS-IND-TMMX IN WSS-VARI TO WSS-IND-TMON IN WSS-VARI.
      *
           MOVE SPACES TO WSS-OPEC.
           MOVE OPC-COD-TOOC IN OPC-FLD TO TOC-COD-TOCR IN TOC.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM COL-FIO-TOC.
           IF NOT FIO-STAT-OKS
               MOVE 'OPCTOOCNEX'        TO MSG-COD-MENS
               MOVE TOC-COD-TOCR IN TOC TO FRM-MEN2
               GO TO MSG-CMN-ACC
           ELSE
               MOVE 'COL'               TO MSC-COD-SIST FIO-SIST
               MOVE 'OPEC'              TO MSC-COD-TMSC IN MSC
               MOVE TOC-MSC-OPEC IN TOC TO MSC-COD-CMSC IN MSC
               MOVE FIO-GET-KEY TO FIO-CMND
               PERFORM GNS-FIO-MSC
               IF NOT FIO-STAT-OKS
                   MOVE 'TOCOPECNEX'        TO MSG-COD-MENS
                   MOVE MSC-COD-TABL IN MSC TO FRM-MEN2
                   GO TO MSG-CMN-ACC
               ELSE
                   MOVE MSC-CIC-CMSC IN MSC TO WSS-OPEC.
      *
      *Busca codigo de tabla asociado a CIC='MIPLP'
           MOVE 'COL'  TO FIO-SIST.
           MOVE 'MIPL' TO MSC-CIC-TMSC IN MSC.
           MOVE 'P'    TO MSC-CIC-CMSC IN MSC.
           MOVE 'MSC-CIC-TABL' TO FIO-AKEY.
           MOVE FIO-GET-KEY    TO FIO-CMND.
           PERFORM GNS-FIO-MSC.
           IF NOT FIO-STAT-OKS
               MOVE 'CICMIPLPNX'        TO MSG-COD-MENS
               MOVE MSC-CIC-TABL IN MSC TO FRM-MEN2
               GO TO MSG-CMN-ACC.
           MOVE MSC-COD-CMSC IN MSC TO WSS-MIPL-P.
      *
           MOVE 'TAB'  TO TAB-COD-SIST FIO-SIST.
           MOVE 'VLR'  TO TAB-CIC-TTAB IN TAB.
           MOVE '0999' TO TAB-CIC-CTAB IN TAB.
           MOVE 'TAB-CIC-TABL' TO FIO-AKEY.
           MOVE FIO-GET-KEY    TO FIO-CMND.
           PERFORM GNS-FIO-TAB.
           IF NOT FIO-STAT-OKS
               MOVE FIO-BCK-OUT TO FIO-CMND
               PERFORM COL-FIO-OPC
               MOVE 'VLRCICN0999' TO MSG-COD-MENS
               GO TO MSG-CMN-ACC.
           MOVE TAB-COD-CTAB IN TAB TO WSS-COD-PESO.
           IF OPC-COD-VCOC IN OPC-FLD = TAB-COD-CTAB IN TAB
               MOVE 'S' TO WSS-PESO
           ELSE
               MOVE 'N' TO WSS-PESO.

           MOVE SPACES TO MSG-COD-MENS.
           PERFORM KEY-OPC-OPC.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM COL-FIO-OPC.
           IF NOT FIO-STAT-OKS
               MOVE FIO-MENS    TO FRM-MENS
               MOVE FIO-BCK-OUT TO FIO-CMND
               PERFORM COL-FIO-OPC
               GO TO FIN-CMN-ACC.
      *PARA DEJAR CON DATOS DE PANTALLA EL REGISTRO OPC.
           PERFORM RET-OPC-OPC.

           IF OPC-IND-VSTR IN OPC NOT = 'S'
               PERFORM PUT-VFCT
               IF MSG-COD-MENS > SPACES
                   GO TO MSG-CMN-ACC
               ELSE
      *HPM ini
                   PERFORM PRO-ACT-VEN
                   IF MSG-COD-MENS > SPACES
                       GO TO MSG-CMN-ACC
                   ELSE
      *HPM fin
                      PERFORM PRO-ACT-CYA
                      IF MSG-COD-MENS > SPACES
                          GO TO MSG-CMN-ACC
                      ELSE
                          GO TO OPC-CMN-ACC.
      *JSS-NEW
           PERFORM BUS-REVC.
           IF MSG-COD-MENS > SPACES
               MOVE FIO-BCK-OUT TO FIO-CMND
               PERFORM COL-FIO-OPC
               GO TO MSG-CMN-ACC.
      *JSS 30-APR-1991 19:04:45
           PERFORM BUS-PZO-CTBL.
           IF MSG-COD-MENS > SPACES
               MOVE FIO-BCK-OUT TO FIO-CMND
               PERFORM COL-FIO-OPC
               GO TO MSG-CMN-ACC.
      *
           PERFORM DET-OEVC.
           MOVE EVC-FEC-FPVC IN REG-EVC(WSS-EVC1) TO
                                WSS-FEC-FPVC IN WSS-VARI.
      *JSS-NEW
           IF OPC-IND-AFER IN OPC-FLD = 'N'
               GO TO MRA-CMN-ACC.

           MOVE WSS-NUM-DPVC IN WSS-VARI TO FEC-ITM1.
           MOVE WSS-NUM-MPVC IN WSS-VARI TO FEC-ITM2.
           MOVE WSS-NUM-SPVC IN WSS-VARI TO FEC-ITM3.
           MOVE WSS-NUM-APVC IN WSS-VARI TO FEC-ITM4.

           MOVE FEC-FORM-FEC TO FEC-FORM.
           MOVE FEC-VHBL-S   TO FEC-VHBL.
           MOVE FEC-FBLK-N   TO FEC-FBLK.
           MOVE FEC-CHOY-N   TO FEC-CHOY.
           MOVE FEC-VAL-FEC  TO FEC-CMND.
           PERFORM PRO-FEC.
           IF ( NOT FEC-STAT-OKS ) AND ( NOT FEC-STAT-FER )
               MOVE FEC-MENS    TO FRM-MENS
               MOVE FIO-BCK-OUT TO FIO-CMND
               PERFORM COL-FIO-OPC
               GO TO FIN-CMN-ACC.

           IF FEC-STAT-FER
               MOVE FEC-FORM-FEC TO FEC-FORM
               MOVE FEC-SIG-HBL  TO FEC-CMND
      *        PERFORM PRO-FEC
               PERFORM CAL-FEC
               IF FEC-STAT-OKS
                   MOVE FEC-ITM1 TO WSS-NUM-DPVC IN WSS-VARI
                   MOVE FEC-ITM2 TO WSS-NUM-MPVC IN WSS-VARI
                   MOVE FEC-ITM3 TO WSS-NUM-SPVC IN WSS-VARI
                   MOVE FEC-ITM4 TO WSS-NUM-APVC IN WSS-VARI
               ELSE
                   MOVE FEC-MENS    TO FRM-MENS
                   MOVE FIO-BCK-OUT TO FIO-CMND
                   PERFORM COL-FIO-OPC
                   GO TO FIN-CMN-ACC.
       MRA-CMN-ACC.
      *EN WSS-FEC-FPVC esta la fecha del Vencimiento
           PERFORM PUT-VFCT.
           IF MSG-COD-MENS > SPACES
               MOVE FIO-BCK-OUT TO FIO-CMND
               PERFORM COL-FIO-OPC
               GO TO MSG-CMN-ACC.
           MOVE WSS-NUM-DPVC IN WSS-VARI TO FEC-ITM1.
           MOVE WSS-NUM-MPVC IN WSS-VARI TO FEC-ITM2.
           MOVE WSS-NUM-SPVC IN WSS-VARI TO FEC-ITM3.
           MOVE WSS-NUM-APVC IN WSS-VARI TO FEC-ITM4.
           IF EVC-NUM-DESD IN REG-EVC(WSS-EVC1) > 0
               MOVE EVC-NUM-DESD IN REG-EVC(WSS-EVC1) TO FEC-NDIA
               MOVE FEC-FORM-FEC                      TO FEC-FORM
               MOVE FEC-SUM-DIA                       TO FEC-CMND
      *        PERFORM PRO-FEC
               PERFORM CAL-FEC
               IF NOT FEC-STAT-OKS
                   MOVE FEC-MENS    TO FRM-MENS
                   MOVE FIO-BCK-OUT TO FIO-CMND
                   PERFORM COL-FIO-OPC
                   GO TO FIN-CMN-ACC.

      * RBG/INI/1-AUG-1996 SE DES* TODO ESTE PARRAFO Y SE INCLUYO EL IF.
      * DAD ini  12-AUG-1991
      * Fecha de MORA sera igual a la Fecha del Vencimiento sin Analisis Feriado
           IF (WSS-MEVC = 1) AND 
              (EVC-NUM-VIGU IN REG-EVC(WSS-EVC1) = 1 ) AND
              (OPC-IND-AFER IN OPC-FLD = 'N' )
               MOVE FEC-FORM-FEC TO FEC-FORM
               MOVE FEC-VHBL-S   TO FEC-VHBL
               MOVE FEC-FBLK-N   TO FEC-FBLK
               MOVE FEC-CHOY-N   TO FEC-CHOY
               MOVE FEC-VAL-FEC  TO FEC-CMND
               PERFORM PRO-FEC
               IF ( NOT FEC-STAT-OKS ) AND ( NOT FEC-STAT-FER )
                    MOVE FEC-MENS    TO FRM-MENS
                    MOVE FIO-BCK-OUT TO FIO-CMND
                    PERFORM COL-FIO-OPC
                    GO TO FIN-CMN-ACC.

           IF (WSS-MEVC = 1) AND 
              (EVC-NUM-VIGU IN REG-EVC(WSS-EVC1) = 1 ) AND
              (OPC-IND-AFER IN OPC-FLD = 'N' )
               IF FEC-STAT-FER
                   MOVE FEC-FORM-FEC TO FEC-FORM
                   MOVE FEC-SIG-HBL  TO FEC-CMND
                   PERFORM CAL-FEC
                   IF NOT FEC-STAT-OKS
                       MOVE FEC-MENS    TO FRM-MENS
                       MOVE FIO-BCK-OUT TO FIO-CMND
                       PERFORM COL-FIO-OPC
                       GO TO FIN-CMN-ACC.
      * DAD fin  12-AUG-1991
      * RBG/FIN/1-AUG-1996 

       IMV-CMN-ACC.
           MOVE FEC-ITM1 TO WSS-NUM-DIMV IN WSS-VARI.
           MOVE FEC-ITM2 TO WSS-NUM-MIMV IN WSS-VARI.
           MOVE FEC-ITM3 TO WSS-NUM-SIMV IN WSS-VARI.
           MOVE FEC-ITM4 TO WSS-NUM-AIMV IN WSS-VARI.
       VEN-CMN-ACC.
      * JSS-NEW
           MOVE 0 TO WSS-CVI-IDNI.
           MOVE 0 TO WSS-IEVC.
       NXT-CMN-ACC.
           ADD 1 TO WSS-IEVC.
           IF WSS-IEVC > WSS-MEVC
               GO TO UVN-CMN-ACC.
           IF EVC-NUM-IVCT IN REG-EVC(WSS-IEVC) = 1
               GO TO NXT-CMN-ACC.
           MOVE REG-EVC(WSS-IEVC) TO EVC.
           PERFORM PRO-VFIN-REVC.
           IF INT-CMSG > SPACES
               MOVE FIO-BCK-OUT TO FIO-CMND
               PERFORM COL-FIO-OPC
               MOVE INT-CMSG TO MSG-COD-MENS
               GO TO MSG-CMN-ACC.
           GO TO NXT-CMN-ACC.
       UVN-CMN-ACC.
      * SE PROCESA AL FINAL LA ESTRUCTURA 1 ( PUEDEN EXISTIR VARIAS )
           MOVE SPACES TO WSS-IETB.
           MOVE 'S'    TO WSS-SUMAR-INTERES.
           MOVE 'N'    TO WSS-IKA1.
           MOVE 0      TO WSS-TCCO WSS-TCFO.
           MOVE 0      TO WSS-CVI-IDNI.
           MOVE 0      TO WSS-CVI-VKA1 WSS-CVI-VKCC WSS-CVI-VFCC.
           MOVE 0      TO WSS-IEVC.
           MOVE 'N'    TO WSS-IEFO.
       LUV-CMN-ACC.
           ADD 1 TO WSS-IEVC.
           IF WSS-IEVC > WSS-MEVC
               GO TO SIG-CMN-ACC.
           IF EVC-NUM-IVCT IN REG-EVC(WSS-IEVC) NOT = 1
               GO TO LUV-CMN-ACC.
           MOVE REG-EVC(WSS-IEVC)  TO EVC.
           MOVE WSS-VCVC(WSS-IEVC) TO WSS-C1EV.
      *Para marcar si existe una estructura FO en el primer vencimiento
           IF WSS-VCVC(WSS-IEVC) = 'FO' OR 'FP'
               MOVE 'S' TO WSS-IEFO.
           PERFORM PRO-VFIN-REVC.
           IF INT-CMSG > SPACES
               MOVE FIO-BCK-OUT TO FIO-CMND
               PERFORM COL-FIO-OPC
               MOVE INT-CMSG TO MSG-COD-MENS
               GO TO MSG-CMN-ACC.

           IF WSS-PESO-SI
               MOVE CVI-VCAP TO PES-SGV-DECI IN PES-VARI
               PERFORM PES-SCTV
               MOVE PES-SGV-ENTE IN PES-VARI TO CVI-VCAP
               MOVE CVI-VFIN TO PES-SGV-DECI IN PES-VARI
               PERFORM PES-SCTV
               MOVE PES-SGV-ENTE IN PES-VARI TO CVI-VFIN.
           ADD CVI-VCAP TO WSS-CVI-VKCC.
           IF WSS-C1EV-CAM
               IF WSS-SUMAR-INTERES-SI
                   ADD CVI-VFIN TO WSS-CVI-VFCC
                   MOVE 'N' TO WSS-SUMAR-INTERES
               ELSE
                   ADD CVI-VCAP TO WSS-CVI-VFCC
           ELSE
               ADD CVI-VFIN TO WSS-CVI-VFCC.
           IF WSS-C1EV-CAM
               MOVE 'S'     TO WSS-IKA1
               ADD CVI-VCAP TO WSS-CVI-VKA1.
           GO TO LUV-CMN-ACC.
       SIG-CMN-ACC.
      *Si la cuota quedo generada incompleta :
      *    Si existe una estructura FO entonces
      *       lo que se conoce es el valor final
      *    En caso contrario
      *       lo que se conoce es el valor capital
           IF WSS-IETB > SPACES
               IF WSS-IEFO = 'S'
                   MOVE ZEROES TO WSS-CVI-VKCC
               ELSE
                   MOVE ZEROES TO WSS-CVI-VFCC.
           MOVE WSS-CVI-VKCC TO CVI-VCAP.
           MOVE WSS-CVI-VFCC TO CVI-VFIN.

           IF WSS-TCFO > 0
               PERFORM ACT-EVFO VARYING WSS-IEVC FROM 1 BY 1
                                UNTIL   WSS-IEVC > WSS-MEVC.
           IF WSS-TCCO > 0
               PERFORM ACT-EVCO VARYING WSS-IEVC FROM 1 BY 1
                                UNTIL   WSS-IEVC > WSS-MEVC.
           IF WSS-CMMC = 'C'
               PERFORM ACT-RICG VARYING WSS-IEVC FROM 1 BY 1
                                UNTIL   WSS-IEVC > WSS-MEVC.
           MOVE REG-EVC(WSS-EVC1) TO EVC.
      *JSS-NEW

      *JSS-TRC
      *     PERFORM DSP-VFIN.
      *
           MOVE OPC-CAI-IOPC IN OPC-FLD TO VEN-CAI-IOPC IN VEN.
           MOVE OPC-IIC-IOPC IN OPC-FLD TO VEN-IIC-IOPC IN VEN.
      *     IF INT-CVTI > SPACES AND INT-TFPR = 'C'
      *         MOVE 999                 TO VEN-NUM-IVEN IN VEN
      *     ELSE
               MOVE 1                   TO VEN-NUM-IVEN IN VEN.
           MOVE FIO-GET-KEY-UPD TO FIO-CMND.
           PERFORM COL-FIO-VEN.
           IF FIO-STAT-OKS
      *DAD ini  31-MAR-1994   (Memo.26-01-94 pto.2)
               MOVE FIO-MOD TO WSS-CMND
           ELSE
               MOVE FIO-PUT TO WSS-CMND.
      *DAD fin  31-MAR-1994

           MOVE WSS-FEC-FPVC IN WSS-VARI TO VEN-FEC-FVEN IN VEN.
           MOVE WSS-FEC-FIMV IN WSS-VARI TO VEN-FEC-FIMV IN VEN.

      *Si es Boleta de garantia se debe mover 0 al valor capital del
      *vencimiento.
      **     IF WSS-OPEC = 'B'
      **         MOVE 0 TO VEN-VAL-CAPI IN VEN
      **     ELSE
           IF WSS-PESO-SI
               MOVE CVI-VCAP TO PES-SGV-DECI IN PES-VARI
               PERFORM PES-SCTV
               MOVE PES-SGV-ENTE IN PES-VARI TO VEN-VAL-CAPI IN VEN
           ELSE
               MOVE CVI-VCAP TO VEN-VAL-CAPI IN VEN.
           MOVE VEN-VAL-CAPI IN VEN TO VEN-VAL-SCAP IN VEN.
      *
           IF WSS-PESO-SI
               MOVE WSS-CVI-IDNI TO PES-SGV-DECI IN PES-VARI
               PERFORM PES-SCTV
               MOVE PES-SGV-ENTE IN PES-VARI TO VEN-VAL-IDNI IN VEN
           ELSE
               MOVE WSS-CVI-IDNI TO VEN-VAL-IDNI IN VEN.
      *
           IF WSS-PESO-SI
               MOVE CVI-VFIN TO PES-SGV-DECI IN PES-VARI
               PERFORM PES-SCTV
               MOVE PES-SGV-ENTE IN PES-VARI TO VEN-VAL-FINA IN VEN
           ELSE
               MOVE CVI-VFIN TO VEN-VAL-FINA IN VEN.
      *JSS 6-JUN-1991 20:07:05 ( Para manejar solo interes en boleta
      *de garantia, sobre todo cuando es 1 vencimiento )
           IF WSS-OPEC = 'B' AND
              VEN-VAL-CAPI IN VEN > ZEROES AND
      *DAD ini  14-JAN-1992   (Memo.13-12-91)
              VEN-VAL-FINA IN VEN NOT < VEN-VAL-CAPI IN VEN
      *DAD fin  14-JAN-1992
               SUBTRACT VEN-VAL-CAPI IN VEN FROM VEN-VAL-FINA IN VEN.
      *
           MOVE VEN-VAL-FINA IN VEN TO VEN-VAL-SFIN IN VEN.
           MOVE SPACES              TO VEN-IND-SCTB IN VEN.
           MOVE 1                   TO VEN-NUM-IVCT IN VEN.

           MOVE EVC-NUM-IEVC IN EVC TO VEN-NUM-IEVC IN VEN.
           MOVE EVC-NUM-IDLC IN EVC TO VEN-NUM-IDLC IN VEN.
           MOVE SPACES              TO VEN-IND-SCBZ IN VEN.
           MOVE EVC-IND-CAUT IN EVC TO VEN-IND-CAUT IN VEN.
           MOVE SPACES              TO VEN-IND-SCTB IN VEN.
           IF WSS-IETB > SPACES
               MOVE 'N'    TO VEN-IND-CALC IN VEN
           ELSE
               MOVE SPACES TO VEN-IND-CALC IN VEN.
      *     MOVE SPACES             TO VEN-GLS-DISP IN VEN.

      *Si es Documento Descontado o si solo existen estructuras tipo FI
      *se resta el valor de los intereses al valor liquido
           IF ( WSS-OPEC = 'D' ) OR ( WSS-IEFI = 'S' )
      *DAD ini  02-AUG-1994
           IF WSS-IND-TMON IN WSS-VARI = WSS-IND-TMMN IN WSS-VARI AND
              WSS-PESO-NO
               MOVE OPC-COD-VCOC IN OPC-FLD TO TAB-COD-CTAB IN TAB
               MOVE '0999  '                TO TAB-CIC-CTAB IN TAB
               MOVE OPC-NUM-DCOL IN OPC-FLD TO TAB-NUM-DTRN IN TAB
               MOVE OPC-NUM-MCOL IN OPC-FLD TO TAB-NUM-MTRN IN TAB
               MOVE OPC-NUM-SCOL IN OPC-FLD TO TAB-NUM-STRN IN TAB
               MOVE OPC-NUM-ACOL IN OPC-FLD TO TAB-NUM-ATRN IN TAB
               PERFORM GET-VCAM
               IF MSG-COD-MENS IN MSG NOT > SPACES
                   MULTIPLY CAM-SGV-VCAM IN CAM      BY
                            WSS-VAL-VIFI IN WSS-VARI GIVING
                            WSS-VAL-VIFI IN WSS-VARI
                   MOVE WSS-VAL-VIFI IN WSS-VARI TO
                        PES-SGV-DECI IN PES-VARI
                   PERFORM PES-SCTV
                   MOVE PES-SGV-ENTE IN PES-VARI TO
                        WSS-VAL-VIFI IN WSS-VARI
                   SUBTRACT WSS-VAL-VIFI IN WSS-VARI FROM
                            OPC-SGV-LIQU IN OPC-FLD
               ELSE
                   MOVE FIO-BCK-OUT TO FIO-CMND
                   PERFORM COL-FIO-OPC
                   GO TO MSG-CMN-ACC
           ELSE
      *DAD fin  02-AUG-1994
               SUBTRACT WSS-VAL-VIFI FROM OPC-SGV-LIQU IN OPC-FLD.
      *        IF WSS-IEFI = 'S' 
      *            SUBTRACT WSS-CMP-VIFI FROM OPC-SGV-LIQU IN OPC-FLD.

      *     PERFORM GET-FHOY.
      *     MOVE HOY-STP-ITRN TO VEN-STP-IINV IN VEN.

      *DAD ini  31-MAR-1994   (Memo.26-01-94 pto.2)
           MOVE WSS-CMND TO FIO-CMND.
      *DAD fin  31-MAR-1994
           PERFORM COL-FIO-VEN.
           IF NOT FIO-STAT-OKS
               MOVE FIO-MENS    TO FRM-MENS
               MOVE FIO-BCK-OUT TO FIO-CMND
               PERFORM COL-FIO-OPC
               GO TO FIN-CMN-ACC.
      *SE ESTA LEYENDO UN DOCUMENTO, EN RIGOR DEBERIAN ACTUALIZARSE TODOS
      *LOS DOCUMENTOS POSIBLES, POR LO TANTO IMPLICARIA LLEVAR POR
      *"--CADA DOCUMENTO--" EL VALOR DEL CAPITAL DEL PRIMER VENCIMIENTO
      *( WSS-CVI-VKA1 ), VALOR DEL SALDO YA AMORTIZADO ( WSS-VAL-SCYA )
      *Y VALOR DE INTERESES NO INCLUIDOS ( VEN-VAL-IDNI )
      *
      *POR AHORA LO UNICO QUE SE HARA SERA PARA LOS DOCUMENTOS DESCONTADOS:
      *EL VALOR DEL SALDO DE CAPITAL POR AMORTIZAR ( DLC-VAL-SCPA )
      *SE DEJARA EN CERO, YA QUE LOS DOCUMENTOS DESCONTADOS SE INFORMAN
      *POR MEDIO DE 'IF' EN MULTIPLES DOCUMENTOS
      *
      *SE CONSIDERARA POR AHORA UNA RESTRICCION DEL SISTEMA LO SIGUIENTE:
      *SOLO SE PUEDEN INGRESAR EN MULTIPLES DOCUMENTOS LOS DOCUMENTOS
      *DESCONTADOS POR LO TANTO :
      *
           IF WSS-IEFI = 'S'
               PERFORM PRO-DLC-DDD
               IF FRM-MENS NOT > SPACES
                   GO TO CYA-CMN-ACC
               ELSE
                   GO TO FIN-CMN-ACC.
           MOVE OPC-CAI-IOPC IN OPC-FLD TO DLC-CAI-IOPC IN DLC.
           MOVE OPC-IIC-IOPC IN OPC-FLD TO DLC-IIC-IOPC IN DLC.
           MOVE VEN-NUM-IDLC IN VEN     TO DLC-NUM-IDLC IN DLC.
           MOVE FIO-GET-KEY-UPD TO FIO-CMND.
           PERFORM COL-FIO-DLC.
           IF NOT FIO-STAT-OKS
               MOVE FIO-MENS    TO FRM-MENS
               MOVE FIO-BCK-OUT TO FIO-CMND
               PERFORM COL-FIO-OPC
               GO TO FIN-CMN-ACC.
      *Si existe algo de capital ya amortizado en la primera cuota
      *mueve la fecha de amortizacion a la fecha del vencimiento
           IF WSS-IKA1-YES
               MOVE VEN-FEC-FVEN IN VEN TO DLC-FEC-FAMT IN DLC
      *Solo si la cuota se pudo generar "completa" o bien "incompleta con
      *capital conocido", resta el capital ya amortizado al saldo de capital
               IF ( WSS-IETB NOT > SPACES ) OR
                  ( ( WSS-IETB > SPACES ) AND
                    ( VEN-VAL-FINA IN VEN NOT > ZEROES ) )
                   SUBTRACT WSS-CVI-VKA1 FROM DLC-VAL-SDLC IN DLC
                            GIVING DLC-VAL-SCPA IN DLC
               ELSE
                   MOVE DLC-VAL-SDLC IN DLC TO DLC-VAL-SCPA IN DLC
           ELSE
               MOVE OPC-FEC-FCOL IN OPC TO DLC-FEC-FAMT IN DLC
               MOVE DLC-VAL-SDLC IN DLC TO DLC-VAL-SCPA IN DLC.
           SUBTRACT WSS-VAL-SCYA FROM  DLC-VAL-SCPA IN DLC.
           MOVE VEN-VAL-IDNI IN VEN TO DLC-VAL-SINT IN DLC.
      *
           MOVE FIO-MOD TO FIO-CMND.
           PERFORM COL-FIO-DLC.
           IF NOT FIO-STAT-OKS
               MOVE FIO-MENS    TO FRM-MENS
               MOVE FIO-BCK-OUT TO FIO-CMND
               PERFORM COL-FIO-OPC
               GO TO FIN-CMN-ACC.
      *
      *PROCESO DE CYA
       CYA-CMN-ACC.
           PERFORM PRO-ACT-CYA.
           IF MSG-COD-MENS > SPACES
               GO TO MSG-CMN-ACC.
      *FIN PROCESO CYA

      *JSS-NEW
           MOVE 0 TO WSS-IEVC.
       UEV-CMN-ACC.
           ADD 1 TO WSS-IEVC.
           IF WSS-IEVC > WSS-MEVC
               GO TO OPC-CMN-ACC.
           MOVE REG-EVC(WSS-IEVC) TO EVC.
           MOVE FIO-GET-KEY-UPD TO FIO-CMND.
           PERFORM COL-FIO-EVC.
           IF NOT FIO-STAT-OKS
               MOVE FIO-BCK-OUT TO FIO-CMND
               PERFORM COL-FIO-OPC
               MOVE 'UEVEVC NOGKU'      TO MSG-COD-MENS
               MOVE EVC-KEY-IEVC IN EVC TO FRM-MEN2
               GO TO MSG-CMN-ACC.
           MOVE REG-EVC(WSS-IEVC) TO EVC.
           MOVE FIO-MOD TO FIO-CMND.
           PERFORM COL-FIO-EVC.
           IF NOT FIO-STAT-OKS
               MOVE FIO-BCK-OUT TO FIO-CMND
               PERFORM COL-FIO-OPC
               MOVE 'UEVEVC NOMOD'      TO MSG-COD-MENS
               MOVE EVC-KEY-IEVC IN EVC TO FRM-MEN2
               GO TO MSG-CMN-ACC.
           GO TO UEV-CMN-ACC.
      *JSS-NEW
       OPC-CMN-ACC.
      *DAD ini  21-JUL-1992
      * Enganche con Rutina que Revisa Linea de Avance, si corresponde
           IF OPC-CAI-ILDC IN OPC-FLD NOT > SPACES AND
              OPC-IIC-ILDC IN OPC-FLD NOT > ZEROES
               GO TO OPC-CMN-ACC-LAV-FIN.

           MOVE 'COL'          TO FIO-SIST.
           MOVE 'VSN'          TO TAB-COD-TTAB IN TAB.
           MOVE 'BCI    LAVAN' TO TAB-COD-CTAB IN TAB.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM GNS-FIO-TAB.
           IF NOT ( FIO-STAT-OKS AND
                    TAB-MSC-STAT IN TAB = 'S' )
               GO TO OPC-CMN-ACC-LAV-FIN.

      * Inicializacion de Variables para rutina Linea de Avance
           MOVE SPACES                   TO MSG-COD-MENS.
           MOVE SPACES                   TO WSS-CAI-ILDC IN WSS-VARI.
           MOVE ZEROES                   TO WSS-IIC-ILDC IN WSS-VARI.
           MOVE WSS-CIC-ILDC IN WSS-VARI TO LAV-IOPC IN LAV-VARI(1)
                                            LAV-IOPC IN LAV-VARI(2)
                                            LAV-AOPC IN LAV-VARI(1)
                                            LAV-AOPC IN LAV-VARI(2).

      * Carga Deudor y Operacion del Credito a Liquidar para rutina LAv
           MOVE RDC-CAI-ICLI IN OPC-FLD  TO WSS-CAI-ILDC IN WSS-VARI.
           MOVE RDC-IIC-ICLI IN OPC-FLD  TO WSS-IIC-ILDC IN WSS-VARI.
           MOVE WSS-CIC-ILDC IN WSS-VARI TO LAV-ICLI IN LAV-VARI.
           MOVE OPC-CAI-IOPC IN OPC-FLD  TO WSS-CAI-ILDC IN WSS-VARI.
           MOVE OPC-IIC-IOPC IN OPC-FLD  TO WSS-IIC-ILDC IN WSS-VARI.
           MOVE WSS-CIC-ILDC IN WSS-VARI TO LAV-IOPC IN LAV-VARI(1).

      * Considera Credito si es Prorroga de Credito Cancelado para rutina LAv
           IF ( CAN-CAI-IOPC IN OPC-FLD NOT > SPACES AND
                CAN-IIC-IOPC IN OPC-FLD NOT > ZEROES ) OR
              OPC-IND-RENO IN OPC-FLD NOT = 'PRO'
               MOVE ZEROES TO LAV-SCRE IN LAV-VARI(1)
               GO TO OPC-CMN-ACC-LAV-PRO.

      * Para dejar con KEY's de la Pantalla el registro CAN y leer la CAN
           PERFORM KEY-CAN-OPC.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM COL-FIO-CAN.
           IF NOT FIO-STAT-OKS
               MOVE 'COL'        TO MSG-COD-SIST
               MOVE 'CANPRO NEX' TO MSG-COD-MENS
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC        TO FRM-MEN1
               MOVE CAN-KEY-ICAN IN CAN TO FRM-MEN2
               MOVE FIO-BCK-OUT         TO FIO-CMND
               PERFORM COL-FIO-OPC
               GO TO FIN-CMN-ACC.

      * Carga el Credito de la Cancelacion solo si es 'PTT' para rutina LAv
           IF CAN-MSC-CANC IN CAN = 'PTT'
               MOVE CAN-CIC-IOPC IN CAN TO LAV-AOPC IN LAV-VARI(1).
           MOVE ZEROES TO LAV-SCRE IN LAV-VARI(1).
       OPC-CMN-ACC-LAV-PRO.
           MOVE 'LIQ'                TO LAV-CMND IN LAV-VARI.
           MOVE IDD-FSIS IN IDD-VARI TO LAV-VIDD IN LAV-VARI.
           MOVE LAV-CMMA IN LAV-VARI TO SYS-CMMA.
           MOVE LAV-TCMA IN LAV-VARI TO SYS-TCMA.
           MOVE 'COLPPLAV'           TO SYS-PROG.
           MOVE SYS-LINK             TO SYS-CMND.
           PERFORM GNS-PRO-SYS.
           MOVE SYS-CMMA TO LAV-CMMA IN LAV-VARI.
           IF LAV-CMSG IN LAV-VARI > SPACES
               MOVE 'COL'                TO MSG-COD-SIST
               MOVE LAV-CMSG IN LAV-VARI TO MSG-COD-MENS
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC         TO FRM-MEN1
               MOVE LAV-MENS IN LAV-VARI TO FRM-MEN2
               MOVE FIO-BCK-OUT          TO FIO-CMND
               PERFORM COL-FIO-OPC
               GO TO FIN-CMN-ACC.
       OPC-CMN-ACC-LAV-FIN.
      *DAD fin  21-JUL-1992
           MOVE SPACES TO MSG-COD-MENS.
           PERFORM KEY-OPC-OPC.

      *JSS 26-AUG-1992 18:47:27
           MOVE 'COL'          TO FIO-SIST.
           MOVE 'VSN'          TO TAB-COD-TTAB IN TAB.
           MOVE 'PZOCTBLMANUA' TO TAB-COD-CTAB IN TAB.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM GNS-FIO-TAB.
           IF FIO-STAT-OKS AND TAB-MSC-STAT IN TAB = 'S'
               MOVE 0 TO PLP-VCOR
               GO TO CON-CMN-ACC.

      *SMC-INI 26.08.1993 BUSCA EN RUTINA COLPPPLP LA FECHA DE VCTO
      *PARA EL IVEN QUE SE ENTREGA SI ES CERO NO LA OBTIENE.
           IF WSS-COD-LRCE IN WSS-VARI = 'S' OR 
              WSS-EVC-TCFP IN WSS-VARI = 'S' 
              MOVE WSS-NUM-VCTE IN WSS-VARI TO PLP-IVCT
           ELSE
              MOVE ZEROS                    TO PLP-IVCT.
      *SMC-FIN 26.08.1993 

           MOVE OPC-CIC-IOPC IN OPC  TO PLP-IOPC.
           MOVE IDD-FSIS IN IDD-VARI TO PLP-VIDD.
      *DAD ini  31-MAR-1994
           MOVE FIO-MSFL IN FIO-CTTS TO PLP-MSFL.
      *DAD fin  31-MAR-1994
           MOVE PLP-CMMA   TO SYS-CMMA.
           MOVE 'COLPPPLP' TO SYS-PROG.
           MOVE PLP-TCMA   TO SYS-TCMA.
           MOVE SYS-LINK   TO SYS-CMND.
           PERFORM GNS-PRO-SYS.
           MOVE SYS-CMMA TO PLP-CMMA.
      *DAD ini  31-MAR-1994
           MOVE PLP-MSFL TO FIO-MSFL.
      *DAD fin  31-MAR-1994
           IF PLP-CMSG > SPACES
               MOVE PLP-CMSG TO MSG-COD-MENS
               MOVE PLP-MENS TO FRM-MEN2
               GO TO MSG-CMN-ACC.

      *SMC-INI 25.08.1993
           IF WSS-COD-LRCE IN WSS-VARI = 'S'
              PERFORM RWT-RCE-NORMAL
              IF MSG-COD-MENS > SPACES
                 GO TO MSG-CMN-ACC.

           IF WSS-EVC-TCFP IN WSS-VARI = 'S' 
              PERFORM RWT-RCE-RLQ
              IF MSG-COD-MENS > SPACES
                 GO TO MSG-CMN-ACC.
      *SMC-FIN 25.08.1993

           IF SCR-COD-PLZO > SPACES
               IF ( PLP-PLZO-B90 AND SCR-COD-PLZO-B90 ) OR
                  ( ( NOT PLP-PLZO-B90 ) AND ( NOT SCR-COD-PLZO-B90 ) )
                   NEXT SENTENCE
               ELSE
               IF SCR-COD-PLZO = 'USAB90' OR 'USAS90'
                   MOVE 'PLPCAMBTASA' TO MSG-COD-MENS
                   GO TO MSG-CMN-ACC
               ELSE
                   MOVE 'COL'     TO MSG-COD-SIST
                   MOVE 'PLPPLZO' TO MSG-COD-TMSG
                   IF PLP-PLZO-B90
                       MOVE 'USAB90' TO SCR-COD-PLZO
                       MOVE 'ESCB9'  TO MSG-COD-CMSG
                       PERFORM GET-MSG
                       MOVE MSG-GLS-DESC TO FRM-MEN1
                       MOVE MSG-GLS-DATA TO FRM-MEN2
                       PERFORM EDT-KEY-OPC
                       PERFORM EDT-FLD-OPC
                       PERFORM PRO-CONF
                   ELSE
                       MOVE 'USAS90' TO SCR-COD-PLZO
                       MOVE 'EBCS9'  TO MSG-COD-CMSG
                       PERFORM GET-MSG
                       MOVE MSG-GLS-DESC TO FRM-MEN1
                       MOVE MSG-GLS-DATA TO FRM-MEN2
                       PERFORM EDT-KEY-OPC
                       PERFORM EDT-FLD-OPC
                       PERFORM PRO-CONF.
       CON-CMN-ACC.
           MOVE FIO-GET-KEY-UPD TO FIO-CMND.
           PERFORM COL-FIO-OPC.
           IF NOT FIO-STAT-OKS
               MOVE FIO-MENS    TO FRM-MENS
               MOVE FIO-BCK-OUT TO FIO-CMND
               PERFORM COL-FIO-OPC
               GO TO FIN-CMN-ACC.

      * RBG INI 28-NOV-1995
           MOVE 'COL' TO TAB-COD-SIST FIO-SIST.
           MOVE 'VSC' TO TAB-COD-TTAB IN TAB.
           MOVE OPC-COD-TOOC IN OPC-FLD  TO WSS-COD-TOOC IN WSS-VARI.
           MOVE OPC-COD-AOOC IN OPC-FLD  TO WSS-COD-AOOC IN WSS-VARI.
           MOVE WSS-COD-CAUX IN WSS-VARI TO TAB-COD-CTAB IN TAB.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM GNS-FIO-TAB.
           IF NOT (FIO-STAT-OKS AND TAB-IND-VIGE = 'S')
               GO TO CON-SEG-CES.
           IF OPC-COD-SEGD IN OPC-FLD NOT > SPACES
              MOVE ZEROES TO WSS-VAL-MON1 IN WSS-VARI
              GO TO CON-TIN-UA.
           MOVE 'COL' TO TAB-COD-SIST FIO-SIST.
           MOVE 'SDG' TO TAB-COD-TTAB IN TAB.
           MOVE OPC-COD-SEGD IN OPC-FLD TO TAB-COD-CTAB IN TAB.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM GNS-FIO-TAB.
           IF FIO-STAT-OKS AND TAB-IND-VIGE IN TAB = 'S' 
              IF TAB-CIC-CTAB IN TAB = 'SEGDES' AND
                 WSS-PESO-NO
                 MOVE OPC-COD-VCOC IN OPC-FLD TO TAB-COD-CTAB IN TAB
                 MOVE '0999  '                TO TAB-CIC-CTAB IN TAB
                 MOVE OPC-NUM-DCOL IN OPC-FLD TO TAB-NUM-DTRN IN TAB
                 MOVE OPC-NUM-MCOL IN OPC-FLD TO TAB-NUM-MTRN IN TAB
                 MOVE OPC-NUM-SCOL IN OPC-FLD TO TAB-NUM-STRN IN TAB
                 MOVE OPC-NUM-ACOL IN OPC-FLD TO TAB-NUM-ATRN IN TAB
                 PERFORM GET-VCAM
                 IF MSG-COD-MENS IN MSG NOT > SPACES
      *                 MULTIPLY CAM-SGV-VCAM IN CAM BY OPC-VAL-SEGD IN
      *                         OPC-FLD GIVING WSS-VAL-MON1 IN WSS-VARI
                       DIVIDE OPC-VAL-SEGD IN OPC-FLD BY CAM-SGV-VCAM
                               IN CAM GIVING WSS-VAL-MON1 IN WSS-VARI 
                 ELSE
                     IF MSG-COD-MENS IN MSG = 'CODVCAMEQL'
                         MOVE OPC-VAL-SEGD IN OPC-FLD TO
                              WSS-VAL-MON1 IN WSS-VARI
                         MOVE SPACES TO MSG-COD-MENS IN MSG
                     ELSE
                         GO TO MSG-CMN-ACC
              ELSE
                  MOVE OPC-VAL-SEGD IN OPC-FLD TO WSS-VAL-MON1 IN
                                                         WSS-VARI
           ELSE
               MOVE 'CODSEGDNEX' TO MSG-COD-MENS
               GO TO MSG-CMN-ACC.
       CON-TIN-UA.
           IF OPC-IND-VSTR IN OPC NOT = 'S'
               MOVE OPC-CIC-IOPC IN OPC TO VEN-CIC-IOPC IN VEN
               MOVE 1                   TO VEN-NUM-IVEN IN VEN
               MOVE FIO-GET-KEY TO FIO-CMND
               PERFORM COL-FIO-VEN.

           IF VEN-VAL-FINA IN VEN > ZEROES
               ADD VEN-VAL-FINA IN VEN TO WSS-VAL-MON1 IN WSS-VARI
           ELSE
               MOVE ZEROES TO OPC-VAL-SEGP IN OPC-FLD
               GO TO CON-SEG-CES.
           DIVIDE OPC-VAL-SEGP IN OPC-FLD BY 100 GIVING WSS-VAL-TAS
                                                        IN WSS-VARI.
           MULTIPLY WSS-VAL-TAS IN WSS-VARI BY WSS-VAL-MON1 IN
                    WSS-VARI GIVING WSS-VAL-MON2 IN WSS-VARI
           COMPUTE WSS-VAL-MON4 IN WSS-VARI ROUNDED =
           WSS-VAL-MON4 IN WSS-VARI + WSS-VAL-MON2 IN WSS-VARI
           MOVE WSS-VAL-MON4 IN WSS-VARI TO WSS-VAL-MON2 IN WSS-VARI
           MOVE ZEROES TO WSS-VAL-MON4 IN WSS-VARI.
           IF WSS-PESO-SI
               MOVE WSS-VAL-MON2 IN WSS-VARI TO
                    PES-SGV-DECI IN PES-VARI
               PERFORM PES-SCTV
               MOVE PES-SGV-ENTE IN PES-VARI TO
                    WSS-VAL-MON2 IN WSS-VARI.

      * RBG INI 21-JUN-1996 
      *     MOVE 'TAB'       TO FIO-SIST.
      *     MOVE 'IVA'       TO TAB-COD-TTAB IN TAB.
      *     MOVE SPACES      TO TAB-COD-CTAB IN TAB.
      *     MOVE FIO-GET-KEY TO FIO-CMND.
      *     PERFORM GNS-FIO-TAB.
      *     IF FIO-STAT-OKS  AND  TAB-IND-VIGE IN TAB = 'S'
      *        IF TAB-GLS-ABRV NOT NUMERIC
      *           MOVE 'IVANONUMERIC' TO MSG-COD-MENS
      *           GO TO MSG-CMN-ACC
      *        ELSE
      *            MOVE TAB-GLS-ABRV IN TAB TO WSS-GLS-ABRV IN WSS-VARI
      *            DIVIDE WSS-NUM-ABRV IN WSS-VARI BY 100 GIVING
      *                                  WSS-VAL-IVA IN WSS-VARI     
      *            MULTIPLY WSS-VAL-MON2 IN WSS-VARI BY WSS-VAL-IVA IN
      *                    WSS-VARI GIVING WSS-VAL-MON3 IN WSS-VARI
      *            COMPUTE WSS-VAL-MON4 IN WSS-VARI ROUNDED =
      *            WSS-VAL-MON4 IN WSS-VARI + WSS-VAL-MON3 IN WSS-VARI
      *            MOVE WSS-VAL-MON4 IN WSS-VARI TO WSS-VAL-MON3
      *                                              IN WSS-VARI
      *            MOVE ZEROES TO WSS-VAL-MON4 IN WSS-VARI 
      *            ADD WSS-VAL-MON3 IN WSS-VARI TO WSS-VAL-MON2
      *                                             IN WSS-VARI
      * RBG FIN 21-JUN-1996 

                  MOVE WSS-VAL-MON2 IN WSS-VARI TO OPC-VAL-SEGP
                                                     IN OPC-FLD 
                  IF OPC-VAL-SCRE IN OPC-FLD < OPC-VAL-SEGP IN OPC-FLD
                     MOVE 'MNSEGP>MNCRE' TO MSG-COD-MENS
                     GO TO MSG-CMN-ACC
                  ELSE
                     NEXT SENTENCE.

      * RBG INI 21-JUN-1996 
      *     ELSE
      *         MOVE 'NEXT     IVA' TO MSG-COD-MENS
      *         GO TO MSG-CMN-ACC.
      * RBG FIN 21-JUN-1996 

           IF WSS-PESO-SI
               MOVE OPC-VAL-SEGP IN OPC-FLD TO
                    PES-SGV-DECI IN PES-VARI
               PERFORM PES-SCTV
               MOVE PES-SGV-ENTE IN PES-VARI TO
                    OPC-VAL-SEGP IN OPC-FLD.
       CON-SEG-CES.
      * RBG FIN 28-NOV-1995 

           PERFORM RET-OPC-OPC.
      *    MOVE 'L' TO OPC-MSC-STAT IN OPC.
*% IF PGM_PER
           IF OPC-APROBADA-CTC
               MOVE STO-LIQUIDADA-CTC IN STO-VARI
                                      TO OPC-MSC-STAT IN OPC
           ELSE
               MOVE STO-LIQUIDADA-LIQ IN STO-VARI
                                      TO OPC-MSC-STAT IN OPC.
*% ELSE
           MOVE STO-LIQUIDADA-LIQ IN STO-VARI
                                  TO OPC-MSC-STAT IN OPC.
*% END
           IF PLP-VCOR > 0
               MOVE PLP-VCOR TO OPC-NUM-VCOR IN OPC
                                OPC-NUM-VCVG IN OPC.

           PERFORM GET-FHOY.
           MOVE HOY-STP-ITRN TO OPC-STP-ITRN IN OPC.

           MOVE FIO-MOD TO FIO-CMND.
           PERFORM COL-FIO-OPC.
           IF NOT FIO-STAT-OKS
               MOVE FIO-MENS    TO FRM-MENS
               MOVE FIO-BCK-OUT TO FIO-CMND
               PERFORM COL-FIO-OPC
               GO TO FIN-CMN-ACC.
       MSG-CMN-ACC.
      *RVM-CST-INI 30-OCT-1996
           MOVE OPC-COD-RMOC IN OPC TO CCU-OPC-RMOC IN CCU-VARI.
      *RVM-CST-FIN 30-OCT-1996
*% IF NOT PGM_PTC
           IF MSG-COD-MENS NOT > SPACES
               MOVE 'OPC    SILIQ' TO MSG-COD-MENS.
*% END
*% IF PGM_PTC
           IF MSG-COD-MENS NOT > SPACES
               MOVE 'OPC    SILIQ' TO MSG-COD-MENS
      *PTC ini
           ELSE
               MOVE FRM-SUAR-MAL TO FRM-SUAR.
      *PTC fin
*% END
           MOVE 'COL' TO MSG-COD-SIST.
           PERFORM GET-MSG.
           IF MSG-COD-MENS = 'OPC    SILIQ'
               MOVE MSG-GLS-DESC            TO WSS-MEN1-1
               MOVE OPC-SGV-LIQU IN OPC-FLD TO WSS-SGV-LIQU
               MOVE WSS-SGV-LIQU            TO WSS-SGV-LIQU-EDT
               MOVE WSS-SGV-LIQU-ALF        TO WSS-MEN1-2
               MOVE WSS-MEN1                TO FRM-MEN1
           ELSE
               MOVE MSG-GLS-DESC TO FRM-MEN1.
*% IF NOT PGM_PTC
           IF MSG-COD-MENS = 'OPC    SILIQ' 
               PERFORM PRO-OPC.
*% END
*% IF PGM_PTC
           IF MSG-COD-MENS = 'OPC    SILIQ' 
               PERFORM PRO-OPC
      *PTC ini
           ELSE
               MOVE 'S' TO SCR-IERR.
      *PTC fin
*% END
      *DAD ini  02-AUG-1994       (Manejo de LDC)
           MOVE FRM-MEN1 TO WSS-MEN1.
      *RBG INI 18/OCT/1995
           MOVE FRM-MEN2 TO WSS-MEN3.
      *RBG FIN 18/OCT/1995
      * Verifica llamado a rutina de evaluacion de cupos.
      *JPA ini  22-MAR-1995       (Manejo de MLT)
           PERFORM GET-LDC-LAV.
           PERFORM SET-LDC-LAV.
      * ALD INI 19-DEC-1995 
      *     IF ( LDC-CICL IN LDC-VARI NOT = 'MLT' AND
      *          LDC-FLAG IN LDC-VARI     = 'S' )
      *             GO TO FIN-CMN-ACC.
      * ALD 19-DEC-1995 
      *JPA fin  22-MAR-1995       (Manejo de MLT)
           MOVE OPC-CAI-IOPC IN OPC-FLD TO CCU-CAI-IOPC IN CCU-VARI(1).
           MOVE OPC-IIC-IOPC IN OPC-FLD TO CCU-IIC-IOPC IN CCU-VARI(1).
           MOVE OPC-VAL-SCRE IN OPC-FLD TO CCU-VAL-SCRE IN CCU-VARI(1).
           MOVE OPC-COD-VCOC IN OPC-FLD TO CCU-VOPR     IN CCU-VARI.
      *RVM-CST-INI 14-OCT-1996
      *ALD-BCI-INI/02.11.1995
      *     MOVE OPC-COD-OFOC IN OPC-FLD TO CCU-OPC-OFOC IN CCU-VARI.
      *     MOVE OPC-COD-RMOC IN OPC-FLD TO CCU-OPC-RMOC IN CCU-VARI.
      *ALD-BCI-FIN/02.11.1995
           MOVE DBC-NUM-ICLI IN OPC-FLD TO DBC-NUM-ICLI IN DBC.
           MOVE DBC-VRF-ICLI IN OPC-FLD TO DBC-VRF-ICLI IN DBC.
           MOVE DBC-IND-ICLI IN OPC-FLD TO DBC-IND-ICLI IN DBC.
           MOVE DBC-GLS-ICLI IN OPC-FLD TO DBC-GLS-ICLI IN DBC.
           MOVE 'DBC-IDC-ICLI' TO FIO-AKEY.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM SGC-FIO-DBC.
           IF FIO-STAT-OKS
               IF DBC-IND-TICL IN DBC = 'P'
                   MOVE DBC-KEY-IDBC IN DBC TO DCP-KEY-IDCP IN DCP
                   MOVE FIO-GET-KEY TO FIO-CMND
                   PERFORM SGC-FIO-DCP
                   MOVE DCP-COD-TBAN IN DCP TO
                        CCU-COD-TBAN IN CCU-VARI
               ELSE
               IF DBC-IND-TICL IN DBC = 'E'
                   MOVE DBC-KEY-IDBC IN DBC TO DCE-KEY-IDCE IN DCE
                   MOVE FIO-GET-KEY TO FIO-CMND
                   PERFORM SGC-FIO-DCE
                   MOVE DCE-COD-TBAN IN DCE TO
                        CCU-COD-TBAN IN CCU-VARI.
      *RVM-CST-FIN 14-OCT-1996

      *RVM-CST-INI 30-JAN-1997
           MOVE 'COL'                    TO TAB-COD-SIST.
           MOVE 'AUX'                    TO TAB-COD-TTAB IN TAB.
           MOVE OPC-COD-TOOC IN OPC-FLD  TO WSS-COD-TOOC IN WSS-VARI.
           MOVE OPC-COD-AOOC IN OPC-FLD  TO WSS-COD-AOOC IN WSS-VARI.
           MOVE WSS-COD-CAUX IN WSS-VARI TO TAB-COD-CTAB IN TAB.
           PERFORM VAL-COD.
           IF MSG-COD-MENS NOT = 'COD    NEX'
               MOVE TAB-COD-DAT3 IN TAB(5) TO 
                    WSS-DAT-POS45 IN WSS-VARI
           ELSE
               MOVE SPACES                 TO
                    WSS-DAT-POS45 IN WSS-VARI.

           IF WSS-COD-POS45 IN WSS-VARI = 'C' OR 'V'
               MOVE SPACES TO CCU-SERR
               MOVE SPACES TO MSG-COD-MENS
               MOVE SPACES TO FRM-MENS
               MOVE 'N' TO CCU-COD-1NEX
               MOVE 'N' TO CCU-COD-ERRF
               MOVE 'N' TO CCU-COD-1EXI
               MOVE 'N' TO CCU-COD-1EXC
               GO TO FIN-LDC-CCU.
      *RVM-CST-FIN 30-JAN-1997

       COPY COLIPCCU.
      * SIEMPRE deja pasar el comando 'LIQ'
      *JSS-INI 7-NOV-1995
           IF WSS-MEN1 > SPACES
      *JSS-FIN 7-NOV-1995
           MOVE WSS-MEN1 TO FRM-MEN1.
      *RBG INI 18/OCT/1995
      *JSS-INI 7-NOV-1995
           IF WSS-MEN3 > SPACES
      *JSS-FIN 7-NOV-1995
           MOVE WSS-MEN3 TO FRM-MEN2.
      *RBG FIN 18/OCT/1995
      *DAD fin  02-AUG-1994
           GO TO FIN-CMN-ACC.
      *>>>>
*% END
*% IF FIN_GET_ACC
      *<<<< FIN_GET_ACC
           MOVE SPACES TO SCR-COD-PLZO.
      *>>>>
*% END
*% IF EOF
      *<<<< EOF
      *SMC-INI 26.08.1993
       RWT-RCE-NORMAL SECTION.
       INI-RWT-RCE-NORMAL.
           MOVE OPC-CAI-IOPC IN OPC TO RCE-CAI-IOPC IN RCE.
           MOVE OPC-IIC-IOPC IN OPC TO RCE-IIC-IOPC IN RCE.
           MOVE 999                 TO RCE-NUM-IDLC IN RCE.
           MOVE FIO-GET-KEY-UPD TO FIO-CMND.
           PERFORM COL-FIO-RCE.
           IF FIO-STAT-OKS
               MOVE FIO-MOD TO FIO-CMND
           ELSE
               MOVE FIO-PUT TO FIO-CMND.

           MOVE 'FECH'   TO RCE-CAI-FVEN IN RCE
           MOVE PLP-FVEN TO RCE-FEC-FVEN IN RCE
           PERFORM COL-FIO-RCE.
           IF NOT FIO-STAT-OKS
               MOVE 'RCERWT999   ' TO MSG-COD-MENS.
       FIN-RWT-RCE-NORMAL.
           EXIT.

       RWT-RCE-RLQ SECTION.
       INI-RWT-RCE-RLQ.
           MOVE OPC-CAI-IOPC IN OPC TO RCE-CAI-IOPC IN RCE.
           MOVE OPC-IIC-IOPC IN OPC TO RCE-IIC-IOPC IN RCE.
           MOVE 998                 TO RCE-NUM-IDLC IN RCE.
           MOVE FIO-GET-KEY-UPD TO FIO-CMND.
           PERFORM COL-FIO-RCE.
           IF FIO-STAT-OKS
               MOVE FIO-MOD TO FIO-CMND
           ELSE
               MOVE FIO-PUT TO FIO-CMND.

           MOVE 'FECH'   TO RCE-CAI-FVEN IN RCE
           MOVE PLP-FVEN TO RCE-FEC-FVEN IN RCE
           PERFORM COL-FIO-RCE.
           IF NOT FIO-STAT-OKS
               MOVE 'RCERWT998   ' TO MSG-COD-MENS.
       FIN-RWT-RCE-RLQ.
           EXIT.
      *SMC-FIN 26.08.1993

       PUT-VFCT SECTION.
       INI-PUT-VFCT.
           MOVE SPACES TO MSG-COD-MENS.
           PERFORM OBT-TSA-OPC.
           IF MSG-COD-MENS > SPACES
               GO TO FIN-PUT-VFCT.
           MOVE ICG-COD-TINT IN ICG TO INT-TIPT.
      *Solo si tasa variable graba un ficticio
      *SMC-INI 24.08.1993
      *VALIDA SI TIPO CALCULO ES 'FP' ENTONCES PERIODO
      *DE REPACTO EN CUOTAS DEBE SER > 0.
           MOVE 'N'  TO WSS-COD-LRCE IN WSS-VARI.
           IF INT-TFPR = 'F' AND WSS-EVC-TCFP IN WSS-VARI = 'S' 
              IF  NOT ( ICG-NUM-PREP IN ICG > ZEROS AND 
                        ICG-MSC-UTPR IN ICG = SPACES )
                  MOVE 'ICGPR>0OUT=B' TO MSG-COD-MENS
                  GO TO FIN-PUT-VFCT.
      *SMC-FIN 24.08.1993
      *Solo si tasa variable graba un ficticio
           IF INT-CVTI NOT > SPACES
      *SMC-INI 27.08.1993
               PERFORM GRA-RCE-NORMAL
      *SMC-FIN 27.08.1993
               GO TO FIN-PUT-VFCT.

           IF INT-TFPR = 'C'
               PERFORM PUT-VFCT-CRSE
           ELSE
           IF INT-TFPR = 'F'
               PERFORM PUT-VFCT-FLJO.
       FIN-PUT-VFCT.
           EXIT.

       PUT-VFCT-CRSE SECTION.
       INI-PUT-VFCT-CRSE.
           MOVE OPC-NUM-DCOL IN OPC-FLD TO FEC-ITM1.
           MOVE OPC-NUM-MCOL IN OPC-FLD TO FEC-ITM2.
           MOVE OPC-NUM-SCOL IN OPC-FLD TO FEC-ITM3.
           MOVE OPC-NUM-ACOL IN OPC-FLD TO FEC-ITM4.
           IF INT-UTPR = 'D'
               MOVE INT-PREP    TO FEC-NDIA
               MOVE FEC-SUM-DIA TO FEC-CMND
           ELSE
           IF INT-UTPR = 'M'
               MOVE INT-PREP    TO FEC-NMES
               MOVE FEC-SUM-MES TO FEC-CMND
           ELSE
               MOVE INT-PREP    TO FEC-NANO
               MOVE FEC-SUM-ANO TO FEC-CMND.
           MOVE FEC-FORM-FEC TO FEC-FORM.
      *    PERFORM PRO-FEC.
           PERFORM CAL-FEC.
           IF NOT FEC-STAT-OKS
               MOVE 'LIQVFCTPREP+' TO MSG-COD-MENS
               GO TO FIN-PUT-VFCT-CRSE.
      *DAD ini  30-OCT-1991
      *   Se elimino analisis feriado para Tasa Var. c/r al Curse en Despertador
      *DAD fin  30-OCT-1991
           MOVE OPC-CAI-IOPC IN OPC-FLD TO RCE-CAI-IOPC IN RCE.
           MOVE OPC-IIC-IOPC IN OPC-FLD TO RCE-IIC-IOPC IN RCE.
           MOVE 999                     TO RCE-NUM-IDLC IN RCE.
           MOVE FIO-GET-KEY-UPD TO FIO-CMND.
           PERFORM COL-FIO-RCE.
      *DAD ini  31-MAR-1994   (Memo.26-01-94 pto.2)
           IF FIO-STAT-OKS
               MOVE FIO-MOD TO WSS-CMND
           ELSE
               MOVE FIO-PUT TO WSS-CMND.
      *DAD fin  31-MAR-1994

           MOVE FEC-ITM1 TO WSS-DIPI.
           MOVE FEC-ITM2 TO WSS-MIPI.
           MOVE FEC-ITM3 TO WSS-SIPI.
           MOVE FEC-ITM4 TO WSS-AIPI.

      *SMC-INI 27.08.1993 
      *LEE PROXIMA ICG PARA MOVE FECHA DE DESPIERTE ENTRE LA MENOR 
      *ENTRE FCOL + 1 PERIODO Y FINICIO PROXIMA ICG (SI EXISTE).

           MOVE FIO-GET-NXT TO FIO-CMND.
           PERFORM COL-FIO-ICG.
           IF NOT ( FIO-STAT-OKS AND
                    ICG-CAI-IOPC IN ICG = OPC-CAI-IOPC IN OPC-FLD AND
                    ICG-IIC-IOPC IN ICG = OPC-IIC-IOPC IN OPC-FLD AND
                    ICG-NUM-ICAN IN ICG = ZEROES AND
                    ICG-CIC-IOPV IN ICG = SPACES AND
                    ICG-NUM-IVCT IN ICG = ZEROES AND
                    ICG-IND-TTAS IN ICG = 'INT' )
                    MOVE WSS-FIPI            TO WSS-IIC-DISP
           ELSE
             IF WSS-FIPI < ICG-FEC-FINI IN ICG
                MOVE WSS-FIPI            TO WSS-IIC-DISP 
             ELSE
                MOVE ICG-FEC-FINI IN ICG TO WSS-IIC-DISP.

      *RESTAURA A LA PRIMERA ICG.
           PERFORM OBT-TSA-OPC.
      *SMC-FIN 27.08.1993

           MOVE 'FECH'       TO WSS-CAI-DISP.
           MOVE WSS-KEY-DISP TO RCE-KEY-DISP IN RCE.
      *DAD ini  31-MAR-1994   (Memo.26-01-94 pto.2)
           MOVE WSS-CMND TO FIO-CMND.
      *DAD fin  31-MAR-1994
           PERFORM COL-FIO-RCE.
           IF NOT FIO-STAT-OKS
              MOVE 'WTRCE999CRC ' TO MSG-COD-MENS.
       FIN-PUT-VFCT-CRSE.
           EXIT.

       PUT-VFCT-FLJO SECTION.
       INI-PUT-VFCT-FLJO.
      *Se graba ficticio solo para vencimiento estructurados
           IF OPC-IND-VSTR IN OPC NOT = 'S'
               GO TO FIN-PUT-VFCT-FLJO.
           MOVE OPC-CAI-IOPC IN OPC-FLD TO RCE-CAI-IOPC IN RCE.
           MOVE OPC-IIC-IOPC IN OPC-FLD TO RCE-IIC-IOPC IN RCE.
           MOVE 999                     TO RCE-NUM-IDLC IN RCE.
           MOVE FIO-GET-KEY-UPD TO FIO-CMND.
           PERFORM COL-FIO-RCE.
           IF FIO-STAT-OKS
               MOVE FIO-MOD TO FIO-CMND
           ELSE
               MOVE FIO-PUT TO FIO-CMND.

      *SMC-INI 24.08.1993
      *SI ES C/R AL FLUJO Y TIENE  PERIODO DE REPACTO 
      *GRABA 2 RCE 999 Y 998.
           IF INT-TFPR = 'F' AND ICG-NUM-PREP IN ICG > ZEROS 
              PERFORM GRA-RCES-F
           ELSE
              MOVE 'FECH'       TO WSS-CAI-DISP
              MOVE WSS-NUM-DPVC TO WSS-DIPI
              MOVE WSS-NUM-MPVC TO WSS-MIPI
              MOVE WSS-NUM-SPVC TO WSS-SIPI
              MOVE WSS-NUM-APVC TO WSS-AIPI
              MOVE WSS-FIPI     TO WSS-IIC-DISP
              MOVE WSS-KEY-DISP TO RCE-KEY-DISP IN RCE
              PERFORM COL-FIO-RCE
              IF NOT FIO-STAT-OKS
                 MOVE 'LIQVFCTPUTER' TO MSG-COD-MENS.
      *SMC-FIN 24.08.1993
       FIN-PUT-VFCT-FLJO.
           EXIT.

      *SMC-INI 24.08.1993
       GRA-RCES-F SECTION.
       INI-GRA-RCES-F.
      *GRABA RCE NORMAL IDLC = 999
           MOVE ZEROS             TO RCE-KEY-DISP IN RCE
           PERFORM COL-FIO-RCE
           IF NOT FIO-STAT-OKS
              MOVE 'RCE999CRF   ' TO MSG-COD-MENS
              GO TO FIN-GRA-RCES-F.

           MOVE 'S'  TO WSS-COD-LRCE IN WSS-VARI.

      *GRABA RCE NORMAL IDLC = 998 SI TIPO CALCULO ES 'FP'.
           IF NOT ( WSS-EVC-TCFP IN WSS-VARI = 'S' )
              GO TO FIN-GRA-RCES-F.

           MOVE OPC-CAI-IOPC IN OPC-FLD TO RCE-CAI-IOPC IN RCE.
           MOVE OPC-IIC-IOPC IN OPC-FLD TO RCE-IIC-IOPC IN RCE.
           MOVE 998                     TO RCE-NUM-IDLC IN RCE.
           MOVE FIO-GET-KEY-UPD TO FIO-CMND.
           PERFORM COL-FIO-RCE.
           IF FIO-STAT-OKS
               MOVE FIO-MOD TO FIO-CMND
           ELSE
               MOVE FIO-PUT TO FIO-CMND.

           MOVE ICG-NUM-PREP IN ICG TO WSS-NUM-VCTE IN WSS-VARI
           MOVE ICG-NUM-PREP IN ICG TO WSS-NUM-PRDO IN WSS-VARI
           MOVE WSS-RCE-DISP IN WSS-VARI TO RCE-GLS-DISP IN RCE
           MOVE ZEROS                    TO RCE-KEY-DISP IN RCE
           PERFORM COL-FIO-RCE
           IF NOT FIO-STAT-OKS
              MOVE 'RCE998CRF   ' TO MSG-COD-MENS.
       FIN-GRA-RCES-F.
           EXIT.

       GRA-RCE-NORMAL SECTION.
       INI-GRA-RCE-NORMAL.
      *SI ES TASA FIJA Y TIENE OTRA ICG GRABA RCE NORMAL A PROXIMA FINICIO
      *DE ICG.
      *VALIDA SI ES TASA FIJA NO GENERAR RCE=998

           IF ( WSS-EVC-TCFP IN WSS-VARI = 'S' )
                MOVE 'RCEWRT998TF ' TO MSG-COD-MENS
                GO TO MSG-CMN-ACC.

           MOVE FIO-GET-NXT TO FIO-CMND.
           PERFORM COL-FIO-ICG.
           IF NOT ( FIO-STAT-OKS AND
                    ICG-CAI-IOPC IN ICG = OPC-CAI-IOPC IN OPC-FLD AND
                    ICG-IIC-IOPC IN ICG = OPC-IIC-IOPC IN OPC-FLD AND
                    ICG-NUM-ICAN IN ICG = ZEROES AND
                    ICG-CIC-IOPV IN ICG = SPACES AND
                    ICG-NUM-IVCT IN ICG = ZEROES AND
                    ICG-IND-TTAS IN ICG = 'INT' )
                    PERFORM OBT-TSA-OPC
                    GO TO FIN-GRA-RCE-NORMAL.

           MOVE OPC-CAI-IOPC IN OPC-FLD TO RCE-CAI-IOPC IN RCE.
           MOVE OPC-IIC-IOPC IN OPC-FLD TO RCE-IIC-IOPC IN RCE.
           MOVE 999                     TO RCE-NUM-IDLC IN RCE.
           MOVE FIO-GET-KEY-UPD TO FIO-CMND.
           PERFORM COL-FIO-RCE.
           IF FIO-STAT-OKS
               MOVE FIO-MOD TO FIO-CMND
           ELSE
               MOVE FIO-PUT TO FIO-CMND.
           MOVE 'FECH'              TO RCE-CAI-FVEN IN RCE
           MOVE ICG-FEC-FINI IN ICG TO RCE-FEC-FVEN IN RCE
           PERFORM COL-FIO-RCE.
           IF NOT FIO-STAT-OKS
               MOVE 'RCERWT999TF ' TO MSG-COD-MENS
               GO TO MSG-CMN-ACC.

      *RESTAURA ICG LEIDA.
           PERFORM OBT-TSA-OPC.
       FIN-GRA-RCE-NORMAL.
           EXIT.
      *SMC-FIN 24.08.1993

       OBT-TSA-OPC SECTION.
       INI-OBT-TSA-OPC.
           MOVE SPACES TO MSG-COD-MENS.
           MOVE OPC-CAI-IOPC IN OPC-FLD TO ICG-CAI-IOPC IN ICG.
           MOVE OPC-IIC-IOPC IN OPC-FLD TO ICG-IIC-IOPC IN ICG.
           MOVE ZEROES                  TO ICG-NUM-ICAN IN ICG.
           MOVE SPACES                  TO ICG-CIC-IOPV IN ICG.
           MOVE ZEROES                  TO ICG-NUM-IVCT IN ICG.
           MOVE 'INT'                   TO ICG-IND-TTAS IN ICG.
           MOVE ZEROES                  TO ICG-FEC-FINI IN ICG.
           MOVE FIO-GET-NLS TO FIO-CMND.
           PERFORM COL-FIO-ICG.
           IF NOT ( FIO-STAT-OKS AND
                    ICG-CAI-IOPC IN ICG = OPC-CAI-IOPC IN OPC-FLD AND
                    ICG-IIC-IOPC IN ICG = OPC-IIC-IOPC IN OPC-FLD AND
                    ICG-NUM-ICAN IN ICG = ZEROES AND
                    ICG-CIC-IOPV IN ICG = SPACES AND
                    ICG-NUM-IVCT IN ICG = ZEROES AND
                    ICG-IND-TTAS IN ICG = 'INT' )
                MOVE 'ICG    NEX' TO MSG-COD-MENS.
       FIN-OBT-TSA-OPC.
           EXIT.

      *HPM ini
       PRO-ACT-VEN SECTION.
       INI-PRO-ACT-VEN.
           IF WSS-OPEC NOT = 'D'
               GO TO FIN-PRO-ACT-VEN.
      *
      * En esta rutina de requiere datos de ICG pero no se leera 
      * dicho registro pues fue leido en rutina PUT-VFCT.
      *
           MOVE OPC-CAI-IOPC IN OPC TO VEN-CAI-IOPC IN VEN.
           MOVE OPC-IIC-IOPC IN OPC TO VEN-IIC-IOPC IN VEN.
           MOVE ZEROES              TO VEN-NUM-IVEN IN VEN.
           MOVE FIO-GET-NLS TO FIO-CMND.
       LUP-PRO-ACT-VEN.
           PERFORM COL-FIO-VEN.
           IF NOT ( FIO-STAT-OKS AND
                    VEN-CAI-IOPC IN VEN = OPC-CAI-IOPC IN OPC AND
                    VEN-IIC-IOPC IN VEN = OPC-IIC-IOPC IN OPC )
               GO TO SIG-PRO-ACT-VEN.
           MOVE VEN-CIC-IOPC IN VEN TO DLC-CIC-IOPC IN DLC
           MOVE VEN-NUM-IDLC IN VEN TO DLC-NUM-IDLC IN DLC
           MOVE FIO-GET-KEY TO FIO-CMND
           PERFORM COL-FIO-DLC
           IF NOT FIO-STAT-OKS
               MOVE FIO-BCK-OUT TO FIO-CMND
               PERFORM COL-FIO-DLC
               MOVE 'DLCIDLCNEX  ' TO MSG-COD-MENS
               GO TO FIN-PRO-ACT-VEN.
      *HPM Se pregunta por igual a 'R' o 'C' para que sean considerados
      *HPM aquellos registros grabados antes de esta modificacion, los que 
      *HPM no tienen valor 'A' sino ' '.
           IF DLC-MSC-STAT IN DLC = 'R' OR 'C'
               MOVE FIO-GET-NXT TO FIO-CMND
               GO TO LUP-PRO-ACT-VEN.
      * Llamado a rutina de calculo tasa de interes
           MOVE OPC-NUM-DCOL IN OPC TO INT-DUNO.
           MOVE OPC-NUM-MCOL IN OPC TO INT-MUNO.
           MOVE OPC-NUM-SCOL IN OPC TO INT-SUNO.
           MOVE OPC-NUM-ACOL IN OPC TO INT-AUNO.
           MOVE DLC-NUM-DMAV IN DLC TO INT-DDOS.
           MOVE DLC-NUM-MMAV IN DLC TO INT-MDOS.
           MOVE DLC-NUM-SMAV IN DLC TO INT-SDOS.
           MOVE DLC-NUM-AMAV IN DLC TO INT-ADOS.
           MOVE OPC-COD-VCOC IN OPC TO INT-VCAM.
           MOVE OPC-NUM-DCOL IN OPC TO INT-DBTV.
           MOVE OPC-NUM-MCOL IN OPC TO INT-MBTV.
           MOVE OPC-NUM-SCOL IN OPC TO INT-SBTV.
           MOVE OPC-NUM-ACOL IN OPC TO INT-ABTV.
           MOVE ICG-SGV-TINT IN ICG TO INT-TINT.
           MOVE ICG-COD-TINT IN ICG TO INT-TIPT.
           PERFORM COL-CAL-INT
           IF INT-CMSG > SPACES
               MOVE FIO-BCK-OUT TO FIO-CMND
               PERFORM COL-FIO-DLC
               MOVE 'OPCTINTERR  ' TO MSG-COD-MENS
               GO TO FIN-PRO-ACT-VEN.
      * Calculo de Capital
           ADD 1 INT-TIPE GIVING CVI-TIPE. 
           DIVIDE VEN-VAL-FINA IN VEN BY CVI-TIPE
                                      GIVING WSS-VAL-CAPI IN WSS-VARI.
      * Ajuste de decimales
           IF WSS-PESO-SI
              MOVE WSS-VAL-CAPI IN WSS-VARI TO PES-SGV-DECI IN PES-VARI
              PERFORM PES-SCTV
              MOVE PES-SGV-ENTE IN PES-VARI TO WSS-VAL-CAPI IN WSS-VARI.
      * Acumula intereses
           ADD      VEN-VAL-FINA IN VEN      TO   WSS-VAL-VIFI.
           SUBTRACT WSS-VAL-CAPI IN WSS-VARI FROM WSS-VAL-VIFI.
      * Actualiza VEN
           MOVE FIO-GET-KEY-UPD TO FIO-CMND
           PERFORM COL-FIO-VEN
           IF NOT FIO-STAT-OKS
               MOVE FIO-BCK-OUT TO FIO-CMND
               PERFORM COL-FIO-VEN
               MOVE 'VENIVENNEX  ' TO MSG-COD-MENS
               GO TO FIN-PRO-ACT-VEN.
           MOVE WSS-VAL-CAPI IN WSS-VARI TO VEN-VAL-CAPI IN VEN.
           MOVE WSS-VAL-CAPI IN WSS-VARI TO VEN-VAL-SCAP IN VEN.
           IF INT-IETB > SPACES
               MOVE 'N'    TO VEN-IND-CALC IN VEN
               MOVE ZEROES TO VEN-VAL-CAPI IN VEN
               MOVE ZEROES TO VEN-VAL-SCAP IN VEN.
           MOVE FIO-MOD TO FIO-CMND.
           PERFORM COL-FIO-VEN.
           IF NOT FIO-STAT-OKS
               MOVE FIO-BCK-OUT TO FIO-CMND
               PERFORM COL-FIO-VEN
               MOVE 'VENIVENNOMOD' TO MSG-COD-MENS
               GO TO FIN-PRO-ACT-VEN.
           ADD 1 TO VEN-NUM-IVEN IN VEN
           MOVE FIO-GET-NLS TO FIO-CMND.
           GO TO LUP-PRO-ACT-VEN.
       SIG-PRO-ACT-VEN.
      *DAD ini  02-AUG-1994
           IF WSS-IND-TMON IN WSS-VARI = WSS-IND-TMMN IN WSS-VARI AND
              WSS-PESO-NO
               MOVE OPC-COD-VCOC IN OPC-FLD TO TAB-COD-CTAB IN TAB
               MOVE '0999  '                TO TAB-CIC-CTAB IN TAB
               MOVE OPC-NUM-DCOL IN OPC-FLD TO TAB-NUM-DTRN IN TAB
               MOVE OPC-NUM-MCOL IN OPC-FLD TO TAB-NUM-MTRN IN TAB
               MOVE OPC-NUM-SCOL IN OPC-FLD TO TAB-NUM-STRN IN TAB
               MOVE OPC-NUM-ACOL IN OPC-FLD TO TAB-NUM-ATRN IN TAB
               PERFORM GET-VCAM
               IF MSG-COD-MENS IN MSG NOT > SPACES
                   MULTIPLY CAM-SGV-VCAM IN CAM      BY
                            WSS-VAL-VIFI IN WSS-VARI GIVING
                            WSS-VAL-VIFI IN WSS-VARI
                   MOVE WSS-VAL-VIFI IN WSS-VARI TO
                        PES-SGV-DECI IN PES-VARI
                   PERFORM PES-SCTV
                   MOVE PES-SGV-ENTE IN PES-VARI TO
                        WSS-VAL-VIFI IN WSS-VARI
                   SUBTRACT WSS-VAL-VIFI IN WSS-VARI FROM
                            OPC-SGV-LIQU IN OPC-FLD
               ELSE
                   MOVE FIO-BCK-OUT TO FIO-CMND
                   PERFORM COL-FIO-OPC
                   GO TO FIN-PRO-ACT-VEN
           ELSE
      *DAD fin  02-AUG-1994
               SUBTRACT WSS-VAL-VIFI FROM OPC-SGV-LIQU IN OPC-FLD.
        FIN-PRO-ACT-VEN.
           EXIT.
      *HPM fin

       PRO-ACT-CYA SECTION.
       INI-PRO-ACT-CYA.
           MOVE SPACES TO MSG-COD-MENS.
           MOVE 0 TO WSS-NUM-TABN.
           MOVE 0 TO WSS-NUM-TABZ.
           MOVE 0 TO WSS-SGV-LIQU.

           MOVE OPC-CAI-IOPC IN OPC-FLD TO CYA-CAI-IOPC IN CYA.
           MOVE OPC-IIC-IOPC IN OPC-FLD TO CYA-IIC-IOPC IN CYA.
           MOVE ZEROES                  TO CYA-NUM-ICAN IN CYA.
           MOVE ZEROES                  TO CYA-NUM-ICYA IN CYA.
           MOVE FIO-GET-NLS TO FIO-CMND.
      *Lee cada CYA ( ABONO )
       LUP-PRO-ACT-CYA.
           PERFORM COL-FIO-CYA.
           IF NOT ( FIO-STAT-OKS AND
               CYA-CAI-IOPC IN CYA = OPC-CAI-IOPC IN OPC-FLD AND
               CYA-IIC-IOPC IN CYA = OPC-IIC-IOPC IN OPC-FLD AND
               CYA-NUM-ICAN IN CYA = ZEROES )
               GO TO ACT-PRO-ACT-CYA.
           ADD 1 TO WSS-NUM-TABN.
      *Acumula el valor liquido ( > 0 ) del CYA en particular 
           IF CYA-SGV-LIQU IN CYA NOT > ZEROES OR
              CYA-IND-FREE IN CYA = 'S'
               MOVE CYA-KEY-ICYA IN CYA TO WSS-KEY-ICYA IN WSS-VARI
               ADD 1 TO WSS-NUM-TABZ
           ELSE
               ADD CYA-SGV-LIQU IN CYA TO WSS-SGV-LIQU IN WSS-VARI.

           MOVE FIO-GET-NXT TO FIO-CMND.
           GO TO LUP-PRO-ACT-CYA.

       ACT-PRO-ACT-CYA.
           IF WSS-NUM-TABN = ZEROES
               MOVE 'CYA    NOABN' TO MSG-COD-MENS
               GO TO FIN-PRO-ACT-CYA.
           IF WSS-NUM-TABZ NOT = 1
               MOVE 'CYA    ABNN1' TO MSG-COD-MENS
               MOVE WSS-NUM-TABZ   TO FRM-MEN2
               GO TO FIN-PRO-ACT-CYA.
      *ALD
      *     MOVE 'TVAL' TO MSC-CIC-TMSC IN MSC.
      *     MOVE '0'    TO MSC-CIC-CMSC IN MSC.
      *     MOVE 'TAB' TO FIO-SIST.
      *     MOVE 'MSC-CIC-TABL' TO FIO-AKEY.
      *     MOVE FIO-GET-KEY TO FIO-CMND.
      *     PERFORM GNS-FIO-MSC.
      *     IF NOT FIO-STAT-OKS
      *         MOVE SPACES TO MSC-COD-CMSC IN MSC.
      *     MOVE WSS-IND-TMMX IN WSS-VARI TO WSS-IND-TMON IN WSS-VARI.
      *     IF OPC-MSC-TVOC IN OPC-FLD = MSC-COD-CMSC IN MSC
      *         MOVE WSS-IND-TMMN IN WSS-VARI TO WSS-IND-TMON IN WSS-VARI
      *         MOVE OPC-COD-VCOC IN OPC-FLD TO TAB-COD-CTAB IN TAB
      *         MOVE '0999  '                TO TAB-CIC-CTAB IN TAB
      *         MOVE OPC-NUM-DCOL IN OPC-FLD TO TAB-NUM-DTRN IN TAB
      *         MOVE OPC-NUM-MCOL IN OPC-FLD TO TAB-NUM-MTRN IN TAB
      *         MOVE OPC-NUM-SCOL IN OPC-FLD TO TAB-NUM-STRN IN TAB
      *         MOVE OPC-NUM-ACOL IN OPC-FLD TO TAB-NUM-ATRN IN TAB
      *         PERFORM GET-VCAM
      *         IF MSG-COD-MENS IN MSG NOT > SPACES
      *             MULTIPLY CAM-SGV-VCAM IN CAM BY WSS-SGV-LIQU IN
      *                    WSS-VARI GIVING WSS-SGV-LIQU IN WSS-VARI
      *         ELSE
      *             IF MSG-COD-MENS IN MSG = 'CODVCAMEQL'
      *                 MOVE 1 TO CAM-SGV-VCAM IN CAM
      *                 MOVE SPACES TO MSG-COD-MENS IN MSG
      *             ELSE
      *                 GO TO FIN-PRO-ACT-CYA.
      *
      *JSS 25-JUL-1990 20:444
      *     IF WSS-SGV-LIQU IN WSS-VARI > OPC-SGV-LIQU IN OPC-FLD
      *         IF NOT ( OPC-SGV-LIQU IN OPC-FLD NOT > ZEROES AND
      *                  WSS-OPEC = 'B' )
      *             MOVE 'OPCLIQUSABN<' TO MSG-COD-MENS
      *             MOVE WSS-SGV-LIQU TO WSS-SGV-LIQU-EDT
      *             MOVE WSS-SGV-LIQU-ALF TO FRM-MEN2
      *             GO TO FIN-PRO-ACT-CYA.
      *
           MOVE WSS-KEY-ICYA IN WSS-VARI TO CYA-KEY-ICYA IN CYA.
           MOVE FIO-GET-KEY-UPD TO FIO-CMND.
           PERFORM COL-FIO-CYA.
           IF NOT FIO-STAT-OKS
               MOVE 'CYA    NGKUP' TO MSG-COD-MENS
               GO TO FIN-PRO-ACT-CYA.

           SUBTRACT WSS-SGV-LIQU IN WSS-VARI FROM
                    OPC-SGV-LIQU IN OPC-FLD  GIVING CYA-SGV-LIQU IN CYA.

      *ALD
      *     IF WSS-IND-TMON IN WSS-VARI = WSS-IND-TMMN IN WSS-VARI 
      *         DIVIDE CYA-SGV-LIQU IN CYA BY CAM-SGV-VCAM IN CAM
      *                GIVING CYA-SGV-LIQU IN CYA ROUNDED.
      *
           MOVE 'S' TO CYA-IND-FREE IN CYA.

           PERFORM GET-FHOY.
      *     MOVE HOY-STP-ITRN TO CYA-STP-IINV IN CYA.

           MOVE FIO-MOD TO FIO-CMND.
           PERFORM COL-FIO-CYA.
           IF NOT FIO-STAT-OKS
               MOVE 'CYA    NGKUP' TO MSG-COD-MENS
               GO TO FIN-PRO-ACT-CYA.
      *
       FIN-PRO-ACT-CYA.
           EXIT.

       RET-OPC-OPC SECTION.
       INI-RET-OPC-OPC.
           MOVE OPC-MSC-TVOC IN OPC-FLD TO OPC-MSC-TVOC IN OPC.
           MOVE OPC-COD-TOOC IN OPC-FLD TO OPC-COD-TOOC IN OPC.
           MOVE OPC-COD-OFOC IN OPC-FLD TO OPC-COD-OFOC IN OPC.
           MOVE OPC-COD-VCOC IN OPC-FLD TO OPC-COD-VCOC IN OPC.
           MOVE OPC-COD-AOOC IN OPC-FLD TO OPC-COD-AOOC IN OPC.
           MOVE OPC-VAL-CRED IN OPC-FLD TO OPC-VAL-CRED IN OPC.
           MOVE OPC-VAL-SCRE IN OPC-FLD TO OPC-VAL-SCRE IN OPC.
           MOVE OPC-CAI-ILDC IN OPC-FLD TO OPC-CAI-ILDC IN OPC.
           MOVE OPC-IIC-ILDC IN OPC-FLD TO OPC-IIC-ILDC IN OPC.
           MOVE OPC-NUM-VCVG IN OPC-FLD TO OPC-NUM-VCVG IN OPC.
           MOVE OPC-IND-RENO IN OPC-FLD TO OPC-IND-RENO IN OPC.
           MOVE OPC-CAI-ICEN IN OPC-FLD TO OPC-CAI-ICEN IN OPC.
           MOVE OPC-IIC-ICEN IN OPC-FLD TO OPC-IIC-ICEN IN OPC.
           MOVE OPC-COD-SEGD IN OPC-FLD TO OPC-COD-SEGD IN OPC.
           MOVE OPC-NUM-DINP IN OPC-FLD TO OPC-NUM-DINP IN OPC.
           MOVE OPC-NUM-MINP IN OPC-FLD TO OPC-NUM-MINP IN OPC.
           MOVE OPC-NUM-SINP IN OPC-FLD TO OPC-NUM-SINP IN OPC.
           MOVE OPC-NUM-AINP IN OPC-FLD TO OPC-NUM-AINP IN OPC.
           MOVE OPC-NUM-DCOL IN OPC-FLD TO OPC-NUM-DCOL IN OPC.
           MOVE OPC-NUM-MCOL IN OPC-FLD TO OPC-NUM-MCOL IN OPC.
           MOVE OPC-NUM-SCOL IN OPC-FLD TO OPC-NUM-SCOL IN OPC.
           MOVE OPC-NUM-ACOL IN OPC-FLD TO OPC-NUM-ACOL IN OPC.
           MOVE OPC-NUM-DING IN OPC-FLD TO OPC-NUM-DING IN OPC.
           MOVE OPC-NUM-MING IN OPC-FLD TO OPC-NUM-MING IN OPC.
           MOVE OPC-NUM-SING IN OPC-FLD TO OPC-NUM-SING IN OPC.
           MOVE OPC-NUM-AING IN OPC-FLD TO OPC-NUM-AING IN OPC.
      *ALD-BCI-INI/07.09.1995
           MOVE OPC-VAL-SEGP IN OPC-FLD TO OPC-VAL-SEGP IN OPC.
      *ALD-BCI-FIN/07.09.1995
           MOVE OPC-VAL-SEGD IN OPC-FLD TO OPC-VAL-SEGD IN OPC.
           MOVE OPC-IND-GARA IN OPC-FLD TO OPC-IND-GARA IN OPC.
           MOVE OPC-SGV-VCOM IN OPC-FLD TO OPC-SGV-VCOM IN OPC.
           MOVE OPC-MSC-MCVF IN OPC-FLD TO OPC-MSC-MCVF IN OPC.
           MOVE OPC-IND-AFER IN OPC-FLD TO OPC-IND-AFER IN OPC.
           MOVE OPC-VAL-GAST IN OPC-FLD TO OPC-VAL-GAST IN OPC.
           MOVE OPC-SGV-LIQU IN OPC-FLD TO OPC-SGV-LIQU IN OPC.
           MOVE OPC-COD-RMOC IN OPC-FLD TO OPC-COD-RMOC IN OPC.
           MOVE OPC-COD-CDOC IN OPC-FLD TO OPC-COD-CDOC IN OPC.
      *<<<< FIN_RET_OPC_OPC
           MOVE OPC-NUM-VCVG IN OPC-FLD TO OPC-NUM-VCOR IN OPC.
      *>>>>
       FIN-RET-OPC-OPC.
           EXIT.

       PRO-DLC-DDD SECTION.
       INI-PRO-DLC-DDD.
           MOVE SPACES TO FRM-MENS.
           MOVE 0      TO WSS-IEVC.
       LUP-PRO-DLC-DDD.
           ADD 1 TO WSS-IEVC.
           IF WSS-IEVC > WSS-MEVC
               GO TO FIN-PRO-DLC-DDD.
           MOVE OPC-CAI-IOPC IN OPC-FLD         TO DLC-CAI-IOPC IN DLC.
           MOVE OPC-IIC-IOPC IN OPC-FLD         TO DLC-IIC-IOPC IN DLC.
           MOVE EVC-NUM-IDLC IN REG-EVC(WSS-IEVC)
                                                TO DLC-NUM-IDLC IN DLC.
           MOVE FIO-GET-KEY-UPD TO FIO-CMND.
           PERFORM COL-FIO-DLC.
           IF NOT FIO-STAT-OKS
               MOVE FIO-MENS TO FRM-MENS
               MOVE FIO-BCK-OUT TO FIO-CMND
               PERFORM COL-FIO-OPC
               GO TO FIN-PRO-DLC-DDD.
           MOVE OPC-FEC-FCOL IN OPC TO DLC-FEC-FAMT IN DLC.
           MOVE 0                   TO DLC-VAL-SCPA IN DLC.
           MOVE 0                   TO DLC-VAL-SINT IN DLC.
      *
           MOVE FIO-MOD TO FIO-CMND.
           PERFORM COL-FIO-DLC.
           IF NOT FIO-STAT-OKS
               MOVE FIO-MENS TO FRM-MENS
               MOVE FIO-BCK-OUT TO FIO-CMND
               PERFORM COL-FIO-OPC
               GO TO FIN-PRO-DLC-DDD.
           GO TO LUP-PRO-DLC-DDD.
       FIN-PRO-DLC-DDD.
           EXIT.

       PRO-OPC SECTION.
       INI-PRO-OPC.
           MOVE OPC-CIC-IOPC IN OPC TO WSS-CIC-IOPC IN WSS-VARI.
           MOVE OPC-CIC-IOPC IN OPC TO RDC-CIC-IOPC IN RDC.
           MOVE ZEROES              TO RDC-NUM-IDLC IN RDC.
           MOVE 'RDC-KEY-IDLC' TO FIO-AKEY.
           MOVE FIO-GET-NLS    TO FIO-CMND.
           PERFORM COL-FIO-RDC.
           IF NOT ( FIO-STAT-OKS AND
                    RDC-CIC-IOPC IN RDC = OPC-CIC-IOPC IN OPC AND
                    RDC-NUM-IDLC IN RDC = ZEROES ) 
               GO TO FIN-PRO-OPC.
       LUP-INP-OPC.
           MOVE ADR-RDC-REQA TO ADR-AUX-REQA.
           MOVE RDC-CIC-ICLI IN RDC TO WSS-CIC-ICLI IN WSS-VARI.
           MOVE SPACES TO RDC-CIC-IOPC IN RDC.
           MOVE ZEROES TO RDC-NUM-IDLC IN RDC.
           MOVE FIO-GET-NLS TO FIO-CMND.
       LUP-NXT-RDC.
           PERFORM COL-FIO-RDC.
           IF NOT FIO-STAT-OKS
               GO TO LUP-NXT-OPC.
           IF WSS-CIC-ICLI IN WSS-VARI NOT = RDC-CIC-ICLI IN RDC
               GO TO LUP-NXT-OPC.
           IF RDC-NUM-IDLC IN RDC > ZEROES OR
              WSS-CIC-IOPC IN WSS-VARI = RDC-CIC-IOPC IN RDC
               MOVE FIO-GET-NXT TO FIO-CMND
               GO TO LUP-NXT-RDC.
           MOVE RDC-CIC-IOPC IN RDC TO OPC-CIC-IOPC IN OPC.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM COL-FIO-OPC
           IF FIO-STAT-OKS AND
      *       ( OPC-MSC-STAT = 'M' OR
      *         OPC-MSC-STAT = 'I' OR
              ( OPC-ACTUALIZADA OR
                OPC-MSC-STAT NOT > SPACES )
               MOVE 'COL' TO MSG-COD-SIST
               MOVE 'CLI    NOVRF' TO MSG-COD-MENS
               PERFORM GET-MSG
      *               STRING MSG-GLS-DCOR
      *                OPC-CIC-IOPC IN OPC DELIMITED BY SIZE
      *         INTO FRM-MEN2
               MOVE MSG-GLS-DCOR TO CPT-STR1
               MOVE OPC-CIC-IOPC TO CPT-STR2
               PERFORM CPT-BLKS
               MOVE CPT-STRN TO FRM-MEN2
               GO TO FIN-PRO-OPC.
           MOVE FIO-GET-NXT TO FIO-CMND.
           GO TO LUP-NXT-RDC.
       LUP-NXT-OPC.
           MOVE ADR-AUX-REQA TO ADR-RDC-REQA.
           MOVE FIO-KDEF-S TO FIO-KDEF.
           MOVE FIO-GET-NXT TO FIO-CMND.
           MOVE 'RDC-KEY-IDLC' TO FIO-AKEY.
           PERFORM COL-FIO-RDC.
           IF FIO-STAT-OKS AND
              RDC-CIC-IOPC IN RDC = WSS-CIC-IOPC IN WSS-VARI AND
              RDC-NUM-IDLC IN RDC = ZEROES
               GO TO LUP-INP-OPC.
       FIN-PRO-OPC.
           EXIT.

      *Busca Registros EVC.
       BUS-REVC SECTION.
       INI-BUS-REVC.
      *SMC-INI 24.08.1993.
           MOVE 'N'   TO WSS-EVC-TCFP IN WSS-VARI
           MOVE 'N'   TO WSS-SWT-PEVC IN WSS-VARI.
      *SMC-FIN 24.08.1993.

           MOVE SPACES TO MSG-COD-MENS.

           MOVE 0 TO WSS-IEVC.
           MOVE OPC-CIC-IOPC IN OPC TO EVC-CIC-IOPC IN EVC.
           MOVE ZEROES              TO EVC-NUM-IEVC IN EVC.
           MOVE FIO-GET-NLS TO FIO-CMND.
       LUP-BUS-REVC.
           PERFORM COL-FIO-EVC.
           IF NOT ( FIO-STAT-OKS AND
                    EVC-CIC-IOPC IN EVC = OPC-CIC-IOPC IN OPC )
               GO TO FIN-BUS-REVC.

      *SMC-INI 24.08.1993.
           IF WSS-EVC-TCFP IN WSS-VARI = 'S'
              MOVE 'EVCPTCFPDSUN' TO MSG-COD-MENS
              GO TO FIN-BUS-REVC.
      *SMC-FIN 24.08.1993.

           ADD 1 TO WSS-IEVC.
           IF WSS-IEVC > WSS-LEVC
               MOVE 'EVCIEVCOVFLW' TO MSG-COD-MENS
               GO TO FIN-BUS-REVC.

           MOVE EVC TO REG-EVC(WSS-IEVC).
           MOVE 0   TO EVC-NUM-IVCT IN REG-EVC(WSS-IEVC).

      *Busca el CIC de EVC-MSC-TCVE en TAB CVC ( en sist COL )
           MOVE 'COL' TO TAB-COD-SIST FIO-SIST.
           MOVE 'CVC' TO TAB-COD-TTAB IN TAB.
           MOVE EVC-MSC-TCVE IN EVC TO TAB-COD-CTAB IN TAB.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM GNS-FIO-TAB.
           IF NOT FIO-STAT-OKS
               MOVE 'CICTCVENEX' TO MSG-COD-MENS
               MOVE TAB-COD-TABL TO FRM-MEN2
               GO TO FIN-BUS-REVC.
           MOVE TAB-CIC-CTAB IN TAB TO WSS-VCVC(WSS-IEVC).
           MOVE EVC-FEC-FPVC IN EVC TO WSS-FPVF(WSS-IEVC).

      *SMC-INI 24.08.1993
      *MARCA SWITCH PARA VALIDAR QUE SEA UNICA LA EVC CUANDO TIENE TIPO
      *DE CALCULO FP.
           IF TAB-CIC-CTAB IN TAB = 'FP'
              MOVE 'S'   TO WSS-EVC-TCFP IN WSS-VARI
              IF WSS-SWT-PEVC IN WSS-VARI = 'S'
                 MOVE 'EVCPTCFPDSUN' TO MSG-COD-MENS
                 GO TO FIN-BUS-REVC.

           MOVE 'S' TO WSS-SWT-PEVC IN WSS-VARI.
      *SMC-FIN 24.08.1993

      *Realiza el analisis de feriado para la fecha final
      *de primer vencimiento
           IF OPC-IND-AFER IN OPC-FLD NOT = 'S'
               GO TO NXT-BUS-REVC.
           MOVE WSS-DPVF(WSS-IEVC) TO FEC-ITM1.
           MOVE WSS-MPVF(WSS-IEVC) TO FEC-ITM2.
           MOVE WSS-SPVF(WSS-IEVC) TO FEC-ITM3.
           MOVE WSS-APVF(WSS-IEVC) TO FEC-ITM4.
           MOVE FEC-FORM-FEC TO FEC-FORM.
           MOVE FEC-VHBL-S   TO FEC-VHBL.
           MOVE FEC-FBLK-N   TO FEC-FBLK.
           MOVE FEC-CHOY-N   TO FEC-CHOY.
           MOVE FEC-VAL-FEC  TO FEC-CMND.
           PERFORM PRO-FEC.
           IF ( NOT FEC-STAT-OKS ) AND ( NOT FEC-STAT-FER )
               MOVE 'EVCAFERERROR' TO MSG-COD-MENS
               MOVE FEC-MENS       TO FRM-MEN2
               GO TO FIN-BUS-REVC.
           IF FEC-STAT-FER
               MOVE FEC-FORM-FEC TO FEC-FORM
               MOVE FEC-SIG-HBL  TO FEC-CMND
      *        PERFORM PRO-FEC
               PERFORM CAL-FEC
               IF FEC-STAT-OKS
                   MOVE FEC-ITM1 TO WSS-DPVF(WSS-IEVC)
                   MOVE FEC-ITM2 TO WSS-MPVF(WSS-IEVC)
                   MOVE FEC-ITM3 TO WSS-SPVF(WSS-IEVC)
                   MOVE FEC-ITM4 TO WSS-APVF(WSS-IEVC)
               ELSE
                   MOVE 'EVCSHBLERROR' TO MSG-COD-MENS
                   MOVE FEC-MENS       TO FRM-MEN2
                   GO TO FIN-BUS-REVC.
       NXT-BUS-REVC.
           MOVE FIO-GET-NXT TO FIO-CMND.
           GO TO LUP-BUS-REVC.
       FIN-BUS-REVC.
           MOVE WSS-IEVC TO WSS-MEVC.
       EXT-BUS-REVC.
           EXIT.

      *Determina EVC-NUM-IVCT orden de EVC 
       DET-OEVC SECTION.
       INI-DET-OEVC.
           MOVE 0 TO WSS-I.
       NXI-DET-OEVC.
           ADD 1 TO WSS-I.
      *En el caso de estructuras concurrentes, llegar al final es
      *redundante, en todo caso no afecta
           IF WSS-I > WSS-MEVC
               GO TO FIN-DET-OEVC.

           MOVE '999999999' TO WSS-FMIN.
           MOVE 0 TO WSS-J WSS-K.
       NXJ-DET-OEVC.
           ADD 1 TO WSS-J.
           IF WSS-J > WSS-MEVC
               IF WSS-K > ZEROES
                   MOVE WSS-I TO EVC-NUM-IVCT IN REG-EVC(WSS-K)
                   PERFORM CMP-OEVC
                   IF WSS-I = 1
                       MOVE WSS-K TO WSS-EVC1
                       GO TO NXI-DET-OEVC
                   ELSE
                       GO TO NXI-DET-OEVC
               ELSE
                   GO TO FIN-DET-OEVC.

           IF EVC-NUM-IVCT IN REG-EVC(WSS-J) > ZEROES
               GO TO NXJ-DET-OEVC.
      *JSS 8-NOV-1991
      *    IF EVC-FEC-FPVC IN REG-EVC(WSS-J) < WSS-FMIN
      *        MOVE EVC-FEC-FPVC IN REG-EVC(WSS-J) TO WSS-FMIN
           IF WSS-FPVF(WSS-J) < WSS-FMIN
               MOVE WSS-FPVF(WSS-J) TO WSS-FMIN
               MOVE WSS-J TO WSS-K.
           GO TO NXJ-DET-OEVC.
       FIN-DET-OEVC.
           EXIT.

       CMP-OEVC SECTION.
       INI-CMP-OEVC.
           ADD 1 WSS-K GIVING WSS-J.
       LUP-CMP-OEVC.
           IF WSS-J > WSS-MEVC
               GO TO FIN-CMP-OEVC.
      *JSS  8-NOV-1991
      *    IF EVC-FEC-FPVC IN REG-EVC(WSS-K) =
      *       EVC-FEC-FPVC IN REG-EVC(WSS-J)
           IF WSS-FPVF(WSS-K) = WSS-FPVF(WSS-J)
               MOVE WSS-I TO EVC-NUM-IVCT IN REG-EVC(WSS-J).
           ADD 1 TO WSS-J.
           GO TO LUP-CMP-OEVC.
       FIN-CMP-OEVC.
           EXIT.

       PRO-VFIN-REVC SECTION.
       INI-PRO-VFIN-REVC.
           MOVE 0 TO CVI-VCAP CVI-VFIN.
      *Carga del DLC respectivo 'DLC-MSC-MIPL' para efectos de calculo
           IF EVC-NUM-IDLC IN EVC > WSS-LDLC
               MOVE 'DLC    NEX'        TO INT-CMSG
               MOVE EVC-NUM-IDLC IN EVC TO FRM-MEN2
               GO TO FIN-PRO-VFIN-REVC.
           MOVE WSS-DLC-MIPL(EVC-NUM-IDLC IN EVC) TO WSS-MIPL.
      *
           MOVE WSS-VCVC(WSS-IEVC) TO WSS-MSC-TCVE IN WSS-VARI.
           IF WSS-MSC-TCVE = 'CO'
               IF WSS-TCCO > ZEROES
                   GO TO FIN-PRO-VFIN-REVC
               ELSE
                   MOVE WSS-IEVC TO WSS-TCCO
           ELSE
           IF WSS-MSC-TCVE = 'FO' OR 'FP'
               IF WSS-TCFO > ZEROES
                   GO TO FIN-PRO-VFIN-REVC
               ELSE
                   MOVE WSS-IEVC TO WSS-TCFO.
           PERFORM PRO-VFIN.
           IF INT-CMSG > SPACES
               GO TO FIN-PRO-VFIN-REVC.
           IF WSS-PESO-SI
               MOVE CVI-VFIN TO PES-SGV-DECI IN PES-VARI
               PERFORM PES-SCTV
               MOVE PES-SGV-ENTE IN PES-VARI TO CVI-VFIN
               MOVE CVI-VCAP TO PES-SGV-DECI IN PES-VARI
               PERFORM PES-SCTV
               MOVE PES-SGV-ENTE IN PES-VARI TO CVI-VCAP.
      *Si es boleta de garantia se debe mover el valor capital de la
      *operacion al VCVF del vencimiento
      **     IF WSS-OPEC = 'B'
      **         MOVE OPC-VAL-CRED IN OPC-FLD TO
      **                          EVC-VAL-VCVF IN REG-EVC(WSS-IEVC)
      **     ELSE
           IF ( WSS-BCCR(WSS-IEVC) = 'F' ) OR
              ( WSS-VICR(WSS-IEVC) = 'F' )
               MOVE CVI-VFIN TO EVC-VAL-VCVF IN REG-EVC(WSS-IEVC)
           ELSE
               MOVE CVI-VCAP TO EVC-VAL-VCVF IN REG-EVC(WSS-IEVC).
       FIN-PRO-VFIN-REVC.
           EXIT.

       ACT-EVCO SECTION.
       INI-ACT-EVCO.
           IF WSS-VCVC(WSS-IEVC) = 'CO' AND WSS-TCCO NOT = WSS-IEVC
               MOVE EVC-VAL-VCVF IN REG-EVC(WSS-TCCO) TO
                    EVC-VAL-VCVF IN REG-EVC(WSS-IEVC).
       FIN-ACT-EVCO.
           EXIT.

       ACT-EVFO SECTION.
       INI-ACT-EVFO.
           IF WSS-VCVC(WSS-IEVC) = ( 'FO' OR 'FP' )
                            AND WSS-TCFO NOT = WSS-IEVC
               MOVE EVC-VAL-VCVF IN REG-EVC(WSS-TCFO) TO
                    EVC-VAL-VCVF IN REG-EVC(WSS-IEVC).
       FIN-ACT-EVFO.
           EXIT.

       ACT-RICG SECTION.
       INI-ACT-RICG.
           IF EVC-NUM-IVCT IN REG-EVC(WSS-IEVC) NOT = 1
               GO TO FIN-ACT-RICG.
           MOVE OPC-CAI-IOPC IN OPC-FLD           TO VIN-CAI-IOPC.
           MOVE OPC-IIC-IOPC IN OPC-FLD           TO VIN-IIC-IOPC.
           MOVE EVC-NUM-IDLC IN REG-EVC(WSS-IEVC) TO VIN-NUM-IDLC.
           PERFORM BUS-VIN.
           IF NOT ( FIO-STAT-OKS AND ICG-COD-CVTI IN ICG > SPACES AND
                    ICG-MSC-TFPR IN ICG = 'C' )
               GO TO FIN-ACT-RICG.
           MOVE FIO-GET-KEY-UPD TO FIO-CMND.
           PERFORM COL-FIO-ICG.
           IF NOT FIO-STAT-OKS
               GO TO FIN-ACT-RICG.
           MOVE WSS-TIMC TO ICG-SGV-TINT IN ICG.
           MOVE FIO-MOD TO FIO-CMND.
           PERFORM COL-FIO-ICG.
       FIN-ACT-RICG.
           EXIT.

       PRO-VFIN SECTION.
       INI-PRO-VFIN.
      ************************************************************************
      * Se debe aceptar
      * INT-TIPT Tipo Tasa --> X X X X XXX X XXX X
      * INT-TINT Tasa Interes Informada
      * INT-FINT Fecha del Interes
      * INT-FINI Fecha Inicio
      * INT-NVVG Numero Cuotas Iguales
      * INT-SEPA Separacion
      * INT-USPA Unidad de separacion
      * INT-AFER Indicador Analisis de Feriados
      * INT-IBEG Indicador de comienzo del periodo
      * INT-VCAM Valor de Cambio
      * INT-OPEC Opera Como (P,C,D,B)
      * CVI-VFIN Valor Final ( Cap + Rea + Int ) ( si INT-OPEC = 'D' )
      * CVI-VCAP Valor Capital                   ( si INT-OPEC NOT = 'D' )
      ************************************************************************

           MOVE ZEROES TO CVI-VFIN CVI-VCAP.
      *No se desplaza dia de vencimiento para el vencimiento 1
           MOVE 1      TO CVI-NVVG.

           PERFORM OBT-TSA-OPC.
           IF MSG-COD-MENS > SPACES
                GO TO FIN-PRO-VFIN.

           MOVE OPC-COD-TOOC IN OPC-FLD TO TOC-COD-TOCR IN TOC.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM COL-FIO-TOC.
           IF NOT FIO-STAT-OKS
               MOVE 'OPCTOOCNEX' TO MSG-COD-MENS
               MOVE TOC-COD-TOCR IN TOC TO FRM-MEN2
               GO TO FIN-PRO-VFIN.
           MOVE 'COL'               TO MSC-COD-SIST FIO-SIST.
           MOVE 'OPEC'              TO MSC-COD-TMSC IN MSC.
           MOVE TOC-MSC-OPEC IN TOC TO MSC-COD-CMSC IN MSC.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM GNS-FIO-MSC.
           IF NOT FIO-STAT-OKS
               MOVE 'TOCOPECNEX' TO MSG-COD-MENS
               MOVE MSC-COD-TABL IN MSC TO FRM-MEN2
               GO TO FIN-PRO-VFIN.
           MOVE MSC-CIC-CMSC IN MSC TO TOC-MSC-OPEC IN TOC.

      ************************************************************************
           MOVE SPACES TO MSG-COD-MENS.

           MOVE INT-IBTV-UNA-VEZ TO INT-IBTV.

           MOVE ICG-COD-TINT IN ICG TO INT-TIPT.
      *     IF INT-CVTI NOT > SPACES
      *         MOVE ICG-SGV-TINT IN ICG TO INT-TINT
      *     ELSE
      *         MOVE ICG-SGV-SPRD IN ICG TO INT-TINT.

           MOVE OPC-NUM-DCOL IN OPC TO INT-DINI INT-DCOL INT-DUNO
                                       INT-DBTV.
           MOVE OPC-NUM-MCOL IN OPC TO INT-MINI INT-MCOL INT-MUNO
                                       INT-MBTV.
           MOVE OPC-NUM-SCOL IN OPC TO INT-SINI INT-SCOL INT-SUNO
                                       INT-SBTV.
           MOVE OPC-NUM-ACOL IN OPC TO INT-AINI INT-ACOL INT-AUNO
                                       INT-ABTV.

      *     MOVE ICG-NUM-DINI IN ICG TO INT-DDMA.
      *     MOVE ICG-NUM-MINI IN ICG TO INT-MDMA.
      *     MOVE ICG-NUM-SINI IN ICG TO INT-SDMA.
      *     MOVE ICG-NUM-AINI IN ICG TO INT-ADMA.

           MOVE OPC-NUM-DCOL IN OPC TO INT-DDMA.
           MOVE OPC-NUM-MCOL IN OPC TO INT-MDMA.
           MOVE OPC-NUM-SCOL IN OPC TO INT-SDMA.
           MOVE OPC-NUM-ACOL IN OPC TO INT-ADMA.

           MOVE EVC-NUM-VIGU IN EVC TO INT-NVVG.
           MOVE EVC-NUM-SEVE IN EVC TO INT-SEPA.
           MOVE EVC-IND-UTSV IN EVC TO INT-IPER.
           MOVE EVC-NUM-DPVE IN EVC TO CVI-DVEN.

           MOVE OPC-IND-AFER IN OPC TO INT-AFER.
           MOVE 0                   TO INT-IBEG.
           MOVE OPC-COD-VCOC IN OPC TO INT-VCAM.
           MOVE TOC-MSC-OPEC IN TOC TO INT-OPEC.

      * RBG/INI/31-JUL-1996
           IF (WSS-MEVC = 1) AND (INT-AFER = 'N') AND (INT-NVVG = 1)
              MOVE 'S' TO INT-AFER.
      * RBG/FIN/31-JUL-1996 

      *Diferencia en dias entre Fecha Colocacion y EVC-FEC-FPVC
           MOVE OPC-NUM-DCOL IN OPC TO FEC-DEC1.
           MOVE OPC-NUM-MCOL IN OPC TO FEC-MEC1.
           MOVE OPC-NUM-SCOL IN OPC TO FEC-SEC1.
           MOVE OPC-NUM-ACOL IN OPC TO FEC-AEC1.
           MOVE EVC-NUM-DPVC IN EVC TO FEC-DEC2.
           MOVE EVC-NUM-MPVC IN EVC TO FEC-MEC2.
           MOVE EVC-NUM-SPVC IN EVC TO FEC-SEC2.
           MOVE EVC-NUM-APVC IN EVC TO FEC-AEC2.
           MOVE FEC-FORM-FEC TO FEC-FORM.
           MOVE FEC-DIF-DIA  TO FEC-CMND.
      *    PERFORM PRO-FEC.
           PERFORM CAL-FEC.
           IF NOT FEC-STAT-OKS
               GO TO FIN-PRO-VFIN.
           MOVE FEC-NDIA TO INT-SEPV.
           MOVE 'D'      TO INT-USPV.

      *JSS
      *     PERFORM DSP-VINT.
      *
           IF WSS-VFIN-PRIMERA-VEZ
               PERFORM VAL-TMAX-CONV
               IF INT-CMSG > SPACES
                   MOVE INT-CMSG TO MSG-COD-MENS
                   GO TO FIN-PRO-VFIN
               ELSE
                   MOVE  1 TO WSS-VFIN-VEZ
                   MOVE INT-IBTV-UNA-VEZ TO INT-IBTV
                   MOVE INT-SEPA TO WSS-AXSV
                   MOVE INT-IPER TO WSS-AXUS
                   MOVE INT-SEPV TO WSS-AXSP
                   MOVE INT-USPV TO WSS-AXUP
                   MOVE INT-TIPT TO WSS-AXTT
                   PERFORM CHK-SUM-EVC
                   MOVE INT-IBTV-UNA-VEZ TO INT-IBTV
                   IF INT-CMSG NOT > SPACES
                       MOVE REG-EVC(WSS-IEVC) TO EVC
                       MOVE EVC-NUM-VIGU IN EVC TO INT-NVVG
                       MOVE WSS-AXSV            TO INT-SEPA
                       MOVE WSS-AXUS            TO INT-IPER
                       MOVE WSS-AXSP            TO INT-SEPV
                       MOVE WSS-AXUP            TO INT-USPV
                       MOVE WSS-AXTT            TO INT-TIPT
                   ELSE
                       MOVE INT-CMSG TO MSG-COD-MENS
                       GO TO FIN-PRO-VFIN.
           MOVE WSS-VCVC(WSS-IEVC) TO WSS-MSC-TCVE IN WSS-VARI.
      *Instruccion para devolver EVC a la estructura BASE sobre la
      *que se trabaja, ya que la primera vez se ejecuta SUM-EVC que
      *lee las estructuras
           MOVE REG-EVC(WSS-IEVC) TO EVC.
           IF EVC-NUM-IDLC IN EVC > WSS-LDLC
               MOVE 'LIQIDLCOVFLW'       TO INT-CMSG MSG-COD-MENS
               MOVE  EVC-NUM-IDLC IN EVC TO FRM-MEN2
               GO TO FIN-PRO-VFIN.
      *Solo para asumir la tasa maxima convencional en el calculo de
      *la primera cuota
           IF WSS-CMMC = 'F'
               MOVE WSS-TIMC TO WSS-DLC-TINT(EVC-NUM-IDLC IN EVC)
               MOVE WSS-TTMC TO INT-TIPT
      *DAD ini  31-MAR-1994   (Memo.04-02-94)
               MOVE WSS-TIMC TO INT-SPR2
               MOVE WSS-TTMC TO INT-TIP2
      *DAD fin  31-MAR-1994
      *JSS 20/05/92
           ELSE
           IF WSS-CMMC = 'C' AND EVC-NUM-IVCT IN REG-EVC(WSS-IEVC) = 1
               MOVE WSS-TIMC TO INT-SPR2.
      *
           MOVE WSS-DLC-TINT(EVC-NUM-IDLC IN EVC) TO INT-TINT.
      *

           IF WSS-MSC-TCVE IN WSS-VARI = 'IC'
               MOVE INT-SEPV TO INT-SEPA
               MOVE INT-USPV TO INT-IPER
               MOVE EVC-VAL-VENC IN EVC TO CVI-VCAP
               PERFORM PRO-IPER
               IF INT-CMSG NOT > SPACES
                   MOVE INT-FINI TO FEC-FECH CVI-FFTP
                   PERFORM PRO-VFIN-IC
               ELSE
                   MOVE INT-CMSG TO MSG-COD-MENS
                   GO TO FIN-PRO-VFIN
           ELSE
           IF WSS-MSC-TCVE IN WSS-VARI = 'IO'
               MOVE INT-SEPV TO INT-SEPA
               MOVE INT-USPV TO INT-IPER
               MOVE EVC-VAL-VENC IN EVC TO CVI-VCAP
      *        MOVE OPC-VAL-CRED IN OPC TO WSS-CVI-TCAP
      *RESTA EL SALDO YA AMORTIZADO PARA EL CALCULO DE LOS INTERESES
               SUBTRACT WSS-VAL-SCYA FROM OPC-VAL-CRED IN OPC
                        GIVING WSS-CVI-TCAP
               PERFORM PRO-IPER
               IF INT-CMSG NOT > SPACES
                   MOVE INT-FINI TO FEC-FECH CVI-FFTP
                   PERFORM PRO-VFIN-IO
               ELSE
                   MOVE INT-CMSG TO MSG-COD-MENS
                   GO TO FIN-PRO-VFIN
           ELSE
           IF WSS-MSC-TCVE IN WSS-VARI = 'IF'
               MOVE INT-SEPV TO INT-SEPA
               MOVE INT-USPV TO INT-IPER
               MOVE 0                   TO CVI-SEPD
               MOVE EVC-VAL-VENC IN EVC TO CVI-VFIN
               PERFORM PRO-IPER
               IF INT-CMSG NOT > SPACES
                   MOVE INT-FINI TO FEC-FECH CVI-FFTP
                   PERFORM PRO-VFIN-IF
               ELSE
                   MOVE INT-CMSG TO MSG-COD-MENS
                   GO TO FIN-PRO-VFIN
           ELSE
           IF WSS-MSC-TCVE IN WSS-VARI = 'IN'
               MOVE EVC-VAL-VENC IN EVC TO CVI-VCAP
               MOVE CVI-VCAP TO CVI-VFIN
           ELSE
           IF WSS-MSC-TCVE IN WSS-VARI = 'CO'
      *Capital sobre la Operacion - El capital de otras estructuras
               PERFORM PRO-VFIN-CO
           ELSE
           IF WSS-MSC-TCVE IN WSS-VARI = 'FO' OR 'FP'
      *Valor final sobre la Operacion
      *Analizar estructuras compuestas
               PERFORM PRO-VFIN-FO
           ELSE
           IF WSS-MSC-TCVE IN WSS-VARI = 'CE'
      *Capital sobre Estructura
      *
      *     |----------|----------|---------- ...
      *     f0         CI         CI
      *
      *     Tomar C.EVC dividirlo por el numero de Venc.EVC, obteniendo
      *     UN CI y aplicar interes sobre C.EVC, y el mismo calculo que
      *     para caso 'IC'
      *
               MOVE INT-SEPV TO INT-SEPA
               MOVE INT-USPV TO INT-IPER
               DIVIDE EVC-VAL-VENC IN EVC BY EVC-NUM-VIGU IN EVC
                                          GIVING CVI-VCAP
      *        MOVE EVC-VAL-VENC IN EVC TO WSS-CVI-TCAP
      *RESTA EL SALDO YA AMORTIZADO PARA EL CALCULO DE LOS INTERESES
               SUBTRACT WSS-VAL-SCYA FROM OPC-VAL-CRED IN OPC
                        GIVING WSS-CVI-TCAP
               PERFORM PRO-IPER
               IF INT-CMSG NOT > SPACES
                   MOVE INT-FINI TO FEC-FECH CVI-FFTP
                   PERFORM PRO-VFIN-IO
               ELSE
                   MOVE INT-CMSG TO MSG-COD-MENS
                   GO TO FIN-PRO-VFIN
           ELSE
           IF WSS-MSC-TCVE IN WSS-VARI = 'FE'
      *Valor final sobre Estructura
      *
      *     |----------|----------|---------- ...
      *     f0         VF         VF
      *
      *     Llamar a la rutina OBT-VMTO para obtener valor final igual
      *     para todas las cuotas con C.EVC y datos de EVC
               PERFORM PRO-VFIN-FE
           ELSE
               MOVE 'LIQCVC NEX' TO INT-CMSG
               MOVE WSS-MSC-TCVE IN WSS-VARI TO FRM-MEN2.
       FIN-PRO-VFIN.
           EXIT.

      *JSS
       DSP-VINT SECTION.
       INI-DSP-VINT.
      *     MOVE 'INT-TIPT :' TO DSP-GLS-MEN1.
      *     MOVE INT-TIPT     TO DSP-GLS-MEN2.
      *     PERFORM GNS-DSP-MENS.

      *     MOVE 'INT-TINT :' TO DSP-GLS-MEN1.
      *     MOVE INT-TINT     TO WSS-VEDT-EDT.
      *     MOVE WSS-VEDT-ALF TO DSP-GLS-MEN2.
      *     PERFORM GNS-DSP-MENS.

      *     MOVE 'INT-FINT :' TO DSP-GLS-MEN1.
      *     MOVE INT-FINT     TO DSP-GLS-MEN2
      *     PERFORM GNS-DSP-MENS.

      *     MOVE 'INT-FINI :' TO DSP-GLS-MEN1.
      *     MOVE INT-FINI     TO DSP-GLS-MEN2.
      *     PERFORM GNS-DSP-MENS.

      *     MOVE 'INT-NVVG :' TO DSP-GLS-MEN1.
      *     MOVE INT-NVVG     TO DSP-GLS-MEN2.
      *     PERFORM GNS-DSP-MENS.

      *     MOVE 'INT-SEPA :' TO DSP-GLS-MEN1.
      *     MOVE INT-SEPA     TO DSP-GLS-MEN2.
      *     PERFORM GNS-DSP-MENS.

      *     MOVE 'INT-IPER :' TO DSP-GLS-MEN1.
      *     MOVE INT-IPER     TO DSP-GLS-MEN2.
      *     PERFORM GNS-DSP-MENS.

      *     MOVE 'INT-SEPV :' TO DSP-GLS-MEN1.
      *     MOVE INT-SEPV     TO DSP-GLS-MEN2.
      *     PERFORM GNS-DSP-MENS.

      *     MOVE 'INT-USPV :' TO DSP-GLS-MEN1.
      *     MOVE INT-USPV     TO DSP-GLS-MEN2.
      *     PERFORM GNS-DSP-MENS.

      *     MOVE 'INT-AFER :' TO DSP-GLS-MEN1.
      *     MOVE INT-AFER     TO DSP-GLS-MEN2.
      *     PERFORM GNS-DSP-MENS.

      *     MOVE 'INT-IBEG :' TO DSP-GLS-MEN1.
      *     MOVE INT-IBEG     TO DSP-GLS-MEN2.
      *     PERFORM GNS-DSP-MENS.

      *     MOVE 'INT-VCAM :' TO DSP-GLS-MEN1.
      *     MOVE INT-VCAM     TO DSP-GLS-MEN2.
      *     PERFORM GNS-DSP-MENS.

      *     MOVE 'INT-OPEC :' TO DSP-GLS-MEN1.
      *     MOVE INT-OPEC     TO DSP-GLS-MEN2.
      *     PERFORM GNS-DSP-MENS.

      *     MOVE 'MODALIDAD DE CALCULO :' TO DSP-GLS-MEN1.
      *     MOVE WSS-MSC-TCVE IN WSS-VARI TO DSP-GLS-MEN2.
      *     PERFORM GNS-DSP-MENS.
       FIN-DSP-VINT.
           EXIT.

      *JSS-TRC
      * DSP-VFIN SECTION.
      * INI-DSP-VFIN.
      *     MOVE 'CVI-VCAP :' TO DSP-GLS-MEN1.
      *     MOVE CVI-VCAP     TO WSS-VEDT-EDT.
      *     MOVE WSS-VEDT-ALF TO DSP-GLS-MEN2.
      *     PERFORM GNS-DSP-MENS.

      *     MOVE 'INT-TIPE :' TO DSP-GLS-MEN1.
      *     MOVE INT-TIPE     TO WSS-VEDT-EDT.
      *     MOVE WSS-VEDT-ALF TO DSP-GLS-MEN2.
      *     PERFORM GNS-DSP-MENS.

      *     MOVE 'CVI-VFIN :' TO DSP-GLS-MEN1.
      *     MOVE CVI-VFIN     TO WSS-VEDT-EDT.
      *     MOVE WSS-VEDT-ALF TO DSP-GLS-MEN2.
      *     PERFORM GNS-DSP-MENS.
      * FIN-DSP-VFIN.
      *     EXIT.

      *JSS-TRC
      * COPY GNSBGDSP.

       PRO-VFIN-IC SECTION.
       INI-PRO-VFIN-IC.
      *Capital Informado ( calculo sobre el Capital Informado )
      *
      *     |----------|----------|---------- ...
      *     f0         CI
      *
      *     Calculo interes( I ) sobre CI entre f0 y CI y VFIN = CI + I*CI

           MOVE CVI-FFTP TO INT-FUNO.
           PERFORM PRO-AFER.
           IF INT-CMSG > SPACES
               MOVE INT-CMSG TO MSG-COD-MENS
               GO TO FIN-PRO-VFIN-IC.
           MOVE CVI-FFTP                TO INT-FDOS.
           MOVE OPC-FEC-FCOL IN OPC-FLD TO INT-FBTV.
      *    PERFORM OBT-VTIN.
      *SMC-INI 09.09.1993
           MOVE OPC-CAI-IOPC IN OPC-FLD TO INT-ICAI.
           MOVE OPC-IIC-IOPC IN OPC-FLD TO INT-IIIC.
           MOVE EVC-NUM-IDLC IN EVC     TO INT-IDLC.
      *     PERFORM GNS-CAL-INT.
           PERFORM COL-CAL-INT.
      *SMC-FIN 09.09.1993
           IF INT-IETB > SPACES
               MOVE INT-IETB TO WSS-IETB.
           IF INT-CMSG > SPACES
               MOVE INT-MEN2 TO FRM-MEN2
               MOVE INT-CMSG TO MSG-COD-MENS
               GO TO FIN-PRO-VFIN-IC.
      *     IF INT-CVTI > SPACES AND INT-TFPR = 'F'
      *         MOVE CVI-DFTP TO INT-DDMA
      *         MOVE CVI-MFTP TO INT-MDMA
      *         MOVE CVI-SFTP TO INT-SDMA
      *         MOVE CVI-AFTP TO INT-ADMA.
           ADD 1 INT-TIPE GIVING CVI-TIPE.
           MULTIPLY CVI-VCAP BY CVI-TIPE GIVING CVI-VFIN ROUNDED.
       FIN-PRO-VFIN-IC.
           EXIT.

       PRO-VFIN-IO SECTION.
       INI-PRO-VFIN-IO.
      *Capital Informado ( calculo sobre el Capital Operacion )
      *
      *     |----------|----------|---------- ...
      *     f0         CI
      *
      *     Calculo interes( I ) sobre C.OPC entre f0 y CI y VFIN = CI + I*C.OPC

           MOVE CVI-FFTP TO INT-FUNO.
           PERFORM PRO-AFER.
           IF INT-CMSG > SPACES
               MOVE INT-CMSG TO MSG-COD-MENS
               GO TO FIN-PRO-VFIN-IO.
           MOVE CVI-FFTP                TO INT-FDOS.
           MOVE OPC-FEC-FCOL IN OPC-FLD TO INT-FBTV.
      *    PERFORM OBT-VTIN.
      *SMC-INI 09.09.1993
           MOVE OPC-CAI-IOPC IN OPC-FLD TO INT-ICAI.
           MOVE OPC-IIC-IOPC IN OPC-FLD TO INT-IIIC.
           MOVE EVC-NUM-IDLC IN EVC     TO INT-IDLC.
      *     PERFORM GNS-CAL-INT.
           PERFORM COL-CAL-INT.
      *SMC-FIN 09.09.1993
           IF INT-IETB > SPACES
               MOVE INT-IETB TO WSS-IETB.
           IF INT-CMSG > SPACES
               MOVE INT-MEN2 TO FRM-MEN2
               MOVE INT-CMSG TO MSG-COD-MENS
               GO TO FIN-PRO-VFIN-IO.
      *     IF INT-CVTI > SPACES AND INT-TFPR = 'F'
      *         MOVE CVI-DFTP TO INT-DDMA
      *         MOVE CVI-MFTP TO INT-MDMA
      *         MOVE CVI-SFTP TO INT-SDMA
      *         MOVE CVI-AFTP TO INT-ADMA.
      *JSS-PGV El calculo deberia ser sobre C.OPC para 'CE' ?
      *    MULTIPLY OPC-VAL-CRED IN OPC BY INT-TIPE GIVING CVI-VFIN.
           MULTIPLY WSS-CVI-TCAP        BY INT-TIPE GIVING CVI-VFIN
               ROUNDED.
           IF WSS-MIPL NOT = WSS-MIPL-P
               GO TO CON-PRO-VFIN-IO.
      *Para prorratear el interes
      *En CVI-VFIN estan los intereses
           IF WSS-PESO-SI
               MOVE CVI-VFIN TO PES-SGV-DECI IN PES-VARI
               PERFORM PES-SCTV
               MOVE PES-SGV-ENTE IN PES-VARI TO CVI-VFIN
               MOVE CVI-VCAP TO PES-SGV-DECI IN PES-VARI
               PERFORM PES-SCTV
               MOVE PES-SGV-ENTE IN PES-VARI TO CVI-VCAP.
           MULTIPLY CVI-VFIN BY CVI-VCAP GIVING WSS-CVI-VINT.
           DIVIDE WSS-CVI-VINT BY WSS-CVI-TCAP GIVING WSS-CVI-VINT
               ROUNDED.
           IF WSS-PESO-SI
               MOVE WSS-CVI-VINT TO PES-SGV-DECI IN PES-VARI
               PERFORM PES-SCTV
               MOVE PES-SGV-ENTE IN PES-VARI TO WSS-CVI-VINT.
           ADD CVI-VFIN          TO   WSS-CVI-IDNI.
           SUBTRACT WSS-CVI-VINT FROM WSS-CVI-IDNI.
           MOVE WSS-CVI-VINT TO CVI-VFIN.
       CON-PRO-VFIN-IO.
           IF WSS-PESO-SI
               MOVE CVI-VCAP TO PES-SGV-DECI IN PES-VARI
               PERFORM PES-SCTV
               MOVE PES-SGV-ENTE IN PES-VARI TO CVI-VCAP.
           ADD CVI-VCAP TO CVI-VFIN.
       FIN-PRO-VFIN-IO.
           EXIT.

       PRO-VFIN-IF SECTION.
       INI-PRO-VFIN-IF.
      *Valor Final Informado
      *
      *     |----------|----------|---------- ...
      *     f0         FI
      *
      *     Calculo interes( I ) sobre C.OPC entre f0 y FI y C = FI - I*C.OPC

           PERFORM PRO-AFER.
           IF INT-CMSG > SPACES
               MOVE INT-CMSG TO MSG-COD-MENS
               GO TO FIN-PRO-VFIN-IF.
           ADD CVI-SEPD TO INT-SEPD.
           MOVE OPC-FEC-FCOL IN OPC-FLD TO INT-FUNO.
           MOVE CVI-FFTP                TO INT-FDOS.
           MOVE OPC-FEC-FCOL IN OPC-FLD TO INT-FBTV.
      *    PERFORM OBT-VTIN.
      *SMC-INI 09.09.1993
           MOVE OPC-CAI-IOPC IN OPC-FLD TO INT-ICAI.
           MOVE OPC-IIC-IOPC IN OPC-FLD TO INT-IIIC.
           MOVE EVC-NUM-IDLC IN EVC     TO INT-IDLC.
      *     PERFORM GNS-CAL-INT.
           PERFORM COL-CAL-INT.
      *SMC-FIN 09.09.1993
           IF INT-IETB > SPACES
               MOVE INT-IETB TO WSS-IETB.
           IF INT-CMSG > SPACES
               MOVE INT-MEN2 TO FRM-MEN2
               MOVE INT-CMSG TO MSG-COD-MENS
               GO TO FIN-PRO-VFIN-IF.
      *     IF INT-CVTI > SPACES AND INT-TFPR = 'F'
      *         MOVE CVI-DFTP TO INT-DDMA
      *         MOVE CVI-MFTP TO INT-MDMA
      *         MOVE CVI-SFTP TO INT-SDMA
      *         MOVE CVI-AFTP TO INT-ADMA.
           MOVE INT-SEPD TO CVI-SEPD.
           ADD 1 INT-TIPE GIVING CVI-TIPE.
           DIVIDE CVI-VFIN BY CVI-TIPE GIVING CVI-VCAP ROUNDED.
       FIN-PRO-VFIN-IF.
           EXIT.

       PRO-VFIN-CO SECTION.
       INI-PRO-VFIN-CO.
      *Capital sobre la Operacion - Capital de las otras estructuras
      *
      *     |----------|----------|---------- ...
      *     f0         CI         CI
      *
      *     Tomar C.OPC - Capital Otros EVC, dividirlo por el numero de
      *     Venc.OPC, obteniendo un CI y aplicar el mismo calculo que para
      *     caso 'IO'
      *
           MOVE INT-IBTV-UNA-VEZ TO INT-IBTV.

           MOVE INT-SEPV TO WSS-AXSV.
           MOVE INT-USPV TO WSS-AXUS.

      *JSS  PERFORM CHK-SUM-EVC.
      *     IF INT-CMSG > SPACES
      *         GO TO FIN-PRO-VFIN-CO.
           IF WSS-NUM-VCVG NOT > ZEROES
               MOVE 'NUMVCVGCOZRO' TO INT-CMSG
               GO TO FIN-PRO-VFIN-CO.
           SUBTRACT WSS-VAL-TEVC FROM OPC-VAL-CRED IN OPC GIVING
                    CVI-VCAP.
      *     MOVE CVI-VCAP TO WSS-CVI-TCAP.
      *RESTA EL SALDO YA AMORTIZADO PARA EL CALCULO DE LOS INTERESES
           SUBTRACT WSS-VAL-SCYA FROM OPC-VAL-CRED IN OPC
                    GIVING WSS-CVI-TCAP.

           MOVE INT-IBTV-UNA-VEZ TO INT-IBTV.

      *JSS-TRC.
      *     MOVE 'CAPITAL CON EL QUE TRABAJARA CO :' TO DSP-GLS-MEN1.
      *     MOVE CVI-VCAP                            TO DSP-SV1-13V4.
      *     PERFORM GNS-DSP-MENS.

      *JSS-NEW MOVE WSS-AEVC TO EVC.
           MOVE REG-EVC(WSS-IEVC) TO EVC.
      *JSS-NEW

           MOVE EVC-NUM-VIGU IN EVC TO INT-NVVG.
           MOVE WSS-AXSV            TO INT-SEPV INT-SEPA.
           MOVE WSS-AXUS            TO INT-USPV INT-IPER.

      *     DIVIDE OPC-VAL-CRED IN OPC BY
      *            OPC-NUM-VCVG IN OPC GIVING CVI-VCAP
           DIVIDE CVI-VCAP BY WSS-NUM-VCVG GIVING CVI-VCAP ROUNDED.
      *
           PERFORM PRO-IPER.
           IF INT-CMSG NOT > SPACES
               MOVE INT-FINI TO FEC-FECH CVI-FFTP
               PERFORM PRO-VFIN-IO
           ELSE
               MOVE INT-CMSG TO MSG-COD-MENS.
       FIN-PRO-VFIN-CO.
           EXIT.

       PRO-VFIN-FO SECTION.
       INI-PRO-VFIN-FO.
           MOVE INT-IBTV-UNA-VEZ TO INT-IBTV.

      *     MOVE 'LIQCVC NEX' TO MSG-COD-MENS.
      *     MOVE WSS-MSC-TCVE IN WSS-VARI TO FRM-MEN2.

      *JSS-TRC.
      *     MOVE 'INI-PRO-VFIN-FO' TO DSP-GLS-MENS.
      *     PERFORM GNS-DSP-MENS.

      *     PERFORM CHK-SUM-EVC.
      *     IF INT-CMSG > SPACES
      *         GO TO FIN-PRO-VFIN-FO.

           SUBTRACT WSS-VAL-TEVC FROM OPC-VAL-CRED IN OPC GIVING
                    CVI-VCAP.

           MOVE INT-IBTV-UNA-VEZ TO INT-IBTV.

      *JSS-TRC.
      *     MOVE 'CAPITAL CON EL QUE TRABAJARA FO :' TO DSP-GLS-MEN1.
      *     MOVE CVI-VCAP                            TO DSP-SV1-13V4.
      *     PERFORM GNS-DSP-MENS.

           PERFORM BUS-VPER-EVC.
           IF INT-CMSG > SPACES
               GO TO FIN-PRO-VFIN-FO.

           MOVE 1 TO CVI-QTAN.

           MOVE 0 TO CVI-SUMA CVI-FTOR.
           MOVE 1 TO CVI-FOLD CVI-NVVG.
           MOVE OPC-FEC-FCOL IN OPC TO WSS-FAVC.

           IF INT-AFER-YES
               PERFORM CHK-AFER-EVC
               IF INT-CMSG > SPACES
                   GO TO FIN-PRO-VFIN-FO.
       LUP-PRO-VFIN-FO.

      *JSS-TRC.
      *     MOVE 'LUP-PRO-VFIN-FO' TO DSP-GLS-MENS.
      *     PERFORM GNS-DSP-MENS.

           PERFORM BUS-MEVC.
           IF WSS-IMVC = ZEROES
      *JSS    Se acabaron los vencimientos
               GO TO CAL-PRO-VFIN-FO.
           SUBTRACT 1 FROM WSS-VIGU(WSS-IMVC).

      *JSS CALCULAR ENTRE WSS-FAVC y WSS-FMVC.

           MOVE WSS-DAVC TO FEC-DEC1.
           MOVE WSS-MAVC TO FEC-MEC1.
           MOVE WSS-SAVC TO FEC-SEC1.
           MOVE WSS-AAVC TO FEC-AEC1.

           MOVE WSS-DMVC TO FEC-DEC2.
           MOVE WSS-MMVC TO FEC-MEC2.
           MOVE WSS-SMVC TO FEC-SEC2.
           MOVE WSS-AMVC TO FEC-AEC2.

           IF FEC-FEC1 = FEC-FEC2
               GO TO CON-PRO-VFIN-FO.

           MOVE FEC-FORM-FEC TO FEC-FORM.
           MOVE FEC-DIF-DIA  TO FEC-CMND.
      *    PERFORM PRO-FEC.
           PERFORM CAL-FEC.
           IF NOT FEC-STAT-OKS
               MOVE MSG-COD-MENS TO INT-CMSG
               GO TO FIN-PRO-VFIN-FO.

           MOVE FEC-NDIA TO INT-SEPD.

      *JSS-TRC.
      *     MOVE 'FECHAS/EVC' TO DSP-GLS-MENS.
      *     MOVE WSS-FAVC     TO DSP-GLS-MENB.
      *     MOVE WSS-FMVC     TO DSP-GLS-MENC.
      *     MOVE WSS-IMVC     TO DSP-SV2-13V4.
      *     PERFORM GNS-DSP-MENS.

           MOVE WSS-DAVC TO INT-DUNO.
           MOVE WSS-MAVC TO INT-MUNO.
           MOVE WSS-SAVC TO INT-SUNO.
           MOVE WSS-AAVC TO INT-AUNO.
           MOVE WSS-DMVC TO INT-DDOS.
           MOVE WSS-MMVC TO INT-MDOS.
           MOVE WSS-SMVC TO INT-SDOS.
           MOVE WSS-AMVC TO INT-ADOS.
           MOVE OPC-FEC-FCOL IN OPC-FLD TO INT-FBTV.
      *    PERFORM OBT-VTIN.
      *SMC-INI 09.09.1993
           MOVE OPC-CAI-IOPC IN OPC-FLD TO INT-ICAI.
           MOVE OPC-IIC-IOPC IN OPC-FLD TO INT-IIIC.
           MOVE EVC-NUM-IDLC IN EVC     TO INT-IDLC.
      *     PERFORM GNS-CAL-INT.
           PERFORM COL-CAL-INT.
      *SMC-FIN 09.09.1993
           IF INT-IETB > SPACES AND CVI-NVVG = 1
               MOVE INT-IETB TO WSS-IETB.
      *     IF INT-CVTI > SPACES AND INT-TFPR = 'F'
      *         MOVE WSS-DMVC TO INT-DDMA
      *         MOVE WSS-MMVC TO INT-MDMA
      *         MOVE WSS-SMVC TO INT-SDMA
      *         MOVE WSS-AMVC TO INT-ADMA.

      *JSS-TRC.
      *     MOVE 'DIAS SEPA./T.INTERES :' TO DSP-GLS-MENS.
      *     MOVE FEC-NDIA                 TO DSP-SV1-13V4.
      *     MOVE INT-TIPE                 TO DSP-SV2-13V4.
      *     PERFORM GNS-DSP-MENS.

           IF INT-CMSG > SPACES
               MOVE INT-MEN2 TO FRM-MEN2
               GO TO FIN-PRO-VFIN-FO.

           COMPUTE CVI-SUMA = CVI-SUMA + ( 1 + INT-TIPE ) ** CVI-NVVG.

           COMPUTE CVI-FTOR = CVI-FTOR +
                              1 / ( CVI-FOLD * ( 1 + INT-TIPE ) ).
           COMPUTE CVI-FOLD = CVI-FOLD * ( 1 + INT-TIPE ).

           IF CVI-QTAN = CVI-NVVG
               MOVE INT-TIPE TO CVI-TIQN.

           ADD 1 TO CVI-NVVG.

      *    MOVE WSS-FFPV TO WSS-FAVC.
           MOVE WSS-DFPV(WSS-IMVC) TO WSS-DAVC.
           MOVE WSS-MFPV(WSS-IMVC) TO WSS-MAVC.
           MOVE WSS-SFPV(WSS-IMVC) TO WSS-SAVC.
           MOVE WSS-AFPV(WSS-IMVC) TO WSS-AAVC.

       CON-PRO-VFIN-FO.

           IF WSS-VIGU(WSS-IMVC) = ZEROES
               GO TO LUP-PRO-VFIN-FO.

      *JSS Desplazar WSS-FPVC(WSS-IMVC) en WSS-SEVE(WSS-IMVC) segun
      *                                    WSS-UTSV(WSS-IMVC)
      *    Considerando analisis de feriado si corresponde.

           IF WSS-UTSV(WSS-IMVC) = 'D'
               MOVE FEC-SUM-DIA        TO FEC-CMND
               MOVE WSS-SEVE(WSS-IMVC) TO FEC-NDIA
           ELSE
           IF WSS-UTSV(WSS-IMVC) = 'M'
               MOVE FEC-SUM-MES        TO FEC-CMND
               MOVE WSS-SEVE(WSS-IMVC) TO FEC-NMES
           ELSE
           IF WSS-UTSV(WSS-IMVC) = 'A'
               MOVE FEC-SUM-ANO        TO FEC-CMND
               MOVE WSS-SEVE(WSS-IMVC) TO FEC-NANO
           ELSE
               MOVE 'INTIPERINV' TO INT-CMSG
               GO TO FIN-PRO-VFIN-FO.

           MOVE WSS-DPVC(WSS-IMVC) TO FEC-ITM1.
           MOVE WSS-MPVC(WSS-IMVC) TO FEC-ITM2.
           MOVE WSS-SPVC(WSS-IMVC) TO FEC-ITM3.
           MOVE WSS-APVC(WSS-IMVC) TO FEC-ITM4.

           MOVE FEC-FORM-FEC TO FEC-FORM.
           PERFORM CAL-FEC.
      *    PERFORM PRO-FEC.
           IF NOT FEC-STAT-OKS

               MOVE MSG-COD-MENS TO INT-CMSG
               GO TO FIN-PRO-VFIN-FO.

           MOVE WSS-DVEN(WSS-IMVC) TO CVI-DVEN.
           IF NOT ( ( WSS-UTSV(WSS-IMVC) = 'M' OR 'A' ) AND
              CVI-DVEN > ZEROES AND FEC-ITM1 < CVI-DVEN )
               GO TO FER-PRO-VFIN-FO.
           IF CVI-DVEN > FEC-DMES(FEC-ITM2)
               MOVE FEC-DMES(FEC-ITM2) TO FEC-ITM1
           ELSE
               MOVE CVI-DVEN TO FEC-ITM1.
           IF FEC-ITM2 = 2
               DIVIDE FEC-ITM4 BY 4 GIVING FEC-REST REMAINDER FEC-REST
               IF ( FEC-REST NOT = 0 ) AND ( FEC-ITM1 > 28 )
                   MOVE 28 TO FEC-ITM1.
       FER-PRO-VFIN-FO.

           MOVE FEC-ITM1 TO WSS-DPVC(WSS-IMVC).
           MOVE FEC-ITM2 TO WSS-MPVC(WSS-IMVC).
           MOVE FEC-ITM3 TO WSS-SPVC(WSS-IMVC).
           MOVE FEC-ITM4 TO WSS-APVC(WSS-IMVC).

           IF NOT INT-AFER-YES
               GO TO FPV-PRO-VFIN-FO.

           MOVE FEC-FBLK-N  TO FEC-FBLK.
           MOVE FEC-CHOY-N  TO FEC-CHOY.
           MOVE FEC-VHBL-S  TO FEC-VHBL.
           MOVE FEC-VAL-FEC TO FEC-CMND.
      *JSS PERFORM CAL-FEC.
           PERFORM PRO-FEC.
           IF NOT FEC-STAT-OKS AND NOT FEC-STAT-FER
               MOVE MSG-COD-MENS TO INT-CMSG
               GO TO FIN-PRO-VFIN-FO.

           IF NOT FEC-STAT-FER
               GO TO FPV-PRO-VFIN-FO.

           MOVE FEC-FORM-FEC TO FEC-FORM.
           MOVE FEC-SIG-HBL  TO FEC-CMND.
           PERFORM CAL-FEC.
      *    PERFORM PRO-FEC.
           IF NOT FEC-STAT-OKS
               MOVE MSG-COD-MENS TO INT-CMSG
               GO TO FIN-PRO-VFIN-FO.
       FPV-PRO-VFIN-FO.

      *JSS-TRC.
      *     MOVE 'FPV-PRO-VFIN-FO' TO DSP-GLS-MENS.
      *     PERFORM GNS-DSP-MENS.

           MOVE FEC-ITM1 TO WSS-DFPV(WSS-IMVC).
           MOVE FEC-ITM2 TO WSS-MFPV(WSS-IMVC).
           MOVE FEC-ITM3 TO WSS-SFPV(WSS-IMVC).
           MOVE FEC-ITM4 TO WSS-AFPV(WSS-IMVC).
           GO TO LUP-PRO-VFIN-FO.

       CAL-PRO-VFIN-FO.

      *JSS-TRC.
      *     MOVE 'CAL-PRO-VFIN-FO' TO DSP-GLS-MENS.
      *     PERFORM GNS-DSP-MENS.

      *JSS
           MOVE 'P' TO INT-OPEC.

           IF INT-OPEC = 'D'
      *JSS     COMPUTE CVI-VCAP ROUNDED = CVI-VFIN / CVI-SUMA
               DIVIDE CVI-VFIN BY CVI-SUMA GIVING CVI-VCAP ROUNDED
           ELSE
      *JSS     COMPUTE CVI-VFIN ROUNDED = CVI-VCAP * CVI-SUMA.
      *JSS     COMPUTE CVI-VFIN ROUNDED = CVI-VCAP / CVI-FTOR.
               DIVIDE CVI-VCAP BY CVI-FTOR GIVING CVI-VFIN ROUNDED.

      *Se redondea y se deja sin decimales el valor final
           IF WSS-PESO-SI
               MOVE CVI-VFIN TO PES-SGV-DECI IN PES-VARI
               PERFORM PES-SCTV
               MOVE PES-SGV-ENTE IN PES-VARI TO CVI-VFIN.
      *

      *CALCULO DE INTERES SOBRE EL VALOR CAPITAL
      *     MULTIPLY CVI-VCAP BY CVI-TIQN GIVING CVI-VCAP.
      *RESTA EL SALDO YA AMORTIZADO PARA EL CALCULO DE LOS INTERESES
           SUBTRACT WSS-VAL-SCYA FROM OPC-VAL-CRED IN OPC
                    GIVING WSS-CVI-TCAP.
           MULTIPLY WSS-CVI-TCAP BY CVI-TIQN GIVING CVI-VCAP ROUNDED.
           IF CVI-VCAP NOT > CVI-VFIN
               SUBTRACT CVI-VCAP FROM CVI-VFIN GIVING CVI-VCAP
           ELSE
               ADD CVI-VCAP      TO   WSS-CVI-IDNI
               SUBTRACT CVI-VFIN FROM WSS-CVI-IDNI
               MOVE 0 TO CVI-VCAP.
       FIN-PRO-VFIN-FO.
           EXIT.

       CHK-SUM-EVC SECTION.
       INI-CHK-SUM-EVC.
      *EN VEZ DE LEER ESTRUCTURAS DEBERIA TRABAJAR CON REG-EVC(WSS-I)
      *VARIANDO WSS-I DESDE 1 HASTA WSS-MEVC.

      *JSS-TRC.
      *     MOVE 'INI-CHK-SUM-EVC' TO DSP-GLS-MENS.
      *     PERFORM GNS-DSP-MENS.

           MOVE SPACES TO WSS-IEFI.
           MOVE ZEROES TO WSS-MEFO WSS-NUM-VCVG.
           MOVE ZEROES TO WSS-VAL-TEVC WSS-VAL-SCYA.
           MOVE ZEROES TO WSS-VAL-TCAP WSS-VAL-TEFI WSS-NUM-MDLC.
           MOVE ZEROES TO WSS-NSAM WSS-NCAM WSS-NEFI
                          WSS-NECO WSS-NEFO.

           MOVE OPC-CIC-IOPC IN OPC TO EVC-CIC-IOPC IN EVC.
           MOVE ZEROES              TO EVC-NUM-IEVC IN EVC.
           MOVE FIO-GET-NLS TO FIO-CMND.
       LUP-CHK-SUM-EVC.

      *JSS-TRC.
      *     MOVE 'LUP-CHK-SUM-EVC' TO DSP-GLS-MEN1.
      *     MOVE WSS-VAL-TEVC      TO DSP-SV1-13V4.
      *     PERFORM GNS-DSP-MENS.

           PERFORM COL-FIO-EVC.
           IF NOT ( FIO-STAT-OKS AND
                    OPC-CIC-IOPC IN OPC = EVC-CIC-IOPC IN EVC )
               GO TO DIF-CHK-SUM-EVC.

           IF EVC-NUM-IDLC IN EVC > WSS-LDLC
               MOVE 'LIQIDLCOVFLW'       TO INT-CMSG
               MOVE  EVC-NUM-IDLC IN EVC TO FRM-MEN2
               GO TO FIN-CHK-SUM-EVC.
      *para considerar que existen multiples tasas ( una por c/documento )
           MOVE WSS-DLC-TINT(EVC-NUM-IDLC IN EVC) TO INT-TINT.

      *Busca el CIC de EVC-MSC-TCVE en TAB CVC ( en sist COL )
           MOVE 'COL' TO TAB-COD-SIST FIO-SIST.
           MOVE 'CVC' TO TAB-COD-TTAB IN TAB.
           MOVE EVC-MSC-TCVE IN EVC TO TAB-COD-CTAB IN TAB.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM GNS-FIO-TAB.
           IF NOT FIO-STAT-OKS
               MOVE 'CICTCVENEX' TO INT-CMSG
               MOVE TAB-COD-TABL TO FRM-MEN2
               GO TO FIN-CHK-SUM-EVC.
           MOVE TAB-CIC-CTAB IN TAB TO WSS-MSC-TCVE IN WSS-VARI.

           IF ( WSS-CVTI > SPACES ) AND ( WSS-TFPR = 'C' )
      *         IF ( WSS-MSC-TCVE IN WSS-VARI = 'IC' OR 'IF' OR 'FE' OR
      *                                         'IN' OR 'FO' )
      *             MOVE 'LIQTFPRC/TCV' TO INT-CMSG
      *             GO TO FIN-CHK-SUM-EVC
      *         ELSE
               IF WSS-PREP NOT > ZEROES
                   MOVE 'LIQPREPZERO=' TO INT-CMSG
                   GO TO FIN-CHK-SUM-EVC.

           IF WSS-MSC-TCVE IN WSS-VARI = 'IC' OR 'IF' OR 'FE' OR 'IN'
               ADD 1 TO WSS-NSAM
           ELSE
               ADD 1 TO WSS-NCAM.
      *
           IF WSS-MSC-TCVE = 'CO'
               ADD 1 TO WSS-NECO
               IF WSS-NECO > 1
                   MOVE 'LIQSOLO1CO' TO INT-CMSG
                   GO TO FIN-CHK-SUM-EVC.
           IF WSS-MSC-TCVE = 'FO' OR 'FP'
               ADD 1 TO WSS-NEFO.
      *
      *Valida que no existan FI con otras EVC no FI
           IF ( WSS-MSC-TCVE NOT = 'IF' ) AND ( WSS-IEFI = 'S' )
               MOVE 'LIQTCVENOFI*' TO INT-CMSG
               GO TO FIN-CHK-SUM-EVC.
           IF ( WSS-MSC-TCVE     = 'IF' ) AND ( WSS-IEFI = 'N' )
               MOVE 'LIQTCVENOFI*' TO INT-CMSG
               GO TO FIN-CHK-SUM-EVC.

           IF WSS-MSC-TCVE NOT = 'IF'
               MOVE 'N' TO WSS-IEFI
      *Documentos descontados solo deben expresarse con FI
               IF WSS-OPEC = 'D'
                   MOVE 'LIQDOCDNOTFI' TO INT-CMSG
                   GO TO FIN-CHK-SUM-EVC
               ELSE
                   NEXT SENTENCE
           ELSE
               MOVE 'S' TO WSS-IEFI
      *(El FI solo sirve para Documentos descontados)
      *         IF WSS-OPEC NOT = 'D'
      *             MOVE 'LIQTCFIDD' TO INT-CMSG
      *             GO TO FIN-CHK-SUM-EVC
      *         ELSE
                   MULTIPLY EVC-NUM-VIGU IN EVC BY
                            EVC-VAL-VENC IN EVC GIVING WSS-VAL-TCAP
                   ADD WSS-VAL-TCAP TO WSS-VAL-TEFI
                   ADD 1 TO WSS-NEFI
      *Acumula el valor de cada estructura segun el documento al
      *cual pertenece
                   ADD WSS-VAL-TCAP TO
                       WSS-VAL-SEVD(EVC-NUM-IDLC IN EVC)
      *Para saber cual es el maximo numero de documento
                   IF EVC-NUM-IDLC IN EVC > WSS-NUM-MDLC
                       MOVE EVC-NUM-IDLC IN EVC TO WSS-NUM-MDLC.

           IF EVC-VAL-VENC IN EVC > ZEROES
               IF WSS-MSC-TCVE IN WSS-VARI = 'IC' OR 'IO' OR 'IN'
                   MULTIPLY EVC-NUM-VIGU IN EVC BY EVC-VAL-VENC IN EVC
                     GIVING WSS-VAL-TCAP ROUNDED
                   ADD WSS-VAL-TCAP TO WSS-VAL-TEVC

      *JSS-TRC.
      *             MOVE WSS-MSC-TCVE TO DSP-GLS-MEN1
      *             MOVE WSS-VAL-TCAP TO DSP-SV1-13V4
      *             PERFORM GNS-DSP-MENS

                    IF WSS-MSC-TCVE IN WSS-VARI = 'IC' OR 'IN'
                        ADD WSS-VAL-TCAP TO WSS-VAL-SCYA
                    ELSE
                        NEXT SENTENCE
               ELSE
               IF WSS-MSC-TCVE IN WSS-VARI = 'CE' OR 'FE'
                   ADD EVC-VAL-VENC IN EVC TO WSS-VAL-TEVC

      *JSS-TRC.
      *             MOVE WSS-MSC-TCVE        TO DSP-GLS-MEN1
      *             MOVE EVC-VAL-VENC IN EVC TO DSP-SV1-13V4
      *             PERFORM GNS-DSP-MENS

                    IF WSS-MSC-TCVE IN WSS-VARI = 'FE'
                        ADD EVC-VAL-VENC IN EVC TO WSS-VAL-SCYA
                    ELSE
                        NEXT SENTENCE
               ELSE
               IF WSS-MSC-TCVE IN WSS-VARI = 'IF'
                   PERFORM CHK-SUM-EIF
                   IF INT-CMSG > SPACES
                       GO TO FIN-CHK-SUM-EVC.

           IF WSS-MSC-TCVE IN WSS-VARI = 'CO'
               ADD EVC-NUM-VIGU IN EVC TO WSS-NUM-VCVG.

      **     IF WSS-MSC-TCVE IN WSS-VARI = 'FO'
      *CARGA TODAS LAS ESTRUCTURAS NO IMPORTA EL TIPO
               ADD 1 TO WSS-MEFO.
               IF WSS-MEFO NOT > WSS-LEFO

      *JSS-TRC.
      *             MOVE 'CASO FO CON LLAVE : ' TO DSP-GLS-MEN1
      *             MOVE EVC-KEY-IEVC IN EVC    TO DSP-GLS-MEN2
      *             PERFORM GNS-DSP-MENS

                   MOVE EVC TO WSS-REVC(WSS-MEFO)
               ELSE
                   MOVE 'EVCTCVEFOOVR' TO INT-CMSG
                   GO TO FIN-CHK-SUM-EVC.

           MOVE FIO-GET-NXT TO FIO-CMND.
           GO TO LUP-CHK-SUM-EVC.

       DIF-CHK-SUM-EVC.
      *JSS-TRC.
      *     MOVE 'OPC-VAL-CRED'      TO DSP-GLS-MEN1.
      *     MOVE OPC-VAL-CRED IN OPC TO DSP-SV1-13V4.
      *     PERFORM GNS-DSP-MENS.
      *JSS-TRC.
      *     MOVE 'WSS-VAL-TEVC' TO DSP-GLS-MEN1.
      *     MOVE WSS-VAL-TEVC   TO DSP-SV1-13V4.
      *     PERFORM GNS-DSP-MENS.

      *Si solo existen FI con tasa variable rechaza
           IF WSS-IEFI = 'S' AND WSS-IETV = 'S'
               MOVE 'LIQTVRBFINEX' TO INT-CMSG
               GO TO FIN-CHK-SUM-EVC.

      *Si existen CO y FO entonces error
           IF WSS-NECO > ZEROES AND WSS-NEFO > ZEROES
               MOVE 'EVCEXSTCOYFO' TO INT-CMSG
               GO TO FIN-CHK-SUM-EVC.

      *Si es SOLO FI ( ==> cobro interes anticipado )
           IF WSS-IEFI = 'S'
               PERFORM VAL-NDLC
               IF INT-CMSG > SPACES
                   GO TO FIN-CHK-SUM-EVC
               ELSE
                   NEXT SENTENCE
           ELSE
           IF WSS-VAL-TEVC > OPC-VAL-CRED IN OPC
               MOVE 'EVCSUMAOPC>' TO INT-CMSG
               MOVE WSS-VAL-TEVC  TO WSS-NUM-FEDT
               MOVE WSS-NUM-FEDT  TO FRM-MEN2
           ELSE
      *Si el valor capital es menor que la suma del credito y
      *existen estructuras CO, FO que ajustan ( NO HAY PROBLEMA )
           IF WSS-VAL-TEVC < OPC-VAL-CRED IN OPC
               IF ( WSS-NECO > ZEROES ) OR ( WSS-NEFO > ZEROES )
                   NEXT SENTENCE
               ELSE
                   MOVE 'EVCSUMAOPC<' TO INT-CMSG
                   MOVE WSS-VAL-TEVC  TO WSS-NUM-FEDT
                   MOVE WSS-NUM-FEDT  TO FRM-MEN2
           ELSE
               IF ( WSS-NECO > ZEROES ) OR ( WSS-NEFO > ZEROES )
                   MOVE 'EVCSUMAOPC=' TO INT-CMSG
                   MOVE WSS-VAL-TEVC  TO WSS-NUM-FEDT
                   MOVE WSS-NUM-FEDT  TO FRM-MEN2.
       FIN-CHK-SUM-EVC.
           EXIT.

       VAL-NDLC SECTION.
       INI-VAL-NDLC.
           MOVE 1 TO WSS-I.
       LUP-VAL-NDLC.
           IF WSS-I > WSS-NUM-MDLC
               GO TO FIN-VAL-NDLC.
           IF ( WSS-DLC-NDLC(WSS-I) > ZEROES ) AND
              ( WSS-VAL-SEVD(WSS-I) NOT = WSS-DLC-NDLC(WSS-I) )
                MOVE 'EVCSUMADLC<>' TO INT-CMSG
           ELSE
               ADD 1 TO WSS-I
               GO TO LUP-VAL-NDLC.
       FIN-VAL-NDLC.
           EXIT.

       CHK-SUM-EIF SECTION.
       INI-CHK-SUM-EIF.
      *JSS-TRC.
      *     MOVE 'INI-CHK-SUM-EIF' TO DSP-GLS-MENS.
      *     PERFORM GNS-DSP-MENS.

           MOVE EVC-NUM-VIGU IN EVC TO INT-NVVG.
      *Diferencia en dias entre Fecha Colocacion y EVC-FEC-FPVC
           MOVE OPC-NUM-DCOL IN OPC TO FEC-DEC1.
           MOVE OPC-NUM-MCOL IN OPC TO FEC-MEC1.
           MOVE OPC-NUM-SCOL IN OPC TO FEC-SEC1.
           MOVE OPC-NUM-ACOL IN OPC TO FEC-AEC1.
           MOVE EVC-NUM-DPVC IN EVC TO FEC-DEC2.
           MOVE EVC-NUM-MPVC IN EVC TO FEC-MEC2.
           MOVE EVC-NUM-SPVC IN EVC TO FEC-SEC2.
           MOVE EVC-NUM-APVC IN EVC TO FEC-AEC2.
           MOVE FEC-FORM-FEC TO FEC-FORM.
           MOVE FEC-DIF-DIA  TO FEC-CMND.
      *    PERFORM PRO-FEC.
           PERFORM CAL-FEC.
           IF NOT FEC-STAT-OKS
               MOVE MSG-COD-MENS TO INT-CMSG
               GO TO FIN-CHK-SUM-EIF.

           MOVE FEC-NDIA TO INT-SEPA INT-SEPV.
           MOVE 'D'      TO INT-IPER INT-USPV.

           MOVE 1 TO CVI-NVVG.
           MOVE 0 TO CVI-SEPD.
           MOVE EVC-VAL-VENC IN EVC TO CVI-VFIN.
           MOVE INT-FINI TO FEC-FECH CVI-FFTP.
           PERFORM PRO-VFIN-IF.
           IF INT-CMSG > SPACES
               GO TO FIN-CHK-SUM-EIF.
           ADD CVI-VCAP TO WSS-VAL-TEVC.
           IF WSS-PESO-SI
               MOVE CVI-VCAP TO PES-SGV-DECI IN PES-VARI
               PERFORM PES-SCTV
               MOVE PES-SGV-ENTE IN PES-VARI TO CVI-VCAP
               ADD CVI-VCAP TO WSS-VAL-SCYA
               MOVE CVI-VFIN TO PES-SGV-DECI IN PES-VARI
               PERFORM PES-SCTV
               MOVE PES-SGV-ENTE IN PES-VARI TO CVI-VFIN
           ELSE
               ADD CVI-VCAP TO WSS-VAL-SCYA.
      *ACUMULA INTERES DE LA ESTRUCTURA FI
           ADD      CVI-VFIN TO   WSS-VAL-VIFI.
           SUBTRACT CVI-VCAP FROM WSS-VAL-VIFI.

      *JSS-TRC.
      *     MOVE 'PVC-CHK-SUM-EIF' TO DSP-GLS-MEN1.
      *     MOVE CVI-VCAP          TO DSP-SV1-13V4.
      *     PERFORM GNS-DSP-MENS.

           MOVE EVC-NUM-SEVE IN EVC TO INT-SEPA.
           MOVE EVC-IND-UTSV IN EVC TO INT-IPER.
           MOVE EVC-NUM-DPVE IN EVC TO CVI-DVEN.
           PERFORM PRO-IPER.
           IF INT-CMSG > SPACES
               GO TO FIN-CHK-SUM-EIF.
       LUP-CHK-SUM-EIF.

      *JSS-TRC.
      *     MOVE 'LUP-CHK-SUM-EIF' TO DSP-GLS-MENS.
      *     PERFORM GNS-DSP-MENS.

           ADD 1 TO CVI-NVVG.
           IF CVI-NVVG > INT-NVVG
               IF OPC-VAL-CRED IN OPC-FLD > WSS-VAL-SCYA
      *Obtiene el resto de capital que debe quedar para ultima cuota
                   SUBTRACT WSS-VAL-SCYA FROM OPC-VAL-CRED IN OPC-FLD
                       GIVING WSS-CMP-VIFI
                   ADD CVI-VCAP TO WSS-CMP-VIFI
      *Obtiene el valor final que debe resultar para ultima cuota
                   MULTIPLY WSS-CMP-VIFI BY CVI-TIPE GIVING WSS-CMP-VIFI
                                                            ROUNDED
                   IF WSS-PESO-SI
                      MOVE WSS-CMP-VIFI TO PES-SGV-DECI IN PES-VARI
                      PERFORM PES-SCTV
                      MOVE PES-SGV-ENTE IN PES-VARI TO WSS-CMP-VIFI
      *Al valor final resta el valor capital original para obtener intereses
      *lo hace asi para mantener consistencia con rutina expansion y
      *finalmente puedan cuadrar los intereses
                      ADD WSS-VAL-SCYA                 TO   WSS-CMP-VIFI
                      SUBTRACT OPC-VAL-CRED IN OPC-FLD FROM WSS-CMP-VIFI
                      SUBTRACT CVI-VCAP                FROM WSS-CMP-VIFI
      *Resta a esos intereses el interes considerado ya en la cuota
                      ADD CVI-VCAP                     TO   WSS-CMP-VIFI
                      SUBTRACT CVI-VFIN                FROM WSS-CMP-VIFI
                      GO TO FIN-CHK-SUM-EIF
                   ELSE
                      ADD WSS-VAL-SCYA                 TO   WSS-CMP-VIFI
                      SUBTRACT OPC-VAL-CRED IN OPC-FLD FROM WSS-CMP-VIFI
                      SUBTRACT CVI-VCAP                FROM WSS-CMP-VIFI
                      ADD CVI-VCAP                     TO   WSS-CMP-VIFI
                      SUBTRACT CVI-VFIN                FROM WSS-CMP-VIFI
                      GO TO FIN-CHK-SUM-EIF
               ELSE
                   MOVE ZEROES TO WSS-CMP-VIFI
                   GO TO FIN-CHK-SUM-EIF.

           MOVE EVC-VAL-VENC IN EVC TO CVI-VFIN.
           MOVE CVI-FTPE TO FEC-FECH.
           PERFORM PRO-VFIN-IF.
           IF INT-CMSG > SPACES
               GO TO FIN-CHK-SUM-EIF.
           ADD CVI-VCAP TO WSS-VAL-TEVC.
           IF WSS-PESO-SI
               MOVE CVI-VCAP TO PES-SGV-DECI IN PES-VARI
               PERFORM PES-SCTV
               MOVE PES-SGV-ENTE IN PES-VARI TO CVI-VCAP
               ADD CVI-VCAP TO WSS-VAL-SCYA
               MOVE CVI-VFIN TO PES-SGV-DECI IN PES-VARI
               PERFORM PES-SCTV
               MOVE PES-SGV-ENTE IN PES-VARI TO CVI-VFIN
           ELSE
               ADD CVI-VCAP TO WSS-VAL-SCYA.
      *ACUMULA INTERES DE LA ESTRUCTURA FI
           ADD      CVI-VFIN TO   WSS-VAL-VIFI.
           SUBTRACT CVI-VCAP FROM WSS-VAL-VIFI.

      *JSS-TRC.
      *     MOVE 'VEN-CHK-SUM-EIF' TO DSP-GLS-MEN1.
      *     MOVE CVI-VCAP          TO DSP-SV1-13V4.
      *     PERFORM GNS-DSP-MENS.

           GO TO LUP-CHK-SUM-EIF.
       FIN-CHK-SUM-EIF.
           EXIT.

       BUS-VPER-EVC SECTION.
       INI-BUS-VPER-EVC.
      *JSS-TRC.
      *     MOVE 'INI-BUS-VPER-EVC' TO DSP-GLS-MENS.
      *     PERFORM GNS-DSP-MENS.

           MOVE 0 TO WSS-I.
       LUP-BUS-VPER-EVC.

      *JSS-TRC.
      *     MOVE 'LUP-BUS-VPER-EVC' TO DSP-GLS-MENS.
      *     PERFORM GNS-DSP-MENS.

           ADD 1 TO WSS-I.
           IF WSS-I > WSS-MEFO
               GO TO FIN-BUS-VPER-EVC.

           MOVE WSS-REVC(WSS-I) TO EVC.

           MOVE EVC-IND-UTSV IN EVC TO INT-IPER.
           MOVE EVC-NUM-DPVE IN EVC TO CVI-DVEN.
           PERFORM PRO-IPER.
           IF INT-CMSG > SPACES
               GO TO FIN-BUS-VPER-EVC.
           MOVE EVC-NUM-SEVE IN EVC TO WSS-SEVE(WSS-I).
           MOVE INT-IPER            TO WSS-UTSV(WSS-I).
           MOVE EVC-NUM-VIGU IN EVC TO WSS-VIGU(WSS-I).

           MOVE EVC-NUM-DPVC IN EVC TO WSS-DPVC(WSS-I).
           MOVE EVC-NUM-MPVC IN EVC TO WSS-MPVC(WSS-I).
           MOVE EVC-NUM-SPVC IN EVC TO WSS-SPVC(WSS-I).
           MOVE EVC-NUM-APVC IN EVC TO WSS-APVC(WSS-I).
           MOVE WSS-FPVC(WSS-I) TO WSS-FFPV(WSS-I).

           MOVE CVI-DVEN            TO WSS-DVEN(WSS-I).

      *Diferencia en dias entre Fecha Colocacion y EVC-FEC-FPVC
      *     MOVE OPC-NUM-DCOL IN OPC TO FEC-DEC1.
      *     MOVE OPC-NUM-MCOL IN OPC TO FEC-MEC1.
      *     MOVE OPC-NUM-SCOL IN OPC TO FEC-SEC1.
      *     MOVE OPC-NUM-ACOL IN OPC TO FEC-AEC1.
      *     MOVE EVC-NUM-DPVC IN EVC TO FEC-DEC2.
      *     MOVE EVC-NUM-MPVC IN EVC TO FEC-MEC2.
      *     MOVE EVC-NUM-SPVC IN EVC TO FEC-SEC2.
      *     MOVE EVC-NUM-APVC IN EVC TO FEC-AEC2.
      *     MOVE FEC-FORM-FEC TO FEC-FORM.
      *     MOVE FEC-DIF-DIA  TO FEC-CMND.
      *     PERFORM CAL-FEC.
      *     IF NOT FEC-STAT-OKS
      *         MOVE MSG-COD-MENS TO INT-CMSG
      *         GO TO FIN-BUS-VPER-EVC.
      *     MOVE FEC-NDIA            TO WSS-SPVE(WSS-I).
      *     MOVE 'D'                 TO WSS-UTPV(WSS-I).
           GO TO LUP-BUS-VPER-EVC.
       FIN-BUS-VPER-EVC.
           EXIT.

       CHK-AFER-EVC SECTION.
       INI-CHK-AFER-EVC.
           MOVE 0 TO WSS-I.
       LUP-CHK-AFER-EVC.
           ADD 1 TO WSS-I.
           IF WSS-I > WSS-MEFO
               GO TO FIN-CHK-AFER-EVC.

           MOVE WSS-DPVC(WSS-I) TO FEC-ITM1.
           MOVE WSS-MPVC(WSS-I) TO FEC-ITM2.
           MOVE WSS-SPVC(WSS-I) TO FEC-ITM3.
           MOVE WSS-APVC(WSS-I) TO FEC-ITM4.

           MOVE FEC-VHBL-S   TO FEC-VHBL.
           MOVE FEC-FBLK-N   TO FEC-FBLK.
           MOVE FEC-CHOY-N   TO FEC-CHOY.
           MOVE FEC-FORM-FEC TO FEC-FORM.
           MOVE FEC-VAL-FEC  TO FEC-CMND.
           PERFORM PRO-FEC.
           IF ( NOT FEC-STAT-OKS ) AND ( NOT FEC-STAT-FER )
               MOVE MSG-COD-MENS TO INT-CMSG
               GO TO FIN-CHK-AFER-EVC.
           IF FEC-STAT-FER
               MOVE FEC-FORM-FEC TO FEC-FORM
               MOVE FEC-SIG-HBL  TO FEC-CMND
      *        PERFORM PRO-FEC
               PERFORM CAL-FEC
               IF FEC-STAT-OKS
                   MOVE FEC-ITM1 TO WSS-DFPV(WSS-I)
                   MOVE FEC-ITM2 TO WSS-MFPV(WSS-I)
                   MOVE FEC-ITM3 TO WSS-SFPV(WSS-I)
                   MOVE FEC-ITM4 TO WSS-AFPV(WSS-I)
               ELSE
                   MOVE MSG-COD-MENS TO INT-CMSG
                   GO TO FIN-CHK-AFER-EVC.
           GO TO LUP-CHK-AFER-EVC.
       FIN-CHK-AFER-EVC.
           EXIT.

       BUS-MEVC SECTION.
       INI-BUS-MEVC.
      *JSS-TRC.
      *     MOVE 'INI-BUS-MEVC' TO DSP-GLS-MENS.
      *     PERFORM GNS-DSP-MENS.

           MOVE ZEROES TO WSS-FMVC.
           MOVE ZEROES TO WSS-IMVC.
           MOVE 0 TO WSS-I.
       LUP-BUS-MEVC.

      *JSS-TRC.
      *     MOVE 'LUP-BUS-MEVC' TO DSP-GLS-MENS.
      *     PERFORM GNS-DSP-MENS.

           ADD 1 TO WSS-I.
           IF WSS-I > WSS-MEFO
               GO TO FIN-BUS-MEVC.

      *NO SE CONSIDERAN ESTOS TIPOS YA QUE LA RUTINA DE PROYECCION
      *NO AMORTIZA PARA ELLOS Y SE LOS SALTA PARA EL CALCULO DE INTERESES
           IF WSS-VCVC(WSS-I) = 'IC' OR 'IN' OR 'IF' OR 'FE'
               GO TO LUP-BUS-MEVC.

           IF ( WSS-FFPV(WSS-I) < WSS-FMVC OR WSS-FMVC = ZEROES ) AND
              WSS-VIGU(WSS-I) > ZEROES
               MOVE WSS-FFPV(WSS-I) TO WSS-FMVC
               MOVE WSS-I           TO WSS-IMVC.
           GO TO LUP-BUS-MEVC.
       FIN-BUS-MEVC.
           EXIT.

       PRO-VFIN-FE SECTION.
       INI-PRO-VFIN-FE.
           MOVE INT-IBTV-UNA-VEZ TO INT-IBTV.

           MOVE 'P' TO INT-OPEC.
           MOVE 1                   TO CVI-QTAN.
           MOVE EVC-VAL-VENC IN EVC TO CVI-VCAP.
           PERFORM OBT-VMTO.
           IF INT-CMSG > SPACES
               MOVE INT-CMSG TO MSG-COD-MENS
               GO TO FIN-PRO-VFIN-FE.

      *Se redondea y se deja sin decimales el valor final
           IF WSS-PESO-SI
               MOVE CVI-VFIN TO PES-SGV-DECI IN PES-VARI
               PERFORM PES-SCTV
               MOVE PES-SGV-ENTE IN PES-VARI TO CVI-VFIN.
      *

      ***JSS-PGV El calculo deberia ser sobre C.OPC ?
      **     MULTIPLY EVC-VAL-VENC IN EVC BY CVI-TIQN GIVING CVI-VCAP.
      **     IF CVI-VCAP NOT > CVI-VFIN
      **         SUBTRACT CVI-VCAP FROM CVI-VFIN GIVING CVI-VCAP
      **     ELSE
      **         MOVE 0 TO CVI-VCAP
      **         SUBTRACT CVI-VFIN FROM CVI-VCAP GIVING WSS-CVI-IDNI.
           ADD 1 CVI-TIQN GIVING CVI-TIPE.
           DIVIDE CVI-VFIN BY CVI-TIPE GIVING CVI-VCAP.
       FIN-PRO-VFIN-FE.
           EXIT.

       VAL-TMAX-CONV SECTION.
       INI-VAL-TMAX-CONV.
           MOVE SPACES TO WSS-IETV.
           MOVE 1      TO WSS-IDLC.
       SIG-VAL-TMAX-CONV.
           MOVE 0 TO WSS-DLC-NDLC(WSS-IDLC).
           MOVE 0 TO WSS-VAL-SEVD(WSS-IDLC).
           ADD 1 TO WSS-IDLC.
           IF WSS-IDLC NOT > WSS-LDLC
               GO TO SIG-VAL-TMAX-CONV.
      *
           MOVE INT-SEPA TO WSS-AXSV.
           MOVE INT-IPER TO WSS-AXUS.
           MOVE INT-SEPV TO WSS-AXSP.
           MOVE INT-USPV TO WSS-AXUP.
           MOVE INT-TIPT TO WSS-AXTT.
      *
           MOVE 0 TO WSS-TB90 WSS-TS90 WSS-TMAX.
           MOVE 0 TO WSS-IDLC.
           MOVE OPC-CAI-IOPC IN OPC-FLD TO DLC-CAI-IOPC IN DLC.
           MOVE OPC-IIC-IOPC IN OPC-FLD TO DLC-IIC-IOPC IN DLC.
           MOVE 0                       TO DLC-NUM-IDLC IN DLC.
           MOVE FIO-GET-NLS TO FIO-CMND.
       LUP-VAL-TMAX-CONV.
           PERFORM COL-FIO-DLC.
           IF NOT ( FIO-STAT-OKS AND
                    DLC-CAI-IOPC IN DLC = OPC-CAI-IOPC IN OPC-FLD AND
                    DLC-IIC-IOPC IN DLC = OPC-IIC-IOPC IN OPC-FLD )
              GO TO CON-VAL-TMAX-CONV.
           MOVE DLC-NUM-IDLC IN DLC TO WSS-IDLC.
           IF WSS-IDLC > WSS-LDLC
               MOVE 'LIQIDLCOVFLW' TO INT-CMSG
               GO TO FIN-VAL-TMAX-CONV.
           MOVE DLC-CAI-IOPC IN DLC TO VIN-CAI-IOPC.
           MOVE DLC-IIC-IOPC IN DLC TO VIN-IIC-IOPC.
           MOVE DLC-NUM-IDLC IN DLC TO VIN-NUM-IDLC.
           PERFORM BUS-VIN.
           IF NOT FIO-STAT-OKS
               MOVE 'LIQDLC VINNX'      TO INT-CMSG
               MOVE DLC-NUM-IDLC IN DLC TO FRM-MEN2
               GO TO FIN-VAL-TMAX-CONV.
           IF INT-CVTI > SPACES
               IF WSS-OPEC = 'D'
                   MOVE 'LIQTVRBDDNEX' TO INT-CMSG
                   GO TO FIN-VAL-TMAX-CONV
               ELSE
                   MOVE 'S' TO WSS-IETV.
           IF INT-CVTI NOT > SPACES
               MOVE ICG-SGV-TINT IN ICG TO WSS-DLC-TINT(WSS-IDLC)
           ELSE
               MOVE ICG-SGV-SPRD IN ICG TO WSS-DLC-TINT(WSS-IDLC).
           MOVE DLC-MSC-MIPL IN DLC TO WSS-DLC-MIPL(WSS-IDLC).
           MOVE DLC-VAL-NDLC IN DLC TO WSS-DLC-NDLC(WSS-IDLC).
      *
      *Si el credito es en pesos
           IF WSS-PESO-SI
               IF WSS-PLZO-B90
                   IF WSS-DLC-TINT(WSS-IDLC) > WSS-TB90
                       MOVE WSS-DLC-TINT(WSS-IDLC) TO WSS-TB90
                   ELSE
                       NEXT SENTENCE
               ELSE
                   IF WSS-DLC-TINT(WSS-IDLC) > WSS-TS90
                       MOVE WSS-DLC-TINT(WSS-IDLC) TO WSS-TS90
                   ELSE
                       NEXT SENTENCE
           ELSE
               IF WSS-DLC-TINT(WSS-IDLC) > WSS-TMAX
                   MOVE WSS-DLC-TINT(WSS-IDLC) TO WSS-TMAX.
           MOVE FIO-GET-NXT TO FIO-CMND.
           GO TO LUP-VAL-TMAX-CONV.
       CON-VAL-TMAX-CONV.
           IF WSS-IDLC NOT > 0
               GO TO FIN-VAL-TMAX-CONV.
           IF WSS-PESO-SI
               PERFORM VAL-TMXC-PESO
           ELSE
           IF WSS-IND-TMON = WSS-IND-TMMN
               PERFORM VAL-TMXC-MREA
           ELSE
               PERFORM VAL-TMXC-MEXT.
       FIN-VAL-TMAX-CONV.
           MOVE WSS-AXSV TO INT-SEPA.
           MOVE WSS-AXUS TO INT-IPER.
           MOVE WSS-AXSP TO INT-SEPV.
           MOVE WSS-AXUP TO INT-USPV.
           MOVE WSS-AXTT TO INT-TIPT.
       EXT-VAL-TMAX-CONV.
           EXIT.

       BUS-PZO-CTBL SECTION.
       INI-BUS-PZO-CTBL.
           MOVE SPACES TO MSG-COD-MENS.
      *ALD-BCI-INI/08.09.1995
           MOVE 'S' TO WSS-VAL-TMXC.
      *ALD-BCI-FIN/08.09.1995
           IF OPC-IND-RENO IN OPC-FLD = 'PRO'
      *ALD-BCI-INI/08.09.1995
               MOVE 'N' TO WSS-VAL-TMXC
      *ALD-BCI-FIN/08.09.1995
               PERFORM DET-OPC-ORIG
               IF INT-CMSG > SPACES
                   MOVE INT-CMSG TO MSG-COD-MENS
                   GO TO FIN-BUS-PZO-CTBL
               ELSE
                   MOVE SPACES TO SCR-COD-PLZO
                   GO TO FIN-BUS-PZO-CTBL
           ELSE
               MOVE OPC-FEC-FCOL IN OPC TO ORG-FEC-FCOL.

           IF SCR-COD-PLZO = 'USAB90'
               MOVE 'C1' TO WSS-PLZO
               GO TO FIN-BUS-PZO-CTBL.
           IF SCR-COD-PLZO = 'USAS90'
               MOVE 'S9' TO WSS-PLZO
               GO TO FIN-BUS-PZO-CTBL.

           MOVE ZEROES TO WSS-FUVC.
           MOVE 0 TO WSS-IEVC.
       LUP-BUS-PZO-CTBL.
           ADD 1 TO WSS-IEVC.
           IF WSS-IEVC > WSS-MEVC
               GO TO DIA-BUS-PZO-CTBL.
           MOVE EVC-NUM-DPVC IN REG-EVC(WSS-IEVC) TO FEC-ITM1.
           MOVE EVC-NUM-MPVC IN REG-EVC(WSS-IEVC) TO FEC-ITM2.
           MOVE EVC-NUM-SPVC IN REG-EVC(WSS-IEVC) TO FEC-ITM3.
           MOVE EVC-NUM-APVC IN REG-EVC(WSS-IEVC) TO FEC-ITM4.
           IF EVC-NUM-VIGU IN REG-EVC(WSS-IEVC) NOT > 1
               GO TO HBL-BUS-PZO-CTBL.
           IF EVC-IND-UTSV IN REG-EVC(WSS-IEVC) = 'D'
               MOVE FEC-SUM-DIA TO FEC-CMND
               COMPUTE FEC-NDIA = EVC-NUM-SEVE IN REG-EVC(WSS-IEVC) *
                         ( EVC-NUM-VIGU IN REG-EVC(WSS-IEVC) - 1 )
           ELSE
           IF EVC-IND-UTSV IN REG-EVC(WSS-IEVC) = 'M'
               MOVE FEC-SUM-MES TO FEC-CMND
               COMPUTE FEC-NMES = EVC-NUM-SEVE IN REG-EVC(WSS-IEVC) *
                         ( EVC-NUM-VIGU IN REG-EVC(WSS-IEVC) - 1 )
           ELSE
           IF EVC-IND-UTSV IN REG-EVC(WSS-IEVC) = 'A'
               MOVE FEC-SUM-ANO TO FEC-CMND
               COMPUTE FEC-NANO = EVC-NUM-SEVE IN REG-EVC(WSS-IEVC) *
                         ( EVC-NUM-VIGU IN REG-EVC(WSS-IEVC) - 1 )
           ELSE
               MOVE 'EVCUTSVINV' TO MSG-COD-MENS
               GO TO FIN-BUS-PZO-CTBL.
           MOVE FEC-FORM-FEC TO FEC-FORM.
      *    PERFORM PRO-FEC.
           PERFORM CAL-FEC.
           IF NOT FEC-STAT-OKS
               MOVE 'CHKVOPCFSUM' TO MSG-COD-MENS
               GO TO FIN-BUS-PZO-CTBL.
       HBL-BUS-PZO-CTBL.
           IF OPC-IND-AFER IN OPC-FLD = 'N'
               GO TO CON-BUS-PZO-CTBL.
           MOVE FEC-FBLK-N  TO FEC-FBLK.
           MOVE FEC-CHOY-N  TO FEC-CHOY.
           MOVE FEC-VHBL-S  TO FEC-VHBL.
           MOVE FEC-VAL-FEC TO FEC-CMND.
           MOVE FEC-FORM-FEC TO FEC-FORM.
           PERFORM PRO-FEC.
           IF ( NOT FEC-STAT-OKS ) AND ( NOT FEC-STAT-FER )
               MOVE 'CHKVOPCFVHBL' TO MSG-COD-MENS
               GO TO FIN-BUS-PZO-CTBL.
           IF NOT FEC-STAT-FER
               GO TO CON-BUS-PZO-CTBL.
           MOVE FEC-FORM-FEC TO FEC-FORM.
           MOVE FEC-SIG-HBL  TO FEC-CMND.
      *    PERFORM PRO-FEC.
           PERFORM CAL-FEC.
           IF NOT FEC-STAT-OKS
               MOVE 'CHKVOPCFSHBL' TO MSG-COD-MENS
               GO TO FIN-BUS-PZO-CTBL.
       CON-BUS-PZO-CTBL.
           MOVE FEC-ITM1 TO WSS-DVNC.
           MOVE FEC-ITM2 TO WSS-MVNC.
           MOVE FEC-ITM3 TO WSS-SVNC.
           MOVE FEC-ITM4 TO WSS-AVNC.
           IF WSS-FVNC > WSS-FUVC
               MOVE WSS-FVNC TO WSS-FUVC.
           GO TO LUP-BUS-PZO-CTBL.
       DIA-BUS-PZO-CTBL.
           MOVE ORG-NUM-DCOL TO FEC-DEC1.
           MOVE ORG-NUM-MCOL TO FEC-MEC1.
           MOVE ORG-NUM-SCOL TO FEC-SEC1.
           MOVE ORG-NUM-ACOL TO FEC-AEC1.
           MOVE WSS-DUVC     TO FEC-DEC2.
           MOVE WSS-MUVC     TO FEC-MEC2.
           MOVE WSS-SUVC     TO FEC-SEC2.
           MOVE WSS-AUVC     TO FEC-AEC2.
           MOVE FEC-FORM-FEC TO FEC-FORM.
           MOVE FEC-DIF-DIA  TO FEC-CMND.
      *    PERFORM PRO-FEC.
           PERFORM CAL-FEC.
           IF NOT FEC-STAT-OKS
               MOVE 'LIQFCOLFUVC-' TO MSG-COD-MENS
               GO TO FIN-BUS-PZO-CTBL.
           IF FEC-NDIA < 90
               MOVE 'C1' TO WSS-PLZO
           ELSE
               MOVE 'S9' TO WSS-PLZO.
           IF WSS-PESO-SI
               MOVE WSS-PLZO TO SCR-COD-PLZO
           ELSE
               MOVE SPACES   TO SCR-COD-PLZO.
       FIN-BUS-PZO-CTBL.
           EXIT.
      **************************************************************************
      *DAD ini  25-JUL-1991
      * Con el Documento asociado a la Operacion Prorrogada, Determinar cual es
      * la Operacion Original y Leerla para Obtener la Fecha de Curse Original
       DET-OPC-ORIG SECTION.
       INI-DET-OPC-ORIG.
      * Guardo el OPC que este leido anteriormente (KEY)
           MOVE OPC-CIC-IOPC IN OPC TO WSS-CIC-KEEP IN WSS-VARI.

      * Busca el Documento asociado a la Operacion Prorrogada
           MOVE SPACES TO INT-CMSG
                          FRM-MEN2.
           MOVE CAN-CAI-IOPC IN OPC-FLD TO DLC-CAI-IOPC IN DLC.
           MOVE CAN-IIC-IOPC IN OPC-FLD TO DLC-IIC-IOPC IN DLC.
           MOVE ZEROES                  TO DLC-NUM-IDLC IN DLC.
           MOVE FIO-GET-NLS TO FIO-CMND.
           PERFORM COL-FIO-DLC.
           IF NOT ( FIO-STAT-OKS AND
                    DLC-CAI-IOPC IN DLC = CAN-CAI-IOPC IN OPC-FLD AND
                    DLC-IIC-IOPC IN DLC = CAN-IIC-IOPC IN OPC-FLD )
               MOVE 'DLC    DECAN'      TO INT-CMSG
               GO TO FIN-DET-OPC-ORIG.

           MOVE DLC-COD-PLZO IN DLC TO WSS-PLZO.

      * Determina cual es la Operacion Original y la Lee
           IF DLC-CIC-IOCO IN DLC > SPACES
               MOVE DLC-CIC-IOCO IN DLC TO OPC-CIC-IOPC IN OPC
           ELSE
               MOVE DLC-CIC-IOPC IN DLC TO OPC-CIC-IOPC IN OPC.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM COL-FIO-OPC.
           IF NOT FIO-STAT-OKS
               MOVE 'OPC    NOHAY'      TO INT-CMSG
               MOVE OPC-KEY-IOPC IN OPC TO FRM-MEN2
               GO TO FIN-DET-OPC-ORIG.

      * Obtiene la Fecha de Curse Original
           MOVE OPC-FEC-FCOL IN OPC TO ORG-FEC-FCOL IN WSS-VARI.

      * Restauro el OPC que traia el programa
           MOVE WSS-CIC-KEEP IN WSS-VARI TO OPC-CIC-IOPC IN OPC.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM COL-FIO-OPC.
           IF NOT FIO-STAT-OKS
               MOVE 'OPC    NORES'      TO INT-CMSG
               MOVE OPC-KEY-IOPC IN OPC TO FRM-MEN2
               GO TO FIN-DET-OPC-ORIG.
      *PARA DEJAR CON DATOS DE PANTALLA EL REGISTRO OPC.
           PERFORM RET-OPC-OPC.
       FIN-DET-OPC-ORIG.
           EXIT.
      *DAD fin  25-JUL-1991
      **************************************************************************

       VAL-TMXC-PESO SECTION.
       INI-VAL-TMXC-PESO.
           IF WSS-TB90 NOT > 0
               GO TO TS9-VAL-TMXC-PESO.
           MOVE CAM-COD-MNAC TO CAM-COD-VCAM IN CAM(1).
           MOVE 'TB90'       TO CAM-COD-VCAM IN CAM(2).
           PERFORM BUS-CAM-TMXC.
           IF INT-CMSG > SPACES
               GO TO FIN-VAL-TMXC-PESO.

           IF WSS-PBTI IN WSS-AXTT = 'D'
               DIVIDE CAM-SGV-VCAM IN CAM BY 30 GIVING WSS-TMXC ROUNDED
           ELSE
           IF WSS-PBTI IN WSS-AXTT = 'M' OR 'T'
               MOVE CAM-SGV-VCAM IN CAM TO WSS-TMXC
           ELSE
               MULTIPLY CAM-SGV-VCAM IN CAM BY 12 GIVING WSS-TMXC
                                                         ROUNDED.
           MOVE WSS-TB90 TO INT-TINT.
           MOVE WSS-AXTT TO INT-TIPT.
           PERFORM SUM-TASA-BASE.
           IF INT-CMSG  > SPACES
               MOVE INT-MEN2 TO FRM-MEN2
               GO TO FIN-VAL-TMXC-PESO.
           MOVE INT-TIPE TO WSS-TMAX.

           MOVE 'LIQ$TB9>TMXC' TO INT-CMSG.
           PERFORM COMP-TASA.
       TS9-VAL-TMXC-PESO.
           IF WSS-TS90 NOT > 0
               GO TO FIN-VAL-TMXC-PESO.
           MOVE CAM-COD-MNAC TO CAM-COD-VCAM IN CAM(1).
           MOVE 'TS90'       TO CAM-COD-VCAM IN CAM(2).
           PERFORM BUS-CAM-TMXC.
           IF INT-CMSG > SPACES
               GO TO FIN-VAL-TMXC-PESO.

           IF WSS-PBTI IN WSS-AXTT = 'D'
               DIVIDE CAM-SGV-VCAM IN CAM BY 30 GIVING WSS-TMXC ROUNDED
           ELSE
           IF WSS-PBTI IN WSS-AXTT = 'M' OR 'T'
               MOVE CAM-SGV-VCAM IN CAM TO WSS-TMXC
           ELSE
               MULTIPLY CAM-SGV-VCAM IN CAM BY 12 GIVING WSS-TMXC
                                                         ROUNDED.
           MOVE WSS-TS90 TO INT-TINT.
           MOVE WSS-AXTT TO INT-TIPT.
           PERFORM SUM-TASA-BASE.
           IF INT-CMSG  > SPACES
               MOVE INT-MEN2 TO FRM-MEN2
               GO TO FIN-VAL-TMXC-PESO.
           MOVE INT-TIPE TO WSS-TMAX.

           MOVE 'LIQ$TS9>TMXC' TO INT-CMSG.
           PERFORM COMP-TASA.
       FIN-VAL-TMXC-PESO.
           EXIT.

       VAL-TMXC-MREA SECTION.
       INI-VAL-TMXC-MREA.
           IF WSS-TMAX NOT > 0
               GO TO FIN-VAL-TMXC-MREA.
           MOVE OPC-COD-VCOC IN OPC-FLD TO CAM-COD-VCAM IN CAM(1).
           MOVE 'TMXC'                  TO CAM-COD-VCAM IN CAM(2).
           PERFORM BUS-CAM-TMXC.
           IF INT-CMSG > SPACES
               GO TO FIN-VAL-TMXC-MREA.

           IF WSS-PBTI IN WSS-AXTT = 'D'
               DIVIDE CAM-SGV-VCAM IN CAM BY 360 GIVING WSS-TMXC ROUNDED
           ELSE
           IF WSS-PBTI IN WSS-AXTT = 'M' OR 'T'
               DIVIDE CAM-SGV-VCAM IN CAM BY 12  GIVING WSS-TMXC ROUNDED
           ELSE
               MOVE CAM-SGV-VCAM IN CAM TO WSS-TMXC.

           MOVE WSS-TMAX TO INT-TINT.
           MOVE WSS-AXTT TO INT-TIPT.
           PERFORM SUM-TASA-BASE.
           IF INT-CMSG  > SPACES
               MOVE INT-MEN2 TO FRM-MEN2
      *DAD ini  06-ABR-1994
               GO TO FIN-VAL-TMXC-MREA.
      *DAD fin  06-ABR-1994
           MOVE INT-TIPE TO WSS-TMAX.

           MOVE 'LIQTMRJ>TMXC' TO INT-CMSG.
           PERFORM COMP-TASA.
       FIN-VAL-TMXC-MREA.
           EXIT.

       VAL-TMXC-MEXT SECTION.
       INI-VAL-TMXC-MEXT.
           IF WSS-TMAX NOT > 0
               GO TO FIN-VAL-TMXC-MEXT.
           MOVE 'TMEX' TO CAM-COD-VCAM IN CAM(1).
           MOVE 'TMXC' TO CAM-COD-VCAM IN CAM(2).
           PERFORM BUS-CAM-TMXC.
           IF INT-CMSG > SPACES
               GO TO FIN-VAL-TMXC-MEXT.

           IF WSS-PBTI IN WSS-AXTT = 'D'
               DIVIDE CAM-SGV-VCAM IN CAM BY 360 GIVING WSS-TMXC ROUNDED
           ELSE
           IF WSS-PBTI IN WSS-AXTT = 'M' OR 'T'
               DIVIDE CAM-SGV-VCAM IN CAM BY 12  GIVING WSS-TMXC ROUNDED
           ELSE
               MOVE CAM-SGV-VCAM IN CAM TO WSS-TMXC.

           MOVE WSS-TMAX TO INT-TINT.
           MOVE WSS-AXTT TO INT-TIPT.
           PERFORM SUM-TASA-BASE.
           IF INT-CMSG  > SPACES
               MOVE INT-MEN2 TO FRM-MEN2
      *DAD ini  06-ABR-1994
               GO TO FIN-VAL-TMXC-MEXT.
      *DAD fin  06-ABR-1994
           MOVE INT-TIPE TO WSS-TMAX.

           MOVE 'LIQTMEX>TMXC' TO INT-CMSG.
           PERFORM COMP-TASA.
       FIN-VAL-TMXC-MEXT.
           EXIT.

       BUS-CAM-TMXC SECTION.
       INI-BUS-CAM-TMXC.
      *DAD ini  25-JUL-1991
           MOVE ORG-FEC-FCOL IN WSS-VARI TO CAM-FEC-FCAM IN CAM(1).
           MOVE ORG-FEC-FCOL IN WSS-VARI TO CAM-FEC-FCAM IN CAM(2).
      *DAD fin  25-JUL-1991
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM TAB-FIO-CAM.
           IF NOT FIO-STAT-OKS
               MOVE 'CAM    NEX'           TO WSS-CMSG
               MOVE CAM-COD-VCAM IN CAM(2) TO WSS-CMS2
               MOVE WSS-CMSG            TO INT-CMSG
               MOVE CAM-KEY-CAMB IN CAM TO FRM-MEN2
               GO TO FIN-BUS-CAM-TMXC.
           IF CAM-IND-VIGE NOT = 'S'
               MOVE 'VALCAMNVG'         TO INT-CMSG
               MOVE CAM-KEY-CAMB IN CAM TO FRM-MEN2
               GO TO FIN-BUS-CAM-TMXC.
           IF WSS-BCTI IN WSS-AXTT = 'A'
               ADD 100 CAM-SGV-VCAM IN CAM GIVING WSS-TIMC
               MULTIPLY CAM-SGV-VCAM IN CAM BY 100 GIVING
                        CAM-SGV-VCAM IN CAM
               DIVIDE CAM-SGV-VCAM IN CAM BY WSS-TIMC GIVING
                      CAM-SGV-VCAM IN CAM ROUNDED.
           MOVE WSS-BCTI IN WSS-AXTT TO WSS-TTM1 IN WSS-TTMC.
           IF CAM-COD-VCAM IN CAM(1) = CAM-COD-MNAC 
               MOVE 'M' TO WSS-TTM2 IN WSS-TTMC
           ELSE
               MOVE 'A' TO WSS-TTM2 IN WSS-TTMC.
           MOVE 'SS    000' TO WSS-TTM3 IN WSS-TTMC.
           MOVE CAM-SGV-VCAM IN CAM  TO WSS-TIMC.
       FIN-BUS-CAM-TMXC.
           EXIT.

       SUM-TASA-BASE SECTION.
       INI-SUM-TASA-BASE.
           MOVE INT-TINT TO INT-TIPE.
           IF INT-CVTI > SPACES
               MOVE INT-FINT TO CAM-FEC-FCAM IN CAM(1)
               MOVE INT-FINT TO CAM-FEC-FCAM IN CAM(2)
               MOVE 'I'      TO CAM-MSC-TVAL IN CAM(1)
               MOVE INT-CVTI TO CAM-COD-CVAL IN CAM(1)
               MOVE INT-PBTI TO CAM-COD-TCAM IN CAM(1)
               MOVE INT-VCAM TO CAM-COD-VCAM IN CAM(2)
               MOVE FIO-GET-KEY TO FIO-CMND
               PERFORM TAB-FIO-CAM
               IF NOT FIO-STAT-OKS
                   MOVE 'CAMBTSANXABT'      TO INT-CMSG
                   MOVE CAM-KEY-CAMB IN CAM TO INT-MEN2
               ELSE
               IF CAM-MSC-STAT IN CAM NOT = 'S'
                   MOVE 'CAMBTSANVABT'      TO INT-CMSG
                   MOVE CAM-KEY-CAMB IN CAM TO INT-MEN2
               ELSE
                   ADD CAM-SGV-VCAM IN CAM TO INT-TIPE.
       FIN-SUM-TASA-BASE.
           EXIT.

       COMP-TASA SECTION.
       INI-COMP-TASA.
      *ALD-BCI-INI/08.09.1995
           IF WSS-VAL-TMXC = 'N'
               MOVE SPACES TO INT-CMSG
               GO TO FIN-COMP-TASA.
      *ALD-BCI-FIN/08.09.1995
           IF WSS-TMAX NOT > WSS-TMXC
               MOVE SPACES TO INT-CMSG
               GO TO FIN-COMP-TASA.
           IF INT-CVTI NOT > SPACES
               GO TO FIN-COMP-TASA.
           MOVE 'COL'       TO FIO-SIST.
           MOVE FIO-GET-KEY TO FIO-CMND.
           MOVE 'VSNLIQTMXCBCI' TO TAB-COD-TABL IN TAB.
           PERFORM GNS-FIO-TAB.
           IF NOT ( FIO-STAT-OKS AND TAB-MSC-STAT IN TAB = 'S' )
               GO TO FIN-COMP-TASA.
      *JSS, si la tasa variable/flujo NO rechaza (Memo 19/04/91 ),
      *     usa la maxima convencional para calcular
      *JSS, complementado para tasa variable/curse (Memo 13/05/92 )
           IF INT-TFPR = 'F'
               MOVE SPACES TO INT-CMSG
               MOVE 'F'    TO WSS-CMMC
           ELSE
               SUBTRACT WSS-TMXC FROM WSS-TMAX GIVING WSS-TMAX
               IF WSS-TMAX < INT-TINT
                   SUBTRACT WSS-TMAX FROM INT-TINT GIVING WSS-TIMC
                   MOVE 'C'    TO WSS-CMMC
                   MOVE SPACES TO INT-CMSG.
       FIN-COMP-TASA.
           EXIT.
      *
       COPY SGCBGCLI.
       COPY SGCBFDBC.
      *RVM-CST-INI 14-OCT-1996
       COPY SGCBFDCP.
       COPY SGCBFDCE.
      *RVM-CST-FIN 14-OCT-1996
      *
       COPY COLBFCAN.
       COPY COLBFRDC.
       COPY COLBFITR.
       COPY COLBFCOM.
       COPY COLBFCYA.
       COPY COLBFAUT.
       COPY COLBFROV.
       COPY COLBFDLC.
       COPY COLBFEVC.
       COPY COLBFVEN.
       COPY COLBFIMP.
       COPY COLBFICG.
       COPY COLBFNTR.
       COPY COLBFTOC.
       COPY COLBFPOC.
       COPY COLBFRCE.
       COPY COLBFRCV.
      *
       COPY COLBGUVD.
      *
       COPY COLBGCLI.
       COPY COLBGVIN.
      *
       COPY GNSBVIDC.
       COPY GNSBPVRF.
       COPY GNSBVIND.
       COPY GNSBVMSC.
      *
       COPY GNSBGCVI.
      *SMC-INI 09.09.1993
       COPY COLBGINT.
      *SMC-FIN 09.09.1993
      *
*% IF PGM_PTC
      *PTC ini
       COPY GNSBGQUE.
      *PTC fin
*% END
       COPY GNSBGFEC.
       COPY GNSBPFEC.
       COPY GNSBGHOY.
       COPY GNSBGCPT.
       COPY GNSBBMSC.
       COPY GNSBBTAB.
       COPY GNSBFTAB.
      *ALD/22-AUG-1988
       COPY GNSBGCAM.
       COPY GNSBGPES.
       COPY GNSBVCOD.
       COPY GNSBVTAB.
       COPY GNSBVNUM.
      *
       COPY TABBBOFI.
       COPY TABBFOFI.
       COPY TABBBUSR.
       COPY TABBFUSR.
      *ALD/22-AUG-1988
       COPY TABBFCAM.
       COPY TABBVTDU.
       COPY TABBVOFI.
       COPY TABBVUSR.
      *
       COPY SGCBGDOM.
       COPY SGCBFRCO.
       COPY SGCBFOPE.
       COPY SGCBFRCD.
      *
      *DAD ini  02-AUG-1994       (Manejo de LDC)
       COPY COLBGCCU.
      *COPY LDCBGCCU.
       COPY LDCBKCCU.
       COPY LDCBKCEG.
       COPY SGCBBGRP.
       COPY SGCBFREC.
      *DAD fin  02-AUG-1994
      *RVM-CST-INI 6-AUG-1996
       COPY SGCBFDCC REPLACING ==DCC== BY ==SDC==
                      ==ADR-DCC-REQA== BY ==ADR-SDC-REQA==.
      *RVM-CST-FIN 6-AUG-1996
      *JPA ini  22-MAR-1995
       COPY COLBGLDC.
      *JPA fin  22-MAR-1995

      *INI Solo por usar el modulo COLBQOPC
       GET-CUR-RDC SECTION.
       INI-GET-CUR-RDC.
      *ISP TIENE DIFERENCIAS CON GET-CUR-RDC DE PROGRAMA OPC ???
           MOVE OPC-CAI-IOPC IN OPC TO RDC-CAI-IOPC IN RDC.
           MOVE OPC-IIC-IOPC IN OPC TO RDC-IIC-IOPC IN RDC.
           MOVE ZEROES              TO RDC-NUM-IDLC IN RDC.
           MOVE 'RDC-KEY-IDLC' TO FIO-AKEY.
      *JSS COMPATIBILIDAD VSAM-DATACOM
      *    MOVE FIO-GET-KEY TO FIO-CMND.
           MOVE FIO-GET-NLS TO FIO-CMND.
      *
           PERFORM COL-FIO-RDC.
      *JSS COMPATIBILIDAD VSAM-DATACOM
           IF NOT ( FIO-STAT-OKS AND
                    RDC-CAI-IOPC IN RDC = OPC-CAI-IOPC IN OPC AND
                    RDC-IIC-IOPC IN RDC = OPC-IIC-IOPC IN OPC AND
                    RDC-NUM-IDLC IN RDC = ZEROES )
               MOVE '23' TO FIO-STAT.
      *
       FIN-GET-CUR-RDC.
           EXIT.

       GET-NXT-RDC SECTION.
       INI-GET-NXT-RDC.
           MOVE SPACES TO MSG-COD-SIST.
           MOVE SPACES TO MSG-COD-MENS.
           MOVE 'RDC-KEY-IDLC' TO FIO-AKEY.
           MOVE FIO-GET-NXT TO FIO-CMND.
           PERFORM COL-FIO-RDC.
           IF FIO-STAT-OKS AND
      *ISP TIENE DIFERENCIAS CON GET-CUR-RDC DE PROGRAMA OPC ????
              OPC-CAI-IOPC IN OPC = RDC-CAI-IOPC IN RDC AND
              OPC-IIC-IOPC IN OPC = RDC-IIC-IOPC IN RDC AND
              RDC-NUM-IDLC IN RDC = ZEROES
                MOVE 'M' TO SCR-IND-MRDC
                MOVE 'COL'          TO MSG-COD-SIST
                MOVE 'OPC    MDDIR' TO MSG-COD-MENS
                PERFORM GET-MSG
           ELSE
                MOVE SPACES TO SCR-IND-MRDC
                PERFORM GET-CUR-RDC.
       FIN-GET-NXT-RDC.
           EXIT.
      *FIN Solo por usar el modulo COLBQOPC
      *>>>>
*% END
