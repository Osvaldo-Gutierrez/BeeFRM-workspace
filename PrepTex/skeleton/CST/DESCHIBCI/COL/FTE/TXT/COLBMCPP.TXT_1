*%! Codigo adicional para archivo
*% IF INI_KEY_ALL_CPP
      *<<<< ESTO ES UNA PRUEBA (OSVALDO GUTIERREZ)
      *>>>> 
*% END
*% IF FIN_PUT_ALL_CPP
      *<<<< FIN_PUT_ALL_CPP ( Osvaldo gutierrez )
           PERFORM PUT-ALL-CP2. 
      *>>>>
*% END
*% IF INI_PUT_CPP_CPP
      *<<<<
           MOVE 40 TO FRM-I.
           MOVE 'N' TO WSS-IND-HMAS IN WSS-VARI.
      *>>>>
*% END
*% IF INI_CLR_KEY_CPP
      *<<<< INI_CLR_KEY_CPP
      *MVG-INI 26-JUN-2019 IGUALACION COL
      ** OGB-ini 23-11-2012
      ** para el comando COS, no limpia las llaves
      ** pues es una consulta secuencial con las 
      ** llaves de la consulta anterior 
      *     IF SCR-CMND = 'COS'
      *         GO TO FIN-CLR-KEY-CPP.
      ** OGB-fin 23-11-2012
      *MVG-FIN 26-JUN-2019 IGUALACION COL
      *>>>> INI_CLR_KEY_CPP
*% END
*% IF FIN_PUT_CPP_CPP
      *<<<<
           MOVE CPP-COD-VCOC IN CPP-FLD TO FRM-COD-VCOC IN CP2-FLD.     
           MOVE CPP-COD-TOOC IN CPP-FLD TO FRM-COD-TOOC IN CP2-FLD.     
           MOVE CPP-COD-AOOC IN CPP-FLD TO FRM-COD-AOOC IN CP2-FLD.     
           MOVE CPP-COD-MVTO IN CPP-FLD TO FRM-COD-MVTO IN CP2-FLD.     
           MOVE CPP-IND-SCRT IN CPP-FLD TO FRM-IND-SCRT IN CP2-FLD.     
           MOVE CPP-IND-SCTB IN CPP-FLD TO FRM-IND-SCTB IN CP2-FLD.     
           MOVE CPP-NUM-DTRN IN CPP-FLD TO FRM-NUM-DTRN IN CP2-FLD.     
           MOVE CPP-NUM-MTRN IN CPP-FLD TO FRM-NUM-MTRN IN CP2-FLD.     
           MOVE CPP-NUM-STRN IN CPP-FLD TO FRM-NUM-STRN IN CP2-FLD.     
           MOVE CPP-NUM-ATRN IN CPP-FLD TO FRM-NUM-ATRN IN CP2-FLD.
      *
           MOVE CPP-MSC-TCCT IN CPP(40) TO FRM-MSC-TCCT IN CP2-FLD(1).  
           MOVE CPP-MSC-TCCT IN CPP(41) TO FRM-MSC-TCCT IN CP2-FLD(2).  
           MOVE CPP-MSC-TCCT IN CPP(42) TO FRM-MSC-TCCT IN CP2-FLD(3).  
           MOVE CPP-MSC-TCCT IN CPP(43) TO FRM-MSC-TCCT IN CP2-FLD(4).  
           MOVE CPP-MSC-TCCT IN CPP(44) TO FRM-MSC-TCCT IN CP2-FLD(5).  
           MOVE CPP-MSC-TCCT IN CPP(45) TO FRM-MSC-TCCT IN CP2-FLD(6).  
           MOVE CPP-MSC-TCCT IN CPP(46) TO FRM-MSC-TCCT IN CP2-FLD(7).  
           MOVE CPP-MSC-TCCT IN CPP(47) TO FRM-MSC-TCCT IN CP2-FLD(8).  
           MOVE CPP-MSC-TCCT IN CPP(48) TO FRM-MSC-TCCT IN CP2-FLD(9).  
           MOVE CPP-MSC-TCCT IN CPP(49) TO FRM-MSC-TCCT IN CP2-FLD(10). 
           MOVE CPP-MSC-TCCT IN CPP(50) TO FRM-MSC-TCCT IN CP2-FLD(11). 
           MOVE CPP-MSC-TCCT IN CPP(51) TO FRM-MSC-TCCT IN CP2-FLD(12). 
           MOVE CPP-MSC-TCCT IN CPP(52) TO FRM-MSC-TCCT IN CP2-FLD(13). 
           MOVE CPP-MSC-TCCT IN CPP(53) TO FRM-MSC-TCCT IN CP2-FLD(14). 
           MOVE CPP-MSC-TCCT IN CPP(54) TO FRM-MSC-TCCT IN CP2-FLD(15). 
           MOVE CPP-MSC-TCCT IN CPP(55) TO FRM-MSC-TCCT IN CP2-FLD(16). 
           MOVE CPP-MSC-TCCT IN CPP(56) TO FRM-MSC-TCCT IN CP2-FLD(17). 
           MOVE CPP-MSC-TCCT IN CPP(57) TO FRM-MSC-TCCT IN CP2-FLD(18). 
           MOVE CPP-MSC-TCCT IN CPP(58) TO FRM-MSC-TCCT IN CP2-FLD(19). 
           MOVE CPP-MSC-TCCT IN CPP(59) TO FRM-MSC-TCCT IN CP2-FLD(20). 
           MOVE CPP-MSC-TCCT IN CPP(60) TO FRM-MSC-TCCT IN CP2-FLD(21). 
           MOVE CPP-MSC-TCCT IN CPP(61) TO FRM-MSC-TCCT IN CP2-FLD(22). 
           MOVE CPP-MSC-TCCT IN CPP(62) TO FRM-MSC-TCCT IN CP2-FLD(23). 
           MOVE CPP-MSC-TCCT IN CPP(63) TO FRM-MSC-TCCT IN CP2-FLD(24). 
           MOVE CPP-MSC-TCCT IN CPP(64) TO FRM-MSC-TCCT IN CP2-FLD(25). 
           MOVE CPP-MSC-TCCT IN CPP(65) TO FRM-MSC-TCCT IN CP2-FLD(26). 
           MOVE CPP-MSC-TCCT IN CPP(66) TO FRM-MSC-TCCT IN CP2-FLD(27). 
           MOVE CPP-MSC-TCCT IN CPP(67) TO FRM-MSC-TCCT IN CP2-FLD(28). 
           MOVE CPP-MSC-TCCT IN CPP(68) TO FRM-MSC-TCCT IN CP2-FLD(29). 
           MOVE CPP-MSC-TCCT IN CPP(69) TO FRM-MSC-TCCT IN CP2-FLD(30). 
           MOVE CPP-MSC-TCCT IN CPP(70) TO FRM-MSC-TCCT IN CP2-FLD(31). 
           MOVE CPP-MSC-TCCT IN CPP(71) TO FRM-MSC-TCCT IN CP2-FLD(32). 
           MOVE CPP-MSC-TCCT IN CPP(72) TO FRM-MSC-TCCT IN CP2-FLD(33). 
           MOVE CPP-MSC-TCCT IN CPP(73) TO FRM-MSC-TCCT IN CP2-FLD(34). 
           MOVE CPP-MSC-TCCT IN CPP(74) TO FRM-MSC-TCCT IN CP2-FLD(35). 
           MOVE CPP-MSC-TCCT IN CPP(75) TO FRM-MSC-TCCT IN CP2-FLD(36). 
           MOVE CPP-MSC-TCCT IN CPP(76) TO FRM-MSC-TCCT IN CP2-FLD(37). 
           MOVE CPP-MSC-TCCT IN CPP(77) TO FRM-MSC-TCCT IN CP2-FLD(38). 
           MOVE CPP-MSC-TCCT IN CPP(78) TO FRM-MSC-TCCT IN CP2-FLD(39). 
      *
           MOVE CPP-IND-DBHB IN CPP(40) TO FRM-IND-DBHB IN CP2-FLD(1).  
           MOVE CPP-IND-DBHB IN CPP(41) TO FRM-IND-DBHB IN CP2-FLD(2).  
           MOVE CPP-IND-DBHB IN CPP(42) TO FRM-IND-DBHB IN CP2-FLD(3).  
           MOVE CPP-IND-DBHB IN CPP(43) TO FRM-IND-DBHB IN CP2-FLD(4).  
           MOVE CPP-IND-DBHB IN CPP(44) TO FRM-IND-DBHB IN CP2-FLD(5).  
           MOVE CPP-IND-DBHB IN CPP(45) TO FRM-IND-DBHB IN CP2-FLD(6).  
           MOVE CPP-IND-DBHB IN CPP(46) TO FRM-IND-DBHB IN CP2-FLD(7).  
           MOVE CPP-IND-DBHB IN CPP(47) TO FRM-IND-DBHB IN CP2-FLD(8).  
           MOVE CPP-IND-DBHB IN CPP(48) TO FRM-IND-DBHB IN CP2-FLD(9).  
           MOVE CPP-IND-DBHB IN CPP(49) TO FRM-IND-DBHB IN CP2-FLD(10). 
           MOVE CPP-IND-DBHB IN CPP(50) TO FRM-IND-DBHB IN CP2-FLD(11). 
           MOVE CPP-IND-DBHB IN CPP(51) TO FRM-IND-DBHB IN CP2-FLD(12). 
           MOVE CPP-IND-DBHB IN CPP(52) TO FRM-IND-DBHB IN CP2-FLD(13). 
           MOVE CPP-IND-DBHB IN CPP(53) TO FRM-IND-DBHB IN CP2-FLD(14). 
           MOVE CPP-IND-DBHB IN CPP(54) TO FRM-IND-DBHB IN CP2-FLD(15). 
           MOVE CPP-IND-DBHB IN CPP(55) TO FRM-IND-DBHB IN CP2-FLD(16). 
           MOVE CPP-IND-DBHB IN CPP(56) TO FRM-IND-DBHB IN CP2-FLD(17). 
           MOVE CPP-IND-DBHB IN CPP(57) TO FRM-IND-DBHB IN CP2-FLD(18). 
           MOVE CPP-IND-DBHB IN CPP(58) TO FRM-IND-DBHB IN CP2-FLD(19). 
           MOVE CPP-IND-DBHB IN CPP(59) TO FRM-IND-DBHB IN CP2-FLD(20). 
           MOVE CPP-IND-DBHB IN CPP(60) TO FRM-IND-DBHB IN CP2-FLD(21). 
           MOVE CPP-IND-DBHB IN CPP(61) TO FRM-IND-DBHB IN CP2-FLD(22). 
           MOVE CPP-IND-DBHB IN CPP(62) TO FRM-IND-DBHB IN CP2-FLD(23). 
           MOVE CPP-IND-DBHB IN CPP(63) TO FRM-IND-DBHB IN CP2-FLD(24). 
           MOVE CPP-IND-DBHB IN CPP(64) TO FRM-IND-DBHB IN CP2-FLD(25). 
           MOVE CPP-IND-DBHB IN CPP(65) TO FRM-IND-DBHB IN CP2-FLD(26). 
           MOVE CPP-IND-DBHB IN CPP(66) TO FRM-IND-DBHB IN CP2-FLD(27). 
           MOVE CPP-IND-DBHB IN CPP(67) TO FRM-IND-DBHB IN CP2-FLD(28). 
           MOVE CPP-IND-DBHB IN CPP(68) TO FRM-IND-DBHB IN CP2-FLD(29). 
           MOVE CPP-IND-DBHB IN CPP(69) TO FRM-IND-DBHB IN CP2-FLD(30). 
           MOVE CPP-IND-DBHB IN CPP(70) TO FRM-IND-DBHB IN CP2-FLD(31). 
           MOVE CPP-IND-DBHB IN CPP(71) TO FRM-IND-DBHB IN CP2-FLD(32). 
           MOVE CPP-IND-DBHB IN CPP(72) TO FRM-IND-DBHB IN CP2-FLD(33). 
           MOVE CPP-IND-DBHB IN CPP(73) TO FRM-IND-DBHB IN CP2-FLD(34). 
           MOVE CPP-IND-DBHB IN CPP(74) TO FRM-IND-DBHB IN CP2-FLD(35). 
           MOVE CPP-IND-DBHB IN CPP(75) TO FRM-IND-DBHB IN CP2-FLD(36). 
           MOVE CPP-IND-DBHB IN CPP(76) TO FRM-IND-DBHB IN CP2-FLD(37). 
           MOVE CPP-IND-DBHB IN CPP(77) TO FRM-IND-DBHB IN CP2-FLD(38). 
           MOVE CPP-IND-DBHB IN CPP(78) TO FRM-IND-DBHB IN CP2-FLD(39).
      *
           MOVE CPP-IND-TALG IN CPP(40) TO FRM-IND-TALG IN CP2-FLD(1).  
           MOVE CPP-IND-TALG IN CPP(41) TO FRM-IND-TALG IN CP2-FLD(2).  
           MOVE CPP-IND-TALG IN CPP(42) TO FRM-IND-TALG IN CP2-FLD(3).  
           MOVE CPP-IND-TALG IN CPP(43) TO FRM-IND-TALG IN CP2-FLD(4).  
           MOVE CPP-IND-TALG IN CPP(44) TO FRM-IND-TALG IN CP2-FLD(5).  
           MOVE CPP-IND-TALG IN CPP(45) TO FRM-IND-TALG IN CP2-FLD(6).  
           MOVE CPP-IND-TALG IN CPP(46) TO FRM-IND-TALG IN CP2-FLD(7).  
           MOVE CPP-IND-TALG IN CPP(47) TO FRM-IND-TALG IN CP2-FLD(8).  
           MOVE CPP-IND-TALG IN CPP(48) TO FRM-IND-TALG IN CP2-FLD(9).  
           MOVE CPP-IND-TALG IN CPP(49) TO FRM-IND-TALG IN CP2-FLD(10). 
           MOVE CPP-IND-TALG IN CPP(50) TO FRM-IND-TALG IN CP2-FLD(11). 
           MOVE CPP-IND-TALG IN CPP(51) TO FRM-IND-TALG IN CP2-FLD(12). 
           MOVE CPP-IND-TALG IN CPP(52) TO FRM-IND-TALG IN CP2-FLD(13). 
           MOVE CPP-IND-TALG IN CPP(53) TO FRM-IND-TALG IN CP2-FLD(14). 
           MOVE CPP-IND-TALG IN CPP(54) TO FRM-IND-TALG IN CP2-FLD(15). 
           MOVE CPP-IND-TALG IN CPP(55) TO FRM-IND-TALG IN CP2-FLD(16). 
           MOVE CPP-IND-TALG IN CPP(56) TO FRM-IND-TALG IN CP2-FLD(17). 
           MOVE CPP-IND-TALG IN CPP(57) TO FRM-IND-TALG IN CP2-FLD(18). 
           MOVE CPP-IND-TALG IN CPP(58) TO FRM-IND-TALG IN CP2-FLD(19). 
           MOVE CPP-IND-TALG IN CPP(59) TO FRM-IND-TALG IN CP2-FLD(20). 
           MOVE CPP-IND-TALG IN CPP(60) TO FRM-IND-TALG IN CP2-FLD(21). 
           MOVE CPP-IND-TALG IN CPP(61) TO FRM-IND-TALG IN CP2-FLD(22). 
           MOVE CPP-IND-TALG IN CPP(62) TO FRM-IND-TALG IN CP2-FLD(23). 
           MOVE CPP-IND-TALG IN CPP(63) TO FRM-IND-TALG IN CP2-FLD(24). 
           MOVE CPP-IND-TALG IN CPP(64) TO FRM-IND-TALG IN CP2-FLD(25). 
           MOVE CPP-IND-TALG IN CPP(65) TO FRM-IND-TALG IN CP2-FLD(26). 
           MOVE CPP-IND-TALG IN CPP(66) TO FRM-IND-TALG IN CP2-FLD(27). 
           MOVE CPP-IND-TALG IN CPP(67) TO FRM-IND-TALG IN CP2-FLD(28). 
           MOVE CPP-IND-TALG IN CPP(68) TO FRM-IND-TALG IN CP2-FLD(29). 
           MOVE CPP-IND-TALG IN CPP(69) TO FRM-IND-TALG IN CP2-FLD(30). 
           MOVE CPP-IND-TALG IN CPP(70) TO FRM-IND-TALG IN CP2-FLD(31). 
           MOVE CPP-IND-TALG IN CPP(71) TO FRM-IND-TALG IN CP2-FLD(32). 
           MOVE CPP-IND-TALG IN CPP(72) TO FRM-IND-TALG IN CP2-FLD(33). 
           MOVE CPP-IND-TALG IN CPP(73) TO FRM-IND-TALG IN CP2-FLD(34). 
           MOVE CPP-IND-TALG IN CPP(74) TO FRM-IND-TALG IN CP2-FLD(35). 
           MOVE CPP-IND-TALG IN CPP(75) TO FRM-IND-TALG IN CP2-FLD(36). 
           MOVE CPP-IND-TALG IN CPP(76) TO FRM-IND-TALG IN CP2-FLD(37). 
           MOVE CPP-IND-TALG IN CPP(77) TO FRM-IND-TALG IN CP2-FLD(38). 
           MOVE CPP-IND-TALG IN CPP(78) TO FRM-IND-TALG IN CP2-FLD(39). 
      *
       LOOP-PUT-CPP-CPP.
           IF FRM-I > 78
               GO TO FIN-PUT-CPP-CPP
           ELSE
               IF CPP-MSC-TCCT IN CPP(FRM-I) > SPACES OR
                  CPP-IND-DBHB IN CPP(FRM-I) > SPACES OR
                  CPP-IND-TALG IN CPP(FRM-I) > SPACES
                   MOVE 'S' TO WSS-IND-HMAS IN WSS-VARI
                   GO TO FIN-PUT-CPP-CPP.

           ADD 1 TO FRM-I.
           GO TO LOOP-PUT-CPP-CPP.
      *>>>>
*% END
*% IF CPP_IND_SCRT
      *<<<< CPP_IND_SCRT
      *MVG-INI 26-JUN-2019 IGUALACION COL
      ** Cuando se usa el comando COS, permite que quede vacio el 
      ** campo IND-SCRT
      **ISP-INI 13-NOV-2012  - 1205_02 Creacion de Productos de Credito
      *     IF SCR-CMND = 'COS' AND
      *        CPP-IND-SCRT IN CPP-FLD NOT > SPACES
      *          GO TO FIN-VAL-CPP-IND-SCRT.
      **ISP-FIN 13-NOV-2012  - 1205_02 Creacion de Productos de Credito
      *MVG-FIN 26-JUN-2019 IGUALACION COL
      *>>>> CPP_IND_SCRT
*% END
*% IF FIN_RET_CPP_CPP AND PGM_BU
      *<<<< FIN_RET_CPP_CPP
           MOVE FRM-MSC-TCCT IN CP2-FLD(1) TO CPP-MSC-TCCT IN CPP(40).
           MOVE FRM-MSC-TCCT IN CP2-FLD(2) TO CPP-MSC-TCCT IN CPP(41).
           MOVE FRM-MSC-TCCT IN CP2-FLD(3) TO CPP-MSC-TCCT IN CPP(42).
           MOVE FRM-MSC-TCCT IN CP2-FLD(4) TO CPP-MSC-TCCT IN CPP(43).
           MOVE FRM-MSC-TCCT IN CP2-FLD(5) TO CPP-MSC-TCCT IN CPP(44).
           MOVE FRM-MSC-TCCT IN CP2-FLD(6) TO CPP-MSC-TCCT IN CPP(45).
           MOVE FRM-MSC-TCCT IN CP2-FLD(7) TO CPP-MSC-TCCT IN CPP(46).
           MOVE FRM-MSC-TCCT IN CP2-FLD(8) TO CPP-MSC-TCCT IN CPP(47).
           MOVE FRM-MSC-TCCT IN CP2-FLD(9) TO CPP-MSC-TCCT IN CPP(48).
           MOVE FRM-MSC-TCCT IN CP2-FLD(10) TO CPP-MSC-TCCT IN CPP(49).
           MOVE FRM-MSC-TCCT IN CP2-FLD(11) TO CPP-MSC-TCCT IN CPP(50).
           MOVE FRM-MSC-TCCT IN CP2-FLD(12) TO CPP-MSC-TCCT IN CPP(51).
           MOVE FRM-MSC-TCCT IN CP2-FLD(13) TO CPP-MSC-TCCT IN CPP(52).
           MOVE FRM-MSC-TCCT IN CP2-FLD(14) TO CPP-MSC-TCCT IN CPP(53).
           MOVE FRM-MSC-TCCT IN CP2-FLD(15) TO CPP-MSC-TCCT IN CPP(54).
           MOVE FRM-MSC-TCCT IN CP2-FLD(16) TO CPP-MSC-TCCT IN CPP(55).
           MOVE FRM-MSC-TCCT IN CP2-FLD(17) TO CPP-MSC-TCCT IN CPP(56).
           MOVE FRM-MSC-TCCT IN CP2-FLD(18) TO CPP-MSC-TCCT IN CPP(57).
           MOVE FRM-MSC-TCCT IN CP2-FLD(19) TO CPP-MSC-TCCT IN CPP(58).
           MOVE FRM-MSC-TCCT IN CP2-FLD(20) TO CPP-MSC-TCCT IN CPP(59).
           MOVE FRM-MSC-TCCT IN CP2-FLD(21) TO CPP-MSC-TCCT IN CPP(60).
           MOVE FRM-MSC-TCCT IN CP2-FLD(22) TO CPP-MSC-TCCT IN CPP(61).
           MOVE FRM-MSC-TCCT IN CP2-FLD(23) TO CPP-MSC-TCCT IN CPP(62).
           MOVE FRM-MSC-TCCT IN CP2-FLD(24) TO CPP-MSC-TCCT IN CPP(63).
           MOVE FRM-MSC-TCCT IN CP2-FLD(25) TO CPP-MSC-TCCT IN CPP(64).
           MOVE FRM-MSC-TCCT IN CP2-FLD(26) TO CPP-MSC-TCCT IN CPP(65).
           MOVE FRM-MSC-TCCT IN CP2-FLD(27) TO CPP-MSC-TCCT IN CPP(66).
           MOVE FRM-MSC-TCCT IN CP2-FLD(28) TO CPP-MSC-TCCT IN CPP(67).
           MOVE FRM-MSC-TCCT IN CP2-FLD(29) TO CPP-MSC-TCCT IN CPP(68).
           MOVE FRM-MSC-TCCT IN CP2-FLD(30) TO CPP-MSC-TCCT IN CPP(69).
           MOVE FRM-MSC-TCCT IN CP2-FLD(31) TO CPP-MSC-TCCT IN CPP(70).
           MOVE FRM-MSC-TCCT IN CP2-FLD(32) TO CPP-MSC-TCCT IN CPP(71).
           MOVE FRM-MSC-TCCT IN CP2-FLD(33) TO CPP-MSC-TCCT IN CPP(72).
           MOVE FRM-MSC-TCCT IN CP2-FLD(34) TO CPP-MSC-TCCT IN CPP(73).
           MOVE FRM-MSC-TCCT IN CP2-FLD(35) TO CPP-MSC-TCCT IN CPP(74).
           MOVE FRM-MSC-TCCT IN CP2-FLD(36) TO CPP-MSC-TCCT IN CPP(75).
           MOVE FRM-MSC-TCCT IN CP2-FLD(37) TO CPP-MSC-TCCT IN CPP(76).
           MOVE FRM-MSC-TCCT IN CP2-FLD(38) TO CPP-MSC-TCCT IN CPP(77).
           MOVE FRM-MSC-TCCT IN CP2-FLD(39) TO CPP-MSC-TCCT IN CPP(78).
           MOVE FRM-IND-DBHB IN CP2-FLD(1) TO CPP-IND-DBHB IN CPP(40).
           MOVE FRM-IND-DBHB IN CP2-FLD(2) TO CPP-IND-DBHB IN CPP(41).
           MOVE FRM-IND-DBHB IN CP2-FLD(3) TO CPP-IND-DBHB IN CPP(42).
           MOVE FRM-IND-DBHB IN CP2-FLD(4) TO CPP-IND-DBHB IN CPP(43).
           MOVE FRM-IND-DBHB IN CP2-FLD(5) TO CPP-IND-DBHB IN CPP(44).
           MOVE FRM-IND-DBHB IN CP2-FLD(6) TO CPP-IND-DBHB IN CPP(45).
           MOVE FRM-IND-DBHB IN CP2-FLD(7) TO CPP-IND-DBHB IN CPP(46).
           MOVE FRM-IND-DBHB IN CP2-FLD(8) TO CPP-IND-DBHB IN CPP(47).
           MOVE FRM-IND-DBHB IN CP2-FLD(9) TO CPP-IND-DBHB IN CPP(48).
           MOVE FRM-IND-DBHB IN CP2-FLD(10) TO CPP-IND-DBHB IN CPP(49).
           MOVE FRM-IND-DBHB IN CP2-FLD(11) TO CPP-IND-DBHB IN CPP(50).
           MOVE FRM-IND-DBHB IN CP2-FLD(12) TO CPP-IND-DBHB IN CPP(51).
           MOVE FRM-IND-DBHB IN CP2-FLD(13) TO CPP-IND-DBHB IN CPP(52).
           MOVE FRM-IND-DBHB IN CP2-FLD(14) TO CPP-IND-DBHB IN CPP(53).
           MOVE FRM-IND-DBHB IN CP2-FLD(15) TO CPP-IND-DBHB IN CPP(54).
           MOVE FRM-IND-DBHB IN CP2-FLD(16) TO CPP-IND-DBHB IN CPP(55).
           MOVE FRM-IND-DBHB IN CP2-FLD(17) TO CPP-IND-DBHB IN CPP(56).
           MOVE FRM-IND-DBHB IN CP2-FLD(18) TO CPP-IND-DBHB IN CPP(57).
           MOVE FRM-IND-DBHB IN CP2-FLD(19) TO CPP-IND-DBHB IN CPP(58).
           MOVE FRM-IND-DBHB IN CP2-FLD(20) TO CPP-IND-DBHB IN CPP(59).
           MOVE FRM-IND-DBHB IN CP2-FLD(21) TO CPP-IND-DBHB IN CPP(60).
           MOVE FRM-IND-DBHB IN CP2-FLD(22) TO CPP-IND-DBHB IN CPP(61).
           MOVE FRM-IND-DBHB IN CP2-FLD(23) TO CPP-IND-DBHB IN CPP(62).
           MOVE FRM-IND-DBHB IN CP2-FLD(24) TO CPP-IND-DBHB IN CPP(63).
           MOVE FRM-IND-DBHB IN CP2-FLD(25) TO CPP-IND-DBHB IN CPP(64).
           MOVE FRM-IND-DBHB IN CP2-FLD(26) TO CPP-IND-DBHB IN CPP(65).
           MOVE FRM-IND-DBHB IN CP2-FLD(27) TO CPP-IND-DBHB IN CPP(66).
           MOVE FRM-IND-DBHB IN CP2-FLD(28) TO CPP-IND-DBHB IN CPP(67).
           MOVE FRM-IND-DBHB IN CP2-FLD(29) TO CPP-IND-DBHB IN CPP(68).
           MOVE FRM-IND-DBHB IN CP2-FLD(30) TO CPP-IND-DBHB IN CPP(69).
           MOVE FRM-IND-DBHB IN CP2-FLD(31) TO CPP-IND-DBHB IN CPP(70).
           MOVE FRM-IND-DBHB IN CP2-FLD(32) TO CPP-IND-DBHB IN CPP(71).
           MOVE FRM-IND-DBHB IN CP2-FLD(33) TO CPP-IND-DBHB IN CPP(72).
           MOVE FRM-IND-DBHB IN CP2-FLD(34) TO CPP-IND-DBHB IN CPP(73).
           MOVE FRM-IND-DBHB IN CP2-FLD(35) TO CPP-IND-DBHB IN CPP(74).
           MOVE FRM-IND-DBHB IN CP2-FLD(36) TO CPP-IND-DBHB IN CPP(75).
           MOVE FRM-IND-DBHB IN CP2-FLD(37) TO CPP-IND-DBHB IN CPP(76).
           MOVE FRM-IND-DBHB IN CP2-FLD(38) TO CPP-IND-DBHB IN CPP(77).
           MOVE FRM-IND-DBHB IN CP2-FLD(39) TO CPP-IND-DBHB IN CPP(78).
           MOVE FRM-IND-TALG IN CP2-FLD(1) TO CPP-IND-TALG IN CPP(40).
           MOVE FRM-IND-TALG IN CP2-FLD(2) TO CPP-IND-TALG IN CPP(41).
           MOVE FRM-IND-TALG IN CP2-FLD(3) TO CPP-IND-TALG IN CPP(42).
           MOVE FRM-IND-TALG IN CP2-FLD(4) TO CPP-IND-TALG IN CPP(43).
           MOVE FRM-IND-TALG IN CP2-FLD(5) TO CPP-IND-TALG IN CPP(44).
           MOVE FRM-IND-TALG IN CP2-FLD(6) TO CPP-IND-TALG IN CPP(45).
           MOVE FRM-IND-TALG IN CP2-FLD(7) TO CPP-IND-TALG IN CPP(46).
           MOVE FRM-IND-TALG IN CP2-FLD(8) TO CPP-IND-TALG IN CPP(47).
           MOVE FRM-IND-TALG IN CP2-FLD(9) TO CPP-IND-TALG IN CPP(48).
           MOVE FRM-IND-TALG IN CP2-FLD(10) TO CPP-IND-TALG IN CPP(49).
           MOVE FRM-IND-TALG IN CP2-FLD(11) TO CPP-IND-TALG IN CPP(50).
           MOVE FRM-IND-TALG IN CP2-FLD(12) TO CPP-IND-TALG IN CPP(51).
           MOVE FRM-IND-TALG IN CP2-FLD(13) TO CPP-IND-TALG IN CPP(52).
           MOVE FRM-IND-TALG IN CP2-FLD(14) TO CPP-IND-TALG IN CPP(53).
           MOVE FRM-IND-TALG IN CP2-FLD(15) TO CPP-IND-TALG IN CPP(54).
           MOVE FRM-IND-TALG IN CP2-FLD(16) TO CPP-IND-TALG IN CPP(55).
           MOVE FRM-IND-TALG IN CP2-FLD(17) TO CPP-IND-TALG IN CPP(56).
           MOVE FRM-IND-TALG IN CP2-FLD(18) TO CPP-IND-TALG IN CPP(57).
           MOVE FRM-IND-TALG IN CP2-FLD(19) TO CPP-IND-TALG IN CPP(58).
           MOVE FRM-IND-TALG IN CP2-FLD(20) TO CPP-IND-TALG IN CPP(59).
           MOVE FRM-IND-TALG IN CP2-FLD(21) TO CPP-IND-TALG IN CPP(60).
           MOVE FRM-IND-TALG IN CP2-FLD(22) TO CPP-IND-TALG IN CPP(61).
           MOVE FRM-IND-TALG IN CP2-FLD(23) TO CPP-IND-TALG IN CPP(62).
           MOVE FRM-IND-TALG IN CP2-FLD(24) TO CPP-IND-TALG IN CPP(63).
           MOVE FRM-IND-TALG IN CP2-FLD(25) TO CPP-IND-TALG IN CPP(64).
           MOVE FRM-IND-TALG IN CP2-FLD(26) TO CPP-IND-TALG IN CPP(65).
           MOVE FRM-IND-TALG IN CP2-FLD(27) TO CPP-IND-TALG IN CPP(66).
           MOVE FRM-IND-TALG IN CP2-FLD(28) TO CPP-IND-TALG IN CPP(67).
           MOVE FRM-IND-TALG IN CP2-FLD(29) TO CPP-IND-TALG IN CPP(68).
           MOVE FRM-IND-TALG IN CP2-FLD(30) TO CPP-IND-TALG IN CPP(69).
           MOVE FRM-IND-TALG IN CP2-FLD(31) TO CPP-IND-TALG IN CPP(70).
           MOVE FRM-IND-TALG IN CP2-FLD(32) TO CPP-IND-TALG IN CPP(71).
           MOVE FRM-IND-TALG IN CP2-FLD(33) TO CPP-IND-TALG IN CPP(72).
           MOVE FRM-IND-TALG IN CP2-FLD(34) TO CPP-IND-TALG IN CPP(73).
           MOVE FRM-IND-TALG IN CP2-FLD(35) TO CPP-IND-TALG IN CPP(74).
           MOVE FRM-IND-TALG IN CP2-FLD(36) TO CPP-IND-TALG IN CPP(75).
           MOVE FRM-IND-TALG IN CP2-FLD(37) TO CPP-IND-TALG IN CPP(76).
           MOVE FRM-IND-TALG IN CP2-FLD(38) TO CPP-IND-TALG IN CPP(77).
           MOVE FRM-IND-TALG IN CP2-FLD(39) TO CPP-IND-TALG IN CPP(78).
      *>>>>
*% END
*% IF FIN_KEY_CPP_CPP AND PGM_BQ
      *<<<<
           MOVE CPP-COD-VCOC IN CPP-FLD TO FRM-COD-VCOC IN CP2-FLD.
           MOVE CPP-COD-TOOC IN CPP-FLD TO FRM-COD-TOOC IN CP2-FLD.
           MOVE CPP-COD-AOOC IN CPP-FLD TO FRM-COD-AOOC IN CP2-FLD.
           MOVE CPP-COD-MVTO IN CPP-FLD TO FRM-COD-MVTO IN CP2-FLD.
           MOVE CPP-IND-SCRT IN CPP-FLD TO FRM-IND-SCRT IN CP2-FLD.
           MOVE CPP-IND-SCTB IN CPP-FLD TO FRM-IND-SCTB IN CP2-FLD.
      *BUS-TAB busca glosa de codigo en tabla
           IF FRM-COD-VCOC IN CP2-FLD > SPACES
               MOVE 'TAB' TO TAB-COD-SIST
               MOVE 'VLR ' TO TAB-COD-TTAB IN TAB
               MOVE FRM-COD-VCOC IN CP2-FLD TO TAB-COD-CTAB IN TAB
               PERFORM BUS-TAB
               MOVE TAB-GLS-DESC IN TAB TO
                    FRM-GLS-VCOC IN CP2-FLD
           ELSE
               MOVE SPACES TO FRM-GLS-VCOC IN CP2-FLD.
      *BUS-TAB busca glosa de codigo en tabla
           IF FRM-COD-TOOC IN CP2-FLD > SPACES
               MOVE 'TAB' TO TAB-COD-SIST
               MOVE 'TIO ' TO TAB-COD-TTAB IN TAB
               MOVE FRM-COD-TOOC IN CP2-FLD TO TAB-COD-CTAB IN TAB
               PERFORM BUS-TAB
               MOVE TAB-GLS-DESC IN TAB TO
                    FRM-GLS-TOOC IN CP2-FLD
           ELSE
               MOVE SPACES TO FRM-GLS-TOOC IN CP2-FLD.
      *BUS-TAB busca glosa de codigo en tabla
           IF FRM-COD-MVTO IN CP2-FLD > SPACES
               MOVE 'COL' TO TAB-COD-SIST
               MOVE 'MVT ' TO TAB-COD-TTAB IN TAB
               MOVE FRM-COD-MVTO IN CP2-FLD TO TAB-COD-CTAB IN TAB
               PERFORM BUS-TAB
               MOVE TAB-GLS-DESC IN TAB TO
                    FRM-GLS-MVTO IN CP2-FLD
           ELSE
               MOVE SPACES TO FRM-GLS-MVTO IN CP2-FLD.
      *BUS-MSC busca glosa de miscelaneo en tabla
           IF FRM-IND-SCRT IN CP2-FLD > SPACES
               MOVE 'COL' TO MSC-COD-SIST
               MOVE 'SCRT' TO MSC-COD-TMSC IN MSC
               MOVE FRM-IND-SCRT IN CP2-FLD TO MSC-COD-CMSC IN MSC
               PERFORM BUS-MSC
               MOVE MSC-GLS-DESC IN MSC TO
                    FRM-GLS-SCRT IN CP2-FLD
           ELSE
               MOVE SPACES TO
                    FRM-GLS-SCRT IN CP2-FLD.
      *BUS-MSC busca glosa de miscelaneo en tabla
           IF FRM-IND-SCTB IN CP2-FLD > SPACES
               MOVE 'COL' TO MSC-COD-SIST
               MOVE 'SCTB' TO MSC-COD-TMSC IN MSC
               MOVE FRM-IND-SCTB IN CP2-FLD TO MSC-COD-CMSC IN MSC
               PERFORM BUS-MSC
               MOVE MSC-GLS-DESC IN MSC TO
                    FRM-GLS-SCTB IN CP2-FLD
           ELSE
               MOVE SPACES TO
                    FRM-GLS-SCTB IN CP2-FLD.

           MOVE 'COL' TO TAB-COD-SIST.
           MOVE 'AUX' TO TAB-COD-TTAB IN TAB.
           MOVE FRM-COD-TOOC IN CP2-FLD TO WSS-COD-TOOC IN WSS-VARI.
           MOVE FRM-COD-AOOC IN CP2-FLD TO WSS-COD-AOOC IN WSS-VARI.
           MOVE WSS-COD-CAUX IN WSS-VARI TO TAB-COD-CTAB IN TAB.
           PERFORM VAL-COD.
           IF MSG-COD-MENS NOT = 'COD    NEX' AND
              FRM-COD-AOOC IN CP2-FLD > SPACES
               MOVE TAB-GLS-DESC IN TAB TO FRM-GLS-AOOC IN CP2-FLD
           ELSE
               MOVE SPACES TO FRM-GLS-AOOC IN CP2-FLD.
      *>>>>
*% END
*% IF FIN_SCR_CLRA_CPP
      *<<<< FIN_SCR_CLRA_PO1 
           PERFORM SCR-CLRA-CP2.                                        
      *>>>>
*% END
*% IF CPP_COD_VCOC
      *<<<< CPP_COD_VCOC
      *MVG-INI 26-JUN-2019 IGUALACION COL
      ** Cuando se usa el comando COS, se permite que el campo VCOD
      ** sea vacio.  
      **ISP-INI 13-NOV-2012  - 1205_02 Creacion de Productos de Credito
      *     IF SCR-CMND = 'COS' AND
      *        CPP-COD-VCOC IN CPP-FLD NOT > SPACES
      *          GO TO FIN-VAL-CPP-COD-VCOC.
      **ISP-FIN 13-NOV-2012  - 1205_02 Creacion de Productos de Credito
      *MVG-FIN 26-JUN-2019 IGUALACION COL
           IF CPP-COD-VCOC IN CPP-FLD = '*     '
               MOVE SPACES TO FRM-GLS-VCOC IN CPP-FLD
               GO TO FIN-VAL-CPP-COD-VCOC.
      *>>>>
*% END
*% IF CPP_COD_AOOC
      *<<<< INI_CPP_COD_AOOC
      *MVG-INI 26-JUN-2019 IGUALACION COL
      ** Cuando se usa el comando COS, permite que en el codigo AOOC
      ** quede vacio 
      **ISP-INI 13-NOV-2012  - 1205_02 Creacion de Productos de Credito
      *     IF SCR-CMND = 'COS' AND
      *        CPP-COD-AOOC IN CPP-FLD NOT > SPACES
      *          GO TO FIN-VAL-CPP-COD-AOOC.
      **ISP-FIN 13-NOV-2012  - 1205_02 Creacion de Productos de Credito   
      *MVG-FIN 26-JUN-2019 IGUALACION COL
              IF CPP-COD-AOOC IN CPP-FLD = '*  '
               MOVE SPACES TO FRM-GLS-AOOC IN CPP-FLD
               GO TO FIN-VAL-CPP-COD-AOOC.
      *>>>> INI_CPP_COD_AOOC
*% END
*% IF CPP_COD_MVTO
      *<<<< CPP_COD_MVTO
      *MVG-INI 26-JUN-2019 IGUALACION COL
      ** Se salta la validacion del campo MVTO cuando este esta vacio,
      ** solo cuando cuando se trabaja con el comando COS
      **ISP-INI 13-NOV-2012  - 1205_02 Creacion de Productos de Credito
      *     IF SCR-CMND = 'COS' AND
      *        CPP-COD-MVTO IN CPP-FLD NOT > SPACES
      *          GO TO FIN-VAL-CPP-COD-MVTO.
      **ISP-FIN 13-NOV-2012  - 1205_02 Creacion de Productos de Credito
      *MVG-FIN 26-JUN-2019 IGUALACION COL
      *>>>> CPP_COD_MVTO
*% END
*% IF CPP_COD_TOOC
      *<<<< CPP_COD_TOOC
      *MVG-INI 26-JUN-2019 IGUALACION COL
      ** Al ocupar el comando COS, se salta la validacion del codigo TOOC
      ** permitiendo no ingresar ningun codigo (campo vacio)
      **ISP-INI 13-NOV-2012  - 1205_02 Creacion de Productos de Credito
      *     IF SCR-CMND = 'COS' AND
      *        CPP-COD-TOOC IN CPP-FLD NOT > SPACES
      *          GO TO FIN-VAL-CPP-COD-TOOC.
      **ISP-FIN 13-NOV-2012  - 1205_02 Creacion de Productos de Credito
      *MVG-FIN 26-JUN-2019 IGUALACION COL
      *>>>> CPP_COD_TOOC
*% END
*% IF INI_VAL_CON_KEY_CPP
      *<<<< INI_VAL_CON_KEY_CPP
      *MVG-INI 26-JUN-2019 IGUALACION COL
      **ISP-INI 13-NOV-2012  - 1205_02 Creacion de Productos de Credito
      ** Cuando se usa el comando COS, se salta la validacion de la 
      ** consistencia de las llaves
      *     IF SCR-CMND = 'COS'
      *          GO TO FIN-VAL-CON-KEY-CPP.
      **ISP-FIN 13-NOV-2012  - 1205_02 Creacion de Productos de Credito
      *MVG-FIN 26-JUN-2019 IGUALACION COL
      *>>>> INI_VAL_CON_KEY_CPP
*% END
*% IF INI_VAL_CON_IKY_CPP
      *<<<< INI_VAL_CON_IKY_CPP
      *MVG-INI 26-JUN-2019 IGUALACION COL
      **ISP-INI 13-NOV-2012  - 1205_02 Creacion de Productos de Credito
      ** Cuando se usa el comando COS, se salta la validacion de la
      ** consistencia de las llaves IKEY. 
      *     IF SCR-CMND = 'COS'
      *          GO TO FIN-VAL-CON-IKY-CPP.
      **ISP-FIN 13-NOV-2012  - 1205_02 Creacion de Productos de Credito
      *MVG-FIN 26-JUN-2019 IGUALACION COL
      *>>>> INI_VAL_CON_IKY_CPP 
*% END
*% IF CPP_COD_AOOC
      *<<<< CPP_COD_AOOC
      *VAL-COD Valida codigo de tabla
           MOVE 'COL' TO TAB-COD-SIST.
           MOVE 'AUX' TO TAB-COD-TTAB IN TAB.
           MOVE CPP-COD-TOOC IN CPP-FLD TO WSS-COD-TOOC IN WSS-VARI.
           MOVE CPP-COD-AOOC IN CPP-FLD TO WSS-COD-AOOC IN WSS-VARI.
           MOVE WSS-COD-CAUX IN WSS-VARI TO TAB-COD-CTAB IN TAB.
           PERFORM VAL-COD.
           IF MSG-COD-MENS NOT = 'COD    NEX' AND
              CPP-COD-AOOC IN CPP-FLD > SPACES
               MOVE TAB-GLS-DESC IN TAB TO FRM-GLS-AOOC IN CPP-FLD
           ELSE
               MOVE SPACES TO FRM-GLS-AOOC IN CPP-FLD.
      *>>>>
*% END
*% IF CPP_IND_TALG
      *<<<< INI_CPP_IND_TALG
           IF CPP-IND-TALG IN CPP-FLD(FRM-IFLD) NOT > SPACES
               GO TO FIN-VAL-CPP-IND-TALG.
      *>>>>
*% END
*% IF FIN_CPP_IND_TALG
      *<<<< FIN_CPP_IND_TALG
      *JSS
           IF FRM-SUAR = FRM-SUAR-MAL
               GO TO FIN-VAL-CPP-IND-TALG.
           MOVE TAB-GLS-DATA IN TAB TO WSS-GLS-DATA IN WSS-VARI.
      * Verificar que el codigo de movimiento sea valido para el
      * tipo de algoritmo especificado, para eso busca que el codigo
      * de movimiento se encuentre en los datos adicionales de la tabla
      * que contiene el codigo de algoritmo (posicion 11 hasta la 58)
           MOVE  0  TO WSS-IND-TALG IN WSS-VARI.
           PERFORM VAL-IND-TALG VARYING WSS-IND FROM 1 BY 1 UNTIL
                         WSS-IND IN WSS-VARI > 15 OR
                         WSS-IND-TALG IN WSS-VARI = 1.
           IF WSS-IND-TALG IN WSS-VARI = 1
               GO TO FIN-VAL-CPP-IND-TALG.
      * Busca mensaje en tabla cuando Tipo Algoritmo no sea valido
           MOVE 'COL'          TO MSG-COD-SIST.
           MOVE 'INDTALGNOVAL' TO MSG-COD-MENS.
           PERFORM GET-MSG.
           MOVE MSG-GLS-DESC            TO FRM-MEN1.
           MOVE CPP-COD-MVTO IN CPP-FLD TO FRM-MEN2.
           MOVE FRM-SUAR-MAL TO FRM-SUAR.
      *JSS
      *>>>>
*% END
*% IF VAL_CON_FLD_CPP
      *<<<< VAL_CON_FLD_CPP
      *HPM ini 3-JUN-1994
           MOVE 'N' TO WSS-IND-BLK.
      *HPM fin 3-JUN-1994

      *JCT-INI 11-01-2012 VALIDACION Y GENERACION AUTOMATIZADA DE PRODUC
           MOVE ZEROES    TO WSS-MOV-DEB
                             WSS-MOV-HAB.
      *JCT-FIN 11-01-2012

           PERFORM VAL-CON VARYING FRM-IFLD FROM 1 BY 1
               UNTIL FRM-SUAR = FRM-SUAR-MAL OR FRM-IFLD > 39.

           IF ( CPP-MSC-TCCT IN CPP-FLD(39) NOT > SPACES AND
                CPP-IND-DBHB IN CPP-FLD(39) NOT > SPACES AND
                CPP-IND-TALG IN CPP-FLD(39) NOT > SPACES AND
                FRM-MSC-TCCT IN CP2-FLD(01)  > SPACES AND
                FRM-IND-DBHB IN CP2-FLD(01)  > SPACES AND
                FRM-IND-TALG IN CP2-FLD(01)  > SPACES )
                  MOVE 'COL' TO MSG-COD-SIST                            
                  MOVE 'OCCFULLCONT' TO MSG-COD-MENS                    
                  PERFORM GET-MSG                                       
                  MOVE MSG-GLS-DESC  TO FRM-MENS                        
                  MOVE FRM-SUAR-MAL  TO FRM-SUAR                        
                  GO TO FIN-VAL-CON-FLD-CPP.                            

      *JCT-INI 11-01-2012 VALIDACION Y GENERACION AUTOMATIZADA DE PRODUC
           IF WSS-MOV-DEB = 0 AND WSS-MOV-HAB = 0
              MOVE 'COL' TO MSG-COD-SIST
              MOVE 'CPPSINMOV  ' TO MSG-COD-MENS
              PERFORM GET-MSG
              MOVE MSG-GLS-DESC  TO FRM-MENS
              MOVE FRM-SUAR-MAL  TO FRM-SUAR
              GO TO FIN-VAL-CON-FLD-CPP.

           IF (WSS-MOV-DEB = 0 AND WSS-MOV-HAB > 0) OR
              (WSS-MOV-DEB > 0 AND WSS-MOV-HAB = 0)
              MOVE 'COL' TO MSG-COD-SIST
              MOVE 'CPPSINDOH  ' TO MSG-COD-MENS
              PERFORM GET-MSG
              MOVE MSG-GLS-DESC  TO FRM-MENS
              MOVE FRM-SUAR-MAL  TO FRM-SUAR
              GO TO FIN-VAL-CON-FLD-CPP.

      *    VALIDA QUE MOVIENTOS PARA UNA CPP NO ESTEN DUPLICADOS
           PERFORM VAL-MOV-DUP.
           IF WSS-CPP-ERROR = 'S'
              MOVE 'COL' TO MSG-COD-SIST
              MOVE 'CPP   MOVDUP' TO MSG-COD-MENS
              PERFORM GET-MSG
              MOVE MSG-GLS-DESC  TO FRM-MENS
              MOVE FRM-SUAR-MAL  TO FRM-SUAR
              GO TO FIN-VAL-CON-FLD-CPP.
      *JCT-FIN 11-01-2012
      *>>>>
*% END
*% IF FIN_VAL_IKY_CPP
      *<<<< FIN_VAL_IKY_CPP
      *MVG-INI 26-JUN-2019 IGUALACION COL
      ** OGB-ini 23-11-2012
      ** Cuando se ingresa el comando COS, se salta la validacion
      ** de las llaves IKEY.
      **ISP-INI 13-NOV-2012  - 1205_02 Creacion de Productos de Credito
      *     IF SCR-CMND = 'COS'
      *          GO TO FIN-VAL-IKY-CPP.
      **ISP-FIN 13-NOV-2012  - 1205_02 Creacion de Productos de Credito
      *
      ** OGB-fin 23-11-2012
      *MVG-FIN 26-JUN-2019 IGUALACION COL
      *JCT-INI 11-01-2012 VALIDACION Y GENERACION AUTOMATIZADA DE PRODUC
           PERFORM VAL-REG-POC.
           IF CPP-IND-SCTB IN CPP-FLD = 'VCD'
              MOVE 'VCD' TO WSS-COD-TTAB IN WSS-VARI
              PERFORM VAL-COD-PROD.
           IF CPP-IND-SCTB IN CPP-FLD = 'CAS'
              MOVE 'CAS' TO WSS-COD-TTAB IN WSS-VARI
              PERFORM VAL-COD-PROD.
      *JCT-FIN 11-01-2012
      *>>>>
*% END
*% IF EOF AND PGM_BU
      *<<<< EOF
      *DAD
       VAL-IND-TALG SECTION.
       INI-VAL-IND-TALG.
           IF CPP-COD-MVTO IN CPP-FLD = WSS-COD-MVTO IN
                                                      WSS-VARI(WSS-IND)
               MOVE  1 TO WSS-IND-TALG IN WSS-VARI.
       FIN-VAL-IND-TALG.
           EXIT.
      *DAD
*% IF PGM_BU
       VAL-CON SECTION.
       INI-VAL-CON.
           IF ( CPP-MSC-TCCT IN CPP-FLD(FRM-IFLD) > SPACES AND
                CPP-IND-DBHB IN CPP-FLD(FRM-IFLD) > SPACES AND
                CPP-IND-TALG IN CPP-FLD(FRM-IFLD) > SPACES )

      *JCT-INI 11-01-2012 VALIDACION Y GENERACION AUTOMATIZADA DE PRODUC
      *---      VALIDA CANTIDAD DE MOVIMIENTOS INGRESADOS PARA CPP
                PERFORM VAL-CAN-MOV
      *JCT-FIN 11-01-2012

      *HPM ini 3-JUN-1994
               IF WSS-IND-BLK = 'S'
                   MOVE 'COL' TO MSG-COD-SIST
                   MOVE 'OCCFULLCONT' TO MSG-COD-MENS
                   PERFORM GET-MSG
                   MOVE MSG-GLS-DESC  TO FRM-MENS
                   MOVE FRM-SUAR-MAL  TO FRM-SUAR
                   GO TO FIN-VAL-CON
               ELSE
      *HPM fin 3-JUN-1994
               GO TO FIN-VAL-CON.
           IF ( CPP-MSC-TCCT IN CPP-FLD(FRM-IFLD) NOT > SPACES AND
                CPP-IND-DBHB IN CPP-FLD(FRM-IFLD) NOT > SPACES AND
                CPP-IND-TALG IN CPP-FLD(FRM-IFLD) NOT > SPACES )
      *HPM ini 3-JUN-1994
               MOVE 'S' TO WSS-IND-BLK
      *HPM fin 3-JUN-1994
               GO TO FIN-VAL-CON.
      *GET-MSG Busca mensaje en tabla
           MOVE 'COL' TO MSG-COD-SIST.
           MOVE 'ALLFULLORCLR' TO MSG-COD-MENS.
           PERFORM GET-MSG.
           MOVE MSG-GLS-DESC TO FRM-MEN1.
           MOVE FRM-IFLD     TO WSS-POS.
           MOVE WSS-POS      TO FRM-MEN2.
           MOVE FRM-SUAR-MAL TO FRM-SUAR.
       FIN-VAL-CON.
           EXIT.
      *>>>>
*% END
*% END
*% IF CPP_IND_SCTB
      *<<<< CPP_IND_SCTB
      *MVG-INI 26-JUN-2019 IGUALACION COL
      **ISP-INI 13-NOV-2012  - 1205_02 Creacion de Productos de Credito
      ** Cuando se usa el comando COS, permite que no se valide el campo
      ** IND-SCTB.
      *     IF SCR-CMND = 'COS' AND
      *        CPP-IND-SCTB IN CPP-FLD NOT > SPACES
      *          GO TO FIN-VAL-CPP-IND-SCTB.
      **ISP-FIN 13-NOV-2012  - 1205_02 Creacion de Productos de Credito 
      *MVG-FIN 26-JUN-2019 IGUALACION COL
      *<<<< 
           IF SCR-INST = SCR-INST-GFL AND SCR-CMND = 'COP'
               PERFORM KEY-ALL-CPP
               MOVE FIO-GET-KEY TO FIO-CMND
               PERFORM CHK-DUPL.
      *>>>> CPP_IND_SCTB
*% END
*% IF EOF AND PGM_BQ
      *<<<< EOF
       CHK-DUPL SECTION.
       INI-CHK-DUPL.
           PERFORM COL-FIO-CPP.
           IF FIO-STAT-OKS
               MOVE 'DAP' TO MSG-COD-SIST
               MOVE 'KEY    DUPLI' TO MSG-COD-MENS
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS
               MOVE FRM-SUAR-MAL TO FRM-SUAR.
       FIN-CHK-DUPL.
           EXIT.
      *>>>>
*% END 
