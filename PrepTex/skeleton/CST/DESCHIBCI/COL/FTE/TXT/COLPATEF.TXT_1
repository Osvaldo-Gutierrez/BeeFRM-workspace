*%! Codigo adicional para archivo
*% HDR_CST = FALSE
*% gnstca  = 3000
*% PGM_PTC = TRUE
*% NO_TIENE_TIMESTAMP = TRUE
*% IF FIN_SCR_VARI
      *<<<< FIN_SCR_VARI
      *ISP DEBE QUEDAR PRIMERO QUE  LABEL FIN_SCR_VARI DE PFSALLF78
       COPY COLWGENG.
      *    Codigo Cancelacion
           03  SCR-MSC-CANC.
      *        Tipo Cancelacion
               05  SCR-MSC-TCAN                    PIC X(01).
      *        Forma Cancelacion
               05  SCR-MSC-FCAN                    PIC X(01).
      *        Entidad Cancelacion
               05  SCR-MSC-ECAN                    PIC X(01).
      *    Codigo externo de cancelacion
           03  SCR-MSC-CCNC.
      *        Tipo Cancelacion
               05  SCR-MSC-TCNC                    PIC X(01).
      *        Forma Cancelacion
               05  SCR-MSC-FCNC                    PIC X(01).
      *        Entidad Cancelacion
               05  SCR-MSC-ECNC                    PIC X(01).

      * ISP ES NECESARIO GUARDAR RQA CUANDO SE MUEVE POR PFS
      
       COPY GNSWGRQA REPLACING
                     ==01  ADR-REQA== BY ==02  SCR-ICG-REQA==.
           02 SCR-KEY-IICG                     PIC X(03).
       COPY GNSWGRQA REPLACING
                     ==01  ADR-REQA== BY ==02  SCR-NUL-REQA==.
           02 SCR-KEY-INUL                     PIC X(03).
      
      *>>>>
*% END
*% TCA = 3000
*% RA1 = "ICG"
*% RA2 = "NUL"
*% FRM = "TEF"
*% NRA = 2
*%! INCLUDE 'PFSALLF78'
*% IF WSS
      *<<<< WSS
      *PTC-INI:
       COPY COLMXW04.
       COPY COLMXW05.
      *PTC-FIN:
      *ALD
       COPY COLBRPOC.
      *
       COPY COLBRRCV.
       COPY COLBRVEN.
       COPY COLBRDLC.
       COPY COLBROPC.
       COPY COLBRCAN.
       COPY TABBRUSR.
       COPY TABBRVLR.
       COPY GNSWGCPT.

      *COPY COLWGSTO.

      *ALD
       01  WSS-VARI.
           03  PGM-STAT-POC             VALUE '23'      PIC X(02).              
                 88 PGM-STAT-POC-OKS    VALUE '00'.                             
                 88 PGM-STAT-POC-NUL    VALUE '  '.                             
           03  WSS-MEN2.
               05  FILLER               VALUE SPACES    PIC X(01).
               05  WSS-NUM-VAL1-EDT                     PIC ---.
               05  FILLER               VALUE SPACES    PIC X(01).
               05  WSS-IND-DMA1                         PIC X(01).
               05  FILLER               VALUE SPACES    PIC X(01).
               05  WSS-GLS-GUI2                         PIC X(01).
               05  FILLER               VALUE SPACES    PIC X(01).
               05  WSS-NUM-VAL2-EDT                     PIC ---.
               05  FILLER               VALUE SPACES    PIC X(01).
               05  WSS-IND-DMA2                         PIC X(01).
           03  WSS-NUM-IVCT VALUE ZEROES                PIC 9(03).
      *AAA
           03  WSS-CPT-NOMB.
               05 WSS-CPT-MENS                          PIC X(12).
               05 WSS-CPT-DESC                          PIC X(40).
               05 WSS-CPT-DATA                          PIC X(60).
           03  WSS-CPT-NOMB-R  REDEFINES  WSS-CPT-NOMB  PIC X(92).
      *
      *>>>>
*% END
*% IF WSS_DTC
      *<<<<
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-POC-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-RCV-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-VEN-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-DLC-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-OPC-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-CAN-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-USR-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-VLR-REQA==.

      * ISP INI  28-JAN-2004 13:37:42                                   
       77  WSS-LOGN     VALUE 'N'                PIC X(01).             
       77  WSS-DBNM     VALUE ZEROES             PIC 9(03).             
       77  WSS-DBIM     VALUE ZEROES             PIC 9(02).             
       77  WSS-DBNP     VALUE ZEROES             PIC 9(03).             
       77  WSS-DBIP     VALUE ZEROES             PIC 9(02).             
       77  WSS-BUS-BDP  VALUE 'N'                PIC X(01).             
       77  WSS-ENC-IOPE VALUE 'N'                PIC X(01).             
      * ISP FIN  28-JAN-2004 13:37:42         

      *>>>>
*% END
*% IF INI_FND_KEY
      *<<<< INI_FND_KEY
      * ISP INI  28-JAN-2004 13:37:42                                   
           IF SCR-OFRM-SRV AND                                          
              SCR-CMND = 'CON'                                          
                PERFORM BUSCA-DBIM-DBIP.                                
      * ISP FIN  28-JAN-2004 13:37:42                                   
      * ISP INI  28-JAN-2004 13:37:42                                   
           IF SCR-OFRM-SRV AND                                          
              ( ICG-CAI-IOPC IN TEF-FLD > SPACES OR                     
                ICG-IIC-IOPC IN TEF-FLD > ZEROES ) AND                  
              SCR-CMND = 'CON'                                          
                 MOVE ICG-CAI-IOPC IN TEF-FLD TO                        
                      OPC-CAI-IOPC IN OPC                               
                 MOVE ICG-IIC-IOPC IN TEF-FLD TO                        
                      OPC-IIC-IOPC IN OPC                               
                 MOVE FIO-GET-KEY TO FIO-CMND                           
                 PERFORM COL-FIO-OPC                                    
                 IF NOT FIO-STAT-OKS                                    
                 IF WSS-BUS-BDP = 'N'                                   
                  MOVE 'S' TO WSS-BUS-BDP                               
                  IF WSS-DBIM > ZEROES AND                              
                     WSS-DBIP > ZEROES                                  
                       PERFORM INV-BD.                                  
      * ISP FIN  28-JAN-2004 13:37:42            
           PERFORM KEY-ALL-TEF.
           IF FRM-FFLD = FRM-FFLD-PF7 OR FRM-FFLD-PF8
               PERFORM LEE-NXT-PRV
               IF FIO-STAT-OKS
                   PERFORM SCR-CLRA-TEF
                   GO TO CON-FND-KEY
               ELSE
                   MOVE SPACES TO PGM-STAT
                   IF FRM-FFLD = FRM-FFLD-PF7
                       MOVE 'COL' TO MSG-COD-SIST
                       MOVE 'ICG    NOPRV' TO MSG-COD-MENS
                       PERFORM GET-MSG
                       MOVE MSG-GLS-DESC TO FRM-MENS
                       MOVE '00' TO FIO-STAT
                       MOVE SCR-STAT-CON TO SCR-STAT
                       GO TO FIN-FND-KEY
                   ELSE
                       MOVE 'COL' TO MSG-COD-SIST
                       MOVE 'ICG    NONXT' TO MSG-COD-MENS
                       PERFORM GET-MSG
                       MOVE MSG-GLS-DESC TO FRM-MENS
                       MOVE '00' TO FIO-STAT
                       MOVE SCR-STAT-CON TO SCR-STAT
                       GO TO FIN-FND-KEY.
           IF ICG-CAI-IOPC IN TEF-FLD NOT > SPACES
               MOVE SPACES TO ICG-CAI-IOPC IN TEF-FLD.
      *>>>>
*% END
*% IF FND_KEY
      *<<<< FND_KEY
      *     MOVE FIO-GET-NLS TO FIO-CMND.
      *     PERFORM COL-FIO-ICG.
      *     IF FIO-STAT-OKS
      *         IF ICG-CAI-IOPC IN TEF-FLD = ICG-CAI-IOPC IN ICG AND
      *            ICG-IIC-IOPC IN TEF-FLD = ICG-IIC-IOPC IN ICG AND
      *            ICG-NUM-ICAN IN TEF-FLD = ICG-NUM-ICAN IN ICG AND
      *            ICG-CAI-IOPV IN TEF-FLD = ICG-CAI-IOPV IN ICG AND
      *            ICG-IIC-IOPV IN TEF-FLD = ICG-IIC-IOPV IN ICG AND
      *            ICG-NUM-IVCT IN TEF-FLD = ICG-NUM-IVCT IN ICG AND
      *            ICG-IND-TTAS IN TEF-FLD = ICG-IND-TTAS IN ICG AND
      *            ICG-FEC-FINI IN TEF-FLD = ICG-FEC-FINI IN ICG
      *             MOVE '00' TO FIO-STAT
      *         ELSE
      *             PERFORM KEY-ALL-TEF
      *             MOVE '23' TO FIO-STAT.
      *     IF FIO-STAT-OKS
      *         IF ICG-CAI-IOPC IN TEF-FLD NOT = ICG-CAI-IOPC IN ICG
      *              MOVE '1' TO MSG-COD-MENS
      *              MOVE ICG-CAI-IOPC IN TEF-FLD TO MSG-GLS-DESC
      *             MOVE ICG-CAI-IOPC IN ICG     TO MSG-GLS-DATA
      *              PERFORM SET-MSG
      *              GO TO FIN-FND-KEY
      *         ELSE
      *         IF ICG-IIC-IOPC IN TEF-FLD NOT = ICG-IIC-IOPC IN ICG
      *              MOVE '2' TO MSG-COD-MENS
      *              MOVE ICG-IIC-IOPC IN TEF-FLD TO MSG-GLS-DESC
      *              MOVE ICG-IIC-IOPC IN ICG     TO MSG-GLS-DATA
      *              PERFORM SET-MSG
      *              GO TO FIN-FND-KEY
      *         ELSE
      *         IF ICG-NUM-ICAN IN TEF-FLD NOT = ICG-NUM-ICAN IN ICG
      *              MOVE '3' TO MSG-COD-MENS
      *              MOVE ICG-NUM-ICAN IN TEF-FLD TO MSG-GLS-DESC
      *              MOVE ICG-NUM-ICAN IN ICG     TO MSG-GLS-DATA
      *              PERFORM SET-MSG
      *             GO TO FIN-FND-KEY
      *         ELSE
      *         IF ICG-CAI-IOPV IN TEF-FLD NOT = ICG-CAI-IOPV IN ICG
      *              MOVE '4' TO MSG-COD-MENS
      *              MOVE ICG-CAI-IOPV IN TEF-FLD TO MSG-GLS-DESC
      *              MOVE ICG-CAI-IOPV IN ICG     TO MSG-GLS-DATA
      *              PERFORM SET-MSG
      *              GO TO FIN-FND-KEY
      *         ELSE
      *         IF ICG-IIC-IOPV IN TEF-FLD = ICG-IIC-IOPV IN ICG
      *              MOVE '5' TO MSG-COD-MENS
      *              MOVE ICG-IIC-IOPC IN TEF-FLD TO MSG-GLS-DESC
      *              MOVE ICG-IIC-IOPC IN ICG     TO MSG-GLS-DATA
      *              PERFORM SET-MSG
      *              GO TO FIN-FND-KEY
      *               IF ICG-NUM-IVCT IN TEF-FLD = ICG-NUM-IVCT IN ICG
      *         ELSE
      *             MOVE '00' TO FIO-STAT.
      *         ELSE
      *             PERFORM KEY-ALL-TEF
      *             MOVE '23' TO FIO-STAT.
      *     MOVE FIO-STAT TO PGM-STAT-ICG.
      *     GO TO CON-FND-KEY.
      *>>>>
*% END
*% IF FIN_FND_KEY
      *<<<< FIN_FND_KEY
           IF NOT FIO-STAT-OKS AND SCR-CMND = 'CON'
               MOVE 'COL' TO MSG-COD-SIST
               MOVE 'ICG    NEX  ' TO MSG-COD-MENS
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS
               MOVE '00' TO FIO-STAT
               MOVE SCR-STAT-CON TO SCR-STAT           
               GO TO FIN-FND-KEY.             
       CON-FND-KEY.
           MOVE ICG-CAI-IOPC IN ICG TO OPC-CAI-IOPC IN OPC.
           MOVE ICG-IIC-IOPC IN ICG TO OPC-IIC-IOPC IN OPC.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM COL-FIO-OPC.
           MOVE FIO-STAT TO PGM-STAT-OPC.
           IF NOT FIO-STAT-OKS
               MOVE 'COL' TO MSG-COD-SIST
               MOVE 'CICIOPCNOOPC' TO MSG-COD-MENS
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS
               MOVE '00' TO FIO-STAT
               MOVE SCR-STAT-CON TO SCR-STAT
               GO TO FIN-FND-KEY
           ELSE
               PERFORM PUT-OPC-TEF.
      *ALD
           MOVE OPC-COD-VCOC IN OPC TO POC-COD-VCOC IN POC.
           MOVE OPC-COD-TOOC IN OPC TO POC-COD-TOOC IN POC.
           MOVE OPC-COD-AOOC IN OPC TO POC-COD-AOOC IN POC.
           MOVE ZEROES              TO POC-NUM-IPOC IN POC.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM COL-FIO-POC.
           MOVE FIO-STAT TO PGM-STAT-POC.
           IF NOT FIO-STAT-OKS
               MOVE 'COL' TO MSG-COD-SIST
               MOVE 'POC    NEX  ' TO MSG-COD-MENS
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS
               MOVE '00' TO FIO-STAT
               MOVE SCR-STAT-CON TO SCR-STAT
               GO TO FIN-FND-KEY.
      *

           IF ICG-NUM-ICAN IN ICG NOT > ZEROES
               MOVE ZEROES TO ICG-NUM-IVCT IN TEF-FLD
               MOVE ZEROES TO WSS-NUM-IVCT
               GO TO ICG-OPC.

           IF ICG-IIC-IOPV IN ICG NOT > ZEROES
               MOVE ZEROES TO ICG-NUM-IVCT IN TEF-FLD
               MOVE ZEROES TO WSS-NUM-IVCT
               PERFORM GET-DLC
               IF MSG-COD-MENS > SPACES
                   GO TO FIN-FND-KEY
               ELSE
                   NEXT SENTENCE
           ELSE
               PERFORM GET-CAN
               IF MSG-COD-MENS = 'CICIOPCNOCAN'
                   GO TO FIN-FND-KEY
               ELSE
                   PERFORM GET-RCV
                   IF MSG-COD-MENS NOT > SPACES
                       PERFORM SET-IVCT
                       PERFORM GET-VEN
                       IF MSG-COD-MENS > SPACES
                           GO TO FIN-FND-KEY.

       ICG-OPC.

           MOVE PGM-STAT-ICG TO FIO-STAT.
           IF FIO-STAT-OKS
               MOVE ADR-ICG-REQA TO SCR-ICG-REQA.
           IF ICG-NUM-ICAN IN ICG > ZEROES AND
              ICG-IIC-IOPV IN ICG > ZEROES
                GO TO FIN-FND-KEY.

      *PTC-INI (RRM) 26-NOV-2002                                        
           IF FIO-STAT = FIO-STAT-NEX                                   
               MOVE 'S' TO SCR-IERR.                                     
      *PTC-FIN (RRM) 26-NOV-2002              
     
      *ALD
      *    IF NOT ( OPC-MSC-STAT IN OPC = 'L' OR 'A' )

*% IF NOT PGM_PER
      *    IF OPC-MSC-STAT IN OPC NOT = 'A' AND
      *       OPC-MSC-STAT IN OPC NOT = 'D'

      * RBG INI 16-APR-1996 
           IF OPC-APROBADA-APR
              MOVE 'OPC    APRYA' TO MSG-COD-MENS
              GO TO SIG-FND-KEY.
      * RBG FIN 16-APR-1996 

      *    IF ( NOT OPC-ACTIVADA ) AND ( NOT OPC-DESACTIVADA )
      *        GO TO FIN-FND-KEY.
*% END
*% IF PGM_PER
      *    IF OPC-MSC-STAT IN OPC NOT = 'A' AND
      *       OPC-MSC-STAT IN OPC NOT = 'D' AND
      *       OPC-MSC-STAT IN OPC NOT = 'F'
           IF ( NOT OPC-ACTIVADA ) AND ( NOT OPC-DESACTIVADA )
                                   AND ( NOT OPC-APROBADA-CTC )
               GO TO FIN-FND-KEY.
*% END
           IF OPC-MSC-STAT IN OPC NOT = 'A' AND
              OPC-MSC-STAT IN OPC NOT = 'D'
               GO TO FIN-FND-KEY.
      * PTC-INI-AUT
           IF FIO-STAT = FIO-STAT-NEX
               MOVE 'S' TO SCR-IERR.
      * PTC-FIN-AUT
      *    IF OPC-MSC-STAT IN OPC = 'L'
      *         MOVE 'OPC    LIQYA' TO MSG-COD-MENS.
           IF OPC-MSC-STAT IN OPC = 'A'
               MOVE 'OPC    ACAYA' TO MSG-COD-MENS.
           IF OPC-MSC-STAT IN OPC = 'D'
               MOVE 'OPC    DESYA' TO MSG-COD-MENS.
*% IF PGM_PER
      *    IF OPC-MSC-STAT IN OPC = 'F'
           IF OPC-APROBADA-CTC
               MOVE 'OPC    APDYA' TO MSG-COD-MENS.
*% END
      * RBG INI 16-APR-1996 
       SIG-FND-KEY.
      * RBG FIN 16-APR-1996 

           MOVE 'COL' TO MSG-COD-SIST.
           PERFORM GET-MSG.

           MOVE MSG-GLS-DESC TO CPT-STR1
           MOVE MSG-GLS-DATA TO CPT-STR2
           PERFORM CPT-BLKS
           MOVE CPT-STRN     TO FRM-MENS

           MOVE '00' TO FIO-STAT.
           MOVE SCR-STAT-CON TO SCR-STAT.
           GO TO FIN-FND-KEY.

      *>>>>
*% END
*% IF FIN_PUT_SCR 
      *<<<< FIN_PUT_SCR 
      *PTC-INI:
           IF SCR-CMND = 'CON' AND
              SCR-OFRM-SRV

                 MOVE TSK-TERM-ALF TO QUE-TERM
                 MOVE PTC-ICG-TYPE TO QUE-TYPE
                 MOVE QUE-DEL TO QUE-CMND
                 PERFORM GNS-PRO-QUE

                 MOVE SPACES TO ICG
                 MOVE ICG-CAI-IOPC IN TEF-FLD TO ICG-CAI-IOPC IN ICG
                 MOVE ICG-IIC-IOPC IN TEF-FLD TO ICG-IIC-IOPC IN ICG
                 MOVE ICG-NUM-ICAN IN TEF-FLD TO ICG-NUM-ICAN IN ICG
                 MOVE ICG-CAI-IOPV IN TEF-FLD TO ICG-CAI-IOPV IN ICG
                 MOVE ICG-IIC-IOPV IN TEF-FLD TO ICG-IIC-IOPV IN ICG
                 MOVE ICG-NUM-IVCT IN TEF-FLD TO ICG-NUM-IVCT IN ICG
                 MOVE ICG-IND-TTAS IN TEF-FLD TO ICG-IND-TTAS IN ICG
                 MOVE ICG-FEC-FINI IN TEF-FLD TO ICG-FEC-FINI IN ICG
                 MOVE SPACES TO PTC-ICG-ITEM
                 MOVE ZEROES TO QUE-NITM
                 MOVE FIO-GET-NLS TO FIO-CMND.

       CIC-PTC-ICG.
           IF SCR-CMND = 'CON' AND
              SCR-OFRM-SRV
                 PERFORM COL-FIO-ICG
                 IF FIO-STAT-OKS AND
                    ICG-CAI-IOPC IN ICG = ICG-CAI-IOPC IN TEF-FLD AND
                    ICG-IIC-IOPC IN ICG = ICG-IIC-IOPC IN TEF-FLD AND
                    ICG-NUM-ICAN IN ICG = ICG-NUM-ICAN IN TEF-FLD AND
                    ICG-CAI-IOPV IN ICG = ICG-CAI-IOPV IN TEF-FLD AND
                    ICG-IIC-IOPV IN ICG = ICG-IIC-IOPV IN TEF-FLD AND
                    ICG-NUM-IVCT IN ICG = ICG-NUM-IVCT IN TEF-FLD AND
                    ICG-IND-TTAS IN ICG = ICG-IND-TTAS IN TEF-FLD AND
                    ICG-FEC-FINI IN ICG = ICG-FEC-FINI IN TEF-FLD

      *                IF NOT ( ICG-NUM-ICAN IN ICG = ZEROES AND         
      *                         ICG-CIC-IOPV IN ICG = SPACES AND         
      *                         ICG-NUM-IVCT IN ICG = ZEROES AND         
      *                         ICG-IND-TTAS IN ICG = 'INT' )            
      *                                                                  
      *                    MOVE FIO-GET-NXT TO FIO-CMND                  
      *                    GO TO CIC-PTC-ICG                             
      *                ELSE        
 
                         MOVE ICG-NUM-DINI IN ICG
                           TO PTC-ICG-ICG-NUM-DINI
                         MOVE ICG-NUM-MINI IN ICG
                           TO PTC-ICG-ICG-NUM-MINI
                        MOVE ICG-NUM-SINI IN ICG
                           TO PTC-ICG-ICG-NUM-SINI
                        MOVE ICG-NUM-AINI IN ICG
                           TO PTC-ICG-ICG-NUM-AINI
                        MOVE ICG-MSC-BCTI IN ICG
                           TO PTC-ICG-ICG-MSC-BCTI
                        MOVE ICG-MSC-PBTI IN ICG
                           TO PTC-ICG-ICG-MSC-PBTI
                        MOVE ICG-MSC-BPBT IN ICG
                           TO PTC-ICG-ICG-MSC-BPBT
                        MOVE ICG-MSC-SPBT IN ICG
                           TO PTC-ICG-ICG-MSC-SPBT
                        MOVE ICG-COD-CVTI IN ICG
                           TO PTC-ICG-ICG-COD-CVTI
                        MOVE ICG-MSC-TFPR IN ICG
                           TO PTC-ICG-ICG-MSC-TFPR
                        MOVE ICG-NUM-PREP IN ICG
                           TO PTC-ICG-ICG-NUM-PREP-EDT
                        MOVE ICG-MSC-UTPR IN ICG
                           TO PTC-ICG-ICG-MSC-UTPR
                        MOVE ICG-NUM-DTER IN ICG
                           TO PTC-ICG-ICG-NUM-DTER
                        MOVE ICG-NUM-MTER IN ICG
                           TO PTC-ICG-ICG-NUM-MTER
                        MOVE ICG-NUM-STER IN ICG
                           TO PTC-ICG-ICG-NUM-STER
                        MOVE ICG-NUM-ATER IN ICG
                           TO PTC-ICG-ICG-NUM-ATER
                        MOVE ICG-SGV-SPRD IN ICG
                           TO PTC-ICG-ICG-SGV-SPRD-EDT
                        MOVE ICG-SGV-TINT IN ICG
                           TO PTC-ICG-ICG-SGV-TINT-EDT

                        MOVE SPACES       TO QUE-ITEM
                        ADD 1             TO QUE-NITM
                        MOVE TSK-TERM-ALF TO QUE-TERM
                        MOVE PTC-ICG-TYPE TO QUE-TYPE
                        MOVE PTC-ICG-ITEM TO QUE-ITEM
                        MOVE PTC-ICG-LENG TO QUE-LITM
                        MOVE QUE-PUT      TO QUE-CMND
                        PERFORM GNS-PRO-QUE
                        MOVE FIO-GET-NXT  TO FIO-CMND
                        GO TO CIC-PTC-ICG.
      *PTC-FIN:
      *>>>>
*% END
*% IF INI_CMN_ING
      *<<<< INI_CMN_ING
*% IF PGM_PU
           MOVE ZEROES TO ICG-FEC-FTRN IN ICG.
           MOVE ZEROES TO ICG-HRA-HRTR IN ICG.
           MOVE ZEROES TO ICG-SGV-MNTO IN ICG.
*% END
      *>>>>
*% END
*% IF CMN_ING
      *<<<< CMN_ING
           MOVE SPACES TO ICG-GLS-FLAG IN ICG.
      *     MOVE SPACES TO ICG-IND-AINV IN ICG.
      *     MOVE SPACES TO ICG-COD-OINV IN ICG.
           MOVE SPACES TO ICG-GLS-DISP IN ICG.
           MOVE ZEROES TO ICG-SGV-MNTO IN ICG.
      *>>>>
*% END
*% IF CMN_ING OR CMN_MOD
      *<<<< CMN_ING OR CMN_MOD
           PERFORM GET-FHOY.
      *     MOVE HOY-STP-ITRN IN HOY-VARI TO ICG-STP-IINV IN ICG.
      *>>>>
*% END
*% IF WSS
      *<<<< WSS
       COPY COLWGPMP.
      *>>>>
*% END
*% IF SCR_GFLD_VAL_MKY
      *<<<< SCR_GFLD_VAL_MKY
      * CARGA OPC PARA TENERLO PRESENTE EN LA VALIDACION DE LOS CAMPOS
           MOVE ICG-CAI-IOPC IN TEF-FLD TO OPC-CAI-IOPC IN OPC.
           MOVE ICG-IIC-IOPC IN TEF-FLD TO OPC-IIC-IOPC IN OPC.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM COL-FIO-OPC.
      *>>>>
*% END
*% IF INI_FIO
      *<<<< INI_FIO
      *PTC-INI (RRM) 26-NOV-2002                                        
           IF SCR-OFRM-SRV                                              
               MOVE SPACES TO SCR-VEC-ENG                               
               MOVE 1 TO SCR-IPRO.                                      
      *PTC-FIN (RRM) 26-NOV-2002

           IF SCR-DESDE-CMN
               MOVE SPACES TO SCR-VEC-ENG
               MOVE 1 TO SCR-IPRO
               GO TO FIN-INI-FIO.
           IF SCR-INST-EXT = WSS-INST-FPEN-CIC
               MOVE WSS-INST-NULL TO SCR-INST-EXT
               MOVE 'GNS' TO MSG-COD-SIST
               MOVE 'MSGKEY' TO MSG-COD-MENS
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO SCR-MENS-EXT
               PERFORM ING-FPEN-CIC.
       FIN-INI-FIO.
      *>>>>
*% END
*% IF SCR_GIKY_VAL_IKY 
      *<<<<
      *PTC-INI
           IF SCR-OFRM-SRV AND
              SCR-CCPP = 'ING'

              MOVE PTC-OPC-TYPE TO QUE-TYPE
              MOVE TSK-TERM-ALF TO QUE-TERM
              MOVE PTC-OPC-LENG TO QUE-LITM
              MOVE 1            TO  QUE-NITM
              MOVE QUE-GET        TO QUE-CMND
              PERFORM GNS-PRO-QUE
              IF QUE-STAT = QUE-STAT-OKS
                 MOVE QUE-ITEM TO PTC-OPC-ITEM   
                 MOVE PTC-OPC-OPC-CAI-IOPC TO ICG-CAI-IOPC IN TEF-FLD
                 MOVE PTC-OPC-OPC-IIC-IOPC TO ICG-IIC-IOPC IN TEF-FLD.
      *PTC-FIN
      *>>>>
*% END
*% IF FIN_SCR_GIKY OR FIN_SCR_GCNF OR FIN_SCR_GFLD
      *<<<< FIN_SCR_GIKY OR FIN_SCR_GCNF OR FIN_SCR_GFLD
           IF FRM-FFLD = FRM-FFLD-PF3 AND
              SCR-IND-ENG IN SCR-VEC-ENG(SCR-IPRO) = 'S'
               PERFORM EGR-FTER-CIC.
      *>>>>
*% END
*% IF FIN_CMN_ING OR SCR_GIKY_VAL_CON_IKY
      *<<<< FIN_CMN_ING OR SCR_GIKY_VAL_CON_IKY
           IF FRM-FFLD = FRM-FFLD-PF10 AND
              SCR-IND-ENG IN SCR-VEC-ENG(SCR-IPRO) = 'S'
               PERFORM EGR-FPEN-CIC.
           IF SCR-IND-ENG IN SCR-VEC-ENG(SCR-IPRO) NOT = 'S'
              PERFORM MOD-OPC-CAN.
      *>>>>
*% END
*% IF FIN_CMN_MOD
      *<<<< FIN_CMN_MOD
           PERFORM MOD-OPC-CAN.
      *>>>>
*% END
*% IF FIN_HBL_IKY
      *<<<< FIN_HBL_IKY
           IF SCR-IND-ENG IN SCR-VEC-ENG(SCR-IPRO) = 'S'
               PERFORM HBL-KEY-ICG.
      *>>>>
*% END
*% IF FIN_HBL_FLD
      *<<<< FIN_HBL_FLD
      *ALD
           IF SCR-CCPP NOT = 'ING'
               GO TO FIN-HBL-FLD.
           IF NOT PGM-STAT-POC-OKS
               MOVE ICG-CAI-IOPC IN TEF-FLD TO OPC-CAI-IOPC IN OPC
               MOVE ICG-IIC-IOPC IN TEF-FLD TO OPC-IIC-IOPC IN OPC
               MOVE FIO-GET-KEY TO FIO-CMND
               PERFORM COL-FIO-OPC
               IF NOT FIO-STAT-OKS
                   GO TO FIN-HBL-FLD
               ELSE
                   MOVE OPC-COD-VCOC IN OPC TO POC-COD-VCOC IN POC
                   MOVE OPC-COD-TOOC IN OPC TO POC-COD-TOOC IN POC
                   MOVE OPC-COD-AOOC IN OPC TO POC-COD-AOOC IN POC
                   MOVE ZEROES              TO POC-NUM-IPOC IN POC
                   MOVE FIO-GET-KEY TO FIO-CMND
                   PERFORM COL-FIO-POC
                   IF NOT FIO-STAT-OKS
                       GO TO FIN-HBL-FLD.

           IF POC-MSC-BCTI IN POC > SPACES
               MOVE POC-MSC-BCTI IN POC TO ICG-MSC-BCTI IN TEF-FLD.
           IF POC-MSC-PBTI IN POC > SPACES 
               MOVE POC-MSC-PBTI IN POC TO ICG-MSC-PBTI IN TEF-FLD.
           IF POC-MSC-BPBT IN POC > SPACES
               MOVE POC-MSC-BPBT IN POC TO ICG-MSC-BPBT IN TEF-FLD.
           IF POC-MSC-SPBT IN POC > SPACES
               MOVE POC-MSC-SPBT IN POC TO ICG-MSC-SPBT IN TEF-FLD.
           IF POC-COD-CVTI IN POC > SPACES
               MOVE POC-COD-CVTI IN POC TO ICG-COD-CVTI IN TEF-FLD.
           IF POC-MSC-TFPR IN POC > SPACES
               MOVE POC-MSC-TFPR IN POC TO ICG-MSC-TFPR IN TEF-FLD.
           IF POC-NUM-PREP IN POC > ZEROES
               MOVE POC-NUM-PREP IN POC TO ICG-NUM-PREP IN TEF-FLD.
           IF POC-MSC-UTPR IN POC > SPACES
               MOVE POC-MSC-UTPR IN POC TO ICG-MSC-UTPR IN TEF-FLD.
      *
      *>>>>
*% END
*% IF EOF
       COPY GNSBEGLS.                                                           
      *<<<< EOF
       HBL-KEY-ICG SECTION.
       INI-HBL-KEY-ICG.
           MOVE SCR-INST-GKY TO SCR-INST.
      *ISP   25-JUL-1990 DEBE SER REEMPLAZADO POR VARIABLE
      *     INHIBE MOVE FRM-CPSF TO FRM-CPIM-AEY
           MOVE '1' TO FRM-CPIM-AEY.
           MOVE FRM-CPIM-AEY TO ICG-CAI-IOPC-ATR IN TEF-FLD.
           MOVE FRM-CPIM-AEY TO ICG-IIC-IOPC-ATR IN TEF-FLD.
           MOVE +4           TO ICG-CAI-IOPC-LEN IN TEF-FLD.
           IF SCR-NUM-IDOC IN SCR-VARI = ZEROES
                MOVE FRM-CPIM-AEY TO ICG-NUM-ICAN-ATR IN TEF-FLD
                MOVE FRM-CPIM-AEY TO ICG-NUM-IVCT-ATR IN TEF-FLD
                MOVE -1           TO ICG-FEC-FINI-LEN IN TEF-FLD
           ELSE
                MOVE -1           TO ICG-NUM-ICAN-LEN IN TEF-FLD.
           PERFORM SCR-CLRA-TEF.
           MOVE SCR-CAI-IOPC IN SCR-VARI TO ICG-CAI-IOPC IN TEF-FLD.
           MOVE SCR-IIC-IOPC IN SCR-VARI TO ICG-IIC-IOPC IN TEF-FLD.

      * ISP SCR-DMSG LIMPIA TODO Y HACE STP-EXIT
           MOVE PGM-LIMPIAR-CAMPOS TO PGM-ICLR.

           MOVE SCR-CAI-IOPC IN SCR-VARI TO OPC-CAI-IOPC IN OPC.
           MOVE SCR-IIC-IOPC IN SCR-VARI TO OPC-IIC-IOPC IN OPC.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM COL-FIO-OPC.
           MOVE FIO-STAT TO PGM-STAT-OPC.
           IF NOT FIO-STAT-OKS
               MOVE 'COL' TO MSG-COD-SIST
               MOVE 'OPC    NEX' TO MSG-COD-MENS
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS
               MOVE SCR-STAT-CON TO SCR-STAT
               PERFORM CLR-OPC-TEF
           ELSE
               PERFORM PUT-OPC-TEF.

           PERFORM EDT-KEY-TEF.
           PERFORM EDT-FLD-TEF.

           IF SCR-IND-FST IN SCR-VEC-FST(SCR-IPRO) = 'S'
               MOVE SPACES TO SCR-IND-FST IN SCR-VEC-FST(SCR-IPRO)
               PERFORM SCR-INIT
               PERFORM SCR-EXIT
           ELSE
               PERFORM SCR-PUTA.

      *     IF SCR-IND-FST IN SCR-VEC-FST(SCR-IPRO) = 'S'
      *         MOVE SPACES TO SCR-IND-FST IN SCR-VEC-FST(SCR-IPRO)
      *         PERFORM SCR-INIT
      *     ELSE
      *         PERFORM SCR-PUTA.
      *     PERFORM SCR-EXIT.
       FIN-HBL-KEY-ICG.
           EXIT.
      *>>>>
*% END
*% IF EOF_PU
      *<<<< EOF_PU
       PUT-OPC-TEF SECTION.
       INI-PUT-OPC-TEF.
           IF PGM-STAT-OPC-NUL
               GO TO FIN-PUT-OPC-TEF.
           IF NOT PGM-STAT-OPC-OKS
               PERFORM CLR-OPC-TEF
               GO TO FIN-PUT-OPC-TEF.
           MOVE OPC-MSC-TVOC IN OPC TO OPC-MSC-TVOC IN TEF-FLD.
           MOVE OPC-COD-TOOC IN OPC TO OPC-COD-TOOC IN TEF-FLD.
           MOVE OPC-COD-OFOC IN OPC TO OPC-COD-OFOC IN TEF-FLD.
      *BUS-MSC busca glosa de miscelaneo en tabla
           IF OPC-MSC-TVOC IN TEF-FLD > SPACES
               MOVE 'TAB' TO MSC-COD-SIST
               MOVE 'TVAL' TO MSC-COD-TMSC IN MSC
               MOVE OPC-MSC-TVOC IN TEF-FLD TO MSC-COD-CMSC IN MSC
               PERFORM BUS-MSC
               MOVE MSC-GLS-DESC IN MSC TO
                    FRM-GLS-TVOC IN TEF-FLD.
      *BUS-TAB busca glosa de codigo en tabla
           IF OPC-COD-TOOC IN TEF-FLD > SPACES
               MOVE 'TAB' TO TAB-COD-SIST
               MOVE 'TIO' TO TAB-COD-TTAB IN TAB
               MOVE OPC-COD-TOOC IN TEF-FLD TO TAB-COD-CTAB IN TAB
               PERFORM BUS-TAB
               MOVE TAB-GLS-DESC IN TAB TO
                    FRM-GLS-TOOC IN TEF-FLD.
      *BUS-OFI busca oficina en tablas
           IF OPC-COD-OFOC IN TEF-FLD > SPACES
               MOVE OPC-COD-OFOC IN TEF-FLD TO OFI-COD-OFIC IN OFI
               PERFORM BUS-OFI
               MOVE OFI-GLS-DESC IN OFI TO FRM-GLS-OFOC IN TEF-FLD.
       FIN-PUT-OPC-TEF.
           EXIT.
      *>>>>
*% END
*% IF EOF
      *<<<< EOF
       SET-MSG SECTION.
       INI-SET-MSG.

           MOVE MSG-COD-MENS   TO WSS-CPT-MENS
           MOVE MSG-GLS-DESC   TO WSS-CPT-DESC
           MOVE MSG-GLS-DATA   TO WSS-CPT-DATA
           MOVE WSS-CPT-NOMB-R TO FRM-MENS

           MOVE '00' TO FIO-STAT.
           MOVE SCR-STAT-CON TO SCR-STAT.
       FIN-SET-MSG.
           EXIT.

       GET-CAN SECTION.
       INI-GET-CAN.
           MOVE SPACES TO MSG-COD-MENS.
           MOVE ICG-CAI-IOPC IN ICG TO CAN-CAI-IOPC IN CAN.
           MOVE ICG-IIC-IOPC IN ICG TO CAN-IIC-IOPC IN CAN.
           MOVE ICG-NUM-ICAN IN ICG TO CAN-NUM-ICAN IN CAN.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM COL-FIO-CAN.
           IF NOT FIO-STAT-OKS
               MOVE 'COL' TO MSG-COD-SIST
               MOVE 'CICIOPCNOCAN' TO MSG-COD-MENS
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS
               MOVE '00' TO FIO-STAT
               MOVE SCR-STAT-CON TO SCR-STAT
               GO TO FIN-GET-CAN.
           IF CAN-MSC-STAT IN CAN = 'R'
               MOVE 'CAN    REVYA' TO MSG-COD-MENS
           ELSE
           IF CAN-MSC-STAT IN CAN = 'S'
               MOVE 'CAN    SAFYA' TO MSG-COD-MENS
           ELSE
           IF CAN-MSC-STAT IN CAN = 'A'
               MOVE 'CAN    ACAYA' TO MSG-COD-MENS
           ELSE
           IF CAN-MSC-STAT IN CAN = 'E'
               MOVE 'CAN    ACAOB' TO MSG-COD-MENS.
           IF MSG-COD-MENS > SPACES
               MOVE 'COL' TO MSG-COD-SIST
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS
               MOVE '00' TO FIO-STAT
               MOVE SCR-STAT-CON TO SCR-STAT.
       FIN-GET-CAN.
           EXIT.

       GET-RCV SECTION.
       INI-GET-RCV.
           MOVE SPACES TO MSG-COD-MENS.
           MOVE ICG-CIC-IOPC IN ICG TO RCV-CIC-IOPC IN RCV.
           MOVE ICG-NUM-ICAN IN ICG TO RCV-NUM-ICAN IN RCV.
           MOVE ICG-CIC-IOPV IN ICG TO RCV-CIC-IOPV IN RCV
           MOVE ZEROES              TO RCV-NUM-IVCT IN RCV.
           MOVE FIO-GET-NLS TO FIO-CMND.
           PERFORM COL-FIO-RCV.
           IF NOT ( FIO-STAT-OKS AND
                    ICG-CIC-IOPC IN ICG = RCV-CIC-IOPC IN RCV AND
                    ICG-NUM-ICAN IN ICG = RCV-NUM-ICAN IN RCV AND
                    ICG-CIC-IOPV IN ICG = RCV-CIC-IOPV IN RCV )
                 MOVE '23' TO FIO-STAT
                 MOVE 'COL' TO MSG-COD-SIST
                 MOVE 'NUMIVCTNORCV' TO MSG-COD-MENS
                 PERFORM GET-MSG
                 MOVE MSG-GLS-DESC TO FRM-MENS
                 MOVE '00' TO FIO-STAT
                 MOVE SCR-STAT-CON TO SCR-STAT.
       FIN-GET-RCV.
           EXIT.

       SET-IVCT SECTION.
       INI-SET-IVCT.
           IF RCV-NUM-IVCT IN RCV > ZEROES
               MOVE RCV-NUM-IVCT IN RCV TO ICG-NUM-IVCT IN TEF-FLD
               MOVE RCV-NUM-IVCT IN RCV TO WSS-NUM-IVCT
           ELSE
               MOVE OPC-NUM-IVEN IN OPC TO ICG-NUM-IVCT IN TEF-FLD
               MOVE OPC-NUM-IVEN IN OPC TO WSS-NUM-IVCT.
       FIN-SET-IVCT.
           EXIT.

       GET-VEN SECTION.
       INI-GET-VEN.
           MOVE ICG-CAI-IOPC IN ICG TO VEN-CAI-IOPC IN VEN.
           MOVE ICG-IIC-IOPC IN ICG TO VEN-IIC-IOPC IN VEN.
           MOVE ICG-NUM-IVCT IN TEF-FLD TO VEN-NUM-IVEN IN VEN.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM COL-FIO-VEN.
           IF NOT FIO-STAT-OKS
               PERFORM CLR-FLD-TEF
               MOVE 'COL' TO MSG-COD-SIST
               MOVE 'VEN    NEX' TO MSG-COD-MENS
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS
               MOVE '00' TO FIO-STAT
               MOVE SCR-STAT-CON TO SCR-STAT
           ELSE
               MOVE SPACES TO MSG-COD-MENS.
       FIN-GET-VEN.
           EXIT.

       GET-DLC SECTION.
       INI-GET-DLC.
           MOVE ICG-CAI-IOPC IN ICG TO DLC-CAI-IOPC IN DLC
           MOVE ICG-IIC-IOPC IN ICG TO DLC-IIC-IOPC IN DLC
           MOVE ICG-NUM-ICAN IN ICG TO DLC-NUM-IDLC IN DLC
           MOVE FIO-GET-KEY TO FIO-CMND
           PERFORM COL-FIO-DLC
           IF NOT FIO-STAT-OKS
               MOVE 'COL' TO MSG-COD-SIST
               MOVE 'NUMICANIDLCN' TO MSG-COD-MENS
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS
               MOVE '00' TO FIO-STAT
               MOVE SCR-STAT-CON TO SCR-STAT
           ELSE
               MOVE SPACES TO MSG-COD-MENS.
       FIN-GET-DLC.
           EXIT.

       MOD-OPC-CAN SECTION.
       INI-MOD-OPC-CAN.
           IF ICG-NUM-ICAN IN TEF-FLD > ZEROES AND
              ICG-NUM-IVCT IN TEF-FLD > ZEROES
                MOVE ICG-CAI-IOPC IN ICG TO CAN-CAI-IOPC IN CAN
                MOVE ICG-IIC-IOPC IN ICG TO CAN-IIC-IOPC IN CAN
                MOVE ICG-NUM-ICAN IN ICG TO CAN-NUM-ICAN IN CAN
                MOVE FIO-GET-KEY-UPD TO FIO-CMND
                PERFORM COL-FIO-CAN
                IF FIO-STAT-OKS
                     MOVE 'M' TO CAN-MSC-STAT IN CAN
                     MOVE FIO-MOD TO FIO-CMND
                     PERFORM COL-FIO-CAN
                ELSE
                     NEXT SENTENCE
           ELSE
                MOVE ICG-CAI-IOPC IN ICG TO OPC-CAI-IOPC IN OPC
                MOVE ICG-IIC-IOPC IN ICG TO OPC-IIC-IOPC IN OPC
                MOVE FIO-GET-KEY-UPD TO FIO-CMND
                PERFORM COL-FIO-OPC
                IF FIO-STAT-OKS
                     MOVE 'M' TO OPC-MSC-STAT IN OPC
                     MOVE FIO-MOD TO FIO-CMND
                     PERFORM COL-FIO-OPC.
       FIN-MOD-OPC-CAN.
           EXIT.

       LEE-NXT-PRV SECTION.
       INI-LEE-NXT-PRV.
           IF SCR-ICG-REQA > SPACES
               PERFORM LEE-NXT-PRV-ICG
           ELSE
               PERFORM LEE-NXT-PRV-CIC.
       FIN-LEE-NXT-PRV.
           EXIT.

       LEE-NXT-PRV-ICG SECTION.
       INI-LEE-NXT-PRV-ICG.
           MOVE SCR-ICG-REQA TO ADR-ICG-REQA.
           MOVE FIO-KDEF-S TO FIO-KDEF.
           IF FRM-FFLD = FRM-FFLD-PF7
*% IF PGM_PQ
      *MHM-INI 17-OCT-2001
               MOVE FIO-GET-LEQ TO FIO-CMND
               PERFORM COL-FIO-ICG
      *MHM-FIN 17-OCT-2001
*% END
               MOVE FIO-GET-PRV TO FIO-CMND
           ELSE
*% IF PGM_PQ
      *MHM-INI 17-OCT-2001
               MOVE FIO-GET-NLS TO FIO-CMND
               PERFORM COL-FIO-ICG
      *MHM-FIN 17-OCT-2001
*% END
               MOVE FIO-GET-NXT TO FIO-CMND.
           PERFORM COL-FIO-ICG.
           MOVE FIO-STAT TO PGM-STAT-ICG.
           IF FIO-STAT-OKS
               MOVE ADR-ICG-REQA TO SCR-ICG-REQA.
       FIN-LEE-NXT-PRV-ICG.
           EXIT.

       LEE-NXT-PRV-CIC SECTION.
       INI-LEE-NXT-PRV-CIC.
           IF ICG-IIC-IOPC IN ICG > ZEROES
               MOVE FIO-GET-KEY    TO FIO-CMND
               PERFORM COL-FIO-ICG
               IF FIO-STAT-OKS
                   IF FRM-FFLD = FRM-FFLD-PF7
                       MOVE FIO-GET-PRV TO FIO-CMND
                   ELSE
                       MOVE FIO-GET-NXT TO FIO-CMND
               ELSE
                   IF FRM-FFLD = FRM-FFLD-PF7
                       MOVE FIO-GET-LEQ TO FIO-CMND
                   ELSE
                       MOVE FIO-GET-NLS TO FIO-CMND
           ELSE
               IF FRM-FFLD = FRM-FFLD-PF7
                   MOVE FIO-GET-LEQ TO FIO-CMND
               ELSE
                   MOVE FIO-GET-NLS TO FIO-CMND.
           PERFORM COL-FIO-ICG.
           MOVE FIO-STAT TO PGM-STAT-ICG.
           IF FIO-STAT-OKS
               MOVE ADR-ICG-REQA TO SCR-ICG-REQA.
       FIN-LEE-NXT-PRV-CIC.
           EXIT.

       COPY COLBFRCV.
       COPY COLBFVEN.
       COPY COLBFDLC.
       COPY COLBFOPC.
       COPY COLBFCAN.
      *JJV
       COPY TABBBUSR.
       COPY GNSBVCOD.
       COPY TABBVOFI.
       COPY TABBVUSR.
       COPY GNSBVTAB.
       COPY TABBFUSR.
      *ALD
       COPY COLBFPOC.
       COPY GNSBGCPT.
      *
      *>>>>
      *  CODIGO ADICIONAL PARA ENGANCHE PROGRAMAS
       ING-FPEN-CIC SECTION.
       INI-ING-FPEN-CIC.
           PERFORM ING-SETE.
           MOVE SCR-MENS-EXT TO TEF-GLS-MENS.
           PERFORM HBL-IKY.
       FIN-ING-FPEN-CIC.
           EXIT.

       ING-FTER-CIC SECTION.
       INI-ING-FTER-CIC.
           PERFORM ING-SETE.
           MOVE SCR-MENS-EXT TO TEF-GLS-MENS.
           PERFORM HBL-IKY.
       FIN-ING-FTER-CIC.
           EXIT.

       ING-FTER-CMN SECTION.
       INI-ING-FTER-CMN.
           PERFORM ING-SETE.
           PERFORM PRO-ALL.
           PERFORM SCR-CLRA-TEF.
           MOVE SCR-MENS-EXT TO TEF-GLS-MENS.
           PERFORM SCR-INIT.
       FIN-ING-FTER-CMN.
           EXIT.

       ING-SETE SECTION.
       INI-ING-SETE.
           PERFORM CRG-TBL-ENG.
           MOVE WSS-NTRN(SCR-IPRO) TO SCR-NTRN.
           MOVE WSS-PROG(SCR-IPRO) TO SCR-PROG.
           MOVE WSS-NMAP(SCR-IPRO) TO SCR-NMAP.
           MOVE WSS-NLIB(SCR-IPRO) TO SCR-NLIB.

           MOVE WSS-NTRV(SCR-IPRO) TO SCR-NTRV.
           MOVE WSS-PROV(SCR-IPRO) TO SCR-PROV.
       FIN-ING-SETE.
           EXIT.

       EGR-FPEN-CIC SECTION.
       INI-EGR-FPEN-CIC.
           PERFORM CRG-TBL-ENG.
           ADD 1 TO SCR-IPRO.
           IF SCR-IPRO > WSS-TOT-IIDX
                  PERFORM EGR-FTER-CIC
                  GO TO FIN-EGR-FPEN-CIC.
           IF SCR-IND-ENG IN SCR-VEC-ENG(SCR-IPRO) = SPACES
               GO TO INI-EGR-FPEN-CIC.
           MOVE WSS-INST-FPEN-CIC TO SCR-INST-EXT.
           MOVE WSS-PROG(SCR-IPRO) TO SYS-PROG.
           MOVE SCR-VARI TO SYS-CMMA.
           MOVE SCR-TCMA TO SYS-TCMA.
           MOVE SYS-XCTL TO SYS-CMND.
      * PTC-INI-AUT                                                     
           IF NOT SCR-OFRM-SRV                                          
      * PTC-FIN-AUT                                                     
           PERFORM GNS-PRO-SYS.
       FIN-EGR-FPEN-CIC.
           EXIT.

       EGR-FTER-CIC SECTION.
       INI-EGR-FTER-CIC.
           PERFORM CRG-TBL-ENG.
           MOVE WSS-IDX-IOPC TO SCR-IPRO.
           MOVE WSS-INST-FTER-CIC TO SCR-INST-EXT.
           MOVE WSS-PROG(SCR-IPRO) TO SYS-PROG.
           MOVE SCR-VARI TO SYS-CMMA.
           MOVE SCR-TCMA TO SYS-TCMA.
           MOVE SYS-XCTL TO SYS-CMND.
      * PTC-INI-AUT                                                     
           IF NOT SCR-OFRM-SRV                                          
      * PTC-FIN-AUT                                                     
           PERFORM GNS-PRO-SYS.
       FIN-EGR-FTER-CIC.
           EXIT.

       EGR-FTER-CMN SECTION.
       INI-EGR-FTER-CMN.
           PERFORM CRG-TBL-ENG.
           MOVE WSS-IDX-IOPC TO SCR-IPRO.
           MOVE WSS-INST-FTER-CMN TO SCR-INST-EXT.
           MOVE WSS-PROG(SCR-IPRO) TO SYS-PROG.
           MOVE SCR-VARI TO SYS-CMMA.
           MOVE SCR-TCMA TO SYS-TCMA.
           MOVE SYS-XCTL TO SYS-CMND.
      * PTC-INI-AUT                                                     
           IF NOT SCR-OFRM-SRV                                          
      * PTC-FIN-AUT                                                     
           PERFORM GNS-PRO-SYS.
       FIN-EGR-FTER-CMN.
           EXIT.

       SCR-INIT SECTION.
       INI-SCR-INIT.
           MOVE 3  TO FRM-PLIN.
           MOVE 19 TO FRM-NLIN.
           MOVE FRM-CLR-FRM TO FRM-CMND.
           PERFORM GNS-PRO-FRM.
           MOVE FRM-SINI-DBNF TO FRM-SINI.
           MOVE SCR-NMAP TO FRM-NAME.
           MOVE SCR-NLIB TO FRM-NLIB.
           MOVE TEF-FLD TO FRM-DFLD.
           MOVE FRM-INI TO FRM-CMND.
           PERFORM GNS-PRO-FRM.
       FIN-SCR-INIT.
           EXIT.
       COPY COLBGMPT.

      * ISP INI  28-JAN-2004 13:37:42                                   
       BUSCA-DBIM-DBIP SECTION.                                         
       INI-BUSCA-DBIM-DBIP.                                             
           MOVE 'COL'  TO IDD-SAUX.                                     
           MOVE 'M'    TO IDD-GAUX.                                     
           MOVE SPACES TO IDD-RAUX.                                     
           MOVE 1 TO IDD-IAUX.                                          
           SET IDD-ITBL TO 1.                                           
           SEARCH IDD-VSIS VARYING IDD-IAUX                             
             AT END                                                     
               GO TO DBM-BUSCA-DBIM-DBIP                                
             WHEN IDD-DENT( IDD-ITBL ) = IDD-DAUX                       
               MOVE IDD-IENT( IDD-ITBL) TO WSS-DBNM                     
               MOVE IDD-IAUX            TO WSS-DBIM                     
               GO TO CON-BUSCA-DBIM-DBIP.                               
       DBM-BUSCA-DBIM-DBIP.                                             
           MOVE 0 TO WSS-DBNM.                                          
           MOVE 0 TO WSS-DBIM.                                          
       CON-BUSCA-DBIM-DBIP.                                             
           MOVE 'COL'  TO IDD-SAUX.                                     
           MOVE 'P'    TO IDD-GAUX.                                     
           MOVE SPACES TO IDD-RAUX.                                     
           MOVE 1 TO IDD-IAUX.                                          
           SET IDD-ITBL TO 1.                                           
           SEARCH IDD-VSIS VARYING IDD-IAUX                             
             AT END                                                     
               GO TO DBP-BUSCA-DBIM-DBIP                                
             WHEN IDD-DENT( IDD-ITBL ) = IDD-DAUX                       
               MOVE IDD-IENT( IDD-ITBL) TO WSS-DBNP                     
               MOVE IDD-IAUX            TO WSS-DBIP                     
               GO TO FIN-BUSCA-DBIM-DBIP.                               
       DBP-BUSCA-DBIM-DBIP.                                             
           MOVE 0 TO WSS-DBNP.                                          
           MOVE 0 TO WSS-DBIP.                                          
       FIN-BUSCA-DBIM-DBIP.                                             
           EXIT.                                                        
                                                                        
       INV-BD SECTION.                                                  
       INI-INV-BD.                                                      
                                                                        
           MOVE WSS-DBNM TO IDD-IENT( WSS-DBIP ).                       
           MOVE WSS-DBNP TO IDD-IENT( WSS-DBIM ).                       
                                                                        
       FIN-INV-BD.                                                      
           EXIT.                                                        
                                                                        
      * ISP FIN  28-JAN-2004 13:37:42      

*% END
