       IDENTIFICATION DIVISION.
      *=======================
       PROGRAM-ID.      COLPBRCO.
       AUTHOR.          BEE TEAM (ALD).
       DATE-WRITTEN.    21-JUN-1999
      *
       ENVIRONMENT DIVISION.
      *====================
       CONFIGURATION SECTION.
      *---------------------
       SPECIAL-NAMES.
            DECIMAL-POINT IS COMMA.
       DATA DIVISION.
      *=============
       WORKING-STORAGE SECTION.
      *-----------------------
      *<<<< WSS_DTC
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-OPC-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-DLC-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-VEN-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-ROV-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-CAN-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-RCV-REQA==.

       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-EVC-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-ICG-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-TOC-REQA==.

       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-TAB-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-MSG-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-MSC-REQA==.

       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-OFI-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-USR-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-VLR-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-CAM-REQA==.

       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-GDD-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-GDG-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-DBC-REQA==.
      *<<<< WSS
       COPY GARBRGDD.
       COPY GARBRGDG.
       COPY SGCBRDBC.

       COPY COLBRORN.
       COPY COLBRRCC.
       COPY COLBROPC.
       COPY COLBROPS.
       COPY COLBRDLC.
       COPY COLBRVEN.
       COPY COLBRROV.
       COPY COLBRRON.
       COPY COLBRCAN.
       COPY COLBRRCV.
       COPY COLBREVC.
       COPY COLBRICG.
       COPY COLBRTOC.

       COPY COLWGVEN.
       COPY COLWGINT.

       COPY TABBROFI.
       COPY TABBRUSR.
       COPY TABBRVLR.
       COPY TABBRCAM.
       COPY TABBRCOM.


       COPY GNSBRTAB.
       COPY GNSBRMSG.
       COPY GNSBRMSC.

       COPY GNSWGRQA.
       COPY GNSWGUIB.
       COPY GNSWGELS.
       COPY GNSWVIDD.
       COPY GNSWCFIO.
       COPY GNSWVFIO.

       COPY GNSWGFEC.
       COPY GNSWGHOY.
       COPY GNSWGPES.
       COPY GNSWGCVI.
       COPY GNSWGSYS.

      *
       01  WSS-VARI.
           03 WSS-EXT-RON                         PIC X(01).
           03 WSS-EXT-REN                         PIC X(01).
           03 WSS-IND-PROC  VALUE 'P'             PIC X(01).
           03 WSS-COD-PESO                        PIC X(06).
           03 WSS-COD-UEFE                        PIC X(06).
           03 WSS-IND-DISP                        PIC X(01).
           03 WSS-NUM-ICL8                        PIC 9(08).
           03 WSS-NUM-ICL9                        PIC 9(09).
           03 WSS-VAL-SFIN                        PIC 9(13).
           03 WSS-VAL-UEFE   VALUE 1              PIC 9(11)V9(04).
           03 WSS-VAL-UEVE   VALUE 1              PIC 9(11)V9(04).
           03 WSS-NUM-OPEX                        PIC 9(02).
           03 WSS-VAL-RENO                        PIC 9(11)V9(04).
           03 WSS-NUM-VCD                         PIC 9(02).
           03 WSS-NUM-RLEI   VALUE ZEROES         PIC 9(05).
           03 WSS-NUM-ROIN   VALUE ZEROES         PIC 9(05).
           03 WSS-FEC-FVEN.
              05 WSS-NUM-SVEN                     PIC 9(02).
              05 WSS-NUM-AVEN                     PIC 9(02).
              05 WSS-NUM-MVEN                     PIC 9(02).
              05 WSS-NUM-DVEN                     PIC 9(02).

           03 WSS-FEC-FPRO.
              05 WSS-NUM-DPRO                     PIC 9(02).
              05 WSS-NUM-MPRO                     PIC 9(02).
              05 WSS-NUM-SPRO                     PIC 9(02).
              05 WSS-NUM-APRO                     PIC 9(02).
           03 WSS-FEC-FCIE.
              05 WSS-NUM-SCIE                     PIC 9(02).
              05 WSS-NUM-ACIE                     PIC 9(02).
              05 WSS-NUM-MCIE                     PIC 9(02).
              05 WSS-NUM-DCIE                     PIC 9(02).
           03 WSS-COD-LOCA.
              05 WSS-COD-REGI                     PIC X(02).
              05 WSS-COD-LUGA                     PIC X(05).
      * Vector de OPERACIONES
           03  PAR-VARI.
               05 PAR-VEC.
                  07  PAR-KEY-ICAN      OCCURS 40.
                      09 PAR-CIC-ICAN.
                         11 PAR-CAI-IOPC            PIC X(04).
                         11 PAR-IIC-IOPC            PIC X(08).
                         11 PAR-NUM-ICAN            PIC 9(03).
                      09 PAR-FEC-FCAN.
                         11 PAR-NUM-SCAN            PIC 9(02).
                         11 PAR-NUM-ACAN            PIC 9(02).
                         11 PAR-NUM-MCAN            PIC 9(02).
                         11 PAR-NUM-DCAN            PIC 9(02).
               05 PAR-I                             PIC 9(02).
               05 PAR-IMAX                          PIC 9(02).
               05 PAX-VEC.
                  07  PAX-KEY-ICAN      OCCURS 40.
                      09 PAX-CIC-ICAN.
                         11 PAX-CAI-IOPC            PIC X(04).
                         11 PAX-IIC-IOPC            PIC X(08).
                         11 PAX-NUM-ICAN            PIC 9(03).
                      09 PAX-FEC-FCAN.
                         11 PAX-NUM-SCAN            PIC 9(02).
                         11 PAX-NUM-ACAN            PIC 9(02).
                         11 PAX-NUM-MCAN            PIC 9(02).
                         11 PAX-NUM-DCAN            PIC 9(02).
               05 PAX-I                             PIC 9(02).

       PROCEDURE DIVISION.
      *==================
       MAIN SECTION.
      *------------
       INI-MAIN.
           COPY GNSBGEDB.
           MOVE 'COLPBRCO' TO FIO-PROG.
           PERFORM GNS-BUS-IDD.
           PERFORM OPEN-FILE.
           PERFORM LEE-PARAM.
           PERFORM PRO-RENEGO.
           PERFORM CLOSE-FILE.
           PERFORM MUESTRA-ESTADISTICAS.
       FIN-MAIN.
           PERFORM GNS-PRO-END.

      ******************************************************************
       OPEN-FILE SECTION.
      *-----------------
       INI-OPEN-FILE.
           MOVE FIO-INP TO FIO-CMND.
           PERFORM COL-FIO-ORN.
           PERFORM COL-FIO-RON.
           MOVE FIO-OUT TO FIO-CMND.
           PERFORM COL-FIO-RCC.
       FIN-OPEN-FILE.
           EXIT.

      ******************************************************************
       LEE-PARAM SECTION.
      *-----------------
       INI-LEE-PARAM.
      * Obtiene Codigo de uefe
           MOVE 'TAB'          TO FIO-SIST.
           MOVE 'VLR'          TO TAB-CIC-TTAB IN TAB.
           MOVE '0998  '       TO TAB-CIC-CTAB IN TAB.
           MOVE 'TAB-CIC-TABL' TO FIO-AKEY.
           MOVE FIO-GET-KEY    TO FIO-CMND.
           PERFORM GNS-FIO-TAB.
           IF NOT FIO-STAT-OKS
               MOVE 'COL'          TO MSG-COD-SIST
               MOVE 'CICUFNEX' TO MSG-COD-MENS IN MSG
               PERFORM GET-MSG
               DISPLAY MSG-GLS-DESC   TAB-CIC-CTAB
               PERFORM GNS-PRO-ABT.

           MOVE TAB-COD-CTAB IN TAB TO WSS-COD-UEFE IN WSS-VARI.

           IF WSS-IND-DISP IN WSS-VARI = 'S'
               DISPLAY 'CODIGO UF: ' WSS-COD-UEFE IN WSS-VARI.

      * OBTIENE CODIGO DE PESO
           MOVE 'TAB'          TO FIO-SIST.
           MOVE 'VLR'          TO TAB-CIC-TTAB IN TAB.
           MOVE '0999  '       TO TAB-CIC-CTAB IN TAB.
           MOVE 'TAB-CIC-TABL' TO FIO-AKEY.
           MOVE FIO-GET-KEY    TO FIO-CMND.
           PERFORM GNS-FIO-TAB.
           IF NOT FIO-STAT-OKS
               MOVE 'COL'          TO MSG-COD-SIST
               MOVE 'CICPENEX' TO MSG-COD-MENS IN MSG
               PERFORM GET-MSG
               DISPLAY MSG-GLS-DESC   TAB-CIC-CTAB
               PERFORM GNS-PRO-ABT.

           MOVE TAB-COD-CTAB IN TAB TO WSS-COD-PESO IN WSS-VARI.

           IF WSS-IND-DISP IN WSS-VARI = 'S'
               DISPLAY 'CODIGO $ : ' WSS-COD-PESO IN WSS-VARI.

           PERFORM ACEPTA-DATOS.
           PERFORM OBT-VCAM-FPRO.

       FIN-LEE-PARAM.
           EXIT.

       PRO-RENEGO SECTION.
       INI-PRO-RENEGO.
           MOVE  FIO-GET-NXT TO FIO-CMND.
           PERFORM COL-FIO-ORN.
           IF NOT FIO-STAT-OKS
               DISPLAY 'ARCHIVO COLORN VACIO'
               GO TO FIN-PRO-RENEGO.
       LUP-PRO-RENEGO.
           IF NOT FIO-STAT-OKS
               GO TO FIN-PRO-RENEGO.
           ADD 1 TO WSS-NUM-RLEI.
           PERFORM CLR-VEC-ROV.
           MOVE PAR-VEC TO PAX-VEC.
           MOVE ORN-CIC-IOPC IN ORN TO OPC-CIC-IOPC IN OPC.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM COL-FIO-OPC.
           IF NOT FIO-STAT-OKS
               DISPLAY 'OPC INEXISTENTE : ' OPC-CIC-IOPC IN OPC
               GO TO NXT-PRO-RENEGO.

           MOVE OPC TO OPS.

           MOVE ORN-CIC-IOPC IN ORN TO DLC-CIC-IOPC IN DLC.
           MOVE ZEROES              TO DLC-NUM-IDLC IN DLC.
           MOVE FIO-GET-NLS TO FIO-CMND.
           PERFORM COL-FIO-DLC.
           IF NOT ( FIO-STAT-OKS AND
                    ORN-CIC-IOPC IN ORN = DLC-CIC-IOPC IN DLC )
               DISPLAY 'DLC INEXISTENTE : ' OPC-CIC-IOPC IN OPC
               GO TO NXT-PRO-RENEGO.

      *OBTIENE RUT DEL CLIENTE
           MOVE ORN-NUM-ICLI IN ORN TO WSS-NUM-ICL8.
           MOVE WSS-NUM-ICL8        TO WSS-NUM-ICL9.
           MOVE WSS-NUM-ICL9        TO RCC-NUM-ICLI IN RCC.
           MOVE ORN-VRF-ICLI        TO RCC-VRF-ICLI IN RCC.

           MOVE ORN-NUM-ICLI IN ORN TO DBC-NUM-ICLI IN DBC.
           MOVE SPACES              TO DBC-IND-ICLI IN DBC.
           MOVE SPACES              TO DBC-GLS-ICLI IN DBC.
           MOVE 'DBC-IDC-ICLI' TO FIO-AKEY.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM SGC-FIO-DBC.
           IF NOT FIO-STAT-OKS
               DISPLAY 'CLI INEXISTENTE PARA OPC :'OPC-CIC-IOPC IN OPC
               GO TO NXT-PRO-RENEGO.
      *NOMBRE DEL CLIENTE
           MOVE ORN-GLS-NOMC IN ORN TO RCC-GLS-NOMC IN RCC.

      *NUMERO DE OPERACION
           MOVE ORN-CIC-IOPC IN ORN TO RCC-CIC-IOPC IN RCC.

      *TIPO DE CREDITO
           MOVE '21'                TO RCC-IND-TCRE IN RCC.

      *LOCALIDAD
           MOVE OPC-COD-OFOC IN OPC TO OFI-COD-OFIC IN OFI.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM TAB-FIO-OFI.
           IF NOT FIO-STAT-OKS
               DISPLAY 'NO EXISTE OFI PARA OPC : ' OPC-CIC-IOPC IN OPC
               GO TO NXT-PRO-RENEGO.
            MOVE 'TAB' TO TAB-COD-SIST.
            MOVE 'COM' TO TAB-COD-TTAB IN TAB.
            MOVE OFI-COD-COMU IN OFI TO TAB-COD-CTAB IN TAB.
            PERFORM BUS-TAB.
            MOVE TAB TO COM.
            MOVE COM-COD-REGI IN COM TO WSS-COD-REGI.
            MOVE COM-EXT-CTAB IN COM TO WSS-COD-LUGA.
            MOVE WSS-COD-LOCA        TO RCC-COD-LOCA.

      *SUCURSAL
           MOVE OPC-COD-OFOC IN OPC TO RCC-COD-OFOC IN RCC.

      *MONTO ORIGINAL
           IF OPC-COD-VCOC IN OPC  = WSS-COD-PESO
               MOVE OPC-VAL-CRED IN OPC TO RCC-VAL-CRED IN RCC
           ELSE
               PERFORM OBT-VCAM-FCOL
               MULTIPLY OPC-VAL-CRED IN OPC BY WSS-VAL-UEFE GIVING
                        RCC-VAL-CRED IN RCC ROUNDED.

      *FECHA DEL CREDITO
           MOVE OPC-NUM-DCOL IN OPC TO RCC-NUM-DCOL IN RCC.
           MOVE OPC-NUM-MCOL IN OPC TO RCC-NUM-MCOL IN RCC.
           MOVE OPC-NUM-SCOL IN OPC TO RCC-NUM-SCOL IN RCC.
           MOVE OPC-NUM-ACOL IN OPC TO RCC-NUM-ACOL IN RCC.

      *PLAZO DEL CREDITO EN MESES
           MOVE OPC-NUM-DCOL IN OPC TO FEC-DEC1.
           MOVE OPC-NUM-MCOL IN OPC TO FEC-MEC1.
           MOVE OPC-NUM-SCOL IN OPC TO FEC-SEC1.
           MOVE OPC-NUM-ACOL IN OPC TO FEC-AEC1.

           MOVE DLC-NUM-DMAV IN DLC TO FEC-DEC2.
           MOVE DLC-NUM-MMAV IN DLC TO FEC-MEC2.
           MOVE DLC-NUM-SMAV IN DLC TO FEC-SEC2.
           MOVE DLC-NUM-AMAV IN DLC TO FEC-AEC2.

           MOVE FEC-FORM-FEC        TO FEC-FORM.
           MOVE FEC-DIF-MES         TO FEC-CMND.
           PERFORM CAL-FEC.
           IF FEC-NDIA > ZEROES
               ADD 1 TO FEC-NMES.
           MOVE FEC-NMES                 TO RCC-COD-PLZO IN RCC.

      *TASA DEL CREDITO
           MOVE ORN-SGV-TINT IN ORN TO RCC-SGV-TINT IN RCC.

      *MONTO COMISION
           MOVE ZEROES              TO RCC-VAL-COMI IN RCC.

      *MONTO LIQUIDO
           IF OPC-SGV-LIQU IN OPC NOT > ZEROES
               MOVE ZEROES TO RCC-VAL-LIQU IN RCC
           ELSE
               MOVE OPC-SGV-LIQU IN OPC TO RCC-VAL-LIQU IN RCC.

      *

      *MONTO CUOTA
      *     03  RCC-VAL-CUOT                     PIC 9(13).
            MOVE ZEROES TO RCC-VAL-CUOT IN RCC.
            MOVE ZEROES TO RCC-FEC-FPVC IN RCC.
            PERFORM OBT-MNTO-CUOTA.

      *
      *    Fecha primer Vencimiento
      *     03  RCC-FEC-FPVC.
      *         05  RCC-NUM-SPVC                 PIC 9(02).
      *         05  RCC-NUM-APVC                 PIC 9(02).
      *         05  RCC-NUM-MPVC                 PIC 9(02).
      *         05  RCC-NUM-DPVC                 PIC 9(02).
      *    MOVE ZEROES TO RCC-FEC-FPVC IN RCC.
      *
      *    Dias atraso primera Operacion
      *     03  RCC-NUM-DMOR                     PIC 9(03).

           IF WSS-FEC-FVEN IN WSS-VARI = ZEROES
               MOVE ZEROES TO RCC-NUM-DMOR IN RCC
               GO TO CON-NUM-DMOR.
           MOVE WSS-NUM-DVEN IN WSS-VARI  TO FEC-DEC1.
           MOVE WSS-NUM-MVEN IN WSS-VARI  TO FEC-MEC1.
           MOVE WSS-NUM-SVEN IN WSS-VARI  TO FEC-SEC1.
           MOVE WSS-NUM-AVEN IN WSS-VARI  TO FEC-AEC1.

           MOVE WSS-NUM-DCIE IN WSS-VARI  TO FEC-DEC2.
           MOVE WSS-NUM-MCIE IN WSS-VARI  TO FEC-MEC2.
           MOVE WSS-NUM-SCIE IN WSS-VARI  TO FEC-SEC2.
           MOVE WSS-NUM-ACIE IN WSS-VARI  TO FEC-AEC2.

           MOVE FEC-FORM-FEC        TO FEC-FORM.
           MOVE FEC-DIF-DIA         TO FEC-CMND.
           PERFORM CAL-FEC.
           IF NOT FEC-STAT-OKS
               MOVE ZEROES TO FEC-NDIA.
           MOVE FEC-NDIA TO RCC-NUM-DMOR IN RCC.
       CON-NUM-DMOR.

      *
      *Clasificacion del Deudor
           MOVE SPACES         TO RCC-IND-CLASI IN RCC.
      *
      *    Porcentaje de Perdida
           MOVE ZEROES         TO RCC-VAL-PPER IN RCC.
      *
      *    Saldo en cuenta activo
           MOVE ZEROES         TO RCC-VAL-CACT IN RCC.
      *
      *    Saldo en cuenta de Orden
           MOVE ZEROES         TO RCC-VAL-CORD IN RCC.


      *    Cobranza Judicial
           IF DLC-IND-SCBZ IN DLC = 'JUDIC'
               MOVE 1 TO RCC-IND-JUDI IN RCC
           ELSE
               MOVE ZEROES           TO RCC-IND-JUDI IN RCC.
      *
      *    Clasificacion Operacion Anterior
           MOVE SPACES           TO RCC-IND-CLAN IN RCC.
      *
      *    Tipo de Garantia
      *           03  RCC-COD-GARA                     pic 9(02).
           MOVE 80     TO RCC-COD-GARA IN RCC.
           PERFORM OBT-COD-GARA.


      *MONTO de cuotas atrasadas
           PERFORM OBT-CUOT-ATRAS.
           MOVE ORN-CIC-IOPC IN ORN TO OPC-CIC-IOPC IN OPC.
           MOVE WSS-VAL-SFIN  TO RCC-NUM-CATR IN RCC.
      *    Numero de cuotas pagadas
           COMPUTE RCC-NUM-CPAG = OPC-NUM-VCOR IN OPS     -
                                  WSS-NUM-VCD IN WSS-VARI -
                                  OPC-NUM-VCVG IN OPS.
      *
      *MONTO RENOVACION
           PERFORM GET-ROV-REN.
           MOVE 'N' TO WSS-EXT-RON.
           IF PAR-I = ZEROES
               PERFORM GET-RON-REN.
           IF WSS-IND-DISP = 'S'
               PERFORM DIS-VEC-ROV.
           MOVE WSS-NUM-OPEX IN WSS-VARI TO RCC-NUM-OPEX IN RCC.
           MOVE WSS-VAL-RENO IN WSS-VARI TO RCC-VAL-RENO IN RCC.
      *OTROS GASTOS
           IF OPC-SGV-LIQU IN OPS NOT > ZEROES
               MOVE OPC-SGV-LIQU IN OPS TO RCC-VAL-GAST IN RCC
           ELSE
               IF WSS-EXT-RON = 'N'
               COMPUTE RCC-VAL-GAST = RCC-VAL-CRED IN RCC -
                                      RCC-VAL-RENO IN RCC -
                                      OPC-SGV-LIQU IN OPS
               ELSE
               COMPUTE RCC-VAL-GAST = RCC-VAL-CRED IN RCC -
                                      OPC-SGV-LIQU IN OPS.
      *
      *DIAS ATRASO OPERACION ANTERIOR Y NUMERO OPERACION ANTERIOR
           PERFORM ANAL-OPE-ANT.
      *    Numero de Renegociaciones
           PERFORM ACT-NRO-RENO.
           IF WSS-IND-DISP = 'S'
               PERFORM DIS-VEC-PAX.
           MOVE FIO-PUT TO FIO-CMND.
           PERFORM COL-FIO-RCC.
           IF FIO-STAT-OKS
               ADD 1 TO WSS-NUM-ROIN.
       NXT-PRO-RENEGO.
           MOVE  FIO-GET-NXT TO FIO-CMND.
           PERFORM COL-FIO-ORN.
           IF FIO-STAT-OKS
               GO TO LUP-PRO-RENEGO.

       FIN-PRO-RENEGO.
           EXIT.
       DIS-VEC-ROV SECTION.
       INI-DIS-VEC-ROV.

           IF PAR-I = ZEROES
               DISPLAY 'NO EXISTE ROV : ' OPC-CIC-IOPC IN OPS
               GO TO FIN-DIS-VEC-ROV.
           MOVE 1 TO PAR-I.
           DISPLAY 'OPC RELACIONADAS A : '  OPC-CIC-IOPC IN OPS.
       NXT-DIS-VEC-ROV.
           IF PAR-IIC-IOPC IN PAR-VEC(PAR-I) = ZEROES
               GO TO FIN-DIS-VEC-ROV.
           DISPLAY 'PAR-CAN ' PAR-CIC-ICAN IN PAR-VEC(PAR-I).
           ADD 1 TO PAR-I.
           GO TO NXT-DIS-VEC-ROV.

       FIN-DIS-VEC-ROV.
           EXIT.

       CLR-VEC-ROV SECTION.
       INI-CLR-VEC-ROV.
           MOVE 1 TO PAR-I.
       NXT-CLR-VEC-ROV.
           IF PAR-I > 40
               GO TO FIN-CLR-VEC-ROV.
           MOVE SPACES TO PAR-CAI-IOPC IN PAR-VEC(PAR-I).
           MOVE ZEROES TO PAR-IIC-IOPC IN PAR-VEC(PAR-I).
           MOVE ZEROES TO PAR-NUM-ICAN IN PAR-VEC(PAR-I).
           MOVE ZEROES TO PAR-FEC-FCAN IN PAR-VEC(PAR-I).
           ADD 1 TO PAR-I.
           GO TO NXT-CLR-VEC-ROV.
       FIN-CLR-VEC-ROV.
           EXIT.
       DIS-VEC-PAX SECTION.
       INI-DIS-VEC-PAX.
           MOVE 1 TO PAR-I.
           DISPLAY 'TODAS LAS OPC RELA A : ' OPC-CIC-IOPC IN OPS.
       NXT-DIS-VEC-PAX.
           IF PAX-IIC-IOPC IN PAX-VEC(PAR-I) = ZEROES OR
              PAR-I > 40
               GO TO FIN-DIS-VEC-PAX.
           DISPLAY 'PAX-ICAN : 'PAX-CIC-ICAN IN PAX-VEC(PAR-I).
           ADD 1 TO PAR-I.
           GO TO NXT-DIS-VEC-PAX.
       FIN-DIS-VEC-PAX.
           EXIT.
       CLOSE-FILE SECTION.
      *------------------
       INI-CLOSE-FILE.
           MOVE FIO-CLO TO FIO-CMND.
           PERFORM COL-FIO-ORN.
           PERFORM COL-FIO-RON.
           PERFORM COL-FIO-RCC.
       FIN-CLOSE-FILE.
           EXIT.

      ******************************************************************
       MUESTRA-ESTADISTICAS SECTION.
      *----------------------------
       INI-MUESTRA-ESTADISTICAS.
           DISPLAY 'ESTADISTICAS.'.
           DISPLAY '-------------'.
           DISPLAY ' '.
           DISPLAY 'REGISTROS ORN LEIDOS           : '
                                 WSS-NUM-RLEI IN WSS-VARI.
           DISPLAY 'REGISTROS RCC INGRESADOS       : '
                                 WSS-NUM-ROIN IN WSS-VARI.
       FIN-MUESTRA-ESTADISTICAS.
           EXIT.


      ******************************************************************
       GET-ROV-REN SECTION.
       INI-GET-ROV-REN.
           MOVE ZEROES              TO PAR-I.
           MOVE ZEROES              TO WSS-VAL-RENO IN WSS-VARI.
           MOVE ZEROES              TO WSS-NUM-OPEX IN WSS-VARI.
           MOVE OPC-CIC-IOPC IN OPC TO ROV-CIC-IOPC IN ROV.
           MOVE LOW-VALUES          TO ROV-KEY-IVCT IN ROV.
           MOVE FIO-GET-NLS TO FIO-CMND.
       CIC-GET-ROV-REN.
           PERFORM COL-FIO-ROV.
           IF NOT FIO-STAT-OKS OR
              OPC-CIC-IOPC IN OPC NOT = ROV-CIC-IOPC IN ROV
               GO TO FIN-GET-ROV-REN.

           IF NOT ( ROV-IIC-IOPV IN ROV > ZEROES AND
                    ROV-NUM-IVCT IN ROV > ZEROES )
               MOVE FIO-GET-NXT TO FIO-CMND
               GO TO CIC-GET-ROV-REN
           ELSE
               MOVE ROV-KEY-IVCT IN ROV TO CAN-KEY-ICAN IN CAN
               MOVE FIO-GET-KEY TO FIO-CMND
               PERFORM COL-FIO-CAN
               IF FIO-STAT-OKS AND
                   ( CAN-MSC-STAT IN CAN = 'C' OR
                     CAN-MSC-STAT IN CAN = 'W' OR 'P' ) OR
                   ( OPC-MSC-STAT IN OPC = 'A' AND
                     CAN-MSC-STAT IN CAN = 'A' )
                       IF OPC-MSC-STAT IN OPC = 'A' AND
                          CAN-MSC-STAT IN CAN = 'A' AND
                          CAN-MSC-CANC IN CAN = 'PTT'
                           MOVE FIO-GET-NXT TO FIO-CMND
                           GO TO CIC-GET-ROV-REN
                       ELSE
                           ADD 1                   TO PAR-I
                           ADD 1                   TO PAR-IMAX
                           MOVE CAN-KEY-ICAN IN CAN TO
                                PAR-CIC-ICAN IN PAR-VARI(PAR-I)
                           MOVE CAN-FEC-FCAN IN CAN TO
                                PAR-FEC-FCAN IN PAR-VARI(PAR-I)
                           ADD 1                   TO
                                       WSS-NUM-OPEX IN WSS-VARI
                           ADD CAN-SGV-TREN IN CAN TO
                                       WSS-VAL-RENO IN WSS-VARI
                           MOVE FIO-GET-NXT TO FIO-CMND
                           GO TO CIC-GET-ROV-REN.
       FIN-GET-ROV-REN.
           EXIT.

       ANAL-OPE-ANT SECTION.
       INI-ANAL-OPE-ANT.
           MOVE SPACES TO RCC-CIC-IANT IN RCC.
           MOVE ZEROES TO RCC-NUM-DAOA IN RCC.
           IF PAR-I = ZEROES
               GO TO FIN-ANAL-OPE-ANT.
           MOVE 1 TO PAR-I.

       LOP-ANAL-OPE-ANT.

           IF PAR-IIC-IOPC IN PAR-VEC(PAR-I) = ZEROES
               GO TO FIN-ANAL-OPE-ANT.

           MOVE PAR-CIC-ICAN IN PAR-VEC(PAR-I) TO RCV-KEY-ICAN IN RCV.
           MOVE SPACES              TO RCV-CIC-IOPV IN RCV.
           MOVE ZEROES              TO RCV-NUM-IVCT IN RCV.
           MOVE FIO-GET-NLS TO FIO-CMND.
           PERFORM COL-FIO-RCV.
           IF NOT (FIO-STAT-OKS AND
              PAR-CIC-ICAN IN PAR-VEC(PAR-I) = RCV-KEY-ICAN IN RCV)
               GO TO NXT-ANAL-OPE-ANT.

           MOVE PAR-CAI-IOPC IN PAR-VEC(PAR-I) TO OPC-CAI-IOPC IN OPC.
           MOVE PAR-IIC-IOPC IN PAR-VEC(PAR-I) TO OPC-IIC-IOPC IN OPC.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM COL-FIO-OPC.
           IF NOT FIO-STAT-OKS
               GO TO NXT-ANAL-OPE-ANT.

           MOVE OPC-CIC-IOPC IN OPC TO VEN-CIC-IOPC IN VEN.

           IF RCV-NUM-IVCT IN RCV = 0
               MOVE OPC-NUM-IVEN IN OPC TO VEN-NUM-IVEN IN VEN
           ELSE
               MOVE RCV-NUM-IVCT IN RCV TO VEN-NUM-IVEN IN VEN.

           MOVE FIO-GET-KEY TO FIO-CMND.

           IF OPC-IND-VSTR IN OPC = 'S'
               PERFORM COL-OBT-VEN
               IF NOT VEN-STAT-OKS
                   GO TO NXT-ANAL-OPE-ANT
               ELSE
                   NEXT SENTENCE
           ELSE
               PERFORM COL-FIO-VEN
               IF NOT FIO-STAT-OKS
                   GO TO NXT-ANAL-OPE-ANT.
           IF PAR-FEC-FCAN IN PAR-VEC(PAR-I) NOT > VEN-FEC-FVEN IN VEN
               MOVE ZEROES TO FEC-NDIA
               GO TO CON-ANAL-OPE-ANT.


           MOVE PAR-NUM-DCAN IN PAR-VEC(PAR-I) TO FEC-DEC2.
           MOVE PAR-NUM-MCAN IN PAR-VEC(PAR-I) TO FEC-MEC2.
           MOVE PAR-NUM-SCAN IN PAR-VEC(PAR-I) TO FEC-SEC2.
           MOVE PAR-NUM-ACAN IN PAR-VEC(PAR-I) TO FEC-AEC2.

           MOVE VEN-NUM-DVEN IN VEN TO FEC-DEC1.
           MOVE VEN-NUM-MVEN IN VEN TO FEC-MEC1.
           MOVE VEN-NUM-SVEN IN VEN TO FEC-SEC1.
           MOVE VEN-NUM-AVEN IN VEN TO FEC-AEC1.

           MOVE FEC-FORM-FEC        TO FEC-FORM.
           MOVE FEC-DIF-DIA         TO FEC-CMND.
           PERFORM CAL-FEC.
           IF NOT FEC-STAT-OKS
               MOVE ZEROES TO FEC-NDIA.

       CON-ANAL-OPE-ANT.

           IF FEC-NDIA NOT <  RCC-NUM-DAOA IN RCC
               MOVE FEC-NDIA TO RCC-NUM-DAOA IN RCC
               MOVE PAR-CAI-IOPC IN PAR-VEC(PAR-I) TO
                                  RCC-CAI-IANT IN RCC
               MOVE PAR-IIC-IOPC IN PAR-VEC(PAR-I) TO
                                  RCC-IIC-IANT IN RCC.

       NXT-ANAL-OPE-ANT.
           ADD 1 TO PAR-I.
           GO TO LOP-ANAL-OPE-ANT.

       FIN-ANAL-OPE-ANT.
           EXIT.

       ACT-NRO-RENO SECTION.
       INI-ACT-NRO-RENO.
           MOVE 1      TO RCC-NUM-IREN IN RCC.
           IF PAR-I = ZEROES OR
              WSS-EXT-RON = 'S'
               GO TO FIN-ACT-NRO-RENO.
           MOVE PAR-VEC TO PAX-VEC.
           MOVE PAR-IMAX TO PAX-I.

           MOVE 1        TO PAR-I.
       LOP-ACT-NRO-RENO.
           IF PAX-IIC-IOPC IN PAX-VEC(PAR-I) = ZEROES
               GO TO FIN-ACT-NRO-RENO.
           MOVE PAX-CAI-IOPC IN PAX-VEC(PAR-I) TO OPC-CAI-IOPC IN OPC.
           MOVE PAX-IIC-IOPC IN PAX-VEC(PAR-I) TO OPC-IIC-IOPC IN OPC.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM COL-FIO-OPC.
           IF NOT FIO-STAT-OKS
               GO TO FIN-ACT-NRO-RENO.
           IF NOT ( OPC-COD-COOC IN OPC = 'CON310' OR
                    OPC-COD-COOC IN OPC = 'CON007' OR
                    OPC-COD-COOC IN OPC = 'CON012' OR
                    OPC-COD-COOC IN OPC = 'CON016' OR
                    OPC-COD-COOC IN OPC = 'CON509' OR
                    OPC-COD-COOC IN OPC = 'CON614' )
                     ADD 1 TO PAR-I
                     GO TO LOP-ACT-NRO-RENO.
           PERFORM GET-ROV-REN-ESP.
           IF WSS-EXT-REN = 'S'
               ADD 1 TO RCC-NUM-IREN IN RCC.
           ADD 1 TO PAR-I.
           GO TO LOP-ACT-NRO-RENO.
       FIN-ACT-NRO-RENO.
           EXIT.

       OBT-CUOT-ATRAS SECTION.
       INI-OBT-CUOT-ATRAS.
           MOVE ZEROES                  TO WSS-NUM-VCD IN WSS-VARI.
           MOVE ZEROES                  TO RCC-NUM-CIMP IN RCC.
           MOVE ZEROES TO WSS-VAL-SFIN IN WSS-VARI.
           MOVE OPC-CIC-IOPC IN OPC TO VEN-CIC-IOPC IN VEN.
           IF OPC-IND-VSTR IN OPC NOT = 'S'
               MOVE OPC-NUM-IVEN IN OPC TO VEN-NUM-IVEN IN VEN
           ELSE
               MOVE 1                   TO VEN-NUM-IVEN IN VEN.
           MOVE FIO-GET-NLS TO FIO-CMND.
        LOP-OBT-CUOT-ATRAS.
           PERFORM COL-FIO-VEN.
           IF NOT ( FIO-STAT-OKS AND
              OPC-CIC-IOPC IN OPC = VEN-CIC-IOPC IN VEN )
               GO TO NXT-OBT-CUOT-ATRAS.

           IF VEN-FEC-FVEN IN VEN > WSS-FEC-FCIE
               GO TO NXT-OBT-CUOT-ATRAS.

           PERFORM OBT-VCAM-FVEN.

           COMPUTE WSS-VAL-SFIN IN WSS-VARI ROUNDED =
                                      WSS-VAL-SFIN IN WSS-VARI +
                                      ( VEN-VAL-SFIN IN VEN *
                                        WSS-VAL-UEVE ).

           ADD 1                      TO RCC-NUM-CIMP IN RCC.

           MOVE FIO-GET-NXT TO FIO-CMND.
           GO TO LOP-OBT-CUOT-ATRAS.
       NXT-OBT-CUOT-ATRAS.
      *OBTINE CUOTAS EN CARTERA VENCIDA.
           MOVE OPC-CIC-IOPC IN OPC TO ROV-CIC-IOPV IN ROV.
           MOVE ZEROES              TO ROV-NUM-IVCT IN ROV.
           MOVE FIO-GET-NLS TO FIO-CMND.
       NXT-GET-ROV-VCD.
           MOVE 'ROV-KEY-IVCT'      TO FIO-AKEY.
           PERFORM COL-FIO-ROV.
           IF NOT ( FIO-STAT-OKS AND
              OPC-CIC-IOPC IN OPC = ROV-CIC-IOPV IN ROV )
               GO TO FIN-OBT-CUOT-ATRAS.
           MOVE ROV-CIC-IOPC IN ROV TO OPC-CIC-IOPC IN OPC.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM COL-FIO-OPC.

           MOVE ROV-CIC-IOPC IN ROV TO DLC-CIC-IOPC IN DLC.
           MOVE ZEROES              TO DLC-NUM-IDLC IN DLC.
           MOVE FIO-GET-NLS TO FIO-CMND.
           PERFORM COL-FIO-DLC.
           IF NOT ( FIO-STAT-OKS AND
              ROV-CIC-IOPC IN ROV = DLC-CIC-IOPC IN DLC )
               GO TO NXT-GET-ROV-VCD.
           IF NOT ( ( DLC-IND-SCTB IN DLC = 'VCD' OR
                      DLC-IND-SCTB IN DLC = 'CAS' ) AND
                    DLC-VAL-SDLC IN DLC > ZEROES )
               GO TO NXT-GET-ROV-VCD.

           MOVE OPC-FEC-FCOL IN OPC TO VEN-FEC-FVEN IN VEN
           PERFORM OBT-VCAM-FVEN.

           COMPUTE WSS-VAL-SFIN IN WSS-VARI ROUNDED =
                                      WSS-VAL-SFIN IN WSS-VARI +
                                      ( DLC-VAL-SDLC IN DLC *
                                        WSS-VAL-UEVE ).
           ADD 1                      TO RCC-NUM-CIMP IN RCC.
           ADD 1                      TO WSS-NUM-VCD IN WSS-VARI.
           MOVE FIO-GET-NXT TO FIO-CMND.
           GO TO NXT-GET-ROV-VCD.

       FIN-OBT-CUOT-ATRAS.
           EXIT.

       OBT-MNTO-CUOTA SECTION.
       INI-OBT-MNTO-CUOTA.
           MOVE ZEROES TO WSS-FEC-FVEN.
           MOVE OPC-CIC-IOPC IN OPC TO VEN-CIC-IOPC IN VEN.
           MOVE 1                   TO VEN-NUM-IVEN IN VEN.
       NXT-OBT-MNTO-CUOTA.
           MOVE FIO-GET-KEY TO FIO-CMND.
           IF OPC-IND-VSTR IN OPC = 'S'
               PERFORM COL-OBT-VEN
           ELSE
               PERFORM COL-FIO-VEN.
           IF OPC-NUM-IVEN IN OPC = VEN-NUM-IVCT IN VEN
               MOVE VEN-FEC-FVEN IN VEN TO WSS-FEC-FVEN.
           IF VEN-NUM-IVCT IN VEN = 1
               MOVE VEN-FEC-FVEN IN VEN TO RCC-FEC-FPVC IN RCC.
           IF VEN-FEC-FVEN IN VEN > WSS-FEC-FCIE
               GO TO FIN-OBT-MNTO-CUOTA.
           PERFORM OBT-VCAM-FVEN.
           COMPUTE RCC-VAL-CUOT IN RCC ROUNDED =
                             VEN-VAL-FINA IN VEN * WSS-VAL-UEVE.
           ADD 1 TO VEN-NUM-IVEN IN VEN.
           IF VEN-NUM-IVEN IN VEN NOT > OPC-NUM-VCOR IN OPC
               GO TO NXT-OBT-MNTO-CUOTA.
       FIN-OBT-MNTO-CUOTA.
           EXIT.
       ACEPTA-DATOS SECTION.
       INI-ACEPTA-DATOS.
           ACCEPT WSS-FEC-FPRO.
           MOVE WSS-NUM-DPRO TO WSS-NUM-DCIE.
           MOVE WSS-NUM-MPRO TO WSS-NUM-MCIE.
           MOVE WSS-NUM-SPRO TO WSS-NUM-SCIE.
           MOVE WSS-NUM-APRO TO WSS-NUM-ACIE.
           ACCEPT WSS-IND-DISP.
           ACCEPT WSS-IND-PROC.
      *VAL-FEC VALIDA FECHA
           MOVE WSS-FEC-FPRO IN WSS-VARI TO FEC-FECH.
           MOVE FEC-FORM-FEC TO FEC-FORM.
           MOVE FEC-FBLK-N   TO FEC-FBLK.
           MOVE FEC-CHOY-N   TO FEC-CHOY.
           MOVE FEC-VHBL-N   TO FEC-VHBL.
           MOVE FEC-VAL-FEC  TO FEC-CMND.
           PERFORM PRO-FEC.
           IF NOT FEC-STAT-OKS
               MOVE 'COL'          TO MSG-COD-SIST
               MOVE 'FECPROCNEX'   TO MSG-COD-MENS
               PERFORM GET-MSG
               DISPLAY MSG-GLS-DESC   TAB-CIC-CTAB
               PERFORM GNS-PRO-ABT
               GO TO FIN-ACEPTA-DATOS.
      *Valida indicador de display
           IF WSS-IND-DISP IN WSS-VARI NOT = 'S' AND 'N'
               MOVE 'N' TO WSS-IND-DISP IN WSS-VARI.

           IF WSS-IND-PROC IN WSS-VARI NOT = 'P' AND 'R'
               MOVE 'P' TO WSS-IND-PROC IN WSS-VARI.
       FIN-ACEPTA-DATOS.
           EXIT.

       OBT-VCAM-FPRO SECTION.
       INI-OBT-VCAM-FPRO.
           MOVE WSS-COD-UEFE                 TO CAM-COD-VCAM IN CAM(1).
           MOVE WSS-COD-PESO   IN WSS-VARI   TO CAM-COD-VCAM IN CAM(2).
           MOVE WSS-FEC-FCIE   IN WSS-VARI   TO CAM-FEC-FCAM IN CAM(1)
                                                CAM-FEC-FCAM IN CAM(2).
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM TAB-FIO-CAM.
           IF NOT FIO-STAT-OKS
               MOVE 1 TO WSS-VAL-UEFE
           ELSE
               MOVE CAM-SGV-VCAM IN CAM TO WSS-VAL-UEFE.
       FIN-OBT-VCAM-FPRO.
           EXIT.
       OBT-VCAM-FCOL SECTION.
       INI-OBT-VCAM-FCOL.
           MOVE WSS-COD-UEFE                 TO CAM-COD-VCAM IN CAM(1).
           MOVE WSS-COD-PESO   IN WSS-VARI   TO CAM-COD-VCAM IN CAM(2).
           MOVE OPC-FEC-FCOL   IN OPC        TO CAM-FEC-FCAM IN CAM(1)
                                                CAM-FEC-FCAM IN CAM(2).
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM TAB-FIO-CAM.
           IF NOT FIO-STAT-OKS
               MOVE 1 TO WSS-VAL-UEFE
           ELSE
               MOVE CAM-SGV-VCAM IN CAM TO WSS-VAL-UEFE.
       FIN-OBT-VCAM-FCOL.
           EXIT.
       OBT-VCAM-FVEN SECTION.
       INI-OBT-VCAM-FVEN.
           MOVE OPC-COD-VCOC IN OPC          TO CAM-COD-VCAM IN CAM(1).
           MOVE WSS-COD-PESO   IN WSS-VARI   TO CAM-COD-VCAM IN CAM(2).
           MOVE VEN-FEC-FVEN   IN VEN        TO CAM-FEC-FCAM IN CAM(1)
                                                CAM-FEC-FCAM IN CAM(2).
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM TAB-FIO-CAM.
           IF NOT FIO-STAT-OKS
               MOVE 1 TO WSS-VAL-UEVE
           ELSE
               MOVE CAM-SGV-VCAM IN CAM TO WSS-VAL-UEVE.
       FIN-OBT-VCAM-FVEN.
           EXIT.

       OBT-COD-GARA SECTION.
       INI-OBT-COD-GARA.
           IF OPC-IND-GARA IN OPC = '4  '
               GO TO FIN-OBT-COD-GARA.
           IF OPC-IND-GARA IN OPC = '2  ' OR
              OPC-IND-GARA IN OPC = '5  '
               MOVE 50 TO RCC-COD-GARA IN RCC
               GO TO FIN-OBT-COD-GARA.
           IF OPC-IND-GARA IN OPC = '8  '
               MOVE 70 TO RCC-COD-GARA IN RCC
               GO TO FIN-OBT-COD-GARA.
           MOVE DBC-CIC-ICLI IN DBC TO GDD-CIC-ICLI IN GDD.
           MOVE SPACES              TO GAR-NUM-SIS   IN GDD.
           MOVE ZEROES              TO GAR-COD-CRR   IN GDD.
           MOVE FIO-GET-NLS TO FIO-CMND.
       LOP-OBT-COD-GARA.
           PERFORM GAR-FIO-GDD.
           IF NOT ( FIO-STAT-OKS AND
              DBC-CIC-ICLI IN DBC = GDD-CIC-ICLI IN GDD )
               GO TO FIN-OBT-COD-GARA.
           IF OPC-IND-GARA IN OPC = '3  '
               MOVE GAR-NUM-SIS IN GDD TO GAR-NUM-SIS IN GDG
               MOVE GAR-COD-CRR IN GDD TO GAR-COD-CRR IN GDG
               MOVE FIO-GET-KEY TO FIO-CMND
               PERFORM GAR-FIO-GDG
               IF NOT (
                  FIO-STAT-OKS AND
                  GAR-IND-CPL IN GDG = 'S' AND
                  GAR-FEC-ALZ IN GDG NOT > ZEROES
                      )
                   GO TO NXT-OBT-COD-GARA
               ELSE
                   IF GAR-TIP-OPE IN GDG NOT = '951'
                       GO TO NXT-OBT-COD-GARA
                   ELSE
                       IF GAR-COD-GRA IN GDG = '1'
                           MOVE 10 TO RCC-COD-GARA IN RCC
                           GO TO FIN-OBT-COD-GARA
                       ELSE
                       IF GAR-COD-GRA IN GDG = '2'
                           MOVE 20 TO RCC-COD-GARA IN RCC
                           GO TO FIN-OBT-COD-GARA
                       ELSE
                           GO TO NXT-OBT-COD-GARA.

           IF OPC-IND-GARA IN OPC = '1  '
               MOVE GAR-NUM-SIS IN GDD TO GAR-NUM-SIS IN GDG
               MOVE GAR-COD-CRR IN GDD TO GAR-COD-CRR IN GDG
               MOVE FIO-GET-KEY TO FIO-CMND
               PERFORM GAR-FIO-GDG
               IF NOT (
                  FIO-STAT-OKS AND
                  GAR-IND-CPL IN GDG = 'S' AND
                  GAR-FEC-ALZ IN GDG NOT > ZEROES
                      )
                   GO TO NXT-OBT-COD-GARA
               ELSE
                   IF GAR-TIP-OPE IN GDG NOT = '952'
                       GO TO NXT-OBT-COD-GARA
                   ELSE
                       IF GAR-STP-OPE IN GDG = '041' OR
                          GAR-STP-OPE IN GDG = '042' OR
                          GAR-STP-OPE IN GDG = '043' OR
                          GAR-STP-OPE IN GDG = '044' OR
                          GAR-STP-OPE IN GDG = '055' OR
                          GAR-STP-OPE IN GDG = '054' OR
                          GAR-STP-OPE IN GDG = '056' OR
                          GAR-STP-OPE IN GDG = '057'
                           MOVE 30 TO RCC-COD-GARA IN RCC
                           GO TO FIN-OBT-COD-GARA
                       ELSE
                       IF GAR-STP-OPE IN GDG = '080' OR
                          GAR-STP-OPE IN GDG = '094' OR
                          GAR-STP-OPE IN GDG = '194'
                           MOVE 60 TO RCC-COD-GARA IN RCC
                           GO TO FIN-OBT-COD-GARA
                       ELSE
                           MOVE 40 TO RCC-COD-GARA IN RCC
                           GO TO FIN-OBT-COD-GARA.

       NXT-OBT-COD-GARA.
           MOVE FIO-GET-NXT TO FIO-CMND.
           GO TO LOP-OBT-COD-GARA.
       FIN-OBT-COD-GARA.
           EXIT.

       COPY COLBFORN.
       COPY COLBFRCC.
      *COPY COLBFOPC.
      * Modulo FIO para registro OPC en DATACOM, 25-MAR-1993 10:00:37.98
       COL-FIO-OPC SECTION.
       INI-COL-FIO-OPC.
           MOVE ADR-OPC-REQA TO ADR-REQA.
           MOVE 'OPC' TO ADR-TABL IN ADR-REQA.
      *
      * DPM ini  1-JUL-1998 10:01:57
           IF WSS-IND-PROC IN WSS-VARI = 'R'
               MOVE +162 TO ADR-DBID IN ADR-REQA
               GO TO FSR-COL-FIO-OPC.
      * DPM fin  1-JUL-1998

           MOVE 'COL'  TO IDD-SAUX.
           MOVE 'M'    TO IDD-GAUX.
           MOVE SPACES TO IDD-RAUX.
           MOVE 1 TO IDD-IAUX.
           SET IDD-ITBL TO 1.
           SEARCH IDD-VSIS VARYING IDD-IAUX
             AT END
               GO TO GRP-COL-FIO-OPC
             WHEN IDD-DENT( IDD-ITBL ) = IDD-DAUX
               MOVE IDD-IENT( IDD-ITBL) TO ADR-DBID IN ADR-REQA
               GO TO FSR-COL-FIO-OPC.
       GRP-COL-FIO-OPC.
           MOVE SPACES TO IDD-GAUX.
           MOVE 1      TO IDD-IAUX.
           SET IDD-ITBL TO 1.
           SEARCH IDD-VSIS VARYING IDD-IAUX
             AT END
               MOVE 'En COL-FIO-OPC, NO existe en IDD:' TO FIO-MEN1
               MOVE IDD-DAUX                            TO FIO-MEN2
               PERFORM PRG-ABT
             WHEN IDD-DENT( IDD-ITBL ) = IDD-DAUX
               MOVE IDD-IENT( IDD-ITBL) TO ADR-DBID IN ADR-REQA.
       FSR-COL-FIO-OPC.
      *
           MOVE 'OPC00' TO ADR-ELM1.
           MOVE FIO-PROG TO ADR-PROG.
           IF FIO-KDEF = FIO-KDEF-S
               GO TO CON-COL-FIO-OPC.
           MOVE FIO-CMND TO FIO-IAKY.
           IF NOT FIO-IAKY-CON AND
              ( FIO-AKEY = 'OPC-KEY-IOPC' OR FIO-AKEY NOT > SPACES )
               MOVE OPC-KEY-IOPC IN OPC TO ADR-VKEY IN ADR-REQA
               MOVE 'OPC00' TO ADR-DKEY IN ADR-REQA
           ELSE
           IF FIO-AKEY = 'OPC-FEC-FCOL'
               MOVE OPC-FEC-FCOL IN OPC TO ADR-VKEY IN ADR-REQA
               MOVE 'OPC01' TO ADR-DKEY IN ADR-REQA
           ELSE
           IF FIO-AKEY = 'OPC-FEC-FING'
               MOVE OPC-FEC-FING IN OPC TO ADR-VKEY IN ADR-REQA
               MOVE 'OPC02' TO ADR-DKEY IN ADR-REQA
           ELSE
           IF FIO-AKEY = 'OPC-FEC-FINP'
               MOVE OPC-FEC-FINP IN OPC TO ADR-VKEY IN ADR-REQA
               MOVE 'OPC03' TO ADR-DKEY IN ADR-REQA
           ELSE
               MOVE 'En COL-FIO-OPC, key' TO FIO-MENS
               MOVE FIO-AKEY   TO FIO-MENS-KEY
               MOVE 'Invalida' TO FIO-MENS-FIL
               PERFORM PRG-ABT.
       CON-COL-FIO-OPC.
           MOVE OPC TO FIO-DFLD.
           PERFORM GNS-FIO-DTC.
           IF FIO-STAT-OKS
               MOVE FIO-DFLD TO OPC
           ELSE
               MOVE 'COLOPC' TO FIO-MEN2
               IF FIO-STAT-FTL
                   PERFORM PRG-ABT.
           MOVE SPACES   TO FIO-AKEY.
           MOVE FIO-KDEF-N TO FIO-KDEF.
           MOVE ADR-REQA TO ADR-OPC-REQA.
       FIN-COL-FIO-OPC.
           EXIT.
      *COPY COLBFDLC.
      * Modulo FIO para registro DLC en DATACOM, 25-MAR-1993 09:59:30.49
       COL-FIO-DLC SECTION.
       INI-COL-FIO-DLC.
           MOVE ADR-DLC-REQA TO ADR-REQA.
           MOVE 'DLC' TO ADR-TABL IN ADR-REQA.
      *
      * DPM ini  1-JUL-1998 10:01:57
           IF WSS-IND-PROC IN WSS-VARI = 'R'
               MOVE +162 TO ADR-DBID IN ADR-REQA
               GO TO FSR-COL-FIO-DLC.
      * DPM fin  1-JUL-1998

           MOVE 'COL'  TO IDD-SAUX.
           MOVE 'M'    TO IDD-GAUX.
           MOVE SPACES TO IDD-RAUX.
           MOVE 1 TO IDD-IAUX.
           SET IDD-ITBL TO 1.
           SEARCH IDD-VSIS VARYING IDD-IAUX
             AT END
               GO TO GRP-COL-FIO-DLC
             WHEN IDD-DENT( IDD-ITBL ) = IDD-DAUX
               MOVE IDD-IENT( IDD-ITBL) TO ADR-DBID IN ADR-REQA
               GO TO FSR-COL-FIO-DLC.
       GRP-COL-FIO-DLC.
           MOVE SPACES TO IDD-GAUX.
           MOVE 1      TO IDD-IAUX.
           SET IDD-ITBL TO 1.
           SEARCH IDD-VSIS VARYING IDD-IAUX
             AT END
               MOVE 'En COL-FIO-DLC, NO existe en IDD:' TO FIO-MEN1
               MOVE IDD-DAUX                            TO FIO-MEN2
               PERFORM PRG-ABT
             WHEN IDD-DENT( IDD-ITBL ) = IDD-DAUX
               MOVE IDD-IENT( IDD-ITBL) TO ADR-DBID IN ADR-REQA.
       FSR-COL-FIO-DLC.
      *
           MOVE 'DLC00' TO ADR-ELM1.
           MOVE FIO-PROG TO ADR-PROG.
           IF FIO-KDEF = FIO-KDEF-S
               GO TO CON-COL-FIO-DLC.
           MOVE FIO-CMND TO FIO-IAKY.
           IF NOT FIO-IAKY-CON AND
              ( FIO-AKEY = 'DLC-KEY-IDLC' OR FIO-AKEY NOT > SPACES )
               MOVE DLC-KEY-IDLC IN DLC TO ADR-VKEY IN ADR-REQA
               MOVE 'DLC00' TO ADR-DKEY IN ADR-REQA
           ELSE
           IF FIO-AKEY = 'DLC-IND-SCTB'
               MOVE DLC-IND-SCTB IN DLC TO ADR-VKEY IN ADR-REQA
               MOVE 'DLC01' TO ADR-DKEY IN ADR-REQA
           ELSE
               MOVE 'En COL-FIO-DLC, key' TO FIO-MENS
               MOVE FIO-AKEY   TO FIO-MENS-KEY
               MOVE 'Invalida' TO FIO-MENS-FIL
               PERFORM PRG-ABT.
       CON-COL-FIO-DLC.
           MOVE DLC TO FIO-DFLD.
           PERFORM GNS-FIO-DTC.
           IF FIO-STAT-OKS
               MOVE FIO-DFLD TO DLC
           ELSE
               MOVE 'COLDLC' TO FIO-MEN2
               IF FIO-STAT-FTL
                   PERFORM PRG-ABT.
           MOVE SPACES   TO FIO-AKEY.
           MOVE FIO-KDEF-N TO FIO-KDEF.
           MOVE ADR-REQA TO ADR-DLC-REQA.
       FIN-COL-FIO-DLC.
           EXIT.
      *COPY COLBFVEN.
      * Modulo FIO para registro VEN en DATACOM, 25-MAR-1993 10:01:59.98
       COL-FIO-VEN SECTION.
       INI-COL-FIO-VEN.
           MOVE ADR-VEN-REQA TO ADR-REQA.
           MOVE 'VEN' TO ADR-TABL IN ADR-REQA.

      * DPM ini  1-JUL-1998 10:01:57
           IF WSS-IND-PROC IN WSS-VARI = 'R'
               MOVE +162 TO ADR-DBID IN ADR-REQA
               GO TO FSR-COL-FIO-VEN.
      * DPM fin  1-JUL-1998

           MOVE 'COL'  TO IDD-SAUX.
           MOVE 'M'    TO IDD-GAUX.
           MOVE SPACES TO IDD-RAUX.
           MOVE 1 TO IDD-IAUX.
           SET IDD-ITBL TO 1.
           SEARCH IDD-VSIS VARYING IDD-IAUX
             AT END
               GO TO GRP-COL-FIO-VEN
             WHEN IDD-DENT( IDD-ITBL ) = IDD-DAUX
               MOVE IDD-IENT( IDD-ITBL) TO ADR-DBID IN ADR-REQA
               GO TO FSR-COL-FIO-VEN.
       GRP-COL-FIO-VEN.
           MOVE SPACES TO IDD-GAUX.
           MOVE 1      TO IDD-IAUX.
           SET IDD-ITBL TO 1.
           SEARCH IDD-VSIS VARYING IDD-IAUX
             AT END
               MOVE 'En COL-FIO-VEN, NO existe en IDD:' TO FIO-MEN1
               MOVE IDD-DAUX                            TO FIO-MEN2
               PERFORM PRG-ABT
             WHEN IDD-DENT( IDD-ITBL ) = IDD-DAUX
               MOVE IDD-IENT( IDD-ITBL) TO ADR-DBID IN ADR-REQA.
       FSR-COL-FIO-VEN.
      *
           MOVE 'VEN00' TO ADR-ELM1.
           MOVE FIO-PROG TO ADR-PROG.
           IF FIO-KDEF = FIO-KDEF-S
               GO TO CON-COL-FIO-VEN.
           MOVE FIO-CMND TO FIO-IAKY.
           IF NOT FIO-IAKY-CON AND
              ( FIO-AKEY = 'VEN-KEY-IVEN' OR FIO-AKEY NOT > SPACES )
               MOVE VEN-KEY-IVEN IN VEN TO ADR-VKEY IN ADR-REQA
               MOVE 'VEN00' TO ADR-DKEY IN ADR-REQA
           ELSE
           IF FIO-AKEY = 'VEN-FEC-FVEN'
               MOVE VEN-FEC-FVEN IN VEN TO ADR-VKEY IN ADR-REQA
               MOVE 'VEN01' TO ADR-DKEY IN ADR-REQA
           ELSE
           IF FIO-AKEY = 'VEN-FEC-FIMV'
               MOVE VEN-FEC-FIMV IN VEN TO ADR-VKEY IN ADR-REQA
               MOVE 'VEN02' TO ADR-DKEY IN ADR-REQA
           ELSE
           IF FIO-AKEY = 'VEN-IND-SCTB'
               MOVE VEN-IND-SCTB IN VEN TO ADR-VKEY IN ADR-REQA
               MOVE 'VEN03' TO ADR-DKEY IN ADR-REQA
           ELSE
               MOVE 'En COL-FIO-VEN, key' TO FIO-MENS
               MOVE FIO-AKEY   TO FIO-MENS-KEY
               MOVE 'Invalida' TO FIO-MENS-FIL
               PERFORM PRG-ABT.
       CON-COL-FIO-VEN.
           MOVE VEN TO FIO-DFLD.
           PERFORM GNS-FIO-DTC.
           IF FIO-STAT-OKS
               MOVE FIO-DFLD TO VEN
           ELSE
               MOVE 'COLVEN' TO FIO-MEN2
               IF FIO-STAT-FTL
                   PERFORM PRG-ABT.
           MOVE SPACES   TO FIO-AKEY.
           MOVE FIO-KDEF-N TO FIO-KDEF.
           MOVE ADR-REQA TO ADR-VEN-REQA.
       FIN-COL-FIO-VEN.
           EXIT.
       COPY COLBFROV.
       COPY COLBFRON.
      *COPY COLBFCAN.
      * Modulo FIO para registro CAN en DATACOM, 25-MAR-1993 09:57:15.45
       COL-FIO-CAN SECTION.
       INI-COL-FIO-CAN.
           MOVE ADR-CAN-REQA TO ADR-REQA.
           MOVE 'CAN' TO ADR-TABL IN ADR-REQA.
      *
      * DPM ini  1-JUL-1998 10:01:57
           IF WSS-IND-PROC IN WSS-VARI = 'R'
               MOVE +162 TO ADR-DBID IN ADR-REQA
               GO TO FSR-COL-FIO-CAN.
      * DPM fin  1-JUL-1998

           MOVE 'COL'  TO IDD-SAUX.
           MOVE 'M'    TO IDD-GAUX.
           MOVE SPACES TO IDD-RAUX.
           MOVE 1 TO IDD-IAUX.
           SET IDD-ITBL TO 1.
           SEARCH IDD-VSIS VARYING IDD-IAUX
             AT END
               GO TO GRP-COL-FIO-CAN
             WHEN IDD-DENT( IDD-ITBL ) = IDD-DAUX
               MOVE IDD-IENT( IDD-ITBL) TO ADR-DBID IN ADR-REQA
               GO TO FSR-COL-FIO-CAN.
       GRP-COL-FIO-CAN.
           MOVE SPACES TO IDD-GAUX.
           MOVE 1      TO IDD-IAUX.
           SET IDD-ITBL TO 1.
           SEARCH IDD-VSIS VARYING IDD-IAUX
             AT END
               MOVE 'En COL-FIO-CAN, NO existe en IDD:' TO FIO-MEN1
               MOVE IDD-DAUX                            TO FIO-MEN2
               PERFORM PRG-ABT
             WHEN IDD-DENT( IDD-ITBL ) = IDD-DAUX
               MOVE IDD-IENT( IDD-ITBL) TO ADR-DBID IN ADR-REQA.
       FSR-COL-FIO-CAN.
      *
           MOVE 'CAN00' TO ADR-ELM1.
           MOVE FIO-PROG TO ADR-PROG.
           IF FIO-KDEF = FIO-KDEF-S
               GO TO CON-COL-FIO-CAN.
           MOVE FIO-CMND TO FIO-IAKY.
           IF NOT FIO-IAKY-CON AND
              ( FIO-AKEY = 'CAN-KEY-ICAN' OR FIO-AKEY NOT > SPACES )
               MOVE CAN-KEY-ICAN IN CAN TO ADR-VKEY IN ADR-REQA
               MOVE 'CAN00' TO ADR-DKEY IN ADR-REQA
           ELSE
           IF FIO-AKEY = 'CAN-FEC-FCAN'
               MOVE CAN-FEC-FCAN IN CAN TO ADR-VKEY IN ADR-REQA
               MOVE 'CAN01' TO ADR-DKEY IN ADR-REQA
           ELSE
           IF FIO-AKEY = 'CAN-FEC-FEGR'
               MOVE CAN-FEC-FEGR IN CAN TO ADR-VKEY IN ADR-REQA
               MOVE 'CAN02' TO ADR-DKEY IN ADR-REQA
           ELSE
           IF FIO-AKEY = 'CAN-FEC-FOUT'
               MOVE CAN-FEC-FOUT IN CAN TO ADR-VKEY IN ADR-REQA
               MOVE 'CAN03' TO ADR-DKEY IN ADR-REQA
           ELSE
               MOVE 'En COL-FIO-CAN, key' TO FIO-MENS
               MOVE FIO-AKEY   TO FIO-MENS-KEY
               MOVE 'Invalida' TO FIO-MENS-FIL
               PERFORM PRG-ABT.
       CON-COL-FIO-CAN.
           MOVE CAN TO FIO-DFLD.
           PERFORM GNS-FIO-DTC.
           IF FIO-STAT-OKS
               MOVE FIO-DFLD TO CAN
           ELSE
               MOVE 'COLCAN' TO FIO-MEN2
               IF FIO-STAT-FTL
                   PERFORM PRG-ABT.
           MOVE SPACES   TO FIO-AKEY.
           MOVE FIO-KDEF-N TO FIO-KDEF.
           MOVE ADR-REQA TO ADR-CAN-REQA.
       FIN-COL-FIO-CAN.
           EXIT.
      *COPY COLBFRCV.
      * Modulo FIO para registro RCV en DATACOM, 25-MAR-1993 10:01:20.34
       COL-FIO-RCV SECTION.
       INI-COL-FIO-RCV.
           MOVE ADR-RCV-REQA TO ADR-REQA.
           MOVE 'RCV' TO ADR-TABL IN ADR-REQA.
      * DPM ini  1-JUL-1998 10:01:57
           IF WSS-IND-PROC IN WSS-VARI = 'R'
               MOVE +162 TO ADR-DBID IN ADR-REQA
               GO TO FSR-COL-FIO-RCV.
      * DPM fin  1-JUL-1998
      *
           MOVE 'COL'  TO IDD-SAUX.
           MOVE 'M'    TO IDD-GAUX.
           MOVE SPACES TO IDD-RAUX.
           MOVE 1 TO IDD-IAUX.
           SET IDD-ITBL TO 1.
           SEARCH IDD-VSIS VARYING IDD-IAUX
             AT END
               GO TO GRP-COL-FIO-RCV
             WHEN IDD-DENT( IDD-ITBL ) = IDD-DAUX
               MOVE IDD-IENT( IDD-ITBL) TO ADR-DBID IN ADR-REQA
               GO TO FSR-COL-FIO-RCV.
       GRP-COL-FIO-RCV.
           MOVE SPACES TO IDD-GAUX.
           MOVE 1      TO IDD-IAUX.
           SET IDD-ITBL TO 1.
           SEARCH IDD-VSIS VARYING IDD-IAUX
             AT END
               MOVE 'En COL-FIO-RCV, NO existe en IDD:' TO FIO-MEN1
               MOVE IDD-DAUX                            TO FIO-MEN2
               PERFORM PRG-ABT
             WHEN IDD-DENT( IDD-ITBL ) = IDD-DAUX
               MOVE IDD-IENT( IDD-ITBL) TO ADR-DBID IN ADR-REQA.
       FSR-COL-FIO-RCV.
      *
           MOVE 'RCV00' TO ADR-ELM1.
           MOVE FIO-PROG TO ADR-PROG.
           IF FIO-KDEF = FIO-KDEF-S
               GO TO CON-COL-FIO-RCV.
           MOVE FIO-CMND TO FIO-IAKY.
           IF NOT FIO-IAKY-CON AND
              ( FIO-AKEY = 'RCV-KEY-IRCV' OR FIO-AKEY NOT > SPACES )
               MOVE RCV-KEY-IRCV IN RCV TO ADR-VKEY IN ADR-REQA
               MOVE 'RCV00' TO ADR-DKEY IN ADR-REQA
           ELSE
           IF FIO-AKEY = 'RCV-KEY-IVCT'
               MOVE RCV-KEY-IVCT IN RCV TO ADR-VKEY IN ADR-REQA
               MOVE 'RCV01' TO ADR-DKEY IN ADR-REQA
           ELSE
           IF FIO-AKEY = 'RCV-KEY-IDLC'
               MOVE RCV-KEY-IDLC IN RCV TO ADR-VKEY IN ADR-REQA
               MOVE 'RCV02' TO ADR-DKEY IN ADR-REQA
           ELSE
               MOVE 'En COL-FIO-RCV, key' TO FIO-MENS
               MOVE FIO-AKEY   TO FIO-MENS-KEY
               MOVE 'Invalida' TO FIO-MENS-FIL
               PERFORM PRG-ABT.
       CON-COL-FIO-RCV.
           MOVE RCV TO FIO-DFLD.
           PERFORM GNS-FIO-DTC.
           IF FIO-STAT-OKS
               MOVE FIO-DFLD TO RCV
           ELSE
               MOVE 'COLRCV' TO FIO-MEN2
               IF FIO-STAT-FTL
                   PERFORM PRG-ABT.
           MOVE SPACES   TO FIO-AKEY.
           MOVE FIO-KDEF-N TO FIO-KDEF.
           MOVE ADR-REQA TO ADR-RCV-REQA.
       FIN-COL-FIO-RCV.
           EXIT.
      *COPY COLBFEVC.
      * Modulo FIO para registro EVC en DATACOM, 25-MAR-1993 09:59:48.86
       COL-FIO-EVC SECTION.
       INI-COL-FIO-EVC.
           MOVE ADR-EVC-REQA TO ADR-REQA.
           MOVE 'EVC' TO ADR-TABL IN ADR-REQA.
      * DPM ini  1-JUL-1998 10:01:57
           IF WSS-IND-PROC IN WSS-VARI = 'R'
               MOVE +162 TO ADR-DBID IN ADR-REQA
               GO TO FSR-COL-FIO-EVC.
      * DPM fin  1-JUL-1998
      *
           MOVE 'COL'  TO IDD-SAUX.
           MOVE 'M'    TO IDD-GAUX.
           MOVE SPACES TO IDD-RAUX.
           MOVE 1 TO IDD-IAUX.
           SET IDD-ITBL TO 1.
           SEARCH IDD-VSIS VARYING IDD-IAUX
             AT END
               GO TO GRP-COL-FIO-EVC
             WHEN IDD-DENT( IDD-ITBL ) = IDD-DAUX
               MOVE IDD-IENT( IDD-ITBL) TO ADR-DBID IN ADR-REQA
               GO TO FSR-COL-FIO-EVC.
       GRP-COL-FIO-EVC.
           MOVE SPACES TO IDD-GAUX.
           MOVE 1      TO IDD-IAUX.
           SET IDD-ITBL TO 1.
           SEARCH IDD-VSIS VARYING IDD-IAUX
             AT END
               MOVE 'En COL-FIO-EVC, NO existe en IDD:' TO FIO-MEN1
               MOVE IDD-DAUX                            TO FIO-MEN2
               PERFORM PRG-ABT
             WHEN IDD-DENT( IDD-ITBL ) = IDD-DAUX
               MOVE IDD-IENT( IDD-ITBL) TO ADR-DBID IN ADR-REQA.
       FSR-COL-FIO-EVC.
      *
           MOVE 'EVC00' TO ADR-ELM1.
           MOVE FIO-PROG TO ADR-PROG.
           IF FIO-KDEF = FIO-KDEF-S
               GO TO CON-COL-FIO-EVC.
           MOVE FIO-CMND TO FIO-IAKY.
           IF NOT FIO-IAKY-CON AND
              ( FIO-AKEY = 'EVC-KEY-IEVC' OR FIO-AKEY NOT > SPACES )
               MOVE EVC-KEY-IEVC IN EVC TO ADR-VKEY IN ADR-REQA
               MOVE 'EVC00' TO ADR-DKEY IN ADR-REQA
           ELSE
               MOVE 'En COL-FIO-EVC, key' TO FIO-MENS
               MOVE FIO-AKEY   TO FIO-MENS-KEY
               MOVE 'Invalida' TO FIO-MENS-FIL
               PERFORM PRG-ABT.
       CON-COL-FIO-EVC.
           MOVE EVC TO FIO-DFLD.
           PERFORM GNS-FIO-DTC.
           IF FIO-STAT-OKS
               MOVE FIO-DFLD TO EVC
           ELSE
               MOVE 'COLEVC' TO FIO-MEN2
               IF FIO-STAT-FTL
                   PERFORM PRG-ABT.
           MOVE SPACES   TO FIO-AKEY.
           MOVE FIO-KDEF-N TO FIO-KDEF.
           MOVE ADR-REQA TO ADR-EVC-REQA.
       FIN-COL-FIO-EVC.
           EXIT.
       COPY COLBFICG.
       COPY COLBFTOC.

       COPY COLBGVEN.
       COPY COLBGINT.

       COPY GARBFGDD.
       COPY GARBFGDG.
       COPY SGCBFDBC.

       COPY TABBFOFI.
       COPY TABBFUSR.
       COPY TABBFVLR.
       COPY TABBFCAM.


       COPY GNSBBTAB.
       COPY GNSBBMSG.
       COPY GNSBBMSC.
       COPY GNSBFTAB.
       COPY GNSBFMSG.
       COPY GNSBFMSC.

       COPY GNSBGFEC.
       COPY GNSBPFEC.
       COPY GNSBGABT.
       COPY GNSBGDTC.
       COPY GNSBGIDD.
       COPY GNSBGEND.
       COPY GNSBTABT.
       COPY GNSBGPES.
       COPY GNSBGHOY.
       COPY GNSBBSYS.
       GET-ROV-REN-ESP SECTION.
       INI-GET-ROV-REN-ESP.
           MOVE 'N' TO WSS-EXT-REN.
           MOVE OPC-CIC-IOPC IN OPC TO ROV-CIC-IOPC IN ROV.
           MOVE LOW-VALUES          TO ROV-KEY-IVCT IN ROV.
           MOVE FIO-GET-NLS TO FIO-CMND.
       CIC-GET-ROV-REN-ESP.
           PERFORM COL-FIO-ROV.
           IF NOT FIO-STAT-OKS OR
              OPC-CIC-IOPC IN OPC NOT = ROV-CIC-IOPC IN ROV
               GO TO FIN-GET-ROV-REN-ESP.

           IF NOT ( ROV-IIC-IOPV IN ROV > ZEROES AND
                    ROV-NUM-IVCT IN ROV > ZEROES )
               MOVE FIO-GET-NXT TO FIO-CMND
               GO TO CIC-GET-ROV-REN-ESP
           ELSE
               MOVE ROV-KEY-IVCT IN ROV TO CAN-KEY-ICAN IN CAN
               MOVE FIO-GET-KEY TO FIO-CMND
               PERFORM COL-FIO-CAN
               IF FIO-STAT-OKS AND
                   ( CAN-MSC-STAT IN CAN = 'C' OR
                     CAN-MSC-STAT IN CAN = 'W' OR 'P' ) OR
                   ( OPC-MSC-STAT IN OPC = 'A' AND
                     CAN-MSC-STAT IN CAN = 'A' )
                       IF OPC-MSC-STAT IN OPC = 'A' AND
                          CAN-MSC-STAT IN CAN = 'A' AND
                          CAN-MSC-CANC IN CAN = 'PTT'
                           MOVE FIO-GET-NXT TO FIO-CMND
                           GO TO CIC-GET-ROV-REN-ESP
                       ELSE
                           MOVE 'S' TO WSS-EXT-REN
                           ADD 1                   TO PAX-I
                           MOVE CAN-KEY-ICAN IN CAN TO
                                PAX-CIC-ICAN IN PAX-VEC(PAX-I)
                           MOVE CAN-FEC-FCAN IN CAN TO
                                PAX-FEC-FCAN IN PAX-VEC(PAX-I)
                           MOVE FIO-GET-NXT TO FIO-CMND
                           GO TO CIC-GET-ROV-REN-ESP.
       FIN-GET-ROV-REN-ESP.
           EXIT.
       GET-RON-REN SECTION.
       INI-GET-RON-REN.
           MOVE ZEROES              TO PAR-I.
           MOVE ZEROES              TO WSS-VAL-RENO IN WSS-VARI.
           MOVE ZEROES              TO WSS-NUM-OPEX IN WSS-VARI.
           MOVE OPC-CIC-IOPC IN OPC TO RON-CIC-IOPC IN RON.
           MOVE SPACES              TO RON-CIC-IOPV IN RON.
           MOVE ZEROES              TO RON-NUM-ICAN IN RON.
           MOVE FIO-GET-NLS TO FIO-CMND.
       LUP-GET-RON-REN.
           PERFORM COL-FIO-RON.
           IF NOT ( FIO-STAT-OKS AND
              OPC-CIC-IOPC IN OPC = RON-CIC-IOPC IN RON )
               GO TO FIN-GET-RON-REN.

           MOVE 'S' TO WSS-EXT-RON.
           ADD 1                   TO PAR-I.
           ADD 1                   TO PAR-IMAX.
           MOVE RON-CAI-IOPV IN RON                 TO
                PAR-CAI-IOPC IN PAR-VARI(PAR-I).
           MOVE RON-IIC-IOPV IN RON                 TO
                PAR-IIC-IOPC IN PAR-VARI(PAR-I).
           MOVE RON-FEC-FCAN IN RON TO
                    PAR-FEC-FCAN IN PAR-VEC(PAR-I).
           MOVE RON-NUM-ICAN IN RON TO
                    PAR-NUM-ICAN IN PAR-VARI(PAR-I).
           ADD 1                    TO WSS-NUM-OPEX IN WSS-VARI.
           MOVE RCC-VAL-CRED IN RCC TO WSS-VAL-RENO IN WSS-VARI.
           MOVE FIO-GET-NXT TO FIO-CMND.
           GO TO LUP-GET-RON-REN.
       FIN-GET-RON-REN.
           EXIT.
