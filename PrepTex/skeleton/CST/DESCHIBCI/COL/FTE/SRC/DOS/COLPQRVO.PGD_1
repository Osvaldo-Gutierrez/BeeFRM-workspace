       IDENTIFICATION DIVISION.
      *========================
       PROGRAM-ID.   COLPQRVO.
       AUTHOR.       CONSIST.
       DATE-WRITTEN. 30-Dec-94 03:58 PM.

      * NOMBRE PROGRAMA                   COLPQRVO
      * VERSION                           3.1
      * OPCION                            CON
      * ARCHIVO BASE                      COLOPC
      * PANTALLA                          COLRVO
      * INP/OUT                           DATACOM
      * TAMANO COMMAREA                   250


       ENVIRONMENT DIVISION.
      *=====================
       CONFIGURATION SECTION.
      *----------------------
       SPECIAL-NAMES.
               DECIMAL-POINT IS COMMA.

       DATA DIVISION.
      *==============

       WORKING-STORAGE SECTION.
      *------------------------
      * COPY GNSWGSCR.
       COPY GNSWCSCR.
       COPY GNSWVSCR.
      *<<<< MI_COMMAREA
      *>>>>
      *<<<< FIN_SCR_VARI
      *>>>>
       COPY COLWIRVO.

       COPY COLBROPC.


       COPY GNSWVIDD.
       COPY GNSWGRQA.
       COPY GNSWGUIB.
       COPY GNSWGELS.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-OPC-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-TAB-REQA==.
       COPY GNSBRTAB.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-MSC-REQA==.
       COPY GNSBRMSC.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-MSG-REQA==.
       COPY GNSBRMSG.
       COPY GNSWCFIO.
       COPY GNSWVFIO.
       COPY GNSWGFRM.
       COPY GNSWVNUM.
       COPY GNSWCNUM.
       COPY GNSWCVRF.
       COPY GNSWVVRF.
       COPY GNSWGIDC.
       COPY GNSWGSYS.

      *<<<< WSS
       COPY COLBRRVO.
       COPY COLBRRDC.
       COPY SGCBRDBC.
       COPY GNSWGCPT.
       COPY GNSWGFEC.
       COPY GNSWGHOY.
       01  WSS-VARI.
           03 WSS-STAT.
              05 PGM-STAT-RVO.
                 88 PGM-STAT-RVO-NUL    VALUE '  '.
                 07 PGM-STT1-RVO        VALUE '2' PIC X(01).
                    88 PGM-STAT-RVO-OKS VALUE '0'.
                 07 PGM-STT2-RVO        VALUE '3' PIC X(01).
           03 WSS-COD-CAUX.
              05 WSS-COD-TOOC                        PIC X(03).
              05 WSS-COD-AOOC                        PIC X(03).
           03 WSS-CIC-COOC        VALUE SPACES       PIC X(03).
              88 VAL-PTM-CON      VALUE 'CON'.
           03 WSS-CIC-IOPC.
              05 WSS-CAI-IOPC                        PIC X(04).
              05 WSS-IIC-IOPC                        PIC X(08).
           03 WSS-IDD-GAUX                           PIC X(01).
           03 WSS-IFLD                               PIC 9(02).
           03 WSS-IMAX                               PIC 9(02).
      *>>>>
      *<<<< WSS_DTC
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-RVO-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-RDC-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-DBC-REQA==.
      *>>>>
      *<<<< WSS_IBM
      *>>>>
       01  PGM-VARI.
           03 PGM-ICLR                  VALUE ' '       PIC X(01).
           03 PGM-LIMPIAR-TODO          VALUE ' '       PIC X(01).
           03 PGM-LIMPIAR-LLAVES        VALUE 'K'       PIC X(01).
           03 PGM-LIMPIAR-CAMPOS        VALUE 'F'       PIC X(01).
           03 PGM-NO-LIMPIAR-NADA       VALUE 'N'       PIC X(01).
           03 PGM-PROG                                  PIC X(08).
           03 PGM-NTRN                                  PIC X(04).
           03 PGM-STAT.
              05 PGM-STAT-OPC.
                 88 PGM-STAT-OPC-NUL    VALUE '  '.
                 07 PGM-STT1-OPC        VALUE '2' PIC X(01).
                    88 PGM-STAT-OPC-OKS VALUE '0'.
                 07 PGM-STT2-OPC        VALUE '3' PIC X(01).
              05 PGM-STAT-DBC.
                 88 PGM-STAT-DBC-NUL    VALUE '  '.
                 07 PGM-STT1-DBC        VALUE '2' PIC X(01).
                    88 PGM-STAT-DBC-OKS VALUE '0'.
                 07 PGM-STT2-DBC        VALUE '3' PIC X(01).
              05 PGM-STAT-RDC.
                 88 PGM-STAT-RDC-NUL    VALUE '  '.
                 07 PGM-STT1-RDC        VALUE '2' PIC X(01).
                    88 PGM-STAT-RDC-OKS VALUE '0'.
                 07 PGM-STT2-RDC        VALUE '3' PIC X(01).
           03 PGM-SRNF                  VALUE '23'      PIC X(02).
           03 PGM-SOKS                  VALUE '00'      PIC X(02).
           03 PGM-SNUL                  VALUE '  '      PIC X(02).
           03 PGM-SUAR                  VALUE SPACES    PIC X(15).

       LINKAGE SECTION.
      *----------------
       01  DFHCOMMAREA.
           02 FILLER                    PIC X(250).
       COPY GNSLGFIO.

       PROCEDURE DIVISION.
      *===================

       MAIN SECTION.
       INI-MAIN.
           PERFORM INI.
       LUP-MAIN.
           IF SCR-INST = SCR-INST-HCM
                 PERFORM SCR-COM.
           IF SCR-CCPP = 'MOD'
                 PERFORM SCR-MOD
           ELSE
           IF SCR-CCPP = 'ING'
                 PERFORM SCR-ING
           ELSE
           IF SCR-CCPP = 'ACC'
                 PERFORM SCR-ACC
           ELSE
           IF SCR-CCPP = 'ELI'
                 PERFORM SCR-ELI
           ELSE
           IF SCR-CCPP = 'ACT'
                 PERFORM SCR-ACT
           ELSE
           IF SCR-CCPP = 'PGM'
                 PERFORM SCR-PGM
           ELSE
                 MOVE SCR-INST-HCM TO SCR-INST.
      *<<<< FIN_LUP_MAIN
      *>>>>
           GO TO LUP-MAIN.
       FIN-MAIN.
           EXIT.

       INI SECTION.
       INI-INI.
       COPY GNSBGEIB.
      *<<<< PGM_INI
      *>>>>
       COPY GNSBGEDB.
           MOVE LOW-VALUES TO RVO-FLD.
           MOVE LOW-VALUES TO RVO-EDT.
           PERFORM GNS-PRO-RCK.
           PERFORM GNS-BUS-VCA.
           PERFORM GNS-HDL-SYS.
           PERFORM GNS-HDL-FRM.
           MOVE 'COLPQRVO' TO FIO-PROG.
           PERFORM GNS-BUS-IDD.
      *<<<< INI_FIO_IBM
      *>>>>
      *<<<< INI_FIO
      *>>>>
       FIN-INI.
           EXIT.

       COPY GNSBHSYS.
       COPY GNSBHFRM.
       COPY GNSBPRCK.
       COPY GNSBBVCA.
       COPY GNSBBIDD.

       SCR-COM SECTION.
       INI-SCR-COM.
      *<<<< INI_SCR_COM
      *>>>>
           MOVE FRM-CPSF-AEY TO FRM-CPIM-AEY.
           PERFORM PRO-ALL.
           PERFORM SCR-CLRA-RVO.
           PERFORM EDT-KEY-RVO.
           PERFORM EDT-FLD-RVO.
           PERFORM SCR-PUTA.
           MOVE SCR-INST-HCM TO SCR-INST.
           MOVE SCR-CMNP     TO SYS-PROG.
           MOVE SCR-VARI     TO SYS-CMMA.
           MOVE SCR-TCMA     TO SYS-TCMA.
           MOVE SYS-XCTL     TO SYS-CMND.
           PERFORM GNS-PRO-SYS.
       XCT-ERR.
           MOVE 'XCTERR    ' TO MSG-COD-MENS.
           MOVE 'GNS'        TO MSG-COD-SIST.
           PERFORM GET-MSG.
           MOVE MSG-GLS-DESC TO SYS-MEN1.
           MOVE SYS-PROG     TO SYS-MEN2.
           MOVE SYS-ABOR     TO SYS-CMND.
           PERFORM GNS-PRO-SYS.
       COPY GNSBGGBK.
       FIN-SCR-COM.
           EXIT.

       SCR-MOD SECTION.
       INI-SCR-MOD.
      *<<<< INI_SCR_MOD
      *>>>>
           IF SCR-INST = SCR-INST-HKY
               MOVE SCR-INST-GKY TO SCR-INST
               PERFORM HBL-KEY
               PERFORM SCR-DMSG
           ELSE
           IF SCR-INST = SCR-INST-GKY
                PERFORM SCR-KEY
                IF SCR-STAT NOT = SCR-STAT-ABT
                        PERFORM SCR-TRL
                ELSE
                        PERFORM DESSCRTRL
                        GO TO FIN-SCR-MOD
           ELSE
           IF SCR-INST = SCR-INST-GAB
                PERFORM GET-CON
           ELSE
           IF SCR-INST = SCR-INST-BRW
               MOVE SCR-FFLD TO FRM-FFLD
               PERFORM BRW-SCR-MOD.
           PERFORM DESSCRTRL.
      *<<<< PFS_SCR_MOD
      *>>>>
       MSG-SCR-MOD.
           MOVE SPACES TO FRM-MENS.
           PERFORM SCR-MSSG.
       FIN-SCR-MOD.
      *<<<< FIN_SCR_MOD
      *>>>>
           EXIT.

       BRW-SCR-MOD SECTION.
       INI-BRW-SCR-MOD.
      *<<<< BRW_SCR_MOD
      *>>>>
       FIN-BRW-SCR-MOD.
           EXIT.

       SCR-ING SECTION.
       INI-SCR-ING.
      *<<<< INI_SCR_ING
      *>>>>
           IF SCR-INST = SCR-INST-HKY
               MOVE SCR-INST-GKY TO SCR-INST
               PERFORM HBL-IKY
               PERFORM SCR-DMSG
           ELSE
           IF SCR-INST = SCR-INST-GKY
                PERFORM SCR-RST
                PERFORM GET-IKY
                IF NOT FRM-STAT-ABT
                        MOVE SPACES TO FRM-MENS
                        PERFORM FND-KEY
                        IF NOT FIO-STAT-OKS AND
                           FIO-STAT NOT = FIO-STAT-NEX
      *JSS                  PERFORM CLR-FLD-RVO
                            MOVE PGM-LIMPIAR-TODO TO PGM-ICLR
                            PERFORM SCR-TRL
                        ELSE
                        MOVE PGM-LIMPIAR-CAMPOS TO PGM-ICLR
                        IF FRM-MENS NOT > SPACES
                            MOVE 'REGEXI    ' TO MSG-COD-MENS
                            MOVE 'GNS' TO MSG-COD-SIST
                            PERFORM GET-MSG
                            MOVE MSG-GLS-DESC TO FRM-MENS
                            PERFORM SCR-MSSG
                            MOVE SCR-STAT-ABT TO SCR-STAT
                            PERFORM DESSCRTRL
                            GO TO FIN-SCR-ING
                        ELSE
                            PERFORM SCR-MSSG
                            MOVE SCR-STAT-ABT TO SCR-STAT
                            PERFORM DESSCRTRL
                            GO TO FIN-SCR-ING
                ELSE
                        MOVE SPACES TO FRM-MENS
                        PERFORM SCR-MSSG
                        PERFORM DESSCRTRL
                        GO TO FIN-SCR-ING
           ELSE
           IF SCR-INST = SCR-INST-GAB
                PERFORM GET-CON.
           PERFORM DESSCRTRL.
      *<<<< PFS_SCR_ING
      *>>>>
       MSG-SCR-ING.
           MOVE SPACES TO FRM-MENS.
           PERFORM SCR-MSSG.
       FIN-SCR-ING.
      *<<<< FIN_SCR_ING
      *>>>>
           EXIT.

       SCR-ACC SECTION.
       INI-SCR-ACC.
      *<<<< INI_SCR_ACC
      *>>>>
           IF SCR-INST = SCR-INST-HKY
               MOVE SCR-INST-GKY TO SCR-INST
               PERFORM HBL-KEY
               PERFORM SCR-DMSG
           ELSE
           IF SCR-INST = SCR-INST-GKY
                PERFORM SCR-KEY
                IF SCR-STAT NOT = SCR-STAT-ABT
                        PERFORM SCR-TRL
                ELSE
                        PERFORM DESSCRTRL
                        GO TO FIN-SCR-ACC
           ELSE
           IF SCR-INST = SCR-INST-GAB
                PERFORM GET-CON
           ELSE
           IF SCR-INST = SCR-INST-BRW
               MOVE SCR-FFLD TO FRM-FFLD
               PERFORM BRW-SCR-ACC.
           PERFORM DESSCRTRL.
      *<<<< PFS_SCR_ACC
      *>>>>
           MOVE SPACES TO FRM-MENS.
           PERFORM SCR-MSSG.
       FIN-SCR-ACC.
      *<<<< FIN_SCR_ACC
      *>>>>
           EXIT.

       BRW-SCR-ACC SECTION.
       INI-BRW-SCR-ACC.
      *<<<< BRW_SCR_ACC
      *>>>>
       FIN-BRW-SCR-ACC.
           EXIT.

       SCR-ELI SECTION.
       INI-SCR-ELI.
      *<<<< INI_SCR_ELI
      *>>>>
           IF SCR-INST = SCR-INST-HKY
               MOVE SCR-INST-GKY TO SCR-INST
               PERFORM HBL-KEY
               PERFORM SCR-DMSG
           ELSE
           IF SCR-INST = SCR-INST-GKY
                PERFORM SCR-KEY
                IF SCR-STAT NOT = SCR-STAT-ABT
                        PERFORM SCR-TRL
                ELSE
                        PERFORM DESSCRTRL
                        GO TO FIN-SCR-ELI
           ELSE
           IF SCR-INST = SCR-INST-GAB
                PERFORM GET-CON
           ELSE
           IF SCR-INST = SCR-INST-BRW
               MOVE SCR-FFLD TO FRM-FFLD
               PERFORM BRW-SCR-ELI.
           PERFORM DESSCRTRL.
      *<<<< PFS_SCR_ELI
      *>>>>
           MOVE SPACES TO FRM-MENS.
           PERFORM SCR-MSSG.
       FIN-SCR-ELI.
      *<<<< FIN_SCR_ELI
      *>>>>
           EXIT.

       BRW-SCR-ELI SECTION.
       INI-BRW-SCR-ELI.
      *<<<< BRW_SCR_ELI
      *>>>>
       FIN-BRW-SCR-ELI.
           EXIT.

       SCR-ACT SECTION.
       INI-SCR-ACT.
      *<<<< INI_SCR_ACT
      *>>>>
           IF SCR-INST = SCR-INST-HKY
               MOVE SCR-INST-GKY TO SCR-INST
               PERFORM HBL-KEY
               PERFORM SCR-DMSG
           ELSE
           IF SCR-INST = SCR-INST-GKY
                PERFORM SCR-RST
                PERFORM GET-KEY
                IF NOT FRM-STAT-ABT
                        MOVE SPACES TO FRM-MENS
                        PERFORM FND-KEY
                        IF FIO-STAT-OKS
                            MOVE SCR-ACTU-MOD TO SCR-ACTU
                            PERFORM PUT-SCR
                            MOVE PGM-LIMPIAR-TODO TO PGM-ICLR
                            PERFORM SCR-TRL
                        ELSE
                        MOVE PGM-LIMPIAR-CAMPOS TO PGM-ICLR
                        IF FIO-STAT-EOF
                            IF FRM-MENS NOT > SPACES
                                MOVE 'REGEOF    ' TO MSG-COD-MENS
                                MOVE 'GNS' TO MSG-COD-SIST
                                PERFORM GET-MSG
                                MOVE MSG-GLS-DESC TO FRM-MENS
                                PERFORM SCR-MSSG
                                MOVE SCR-STAT-ABT TO SCR-STAT
                                PERFORM DESSCRTRL
                                GO TO FIN-SCR-ACT
                            ELSE
                                PERFORM SCR-MSSG
                                MOVE SCR-STAT-ABT TO SCR-STAT
                                PERFORM DESSCRTRL
                                GO TO FIN-SCR-ACT
                        ELSE
                        IF FIO-STAT = FIO-STAT-NEX
                            IF FRM-MENS NOT > SPACES
                                MOVE 'REGNEX    ' TO MSG-COD-MENS
                                MOVE 'GNS' TO MSG-COD-SIST
                                PERFORM GET-MSG
                                MOVE MSG-GLS-DESC TO FRM-MENS
                                PERFORM SCR-MSSG
                                MOVE SCR-STAT-ABT TO SCR-STAT
                                PERFORM DESSCRTRL
                                GO TO FIN-SCR-ACT
                            ELSE
                                PERFORM SCR-MSSG
                                MOVE SCR-STAT-ABT TO SCR-STAT
                                PERFORM DESSCRTRL
                                GO TO FIN-SCR-ACT
                        ELSE
                            MOVE SCR-ACTU-ING TO SCR-ACTU
      *JSS                  PERFORM CLR-FLD-RVO
                            MOVE PGM-LIMPIAR-TODO TO PGM-ICLR
                            PERFORM SCR-TRL
                ELSE
                        MOVE SPACES TO FRM-MENS
                        PERFORM SCR-MSSG
                        PERFORM DESSCRTRL
                        GO TO FIN-SCR-ACT
           ELSE
           IF SCR-INST = SCR-INST-GAB
                PERFORM GET-CON
           ELSE
           IF SCR-INST = SCR-INST-BRW
               MOVE SCR-FFLD TO FRM-FFLD
               PERFORM BRW-SCR-ACT.
           PERFORM DESSCRTRL.
      *<<<< PFS_SCR_ACT
      *>>>>
           MOVE SPACES TO FRM-MENS.
           PERFORM SCR-MSSG.
       FIN-SCR-ACT.
      *<<<< FIN_SCR_ACT
      *>>>>
           EXIT.

       BRW-SCR-ACT SECTION.
       INI-BRW-SCR-ACT.
      *<<<< BRW_SCR_ACT
      *>>>>
       FIN-BRW-SCR-ACT.
           EXIT.

       SCR-PGM SECTION.
       INI-SCR-PGM.
      *<<<< INI_SCR_PGM
      *>>>>
           IF SCR-INST = SCR-INST-HKY
               MOVE SCR-INST-GKY TO SCR-INST
               PERFORM HBL-KEY
               PERFORM SCR-DMSG
           ELSE
           IF SCR-INST = SCR-INST-GKY
                PERFORM SCR-RST
                PERFORM GET-KEY
                IF FRM-STAT-ABT
                    MOVE SPACES TO FRM-MENS
                    PERFORM SCR-MSSG
                    PERFORM DESSCRTRL
                    GO TO FIN-SCR-PGM
                ELSE
                    MOVE SPACES TO FRM-MENS
                    PERFORM FND-KEY
                    IF FIO-STAT = FIO-STAT-NEX
                        IF FRM-MENS NOT > SPACES
                            MOVE 'REGNEX    ' TO MSG-COD-MENS
                            MOVE 'GNS' TO MSG-COD-SIST
                            PERFORM GET-MSG
                            MOVE MSG-GLS-DESC TO FRM-MENS
                            PERFORM SCR-MSSG
                            MOVE SCR-STAT-ABT TO SCR-STAT
                            PERFORM DESSCRTRL
                            GO TO FIN-SCR-PGM
                        ELSE
                            PERFORM SCR-MSSG
                            MOVE SCR-STAT-ABT TO SCR-STAT
                            PERFORM DESSCRTRL
                            GO TO FIN-SCR-PGM
                    ELSE
                        MOVE PGM-LIMPIAR-TODO TO PGM-ICLR
                        PERFORM SCR-TRL
           ELSE
           IF SCR-INST = SCR-INST-GAB
                PERFORM GET-CON
           ELSE
           IF SCR-INST = SCR-INST-BRW
               MOVE SCR-FFLD TO FRM-FFLD
               PERFORM BRW-SCR-PGM.
           PERFORM DESSCRTRL.
      *<<<< PFS_SCR_PGM
      *>>>>
           MOVE SPACES TO FRM-MENS.
           PERFORM SCR-MSSG.
       FIN-SCR-PGM.
      *<<<< FIN_SCR_PGM
      *>>>>
           EXIT.

       BRW-SCR-PGM SECTION.
       INI-BRW-SCR-PGM.
      *<<<< BRW_SCR_PGM
      *>>>>
       FIN-BRW-SCR-PGM.
           EXIT.

       SCR-DMSG SECTION.
       INI-SCR-DMSG.
           IF PGM-ICLR = PGM-NO-LIMPIAR-NADA
               NEXT SENTENCE
           ELSE
           IF PGM-ICLR = PGM-LIMPIAR-TODO
               PERFORM SCR-CLRA-RVO
               PERFORM EDT-KEY-RVO
               PERFORM EDT-FLD-RVO
           ELSE
           IF PGM-ICLR = PGM-LIMPIAR-LLAVES
               PERFORM CLR-KEY-RVO
               PERFORM EDT-KEY-RVO
           ELSE
               PERFORM CLR-FLD-RVO
               PERFORM EDT-FLD-RVO.
           PERFORM SCR-PUTA.
           PERFORM SCR-EXIT.
       FIN-SCR-DMSG.
           EXIT.

       SCR-KEY SECTION.
       INI-SCR-KEY.
           PERFORM SCR-RST.
           PERFORM GET-KEY.
           IF FRM-STAT-ABT
                   MOVE SPACES TO FRM-MENS
                   PERFORM SCR-MSSG
                   GO TO FIN-SCR-KEY.
       FND-SCR-KEY.
           MOVE SPACES TO FRM-MENS.
           PERFORM FND-KEY.
           IF FIO-STAT-OKS
               PERFORM PUT-SCR
               MOVE PGM-LIMPIAR-TODO TO PGM-ICLR
               GO TO FIN-SCR-KEY.
      *JSS ELSE
      *        PERFORM CLR-FLD-RVO.
       ERR-SCR-KEY.
           MOVE PGM-LIMPIAR-CAMPOS TO PGM-ICLR.
           IF FRM-MENS NOT > SPACES
               IF FIO-STAT-EOF
                   MOVE 'REGEOF    ' TO MSG-COD-MENS
                   MOVE 'GNS' TO MSG-COD-SIST
                   PERFORM GET-MSG
                   MOVE MSG-GLS-DESC TO FRM-MENS
               ELSE
               IF FIO-STAT = FIO-STAT-NEX
                   MOVE 'REGNEX    ' TO MSG-COD-MENS
                   MOVE 'GNS' TO MSG-COD-SIST
                   PERFORM GET-MSG
                   MOVE MSG-GLS-DESC TO FRM-MENS
               ELSE
                   MOVE 'FIOSTAT' TO MSG-COD-TMSG
                   MOVE FIO-STAT  TO MSG-COD-CMSG
                   MOVE 'GNS'     TO MSG-COD-SIST
                   PERFORM GET-MSG
                   MOVE MSG-GLS-DESC TO FRM-MENS.
           PERFORM SCR-MSSG.
           MOVE SCR-STAT-ABT TO SCR-STAT.
       FIN-SCR-KEY.
           EXIT.

       SCR-RST SECTION.
       INI-SCR-RST.
           MOVE SPACES       TO PGM-ICLR.
           MOVE SPACES       TO SCR-ACTU.
           MOVE SCR-STPP     TO SCR-STAT.
           MOVE SCR-MFLD-NOT TO SCR-MFLD.
           MOVE LOW-VALUES   TO RVO-FLD.
      *<<<< SCR_RST
      *>>>>
       FIN-SCR-RST.
           EXIT.

       GET-KEY SECTION.
       INI-GET-KEY.
      *<<<< GET_KEY
      *>>>>
           PERFORM SCR-GKEY.
           IF FRM-STAT-ABT
               MOVE SCR-STAT-ABT TO SCR-STAT.
       FIN-GET-KEY.
           EXIT.

       GET-IKY SECTION.
       INI-GET-IKY.
      *<<<< GET_IKY
      *>>>>
           PERFORM SCR-GIKY.
           IF FRM-STAT-ABT
               MOVE SCR-STAT-ABT TO SCR-STAT.
       FIN-GET-IKY.
           EXIT.

       FND-KEY SECTION.
       INI-FND-KEY.
      *<<<< INI_FND_KEY
      *>>>>
           PERFORM KEY-ALL-RVO.
      *<<<< FND_KEY
      *Busca Credito en Base de VIGENTES
           MOVE 'M' TO WSS-IDD-GAUX IN WSS-VARI.
           MOVE WSS-IDD-GAUX IN WSS-VARI TO IDD-GAUX.
      *>>>>
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM COL-FIO-OPC.
           MOVE FIO-STAT TO PGM-STAT-OPC.
      *<<<< FIN_FND_KEY
      *Busca Credito en Base de NO VIGENTES
      *     IF NOT FIO-STAT-OKS
           IF NOT PGM-STAT-OPC-OKS
               MOVE 'T' TO WSS-IDD-GAUX IN WSS-VARI
               MOVE WSS-IDD-GAUX IN WSS-VARI TO IDD-GAUX
               MOVE FIO-GET-KEY TO FIO-CMND
               PERFORM COL-FIO-OPC
               MOVE FIO-STAT TO PGM-STAT-OPC
      *         IF NOT FIO-STAT-OKS
               IF NOT PGM-STAT-OPC-OKS
                   MOVE 'COL'        TO MSG-COD-SIST
                   MOVE 'OPC    NEX' TO MSG-COD-MENS
                   PERFORM GET-MSG
                   MOVE MSG-GLS-DESC TO FRM-MENS
                   MOVE SCR-STAT-CON TO SCR-STAT
                   MOVE '00'         TO FIO-STAT
                   GO TO FIN-FND-KEY.

      *Valida Credito este Activado
           IF OPC-MSC-STAT IN OPC NOT = 'A'
               MOVE 'COL'          TO MSG-COD-SIST
               MOVE 'OPC    NOACA' TO MSG-COD-MENS
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS
               MOVE SCR-STAT-CON TO SCR-STAT
               MOVE '00'         TO FIO-STAT
               GO TO FIN-FND-KEY.

      *Valida Credito sea de Consumo
           MOVE 'COL'               TO TAB-COD-SIST.
           MOVE 'AUX'               TO TAB-COD-TTAB IN TAB.
           MOVE OPC-COD-COOC IN OPC TO TAB-COD-CTAB IN TAB.
           PERFORM VAL-COD.
           IF MSG-COD-MENS NOT = 'COD    NEX' AND
              OPC-COD-COOC IN OPC > SPACES
               MOVE TAB-CIC-CTAB IN TAB TO WSS-CIC-COOC IN WSS-VARI
               IF NOT VAL-PTM-CON
                   MOVE 'CREDITO NO ES DE CONSUMO' TO FRM-MENS
                   MOVE SCR-STAT-CON               TO SCR-STAT
                   MOVE '00'                       TO FIO-STAT
                   GO TO FIN-FND-KEY
               ELSE
                   NEXT SENTENCE
           ELSE
               MOVE 'COL'        TO MSG-COD-SIST
               MOVE 'AUXCOOCNEX' TO MSG-COD-MENS
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS
               MOVE SCR-STAT-CON TO SCR-STAT
               MOVE '00'         TO FIO-STAT
               GO TO FIN-FND-KEY.

      *Busca Relacion Deudor Credito
           MOVE OPC-CAI-IOPC IN OPC TO RDC-CAI-IOPC IN RDC.
           MOVE OPC-IIC-IOPC IN OPC TO RDC-IIC-IOPC IN RDC.
           MOVE ZEROES              TO RDC-NUM-IDLC IN RDC.
           MOVE WSS-IDD-GAUX IN WSS-VARI TO IDD-GAUX.
           MOVE 'RDC-KEY-IDLC' TO FIO-AKEY.
           MOVE FIO-GET-KEY    TO FIO-CMND.
           PERFORM COL-FIO-RDC.
           MOVE FIO-STAT TO PGM-STAT-RDC.
      *     IF NOT FIO-STAT-OKS OR
           IF NOT PGM-STAT-RDC-OKS
               MOVE 'COL'          TO MSG-COD-SIST
               MOVE 'OPC    NORDC' TO MSG-COD-MENS
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS
               MOVE SCR-STAT-CON TO SCR-STAT
               MOVE '00'         TO FIO-STAT
               GO TO FIN-FND-KEY.

      *Busca Deudor Credito
           MOVE RDC-CAI-ICLI IN RDC TO DBC-CAI-ICLI IN DBC.
           MOVE RDC-IIC-ICLI IN RDC TO DBC-IIC-ICLI IN DBC.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM SGC-FIO-DBC.
           MOVE FIO-STAT TO PGM-STAT-DBC.
      *     IF NOT FIO-STAT-OKS
           IF NOT PGM-STAT-DBC-OKS
               MOVE 'COL'          TO MSG-COD-SIST
               MOVE 'CICICLINOSGC' TO MSG-COD-MENS
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS
               MOVE SCR-STAT-CON TO SCR-STAT
               MOVE '00'         TO FIO-STAT
               GO TO FIN-FND-KEY.

           MOVE DBC-GLS-NOMC IN DBC TO CPT-STRN.
           PERFORM CPT-BLKS.
           MOVE CPT-STRN TO DBC-GLS-NOMC IN DBC.

       RVO-FIN-FND-KEY.
      *Busca Relacion Credito Original con Credito en Cartera Vencida
           MOVE OPC-CIC-IOPC IN OPC TO RVO-CIC-IOPC IN RVO.
           MOVE RVO-CIC-IOPC IN RVO TO WSS-CIC-IOPC IN WSS-VARI.
           MOVE SPACES              TO RVO-CIC-IVCD IN RVO.
           MOVE FIO-GET-NLS TO FIO-CMND.
           PERFORM COL-FIO-RVO.
           IF NOT ( FIO-STAT-OKS AND
                    RVO-CIC-IOPC IN RVO = OPC-CIC-IOPC IN OPC )
               IF SCR-CMND = 'ACT'
                   MOVE '00' TO FIO-STAT
                   GO TO FIN-FND-KEY
               ELSE
                   MOVE 'COL'          TO MSG-COD-SIST
                   MOVE 'RVO    NOVCD' TO MSG-COD-MENS
                   PERFORM GET-MSG
                   MOVE MSG-GLS-DESC TO FRM-MENS
                   MOVE SCR-STAT-CON TO SCR-STAT
                   GO TO FIN-FND-KEY.

      *Carga Vector Relaciones de OPC Original con OPC en Cartera Vcda
      *y Limpia Saldo Vector NO Cargado con Relaciones de RVO
           MOVE SPACES TO MSG-COD-MENS.
           MOVE ZEROES TO WSS-IFLD IN WSS-VARI.
ODJ        MOVE 18     TO WSS-IMAX IN WSS-VARI.
           PERFORM PUT-TAB-RVO.
           IF WSS-IFLD IN WSS-VARI < WSS-IMAX IN WSS-VARI
               ADD  1  TO WSS-IFLD IN WSS-VARI
               PERFORM LIM-RES-LIN UNTIL
                       WSS-IFLD IN WSS-VARI > WSS-IMAX IN WSS-VARI.

           IF MSG-COD-MENS NOT > SPACES
               MOVE FIO-STAT TO PGM-STAT-RVO.

      *Recupera Credito Original
           MOVE WSS-CIC-IOPC IN WSS-VARI TO OPC-CIC-IOPC IN OPC.
           MOVE WSS-IDD-GAUX IN WSS-VARI TO IDD-GAUX.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM COL-FIO-OPC.

           MOVE '00' TO FIO-STAT.
           GO TO FIN-FND-KEY.
      *>>>>
       FIN-FND-KEY.
           EXIT.

       PUT-SCR SECTION.
       INI-PUT-SCR.
      *<<<< PUT_SCR
      *>>>>
           PERFORM PUT-ALL-RVO.
       FIN-PUT-SCR.
           EXIT.

       STP-EXIT SECTION.
       INI-STP-EXIT.
      *<<<< INI_STP_EXIT
      *>>>>
           MOVE SCR-PROG TO PGM-PROG.
           MOVE SCR-NTRN TO PGM-NTRN.

           MOVE SCR-PROV TO SCR-PROG.
           MOVE SCR-NTRV TO SCR-NTRN.

           MOVE PGM-PROG TO SCR-PROV
           MOVE PGM-NTRN TO SCR-NTRV.
      *<<<< FIN_STP_EXIT
      *>>>>
       FIN-STP-EXIT.
           EXIT.

       SCR-EXIT SECTION.
       INI-SCR-EXIT.
           MOVE 'P'      TO SCR-ICMN.
           MOVE SCR-NTRN TO SYS-NTRN.
           MOVE SCR-VARI TO SYS-CMMA.
           MOVE SCR-TCMA TO SYS-TCMA.
           MOVE SYS-RTRN TO SYS-CMND.
           PERFORM GNS-PRO-SYS.
       FIN-SCR-EXIT.
           EXIT.

       SCR-PUTA SECTION.
       INI-SCR-PUTA.
           MOVE SCR-NMAP TO FRM-NAME.
           MOVE SCR-NLIB TO FRM-NLIB.
           MOVE RVO-FLD TO FRM-DFLD.
           MOVE FRM-PUT-ALL TO FRM-CMND.
           PERFORM GNS-PRO-FRM.
       FIN-SCR-PUTA.
           EXIT.

       SCR-MSSG SECTION.
       INI-SCR-MSSG.
           IF FRM-MEN1 NOT > SPACES
               MOVE SPACES TO FRM-MEN1.
           IF FRM-MEN2 NOT > SPACES
               MOVE SPACES TO FRM-MEN2.
           MOVE FRM-MENS TO RVO-GLS-MENS.
       FIN-SCR-MSSG.
           EXIT.

       SCR-GKEY SECTION.
       INI-SCR-GKEY.
           MOVE SCR-NMAP TO FRM-NAME.
           MOVE SCR-NLIB TO FRM-NLIB.
           MOVE FRM-GET-ALL TO FRM-CMND.
           PERFORM GNS-PRO-FRM.
           MOVE SPACES TO FRM-MENS.
           IF NOT ( FRM-FFLD = FRM-FFLD-RET  OR FRM-FFLD-PF10 OR
                               FRM-FFLD-PF12 OR FRM-FFLD-PF3 )
      *<<<< PFS_SCR_GKEY
      *>>>>
               MOVE 'PFSINV    ' TO MSG-COD-MENS
               MOVE 'GNS' TO MSG-COD-SIST
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS
               PERFORM FST-KEY-RVO
               PERFORM SCR-MSSG
               PERFORM SCR-PUTA
               PERFORM SCR-EXIT.
           MOVE FRM-DFLD TO RVO-FLD.
           IF FRM-STAT-ABT
               GO TO FIN-SCR-GKEY.
           MOVE FRM-SUAR-OKS TO FRM-SUAR.
           PERFORM VAL-NUM-KEY-RVO.
           IF FRM-SUAR EQUAL FRM-SUAR-MAL OR FRM-SUAR-CLR
               PERFORM SCR-MSSG
               PERFORM EDT-KEY-RVO
               PERFORM SCR-PUTA
               PERFORM SCR-EXIT.
      *JSS
           PERFORM CLR-FLD-RVO.
      *<<<< SCR_GKEY_VAL_IKY
      *>>>>
           PERFORM VAL-IKY-RVO.
           IF FRM-SUAR EQUAL FRM-SUAR-MAL OR FRM-SUAR-CLR
               GO TO ERR-SCR-GKEY.
      *<<<< SCR_GKEY_VAL_MKY
      *>>>>
           PERFORM VAL-MKY-RVO.
           IF FRM-SUAR EQUAL FRM-SUAR-MAL OR FRM-SUAR-CLR
               GO TO ERR-SCR-GKEY.
      *<<<< SCR_GKEY_VAL_AKY
      *>>>>
           PERFORM VAL-AKY-RVO.
           IF FRM-SUAR EQUAL FRM-SUAR-MAL OR FRM-SUAR-CLR
               GO TO ERR-SCR-GKEY.
      *<<<< SCR_GKEY_VAL_CON_KEY
      *>>>>
           PERFORM VAL-CON-KEY-RVO.
           IF NOT ( FRM-SUAR EQUAL FRM-SUAR-MAL OR FRM-SUAR-CLR )
               GO TO FIN-SCR-GKEY.
           IF FRM-UCUR NOT > SPACES
               PERFORM FST-KEY-RVO.
       ERR-SCR-GKEY.
      *<<<< ERR_SCR_GKEY
      *>>>>
           PERFORM SCR-MSSG.
           PERFORM EDT-KEY-RVO.
           PERFORM SCR-PUTA.
           PERFORM SCR-EXIT.
       FIN-SCR-GKEY.
      *<<<< FIN_SCR_GKEY
      *>>>>
           PERFORM SCR-MSSG.

       SCR-GIKY SECTION.
       INI-SCR-GIKY.
           MOVE SCR-NMAP TO FRM-NAME.
           MOVE SCR-NLIB TO FRM-NLIB.
           MOVE FRM-GET-ALL TO FRM-CMND.
           PERFORM GNS-PRO-FRM.
           MOVE SPACES TO FRM-MENS.
           IF NOT ( FRM-FFLD = FRM-FFLD-RET  OR FRM-FFLD-PF10 OR
                               FRM-FFLD-PF12 OR FRM-FFLD-PF3 )
      *<<<< PFS_SCR_GIKY
      *>>>>
               MOVE 'PFSINV    ' TO MSG-COD-MENS
               MOVE 'GNS' TO MSG-COD-SIST
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS
               PERFORM FST-KEY-RVO
               PERFORM SCR-MSSG
               PERFORM SCR-PUTA
               PERFORM SCR-EXIT.
           MOVE FRM-DFLD TO RVO-FLD.
           IF FRM-STAT-ABT
               GO TO FIN-SCR-GIKY.
           MOVE FRM-SUAR-OKS TO FRM-SUAR.
           PERFORM VAL-NUM-KEY-RVO.
           IF FRM-SUAR EQUAL FRM-SUAR-MAL OR FRM-SUAR-CLR
               PERFORM SCR-MSSG
               PERFORM EDT-IKY-RVO
               PERFORM SCR-PUTA
               PERFORM SCR-EXIT.
      *JSS
           PERFORM CLR-FLD-RVO.
      *<<<< SCR_GIKY_VAL_IKY
      *>>>>
           PERFORM VAL-IKY-RVO.
           IF FRM-SUAR EQUAL FRM-SUAR-MAL OR FRM-SUAR-CLR
               GO TO ERR-SCR-GIKY.
      *<<<< SCR_GIKY_VAL_CON_IKY
      *>>>>
           PERFORM VAL-CON-IKY-RVO.
           IF NOT ( FRM-SUAR EQUAL FRM-SUAR-MAL OR FRM-SUAR-CLR )
               GO TO FIN-SCR-GIKY.
           IF FRM-UCUR NOT > SPACES
               PERFORM FST-KEY-RVO.
       ERR-SCR-GIKY.
      *<<<< ERR_SCR_GIKY
      *>>>>
           PERFORM SCR-MSSG.
           PERFORM EDT-IKY-RVO.
           PERFORM SCR-PUTA.
           PERFORM SCR-EXIT.
       FIN-SCR-GIKY.
      *<<<< FIN_SCR_GIKY
      *>>>>
           PERFORM SCR-MSSG.

       GET-CON SECTION.
       INI-GET-CON.
           MOVE SCR-NMAP TO FRM-NAME.
           MOVE SCR-NLIB TO FRM-NLIB.
           MOVE FRM-GET-ALL TO FRM-CMND.
           PERFORM GNS-PRO-FRM.
           IF NOT ( FRM-FFLD = FRM-FFLD-RET  OR FRM-FFLD-PF10 OR
                               FRM-FFLD-PF12 OR FRM-FFLD-PF3 )
      *<<<< PFS_GET_CON
      *>>>>
               MOVE 'PFSINV    ' TO MSG-COD-MENS
               MOVE 'GNS' TO MSG-COD-SIST
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO RVO-GLS-MEN2
               MOVE SCR-PRMT     TO RVO-GLS-MEN1
               PERFORM FST-MSG
               PERFORM SCR-PUTA
               PERFORM SCR-EXIT.
           MOVE FRM-DFLD TO RVO-FLD.
      *<<<< FIN_GET_CON
      *>>>>
       FIN-GET-CON.
           MOVE SCR-STAT-CON TO SCR-STAT.

       CLR-MSG SECTION.
       INI-CLR-MSG.
           MOVE SPACES TO RVO-GLS-MENS.
       FIN-CLR-MSG.
           EXIT.

       HBL-IKY SECTION.
       INI-HBL-IKY.
      *<<<< INI_HBL_IKY
      *>>>>
           IF SCR-DESDE-CMN
               MOVE RVO-GLS-MENS TO FRM-MENS
               MOVE LOW-VALUES TO RVO-FLD
      * FLB  7-NOV-1994
               PERFORM CLR-KEY-RVO

               IF FRM-MENS < SPACES
                   MOVE LOW-VALUES TO RVO-GLS-MENS
               ELSE
                   MOVE FRM-MENS TO RVO-GLS-MENS.
           MOVE FRM-CPSF-AEY TO FRM-CPIM-AEY.
           PERFORM PRO-MKY-RVO.
           PERFORM PRO-AKY-RVO.
           PERFORM UNP-IKY-RVO.
           PERFORM FST-KEY-RVO.
           MOVE '1' TO FRM-CPIM-AEY.
      *<<<< FIN_HBL_IKY
      *>>>>
       FIN-HBL-IKY.
           EXIT.

       HBL-KEY SECTION.
       INI-HBL-KEY.
      *<<<< INI_HBL_KEY
      *>>>>
           IF SCR-DESDE-CMN
               MOVE RVO-GLS-MENS TO FRM-MENS
               MOVE LOW-VALUES TO RVO-FLD
               IF FRM-MENS < SPACES
                   MOVE LOW-VALUES TO RVO-GLS-MENS
               ELSE
                   MOVE FRM-MENS TO RVO-GLS-MENS.
           MOVE FRM-CPSF-AEY TO FRM-CPIM-AEY.
           PERFORM UNP-KEY-RVO.
           PERFORM FST-KEY-RVO.
           MOVE '1' TO FRM-CPIM-AEY.
      *<<<< FIN_HBL_KEY
      *>>>>
       FIN-HBL-KEY.
           EXIT.

       HBL-FLD SECTION.
       INI-HBL-FLD.
      *<<<< INI_HBL_FLD
      *>>>>
           PERFORM PRO-IKY-RVO.
           PERFORM PRO-AKY-RVO.
           PERFORM UNP-MKY-RVO.
           PERFORM UNP-FLD-RVO.
           PERFORM FST-FLD-RVO.
      *<<<< FIN_HBL_FLD
      *>>>>
       FIN-HBL-FLD.
           EXIT.

       FST-MSG SECTION.
       INI-FST-MSG.
           MOVE -1 TO RVO-GLS-MENS-LEN.
       FIN-FST-MSG.
           EXIT.

       PRO-ALL SECTION.
       INI-PRO-ALL.
      *<<<< INI_PRO_ALL
      *>>>>
           PERFORM PRO-KEY-RVO.
           PERFORM FST-MSG.
      *<<<< FIN_PRO_ALL
      *>>>>
       FIN-PRO-ALL.
           EXIT.

       SCR-TRL SECTION.
       INI-SCR-TRL.
      *<<<< INI_SCR_TRL
      *>>>>
      *<<<< INI_SCR_TRL_PQ
      *>>>>
           IF FRM-MEN1 NOT > SPACES
               MOVE SCR-PRMT TO FRM-MEN1.
      *<<<< FIN_SCR_TRL
      *>>>>
           IF SCR-STAT = SCR-STAT-MOD
               MOVE SCR-INST-GFL TO SCR-INST
               PERFORM HBL-FLD
               PERFORM SCR-MSSG
               PERFORM EDT-KEY-RVO
               PERFORM EDT-FLD-RVO
               PERFORM SCR-PUTA
               PERFORM STP-EXIT
               PERFORM SCR-EXIT.
           IF SCR-STAT = SCR-STAT-SON
               MOVE SCR-INST-GCS TO SCR-INST
               PERFORM PRO-ALL
               PERFORM SCR-MSSG
               PERFORM EDT-KEY-RVO
               PERFORM EDT-FLD-RVO
               PERFORM SCR-PUTA
               PERFORM STP-EXIT
               PERFORM SCR-EXIT.
      *ASUME SCR-STAT-CON.
           MOVE SCR-STAT-CON TO SCR-STAT.
           MOVE SCR-INST-GAB TO SCR-INST.
      *    MOVE FRM-CPSF-AEY TO FRM-CPIM-AEY.
           PERFORM PRO-ALL.
           PERFORM SCR-MSSG.
           PERFORM EDT-KEY-RVO.
           PERFORM EDT-FLD-RVO.
           PERFORM SCR-PUTA.
           PERFORM SCR-EXIT.
       FIN-SCR-TRL.
           EXIT.

       DESSCRTRL SECTION.
       INI-DESSCRTRL.
           MOVE SCR-VFLD-NOT TO SCR-VFLD.
           MOVE FRM-FFLD TO SCR-FFLD.
       FIN-DESSCRTRL.
           IF SCR-FFLD-PF10 OR SCR-FFLD-PF3
                 MOVE SCR-INST-HCM TO SCR-INST
           ELSE
                 MOVE SCR-INST-HKY TO SCR-INST.
       EXT-DESSCRTRL.
           EXIT.

       COPY COLBQRVO.
       COPY GNSBVNUM.
      * COPY COLBFOPC.
       COPY GNSBFMSG.
       COPY GNSBGSYS.
       COPY GNSBGDTC.
       COPY GNSBGFRM.
       COPY GNSBGMSG.
       COPY GNSBEKEY.
       COPY GNSBIABT.
       COPY GNSBBTAB.
       COPY GNSBFTAB.
       COPY GNSBVIND.
       COPY GNSBVMSC.
       COPY GNSBFMSC.
       COPY GNSBVIDC.
       COPY GNSBPVRF.

      *<<<< EOF
      *Carga Vector Relaciones de OPC Original con OPC en Cartera Vcda
       PUT-TAB-RVO SECTION.
       INI-PUT-TAB-RVO.
           ADD 1 TO WSS-IFLD IN WSS-VARI.
           IF WSS-IFLD IN WSS-VARI > WSS-IMAX IN WSS-VARI
               GO TO FIN-PUT-TAB-RVO.

           MOVE RVO-CIC-IVCD IN RVO TO OPC-CIC-IOPC IN OPC.
           MOVE FIO-GET-KEY TO FIO-CMND.
           MOVE 'M'         TO IDD-GAUX.
           PERFORM COL-FIO-OPC.
           IF NOT FIO-STAT-OKS
      *  Operacion Inexistente
               MOVE 'COL'        TO MSG-COD-SIST
               MOVE 'OPC    NEX' TO MSG-COD-MENS
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS
               MOVE FIO-STAT-NEX TO PGM-STAT-OPC
               MOVE SCR-STAT-CON TO SCR-STAT
               GO TO FIN-PUT-TAB-RVO.

           MOVE OPC-CAI-IOPC IN OPC TO FRM-CAI-IVCD
                                             IN RVO-FLD(WSS-IFLD).
           MOVE OPC-IIC-IOPC IN OPC TO FRM-IIC-IVCD
                                             IN RVO-FLD(WSS-IFLD).
       NXT-PUT-TAB-RVO.
           MOVE FIO-GET-NXT TO FIO-CMND.
           PERFORM COL-FIO-RVO.
           IF FIO-STAT-OKS AND
               RVO-CIC-IOPC IN RVO = WSS-CIC-IOPC IN WSS-VARI
               GO TO INI-PUT-TAB-RVO.
       FIN-PUT-TAB-RVO.
           EXIT.

      *Limpia Vector Relaciones de OPC Original con OPC en Cartera Vcda
       LIM-RES-LIN SECTION.
       INI-LIM-RES-LIN.
           MOVE SPACES TO FRM-CAI-IVCD IN RVO-FLD(WSS-IFLD).
           MOVE ZEROES TO FRM-IIC-IVCD IN RVO-FLD(WSS-IFLD).
           ADD  1  TO WSS-IFLD IN WSS-VARI.
       FIN-LIM-RES-LIN.
           EXIT.

      *Elimina TODAS las Relaciones de OPC Original con OPC en Cartera V
       DEL-RVO SECTION.
       INI-DEL-RVO.
           MOVE OPC-CAI-IOPC IN RVO-FLD TO RVO-CAI-IOPC IN RVO.
           MOVE OPC-IIC-IOPC IN RVO-FLD TO RVO-IIC-IOPC IN RVO.
           MOVE SPACES                  TO RVO-CIC-IVCD IN RVO.
           MOVE FIO-GET-NLS TO FIO-CMND.
       LUP-DEL-RVO.
           PERFORM COL-FIO-RVO.
           IF NOT ( FIO-STAT-OKS AND
                    RVO-CAI-IOPC IN RVO = OPC-CAI-IOPC IN RVO-FLD AND
                    RVO-IIC-IOPC IN RVO = OPC-IIC-IOPC IN RVO-FLD )
               MOVE '00' TO FIO-STAT
               GO TO FIN-DEL-RVO.

           MOVE FIO-GET-KEY-UPD TO FIO-CMND.
           PERFORM COL-FIO-RVO.
           IF NOT FIO-STAT-OKS
               GO TO FIN-DEL-RVO.

           MOVE FIO-DEL TO FIO-CMND.
           PERFORM COL-FIO-RVO.
           IF NOT FIO-STAT-OKS
               MOVE 'COL'          TO MSG-COD-SIST
               MOVE 'RVO    NODEL' TO MSG-COD-MENS
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS
               GO TO FIN-DEL-RVO.

           MOVE FIO-GET-NXT TO FIO-CMND.
           GO TO LUP-DEL-RVO.
       FIN-DEL-RVO.
           EXIT.

      *Graba TODAS las Relaciones de OPC Original con OPC en Cartera Vcd
       PUT-RVO SECTION.
       INI-PUT-RVO.
           IF FRM-CAI-IVCD IN RVO-FLD(WSS-IFLD) NOT > SPACES OR
              FRM-IIC-IVCD IN RVO-FLD(WSS-IFLD) NOT > ZEROES
               GO TO FIN-PUT-RVO.

           MOVE OPC-CAI-IOPC IN RVO-FLD TO RVO-CAI-IOPC IN RVO.
           MOVE OPC-IIC-IOPC IN RVO-FLD TO RVO-IIC-IOPC IN RVO.
           MOVE FRM-CAI-IVCD IN RVO-FLD(WSS-IFLD) TO
                                           RVO-CAI-IVCD IN RVO.
           MOVE FRM-IIC-IVCD IN RVO-FLD(WSS-IFLD) TO
                                           RVO-IIC-IVCD IN RVO.
           MOVE SPACES                  TO RVO-GLS-DISP IN RVO.
           MOVE FIO-PUT TO FIO-CMND.
           PERFORM COL-FIO-RVO.
           IF NOT FIO-STAT-OKS
               MOVE 'COL'          TO MSG-COD-SIST
               MOVE 'RVO    NOPUT' TO MSG-COD-MENS
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MEN1
      *        ERROR INCONSISTENCIA EN LA ELIMINACION : INFORMAR
               MOVE FIO-MENS     TO FRM-MEN2
               MOVE SCR-STAT-CON TO SCR-STAT
               MOVE 13 TO WSS-IFLD IN WSS-VARI
               GO TO FIN-PUT-RVO.
       FIN-PUT-RVO.
           EXIT.

      *COPY COLBFOPC.
      * Se debe ocupar IDD del programa con T=261
      * Modulo FIO para registro OPC en DATACOM, 25-MAR-1993 10:00:37.98
       COL-FIO-OPC SECTION.
       INI-COL-FIO-OPC.
           MOVE ADR-OPC-REQA TO ADR-REQA.
           MOVE 'OPC' TO ADR-TABL IN ADR-REQA.
      *
           MOVE 'COL'  TO IDD-SAUX.
      *DAD MOVE 'M'    TO IDD-GAUX.
           MOVE SPACES TO IDD-RAUX.
           MOVE 1 TO IDD-IAUX.
           SET IDD-ITBL TO 1.
           SEARCH IDD-VSIS VARYING IDD-IAUX
             AT END
               GO TO GRP-COL-FIO-OPC
             WHEN IDD-DENT( IDD-ITBL ) = IDD-DAUX
               MOVE IDD-IENT( IDD-ITBL) TO ADR-DBID IN ADR-REQA
               GO TO FSR-COL-FIO-OPC.
       GRP-COL-FIO-OPC.
           MOVE SPACES TO IDD-GAUX.
           MOVE 1      TO IDD-IAUX.
           SET IDD-ITBL TO 1.
           SEARCH IDD-VSIS VARYING IDD-IAUX
             AT END
               MOVE 'En COL-FIO-OPC, NO existe en IDD:' TO FIO-MEN1
               MOVE IDD-DAUX                            TO FIO-MEN2
               PERFORM PRG-ABT
             WHEN IDD-DENT( IDD-ITBL ) = IDD-DAUX
               MOVE IDD-IENT( IDD-ITBL) TO ADR-DBID IN ADR-REQA.
       FSR-COL-FIO-OPC.
      *
           MOVE 'OPC00' TO ADR-ELM1.
           MOVE FIO-PROG TO ADR-PROG.
           IF FIO-KDEF = FIO-KDEF-S
               GO TO CON-COL-FIO-OPC.
           MOVE FIO-CMND TO FIO-IAKY.
           IF NOT FIO-IAKY-CON AND
              ( FIO-AKEY = 'OPC-KEY-IOPC' OR FIO-AKEY NOT > SPACES )
               MOVE OPC-KEY-IOPC IN OPC TO ADR-VKEY IN ADR-REQA
               MOVE 'OPC00' TO ADR-DKEY IN ADR-REQA
           ELSE
           IF FIO-AKEY = 'OPC-FEC-FCOL'
               MOVE OPC-FEC-FCOL IN OPC TO ADR-VKEY IN ADR-REQA
               MOVE 'OPC01' TO ADR-DKEY IN ADR-REQA
           ELSE
           IF FIO-AKEY = 'OPC-FEC-FING'
               MOVE OPC-FEC-FING IN OPC TO ADR-VKEY IN ADR-REQA
               MOVE 'OPC02' TO ADR-DKEY IN ADR-REQA
           ELSE
           IF FIO-AKEY = 'OPC-FEC-FINP'
               MOVE OPC-FEC-FINP IN OPC TO ADR-VKEY IN ADR-REQA
               MOVE 'OPC03' TO ADR-DKEY IN ADR-REQA
           ELSE
               MOVE 'En COL-FIO-OPC, key' TO FIO-MENS
               MOVE FIO-AKEY   TO FIO-MENS-KEY
               MOVE 'Invalida' TO FIO-MENS-FIL
               PERFORM PRG-ABT.
       CON-COL-FIO-OPC.
           MOVE OPC TO FIO-DFLD.
           PERFORM GNS-FIO-DTC.
           IF FIO-STAT-OKS
               MOVE FIO-DFLD TO OPC
           ELSE
               MOVE 'COLOPC' TO FIO-MEN2
               IF FIO-STAT-FTL
                   PERFORM PRG-ABT.
           MOVE SPACES   TO FIO-AKEY.
           MOVE FIO-KDEF-N TO FIO-KDEF.
           MOVE ADR-REQA TO ADR-OPC-REQA.
       FIN-COL-FIO-OPC.
           EXIT.

      *COPY COLBFRDC.
      * Se debe ocupar IDD del programa con T=261
      * Modulo FIO para registro RDC en DATACOM, 25-MAR-1993 10:01:28.12
       COL-FIO-RDC SECTION.
       INI-COL-FIO-RDC.
           MOVE ADR-RDC-REQA TO ADR-REQA.
           MOVE 'RDC' TO ADR-TABL IN ADR-REQA.
      *
           MOVE 'COL'  TO IDD-SAUX.
      *DAD MOVE 'M'    TO IDD-GAUX.
           MOVE SPACES TO IDD-RAUX.
           MOVE 1 TO IDD-IAUX.
           SET IDD-ITBL TO 1.
           SEARCH IDD-VSIS VARYING IDD-IAUX
             AT END
               GO TO GRP-COL-FIO-RDC
             WHEN IDD-DENT( IDD-ITBL ) = IDD-DAUX
               MOVE IDD-IENT( IDD-ITBL) TO ADR-DBID IN ADR-REQA
               GO TO FSR-COL-FIO-RDC.
       GRP-COL-FIO-RDC.
           MOVE SPACES TO IDD-GAUX.
           MOVE 1      TO IDD-IAUX.
           SET IDD-ITBL TO 1.
           SEARCH IDD-VSIS VARYING IDD-IAUX
             AT END
               MOVE 'En COL-FIO-RDC, NO existe en IDD:' TO FIO-MEN1
               MOVE IDD-DAUX                            TO FIO-MEN2
               PERFORM PRG-ABT
             WHEN IDD-DENT( IDD-ITBL ) = IDD-DAUX
               MOVE IDD-IENT( IDD-ITBL) TO ADR-DBID IN ADR-REQA.
       FSR-COL-FIO-RDC.
      *
           MOVE 'RDC00' TO ADR-ELM1.
           MOVE FIO-PROG TO ADR-PROG.
           IF FIO-KDEF = FIO-KDEF-S
               GO TO CON-COL-FIO-RDC.
           MOVE FIO-CMND TO FIO-IAKY.
           IF NOT FIO-IAKY-CON AND
              ( FIO-AKEY = 'RDC-KEY-IRDC' OR FIO-AKEY NOT > SPACES )
               MOVE RDC-KEY-IRDC IN RDC TO ADR-VKEY IN ADR-REQA
               MOVE 'RDC00' TO ADR-DKEY IN ADR-REQA
           ELSE
           IF FIO-AKEY = 'RDC-KEY-IDLC'
               MOVE RDC-KEY-IDLC IN RDC TO ADR-VKEY IN ADR-REQA
               MOVE 'RDC01' TO ADR-DKEY IN ADR-REQA
           ELSE
               MOVE 'En COL-FIO-RDC, key' TO FIO-MENS
               MOVE FIO-AKEY   TO FIO-MENS-KEY
               MOVE 'Invalida' TO FIO-MENS-FIL
               PERFORM PRG-ABT.
       CON-COL-FIO-RDC.
           MOVE RDC TO FIO-DFLD.
           PERFORM GNS-FIO-DTC.
           IF FIO-STAT-OKS
               MOVE FIO-DFLD TO RDC
           ELSE
               MOVE 'COLRDC' TO FIO-MEN2
               IF FIO-STAT-FTL
                   PERFORM PRG-ABT.
           MOVE SPACES   TO FIO-AKEY.
           MOVE FIO-KDEF-N TO FIO-KDEF.
           MOVE ADR-REQA TO ADR-RDC-REQA.
       FIN-COL-FIO-RDC.
           EXIT.

       COPY COLBFRVO.
       COPY SGCBFDBC.

       COPY GNSBVCOD.
       COPY GNSBVTAB.
       COPY GNSBGCPT.
       COPY GNSBGFEC.
       COPY GNSBGHOY.
      *>>>>
      *<<<< EOF_IBM
      *>>>>
      *<<<< EOF_V31
      *>>>>
      *<<<< EOF_PQ
      *>>>>
