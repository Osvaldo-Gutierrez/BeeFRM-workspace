       IDENTIFICATION DIVISION.
      *========================
       PROGRAM-ID.   COLPQPLC.
       AUTHOR.       CONSIST-CLAUDIO.
       DATE-WRITTEN. 05-SEP-91 12:00 PM.
      *----------------------------*
      * COMPROBANTE DE LIQUIDACION *
      *----------------------------*
       ENVIRONMENT DIVISION.
      *=====================
       CONFIGURATION SECTION.
      *----------------------
       SPECIAL-NAMES.
               DECIMAL-POINT IS COMMA.

       DATA DIVISION.
      *==============

       WORKING-STORAGE SECTION.
      *------------------------
       COPY GNSWVIDD.
       COPY GNSWGRQA.
       COPY GNSWGUIB.
       COPY GNSWGELS.
       COPY GNSWCSCR.
       COPY GNSWVSCR.
       COPY COLWIPLC.
       COPY GNSWGSCA.
       COPY GNSBRTAB.
       COPY GNSBRMSG.
       COPY GNSWCFIO.
       COPY GNSWVFIO.
       COPY GNSWGFRM.
       COPY GNSWVNUM.
       COPY GNSWCNUM.
       COPY GNSWGSYS.

       COPY GNSBRMSC.
       COPY GNSWGPES.
       COPY GNSWGINT.
       COPY COLWGVEN.
       COPY COLWGVCD.
       COPY COLWGVIN.
       COPY COLWGSDP.
       COPY COLWVRDC.
       COPY COLWVRCV.
      *<<<< WSS_IBM
      *    EXEC SQL INCLUDE COLBROPC END-EXEC.
       COPY COLBROPC.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-OPC-REQA==.

      *    EXEC SQL INCLUDE COLBRCOM END-EXEC.
       COPY COLBRCOM.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-COM-REQA==.

      *    EXEC SQL INCLUDE SGCBRDBC END-EXEC.
       COPY SGCBRDBC.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-ADR-REQA==.

      *    EXEC SQL INCLUDE COLBRVEN END-EXEC.
       COPY COLBRVEN.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-VEN-REQA==.

      *    EXEC SQL INCLUDE COLBRDLC END-EXEC.
       COPY COLBRDLC.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-DLC-REQA==.

      *    EXEC SQL INCLUDE COLBRRDC END-EXEC.
       COPY COLBRRDC.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-RDC-REQA==.

      *    EXEC SQL INCLUDE COLBREVC END-EXEC.
       COPY COLBREVC.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-EVC-REQA==.

      *    EXEC SQL INCLUDE COLBRICG END-EXEC.
       COPY COLBRICG.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-ICG-REQA==.

      *    EXEC SQL INCLUDE COLBRRCV END-EXEC.
       COPY COLBRRCV.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-RCV-REQA==.

       COPY TABBRCAM.
       COPY TABBRRNG.
       COPY TABBROFI.
       COPY TABBRVLR.
       COPY COLBRTOC.
       COPY GNSWGHOY.
      *JSS-IBM
       COPY GNSWGFEC.
       COPY GNSWGCPT.
       COPY GNSWGSTR.
       01   WSS-VARI.
            03  WSS-CAM-SGV-VCAM                   PIC S9(06)V9(09).
            03  WSS-TOT-INTE                       PIC S9(13)V9(2).
            03  WSS-GLS-COCR.
                05 WSS-GLS-TOCR                          PIC X(05).
                05 WSS-GLS-FILL             VALUE SPACES PIC X(01).
                05 WSS-GLS-AOCR                          PIC X(05).
            03  WSS-VAL-TPES                             PIC 9(11).
            03  WSS-IND-VCCR                VALUE SPACES PIC X(02).
                 88  MONEDA-NO-VIGENTE      VALUE 'N '.
                 88  MONEDA-NO-EXISTENTE    VALUE ' X'.
                 88  MONEDA-NEX-NVG         VALUE 'NX'.
            03  WSS-IND-VCCR-RED REDEFINES WSS-IND-VCCR.
                 05  WSS-IND-NVIG                        PIC X(01).
                 05  WSS-IND-NEXI                        PIC X(01).
            03  WSS-I                                    PIC 9(04).
            03  WSS-IMAX                    VALUE 7      PIC 9(04).
      *>>>>
       01  PGM-VARI.
           03 PGM-ICLR                  VALUE ' '       PIC X(01).
           03 PGM-LIMPIAR-TODO          VALUE ' '       PIC X(01).
           03 PGM-LIMPIAR-LLAVES        VALUE 'K'       PIC X(01).
           03 PGM-LIMPIAR-CAMPOS        VALUE 'F'       PIC X(01).
           03 PGM-NO-LIMPIAR-NADA       VALUE 'N'       PIC X(01).
           03 PGM-PROG                                  PIC X(08).
           03 PGM-NTRN                                  PIC X(04).
           03 PGM-STAT.
              05 PGM-STAT-OPC           VALUE '23'      PIC X(02).
                 88 PGM-STAT-OPC-OKS    VALUE '00'.
                 88 PGM-STAT-OPC-NUL    VALUE '  '.
              05 PGM-STAT-DBC           VALUE '23'      PIC X(02).
                 88 PGM-STAT-DBC-OKS    VALUE '00'.
                 88 PGM-STAT-DBC-NUL    VALUE '  '.
              05 PGM-STAT-VEN           VALUE '23'      PIC X(02).
                 88 PGM-STAT-VEN-OKS    VALUE '00'.
                 88 PGM-STAT-VEN-NUL    VALUE '  '.
              05 PGM-STAT-RDC           VALUE '23'      PIC X(02).
                 88 PGM-STAT-RDC-OKS    VALUE '00'.
                 88 PGM-STAT-RDC-NUL    VALUE '  '.
           03 PGM-SRNF                  VALUE '23'      PIC X(02).
           03 PGM-SOKS                  VALUE '00'      PIC X(02).
           03 PGM-SNUL                  VALUE '  '      PIC X(02).
           03 PGM-SUAR                  VALUE SPACES    PIC X(02).
              88 PGM-STRO               VALUE 'TO'.
              88 PGM-SCNC               VALUE 'CC'.

       LINKAGE SECTION.
      *----------------
       01  DFHCOMMAREA.
      *<<<< CMA
           02 FILLER                      PIC X(1900).
      *>>>>
       COPY GNSLGFIO.

       PROCEDURE DIVISION.
      *===================
       MAIN SECTION.
       INI-MAIN.
           PERFORM INI.
       LUP-MAIN.
           IF SCR-INST = SCR-INST-HCM
                 PERFORM SCR-COM.
           IF SCR-CCPP = 'ACC'
                 PERFORM SCR-ACC
           ELSE
                 MOVE SCR-INST-HCM TO SCR-INST.
       COPY GNSBGABN.
           GO TO LUP-MAIN.
       FIN-MAIN.
           EXIT.
      *-----------------------------------------------------
       INI SECTION.
       INI-INI.
       COPY GNSBGEIB.
           PERFORM GNS-PRO-RCK.
           PERFORM GNS-BUS-VCA.
           PERFORM GNS-HDL-SYS.
           PERFORM GNS-HDL-FRM.
           PERFORM GNS-HDL-VSM.
           MOVE 'COLPQPLC' TO FIO-PROG.
           MOVE +1900 TO SCR-TCMA.
       FIN-INI.
           EXIT.
      *------------------------------------------------
       COPY GNSBHSYS.
       COPY GNSBHFRM.
       COPY GNSBHVSM.
       COPY GNSBPRCK.
       COPY GNSBBVCA.
      *---------------------------------------------------
       SCR-COM SECTION.
       INI-SCR-COM.
           MOVE FRM-CPSF-AEY TO FRM-CPIM-AEY.
           PERFORM PRO-ALL.
           PERFORM SCR-CLRA-PLC.
           PERFORM EDT-KEY-PLC.
           PERFORM EDT-FLD-PLC.
           PERFORM SCR-PUTA.
           MOVE SCR-INST-HCM TO SCR-INST.
           MOVE SCR-CMNP     TO SYS-PROG.
           MOVE SCR-VARI     TO SYS-CMMA.
           MOVE SCR-TCMA     TO SYS-TCMA.
           MOVE SYS-XCTL     TO SYS-CMND.
           PERFORM GNS-PRO-SYS.
       XCT-ERR.
           MOVE 'XCTERR    ' TO MSG-COD-MENS.
           MOVE 'GNS'        TO MSG-COD-SIST.
           PERFORM GET-MSG.
           MOVE MSG-GLS-DESC TO SYS-MEN1.
           MOVE SYS-PROG     TO SYS-MEN2.
           MOVE SYS-ABOR     TO SYS-CMND.
           PERFORM GNS-PRO-SYS.
       COPY GNSBGGBK.
       FIN-SCR-COM.
           EXIT.
      *----------------------------------------------------
       SCR-ACC SECTION.
       INI-SCR-ACC.
           IF SCR-INST = SCR-INST-HKY
               MOVE SCR-INST-GKY TO SCR-INST
               PERFORM HBL-KEY
               PERFORM SCR-DMSG
           ELSE
           IF SCR-INST = SCR-INST-GKY
                PERFORM SCR-KEY
                IF SCR-STAT NOT = SCR-STAT-ABT
                        PERFORM SCR-TRL
                ELSE
                        PERFORM DESSCRTRL
                        GO TO FIN-SCR-ACC
           ELSE
           IF SCR-INST = SCR-INST-GAB
                PERFORM GET-CON
           ELSE
           IF SCR-INST = SCR-INST-BRW
               MOVE SCR-FFLD TO FRM-FFLD
               PERFORM BRW-SCR-ACC.
           PERFORM DESSCRTRL.
      *<<<< PFS_SCR_ACC
           IF FRM-FFLD = FRM-FFLD-PF5 OR FRM-FFLD-PF6
               PERFORM VAL-NUM-KEY-PLC
               PERFORM VAL-NUM-FLD-PLC
               PERFORM SCRL-TAB-PLC
               PERFORM SCR-TRL.
      *>>>>
           MOVE SPACES TO FRM-MENS.
           PERFORM SCR-MSSG.
       FIN-SCR-ACC.
           EXIT.

       BRW-SCR-ACC SECTION.
       INI-BRW-SCR-ACC.
       FIN-BRW-SCR-ACC.
           EXIT.
      *-----------------------------------------------------------
       SCR-DMSG SECTION.
       INI-SCR-DMSG.
           IF PGM-ICLR = PGM-NO-LIMPIAR-NADA
               NEXT SENTENCE
           ELSE
           IF PGM-ICLR = PGM-LIMPIAR-TODO
               PERFORM SCR-CLRA-PLC
               PERFORM EDT-KEY-PLC
               PERFORM EDT-FLD-PLC
           ELSE
           IF PGM-ICLR = PGM-LIMPIAR-LLAVES
               PERFORM CLR-KEY-PLC
               PERFORM EDT-KEY-PLC
           ELSE
               PERFORM CLR-FLD-PLC
               PERFORM EDT-FLD-PLC.
           PERFORM SCR-PUTA.
           PERFORM SCR-EXIT.
       FIN-SCR-DMSG.
           EXIT.
      *-----------------------------------------------------
       SCR-KEY SECTION.
       INI-SCR-KEY.
           PERFORM SCR-RST.
           PERFORM GET-KEY.
           IF FRM-STAT-ABT
                   MOVE SPACES TO FRM-MENS
                   PERFORM SCR-MSSG
                   GO TO FIN-SCR-KEY.
       FND-SCR-KEY.
           MOVE SPACES TO FRM-MENS.
           PERFORM FND-KEY.
           IF FIO-STAT-OKS
               PERFORM PUT-SCR
               MOVE PGM-LIMPIAR-TODO TO PGM-ICLR
               GO TO FIN-SCR-KEY.
      *JSS ELSE
               PERFORM CLR-FLD-PLC.
       ERR-SCR-KEY.
           MOVE PGM-LIMPIAR-CAMPOS TO PGM-ICLR.
           IF FRM-MENS NOT > SPACES
               IF FIO-STAT-EOF
                   MOVE 'REGEOF    ' TO MSG-COD-MENS
                   MOVE 'GNS' TO MSG-COD-SIST
                   PERFORM GET-MSG
                   MOVE MSG-GLS-DESC TO FRM-MENS
               ELSE
               IF FIO-STAT = FIO-STAT-NEX
                   MOVE 'REGNEX    ' TO MSG-COD-MENS
                   MOVE 'GNS' TO MSG-COD-SIST
                   PERFORM GET-MSG
                   MOVE MSG-GLS-DESC TO FRM-MENS
               ELSE
                   MOVE 'FIOSTAT' TO MSG-COD-TMSG
                   MOVE FIO-STAT  TO MSG-COD-CMSG
                   MOVE 'GNS'     TO MSG-COD-SIST
                   PERFORM GET-MSG
                   MOVE MSG-GLS-DESC TO FRM-MENS.
           PERFORM SCR-MSSG.
           MOVE SCR-STAT-ABT TO SCR-STAT.
       FIN-SCR-KEY.
           EXIT.
      *-------------------------------------------------------
       SCR-RST SECTION.
       INI-SCR-RST.
           MOVE SPACES       TO PGM-ICLR.
           MOVE SPACES       TO SCR-ACTU.
           MOVE SCR-STPP     TO SCR-STAT.
           MOVE SCR-MFLD-NOT TO SCR-MFLD.
           MOVE LOW-VALUES   TO PLC-FLD.
       FIN-SCR-RST.
           EXIT.

       GET-KEY SECTION.
       INI-GET-KEY.
           PERFORM SCR-GKEY.
           IF FRM-STAT-ABT
               MOVE SCR-STAT-ABT TO SCR-STAT.
       FIN-GET-KEY.
           EXIT.

       GET-IKY SECTION.
       INI-GET-IKY.
           PERFORM SCR-GIKY.
           IF FRM-STAT-ABT
               MOVE SCR-STAT-ABT TO SCR-STAT.
       FIN-GET-IKY.
           EXIT.
      *------------------------------------------------------
       FND-KEY SECTION.
       INI-FND-KEY.
           PERFORM KEY-ALL-PLC.
       LUP-OPC.
      *--------------  EJECUTO FIO-OPC -----------------------------*
           MOVE FIO-GET-KEY             TO FIO-CMND.
           PERFORM COL-FIO-OPC.
           IF NOT FIO-STAT-OKS
               MOVE 'OPCIDLCNORDC' TO MSG-COD-MENS IN MSG
               GO TO MSG-FND-KEY.
           IF OPC-MSC-STAT IN OPC = 'L' OR 'A' OR 'P'
              NEXT SENTENCE
           ELSE
               MOVE 'OPCSTATINVAL' TO MSG-COD-MENS IN MSG
               GO TO MSG-FND-KEY.
      *--------------  EJECUTO FIO-RDC  -----------------------------*
           MOVE OPC-CAI-IOPC IN OPC     TO RDC-CAI-IOPC IN RDC.
           MOVE OPC-IIC-IOPC IN OPC     TO RDC-IIC-IOPC IN RDC.
           MOVE ZEROES                  TO RDC-NUM-IDLC IN RDC.
           PERFORM COL-SEQ-RDC-IDLC.
           IF FIO-STAT-OKS AND
              (OPC-CAI-IOPC IN OPC = RDC-CAI-IOPC IN RDC) AND
              (OPC-IIC-IOPC IN OPC = RDC-IIC-IOPC IN RDC) AND
              (RDC-NUM-IDLC IN RDC = ZEROES)
              MOVE RDC-IIC-ICLI IN RDC  TO DBC-IIC-ICLI IN DBC
              MOVE FIO-GET-KEY          TO FIO-CMND
              PERFORM SGC-FIO-DBC
              IF FIO-STAT-OKS
                  NEXT SENTENCE
              ELSE
                  MOVE 'CLI    NEX' TO MSG-COD-MENS
                  GO TO MSG-FND-KEY
           ELSE
               MOVE 'CLI    NODIR' TO MSG-COD-MENS
               GO TO MSG-FND-KEY.
      *--------------  EJECUTO FIO-DLC  -----------------------------*
           MOVE OPC-CAI-IOPC IN OPC     TO DLC-CAI-IOPC IN DLC.
           MOVE OPC-IIC-IOPC IN OPC     TO DLC-IIC-IOPC IN DLC.
           MOVE ZEROES                  TO DLC-NUM-IDLC IN DLC.
           MOVE FIO-GET-NLS TO FIO-CMND.
           PERFORM COL-FIO-DLC.
           IF NOT ( FIO-STAT-OKS AND
              OPC-CIC-IOPC IN OPC = DLC-CIC-IOPC IN DLC )
                MOVE 'DLCIDLCNEX' TO MSG-COD-MENS
                GO TO MSG-FND-KEY.
           PERFORM PUT-PLC.
           PERFORM PUT-TAB.
           MOVE '00' TO FIO-STAT.
           MOVE FIO-STAT TO PGM-STAT-OPC.
           MOVE FIO-STAT TO PGM-STAT-DBC.
           MOVE SCR-STAT-CON TO SCR-STAT.
           GO TO FIN-FND-KEY.
      *----------------------------------------------------------
       MSG-FND-KEY.
           MOVE 'COL' TO MSG-COD-SIST.
           PERFORM GET-MSG.
           MOVE MSG-GLS-DESC TO FRM-MENS.
           MOVE '00' TO FIO-STAT.
           MOVE SCR-STAT-CON TO SCR-STAT.
           GO TO FIN-FND-KEY.
       FIN-FND-KEY.
           EXIT.
      *------------------------------------------------------------
       PUT-SCR SECTION.
       INI-PUT-SCR.
           PERFORM PUT-ALL-PLC.
       FIN-PUT-SCR.
           EXIT.

       STP-EXIT SECTION.
       INI-STP-EXIT.
           MOVE SCR-PROG TO PGM-PROG.
           MOVE SCR-NTRN TO PGM-NTRN.

           MOVE SCR-PROV TO SCR-PROG.
           MOVE SCR-NTRV TO SCR-NTRN.

           MOVE PGM-PROG TO SCR-PROV
           MOVE PGM-NTRN TO SCR-NTRV.
       FIN-STP-EXIT.
           EXIT.

       SCR-EXIT SECTION.
       INI-SCR-EXIT.
           MOVE 'P'      TO SCR-ICMN.
           MOVE SCR-NTRN TO SYS-NTRN.
           MOVE SCR-VARI TO SYS-CMMA.
           MOVE SCR-TCMA TO SYS-TCMA.
           MOVE SYS-RTRN TO SYS-CMND.
           PERFORM GNS-PRO-SYS.
       FIN-SCR-EXIT.
           EXIT.

       SCR-PUTA SECTION.
       INI-SCR-PUTA.
           MOVE SCR-NMAP TO FRM-NAME.
           MOVE SCR-NLIB TO FRM-NLIB.
           MOVE PLC-FLD TO FRM-DFLD.
           MOVE FRM-PUT-ALL TO FRM-CMND.
           PERFORM GNS-PRO-FRM.
       FIN-SCR-PUTA.
           EXIT.

       SCR-MSSG SECTION.
       INI-SCR-MSSG.
           IF FRM-MEN1 NOT > SPACES
               MOVE SPACES TO FRM-MEN1.
           IF FRM-MEN2 NOT > SPACES
               MOVE SPACES TO FRM-MEN2.
           MOVE FRM-MENS TO PLC-GLS-MENS.
       FIN-SCR-MSSG.
           EXIT.

       SCR-GKEY SECTION.
       INI-SCR-GKEY.
           MOVE SCR-NMAP TO FRM-NAME.
           MOVE SCR-NLIB TO FRM-NLIB.
           MOVE FRM-GET-ALL TO FRM-CMND.
           PERFORM GNS-PRO-FRM.
           MOVE SPACES TO FRM-MENS.
           IF NOT ( FRM-FFLD = FRM-FFLD-RET  OR FRM-FFLD-PF10 OR
                               FRM-FFLD-PF12 OR FRM-FFLD-PF3 )
               MOVE 'PFSINV    ' TO MSG-COD-MENS
               MOVE 'GNS' TO MSG-COD-SIST
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS
               PERFORM FST-KEY-PLC
               PERFORM SCR-MSSG
               PERFORM SCR-PUTA
               PERFORM SCR-EXIT.
           MOVE FRM-DFLD TO PLC-FLD.
           IF FRM-STAT-ABT
               GO TO FIN-SCR-GKEY.
           MOVE FRM-SUAR-OKS TO FRM-SUAR.
           PERFORM VAL-NUM-KEY-PLC.
           IF FRM-SUAR EQUAL FRM-SUAR-MAL OR FRM-SUAR-CLR
               PERFORM SCR-MSSG
               PERFORM EDT-KEY-PLC
               PERFORM SCR-PUTA
               PERFORM SCR-EXIT.
           PERFORM VAL-CON-KEY-PLC.
           IF FRM-SUAR EQUAL FRM-SUAR-MAL OR FRM-SUAR-CLR
               PERFORM FST-KEY-PLC
               GO TO ERR-SCR-GKEY.
      *JSS
           PERFORM CLR-FLD-PLC.
           PERFORM VAL-IKY-PLC.
           IF FRM-SUAR EQUAL FRM-SUAR-MAL OR FRM-SUAR-CLR
               GO TO ERR-SCR-GKEY.
           PERFORM VAL-MKY-PLC.
           IF FRM-SUAR EQUAL FRM-SUAR-MAL OR FRM-SUAR-CLR
               GO TO ERR-SCR-GKEY.
           PERFORM VAL-AKY-PLC.
           IF NOT ( FRM-SUAR EQUAL FRM-SUAR-MAL OR FRM-SUAR-CLR )
               GO TO FIN-SCR-GKEY.
       ERR-SCR-GKEY.
           PERFORM SCR-MSSG.
           PERFORM EDT-KEY-PLC.
           PERFORM SCR-PUTA.
           PERFORM SCR-EXIT.
       FIN-SCR-GKEY.
           PERFORM SCR-MSSG.

       SCR-GIKY SECTION.
       INI-SCR-GIKY.
           MOVE SCR-NMAP TO FRM-NAME.
           MOVE SCR-NLIB TO FRM-NLIB.
           MOVE FRM-GET-ALL TO FRM-CMND.
           PERFORM GNS-PRO-FRM.
           MOVE SPACES TO FRM-MENS.
           IF NOT ( FRM-FFLD = FRM-FFLD-RET  OR FRM-FFLD-PF10 OR
                               FRM-FFLD-PF12 OR FRM-FFLD-PF3 )
               MOVE 'PFSINV    ' TO MSG-COD-MENS
               MOVE 'GNS' TO MSG-COD-SIST
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS
               PERFORM FST-KEY-PLC
               PERFORM SCR-MSSG
               PERFORM SCR-PUTA
               PERFORM SCR-EXIT.
           MOVE FRM-DFLD TO PLC-FLD.
           IF FRM-STAT-ABT
               GO TO FIN-SCR-GIKY.
           MOVE FRM-SUAR-OKS TO FRM-SUAR.
           PERFORM VAL-NUM-IKY-PLC.
           IF FRM-SUAR EQUAL FRM-SUAR-MAL OR FRM-SUAR-CLR
               PERFORM SCR-MSSG
               PERFORM EDT-IKY-PLC
               PERFORM SCR-PUTA
               PERFORM SCR-EXIT.
           PERFORM VAL-CON-IKY-PLC.
           IF FRM-SUAR EQUAL FRM-SUAR-MAL OR FRM-SUAR-CLR
               PERFORM FST-KEY-PLC
               GO TO ERR-SCR-GIKY.
      *JSS
           PERFORM CLR-FLD-PLC.
           PERFORM VAL-IKY-PLC.
           IF NOT ( FRM-SUAR EQUAL FRM-SUAR-MAL OR FRM-SUAR-CLR )
               GO TO FIN-SCR-GIKY.
       ERR-SCR-GIKY.
           PERFORM SCR-MSSG.
           PERFORM EDT-IKY-PLC.
           PERFORM SCR-PUTA.
           PERFORM SCR-EXIT.
       FIN-SCR-GIKY.
           PERFORM SCR-MSSG.

       GET-CON SECTION.
       INI-GET-CON.
           MOVE SCR-NMAP TO FRM-NAME.
           MOVE SCR-NLIB TO FRM-NLIB.
           MOVE FRM-GET-ALL TO FRM-CMND.
           PERFORM GNS-PRO-FRM.
           IF NOT ( FRM-FFLD = FRM-FFLD-RET  OR FRM-FFLD-PF10 OR
                               FRM-FFLD-PF12 OR FRM-FFLD-PF3 )
      *<<<< PFS_GET_CON
           IF NOT ( FRM-FFLD = FRM-FFLD-PF5 OR FRM-FFLD-PF6 )
      *>>>>
               MOVE 'PFSINV    ' TO MSG-COD-MENS
               MOVE 'GNS' TO MSG-COD-SIST
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO PLC-GLS-MEN2
               MOVE SCR-PRMT     TO PLC-GLS-MEN1
               PERFORM FST-MSG
               PERFORM SCR-PUTA
               PERFORM SCR-EXIT.
           MOVE FRM-DFLD TO PLC-FLD.
       FIN-GET-CON.
           MOVE SCR-STAT-CON TO SCR-STAT.

       CLR-MSG SECTION.
       INI-CLR-MSG.
      *    MOVE SPACES TO PLC-GLS-MENS.
       FIN-CLR-MSG.
           EXIT.

       HBL-KEY SECTION.
       INI-HBL-KEY.
           IF SCR-DESDE-CMN
               MOVE SPACES       TO FRM-MENS
               MOVE LOW-VALUES TO PLC-FLD.
           MOVE FRM-CPSF-AEY TO FRM-CPIM-AEY.
           PERFORM UNP-KEY-PLC.
           PERFORM FST-KEY-PLC.
       FIN-HBL-KEY.
           EXIT.

       HBL-FLD SECTION.
       INI-HBL-FLD.
           PERFORM PRO-IKY-PLC.
           PERFORM PRO-AKY-PLC.
           PERFORM UNP-MKY-PLC.
           PERFORM UNP-FLD-PLC.
           PERFORM FST-FLD-PLC.
       FIN-HBL-FLD.
           EXIT.

       FST-MSG SECTION.
       INI-FST-MSG.
           MOVE -1 TO PLC-GLS-MENS-LEN.
       FIN-FST-MSG.
           EXIT.

       PRO-ALL SECTION.
       INI-PRO-ALL.
           PERFORM PRO-KEY-PLC.
           PERFORM FST-MSG.
       FIN-PRO-ALL.
           EXIT.

       SCR-TRL SECTION.
       INI-SCR-TRL.
           IF FRM-MEN1 NOT > SPACES
               MOVE SCR-PRMT TO FRM-MEN1.
           IF SCR-STAT = SCR-STAT-MOD
               MOVE SCR-INST-GFL TO SCR-INST
               PERFORM HBL-FLD
               PERFORM SCR-MSSG
               PERFORM EDT-KEY-PLC
               PERFORM EDT-FLD-PLC
               PERFORM SCR-PUTA
               PERFORM STP-EXIT
               PERFORM SCR-EXIT.
           IF SCR-STAT = SCR-STAT-SON
               MOVE SCR-INST-GCS TO SCR-INST
               PERFORM PRO-ALL
               PERFORM SCR-MSSG
               PERFORM EDT-KEY-PLC
               PERFORM EDT-FLD-PLC
               PERFORM SCR-PUTA
               PERFORM STP-EXIT
               PERFORM SCR-EXIT.
      *ASUME SCR-STAT-CON.
           MOVE SCR-STAT-CON TO SCR-STAT.
           MOVE SCR-INST-GAB TO SCR-INST.
           PERFORM PRO-ALL.
           PERFORM SCR-MSSG.
           PERFORM EDT-KEY-PLC.
           PERFORM EDT-FLD-PLC.
           PERFORM SCR-PUTA.
           PERFORM SCR-EXIT.
       FIN-SCR-TRL.
           EXIT.

       DESSCRTRL SECTION.
       INI-DESSCRTRL.
           MOVE SCR-VFLD-NOT TO SCR-VFLD.
           MOVE FRM-FFLD TO SCR-FFLD.
       FIN-DESSCRTRL.
           IF SCR-FFLD-PF10 OR SCR-FFLD-PF3
                 MOVE SCR-INST-HCM TO SCR-INST
           ELSE
                 MOVE SCR-INST-HKY TO SCR-INST.
       EXT-DESSCRTRL.
           EXIT.

       COPY COLBQPLC.
      *    EXEC SQL INCLUDE DEUBFRDE END-EXEC.
       COPY GNSBFMSG.
       COPY GNSBGSYS.
       COPY GNSBGVSM.
       COPY GNSBGFRM.
       COPY GNSBGMSG.
       COPY GNSBEKEY.
      *COPY GNSBIABT.
       COPY GNSBIAB2.
       COPY GNSBFTAB.
      *COPY GNSBVIND.
      *ALD-BNL
       COPY GNSBVCOD.
       COPY GNSBVTAB.
      *COPY GNSBVMSC.
       COPY GNSBFMSC.
      *COPY GNSBVIDC.
      *COPY GNSBPVRF.
       COPY GNSBPNUM.

      *<<<< EOF
       PUT-TAB SECTION.
       INI-PUT-TAB.
           MOVE 1 TO FRM-IFLD.
       LUP-PUT-TAB.
           MOVE OPC-CIC-IOPC TO VEN-CIC-IOPC IN VEN.
           MOVE FRM-IFLD     TO VEN-NUM-IVEN IN VEN.
           MOVE FIO-GET-KEY  TO FIO-CMND.
           IF OPC-IND-VSTR IN OPC = 'N'
              PERFORM COL-FIO-VEN
              IF FIO-STAT-OKS
                 PERFORM PUT-TAB-PLC
              ELSE MOVE '00' TO FIO-STAT
                   GO TO FIN-PUT-TAB
           ELSE
              PERFORM COL-OBT-VEN
              IF VEN-STAT-OKS
                 PERFORM PUT-TAB-PLC
              ELSE MOVE '00' TO FIO-STAT
                   GO TO FIN-PUT-TAB.
           ADD 1 TO FRM-IFLD.
           IF FRM-IFLD > WSS-IMAX
              GO TO FIN-PUT-TAB
           ELSE
              GO TO LUP-PUT-TAB.
       FIN-PUT-TAB.
           EXIT.
      *--------------------------------------------
       SCRL-TAB-PLC SECTION.
       INI-SCRL-TAB-PLC.
           MOVE SPACES TO MSG-COD-MENS.
           IF FRM-FFLD = FRM-FFLD-PF6
               PERFORM PUT-TAB-ASC
               IF FIO-STAT = FIO-STAT-NEX
                   MOVE 'PLCVENNONXT' TO MSG-COD-MENS
               ELSE
                   MOVE 'PLCVENDMAS' TO MSG-COD-MENS
           ELSE
               PERFORM PUT-TAB-DSC
               IF FIO-STAT = FIO-STAT-NEX
                   MOVE 'PLCVENNOPRV' TO MSG-COD-MENS
               ELSE
                   MOVE 'PLCVENDMAS' TO MSG-COD-MENS.
           IF MSG-COD-MENS > SPACES
               MOVE 'COL' TO MSG-COD-SIST
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MEN2.
       FIN-SCRL-TAB-PLC.
           EXIT.
       PUT-TAB-ASC SECTION.
       INI-PUT-TAB-ASC.
           IF FRM-NUM-IVCT IN PLC-FLD(WSS-IMAX) NOT > ZEROES
               MOVE FIO-STAT-NEX TO FIO-STAT
               GO TO FIN-PUT-TAB-ASC.
           MOVE 0 TO FRM-IFLD.
           MOVE OPC-CAI-IOPC IN PLC-FLD TO OPC-CAI-IOPC IN OPC.
           MOVE OPC-IIC-IOPC IN PLC-FLD TO OPC-IIC-IOPC IN OPC.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM COL-FIO-OPC.
           MOVE OPC-CAI-IOPC IN PLC-FLD TO VEN-CAI-IOPC IN VEN.
           MOVE OPC-IIC-IOPC IN PLC-FLD TO VEN-IIC-IOPC IN VEN.
           ADD 1 FRM-NUM-IVCT IN PLC-FLD(WSS-IMAX) GIVING
                                           VEN-NUM-IVEN IN VEN.
           MOVE FIO-GET-KEY TO FIO-CMND.
       LUP-PUT-TAB-ASC.
           IF OPC-IND-VSTR IN OPC = 'S'
               PERFORM COL-OBT-VEN
               IF NOT VEN-STAT-OKS
                   MOVE FIO-STAT-NEX TO FIO-STAT
                   GO TO FIN-PUT-TAB-ASC
               ELSE
                   NEXT SENTENCE
           ELSE
               PERFORM COL-FIO-VEN
               IF NOT FIO-STAT-OKS
                   MOVE FIO-STAT-NEX TO FIO-STAT
                   GO TO FIN-PUT-TAB-ASC.
           ADD 1  TO FRM-IFLD.
           IF FRM-IFLD = 1
               ADD 1 FRM-IFLD GIVING WSS-I
               PERFORM CLR-FRM VARYING WSS-I FROM WSS-I BY 1
                           UNTIL WSS-I > WSS-IMAX.
           PERFORM PUT-TAB-PLC.
           IF FRM-IFLD < WSS-IMAX
               ADD 1 TO VEN-NUM-IVEN IN VEN
               MOVE FIO-GET-KEY TO FIO-CMND
               GO TO LUP-PUT-TAB-ASC.
           MOVE '00' TO FIO-STAT.
       FIN-PUT-TAB-ASC.
           EXIT.
       PUT-TAB-DSC SECTION.
       INI-PUT-TAB-DSC.
           MOVE OPC-CAI-IOPC IN PLC-FLD TO OPC-CAI-IOPC IN OPC.
           MOVE OPC-IIC-IOPC IN PLC-FLD TO OPC-IIC-IOPC IN OPC.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM COL-FIO-OPC.
           ADD 1 WSS-IMAX GIVING FRM-IFLD.
           MOVE OPC-CAI-IOPC IN PLC-FLD TO VEN-CAI-IOPC IN VEN.
           MOVE OPC-IIC-IOPC IN PLC-FLD TO VEN-IIC-IOPC IN VEN.
           SUBTRACT 1 FROM FRM-NUM-IVCT IN PLC-FLD(1) GIVING
                                           VEN-NUM-IVEN IN VEN.
           MOVE FIO-GET-KEY TO FIO-CMND.
       LUP-PUT-TAB-DSC.
           IF VEN-NUM-IVEN IN VEN NOT > ZEROES
               MOVE FIO-STAT-NEX TO FIO-STAT
               GO TO FIN-PUT-TAB-DSC.
           IF OPC-IND-VSTR IN OPC = 'S'
               PERFORM COL-OBT-VEN
               IF NOT VEN-STAT-OKS
                   MOVE FIO-STAT-NEX TO FIO-STAT
                   GO TO FIN-PUT-TAB-DSC
               ELSE
                   NEXT SENTENCE
           ELSE
               PERFORM COL-FIO-VEN
               IF NOT FIO-STAT-OKS
                   MOVE FIO-STAT-NEX TO FIO-STAT
                   GO TO FIN-PUT-TAB-DSC.
           SUBTRACT 1 FROM FRM-IFLD.
           IF FRM-IFLD = WSS-IMAX
               SUBTRACT 1 FROM FRM-IFLD GIVING WSS-I
               PERFORM CLR-FRM VARYING WSS-I FROM WSS-I BY -1
                           UNTIL WSS-I < 1.
           PERFORM PUT-TAB-PLC.
           IF FRM-IFLD > 1
               SUBTRACT 1 FROM VEN-NUM-IVEN IN VEN
               MOVE FIO-GET-KEY TO FIO-CMND
               GO TO LUP-PUT-TAB-DSC.
           MOVE '00' TO FIO-STAT.
       FIN-PUT-TAB-DSC.
           EXIT.
      *--------------------------------------------
       PUT-TAB-PLC SECTION.
       INI-PUT-TAB-PLC.
           MOVE VEN-NUM-IVCT IN VEN TO FRM-NUM-IVCT IN
                                           PLC-FLD(FRM-IFLD).
           MOVE VEN-NUM-DVEN IN VEN TO FRM-NUM-DVEN IN
                                           PLC-FLD(FRM-IFLD).
           MOVE VEN-NUM-MVEN IN VEN TO FRM-NUM-MVEN IN
                                           PLC-FLD(FRM-IFLD).
           MOVE VEN-NUM-SVEN IN VEN TO FRM-NUM-SVEN IN
                                           PLC-FLD(FRM-IFLD).
           MOVE VEN-NUM-AVEN IN VEN TO FRM-NUM-AVEN IN
                                           PLC-FLD(FRM-IFLD).
           MOVE VEN-VAL-CAPI IN VEN TO FRM-VAL-CAPI IN
                                           PLC-FLD(FRM-IFLD).
           MOVE VEN-VAL-FINA IN VEN TO FRM-VAL-FINA IN
                                           PLC-FLD(FRM-IFLD).
           IF OPC-IND-VSTR IN OPC = 'S'
               PERFORM PRO-CAL-VCD.
           IF VEN-VAL-SEGP IN VEN > ZEROES
              MOVE VEN-VAL-SEGP IN VEN TO FRM-VAL-SEGU IN
                                           PLC-FLD(FRM-IFLD)
           ELSE MOVE VEN-VAL-SEGD IN VEN TO FRM-VAL-SEGU IN
                                           PLC-FLD(FRM-IFLD).
       FIN-PUT-TAB-PLC.
           EXIT.
      *----------------------------------------------------
       PUT-PLC SECTION.
       INI-PUT-PLC.
           IF OPC-COD-OFOC IN OPC > SPACES
               MOVE OPC-COD-OFOC IN OPC TO OFI-COD-OFIC IN OFI
               PERFORM BUS-OFI
               MOVE OFI-GLS-DESC IN OFI TO FRM-GLS-OFIC IN PLC-FLD
           ELSE
               MOVE SPACES              TO FRM-GLS-OFIC IN PLC-FLD.
           MOVE DBC-GLS-NOMC IN DBC TO DBC-GLS-NOMC IN PLC-FLD.
           IF OPC-COD-VCOC IN OPC > SPACES
               MOVE 'TAB' TO TAB-COD-SIST
               MOVE 'VLR' TO TAB-COD-TTAB IN TAB
               MOVE OPC-COD-VCOC IN OPC TO TAB-COD-CTAB IN TAB
               PERFORM BUS-TAB
               MOVE TAB-GLS-DCOR IN TAB TO FRM-GLS-VEXP IN PLC-FLD
           ELSE
               MOVE SPACES              TO FRM-GLS-VEXP IN PLC-FLD.
           MOVE 'TVAL' TO MSC-CIC-TMSC IN MSC.
           MOVE '0'    TO MSC-CIC-CMSC IN MSC.
           MOVE 'TAB' TO FIO-SIST.
           MOVE 'MSC-CIC-TABL' TO FIO-AKEY.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM GNS-FIO-MSC.
           IF NOT FIO-STAT-OKS
               MOVE SPACES TO MSC-COD-CMSC IN MSC.
           MOVE 1 TO CAM-SGV-VCAM IN CAM.
           MOVE 'TAB'          TO FIO-SIST.
           MOVE 'VLR'          TO TAB-CIC-TTAB.
           MOVE '0999  '       TO TAB-CIC-CTAB.
           MOVE FIO-GET-KEY    TO FIO-CMND.
           MOVE 'TAB-CIC-TABL' TO FIO-AKEY.
           PERFORM GNS-FIO-TAB.
           IF NOT FIO-STAT-OKS
               MOVE SPACES TO TAB-COD-CTAB IN TAB.
           IF TAB-COD-CTAB  NOT   = OPC-COD-VCOC IN OPC AND
              MSC-COD-CMSC IN MSC = OPC-MSC-TVOC IN OPC
               MOVE TAB-GLS-DCOR IN TAB TO FRM-GLS-VEXP IN PLC-FLD
               MOVE OPC-NUM-DCOL IN OPC TO CAM-NUM-DCAM IN CAM(1)
               MOVE OPC-NUM-MCOL IN OPC TO CAM-NUM-MCAM IN CAM(1)
               MOVE OPC-NUM-SCOL IN OPC TO CAM-NUM-SCAM IN CAM(1)
               MOVE OPC-NUM-ACOL IN OPC TO CAM-NUM-ACAM IN CAM(1)
               MOVE OPC-NUM-DCOL IN OPC TO CAM-NUM-DCAM IN CAM(2)
               MOVE OPC-NUM-MCOL IN OPC TO CAM-NUM-MCAM IN CAM(2)
               MOVE OPC-NUM-SCOL IN OPC TO CAM-NUM-SCAM IN CAM(2)
               MOVE OPC-NUM-ACOL IN OPC TO CAM-NUM-ACAM IN CAM(2)
               MOVE OPC-COD-VCOC IN OPC TO CAM-COD-VCAM IN CAM(1)
               MOVE TAB-COD-CTAB IN TAB TO CAM-COD-VCAM IN CAM(2)
               MOVE FIO-GET-KEY  TO FIO-CMND
               PERFORM TAB-FIO-CAM
               IF NOT FIO-STAT-OKS
                   MOVE 1 TO CAM-SGV-VCAM IN CAM.
           MOVE CAM-SGV-VCAM IN CAM TO WSS-CAM-SGV-VCAM IN WSS-VARI.
           MOVE OPC-NUM-DCOL IN OPC TO OPC-NUM-DCOL IN PLC-FLD.
           MOVE OPC-NUM-MCOL IN OPC TO OPC-NUM-MCOL IN PLC-FLD.
           MOVE OPC-NUM-SCOL IN OPC TO OPC-NUM-SCOL IN PLC-FLD.
           MOVE OPC-NUM-ACOL IN OPC TO OPC-NUM-ACOL IN PLC-FLD.
           MULTIPLY OPC-VAL-CRED IN OPC BY WSS-CAM-SGV-VCAM IN
                       WSS-VARI GIVING FRM-VAL-CRED IN PLC-FLD.
           MOVE FRM-VAL-CRED IN PLC-FLD TO PES-SGV-DECI IN PES-VARI.
           PERFORM PES-SCTV
           MOVE PES-SGV-ENTE IN PES-VARI TO FRM-VAL-CRED IN PLC-FLD.
           MOVE ZEROES              TO FRM-VAL-INTE IN PLC-FLD.
           PERFORM OBT-INTE.
           PERFORM OBT-IMP-GNOT.
           MOVE OPC-SGV-VCOM IN OPC TO OPC-SGV-VCOM IN PLC-FLD.
           MOVE OPC-VAL-GAST IN OPC TO OPC-VAL-GAST IN PLC-FLD.
           MOVE OPC-VAL-SEGD IN OPC TO OPC-VAL-SEGD IN PLC-FLD.
           MOVE OPC-SGV-LIQU IN OPC TO OPC-SGV-LIQU IN PLC-FLD.
      *    MOVE OPC-CIC-IOPC IN OPC TO OPC-CIC-IOPC IN PLC-FLD.
           MOVE ZEROES TO FRM-VAL-SEGP IN PLC-FLD.
           MOVE 'COL' TO TAB-COD-SIST FIO-SIST.
           MOVE 'SDP' TO TAB-COD-TTAB IN TAB.
           MOVE OPC-COD-SEGP IN OPC TO TAB-COD-CTAB IN TAB.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM GNS-FIO-TAB.
           IF FIO-STAT-OKS
               MOVE TAB-CIC-CTAB IN TAB TO VCD-CIC-CTAB IN VCD-VARI
               IF VCD-CIC-FLVC IN VCD-VARI NOT = 'VCD'
                   PERFORM PRO-CAL-SEGP
                   IF SDP-COD-MENS IN SDP-VARI NOT > SPACES
                       MOVE SDP-VAL-SEGP IN SDP-VARI TO
                            FRM-VAL-SEGP IN PLC-FLD.
           MULTIPLY FRM-VAL-SEGP IN PLC-FLD BY WSS-CAM-SGV-VCAM
                      IN WSS-VARI GIVING FRM-VAL-SEGP IN PLC-FLD.
           MOVE FRM-VAL-SEGP IN PLC-FLD TO PES-SGV-DECI IN PES-VARI.
           PERFORM PES-SCTV
           MOVE PES-SGV-ENTE IN PES-VARI TO FRM-VAL-SEGP IN PLC-FLD.
       FIN-PUT-PLC.
           EXIT.
      *----------------------------------------------------
       OBT-IMP-GNOT SECTION.
       INI-OBT-IMP-GNOT.
           MOVE ZEROES TO FRM-VAL-GNOT IN PLC-FLD.
           MOVE ZEROES TO FRM-VAL-IMPU IN PLC-FLD.
           MOVE OPC-CIC-IOPC IN OPC TO DLC-CIC-IOPC IN DLC.
           MOVE ZEROES              TO DLC-NUM-IDLC IN DLC.
           MOVE FIO-GET-NLS TO FIO-CMND.
           PERFORM COL-FIO-DLC.
           IF NOT ( FIO-STAT-OKS AND
                    OPC-CIC-IOPC IN OPC = DLC-CIC-IOPC IN DLC )
               GO TO FIN-OBT-IMP-GNOT.
       LUP-OBT-IMP-GNOT.
           ADD DLC-VAL-GNOT IN DLC TO FRM-VAL-GNOT IN PLC-FLD.
           ADD DLC-VAL-IMPU IN DLC TO FRM-VAL-IMPU IN PLC-FLD.
           MOVE FIO-GET-NXT TO FIO-CMND.
           PERFORM COL-FIO-DLC.
           IF FIO-STAT-OKS AND
              OPC-CIC-IOPC IN OPC = DLC-CIC-IOPC IN DLC
               GO TO LUP-OBT-IMP-GNOT.
       FIN-OBT-IMP-GNOT.
           EXIT.
       OBT-INTE SECTION.
       INI-OBT-INTE.
           MOVE 'TAB' TO FIO-SIST.
           MOVE 'DOC' TO TAB-CIC-TTAB.
           MOVE 'LTR' TO TAB-CIC-CTAB.
           MOVE FIO-GET-KEY TO FIO-CMND.
           MOVE 'TAB-CIC-TABL' TO FIO-AKEY.
           PERFORM GNS-FIO-TAB.
           IF NOT FIO-STAT-OKS
               MOVE SPACES TO TAB-COD-CTAB.
           IF NOT (DLC-COD-TDOC IN DLC = TAB-COD-CTAB
              OR AYF-ITCV = 'FI')
               GO TO FIN-OBT-INTE.
           MOVE ZEROES              TO WSS-TOT-INTE IN WSS-VARI.
           MOVE OPC-CIC-IOPC IN OPC TO VEN-CIC-IOPC IN VEN.
           MOVE 1                   TO VEN-NUM-IVEN IN VEN.
       LUP-OBT-INTE.
           MOVE FIO-GET-KEY TO FIO-CMND.
           IF OPC-IND-VSTR IN OPC NOT = 'S'
               PERFORM COL-FIO-VEN
               IF NOT FIO-STAT-OKS
                   GO TO FIN-OBT-INTE
               ELSE
                   NEXT SENTENCE
           ELSE
               PERFORM COL-OBT-VEN
               IF NOT VEN-STAT-OKS
                   GO TO FIN-OBT-INTE.
           IF VEN-VAL-FINA IN VEN > ZEROES
               SUBTRACT VEN-VAL-CAPI IN VEN FROM VEN-VAL-FINA IN VEN
                        GIVING WSS-TOT-INTE IN WSS-VARI
               ADD WSS-TOT-INTE IN WSS-VARI TO FRM-VAL-INTE IN PLC-FLD.
           ADD 1 TO VEN-NUM-IVEN IN VEN.
           GO TO LUP-OBT-INTE.
       FIN-OBT-INTE.
           EXIT.
      *----------------------------------------------------
       CAL-DPES SECTION.
       INI-CAL-DPES.
       FIN-CAL-DPES.
           EXIT.
      *------------------------------------------------------
       GET-RDE SECTION.
       INI-GET-RDE.
       FIN-GET-RDE.
           EXIT.
      *---------------------------------------------------
       CLR-FRM SECTION.
       INI-CLR-FRM.
           MOVE ZEROES              TO FRM-NUM-IVCT IN
                                           PLC-FLD(WSS-I).
           MOVE ZEROES              TO FRM-NUM-DVEN IN
                                           PLC-FLD(WSS-I).
           MOVE ZEROES              TO FRM-NUM-MVEN IN
                                           PLC-FLD(WSS-I).
           MOVE ZEROES              TO FRM-NUM-SVEN IN
                                           PLC-FLD(WSS-I).
           MOVE ZEROES              TO FRM-NUM-AVEN IN
                                           PLC-FLD(WSS-I).
           MOVE ZEROES              TO FRM-VAL-CAPI IN
                                           PLC-FLD(WSS-I).
           MOVE ZEROES              TO FRM-VAL-FINA IN
                                           PLC-FLD(WSS-I).
           MOVE ZEROES              TO FRM-VAL-SEGU IN
                                           PLC-FLD(WSS-I).
       FIN-CLR-FRM.
           EXIT.
      *------------------------------------------------------
       CLR-SCR-RDE SECTION.
       INI-CLR-SCR-RDE.
       FIN-CLR-SCR-RDE.
           EXIT.
      *-----------------------------------------------------------
       PUT-TOT-PLC SECTION.
       INI-PUT-TOT-PLC.
       FIN-PUT-TOT-PLC.
           EXIT.
      *-------------------------------------------------------
       CAL-TPES SECTION.
       INI-CAL-TPES.
       FIN-CAL-TPES.
           EXIT.
      *----------------------------------------------------
       COPY TABBFCAM.
       COPY TABBFRNG.
       COPY TABBFOFI.
       COPY TABBBOFI.
       COPY TABBFVLR.
       COPY COLBFTOC.
      *COPY SGCBFDBC.
      *ALD  COPY GNSBFPRM.
      *JSS-IBM
       COPY GNSBGFEC.
       COPY GNSBPFEC.
       COPY COLBGSDC.
       COPY COLBGSCV.
       COPY COLBGVCD.
       COPY COLBGCOM.
       COPY COLBGSDP.
       COPY GNSBGHOY.
       COPY SGCBGCLI.
       COPY GNSBBTAB.
       COPY GNSBGCPT.
       COPY GNSBGSTR.
      *ALD
      *COPY SGCBFREC.
       COPY TABBGCAM.
       COPY GNSBGPES.
       COPY GNSBGINT.
       COPY COLBGVEN.
      *COPY DEUBCDEU.
       COPY SGCBFDBC.
       COPY COLBFDLC.
       COPY COLBFCOM.

       COPY COLBFOPC.
       COPY COLBFRDC.
       COPY COLBFVEN.
       COPY COLBFEVC.
       COPY COLBFICG.
       COPY COLBFRCV.
