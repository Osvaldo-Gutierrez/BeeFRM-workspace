       IDENTIFICATION DIVISION.
      *========================
       PROGRAM-ID.   COLPUEVC.
       AUTHOR.       CONSIST.
       DATE-WRITTEN. 11-Jul-19 05:24 PM.

      * NOMBRE PROGRAMA                   COLPUEVC
      * VERSION PGM                       3.1
      * VERSION SKL                       08.07.21
      * OPCION                            UPD
      * ARCHIVO BASE                      COLEVC
      * PANTALLA                          COLEVC
      * INP/OUT                           DATACOM
      * TAMANO COMMAREA                   250

      *==============================================================
      * MANTENCIONES
      *==============================================================
      * OBJETIVO: Setear dia de ven segun tioaux en coltab
      * PROYECTO: BGT con fecha de ven intereses trimestral, dma 15
      * FECHA   : Agosto 2013
      * AUTOR   : OGB
      * ETIQUETA: *CIMA-INI/BGT DIA VEN/OGB/08-2013
      *==============================================================
      * OBJETIVO: Validar fechas para bgt menores a 1 trimestre
      * PROYECTO: Cambiar fecha vcto a bgt
      * FECHA   : Diciembre 2014
      * AUTOR   : OGB
      * ETIQUETA: *OGB-INI 22-DIC-2014 BGT DIA MENOR A 1 TRIMESTRE
      *==============================================================
      *==============================================================
      * OBJETIVO: Validar Vcto. de BGT mayor y/o igual a un trimestre
      * PROYECTO: Corregir Fechas de Vencimientos para BGT
      * FECHA   : Agosto 2015
      * AUTOR   : BEE-PVC
      * ETIQUETA: *PVC-INI 19-AGO-2015 VCTO MAYOR-IGUAL DIA TRIM. BGT
      *==============================================================

       ENVIRONMENT DIVISION.
      *=====================
       CONFIGURATION SECTION.
      *----------------------
       SPECIAL-NAMES.
               DECIMAL-POINT IS COMMA.

       DATA DIVISION.
      *==============

       WORKING-STORAGE SECTION.
      *------------------------
      * COPY GNSWGSCR.
       COPY GNSWGCVT.
       77  WSS-TAG-COLPUEVC-INI PIC X(125) VALUE                        
           '<IDNPGM NOM=$COLPUEVC$ SKL=$08.07.21$ VSN=${vsnpu}$        
      -    'GEN=$11-Jul-19 05:24 PM$ FNC=${fncpu}$/>'.    
       COPY GNSWCSCR.
      *PTC-INI
      *PTC-SUB
      * ISP  10-MAY-2001 13:46:35 
      * COPY GNSWVSCR.
       COPY GNSWV3CR.
      *PTC-FIN
      *<<<< FIN_SCR_VARI
      *ISP DEBE QUEDAR PRIMERO QUE LABEL FIN_SCR_VARI DE PROG ANTIGUO
       COPY COLWGENG.
      *>>>>
      *<<<< FIN_SCR_VARI
       COPY GNSWGRQA REPLACING ==01  ADR-REQA== BY ==02  SCR-RQA1==.
      *>>>>
       COPY COLWIEVC.
       COPY COLBREVC.


       COPY GNSWVIDD.
       COPY GNSWGRQA.
       COPY GNSWGUIB.
       COPY GNSWGELS.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-EVC-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-TAB-REQA==.
       COPY GNSBRTAB.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-MSC-REQA==.
       COPY GNSBRMSC.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-MSG-REQA==.
       COPY GNSBRMSG.
       COPY GNSWCFIO.
       COPY GNSWVFIO.
      *PTC-INI
      *PTC-SUB
      * ISP  10-MAY-2001 13:46:35 
      * COPY GNSWGFRM.
       COPY GNSWG3CF.
       COPY GNSWGTSK.
       COPY GNSWGQUE.
      *PTC-FIN
       COPY GNSWVNUM.
       COPY GNSWCNUM.
       COPY GNSWGFEC.
       COPY GNSWGHOY.
       COPY GNSWGSYS.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-OFI-REQA==.
       COPY TABBROFI.

      *<<<< WSS
       01  WSS-VARI.
      *DAD ini 22-MAR-1991 
           03  WSS-VAL-PESO                            PIC 9(11).
      *DAD fin 22-MAR-1991 
      *ALD/19-JUL-1988
           03  WSS-MEN1.
               05  FILLER               VALUE SPACES PIC X(01).
               05  WSS-SGV-VAL1-EDT     PIC --------------,---.
               05  WSS-GLS-GUI1                      PIC X(01).
               05  WSS-SGV-VAL2-EDT     PIC --------------,---.
           03  WSS-MEN2.
               05  FILLER               VALUE SPACES PIC X(01).
               05  WSS-NUM-VAL1-EDT                   PIC ----.
               05  FILLER               VALUE SPACES PIC X(01).
               05  WSS-IND-DMA1                      PIC X(01).
               05  FILLER               VALUE SPACES PIC X(01).
               05  WSS-GLS-GUI2                      PIC X(01).
               05  FILLER               VALUE SPACES PIC X(01).
               05  WSS-NUM-VAL2-EDT                   PIC ----.
               05  FILLER               VALUE SPACES PIC X(01).
               05  WSS-IND-DMA2                      PIC X(01).
           03  WSS-NUM-NFEC             VALUE 0      PIC 9(03).
           03  WSS-FEC-NFE1.
               05  WSS-NUM-DFE1         VALUE 0      PIC 9(02).
               05  WSS-NUM-MFE1         VALUE 0      PIC 9(02).
               05  WSS-NUM-SFE1         VALUE 0      PIC 9(02).
               05  WSS-NUM-AFE1         VALUE 0      PIC 9(02).
           03  WSS-FEC-NFE2.
               05  WSS-NUM-DFE2         VALUE 0      PIC 9(02).
               05  WSS-NUM-MFE2         VALUE 0      PIC 9(02).
               05  WSS-NUM-SFE2         VALUE 0      PIC 9(02).
               05  WSS-NUM-AFE2         VALUE 0      PIC 9(02).
           03  WSS-FEC-NFE3.
               05  WSS-NUM-DFE3         VALUE 0      PIC 9(02).
               05  WSS-NUM-MFE3         VALUE 0      PIC 9(02).
               05  WSS-NUM-SFE3         VALUE 0      PIC 9(02).
               05  WSS-NUM-AFE3         VALUE 0      PIC 9(02).
      *

           03  WSS-ICOR                 VALUE 0      PIC 9(01).
               88 NO-ASIGNE-CORRELATIVO VALUE 0.
           03  WSS-NUM-JUL              VALUE 0      PIC 9(06).
           03  WSS-NUM-DVDO             VALUE 0      PIC 9(06).
           03  WSS-NUM-VIGU             VALUE 0      PIC 9(06).
           03  WSS-NUM-REMA             VALUE 0      PIC 9(06).
           03  WSS-FEC-FPVC.
               05  WSS-NUM-DPVC         VALUE 0      PIC 9(02).
               05  WSS-NUM-MPVC         VALUE 0      PIC 9(02).
               05  WSS-NUM-SPVC         VALUE 0      PIC 9(02).
               05  WSS-NUM-APVC         VALUE 0      PIC 9(02).
           03  WSS-FEC-FUVC.
               05  WSS-NUM-DUVC         VALUE 0      PIC 9(02).
               05  WSS-NUM-MUVC         VALUE 0      PIC 9(02).
               05  WSS-NUM-SUVC         VALUE 0      PIC 9(02).
               05  WSS-NUM-AUVC         VALUE 0      PIC 9(02).
           03  WSS-FEC-FCO1.
               05  WSS-NUM-SCO1         VALUE 0      PIC 9(02).
               05  WSS-NUM-ACO1         VALUE 0      PIC 9(02).
               05  WSS-NUM-MCO1         VALUE 0      PIC 9(02).
               05  WSS-NUM-DCO1         VALUE 0      PIC 9(02).
           03  WSS-FEC-FCO2.
               05  WSS-NUM-SCO2         VALUE 0      PIC 9(02).
               05  WSS-NUM-ACO2         VALUE 0      PIC 9(02).
               05  WSS-NUM-MCO2         VALUE 0      PIC 9(02).
               05  WSS-NUM-DCO2         VALUE 0      PIC 9(02).
           03  WSS-OPEC                 VALUE SPACES PIC X(08).
      *CIMA-INI/BGT DIA VEN/OGB/08-2013
           03  WSS-DVC.
               05  WSS-NUM-DVCT                      PIC 9(02).
               05  FILLER               VALUE SPACES PIC X(58).
           03  WSS-CONS.
               05  WSS-GLS-SCOL         VALUE 'COL'  PIC X(03).
               05  WSS-GLS-TBGT         VALUE 'DVC'  PIC X(03).
               05  WSS-IND-SCTE         VALUE 'S'    PIC X(01).
               05  WSS-CT3              VALUE  03    PIC 9(02).
      *CIMA-FIN/BGT DIA VEN/OGB/08-2013
      *OGB-INI 22-DIC-2014 BGT DIA MENOR A 1 TRIMESTRE
           03  WSS-CT-1                 VALUE 1      PIC 9(01).
           03  WSS-FEC-FAXU.
               05 WSS-NUM-SAXU          VALUE 0      PIC 9(02).
               05 WSS-NUM-AAXU          VALUE 0      PIC 9(02).
               05 WSS-NUM-MAXU          VALUE 0      PIC 9(02).
               05 WSS-NUM-DAXU          VALUE 0      PIC 9(02).
           03  WSS-FEC-FAXE.
               05 WSS-NUM-SAXE          VALUE 0      PIC 9(02).
               05 WSS-NUM-AAXE          VALUE 0      PIC 9(02).
               05 WSS-NUM-MAXE          VALUE 0      PIC 9(02).
               05 WSS-NUM-DAXE          VALUE 0      PIC 9(02).
           03  WSS-IND-SBGT             VALUE ZEROES PIC 9(01).
           03  WSS-IND-BGTC             VALUE ZEROES PIC 9(01).
      *OGB-FIN 22-DIC-2014 BGT DIA MENOR A 1 TRIMESTRE
       COPY SGCBRDBC.
       COPY COLBROPC.
       COPY COLBRDLC.
       COPY COLBRTOC.
       COPY COLBRCYA.
      *ALD/18-JUL-1988 
       COPY COLBRPOC.
       COPY COLBRPVC.
       COPY TABBRCAM.
      *
       COPY GNSWGCPT.
      *>>>>
      *<<<< WSS
       COPY COLWGPMP.
      *>>>>
      *<<<< WSS_DTC
      *ALD/18-JUL-1988
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-POC-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-PVC-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-CAM-REQA==.
      *
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-OPC-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-DLC-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-CYA-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-DBC-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-TOC-REQA==.
      *>>>>
       01  PGM-VARI.
           03 PGM-ICLR                  VALUE ' '       PIC X(01).
           03 PGM-LIMPIAR-TODO          VALUE ' '       PIC X(01).
           03 PGM-LIMPIAR-LLAVES        VALUE 'K'       PIC X(01).
           03 PGM-LIMPIAR-CAMPOS        VALUE 'F'       PIC X(01).
           03 PGM-NO-LIMPIAR-NADA       VALUE 'N'       PIC X(01).
           03 PGM-PROG                                  PIC X(08).
           03 PGM-NTRN                                  PIC X(04).
           03 PGM-STAT.
              05 PGM-STAT-OPC.
                 88 PGM-STAT-OPC-NUL    VALUE '  '.
                 07 PGM-STT1-OPC        VALUE '2' PIC X(01).
                    88 PGM-STAT-OPC-OKS VALUE '0'.
                 07 PGM-STT2-OPC        VALUE '3' PIC X(01).
              05 PGM-STAT-EVC.
                 88 PGM-STAT-EVC-NUL    VALUE '  '.
                 07 PGM-STT1-EVC        VALUE '2' PIC X(01).
                    88 PGM-STAT-EVC-OKS VALUE '0'.
                 07 PGM-STT2-EVC        VALUE '3' PIC X(01).
              05 PGM-STAT-PVC.
                 88 PGM-STAT-PVC-NUL    VALUE '  '.
                 07 PGM-STT1-PVC        VALUE '2' PIC X(01).
                    88 PGM-STAT-PVC-OKS VALUE '0'.
                 07 PGM-STT2-PVC        VALUE '3' PIC X(01).
           03 PGM-SRNF                  VALUE '23'      PIC X(02).
           03 PGM-SOKS                  VALUE '00'      PIC X(02).
           03 PGM-SNUL                  VALUE '  '      PIC X(02).
           03 PGM-SUAR                  VALUE SPACES    PIC X(15).

       LINKAGE SECTION.
      *----------------
       01  DFHCOMMAREA.
      *<<<< CMA
           02 FILLER                      PIC X(3000).
      *>>>>
       COPY GNSLGFIO.

       PROCEDURE DIVISION.
      *===================

       MAIN SECTION.
       INI-MAIN.
           PERFORM INI.
       LUP-MAIN.
           IF SCR-INST = SCR-INST-HCM
                 PERFORM SCR-COM.
           IF SCR-CCPP = 'MOD'
                 PERFORM SCR-MOD
           ELSE
           IF SCR-CCPP = 'ING'
                 PERFORM SCR-ING
           ELSE
           IF SCR-CCPP = 'ACC'
                 PERFORM SCR-ACC
           ELSE
           IF SCR-CCPP = 'ELI'
                 PERFORM SCR-ELI
           ELSE
           IF SCR-CCPP = 'ACT'
                 PERFORM SCR-ACT
           ELSE
           IF SCR-CCPP = 'PGM'
                 PERFORM SCR-PGM
           ELSE
                 MOVE SCR-INST-HCM TO SCR-INST.
           GO TO LUP-MAIN.
       FIN-MAIN.
           EXIT.

       INI SECTION.
       INI-INI.
       COPY GNSBGEIB.
       COPY GNSBGEDB.
           MOVE LOW-VALUES TO EVC-FLD.
           MOVE LOW-VALUES TO EVC-EDT.
           PERFORM GNS-PRO-RCK.
           PERFORM GNS-BUS-VCA.
           PERFORM GNS-HDL-SYS.
           PERFORM GNS-HDL-FRM.
           MOVE 'COLPUEVC' TO FIO-PROG.
           PERFORM GNS-BUS-IDD.
      *PTC-INI
           PERFORM GNS-ERR-QUE.
           PERFORM GET-TSK-TERM.
      *PTC-FIN
      *<<<< INI_FIO
      *PTC ini
           PERFORM GNS-ERR-QUE.
      *PTC fin
       FIN-INI-FIO.
      *>>>>
       FIN-INI.
           EXIT.

       COPY GNSBHSYS.
       COPY GNSBHFRM.
       COPY GNSBPRCK.
       COPY GNSBBVCA.
       COPY GNSBBIDD.

       SCR-COM SECTION.
       INI-SCR-COM.
           PERFORM STP-EXIT.
           MOVE FRM-CPSF-AEY TO FRM-CPIM-AEY.
           PERFORM PRO-ALL.
           PERFORM SCR-CLRA-EVC.
           PERFORM EDT-KEY-EVC.
           PERFORM EDT-FLD-EVC.
           PERFORM SCR-PUTA.
           MOVE SCR-INST-HCM TO SCR-INST.
           MOVE SCR-CMNP     TO SYS-PROG.
           MOVE SCR-VARI     TO SYS-CMMA.
           MOVE SCR-TCMA     TO SYS-TCMA.
           MOVE SYS-XCTL     TO SYS-CMND.
      *PTC-INI
           IF NOT SCR-OFRM-SRV
      *PTC-FIN
           PERFORM GNS-PRO-SYS.
       XCT-ERR.
           MOVE 'XCTERR    ' TO MSG-COD-MENS.
           MOVE 'GNS'        TO MSG-COD-SIST.
           PERFORM GET-MSG.
           MOVE MSG-GLS-DESC TO SYS-MEN1.
           MOVE SYS-PROG     TO SYS-MEN2.
           MOVE SYS-ABOR     TO SYS-CMND.
      *PTC-INI
           IF NOT SCR-OFRM-SRV
      *PTC-FIN
           PERFORM GNS-PRO-SYS.
       COPY GNSBGGBK.
       FIN-SCR-COM.
           EXIT.

       SCR-MOD SECTION.
       INI-SCR-MOD.
           IF SCR-INST = SCR-INST-HKY
               PERFORM HBL-KEY
               MOVE SCR-INST-GKY TO SCR-INST
               PERFORM SCR-DMSG
           ELSE
           IF SCR-INST = SCR-INST-GFL
               PERFORM GET-FLD
           ELSE
           IF SCR-INST = SCR-INST-GCS
               PERFORM GET-ACC.
           PERFORM DESSCRTRL.
           IF FRM-FFLD = FRM-FFLD-PF7 OR FRM-FFLD-PF8
               PERFORM XCT-PRGP.
           IF NOT ( FRM-FFLD = FRM-FFLD-PF5 OR FRM-FFLD-PF6 )
               GO TO MSG-SCR-MOD.
      *>>>> PFS_SCR_MOD
           IF FRM-FFLD = FRM-FFLD-PF7 OR FRM-FFLD-PF8 OR                
                         FRM-FFLD-PF5 OR FRM-FFLD-PF6                   
               PERFORM XCT-PRGP.                                        
       MSG-SCR-MOD.
           IF SCR-STAT = SCR-STAT-CON
               MOVE SPACES TO FRM-MENS
           ELSE
           IF SCR-STAT = SCR-STAT-ABT OR SCR-VFLD = SCR-VFLD-NOT
               MOVE 'MODNOT    ' TO MSG-COD-MENS
               MOVE 'GNS' TO MSG-COD-SIST
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS
           ELSE
               MOVE SPACES TO FRM-MENS
               PERFORM CMN-MOD
               IF FIO-STAT-OKS
                   IF FRM-MEN1 NOT > SPACES
                       MOVE 'MODYES    ' TO MSG-COD-MENS
                       MOVE 'GNS' TO MSG-COD-SIST
                       PERFORM GET-MSG
                       MOVE MSG-GLS-DESC TO FRM-MEN1
                   ELSE
                       NEXT SENTENCE
               ELSE
               IF FRM-MENS NOT > SPACES
                   MOVE 'FIOSTAT' TO MSG-COD-TMSG
                   MOVE FIO-STAT  TO MSG-COD-CMSG
                   MOVE 'GNS'     TO MSG-COD-SIST
                   PERFORM GET-MSG
                   MOVE MSG-GLS-DESC TO FRM-MENS.
           PERFORM SCR-MSSG.
       FIN-SCR-MOD.
           EXIT.

       SCR-ING SECTION.
       INI-SCR-ING.
           IF SCR-INST = SCR-INST-HKY
               PERFORM HBL-IKY
               MOVE SCR-INST-GKY TO SCR-INST
      *PTC-INI
               IF NOT SCR-OFRM-SRV
                   PERFORM SCR-DMSG
               ELSE
                   PERFORM SCR-PUTA
      *PTC-FIN
           ELSE
           IF SCR-INST = SCR-INST-GFL
                PERFORM GET-FLD
           ELSE
           IF SCR-INST = SCR-INST-GCS
                PERFORM GET-ACC.
           PERFORM DESSCRTRL.
       MSG-SCR-ING.
           IF SCR-STAT = SCR-STAT-CON
               MOVE SPACES TO FRM-MENS
           ELSE
           IF SCR-STAT = SCR-STAT-ABT OR SCR-VFLD = SCR-VFLD-NOT
               MOVE 'INGNOT    ' TO MSG-COD-MENS
               MOVE 'GNS' TO MSG-COD-SIST
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS
           ELSE
               MOVE SPACES TO FRM-MENS
               PERFORM CMN-ING
               IF FIO-STAT-OKS
                   IF FRM-MEN1 NOT > SPACES
                       MOVE 'INGYES    ' TO MSG-COD-MENS
                       MOVE 'GNS' TO MSG-COD-SIST
                       PERFORM GET-MSG
                       MOVE MSG-GLS-DESC TO FRM-MEN1
                   ELSE
                       NEXT SENTENCE
               ELSE
               IF FRM-MENS NOT > SPACES
                   MOVE 'FIOSTAT' TO MSG-COD-TMSG
                   MOVE FIO-STAT  TO MSG-COD-CMSG
                   MOVE 'GNS'     TO MSG-COD-SIST
                   PERFORM GET-MSG
                   MOVE MSG-GLS-DESC TO FRM-MENS.
           PERFORM SCR-MSSG.
       FIN-SCR-ING.
           EXIT.

       SCR-ACC SECTION.
       INI-SCR-ACC.
           IF SCR-INST = SCR-INST-HKY
               PERFORM HBL-KEY
               MOVE SCR-INST-GKY TO SCR-INST
               PERFORM SCR-DMSG
           ELSE
           IF SCR-INST = SCR-INST-GFL
                PERFORM GET-FLD
           ELSE
           IF SCR-INST = SCR-INST-GCS
                PERFORM GET-ACC.
           PERFORM DESSCRTRL.
           IF FRM-FFLD = FRM-FFLD-PF7 OR FRM-FFLD-PF8 OR
                         FRM-FFLD-PF5 OR FRM-FFLD-PF6
               PERFORM XCT-PRGP.
           MOVE SPACES TO FRM-MENS.
           IF SCR-STAT NOT = SCR-STAT-CON
               PERFORM CMN-ACC.
           PERFORM SCR-MSSG.
       FIN-SCR-ACC.
           EXIT.

       SCR-ELI SECTION.
       INI-SCR-ELI.
           IF SCR-INST = SCR-INST-HKY
               PERFORM HBL-KEY
               MOVE SCR-INST-GKY TO SCR-INST
               PERFORM SCR-DMSG
           ELSE
           IF SCR-INST = SCR-INST-GCS
                PERFORM GET-ACC.
           PERFORM DESSCRTRL.
           IF FRM-FFLD = FRM-FFLD-PF7 OR FRM-FFLD-PF8 OR
                         FRM-FFLD-PF5 OR FRM-FFLD-PF6
               PERFORM XCT-PRGP.
           IF SCR-STAT = SCR-STAT-CON
               MOVE SPACES TO FRM-MENS
           ELSE
           IF SCR-STAT = SCR-STAT-ABT OR SCR-VFLD = SCR-VFLD-NOT
               MOVE 'ELINOT    ' TO MSG-COD-MENS
               MOVE 'GNS' TO MSG-COD-SIST
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS
           ELSE
               MOVE SPACES TO FRM-MENS
               PERFORM CMN-ELI
               IF FIO-STAT-OKS
                   IF FRM-MEN1 NOT > SPACES
                       MOVE 'ELIYES    ' TO MSG-COD-MENS
                       MOVE 'GNS' TO MSG-COD-SIST
                       PERFORM GET-MSG
                       MOVE MSG-GLS-DESC TO FRM-MEN1
                   ELSE
                       NEXT SENTENCE
               ELSE
               IF FRM-MENS NOT > SPACES
                   MOVE 'FIOSTAT' TO MSG-COD-TMSG
                   MOVE FIO-STAT  TO MSG-COD-CMSG
                   MOVE 'GNS'     TO MSG-COD-SIST
                   PERFORM GET-MSG
                   MOVE MSG-GLS-DESC TO FRM-MENS.
           PERFORM SCR-MSSG.
       FIN-SCR-ELI.
           EXIT.

       SCR-ACT SECTION.
       INI-SCR-ACT.
           IF SCR-INST = SCR-INST-HKY
               PERFORM HBL-KEY
               MOVE SCR-INST-GKY TO SCR-INST
               PERFORM SCR-DMSG
           ELSE
           IF SCR-INST = SCR-INST-GFL
                PERFORM GET-FLD
           ELSE
           IF SCR-INST = SCR-INST-GCS
                PERFORM GET-ACC.
           PERFORM DESSCRTRL.
           IF ( FRM-FFLD = FRM-FFLD-PF7 OR FRM-FFLD-PF8  OR
                           FRM-FFLD-PF5 OR FRM-FFLD-PF6 ) AND
              SCR-ACTU = SCR-ACTU-MOD
               PERFORM XCT-PRGP.
           IF SCR-ACTU = SCR-ACTU-MOD
                  PERFORM MSG-SCR-MOD
           ELSE
                  PERFORM MSG-SCR-ING.
       FIN-SCR-ACT.
           EXIT.

       SCR-PGM SECTION.
       INI-SCR-PGM.
           IF SCR-INST = SCR-INST-HKY
               PERFORM HBL-KEY
               MOVE SCR-INST-GKY TO SCR-INST
               PERFORM SCR-DMSG
           ELSE
           IF SCR-INST = SCR-INST-GFL
                PERFORM GET-FLD
           ELSE
           IF SCR-INST = SCR-INST-GCS
                PERFORM GET-ACC.
       TRL-SCR-PGM.
           PERFORM DESSCRTRL.
           IF FRM-FFLD = FRM-FFLD-PF7 OR FRM-FFLD-PF8 OR
                         FRM-FFLD-PF5 OR FRM-FFLD-PF6
               PERFORM XCT-PRGP.
           MOVE SPACES TO FRM-MENS.
           IF SCR-STAT NOT = SCR-STAT-CON
               PERFORM CMN-PGM.
           PERFORM SCR-MSSG.
       FIN-SCR-PGM.
           EXIT.

       SCR-DMSG SECTION.
       INI-SCR-DMSG.
           IF PGM-ICLR = PGM-NO-LIMPIAR-NADA
               NEXT SENTENCE
           ELSE
           IF PGM-ICLR = PGM-LIMPIAR-TODO
               PERFORM SCR-CLRA-EVC
               PERFORM EDT-KEY-EVC
               PERFORM EDT-FLD-EVC
           ELSE
           IF PGM-ICLR = PGM-LIMPIAR-LLAVES
               PERFORM CLR-KEY-EVC
               PERFORM EDT-KEY-EVC
           ELSE
               PERFORM CLR-FLD-EVC
               PERFORM EDT-FLD-EVC.
           PERFORM STP-EXIT.
           PERFORM SCR-PUTA.
           PERFORM SCR-EXIT.
       FIN-SCR-DMSG.
           EXIT.

       XCT-PRGP SECTION.
       INI-XCT-PRGP.
           MOVE SCR-INST-BRW TO SCR-INST.
           PERFORM STP-EXIT.
           MOVE FRM-FFLD   TO SCR-FFLD.
      *
           MOVE SCR-PROG     TO SYS-PROG.
           MOVE SCR-VARI     TO SYS-CMMA.
           MOVE SCR-TCMA     TO SYS-TCMA.
           MOVE SYS-XCTL     TO SYS-CMND.
      *PTC-INI
           IF NOT SCR-OFRM-SRV
      *PTC-FIN
           PERFORM GNS-PRO-SYS.
           PERFORM XCT-ERR.
       FIN-XCT-PRGP.
           EXIT.

       SCR-RST SECTION.
       INI-SCR-RST.
           MOVE SPACES       TO PGM-ICLR.
           MOVE SPACES       TO SCR-ACTU.
           MOVE SCR-STPP     TO SCR-STAT.
           MOVE SCR-MFLD-NOT TO SCR-MFLD.
           MOVE LOW-VALUES   TO EVC-FLD.
           MOVE LOW-VALUES TO EVC-EDT.
       FIN-SCR-RST.
           EXIT.

       GET-FLD SECTION.
       INI-GET-FLD.
           PERFORM SCR-GFLD.
           IF FRM-STAT-ABT
               MOVE SCR-STAT-ABT TO SCR-STAT.
       FIN-GET-FLD.
           EXIT.

       CMN-MOD SECTION.
       INI-CMN-MOD.
      *<<<< INI_CMN_MOD
      *OGB-INI 22-DIC-2014 BGT DIA MENOR A 1 TRIMESTRE
           MOVE SPACES TO EVC.
           PERFORM CHECK-BGT-DVC.
           MOVE SPACES TO EVC.
      *OGB-FIN 22-DIC-2014 BGT DIA MENOR A 1 TRIMESTRE
      *>>>>
           PERFORM KEY-ALL-EVC.
           MOVE FIO-GET-KEY-UPD TO FIO-CMND.
           PERFORM COL-FIO-EVC.
           IF NOT FIO-STAT-OKS
               GO TO FIN-CMN-MOD.
      *<<<< CMN_MOD_RET
           PERFORM RET-HDR-EVC.
      *>>>>
           PERFORM RET-ALL-EVC.
      *<<<< CMN_MOD
      *CIMA-INI/BGT DIA VEN/OGB/08-2013
      *OGB-INI 22-DIC-2014 BGT DIA MENOR A 1 TRIMESTRE
      *    MOVE ZEROES TO WSS-DVC IN WSS-VARI.
      *    MOVE SPACES TO TAB-COD-CTAB IN TAB.
      *    MOVE WSS-GLS-SCOL TO FIO-SIST.
      *    MOVE EVC-CAI-IOPC IN EVC TO OPC-CAI-IOPC IN OPC.
      *    MOVE EVC-IIC-IOPC IN EVC TO OPC-IIC-IOPC IN OPC.
      *    MOVE FIO-GET-KEY TO FIO-CMND.
      *    PERFORM COL-FIO-OPC.
      *    IF FIO-STAT-OKS
      *       MOVE WSS-GLS-SCOL TO TAB-COD-SIST
      *       MOVE WSS-GLS-TBGT TO TAB-COD-TTAB IN TAB
      *       MOVE OPC-COD-COOC IN OPC TO TAB-COD-CTAB IN TAB
      *       MOVE FIO-GET-KEY TO FIO-CMND
      *       PERFORM GNS-FIO-TAB
      *       IF EVC-VAL-VENC IN EVC NOT > ZEROES
      *          IF FIO-STAT-OKS AND TAB-IND-VIGE IN TAB = WSS-IND-SCTE
           IF WSS-IND-BGTC = WSS-CT-1
                 PERFORM VER-FEC-BGT-TRI
                 IF WSS-IND-SBGT = WSS-CT-1
      *OGB-FIN 22-DIC-2014 BGT DIA MENOR A 1 TRIMESTRE
                    MOVE TAB-GLS-DATA IN TAB     TO WSS-DVC IN WSS-VARI
                    MOVE WSS-NUM-DVCT IN WSS-DVC TO EVC-NUM-DPVE IN EVC

                    MOVE OPC-NUM-DCOL IN OPC TO FEC-DEC1
                    MOVE OPC-NUM-MCOL IN OPC TO FEC-MEC1
                    MOVE OPC-NUM-SCOL IN OPC TO FEC-SEC1
                    MOVE OPC-NUM-ACOL IN OPC TO FEC-AEC1

                    MOVE EVC-NUM-DPVE IN EVC     TO FEC-DEC2
                    MOVE EVC-NUM-MPVC IN EVC     TO FEC-MEC2
                    MOVE EVC-NUM-SPVC IN EVC     TO FEC-SEC2
                    MOVE EVC-NUM-APVC IN EVC     TO FEC-AEC2

                    MOVE FEC-CMP-FEC  TO FEC-CMND
                    MOVE FEC-FORM-FEC TO FEC-FORM
                    PERFORM PRO-FEC

      *PVC-INI 19-08-2015 VCTO MAYOR-IGUAL DIA TRIM. BGT
      *             IF FEC-STAT-GRT
                    IF FEC-STAT-GRT OR FEC-STAT-EQL
      *PVC-FIN 19-08-2015 VCTO MAYOR-IGUAL DIA TRIM. BGT
                       MOVE FEC-SUM-MES          TO FEC-CMND
                       MOVE WSS-CT3 IN WSS-CONS  TO FEC-NMES
                       MOVE EVC-NUM-DPVC IN EVC  TO FEC-ITM1
                       MOVE EVC-NUM-MPVC IN EVC  TO FEC-ITM2
                       MOVE EVC-NUM-SPVC IN EVC  TO FEC-ITM3
                       MOVE EVC-NUM-APVC IN EVC  TO FEC-ITM4
                       MOVE FEC-FORM-FEC         TO FEC-FORM
                       PERFORM CAL-FEC
                       MOVE    FEC-FECH(1:2)    TO  EVC-NUM-DPVC IN EVC
                       MOVE    FEC-FECH(3:2)    TO  EVC-NUM-MPVC IN EVC
                       MOVE    FEC-FECH(5:2)    TO  EVC-NUM-SPVC IN EVC
                       MOVE    FEC-FECH(7:2)    TO  EVC-NUM-APVC IN EVC
                       MOVE WSS-NUM-DVCT        TO  EVC-NUM-DPVC IN EVC

                       SUBTRACT 1  FROM EVC-NUM-VIGU IN EVC
                       MOVE EVC-NUM-VIGU IN EVC TO
                                            EVC-NUM-VIGU IN EVC-FLD
                    ELSE
      *PVC-INI 19-08-2015 VCTO MAYOR-IGUAL DIA TRIM. BGT
      *                MOVE WSS-NUM-DVCT        TO  EVC-NUM-DPVC IN EVC.
                       MOVE WSS-NUM-DVCT        TO  EVC-NUM-DPVC IN EVC
               ELSE
               IF WSS-FEC-FAXE NOT = EVC-FEC-FPVC IN EVC AND
                  WSS-FEC-FAXE > ZEROES
                   MOVE WSS-FEC-FAXE TO EVC-FEC-FPVC IN EVC.
      *PVC-FIN 19-08-2015 VCTO MAYOR-IGUAL DIA TRIM. BGT
      *CIMA-FIN/BGT DIA VEN/OGB/08-2013
      *>>>>
      *<<<< CMN_ING OR CMN_MOD
           PERFORM GET-FHOY.
      *     MOVE HOY-STP-ITRN IN HOY-VARI TO EVC-STP-IINV IN EVC.
      *>>>>
           MOVE FIO-MOD TO FIO-CMND.
           PERFORM COL-FIO-EVC.
      *<<<< FIN_CMN_MOD
           IF SCR-CMND = 'MCA'
               GO TO FIN-CMN-MOD.
           MOVE EVC-CAI-IOPC IN EVC TO OPC-CAI-IOPC IN OPC.
           MOVE EVC-IIC-IOPC IN EVC TO OPC-IIC-IOPC IN OPC.
           MOVE FIO-GET-KEY-UPD TO FIO-CMND.
           PERFORM COL-FIO-OPC.
           IF FIO-STAT-OKS
                   MOVE 'M' TO OPC-MSC-STAT IN OPC
                   MOVE FIO-MOD TO FIO-CMND
                   PERFORM COL-FIO-OPC.
      *>>>>
       FIN-CMN-MOD.
           EXIT.

       CMN-ING SECTION.
       INI-CMN-ING.
           MOVE SPACES TO EVC.
      *<<<< INI_CMN_ING
      *OGB-INI 22-DIC-2014 BGT DIA MENOR A 1 TRIMESTRE
           PERFORM CHECK-BGT-DVC.
           MOVE SPACES TO EVC.
      *OGB-FIN 22-DIC-2014 BGT DIA MENOR A 1 TRIMESTRE
           MOVE ZEROES TO EVC-NUM-VCAN IN EVC.
           MOVE ZEROES TO EVC-NUM-DURV IN EVC.
           MOVE ZEROES TO EVC-NUM-IVCT IN EVC.
           MOVE ZEROES TO EVC-VAL-VCVF IN EVC.
           PERFORM RET-HDR-EVC.
      *>>>>
           PERFORM RET-ALL-EVC.
      *<<<< CMN_ING
      *CIMA-INI/BGT DIA VEN/OGB/08-2013
      *OGB-INI 22-DIC-2014 BGT DIA MENOR A 1 TRIMESTRE
      *    MOVE ZEROES TO WSS-DVC IN WSS-VARI.
      *    MOVE SPACES TO TAB-COD-CTAB IN TAB.
      *    MOVE WSS-GLS-SCOL TO FIO-SIST.
      *    MOVE SCR-CAI-IOPC IN SCR-VARI TO OPC-CAI-IOPC IN OPC.
      *    MOVE SCR-IIC-IOPC IN SCR-VARI TO OPC-IIC-IOPC IN OPC.
      *    MOVE FIO-GET-KEY TO FIO-CMND.
      *    PERFORM COL-FIO-OPC.
      *    IF FIO-STAT-OKS
      *       MOVE WSS-GLS-SCOL TO TAB-COD-SIST
      *       MOVE WSS-GLS-TBGT TO TAB-COD-TTAB IN TAB
      *       MOVE OPC-COD-COOC IN OPC TO TAB-COD-CTAB IN TAB
      *       MOVE FIO-GET-KEY TO FIO-CMND
      *       PERFORM GNS-FIO-TAB
      *       IF EVC-VAL-VENC IN EVC NOT > ZEROES
      *          IF FIO-STAT-OKS AND TAB-IND-VIGE IN TAB = WSS-IND-SCTE
           IF WSS-IND-BGTC = WSS-CT-1
                 PERFORM VER-FEC-BGT-TRI
                 IF WSS-IND-SBGT = WSS-CT-1
      *OGB-FIN 22-DIC-2014 BGT DIA MENOR A 1 TRIMESTRE
                    MOVE TAB-GLS-DATA IN TAB     TO WSS-DVC IN WSS-VARI
                    MOVE WSS-NUM-DVCT IN WSS-DVC TO EVC-NUM-DPVE IN EVC

                    MOVE OPC-NUM-DCOL IN OPC TO FEC-DEC1
                    MOVE OPC-NUM-MCOL IN OPC TO FEC-MEC1
                    MOVE OPC-NUM-SCOL IN OPC TO FEC-SEC1
                    MOVE OPC-NUM-ACOL IN OPC TO FEC-AEC1

                    MOVE EVC-NUM-DPVE IN EVC     TO FEC-DEC2
                    MOVE EVC-NUM-MPVC IN EVC     TO FEC-MEC2
                    MOVE EVC-NUM-SPVC IN EVC     TO FEC-SEC2
                    MOVE EVC-NUM-APVC IN EVC     TO FEC-AEC2

                    MOVE FEC-CMP-FEC  TO FEC-CMND
                    MOVE FEC-FORM-FEC TO FEC-FORM
                    PERFORM PRO-FEC

      *PVC-INI 19-08-2015 VCTO MAYOR-IGUAL DIA TRIM. BGT
      *             IF FEC-STAT-GRT
                    IF FEC-STAT-GRT OR FEC-STAT-EQL
      *PVC-FIN 19-08-2015 VCTO MAYOR-IGUAL DIA TRIM. BGT
                       MOVE FEC-SUM-MES          TO FEC-CMND
                       MOVE WSS-CT3 IN WSS-CONS  TO FEC-NMES
                       MOVE EVC-NUM-DPVC IN EVC  TO FEC-ITM1
                       MOVE EVC-NUM-MPVC IN EVC  TO FEC-ITM2
                       MOVE EVC-NUM-SPVC IN EVC  TO FEC-ITM3
                       MOVE EVC-NUM-APVC IN EVC  TO FEC-ITM4
                       MOVE FEC-FORM-FEC         TO FEC-FORM
                       PERFORM CAL-FEC
                       MOVE    FEC-FECH(1:2)    TO  EVC-NUM-DPVC IN EVC
                       MOVE    FEC-FECH(3:2)    TO  EVC-NUM-MPVC IN EVC
                       MOVE    FEC-FECH(5:2)    TO  EVC-NUM-SPVC IN EVC
                       MOVE    FEC-FECH(7:2)    TO  EVC-NUM-APVC IN EVC
                       MOVE WSS-NUM-DVCT        TO  EVC-NUM-DPVC IN EVC
                       SUBTRACT 1  FROM EVC-NUM-VIGU IN EVC
                       MOVE EVC-NUM-VIGU IN EVC TO
                                            EVC-NUM-VIGU IN EVC-FLD
                    ELSE
      *PVC-INI 19-08-2015 VCTO MAYOR-IGUAL DIA TRIM. BGT
      *                MOVE WSS-NUM-DVCT        TO  EVC-NUM-DPVC IN EVC.
                       MOVE WSS-NUM-DVCT        TO  EVC-NUM-DPVC IN EVC
               ELSE
               IF WSS-FEC-FAXE NOT = EVC-FEC-FPVC IN EVC AND
                  WSS-FEC-FAXE > ZEROES
                   MOVE WSS-FEC-FAXE TO EVC-FEC-FPVC IN EVC.
      *PVC-FIN 19-08-2015 VCTO MAYOR-IGUAL DIA TRIM. BGT
      *CIMA-FIN/BGT DIA VEN/OGB/08-2013
           MOVE SPACES TO EVC-GLS-FLAG IN EVC.
      *     MOVE SPACES TO EVC-IND-AINV IN EVC.
      *     MOVE SPACES TO EVC-COD-OINV IN EVC.
           MOVE ZEROES TO EVC-NUM-DURV IN EVC.
           MOVE SPACES TO EVC-IND-UTDV IN EVC.
           MOVE ZEROES TO EVC-NUM-VCAN IN EVC.
      *     MOVE ZEROES TO EVC-NUM-IVCT IN EVC.
      *    MOVE EVC-NUM-DPVC IN EVC TO EVC-NUM-DPVE.
      *    MOVE SPACES TO EVC-GLS-DISP IN EVC.
      *>>>>
      *<<<< CMN_ING OR CMN_MOD
           PERFORM GET-FHOY.
      *     MOVE HOY-STP-ITRN IN HOY-VARI TO EVC-STP-IINV IN EVC.
      *>>>>
           MOVE FIO-PUT TO FIO-CMND.
           PERFORM COL-FIO-EVC.
      *<<<< FIN_CMN_ING OR SCR_GFLD_VAL_MKY
           IF FRM-FFLD = FRM-FFLD-PF10 AND
              SCR-IND-ENG IN SCR-VEC-ENG(SCR-IPRO) = 'S'
               PERFORM EGR-EOV.
      *>>>>
      *<<<< FIN_CMN_ING
           IF SCR-IND-ENG IN SCR-VEC-ENG(SCR-IPRO) NOT = 'S'
               MOVE EVC-CAI-IOPC IN EVC TO OPC-CAI-IOPC IN OPC
               MOVE EVC-IIC-IOPC IN EVC TO OPC-IIC-IOPC IN OPC
               MOVE FIO-GET-KEY-UPD TO FIO-CMND
               PERFORM COL-FIO-OPC
               IF FIO-STAT-OKS
                       MOVE 'M' TO OPC-MSC-STAT IN OPC
                       MOVE FIO-MOD TO FIO-CMND
                       PERFORM COL-FIO-OPC.
      *>>>>
       FIN-CMN-ING.
           EXIT.

       CMN-ACC SECTION.
       INI-CMN-ACC.
           IF SCR-STAT = SCR-STAT-ABT OR SCR-VFLD = SCR-VFLD-NOT
               MOVE 'ACCION NO REALIZADA' TO FRM-MENS
               GO TO FIN-CMN-ACC.
           PERFORM KEY-ALL-EVC.
           MOVE FIO-GET-KEY-UPD TO FIO-CMND.
           PERFORM COL-FIO-EVC.
           IF NOT FIO-STAT-OKS
               GO TO FIN-CMN-ACC.
           PERFORM RET-ALL-EVC.
       FIN-CMN-ACC.
           EXIT.

       CMN-ELI SECTION.
       INI-CMN-ELI.
           PERFORM KEY-ALL-EVC.
           MOVE FIO-GET-KEY-UPD TO FIO-CMND.
           PERFORM COL-FIO-EVC.
           IF NOT FIO-STAT-OKS
               GO TO FIN-CMN-ELI.
           MOVE FIO-DEL TO FIO-CMND.
           PERFORM COL-FIO-EVC.
      *<<<< FIN_CMN_ELI
      *DAD ini  08-JAN-1993   (Memo.06-01-93)
           MOVE EVC-CAI-IOPC IN EVC TO OPC-CAI-IOPC IN OPC.
           MOVE EVC-IIC-IOPC IN EVC TO OPC-IIC-IOPC IN OPC.
           MOVE FIO-GET-KEY-UPD TO FIO-CMND.
           PERFORM COL-FIO-OPC.
           IF FIO-STAT-OKS
                   MOVE 'M' TO OPC-MSC-STAT IN OPC
                   MOVE FIO-MOD TO FIO-CMND
                   PERFORM COL-FIO-OPC.
      *DAD fin  08-JAN-1993
      *>>>>
       FIN-CMN-ELI.
           EXIT.

       CMN-PGM SECTION.
       INI-CMN-PGM.
           PERFORM RET-ALL-EVC.
       FIN-CMN-PGM.
           EXIT.

       STP-EXIT SECTION.
       INI-STP-EXIT.
           MOVE SCR-PROG TO PGM-PROG.
           MOVE SCR-NTRN TO PGM-NTRN.

           MOVE SCR-PROV TO SCR-PROG.
           MOVE SCR-NTRV TO SCR-NTRN.

           MOVE PGM-PROG TO SCR-PROV
           MOVE PGM-NTRN TO SCR-NTRV.
       FIN-STP-EXIT.
           EXIT.

       SCR-EXIT SECTION.
       INI-SCR-EXIT.
           MOVE 'P'      TO SCR-ICMN.
           MOVE SCR-NTRN TO SYS-NTRN.
           MOVE SCR-VARI TO SYS-CMMA.
           MOVE SCR-TCMA TO SYS-TCMA.
           MOVE SYS-RTRN TO SYS-CMND.
      *PTC-INI
           IF NOT SCR-OFRM-SRV
      *PTC-FIN
           PERFORM GNS-PRO-SYS.
       FIN-SCR-EXIT.
           EXIT.

       SCR-PUTA SECTION.
       INI-SCR-PUTA.
      *PTC-INI
           IF FRM-SUAR EQUAL FRM-SUAR-MAL OR FRM-SUAR-CLR
               MOVE 'S' TO SCR-IERR.
      *PTC-FIN
           MOVE SCR-NMAP TO FRM-NAME.
           MOVE SCR-NLIB TO FRM-NLIB.
           MOVE EVC-FLD TO FRM-DFLD.
           MOVE FRM-PUT-ALL TO FRM-CMND.
           PERFORM GNS-PRO-FRM.
       FIN-SCR-PUTA.
           EXIT.

       SCR-MSSG SECTION.
       INI-SCR-MSSG.
           IF FRM-MEN1 NOT > SPACES
               MOVE SPACES TO FRM-MEN1.
           IF FRM-MEN2 NOT > SPACES
               MOVE SPACES TO FRM-MEN2.
           MOVE FRM-MENS TO EVC-GLS-MENS.
       FIN-SCR-MSSG.
           EXIT.

       SCR-GFLD SECTION.
       INI-SCR-GFLD.
           MOVE SCR-NMAP TO FRM-NAME.
           MOVE SCR-NLIB TO FRM-NLIB.
           MOVE FRM-GET-ALL TO FRM-CMND.
           PERFORM GNS-PRO-FRM.
           MOVE SPACES TO FRM-MENS.
           IF NOT ( FRM-FFLD = FRM-FFLD-RET  OR FRM-FFLD-PF10 OR
                               FRM-FFLD-PF12 OR FRM-FFLD-PF3 )
      *<<<< PFS_SCR_GFLD
           IF NOT ( ( SCR-CCPP = 'MOD' OR  SCR-CCPP = 'ACC' OR
                      SCR-CCPP = 'ELI'                      OR
                    ( SCR-CCPP = 'ACT' AND SCR-ACTU = SCR-ACTU-MOD ) )
                      AND ( FRM-FFLD = FRM-FFLD-PF8 OR
                            FRM-FFLD = FRM-FFLD-PF7 ) )
      *>>>>
               MOVE 'PFSINV    ' TO MSG-COD-MENS
               MOVE 'GNS' TO MSG-COD-SIST
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS
               PERFORM FST-FLD-EVC
               PERFORM SCR-MSSG
               PERFORM SCR-PUTA
               PERFORM SCR-EXIT.
           MOVE FRM-DFLD TO EVC-FLD.
           IF FRM-STAT-ABT
               GO TO FIN-SCR-GFLD.
           MOVE FRM-SUAR-OKS TO FRM-SUAR.
           PERFORM VAL-NUM-KEY-EVC.
           IF FRM-SUAR EQUAL FRM-SUAR-MAL OR FRM-SUAR-CLR
      *PTC-INI
               MOVE 'S' TO SCR-IERR
      *PTC-FIN
               PERFORM SCR-MSSG
               PERFORM EDT-KEY-EVC
               PERFORM SCR-PUTA
               PERFORM SCR-EXIT.
           PERFORM VAL-NUM-FLD-EVC.
           IF FRM-SUAR EQUAL FRM-SUAR-MAL OR FRM-SUAR-CLR
      *PTC-INI
               MOVE 'S' TO SCR-IERR
      *PTC-FIN
               PERFORM SCR-MSSG
               PERFORM EDT-KEY-EVC
               PERFORM EDT-FLD-EVC
               PERFORM SCR-PUTA
               PERFORM SCR-EXIT.
      *<<<< FIN_CMN_ING OR SCR_GFLD_VAL_MKY
           IF FRM-FFLD = FRM-FFLD-PF10 AND
              SCR-IND-ENG IN SCR-VEC-ENG(SCR-IPRO) = 'S'
               PERFORM EGR-EOV.
      *>>>>
           PERFORM VAL-MKY-EVC.
           IF FRM-SUAR EQUAL FRM-SUAR-MAL OR FRM-SUAR-CLR
      *PTC-INI
               MOVE 'S' TO SCR-IERR
      *PTC-FIN
               GO TO ERR-SCR-GFLD.
      *<<<< SCR_GFLD_VAL_FLD
      *ISP ES NECESARIO TENER LOS DATOS DE LA OPERACION
      *    PARA LA VALIDACION DE CAMPOS
           MOVE EVC-CAI-IOPC IN EVC-FLD TO OPC-CAI-IOPC IN OPC.
           MOVE EVC-IIC-IOPC IN EVC-FLD TO OPC-IIC-IOPC IN OPC.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM COL-FIO-OPC.
           IF NOT FIO-STAT-OKS
               MOVE 'COL' TO MSG-COD-SIST
               MOVE 'OPC    NEX' TO MSG-COD-MENS
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS
               MOVE FRM-SUAR-MAL TO FRM-SUAR
               GO TO ERR-SCR-GFLD.
      *>>>>
           PERFORM VAL-FLD-EVC.
           IF FRM-SUAR EQUAL FRM-SUAR-MAL OR FRM-SUAR-CLR
               GO TO ERR-SCR-GFLD.
           PERFORM VAL-CON-FLD-EVC.
           IF NOT ( FRM-SUAR EQUAL FRM-SUAR-MAL OR FRM-SUAR-CLR )
               GO TO FIN-SCR-GFLD.
           IF FRM-UCUR NOT > SPACES
               PERFORM FST-FLD-EVC.
       ERR-SCR-GFLD.
      *PTC-INI
           MOVE 'S' TO SCR-IERR.
      *PTC-FIN
           PERFORM SCR-MSSG.
           PERFORM EDT-KEY-EVC.
           PERFORM EDT-FLD-EVC.
           PERFORM SCR-PUTA.
           PERFORM SCR-EXIT.
       FIN-SCR-GFLD.
      *<<<< FIN_SCR_GIKY OR FIN_SCR_GCNF OR FIN_SCR_GFLD
           IF FRM-FFLD = FRM-FFLD-PF3 AND
              SCR-IND-ENG IN SCR-VEC-ENG(SCR-IPRO) = 'S'
               PERFORM EGR-EOV.
      *>>>>
           MOVE SCR-STAT-MOD TO SCR-STAT.

       GET-ACC SECTION.
       INI-GET-ACC.
           MOVE SCR-NMAP TO FRM-NAME.
           MOVE SCR-NLIB TO FRM-NLIB.
           MOVE FRM-GET-ALL TO FRM-CMND.
           PERFORM GNS-PRO-FRM.
           IF NOT ( FRM-FFLD = FRM-FFLD-RET  OR FRM-FFLD-PF10 OR
                               FRM-FFLD-PF12 OR FRM-FFLD-PF3 )
      *<<<< PFS_GET_CON OR PFS_GET_ACC OR PFS_SCR_GKEY
           IF NOT ( FRM-FFLD = FRM-FFLD-PF8 OR FRM-FFLD = FRM-FFLD-PF7 )
      *>>>>
               MOVE 'PFSINV    ' TO MSG-COD-MENS
               MOVE 'GNS' TO MSG-COD-SIST
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO EVC-GLS-MEN2
               MOVE SCR-PRMT     TO EVC-GLS-MEN1
               PERFORM FST-MSG
               PERFORM SCR-PUTA
               PERFORM SCR-EXIT.
           MOVE FRM-DFLD TO EVC-FLD.
           IF NOT ( ( FRM-FFLD = FRM-FFLD-PF12 OR FRM-FFLD-PF3 ) OR
                      SCR-CONF > SPACES )
               PERFORM VAL-NUM-KEY-EVC
               PERFORM VAL-NUM-FLD-EVC.
       FIN-GET-ACC.
           MOVE SCR-STAT-SON TO SCR-STAT.

       GET-CON SECTION.
       INI-GET-CON.
           MOVE SCR-NMAP TO FRM-NAME.
           MOVE SCR-NLIB TO FRM-NLIB.
           MOVE FRM-GET-ALL TO FRM-CMND.
           PERFORM GNS-PRO-FRM.
           IF NOT ( FRM-FFLD = FRM-FFLD-RET  OR FRM-FFLD-PF10 OR
                               FRM-FFLD-PF12 OR FRM-FFLD-PF3 )
      *<<<< PFS_GET_CON OR PFS_GET_ACC OR PFS_SCR_GKEY
           IF NOT ( FRM-FFLD = FRM-FFLD-PF8 OR FRM-FFLD = FRM-FFLD-PF7 )
      *>>>>
               MOVE 'PFSINV    ' TO MSG-COD-MENS
               MOVE 'GNS' TO MSG-COD-SIST
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO EVC-GLS-MEN2
               MOVE SCR-PRMT     TO EVC-GLS-MEN1
               PERFORM FST-MSG
               PERFORM SCR-PUTA
               PERFORM SCR-EXIT.
           MOVE FRM-DFLD TO EVC-FLD.
       FIN-GET-CON.
           MOVE SCR-STAT-CON TO SCR-STAT.

       CLR-MSG SECTION.
       INI-CLR-MSG.
           MOVE SPACES TO EVC-GLS-MENS.
       FIN-CLR-MSG.
           EXIT.

       HBL-IKY SECTION.
       INI-HBL-IKY.
      *PTC-INI
           IF NOT SCR-OFRM-SRV
      *PTC-FIN
           IF SCR-DESDE-CMN
               MOVE EVC-GLS-MENS TO FRM-MENS
               MOVE LOW-VALUES TO EVC-FLD
      * FLB  7-NOV-1994
               PERFORM CLR-KEY-EVC

               IF FRM-MENS < SPACES
                   MOVE LOW-VALUES TO EVC-GLS-MENS
               ELSE
                   MOVE FRM-MENS TO EVC-GLS-MENS.
           PERFORM PRO-FLD-EVC.
           PERFORM PRO-MKY-EVC.
           PERFORM UNP-IKY-EVC.
           PERFORM FST-KEY-EVC.
      *<<<< FIN_HBL_IKY
           MOVE '1' TO FRM-CPIM-AEY.                                    
           IF SCR-IND-ENG IN SCR-VEC-ENG(SCR-IPRO) = 'S'
               PERFORM HBL-KEY-EVC.
      *>>>>
       FIN-HBL-IKY.
           EXIT.

       HBL-KEY SECTION.
       INI-HBL-KEY.
      *PTC-INI
           IF NOT SCR-OFRM-SRV
      *PTC-FIN
           IF SCR-DESDE-CMN
               MOVE EVC-GLS-MENS TO FRM-MENS
               MOVE LOW-VALUES TO EVC-FLD
               IF FRM-MENS < SPACES
                   MOVE LOW-VALUES TO EVC-GLS-MENS
               ELSE
                   MOVE FRM-MENS TO EVC-GLS-MENS.
           MOVE FRM-CPSF-AEY TO FRM-CPIM-AEY.
           PERFORM PRO-FLD-EVC.
           MOVE '1' TO FRM-CPIM-AEY.
           PERFORM UNP-KEY-EVC.
           PERFORM FST-KEY-EVC.
      *<<<< FIN_HBL_KEY
           MOVE '1' TO FRM-CPIM-AEY.
      *>>>>
       FIN-HBL-KEY.
           EXIT.

       HBL-FLD SECTION.
       INI-HBL-FLD.
           PERFORM UNP-MKY-EVC.
           PERFORM UNP-FLD-EVC.
           PERFORM FST-FLD-EVC.
      *<<<< FIN_HBL_FLD
           IF SCR-CMND = 'MCA'
               PERFORM PRO-FLD-EVC
               MOVE FRM-CPIM-UBY TO EVC-IND-CAUT-ATR IN EVC-FLD
               MOVE  0           TO FRM-NUM-DURV-LEN IN EVC-FLD
               MOVE -1 TO EVC-IND-CAUT-LEN IN EVC-FLD.
      *>>>>
      *<<<< FIN_HBL_FLD
      *ALD/ELIMINAR
           MOVE FRM-CPIM-AEY TO EVC-NUM-DESD-ATR IN EVC-FLD.
           MOVE FRM-CPIM-AEY TO EVC-SGV-FVAR-ATR IN EVC-FLD.
           MOVE FRM-CPIM-AEY TO EVC-IND-FVAR-ATR IN EVC-FLD.
      *    MOVE FRM-CPIM-AEY TO EVC-IND-CAUT-ATR IN EVC-FLD.
      *
      *ALD/16-JUL-1988
           IF SCR-CCPP NOT = 'ING'
               GO TO FIN-HBL-FLD.

           IF PVC-CIC-IPVC IN EVC-FLD NOT > SPACES
               GO TO FIN-HBL-FLD.

           IF NOT PGM-STAT-PVC-OKS
               MOVE PVC-CIC-IPVC IN EVC-FLD TO PVC-CIC-IPVC IN PVC
               MOVE FIO-GET-KEY TO FIO-CMND
               PERFORM COL-FIO-PVC
               IF NOT FIO-STAT-OKS
                   GO TO FIN-HBL-FLD
               ELSE
                   MOVE EVC-CAI-IOPC IN EVC-FLD TO OPC-CAI-IOPC IN OPC
                   MOVE EVC-IIC-IOPC IN EVC-FLD TO OPC-IIC-IOPC IN OPC
                   MOVE FIO-GET-KEY TO FIO-CMND
                   PERFORM COL-FIO-OPC
                   IF NOT FIO-STAT-OKS
                       GO TO FIN-HBL-FLD.

           IF PVC-NUM-DVMI IN PVC = PVC-NUM-DVMA IN PVC AND
              PVC-IND-DVMI IN PVC = PVC-IND-DVMA IN PVC AND
              PVC-NUM-DVMI IN PVC > ZEROES
               MOVE PVC-NUM-DVMI IN PVC TO FRM-NUM-DURV IN EVC-FLD
               MOVE PVC-IND-DVMI IN PVC TO FRM-IND-UTDV IN EVC-FLD
               MOVE FRM-CPIM-AEY TO FRM-NUM-DURV-ATR IN EVC-FLD
               MOVE FRM-CPIM-AEY TO FRM-IND-UTDV-ATR IN EVC-FLD
               MOVE 0            TO EVC-NUM-VIGU-LEN IN EVC-FLD
               MOVE -1           TO EVC-NUM-IDLC-LEN IN EVC-FLD.

           IF PVC-NUM-VIMI IN PVC = PVC-NUM-VIMA IN PVC AND
              PVC-NUM-VIMI IN PVC > ZEROES
               MOVE PVC-NUM-VIMI IN PVC TO EVC-NUM-VIGU IN EVC-FLD
               MOVE FRM-CPIM-AEY TO EVC-NUM-VIGU-ATR IN EVC-FLD.

           IF PVC-NUM-SPMI IN PVC = PVC-NUM-SPMA IN PVC AND
              PVC-IND-SPMI IN PVC = PVC-IND-SPMA IN PVC AND
              PVC-NUM-SPMI IN PVC > ZEROES
               MOVE PVC-NUM-SPMI IN PVC TO FRM-NUM-SPVE IN EVC-FLD
               MOVE PVC-IND-SPMI IN PVC TO FRM-IND-UTPV IN EVC-FLD
               MOVE FRM-CPIM-AEY TO FRM-NUM-SPVE-ATR IN EVC-FLD
               MOVE FRM-CPIM-AEY TO FRM-IND-UTPV-ATR IN EVC-FLD.

           IF PVC-NUM-DESD IN PVC > ZEROES
               MOVE PVC-NUM-DESD IN PVC TO EVC-NUM-DESD IN EVC-FLD
               MOVE FRM-CPIM-AEY TO EVC-NUM-DESD-ATR IN EVC-FLD.

           IF PVC-NUM-SVMI IN PVC = PVC-NUM-SVMA IN PVC AND
              PVC-IND-SVMI IN PVC = PVC-IND-SVMA IN PVC AND
              PVC-NUM-SVMI IN PVC > ZEROES
               MOVE PVC-NUM-SVMI IN PVC TO EVC-NUM-SEVE IN EVC-FLD
               MOVE PVC-IND-SVMI IN PVC TO EVC-IND-UTSV IN EVC-FLD
               MOVE FRM-CPIM-AEY TO EVC-NUM-SEVE-ATR IN EVC-FLD
               MOVE FRM-CPIM-AEY TO EVC-IND-UTSV-ATR IN EVC-FLD.

           IF PVC-MSC-TCVE IN PVC > SPACES
               MOVE PVC-MSC-TCVE IN PVC TO EVC-MSC-TCVE IN EVC-FLD
               MOVE 'COL' TO TAB-COD-SIST
               MOVE 'CVC' TO TAB-COD-TTAB IN TAB
               MOVE EVC-MSC-TCVE IN EVC-FLD TO TAB-COD-CTAB IN TAB
               PERFORM BUS-TAB
               MOVE TAB-GLS-DESC IN TAB TO FRM-GLS-TCVE IN EVC-FLD
               MOVE FRM-CPIM-AEY TO EVC-MSC-TCVE-ATR IN EVC-FLD.

           IF PVC-VAL-VVMI IN PVC = PVC-VAL-VVMA IN PVC AND
              PVC-VAL-VVMI IN PVC > ZEROES AND
              PVC-COD-VCOC IN PVC = OPC-COD-VCOC IN OPC
               MOVE PVC-VAL-VVMI IN PVC TO EVC-VAL-VENC IN EVC-FLD
               MOVE FRM-CPIM-AEY TO EVC-VAL-VENC-ATR IN EVC-FLD.

           IF PVC-SGV-FMMI IN PVC     = PVC-SGV-FMMA IN PVC AND
              PVC-SGV-FMMI IN PVC NOT = ZEROES AND
              PVC-COD-VCOC IN PVC     = OPC-COD-VCOC IN OPC
               MOVE 'M' TO EVC-IND-FVAR IN EVC-FLD.

           IF PVC-SGV-FPMI IN PVC     = PVC-SGV-FPMA IN PVC AND
              PVC-SGV-FPMI IN PVC NOT = ZEROES AND
              PVC-SGV-FMMI IN PVC     = ZEROES AND
              PVC-SGV-FMMA IN PVC     = ZEROES
               MOVE 'P' TO EVC-IND-FVAR IN EVC-FLD.

           MOVE 'COL' TO MSC-COD-SIST.
           MOVE 'FVAR' TO MSC-COD-TMSC IN MSC.
           MOVE EVC-IND-FVAR IN EVC-FLD TO MSC-COD-CMSC IN MSC.
           PERFORM BUS-MSC.

           IF MSC-CIC-CMSC IN MSC = 'M' AND
              PVC-SGV-FMMI IN PVC = PVC-SGV-FMMA IN PVC AND
              PVC-SGV-FMMI IN PVC NOT = ZEROES AND
              PVC-COD-VCOC IN PVC = OPC-COD-VCOC IN OPC
               MOVE PVC-SGV-FMMI IN PVC TO EVC-SGV-FVAR IN EVC-FLD
               MOVE FRM-CPIM-AEY TO EVC-IND-FVAR-ATR IN EVC-FLD
               MOVE FRM-CPIM-AEY TO EVC-SGV-FVAR-ATR IN EVC-FLD.

           IF MSC-CIC-CMSC IN MSC = 'P' AND
              PVC-SGV-FPMI IN PVC = PVC-SGV-FPMA IN PVC AND
              PVC-SGV-FPMI IN PVC NOT = ZEROES
               MOVE PVC-SGV-FPMI IN PVC TO EVC-SGV-FVAR IN EVC-FLD
               MOVE FRM-CPIM-AEY TO EVC-IND-FVAR-ATR IN EVC-FLD
               MOVE FRM-CPIM-AEY TO EVC-SGV-FVAR-ATR IN EVC-FLD.
      *
      *>>>>
       FIN-HBL-FLD.
           EXIT.

       FST-MSG SECTION.
       INI-FST-MSG.
           MOVE -1 TO EVC-GLS-MENS-LEN.
       FIN-FST-MSG.
           EXIT.

       PRO-ALL SECTION.
       INI-PRO-ALL.
           PERFORM PRO-KEY-EVC.
           PERFORM PRO-FLD-EVC.
           PERFORM FST-MSG.
       FIN-PRO-ALL.
           EXIT.

       SCR-TRL SECTION.
       INI-SCR-TRL.
      * PTC-INI
           IF SCR-STAT NOT = SCR-STPP
               MOVE FRM-SUAR-MAL TO FRM-SUAR.
      * PTC-FIN
           IF FRM-MEN1 NOT > SPACES
               MOVE SCR-PRMT TO FRM-MEN1.
           IF SCR-STAT = SCR-STAT-MOD
               PERFORM HBL-FLD
               PERFORM SCR-MSSG
               PERFORM EDT-KEY-EVC
               PERFORM EDT-FLD-EVC
               PERFORM SCR-PUTA
               MOVE SCR-INST-GFL TO SCR-INST
               PERFORM SCR-EXIT.
           IF SCR-STAT = SCR-STAT-SON
               PERFORM PRO-ALL
               PERFORM SCR-MSSG
               PERFORM EDT-KEY-EVC
               PERFORM EDT-FLD-EVC
               PERFORM SCR-PUTA
               MOVE SCR-INST-GCS TO SCR-INST
               PERFORM SCR-EXIT.
      *ASUME SCR-STAT-CON.
           MOVE SCR-STAT-CON TO SCR-STAT.
      *    MOVE FRM-CPSF-AEY TO FRM-CPIM-AEY.
           PERFORM PRO-ALL.
           PERFORM SCR-MSSG.
           PERFORM EDT-KEY-EVC.
           PERFORM EDT-FLD-EVC.
           PERFORM SCR-PUTA.
           MOVE SCR-INST-GAB TO SCR-INST.
           PERFORM SCR-EXIT.
       FIN-SCR-TRL.
           EXIT.

       DESSCRTRL SECTION.
       INI-DESSCRTRL.
           IF SCR-INST = SCR-INST-GCF
                  PERFORM SCR-GCNF
                  GO TO FIN-DESSCRTRL.
           MOVE SCR-VFLD-NOT TO SCR-VFLD.
           MOVE FRM-FFLD TO SCR-FFLD.
           IF SCR-STAT = SCR-STAT-ABT OR SCR-STAT-CON
                  GO TO FIN-DESSCRTRL.
           IF SCR-FFLD-RET OR SCR-FFLD-PF10
                  MOVE SCR-VFLD-YES TO SCR-VFLD
                  PERFORM PRO-CONF.
       FIN-DESSCRTRL.
           IF SCR-FFLD-PF10 OR SCR-FFLD-PF3
                 MOVE SCR-INST-HCM TO SCR-INST
           ELSE
                 MOVE SCR-INST-HKY TO SCR-INST.
       EXT-DESSCRTRL.
           EXIT.

       PRO-CONF SECTION.
       INI-PRO-CONF.
      *PTC-INI
           IF SCR-OFRM-SRV AND
              SCR-CONF NOT > SPACES
                MOVE SPACES TO FRM-MENS.
      *PTC-FIN
           IF FRM-MENS NOT > SPACES
               IF SCR-CONF NOT > SPACES
                   GO TO FIN-PRO-CONF
               ELSE
                   MOVE SCR-CONF TO FRM-MENS
           ELSE
               IF FRM-MEN1 NOT > SPACES
                   MOVE SCR-CONF TO FRM-MEN1.
           PERFORM PRO-KEY-EVC.
           PERFORM PRO-FLD-EVC.
           PERFORM FST-MSG.
           PERFORM SCR-MSSG.
           IF SCR-STAT = SCR-STAT-MOD
               PERFORM EDT-KEY-EVC
               PERFORM EDT-FLD-EVC.
           PERFORM SCR-PUTA.
           MOVE SCR-INST-GCF TO SCR-INST.
           PERFORM SCR-EXIT.
       FIN-PRO-CONF.
           EXIT.

       SCR-GCNF SECTION.
       INI-SCR-GCNF.
           MOVE SCR-NMAP TO FRM-NAME.
           MOVE SCR-NLIB TO FRM-NLIB.
           MOVE FRM-GET-ALL TO FRM-CMND.
           PERFORM GNS-PRO-FRM.
           IF NOT ( FRM-FFLD = FRM-FFLD-RET  OR FRM-FFLD-PF10 OR
                               FRM-FFLD-PF12 OR FRM-FFLD-PF3  OR
                               FRM-FFLD-PF4 )
               MOVE 'PFSINV    ' TO MSG-COD-MENS
               MOVE 'GNS' TO MSG-COD-SIST
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO EVC-GLS-MEN2
               MOVE SCR-CONF     TO EVC-GLS-MEN1
               PERFORM FST-MSG
               PERFORM SCR-PUTA
               PERFORM SCR-EXIT.
           MOVE FRM-DFLD TO EVC-FLD.
           MOVE FRM-FFLD TO SCR-FFLD.
           IF FRM-FFLD = FRM-FFLD-PF3
               MOVE SCR-VFLD-NOT TO SCR-VFLD
           ELSE
           IF FRM-FFLD = FRM-FFLD-RET OR FRM-FFLD-PF10 OR FRM-FFLD-PF4
               MOVE SCR-VFLD-YES TO SCR-VFLD
               PERFORM VAL-NUM-KEY-EVC
               PERFORM VAL-NUM-FLD-EVC
           ELSE
           IF FRM-FFLD = FRM-FFLD-PF12
               MOVE SCR-STPP TO SCR-STAT
               IF SCR-STAT = SCR-STAT-MOD
                   PERFORM VAL-NUM-KEY-EVC
                   PERFORM VAL-NUM-FLD-EVC
                   PERFORM SCR-TRL
               ELSE
                   MOVE SCR-VFLD-NOT TO SCR-VFLD.
      *<<<< FIN_SCR_GIKY OR FIN_SCR_GCNF OR FIN_SCR_GFLD
           IF FRM-FFLD = FRM-FFLD-PF3 AND
              SCR-IND-ENG IN SCR-VEC-ENG(SCR-IPRO) = 'S'
               PERFORM EGR-EOV.
      *>>>>
       FIN-SCR-GCNF.
           EXIT.

      * PGM-EBR-ALL SECTION.
      * INI-PGM-EBR-ALL.
      *     MOVE 'GNS' TO FIO-SIST.
      *     MOVE FIO-EBR-ALL TO FIO-CMND.
      *     PERFORM GNS-FIO-TAB.
      * FIN-PGM-EBR-ALL.
      *     EXIT.


       COPY COLBUEVC.
       COPY GNSBVNUM.
       COPY COLBFEVC.
       COPY GNSBFMSG.
       COPY GNSBGSYS.
       COPY GNSBGDTC.
      *PTC-INI
      *PTC-SUB
      * ISP  10-MAY-2001 13:46:35 
      * COPY GNSBGFRM.
       COPY GNSBG3CF.
      *PTC-FIN
       COPY GNSBGMSG.
       COPY GNSBEKEY.
       COPY GNSBIABT.
       COPY GNSBBTAB.
       COPY GNSBVCOD.
       COPY GNSBVTAB.
       COPY GNSBFTAB.
       COPY GNSBBMSC.
       COPY GNSBVIND.
       COPY GNSBVMSC.
       COPY GNSBFMSC.
       COPY GNSBEGLS.
       COPY GNSBGFEC.
       COPY GNSBGHOY.
       COPY TABBBOFI.
       COPY TABBFOFI.
      *PTC-INI
       COPY GNSBGQUE.
       COPY GNSBGTSK.
      *PTC-FIN

      *<<<< EOF

       HBL-KEY-EVC SECTION.
       INI-HBL-KEY-EVC.
           MOVE SCR-INST-GKY TO SCR-INST.
      *ISP   25-JUL-1990 DEBE SER REEMPLAZADO POR VARIABLE
      *     INHIBE MOVE FRM-CPSF TO FRM-CPIM-AEY
           MOVE '1' TO FRM-CPIM-AEY.
           MOVE FRM-CPIM-AEY TO EVC-CAI-IOPC-ATR IN EVC-FLD.
           MOVE FRM-CPIM-AEY TO EVC-IIC-IOPC-ATR IN EVC-FLD.
           MOVE FRM-CPIM-AEY TO EVC-NUM-IEVC-ATR IN EVC-FLD.
           MOVE +4 TO EVC-CAI-IOPC-LEN IN EVC-FLD.
           MOVE -1 TO PVC-CIC-IPVC-LEN IN EVC-FLD.
           PERFORM SCR-CLRA-EVC.
           MOVE SCR-CAI-IOPC IN SCR-VARI TO EVC-CAI-IOPC IN EVC-FLD.
           MOVE SCR-IIC-IOPC IN SCR-VARI TO EVC-IIC-IOPC IN EVC-FLD.

      * ISP SCR-DMSG LIMPIA TODO Y HACE STP-EXIT
           MOVE PGM-LIMPIAR-CAMPOS TO PGM-ICLR.

      *ISP SE REQUIEREN PARA BUS-COR-EVC
           MOVE SCR-CAI-IOPC IN SCR-VARI TO EVC-CAI-IOPC IN EVC.
           MOVE SCR-IIC-IOPC IN SCR-VARI TO EVC-IIC-IOPC IN EVC.
           PERFORM BUS-COR-EVC.

           MOVE SCR-CAI-IOPC IN SCR-VARI TO OPC-CAI-IOPC IN OPC.
           MOVE SCR-IIC-IOPC IN SCR-VARI TO OPC-IIC-IOPC IN OPC.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM COL-FIO-OPC.
           MOVE FIO-STAT TO PGM-STAT-OPC.
           IF NOT FIO-STAT-OKS
               MOVE 'COL' TO MSG-COD-SIST
               MOVE 'OPC    NEX' TO MSG-COD-MENS
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS
               MOVE SCR-STAT-CON TO SCR-STAT
               PERFORM CLR-OPC-EVC
           ELSE
               PERFORM PUT-OPC-EVC.

           PERFORM EDT-KEY-EVC.
           PERFORM EDT-FLD-EVC.

           IF SCR-IND-FST IN SCR-VEC-FST(SCR-IPRO) = 'S'
               MOVE SPACES TO SCR-IND-FST IN SCR-VEC-FST(SCR-IPRO)
               PERFORM SCR-INIT
               PERFORM SCR-EXIT
           ELSE
               PERFORM SCR-PUTA.

      *     IF SCR-IND-FST IN SCR-VEC-FST(SCR-IPRO) = 'S'
      *         MOVE SPACES TO SCR-IND-FST IN SCR-VEC-FST(SCR-IPRO)
      *         PERFORM SCR-INIT
      *     ELSE
      *         PERFORM SCR-PUTA.
      *     PERFORM SCR-EXIT.
       FIN-HBL-KEY-EVC.
           EXIT.
      *>>>>
      *<<<< EOF
       BCK-OUT SECTION.
       INI-BCK-OUT.
           MOVE FIO-BCK-OUT TO FIO-CMND.
           PERFORM COL-FIO-EVC.
           IF FIO-STAT-OKS
      *        Para informar que el backout se realizo con exito
               MOVE '49' TO FIO-STAT.
       FIN-BCK-OUT.
           EXIT.

       BUS-COR-EVC SECTION.
       INI-BUS-COR-EVC.
           MOVE 99 TO EVC-NUM-IEVC IN EVC.
           MOVE FIO-GET-LEQ TO FIO-CMND.
           PERFORM COL-FIO-EVC.
           IF NOT ( FIO-STAT-OKS AND
                    EVC-CAI-IOPC IN EVC-FLD = EVC-CAI-IOPC IN EVC AND
                    EVC-IIC-IOPC IN EVC-FLD = EVC-IIC-IOPC IN EVC )
               PERFORM KEY-ALL-EVC
               MOVE ZEROES TO EVC-NUM-IEVC IN EVC.
           IF SCR-CCPP = 'ING' OR 'ACT'
               ADD 1 TO EVC-NUM-IEVC IN EVC
               MOVE EVC-NUM-IEVC IN EVC TO EVC-NUM-IEVC IN EVC-FLD.
           MOVE 1 TO WSS-ICOR.
       FIN-BUS-COR-EVC.
           EXIT.

       RST-STAT SECTION.
       INI-RST-STAT.
           MOVE SCR-STPP     TO SCR-STAT.
           MOVE SCR-MFLD-NOT TO SCR-MFLD.
       FIN-RST-STAT.
           EXIT.

       GET-TSTP SECTION.
       INI-GET-TSTP.
           MOVE SYS-GET-DATE TO SYS-CMND.
           PERFORM GNS-PRO-SYS.
      *    MOVE SYS-TSTP TO EVC-STP-IINV IN EVC.
       FIN-GET-TSTP.
           EXIT.

       LEE-NXT-PRV SECTION.
       INI-LEE-NXT-PRV.
           IF SCR-RQA1 > SPACES
               PERFORM LEE-NXT-PRV-EVC
           ELSE
               PERFORM LEE-NXT-PRV-CIC.
       FIN-LEE-NXT-PRV.
           EXIT.

       LEE-NXT-PRV-EVC SECTION.
       INI-LEE-NXT-PRV-EVC.
           MOVE SCR-RQA1 TO ADR-EVC-REQA.
           MOVE FIO-KDEF-S TO FIO-KDEF.
           IF FRM-FFLD = FRM-FFLD-PF7
               MOVE FIO-GET-PRV TO FIO-CMND
           ELSE
               MOVE FIO-GET-NXT TO FIO-CMND.
           PERFORM COL-FIO-EVC.
           IF FIO-STAT-OKS
               MOVE '00' TO PGM-STAT-EVC
               MOVE ADR-EVC-REQA TO SCR-RQA1.
       FIN-LEE-NXT-PRV-EVC.
           EXIT.

       LEE-NXT-PRV-CIC SECTION.
       INI-LEE-NXT-PRV-CIC.
           IF EVC-CIC-IOPC IN EVC > SPACES AND
              EVC-NUM-IEVC IN EVC > ZEROES
               MOVE FIO-GET-KEY    TO FIO-CMND
               PERFORM COL-FIO-EVC
               IF FIO-STAT-OKS
                   IF FRM-FFLD = FRM-FFLD-PF7
                       MOVE FIO-GET-PRV TO FIO-CMND
                   ELSE
                       MOVE FIO-GET-NXT TO FIO-CMND
               ELSE
                   IF FRM-FFLD = FRM-FFLD-PF7
                       MOVE FIO-GET-LEQ TO FIO-CMND
                   ELSE
                       MOVE FIO-GET-NLS TO FIO-CMND
           ELSE
               IF FRM-FFLD = FRM-FFLD-PF7
                   MOVE FIO-GET-LEQ TO FIO-CMND
               ELSE
                   MOVE FIO-GET-NLS TO FIO-CMND.
           PERFORM COL-FIO-EVC.
           IF FIO-STAT-OKS
               MOVE '00' TO PGM-STAT-EVC
               MOVE ADR-EVC-REQA TO SCR-RQA1.
       FIN-LEE-NXT-PRV-CIC.
           EXIT.

       COPY COLBFOPC.
       COPY COLBFDLC.
       COPY COLBFCYA.
       COPY COLBGEOV.
       COPY TABBVOFI.
       COPY GNSBPFEC.
       COPY GNSBGCPT.
       COPY SGCBFDBC.
       COPY COLBFTOC.
      *ALD/18-JUL-1988 
       COPY COLBFPOC.
       COPY COLBFPVC.
       COPY TABBFCAM.
      *
      *>>>>
      *  CODIGO ADICIONAL PARA ENGANCHE PROGRAMAS
       ING-FPEN-CIC SECTION.
       INI-ING-FPEN-CIC.
           PERFORM ING-SETE.
           MOVE SCR-MENS-EXT TO EVC-GLS-MENS.
           PERFORM HBL-IKY.
      *PTC ini
           IF SCR-OFRM-SRV
               EXEC CICS
                  RETURN
               END-EXEC.
      *PTC fin
       FIN-ING-FPEN-CIC.
           EXIT.

       ING-FTER-CIC SECTION.
       INI-ING-FTER-CIC.
           PERFORM ING-SETE.
           MOVE SCR-MENS-EXT TO EVC-GLS-MENS.
           PERFORM HBL-IKY.
       FIN-ING-FTER-CIC.
           EXIT.

       ING-FTER-CMN SECTION.
       INI-ING-FTER-CMN.
           PERFORM ING-SETE.
           PERFORM PRO-ALL.
           PERFORM SCR-CLRA-EVC.
           MOVE SCR-MENS-EXT TO EVC-GLS-MENS.
           PERFORM SCR-INIT.
       FIN-ING-FTER-CMN.
           EXIT.

       ING-SETE SECTION.
       INI-ING-SETE.
           PERFORM CRG-TBL-ENG.
           MOVE WSS-NTRN(SCR-IPRO) TO SCR-NTRN.
           MOVE WSS-PROG(SCR-IPRO) TO SCR-PROG.
           MOVE WSS-NMAP(SCR-IPRO) TO SCR-NMAP.
           MOVE WSS-NLIB(SCR-IPRO) TO SCR-NLIB.

           MOVE WSS-NTRV(SCR-IPRO) TO SCR-NTRV.
           MOVE WSS-PROV(SCR-IPRO) TO SCR-PROV.
       FIN-ING-SETE.
           EXIT.

       EGR-FPEN-CIC SECTION.
       INI-EGR-FPEN-CIC.
           PERFORM CRG-TBL-ENG.
           ADD 1 TO SCR-IPRO.
           IF SCR-IPRO > WSS-TOT-IIDX
                  PERFORM EGR-FTER-CIC
                  GO TO FIN-EGR-FPEN-CIC.
           IF SCR-IND-ENG IN SCR-VEC-ENG(SCR-IPRO) = SPACES
               GO TO INI-EGR-FPEN-CIC.
           MOVE WSS-INST-FPEN-CIC TO SCR-INST-EXT.
           MOVE WSS-PROG(SCR-IPRO) TO SYS-PROG.
           MOVE SCR-VARI TO SYS-CMMA.
           MOVE SCR-TCMA TO SYS-TCMA.
           MOVE SYS-XCTL TO SYS-CMND.
      *PTC ini
           IF SCR-OFRM-SRV
                MOVE WSS-IDX-IEOV TO SCR-IPRO
           ELSE
                PERFORM GNS-PRO-SYS.
      *PTC fin
       FIN-EGR-FPEN-CIC.
           EXIT.

       EGR-FTER-CIC SECTION.
       INI-EGR-FTER-CIC.
           PERFORM CRG-TBL-ENG.
           MOVE WSS-IDX-IOPC TO SCR-IPRO.
           MOVE WSS-INST-FTER-CIC TO SCR-INST-EXT.
           MOVE WSS-PROG(SCR-IPRO) TO SYS-PROG.
           MOVE SCR-VARI TO SYS-CMMA.
           MOVE SCR-TCMA TO SYS-TCMA.
           MOVE SYS-XCTL TO SYS-CMND.
      *PTC ini
           IF SCR-OFRM-SRV
                MOVE WSS-IDX-IEOV TO SCR-IPRO
           ELSE
                PERFORM GNS-PRO-SYS.
      *PTC fin
       FIN-EGR-FTER-CIC.
           EXIT.

       EGR-FTER-CMN SECTION.
       INI-EGR-FTER-CMN.
           PERFORM CRG-TBL-ENG.
           MOVE WSS-IDX-IOPC TO SCR-IPRO.
           MOVE WSS-INST-FTER-CMN TO SCR-INST-EXT.
           MOVE WSS-PROG(SCR-IPRO) TO SYS-PROG.
           MOVE SCR-VARI TO SYS-CMMA.
           MOVE SCR-TCMA TO SYS-TCMA.
           MOVE SYS-XCTL TO SYS-CMND.
      *PTC ini
           IF SCR-OFRM-SRV
                MOVE WSS-IDX-IEOV TO SCR-IPRO
           ELSE
                PERFORM GNS-PRO-SYS.
      *PTC fin
       FIN-EGR-FTER-CMN.
           EXIT.

       SCR-INIT SECTION.
       INI-SCR-INIT.
           MOVE 3  TO FRM-PLIN.
           MOVE 19 TO FRM-NLIN.
           MOVE FRM-CLR-FRM TO FRM-CMND.
           PERFORM GNS-PRO-FRM.
           MOVE FRM-SINI-DBNF TO FRM-SINI.
           MOVE SCR-NMAP TO FRM-NAME.
           MOVE SCR-NLIB TO FRM-NLIB.
           MOVE EVC-FLD TO FRM-DFLD.
           MOVE FRM-INI TO FRM-CMND.
           PERFORM GNS-PRO-FRM.
       FIN-SCR-INIT.
           EXIT.
       COPY COLBGMPT.
      *>>>>
      *<<<< EOF_PU
       RET-HDR-EVC SECTION.                                             
       INI-RET-HDR-EVC.                                                 
           PERFORM GET-FHOY.                                            
      *    Fecha Transaccion                                            
           MOVE HOY-FHOY TO EVC-FEC-FTRN IN EVC.                        
      *    Hora Transaccion                                             
           MOVE HOY-HHOY TO EVC-HRA-HRTR IN EVC.                        
      *    Codigo Origen transaccion                                    
      *<<<< NOT PGM_VMS                                                 
           MOVE SCR-OTRN TO EVC-COD-OTRN IN EVC.                        
      *    Autor Transaccion                                            
           MOVE SCR-USER TO EVC-COD-ATRN IN EVC.                        
      *>>>>                                                             
           IF SCR-CCPP = 'ING'                                          
               MOVE 'I' TO EVC-MSC-TACC IN EVC                          
               MOVE 'I' TO EVC-MSC-STAT IN EVC                          
           ELSE                                                         
           IF SCR-CCPP = 'MOD'                                          
               MOVE 'M' TO EVC-MSC-TACC IN EVC                          
               MOVE 'M' TO EVC-MSC-STAT IN EVC.                         
       FIN-RET-HDR-EVC.                                                 
           EXIT.                                                        

       PUT-OPC-EVC SECTION.
       INI-PUT-OPC-EVC.
           IF PGM-STAT-OPC-NUL
               GO TO FIN-PUT-OPC-EVC.
           IF NOT PGM-STAT-OPC-OKS
               PERFORM CLR-OPC-EVC
               GO TO FIN-PUT-OPC-EVC.
           MOVE OPC-MSC-TVOC IN OPC TO OPC-MSC-TVOC IN EVC-FLD.
           MOVE OPC-COD-TOOC IN OPC TO OPC-COD-TOOC IN EVC-FLD.
           MOVE OPC-COD-OFOC IN OPC TO OPC-COD-OFOC IN EVC-FLD.
      *BUS-MSC busca glosa de miscelaneo en tabla
           IF OPC-MSC-TVOC IN EVC-FLD > SPACES
               MOVE 'TAB' TO MSC-COD-SIST
               MOVE 'TVAL' TO MSC-COD-TMSC IN MSC
               MOVE OPC-MSC-TVOC IN EVC-FLD TO MSC-COD-CMSC IN MSC
               PERFORM BUS-MSC
               MOVE MSC-GLS-DESC IN MSC TO
                    FRM-GLS-TVOC IN EVC-FLD.
      *BUS-TAB busca glosa de codigo en tabla
           IF OPC-COD-TOOC IN EVC-FLD > SPACES
               MOVE 'TAB' TO TAB-COD-SIST
               MOVE 'TIO' TO TAB-COD-TTAB IN TAB
               MOVE OPC-COD-TOOC IN EVC-FLD TO TAB-COD-CTAB IN TAB
               PERFORM BUS-TAB
               MOVE TAB-GLS-DESC IN TAB TO
                    FRM-GLS-TOOC IN EVC-FLD.
      *BUS-OFI busca oficina en tablas
           IF OPC-COD-OFOC IN EVC-FLD > SPACES
               MOVE OPC-COD-OFOC IN EVC-FLD TO OFI-COD-OFIC IN OFI
               PERFORM BUS-OFI
               MOVE OFI-GLS-DESC IN OFI TO FRM-GLS-OFOC IN EVC-FLD.
      *<<<< FIN_PUT_OPC_EVC
      *BUS-TAB busca glosa de codigo en tabla
      * NO EXISTE OPC-COD-VCOC IN EVC-FLD
           MOVE 'TAB' TO TAB-COD-SIST.
           MOVE 'VLR' TO TAB-COD-TTAB IN TAB.
           MOVE OPC-COD-VCOC IN OPC TO TAB-COD-CTAB IN TAB.
           PERFORM BUS-TAB.
           MOVE TAB-GLS-DESC IN TAB TO FRM-GLS-VCOC IN EVC-FLD.
      *>>>>
       FIN-PUT-OPC-EVC.
           EXIT.
       PGM-EBR-ALL SECTION.                                             
       INI-PGM-EBR-ALL.                                                 
           MOVE FIO-EBR-ALL TO FIO-CMND.                                
           PERFORM COL-FIO-EVC.                                         
       FIN-PGM-EBR-ALL.                                                 
           EXIT.                                                        
      *OGB-INI 22-DIC-2014 BGT DIA MENOR A 1 TRIMESTRE
       VER-FEC-BGT-TRI SECTION.                                         
       INI-VER-FEC-BGT-TRI.                                             
           MOVE ZEROES               TO WSS-IND-SBGT IN WSS-VARI.
           IF WSS-FEC-FAXE NOT > SPACES
              GO TO FIN-VER-FEC-BGT-TRI.

           MOVE FEC-SUM-MES          TO FEC-CMND.
           MOVE WSS-CT3 IN WSS-CONS  TO FEC-NMES.
           MOVE OPC-NUM-DCOL IN OPC  TO FEC-ITM1.
           MOVE OPC-NUM-MCOL IN OPC  TO FEC-ITM2.
           MOVE OPC-NUM-SCOL IN OPC  TO FEC-ITM3.
           MOVE OPC-NUM-ACOL IN OPC  TO FEC-ITM4.
           MOVE FEC-FORM-FEC         TO FEC-FORM.
           PERFORM CAL-FEC.
           MOVE    FEC-FECH(1:2)    TO  WSS-NUM-DAXU IN WSS-VARI.
           MOVE    FEC-FECH(3:2)    TO  WSS-NUM-MAXU IN WSS-VARI.
           MOVE    FEC-FECH(5:2)    TO  WSS-NUM-SAXU IN WSS-VARI.
           MOVE    FEC-FECH(7:2)    TO  WSS-NUM-AAXU IN WSS-VARI.
           IF WSS-FEC-FAXE NOT <  WSS-FEC-FAXU IN WSS-VARI
              MOVE WSS-CT-1  TO WSS-IND-SBGT IN WSS-VARI.
       FIN-VER-FEC-BGT-TRI.                                             
           EXIT.
OGB   *
       CHECK-BGT-DVC SECTION.
       INI-CHECK-BGT-DVC.
           MOVE ZEROES TO WSS-IND-BGTC.
           MOVE SPACES TO WSS-FEC-FAXE.

           MOVE ZEROES TO WSS-DVC IN WSS-VARI.
           MOVE SPACES TO TAB-COD-CTAB IN TAB.
           MOVE WSS-GLS-SCOL TO FIO-SIST.
           MOVE SCR-CAI-IOPC IN SCR-VARI TO OPC-CAI-IOPC IN OPC.
           MOVE SCR-IIC-IOPC IN SCR-VARI TO OPC-IIC-IOPC IN OPC.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM COL-FIO-OPC.
           IF FIO-STAT-OKS
              MOVE WSS-GLS-SCOL TO TAB-COD-SIST
              MOVE WSS-GLS-TBGT TO TAB-COD-TTAB IN TAB
              MOVE OPC-COD-COOC IN OPC TO TAB-COD-CTAB IN TAB
              MOVE FIO-GET-KEY TO FIO-CMND
              PERFORM GNS-FIO-TAB
              IF FIO-STAT-OKS AND TAB-IND-VIGE IN TAB = WSS-IND-SCTE
                 MOVE WSS-CT-1    TO WSS-IND-BGTC.

      *BUSCA EVC DE CAPITAL PARA OBTENER FECHA
           IF WSS-IND-BGTC = WSS-CT-1
              MOVE EVC-CAI-IOPC IN EVC-FLD TO EVC-CAI-IOPC IN EVC
              MOVE EVC-IIC-IOPC IN EVC-FLD TO EVC-IIC-IOPC IN EVC
              MOVE ZEROES                  TO EVC-NUM-IEVC IN EVC
              MOVE FIO-GET-NLS TO FIO-CMND
              PERFORM COL-FIO-EVC
              IF  ( FIO-STAT-OKS AND
                       EVC-CAI-IOPC IN EVC-FLD = EVC-CAI-IOPC IN EVC AND
                       EVC-IIC-IOPC IN EVC-FLD = EVC-IIC-IOPC IN EVC )
                 IF EVC-VAL-VENC IN EVC > ZEROES
                    MOVE EVC-FEC-FPVC IN EVC TO WSS-FEC-FAXE.

       FIN-CHECK-BGT-DVC.
           EXIT.
      *
      *OGB-FIN 22-DIC-2014 BGT DIA MENOR A 1 TRIMESTRE
