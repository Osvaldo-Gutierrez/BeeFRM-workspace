       IDENTIFICATION DIVISION.
      *========================
       PROGRAM-ID.   COLPUCPP.
       AUTHOR.       CONSIST.
       DATE-WRITTEN. 01-Jul-19 02:33 AM.

      * NOMBRE PROGRAMA                   COLPUCPP
      * VERSION PGM                       3.1
      * VERSION SKL                       08.07.21
      * OPCION                            UPD
      * ARCHIVO BASE                      COLCPP
      * PANTALLA                          COLCPP
      * INP/OUT                           DATACOM
      * TAMANO COMMAREA                   250

      *<<<< CMT_ID
      *--------------------------------------------------------------
      * MODIFICACIONES:
      * --------------
      * OBJETIVO: SE INCLUYE COMUNICACION CON EL MONITOR Y MANEJO DE
      *           TS
      * PROYECTO: PLATAFORMA UNICA DE CREDITOS
      * FECHA   : NOVIEMBRE DE 2014
      * AUTOR   : CHC
      * ETIQUETA: *AFRI-INI/PLATAFORMA UNICA DE CRED./CHC/11-2014
      *--------------------------------------------------------------
      *>>>>



       ENVIRONMENT DIVISION.
      *=====================
       CONFIGURATION SECTION.
      *----------------------
       SPECIAL-NAMES.
               DECIMAL-POINT IS COMMA.

       DATA DIVISION.
      *==============

       WORKING-STORAGE SECTION.
      *------------------------
      * COPY GNSWGSCR.
       COPY GNSWGCVT.

       77  WSS-TAG-COLPUCPP-INI PIC X(125) VALUE                        
           '<IDNPGM NOM=$COLPUCPP$ SKL=$08.07.21$ VSN=${vsnpu}$        
      -    'GEN=$01-Jul-19 02:33 AM$ FNC=${fncpu}$/>'.    
       COPY GNSWCSCR.
      *PTC-INI
      *PTC-SUB
      * ISP  10-MAY-2001 13:46:35 
      * COPY GNSWVSCR.
       COPY GNSWV3CR.
      *PTC-FIN

      *<<<<
      *AFRI-INI/PLATAFORMA UNICA DE CRED./CHC/11-2014
           03 SCR-NUM-PANT               PIC 9(0005).
           03 SCR-COD-PUEDE-IR-A-FRM1               PIC X(0003).
           03 SCR-COD-PUEDE-IR-A-FRM2               PIC X(0003).
      *    03 SCR-CPP-FLD                PIC X(1100).
      *AFRI-FIN/PLATAFORMA UNICA DE CRED./CHC/11-2014     
       COPY COLWICPP REPLACING ==01  CPP-FLD== BY ==03  CPP-FLD==
                               ==01  CPP-EDT== BY ==03  CPP-EDT==.
       COPY COLWICP2 REPLACING ==01  CP2-FLD== BY ==03  CP2-FLD==
                               ==01  CP2-EDT== BY ==03  CP2-EDT==.
       COPY COLWGCPP.
      *AFRI-INI/PLATAFORMA UNICA DE CRED./CHC/11-2014 
       COPY COLWXCPP.
      *AFRI-FIN/PLATAFORMA UNICA DE CRED./CHC/11-2014 
      *>>>>

       COPY COLWICPP.
       COPY COLBRCPP.


       COPY GNSWVIDD.
       COPY GNSWGRQA.
       COPY GNSWGUIB.
       COPY GNSWGELS.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-CPP-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-TAB-REQA==.
       COPY GNSBRTAB.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-MSC-REQA==.
       COPY GNSBRMSC.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-MSG-REQA==.
       COPY GNSBRMSG.
       COPY GNSWCFIO.
       COPY GNSWVFIO.
      *PTC-INI
      *PTC-SUB
      * ISP  10-MAY-2001 13:46:35 
      * COPY GNSWGFRM.
       COPY GNSWG3CF.
       COPY GNSWGTSK.
       COPY GNSWGQUE.
      *PTC-FIN
       COPY GNSWGFEC.
       COPY GNSWGHOY.
       COPY GNSWGSYS.

       COPY GNSWGCPT.
       COPY GNSWCVRF.
       COPY GNSWVVRF.
      *AFRI-INI/PLATAFORMA UNICA DE CRED./CHC/11-2014 
       01 WSS-NUM-CCUR.
           03 WSS-NUM-ICUR-EDT  PIC  ZZ9.
           03 WSS-NUM-ICUR-ALF       PIC X(03).
           03 WSS-NUM-ICUR      REDEFINES
              WSS-NUM-ICUR-ALF       PIC 9(03).       
      *AFRI-FIN/PLATAFORMA UNICA DE CRED./CHC/11-2014
       01  WSS-VARI.
      *AFRI-INI/PLATAFORMA UNICA DE CRED./CHC/11-2014
           03  WSS-IDX-CPP           VALUE ZEROES PIC 9(03).
           03  WSS-VCPP              VALUE ZEROES PIC 9(08).
      *AFRI-FIN/PLATAFORMA UNICA DE CRED./CHC/11-2014
      *HPM ini 3-JUN-1994
           03  WSS-IND-BLK                        PIC X(01).
      *HPM fin 3-JUN-1994
      *JCT-INI 11-01-2012 VALIDACION Y GENERACION AUTOMATIZADA DE PRODUC
           03  WSS-MOV-DEB                        PIC 9(03).
           03  WSS-MOV-HAB                        PIC 9(03).
           03  WSS-CPP-ERROR                      PIC X(01).
      *AFRI-INI/PLATAFORMA UNICA DE CRED./CHC/11-2014     
      *    03  WSS-I                              PIC 9(03).
      *    03  WSS-J                              PIC 9(03).
      *AFRI-FIN/PLATAFORMA UNICA DE CRED./CHC/11-2014
      *JCT-FIN 11-01-2012
           03  WSS-COD-CAUX.
               05  WSS-COD-TOOC                   PIC X(03).
               05  WSS-COD-AOOC                   PIC X(03).
           03  WSS-POS                            PIC 9(02).
      *DAD
           03  WSS-IND                            PIC 9(02).
      *AFRI-INI/PLATAFORMA UNICA DE CRED./CHC/11-2014     
      *    03  WSS-IND-TALG                       PIC 9(01).
      *AFRI-FIN/PLATAFORMA UNICA DE CRED./CHC/11-2014
           03  WSS-GLS-DATA.
               05  FILLER                         PIC X(10).
               05  WSS-COD-MVTO      OCCURS 16    PIC X(03).
      *DAD
      *EVA
           03  WSS-IND-CP2                        PIC 9(02).
           03  WSS-IND-TALG-CP2                   PIC 9(01).
           03  WSS-GLS-DATA-CP2.
               05  FILLER-CP2                     PIC X(10).
               05  WSS-COD-MVTO-CP2  OCCURS 16    PIC X(03).
      *EVA
      *MVG-INI 26-JUN-2019 IGUALACION COL
       77  WSS-ENROQUE-FRM                    PIC X(2000).
       77  WSS-COD-PQUE      VALUE 'S'        PIC X(0001).
      *MVG-FIN 26-JUN-2019 IGUALACION COL
      *>>>>



       01  PGM-VARI.
           03 PGM-ICLR                  VALUE ' '       PIC X(01).
           03 PGM-LIMPIAR-TODO          VALUE ' '       PIC X(01).
           03 PGM-LIMPIAR-LLAVES        VALUE 'K'       PIC X(01).
           03 PGM-LIMPIAR-CAMPOS        VALUE 'F'       PIC X(01).
           03 PGM-NO-LIMPIAR-NADA       VALUE 'N'       PIC X(01).
           03 PGM-PROG                                  PIC X(08).
           03 PGM-NTRN                                  PIC X(04).
           03 PGM-STAT.
              05 PGM-STAT-CPP.
                 88 PGM-STAT-CPP-NUL    VALUE '  '.
                 07 PGM-STT1-CPP        VALUE '2' PIC X(01).
                    88 PGM-STAT-CPP-OKS VALUE '0'.
                 07 PGM-STT2-CPP        VALUE '3' PIC X(01).

           03 PGM-SRNF                  VALUE '23'      PIC X(02).
           03 PGM-SOKS                  VALUE '00'      PIC X(02).
           03 PGM-SNUL                  VALUE '  '      PIC X(02).
           03 PGM-SUAR                  VALUE SPACES    PIC X(15).

       LINKAGE SECTION.
      *----------------
       01  DFHCOMMAREA.
           02 DFH-CMMA OCCURS 3000 PIC X(01).
       COPY GNSLGFIO.

       PROCEDURE DIVISION.
      *===================

       MAIN SECTION.
       INI-MAIN.
           PERFORM INI.
       LUP-MAIN.
           IF SCR-INST = SCR-INST-HCM
                 PERFORM SCR-COM.
           IF SCR-CCPP = 'MOD'
                 PERFORM SCR-MOD
           ELSE
           IF SCR-CCPP = 'ING'
                 PERFORM SCR-ING
           ELSE
           IF SCR-CCPP = 'ACC'
                 PERFORM SCR-ACC
           ELSE
           IF SCR-CCPP = 'ELI'
                 PERFORM SCR-ELI
           ELSE
           IF SCR-CCPP = 'ACT'
                 PERFORM SCR-ACT
           ELSE
           IF SCR-CCPP = 'PGM'
                 PERFORM SCR-PGM
           ELSE
                 MOVE SCR-INST-HCM TO SCR-INST.

           GO TO LUP-MAIN.
       FIN-MAIN.
           EXIT.

       INI SECTION.
       INI-INI.

       COPY GNSBGEIB.

       COPY GNSBGEDB.
           MOVE LOW-VALUES TO CPP-FLD.
      *<<<< PGM_POS_EDB
      *>>>> PGM_POS_EDB

           PERFORM GNS-PRO-RCK.
           PERFORM GNS-BUS-VCA.
           MOVE +3000 TO SCR-TCMA.
           PERFORM GNS-HDL-SYS.
           PERFORM GNS-HDL-FRM.
           MOVE 'COLPUCPP' TO FIO-PROG.
           PERFORM GNS-BUS-IDD.
      *PTC-INI
           PERFORM GNS-ERR-QUE.
           PERFORM GET-TSK-TERM.
      *PTC-FIN

      *<<<< 

      *     IF SCR-DESDE-CMN
      *          MOVE LOW-VALUES TO CPP-FLD.

           IF SCR-OFRM-SRV
                MOVE TSK-TERM-ALF TO CPP-COD-TERM
                MOVE TSK-TERM-ALF TO CPP-COD-TERM-MAS
           ELSE
                MOVE EIBTRMID     TO CPP-COD-TERM
                MOVE EIBTRMID     TO CPP-COD-TERM-MAS.



           MOVE '=>U1 CPP <=' TO FILLER-CPP IN SCR-VARI.
           MOVE '=>U1 CP2 <=' TO FILLER-CP2 IN SCR-VARI.




           MOVE 'COL' TO FIO-SIST
                         TAB-COD-SIST.
           MOVE 'VSN' TO TAB-COD-TTAB IN TAB.
           MOVE 'CPPLOGQUE' TO TAB-COD-CTAB IN TAB.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM GNS-FIO-TAB.
           IF FIO-STAT-OKS
               MOVE TAB-MSC-STAT IN TAB TO WSS-COD-PQUE.



           MOVE 'EN_INI' TO QUE-COLA.
           MOVE QUE-DEL TO QUE-CMND.
           PERFORM GNX-PRO-QUE.
           MOVE 'EN_INI' TO QUE-COLA.
           MOVE +3000 TO QUE-LITM.
           MOVE SCR-VARI TO QUE-ITEM.
           MOVE QUE-PUT TO QUE-CMND.
           PERFORM GNX-PRO-QUE.


           MOVE 'P1WI_CPP' TO QUE-COLA.
           MOVE QUE-DEL TO QUE-CMND.
           PERFORM GNX-PRO-QUE.
           MOVE 'P1WI_CPP' TO QUE-COLA.
           MOVE +2000 TO QUE-LITM.
           MOVE CPP-FLD TO QUE-ITEM.
           MOVE QUE-PUT TO QUE-CMND.
           PERFORM GNX-PRO-QUE.


           MOVE 'P1WI_CP2' TO QUE-COLA.
           MOVE QUE-DEL TO QUE-CMND.
           PERFORM GNX-PRO-QUE.
           MOVE 'P1WI_CP2' TO QUE-COLA.
           MOVE +2000 TO QUE-LITM.
           MOVE CP2-FLD TO QUE-ITEM.
           MOVE QUE-PUT TO QUE-CMND.
           PERFORM GNX-PRO-QUE.


           MOVE 'SCR_CCPP' TO QUE-COLA.
           MOVE QUE-DEL TO QUE-CMND.
           PERFORM GNX-PRO-QUE.
           MOVE 'SCR_CCPP' TO QUE-COLA.
           MOVE +20 TO QUE-LITM.
           MOVE SCR-CCPP TO QUE-ITEM.
           MOVE QUE-PUT TO QUE-CMND.
           PERFORM GNX-PRO-QUE.


           MOVE 'SCR_STAT' TO QUE-COLA.
           MOVE QUE-DEL TO QUE-CMND.
           PERFORM GNX-PRO-QUE.
           MOVE 'SCR_STAT' TO QUE-COLA.
           MOVE +20 TO QUE-LITM.
           MOVE SCR-STAT TO QUE-ITEM.
           MOVE QUE-PUT TO QUE-CMND.
           PERFORM GNX-PRO-QUE.

           MOVE 'SCR_INST' TO QUE-COLA.
           MOVE QUE-DEL TO QUE-CMND.
           PERFORM GNX-PRO-QUE.
           MOVE 'SCR_INST' TO QUE-COLA.
           MOVE +20 TO QUE-LITM.
           MOVE SCR-INST TO QUE-ITEM.
           MOVE QUE-PUT TO QUE-CMND.
           PERFORM GNX-PRO-QUE.



           MOVE 'SCR_P1PA' TO QUE-COLA.
           MOVE QUE-DEL TO QUE-CMND.
           PERFORM GNX-PRO-QUE.
           MOVE 'SCR_P1PA' TO QUE-COLA.
           MOVE +20 TO QUE-LITM.
           MOVE SCR-COD-PUEDE-IR-A-FRM1 TO QUE-ITEM.
           MOVE QUE-PUT TO QUE-CMND.
           PERFORM GNX-PRO-QUE.

           MOVE 'SCR_P2PA' TO QUE-COLA.
           MOVE QUE-DEL TO QUE-CMND.
           PERFORM GNX-PRO-QUE.
           MOVE 'SCR_P2PA' TO QUE-COLA.
           MOVE +20 TO QUE-LITM.
           MOVE SCR-COD-PUEDE-IR-A-FRM2 TO QUE-ITEM.
           MOVE QUE-PUT TO QUE-CMND.
           PERFORM GNX-PRO-QUE.


           MOVE 'CP2_TCCT' TO QUE-COLA.
           MOVE QUE-DEL TO QUE-CMND.
           PERFORM GNX-PRO-QUE.
           MOVE 'CP2_TCCT' TO QUE-COLA.
           MOVE +20 TO QUE-LITM.
           MOVE FRM-MSC-TCCT IN CP2-FLD(1) TO QUE-ITEM.
           MOVE QUE-PUT TO QUE-CMND.
           PERFORM GNX-PRO-QUE.


           MOVE 'FRM_FFLD' TO QUE-COLA.
           MOVE QUE-DEL TO QUE-CMND.
           PERFORM GNX-PRO-QUE.
           MOVE 'FRM_FFLD' TO QUE-COLA.
           MOVE +20 TO QUE-LITM.
           MOVE FRM-FFLD TO QUE-ITEM.
           MOVE QUE-PUT TO QUE-CMND.
           PERFORM GNX-PRO-QUE.


      * EN ING/MOD DETECTA PF8 CON PANTALLA 1 YA VALIDADA
      * DEJA MISMO ESTADO MOSTRANDO PANTALLA 2
      * DEJA DISPONIBLE        IR A PANTALLA 1
           IF ( SCR-CMND = 'ING' OR
                SCR-CMND = 'MOD' )
                   AND
              FRM-FFLD = FRM-FFLD-PF8
                   AND
              SCR-COD-PUEDE-IR-A-FRM2 = 'YES'

                   PERFORM GO-CP2.

      * EN ING/MOD DETECTA CONFIRMACION CON PANTALLA 1 YA VALIDADA
      * DEJA MISMO ESTADO MOSTRANDO PANTALLA 2
      * DEJA DISPONIBLE        IR A PANTALLA 1
           IF ( SCR-CMND = 'ING' OR
                SCR-CMND = 'MOD' )
                   AND
              SCR-INST = SCR-INST-GCF
                   AND
              SCR-COD-PUEDE-IR-A-FRM2 = 'YES'
                   MOVE SCR-INST-GFL TO SCR-INST
                   MOVE SCR-STAT-MOD TO SCR-STAT
                   PERFORM HBL-FLD
                   PERFORM GO-CP2.



      * EN ING/MOD DETECTA PF7 CON PANTALLA 2 YA VALIDADA,
      * DEJA MISMO ESTADO MOSTRANDO PANTALLA 1
      * DEJA DISPONIBLE        IR A PANTALLA 2

           IF ( SCR-CMND = 'ING' OR
                SCR-CMND = 'MOD' )
                   AND
              FRM-FFLD = FRM-FFLD-PF7
                   AND
              SCR-COD-PUEDE-IR-A-FRM1 = 'YES'

                   PERFORM GO-CPP.
      *>>>> 
      *<<<< INI_FIO                
           IF SCR-DESDE-CMN
                MOVE LOW-VALUES TO CPP-FLD.
           MOVE 1 TO SCR-IPRO.
           MOVE WSS-TCMA TO SCR-TCMA.
           IF SCR-INST-EXT = WSS-INST-FTER-CIC
                MOVE WSS-INST-NULL TO SCR-INST-EXT
                PERFORM ING-FTER-CIC
           ELSE
           IF SCR-INST-EXT = WSS-INST-FTER-CMN
                MOVE WSS-INST-NULL TO SCR-INST-EXT
                PERFORM ING-FTER-CMN
           ELSE
           IF SCR-INST-EXT = WSS-INST-FPEN-CIC
                MOVE WSS-INST-NULL TO SCR-INST-EXT
                PERFORM ING-FPEN-CIC.
      *>>>>  

       FIN-INI.
           EXIT.

       COPY GNSBHSYS.
       COPY GNSBHFRM.
       COPY GNSBPRCK.
       COPY GNSBBVCA.
       COPY GNSBBIDD.

       SCR-COM SECTION.
       INI-SCR-COM.

           PERFORM STP-EXIT.
           MOVE FRM-CPSF-AEY TO FRM-CPIM-AEY.
           PERFORM PRO-ALL.
           PERFORM SCR-CLRA-CPP.
           PERFORM EDT-KEY-CPP.
           PERFORM EDT-FLD-CPP.
           PERFORM SCR-PUTA.
           MOVE SCR-INST-HCM TO SCR-INST.
           MOVE SCR-CMNP     TO SYS-PROG.
           MOVE SCR-VARI     TO SYS-CMMA.
           MOVE SCR-TCMA     TO SYS-TCMA.
           MOVE SYS-XCTL     TO SYS-CMND.
      *PTC-INI
           IF NOT SCR-OFRM-SRV
      *PTC-FIN
           PERFORM GNS-PRO-SYS.
       XCT-ERR.
           MOVE 'XCTERR    ' TO MSG-COD-MENS.
           MOVE 'GNS'        TO MSG-COD-SIST.
           PERFORM GET-MSG.
           MOVE MSG-GLS-DESC TO SYS-MEN1.
           MOVE SYS-PROG     TO SYS-MEN2.
           MOVE SYS-ABOR     TO SYS-CMND.
      *PTC-INI
           IF NOT SCR-OFRM-SRV
      *PTC-FIN
           PERFORM GNS-PRO-SYS.
       COPY GNSBGGBK.
       FIN-SCR-COM.
           EXIT.

       SCR-MOD SECTION.
       INI-SCR-MOD.

           IF SCR-INST = SCR-INST-HKY
               PERFORM HBL-KEY
               MOVE SCR-INST-GKY TO SCR-INST
               PERFORM SCR-DMSG
           ELSE
           IF SCR-INST = SCR-INST-GFL
               PERFORM GET-FLD
           ELSE
           IF SCR-INST = SCR-INST-GCS
               PERFORM GET-ACC.
           PERFORM DESSCRTRL.
           IF FRM-FFLD = FRM-FFLD-PF7 OR FRM-FFLD-PF8
               PERFORM XCT-PRGP.
           IF NOT ( FRM-FFLD = FRM-FFLD-PF5 OR FRM-FFLD-PF6 )
               GO TO MSG-SCR-MOD.

       MSG-SCR-MOD.
           IF SCR-STAT = SCR-STAT-CON
               MOVE SPACES TO FRM-MENS
           ELSE
           IF SCR-STAT = SCR-STAT-ABT OR SCR-VFLD = SCR-VFLD-NOT
               MOVE 'MODNOT    ' TO MSG-COD-MENS
               MOVE 'GNS' TO MSG-COD-SIST
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS
           ELSE
               MOVE SPACES TO FRM-MENS
               PERFORM CMN-MOD
               IF FIO-STAT-OKS
                   IF FRM-MEN1 NOT > SPACES
                       MOVE 'MODYES    ' TO MSG-COD-MENS
                       MOVE 'GNS' TO MSG-COD-SIST
                       PERFORM GET-MSG
                       MOVE MSG-GLS-DESC TO FRM-MEN1
                   ELSE
                       NEXT SENTENCE
               ELSE
               IF FRM-MENS NOT > SPACES
                   MOVE 'FIOSTAT' TO MSG-COD-TMSG
                   MOVE FIO-STAT  TO MSG-COD-CMSG
                   MOVE 'GNS'     TO MSG-COD-SIST
                   PERFORM GET-MSG
                   MOVE MSG-GLS-DESC TO FRM-MENS.
           PERFORM SCR-MSSG.
       FIN-SCR-MOD.

           EXIT.

       SCR-ING SECTION.
       INI-SCR-ING.
      *<<<< INI_SCR_ING
      *>>>> INI_SCR_ING

           IF SCR-INST = SCR-INST-HKY
               PERFORM HBL-IKY
               MOVE SCR-INST-GKY TO SCR-INST
      *PTC-INI
               IF NOT SCR-OFRM-SRV
                   PERFORM SCR-DMSG
               ELSE
                   PERFORM SCR-PUTA
      *PTC-FIN
           ELSE
           IF SCR-INST = SCR-INST-GFL
                PERFORM GET-FLD
           ELSE
           IF SCR-INST = SCR-INST-GCS
                PERFORM GET-ACC.
           PERFORM DESSCRTRL.
       MSG-SCR-ING.
           IF SCR-STAT = SCR-STAT-CON
               MOVE SPACES TO FRM-MENS
           ELSE
           IF SCR-STAT = SCR-STAT-ABT OR SCR-VFLD = SCR-VFLD-NOT
               MOVE 'INGNOT    ' TO MSG-COD-MENS
               MOVE 'GNS' TO MSG-COD-SIST
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS
           ELSE
               MOVE SPACES TO FRM-MENS
               PERFORM CMN-ING
               IF FIO-STAT-OKS
                   IF FRM-MEN1 NOT > SPACES
                       MOVE 'INGYES    ' TO MSG-COD-MENS
                       MOVE 'GNS' TO MSG-COD-SIST
                       PERFORM GET-MSG
                       MOVE MSG-GLS-DESC TO FRM-MEN1
                   ELSE
                       NEXT SENTENCE
               ELSE
               IF FRM-MENS NOT > SPACES
                   MOVE 'FIOSTAT' TO MSG-COD-TMSG
                   MOVE FIO-STAT  TO MSG-COD-CMSG
                   MOVE 'GNS'     TO MSG-COD-SIST
                   PERFORM GET-MSG
                   MOVE MSG-GLS-DESC TO FRM-MENS.
           PERFORM SCR-MSSG.
       FIN-SCR-ING.
      *<<<< FIN_SCR_ING 
      *>>>> FIN_SCR_ING

           EXIT.

       SCR-ACC SECTION.
       INI-SCR-ACC.
      *<<<< INI_SCR_ACC
      *>>>> INI_SCR_ACC

           IF SCR-INST = SCR-INST-HKY
               PERFORM HBL-KEY
               MOVE SCR-INST-GKY TO SCR-INST
               PERFORM SCR-DMSG
           ELSE
           IF SCR-INST = SCR-INST-GFL
                PERFORM GET-FLD
           ELSE
           IF SCR-INST = SCR-INST-GCS
                PERFORM GET-ACC.
           PERFORM DESSCRTRL.
           IF FRM-FFLD = FRM-FFLD-PF7 OR FRM-FFLD-PF8 OR
                         FRM-FFLD-PF5 OR FRM-FFLD-PF6
               PERFORM XCT-PRGP.
           MOVE SPACES TO FRM-MENS.
           IF SCR-STAT NOT = SCR-STAT-CON
               PERFORM CMN-ACC.
           PERFORM SCR-MSSG.
       FIN-SCR-ACC.

           EXIT.

       SCR-ELI SECTION.
       INI-SCR-ELI.

           IF SCR-INST = SCR-INST-HKY
               PERFORM HBL-KEY
               MOVE SCR-INST-GKY TO SCR-INST
               PERFORM SCR-DMSG
           ELSE
           IF SCR-INST = SCR-INST-GCS
                PERFORM GET-ACC.
           PERFORM DESSCRTRL.
           IF FRM-FFLD = FRM-FFLD-PF7 OR FRM-FFLD-PF8 OR
                         FRM-FFLD-PF5 OR FRM-FFLD-PF6
               PERFORM XCT-PRGP.
           IF SCR-STAT = SCR-STAT-CON
               MOVE SPACES TO FRM-MENS
           ELSE
           IF SCR-STAT = SCR-STAT-ABT OR SCR-VFLD = SCR-VFLD-NOT
               MOVE 'ELINOT    ' TO MSG-COD-MENS
               MOVE 'GNS' TO MSG-COD-SIST
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS
           ELSE
               MOVE SPACES TO FRM-MENS
               PERFORM CMN-ELI
               IF FIO-STAT-OKS
                   IF FRM-MEN1 NOT > SPACES
                       MOVE 'ELIYES    ' TO MSG-COD-MENS
                       MOVE 'GNS' TO MSG-COD-SIST
                       PERFORM GET-MSG
                       MOVE MSG-GLS-DESC TO FRM-MEN1
                   ELSE
                       NEXT SENTENCE
               ELSE
               IF FRM-MENS NOT > SPACES
                   MOVE 'FIOSTAT' TO MSG-COD-TMSG
                   MOVE FIO-STAT  TO MSG-COD-CMSG
                   MOVE 'GNS'     TO MSG-COD-SIST
                   PERFORM GET-MSG
                   MOVE MSG-GLS-DESC TO FRM-MENS.
           PERFORM SCR-MSSG.
       FIN-SCR-ELI.

           EXIT.

       SCR-ACT SECTION.
       INI-SCR-ACT.

           IF SCR-INST = SCR-INST-HKY
               PERFORM HBL-KEY
               MOVE SCR-INST-GKY TO SCR-INST
               PERFORM SCR-DMSG
           ELSE
           IF SCR-INST = SCR-INST-GFL
                PERFORM GET-FLD
           ELSE
           IF SCR-INST = SCR-INST-GCS
                PERFORM GET-ACC.
           PERFORM DESSCRTRL.
           IF ( FRM-FFLD = FRM-FFLD-PF7 OR FRM-FFLD-PF8  OR
                           FRM-FFLD-PF5 OR FRM-FFLD-PF6 ) AND
              SCR-ACTU = SCR-ACTU-MOD
               PERFORM XCT-PRGP.
           IF SCR-ACTU = SCR-ACTU-MOD
                  PERFORM MSG-SCR-MOD
           ELSE
                  PERFORM MSG-SCR-ING.
       FIN-SCR-ACT.

           EXIT.

       SCR-PGM SECTION.
       INI-SCR-PGM.

           IF SCR-INST = SCR-INST-HKY
               PERFORM HBL-KEY
               MOVE SCR-INST-GKY TO SCR-INST
               PERFORM SCR-DMSG
           ELSE
           IF SCR-INST = SCR-INST-GFL
                PERFORM GET-FLD
           ELSE
           IF SCR-INST = SCR-INST-GCS
                PERFORM GET-ACC.
       TRL-SCR-PGM.
           PERFORM DESSCRTRL.
           IF FRM-FFLD = FRM-FFLD-PF7 OR FRM-FFLD-PF8 OR
                         FRM-FFLD-PF5 OR FRM-FFLD-PF6
               PERFORM XCT-PRGP.
           MOVE SPACES TO FRM-MENS.
           IF SCR-STAT NOT = SCR-STAT-CON
               PERFORM CMN-PGM.
           PERFORM SCR-MSSG.
       FIN-SCR-PGM.

           EXIT.

       SCR-DMSG SECTION.
       INI-SCR-DMSG.

           IF PGM-ICLR = PGM-NO-LIMPIAR-NADA
               NEXT SENTENCE
           ELSE
           IF PGM-ICLR = PGM-LIMPIAR-TODO
               PERFORM SCR-CLRA-CPP
               PERFORM EDT-KEY-CPP
               PERFORM EDT-FLD-CPP
           ELSE
           IF PGM-ICLR = PGM-LIMPIAR-LLAVES
               PERFORM CLR-KEY-CPP
               PERFORM EDT-KEY-CPP
           ELSE
               PERFORM CLR-FLD-CPP
               PERFORM EDT-FLD-CPP.
           PERFORM STP-EXIT.
           PERFORM SCR-PUTA.
           PERFORM SCR-EXIT.
       FIN-SCR-DMSG.
           EXIT.

       XCT-PRGP SECTION.
       INI-XCT-PRGP.

      *<<<<
      *SMC-INI 09.09.1993
           GO TO FIN-XCT-PRGP.
      *SMC-FIN 09.09.1993
      *<<<<
           MOVE SCR-INST-BRW TO SCR-INST.
           PERFORM STP-EXIT.
           MOVE FRM-FFLD   TO SCR-FFLD.
      *
           MOVE SCR-PROG     TO SYS-PROG.
           MOVE SCR-VARI     TO SYS-CMMA.
           MOVE SCR-TCMA     TO SYS-TCMA.
           MOVE SYS-XCTL     TO SYS-CMND.
      *PTC-INI
           IF NOT SCR-OFRM-SRV
      *PTC-FIN
           PERFORM GNS-PRO-SYS.
           PERFORM XCT-ERR.
       FIN-XCT-PRGP.
           EXIT.

       SCR-RST SECTION.
       INI-SCR-RST.
           MOVE SPACES       TO PGM-ICLR.
           MOVE SPACES       TO SCR-ACTU.
           MOVE SCR-STPP     TO SCR-STAT.
           MOVE SCR-MFLD-NOT TO SCR-MFLD.
           MOVE LOW-VALUES   TO CPP-FLD.

      *AFRI-INI/PLATAFORMA UNICA DE CRED./CHC/11-2014
      *<<<< SCR_RST
      *     MOVE LOW-VALUES   TO CPP-EDT.     
      *>>>>
      *AFRI-FIN/PLATAFORMA UNICA DE CRED./CHC/11-2014
       FIN-SCR-RST.
           EXIT.

       GET-FLD SECTION.
       INI-GET-FLD.

           PERFORM SCR-GFLD.
           IF FRM-STAT-ABT
               MOVE SCR-STAT-ABT TO SCR-STAT.
       FIN-GET-FLD.
           EXIT.

       CMN-MOD SECTION.
       INI-CMN-MOD.

      *<<<<
           PERFORM KEY-ALL-CPP.

      *     IF ( CPP-MSC-TCCT IN CPP-FLD(39) NOT > SPACES AND
      *          CPP-IND-DBHB IN CPP-FLD(39) NOT > SPACES AND
      *          CPP-IND-TALG IN CPP-FLD(39) NOT > SPACES )
      *          GO TO NXT-CMN-MOD.
      *     PERFORM EGR-FPEN-FRW.
      *>>>>
       NXT-CMN-MOD.
           PERFORM KEY-ALL-CPP.
           MOVE FIO-GET-KEY-UPD TO FIO-CMND.
           PERFORM COL-FIO-CPP.
           IF NOT FIO-STAT-OKS
               GO TO FIN-CMN-MOD.

           PERFORM RET-ALL-CPP.

      *<<<< CMN_ING OR CMN_MOD
      * SI LA RESPUESTA A ESTA PREGUNTA ES VERDADERA
      * SIGNIFICA ESTA MOSTRANDO CP2
           IF SCR-COD-PUEDE-IR-A-FRM1 = 'YES'
               PERFORM ENROQUE-WI.

           PERFORM RET-HDR-CPP.
           IF SCR-OFRM-SRV
                PERFORM CRG-BR-CPP.
      *>>>>
           MOVE FIO-MOD TO FIO-CMND.
           PERFORM COL-FIO-CPP.

       FIN-CMN-MOD.
           EXIT.

       CMN-ING SECTION.
       INI-CMN-ING.
           MOVE SPACES TO CPP.

      *<<<< INI_CMN_ING
      *<<<<
      *     PERFORM KEY-ALL-CPP.
      *     IF ( CPP-MSC-TCCT IN CPP-FLD(39) NOT > SPACES AND
      *          CPP-IND-DBHB IN CPP-FLD(39) NOT > SPACES AND
      *          CPP-IND-TALG IN CPP-FLD(39) NOT > SPACES )
      *          GO TO NXT-CMN-ING.
      *     PERFORM EGR-FPEN-FRW.
      *>>>>                                                             
       NXT-CMN-ING.
      *>>>>
           PERFORM RET-ALL-CPP.

      *<<<< CMN_ING OR CMN_MOD
      * SI LA RESPUESTA A ESTA PREGUNTA ES VERDADERA
      * SIGNIFICA ESTA MOSTRANDO CP2
           IF SCR-COD-PUEDE-IR-A-FRM1 = 'YES'
               PERFORM ENROQUE-WI.

           PERFORM RET-HDR-CPP.
           IF SCR-OFRM-SRV
                PERFORM CRG-BR-CPP.
           PERFORM CLR-FLD-CP2-CPP.
      *>>>>
           MOVE FIO-PUT TO FIO-CMND.
           PERFORM COL-FIO-CPP.

       FIN-CMN-ING.
           EXIT.

       CMN-ACC SECTION.
       INI-CMN-ACC.
           IF SCR-STAT = SCR-STAT-ABT OR SCR-VFLD = SCR-VFLD-NOT
               MOVE 'ACCION NO REALIZADA' TO FRM-MENS

      *<<<< ABT_CMN_ACC
               IF SCR-CMND = 'COP'
                   MOVE 'REGISTRO NO FUE COPIADO' TO FRM-MENS
                   GO TO FIN-CMN-ACC
               ELSE
      *>>>>
               GO TO FIN-CMN-ACC.

      *<<<< INI_CMN_ACC
           IF SCR-CMND = 'COP'
               PERFORM RET-ALL-CPP
               PERFORM RET-HDR-CPP
               MOVE FIO-PUT  TO FIO-CMND
               PERFORM COL-FIO-CPP
               IF FIO-STAT-OKS
                   MOVE 'REGISTRO FUE COPIADO' TO FRM-MENS
               ELSE
                   MOVE 'ERROR : REGISTRO NO COPIADO' TO FRM-MENS
           ELSE
               MOVE 'COMANDO NO IMPLEMENTADO' TO FRM-MENS.
           GO TO FIN-CMN-ACC.
      *     PERFORM EGR-FPEN-FRW.
      *>>>>
           PERFORM KEY-ALL-CPP.
           MOVE FIO-GET-KEY-UPD TO FIO-CMND.
           PERFORM COL-FIO-CPP.
           IF NOT FIO-STAT-OKS
               GO TO FIN-CMN-ACC.

           PERFORM RET-ALL-CPP.

       FIN-CMN-ACC.
           EXIT.

       CMN-ELI SECTION.
       INI-CMN-ELI.

      *<<<<
      * ISP 08-01-2015 ELIMINA PROGRAMA cpp, NO TRANSFIERE CONTROL A CP2
      *     PERFORM EGR-FPEN-FRW.
      *>>>>
           PERFORM KEY-ALL-CPP.
           MOVE FIO-GET-KEY-UPD TO FIO-CMND.
           PERFORM COL-FIO-CPP.
           IF NOT FIO-STAT-OKS
               GO TO FIN-CMN-ELI.

           MOVE FIO-DEL TO FIO-CMND.
           PERFORM COL-FIO-CPP.

       FIN-CMN-ELI.
           EXIT.

       CMN-PGM SECTION.
       INI-CMN-PGM.

      *<<<<
      *     PERFORM EGR-FPEN-FRW.
      *>>>>
           PERFORM RET-ALL-CPP.

       FIN-CMN-PGM.
           EXIT.

       STP-EXIT SECTION.
       INI-STP-EXIT.

           MOVE SCR-PROG TO PGM-PROG.
           MOVE SCR-NTRN TO PGM-NTRN.

           MOVE SCR-PROV TO SCR-PROG.
           MOVE SCR-NTRV TO SCR-NTRN.

           MOVE PGM-PROG TO SCR-PROV
           MOVE PGM-NTRN TO SCR-NTRV.

       FIN-STP-EXIT.
           EXIT.

       SCR-EXIT SECTION.
       INI-SCR-EXIT.

           MOVE 'P'      TO SCR-ICMN.
           MOVE SCR-NTRN TO SYS-NTRN.

      *<<<< EXIT_SCR
      *>>>> EXIT_SCR
           MOVE SCR-VARI TO SYS-CMMA.
           MOVE SCR-TCMA TO SYS-TCMA.
           MOVE SYS-RTRN TO SYS-CMND.
      *PTC-INI
           IF NOT SCR-OFRM-SRV
      *PTC-FIN
           PERFORM GNS-PRO-SYS.
       FIN-SCR-EXIT.
           EXIT.

       SCR-PUTA SECTION.
       INI-SCR-PUTA.
      *<<<< INI_SCR_PUTA
      *    IF SCR-CMND = 'COS' AND
      *       PGM-STAT-CPP-OKS
      *          PERFORM BUS-NXT-CPP
      *
      *
      *          MOVE +100 TO QUE-LITM
      *          MOVE 'CPP-PUT' TO QUE-COLA
      *          MOVE CPP TO QUE-ITEM
      *          MOVE QUE-PUT TO QUE-CMND
      *          PERFORM GNS-PRO-QUE
      *
      *          IF WSS-GET-NLS = 'N'
      *               PERFORM PUT-ALL-CPP.
      *>>>> INI_SCR_PUTA

      *PTC-INI
           IF FRM-SUAR EQUAL FRM-SUAR-MAL OR FRM-SUAR-CLR
               MOVE 'S' TO SCR-IERR.
      *PTC-FIN
           MOVE SCR-NMAP TO FRM-NAME.
           MOVE SCR-NLIB TO FRM-NLIB.
           MOVE CPP-FLD TO FRM-DFLD.

           MOVE FRM-PUT-ALL TO FRM-CMND.
           PERFORM GNS-PRO-FRM.
       FIN-SCR-PUTA.
           EXIT.

       SCR-MSSG SECTION.
       INI-SCR-MSSG.
           IF FRM-MEN1 NOT > SPACES
               MOVE SPACES TO FRM-MEN1.
           IF FRM-MEN2 NOT > SPACES
               MOVE SPACES TO FRM-MEN2.
           MOVE FRM-MENS TO CPP-GLS-MENS.
       FIN-SCR-MSSG.
           EXIT.

       SCR-GFLD SECTION.
       INI-SCR-GFLD.
           MOVE SCR-NMAP TO FRM-NAME.
           MOVE SCR-NLIB TO FRM-NLIB.
           MOVE FRM-GET-ALL TO FRM-CMND.
           PERFORM GNS-PRO-FRM.

           MOVE SPACES TO FRM-MENS.

           IF NOT ( FRM-FFLD = FRM-FFLD-RET  OR FRM-FFLD-PF10 OR
                               FRM-FFLD-PF12 OR FRM-FFLD-PF3 )

      *<<<< PFS_SCR_GFLD OR PFS_SCR_GCNF OR PFS_GET_ACC OR PFS_GET_CON
      *<<<<
      *AFRI-INI/PLATAFORMA UNICA DE CRED./CHC/11-2014
      *    IF NOT ( FRM-FFLD = FRM-FFLD-PF8 )
      *    IF NOT ( FRM-FFLD = FRM-FFLD-PF7 OR FRM-FFLD-PF8 )
      *AFRI-FIN/PLATAFORMA UNICA DE CRED./CHC/11-2014
      *>>>>
      *>>>>
               MOVE 'PFSINV    ' TO MSG-COD-MENS
               MOVE 'GNS' TO MSG-COD-SIST
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS
               PERFORM FST-FLD-CPP
               PERFORM SCR-MSSG
               PERFORM SCR-PUTA
               PERFORM SCR-EXIT.
           MOVE FRM-DFLD TO CPP-FLD.
           IF FRM-STAT-ABT
               GO TO FIN-SCR-GFLD.
           MOVE FRM-SUAR-OKS TO FRM-SUAR.
           PERFORM VAL-NUM-KEY-CPP.
           IF FRM-SUAR EQUAL FRM-SUAR-MAL OR FRM-SUAR-CLR
      *PTC-INI
               MOVE 'S' TO SCR-IERR
      *PTC-FIN
               PERFORM SCR-MSSG
               PERFORM EDT-KEY-CPP
               PERFORM SCR-PUTA
               PERFORM SCR-EXIT.
           PERFORM VAL-NUM-FLD-CPP.
           IF FRM-SUAR EQUAL FRM-SUAR-MAL OR FRM-SUAR-CLR
      *PTC-INI
               MOVE 'S' TO SCR-IERR
      *PTC-FIN
               PERFORM SCR-MSSG
               PERFORM EDT-KEY-CPP
               PERFORM EDT-FLD-CPP
               PERFORM SCR-PUTA
               PERFORM SCR-EXIT.

      *<<<< SCR_GFLD_VAL_MKY
           IF SCR-OFRM-SRV
                PERFORM CRG-WI-CPP.
      *>>>> 
           PERFORM VAL-MKY-CPP.
           IF FRM-SUAR EQUAL FRM-SUAR-MAL OR FRM-SUAR-CLR
      *PTC-INI
               MOVE 'S' TO SCR-IERR
      *PTC-FIN
               GO TO ERR-SCR-GFLD.

           PERFORM VAL-FLD-CPP.
           IF FRM-SUAR EQUAL FRM-SUAR-MAL OR FRM-SUAR-CLR
               GO TO ERR-SCR-GFLD.

      *<<<< SCR_GFLD_VAL_CON_FLD
      *     IF FRM-FFLD = FRM-FFLD-PF8 AND
      *        CPP-MSC-TCCT IN CPP-FLD(39) > SPACES AND
      *        CPP-IND-DBHB IN CPP-FLD(39) > SPACES AND
      *        CPP-IND-TALG IN CPP-FLD(39) > SPACES
      *         PERFORM VAL-NUM-KEY-CPP
      *         PERFORM EGR-FPEN-FRW.

           IF FRM-FFLD = FRM-FFLD-PF8 AND
              CPP-MSC-TCCT IN CPP-FLD(39) NOT > SPACES AND
              CPP-IND-DBHB IN CPP-FLD(39) NOT > SPACES AND
              CPP-IND-TALG IN CPP-FLD(39) NOT > SPACES
               MOVE 'CPPREGINCOM' TO MSG-COD-MENS
               MOVE 'COL' TO MSG-COD-SIST
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO CPP-GLS-MEN2
               MOVE SCR-PRMT     TO CPP-GLS-MEN1
               PERFORM FST-MSG
               PERFORM SCR-PUTA
               PERFORM SCR-EXIT.
      *>>>>
           PERFORM VAL-CON-FLD-CPP.
           IF NOT ( FRM-SUAR EQUAL FRM-SUAR-MAL OR FRM-SUAR-CLR )
               GO TO FIN-SCR-GFLD.
           IF FRM-UCUR NOT > SPACES
               PERFORM FST-FLD-CPP.
       ERR-SCR-GFLD.
      *PTC-INI
           MOVE 'S' TO SCR-IERR.
      *PTC-FIN

           PERFORM SCR-MSSG.
           PERFORM EDT-KEY-CPP.
           PERFORM EDT-FLD-CPP.
           PERFORM SCR-PUTA.
           PERFORM SCR-EXIT.
       FIN-SCR-GFLD.

           MOVE SCR-STAT-MOD TO SCR-STAT.

       GET-ACC SECTION.
       INI-GET-ACC.
           MOVE SCR-NMAP TO FRM-NAME.
           MOVE SCR-NLIB TO FRM-NLIB.
           MOVE FRM-GET-ALL TO FRM-CMND.
           PERFORM GNS-PRO-FRM.
           IF NOT ( FRM-FFLD = FRM-FFLD-RET  OR FRM-FFLD-PF10 OR
                               FRM-FFLD-PF12 OR FRM-FFLD-PF3 )

      *<<<< PFS_SCR_GFLD OR PFS_SCR_GCNF OR PFS_GET_ACC OR PFS_GET_CON
      *<<<<
      *AFRI-INI/PLATAFORMA UNICA DE CRED./CHC/11-2014
      *    IF NOT ( FRM-FFLD = FRM-FFLD-PF8 )
      *    IF NOT ( FRM-FFLD = FRM-FFLD-PF7 OR FRM-FFLD-PF8 )
      *AFRI-FIN/PLATAFORMA UNICA DE CRED./CHC/11-2014
      *>>>>
      *>>>>
               MOVE 'PFSINV    ' TO MSG-COD-MENS
               MOVE 'GNS' TO MSG-COD-SIST
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO CPP-GLS-MEN2
               MOVE SCR-PRMT     TO CPP-GLS-MEN1
               PERFORM FST-MSG
               PERFORM SCR-PUTA
               PERFORM SCR-EXIT.
           MOVE FRM-DFLD TO CPP-FLD.
           IF NOT ( ( FRM-FFLD = FRM-FFLD-PF12 OR FRM-FFLD-PF3 ) OR
                      SCR-CONF > SPACES )
               PERFORM VAL-NUM-KEY-CPP
               PERFORM VAL-NUM-FLD-CPP.

       FIN-GET-ACC.
           MOVE SCR-STAT-SON TO SCR-STAT.

       GET-CON SECTION.
       INI-GET-CON.
           MOVE SCR-NMAP TO FRM-NAME.
           MOVE SCR-NLIB TO FRM-NLIB.
           MOVE FRM-GET-ALL TO FRM-CMND.
           PERFORM GNS-PRO-FRM.
           IF NOT ( FRM-FFLD = FRM-FFLD-RET  OR FRM-FFLD-PF10 OR
                               FRM-FFLD-PF12 OR FRM-FFLD-PF3 )

      *<<<< PFS_SCR_GFLD OR PFS_SCR_GCNF OR PFS_GET_ACC OR PFS_GET_CON
      *<<<<
      *AFRI-INI/PLATAFORMA UNICA DE CRED./CHC/11-2014
      *    IF NOT ( FRM-FFLD = FRM-FFLD-PF8 )
      *    IF NOT ( FRM-FFLD = FRM-FFLD-PF7 OR FRM-FFLD-PF8 )
      *AFRI-FIN/PLATAFORMA UNICA DE CRED./CHC/11-2014
      *>>>>
      *>>>>
               MOVE 'PFSINV    ' TO MSG-COD-MENS
               MOVE 'GNS' TO MSG-COD-SIST
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO CPP-GLS-MEN2
               MOVE SCR-PRMT     TO CPP-GLS-MEN1
               PERFORM FST-MSG
               PERFORM SCR-PUTA
               PERFORM SCR-EXIT.
           MOVE FRM-DFLD TO CPP-FLD.

      *<<<< FIN_GET_CON OR FIN_SCR_GCNF
      *    IF FRM-FFLD = FRM-FFLD-PF8
      *        PERFORM VAL-NUM-KEY-CPP
      *        PERFORM VAL-NUM-FLD-CPP
      *        PERFORM EGR-FPEN-FRW.
      *>>>>  
       FIN-GET-CON.
           MOVE SCR-STAT-CON TO SCR-STAT.

       CLR-MSG SECTION.
       INI-CLR-MSG.
           MOVE SPACES TO CPP-GLS-MENS.
       FIN-CLR-MSG.
           EXIT.

       HBL-IKY SECTION.
       INI-HBL-IKY.

      *<<<< INI_HBL_KEY OR INI_HBL_IKY
           MOVE LOW-VALUES TO CP2-FLD.
           MOVE 'HBL_IKY' TO QUE-COLA.
      *>>>>
      *PTC-INI
           IF NOT SCR-OFRM-SRV
      *PTC-FIN
           IF SCR-DESDE-CMN
               MOVE CPP-GLS-MENS TO FRM-MENS
               MOVE LOW-VALUES TO CPP-FLD
      * FLB  7-NOV-1994
               PERFORM CLR-KEY-CPP

               IF FRM-MENS < SPACES
                   MOVE LOW-VALUES TO CPP-GLS-MENS
               ELSE
                   MOVE FRM-MENS TO CPP-GLS-MENS.
           PERFORM PRO-FLD-CPP.
           PERFORM PRO-MKY-CPP.
           PERFORM UNP-IKY-CPP.
           PERFORM FST-KEY-CPP.

      *<<<< FIN_HBL_IKY
      *MVG-INI 26-JUN-2019 IGUALACION COL
           MOVE FRM-CPSF-AEY TO FRM-CPIM-AEY.
      *MVG-FIN 26-JUN-2019 IGUALACION COL
      *>>>> FIN_HBL_IKY
      *<<<<
           MOVE '1' TO FRM-CPIM-AEY. 
      *>>>>
       FIN-HBL-IKY.
           EXIT.

       HBL-KEY SECTION.
       INI-HBL-KEY.

      *<<<< INI_HBL_KEY OR INI_HBL_IKY
           MOVE LOW-VALUES TO CP2-FLD.
      *>>>>
      *PTC-INI
           IF NOT SCR-OFRM-SRV
      *PTC-FIN
           IF SCR-DESDE-CMN
               MOVE CPP-GLS-MENS TO FRM-MENS
               MOVE LOW-VALUES TO CPP-FLD
               IF FRM-MENS < SPACES
                   MOVE LOW-VALUES TO CPP-GLS-MENS
               ELSE
                   MOVE FRM-MENS TO CPP-GLS-MENS.
           MOVE FRM-CPSF-AEY TO FRM-CPIM-AEY.
           PERFORM PRO-FLD-CPP.
           MOVE '1' TO FRM-CPIM-AEY.
           PERFORM UNP-KEY-CPP.
           PERFORM FST-KEY-CPP.

      *<<<< FIN_HBL_KEY
      *>>>> FIN_HBL_KEY
      *<<<<
           MOVE '1' TO FRM-CPIM-AEY. 
      *>>>>
       FIN-HBL-KEY.
           EXIT.

       HBL-FLD SECTION.
       INI-HBL-FLD.

           PERFORM UNP-MKY-CPP.
           PERFORM UNP-FLD-CPP.
           PERFORM FST-FLD-CPP.
      *<<<<
      *>>>>
      *<<<<
           IF SCR-CMND = 'COP'
               PERFORM UNP-IKY-CPP
               PERFORM FST-KEY-CPP.

       FIN-HBL-FLD.
           EXIT.

       FST-MSG SECTION.
       INI-FST-MSG.
           MOVE -1 TO CPP-GLS-MENS-LEN.
       FIN-FST-MSG.
           EXIT.

       PRO-ALL SECTION.
       INI-PRO-ALL.

           PERFORM PRO-KEY-CPP.
           PERFORM PRO-FLD-CPP.
           PERFORM FST-MSG.

       FIN-PRO-ALL.
           EXIT.

       SCR-TRL SECTION.
       INI-SCR-TRL.
      * PTC-INI
           IF SCR-STAT NOT = SCR-STPP
               MOVE FRM-SUAR-MAL TO FRM-SUAR.
      * PTC-FIN

      *>>>> INI_SCR_TRL
      *>>>> INI_SCR_TRL

           IF FRM-MEN1 NOT > SPACES
               MOVE SCR-PRMT TO FRM-MEN1.

      *>>>> FIN_SCR_TRL
      *>>>> FIN_SCR_TRL
           IF SCR-STAT = SCR-STAT-MOD
               PERFORM HBL-FLD
               PERFORM SCR-MSSG
               PERFORM EDT-KEY-CPP
               PERFORM EDT-FLD-CPP
               PERFORM SCR-PUTA
               MOVE SCR-INST-GFL TO SCR-INST
               PERFORM SCR-EXIT.
           IF SCR-STAT = SCR-STAT-SON
               PERFORM PRO-ALL
               PERFORM SCR-MSSG
               PERFORM EDT-KEY-CPP
               PERFORM EDT-FLD-CPP
               PERFORM SCR-PUTA
               MOVE SCR-INST-GCS TO SCR-INST
               PERFORM SCR-EXIT.
      *ASUME SCR-STAT-CON.
           MOVE SCR-STAT-CON TO SCR-STAT.
      *    MOVE FRM-CPSF-AEY TO FRM-CPIM-AEY.
           PERFORM PRO-ALL.
           PERFORM SCR-MSSG.
           PERFORM EDT-KEY-CPP.
           PERFORM EDT-FLD-CPP.
           PERFORM SCR-PUTA.
           MOVE SCR-INST-GAB TO SCR-INST.
           PERFORM SCR-EXIT.
       FIN-SCR-TRL.
           EXIT.

       DESSCRTRL SECTION.
       INI-DESSCRTRL.
           IF SCR-INST = SCR-INST-GCF
                  PERFORM SCR-GCNF
                  GO TO FIN-DESSCRTRL.
           MOVE SCR-VFLD-NOT TO SCR-VFLD.
           MOVE FRM-FFLD TO SCR-FFLD.
           IF SCR-STAT = SCR-STAT-ABT OR SCR-STAT-CON
                  GO TO FIN-DESSCRTRL.
           IF SCR-FFLD-RET OR SCR-FFLD-PF10
                  MOVE SCR-VFLD-YES TO SCR-VFLD
                  PERFORM PRO-CONF.
       FIN-DESSCRTRL.
           IF SCR-FFLD-PF10 OR SCR-FFLD-PF3
                 MOVE SCR-INST-HCM TO SCR-INST
           ELSE
                 MOVE SCR-INST-HKY TO SCR-INST.
       EXT-DESSCRTRL.
           EXIT.

       PRO-CONF SECTION.
       INI-PRO-CONF.

      *PTC-INI
           IF SCR-OFRM-SRV AND
              SCR-CONF NOT > SPACES
                MOVE SPACES TO FRM-MENS.
      *PTC-FIN
           IF FRM-MENS NOT > SPACES
               IF SCR-CONF NOT > SPACES
                   GO TO FIN-PRO-CONF
               ELSE
                   MOVE SCR-CONF TO FRM-MENS
           ELSE
               IF FRM-MEN1 NOT > SPACES
                   MOVE SCR-CONF TO FRM-MEN1.
           PERFORM PRO-KEY-CPP.
           PERFORM PRO-FLD-CPP.
           PERFORM FST-MSG.

           PERFORM SCR-MSSG.
           IF SCR-STAT = SCR-STAT-MOD
               PERFORM EDT-KEY-CPP
               PERFORM EDT-FLD-CPP.
           PERFORM SCR-PUTA.
           MOVE SCR-INST-GCF TO SCR-INST.
           PERFORM SCR-EXIT.
       FIN-PRO-CONF.
           EXIT.

       SCR-GCNF SECTION.
       INI-SCR-GCNF.
           MOVE SCR-NMAP TO FRM-NAME.
           MOVE SCR-NLIB TO FRM-NLIB.
           MOVE FRM-GET-ALL TO FRM-CMND.
           PERFORM GNS-PRO-FRM.
           IF NOT ( FRM-FFLD = FRM-FFLD-RET  OR FRM-FFLD-PF10 OR
                               FRM-FFLD-PF12 OR FRM-FFLD-PF3  OR
                               FRM-FFLD-PF4 )

      *<<<< PFS_SCR_GFLD OR PFS_SCR_GCNF OR PFS_GET_ACC OR PFS_GET_CON
      *<<<<
      *AFRI-INI/PLATAFORMA UNICA DE CRED./CHC/11-2014
      *    IF NOT ( FRM-FFLD = FRM-FFLD-PF8 )
      *    IF NOT ( FRM-FFLD = FRM-FFLD-PF7 OR FRM-FFLD-PF8 )
      *AFRI-FIN/PLATAFORMA UNICA DE CRED./CHC/11-2014
      *>>>>
      *>>>>
               MOVE 'PFSINV    ' TO MSG-COD-MENS
               MOVE 'GNS' TO MSG-COD-SIST
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO CPP-GLS-MEN2
               MOVE SCR-CONF     TO CPP-GLS-MEN1
               PERFORM FST-MSG
               PERFORM SCR-PUTA
               PERFORM SCR-EXIT.
           MOVE FRM-DFLD TO CPP-FLD.
           MOVE FRM-FFLD TO SCR-FFLD.
           IF FRM-FFLD = FRM-FFLD-PF3
               MOVE SCR-VFLD-NOT TO SCR-VFLD
           ELSE
           IF FRM-FFLD = FRM-FFLD-RET OR FRM-FFLD-PF10 OR FRM-FFLD-PF4
               MOVE SCR-VFLD-YES TO SCR-VFLD
               PERFORM VAL-NUM-KEY-CPP
               PERFORM VAL-NUM-FLD-CPP
           ELSE
           IF FRM-FFLD = FRM-FFLD-PF12
               MOVE SCR-STPP TO SCR-STAT
               IF SCR-STAT = SCR-STAT-MOD
                   PERFORM VAL-NUM-KEY-CPP
                   PERFORM VAL-NUM-FLD-CPP
                   PERFORM SCR-TRL
               ELSE
                   MOVE SCR-VFLD-NOT TO SCR-VFLD.

       FIN-SCR-GCNF.
           EXIT.

      * PGM-EBR-ALL SECTION.
      * INI-PGM-EBR-ALL.
      *     MOVE 'GNS' TO FIO-SIST.
      *     MOVE FIO-EBR-ALL TO FIO-CMND.
      *     PERFORM GNS-FIO-TAB.
      * FIN-PGM-EBR-ALL.
      *     EXIT.


       COPY COLBUCPP.
       COPY COLBFCPP.
       COPY GNSBFMSG.
       COPY GNSBGSYS.
       COPY GNSBGDTC.
      *PTC-INI
      *PTC-SUB
      * ISP  10-MAY-2001 13:46:35 
      * COPY GNSBGFRM.
       COPY GNSBG3CF.
      *PTC-FIN
       COPY GNSBGMSG.
       COPY GNSBEKEY.
       COPY GNSBIABT.
       COPY GNSBBTAB.
       COPY GNSBVCOD.
       COPY GNSBVTAB.
       COPY GNSBFTAB.
       COPY GNSBBMSC.
       COPY GNSBVIND.
       COPY GNSBVMSC.
       COPY GNSBFMSC.
       COPY GNSBGFEC.
       COPY GNSBGHOY.
      *PTC-INI
       COPY GNSBGQUE.
       COPY GNSBGTSK.
      *PTC-FIN


      *<<<< EOF                                                         
       ING-FPEN-CIC SECTION.
       INI-ING-FPEN-CIC.
           PERFORM ING-SETE.
      *JSS PERFORM SCR-TRL.
      *    ( LA UNICA DIFERENCIA CON EL PARRAFO SCR-TRL ES EL SCR-INIT )
           MOVE SCR-STPP TO SCR-STAT.
      *     MOVE SCR-GLS-PRMT( SCR-I ) TO FRM-MENS.
           IF SCR-STAT = SCR-STAT-MOD
               MOVE SCR-INST-GFL TO SCR-INST
               PERFORM HBL-FLD
               PERFORM SCR-MSSG
               IF FRM-FFLD NOT = FRM-FFLD-PF12
                   PERFORM EDT-FLD-CPP
                   PERFORM SCR-INIT
                   PERFORM STP-EXIT
                   PERFORM SCR-EXIT
               ELSE
                   PERFORM SCR-INIT
                   PERFORM STP-EXIT
                   PERFORM SCR-EXIT.
           IF SCR-STAT = SCR-STAT-SON
               MOVE SCR-INST-GCS TO SCR-INST
               PERFORM PRO-ALL
               PERFORM SCR-MSSG
               IF FRM-FFLD NOT = FRM-FFLD-PF12
                   PERFORM EDT-FLD-CPP
                   PERFORM SCR-INIT
                   PERFORM STP-EXIT
                   PERFORM SCR-EXIT
               ELSE
                   PERFORM SCR-INIT
                   PERFORM STP-EXIT
                   PERFORM SCR-EXIT.
      *ASUME SCR-STAT-CON.
           MOVE SCR-STAT-CON TO SCR-STAT.
           MOVE SCR-INST-GAB TO SCR-INST.
           PERFORM PRO-ALL.
           PERFORM SCR-MSSG.
           IF FRM-FFLD NOT = FRM-FFLD-PF12
               PERFORM EDT-FLD-CPP
               PERFORM SCR-INIT
               PERFORM SCR-EXIT
           ELSE
               PERFORM SCR-INIT
               PERFORM SCR-EXIT.
       FIN-ING-FPEN-CIC.
           EXIT.

       ING-FTER-CIC SECTION.
       INI-ING-FTER-CIC.
           PERFORM ING-SETE.
           MOVE SCR-INST-GKY TO SCR-INST.
           PERFORM HBL-KEY.
           PERFORM SCR-CLRA-CPP.
           MOVE SCR-MENS-EXT TO CPP-GLS-MENS.
           PERFORM EDT-KEY-CPP.
           PERFORM EDT-FLD-CPP.
           PERFORM SCR-INIT.
           PERFORM SCR-EXIT.
       FIN-ING-FTER-CIC.
           EXIT.

       ING-FTER-CMN SECTION.
       INI-ING-FTER-CMN.
           PERFORM ING-SETE.
           PERFORM PRO-ALL.
           PERFORM SCR-CLRA-CPP.
           MOVE SCR-MENS-EXT TO CPP-GLS-MENS.
           PERFORM SCR-INIT.
       FIN-ING-FTER-CMN.
           EXIT.

       ING-SETE SECTION.
       INI-ING-SETE.
           MOVE WSS-NTRN(SCR-IPRO) TO SCR-NTRN.
           MOVE WSS-PROG(SCR-IPRO) TO SCR-PROG.
           MOVE WSS-NMAP(SCR-IPRO) TO SCR-NMAP.
           MOVE WSS-NLIB(SCR-IPRO) TO SCR-NLIB.
      *JSS MOVE CPP-FLD-EXT TO CPP-FLD.

           MOVE WSS-NTRV(SCR-IPRO) TO SCR-NTRV.
           MOVE WSS-PROV(SCR-IPRO) TO SCR-PROV.
       FIN-ING-SETE.
           EXIT.

       EGR-FPEN-FRW SECTION.
       INI-EGR-FPEN-FRW.
      *JCT-INI 11-01-2012 VALIDACION Y GENERACION AUTOMATIZADA DE PRODUC
      *=>  IF SCR-CMND = 'MOD'
      *=>     GO TO FIN-EGR-FPEN-FRW.
      *JCT-INI 11-01-2012
           ADD 1 TO SCR-IPRO.
           MOVE WSS-INST-FPEN-CIC TO SCR-INST-EXT.
      *JSS MOVE CPP-FLD  TO CPP-FLD-EXT.
           MOVE WSS-PROG(SCR-IPRO) TO SYS-PROG.
           MOVE SCR-VARI TO SYS-CMMA.
           MOVE SCR-TCMA TO SYS-TCMA.
           MOVE SYS-XCTL TO SYS-CMND.
           PERFORM GNS-PRO-SYS.
       FIN-EGR-FPEN-FRW.
           EXIT.

       EGR-FPEN-BCK SECTION.
       INI-EGR-FPEN-BCK.
           SUBTRACT 1 FROM SCR-IPRO.
           MOVE WSS-INST-FPEN-CIC TO SCR-INST-EXT.
      *JSS MOVE CPP-FLD  TO CPP-FLD-EXT.
           MOVE WSS-PROG(SCR-IPRO) TO SYS-PROG.
           MOVE SCR-VARI TO SYS-CMMA.
           MOVE SCR-TCMA TO SYS-TCMA.
           MOVE SYS-XCTL TO SYS-CMND.
           PERFORM GNS-PRO-SYS.
       FIN-EGR-FPEN-BCK.
           EXIT.

       EGR-FTER-CIC SECTION.
       INI-EGR-FTER-CIC.
           MOVE 1 TO SCR-IPRO.
           MOVE WSS-INST-FTER-CIC TO SCR-INST-EXT.
           MOVE WSS-PROG(SCR-IPRO) TO SYS-PROG.
           MOVE SCR-VARI TO SYS-CMMA.
           MOVE SCR-TCMA TO SYS-TCMA.
           MOVE SYS-XCTL TO SYS-CMND.
           PERFORM GNS-PRO-SYS.
       FIN-FTER-CIC.
           EXIT.

       EGR-FTER-CMN SECTION.
       INI-EGR-FTER-CMN.
           MOVE 1 TO SCR-IPRO.
           MOVE WSS-INST-FTER-CMN TO SCR-INST-EXT.
           MOVE WSS-PROG(SCR-IPRO) TO SYS-PROG.
           MOVE SCR-VARI TO SYS-CMMA.
           MOVE SCR-TCMA TO SYS-TCMA.
           MOVE SYS-XCTL TO SYS-CMND.
           PERFORM GNS-PRO-SYS.
       FIN-FTER-CMN.
           EXIT.

       SCR-INIT SECTION.
       INI-SCR-INIT.
           MOVE 3  TO FRM-PLIN.
           MOVE 19 TO FRM-NLIN.
           MOVE FRM-CLR-FRM TO FRM-CMND.
           PERFORM GNS-PRO-FRM.
           MOVE FRM-SINI-DBNF TO FRM-SINI.
           MOVE SCR-NMAP TO FRM-NAME.
           MOVE SCR-NLIB TO FRM-NLIB.
           MOVE CPP-FLD TO FRM-DFLD.
           MOVE FRM-INI TO FRM-CMND.
           PERFORM GNS-PRO-FRM.
       FIN-SCR-INIT.
           EXIT.
       COPY GNSBPVRF.
       COPY GNSBEGLS.
       COPY GNSBPFEC.
       COPY GNSBGCPT.



      *<<<< EOF_PU
       COPY COLBUCP2.
       CLR-FLD-CP2-CPP SECTION.
       INI-CLR-FLD-CP2-CPP.
           MOVE SPACES TO CPP-IND-TALG IN CPP(40).
           MOVE SPACES TO CPP-IND-TALG IN CPP(41).
           MOVE SPACES TO CPP-IND-TALG IN CPP(42).
           MOVE SPACES TO CPP-IND-TALG IN CPP(43).
           MOVE SPACES TO CPP-IND-TALG IN CPP(44).
           MOVE SPACES TO CPP-IND-TALG IN CPP(45).
           MOVE SPACES TO CPP-IND-TALG IN CPP(46).
           MOVE SPACES TO CPP-IND-TALG IN CPP(47).
           MOVE SPACES TO CPP-IND-TALG IN CPP(48).
           MOVE SPACES TO CPP-IND-TALG IN CPP(49).
           MOVE SPACES TO CPP-IND-TALG IN CPP(50).
           MOVE SPACES TO CPP-IND-TALG IN CPP(51).
           MOVE SPACES TO CPP-IND-TALG IN CPP(52).
           MOVE SPACES TO CPP-IND-TALG IN CPP(53).
           MOVE SPACES TO CPP-IND-TALG IN CPP(54).
           MOVE SPACES TO CPP-IND-TALG IN CPP(55).
           MOVE SPACES TO CPP-IND-TALG IN CPP(56).
           MOVE SPACES TO CPP-IND-TALG IN CPP(57).
           MOVE SPACES TO CPP-IND-TALG IN CPP(58).
           MOVE SPACES TO CPP-IND-TALG IN CPP(59).
           MOVE SPACES TO CPP-IND-TALG IN CPP(60).
           MOVE SPACES TO CPP-IND-TALG IN CPP(61).
           MOVE SPACES TO CPP-IND-TALG IN CPP(62).
           MOVE SPACES TO CPP-IND-TALG IN CPP(63).
           MOVE SPACES TO CPP-IND-TALG IN CPP(64).
           MOVE SPACES TO CPP-IND-TALG IN CPP(65).
           MOVE SPACES TO CPP-IND-TALG IN CPP(66).
           MOVE SPACES TO CPP-IND-TALG IN CPP(67).
           MOVE SPACES TO CPP-IND-TALG IN CPP(68).
           MOVE SPACES TO CPP-IND-TALG IN CPP(69).
           MOVE SPACES TO CPP-IND-TALG IN CPP(70).
           MOVE SPACES TO CPP-IND-TALG IN CPP(71).
           MOVE SPACES TO CPP-IND-TALG IN CPP(72).
           MOVE SPACES TO CPP-IND-TALG IN CPP(73).
           MOVE SPACES TO CPP-IND-TALG IN CPP(74).
           MOVE SPACES TO CPP-IND-TALG IN CPP(75).
           MOVE SPACES TO CPP-IND-TALG IN CPP(76).
           MOVE SPACES TO CPP-IND-TALG IN CPP(77).
           MOVE SPACES TO CPP-IND-TALG IN CPP(78).
       FIN-CLR-FLD-CP2-CPP.
           EXIT.
      *>>>>
      *<<<< EOF_PU
       RET-HDR-CPP SECTION.
       INI-RET-HDR-CPP.
           PERFORM GET-FHOY.
      *    Fecha Transaccion
           MOVE HOY-FHOY TO CPP-FEC-FTRN IN CPP.
      *    Hora Transaccion
           MOVE HOY-HHOY TO CPP-HRA-HRTR IN CPP.
      *    Codigo Origen transaccion
           MOVE SCR-OTRN TO CPP-COD-OTRN IN CPP.
      *    Autor Transaccion
           MOVE SCR-USER TO CPP-COD-ATRN IN CPP.
           IF SCR-CCPP = 'ING'
               MOVE 'I' TO CPP-MSC-TACC IN CPP
               MOVE 'I' TO CPP-MSC-STAT IN CPP
           ELSE
           IF SCR-CCPP = 'MOD'
               MOVE 'M' TO CPP-MSC-TACC IN CPP
               MOVE 'M' TO CPP-MSC-STAT IN CPP.
       FIN-RET-HDR-CPP.
	           EXIT.
      *>>>>
      *<<<< EOF_PU
      *JCT-INI 11-01-2012 VALIDACION Y GENERACION AUTOMATIZADA DE PRODUC
       VAL-CAN-MOV SECTION.
       INI-VAL-CAN-MOV.
           IF CPP-IND-DBHB IN CPP-FLD(FRM-IFLD) = 'D'
              ADD 1        TO WSS-MOV-DEB.
           IF CPP-IND-DBHB IN CPP-FLD(FRM-IFLD) = 'H'
              ADD 1        TO WSS-MOV-HAB.
       FIN-VAL-CAN-MOV.
           EXIT.

       VAL-MOV-DUP SECTION.
       INI-VAL-MOV-DUP.
           MOVE 'N'           TO WSS-CPP-ERROR.
           MOVE ZEROES        TO WSS-I
                                 WSS-J.
       CICLO-I.
           ADD 1              TO WSS-I.
           IF WSS-I > 38
              GO TO FIN-VAL-MOV-DUP.

           COMPUTE WSS-J = WSS-I + 1.

           IF CPP-MSC-TCCT IN CPP-FLD(WSS-I) = SPACES AND
              CPP-IND-DBHB IN CPP-FLD(WSS-I) = SPACES AND
              CPP-IND-TALG IN CPP-FLD(WSS-I) = SPACES
              GO TO CICLO-I.

       CICLO-J.
           IF CPP-MSC-TCCT IN CPP-FLD(WSS-J) = SPACES AND
              CPP-IND-DBHB IN CPP-FLD(WSS-J) = SPACES AND
              CPP-IND-TALG IN CPP-FLD(WSS-J) = SPACES
              GO TO SIGUE-J.

           IF CPP-MSC-TCCT IN CPP-FLD(WSS-I) =
                              CPP-MSC-TCCT IN CPP-FLD(WSS-J) AND
              CPP-IND-DBHB IN CPP-FLD(WSS-I) =
                              CPP-IND-DBHB IN CPP-FLD(WSS-J) AND
              CPP-IND-TALG IN CPP-FLD(WSS-I) =
                              CPP-IND-TALG IN CPP-FLD(WSS-J)
              MOVE 'S'           TO WSS-CPP-ERROR
              GO TO FIN-VAL-MOV-DUP.

       SIGUE-J.
           ADD 1           TO WSS-J.
           IF WSS-J > 39
              GO TO CICLO-I.
           GO TO CICLO-J.
       FIN-VAL-MOV-DUP.
           EXIT.
      *JCT-FIN 11-01-2012

       CRG-WI-CPP SECTION.
       INI-CRG-WI-CPP.
      * limpia ocurrencia de registro imagen, pues estas no son puestas
      * GNSPPMTI ya que se obtienen desde TX, por lo tanto se mantienen
      * las ocurrencias de dejo COLPQCPP

           PERFORM CLR-WI-CPP-IDX VARYING WSS-IDX-CPP FROM 1 BY 1
                                 UNTIL WSS-IDX-CPP > 39.

           MOVE CPP-NOM-TSCPP     TO QUE-COLA.
           MOVE ZEROES TO QUE-NITM.
       CIC-CRG-WI-CPP.
           ADD 1 TO QUE-NITM.
           MOVE QUE-GET TO QUE-CMND.
           MOVE CPP-LEN-TSCPP TO QUE-LITM.
           PERFORM GNS-PRO-QUE.
           IF QUE-STAT NOT = QUE-STAT-OKS
                GO TO FIN-CRG-WI-CPP.

           MOVE QUE-ITEM TO CPP-VEC-TS.

           IF QUE-NITM NOT > 39
              MOVE WSS-MSC-TCCT-CPP TO
                   CPP-MSC-TCCT IN CPP-FLD(QUE-NITM)
              MOVE WSS-IND-DBHB-CPP TO
                   CPP-IND-DBHB IN CPP-FLD(QUE-NITM)
              MOVE WSS-IND-TALG-CPP TO
                   CPP-IND-TALG IN CPP-FLD(QUE-NITM)
           ELSE
              MOVE WSS-MSC-TCCT-CPP TO
                   FRM-MSC-TCCT IN CP2-FLD(QUE-NITM)
              MOVE WSS-IND-DBHB-CPP TO
                   FRM-IND-DBHB IN CP2-FLD(QUE-NITM)
              MOVE WSS-IND-TALG-CPP TO
                   FRM-IND-TALG IN CP2-FLD(QUE-NITM).
           GO TO CIC-CRG-WI-CPP.

       FIN-CRG-WI-CPP.
           EXIT.


       CLR-WI-CPP-IDX SECTION.
       INI-CLR-WI-CPP-IDX.
           MOVE SPACES TO CPP-MSC-TCCT IN CPP-FLD(WSS-IDX-CPP).
           MOVE SPACES TO CPP-IND-DBHB IN CPP-FLD(WSS-IDX-CPP).
           MOVE SPACES TO CPP-IND-TALG IN CPP-FLD(WSS-IDX-CPP).
       FIN-CLR-WI-CPP-IDX.
           EXIT.



       CRG-BR-CPP SECTION.
       INI-CRG-BR-CPP.
      * limpia ocurrencia de registro CPP, pues estas no son puestas por
      * GNSPPMTI ya que se obtienen desde TX, por lo tanto se mantienen
      * las ocurrencias de dejo COLPQCPP

           PERFORM CLR-BR-CPP-IDX VARYING WSS-IDX-CPP FROM 1 BY 1
                                 UNTIL WSS-IDX-CPP > 78.

           MOVE CPP-NOM-TSCPP     TO QUE-COLA.
           MOVE ZEROES TO QUE-NITM.
       CIC-CRG-BR-CPP.
           ADD 1 TO QUE-NITM.
           MOVE QUE-GET TO QUE-CMND.
           MOVE CPP-LEN-TSCPP TO QUE-LITM.
           PERFORM GNS-PRO-QUE.

           IF QUE-STAT NOT = QUE-STAT-OKS
                GO TO FIN-CRG-BR-CPP.

           MOVE QUE-ITEM TO CPP-VEC-TS.

           IF QUE-NITM NOT > 78
              MOVE WSS-MSC-TCCT-CPP TO
                   CPP-MSC-TCCT IN CPP(QUE-NITM)
              MOVE WSS-IND-DBHB-CPP TO
                   CPP-IND-DBHB IN CPP(QUE-NITM)
              MOVE WSS-IND-TALG-CPP TO
                   CPP-IND-TALG IN CPP(QUE-NITM).
           GO TO CIC-CRG-BR-CPP.

       FIN-CRG-BR-CPP.
           EXIT.


       CLR-BR-CPP-IDX SECTION.
       INI-CLR-BR-CPP-IDX.
           MOVE SPACES TO CPP-MSC-TCCT IN CPP(WSS-IDX-CPP).
           MOVE SPACES TO CPP-IND-DBHB IN CPP(WSS-IDX-CPP).
           MOVE SPACES TO CPP-IND-TALG IN CPP(WSS-IDX-CPP).
       FIN-CLR-BR-CPP-IDX.
           EXIT.


      *JCT-FIN 11-01-2012
      *>>>>

       ENROQUE-WI SECTION.
       INI-ENROQUE-WI.
           MOVE CPP-FLD TO WSS-ENROQUE-FRM.
           MOVE CP2-FLD TO CPP-FLD.
           MOVE WSS-ENROQUE-FRM TO CP2-FLD.
       FIN-ENROQUE-WI.
           EXIT.

       GO-CPP SECTION.
       INI-GO-CPP.

           MOVE SCR-STAT-MOD TO SCR-STAT.

           MOVE 'NOT' TO SCR-COD-PUEDE-IR-A-FRM1.
           MOVE 'YES' TO SCR-COD-PUEDE-IR-A-FRM2.

           MOVE -1 TO CPP-MSC-TCCT-LEN IN CPP-FLD(1).

           PERFORM ENROQUE-WI.

           MOVE 'F7_CPP' TO QUE-COLA.
           MOVE +2000 TO QUE-LITM.
           MOVE CPP-FLD TO QUE-ITEM.
           MOVE QUE-PUT TO QUE-CMND.
           PERFORM GNX-PRO-QUE.

           MOVE 'F7_CP2' TO QUE-COLA.
           MOVE +2000 TO QUE-LITM.
           MOVE CP2-FLD TO QUE-ITEM.
           MOVE QUE-PUT TO QUE-CMND.
           PERFORM GNX-PRO-QUE.

           PERFORM SCR-PUTA.
           PERFORM SCR-EXIT.


       FIN-GO-CPP.
           EXIT.

       GO-CP2 SECTION.
       INI-GO-CP2.

           MOVE SCR-STAT-MOD TO SCR-STAT.

           MOVE 'YES' TO SCR-COD-PUEDE-IR-A-FRM1.
           MOVE 'NOT' TO SCR-COD-PUEDE-IR-A-FRM2 .

           MOVE -1 TO FRM-MSC-TCCT-LEN IN CP2-FLD(1).

           PERFORM ENROQUE-WI.

           MOVE 'F8_CPP' TO QUE-COLA.
           MOVE +2000 TO QUE-LITM.
           MOVE CPP-FLD TO QUE-ITEM.
           MOVE QUE-PUT TO QUE-CMND.
           PERFORM GNX-PRO-QUE.

           MOVE 'F8_CP2' TO QUE-COLA.
           MOVE +2000 TO QUE-LITM.
           MOVE CP2-FLD TO QUE-ITEM.
           MOVE QUE-PUT TO QUE-CMND.
           PERFORM GNX-PRO-QUE.


           PERFORM SCR-PUTA.
           PERFORM SCR-EXIT.

       FIN-GO-CP2.
           EXIT.

       GNX-PRO-QUE SECTION.
       INI-GNX-PRO-QUE.
           IF WSS-COD-PQUE = 'S'
               PERFORM GNS-PRO-QUE.
       FIN-GNX-PRO-QUE.
           EXIT.


      *>>>> 
