       IDENTIFICATION DIVISION.
      *========================
       PROGRAM-ID.   COLPQEVC.
       AUTHOR.       CONSIST.
       DATE-WRITTEN. 11-Jul-19 05:24 PM.

      * NOMBRE PROGRAMA                   COLPQEVC
      * VERSION PGM                       3.1
      * VERSION SKL                       19.04.15
      * OPCION                            CON
      * ARCHIVO BASE                      COLEVC
      * PANTALLA                          COLEVC
      * INP/OUT                           DATACOM
      * TAMANO COMMAREA                   250


       ENVIRONMENT DIVISION.
      *=====================
       CONFIGURATION SECTION.
      *----------------------
       SPECIAL-NAMES.
               DECIMAL-POINT IS COMMA.
       DATA DIVISION.
      *==============

       WORKING-STORAGE SECTION.
      *------------------------
      * COPY GNSWGSCR.
       COPY GNSWGCVT.
       77  WSS-TAG-COLPQEVC-INI PIC X(125) VALUE                        
           '<IDNPGM NOM=$COLPQEVC$ SKL=$19.04.15$ VSN=${vsnpq}$        
      -    'GEN=$11-Jul-19 05:24 PM$ FNC=${fncpq}$/>'.    

       COPY GNSWCSCR.
      *PTC-INI
      *PTC-SUB
      * COPY GNSWVSCR.
       COPY GNSWV3CR.
      *PTC-FIN
      *<<<< FIN_SCR_VARI
      *ISP DEBE QUEDAR PRIMERO QUE LABEL FIN_SCR_VARI DE PROG ANTIGUO
       COPY COLWGENG.
      *>>>>
      *<<<< FIN_SCR_VARI
       COPY GNSWGRQA REPLACING ==01  ADR-REQA== BY ==02  SCR-RQA1==.
      *>>>>
       COPY COLWIEVC.

       COPY COLBREVC.


       COPY GNSWVIDD.
       COPY GNSWGRQA.
       COPY GNSWGUIB.
       COPY GNSWGELS.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-EVC-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-TAB-REQA==.
       COPY GNSBRTAB.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-MSC-REQA==.
       COPY GNSBRMSC.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-MSG-REQA==.
       COPY GNSBRMSG.
       COPY GNSWCFIO.
       COPY GNSWVFIO.
      *PTC-INI
      *PTC-SUB
      * ISP  10-MAY-2001 13:46:35 
      * COPY GNSWGFRM.
       COPY GNSWG3CF.
       COPY GNSWGTSK.
       COPY GNSWGQUE.
      *PTC-FIN
       COPY GNSWVNUM.
       COPY GNSWCNUM.
       COPY GNSWGFEC.
       COPY GNSWGHOY.
       COPY GNSWGSYS.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-OFI-REQA==.
       COPY TABBROFI.

      *<<<< WSS
       01  WSS-VARI.
      *DAD ini 22-MAR-1991 
           03  WSS-VAL-PESO                            PIC 9(11).
      *DAD fin 22-MAR-1991 
      *ALD/19-JUL-1988
           03  WSS-MEN1.
               05  FILLER               VALUE SPACES PIC X(01).
               05  WSS-SGV-VAL1-EDT     PIC --------------,---.
               05  WSS-GLS-GUI1                      PIC X(01).
               05  WSS-SGV-VAL2-EDT     PIC --------------,---.
           03  WSS-MEN2.
               05  FILLER               VALUE SPACES PIC X(01).
               05  WSS-NUM-VAL1-EDT                   PIC ----.
               05  FILLER               VALUE SPACES PIC X(01).
               05  WSS-IND-DMA1                      PIC X(01).
               05  FILLER               VALUE SPACES PIC X(01).
               05  WSS-GLS-GUI2                      PIC X(01).
               05  FILLER               VALUE SPACES PIC X(01).
               05  WSS-NUM-VAL2-EDT                   PIC ----.
               05  FILLER               VALUE SPACES PIC X(01).
               05  WSS-IND-DMA2                      PIC X(01).
           03  WSS-NUM-NFEC             VALUE 0      PIC 9(03).
           03  WSS-FEC-NFE1.
               05  WSS-NUM-DFE1         VALUE 0      PIC 9(02).
               05  WSS-NUM-MFE1         VALUE 0      PIC 9(02).
               05  WSS-NUM-SFE1         VALUE 0      PIC 9(02).
               05  WSS-NUM-AFE1         VALUE 0      PIC 9(02).
           03  WSS-FEC-NFE2.
               05  WSS-NUM-DFE2         VALUE 0      PIC 9(02).
               05  WSS-NUM-MFE2         VALUE 0      PIC 9(02).
               05  WSS-NUM-SFE2         VALUE 0      PIC 9(02).
               05  WSS-NUM-AFE2         VALUE 0      PIC 9(02).
           03  WSS-FEC-NFE3.
               05  WSS-NUM-DFE3         VALUE 0      PIC 9(02).
               05  WSS-NUM-MFE3         VALUE 0      PIC 9(02).
               05  WSS-NUM-SFE3         VALUE 0      PIC 9(02).
               05  WSS-NUM-AFE3         VALUE 0      PIC 9(02).
      *

           03  WSS-ICOR                 VALUE 0      PIC 9(01).
               88 NO-ASIGNE-CORRELATIVO VALUE 0.
           03  WSS-NUM-JUL              VALUE 0      PIC 9(06).
           03  WSS-NUM-DVDO             VALUE 0      PIC 9(06).
           03  WSS-NUM-VIGU             VALUE 0      PIC 9(06).
           03  WSS-NUM-REMA             VALUE 0      PIC 9(06).
           03  WSS-FEC-FPVC.
               05  WSS-NUM-DPVC         VALUE 0      PIC 9(02).
               05  WSS-NUM-MPVC         VALUE 0      PIC 9(02).
               05  WSS-NUM-SPVC         VALUE 0      PIC 9(02).
               05  WSS-NUM-APVC         VALUE 0      PIC 9(02).
           03  WSS-FEC-FUVC.
               05  WSS-NUM-DUVC         VALUE 0      PIC 9(02).
               05  WSS-NUM-MUVC         VALUE 0      PIC 9(02).
               05  WSS-NUM-SUVC         VALUE 0      PIC 9(02).
               05  WSS-NUM-AUVC         VALUE 0      PIC 9(02).
           03  WSS-FEC-FCO1.
               05  WSS-NUM-SCO1         VALUE 0      PIC 9(02).
               05  WSS-NUM-ACO1         VALUE 0      PIC 9(02).
               05  WSS-NUM-MCO1         VALUE 0      PIC 9(02).
               05  WSS-NUM-DCO1         VALUE 0      PIC 9(02).
           03  WSS-FEC-FCO2.
               05  WSS-NUM-SCO2         VALUE 0      PIC 9(02).
               05  WSS-NUM-ACO2         VALUE 0      PIC 9(02).
               05  WSS-NUM-MCO2         VALUE 0      PIC 9(02).
               05  WSS-NUM-DCO2         VALUE 0      PIC 9(02).
           03  WSS-OPEC                 VALUE SPACES PIC X(08).
      *ISP INI 07-01-2005                                               
           03  WSS-IND-CORP           VALUE 'N'      PIC X(01).         
      *ISP FIN 07-01-2005                                               
       COPY SGCBRDBC.
       COPY COLBROPC.
       COPY COLBRDLC.
       COPY COLBRTOC.
       COPY COLBRCYA.
      *ALD/18-JUL-1988 
       COPY COLBRPOC.
       COPY COLBRPVC.
       COPY TABBRCAM.
      *
      *COPY GNSWGTSK.
      * ISP INI  28-JAN-2004 13:37:42                                   
       77  WSS-LOGN     VALUE 'N'                PIC X(01).             
       77  WSS-DBNM     VALUE ZEROES             PIC 9(03).             
       77  WSS-DBIM     VALUE ZEROES             PIC 9(02).             
       77  WSS-DBNP     VALUE ZEROES             PIC 9(03).             
       77  WSS-DBIP     VALUE ZEROES             PIC 9(02).             
       77  WSS-BUS-BDP  VALUE 'N'                PIC X(01).             
       77  WSS-ENC-IOPE VALUE 'N'                PIC X(01).             
      * ISP FIN  28-JAN-2004 13:37:42                                   
       COPY COLWGSTO.
       COPY GNSWGPES.
      *PTC ini
       COPY COLMXW01.
       COPY COLMXW05.
       COPY GNSWGQUE.
      *PTC fin
       COPY GNSWGCPT.
      *>>>>
      *<<<< WSS
       COPY COLWGPMP.
      *>>>>
      *<<<< WSS_DTC
      *ALD/18-JUL-1988
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-POC-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-PVC-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-CAM-REQA==.
      *
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-OPC-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-DLC-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-CYA-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-DBC-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-TOC-REQA==.
      *>>>>
       01  PGM-VARI.
           03 PGM-ICLR                  VALUE ' '       PIC X(01).
           03 PGM-LIMPIAR-TODO          VALUE ' '       PIC X(01).
           03 PGM-LIMPIAR-LLAVES        VALUE 'K'       PIC X(01).
           03 PGM-LIMPIAR-CAMPOS        VALUE 'F'       PIC X(01).
           03 PGM-NO-LIMPIAR-NADA       VALUE 'N'       PIC X(01).
           03 PGM-PROG                                  PIC X(08).
           03 PGM-NTRN                                  PIC X(04).
           03 PGM-STAT.
              05 PGM-STAT-OPC.
                 88 PGM-STAT-OPC-NUL    VALUE '  '.
                 07 PGM-STT1-OPC        VALUE '2' PIC X(01).
                    88 PGM-STAT-OPC-OKS VALUE '0'.
                 07 PGM-STT2-OPC        VALUE '3' PIC X(01).
              05 PGM-STAT-EVC.
                 88 PGM-STAT-EVC-NUL    VALUE '  '.
                 07 PGM-STT1-EVC        VALUE '2' PIC X(01).
                    88 PGM-STAT-EVC-OKS VALUE '0'.
                 07 PGM-STT2-EVC        VALUE '3' PIC X(01).
              05 PGM-STAT-PVC.
                 88 PGM-STAT-PVC-NUL    VALUE '  '.
                 07 PGM-STT1-PVC        VALUE '2' PIC X(01).
                    88 PGM-STAT-PVC-OKS VALUE '0'.
                 07 PGM-STT2-PVC        VALUE '3' PIC X(01).
           03 PGM-SRNF                  VALUE '23'      PIC X(02).
           03 PGM-SOKS                  VALUE '00'      PIC X(02).
           03 PGM-SNUL                  VALUE '  '      PIC X(02).
           03 PGM-SUAR                  VALUE SPACES    PIC X(15).
       LINKAGE SECTION.
      *----------------
       01  DFHCOMMAREA.
      *<<<< CMA
           02 FILLER                      PIC X(3000).
      *>>>>
       COPY GNSLGFIO.

       PROCEDURE DIVISION.
      *===================

       MAIN SECTION.
       INI-MAIN.
           PERFORM INI.
       LUP-MAIN.
           IF SCR-INST = SCR-INST-HCM
                 PERFORM SCR-COM.
           IF SCR-CCPP = 'MOD'
                 PERFORM SCR-MOD
           ELSE
           IF SCR-CCPP = 'ING'
                 PERFORM SCR-ING
           ELSE
           IF SCR-CCPP = 'ACC'
                 PERFORM SCR-ACC
           ELSE
           IF SCR-CCPP = 'ELI'
                 PERFORM SCR-ELI
           ELSE
           IF SCR-CCPP = 'ACT'
                 PERFORM SCR-ACT
           ELSE
           IF SCR-CCPP = 'PGM'
                 PERFORM SCR-PGM
           ELSE
                 MOVE SCR-INST-HCM TO SCR-INST.
           GO TO LUP-MAIN.
       FIN-MAIN.
           EXIT.

       INI SECTION.
       INI-INI.
       COPY GNSBGEIB.
       COPY GNSBGEDB.
           MOVE LOW-VALUES TO EVC-FLD.
           MOVE LOW-VALUES TO EVC-EDT.
           PERFORM GNS-PRO-RCK.
           PERFORM GNS-BUS-VCA.
           PERFORM GNS-HDL-SYS.
           PERFORM GNS-HDL-FRM.
           MOVE 'COLPQEVC' TO FIO-PROG.
           PERFORM GNS-BUS-IDD.
      *PTC-INI
           PERFORM GNS-ERR-QUE.
           PERFORM GET-TSK-TERM.
      *PTC-FIN
      *<<<< INI_FIO
      *PTC ini
           PERFORM GNS-ERR-QUE.
      *PTC fin
           MOVE +3000 TO SCR-TCMA.
      * PTC ini
      *     IF SCR-DESDE-CMN
      *         MOVE SPACES TO SCR-RQA1
      *         MOVE SPACES TO SCR-VEC-ENG
      *         MOVE 1 TO SCR-IPRO
      *         GO TO FIN-INI-FIO.
      *     IF SCR-INST-EXT = WSS-INST-FPEN-CIC
      *         MOVE WSS-INST-NULL TO SCR-INST-EXT
      *         MOVE 'GNS' TO MSG-COD-SIST
      *         MOVE 'MSGKEY' TO MSG-COD-MENS
      *         PERFORM GET-MSG
      *         MOVE MSG-GLS-DESC TO SCR-MENS-EXT
      **         MOVE 'KO13COLPAEVCCOLFEVCCOLAEVC' TO
      **                  WSS-VEC-PPRO IN WSS-PPRO(WSS-IDX-IEOV)
      *         MOVE 'KQ13COLPQEVCCOLFEVCCOLAEVC' TO
      *                  WSS-VEC-PPRO IN WSS-PPRO(WSS-IDX-IEOV)
      *         MOVE 'KU13COLPUEVC'               TO
      *                 WSS-VEC-PPRV IN WSS-PPRO(WSS-IDX-IEOV)
      *         PERFORM ING-FPEN-CIC.
      * PTC ini
           IF SCR-OFRM-SRV
               MOVE WSS-IDX-IEOV TO SCR-IPRO
           ELSE
               IF SCR-DESDE-CMN
                   MOVE 1 TO SCR-IPRO
                   MOVE SPACES TO SCR-RQA1
                   MOVE SPACES TO SCR-VEC-ENG.
      *PTC fin
      * RBG fin
           IF SCR-INST-EXT = WSS-INST-FPEN-CIC
               MOVE WSS-INST-NULL TO SCR-INST-EXT
               MOVE 'GNS' TO MSG-COD-SIST
               MOVE 'MSGKEY' TO MSG-COD-MENS
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO SCR-MENS-EXT
      *         MOVE 'KO13COLPAEVCCOLFEVCCOLAEVC' TO
      *                  WSS-VEC-PPRO IN WSS-PPRO(WSS-IDX-IEOV)
               MOVE 'KQ13COLPQEVCCOLFEVCCOLAEVC' TO
                        WSS-VEC-PPRO IN WSS-PPRO(WSS-IDX-IEOV)
               MOVE 'KU13COLPUEVC'               TO
                       WSS-VEC-PPRV IN WSS-PPRO(WSS-IDX-IEOV)
               PERFORM ING-FPEN-CIC.

      *ISP INI 07-01-2005                                               
           MOVE TSK-TERM-ALF TO QUE-TERM.                               
           MOVE 'ICOL'       TO QUE-TYPE.                               
           MOVE +9999        TO QUE-LITM.                               
           MOVE 1            TO QUE-NITM.                               
           MOVE QUE-GET      TO QUE-CMND.                               
           PERFORM GNS-PRO-QUE.                                         
           IF QUE-STAT = QUE-STAT-OKS                                   
               MOVE 'S' TO WSS-IND-CORP IN WSS-VARI                     
           ELSE                                                         
               MOVE 'N' TO WSS-IND-CORP IN WSS-VARI.                    
      *ISP FIN 07-01-2005                                               
           IF SCR-OFRM-SRV                                              
               PERFORM VRF-LEE-FRM                                      
               IF WSS-LEE-FRM-EVC = 'S'                                 
                  GO TO FIN-INI-FIO.                                    
       FIN-INI-FIO.
      *>>>>
       FIN-INI.
           EXIT.

       COPY GNSBHSYS.
       COPY GNSBHFRM.
       COPY GNSBPRCK.
       COPY GNSBBVCA.
       COPY GNSBBIDD.

       SCR-COM SECTION.
       INI-SCR-COM.
           MOVE FRM-CPSF-AEY TO FRM-CPIM-AEY.
           PERFORM PRO-ALL.
           PERFORM SCR-CLRA-EVC.
           PERFORM EDT-KEY-EVC.
           PERFORM EDT-FLD-EVC.
           PERFORM SCR-PUTA.
           MOVE SCR-INST-HCM TO SCR-INST.
           MOVE SCR-CMNP     TO SYS-PROG.
           MOVE SCR-VARI     TO SYS-CMMA.
           MOVE SCR-TCMA     TO SYS-TCMA.
           MOVE SYS-XCTL     TO SYS-CMND.
      *PTC-INI
           IF NOT SCR-OFRM-SRV
      *PTC-FIN
           PERFORM GNS-PRO-SYS.
       XCT-ERR.
           MOVE 'XCTERR    ' TO MSG-COD-MENS.
           MOVE 'GNS'        TO MSG-COD-SIST.
           PERFORM GET-MSG.
           MOVE MSG-GLS-DESC TO SYS-MEN1.
           MOVE SYS-PROG     TO SYS-MEN2.
           MOVE SYS-ABOR     TO SYS-CMND.
      *PTC-INI
           IF NOT SCR-OFRM-SRV
      *PTC-FIN
           PERFORM GNS-PRO-SYS.
       COPY GNSBGGBK.
       FIN-SCR-COM.
           EXIT.

       SCR-MOD SECTION.
       INI-SCR-MOD.
           IF SCR-INST = SCR-INST-HKY
               PERFORM HBL-KEY
               MOVE SCR-INST-GKY TO SCR-INST
               PERFORM SCR-DMSG
           ELSE
           IF SCR-INST = SCR-INST-GKY
                PERFORM SCR-KEY
                IF SCR-STAT NOT = SCR-STAT-ABT
                        PERFORM SCR-TRL
                ELSE
                        PERFORM DESSCRTRL
                        GO TO FIN-SCR-MOD
           ELSE
           IF SCR-INST = SCR-INST-GAB
                PERFORM GET-CON
           ELSE
           IF SCR-INST = SCR-INST-BRW
               MOVE SCR-FFLD TO FRM-FFLD
               PERFORM BRW-SCR-MOD.
           PERFORM DESSCRTRL.
      *<<<< PFS_SCR_MOD
           IF FRM-FFLD = FRM-FFLD-PF8 OR FRM-FFLD-PF7
               PERFORM RST-STAT
               PERFORM FND-SCR-KEY THRU FIN-SCR-KEY
               IF SCR-STAT NOT = SCR-STAT-ABT
                   PERFORM SCR-TRL
               ELSE
                   MOVE SPACES TO SCR-RQA1
                   PERFORM DESSCRTRL
                   GO TO FIN-SCR-MOD.
           MOVE SPACES TO SCR-RQA1.
      *>>>>
       MSG-SCR-MOD.
           MOVE SPACES TO FRM-MENS.
           PERFORM SCR-MSSG.
       FIN-SCR-MOD.
           EXIT.

       BRW-SCR-MOD SECTION.
       INI-BRW-SCR-MOD.
       FIN-BRW-SCR-MOD.
           EXIT.

       SCR-ING SECTION.
       INI-SCR-ING.
           IF SCR-INST = SCR-INST-HKY
               PERFORM HBL-IKY
               MOVE SCR-INST-GKY TO SCR-INST
      *PTC-INI
               IF NOT SCR-OFRM-SRV
                   PERFORM SCR-DMSG
               ELSE
                   PERFORM SCR-PUTA
      *PTC-FIN
           ELSE
           IF SCR-INST = SCR-INST-GKY
                PERFORM SCR-RST
                PERFORM GET-IKY
                IF NOT FRM-STAT-ABT
                        MOVE SPACES TO FRM-MENS
                        PERFORM FND-KEY
                        IF NOT FIO-STAT-OKS AND
                           FIO-STAT NOT = FIO-STAT-NEX
      *JSS                  PERFORM CLR-FLD-EVC
                            MOVE PGM-LIMPIAR-TODO TO PGM-ICLR
                            PERFORM SCR-TRL
                        ELSE
      *PTC-INI
                        MOVE 'S' TO SCR-IERR
      *PTC-FIN
                        MOVE PGM-LIMPIAR-CAMPOS TO PGM-ICLR
                        IF FRM-MENS NOT > SPACES
                            MOVE 'REGEXI    ' TO MSG-COD-MENS
                            MOVE 'GNS' TO MSG-COD-SIST
                            PERFORM GET-MSG
                            MOVE MSG-GLS-DESC TO FRM-MENS
                            PERFORM SCR-MSSG
                            MOVE SCR-STAT-ABT TO SCR-STAT
                            PERFORM DESSCRTRL
                            GO TO FIN-SCR-ING
                        ELSE
                            PERFORM SCR-MSSG
                            MOVE SCR-STAT-ABT TO SCR-STAT
                            PERFORM DESSCRTRL
                            GO TO FIN-SCR-ING
                ELSE
                        MOVE SPACES TO FRM-MENS
                        PERFORM SCR-MSSG
                        PERFORM DESSCRTRL
                        GO TO FIN-SCR-ING
           ELSE
           IF SCR-INST = SCR-INST-GAB
                PERFORM GET-CON.
           PERFORM DESSCRTRL.
       MSG-SCR-ING.
           MOVE SPACES TO FRM-MENS.
           PERFORM SCR-MSSG.
       FIN-SCR-ING.
           EXIT.

       SCR-ACC SECTION.
       INI-SCR-ACC.
           IF SCR-INST = SCR-INST-HKY
               PERFORM HBL-KEY
               MOVE SCR-INST-GKY TO SCR-INST
               PERFORM SCR-DMSG
           ELSE
           IF SCR-INST = SCR-INST-GKY
                PERFORM SCR-KEY
                IF SCR-STAT NOT = SCR-STAT-ABT
                        PERFORM SCR-TRL
                ELSE
                        PERFORM DESSCRTRL
                        GO TO FIN-SCR-ACC
           ELSE
           IF SCR-INST = SCR-INST-GAB
                PERFORM GET-CON
           ELSE
           IF SCR-INST = SCR-INST-BRW
               MOVE SCR-FFLD TO FRM-FFLD
               PERFORM BRW-SCR-ACC.
           PERFORM DESSCRTRL.
      *<<<< PFS_SCR_ACC
           IF FRM-FFLD = FRM-FFLD-PF8 OR FRM-FFLD-PF7
               PERFORM VAL-NUM-KEY-EVC
               PERFORM RST-STAT
               PERFORM FND-SCR-KEY THRU FIN-SCR-KEY
               IF SCR-STAT NOT = SCR-STAT-ABT
                   PERFORM SCR-TRL
               ELSE
                   MOVE SPACES TO SCR-RQA1
                   PERFORM DESSCRTRL
                   GO TO FIN-SCR-ACC.
           MOVE SPACES TO SCR-RQA1.
      *>>>>
           MOVE SPACES TO FRM-MENS.
           PERFORM SCR-MSSG.
       FIN-SCR-ACC.
           EXIT.

       BRW-SCR-ACC SECTION.
       INI-BRW-SCR-ACC.
       FIN-BRW-SCR-ACC.
           EXIT.

       SCR-ELI SECTION.
       INI-SCR-ELI.
           IF SCR-INST = SCR-INST-HKY
               PERFORM HBL-KEY
               MOVE SCR-INST-GKY TO SCR-INST
               PERFORM SCR-DMSG
           ELSE
           IF SCR-INST = SCR-INST-GKY
                PERFORM SCR-KEY
                IF SCR-STAT NOT = SCR-STAT-ABT
                        PERFORM SCR-TRL
                ELSE
                        PERFORM DESSCRTRL
                        GO TO FIN-SCR-ELI
           ELSE
           IF SCR-INST = SCR-INST-GAB
                PERFORM GET-CON
           ELSE
           IF SCR-INST = SCR-INST-BRW
               MOVE SCR-FFLD TO FRM-FFLD
               PERFORM BRW-SCR-ELI.
           PERFORM DESSCRTRL.
      *<<<< PFS_SCR_ELI
           IF FRM-FFLD = FRM-FFLD-PF8 OR FRM-FFLD-PF7
               PERFORM VAL-NUM-KEY-EVC
               PERFORM RST-STAT
               PERFORM FND-SCR-KEY THRU FIN-SCR-KEY
               IF SCR-STAT NOT = SCR-STAT-ABT
                   PERFORM SCR-TRL
               ELSE
                   MOVE SPACES TO SCR-RQA1
                   PERFORM DESSCRTRL
                   GO TO FIN-SCR-ELI.
           MOVE SPACES TO SCR-RQA1.
      *>>>>
           MOVE SPACES TO FRM-MENS.
           PERFORM SCR-MSSG.
       FIN-SCR-ELI.
           EXIT.

       BRW-SCR-ELI SECTION.
       INI-BRW-SCR-ELI.
       FIN-BRW-SCR-ELI.
           EXIT.

       SCR-ACT SECTION.
       INI-SCR-ACT.
           IF SCR-INST = SCR-INST-HKY
               PERFORM HBL-KEY
               MOVE SCR-INST-GKY TO SCR-INST
               PERFORM SCR-DMSG
           ELSE
           IF SCR-INST = SCR-INST-GKY
                PERFORM SCR-RST
                PERFORM GET-KEY
                IF NOT FRM-STAT-ABT
                        MOVE SPACES TO FRM-MENS
                        PERFORM FND-KEY
                        IF FIO-STAT-OKS
                            MOVE SCR-ACTU-MOD TO SCR-ACTU
                            PERFORM PUT-SCR
                            MOVE PGM-LIMPIAR-TODO TO PGM-ICLR
                            PERFORM SCR-TRL
                        ELSE
                        MOVE PGM-LIMPIAR-CAMPOS TO PGM-ICLR
                        IF FIO-STAT-EOF
                            IF FRM-MENS NOT > SPACES
                                MOVE 'REGEOF    ' TO MSG-COD-MENS
                                MOVE 'GNS' TO MSG-COD-SIST
                                PERFORM GET-MSG
                                MOVE MSG-GLS-DESC TO FRM-MENS
                                PERFORM SCR-MSSG
                                MOVE SCR-STAT-ABT TO SCR-STAT
                                PERFORM DESSCRTRL
                                GO TO FIN-SCR-ACT
                            ELSE
                                PERFORM SCR-MSSG
                                MOVE SCR-STAT-ABT TO SCR-STAT
                                PERFORM DESSCRTRL
                                GO TO FIN-SCR-ACT
                        ELSE
                        IF FIO-STAT = FIO-STAT-NEX
                            IF FRM-MENS NOT > SPACES
                                MOVE 'REGNEX    ' TO MSG-COD-MENS
                                MOVE 'GNS' TO MSG-COD-SIST
                                PERFORM GET-MSG
                                MOVE MSG-GLS-DESC TO FRM-MENS
                                PERFORM SCR-MSSG
                                MOVE SCR-STAT-ABT TO SCR-STAT
                                PERFORM DESSCRTRL
                                GO TO FIN-SCR-ACT
                            ELSE
                                PERFORM SCR-MSSG
                                MOVE SCR-STAT-ABT TO SCR-STAT
                                PERFORM DESSCRTRL
                                GO TO FIN-SCR-ACT
                        ELSE
                            MOVE SCR-ACTU-ING TO SCR-ACTU
      *JSS                  PERFORM CLR-FLD-EVC
                            MOVE PGM-LIMPIAR-TODO TO PGM-ICLR
                            PERFORM SCR-TRL
                ELSE
                        MOVE SPACES TO FRM-MENS
                        PERFORM SCR-MSSG
                        PERFORM DESSCRTRL
                        GO TO FIN-SCR-ACT
           ELSE
           IF SCR-INST = SCR-INST-GAB
                PERFORM GET-CON
           ELSE
           IF SCR-INST = SCR-INST-BRW
               MOVE SCR-FFLD TO FRM-FFLD
               PERFORM BRW-SCR-ACT.
           PERFORM DESSCRTRL.
      *<<<< PFS_SCR_ACT
           IF FRM-FFLD = FRM-FFLD-PF8 OR FRM-FFLD-PF7
               PERFORM RST-STAT
               PERFORM FND-SCR-KEY THRU FIN-SCR-KEY
               IF SCR-STAT NOT = SCR-STAT-ABT
                   PERFORM SCR-TRL
               ELSE
                   MOVE SPACES TO SCR-RQA1
                   PERFORM DESSCRTRL
                   GO TO FIN-SCR-ACT.
           MOVE SPACES TO SCR-RQA1.
      *>>>>
           MOVE SPACES TO FRM-MENS.
           PERFORM SCR-MSSG.
       FIN-SCR-ACT.
           EXIT.

       BRW-SCR-ACT SECTION.
       INI-BRW-SCR-ACT.
       FIN-BRW-SCR-ACT.
           EXIT.

       SCR-PGM SECTION.
       INI-SCR-PGM.
           IF SCR-INST = SCR-INST-HKY
               PERFORM HBL-KEY
               MOVE SCR-INST-GKY TO SCR-INST
               PERFORM SCR-DMSG
           ELSE
           IF SCR-INST = SCR-INST-GKY
                PERFORM SCR-RST
                PERFORM GET-KEY
                IF FRM-STAT-ABT
                    MOVE SPACES TO FRM-MENS
                    PERFORM SCR-MSSG
                    PERFORM DESSCRTRL
                    GO TO FIN-SCR-PGM
                ELSE
                    MOVE SPACES TO FRM-MENS
                    PERFORM FND-KEY
                    IF FIO-STAT = FIO-STAT-NEX
                        IF FRM-MENS NOT > SPACES
                            MOVE 'REGNEX    ' TO MSG-COD-MENS
                            MOVE 'GNS' TO MSG-COD-SIST
                            PERFORM GET-MSG
                            MOVE MSG-GLS-DESC TO FRM-MENS
                            PERFORM SCR-MSSG
                            MOVE SCR-STAT-ABT TO SCR-STAT
                            PERFORM DESSCRTRL
                            GO TO FIN-SCR-PGM
                        ELSE
                            PERFORM SCR-MSSG
                            MOVE SCR-STAT-ABT TO SCR-STAT
                            PERFORM DESSCRTRL
                            GO TO FIN-SCR-PGM
                    ELSE
                        MOVE PGM-LIMPIAR-TODO TO PGM-ICLR
                        PERFORM SCR-TRL
           ELSE
           IF SCR-INST = SCR-INST-GAB
                PERFORM GET-CON
           ELSE
           IF SCR-INST = SCR-INST-BRW
               MOVE SCR-FFLD TO FRM-FFLD
               PERFORM BRW-SCR-PGM.
       TRL-SCR-PGM.
           PERFORM DESSCRTRL.
           MOVE SPACES TO FRM-MENS.
           PERFORM SCR-MSSG.
       FIN-SCR-PGM.
           EXIT.

       BRW-SCR-PGM SECTION.
       INI-BRW-SCR-PGM.
       FIN-BRW-SCR-PGM.
           EXIT.

       SCR-DMSG SECTION.
       INI-SCR-DMSG.
           IF PGM-ICLR = PGM-NO-LIMPIAR-NADA
               NEXT SENTENCE
           ELSE
           IF PGM-ICLR = PGM-LIMPIAR-TODO
               PERFORM SCR-CLRA-EVC
               PERFORM EDT-KEY-EVC
               PERFORM EDT-FLD-EVC
           ELSE
           IF PGM-ICLR = PGM-LIMPIAR-LLAVES
               PERFORM CLR-KEY-EVC
               PERFORM EDT-KEY-EVC
           ELSE
               PERFORM CLR-FLD-EVC
               PERFORM EDT-FLD-EVC.
           PERFORM SCR-PUTA.
           PERFORM SCR-EXIT.
       FIN-SCR-DMSG.
           EXIT.

       SCR-KEY SECTION.
       INI-SCR-KEY.
           PERFORM SCR-RST.
           PERFORM GET-KEY.
           IF FRM-STAT-ABT
                   MOVE SPACES TO FRM-MENS
                   PERFORM SCR-MSSG
                   GO TO FIN-SCR-KEY.
       FND-SCR-KEY.
           MOVE SPACES TO FRM-MENS.
           PERFORM FND-KEY.
           IF FIO-STAT-OKS
               PERFORM PUT-SCR
               MOVE PGM-LIMPIAR-TODO TO PGM-ICLR
               GO TO FIN-SCR-KEY.
      *JSS ELSE
      *        PERFORM CLR-FLD-EVC.
       ERR-SCR-KEY.
      *PTC-INI
           MOVE 'S' TO SCR-IERR.
      *PTC-FIN
           MOVE PGM-LIMPIAR-CAMPOS TO PGM-ICLR.
           IF FRM-MENS NOT > SPACES
               IF FIO-STAT-EOF
                   MOVE 'REGEOF    ' TO MSG-COD-MENS
                   MOVE 'GNS' TO MSG-COD-SIST
                   PERFORM GET-MSG
                   MOVE MSG-GLS-DESC TO FRM-MENS
               ELSE
               IF FIO-STAT = FIO-STAT-NEX
                   MOVE 'REGNEX    ' TO MSG-COD-MENS
                   MOVE 'GNS' TO MSG-COD-SIST
                   PERFORM GET-MSG
                   MOVE MSG-GLS-DESC TO FRM-MENS
               ELSE
                   MOVE 'FIOSTAT' TO MSG-COD-TMSG
                   MOVE FIO-STAT  TO MSG-COD-CMSG
                   MOVE 'GNS'     TO MSG-COD-SIST
                   PERFORM GET-MSG
                   MOVE MSG-GLS-DESC TO FRM-MENS.
           PERFORM SCR-MSSG.
           MOVE SCR-STAT-ABT TO SCR-STAT.
       FIN-SCR-KEY.
           EXIT.

       SCR-RST SECTION.
       INI-SCR-RST.
           MOVE SPACES       TO PGM-ICLR.
           MOVE SPACES       TO SCR-ACTU.
           MOVE SCR-STPP     TO SCR-STAT.
           MOVE SCR-MFLD-NOT TO SCR-MFLD.
           MOVE LOW-VALUES   TO EVC-FLD.
           MOVE LOW-VALUES TO EVC-EDT.
       FIN-SCR-RST.
           EXIT.

       GET-KEY SECTION.
       INI-GET-KEY.
           PERFORM SCR-GKEY.
           IF FRM-STAT-ABT
               MOVE SCR-STAT-ABT TO SCR-STAT.
       FIN-GET-KEY.
           EXIT.

       GET-IKY SECTION.
       INI-GET-IKY.
           PERFORM SCR-GIKY.
           IF FRM-STAT-ABT
               MOVE SCR-STAT-ABT TO SCR-STAT.
       FIN-GET-IKY.
           EXIT.

       FND-KEY SECTION.
       INI-FND-KEY.
           PERFORM KEY-ALL-EVC.
      *<<<< FND_KEY
      * ISP INI  28-JAN-2004 13:37:42                                   
           IF SCR-OFRM-SRV AND                                          
              SCR-CMND = 'CON'                                          
                PERFORM BUSCA-DBIM-DBIP.                                
      * ISP FIN  28-JAN-2004 13:37:42                                   
      * ISP INI  28-JAN-2004 13:37:42                                   
           IF SCR-OFRM-SRV AND                                          
              ( EVC-CAI-IOPC IN EVC-FLD > SPACES OR                     
                EVC-IIC-IOPC IN EVC-FLD > ZEROES ) AND                  
              SCR-CMND = 'CON'                                          
                 MOVE EVC-CAI-IOPC IN EVC-FLD TO                        
                      OPC-CAI-IOPC IN OPC                               
                 MOVE EVC-IIC-IOPC IN EVC-FLD TO                        
                      OPC-IIC-IOPC IN OPC                               
                 MOVE FIO-GET-KEY TO FIO-CMND                           
                 PERFORM COL-FIO-OPC                                    
                 IF NOT FIO-STAT-OKS                                    
                 IF WSS-BUS-BDP = 'N'                                   
                  MOVE 'S' TO WSS-BUS-BDP                               
                  IF WSS-DBIM > ZEROES AND                              
                     WSS-DBIP > ZEROES                                  
                       PERFORM INV-BD.                                  
      * ISP FIN  28-JAN-2004 13:37:42                                   
           PERFORM KEY-ALL-EVC.                                         
      *<<<< FND_KEY                                                     
           IF SCR-CCPP = 'ING'
               PERFORM BUS-COR-EVC
               GO TO CON-FND-KEY.
           IF FRM-FFLD = FRM-FFLD-PF7 OR FRM-FFLD-PF8
               PERFORM LEE-NXT-PRV
               IF FIO-STAT-OKS
                   PERFORM SCR-CLRA-EVC
                   GO TO CON-FND-KEY
               ELSE
      *ALD/16-JUL-1988
                   PERFORM CLR-FLD-EVC
      *            MOVE SPACES TO PGM-STAT
      * 
                   IF FRM-FFLD = FRM-FFLD-PF7
                       MOVE 'COL' TO MSG-COD-SIST
                       MOVE 'EVC    NOPRV' TO MSG-COD-MENS
                       PERFORM GET-MSG
                       MOVE MSG-GLS-DESC TO FRM-MENS
                       MOVE '00' TO FIO-STAT
                       MOVE SCR-STAT-CON TO SCR-STAT
                       GO TO FIN-FND-KEY
                   ELSE
                       MOVE 'COL' TO MSG-COD-SIST
                       MOVE 'EVC    NONXT' TO MSG-COD-MENS
                       PERFORM GET-MSG
                       MOVE MSG-GLS-DESC TO FRM-MENS
                       MOVE '00' TO FIO-STAT
                       MOVE SCR-STAT-CON TO SCR-STAT
                       GO TO FIN-FND-KEY.
           IF EVC-NUM-IEVC IN EVC NOT > ZEROES
               PERFORM BUS-COR-EVC.
       CON-FND-KEY.
      *>>>>
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM COL-FIO-EVC.
           MOVE FIO-STAT TO PGM-STAT-EVC.
      *<<<< FIN_FND_KEY
           IF SCR-CCPP = 'ACT' AND NO-ASIGNE-CORRELATIVO AND
              NOT FIO-STAT-OKS
               MOVE FIO-STAT-NEX TO FIO-STAT
               GO TO FIN-FND-KEY.
           IF NOT FIO-STAT-OKS
               MOVE '23' TO PGM-STAT-EVC
           ELSE
               MOVE '00' TO PGM-STAT-EVC.
           MOVE EVC-CAI-IOPC IN EVC TO OPC-CAI-IOPC IN OPC.
           MOVE EVC-IIC-IOPC IN EVC TO OPC-IIC-IOPC IN OPC.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM COL-FIO-OPC.
           IF NOT FIO-STAT-OKS
               MOVE 'COL' TO MSG-COD-SIST
               MOVE 'EVC    NOOPC' TO MSG-COD-MENS
               PERFORM GET-MSG

               MOVE MSG-GLS-DESC TO CPT-STR1
               MOVE MSG-GLS-DATA TO CPT-STR2
               PERFORM CPT-BLKS
               MOVE CPT-STRN     TO FRM-MENS

               MOVE '00' TO FIO-STAT
               MOVE SCR-STAT-CON TO SCR-STAT
               GO TO FIN-FND-KEY.
           MOVE '00' TO PGM-STAT-OPC.
           PERFORM PUT-OPC-EVC.

      *ALD/16-JUL-1988

           PERFORM KEY-PVC-EVC.


           IF PVC-CIC-IPVC IN PVC NOT > SPACES
      *PVG INI 06-AGO-2003                                              
              OR                                                        
             (SCR-OFRM-SRV AND PVC-CIC-IPVC IN PVC = 'EVCTCVE     ')    
      *PVG FIN 06-AGO-2003                                              
               MOVE OPC-COD-VCOC IN OPC TO POC-COD-VCOC IN POC
               MOVE OPC-COD-TOOC IN OPC TO POC-COD-TOOC IN POC
               MOVE OPC-COD-AOOC IN OPC TO POC-COD-AOOC IN POC
               MOVE ZEROES              TO POC-NUM-IPOC IN POC
               MOVE FIO-GET-KEY TO FIO-CMND
               PERFORM COL-FIO-POC
               IF NOT FIO-STAT-OKS


                   MOVE FIO-STAT TO PGM-STAT-PVC
               ELSE
                   MOVE POC-COD-IPVC IN POC TO PVC-CIC-IPVC IN PVC

                   MOVE FIO-GET-KEY TO FIO-CMND
                   PERFORM COL-FIO-PVC
                   MOVE FIO-STAT TO PGM-STAT-PVC
                   IF FIO-STAT-OKS
                       MOVE PVC-CIC-IPVC IN PVC TO PVC-CIC-IPVC 
                                                   IN EVC-FLD
                       IF PVC-MSC-STAT IN PVC = 'N'
                           MOVE 'COL' TO MSG-COD-SIST
                           MOVE 'PVC    NVG' TO MSG-COD-MENS
                           PERFORM GET-MSG
                           MOVE MSG-GLS-DESC TO FRM-MENS
                           MOVE '00' TO FIO-STAT
                           MOVE SCR-STAT-CON TO SCR-STAT
                           GO TO FIN-FND-KEY.
      *

           IF OPC-IND-VSTR IN OPC NOT = 'S'
               MOVE 'COL' TO MSG-COD-SIST
               MOVE 'EVC    NOVAL' TO MSG-COD-MENS
               PERFORM GET-MSG

               MOVE MSG-GLS-DESC TO CPT-STR1
               MOVE MSG-GLS-DATA TO CPT-STR2
               PERFORM CPT-BLKS
               MOVE CPT-STRN     TO FRM-MENS

               MOVE '00' TO FIO-STAT
               MOVE SCR-STAT-CON TO SCR-STAT
               GO TO FIN-FND-KEY.


           IF NOT PGM-STAT-EVC-OKS
               MOVE OPC-MSC-TVOC IN OPC TO OPC-MSC-TVOC IN EVC-FLD
               MOVE OPC-COD-TOOC IN OPC TO OPC-COD-TOOC IN EVC-FLD
               MOVE OPC-COD-OFOC IN OPC TO OPC-COD-OFOC IN EVC-FLD.
      *        MOVE '23' TO FIO-STAT
      *        GO TO FIN-FND-KEY.
           MOVE '00' TO PGM-STAT-OPC.
           MOVE PGM-STAT-EVC TO FIO-STAT.
      *ALD
      *    IF NOT ( OPC-MSC-STAT IN OPC = 'L' OR 'A' )

      *    IF  OPC-MSC-STAT IN OPC NOT = 'A' AND
      *        OPC-MSC-STAT IN OPC NOT = 'D'

      * RBG INI 16-APR-1996 
           IF OPC-APROBADA-APR
      * RBG INI 12-JUN-1996 
              IF SCR-CMND = 'MCA'
                    MOVE 'OPC    ACANO' TO MSG-COD-MENS
                    GO TO SIG-FND-KEY
              ELSE                 
      * RBG FIN 12-JUN-1996
                 MOVE 'OPC    APRYA' TO MSG-COD-MENS
                 GO TO SIG-FND-KEY.   
      * RBG FIN 16-APR-1996 

           IF ( NOT OPC-ACTIVADA ) AND ( NOT OPC-DESACTIVADA )
                IF SCR-CMND = 'MCA'
                    MOVE 'OPC    ACANO' TO MSG-COD-MENS
                    GO TO SIG-FND-KEY
                ELSE                
                   GO TO FIN-FND-KEY.
      *     IF OPC-MSC-STAT IN OPC = 'L'
      *         MOVE 'OPC    LIQYA' TO MSG-COD-MENS.

      *    IF OPC-MSC-STAT IN OPC = 'A'
           IF OPC-ACTIVADA
               IF SCR-CMND = 'MCA'
                   MOVE '00' TO FIO-STAT
                   GO TO FIN-FND-KEY
               ELSE
                   MOVE 'OPC    ACAYA' TO MSG-COD-MENS.
      *    IF OPC-MSC-STAT IN OPC = 'D'
           IF OPC-DESACTIVADA
               MOVE 'OPC    DESYA' TO MSG-COD-MENS.
       SIG-FND-KEY.
           MOVE 'COL' TO MSG-COD-SIST.
           PERFORM GET-MSG.

           MOVE MSG-GLS-DESC TO CPT-STR1
           MOVE MSG-GLS-DATA TO CPT-STR2
           PERFORM CPT-BLKS
           MOVE CPT-STRN     TO FRM-MENS

           MOVE '00' TO FIO-STAT.
           MOVE SCR-STAT-CON TO SCR-STAT.
           GO TO FIN-FND-KEY.
      *>>>>
       FIN-FND-KEY.
           IF FIO-STAT = FIO-STAT-NEX
               MOVE 'S' TO SCR-IERR.
       EXT-FND-KEY.
           EXIT.
 
       PUT-SCR SECTION.
       INI-PUT-SCR.
           PERFORM PUT-ALL-EVC.
      *<<<< FIN_PUT_SCR 
      *PTC-INI  (RRM)  25-NOV-2002 

           IF SCR-CMND = 'CON' AND
              SCR-OFRM-SRV
      *ISP INI 07-01-2005                                               
                 AND                                                    
                 WSS-IND-CORP = 'N'                                     
      *ISP FIN 07-01-2005                                               


                 MOVE TSK-TERM-ALF TO QUE-TERM
                 MOVE PTC-EVC-TYPE TO QUE-TYPE
                 MOVE QUE-DEL TO QUE-CMND
                 PERFORM GNS-PRO-QUE

                 MOVE EVC-CAI-IOPC IN EVC-FLD TO EVC-CAI-IOPC IN EVC
                 MOVE EVC-IIC-IOPC IN EVC-FLD TO EVC-IIC-IOPC IN EVC
                 MOVE ZEROES                  TO EVC-NUM-IEVC IN EVC
                 MOVE ZEROES TO QUE-NITM
                 MOVE FIO-GET-NLS TO FIO-CMND.

       CIC-PTC-EVC.
           IF SCR-CMND = 'CON' AND
              SCR-OFRM-SRV
      *ISP INI 07-01-2005                                               
                 AND                                                    
                 WSS-IND-CORP = 'N'                                     
      *ISP FIN 07-01-2005                                               
                 PERFORM COL-FIO-EVC
                 IF FIO-STAT-OKS AND
                    EVC-CAI-IOPC IN EVC = EVC-CAI-IOPC IN EVC-FLD AND
                    EVC-IIC-IOPC IN EVC = EVC-IIC-IOPC IN EVC-FLD

                     MOVE         EVC-NUM-IEVC IN EVC TO
                          PTC-EVC-EVC-NUM-IEVC-EDT

                     PERFORM GET-PTC-PVC

                     MOVE         EVC-NUM-IDLC IN EVC TO
                          PTC-EVC-EVC-NUM-IDLC-EDT

                     MOVE         EVC-NUM-VIGU IN EVC TO
                          PTC-EVC-EVC-NUM-VIGU-EDT

                     MOVE         EVC-NUM-DPVC IN EVC TO
                          PTC-EVC-EVC-NUM-DPVC
                     MOVE         EVC-NUM-MPVC IN EVC TO
                          PTC-EVC-EVC-NUM-MPVC
                     MOVE         EVC-NUM-SPVC IN EVC TO
                          PTC-EVC-EVC-NUM-SPVC
                     MOVE         EVC-NUM-APVC IN EVC TO
                          PTC-EVC-EVC-NUM-APVC

                     MOVE         EVC-NUM-DPVE IN EVC TO
                          PTC-EVC-EVC-NUM-DPVE-EDT

                     MOVE         EVC-MSC-TCVE IN EVC TO
                          PTC-EVC-EVC-MSC-TCVE

                     MOVE         EVC-NUM-DESD IN EVC TO
                          PTC-EVC-EVC-NUM-DESD-EDT

                     MOVE         EVC-VAL-VENC IN EVC TO
                          PTC-EVC-EVC-VAL-VENC-EDT

                     MOVE         EVC-NUM-SEVE IN EVC TO
                          PTC-EVC-EVC-NUM-SEVE-EDT

                     MOVE         EVC-IND-UTSV IN EVC TO
                          PTC-EVC-EVC-IND-UTSV

                     MOVE         EVC-SGV-FVAR IN EVC TO
                          PTC-EVC-EVC-SGV-FVAR-EDT

                     MOVE         EVC-IND-CAUT IN EVC TO
                          PTC-EVC-EVC-IND-CAUT

                     MOVE         EVC-IND-FVAR IN EVC TO
                          PTC-EVC-EVC-IND-FVAR

                     ADD 1 TO QUE-NITM
                     MOVE TSK-TERM-ALF TO QUE-TERM
                     MOVE PTC-EVC-TYPE TO QUE-TYPE
                     MOVE PTC-EVC-ITEM TO QUE-ITEM
                     MOVE PTC-EVC-LENG TO QUE-LITM
                     MOVE QUE-PUT  TO QUE-CMND
                     PERFORM GNS-PRO-QUE

                     MOVE FIO-GET-NXT TO FIO-CMND
                     GO TO CIC-PTC-EVC.

      *PTC-FIN: (RRM)  25-NOV-2002 
      *>>>>
       FIN-PUT-SCR.
           EXIT.

       STP-EXIT SECTION.
       INI-STP-EXIT.
           MOVE SCR-PROG TO PGM-PROG.
           MOVE SCR-NTRN TO PGM-NTRN.

           MOVE SCR-PROV TO SCR-PROG.
           MOVE SCR-NTRV TO SCR-NTRN.

           MOVE PGM-PROG TO SCR-PROV
           MOVE PGM-NTRN TO SCR-NTRV.
       FIN-STP-EXIT.
           EXIT.

       SCR-EXIT SECTION.
       INI-SCR-EXIT.
           MOVE 'P'      TO SCR-ICMN.
           MOVE SCR-NTRN TO SYS-NTRN.
           MOVE SCR-VARI TO SYS-CMMA.
           MOVE SCR-TCMA TO SYS-TCMA.
           MOVE SYS-RTRN TO SYS-CMND.
      *PTC-INI
           IF NOT SCR-OFRM-SRV
      *PTC-FIN
           PERFORM GNS-PRO-SYS.
       FIN-SCR-EXIT.
           EXIT.

       SCR-PUTA SECTION.
       INI-SCR-PUTA.
      *PTC-INI
           IF FRM-SUAR EQUAL FRM-SUAR-MAL OR FRM-SUAR-CLR
               MOVE 'S' TO SCR-IERR.
      *PTC-FIN
           MOVE SCR-NMAP TO FRM-NAME.
           MOVE SCR-NLIB TO FRM-NLIB.
           MOVE EVC-FLD TO FRM-DFLD.
           MOVE FRM-PUT-ALL TO FRM-CMND.
           PERFORM GNS-PRO-FRM.
       FIN-SCR-PUTA.
           EXIT.

       SCR-MSSG SECTION.
       INI-SCR-MSSG.
           IF FRM-MEN1 NOT > SPACES
               MOVE SPACES TO FRM-MEN1.
           IF FRM-MEN2 NOT > SPACES
               MOVE SPACES TO FRM-MEN2.
           MOVE FRM-MENS TO EVC-GLS-MENS.
       FIN-SCR-MSSG.
           EXIT.

       SCR-GKEY SECTION.
       INI-SCR-GKEY.
           MOVE SCR-NMAP TO FRM-NAME.
           MOVE SCR-NLIB TO FRM-NLIB.
           MOVE FRM-GET-ALL TO FRM-CMND.
           PERFORM GNS-PRO-FRM.
           MOVE SPACES TO FRM-MENS.
           IF NOT ( FRM-FFLD = FRM-FFLD-RET  OR FRM-FFLD-PF10 OR
                               FRM-FFLD-PF12 OR FRM-FFLD-PF3 )
      *<<<< PFS_GET_CON OR PFS_GET_ACC OR PFS_SCR_GKEY
           IF NOT ( FRM-FFLD = FRM-FFLD-PF8 OR FRM-FFLD = FRM-FFLD-PF7 )
      *>>>>
               MOVE 'PFSINV    ' TO MSG-COD-MENS
               MOVE 'GNS' TO MSG-COD-SIST
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS
               PERFORM FST-KEY-EVC
               PERFORM SCR-MSSG
               PERFORM SCR-PUTA
               PERFORM SCR-EXIT.
           MOVE FRM-DFLD TO EVC-FLD.
           IF FRM-STAT-ABT
               GO TO FIN-SCR-GKEY.
           MOVE FRM-SUAR-OKS TO FRM-SUAR.
           PERFORM VAL-NUM-KEY-EVC.
           IF FRM-SUAR EQUAL FRM-SUAR-MAL OR FRM-SUAR-CLR
      *PTC-INI
               MOVE 'S' TO SCR-IERR
      *PTC-FIN
               PERFORM SCR-MSSG
               PERFORM EDT-KEY-EVC
               PERFORM SCR-PUTA
               PERFORM SCR-EXIT.
      *JSS
           PERFORM CLR-FLD-EVC.
           PERFORM VAL-IKY-EVC.
           IF FRM-SUAR EQUAL FRM-SUAR-MAL OR FRM-SUAR-CLR
               GO TO ERR-SCR-GKEY.
           PERFORM VAL-MKY-EVC.
           IF FRM-SUAR EQUAL FRM-SUAR-MAL OR FRM-SUAR-CLR
               GO TO ERR-SCR-GKEY.
           PERFORM VAL-AKY-EVC.
           IF FRM-SUAR EQUAL FRM-SUAR-MAL OR FRM-SUAR-CLR
               GO TO ERR-SCR-GKEY.
           PERFORM VAL-CON-KEY-EVC.
           IF NOT ( FRM-SUAR EQUAL FRM-SUAR-MAL OR FRM-SUAR-CLR )
               GO TO FIN-SCR-GKEY.
           IF FRM-UCUR NOT > SPACES
               PERFORM FST-KEY-EVC.
       ERR-SCR-GKEY.
      *PTC-INI
           MOVE 'S' TO SCR-IERR.
      *PTC-FIN
           PERFORM SCR-MSSG.
           PERFORM EDT-KEY-EVC.
           PERFORM SCR-PUTA.
           PERFORM SCR-EXIT.
       FIN-SCR-GKEY.
           PERFORM SCR-MSSG.

       SCR-GIKY SECTION.
       INI-SCR-GIKY.
           MOVE SCR-NMAP TO FRM-NAME.
           MOVE SCR-NLIB TO FRM-NLIB.
           MOVE FRM-GET-ALL TO FRM-CMND.
           PERFORM GNS-PRO-FRM.
           MOVE SPACES TO FRM-MENS.
           IF NOT ( FRM-FFLD = FRM-FFLD-RET  OR FRM-FFLD-PF10 OR
                               FRM-FFLD-PF12 OR FRM-FFLD-PF3 )
               MOVE 'PFSINV    ' TO MSG-COD-MENS
               MOVE 'GNS' TO MSG-COD-SIST
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS
               PERFORM FST-KEY-EVC
               PERFORM SCR-MSSG
               PERFORM SCR-PUTA
               PERFORM SCR-EXIT.
           MOVE FRM-DFLD TO EVC-FLD.
           IF FRM-STAT-ABT
               GO TO FIN-SCR-GIKY.
           MOVE FRM-SUAR-OKS TO FRM-SUAR.
           PERFORM VAL-NUM-KEY-EVC.
           IF FRM-SUAR EQUAL FRM-SUAR-MAL OR FRM-SUAR-CLR
      *PTC-INI
               MOVE 'S' TO SCR-IERR
      *PTC-FIN
               PERFORM SCR-MSSG
               PERFORM EDT-IKY-EVC
               PERFORM SCR-PUTA
               PERFORM SCR-EXIT.
      *JSS
           PERFORM CLR-FLD-EVC.
      *<<<< SCR_GIKY_VAL_IKY  
      *PTC-INI (RRM) 22-NOV-2002
           IF SCR-OFRM-SRV AND
              SCR-CCPP = 'ING'

              MOVE PTC-OPC-TYPE TO QUE-TYPE
              MOVE TSK-TERM-ALF TO QUE-TERM
              MOVE PTC-OPC-LENG TO QUE-LITM
              MOVE 1            TO  QUE-NITM
              MOVE QUE-GET      TO QUE-CMND
              PERFORM GNS-PRO-QUE
              IF QUE-STAT = QUE-STAT-OKS
                  MOVE QUE-ITEM TO PTC-OPC-ITEM
                  MOVE PTC-OPC-OPC-CAI-IOPC TO EVC-CAI-IOPC IN EVC-FLD
                  MOVE PTC-OPC-OPC-IIC-IOPC TO EVC-IIC-IOPC IN EVC-FLD.
      *PTC-FIN (RRM) 22-NOV-2002
      *>>>>
           PERFORM VAL-IKY-EVC.
           IF FRM-SUAR EQUAL FRM-SUAR-MAL OR FRM-SUAR-CLR
               GO TO ERR-SCR-GIKY.
           PERFORM VAL-CON-IKY-EVC.
           IF NOT ( FRM-SUAR EQUAL FRM-SUAR-MAL OR FRM-SUAR-CLR )
               GO TO FIN-SCR-GIKY.
           IF FRM-UCUR NOT > SPACES
               PERFORM FST-KEY-EVC.
       ERR-SCR-GIKY.
      *PTC-INI
           MOVE 'S' TO SCR-IERR.
      *PTC-FIN
           PERFORM SCR-MSSG.
           PERFORM EDT-IKY-EVC.
           PERFORM SCR-PUTA.
           PERFORM SCR-EXIT.
       FIN-SCR-GIKY.
      *<<<< FIN_SCR_GIKY OR FIN_SCR_GCNF OR FIN_SCR_GFLD
           IF FRM-FFLD = FRM-FFLD-PF3 AND
              SCR-IND-ENG IN SCR-VEC-ENG(SCR-IPRO) = 'S'
               PERFORM EGR-EOV.
      *>>>>
           PERFORM SCR-MSSG.

       GET-CON SECTION.
       INI-GET-CON.
           MOVE SCR-NMAP TO FRM-NAME.
           MOVE SCR-NLIB TO FRM-NLIB.
           MOVE FRM-GET-ALL TO FRM-CMND.
           PERFORM GNS-PRO-FRM.
           IF NOT ( FRM-FFLD = FRM-FFLD-RET  OR FRM-FFLD-PF10 OR
                               FRM-FFLD-PF12 OR FRM-FFLD-PF3 )
      *<<<< PFS_GET_CON OR PFS_GET_ACC OR PFS_SCR_GKEY
           IF NOT ( FRM-FFLD = FRM-FFLD-PF8 OR FRM-FFLD = FRM-FFLD-PF7 )
      *>>>>
               MOVE 'PFSINV    ' TO MSG-COD-MENS
               MOVE 'GNS' TO MSG-COD-SIST
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO EVC-GLS-MEN2
               MOVE SCR-PRMT     TO EVC-GLS-MEN1
               PERFORM FST-MSG
               PERFORM SCR-PUTA
               PERFORM SCR-EXIT.
           MOVE FRM-DFLD TO EVC-FLD.
       FIN-GET-CON.
           MOVE SCR-STAT-CON TO SCR-STAT.

       CLR-MSG SECTION.
       INI-CLR-MSG.
           MOVE SPACES TO EVC-GLS-MENS.
       FIN-CLR-MSG.
           EXIT.

       HBL-IKY SECTION.
       INI-HBL-IKY.
      *PTC-INI
           IF NOT SCR-OFRM-SRV
      *PTC-FIN
           IF SCR-DESDE-CMN
               MOVE EVC-GLS-MENS TO FRM-MENS
               MOVE LOW-VALUES TO EVC-FLD
      * FLB  7-NOV-1994
               PERFORM CLR-KEY-EVC

               IF FRM-MENS < SPACES
                   MOVE LOW-VALUES TO EVC-GLS-MENS
               ELSE
                   MOVE FRM-MENS TO EVC-GLS-MENS.
           PERFORM PRO-MKY-EVC.
           PERFORM PRO-AKY-EVC.
           PERFORM UNP-IKY-EVC.
           PERFORM FST-KEY-EVC.
      *<<<< FIN_HBL_IKY
           MOVE '1' TO FRM-CPIM-AEY.                                    
           IF SCR-IND-ENG IN SCR-VEC-ENG(SCR-IPRO) = 'S'
               PERFORM HBL-KEY-EVC.
      *>>>>
       FIN-HBL-IKY.
           EXIT.

       HBL-KEY SECTION.
       INI-HBL-KEY.
      *PTC-INI
           IF NOT SCR-OFRM-SRV
      *PTC-FIN
           IF SCR-DESDE-CMN
               MOVE EVC-GLS-MENS TO FRM-MENS
               MOVE LOW-VALUES TO EVC-FLD
               IF FRM-MENS < SPACES
                   MOVE LOW-VALUES TO EVC-GLS-MENS
               ELSE
                   MOVE FRM-MENS TO EVC-GLS-MENS.
           PERFORM UNP-KEY-EVC.
           PERFORM FST-KEY-EVC.
      *<<<< FIN_HBL_KEY
           MOVE '1' TO FRM-CPIM-AEY.
      *>>>>
       FIN-HBL-KEY.
           EXIT.

       HBL-FLD SECTION.
       INI-HBL-FLD.
           PERFORM PRO-IKY-EVC.
           PERFORM PRO-AKY-EVC.
           PERFORM UNP-MKY-EVC.
           PERFORM UNP-FLD-EVC.
           PERFORM FST-FLD-EVC.
      *<<<< FIN_HBL_FLD
           IF SCR-CMND = 'MCA'
               PERFORM PRO-FLD-EVC
               MOVE FRM-CPIM-UBY TO EVC-IND-CAUT-ATR IN EVC-FLD
               MOVE  0           TO FRM-NUM-DURV-LEN IN EVC-FLD
               MOVE -1 TO EVC-IND-CAUT-LEN IN EVC-FLD.
      *>>>>
      *<<<< FIN_HBL_FLD
      *ALD/ELIMINAR
           MOVE FRM-CPIM-AEY TO EVC-NUM-DESD-ATR IN EVC-FLD.
           MOVE FRM-CPIM-AEY TO EVC-SGV-FVAR-ATR IN EVC-FLD.
           MOVE FRM-CPIM-AEY TO EVC-IND-FVAR-ATR IN EVC-FLD.
      *    MOVE FRM-CPIM-AEY TO EVC-IND-CAUT-ATR IN EVC-FLD.
      *
      *ALD/16-JUL-1988
           IF SCR-CCPP NOT = 'ING'
               GO TO FIN-HBL-FLD.

           IF PVC-CIC-IPVC IN EVC-FLD NOT > SPACES
               GO TO FIN-HBL-FLD.

           IF NOT PGM-STAT-PVC-OKS
               MOVE PVC-CIC-IPVC IN EVC-FLD TO PVC-CIC-IPVC IN PVC
               MOVE FIO-GET-KEY TO FIO-CMND
               PERFORM COL-FIO-PVC
               IF NOT FIO-STAT-OKS
                   GO TO FIN-HBL-FLD
               ELSE
                   MOVE EVC-CAI-IOPC IN EVC-FLD TO OPC-CAI-IOPC IN OPC
                   MOVE EVC-IIC-IOPC IN EVC-FLD TO OPC-IIC-IOPC IN OPC
                   MOVE FIO-GET-KEY TO FIO-CMND
                   PERFORM COL-FIO-OPC
                   IF NOT FIO-STAT-OKS
                       GO TO FIN-HBL-FLD.

           IF PVC-NUM-DVMI IN PVC = PVC-NUM-DVMA IN PVC AND
              PVC-IND-DVMI IN PVC = PVC-IND-DVMA IN PVC AND
              PVC-NUM-DVMI IN PVC > ZEROES
               MOVE PVC-NUM-DVMI IN PVC TO FRM-NUM-DURV IN EVC-FLD
               MOVE PVC-IND-DVMI IN PVC TO FRM-IND-UTDV IN EVC-FLD
               MOVE FRM-CPIM-AEY TO FRM-NUM-DURV-ATR IN EVC-FLD
               MOVE FRM-CPIM-AEY TO FRM-IND-UTDV-ATR IN EVC-FLD
               MOVE 0            TO EVC-NUM-VIGU-LEN IN EVC-FLD
               MOVE -1           TO EVC-NUM-IDLC-LEN IN EVC-FLD.

           IF PVC-NUM-VIMI IN PVC = PVC-NUM-VIMA IN PVC AND
              PVC-NUM-VIMI IN PVC > ZEROES
               MOVE PVC-NUM-VIMI IN PVC TO EVC-NUM-VIGU IN EVC-FLD
               MOVE FRM-CPIM-AEY TO EVC-NUM-VIGU-ATR IN EVC-FLD.

           IF PVC-NUM-SPMI IN PVC = PVC-NUM-SPMA IN PVC AND
              PVC-IND-SPMI IN PVC = PVC-IND-SPMA IN PVC AND
              PVC-NUM-SPMI IN PVC > ZEROES
               MOVE PVC-NUM-SPMI IN PVC TO FRM-NUM-SPVE IN EVC-FLD
               MOVE PVC-IND-SPMI IN PVC TO FRM-IND-UTPV IN EVC-FLD
               MOVE FRM-CPIM-AEY TO FRM-NUM-SPVE-ATR IN EVC-FLD
               MOVE FRM-CPIM-AEY TO FRM-IND-UTPV-ATR IN EVC-FLD.

           IF PVC-NUM-DESD IN PVC > ZEROES
               MOVE PVC-NUM-DESD IN PVC TO EVC-NUM-DESD IN EVC-FLD
               MOVE FRM-CPIM-AEY TO EVC-NUM-DESD-ATR IN EVC-FLD.

           IF PVC-NUM-SVMI IN PVC = PVC-NUM-SVMA IN PVC AND
              PVC-IND-SVMI IN PVC = PVC-IND-SVMA IN PVC AND
              PVC-NUM-SVMI IN PVC > ZEROES
               MOVE PVC-NUM-SVMI IN PVC TO EVC-NUM-SEVE IN EVC-FLD
               MOVE PVC-IND-SVMI IN PVC TO EVC-IND-UTSV IN EVC-FLD
               MOVE FRM-CPIM-AEY TO EVC-NUM-SEVE-ATR IN EVC-FLD
               MOVE FRM-CPIM-AEY TO EVC-IND-UTSV-ATR IN EVC-FLD.

           IF PVC-MSC-TCVE IN PVC > SPACES
               MOVE PVC-MSC-TCVE IN PVC TO EVC-MSC-TCVE IN EVC-FLD
               MOVE 'COL' TO TAB-COD-SIST
               MOVE 'CVC' TO TAB-COD-TTAB IN TAB
               MOVE EVC-MSC-TCVE IN EVC-FLD TO TAB-COD-CTAB IN TAB
               PERFORM BUS-TAB
               MOVE TAB-GLS-DESC IN TAB TO FRM-GLS-TCVE IN EVC-FLD
               MOVE FRM-CPIM-AEY TO EVC-MSC-TCVE-ATR IN EVC-FLD.

           IF PVC-VAL-VVMI IN PVC = PVC-VAL-VVMA IN PVC AND
              PVC-VAL-VVMI IN PVC > ZEROES AND
              PVC-COD-VCOC IN PVC = OPC-COD-VCOC IN OPC
               MOVE PVC-VAL-VVMI IN PVC TO EVC-VAL-VENC IN EVC-FLD
               MOVE FRM-CPIM-AEY TO EVC-VAL-VENC-ATR IN EVC-FLD.

           IF PVC-SGV-FMMI IN PVC     = PVC-SGV-FMMA IN PVC AND
              PVC-SGV-FMMI IN PVC NOT = ZEROES AND
              PVC-COD-VCOC IN PVC     = OPC-COD-VCOC IN OPC
               MOVE 'M' TO EVC-IND-FVAR IN EVC-FLD.

           IF PVC-SGV-FPMI IN PVC     = PVC-SGV-FPMA IN PVC AND
              PVC-SGV-FPMI IN PVC NOT = ZEROES AND
              PVC-SGV-FMMI IN PVC     = ZEROES AND
              PVC-SGV-FMMA IN PVC     = ZEROES
               MOVE 'P' TO EVC-IND-FVAR IN EVC-FLD.

           MOVE 'COL' TO MSC-COD-SIST.
           MOVE 'FVAR' TO MSC-COD-TMSC IN MSC.
           MOVE EVC-IND-FVAR IN EVC-FLD TO MSC-COD-CMSC IN MSC.
           PERFORM BUS-MSC.

           IF MSC-CIC-CMSC IN MSC = 'M' AND
              PVC-SGV-FMMI IN PVC = PVC-SGV-FMMA IN PVC AND
              PVC-SGV-FMMI IN PVC NOT = ZEROES AND
              PVC-COD-VCOC IN PVC = OPC-COD-VCOC IN OPC
               MOVE PVC-SGV-FMMI IN PVC TO EVC-SGV-FVAR IN EVC-FLD
               MOVE FRM-CPIM-AEY TO EVC-IND-FVAR-ATR IN EVC-FLD
               MOVE FRM-CPIM-AEY TO EVC-SGV-FVAR-ATR IN EVC-FLD.

           IF MSC-CIC-CMSC IN MSC = 'P' AND
              PVC-SGV-FPMI IN PVC = PVC-SGV-FPMA IN PVC AND
              PVC-SGV-FPMI IN PVC NOT = ZEROES
               MOVE PVC-SGV-FPMI IN PVC TO EVC-SGV-FVAR IN EVC-FLD
               MOVE FRM-CPIM-AEY TO EVC-IND-FVAR-ATR IN EVC-FLD
               MOVE FRM-CPIM-AEY TO EVC-SGV-FVAR-ATR IN EVC-FLD.
      *
      *>>>>
       FIN-HBL-FLD.
           EXIT.

       FST-MSG SECTION.
       INI-FST-MSG.
           MOVE -1 TO EVC-GLS-MENS-LEN.
       FIN-FST-MSG.
           EXIT.

       PRO-ALL SECTION.
       INI-PRO-ALL.
           PERFORM PRO-KEY-EVC.
           PERFORM FST-MSG.
       FIN-PRO-ALL.
           EXIT.

       SCR-TRL SECTION.
       INI-SCR-TRL.
      *PTC-INI
           IF SCR-STAT NOT = SCR-STPP
               MOVE 'S' TO SCR-IERR.
      *PTC-FIN
           IF FRM-MEN1 NOT > SPACES
               MOVE SCR-PRMT TO FRM-MEN1.
           IF SCR-STAT = SCR-STAT-MOD
               PERFORM HBL-FLD
               PERFORM SCR-MSSG
               PERFORM EDT-KEY-EVC
               PERFORM EDT-FLD-EVC
               PERFORM SCR-PUTA
               PERFORM STP-EXIT
               MOVE SCR-INST-GFL TO SCR-INST
               PERFORM SCR-EXIT.
           IF SCR-STAT = SCR-STAT-SON
               PERFORM PRO-ALL
               PERFORM SCR-MSSG
               PERFORM EDT-KEY-EVC
               PERFORM EDT-FLD-EVC
               PERFORM SCR-PUTA
               PERFORM STP-EXIT
               MOVE SCR-INST-GCS TO SCR-INST
               PERFORM SCR-EXIT.
      *ASUME SCR-STAT-CON.
           MOVE SCR-STAT-CON TO SCR-STAT.
      *    MOVE FRM-CPSF-AEY TO FRM-CPIM-AEY.
           PERFORM PRO-ALL.
           PERFORM SCR-MSSG.
           PERFORM EDT-KEY-EVC.
           PERFORM EDT-FLD-EVC.
           PERFORM SCR-PUTA.
           MOVE SCR-INST-GAB TO SCR-INST.
           PERFORM SCR-EXIT.
       FIN-SCR-TRL.
           EXIT.

       DESSCRTRL SECTION.
       INI-DESSCRTRL.
           MOVE SCR-VFLD-NOT TO SCR-VFLD.
           MOVE FRM-FFLD TO SCR-FFLD.
       FIN-DESSCRTRL.
           IF SCR-FFLD-PF10 OR SCR-FFLD-PF3
                 MOVE SCR-INST-HCM TO SCR-INST
           ELSE
                 MOVE SCR-INST-HKY TO SCR-INST.
       EXT-DESSCRTRL.
           EXIT.

      * PGM-EBR-ALL SECTION.
      * INI-PGM-EBR-ALL.
      *     MOVE 'GNS' TO FIO-SIST.
      *     MOVE FIO-EBR-ALL TO FIO-CMND.
      *     PERFORM GNS-FIO-TAB.
      * FIN-PGM-EBR-ALL.
      *     EXIT.

       COPY COLBQEVC.
       COPY GNSBVNUM.
       COPY COLBFEVC.
       COPY GNSBFMSG.
       COPY GNSBGSYS.
       COPY GNSBGDTC.
      *PTC-INI
      *PTC-SUB
      * ISP  10-MAY-2001 13:46:35 
      * COPY GNSBGFRM.
       COPY GNSBG3CF.
      *PTC-FIN
       COPY GNSBGMSG.
       COPY GNSBEKEY.
       COPY GNSBIABT.
       COPY GNSBBTAB.
       COPY GNSBVCOD.
       COPY GNSBVTAB.
       COPY GNSBFTAB.
       COPY GNSBBMSC.
       COPY GNSBVIND.
       COPY GNSBVMSC.
       COPY GNSBFMSC.
       COPY GNSBEGLS.
       COPY GNSBGFEC.
       COPY GNSBGHOY.
       COPY TABBBOFI.
       COPY TABBFOFI.
      *PTC-INI
       COPY GNSBGQUE.
       COPY GNSBGTSK.
      *PTC-FIN

      *<<<< EOF

       HBL-KEY-EVC SECTION.
       INI-HBL-KEY-EVC.
           MOVE SCR-INST-GKY TO SCR-INST.
      *ISP   25-JUL-1990 DEBE SER REEMPLAZADO POR VARIABLE
      *     INHIBE MOVE FRM-CPSF TO FRM-CPIM-AEY
           MOVE '1' TO FRM-CPIM-AEY.
           MOVE FRM-CPIM-AEY TO EVC-CAI-IOPC-ATR IN EVC-FLD.
           MOVE FRM-CPIM-AEY TO EVC-IIC-IOPC-ATR IN EVC-FLD.
           MOVE FRM-CPIM-AEY TO EVC-NUM-IEVC-ATR IN EVC-FLD.
           MOVE +4 TO EVC-CAI-IOPC-LEN IN EVC-FLD.
           MOVE -1 TO PVC-CIC-IPVC-LEN IN EVC-FLD.
           PERFORM SCR-CLRA-EVC.
           MOVE SCR-CAI-IOPC IN SCR-VARI TO EVC-CAI-IOPC IN EVC-FLD.
           MOVE SCR-IIC-IOPC IN SCR-VARI TO EVC-IIC-IOPC IN EVC-FLD.

      * ISP SCR-DMSG LIMPIA TODO Y HACE STP-EXIT
           MOVE PGM-LIMPIAR-CAMPOS TO PGM-ICLR.

      *ISP SE REQUIEREN PARA BUS-COR-EVC
           MOVE SCR-CAI-IOPC IN SCR-VARI TO EVC-CAI-IOPC IN EVC.
           MOVE SCR-IIC-IOPC IN SCR-VARI TO EVC-IIC-IOPC IN EVC.
           PERFORM BUS-COR-EVC.

           MOVE SCR-CAI-IOPC IN SCR-VARI TO OPC-CAI-IOPC IN OPC.
           MOVE SCR-IIC-IOPC IN SCR-VARI TO OPC-IIC-IOPC IN OPC.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM COL-FIO-OPC.
           MOVE FIO-STAT TO PGM-STAT-OPC.
           IF NOT FIO-STAT-OKS
               MOVE 'COL' TO MSG-COD-SIST
               MOVE 'OPC    NEX' TO MSG-COD-MENS
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS
               MOVE SCR-STAT-CON TO SCR-STAT
               PERFORM CLR-OPC-EVC
           ELSE
               PERFORM PUT-OPC-EVC.

           PERFORM EDT-KEY-EVC.
           PERFORM EDT-FLD-EVC.

           IF SCR-IND-FST IN SCR-VEC-FST(SCR-IPRO) = 'S'
               MOVE SPACES TO SCR-IND-FST IN SCR-VEC-FST(SCR-IPRO)
               PERFORM SCR-INIT
               PERFORM SCR-EXIT
           ELSE
               PERFORM SCR-PUTA.

      *     IF SCR-IND-FST IN SCR-VEC-FST(SCR-IPRO) = 'S'
      *         MOVE SPACES TO SCR-IND-FST IN SCR-VEC-FST(SCR-IPRO)
      *         PERFORM SCR-INIT
      *     ELSE
      *         PERFORM SCR-PUTA.
      *     PERFORM SCR-EXIT.
       FIN-HBL-KEY-EVC.
           EXIT.
      *>>>>
      *<<<< EOF
       BCK-OUT SECTION.
       INI-BCK-OUT.
           MOVE FIO-BCK-OUT TO FIO-CMND.
           PERFORM COL-FIO-EVC.
           IF FIO-STAT-OKS
      *        Para informar que el backout se realizo con exito
               MOVE '49' TO FIO-STAT.
       FIN-BCK-OUT.
           EXIT.

       BUS-COR-EVC SECTION.
       INI-BUS-COR-EVC.
           MOVE 99 TO EVC-NUM-IEVC IN EVC.
           MOVE FIO-GET-LEQ TO FIO-CMND.
           PERFORM COL-FIO-EVC.
           IF NOT ( FIO-STAT-OKS AND
                    EVC-CAI-IOPC IN EVC-FLD = EVC-CAI-IOPC IN EVC AND
                    EVC-IIC-IOPC IN EVC-FLD = EVC-IIC-IOPC IN EVC )
               PERFORM KEY-ALL-EVC
               MOVE ZEROES TO EVC-NUM-IEVC IN EVC.

      *LOP-INI CREDITOS SIN MORA                                        
           IF SCR-CMND = 'CON' AND SCR-OFRM-SRV AND                     
              EVC-NUM-IEVC IN EVC > 1           AND                     
              EVC-MSC-TCVE IN EVC = 'VA'                                
      *ISP INI 07-01-2005                                               
              AND WSS-IND-CORP ='S'                                     
      *ISP FIN 07-01-2005                                               
              MOVE FIO-GET-PRV TO FIO-CMND                              
              PERFORM COL-FIO-EVC                                       
              IF NOT ( FIO-STAT-OKS AND                                 
                    EVC-CAI-IOPC IN EVC-FLD = EVC-CAI-IOPC IN EVC AND   
                    EVC-IIC-IOPC IN EVC-FLD = EVC-IIC-IOPC IN EVC )     
               PERFORM KEY-ALL-EVC                                      
               MOVE ZEROES TO EVC-NUM-IEVC IN EVC.                      
      *LOP-FIN CREDITOS SIN MORA                                        


           IF SCR-CCPP = 'ING' OR 'ACT'
               ADD 1 TO EVC-NUM-IEVC IN EVC
               MOVE EVC-NUM-IEVC IN EVC TO EVC-NUM-IEVC IN EVC-FLD.
           MOVE 1 TO WSS-ICOR.
       FIN-BUS-COR-EVC.
           EXIT.

       RST-STAT SECTION.
       INI-RST-STAT.
           MOVE SCR-STPP     TO SCR-STAT.
           MOVE SCR-MFLD-NOT TO SCR-MFLD.
       FIN-RST-STAT.
           EXIT.

       GET-TSTP SECTION.
       INI-GET-TSTP.
           MOVE SYS-GET-DATE TO SYS-CMND.
           PERFORM GNS-PRO-SYS.
      *    MOVE SYS-TSTP TO EVC-STP-IINV IN EVC.
       FIN-GET-TSTP.
           EXIT.

       LEE-NXT-PRV SECTION.
       INI-LEE-NXT-PRV.
           IF SCR-RQA1 > SPACES
               PERFORM LEE-NXT-PRV-EVC
           ELSE
               PERFORM LEE-NXT-PRV-CIC.
       FIN-LEE-NXT-PRV.
           EXIT.

       LEE-NXT-PRV-EVC SECTION.
       INI-LEE-NXT-PRV-EVC.
           MOVE SCR-RQA1 TO ADR-EVC-REQA.
           MOVE FIO-KDEF-S TO FIO-KDEF.
           IF FRM-FFLD = FRM-FFLD-PF7
               MOVE FIO-GET-PRV TO FIO-CMND
           ELSE
               MOVE FIO-GET-NXT TO FIO-CMND.
           PERFORM COL-FIO-EVC.
           IF FIO-STAT-OKS
               MOVE '00' TO PGM-STAT-EVC
               MOVE ADR-EVC-REQA TO SCR-RQA1.
       FIN-LEE-NXT-PRV-EVC.
           EXIT.

       LEE-NXT-PRV-CIC SECTION.
       INI-LEE-NXT-PRV-CIC.
           IF EVC-CIC-IOPC IN EVC > SPACES AND
              EVC-NUM-IEVC IN EVC > ZEROES
               MOVE FIO-GET-KEY    TO FIO-CMND
               PERFORM COL-FIO-EVC
               IF FIO-STAT-OKS
                   IF FRM-FFLD = FRM-FFLD-PF7
                       MOVE FIO-GET-PRV TO FIO-CMND
                   ELSE
                       MOVE FIO-GET-NXT TO FIO-CMND
               ELSE
                   IF FRM-FFLD = FRM-FFLD-PF7
                       MOVE FIO-GET-LEQ TO FIO-CMND
                   ELSE
                       MOVE FIO-GET-NLS TO FIO-CMND
           ELSE
               IF FRM-FFLD = FRM-FFLD-PF7
                   MOVE FIO-GET-LEQ TO FIO-CMND
               ELSE
                   MOVE FIO-GET-NLS TO FIO-CMND.
           PERFORM COL-FIO-EVC.
           IF FIO-STAT-OKS
               MOVE '00' TO PGM-STAT-EVC
               MOVE ADR-EVC-REQA TO SCR-RQA1.
       FIN-LEE-NXT-PRV-CIC.
           EXIT.

       COPY COLBFOPC.
       COPY COLBFDLC.
       COPY COLBFCYA.
       COPY COLBGEOV.
       COPY TABBVOFI.
       COPY GNSBPFEC.
       COPY GNSBGPES.
       COPY GNSBGCPT.
       COPY SGCBFDBC.
       COPY COLBFTOC.
      *ALD/18-JUL-1988 
       COPY COLBFPOC.
       COPY COLBFPVC.
       COPY TABBFCAM.
      *
      *>>>>
      *  CODIGO ADICIONAL PARA ENGANCHE PROGRAMAS
       ING-FPEN-CIC SECTION.
       INI-ING-FPEN-CIC.
           PERFORM ING-SETE.
           MOVE SCR-MENS-EXT TO EVC-GLS-MENS.
           PERFORM HBL-IKY.
      *PTC ini
           IF SCR-OFRM-SRV
               EXEC CICS
                  RETURN
               END-EXEC.
      *PTC fin
       FIN-ING-FPEN-CIC.
           EXIT.

       ING-FTER-CIC SECTION.
       INI-ING-FTER-CIC.
           PERFORM ING-SETE.
           MOVE SCR-MENS-EXT TO EVC-GLS-MENS.
           PERFORM HBL-IKY.
       FIN-ING-FTER-CIC.
           EXIT.

       ING-FTER-CMN SECTION.
       INI-ING-FTER-CMN.
           PERFORM ING-SETE.
           PERFORM PRO-ALL.
           PERFORM SCR-CLRA-EVC.
           MOVE SCR-MENS-EXT TO EVC-GLS-MENS.
           PERFORM SCR-INIT.
       FIN-ING-FTER-CMN.
           EXIT.

       ING-SETE SECTION.
       INI-ING-SETE.
           PERFORM CRG-TBL-ENG.
           MOVE WSS-NTRN(SCR-IPRO) TO SCR-NTRN.
           MOVE WSS-PROG(SCR-IPRO) TO SCR-PROG.
           MOVE WSS-NMAP(SCR-IPRO) TO SCR-NMAP.
           MOVE WSS-NLIB(SCR-IPRO) TO SCR-NLIB.

           MOVE WSS-NTRV(SCR-IPRO) TO SCR-NTRV.
           MOVE WSS-PROV(SCR-IPRO) TO SCR-PROV.
       FIN-ING-SETE.
           EXIT.

       EGR-FPEN-CIC SECTION.
       INI-EGR-FPEN-CIC.
           PERFORM CRG-TBL-ENG.
           ADD 1 TO SCR-IPRO.
           IF SCR-IPRO > WSS-TOT-IIDX
                  PERFORM EGR-FTER-CIC
                  GO TO FIN-EGR-FPEN-CIC.
           IF SCR-IND-ENG IN SCR-VEC-ENG(SCR-IPRO) = SPACES
               GO TO INI-EGR-FPEN-CIC.
           MOVE WSS-INST-FPEN-CIC TO SCR-INST-EXT.
           MOVE WSS-PROG(SCR-IPRO) TO SYS-PROG.
           MOVE SCR-VARI TO SYS-CMMA.
           MOVE SCR-TCMA TO SYS-TCMA.
           MOVE SYS-XCTL TO SYS-CMND.
      *PTC ini
           IF SCR-OFRM-SRV
                MOVE WSS-IDX-IEOV TO SCR-IPRO
           ELSE
                PERFORM GNS-PRO-SYS.
      *PTC fin
       FIN-EGR-FPEN-CIC.
           EXIT.

       EGR-FTER-CIC SECTION.
       INI-EGR-FTER-CIC.
           PERFORM CRG-TBL-ENG.
           MOVE WSS-IDX-IOPC TO SCR-IPRO.
           MOVE WSS-INST-FTER-CIC TO SCR-INST-EXT.
           MOVE WSS-PROG(SCR-IPRO) TO SYS-PROG.
           MOVE SCR-VARI TO SYS-CMMA.
           MOVE SCR-TCMA TO SYS-TCMA.
           MOVE SYS-XCTL TO SYS-CMND.
      *PTC ini
           IF SCR-OFRM-SRV
                MOVE WSS-IDX-IEOV TO SCR-IPRO
           ELSE
                PERFORM GNS-PRO-SYS.
      *PTC fin
       FIN-EGR-FTER-CIC.
           EXIT.

       EGR-FTER-CMN SECTION.
       INI-EGR-FTER-CMN.
           PERFORM CRG-TBL-ENG.
           MOVE WSS-IDX-IOPC TO SCR-IPRO.
           MOVE WSS-INST-FTER-CMN TO SCR-INST-EXT.
           MOVE WSS-PROG(SCR-IPRO) TO SYS-PROG.
           MOVE SCR-VARI TO SYS-CMMA.
           MOVE SCR-TCMA TO SYS-TCMA.
           MOVE SYS-XCTL TO SYS-CMND.
      *PTC ini
           IF SCR-OFRM-SRV
                MOVE WSS-IDX-IEOV TO SCR-IPRO
           ELSE
                PERFORM GNS-PRO-SYS.
      *PTC fin
       FIN-EGR-FTER-CMN.
           EXIT.

       SCR-INIT SECTION.
       INI-SCR-INIT.
           MOVE 3  TO FRM-PLIN.
           MOVE 19 TO FRM-NLIN.
           MOVE FRM-CLR-FRM TO FRM-CMND.
           PERFORM GNS-PRO-FRM.
           MOVE FRM-SINI-DBNF TO FRM-SINI.
           MOVE SCR-NMAP TO FRM-NAME.
           MOVE SCR-NLIB TO FRM-NLIB.
           MOVE EVC-FLD TO FRM-DFLD.
           MOVE FRM-INI TO FRM-CMND.
           PERFORM GNS-PRO-FRM.
       FIN-SCR-INIT.
           EXIT.
       PGM-EBR-ALL SECTION.                                             
       INI-PGM-EBR-ALL.                                                 
           MOVE FIO-EBR-ALL TO FIO-CMND.                                
           PERFORM COL-FIO-OPC.                                         
       FIN-PGM-EBR-ALL.                                                 
           EXIT.                                                        
       COPY COLBGMPT.
      *>>>>
      *<<<< EOF_PQ
       PRO-FLD-EVC SECTION.
       INI-PRO-FLD-EVC.
           MOVE FRM-CPIM-AEY TO FRM-NUM-DURV-ATR IN EVC-FLD.
           MOVE FRM-CPIM-AEY TO FRM-IND-UTDV-ATR IN EVC-FLD.
           MOVE FRM-CPIM-AEY TO FRM-NUM-SPVE-ATR IN EVC-FLD.
           MOVE FRM-CPIM-AEY TO FRM-IND-UTPV-ATR IN EVC-FLD.
           PERFORM PRO-OPC-EVC.
           PERFORM PRO-EVC-EVC.
           PERFORM PRO-PVC-EVC.
       FIN-PRO-FLD-EVC.
           EXIT.
       
       PRO-OPC-EVC SECTION.
       INI-PRO-OPC-EVC.
       FIN-PRO-OPC-EVC.
           EXIT.
       
       PRO-EVC-EVC SECTION.
       INI-PRO-EVC-EVC.
           MOVE FRM-CPIM-AEY TO EVC-NUM-IDLC-ATR IN EVC-FLD.
           MOVE FRM-CPIM-AEY TO EVC-NUM-VIGU-ATR IN EVC-FLD.
           MOVE FRM-CPIM-AEY TO EVC-FEC-FPVC-ATR IN EVC-FLD.
           MOVE FRM-CPIM-AEY TO EVC-NUM-DPVE-ATR IN EVC-FLD.
           MOVE FRM-CPIM-AEY TO EVC-MSC-TCVE-ATR IN EVC-FLD.
           MOVE FRM-CPIM-AEY TO EVC-NUM-DESD-ATR IN EVC-FLD.
           MOVE FRM-CPIM-AEY TO EVC-VAL-VENC-ATR IN EVC-FLD.
           MOVE FRM-CPIM-AEY TO EVC-NUM-SEVE-ATR IN EVC-FLD.
           MOVE FRM-CPIM-AEY TO EVC-IND-UTSV-ATR IN EVC-FLD.
           MOVE FRM-CPIM-AEY TO EVC-SGV-FVAR-ATR IN EVC-FLD.
           MOVE FRM-CPIM-AEY TO EVC-IND-CAUT-ATR IN EVC-FLD.
           MOVE FRM-CPIM-AEY TO EVC-IND-FVAR-ATR IN EVC-FLD.
       FIN-PRO-EVC-EVC.
           EXIT.

       PRO-PVC-EVC SECTION.
       INI-PRO-PVC-EVC.
       FIN-PRO-PVC-EVC.
           EXIT.

      *PTC-INI  (RRM) 26-NOV-2002                                       
       GET-PTC-PVC SECTION.
       INI-GET-PTC-PVC.
      *    MOVE POC-COD-IPVC IN POC TO PVC-CIC-IPVC IN PVC.
      *    MOVE FIO-GET-KEY TO FIO-CMND.
      *    PERFORM COL-FIO-PVC.
      *    IF FIO-STAT-OKS

      *XXXX     MOVE PVC-NUM-DVMI IN PVC TO PTC-EVC-FRM-NUM-DURV.
      *XXXX     MOVE POC-COD-IPVC IN POC TO PTC-EVC-PVC-CIC-IPVC.

      *XXXX     MOVE PVC-IND-DVMI IN PVC TO PTC-EVC-FRM-IND-UTDV.

           MOVE EVC-NUM-DPVC IN EVC TO EVC-NUM-DPVC IN EVC-FLD
           MOVE EVC-NUM-MPVC IN EVC TO EVC-NUM-MPVC IN EVC-FLD
           MOVE EVC-NUM-SPVC IN EVC TO EVC-NUM-SPVC IN EVC-FLD
           MOVE EVC-NUM-APVC IN EVC TO EVC-NUM-APVC IN EVC-FLD
           PERFORM GET-PER-FEC
           MOVE FRM-NUM-SPVE IN EVC-FLD TO PTC-EVC-FRM-NUM-SPVE
           MOVE FRM-IND-UTPV IN EVC-FLD TO PTC-EVC-FRM-IND-UTPV.
      *    MOVE PVC-NUM-SPMI IN PVC TO PTC-EVC-FRM-NUM-SPVE-EDT.

      *    MOVE PVC-IND-SPMI IN PVC TO PTC-EVC-FRM-IND-UTPV.
       FIN-GET-PTC-PVC.
           EXIT.
      *PTC-FIN  (RRM) 26-NOV-2002                                       
      *>>>>                                                             
                                                                        
       VRF-LEE-FRM SECTION.                                             
       INI-VRF-LEE-FRM.                                                 
           MOVE TSK-TERM-ALF TO QUE-TERM.                               
           MOVE PTC-EVC-TYPE-LFRM TO QUE-TYPE.                          
           MOVE PTC-EVC-LENG-LFRM TO QUE-LITM.                          
           MOVE 1 TO QUE-NITM.                                          
           MOVE QUE-GET TO QUE-CMND.                                    
           PERFORM GNS-PRO-QUE.                                         
           IF QUE-STAT = QUE-STAT-OKS                                   
               MOVE 'S' TO WSS-LEE-FRM-EVC.                             
       FIN-VRF-LEE-FRM.                                                 
           EXIT.                                                        
      * ISP INI  28-JAN-2004 13:37:42                                   
       BUSCA-DBIM-DBIP SECTION.                                         
       INI-BUSCA-DBIM-DBIP.                                             
           MOVE 'COL'  TO IDD-SAUX.                                     
           MOVE 'M'    TO IDD-GAUX.                                     
           MOVE SPACES TO IDD-RAUX.                                     
           MOVE 1 TO IDD-IAUX.                                          
           SET IDD-ITBL TO 1.                                           
           SEARCH IDD-VSIS VARYING IDD-IAUX                             
             AT END                                                     
               GO TO DBM-BUSCA-DBIM-DBIP                                
             WHEN IDD-DENT( IDD-ITBL ) = IDD-DAUX                       
               MOVE IDD-IENT( IDD-ITBL) TO WSS-DBNM                     
               MOVE IDD-IAUX            TO WSS-DBIM                     
               GO TO CON-BUSCA-DBIM-DBIP.                               
       DBM-BUSCA-DBIM-DBIP.                                             
           MOVE 0 TO WSS-DBNM.                                          
           MOVE 0 TO WSS-DBIM.                                          
       CON-BUSCA-DBIM-DBIP.                                             
           MOVE 'COL'  TO IDD-SAUX.                                     
           MOVE 'P'    TO IDD-GAUX.                                     
           MOVE SPACES TO IDD-RAUX.                                     
           MOVE 1 TO IDD-IAUX.                                          
           SET IDD-ITBL TO 1.                                           
           SEARCH IDD-VSIS VARYING IDD-IAUX                             
             AT END                                                     
               GO TO DBP-BUSCA-DBIM-DBIP                                
             WHEN IDD-DENT( IDD-ITBL ) = IDD-DAUX                       
               MOVE IDD-IENT( IDD-ITBL) TO WSS-DBNP                     
               MOVE IDD-IAUX            TO WSS-DBIP                     
               GO TO FIN-BUSCA-DBIM-DBIP.                               
       DBP-BUSCA-DBIM-DBIP.                                             
           MOVE 0 TO WSS-DBNP.                                          
           MOVE 0 TO WSS-DBIP.                                          
       FIN-BUSCA-DBIM-DBIP.                                             
           EXIT.                                                        
                                                                        
       INV-BD SECTION.                                                  
       INI-INV-BD.                                                      
                                                                        
           MOVE WSS-DBNM TO IDD-IENT( WSS-DBIP ).                       
           MOVE WSS-DBNP TO IDD-IENT( WSS-DBIM ).                       
                                                                        
       FIN-INV-BD.                                                      
           EXIT.                                                        
                                                                        
      * ISP FIN  28-JAN-2004 13:37:42                                   
      *>>>>
