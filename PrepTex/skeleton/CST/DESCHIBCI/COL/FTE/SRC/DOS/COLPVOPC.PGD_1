       IDENTIFICATION DIVISION.
      *========================
       PROGRAM-ID.   COLPVOPC.
       AUTHOR.       CONSIST.
       DATE-WRITTEN. 28-APR-89 20:15 PM.

      * ACTUALIZA ARCHIVO COLOPC EN FORMA INTERACTIVA.

       ENVIRONMENT DIVISION.
      *=====================
       CONFIGURATION SECTION.
      *----------------------
       SPECIAL-NAMES.
               DECIMAL-POINT IS COMMA.

       DATA DIVISION.
      *==============

       WORKING-STORAGE SECTION.
      *------------------------
       COPY COLBROPC.


       COPY GNSWGRQA.
       COPY GNSWGUIB.
       COPY GNSWGELS.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-OPC-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-MSG-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-MSC-REQA==.
       COPY GNSBRMSG.
       COPY GNSBRMSC.
       COPY GNSWCFIO.
       COPY GNSWVFIO.
       COPY GNSWGFRM.
       COPY GNSWGSCR.
      *<<<< FIN_SCR_VARI
       COPY GNSWGRQA REPLACING ==01  ADR-REQA== BY ==02  SCR-RQA1==.
       COPY GNSWGRQA REPLACING ==01  ADR-REQA== BY ==02  SCR-RQA2==.
           02 SCR-KEY-IRDC                         PIC X(04).
           02 SCR-IND-MRDC                         PIC X(01).
           02 SCR-IND-MITR                         PIC X(01).
           02 SCR-IND-MCOM                         PIC X(01).
           02 SCR-IND-MCYA                         PIC X(01).
      *>>>>
       COPY COLWIOPC.
       COPY GNSWVNUM.
       COPY GNSWCNUM.
       COPY GNSWGSYS.

      *<<<< WSS
       01  WSS-VARI.
           03  WSS-NTRN              VALUE SPACES PIC X(04).
      * ISP/23-JAN-1990
      * VARIABLES PARA DETECTAR N CANCELACIONES ASOCIADAS A UNA UNICA OPC
           03  WSS-SGV-RENO     COMP-3 VALUE ZEROES PIC S9(11)V9(04).
           03  RCAN-CAN-KEY-ICAN                  PIC X(15).
           03  WSS-TOT-RCAN   VALUE ZEROES        PIC 9(04).
      *ALD/22-AUG-1988
           03  WSS-I                              PIC 9(02).
           03  WSS-NUM-DIGT                       PIC 9(02).
           03  WSS-COD-DIGT                       PIC X(02).
           03  WSS-MEN2.
               05  FILLER            VALUE SPACES PIC X(01).
               05  WSS-NUM-VAL1-EDT                   PIC ----.
               05  FILLER            VALUE SPACES PIC X(01).
               05  WSS-IND-DMA1                      PIC X(01).
               05  FILLER            VALUE SPACES PIC X(01).
               05  WSS-GLS-GUI2                      PIC X(01).
               05  FILLER            VALUE SPACES PIC X(01).
               05  WSS-NUM-VAL2-EDT                   PIC ----.
               05  FILLER            VALUE SPACES PIC X(01).
               05  WSS-IND-DMA2                      PIC X(01).
           03  PGM-STAT-POC          VALUE '23'   PIC X(02).              
               88  PGM-STAT-POC-OKS  VALUE '00'.                             
               88  PGM-STAT-POC-NUL  VALUE '  '.                             
           03  WSS-NUM-ACTI                       PIC 9(01).
           03  WSS-NUM-COTO                       PIC 9(01).
           03  WSS-COD-CAUX.
               05  WSS-COD-TOOC                   PIC X(03).
               05  WSS-COD-AOOC                   PIC X(03).
           03  WSS-NUM-TVEN                       PIC 9(03).
           03  WSS-VAL-TEVC             COMP-3    PIC 9(11)V9(05).
           03  WSS-CVI-TCAP             COMP-3    PIC 9(11)V9(05).
           03  WSS-VAL-TCAP             COMP-3    PIC 9(11)V9(05).
           03  WSS-VAL-TVEN             COMP-3    PIC 9(11)V9(05).
           03  WSS-VAL-NDLC             COMP-3    PIC 9(11)V9(05).
           03  WSS-NUM-PDIR             COMP-3    PIC 9(11)V9(05).
           03  WSS-NUM-PIND             COMP-3    PIC 9(11)V9(05).
           03  WSS-MSG-STR.
               05  WSS-NUM-FALF                   PIC  --.---.--9,99999.
               05  WSS-MSG-GLS-DESC               PIC X(40).
               05  WSS-NUM-FEDT                   PIC  --.---.--9,99999.
               05  WSS-MSG-GLS-DATA               PIC X(60).
           03  WSS-VAL-CRED   COMP-3 VALUE ZEROES PIC 9(11)V9(04).
           03  WSS-IND-TMON          VALUE SPACES PIC X(01).
           03  WSS-IND-TMMN          VALUE 'N'    PIC X(01).
           03  WSS-IND-TMMX          VALUE 'E'    PIC X(01).
      *
           03  WSS-GLS-DAT1          VALUE SPACES PIC X(01).
           03  BUS-POR-KEYS          VALUE SPACES PIC X(01).
           03  BUS-POR-CLTE          VALUE 'C'    PIC X(01).
           03  WSS-CIC-ICLI                       PIC X(12).
           03  WSS-MRDC              VALUE 0      PIC 9(01).
               88  WSS-MISMO-RDC     VALUE 0.
               88  WSS-OTRO-RDC      VALUE 1.
           03  WSS-MISMO             VALUE 0      PIC 9(01).
           03  WSS-OTRO              VALUE 1      PIC 9(01).
           03  WSS-CIC-IMPU                       PIC X(04).
           03  WSS-VAL-IMPU   COMP-3 VALUE 0      PIC 9(11)V9(04).
           03  WSS-AUX-IMPU   COMP-3 VALUE 0      PIC 9(11)V9(04).
           03  WSS-VAL-GNOT   COMP-3 VALUE 0      PIC 9(11)V9(04).

           03  WSS-SGV-LIQU          VALUE +0     PIC S9(13)V9(05).
      *                              SIGN LEADING SEPARATE.
           03  WSS-SGV-LIQU-ALF                   PIC X(24).
           03  WSS-SGV-LIQU-EDT REDEFINES WSS-SGV-LIQU-ALF
                                     PIC --.---.---.---.---,-----.

           03  WSS-NUM-TABN          VALUE 0      PIC 9(03).
           03  WSS-NUM-TABZ          VALUE 0      PIC 9(03).
           03  WSS-INTR                           PIC X(01).
           03  WSS-KEY-ICYA.
               05  WSS-CIC-IOPC                   PIC X(12).
               05  WSS-NUM-ICAN                   PIC X(03).
               05  WSS-NUM-ICYA                   PIC 9(01).
      *PARA VALIDAR QUE LOS CARGOS/ABONOS SEAN TODOS O NINGUNO EN CC
           03  WSS-OPC-CACC                       PIC X(08).
           03  WSS-OPC-LNBT                       PIC X(01).
      *    03  WSS-KEY-IEVC                       PIC X(15).
           03  WSS-FEC-FPVC VALUE ZEROES.
               05  WSS-NUM-SPVC                   PIC 9(02).
               05  WSS-NUM-APVC                   PIC 9(02).
               05  WSS-NUM-MPVC                   PIC 9(02).
               05  WSS-NUM-DPVC                   PIC 9(02).
           03  WSS-FEC-FIMV VALUE ZEROES.
               05  WSS-NUM-SIMV                   PIC 9(02).
               05  WSS-NUM-AIMV                   PIC 9(02).
               05  WSS-NUM-MIMV                   PIC 9(02).
               05  WSS-NUM-DIMV                   PIC 9(02).
           03  WSS-MSC-TCVE                       PIC X(02).
           03  WSS-PESO                 VALUE ' ' PIC X(01).
               88 WSS-PESO-SI           VALUE 'S'.
               88 WSS-PESO-NO           VALUE 'N'.
      *
           03  WSS-NUM-VCVG                       PIC 9(03).
      *    03  WSS-AEVC                           PIC X(105).
           03  WSS-AXSV                           PIC 9(04).
           03  WSS-AXUS                           PIC X(01).
           03  WSS-EEVC       OCCURS 50.
               05  WSS-REVC                       PIC X(105).
               05  WSS-SPVE                       PIC 9(04).
               05  WSS-UTPV                       PIC X(01).
               05  WSS-SEVE                       PIC 9(04).
               05  WSS-UTSV                       PIC X(01).
               05  WSS-VIGU                       PIC 9(03).
               05  WSS-FPVC.
                   07  WSS-SPVC                   PIC 9(02).
                   07  WSS-APVC                   PIC 9(02).
                   07  WSS-MPVC                   PIC 9(02).
                   07  WSS-DPVC                   PIC 9(02).
               05  WSS-FFPV.
                   07  WSS-SFPV                   PIC 9(02).
                   07  WSS-AFPV                   PIC 9(02).
                   07  WSS-MFPV                   PIC 9(02).
                   07  WSS-DFPV                   PIC 9(02).
               05  WSS-DVEN                       PIC 9(02).
           03  WSS-LEFO                 VALUE  50 PIC 9(02).
           03  WSS-MEFO                           PIC 9(02).
           03  WSS-FAVC.
               05  WSS-SAVC                       PIC 9(02).
               05  WSS-AAVC                       PIC 9(02).
               05  WSS-MAVC                       PIC 9(02).
               05  WSS-DAVC                       PIC 9(02).
           03  WSS-FMVC.
               05  WSS-SMVC                       PIC 9(02).
               05  WSS-AMVC                       PIC 9(02).
               05  WSS-MMVC                       PIC 9(02).
               05  WSS-DMVC                       PIC 9(02).
           03  WSS-IMVC                           PIC 9(02).
      *
           03  WSS-USEP                           PIC X(01).
           03  WSS-VSEP                      COMP PIC 9(04).
           03  WSS-FVNC.
               05  WSS-SVNC                       PIC 9(02).
               05  WSS-AVNC                       PIC 9(02).
               05  WSS-MVNC                       PIC 9(02).
               05  WSS-DVNC                       PIC 9(02).
           03  WSS-FMIV.
               05  WSS-SMIV                       PIC 9(02).
               05  WSS-AMIV                       PIC 9(02).
               05  WSS-MMIV                       PIC 9(02).
               05  WSS-DMIV                       PIC 9(02).
           03  WSS-FMAV.
               05  WSS-SMAV                       PIC 9(02).
               05  WSS-AMAV                       PIC 9(02).
               05  WSS-MMAV                       PIC 9(02).
               05  WSS-DMAV                       PIC 9(02).
           03  WSS-NEEV                      COMP PIC 9(04).
           03  WSS-FPPC.
               05  WSS-SPPC                       PIC 9(02).
               05  WSS-APPC                       PIC 9(02).
               05  WSS-MPPC                       PIC 9(02).
               05  WSS-DPPC                       PIC 9(02).
           03  WSS-FPPI.
               05  WSS-SPPI                       PIC 9(02).
               05  WSS-APPI                       PIC 9(02).
               05  WSS-MPPI                       PIC 9(02).
               05  WSS-DPPI                       PIC 9(02).
           03  WSS-FIPC.
               05  WSS-SIPC                       PIC 9(02).
               05  WSS-AIPC                       PIC 9(02).
               05  WSS-MIPC                       PIC 9(02).
               05  WSS-DIPC                       PIC 9(02).
           03  WSS-FSPC.
               05  WSS-SSPC                       PIC 9(02).
               05  WSS-ASPC                       PIC 9(02).
               05  WSS-MSPC                       PIC 9(02).
               05  WSS-DSPC                       PIC 9(02).
           03  WSS-FIPI.
               05  WSS-SIPI                       PIC 9(02).
               05  WSS-AIPI                       PIC 9(02).
               05  WSS-MIPI                       PIC 9(02).
               05  WSS-DIPI                       PIC 9(02).
           03  WSS-FSPI.
               05  WSS-SSPI                       PIC 9(02).
               05  WSS-ASPI                       PIC 9(02).
               05  WSS-MSPI                       PIC 9(02).
               05  WSS-DSPI                       PIC 9(02).
           03  WSS-FUVC.
               05  WSS-SUVC                       PIC 9(02).
               05  WSS-AUVC                       PIC 9(02).
               05  WSS-MUVC                       PIC 9(02).
               05  WSS-DUVC                       PIC 9(02).
           03  WSS-NEUV                           PIC 9(03).
           03  WSS-IVUV              VALUE SPACES PIC X(01).
               88 WSS-ULTIMO-VENC-EN-ZERO VALUE 'Z'.
           03  WSS-EPOC              VALUE 'N'    PIC X(01).
           03  WSS-OPEC                           PIC X(08).
      *JSS
           03  WSS-VEDT-ALF                       PIC X(24).
           03  WSS-VEDT-EDT REDEFINES WSS-VEDT-ALF
                                     PIC --.---.---.---.---,-----.
      *JSS-NEW
           03  WSS-LEVC COMP             VALUE 10 PIC 9(02).
           03  WSS-MEVC COMP             VALUE 0  PIC 9(02).
           03  WSS-IEVC COMP             VALUE 0  PIC 9(02).
           03  WSS-EVC1 COMP             VALUE 0  PIC 9(02).
           03  WSS-TCFO COMP             VALUE 0  PIC 9(02).
           03  WSS-TCCO COMP             VALUE 0  PIC 9(02).
           03  WSS-VCVC OCCURS 10.
               05  WSS-BCCR                       PIC X(01).
               05  WSS-VICR                       PIC X(01).
           03  WSS-FMIN.
               05  WSS-SMIN                       PIC 9(02).
               05  WSS-AMIN                       PIC 9(02).
               05  WSS-MMIN                       PIC 9(02).
               05  WSS-DMIN                       PIC 9(02).
           03  WSS-J                              PIC 9(02).
           03  WSS-K                              PIC 9(02).
       01  REG.
           02 REG-FILL                            PIC X(01).
       COPY COLBREVC REPLACING ==01  EVC.== BY
                               ==02 REG-EVC OCCURS 10.==.
      *JSS-NEW

      *JSS-TRC
      * COPY GNSWGDSP.
      *JSS
       01  SCR-INST-BRW              VALUE 'BRW'  PIC X(03).
      *
      *Registros de GENESIS
       COPY GNSBRTAB.
      *Registros de TABLAS
       COPY TABBROFI.
       COPY TABBRUSR.
      *ALD/22-AUG-1988
       COPY TABBRCAM.
      *Registros de CLIENTES
       COPY SGCBRDBC.
      *Registros de Colocaciones
       COPY COLBRCAN.
       COPY COLBRRDC.
       COPY COLBRITR.
       COPY COLBRCOM.
       COPY COLBRCYA.
       COPY COLBRAUT.
       COPY COLBRROV.
       COPY COLBRDLC.
       COPY COLBREVC.
       COPY COLBRVEN.
       COPY COLBRIMP.
       COPY COLBRICG.
       COPY COLBRNTR.
       COPY COLBRTOC.
       COPY COLBRPOC.
      *
       COPY COLWGUVD.
       COPY COLWGRNO.
       COPY COLWGVIN.
      *
       COPY GNSWGFEC.
       COPY GNSWGHOY.
       COPY GNSWGCPT.
       COPY GNSWGSTR.
      *
       COPY GNSWGIDC.
       COPY GNSWCVRF.
       COPY GNSWVVRF.
      *
       COPY GNSWGINT.
       COPY GNSWGCVI.
      *
       COPY GNSWGPES.
       COPY SGCBRRCO.
       COPY SGCBROPE.
       COPY SGCBRRCD.
      *>>>>
      *<<<< WSS_DTC
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-TAB-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-OFI-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-USR-REQA==.
      *ALD/22-AUG-1988
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-CAM-REQA==.
      *
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-DBC-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-RDC-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-ITR-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-COM-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-CYA-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-AUT-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-ROV-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-DLC-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-EVC-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-VEN-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-IMP-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-ICG-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-NTR-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-TOC-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-RCO-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-OPE-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-RCD-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-POC-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-AUX-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-CAN-REQA==.
      *>>>>
       01  PGM-VARI.
           03 PGM-ICKY                 VALUE 0 PIC 9(01).
              88 PGM-LIMPIAR-LLAVES    VALUE 0.
              88 PGM-NO-LIMPIAR-LLAVES VALUE 1.
           03 PGM-STAT.
              05 PGM-STAT-OPC           VALUE '23'      PIC X(02).
                 88 PGM-STAT-OPC-OKS    VALUE '00'.
                 88 PGM-STAT-OPC-NUL    VALUE '  '.
              05 PGM-STAT-CAN           VALUE '23'      PIC X(02).
                 88 PGM-STAT-CAN-OKS    VALUE '00'.
                 88 PGM-STAT-CAN-NUL    VALUE '  '.
              05 PGM-STAT-RDC           VALUE '23'      PIC X(02).
                 88 PGM-STAT-RDC-OKS    VALUE '00'.
                 88 PGM-STAT-RDC-NUL    VALUE '  '.
              05 PGM-STAT-DBC           VALUE '23'      PIC X(02).
                 88 PGM-STAT-DBC-OKS    VALUE '00'.
                 88 PGM-STAT-DBC-NUL    VALUE '  '.
              05 PGM-STAT-RCD           VALUE '23'      PIC X(02).
                 88 PGM-STAT-RCD-OKS    VALUE '00'.
                 88 PGM-STAT-RCD-NUL    VALUE '  '.
              05 PGM-STAT-ROV           VALUE '23'      PIC X(02).
                 88 PGM-STAT-ROV-OKS    VALUE '00'.
                 88 PGM-STAT-ROV-NUL    VALUE '  '.
              05 PGM-STAT-ITR           VALUE '23'      PIC X(02).
                 88 PGM-STAT-ITR-OKS    VALUE '00'.
                 88 PGM-STAT-ITR-NUL    VALUE '  '.
              05 PGM-STAT-COM           VALUE '23'      PIC X(02).
                 88 PGM-STAT-COM-OKS    VALUE '00'.
                 88 PGM-STAT-COM-NUL    VALUE '  '.
              05 PGM-STAT-CYA           VALUE '23'      PIC X(02).
                 88 PGM-STAT-CYA-OKS    VALUE '00'.
                 88 PGM-STAT-CYA-NUL    VALUE '  '.
              05 PGM-STAT-AUT           VALUE '23'      PIC X(02).
                 88 PGM-STAT-AUT-OKS    VALUE '00'.
                 88 PGM-STAT-AUT-NUL    VALUE '  '.

       LINKAGE SECTION.
      *----------------
       01  DFHCOMMAREA.
      *<<<< CMA
           02 FILLER                      PIC X(3000).
      *>>>>
       COPY GNSLGFIO.

       PROCEDURE DIVISION.
      *===================

       MAIN SECTION.
       INI-MAIN.
           PERFORM INI.
       LUP-MAIN.
           IF SCR-INST = SCR-INST-HCM
                 PERFORM SCR-COM.
           IF SCR-CCPP = 'ACC'
               IF SCR-STPP = SCR-STAT-CON OR SCR-STAT-SON
                   PERFORM SCR-ACC
               ELSE
                   MOVE 'GNS'          TO MSG-COD-SIST
                   MOVE 'SPP    NOSOP' TO MSG-COD-MENS
                   PERFORM GET-MSG
                   MOVE MSG-GLS-DESC TO FRM-MEN1
                   MOVE SCR-STPP     TO FRM-MEN2
                   PERFORM SCR-MSSG
                   PERFORM SCR-COM
           ELSE
               MOVE 'GNS'          TO MSG-COD-SIST
               MOVE 'CPP    NOSOP' TO MSG-COD-MENS
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MEN1
               MOVE SCR-CCPP     TO FRM-MEN2
               PERFORM SCR-MSSG
               PERFORM SCR-COM.
           GO TO LUP-MAIN.
       FIN-MAIN.
           EXIT.

       INI SECTION.
       INI-INI.
       COPY GNSBGEIB.
       COPY GNSBGEDB.
       COPY GNSBGCMA.
           MOVE 'COLPVOPC' TO FIO-PROG.
      *<<<< INI_FIO
           MOVE +3000 TO SCR-TCMA.
           IF SCR-DESDE-CMN
               MOVE SPACES TO SCR-RQA1
                              SCR-RQA2.
      *>>>>
       FIN-INI.
           EXIT.

       SCR-COM SECTION.
       INI-SCR-COM.
           PERFORM PRO-ALL.
           PERFORM SCR-CLRA-OPC.
           PERFORM EDT-KEY-OPC.
           PERFORM EDT-FLD-OPC.
           PERFORM SCR-PUTA.
           MOVE SCR-INST-HCM TO SCR-INST.
           MOVE SCR-CMNP     TO FRM-PROG.
           MOVE SCR-VARI     TO FRM-CMMA.
           MOVE SCR-TCMA     TO FRM-TCMA.
           MOVE FRM-XCT      TO FRM-CMND.
           PERFORM GNS-PRO-FRM.
           MOVE FRM-CLR-FRM  TO FRM-CMND.
           PERFORM GNS-PRO-FRM.
           MOVE 'XCTERR    ' TO MSG-COD-MENS.
           MOVE 'GNS'        TO MSG-COD-SIST.
           PERFORM GET-MSG.
           MOVE MSG-GLS-DESC TO FRM-MENS.
           MOVE FRM-MSG      TO FRM-CMND.
           PERFORM GNS-PRO-FRM.
       COPY GNSBGGBK.
       FIN-SCR-COM.
           EXIT.

       SCR-ACC SECTION.
       INI-SCR-ACC.
           IF SCR-INST = SCR-INST-HKY
               MOVE SCR-INST-GKY TO SCR-INST
               PERFORM HBL-KEY
               IF PGM-LIMPIAR-LLAVES
                   PERFORM SCR-CLRA-OPC
                   PERFORM EDT-KEY-OPC
                   PERFORM EDT-FLD-OPC
                   PERFORM SCR-PUTA
                   PERFORM SCR-EXIT
               ELSE
                   PERFORM CLR-FLD-OPC
                   PERFORM EDT-FLD-OPC
                   PERFORM SCR-PUTA
                   PERFORM SCR-EXIT
           ELSE
           IF SCR-INST = SCR-INST-GKY
                PERFORM SCR-KEY
                IF SCR-STAT NOT = SCR-STAT-ABT
                        PERFORM SCR-TRL
                ELSE
                        PERFORM DESSCRTRL
                        GO TO FIN-SCR-ACC
           ELSE
           IF SCR-INST = SCR-INST-GCS
                PERFORM GET-ACC
           ELSE
           IF SCR-INST = SCR-INST-GAB
                PERFORM GET-CON.
           PERFORM DESSCRTRL.
           MOVE SPACES TO FRM-MENS.
           IF SCR-STAT NOT = SCR-STAT-CON
               PERFORM CMN-ACC.
           PERFORM SCR-MSSG.
       FIN-SCR-ACC.
           EXIT.

       SCR-KEY SECTION.
       INI-SCR-KEY.
           PERFORM SCR-RST.
           PERFORM GET-KEY.
           IF FRM-STAT-ABT
                   MOVE SPACES TO FRM-MENS
                   PERFORM SCR-MSSG
                   GO TO FIN-SCR-KEY.
       FND-SCR-KEY.
           MOVE SPACES TO FRM-MENS.
           PERFORM FND-KEY.
           IF FIO-STAT-OKS
               PERFORM PUT-SCR
               MOVE 0 TO PGM-ICKY
               GO TO FIN-SCR-KEY.
      *JSS ELSE
      *        PERFORM CLR-FLD-OPC.
       ERR-SCR-KEY.
           MOVE 1 TO PGM-ICKY.
           IF FRM-MENS NOT > SPACES
               IF FIO-STAT-EOF
                   MOVE 'REGEOF    ' TO MSG-COD-MENS
                   MOVE 'GNS' TO MSG-COD-SIST
                   PERFORM GET-MSG
                   MOVE MSG-GLS-DESC TO FRM-MENS
               ELSE
               IF FIO-STAT = FIO-STAT-NEX
                   MOVE 'REGNEX    ' TO MSG-COD-MENS
                   MOVE 'GNS' TO MSG-COD-SIST
                   PERFORM GET-MSG
                   MOVE MSG-GLS-DESC TO FRM-MENS
               ELSE
                   MOVE 'FIOSTAT' TO MSG-COD-TMSG
                   MOVE FIO-STAT  TO MSG-COD-CMSG
                   MOVE 'GNS'     TO MSG-COD-SIST
                   PERFORM GET-MSG
                   MOVE MSG-GLS-DESC TO FRM-MENS.
           PERFORM SCR-MSSG.
           MOVE SCR-STAT-ABT TO SCR-STAT.
        FIN-SCR-KEY.
           EXIT.

       SCR-RST SECTION.
       INI-SCR-RST.
           MOVE SCR-STPP     TO SCR-STAT.
           MOVE SCR-MFLD-NOT TO SCR-MFLD.
           MOVE LOW-VALUES   TO OPC-FLD.
       FIN-SCR-RST.
           EXIT.

       GET-KEY SECTION.
       INI-GET-KEY.
           PERFORM SCR-GKEY.
           IF FRM-STAT-ABT
               MOVE SCR-STAT-ABT TO SCR-STAT.
       FIN-GET-KEY.
           EXIT.

       FND-KEY SECTION.
       INI-FND-KEY.
           PERFORM KEY-ALL-OPC.
      *<<<< FND_KEY
           IF OPC-IIC-IOPC IN OPC-FLD > ZEROES
               GO TO CON-FND-KEY
           ELSE
           IF DBC-NUM-ICLI IN OPC-FLD > ZEROES
      *IDC-CLI Busca Cliente por medio de IdC
               MOVE DBC-NUM-ICLI IN OPC-FLD TO DBC-NUM-ICLI IN DBC
               MOVE DBC-IND-ICLI IN OPC-FLD TO DBC-IND-ICLI IN DBC
               MOVE DBC-GLS-ICLI IN OPC-FLD TO DBC-GLS-ICLI IN DBC
               MOVE 'DBC-IDC-ICLI'  TO FIO-AKEY
               MOVE FIO-GET-KEY TO FIO-CMND
               PERFORM ANL-KEY-OPC
               IF NOT FIO-STAT-OKS
                   PERFORM GET-MSG
                   MOVE MSG-GLS-DESC TO FRM-MEN2
                   MOVE '00' TO FIO-STAT
                   MOVE SCR-STAT-CON TO SCR-STAT
                   GO TO FIN-FND-KEY
               ELSE
                   NEXT SENTENCE
           ELSE
           IF DBC-GLS-NOMC IN OPC-FLD > SPACES
      *NOM-CLI Busca Cliente por medio del Nombre
               MOVE DBC-GLS-NOMC IN OPC-FLD TO STR-GLS-GSTR
               PERFORM STR-UNS
               MOVE STR-GLS-FUNS IN STR-VARI(1) TO DBC-GLS-APAT IN DBC
               MOVE STR-GLS-FUNS IN STR-VARI(2) TO DBC-GLS-AMAT IN DBC
               MOVE STR-GLS-FUNS IN STR-VARI(3) TO DBC-GLS-NOMB IN DBC

      *         UNSTRING DBC-GLS-NOMC IN OPC-FLD DELIMITED BY '/' INTO
      *                                  DBC-GLS-APAT IN DBC
      *                                  DBC-GLS-AMAT IN DBC
      *                                  DBC-GLS-NOMB IN DBC


               MOVE 'DBC-GLS-NOMC'  TO FIO-AKEY
               MOVE FIO-GET-NLS TO FIO-CMND
               PERFORM ANL-KEY-OPC
               IF NOT FIO-STAT-OKS
                   PERFORM GET-MSG
                   MOVE MSG-GLS-DESC TO FRM-MEN2
                   MOVE '00' TO FIO-STAT
                   MOVE SCR-STAT-CON TO SCR-STAT
                   GO TO FIN-FND-KEY.
       CON-FND-KEY.
      *>>>>
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM COL-FIO-OPC.
           MOVE FIO-STAT TO PGM-STAT-OPC.
      *<<<< FIN_FND_KEY
           IF NOT FIO-STAT-OKS
               GO TO FIN-FND-KEY.

           MOVE '00' TO PGM-STAT-OPC.
           IF NOT BUS-POR-KEYS = BUS-POR-CLTE
               GO TO OPC-FND-KEY.
           PERFORM GET-CUR-RDC.
           IF NOT FIO-STAT-OKS
               MOVE 'COL'          TO MSG-COD-SIST
               MOVE 'RDC    INCKY' TO MSG-COD-MENS
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS
               MOVE SCR-STAT-CON TO SCR-STAT
               GO TO FIN-FND-KEY.
           PERFORM GET-NXT-RDC.
           IF SCR-IND-MRDC = 'M'
               MOVE MSG-GLS-DESC TO FRM-MENS.
           GO TO ANL-CLI.
       OPC-FND-KEY.
           PERFORM GET-CUR-RDC.
           IF NOT FIO-STAT-OKS
               MOVE 'COL' TO MSG-COD-SIST
               MOVE 'OPC    NORDC' TO MSG-COD-MENS
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS
               MOVE SCR-STAT-CON TO SCR-STAT
               GO TO FIN-FND-KEY.
           MOVE '00' TO PGM-STAT-RDC.
           MOVE 'IDLC' TO SCR-KEY-IRDC.
           PERFORM GET-NXT-RDC.
           IF SCR-IND-MRDC = 'M'
               MOVE 'M'          TO DBC-IND-ICLI IN OPC-FLD
               MOVE MSG-GLS-DESC TO DBC-GLS-NOMC IN DBC
               MOVE SPACES TO MSG-COD-SIST
               MOVE SPACES TO MSG-COD-MENS
               GO TO ANL-CLI.
           MOVE RDC-CIC-ICLI IN RDC TO DBC-CIC-ICLI IN DBC.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM SGC-FIO-DBC.
           IF NOT FIO-STAT-OKS
               MOVE 'COL'          TO MSG-COD-SIST
               MOVE 'RDC    NOCLI' TO MSG-COD-MENS
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS
               MOVE '00'         TO FIO-STAT
               MOVE SCR-STAT-CON TO SCR-STAT
               GO TO FIN-FND-KEY.
           MOVE '00' TO PGM-STAT-DBC.
           MOVE ADR-DBC-REQA TO SCR-RQA1.
           MOVE DBC-GLS-NOMC IN DBC TO CPT-STRN.
           PERFORM CPT-BLKS.
           MOVE CPT-STRN            TO DBC-GLS-NOMC IN OPC-FLD.
           MOVE DBC-NUM-ICLI IN DBC TO DBC-NUM-ICLI IN OPC-FLD.
           MOVE DBC-VRF-ICLI IN DBC TO DBC-VRF-ICLI IN OPC-FLD.
           MOVE DBC-IND-ICLI IN DBC TO DBC-IND-ICLI IN OPC-FLD.
           MOVE DBC-GLS-ICLI IN DBC TO DBC-GLS-ICLI IN OPC-FLD.
       ANL-CLI.
           PERFORM ANL-KEY-ALL.
           IF MSG-COD-MENS NOT = SPACES
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS
               MOVE '00' TO FIO-STAT
               MOVE SCR-STAT-CON TO SCR-STAT
               GO TO FIN-FND-KEY.
       REC-OPC-STAT.
      *ISP/ 23-JAN-1990
      * RECUPERACION DE LA(S) CANCELACION(ES) ASOCIADAS A LA OPERACION
           IF OPC-IND-RENO IN OPC NOT > SPACES
               GO TO NOT-BUS-ROV.
           PERFORM BUS-CIC-RENO
           IF OPC-IND-RENO IN OPC = RNO-CIC-NOV IN RNO-VARI
               PERFORM GET-ROV-NOV
           ELSE
               IF (OPC-IND-RENO IN OPC = RNO-CIC-REN IN RNO-VARI) OR
                  (OPC-IND-RENO IN OPC = RNO-CIC-PRO IN RNO-VARI)
                   PERFORM GET-ROV-REN
                   MOVE WSS-SGV-RENO TO ROV-SGV-RENO IN ROV.
       NOT-BUS-ROV.
           MOVE PGM-STAT-OPC TO FIO-STAT.
      *>>>>
       FIN-FND-KEY.
           EXIT.

       PUT-SCR SECTION.
       INI-PUT-SCR.
           PERFORM PUT-ALL-OPC.
       FIN-PUT-SCR.
           EXIT.

       CMN-ACC SECTION.
       INI-CMN-ACC.
           IF SCR-STAT = SCR-STAT-ABT OR SCR-VFLD = SCR-VFLD-NOT
               MOVE 'ACCION NO REALIZADA' TO FRM-MENS
      *<<<< ABT_CMN_ACC
               MOVE 'COL' TO MSG-COD-SIST
               MOVE 'OPC    NOLIQ' TO MSG-COD-MENS
               PERFORM GET-MSG
               MOVE  MSG-GLS-DESC TO FRM-MENS
      *>>>>
               GO TO FIN-CMN-ACC.
      *<<<< INI_CMN_ACC
      *>>>>
           PERFORM KEY-ALL-OPC.
           MOVE FIO-GET-KEY-UPD TO FIO-CMND.
           PERFORM COL-FIO-OPC.
           IF NOT FIO-STAT-OKS
               GO TO FIN-CMN-ACC.
      *    PERFORM RET-ALL-OPC.
       FIN-CMN-ACC.
           EXIT.

       SCR-EXIT SECTION.
       INI-SCR-EXIT.
           MOVE 'P'      TO SCR-ICMN.
           MOVE SCR-NTRN TO FRM-NTRN.
           MOVE SCR-VARI TO FRM-CMMA.
           MOVE SCR-TCMA TO FRM-TCMA.
           MOVE FRM-EXT  TO FRM-CMND.
      *<<<< SCR_EXIT
           IF WSS-NTRN > SPACES
               MOVE WSS-NTRN TO FRM-NTRN.
      *>>>>
           PERFORM GNS-PRO-FRM.
       FIN-SCR-EXIT.
           EXIT.

       SCR-PUTA SECTION.
       INI-SCR-PUTA.
           MOVE SCR-NMAP TO FRM-NAME.
           MOVE SCR-NLIB TO FRM-NLIB.
           MOVE OPC-FLD TO FRM-DFLD.
           MOVE FRM-PUT-ALL TO FRM-CMND.
           PERFORM GNS-PRO-FRM.
       FIN-SCR-PUTA.
           EXIT.

       SCR-MSSG SECTION.
       INI-SCR-MSSG.
           IF FRM-MEN1 NOT > SPACES
               MOVE SPACES TO FRM-MEN1.
           IF FRM-MEN2 NOT > SPACES
               MOVE SPACES TO FRM-MEN2.
           MOVE FRM-MENS TO OPC-GLS-MENS.
       FIN-SCR-MSSG.
           EXIT.

       SCR-GKEY SECTION.
       INI-SCR-GKEY.
           MOVE SCR-NMAP TO FRM-NAME.
           MOVE SCR-NLIB TO FRM-NLIB.
           MOVE FRM-GET-ALL TO FRM-CMND.
           PERFORM GNS-PRO-FRM.
           MOVE SPACES TO FRM-MENS.
           IF NOT ( FRM-FFLD = FRM-FFLD-RET  OR FRM-FFLD-PF10 OR
                               FRM-FFLD-PF12 OR FRM-FFLD-PF3 )
               MOVE 'PFSINV    ' TO MSG-COD-MENS
               MOVE 'GNS' TO MSG-COD-SIST
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS
               PERFORM FST-KEY-OPC
               PERFORM SCR-MSSG
               PERFORM SCR-PUTA
               PERFORM SCR-EXIT.
           MOVE FRM-DFLD TO OPC-FLD.
           IF FRM-STAT-ABT
               GO TO FIN-SCR-GKEY.
           MOVE FRM-SUAR-OKS TO FRM-SUAR.
           PERFORM VAL-NUM-KEY-OPC.
           IF FRM-SUAR EQUAL FRM-SUAR-MAL OR FRM-SUAR-CLR
               PERFORM SCR-MSSG
               PERFORM EDT-KEY-OPC
               PERFORM SCR-PUTA
               PERFORM SCR-EXIT.
           PERFORM VAL-CON-KEY-OPC.
           IF FRM-SUAR EQUAL FRM-SUAR-MAL OR FRM-SUAR-CLR
               PERFORM FST-KEY-OPC
               GO TO ERR-SCR-GKEY.
      *JSS
           PERFORM CLR-FLD-OPC.
           PERFORM VAL-IKY-OPC.
           IF FRM-SUAR EQUAL FRM-SUAR-MAL OR FRM-SUAR-CLR
               GO TO ERR-SCR-GKEY.
           PERFORM VAL-MKY-OPC.
           IF FRM-SUAR EQUAL FRM-SUAR-MAL OR FRM-SUAR-CLR
               GO TO ERR-SCR-GKEY.
           PERFORM VAL-AKY-OPC.
           IF NOT ( FRM-SUAR EQUAL FRM-SUAR-MAL OR FRM-SUAR-CLR )
               GO TO FIN-SCR-GKEY.
       ERR-SCR-GKEY.
           PERFORM SCR-MSSG.
           PERFORM EDT-KEY-OPC.
           PERFORM SCR-PUTA.
           PERFORM SCR-EXIT.
       FIN-SCR-GKEY.
           PERFORM SCR-MSSG.

       GET-ACC SECTION.
       INI-GET-ACC.
           MOVE SCR-NMAP TO FRM-NAME.
           MOVE SCR-NLIB TO FRM-NLIB.
           MOVE FRM-GET-ALL TO FRM-CMND.
           PERFORM GNS-PRO-FRM.
           IF NOT ( FRM-FFLD = FRM-FFLD-RET  OR FRM-FFLD-PF10 OR
                               FRM-FFLD-PF12 OR FRM-FFLD-PF3 )
               MOVE 'PFSINV    ' TO MSG-COD-MENS
               MOVE 'GNS' TO MSG-COD-SIST
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC          TO OPC-GLS-MEN2
               MOVE SCR-GLS-PRMT( SCR-I ) TO OPC-GLS-MEN1
               PERFORM FST-MSG
               PERFORM SCR-PUTA
               PERFORM SCR-EXIT.
           MOVE FRM-DFLD TO OPC-FLD.
           IF NOT ( ( FRM-FFLD = FRM-FFLD-PF12 OR FRM-FFLD-PF3 ) OR
                      SCR-GLS-CONF( SCR-I ) > SPACES )
               PERFORM VAL-NUM-KEY-OPC
               PERFORM VAL-NUM-FLD-OPC.
       FIN-GET-ACC.
           MOVE SCR-STAT-SON TO SCR-STAT.

       GET-CON SECTION.
       INI-GET-CON.
           MOVE SCR-NMAP TO FRM-NAME.
           MOVE SCR-NLIB TO FRM-NLIB.
           MOVE FRM-GET-ALL TO FRM-CMND.
           PERFORM GNS-PRO-FRM.
           IF NOT ( FRM-FFLD = FRM-FFLD-RET  OR FRM-FFLD-PF10 OR
                               FRM-FFLD-PF12 OR FRM-FFLD-PF3 )
               MOVE 'PFSINV    ' TO MSG-COD-MENS
               MOVE 'GNS' TO MSG-COD-SIST
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC          TO OPC-GLS-MEN2
               MOVE SCR-GLS-PRMT( SCR-I ) TO OPC-GLS-MEN1
               PERFORM FST-MSG
               PERFORM SCR-PUTA
               PERFORM SCR-EXIT.
           MOVE FRM-DFLD TO OPC-FLD.
       FIN-GET-CON.
           MOVE SCR-STAT-CON TO SCR-STAT.

       CLR-MSG SECTION.
       INI-CLR-MSG.
           MOVE SPACES TO OPC-GLS-MENS.
       FIN-CLR-MSG.
           EXIT.

       HBL-KEY SECTION.
       INI-HBL-KEY.
           IF SCR-DESDE-CMN
               MOVE OPC-GLS-MENS TO FRM-MENS
               MOVE LOW-VALUES TO OPC-FLD
               MOVE FRM-MENS TO OPC-GLS-MENS.
           PERFORM PRO-FLD-OPC.
           PERFORM UNP-KEY-OPC.
           PERFORM FST-KEY-OPC.
       FIN-HBL-KEY.
           EXIT.

       HBL-FLD SECTION.
       INI-HBL-FLD.
           PERFORM PRO-IKY-OPC.
           PERFORM PRO-AKY-OPC.
           PERFORM UNP-MKY-OPC.
           PERFORM UNP-FLD-OPC.
           PERFORM FST-FLD-OPC.
      *<<<< FIN_HBL_FLD
      *>>>>
       FIN-HBL-FLD.
           EXIT.

       FST-MSG SECTION.
       INI-FST-MSG.
           MOVE -1 TO OPC-GLS-MENS-LEN.
       FIN-FST-MSG.
           EXIT.

       PRO-ALL SECTION.
       INI-PRO-ALL.
           PERFORM PRO-KEY-OPC.
           PERFORM PRO-FLD-OPC.
           PERFORM FST-MSG.
       FIN-PRO-ALL.
           EXIT.

       SCR-TRL SECTION.
       INI-SCR-TRL.
      *<<<< INI_SCR_TRL
      *JSS 16-MAY-1991 15:32:57 ( para manejo de cuenta corriente )
           IF OPC-MSC-STAT IN OPC = 'X' OR 'B' OR 'G'
               MOVE 'COL'               TO MSG-COD-SIST
               MOVE 'OPCSTT'            TO MSG-COD-TMSG
               MOVE OPC-MSC-STAT IN OPC TO MSG-COD-CMSG
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS
               MOVE SCR-STAT-CON TO SCR-STAT
           ELSE
      *
           IF OPC-MSC-STAT IN OPC = 'A'
               MOVE 'COL' TO MSG-COD-SIST
               MOVE 'OPC    ACAYA' TO MSG-COD-MENS
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS
               MOVE SCR-STAT-CON TO SCR-STAT
           ELSE
           IF OPC-MSC-STAT IN OPC = 'S'
               MOVE 'COL' TO MSG-COD-SIST
               MOVE 'OPC    SUSYA' TO MSG-COD-MENS
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS
               MOVE SCR-STAT-CON TO SCR-STAT
           ELSE
           IF OPC-MSC-STAT IN OPC = 'D'
               MOVE 'COL' TO MSG-COD-SIST
               MOVE 'OPC    DESYA' TO MSG-COD-MENS
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS
               MOVE SCR-STAT-CON TO SCR-STAT
           ELSE           
           IF OPC-MSC-STAT IN OPC = 'L'
               MOVE 'COL' TO MSG-COD-SIST
               MOVE 'OPC    LIQYA' TO MSG-COD-MENS
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS
               MOVE SCR-STAT-CON TO SCR-STAT
           ELSE
               PERFORM VRF-ROPC
               IF FRM-SUAR = FRM-SUAR-MAL
                   MOVE SCR-STAT-CON TO SCR-STAT
               ELSE
                   MOVE SPACES TO FRM-MENS
                   PERFORM LIQ-ROPC
                   IF MSG-COD-MENS > SPACES
                       MOVE MSG-GLS-DESC TO FRM-MEN1
                       MOVE SCR-STAT-CON TO SCR-STAT.
           IF SCR-STAT = SCR-STAT-SON AND SCR-CMND = 'LIQ'
      *JSS Se mueve la transaccion del programa liquidador
               MOVE 'KO44' TO WSS-NTRN.
      *>>>>
           IF FRM-MEN1 NOT > SPACES
               MOVE SCR-GLS-PRMT( SCR-I ) TO FRM-MEN1.
           IF SCR-STAT = SCR-STAT-SON
               MOVE SCR-INST-GCS TO SCR-INST
               PERFORM PRO-ALL
               PERFORM SCR-MSSG
               PERFORM EDT-KEY-OPC
               PERFORM EDT-FLD-OPC
               PERFORM SCR-PUTA
               PERFORM SCR-EXIT.
      *ASUME SCR-STAT-CON.
           MOVE SCR-STAT-CON TO SCR-STAT.
           MOVE SCR-INST-GAB TO SCR-INST.
           PERFORM PRO-ALL.
           PERFORM SCR-MSSG.
           PERFORM EDT-KEY-OPC
           PERFORM EDT-FLD-OPC
           PERFORM SCR-PUTA
           PERFORM SCR-EXIT.
       FIN-SCR-TRL.
           EXIT.

       DESSCRTRL SECTION.
       INI-DESSCRTRL.
           IF SCR-INST = SCR-INST-GCF
                  PERFORM SCR-GCNF
                  GO TO FIN-DESSCRTRL.
           MOVE SCR-VFLD-NOT TO SCR-VFLD.
           MOVE FRM-FFLD TO SCR-FFLD.
           IF SCR-STAT = SCR-STAT-ABT OR SCR-STAT-CON
                  GO TO FIN-DESSCRTRL.
           IF SCR-FFLD-RET OR SCR-FFLD-PF10
                  MOVE SCR-VFLD-YES TO SCR-VFLD
                  PERFORM PRO-CONF.
       FIN-DESSCRTRL.
           IF SCR-FFLD-PF10 OR SCR-FFLD-PF3
                 MOVE SCR-INST-HCM TO SCR-INST
           ELSE
                 MOVE SCR-INST-HKY TO SCR-INST.
       EXT-DESSCRTRL.
           EXIT.

       PRO-CONF SECTION.
       INI-PRO-CONF.
           IF FRM-MENS NOT > SPACES
               IF SCR-GLS-CONF( SCR-I ) NOT > SPACES
                   GO TO FIN-PRO-CONF
               ELSE
                   MOVE SCR-GLS-CONF( SCR-I ) TO FRM-MENS
           ELSE
               IF FRM-MEN1 NOT > SPACES
                   MOVE SCR-GLS-CONF( SCR-I ) TO FRM-MEN1.
           MOVE SCR-INST-GCF TO SCR-INST.
           PERFORM SCR-MSSG.
           PERFORM PRO-KEY-OPC.
           PERFORM PRO-FLD-OPC.
           PERFORM FST-MSG.
           IF SCR-STAT = SCR-STAT-MOD
               PERFORM EDT-KEY-OPC
               PERFORM EDT-FLD-OPC.
           PERFORM SCR-PUTA.
           PERFORM SCR-EXIT.
       FIN-PRO-CONF.
           EXIT.

       SCR-GCNF SECTION.
       INI-SCR-GCNF.
           MOVE SCR-NMAP TO FRM-NAME.
           MOVE SCR-NLIB TO FRM-NLIB.
           MOVE FRM-GET-ALL TO FRM-CMND.
           PERFORM GNS-PRO-FRM.
           IF NOT ( FRM-FFLD = FRM-FFLD-RET  OR FRM-FFLD-PF10 OR
                               FRM-FFLD-PF12 OR FRM-FFLD-PF3  OR
                               FRM-FFLD-PF4 )
               MOVE 'PFSINV    ' TO MSG-COD-MENS
               MOVE 'GNS' TO MSG-COD-SIST
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC          TO OPC-GLS-MEN2
               MOVE SCR-GLS-CONF( SCR-I ) TO OPC-GLS-MEN1
               PERFORM FST-MSG
               PERFORM SCR-PUTA
               PERFORM SCR-EXIT.
           MOVE FRM-DFLD TO OPC-FLD.
           MOVE FRM-FFLD TO SCR-FFLD.
           IF FRM-FFLD = FRM-FFLD-PF3
               MOVE SCR-VFLD-NOT TO SCR-VFLD
           ELSE
           IF FRM-FFLD = FRM-FFLD-RET OR FRM-FFLD-PF10 OR FRM-FFLD-PF4
               MOVE SCR-VFLD-YES TO SCR-VFLD
               PERFORM VAL-NUM-KEY-OPC
               PERFORM VAL-NUM-FLD-OPC
           ELSE
           IF FRM-FFLD = FRM-FFLD-PF12
               MOVE SCR-STPP TO SCR-STAT
               IF SCR-STAT = SCR-STAT-MOD
                   PERFORM VAL-NUM-KEY-OPC
                   PERFORM VAL-NUM-FLD-OPC
                   PERFORM SCR-TRL
               ELSE
                   MOVE SCR-VFLD-NOT TO SCR-VFLD.
       FIN-SCR-GCNF.
           EXIT.

      *JSS COPY COLBMOPC.
       COPY COLBQOPC.

       COPY COLBFOPC.
       COPY GNSBFMSC.
       COPY GNSBFMSG.
       COPY GNSBECIC.
       COPY GNSBGSYS.
       COPY GNSBGVSM.
       COPY GNSBGDTC.
       COPY GNSBGFRM.
       COPY GNSBGMSG.
       COPY GNSBEKEY.
       COPY GNSBIABT.

      *<<<< EOF
       ANL-KEY-OPC SECTION.
       INI-ANL-KEY-OPC.
           PERFORM GET-CLI.
           IF MSG-COD-MENS > SPACES
               MOVE ZEROES TO DBC-NUM-ICLI IN OPC-FLD
               MOVE SPACES TO DBC-VRF-ICLI IN OPC-FLD
               MOVE SPACES TO DBC-IND-ICLI IN OPC-FLD
               MOVE SPACES TO DBC-GLS-ICLI IN OPC-FLD
               MOVE FIO-STAT-NEX TO FIO-STAT
               MOVE MSG-GLS-DESC TO FRM-MENS
               GO TO FIN-ANL-KEY-OPC
           ELSE
               MOVE '00' TO PGM-STAT-DBC
               MOVE ADR-DBC-REQA TO SCR-RQA1
               MOVE DBC-GLS-NOMC IN DBC TO CPT-STRN
               PERFORM CPT-BLKS
               MOVE CPT-STRN            TO DBC-GLS-NOMC IN OPC-FLD
               MOVE DBC-NUM-ICLI IN DBC TO DBC-NUM-ICLI IN OPC-FLD
               MOVE DBC-VRF-ICLI IN DBC TO DBC-VRF-ICLI IN OPC-FLD
               MOVE DBC-IND-ICLI IN DBC TO DBC-IND-ICLI IN OPC-FLD
               MOVE DBC-GLS-ICLI IN DBC TO DBC-GLS-ICLI IN OPC-FLD
               PERFORM BUS-DEU-DIR
               IF FIO-STAT-OKS
                   MOVE BUS-POR-CLTE TO BUS-POR-KEYS
                   MOVE RDC-CIC-IOPC IN RDC TO OPC-CIC-IOPC IN OPC
               ELSE
                   MOVE 'COL' TO MSG-COD-SIST
                   MOVE 'CLI    NODIR' TO MSG-COD-MENS
                   MOVE FIO-STAT-NEX TO FIO-STAT.
       FIN-ANL-KEY-OPC.
           EXIT.

       ANL-KEY-ALL SECTION.
       INI-ANL-KEY-ALL.
           PERFORM GET-CUR-ITR.
           IF NOT FIO-STAT-OKS
               MOVE 'COL' TO MSG-COD-SIST
               MOVE 'OPC    NOINT' TO MSG-COD-MENS
               GO TO FIN-ANL-KEY-ALL.
           PERFORM GET-NXT-ITR.
           IF SCR-IND-MITR = 'M'
               MOVE 'MULTIPLES'  TO ITR-COD-TINT IN OPC-FLD
           ELSE
               MOVE '00' TO PGM-STAT-ITR
               PERFORM PUT-ITR-OPC.
           PERFORM GET-CUR-COM.
           IF FIO-STAT-OKS
                MOVE '00' TO PGM-STAT-COM
                PERFORM GET-NXT-COM
                IF SCR-IND-MCOM = 'M'
                    MOVE 'MULTIPLES' TO COM-COD-TINT IN OPC-FLD
                ELSE
                    PERFORM PUT-COM-OPC
           ELSE
                MOVE SPACES TO MSG-COD-SIST
                MOVE SPACES TO MSG-COD-MENS
                MOVE ZEROES TO COM-SGV-TINT IN OPC-FLD
                MOVE SPACES TO COM-COD-TINT IN OPC-FLD.
           PERFORM GET-CUR-CYA.
           IF FIO-STAT-OKS
                MOVE '00' TO PGM-STAT-CYA
                PERFORM GET-NXT-CYA
                IF SCR-IND-MCYA = 'M'
                    MOVE 'M'          TO CYA-IND-TCYA IN OPC-FLD
                    MOVE MSG-GLS-DESC TO FRM-MEN2
                    MOVE SPACES TO MSG-COD-SIST
                    MOVE SPACES TO MSG-COD-MENS
                ELSE
                    PERFORM PUT-CYA-OPC
           ELSE
                MOVE SPACES TO MSG-COD-SIST
                MOVE SPACES TO MSG-COD-MENS
                MOVE SPACES TO CYA-IND-TCYA IN OPC-FLD
                MOVE SPACES TO CYA-CAI-ICYA IN OPC-FLD
                MOVE ZEROES TO CYA-IIC-ICYA IN OPC-FLD.
           MOVE OPC-CIC-IOPC IN OPC TO AUT-CIC-IOPC IN AUT.
           MOVE 'AUT'               TO AUT-NUM-ICAN IN AUT.
           MOVE 1                   TO AUT-NUM-ICYA IN AUT.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM COL-FIO-AUT.
           IF FIO-STAT-OKS
               MOVE '00' TO PGM-STAT-AUT
               PERFORM PUT-AUT-OPC
           ELSE
               MOVE SPACES TO MSG-COD-SIST
               MOVE SPACES TO MSG-COD-MENS
               MOVE ZEROES TO AUT-IIC-ICYA IN OPC-FLD
               MOVE SPACES TO AUT-CAI-ICYA IN OPC-FLD.
           PERFORM GET-CUR-ROV.
           IF FIO-STAT-OKS
                MOVE '00' TO PGM-STAT-ROV.
       FIN-ANL-KEY-ALL.
           EXIT.

       BUS-DEU-DIR SECTION.
       INI-BUS-DEU-DIR.
           MOVE SPACES              TO RDC-KEY-IRDC IN RDC.
           MOVE DBC-CAI-ICLI IN DBC TO RDC-CAI-ICLI IN RDC.
           MOVE DBC-IIC-ICLI IN DBC TO RDC-IIC-ICLI IN RDC.
           MOVE FIO-GET-NLS    TO FIO-CMND.
           IF FRM-FFLD = FRM-FFLD-PF7
               MOVE '999999999999' TO RDC-KEY-IDLC IN RDC
               MOVE 999 TO RDC-NUM-IDLC IN RDC
               MOVE FIO-GET-LEQ TO FIO-CMND.
       LUP-BUS-DEU-DIR.
           PERFORM COL-FIO-RDC.
           IF FIO-STAT-OKS AND
              RDC-CIC-ICLI IN RDC = DBC-CIC-ICLI IN DBC
               IF RDC-NUM-IDLC IN RDC = ZEROES
                   MOVE '00' TO PGM-STAT-RDC
                   MOVE ADR-RDC-REQA TO SCR-RQA2
                   MOVE 'IRDC' TO SCR-KEY-IRDC
                   GO TO FIN-BUS-DEU-DIR
               ELSE
                   IF FRM-FFLD = FRM-FFLD-PF7
                       MOVE FIO-GET-PRV TO FIO-CMND
                       GO TO LUP-BUS-DEU-DIR
                   ELSE
                       MOVE FIO-GET-NXT TO FIO-CMND
                       GO TO LUP-BUS-DEU-DIR
            ELSE
               MOVE SPACES TO SCR-RQA2
               MOVE FIO-STAT-NEX TO FIO-STAT.
       FIN-BUS-DEU-DIR.
           EXIT.

       GET-CUR-RDC SECTION.
       INI-GET-CUR-RDC.
           MOVE OPC-CAI-IOPC IN OPC TO RDC-CAI-IOPC IN RDC.
           MOVE OPC-IIC-IOPC IN OPC TO RDC-IIC-IOPC IN RDC.
           MOVE ZEROES              TO RDC-NUM-IDLC IN RDC.
           MOVE 'RDC-KEY-IDLC' TO FIO-AKEY.
           MOVE FIO-GET-KEY    TO FIO-CMND.
           PERFORM COL-FIO-RDC.
       FIN-GET-CUR-RDC.
           EXIT.

       GET-NXT-RDC SECTION.
       INI-GET-NXT-RDC.
           MOVE SPACES TO MSG-COD-SIST.
           MOVE SPACES TO MSG-COD-MENS.
           MOVE 'RDC-KEY-IDLC' TO FIO-AKEY.
           MOVE FIO-GET-NXT TO FIO-CMND.
           PERFORM COL-FIO-RDC.
           IF FIO-STAT-OKS AND
              OPC-CAI-IOPC IN OPC = RDC-CAI-IOPC IN RDC AND
              OPC-IIC-IOPC IN OPC = RDC-IIC-IOPC IN RDC AND
              RDC-NUM-IDLC IN RDC = ZEROES
                MOVE 'M' TO SCR-IND-MRDC
                MOVE 'COL'          TO MSG-COD-SIST
                MOVE 'OPC    MDDIR' TO MSG-COD-MENS
                PERFORM GET-MSG
           ELSE
                MOVE SPACES TO SCR-IND-MRDC
                PERFORM GET-CUR-RDC.
       FIN-GET-NXT-RDC.
           EXIT.

       GET-CUR-ITR SECTION.
       INI-GET-CUR-ITR.
           MOVE 'ITR-KEY-IICG' TO FIO-AKEY.
           MOVE OPC-CIC-IOPC IN OPC TO ITR-CIC-IOPC IN ITR.
           MOVE ZEROES              TO ITR-NUM-ICAN IN ITR.
           MOVE SPACES              TO ITR-CIC-IOPV IN ITR
           MOVE ZEROES              TO ITR-NUM-IVCT IN ITR
           MOVE 'INT'               TO ITR-IND-TTAS IN ITR.
           MOVE ZEROES              TO ITR-FEC-FINI IN ITR.
           MOVE FIO-GET-NLS TO FIO-CMND.
           PERFORM COL-FIO-ITR.
           IF NOT ( FIO-STAT-OKS AND
                    ITR-CIC-IOPC IN ITR = OPC-CIC-IOPC IN OPC AND
                    ITR-NUM-ICAN IN ITR = ZEROES              AND
                    ITR-CIC-IOPV IN ITR = SPACES              AND
                    ITR-NUM-IVCT IN ITR = ZEROES              AND
                    ITR-IND-TTAS IN ITR = 'INT'  )
               MOVE '23' TO FIO-STAT.
       FIN-GET-CUR-ITR.
           EXIT.

       GET-NXT-ITR SECTION.
       INI-GET-NXT-ITR.
           MOVE 'ITR-KEY-IICG' TO FIO-AKEY.
           MOVE FIO-GET-NXT TO FIO-CMND.
           PERFORM COL-FIO-ITR.
           IF FIO-STAT-OKS                              AND
              ITR-CIC-IOPC IN ITR = OPC-CIC-IOPC IN OPC AND
              ITR-NUM-ICAN IN ITR = ZEROES              AND
              ITR-CIC-IOPV IN ITR = SPACES              AND
              ITR-NUM-IVCT IN ITR = ZEROES              AND
              ITR-IND-TTAS IN ITR = 'INT'
                MOVE 'M' TO SCR-IND-MITR
           ELSE
                MOVE SPACES TO SCR-IND-MITR
                PERFORM GET-CUR-ITR.
       FIN-GET-NXT-ITR.
           EXIT.

       GET-CUR-COM SECTION.
       INI-GET-CUR-COM.
           MOVE 'COM-KEY-IICG' TO FIO-AKEY.
           MOVE OPC-CIC-IOPC IN OPC TO COM-CIC-IOPC IN COM.
           MOVE ZEROES              TO COM-NUM-ICAN IN COM.
           MOVE SPACES              TO COM-CIC-IOPV IN COM.
           MOVE ZEROES              TO COM-NUM-IVCT IN COM.
           MOVE 'COM'               TO COM-IND-TTAS IN COM.
           MOVE ZEROES              TO COM-FEC-FINI IN COM.
           MOVE FIO-GET-NLS TO FIO-CMND.
           PERFORM COL-FIO-COM.
           IF NOT ( FIO-STAT-OKS AND
                    COM-CIC-IOPC IN COM = OPC-CIC-IOPC IN OPC AND
                    COM-NUM-ICAN IN COM = ZEROES              AND
                    COM-CIC-IOPV IN COM = SPACES              AND
                    COM-NUM-IVCT IN COM = ZEROES              AND
                    COM-IND-TTAS IN COM = 'COM' )
               MOVE '23' TO FIO-STAT.
       FIN-GET-CUR-COM.
           EXIT.

       GET-NXT-COM SECTION.
       INI-GET-NXT-COM.
           MOVE 'COM-KEY-IICG' TO FIO-AKEY.
           MOVE FIO-GET-NXT TO FIO-CMND.
           PERFORM COL-FIO-COM.
           IF FIO-STAT-OKS                              AND
              COM-CIC-IOPC IN COM = OPC-CIC-IOPC IN OPC AND
              COM-NUM-ICAN IN COM = ZEROES              AND
              COM-CIC-IOPV IN COM = SPACES              AND
              COM-NUM-IVCT IN COM = ZEROES              AND
              COM-IND-TTAS IN COM = 'COM'
                MOVE 'M' TO SCR-IND-MCOM
           ELSE
                MOVE SPACES TO SCR-IND-MCOM
                PERFORM GET-CUR-COM.
       FIN-GET-NXT-COM.
           EXIT.

       GET-CUR-CYA SECTION.
       INI-GET-CUR-CYA.
           MOVE 'CYA-KEY-ICYA' TO FIO-AKEY.
           MOVE OPC-CIC-IOPC IN OPC TO CYA-CIC-IOPC IN CYA.
           MOVE ZEROES              TO CYA-NUM-ICAN IN CYA.
           MOVE 1                   TO CYA-NUM-ICYA IN CYA.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM COL-FIO-CYA.
       FIN-GET-CUR-CYA.
           EXIT.

       GET-NXT-CYA SECTION.
       INI-GET-NXT-CYA.
           MOVE SPACES TO MSG-COD-SIST.
           MOVE SPACES TO MSG-COD-MENS.
           MOVE 'CYA-KEY-ICYA' TO FIO-AKEY.
           MOVE FIO-GET-NXT TO FIO-CMND.
           PERFORM COL-FIO-CYA.
           IF FIO-STAT-OKS                              AND
              OPC-CIC-IOPC IN OPC = CYA-CIC-IOPC IN CYA AND
              CYA-NUM-ICAN IN CYA = ZEROES
               MOVE 'M' TO SCR-IND-MCYA
               MOVE 'COL'         TO MSG-COD-SIST
               MOVE 'OPC    MCYA' TO MSG-COD-MENS
               PERFORM GET-MSG
           ELSE
               MOVE SPACES TO SCR-IND-MCYA
               PERFORM GET-CUR-CYA.
       FIN-GET-NXT-CYA.
           EXIT.

       GET-CUR-ROV SECTION.
       INI-GET-CUR-ROV.
           MOVE 'ROV-KEY-IROV' TO FIO-AKEY.
           MOVE OPC-CIC-IOPC IN OPC TO ROV-CIC-IOPC IN ROV.
           MOVE SPACES              TO ROV-CIC-IOPV IN ROV.
           MOVE ZEROES              TO ROV-NUM-IVCT IN ROV.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM COL-FIO-ROV.
       FIN-GET-CUR-ROV.
           EXIT.
      *
       LIQ-ROPC SECTION.
       INI-LIQ-ROPC.
           MOVE SPACES TO MSG-COD-MENS.
      *ALD/22-AUG-1988
      *Si es moneda Nacional transformar a Pesos
           MOVE 'TVAL' TO MSC-CIC-TMSC IN MSC.
           MOVE '0'    TO MSC-CIC-CMSC IN MSC.
           MOVE 'TAB' TO FIO-SIST.
           MOVE 'MSC-CIC-TABL' TO FIO-AKEY.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM GNS-FIO-MSC.
           IF NOT FIO-STAT-OKS
               MOVE SPACES TO MSC-COD-CMSC IN MSC.
           MOVE WSS-IND-TMMX IN WSS-VARI TO WSS-IND-TMON IN WSS-VARI.
           MOVE OPC-VAL-CRED IN OPC-FLD  TO WSS-VAL-CRED IN WSS-VARI.
           IF OPC-MSC-TVOC IN OPC-FLD = MSC-COD-CMSC IN MSC
               MOVE WSS-IND-TMMN IN WSS-VARI TO WSS-IND-TMON IN WSS-VARI
               MOVE OPC-COD-VCOC IN OPC-FLD TO TAB-COD-CTAB IN TAB
               MOVE '0999  '                TO TAB-CIC-CTAB IN TAB
               MOVE OPC-NUM-DCOL IN OPC-FLD TO TAB-NUM-DTRN IN TAB
               MOVE OPC-NUM-MCOL IN OPC-FLD TO TAB-NUM-MTRN IN TAB
               MOVE OPC-NUM-SCOL IN OPC-FLD TO TAB-NUM-STRN IN TAB
               MOVE OPC-NUM-ACOL IN OPC-FLD TO TAB-NUM-ATRN IN TAB
               PERFORM GET-VCAM
               IF MSG-COD-MENS IN MSG NOT > SPACES
                   MULTIPLY CAM-SGV-VCAM IN CAM BY OPC-VAL-CRED IN
                            OPC-FLD GIVING WSS-VAL-CRED IN WSS-VARI
               ELSE
                   IF MSG-COD-MENS IN MSG = 'CODVCAMEQL'
                       MOVE 1 TO CAM-SGV-VCAM IN CAM
                       MOVE SPACES TO MSG-COD-MENS IN MSG
                       MOVE OPC-VAL-CRED IN OPC-FLD TO WSS-VAL-CRED IN
                                                       WSS-VARI
                   ELSE
                       GO TO MSG-LIQ-ROPC.
      *
      *Valor del Seguro
           MOVE 'COL' TO TAB-COD-SIST FIO-SIST.
           MOVE 'SDG' TO TAB-COD-TTAB IN TAB.
           MOVE OPC-COD-SEGD IN OPC-FLD TO TAB-COD-CTAB IN TAB.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM GNS-FIO-TAB.
           IF NOT FIO-STAT-OKS
               MOVE 'CODSEGDNEX' TO MSG-COD-MENS
               MOVE OPC-COD-SEGD IN OPC-FLD TO FRM-MEN2
               GO TO MSG-LIQ-ROPC.

           IF TAB-CIC-CTAB IN TAB NOT = 'I'
               MOVE ZEROES TO OPC-VAL-SEGD IN OPC-FLD.

      *Valor de Comision
           MOVE 'COL' TO TAB-COD-SIST FIO-SIST.
           MOVE 'COM' TO TAB-COD-TTAB IN TAB.
           MOVE COM-COD-TINT IN OPC-FLD TO TAB-COD-CTAB IN TAB.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM GNS-FIO-TAB.
           IF NOT FIO-STAT-OKS
               MOVE 'CODTCOMNEX' TO MSG-COD-MENS
               MOVE COM-COD-TINT IN OPC-FLD TO FRM-MEN2
               GO TO MSG-LIQ-ROPC.
           IF TAB-CIC-CTAB IN TAB = 'I'
               GO TO IMP-LIQ-ROPC.

           MOVE OPC-CAI-IOPC IN OPC-FLD TO ICG-CAI-IOPC IN ICG.
           MOVE OPC-IIC-IOPC IN OPC-FLD TO ICG-IIC-IOPC IN ICG.
           MOVE ZEROES                  TO ICG-NUM-ICAN IN ICG.
           MOVE SPACES                  TO ICG-CIC-IOPV IN ICG.
           MOVE ZEROES                  TO ICG-NUM-IVCT IN ICG.
           MOVE 'COM'                   TO ICG-IND-TTAS IN ICG.
           MOVE ZEROES                  TO ICG-FEC-FINI IN ICG.
           MOVE FIO-GET-NLS TO FIO-CMND.
           PERFORM COL-FIO-ICG.
           IF FIO-STAT-OKS AND
              ICG-CAI-IOPC IN ICG = OPC-CAI-IOPC IN OPC-FLD AND
              ICG-IIC-IOPC IN ICG = OPC-IIC-IOPC IN OPC-FLD AND
              ICG-NUM-ICAN IN ICG = ZEROES AND
              ICG-CIC-IOPV IN ICG = SPACES AND
              ICG-NUM-IVCT IN ICG = ZEROES AND
              ICG-IND-TTAS IN ICG = 'COM'
               MULTIPLY OPC-VAL-CRED IN OPC-FLD BY ICG-SGV-TINT IN ICG
                        GIVING OPC-SGV-VCOM IN OPC-FLD
           ELSE
               MOVE ZEROES TO OPC-SGV-VCOM IN OPC-FLD.

      *ALD
           IF WSS-IND-TMON IN WSS-VARI = WSS-IND-TMMN IN WSS-VARI
               MULTIPLY CAM-SGV-VCAM IN CAM BY OPC-SGV-VCOM IN
                        OPC-FLD GIVING OPC-SGV-VCOM IN OPC-FLD.

           DIVIDE OPC-SGV-VCOM IN OPC-FLD BY 100
               GIVING OPC-SGV-VCOM IN OPC-FLD.

           IF WSS-IND-TMON IN WSS-VARI = WSS-IND-TMMN IN WSS-VARI
               MOVE OPC-SGV-VCOM IN OPC-FLD TO PES-SGV-DECI IN PES-VARI
               PERFORM PES-SCTV
               MOVE PES-SGV-ENTE IN PES-VARI TO OPC-SGV-VCOM IN OPC-FLD.
      *
       IMP-LIQ-ROPC.
      *Valor del Impuesto y Gastos de Notario
           PERFORM OBT-VIMP-GNOT.
           IF MSG-COD-MENS > SPACES
               GO TO MSG-LIQ-ROPC.

      *Si como opera = 'B', valor capital debe ser 0
           IF WSS-OPEC = 'B'
               MOVE ZEROES TO WSS-VAL-CRED IN WSS-VARI.

           COMPUTE OPC-SGV-LIQU IN OPC-FLD =
      *ALD     OPC-VAL-CRED IN OPC-FLD - OPC-VAL-SEGD IN OPC-FLD -
               WSS-VAL-CRED IN WSS-VARI - OPC-VAL-SEGD IN OPC-FLD -
               OPC-VAL-GAST IN OPC-FLD - OPC-SGV-VCOM IN OPC-FLD -
               WSS-VAL-IMPU IN WSS-VARI - WSS-VAL-GNOT IN WSS-VARI.
      *ALD     WSS-VAL-IMPU IN WSS-VARI - WSS-VAL-GNOT IN WSS-VARI -
      *ALD     ROV-SGV-RENO IN OPC-FLD.
      *ALD
           IF WSS-IND-TMON IN WSS-VARI = WSS-IND-TMMN IN WSS-VARI
               MOVE OPC-SGV-LIQU IN OPC-FLD TO PES-SGV-DECI IN PES-VARI
               PERFORM PES-SCTV
               MOVE PES-SGV-ENTE IN PES-VARI TO OPC-SGV-LIQU IN OPC-FLD.
      *ALD
           IF WSS-OPEC NOT = 'B'
               SUBTRACT ROV-SGV-RENO IN OPC-FLD FROM OPC-SGV-LIQU 
                                                             IN OPC-FLD.
      *
           GO TO FIN-LIQ-ROPC.
       MSG-LIQ-ROPC.
           MOVE 'COL' TO MSG-COD-SIST.
           PERFORM GET-MSG.
       FIN-LIQ-ROPC.
           EXIT.

       OBT-VIMP-GNOT SECTION.
       INI-OBT-VIMP-GNOT.
           MOVE 0 TO WSS-VAL-IMPU IN WSS-VARI.
           MOVE 0 TO WSS-VAL-GNOT IN WSS-VARI.

           MOVE OPC-COD-TOOC IN OPC-FLD TO TOC-COD-TOCR IN TOC.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM COL-FIO-TOC.
           IF NOT FIO-STAT-OKS
               MOVE 'OPCTOOCNEX'        TO MSG-COD-MENS
               MOVE TOC-COD-TOCR IN TOC TO FRM-MEN2
               GO TO FIN-OBT-VIMP-GNOT.

           MOVE 'COL'               TO MSC-COD-SIST FIO-SIST.
           MOVE 'OPEC'              TO MSC-COD-TMSC IN MSC.
           MOVE TOC-MSC-OPEC IN TOC TO MSC-COD-CMSC IN MSC.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM GNS-FIO-MSC.
           IF NOT FIO-STAT-OKS
               MOVE 'TOCOPECNEX'        TO MSG-COD-MENS
               MOVE MSC-COD-TABL IN MSC TO FRM-MEN2
               GO TO FIN-OBT-VIMP-GNOT.

           MOVE MSC-CIC-CMSC IN MSC TO WSS-OPEC.

           IF MSC-CIC-CMSC IN MSC = 'D'
               MOVE 'N' TO WSS-INTR
           ELSE
               MOVE 'S' TO WSS-INTR.

           MOVE OPC-CAI-IOPC IN OPC-FLD TO UVD-CAI-IOPC IN UVD.
           MOVE OPC-IIC-IOPC IN OPC-FLD TO UVD-IIC-IOPC IN UVD.
           PERFORM BUS-UVD.
           IF MSG-COD-MENS > SPACES
               GO TO FIN-OBT-VIMP-GNOT.

           MOVE OPC-CAI-IOPC IN OPC-FLD TO DLC-CAI-IOPC IN DLC.
           MOVE OPC-IIC-IOPC IN OPC-FLD TO DLC-IIC-IOPC IN DLC.
           MOVE 0                       TO DLC-NUM-IDLC IN DLC.
           MOVE FIO-GET-NLS TO FIO-CMND.
       LUP-OBT-VIMP-GNOT.
           PERFORM COL-FIO-DLC.
           IF NOT ( FIO-STAT-OKS AND
                    DLC-CAI-IOPC IN DLC = OPC-CAI-IOPC IN OPC-FLD AND
                    DLC-IIC-IOPC IN DLC = OPC-IIC-IOPC IN OPC-FLD )
               GO TO FIN-OBT-VIMP-GNOT.
           MOVE OPC-COD-TOOC IN OPC-FLD TO OPC-COD-TOOC IN OPC.
           MOVE OPC-COD-AOOC IN OPC-FLD TO OPC-COD-AOOC IN OPC.

      *Leer miscelaneo TIMP en COL
           MOVE 'COL'               TO MSC-COD-SIST FIO-SIST.
           MOVE 'TIMP'              TO MSC-COD-TMSC IN MSC.
           MOVE DLC-MSC-TIMP IN DLC TO MSC-COD-CMSC IN MSC.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM GNS-FIO-MSC.
           IF NOT FIO-STAT-OKS
               MOVE 'DLCTIMPNEX'        TO MSG-COD-MENS
               MOVE MSC-COD-TABL IN MSC TO FRM-MEN2
               GO TO FIN-OBT-VIMP-GNOT.
           MOVE MSC-CIC-MSCL IN MSC TO WSS-CIC-IMPU.

      *Leer Tabla de Impuestos ( IMP )
           MOVE DLC-COD-TDOC IN DLC TO IMP-COD-TDOC IN IMP.
           MOVE DLC-MSC-TIMP IN DLC TO IMP-MSC-TIMP IN IMP.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM COL-FIO-IMP.
           IF NOT FIO-STAT-OKS
               MOVE 'IMP    NEX' TO MSG-COD-MENS
               MOVE IMP-COD-TABL IN IMP TO FRM-MEN2
               MOVE FIO-BCK-OUT TO FIO-CMND
               PERFORM COL-FIO-OPC
               GO TO FIN-OBT-VIMP-GNOT.

           IF WSS-INTR = 'S' AND DLC-COD-NOTC IN DLC > SPACES
      *Leer Tabla de Notarios ( NTR )
               MOVE DLC-COD-NOTC IN DLC TO NTR-COD-NOTA IN NTR
               MOVE OPC-COD-OFOC IN OPC TO NTR-COD-OFIC IN NTR
               MOVE DLC-COD-TDOC IN DLC TO NTR-COD-TDOC IN NTR
               MOVE FIO-GET-KEY TO FIO-CMND
               PERFORM COL-FIO-NTR
               IF NOT FIO-STAT-OKS
                   MOVE 'NTR    NEX' TO MSG-COD-MENS
                   MOVE NTR-COD-TABL IN NTR TO FRM-MEN2
                   MOVE FIO-BCK-OUT TO FIO-CMND
                   PERFORM COL-FIO-OPC
                   GO TO FIN-OBT-VIMP-GNOT
               ELSE
      *SUMA el Gasto del Notario
                   ADD NTR-VAL-GNOT IN NTR TO WSS-VAL-GNOT IN WSS-VARI
           ELSE
               MOVE 0 TO NTR-VAL-GNOT IN NTR.

      *Obtiene Diferencia de Meses entre Fecha de Colocacion  ( OPC ) y
      *                                  Fecha de Vencimiento ( DLC )
           IF DLC-NUM-IDLC IN DLC > UVD-IMAX IN UVD
               MOVE 'DLCFVENNODET'      TO MSG-COD-MENS
               MOVE DLC-KEY-IDLC IN DLC TO FRM-MEN2
               MOVE FIO-BCK-OUT TO FIO-CMND
               PERFORM COL-FIO-OPC
               GO TO FIN-OBT-VIMP-GNOT.
      *Desplazar fecha si hay analisis de feriado antes de calcular diferencia
           IF OPC-IND-AFER IN OPC-FLD = 'N'
               GO TO DFD-OBT-VIMP-GNOT.
           MOVE DLC-NUM-DVEN IN UVD(DLC-NUM-IDLC IN DLC) TO FEC-ITM1.
           MOVE DLC-NUM-MVEN IN UVD(DLC-NUM-IDLC IN DLC) TO FEC-ITM2.
           MOVE DLC-NUM-SVEN IN UVD(DLC-NUM-IDLC IN DLC) TO FEC-ITM3.
           MOVE DLC-NUM-AVEN IN UVD(DLC-NUM-IDLC IN DLC) TO FEC-ITM4.
           MOVE FEC-VHBL-S   TO FEC-VHBL.
           MOVE FEC-FBLK-N   TO FEC-FBLK.
           MOVE FEC-CHOY-N   TO FEC-CHOY.
           MOVE FEC-FORM-FEC TO FEC-FORM.
           MOVE FEC-VAL-FEC  TO FEC-CMND.
           PERFORM PRO-FEC.
           IF ( NOT FEC-STAT-OKS ) AND ( NOT FEC-STAT-FER )
               MOVE 'LIQDDIAIMPU' TO MSG-COD-MENS
               MOVE FIO-BCK-OUT   TO FIO-CMND
               PERFORM COL-FIO-OPC
               GO TO FIN-OBT-VIMP-GNOT.
           IF FEC-STAT-FER
               MOVE FEC-SIG-HBL TO FEC-CMND
               PERFORM PRO-FEC
               IF NOT FEC-STAT-OKS
                   MOVE 'LIQSHBLIMPU' TO MSG-COD-MENS
                   MOVE FIO-BCK-OUT TO FIO-CMND
                   PERFORM COL-FIO-OPC
                   GO TO FIN-OBT-VIMP-GNOT.
           MOVE FEC-ITM1 TO DLC-NUM-DVEN IN UVD(DLC-NUM-IDLC IN DLC).
           MOVE FEC-ITM2 TO DLC-NUM-MVEN IN UVD(DLC-NUM-IDLC IN DLC).
           MOVE FEC-ITM3 TO DLC-NUM-SVEN IN UVD(DLC-NUM-IDLC IN DLC).
           MOVE FEC-ITM4 TO DLC-NUM-AVEN IN UVD(DLC-NUM-IDLC IN DLC).
      *
       DFD-OBT-VIMP-GNOT.
           MOVE OPC-FEC-FCOL IN OPC-FLD                  TO FEC-FEC1.
           MOVE DLC-NUM-DVEN IN UVD(DLC-NUM-IDLC IN DLC) TO FEC-DEC2.
           MOVE DLC-NUM-MVEN IN UVD(DLC-NUM-IDLC IN DLC) TO FEC-MEC2.
           MOVE DLC-NUM-SVEN IN UVD(DLC-NUM-IDLC IN DLC) TO FEC-SEC2.
           MOVE DLC-NUM-AVEN IN UVD(DLC-NUM-IDLC IN DLC) TO FEC-AEC2.

           MOVE FEC-FORM-FEC TO FEC-FORM.
           MOVE FEC-DIF-MES  TO FEC-CMND.
      *Despues cambiar a CAL-FEC.
           PERFORM PRO-FEC.
           IF NOT FEC-STAT-OKS
               MOVE FIO-BCK-OUT TO FIO-CMND
               PERFORM COL-FIO-OPC
               GO TO FIN-OBT-VIMP-GNOT.
           IF FEC-NDIA > 0
               ADD 1 TO FEC-NMES.

           IF WSS-CIC-IMPU = 'I'
               GO TO CON-OBT-VIMP-GNOT.

      *Calcula el valor de impuesto para el DLC en particular
           MULTIPLY IMP-VAL-TIMP IN IMP BY FEC-NMES
               GIVING WSS-AUX-IMPU IN WSS-VARI.
           IF WSS-AUX-IMPU IN WSS-VARI > IMP-VAL-TOPE IN IMP
               MOVE IMP-VAL-TOPE IN IMP TO WSS-AUX-IMPU IN WSS-VARI.
      *ALD
           IF WSS-IND-TMON IN WSS-VARI = WSS-IND-TMMN IN WSS-VARI
               MULTIPLY CAM-SGV-VCAM IN CAM BY DLC-VAL-NDLC IN
                        DLC GIVING WSS-VAL-NDLC IN WSS-VARI
           ELSE
               MOVE DLC-VAL-NDLC IN DLC TO WSS-VAL-NDLC IN WSS-VARI.
      *    MULTIPLY WSS-AUX-IMPU IN WSS-VARI BY DLC-VAL-NDLC IN DLC
           MULTIPLY WSS-AUX-IMPU IN WSS-VARI BY WSS-VAL-NDLC IN WSS-VARI
               GIVING WSS-AUX-IMPU IN WSS-VARI.

           DIVIDE WSS-AUX-IMPU IN WSS-VARI BY 100
               GIVING WSS-AUX-IMPU IN WSS-VARI.
      *ALD
           IF WSS-IND-TMON IN WSS-VARI = WSS-IND-TMMN IN WSS-VARI
               MOVE WSS-AUX-IMPU IN WSS-VARI TO PES-SGV-DECI IN
                                                       PES-VARI
               PERFORM PES-SCTV
               MOVE PES-SGV-ENTE IN PES-VARI TO WSS-AUX-IMPU IN
                                                       WSS-VARI.

       CON-OBT-VIMP-GNOT.

      * DEBE IMPLEMENTARSE EL FIO-GET-NXT-UPD......para no leer nuevamente
      *Actualiza Valor de Impuesto en el DLC particular(si no es informado)
      *Acumula los valores de impuesto de cada DLC en WSS-VAL-IMPU
      *Actualiza Gasto de Notario  en el DLC particular
           MOVE FIO-GET-KEY-UPD TO FIO-CMND.
           PERFORM COL-FIO-DLC.
           IF NOT FIO-STAT-OKS
               MOVE 'DLC    NGKUP' TO MSG-COD-MENS
               MOVE DLC-KEY-IDLC IN DLC TO FRM-MEN2
               MOVE FIO-BCK-OUT TO FIO-CMND
               PERFORM COL-FIO-OPC
               GO TO FIN-OBT-VIMP-GNOT.

           IF WSS-CIC-IMPU NOT = 'I'
               MOVE WSS-AUX-IMPU IN WSS-VARI TO DLC-VAL-IMPU IN DLC.

           ADD DLC-VAL-IMPU IN DLC TO WSS-VAL-IMPU.

           IF WSS-INTR = 'S'
               MOVE NTR-VAL-GNOT IN NTR  TO DLC-VAL-GNOT IN DLC
           ELSE
               MOVE ZEROES               TO DLC-VAL-GNOT IN DLC.
      *ALD/14-APR-1989
           MOVE DLC-FEC-FVEN IN UVD(DLC-NUM-IDLC IN DLC) TO
                DLC-FEC-FMAV IN DLC.
      *

      *     PERFORM GET-FHOY.
      *     MOVE HOY-STP-ITRN TO DLC-STP-IINV IN DLC.

           MOVE OPC-NUM-DCOL IN OPC-FLD TO DLC-NUM-DDEV IN DLC.
           MOVE OPC-NUM-MCOL IN OPC-FLD TO DLC-NUM-MDEV IN DLC.
           MOVE OPC-NUM-SCOL IN OPC-FLD TO DLC-NUM-SDEV IN DLC.
           MOVE OPC-NUM-ACOL IN OPC-FLD TO DLC-NUM-ADEV IN DLC.

           MOVE FIO-MOD TO FIO-CMND.
           PERFORM COL-FIO-DLC.
           IF NOT FIO-STAT-OKS
               MOVE 'DLC    NOUPD' TO MSG-COD-MENS
               MOVE DLC-KEY-IDLC IN DLC TO FRM-MEN2
               MOVE FIO-BCK-OUT TO FIO-CMND
               PERFORM COL-FIO-OPC
               GO TO FIN-OBT-VIMP-GNOT.

           MOVE FIO-GET-NXT TO FIO-CMND.
           GO TO LUP-OBT-VIMP-GNOT.
       FIN-OBT-VIMP-GNOT.
           EXIT.

      *ALD/24-OCT-1988
       VRF-ROPC SECTION.
       INI-VRF-ROPC.
            PERFORM KEY-OPC-OPC.
      *JSS  MOVE FIO-GET-KEY-UPD TO FIO-CMND.
            MOVE FIO-GET-KEY     TO FIO-CMND.
            PERFORM COL-FIO-OPC.
            IF NOT FIO-STAT-OKS
                MOVE 'OPC    NOUPD' TO MSG-COD-MENS
                MOVE OPC-KEY-IOPC IN OPC TO FRM-MEN2
                MOVE FIO-BCK-OUT TO FIO-CMND
                PERFORM COL-FIO-OPC
                MOVE FRM-SUAR-MAL TO FRM-SUAR
                GO TO FIN-VRF-ROPC.
           MOVE FRM-SUAR-OKS TO FRM-SUAR.
      *JSS
           PERFORM CHK-VOPC.
           IF FRM-SUAR =  FRM-SUAR-MAL
               GO TO FIN-VRF-ROPC.
           PERFORM CHK-FPCI.
           IF FRM-SUAR =  FRM-SUAR-MAL
               GO TO FIN-VRF-ROPC.

           PERFORM PRO-DLC.
           IF FRM-SUAR =  FRM-SUAR-MAL
               GO TO FIN-VRF-ROPC.
           PERFORM PRO-RDC.
           IF FRM-SUAR =  FRM-SUAR-MAL
               GO TO FIN-VRF-ROPC.
           PERFORM PRO-EVC.
           IF FRM-SUAR =  FRM-SUAR-MAL
               GO TO FIN-VRF-ROPC.
           PERFORM PRO-VEN.
           IF FRM-SUAR =  FRM-SUAR-MAL
               GO TO FIN-VRF-ROPC.
           PERFORM PRO-ITR.
           IF FRM-SUAR =  FRM-SUAR-MAL
               GO TO FIN-VRF-ROPC.
           PERFORM PRO-CYA.
           IF FRM-SUAR =  FRM-SUAR-MAL
               GO TO FIN-VRF-ROPC.
      *No acepta ( temporalmente ) prorrogas,novaciones,renovaciones
      *junto con codigos de cargo/abono para cuenta corriente
      *DAD ini  21-JUL-1992
           IF POC-COD-COTO IN POC NOT = 'LAC' AND
      *DAD fin  21-JUL-1992
              OPC-IND-RENO IN OPC-FLD > SPACES AND
              WSS-OPC-LNBT > SPACES
               MOVE 'COL'          TO MSG-COD-SIST
               MOVE 'OPCPRGACCTNO' TO MSG-COD-MENS
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS
               MOVE FRM-SUAR-MAL TO FRM-SUAR
               GO TO FIN-VRF-ROPC.
      *
           PERFORM PRO-ROV.
           IF FRM-SUAR =  FRM-SUAR-MAL
                GO TO FIN-VRF-ROPC.
           PERFORM PRO-RCO.
           IF FRM-SUAR =  FRM-SUAR-MAL
                GO TO FIN-VRF-ROPC.
           IF OPC-IND-VSTR IN OPC = 'S'
               PERFORM SUM-EVC
               IF FRM-SUAR =  FRM-SUAR-MAL
                   GO TO FIN-VRF-ROPC
               ELSE
                   MOVE OPC-NUM-VCVG IN OPC TO OPC-NUM-VCVG IN OPC-FLD
           ELSE
               PERFORM ULT-VEN
               IF FRM-SUAR =  FRM-SUAR-MAL
                   GO TO FIN-VRF-ROPC
               ELSE
                   MOVE OPC-NUM-VCVG IN OPC TO OPC-NUM-VCVG IN OPC-FLD.
      *JSS  MOVE 'V' TO OPC-MSC-STAT IN OPC.
      *     MOVE FIO-MOD TO FIO-CMND.
      *     PERFORM COL-FIO-OPC.
      *     IF NOT FIO-STAT-OKS
      *         MOVE 'OPC    NOUPD' TO MSG-COD-MENS
      *         MOVE OPC-KEY-IOPC IN OPC TO FRM-MEN2
      *         MOVE FIO-BCK-OUT TO FIO-CMND
      *         PERFORM COL-FIO-OPC
      *         MOVE FRM-SUAR-MAL TO FRM-SUAR
      *         GO TO FIN-VRF-ROPC.
       FIN-VRF-ROPC.
           EXIT.

       CHK-VOPC SECTION.
       INI-CHK-VOPC.
           MOVE 'S' TO WSS-EPOC.

           PERFORM KEY-OPC-OPC.

           MOVE ZEROES     TO WSS-FMIV.
           MOVE '99999999' TO WSS-FMAV.
           MOVE ZEROES TO WSS-NEEV.

           MOVE OPC-COD-VCOC IN OPC TO POC-COD-VCOC IN POC.
           MOVE OPC-COD-TOOC IN OPC TO POC-COD-TOOC IN POC.
           MOVE OPC-COD-AOOC IN OPC TO POC-COD-AOOC IN POC.
           MOVE ZEROES              TO POC-NUM-IPOC IN POC.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM COL-FIO-POC.
           IF NOT FIO-STAT-OKS
      *        GO TO FIN-CHK-VOPC.
               MOVE 'N' TO WSS-EPOC
           ELSE
           IF POC-NUM-PMIN IN POC NOT > ZEROES AND
              POC-NUM-PMAX IN POC NOT > ZEROES
      *        GO TO FIN-CHK-VOPC.
               MOVE 'Z' TO WSS-EPOC.

           IF WSS-EPOC NOT = 'S'
               GO TO SK1-CHK-VOPC.

           IF POC-NUM-PMIN IN POC > ZEROES
               MOVE POC-IND-PMIN IN POC TO WSS-USEP
               MOVE POC-NUM-PMIN IN POC TO WSS-VSEP
               PERFORM CAL-FECH
               IF MSG-COD-MENS > SPACES
                   GO TO ERR-CHK-VOPC
               ELSE
                   MOVE FEC-ITM1 TO WSS-DMIV
                   MOVE FEC-ITM2 TO WSS-MMIV
                   MOVE FEC-ITM3 TO WSS-SMIV
                   MOVE FEC-ITM4 TO WSS-AMIV.

           IF POC-NUM-PMAX IN POC > ZEROES
               MOVE POC-IND-PMAX IN POC TO WSS-USEP
               MOVE POC-NUM-PMAX IN POC TO WSS-VSEP
               PERFORM CAL-FECH
               IF MSG-COD-MENS > SPACES
                   GO TO ERR-CHK-VOPC
               ELSE
                   MOVE FEC-ITM1 TO WSS-DMAV
                   MOVE FEC-ITM2 TO WSS-MMAV
                   MOVE FEC-ITM3 TO WSS-SMAV
                   MOVE FEC-ITM4 TO WSS-AMAV.

      *JSS-TRC
      *     MOVE 'FECHA MINIMA : ' TO DSP-GLS-MEN1.
      *     MOVE WSS-FMIV          TO DSP-GLS-MEN2.
      *     PERFORM GNS-DSP-MENS.
      *JSS-TRC
      *     MOVE 'FECHA MAXIMA : ' TO DSP-GLS-MEN1.
      *     MOVE WSS-FMAV          TO DSP-GLS-MEN2.
      *     PERFORM GNS-DSP-MENS.

           MOVE ZEROES TO WSS-FPPI WSS-FPPC.

       SK1-CHK-VOPC.

           MOVE ZEROES TO WSS-FUVC WSS-NEUV.
           MOVE 'N'    TO WSS-IVUV.
      *
           IF OPC-IND-VSTR IN OPC-FLD = 'S'
               PERFORM EVC-CHK-VOPC
           ELSE
               PERFORM VEN-CHK-VOPC.
           IF MSG-COD-MENS > SPACES
               GO TO ERR-CHK-VOPC.
      *
           IF WSS-EPOC = 'S'
               IF WSS-NEEV = ZEROES
                   MOVE 'OPCFFINFMIN<' TO MSG-COD-MENS
                   GO TO ERR-CHK-VOPC.

           IF WSS-ULTIMO-VENC-EN-ZERO
               MOVE 'OPCUVNCZERO=' TO MSG-COD-MENS
               MOVE WSS-NEUV TO FRM-MEN2
               GO TO ERR-CHK-VOPC.

           GO TO FIN-CHK-VOPC.
       ERR-CHK-VOPC.
           MOVE 'COL' TO MSG-COD-SIST.
           PERFORM GET-MSG.
           MOVE MSG-GLS-DESC TO FRM-MEN1.
           MOVE FRM-SUAR-MAL TO FRM-SUAR.
       FIN-CHK-VOPC.
           EXIT.

       EVC-CHK-VOPC SECTION.
       INI-EVC-CHK-VOPC.
           MOVE SPACES TO MSG-COD-MENS.
           MOVE OPC-CAI-IOPC IN OPC TO EVC-CAI-IOPC IN EVC.
           MOVE OPC-IIC-IOPC IN OPC TO EVC-IIC-IOPC IN EVC.
           MOVE ZEROES              TO EVC-NUM-IEVC IN EVC.
           MOVE FIO-GET-NLS TO FIO-CMND.
       LUP-EVC-CHK-VOPC.
           PERFORM COL-FIO-EVC.
           IF NOT ( FIO-STAT-OKS AND
                    EVC-CAI-IOPC IN EVC = OPC-CAI-IOPC IN OPC AND
                    EVC-IIC-IOPC IN EVC = OPC-IIC-IOPC IN OPC )
               GO TO FIN-EVC-CHK-VOPC.

           IF WSS-EPOC = 'N'
               GO TO SK2-EVC-CHK-VOPC.

           IF ( EVC-VAL-VENC IN EVC > ZEROES ) OR
              ( EVC-MSC-BCCR IN EVC NOT = 'I' )
               IF WSS-FPPC NOT > ZEROES OR
                  WSS-FPPC     > EVC-FEC-FPVC IN EVC
                   IF OPC-IND-AFER IN OPC-FLD = 'N'
                       MOVE EVC-FEC-FPVC IN EVC TO WSS-FPPC
                   ELSE
                       MOVE EVC-NUM-DPVC IN EVC TO FEC-ITM1
                       MOVE EVC-NUM-MPVC IN EVC TO FEC-ITM2
                       MOVE EVC-NUM-SPVC IN EVC TO FEC-ITM3
                       MOVE EVC-NUM-APVC IN EVC TO FEC-ITM4
                       PERFORM ANL-FRDO
                       IF MSG-COD-MENS NOT > SPACES
                           MOVE FEC-ITM1 TO WSS-DPPC
                           MOVE FEC-ITM2 TO WSS-MPPC
                           MOVE FEC-ITM3 TO WSS-SPPC
                           MOVE FEC-ITM4 TO WSS-APPC
                       ELSE
                           GO TO FIN-EVC-CHK-VOPC.
                       
           IF WSS-FPPI NOT > ZEROES OR
              WSS-FPPI     > EVC-FEC-FPVC IN EVC
                   IF OPC-IND-AFER IN OPC-FLD = 'N'
                       MOVE EVC-FEC-FPVC IN EVC TO WSS-FPPI
                   ELSE
                       MOVE EVC-NUM-DPVC IN EVC TO FEC-ITM1
                       MOVE EVC-NUM-MPVC IN EVC TO FEC-ITM2
                       MOVE EVC-NUM-SPVC IN EVC TO FEC-ITM3
                       MOVE EVC-NUM-APVC IN EVC TO FEC-ITM4
                       PERFORM ANL-FRDO
                       IF MSG-COD-MENS NOT > SPACES
                           MOVE FEC-ITM1 TO WSS-DPPI
                           MOVE FEC-ITM2 TO WSS-MPPI
                           MOVE FEC-ITM3 TO WSS-SPPI
                           MOVE FEC-ITM4 TO WSS-APPI
                       ELSE
                           GO TO FIN-EVC-CHK-VOPC.

       SK2-EVC-CHK-VOPC.

           IF EVC-NUM-VIGU IN EVC NOT > 1
               MOVE EVC-NUM-DPVC IN EVC TO FEC-ITM1
               MOVE EVC-NUM-MPVC IN EVC TO FEC-ITM2
               MOVE EVC-NUM-SPVC IN EVC TO FEC-ITM3
               MOVE EVC-NUM-APVC IN EVC TO FEC-ITM4
               GO TO HBL-EVC-CHK-VOPC.

           COMPUTE EVC-NUM-SEVE IN EVC = EVC-NUM-SEVE IN EVC *
                                       ( EVC-NUM-VIGU IN EVC - 1 ).
           IF EVC-IND-UTSV IN EVC = 'D'
               MOVE FEC-SUM-DIA         TO FEC-CMND
               MOVE EVC-NUM-SEVE IN EVC TO FEC-NDIA
           ELSE
           IF EVC-IND-UTSV IN EVC = 'M'
               MOVE FEC-SUM-MES         TO FEC-CMND
               MOVE EVC-NUM-SEVE IN EVC TO FEC-NMES
           ELSE
           IF EVC-IND-UTSV IN EVC = 'A'
               MOVE FEC-SUM-ANO         TO FEC-CMND
               MOVE EVC-NUM-SEVE IN EVC TO FEC-NANO
           ELSE
               MOVE 'EVCUTSVINV' TO MSG-COD-MENS
               GO TO FIN-EVC-CHK-VOPC.

           MOVE EVC-NUM-DPVC IN EVC TO FEC-ITM1.
           MOVE EVC-NUM-MPVC IN EVC TO FEC-ITM2.
           MOVE EVC-NUM-SPVC IN EVC TO FEC-ITM3.
           MOVE EVC-NUM-APVC IN EVC TO FEC-ITM4.
           MOVE FEC-FORM-FEC TO FEC-FORM.
           PERFORM PRO-FEC.
           IF NOT FEC-STAT-OKS
               MOVE 'CHKVOPCFSUM' TO MSG-COD-MENS
               GO TO FIN-EVC-CHK-VOPC.

           MOVE EVC-IND-UTSV IN EVC TO INT-IPER.
           MOVE EVC-NUM-DPVE IN EVC TO CVI-DVEN.
           PERFORM CHK-DIA-VEN.

      *JSS-TRC.
      *     MOVE 'UTSV,'             TO DSP-GLS-MENA.
      *     MOVE 'SEVE : '           TO DSP-GLS-MENB.
      *     MOVE EVC-IND-UTSV IN EVC TO DSP-GLS-MENC.
      *     MOVE EVC-NUM-SEVE IN EVC TO DSP-SV1-13V4.
      *     PERFORM GNS-DSP-MENS.

      *JSS-TRC.
      *     MOVE 'FECHA FINAL ESTRUC (S/FER) :' TO DSP-GLS-MENS.
      *     MOVE FEC-FECH                       TO DSP-GLS-MEN2.
      *     PERFORM GNS-DSP-MENS.

       HBL-EVC-CHK-VOPC.
           IF OPC-IND-AFER IN OPC-FLD = 'N'
               GO TO CON-EVC-CHK-VOPC.

           MOVE FEC-FBLK-N  TO FEC-FBLK.
           MOVE FEC-CHOY-N  TO FEC-CHOY.
           MOVE FEC-VHBL-S  TO FEC-VHBL.
           MOVE FEC-VAL-FEC TO FEC-CMND.
           MOVE FEC-FORM-FEC TO FEC-FORM.
           PERFORM PRO-FEC.
           IF ( NOT FEC-STAT-OKS ) AND ( NOT FEC-STAT-FER )
               MOVE 'CHKVOPCFVHBL' TO MSG-COD-MENS
               GO TO FIN-EVC-CHK-VOPC.

           IF NOT FEC-STAT-FER
               GO TO CON-EVC-CHK-VOPC.

           MOVE FEC-FORM-FEC TO FEC-FORM.
           MOVE FEC-SIG-HBL  TO FEC-CMND.
           PERFORM PRO-FEC.
           IF NOT FEC-STAT-OKS
               MOVE 'CHKVOPCFSHBL' TO MSG-COD-MENS
               GO TO FIN-EVC-CHK-VOPC.

       CON-EVC-CHK-VOPC.

           MOVE FEC-ITM1 TO WSS-DVNC.
           MOVE FEC-ITM2 TO WSS-MVNC.
           MOVE FEC-ITM3 TO WSS-SVNC.
           MOVE FEC-ITM4 TO WSS-AVNC.

      *JSS-TRC
      *     MOVE 'FECHA ESTRUCTURA : ' TO DSP-GLS-MEN1.
      *     MOVE WSS-FVNC              TO DSP-GLS-MEN2.
      *     PERFORM GNS-DSP-MENS.

           IF ( WSS-FVNC > WSS-FUVC ) OR ( WSS-FVNC = WSS-FUVC )
               IF WSS-FVNC > WSS-FUVC
                   MOVE WSS-FVNC            TO WSS-FUVC
                   MOVE EVC-NUM-IEVC IN EVC TO WSS-NEUV
                   IF ( EVC-MSC-BCCR IN EVC = 'I' ) AND
                      ( EVC-VAL-VENC IN EVC NOT > ZEROES )
                       MOVE 'Z' TO WSS-IVUV
                   ELSE
                       MOVE 'N' TO WSS-IVUV
               ELSE
               IF WSS-ULTIMO-VENC-EN-ZERO
                   IF ( EVC-MSC-BCCR IN EVC = 'I' ) AND
                      ( EVC-VAL-VENC IN EVC NOT > ZEROES )
                       MOVE 'Z' TO WSS-IVUV
                   ELSE
                       MOVE 'N' TO WSS-IVUV.

           IF WSS-EPOC = 'S'
               IF WSS-FVNC > WSS-FMAV
                   MOVE 'OPCFFINFMAX>' TO MSG-COD-MENS
                   GO TO FIN-EVC-CHK-VOPC.
           IF WSS-EPOC = 'S'
               IF WSS-FVNC NOT < WSS-FMIV
                   ADD 1 TO WSS-NEEV.

           MOVE FIO-GET-NXT TO FIO-CMND.
           GO TO LUP-EVC-CHK-VOPC.
       FIN-EVC-CHK-VOPC.
           EXIT.

       VEN-CHK-VOPC SECTION.
       INI-VEN-CHK-VOPC.
           MOVE ZEROES TO WSS-VAL-TVEN.
           MOVE SPACES TO MSG-COD-MENS.
           MOVE OPC-CAI-IOPC IN OPC TO VEN-CAI-IOPC IN VEN.
           MOVE OPC-IIC-IOPC IN OPC TO VEN-IIC-IOPC IN VEN.
           MOVE ZEROES              TO VEN-NUM-IVEN IN VEN.
           MOVE FIO-GET-NLS TO FIO-CMND.
       LUP-VEN-CHK-VOPC.
           PERFORM COL-FIO-VEN.
           IF NOT ( FIO-STAT-OKS AND
                    VEN-CAI-IOPC IN VEN = OPC-CAI-IOPC IN OPC AND
                    VEN-IIC-IOPC IN VEN = OPC-IIC-IOPC IN OPC )
               GO TO UVC-VEN-CHK-VOPC.

           ADD VEN-VAL-SCAP IN VEN TO WSS-VAL-TVEN.

           IF WSS-EPOC = 'N'
               GO TO SK2-VEN-CHK-VOPC.

           IF VEN-VAL-SCAP IN VEN > ZEROES
               IF WSS-FPPC NOT > ZEROES OR
                  WSS-FPPC     > VEN-FEC-FVEN IN VEN
                   MOVE VEN-FEC-FVEN IN VEN TO WSS-FPPC.
                       
           IF WSS-FPPI NOT > ZEROES OR
              WSS-FPPI     > VEN-FEC-FVEN IN VEN
               MOVE VEN-FEC-FVEN IN VEN TO WSS-FPPI.

       SK2-VEN-CHK-VOPC.
           MOVE VEN-FEC-FVEN IN VEN TO WSS-FVNC.

           IF ( WSS-FVNC > WSS-FUVC ) OR ( WSS-FVNC = WSS-FUVC )
               IF WSS-FVNC > WSS-FUVC
                   MOVE WSS-FVNC            TO WSS-FUVC
                   MOVE VEN-NUM-IVEN IN VEN TO WSS-NEUV
                   IF VEN-VAL-SCAP IN VEN NOT > ZEROES
                       MOVE 'Z' TO WSS-IVUV
                   ELSE
                       MOVE 'N' TO WSS-IVUV
               ELSE
               IF WSS-ULTIMO-VENC-EN-ZERO
                   IF VEN-VAL-SCAP IN VEN NOT > ZEROES
                       MOVE 'Z' TO WSS-IVUV
                   ELSE
                       MOVE 'N' TO WSS-IVUV.

           IF WSS-EPOC = 'S'
               IF WSS-FVNC > WSS-FMAV
                   MOVE 'OPCFFINFMAX>' TO MSG-COD-MENS
                   GO TO FIN-VEN-CHK-VOPC.

           MOVE FIO-GET-NXT TO FIO-CMND.
           GO TO LUP-VEN-CHK-VOPC.

       UVC-VEN-CHK-VOPC.
           IF WSS-VAL-TVEN > OPC-VAL-CRED IN OPC-FLD
               MOVE 'VENSUMAOPC>' TO MSG-COD-MENS
               GO TO FIN-VEN-CHK-VOPC.
           IF WSS-VAL-TVEN < OPC-VAL-CRED IN OPC-FLD
               MOVE 'VENSUMAOPC<' TO MSG-COD-MENS
               GO TO FIN-VEN-CHK-VOPC.
      *
           IF WSS-EPOC = 'S'
               IF WSS-FUVC < WSS-FMIV
                   MOVE ZEROES TO WSS-NEEV
               ELSE
                   MOVE 1      TO WSS-NEEV.
       FIN-VEN-CHK-VOPC.
           EXIT.

       CHK-FPCI SECTION.
       INI-CHK-FPCI.
           IF WSS-EPOC = 'N'
               GO TO FIN-CHK-FPCI.

           IF POC-NUM-MINC IN POC NOT > ZEROES AND
              POC-NUM-MAXC IN POC NOT > ZEROES AND
              POC-NUM-MINI IN POC NOT > ZEROES AND
              POC-NUM-MAXI IN POC NOT > ZEROES
               GO TO FIN-CHK-FPCI.

           MOVE ZEROES     TO WSS-FIPC WSS-FIPI.
           MOVE '99999999' TO WSS-FSPC WSS-FSPI.

           IF POC-NUM-MINC IN POC > ZEROES
               MOVE POC-IND-MINC IN POC TO WSS-USEP
               MOVE POC-NUM-MINC IN POC TO WSS-VSEP
               PERFORM CAL-FECH
               IF MSG-COD-MENS > SPACES
                   GO TO ERR-CHK-FPCI
               ELSE
                   MOVE FEC-ITM1 TO WSS-DIPC
                   MOVE FEC-ITM2 TO WSS-MIPC
                   MOVE FEC-ITM3 TO WSS-SIPC
                   MOVE FEC-ITM4 TO WSS-AIPC.

           IF POC-NUM-MAXC IN POC > ZEROES
               MOVE POC-IND-MAXC IN POC TO WSS-USEP
               MOVE POC-NUM-MAXC IN POC TO WSS-VSEP
               PERFORM CAL-FECH
               IF MSG-COD-MENS > SPACES
                   GO TO ERR-CHK-FPCI
               ELSE
                   MOVE FEC-ITM1 TO WSS-DSPC
                   MOVE FEC-ITM2 TO WSS-MSPC
                   MOVE FEC-ITM3 TO WSS-SSPC
                   MOVE FEC-ITM4 TO WSS-ASPC.

           IF POC-NUM-MINI IN POC > ZEROES
               MOVE POC-IND-MINI IN POC TO WSS-USEP
               MOVE POC-NUM-MINI IN POC TO WSS-VSEP
               PERFORM CAL-FECH
               IF MSG-COD-MENS > SPACES
                   GO TO ERR-CHK-FPCI
               ELSE
                   MOVE FEC-ITM1 TO WSS-DIPI
                   MOVE FEC-ITM2 TO WSS-MIPI
                   MOVE FEC-ITM3 TO WSS-SIPI
                   MOVE FEC-ITM4 TO WSS-AIPI.

           IF POC-NUM-MAXI IN POC > ZEROES
               MOVE POC-IND-MAXI IN POC TO WSS-USEP
               MOVE POC-NUM-MAXI IN POC TO WSS-VSEP
               PERFORM CAL-FECH
               IF MSG-COD-MENS > SPACES
                   GO TO ERR-CHK-FPCI
               ELSE
                   MOVE FEC-ITM1 TO WSS-DSPI
                   MOVE FEC-ITM2 TO WSS-MSPI
                   MOVE FEC-ITM3 TO WSS-SSPI
                   MOVE FEC-ITM4 TO WSS-ASPI.

           IF WSS-FPPC < WSS-FIPC
               MOVE 'EVCFPPCMINC<' TO MSG-COD-MENS
               GO TO ERR-CHK-FPCI
           ELSE
           IF WSS-FPPC > WSS-FSPC
               MOVE 'EVCFPPCMAXC>' TO MSG-COD-MENS
               GO TO ERR-CHK-FPCI.

           IF WSS-FPPI < WSS-FIPI
               MOVE 'EVCFPPIMINI<' TO MSG-COD-MENS
               GO TO ERR-CHK-FPCI
           ELSE
           IF WSS-FPPI > WSS-FSPI
               MOVE 'EVCFPPIMAXI>' TO MSG-COD-MENS
               GO TO ERR-CHK-FPCI.
           GO TO FIN-CHK-FPCI.
       ERR-CHK-FPCI.
           MOVE 'COL' TO MSG-COD-SIST.
           PERFORM GET-MSG.
           MOVE MSG-GLS-DESC TO FRM-MEN1.
           MOVE FRM-SUAR-MAL TO FRM-SUAR.
       FIN-CHK-FPCI.
           EXIT.

       CAL-FECH SECTION.
       INI-CAL-FECH.
           MOVE SPACES TO MSG-COD-MENS.
           IF WSS-USEP = 'D'
               MOVE WSS-VSEP    TO FEC-NDIA
               MOVE FEC-SUM-DIA TO FEC-CMND
           ELSE
           IF WSS-USEP = 'M'
               MOVE WSS-VSEP    TO FEC-NMES
               MOVE FEC-SUM-MES TO FEC-CMND
           ELSE
           IF WSS-USEP = 'A'
               MOVE WSS-VSEP    TO FEC-NANO
               MOVE FEC-SUM-ANO TO FEC-CMND
           ELSE
               MOVE 'INDUSEPINV' TO MSG-COD-MENS
               GO TO FIN-CAL-FECH.

           MOVE OPC-FEC-FCOL IN OPC-FLD TO FEC-FECH.
           MOVE FEC-FORM-FEC            TO FEC-FORM.
           PERFORM PRO-FEC.
           IF NOT FEC-STAT-OKS
               MOVE 'CALFECHFSUM' TO MSG-COD-MENS.
       FIN-CAL-FECH.
           EXIT.

       ANL-FRDO SECTION.
       INI-ANL-FRDO.
           MOVE SPACES TO MSG-COD-MENS.

           MOVE FEC-FBLK-N   TO FEC-FBLK.
           MOVE FEC-CHOY-N   TO FEC-CHOY.
           MOVE FEC-VHBL-S   TO FEC-VHBL.
           MOVE FEC-VAL-FEC  TO FEC-CMND.
           MOVE FEC-FORM-FEC TO FEC-FORM.
           PERFORM PRO-FEC.
           IF ( NOT FEC-STAT-OKS ) AND ( NOT FEC-STAT-FER )
               MOVE 'ANLFRDOFVHBL' TO MSG-COD-MENS
               GO TO FIN-ANL-FRDO.

           IF FEC-STAT-FER
               MOVE FEC-FORM-FEC TO FEC-FORM
               MOVE FEC-SIG-HBL  TO FEC-CMND
               PERFORM PRO-FEC
               IF NOT FEC-STAT-OKS
                   MOVE 'ANLFRDOFSHBL' TO MSG-COD-MENS
                   GO TO FIN-ANL-FRDO.

           MOVE SPACES TO MSG-COD-MENS.
       FIN-ANL-FRDO.
           EXIT.

       PRO-DLC SECTION.
       INI-PRO-DLC.
           MOVE ZEROES TO WSS-VAL-NDLC.
           MOVE OPC-CIC-IOPC IN OPC TO DLC-CIC-IOPC IN DLC.
           MOVE ZEROES              TO DLC-NUM-IDLC IN DLC.
           MOVE FIO-GET-NLS TO FIO-CMND.
           PERFORM COL-FIO-DLC.            
           IF NOT ( FIO-STAT-OKS AND
                    OPC-CIC-IOPC IN OPC = DLC-CIC-IOPC IN DLC )
               MOVE FRM-SUAR-MAL TO FRM-SUAR
               MOVE 'COL' TO MSG-COD-SIST
               MOVE 'OPC    NODLC' TO MSG-COD-MENS
               PERFORM GET-MSG

               MOVE MSG-GLS-DESC TO CPT-STR1
               MOVE MSG-GLS-DATA TO CPT-STR2
               PERFORM CPT-BLKS
               MOVE CPT-STRN     TO FRM-MENS

      *         STRING MSG-GLS-DESC
      *                MSG-GLS-DATA DELIMITED BY SIZE
      *         INTO FRM-MENS
               GO TO FIN-PRO-DLC.
       LUP-INP-DLC.
           ADD DLC-VAL-NDLC TO WSS-VAL-NDLC.
           MOVE FIO-GET-NXT TO FIO-CMND.
           PERFORM COL-FIO-DLC.
           IF FIO-STAT-OKS AND
              OPC-CIC-IOPC IN OPC = DLC-CIC-IOPC IN DLC
               GO TO LUP-INP-DLC.
           IF OPC-VAL-CRED IN OPC NOT = WSS-VAL-NDLC
               MOVE FRM-SUAR-MAL TO FRM-SUAR
               MOVE 'COL' TO MSG-COD-SIST
               MOVE 'VALCREDNDLC=' TO MSG-COD-MENS
               PERFORM GET-MSG
               MOVE SPACES TO WSS-MSG-STR
               MOVE OPC-VAL-CRED IN OPC TO WSS-NUM-FALF
               MOVE MSG-GLS-DESC IN MSG TO WSS-MSG-GLS-DESC
               MOVE WSS-VAL-NDLC        TO WSS-NUM-FEDT
               MOVE MSG-GLS-DATA IN MSG TO WSS-MSG-GLS-DATA
               MOVE WSS-MSG-STR TO CPT-STRN
               PERFORM CPT-BLKS
               MOVE CPT-STRN     TO FRM-MENS

      *         STRING WSS-NUM-FALF
      *                MSG-GLS-DESC
      *                WSS-NUM-FEDT
      *                MSG-GLS-DATA DELIMITED BY SIZE
      *         INTO FRM-MENS
               GO TO FIN-PRO-DLC.
       FIN-PRO-DLC.           
           EXIT.           

       PRO-RDC SECTION.
       INI-PRO-RDC.
           MOVE ZEROES TO WSS-NUM-PDIR.
           MOVE 'RDC-KEY-IDLC' TO FIO-AKEY.
           MOVE OPC-CIC-IOPC IN OPC TO RDC-CIC-IOPC IN RDC.
           MOVE ZEROES              TO RDC-NUM-IDLC IN RDC.
           MOVE FIO-GET-NLS TO FIO-CMND.
           PERFORM COL-FIO-RDC.
           IF NOT ( FIO-STAT-OKS AND
                    RDC-CIC-IOPC IN RDC = OPC-CIC-IOPC IN OPC AND
                    RDC-NUM-IDLC IN RDC = ZEROES ) 
               MOVE FRM-SUAR-MAL TO FRM-SUAR
               MOVE 'COL' TO MSG-COD-SIST
               MOVE 'OPC    NORDC' TO MSG-COD-MENS
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO CPT-STR1
               MOVE MSG-GLS-DATA TO CPT-STR2
               PERFORM CPT-BLKS
               MOVE CPT-STRN     TO FRM-MENS
      *         STRING MSG-GLS-DESC
      *                MSG-GLS-DATA DELIMITED BY SIZE
      *         INTO FRM-MENS
               GO TO FIN-PRO-RDC.
       LUP-INP-RDC.
           MOVE ZEROES TO WSS-NUM-PIND.
           ADD RDC-VAL-LIMD TO WSS-NUM-PDIR.
           MOVE ADR-RDC-REQA TO ADR-AUX-REQA.
           MOVE RDC-CIC-ICLI IN RDC TO WSS-CIC-ICLI.
           MOVE 'RDC-KEY-IDLC' TO FIO-AKEY.
           MOVE OPC-CIC-IOPC IN OPC TO RDC-CIC-IOPC IN RDC.
           MOVE 1                   TO RDC-NUM-IDLC IN RDC.
           MOVE FIO-GET-NLS TO FIO-CMND.
           PERFORM COL-FIO-RDC.
           IF ( FIO-STAT-OKS AND
                RDC-CIC-IOPC IN RDC = OPC-CIC-IOPC IN OPC )
                PERFORM VAL-DEU-IND.
           IF FRM-SUAR = FRM-SUAR-MAL
               GO TO FIN-PRO-RDC.
           MOVE ADR-AUX-REQA TO ADR-RDC-REQA.
           MOVE FIO-KDEF-S TO FIO-KDEF.
           MOVE FIO-GET-NXT TO FIO-CMND.
           PERFORM COL-FIO-RDC.
           IF FIO-STAT-OKS AND
               RDC-CIC-IOPC IN RDC = OPC-CIC-IOPC IN OPC AND
               RDC-NUM-IDLC IN RDC = ZEROES
               GO TO LUP-INP-RDC.
           IF WSS-NUM-PDIR < 100
               MOVE FRM-SUAR-MAL TO FRM-SUAR
               MOVE 'COL' TO MSG-COD-SIST
               MOVE 'NUMPDIR100<' TO MSG-COD-MENS
               PERFORM GET-MSG

               MOVE SPACES TO WSS-MSG-STR
               MOVE MSG-GLS-DESC IN MSG TO WSS-MSG-GLS-DESC
               MOVE WSS-NUM-PDIR TO WSS-NUM-FEDT
               MOVE MSG-GLS-DATA IN MSG TO WSS-MSG-GLS-DATA
               MOVE WSS-MSG-STR TO CPT-STRN
               PERFORM CPT-BLKS
               MOVE CPT-STRN     TO FRM-MENS

      *         STRING MSG-GLS-DESC
      *                WSS-NUM-FEDT
      *                MSG-GLS-DATA DELIMITED BY SIZE
      *         INTO FRM-MENS
               GO TO FIN-PRO-RDC.
       FIN-PRO-RDC.
           EXIT.

       PRO-EVC SECTION.
       INI-PRO-EVC.
      *     IF OPC-IND-VSTR IN OPC NOT = 'S'
      *        PERFORM GET-FST-EVC
      *        IF MSG-COD-MENS = 'OPC    NOEVC'
      *            GO TO FIN-PRO-EVC
      *        ELSE
      *            MOVE 'COL' TO MSG-COD-SIST
      *            MOVE 'OPC    SIEVC' TO MSG-COD-MENS
      *            MOVE FRM-SUAR-MAL TO FRM-SUAR
      *            PERFORM GET-MSG
      *            STRING MSG-GLS-DESC
      *                   MSG-GLS-DATA DELIMITED BY SIZE
      *            INTO FRM-MENS
      *            GO TO FIN-PRO-EVC.
           IF OPC-IND-VSTR IN OPC NOT = 'S'
                  GO TO FIN-PRO-EVC.
           PERFORM GET-FST-EVC.
           IF MSG-COD-MENS = 'OPC    NOEVC'
               MOVE 'COL' TO MSG-COD-SIST
               MOVE FRM-SUAR-MAL TO FRM-SUAR
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO CPT-STR1
               MOVE MSG-GLS-DATA TO CPT-STR2
               PERFORM CPT-BLKS
               MOVE CPT-STRN     TO FRM-MENS.

      *         STRING MSG-GLS-DESC
      *                MSG-GLS-DATA DELIMITED BY SIZE
      *         INTO FRM-MENS.
       FIN-PRO-EVC.
           EXIT.

       GET-FST-EVC SECTION.
       INI-GET-FST.
           MOVE SPACES TO MSG-COD-MENS.
           MOVE OPC-CIC-IOPC IN OPC TO EVC-CIC-IOPC IN EVC.
           MOVE ZEROES              TO EVC-NUM-IEVC IN EVC.
           MOVE FIO-GET-NLS TO FIO-CMND.
           PERFORM COL-FIO-EVC. 
           IF NOT ( FIO-STAT-OKS AND
                    OPC-CIC-IOPC IN OPC = EVC-CIC-IOPC IN EVC )
               MOVE 'OPC    NOEVC' TO MSG-COD-MENS.
       FIN-GET-FST-EVC.
           EXIT.

       PRO-VEN SECTION.
       INI-PRO-VEN.            
      *     IF OPC-IND-VSTR IN OPC = 'S'
      *        PERFORM GET-FST-VEN
      *        IF MSG-COD-MENS = 'OPC    NOVEN'
      *            GO TO FIN-PRO-VEN
      *        ELSE
      *            MOVE 'COL' TO MSG-COD-SIST
      *            MOVE 'OPC    SIVEN' TO MSG-COD-MENS
      *            MOVE FRM-SUAR-MAL TO FRM-SUAR
      *            PERFORM GET-MSG
      *            STRING MSG-GLS-DESC
      *                   MSG-GLS-DATA DELIMITED BY SIZE
      *            INTO FRM-MENS
      *            GO TO FIN-PRO-VEN.
           IF OPC-IND-VSTR IN OPC = 'S'
                  GO TO FIN-PRO-VEN.
           PERFORM GET-FST-VEN.
           IF MSG-COD-MENS = 'OPC    NOVEN'
               MOVE 'COL' TO MSG-COD-SIST
               PERFORM GET-MSG
               MOVE FRM-SUAR-MAL TO FRM-SUAR
               MOVE MSG-GLS-DESC TO CPT-STR1
               MOVE MSG-GLS-DATA TO CPT-STR2
               PERFORM CPT-BLKS
               MOVE CPT-STRN     TO FRM-MENS

      *         STRING MSG-GLS-DESC
      *                MSG-GLS-DATA DELIMITED BY SIZE
      *         INTO FRM-MENS
               GO TO FIN-PRO-VEN.
      *
           MOVE OPC-COD-TOOC IN OPC-FLD TO TOC-COD-TOCR IN TOC.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM COL-FIO-TOC.
           IF NOT FIO-STAT-OKS
               MOVE 'COL'        TO MSG-COD-SIST
               MOVE 'OPCTOOCNEX' TO MSG-COD-MENS
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC        TO FRM-MEN1
               MOVE TOC-COD-TOCR IN TOC TO FRM-MEN2
               GO TO FIN-PRO-VEN.
           MOVE 'COL'               TO MSC-COD-SIST FIO-SIST.
           MOVE 'OPEC'              TO MSC-COD-TMSC IN MSC.
           MOVE TOC-MSC-OPEC IN TOC TO MSC-COD-CMSC IN MSC.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM GNS-FIO-MSC.
           IF NOT FIO-STAT-OKS
               MOVE 'COL'        TO MSG-COD-SIST
               MOVE 'TOCOPECNEX' TO MSG-COD-MENS
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC        TO FRM-MEN1
               MOVE MSC-COD-TABL IN MSC TO FRM-MEN2
               GO TO FIN-PRO-VEN.
           MOVE MSC-CIC-CMSC IN MSC TO TOC-MSC-OPEC IN TOC.
      *
      * Valdra la pena contarlos ?
           MOVE 1 TO WSS-NUM-TVEN.
           IF TOC-MSC-OPEC IN TOC = 'D'
               MOVE VEN-VAL-FINA IN VEN TO WSS-VAL-TVEN
           ELSE
               MOVE VEN-VAL-CAPI IN VEN TO WSS-VAL-TVEN.
       LUP-PRO-VEN.
           MOVE FIO-GET-NXT TO FIO-CMND.
           PERFORM COL-FIO-VEN.
           IF NOT ( FIO-STAT-OKS AND
                    VEN-CIC-IOPC IN VEN = OPC-CIC-IOPC IN OPC )
               GO TO CON-PRO-VEN.
           ADD 1 TO WSS-NUM-TVEN.
           IF TOC-MSC-OPEC IN TOC = 'D'
               ADD VEN-VAL-FINA IN VEN TO WSS-VAL-TVEN
           ELSE
               ADD VEN-VAL-CAPI IN VEN TO WSS-VAL-TVEN.
           GO TO LUP-PRO-VEN.
       CON-PRO-VEN.
           MOVE OPC-CAI-IOPC IN OPC-FLD TO VIN-CAI-IOPC.
           MOVE OPC-IIC-IOPC IN OPC-FLD TO VIN-IIC-IOPC.
           MOVE ZEROES                  TO VIN-NUM-IDLC.
           PERFORM BUS-VIN.
           IF NOT FIO-STAT-OKS
               MOVE 'COL'        TO MSG-COD-SIST
               MOVE 'OPCTIC NEX' TO MSG-COD-MENS
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS
               MOVE FRM-SUAR-MAL TO FRM-SUAR
               GO TO FIN-PRO-VEN.
           IF ( ICG-COD-CVTI IN ICG NOT > SPACES ) AND
              ( WSS-VAL-TVEN NOT = OPC-VAL-CRED IN OPC )
               MOVE FRM-SUAR-MAL TO FRM-SUAR
               MOVE 'COL' TO MSG-COD-SIST
               MOVE 'OPC    TVEN' TO MSG-COD-MENS
               PERFORM GET-MSG

               MOVE SPACES TO WSS-MSG-STR
               MOVE OPC-VAL-CRED IN OPC TO WSS-NUM-FALF
               MOVE MSG-GLS-DESC IN MSG TO WSS-MSG-GLS-DESC
               MOVE WSS-VAL-TVEN        TO WSS-NUM-FEDT
               MOVE MSG-GLS-DATA IN MSG TO WSS-MSG-GLS-DATA
               MOVE WSS-MSG-STR TO CPT-STRN
               PERFORM CPT-BLKS
               MOVE CPT-STRN     TO FRM-MENS

      *         STRING WSS-NUM-FALF
      *                MSG-GLS-DESC
      *                WSS-NUM-FEDT
      *                MSG-GLS-DATA DELIMITED BY SIZE
      *         INTO FRM-MENS
               GO TO FIN-PRO-VEN.
       FIN-PRO-VEN.
           EXIT.
 
       GET-FST-VEN SECTION.
       INI-GET-FST-VEN.
           MOVE SPACES TO MSG-COD-MENS.
           MOVE OPC-CIC-IOPC IN OPC TO VEN-CIC-IOPC IN VEN.
           MOVE ZEROES              TO VEN-NUM-IVEN IN VEN.
           MOVE FIO-GET-NLS TO FIO-CMND.
           PERFORM COL-FIO-VEN.
           IF NOT ( FIO-STAT-OKS AND
                    VEN-CIC-IOPC IN VEN = OPC-CIC-IOPC IN OPC )
               MOVE 'COL' TO MSG-COD-SIST
               MOVE 'OPC    NOVEN' TO MSG-COD-MENS.
       FIN-GET-FST-VEN.
           EXIT.


       PRO-ITR SECTION.
       INI-PRO-ITR.
           MOVE OPC-CIC-IOPC IN OPC TO ITR-CIC-IOPC IN ITR.
           MOVE ZEROES TO ITR-NUM-ICAN IN ITR.

      * No se si esta bien
           MOVE SPACES TO ITR-KEY-IVCT IN ITR.

           MOVE SPACES TO ITR-IND-TTAS IN ITR.
           MOVE FIO-GET-NLS TO FIO-CMND.
           PERFORM COL-FIO-ITR.
           IF NOT ( FIO-STAT-OKS AND
                    ITR-CIC-IOPC IN ITR = OPC-CIC-IOPC IN OPC AND
                    ITR-NUM-ICAN IN ITR = ZEROES )
               MOVE FRM-SUAR-MAL TO FRM-SUAR
               MOVE 'COL' TO MSG-COD-SIST
               MOVE 'OPC    NOICG' TO MSG-COD-MENS
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO CPT-STR1
               MOVE MSG-GLS-DATA TO CPT-STR2
               PERFORM CPT-BLKS
               MOVE CPT-STRN     TO FRM-MENS.

      *         STRING MSG-GLS-DESC
      *                MSG-GLS-DATA DELIMITED BY SIZE
      *         INTO FRM-MENS.
       FIN-PRO-ITR.
           EXIT.

      *JSS 16-MAY-1991 15:32:57 ( para manejo de cuenta corriente )
       PRO-CYA SECTION.
       INI-PRO-CYA.
           MOVE SPACES TO WSS-OPC-CACC.
           MOVE SPACES TO WSS-OPC-LNBT.
           MOVE OPC-CIC-IOPC IN OPC TO CYA-CIC-IOPC IN CYA.
           MOVE ZEROES              TO CYA-NUM-ICAN IN CYA.
           MOVE ZEROES              TO CYA-NUM-ICYA IN CYA.
           MOVE FIO-GET-NLS TO FIO-CMND.
       LUP-PRO-CYA.
           PERFORM COL-FIO-CYA.
           IF NOT ( FIO-STAT-OKS AND
                    CYA-CIC-IOPC IN CYA = OPC-CIC-IOPC IN OPC AND
                    CYA-NUM-ICAN IN CYA = ZEROES )
      *Pregunta para averiguar si existe algun CYA
               IF WSS-OPC-CACC > SPACES
                   GO TO CON-PRO-CYA
               ELSE
                   MOVE 'OPC    NOCYA' TO MSG-COD-MENS
                   GO TO MSG-PRO-CYA.
      *BUS-MSC busca glosa de miscelaneo en tabla
           IF CYA-IND-TCYA IN CYA > SPACES
               MOVE 'TCYA'              TO MSC-COD-TMSC IN MSC
               MOVE CYA-IND-TCYA IN CYA TO MSC-COD-CMSC IN MSC
               MOVE 'TAB'       TO FIO-SIST
               MOVE FIO-GET-KEY TO FIO-CMND
               PERFORM GNS-FIO-MSC
               IF FIO-STAT-OKS
                   IF MSC-CIC-CMSC IN MSC = 'CC'
                       IF ( WSS-OPC-CACC > SPACES ) AND
                          ( WSS-OPC-CACC NOT = 'CC' )
                           MOVE 'CANTCYACC=<>' TO MSG-COD-MENS
                           GO TO MSG-PRO-CYA
                       ELSE
                           MOVE MSC-CIC-CMSC IN MSC TO WSS-OPC-CACC
                           IF MSC-COD-DAT1(2) NOT > SPACES
                               MOVE 'MSCTCYACCLB?' TO MSG-COD-MENS
                               MOVE MSC-COD-TABL IN MSC TO FRM-MEN2
                               GO TO MSG-PRO-CYA
                           ELSE
                           IF ( WSS-OPC-LNBT > SPACES      ) AND
                              ( WSS-OPC-LNBT NOT = MSC-COD-DAT1(2) )
                               MOVE 'CANTCYALB=<>' TO MSG-COD-MENS
                               GO TO MSG-PRO-CYA
                           ELSE
                               MOVE MSC-COD-DAT1(2) TO WSS-OPC-LNBT
                   ELSE
                       IF ( WSS-OPC-CACC > SPACES ) AND
                          ( WSS-OPC-CACC = 'CC' )
                           MOVE 'CANTCYACC=<>' TO MSG-COD-MENS
                           GO TO MSG-PRO-CYA
                       ELSE
                           MOVE MSC-CIC-CMSC IN MSC TO WSS-OPC-CACC
               ELSE
                   MOVE 'CYATCYANEX' TO MSG-COD-MENS
                   MOVE CYA-IND-TCYA IN CYA TO FRM-MEN2
                   GO TO MSG-PRO-CYA
           ELSE
               MOVE 'CYATCYABLK' TO MSG-COD-MENS
               MOVE CYA-KEY-ICYA IN CYA TO FRM-MEN2
               GO TO MSG-PRO-CYA.
           MOVE FIO-GET-NXT TO FIO-CMND.
           GO TO LUP-PRO-CYA.
       CON-PRO-CYA.
      *En el caso de prorrogas, renovacion o novacion, valida la consistencia
      *entre los tipos de cargo de la operacion y cancelaciones
           IF OPC-IND-RENO IN OPC NOT > SPACES
               GO TO FIN-PRO-CYA.
           PERFORM VAL-TCYA-OPC-CAN.
       MSG-PRO-CYA.
           IF MSG-COD-MENS > SPACES
               MOVE 'COL' TO MSG-COD-SIST
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MEN1
               MOVE FRM-SUAR-MAL TO FRM-SUAR
               GO TO FIN-PRO-CYA.
       FIN-PRO-CYA.
           EXIT.

       VAL-TCYA-OPC-CAN SECTION.
       INI-VAL-TCYA-OPC-CAN.
           MOVE SPACES TO MSG-COD-MENS.
           MOVE OPC-CIC-IOPC IN OPC TO ROV-CIC-IOPC IN ROV.
           MOVE SPACES              TO ROV-KEY-IVCT IN ROV.
           MOVE FIO-GET-NLS TO FIO-CMND.
       LUP-VAL-TCYA-OPC-CAN.
      *Lup para obtener todas las cancelaciones asociadas a la misma OPC
           PERFORM COL-FIO-ROV.
           IF NOT ( FIO-STAT-OKS AND
                    ROV-CIC-IOPC IN ROV = OPC-CIC-IOPC IN OPC )
               GO TO FIN-VAL-TCYA-OPC-CAN.
      *Leer cancelacion asociada al ROV
           MOVE ROV-KEY-IVCT IN ROV TO CAN-KEY-ICAN IN CAN.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM COL-FIO-CAN.
           IF NOT FIO-STAT-OKS
               MOVE 'ROV    CANNX' TO MSG-COD-MENS
               GO TO FIN-VAL-TCYA-OPC-CAN.
      *Buscar CYA asociado a la cancelacion ( es suficiente con buscar el 1ro )
           MOVE SPACES              TO CYA-KEY-ICYA IN CYA.
           MOVE CAN-KEY-ICAN IN CAN TO CYA-KEY-ICAN IN CYA.
           MOVE FIO-GET-NLS TO FIO-CMND.
           PERFORM COL-FIO-CYA.
           IF NOT ( FIO-STAT-OKS AND
                    CYA-KEY-ICAN IN CYA = CAN-KEY-ICAN IN CAN )
               GO TO NXT-VAL-TCYA-OPC-CAN.
      *Buscar CIC asociado al TCYA
      *DAD ini  21-JUL-1992
           IF POC-COD-COTO IN POC NOT = 'LAC' AND
      *DAD fin  21-JUL-1992
              CYA-IND-TCYA IN CYA > SPACES
               MOVE 'TAB'               TO FIO-SIST
               MOVE 'TCYA'              TO MSC-COD-TMSC IN MSC
               MOVE CYA-IND-TCYA IN CYA TO MSC-COD-CMSC IN MSC
               MOVE FIO-GET-KEY TO FIO-CMND
               PERFORM GNS-FIO-MSC
               IF FIO-STAT-OKS AND
                  ( ( MSC-CIC-CMSC IN MSC     = 'CC' AND
                      WSS-OPC-CACC        NOT = 'CC' ) OR
                    ( MSC-CIC-CMSC IN MSC NOT = 'CC' AND
                      WSS-OPC-CACC            = 'CC' ) )
                   MOVE 'OPCCANTCYACC' TO MSG-COD-MENS
                   GO TO FIN-VAL-TCYA-OPC-CAN.
       NXT-VAL-TCYA-OPC-CAN.
           MOVE FIO-GET-NXT TO FIO-CMND.
           GO TO LUP-VAL-TCYA-OPC-CAN.
       FIN-VAL-TCYA-OPC-CAN.
           EXIT.

       PRO-ROV SECTION.
       INI-PRO-ROV.
           IF OPC-IND-RENO IN OPC = SPACES
               GO TO FIN-PRO-ROV.
           MOVE OPC-CIC-IOPC IN OPC TO ROV-CIC-IOPC IN ROV.
      * No se si esta bien
           MOVE SPACES              TO ROV-CIC-IOPV IN ROV.
           MOVE ZEROES              TO ROV-NUM-IVCT IN ROV.
           MOVE FIO-GET-NLS TO FIO-CMND.
           PERFORM COL-FIO-ROV.
           IF NOT ( FIO-STAT-OKS AND
                    OPC-CIC-IOPC IN OPC = ROV-CIC-IOPC IN ROV )
               MOVE FRM-SUAR-MAL TO FRM-SUAR
               MOVE 'COL' TO MSG-COD-SIST
               MOVE 'OPC    NOROV' TO MSG-COD-MENS
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO CPT-STR1
               MOVE MSG-GLS-DATA TO CPT-STR2
               PERFORM CPT-BLKS
               MOVE CPT-STRN     TO FRM-MENS.

      *         STRING MSG-GLS-DESC
      *                MSG-GLS-DATA DELIMITED BY SIZE
      *         INTO FRM-MENS.
       FIN-PRO-ROV.
           EXIT.

       PRO-RCO SECTION.
       INI-PRO-RCO.
           MOVE OPC-COD-VCOC IN OPC TO POC-COD-VCOC IN POC.
           MOVE OPC-COD-TOOC IN OPC TO POC-COD-TOOC IN POC.
           MOVE OPC-COD-AOOC IN OPC TO POC-COD-AOOC IN POC.
           MOVE ZEROES              TO POC-NUM-IPOC IN POC.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM COL-FIO-POC.
           MOVE FIO-STAT TO PGM-STAT-POC.
           IF NOT PGM-STAT-POC-OKS
               GO TO FIN-PRO-RCO.

           MOVE ZEROES TO WSS-NUM-COTO.
           MOVE ZEROES TO WSS-NUM-ACTI.
           MOVE OPC-CIC-IOPC IN OPC TO RDC-CIC-IOPC IN RDC.
           MOVE ZEROES              TO RDC-NUM-IDLC IN RDC.
           MOVE 'RDC-KEY-IDLC' TO FIO-AKEY.
           MOVE FIO-GET-NLS    TO FIO-CMND.
           PERFORM COL-FIO-RDC.
           IF NOT ( FIO-STAT-OKS AND
                    RDC-CIC-IOPC IN RDC = OPC-CIC-IOPC IN OPC AND
                    RDC-NUM-IDLC IN RDC = ZEROES ) 
               MOVE 'COL'          TO MSG-COD-SIST
               MOVE 'OPC    NORDC' TO MSG-COD-MENS
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO CPT-STR1
               MOVE MSG-GLS-DATA TO CPT-STR2
               PERFORM CPT-BLKS
               MOVE CPT-STRN     TO FRM-MENS
               MOVE FRM-SUAR-MAL TO FRM-SUAR
      *         STRING MSG-GLS-DESC
      *                MSG-GLS-DATA DELIMITED BY SIZE
      *         INTO FRM-MENS
               GO TO FIN-PRO-RCO.

           IF POC-COD-ACTI IN POC NOT > SPACES
               MOVE 1 TO WSS-NUM-ACTI IN WSS-VARI.
      *DAD ini  21-JUL-1992
           IF POC-COD-COTO IN POC = 'LAC' OR
      *DAD fin  21-JUL-1992
              POC-COD-COTO IN POC NOT > SPACES
               MOVE 1 TO WSS-NUM-COTO IN WSS-VARI.
       LUP-INP-RDC.
           IF WSS-NUM-ACTI IN WSS-VARI NOT > ZEROES
               MOVE RDC-CIC-ICLI IN RDC TO DBC-CIC-ICLI IN DBC
               MOVE FIO-GET-KEY TO FIO-CMND
               PERFORM SGC-FIO-DBC
               PERFORM VAL-ACTI
               IF MSG-COD-MENS NOT > SPACES
                   MOVE 1 TO WSS-NUM-ACTI IN WSS-VARI.
           MOVE SPACES              TO RCO-KEY-IRCO IN RCO.
           MOVE RDC-CIC-ICLI IN RDC TO RCO-CIC-ICLI IN RCO.
           MOVE FIO-GET-NLS TO FIO-CMND.
       GET-NXT-RCO.
           IF WSS-NUM-COTO IN WSS-VARI > ZEROES
               GO TO LEE-NXT-RDC.
           PERFORM SGC-FIO-RCO.
           IF NOT ( FIO-STAT-OKS AND
                    RDC-CIC-ICLI IN RDC = RCO-CIC-ICLI IN RCO )
               GO TO LEE-NXT-RDC.
           PERFORM VAL-COTO.
           IF NOT ( MSG-COD-MENS > SPACES OR
                    RCO-MSC-STAT IN RCO = 'D' OR
                    RCO-MSC-STAT IN RCO = 'E' OR
                    RCO-COD-STAT IN RCO = 'ELI' )
               MOVE 1 TO WSS-NUM-COTO IN WSS-VARI.
           MOVE FIO-GET-NXT TO FIO-CMND
           GO TO GET-NXT-RCO.
       LEE-NXT-RDC.
           IF WSS-NUM-ACTI IN WSS-VARI > ZEROES AND
              WSS-NUM-COTO IN WSS-VARI > ZEROES
               GO TO FIN-PRO-RCO.
           MOVE 'RDC-KEY-IDLC' TO FIO-AKEY.
           MOVE FIO-GET-NXT    TO FIO-CMND.
           PERFORM COL-FIO-RDC.
           IF FIO-STAT-OKS AND
              RDC-CIC-IOPC IN RDC = OPC-CIC-IOPC IN OPC AND
              RDC-NUM-IDLC IN RDC = ZEROES
               GO TO LUP-INP-RDC.
           IF WSS-NUM-ACTI NOT > ZEROES
               MOVE 'COL'           TO MSG-COD-SIST
               MOVE 'CODACTISNOPLT' TO MSG-COD-MENS
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MEN1
               MOVE POC-COD-ACTI TO FRM-MEN2
               MOVE FRM-SUAR-MAL TO FRM-SUAR
               GO TO FIN-PRO-RCO.
           IF WSS-NUM-COTO NOT > ZEROES
               MOVE 'COL'           TO MSG-COD-SIST
               MOVE 'CODCOTOSNOPLT' TO MSG-COD-MENS
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MEN1
               MOVE POC-COD-COTO TO FRM-MEN2
               MOVE FRM-SUAR-MAL TO FRM-SUAR
               GO TO FIN-PRO-RCO.
       FIN-PRO-RCO.
           EXIT.

       SUM-EVC SECTION.
       INI-SUM-EVC.
           MOVE SPACES TO INT-CMSG.

      *JSS-TRC.
      *     MOVE 'INI-SUM-EVC' TO DSP-GLS-MENS.
      *     PERFORM GNS-DSP-MENS.

           MOVE ZEROES TO OPC-NUM-VCVG IN OPC.
           MOVE ZEROES TO WSS-VAL-TEVC.
           MOVE ZEROES TO WSS-VAL-TCAP.

           MOVE OPC-CIC-IOPC IN OPC TO EVC-CIC-IOPC IN EVC.
           MOVE ZEROES              TO EVC-NUM-IEVC IN EVC.
           MOVE FIO-GET-NLS TO FIO-CMND.
       LUP-SUM-EVC.

      *JSS-TRC.
      *     MOVE 'LUP-SUM-EVC' TO DSP-GLS-MEN1.
      *     MOVE WSS-VAL-TEVC      TO DSP-SV1-13V4.
      *     PERFORM GNS-DSP-MENS.

           PERFORM COL-FIO-EVC.
           IF NOT ( FIO-STAT-OKS AND
                    OPC-CIC-IOPC IN OPC = EVC-CIC-IOPC IN EVC )
               GO TO DIF-SUM-EVC.

      *Busca el CIC de EVC-MSC-TCVE en TAB CVC ( en sist COL )
           MOVE 'COL' TO TAB-COD-SIST FIO-SIST.
           MOVE 'CVC' TO TAB-COD-TTAB IN TAB.
           MOVE EVC-MSC-TCVE IN EVC TO TAB-COD-CTAB IN TAB.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM GNS-FIO-TAB.
           IF NOT FIO-STAT-OKS
               MOVE 'CICTCVENEX' TO INT-CMSG
               MOVE TAB-COD-TABL TO FRM-MEN2
               GO TO FIN-SUM-EVC.
           MOVE TAB-CIC-CTAB IN TAB TO WSS-MSC-TCVE IN WSS-VARI.

           IF EVC-VAL-VENC IN EVC > ZEROES
               IF WSS-MSC-TCVE IN WSS-VARI = 'CI' OR 'IO' OR 'IN'
                   MULTIPLY EVC-NUM-VIGU IN EVC BY EVC-VAL-VENC IN EVC
                     GIVING WSS-VAL-TCAP
                   ADD WSS-VAL-TCAP TO WSS-VAL-TEVC

      *JSS-TRC.
      *             MOVE WSS-MSC-TCVE TO DSP-GLS-MEN1
      *             MOVE WSS-VAL-TCAP TO DSP-SV1-13V4
      *             PERFORM GNS-DSP-MENS

               ELSE
               IF WSS-MSC-TCVE IN WSS-VARI = 'CE' OR 'FE'
                   ADD EVC-VAL-VENC IN EVC TO WSS-VAL-TEVC

      *JSS-TRC.
      *             MOVE WSS-MSC-TCVE        TO DSP-GLS-MEN1
      *             MOVE EVC-VAL-VENC IN EVC TO DSP-SV1-13V4
      *             PERFORM GNS-DSP-MENS

               ELSE
               IF WSS-MSC-TCVE IN WSS-VARI = 'IF'
      *JSS         PERFORM CHK-SUM-EIF
                   IF INT-CMSG > SPACES
                       GO TO FIN-SUM-EVC.

      *JSS IF WSS-MSC-TCVE IN WSS-VARI = 'CO'
      *        ADD EVC-NUM-VIGU IN EVC TO WSS-NUM-VCVG.

      *    IF WSS-MSC-TCVE IN WSS-VARI = 'FO'
      *JSS-TRC.
      *             MOVE 'CASO FO CON LLAVE : ' TO DSP-GLS-MEN1
      *             MOVE EVC-KEY-IEVC IN EVC    TO DSP-GLS-MEN2
      *             PERFORM GNS-DSP-MENS.

           ADD EVC-NUM-VIGU IN EVC TO OPC-NUM-VCVG IN OPC.
           MOVE FIO-GET-NXT TO FIO-CMND.
           GO TO LUP-SUM-EVC.

       DIF-SUM-EVC.
      *JSS-TRC.
      *     MOVE 'OPC-VAL-CRED'      TO DSP-GLS-MEN1.
      *     MOVE OPC-VAL-CRED IN OPC TO DSP-SV1-13V4.
      *     PERFORM GNS-DSP-MENS.
      *JSS-TRC.
      *     MOVE 'WSS-VAL-TEVC' TO DSP-GLS-MEN1.
      *     MOVE WSS-VAL-TEVC   TO DSP-SV1-13V4.
      *     PERFORM GNS-DSP-MENS.

           IF WSS-VAL-TEVC > OPC-VAL-CRED IN OPC
               MOVE 'EVCSUMAOPC>' TO INT-CMSG
               MOVE WSS-VAL-TEVC  TO WSS-NUM-FEDT
               MOVE WSS-NUM-FEDT  TO FRM-MEN2
               GO TO FIN-SUM-EVC.
      *
       CON-SUM-EVC.
           IF NOT PGM-STAT-POC-OKS
               GO TO FIN-SUM-EVC.
           IF ( POC-NUM-VMIN IN POC NOT > ZEROES OR 
                POC-NUM-VMIN IN POC NOT > OPC-NUM-VCVG IN OPC ) AND
              ( POC-NUM-VMAX IN POC NOT > ZEROES OR
                POC-NUM-VMAX IN POC NOT < OPC-NUM-VCVG IN OPC )
                 GO TO FIN-SUM-EVC.
           MOVE 'NUMVCVGNORNG' TO INT-CMSG.
           MOVE POC-NUM-VMIN IN POC     TO WSS-NUM-VAL1-EDT IN WSS-VARI.
           MOVE SPACES                  TO WSS-IND-DMA1     IN WSS-VARI.
           MOVE '-'                     TO WSS-GLS-GUI2     IN WSS-VARI.
           MOVE POC-NUM-VMAX IN POC     TO WSS-NUM-VAL2-EDT IN WSS-VARI.
           MOVE SPACES                  TO WSS-IND-DMA2     IN WSS-VARI.
           MOVE WSS-MEN2 IN WSS-VARI    TO FRM-MEN2.
           MOVE FRM-SUAR-MAL TO FRM-SUAR.

       FIN-SUM-EVC.
           IF INT-CMSG > SPACES
               MOVE 'COL' TO MSG-COD-SIST
               MOVE INT-CMSG TO MSG-COD-MENS
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MEN1
               MOVE FRM-SUAR-MAL TO FRM-SUAR.
       EXT-SUM-EVC.
           EXIT.

       ULT-VEN SECTION.
       INI-ULT-VEN.
           MOVE OPC-CIC-IOPC IN OPC TO VEN-CIC-IOPC IN VEN.
           MOVE 999 TO VEN-NUM-IVEN IN VEN.
           MOVE FIO-GET-LEQ TO FIO-CMND.
           PERFORM COL-FIO-VEN.
           IF NOT ( FIO-STAT-OKS AND
                    OPC-CIC-IOPC IN OPC = VEN-CIC-IOPC IN VEN )
               MOVE ZEROES TO VEN-NUM-IVEN IN VEN.
           MOVE VEN-NUM-IVEN IN VEN TO OPC-NUM-VCVG IN OPC.
      *     IF FIO-STAT-OKS AND
      *        OPC-CIC-IOPC IN OPC = VEN-CIC-IOPC IN VEN 
      *         IF VEN-VAL-SFIN IN VEN NOT > ZEROES
      *             MOVE FRM-SUAR-MAL TO FRM-SUAR
      *             MOVE 'COL' TO MSG-COD-SIST
      *             MOVE 'VALSFINULTZ' TO MSG-COD-MENS
      *             PERFORM GET-MSG
      *             MOVE MSG-GLS-DESC TO FRM-MENS.
       FIN-ULT-VEN.
           EXIT.

       VAL-DEU-IND SECTION.
       INI-VAL-DEU-IND.
           IF RDC-CIC-ICLI = WSS-CIC-ICLI
               MOVE RDC-CIC-ICLI IN RDC TO DBC-CIC-ICLI IN DBC
               MOVE FIO-GET-KEY TO FIO-CMND
               PERFORM SGC-FIO-DBC
               MOVE FRM-SUAR-MAL TO FRM-SUAR
               MOVE 'COL' TO MSG-COD-SIST
               MOVE 'CICICLIICLI=' TO MSG-COD-MENS
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO CPT-STR1
               MOVE MSG-GLS-DATA TO CPT-STR2
               PERFORM CPT-BLKS
               MOVE CPT-STRN     TO FRM-MENS

      *         STRING MSG-GLS-DESC
      *                MSG-GLS-DATA DELIMITED BY SIZE
      *         INTO FRM-MENS
               GO TO FIN-VAL-DEU-IND.
           ADD RDC-VAL-LIMD TO WSS-NUM-PIND.
           MOVE 'RDC-KEY-IDLC' TO FIO-AKEY.
           MOVE FIO-GET-NXT TO FIO-CMND.
           PERFORM COL-FIO-RDC.
           IF FIO-STAT-OKS AND
              RDC-CIC-IOPC IN RDC = OPC-CIC-IOPC IN OPC
                 GO TO INI-VAL-DEU-IND.
       FIN-VAL-DEU-IND.
           EXIT.

       VAL-ACTI SECTION.
       INI-VAL-ACTI.
           MOVE SPACES TO MSG-COD-MENS.
           MOVE SPACES TO WSS-COD-DIGT.
           IF POC-COD-ACTI IN POC > SPACES
               MOVE POC-COD-ACTI IN POC TO NUM-NUME
               MOVE NUM-ZERO-S TO NUM-ZERO
               MOVE NUM-SGNO-N TO NUM-SGNO
               MOVE 9 TO NUM-NENT
               MOVE 0 TO NUM-NDCM
               CALL 'GNSPVNUM' USING NUM-VARI
               IF NUM-STAT-OKS
                   MOVE 'TAB' TO TAB-COD-SIST
                   MOVE 'ACT' TO TAB-COD-TTAB IN TAB
                   MOVE POC-COD-ACTI IN POC TO TAB-COD-CTAB IN TAB
                   PERFORM BUS-TAB
                   IF MSG-COD-MENS > SPACES
                       MOVE NUM-NN9N TO WSS-NUM-DIGT
                       MOVE WSS-NUM-DIGT TO WSS-COD-DIGT
                   ELSE
                   IF POC-COD-ACTI IN POC NOT = DBC-COD-ACTI IN DBC 
                       MOVE 'CODACTINOPLT' TO MSG-COD-MENS
                       GO TO FIN-VAL-ACTI
                   ELSE
                       NEXT SENTENCE
               ELSE
                   IF POC-COD-ACTI IN POC NOT = DBC-COD-ACTI IN DBC 
                       MOVE 'CODACTINOPLT' TO MSG-COD-MENS
                       GO TO FIN-VAL-ACTI.
           IF WSS-COD-DIGT NOT > SPACES
               GO TO FIN-VAL-ACTI.
           MOVE 'TAB' TO TAB-COD-SIST
           MOVE 'ACT' TO TAB-COD-TTAB IN TAB
           MOVE DBC-COD-ACTI IN DBC TO TAB-COD-CTAB IN TAB
           PERFORM BUS-TAB
           PERFORM BUS-FAM VARYING WSS-I FROM 1 BY 1 UNTIL WSS-I > 10 OR
                           WSS-COD-DIGT = TAB-COD-DAT2 (WSS-I).
           IF WSS-I > 10
               MOVE 'CODACTINEFAM' TO MSG-COD-MENS
               GO TO FIN-VAL-ACTI.
       FIN-VAL-ACTI.
           EXIT.

       VAL-COTO SECTION.
       INI-VAL-COTO.
           MOVE SPACES TO MSG-COD-MENS.
           MOVE SPACES TO WSS-COD-DIGT.
           IF POC-COD-COTO IN POC > SPACES
               MOVE POC-COD-COTO IN POC TO NUM-NUME
               MOVE NUM-ZERO-S TO NUM-ZERO
               MOVE NUM-SGNO-N TO NUM-SGNO
               MOVE 3 TO NUM-NENT
               MOVE 0 TO NUM-NDCM
               CALL 'GNSPVNUM' USING NUM-VARI
               IF NUM-STAT-OKS
                   MOVE 'TAB' TO TAB-COD-SIST
                   MOVE 'TIO' TO TAB-COD-TTAB IN TAB
                   MOVE POC-COD-COTO IN POC TO TAB-COD-CTAB IN TAB
                   PERFORM BUS-TAB
                   IF MSG-COD-MENS > SPACES
                       MOVE NUM-NN9N TO WSS-NUM-DIGT
                       MOVE WSS-NUM-DIGT TO WSS-COD-DIGT
                   ELSE
                   IF RCO-COD-TOPR IN RCO NOT = POC-COD-COTO IN POC
                       MOVE 'CODCOTONOPLT' TO MSG-COD-MENS
                       GO TO FIN-VAL-COTO
                   ELSE
                       NEXT SENTENCE
               ELSE
                   IF RCO-COD-TOPR IN RCO NOT = POC-COD-COTO IN POC
                       MOVE 'CODCOTONOPLT' TO MSG-COD-MENS
                       GO TO FIN-VAL-COTO.
           IF WSS-COD-DIGT NOT > SPACES
               GO TO FIN-VAL-COTO.
           MOVE 'TAB' TO TAB-COD-SIST
           MOVE 'TIO' TO TAB-COD-TTAB IN TAB
           MOVE RCO-COD-TOPR IN RCO TO TAB-COD-CTAB IN TAB
           PERFORM BUS-TAB
           PERFORM BUS-FAM VARYING WSS-I FROM 1 BY 1 UNTIL WSS-I > 10 OR
                           WSS-COD-DIGT = TAB-COD-DAT2 (WSS-I).
           IF WSS-I > 10
               MOVE 'CODCOTONEFAM' TO MSG-COD-MENS
               GO TO FIN-VAL-COTO.
       FIN-VAL-COTO.
           EXIT.

       BUS-FAM SECTION.
       INI-BUS-FAM.
       FIN-BUS-FAM.
           EXIT.

      *ISP/ 23-JAN-1990
      * RECUPERACION DE LA(S) CANCELACION(ES) ASOCIADAS A LA OPERACION
       GET-ROV-NOV SECTION.
       INI-GET-ROV-NOV.
      * RECUPERA CANCELACION(NOV)  ASOCIADA A OPERACION
           MOVE OPC-CIC-IOPC IN OPC TO ROV-CIC-IOPC IN ROV.
           MOVE LOW-VALUES          TO ROV-KEY-IVCT IN ROV.
           MOVE '23' TO PGM-STAT-CAN.
           MOVE FIO-GET-NLS TO FIO-CMND.
       CIC-GET-ROV-NOV.
           PERFORM COL-FIO-ROV.
           IF NOT FIO-STAT-OKS
               MOVE FIO-STAT TO PGM-STAT-ROV
               GO TO FIN-GET-ROV-NOV.

           IF OPC-CIC-IOPC IN OPC NOT = ROV-CIC-IOPC IN ROV
               GO TO FIN-GET-ROV-NOV.

           IF ROV-IIC-IOPV IN ROV > ZEROES AND
              ROV-NUM-IVCT IN ROV > ZEROES
       
                MOVE FIO-STAT TO PGM-STAT-ROV
                MOVE ROV-KEY-IVCT IN ROV TO CAN-KEY-ICAN IN CAN
                MOVE FIO-GET-KEY TO FIO-CMND
                PERFORM COL-FIO-CAN
                MOVE FIO-STAT TO PGM-STAT-CAN
           ELSE
                MOVE FIO-GET-NXT TO FIO-CMND
                GO TO CIC-GET-ROV-NOV.
       FIN-GET-ROV-NOV.
           EXIT.

       GET-ROV-REN SECTION.
       INI-GET-ROV-REN.
      * RECUPERA CANCELACIONES (REN)  ASOCIADAS A OPERACION
      *    DEJA EN ZERO EN TOTAL DE CANCELACIONES QUE RENUEVAN LA OPERACION
           MOVE ZEROES TO WSS-TOT-RCAN.
           MOVE OPC-CIC-IOPC IN OPC TO ROV-CIC-IOPC IN ROV.
           MOVE LOW-VALUES          TO ROV-KEY-IVCT IN ROV.
           MOVE FIO-GET-NLS TO FIO-CMND.
      * ASUME QUE NO ENCONTRARA ROV'S
           MOVE '23' TO PGM-STAT-ROV.
       CIC-GET-ROV-REN.
           PERFORM COL-FIO-ROV.
           IF NOT FIO-STAT-OKS
               GO TO VRF-RCAN.

           IF OPC-CIC-IOPC IN OPC NOT = ROV-CIC-IOPC IN ROV
               GO TO VRF-RCAN.

           IF NOT ( ROV-IIC-IOPV IN ROV > ZEROES AND
                    ROV-NUM-IVCT IN ROV > ZEROES )
                       MOVE FIO-GET-NXT TO FIO-CMND
                       GO TO CIC-GET-ROV-REN
           ELSE       
                MOVE FIO-STAT TO PGM-STAT-ROV
                MOVE ROV-KEY-IVCT IN ROV TO CAN-KEY-ICAN IN CAN
                MOVE FIO-GET-KEY TO FIO-CMND
                PERFORM COL-FIO-CAN
                IF FIO-STAT-OKS AND
      *JSS 15-MAY-1991 20:41:00 ( agregado OR 'P' para manejo de cc )
                   ( CAN-MSC-STAT IN CAN = 'C' OR 'W' OR 'P' ) OR
                   ( OPC-MSC-STAT IN OPC = 'A' AND
                     CAN-MSC-STAT IN CAN = 'A' )
                       MOVE CAN-KEY-ICAN TO RCAN-CAN-KEY-ICAN
                       ADD 1 TO WSS-TOT-RCAN
      *                 ADD ROV-SGV-RENO IN ROV TO WSS-SGV-RENO
                       ADD CAN-SGV-TREN IN CAN TO WSS-SGV-RENO
                       MOVE FIO-GET-NXT TO FIO-CMND
                       GO TO CIC-GET-ROV-REN.
       VRF-RCAN.
      * EN INGRESO VERIFICO QUE EXISTIERA AL MENOS UNA CANCELACION
      * CON STATUS 'C' OR 'W'
           IF WSS-TOT-RCAN = ZEROES
               GO TO FIN-GET-ROV-REN.

      *    RECUPERA ULTIMA CANCELACION CON STATUS 'C' O 'W'
           MOVE RCAN-CAN-KEY-ICAN TO CAN-KEY-ICAN.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM COL-FIO-CAN.
           MOVE FIO-STAT TO PGM-STAT-CAN.
       FIN-GET-ROV-REN.
           EXIT.
      *
       COPY SGCBGCLI.
       COPY SGCBFDBC.
      *
       COPY COLBFCAN.
       COPY COLBFRDC.
       COPY COLBFITR.
       COPY COLBFCOM.
       COPY COLBFCYA.
       COPY COLBFAUT.
       COPY COLBFROV.
       COPY COLBFDLC.
       COPY COLBFEVC.
       COPY COLBFVEN.
       COPY COLBFIMP.
       COPY COLBFICG.
       COPY COLBFNTR.
       COPY COLBFTOC.
       COPY COLBFPOC.
      *
       COPY COLBGUVD.
       COPY COLBGRNO.
      *
       COPY COLBGCLI.
       COPY COLBGVIN.
      *
       COPY GNSBVIDC.
       COPY GNSBPVRF.
       COPY GNSBVIND.
       COPY GNSBVMSC.
      *
       COPY GNSBGINT.
       COPY GNSBGCVI.
      *
       COPY GNSBGFEC.
       COPY GNSBGHOY.
       COPY GNSBGCPT.
       COPY GNSBGSTR.
       COPY GNSBBMSC.
       COPY GNSBBTAB.
       COPY GNSBFTAB.
      *ALD/22-AUG-1988
       COPY GNSBGCAM.
       COPY GNSBGPES.
       COPY GNSBVCOD.
       COPY GNSBVTAB.
      *
       COPY TABBBOFI.
       COPY TABBFOFI.
       COPY TABBBUSR.
       COPY TABBFUSR.
      *ALD/22-AUG-1988
       COPY TABBFCAM.
       COPY TABBVTDU.
       COPY TABBVOFI.
       COPY TABBVUSR.
       
      *
       COPY SGCBGDOM.
       COPY SGCBFRCO.
       COPY SGCBFOPE.
       COPY SGCBFRCD.
      *>>>>
