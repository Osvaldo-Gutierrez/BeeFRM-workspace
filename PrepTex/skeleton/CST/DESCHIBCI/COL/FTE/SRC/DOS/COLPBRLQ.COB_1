       IDENTIFICATION DIVISION.
      *=======================
       PROGRAM-ID.      COLPBRLQ.
       AUTHOR.          CONSIST.
       DATE-WRITTEN.    26-FEB-1993
      *PROGRAMA QUE RELIQUIDA EL VALOR FINAL DE UN PERIODO NUEVO
      *PARA AQUELLOS CREDITOS
       ENVIRONMENT DIVISION.
      *====================
       DATA DIVISION.
      *=============
       WORKING-STORAGE SECTION.
      *-----------------------
      *<<<< WSS_DTC
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-OPC-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-VEN-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-RCE-REQA==.
      *SMC
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==AUX-RCE-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-MSG-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-MSC-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-CAM-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-TAB-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-TOC-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-EVC-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-ICG-REQA==.
      *LRH ini 11-ABR-1994
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-DLC-REQA==.
      *LRH fin 11-ABR-1994
      *<<<< WSS
      *LRH ini 05-ABR-1994
       COPY COLBRDLC.
       COPY COLWGVIN.
      *LRH fin 05-ABR-1994
       COPY COLBROPC.
       COPY COLBRVEN.
       COPY COLBRRCE.
       COPY COLBRTOC.
       COPY COLBREVC.
       COPY COLBRICG.
       COPY COLBRRLQ.
       COPY TABBRCAM.
       COPY TABBROFI.
       COPY GNSBRTAB.
       COPY GNSBRMSG.
       COPY GNSBRMSC.
       COPY GNSWGRQA.
       COPY GNSWGUIB.
       COPY GNSWGELS.
       COPY GNSWVIDD.
       COPY GNSWCFIO.
       COPY GNSWVFIO.
       COPY GNSWGSYS.
       COPY GNSWGFEC.
       COPY GNSWGHOY.
       COPY GNSWGPES.
       COPY COLWGINT.
       COPY GNSWGCVI.

       01  WSS-VARI.

           03  WSS-FEC-FRCE.
               05  WSS-NUM-SRCE                   PIC 9(02).
               05  WSS-NUM-ARCE                   PIC 9(02).
               05  WSS-NUM-MRCE                   PIC 9(02).
               05  WSS-NUM-DRCE                   PIC 9(02).

           03  WSS-FEC-FPRO.
               05  WSS-NUM-DPRO                   PIC 9(02).
               05  WSS-NUM-MPRO                   PIC 9(02).
               05  WSS-NUM-SPRO                   PIC 9(02).
               05  WSS-NUM-APRO                   PIC 9(02).

           03  WSS-FEC-FINP.
               05  WSS-NUM-SINP                   PIC 9(02).
               05  WSS-NUM-AINP                   PIC 9(02).
               05  WSS-NUM-MINP                   PIC 9(02).
               05  WSS-NUM-DINP                   PIC 9(02).

           03 WSS-RCE-DISP.
              05 WSS-NUM-VCTE                     PIC 9(03).
              05 WSS-SGV-PRDO                     PIC 9(03).
              05 FILLER                           PIC X(02).

           03 WSS-NUM-PRDO                        PIC 9(03).
           03 WSS-NUM-NCUO                        PIC 9(03).
           03 WSS-VAL-SCAP                        PIC 9(11)V9(04).
           03 WSS-SGV-SCRR                        PIC 9(11)V9(04).
           03 WSS-VAL-VFIN                        PIC 9(11)V9(04).
           03 WSS-TAS-PRDO                        PIC 9(05)V9(04).

      *LRH ini 05-ABR-1994
           03  WSS-VDLC.
               05  WSS-DLC-MIPL                   PIC X(01).
               05  WSS-DLC-TINT COMP              PIC S9(03)V9(06).
               05  WSS-DLC-NDLC COMP-3            PIC 9(11)V9(04).
               05  WSS-VAL-SEVD COMP-3            PIC 9(11)V9(04).
           03  WSS-OPEC                           PIC X(08).
           03  WSS-IETV           VALUE SPACES    PIC X(01).
           03  WSS-IDLC         COMP              PIC 9(04).
           03  WSS-LDLC         COMP VALUE 50     PIC 9(04).
           03  WSS-AXSV                           PIC 9(04).
           03  WSS-AXUS                           PIC X(01).
           03  WSS-AXSP                           PIC 9(04).
           03  WSS-AXUP                           PIC X(01).
           03  WSS-AXTT.
               05 WSS-BCTI                        PIC X(01).
               05 WSS-PBTI                        PIC X(01).
               05 WSS-BPBT                        PIC X(01).
               05 WSS-SPBT                        PIC X(01).
               05 WSS-CVTI                        PIC X(03).
               05 WSS-TFPR                        PIC X(01).
               05 WSS-PREP                        PIC 9(03).
               05 WSS-UTPR                        PIC X(01).
           03  WSS-IETB              VALUE SPACES PIC X(01).
           03  WSS-TIMC                    COMP   PIC 9(03)V9(08).
           03  WSS-TTMC.
               05 WSS-TTM1                        PIC X(01).
               05 WSS-TTM2                        PIC X(01).
               05 WSS-TTM3                        PIC X(10).
           03  WSS-CMMC              VALUE SPACES PIC X(01).
           03  WSS-TMAX                    COMP   PIC 9(03)V9(08).
           03  WSS-TMXC                    COMP   PIC 9(03)V9(08).
           03  WSS-TS90                    COMP   PIC 9(03)V9(08).
           03  WSS-TB90                    COMP   PIC 9(03)V9(08).
           03  WSS-COD-VCOC.
               05 WSS-COD-VCO1                    PIC X(01).
               05 FILLER                          PIC X(05).
      *LRH fin 05-ABR-1994

       PROCEDURE DIVISION.
      *==================
       MAIN SECTION.
       INI-MAIN.
           COPY GNSBGEDB.
           MOVE 'COLPBRLQ' TO FIO-PROG.
           PERFORM GNS-BUS-IDD.
           PERFORM OPEN-FILE.
           PERFORM LEE-PARAM.
           PERFORM CLC-RCE.
           PERFORM CLOSE-FILE.
       FIN-MAIN.
           PERFORM GNS-PRO-END.

       OPEN-FILE SECTION.
       INI-OPEN-FILE.
           MOVE FIO-INP TO FIO-CMND.
           PERFORM COL-FIO-OPC.
           PERFORM COL-FIO-VEN.
           PERFORM COL-FIO-EVC.
           PERFORM COL-FIO-RCE.
      *LRH ini 05-ABR-1994
           PERFORM COL-FIO-DLC.
           PERFORM COL-FIO-ICG.
      *LRH fin 05-ABR-1994
           MOVE FIO-OUT TO FIO-CMND.
           PERFORM COL-FIO-RLQ.
      *
           IF NOT FIO-STAT-OKS
              DISPLAY 'PROBLEMAS AL ABRIR COLRLQ F.S.: '
                                             FIO-STAT.
       FIN-OPEN-FILE.
           EXIT.

       LEE-PARAM SECTION.
       INI-LEE-PARAM.
      *Captura Fecha de Proceso
           DISPLAY 'FECHA DE PROCESO ( DDMMAAAA ) : '.
           ACCEPT  WSS-FEC-FPRO IN WSS-VARI.
           DISPLAY WSS-FEC-FPRO IN WSS-VARI.
      *VAL-FEC Valida Fecha de Proceso
           DISPLAY WSS-FEC-FPRO IN WSS-VARI.
           MOVE WSS-FEC-FPRO    IN WSS-VARI TO FEC-FECH.
           MOVE FEC-FORM-FEC TO FEC-FORM.
           MOVE FEC-FBLK-N   TO FEC-FBLK.
           MOVE FEC-CHOY-LE  TO FEC-CHOY.
           MOVE FEC-VHBL-S   TO FEC-VHBL.
           MOVE FEC-VAL-FEC  TO FEC-CMND.
           PERFORM PRO-FEC.
           IF NOT FEC-STAT-OKS
               DISPLAY FEC-MENS
               PERFORM GNS-PRO-ABT.

           DISPLAY 'FIN VALIDACION DE PARAMETROS'.
           MOVE WSS-NUM-DPRO IN WSS-VARI TO WSS-NUM-DINP IN WSS-VARI.
           MOVE WSS-NUM-MPRO IN WSS-VARI TO WSS-NUM-MINP IN WSS-VARI.
           MOVE WSS-NUM-SPRO IN WSS-VARI TO WSS-NUM-SINP IN WSS-VARI.
           MOVE WSS-NUM-APRO IN WSS-VARI TO WSS-NUM-AINP IN WSS-VARI.
       FIN-LEE-PARAM.
           EXIT.

       CLC-RCE SECTION.
       INI-CLC-RCE.
      *SMC

      * OBTIENE FECHA DEL ULTIMO SIGUIENTE DIA NO HABIL
           MOVE WSS-NUM-DPRO TO FEC-ITM1.
           MOVE WSS-NUM-MPRO TO FEC-ITM2.
           MOVE WSS-NUM-SPRO TO FEC-ITM3.
           MOVE WSS-NUM-APRO TO FEC-ITM4.
           MOVE FEC-FORM-FEC TO FEC-FORM.
           MOVE FEC-SIG-HBL  TO FEC-CMND.
      *    PERFORM PRO-FEC.
           PERFORM CAL-FEC.
           MOVE FEC-FORM-FEC TO FEC-FORM.
           MOVE FEC-RST-DIA  TO FEC-CMND.
           MOVE 1            TO FEC-NDIA.
      *    PERFORM PRO-FEC.
           PERFORM CAL-FEC.
           MOVE FEC-ITM1 TO WSS-NUM-DRCE IN WSS-VARI.
           MOVE FEC-ITM2 TO WSS-NUM-MRCE IN WSS-VARI.
           MOVE FEC-ITM3 TO WSS-NUM-SRCE IN WSS-VARI.
           MOVE FEC-ITM4 TO WSS-NUM-ARCE IN WSS-VARI.
      *
           DISPLAY 'FECHA INICIO  RCE : ' WSS-FEC-FPRO IN WSS-VARI.
           DISPLAY 'FECHA TERMINO RCE : ' WSS-NUM-DRCE IN WSS-VARI
                                          WSS-NUM-MRCE IN WSS-VARI
                                          WSS-NUM-SRCE IN WSS-VARI
                                          WSS-NUM-ARCE IN WSS-VARI.

           MOVE 'RCE-KEY-DISP'           TO FIO-AKEY
           MOVE 'FECH'                   TO RCE-CAI-FVEN IN RCE
           MOVE WSS-NUM-DINP IN WSS-VARI TO RCE-NUM-DVEN IN RCE
           MOVE WSS-NUM-MINP IN WSS-VARI TO RCE-NUM-MVEN IN RCE
           MOVE WSS-NUM-SINP IN WSS-VARI TO RCE-NUM-SVEN IN RCE
           MOVE WSS-NUM-AINP IN WSS-VARI TO RCE-NUM-AVEN IN RCE

           MOVE FIO-GET-NLS TO FIO-CMND
           PERFORM COL-FIO-RCE.
           IF NOT ( FIO-STAT-OKS AND
                    RCE-FEC-FVEN IN RCE NOT > WSS-FEC-FRCE IN WSS-VARI
                    AND RCE-CAI-FVEN IN RCE = 'FECH' )
              DISPLAY 'NO HAY CREDITOS PARA RELIQUIDAR '
              GO TO FIN-CLC-RCE.

       LUP-CLC-RCE.

      *SMC
           MOVE ADR-RCE-REQA  TO AUX-RCE-REQA

           IF NOT (  RCE-NUM-IDLC IN RCE = 998 )
              GO TO NXT-CLC-RCE.


           MOVE RCE-CIC-IOPC IN RCE      TO OPC-CIC-IOPC IN OPC.
           MOVE FIO-GET-KEY              TO FIO-CMND.
           PERFORM COL-FIO-OPC.
           IF NOT FIO-STAT-OKS
              DISPLAY 'NO SE PUDO RELIQUIDAR  OPC :' OPC-CIC-IOPC IN OPC
              DISPLAY '% WARNING PGM CONTINUA '
              GO TO NXT-CLC-RCE.

           IF NOT ( OPC-VAL-SCRE IN OPC > ZEROS
                        AND OPC-MSC-STAT IN OPC = 'A' )
              GO TO NXT-CLC-RCE.

           MOVE RCE-GLS-DISP IN RCE TO WSS-RCE-DISP IN WSS-VARI


           IF OPC-NUM-IVEN IN OPC  NOT > WSS-NUM-VCTE IN WSS-VARI
              PERFORM PRO-MRA
              COMPUTE WSS-NUM-NCUO IN WSS-VARI =
                      OPC-NUM-VCOR IN OPC - WSS-NUM-VCTE IN WSS-VARI
              COMPUTE WSS-SGV-SCRR IN WSS-VARI =
                      OPC-VAL-SCRE IN OPC - WSS-VAL-SCAP IN WSS-VARI
      *        DISPLAY '**********************************'
      *        DISPLAY ' OPC : '  OPC-CIC-IOPC IN OPC
      *        DISPLAY 'NUMERO CUOTAS '   WSS-NUM-NCUO IN WSS-VARI
      *        DISPLAY 'SUMA SCAP MOR '   WSS-VAL-SCAP IN WSS-VARI
      *        DISPLAY 'SCRER         '   WSS-SGV-SCRR IN WSS-VARI
              PERFORM OBT-VFIN
              PERFORM RWT-RCE
              PERFORM WRT-CUP
           ELSE
              PERFORM PRO-NO-MRA.

       NXT-CLC-RCE.
      *SMC
           MOVE FIO-KDEF-S    TO FIO-KDEF
           MOVE AUX-RCE-REQA  TO ADR-RCE-REQA

           MOVE FIO-GET-NXT              TO FIO-CMND
           PERFORM COL-FIO-RCE.
           IF  ( FIO-STAT-OKS AND
                 RCE-FEC-FVEN IN RCE NOT > WSS-FEC-FRCE IN WSS-VARI
                 AND RCE-CAI-FVEN IN RCE = 'FECH' )
                 GO TO LUP-CLC-RCE.

       FIN-CLC-RCE.
           EXIT.

       PRO-MRA SECTION.
       INI-PRO-MRA.

           MOVE ZEROS               TO WSS-VAL-SCAP IN WSS-VARI
           MOVE OPC-CIC-IOPC IN OPC TO VEN-CIC-IOPC IN VEN
           IF OPC-IND-VSTR IN OPC = 'S'
              MOVE 1                   TO VEN-NUM-IVEN IN VEN
           ELSE
              MOVE OPC-NUM-IVEN IN OPC TO VEN-NUM-IVEN IN VEN.

           MOVE FIO-GET-NLS TO FIO-CMND
           PERFORM COL-FIO-VEN.
           IF NOT ( FIO-STAT-OKS AND
                   OPC-CIC-IOPC IN OPC  = VEN-CIC-IOPC IN VEN )
              DISPLAY '% ERROR NO EXISTE VEN ' VEN-CIC-IOPC IN VEN
              DISPLAY '% ERROR PARA IVEN     ' VEN-NUM-IVEN IN VEN
              GO TO FIN-PRO-MRA.

       LUP-PRO-MRA.

           IF NOT ( VEN-NUM-IVCT IN VEN NOT > WSS-NUM-VCTE IN WSS-VARI
                    AND OPC-CIC-IOPC IN OPC  = VEN-CIC-IOPC IN VEN )
              GO TO FIN-PRO-MRA.

      *     DISPLAY ' VCTO CORTE '  WSS-NUM-VCTE IN WSS-VARI
      *     DISPLAY 'VEN : ' VEN-KEY-IVEN IN VEN
      *     DISPLAY 'SCAP'   VEN-VAL-SCAP IN VEN
      *     DISPLAY 'SUMA '  WSS-VAL-SCAP IN WSS-VARI

           ADD VEN-VAL-SCAP IN VEN TO WSS-VAL-SCAP IN WSS-VARI.

       NXT-PRO-MRA.

           MOVE FIO-GET-NXT TO FIO-CMND
           PERFORM COL-FIO-VEN.
           IF FIO-STAT-OKS
              GO TO LUP-PRO-MRA.

       FIN-PRO-MRA.
           EXIT.

       PRO-NO-MRA SECTION.
       INI-PRO-NO-MRA.

           MOVE ZEROS               TO WSS-VAL-SCAP IN WSS-VARI
           MOVE OPC-CIC-IOPC IN OPC TO VEN-CIC-IOPC IN VEN
           IF OPC-IND-VSTR IN OPC = 'S'
              MOVE 1                   TO VEN-NUM-IVEN IN VEN
           ELSE
              MOVE OPC-NUM-IVEN IN OPC TO VEN-NUM-IVEN IN VEN.

           MOVE FIO-GET-NLS TO FIO-CMND
           PERFORM COL-FIO-VEN.
           IF NOT ( FIO-STAT-OKS AND
                    OPC-CIC-IOPC IN OPC = VEN-CIC-IOPC IN VEN )

              DISPLAY '% ERROR NO EXISTE VEN ' VEN-CIC-IOPC IN VEN
              DISPLAY '% ERROR PARA IVEN     ' VEN-NUM-IVEN IN VEN
              GO TO FIN-PRO-NO-MRA.

           IF VEN-VAL-SFIN IN VEN = ZEROS
              DISPLAY '% ERROR SFIN DE VEN POSEE VALOR '
                                       VEN-CIC-IOPC IN VEN
              GO TO FIN-PRO-NO-MRA.

           IF VEN-VAL-SFIN IN VEN NOT = VEN-VAL-FINA IN VEN
              PERFORM PRO-CAN-PAR
           ELSE
              PERFORM PRO-CAN-NO-PAR.


       FIN-PRO-NO-MRA.
           EXIT.

       PRO-CAN-PAR SECTION.
       INI-PRO-CAN-PAR.
           COMPUTE WSS-NUM-NCUO IN WSS-VARI =
                      OPC-NUM-VCOR IN OPC - OPC-NUM-IVEN IN OPC
           COMPUTE WSS-SGV-SCRR IN WSS-VARI =
                      OPC-VAL-SCRE IN OPC - VEN-VAL-SCAP IN VEN
      *     DISPLAY '**********************************'
      *     DISPLAY ' OPC : '  OPC-CIC-IOPC IN OPC
      *     DISPLAY 'NUMERO CUOTAS '   WSS-NUM-NCUO IN WSS-VARI
      *     DISPLAY 'SCRER         '   WSS-SGV-SCRR IN WSS-VARI
           PERFORM OBT-VFIN
           PERFORM RWT-RCE.
           PERFORM WRT-CUP.

       FIN-PRO-CAN-PAR.
           EXIT.

       PRO-CAN-NO-PAR SECTION.
       INI-PRO-CAN-NO-PAR.

           COMPUTE WSS-NUM-NCUO IN WSS-VARI =
               ( OPC-NUM-VCOR IN OPC - OPC-NUM-IVEN IN OPC ) + 1
           COMPUTE WSS-SGV-SCRR IN WSS-VARI = OPC-VAL-SCRE IN OPC
      *     DISPLAY '**********************************'
      *     DISPLAY ' OPC : '  OPC-CIC-IOPC IN OPC
      *     DISPLAY 'NUMERO CUOTAS '   WSS-NUM-NCUO IN WSS-VARI
      *     DISPLAY 'SCRER         '   WSS-SGV-SCRR IN WSS-VARI
           PERFORM OBT-VFIN
           PERFORM RWT-RCE.
      *REGRABA VCTO, SFIN=FINA=VFINAL, CAPI=SCAP=0
           MOVE FIO-GET-KEY-UPD TO FIO-CMND.
           PERFORM COL-FIO-VEN.
           IF NOT FIO-STAT-OKS
              DISPLAY '%ERROR AL LEER DE UPD VEN :' VEN-CIC-IOPC IN VEN
              DISPLAY '%ERROR PARA IVEN          :' VEN-NUM-IVEN IN VEN
              MOVE FIO-ULK-REC TO FIO-CMND
              PERFORM COL-FIO-VEN
              GO TO FIN-PRO-CAN-NO-PAR.

           MOVE WSS-VAL-VFIN IN WSS-VARI TO VEN-VAL-SFIN IN VEN
                                            VEN-VAL-FINA IN VEN.

           MOVE ZEROS                    TO VEN-VAL-SCAP IN VEN
                                            VEN-VAL-CAPI IN VEN.

           MOVE 'N'                      TO VEN-IND-CALC IN VEN.

           MOVE FIO-MOD   TO FIO-CMND.
           PERFORM COL-FIO-VEN.
           IF NOT FIO-STAT-OKS
              DISPLAY '%ERROR AL MOD VEN   :' VEN-CIC-IOPC IN VEN
              DISPLAY '%ERROR PARA IVEN    :' VEN-NUM-IVEN IN VEN
              MOVE FIO-ULK-REC TO FIO-CMND
              PERFORM COL-FIO-VEN
              GO TO FIN-PRO-CAN-NO-PAR.


      *FIN REGRABA VCTO, SFIN=FINA=VFINAL, CAPI=SCAP=0

           PERFORM WRT-CUP.

       FIN-PRO-CAN-NO-PAR.
           EXIT.


       OBT-VFIN SECTION.
       INI-OBT-VFIN.
           MOVE ZEROS               TO WSS-NUM-PRDO IN WSS-VARI
           MOVE OPC-CIC-IOPC IN OPC TO EVC-CIC-IOPC IN EVC
           MOVE 1                   TO EVC-NUM-IEVC IN EVC
           MOVE FIO-GET-KEY-UPD TO FIO-CMND.
           PERFORM COL-FIO-EVC.
           IF NOT FIO-STAT-OKS
              DISPLAY 'F.S AL HACER UN FIO-GKUP EN EVC : '
                                               FIO-STAT
              MOVE FIO-ULK-REC TO FIO-CMND
              PERFORM COL-FIO-EVC
              DISPLAY '%ERROR EVC NO SE ENCUENTRA PARA OPC'
                                            OPC-CIC-IOPC IN OPC
              PERFORM CLOSE-FILE
              GO TO GNS-PRO-ABT.

           IF EVC-IND-UTSV IN EVC = 'D'
              MOVE EVC-NUM-SEVE IN EVC   TO WSS-NUM-PRDO IN WSS-VARI
              ELSE
              IF EVC-IND-UTSV IN EVC = 'M'
                 COMPUTE WSS-NUM-PRDO IN WSS-VARI =
                     ( EVC-NUM-SEVE IN EVC  * 365 ) / 12
                 ELSE
                 IF EVC-IND-UTSV IN EVC = 'A'
                    COMPUTE WSS-NUM-PRDO IN WSS-VARI =
                       ( EVC-NUM-SEVE IN EVC  * 365 )
                 ELSE
                    DISPLAY '%ERROR U.T. SEP. ENTRE VCTO ERRO PARA EVC'
                                                 EVC-CIC-IOPC IN EVC
                    GO TO FIN-OBT-VFIN.

      * SE OBTIENE LA TASA DIARIA PARA OBTENER LA TASA PERIODO

      *JPA INI  9-APR-1994    (Memo 26/01/94 Pto.8)
      *JPA se usa fecha del despertador como fecha inicial
      *    para la rutina col-cal-int, as se asegura utilizar
      *    la tasa del nuevo periodo.
      *     MOVE WSS-NUM-DINP TO FEC-ITM1 INT-DUNO
      *     MOVE WSS-NUM-MINP TO FEC-ITM2 INT-MUNO
      *     MOVE WSS-NUM-SINP TO FEC-ITM3 INT-SUNO
      *     MOVE WSS-NUM-AINP TO FEC-ITM4 INT-AUNO
           MOVE RCE-NUM-DVEN IN RCE TO FEC-ITM1 INT-DUNO
           MOVE RCE-NUM-MVEN IN RCE TO FEC-ITM2 INT-MUNO
           MOVE RCE-NUM-SVEN IN RCE TO FEC-ITM3 INT-SUNO
           MOVE RCE-NUM-AVEN IN RCE TO FEC-ITM4 INT-AUNO
      *JPA fin  9-APR-1994

           MOVE FEC-FORM-FEC TO FEC-FORM
           MOVE FEC-SUM-DIA  TO FEC-CMND
           MOVE 1            TO FEC-NDIA
           PERFORM CAL-FEC.
           IF NOT FEC-STAT-OKS
              DISPLAY  FEC-MENS
              DISPLAY '%ERROR AL SUMAR UN DIA A FPRO '
              PERFORM CLOSE-FILE
              GO TO GNS-PRO-ABT.

           MOVE FEC-ITM1 TO INT-DDOS
           MOVE FEC-ITM2 TO INT-MDOS
           MOVE FEC-ITM3 TO INT-SDOS
           MOVE FEC-ITM4 TO INT-ADOS

           MOVE OPC-COD-VCOC IN OPC            TO INT-VCAM
           MOVE OPC-NUM-DCOL IN OPC            TO INT-DDMA
           MOVE OPC-NUM-MCOL IN OPC            TO INT-MDMA
           MOVE OPC-NUM-SCOL IN OPC            TO INT-SDMA
           MOVE OPC-NUM-ACOL IN OPC            TO INT-ADMA
      *JPA INI  9-APR-1994    (Memo 26/01/94 Pto.8)
           MOVE OPC-NUM-DCOL IN OPC            TO INT-DCOL
           MOVE OPC-NUM-MCOL IN OPC            TO INT-MCOL
           MOVE OPC-NUM-SCOL IN OPC            TO INT-SCOL
           MOVE OPC-NUM-ACOL IN OPC            TO INT-ACOL
      *JPA fin  9-APR-1994
           MOVE OPC-CIC-IOPC IN OPC            TO INT-IOPC
           MOVE 1                              TO INT-IDLC.


           PERFORM COL-CAL-INT.
           IF INT-CMSG > SPACES
              DISPLAY 'PROBLEMAS AL OBTENER TASA DIARIA  COD :'
                                                         INT-CMSG
              DISPLAY 'LLAVE DE LECTURA TASA                 :'
                                                         INT-MEN2
              PERFORM CLOSE-FILE
              GO TO GNS-PRO-ABT.

      *LRH ini 05-ABR-1994
      *    valida INT-TIPE contra TMC en CAM
           PERFORM VAL-TMAX-CONV.
      *LRH fin 05-ABR-1994

           COMPUTE WSS-TAS-PRDO IN WSS-VARI =
                         INT-TIPE * WSS-NUM-PRDO IN WSS-VARI.
      *     DISPLAY 'TASA DIARIA ' INT-TIPE
      *     DISPLAY 'NUMERO DIAS ' WSS-NUM-PRDO IN WSS-VARI
      *     DISPLAY 'TASA PRDO   ' WSS-TAS-PRDO IN WSS-VARI
      * FIN TASA PERIODO

      * OBTIENE VALOR FINAL.

           COMPUTE WSS-VAL-VFIN IN WSS-VARI =
            ( ( WSS-SGV-SCRR IN WSS-VARI *
               WSS-TAS-PRDO IN WSS-VARI) *
                    (( 1 + WSS-TAS-PRDO IN WSS-VARI )
                             ** WSS-NUM-NCUO IN WSS-VARI) )
            / ((( 1 + WSS-TAS-PRDO IN WSS-VARI )
                     ** WSS-NUM-NCUO IN WSS-VARI ) - 1 ).

           MOVE WSS-VAL-VFIN IN WSS-VARI TO PES-SGV-DECI IN PES-VARI
           PERFORM PES-SCTV
           MOVE PES-SGV-ENTE IN PES-VARI TO WSS-VAL-VFIN IN WSS-VARI

      * FIN OBTIENE VALOR FINAL.

      * ACTUALIZA VALOR FINAL EN EVC.
           MOVE WSS-VAL-VFIN IN WSS-VARI TO EVC-VAL-VCVF IN EVC
           MOVE FIO-MOD TO FIO-CMND
           PERFORM COL-FIO-EVC
           IF NOT FIO-STAT-OKS
              DISPLAY 'ERROR AL ACTUALIZAR VFINAL EN EVC '
                                               EVC-CIC-IOPC IN EVC.
      *     DISPLAY 'VALOR FINAL ' WSS-VAL-VFIN IN WSS-VARI.
       FIN-OBT-VFIN.
           EXIT.

       RWT-RCE SECTION.
       INI-RWT-RCE.
           MOVE OPC-CAI-IOPC IN OPC TO ICG-CAI-IOPC IN ICG.
           MOVE OPC-IIC-IOPC IN OPC TO ICG-IIC-IOPC IN ICG.
           MOVE ZEROES              TO ICG-NUM-ICAN IN ICG.
           MOVE SPACES              TO ICG-CIC-IOPV IN ICG.
           MOVE ZEROES              TO ICG-NUM-IVCT IN ICG.
           MOVE 'INT'               TO ICG-IND-TTAS IN ICG.
           MOVE RCE-FEC-FVEN IN RCE TO ICG-FEC-FINI IN ICG.
           MOVE FIO-GET-NLS TO FIO-CMND.
           PERFORM COL-FIO-ICG.
           IF NOT ( FIO-STAT-OKS AND
                    ICG-CAI-IOPC IN ICG = OPC-CAI-IOPC IN OPC AND
                    ICG-IIC-IOPC IN ICG = OPC-IIC-IOPC IN OPC AND
                    ICG-NUM-ICAN IN ICG = ZEROES AND
                    ICG-CIC-IOPV IN ICG = SPACES AND
                    ICG-NUM-IVCT IN ICG = ZEROES AND
                    ICG-IND-TTAS IN ICG = 'INT'  AND
                    ICG-FEC-FINI IN ICG = RCE-FEC-FVEN IN RCE  )

                    DISPLAY '%ERROR AL OBTENER 1ERA ICG PARA OPC '
                                              OPC-CIC-IOPC IN OPC
                    GO TO FIN-RWT-RCE.
       LUP-RWT-RCE.
           IF ICG-FEC-FINI IN ICG  NOT >  RCE-FEC-FVEN IN RCE
              GO TO NXT-RWT-RCE.
           COMPUTE WSS-NUM-VCTE  IN WSS-VARI =
                       WSS-NUM-VCTE IN WSS-VARI +
                       WSS-SGV-PRDO IN WSS-VARI.

      *SMC
           MOVE FIO-GET-KEY-UPD TO FIO-CMND.
           PERFORM COL-FIO-RCE.
           IF NOT FIO-STAT-OKS
              DISPLAY '%ERROR AL LEER DE UPD RCE PARA OPC '
                                            OPC-CIC-IOPC IN OPC
              MOVE FIO-ULK-REC TO FIO-CMND
              PERFORM COL-FIO-RCE
              GO TO FIN-RWT-RCE.

           MOVE ICG-FEC-FINI IN ICG       TO RCE-FEC-FVEN IN RCE
           MOVE WSS-RCE-DISP IN WSS-VARI  TO RCE-GLS-DISP IN RCE.
           MOVE FIO-MOD TO FIO-CMND.
           PERFORM COL-FIO-RCE.
           IF NOT FIO-STAT-OKS
              DISPLAY '%ERROR AL MOD RCE PARA OPC ' OPC-CIC-IOPC IN OPC.
           GO TO FIN-RWT-RCE.

       NXT-RWT-RCE.
           MOVE FIO-GET-NXT TO FIO-CMND.
           PERFORM COL-FIO-ICG.
           IF ( FIO-STAT-OKS AND
                ICG-CAI-IOPC IN ICG = OPC-CAI-IOPC IN OPC AND
                ICG-IIC-IOPC IN ICG = OPC-IIC-IOPC IN OPC AND
                ICG-NUM-ICAN IN ICG = ZEROES AND
                ICG-CIC-IOPV IN ICG = SPACES AND
                ICG-NUM-IVCT IN ICG = ZEROES AND
                ICG-IND-TTAS IN ICG = 'INT' )
                GO TO LUP-RWT-RCE.
       FIN-RWT-RCE.
           EXIT.

       WRT-CUP SECTION.
       INI-WRT-CUP.
           COMPUTE WSS-NUM-VCTE  IN WSS-VARI =
                  ( WSS-NUM-VCTE IN WSS-VARI -
                          WSS-SGV-PRDO IN WSS-VARI ) + 1.

           IF OPC-NUM-IVEN IN OPC > WSS-NUM-VCTE IN WSS-VARI
              MOVE OPC-NUM-IVEN IN OPC      TO RLQ-NUM-IVEN IN RLQ
           ELSE
              MOVE WSS-NUM-VCTE IN WSS-VARI TO RLQ-NUM-IVEN IN RLQ.

           MOVE OPC-CIC-IOPC IN OPC      TO RLQ-CIC-IOPC IN RLQ.
           MOVE 1                        TO RLQ-NUM-IDLC IN RLQ.

           MOVE FIO-PUT TO FIO-CMND.
           PERFORM COL-FIO-RLQ.
           IF NOT FIO-STAT-OKS
              DISPLAY '% ERROR AL HACER PUT A COLRLQ F.S :' FIO-STAT.

       FIN-WRT-CUP.
           EXIT.

       CLOSE-FILE SECTION.
       INI-CLOSE-FILE.
           MOVE FIO-CLO TO FIO-CMND.
           PERFORM COL-FIO-OPC.
           PERFORM COL-FIO-ICG.
           PERFORM COL-FIO-VEN.
           PERFORM COL-FIO-RCE.
           PERFORM COL-FIO-RLQ.
      *LRH ini 05-ABR-1994
           PERFORM COL-FIO-DLC.
      *LRH fin 05-ABR-1994
       FIN-CLOSE-FILE.
           EXIT.

      *LRH ini  13-ABR-1994   ( memo 26-01-94  punto 7 )
       VAL-TMAX-CONV SECTION.
       INI-VAL-TMAX-CONV.
           MOVE SPACES TO WSS-IETV.
           MOVE 1      TO WSS-IDLC.
           MOVE 0 TO WSS-DLC-NDLC.
           MOVE 0 TO WSS-VAL-SEVD.
      *
           MOVE INT-SEPA TO WSS-AXSV.
           MOVE INT-IPER TO WSS-AXUS.
           MOVE INT-SEPV TO WSS-AXSP.
           MOVE INT-USPV TO WSS-AXUP.
           MOVE INT-TIPT TO WSS-AXTT.
      *
           MOVE 0 TO WSS-TB90 WSS-TS90 WSS-TMAX.
           MOVE 0 TO WSS-IDLC.
           MOVE OPC-CAI-IOPC IN OPC TO DLC-CAI-IOPC IN DLC.
           MOVE OPC-IIC-IOPC IN OPC TO DLC-IIC-IOPC IN DLC.
           MOVE 1                   TO DLC-NUM-IDLC IN DLC.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM COL-FIO-DLC.
           IF NOT FIO-STAT-OKS
              DISPLAY '% ERROR AL LEER LA DLC. F.S.:' FIO-STAT
              PERFORM GNS-PRO-ABT.
           MOVE DLC-NUM-IDLC IN DLC TO WSS-IDLC.
           MOVE DLC-CAI-IOPC IN DLC TO VIN-CAI-IOPC.
           MOVE DLC-IIC-IOPC IN DLC TO VIN-IIC-IOPC.
           MOVE DLC-NUM-IDLC IN DLC TO VIN-NUM-IDLC.
           PERFORM BUS-VIN.
           IF NOT FIO-STAT-OKS
               MOVE 'COL' TO MSG-COD-SIST
               MOVE 'LIQDLC VINNX' TO MSG-COD-MENS
               PERFORM GET-MSG
               DISPLAY MSG-GLS-DESC
               PERFORM GNS-PRO-ABT.

           MOVE ICG-COD-TINT IN ICG TO INT-TIPT

           IF INT-CVTI > SPACES
               IF WSS-OPEC = 'D'
                   MOVE 'COL' TO MSG-COD-SIST
                   MOVE 'LIQTVRBDDNEX' TO MSG-COD-MENS
                   PERFORM GET-MSG
                   DISPLAY MSG-GLS-DESC
                   PERFORM GNS-PRO-ABT
               ELSE
                   MOVE 'S' TO WSS-IETV.
           IF INT-CVTI NOT > SPACES
               MOVE ICG-SGV-TINT IN ICG TO WSS-DLC-TINT
           ELSE
               MOVE ICG-SGV-SPRD IN ICG TO WSS-DLC-TINT.
           MOVE DLC-MSC-MIPL IN DLC TO WSS-DLC-MIPL.
           MOVE DLC-VAL-NDLC IN DLC TO WSS-DLC-NDLC.

      *Si el credito es en pesos
           IF OPC-COD-VCOC IN OPC = '0999'
               IF DLC-COD-PLZO IN DLC = 'C1' OR 'C2'
                   IF WSS-DLC-TINT > WSS-TB90
                       MOVE WSS-DLC-TINT TO WSS-TB90
                   ELSE
                       NEXT SENTENCE
               ELSE
                   IF WSS-DLC-TINT > WSS-TS90
                       MOVE WSS-DLC-TINT TO WSS-TS90
                   ELSE
                       NEXT SENTENCE
           ELSE
               IF WSS-DLC-TINT > WSS-TMAX
                   MOVE WSS-DLC-TINT TO WSS-TMAX.
       CON-VAL-TMAX-CONV.
           IF OPC-COD-VCOC IN OPC = '0999'
               PERFORM VAL-TMXC-PESO
           ELSE
               MOVE OPC-COD-VCOC IN OPC TO WSS-COD-VCOC IN WSS-VARI
               IF WSS-COD-VCO1 IN WSS-VARI = '0'
                   PERFORM VAL-TMXC-MREA
               ELSE
                   PERFORM VAL-TMXC-MEXT.

       FIN-VAL-TMAX-CONV.
           MOVE WSS-AXSV TO INT-SEPA.
           MOVE WSS-AXUS TO INT-IPER.
           MOVE WSS-AXSP TO INT-SEPV.
           MOVE WSS-AXUP TO INT-USPV.
           MOVE WSS-AXTT TO INT-TIPT.
       EXT-VAL-TMAX-CONV.
           EXIT.

       VAL-TMXC-PESO SECTION.
       INI-VAL-TMXC-PESO.
           IF WSS-TB90 NOT > 0
              MOVE 'TS90' TO CAM-COD-VCAM IN CAM(2)
           ELSE
              MOVE 'TB90' TO CAM-COD-VCAM IN CAM(2).
           MOVE CAM-COD-MNAC TO CAM-COD-VCAM IN CAM(1).
           PERFORM BUS-CAM-TMXC.
      *    convierte TMC a factor periodo diario ( idem INT-TIPE )
           DIVIDE CAM-SGV-VCAM IN CAM BY 3000 GIVING WSS-TMXC ROUNDED.
           PERFORM COMP-TASA.
       FIN-VAL-TMXC-PESO.
           EXIT.

       VAL-TMXC-MREA SECTION.
       INI-VAL-TMXC-MREA.
           MOVE OPC-COD-VCOC IN OPC TO CAM-COD-VCAM IN CAM(1).
           MOVE 'TMXC'              TO CAM-COD-VCAM IN CAM(2).
           PERFORM BUS-CAM-TMXC.
           IF INT-CMSG > SPACES
               GO TO FIN-VAL-TMXC-MREA.
      *    convierte TMC a factor periodo diario ( idem INT-TIPE )
           DIVIDE CAM-SGV-VCAM IN CAM BY 36000 GIVING WSS-TMXC ROUNDED.
           PERFORM COMP-TASA.
       FIN-VAL-TMXC-MREA.
           EXIT.

       VAL-TMXC-MEXT SECTION.
       INI-VAL-TMXC-MEXT.
           MOVE 'TMEX' TO CAM-COD-VCAM IN CAM(1).
           MOVE 'TMXC' TO CAM-COD-VCAM IN CAM(2).
           PERFORM BUS-CAM-TMXC.
           IF INT-CMSG > SPACES
               GO TO FIN-VAL-TMXC-MEXT.
      *    convierte TMC a factor periodo diario ( idem INT-TIPE )
           DIVIDE CAM-SGV-VCAM IN CAM BY 36000 GIVING WSS-TMXC ROUNDED.
           MOVE 'LIQTMEX>TMXC' TO INT-CMSG.
           PERFORM COMP-TASA.
       FIN-VAL-TMXC-MEXT.
           EXIT.

       BUS-CAM-TMXC SECTION.
       INI-BUS-CAM-TMXC.
           MOVE RCE-NUM-DVEN IN RCE TO CAM-NUM-DCAM IN CAM(1).
           MOVE RCE-NUM-MVEN IN RCE TO CAM-NUM-MCAM IN CAM(1).
           MOVE RCE-NUM-SVEN IN RCE TO CAM-NUM-SCAM IN CAM(1).
           MOVE RCE-NUM-AVEN IN RCE TO CAM-NUM-ACAM IN CAM(1).
           MOVE RCE-NUM-DVEN IN RCE TO CAM-NUM-DCAM IN CAM(2).
           MOVE RCE-NUM-MVEN IN RCE TO CAM-NUM-MCAM IN CAM(2).
           MOVE RCE-NUM-SVEN IN RCE TO CAM-NUM-SCAM IN CAM(2).
           MOVE RCE-NUM-AVEN IN RCE TO CAM-NUM-ACAM IN CAM(2).

           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM TAB-FIO-CAM.
           IF NOT FIO-STAT-OKS
      *         MOVE 'CAM    NEX'           TO WSS-CMSG
      *         MOVE CAM-COD-VCAM IN CAM(2) TO WSS-CMS2
      *         MOVE CAM-KEY-CAMB IN CAM TO FRM-MEN2
               MOVE 'COL' TO MSG-COD-SIST
               MOVE 'CAM    NEX' TO MSG-COD-MENS
               PERFORM GET-MSG
               DISPLAY MSG-GLS-DESC
               PERFORM GNS-PRO-ABT.
           IF CAM-IND-VIGE NOT = 'S'
      *         MOVE 'VALCAMNVG'         TO INT-CMSG
      *         MOVE CAM-KEY-CAMB IN CAM TO FRM-MEN2
               MOVE 'COL' TO MSG-COD-SIST
               MOVE 'VALCAMNVG' TO MSG-COD-MENS
               PERFORM GET-MSG
               DISPLAY MSG-GLS-DESC
               PERFORM GNS-PRO-ABT.
           IF WSS-BCTI IN WSS-AXTT = 'A'
               ADD 100 CAM-SGV-VCAM IN CAM GIVING WSS-TIMC
               MULTIPLY CAM-SGV-VCAM IN CAM BY 100 GIVING
                        CAM-SGV-VCAM IN CAM
               DIVIDE CAM-SGV-VCAM IN CAM BY WSS-TIMC GIVING
                      CAM-SGV-VCAM IN CAM ROUNDED.
           MOVE WSS-BCTI IN WSS-AXTT TO WSS-TTM1 IN WSS-TTMC.
           IF CAM-COD-VCAM IN CAM(1) = CAM-COD-MNAC
               MOVE 'M' TO WSS-TTM2 IN WSS-TTMC
           ELSE
               MOVE 'A' TO WSS-TTM2 IN WSS-TTMC.
           MOVE 'SS    000' TO WSS-TTM3 IN WSS-TTMC.
           MOVE CAM-SGV-VCAM IN CAM  TO WSS-TIMC.

       FIN-BUS-CAM-TMXC.
           EXIT.

       COMP-TASA SECTION.
       INI-COMP-TASA.
           IF INT-TIPE NOT > WSS-TMXC
               GO TO FIN-COMP-TASA.
           MOVE 'COL'       TO FIO-SIST.
           MOVE FIO-GET-KEY TO FIO-CMND.
           MOVE 'VSNLIQTMXCBCI' TO TAB-COD-TABL IN TAB.
           PERFORM GNS-FIO-TAB.
           IF NOT (FIO-STAT-OKS AND TAB-MSC-STAT IN TAB = 'S')
               IF INT-TIPE > WSS-TMXC
                   DISPLAY '% ERROR: INTERES > TASA MAX. CONV.'
                   PERFORM GNS-PRO-ABT
               ELSE
                   NEXT SENTENCE
           ELSE
               IF INT-TIPE > WSS-TMXC
                   MOVE WSS-TMXC TO INT-TIPE.

           MOVE 'F' TO WSS-CMMC.
       FIN-COMP-TASA.
           EXIT.

       COPY COLBGVIN.
       COPY COLBFDLC.
      *LRH fin 13-ABR-1994

       COPY COLBFOPC.
       COPY COLBFVEN.
       COPY COLBFRCE.
       COPY COLBFEVC.
       COPY COLBFICG.
       COPY COLBFRLQ.
       COPY TABBFCAM.
       COPY GNSBFMSG.
       COPY GNSBFMSC.
       COPY GNSBFTAB.
       COPY GNSBBTAB.
       COPY GNSBBMSG.
       COPY GNSBGDTC.
       COPY GNSBGIDD.
       COPY GNSBTABT.
       COPY GNSBBSYS.
       COPY GNSBGFEC.
       COPY GNSBPFEC.
       COPY GNSBGHOY.
       COPY GNSBGEND.
       COPY GNSBGABT.
       COPY GNSBGPES.
       COPY COLBGINT.
