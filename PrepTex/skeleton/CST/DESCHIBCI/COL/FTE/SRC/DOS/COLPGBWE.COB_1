       IDENTIFICATION DIVISION.
      *=======================
       PROGRAM-ID.      COLPGBWE.
       AUTHOR.          BEE.
       DATE-WRITTEN.
      * PROGRAMA GRABA ARCHIVO BWE.
      * AUTOR: BEE (JGM).
      *
       ENVIRONMENT DIVISION.
      *====================
       CONFIGURATION SECTION.
      *---------------------
       SPECIAL-NAMES.
            DECIMAL-POINT IS COMMA.

       DATA DIVISION.
      *=============
       WORKING-STORAGE SECTION.
      *-----------------------
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-FFU-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-OPC-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-VEN-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-MSG-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-MSC-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-TAB-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-EVC-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-RCV-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-DLC-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-DCC-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-ICG-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-ITR-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-TOC-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-CAM-REQA==.

       COPY COLWGINT.
       COPY COLWGVEN.
       COPY COLBRFFU.
       COPY COLBRDLC.
       COPY COLBRRCV.
       COPY COLBROPS.
       COPY COLBRVEN.
       COPY TABBRTIO.
       COPY TABBRCAM.
       COPY COLBRDCC.
       COPY COLBREVC.
       COPY COLBRICG.
       COPY COLBRITR.
       COPY COLBRTOC.
       COPY GNSWGSYS.
       COPY GNSBRTAB.
       COPY GNSBRMSG.
       COPY GNSBRMSC.
       COPY GNSWGRQA.
       COPY GNSWGUIB.
       COPY GNSWGELS.
       COPY GNSWVIDD.
       COPY GNSWCFIO.
       COPY GNSWVFIO.
       COPY GNSWGFEC.
       COPY GNSWGHOY.
       COPY GNSWGPES.
       COPY COLWGCTO.

       01  WSS-VARI.
           03  WSS-IND-LEE-DCC  VALUE SPACES  PIC X(01).
           03  WSS-NUM-RLEI   VALUE ZEROES    PIC 9(06).
           03  WSS-NUM-RSEL   VALUE ZEROES    PIC 9(06).
           03  WSS-NUM-RGRA   VALUE ZEROES    PIC 9(06).
           03  WSS-NUM-RECH   VALUE ZEROES    PIC 9(06).
           03  WSS-FEC-FPRO.
               05  WSS-NUM-DPRO               PIC 9(02).
               05  WSS-NUM-MPRO               PIC 9(02).
               05  WSS-NUM-SPRO               PIC 9(02).
               05  WSS-NUM-APRO               PIC 9(02).
            03  WSS-FEC-FPRI.
               05  WSS-NUM-SPRI               PIC 9(02).
               05  WSS-NUM-APRI               PIC 9(02).
               05  WSS-NUM-MPRI               PIC 9(02).
               05  WSS-NUM-DPRI               PIC 9(02).
            03  WSS-FEC-FINT.
               05  WSS-NUM-SINT               PIC 9(02).
               05  WSS-NUM-AINT               PIC 9(02).
               05  WSS-NUM-MINT               PIC 9(02).
               05  WSS-NUM-DINT               PIC 9(02).
            03  WSS-FEC-FUCT.
               05  WSS-NUM-SUCT               PIC 9(02).
               05  WSS-NUM-AUCT               PIC 9(02).
               05  WSS-NUM-MUCT               PIC 9(02).
               05  WSS-NUM-DUCT               PIC 9(02).
           03  WSS-FEC-FCAM.
               05  WSS-NUM-SCAM               PIC 9(02).
               05  WSS-NUM-ACAM               PIC 9(02).
               05  WSS-NUM-MCAM               PIC 9(02).
               05  WSS-NUM-DCAM               PIC 9(02).
           03  WSS-FEC-FMAX.
               05  WSS-NUM-SMAX               PIC 9(02).
               05  WSS-NUM-AMAX               PIC 9(02).
               05  WSS-NUM-MMAX               PIC 9(02).
               05  WSS-NUM-DMAX               PIC 9(02).
           03  WSS-FEC-FXXX.
               05  WSS-NUM-SXXX               PIC 9(02).
               05  WSS-NUM-AXXX               PIC 9(02).
               05  WSS-NUM-MXXX               PIC 9(02).
               05  WSS-NUM-DXXX               PIC 9(02).
      *
           03  WSS-FEC-FVCT.
               05  WSS-NUM-FAUX.
                   07  WSS-NUM-SAUX     VALUE ZEROES  PIC 9(02).
                   07  WSS-NUM-AAUX     VALUE ZEROES  PIC 9(02).
               05  WSS-NUM-DMAU.
                   07  WSS-NUM-MAUX     VALUE ZEROES  PIC 9(02).
                   07  WSS-NUM-DAUX     VALUE ZEROES  PIC 9(02).
           03  WSS-IND-FLAG    VALUE ZEROES   PIC 9(01).
           03  WSS-IND-IOPC    VALUE 'N'      PIC X(01).
           03  WSS-IND-ULTI    VALUE 'N'      PIC X(01).
           03  WSS-VAL-INTE    VALUE ZEROES   PIC 9(14)V9(04).
           03  WSS-COD-PESO    VALUE SPACES   PIC X(06).
           03  WSS-VAL-IDVG    VALUE ZEROES   PIC 9(14)V9(04).
           03  WSS-CON-DECI    VALUE ZEROES   PIC 9(14)V9(04).
           03  WSS-SIN-DECI    VALUE ZEROES   PIC 9(14).
           03  WSS-DIF-DVVN    VALUE ZEROES   PIC 9(04).
           03  WSS-DIF-DVPR    VALUE ZEROES   PIC 9(04).
           03  WSS-DIF-VNAN    VALUE ZEROES   PIC 9(04).
      *VEN ANTERIOR
           03  WSS-VEN-FANT.
               05  WSS-VEN-SANT               PIC 9(02).
               05  WSS-VEN-AANT               PIC 9(02).
               05  WSS-VEN-MANT               PIC 9(02).
               05  WSS-VEN-DANT               PIC 9(02).
      *
           03  WSS-VAL-IDNI    VALUE ZEROES   PIC 9(14)V9(04).
           03  WSS-VAL-SCRE    VALUE ZEROES   PIC 9(14)V9(04).
           03  WSS-VAL-SCPA    VALUE ZEROES   PIC 9(14)V9(04).
           03  WSS-SGV-SPR2    VALUE ZEROES   PIC S9(03)V9(04).
           03  WSS-PVEZ        VALUE SPACES   PIC X(01).
           03  WSS-IND-PRVN    VALUE 'S'      PIC X(01).
           03  WSS-IND-DISP    VALUE SPACES   PIC X(01).
           03  WSS-OPEC        VALUE SPACES   PIC X(01).

           03  WSS-GLS-CAPT.
               05  WSS-GLS-ENTC               PIC X(14).
               05  WSS-GLS-DECC               PIC X(04).

           03  WSS-GLS-INTT.
               05  WSS-GLS-ENTI               PIC X(14).
               05  WSS-GLS-DECI               PIC X(04).


       PROCEDURE DIVISION.
      *==================
       MAIN SECTION.
       INI-MAIN.
           COPY GNSBGEDB.
           MOVE 'COLPGFFU' TO FIO-PROG.
           PERFORM GNS-BUS-IDD.
           PERFORM OPEN-FILE.
           PERFORM ACEP-PARAMETROS.
           IF NOT FEC-STAT-OKS
               GO TO FIN-MAIN.
           PERFORM CALCULA-PERIODOS.
           PERFORM PRO-OPC.
           PERFORM GRABA-VECTOR.
           PERFORM CLOSE-FILE.
           PERFORM MUESTRA-ESTADISTICAS.
       FIN-MAIN.
           PERFORM GNS-PRO-END.


      ******************************************************************
       OPEN-FILE SECTION.
      *******************
       INI-OPEN-FILE.
           MOVE FIO-INP TO FIO-CMND.
           PERFORM COL-FIO-OPS.
           PERFORM COL-FIO-EVC.
           PERFORM COL-FIO-RCV.
           PERFORM COL-FIO-VEN.
           PERFORM COL-FIO-DLC.
           PERFORM COL-FIO-ICG.
           PERFORM COL-FIO-DCC.
           MOVE 'COL' TO FIO-SIST.
           PERFORM GNS-FIO-TAB.
           MOVE 'TAB' TO FIO-SIST.
           PERFORM GNS-FIO-TAB.

           MOVE FIO-OUT TO FIO-CMND.
           PERFORM COL-FIO-FFU.
       FIN-OPEN-FILE.
           EXIT.

       ACEP-PARAMETROS SECTION.
      *****************
       INI-ACEP-PARAMETROS.
           DISPLAY 'INICIO CAPTURA DE PARAMETROS '.
           DISPLAY '============================ '.

      * Captura Fecha de Proceso.
           DISPLAY 'FECHA DE PROCESO (DDMMSSAA) : '.
           ACCEPT  WSS-FEC-FPRO IN WSS-VARI.
           DISPLAY WSS-FEC-FPRO IN WSS-VARI.

      * Captura Indicador para desplegar los Display en el programa.
           ACCEPT WSS-IND-DISP IN WSS-VARI.
           DISPLAY 'INDICADOR DE DISPLAY (S/N)  : ' WSS-IND-DISP
                                                         IN WSS-VARI.


      * Valida codigo de display (S/N).
           IF WSS-IND-DISP IN WSS-VARI NOT = 'S' AND NOT = 'N'
               DISPLAY 'ERROR, codigo de Display no es valido, '
               DISPLAY 'Debe Ingresar S o N '
               DISPLAY 'PROCESO CANCELADO...'
               PERFORM GNS-PRO-ABT.

      * VAL-FEC VALIDA FECHA PROCESO.
           MOVE WSS-FEC-FPRO IN WSS-VARI TO FEC-FECH.
           MOVE FEC-FORM-FEC TO FEC-FORM.
           MOVE FEC-FBLK-N   TO FEC-FBLK.
           MOVE FEC-CHOY-LE  TO FEC-CHOY.
           MOVE FEC-VHBL-N   TO FEC-VHBL.
           MOVE FEC-VAL-FEC  TO FEC-CMND.
           PERFORM PRO-FEC.
           IF NOT FEC-STAT-OKS
               MOVE 'COL'         TO MSG-COD-SIST
               MOVE 'FECPROCNEX' TO MSG-COD-MENS
               PERFORM GET-MSG
               DISPLAY MSG-GLS-DESC   TAB-CIC-CTAB
               DISPLAY 'ERROR, PROCESO CANCELADO...'
               PERFORM GNS-PRO-ABT.
      *
           DISPLAY 'Fecha Proceso: ' WSS-FEC-FPRO IN WSS-VARI.
           DISPLAY ' '.

           PERFORM OBT-COD-MNAC.
      * Proceso para Cargar las tablas  TAB/TIO  y  COL/TOC  en Memoria
           PERFORM COL-CRG-CTO.
           IF CTO-CMSG IN CTO-VARI > SPACES
               MOVE 'COL'                TO MSG-COD-SIST
               MOVE CTO-CMSG IN CTO-VARI TO MSG-COD-MENS IN MSG
               PERFORM GET-MSG
               DISPLAY MSG-GLS-DESC IN MSG CTO-MEN2 IN CTO-VARI
               PERFORM GNS-PRO-ABT.

       FIN-ACEP-PARAMETROS.
           EXIT.



      ******************************************************************
       PRO-OPC SECTION.
      ****************
       INI-PRO-OPC.
           MOVE FIO-GET-FST TO FIO-CMND.
           PERFORM COL-FIO-OPS.

       LUP-PRO-OPC.
           IF NOT FIO-STAT-OKS
              GO TO FIN-PRO-OPC.

      * Esto es para las estadisticas.
           ADD 1 TO WSS-NUM-RLEI IN WSS-VARI.

           IF WSS-IND-DISP IN WSS-VARI = 'S'
               DISPLAY 'OPERACION LEIDA: ' OPC-CIC-IOPC IN OPS.

      *
           IF OPC-FEC-FINP IN OPS > WSS-FEC-FPRI IN WSS-VARI
               ADD 1 TO WSS-NUM-RECH IN WSS-VARI
               GO TO NXT-PRO-OPC.
      *
           MOVE OPC-CIC-IOPC IN OPS TO DLC-CIC-IOPC IN DLC.
           MOVE 1                   TO DLC-NUM-IDLC IN DLC.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM COL-FIO-DLC.
           IF NOT FIO-STAT-OKS
               ADD 1 TO WSS-NUM-RECH IN WSS-VARI
               GO TO NXT-PRO-OPC.
      *
           IF DLC-IND-SCTB IN DLC = 'VCD' OR
              DLC-IND-SCTB IN DLC = 'CAS'
               GO TO NXT-PRO-OPC.
           MOVE OPC-COD-TOOC IN OPS TO CTO-TOOC IN CTO-VARI.
           PERFORM COL-BUS-CTO.
           IF CTO-CMSG IN CTO-VARI > SPACES
               DISPLAY 'ERROR BUSCA OPEC ' OPC-CIC-IOPC IN OPS
               ADD 1 TO WSS-NUM-RECH IN WSS-VARI
               GO TO NXT-PRO-OPC.

      * Obtiene 'Opera Como'
            MOVE SPACES               TO TOC.
            MOVE CTO-OPEC IN CTO-VARI TO TOC-MSC-OPEC IN TOC.
            MOVE CTO-OPEC IN CTO-VARI TO WSS-OPEC IN WSS-VARI.

      * Valida el 'Sistema que lo Maneja' de la Operacion de Credito
            IF CTO-SIST IN CTO-VARI NOT = 'COL'
               GO TO NXT-PRO-OPC.

           MOVE OPC-FEC-FCOL IN OPS TO WSS-FEC-FCAM IN WSS-VARI.

           PERFORM LEE-ICG.
           IF WSS-IND-FLAG IN WSS-VARI = 1
               ADD 1 TO WSS-NUM-RECH IN WSS-VARI
               DISPLAY 'ERROR LECTURA ICG PARA LLAVE '
                                             OPC-CIC-IOPC IN OPS
               GO TO NXT-PRO-OPC.
      *LEER-ICG E ITR ES EXACTAMENTE LO MISMO
      *
            MOVE ICG TO ITR.
      *
      *     PERFORM LEE-ITR.
      *     IF WSS-IND-FLAG IN WSS-VARI = 1
      *         ADD 1 TO WSS-NUM-RECH IN WSS-VARI
      *         DISPLAY 'ERROR LECTURA ITR PARA LLAVE '
      *                                      OPC-CIC-IOPC IN OPS
      *         GO TO NXT-PRO-OPC.
      *ALD-BCI-FIN/25.05.1999


           MOVE OPC-NUM-IVEN IN OPS TO VEN-NUM-IVEN IN VEN.
           SUBTRACT 1 FROM VEN-NUM-IVEN IN VEN.
           MOVE 'S' TO WSS-PVEZ IN WSS-VARI.

      * Variable para controlar el saldo insoluto actualizado
      * del credito
           MOVE OPC-VAL-SCRE IN OPS TO WSS-VAL-SCPA IN WSS-VARI.
           MOVE ZEROES TO WSS-FEC-FUCT IN WSS-VARI.

           PERFORM LLENAR-MATRIZ.
           IF WSS-IND-FLAG IN WSS-VARI = 1
               ADD 1 TO WSS-NUM-RECH IN WSS-VARI
               GO TO NXT-PRO-OPC.

           ADD 1 TO WSS-NUM-RSEL IN WSS-VARI.

           MOVE 'S'    TO WSS-IND-PRVN IN WSS-VARI.
           MOVE 'N'    TO WSS-IND-IOPC IN WSS-VARI.
           MOVE 'N'    TO WSS-IND-ULTI IN WSS-VARI.
      *     MOVE ZEROES TO WSS-SGV-CAPM IN WSS-VARI
      *     MOVE ZEROES TO WSS-VAL-INTM IN WSS-VARI
      *                    WSS-VAL-INTM IN WSS-VARI
           MOVE ZEROES TO WSS-VAL-INTE IN WSS-VARI
                          WSS-VAL-IDVG IN WSS-VARI
                          WSS-FEC-FINT IN WSS-VARI
                          WSS-FEC-FUCT IN WSS-VARI.

       NXT-PRO-OPC.
           MOVE FIO-GET-NXT TO FIO-CMND.
           PERFORM COL-FIO-OPS.
           GO TO LUP-PRO-OPC.
       FIN-PRO-OPC.
           EXIT.


      ******************************************************************
       GRABA-VECTOR SECTION.
      **********************
       INI-GRABA-VECTOR.
           SET MOV-I TO 1.

       LUP-GRABA-VECTOR.
           IF MOV-I NOT < MOV-TOPE
               GO TO FIN-GRABA-VECTOR.

           MOVE T-GLS-CCSB (MOV-I)       TO FFU-GLS-CCSB IN FFU.
           MOVE T-COD-VCOC (MOV-I)       TO FFU-COD-VCOC IN FFU.
           MOVE T-COD-PERI (MOV-I)       TO FFU-IND-PERI IN FFU.

           MOVE T-SGV-CAPI (MOV-I)       TO WSS-GLS-CAPT IN WSS-VARI.
           MOVE WSS-GLS-ENTC IN WSS-VARI TO FFU-GLS-ENTC IN FFU.
           MOVE '.'                      TO FFU-GLS-PDEC IN FFU.
           MOVE WSS-GLS-DECC IN WSS-VARI TO FFU-GLS-DECC IN FFU.

           MOVE T-SGV-INTE (MOV-I)       TO WSS-GLS-INTT IN WSS-VARI.
           MOVE WSS-GLS-ENTI IN WSS-VARI TO FFU-GLS-ENTI IN FFU.
           MOVE '.'                      TO FFU-GLS-PDEI IN FFU.
           MOVE WSS-GLS-DECI IN WSS-VARI TO FFU-GLS-DECI IN FFU.

           MOVE '|'                      TO FFU-IND-FIL1 IN FFU
                                            FFU-IND-FIL2 IN FFU
                                            FFU-IND-FIL3 IN FFU
                                            FFU-IND-FIL4 IN FFU
                                            FFU-IND-FIL5 IN FFU.

      *DPM INI  6-AUG-1997
           MOVE SPACES                   TO FFU-GLS-DISP IN FFU.
      *DPM FIN  6-AUG-1997

           MOVE FIO-PUT TO FIO-CMND.
           PERFORM COL-FIO-FFU.
           IF NOT FIO-STAT-OKS
               DISPLAY 'ERROR GRABAR ARCHIVO FFU ' FFU
           ELSE
               ADD 1 TO WSS-NUM-RGRA IN WSS-VARI
               IF WSS-IND-DISP IN WSS-VARI = 'S'
                   DISPLAY 'REG. FFU GRABADO: ' FFU.

           SET MOV-I UP BY 1.
           GO TO LUP-GRABA-VECTOR.
       FIN-GRABA-VECTOR.
           EXIT.


      ******************************************************************
       LEE-ICG SECTION.
      ****************
       INI-LEE-ICG.
           MOVE ZEROES TO WSS-IND-FLAG IN WSS-VARI.

           MOVE OPC-CIC-IOPC IN OPS TO ICG-CIC-IOPC IN ICG.
           MOVE ZEROES              TO ICG-NUM-ICAN IN ICG.
           MOVE SPACES              TO ICG-CIC-IOPV IN ICG.
           MOVE ZEROES              TO ICG-NUM-IVCT IN ICG.
           MOVE 'INT'               TO ICG-IND-TTAS IN ICG.
           MOVE ZEROES              TO ICG-FEC-FINI IN ICG.
           MOVE FIO-GET-NLS TO FIO-CMND.
           PERFORM COL-FIO-ICG.
           IF NOT ( FIO-STAT-OKS AND
                    ICG-CIC-IOPC IN ICG = OPC-CIC-IOPC IN OPS AND
                    ICG-NUM-ICAN IN ICG = ZEROES              AND
                    ICG-CIC-IOPV IN ICG = SPACES              AND
                    ICG-NUM-IVCT IN ICG = ZEROES              AND
                    ICG-IND-TTAS IN ICG = 'INT' )
                     MOVE 1 TO WSS-IND-FLAG IN WSS-VARI.
       FIN-LEE-ICG.
           EXIT.


      ******************************************************************
       LEE-ITR SECTION.
      *****************
       INI-LEE-ITR.
           MOVE 0 TO WSS-IND-FLAG IN WSS-VARI.

           MOVE 'ITR-KEY-IICG' TO FIO-AKEY.
           MOVE OPC-CIC-IOPC IN OPS TO ITR-CIC-IOPC IN ITR.
           MOVE ZEROES              TO ITR-NUM-ICAN IN ITR.
           MOVE SPACES              TO ITR-CIC-IOPV IN ITR
           MOVE ZEROES              TO ITR-NUM-IVCT IN ITR
           MOVE 'INT'               TO ITR-IND-TTAS IN ITR.
           MOVE ZEROES              TO ITR-FEC-FINI IN ITR.
           MOVE FIO-GET-NLS TO FIO-CMND.
           PERFORM COL-FIO-ITR.
           IF NOT ( FIO-STAT-OKS AND
                    ITR-CIC-IOPC IN ITR = OPC-CIC-IOPC IN OPS AND
                    ITR-NUM-ICAN IN ITR = ZEROES              AND
                    ITR-CIC-IOPV IN ITR = SPACES              AND
                    ITR-NUM-IVCT IN ITR = ZEROES              AND
                    ITR-IND-TTAS IN ITR = 'INT'  )
               MOVE 1 TO WSS-IND-FLAG IN WSS-VARI.
       FIN-LEE-ITR.
           EXIT.


      ******************************************************************
       LEE-DLC SECTION.
      ****************
       INI-LEE-DLC.
           MOVE 0 TO WSS-IND-FLAG IN WSS-VARI.

           MOVE VEN-CIC-IOPC IN VEN TO DLC-CIC-IOPC IN DLC.
           MOVE VEN-NUM-IDLC IN VEN TO DLC-NUM-IDLC IN DLC.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM COL-FIO-DLC.
           IF NOT FIO-STAT-OKS
               DISPLAY 'ERROR LECTURA DLC CON LLAVE '
                                      DLC-KEY-IDLC IN DLC
               MOVE 1 TO WSS-IND-FLAG IN WSS-VARI.
       FIN-LEE-DLC.
           EXIT.


      ******************************************************************
       LEE-RCV SECTION.
      ****************
       INI-LEE-RCV.
      * Lee RCV para obtener Capital e Intereses
           MOVE 0 TO WSS-IND-FLAG IN WSS-VARI.

           MOVE OPC-CIC-IOPC IN OPS TO RCV-CIC-IOPV IN RCV.
           MOVE VEN-NUM-IVCT IN VEN TO RCV-NUM-IVCT IN RCV.
           MOVE 'RCV-KEY-IVCT' TO FIO-AKEY.
           MOVE FIO-GET-NLS TO FIO-CMND.
           PERFORM COL-FIO-RCV.
           IF NOT ( FIO-STAT-OKS AND
                    OPC-CIC-IOPC IN OPS = RCV-CIC-IOPV IN RCV AND
                    VEN-NUM-IVCT IN VEN = RCV-NUM-IVCT IN RCV )
               MOVE 1 TO WSS-IND-FLAG IN WSS-VARI.
       FIN-LEE-RCV.
           EXIT.


      ******************************************************************
       LLENAR-MATRIZ SECTION.
       INI-SEC-LLENAR-MATRIZ.
      **********************
      *ALD-BCI-INI/25.05.1999
           MOVE 'S' TO WSS-IND-LEE-DCC.
      *ALD-BCI-FIN/25.05.1999
       INI-LLENAR-MATRIZ.
           MOVE 0 TO WSS-IND-FLAG IN WSS-VARI.

           MOVE OPC-CIC-IOPC IN OPS TO VEN-CIC-IOPC IN VEN.
           ADD 1                    TO VEN-NUM-IVEN IN VEN.

           IF VEN-NUM-IVEN IN VEN > OPC-NUM-VCOR IN OPS
               MOVE 'S' TO WSS-IND-ULTI IN WSS-VARI
               GO TO SIG1-LLENAR-MATRIZ.

           IF OPC-IND-VSTR IN OPS = 'S'
      *         PERFORM CARGA-FTBS
               MOVE OPC-FEC-FCOL IN OPS TO WSS-FEC-FINT IN WSS-VARI
               PERFORM CAL-ULT-CAMBIO-TASA
               MOVE WSS-FEC-FUCT IN WSS-VARI TO VEN-FTBS
               MOVE 'S' TO VEN-KEST
               MOVE FIO-GET-KEY TO FIO-CMND
               PERFORM COL-OBT-VEN
               IF NOT VEN-STAT-OKS AND
                  NOT VEN-STAT-EOF AND
                  WSS-PVEZ IN WSS-VARI = 'S'
                   MOVE 1 TO WSS-IND-FLAG IN WSS-VARI
                   DISPLAY 'ERROR LECTURA VEN POR RUTINA '
                         OPC-CIC-IOPC IN OPS ' ' VEN-STAT ' ' VEN-MEN2
                   GO TO FIN-LLENAR-MATRIZ
               ELSE
               IF VEN-STAT-ENO OR
                  VEN-STAT-EOF
                   MOVE 'S' TO WSS-IND-ULTI IN WSS-VARI
                   GO TO SIG1-LLENAR-MATRIZ
               ELSE
               IF NOT VEN-STAT-OKS
                   MOVE 1 TO WSS-IND-FLAG IN WSS-VARI
                   DISPLAY 'ERROR LECTURA VEN POR RUTINA '
                         OPC-CIC-IOPC IN OPS ' ' VEN-STAT ' ' VEN-MEN2
                   GO TO FIN-LLENAR-MATRIZ
               ELSE
                   NEXT SENTENCE
           ELSE
               MOVE FIO-GET-NLS TO FIO-CMND
               PERFORM COL-FIO-VEN
               IF NOT ( FIO-STAT-OKS AND
                  OPC-CIC-IOPC IN OPS = VEN-CIC-IOPC IN VEN ) AND
                  WSS-PVEZ IN WSS-VARI = 'S'
                   DISPLAY 'ERROR LECTURA VEN PARA LLAVE: '
                            OPC-CIC-IOPC IN OPS
                   MOVE 1 TO WSS-IND-FLAG IN WSS-VARI
                   GO TO FIN-LLENAR-MATRIZ
               ELSE
               IF NOT ( FIO-STAT-OKS AND
                        OPC-CIC-IOPC IN OPS = VEN-CIC-IOPC IN VEN )
                   MOVE 'S' TO WSS-IND-ULTI IN WSS-VARI
                   GO TO SIG1-LLENAR-MATRIZ.

           MOVE 'N' TO WSS-PVEZ IN WSS-VARI.

      * Actualiza variable de saldo insoluto restando el saldo de
      * capital del vencimiento, solo si credito es estructurado,
      * si no, se usa variable de memoria DLC-SCPA (VEN-IDLC)
           IF OPC-IND-VSTR IN OPS = 'S' AND
              WSS-VAL-SCPA IN WSS-VARI NOT = VEN-VAL-SCAP IN VEN
               SUBTRACT VEN-VAL-SCAP IN VEN FROM
                        WSS-VAL-SCPA IN WSS-VARI.

           IF WSS-OPEC IN WSS-VARI = 'D'
               PERFORM LEE-DLC
               IF WSS-IND-FLAG IN WSS-VARI = 1
                   MOVE 1 TO WSS-IND-FLAG IN WSS-VARI
                   DISPLAY 'ERROR LECTURA DLC PARA LLAVE '
                                             OPC-CIC-IOPC IN OPS
                   GO TO FIN-LLENAR-MATRIZ.

      *RVM-CST-INI 9-MAY-1997
      *    IF DLC-VAL-INTD IN DLC IS NOT NUMERIC
      *        MOVE ZEROES TO DLC-VAL-INTD IN DLC.
      *RVM-CST-FIN 9-MAY-1997
      *     IF DLC-VAL-INTO IN DLC IS NOT NUMERIC
      *         MOVE ZEROES TO DLC-VAL-INTO IN DLC.
      *     IF DLC-VAL-INTM IN DLC IS NOT NUMERIC
      *         MOVE ZEROES TO DLC-VAL-INTM IN DLC.
      *     IF DLC-VAL-READ IN DLC IS NOT NUMERIC
      *         MOVE ZEROES TO DLC-VAL-READ IN DLC.
      *     IF DLC-VAL-REAO IN DLC IS NOT NUMERIC
      *         MOVE ZEROES TO DLC-VAL-REAO IN DLC.
      *     IF DLC-VAL-REAM IN DLC IS NOT NUMERIC
      *         MOVE ZEROES TO DLC-VAL-REAM IN DLC.

           PERFORM LEE-RCV.

           IF WSS-IND-FLAG IN WSS-VARI = 0
             IF RCV-IND-SCTB IN RCV = 'MOR' OR '   '
               IF  DLC-IND-SCTB IN DLC = 'MUL'
                 MOVE SPACES                  TO DCC-IND-SCTB IN DCC
               ELSE
                 MOVE DLC-IND-SCTB IN DLC     TO DCC-IND-SCTB IN DCC
             ELSE
               MOVE RCV-IND-SCTB IN RCV       TO DCC-IND-SCTB IN DCC
           ELSE
             MOVE 0 TO WSS-IND-FLAG IN WSS-VARI
             IF  DLC-IND-SCTB IN DLC = 'MUL'
               MOVE SPACES                    TO DCC-IND-SCTB IN DCC
             ELSE
               MOVE DLC-IND-SCTB IN DLC       TO DCC-IND-SCTB IN DCC.

           MOVE OPC-VAL-SCRE IN OPS TO WSS-VAL-SCRE IN WSS-VARI.

      *Se guarda Fecha de Ult. VEN completo
           IF VEN-IND-CALC IN VEN NOT = 'N'
               MOVE VEN-FEC-FVEN IN VEN TO WSS-FEC-FCAM IN WSS-VARI.

      *Si es Boleta de Garantia, INT = SFIN, ya que paga solo Interess
      *en las cuotas
           IF WSS-OPEC IN WSS-VARI = 'B'
               MOVE VEN-VAL-SFIN IN VEN TO WSS-VAL-INTE IN WSS-VARI
           ELSE
               SUBTRACT VEN-VAL-SCAP IN VEN FROM
                        VEN-VAL-SFIN IN VEN
                 GIVING WSS-VAL-INTE IN WSS-VARI.

      *ALD-BCI-INI/25.05.1999
      *PARA QUE NO LEEA CADA VEZ LA DCC POR VEN SIENDO LA MISMA OPC
           IF WSS-IND-LEE-DCC = 'S'
               MOVE 'N' TO WSS-IND-LEE-DCC
      * Obtiene Cuenta Ctble. CAP
               MOVE 'DCC'               TO DCC-COD-TTAB IN DCC
               MOVE 'CAP'               TO DCC-MSC-TCCT IN DCC
               MOVE OPC-COD-VCOC IN OPS TO DCC-COD-VCAM IN DCC
               MOVE OPC-COD-COOC IN OPS TO DCC-COD-COCR IN DCC
               MOVE DLC-COD-PLZO IN DLC TO DCC-COD-PLZO IN DCC
               MOVE DLC-IND-SCRT IN DLC TO DCC-IND-SCRT IN DCC
               MOVE DLC-IND-SCBZ IN DLC TO DCC-IND-SCBZ IN DCC
               MOVE FIO-GET-KEY TO FIO-CMND
               PERFORM COL-FIO-DCC
               IF NOT FIO-STAT-OKS
                   MOVE '* ' TO DCC-COD-PLZO IN DCC
                   MOVE FIO-GET-KEY TO FIO-CMND
                   PERFORM COL-FIO-DCC
                   IF NOT FIO-STAT-OKS
                       MOVE '*     ' TO DCC-COD-COCR IN DCC
                       MOVE FIO-GET-KEY TO FIO-CMND
                       PERFORM COL-FIO-DCC
                       IF NOT FIO-STAT-OKS
                           DISPLAY 'ERROR, DCC INEXISTENTE '
                           DCC-COD-TABL IN DCC ' ' OPC-CIC-IOPC IN OPS
                           MOVE 1 TO WSS-IND-FLAG IN WSS-VARI
                           GO TO FIN-LLENAR-MATRIZ.
      *ALD-BCI-FIN/25.05.1999

           IF VEN-FEC-FVEN IN VEN NOT > WSS-FEC-FPRI IN WSS-VARI
               MOVE WSS-PRO-PERI IN WSS-VARI
                                 TO WSS-COD-PERI IN WSS-VARI
      *RVM-CST-INI 9-MAY-1997
               MOVE WSS-VAL-INTE IN WSS-VARI
                                 TO WSS-VAL-IDVG IN WSS-VARI
               GO TO SIG1-LLENAR-MATRIZ
           ELSE
      * Si es credito a Tasa Variable y Variable respecto al CURSE
      * calcula los INT devengados por la rutina COL-CAL-INT
      * para el primer VEN despues de la fecha de proceso
           IF ICG-COD-CVTI IN ICG > SPACES AND
              ICG-MSC-TFPR IN ICG = 'C' AND
              WSS-IND-PRVN IN WSS-VARI = 'S'
               MOVE 'N' TO WSS-IND-PRVN IN WSS-VARI
               PERFORM CAL-INTE-IDVG
               IF WSS-IND-FLAG IN WSS-VARI = 1
                   GO TO FIN-LLENAR-MATRIZ
               ELSE
                   NEXT SENTENCE
           ELSE
           IF OPC-NUM-IVEN IN OPS = VEN-NUM-IVCT IN VEN
      *PRIMER VEN DE OPC A PAGAR
               MOVE 'N' TO WSS-IND-PRVN IN WSS-VARI
               PERFORM CAL-VAL-IDVG
               IF WSS-IND-FLAG IN WSS-VARI = 1
                   GO TO FIN-LLENAR-MATRIZ
               ELSE
                   NEXT SENTENCE
           ELSE
      *SI ES PRIMER VNCTO NO MOROSO Y TIENE VEN ANTERIORES MOROSOS
           IF WSS-IND-PRVN IN WSS-VARI = 'S'
               PERFORM CAL-VAL-IDVG-A
               MOVE 'N' TO WSS-IND-PRVN IN WSS-VARI
               IF WSS-IND-FLAG IN WSS-VARI = 1
                   GO TO FIN-LLENAR-MATRIZ.
      *RVM-CST-FIN 9-MAY-1997

      * Calcular diferencia entre FVEN y FPRO en meses
      * Obtiene tramo dependiendo del numero de dias de mora
           MOVE WSS-NUM-DPRO IN WSS-VARI TO FEC-DEC1.
           MOVE WSS-NUM-MPRO IN WSS-VARI TO FEC-MEC1.
           MOVE WSS-NUM-SPRO IN WSS-VARI TO FEC-SEC1.
           MOVE WSS-NUM-APRO IN WSS-VARI TO FEC-AEC1.
           MOVE VEN-NUM-DVEN IN VEN      TO FEC-DEC2.
           MOVE VEN-NUM-MVEN IN VEN      TO FEC-MEC2.
           MOVE VEN-NUM-SVEN IN VEN      TO FEC-SEC2.
           MOVE VEN-NUM-AVEN IN VEN      TO FEC-AEC2.
           MOVE FEC-FORM-FEC TO FEC-FORM.
           MOVE FEC-DIF-MES  TO FEC-CMND.
           PERFORM CAL-FEC.
           IF NOT FEC-STAT-OKS
               DISPLAY 'ERROR CAL DIF '
                     'ENTRE FPRO Y FVEN: '
                      OPC-CIC-IOPC IN OPS ' '
                      WSS-FEC-FPRO IN WSS-VARI ' ' VEN-FEC-FVEN IN VEN
               MOVE 1 TO WSS-IND-FLAG IN WSS-VARI
               GO TO FIN-LLENAR-MATRIZ.

           ADD 1 TO FEC-NMES.

           MOVE VEN-NUM-SVEN IN VEN TO WSS-NUM-SAUX IN WSS-VARI.
           MOVE VEN-NUM-AVEN IN VEN TO WSS-NUM-AAUX IN WSS-VARI.
           MOVE VEN-NUM-MVEN IN VEN TO WSS-NUM-MAUX IN WSS-VARI.
           MOVE VEN-NUM-DVEN IN VEN TO WSS-NUM-DAUX IN WSS-VARI.


      ************************************************************
           IF WSS-FEC-FVCT IN WSS-VARI NOT > WSS-FEC-F090
               MOVE VEN-NUM-SVEN IN VEN TO WSS-COD-PER1 IN WSS-VARI
               MOVE VEN-NUM-AVEN IN VEN TO WSS-COD-PER2 IN WSS-VARI
               MOVE VEN-NUM-MVEN IN VEN TO WSS-COD-PER3 IN WSS-VARI
               MOVE VEN-NUM-DVEN IN VEN TO WSS-COD-PER4 IN WSS-VARI
           ELSE
           IF WSS-NUM-FAUX IN WSS-VARI < WSS-NUM-FP04
               MOVE VEN-NUM-SVEN IN VEN TO WSS-COD-PER1 IN WSS-VARI
               MOVE VEN-NUM-AVEN IN VEN TO WSS-COD-PER2 IN WSS-VARI
               MOVE VEN-NUM-MVEN IN VEN TO WSS-COD-PER3 IN WSS-VARI
               MOVE '00'                TO WSS-COD-PER4 IN WSS-VARI
           ELSE
           IF WSS-NUM-FAUX IN WSS-VARI < WSS-NUM-FP11
               MOVE '00' TO WSS-COD-PER3 IN WSS-VARI
               MOVE '  ' TO WSS-COD-PER4 IN WSS-VARI
               IF WSS-NUM-FAUX IN WSS-VARI < WSS-NUM-FP05
                   MOVE VEN-NUM-SVEN IN VEN
                                     TO WSS-COD-PER1 IN WSS-VARI
                   MOVE VEN-NUM-AVEN IN VEN
                                     TO WSS-COD-PER2 IN WSS-VARI
               ELSE
               IF WSS-NUM-FAUX IN WSS-VARI < WSS-NUM-FP06
                   MOVE VEN-NUM-SVEN IN VEN
                                     TO WSS-COD-PER1 IN WSS-VARI
                   MOVE VEN-NUM-AVEN IN VEN
                                     TO WSS-COD-PER2 IN WSS-VARI
               ELSE
               IF WSS-NUM-FAUX IN WSS-VARI < WSS-NUM-FP07
                   MOVE VEN-NUM-SVEN IN VEN
                                     TO WSS-COD-PER1 IN WSS-VARI
                   MOVE VEN-NUM-AVEN IN VEN
                                     TO WSS-COD-PER2 IN WSS-VARI
               ELSE
               IF WSS-NUM-FAUX IN WSS-VARI < WSS-NUM-FP08
                   MOVE VEN-NUM-SVEN IN VEN
                                     TO WSS-COD-PER1 IN WSS-VARI
                   MOVE VEN-NUM-AVEN IN VEN
                                     TO WSS-COD-PER2 IN WSS-VARI
               ELSE
               IF WSS-NUM-FAUX IN WSS-VARI < WSS-NUM-FP09
                   MOVE VEN-NUM-SVEN IN VEN
                                     TO WSS-COD-PER1 IN WSS-VARI
                   MOVE VEN-NUM-AVEN IN VEN
                                     TO WSS-COD-PER2 IN WSS-VARI
               ELSE
                   MOVE VEN-NUM-SVEN IN VEN
                                     TO WSS-COD-PER1 IN WSS-VARI
                   MOVE VEN-NUM-AVEN IN VEN
                                     TO WSS-COD-PER2 IN WSS-VARI
           ELSE
           IF WSS-NUM-FAUX IN WSS-VARI < WSS-NUM-FP21
               MOVE '13' TO WSS-COD-PER3 IN WSS-VARI
               MOVE '  ' TO WSS-COD-PER3 IN WSS-VARI
               IF WSS-NUM-FAUX IN WSS-VARI < WSS-NUM-FP16
                   MOVE WSS-NUM-SP11 IN WSS-VARI
                                     TO WSS-COD-PER1 IN WSS-VARI
                   MOVE WSS-NUM-AP11 IN WSS-VARI
                                     TO WSS-COD-PER2 IN WSS-VARI
               ELSE
                   MOVE WSS-NUM-SP16 IN WSS-VARI
                                     TO WSS-COD-PER1 IN WSS-VARI
                   MOVE WSS-NUM-AP16 IN WSS-VARI
                                     TO WSS-COD-PER2 IN WSS-VARI
           ELSE
               MOVE WSS-NUM-SP21 IN WSS-VARI
                                 TO WSS-COD-PER1 IN WSS-VARI
               MOVE WSS-NUM-AP21 IN WSS-VARI
                                 TO WSS-COD-PER2 IN WSS-VARI
               MOVE '99' TO WSS-COD-PER3 IN WSS-VARI
               MOVE '  ' TO WSS-COD-PER4 IN WSS-VARI.

       SIG1-LLENAR-MATRIZ.
           IF WSS-IND-ULTI IN WSS-VARI = 'S'
               IF WSS-IND-IOPC IN WSS-VARI = 'N' OR
                  WSS-VAL-IDVG IN WSS-VARI > ZEROES
                   MOVE WSS-PRO-PERI IN WSS-VARI
                                     TO WSS-COD-PERI IN WSS-VARI
               ELSE
                   GO TO FIN-LLENAR-MATRIZ.

           IF WSS-IND-DISP IN WSS-VARI = 'S'
               DISPLAY 'LLENAR MATRIZ.'
               DISPLAY 'FECHA VENCTO   : ' VEN-FEC-FVEN IN VEN
               DISPLAY 'FECHA PROCESO  : ' WSS-FEC-FPRI IN WSS-VARI
               DISPLAY 'CUENTA DCC     : ' DCC-GLS-CCSB IN DCC
               DISPLAY 'MONEDA OPC     : ' OPC-COD-VCOC IN OPS
               DISPLAY 'PERIODO        : ' WSS-COD-PERI IN WSS-VARI
               DISPLAY 'SALDO CAPITAL  : ' VEN-VAL-SCAP IN VEN
               DISPLAY 'SALDO FINAL    : ' VEN-VAL-SFIN IN VEN
               DISPLAY 'INTERESES      : ' WSS-VAL-INTE IN WSS-VARI
               DISPLAY 'SALDO CREDITO  : ' OPC-VAL-SCRE IN OPS
      *RVM-CST-INI 9-MAY-1997
      *        DISPLAY 'INT. DEVENGADOS: ' DLC-VAL-INTD IN DLC
               DISPLAY 'INT. DEVENGADOS: ' WSS-VAL-IDVG IN WSS-VARI
      *RVM-CST-FIN 9-MAY-1997
               DISPLAY ' '.

      **********************************************************
           SET MOV-I TO 1.
           SEARCH TABLA-DET AT END GO TO SIG2-LLENAR-MATRIZ
             WHEN DCC-GLS-CCSB IN DCC      = T-GLS-CCSB (MOV-I) AND
                  OPC-COD-VCOC IN OPS      = T-COD-VCOC (MOV-I) AND
                  WSS-COD-PERI IN WSS-VARI = T-COD-PERI (MOV-I)
                   GO TO SIG3-LLENAR-MATRIZ.

      **********************************************************
      * Si no encuentra el registro en el archivo lo crea
       SIG2-LLENAR-MATRIZ.
           IF MOV-TOPE > MOV-LIM
               DISPLAY 'ERROR, VECTOR LLENO : FFU '
               DISPLAY 'PROGRAMA CANCELADO...'
               PERFORM GNS-PRO-ABT.

           IF WSS-COD-PERI IN WSS-VARI = WSS-PRO-PERI IN WSS-VARI
               MOVE DCC-GLS-CCSB IN DCC
                                   TO T-GLS-CCSB (MOV-TOPE)
               MOVE OPC-COD-VCOC IN OPS
                                   TO T-COD-VCOC (MOV-TOPE)
               MOVE WSS-COD-PERI IN WSS-VARI
                                   TO T-COD-PERI (MOV-TOPE)
               MOVE WSS-VAL-IDVG IN WSS-VARI
                                   TO T-SGV-INTE (MOV-TOPE)

               MOVE 'S' TO WSS-IND-IOPC IN WSS-VARI
               MOVE ZEROES        TO WSS-VAL-IDVG IN WSS-VARI
               IF WSS-OPEC IN WSS-VARI NOT = 'D'
                   MOVE OPC-VAL-SCRE IN OPS
                                   TO T-SGV-CAPI (MOV-TOPE)
               ELSE
                   MOVE VEN-VAL-SCAP IN VEN
                                   TO T-SGV-CAPI (MOV-TOPE)
           ELSE
               MOVE DCC-GLS-CCSB IN DCC
                                 TO T-GLS-CCSB (MOV-TOPE)
               MOVE OPC-COD-VCOC IN OPS
                                 TO T-COD-VCOC (MOV-TOPE)
               MOVE WSS-COD-PERI IN WSS-VARI
                                 TO T-COD-PERI (MOV-TOPE)
               MOVE VEN-VAL-SCAP IN VEN
                                 TO T-SGV-CAPI (MOV-TOPE)
               MOVE WSS-VAL-INTE IN WSS-VARI
                                 TO T-SGV-INTE (MOV-TOPE).
           IF WSS-IND-DISP IN WSS-VARI = 'S'
               DISPLAY 'REG GUARDADO OK'.
           SET MOV-TOPE UP BY 1.

           GO TO SIG4-LLENAR-MATRIZ.

       SIG3-LLENAR-MATRIZ.
           IF T-COD-PERI (MOV-I) NOT = WSS-PRO-PERI IN WSS-VARI
               ADD VEN-VAL-SCAP  IN VEN
                                 TO T-SGV-CAPI (MOV-I)
               ADD WSS-VAL-INTE  IN WSS-VARI
                                 TO T-SGV-INTE (MOV-I)
           ELSE
           IF WSS-IND-IOPC IN WSS-VARI = 'N'
               ADD WSS-VAL-IDVG  IN WSS-VARI
                                 TO T-SGV-INTE (MOV-I)

               MOVE 'S'          TO WSS-IND-IOPC IN WSS-VARI
               MOVE ZEROES       TO WSS-VAL-IDVG IN WSS-VARI
               IF WSS-OPEC IN WSS-VARI NOT = 'D'
                   ADD OPC-VAL-SCRE IN OPS
                                   TO T-SGV-CAPI (MOV-I)
               ELSE
                   ADD VEN-VAL-SCAP IN VEN
                                   TO T-SGV-CAPI (MOV-I)
           ELSE
           IF WSS-IND-IOPC IN WSS-VARI = 'S'
               ADD WSS-VAL-IDVG  IN WSS-VARI
                                 TO T-SGV-INTE (MOV-I)
               MOVE ZEROES       TO WSS-VAL-IDVG IN WSS-VARI.

       SIG4-LLENAR-MATRIZ.
           IF WSS-IND-ULTI IN WSS-VARI = 'S'
               IF WSS-VAL-IDVG IN WSS-VARI > ZEROES
                   MOVE WSS-PRO-PERI IN WSS-VARI
                                     TO WSS-COD-PERI IN WSS-VARI
                   GO TO SIG1-LLENAR-MATRIZ
               ELSE
                   GO TO FIN-LLENAR-MATRIZ
           ELSE
               GO TO INI-LLENAR-MATRIZ.
       FIN-LLENAR-MATRIZ.
           EXIT.


      ******************************************************************
      *El parametro VEN-FTBS sirve para buscar la ultima tasa vigente
      *a esa fecha (si lleva valor), y si no lleva valor, busca la tasa
      *a fecha de colocacion
       CARGA-FTBS SECTION.
      *******************
       INI-CARGA-FTBS.
           IF WSS-PVEZ IN WSS-VARI = 'S'
               MOVE OPC-FEC-FCOL IN OPS TO WSS-FEC-FUCT IN WSS-VARI
                                           WSS-FEC-FXXX IN WSS-VARI
           ELSE
           IF WSS-PVEZ IN WSS-VARI NOT = 'S' AND
              VEN-FEC-FVEN IN VEN NOT > HOY-FHOY
               MOVE VEN-FEC-FVEN IN VEN TO WSS-FEC-FUCT IN WSS-VARI
               MOVE VEN-FEC-FVEN IN VEN TO WSS-FEC-FXXX IN WSS-VARI
           ELSE
               MOVE WSS-FEC-FXXX TO WSS-FEC-FUCT IN WSS-VARI.
       FIN-CARGA-FTBS.
           EXIT.


      ******************************************************************
       CAL-INTE-IDVG SECTION.
      **********************
       INI-CAL-INTE-IDVG.
      * Si FDEV > FPRO se pagaron los intereses, por lo tanto,
      * los Intereses devengados valen 0
           IF DLC-FEC-FDEV IN DLC > WSS-FEC-FPRI IN WSS-VARI
               MOVE ZEROES TO WSS-VAL-IDVG IN WSS-VARI
               GO TO FIN-CAL-INTE-IDVG.

      *Si es unico vcto. despues de fecha de proceso, las fechas para
      *la rutina son FANT y FPRI. Si es primer vcto. despues de la
      *fecha de proceso, las fechas para rutina son FDLC y FPRI
           IF OPC-NUM-IVEN IN OPS = VEN-NUM-IVCT IN VEN
               MOVE DLC-NUM-DDEV IN DLC      TO INT-DUNO
               MOVE DLC-NUM-MDEV IN DLC      TO INT-MUNO
               MOVE DLC-NUM-SDEV IN DLC      TO INT-SUNO
               MOVE DLC-NUM-ADEV IN DLC      TO INT-AUNO
           ELSE
               PERFORM LEE-VEN-ANTE
               IF WSS-IND-FLAG IN WSS-VARI = 1
                   GO TO FIN-CAL-INTE-IDVG
               ELSE
                   MOVE WSS-VEN-DANT IN WSS-VARI TO INT-DUNO
                   MOVE WSS-VEN-MANT IN WSS-VARI TO INT-MUNO
                   MOVE WSS-VEN-SANT IN WSS-VARI TO INT-SUNO
                   MOVE WSS-VEN-AANT IN WSS-VARI TO INT-AUNO.

           MOVE WSS-NUM-DPRI IN WSS-VARI TO INT-DDOS.
           MOVE WSS-NUM-MPRI IN WSS-VARI TO INT-MDOS.
           MOVE WSS-NUM-SPRI IN WSS-VARI TO INT-SDOS.
           MOVE WSS-NUM-APRI IN WSS-VARI TO INT-ADOS.

           MOVE INT-DDOS                 TO FEC-ITM1.
           MOVE INT-MDOS                 TO FEC-ITM2.
           MOVE INT-SDOS                 TO FEC-ITM3.
           MOVE INT-ADOS                 TO FEC-ITM4.
           MOVE 1                        TO FEC-NDIA
           MOVE FEC-FORM-FEC             TO FEC-FORM
           MOVE FEC-SUM-DIA              TO FEC-CMND
           PERFORM CAL-FEC
           IF NOT FEC-STAT-OKS
               MOVE 1 TO WSS-IND-FLAG IN WSS-VARI
               GO TO FIN-CAL-INTE-IDVG.

           MOVE FEC-ITM1            TO INT-DDOS.
           MOVE FEC-ITM2            TO INT-MDOS.
           MOVE FEC-ITM3            TO INT-SDOS.
           MOVE FEC-ITM4            TO INT-ADOS.

           MOVE ZEROES              TO INT-TIPE.
           MOVE OPC-COD-VCOC IN OPS TO INT-VCAM IN INT-VARI.
           MOVE OPC-NUM-DCOL IN OPS TO INT-DCOL
                                       INT-DBTV.
           MOVE OPC-NUM-MCOL IN OPS TO INT-MCOL
                                       INT-MBTV.
           MOVE OPC-NUM-SCOL IN OPS TO INT-SCOL
                                       INT-SBTV.
           MOVE OPC-NUM-ACOL IN OPS TO INT-ACOL
                                       INT-ABTV.
           MOVE OPC-CIC-IOPC IN OPS TO INT-IOPC IN INT-VARI.
           MOVE VEN-NUM-IDLC IN VEN TO INT-IDLC IN INT-VARI.
      *     MOVE ZEROES              TO INT-SEVE IN INT-VARI.
      *     MOVE SPACES              TO INT-TCVF IN INT-VARI
           MOVE SPACES              TO INT-CMSG IN INT-VARI.

           PERFORM COL-CAL-INT.
           IF INT-CMSG > SPACES
               MOVE 'COL'        TO MSG-COD-SIST
               MOVE INT-CMSG     TO MSG-COD-MENS
               PERFORM GET-MSG
               DISPLAY 'ERROR, OPC: '
                            OPC-CIC-IOPC IN OPS ' '
                            MSG-GLS-DESC ' ' TAB-CIC-CTAB
               MOVE 1 TO WSS-IND-FLAG IN WSS-VARI
               GO TO FIN-CAL-INTE-IDVG.

           IF OPC-IND-VSTR IN OPS = 'S'
               IF OPC-COD-VCOC IN OPS = WSS-COD-PESO IN WSS-VARI
                   COMPUTE WSS-SIN-DECI IN WSS-VARI ROUNDED =
                                   WSS-VAL-SCPA IN WSS-VARI *
                                   INT-TIPE IN INT-VARI
                   MOVE WSS-SIN-DECI IN WSS-VARI TO
                                   WSS-VAL-IDVG IN WSS-VARI
               ELSE
                   COMPUTE WSS-CON-DECI IN WSS-VARI ROUNDED =
                                   WSS-VAL-SCPA IN WSS-VARI *
                                   INT-TIPE IN INT-VARI
                   MOVE WSS-CON-DECI IN WSS-VARI TO
                                   WSS-VAL-IDVG IN WSS-VARI
           ELSE
               IF OPC-COD-VCOC IN OPS = WSS-COD-PESO IN WSS-VARI
                   COMPUTE WSS-SIN-DECI IN WSS-VARI ROUNDED =
                                   DLC-SCPA (VEN-IDLC) *
                                   INT-TIPE IN INT-VARI
                   MOVE WSS-SIN-DECI IN WSS-VARI TO
                                   WSS-VAL-IDVG IN WSS-VARI
               ELSE
                   COMPUTE WSS-CON-DECI IN WSS-VARI ROUNDED =
                                   DLC-SCPA (VEN-IDLC) *
                                   INT-TIPE IN INT-VARI
                   MOVE WSS-CON-DECI IN WSS-VARI TO
                                   WSS-VAL-IDVG IN WSS-VARI.
       FIN-CAL-INTE-IDVG.
           EXIT.


      *RVM-CST-INI 9-MAY-1997
      ******************************************************************
       CAL-VAL-IDVG SECTION.
      *********************
       INI-CAL-VAL-IDVG.
      * Si FDEV > FPRO se pagaron los intereses, por lo tanto,
      * los Intereses devengados valen 0
           IF DLC-FEC-FDEV IN DLC > WSS-FEC-FPRI IN WSS-VARI
               MOVE ZEROES TO WSS-VAL-IDVG IN WSS-VARI
               GO TO FIN-CAL-VAL-IDVG.

           PERFORM OBT-DIF-DIAS-A.
           IF WSS-IND-FLAG IN WSS-VARI = 1
               MOVE ZEROES TO WSS-VAL-IDVG IN WSS-VARI
               GO TO FIN-CAL-VAL-IDVG.

           IF OPC-COD-VCOC IN OPS = WSS-COD-PESO IN WSS-VARI
              COMPUTE WSS-SIN-DECI IN WSS-VARI ROUNDED =
              ( WSS-VAL-INTE IN WSS-VARI * WSS-DIF-DVPR IN WSS-VARI )
              / WSS-DIF-DVVN IN WSS-VARI
              MOVE WSS-SIN-DECI IN WSS-VARI TO WSS-VAL-IDVG IN WSS-VARI
           ELSE
              COMPUTE WSS-CON-DECI IN WSS-VARI ROUNDED =
              ( WSS-VAL-INTE IN WSS-VARI * WSS-DIF-DVPR IN WSS-VARI )
              / WSS-DIF-DVVN IN WSS-VARI
              MOVE WSS-CON-DECI IN WSS-VARI TO WSS-VAL-IDVG IN WSS-VARI.
       FIN-CAL-VAL-IDVG.
           EXIT.


      ******************************************************************
       CAL-VAL-IDVG-A SECTION.
      ***********************
       INI-CAL-VAL-IDVG-A.
           PERFORM LEE-VEN-ANTE.
           IF WSS-IND-FLAG IN WSS-VARI = 1
               GO TO FIN-CAL-VAL-IDVG-A.

           PERFORM OBT-DIF-DIAS-A.
           IF WSS-IND-FLAG IN WSS-VARI = 1
               GO TO FIN-CAL-VAL-IDVG-A.

           PERFORM OBT-DIF-DIAS-B.
           IF WSS-IND-FLAG IN WSS-VARI = 1
               GO TO FIN-CAL-VAL-IDVG-A.

      *CALCULA DIFERENCIAS DE DIAS
           PERFORM OBT-DIF-DIAS-C.
           IF WSS-IND-FLAG IN WSS-VARI = 1
               MOVE ZEROES TO WSS-VAL-IDVG IN WSS-VARI
               GO TO FIN-CAL-VAL-IDVG-A.

           IF OPC-COD-VCOC IN OPS = WSS-COD-PESO IN WSS-VARI
               COMPUTE WSS-SIN-DECI IN WSS-VARI ROUNDED =
               ( WSS-VAL-INTE IN WSS-VARI * WSS-DIF-DVPR IN WSS-VARI )
               / WSS-DIF-VNAN IN WSS-VARI
               MOVE WSS-SIN-DECI IN WSS-VARI TO WSS-VAL-IDVG IN WSS-VARI
           ELSE
              COMPUTE WSS-CON-DECI IN WSS-VARI ROUNDED =
              ( WSS-VAL-INTE IN WSS-VARI * WSS-DIF-DVPR IN WSS-VARI )
              / WSS-DIF-VNAN IN WSS-VARI
              MOVE WSS-CON-DECI IN WSS-VARI TO WSS-VAL-IDVG IN WSS-VARI.
       FIN-CAL-VAL-IDVG-A.
           EXIT.


      ******************************************************************
       OBT-DIF-DIAS-A SECTION.
      ***********************
       INI-OBT-DIF-DIAS-A.

      * Calcular diferencia entre FDEV y FVEN en DIAS
           MOVE DLC-NUM-DDEV IN DLC TO FEC-DEC1.
           MOVE DLC-NUM-MDEV IN DLC TO FEC-MEC1.
           MOVE DLC-NUM-SDEV IN DLC TO FEC-SEC1.
           MOVE DLC-NUM-ADEV IN DLC TO FEC-AEC1.
           MOVE VEN-NUM-DVEN IN VEN TO FEC-DEC2.
           MOVE VEN-NUM-MVEN IN VEN TO FEC-MEC2.
           MOVE VEN-NUM-SVEN IN VEN TO FEC-SEC2.
           MOVE VEN-NUM-AVEN IN VEN TO FEC-AEC2.
           MOVE FEC-FORM-FEC TO FEC-FORM.
           MOVE FEC-DIF-DIA  TO FEC-CMND.
           PERFORM CAL-FEC.
           IF NOT FEC-STAT-OKS
               DISPLAY 'ERROR CAL DIF '
                       'ENTRE FUPI Y FVEN '
                        OPC-CIC-IOPC IN OPS ' '
                        DLC-FEC-FDEV IN DLC ' ' VEN-FEC-FVEN IN VEN
               MOVE 1 TO WSS-IND-FLAG IN WSS-VARI
               GO TO FIN-OBT-DIF-DIAS-A.

           MOVE FEC-NDIA TO WSS-DIF-DVVN IN WSS-VARI.

      * Calcular diferencia entre FDEV y FPRI en DIAS
           MOVE DLC-NUM-DDEV IN DLC      TO FEC-DEC1.
           MOVE DLC-NUM-MDEV IN DLC      TO FEC-MEC1.
           MOVE DLC-NUM-SDEV IN DLC      TO FEC-SEC1.
           MOVE DLC-NUM-ADEV IN DLC      TO FEC-AEC1.
           MOVE WSS-NUM-DPRI IN WSS-VARI TO FEC-DEC2.
           MOVE WSS-NUM-MPRI IN WSS-VARI TO FEC-MEC2.
           MOVE WSS-NUM-SPRI IN WSS-VARI TO FEC-SEC2.
           MOVE WSS-NUM-APRI IN WSS-VARI TO FEC-AEC2.
           MOVE FEC-FORM-FEC TO FEC-FORM.
           MOVE FEC-DIF-DIA  TO FEC-CMND.
           PERFORM CAL-FEC.
           IF NOT FEC-STAT-OKS
               DISPLAY 'ERROR CAL DIF '
                       'ENTRE FUPI Y FPRO '
                       OPC-CIC-IOPC IN OPS
                       DLC-FEC-FDEV IN DLC ' ' WSS-FEC-FPRI IN WSS-VARI
               MOVE 1 TO WSS-IND-FLAG IN WSS-VARI
               GO TO FIN-OBT-DIF-DIAS-A.

           MOVE FEC-NDIA TO WSS-DIF-DVPR IN WSS-VARI.

      * CON ESTO SE CONSIDERA EL DIA DE PROCESO INCLUSIVE
           ADD 1 TO WSS-DIF-DVPR IN WSS-VARI.

       FIN-OBT-DIF-DIAS-A.
           EXIT.


      ******************************************************************
       OBT-DIF-DIAS-B SECTION.
      ***********************
       INI-OBT-DIF-DIAS-B.

      * Calcular diferencia entre FANT y FVEN en DIAS
           MOVE WSS-VEN-DANT IN WSS-VARI TO FEC-DEC1.
           MOVE WSS-VEN-MANT IN WSS-VARI TO FEC-MEC1.
           MOVE WSS-VEN-SANT IN WSS-VARI TO FEC-SEC1.
           MOVE WSS-VEN-AANT IN WSS-VARI TO FEC-AEC1.
           MOVE VEN-NUM-DVEN IN VEN      TO FEC-DEC2.
           MOVE VEN-NUM-MVEN IN VEN      TO FEC-MEC2.
           MOVE VEN-NUM-SVEN IN VEN      TO FEC-SEC2.
           MOVE VEN-NUM-AVEN IN VEN      TO FEC-AEC2.
           MOVE FEC-FORM-FEC TO FEC-FORM.
           MOVE FEC-DIF-DIA  TO FEC-CMND.
           PERFORM CAL-FEC.
           IF NOT FEC-STAT-OKS
               DISPLAY 'ERROR CAL DIF '
                       'ENTRE FVEN ANT Y FVEN '
                       OPC-CIC-IOPC IN OPS ' '
                       WSS-VEN-FANT IN WSS-VARI ' ' VEN-FEC-FVEN IN VEN
               MOVE 1 TO WSS-IND-FLAG IN WSS-VARI
               GO TO FIN-OBT-DIF-DIAS-B.

           MOVE FEC-NDIA TO WSS-DIF-VNAN IN WSS-VARI.
       FIN-OBT-DIF-DIAS-B.
           EXIT.


      ******************************************************************
       OBT-DIF-DIAS-C SECTION.
      ***********************
       INI-OBT-DIF-DIAS-C.
      * Calcular diferencia entre FANT y FPRI en DIAS
           MOVE WSS-VEN-DANT IN WSS-VARI TO FEC-DEC1.
           MOVE WSS-VEN-MANT IN WSS-VARI TO FEC-MEC1.
           MOVE WSS-VEN-SANT IN WSS-VARI TO FEC-SEC1.
           MOVE WSS-VEN-AANT IN WSS-VARI TO FEC-AEC1.
           MOVE WSS-NUM-DPRI IN WSS-VARI TO FEC-DEC2.
           MOVE WSS-NUM-MPRI IN WSS-VARI TO FEC-MEC2.
           MOVE WSS-NUM-SPRI IN WSS-VARI TO FEC-SEC2.
           MOVE WSS-NUM-APRI IN WSS-VARI TO FEC-AEC2.
           MOVE FEC-FORM-FEC TO FEC-FORM.
           MOVE FEC-DIF-DIA  TO FEC-CMND.
           PERFORM CAL-FEC.
           IF NOT FEC-STAT-OKS
               DISPLAY 'ERROR CAL DIF '
                       'ENTRE FVEN ANT Y FPRO '
                        OPC-CIC-IOPC IN OPS ' '
                        WSS-VEN-FANT IN WSS-VARI ' '
                        WSS-FEC-FPRI IN WSS-VARI
               MOVE 1 TO WSS-IND-FLAG IN WSS-VARI
               GO TO FIN-OBT-DIF-DIAS-C.

           MOVE FEC-NDIA TO WSS-DIF-DVPR IN WSS-VARI.

      * CON ESTO SE CONSIDERA EL DIA DE PROCESO INCLUSIVE
           ADD 1 TO WSS-DIF-DVPR IN WSS-VARI.
       FIN-OBT-DIF-DIAS-C.
           EXIT.


      ******************************************************************
       LEE-VEN-ANTE SECTION.
      *********************
       INI-LEE-VEN-ANTE.

           IF OPC-IND-VSTR IN OPS = 'S'
               MOVE OPC-CIC-IOPC IN OPS TO VEN-CIC-IOPC IN VEN
               MOVE OPC-FEC-FCOL IN OPS TO VEN-FTBS
               SUBTRACT 1        FROM      VEN-NUM-IVEN IN VEN
               MOVE 'S' TO VEN-KEST
               MOVE FIO-GET-KEY TO FIO-CMND
               PERFORM COL-OBT-VEN
               IF NOT VEN-STAT-OKS
                   MOVE 1 TO WSS-IND-FLAG IN WSS-VARI
                   DISPLAY 'ERROR LECTURA VEN POR RUTINA '
                            OPC-CIC-IOPC IN OPS ' '
                            VEN-STAT ' ' VEN-MEN2
                   GO TO FIN-LEE-VEN-ANTE
               ELSE
                   NEXT SENTENCE
           ELSE
               MOVE OPC-CIC-IOPC IN OPS TO VEN-CIC-IOPC IN VEN
               SUBTRACT 1        FROM      VEN-NUM-IVEN IN VEN
               MOVE FIO-GET-NLS TO FIO-CMND
               PERFORM COL-FIO-VEN
               IF NOT ( FIO-STAT-OKS AND
                  OPC-CIC-IOPC IN OPS = VEN-CIC-IOPC IN VEN )
                   DISPLAY 'ERROR LECTURA VEN PARA LLAVE: '
                                              OPC-CIC-IOPC IN OPS
                   MOVE 1 TO WSS-IND-FLAG IN WSS-VARI
                   GO TO FIN-LEE-VEN-ANTE.

           MOVE VEN-FEC-FVEN IN VEN TO WSS-VEN-FANT IN WSS-VARI.

      *RESTAURA VEN
           ADD 1                        TO VEN-NUM-IVEN IN VEN.
           IF OPC-IND-VSTR IN OPS = 'S'
               MOVE OPC-CIC-IOPC IN OPS      TO VEN-CIC-IOPC IN VEN
               MOVE WSS-FEC-FUCT IN WSS-VARI TO VEN-FTBS
               MOVE 'S' TO VEN-KEST
               MOVE FIO-GET-KEY TO FIO-CMND
               PERFORM COL-OBT-VEN
               IF NOT VEN-STAT-OKS
                   MOVE 1 TO WSS-IND-FLAG IN WSS-VARI
                   DISPLAY 'ERROR LECTURA VEN POR RUTINA '
                           OPC-CIC-IOPC IN OPS ' '
                           VEN-STAT ' ' VEN-MEN2
                   GO TO FIN-LEE-VEN-ANTE
               ELSE
                   NEXT SENTENCE
           ELSE
               MOVE OPC-CIC-IOPC IN OPS TO VEN-CIC-IOPC IN VEN
               MOVE FIO-GET-NLS TO FIO-CMND
               PERFORM COL-FIO-VEN
               IF NOT ( FIO-STAT-OKS AND
                  OPC-CIC-IOPC IN OPS = VEN-CIC-IOPC IN VEN )
                   DISPLAY 'ERROR LECTURA VEN PARA LLAVE: '
                                              OPC-CIC-IOPC IN OPS
                   MOVE 1 TO WSS-IND-FLAG IN WSS-VARI
                   GO TO FIN-LEE-VEN-ANTE.
       FIN-LEE-VEN-ANTE.
           EXIT.


      ******************************************************************
       OBT-COD-MNAC SECTION.
      *********************
       INI-OBT-COD-MNAC.
      * Obtiene Cod. PESOS con CIC de la Moneda '0999'
           MOVE 'TAB'          TO FIO-SIST.
           MOVE 'VLR'          TO TAB-CIC-TTAB IN TAB.
           MOVE '0999  '       TO TAB-CIC-CTAB IN TAB.
           MOVE 'TAB-CIC-TABL' TO FIO-AKEY.
           MOVE FIO-GET-KEY    TO FIO-CMND.
           PERFORM GNS-FIO-TAB.
           IF NOT FIO-STAT-OKS
               MOVE 'TAB'          TO MSG-COD-SIST
               MOVE 'CIC0999  NEX' TO MSG-COD-MENS
               PERFORM GET-MSG
               DISPLAY 'ERROR, ' MSG-GLS-DESC.

           MOVE TAB-COD-CTAB IN TAB TO WSS-COD-PESO IN WSS-VARI.
       FIN-OBT-COD-MNAC.
           EXIT.
      *RVM-CST-FIN 9-MAY-1997


      ******************************************************************
       MUESTRA-ESTADISTICAS SECTION.
      *****************************
       INI-MUESTRA-ESTADISTICAS.
           DISPLAY ' '.
           DISPLAY ' ESTADISTICAS DEL PROCESO.'.
           DISPLAY ' -------------------------'.
           DISPLAY ' '.
           DISPLAY 'REGISTROS LEIDOS DE TABLA OPC          : '
                                        WSS-NUM-RLEI IN WSS-VARI.
           DISPLAY 'REGISTROS SELECCIONADOS DE TABLA OPC   : '
                                        WSS-NUM-RSEL IN WSS-VARI.
           DISPLAY 'REGISTROS RECHAZADOS                   : '
                                        WSS-NUM-RECH IN WSS-VARI.
           DISPLAY 'REGISTROS GRABADOS EN TABLA FFU        : '
                                        WSS-NUM-RGRA IN WSS-VARI.
       FIN-MUESTRA-ESTADISTICAS.
           EXIT.


      ******************************************************************
       CLOSE-FILE SECTION.
      ********************
       INI-CLOSE-FILE.
           MOVE FIO-CLO TO FIO-CMND.
           PERFORM COL-FIO-FFU.
           PERFORM COL-FIO-OPS.
           PERFORM COL-FIO-EVC.
           PERFORM COL-FIO-VEN.
           PERFORM COL-FIO-RCV.
           PERFORM COL-FIO-DLC.
           PERFORM COL-FIO-ICG.
           MOVE 'COL' TO FIO-SIST.
           PERFORM GNS-FIO-TAB.
           MOVE 'TAB' TO FIO-SIST.
           PERFORM GNS-FIO-TAB.
       FIN-CLOSE-FILE.
           EXIT.

      ******************************************************************
      * Copys necesarios para la ejecucion del programa.

      *RRM-INI 16-FEB-1999
      *COPY COLBFDLC.
      * SE INCORPORA EL COLBFDLC EXPANDIDO PARA CAMBIAR EL NUMERO DE LA
      * BASE DE DATOS DE 160 A 162.
      *MODULO FIO PARA REGISTRO DLC EN DATACOM, 25-MAR-1993 09:59:30.49
       COL-FIO-DLC SECTION.
       INI-COL-FIO-DLC.
           MOVE ADR-DLC-REQA TO ADR-REQA.
           MOVE 'DLC' TO ADR-TABL IN ADR-REQA.
      *
      *
           IF WSS-IND-PROC IN WSS-VARI = 'R'
               MOVE +162 TO ADR-DBID IN ADR-REQA
               GO TO FSR-COL-FIO-DLC.
      *
      *
           MOVE 'COL'  TO IDD-SAUX.
           MOVE 'M'    TO IDD-GAUX.
           MOVE SPACES TO IDD-RAUX.
           MOVE 1 TO IDD-IAUX.
           SET IDD-ITBL TO 1.
           SEARCH IDD-VSIS VARYING IDD-IAUX
             AT END
               GO TO GRP-COL-FIO-DLC
             WHEN IDD-DENT( IDD-ITBL ) = IDD-DAUX
               MOVE IDD-IENT( IDD-ITBL) TO ADR-DBID IN ADR-REQA
               GO TO FSR-COL-FIO-DLC.
       GRP-COL-FIO-DLC.
           MOVE SPACES TO IDD-GAUX.
           MOVE 1      TO IDD-IAUX.
           SET IDD-ITBL TO 1.
           SEARCH IDD-VSIS VARYING IDD-IAUX
             AT END
               MOVE 'En COL-FIO-DLC, NO existe en IDD:' TO FIO-MEN1
               MOVE IDD-DAUX                            TO FIO-MEN2
               PERFORM PRG-ABT
             WHEN IDD-DENT( IDD-ITBL ) = IDD-DAUX
               MOVE IDD-IENT( IDD-ITBL) TO ADR-DBID IN ADR-REQA.
       FSR-COL-FIO-DLC.
      *
           MOVE 'DLC00' TO ADR-ELM1.
           MOVE FIO-PROG TO ADR-PROG.
           IF FIO-KDEF = FIO-KDEF-S
               GO TO CON-COL-FIO-DLC.
           MOVE FIO-CMND TO FIO-IAKY.
           IF NOT FIO-IAKY-CON AND
              ( FIO-AKEY = 'DLC-KEY-IDLC' OR FIO-AKEY NOT > SPACES )
               MOVE DLC-KEY-IDLC IN DLC TO ADR-VKEY IN ADR-REQA
               MOVE 'DLC00' TO ADR-DKEY IN ADR-REQA
           ELSE
           IF FIO-AKEY = 'DLC-IND-SCTB'
               MOVE DLC-IND-SCTB IN DLC TO ADR-VKEY IN ADR-REQA
               MOVE 'DLC01' TO ADR-DKEY IN ADR-REQA
           ELSE
               MOVE 'En COL-FIO-DLC, key' TO FIO-MENS
               MOVE FIO-AKEY   TO FIO-MENS-KEY
               MOVE 'Invalida' TO FIO-MENS-FIL
               PERFORM PRG-ABT.
       CON-COL-FIO-DLC.
           MOVE DLC TO FIO-DFLD.
           PERFORM GNS-FIO-DTC.
           IF FIO-STAT-OKS
               MOVE FIO-DFLD TO DLC
           ELSE
               MOVE 'COLDLC' TO FIO-MEN2
               IF FIO-STAT-FTL
                   PERFORM PRG-ABT.
           MOVE SPACES   TO FIO-AKEY.
           MOVE FIO-KDEF-N TO FIO-KDEF.
           MOVE ADR-REQA TO ADR-DLC-REQA.
       FIN-COL-FIO-DLC.
           EXIT.
      *RRM-FIN 16-FEB-1999

       COPY COLBFFFU.
       COPY COLBFOPS.
      *RRM-INI 16-FEB-1999
      *COPY COLBFVEN.
      * SE INCORPORA EL COLBFVEN EXPANDIDO PARA CAMBIAR EL NUMERO DE LA
      * BASE DE DATOS DE 160 A 162.
      * Modulo FIO para registro VEN en DATACOM, 25-MAR-1993 10:01:59.98
       COL-FIO-VEN SECTION.
       INI-COL-FIO-VEN.
           MOVE ADR-VEN-REQA TO ADR-REQA.
           MOVE 'VEN' TO ADR-TABL IN ADR-REQA.
      *
      *
           IF WSS-IND-PROC IN WSS-VARI = 'R'
               MOVE +162 TO ADR-DBID IN ADR-REQA
               GO TO FSR-COL-FIO-VEN.
      *
      *
           MOVE 'COL'  TO IDD-SAUX.
           MOVE 'M'    TO IDD-GAUX.
           MOVE SPACES TO IDD-RAUX.
           MOVE 1 TO IDD-IAUX.
           SET IDD-ITBL TO 1.
           SEARCH IDD-VSIS VARYING IDD-IAUX
             AT END
               GO TO GRP-COL-FIO-VEN
             WHEN IDD-DENT( IDD-ITBL ) = IDD-DAUX
               MOVE IDD-IENT( IDD-ITBL) TO ADR-DBID IN ADR-REQA
               GO TO FSR-COL-FIO-VEN.
       GRP-COL-FIO-VEN.
           MOVE SPACES TO IDD-GAUX.
           MOVE 1      TO IDD-IAUX.
           SET IDD-ITBL TO 1.
           SEARCH IDD-VSIS VARYING IDD-IAUX
             AT END
               MOVE 'En COL-FIO-VEN, NO existe en IDD:' TO FIO-MEN1
               MOVE IDD-DAUX                            TO FIO-MEN2
               PERFORM PRG-ABT
             WHEN IDD-DENT( IDD-ITBL ) = IDD-DAUX
               MOVE IDD-IENT( IDD-ITBL) TO ADR-DBID IN ADR-REQA.
       FSR-COL-FIO-VEN.
      *
           MOVE 'VEN00' TO ADR-ELM1.
           MOVE FIO-PROG TO ADR-PROG.
           IF FIO-KDEF = FIO-KDEF-S
               GO TO CON-COL-FIO-VEN.
           MOVE FIO-CMND TO FIO-IAKY.
           IF NOT FIO-IAKY-CON AND
              ( FIO-AKEY = 'VEN-KEY-IVEN' OR FIO-AKEY NOT > SPACES )
               MOVE VEN-KEY-IVEN IN VEN TO ADR-VKEY IN ADR-REQA
               MOVE 'VEN00' TO ADR-DKEY IN ADR-REQA
           ELSE
           IF FIO-AKEY = 'VEN-FEC-FVEN'
               MOVE VEN-FEC-FVEN IN VEN TO ADR-VKEY IN ADR-REQA
               MOVE 'VEN01' TO ADR-DKEY IN ADR-REQA
           ELSE
           IF FIO-AKEY = 'VEN-FEC-FIMV'
               MOVE VEN-FEC-FIMV IN VEN TO ADR-VKEY IN ADR-REQA
               MOVE 'VEN02' TO ADR-DKEY IN ADR-REQA
           ELSE
           IF FIO-AKEY = 'VEN-IND-SCTB'
               MOVE VEN-IND-SCTB IN VEN TO ADR-VKEY IN ADR-REQA
               MOVE 'VEN03' TO ADR-DKEY IN ADR-REQA
           ELSE
               MOVE 'En COL-FIO-VEN, key' TO FIO-MENS
               MOVE FIO-AKEY   TO FIO-MENS-KEY
               MOVE 'Invalida' TO FIO-MENS-FIL
               PERFORM PRG-ABT.
       CON-COL-FIO-VEN.
           MOVE VEN TO FIO-DFLD.
           PERFORM GNS-FIO-DTC.
           IF FIO-STAT-OKS
               MOVE FIO-DFLD TO VEN
           ELSE
               MOVE 'COLVEN' TO FIO-MEN2
               IF FIO-STAT-FTL
                   PERFORM PRG-ABT.
           MOVE SPACES   TO FIO-AKEY.
           MOVE FIO-KDEF-N TO FIO-KDEF.
           MOVE ADR-REQA TO ADR-VEN-REQA.
       FIN-COL-FIO-VEN.
           EXIT.
      *RRM-FIN 16-FEB-1999

      ******************************************************************
      * COPY COLBGVEN REPLACING ==IN OPS== BY ==IN OPS==.
      *Rutina de expansion de vencimientos
      *Se modifico para que expandiera todas las cuotas,
      *incluyendo la ultima que no conoce
      *JSS LAST MOD. 16-JUN-1997
       COL-OBT-VEN SECTION.
       INI-COL-OBT-VEN.
      *DAD ini  07-JAN-1993
      * Carga variable necesaria para procesar con la variable VEN-INIT
           ADD  1  OPC-NUM-IVEN IN OPS GIVING VEN-OIM1.
      *DAD fin  07-JAN-1993

      *Calcula la cantidad de VENCIMIENTOS TOTAL de la operacion
           IF OPC-NUM-TVCC IN OPS NOT > ZEROES
               ADD OPC-NUM-VCVG IN OPS
                   OPC-NUM-VCCO IN OPS
                   OPC-NUM-VCCM IN OPS
                   OPC-NUM-VCCV IN OPS GIVING VEN-VCTO
           ELSE
               ADD OPC-NUM-VCVG IN OPS
                   OPC-NUM-TVCC IN OPS GIVING VEN-VCTO.
      *
      *Analiza comando ( cual vencimiento desea obtener )
           IF FIO-CMND = FIO-GET-FST
               MOVE 1 TO VEN-NUM-IVEN IN VEN
           ELSE
           IF FIO-CMND = FIO-GET-NLS
               IF VEN-NUM-IVEN IN VEN = ZEROES
                   MOVE 1 TO VEN-NUM-IVEN IN VEN
               ELSE
                   NEXT SENTENCE
           ELSE
           IF FIO-CMND = FIO-GET-NXT
               ADD 1 TO VEN-NUM-IVEN IN VEN
               IF VEN-NUM-IVEN IN VEN > VEN-VCTO
                   MOVE VEN-SEOF TO VEN-STAT
                   GO TO FIN-COL-OBT-VEN.
      *
      *Parrafo que lee vencimiento, estructuras y carga variables de tra
           PERFORM INI-VEN.
           IF VEN-STAT-CUR
      *JSS-INI  13-JUN-1997
               MOVE RCV-IRCV IN RCV-VRBL TO RCV-KEY-IRCV IN RCV
               MOVE FIO-GET-KEY TO FIO-CMND
               PERFORM COL-FIO-RCV
               MOVE ICG-IICG IN ICG-VRBL TO ICG-KEY-IICG IN ICG
               MOVE FIO-GET-KEY TO FIO-CMND
               PERFORM COL-FIO-ICG
      *JSS-FIN  13-JUN-1997
               GO TO FIN-COL-OBT-VEN.
      *
      *Si pidio un vencimiento siguiente o un vencimiento anterior
      *el VEN-IEVC parte con la estructura que genero el vencimiento act
      *el VEN-IVCT es el vencimiento pedido
           IF VEN-IVAS-SIG
               PERFORM INC-VEN UNTIL ( NOT VEN-STAT-OKS ) OR
                       VEN-IVCT = EVC-IVCT(VEN-IEVC)
           ELSE
               PERFORM DEC-VEN UNTIL ( NOT VEN-STAT-OKS ) OR
                       VEN-IVCT = EVC-IVCT(VEN-IEVC).
      *
      *Calcula Inicio Mora para el VEN encontrado, y lee su DLC y EVC as
           PERFORM FIN-VEN.
           IF VEN-STAT-OKS
      *carga valores de VEN-VARI para conformar el registro VEN a retorn
               PERFORM LOD-RVEN.
       FIN-COL-OBT-VEN.
           MOVE ZEROES TO VEN-FTBS.
           MOVE 'S'    TO VEN-INIT.
           MOVE 'N'    TO VEN-KEST.
      *DAD ini  07-JAN-1993
      * Carga variables necesarias para procesar con la variable VEN-INI
           MOVE OPC-CIC-IOPC IN OPS TO VEN-OANT.
           MOVE VEN-IVCT            TO VEN-VANT.
      *DAD fin  07-JAN-1993
       EXT-COL-OBT-VEN.
           EXIT.

       LOD-RVEN SECTION.
       INI-LOD-RVEN.
      *carga valores de VEN-VARI para conformar el registro VEN a retorn
      *    MOVE EVC-FPVC(VEN-IEVC) TO VEN-FEC-FVEN IN VEN.
           MOVE EVC-FFVC(VEN-IEVC) TO VEN-FEC-FVEN IN VEN.
           MOVE VEN-FIMV           TO VEN-FEC-FIMV IN VEN.
           MOVE VEN-CAPI           TO VEN-VAL-CAPI IN VEN.
           MOVE VEN-SCAP           TO VEN-VAL-SCAP IN VEN.
           MOVE VEN-IDNI           TO VEN-VAL-IDNI IN VEN.
           MOVE VEN-FINA           TO VEN-VAL-FINA IN VEN.
           MOVE VEN-SFIN           TO VEN-VAL-SFIN IN VEN.
           MOVE VEN-SCTB           TO VEN-IND-SCTB IN VEN
                                      VEN-IND-CTBA IN VEN.
           MOVE VEN-IVCT           TO VEN-NUM-IVCT IN VEN.
           MOVE EVC-IEVC(VEN-IEVC) TO VEN-NUM-IEVC IN VEN.
           MOVE VEN-IDLC           TO VEN-NUM-IDLC IN VEN.
           MOVE EVC-CAUT(VEN-IEVC) TO VEN-IND-CAUT IN VEN.
           MOVE VEN-SCBZ           TO VEN-IND-SCBZ IN VEN.
           MOVE ZEROES             TO VEN-VAL-MTSC IN VEN.
           MOVE ZEROES             TO VEN-IND-MTSC IN VEN.
           MOVE VEN-CALC           TO VEN-IND-CALC IN VEN.
       FIN-LOD-RVEN.
           EXIT.

       INI-VEN SECTION.
       INI-INI-VEN.
      *DAD ini  07-JAN-1993
      * Discrimina la validez de procesar con la variable VEN-INIT
           IF VEN-NUM-IVEN IN VEN > VEN-OIM1 AND
              OPC-CIC-IOPC IN OPS = VEN-OANT AND
              VEN-VANT > OPC-NUM-IVEN IN OPS AND
              VEN-VANT < VEN-NUM-IVEN IN VEN
               MOVE SPACES              TO VEN-SCTB
               MOVE SPACES              TO VEN-SCBZ
               MOVE 'N'                 TO VEN-INIT
               MOVE VEN-NUM-IVEN IN VEN TO VEN-IVCT
               GO TO FIN-INI-VEN
           ELSE
               MOVE 'S' TO VEN-INIT.
      *DAD fin  07-JAN-1993
      *Inicializacion de variables
           MOVE SPACES     TO VEN-VARI EVC-VARI DLC-VARI AYF-VARI.
           MOVE LOW-VALUES TO VEN-VARC                   AYF-VARC.
           MOVE 10         TO VEN-LVCC.
           MOVE RCV-KEY-IRCV IN RCV TO RCV-IRCV IN RCV-VRBL.
           MOVE ICG-KEY-IICG IN ICG TO ICG-IICG IN ICG-VRBL.
      *
      *Lee el vencimiento en la base de datos ( variable VEN-NUM-IVCT co
      *el numero del vencimiento )
           MOVE VEN-SOKS TO VEN-STAT.
           MOVE VEN-NUM-IVEN IN VEN TO VEN-IVCT.
           MOVE 1 TO VEN-NUM-IVEN IN VEN.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM COL-FIO-VEN.
           IF NOT FIO-STAT-OKS
               MOVE VEN-SFAL TO VEN-STAT
               GO TO FIN-INI-VEN.
      *    MOVE VEN-IND-SCTB IN VEN TO VEN-SCTB.
           MOVE SPACES              TO VEN-SCTB.
      *    MOVE VEN-IND-SCBZ IN VEN TO VEN-SCBZ.
           MOVE SPACES              TO VEN-SCBZ.
           MOVE VEN-FEC-FVEN IN VEN TO VEN-FVEN.
           MOVE VEN-FEC-FIMV IN VEN TO VEN-FIMV.
           MOVE VEN-NUM-IDLC IN VEN TO VEN-IDLC.
           MOVE VEN-VAL-CAPI IN VEN TO VEN-CAPI.
           MOVE VEN-VAL-SCAP IN VEN TO VEN-SCAP.
           MOVE VEN-VAL-IDNI IN VEN TO VEN-IDNI.
           MOVE VEN-VAL-FINA IN VEN TO VEN-FINA.
           MOVE VEN-VAL-SFIN IN VEN TO VEN-SFIN.
           MOVE VEN-NUM-IVCT IN VEN TO VEN-NVEN.
           MOVE VEN-IVCT TO VEN-NUM-IVEN IN VEN.
      *Realiza analisis de feriado a la fecha de vencimiento
      *en el caso de que esta sea feriado
           IF OPC-IND-AFER IN OPS = 'N'
               GO TO CON-INI-VEN.
           MOVE VEN-DVEN TO FEC-ITM1.
           MOVE VEN-MVEN TO FEC-ITM2.
           MOVE VEN-SVEN TO FEC-ITM3.
           MOVE VEN-AVEN TO FEC-ITM4.
           MOVE FEC-FORM-FEC TO FEC-FORM.
           MOVE FEC-VHBL-S   TO FEC-VHBL.
           MOVE FEC-FBLK-N   TO FEC-FBLK.
           MOVE FEC-CHOY-N   TO FEC-CHOY.
           MOVE FEC-VAL-FEC  TO FEC-CMND.
           PERFORM PRO-FEC.
           IF FEC-STAT-FER
               MOVE FEC-SIG-HBL  TO FEC-CMND
               MOVE FEC-FORM-FEC TO FEC-FORM
      *        PERFORM PRO-FEC
               PERFORM CAL-FEC
               MOVE FEC-ITM1 TO VEN-DVEN
               MOVE FEC-ITM2 TO VEN-MVEN
               MOVE FEC-ITM3 TO VEN-SVEN
               MOVE FEC-ITM4 TO VEN-AVEN.
       CON-INI-VEN.
      *
      *JSS-INI 28-FEB-1994
           IF VEN-IND-CALC IN VEN = 'N' AND VEN-KEST = 'S' AND
              VEN-INIT = 'S' AND VEN-NUM-IVCT IN VEN NOT > VEN-IVCT
               PERFORM COM-REG-VEN
               MOVE VEN-NUM-IVCT IN VEN TO VEN-NVEN
               IF NOT VEN-STAT-OKS
                   GO TO FIN-INI-VEN.
      *JSS-FIN 28-FEB-1994

      *Pregunta para ver si el vencimiento pedido ( VEN-IVCT ) correspon
      *a un vencimiento siguiente, a uno anterior, o al actual
           IF VEN-NUM-IVCT IN VEN < VEN-IVCT
               MOVE 'S' TO VEN-IVAS
           ELSE
           IF VEN-NUM-IVCT IN VEN > VEN-IVCT
               MOVE 'A' TO VEN-IVAS
           ELSE
      *Pidio el 'current'
               MOVE VEN-SCUR TO VEN-STAT
      *        Si el saldo del credito es cero ==> que ya se pago el ult
      *        vencimiento y este no puede ser otro que el 'current', po
      *        tanto :
      *        si el VEN 'current' esta incompleto suma su CAPITAL al SC
      *        porque al estar incompleto no debe rebajarse el SCPA con
      *        CAPITAL
               IF ( OPC-VAL-SCRE IN OPS NOT > ZEROES ) AND
                  ( ( VEN-IND-CALC IN VEN = 'N'    ) AND
                    ( VEN-VAL-FINA IN VEN > ZEROES ) )
                   MOVE VEN-NUM-IDLC IN VEN TO VEN-IDLC
                   PERFORM LOD-RDLC
                   IF VEN-STAT-OKS
                       ADD VEN-VAL-CAPI IN VEN TO DLC-SCPA(VEN-IDLC)
                       GO TO FIN-INI-VEN
                   ELSE
                       GO TO FIN-INI-VEN
               ELSE
                   GO TO FIN-INI-VEN.
      *
      *Calcula numero de vencimientos cancelados
           IF OPC-NUM-TVCC IN OPS NOT > ZEROES
               ADD OPC-NUM-VCCO IN OPS
                   OPC-NUM-VCCM IN OPS
                   OPC-NUM-VCCV IN OPS GIVING VEN-VCAN
           ELSE
               MOVE OPC-NUM-TVCC IN OPS TO VEN-VCAN.
      *
      *Si estan todos los vencimientos cancelados resta 1 al numero de
      *vencimientos cancelados como un 'truco' para no considerarlos
      *posteriormente
           IF OPC-NUM-VCVG IN OPS NOT > ZEROES
               SUBTRACT 1 FROM VEN-VCAN.
      *
      *Parrafo para obtener las estructuras de vencimiento, en VEN-EAUX
      *retorna el numero de la estructura que genero el vencimiento actu
           PERFORM OBT-EVC.
           IF NOT VEN-STAT-OKS
               GO TO FIN-INI-VEN.
           IF VEN-EAUX = 0
               MOVE VEN-SEFL TO VEN-STAT
               GO TO FIN-INI-VEN.
      *
      *Si desea un vencimiento anterior al actual
           IF VEN-IVAS-ANT
      *        llama a parrafo ANT-EVC para
      *        decrementar todas las estructuras salvo aquellas que dan
      *        origen al vencimiento o las que estan totalmente cancelad
               PERFORM ANT-EVC
      *        Si el VEN original esta completo suma su CAPITAL al SCPA,
      *        porque al estar completo se rebajo el SCPA con dicho CAPI
               IF ( VEN-IND-CALC IN VEN NOT = 'N' ) OR
                  ( ( VEN-IND-CALC IN VEN = 'N'    ) AND
                    ( VEN-VAL-FINA IN VEN NOT > ZEROES ) )
                   MOVE VEN-NUM-IDLC IN VEN TO VEN-IDLC
                   PERFORM LOD-RDLC
                   IF VEN-STAT-OKS
                       ADD VEN-VAL-CAPI IN VEN TO DLC-SCPA(VEN-IDLC)
                   ELSE
                       GO TO FIN-INI-VEN.

      **Si desea un vencimiento siguiente al actual
      *     IF VEN-IVAS-SIG
      **    Si el VEN original esta incompleto resta su CAPITAL al SCPA,
      **    porque al estar incompleto no se rebajo el SCPA con dicho CA
      *         IF VEN-IND-CALC IN VEN = 'N'
      *             MOVE VEN-NUM-IDLC IN VEN TO VEN-IDLC
      *             PERFORM LOD-RDLC
      *             IF VEN-STAT-OKS
      *                 SUBTRACT VEN-VAL-CAPI IN VEN FROM
      *                                              DLC-SCPA(VEN-IDLC)
      *             ELSE
      *                 GO TO FIN-INI-VEN.
      *
      *carga indice de trabajo con VEN-EAUX : La estructura o la primera
      *de ellas que genera el vencimiento actual
           MOVE VEN-EAUX TO VEN-IEVC.
      *
      *Busca codigo de tabla asociado a CIC= CAM-COD-MNAC IN CAM-VARI.
           MOVE FIO-GET-KEY    TO FIO-CMND.
           MOVE 'TAB-CIC-TABL' TO FIO-AKEY.
           MOVE 'TAB'          TO FIO-SIST.
           MOVE 'VLR' TO TAB-CIC-TTAB IN TAB.
           MOVE CAM-COD-MNAC IN CAM-VARI TO TAB-CIC-CTAB IN TAB.
           PERFORM GNS-FIO-TAB.
           IF NOT FIO-STAT-OKS
               MOVE 'CICDOC PAGNX' TO VEN-STAT
               GO TO FIN-INI-VEN.
           MOVE TAB-COD-CTAB IN TAB TO CIC-VLR-MNAC.
      *Busca codigo de tabla asociado a CIC='MIPL'
           MOVE FIO-GET-KEY    TO FIO-CMND.
           MOVE 'MSC-CIC-TABL' TO FIO-AKEY.
           MOVE 'COL'          TO FIO-SIST.
           MOVE 'MIPL' TO MSC-CIC-TMSC IN MSC.
           MOVE 'P'    TO MSC-CIC-CMSC IN MSC.
           PERFORM GNS-FIO-MSC.
           IF NOT FIO-STAT-OKS
               MOVE 'CICMIPLPNX' TO VEN-STAT
               GO TO FIN-INI-VEN.
           MOVE MSC-COD-CMSC IN MSC TO CIC-MIPL-P.
      *Carga Tipo de Tasa de Interes INT-TIPT
           MOVE OPC-CAI-IOPC IN OPS TO ICG-CAI-IOPC IN ICG.
           MOVE OPC-IIC-IOPC IN OPS TO ICG-IIC-IOPC IN ICG.
           MOVE ZEROES              TO ICG-NUM-ICAN IN ICG.
           MOVE SPACES              TO ICG-CIC-IOPV IN ICG.
           MOVE ZEROES              TO ICG-NUM-IVCT IN ICG.
           MOVE 'INT'               TO ICG-IND-TTAS IN ICG.
           MOVE ZEROES              TO ICG-FEC-FINI IN ICG.
           MOVE FIO-GET-NLS TO FIO-CMND.
           PERFORM COL-FIO-ICG.
           IF NOT ( FIO-STAT-OKS AND
                    ICG-CAI-IOPC IN ICG = OPC-CAI-IOPC IN OPS AND
                    ICG-IIC-IOPC IN ICG = OPC-IIC-IOPC IN OPS AND
                    ICG-NUM-ICAN IN ICG = ZEROES AND
                    ICG-CIC-IOPV IN ICG = SPACES AND
                    ICG-NUM-IVCT IN ICG = ZEROES AND
                    ICG-IND-TTAS IN ICG = 'INT' )
               MOVE 'ICG    NEX' TO VEN-STAT
               GO TO FIN-INI-VEN.
           MOVE ICG-COD-TINT IN ICG TO INT-TIPT.
           IF INT-CVTI NOT > SPACES
               MOVE ICG-SGV-TINT IN ICG TO INT-TINT
           ELSE
               MOVE ICG-SGV-SPRD IN ICG TO INT-TINT.
      *Busca codigo de como opera
           MOVE SPACES TO CIC-OPEC.
           MOVE OPC-COD-TOOC IN OPS TO TOC-COD-TOCR IN TOC.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM COL-FIO-TOC.
           IF NOT FIO-STAT-OKS
               MOVE 'VEN    TOCNX' TO VEN-STAT
               GO TO FIN-INI-VEN
           ELSE
               MOVE 'COL'               TO MSC-COD-SIST FIO-SIST
               MOVE 'OPEC'              TO MSC-COD-TMSC IN MSC
               MOVE TOC-MSC-OPEC IN TOC TO MSC-COD-CMSC IN MSC
               MOVE FIO-GET-KEY TO FIO-CMND
               PERFORM GNS-FIO-MSC
               IF NOT FIO-STAT-OKS
                   MOVE 'VEN    OPENX'      TO VEN-STAT
                   GO TO FIN-INI-VEN
               ELSE
                   MOVE MSC-CIC-CMSC IN MSC TO CIC-OPEC.
       FIN-INI-VEN.
           EXIT.

       FIN-VEN SECTION.
       INI-FIN-VEN.
           IF NOT VEN-STAT-OKS
               GO TO FIN-FIN-VEN.
      *INI Obtener Fecha Inicio Mora para  el vencimiento
           MOVE EVC-DFVC(VEN-IEVC) TO FEC-ITM1.
           MOVE EVC-MFVC(VEN-IEVC) TO FEC-ITM2.
           MOVE EVC-SFVC(VEN-IEVC) TO FEC-ITM3.
           MOVE EVC-AFVC(VEN-IEVC) TO FEC-ITM4.
           IF EVC-DESD(VEN-IEVC) > 0
               MOVE EVC-DESD(VEN-IEVC) TO FEC-NDIA
               MOVE FEC-FORM-FEC       TO FEC-FORM
               MOVE FEC-SUM-DIA        TO FEC-CMND
      *        PERFORM PRO-FEC
               PERFORM CAL-FEC
               IF NOT FEC-STAT-OKS
                   MOVE 'VENFIMVER+' TO VEN-STAT
                   GO TO FIN-FIN-VEN.

      *DAD ini  12-AUG-1991
      * Fecha de MORA sera igual a la Fecha del Vencimiento sin Analisis
      *     MOVE FEC-FORM-FEC TO FEC-FORM.
      *     MOVE FEC-VHBL-S   TO FEC-VHBL.
      *     MOVE FEC-FBLK-N   TO FEC-FBLK.
      *     MOVE FEC-CHOY-N   TO FEC-CHOY.
      *     MOVE FEC-VAL-FEC  TO FEC-CMND.
      *     PERFORM PRO-FEC.
      *     IF ( NOT FEC-STAT-OKS ) AND ( NOT FEC-STAT-FER )
      *         MOVE 'VENFIMVERHBL' TO VEN-STAT
      *         GO TO FIN-FIN-VEN.
      *     IF FEC-STAT-FER
      *         MOVE FEC-FORM-FEC TO FEC-FORM
      *         MOVE FEC-SIG-HBL  TO FEC-CMND
      *         PERFORM CAL-FEC
      *         IF NOT FEC-STAT-OKS
      *             MOVE 'VENFIMVERSHB' TO VEN-STAT
      *             GO TO FIN-FIN-VEN.
      *DAD fin  12-AUG-1991
       IMV-FIN-VEN.
           MOVE FEC-ITM1 TO VEN-DIMV.
           MOVE FEC-ITM2 TO VEN-MIMV.
           MOVE FEC-ITM3 TO VEN-SIMV.
           MOVE FEC-ITM4 TO VEN-AIMV.
      *FIN Obtener Fecha Inicio Mora
      *
      *Lee el documento y la estructura de vencimiento asociado al
      *vencimiento encontrado
           MOVE OPC-CIC-IOPC IN OPS TO DLC-CIC-IOPC IN DLC.
           IF EVC-IDLC(VEN-IEVC) NOT > 0
               MOVE EVC-IVCT(VEN-IEVC) TO DLC-NUM-IDLC IN DLC
           ELSE
               MOVE EVC-IDLC(VEN-IEVC) TO DLC-NUM-IDLC IN DLC.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM COL-FIO-DLC.
           IF NOT FIO-STAT-OKS
               MOVE VEN-SDFL TO VEN-STAT
               GO TO FIN-FIN-VEN.
           MOVE OPC-CIC-IOPC IN OPS TO EVC-CIC-IOPC IN EVC.
           MOVE EVC-IEVC(VEN-IEVC)  TO EVC-NUM-IEVC IN EVC.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM COL-FIO-EVC.
           IF NOT FIO-STAT-OKS
               MOVE VEN-SEFL TO VEN-STAT
               GO TO FIN-FIN-VEN.
           IF VEN-IVAS-ANT
               PERFORM ANT-CAN
           ELSE
      *        PERFORM SIG-CAN
      *        MOVE VEN-CAPI TO VEN-VKCC
               GO TO CON-FIN-VEN.
      *
      *Si el VEN generado esta incompleto con FINA > 0, suma el capital
      *SCPA, ya que:
      *Caso 1) hacia atras    : al cancelar dicho VEN el CAPI se rebajo
      *                         SCPA, y ahora debe sumarse al SCPA
      *((Caso 2) hacia adelante : para calcular intereses el CAPI se reb
      *                         del SCPA, y ahora debe sumarse al SCPA))
           IF ( VEN-CALC = 'N' ) AND ( VEN-FINA > ZEROES )
               PERFORM OBT-DOC
               IF NOT VEN-STAT-OKS
                   GO TO FIN-VEN
               ELSE
               IF EVC-IDLC(VEN-IEVC) NOT > 0
                   MOVE EVC-IVCT(VEN-IEVC) TO VEN-I
                   ADD VEN-VKCC TO DLC-SCPA(VEN-I)
               ELSE
                   MOVE EVC-IDLC(VEN-IEVC) TO VEN-I
                   ADD VEN-VKCC TO DLC-SCPA(VEN-I).
       CON-FIN-VEN.
      *
      *Si pidio un vencimiento anterior las estructuras que no generan
      *el vencimiento pedido deben ser proyectadas nuevamente, para
      *que la fecha de proximo vencimiento quede siempre adelantada
           IF VEN-IVAS-ANT
               PERFORM RST-FPVC.
      *
       FIN-FIN-VEN.
           MOVE RCV-IRCV IN RCV-VRBL TO RCV-KEY-IRCV IN RCV.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM COL-FIO-RCV.
           MOVE ICG-IICG IN ICG-VRBL TO ICG-KEY-IICG IN ICG.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM COL-FIO-ICG.
       EXT-FIN-VEN.
           EXIT.

       OBT-EVC SECTION.
       INI-OBT-EVC.
      *Pone en 0 indice de estructuras concurrentes
           MOVE 0 TO VEN-IVCC.
      *Lee estructuras de vencimiento
           MOVE 0 TO VEN-IEVC.
           MOVE VEN-CIC-IOPC IN VEN TO EVC-CIC-IOPC IN EVC.
           MOVE 1                   TO EVC-NUM-IEVC IN EVC.
           MOVE FIO-GET-NLS TO FIO-CMND.
           PERFORM COL-FIO-EVC.
           IF NOT ( FIO-STAT-OKS AND
                    EVC-CIC-IOPC IN EVC = OPC-CIC-IOPC IN OPS )
               MOVE VEN-SEFL TO VEN-STAT
               GO TO FIN-OBT-EVC.
       LOOP-OBT-EVC.
      *Si pidio un vencimiento anterior y no ha cancelado ningun vencimi
      *de la estructura y el vencimiento actual no pertenece a dicha est
      * o bien si
      *Se pidio un vencimiento siguiente y los vencimientos de la estruc
      *estan todos cancelados entonces
      *la estructura NO se considera
           IF ( VEN-IVAS-ANT AND EVC-NUM-VCAN IN EVC = 0 AND
                EVC-NUM-IEVC IN EVC NOT = VEN-NUM-IEVC IN VEN ) OR
              ( VEN-IVAS-SIG AND
                EVC-NUM-VIGU IN EVC = EVC-NUM-VCAN IN EVC )
               GO TO NXT-OBT-EVC.
      *
      *Suma el contador de estructuras y valida contra el limte
           ADD 1 TO VEN-IEVC.
           IF VEN-IEVC > 10
               MOVE VEN-SEML TO VEN-STAT
               GO TO FIN-OBT-EVC.
      *
      *Guarda los valores de la estructura en EVC-VARI
           MOVE EVC-NUM-IEVC IN EVC TO EVC-IEVC(VEN-IEVC).
      *
      *     marca la estructura que genero el vencimiento actual (grabad
      *     IF EVC-NUM-IEVC IN EVC = VEN-NUM-IEVC IN VEN
      *         MOVE VEN-IEVC TO VEN-EAUX.
      *    marca mas abajo considerando que puede haber sido generado
      *    por varias estructuras
      *
           MOVE EVC-NUM-IVCT IN EVC TO EVC-IVCT(VEN-IEVC).
           MOVE EVC-NUM-VIGU IN EVC TO EVC-VIGU(VEN-IEVC).
           MOVE EVC-NUM-VCAN IN EVC TO EVC-VCAN(VEN-IEVC).
           MOVE EVC-NUM-SEVE IN EVC TO EVC-SEVE(VEN-IEVC).
           MOVE EVC-IND-UTSV IN EVC TO EVC-UTSV(VEN-IEVC).
           MOVE EVC-NUM-DPVC IN EVC TO EVC-DPVC(VEN-IEVC).
           MOVE EVC-NUM-MPVC IN EVC TO EVC-MPVC(VEN-IEVC).
           MOVE EVC-NUM-SPVC IN EVC TO EVC-SPVC(VEN-IEVC).
           MOVE EVC-NUM-APVC IN EVC TO EVC-APVC(VEN-IEVC).
      *
      *La fecha de proximo vencimiento no considera analisis de feriado,
      *por lo tanto ahora calcula EVC-FFVC
           MOVE EVC-DPVC(VEN-IEVC) TO FEC-ITM1.
           MOVE EVC-MPVC(VEN-IEVC) TO FEC-ITM2.
           MOVE EVC-SPVC(VEN-IEVC) TO FEC-ITM3.
           MOVE EVC-APVC(VEN-IEVC) TO FEC-ITM4.
           IF OPC-IND-AFER IN OPS = 'N'
               MOVE EVC-FPVC(VEN-IEVC) TO EVC-FFVC(VEN-IEVC)
               GO TO CON-OBT-EVC.
           MOVE FEC-FORM-FEC TO FEC-FORM.
           MOVE FEC-VHBL-S   TO FEC-VHBL.
           MOVE FEC-FBLK-N   TO FEC-FBLK.
           MOVE FEC-CHOY-N   TO FEC-CHOY.
           MOVE FEC-VAL-FEC  TO FEC-CMND.
           PERFORM PRO-FEC.
           IF FEC-STAT-FER
               MOVE FEC-SIG-HBL  TO FEC-CMND
               MOVE FEC-FORM-FEC TO FEC-FORM
      *       PERFORM PRO-FEC.
              PERFORM CAL-FEC.
           MOVE FEC-ITM1 TO EVC-DFVC(VEN-IEVC).
           MOVE FEC-ITM2 TO EVC-MFVC(VEN-IEVC).
           MOVE FEC-ITM3 TO EVC-SFVC(VEN-IEVC).
           MOVE FEC-ITM4 TO EVC-AFVC(VEN-IEVC).
       CON-OBT-EVC.
      *Carga las estructuras que dieron origen al vencimiento
           IF EVC-FFVC(VEN-IEVC) = VEN-FVEN
               ADD 1 TO VEN-IVCC
               IF VEN-IVCC NOT > VEN-LVCC
                   MOVE VEN-IEVC TO VEN-VVCC(VEN-IVCC)
                   IF VEN-IVCC = 1
                       MOVE VEN-IEVC TO VEN-EAUX
                   ELSE
                       NEXT SENTENCE
               ELSE
                   MOVE 'VEN    CCOVF' TO VEN-STAT
                   GO TO EXT-OBT-EVC.
      *
           MOVE EVC-NUM-DESD IN EVC TO EVC-DESD(VEN-IEVC).
           MOVE EVC-VAL-VENC IN EVC TO EVC-VENC(VEN-IEVC).
           MOVE EVC-IND-CAUT IN EVC TO EVC-CAUT(VEN-IEVC).
           MOVE EVC-VAL-VCVF IN EVC TO EVC-VCVF(VEN-IEVC).
      *
      *Busca CIC en tabla asociado a Codigo=EVC-MSC-TCVE IN EVC
           MOVE 'COL'       TO FIO-SIST.
           MOVE FIO-GET-KEY TO FIO-CMND.
           MOVE 'CVC'               TO TAB-COD-TTAB IN TAB.
           MOVE EVC-MSC-TCVE IN EVC TO TAB-COD-CTAB IN TAB.
           PERFORM GNS-FIO-TAB.
           IF NOT FIO-STAT-OKS
               MOVE 'CICCVC NEX' TO VEN-STAT
               GO TO FIN-OBT-EVC.
           MOVE TAB-CIC-CTAB IN TAB TO EVC-TCVE(VEN-IEVC).
           IF EVC-TCVE(VEN-IEVC) = 'IF'
               IF ( AYF-ITCV = 'FI' ) OR ( AYF-ITCV NOT > SPACES )
                   MOVE 'FI' TO AYF-ITCV
               ELSE
                   NEXT SENTENCE
           ELSE
               MOVE EVC-TCVE(VEN-IEVC) TO AYF-ITCV.
      *
           MOVE EVC-NUM-DPVE IN EVC TO EVC-DPVE(VEN-IEVC).
           MOVE EVC-NUM-IDLC IN EVC TO EVC-IDLC(VEN-IEVC).
      *
      *INI Obtener Juliano para Fecha FINAL de Vencimiento
           MOVE EVC-DFVC(VEN-IEVC) TO FEC-ITM1.
           MOVE EVC-MFVC(VEN-IEVC) TO FEC-ITM2.
           MOVE EVC-SFVC(VEN-IEVC) TO FEC-ITM3.
           MOVE EVC-AFVC(VEN-IEVC) TO FEC-ITM4.
           MOVE FEC-FORM-FEC       TO FEC-FORM.
           MOVE FEC-RET-JUL        TO FEC-CMND.
      *    PERFORM PRO-FEC.
           PERFORM CAL-FEC.
           IF NOT FEC-STAT-OKS
               MOVE VEN-SEFL TO VEN-STAT
               GO TO FIN-OBT-EVC.
           MOVE FEC-FJUL TO EVC-JPVC(VEN-IEVC).
      *FIN Obtener Juliano para Fecha FINAL de Vencimiento
      *
       NXT-OBT-EVC.
           MOVE FIO-GET-NXT TO FIO-CMND.
           PERFORM COL-FIO-EVC.
           IF FIO-STAT-OKS AND EVC-CIC-IOPC IN EVC = OPC-CIC-IOPC IN OPS
               GO TO LOOP-OBT-EVC.
       FIN-OBT-EVC.
      *Redundante preguntar por los dos
           IF VEN-IEVC = 0 OR VEN-IVCC = 0
               MOVE VEN-SEFL TO VEN-STAT
           ELSE
               MOVE VEN-IEVC TO VEN-EMAX
               MOVE VEN-IVCC TO VEN-MVCC.
       EXT-OBT-EVC.
           EXIT.

      * ANT-EVC SECTION.
      * INI-ANT-EVC.
      *     MOVE 1 TO VEN-IEVC.
      * LOOP-ANT-EVC.
      *     IF EVC-IVCT(VEN-IEVC) > EVC-IVCT(VEN-EAUX)
      *         PERFORM DEC-STR
      *         ADD 1 TO EVC-VCAN(VEN-IEVC) , VEN-VCAN.
      *     ADD 1 TO VEN-IEVC.
      *     IF VEN-IEVC NOT > VEN-EMAX
      *         GO TO LOOP-ANT-EVC.
      * FIN-ANT-EVC.
      *     EXIT.

       ANT-EVC SECTION.
       INI-ANT-EVC.
           MOVE 1 TO VEN-IEVC.
       LU1-ANT-EVC.
           IF EVC-VIGU(VEN-IEVC) = EVC-VCAN(VEN-IEVC)
               GO TO NXT-ANT-EVC.
           MOVE 1 TO VEN-IVCC.
      *
       LU2-ANT-EVC.
           IF VEN-VVCC(VEN-IVCC) = VEN-IEVC
               GO TO NXT-ANT-EVC.
           ADD 1 TO VEN-IVCC.
           IF VEN-IVCC NOT > VEN-MVCC
               GO TO LU2-ANT-EVC.
      *
           PERFORM OBT-FYJ.
       NXT-ANT-EVC.
           ADD 1 TO VEN-IEVC.
           IF VEN-IEVC NOT > VEN-EMAX
               GO TO LU1-ANT-EVC.
       FIN-ANT-EVC.
           EXIT.

       INC-VEN SECTION.
       INI-INC-VEN.
      *Incrementa estructura nro. VEN-IEVC ( variando segun VEN-VVCC() )
           PERFORM INC-STR.
      *Obtiene la estructura siguiente a vencer ( el minimo juliano )
           PERFORM MIN-STR.
           IF NOT VEN-STAT-OKS
               GO TO FIN-INC-VEN.
      *Realiza un LUP para todos los vencimientos concurrentes guardados
      *en el vector VEN-VVCC usando la variable VEN-IEVC ( toma primero
      *la estructura que tiene FO si existe ).
           MOVE 0 TO VEN-VKCC VEN-SKCC.
           MOVE 0 TO VEN-VFCC VEN-SFCC.
           MOVE 'S' TO AYF-CALCULAR-INTERES.
           MOVE 'S' TO AYF-SZRO.

           IF VEN-IXFO > 1
               MOVE VEN-IXFO TO VEN-IVCC
               PERFORM CAL-VVCC
               IF NOT VEN-STAT-OKS
                   GO TO FIN-INC-VEN
               ELSE
                   NEXT SENTENCE
           ELSE
               MOVE 0 TO VEN-IXFO.

           MOVE 1 TO VEN-IVCC.
       LUP-INC-VEN.
           PERFORM CAL-VVCC.
           IF NOT VEN-STAT-OKS
               GO TO FIN-INC-VEN.
           ADD 1 TO VEN-IVCC.
           IF VEN-IVCC = VEN-IXFO
               ADD 1 TO VEN-IVCC.
           IF VEN-IVCC NOT > VEN-MVCC
               GO TO LUP-INC-VEN.
      *Revisa si todos los SCPA estan en 0, eso significa que el
      *credito se pago antes de esta cuota por lo tanto implica STAT=EOF
           IF AYF-SZRO = 'S'
               MOVE VEN-SEOF TO VEN-STAT
               GO TO FIN-INC-VEN.
      *Mueve los valores acumulados para los vencimientos concurrentes
      *a los valores de resultado
           MOVE VEN-VKCC TO VEN-CAPI.
           MOVE VEN-SKCC TO VEN-SCAP.
           MOVE VEN-VFCC TO VEN-FINA.
           MOVE VEN-SFCC TO VEN-SFIN.
      *
      *Actualiza el Juliano de la amortizacion del Documento Y
      *Mueve la fecha del vencimiento a la fecha de amortizacion del
      *documento ( Recordar que existen por cada 'vencimiento' dos fecha
      *la FFVC que es la fecha del vencimiento sin analisis de feriado y
      *la FPVC que es la fecha del vencimiento mas analisis de feriado )
           MOVE 1 TO VEN-IVCC.
       AMT-INC-VEN.
           MOVE VEN-VVCC(VEN-IVCC) TO VEN-IEVC.
           IF EVC-TCVE(VEN-IEVC) = 'IO' OR 'CO' OR 'FO' OR 'CE'
                                    OR 'FP'
               IF EVC-IDLC(VEN-IEVC) = 0
                   MOVE EVC-IVCT(VEN-IEVC) TO VEN-IDLC
                   MOVE AYF-JAMT TO DLC-JAMT(VEN-IDLC)
                   MOVE EVC-DFVC(VEN-IEVC) TO DLC-DAMT(VEN-IDLC)
                   MOVE EVC-MFVC(VEN-IEVC) TO DLC-MAMT(VEN-IDLC)
                   MOVE EVC-SFVC(VEN-IEVC) TO DLC-SAMT(VEN-IDLC)
                   MOVE EVC-AFVC(VEN-IEVC) TO DLC-AAMT(VEN-IDLC)
               ELSE
                   MOVE EVC-IDLC(VEN-IEVC) TO VEN-IDLC
                   MOVE AYF-JAMT TO DLC-JAMT(VEN-IDLC)
                   MOVE EVC-DFVC(VEN-IEVC) TO DLC-DAMT(VEN-IDLC)
                   MOVE EVC-MFVC(VEN-IEVC) TO DLC-MAMT(VEN-IDLC)
                   MOVE EVC-SFVC(VEN-IEVC) TO DLC-SAMT(VEN-IDLC)
                   MOVE EVC-AFVC(VEN-IEVC) TO DLC-AAMT(VEN-IDLC).
           ADD 1 TO VEN-IVCC.
           IF VEN-IVCC NOT > VEN-MVCC
               GO TO AMT-INC-VEN.
      *
           MOVE VEN-VVCC(1) TO VEN-IEVC.
       FIN-INC-VEN.
           EXIT.

       CAL-VVCC SECTION.
       INI-CAL-VVCC.
           MOVE VEN-VVCC(VEN-IVCC) TO VEN-IEVC.
      *Obtiene documento legal credito y calcula juliano para fec.amorti
           PERFORM OBT-DOC.
      *Obtiene el VEN con numero de vencimiento EVC-IVCT(VEN-IEVC)
           PERFORM OBT-AYF.
           IF NOT VEN-STAT-OKS
               GO TO FIN-CAL-VVCC.
      *Suma el valor del capital del vencimiento al valor ya amortizado
           IF AYF-TCVE = 'IO' OR 'CO' OR 'FO' OR 'CE' OR 'FP'
               ADD VEN-CAPI TO AYF-SCYA.
           IF AYF-IULT-YES AND CIC-OPEC = 'B'
               SUBTRACT VEN-CAPI FROM VEN-FINA
               MOVE VEN-FINA TO VEN-SFIN.
      *Acumula los valores de resultado en los valores para vencimientos
      *concurrentes
           ADD VEN-CAPI TO VEN-VKCC.
           ADD VEN-SCAP TO VEN-SKCC.
           ADD VEN-FINA TO VEN-VFCC.
           ADD VEN-SFIN TO VEN-SFCC.
       FIN-CAL-VVCC.
           EXIT.

       DEC-VEN SECTION.
       INI-DEC-VEN.
           PERFORM DEC-STR.
           PERFORM MAX-STR.
       FIN-DEC-VEN.
           EXIT.

       SIG-CAN SECTION.
       INI-SIG-CAN.
           MOVE SPACES TO VEN-SCTB VEN-SCBZ.
           PERFORM SIG-ANT-CAN-FST.
       LUP-SIG-CAN.
           IF NOT ( FIO-STAT-OKS AND
                    OPC-CIC-IOPC IN OPS = RCV-CIC-IOPV IN RCV AND
                    VEN-NUM-IVEN IN VEN = RCV-NUM-IVCT IN RCV )
               GO TO FIN-SIG-CAN.
           SUBTRACT RCV-SGV-CAPI IN RCV FROM VEN-SCAP.
           MOVE     RCV-SGV-INTE IN RCV TO   VEN-IDNI.
           SUBTRACT RCV-SGV-FINA IN RCV FROM VEN-SFIN.
           PERFORM SIG-ANT-CAN-NXT.
           GO TO LUP-SIG-CAN.
       FIN-SIG-CAN.
           EXIT.

       ANT-CAN SECTION.
       INI-ANT-CAN.
           MOVE SPACES TO VEN-SCTB VEN-SCBZ.
           MOVE ZEROES TO VEN-CAPI VEN-SCAP
                          VEN-FINA VEN-SFIN VEN-VKCC.
           PERFORM SIG-ANT-CAN-FST.
       LUP-ANT-CAN.
           IF NOT ( FIO-STAT-OKS AND
                    OPC-CIC-IOPC IN OPS = RCV-CIC-IOPV IN RCV AND
                    VEN-NUM-IVEN IN VEN = RCV-NUM-IVCT IN RCV )
               GO TO FIN-ANT-CAN.
           IF RCV-SGV-CAPI IN RCV < ZEROES OR
              RCV-SGV-FINA IN RCV < ZEROES OR
              RCV-MSC-STAT IN RCV = 'R'
               GO TO NXT-ANT-CAN.
      *Usa VEN-VKCC solo como auxiliar, para usarlo en actualizacion de
           ADD RCV-SGV-CAPI IN RCV TO VEN-VKCC.
           IF RCV-MSC-STAT IN RCV = 'F'
               ADD RCV-SGV-CAPI IN RCV TO VEN-CAPI
               MOVE 'N'                TO VEN-CALC
           ELSE
           IF RCV-MSC-STAT IN RCV = 'C'
               ADD RCV-SGV-FINA IN RCV TO VEN-FINA
               MOVE 'N'                TO VEN-CALC
           ELSE
               ADD RCV-SGV-CAPI IN RCV TO VEN-CAPI
               ADD RCV-SGV-FINA IN RCV TO VEN-FINA
               MOVE SPACES             TO VEN-CALC.
           MOVE RCV-SGV-INTE IN RCV TO VEN-IDNI.
       NXT-ANT-CAN.
           PERFORM SIG-ANT-CAN-NXT.
           GO TO LUP-ANT-CAN.
       FIN-ANT-CAN.
           EXIT.

       SIG-ANT-CAN-FST SECTION.
       INI-SIG-ANT-CAN-FST.
      *Busca primera cancelacion para VEN
           MOVE 'RCV-KEY-IVCT' TO FIO-AKEY.
           MOVE OPC-CIC-IOPC IN OPS TO RCV-CIC-IOPV IN RCV.
           MOVE VEN-NUM-IVEN IN VEN TO RCV-NUM-IVCT IN RCV.
           MOVE FIO-GET-NLS TO FIO-CMND.
           PERFORM COL-FIO-RCV.
       FIN-SIG-ANT-CAN-FST.
           EXIT.

       SIG-ANT-CAN-NXT SECTION.
       INI-SIG-ANT-CAN-NXT.
           MOVE RCV-IND-SCTB IN RCV TO VEN-SCTB.
           MOVE RCV-IND-SCBZ IN RCV TO VEN-SCBZ.
      *Busca siguiente cancelacion para VEN
           MOVE 'RCV-KEY-IVCT' TO FIO-AKEY.
           MOVE FIO-GET-NXT TO FIO-CMND.
           PERFORM COL-FIO-RCV.
       FIN-SIG-ANT-CAN-NXT.
           EXIT.

       RST-FPVC SECTION.
       INI-RST-FPVC.
           MOVE 1 TO VEN-I.
       LU1-RST-FPVC.
           IF EVC-VCAN(VEN-I) NOT > 0
               GO TO NXT-RST-FPVC.
           IF EVC-VIGU(VEN-I) = EVC-VCAN(VEN-I)
               GO TO NXT-RST-FPVC.
           MOVE 1 TO VEN-IVCC.
      *
       LU2-RST-FPVC.
           IF VEN-VVCC(VEN-IVCC) = VEN-I
               GO TO NXT-RST-FPVC.
           ADD 1 TO VEN-IVCC.
           IF VEN-IVCC NOT > VEN-MVCC
               GO TO LU2-RST-FPVC.
      *Respalda VEN-IEVC
           MOVE VEN-IEVC TO VEN-AUXI.
      *Carga VEN-IEVC y VEN-IVAS ( antes de llamar a OBT-FYJ )
           MOVE VEN-I TO VEN-IEVC.
           MOVE 'S'   TO VEN-IVAS.
           PERFORM OBT-FYJ.
      *Restaura VEN-IEVC y VEN-IVAS
           MOVE VEN-AUXI TO VEN-IEVC.
           MOVE 'A' TO VEN-IVAS.
       NXT-RST-FPVC.
           ADD 1 TO VEN-I.
           IF VEN-I NOT > VEN-EMAX
               GO TO LU1-RST-FPVC.
       FIN-RST-FPVC.
           EXIT.

       INC-STR SECTION.
       INI-INC-STR.
           ADD 1 TO VEN-VCAN.
           MOVE 1 TO VEN-IVCC.
       LUP-INC-STR.
           MOVE VEN-VVCC(VEN-IVCC) TO VEN-IEVC.
      *Va a incrementar estructura: suma 1 al numero de vencimientos
      *cancelados, si no quedan todos cancelados llama a OBT-FYJ
           ADD 1 TO EVC-VCAN(VEN-IEVC).
           IF EVC-VIGU(VEN-IEVC) NOT = EVC-VCAN(VEN-IEVC)
               PERFORM OBT-FYJ.
           ADD 1 TO VEN-IVCC.
           IF VEN-IVCC NOT > VEN-MVCC
               GO TO LUP-INC-STR.
       FIN-INC-STR.
           EXIT.

       MIN-STR SECTION.
       INI-MIN-STR.
           MOVE 0          TO VEN-EAUX.
           MOVE 0          TO VEN-IVCC.
           MOVE 0          TO VEN-IXFO.
           MOVE 0          TO VEN-NEVF VEN-NEVK.
           MOVE 1          TO VEN-IEVC.
           MOVE '99999999' TO VEN-FMIN.
       LOOP-MIN-STR.
      *Si la estructura esta toda cancelada no la considera, esto es
      *porque al ir proyectando existen estructuras que se van terminand
           IF EVC-VIGU(VEN-IEVC) = EVC-VCAN(VEN-IEVC)
               GO TO NXT-MIN-STR.

           IF ( EVC-FFVC(VEN-IEVC) < VEN-FMIN OR
                EVC-FFVC(VEN-IEVC) = VEN-FMIN ) AND
                EVC-TCVE(VEN-IEVC) = ( 'FO' OR 'FP' ) AND
                VEN-IXFO > 0
               GO TO NXT-MIN-STR.

           IF EVC-FFVC(VEN-IEVC) < VEN-FMIN
               MOVE EVC-FFVC(VEN-IEVC) TO VEN-FMIN
               MOVE VEN-IEVC           TO VEN-EAUX
               MOVE 1 TO VEN-IVCC
               MOVE VEN-IEVC TO VEN-VVCC(VEN-IVCC)
               MOVE 0        TO VEN-NEVF VEN-NEVK
               PERFORM ANL-TCV
               IF EVC-TCVE(VEN-IEVC) = ( 'FO' OR 'FP' )
                   MOVE VEN-IVCC TO VEN-IXFO
               ELSE
                   MOVE 0 TO VEN-IXFO
           ELSE
           IF EVC-FFVC(VEN-IEVC) = VEN-FMIN
               ADD 1 TO VEN-IVCC
               IF VEN-IVCC NOT > VEN-LVCC
                   MOVE VEN-IEVC TO VEN-VVCC(VEN-IVCC)
                   PERFORM ANL-TCV
                   IF EVC-TCVE(VEN-IEVC) = ( 'FO' OR 'FP' )
                       MOVE VEN-IVCC TO VEN-IXFO
                   ELSE
                       NEXT SENTENCE
               ELSE
                   MOVE 'VEN    CCOVF' TO VEN-STAT
                   GO TO EXT-MIN-STR.

       NXT-MIN-STR.
           ADD 1 TO VEN-IEVC.
           IF VEN-IEVC NOT > VEN-EMAX
               GO TO LOOP-MIN-STR.
       FIN-MIN-STR.
      *Carga variable con el total de los vencimientos concurrentes
           MOVE VEN-IVCC TO VEN-MVCC.
      *
      *Pregunta si no encontro minima estructura ( todas canceladas ) mu
      *status SENO
      *en caso contrario
      *carga el VEN-IEVC con el numero de la estructura minima y
      *se suma 1 a los cancelados de la operacion para obtener el siguie
      *numero de vencimiento que se carga en la estructura que correspon
           IF VEN-EAUX = 0
               MOVE VEN-SENO TO VEN-STAT
               GO TO EXT-MIN-STR.
      *Suma 1 al numero de vencimiento
           ADD 1 TO VEN-NVEN.
      *Recorre todos los vencimientos concurrentes
           MOVE 1 TO VEN-IVCC.
       CAN-MIN-STR.
           MOVE VEN-VVCC(VEN-IVCC) TO VEN-IEVC.
      *JSS 7-APR-1991 18:02:34
      *    ADD 1 VEN-VCAN GIVING EVC-IVCT(VEN-IEVC).
           MOVE VEN-NVEN TO EVC-IVCT(VEN-IEVC).
           ADD 1 TO VEN-IVCC.
           IF VEN-IVCC NOT > VEN-MVCC
               GO TO CAN-MIN-STR.
      *
           MOVE VEN-EAUX TO VEN-IEVC.
       EXT-MIN-STR.
           EXIT.

       ANL-TCV SECTION.
       INI-ANL-TCV.
           IF EVC-BCCR(VEN-IEVC) = 'F' OR EVC-VICR(VEN-IEVC) = 'F'
               ADD 1 TO VEN-NEVF
           ELSE
               ADD 1 TO VEN-NEVK.
       FIN-ANL-TCV.
           EXIT.

       DEC-STR SECTION.
       INI-DEC-STR.
           SUBTRACT 1 FROM VEN-VCAN.
           MOVE 1 TO VEN-IVCC.
       LUP-DEC-STR.
           MOVE VEN-VVCC(VEN-IVCC) TO VEN-IEVC.
      *     SUBTRACT 1 FROM EVC-VCAN(VEN-IEVC).
      *     IF EVC-VCAN(VEN-IEVC) NOT < 0
           IF EVC-VCAN(VEN-IEVC) > 0
               PERFORM OBT-FYJ.
           ADD 1 TO VEN-IVCC.
           IF VEN-IVCC NOT > VEN-MVCC
               GO TO LUP-DEC-STR.
       FIN-DEC-STR.
           EXIT.

       MAX-STR SECTION.
       INI-MAX-STR.
           MOVE 0 TO VEN-EAUX.
           MOVE 0 TO VEN-IVCC.
           MOVE 0 TO VEN-IXFO.
           MOVE 0 TO VEN-NEVF VEN-NEVK.
           MOVE 1 TO VEN-IEVC.
           MOVE 0 TO VEN-FMAX.
       LOOP-MAX-STR.
           IF EVC-VCAN(VEN-IEVC) NOT > 0
               GO TO NXT-MAX-STR.

           IF ( EVC-FFVC(VEN-IEVC) > VEN-FMAX OR
                EVC-FFVC(VEN-IEVC) = VEN-FMAX ) AND
                EVC-TCVE(VEN-IEVC) = ( 'FO' OR 'FP' ) AND
                VEN-IXFO > 0
               GO TO NXT-MAX-STR.

           IF EVC-FFVC(VEN-IEVC) > VEN-FMAX
               MOVE EVC-FFVC(VEN-IEVC) TO VEN-FMAX
               MOVE VEN-IEVC           TO VEN-EAUX
               MOVE 1 TO VEN-IVCC
               MOVE VEN-IEVC TO VEN-VVCC(VEN-IVCC)
               MOVE 0        TO VEN-NEVF VEN-NEVK
               PERFORM ANL-TCV
               IF EVC-TCVE(VEN-IEVC) = ( 'FO' OR 'FP' )
                   MOVE VEN-IVCC TO VEN-IXFO
               ELSE
                   MOVE 0 TO VEN-IXFO
           ELSE
           IF EVC-FFVC(VEN-IEVC) = VEN-FMAX
               ADD 1 TO VEN-IVCC
               IF VEN-IVCC NOT > VEN-LVCC
                   MOVE VEN-IEVC TO VEN-VVCC(VEN-IVCC)
                   PERFORM ANL-TCV
                   IF EVC-TCVE(VEN-IEVC) = ( 'FO' OR 'FP' )
                       MOVE VEN-IVCC TO VEN-IXFO
                   ELSE
                       NEXT SENTENCE
               ELSE
                   MOVE 'VEN    CCOVF' TO VEN-STAT
                   GO TO EXT-MAX-STR.
       NXT-MAX-STR.
           ADD 1 TO VEN-IEVC.
           IF VEN-IEVC NOT > VEN-EMAX
               GO TO LOOP-MAX-STR.
       FIN-MAX-STR.
      *Carga variable con el total de los vencimientos concurrentes
           MOVE VEN-IVCC TO VEN-MVCC.
      *
      *Pregunta si no encontro maxima estructura ( todas canceladas ) mu
      *status SENO
      *en caso contrario
      *carga el VEN-IEVC con el numero de la estructura maxima y
      *se suma 1 a los cancelados de la operacion para obtener el siguie
      *numero de vencimiento que se carga en la estructura que correspon
           IF VEN-EAUX = 0
               MOVE VEN-SENO TO VEN-STAT
               GO TO EXT-MAX-STR.
      *
      *Recorre toda las etructuras de tipo 1 y actualiza FAMT con la fec
      *de la estructura maxima
           PERFORM ACT-FAMT.
           IF NOT VEN-STAT-OKS
               GO TO EXT-MAX-STR.
      *Resta 1 al numero de vencimiento
           SUBTRACT 1 FROM VEN-NVEN.
      *Recorre todos los vencimientos concurrentes
           MOVE 1 TO VEN-IVCC.
       CAN-MAX-STR.
           MOVE VEN-VVCC(VEN-IVCC) TO VEN-IEVC.
      *JSS 7-APR-1991 18:03:17
      *    ADD 1 VEN-VCAN GIVING EVC-IVCT(VEN-IEVC).
           MOVE VEN-NVEN TO EVC-IVCT(VEN-IEVC).
      *
           SUBTRACT 1 FROM EVC-VCAN(VEN-IEVC).
      *
           ADD 1 TO VEN-IVCC.
           IF VEN-IVCC NOT > VEN-MVCC
               GO TO CAN-MAX-STR.
      *
           MOVE VEN-EAUX TO VEN-IEVC.
       EXT-MAX-STR.
           EXIT.

       ACT-FAMT SECTION.
       INI-ACT-FAMT.
      *Recorre toda las etructuras de tipo 1 y actualiza FAMT con la fec
      *de la estructura maxima
           MOVE 0 TO VEN-FMAX.
           MOVE 1 TO VEN-IEVC.
       LUP-ACT-FAMT.
           IF EVC-VCAN(VEN-IEVC) NOT > 0
               GO TO NXT-ACT-FAMT.
           IF EVC-TCVE(VEN-IEVC) = 'IC' OR 'IF' OR 'FE'
               GO TO NXT-ACT-FAMT.
           IF EVC-FFVC(VEN-IEVC) < VEN-FMAX
               GO TO NXT-ACT-FAMT.
           MOVE EVC-FFVC(VEN-IEVC) TO VEN-FMAX.
           PERFORM OBT-DOC.
           IF NOT VEN-STAT-OKS
               GO TO FIN-ACT-FAMT.
           IF EVC-IDLC(VEN-IEVC) = 0
               MOVE EVC-IVCT(VEN-IEVC) TO VEN-I
           ELSE
               MOVE EVC-IDLC(VEN-IEVC) TO VEN-I.
           MOVE EVC-DFVC(VEN-IEVC) TO DLC-DAMT(VEN-I).
           MOVE EVC-MFVC(VEN-IEVC) TO DLC-MAMT(VEN-I).
           MOVE EVC-SFVC(VEN-IEVC) TO DLC-SAMT(VEN-I).
           MOVE EVC-AFVC(VEN-IEVC) TO DLC-AAMT(VEN-I).
       NXT-ACT-FAMT.
           ADD 1 TO VEN-IEVC.
           IF VEN-IEVC NOT > VEN-EMAX
               GO TO LUP-ACT-FAMT.
       FIN-ACT-FAMT.
           EXIT.

       OBT-FYJ SECTION.
       INI-OBT-FYJ.
      *Suma o resta periodo entre vencimiento para la estructura nro. VE
      *y deja en variable EVC-FPVC(VEN-IEVC)
           IF ( EVC-UTSV(VEN-IEVC) = 'M' OR 'A' ) AND
              EVC-DPVE(VEN-IEVC) > ZEROES
               MOVE EVC-DPVE(VEN-IEVC) TO FEC-ITM1
           ELSE
               MOVE EVC-DPVC(VEN-IEVC) TO FEC-ITM1.
           MOVE EVC-MPVC(VEN-IEVC) TO FEC-ITM2.
           MOVE EVC-SPVC(VEN-IEVC) TO FEC-ITM3.
           MOVE EVC-APVC(VEN-IEVC) TO FEC-ITM4.
           IF EVC-UTSV(VEN-IEVC) = 'D'
               MOVE EVC-SEVE(VEN-IEVC) TO FEC-NDIA
               IF VEN-IVAS-SIG
                   MOVE FEC-SUM-DIA TO FEC-CMND
               ELSE
                   MOVE FEC-RST-DIA TO FEC-CMND
           ELSE
           IF EVC-UTSV(VEN-IEVC) = 'M'
               MOVE EVC-SEVE(VEN-IEVC) TO FEC-NMES
               IF VEN-IVAS-SIG
                   MOVE FEC-SUM-MES TO FEC-CMND
               ELSE
                   MOVE FEC-RST-MES TO FEC-CMND
           ELSE
      *    Asume ano
               MOVE EVC-SEVE(VEN-IEVC) TO FEC-NANO
               IF VEN-IVAS-SIG
                   MOVE FEC-SUM-ANO TO FEC-CMND
               ELSE
                   MOVE FEC-RST-ANO TO FEC-CMND.
           MOVE FEC-FORM-FEC TO FEC-FORM.
      *    PERFORM PRO-FEC.
           PERFORM CAL-FEC.
           MOVE FEC-ITM1 TO EVC-DPVC(VEN-IEVC).
           MOVE FEC-ITM2 TO EVC-MPVC(VEN-IEVC).
           MOVE FEC-ITM3 TO EVC-SPVC(VEN-IEVC).
           MOVE FEC-ITM4 TO EVC-APVC(VEN-IEVC).
      *
      *Analiza feriado para la fecha del vencimiento
           IF OPC-IND-AFER IN OPS = 'N'
               MOVE EVC-FPVC(VEN-IEVC) TO EVC-FFVC(VEN-IEVC)
               GO TO CON-OBT-FYJ.
           MOVE FEC-FORM-FEC TO FEC-FORM.
           MOVE FEC-VHBL-S   TO FEC-VHBL.
           MOVE FEC-FBLK-N   TO FEC-FBLK.
           MOVE FEC-CHOY-N   TO FEC-CHOY.
           MOVE FEC-VAL-FEC  TO FEC-CMND.
           PERFORM PRO-FEC.
           IF FEC-STAT-FER
               MOVE FEC-SIG-HBL  TO FEC-CMND
               MOVE FEC-FORM-FEC TO FEC-FORM
      *        PERFORM PRO-FEC.
               PERFORM CAL-FEC.
           MOVE FEC-ITM1 TO EVC-DFVC(VEN-IEVC).
           MOVE FEC-ITM2 TO EVC-MFVC(VEN-IEVC).
           MOVE FEC-ITM3 TO EVC-SFVC(VEN-IEVC).
           MOVE FEC-ITM4 TO EVC-AFVC(VEN-IEVC).
       CON-OBT-FYJ.
      *
      *Calcula el juliano para la fecha del vencimiento
           MOVE FEC-FORM-FEC TO FEC-FORM.
           MOVE FEC-RET-JUL  TO FEC-CMND.
      *    PERFORM PRO-FEC.
           PERFORM CAL-FEC.
           MOVE FEC-FJUL TO EVC-JPVC(VEN-IEVC).
       FIN-OBT-FYJ.
           EXIT.

       OBT-DOC SECTION.
       INI-OBT-DOC.
           IF NOT VEN-STAT-OKS
               GO TO FIN-OBT-DOC.
      *
      *Si la estructura no esta asociada a ningun documento mueve
      *el numero de la estructura para accesar el DLC en caso contrario
      *mueve el numero del documento que tiene asociado la estructura
           IF EVC-IDLC(VEN-IEVC) = 0
               MOVE EVC-IVCT(VEN-IEVC) TO VEN-IDLC
           ELSE
               MOVE EVC-IDLC(VEN-IEVC) TO VEN-IDLC.
           IF VEN-IDLC > 10
               MOVE VEN-SDML TO VEN-STAT
               GO TO FIN-OBT-DOC.
      *Carga el documento con numero VEN-IDLC
           PERFORM LOD-RDLC.
       FIN-OBT-DOC.
           EXIT.

       LOD-RDLC SECTION.
       INI-LOD-RDLC.
      *Revisa si el documento ya fue cargado anteriormente
           IF DLC-TDOC(VEN-IDLC) NOT = SPACES
               GO TO FIN-LOD-RDLC.
      *
      *Lee el documento y carga en variables DLC-VARI
           MOVE VEN-CIC-IOPC IN VEN TO DLC-CIC-IOPC IN DLC.
           MOVE VEN-IDLC            TO DLC-NUM-IDLC IN DLC.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM COL-FIO-DLC.
           IF NOT FIO-STAT-OKS
               MOVE VEN-SDFL TO VEN-STAT
               GO TO FIN-LOD-RDLC.
      *Carga codigo computacional del codigo tipo de documento del DLC
           MOVE FIO-GET-KEY    TO FIO-CMND.
           MOVE 'TAB'          TO FIO-SIST.
           MOVE 'DOC'               TO TAB-COD-TTAB IN TAB.
           MOVE DLC-COD-TDOC IN DLC TO TAB-COD-CTAB IN TAB.
           PERFORM GNS-FIO-TAB.
           IF NOT FIO-STAT-OKS
               MOVE 'CICDOC PAGNX' TO VEN-STAT
               GO TO FIN-LOD-RDLC.
           MOVE TAB-CIC-CTAB IN TAB TO DLC-TDOC(VEN-IDLC).
      *
           MOVE DLC-MSC-MIPL IN DLC TO DLC-MIPL(VEN-IDLC).
           MOVE DLC-VAL-SDLC IN DLC TO DLC-SDLC(VEN-IDLC).
           MOVE DLC-VAL-SCPA IN DLC TO DLC-SCPA(VEN-IDLC).
      *Calcula el valor de capital ya amortizado
           SUBTRACT DLC-VAL-SCPA IN DLC FROM OPC-VAL-CRED IN OPS
                    GIVING AYF-SCYA.
           MOVE DLC-VAL-SINT IN DLC TO DLC-SINT(VEN-IDLC).
           MOVE DLC-FEC-FAMT IN DLC TO DLC-FAMT(VEN-IDLC).
      *
           MOVE DLC-CAI-IOPC IN DLC TO ICG-CAI-IOPC IN ICG.
           MOVE DLC-IIC-IOPC IN DLC TO ICG-IIC-IOPC IN ICG.
           MOVE DLC-NUM-IDLC IN DLC TO ICG-NUM-ICAN IN ICG.
           MOVE SPACES       TO ICG-CIC-IOPV IN ICG.
           MOVE ZEROES       TO ICG-NUM-IVCT IN ICG.
           MOVE 'INT'        TO ICG-IND-TTAS IN ICG.
           MOVE ZEROES       TO ICG-FEC-FINI IN ICG.
           MOVE 'ICG-KEY-IICG ' TO FIO-AKEY.
           MOVE FIO-GET-NLS TO FIO-CMND.
           PERFORM COL-FIO-ICG.
           IF FIO-STAT-OKS AND
              ICG-CAI-IOPC IN ICG = DLC-CAI-IOPC IN DLC AND
              ICG-IIC-IOPC IN ICG = DLC-IIC-IOPC IN DLC AND
              ICG-NUM-ICAN IN ICG = DLC-NUM-IDLC IN DLC AND
              ICG-CIC-IOPV IN ICG = SPACES       AND
              ICG-NUM-IVCT IN ICG = ZEROES       AND
              ICG-IND-TTAS IN ICG = 'INT'
               IF INT-CVTI NOT > SPACES
                   MOVE ICG-SGV-TINT IN ICG TO DLC-TINT(VEN-IDLC)
               ELSE
                   MOVE ICG-SGV-SPRD IN ICG TO DLC-TINT(VEN-IDLC)
           ELSE
               MOVE INT-TINT TO DLC-TINT(VEN-IDLC).
       CON-LOD-RDLC.
      *Calcula el juliano para la fecha de amortizacion
           MOVE DLC-DAMT(VEN-IDLC) TO FEC-ITM1.
           MOVE DLC-MAMT(VEN-IDLC) TO FEC-ITM2.
           MOVE DLC-SAMT(VEN-IDLC) TO FEC-ITM3.
           MOVE DLC-AAMT(VEN-IDLC) TO FEC-ITM4.
           MOVE FEC-FORM-FEC TO FEC-FORM.
           MOVE FEC-RET-JUL  TO FEC-CMND.
      *    PERFORM PRO-FEC.
           PERFORM CAL-FEC.
           MOVE FEC-FJUL TO DLC-JAMT(VEN-IDLC).
       FIN-LOD-RDLC.
           EXIT.

       OBT-AYF SECTION.
       INI-OBT-AYF.
           IF NOT VEN-STAT-OKS
               GO TO FIN-OBT-AYF.
      *
      *Mueve tipo de calculo de la estructura a calcular
           MOVE EVC-TCVE(VEN-IEVC) TO AYF-TCVE.
      *
      *Busca si el vencimiento que esta revisando es el ultimo por cance
      *considerando todo el documento ( es decir si esta cancelando con
      *cuota todo el documento : AYF-IULT = 'S' )
           PERFORM ULT-AYF.
      *
      *Si el tipo de calculo es sin intereses
           IF AYF-TCVE = 'IN'
               IF AYF-IULT-YES
      *        Si con el vencimiento actual se cancela todo el documento
      *        Mueve el saldo insoluto al capital total
      *        Suma el saldo insoluto, intereses devengados para obtener
      *        final ademas si el manejo de interes es prorrateado segun
      *        de cada cuota suma al valor final el saldo de los interes
                   ADD DLC-SCPA(VEN-IDLC) , DLC-SINT(VEN-IDLC) ,
                       EVC-VCVF(VEN-IEVC)   GIVING VEN-CAPI
                   MOVE VEN-CAPI TO VEN-SCAP VEN-FINA VEN-SFIN
                   MOVE 0 TO DLC-SCPA(VEN-IDLC)
                   MOVE 0 TO DLC-SINT(VEN-IDLC)
                   GO TO FIN-OBT-AYF
               ELSE
                   MOVE EVC-VCVF(VEN-IEVC) TO VEN-CAPI VEN-SCAP
                                              VEN-FINA VEN-SFIN
                   GO TO FIN-OBT-AYF.
      *
      *Si el tipo de documento asociado a la estructura no es letra
      *calcula en PAG-OBT-AYF
           IF ( DLC-TDOC(VEN-IDLC) NOT = CIC-TDOC-LTR ) AND
              ( NOT (  AYF-TCVE = 'IC' OR 'IF' OR 'FE' ) )
               GO TO PAG-OBT-AYF.
           MOVE 'N' TO AYF-SZRO.
      *
      **     IF AYF-TCVE = 'FE'
      ***Mueve Juliano de la amortizacion del documento ( es la fecha de
      ***vencimiento anterior de la estructura ) y Juliano del vencimien
      ***proyectado ahora
      **         MOVE DLC-JAMT(VEN-IDLC) TO AYF-JANT
      **         MOVE EVC-JPVC(VEN-IEVC) TO AYF-JAMT
      ***Calcula la separacion en dias entre los julianos
      **         SUBTRACT AYF-JANT FROM AYF-JAMT GIVING INT-SEPD
      ***Actualiza el Juliano anterior con el Juliano actual de amortiza
      **         MOVE AYF-JAMT TO AYF-JANT
      ***Actualiza el Juliano de la amortizacion del Documento
      **         MOVE AYF-JAMT TO DLC-JAMT(VEN-IDLC)
      **     ELSE
      *Obtiene separacion en dias ( INT-SEPD ) entre fecha de colocacion
      *y la fecha del vencimiento
           PERFORM OBT-SEDF.
           IF NOT VEN-STAT-OKS
               GO TO FIN-OBT-AYF.

           IF AYF-BCCR = 'F' OR AYF-VICR = 'F'
      *        Si tipo calculo es 'F*' mueve valor final de estructura
      *        a valor final y a saldo valor final del vencimiento
      *        y calcula valor capital
               MOVE EVC-VCVF(VEN-IEVC) TO VEN-FINA
                                          VEN-SFIN
               PERFORM CAL-CAPI
               IF AYF-IULT-YES
      *    Si con el vencimiento actual se cancela todo el documento
      *    Mueve el saldo insoluto al capital total
      *    Suma el saldo insoluto, intereses devengados para obtener val
      *    final ademas si el manejo de interes es prorrateado segun cap
      *    de cada cuota suma al valor final el saldo de los intereses
                   ADD DLC-SCPA(VEN-IDLC) , DLC-SINT(VEN-IDLC) ,
                       VEN-CAPI GIVING VEN-CAPI
                   MOVE VEN-CAPI TO VEN-SCAP
                   PERFORM CAL-FINA
                   MOVE 0 TO DLC-SCPA(VEN-IDLC)
                   MOVE 0 TO DLC-SINT(VEN-IDLC)
               ELSE
                   NEXT SENTENCE
           ELSE
      *        Si tipo calculo NO es 'F*' mueve valor capital de estruct
      *        a valor capital y a saldo valor capital del vencimiento
      *        y calcula valor final
               IF AYF-IULT-YES
                   ADD DLC-SCPA(VEN-IDLC) , DLC-SINT(VEN-IDLC) ,
                       EVC-VCVF(VEN-IEVC)   GIVING VEN-CAPI
                   MOVE VEN-CAPI TO VEN-SCAP
                   PERFORM CAL-FINA
                   MOVE 0 TO DLC-SCPA(VEN-IDLC)
                   MOVE 0 TO DLC-SINT(VEN-IDLC)
               ELSE
                   MOVE EVC-VCVF(VEN-IEVC) TO VEN-CAPI
                                              VEN-SCAP
                   PERFORM CAL-FINA.
           GO TO FIN-OBT-AYF.
       PAG-OBT-AYF.
      *
      *Mueve el Saldo Capital por Amortizar ( Saldo Insoluto )
           MOVE DLC-SCPA(VEN-IDLC) TO AYF-SCPA.
           IF AYF-SCPA > ZEROES
               MOVE 'N' TO AYF-SZRO.
      *
           IF AYF-BCCR = 'F' OR AYF-VICR = 'F'
      *mueve 0 al saldo de interes
      *Mueve saldo de intereses a intereses devengados no incluidos
      *Mueve el valor final de EVC al valor final
               MOVE 0                  TO AYF-SINT
               MOVE DLC-SINT(VEN-IDLC) TO AYF-IDNI
               MOVE EVC-VCVF(VEN-IEVC) TO AYF-FINA
           ELSE
      *mueve saldo de intereses al saldo de interes
      *Mueve 0 a intereses devengados no incluidos
      *Mueve el valor capital de EVC al valor capital
               MOVE DLC-SINT(VEN-IDLC) TO AYF-SINT
               MOVE 0                  TO AYF-IDNI
               MOVE EVC-VCVF(VEN-IEVC) TO AYF-CAPI.
      *
      *Mueve Juliano de la amortizacion del documento ( es la fecha del
      *vencimiento anterior de la estructura ) y Juliano del vencimiento
      *proyectado ahora
           MOVE DLC-JAMT(VEN-IDLC) TO AYF-JANT.
           MOVE EVC-JPVC(VEN-IEVC) TO AYF-JAMT.
      *
      *Busca si el vencimiento que esta revisando es el ultimo por cance
      *considerando todo el documento ( es decir si esta cancelando con
      *cuota todo el documento : AYF-IULT = 'S' )
      *     PERFORM ULT-AYF.
      *
      *Obtiene valor final, valor capital, saldo insoluto, actualiza sal
      *interes
           PERFORM CAL-AYF.
           IF NOT VEN-STAT-OKS
               GO TO FIN-OBT-AYF.
      *     MOVE EVC-DPVC(VEN-IEVC) TO DLC-DAMT(VEN-IDLC).
      *     MOVE EVC-MPVC(VEN-IEVC) TO DLC-MAMT(VEN-IDLC).
      *     MOVE EVC-SPVC(VEN-IEVC) TO DLC-SAMT(VEN-IDLC).
      *     MOVE EVC-APVC(VEN-IEVC) TO DLC-AAMT(VEN-IDLC).
      *Mueve la fecha del vencimiento a la fecha de amortizacion del
      *documento ( Recordar que existen por cada 'vencimiento' dos fecha
      *la FFVC que es la fecha del vencimiento sin analisis de feriado y
      *la FPVC que es la fecha del vencimiento mas analisis de feriado )
      *     MOVE EVC-DFVC(VEN-IEVC) TO DLC-DAMT(VEN-IDLC).
      *     MOVE EVC-MFVC(VEN-IEVC) TO DLC-MAMT(VEN-IDLC).
      *     MOVE EVC-SFVC(VEN-IEVC) TO DLC-SAMT(VEN-IDLC).
      *     MOVE EVC-AFVC(VEN-IEVC) TO DLC-AAMT(VEN-IDLC).
      *Mueve el saldo insoluto al documento
           MOVE AYF-SCPA TO DLC-SCPA(VEN-IDLC).
      *
           IF VEN-CALC = 'N'
      *JSS-INI 20-JUN-1997
               AND VEN-KEST NOT = 'S'
      *JSS-FIN 20-JUN-1997
               GO TO CON-OBT-AYF.
      *
           IF AYF-BCCR = 'F' OR AYF-VICR = 'F'
      *        Si tipo de calculo es 'F*' mueve al saldo de interes del
      *        el valor de los intereses
               IF AYF-CALCULAR-INTERES-SI
                   MOVE AYF-IDNI TO DLC-SINT(VEN-IDLC)
               ELSE
                   NEXT SENTENCE
           ELSE
      *        Si tipo de calculo NO es 'F*' mueve al saldo de interes d
      *        documento el valor del saldo de interes
               MOVE AYF-SINT TO DLC-SINT(VEN-IDLC).
           IF AYF-CALCULAR-INTERES-SI
               MOVE 'N' TO AYF-CALCULAR-INTERES.
      *
      *Actualiza el Juliano de la amortizacion del Documento
      *Al haber vencimientos concurrentes debe hacerlo al final
      *     MOVE AYF-JAMT TO DLC-JAMT(VEN-IDLC).
      *
      *Mueve el valor capital al valor capital del vencimiento y al sald
      *valor capital del vencimiento,
      *mueve el saldo de los intereses al valor de los interes no inclui
      *del vencimiento, y
      *mueve el valor final al valor final del vencimiento y al saldo de
      *valor final del vencimiento
       CON-OBT-AYF.
           MOVE AYF-CAPI TO VEN-CAPI , VEN-SCAP.
           MOVE DLC-SINT(VEN-IDLC) TO VEN-IDNI.
           MOVE AYF-FINA TO VEN-FINA , VEN-SFIN.
       FIN-OBT-AYF.
           EXIT.

       OBT-SEDF SECTION.
       INI-OBT-SEDF.
      *Diferencia en dias entre OPC-FEC-FCOL y EVC-FFVC(VEN-IEVC)
           MOVE OPC-NUM-DCOL IN OPS TO FEC-DEC1.
           MOVE OPC-NUM-MCOL IN OPS TO FEC-MEC1.
           MOVE OPC-NUM-SCOL IN OPS TO FEC-SEC1.
           MOVE OPC-NUM-ACOL IN OPS TO FEC-AEC1.
           MOVE EVC-DFVC(VEN-IEVC)  TO FEC-DEC2.
           MOVE EVC-MFVC(VEN-IEVC)  TO FEC-MEC2.
           MOVE EVC-SFVC(VEN-IEVC)  TO FEC-SEC2.
           MOVE EVC-AFVC(VEN-IEVC)  TO FEC-AEC2.
           MOVE FEC-FORM-FEC TO FEC-FORM.
           MOVE FEC-DIF-DIA  TO FEC-CMND.
      *    PERFORM PRO-FEC.
           PERFORM CAL-FEC.
           IF NOT FEC-STAT-OKS
               MOVE 'FCOLPVDFDIA' TO VEN-STAT
               GO TO FIN-OBT-SEDF.
           MOVE FEC-NDIA TO INT-SEPD.
       FIN-OBT-SEDF.
           EXIT.

       CAL-CAPI SECTION.
       INI-CAL-CAPI.
      *Carga parametros para calculo de interes
           PERFORM BUS-PINT.
           PERFORM OBT-VTIN.
           IF INT-CMSG NOT > SPACES
      *Calcula valor capital = valor final / ( 1 + TIPE )
               ADD 1 TO INT-TIPE
               DIVIDE VEN-FINA BY INT-TIPE GIVING VEN-CAPI ROUNDED
               SUBTRACT 1 FROM INT-TIPE
               IF OPC-COD-VCOC IN OPS = CIC-VLR-MNAC
                   MOVE VEN-CAPI TO PES-SGV-DECI
                   PERFORM PES-SCTV
                   MOVE PES-SGV-ENTE TO VEN-CAPI
               ELSE
                   NEXT SENTENCE
           ELSE
               MOVE INT-CMSG TO VEN-STAT
               MOVE INT-MEN2 TO VEN-MEN2
               GO TO FIN-CAL-CAPI.
           MOVE VEN-CAPI TO VEN-SCAP.
       FIN-CAL-CAPI.
           EXIT.

       CAL-FINA SECTION.
       INI-CAL-FINA.
      *Carga parametros para calculo de interes
           PERFORM BUS-PINT.
           PERFORM OBT-VTIN.
           IF INT-CMSG NOT > SPACES
      *Calcula valor final = valor capital * ( 1 + TIPE )
               ADD 1 TO INT-TIPE
               MULTIPLY VEN-CAPI BY INT-TIPE GIVING VEN-FINA ROUNDED
               SUBTRACT 1 FROM INT-TIPE
               IF OPC-COD-VCOC IN OPS = CIC-VLR-MNAC
                   MOVE VEN-FINA TO PES-SGV-DECI
                   PERFORM PES-SCTV
                   MOVE PES-SGV-ENTE TO VEN-FINA
               ELSE
                   NEXT SENTENCE
           ELSE
               MOVE INT-CMSG TO VEN-STAT
               MOVE INT-MEN2 TO VEN-MEN2
               GO TO FIN-CAL-FINA.
           MOVE VEN-FINA TO VEN-SFIN.
       FIN-CAL-FINA.
           EXIT.

       ULT-AYF SECTION.
       INI-ULT-AYF.
      *Suma 1 a los cancelados de la estructura para efectos de la pregu
           MOVE VEN-IEVC TO VEN-EAUX.
      *
           MOVE 1 TO VEN-I.
       LU1-ULT-AYF.
           MOVE VEN-VVCC(VEN-I) TO VEN-IEVC.
           ADD 1 TO EVC-VCAN(VEN-IEVC).
           ADD 1 TO VEN-I.
           IF VEN-I NOT > VEN-MVCC
               GO TO LU1-ULT-AYF.
      *
           MOVE 1 TO VEN-IEVC.
           MOVE 'S' TO AYF-IULT.
       LOOP-ULT-AYF.
           IF EVC-IDLC(VEN-IEVC) = VEN-IDLC AND
              EVC-VCAN(VEN-IEVC) < EVC-VIGU(VEN-IEVC)
               MOVE 'N' TO AYF-IULT
           ELSE
               ADD 1 TO VEN-IEVC
               IF VEN-IEVC NOT > VEN-EMAX
                   GO TO LOOP-ULT-AYF.
       FIN-ULT-AYF.
      *
           MOVE 1 TO VEN-I.
       LU2-ULT-AYF.
           MOVE VEN-VVCC(VEN-I) TO VEN-IEVC.
           SUBTRACT 1 FROM EVC-VCAN(VEN-IEVC).
           ADD 1 TO VEN-I.
           IF VEN-I NOT > VEN-MVCC
               GO TO LU2-ULT-AYF.
      *
           MOVE VEN-EAUX TO VEN-IEVC.
       EXT-ULT-AYF.
           EXIT.

       CAL-AYF SECTION.
       INI-CAL-AYF.
      *Calcula la separacion en dias entre los julianos
           SUBTRACT AYF-JANT FROM AYF-JAMT GIVING INT-SEPD.
      *Carga parametros para obtener tasa de interes del periodo
           PERFORM BUS-PINT.
      *Actualiza el Juliano anterior con el Juliano actual de amortizaci
           MOVE AYF-JAMT TO AYF-JANT.
      *Obtiene tasa de interes del periodo TIPE
           IF ( INT-CVTI > SPACES AND VEN-FTBS > ZEROES )
               MOVE VEN-DTBS TO INT-DBTV
               MOVE VEN-MTBS TO INT-MBTV
               MOVE VEN-STBS TO INT-SBTV
               MOVE VEN-ATBS TO INT-ABTV.
      *    PERFORM OBT-VTIN.
      *SMC-INI 07.09.1993
      *    PERFORM GNS-CAL-INT.
           PERFORM COL-CAL-INT.
      *SMC-FIN 07.09.1993
           IF INT-CMSG > SPACES
               MOVE INT-CMSG TO VEN-STAT
               MOVE INT-MEN2 TO VEN-MEN2
               GO TO FIN-CAL-AYF.
           IF INT-IETB > SPACES
               MOVE 'N' TO VEN-CALC.
      *
           ADD 1 TO INT-TIPE.
      *Calcula intereses devengados no incluidos
           IF AYF-CALCULAR-INTERES-SI
               COMPUTE AYF-IDNI ROUNDED =
                      ( AYF-SCPA + AYF-SINT ) * ( INT-TIPE - 1 ) +
                                       AYF-IDNI * INT-TIPE
      *Si la moneda del credito es nacional, redondea sin centavos
               IF OPC-COD-VCOC IN OPS = CIC-VLR-MNAC
                   MOVE AYF-IDNI TO PES-SGV-DECI
                   PERFORM PES-SCTV
                   MOVE PES-SGV-ENTE TO AYF-IDNI
               ELSE
                   NEXT SENTENCE
           ELSE
               MOVE 0 TO AYF-IDNI.
      *
           IF AYF-IULT-YES
      *        Si con el vencimiento actual se cancela todo el documento
      *        llama a parrafo CAL-AYF-ULT
               PERFORM CAL-AYF-ULT
           ELSE
           IF AYF-BCCR = 'F' OR AYF-VICR = 'F'
      *        Si tipo de calculo es 'F*'
      *        Si la tasa es estimada entonces el valor final es
      *        el conocido ( AYF-FINA ) y el capital = 0 ( AYF-CAPI )
      *        ( KEST es un switch para indicar que devuelva el capital
      *          estimado, esta inicializado siempre en 'N' )
               IF INT-IETB > SPACES AND ( VEN-KEST NOT = 'S' )
                   MOVE 0 TO AYF-CAPI
               ELSE
      *            Analiza como es el interes respecto del valor final
                   IF AYF-IDNI > AYF-FINA
                       SUBTRACT AYF-FINA FROM AYF-IDNI
                       MOVE 0 TO AYF-CAPI
                   ELSE
                       SUBTRACT AYF-IDNI FROM AYF-FINA GIVING AYF-CAPI
      *                El capital calculado puede ser sea mayor que el
      *                resto del documento
                       IF AYF-CAPI > AYF-SCPA
                           PERFORM CAL-AYF-ULT
                       ELSE
                           MOVE 0 TO AYF-IDNI
           ELSE
      *        Si tipo de calculo NO es 'F*'
      *        Si la tasa es estimada
      *JSS-INI 13-JUN-1997
      *        IF INT-IETB > SPACES
               IF INT-IETB > SPACES AND ( VEN-KEST NOT = 'S' )
      *JSS-FIN 13-JUN-1997
      *            Si existe un F* en el vencimiento que se genera
      *            se mueve al final el capital conocido y el capital en
      *            ( ya que el valor final sera el conocido : el final d
      *            f* + los capitales de las otras estructuras )
      *            en caso de no existir ningun f* el capital es el cono
      *            ( AYF-CAPI ) y el final es 0 ( AYF-FINA )
                   IF VEN-NEVF > 0
                       MOVE AYF-CAPI TO AYF-FINA
                       MOVE 0        TO AYF-CAPI
                   ELSE
                       MOVE 0        TO AYF-FINA
               ELSE
      *        Si la tasa es real
      *        El capital calculado puede ser sea mayor que el resto del
      *        documento
               IF AYF-CAPI > AYF-SCPA
                   PERFORM CAL-AYF-ULT
               ELSE
      *        Si el capital calculado no es mayor que el resto del docu
      *        Calcula valor final
      *        En el caso de interes prorrateado segun capital de cada c
      *        saca la proporcion del saldo de interes correspondiente
               ADD AYF-CAPI , AYF-IDNI GIVING AYF-FINA
               MOVE 0 TO AYF-IDNI
               IF DLC-MIPL(VEN-IDLC) = CIC-MIPL-P
                   MULTIPLY AYF-SINT BY AYF-CAPI GIVING AYF-VAUX
                   DIVIDE AYF-SCPA INTO AYF-VAUX
                   IF OPC-COD-VCOC IN OPS = CIC-VLR-MNAC
      *                Si es moneda nacional redondea sin centavos y
      *                suma la proporcion de interes al valor final
      *                y lo resta al saldo de interes
                       MOVE AYF-VAUX TO PES-SGV-DECI
                       PERFORM PES-SCTV
                       MOVE PES-SGV-ENTE TO AYF-VAUX
                       ADD AYF-VAUX TO AYF-FINA
                       SUBTRACT AYF-VAUX FROM AYF-SINT
                   ELSE
      *                suma la proporcion de interes al valor final
      *                y lo resta al saldo de interes
                       ADD AYF-VAUX TO AYF-FINA
                       SUBTRACT AYF-VAUX FROM AYF-SINT
      *
               ELSE
      *            Si el manejo del saldo de interes no es prorrateado
      *            suma el saldo de interes al valor final y
      *            deja el saldo de intereses en 0
                   ADD AYF-SINT TO AYF-FINA
                   MOVE 0 TO AYF-SINT.
       CON-CAL-AYF.
      *Actualiza saldo insoluto restando el valor del capital
           SUBTRACT AYF-CAPI FROM AYF-SCPA.
       FIN-CAL-AYF.
           EXIT.

       CAL-AYF-ULT SECTION.
       INI-CAL-AYF-ULT.
      *Setea que es el ultimo vencimiento
           MOVE 'S' TO AYF-IULT.
      *En este caso con el vencimiento actual se cancela todo el documen
      *Mueve el saldo insoluto al capital total
           MOVE AYF-SCPA TO AYF-CAPI.
      *Si la tasa de interes es estimada el valor final = 0, ya
      *que no se conoce realmente
      *JSS-INI 13-JUN-1997
      *    IF INT-IETB > SPACES
           IF INT-IETB > SPACES AND ( VEN-KEST NOT = 'S' )
      *JSS-FIN 13-JUN-1997
               MOVE 0 TO AYF-FINA
           ELSE
      *    Suma el saldo insoluto, intereses devengados para obtener val
      *    final ademas si el manejo de interes es prorrateado segun cap
      *    de cada cuota suma al valor final el saldo de los intereses
               ADD AYF-CAPI , AYF-IDNI GIVING AYF-FINA
               MOVE 0 TO AYF-IDNI
               IF DLC-MIPL(VEN-IDLC) = CIC-MIPL-P
                   ADD AYF-SINT TO AYF-FINA
                   MOVE 0 TO AYF-SINT.
       FIN-CAL-AYF-ULT.
           EXIT.

      *JSS-INI 28-FEB-1994
       COM-REG-VEN SECTION.
       INI-COM-REG-VEN.
           MOVE 0 TO VEN-AUXI.
           MOVE VEN-NUM-IDLC IN VEN TO VEN-IDLC.
           PERFORM LOD-RDLC.
           IF NOT VEN-STAT-OKS
               GO TO FIN-COM-REG-VEN.
      *Calcula numero de vencimientos cancelados
           IF OPC-NUM-TVCC IN OPS NOT > ZEROES
               ADD OPC-NUM-VCCO IN OPS
                   OPC-NUM-VCCM IN OPS
                   OPC-NUM-VCCV IN OPS GIVING VEN-VCAN
           ELSE
               MOVE OPC-NUM-TVCC IN OPS TO VEN-VCAN.
      *Si estan todos los vencimientos cancelados resta 1 al numero de
      *vencimientos cancelados como un 'truco' para no considerarlos
      *posteriormente
           IF OPC-NUM-VCVG IN OPS NOT > ZEROES
               SUBTRACT 1 FROM VEN-VCAN.
      *
           MOVE 'A' TO VEN-IVAS.
           PERFORM OBT-EVC.
           IF NOT VEN-STAT-OKS
               GO TO FIN-COM-REG-VEN.
      *
           IF OPC-VAL-SCRE IN OPS NOT > 0
               IF VEN-NUM-IVCT IN VEN = OPC-NUM-IVEN IN OPS
                   IF VEN-NUM-IVCT IN VEN = 1
                       MOVE OPC-FEC-FCOL IN OPS TO VEN-FMAX
                       GO TO CON-COM-REG-VEN
                   ELSE
                       PERFORM ANT-EVC
                       PERFORM DEC-VEN
                       IF NOT VEN-STAT-OKS
                           GO TO FIN-COM-REG-VEN
                       ELSE
                           GO TO CON-COM-REG-VEN
               ELSE
                   NEXT SENTENCE
           ELSE
           IF VEN-NUM-IVCT IN VEN = 1
               IF DLC-FEC-FDEV IN DLC > OPC-FEC-FCOL IN OPS
                   MOVE DLC-FEC-FDEV IN DLC TO VEN-FMAX
                   GO TO CON-COM-REG-VEN
               ELSE
                   MOVE OPC-FEC-FCOL IN OPS TO VEN-FMAX
                   GO TO CON-COM-REG-VEN.
      *
           PERFORM ANT-EVC.
           PERFORM DEC-VEN.
           IF NOT VEN-STAT-OKS
               GO TO FIN-COM-REG-VEN.
      *Compara la fecha del DLC con la FMAX del VEN anterior
      *FMAX = MAX(FDEV,FVEN anterior) y continua
           IF DLC-FEC-FDEV IN DLC > VEN-FMAX
               MOVE DLC-FEC-FDEV IN DLC TO VEN-FMAX.
       CON-COM-REG-VEN.
      *FUNO = MIN(CANDIDATO=MAX(FDEV,FCOL o FVEN anterior),FVEN actual)
           IF VEN-FEC-FVEN IN VEN < VEN-FMAX
               MOVE VEN-NUM-DVEN IN VEN TO INT-DUNO
               MOVE VEN-NUM-MVEN IN VEN TO INT-MUNO
               MOVE VEN-NUM-SVEN IN VEN TO INT-SUNO
               MOVE VEN-NUM-AVEN IN VEN TO INT-AUNO
           ELSE
               MOVE VEN-DMAX TO INT-DUNO
               MOVE VEN-MMAX TO INT-MUNO
               MOVE VEN-SMAX TO INT-SUNO
               MOVE VEN-AMAX TO INT-AUNO.
      *Carga FDOS, FCOL, FBTV, VCAM, IOPC, IDLC y llama a rutina GNS-CAL
      *para obtener tasa de periodo
           MOVE VEN-NUM-DVEN IN VEN     TO INT-DDOS.
           MOVE VEN-NUM-MVEN IN VEN     TO INT-MDOS.
           MOVE VEN-NUM-SVEN IN VEN     TO INT-SDOS.
           MOVE VEN-NUM-AVEN IN VEN     TO INT-ADOS.

           MOVE OPC-NUM-DCOL IN OPS     TO INT-DCOL.
           MOVE OPC-NUM-MCOL IN OPS     TO INT-MCOL.
           MOVE OPC-NUM-SCOL IN OPS     TO INT-SCOL.
           MOVE OPC-NUM-ACOL IN OPS     TO INT-ACOL.

           IF VEN-FTBS > ZEROES
               MOVE VEN-DTBS TO INT-DBTV
               MOVE VEN-MTBS TO INT-MBTV
               MOVE VEN-STBS TO INT-SBTV
               MOVE VEN-ATBS TO INT-ABTV
           ELSE
               MOVE OPC-NUM-DCOL IN OPS TO INT-DBTV
               MOVE OPC-NUM-MCOL IN OPS TO INT-MBTV
               MOVE OPC-NUM-SCOL IN OPS TO INT-SBTV
               MOVE OPC-NUM-ACOL IN OPS TO INT-ABTV.

           MOVE OPC-COD-VCOC IN OPS     TO INT-VCAM.
           MOVE OPC-CIC-IOPC IN OPS     TO INT-IOPC.
           MOVE VEN-NUM-IDLC IN VEN     TO INT-IDLC.
      *     PERFORM GNS-CAL-INT.
           PERFORM COL-CAL-INT.
      *SMC-FIN 09.09.1993
           IF INT-CMSG > SPACES
               MOVE INT-CMSG TO VEN-STAT
               MOVE INT-MEN2 TO VEN-MEN2
               GO TO FIN-COM-REG-VEN.
      *
      *Por definicion al entrar a esta SECTION el VEN esta incompleto
      *Si esta completo en terminos de final, el capital es 0 y por lo
      *tanto la instruccion ADD no afecta.
      *Si esta completo en terminos de capital, entonces el SCPA
      *ya ha sido rebajado, con lo cual el ADD deja el SCPA con el
      *saldo corregido para el calculo de interes respectivo
           IF OPC-VAL-SCRE IN OPS > 0
               MULTIPLY OPC-VAL-SCRE IN OPS BY INT-TIPE GIVING
                    AYF-SINT ROUNDED
           ELSE
      *JSS-INI 26-AUG-1994 Se suma el SCAP en vez del CAPI ya que
      *pueden existir pagos parciales a cuotas de capital conocido
      *        ADD VEN-VAL-CAPI IN VEN TO DLC-SCPA(VEN-IDLC)
               ADD VEN-VAL-SCAP IN VEN TO DLC-SCPA(VEN-IDLC)
      *JSS-FIN 26-AUG-1994
               MULTIPLY DLC-SCPA(VEN-IDLC) BY INT-TIPE GIVING
                        AYF-SINT ROUNDED.
      *
           MOVE OPC-COD-VCOC IN OPS TO PES-COD-VCAM.
           MOVE AYF-SINT  TO PES-SGV-DECI IN PES-VARI.
           PERFORM PES-SCTV.
           MOVE PES-SGV-ENTE IN PES-VARI TO AYF-SINT.
      *
      *Si a la cuota le falta el valor final, lo completa con el interes
      *correspondiente
           IF VEN-VAL-FINA IN VEN = 0
      *JSS-INI 26-AUG-1994 Se suma el SCAP en vez del CAPI ya que
      *pueden existir pagos parciales a cuotas de capital conocido
      *        ADD AYF-SINT VEN-VAL-CAPI IN VEN GIVING
               ADD AYF-SINT VEN-VAL-SCAP IN VEN GIVING
                            VEN-VAL-FINA IN VEN
      *JSS-FIN 26-AUG-1994
               MOVE VEN-VAL-FINA IN VEN TO VEN-VAL-SFIN IN VEN
           ELSE
      *Si a la cuota le falta el valor capital, lo completa con el inter
      *correspondiente
               MOVE 1 TO VEN-AUXI
               SUBTRACT AYF-SINT FROM VEN-VAL-FINA IN VEN
                               GIVING VEN-VAL-CAPI IN VEN
               MOVE VEN-VAL-CAPI IN VEN TO VEN-VAL-SCAP IN VEN.

      *Verifica si el capital es mayor que el saldo del credito,
      *asume capital el saldo del credito
           IF OPC-VAL-SCRE IN OPS > 0
               IF VEN-VAL-SCAP IN VEN > OPC-VAL-SCRE IN OPS
                   MOVE OPC-VAL-SCRE IN OPS TO VEN-VAL-CAPI IN VEN
                   MOVE VEN-VAL-CAPI IN VEN TO VEN-VAL-SCAP IN VEN
                   ADD AYF-SINT VEN-VAL-CAPI IN VEN
                         GIVING VEN-VAL-FINA IN VEN
                   MOVE VEN-VAL-FINA IN VEN TO VEN-VAL-SFIN IN VEN
               ELSE
                   NEXT SENTENCE
           ELSE
               IF VEN-VAL-SCAP IN VEN > DLC-SCPA(VEN-IDLC)
                   MOVE DLC-SCPA(VEN-IDLC)  TO VEN-VAL-CAPI IN VEN
                   MOVE VEN-VAL-CAPI IN VEN TO VEN-VAL-SCAP IN VEN
                   ADD AYF-SINT VEN-VAL-CAPI IN VEN
                         GIVING VEN-VAL-FINA IN VEN
                   MOVE VEN-VAL-FINA IN VEN TO VEN-VAL-SFIN IN VEN.

      *Si los intereses son mayores que el valor final ( se considera
      *la diferencia como intereses devengados no incluidos )
           IF AYF-SINT > VEN-VAL-FINA IN VEN
               SUBTRACT VEN-VAL-FINA IN VEN FROM AYF-SINT
                 GIVING VEN-VAL-IDNI IN VEN
               MOVE 0 TO VEN-VAL-CAPI IN VEN
               MOVE 0 TO VEN-VAL-SCAP IN VEN
           ELSE
               MOVE 0 TO VEN-VAL-IDNI IN VEN.
      *Si es la ultima cuota y el valor de capital es menor que el saldo
      *del credito, asume capital el saldo del credito
           IF VEN-FEC-FVEN IN VEN = DLC-FEC-FMAV IN DLC
               IF OPC-VAL-SCRE IN OPS > 0
                   IF VEN-VAL-SCAP IN VEN < OPC-VAL-SCRE IN OPS
                       MOVE OPC-VAL-SCRE IN OPS TO VEN-VAL-CAPI IN VEN
                       MOVE VEN-VAL-CAPI IN VEN TO VEN-VAL-SCAP IN VEN
                       ADD AYF-SINT VEN-VAL-CAPI IN VEN
                             GIVING VEN-VAL-FINA IN VEN
                       MOVE VEN-VAL-FINA IN VEN TO VEN-VAL-SFIN IN VEN
                       MOVE 0                   TO VEN-VAL-IDNI IN VEN
                   ELSE
                       NEXT SENTENCE
               ELSE
                   IF VEN-VAL-SCAP IN VEN < DLC-SCPA(VEN-IDLC)
                       MOVE DLC-SCPA(VEN-IDLC)  TO VEN-VAL-CAPI IN VEN
                       MOVE VEN-VAL-CAPI IN VEN TO VEN-VAL-SCAP IN VEN
                       ADD AYF-SINT VEN-VAL-CAPI IN VEN
                             GIVING VEN-VAL-FINA IN VEN
                       MOVE VEN-VAL-FINA IN VEN TO VEN-VAL-SFIN IN VEN
                       MOVE 0                   TO VEN-VAL-IDNI IN VEN.
      *
           MOVE OPC-COD-VCOC IN OPS TO PES-COD-VCAM.
           MOVE VEN-VAL-CAPI IN VEN TO PES-SGV-DECI IN PES-VARI.
           PERFORM PES-SCTV.
           MOVE PES-SGV-ENTE IN PES-VARI TO VEN-VAL-CAPI IN VEN.
      *
           MOVE OPC-COD-VCOC IN OPS TO PES-COD-VCAM.
           MOVE VEN-VAL-FINA IN VEN TO PES-SGV-DECI IN PES-VARI.
           PERFORM PES-SCTV.
           MOVE PES-SGV-ENTE IN PES-VARI TO VEN-VAL-FINA IN VEN.
      *
      *Solo si la cuota la completo con capital, tengo que restar
      *al SCPA
           IF VEN-AUXI = 1
               SUBTRACT VEN-VAL-SCAP IN VEN FROM
                        DLC-SCPA(VEN-NUM-IDLC IN VEN).
           IF VEN-NUM-IVCT IN VEN = 1
               GO TO FIN-COM-REG-VEN.
           MOVE 'S' TO VEN-IVAS.
           PERFORM OBT-FYJ.
           MOVE EVC-JPVC(VEN-IEVC) TO AYF-JAMT.
           PERFORM ACT-VDLC.
       FIN-COM-REG-VEN.
           EXIT.
      *JSS-FIN 28-FEB-1994

       ACT-VDLC SECTION.
       INI-ACT-VDLC.
      *Actualiza el Juliano de la amortizacion del Documento Y
      *Mueve la fecha del vencimiento a la fecha de amortizacion del
      *documento ( Recordar que existen por cada 'vencimiento' dos fecha
      *la FPVC que es la fecha del vencimiento sin analisis de feriado y
      *la FFVC que es la fecha del vencimiento mas analisis de feriado )
           MOVE 1 TO VEN-IVCC.
       AMT-ACT-VDLC.
           MOVE VEN-VVCC(VEN-IVCC) TO VEN-IEVC.
           IF EVC-TCVE(VEN-IEVC) = 'IO' OR 'CO' OR 'FO' OR 'CE'
               IF EVC-IDLC(VEN-IEVC) = 0
                   MOVE EVC-IVCT(VEN-IEVC) TO VEN-IDLC
                   MOVE AYF-JAMT TO DLC-JAMT(VEN-IDLC)
                   MOVE EVC-DFVC(VEN-IEVC) TO DLC-DAMT(VEN-IDLC)
                   MOVE EVC-MFVC(VEN-IEVC) TO DLC-MAMT(VEN-IDLC)
                   MOVE EVC-SFVC(VEN-IEVC) TO DLC-SAMT(VEN-IDLC)
                   MOVE EVC-AFVC(VEN-IEVC) TO DLC-AAMT(VEN-IDLC)
               ELSE
                   MOVE EVC-IDLC(VEN-IEVC) TO VEN-IDLC
                   MOVE AYF-JAMT TO DLC-JAMT(VEN-IDLC)
                   MOVE EVC-DFVC(VEN-IEVC) TO DLC-DAMT(VEN-IDLC)
                   MOVE EVC-MFVC(VEN-IEVC) TO DLC-MAMT(VEN-IDLC)
                   MOVE EVC-SFVC(VEN-IEVC) TO DLC-SAMT(VEN-IDLC)
                   MOVE EVC-AFVC(VEN-IEVC) TO DLC-AAMT(VEN-IDLC).
           ADD 1 TO VEN-IVCC.
           IF VEN-IVCC NOT > VEN-MVCC
               GO TO AMT-ACT-VDLC.
      *
           MOVE VEN-VVCC(1) TO VEN-IEVC.
       FIN-ACT-VDLC.
           EXIT.

       ANL-FRD-FINT SECTION.
       INI-ANL-FRD-FINT.
           MOVE INT-DDMA TO FEC-ITM1.
           MOVE INT-MDMA TO FEC-ITM2.
           MOVE INT-SDMA TO FEC-ITM3.
           MOVE INT-ADMA TO FEC-ITM4.
       LUP-ANL-FRD-FINT.
           MOVE FEC-FORM-FEC TO FEC-FORM.
           MOVE FEC-FBLK-N   TO FEC-FBLK.
           MOVE FEC-CHOY-N   TO FEC-CHOY.
           MOVE FEC-VHBL-S   TO FEC-VHBL.
           MOVE FEC-VAL-FEC  TO FEC-CMND.
           PERFORM PRO-FEC.
           IF FEC-STAT-OKS
               MOVE FEC-ITM1 TO INT-DDMA
               MOVE FEC-ITM2 TO INT-MDMA
               MOVE FEC-ITM3 TO INT-SDMA
               MOVE FEC-ITM4 TO INT-ADMA
               GO TO FIN-ANL-FRD-FINT.
           IF NOT FEC-STAT-FER
               MOVE MSG-COD-MENS TO VEN-STAT
               GO TO FIN-ANL-FRD-FINT.
           MOVE FEC-FORM-FEC TO FEC-FORM.
           MOVE FEC-RST-DIA  TO FEC-CMND.
           MOVE 1            TO FEC-NDIA.
      *    PERFORM PRO-FEC.
           PERFORM CAL-FEC.
           IF NOT FEC-STAT-OKS
               MOVE MSG-COD-MENS TO VEN-STAT
           ELSE
               GO TO LUP-ANL-FRD-FINT.
       FIN-ANL-FRD-FINT.
           EXIT.

       BUS-PINT SECTION.
       INI-BUS-PINT.
      *Carga los parametros para obtener tasa de interes
           MOVE DLC-TINT(VEN-IDLC)  TO INT-TINT.
           MOVE OPC-COD-VCOC IN OPS TO INT-VCAM.

           MOVE DLC-DAMT(VEN-IDLC)  TO INT-DUNO.
           MOVE DLC-MAMT(VEN-IDLC)  TO INT-MUNO.
           MOVE DLC-SAMT(VEN-IDLC)  TO INT-SUNO.
           MOVE DLC-AAMT(VEN-IDLC)  TO INT-AUNO.
           MOVE EVC-DFVC(VEN-IEVC)  TO INT-DDOS.
           MOVE EVC-MFVC(VEN-IEVC)  TO INT-MDOS.
           MOVE EVC-SFVC(VEN-IEVC)  TO INT-SDOS.
           MOVE EVC-AFVC(VEN-IEVC)  TO INT-ADOS.

           MOVE OPC-NUM-DCOL IN OPS TO INT-DCOL INT-DBTV.
           MOVE OPC-NUM-MCOL IN OPS TO INT-MCOL INT-MBTV.
           MOVE OPC-NUM-SCOL IN OPS TO INT-SCOL INT-SBTV.
           MOVE OPC-NUM-ACOL IN OPS TO INT-ACOL INT-ABTV.
      *SMC-INI 07.09.1993
           MOVE OPC-CIC-IOPC IN OPS TO INT-IOPC.
           MOVE 1                   TO INT-IDLC.
      *SMC-FIN 07.09.1993
       FIN-BUS-PINT.
           EXIT.


      * Rutina que a partir de la fecha de colocacion, busca la
      * ultima fecha de cambio de tasa antes de la fecha de ejecucion
      * La fecha de ultimo cambio de tasa se calcula solo para el primer
      * vencimiento, para los demas se mantiene la fecha calculada
      * Entrada : WSS-FEC-FINT  ( FCOL )
      * Salida  : WSS-FEC-FUCT
       CAL-ULT-CAMBIO-TASA SECTION.
      *----------------------------
       INI-CAL-ULT-CAMBIO-TASA.
           IF ICG-COD-CVTI IN ICG NOT > SPACES
               GO TO FIN-CAL-ULT-CAMBIO-TASA.

           IF ICG-MSC-TFPR IN ICG = 'F'
               PERFORM CARGA-FTBS
               GO TO FIN-CAL-ULT-CAMBIO-TASA.

           IF WSS-PVEZ IN WSS-VARI NOT = 'S'
               GO TO FIN-CAL-ULT-CAMBIO-TASA.

       LUP-CAL-ULT-CAMBIO-TASA.
           IF WSS-FEC-FINT IN WSS-VARI > HOY-FHOY
               GO TO FIN-CAL-ULT-CAMBIO-TASA.

           MOVE WSS-FEC-FINT IN WSS-VARI TO WSS-FEC-FUCT IN WSS-VARI.

           IF ICG-MSC-UTPR IN ICG = 'D'
               MOVE ICG-NUM-PREP IN ICG TO FEC-NDIA
               MOVE FEC-SUM-DIA         TO FEC-CMND
           ELSE
           IF ICG-MSC-UTPR IN ICG = 'M'
               MOVE ICG-NUM-PREP IN ICG TO FEC-NMES
               MOVE FEC-SUM-MES         TO FEC-CMND
           ELSE
               MOVE ICG-NUM-PREP IN ICG TO FEC-NANO
               MOVE FEC-SUM-ANO         TO FEC-CMND.

           MOVE WSS-NUM-DINT IN WSS-VARI TO FEC-ITM1.
           MOVE WSS-NUM-MINT IN WSS-VARI TO FEC-ITM2.
           MOVE WSS-NUM-SINT IN WSS-VARI TO FEC-ITM3.
           MOVE WSS-NUM-AINT IN WSS-VARI TO FEC-ITM4.
           MOVE FEC-FORM-FEC TO FEC-FORM.
           PERFORM CAL-FEC.
           IF NOT FEC-STAT-OKS
               MOVE 1 TO WSS-IND-FLAG IN WSS-VARI
               GO TO FIN-CAL-ULT-CAMBIO-TASA.

           MOVE FEC-ITM1 TO WSS-NUM-DINT IN WSS-VARI.
           MOVE FEC-ITM2 TO WSS-NUM-MINT IN WSS-VARI.
           MOVE FEC-ITM3 TO WSS-NUM-SINT IN WSS-VARI.
           MOVE FEC-ITM4 TO WSS-NUM-AINT IN WSS-VARI.
           GO TO LUP-CAL-ULT-CAMBIO-TASA.
       FIN-CAL-ULT-CAMBIO-TASA.
           EXIT.


       COPY COLBGINT.
      *RRM-INI 16-FEB-1999
      *COPY COLBFRCV.
      * SE INCORPORA EL COLBFRCV EXPANDIDO PARA CAMBIAR EL NUMERO DE LA
      * BASE DE DATOS DE 160 A 162.
      * Modulo FIO para registro RCV en DATACOM, 25-MAR-1993 10:01:20.34
       COL-FIO-RCV SECTION.
       INI-COL-FIO-RCV.
           MOVE ADR-RCV-REQA TO ADR-REQA.
           MOVE 'RCV' TO ADR-TABL IN ADR-REQA.
      *
      *
           IF WSS-IND-PROC IN WSS-VARI = 'R'
               MOVE +162 TO ADR-DBID IN ADR-REQA
               GO TO FSR-COL-FIO-RCV.
      *

           MOVE 'COL'  TO IDD-SAUX.
           MOVE 'M'    TO IDD-GAUX.
           MOVE SPACES TO IDD-RAUX.
           MOVE 1 TO IDD-IAUX.
           SET IDD-ITBL TO 1.
           SEARCH IDD-VSIS VARYING IDD-IAUX
             AT END
               GO TO GRP-COL-FIO-RCV
             WHEN IDD-DENT( IDD-ITBL ) = IDD-DAUX
               MOVE IDD-IENT( IDD-ITBL) TO ADR-DBID IN ADR-REQA
               GO TO FSR-COL-FIO-RCV.
       GRP-COL-FIO-RCV.
           MOVE SPACES TO IDD-GAUX.
           MOVE 1      TO IDD-IAUX.
           SET IDD-ITBL TO 1.
           SEARCH IDD-VSIS VARYING IDD-IAUX
             AT END
               MOVE 'En COL-FIO-RCV, NO existe en IDD:' TO FIO-MEN1
               MOVE IDD-DAUX                            TO FIO-MEN2
               PERFORM PRG-ABT
             WHEN IDD-DENT( IDD-ITBL ) = IDD-DAUX
               MOVE IDD-IENT( IDD-ITBL) TO ADR-DBID IN ADR-REQA.
       FSR-COL-FIO-RCV.
      *
           MOVE 'RCV00' TO ADR-ELM1.
           MOVE FIO-PROG TO ADR-PROG.
           IF FIO-KDEF = FIO-KDEF-S
               GO TO CON-COL-FIO-RCV.
           MOVE FIO-CMND TO FIO-IAKY.
           IF NOT FIO-IAKY-CON AND
              ( FIO-AKEY = 'RCV-KEY-IRCV' OR FIO-AKEY NOT > SPACES )
               MOVE RCV-KEY-IRCV IN RCV TO ADR-VKEY IN ADR-REQA
               MOVE 'RCV00' TO ADR-DKEY IN ADR-REQA
           ELSE
           IF FIO-AKEY = 'RCV-KEY-IVCT'
               MOVE RCV-KEY-IVCT IN RCV TO ADR-VKEY IN ADR-REQA
               MOVE 'RCV01' TO ADR-DKEY IN ADR-REQA
           ELSE
           IF FIO-AKEY = 'RCV-KEY-IDLC'
               MOVE RCV-KEY-IDLC IN RCV TO ADR-VKEY IN ADR-REQA
               MOVE 'RCV02' TO ADR-DKEY IN ADR-REQA
           ELSE
               MOVE 'En COL-FIO-RCV, key' TO FIO-MENS
               MOVE FIO-AKEY   TO FIO-MENS-KEY
               MOVE 'Invalida' TO FIO-MENS-FIL
               PERFORM PRG-ABT.
       CON-COL-FIO-RCV.
           MOVE RCV TO FIO-DFLD.
           PERFORM GNS-FIO-DTC.
           IF FIO-STAT-OKS
               MOVE FIO-DFLD TO RCV
           ELSE
               MOVE 'COLRCV' TO FIO-MEN2
               IF FIO-STAT-FTL
                   PERFORM PRG-ABT.
           MOVE SPACES   TO FIO-AKEY.
           MOVE FIO-KDEF-N TO FIO-KDEF.
           MOVE ADR-REQA TO ADR-RCV-REQA.
       FIN-COL-FIO-RCV.
           EXIT.
      *RRM-FIN 16-FEB-1999.

      *RRM-INI 16-FEB-1999.
      *COPY COLBFEVC.
      * SE INCORPORA EL COLBFEVC EXPANDIDO PARA CAMBIAR EL NUMERO DE LA
      * BASE DE DATOS DE 160 A 162.
      * Modulo FIO para registro EVC en DATACOM, 25-MAR-1993 09:59:48.86
       COL-FIO-EVC SECTION.
       INI-COL-FIO-EVC.
           MOVE ADR-EVC-REQA TO ADR-REQA.
           MOVE 'EVC' TO ADR-TABL IN ADR-REQA.
      *
      *
           IF WSS-IND-PROC IN WSS-VARI = 'R'
               MOVE +162 TO ADR-DBID IN ADR-REQA
               GO TO FSR-COL-FIO-EVC.
      *
      *
           MOVE 'COL'  TO IDD-SAUX.
           MOVE 'M'    TO IDD-GAUX.
           MOVE SPACES TO IDD-RAUX.
           MOVE 1 TO IDD-IAUX.
           SET IDD-ITBL TO 1.
           SEARCH IDD-VSIS VARYING IDD-IAUX
             AT END
               GO TO GRP-COL-FIO-EVC
             WHEN IDD-DENT( IDD-ITBL ) = IDD-DAUX
               MOVE IDD-IENT( IDD-ITBL) TO ADR-DBID IN ADR-REQA
               GO TO FSR-COL-FIO-EVC.
       GRP-COL-FIO-EVC.
           MOVE SPACES TO IDD-GAUX.
           MOVE 1      TO IDD-IAUX.
           SET IDD-ITBL TO 1.
           SEARCH IDD-VSIS VARYING IDD-IAUX
             AT END
               MOVE 'En COL-FIO-EVC, NO existe en IDD:' TO FIO-MEN1
               MOVE IDD-DAUX                            TO FIO-MEN2
               PERFORM PRG-ABT
             WHEN IDD-DENT( IDD-ITBL ) = IDD-DAUX
               MOVE IDD-IENT( IDD-ITBL) TO ADR-DBID IN ADR-REQA.
       FSR-COL-FIO-EVC.
      *
           MOVE 'EVC00' TO ADR-ELM1.
           MOVE FIO-PROG TO ADR-PROG.
           IF FIO-KDEF = FIO-KDEF-S
               GO TO CON-COL-FIO-EVC.
           MOVE FIO-CMND TO FIO-IAKY.
           IF NOT FIO-IAKY-CON AND
              ( FIO-AKEY = 'EVC-KEY-IEVC' OR FIO-AKEY NOT > SPACES )
               MOVE EVC-KEY-IEVC IN EVC TO ADR-VKEY IN ADR-REQA
               MOVE 'EVC00' TO ADR-DKEY IN ADR-REQA
           ELSE
               MOVE 'En COL-FIO-EVC, key' TO FIO-MENS
               MOVE FIO-AKEY   TO FIO-MENS-KEY
               MOVE 'Invalida' TO FIO-MENS-FIL
               PERFORM PRG-ABT.
       CON-COL-FIO-EVC.
           MOVE EVC TO FIO-DFLD.
           PERFORM GNS-FIO-DTC.
           IF FIO-STAT-OKS
               MOVE FIO-DFLD TO EVC
           ELSE
               MOVE 'COLEVC' TO FIO-MEN2
               IF FIO-STAT-FTL
                   PERFORM PRG-ABT.
           MOVE SPACES   TO FIO-AKEY.
           MOVE FIO-KDEF-N TO FIO-KDEF.
           MOVE ADR-REQA TO ADR-EVC-REQA.
       FIN-COL-FIO-EVC.
           EXIT.
      *RRM-FIN 16-FEB-1999

       COPY COLBFDCC.
       COPY COLBFICG.
       COPY COLBFITR.
       COPY COLBFTOC.
       COPY TABBFCAM.
       COPY GNSBFMSG.
       COPY GNSBFMSC.
       COPY GNSBFTAB.
       COPY GNSBBTAB.
       COPY GNSBBMSG.
       COPY GNSBBMSC.
       COPY GNSBGDTC.

      * La rutina IDD se tuvo que compilar en COBOL2 para compilar
      * todo el programa en COBOL2
      * COPY GNSBGIDD.
       COPY GNSB2IDD.

       COPY GNSBTABT.
       COPY GNSBBSYS.
       COPY GNSBGFEC.
       COPY GNSBPFEC.
       COPY GNSBGHOY.
       COPY GNSBGEND.
       COPY GNSBGABT.
       COPY GNSBGPES.

       COPY COLBGCTO.




