       IDENTIFICATION DIVISION.
      *=======================
       PROGRAM-ID.      COLPLODP.
       AUTHOR.          CONSIST.
       DATE-WRITTEN.    18-May-94 04:28 PM.

      * Programa Listador de Reporte ODP con Sort.


       ENVIRONMENT DIVISION.
      *====================
       CONFIGURATION SECTION.
      *---------------------
       SPECIAL-NAMES.
            DECIMAL-POINT IS COMMA.
       INPUT-OUTPUT SECTION.
      *--------------------
       FILE-CONTROL.
      *DOS SELECT GNSSRT         ASSIGN TO SYS001-DA-3330-S-SORTWK1.
      *MVS SELECT GNSSRT         ASSIGN TO        DA-S-SORTWK1.
      *DOS SELECT RPTODP         ASSIGN TO SYS011-UR-1403-S.
      *MVS SELECT RPTODP         ASSIGN TO        UT-S-RPTODP.
           SELECT GNSSRT         ASSIGN TO        DA-S-SORTWK1.
           SELECT RPTODP         ASSIGN TO        UT-S-RPTODP.

       DATA DIVISION.
      *=============
       FILE SECTION.
      *------------
       SD  GNSSRT.
       COPY COLRRODP.
       FD  RPTODP LABEL RECORDS OMITTED
           REPORT IS RPT-ODP
           .

       WORKING-STORAGE SECTION.
      *-----------------------
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-OPC-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-TAB-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-MSG-REQA==.
       COPY COLBROPC.
       COPY GNSWGRQA.
       COPY GNSWGUIB.
       COPY GNSWGELS.
       COPY GNSWVIDD.
       COPY GNSWCFIO.
       COPY GNSWVFIO.
       COPY GNSWGRPT.
       COPY GNSBRTAB.
       COPY GNSBRMSG.
       COPY COLRWODP.
       COPY GNSWGSYS.
       01  PGM-STAT.
           03 PGM-STAT-SRT            VALUE ' ' PIC X(01).
              88 PGM-STAT-SRT-OKS     VALUE ' '.
              88 PGM-STAT-SRT-MAL     VALUE 'M'.
           03 PGM-SOKS                VALUE ' ' PIC X(01).
           03 PGM-SMAL                VALUE 'M' PIC X(01).
      *<<<< WSS
       COPY GNSBRMSC.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-MSC-REQA==.
       COPY GNSWGCPT.
       COPY GNSWGFEC.
       COPY GNSWGHOY.
       COPY GNSWGPES.

       COPY SGCBRDBC.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-DBC-REQA==.

       COPY COLBRRDC.
       COPY COLBRCAN.
       COPY COLBRVEN.
       COPY COLBRRCV.
       COPY COLBRCYA.
       COPY COLBRICG.
       COPY COLBRDLC.
       COPY COLBREVC.
       COPY COLBRTOC.
 DSP  * COPY COLBRPIP.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-RDC-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-CAN-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-VEN-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-RCV-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-CYA-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-ICG-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-DLC-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-EVC-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-TOC-REQA==.
 DSP  * COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-PIP-REQA==.
       COPY COLWGINT.
       COPY COLWGVEN.

       COPY TABBROFI.
       COPY TABBRUSR.
       COPY TABBRCAM.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-OFI-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-USR-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-CAM-REQA==.

       01  WSS-VARI.
           03 WSS-FINI.
              05 WSS-DINI           PIC 9(02).
              05 WSS-MINI           PIC 9(02).
              05 WSS-SINI           PIC 9(02).
              05 WSS-AINI           PIC 9(02).
           03 WSS-FTER.
              05 WSS-DTER           PIC 9(02).
              05 WSS-MTER           PIC 9(02).
              05 WSS-STER           PIC 9(02).
              05 WSS-ATER           PIC 9(02).
           03 WSS-FBEG.
              05 WSS-SBEG           PIC 9(02).
              05 WSS-ABEG           PIC 9(02).
              05 WSS-MBEG           PIC 9(02).
              05 WSS-DBEG           PIC 9(02).
           03 WSS-FEND.
              05 WSS-SEND           PIC 9(02).
              05 WSS-AEND           PIC 9(02).
              05 WSS-MEND           PIC 9(02).
              05 WSS-DEND           PIC 9(02).
           03 WSS-OFIA VALUE SPACES PIC X(03).
           03 WSS-RMOA VALUE SPACES PIC X(12).
           03 WSS-VCOC VALUE SPACES PIC X(06).
           03 WSS-TOOA VALUE SPACES PIC X(03).
           03 WSS-TOPA VALUE SPACES PIC X(06).
           03 WSS-TOPR.
              05 WSS-TOOC           PIC X(03).
              05 WSS-AOOC           PIC X(03).
           03 WSS-OPEC              PIC X(01).
           03 WSS-VAL-PASO          PIC S9(11)V9(04).
           03 WSS-SGV-MNTO          PIC S9(11)V9(04).
           03 WSS-KEY-IVCT.
              05 WSS-CIC-IVCT       PIC X(12).
              05 WSS-NUM-IVCT       PIC 9(03).
      *>>>>
      *<<<< WSS_DTC
      *>>>>

       REPORT SECTION.
      *--------------
       COPY COLRFODP.
      *<<<< RF
      *>>>>
           .
       COPY COLRTODP.
      *<<<< RT
      *>>>>

       PROCEDURE DIVISION.
      *==================
       DECLARATIVES.
       DEC-CF-ODP-OPC-COD-OFOC SECTION.
           USE BEFORE REPORTING CF-ODP-OPC-COD-OFOC.
       INI-CF-ODP-OPC-COD-OFOC.
      *<<<< CF_ODP_OPC_COD_OFOC
           MOVE ZEROES TO PAGE-COUNTER.
      *>>>>
       FIN-CF-ODP-OPC-COD-OFOC.
           EXIT.
       DEC-CF-ODP-OPC-COD-VCOC SECTION.
           USE BEFORE REPORTING CF-ODP-OPC-COD-VCOC.
       INI-CF-ODP-OPC-COD-VCOC.
       FIN-CF-ODP-OPC-COD-VCOC.
           EXIT.
       DEC-CF-ODP-OPC-COD-TOOC SECTION.
           USE BEFORE REPORTING CF-ODP-OPC-COD-TOOC.
       INI-CF-ODP-OPC-COD-TOOC.
       FIN-CF-ODP-OPC-COD-TOOC.
           EXIT.
       DEC-PH-ODP SECTION.
           USE BEFORE REPORTING PH-ODP.
       INI-PH-ODP.
       FIN-PH-ODP.
           EXIT.
      *<<<< FIN_DEC
      *>>>>
       END DECLARATIVES.

       MAIN SECTION.
      *------------
       INI-MAIN.
       COPY GNSBGEDB.
           MOVE 'COLPLODP' TO FIO-PROG.
           PERFORM GNS-BUS-IDD.

           MOVE FIO-INP      TO FIO-CMND.
           MOVE 'GNS'        TO FIO-SIST.
           PERFORM GNS-FIO-TAB.
      *<<<< INI
           DISPLAY 'INGRESE FECHA DE INICIO:'.
           ACCEPT WSS-FINI.
           DISPLAY WSS-FINI.
           DISPLAY 'INGRESE FECHA DE TERMINO:'.
           ACCEPT WSS-FTER.
           DISPLAY WSS-FTER.
      *Validar Fechas
           MOVE WSS-FINI     TO FEC-FECH.
           MOVE FEC-FORM-FEC TO FEC-FORM.
           MOVE FEC-CHOY-LE  TO FEC-CHOY.
           MOVE FEC-VHBL-N   TO FEC-VHBL.
           MOVE FEC-FBLK-N   TO FEC-FBLK.
           MOVE FEC-VAL-FEC  TO FEC-CMND.
           PERFORM PRO-FEC.
           IF NOT FEC-STAT-OKS
               DISPLAY 'FECHA INICIO ERRONEA: ' FEC-MENS
               PERFORM GNS-PRO-ABT.

           MOVE WSS-FTER     TO FEC-FECH.
           MOVE FEC-FORM-FEC TO FEC-FORM.
           MOVE FEC-CHOY-LE  TO FEC-CHOY.
           MOVE FEC-VHBL-N   TO FEC-VHBL.
           MOVE FEC-FBLK-N   TO FEC-FBLK.
           MOVE FEC-VAL-FEC  TO FEC-CMND.
           PERFORM PRO-FEC.
           IF NOT FEC-STAT-OKS
               DISPLAY 'FECHA TERMINO ERRONEA: ' FEC-MENS
               PERFORM GNS-PRO-ABT.
      *
           MOVE WSS-DINI TO WSS-NUM-DINI WSS-DBEG.
           MOVE WSS-MINI TO WSS-NUM-MINI WSS-MBEG.
           MOVE WSS-SINI TO WSS-NUM-SINI WSS-SBEG.
           MOVE WSS-AINI TO WSS-NUM-AINI WSS-ABEG.

           MOVE WSS-DTER TO WSS-NUM-DTER WSS-DEND.
           MOVE WSS-MTER TO WSS-NUM-MTER WSS-MEND.
           MOVE WSS-STER TO WSS-NUM-STER WSS-SEND.
           MOVE WSS-ATER TO WSS-NUM-ATER WSS-AEND.
      *
           IF WSS-FBEG > WSS-FEND
               DISPLAY 'FECHA INICIO NO PUEDE SER MAYOR A FECHA TERMINO'
               PERFORM GNS-PRO-ABT.
      *>>>>
           SORT GNSSRT
       COPY COLRSODP.
           INPUT  PROCEDURE IS INP-SRT
           OUTPUT PROCEDURE IS OUT-SRT.
       FIN-MAIN.
      *<<<< FIN
      *>>>>
           IF PGM-STAT-SRT-MAL OR SORT-RETURN > 0
               PERFORM GNS-PRO-ABT
           ELSE
               PERFORM GNS-PRO-END.

       INP-SRT SECTION.
      *---------------
       INI-INP-SRT.
      *<<<< INI_INP
              MOVE FIO-INP TO FIO-CMND.
              PERFORM SGC-FIO-DBC.
              PERFORM COL-FIO-CAN.
              PERFORM COL-FIO-RCV.
              PERFORM COL-FIO-VEN.
              PERFORM COL-FIO-ICG.
      *>>>>
           MOVE FIO-INP TO FIO-CMND.
           PERFORM COL-FIO-OPC.
       FST-INP-SRT.
      *<<<< INI_FST_INP
           MOVE WSS-FBEG TO OPC-FEC-FINP IN OPC.
           MOVE 'OPC-FEC-FINP' TO FIO-AKEY.
           MOVE FIO-GET-NLS    TO FIO-CMND.
           PERFORM COL-FIO-OPC.
           IF ( NOT FIO-STAT-OKS ) OR
              ( OPC-FEC-FINP IN OPC > WSS-FEND )
               DISPLAY 'OPERACIONES INEXISTENTES EN RANGO'
                       ' ENTREGADO'
               MOVE PGM-SMAL TO PGM-STAT-SRT
               GO TO FIN-INP-SRT
           ELSE
               GO TO LUP-INP-SRT.
      *>>>>
           MOVE FIO-GET-FST TO FIO-CMND.
           PERFORM COL-FIO-OPC.
      *<<<< FIN_FST_INP
      *>>>>
       LUP-INP-SRT.
           IF NOT FIO-STAT-OKS
              GO TO FIN-INP-SRT.
      *<<<< LUP_INP
           IF OPC-FEC-FINP IN OPC > WSS-FEND
               GO TO FIN-INP-SRT.
           IF OPC-MSC-STAT IN OPC NOT = 'A'
               GO TO NXT-INP-SRT.
           MOVE 'D' TO SRT-COD-TMOV IN SRT.
           PERFORM BUSCA-DBC.
 DSP  *     MOVE OPC-COD-OFOP IN OPC TO WSS-COD-OFOP.
           MOVE 0      TO CAN-NUM-ICAN IN CAN.
           MOVE 0      TO CAN-SGV-TPAG IN CAN.
DSP   *     MOVE 0      TO CAN-SGV-IPUN IN CAN.
DSP   *     MOVE 0      TO CAN-SGV-ICOM IN CAN.
DSP   *     MOVE 0      TO CAN-VAL-COMI IN CAN.
           MOVE 0      TO CAN-SGV-GAST IN CAN.
           MOVE 0      TO CAN-SGV-TREN IN CAN.
           MOVE SPACES TO CAN-MSC-FCAN IN CAN.
           MOVE SPACES TO CAN-MSC-ECAN IN CAN.
           MOVE OPC-NUM-DCOL IN OPC  TO SRT-NUM-DCOL IN SRT.
           MOVE OPC-NUM-MCOL IN OPC  TO SRT-NUM-MCOL IN SRT.
           MOVE OPC-NUM-SCOL IN OPC  TO SRT-NUM-SCOL IN SRT.
           MOVE OPC-NUM-ACOL IN OPC  TO SRT-NUM-ACOL IN SRT.
           MOVE SPACES TO WSS-NUM-TCAN IN WSS-ODP.
      *>>>>
       MOV-INP-SRT.
       COPY COLRMODP.
      *<<<< RM
      *>>>>
           RELEASE SRT.
       NXT-INP-SRT.
      *<<<< INI_NXT_INP
           MOVE 'OPC-FEC-FINP' TO FIO-AKEY.
      *>>>>
           MOVE FIO-GET-NXT TO FIO-CMND.
           PERFORM COL-FIO-OPC.
      *<<<< FIN_NXT_INP
      *>>>>
           GO TO LUP-INP-SRT.
       FIN-INP-SRT.
      *<<<< FIN_INP
           MOVE WSS-FBEG TO CAN-FEC-FOUT IN CAN.
           MOVE 'CAN-FEC-FOUT' TO FIO-AKEY.
           MOVE FIO-GET-NLS    TO FIO-CMND.
           PERFORM COL-FIO-CAN.
           IF ( NOT FIO-STAT-OKS ) OR
              ( CAN-FEC-FOUT IN CAN > WSS-FEND )
               DISPLAY 'CANCELACIONES INEXISTENTES EN RANGO'
                       ' ENTREGADO'
               GO TO FIN-CAN-INP-SRT.
       LUP-CAN-INP-SRT.
           IF ( NOT FIO-STAT-OKS ) OR
              ( CAN-FEC-FOUT IN CAN > WSS-FEND )
               GO TO FIN-CAN-INP-SRT.
           IF CAN-MSC-STAT IN CAN NOT = 'A'
               GO TO NXT-CAN-INP-SRT.
      *Si la CAN es una reversa, lee siguiente CAN
           IF CAN-SGV-TPAG IN CAN < ZEROES OR
              CAN-SGV-TREN IN CAN < ZEROES
               GO TO NXT-CAN-INP-SRT.
      *
           MOVE CAN-CIC-IOPC IN CAN TO OPC-CIC-IOPC IN OPC.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM COL-FIO-OPC.
           IF NOT FIO-STAT-OKS
               DISPLAY 'NO ENCONTRE OPERACION DE CREDITO'
                       ' PARA CANCELACION: ' CAN-KEY-ICAN IN CAN
               GO TO NXT-CAN-INP-SRT.
           MOVE 'P' TO SRT-COD-TMOV IN SRT.
           PERFORM BUSCA-DBC.
           MOVE CAN-COD-OFCA IN CAN TO WSS-COD-OFOP.
           MOVE CAN-NUM-DCAN IN CAN TO SRT-NUM-DCOL IN SRT.
           MOVE CAN-NUM-MCAN IN CAN TO SRT-NUM-MCOL IN SRT.
           MOVE CAN-NUM-SCAN IN CAN TO SRT-NUM-SCOL IN SRT.
           MOVE CAN-NUM-ACAN IN CAN TO SRT-NUM-ACOL IN SRT.
           MOVE CAN-NUM-ICAN IN CAN TO WSS-NUM-TCAN IN WSS-ODP.
           MOVE ZEROES TO CAN-SGV-IPUN IN SRT.
           MOVE ZEROES TO CAN-SGV-ICOM IN SRT.
           MOVE ZEROES TO CAN-VAL-COMI IN SRT.
        COPY COLRMODP.
           RELEASE SRT.
       NXT-CAN-INP-SRT.
           MOVE 'CAN-FEC-FOUT' TO FIO-AKEY.
           MOVE FIO-GET-NXT    TO FIO-CMND.
           PERFORM COL-FIO-CAN.
           GO TO LUP-CAN-INP-SRT.
       FIN-CAN-INP-SRT.
           MOVE FIO-CLO TO FIO-CMND.
           PERFORM COL-FIO-CAN.
      *>>>>
           MOVE FIO-CLO TO FIO-CMND.
           PERFORM COL-FIO-OPC.

       OUT-SRT SECTION.
      *---------------
       INI-OUT-SRT.
           IF PGM-STAT-SRT-MAL
               GO TO EXT-OUT-SRT.
      *<<<< INI_OUT
           MOVE 0 TO WSS-TDE-CRED WSS-TDE-INTE
                     WSS-TDE-COMI WSS-TDE-PORT
                     WSS-TDE-IMPU WSS-TDE-GAST
                     WSS-TDE-TOTA WSS-TPA-CRED
                     WSS-TPA-INTE WSS-TPA-COMI
                     WSS-TPA-PORT WSS-TPA-IMPU
                     WSS-TPA-GAST WSS-TPA-TOTA.
      *>>>>
           OPEN OUTPUT RPTODP.
      *     MOVE 'COLPLODP' TO RPT-NPGM.
           CALL 'GNSPLHDR' USING RPT-VARI.
           INITIATE RPT-ODP.
           RETURN GNSSRT AT END
                GO TO FIN-OUT-SRT.
      *<<<< FST_OUT
      *>>>>
       LUP-OUT-SRT.
      *<<<< LUP_OUT
      *glosa OFICINA
           IF OPC-COD-OFOC IN SRT NOT = WSS-OFIA
               MOVE OPC-COD-OFOC IN SRT TO OFI-COD-OFIC IN OFI
               PERFORM BUS-OFI
               MOVE WSS-GLS-OFOC TO WSS-GLS-OFOT
               MOVE OFI-GLS-DESC IN OFI TO WSS-GLS-OFOC.
      *glosa VALOR DE CAMBIO
           IF OPC-COD-VCOC IN SRT NOT = WSS-VCOC
               MOVE 'TAB' TO TAB-COD-SIST
               MOVE 'VLR' TO TAB-COD-TTAB IN TAB
               MOVE OPC-COD-VCOC IN SRT TO TAB-COD-CTAB IN TAB
               PERFORM BUS-TAB
               MOVE WSS-GLS-VCOC TO WSS-GLS-VCOT
               MOVE TAB-GLS-DCOR IN TAB TO WSS-GLS-VCOC.
      *glosa TOC
           IF OPC-COD-TOOC IN SRT NOT = WSS-TOOA
               MOVE 'TAB' TO TAB-COD-SIST
               MOVE 'TIO' TO TAB-COD-TTAB IN TAB
               MOVE OPC-COD-TOOC IN SRT TO TAB-COD-CTAB IN TAB
               PERFORM BUS-TAB
               MOVE WSS-GLS-TOOC TO WSS-GLS-TOOT
               MOVE TAB-GLS-DCOR IN TAB TO WSS-GLS-TOOC.
      *glosa AOOC
           IF OPC-COD-AOOC IN SRT > SPACES
               MOVE OPC-COD-TOOC IN SRT TO WSS-TOOC
               MOVE OPC-COD-AOOC IN SRT TO WSS-AOOC
               IF WSS-TOPR NOT = WSS-TOPA
                   MOVE 'TAB' TO TAB-COD-SIST
                   MOVE 'AUX' TO TAB-COD-TTAB IN TAB
                   MOVE WSS-TOPR TO TAB-COD-CTAB IN TAB
                   PERFORM BUS-TAB
                   MOVE TAB-GLS-DCOR IN TAB TO WSS-GLS-AOOC
                   MOVE WSS-TOPR TO WSS-TOPA
               ELSE
                   NEXT SENTENCE
           ELSE
               MOVE SPACES TO WSS-GLS-AOOC.
           PERFORM BUSCA-CYA.
           PERFORM BUSCA-VEN.
           PERFORM BUSCA-IMP.
           PERFORM BUSCA-GLS.
      *>>>>
       GEN-OUT-SRT.
           GENERATE DL-ODP.
      *<<<< FIN_GEN_OUT
           IF OPC-COD-OFOC IN SRT NOT = WSS-OFIA OR
              OPC-COD-VCOC IN SRT NOT = WSS-VCOC OR
              OPC-COD-TOOC IN SRT NOT = WSS-TOOA
               MOVE 0 TO WSS-TDE-CRED WSS-TDE-INTE
                         WSS-TDE-COMI WSS-TDE-PORT
                         WSS-TDE-IMPU WSS-TDE-GAST
                         WSS-TDE-TOTA WSS-TPA-CRED
                         WSS-TPA-INTE WSS-TPA-COMI
                         WSS-TPA-PORT WSS-TPA-IMPU
                         WSS-TPA-GAST WSS-TPA-TOTA.
      *Revisa si se produjo el CONTROL FOOTING para inicializar
      *contadores
           IF OPC-COD-OFOC IN SRT NOT = WSS-OFIA
               MOVE OPC-COD-OFOC IN SRT TO WSS-OFIA.
           IF OPC-COD-VCOC IN SRT NOT = WSS-VCOC
               MOVE OPC-COD-VCOC IN SRT TO WSS-VCOC.
           IF OPC-COD-TOOC IN SRT NOT = WSS-TOOA
               MOVE OPC-COD-TOOC IN SRT TO WSS-TOOA.
      *Sumar contadores
           IF SRT-COD-TMOV IN SRT = 'D'
               ADD OPC-VAL-CRED IN SRT TO WSS-TDE-CRED
               ADD WSS-VAL-INTE        TO WSS-TDE-INTE
               ADD WSS-VAL-COMI        TO WSS-TDE-COMI
               ADD WSS-VAL-PORT        TO WSS-TDE-PORT
               ADD WSS-VAL-IMPU        TO WSS-TDE-IMPU
               ADD WSS-VAL-GAST        TO WSS-TDE-GAST
               ADD WSS-VAL-TOTA        TO WSS-TDE-TOTA
           ELSE
               ADD OPC-VAL-CRED IN SRT TO WSS-TPA-CRED
               ADD WSS-VAL-INTE        TO WSS-TPA-INTE
               ADD WSS-VAL-COMI        TO WSS-TPA-COMI
               ADD WSS-VAL-PORT        TO WSS-TPA-PORT
               ADD WSS-VAL-IMPU        TO WSS-TPA-IMPU
               ADD WSS-VAL-GAST        TO WSS-TPA-GAST
               ADD WSS-VAL-TOTA        TO WSS-TPA-TOTA.
      *>>>>
       NXT-OUT-SRT.
           RETURN GNSSRT AT END
                GO TO FIN-OUT-SRT.
           GO TO LUP-OUT-SRT.
       FIN-OUT-SRT.
      *<<<< FIN_OUT
              MOVE FIO-CLO TO FIO-CMND.
              PERFORM COL-FIO-CAN.
              PERFORM COL-FIO-RCV.
              PERFORM COL-FIO-VEN.
              PERFORM COL-FIO-ICG.
              PERFORM COL-FIO-CYA.
      *>>>>
           TERMINATE RPT-ODP.
      *<<<< FIN_TMT
      *>>>>
           CLOSE RPTODP.
       EXT-OUT-SRT.
           EXIT.
       COPY COLBFOPC.
       COPY GNSBGDTC.
       COPY GNSBGIDD.
       COPY GNSBTABT.
       COPY GNSBBSYS.
       COPY GNSBFTAB.
       COPY GNSBFMSG.
       COPY GNSBGEND.
       COPY GNSBGABT.

      *<<<< EOF
       COPY SGCBFDBC.

       COPY COLBFRDC.
       COPY COLBFCAN.
       COPY COLBFVEN.
       COPY COLBFRCV.
       COPY COLBFCYA.
       COPY COLBFICG.
       COPY COLBFDLC.
       COPY COLBFEVC.
       COPY COLBFTOC.
DSP   * COPY COLBFPIP.
       COPY COLBGINT.
       COPY COLBGVEN.

       COPY GNSBGCPT.
       COPY GNSBGPES.
       COPY GNSBPFEC.
       COPY GNSBGFEC.
       COPY GNSBGHOY.
       COPY GNSBBTAB.
       COPY GNSBBMSG.
       COPY GNSBFMSC.

       COPY TABBBOFI.
       COPY TABBBUSR.
       COPY TABBFOFI.
       COPY TABBFUSR.
       COPY TABBFCAM.
DSP   * COPY TABBBCVG.

       BUSCA-DBC SECTION.
       INI-BUSCA-DBC.
           MOVE OPC-CAI-IOPC IN OPC TO RDC-CAI-IOPC IN RDC.
           MOVE OPC-IIC-IOPC IN OPC TO RDC-IIC-IOPC IN RDC.
           MOVE ZEROES              TO RDC-NUM-IDLC IN RDC.
           MOVE 'RDC-KEY-IDLC' TO FIO-AKEY.
           MOVE FIO-GET-NLS    TO FIO-CMND.
           PERFORM COL-FIO-RDC.
           IF NOT ( FIO-STAT-OKS AND
                    RDC-CAI-IOPC IN RDC = OPC-CAI-IOPC IN OPC AND
                    RDC-IIC-IOPC IN RDC = OPC-IIC-IOPC IN OPC AND
                    RDC-NUM-IDLC IN RDC = ZEROES )
               DISPLAY 'NO ENCONTRE AL CLIENTE PARA OPERACION: '
                       OPC-CIC-IOPC IN OPC
               MOVE ZEROES TO DBC-NUM-ICLI IN DBC
               MOVE SPACES TO DBC-VRF-ICLI IN DBC
               MOVE SPACES TO DBC-IND-ICLI IN DBC
               MOVE SPACES TO DBC-GLS-ICLI IN DBC
               MOVE SPACES TO DBC-GLS-NOMC IN DBC
               GO TO FIN-BUSCA-DBC.
           MOVE RDC-CAI-ICLI IN RDC TO DBC-CAI-ICLI IN DBC.
           MOVE RDC-IIC-ICLI IN RDC TO DBC-IIC-ICLI IN DBC.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM SGC-FIO-DBC.
           IF NOT FIO-STAT-OKS
               DISPLAY 'NO ENCONTRE AL CLIENTE PARA OPERACION: '
                       OPC-CIC-IOPC IN OPC
               MOVE ZEROES TO DBC-NUM-ICLI IN DBC
               MOVE SPACES TO DBC-VRF-ICLI IN DBC
               MOVE SPACES TO DBC-IND-ICLI IN DBC
               MOVE SPACES TO DBC-GLS-ICLI IN DBC
               MOVE SPACES TO DBC-GLS-NOMC IN DBC
               GO TO FIN-BUSCA-DBC.
           MOVE DBC-GLS-NOMC IN DBC TO CPT-STRN.
           PERFORM CPT-BLKS.
           MOVE CPT-STRN TO DBC-GLS-NOMC IN DBC.
       FIN-BUSCA-DBC.
           EXIT.

       BUSCA-CYA SECTION.
       INI-BUSCA-CYA.
           IF SRT-COD-TMOV IN SRT = 'D'
               MOVE OPC-CAI-IOPC IN SRT TO CYA-CAI-IOPC
               MOVE OPC-IIC-IOPC IN SRT TO CYA-IIC-IOPC
               MOVE '000'               TO CYA-NUM-ICAN
               MOVE 0                   TO CYA-NUM-ICYA
               MOVE FIO-GET-NLS TO FIO-CMND
               PERFORM COL-FIO-CYA
               IF NOT ( FIO-STAT-OKS AND
                  CYA-CAI-IOPC IN CYA = OPC-CAI-IOPC IN SRT AND
                  CYA-IIC-IOPC IN CYA = OPC-IIC-IOPC IN SRT AND
                  CYA-NUM-ICAN IN CYA = '000' )
                   MOVE SPACES TO CYA-CAI-ICYA IN CYA
                   MOVE SPACES TO CYA-IIC-ICYA IN CYA
                   MOVE SPACES TO CYA-IND-TCYA IN CYA
               ELSE
                   IF CYA-CAI-ICYA IN CYA > SPACES OR
                      CYA-IIC-ICYA IN CYA > ZEROES
                       NEXT SENTENCE
                   ELSE
                       MOVE SPACES TO CYA-CAI-ICYA IN CYA
                       MOVE SPACES TO CYA-IIC-ICYA IN CYA
           ELSE
               MOVE OPC-CAI-IOPC IN SRT TO CYA-CAI-IOPC IN CYA
               MOVE OPC-IIC-IOPC IN SRT TO CYA-IIC-IOPC IN CYA
               MOVE CAN-NUM-ICAN IN SRT TO CYA-NUM-ICAN IN CYA
               MOVE 0                   TO CYA-NUM-ICYA IN CYA
               MOVE FIO-GET-NLS TO FIO-CMND
               PERFORM COL-FIO-CYA
               IF NOT ( FIO-STAT-OKS AND
                  CYA-CAI-IOPC IN CYA = OPC-CAI-IOPC IN SRT AND
                  CYA-IIC-IOPC IN CYA = OPC-IIC-IOPC IN SRT AND
                  CYA-NUM-ICAN IN CYA = CAN-NUM-ICAN IN SRT )
                   MOVE SPACES TO CYA-CAI-ICYA IN CYA
                   MOVE SPACES TO CYA-IIC-ICYA IN CYA
                   MOVE SPACES TO CYA-IND-TCYA IN CYA
               ELSE
                   IF CYA-CAI-ICYA IN CYA > SPACES OR
                      CYA-IIC-ICYA IN CYA > ZEROES
                       NEXT SENTENCE
                   ELSE
                       MOVE SPACES TO CYA-CAI-ICYA IN CYA
                       MOVE SPACES TO CYA-IIC-ICYA IN CYA.
       FIN-BUSCA-CYA.
           EXIT.

       BUSCA-VEN SECTION.
       INI-BUSCA-VEN.
           IF SRT-COD-TMOV NOT = 'D'
               GO TO CAN-BUSCA-VEN.
           IF OPC-IND-VSTR IN SRT = 'S'
               MOVE 1 TO VEN-NUM-IVEN IN VEN
           ELSE
               MOVE OPC-NUM-IVEN IN SRT TO VEN-NUM-IVEN IN VEN.
           MOVE OPC-CAI-IOPC IN SRT TO VEN-CAI-IOPC IN VEN.
           MOVE OPC-IIC-IOPC IN SRT TO VEN-IIC-IOPC IN VEN.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM COL-FIO-VEN.
           IF NOT FIO-STAT-OKS
               DISPLAY 'NO EXISTE VENCIMIENTO ' VEN-NUM-IVEN IN VEN
                       ', PARA OPERACION '      VEN-CIC-IOPC IN VEN
               MOVE ZEROES TO VEN-FEC-FVEN IN VEN.
           GO TO FIN-BUSCA-VEN.
       CAN-BUSCA-VEN.
           MOVE OPC-CAI-IOPC IN SRT TO RCV-CAI-IOPC IN RCV.
           MOVE OPC-IIC-IOPC IN SRT TO RCV-IIC-IOPC IN RCV.
           MOVE CAN-NUM-ICAN IN SRT TO RCV-NUM-ICAN IN RCV.
           MOVE SPACES              TO RCV-CIC-IOPV IN RCV.
           MOVE ZEROES              TO RCV-NUM-IVCT IN RCV.
           MOVE FIO-GET-NLS TO FIO-CMND.
           PERFORM COL-FIO-RCV.
           IF NOT ( FIO-STAT-OKS AND
                    OPC-CAI-IOPC IN SRT = RCV-CAI-IOPC IN RCV AND
                    OPC-IIC-IOPC IN SRT = RCV-IIC-IOPC IN RCV AND
                    CAN-NUM-ICAN IN SRT = RCV-NUM-ICAN IN RCV )
               DISPLAY 'NO EXISTE REGISTRO RCV ASOCIADA A LA'
                       ' CANCELACION ' RCV-KEY-ICAN IN RCV
               MOVE ZEROES TO VEN-FEC-FVEN IN VEN
               GO TO FIN-BUSCA-VEN.
           MOVE OPC-NUM-IVEN IN SRT TO VEN-NUM-IVEN IN VEN.
           MOVE OPC-CAI-IOPC IN SRT TO VEN-CAI-IOPC IN VEN.
           MOVE OPC-IIC-IOPC IN SRT TO VEN-IIC-IOPC IN VEN.
           MOVE FIO-GET-KEY TO FIO-CMND.
           IF OPC-IND-VSTR IN SRT = 'S'
               PERFORM COL-OBT-VEN
               IF NOT VEN-STAT-OKS
                   DISPLAY 'NO EXISTE VENCIMIENTO ' OPC-NUM-IVEN IN SRT
                           ', PARA OPERACION ' OPC-CAI-IOPC IN SRT ' '
                                               OPC-IIC-IOPC IN SRT
                   MOVE ZEROES TO VEN-FEC-FVEN IN VEN
               ELSE
                   NEXT SENTENCE
           ELSE
               PERFORM COL-FIO-VEN
               IF NOT FIO-STAT-OKS
                   DISPLAY 'NO EXISTE VENCIMIENTO ' OPC-NUM-IVEN IN SRT
                           ', PARA OPERACION ' OPC-CAI-IOPC IN SRT ' '
                                               OPC-IIC-IOPC IN SRT
                   MOVE ZEROES TO VEN-FEC-FVEN IN VEN.
       FIN-BUSCA-VEN.
           EXIT.

       BUSCA-IMP SECTION.
       INI-BUSCA-IMP.
           IF SRT-COD-TMOV IN SRT NOT = 'D'
               GO TO CAN-BUSCA-IMP.
      *Busca importes asociados a un DESEMBOLSO
           PERFORM OBT-INTE-DES.
           MOVE WSS-VAL-PASO TO WSS-VAL-INTE.
           MOVE OPC-SGV-VCOM IN SRT TO WSS-VAL-COMI.
           PERFORM OBT-PORT-DES.
           MOVE WSS-VAL-PASO TO WSS-VAL-PORT.
           PERFORM OBT-IMPU-DES.
           MOVE WSS-VAL-PASO TO WSS-VAL-IMPU.
           MOVE OPC-VAL-GAST IN SRT TO WSS-VAL-GAST.
           MOVE OPC-SGV-LIQU IN SRT TO WSS-VAL-TOTA.
           GO TO FIN-BUSCA-IMP.
       CAN-BUSCA-IMP.
      *Busca importes asociados a un PAGO
           PERFORM BUSCA-TOC.
           PERFORM PRO-ICG-ALL.
           PERFORM OBT-INTE-PAG.
           MOVE WSS-VAL-PASO        TO WSS-VAL-INTE.
           MOVE CAN-VAL-COMI IN SRT TO WSS-VAL-COMI.
           PERFORM OBT-PORT-PAG.
           MOVE WSS-VAL-PASO        TO WSS-VAL-PORT.
           MOVE WSS-SGV-MNTO        TO WSS-VAL-IMPU.
           MOVE CAN-SGV-GAST IN SRT TO WSS-VAL-GAST.
           MOVE CAN-SGV-TPAG IN SRT TO WSS-VAL-TOTA.
       FIN-BUSCA-IMP.
           EXIT.

       OBT-IMPU-DES SECTION.
       INI-OBT-IMPU-DES.
           MOVE ZEROES TO WSS-VAL-PASO.
           MOVE OPC-CAI-IOPC IN SRT TO DLC-CAI-IOPC IN DLC.
           MOVE OPC-IIC-IOPC IN SRT TO DLC-IIC-IOPC IN DLC.
           MOVE ZEROES              TO DLC-NUM-IDLC IN DLC.
           MOVE FIO-GET-NLS TO FIO-CMND.
       LUP-OBT-IMPU-DES.
           PERFORM COL-FIO-DLC.
           IF NOT ( FIO-STAT-OKS AND
                    OPC-CAI-IOPC IN SRT = DLC-CAI-IOPC IN DLC AND
                    OPC-IIC-IOPC IN SRT = DLC-IIC-IOPC IN DLC )
               GO TO FIN-OBT-IMPU-DES.
           ADD DLC-VAL-IMPU IN DLC TO WSS-VAL-PASO.
           MOVE FIO-GET-NXT TO FIO-CMND.
           GO TO LUP-OBT-IMPU-DES.
       FIN-OBT-IMPU-DES.
           EXIT.

       OBT-INTE-DES SECTION.
       INI-OBT-INTE-DES.
           MOVE 'INTADE' TO ICG-IND-TTAS IN ICG.
           MOVE ZEROES TO WSS-VAL-PASO.
           MOVE OPC-CAI-IOPC IN SRT      TO ICG-CAI-IOPC IN ICG.
           MOVE OPC-IIC-IOPC IN SRT      TO ICG-IIC-IOPC IN ICG.
           MOVE ZEROES                   TO ICG-NUM-ICAN IN ICG.
           MOVE SPACES                   TO ICG-CIC-IOPV IN ICG.
           MOVE ZEROES                   TO ICG-NUM-IVCT IN ICG.
           MOVE SRT-NUM-DCOL IN SRT      TO ICG-NUM-DINI IN ICG.
           MOVE SRT-NUM-MCOL IN SRT      TO ICG-NUM-MINI IN ICG.
           MOVE SRT-NUM-SCOL IN SRT      TO ICG-NUM-SINI IN ICG.
           MOVE SRT-NUM-ACOL IN SRT      TO ICG-NUM-AINI IN ICG.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM COL-FIO-ICG.
           IF  FIO-STAT-OKS
               MOVE ICG-SGV-MNTO IN ICG   TO WSS-VAL-PASO.
       FIN-OBT-INTE-DES.
           EXIT.

       OBT-PORT-DES SECTION.
       INI-OBT-PORT-DES.
           MOVE 'GASPCU' TO ICG-IND-TTAS IN ICG.
           MOVE ZEROES TO WSS-VAL-PASO.
           MOVE OPC-CAI-IOPC IN SRT      TO ICG-CAI-IOPC IN ICG.
           MOVE OPC-IIC-IOPC IN SRT      TO ICG-IIC-IOPC IN ICG.
           MOVE ZEROES                   TO ICG-NUM-ICAN IN ICG.
           MOVE SPACES                   TO ICG-CIC-IOPV IN ICG.
           MOVE ZEROES                   TO ICG-NUM-IVCT IN ICG.
           MOVE SRT-NUM-DCOL IN SRT      TO ICG-NUM-DINI IN ICG.
           MOVE SRT-NUM-MCOL IN SRT      TO ICG-NUM-MINI IN ICG.
           MOVE SRT-NUM-SCOL IN SRT      TO ICG-NUM-SINI IN ICG.
           MOVE SRT-NUM-ACOL IN SRT      TO ICG-NUM-AINI IN ICG.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM COL-FIO-ICG.
           IF  FIO-STAT-OKS
               MOVE ICG-SGV-MNTO IN ICG   TO WSS-VAL-PASO.
       FIN-OBT-PORT-DES.
           EXIT.

       BUSCA-TOC SECTION.
       INI-BUSCA-TOC.
      *Lee TOC
           MOVE OPC-COD-TOOC IN SRT TO TOC-COD-TOCR IN TOC.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM COL-FIO-TOC.
      *Obtiene Como Opera
           MOVE 'COL'               TO MSC-COD-SIST FIO-SIST.
           MOVE 'OPEC'              TO MSC-COD-TMSC IN MSC.
           MOVE TOC-MSC-OPEC IN TOC TO MSC-COD-CMSC IN MSC.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM GNS-FIO-MSC.
           MOVE MSC-CIC-CMSC IN MSC TO WSS-OPEC IN WSS-VARI.
       FIN-BUSCA-TOC.
           EXIT.

       OBT-INTE-PAG SECTION.
       INI-OBT-INTE-PAG.
           MOVE ZEROES TO WSS-VAL-PASO.
           IF WSS-OPEC = 'D'
               PERFORM INT-DES-DOC
           ELSE
           IF WSS-OPEC = 'B'
               PERFORM INT-BOL-GAR
           ELSE
               PERFORM INT-OTROS.
       FIN-OBT-INTE-PAG.
           EXIT.

       INT-DES-DOC SECTION.
       INI-INT-DES-DOC.
           COMPUTE WSS-VAL-PASO = CAN-SGV-IPUN IN SRT +
                                  CAN-SGV-ICOM IN SRT.
       FIN-INI-DES-DOC.
           EXIT.

       INT-BOL-GAR SECTION.
       INI-INT-BOL-GAR.
           COMPUTE WSS-VAL-PASO = CAN-SGV-TREN IN SRT +
                                  CAN-SGV-TPAG IN SRT -
DSP   *                            RCV-VAL-SEGC IN RCV -
                                  WSS-SGV-MNTO.
       FIN-INI-BOL-GAR.
           EXIT.

       INT-OTROS SECTION.
       INI-INT-OTROS.
           COMPUTE WSS-VAL-PASO = CAN-SGV-TREN IN SRT +
                                  CAN-SGV-TPAG IN SRT -
                                  RCV-SGV-CAPI IN RCV -
DSP   *                            RCV-VAL-SEGC IN RCV -
                                  WSS-SGV-MNTO.
       FIN-INI-OTROS.
           EXIT.

       PRO-ICG-ALL SECTION.
       INI-PRO-ICG-ALL.
           MOVE ZEROES TO WSS-SGV-MNTO.
           MOVE OPC-CAI-IOPC IN SRT TO ICG-CAI-IOPC IN ICG.
           MOVE OPC-IIC-IOPC IN SRT TO ICG-IIC-IOPC IN ICG.
           MOVE CAN-NUM-ICAN IN SRT TO ICG-NUM-ICAN IN ICG.
           MOVE RCV-KEY-IVCT IN RCV TO ICG-KEY-IVCT IN ICG.
           MOVE 'IMP'               TO ICG-IND-TTAS IN ICG.
           MOVE ZEROES              TO ICG-FEC-FINI IN ICG.
           MOVE FIO-GET-NLS TO FIO-CMND.
       LUP-PRO-ICG-ALL.
           PERFORM COL-FIO-ICG.
           IF NOT ( FIO-STAT-OKS AND
                    OPC-CAI-IOPC IN SRT = ICG-CAI-IOPC IN ICG AND
                    OPC-IIC-IOPC IN SRT = ICG-IIC-IOPC IN ICG AND
                    CAN-NUM-ICAN IN SRT = ICG-NUM-ICAN IN ICG AND
                    ICG-KEY-IVCT IN ICG = RCV-KEY-IVCT IN RCV)
 DSP  *              ICG-GLS-NTAS IN ICG = SPACES)
                    GO TO FIN-PRO-ICG-ALL.
           IF (ICG-IND-TTAS IN ICG =
              'IMP   ' OR 'SEG   ' OR 'GAS   ')
               MOVE FIO-GET-NXT   TO FIO-CMND
      *         GO TO NXT-PRO-ICG-ALL.
 DSP  *     IF (ICG-GLS-NTAS IN ICG = 'INT')
 DSP           MOVE FIO-GET-NXT   TO FIO-CMND
 DSP  *         GO TO NXT-PRO-ICG-ALL.
           IF ICG-SGV-MNTO IN ICG > 0
               ADD ICG-SGV-MNTO IN ICG TO WSS-SGV-MNTO.
       NXT-PRO-ICG-ALL.
           MOVE FIO-GET-NXT TO FIO-CMND.
           GO TO LUP-PRO-ICG-ALL.
       FIN-PRO-ICG-ALL.
           EXIT.

       OBT-PORT-PAG SECTION.
       INI-OBT-PORT-PAG.
           MOVE 'GASPCA' TO ICG-IND-TTAS IN ICG.
           MOVE ZEROES TO WSS-VAL-PASO.
           MOVE OPC-CAI-IOPC IN SRT TO ICG-CAI-IOPC IN ICG.
           MOVE OPC-IIC-IOPC IN SRT TO ICG-IIC-IOPC IN ICG.
           MOVE CAN-NUM-ICAN IN SRT TO ICG-NUM-ICAN IN ICG.
           MOVE RCV-KEY-IVCT IN RCV TO ICG-KEY-IVCT IN ICG.
           MOVE SRT-NUM-DCOL IN SRT TO ICG-NUM-DINI IN ICG.
           MOVE SRT-NUM-MCOL IN SRT TO ICG-NUM-MINI IN ICG.
           MOVE SRT-NUM-SCOL IN SRT TO ICG-NUM-SINI IN ICG.
           MOVE SRT-NUM-ACOL IN SRT TO ICG-NUM-AINI IN ICG.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM COL-FIO-ICG.
           IF  FIO-STAT-OKS
               MOVE ICG-SGV-MNTO IN ICG   TO WSS-VAL-PASO.
       FIN-OBT-PORT-PAG.
           EXIT.

       BUSCA-GLS SECTION.
       INI-BUSCA-GLS.
           IF SRT-COD-TMOV IN SRT = 'D'
               MOVE '- DESEMBOLSO -' TO WSS-GLS-TMOV
           ELSE
               MOVE '-    PAGO    -' TO WSS-GLS-TMOV.
       FIN-BUSCA-GLS.
           EXIT.
      *>>>>
