       IDENTIFICATION DIVISION.
      *========================
       PROGRAM-ID.   COLPQMOR.
       AUTHOR.       BEE.
       DATE-WRITTEN. 26-Aug-19 10:27 PM.

      * NOMBRE PROGRAMA                   COLPQMOR
      * VERSION PGM                       3.1
      * VERSION SKL                       19.04.15
      * OPCION                            CON
      * ARCHIVO BASE                      COLMOR
      * PANTALLA                          COLMOR
      * INP/OUT                           DATACOM
      * TAMANO COMMAREA                   250


       ENVIRONMENT DIVISION.
      *=====================
       CONFIGURATION SECTION.
      *----------------------
       SPECIAL-NAMES.
               DECIMAL-POINT IS COMMA.
       DATA DIVISION.
      *==============

       WORKING-STORAGE SECTION.
      *------------------------
      * COPY GNSWGSCR.
       COPY GNSWGCVT.
       77  WSS-TAG-COLPQMOR-INI PIC X(125) VALUE                        
           '<IDNPGM NOM=$COLPQMOR$ SKL=$19.04.15$ VSN=${vsnpq}$        
      -    'GEN=$26-Aug-19 10:27 PM$ FNC=${fncpq}$/>'.    

       COPY GNSWCSCR.
       COPY GNSWVSCR.
      *<<<< FIN_SCR_VARI
           03  SCR-VARI-PFS.
               05  SCR-KEY-IMOR-ASCE      PIC X(44).
               05  SCR-KEY-IMOR-DESC      PIC X(44).
           03  SCR-CAR-FEC                PIC X(05).
           03  SCR-FEC-INF.
               05 SCR-INF-DES             PIC X(10).
               05 FILLER                  PIC X(05).
               05 SCR-INF-HAS             PIC X(10).
               
      *>>>>
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-OFI-REQA==.
       COPY TABBROFI.
       COPY COLWIMOR.

       COPY COLBRMOR.


       COPY GNSWVIDD.
       COPY GNSWGRQA.
       COPY GNSWGUIB.
       COPY GNSWGELS.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-MOR-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-TAB-REQA==.
       COPY GNSBRTAB.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-MSC-REQA==.
       COPY GNSBRMSC.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-MSG-REQA==.
       COPY GNSBRMSG.
       COPY GNSWCFIO.
       COPY GNSWVFIO.
       COPY GNSWGFRM.
       COPY GNSWVNUM.
       COPY GNSWCNUM.
       COPY GNSWCVRF.
       COPY GNSWVVRF.
       COPY GNSWGIDC.
       COPY GNSWGSYS.

      * << Variables definidas por codigo adicional
       01  WR-FRM-LIN-DET1.
           02 WR-MOR-NUM-RUT       PIC ZZZZZZZ9.
           02 FILLER               PIC X(01) VALUE '-'.
           02 WR-MOR-VRF-RUT       PIC X(01).
           02 FILLER               PIC X(02) VALUE SPACES.
           02 WR-MOR-NOM-CLI       PIC X(25).
           02 FILLER               PIC X(02) VALUE SPACES.
           02 WR-MOR-NRO-CTA       PIC X(08).
           02 FILLER               PIC X(02) VALUE SPACES.
           02 WR-MOR-NRO-TEL       PIC X(08).

       01  WR-FRM-LIN-DET2.
           02 FILLER               PIC X(26) VALUE SPACES.
           02 WR-MOR-KEY-IOPC      PIC X(12).
           02 FILLER               PIC X(02) VALUE SPACES.
           02 WR-MOR-FD-VTO        PIC X(02).
           02 FILLER               PIC X(01) VALUE '/'.
           02 WR-MOR-FM-VTO        PIC X(02).
           02 FILLER               PIC X(01) VALUE '/'.
           02 WR-MOR-FA-VTO        PIC X(04).
           02 FILLER               PIC X(02) VALUE SPACES.
           02 WR-MOR-COD-MON       PIC X(06).
           02 FILLER               PIC X(02) VALUE SPACES.
           02 WR-MOR-VAL-VCT       PIC ZZ.ZZZ.ZZZ.ZZ9,9999.

       01  WR-IND                  PIC 9(02).
      *>>>>
       01  PGM-VARI.
           03 PGM-ICLR                  VALUE ' '       PIC X(01).
           03 PGM-LIMPIAR-TODO          VALUE ' '       PIC X(01).
           03 PGM-LIMPIAR-LLAVES        VALUE 'K'       PIC X(01).
           03 PGM-LIMPIAR-CAMPOS        VALUE 'F'       PIC X(01).
           03 PGM-NO-LIMPIAR-NADA       VALUE 'N'       PIC X(01).
           03 PGM-PROG                                  PIC X(08).
           03 PGM-NTRN                                  PIC X(04).
           03 PGM-STAT.
              05 PGM-STAT-DBC.
                 88 PGM-STAT-DBC-NUL    VALUE '  '.
                 07 PGM-STT1-DBC        VALUE '2' PIC X(01).
                    88 PGM-STAT-DBC-OKS VALUE '0'.
                 07 PGM-STT2-DBC        VALUE '3' PIC X(01).
              05 PGM-STAT-OPC.
                 88 PGM-STAT-OPC-NUL    VALUE '  '.
                 07 PGM-STT1-OPC        VALUE '2' PIC X(01).
                    88 PGM-STAT-OPC-OKS VALUE '0'.
                 07 PGM-STT2-OPC        VALUE '3' PIC X(01).
              05 PGM-STAT-MOR.
                 88 PGM-STAT-MOR-NUL    VALUE '  '.
                 07 PGM-STT1-MOR        VALUE '2' PIC X(01).
                    88 PGM-STAT-MOR-OKS VALUE '0'.
                 07 PGM-STT2-MOR        VALUE '3' PIC X(01).
           03 PGM-SRNF                  VALUE '23'      PIC X(02).
           03 PGM-SOKS                  VALUE '00'      PIC X(02).
           03 PGM-SNUL                  VALUE '  '      PIC X(02).
           03 PGM-SUAR                  VALUE SPACES    PIC X(15).
       LINKAGE SECTION.
      *----------------
       01  DFHCOMMAREA.
           02 FILLER                    PIC X(368).
       COPY GNSLGFIO.

       PROCEDURE DIVISION.
      *===================

       MAIN SECTION.
       INI-MAIN.
           PERFORM INI.
       LUP-MAIN.
           IF SCR-INST = SCR-INST-HCM
                 PERFORM SCR-COM.
           IF SCR-CCPP = 'ACC'
                 PERFORM SCR-ACC
           ELSE
                 MOVE SCR-INST-HCM TO SCR-INST.
           GO TO LUP-MAIN.
       FIN-MAIN.
           EXIT.

       INI SECTION.
       INI-INI.
       COPY GNSBGEIB.
       COPY GNSBGEDB.
           MOVE LOW-VALUES TO MOR-FLD.
           MOVE LOW-VALUES TO MOR-EDT.
           PERFORM GNS-PRO-RCK.
           PERFORM GNS-BUS-VCA.
           MOVE +368 TO SCR-TCMA.
           PERFORM GNS-HDL-SYS.
           PERFORM GNS-HDL-FRM.
           MOVE 'COLPQMOR' TO FIO-PROG.
           PERFORM GNS-BUS-IDD.
      *<<<< ( INI_FIO ) AND ( NOT PGM_VSI )
           PERFORM GNS-HDL-VSM.
      *>>>>
       FIN-INI.
           EXIT.

       COPY GNSBHSYS.
       COPY GNSBHFRM.
       COPY GNSBPRCK.
       COPY GNSBBVCA.
       COPY GNSBBIDD.

       SCR-COM SECTION.
       INI-SCR-COM.
           MOVE FRM-CPSF-AEY TO FRM-CPIM-AEY.
           PERFORM PRO-ALL.
           PERFORM SCR-CLRA-MOR.
           PERFORM EDT-KEY-MOR.
           PERFORM EDT-FLD-MOR.
           PERFORM SCR-PUTA.
           MOVE SCR-INST-HCM TO SCR-INST.
           MOVE SCR-CMNP     TO SYS-PROG.
           MOVE SCR-VARI     TO SYS-CMMA.
           MOVE SCR-TCMA     TO SYS-TCMA.
           MOVE SYS-XCTL     TO SYS-CMND.
           PERFORM GNS-PRO-SYS.
       XCT-ERR.
           MOVE 'XCTERR    ' TO MSG-COD-MENS.
           MOVE 'GNS'        TO MSG-COD-SIST.
           PERFORM GET-MSG.
           MOVE MSG-GLS-DESC TO SYS-MEN1.
           MOVE SYS-PROG     TO SYS-MEN2.
           MOVE SYS-ABOR     TO SYS-CMND.
           PERFORM GNS-PRO-SYS.
       COPY GNSBGGBK.
       FIN-SCR-COM.
           EXIT.



       SCR-ACC SECTION.
       INI-SCR-ACC.
           IF SCR-INST = SCR-INST-HKY
               PERFORM HBL-KEY
               MOVE SCR-INST-GKY TO SCR-INST
               PERFORM SCR-DMSG
           ELSE
           IF SCR-INST = SCR-INST-GKY
                PERFORM SCR-KEY
                IF SCR-STAT NOT = SCR-STAT-ABT
                        PERFORM SCR-TRL
                ELSE
                        PERFORM DESSCRTRL
                        GO TO FIN-SCR-ACC
           ELSE
           IF SCR-INST = SCR-INST-GAB
                PERFORM GET-CON
           ELSE
           IF SCR-INST = SCR-INST-BRW
               MOVE SCR-FFLD TO FRM-FFLD
               PERFORM BRW-SCR-ACC.
           PERFORM DESSCRTRL.
      *<<<< PFS_SCR_ACC
            IF FRM-FFLD = FRM-FFLD-PF5 OR FRM-FFLD-PF6 OR
                          FRM-FFLD-PF7 OR FRM-FFLD-PF8
               PERFORM VAL-NUM-KEY-MOR
               PERFORM VAL-NUM-FLD-MOR
               PERFORM SCRL-TAB-MOR
               PERFORM SCR-TRL.
      *>>>>
           MOVE SPACES TO FRM-MENS.
           PERFORM SCR-MSSG.
       FIN-SCR-ACC.
           EXIT.

       BRW-SCR-ACC SECTION.
       INI-BRW-SCR-ACC.
       FIN-BRW-SCR-ACC.
           EXIT.




       SCR-DMSG SECTION.
       INI-SCR-DMSG.
           IF PGM-ICLR = PGM-NO-LIMPIAR-NADA
               NEXT SENTENCE
           ELSE
           IF PGM-ICLR = PGM-LIMPIAR-TODO
               PERFORM SCR-CLRA-MOR
               PERFORM EDT-KEY-MOR
               PERFORM EDT-FLD-MOR
           ELSE
           IF PGM-ICLR = PGM-LIMPIAR-LLAVES
               PERFORM CLR-KEY-MOR
               PERFORM EDT-KEY-MOR
           ELSE
               PERFORM CLR-FLD-MOR
               PERFORM EDT-FLD-MOR.
           PERFORM SCR-PUTA.
           PERFORM SCR-EXIT.
       FIN-SCR-DMSG.
           EXIT.

       SCR-KEY SECTION.
       INI-SCR-KEY.
           PERFORM SCR-RST.
           PERFORM GET-KEY.
           IF FRM-STAT-ABT
                   MOVE SPACES TO FRM-MENS
                   PERFORM SCR-MSSG
                   GO TO FIN-SCR-KEY.
       FND-SCR-KEY.
           MOVE SPACES TO FRM-MENS.
           PERFORM FND-KEY.
           IF FIO-STAT-OKS
               PERFORM PUT-SCR
               MOVE PGM-LIMPIAR-TODO TO PGM-ICLR
               GO TO FIN-SCR-KEY.
      *JSS ELSE
      *        PERFORM CLR-FLD-MOR.
       ERR-SCR-KEY.
           MOVE PGM-LIMPIAR-CAMPOS TO PGM-ICLR.
           IF FRM-MENS NOT > SPACES
               IF FIO-STAT-EOF
                   MOVE 'REGEOF    ' TO MSG-COD-MENS
                   MOVE 'GNS' TO MSG-COD-SIST
                   PERFORM GET-MSG
                   MOVE MSG-GLS-DESC TO FRM-MENS
               ELSE
               IF FIO-STAT = FIO-STAT-NEX
                   MOVE 'REGNEX    ' TO MSG-COD-MENS
                   MOVE 'GNS' TO MSG-COD-SIST
                   PERFORM GET-MSG
                   MOVE MSG-GLS-DESC TO FRM-MENS
               ELSE
                   MOVE 'FIOSTAT' TO MSG-COD-TMSG
                   MOVE FIO-STAT  TO MSG-COD-CMSG
                   MOVE 'GNS'     TO MSG-COD-SIST
                   PERFORM GET-MSG
                   MOVE MSG-GLS-DESC TO FRM-MENS.
           PERFORM SCR-MSSG.
           MOVE SCR-STAT-ABT TO SCR-STAT.
       FIN-SCR-KEY.
           EXIT.

       SCR-RST SECTION.
       INI-SCR-RST.
           MOVE SPACES       TO PGM-ICLR.
           MOVE SPACES       TO SCR-ACTU.
           MOVE SCR-STPP     TO SCR-STAT.
           MOVE SCR-MFLD-NOT TO SCR-MFLD.
           MOVE LOW-VALUES   TO MOR-FLD.
           MOVE LOW-VALUES TO MOR-EDT.
       FIN-SCR-RST.
           EXIT.

       GET-KEY SECTION.
       INI-GET-KEY.
           PERFORM SCR-GKEY.
           IF FRM-STAT-ABT
               MOVE SCR-STAT-ABT TO SCR-STAT.
       FIN-GET-KEY.
           EXIT.

       GET-IKY SECTION.
       INI-GET-IKY.
           PERFORM SCR-GIKY.
           IF FRM-STAT-ABT
               MOVE SCR-STAT-ABT TO SCR-STAT.
       FIN-GET-IKY.
           EXIT.

       FND-KEY SECTION.
       INI-FND-KEY.
           PERFORM KEY-ALL-MOR.
      *<<<< FND_KEY
      *Lectura de primer registro (busqueda)
           MOVE FRM-COD-EJE TO MOR-COD-EJE IN MOR
           MOVE SPACES TO MOR-KEY-IOPC IN MOR
           MOVE SPACES TO MOR-FEC-VTO  IN MOR
           MOVE SPACES TO MOR-NRO-RUT  IN MOR
           MOVE FIO-GET-NLS TO FIO-CMND.
           PERFORM COL-FIO-MOR.
           MOVE FIO-STAT TO PGM-STAT-MOR.
      *Si no encontro ningun registro entonces abandona la Seccion
           IF NOT FIO-STAT-OKS
              GO TO BUS-MSG-NEX.
           MOVE FIO-END-BRW TO FIO-CMND.
           PERFORM COL-FIO-MOR.
           PERFORM VER-CAM-KEY.
           IF FIO-STAT-OKS
              GO TO FIN-FND-KEY.
       BUS-MSG-NEX.
           IF FRM-COD-EJE IN MOR-FLD > SPACES
              MOVE 'MORNEXEJE' TO MSG-COD-MENS 
           ELSE
              MOVE 'MORNEXOFI' TO MSG-COD-MENS.

           MOVE 'COL' TO MSG-COD-SIST
           PERFORM GET-MSG
           MOVE MSG-GLS-DESC TO FRM-MENS.
           GO TO FIN-FND-KEY.
      *>>>>
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM COL-FIO-MOR.
           IF FIO-STAT-OKS
               MOVE MOR-STP-ITRN IN MOR TO SCR-UMOD.
           MOVE FIO-STAT TO PGM-STAT-MOR.
       FIN-FND-KEY.
           EXIT.
 
       PUT-SCR SECTION.
       INI-PUT-SCR.
           IF PGM-STAT-MOR-OKS
               MOVE MOR-STP-ITRN IN MOR TO SCR-UMOD.
      *<<<< PUT_SCR
            IF PGM-STAT-MOR-OKS
               MOVE 'MOR-KEY-IMOR' TO FIO-AKEY
               MOVE FIO-GET-NLS TO FIO-CMND
               PERFORM COL-FIO-MOR
               IF FIO-STAT-OKS
                   MOVE SPACES TO SCR-KEY-IMOR-ASCE
                                  SCR-KEY-IMOR-DESC
                   PERFORM LLENAR-TABLA-ASCE
                   MOVE SCR-KEY-IMOR-DESC TO
                        MOR-KEY-IMOR IN MOR 
               ELSE
                   PERFORM LIMPIAR-TABLA VARYING FRM-IFLD FROM 1 BY 1
                                         UNTIL   FRM-IFLD > 06
                   MOVE 'COL' TO MSG-COD-SIST
                   MOVE 'MOR    NEX' TO MSG-COD-MENS
                   PERFORM GET-MSG
                   MOVE MSG-GLS-DESC TO FRM-MENS.
      *>>>>
           PERFORM PUT-ALL-MOR.
       FIN-PUT-SCR.
           EXIT.

       STP-EXIT SECTION.
       INI-STP-EXIT.
           MOVE SCR-PROG TO PGM-PROG.
           MOVE SCR-NTRN TO PGM-NTRN.

           MOVE SCR-PROV TO SCR-PROG.
           MOVE SCR-NTRV TO SCR-NTRN.

           MOVE PGM-PROG TO SCR-PROV
           MOVE PGM-NTRN TO SCR-NTRV.
       FIN-STP-EXIT.
           EXIT.

       SCR-EXIT SECTION.
       INI-SCR-EXIT.
           MOVE 'P'      TO SCR-ICMN.
           MOVE SCR-NTRN TO SYS-NTRN.
           MOVE SCR-VARI TO SYS-CMMA.
           MOVE SCR-TCMA TO SYS-TCMA.
           MOVE SYS-RTRN TO SYS-CMND.
           PERFORM GNS-PRO-SYS.
       FIN-SCR-EXIT.
           EXIT.

       SCR-PUTA SECTION.
       INI-SCR-PUTA.
           MOVE SCR-NMAP TO FRM-NAME.
           MOVE SCR-NLIB TO FRM-NLIB.
           MOVE MOR-FLD TO FRM-DFLD.
           MOVE FRM-PUT-ALL TO FRM-CMND.
           PERFORM GNS-PRO-FRM.
       FIN-SCR-PUTA.
           EXIT.

       SCR-MSSG SECTION.
       INI-SCR-MSSG.
           IF FRM-MEN1 NOT > SPACES
               MOVE SPACES TO FRM-MEN1.
           IF FRM-MEN2 NOT > SPACES
               MOVE SPACES TO FRM-MEN2.
           MOVE FRM-MENS TO MOR-GLS-MENS.
       FIN-SCR-MSSG.
           EXIT.

       SCR-GKEY SECTION.
       INI-SCR-GKEY.
           MOVE SCR-NMAP TO FRM-NAME.
           MOVE SCR-NLIB TO FRM-NLIB.
           MOVE FRM-GET-ALL TO FRM-CMND.
           PERFORM GNS-PRO-FRM.
           MOVE SPACES TO FRM-MENS.
           IF NOT ( FRM-FFLD = FRM-FFLD-RET  OR FRM-FFLD-PF10 OR
                               FRM-FFLD-PF12 OR FRM-FFLD-PF3 )
               MOVE 'PFSINV    ' TO MSG-COD-MENS
               MOVE 'GNS' TO MSG-COD-SIST
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS
               PERFORM FST-KEY-MOR
               PERFORM SCR-MSSG
               PERFORM SCR-PUTA
               PERFORM SCR-EXIT.
           MOVE FRM-DFLD TO MOR-FLD.
           IF FRM-STAT-ABT
               GO TO FIN-SCR-GKEY.
           MOVE FRM-SUAR-OKS TO FRM-SUAR.
           PERFORM VAL-NUM-KEY-MOR.
           IF FRM-SUAR EQUAL FRM-SUAR-MAL OR FRM-SUAR-CLR
               PERFORM SCR-MSSG
               PERFORM EDT-KEY-MOR
               PERFORM SCR-PUTA
               PERFORM SCR-EXIT.
      *JSS
           PERFORM CLR-FLD-MOR.
           PERFORM VAL-IKY-MOR.
           IF FRM-SUAR EQUAL FRM-SUAR-MAL OR FRM-SUAR-CLR
               GO TO ERR-SCR-GKEY.
           PERFORM VAL-MKY-MOR.
           IF FRM-SUAR EQUAL FRM-SUAR-MAL OR FRM-SUAR-CLR
               GO TO ERR-SCR-GKEY.
           PERFORM VAL-AKY-MOR.
           IF FRM-SUAR EQUAL FRM-SUAR-MAL OR FRM-SUAR-CLR
               GO TO ERR-SCR-GKEY.
           PERFORM VAL-CON-KEY-MOR.
           IF NOT ( FRM-SUAR EQUAL FRM-SUAR-MAL OR FRM-SUAR-CLR )
               GO TO FIN-SCR-GKEY.
           IF FRM-UCUR NOT > SPACES
               PERFORM FST-KEY-MOR.
       ERR-SCR-GKEY.
           PERFORM SCR-MSSG.
           PERFORM EDT-KEY-MOR.
           PERFORM SCR-PUTA.
           PERFORM SCR-EXIT.
       FIN-SCR-GKEY.
           PERFORM SCR-MSSG.

       SCR-GIKY SECTION.
       INI-SCR-GIKY.
           MOVE SCR-NMAP TO FRM-NAME.
           MOVE SCR-NLIB TO FRM-NLIB.
           MOVE FRM-GET-ALL TO FRM-CMND.
           PERFORM GNS-PRO-FRM.
           MOVE SPACES TO FRM-MENS.
           IF NOT ( FRM-FFLD = FRM-FFLD-RET  OR FRM-FFLD-PF10 OR
                               FRM-FFLD-PF12 OR FRM-FFLD-PF3 )
               MOVE 'PFSINV    ' TO MSG-COD-MENS
               MOVE 'GNS' TO MSG-COD-SIST
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS
               PERFORM FST-KEY-MOR
               PERFORM SCR-MSSG
               PERFORM SCR-PUTA
               PERFORM SCR-EXIT.
           MOVE FRM-DFLD TO MOR-FLD.
           IF FRM-STAT-ABT
               GO TO FIN-SCR-GIKY.
           MOVE FRM-SUAR-OKS TO FRM-SUAR.
           PERFORM VAL-NUM-KEY-MOR.
           IF FRM-SUAR EQUAL FRM-SUAR-MAL OR FRM-SUAR-CLR
               PERFORM SCR-MSSG
               PERFORM EDT-IKY-MOR
               PERFORM SCR-PUTA
               PERFORM SCR-EXIT.
      *JSS
           PERFORM CLR-FLD-MOR.
           PERFORM VAL-IKY-MOR.
           IF FRM-SUAR EQUAL FRM-SUAR-MAL OR FRM-SUAR-CLR
               GO TO ERR-SCR-GIKY.
           PERFORM VAL-CON-IKY-MOR.
           IF NOT ( FRM-SUAR EQUAL FRM-SUAR-MAL OR FRM-SUAR-CLR )
               GO TO FIN-SCR-GIKY.
           IF FRM-UCUR NOT > SPACES
               PERFORM FST-KEY-MOR.
       ERR-SCR-GIKY.
           PERFORM SCR-MSSG.
           PERFORM EDT-IKY-MOR.
           PERFORM SCR-PUTA.
           PERFORM SCR-EXIT.
       FIN-SCR-GIKY.
           PERFORM SCR-MSSG.

       GET-CON SECTION.
       INI-GET-CON.
           MOVE SCR-NMAP TO FRM-NAME.
           MOVE SCR-NLIB TO FRM-NLIB.
           MOVE FRM-GET-ALL TO FRM-CMND.
           PERFORM GNS-PRO-FRM.
           IF NOT ( FRM-FFLD = FRM-FFLD-RET  OR FRM-FFLD-PF10 OR
                               FRM-FFLD-PF12 OR FRM-FFLD-PF3 )
      *<<<< PFS_GET_CON
           IF NOT ( FRM-FFLD = FRM-FFLD-PF5 )
           IF NOT ( FRM-FFLD = FRM-FFLD-PF6 )
      *>>>>
               MOVE 'PFSINV    ' TO MSG-COD-MENS
               MOVE 'GNS' TO MSG-COD-SIST
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO MOR-GLS-MEN2
               MOVE SCR-PRMT     TO MOR-GLS-MEN1
               PERFORM FST-MSG
               PERFORM SCR-PUTA
               PERFORM SCR-EXIT.
           MOVE FRM-DFLD TO MOR-FLD.
       FIN-GET-CON.
           MOVE SCR-STAT-CON TO SCR-STAT.

       CLR-MSG SECTION.
       INI-CLR-MSG.
           MOVE SPACES TO MOR-GLS-MENS.
       FIN-CLR-MSG.
           EXIT.

       HBL-IKY SECTION.
       INI-HBL-IKY.
           IF SCR-DESDE-CMN
               MOVE MOR-GLS-MENS TO FRM-MENS
               MOVE LOW-VALUES TO MOR-FLD
      * FLB  7-NOV-1994
               PERFORM CLR-KEY-MOR

               IF FRM-MENS < SPACES
                   MOVE LOW-VALUES TO MOR-GLS-MENS
               ELSE
                   MOVE FRM-MENS TO MOR-GLS-MENS.
           PERFORM PRO-MKY-MOR.
           PERFORM PRO-AKY-MOR.
           PERFORM UNP-IKY-MOR.
           PERFORM FST-KEY-MOR.
       FIN-HBL-IKY.
           EXIT.

       HBL-KEY SECTION.
       INI-HBL-KEY.
           IF SCR-DESDE-CMN
               MOVE MOR-GLS-MENS TO FRM-MENS
               MOVE LOW-VALUES TO MOR-FLD
               IF FRM-MENS < SPACES
                   MOVE LOW-VALUES TO MOR-GLS-MENS
               ELSE
                   MOVE FRM-MENS TO MOR-GLS-MENS.
           PERFORM UNP-KEY-MOR.
           PERFORM FST-KEY-MOR.
       FIN-HBL-KEY.
           EXIT.

       HBL-FLD SECTION.
       INI-HBL-FLD.
           PERFORM PRO-IKY-MOR.
           PERFORM PRO-AKY-MOR.
           PERFORM UNP-MKY-MOR.
           PERFORM UNP-FLD-MOR.
           PERFORM FST-FLD-MOR.
       FIN-HBL-FLD.
           EXIT.

       FST-MSG SECTION.
       INI-FST-MSG.
           MOVE -1 TO MOR-GLS-MENS-LEN.
       FIN-FST-MSG.
           EXIT.

       PRO-ALL SECTION.
       INI-PRO-ALL.
           PERFORM PRO-KEY-MOR.
           PERFORM FST-MSG.
       FIN-PRO-ALL.
           EXIT.

       SCR-TRL SECTION.
       INI-SCR-TRL.
           IF FRM-MEN1 NOT > SPACES
               MOVE SCR-PRMT TO FRM-MEN1.
           IF SCR-STAT = SCR-STAT-MOD
               PERFORM HBL-FLD
               PERFORM SCR-MSSG
               PERFORM EDT-KEY-MOR
               PERFORM EDT-FLD-MOR
               PERFORM SCR-PUTA
               PERFORM STP-EXIT
               MOVE SCR-INST-GFL TO SCR-INST
               PERFORM SCR-EXIT.
           IF SCR-STAT = SCR-STAT-SON
               PERFORM PRO-ALL
               PERFORM SCR-MSSG
               PERFORM EDT-KEY-MOR
               PERFORM EDT-FLD-MOR
               PERFORM SCR-PUTA
               PERFORM STP-EXIT
               MOVE SCR-INST-GCS TO SCR-INST
               PERFORM SCR-EXIT.
      *ASUME SCR-STAT-CON.
           MOVE SCR-STAT-CON TO SCR-STAT.
      *    MOVE FRM-CPSF-AEY TO FRM-CPIM-AEY.
           PERFORM PRO-ALL.
           PERFORM SCR-MSSG.
           PERFORM EDT-KEY-MOR.
           PERFORM EDT-FLD-MOR.
           PERFORM SCR-PUTA.
           MOVE SCR-INST-GAB TO SCR-INST.
           PERFORM SCR-EXIT.
       FIN-SCR-TRL.
           EXIT.

       DESSCRTRL SECTION.
       INI-DESSCRTRL.
           MOVE SCR-VFLD-NOT TO SCR-VFLD.
           MOVE FRM-FFLD TO SCR-FFLD.
       FIN-DESSCRTRL.
           IF SCR-FFLD-PF10 OR SCR-FFLD-PF3
                 MOVE SCR-INST-HCM TO SCR-INST
           ELSE
                 MOVE SCR-INST-HKY TO SCR-INST.
       EXT-DESSCRTRL.
           EXIT.

      * PGM-EBR-ALL SECTION.
      * INI-PGM-EBR-ALL.
      *     MOVE 'GNS' TO FIO-SIST.
      *     MOVE FIO-EBR-ALL TO FIO-CMND.
      *     PERFORM GNS-FIO-TAB.
      * FIN-PGM-EBR-ALL.
      *     EXIT.

       COPY COLBQMOR.
       COPY GNSBVNUM.
       COPY COLBFMOR.
       COPY GNSBFMSG.
       COPY GNSBGSYS.
       COPY GNSBGDTC.
       COPY GNSBGFRM.
       COPY GNSBGMSG.
       COPY GNSBEKEY.
       COPY GNSBIABT.
       COPY GNSBFTAB.
       COPY GNSBVIND.
       COPY GNSBVMSC.
       COPY GNSBFMSC.
       COPY GNSBVIDC.
       COPY GNSBPVRF.

       COPY GNSBEGLS.
       COPY TABBBOFI.
       COPY TABBVOFI.
       COPY TABBFOFI.

      *<<<< ( EOF ) AND ( NOT PGM_VSI )
       COPY GNSBGVSM.
       COPY GNSBHVSM.
      *>>>>
      *<<<< EOF
       SCRL-TAB-MOR SECTION.
       INI-SCRL-TAB-MOR.
           IF FRM-FFLD = FRM-FFLD-PF5
               PERFORM SCRL-TAB-MOR-PF5
               GO TO FIN-SCRL-TAB-MOR.
           IF FRM-FFLD = FRM-FFLD-PF6
               PERFORM SCRL-TAB-MOR-PF6
               GO TO FIN-SCRL-TAB-MOR.
       FIN-SCRL-TAB-MOR.
           EXIT.
   
       LLENAR-TABLA-ASCE SECTION.
       INI-LLENAR-TABLA-ASCE.
           MOVE 1 TO FRM-IFLD.
       LUP-LLENAR-TABLA-ASCE.
           IF FRM-IFLD NOT > 06
               PERFORM CARGAR-TABLA.
           IF FRM-IFLD = 1
               MOVE MOR-KEY-IMOR IN MOR TO SCR-KEY-IMOR-DESC
               MOVE SPACES              TO SCR-KEY-IMOR-ASCE
           ELSE
           IF FRM-IFLD = 06
               MOVE MOR-KEY-IMOR IN MOR TO SCR-KEY-IMOR-ASCE.
       NXT-LLENAR-TABLA-ASCE.
           ADD 1 TO FRM-IFLD.
           MOVE 'MOR-KEY-IMOR' TO FIO-AKEY.
           MOVE FIO-GET-NXT TO FIO-CMND.
           PERFORM COL-FIO-MOR.
           PERFORM VER-CAM-KEY.
           IF FIO-STAT-OKS
               IF FRM-IFLD NOT < 7
                  PERFORM PON-MEN-FRM
               ELSE
                  GO TO LUP-LLENAR-TABLA-ASCE.
           PERFORM LIMPIAR-TABLA VARYING FRM-IFLD FROM FRM-IFLD BY 1
                                 UNTIL   FRM-IFLD > 06.
       FIN-LLENAR-TABLA-ASCE.
           MOVE 'MOR-KEY-IMOR' TO FIO-AKEY.
           MOVE FIO-END-BRW TO FIO-CMND.
           PERFORM COL-FIO-MOR.
       EXT-LLENAR-TABLA-ASCE.
           EXIT.
  
       LLENAR-TABLA-DESC SECTION.
       INI-LLENAR-TABLA-DESC.
           MOVE 06 TO FRM-IFLD.
       LUP-LLENAR-TABLA-DESC.
           PERFORM CARGAR-TABLA.
           IF FRM-IFLD = 06
               MOVE MOR-KEY-IMOR IN MOR TO SCR-KEY-IMOR-ASCE
               MOVE SPACES              TO SCR-KEY-IMOR-DESC
           ELSE
           IF FRM-IFLD = 1
               MOVE MOR-KEY-IMOR IN MOR TO SCR-KEY-IMOR-DESC.
       PRV-LLENAR-TABLA-DESC.
           SUBTRACT 1 FROM FRM-IFLD.
           IF FRM-IFLD < 1
               PERFORM PON-MEN-FRM
               GO TO FIN-LLENAR-TABLA-DESC.
           MOVE 'MOR-KEY-IMOR' TO FIO-AKEY.
           MOVE FIO-GET-PRV TO FIO-CMND.
           PERFORM COL-FIO-MOR.
           PERFORM VER-CAM-KEY.
           IF FIO-STAT-OKS
              GO TO LUP-LLENAR-TABLA-DESC.
           PERFORM LIMPIAR-TABLA VARYING FRM-IFLD FROM FRM-IFLD BY -1
                                 UNTIL   FRM-IFLD < 1.
       FIN-LLENAR-TABLA-DESC.
           MOVE 'MOR-KEY-IMOR' TO FIO-AKEY.
           MOVE FIO-END-BRW TO FIO-CMND.
           PERFORM COL-FIO-MOR.
       EXT-LLENAR-TABLA-DESC.
           EXIT.
    
       SCRL-TAB-MOR-PF5 SECTION.
       INI-SCRL-TAB-MOR-PF5.
           IF SCR-KEY-IMOR-DESC NOT > SPACES
               MOVE 'MORHIJONOPRV' TO MSG-COD-MENS
               GO TO MSG-SCRL-TAB-MOR-PF5.
           MOVE SCR-KEY-IMOR-DESC TO MOR-KEY-IMOR IN MOR.
           MOVE 'MOR-KEY-IMOR' TO FIO-AKEY.
           MOVE FIO-GET-LEQ TO FIO-CMND.
           PERFORM COL-FIO-MOR.
           IF NOT ( FIO-STAT-OKS AND
               MOR-KEY-IMOR IN MOR = SCR-KEY-IMOR-DESC )
               MOVE 'MORCURRNEX' TO MSG-COD-MENS
               GO TO MSG-SCRL-TAB-MOR-PF5.
           MOVE 'MOR-KEY-IMOR' TO FIO-AKEY.
           MOVE FIO-GET-PRV TO FIO-CMND.
           PERFORM COL-FIO-MOR.
           PERFORM VER-CAM-KEY.
           IF FIO-STAT-OKS
               PERFORM LLENAR-TABLA-DESC
               GO TO FIN-SCRL-TAB-MOR-PF5.
           IF FIO-STAT-OKS
               MOVE 'MOR-KEY-IMOR' TO FIO-AKEY
               MOVE FIO-END-BRW TO FIO-CMND
               PERFORM COL-FIO-MOR.
           MOVE 'MORHIJONOPRV' TO MSG-COD-MENS.
       MSG-SCRL-TAB-MOR-PF5.
           MOVE 'COL' TO MSG-COD-SIST.
           PERFORM GET-MSG.
           MOVE MSG-GLS-DESC TO FRM-MEN2.
       FIN-SCRL-TAB-MOR-PF5.
           EXIT.
   
       SCRL-TAB-MOR-PF6 SECTION.
       INI-SCRL-TAB-MOR-PF6.
           IF SCR-KEY-IMOR-ASCE NOT > SPACES
               MOVE 'MORHIJONONXT' TO MSG-COD-MENS
               GO TO MSG-SCRL-TAB-MOR-PF6.
           MOVE SCR-KEY-IMOR-ASCE TO MOR-KEY-IMOR IN MOR.
           MOVE 'MOR-KEY-IMOR' TO FIO-AKEY.
           MOVE FIO-GET-NLS TO FIO-CMND.
           PERFORM COL-FIO-MOR.
           IF NOT ( FIO-STAT-OKS AND
               MOR-KEY-IMOR IN MOR = SCR-KEY-IMOR-ASCE )
               MOVE 'MORCURRNEX' TO MSG-COD-MENS
               GO TO MSG-SCRL-TAB-MOR-PF6.
           MOVE 'MOR-KEY-IMOR' TO FIO-AKEY.
           MOVE FIO-GET-NXT TO FIO-CMND.
           PERFORM COL-FIO-MOR.
           PERFORM VER-CAM-KEY.
           IF FIO-STAT-OKS
               PERFORM LLENAR-TABLA-ASCE
               GO TO FIN-SCRL-TAB-MOR-PF6.
           IF FIO-STAT-OKS
               MOVE 'MOR-KEY-IMOR' TO FIO-AKEY
               MOVE FIO-END-BRW TO FIO-CMND
               PERFORM COL-FIO-MOR.
           MOVE 'MORHIJONONXT' TO MSG-COD-MENS.
       MSG-SCRL-TAB-MOR-PF6.
           MOVE 'COL' TO MSG-COD-SIST.
           PERFORM GET-MSG.
           MOVE MSG-GLS-DESC TO FRM-MEN2.
       FIN-SCRL-TAB-MOR-PF6.
           EXIT.
 
       CARGAR-TABLA SECTION.
       INI-CARGAR-TABLA.
           COMPUTE WR-IND = (FRM-IFLD * 2) - 1
           MOVE MOR-NUM-RUT IN MOR  TO WR-MOR-NUM-RUT.
           MOVE MOR-VRF-RUT IN MOR  TO WR-MOR-VRF-RUT
           MOVE MOR-NOM-CLI IN MOR  TO WR-MOR-NOM-CLI
           MOVE MOR-NRO-CTA IN MOR  TO WR-MOR-NRO-CTA
           MOVE MOR-NRO-TEL IN MOR  TO WR-MOR-NRO-TEL
           MOVE WR-FRM-LIN-DET1 TO FRM-LIN-DET IN MOR-FLD(WR-IND).

           MOVE MOR-KEY-IOPC IN MOR TO WR-MOR-KEY-IOPC
           MOVE MOR-FD-VTO   IN MOR TO WR-MOR-FD-VTO
           MOVE MOR-FM-VTO   IN MOR TO WR-MOR-FM-VTO
           MOVE MOR-FA-VTO   IN MOR TO WR-MOR-FA-VTO
           MOVE MOR-COD-MON  IN MOR TO WR-MOR-COD-MON
           MOVE MOR-VAL-VCT  IN MOR TO WR-MOR-VAL-VCT
           ADD  1                   TO WR-IND
           MOVE WR-FRM-LIN-DET2 TO FRM-LIN-DET IN MOR-FLD(WR-IND).
       FIN-CARGAR-TABLA.
           EXIT.
       LIMPIAR-TABLA SECTION.
       INI-LIMPIAR-TABLA.
           COMPUTE WR-IND = (FRM-IFLD * 2) - 1 
           MOVE SPACES TO FRM-LIN-DET IN MOR-FLD(WR-IND).
           ADD  1 TO WR-IND
           MOVE SPACES TO FRM-LIN-DET IN MOR-FLD(WR-IND).
       FIN-LIMPIAR-TABLA.
           EXIT.
       VER-CAM-KEY SECTION.
       INI-VER-CAM-KEY.
      *Se chequea que no exista cambio de clave 
      *dependiendo si se digito ofi/eje o ofi/eje/fec
           MOVE FIO-STAT TO PGM-STAT-MOR.
           IF NOT FIO-STAT-OKS
              GO TO FIN-VER-CAM-KEY.
           IF MOR-COD-OFI IN MOR NOT = MOR-COD-OFI IN MOR-FLD
              MOVE PGM-SRNF TO FIO-STAT.
           IF FRM-COD-EJE IN MOR-FLD > SPACES AND
              FRM-COD-EJE IN MOR-FLD NOT = MOR-COD-EJE IN MOR
              MOVE PGM-SRNF TO FIO-STAT.
           MOVE FIO-STAT TO PGM-STAT-MOR.
       FIN-VER-CAM-KEY.
           EXIT.
       PON-MEN-FRM SECTION.
       INI-PON-MEN-FRM.
           IF (FRM-MEN2 NOT > SPACES)
               MOVE 'COL'                TO MSG-COD-SIST
               MOVE 'MOREXIPAG'          TO MSG-COD-MENS
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC         TO FRM-MEN2.
       FIN-PON-MEN-FRM.
           EXIT.
      *>>>>
