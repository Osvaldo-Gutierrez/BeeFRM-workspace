       IDENTIFICATION DIVISION.
      *=======================
       PROGRAM-ID.      COLPLIC2.
       AUTHOR.          CONSIST (DPM).
       DATE-WRITTEN.    18-Apr-97 03:56 PM.

      * Programa Listador de Reporte IC2 con Sort.


       ENVIRONMENT DIVISION.
      *====================
       CONFIGURATION SECTION.
      *---------------------
       SPECIAL-NAMES.
            DECIMAL-POINT IS COMMA.
       INPUT-OUTPUT SECTION.
      *--------------------
       FILE-CONTROL.
      *DOS SELECT GNSSRT         ASSIGN TO SYS001-DA-3330-S-SORTWK1.
      *MVS SELECT GNSSRT         ASSIGN TO        DA-S-SORTWK1.
      *DOS SELECT RPTIC2         ASSIGN TO SYS011-UR-1403-S.
      *MVS SELECT RPTIC2         ASSIGN TO        UT-S-RPTIC2.
           SELECT GNSSRT         ASSIGN TO        DA-S-SORTWK1.
           SELECT RPTIC2         ASSIGN TO        UT-S-RPTIC2.
      *<<<< IOS
      *>>>>

       DATA DIVISION.
      *=============
       FILE SECTION.
      *------------
       SD  GNSSRT.
       COPY COLRRIC2.
      *<<<< RR
           03 SRT-FLD-DETA   PIC X(209).
      *>>>>
       FD  RPTIC2 LABEL RECORDS OMITTED
           REPORT IS RPT-IC2
      *<<<< FD_RPT
           RECORD CONTAINS 81 CHARACTERS
      *>>>>
           .
      *<<<< FLS
      *>>>>

       WORKING-STORAGE SECTION.
      *-----------------------
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-LMS-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-TAB-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-MSG-REQA==.
       COPY COLBRLMS.
       COPY GNSWGRQA.
       COPY GNSWGUIB.
       COPY GNSWGELS.
       COPY GNSWVIDD.
       COPY GNSWCFIO.
       COPY GNSWVFIO.
       COPY GNSWGRPT.
       COPY GNSBRTAB.
       COPY GNSBRMSG.
       COPY COLRWIC2.
      *<<<< RW
      *>>>>
       COPY GNSWGSYS.
       01  PGM-STAT.
           03 PGM-STAT-SRT            VALUE ' ' PIC X(01).
              88 PGM-STAT-SRT-OKS     VALUE ' '.
              88 PGM-STAT-SRT-MAL     VALUE 'M'.
           03 PGM-SOKS                VALUE ' ' PIC X(01).
           03 PGM-SMAL                VALUE 'M' PIC X(01).
      *<<<< WSS
       COPY GNSWGFEC.
       COPY GNSWGHOY.
       COPY TABBROFI.
       COPY GNSBRMSC.
       COPY COLBRCYA.
       01  WSS-VARI.
           03 WSS-SW-LMS-VACIO  VALUE 'N' PIC X(01).
           03 WSS-NUM-ICAN VALUE ZEROES PIC 9(03).
           03 WSS-COD-ULT  VALUE SPACES PIC X(03).
           03 WSS-FLD-T002.
              05 W2C-SGV-MODE   VALUE ZEROES PIC S9(13)V9(02).
              05 W2C-NUM-REGD   VALUE ZEROES PIC 9(05).
              05 W2C-SGV-MOHA   VALUE ZEROES PIC S9(13)V9(02).
              05 W2C-NUM-REGH   VALUE ZEROES PIC 9(05).
              05 W2A-SGV-MODE   VALUE ZEROES PIC S9(13)V9(02).
              05 W2A-NUM-REGD   VALUE ZEROES PIC 9(05).
              05 W2A-SGV-MOHA   VALUE ZEROES PIC S9(13)V9(02).
              05 W2A-NUM-REGH   VALUE ZEROES PIC 9(05).
              05 FILLER         PIC X(78).
      *
           03 WSS-VEC-CYA OCCURS 700 TIMES INDEXED BY CYA-I CYA-TOPE
                                                      EXI-I EXI-TOPE.
              05  VEC-TCYA-CYA                   PIC X(05).
              05  VEC-COD-OFIC                       PIC X(03).
              05  VEC-REG-CYA-D                  PIC 9(05).
              05  VEC-MONTO-CYA-D                PIC S9(13)V9(02).
              05  VEC-REG-CYA-H                  PIC 9(05).
              05  VEC-MONTO-CYA-H                PIC S9(13)V9(02).
              05  VEC-REG-CYA-D-CAN              PIC 9(05).
              05  VEC-MONTO-CYA-D-CAN            PIC S9(13)V9(02).
              05  VEC-REG-CYA-H-CAN              PIC 9(05).
              05  VEC-MONTO-CYA-H-CAN            PIC S9(13)V9(02).
      *
           03 WSS-FEC-FINF.
              05 WSS-NUM-DINF                    PIC 9(02).
              05 WSS-NUM-MINF                    PIC 9(02).
              05 WSS-NUM-SINF                    PIC 9(02).
              05 WSS-NUM-AINF                    PIC 9(02).
           03 WSS-NUM-SSIS                       PIC 9(02).
           03 WSS-FEC-FSIS.
              05 WSS-NUM-ASIS                    PIC 9(02).
              05 WSS-NUM-MSIS                    PIC 9(02).
              05 WSS-NUM-DSIS                    PIC 9(02).
           03 WSS-FEC-FIN2.
              05 WSS-NUM-SIN2       VALUE 19     PIC 9(02).
              05 WSS-NUM-AIN2                    PIC 9(02).
              05 WSS-NUM-MIN2                    PIC 9(02).
              05 WSS-NUM-DIN2                    PIC 9(02).
           03 WSS-COD-OFOC                       PIC X(03).
           03 WSS-COD-OFIC                       PIC X(03).
           03 WSS-COD-NOPE                       PIC X(12).
           03 WSS-MULTIP        VALUE 'N'        PIC X(01).
           03 WSS-SORT-VACIO                     PIC X(02) VALUE 'NO'.
               88  SORT-VACIO                     VALUE 'SI'.
           03 WSS-EXISTE                         PIC X(01) VALUE 'N'.
               88  EXISTE                         VALUE 'S'.
           03 WSS-VEO-CYA                        PIC X(01) VALUE 'S'.
               88  VEO-CYA                        VALUE 'S'.
           03  WSS-FIN-LOOP                      PIC X(01) VALUE 'N'.
               88  FIN-LOOP                       VALUE 'S'.
           03 WSS-HORA-LST.
              05 WSS-NUM-HH                      PIC 9(02).
              05 WSS-NUM-MM                      PIC 9(02).
              05 WSS-NUM-SS                      PIC 9(02).
           03 WSS-SGV-CURS          VALUE ZEROES PIC S9(13)V9(02).
           03 WSS-SGV-CANC          VALUE ZEROES PIC S9(13)V9(02).
           03 WSS-NUM-REGC          VALUE ZEROES PIC 9(05).
           03 WSS-NUM-REGA          VALUE ZEROES PIC 9(05).
           03 WSS-COD-GRUP          VALUE SPACES PIC X(03).
           03 WSS-TOT-ABTT          VALUE ZEROES PIC S9(13)V9(02).
           03 WSS-TOT-A2TT          VALUE ZEROES PIC S9(13)V9(02).
           03 WSS-TOT-MOTT          VALUE ZEROES PIC 9(05).
           03 WSS-TOT-MO2T          VALUE ZEROES PIC 9(05).
           03 WSS-SUB-MOVT          VALUE ZEROES PIC 9(05).
           03 WSS-SUB-MOV2          VALUE ZEROES PIC 9(05).
           03 WSS-SUB-ABON          VALUE ZEROES PIC S9(13)V9(02).
           03 WSS-SUB-ABO2          VALUE ZEROES PIC S9(13)V9(02).
           03 WSS-IND-DISP          VALUE SPACES PIC X(01).
           03 WSS-COD-OFIC2      VALUE SPACES PIC X(03).
           03 WSS-MARCA          VALUE '@$%'  PIC X(03).
           03 WSS-IND-CAP           VALUE SPACES PIC X(03).
      *>>>>
      *<<<< WSS_DTC
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-OFI-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-MSC-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-CYA-REQA==.
      *>>>>

       REPORT SECTION.
      *--------------
       COPY COLRFIC2.
      *<<<< RF
      *>>>>
           .
       COPY COLRTIC2.
      *<<<< RT
      *>>>>

       PROCEDURE DIVISION.
      *==================
       DECLARATIVES.
       DEC-CF-IC2-SRT-COD-OFIC SECTION.
           USE BEFORE REPORTING CF-IC2-SRT-COD-OFIC.
       INI-CF-IC2-SRT-COD-OFIC.
      *<<<< CF_IC2_SRT_COD_OFIC
      *RJZ INI 05-JUL-1995
           MOVE 0 TO PAGE-COUNTER IN RPT-IC2.
      *RJZ FIN 05-JUL-1995
      *>>>>
       FIN-CF-IC2-SRT-COD-OFIC.
           EXIT.
       DEC-CF-IC2-SRT-COD-GRUP SECTION.
           USE BEFORE REPORTING CF-IC2-SRT-COD-GRUP.
       INI-CF-IC2-SRT-COD-GRUP.
      *<<<< CF_IC2_SRT_COD_GRUP
      *>>>>
       FIN-CF-IC2-SRT-COD-GRUP.
           EXIT.
       DEC-CF-IC2-SRT-COD-TREG SECTION.
           USE BEFORE REPORTING CF-IC2-SRT-COD-TREG.
       INI-CF-IC2-SRT-COD-TREG.
      *<<<< CF_IC2_SRT_COD_TREG
      *>>>>
       FIN-CF-IC2-SRT-COD-TREG.
           EXIT.
       DEC-PH-IC2 SECTION.
           USE BEFORE REPORTING PH-IC2.
       INI-PH-IC2.
      *<<<< PH_IC2
           IF SRT-COD-OFIC IN SRT > SPACES
               MOVE SRT-COD-OFIC IN SRT TO OFI-COD-OFIC IN OFI
      *JUS INI  14-DEC-1994 11:25:54
                                           WSS-COD-OFI  IN WSS-IC2
      *JUS FIN  14-DEC-1994 11:25:54
               PERFORM BUS-OFI
               MOVE OFI-GLS-DESC IN OFI TO WSS-GLS-OFOC IN WSS-IC2.
      *JUS INI 14-DEC-1994 11:28:29
           IF SRT-COD-OFIC IN SRT NOT = WSS-COD-OFIC2 IN WSS-VARI
              MOVE WSS-MARCA IN WSS-VARI TO WSS-IND-CPAG IN WSS-IC2
              MOVE SRT-COD-OFIC IN SRT TO WSS-COD-OFIC2 IN WSS-VARI
           ELSE
              MOVE SPACES TO WSS-IND-CPAG IN WSS-IC2
                             WSS-COD-OFI  IN WSS-IC2.
      *JUS FIN 14-DEC-1994 11:28:29
      *>>>>
       FIN-PH-IC2.
           EXIT.
      *<<<< FIN_DEC
      *>>>>
       END DECLARATIVES.

       MAIN SECTION.
      *------------
       INI-MAIN.
       COPY GNSBGEDB.
           MOVE 'COLPLIC2' TO FIO-PROG.
           PERFORM GNS-BUS-IDD.

           MOVE FIO-INP      TO FIO-CMND.
           MOVE 'GNS'        TO FIO-SIST.
           PERFORM GNS-FIO-TAB.
      *<<<< INI
           DISPLAY '============================'.
           DISPLAY 'INICIO CAPTURA DE PARAMETROS'.
           DISPLAY '============================'.
      * Captura Fecha de Proceso
           DISPLAY 'INGRESE FECHA DEL INFORME (DDMMSSAA) '.
           DISPLAY '-------------------------------------'.
           ACCEPT  WSS-FEC-FINF IN WSS-VARI.
           DISPLAY 'FECHA : ' WSS-FEC-FINF IN WSS-VARI.
      * Captura Codigo de Oficina
           DISPLAY 'OFICINA (*=TODAS): '.
           DISPLAY '-------------------'.
           ACCEPT  WSS-COD-OFIC IN WSS-VARI.
           DISPLAY 'OFICINA : ' WSS-COD-OFIC IN WSS-VARI.
           DISPLAY 'FIN    CAPTURA DE PARAMETROS'.
           DISPLAY '==============================='.
           DISPLAY 'INICIO VALIDACION DE PARAMETROS'.
           DISPLAY '==============================='.

      * Captura Hora del Informe
           ACCEPT WSS-HORA-LST FROM TIME.

      * Captura Fecha del Informe
           ACCEPT WSS-FEC-FSIS FROM DATE.
           IF WSS-NUM-ASIS IN WSS-VARI > 80
              MOVE 19 TO WSS-NUM-SSIS IN WSS-VARI
           ELSE
              MOVE 20 TO WSS-NUM-SSIS IN WSS-VARI.

      * Captura indicador de display
           ACCEPT WSS-IND-DISP IN WSS-VARI.
           IF WSS-IND-DISP IN WSS-VARI NOT = 'S' AND
                                       NOT = 'N'
               MOVE 'N' TO WSS-IND-DISP IN WSS-VARI.
      *1
      *VAL-FEC Valida Fecha de Informe
           DISPLAY 'FECHA DEL INFORME : ' WSS-FEC-FINF IN WSS-VARI.
           MOVE WSS-FEC-FINF IN WSS-VARI TO FEC-FECH.
           MOVE FEC-FORM-FEC TO FEC-FORM.
           MOVE FEC-FBLK-N   TO FEC-FBLK.
           MOVE FEC-CHOY-LE  TO FEC-CHOY.
           MOVE FEC-VHBL-S   TO FEC-VHBL.
           MOVE FEC-VAL-FEC  TO FEC-CMND.
           PERFORM PRO-FEC.
           IF NOT FEC-STAT-OKS
               DISPLAY FEC-MENS
               PERFORM GNS-PRO-ABT.

      *2
      *VAL-OFI Valida codigo de Oficina en TABLAS
           IF WSS-COD-OFIC IN WSS-VARI NOT = '*' AND
              WSS-COD-OFIC IN WSS-VARI > SPACES
               DISPLAY 'OFICINA : ' WSS-COD-OFIC IN WSS-VARI
               MOVE WSS-COD-OFIC IN WSS-VARI TO OFI-COD-OFIC IN OFI
               PERFORM VAL-OFI
               IF MSG-COD-MENS > SPACES
                   DISPLAY MSG-GLS-DESC IN MSG
                   PERFORM GNS-PRO-ABT.
      *3
           DISPLAY '============================'.
           DISPLAY 'FIN VALIDACION DE PARAMETROS'.
           DISPLAY '============================'.
      *
      * INICIALIZA MATRIZ POR PRIMERA VEZ.
           PERFORM INICIALIZA-MATRIZ.
      * ABRE ARCHIVO CYA
           MOVE FIO-INP TO FIO-CMND.
           PERFORM COL-FIO-CYA.
           SORT GNSSRT
       COPY COLRSIC2.
      *<<<< RS
      *>>>>
           SORT GNSSRT
       COPY COLRSIC2.
           INPUT  PROCEDURE IS INP-SRT
           OUTPUT PROCEDURE IS OUT-SRT.
       FIN-MAIN.
      *<<<< FIN
      *>>>>
           IF PGM-STAT-SRT-MAL OR SORT-RETURN > 0
               PERFORM GNS-PRO-ABT
           ELSE
               PERFORM GNS-PRO-END.

       INP-SRT SECTION.
      *---------------
       INI-INP-SRT.
      *<<<< INI_INP
      *RESCATA COD DE CAP
           MOVE 'CAP'          TO MSC-CIC-CMSC IN MSC.
           MOVE 'MSC-CIC-TABL' TO FIO-AKEY.
           PERFORM BUSCA-CIC-TCCT.
           MOVE MSC-COD-CMSC IN MSC TO WSS-IND-CAP IN WSS-VARI.
      *>>>>
           MOVE FIO-INP TO FIO-CMND.
           PERFORM COL-FIO-LMS.
       FST-INP-SRT.
      *<<<< INI_FST_INP
      *>>>>
           MOVE FIO-GET-FST TO FIO-CMND.
           PERFORM COL-FIO-LMS.
      *<<<< FIN_FST_INP
      *CHEQUEA QUE LMS TENGA DATOS
           IF NOT FIO-STAT-OKS
               DISPLAY ' ARCHIVO DE ENTRADAA COLLMS VACIO'
               DISPLAY 'FIN DEL PROCESO...'
               DISPLAY ' '
               MOVE 'S' TO WSS-SW-LMS-VACIO IN WSS-VARI
               GO TO EXT-INP-SRT.
      *
      * INICIO DE PRIMERA LECTURA SECUENCIAL DE ARCHIVO LMS.
           IF WSS-COD-OFIC IN WSS-VARI NOT = '*'
               PERFORM POS-OFI-PAR.
      *
      *DPM INI  11-OCT-1996
           MOVE LMS-FEC-FPRO IN LMS TO LMS-FEC-FCTB IN LMS.
      *DPM FIN  11-OCT-1996

           MOVE LMS-NUM-DCTB IN LMS TO SRT-NUM-DCTB IN SRT.
           MOVE LMS-NUM-MCTB IN LMS TO SRT-NUM-MCTB IN SRT.
           MOVE LMS-NUM-SCTB IN LMS TO SRT-NUM-SCTB IN SRT.
           MOVE LMS-NUM-ACTB IN LMS TO SRT-NUM-ACTB IN SRT.

      *ALMACENA CODIGO DE OFICINA Y NUMERO DE OPERACION
           MOVE LMS-COD-OFOC IN LMS TO WSS-COD-OFOC IN WSS-VARI.
           MOVE LMS-COD-MVTO IN LMS TO WSS-COD-ULT  IN WSS-VARI.
           IF LMS-COD-MVTO IN LMS = 'CUR'
              MOVE LMS-CIC-IOPC IN LMS TO WSS-COD-NOPE IN WSS-VARI
           ELSE
              MOVE LMS-CIC-IOPC IN LMS TO WSS-COD-NOPE IN WSS-VARI
              MOVE LMS-NUM-ICAN IN LMS TO WSS-NUM-ICAN IN WSS-VARI.

      *SE MUEVE FECHA DE PROCESO SEGUN FECHA DEL SISTEMA
           MOVE WSS-NUM-SSIS IN WSS-VARI TO WSS-NUM-SPRO IN WSS-IC2.
           MOVE WSS-NUM-ASIS IN WSS-VARI TO WSS-NUM-APRO IN WSS-IC2.
           MOVE WSS-NUM-MSIS IN WSS-VARI TO WSS-NUM-MPRO IN WSS-IC2.
           MOVE WSS-NUM-DSIS IN WSS-VARI TO WSS-NUM-DPRO IN WSS-IC2.

      * SE MUEVE FECHA DE PROCESO A FECHA AUXILIAR PARA SU
      * VALIDACION CON FECHA CONTABLE (LMS)
           MOVE WSS-NUM-DINF IN WSS-VARI TO WSS-NUM-DIN2 IN WSS-VARI.
           MOVE WSS-NUM-MINF IN WSS-VARI TO WSS-NUM-MIN2 IN WSS-VARI.
           MOVE WSS-NUM-AINF IN WSS-VARI TO WSS-NUM-AIN2 IN WSS-VARI.
           MOVE WSS-NUM-SINF IN WSS-VARI TO WSS-NUM-SIN2 IN WSS-VARI.
      * VALIDA FECHA EN ARCHIVO CON LA DEL PARAMETRO JCL
           IF LMS-FEC-FCTB IN LMS NOT = WSS-FEC-FIN2 IN WSS-VARI
              DISPLAY ' **** FECHA CONTABLE  EN  ARCHIVO ES'
              DISPLAY ' **** DISTINTA A LA FECHA DE PROCESO'
              DISPLAY ' **** SEGUN PARAMETRO........... '
              DISPLAY ' **** EL PROCESO SE AUTOCANCELA '
              DISPLAY 'FECHA PARAMETRO : ' WSS-FEC-FIN2 IN WSS-VARI
              DISPLAY 'FECHA EN MOVTOS : ' LMS-FEC-FCTB IN LMS
              PERFORM GNS-PRO-ABT.
      * INICIALIZA INDICE DE MATRIZ PARA PRIMERA LLENADA
      * CYA-I = 1
              SET CYA-I TO 1.
      *
      *>>>>
       LUP-INP-SRT.
           IF NOT FIO-STAT-OKS
              GO TO FIN-INP-SRT.
      *<<<< LUP_INP
           IF WSS-IND-DISP IN WSS-VARI = 'S'
               DISPLAY 'LUP INP'
               DISPLAY 'LMS COD MVTO ' LMS-COD-MVTO IN LMS
               DISPLAY 'LMS CIC IOPC ' LMS-CIC-IOPC IN LMS
               DISPLAY 'LMS NUM ICAN ' LMS-NUM-ICAN IN LMS
               DISPLAY 'LMS COD OFOC ' LMS-COD-OFOC IN LMS
               DISPLAY 'WSS COD ULT ' WSS-COD-ULT
               DISPLAY 'WSS CIC NOPE ' WSS-COD-NOPE
               DISPLAY 'WSS NUM ICAN ' WSS-NUM-ICAN
               DISPLAY 'WSS COD OFOC ' WSS-COD-OFOC IN WSS-VARI.

           IF LMS-COD-MVTO IN LMS NOT = WSS-COD-ULT
               MOVE LMS-COD-OFOC IN LMS TO WSS-COD-OFOC IN WSS-VARI
               MOVE LMS-COD-MVTO IN LMS TO WSS-COD-ULT IN WSS-VARI
               MOVE LMS-CIC-IOPC IN LMS TO WSS-COD-NOPE IN WSS-VARI
               MOVE 'S' TO WSS-VEO-CYA IN WSS-VARI
               MOVE LMS-NUM-ICAN IN LMS TO WSS-NUM-ICAN IN WSS-VARI.

           IF LMS-COD-MVTO IN LMS = 'CUR'
              IF LMS-COD-OFOC IN LMS = WSS-COD-OFOC IN WSS-VARI
                 IF LMS-CIC-IOPC IN LMS = WSS-COD-NOPE IN WSS-VARI
                    IF LMS-MSC-TCCT IN LMS = WSS-IND-CAP IN WSS-VARI
                       NEXT SENTENCE
                    ELSE
                       IF LMS-IND-LIQU IN LMS = 'L ' AND VEO-CYA
                          DISPLAY 'PRO CYA '
                          PERFORM PRO-CYA
                          MOVE 'N' TO WSS-VEO-CYA IN WSS-VARI
                       ELSE
                          NEXT SENTENCE
                 ELSE
                    MOVE 'S' TO WSS-VEO-CYA IN WSS-VARI
                    MOVE LMS-CIC-IOPC IN LMS TO WSS-COD-NOPE IN WSS-VARI
              ELSE
                 MOVE 'S' TO WSS-VEO-CYA IN WSS-VARI
                 MOVE LMS-CIC-IOPC IN LMS TO WSS-COD-NOPE IN WSS-VARI
                 MOVE LMS-COD-OFOC IN LMS TO WSS-COD-OFOC IN WSS-VARI
           ELSE
           IF LMS-COD-MVTO IN LMS = 'CAN' OR 'VEN'
              IF LMS-CIC-IOPC IN LMS = WSS-COD-NOPE IN WSS-VARI
                 AND LMS-NUM-ICAN IN LMS = WSS-NUM-ICAN IN WSS-VARI
                  IF LMS-MSC-TCCT IN LMS = WSS-IND-CAP IN WSS-VARI
                     PERFORM DATOS-CAP456
                  ELSE
                     IF LMS-IND-LIQU IN LMS = 'L ' AND VEO-CYA
                        DISPLAY 'PRO CYA '
                        PERFORM PRO-CYA
                        MOVE 'N' TO WSS-VEO-CYA IN WSS-VARI
                     ELSE
                        NEXT SENTENCE
              ELSE
                  MOVE 'S' TO WSS-VEO-CYA IN WSS-VARI
                  PERFORM GRABA-WSS456.
      *>>>>
       MOV-INP-SRT.
       COPY COLRMIC2.
      *<<<< RM
           MOVE LMS-COD-MVTO IN LMS TO WSS-COD-ULT IN WSS-VARI.
           GO TO NXT-INP-SRT.
      *>>>>
           RELEASE SRT.
       NXT-INP-SRT.
      *<<<< INI_NXT_INP
      *>>>>
           MOVE FIO-GET-NXT TO FIO-CMND.
           PERFORM COL-FIO-LMS.
      *<<<< FIN_NXT_INP
           IF FIO-STAT-OKS
              IF LMS-COD-OFOC IN LMS = WSS-COD-OFOC IN WSS-VARI
                 IF LMS-COD-MVTO IN LMS NOT = WSS-COD-ULT IN WSS-VARI
                    IF WSS-COD-ULT IN WSS-VARI = 'CAN' OR 'VEN'
                       MOVE LMS-CIC-IOPC IN LMS TO
                                         WSS-COD-NOPE IN WSS-VARI
                       MOVE 'S' TO WSS-VEO-CYA IN WSS-VARI
                    ELSE
                       MOVE LMS-CIC-IOPC IN LMS TO
                                         WSS-COD-NOPE IN WSS-VARI
                       MOVE LMS-NUM-ICAN IN LMS TO
                                         WSS-NUM-ICAN IN WSS-VARI
                       MOVE 'S' TO WSS-VEO-CYA IN WSS-VARI.
      *>>>>
           GO TO LUP-INP-SRT.
       FIN-INP-SRT.
      *<<<< FIN_INP
           PERFORM GRABA-REG-2.
       EXT-INP-SRT.
      *>>>>
           MOVE FIO-CLO TO FIO-CMND.
           PERFORM COL-FIO-LMS.

       OUT-SRT SECTION.
      *---------------
       INI-OUT-SRT.
           IF PGM-STAT-SRT-MAL
               GO TO EXT-OUT-SRT.
      *<<<< INI_OUT
           IF WSS-SW-LMS-VACIO IN WSS-VARI = 'S'
               GO TO EXT-OUT-SRT.

           DISPLAY '--> FIN PROCESO DE SORT'.
           DISPLAY '--> INICIO PROCESO DE INFORMES'.

           MOVE FIO-INP TO FIO-CMND.
           PERFORM TAB-FIO-OFI.
           GO TO PARRAFO.
      *>>>>
           OPEN OUTPUT RPTIC2.
      *     MOVE 'COLPLIC2' TO RPT-NPGM.
           CALL 'GNSPLHDR' USING RPT-VARI.
           INITIATE RPT-IC2.
           RETURN GNSSRT AT END
                GO TO FIN-OUT-SRT.
      *<<<< FST_OUT
       PARRAFO.
           OPEN OUTPUT RPTIC2.
           CALL 'GNSPLHDR' USING RPT-VARI.
           INITIATE RPT-IC2.
           MOVE 'NO' TO WSS-SORT-VACIO.
           RETURN GNSSRT AT END
               MOVE 'SI' TO WSS-SORT-VACIO
               GO TO FIN-OUT-SRT.
           MOVE SRT-COD-OFIC IN SRT TO WSS-COD-OFOC IN WSS-VARI.
           MOVE SRT-COD-GRUP IN SRT TO WSS-COD-GRUP IN WSS-VARI.
           PERFORM DATOS-MASCARA.
      *>>>>
       LUP-OUT-SRT.
      *<<<< LUP_OUT
           IF WSS-IND-DISP IN WSS-VARI = 'S'
               DISPLAY 'SRT COS TREG ' SRT-COD-TREG IN SRT
               DISPLAY 'SRT ' SRT.

           IF SRT-COD-TREG IN SRT = 2
              PERFORM PROCESA-REG-2
              GO TO NXT-OUT-SRT.
      *>>>>
       GEN-OUT-SRT.
           GENERATE DL-IC2.
      *<<<< FIN_GEN_OUT
      *>>>>
       NXT-OUT-SRT.
           RETURN GNSSRT AT END
                GO TO FIN-OUT-SRT.
           GO TO LUP-OUT-SRT.
       FIN-OUT-SRT.
      *<<<< FIN_OUT
      *>>>>
           TERMINATE RPT-IC2.
      *<<<< FIN_TMT
      *>>>>
           CLOSE RPTIC2.
       EXT-OUT-SRT.
           EXIT.
       COPY COLBFLMS.
       COPY GNSBGDTC.
       COPY GNSBGIDD.
       COPY GNSBTABT.
       COPY GNSBBSYS.
       COPY GNSBFTAB.
       COPY GNSBFMSG.
       COPY GNSBGEND.
       COPY GNSBGABT.

      *<<<< EOF
       COPY TABBFOFI.
       COPY TABBBOFI.
       COPY GNSBGFEC.
       COPY GNSBGHOY.
       COPY GNSBFMSC.
       COPY TABBVOFI.
       COPY GNSBBMSG.
       COPY GNSBBTAB.
       COPY COLBFCYA.
      *

       GRABA-REG-2 SECTION.
       INI-GRABA-REG-2.
           MOVE 2 TO SRT-COD-TREG IN SRT.
           SET CYA-TOPE TO CYA-I.
           SET CYA-I    TO 1.
           PERFORM RECORRE-Y-GRABA-MATRIZ UNTIL CYA-I NOT < CYA-TOPE.
           GO TO FIN-GRABA-REG-2.
      *
       RECORRE-Y-GRABA-MATRIZ.
           MOVE VEC-TCYA-CYA IN WSS-VARI (CYA-I) TO SRT-COD-TCYA IN SRT.
           MOVE VEC-COD-OFIC IN WSS-VARI (CYA-I) TO SRT-COD-OFIC IN SRT.
           MOVE VEC-MONTO-CYA-D     IN WSS-VARI (CYA-I) TO
                W2C-SGV-MODE        IN WSS-VARI.
           MOVE VEC-MONTO-CYA-H     IN WSS-VARI (CYA-I) TO
                W2C-SGV-MOHA        IN WSS-VARI.
           MOVE VEC-REG-CYA-D       IN WSS-VARI (CYA-I) TO
                W2C-NUM-REGD        IN WSS-VARI.
           MOVE VEC-REG-CYA-H       IN WSS-VARI (CYA-I) TO
                W2C-NUM-REGH        IN WSS-VARI.
           MOVE VEC-MONTO-CYA-D-CAN IN WSS-VARI (CYA-I) TO
                W2A-SGV-MODE        IN WSS-VARI.
           MOVE VEC-MONTO-CYA-H-CAN IN WSS-VARI (CYA-I) TO
                W2A-SGV-MOHA        IN WSS-VARI.
           MOVE VEC-REG-CYA-D-CAN   IN WSS-VARI (CYA-I) TO
                W2A-NUM-REGD        IN WSS-VARI.
           MOVE VEC-REG-CYA-H-CAN   IN WSS-VARI (CYA-I) TO
                W2A-NUM-REGH        IN WSS-VARI.
           PERFORM ALMACENA-GRUPO.
           MOVE MSC-COD-DAT3 IN MSC (1)  TO SRT-COD-GRUP IN SRT.
           MOVE WSS-FLD-T002 IN WSS-VARI TO SRT-FLD-DETA IN SRT.
           DISPLAY 'RELEASE SRT ' SRT.
           RELEASE SRT.
           SET CYA-I UP BY 1.
      *
       ALMACENA-GRUPO.
           MOVE 'TAB'                            TO FIO-SIST.
           MOVE 'MSC'                            TO MSC-COD-TTAB IN MSC.
           MOVE 'TCYA'                           TO MSC-COD-TMSC IN MSC.
           MOVE VEC-TCYA-CYA IN WSS-VARI (CYA-I) TO MSC-COD-CMSC IN MSC.
           MOVE FIO-GET-KEY                      TO FIO-CMND.
           PERFORM GNS-FIO-MSC.
           IF NOT FIO-STAT-OKS
              MOVE 'COL'       TO MSG-COD-SIST
              MOVE 'CODTCYANX' TO MSG-COD-MENS IN MSG
              PERFORM GET-MSG
              DISPLAY MSG-GLS-DESC   MSC-COD-CMSC
              DISPLAY 'LLAVE : ' VEC-TCYA-CYA IN WSS-VARI (CYA-I)
              PERFORM GNS-PRO-ABT.
       FIN-GRABA-REG-2.
           EXIT.
      *

       INICIALIZA-MATRIZ SECTION.
       INI-INICIALIZA-MATRIZ.
           SET CYA-TOPE TO 700.
           SET CYA-I    TO 1.
           PERFORM LIMPIA-CASILLAS-CYA-I UNTIL CYA-I NOT < CYA-TOPE.
           GO TO FIN-INICIALIZA-MATRIZ.
      *
       LIMPIA-CASILLAS-CYA-I.
           MOVE SPACES TO VEC-TCYA-CYA        IN WSS-VARI (CYA-I).
           MOVE SPACES TO VEC-COD-OFIC        IN WSS-VARI (CYA-I).
           MOVE ZEROES TO VEC-REG-CYA-D       IN WSS-VARI (CYA-I)
                          VEC-MONTO-CYA-D     IN WSS-VARI (CYA-I)
                          VEC-REG-CYA-H       IN WSS-VARI (CYA-I)
                          VEC-MONTO-CYA-H     IN WSS-VARI (CYA-I)
                          VEC-REG-CYA-D-CAN   IN WSS-VARI (CYA-I)
                          VEC-MONTO-CYA-D-CAN IN WSS-VARI (CYA-I)
                          VEC-REG-CYA-H-CAN   IN WSS-VARI (CYA-I)
                          VEC-MONTO-CYA-H-CAN IN WSS-VARI (CYA-I).
           SET CYA-I UP BY 1.
      *
       FIN-INICIALIZA-MATRIZ.
           EXIT.
      *
       PRO-CYA SECTION.
       INI-PRO-CYA.
           MOVE LMS-CIC-IOPC IN LMS TO CYA-CIC-IOPC IN CYA.
           MOVE LMS-NUM-ICAN IN LMS TO CYA-NUM-ICAN IN CYA.
           MOVE ZEROES              TO CYA-NUM-ICYA IN CYA.
           MOVE FIO-GET-NLS TO FIO-CMND.
           PERFORM COL-FIO-CYA.
           IF NOT FIO-STAT-OKS
              OR CYA-CIC-IOPC IN CYA  NOT = LMS-CIC-IOPC IN LMS
              OR CYA-NUM-ICAN IN CYA  NOT = LMS-NUM-ICAN IN LMS
              MOVE 'CYACUR INEX' TO  MSG-COD-MENS IN MSG
              DISPLAY 'NO EXISTE CYA PARA OPER: ' LMS-CIC-IOPC
              DISPLAY 'FIO-STAT:' FIO-STAT
           ELSE
              MOVE 'N' TO WSS-FIN-LOOP
              MOVE 'N' TO WSS-MULTIP IN WSS-VARI
              PERFORM LOOP-CYA UNTIL FIN-LOOP.
           GO TO FIN-PRO-CYA.
      *
       LOOP-CYA.
           PERFORM CHK-CIC-EXIS.
      * DETERMINA SI ES CURSE O CANCELACION
           IF CYA-NUM-ICAN IN CYA IS NUMERIC   AND
              CYA-NUM-ICAN IN CYA NOT = ZEROES AND
              LMS-COD-MVTO IN LMS = 'CAN' OR 'VEN'
              PERFORM SUMA-CANCELACIONES
           ELSE
           IF CYA-NUM-ICAN IN CYA = ZEROES AND
              LMS-COD-MVTO IN LMS = 'CUR'
              PERFORM SUMA-CURSES.
      * ALMACENA COD-TCYA Y CTA.CTE PARA #OPE. NO MULTIPLE
           PERFORM LEE-NXT-CYA.
      *
       FIN-PRO-CYA.
           EXIT.
      *
       SUMA-CANCELACIONES SECTION.
       INI-SUMA-CANCELACIONES.
           IF WSS-IND-DISP IN WSS-VARI = 'S'
               DISPLAY 'SUMA CANCELACIONES'
               DISPLAY 'WSS COD OFOC ' WSS-COD-OFOC IN WSS-VARI.

           IF NOT EXISTE
              DISPLAY 'NO EXISTE'
              MOVE CYA-IND-TCYA IN CYA TO VEC-TCYA-CYA
                                          IN WSS-VARI (CYA-I)
              MOVE WSS-COD-OFOC IN WSS-VARI TO VEC-COD-OFIC
                                          IN WSS-VARI (CYA-I)
              IF LMS-IND-DBHB IN LMS = 'D'
                 MOVE CYA-SGV-LIQU IN CYA TO VEC-MONTO-CYA-D-CAN
                                          IN WSS-VARI (CYA-I)
                 MOVE 1                   TO VEC-REG-CYA-D-CAN
                                          IN WSS-VARI (CYA-I)
                 MOVE ZEROES TO VEC-MONTO-CYA-H-CAN IN WSS-VARI (CYA-I)
                                VEC-REG-CYA-H-CAN   IN WSS-VARI (CYA-I)
                 SET CYA-I UP BY 1
              ELSE
                 MOVE CYA-SGV-LIQU IN CYA TO VEC-MONTO-CYA-H-CAN
                                          IN WSS-VARI (CYA-I)
                 MOVE 1                   TO VEC-REG-CYA-H-CAN
                                          IN WSS-VARI (CYA-I)
                 MOVE ZEROES TO VEC-MONTO-CYA-D-CAN IN WSS-VARI (CYA-I)
                                VEC-REG-CYA-D-CAN   IN WSS-VARI (CYA-I)
                 SET CYA-I UP BY 1
           ELSE
              DISPLAY 'SI EXISTE'
              IF LMS-IND-DBHB IN LMS = 'D'
                 ADD CYA-SGV-LIQU IN CYA    TO VEC-MONTO-CYA-D-CAN
                                            IN WSS-VARI (EXI-I)
                 ADD 1 TO VEC-REG-CYA-D-CAN IN WSS-VARI (EXI-I)
              ELSE
                 ADD CYA-SGV-LIQU IN CYA    TO VEC-MONTO-CYA-H-CAN
                                            IN WSS-VARI (EXI-I)
                 ADD 1 TO VEC-REG-CYA-H-CAN IN WSS-VARI (EXI-I).
       FIN-SUMA-CANCELACIONES.
           EXIT.
      *
       SUMA-CURSES SECTION.
       INI-SUMA-CURSES.
           IF NOT EXISTE
              MOVE CYA-IND-TCYA IN CYA TO VEC-TCYA-CYA
                                          IN WSS-VARI (CYA-I)
              MOVE WSS-COD-OFOC IN WSS-VARI TO VEC-COD-OFIC
                                          IN WSS-VARI (CYA-I)
              IF LMS-IND-DBHB IN LMS = 'D'
                 MOVE CYA-SGV-LIQU IN CYA TO VEC-MONTO-CYA-D
                                          IN WSS-VARI (CYA-I)
                 MOVE 1                   TO VEC-REG-CYA-D
                                          IN WSS-VARI (CYA-I)
                 MOVE ZEROES TO VEC-MONTO-CYA-H IN WSS-VARI (CYA-I)
                                VEC-REG-CYA-H   IN WSS-VARI (CYA-I)
                 SET CYA-I UP BY 1
              ELSE
                 MOVE CYA-SGV-LIQU IN CYA TO VEC-MONTO-CYA-H
                                          IN WSS-VARI (CYA-I)
                 MOVE 1                   TO VEC-REG-CYA-H
                                          IN WSS-VARI (CYA-I)
                 MOVE ZEROES TO VEC-MONTO-CYA-D IN WSS-VARI (CYA-I)
                                VEC-REG-CYA-D   IN WSS-VARI (CYA-I)
                 SET CYA-I UP BY 1
           ELSE
              IF LMS-IND-DBHB IN LMS = 'D'
                 ADD CYA-SGV-LIQU IN CYA  TO VEC-MONTO-CYA-D
                                          IN WSS-VARI (EXI-I)
                 ADD 1 TO VEC-REG-CYA-D   IN WSS-VARI (EXI-I)
              ELSE
                 ADD CYA-SGV-LIQU IN CYA  TO VEC-MONTO-CYA-H
                                          IN WSS-VARI (EXI-I)
                 ADD 1 TO VEC-REG-CYA-H   IN WSS-VARI (EXI-I).
       FIN-SUMA-CURSES.
           EXIT.
      *
       CHK-CIC-EXIS SECTION.
       INI-CHK-EXI.
           MOVE 'N'     TO WSS-EXISTE
           SET EXI-TOPE TO CYA-I.
           SET EXI-I    TO 1.
           IF EXI-TOPE = EXI-I
              GO TO FIN-CHK-EXI.
       LUP-CHK-EXI.
           IF EXI-I NOT < EXI-TOPE
              GO TO FIN-CHK-EXI.
           IF CYA-IND-TCYA IN CYA = VEC-TCYA-CYA
                                    IN WSS-VARI (EXI-I) AND
              VEC-COD-OFIC IN WSS-VARI (EXI-I) = WSS-COD-OFOC
                                    IN WSS-VARI
              MOVE 'S' TO WSS-EXISTE
           ELSE
              SET EXI-I UP BY 1
              GO TO LUP-CHK-EXI.
       FIN-CHK-EXI.
           EXIT.
      *
       LEE-NXT-CYA SECTION.
       INI-LEE-NXT-CYA.
           MOVE FIO-GET-NXT TO FIO-CMND.
           PERFORM COL-FIO-CYA.
           IF NOT FIO-STAT-OKS
              OR CYA-CIC-IOPC IN CYA  NOT = LMS-CIC-IOPC IN LMS
              OR CYA-NUM-ICAN IN CYA  NOT = LMS-NUM-ICAN IN LMS
              MOVE 'S' TO WSS-FIN-LOOP
           ELSE
              MOVE 'S' TO WSS-MULTIP IN WSS-VARI.
       FIN-LEE-NXT-CYA.
           EXIT.
      *

       DATOS-MASCARA SECTION.
       INI-DATOS-MASCARA.
           IF SRT-COD-OFIC IN SRT > SPACES
               MOVE SRT-COD-OFIC IN SRT TO OFI-COD-OFIC IN OFI
               PERFORM BUS-OFI
      * OFICINA
           MOVE OFI-GLS-DESC IN OFI TO WSS-GLS-OFOC IN WSS-IC2.

      * HORA INFORME
           MOVE WSS-NUM-HH   IN WSS-VARI TO WSS-NUM-HORA IN WSS-IC2.
           MOVE WSS-NUM-MM   IN WSS-VARI TO WSS-NUM-MINU IN WSS-IC2.
           MOVE WSS-NUM-SS   IN WSS-VARI TO WSS-NUM-SEGU IN WSS-IC2.
       FIN-DATOS-MASCARA.
           EXIT.
      *
       PROCESA-REG-2 SECTION.
       INI-PROCESA-REG-2.
           MOVE SRT-FLD-DETA IN SRT TO WSS-FLD-T002 IN WSS-VARI.
           MOVE SRT-COD-TCYA IN SRT TO WSS-CO2-TCYA IN WSS-IC2.
      * CANCELACIONES
           COMPUTE WSS-NUM-REGA IN WSS-VARI =
                   W2A-NUM-REGD IN WSS-VARI +
                   W2A-NUM-REGH IN WSS-VARI.
           COMPUTE WSS-SGV-CANC IN WSS-VARI =
                   W2A-SGV-MODE IN WSS-VARI +
                   W2A-SGV-MOHA IN WSS-VARI.
      * CURSES
           COMPUTE WSS-NUM-REGC IN WSS-VARI =
                   W2C-NUM-REGD IN WSS-VARI +
                   W2C-NUM-REGH IN WSS-VARI.
           COMPUTE WSS-SGV-CURS IN WSS-VARI =
                   W2C-SGV-MODE IN WSS-VARI +
                   W2C-SGV-MOHA IN WSS-VARI.

           MOVE WSS-SGV-CURS IN WSS-VARI TO WSS-SGV-ABON IN WSS-IC2.
           MOVE WSS-NUM-REGC IN WSS-VARI TO WSS-NUM-MOVT IN WSS-IC2.
           MOVE WSS-SGV-CANC IN WSS-VARI TO WSS-SGV-ABO2 IN WSS-IC2.
           MOVE WSS-NUM-REGA IN WSS-VARI TO WSS-NUM-MOV2 IN WSS-IC2.

           IF WSS-COD-OFOC IN WSS-VARI NOT = SRT-COD-OFIC IN SRT
              MOVE WSS-TOT-ABTT IN WSS-VARI TO WSS-TOT-ABTT IN WSS-IC2
              MOVE WSS-TOT-A2TT IN WSS-VARI TO WSS-TOT-A2TT IN WSS-IC2
              MOVE WSS-TOT-MOTT IN WSS-VARI TO WSS-TOT-MOTT IN WSS-IC2
              MOVE WSS-TOT-MO2T IN WSS-VARI TO WSS-TOT-MO2T IN WSS-IC2
              MOVE WSS-SUB-MOVT IN WSS-VARI TO WSS-SUB-MOVT IN WSS-IC2
              MOVE WSS-SUB-MOV2 IN WSS-VARI TO WSS-SUB-MOV2 IN WSS-IC2
              MOVE WSS-SUB-ABON IN WSS-VARI TO WSS-SUB-ABON IN WSS-IC2
              MOVE WSS-SUB-ABO2 IN WSS-VARI TO WSS-SUB-ABO2 IN WSS-IC2.

           IF WSS-COD-GRUP IN WSS-VARI NOT = SRT-COD-GRUP IN SRT
              MOVE WSS-SUB-MOVT IN WSS-VARI TO WSS-SUB-MOVT IN WSS-IC2
              MOVE WSS-SUB-MOV2 IN WSS-VARI TO WSS-SUB-MOV2 IN WSS-IC2
              MOVE WSS-SUB-ABON IN WSS-VARI TO WSS-SUB-ABON IN WSS-IC2
              MOVE WSS-SUB-ABO2 IN WSS-VARI TO WSS-SUB-ABO2 IN WSS-IC2.

           GENERATE DL-IC2.

           IF WSS-COD-OFOC IN WSS-VARI NOT = SRT-COD-OFIC IN SRT
              MOVE ZEROES TO WSS-TOT-ABTT IN WSS-VARI
                             WSS-TOT-A2TT IN WSS-VARI
                             WSS-TOT-MOTT IN WSS-VARI
                             WSS-TOT-MO2T IN WSS-VARI
                             WSS-SUB-MOVT IN WSS-VARI
                             WSS-SUB-MOV2 IN WSS-VARI
                             WSS-SUB-ABO2 IN WSS-VARI
                             WSS-SUB-ABON IN WSS-VARI
              MOVE SRT-COD-OFIC IN SRT TO WSS-COD-OFOC IN WSS-VARI.

           IF WSS-COD-GRUP IN WSS-VARI NOT = SRT-COD-GRUP IN SRT
              MOVE ZEROES TO WSS-SUB-MOVT IN WSS-VARI
                             WSS-SUB-MOV2 IN WSS-VARI
                             WSS-SUB-ABO2 IN WSS-VARI
                             WSS-SUB-ABON IN WSS-VARI
              MOVE SRT-COD-GRUP IN SRT TO WSS-COD-GRUP IN WSS-VARI.

      * TOTALES
           COMPUTE WSS-TOT-ABTT IN WSS-VARI = WSS-TOT-ABTT IN WSS-VARI +
                   WSS-SGV-CURS IN WSS-VARI.
           COMPUTE WSS-TOT-A2TT IN WSS-VARI = WSS-TOT-A2TT IN WSS-VARI +
                   WSS-SGV-CANC IN WSS-VARI.
           COMPUTE WSS-TOT-MOTT IN WSS-VARI = WSS-TOT-MOTT IN WSS-VARI +
                   WSS-NUM-REGC IN WSS-VARI.
           COMPUTE WSS-TOT-MO2T IN WSS-VARI = WSS-TOT-MO2T IN WSS-VARI +
                   WSS-NUM-REGA IN WSS-VARI.
           COMPUTE WSS-SUB-MOVT IN WSS-VARI = WSS-SUB-MOVT IN WSS-VARI +
                   WSS-NUM-REGC IN WSS-VARI.
           COMPUTE WSS-SUB-MOV2 IN WSS-VARI = WSS-SUB-MOV2 IN WSS-VARI +
                   WSS-NUM-REGA IN WSS-VARI.
           COMPUTE WSS-SUB-ABON IN WSS-VARI = WSS-SUB-ABON IN WSS-VARI +
                   WSS-SGV-CURS IN WSS-VARI.
           COMPUTE WSS-SUB-ABO2 IN WSS-VARI = WSS-SUB-ABO2 IN WSS-VARI +
                   WSS-SGV-CANC IN WSS-VARI.
           MOVE WSS-TOT-ABTT IN WSS-VARI TO WSS-TOT-ABTT IN WSS-IC2.
           MOVE WSS-TOT-A2TT IN WSS-VARI TO WSS-TOT-A2TT IN WSS-IC2.
           MOVE WSS-TOT-MOTT IN WSS-VARI TO WSS-TOT-MOTT IN WSS-IC2.
           MOVE WSS-TOT-MO2T IN WSS-VARI TO WSS-TOT-MO2T IN WSS-IC2.
           MOVE WSS-SUB-MOVT IN WSS-VARI TO WSS-SUB-MOVT IN WSS-IC2.
           MOVE WSS-SUB-MOV2 IN WSS-VARI TO WSS-SUB-MOV2 IN WSS-IC2.
           MOVE WSS-SUB-ABON IN WSS-VARI TO WSS-SUB-ABON IN WSS-IC2.
           MOVE WSS-SUB-ABO2 IN WSS-VARI TO WSS-SUB-ABO2 IN WSS-IC2.
       FIN-PROCESA-REG-2.
           EXIT.
      *

       POS-OFI-PAR SECTION.
       INI-POS-OFI-PAR.
           IF NOT FIO-STAT-OKS
               GO TO FIN-POS-OFI-PAR.
           IF WSS-COD-OFIC IN WSS-VARI NOT = LMS-COD-OFOC IN LMS
               MOVE FIO-GET-NXT TO FIO-CMND
               PERFORM COL-FIO-LMS
               GO TO INI-POS-OFI-PAR.
           GO TO FIN-POS-OFI-PAR.
       FIN-POS-OFI-PAR.
           EXIT.
      *
       BUSCA-CIC-TCCT SECTION.
       INI-BUSCA-TCCT.
           MOVE 'COL'                            TO FIO-SIST.
           MOVE 'MSC'                            TO MSC-CIC-TTAB IN MSC.
           MOVE 'TCCT'                           TO MSC-CIC-TMSC IN MSC.
           MOVE FIO-GET-KEY                      TO FIO-CMND.
           PERFORM GNS-FIO-MSC.
           IF NOT FIO-STAT-OKS
              MOVE 'COL'       TO MSG-COD-SIST
              MOVE 'CODTCYANX' TO MSG-COD-MENS IN MSG
              PERFORM GET-MSG
              DISPLAY MSG-GLS-DESC   MSC-COD-CMSC
              DISPLAY 'LLAVE : ' MSC-CIC-CMSC IN MSC
              PERFORM GNS-PRO-ABT.
       FIN-BUSCA-CIC-TCCT.
           EXIT.

       DATOS-CAP456 SECTION.
       INI-DATOS-CAP456.
           MOVE LMS-COD-OFOC IN LMS TO WSS-COD-OFOC IN WSS-VARI.
           MOVE LMS-CIC-IOPC IN LMS TO WSS-COD-NOPE IN WSS-VARI.
       FIN-DATOS-CAP456.
           EXIT.

        GRABA-WSS456 SECTION.
        INI-GRABA-WSS456.
           MOVE LMS-COD-OFOC IN LMS TO WSS-COD-OFOC IN WSS-VARI.
           MOVE LMS-CIC-IOPC IN LMS TO WSS-COD-NOPE IN WSS-VARI.
           MOVE LMS-NUM-ICAN IN LMS TO WSS-NUM-ICAN IN WSS-VARI.
           IF LMS-MSC-TCCT IN LMS = WSS-IND-CAP IN WSS-VARI
               PERFORM DATOS-CAP456
           ELSE
           IF LMS-IND-LIQU IN LMS = 'L' AND VEO-CYA
               PERFORM PRO-CYA
               MOVE 'N' TO WSS-VEO-CYA.
        FIN-GRABA-WSS456.
           EXIT.
      *>>>>
