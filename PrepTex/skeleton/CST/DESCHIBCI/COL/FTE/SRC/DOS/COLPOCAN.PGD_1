       IDENTIFICATION DIVISION.
      *========================
       PROGRAM-ID.   COLPOCAN.
       AUTHOR.       CONSIST.
       DATE-WRITTEN. 31-May-90 05:51 PM.
      * ACTUALIZA ARCHIVO COLCAN EN FORMA INTERACTIVA.
       ENVIRONMENT DIVISION.
      *=====================
       CONFIGURATION SECTION.
      *----------------------
       SPECIAL-NAMES.
               DECIMAL-POINT IS COMMA.
       DATA DIVISION.
      *==============
       WORKING-STORAGE SECTION.
      *------------------------
       COPY GNSWGSCR.
      *<<<< FIN_SCR_VARI
       COPY COLWGENG.
       COPY COLW1CAN.
       COPY GNSWGRQA REPLACING ==01  ADR-REQA== BY
                           ==02  SCR-CAN-REQA==.
      *>>>>
       COPY COLWICAN.
       COPY COLBRCAN.
       COPY GNSWGRQA.
       COPY GNSWGUIB.
       COPY GNSWGELS.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-CAN-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-TAB-REQA==.
       COPY GNSBRTAB.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-MSC-REQA==.
       COPY GNSBRMSC.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-MSG-REQA==.
       COPY GNSBRMSG.
       COPY GNSWCFIO.
       COPY GNSWVFIO.
       COPY GNSWGFRM.
       COPY GNSWVNUM.
       COPY GNSWCNUM.
       COPY GNSWGFEC.
       COPY GNSWGHOY.
       COPY GNSWCVRF.
       COPY GNSWVVRF.
       COPY GNSWGIDC.
       COPY GNSWGSYS.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-OFI-REQA==.
       COPY TABBROFI.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-USR-REQA==.
       COPY TABBRUSR.
      *<<<< WSS
       COPY COLBRTMC.
       COPY COLBRCYA.
       COPY COLBRICG.
       COPY COLBRITR.
       COPY COLBROPC.
      * RBG/INI/12-NOV-1996 
       COPY SGCBRDCE.
       COPY SGCBRDCP.
       COPY COLBRCOM.
      * RBG/FIN/12-NOV-1996 
       COPY COLBRDLC.
       COPY COLBRRCV.
       COPY COLBRROV.
       COPY COLBRRDT.
       COPY COLBRVEN.
       COPY COLBRVEN REPLACING ==VEN== BY ==VEN-BKP==.
       COPY COLBRCAN REPLACING ==CAN== BY ==CAN-BKP==.
       COPY COLBRRDC.
       COPY COLBRTOC.
       COPY SGCBRDBC.
       COPY SGCBRRCO.
       COPY SGCBROPE.
       COPY GNSWGCPT.
       COPY GNSWGCIC.
       COPY GNSBRCIC.
       COPY TABBRCAM.
       COPY TABBRVLR.
       COPY COLBRICC.
       COPY COLBRRCE.
      * ARCHIVO SAFE
       COPY COLBRCRS.
       COPY GNSWGBCD.
       COPY COLWGVEN.
       COPY GNSWGINT.
       COPY GNSWGCVI.
       COPY COLBREVC.
       COPY GNSBRERR.
       COPY GNSWGPES.
       COPY COLWGADO.
       COPY COLW2CAN.
      *ALDI
           03 WSS-GLS-DATI.
               05  FILLER                           PIC X(06).
               05  WSS-IND-CSAF                     PIC X(01).
               05  FILLER                           PIC X(03).
           03  WSS-SDLC.
               05 WSS-VAL-SDLC OCCURS 500          PIC S9(11)V9(04).
           03  WSS-VAL-OCRE                        PIC S9(11)V9(04).
           03  WSS-IND-RNOV                        PIC X(01).
           03  WSS-IND-SAFE                        PIC X(01).
           03  WSS-IND-CTCT                        PIC X(01).
           03  WSS-SGV-LIQU     COMP-3             PIC S9(11)V9(4).
           03  WSS-CAN-MSC-STAT                    PIC X(01).
      *     03  WSS-IND-CAJA                        PIC X(01).
           03  WSS-MAXV                            PIC 9(03).
           03  WSS-MINV                            PIC 9(03).
           03  WSS-MAXD                            PIC 9(03).
           03  WSS-MIND                            PIC 9(03).
           03  WSS-NUM-IDLC                        PIC 9(04).
           03  WSS-IDLC.
               05  WSS-VEC-IDLC OCCURS 500.
                   07  WSS-SGV-CAPD   COMP-3       PIC S9(11)V9(04).
                   07  WSS-SGV-FINA   COMP-3       PIC S9(11)V9(04).
           03  WSS-SGV-CAPT           COMP-3       PIC S9(11)V9(04).
           03  WSS-SGV-FINL           COMP-3       PIC S9(11)V9(04).
           03  WSS-NUM-VCVG                        PIC 9(03).
           03  WSS-NUM-VCCM                        PIC 9(03).
           03  WSS-NUM-VCCO                        PIC 9(03).
           03  WSS-NUM-VCCV                        PIC 9(03).
           03  WSS-I            VALUE ZEROES       PIC 9(03).
           03  WSS-IMAX         VALUE 50           PIC 9(03).
           03  WSS-IND-ALG      VALUE SPACES       PIC X(01).
      *REV
           03 REV-MSG.
              05 REV-MSG-MSG                       PIC X(40).
              05 REV-MSG-CAN                       PIC X(15).
           03 WSS-NUM-IEVC                         PIC 9(03).
      *    Valor Vencimientos ( Capital o Final )
           03  WSS-VAL-VENC             COMP-3     PIC 9(11)V9(04).
      *    Fecha Amortizacion
           03  WSS-FEC-FAMT.
               05  WSS-NUM-SAMT                    PIC 9(02).
               05  WSS-NUM-AAMT                    PIC 9(02).
               05  WSS-NUM-MAMT                    PIC 9(02).
               05  WSS-NUM-DAMT                    PIC 9(02).
      *
           03  WSS-IND-ADO      VALUE 'N'          PIC X(01).
      * RBG/INI/8-AUG-1996 Esta variable es usada solo de paso en COLBMCAN. 
           03  WSS-FEC-FPAS.
               05  WSS-NUM-DPAS   VALUE ZEROES      PIC 9(02).
               05  WSS-NUM-MPAS   VALUE ZEROES      PIC 9(02).
               05  WSS-NUM-SPAS   VALUE ZEROES      PIC 9(02).
               05  WSS-NUM-APAS   VALUE ZEROES      PIC 9(02).
      * RBG/FIN/8-AUG-1996   
      * RBG/INI/12-AUG-1996 
           03  WSS-FEC-FTOP.
               05  WSS-NUM-STOP   VALUE ZEROES      PIC 9(02).
               05  WSS-NUM-ATOP   VALUE ZEROES      PIC 9(02).
               05  WSS-NUM-MTOP   VALUE ZEROES      PIC 9(02).
               05  WSS-NUM-DTOP   VALUE ZEROES      PIC 9(02).
           03  WSS-NUM-1HBL       VALUE ZEROES      PIC 9(02).
           03  WSS-IND-FERI                         PIC X(01).
      * RBG/FIN/12-AUG-1996 
           03  WSS-MSC-CACC                         PIC X(08).
      * RBG/INI/18-NOV-1996 Variables para el cobro de Comision.
           03  WSS-GLS-DATA.
               05 WSS-GLS-DIAS                      PIC X(03).
               05  WSS-NUM-DIAS REDEFINES            
                   WSS-GLS-DIAS                     PIC 9(03).
               05 WSS-COD-MONE                      PIC X(06).
               05 WSS-GLS-MOUF                      PIC X(07).
               05  WSS-VAL-MOUF REDEFINES            
                   WSS-GLS-MOUF                     PIC 9(03)V9(04).
               05 WSS-GLS-TOPE                      PIC X(03).
               05  WSS-NUM-TOPE REDEFINES            
                   WSS-GLS-TOPE                     PIC 9(03).
           03  WSS-GLS-DAT3       VALUE SPACES      PIC X(60).
           03  WSS-TBAN REDEFINES
                   WSS-GLS-DAT3 OCCURS 20           PIC X(03).
           03  MOV-I                                PIC 9(02).
           03  WSS-COD-BANC                         PIC X(03).
           03  WSS-IND-MORA                         PIC X(01).
           03  WSS-IND-EBAN                         PIC X(01).
           03  WSS-IND-EXIS                         PIC X(01).
           03  WSS-SGV-VCAM                         PIC S9(11)V9(04).
           03  WSS-GLS-DAT2.
               05 WSS-GLS-PIVA                      PIC X(10).
               05 WSS-NUM-PIVA   REDEFINES
                  WSS-GLS-PIVA                      PIC  9(06)V9(04).
           03  WSS-VAL-IVA   COMP-3  VALUE ZEROES   PIC  9(02)V9(04).
           03  WSS-SGV-TCOM  COMP-3  VALUE ZEROES   PIC S9(11)V9(05).
           03  WSS-SGV-NETO  COMP-3  VALUE ZEROES   PIC S9(11)V9(04).
           03  WSS-SGV-MIVA  COMP-3  VALUE ZEROES   PIC S9(09)V9(04).
           03  WSS-SGV-DELT  COMP-3  VALUE ZEROES   PIC S9(09)V9(04).
           03  WSS-NUM-TOP1                         PIC  9(03).
      * RBG/FIN/18-NOV-1996 Variables para el cobro de Comision.
      *>>>>
      *<<<< WSS_DTC
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-CYA-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-ICG-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-ITR-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-OPC-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-DLC-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-RCV-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-ROV-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-RDT-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-VEN-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-DBC-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-RDC-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-RCO-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-OPE-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-CIC-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-TOC-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-CAM-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-VLR-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-RCE-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-EVC-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-ERR-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-AUX-REQA==.
      * RBG/INI/12-NOV-1996
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-DCE-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-DCP-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-COM-REQA==.
      * RBG/FIN/12-NOV-1996  
      *>>>>
       01  PGM-VARI.
           03 PGM-ICLR                  VALUE ' '       PIC X(01).
           03 PGM-LIMPIAR-TODO          VALUE ' '       PIC X(01).
           03 PGM-LIMPIAR-LLAVES        VALUE 'K'       PIC X(01).
           03 PGM-LIMPIAR-CAMPOS        VALUE 'F'       PIC X(01).
           03 PGM-NO-LIMPIAR-NADA       VALUE 'N'       PIC X(01).
           03 PGM-STAT.
              05 PGM-STAT-OPC           VALUE '23'      PIC X(02).
                 88 PGM-STAT-OPC-OKS    VALUE '00'.
                 88 PGM-STAT-OPC-NUL    VALUE '  '.
              05 PGM-STAT-CAN           VALUE '23'      PIC X(02).
                 88 PGM-STAT-CAN-OKS    VALUE '00'.
                 88 PGM-STAT-CAN-NUL    VALUE '  '.
              05 PGM-STAT-DBC           VALUE '23'      PIC X(02).
                 88 PGM-STAT-DBC-OKS    VALUE '00'.
                 88 PGM-STAT-DBC-NUL    VALUE '  '.
              05 PGM-STAT-ROV           VALUE '23'      PIC X(02).
                 88 PGM-STAT-ROV-OKS    VALUE '00'.
                 88 PGM-STAT-ROV-NUL    VALUE '  '.
              05 PGM-STAT-VEN           VALUE '23'      PIC X(02).
                 88 PGM-STAT-VEN-OKS    VALUE '00'.
                 88 PGM-STAT-VEN-NUL    VALUE '  '.
              05 PGM-STAT-ITR           VALUE '23'      PIC X(02).
                 88 PGM-STAT-ITR-OKS    VALUE '00'.
                 88 PGM-STAT-ITR-NUL    VALUE '  '.
              05 PGM-STAT-ICG           VALUE '23'      PIC X(02).
                 88 PGM-STAT-ICG-OKS    VALUE '00'.
                 88 PGM-STAT-ICG-NUL    VALUE '  '.
              05 PGM-STAT-CYA           VALUE '23'      PIC X(02).
                 88 PGM-STAT-CYA-OKS    VALUE '00'.
                 88 PGM-STAT-CYA-NUL    VALUE '  '.
              05 PGM-STAT-RCV           VALUE '23'      PIC X(02).
                 88 PGM-STAT-RCV-OKS    VALUE '00'.
                 88 PGM-STAT-RCV-NUL    VALUE '  '.
           03 PGM-SRNF                  VALUE '23'      PIC X(02).
           03 PGM-SOKS                  VALUE '00'      PIC X(02).
           03 PGM-SNUL                  VALUE '  '      PIC X(02).
           03 PGM-SUAR                  VALUE SPACES    PIC X(02).
              88 PGM-STRO               VALUE 'TO'.
              88 PGM-SCNC               VALUE 'CC'.
       LINKAGE SECTION.
      *----------------
       01  DFHCOMMAREA.
      *<<<< CMA
           02 FILLER                      PIC X(3000).
      *>>>>
       COPY GNSLGFIO.
       PROCEDURE DIVISION.
      *===================
       MAIN SECTION.
       INI-MAIN.
           PERFORM INI.
       LUP-MAIN.
           IF SCR-INST = SCR-INST-HCM
                 PERFORM SCR-COM.
           IF SCR-CCPP = 'MOD'
                 PERFORM SCR-MOD
           ELSE
           IF SCR-CCPP = 'ING'
                 PERFORM SCR-ING
           ELSE
           IF SCR-CCPP = 'ACC'
                 PERFORM SCR-ACC
           ELSE
           IF SCR-CCPP = 'ELI'
                 PERFORM SCR-ELI
           ELSE
           IF SCR-CCPP = 'ACT'
                 PERFORM SCR-ACT
           ELSE
           IF SCR-CCPP = 'PGM'
                 PERFORM SCR-PGM
           ELSE
                 MOVE SCR-INST-HCM TO SCR-INST.
           GO TO LUP-MAIN.
       FIN-MAIN.
           EXIT.
       INI SECTION.
       INI-INI.
       COPY GNSBGEIB.
       COPY GNSBGEDB.
       COPY GNSBGCMA.
           MOVE 'COLPOCAN' TO FIO-PROG.
      *<<<< INI_FIO_IBM
           IF EIBCALEN = ADO-TCMA
               MOVE DFHCOMMAREA TO ADO-CMMA
               PERFORM GET-STAT-ADO
      *OJO
               PERFORM ADO-CAN
               MOVE ADO-CMMA TO DFHCOMMAREA
               GOBACK.
      *>>>>
      *<<<< INI_FIO
           MOVE +3000 TO SCR-TCMA.
           IF SCR-DESDE-CMN
               MOVE SPACES TO SCR-COD-TICG
                              SCR-COD-TITR
                              SCR-COD-VCOC
                              SCR-CYA-IND-MCYA
                              SCR-CYA-IND-PAUT
                              SCR-CYA-IND-CAJA.
      *>>>>
       FIN-INI.
           EXIT.
       SCR-COM SECTION.
       INI-SCR-COM.
           MOVE FRM-CPSF-AEY TO FRM-CPIM-AEY.
           PERFORM PRO-ALL.
           PERFORM SCR-CLRA-CAN.
           PERFORM EDT-KEY-CAN.
           PERFORM EDT-FLD-CAN.
           PERFORM SCR-PUTA.
           MOVE SCR-INST-HCM TO SCR-INST.
           MOVE SCR-CMNP     TO FRM-PROG.
           MOVE SCR-VARI     TO FRM-CMMA.
           MOVE SCR-TCMA     TO FRM-TCMA.
           MOVE FRM-XCT      TO FRM-CMND.
           PERFORM GNS-PRO-FRM.
       XCT-ERR.
           MOVE 'XCTERR    ' TO MSG-COD-MENS.
           MOVE 'GNS'        TO MSG-COD-SIST.
           PERFORM GET-MSG.
           MOVE MSG-GLS-DESC TO FRM-MEN1.
           MOVE FRM-PROG     TO FRM-MEN2.
           MOVE FRM-ABT      TO FRM-CMND.
           PERFORM GNS-PRO-FRM.
       COPY GNSBGGBK.
       FIN-SCR-COM.
           EXIT.
       SCR-MOD SECTION.
       INI-SCR-MOD.
           IF SCR-INST = SCR-INST-HKY
               MOVE SCR-INST-GKY TO SCR-INST
               PERFORM HBL-KEY
               PERFORM SCR-DMSG
           ELSE
           IF SCR-INST = SCR-INST-GKY
                PERFORM SCR-KEY
                IF SCR-STAT NOT = SCR-STAT-ABT
                        PERFORM SCR-TRL
                ELSE
                        PERFORM DESSCRTRL
                        GO TO FIN-SCR-MOD
           ELSE
           IF SCR-INST = SCR-INST-GFL
                PERFORM GET-FLD
           ELSE
           IF SCR-INST = SCR-INST-GCS
                PERFORM GET-ACC
           ELSE
           IF SCR-INST = SCR-INST-GAB
                PERFORM GET-CON.
           PERFORM DESSCRTRL.
       MSG-SCR-MOD.
           IF SCR-STAT = SCR-STAT-CON
               MOVE SPACES TO FRM-MENS
           ELSE
           IF SCR-STAT = SCR-STAT-ABT OR SCR-VFLD = SCR-VFLD-NOT
               MOVE 'MODNOT    ' TO MSG-COD-MENS
               MOVE 'GNS' TO MSG-COD-SIST
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS
           ELSE
               MOVE SPACES TO FRM-MENS
               PERFORM CMN-MOD
               IF FIO-STAT-OKS
                   IF FRM-MENS NOT > SPACES
                       MOVE 'MODYES    ' TO MSG-COD-MENS
                       MOVE 'GNS' TO MSG-COD-SIST
                       PERFORM GET-MSG
                       MOVE MSG-GLS-DESC TO FRM-MENS
                   ELSE
                       NEXT SENTENCE
               ELSE
               IF FRM-MENS NOT > SPACES
                   MOVE 'FIOSTAT' TO MSG-COD-TMSG
                   MOVE FIO-STAT  TO MSG-COD-CMSG
                   MOVE 'GNS'     TO MSG-COD-SIST
                   PERFORM GET-MSG
                   MOVE MSG-GLS-DESC TO FRM-MENS.
           PERFORM SCR-MSSG.
       FIN-SCR-MOD.
           EXIT.
       SCR-ING SECTION.
       INI-SCR-ING.
           IF SCR-INST = SCR-INST-HKY
               MOVE SCR-INST-GKY TO SCR-INST
               PERFORM HBL-IKY
               PERFORM SCR-DMSG
           ELSE
           IF SCR-INST = SCR-INST-GKY
                PERFORM SCR-RST
                PERFORM GET-IKY
                IF NOT FRM-STAT-ABT
                        MOVE SPACES TO FRM-MENS
                        PERFORM FND-KEY
                        IF NOT FIO-STAT-OKS AND
                           FIO-STAT NOT = FIO-STAT-NEX
      *JSS                  PERFORM CLR-FLD-CAN
                            MOVE PGM-LIMPIAR-TODO TO PGM-ICLR
                            PERFORM SCR-TRL
                        ELSE
                        MOVE PGM-LIMPIAR-CAMPOS TO PGM-ICLR
                        IF FRM-MENS NOT > SPACES
                            MOVE 'REGEXI    ' TO MSG-COD-MENS
                            MOVE 'GNS' TO MSG-COD-SIST
                            PERFORM GET-MSG
                            MOVE MSG-GLS-DESC TO FRM-MENS
                            PERFORM SCR-MSSG
                            MOVE SCR-STAT-ABT TO SCR-STAT
                            PERFORM DESSCRTRL
                            GO TO FIN-SCR-ING
                        ELSE
                            PERFORM SCR-MSSG
                            MOVE SCR-STAT-ABT TO SCR-STAT
                            PERFORM DESSCRTRL
                            GO TO FIN-SCR-ING
                ELSE
                        MOVE SPACES TO FRM-MENS
                        PERFORM SCR-MSSG
                        PERFORM DESSCRTRL
                        GO TO FIN-SCR-ING
           ELSE
           IF SCR-INST = SCR-INST-GFL
                PERFORM GET-FLD
           ELSE
           IF SCR-INST = SCR-INST-GCS
                PERFORM GET-ACC
           ELSE
           IF SCR-INST = SCR-INST-GAB
                PERFORM GET-CON.
           PERFORM DESSCRTRL.
       MSG-SCR-ING.
           IF SCR-STAT = SCR-STAT-CON
               MOVE SPACES TO FRM-MENS
           ELSE
           IF SCR-STAT = SCR-STAT-ABT OR SCR-VFLD = SCR-VFLD-NOT
               MOVE 'INGNOT    ' TO MSG-COD-MENS
               MOVE 'GNS' TO MSG-COD-SIST
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS
           ELSE
               MOVE SPACES TO FRM-MENS
               PERFORM CMN-ING
               IF FIO-STAT-OKS
                   IF FRM-MENS NOT > SPACES
                       MOVE 'INGYES    ' TO MSG-COD-MENS
                       MOVE 'GNS' TO MSG-COD-SIST
                       PERFORM GET-MSG
                       MOVE MSG-GLS-DESC TO FRM-MENS
                   ELSE
                       NEXT SENTENCE
               ELSE
               IF FRM-MENS NOT > SPACES
                   MOVE 'FIOSTAT' TO MSG-COD-TMSG
                   MOVE FIO-STAT  TO MSG-COD-CMSG
                   MOVE 'GNS'     TO MSG-COD-SIST
                   PERFORM GET-MSG
                   MOVE MSG-GLS-DESC TO FRM-MENS.
           PERFORM SCR-MSSG.
       FIN-SCR-ING.
           EXIT.
       SCR-ACC SECTION.
       INI-SCR-ACC.
           IF SCR-INST = SCR-INST-HKY
               MOVE SCR-INST-GKY TO SCR-INST
               PERFORM HBL-KEY
               PERFORM SCR-DMSG
           ELSE
           IF SCR-INST = SCR-INST-GKY
                PERFORM SCR-KEY
                IF SCR-STAT NOT = SCR-STAT-ABT
                        PERFORM SCR-TRL
                ELSE
                        PERFORM DESSCRTRL
                        GO TO FIN-SCR-ACC
           ELSE
           IF SCR-INST = SCR-INST-GFL
                PERFORM GET-FLD
           ELSE
           IF SCR-INST = SCR-INST-GCS
                PERFORM GET-ACC
           ELSE
           IF SCR-INST = SCR-INST-GAB
                PERFORM GET-CON.
           PERFORM DESSCRTRL.
           MOVE SPACES TO FRM-MENS.
           IF SCR-STAT NOT = SCR-STAT-CON
               PERFORM CMN-ACC.
           PERFORM SCR-MSSG.
       FIN-SCR-ACC.
           EXIT.
       SCR-ELI SECTION.
       INI-SCR-ELI.
           IF SCR-INST = SCR-INST-HKY
               MOVE SCR-INST-GKY TO SCR-INST
               PERFORM HBL-KEY
               PERFORM SCR-DMSG
           ELSE
           IF SCR-INST = SCR-INST-GKY
                PERFORM SCR-KEY
                IF SCR-STAT NOT = SCR-STAT-ABT
                        PERFORM SCR-TRL
                ELSE
                        PERFORM DESSCRTRL
                        GO TO FIN-SCR-ELI
           ELSE
           IF SCR-INST = SCR-INST-GCS
                PERFORM GET-ACC
           ELSE
           IF SCR-INST = SCR-INST-GAB
                PERFORM GET-CON.
           PERFORM DESSCRTRL.
           IF SCR-STAT = SCR-STAT-CON
               MOVE SPACES TO FRM-MENS
           ELSE
           IF SCR-STAT = SCR-STAT-ABT OR SCR-VFLD = SCR-VFLD-NOT
               MOVE 'ELINOT    ' TO MSG-COD-MENS
               MOVE 'GNS' TO MSG-COD-SIST
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS
           ELSE
               MOVE SPACES TO FRM-MENS
               PERFORM CMN-ELI
               IF FIO-STAT-OKS
                   IF FRM-MENS NOT > SPACES
                       MOVE 'ELIYES    ' TO MSG-COD-MENS
                       MOVE 'GNS' TO MSG-COD-SIST
                       PERFORM GET-MSG
                       MOVE MSG-GLS-DESC TO FRM-MENS
                   ELSE
                       NEXT SENTENCE
               ELSE
               IF FRM-MENS NOT > SPACES
                   MOVE 'FIOSTAT' TO MSG-COD-TMSG
                   MOVE FIO-STAT  TO MSG-COD-CMSG
                   MOVE 'GNS'     TO MSG-COD-SIST
                   PERFORM GET-MSG
                   MOVE MSG-GLS-DESC TO FRM-MENS.
           PERFORM SCR-MSSG.
       FIN-SCR-ELI.
           EXIT.
       SCR-ACT SECTION.
       INI-SCR-ACT.
           IF SCR-INST = SCR-INST-HKY
               MOVE SCR-INST-GKY TO SCR-INST
               PERFORM HBL-KEY
               PERFORM SCR-DMSG
           ELSE
           IF SCR-INST = SCR-INST-GKY
                PERFORM SCR-RST
                PERFORM GET-KEY
                IF NOT FRM-STAT-ABT
                        MOVE SPACES TO FRM-MENS
                        PERFORM FND-KEY
                        IF FIO-STAT-OKS
                            MOVE SCR-ACTU-MOD TO SCR-ACTU
                            PERFORM PUT-SCR
                            MOVE PGM-LIMPIAR-TODO TO PGM-ICLR
                            PERFORM SCR-TRL
                        ELSE
                        MOVE PGM-LIMPIAR-CAMPOS TO PGM-ICLR
                        IF FIO-STAT-EOF
                            IF FRM-MENS NOT > SPACES
                                MOVE 'REGEOF    ' TO MSG-COD-MENS
                                MOVE 'GNS' TO MSG-COD-SIST
                                PERFORM GET-MSG
                                MOVE MSG-GLS-DESC TO FRM-MENS
                                PERFORM SCR-MSSG
                                MOVE SCR-STAT-ABT TO SCR-STAT
                                PERFORM DESSCRTRL
                                GO TO FIN-SCR-ACT
                            ELSE
                                PERFORM SCR-MSSG
                                MOVE SCR-STAT-ABT TO SCR-STAT
                                PERFORM DESSCRTRL
                                GO TO FIN-SCR-ACT
                        ELSE
                        IF FIO-STAT = FIO-STAT-NEX
                            IF FRM-MENS NOT > SPACES
                                MOVE 'REGNEX    ' TO MSG-COD-MENS
                                MOVE 'GNS' TO MSG-COD-SIST
                                PERFORM GET-MSG
                                MOVE MSG-GLS-DESC TO FRM-MENS
                                PERFORM SCR-MSSG
                                MOVE SCR-STAT-ABT TO SCR-STAT
                                PERFORM DESSCRTRL
                                GO TO FIN-SCR-ACT
                            ELSE
                                PERFORM SCR-MSSG
                                MOVE SCR-STAT-ABT TO SCR-STAT
                                PERFORM DESSCRTRL
                                GO TO FIN-SCR-ACT
                        ELSE
                            MOVE SCR-ACTU-ING TO SCR-ACTU
      *JSS                  PERFORM CLR-FLD-CAN
                            MOVE PGM-LIMPIAR-TODO TO PGM-ICLR
                            PERFORM SCR-TRL
                ELSE
                        MOVE SPACES TO FRM-MENS
                        PERFORM SCR-MSSG
                        PERFORM DESSCRTRL
                        GO TO FIN-SCR-ACT
           ELSE
           IF SCR-INST = SCR-INST-GFL
                PERFORM GET-FLD
           ELSE
           IF SCR-INST = SCR-INST-GCS
                PERFORM GET-ACC
           ELSE
           IF SCR-INST = SCR-INST-GAB
                PERFORM GET-CON.
           PERFORM DESSCRTRL.
           IF SCR-ACTU = SCR-ACTU-MOD
                  PERFORM MSG-SCR-MOD
           ELSE
                  PERFORM MSG-SCR-ING.
       FIN-SCR-ACT.
           EXIT.
       SCR-PGM SECTION.
       INI-SCR-PGM.
           IF SCR-INST = SCR-INST-HKY
               MOVE SCR-INST-GKY TO SCR-INST
               PERFORM HBL-KEY
               PERFORM SCR-DMSG
           ELSE
           IF SCR-INST = SCR-INST-GKY
                PERFORM SCR-RST
                PERFORM GET-KEY
                IF FRM-STAT-ABT
                        MOVE SPACES TO FRM-MENS
                        PERFORM SCR-MSSG
                        PERFORM DESSCRTRL
                        GO TO FIN-SCR-PGM.
           MOVE SPACES TO FRM-MENS.
           PERFORM FND-KEY.
      *JSS IF NOT FIO-STAT-OKS
      *        PERFORM CLR-FLD-CAN.
           IF FIO-STAT = FIO-STAT-NEX
               IF FRM-MENS NOT > SPACES
                   MOVE 'REGNEX    ' TO MSG-COD-MENS
                   MOVE 'GNS' TO MSG-COD-SIST
                   PERFORM GET-MSG
                   MOVE MSG-GLS-DESC TO FRM-MENS
                   PERFORM SCR-MSSG
                   MOVE SCR-STAT-ABT TO SCR-STAT
                   PERFORM DESSCRTRL
                   GO TO FIN-SCR-PGM
               ELSE
                   PERFORM SCR-MSSG
                   MOVE SCR-STAT-ABT TO SCR-STAT
                   PERFORM DESSCRTRL
                   GO TO FIN-SCR-PGM.
       TRL-SCR-PGM.
           PERFORM DESSCRTRL.
           MOVE SPACES TO FRM-MENS.
           IF SCR-STAT NOT = SCR-STAT-CON
               PERFORM CMN-PGM.
           PERFORM SCR-MSSG.
       FIN-SCR-PGM.
           EXIT.
       SCR-DMSG SECTION.
       INI-SCR-DMSG.
           IF PGM-ICLR = PGM-NO-LIMPIAR-NADA
               NEXT SENTENCE
           ELSE
           IF PGM-ICLR = PGM-LIMPIAR-TODO
               PERFORM SCR-CLRA-CAN
               PERFORM EDT-KEY-CAN
               PERFORM EDT-FLD-CAN
           ELSE
           IF PGM-ICLR = PGM-LIMPIAR-LLAVES
               PERFORM CLR-KEY-CAN
               PERFORM EDT-KEY-CAN
           ELSE
               PERFORM CLR-FLD-CAN
               PERFORM EDT-FLD-CAN.
           PERFORM SCR-PUTA.
           PERFORM SCR-EXIT.
       FIN-SCR-DMSG.
           EXIT.
       SCR-KEY SECTION.
       INI-SCR-KEY.
           PERFORM SCR-RST.
           PERFORM GET-KEY.
           IF FRM-STAT-ABT
                   MOVE SPACES TO FRM-MENS
                   PERFORM SCR-MSSG
                   GO TO FIN-SCR-KEY.
       FND-SCR-KEY.
           MOVE SPACES TO FRM-MENS.
           PERFORM FND-KEY.
           IF FIO-STAT-OKS
               PERFORM PUT-SCR
               MOVE PGM-LIMPIAR-TODO TO PGM-ICLR
               GO TO FIN-SCR-KEY.
      *JSS ELSE
      *        PERFORM CLR-FLD-CAN.
       ERR-SCR-KEY.
           MOVE PGM-LIMPIAR-CAMPOS TO PGM-ICLR.
           IF FRM-MENS NOT > SPACES
               IF FIO-STAT-EOF
                   MOVE 'REGEOF    ' TO MSG-COD-MENS
                   MOVE 'GNS' TO MSG-COD-SIST
                   PERFORM GET-MSG
                   MOVE MSG-GLS-DESC TO FRM-MENS
               ELSE
               IF FIO-STAT = FIO-STAT-NEX
                   MOVE 'REGNEX    ' TO MSG-COD-MENS
                   MOVE 'GNS' TO MSG-COD-SIST
                   PERFORM GET-MSG
                   MOVE MSG-GLS-DESC TO FRM-MENS
               ELSE
                   MOVE 'FIOSTAT' TO MSG-COD-TMSG
                   MOVE FIO-STAT  TO MSG-COD-CMSG
                   MOVE 'GNS'     TO MSG-COD-SIST
                   PERFORM GET-MSG
                   MOVE MSG-GLS-DESC TO FRM-MENS.
           PERFORM SCR-MSSG.
           MOVE SCR-STAT-ABT TO SCR-STAT.
       FIN-SCR-KEY.
           EXIT.
       SCR-RST SECTION.
       INI-SCR-RST.
           MOVE SPACES       TO PGM-ICLR.
           MOVE SPACES       TO SCR-ACTU.
           MOVE SCR-STPP     TO SCR-STAT.
           MOVE SCR-MFLD-NOT TO SCR-MFLD.
           MOVE LOW-VALUES   TO CAN-FLD.
       FIN-SCR-RST.
           EXIT.
       GET-KEY SECTION.
       INI-GET-KEY.
           PERFORM SCR-GKEY.
           IF FRM-STAT-ABT
               MOVE SCR-STAT-ABT TO SCR-STAT.
       FIN-GET-KEY.
           EXIT.
       GET-IKY SECTION.
       INI-GET-IKY.
           PERFORM SCR-GIKY.
           IF FRM-STAT-ABT
               MOVE SCR-STAT-ABT TO SCR-STAT.
       FIN-GET-IKY.
           EXIT.
       FND-KEY SECTION.
       INI-FND-KEY.
           PERFORM KEY-ALL-CAN.
      *<<<< FND_KEY
       COPY COLB1CAN.
      *>>>>
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM COL-FIO-CAN.
           MOVE FIO-STAT TO PGM-STAT-CAN.
      *<<<< FIN_FND_KEY
       COPY COLB2CAN.
           IF SCR-CMND = 'REV'
               GO TO FND-KEY-REV.
           PERFORM GET-FEC-FCVC.
           IF PGM-STAT-CAN-OKS
               IF SCR-CMND = 'CAN' AND
                   CAN-FEC-FOUT IN CAN NOT = CAN-FEC-FCAN IN CAN
                   MOVE 'COL' TO MSG-COD-SIST
                   MOVE 'FECFCANNFOUT' TO MSG-COD-MENS
                   PERFORM GET-MSG
      *             STRING MSG-GLS-DESC
      *                MSG-GLS-DATA DELIMITED BY SIZE
      *             INTO FRM-MENS
                   MOVE MSG-GLS-DESC TO CPT-STR1
                   MOVE MSG-GLS-DATA TO CPT-STR2
                   PERFORM CPT-BLKS
                   MOVE CPT-STRN     TO FRM-MENS
                   MOVE '00' TO FIO-STAT
                   MOVE SCR-STAT-CON TO SCR-STAT
                   GO TO FIN-FND-KEY
               ELSE
               IF SCR-CMND = 'CVC'
                   IF SCR-CYA-IND-PAUT = 'S'
                       MOVE 'COL' TO MSG-COD-SIST
                       MOVE 'TCYAAUTNOCVC' TO MSG-COD-MENS
                       PERFORM GET-MSG
      *                 STRING MSG-GLS-DESC
      *                 MSG-GLS-DATA DELIMITED BY SIZE
      *                   INTO FRM-MENS
                       MOVE MSG-GLS-DESC TO CPT-STR1
                       MOVE MSG-GLS-DATA TO CPT-STR2
                       PERFORM CPT-BLKS
                       MOVE CPT-STRN     TO FRM-MENS
                       MOVE '00' TO FIO-STAT
                       MOVE SCR-STAT-CON TO SCR-STAT
                       GO TO FIN-FND-KEY.
      *     PERFORM VRF-CAJA.
      *     IF WSS-IND-CAJA = 'S'
           PERFORM REL-COL-SAF.
           IF MSG-COD-MENS > SPACES
               MOVE '00' TO FIO-STAT
               MOVE SCR-STAT-CON TO SCR-STAT
               GO TO FIN-FND-KEY.
       FND-KEY-REV.
           MOVE PGM-STAT-CAN TO FIO-STAT.
      *>>>>
       FIN-FND-KEY.
           EXIT.
       PUT-SCR SECTION.
       INI-PUT-SCR.
           PERFORM PUT-ALL-CAN.
       FIN-PUT-SCR.
           EXIT.
       GET-FLD SECTION.
       INI-GET-FLD.
           PERFORM SCR-GFLD.
           IF FRM-STAT-ABT
               MOVE SCR-STAT-ABT TO SCR-STAT.
       FIN-GET-FLD.
           EXIT.
       CMN-MOD SECTION.
       INI-CMN-MOD.
           PERFORM KEY-ALL-CAN.
           MOVE FIO-GET-KEY-UPD TO FIO-CMND.
           PERFORM COL-FIO-CAN.
           IF NOT FIO-STAT-OKS
               GO TO FIN-CMN-MOD.
           PERFORM RET-ALL-CAN.
           MOVE FIO-MOD TO FIO-CMND.
           PERFORM COL-FIO-CAN.
       FIN-CMN-MOD.
           EXIT.
       CMN-ING SECTION.
       INI-CMN-ING.
           PERFORM RET-ALL-CAN.
           MOVE FIO-PUT TO FIO-CMND.
           PERFORM COL-FIO-CAN.
       FIN-CMN-ING.
           EXIT.
       CMN-ACC SECTION.
       INI-CMN-ACC.
           IF SCR-STAT = SCR-STAT-ABT OR SCR-VFLD = SCR-VFLD-NOT
               MOVE 'ACCION NO REALIZADA' TO FRM-MENS
               GO TO FIN-CMN-ACC.
      *<<<< INI_CMN_ACC
           IF SCR-CMND NOT = 'CAN' AND
              SCR-CMND NOT = 'CVC' AND
              SCR-CMND NOT = 'REV'
               MOVE 'GNS' TO MSG-COD-SIST
               MOVE 'CMDINV' TO MSG-COD-MENS
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS
               GO TO FIN-CMN-ACC.
           MOVE SPACES TO REV-MSG.
      *>>>>
           PERFORM KEY-ALL-CAN.
           MOVE FIO-GET-KEY-UPD TO FIO-CMND.
           PERFORM COL-FIO-CAN.
           IF NOT FIO-STAT-OKS
               GO TO FIN-CMN-ACC.
      *<<<< CMN_ACC_RET
           PERFORM GET-FHOY.
           MOVE 'N' TO WSS-IND-RNOA.
           IF SCR-CMND = 'REV'
               MOVE 'S' TO WSS-IND-RNOA
               PERFORM BUS-IND-SFCR
               IF MSG-COD-MENS > SPACES
      *JSS
                   IF MSG-COD-MENS = 'CAN    REVOK'
      *EL MSG-COD-MENS = 'CAN    REVOK' PARA REVERSAS CON CTT, POR ESO
      *ES POSIBLE QUE NO EXISTA RCV, ASI QUE NO IMPORTA COMO SALGA
      *SET-STTR-RCV
                       PERFORM SET-STTR-RCV
                       GO TO FIN-CMN-ACC
                   ELSE
      *
                   GO TO FIN-CMN-ACC.
      *ISP ACCESA OPC, PARA QUE GET-CUR-CYA Y GET-NXT-CYA SIGAN
      *    OPERANDO CON CAMPOS DE OPC, AL IGUAL QUE COLPOOPC
           PERFORM GET-OPC.
           IF WSS-IND-ADO = 'S'
               PERFORM FND-KEY-CYA.
           IF SCR-MSC-TCAN = 'C'
      *ISP VERIFICA SI HAY AL MENOS UN CODIGO DE CARGO 'CAJA'
      *         PERFORM VRF-CAJA
               IF SCR-CYA-IND-CAJA = 'S' AND
                  ADO-IND-ORIG NOT = 'S'
                   MOVE 'S' TO WSS-CAN-MSC-STAT
               ELSE
                   MOVE 'A' TO WSS-CAN-MSC-STAT
           ELSE
               IF WSS-IND-ADO = 'S'
                   IF CAN-MSC-STAT IN CAN = 'W'
                       IF ADO-IND-ORIG = 'S'
                            MOVE 'C' TO WSS-CAN-MSC-STAT
                       ELSE
                            MOVE 'S' TO WSS-CAN-MSC-STAT
                   ELSE
                       MOVE 'A' TO WSS-CAN-MSC-STAT
               ELSE
                   MOVE 'C' TO WSS-CAN-MSC-STAT
      *             PERFORM VRF-CAJA
                   IF SCR-CYA-IND-CAJA = 'S'
                       MOVE 'W' TO WSS-CAN-MSC-STAT.
           IF ADO-IND-ORIG = 'S'
                PERFORM CRG-AUTO
           ELSE
           IF ADO-IND-ORIG = SPACES AND
              ( WSS-CAN-MSC-STAT = 'C' OR 'A' )
                PERFORM CRG-AUTO.
      *
      *          IF MSG-COD-MENS > SPACES
      *              GO TO FIN-CMN-ACC
      *          ELSE
      *              NEXT SENTENCE
      *     ELSE
      *ISP SI HAY CODIGOS CARGO 'CAJA' HACE CARGOS AUTOMATICOS
      *    BUSCA LA RELACION ENTRE CLAVES DE 'COL' Y CLAVES 'SAFE'.
      *    EN CASO DE RESULTAR EXITOSO, MODIFICA ARCHIVO SAFE.
      *    ESTO LO HACE SOLO PARA ACTIVACIONES INTERNAS DE ESTE PROGRAMA
      *    NO POR INGRESO DE OPERACIONES NI RESPUESTAS DEL SAFE
      *     IF WSS-CAN-MSC-STAT = 'S' OR 'W' AND
            IF WSS-IND-ADO NOT = 'S' AND
               ADO-IND-ORIG NOT = 'O'
                PERFORM REL-COL-SAF
                IF MSG-COD-MENS > SPACES
                    GO TO FIN-CMN-ACC
                ELSE
                    PERFORM FIJ-SAFE
                    IF MSG-COD-MENS > SPACES
                        GO TO FIN-CMN-ACC.
      *     IF WSS-IND-ADO = 'S' AND
      *        ADO-IND-ORIG = 'O'
      *         PERFORM REL-COL-SAF
      *         IF MSG-COD-MENS > SPACES
      *             GO TO FIN-CMN-ACC
      *         ELSE
      *             MOVE FIO-GET-KEY-UPD TO FIO-CMND
      *             PERFORM COL-FIO-CRS
      *             PERFORM MOVE-SAFE-1
      *             MOVE FIO-MOD TO FIO-CMND
      *             PERFORM COL-FIO-CRS.
      *ISP NO HACE EL RET-ALL DEL ESQUELETO, PUES EN REVERSAS SE PISA
      *    LOS CAMPOS DE CAN YA SETEADOS CON SIGNOS INVERTIDOS CON LOS
      *    VALORES DE LA PANTALLA
           MOVE CAN-NUM-SOUT IN CAN-FLD TO CAN-NUM-SOUT IN CAN.
           MOVE CAN-NUM-AOUT IN CAN-FLD TO CAN-NUM-AOUT IN CAN.
           MOVE CAN-NUM-MOUT IN CAN-FLD TO CAN-NUM-MOUT IN CAN.
           MOVE CAN-NUM-DOUT IN CAN-FLD TO CAN-NUM-DOUT IN CAN.
           GO TO NOT-RET-ALL.
      *>>>>
           PERFORM RET-ALL-CAN.
      *<<<< CMN_ACC
       NOT-RET-ALL.
           IF NOT ( SCR-MSC-TCAN = 'C' OR
                    WSS-IND-ADO  = 'S' )
               GO TO CON-ACA.
           PERFORM INI-CAN.
           IF WSS-CAN-MSC-STAT = 'A'
               IF CAN-MSC-FCAN IN CAN = 'T' AND
                  CAN-MSC-ECAN IN CAN = 'T'
                  PERFORM TOT-CUO
               ELSE
                  PERFORM PRO-RCV.
           IF MSG-COD-MENS > SPACES
               MOVE 'COL' TO MSG-COD-SIST
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MEN1
               PERFORM BCK-OUT
               GO TO FIN-CMN-ACC.
       CON-ACA.
      *JSS
           PERFORM SET-STTR-RCV.
           IF MSG-COD-MENS > SPACES
               MOVE 'COL' TO MSG-COD-SIST
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC        TO FRM-MEN1
               MOVE RCV-KEY-IRCV IN RCV TO FRM-MEN2
               PERFORM BCK-OUT
               GO TO FIN-CMN-ACC.
      *
           MOVE WSS-CAN-MSC-STAT TO CAN-MSC-STAT IN CAN.
           IF WSS-IND-RNOA = 'S'
               MOVE 'A' TO CAN-MSC-STAT IN CAN.
           PERFORM PUT-FHOY.
           MOVE FIO-MOD TO FIO-CMND.
           PERFORM COL-FIO-CAN.
           IF REV-MSG > SPACES
               MOVE REV-MSG TO FRM-MENS
           ELSE
               IF FIO-STAT-OKS
                   IF CAN-MSC-STAT IN CAN = 'S'
                      MOVE 'COL' TO MSG-COD-SIST
                      MOVE 'CAN    SAFOK' TO MSG-COD-MENS
                      PERFORM GET-MSG
                      MOVE MSG-GLS-DESC TO FRM-MENS
                   ELSE
                   IF CAN-MSC-STAT IN CAN = 'C'
                       IF CAN-MSC-TCAN IN CAN = 'N'
                           MOVE 'COL' TO MSG-COD-SIST
                           MOVE 'CAN    NOVYA' TO MSG-COD-MENS
                           PERFORM GET-MSG
                           MOVE MSG-GLS-DESC TO FRM-MENS
                       ELSE
                           IF CAN-MSC-TCAN IN CAN = 'R'
                               MOVE 'COL' TO MSG-COD-SIST
                               MOVE 'CAN    RENYA' TO MSG-COD-MENS
                               PERFORM GET-MSG
                               MOVE MSG-GLS-DESC TO FRM-MENS
                           ELSE
                               MOVE 'COL' TO MSG-COD-SIST
                               MOVE 'CAN    PROYA' TO MSG-COD-MENS
                               PERFORM GET-MSG
                               MOVE MSG-GLS-DESC TO FRM-MENS
                   ELSE
                   IF CAN-MSC-STAT IN CAN = 'W'
                      MOVE 'COL' TO MSG-COD-SIST
                      MOVE 'CAN    ALLYA' TO MSG-COD-MENS
                      PERFORM GET-MSG
                      MOVE MSG-GLS-DESC TO FRM-MENS
                   ELSE
                      MOVE 'COL' TO MSG-COD-SIST
                      MOVE 'CAN    ACAOK' TO MSG-COD-MENS
                      PERFORM GET-MSG
                      MOVE MSG-GLS-DESC TO FRM-MENS
               ELSE
                   MOVE 'COL' TO MSG-COD-SIST
                   MOVE 'CAN    ACANO' TO MSG-COD-MENS
                   PERFORM GET-MSG
                   MOVE MSG-GLS-DESC TO FRM-MENS.
      *>>>>
       FIN-CMN-ACC.
           EXIT.
       CMN-ELI SECTION.
       INI-CMN-ELI.
           PERFORM KEY-ALL-CAN.
           MOVE FIO-GET-KEY-UPD TO FIO-CMND.
           PERFORM COL-FIO-CAN.
           IF NOT FIO-STAT-OKS
               GO TO FIN-CMN-ELI.
           MOVE FIO-DEL TO FIO-CMND.
           PERFORM COL-FIO-CAN.
       FIN-CMN-ELI.
           EXIT.
       CMN-PGM SECTION.
       INI-CMN-PGM.
           PERFORM RET-ALL-CAN.
       FIN-CMN-PGM.
           EXIT.
       SCR-EXIT SECTION.
       INI-SCR-EXIT.
           MOVE 'P'      TO SCR-ICMN.
           MOVE SCR-NTRN TO FRM-NTRN.
           MOVE SCR-VARI TO FRM-CMMA.
           MOVE SCR-TCMA TO FRM-TCMA.
           MOVE FRM-EXT  TO FRM-CMND.
           PERFORM GNS-PRO-FRM.
       FIN-SCR-EXIT.
           EXIT.
       SCR-PUTA SECTION.
       INI-SCR-PUTA.
           MOVE SCR-NMAP TO FRM-NAME.
           MOVE SCR-NLIB TO FRM-NLIB.
           MOVE CAN-FLD TO FRM-DFLD.
           MOVE FRM-PUT-ALL TO FRM-CMND.
           PERFORM GNS-PRO-FRM.
       FIN-SCR-PUTA.
           EXIT.
       SCR-MSSG SECTION.
       INI-SCR-MSSG.
           IF FRM-MEN1 NOT > SPACES
               MOVE SPACES TO FRM-MEN1.
           IF FRM-MEN2 NOT > SPACES
               MOVE SPACES TO FRM-MEN2.
           MOVE FRM-MENS TO CAN-GLS-MENS.
       FIN-SCR-MSSG.
           EXIT.
       SCR-GKEY SECTION.
       INI-SCR-GKEY.
           MOVE SCR-NMAP TO FRM-NAME.
           MOVE SCR-NLIB TO FRM-NLIB.
           MOVE FRM-GET-ALL TO FRM-CMND.
           PERFORM GNS-PRO-FRM.
           MOVE SPACES TO FRM-MENS.
           IF NOT ( FRM-FFLD = FRM-FFLD-RET  OR FRM-FFLD-PF10 OR
                               FRM-FFLD-PF12 OR FRM-FFLD-PF3 )
               MOVE 'PFSINV    ' TO MSG-COD-MENS
               MOVE 'GNS' TO MSG-COD-SIST
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS
               PERFORM FST-KEY-CAN
               PERFORM SCR-MSSG
               PERFORM SCR-PUTA
               PERFORM SCR-EXIT.
           MOVE FRM-DFLD TO CAN-FLD.
           IF FRM-STAT-ABT
               GO TO FIN-SCR-GKEY.
           MOVE FRM-SUAR-OKS TO FRM-SUAR.
           PERFORM VAL-NUM-KEY-CAN.
           IF FRM-SUAR EQUAL FRM-SUAR-MAL OR FRM-SUAR-CLR
               PERFORM SCR-MSSG
               PERFORM EDT-KEY-CAN
               PERFORM SCR-PUTA
               PERFORM SCR-EXIT.
           PERFORM VAL-CON-KEY-CAN.
           IF FRM-SUAR EQUAL FRM-SUAR-MAL OR FRM-SUAR-CLR
               PERFORM FST-KEY-CAN
               GO TO ERR-SCR-GKEY.
      *JSS
           PERFORM CLR-FLD-CAN.
           PERFORM VAL-IKY-CAN.
           IF FRM-SUAR EQUAL FRM-SUAR-MAL OR FRM-SUAR-CLR
               GO TO ERR-SCR-GKEY.
           PERFORM VAL-MKY-CAN.
           IF FRM-SUAR EQUAL FRM-SUAR-MAL OR FRM-SUAR-CLR
               GO TO ERR-SCR-GKEY.
           PERFORM VAL-AKY-CAN.
           IF NOT ( FRM-SUAR EQUAL FRM-SUAR-MAL OR FRM-SUAR-CLR )
               GO TO FIN-SCR-GKEY.
       ERR-SCR-GKEY.
           PERFORM SCR-MSSG.
           PERFORM EDT-KEY-CAN.
           PERFORM SCR-PUTA.
           PERFORM SCR-EXIT.
       FIN-SCR-GKEY.
           PERFORM SCR-MSSG.
       SCR-GIKY SECTION.
       INI-SCR-GIKY.
           MOVE SCR-NMAP TO FRM-NAME.
           MOVE SCR-NLIB TO FRM-NLIB.
           MOVE FRM-GET-ALL TO FRM-CMND.
           PERFORM GNS-PRO-FRM.
           MOVE SPACES TO FRM-MENS.
           IF NOT ( FRM-FFLD = FRM-FFLD-RET  OR FRM-FFLD-PF10 OR
                               FRM-FFLD-PF12 OR FRM-FFLD-PF3 )
               MOVE 'PFSINV    ' TO MSG-COD-MENS
               MOVE 'GNS' TO MSG-COD-SIST
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS
               PERFORM FST-KEY-CAN
               PERFORM SCR-MSSG
               PERFORM SCR-PUTA
               PERFORM SCR-EXIT.
           MOVE FRM-DFLD TO CAN-FLD.
           IF FRM-STAT-ABT
               GO TO FIN-SCR-GIKY.
           MOVE FRM-SUAR-OKS TO FRM-SUAR.
           PERFORM VAL-NUM-IKY-CAN.
           IF FRM-SUAR EQUAL FRM-SUAR-MAL OR FRM-SUAR-CLR
               PERFORM SCR-MSSG
               PERFORM EDT-IKY-CAN
               PERFORM SCR-PUTA
               PERFORM SCR-EXIT.
           PERFORM VAL-CON-IKY-CAN.
           IF FRM-SUAR EQUAL FRM-SUAR-MAL OR FRM-SUAR-CLR
               PERFORM FST-KEY-CAN
               GO TO ERR-SCR-GIKY.
      *JSS
           PERFORM CLR-FLD-CAN.
           PERFORM VAL-IKY-CAN.
           IF NOT ( FRM-SUAR EQUAL FRM-SUAR-MAL OR FRM-SUAR-CLR )
               GO TO FIN-SCR-GIKY.
       ERR-SCR-GIKY.
           PERFORM SCR-MSSG.
           PERFORM EDT-IKY-CAN.
           PERFORM SCR-PUTA.
           PERFORM SCR-EXIT.
       FIN-SCR-GIKY.
           PERFORM SCR-MSSG.
       SCR-GFLD SECTION.
       INI-SCR-GFLD.
           MOVE SCR-NMAP TO FRM-NAME.
           MOVE SCR-NLIB TO FRM-NLIB.
           MOVE FRM-GET-ALL TO FRM-CMND.
           PERFORM GNS-PRO-FRM.
           MOVE SPACES TO FRM-MENS.
           IF NOT ( FRM-FFLD = FRM-FFLD-RET  OR FRM-FFLD-PF10 OR
                               FRM-FFLD-PF12 OR FRM-FFLD-PF3 )
               MOVE 'PFSINV    ' TO MSG-COD-MENS
               MOVE 'GNS' TO MSG-COD-SIST
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS
               PERFORM FST-FLD-CAN
               PERFORM SCR-MSSG
               PERFORM SCR-PUTA
               PERFORM SCR-EXIT.
           MOVE FRM-DFLD TO CAN-FLD.
           IF FRM-STAT-ABT
               GO TO FIN-SCR-GFLD.
           MOVE FRM-SUAR-OKS TO FRM-SUAR.
           PERFORM VAL-NUM-KEY-CAN.
           IF FRM-SUAR EQUAL FRM-SUAR-MAL OR FRM-SUAR-CLR
               PERFORM SCR-MSSG
               PERFORM EDT-KEY-CAN
               PERFORM SCR-PUTA
               PERFORM SCR-EXIT.
           PERFORM VAL-NUM-FLD-CAN.
           IF FRM-SUAR EQUAL FRM-SUAR-MAL OR FRM-SUAR-CLR
               PERFORM SCR-MSSG
               PERFORM EDT-KEY-CAN
               PERFORM EDT-FLD-CAN
               PERFORM SCR-PUTA
               PERFORM SCR-EXIT.
           PERFORM VAL-MKY-CAN.
           IF FRM-SUAR EQUAL FRM-SUAR-MAL OR FRM-SUAR-CLR
               GO TO ERR-SCR-GFLD.
           PERFORM VAL-FLD-CAN.
           IF FRM-SUAR EQUAL FRM-SUAR-MAL OR FRM-SUAR-CLR
               GO TO ERR-SCR-GFLD.
           PERFORM VAL-CON-FLD-CAN.
           IF NOT ( FRM-SUAR EQUAL FRM-SUAR-MAL OR FRM-SUAR-CLR )
               GO TO FIN-SCR-GFLD.
           PERFORM FST-FLD-CAN.
       ERR-SCR-GFLD.
           PERFORM SCR-MSSG.
           PERFORM EDT-KEY-CAN.
           PERFORM EDT-FLD-CAN.
           PERFORM SCR-PUTA.
           PERFORM SCR-EXIT.
       FIN-SCR-GFLD.
           MOVE SCR-STAT-MOD TO SCR-STAT.
       GET-ACC SECTION.
       INI-GET-ACC.
           MOVE SCR-NMAP TO FRM-NAME.
           MOVE SCR-NLIB TO FRM-NLIB.
           MOVE FRM-GET-ALL TO FRM-CMND.
           PERFORM GNS-PRO-FRM.
           IF NOT ( FRM-FFLD = FRM-FFLD-RET  OR FRM-FFLD-PF10 OR
                               FRM-FFLD-PF12 OR FRM-FFLD-PF3 )
               MOVE 'PFSINV    ' TO MSG-COD-MENS
               MOVE 'GNS' TO MSG-COD-SIST
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC          TO CAN-GLS-MEN2
               MOVE SCR-GLS-PRMT( SCR-I ) TO CAN-GLS-MEN1
               PERFORM FST-MSG
               PERFORM SCR-PUTA
               PERFORM SCR-EXIT.
           MOVE FRM-DFLD TO CAN-FLD.
           IF NOT ( ( FRM-FFLD = FRM-FFLD-PF12 OR FRM-FFLD-PF3 ) OR
                      SCR-GLS-CONF( SCR-I ) > SPACES )
               PERFORM VAL-NUM-KEY-CAN
               PERFORM VAL-NUM-FLD-CAN.
       FIN-GET-ACC.
           MOVE SCR-STAT-SON TO SCR-STAT.
       GET-CON SECTION.
       INI-GET-CON.
           MOVE SCR-NMAP TO FRM-NAME.
           MOVE SCR-NLIB TO FRM-NLIB.
           MOVE FRM-GET-ALL TO FRM-CMND.
           PERFORM GNS-PRO-FRM.
           IF NOT ( FRM-FFLD = FRM-FFLD-RET  OR FRM-FFLD-PF10 OR
                               FRM-FFLD-PF12 OR FRM-FFLD-PF3 )
               MOVE 'PFSINV    ' TO MSG-COD-MENS
               MOVE 'GNS' TO MSG-COD-SIST
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC          TO CAN-GLS-MEN2
               MOVE SCR-GLS-PRMT( SCR-I ) TO CAN-GLS-MEN1
               PERFORM FST-MSG
               PERFORM SCR-PUTA
               PERFORM SCR-EXIT.
           MOVE FRM-DFLD TO CAN-FLD.
       FIN-GET-CON.
           MOVE SCR-STAT-CON TO SCR-STAT.
       CLR-MSG SECTION.
       INI-CLR-MSG.
           MOVE SPACES TO CAN-GLS-MENS.
       FIN-CLR-MSG.
           EXIT.
       HBL-IKY SECTION.
       INI-HBL-IKY.
           IF SCR-DESDE-CMN
               MOVE CAN-GLS-MENS TO FRM-MENS
               MOVE LOW-VALUES TO CAN-FLD
               MOVE FRM-MENS TO CAN-GLS-MENS.
           MOVE FRM-CPSF-AEY TO FRM-CPIM-AEY.
           PERFORM PRO-FLD-CAN.
           PERFORM PRO-MKY-CAN.
           PERFORM PRO-AKY-CAN.
           PERFORM UNP-IKY-CAN.
           PERFORM FST-KEY-CAN.
       FIN-HBL-IKY.
           EXIT.
       HBL-KEY SECTION.
       INI-HBL-KEY.
           IF SCR-DESDE-CMN
               MOVE CAN-GLS-MENS TO FRM-MENS
               MOVE LOW-VALUES TO CAN-FLD
               MOVE FRM-MENS TO CAN-GLS-MENS.
           MOVE FRM-CPSF-AEY TO FRM-CPIM-AEY.
           PERFORM PRO-FLD-CAN.
           PERFORM UNP-KEY-CAN.
           PERFORM FST-KEY-CAN.
      *<<<< FIN_HBL_KEY
           IF SCR-CMND = 'REV'
               MOVE FRM-CPIM-AEY TO VEN-NUM-IVCT-ATR IN CAN-FLD
               MOVE FRM-CPIM-AEY TO CAN-NUM-ICAN-ATR IN CAN-FLD.
      *>>>>
       FIN-HBL-KEY.
           EXIT.
       HBL-FLD SECTION.
       INI-HBL-FLD.
           PERFORM PRO-IKY-CAN.
           PERFORM PRO-AKY-CAN.
           PERFORM UNP-MKY-CAN.
           PERFORM UNP-FLD-CAN.
           PERFORM FST-FLD-CAN.
       FIN-HBL-FLD.
           EXIT.
       FST-MSG SECTION.
       INI-FST-MSG.
           MOVE -1 TO CAN-GLS-MENS-LEN.
       FIN-FST-MSG.
           EXIT.
       PRO-ALL SECTION.
       INI-PRO-ALL.
           PERFORM PRO-KEY-CAN.
           PERFORM PRO-FLD-CAN.
           PERFORM FST-MSG.
       FIN-PRO-ALL.
           EXIT.
       SCR-TRL SECTION.
       INI-SCR-TRL.
           IF FRM-MEN1 NOT > SPACES
               MOVE SCR-GLS-PRMT( SCR-I ) TO FRM-MEN1.
           IF SCR-STAT = SCR-STAT-MOD
               MOVE SCR-INST-GFL TO SCR-INST
               PERFORM HBL-FLD
               PERFORM SCR-MSSG
               PERFORM EDT-KEY-CAN
               PERFORM EDT-FLD-CAN
               PERFORM SCR-PUTA
               PERFORM SCR-EXIT.
           IF SCR-STAT = SCR-STAT-SON
               MOVE SCR-INST-GCS TO SCR-INST
               PERFORM PRO-ALL
               PERFORM SCR-MSSG
               PERFORM EDT-KEY-CAN
               PERFORM EDT-FLD-CAN
               PERFORM SCR-PUTA
               PERFORM SCR-EXIT.
      *ASUME SCR-STAT-CON.
           MOVE SCR-STAT-CON TO SCR-STAT.
           MOVE SCR-INST-GAB TO SCR-INST.
      *    MOVE FRM-CPSF-AEY TO FRM-CPIM-AEY.
           PERFORM PRO-ALL.
           PERFORM SCR-MSSG.
           PERFORM EDT-KEY-CAN.
           PERFORM EDT-FLD-CAN.
           PERFORM SCR-PUTA.
           PERFORM SCR-EXIT.
       FIN-SCR-TRL.
           EXIT.
       DESSCRTRL SECTION.
       INI-DESSCRTRL.
           IF SCR-INST = SCR-INST-GCF
                  PERFORM SCR-GCNF
                  GO TO FIN-DESSCRTRL.
           MOVE SCR-VFLD-NOT TO SCR-VFLD.
           MOVE FRM-FFLD TO SCR-FFLD.
           IF SCR-STAT = SCR-STAT-ABT OR SCR-STAT-CON
                  GO TO FIN-DESSCRTRL.
           IF SCR-FFLD-RET OR SCR-FFLD-PF10
                  MOVE SCR-VFLD-YES TO SCR-VFLD
                  PERFORM PRO-CONF.
       FIN-DESSCRTRL.
           IF SCR-FFLD-PF10 OR SCR-FFLD-PF3
                 MOVE SCR-INST-HCM TO SCR-INST
           ELSE
                 MOVE SCR-INST-HKY TO SCR-INST.
       EXT-DESSCRTRL.
           EXIT.
       PRO-CONF SECTION.
       INI-PRO-CONF.
           IF FRM-MENS NOT > SPACES
               IF SCR-GLS-CONF( SCR-I ) NOT > SPACES
                   GO TO FIN-PRO-CONF
               ELSE
                   MOVE SCR-GLS-CONF( SCR-I ) TO FRM-MENS
           ELSE
               IF FRM-MEN1 NOT > SPACES
                   MOVE SCR-GLS-CONF( SCR-I ) TO FRM-MEN1.
           MOVE SCR-INST-GCF TO SCR-INST.
           PERFORM SCR-MSSG.
           PERFORM PRO-KEY-CAN.
           PERFORM PRO-FLD-CAN.
           PERFORM FST-MSG.
           IF SCR-STAT = SCR-STAT-MOD
               PERFORM EDT-KEY-CAN
               PERFORM EDT-FLD-CAN.
           PERFORM SCR-PUTA.
           PERFORM SCR-EXIT.
       FIN-PRO-CONF.
           EXIT.
       SCR-GCNF SECTION.
       INI-SCR-GCNF.
           MOVE SCR-NMAP TO FRM-NAME.
           MOVE SCR-NLIB TO FRM-NLIB.
           MOVE FRM-GET-ALL TO FRM-CMND.
           PERFORM GNS-PRO-FRM.
           IF NOT ( FRM-FFLD = FRM-FFLD-RET  OR FRM-FFLD-PF10 OR
                               FRM-FFLD-PF12 OR FRM-FFLD-PF3  OR
                               FRM-FFLD-PF4 )
               MOVE 'PFSINV    ' TO MSG-COD-MENS
               MOVE 'GNS' TO MSG-COD-SIST
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC          TO CAN-GLS-MEN2
               MOVE SCR-GLS-CONF( SCR-I ) TO CAN-GLS-MEN1
               PERFORM FST-MSG
               PERFORM SCR-PUTA
               PERFORM SCR-EXIT.
           MOVE FRM-DFLD TO CAN-FLD.
           MOVE FRM-FFLD TO SCR-FFLD.
           IF FRM-FFLD = FRM-FFLD-PF3
               MOVE SCR-VFLD-NOT TO SCR-VFLD
           ELSE
           IF FRM-FFLD = FRM-FFLD-RET OR FRM-FFLD-PF10 OR FRM-FFLD-PF4
               MOVE SCR-VFLD-YES TO SCR-VFLD
               PERFORM VAL-NUM-KEY-CAN
               PERFORM VAL-NUM-FLD-CAN
           ELSE
           IF FRM-FFLD = FRM-FFLD-PF12
               MOVE SCR-STPP TO SCR-STAT
               IF SCR-STAT = SCR-STAT-MOD
                   PERFORM VAL-NUM-KEY-CAN
                   PERFORM VAL-NUM-FLD-CAN
                   PERFORM SCR-TRL
               ELSE
                   MOVE SCR-VFLD-NOT TO SCR-VFLD.
       FIN-SCR-GCNF.
           EXIT.
      *COPY COLBMCAN.
       COPY COLBOCAN.
       COPY COLBFCAN.
       COPY GNSBFMSG.
       COPY GNSBECIC.
       COPY GNSBGSYS.
       COPY GNSBGVSM.
       COPY GNSBGDTC.
       COPY GNSBGFRM.
       COPY GNSBGMSG.
       COPY GNSBEKEY.
       COPY GNSBIABT.
       COPY GNSBBTAB.
       COPY GNSBVCOD.
       COPY GNSBVTAB.
       COPY GNSBFTAB.
       COPY GNSBBMSC.
       COPY GNSBVIND.
       COPY GNSBVMSC.
       COPY GNSBFMSC.
       COPY GNSBVIDC.
       COPY GNSBPVRF.
       COPY GNSBGFEC.
       COPY GNSBGHOY.
       COPY TABBBOFI.
       COPY TABBVOFI.
       COPY TABBFOFI.
       COPY TABBBUSR.
       COPY TABBVTDU.
       COPY TABBFUSR.
      *<<<< EOF
       SET-STTR-RCV SECTION.
       INI-SET-STTR-RCV.
           MOVE SPACES TO MSG-COD-MENS.
           IF SCR-CMND = 'REV'
               MOVE CAN-CAI-IOPC IN CAN-BKP TO RCV-CAI-IOPC IN RCV
               MOVE CAN-IIC-IOPC IN CAN-BKP TO RCV-IIC-IOPC IN RCV
               MOVE CAN-NUM-ICAN IN CAN-BKP TO RCV-NUM-ICAN IN RCV
               MOVE CAN-CAI-IOPC IN CAN-BKP TO RCV-CAI-IOPV IN RCV
               MOVE CAN-IIC-IOPC IN CAN-BKP TO RCV-IIC-IOPV IN RCV
               MOVE VEN-NUM-IVCT IN CAN-FLD TO RCV-NUM-IVCT IN RCV
               MOVE FIO-GET-KEY-UPD TO FIO-CMND
               PERFORM COL-FIO-RCV
               IF FIO-STAT-OKS
                   MOVE 'R' TO RCV-MSC-STAT IN RCV
                   MOVE FIO-MOD TO FIO-CMND
                   PERFORM COL-FIO-RCV
                   IF FIO-STAT-OKS
                       NEXT SENTENCE
                   ELSE
                       MOVE 'RCV    NOMOD' TO MSG-COD-MENS
               ELSE
                   MOVE 'RCV    NOGKU' TO MSG-COD-MENS.
       FIN-SET-STTR-RCV.
           EXIT.
       ADO-CAN SECTION.
       INI-ADO-CAN.
           IF ADO-IND-ORIG = 'S'
               PERFORM ADO-SAFE
               IF ADO-GLS-MENS > SPACES
                   MOVE ADO-KEY-IOPC        TO CAN-CIC-IOPC IN CAN
                   MOVE RCV-NUM-ICAN IN RCV TO CAN-NUM-ICAN IN CAN
                   MOVE FIO-GET-KEY TO FIO-CMND
                   PERFORM COL-FIO-CAN
                   PERFORM GET-FHOY
                   MOVE HOY-DHOY IN HOY-VARI TO
                                       SYS-DHOY IN SYS-VARI
                   MOVE HOY-MHOY IN HOY-VARI TO
                                       SYS-MHOY IN SYS-VARI
                   MOVE HOY-AHOY IN HOY-VARI TO
                                       SYS-AHOY IN SYS-VARI
                   MOVE HOY-SHOY IN HOY-VARI TO
                                       SYS-SHOY IN SYS-VARI
                   MOVE HOY-HHOY IN HOY-VARI TO
                                       SYS-HHOY IN SYS-VARI
                   PERFORM BUS-COR-ERR
                   MOVE MSG-COD-MENS TO ERR-COD-MENS IN ERR
                   MOVE 'COLPOCAN'   TO ERR-COD-ATRN IN ERR
                   MOVE ERR-SVRT-FAT  TO ERR-IND-SVRT IN ERR
                   MOVE ERR-TERR-VLD  TO ERR-COD-TERR IN ERR
                   MOVE ADR-CAN-REQA TO ADR-REQA
                   PERFORM PRO-IER
               ELSE
                   NEXT SENTENCE
           ELSE
      * UNA CANCELACION RELACIONADA CON MULTIPLES OPC ( NOVACION )
           IF ADO-MSC-TCAN = ADO-MSC-MOPC
               MOVE ADO-KEY-ICAN TO CAN-KEY-ICAN IN CAN
               PERFORM CAN-ROV-CAN
           ELSE
           IF ADO-MSC-TCAN = ADO-MSC-MCAN
               PERFORM ADO-CAN-MCAN.
       FIN-ADO-CAN.
           EXIT.
       PUT-STAT-CAN SECTION.
       INI-PUT-STAT-CAN.
           MOVE FIO-STAT TO PGM-STAT-CAN.
      *BUS-TAB busca glosa de codigo en tabla.
           MOVE 'COL' TO TAB-COD-SIST.
           MOVE 'CNC' TO TAB-COD-TTAB IN TAB.
           MOVE CAN-MSC-CANC IN CAN TO TAB-COD-CTAB IN TAB.
           PERFORM BUS-TAB.
           MOVE TAB-CIC-CTAB IN TAB TO SCR-MSC-CCNC.
           MOVE TAB-CIC-CTAB IN TAB TO SCR-MSC-CANC.
           PERFORM CMN-ACC.
           IF CAN-MSC-STAT IN CAN = 'A' OR
              ( CAN-MSC-STAT IN CAN = 'S' AND ADO-IND-ORIG = 'O' ) OR
              ( CAN-MSC-STAT IN CAN = 'C' AND ADO-IND-ORIG = 'S' )
               MOVE SPACES TO ADO-GLS-MENS
           ELSE
               MOVE MSG-GLS-DESC TO ADO-GLS-MENS.
       FIN-PUT-STAT-CAN.
           EXIT.
       CAN-ROV-CAN SECTION.
       INI-CAN-ROV-CAN.
           MOVE ZEROES TO VEN-NUM-IVEN IN VEN VEN-NUM-IVCT IN VEN.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM COL-FIO-CAN.
           MOVE FIO-STAT TO PGM-STAT-CAN.
           PERFORM PUT-CAN-CAN.
           PERFORM BUS-VEN-ADO.
           PERFORM PUT-STAT-CAN.
       FIN-CAN-ROV-CAN.
           EXIT.
       ADO-CAN-MCAN SECTION.
       INI-ADO-CAN-MCAN.
           MOVE ADO-KEY-IOPC TO ROV-CIC-IOPC IN ROV.
           MOVE LOW-VALUES TO ROV-KEY-IVCT IN ROV.
           MOVE FIO-GET-NLS TO FIO-CMND.
       CIC-ADO-CAN-MCAN.
           PERFORM COL-FIO-ROV.
           IF FIO-STAT-OKS AND
              ADO-KEY-IOPC = ROV-CIC-IOPC IN ROV
                MOVE ROV-KEY-IVCT IN ROV TO CAN-KEY-ICAN IN CAN
                PERFORM CAN-ROV-CAN
                MOVE FIO-GET-NXT TO FIO-CMND
                GO TO CIC-ADO-CAN-MCAN.
       FIN-ADO-CAN-MCAN.
           EXIT.
       BUS-VEN-ADO SECTION.
       INI-BUS-VEN-ADO.
           MOVE CAN-CIC-IOPC IN CAN TO OPC-CIC-IOPC IN OPC.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM COL-FIO-OPC.
           IF OPC-IND-VSTR IN OPC = 'S'
                MOVE CAN-CIC-IOPC IN CAN TO VEN-CIC-IOPC IN VEN
                MOVE 1 TO VEN-NUM-IVEN IN VEN
                MOVE FIO-GET-KEY TO FIO-CMND
                PERFORM COL-FIO-VEN
                IF FIO-STAT-OKS
                     MOVE VEN-NUM-IVCT IN VEN TO VEN-NUM-IVEN IN VEN
                     MOVE VEN-NUM-IVCT IN VEN TO VEN-NUM-IVEN
                                                         IN CAN-FLD
                ELSE
                     MOVE 1 TO VEN-NUM-IVEN IN CAN-FLD
           ELSE
                MOVE OPC-NUM-IVEN IN OPC TO VEN-NUM-IVEN IN VEN
                MOVE OPC-NUM-IVEN IN OPC TO VEN-NUM-IVEN IN CAN-FLD.
           MOVE VEN-NUM-IVEN IN VEN TO SCR-VEN-NUM-IVEN.
       FIN-BUS-VEN-ADO.
           EXIT.
       BUS-VEN-ADO-SAFE SECTION.
       INI-BUS-VEN-ADO-SAFE.
           MOVE WSS-ADO-NUM-IVCT TO VEN-NUM-IVEN IN VEN.
           MOVE WSS-ADO-NUM-IVCT TO VEN-NUM-IVEN IN CAN-FLD.
           MOVE VEN-NUM-IVEN IN VEN TO SCR-VEN-NUM-IVEN.
       FIN-BUS-VEN-ADO-SAFE.
           EXIT.
       ADO-SAFE SECTION.
       INI-ADO-SAFE.
           IF SCR-CMND = 'REV'
               PERFORM ADO-SAFE-REV
           ELSE
               PERFORM ADO-SAFE-CAN.
       FIN-ADO-SAFE.
           EXIT.
       ADO-SAFE-CAN SECTION.
       INI-ADO-SAFE-CAN.
           PERFORM OBT-MON-CAN.
           IF ADO-GLS-MENS > SPACES
               GO TO FIN-ADO-SAFE-CAN.
           IF WSS-ADO-NUM-IVCT = ZEROES
               MOVE 1 TO WSS-ADO-NUM-IVCT.
       LUP-ADO-SAFE-CAN.
           MOVE ADO-KEY-IOPC TO RCV-CIC-IOPV IN RCV.
           MOVE WSS-ADO-NUM-IVCT TO RCV-NUM-IVCT IN RCV.
           MOVE FIO-GET-KEY TO FIO-CMND.
       ADO-SAFE-NXT-RCV.
           MOVE 'RCV-KEY-IVCT' TO FIO-AKEY.
           PERFORM COL-FIO-RCV.
           IF FIO-STAT-OKS AND
              ADO-KEY-IOPC = RCV-CIC-IOPV IN RCV AND
              WSS-ADO-NUM-IVCT = RCV-NUM-IVCT IN RCV
               MOVE ADO-KEY-IOPC        TO CAN-CIC-IOPC IN CAN
               MOVE RCV-NUM-ICAN IN RCV TO CAN-NUM-ICAN IN CAN
               MOVE FIO-GET-KEY TO FIO-CMND
               PERFORM COL-FIO-CAN
               IF FIO-STAT-OKS
                   IF CAN-MSC-STAT IN CAN = 'S'
                       MOVE FIO-STAT TO PGM-STAT-CAN
                       PERFORM PUT-CAN-CAN
                       PERFORM BUS-VEN-ADO-SAFE
                       PERFORM PUT-CYA-SAF
                       PERFORM PUT-STAT-CAN
                   ELSE
                       MOVE FIO-GET-NXT TO FIO-CMND
                       GO TO ADO-SAFE-NXT-RCV
               ELSE
                   MOVE 'COL' TO MSG-COD-SIST
                   MOVE 'CANSAFECANNF' TO MSG-COD-MENS
                   PERFORM GET-MSG
                   MOVE MSG-GLS-DESC TO ADO-GLS-MENS
                   GO TO FIN-ADO-SAFE-CAN
           ELSE
               MOVE ADO-KEY-IOPC TO RCV-CIC-IOPV IN RCV
               MOVE ZEROES       TO RCV-NUM-IVCT IN RCV
               MOVE 'RCV-KEY-IVCT' TO FIO-AKEY
               MOVE FIO-GET-KEY TO FIO-CMND
               PERFORM COL-FIO-RCV
               IF FIO-STAT-OKS
                   MOVE ADO-KEY-IOPC        TO CAN-CIC-IOPC IN CAN
                   MOVE RCV-NUM-ICAN IN RCV TO CAN-NUM-ICAN IN CAN
                   MOVE FIO-GET-KEY TO FIO-CMND
                   PERFORM COL-FIO-CAN
                   IF FIO-STAT-OKS AND
                      CAN-MSC-STAT IN CAN = 'S'
                       MOVE FIO-STAT TO PGM-STAT-CAN
                       PERFORM PUT-CAN-CAN
                       PERFORM BUS-VEN-ADO
                       IF WSS-ADO-NUM-IVCT NOT = VEN-NUM-IVEN IN VEN
                           MOVE 'COL' TO MSG-COD-SIST
                           MOVE 'CANSAFERCVNF' TO MSG-COD-MENS
                           PERFORM GET-MSG
                           MOVE MSG-GLS-DESC TO ADO-GLS-MENS
                           GO TO FIN-ADO-SAFE-CAN
                       ELSE
                           PERFORM PUT-CYA-SAF
                           PERFORM PUT-STAT-CAN
                           GO TO FIN-ADO-SAFE-CAN
                   ELSE
                       MOVE 'COL' TO MSG-COD-SIST
                       MOVE 'CANSAFECANNF' TO MSG-COD-MENS
                       PERFORM GET-MSG
                       MOVE MSG-GLS-DESC TO ADO-GLS-MENS
                       GO TO FIN-ADO-SAFE-CAN
               ELSE
                   MOVE 'COL' TO MSG-COD-SIST
                   MOVE 'CANSAFERCVNF' TO MSG-COD-MENS
                   PERFORM GET-MSG
                   MOVE MSG-GLS-DESC TO ADO-GLS-MENS
                   GO TO FIN-ADO-SAFE-CAN.
           IF WSS-ADO-NUM-ICAN > 1
               ADD 1 TO WSS-ADO-NUM-IVCT
               IF WSS-ADO-NUM-IVCT NOT > ADO-NUM-IVCT
                   GO TO LUP-ADO-SAFE-CAN.
       FIN-ADO-SAFE-CAN.
           EXIT.
       OBT-MON-CAN SECTION.
       INI-OBT-MON-CAN.
           MOVE ZEROES       TO WSS-ADO-MAX-IVCT IN WSS-VARI.
           MOVE ZEROES       TO WSS-ADO-NUM-ICAN IN WSS-VARI.
           MOVE ZEROES       TO WSS-ADO-SGV-TPAG IN WSS-VARI.
           IF ADO-NUM-IVCT = ZEROES
               MOVE 1 TO ADO-NUM-IVCT.
           MOVE ADO-NUM-IVCT TO WSS-ADO-NUM-IVCT IN WSS-VARI.
       LUP-OBT-MON-CAN.
           MOVE ADO-KEY-IOPC                 TO RCV-CIC-IOPV IN RCV.
           MOVE WSS-ADO-NUM-IVCT IN WSS-VARI TO RCV-NUM-IVCT IN RCV.
           MOVE FIO-GET-KEY TO FIO-CMND.
       NXT-OBT-RCV-CAN.
           MOVE 'RCV-KEY-IVCT' TO FIO-AKEY.
           PERFORM COL-FIO-RCV.
           IF FIO-STAT-OKS AND
              ADO-KEY-IOPC = RCV-CIC-IOPV IN RCV AND
              WSS-ADO-NUM-IVCT IN WSS-VARI = RCV-NUM-IVCT IN RCV
               MOVE ADO-KEY-IOPC        TO CAN-CIC-IOPC IN CAN
               MOVE RCV-NUM-ICAN IN RCV TO CAN-NUM-ICAN IN CAN
               MOVE FIO-GET-KEY TO FIO-CMND
               PERFORM COL-FIO-CAN
               IF FIO-STAT-OKS
                   IF CAN-MSC-STAT IN CAN = 'S'
                     ADD CAN-SGV-TPAG IN CAN TO WSS-ADO-SGV-TPAG
                                                   IN WSS-VARI
                     ADD 1 TO WSS-ADO-NUM-ICAN IN WSS-VARI
                     MOVE WSS-ADO-NUM-IVCT TO WSS-ADO-MAX-IVCT
                   ELSE
                       MOVE FIO-GET-NXT TO FIO-CMND
                       GO TO NXT-OBT-RCV-CAN
               ELSE
                   MOVE FIO-GET-NXT TO FIO-CMND
                   GO TO NXT-OBT-RCV-CAN
           ELSE
               MOVE ADO-KEY-IOPC TO RCV-CIC-IOPV IN RCV
               MOVE ZEROES       TO RCV-NUM-IVCT IN RCV
               MOVE 'RCV-KEY-IVCT' TO FIO-AKEY
               MOVE FIO-GET-KEY TO FIO-CMND
               PERFORM COL-FIO-RCV
               IF FIO-STAT-OKS
                   MOVE ADO-KEY-IOPC        TO CAN-CIC-IOPC IN CAN
                   MOVE RCV-NUM-ICAN IN RCV TO CAN-NUM-ICAN IN CAN
                   MOVE FIO-GET-KEY TO FIO-CMND
                   PERFORM COL-FIO-CAN
                   IF FIO-STAT-OKS AND
                      CAN-MSC-STAT IN CAN = 'S'
                       ADD CAN-SGV-TPAG IN CAN TO WSS-ADO-SGV-TPAG
                                                       IN WSS-VARI
                       ADD 1 TO WSS-ADO-NUM-ICAN IN WSS-VARI
                       MOVE WSS-ADO-NUM-IVCT TO WSS-ADO-MAX-IVCT
                       GO TO NXT-OBT-MON-CAN
                   ELSE
                       GO TO NXT-OBT-MON-CAN
               ELSE
                   GO TO NXT-OBT-MON-CAN.
           SUBTRACT 1 FROM WSS-ADO-NUM-IVCT IN WSS-VARI.
           GO TO LUP-OBT-MON-CAN.
       NXT-OBT-MON-CAN.
           IF ADO-VAL-TPAG NOT = WSS-ADO-SGV-TPAG IN WSS-VARI AND
              WSS-ADO-NUM-ICAN IN WSS-VARI > 1
               MOVE 'COL' TO MSG-COD-SIST
               MOVE 'CANMONSAF>CN' TO MSG-COD-MENS
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO ADO-GLS-MENS.
           IF WSS-ADO-NUM-ICAN IN WSS-VARI NOT > ZEROES
               MOVE 'COL' TO MSG-COD-SIST
               MOVE 'CANNEXSAFCAN' TO MSG-COD-MENS
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO ADO-GLS-MENS.
           MOVE WSS-ADO-MAX-IVCT TO WSS-ADO-NUM-IVCT .
       FIN-OBT-MON-CAN.
           EXIT.
       ADO-SAFE-REV SECTION.
       INI-ADO-SAFE-REV.
           PERFORM OBT-MON-REV.
           IF ADO-GLS-MENS > SPACES
               GO TO FIN-ADO-SAFE-REV.
           MOVE ZEROES       TO WSS-ADO-SGV-TPAG IN WSS-VARI.
           MOVE ADO-KEY-IOPC        TO CAN-CIC-IOPC IN CAN.
           MOVE 999 TO CAN-NUM-ICAN IN CAN.
           MOVE FIO-GET-LEQ TO FIO-CMND.
       LUP-ADO-SAFE-REV.
           PERFORM COL-FIO-CAN.
           IF NOT ( FIO-STAT-OKS AND
                    ADO-KEY-IOPC  = CAN-CIC-IOPC IN CAN )
               GO TO FIN-ADO-SAFE-REV.
           MOVE ADR-CAN-REQA TO ADR-AUX-REQA.
           IF CAN-MSC-STAT IN CAN NOT = 'R' AND
              CAN-SGV-TPAG IN CAN NOT < ZEROES AND
              CAN-SGV-TREN IN CAN NOT < ZEROES
               IF CAN-MSC-STAT IN CAN NOT = 'A'
                   GO TO FIN-ADO-SAFE-REV
               ELSE
                   PERFORM OBT-CIC-CAJA
                   IF FIO-STAT-OKS
                       ADD CAN-SGV-TPAG IN CAN TO WSS-ADO-SGV-TPAG
                                                       IN WSS-VARI
                       IF ADO-VAL-TPAG NOT < WSS-ADO-SGV-TPAG
                                                       IN WSS-VARI
                           PERFORM OBT-RCV-VEN
                           MOVE '00' TO PGM-STAT-CAN
                           PERFORM PUT-CAN-CAN
                           PERFORM BUS-VEN-ADO-SAFE
                           PERFORM PUT-STAT-CAN
                       ELSE
                           GO TO FIN-ADO-SAFE-REV.
           MOVE ADR-AUX-REQA TO ADR-CAN-REQA.
           MOVE FIO-KDEF-S TO FIO-KDEF.
           MOVE FIO-GET-PRV TO FIO-CMND.
           GO TO LUP-ADO-SAFE-REV.
       FIN-ADO-SAFE-REV.
           EXIT.
       OBT-MON-REV SECTION.
       INI-OBT-MON-REV.
           MOVE ZEROES       TO WSS-ADO-NUM-ICAN IN WSS-VARI.
           MOVE ZEROES       TO WSS-ADO-SGV-TPAG IN WSS-VARI.
           MOVE ADO-KEY-IOPC        TO CAN-CIC-IOPC IN CAN.
           MOVE 999 TO CAN-NUM-ICAN IN CAN.
           MOVE FIO-GET-LEQ TO FIO-CMND.
       LUP-OBT-MON-REV.
           PERFORM COL-FIO-CAN.
           IF NOT ( FIO-STAT-OKS AND
                    ADO-KEY-IOPC  = CAN-CIC-IOPC IN CAN )
               GO TO NXT-OBT-MON-REV.
           IF CAN-MSC-STAT IN CAN NOT = 'R' AND
              CAN-SGV-TPAG IN CAN NOT < ZEROES AND
              CAN-SGV-TREN IN CAN NOT < ZEROES
               IF CAN-MSC-STAT IN CAN NOT = 'A'
                   GO TO NXT-OBT-MON-REV
               ELSE
                   PERFORM OBT-CIC-CAJA
                   IF FIO-STAT-OKS
                       ADD CAN-SGV-TPAG IN CAN TO WSS-ADO-SGV-TPAG
                                                       IN WSS-VARI
                       ADD 1 TO WSS-ADO-NUM-ICAN IN WSS-VARI
                       IF ADO-VAL-TPAG = WSS-ADO-SGV-TPAG IN WSS-VARI
                           GO TO FIN-OBT-MON-REV
                       ELSE
                       IF ADO-VAL-TPAG < WSS-ADO-SGV-TPAG IN WSS-VARI
                           GO TO NXT-OBT-MON-REV.
           MOVE FIO-GET-PRV TO FIO-CMND.
           GO TO LUP-OBT-MON-REV.
       NXT-OBT-MON-REV.
           IF ADO-VAL-TPAG NOT = WSS-ADO-SGV-TPAG IN WSS-VARI
               MOVE 'COL' TO MSG-COD-SIST
               MOVE 'CANMONSAF>RV' TO MSG-COD-MENS
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO ADO-GLS-MENS.
           IF WSS-ADO-NUM-ICAN IN WSS-VARI NOT > ZEROES
               MOVE 'COL' TO MSG-COD-SIST
               MOVE 'CANNEXSAFREV' TO MSG-COD-MENS
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO ADO-GLS-MENS.
       FIN-OBT-MON-REV.
           EXIT.
       OBT-CIC-CAJA SECTION.
       INI-OBT-CIC-CAJA.
           MOVE CAN-CIC-IOPC IN CAN TO OPC-CIC-IOPC IN OPC.
           PERFORM FST-CYA-CAN.
       LUP-OBT-CYA-CAJA.
           PERFORM COL-FIO-CYA.
           IF NOT ( FIO-STAT-OKS                         AND
              CAN-CIC-IOPC IN CAN = CYA-CIC-IOPC IN CYA  AND
              CAN-NUM-ICAN IN CAN = CYA-NUM-ICAN IN CYA )
               MOVE FIO-STAT-NEX TO FIO-STAT
               GO TO FIN-OBT-CIC-CAJA.
           MOVE 'TCYA' TO MSC-CIC-TMSC IN MSC.
           MOVE 'CAJA'    TO MSC-CIC-CMSC IN MSC.
           MOVE 'MSC-CIC-TABL' TO FIO-AKEY.
           MOVE FIO-GET-KEY TO FIO-CMND.
       LUP-OBT-CIC-CAJA.
           MOVE 'TAB' TO FIO-SIST.
           PERFORM GNS-FIO-MSC.
           IF NOT (FIO-STAT-OKS AND
              MSC-CIC-CMSC IN MSC = 'CAJA' AND
              MSC-CIC-TMSC IN MSC = 'TCYA' )
               MOVE FIO-STAT-NEX TO FIO-STAT
               GO TO FIN-OBT-CIC-CAJA
           ELSE
               IF MSC-COD-CMSC IN MSC = CYA-IND-TCYA IN CYA
                   GO TO FIN-OBT-CIC-CAJA
               ELSE
                   MOVE 'MSC-CIC-TABL' TO FIO-AKEY
                   MOVE FIO-GET-NXT TO FIO-CMND
                   GO TO LUP-OBT-CIC-CAJA.
           MOVE FIO-GET-NXT TO FIO-CMND.
           GO TO LUP-OBT-CYA-CAJA.
       FIN-OBT-CIC-CAJA.
           EXIT.
       OBT-RCV-VEN SECTION.
       INI-OBT-RCV-VEN.
           MOVE SPACES TO RCV-KEY-IRCV IN RCV.
           MOVE CAN-KEY-ICAN IN CAN TO RCV-KEY-ICAN IN RCV.
           MOVE FIO-GET-NLS TO FIO-CMND.
           PERFORM COL-FIO-RCV.
           IF NOT ( FIO-STAT-OKS AND
              CAN-KEY-ICAN IN CAN = RCV-KEY-ICAN IN RCV)
               GO TO FIN-OBT-RCV-VEN.
           IF RCV-NUM-IVCT IN RCV > ZEROES
               MOVE RCV-NUM-IVCT IN RCV TO WSS-ADO-NUM-IVCT IN WSS-VARI
               GO TO FIN-OBT-RCV-VEN.
           PERFORM BUS-VEN-ADO.
           MOVE VEN-NUM-IVEN IN VEN TO WSS-ADO-NUM-IVCT IN WSS-VARI.
       FIN-OBT-RCV-VEN.
           EXIT.
       GET-STAT-ADO SECTION.
       INI-GET-STAT-ADO.
               MOVE 'S' TO WSS-IND-ADO
               IF ADO-CMND = 'REV'
                   MOVE ADO-CMND TO SCR-CMND
               ELSE
                   MOVE 'CAN' TO SCR-CMND.
               MOVE 'COL' TO SCR-SIST
               MOVE 'COLPMCAN' TO SCR-PROG
               MOVE FRM-FFLD-RET TO FRM-FFLD
               MOVE FRM-FFLD-RET TO SCR-FFLD
               MOVE ADO-FSIS     TO IFD-FSIS
               MOVE SCR-STAT-SON TO SCR-STAT
               MOVE SCR-VFLD-YES TO SCR-VFLD.
       FIN-GET-STAT-ADO.
           EXIT.
       FIJ-SAFE SECTION.
       INI-FIJ-SAFE.
           MOVE ZEROES TO WSS-I.
           MOVE SPACES TO MSG-COD-MENS.
           PERFORM FST-CYA-CAN.
           PERFORM COL-FIO-CYA.
           IF NOT ( FIO-STAT-OKS                              AND
                    OPC-CIC-IOPC IN OPC = CYA-CIC-IOPC IN CYA AND
                    CAN-NUM-ICAN IN CAN = CYA-NUM-ICAN IN CYA )
                      MOVE FIO-GET-KEY-UPD TO FIO-CMND
                      PERFORM COL-FIO-CRS
                      PERFORM MOVE-SAFE-2
                      MOVE FIO-MOD TO FIO-CMND
                      PERFORM COL-FIO-CRS
                      GO TO FIN-FIJ-SAFE.
       CIC-FIJ-SAFE.
           IF NOT ( FIO-STAT-OKS                              AND
                    OPC-CIC-IOPC IN OPC = CYA-CIC-IOPC IN CYA AND
                    CAN-NUM-ICAN IN CAN = CYA-NUM-ICAN IN CYA )
                      GO TO FIN-FIJ-SAFE.
           MOVE 'TAB' TO MSC-COD-SIST.
           MOVE 'TCYA' TO MSC-COD-TMSC IN MSC.
           MOVE CYA-IND-TCYA IN CYA TO MSC-COD-CMSC IN MSC.
           MOVE SPACES TO MSC-CIC-CMSC IN MSC.
           PERFORM BUS-MSC.
           IF MSC-CIC-CMSC IN MSC = 'CAJA'
               MOVE FIO-GET-KEY-UPD TO FIO-CMND
               PERFORM COL-FIO-CRS
               PERFORM MOVE-SAFE
               MOVE FIO-MOD TO FIO-CMND
               PERFORM COL-FIO-CRS
           ELSE
               MOVE FIO-GET-KEY-UPD TO FIO-CMND
               PERFORM COL-FIO-CRS
               PERFORM MOVE-SAFE-1
               MOVE FIO-MOD TO FIO-CMND
               PERFORM COL-FIO-CRS.
           IF FIO-STAT-OKS
               MOVE FIO-GET-NXT TO FIO-CMND
               PERFORM COL-FIO-CYA
               GO TO CIC-FIJ-SAFE
           ELSE
               MOVE 'COL' TO MSG-COD-SIST
               MOVE 'SAFECRGERR' TO MSG-COD-MENS
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS.
       FIN-FIJ-SAFE.
           EXIT.
       CRG-AUTO SECTION.
       INI-CRG-AUTO.
           MOVE SPACES TO MSG-COD-MENS.
           PERFORM FST-CYA-CAN.
       CIC-CRG-AUTO.
           PERFORM COL-FIO-CYA.
           IF NOT ( FIO-STAT-OKS                                  AND
                    OPC-CIC-IOPC IN OPC = CYA-CIC-IOPC IN CYA AND
                    CAN-NUM-ICAN IN CAN = CYA-NUM-ICAN IN CYA )
                      GO TO FIN-CRG-AUTO.
           IF CYA-IND-MAUT IN CYA NOT = 'S'
               MOVE FIO-GET-NXT TO FIO-CMND
               GO TO CIC-CRG-AUTO.
           IF CYA-SGV-LIQU IN CYA > ZEROES
               MOVE '0670'          TO ICC-COD-TRAN IN ICC
           ELSE
               MOVE '0770'          TO ICC-COD-TRAN IN ICC.
           MOVE '01'                TO ICC-IND-INDI IN ICC.
           MOVE CYA-CIC-ICYA IN CYA TO ICC-COD-CCTE IN ICC.
           IF CYA-SGV-LIQU IN CYA > ZEROES
               MOVE  '000000000072' TO ICC-COD-SERI IN ICC
           ELSE
               MOVE  '000000000052' TO ICC-COD-SERI IN ICC.
           MOVE ZEROES              TO ICC-SGV-VPE2 IN ICC.
           MOVE CYA-SGV-LIQU IN CYA TO ICC-SGV-VPE2 IN ICC.
           MOVE '0'                 TO ICC-IND-TCAM IN ICC.
           MOVE 1                   TO ICC-SGV-VCON IN ICC.
           MOVE OPC-COD-OFOC IN OPC TO ICC-COD-OFOC IN ICC.
           MOVE SPACES              TO ICC-COD-UBIC IN ICC.
           MOVE SPACES              TO ICC-COD-ITRE IN ICC.
           MOVE SPACES              TO ICC-GLS-DISP IN ICC.
      *ISP PONE VALORES EN VARIABLES 'FIO' PARA QUE EN CASO DE FALLAR
      *    EL WRITE, LAS DECLARATIVAS ENTREGEN INFORMACION CORRECTA.
      *    NO SE USA FIO, PUES ARCHIVO SAM ==> CLAUSULA 'RBA'
           MOVE FIO-PUT TO FIO-CMND.
           MOVE 'COLVSAF' TO FIO-VOID.
           MOVE ICC TO FIO-DFLD.
           MOVE 100 TO FIO-RLEN.
           EXEC CICS WRITE
                       DATASET('COLVSAF')
                       FROM(ICC)
                       LENGTH(100)
                       RIDFLD(SAF-COD-TRN)
                       RBA
           END-EXEC.
           IF FIO-STAT-OKS
               MOVE FIO-GET-NXT TO FIO-CMND
               GO TO CIC-CRG-AUTO
           ELSE
               MOVE 'COL' TO MSG-COD-SIST
               MOVE 'SAFECRGERR' TO MSG-COD-MENS
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS.
        FIN-CRG-AUTO.
           EXIT.
       VRF-CAJA SECTION.
       INI-VRF-CAJA.
      *ISP SUPONE QUE ACTIVARA LA CANCELACION PORQUE NO HAY CARGOS CON
      *    CODIGO INTERNO = 'CAJA'
      *     MOVE 'N' TO WSS-IND-CAJA.
           PERFORM FST-CYA-CAN.
       CIC-VRF-CAJA.
           PERFORM COL-FIO-CYA.
           IF NOT ( FIO-STAT-OKS                                  AND
                    OPC-CIC-IOPC IN OPC = CYA-CIC-IOPC IN CYA AND
                    CAN-NUM-ICAN IN CAN = CYA-NUM-ICAN IN CYA )
                      GO TO FIN-VRF-CAJA.
           MOVE 'TAB' TO MSC-COD-SIST.
           MOVE 'TCYA' TO MSC-COD-TMSC IN MSC.
           MOVE CYA-IND-TCYA IN CYA TO MSC-COD-CMSC IN MSC.
           PERFORM BUS-MSC.
           IF MSG-COD-MENS = SPACES
               IF MSC-CIC-CMSC IN MSC = 'CAJA'
      *             MOVE 'S' TO WSS-IND-CAJA
      *             MOVE 'COL' TO MSG-COD-SIST
      *             MOVE 'INDTCYACAJA' TO MSG-COD-MENS
      *             PERFORM GET-MSG
      *             MOVE MSG-GLS-DESC TO FRM-MEN2
                   GO TO FIN-VRF-CAJA.
           MOVE FIO-GET-NXT TO FIO-CMND.
           GO TO CIC-VRF-CAJA.
       FIN-VRF-CAJA.
           EXIT.
       REL-COL-SAF SECTION.
       INI-REL-COL-SAF.
           MOVE SPACES TO MSG-COD-MENS.
      *ISP INICIO CODIGO TEMPORAL
      *ISP NO RESCATA CLAVE SAFE DESDE ARCHIVO RCE SINO QUE
      *    LA OBTIENE DESDE DLC-KEY-IDLO
           MOVE CAN-CIC-IOPC IN CAN TO DLC-CIC-IOPC IN DLC.
           MOVE ZEROES              TO DLC-NUM-IDLC IN DLC.
           MOVE FIO-GET-NLS TO FIO-CMND.
           PERFORM COL-FIO-DLC.
           IF NOT ( FIO-STAT-OKS AND
                    CAN-CIC-IOPC IN CAN = DLC-CIC-IOPC IN DLC )
                      MOVE 'DLC    OPCNX' TO MSG-COD-MENS
                      GO TO MSG-REL-COL-SAF.
           MOVE DLC-CIC-IOPC IN DLC TO OPC-CIC-IOPC IN OPC.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM COL-FIO-OPC.
           MOVE OPC-COD-TOOC IN OPC TO TOC-COD-TOCR IN TOC.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM COL-FIO-TOC.
           IF OPC-MSC-TTRN IN OPC NOT = 'C'
               MOVE DLC-KEY-IDLC IN DLC TO BCD-DAT6-EBCD IN BCD-VARI
               GO TO LEE-REG-SAFE.
      *ISP INICIO CODIGO ANTIGUO QUE DEBE RESTAURARSE
           MOVE CAN-CAI-IOPC IN CAN TO RCE-CAI-IOPC IN RCE.
           MOVE CAN-IIC-IOPC IN CAN TO RCE-IIC-IOPC IN RCE.
           MOVE DLC-NUM-IDLC IN DLC TO RCE-NUM-IDLC IN RCE.
      *    MOVE ZEROES TO              RCE-NUM-IDLC IN RCE.
           MOVE FIO-GET-KEY TO FIO-CMND
           PERFORM COL-FIO-RCE.
           IF NOT FIO-STAT-OKS
               MOVE 'RCEIOPCNEX' TO MSG-COD-MENS
               GO TO MSG-REL-COL-SAF
           ELSE
               MOVE RCE-KEY-SAFE IN RCE TO BCD-DAT6-EBCD IN BCD-VARI.
      *ISP FINAL CODIGO ANTIGUO QUE DEBE RESTAURARSE
      *     MOVE DLC-KEY-IDLO IN DLC TO BCD-DAT6-EBCD IN BCD-VARI.
      *ISP FINAL TEMPORAL
       LEE-REG-SAFE.
           MOVE BCD-DAT6-EBCD IN BCD-VARI TO BCD-DAT6-INT IN BCD-VARI.
           MOVE BCD-DAT6 IN BCD-VARI TO CRS-KEY-ICRS IN CRS.
           EXEC CICS HANDLE CONDITION
                     NOTOPEN  (INI-FUNC-CRS)
                     DSIDERR  (INI-FUNC-CRS)
                     SYSIDERR (INI-FUNC-CRS)
           END-EXEC.
      *ISP BUSCA OPERACION EN ARCHIVO SAFE
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM COL-FIO-CRS.
           IF NOT FIO-STAT-OKS
                    MOVE 'CRSIOPCNEX' TO MSG-COD-MENS
                    GO TO MSG-REL-COL-SAF.
           IF ( CRS-IND-ACTU IN CRS = '01'   AND
                CRS-IND-PNEG IN CRS = '02' ) OR
              ( CRS-IND-ACTU IN CRS = '01'   AND
                CRS-IND-PNEG IN CRS = '09' ) OR
              ( CRS-IND-ACTU IN CRS = '02'   AND
                CRS-IND-PNEG IN CRS = '00' ) OR
              ( CRS-IND-ACTU IN CRS = '09'   AND
                CRS-IND-PNEG IN CRS = '00' )
                 MOVE 'SAFIOPCNFIJ' TO MSG-COD-MENS
                 GO TO MSG-REL-COL-SAF.
           IF CRS-NUM-IVEN IN CRS NOT = VEN-NUM-IVEN IN CAN-FLD AND
             ( CRS-IND-ACTU IN CRS NOT = '01'   AND
               CRS-IND-PNEG IN CRS NOT = '01' )
                MOVE 'SAFIOPCNVEN' TO MSG-COD-MENS.
       MSG-REL-COL-SAF.
           IF MSG-COD-MENS > SPACES
               MOVE 'COL' TO MSG-COD-SIST
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS.
           GO TO FIN-REL-COL-SAF.
       INI-FUNC-CRS.
           MOVE 'SAFIOPCNDIS' TO MSG-COD-MENS.
           MOVE 'COL' TO MSG-COD-SIST.
           PERFORM GET-MSG.
           MOVE MSG-GLS-DESC TO FRM-MENS.
       FIN-REL-COL-SAF.
           EXIT.
       INI-CAN SECTION.
       INI-INI-CAN.
           MOVE SPACES TO MSG-COD-MENS.
           MOVE ZEROES TO WSS-SGV-CAPT IN WSS-VARI.
           MOVE ZEROES TO WSS-SGV-FINL IN WSS-VARI.
           MOVE ZEROES TO WSS-NUM-VCVG IN WSS-VARI.
           MOVE ZEROES TO WSS-NUM-VCCM IN WSS-VARI.
           MOVE ZEROES TO WSS-NUM-VCCO IN WSS-VARI.
           MOVE ZEROES TO WSS-NUM-VCCV IN WSS-VARI.
           PERFORM RST-DLC VARYING WSS-NUM-IDLC FROM 1 BY 1
                             UNTIL WSS-NUM-IDLC > 500.
       FIN-INI-CAN.
           EXIT.
       RST-DLC SECTION.
       INI-RST-DLC.
           MOVE ZEROES TO WSS-SGV-CAPD(WSS-NUM-IDLC)
                          WSS-SGV-FINA(WSS-NUM-IDLC).
       FIN-RST-DLC.
           EXIT.
       PRO-REV SECTION.
       INI-PRO-REV.
           MOVE SPACES TO MSG-COD-MENS.
      *ISP RESPALDA CANCELACION ANTIGUA
           MOVE CAN TO CAN-BKP.
      *ISP CAMBIA STATUS A CANCELACION ANTIGUA
           MOVE 'R' TO CAN-MSC-STAT IN CAN.
           MOVE FIO-MOD TO FIO-CMND.
           PERFORM COL-FIO-CAN.
           IF NOT FIO-STAT-OKS
               MOVE 'COL' TO MSG-COD-SIST
               MOVE 'CAN    REVKO' TO MSG-COD-MENS
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS
               GO TO FIN-PRO-REV.
           PERFORM PRO-REV-DLC.
      *ISP RESPALDA NUMERO DE CANCELACION ANTIGUA
           MOVE CAN-NUM-ICAN IN CAN TO WSS-NUM-ICAN-OLD.
      *ISP BUSCA NUEVA CANCELACION A GENERAR
           PERFORM BUS-NEW-CAN.
      *ISP RESPALDA NUMERO DE CANCELACION NUEVA
           MOVE CAN-NUM-ICAN IN CAN TO WSS-NUM-ICAN-NEW.
      *ISP RESTAURA CANCELACION ANTIGUA
           MOVE CAN-BKP TO CAN.
      *ISP INVIERTE SIGNO DE CAMPOS
           SUBTRACT CAN-SGV-GAST IN CAN FROM 0 GIVING
                    CAN-SGV-GAST IN CAN.
           SUBTRACT CAN-SGV-TPAG IN CAN FROM 0 GIVING
                    CAN-SGV-TPAG IN CAN.
           SUBTRACT CAN-SGV-TREN IN CAN FROM 0 GIVING
                    CAN-SGV-TREN IN CAN.
           SUBTRACT CAN-NUM-TVCC IN CAN FROM 0 GIVING
                    CAN-NUM-TVCC IN CAN.
           SUBTRACT CAN-SGV-DIFE IN CAN FROM 0 GIVING
                    CAN-SGV-DIFE IN CAN.
      *ALDI
      *ISP REVERSA CYA
           PERFORM PRO-REV-CYA.
           IF MSG-COD-MENS > SPACES
               GO TO FIN-PRO-REV.
      *ISP REVERSA RCV
      *     IF NOT (CAN-MSC-FCAN IN CAN = 'T' AND
      *        CAN-MSC-ECAN IN CAN = 'T' )
               PERFORM PRO-REV-RCV.
               IF MSG-COD-MENS > SPACES
                   GO TO FIN-PRO-REV.
      *ISP REVERSA ITR
           PERFORM PRO-REV-ITR.
           IF MSG-COD-MENS > SPACES
               GO TO FIN-PRO-REV.
      *ISP GRABA NUEVA CANELACION
           MOVE 'V' TO CAN-MSC-STAT IN CAN.
           MOVE WSS-NUM-ICAN-NEW TO CAN-NUM-ICAN IN CAN.
           PERFORM PUT-FHOY.
           MOVE FIO-PUT TO FIO-CMND.
           PERFORM COL-FIO-CAN.
           IF NOT FIO-STAT-OKS
               MOVE 'COL' TO MSG-COD-SIST
               MOVE 'CANNEW REVKO' TO MSG-COD-MENS
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO REV-MSG
               GO TO FIN-PRO-REV.
      *ISP LEE ( UPD ) CANCELACION RECIEN GENERADA PARA SEGUIR
      *    PROCESO NORMAL DE COMANDO CAN
           MOVE FIO-GET-KEY-UPD TO FIO-CMND.
           PERFORM COL-FIO-CAN.
           IF FIO-STAT-OKS
               MOVE 'COL' TO MSG-COD-SIST
               MOVE 'CAN    REVOK' TO MSG-COD-MENS
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO REV-MSG-MSG
               MOVE CAN-KEY-ICAN IN CAN TO REV-MSG-CAN
      *ISP RESETEA STATUS DE REVERSA A OK
               MOVE SPACES TO MSG-COD-MENS
           ELSE
               MOVE 'COL' TO MSG-COD-SIST
               MOVE 'CANNEW REVNO' TO MSG-COD-MENS
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO REV-MSG.
       FIN-PRO-REV.
           EXIT.
       PRO-REV-DLC SECTION.
       INI-PRO-REV-DLC.
           MOVE CAN-CIC-IOPC IN CAN TO DLC-CIC-IOPC IN DLC.
           MOVE ZEROES              TO DLC-NUM-IDLC IN DLC.
           MOVE FIO-GET-NLS TO FIO-CMND.
           PERFORM COL-FIO-DLC.
           IF NOT (FIO-STAT-OKS AND
              CAN-CIC-IOPC IN CAN = DLC-CIC-IOPC IN DLC)
               GO TO FIN-PRO-REV-DLC.
           MOVE FIO-GET-KEY-UPD TO FIO-CMND.
           PERFORM COL-FIO-DLC.
           MOVE CAN-FEC-FDVA IN CAN TO DLC-FEC-FDEV IN DLC.
           MOVE FIO-MOD TO FIO-CMND.
           PERFORM COL-FIO-DLC.
       FIN-PRO-REV-DLC.
           EXIT.
       PRO-REV-CYA SECTION.
       INI-PRO-REV-CYA.
      *ISP TOMA EL PRIMER CYA
      *ISP ANTES PRO-REV-CYA USABA VARIABLE WSS-NUM-ICYA, ELIMINAR
      *    UNA VEZ VERIFICADO QUE PRO-REV-CYA FUNCIONA OK SIN ELLA
           MOVE 1                   TO CYA-NUM-ICYA IN CYA.
           MOVE CAN-CIC-IOPC IN CAN TO CYA-CIC-IOPC IN CYA.
       CIC-PRO-REV-CYA.
           MOVE WSS-NUM-ICAN-OLD    TO CYA-NUM-ICAN IN CYA.
           MOVE FIO-GET-NLS TO FIO-CMND.
           PERFORM COL-FIO-CYA.
           IF FIO-STAT-OKS AND
              CAN-CIC-IOPC IN CAN = CYA-CIC-IOPC IN CYA AND
              WSS-NUM-ICAN-OLD    = CYA-NUM-ICAN IN CYA
                 SUBTRACT CYA-SGV-LIQU IN CYA FROM 0 GIVING
                          CYA-SGV-LIQU IN CYA
                 MOVE WSS-NUM-ICAN-NEW TO CYA-NUM-ICAN IN CYA
                 MOVE FIO-PUT TO FIO-CMND
                 PERFORM COL-FIO-CYA
                 IF FIO-STAT-OKS
                     ADD 1 TO CYA-NUM-ICYA IN CYA
                     GO TO CIC-PRO-REV-CYA
                 ELSE
                     MOVE 'COL' TO MSG-COD-SIST
                     MOVE 'CYA    REVKO' TO MSG-COD-MENS
                     PERFORM GET-MSG
                     MOVE MSG-GLS-DESC TO FRM-MENS.
       FIN-PRO-REV-CYA.
           EXIT.
       PRO-REV-RCV SECTION.
       INI-PRO-REV-RCV.
           MOVE CAN-CIC-IOPC IN CAN TO RCV-CIC-IOPC IN RCV.
           MOVE CAN-CIC-IOPC IN CAN TO RCV-CIC-IOPV IN RCV.
           IF CAN-MSC-FCAN IN CAN = 'T' AND
              CAN-MSC-ECAN IN CAN = 'T'
               MOVE ZEROES TO RCV-NUM-IVCT IN RCV
           ELSE
               MOVE VEN-NUM-IVEN IN CAN-FLD TO RCV-NUM-IVCT IN RCV.
           MOVE WSS-NUM-ICAN-OLD TO RCV-NUM-ICAN IN RCV.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM COL-FIO-RCV.
           IF NOT FIO-STAT-OKS
               GO TO FIN-PRO-REV-RCV.
           MOVE WSS-NUM-ICAN-NEW TO RCV-NUM-ICAN IN RCV.
           IF NOT (CAN-MSC-FCAN IN CAN = 'T' AND
              CAN-MSC-ECAN IN CAN = 'T' )
               SUBTRACT RCV-SGV-CAPI IN RCV FROM 0 GIVING
                        RCV-SGV-CAPI IN RCV
               SUBTRACT RCV-SGV-FINA IN RCV FROM 0 GIVING
                        RCV-SGV-FINA IN RCV
               SUBTRACT RCV-SGV-REAJ IN RCV FROM 0 GIVING
                        RCV-SGV-REAJ IN RCV.
           MOVE FIO-PUT TO FIO-CMND.
           PERFORM COL-FIO-RCV.
           IF NOT FIO-STAT-OKS
               MOVE 'COL' TO MSG-COD-SIST
               MOVE 'RCV    REVKO' TO MSG-COD-MENS
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS.
       FIN-PRO-REV-RCV.
           EXIT.
       PRO-REV-ITR SECTION.
       INI-PRO-REV-ITR.
           MOVE 'ITR-KEY-IICG' TO FIO-AKEY.
           MOVE CAN-CIC-IOPC IN CAN     TO ITR-CIC-IOPC IN ITR.
           MOVE WSS-NUM-ICAN-OLD        TO ITR-NUM-ICAN IN ITR.
           MOVE CAN-CIC-IOPC IN CAN     TO ITR-CIC-IOPV IN ITR.
           MOVE ZEROES                  TO ITR-NUM-IVCT IN ITR.
           MOVE 'INT'                   TO ITR-IND-TTAS IN ITR.
           MOVE ZEROES                  TO ITR-FEC-FINI IN ITR.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM COL-FIO-ITR.
           IF FIO-STAT-OKS
                MOVE WSS-NUM-ICAN-NEW TO
                     ITR-NUM-ICAN IN ITR
                MOVE FIO-PUT TO FIO-CMND
                PERFORM COL-FIO-ITR
                IF NOT FIO-STAT-OKS
                     MOVE 'COL' TO MSG-COD-SIST
                     MOVE 'ITR    REVKO' TO MSG-COD-MENS
                     PERFORM GET-MSG
                     MOVE MSG-GLS-DESC TO FRM-MENS.
       FIN-PRO-REV-ITR.
           EXIT.
       BUS-NEW-CAN SECTION.
       INI-BUS-NEW-CAN.
           MOVE 999 TO CAN-NUM-ICAN IN CAN.
           MOVE FIO-GET-LEQ TO FIO-CMND.
           PERFORM COL-FIO-CAN.
           ADD 1 TO CAN-NUM-ICAN IN CAN.
           MOVE CAN-NUM-ICAN IN CAN TO CAN-NUM-ICAN IN CAN-FLD.
       FIN-BUS-NEW-CAN.
           EXIT.
       PUT-FHOY SECTION.
       INI-PUT-FHOY.
           MOVE HOY-DHOY TO CAN-NUM-DOUT IN CAN.
           MOVE HOY-MHOY TO CAN-NUM-MOUT IN CAN.
           MOVE HOY-SHOY TO CAN-NUM-SOUT IN CAN.
           MOVE HOY-AHOY TO CAN-NUM-AOUT IN CAN.
       FIN-PUT-FHOY.
           EXIT.
       MOVE-SAFE SECTION.
       INI-MOVE-SAFE.
           IF WSS-IND-ALG NOT = 'A' AND
              SCR-CMND = 'REV'
               SUBTRACT CAN-SGV-GAST IN CAN FROM 0 GIVING
                        CAN-SGV-GAST IN CAN
               SUBTRACT CYA-SGV-LIQU IN CYA FROM 0 GIVING
                         CYA-SGV-LIQU IN CYA.
           SUBTRACT CAN-SGV-GAST IN CAN FROM CYA-SGV-LIQU IN CYA
                    GIVING WSS-SGV-LIQU IN WSS-VARI.
           MOVE HOY-DHOY TO CAN-NUM-DOUT IN CAN.
           MOVE HOY-MHOY TO CAN-NUM-MOUT IN CAN.
           MOVE HOY-AHOY TO CAN-NUM-AOUT IN CAN.
           IF ( WSS-CAN-MSC-STAT = 'S' OR
                WSS-CAN-MSC-STAT = 'W' ) AND
              CRS-IND-ACTU IN CRS = '03' AND
              CRS-IND-PNEG IN CRS = '00'
               MOVE '03' TO CRS-IND-ACTU IN CRS
               MOVE '01' TO CRS-IND-PNEG IN CRS
           ELSE
               MOVE '01' TO CRS-IND-ACTU IN CRS
               MOVE '01' TO CRS-IND-PNEG IN CRS.
           IF SCR-CMND = 'REV'
               SUBTRACT WSS-SGV-LIQU IN WSS-VARI FROM
                                  CRS-VAL-VCNC IN CRS
               SUBTRACT CAN-SGV-GAST IN CAN      FROM
                                  CRS-VAL-GNEG IN CRS
           ELSE
               ADD WSS-SGV-LIQU IN WSS-VARI        TO
                                  CRS-VAL-VCNC IN CRS
               ADD CAN-SGV-GAST IN CAN             TO
                                  CRS-VAL-GNEG IN CRS.
           MOVE CAN-MSC-CANC IN CAN-FLD TO CRS-MSC-CANC IN CRS.
           MOVE CAN-MSC-CANC IN CAN-FLD TO CAN-MSC-CANC IN CAN.
           MOVE CAN-COD-OFCA IN CAN-FLD TO CRS-COD-OFRC IN CRS.
           MOVE CAN-NUM-ACAN IN CAN-FLD TO CRS-NUM-ACAN IN CRS.
           MOVE CAN-NUM-MCAN IN CAN-FLD TO CRS-NUM-MCAN IN CRS.
           MOVE CAN-NUM-DCAN IN CAN-FLD TO CRS-NUM-DCAN IN CRS.
           PERFORM ACT-VEN-SAFE.
           IF WSS-IND-ALG NOT = 'A' AND
              SCR-CMND = 'REV'
               SUBTRACT CAN-SGV-GAST IN CAN FROM 0 GIVING
                        CAN-SGV-GAST IN CAN
               SUBTRACT CYA-SGV-LIQU IN CYA FROM 0 GIVING
                         CYA-SGV-LIQU IN CYA.
       FIN-MOVE-SAFE.
           EXIT.
       MOVE-SAFE-1 SECTION.
       INI-MOVE-SAFE-1.
           IF WSS-IND-ALG NOT = 'A' AND
              SCR-CMND = 'REV'
               SUBTRACT CAN-SGV-GAST IN CAN FROM 0 GIVING
                        CAN-SGV-GAST IN CAN
               SUBTRACT CYA-SGV-LIQU IN CYA FROM 0 GIVING
                         CYA-SGV-LIQU IN CYA.
           IF CRS-IND-ACTU IN CRS = '00' AND
              CRS-IND-PNEG IN CRS = '00'
               MOVE '01' TO CRS-IND-ACTU IN CRS
               MOVE '04' TO CRS-IND-PNEG IN CRS
           ELSE
           IF CRS-IND-ACTU IN CRS = '03' AND
              CRS-IND-PNEG IN CRS = '00'
               MOVE '03' TO CRS-IND-ACTU IN CRS
               MOVE '04' TO CRS-IND-PNEG IN CRS.
           SUBTRACT CAN-SGV-GAST IN CAN FROM CYA-SGV-LIQU IN CYA
                    GIVING WSS-SGV-LIQU IN WSS-VARI.
           IF SCR-CMND = 'REV'
               SUBTRACT WSS-SGV-LIQU IN WSS-VARI FROM
                                  CRS-VAL-PNEG IN CRS
           ELSE
               ADD WSS-SGV-LIQU IN WSS-VARI        TO
                                  CRS-VAL-PNEG IN CRS.
           MOVE CAN-MSC-CANC IN CAN-FLD TO CRS-MSC-CANC IN CRS.
           MOVE CAN-MSC-CANC IN CAN-FLD TO CAN-MSC-CANC IN CAN.
           MOVE CAN-COD-OFCA IN CAN-FLD TO CRS-COD-OFRC IN CRS.
           MOVE CAN-NUM-ACAN IN CAN-FLD TO CRS-NUM-ACAN IN CRS.
           MOVE CAN-NUM-MCAN IN CAN-FLD TO CRS-NUM-MCAN IN CRS.
           MOVE CAN-NUM-DCAN IN CAN-FLD TO CRS-NUM-DCAN IN CRS.
           PERFORM ACT-VEN-SAFE.
           IF WSS-IND-ALG NOT = 'A' AND
              SCR-CMND = 'REV'
               SUBTRACT CAN-SGV-GAST IN CAN FROM 0 GIVING
                        CAN-SGV-GAST IN CAN
               SUBTRACT CYA-SGV-LIQU IN CYA FROM 0 GIVING
                         CYA-SGV-LIQU IN CYA.
       FIN-MOVE-SAFE-1.
           EXIT.
       MOVE-SAFE-2 SECTION.
       INI-MOVE-SAFE-2.
           IF CRS-IND-ACTU IN CRS = '00' AND
              CRS-IND-PNEG IN CRS = '00'
               MOVE '01' TO CRS-IND-ACTU IN CRS
               MOVE '04' TO CRS-IND-PNEG IN CRS
           ELSE
           IF CRS-IND-ACTU IN CRS = '03' AND
              CRS-IND-PNEG IN CRS = '00'
               MOVE '03' TO CRS-IND-ACTU IN CRS
               MOVE '04' TO CRS-IND-PNEG IN CRS.
           MOVE CAN-MSC-CANC IN CAN-FLD TO CRS-MSC-CANC IN CRS.
           MOVE CAN-MSC-CANC IN CAN-FLD TO CAN-MSC-CANC IN CAN.
           MOVE CAN-COD-OFCA IN CAN-FLD TO CRS-COD-OFRC IN CRS.
           MOVE CAN-NUM-ACAN IN CAN-FLD TO CRS-NUM-ACAN IN CRS.
           MOVE CAN-NUM-MCAN IN CAN-FLD TO CRS-NUM-MCAN IN CRS.
           MOVE CAN-NUM-DCAN IN CAN-FLD TO CRS-NUM-DCAN IN CRS.
           PERFORM ACT-VEN-SAFE.
       FIN-MOVE-SAFE-2.
           EXIT.
       ACT-VEN-SAFE SECTION.
       INI-ACT-VEN-SAFE.
           IF CAN-MSC-FCAN IN CAN = 'T' AND
              WSS-I IN WSS-VARI   = ZEROES
               MOVE 1 TO WSS-I IN WSS-VARI
               IF SCR-CMND = 'REV'
                   SUBTRACT 1 FROM CRS-NUM-IVEN IN CRS
                   IF CRS-NUM-IVEN IN CRS NOT > ZEROES
                       MOVE 1 TO CRS-NUM-IVEN IN CRS
                   ELSE
                       NEXT SENTENCE
               ELSE
                   ADD 1 TO CRS-NUM-VNEG IN CRS
                   ADD 1 TO CRS-NUM-IVEN IN CRS.
       FIN-ACT-VEN-SAFE.
           EXIT.
       COPY GNSBGCAM.
       COPY COLBFTMC.
       COPY COLBFCYA.
       COPY COLBFICG.
       COPY COLBFITR.
       COPY COLBFOPC.
       COPY COLBFDLC.
       COPY COLBFRCV.
       COPY COLBFROV.
       COPY COLBFRDT.
       COPY COLBFVEN.
       COPY COLBFRDC.
       COPY COLBFTOC.
       COPY SGCBFDBC.
       COPY SGCBFRCO.
       COPY SGCBFOPE.
       COPY GNSBGCPT.
       COPY TABBVUSR.
       COPY COLBGCLI.
       COPY GNSBGCIC.
       COPY GNSBFCIC.
       COPY TABBFVLR.
       COPY TABBFCAM.
       COPY COLBFRCE.
       COPY COLBFCRS.
       COPY COLBGVEN.
       COPY GNSBGINT.
       COPY GNSBGCVI.
       COPY COLBFEVC.
      * RBG/INI/12-NOV-1996
       COPY SGCBFDCE.
       COPY SGCBFDCP.
       COPY COLBFCOM.
      * RBG/FIN/12-NOV-1996  
       COPY GNSBGPES.
       COPY COLB3CAN.
       COPY COLB4CAN.
       COPY COLB5CAN.
       COPY GNSBGIER.
       COPY GNSBFERR.
       ANL-KEY-ROV SECTION.
       INI-ANL-KEY-ROV.
           IF NOT ( SCR-MSC-TCAN = 'N' OR 'P' OR 'R' )
               GO TO FIN-ANL-KEY-ROV.
           MOVE CAN-CIC-IOPC IN CAN TO ROV-CIC-IOPV IN ROV.
           MOVE CAN-NUM-ICAN IN CAN TO ROV-NUM-IVCT IN ROV.
           MOVE 'ROV-KEY-IVCT' TO FIO-AKEY.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM COL-FIO-ROV.
           IF NOT FIO-STAT-OKS
               GO TO FIN-ANL-KEY-ROV.
           MOVE ROV-CIC-IOPC IN ROV TO OPC-CIC-IOPC IN OPC.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM COL-FIO-OPC.
           IF FIO-STAT-OKS
               MOVE 'COL' TO MSG-COD-SIST
               MOVE 'ROVIOPCELI' TO MSG-COD-MENS
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS
               GO TO FIN-ANL-KEY-ROV.
       FIN-ANL-KEY-ROV.
           EXIT.
       ALG-C1 SECTION.
       INI-ALG-C1.
           MOVE CAN-CIC-IOPC IN CAN TO ROV-CIC-IOPV IN ROV.
           MOVE CAN-NUM-ICAN IN CAN TO ROV-NUM-IVCT IN ROV.
           MOVE 'ROV-KEY-IVCT' TO FIO-AKEY.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM COL-FIO-ROV.
           IF NOT FIO-STAT-OKS
               PERFORM PRO-REV
               GO TO FIN-ALG-C1.
           MOVE ROV-CIC-IOPC IN ROV TO OPC-CIC-IOPC IN OPC.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM COL-FIO-OPC.
           IF FIO-STAT-OKS
               MOVE 'COL' TO MSG-COD-SIST
               MOVE 'ROVIOPCELI' TO MSG-COD-MENS
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS
               GO TO FIN-ALG-C1.
           MOVE FIO-GET-KEY-UPD TO FIO-CMND.
           PERFORM COL-FIO-ROV.
           MOVE FIO-DEL TO FIO-CMND.
           PERFORM COL-FIO-ROV.
           PERFORM PRO-REV.
       FIN-ALG-C1.
           EXIT.
       ALG-A1 SECTION.
       INI-ALG-A1.
           MOVE CAN-CIC-IOPC IN CAN TO OPC-CIC-IOPC IN OPC.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM COL-FIO-OPC.
           MOVE 'A' TO WSS-IND-ALG IN WSS-VARI.
           MOVE CAN-CIC-IOPC IN CAN TO DLC-CIC-IOPC IN DLC.
           MOVE ZEROES              TO DLC-NUM-IDLC IN DLC.
           MOVE FIO-GET-NLS TO FIO-CMND.
           PERFORM COL-FIO-DLC.
           IF OPC-MSC-TTRN IN OPC NOT = 'C'
               MOVE DLC-KEY-IDLC IN DLC TO BCD-DAT6-EBCD IN BCD-VARI
               GO TO LEE-REG-SAFE-A1.
      *ISP INICIO CODIGO ANTIGUO QUE DEBE RESTAURARSE
           MOVE CAN-CAI-IOPC IN CAN TO RCE-CAI-IOPC IN RCE.
           MOVE CAN-IIC-IOPC IN CAN TO RCE-IIC-IOPC IN RCE.
           MOVE DLC-NUM-IDLC IN DLC TO RCE-NUM-IDLC IN RCE.
      *    MOVE ZEROES TO              RCE-NUM-IDLC IN RCE.
           MOVE FIO-GET-KEY TO FIO-CMND
           PERFORM COL-FIO-RCE.
           IF NOT FIO-STAT-OKS
               MOVE 'RCEIOPCNEX' TO MSG-COD-MENS
               MOVE 'CAN    REVKO' TO MSG-COD-MENS
               MOVE 'COL' TO MSG-COD-SIST
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS
               GO TO FIN-ALG-A1
           ELSE
               MOVE RCE-KEY-SAFE IN RCE TO BCD-DAT6-EBCD IN BCD-VARI.
      *ISP FINAL TEMPORAL
       LEE-REG-SAFE-A1.
           MOVE BCD-DAT6-EBCD IN BCD-VARI TO BCD-DAT6-INT IN BCD-VARI.
           MOVE BCD-DAT6 IN BCD-VARI TO CRS-KEY-ICRS IN CRS.
      *ISP BUSCA OPERACION EN ARCHIVO SAFE
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM COL-FIO-CRS.
           IF NOT FIO-STAT-OKS
               MOVE 'CAN    REVKO' TO MSG-COD-MENS
               MOVE 'COL' TO MSG-COD-SIST
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS
               GO TO FIN-ALG-A1.
           PERFORM FIJ-SAFE.
           IF MSG-COD-MENS > SPACES
               MOVE 'CAN    REVKO' TO MSG-COD-MENS
               MOVE 'COL' TO MSG-COD-SIST
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS.
       FIN-ALG-A1.
           EXIT.
       ALG-M1 SECTION.
       INI-ALG-M1.
           IF ADO-IND-ORIG = 'S' AND
              ADO-CMND = 'REV'
               PERFORM PRO-REV
           ELSE
               MOVE 'COL' TO MSG-COD-SIST
               MOVE 'REVSOLODSAFE' TO MSG-COD-MENS
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS.
       FIN-ALG-M1.
           EXIT.
       ALG-M2 SECTION.
       INI-ALG-M2.
           MOVE 'COL' TO MSG-COD-SIST.
           MOVE 'ANUOPCCREOPC' TO MSG-COD-MENS.
           PERFORM GET-MSG.
           MOVE MSG-GLS-DESC TO FRM-MENS.
       FIN-ALG-M2.
           EXIT.
       ALG-C2 SECTION.
       INI-ALG-C2.
           MOVE CAN-CIC-IOPC IN CAN TO ROV-CIC-IOPV IN ROV.
           MOVE CAN-NUM-ICAN IN CAN TO ROV-NUM-IVCT IN ROV.
           MOVE 'ROV-KEY-IVCT' TO FIO-AKEY.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM COL-FIO-ROV.
           IF NOT FIO-STAT-OKS
      *         PERFORM PRO-REV-1
               PERFORM PRO-REV
               GO TO FIN-ALG-C2.
           MOVE ROV-CIC-IOPC IN ROV TO OPC-CIC-IOPC IN OPC.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM COL-FIO-OPC.
           IF FIO-STAT-OKS
               MOVE 'COL' TO MSG-COD-SIST
               MOVE 'ROVIOPCELI' TO MSG-COD-MENS
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS
               GO TO FIN-ALG-C2.
           MOVE FIO-GET-KEY-UPD TO FIO-CMND.
           PERFORM COL-FIO-ROV.
           MOVE FIO-DEL TO FIO-CMND.
           PERFORM COL-FIO-ROV.
      *     PERFORM PRO-REV-1.
           PERFORM PRO-REV.
       FIN-ALG-C2.
           EXIT.
       ALG-A1-C1 SECTION.
       INI-ALG-A1-C1.
           PERFORM ALG-A1.
           IF MSG-COD-MENS > SPACES
               GO TO FIN-ALG-A1-C1.
           PERFORM ALG-C1.
       FIN-ALG-A1-C1.
           EXIT.
       PRO-REV-1 SECTION.
       INI-PRO-REV-1.
           MOVE SPACES TO MSG-COD-MENS.
      *ISP RESPALDA CANCELACION ANTIGUA
           MOVE CAN TO CAN-BKP.
      *ISP CAMBIA STATUS A CANCELACION ANTIGUA
           MOVE 'R' TO CAN-MSC-STAT IN CAN.
           MOVE FIO-MOD TO FIO-CMND.
           PERFORM COL-FIO-CAN.
           IF NOT FIO-STAT-OKS
               MOVE 'COL' TO MSG-COD-SIST
               MOVE 'CAN    REVKO' TO MSG-COD-MENS
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS
               GO TO FIN-PRO-REV-1.
      *ISP RESPALDA NUMERO DE CANCELACION ANTIGUA
           MOVE CAN-NUM-ICAN IN CAN TO WSS-NUM-ICAN-OLD.
      *ISP BUSCA NUEVA CANCELACION A GENERAR
           PERFORM BUS-NEW-CAN.
      *ISP RESPALDA NUMERO DE CANCELACION NUEVA
           MOVE CAN-NUM-ICAN IN CAN TO WSS-NUM-ICAN-NEW.
      *ISP RESTAURA CANCELACION ANTIGUA
           MOVE CAN-BKP TO CAN.
      *ISP GRABA NUEVA CANELACION
           MOVE 'V' TO CAN-MSC-STAT IN CAN.
           MOVE 'CIE' TO CAN-MSC-CANC IN CAN.
           MOVE WSS-NUM-ICAN-NEW TO CAN-NUM-ICAN IN CAN.
           PERFORM PUT-FHOY.
           MOVE FIO-PUT TO FIO-CMND.
           PERFORM COL-FIO-CAN.
           IF NOT FIO-STAT-OKS
               MOVE 'COL' TO MSG-COD-SIST
               MOVE 'CANNEW REVKO' TO MSG-COD-MENS
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO REV-MSG
               GO TO FIN-PRO-REV-1.
      *ISP LEE ( UPD ) CANCELACION RECIEN GENERADA PARA SEGUIR
      *    PROCESO NORMAL DE COMANDO CAN
           MOVE FIO-GET-KEY-UPD TO FIO-CMND.
           PERFORM COL-FIO-CAN.
           IF FIO-STAT-OKS
               MOVE 'COL' TO MSG-COD-SIST
               MOVE 'CAN    REVOK' TO MSG-COD-MENS
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO REV-MSG-MSG
               MOVE CAN-KEY-ICAN IN CAN TO REV-MSG-CAN
      *ISP RESETEA STATUS DE REVERSA A OK
               MOVE SPACES TO MSG-COD-MENS
           ELSE
               MOVE 'COL' TO MSG-COD-SIST
               MOVE 'CANNEW REVNO' TO MSG-COD-MENS
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO REV-MSG.
       FIN-PRO-REV-1.
           EXIT.
       BUS-IND-SFCR SECTION.
       INI-BUS-IND-SFCR.
           IF CAN-FEC-FOUT IN CAN NOT = HOY-FHOY
               MOVE 'COL' TO MSG-COD-SIST
               MOVE 'CANFOUTRVINV' TO MSG-COD-MENS
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS
               GO TO FIN-BUS-IND-SFCR.
           PERFORM GET-OPC.
           MOVE 'N' TO WSS-IND-RNOV IN WSS-VARI.
           MOVE 'N' TO WSS-IND-SAFE IN WSS-VARI.
           MOVE 'N' TO WSS-IND-CTCT IN WSS-VARI.
           MOVE CAN-CIC-IOPC IN CAN TO ROV-CIC-IOPV IN ROV.
           MOVE CAN-NUM-ICAN IN CAN TO ROV-NUM-IVCT IN ROV.
           MOVE 'ROV-KEY-IVCT' TO FIO-AKEY.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM COL-FIO-ROV.
           IF FIO-STAT-OKS
               MOVE 'S' TO WSS-IND-RNOV IN WSS-VARI.
           PERFORM VRF-CAJA-CC.
           PERFORM PRO-REV-CAN.
       FIN-BUS-IND-SFCR.
            EXIT.
       VRF-CAJA-CC SECTION.
       INI-VRF-CAJA-CC.
           MOVE CAN-CIC-IOPC IN CAN TO OPC-CIC-IOPC IN OPC.
           PERFORM FST-CYA-CAN.
       CIC-VRF-CAJA-CC.
           PERFORM COL-FIO-CYA.
           IF NOT ( FIO-STAT-OKS                                  AND
                     OPC-CIC-IOPC IN OPC = CYA-CIC-IOPC IN CYA AND
                     CAN-NUM-ICAN IN CAN = CYA-NUM-ICAN IN CYA )
                      GO TO FIN-VRF-CAJA-CC.
           MOVE 'TAB' TO MSC-COD-SIST.
           MOVE 'TCYA' TO MSC-COD-TMSC IN MSC.
           MOVE CYA-IND-TCYA IN CYA TO MSC-COD-CMSC IN MSC.
           PERFORM BUS-MSC.
           IF MSG-COD-MENS = SPACES
               IF MSC-CIC-CMSC IN MSC = 'CAJA' AND
                  WSS-IND-SAFE IN WSS-VARI = 'N'
                   MOVE 'S' TO WSS-IND-SAFE
               ELSE
                   IF MSC-CIC-CMSC IN MSC = 'CC' AND
                      WSS-IND-CTCT IN WSS-VARI = 'N'
                       MOVE 'S' TO WSS-IND-CTCT.
           MOVE FIO-GET-NXT TO FIO-CMND.
           GO TO CIC-VRF-CAJA-CC.
       FIN-VRF-CAJA-CC.
           EXIT.
       PRO-REV-CAN SECTION.
       INI-PRO-REV-CAN.
           IF CAN-MSC-FCAN IN CAN = 'T' AND
              CAN-MSC-ECAN IN CAN = 'T' AND
              CAN-MSC-STAT IN CAN = 'A'
               PERFORM ANL-KEY-ROV
               IF MSG-COD-MENS > SPACES
                   GO TO FIN-PRO-REV-CAN
               ELSE
                   PERFORM REV-RCV-REG
                   GO TO FIN-PRO-REV-CAN.
           IF WSS-IND-SAFE = 'S' AND
              WSS-IND-RNOV = 'N' AND
              WSS-IND-CTCT = 'N'
               IF CAN-MSC-STAT IN CAN = 'S'
                   PERFORM ALG-A1
                   IF MSG-COD-MENS NOT > SPACES
                       PERFORM PRO-REV
                   ELSE
                       NEXT SENTENCE
               ELSE
                   PERFORM ALG-M1
           ELSE
           IF WSS-IND-SAFE = 'N' AND
              WSS-IND-RNOV = 'N' AND
              WSS-IND-CTCT = 'S'
               PERFORM PRO-REV
           ELSE
           IF WSS-IND-SAFE = 'N' AND
              WSS-IND-RNOV = 'S' AND
              WSS-IND-CTCT = 'N'
               IF CAN-MSC-STAT IN CAN = 'C'
                   PERFORM ALG-C1
               ELSE
                   PERFORM ALG-M2
           ELSE
           IF WSS-IND-SAFE = 'S' AND
              WSS-IND-RNOV = 'N' AND
              WSS-IND-CTCT = 'S'
               IF CAN-MSC-STAT IN CAN = 'S'
                   PERFORM ALG-A1
                   IF MSG-COD-MENS NOT > SPACES
                       PERFORM PRO-REV
                   ELSE
                       NEXT SENTENCE
               ELSE
               IF CAN-MSC-STAT IN CAN = 'A'
                   PERFORM ALG-M1
               ELSE
                   NEXT SENTENCE
           ELSE
           IF WSS-IND-SAFE = 'S' AND
              WSS-IND-RNOV = 'S' AND
              WSS-IND-CTCT = 'N'
               IF CAN-MSC-STAT IN CAN = 'W'
                   PERFORM ALG-A1-C1
               ELSE
               IF CAN-MSC-STAT IN CAN = 'A' OR
                  CAN-MSC-STAT IN CAN = 'S'
                   PERFORM ALG-M2
               ELSE
               IF CAN-MSC-STAT IN CAN = 'C'
                   PERFORM ALG-M1
               ELSE
                   NEXT SENTENCE
           ELSE
           IF WSS-IND-SAFE = 'S' AND
              WSS-IND-RNOV = 'S' AND
              WSS-IND-CTCT = 'S'
               IF CAN-MSC-STAT IN CAN = 'W'
                   PERFORM ALG-A1-C1
               ELSE
               IF CAN-MSC-STAT IN CAN = 'A' OR
                  CAN-MSC-STAT IN CAN = 'S'
                   PERFORM ALG-M2
               ELSE
               IF CAN-MSC-STAT IN CAN = 'C'
                   PERFORM ALG-C2
               ELSE
                   NEXT SENTENCE
           ELSE
           IF WSS-IND-SAFE = 'N' AND
              WSS-IND-RNOV = 'S' AND
              WSS-IND-CTCT = 'S'
               IF CAN-MSC-STAT IN CAN = 'C'
                   PERFORM ALG-C1
               ELSE
               IF CAN-MSC-STAT IN CAN = 'A'
                   PERFORM ALG-M2
               ELSE
                   NEXT SENTENCE
           ELSE
               PERFORM PRO-REV.
       FIN-PRO-REV-CAN.
           EXIT.
       REV-RCV-REG SECTION.
       INI-REV-RCV-REG.
           MOVE CAN-CIC-IOPC IN CAN TO OPC-CIC-IOPC IN OPC.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM COL-FIO-OPC.
           MOVE OPC-COD-TOOC IN OPC TO TOC-COD-TOCR IN TOC.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM COL-FIO-TOC.
           MOVE OPC-VAL-SCRE IN OPC TO WSS-VAL-OCRE IN WSS-VARI.
           MOVE OPC-NUM-VCVG IN OPC TO WSS-NUM-VCVG IN WSS-VARI.
           PERFORM INI-DLC-TT VARYING WSS-NUM-IDLC FROM 1 BY 1
                             UNTIL WSS-NUM-IDLC > 499.
           PERFORM ANL-KEY-RCV.
           MOVE OPC-NUM-IVEN IN OPC TO VEN-NUM-IVEN IN VEN.
           MOVE CAN-CIC-IOPC IN CAN TO VEN-CIC-IOPC IN VEN.
           MOVE FIO-GET-KEY TO FIO-CMND.
       LUP-REV-RCV-REG.
           IF OPC-IND-VSTR IN OPC NOT = 'S'
               PERFORM COL-FIO-VEN
           ELSE
               PERFORM COL-OBT-VEN
               IF VEN-STAT-OKS
                   MOVE '00' TO FIO-STAT
               ELSE
                   MOVE '23' TO FIO-STAT.
           IF NOT ( FIO-STAT-OKS AND
               CAN-CIC-IOPC IN CAN = VEN-CIC-IOPC IN VEN)
               GO TO OUT-REV-RCV-REG.
           IF OPC-NUM-IVEN IN OPC NOT = VEN-NUM-IVEN IN VEN
               MOVE ZEROES TO WSS-SGV-CAPT IN WSS-VARI
               MOVE ZEROES TO WSS-SGV-FINL IN WSS-VARI.
           ADD 1 TO WSS-NUM-VCVG IN WSS-VARI.
           MOVE CAN-CIC-IOPC IN CAN TO RCV-CIC-IOPC IN RCV.
           MOVE CAN-NUM-ICAN IN CAN TO RCV-NUM-ICAN IN RCV.
           MOVE VEN-CIC-IOPC IN VEN TO RCV-CIC-IOPV IN RCV.
           MOVE VEN-NUM-IVEN IN VEN TO RCV-NUM-IVCT IN RCV.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM COL-FIO-RCV.
           MOVE FIO-STAT TO PGM-STAT-RCV.
           IF OPC-IND-VSTR IN OPC NOT = 'S'
               MOVE FIO-GET-KEY-UPD TO FIO-CMND
               PERFORM COL-FIO-VEN
           ELSE
      *    IF VEN-NUM-IVCT IN VEN = OPC-NUM-IVEN IN OPC
               MOVE 1 TO VEN-NUM-IVEN IN VEN
               MOVE FIO-GET-KEY-UPD TO FIO-CMND
               PERFORM COL-FIO-VEN.
           IF PGM-STAT-RCV-OKS
               MOVE RCV-SGV-CAPI IN RCV TO VEN-VAL-SCAP IN VEN
               MOVE RCV-SGV-FINA IN RCV TO VEN-VAL-SFIN IN VEN
           ELSE
               MOVE VEN-VAL-CAPI IN VEN TO VEN-VAL-SCAP IN VEN
               MOVE VEN-VAL-FINA IN VEN TO VEN-VAL-SFIN IN VEN
               SUBTRACT WSS-SGV-CAPT IN WSS-VARI FROM
                                           VEN-VAL-SCAP IN VEN
               SUBTRACT WSS-SGV-FINL IN WSS-VARI FROM
                                           VEN-VAL-SFIN IN VEN.
           IF TOC-MSC-OPEC = 'D'
               ADD VEN-VAL-SFIN IN VEN TO WSS-VAL-SDLC IN
                                       WSS-VARI(VEN-NUM-IDLC IN VEN)
               ADD VEN-VAL-SFIN IN VEN TO WSS-VAL-OCRE
           ELSE
               PERFORM OBT-RCV-ZNRE
               IF FIO-STAT-OKS
                   MOVE RCV-SGV-CAPI IN RCV TO WSS-VAL-SDLC IN
                                        WSS-VARI(VEN-NUM-IDLC IN VEN)
                   MOVE RCV-SGV-CAPI IN RCV TO WSS-VAL-OCRE
               ELSE
                   ADD VEN-VAL-SCAP IN VEN TO WSS-VAL-SDLC IN
                                       WSS-VARI(VEN-NUM-IDLC IN VEN)
                   ADD VEN-VAL-SCAP IN VEN TO WSS-VAL-OCRE.
           IF OPC-IND-VSTR IN OPC NOT = 'S'
               MOVE FIO-MOD TO FIO-CMND
               PERFORM COL-FIO-VEN
           ELSE
      *    IF VEN-NUM-IVCT IN VEN = OPC-NUM-IVEN IN OPC
               MOVE 1 TO VEN-NUM-IVEN IN VEN
               MOVE FIO-MOD TO FIO-CMND
               PERFORM COL-FIO-VEN
               MOVE VEN-NUM-IVCT IN VEN TO VEN-NUM-IVEN IN VEN.
           IF OPC-IND-VSTR IN OPC NOT = 'S'
               MOVE FIO-GET-NXT TO FIO-CMND
               GO TO LUP-REV-RCV-REG
           ELSE
               MOVE CAN-NUM-TVCC IN CAN TO WSS-NUM-VCVG IN WSS-VARI.
       OUT-REV-RCV-REG.
           PERFORM REV-OPC-TT.
           PERFORM REV-DLC-TT VARYING WSS-NUM-IDLC FROM 1 BY 1 UNTIL
                             WSS-NUM-IDLC > 499.
           PERFORM PRO-REV.
           MOVE 'A' TO CAN-MSC-STAT IN CAN.
           MOVE FIO-MOD TO FIO-CMND.
           PERFORM COL-FIO-CAN.
           IF FIO-STAT-OKS
               MOVE 'COL' TO MSG-COD-SIST
               MOVE 'CAN    REVOK' TO MSG-COD-MENS
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO REV-MSG-MSG
               MOVE CAN-KEY-ICAN IN CAN TO REV-MSG-CAN
               MOVE REV-MSG TO FRM-MENS
           ELSE
               MOVE 'COL' TO MSG-COD-SIST
               MOVE 'CANNEW REVNO' TO MSG-COD-MENS
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO REV-MSG
               MOVE REV-MSG TO FRM-MENS.
       FIN-REV-RCV-REG.
           EXIT.
       OBT-RCV-ZNRE SECTION.
       INI-OBT-RCV-ZNRE.
           MOVE VEN-CIC-IOPC IN VEN TO RCV-CIC-IOPV IN RCV.
           MOVE ZEROES              TO RCV-NUM-IVCT IN RCV.
           MOVE FIO-GET-KEY TO FIO-CMND.
       LUP-OBT-RCV-ZNRE.
           MOVE 'RCV-KEY-IVCT' TO FIO-AKEY.
           PERFORM COL-FIO-RCV.
           IF NOT FIO-STAT-OKS
               GO TO FIN-OBT-RCV-ZNRE.
           IF NOT (VEN-CIC-IOPC IN VEN = RCV-CIC-IOPV IN RCV AND
              RCV-NUM-IVCT IN RCV = ZEROES )
               MOVE FIO-STAT-NEX TO FIO-STAT
               GO TO FIN-OBT-RCV-ZNRE.
           MOVE RCV-KEY-ICAN TO CAN-KEY-ICAN IN CAN.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM COL-FIO-CAN.
           IF CAN-MSC-STAT IN CAN NOT = 'R' AND
              CAN-SGV-TPAG IN CAN NOT < ZEROES AND
              CAN-SGV-TREN IN CAN NOT < ZEROES
               MOVE CAN-CAI-IOPC IN CAN-FLD TO CAN-CAI-IOPC IN CAN
               MOVE CAN-IIC-IOPC IN CAN-FLD TO CAN-IIC-IOPC IN CAN
               MOVE CAN-NUM-ICAN IN CAN-FLD TO CAN-NUM-ICAN IN CAN
               MOVE FIO-GET-KEY TO FIO-CMND
               PERFORM COL-FIO-CAN
               GO TO FIN-OBT-RCV-ZNRE.
           MOVE FIO-GET-NXT TO FIO-CMND
           GO TO LUP-OBT-RCV-ZNRE.
       FIN-OBT-RCV-ZNRE.
           EXIT.
       INI-DLC-TT SECTION.
       INI-INI-DLC-TT.
           MOVE ZEROES TO WSS-VAL-SDLC(WSS-NUM-IDLC).
       FIN-INI-DLC-TT.
           EXIT.
       REV-OPC-TT SECTION.
       INI-REV-OPC-TT.
           MOVE CAN-CIC-IOPC IN CAN TO OPC-CIC-IOPC IN OPC.
           MOVE FIO-GET-KEY-UPD TO FIO-CMND.
           PERFORM COL-FIO-OPC.
           MOVE WSS-NUM-VCVG IN WSS-VARI TO OPC-NUM-VCVG IN OPC.
           MOVE WSS-VAL-OCRE TO OPC-VAL-SCRE IN OPC.
           MOVE FIO-MOD TO FIO-CMND.
           PERFORM COL-FIO-OPC.
       FIN-REV-OPC-TT.
           EXIT.
       REV-DLC-TT SECTION.
       INI-REV-DLC-TT.
           MOVE CAN-CIC-IOPC IN CAN TO DLC-CIC-IOPC IN DLC.
           MOVE WSS-NUM-IDLC        TO DLC-NUM-IDLC IN DLC.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM COL-FIO-DLC.
           IF NOT FIO-STAT-OKS
               MOVE 500 TO WSS-NUM-IDLC
               GO TO FIN-REV-DLC-TT.
           MOVE FIO-GET-KEY-UPD TO FIO-CMND.
           PERFORM COL-FIO-DLC.
           MOVE WSS-VAL-SDLC(WSS-NUM-IDLC) TO DLC-VAL-SDLC IN DLC.
           MOVE CAN-FEC-FDVA IN CAN        TO DLC-FEC-FDEV IN DLC.
      *     MOVE VEN-NUM-DVEN IN CAN-FLD TO DLC-NUM-DDEV IN DLC.
      *     MOVE VEN-NUM-MVEN IN CAN-FLD TO DLC-NUM-MDEV IN DLC.
      *     MOVE VEN-NUM-SVEN IN CAN-FLD TO DLC-NUM-SDEV IN DLC.
      *     MOVE VEN-NUM-AVEN IN CAN-FLD TO DLC-NUM-ADEV IN DLC.
           MOVE FIO-MOD TO FIO-CMND.
           PERFORM COL-FIO-DLC.
       FIN-REV-DLC-TT.
           EXIT.
       BUS-COR-ERR SECTION.
       INI-BUS-COR-ERR.
           MOVE 'COLPOCAN'           TO ERR-COD-PRGM IN ERR.
           MOVE SYS-SHOY IN SYS-VARI TO ERR-NUM-SEJE IN ERR.
           MOVE SYS-AHOY IN SYS-VARI TO ERR-NUM-AEJE IN ERR.
           MOVE SYS-MHOY IN SYS-VARI TO ERR-NUM-MEJE IN ERR.
           MOVE SYS-DHOY IN SYS-VARI TO ERR-NUM-DEJE IN ERR.
           MOVE 99                   TO ERR-NUM-CEJE IN ERR.
           MOVE 9999                 TO ERR-NUM-CERR IN ERR.
           MOVE FIO-GET-LEQ  TO FIO-CMND.
           PERFORM GNS-FIO-ERR.
           IF NOT (FIO-STAT-OKS AND
              ERR-COD-PRGM IN ERR  = 'COLPOCAN' AND
              SYS-SHOY IN SYS-VARI =  ERR-NUM-SEJE IN ERR AND
              SYS-AHOY IN SYS-VARI =  ERR-NUM-AEJE IN ERR AND
              SYS-MHOY IN SYS-VARI =  ERR-NUM-MEJE IN ERR AND
              SYS-DHOY IN SYS-VARI =  ERR-NUM-DEJE IN ERR )
               MOVE SYS-SHOY IN SYS-VARI TO ERR-NUM-SEJE IN ERR
               MOVE SYS-AHOY IN SYS-VARI TO ERR-NUM-AEJE IN ERR
               MOVE SYS-MHOY IN SYS-VARI TO ERR-NUM-MEJE IN ERR
               MOVE SYS-DHOY IN SYS-VARI TO ERR-NUM-DEJE IN ERR
               MOVE 1                    TO ERR-NUM-CEJE IN ERR
               MOVE 1                    TO ERR-NUM-CERR IN ERR
               MOVE 'COLPOCAN'           TO ERR-COD-PRGM IN ERR
               GO TO FIN-BUS-COR-ERR.
           ADD 1 TO ERR-NUM-CERR IN ERR.
       FIN-BUS-COR-ERR.
           EXIT.
       ANL-KEY-RCV SECTION.
       INI-ANL-KEY-RCV.
           MOVE ZEROES TO WSS-SGV-CAPT IN WSS-VARI.
           MOVE ZEROES TO WSS-SGV-FINL IN WSS-VARI.
           MOVE CAN-CIC-IOPC IN CAN TO RCV-CIC-IOPV IN RCV.
           MOVE OPC-NUM-IVEN IN OPC TO RCV-NUM-IVCT IN RCV.
           MOVE FIO-GET-NLS TO FIO-CMND.
       LUP-ANL-KEY-RCV.
           MOVE 'RCV-KEY-IVCT' TO FIO-AKEY.
           PERFORM COL-FIO-RCV.
           IF NOT (FIO-STAT-OKS AND
              CAN-CIC-IOPC IN CAN = RCV-CIC-IOPV IN RCV AND
              RCV-NUM-IVCT IN RCV = OPC-NUM-IVEN IN OPC )
               GO TO FIN-ANL-KEY-RCV.
           IF CAN-NUM-ICAN IN CAN NOT = RCV-NUM-ICAN IN RCV
               ADD RCV-SGV-CAPI IN RCV TO WSS-SGV-CAPT IN WSS-VARI
               ADD RCV-SGV-FINA IN RCV TO WSS-SGV-FINL IN WSS-VARI.
           MOVE FIO-GET-NXT TO FIO-CMND.
           GO TO LUP-ANL-KEY-RCV.
       FIN-ANL-KEY-RCV.
           EXIT.
       PUT-CYA-SAF SECTION.
       INI-PUT-CYA-SAF.
           MOVE SPACES TO MSG-COD-MENS.
           MOVE CAN-CIC-IOPC IN CAN TO OPC-CIC-IOPC IN OPC.
           PERFORM FST-CYA-CAN.
       LUP-PUT-CYA-SAF.
           PERFORM COL-FIO-CYA.
           IF NOT ( FIO-STAT-OKS                              AND
                    CAN-CIC-IOPC IN CAN = CYA-CIC-IOPC IN CYA AND
                    CAN-NUM-ICAN IN CAN = CYA-NUM-ICAN IN CYA )
                      GO TO FIN-PUT-CYA-SAF.
           MOVE FIO-GET-KEY-UPD TO FIO-CMND.
           PERFORM COL-FIO-CYA.
           MOVE 'TCYA' TO MSC-CIC-TMSC IN MSC.
           MOVE 'CAJA'    TO MSC-CIC-CMSC IN MSC.
           MOVE 'MSC-CIC-TABL' TO FIO-AKEY.
           MOVE FIO-GET-KEY TO FIO-CMND.
       LUP-BUS-CAJA.
           MOVE 'TAB' TO FIO-SIST.
           PERFORM GNS-FIO-MSC.
           IF NOT (FIO-STAT-OKS AND
              MSC-CIC-CMSC IN MSC = 'CAJA' AND
              MSC-CIC-TMSC IN MSC = 'TCYA' )
               GO TO FIN-PUT-CYA-SAF
           ELSE
               MOVE MSC-GLS-DAT1 IN MSC TO WSS-GLS-DATI IN WSS-VARI
               IF WSS-IND-CSAF IN WSS-VARI = ADO-ET21 AND
                  ADO-ET21 > SPACES
                   MOVE MSC-COD-CMSC IN MSC TO CYA-IND-TCYA IN CYA
               ELSE
                   MOVE 'MSC-CIC-TABL' TO FIO-AKEY
                   MOVE FIO-GET-NXT TO FIO-CMND
                   GO TO LUP-BUS-CAJA.
           MOVE FIO-MOD TO FIO-CMND.
           PERFORM COL-FIO-CYA.
           MOVE FIO-GET-NXT TO FIO-CMND.
           GO TO LUP-PUT-CYA-SAF.
       FIN-PUT-CYA-SAF.
           EXIT.
      *>>>>
