      *
      * COLBQCUR
      * Version 3.0.1 Nov-2005
      * 04-Sep-14 03:41 PM
      *
       SET-TAG-COLBQCUR SECTION.
       INI-SET-TAG-COLBQCUR.
           MOVE
           '<IDNMOD NOM=$COLBQCUR$ VSN=${VSNBQ}$ VGM=$3.0.1$
      -    'GEN=$04-Sep-14 03:41 PM$ FNC=${FNCBQ}$/>'
               TO WSS-CVT-ITEM.
       FIN-SET-TAG-COLBQCUR.
           EXIT.
           
       PUT-ALL-CUR SECTION.
       INI-PUT-ALL-CUR.
           PERFORM PUT-LDA-CUR.
       FIN-PUT-ALL-CUR.
           EXIT.
       
       PUT-LDA-CUR SECTION.
       INI-PUT-LDA-CUR.
           IF PGM-STAT-LDA-NUL
               GO TO FIN-PUT-LDA-CUR.
           IF NOT PGM-STAT-LDA-OKS
               PERFORM CLR-LDA-CUR
               GO TO FIN-PUT-LDA-CUR.
           MOVE LDA-COD-OFI IN LDA TO LDA-COD-OFI IN CUR-FLD.
           MOVE LDA-VAL-AUT IN LDA TO LDA-VAL-AUT IN CUR-FLD.
           MOVE LDA-COD-EJE IN LDA TO LDA-COD-EJE IN CUR-FLD.
      * FEC-INI --> BMCHIBCI001210.SRCAIU 
           MOVE LDA-NUM-DNG-CMP IN LDA TO LDA-NUM-DNG-CMP IN CUR-FLD.
           MOVE LDA-NUM-MNG-CMP IN LDA TO LDA-NUM-MNG-CMP IN CUR-FLD.
           MOVE LDA-NUM-SNG-CMP IN LDA TO LDA-NUM-SNG-CMP IN CUR-FLD.
           MOVE LDA-NUM-ANG-CMP IN LDA TO LDA-NUM-ANG-CMP IN CUR-FLD.
      * FEC-FIN --> BMCHIBCI001210.SRCAIU 
      * FEC-INI --> BMCHIBCI001210.SRCAIU 
           MOVE LDA-NUM-DUR-REA IN LDA TO LDA-NUM-DUR-REA IN CUR-FLD.
           MOVE LDA-NUM-MUR-REA IN LDA TO LDA-NUM-MUR-REA IN CUR-FLD.
           MOVE LDA-NUM-SUR-REA IN LDA TO LDA-NUM-SUR-REA IN CUR-FLD.
           MOVE LDA-NUM-AUR-REA IN LDA TO LDA-NUM-AUR-REA IN CUR-FLD.
      * FEC-FIN --> BMCHIBCI001210.SRCAIU 
      * FEC-INI --> BMCHIBCI001210.SRCAIU 
           MOVE LDA-NUM-DTO-LIN IN LDA TO LDA-NUM-DTO-LIN IN CUR-FLD.
           MOVE LDA-NUM-MTO-LIN IN LDA TO LDA-NUM-MTO-LIN IN CUR-FLD.
           MOVE LDA-NUM-STO-LIN IN LDA TO LDA-NUM-STO-LIN IN CUR-FLD.
           MOVE LDA-NUM-ATO-LIN IN LDA TO LDA-NUM-ATO-LIN IN CUR-FLD.
      * FEC-FIN --> BMCHIBCI001210.SRCAIU 
           MOVE LDA-COD-EST IN LDA TO LDA-COD-EST IN CUR-FLD.
           MOVE LDA-NUM-SIS IN LDA TO LDA-NUM-SIS IN CUR-FLD.
           MOVE LDA-COD-CRR IN LDA TO LDA-COD-CRR IN CUR-FLD.
      *BUS-OFI busca oficina en tablas
           IF LDA-COD-OFI IN CUR-FLD > SPACES
               MOVE LDA-COD-OFI IN CUR-FLD TO OFI-COD-OFIC IN OFI
               PERFORM BUS-OFI
               MOVE OFI-GLS-DESC IN OFI TO FRM-GLS-OFI IN CUR-FLD
           ELSE
               MOVE SPACES TO FRM-GLS-OFI IN CUR-FLD.
      *BUS-TAB busca glosa de codigo en tabla
           IF LDA-COD-EST IN CUR-FLD > SPACES
               MOVE 'COL' TO TAB-COD-SIST
               MOVE 'LDA ' TO TAB-COD-TTAB IN TAB
               MOVE LDA-COD-EST IN CUR-FLD TO TAB-COD-CTAB IN TAB
               PERFORM BUS-TAB
               MOVE TAB-GLS-DCOR IN TAB TO
                    FRM-GLS-EST IN CUR-FLD
           ELSE
               MOVE SPACES TO FRM-GLS-EST IN CUR-FLD.
      *<< LLeno campo cic y estado para ser usado por validacion
           MOVE LDA-COD-EST IN LDA       TO SCR-COD-EST 
           MOVE CLI-CIC IN LDA           TO SCR-CIC-ICLI
           MOVE 'DBC-KEY-IDBC'           TO FIO-AKEY
           PERFORM BUS-CLIENTE.
           MOVE CCT-COD-CRR IN LDA       TO FRM-COD-CRR IN CUR-FLD.

           IF (PGM-STAT-LDA-OKS)
               IF (SCR-CMND = 'ELI')
                   IF (LDA-COD-EST IN LDA = 'ING')
                       NEXT SENTENCE
                   ELSE 
                       MOVE FRM-SUAR-MAL       TO FRM-SUAR
               ELSE
               IF (SCR-CMND = 'MOD')
                   IF (LDA-COD-EST IN LDA = 'ING')
                       NEXT SENTENCE
                   ELSE 
                       MOVE FRM-SUAR-MAL       TO FRM-SUAR
               ELSE
               IF (SCR-CMND = 'EST')
                   IF (LDA-COD-EST IN LDA = 'ING' OR = 'NCU' OR = 'ACA')
                       NEXT SENTENCE
                   ELSE 
                       MOVE FRM-SUAR-MAL       TO FRM-SUAR.

           IF (FRM-SUAR = FRM-SUAR-MAL)
               MOVE 'COL'                  TO MSG-COD-SIST
               MOVE 'LDAESTACC'            TO MSG-COD-MENS
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC           TO FRM-MENS
               MOVE PGM-SRNF               TO PGM-STAT-LDA
               MOVE FRM-SUAR-MAL           TO FRM-SUAR
               MOVE SCR-STAT-CON           TO SCR-STAT
               GO TO FIN-PUT-LDA-CUR.
      *>>>
       FIN-PUT-LDA-CUR.
           EXIT.
      *
      * COLBUCUR
      * Version 3.0.1 Nov-2005
      * 04-Sep-14 03:41 PM
      *
       SET-TAG-COLBUCUR SECTION.
       INI-SET-TAG-COLBUCUR.
           MOVE
           '<IDNMOD NOM=$COLBUCUR$ VSN=${VSNBU}$ VGM=$3.0.1$
      -    'GEN=$04-Sep-14 03:41 PM$ FNC=${FNCBU}$/>'
               TO WSS-CVT-ITEM.
       FIN-SET-TAG-COLBUCUR.
           EXIT.
           
       RET-ALL-CUR SECTION.
       INI-RET-ALL-CUR.
           PERFORM KEY-ALL-CUR.
           PERFORM RET-LDA-CUR.
       FIN-RET-ALL-CUR.
           EXIT.
       
       RET-LDA-CUR SECTION.
       INI-RET-LDA-CUR.
           MOVE LDA-COD-OFI IN CUR-FLD TO LDA-COD-OFI IN LDA.
           MOVE LDA-VAL-AUT IN CUR-FLD TO LDA-VAL-AUT IN LDA.
           MOVE LDA-COD-EJE IN CUR-FLD TO LDA-COD-EJE IN LDA.
      * FEC-INI --> BMCHIBCI002210.SRCAIU RET-ALL Y KEY-ALL
           MOVE LDA-NUM-DNG-CMP IN CUR-FLD TO LDA-NUM-DNG-CMP IN LDA.
           MOVE LDA-NUM-MNG-CMP IN CUR-FLD TO LDA-NUM-MNG-CMP IN LDA.
           MOVE LDA-NUM-SNG-CMP IN CUR-FLD TO LDA-NUM-SNG-CMP IN LDA.
           MOVE LDA-NUM-ANG-CMP IN CUR-FLD TO LDA-NUM-ANG-CMP IN LDA.
      * FEC-FIN --> BMCHIBCI002210.SRCAIU RET-ALL Y KEY-ALL
      * FEC-INI --> BMCHIBCI002210.SRCAIU RET-ALL Y KEY-ALL
           MOVE LDA-NUM-DUR-REA IN CUR-FLD TO LDA-NUM-DUR-REA IN LDA.
           MOVE LDA-NUM-MUR-REA IN CUR-FLD TO LDA-NUM-MUR-REA IN LDA.
           MOVE LDA-NUM-SUR-REA IN CUR-FLD TO LDA-NUM-SUR-REA IN LDA.
           MOVE LDA-NUM-AUR-REA IN CUR-FLD TO LDA-NUM-AUR-REA IN LDA.
      * FEC-FIN --> BMCHIBCI002210.SRCAIU RET-ALL Y KEY-ALL
      * FEC-INI --> BMCHIBCI002210.SRCAIU RET-ALL Y KEY-ALL
           MOVE LDA-NUM-DTO-LIN IN CUR-FLD TO LDA-NUM-DTO-LIN IN LDA.
           MOVE LDA-NUM-MTO-LIN IN CUR-FLD TO LDA-NUM-MTO-LIN IN LDA.
           MOVE LDA-NUM-STO-LIN IN CUR-FLD TO LDA-NUM-STO-LIN IN LDA.
           MOVE LDA-NUM-ATO-LIN IN CUR-FLD TO LDA-NUM-ATO-LIN IN LDA.
      * FEC-FIN --> BMCHIBCI002210.SRCAIU RET-ALL Y KEY-ALL
           MOVE LDA-COD-EST IN CUR-FLD TO LDA-COD-EST IN LDA.
       FIN-RET-LDA-CUR.
           EXIT.
       
       KEY-ALL-CUR SECTION.
       INI-KEY-ALL-CUR.
           PERFORM KEY-LDA-CUR.
       FIN-KEY-ALL-CUR.
           EXIT.
       
       KEY-LDA-CUR SECTION.
       INI-KEY-LDA-CUR.
           MOVE LDA-NUM-SIS IN CUR-FLD TO LDA-NUM-SIS IN LDA.
           MOVE LDA-COD-CRR IN CUR-FLD TO LDA-COD-CRR IN LDA.
       FIN-KEY-LDA-CUR.
           EXIT.
       
       SCR-CLRA-CUR SECTION.
       INI-SCR-CLRA-CUR.
           PERFORM CLR-KEY-CUR.
           PERFORM CLR-FLD-CUR.
       FIN-SCR-CLRA-CUR.
           EXIT.
       
       CLR-KEY-CUR SECTION.
       INI-CLR-KEY-CUR.
           MOVE SPACES TO FRM-NUM-ICLI IN CUR-FLD.
           MOVE SPACES TO LDA-NUM-SIS IN CUR-FLD.
           MOVE ZEROES TO LDA-COD-CRR IN CUR-FLD.
      *<<<<
           MOVE ZEROES TO FRM-NUM-ICLI IN CUR-FLD.                      
           MOVE SPACES TO FRM-VRF-ICLI IN CUR-FLD.                      
      *>>>>
       FIN-CLR-KEY-CUR.
           EXIT.
       
       CLR-FLD-CUR SECTION.
       INI-CLR-FLD-CUR.
           MOVE SPACES TO FRM-GLS-OFI IN CUR-FLD.
           MOVE SPACES TO FRM-GLS-NOMC IN CUR-FLD.
           MOVE ZEROES TO FRM-COD-CRR IN CUR-FLD.
           MOVE SPACES TO FRM-GLS-EST IN CUR-FLD.
           PERFORM CLR-LDA-CUR.
       FIN-CLR-FLD-CUR.
           EXIT.
       
       CLR-LDA-CUR SECTION.
       INI-CLR-LDA-CUR.
           MOVE SPACES TO LDA-COD-OFI IN CUR-FLD.
           MOVE ZEROES TO LDA-VAL-AUT IN CUR-FLD.
           MOVE SPACES TO LDA-COD-EJE IN CUR-FLD.
      * FEC-INI --> BMCHIBCI003.SRCAIU CLR ( KEY Y FLD )
           MOVE ZEROES TO LDA-FEC-ING-CMP IN CUR-FLD.
      * FEC-FIN --> BMCHIBCI003.SRCAIU CLR ( KEY Y FLD )
      * FEC-INI --> BMCHIBCI003.SRCAIU CLR ( KEY Y FLD )
           MOVE ZEROES TO LDA-FEC-CUR-REA IN CUR-FLD.
      * FEC-FIN --> BMCHIBCI003.SRCAIU CLR ( KEY Y FLD )
      * FEC-INI --> BMCHIBCI003.SRCAIU CLR ( KEY Y FLD )
           MOVE ZEROES TO LDA-FEC-VTO-LIN IN CUR-FLD.
      * FEC-FIN --> BMCHIBCI003.SRCAIU CLR ( KEY Y FLD )
           MOVE SPACES TO LDA-COD-EST IN CUR-FLD.
       FIN-CLR-LDA-CUR.
           EXIT.
       
       FST-KEY-CUR SECTION.
       INI-FST-KEY-CUR.
      *<<<<
           MOVE -1 TO LDA-NUM-SIS-LEN IN CUR-FLD.                       
           GO TO FIN-FST-KEY-CUR.
      *>>>>
           MOVE -1 TO FRM-NUM-ICLI-LEN IN CUR-FLD.
       FIN-FST-KEY-CUR.
           EXIT.
       
       FST-FLD-CUR SECTION.
       INI-FST-FLD-CUR.
      *<<< 
           IF (SCR-CMND = 'EST')
               MOVE -1 TO LDA-COD-EST-LEN
           ELSE
               MOVE -1 TO FRM-NUM-ICLI-LEN IN CUR-FLD.                      
           GO TO FIN-FST-FLD-CUR.
      *>>>
           MOVE -1 TO LDA-COD-OFI-LEN IN CUR-FLD.
       FIN-FST-FLD-CUR.
           EXIT.
       
       PRO-KEY-CUR SECTION.
       INI-PRO-KEY-CUR.
      *<<<<
           MOVE FRM-CPIM-AEY TO FRM-VRF-ICLI-ATR IN CUR-FLD.            
      *>>>>
           MOVE FRM-CPIM-AEY TO FRM-NUM-ICLI-ATR IN CUR-FLD.
           PERFORM PRO-IKY-CUR.
           PERFORM PRO-AKY-CUR.
           PERFORM PRO-MKY-CUR.
       FIN-PRO-KEY-CUR.
           EXIT.
       
       PRO-IKY-CUR SECTION.
       INI-PRO-IKY-CUR.
           MOVE FRM-CPIM-AEY TO LDA-NUM-SIS-ATR IN CUR-FLD.
           MOVE FRM-CPIM-AEY TO LDA-COD-CRR-ATR IN CUR-FLD.
       FIN-PRO-IKY-CUR.
           EXIT.
       
       PRO-MKY-CUR SECTION.
       INI-PRO-MKY-CUR.
      *<<<<
           MOVE FRM-CPIM-AEY TO FRM-NUM-ICLI-ATR IN CUR-FLD.            
           MOVE FRM-CPIM-AEY TO FRM-VRF-ICLI-ATR IN CUR-FLD.            
      *>>>> 
       FIN-PRO-MKY-CUR.
           EXIT.
       
       PRO-AKY-CUR SECTION.
       INI-PRO-AKY-CUR.
       FIN-PRO-AKY-CUR.
           EXIT.
       
       PRO-FLD-CUR SECTION.
       INI-PRO-FLD-CUR.
           MOVE FRM-CPIM-AEY TO FRM-COD-CRR-ATR IN CUR-FLD.
           PERFORM PRO-LDA-CUR.
       FIN-PRO-FLD-CUR.
           EXIT.
       
       PRO-LDA-CUR SECTION.
       INI-PRO-LDA-CUR.
      *<<<<
           MOVE FRM-CPIM-AEY TO LDA-VAL-AUT-ATR IN CUR-FLD.             
           MOVE FRM-CPIM-AEY TO LDA-FEC-CUR-REA-ATR IN CUR-FLD.         
           MOVE FRM-CPIM-AEY TO LDA-FEC-VTO-LIN-ATR IN CUR-FLD.         
           MOVE FRM-CPIM-AEY TO LDA-COD-EST-ATR IN CUR-FLD.
           GO TO FIN-PRO-LDA-CUR.             
      *>>>>  
           MOVE FRM-CPIM-AEY TO LDA-COD-OFI-ATR IN CUR-FLD.
           MOVE FRM-CPIM-AEY TO LDA-VAL-AUT-ATR IN CUR-FLD.
           MOVE FRM-CPIM-AEY TO LDA-COD-EJE-ATR IN CUR-FLD.
           MOVE FRM-CPIM-AEY TO LDA-FEC-CUR-REA-ATR IN CUR-FLD.
           MOVE FRM-CPIM-AEY TO LDA-FEC-VTO-LIN-ATR IN CUR-FLD.
           MOVE FRM-CPIM-AEY TO LDA-COD-EST-ATR IN CUR-FLD.
       FIN-PRO-LDA-CUR.
           EXIT.
       
       UNP-KEY-CUR SECTION.
       INI-UNP-KEY-CUR.
      *<<<<
           MOVE FRM-CPIM-UBY TO FRM-VRF-ICLI-ATR IN CUR-FLD.            
      *>>>>
           MOVE FRM-CPIM-UBY TO FRM-NUM-ICLI-ATR IN CUR-FLD.
           PERFORM UNP-IKY-CUR.
           PERFORM UNP-AKY-CUR.
           PERFORM UNP-MKY-CUR.
       FIN-UNP-KEY-CUR.
           EXIT.
       
       UNP-IKY-CUR SECTION.
       INI-UNP-IKY-CUR.
      *<<<<
           MOVE FRM-CPIM-UBY TO LDA-NUM-SIS-ATR.                        
           MOVE FRM-CPIM-UBY TO LDA-COD-CRR-ATR.                        
           GO TO FIN-UNP-IKY-CUR.
      *>>>>
           MOVE FRM-CPIM-UBY TO FRM-NUM-ICLI-ATR.
           MOVE FRM-CPIM-UBY TO LDA-NUM-SIS-ATR.
           MOVE FRM-CPIM-UBY TO LDA-COD-CRR-ATR.
       FIN-UNP-IKY-CUR.
           EXIT.
       
       UNP-MKY-CUR SECTION.
       INI-UNP-MKY-CUR.
      *<<<
           MOVE FRM-CPIM-UBY TO FRM-NUM-ICLI-ATR.                       
           MOVE FRM-CPIM-UBY TO FRM-VRF-ICLI-ATR.                       
           IF (SCR-CMND NOT = 'CON' AND SCR-INST = SCR-INST-GKY)
               MOVE FRM-CPIM-AEY TO FRM-NUM-ICLI-ATR
               MOVE FRM-CPIM-AEY TO FRM-VRF-ICLI-ATR.
      *>>>
       FIN-UNP-MKY-CUR.
           EXIT.
       
       UNP-AKY-CUR SECTION.
       INI-UNP-AKY-CUR.
       FIN-UNP-AKY-CUR.
           EXIT.
       
       UNP-FLD-CUR SECTION.
       INI-UNP-FLD-CUR.
           MOVE FRM-CPIM-UBY TO FRM-COD-CRR-ATR IN CUR-FLD.
           PERFORM UNP-LDA-CUR.
      *<<< Proteger campos segun comandos especiales
           IF (SCR-CMND = 'ING' OR = 'MOD')
               MOVE FRM-CPIM-AEY            TO LDA-COD-EST-ATR
           ELSE
           IF (SCR-CMND = 'EST')
               MOVE FRM-CPIM-AEY            TO FRM-NUM-ICLI-ATR
               MOVE FRM-CPIM-AEY            TO FRM-VRF-ICLI-ATR
               MOVE FRM-CPIM-AEY            TO FRM-COD-CRR-ATR
               MOVE FRM-CPIM-AEY            TO LDA-VAL-AUT-ATR
               MOVE FRM-CPIM-AEY            TO LDA-FEC-CUR-REA-ATR
               MOVE FRM-CPIM-AEY            TO LDA-FEC-VTO-LIN-ATR.

           IF (NOT PGM-STAT-LDA-OKS AND SCR-CMND = 'ING' AND
               SCR-INST = SCR-INST-GFL)
                   MOVE 'ING'            TO LDA-COD-EST IN CUR-FLD
                   PERFORM VAL-LDA-COD-EST
                   PERFORM GET-FHOY
                   MOVE HOY-FHOY         TO LDA-FEC-ING-CMP IN LDA
                   MOVE CORR LDA-FEC-ING-CMP IN LDA 
                                         TO LDA-FEC-ING-CMP IN CUR-FLD
                   IF (LDA-FEC-CUR-REA IN CUR-FLD NOT > SPACES)
                       MOVE LDA-FEC-ING-CMP IN CUR-FLD
                                         TO LDA-FEC-CUR-REA IN CUR-FLD.
      *>>>
       FIN-UNP-FLD-CUR.
           EXIT.
       
       UNP-LDA-CUR SECTION.
       INI-UNP-LDA-CUR.
      *<<<<
           MOVE FRM-CPIM-UBY TO LDA-VAL-AUT-ATR IN CUR-FLD.             
           MOVE FRM-CPIM-UBY TO LDA-FEC-CUR-REA-ATR IN CUR-FLD.         
           MOVE FRM-CPIM-UBY TO LDA-FEC-VTO-LIN-ATR IN CUR-FLD.         
           MOVE FRM-CPIM-UBY TO LDA-COD-EST-ATR IN CUR-FLD.             
           GO TO FIN-UNP-LDA-CUR.
      *>>>>
           MOVE FRM-CPIM-UBY TO LDA-COD-OFI-ATR IN CUR-FLD.
           MOVE FRM-CPIM-UBY TO LDA-VAL-AUT-ATR IN CUR-FLD.
           MOVE FRM-CPIM-UBY TO LDA-COD-EJE-ATR IN CUR-FLD.
           MOVE FRM-CPIM-UBY TO LDA-FEC-CUR-REA-ATR IN CUR-FLD.
           MOVE FRM-CPIM-UBY TO LDA-FEC-VTO-LIN-ATR IN CUR-FLD.
           MOVE FRM-CPIM-UBY TO LDA-COD-EST-ATR IN CUR-FLD.
       FIN-UNP-LDA-CUR.
           EXIT.
       
       VAL-KEY-CUR SECTION.
       INI-VAL-KEY-CUR.
           PERFORM VAL-IKY-CUR.
           PERFORM VAL-MKY-CUR.
           PERFORM VAL-AKY-CUR.
       FIN-VAL-KEY-CUR.
           EXIT.
       
       VAL-IKY-CUR SECTION.
       INI-VAL-IKY-CUR.
           PERFORM VAL-FRM-NUM-ICLI.
           IF FRM-SUAR = FRM-SUAR-MAL OR FRM-SUAR = FRM-SUAR-CLR
                MOVE FRM-IND-ERRO TO FRM-NUM-ICLI-LEN IN CUR-FLD
                GO TO FIN-VAL-IKY-CUR.
           PERFORM VAL-LDA-NUM-SIS.
           IF FRM-SUAR = FRM-SUAR-MAL OR FRM-SUAR = FRM-SUAR-CLR
                MOVE FRM-IND-ERRO TO LDA-NUM-SIS-LEN IN CUR-FLD
                GO TO FIN-VAL-IKY-CUR.
           PERFORM VAL-LDA-COD-CRR.
           IF FRM-SUAR = FRM-SUAR-MAL OR FRM-SUAR = FRM-SUAR-CLR
                MOVE FRM-IND-ERRO TO LDA-COD-CRR-LEN IN CUR-FLD
                GO TO FIN-VAL-IKY-CUR.
       FIN-VAL-IKY-CUR.
           EXIT.
       
       VAL-MKY-CUR SECTION.
       INI-VAL-MKY-CUR.
      *<<<<
           PERFORM VAL-FRM-NUM-ICLI.                                    
           IF FRM-SUAR = FRM-SUAR-MAL OR FRM-SUAR = FRM-SUAR-CLR        
                MOVE -1 TO FRM-NUM-ICLI-LEN IN CUR-FLD                  
                GO TO FIN-VAL-MKY-CUR.                                  
           PERFORM VAL-FRM-VRF-ICLI.                                    
           IF FRM-SUAR = FRM-SUAR-MAL OR FRM-SUAR = FRM-SUAR-CLR        
                MOVE -1 TO FRM-VRF-ICLI-LEN IN CUR-FLD                  
                GO TO FIN-VAL-MKY-CUR.                                  
      *>>>>
       FIN-VAL-MKY-CUR.
           EXIT.
       
       VAL-AKY-CUR SECTION.
       INI-VAL-AKY-CUR.
       FIN-VAL-AKY-CUR.
           EXIT.
       
       VAL-FLD-CUR SECTION.
       INI-VAL-FLD-CUR.
           PERFORM VAL-LDA-COD-OFI.
           IF FRM-SUAR = FRM-SUAR-MAL OR FRM-SUAR = FRM-SUAR-CLR
                MOVE FRM-IND-ERRO TO LDA-COD-OFI-LEN IN CUR-FLD
                GO TO FIN-VAL-FLD-CUR.
           PERFORM VAL-FRM-GLS-OFI.
           IF FRM-SUAR = FRM-SUAR-MAL OR FRM-SUAR = FRM-SUAR-CLR
                MOVE FRM-IND-ERRO TO FRM-GLS-OFI-LEN IN CUR-FLD
                GO TO FIN-VAL-FLD-CUR.
           PERFORM VAL-FRM-GLS-NOMC.
           IF FRM-SUAR = FRM-SUAR-MAL OR FRM-SUAR = FRM-SUAR-CLR
                MOVE FRM-IND-ERRO TO FRM-GLS-NOMC-LEN IN CUR-FLD
                GO TO FIN-VAL-FLD-CUR.
           PERFORM VAL-FRM-COD-CRR.
           IF FRM-SUAR = FRM-SUAR-MAL OR FRM-SUAR = FRM-SUAR-CLR
                MOVE FRM-IND-ERRO TO FRM-COD-CRR-LEN IN CUR-FLD
                GO TO FIN-VAL-FLD-CUR.
           PERFORM VAL-LDA-VAL-AUT.
           IF FRM-SUAR = FRM-SUAR-MAL OR FRM-SUAR = FRM-SUAR-CLR
                MOVE FRM-IND-ERRO TO LDA-VAL-AUT-LEN IN CUR-FLD
                GO TO FIN-VAL-FLD-CUR.
           PERFORM VAL-LDA-COD-EJE.
           IF FRM-SUAR = FRM-SUAR-MAL OR FRM-SUAR = FRM-SUAR-CLR
                MOVE FRM-IND-ERRO TO LDA-COD-EJE-LEN IN CUR-FLD
                GO TO FIN-VAL-FLD-CUR.
      * FEC-INI --> BMCHIBCI007.SRCAIU PERFORM VAL-[FLD]
           PERFORM VAL-LDA-FEC-ING-CMP.
           IF FRM-SUAR = FRM-SUAR-MAL OR FRM-SUAR = FRM-SUAR-CLR
                MOVE FRM-IND-ERRO TO
                LDA-FEC-ING-CMP-LEN IN CUR-FLD
                GO TO FIN-VAL-FLD-CUR.
      * FEC-FIN --> BMCHIBCI007.SRCAIU PERFORM VAL-[FLD]
      * FEC-INI --> BMCHIBCI007.SRCAIU PERFORM VAL-[FLD]
           PERFORM VAL-LDA-FEC-CUR-REA.
           IF FRM-SUAR = FRM-SUAR-MAL OR FRM-SUAR = FRM-SUAR-CLR
                MOVE FRM-IND-ERRO TO
                LDA-FEC-CUR-REA-LEN IN CUR-FLD
                GO TO FIN-VAL-FLD-CUR.
      * FEC-FIN --> BMCHIBCI007.SRCAIU PERFORM VAL-[FLD]
      * FEC-INI --> BMCHIBCI007.SRCAIU PERFORM VAL-[FLD]
           PERFORM VAL-LDA-FEC-VTO-LIN.
           IF FRM-SUAR = FRM-SUAR-MAL OR FRM-SUAR = FRM-SUAR-CLR
                MOVE FRM-IND-ERRO TO
                LDA-FEC-VTO-LIN-LEN IN CUR-FLD
                GO TO FIN-VAL-FLD-CUR.
      * FEC-FIN --> BMCHIBCI007.SRCAIU PERFORM VAL-[FLD]
           PERFORM VAL-LDA-COD-EST.
           IF FRM-SUAR = FRM-SUAR-MAL OR FRM-SUAR = FRM-SUAR-CLR
                MOVE FRM-IND-ERRO TO LDA-COD-EST-LEN IN CUR-FLD
                GO TO FIN-VAL-FLD-CUR.
           PERFORM VAL-FRM-GLS-EST.
           IF FRM-SUAR = FRM-SUAR-MAL OR FRM-SUAR = FRM-SUAR-CLR
                MOVE FRM-IND-ERRO TO FRM-GLS-EST-LEN IN CUR-FLD
                GO TO FIN-VAL-FLD-CUR.
       FIN-VAL-FLD-CUR.
           EXIT.
       
       VAL-LDA-COD-OFI SECTION.
       INI-VAL-LDA-COD-OFI.
           IF LDA-COD-OFI IN CUR-FLD NOT > SPACES
              MOVE SPACES TO LDA-COD-OFI IN CUR-FLD.
      *VAL-OFI Valida codigo de Oficina en TABLAS
           MOVE LDA-COD-OFI IN CUR-FLD TO OFI-COD-OFIC IN OFI.
           PERFORM VAL-OFI.
           IF MSG-COD-MENS NOT = SPACES
               MOVE MSG-GLS-DESC TO FRM-MENS
               MOVE FRM-SUAR-MAL TO FRM-SUAR.
           IF MSG-COD-MENS = 'COD    NEX'
               MOVE SPACES TO FRM-GLS-OFI IN CUR-FLD
           ELSE
               MOVE OFI-GLS-DESC IN OFI TO FRM-GLS-OFI IN CUR-FLD.
       FIN-VAL-LDA-COD-OFI.
           EXIT.
       
       VAL-FRM-GLS-OFI SECTION.
       INI-VAL-FRM-GLS-OFI.
       FIN-VAL-FRM-GLS-OFI.
           EXIT.
       
       VAL-FRM-NUM-ICLI SECTION.
       INI-VAL-FRM-NUM-ICLI.
           IF FRM-NUM-ICLI IN CUR-FLD NOT > SPACES
              MOVE SPACES TO FRM-NUM-ICLI IN CUR-FLD.
       FIN-VAL-FRM-NUM-ICLI.
           EXIT.
       
       VAL-FRM-GLS-NOMC SECTION.
       INI-VAL-FRM-GLS-NOMC.
       FIN-VAL-FRM-GLS-NOMC.
           EXIT.
       
       VAL-FRM-COD-CRR SECTION.
       INI-VAL-FRM-COD-CRR.
           IF FRM-COD-CRR IN CUR-FLD = ZEROES                           
                PERFORM ERR-GLS                                         
                GO TO FIN-VAL-FRM-COD-CRR.                              

      *<<< Valida cuenta corriente.
           IF (FRM-COD-CRR IN CUR-FLD NOT < 99000000)
               MOVE 'COL'                    TO MSG-COD-SIST
               MOVE 'LDANOCCTE'              TO MSG-COD-MENS
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC             TO FRM-MENS
               MOVE -1                       TO FRM-COD-CRR-LEN
               MOVE FRM-SUAR-MAL             TO FRM-SUAR
               GO TO FIN-VAL-FRM-COD-CRR.
               
           MOVE SCR-CIC-ICLI                TO RCO-CIC-ICLI.
           MOVE '0000'                      TO RCO-CAI-IOPE.
           MOVE FRM-COD-CRR IN CUR-FLD      TO RCO-IIC-IOPE.
           MOVE 'RCO-KEY-IRCO'              TO FIO-AKEY 
           MOVE FIO-GET-KEY                 TO FIO-CMND.
           PERFORM SGC-FIO-RCO.
           IF (NOT FIO-STAT-OKS)
               MOVE 'COL'                    TO MSG-COD-SIST
               MOVE 'LDANEXCTA'              TO MSG-COD-MENS
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC             TO FRM-MENS
               MOVE -1                       TO FRM-COD-CRR-LEN
               MOVE FRM-SUAR-MAL             TO FRM-SUAR
               GO TO FIN-VAL-FRM-COD-CRR.

           IF (RCO-COD-STAT = 'ELI')
               MOVE 'COL'                    TO MSG-COD-SIST
               MOVE 'LDACTACER'              TO MSG-COD-MENS
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC             TO FRM-MENS
               MOVE -1                       TO FRM-COD-CRR-LEN
               MOVE FRM-SUAR-MAL             TO FRM-SUAR
               GO TO FIN-VAL-FRM-COD-CRR.
      *>>>
       FIN-VAL-FRM-COD-CRR.
           EXIT.
       
       VAL-LDA-VAL-AUT SECTION.
       INI-VAL-LDA-VAL-AUT.
      *<<<<
           IF LDA-VAL-AUT IN CUR-FLD = ZEROES                           
                PERFORM ERR-GLS                                         
                GO TO FIN-VAL-LDA-VAL-AUT.                              
      *>>>>
       FIN-VAL-LDA-VAL-AUT.
           EXIT.
       
       VAL-LDA-COD-EJE SECTION.
       INI-VAL-LDA-COD-EJE.
           IF LDA-COD-EJE IN CUR-FLD NOT > SPACES
              MOVE SPACES TO LDA-COD-EJE IN CUR-FLD.
       FIN-VAL-LDA-COD-EJE.
           EXIT.
      * FEC-INI --> BMCHIBCI008.SRCAIU VAL-[FLD] SECTION
       VAL-LDA-FEC-ING-CMP SECTION.
       INI-VAL-LDA-FEC-ING-CMP.
           IF LDA-FEC-ING-CMP IN CUR-FLD  NOT > ZEROES
              MOVE ZEROES TO LDA-FEC-ING-CMP IN CUR-FLD.
       FIN-VAL-LDA-FEC-ING-CMP.
           EXIT.
      * FEC-FIN --> BMCHIBCI008.SRCAIU VAL-[FLD] SECTION
      * FEC-INI --> BMCHIBCI008.SRCAIU VAL-[FLD] SECTION
       VAL-LDA-FEC-CUR-REA SECTION.
       INI-VAL-LDA-FEC-CUR-REA.
           IF LDA-FEC-CUR-REA IN CUR-FLD  NOT > ZEROES
              MOVE ZEROES TO LDA-FEC-CUR-REA IN CUR-FLD.
      *VAL-FEC Validar Fecha
           MOVE LDA-FEC-CUR-REA IN CUR-FLD TO FEC-FECH.
           MOVE FEC-FORM-FEC TO FEC-FORM.
           MOVE FEC-FBLK-S  TO FEC-FBLK.
           MOVE FEC-CHOY-LE TO FEC-CHOY.
           MOVE FEC-VHBL-S TO FEC-VHBL.
      *<<<<
           MOVE FEC-FBLK-N  TO FEC-FBLK.                                
      *>>>>
           MOVE FEC-VAL-FEC TO FEC-CMND.
           PERFORM PRO-FEC.
           IF FEC-STAT-OKS
               MOVE FEC-FECH TO LDA-FEC-CUR-REA IN CUR-FLD
           ELSE
               MOVE FRM-SUAR-MAL TO FRM-SUAR
               MOVE FEC-MENS     TO FRM-MENS
               GO TO FIN-VAL-LDA-FEC-CUR-REA.
       FIN-VAL-LDA-FEC-CUR-REA.
           EXIT.
      * FEC-FIN --> BMCHIBCI008.SRCAIU VAL-[FLD] SECTION
      * FEC-INI --> BMCHIBCI008.SRCAIU VAL-[FLD] SECTION
       VAL-LDA-FEC-VTO-LIN SECTION.
       INI-VAL-LDA-FEC-VTO-LIN.
           IF LDA-FEC-VTO-LIN IN CUR-FLD  NOT > ZEROES
              MOVE ZEROES TO LDA-FEC-VTO-LIN IN CUR-FLD.
      *VAL-FEC Validar Fecha
           MOVE LDA-FEC-VTO-LIN IN CUR-FLD TO FEC-FECH.
           MOVE FEC-FORM-FEC TO FEC-FORM.
           MOVE FEC-FBLK-S  TO FEC-FBLK.
           MOVE FEC-CHOY-LE TO FEC-CHOY.
           MOVE FEC-VHBL-S TO FEC-VHBL.
      *<<<
           MOVE FEC-FBLK-N  TO FEC-FBLK.                                
           MOVE FEC-CHOY-GE TO FEC-CHOY.
      *>>>
           MOVE FEC-VAL-FEC TO FEC-CMND.
           PERFORM PRO-FEC.
           IF FEC-STAT-OKS
               MOVE FEC-FECH TO LDA-FEC-VTO-LIN IN CUR-FLD
           ELSE
               MOVE FRM-SUAR-MAL TO FRM-SUAR
               MOVE FEC-MENS     TO FRM-MENS
               GO TO FIN-VAL-LDA-FEC-VTO-LIN.
       FIN-VAL-LDA-FEC-VTO-LIN.
           EXIT.
      * FEC-FIN --> BMCHIBCI008.SRCAIU VAL-[FLD] SECTION
       
       VAL-LDA-COD-EST SECTION.
       INI-VAL-LDA-COD-EST.
      *<<<<
           IF LDA-COD-EST IN CUR-FLD NOT > SPACES                       
                PERFORM ERR-GLS                                         
                GO TO FIN-VAL-LDA-COD-EST.                              
      *>>>>
           IF LDA-COD-EST IN CUR-FLD NOT > SPACES
              MOVE SPACES TO LDA-COD-EST IN CUR-FLD.
      *VAL-COD Valida codigo de tabla
           MOVE 'COL' TO TAB-COD-SIST.
           MOVE 'LDA ' TO TAB-COD-TTAB IN TAB.
           MOVE LDA-COD-EST IN CUR-FLD TO TAB-COD-CTAB IN TAB.
           PERFORM VAL-COD.
           IF MSG-COD-MENS = 'COD    NEX' OR
              LDA-COD-EST IN CUR-FLD NOT > SPACES
               MOVE SPACES TO FRM-GLS-EST IN CUR-FLD
           ELSE
               MOVE TAB-GLS-DCOR IN TAB TO
                    FRM-GLS-EST IN CUR-FLD.
       FIN-VAL-LDA-COD-EST.
           EXIT.
       
       VAL-FRM-GLS-EST SECTION.
       INI-VAL-FRM-GLS-EST.
       FIN-VAL-FRM-GLS-EST.
           EXIT.
       
       VAL-LDA-NUM-SIS SECTION.
       INI-VAL-LDA-NUM-SIS.
           IF LDA-NUM-SIS IN CUR-FLD NOT > SPACES
              MOVE SPACES TO LDA-NUM-SIS IN CUR-FLD.
      *<<<
           IF (LDA-NUM-SIS IN CUR-FLD > SPACES)
               MOVE LDA-NUM-SIS IN CUR-FLD  TO WR-NUM-SIS
               IF (WR-NUM-SIS-L NOT = 'L')
                   MOVE FRM-SUAR-MAL        TO FRM-SUAR
                   MOVE 'COL'               TO MSG-COD-SIST
                   MOVE 'LDASISINV'         TO MSG-COD-MENS
                   PERFORM GET-MSG
                   MOVE MSG-GLS-DESC        TO FRM-MENS
                   MOVE -1                  TO LDA-NUM-SIS-LEN
                   GO TO FIN-VAL-LDA-NUM-SIS.
      *>>>
       FIN-VAL-LDA-NUM-SIS.
           EXIT.
       
       VAL-LDA-COD-CRR SECTION.
       INI-VAL-LDA-COD-CRR.
      *<<<
           IF (LDA-NUM-SIS IN CUR-FLD > SPACES)
               IF (LDA-COD-CRR IN CUR-FLD = ZEROES)
                   PERFORM ERR-GLS
                   MOVE FRM-SUAR-MAL        TO FRM-SUAR
                   MOVE -1                  TO LDA-COD-CRR-LEN
                   GO TO FIN-VAL-LDA-COD-CRR.
      *>>>
       FIN-VAL-LDA-COD-CRR.
           EXIT.
       
       VAL-CON-KEY-CUR SECTION.
       INI-VAL-CON-KEY-CUR.
      *<<<<
           IF     LDA-NUM-SIS IN CUR-FLD NOT > SPACES                   
              AND LDA-COD-CRR IN CUR-FLD NOT > ZEROES                   
              AND FRM-NUM-ICLI IN CUR-FLD NOT > ZEROES                  
              AND FRM-VRF-ICLI IN CUR-FLD NOT > SPACES                  
                PERFORM ERR-KEY                                         
                PERFORM FST-KEY-CUR.
           GO TO FIN-VAL-CON-KEY-CUR.                                    
      *>>>>
           IF     FRM-NUM-ICLI IN CUR-FLD NOT > SPACES 
              AND LDA-NUM-SIS IN CUR-FLD NOT > SPACES 
              AND LDA-COD-CRR IN CUR-FLD NOT > ZEROES 
                PERFORM ERR-KEY
                PERFORM FST-KEY-CUR.
       FIN-VAL-CON-KEY-CUR.
           EXIT.
       
       VAL-CON-IKY-CUR SECTION.
       INI-VAL-CON-IKY-CUR.
      *<<<<
           IF     LDA-NUM-SIS IN CUR-FLD NOT > SPACES                   
              AND LDA-COD-CRR IN CUR-FLD NOT > ZEROES                   
                PERFORM ERR-KEY                                         
                PERFORM FST-KEY-CUR.
           GO TO FIN-VAL-CON-IKY-CUR.                                    
      *>>>>
           IF     FRM-NUM-ICLI IN CUR-FLD NOT > SPACES 
              AND LDA-NUM-SIS IN CUR-FLD NOT > SPACES 
              AND LDA-COD-CRR IN CUR-FLD NOT > ZEROES 
                PERFORM ERR-KEY
                PERFORM FST-KEY-CUR.
       FIN-VAL-CON-IKY-CUR.
           EXIT.
       
       VAL-CON-FLD-CUR SECTION.
       INI-VAL-CON-FLD-CUR.
      *<<< Valida consistencia de campos
      *<<< Valida codigo de estado segun comando
      * Estados : "ING" "NCU" "ACA" "NVG"
      *
      * Cambios : CMD=ING      inicial     ==> "ING" 
      *           CMD=EST      "ING","NCU" ==> "ACA"
      *                        "ACA"       ==> "NVG","NCU"
      *                        "NCU"       ==> "NVG"
      *
           IF (SCR-CMND = 'ING')
               IF (LDA-COD-EST IN CUR-FLD NOT = 'ING')
                   MOVE FRM-SUAR-MAL           TO FRM-SUAR
               ELSE
                   NEXT SENTENCE
           ELSE
           IF (SCR-COD-EST = LDA-COD-EST IN CUR-FLD)
                   NEXT SENTENCE
           ELSE
           IF (SCR-CMND = 'EST')
               IF ((SCR-COD-EST = 'ING' OR = 'NCU') AND 
                    LDA-COD-EST IN CUR-FLD = 'ACA')    
                    OR
                   (SCR-COD-EST = 'ACA'             AND
                   (LDA-COD-EST IN CUR-FLD = 'NCU' OR = 'NVG'))
                    OR
                   (SCR-COD-EST = 'NCU'             AND
                    LDA-COD-EST IN CUR-FLD = 'NVG')
                    NEXT SENTENCE
               ELSE
                 MOVE FRM-SUAR-MAL           TO FRM-SUAR.

            IF (FRM-SUAR-MAL = FRM-SUAR)
               MOVE 'COL'                    TO MSG-COD-SIST
               MOVE 'LDAESTINV'              TO MSG-COD-MENS
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC             TO FRM-MENS
               MOVE -1                       TO LDA-COD-EST-LEN
               MOVE FRM-SUAR-MAL             TO FRM-SUAR
               GO TO FIN-VAL-CON-FLD-CUR.

           IF (SCR-CMND = 'EST' AND 
               SCR-COD-EST = LDA-COD-EST IN CUR-FLD)
               MOVE 'COL'                    TO MSG-COD-SIST
               MOVE 'LDAESTIGU'              TO MSG-COD-MENS
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC             TO FRM-MENS
               MOVE -1                       TO LDA-COD-EST-LEN
               MOVE FRM-SUAR-MAL             TO FRM-SUAR
               GO TO FIN-VAL-CON-FLD-CUR.

           IF (SCR-CMND = 'EST' AND
              (SCR-COD-EST = 'ING' OR = 'NCU') AND 
               LDA-COD-EST IN CUR-FLD = 'ACA')    
               PERFORM GET-FHOY
               MOVE HOY-FHOY         TO LDA-FEC-ING-CMP IN LDA
               MOVE CORR LDA-FEC-ING-CMP IN LDA 
                                     TO LDA-FEC-ING-CMP IN CUR-FLD.

           MOVE LDA-FD-CUR-REA IN CUR-FLD    TO WR-DIA-AUX1
           MOVE LDA-FM-CUR-REA IN CUR-FLD    TO WR-MES-AUX1
           MOVE LDA-FA-CUR-REA IN CUR-FLD    TO WR-ANO-AUX1.

           MOVE LDA-FD-VTO-LIN IN CUR-FLD    TO WR-DIA-AUX2
           MOVE LDA-FM-VTO-LIN IN CUR-FLD    TO WR-MES-AUX2
           MOVE LDA-FA-VTO-LIN IN CUR-FLD    TO WR-ANO-AUX2
           IF (WR-FECHA-AUX2 NOT > WR-FECHA-AUX1)
               MOVE 'COL'                    TO MSG-COD-SIST
               MOVE 'LDAVENMEN'              TO MSG-COD-MENS
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC             TO FRM-MENS
               MOVE FRM-SUAR-MAL             TO FRM-SUAR
               MOVE '1'                      TO FRM-UCUR
               MOVE -1                       TO LDA-FEC-VTO-LIN-LEN
               GO TO FIN-VAL-CON-FLD-CUR.

           ADD 1                             TO WR-ANO-AUX1
           IF (WR-FECHA-AUX2 NOT < WR-FECHA-AUX1)
               MOVE 'COL'                    TO MSG-COD-SIST
               MOVE 'LDAVENCUR'              TO MSG-COD-MENS
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC             TO FRM-MENS
               MOVE '1'                      TO FRM-UCUR
               MOVE FRM-SUAR-MAL             TO FRM-SUAR 
               MOVE -1                       TO LDA-FEC-VTO-LIN-LEN
               GO TO FIN-VAL-CON-FLD-CUR.

      *Valida consistencia de estado "NVG"
           IF (LDA-COD-EST IN CUR-FLD = 'NVG')
               MOVE LDA-NUM-SIS IN CUR-FLD   TO WR-NUM-SIS
               MOVE LDA-COD-CRR IN CUR-FLD   TO WR-COD-CRR
               MOVE WR-COP                   TO LDA-CLV-RLO-1 IN RLO
               MOVE 'LDA-CLV-RLO-1'          TO FIO-AKEY
               MOVE FIO-GET-NLS              TO FIO-CMND
               MOVE 0                        TO WR-MTO-DEUDA
               PERFORM COL-FIO-RLO
               PERFORM REC-RLO-OPC
                UNTIL (NOT FIO-STAT-OKS OR WR-COP NOT = LDA-COP IN RLO)
               IF (WR-MTO-DEUDA = 0)
                  NEXT SENTENCE
               ELSE
                  MOVE 'COL'                    TO MSG-COD-SIST
                  MOVE 'LDAEXIDEU'              TO MSG-COD-MENS
                  PERFORM GET-MSG
                  MOVE MSG-GLS-DESC             TO FRM-MEN2
                  GO TO FIN-VAL-CON-FLD-CUR.
      *>>>
       FIN-VAL-CON-FLD-CUR.
           EXIT.
       
       VAL-CON-CUR SECTION.
       INI-VAL-CON-CUR.
       FIN-VAL-CON-CUR.
           EXIT.
       
       VAL-NUM-KEY-CUR SECTION.
       INI-VAL-NUM-KEY-CUR.
           PERFORM VAL-NUM-IKY-CUR.
           PERFORM VAL-NUM-MKY-CUR.
           PERFORM VAL-NUM-AKY-CUR.
       FIN-VAL-NUM-KEY-CUR.
           EXIT.
       
       VAL-NUM-IKY-CUR SECTION.
       INI-VAL-NUM-IKY-CUR.
       VAL-NUM-LDA-COD-CRR.
           MOVE LDA-COD-CRR-ALF IN CUR-FLD TO NUM-NUME.
           MOVE NUM-ZERO-S TO NUM-ZERO.
           MOVE NUM-SGNO-N TO NUM-SGNO.
           MOVE 8 TO NUM-NENT.
           MOVE 0 TO NUM-NDCM.
           PERFORM VAL-NUM.
           IF NUM-STAT-OKS
                MOVE NUM-NN9N TO LDA-COD-CRR IN CUR-FLD
           ELSE
                MOVE NUM-MENS     TO FRM-MENS
                MOVE FRM-SUAR-MAL TO FRM-SUAR
                MOVE -9 TO LDA-COD-CRR-LEN IN CUR-FLD
                GO TO FIN-VAL-NUM-IKY-CUR.
       FIN-VAL-NUM-IKY-CUR.
           EXIT.
       
       VAL-NUM-MKY-CUR SECTION.
       INI-VAL-NUM-MKY-CUR.
       VAL-NUM-FRM-NUM-ICLI.                                            
           MOVE FRM-NUM-ICLI-ALF IN CUR-FLD TO NUM-NUME.                
           MOVE NUM-ZERO-S TO NUM-ZERO.                                 
           MOVE NUM-SGNO-N TO NUM-SGNO.                                 
           MOVE 8 TO NUM-NENT.                                          
           MOVE 0 TO NUM-NDCM.                                          
           PERFORM VAL-NUM.                                             
           IF NUM-STAT-OKS                                              
               MOVE NUM-NN9N TO FRM-NUM-ICLI IN CUR-FLD                 
           ELSE                                                         
               MOVE NUM-MENS     TO FRM-MENS                            
               MOVE FRM-SUAR-MAL TO FRM-SUAR                            
               MOVE -9 TO FRM-NUM-ICLI-LEN IN CUR-FLD                   
                GO TO FIN-VAL-NUM-MKY-CUR.                              
       FIN-VAL-NUM-MKY-CUR.
           EXIT.
       
       VAL-NUM-AKY-CUR SECTION.
       INI-VAL-NUM-AKY-CUR.
       FIN-VAL-NUM-AKY-CUR.
           EXIT.
       
       VAL-NUM-FLD-CUR SECTION.
       INI-VAL-NUM-FLD-CUR.
       VAL-NUM-FRM-COD-CRR.
           MOVE FRM-COD-CRR-ALF IN CUR-FLD TO NUM-NUME.
           MOVE NUM-ZERO-S TO NUM-ZERO.
           MOVE NUM-SGNO-N TO NUM-SGNO.
           MOVE 8 TO NUM-NENT.
           MOVE 0 TO NUM-NDCM.
           PERFORM VAL-NUM.
           IF NUM-STAT-OKS
                MOVE NUM-NN9N TO FRM-COD-CRR IN CUR-FLD
           ELSE
                MOVE NUM-MENS     TO FRM-MENS
                MOVE FRM-SUAR-MAL TO FRM-SUAR
                MOVE -9 TO FRM-COD-CRR-LEN IN CUR-FLD
                GO TO FIN-VAL-NUM-FLD-CUR.
       VAL-NUM-LDA-VAL-AUT.
           MOVE LDA-VAL-AUT-ALF IN CUR-FLD TO NUM-NUME.
           MOVE NUM-ZERO-S TO NUM-ZERO.
           MOVE NUM-SGNO-N TO NUM-SGNO.
           MOVE 11 TO NUM-NENT.
           MOVE 4 TO NUM-NDCM.
           PERFORM VAL-NUM.
           IF NUM-STAT-OKS
                MOVE NUM-NN9V TO LDA-VAL-AUT IN CUR-FLD
           ELSE
                MOVE NUM-MENS     TO FRM-MENS
                MOVE FRM-SUAR-MAL TO FRM-SUAR
                MOVE -9 TO LDA-VAL-AUT-LEN IN CUR-FLD
                GO TO FIN-VAL-NUM-FLD-CUR.
       FIN-VAL-NUM-FLD-CUR.
           EXIT.
       
       EDT-KEY-CUR SECTION.
       INI-EDT-KEY-CUR.
           PERFORM EDT-IKY-CUR.
           PERFORM EDT-MKY-CUR.
           PERFORM EDT-AKY-CUR.
       FIN-EDT-KEY-CUR.
           EXIT.
       
       EDT-IKY-CUR SECTION.
       INI-EDT-IKY-CUR.
           IF LDA-COD-CRR-LEN IN CUR-FLD = FRM-ERR-NUME
                MOVE FRM-IND-ERRO TO LDA-COD-CRR-LEN IN CUR-FLD
                GO TO FIN-EDT-IKY-CUR.
           MOVE LDA-COD-CRR IN CUR-FLD TO LDA-COD-CRR-EDT IN CUR-EDT.
           MOVE LDA-COD-CRR-EDT IN CUR-EDT TO 
                LDA-COD-CRR-ALF IN CUR-FLD.
       FIN-EDT-IKY-CUR.
           EXIT.
       
       EDT-MKY-CUR SECTION.
       INI-EDT-MKY-CUR.
      *<<<<
           IF FRM-NUM-ICLI-LEN IN CUR-FLD = -9                          
                MOVE -1 TO FRM-NUM-ICLI-LEN IN CUR-FLD                  
                GO TO FIN-EDT-MKY-CUR.                                  
           MOVE FRM-NUM-ICLI IN CUR-FLD TO FRM-NUM-ICLI-EDT IN CUR-EDT. 
           MOVE FRM-NUM-ICLI-EDT IN CUR-EDT TO                          
                FRM-NUM-ICLI-ALF IN CUR-FLD.                            
      *>>>>
       FIN-EDT-MKY-CUR.
           EXIT.
       
       EDT-AKY-CUR SECTION.
       INI-EDT-AKY-CUR.
       FIN-EDT-AKY-CUR.
           EXIT.
       
       EDT-FLD-CUR SECTION.
       INI-EDT-FLD-CUR.
           IF FRM-COD-CRR-LEN IN CUR-FLD = FRM-ERR-NUME
                MOVE FRM-IND-ERRO TO FRM-COD-CRR-LEN IN CUR-FLD
                GO TO FIN-EDT-FLD-CUR.
           MOVE FRM-COD-CRR IN CUR-FLD TO FRM-COD-CRR-EDT IN CUR-EDT.
           MOVE FRM-COD-CRR-EDT IN CUR-EDT TO 
                FRM-COD-CRR-ALF IN CUR-FLD.
           IF LDA-VAL-AUT-LEN IN CUR-FLD = FRM-ERR-NUME
                MOVE FRM-IND-ERRO TO LDA-VAL-AUT-LEN IN CUR-FLD
                GO TO FIN-EDT-FLD-CUR.
           MOVE LDA-VAL-AUT IN CUR-FLD TO LDA-VAL-AUT-EDT IN CUR-EDT.
           MOVE LDA-VAL-AUT-EDT IN CUR-EDT TO 
                LDA-VAL-AUT-ALF IN CUR-FLD.
       FIN-EDT-FLD-CUR.
           EXIT.
      *<<<
       BUS-CLIENTE SECTION.
       INI-BUS-CLTE.
      *Lee DBC y puebla datos pantalla 
           IF (FIO-AKEY = 'DBC-IDC-ICLI')
               MOVE FRM-NUM-ICLI IN CUR-FLD TO DBC-NUM-ICLI IN DBC
               MOVE SPACES                  TO DBC-IND-ICLI IN DBC
               MOVE SPACES                  TO DBC-GLS-ICLI IN DBC
               MOVE FIO-GET-NLS             TO FIO-CMND
           ELSE
               MOVE SCR-CIC-ICLI            TO DBC-CIC-ICLI IN DBC
               MOVE FIO-GET-KEY             TO FIO-CMND.

           PERFORM SGC-FIO-DBC.

           IF NOT FIO-STAT-OKS OR 
                 (FIO-STAT-OKS AND FRM-NUM-ICLI NOT = DBC-NUM-ICLI AND
                  SCR-CIC-ICLI NOT = DBC-CIC-ICLI IN DBC)
                  MOVE '23'                  TO ADR-STAT IN ADR-DBC-REQA
                  MOVE 'SGC'                 TO MSG-COD-SIST
                  MOVE 'CLI    NEX'          TO MSG-COD-MENS
                  PERFORM GET-MSG
                  MOVE MSG-GLS-DESC          TO FRM-MENS
                  MOVE '00'                  TO FIO-STAT
                  MOVE SPACES                TO LDA-COD-EJE IN CUR-FLD
                  MOVE SPACES                TO LDA-COD-OFI IN CUR-FLD
                  MOVE SPACES                TO FRM-GLS-NOMC IN CUR-FLD
                  MOVE SPACES                TO SCR-CIC-ICLI
                  MOVE SPACES                TO FRM-GLS-OFI IN CUR-FLD
                  MOVE FRM-SUAR-MAL          TO FRM-SUAR
                  MOVE -1                    TO FRM-NUM-ICLI-LEN
              ELSE
                  MOVE SPACES                TO FRM-MENS
                  MOVE DBC-GLS-NOMC IN DBC   TO CPT-STRN
                  PERFORM CPT-BLKS
                  MOVE CPT-STRN              TO FRM-GLS-NOMC IN CUR-FLD
                  MOVE DBC-COD-EJEC IN DBC   TO LDA-COD-EJE IN CUR-FLD
                  MOVE DBC-COD-OFIC IN DBC   TO LDA-COD-OFI IN CUR-FLD
                  MOVE DBC-NUM-ICLI IN DBC   TO FRM-NUM-ICLI IN CUR-FLD
                  MOVE DBC-VRF-ICLI IN DBC   TO FRM-VRF-ICLI IN CUR-FLD
                  MOVE DBC-CIC-ICLI IN DBC   TO SCR-CIC-ICLI
                  MOVE DBC-COD-OFIC IN DBC   TO OFI-COD-OFIC IN OFI
                  PERFORM BUS-OFI
                  MOVE OFI-GLS-DESC IN OFI   TO FRM-GLS-OFI IN CUR-FLD.
       FIN-BUS-CLTE.
           EXIT.
      *>>>
      *<<<< EOF
       VAL-FRM-VRF-ICLI SECTION.                                        
       INI-VAL-FRM-VRF-ICLI.                                            
           IF FRM-VRF-ICLI IN CUR-FLD NOT > SPACES                      
              MOVE SPACES TO FRM-VRF-ICLI IN CUR-FLD.                   
      *VAL-VRF Valida Verificador                                       
           MOVE VRF-VAL TO VRF-CMND.                                    
           MOVE VRF-SVRF-K TO VRF-SVRF.                                 
           MOVE VRF-ZERO-S TO VRF-ZERO.                                 
           MOVE FRM-NUM-ICLI IN CUR-FLD TO VRF-NUME.                    
           MOVE FRM-VRF-ICLI IN CUR-FLD TO VRF-DVRF.                    
           MOVE 7 TO VRF-LMAX.                                          
           PERFORM PRO-VRF.                                             
      *<<< valida existencia cliente por rut                            
           IF (FRM-SUAR = FRM-SUAR-MAL OR FRM-SUAR = FRM-SUAR-CLR OR    
               FRM-VRF-ICLI IN CUR-FLD NOT > SPACES)                    
               GO TO FIN-VAL-FRM-VRF-ICLI.                              
                                                                        
           MOVE 'DBC-IDC-ICLI'               TO FIO-AKEY                
           PERFORM BUS-CLIENTE                                          
           IF (NOT ADR-STAT-OKS IN ADR-DBC-REQA)                        
               MOVE FRM-SUAR-MAL             TO FRM-SUAR                
               GO TO FIN-VAL-FRM-VRF-ICLI.                              
                                                                        
           MOVE LDA-NUM-SIS IN CUR-FLD       TO WR-NUM-SIS              
           IF LDA-COD-OFI IN CUR-FLD NOT = WR-COD-OFI AND               
              SCR-CMND NOT = 'CON'                                      
               MOVE 'COL'                    TO MSG-COD-SIST            
               MOVE 'LDANONOFI'              TO MSG-COD-MENS            
               PERFORM GET-MSG                                          
               MOVE MSG-GLS-DESC             TO FRM-MENS                
               MOVE -1                       TO FRM-NUM-ICLI-LEN        
               MOVE FRM-SUAR-MAL             TO FRM-SUAR                
               GO TO FIN-VAL-FRM-VRF-ICLI.                              
      *>>>                                                              
       FIN-VAL-FRM-VRF-ICLI.                                            
           EXIT.               
      *>>>>
