       IDENTIFICATION DIVISION.
      *========================
       PROGRAM-ID.   LDCPQCLN.
       AUTHOR.       BEE.
       DATE-WRITTEN. 08-May-19 03:59 PM.

      * NOMBRE PROGRAMA                   LDCPQCLN
      * VERSION PGM                       3.1
      * VERSION SKL                       19.04.15
      * OPCION                            CON
      * ARCHIVO BASE                      LDCCLF
      * PANTALLA                          LDCCLN
      * INP/OUT                           DATACOM
      * TAMANO COMMAREA                   250

      *<<<<
      *---------------------------------------------------------
      * MODIFICACIONES
      * AUTOR:    MARCELO HERRERA M.
      * FECHA:    08-OCT-2009
      * PROYECTO    : MULTILINEA INMOBILIARIA
      * MODIFICACION:
      *      - SOLO SE CONSIDERAN CLF TIPO CLF
      *---------------------------------------------------------
      *>>>>

       ENVIRONMENT DIVISION.
      *=====================
       CONFIGURATION SECTION.
      *----------------------
       SPECIAL-NAMES.
               DECIMAL-POINT IS COMMA.
       DATA DIVISION.
      *==============

       WORKING-STORAGE SECTION.
      *------------------------
      * COPY GNSWGSCR.
       COPY GNSWGCVT.
       77  WSS-TAG-LDCPQCLN-INI PIC X(125) VALUE                        
           '<IDNPGM NOM=$LDCPQCLN$ SKL=$19.04.15$ VSN=${vsnpq}$        
      -    'GEN=$08-May-19 03:59 PM$ FNC=${fncpq}$/>'.    

       COPY GNSWCSCR.
      *PTC-INI
      *PTC-SUB
      * COPY GNSWVSCR.
       COPY GNSWV3CR.
      *PTC-FIN
      *<<<< MI_COMMAREA
           03 CMA-VARI.
              05  WSS-IND-ACUM          VALUE 0  PIC 9(01).
                 88 DESPLIEGA           VALUE 0.
                 88 ACUMULA             VALUE 0.
                 88 SOLO-ACUMULA        VALUE 1.
                 88 YA-ACUMULO          VALUE 1.
              05 WSS-VAL-CDIS      COMP-3        PIC S9(11).
              05 WSS-VAL-CUTI      COMP-3        PIC S9(11).
              05 SCR-IND-MCLI                    PIC X(01).
      *ALD-BNL
              05 SCR-IMAX          COMP          PIC S9(04).
              05 SCR-I             COMP          PIC S9(04).
              05 SCR-IND-OCIC                    PIC X(01).
      *>>>>
      *<<<< FIN-SCR-VARI
           03 SCR-NUM-PANT                       PIC 9(03).
           03 SCR-TOT-OCCU             VALUE 0   PIC 9(03).
      *>>>>
       COPY LDCWICLN.

       COPY LDCBRCLF.


       COPY GNSWVIDD.
       COPY GNSWGRQA.
       COPY GNSWGUIB.
       COPY GNSWGELS.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-CLF-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-TAB-REQA==.
       COPY GNSBRTAB.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-MSC-REQA==.
       COPY GNSBRMSC.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-MSG-REQA==.
       COPY GNSBRMSG.
       COPY GNSWCFIO.
       COPY GNSWVFIO.
      *PTC-INI
      *PTC-SUB
      * ISP  10-MAY-2001 13:46:35 
      * COPY GNSWGFRM.
       COPY GNSWG3CF.
       COPY GNSWGTSK.
       COPY GNSWGQUE.
      *PTC-FIN
       COPY GNSWVNUM.
       COPY GNSWCNUM.
       COPY GNSWGFEC.
       COPY GNSWGHOY.
       COPY GNSWCVRF.
       COPY GNSWVVRF.
       COPY GNSWGIDC.
       COPY GNSWGSYS.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-OFI-REQA==.
       COPY TABBROFI.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-USR-REQA==.
       COPY TABBRUSR.

      *<<<< WSS
       COPY LDCWGCLN.
       01  WSS-VARI-PFS-QUE.
           03 WSS-HAY-ERRO     VALUE 'N'            PIC X(01).
           03 WSS-FRM-FFLD     VALUE SPACES         PIC X(01).
           03 WSS-MAX-PANT     VALUE 3 PIC 9(05).
           03 WSS-IND-PANT     VALUE 1              PIC 9(05).
           03 WSS-IND-HMAS     VALUE 'N'            PIC X(01).
      *>>>> WSS
      *<<<< WSS

       01  WSS-VARI.
           03 WSS-IND-TMPS     VALUE ZEROES      PIC 9(05).
           03 WSS-COD-SGAR     VALUE SPACES      PIC X(01).

      *<<<< PGM_DTC
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-CRI-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-FIA-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-REC-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-RCE-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-CIC-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-DBC-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-DCP-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-DCE-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-OFI-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-USR-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-CAM-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-GDG-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-ARC-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-ARG-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-LDC-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-RDC-REQA==.
      *>>>>
      * Entidades de LDC
       COPY LDCBRLDC.
       COPY LDCBRARC.
       COPY LDCBRARG.
       COPY LDCBRRDC.
      * Entidades de SGC
       COPY SGCBRDBC.
       COPY SGCBRREC.
      * Entidades de DEU
       COPY DEUBRCRI.
       COPY DEUBRFIA.
      * Entidades de GAR
       * COPY BGLBRGDG.
       COPY GARBRGDG.

      * Entidades de GNS
       COPY GNSBRRCE.
       COPY GNSWGCPT.
       COPY GNSWGSTR.
       COPY GNSWGPES.
      * Entidades de TAB
       COPY TABWGTVC.
       COPY TABBRCAM.
       COPY TABBROFI.
       COPY TABBRUSR.
       COPY LDCWGCCU.
       COPY LDCWGCEG.
      *<<<< INI ISP 14-MAY-1996
       01  WSS-CLC-EDT.
           03 WSS-CLC-EDT-CDIS-EDT    PIC ---.---.---.--9.
           03 WSS-CLC-EDT-CDIS-ALF    PIC X(15).
      *<<<< FIN ISP 14-MAY-1996
       01  CLN-VARI.
           03 CLF-VEZ-ARC                            PIC X(01).
           03 CLF-PRM-VEZ-ARC      VALUE 'P'         PIC X(01).
           03 CLF-OTR-VEZ-ARC      VALUE 'O'         PIC X(01).
           03 CLF-VEZ-ARG                            PIC X(01).
           03 CLF-PRM-VEZ-ARG      VALUE 'P'         PIC X(01).
           03 CLF-OTR-VEZ-ARG      VALUE 'O'         PIC X(01).
           03 CLN-I                COMP              PIC S9(04).
           03 CLN-EXI-ARC                            PIC X(01).
           03 CLN-EXI-ARG                            PIC X(01).
           03 CLN-IMP                                PIC X(01).
           03 CLN-SI-IMP    VALUE 'S'                PIC X(01).
           03 CLN-NO-IMP    VALUE 'S'                PIC X(01).

       01  WSS-MONE.
           03  WSS-COD-UEFES VALUE SPACES          PIC X(06).
           03  WSS-COD-PESOS VALUE SPACES          PIC X(06).

      * DEFINE 01  WSS-VARI DE PGM1ANIDX
        01  WSS-GLS-TIPO VALUE SPACES.
            03  WSS-GLS-TIPO-1                     PIC X(12).
            03  WSS-GLS-TIPO-2                     PIC X(01).
            03  WSS-GLS-TIPO-3                     PIC X(05).

       01  WSS-VARI.
           03 WSS-CLC-DCOR.
              05 WSS-GLS-TOOC                      PIC X(05).
              05 WSS-GLS-AOOC.
                 07 FILLER                         PIC X(03).
                 07 WSS-GLS-AOOC-EXT               PIC X(05).
           03 WSS-FEC-FCIE     VALUE 0             PIC 9(08).
           03 WSS-CIC-ICLF                         PIC X(12).
           03 WSS-IMAX                  VALUE 3    PIC 9(02).
      * PARA USAR GARSRC:ERRFNDKEY.SRC
           03 WSS-IBUS                             PIC 9(01).
           03 WSS-IBUS-LDC                         PIC 9(01).
           03 WSS-YA-ACUMULO            VALUE 1    PIC 9(01).
           03 WSS-I                 VALUE ZEROES   PIC 9(02).
           03 WSS-IND-LDC               VALUE 'N'  PIC X(01).
           03 PGM-STAT-ADI.
              05 PGM-STAT-RDC           VALUE '23' PIC X(02).
                   88 PGM-STAT-RDC-OKS  VALUE '00'.
                   88 PGM-STAT-RDC-NUL  VALUE '  '.
           03 WSS-FEC-FHOY.
              05 WSS-NUM-SHOY                      PIC 9(02).
              05 WSS-NUM-AHOY                      PIC 9(02).
              05 WSS-NUM-MHOY                      PIC 9(02).
              05 WSS-NUM-DHOY                      PIC 9(02).
              05  WSS-COD-PESO                           PIC X(06).
           03  ARC-KEY-IARC.
               05  ARC-KEY-ILDC.
                   07 ARC-CAI-ICLF                       PIC X(04).
                   07 ARC-IIC-ICLF                       PIC 9(08).
                   07 ARC-NUM-ILDC                       PIC 9(02).
               05 ARC-NUM-IARC                           PIC 9(01).
           03  ARG-KEY-IARG.
               05 ARG-KEY-ILDC.
                   07 ARG-CAI-ICLF                       PIC X(04).
                   07 ARG-IIC-ICLF                       PIC 9(08).
                   07 ARG-NUM-ILDC                       PIC 9(02).
               05 ARG-NUM-IARG                           PIC 9(01).
           03  WSS-FIN        VALUE ZEROES               PIC 9(01).
           03  WSS-IARC       VALUE ZEROES               PIC 9(02).
           03  WSS-IARG       VALUE ZEROES               PIC 9(02).
           03  WSS-IFLD       VALUE ZEROES               PIC 9(02).
           03  WSS-J          VALUE ZEROES               PIC 9(02).
           03  WSS-FS-ARC     VALUE ZEROES               PIC 9(02).
           03  WSS-FS-ARG     VALUE ZEROES               PIC 9(02).
      *JSS-INI 8-OCT-1993 INDICADOR PARA SABER SI EXISTE
      *               POR LO MENOS UN ARC O ARG
           03  WSS-IND-ACAG   VALUE 'N'                  PIC X(01).
      *JSS-FIN
      *>>>> WSS
       01  PGM-VARI.
           03 PGM-ICLR                  VALUE ' '       PIC X(01).
           03 PGM-LIMPIAR-TODO          VALUE ' '       PIC X(01).
           03 PGM-LIMPIAR-LLAVES        VALUE 'K'       PIC X(01).
           03 PGM-LIMPIAR-CAMPOS        VALUE 'F'       PIC X(01).
           03 PGM-NO-LIMPIAR-NADA       VALUE 'N'       PIC X(01).
           03 PGM-PROG                                  PIC X(08).
           03 PGM-NTRN                                  PIC X(04).
           03 PGM-STAT.
              05 PGM-STAT-DBC.
                 88 PGM-STAT-DBC-NUL    VALUE '  '.
                 07 PGM-STT1-DBC        VALUE '2' PIC X(01).
                    88 PGM-STAT-DBC-OKS VALUE '0'.
                 07 PGM-STT2-DBC        VALUE '3' PIC X(01).
              05 PGM-STAT-CLF.
                 88 PGM-STAT-CLF-NUL    VALUE '  '.
                 07 PGM-STT1-CLF        VALUE '2' PIC X(01).
                    88 PGM-STAT-CLF-OKS VALUE '0'.
                 07 PGM-STT2-CLF        VALUE '3' PIC X(01).
              05 PGM-STAT-CRI.
                 88 PGM-STAT-CRI-NUL    VALUE '  '.
                 07 PGM-STT1-CRI        VALUE '2' PIC X(01).
                    88 PGM-STAT-CRI-OKS VALUE '0'.
                 07 PGM-STT2-CRI        VALUE '3' PIC X(01).
              05 PGM-STAT-USR.
                 88 PGM-STAT-USR-NUL    VALUE '  '.
                 07 PGM-STT1-USR        VALUE '2' PIC X(01).
                    88 PGM-STAT-USR-OKS VALUE '0'.
                 07 PGM-STT2-USR        VALUE '3' PIC X(01).
           03 PGM-SRNF                  VALUE '23'      PIC X(02).
           03 PGM-SOKS                  VALUE '00'      PIC X(02).
           03 PGM-SNUL                  VALUE '  '      PIC X(02).
           03 PGM-SUAR                  VALUE SPACES    PIC X(15).
           03 PGM-CMMA.
              05 PGM-CMMA-CHR OCCURS 275 PIC X(01).
       LINKAGE SECTION.
      *----------------
       01  DFHCOMMAREA.
           02 DFH-CMMA OCCURS 275 PIC X(01).
       COPY GNSLGFIO.

       PROCEDURE DIVISION.
      *===================

       MAIN SECTION.
       INI-MAIN.
           PERFORM INI.
       LUP-MAIN.
           IF SCR-INST = SCR-INST-HCM
                 PERFORM SCR-COM.
           IF SCR-CCPP = 'ACC'
                 PERFORM SCR-ACC
           ELSE
                 MOVE SCR-INST-HCM TO SCR-INST.
           GO TO LUP-MAIN.
       FIN-MAIN.
           EXIT.

       INI SECTION.
       INI-INI.
       COPY GNSBGEIB.
       COPY GNSBGEDB.
           MOVE LOW-VALUES TO CLN-FLD.
           MOVE LOW-VALUES TO CLN-EDT.
           PERFORM GNS-PRO-RCK.
           PERFORM GNS-BUS-VCA.
           MOVE +275 TO SCR-TCMA.
           PERFORM GNS-HDL-SYS.
           PERFORM GNS-HDL-FRM.
           MOVE 'LDCPQCLN' TO FIO-PROG.
           PERFORM GNS-BUS-IDD.
      *PTC-INI
           PERFORM GNS-ERR-QUE.
           PERFORM GET-TSK-TERM.
      *PTC-FIN
      *<<<< INI_FIO
           IF SCR-OFRM-SRV
              MOVE TSK-TERM-ALF TO CLN-COD-TERM
              MOVE TSK-TERM-ALF TO CLN-COD-TERM-MAS
           ELSE
              MOVE EIBTRMID     TO CLN-COD-TERM
              MOVE EIBTRMID     TO CLN-COD-TERM-MAS.

           IF FRM-FFLD = FRM-FFLD-PF5 AND
              SCR-INST = SCR-INST-GAB
              MOVE FRM-FFLD-PF5 TO WSS-FRM-FFLD
              MOVE FRM-FFLD-RET TO FRM-FFLD
              MOVE SCR-INST-GKY TO SCR-INST
           ELSE
           IF FRM-FFLD = FRM-FFLD-PF6 AND
              SCR-INST = SCR-INST-GAB
              MOVE FRM-FFLD-PF6 TO WSS-FRM-FFLD
              MOVE FRM-FFLD-RET TO FRM-FFLD
              MOVE SCR-INST-GKY TO SCR-INST
           ELSE
              MOVE FRM-FFLD-RET TO WSS-FRM-FFLD.
      *>>>>
           PERFORM GET-FHOY.
      * OBTIENE CODIGO VALOR DE CAMBIO DE PESOS MEDIANTE CIC DE LA MONED
           MOVE 'TAB'          TO FIO-SIST.
           MOVE 'VLR'          TO TAB-CIC-TTAB IN TAB.
           MOVE '0999  '       TO TAB-CIC-CTAB IN TAB.
           MOVE 'TAB-CIC-TABL' TO FIO-AKEY.
           MOVE FIO-GET-KEY    TO FIO-CMND.
           PERFORM GNS-FIO-TAB.
           IF NOT FIO-STAT-OKS
               MOVE 'TAB'          TO MSG-COD-SIST
               MOVE 'CIC0999  NEX' TO MSG-COD-MENS
               PERFORM GET-MSG
               PERFORM PRG-ABT.
           MOVE TAB-COD-CTAB IN TAB TO CCU-COD-PESO IN CCU-VARI.
           MOVE TAB-COD-CTAB IN TAB TO WSS-COD-PESOS TVC-MNAC.

           MOVE 'TAB'          TO FIO-SIST.
           MOVE 'VLR'          TO TAB-CIC-TTAB.
           MOVE '0998'         TO TAB-CIC-CTAB.
           MOVE FIO-GET-KEY    TO FIO-CMND.
           MOVE 'TAB-CIC-TABL' TO FIO-AKEY.
           PERFORM GNS-FIO-TAB.
           IF NOT FIO-STAT-OKS
               GO TO FIN-INI.
           MOVE TAB-COD-CTAB IN TAB TO WSS-COD-UEFES.
      *>>>>
       FIN-INI.
           EXIT.

       COPY GNSBHSYS.
       COPY GNSBHFRM.
       COPY GNSBPRCK.
       GNS-BUS-VCA SECTION.
       INI-GNS-BUS-VCA.
           MOVE 0 TO FRM-IFLD.
       LUP-GNS-BUS-VCA.
           ADD 1 TO FRM-IFLD.
           IF FRM-IFLD NOT > EIBCALEN AND
              FRM-IFLD NOT > 275
                MOVE DFH-CMMA(FRM-IFLD) TO PGM-CMMA-CHR(FRM-IFLD)
                GO TO LUP-GNS-BUS-VCA.
           MOVE PGM-CMMA TO SCR-VARI.
       FIN-GNS-BUS-VCA.
           EXIT.
       COPY GNSBBIDD.

       SCR-COM SECTION.
       INI-SCR-COM.
      *<<<< INI_SCR_COM
           PERFORM DEL-QUE-CLN.
      *>>>>
      *<<<< INI_SCR_COM
           MOVE CLN-NOM-TSCLN  TO QUE-COLA.
           MOVE QUE-DEL TO QUE-CMND.
           PERFORM GNS-PRO-QUE.
      *>>>>
           MOVE FRM-CPSF-AEY TO FRM-CPIM-AEY.
           PERFORM PRO-ALL.
           PERFORM SCR-CLRA-CLN.
           PERFORM EDT-KEY-CLN.
           PERFORM EDT-FLD-CLN.
           PERFORM SCR-PUTA.
           MOVE SCR-INST-HCM TO SCR-INST.
           MOVE SCR-CMNP     TO SYS-PROG.
           MOVE SCR-VARI     TO SYS-CMMA.
           MOVE SCR-TCMA     TO SYS-TCMA.
           MOVE SYS-XCTL     TO SYS-CMND.
      *PTC-INI
           IF NOT SCR-OFRM-SRV
      *PTC-FIN
           PERFORM GNS-PRO-SYS.
       XCT-ERR.
           MOVE 'XCTERR    ' TO MSG-COD-MENS.
           MOVE 'GNS'        TO MSG-COD-SIST.
           PERFORM GET-MSG.
           MOVE MSG-GLS-DESC TO SYS-MEN1.
           MOVE SYS-PROG     TO SYS-MEN2.
           MOVE SYS-ABOR     TO SYS-CMND.
      *PTC-INI
           IF NOT SCR-OFRM-SRV
      *PTC-FIN
           PERFORM GNS-PRO-SYS.
       COPY GNSBGGBK.
       FIN-SCR-COM.
           EXIT.



       SCR-ACC SECTION.
       INI-SCR-ACC.
           IF SCR-INST = SCR-INST-HKY
               PERFORM HBL-KEY
               MOVE SCR-INST-GKY TO SCR-INST
               PERFORM SCR-DMSG
           ELSE
           IF SCR-INST = SCR-INST-GKY
                PERFORM SCR-KEY
                IF SCR-STAT NOT = SCR-STAT-ABT
                        PERFORM SCR-TRL
                ELSE
                        PERFORM DESSCRTRL
                        GO TO FIN-SCR-ACC
           ELSE
           IF SCR-INST = SCR-INST-GAB
                PERFORM GET-CON
           ELSE
           IF SCR-INST = SCR-INST-BRW
               MOVE SCR-FFLD TO FRM-FFLD
               PERFORM BRW-SCR-ACC.
           PERFORM DESSCRTRL.
           MOVE SPACES TO FRM-MENS.
           PERFORM SCR-MSSG.
       FIN-SCR-ACC.
           EXIT.

       BRW-SCR-ACC SECTION.
       INI-BRW-SCR-ACC.
       FIN-BRW-SCR-ACC.
           EXIT.




       SCR-DMSG SECTION.
       INI-SCR-DMSG.
           IF PGM-ICLR = PGM-NO-LIMPIAR-NADA
               NEXT SENTENCE
           ELSE
           IF PGM-ICLR = PGM-LIMPIAR-TODO
               PERFORM SCR-CLRA-CLN
               PERFORM EDT-KEY-CLN
               PERFORM EDT-FLD-CLN
           ELSE
           IF PGM-ICLR = PGM-LIMPIAR-LLAVES
               PERFORM CLR-KEY-CLN
               PERFORM EDT-KEY-CLN
           ELSE
               PERFORM CLR-FLD-CLN
               PERFORM EDT-FLD-CLN.
           PERFORM SCR-PUTA.
           PERFORM SCR-EXIT.
       FIN-SCR-DMSG.
           EXIT.

       SCR-KEY SECTION.
       INI-SCR-KEY.
           PERFORM SCR-RST.
           PERFORM GET-KEY.
           IF FRM-STAT-ABT
                   MOVE SPACES TO FRM-MENS
                   PERFORM SCR-MSSG
                   GO TO FIN-SCR-KEY.
       FND-SCR-KEY.
           MOVE SPACES TO FRM-MENS.
           PERFORM FND-KEY.
           IF FIO-STAT-OKS
               PERFORM PUT-SCR
               MOVE PGM-LIMPIAR-TODO TO PGM-ICLR
               GO TO FIN-SCR-KEY.
      *JSS ELSE
      *        PERFORM CLR-FLD-CLN.
       ERR-SCR-KEY.
      *PTC-INI
           MOVE 'S' TO SCR-IERR.
      *PTC-FIN
           MOVE PGM-LIMPIAR-CAMPOS TO PGM-ICLR.
           IF FRM-MENS NOT > SPACES
               IF FIO-STAT-EOF
                   MOVE 'REGEOF    ' TO MSG-COD-MENS
                   MOVE 'GNS' TO MSG-COD-SIST
                   PERFORM GET-MSG
                   MOVE MSG-GLS-DESC TO FRM-MENS
               ELSE
               IF FIO-STAT = FIO-STAT-NEX
                   MOVE 'REGNEX    ' TO MSG-COD-MENS
                   MOVE 'GNS' TO MSG-COD-SIST
                   PERFORM GET-MSG
                   MOVE MSG-GLS-DESC TO FRM-MENS
               ELSE
                   MOVE 'FIOSTAT' TO MSG-COD-TMSG
                   MOVE FIO-STAT  TO MSG-COD-CMSG
                   MOVE 'GNS'     TO MSG-COD-SIST
                   PERFORM GET-MSG
                   MOVE MSG-GLS-DESC TO FRM-MENS.
           PERFORM SCR-MSSG.
           MOVE SCR-STAT-ABT TO SCR-STAT.
       FIN-SCR-KEY.
           EXIT.

       SCR-RST SECTION.
       INI-SCR-RST.
           MOVE SPACES       TO PGM-ICLR.
           MOVE SPACES       TO SCR-ACTU.
           MOVE SCR-STPP     TO SCR-STAT.
           MOVE SCR-MFLD-NOT TO SCR-MFLD.
           MOVE LOW-VALUES   TO CLN-FLD.
           MOVE LOW-VALUES TO CLN-EDT.
       FIN-SCR-RST.
           EXIT.

       GET-KEY SECTION.
       INI-GET-KEY.
           PERFORM SCR-GKEY.
           IF FRM-STAT-ABT
               MOVE SCR-STAT-ABT TO SCR-STAT.
       FIN-GET-KEY.
           EXIT.

       GET-IKY SECTION.
       INI-GET-IKY.
           PERFORM SCR-GIKY.
           IF FRM-STAT-ABT
               MOVE SCR-STAT-ABT TO SCR-STAT.
       FIN-GET-IKY.
           EXIT.

       FND-KEY SECTION.
       INI-FND-KEY.
      *<<<< INI_FND_KEY
           IF WSS-FRM-FFLD = FRM-FFLD-PF5 OR
              WSS-FRM-FFLD = FRM-FFLD-PF6
              MOVE '00' TO FIO-STAT
              GO TO FIN-FND-KEY.

           PERFORM DEL-QUE-CLN.
           PERFORM CLN-ANL-KEY.
           MOVE 1 TO SCR-NUM-PANT.
           GO TO FIN-FND-KEY.
           MOVE ZEROES TO SCR-TOT-OCCU.
      *>>>>
           PERFORM KEY-ALL-CLN.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM LDC-FIO-CLF.
           IF FIO-STAT-OKS
               MOVE CLF-STP-ITRN IN CLF TO SCR-UMOD.
           MOVE FIO-STAT TO PGM-STAT-CLF.
       FIN-FND-KEY.
           IF FIO-STAT = FIO-STAT-NEX
               MOVE 'S' TO SCR-IERR.
       EXT-FND-KEY.
           EXIT.
 
       PUT-SCR SECTION.
       INI-PUT-SCR.
           IF PGM-STAT-CLF-OKS
               MOVE CLF-STP-ITRN IN CLF TO SCR-UMOD.
      *<<<< PUT_SCR
           IF WSS-FRM-FFLD = FRM-FFLD-PF5 OR
              WSS-FRM-FFLD = FRM-FFLD-PF6
              GO TO EXT-PUT-SCR.
           PERFORM CLN-PUT-SCR.
       EXT-PUT-SCR.
      *>>>>
           PERFORM PUT-ALL-CLN.
      *<<<< FIN_PUT_SCR
      * AQUI MOVER LOS DATOS DE TS-CLN A PANTALLA
           MOVE SCR-TOT-OCCU TO CLN-MAS-NUM-TOCC.
           MOVE WSS-IND-HMAS TO CLN-MAS-IND-HMAS.
           IF WSS-FRM-FFLD = FRM-FFLD-RET
              MOVE ZEROES TO QUE-NITM
           ELSE
           IF WSS-FRM-FFLD = FRM-FFLD-PF6
              COMPUTE QUE-NITM = (SCR-NUM-PANT * WSS-MAX-PANT)
              IF QUE-NITM NOT < SCR-TOT-OCCU
                 MOVE 'S' TO WSS-HAY-ERRO
                 MOVE 'LDC' TO MSG-COD-SIST
                 MOVE 'CLNPF6 NEX' TO MSG-COD-MENS
                 PERFORM GET-MSG
                 MOVE MSG-GLS-DESC TO FRM-MENS
                 COMPUTE QUE-NITM =
                        (SCR-NUM-PANT * WSS-MAX-PANT) - WSS-MAX-PANT
              ELSE
                 ADD 1 TO SCR-NUM-PANT
           ELSE
           IF WSS-FRM-FFLD = FRM-FFLD-PF5
              COMPUTE QUE-NITM = (SCR-NUM-PANT * WSS-MAX-PANT) -
                     (2 * WSS-MAX-PANT - 1)
              IF QUE-NITM < 1
                 MOVE 'S' TO WSS-HAY-ERRO
                 MOVE 'LDC' TO MSG-COD-SIST
                 MOVE 'CLNPF5 NEX' TO MSG-COD-MENS
                 PERFORM GET-MSG
                 MOVE MSG-GLS-DESC TO FRM-MENS
                 COMPUTE QUE-NITM =
                        (SCR-NUM-PANT * WSS-MAX-PANT) - WSS-MAX-PANT
              ELSE
                 SUBTRACT 1 FROM QUE-NITM
                 SUBTRACT 1 FROM SCR-NUM-PANT.
           MOVE CLN-NOM-TSCLN TO QUE-COLA.
           MOVE CLN-LEN-TSCLN TO QUE-LITM.
       CLN-CIC-LEE-TS.
           ADD 1 TO QUE-NITM.
           MOVE QUE-GET TO QUE-CMND.
           PERFORM GNS-PRO-QUE.
           IF QUE-STAT = QUE-STAT-OKS
              MOVE QUE-ITEM TO CLN-ITEM
              PERFORM CLN-MOV-TS-FRM
              GO TO CLN-CIC-LEE-TS
           ELSE
           IF QUE-NITM = 1 AND NOT FRM-MENS > SPACES
              MOVE 'LDC' TO MSG-COD-SIST
              MOVE 'CLN    NEX' TO MSG-COD-MENS
              PERFORM GET-MSG
              MOVE MSG-GLS-DESC TO FRM-MENS.
      *>>>>
       FIN-PUT-SCR.
           EXIT.

       STP-EXIT SECTION.
       INI-STP-EXIT.
           MOVE SCR-PROG TO PGM-PROG.
           MOVE SCR-NTRN TO PGM-NTRN.

           MOVE SCR-PROV TO SCR-PROG.
           MOVE SCR-NTRV TO SCR-NTRN.

           MOVE PGM-PROG TO SCR-PROV
           MOVE PGM-NTRN TO SCR-NTRV.
       FIN-STP-EXIT.
           EXIT.

       SCR-EXIT SECTION.
       INI-SCR-EXIT.
           MOVE 'P'      TO SCR-ICMN.
           MOVE SCR-NTRN TO SYS-NTRN.
           MOVE SCR-VARI TO SYS-CMMA.
           MOVE SCR-TCMA TO SYS-TCMA.
           MOVE SYS-RTRN TO SYS-CMND.
      *PTC-INI
           IF NOT SCR-OFRM-SRV
      *PTC-FIN
           PERFORM GNS-PRO-SYS.
       FIN-SCR-EXIT.
           EXIT.

       SCR-PUTA SECTION.
       INI-SCR-PUTA.
      *PTC-INI
           IF FRM-SUAR EQUAL FRM-SUAR-MAL OR FRM-SUAR-CLR
               MOVE 'S' TO SCR-IERR.
      *PTC-FIN
           MOVE SCR-NMAP TO FRM-NAME.
           MOVE SCR-NLIB TO FRM-NLIB.
           MOVE CLN-FLD TO FRM-DFLD.
           MOVE FRM-PUT-ALL TO FRM-CMND.
           PERFORM GNS-PRO-FRM.
       FIN-SCR-PUTA.
           EXIT.

       SCR-MSSG SECTION.
       INI-SCR-MSSG.
           IF FRM-MEN1 NOT > SPACES
               MOVE SPACES TO FRM-MEN1.
           IF FRM-MEN2 NOT > SPACES
               MOVE SPACES TO FRM-MEN2.
           MOVE FRM-MENS TO CLN-GLS-MENS.
       FIN-SCR-MSSG.
           EXIT.

       SCR-GKEY SECTION.
       INI-SCR-GKEY.
           MOVE SCR-NMAP TO FRM-NAME.
           MOVE SCR-NLIB TO FRM-NLIB.
           MOVE FRM-GET-ALL TO FRM-CMND.
           PERFORM GNS-PRO-FRM.
           MOVE SPACES TO FRM-MENS.
      *<<<< PFS_SCR_GKEY_PREV
           IF WSS-FRM-FFLD = FRM-FFLD-PF5 OR
              WSS-FRM-FFLD = FRM-FFLD-PF6
              IF FRM-FFLD = FRM-FFLD-PF5
                 MOVE FRM-FFLD-RET TO FRM-FFLD
              ELSE
                 IF FRM-FFLD = FRM-FFLD-PF6
                    MOVE FRM-FFLD-RET TO FRM-FFLD.
      *>>>>
           IF NOT ( FRM-FFLD = FRM-FFLD-RET  OR FRM-FFLD-PF10 OR
                               FRM-FFLD-PF12 OR FRM-FFLD-PF3 )
               MOVE 'PFSINV    ' TO MSG-COD-MENS
               MOVE 'GNS' TO MSG-COD-SIST
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS
               PERFORM FST-KEY-CLN
               PERFORM SCR-MSSG
               PERFORM SCR-PUTA
               PERFORM SCR-EXIT.
           MOVE FRM-DFLD TO CLN-FLD.
           IF FRM-STAT-ABT
               GO TO FIN-SCR-GKEY.
           MOVE FRM-SUAR-OKS TO FRM-SUAR.
           PERFORM VAL-NUM-KEY-CLN.
           PERFORM VAL-NUM-FLD-CLN.
           IF FRM-SUAR EQUAL FRM-SUAR-MAL OR FRM-SUAR-CLR
      *PTC-INI
               MOVE 'S' TO SCR-IERR
      *PTC-FIN
               PERFORM SCR-MSSG
               PERFORM EDT-KEY-CLN
               PERFORM SCR-PUTA
               PERFORM SCR-EXIT.
      *JSS
           PERFORM CLR-FLD-CLN.
           PERFORM VAL-IKY-CLN.
           IF FRM-SUAR EQUAL FRM-SUAR-MAL OR FRM-SUAR-CLR
               GO TO ERR-SCR-GKEY.
           PERFORM VAL-MKY-CLN.
           IF FRM-SUAR EQUAL FRM-SUAR-MAL OR FRM-SUAR-CLR
               GO TO ERR-SCR-GKEY.
           PERFORM VAL-AKY-CLN.
           IF FRM-SUAR EQUAL FRM-SUAR-MAL OR FRM-SUAR-CLR
               GO TO ERR-SCR-GKEY.
           PERFORM VAL-CON-KEY-CLN.
           IF NOT ( FRM-SUAR EQUAL FRM-SUAR-MAL OR FRM-SUAR-CLR )
               GO TO FIN-SCR-GKEY.
           IF FRM-UCUR NOT > SPACES
               PERFORM FST-KEY-CLN.
       ERR-SCR-GKEY.
      *PTC-INI
           MOVE 'S' TO SCR-IERR.
      *PTC-FIN
           PERFORM SCR-MSSG.
           PERFORM EDT-KEY-CLN.
           PERFORM SCR-PUTA.
           PERFORM SCR-EXIT.
       FIN-SCR-GKEY.
           PERFORM SCR-MSSG.

       SCR-GIKY SECTION.
       INI-SCR-GIKY.
           MOVE SCR-NMAP TO FRM-NAME.
           MOVE SCR-NLIB TO FRM-NLIB.
           MOVE FRM-GET-ALL TO FRM-CMND.
           PERFORM GNS-PRO-FRM.
           MOVE SPACES TO FRM-MENS.
           IF NOT ( FRM-FFLD = FRM-FFLD-RET  OR FRM-FFLD-PF10 OR
                               FRM-FFLD-PF12 OR FRM-FFLD-PF3 )
               MOVE 'PFSINV    ' TO MSG-COD-MENS
               MOVE 'GNS' TO MSG-COD-SIST
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS
               PERFORM FST-KEY-CLN
               PERFORM SCR-MSSG
               PERFORM SCR-PUTA
               PERFORM SCR-EXIT.
           MOVE FRM-DFLD TO CLN-FLD.
           IF FRM-STAT-ABT
               GO TO FIN-SCR-GIKY.
           MOVE FRM-SUAR-OKS TO FRM-SUAR.
           PERFORM VAL-NUM-KEY-CLN.
           IF FRM-SUAR EQUAL FRM-SUAR-MAL OR FRM-SUAR-CLR
      *PTC-INI
               MOVE 'S' TO SCR-IERR
      *PTC-FIN
               PERFORM SCR-MSSG
               PERFORM EDT-IKY-CLN
               PERFORM SCR-PUTA
               PERFORM SCR-EXIT.
      *JSS
           PERFORM CLR-FLD-CLN.
           PERFORM VAL-IKY-CLN.
           IF FRM-SUAR EQUAL FRM-SUAR-MAL OR FRM-SUAR-CLR
               GO TO ERR-SCR-GIKY.
           PERFORM VAL-CON-IKY-CLN.
           IF NOT ( FRM-SUAR EQUAL FRM-SUAR-MAL OR FRM-SUAR-CLR )
               GO TO FIN-SCR-GIKY.
           IF FRM-UCUR NOT > SPACES
               PERFORM FST-KEY-CLN.
       ERR-SCR-GIKY.
      *PTC-INI
           MOVE 'S' TO SCR-IERR.
      *PTC-FIN
           PERFORM SCR-MSSG.
           PERFORM EDT-IKY-CLN.
           PERFORM SCR-PUTA.
           PERFORM SCR-EXIT.
       FIN-SCR-GIKY.
           PERFORM SCR-MSSG.

       GET-CON SECTION.
       INI-GET-CON.
           MOVE SCR-NMAP TO FRM-NAME.
           MOVE SCR-NLIB TO FRM-NLIB.
           MOVE FRM-GET-ALL TO FRM-CMND.
           PERFORM GNS-PRO-FRM.
           IF NOT ( FRM-FFLD = FRM-FFLD-RET  OR FRM-FFLD-PF10 OR
                               FRM-FFLD-PF12 OR FRM-FFLD-PF3 )
               MOVE 'PFSINV    ' TO MSG-COD-MENS
               MOVE 'GNS' TO MSG-COD-SIST
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO CLN-GLS-MEN2
               MOVE SCR-PRMT     TO CLN-GLS-MEN1
               PERFORM FST-MSG
               PERFORM SCR-PUTA
               PERFORM SCR-EXIT.
           MOVE FRM-DFLD TO CLN-FLD.
       FIN-GET-CON.
           MOVE SCR-STAT-CON TO SCR-STAT.

       CLR-MSG SECTION.
       INI-CLR-MSG.
           MOVE SPACES TO CLN-GLS-MENS.
       FIN-CLR-MSG.
           EXIT.

       HBL-IKY SECTION.
       INI-HBL-IKY.
      *PTC-INI
           IF NOT SCR-OFRM-SRV
      *PTC-FIN
           IF SCR-DESDE-CMN
               MOVE CLN-GLS-MENS TO FRM-MENS
               MOVE LOW-VALUES TO CLN-FLD
      * FLB  7-NOV-1994
               PERFORM CLR-KEY-CLN

               IF FRM-MENS < SPACES
                   MOVE LOW-VALUES TO CLN-GLS-MENS
               ELSE
                   MOVE FRM-MENS TO CLN-GLS-MENS.
           PERFORM PRO-MKY-CLN.
           PERFORM PRO-AKY-CLN.
           PERFORM UNP-IKY-CLN.
           PERFORM FST-KEY-CLN.
       FIN-HBL-IKY.
           EXIT.

       HBL-KEY SECTION.
       INI-HBL-KEY.
      *PTC-INI
           IF NOT SCR-OFRM-SRV
      *PTC-FIN
           IF SCR-DESDE-CMN
               MOVE CLN-GLS-MENS TO FRM-MENS
               MOVE LOW-VALUES TO CLN-FLD
               IF FRM-MENS < SPACES
                   MOVE LOW-VALUES TO CLN-GLS-MENS
               ELSE
                   MOVE FRM-MENS TO CLN-GLS-MENS.
           PERFORM UNP-KEY-CLN.
           PERFORM FST-KEY-CLN.
       FIN-HBL-KEY.
           EXIT.

       HBL-FLD SECTION.
       INI-HBL-FLD.
           PERFORM PRO-IKY-CLN.
           PERFORM PRO-AKY-CLN.
           PERFORM UNP-MKY-CLN.
           PERFORM UNP-FLD-CLN.
           PERFORM FST-FLD-CLN.
       FIN-HBL-FLD.
           EXIT.

       FST-MSG SECTION.
       INI-FST-MSG.
           MOVE -1 TO CLN-GLS-MENS-LEN.
       FIN-FST-MSG.
           EXIT.

       PRO-ALL SECTION.
       INI-PRO-ALL.
           PERFORM PRO-KEY-CLN.
           PERFORM FST-MSG.
       FIN-PRO-ALL.
           EXIT.

       SCR-TRL SECTION.
       INI-SCR-TRL.
      *PTC-INI
           IF SCR-STAT NOT = SCR-STPP
               MOVE 'S' TO SCR-IERR.
      *PTC-FIN
           IF FRM-MEN1 NOT > SPACES
               MOVE SCR-PRMT TO FRM-MEN1.
           IF SCR-STAT = SCR-STAT-MOD
               PERFORM HBL-FLD
               PERFORM SCR-MSSG
               PERFORM EDT-KEY-CLN
               PERFORM EDT-FLD-CLN
               PERFORM SCR-PUTA
               PERFORM STP-EXIT
               MOVE SCR-INST-GFL TO SCR-INST
               PERFORM SCR-EXIT.
           IF SCR-STAT = SCR-STAT-SON
               PERFORM PRO-ALL
               PERFORM SCR-MSSG
               PERFORM EDT-KEY-CLN
               PERFORM EDT-FLD-CLN
               PERFORM SCR-PUTA
               PERFORM STP-EXIT
               MOVE SCR-INST-GCS TO SCR-INST
               PERFORM SCR-EXIT.
      *ASUME SCR-STAT-CON.
           MOVE SCR-STAT-CON TO SCR-STAT.
      *    MOVE FRM-CPSF-AEY TO FRM-CPIM-AEY.
           PERFORM PRO-ALL.
           PERFORM SCR-MSSG.
           PERFORM EDT-KEY-CLN.
           PERFORM EDT-FLD-CLN.
           PERFORM SCR-PUTA.
           MOVE SCR-INST-GAB TO SCR-INST.
           PERFORM SCR-EXIT.
       FIN-SCR-TRL.
           EXIT.

       DESSCRTRL SECTION.
       INI-DESSCRTRL.
           MOVE SCR-VFLD-NOT TO SCR-VFLD.
           MOVE FRM-FFLD TO SCR-FFLD.
       FIN-DESSCRTRL.
           IF SCR-FFLD-PF10 OR SCR-FFLD-PF3
                 MOVE SCR-INST-HCM TO SCR-INST
           ELSE
                 MOVE SCR-INST-HKY TO SCR-INST.
       EXT-DESSCRTRL.
           EXIT.

      * PGM-EBR-ALL SECTION.
      * INI-PGM-EBR-ALL.
      *     MOVE 'GNS' TO FIO-SIST.
      *     MOVE FIO-EBR-ALL TO FIO-CMND.
      *     PERFORM GNS-FIO-TAB.
      * FIN-PGM-EBR-ALL.
      *     EXIT.

       COPY LDCBQCLN.
       COPY GNSBVNUM.
       COPY LDCBFCLF.
       COPY GNSBFMSG.
       COPY GNSBGSYS.
       COPY GNSBGDTC.
      *PTC-INI
      *PTC-SUB
      * ISP  10-MAY-2001 13:46:35 
      * COPY GNSBGFRM.
       COPY GNSBG3CF.
      *PTC-FIN
       COPY GNSBGMSG.
       COPY GNSBEKEY.
       COPY GNSBIABT.
       COPY GNSBBTAB.
       COPY GNSBFTAB.
       COPY GNSBBMSC.
       COPY GNSBVIND.
       COPY GNSBVMSC.
       COPY GNSBFMSC.
       COPY GNSBVIDC.
       COPY GNSBPVRF.
       COPY GNSBGFEC.
       COPY GNSBGHOY.
       COPY TABBBOFI.
       COPY TABBFOFI.
       COPY TABBBUSR.
       COPY TABBFUSR.
      *PTC-INI
       COPY GNSBGQUE.
       COPY GNSBGTSK.
      *PTC-FIN

      *<<<< EOF
       DEL-QUE-CLN SECTION.
       INI-DEL-QUE-CLN.
           MOVE CLN-NOM-TSCLN TO QUE-COLA.
           MOVE QUE-DEL TO QUE-CMND.
           PERFORM GNS-PRO-QUE.
       FIN-DEL-QUE-CLN.
           EXIT.

       CLN-MOV-TS-FRM SECTION.
       INI-CLN-MOV-TS-FRM.
           IF SCR-OFRM-SRV
              GO TO FIN-CLN-MOV-TS-FRM
           ELSE
              IF WSS-IND-PANT > WSS-MAX-PANT
                 GO TO FIN-CLN-MOV-TS-FRM.

           PERFORM CLN-MOV-TS-FRM-ELM.
      *     MOVE CLN-FLD01 TO
      *                FLD01 IN CLN-FLD(WSS-IND-PANT).
           ADD 1 TO WSS-IND-PANT.
       FIN-CLN-MOV-TS-FRM.
           EXIT.

      *<<<< EOF
       CLN-PUT-SCR SECTION.
       INI-CLN-PUT-SCR.
       FIN-CLN-PUT-SCR.
           EXIT.

       CLN-ANL-KEY SECTION.
       INI-CLN-ANL-KEY.
           PERFORM CARGA-LDC.
           PERFORM LEE-PAD-CLF.
       FIN-CLN-ANL-KEY.
           EXIT.

       CARGA-LDC SECTION.
       INI-CARGA-LDC.
           MOVE SPACES TO MSG-COD-MENS.
      *FLB CST  21-SEP-1994 CCU FUNCIONE LUEGO MCA/CMX Y ANTES ACA
           IF MSG-COD-MENS > SPACES
              MOVE 'DEU' TO MSG-COD-SIST
              PERFORM GET-MSG.
           IF MSG-COD-MENS > SPACES AND CCU-MENS NOT > SPACES AND
              (NOT (CLF-COD-STAT IN CLF = 'M' OR 'X')
                OR  CLF-MSC-STAT IN CLF = 'V')
              MOVE MSG-GLS-DESC TO FRM-MENS
           ELSE
           IF MSG-COD-MENS > SPACES AND CCU-MENS NOT > SPACES AND
              (CLF-COD-STAT IN CLF = 'M' OR 'X')
              MOVE MSG-GLS-DESC TO FRM-MEN1
              MOVE 'DEU' TO MSG-COD-SIST
              MOVE 'CLFREN-' TO MSG-COD-TMSG
              MOVE CLF-COD-STAT IN CLF TO MSG-COD-CMSG
              PERFORM GET-MSG
              MOVE MSG-GLS-DESC TO FRM-MEN2
           ELSE
           IF MSG-COD-MENS > SPACES
              IF CCU-MEN1 > SPACES
                 MOVE CCU-MEN1 TO FRM-MEN2
              ELSE
                 MOVE CCU-MEN2 TO FRM-MEN2
           ELSE
           IF (CLF-COD-STAT IN CLF = 'M' OR 'X') AND
               CLF-MSC-STAT IN CLF NOT = 'V'
              MOVE 'DEU' TO MSG-COD-SIST
              MOVE 'CLFREN-' TO MSG-COD-TMSG
              MOVE CLF-COD-STAT IN CLF TO MSG-COD-CMSG
              PERFORM GET-MSG
              IF CCU-MENS NOT > SPACES
                 MOVE MSG-GLS-DESC TO FRM-MENS
              ELSE
                 IF CCU-MEN1 > SPACES
                    MOVE MSG-GLS-DESC TO FRM-MEN2
                 ELSE
                    MOVE CCU-MEN2 TO FRM-MEN1
                    MOVE MSG-GLS-DESC TO FRM-MEN2
           ELSE
              MOVE CCU-MENS TO FRM-MENS.

      * FMR: CMT verificar si existen
           IF FRM-MEN2 NOT > SPACES
              MOVE CLF-CIC-ICLF IN CLF TO RCE-GLS-IENT IN RCE
      *<<<< NOT PGM_PER
              MOVE 'DEU'               TO RCE-COD-SIST IN RCE
              MOVE 'CLF'               TO RCE-COD-ENTI IN RCE
      *>>>>
              MOVE SPACES              TO RCE-COD-SENT IN RCE
              MOVE 'RCE-KEY-IENT'      TO FIO-AKEY
              MOVE FIO-GET-KEY         TO FIO-CMND
              PERFORM GNS-FIO-RCE
              IF FIO-STAT-OKS
                 MOVE 'DEU'            TO MSG-COD-SIST
                 MOVE 'CLFEXTCMT'      TO MSG-COD-MENS
                 PERFORM GET-MSG
                 MOVE MSG-GLS-DESC     TO FRM-MEN2
              ELSE
                 MOVE SPACES           TO FRM-MEN2.
           MOVE '00' TO FIO-STAT.
       FIN-CARGA-LDC.
           EXIT.

       LEE-PAD-CLF SECTION.
       INI-LEE-PAD-CLF.
      * Lee por Capacidad de Credito y luego busca Cliente
           MOVE CLN-NOM-TSCLN  TO QUE-COLA.
           MOVE QUE-DEL TO QUE-CMND.
           PERFORM GNS-PRO-QUE.
           IF CLF-IIC-ICLF IN CLN-FLD > ZEROES
              PERFORM KEY-ALL-CLN
              MOVE ZEROES TO SCR-TOT-OCCU
              MOVE FIO-GET-KEY TO FIO-CMND
              PERFORM LDC-FIO-CLF
              MOVE FIO-STAT TO PGM-STAT-CLF
              IF FIO-STAT-OKS
                 PERFORM GET-CUR-RDC
                 IF NOT PGM-STAT-RDC-OKS
                    MOVE 'DEU'          TO MSG-COD-SIST
                    MOVE 'CLF    NORDC' TO MSG-COD-MENS
                    MOVE SCR-STAT-CON TO SCR-STAT
                    GO TO ERR-LEE-PAD-CLF
                 ELSE
      *MHM-INI 08-OCT-2009 MULTILINEA INMOBILIARIA
                  IF CLF-COD-TOCF IN CLF NOT = 'CLF'
                     MOVE 'DEU'          TO MSG-COD-SIST
                     MOVE 'TIO    NOCLF' TO MSG-COD-MENS
                     MOVE SCR-STAT-CON TO SCR-STAT
                     PERFORM GET-MSG
                     MOVE MSG-GLS-DESC TO FRM-MENS
                     MOVE 'S' TO SCR-IERR
                     GO TO ERR-LEE-PAD-CLF
                  ELSE
      *MHM-FIN 08-OCT-2009 MULTILINEA INMOBILIARIA
                    MOVE RDC-CIC-ICLI IN RDC TO DBC-CIC-ICLI IN DBC
                    MOVE FIO-GET-KEY         TO FIO-CMND
                    PERFORM SGC-FIO-DBC
                    MOVE FIO-STAT TO PGM-STAT-DBC
                    IF NOT FIO-STAT-OKS
                       MOVE 'TAB'        TO MSG-COD-SIST
                       MOVE 'CLI    NEX' TO MSG-COD-MENS
                       PERFORM GET-MSG
                       MOVE MSG-GLS-DESC TO FRM-MENS
                       MOVE FIO-STAT-NEX TO PGM-STAT-DBC
                       MOVE SCR-STAT-CON TO SCR-STAT
                       GO TO ERR-LEE-PAD-CLF
                    ELSE
                       PERFORM GET-NXT-RDC
                       MOVE '00' TO PGM-STAT-DBC
                       MOVE '00' TO FIO-STAT
                       GO TO FIN-BUS-PAD
           ELSE
              MOVE 'CLF    NEX' TO MSG-COD-MENS
              GO TO ERR-LEE-PAD-CLF.

      * Lee Cliente y luego busca Capacidad de Credito
      *    busca el padre por alguna de las llaves (la digitada)
           IF DBC-NUM-ICLI IN CLN-FLD NOT = ZEROES
      *IDC-CLI Busca Cliente por medio de IdC
              MOVE DBC-NUM-ICLI IN CLN-FLD TO DBC-NUM-ICLI IN DBC
              MOVE DBC-IND-ICLI IN CLN-FLD TO DBC-IND-ICLI IN DBC
              MOVE DBC-GLS-ICLI IN CLN-FLD TO DBC-GLS-ICLI IN DBC
              MOVE 'DBC-IDC-ICLI' TO FIO-AKEY
              MOVE FIO-GET-KEY    TO FIO-CMND
              PERFORM GET-CLI
              IF MSG-COD-MENS NOT > SPACES
                 MOVE DBC-GLS-NOMC IN DBC TO CPT-STRN
                 PERFORM CPT-BLKS
                 MOVE CPT-STRN TO DBC-GLS-NOMC IN CLN-FLD
                 MOVE DBC-CAI-ICLI IN DBC TO
                      DBC-CAI-ICLI IN CLN-FLD
                 MOVE DBC-IIC-ICLI IN DBC TO
                      DBC-IIC-ICLI IN CLN-FLD
                 MOVE '00' TO PGM-STAT-DBC
                 GO TO FIN-BUS-CLI-KEY
              ELSE
                 MOVE MSG-GLS-DESC TO FRM-MENS
                                      CLN-GLS-MENS
                 MOVE 'S' TO SCR-IERR.
           IF DBC-GLS-NOMC IN CLN-FLD > SPACES
      *NOM-CLI Busca Cliente por medio del Nombre
              MOVE DBC-GLS-NOMC IN CLN-FLD TO STR-GLS-GSTR
              PERFORM STR-UNS
              MOVE STR-GLS-FUNS IN STR-VARI(1) TO
                   DBC-GLS-APAT IN DBC
              MOVE STR-GLS-FUNS IN STR-VARI(2) TO
                   DBC-GLS-AMAT IN DBC
              MOVE STR-GLS-FUNS IN STR-VARI(3) TO
                   DBC-GLS-NOMB IN DBC
              MOVE 'DBC-GLS-NOMC' TO FIO-AKEY
              MOVE FIO-GET-NLS    TO FIO-CMND
              PERFORM GET-CLI
              IF MSG-COD-MENS NOT > SPACES
                 MOVE DBC-NUM-ICLI IN DBC TO
                      DBC-NUM-ICLI IN CLN-FLD
                 MOVE DBC-VRF-ICLI IN DBC TO
                      DBC-VRF-ICLI IN CLN-FLD
                 MOVE DBC-IND-ICLI IN DBC TO
                      DBC-IND-ICLI IN CLN-FLD
                 MOVE DBC-GLS-ICLI IN DBC TO
                      DBC-GLS-ICLI IN CLN-FLD
                 MOVE DBC-GLS-NOMC IN DBC TO CPT-STRN
                 PERFORM CPT-BLKS
                 MOVE CPT-STRN TO DBC-GLS-NOMC IN CLN-FLD
                 MOVE DBC-CAI-ICLI IN DBC TO
                      DBC-CAI-ICLI IN CLN-FLD
                 MOVE DBC-IIC-ICLI IN DBC TO
                      DBC-IIC-ICLI IN CLN-FLD
                 MOVE '00' TO PGM-STAT-DBC
                 GO TO FIN-BUS-CLI-KEY
              ELSE
                 MOVE MSG-GLS-DESC TO FRM-MENS
                                      CLN-GLS-MENS
                 MOVE 'S' TO SCR-IERR.
       FIN-BUS-CLI-KEY.
           IF MSG-COD-MENS > SPACES
              GO TO ERR-LEE-PAD-CLF.
           MOVE '00' TO PGM-STAT-DBC.
           MOVE SPACES TO MSG-COD-MENS
           PERFORM BUS-CLF.
           IF MSG-COD-MENS > SPACES
              PERFORM GET-MSG
              MOVE MSG-GLS-DESC TO FRM-MENS
              GO TO ERR-LEE-PAD-CLF.

       FIN-BUS-PAD.
           IF NOT FIO-STAT-OKS
              MOVE 'CLF    NEX' TO MSG-COD-MENS
              GO TO ERR-LEE-PAD-CLF.

      * NO ESTA EN BNL, A LO MEJOR SIGNIFICA OTRA LLAVE
           MOVE CLF-KEY-ICLF IN CLF TO LDC-CIC-ICLF IN LDC.
           MOVE ZEROES TO LDC-NUM-ILDC IN LDC.
           MOVE FIO-GET-NLS TO FIO-CMND.
           PERFORM LDC-FIO-LDC.
           IF NOT FIO-STAT-OKS OR
              LDC-CIC-ICLF IN LDC NOT = CLF-KEY-ICLF IN CLF
              MOVE 'LDC    NEX' TO MSG-COD-MENS
              GO TO ERR-LEE-PAD-CLF.
           IF FIO-STAT-OKS
              MOVE FIO-END-BRW TO FIO-CMND
              PERFORM LDC-FIO-LDC.
           PERFORM GET-FHOY.
           MOVE HOY-SHOY TO WSS-NUM-SHOY IN WSS-VARI.
           MOVE HOY-AHOY TO WSS-NUM-AHOY IN WSS-VARI.
           MOVE HOY-MHOY TO WSS-NUM-MHOY IN WSS-VARI.
           MOVE HOY-DHOY TO WSS-NUM-DHOY IN WSS-VARI.

      *FLB CST  21-SEP-1994 CCU FUNCIONE LUEGO MCA/CMX Y ANTES ACA
           IF (CLF-MSC-STAT IN CLF = 'A' OR
               CLF-MSC-STAT IN CLF = 'V' OR
               CLF-COD-STAT IN CLF = 'M' AND
               CLF-MSC-STAT IN CLF NOT = 'V' OR
               CLF-COD-STAT IN CLF = 'X') AND
              (CLF-FEC-FVEN IN CLF NOT < WSS-FEC-FHOY IN WSS-VARI)
              MOVE CLF-KEY-ICLF IN CLF TO CCU-CIC-ICLF
              MOVE SPACES TO CCU-CAI-IOPC(1)
              MOVE ZEROES TO CCU-IIC-IOPC(1)
              MOVE SPACES TO CCU-CAI-DCAN(1)
              MOVE ZEROES TO CCU-IIC-DCAN(1)
              MOVE ZEROES TO CCU-NUM-DCAN(1)
              MOVE SPACES TO CCU-OPE-INDS
      *PVG INI 01-AGO-2005
              PERFORM CON-VSN-SBGL
      *PVG FIN 01-AGO-2005
              PERFORM LDC-PRO-CCU
              IF CCU-NUM-MENS < CCU-NUM-CALC AND CCU-NUM-MENS > ZEROES
                 IF CCU-MEN1 > SPACES AND CCU-MEN2 > SPACES
                    MOVE CCU-MENS TO FRM-MENS
                    GO TO ERR-LEE-PAD-CLF
                 ELSE
                 IF CCU-MEN1 > SPACES
                    MOVE CCU-MEN1 TO FRM-MEN1
                    GO TO ERR-LEE-PAD-CLF
                 ELSE
                 IF CCU-MEN2 > SPACES
                    MOVE CCU-MEN2 TO FRM-MEN2
                    GO TO ERR-LEE-PAD-CLF
                 ELSE
                    GO TO ERR-LEE-PAD-CLF
              ELSE
                 MULTIPLY CCU-VAL-CUTI IN CCU-VARI BY 1
                   GIVING WSS-VAL-CUTI ROUNDED
                 MOVE WSS-VAL-CUTI TO FRM-VAL-CUTI IN CLN-FLD
                 SUBTRACT WSS-VAL-CUTI FROM CLF-VAL-CMAX IN CLF GIVING
                          FRM-VAL-CDIS IN CLN-FLD
           ELSE
              MOVE 'CLF    NOVIG' TO MSG-COD-MENS
              GO TO ERR-LEE-PAD-CLF.
           MOVE 'TAB' TO FIO-SIST.
           MOVE 'TIO ' TO TAB-COD-TTAB IN TAB.
           MOVE CLF-COD-TOCF IN CLF TO TAB-COD-CTAB IN TAB.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM GNS-FIO-TAB.
           IF FIO-STAT-OKS AND TAB-CIC-CTAB IN TAB = 'CGE'
              GO TO FIN-LEE-PAD-CLF.
           MOVE CCU-CIC-ICLF TO CLF-CIC-ICLF IN CLF.
      *     MOVE ZEROES TO SCR-IMAX.
           MOVE 1 TO SCR-I.
           PERFORM OBT-DAT-TS.
           MOVE 1 TO SCR-I.
           MOVE SCR-I TO CLN-I.

       ERR-LEE-PAD-CLF.
           MOVE SCR-STAT-CON TO SCR-STAT.
           IF FRM-MENS > SPACES
              MOVE '00' TO FIO-STAT.
              GO TO FIN-LEE-PAD-CLF.

      *    Busca mensaje error en Sistema LDC
           IF WSS-IBUS = 0 AND WSS-IBUS-LDC = 0
      *        busco por padre y no encontro padre
              MOVE SPACES TO PGM-STAT
              MOVE 'DEU' TO MSG-COD-SIST
              MOVE FIO-STAT-NEX TO PGM-STAT-CLF
           ELSE
      *        todos otros casos: el error pertenece al sistema LDC
              MOVE 'DEU' TO MSG-COD-SIST.
           PERFORM GET-MSG.
           MOVE MSG-GLS-DESC TO FRM-MENS.
           MOVE '00' TO FIO-STAT.
           GO TO FIN-LEE-PAD-CLF.
      *>>>>
       FIN-LEE-PAD-CLF.
           IF FIO-STAT = FIO-STAT-NEX
              MOVE 'S' TO SCR-IERR.
       EXT-LEE-PAD-CLF.
           EXIT.

       BUS-CLF SECTION.
       INI-BUS-CLF.
           MOVE DBC-CIC-ICLI IN DBC TO RDC-CIC-ICLI IN RDC.
           MOVE SPACES              TO RDC-CIC-ICLF IN RDC.
           MOVE FIO-GET-NLS TO FIO-CMND.
           PERFORM LDC-FIO-RDC.
           MOVE FIO-STAT TO PGM-STAT-RDC.
           IF NOT (FIO-STAT-OKS AND
                   DBC-CIC-ICLI IN DBC = RDC-CIC-ICLI IN RDC)
              MOVE 'DEU'          TO MSG-COD-SIST
              MOVE 'CLF    NORDC' TO MSG-COD-MENS
              GO TO BRW-BUS-CLF.
           MOVE ZEROES TO WSS-FEC-FCIE.
           MOVE RDC-CIC-ICLF IN RDC TO WSS-CIC-ICLF.

       LUP-BUS-CLF.
           MOVE RDC-CIC-ICLF IN RDC TO CLF-CIC-ICLF IN CLF.
           MOVE CLF-CAI-ICLF IN CLF TO CLF-CAI-ICLF IN CLN-FLD.
           MOVE CLF-IIC-ICLF IN CLF TO CLF-IIC-ICLF IN CLN-FLD.
           MOVE FIO-GET-KEY TO FIO-CMND.
           MOVE FIO-STAT TO PGM-STAT-CLF.
           PERFORM LDC-FIO-CLF.
           IF NOT FIO-STAT-OKS
              MOVE 'CLF    NEX' TO MSG-COD-MENS
              GO TO BRW-BUS-CLF.
      *MHM-INI 08-OCT-2009 MULTILINEA INMOBILIARIA
           IF CLF-COD-TOCF IN CLF NOT = 'CLF'
               GO TO NXT-BUS-CLF.
      *MHM-FIN 08-OCT-2009
           IF NOT (CLF-MSC-STAT IN CLF = 'C' OR 'R')
              GO TO BRW-BUS-CLF.
           IF CLF-FEC-FCIE IN CLF > WSS-FEC-FCIE
              MOVE CLF-CIC-ICLF IN CLF TO WSS-CIC-ICLF
              MOVE CLF-FEC-FCIE IN CLF TO WSS-FEC-FCIE.

       NXT-BUS-CLF.
           MOVE FIO-GET-NXT TO FIO-CMND.
           PERFORM LDC-FIO-RDC.
           MOVE FIO-STAT TO PGM-STAT-RDC.
           IF FIO-STAT-OKS AND
              DBC-CIC-ICLI IN DBC = RDC-CIC-ICLI IN RDC
              GO TO LUP-BUS-CLF.
           MOVE WSS-CIC-ICLF TO CLF-CIC-ICLF IN CLF.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM LDC-FIO-CLF.
           MOVE FIO-STAT TO PGM-STAT-CLF.
           MOVE CLF-CAI-ICLF IN CLF TO CLF-CAI-ICLF IN CLN-FLD.
           MOVE CLF-IIC-ICLF IN CLF TO CLF-IIC-ICLF IN CLN-FLD.

       BRW-BUS-CLF.
           IF PGM-STAT-RDC-OKS
              MOVE FIO-END-BRW TO FIO-CMND
              PERFORM LDC-FIO-RDC.
       FIN-BUS-CLF.
           EXIT.

       RST-STAT SECTION.
       INI-RST-STAT.
           MOVE SCR-STPP     TO SCR-STAT.
           MOVE SCR-MFLD-NOT TO SCR-MFLD.
       FIN-RST-STAT.
           EXIT.

      * Entidades de LDC
       COPY LDCBFLDC.
       COPY LDCBFARC.
       COPY LDCBFARG.
       COPY LDCBFRDC.
      * Entidades de SGC
       COPY SGCBFDBC.
       COPY SGCBFREC.
      * Entidades de DEU
       COPY DEUBFCRI.
       COPY DEUBFFIA.
      * COPY BGLBFGDG.
       COPY GARBFGDG.
       COPY SGCBGCLI.
       COPY TABBFOFI.
       COPY TABBBOFI.
       COPY TABBFUSR.
       COPY TABBBUSR.
       COPY GNSBFRCE.
       COPY GNSBVCOD.
       COPY GNSBVTAB.
       COPY GNSBGCPT.
       COPY GNSBGSTR.

       OBT-DAT-TS SECTION.
       INI-OBT-DAT-TS.
           MOVE CLN-SI-IMP   TO CLN-IMP.
           MOVE 1            TO CLN-I IN CLN-VARI.
           MOVE CLF-CIC-ICLF IN CLF TO LDC-CIC-ICLF IN LDC.
           MOVE ZEROES       TO LDC-NUM-ILDC IN LDC.
           MOVE FIO-GET-NLS  TO FIO-CMND.

       LUP-LEE-LDC.
           PERFORM LDC-FIO-LDC.
           IF NOT FIO-STAT-OKS
              GO TO FIN-OBT-DAT-TS.
           IF CLF-CIC-ICLF IN CLF = LDC-CIC-ICLF IN LDC
              IF CLN-IMP = CLN-SI-IMP
                 PERFORM WRT-TS-LDC
                 MOVE LDC-KEY-ILDC IN LDC TO ARC-KEY-ILDC IN ARC
                 MOVE ZEROES              TO ARC-NUM-IARC IN ARC
                 MOVE LDC-KEY-ILDC IN LDC TO ARG-KEY-ILDC IN ARG
                 MOVE ZEROES              TO ARG-NUM-IARG IN ARG
                 PERFORM LUP-LEE-ARC
                 PERFORM LUP-LEE-ARG
              MOVE FIO-GET-NXT TO FIO-CMND
              GO TO LUP-LEE-LDC.
       FIN-OBT-DAT-TS.
           EXIT.

       LUP-LEE-ARC SECTION.
       INI-LUP-LEE-ARC.
      *CONTINGENCIA LECTURA ARC
           MOVE SPACES TO WSS-GLS-TIPO.
           MOVE SPACES TO WSS-CLC-DCOR IN WSS-VARI.
           GO TO FIN-LUP-LEE-ARC.
      *CONTINGENCIA LECTURA ARC
           MOVE FIO-GET-NLS TO FIO-CMND.
       CIC-LUP-LEE-ARC.
           PERFORM LDC-FIO-ARC.
           IF FIO-STAT-OKS
              IF LDC-KEY-ILDC IN LDC = ARC-KEY-ILDC IN ARC
                 PERFORM WRT-TS-ARC
                 MOVE FIO-GET-NXT TO FIO-CMND
                 GO TO CIC-LUP-LEE-ARC
              ELSE
                 MOVE SPACES TO WSS-GLS-TIPO
                 MOVE SPACES TO WSS-CLC-DCOR IN WSS-VARI.
       FIN-LUP-LEE-ARC.
           EXIT.

       LUP-LEE-ARG SECTION.
       INI-LUP-LEE-ARG.
           MOVE FIO-GET-NLS TO FIO-CMND.
       CIC-LUP-LEE-ARG.
           PERFORM LDC-FIO-ARG.
           IF FIO-STAT-OKS
              IF LDC-KEY-ILDC IN LDC = ARG-KEY-ILDC IN ARG
                 PERFORM WRT-TS-ARG
                 MOVE FIO-GET-NXT TO FIO-CMND
                 GO TO CIC-LUP-LEE-ARG
              ELSE
                 MOVE SPACES TO WSS-GLS-TIPO
                 MOVE SPACES TO WSS-CLC-DCOR IN WSS-VARI.
       FIN-LUP-LEE-ARG.
           EXIT.

       GET-CUR-RDC SECTION.
       INI-GET-CUR-RDC.
           MOVE CLF-CIC-ICLF IN CLF TO RDC-CIC-ICLF IN RDC.
           MOVE 'RDC-KEY-ICLF' TO FIO-AKEY.
           MOVE FIO-GET-NLS    TO FIO-CMND.
           PERFORM LDC-FIO-RDC.
           IF FIO-STAT-CDK
              MOVE '00' TO FIO-STAT.
           IF FIO-STAT-OKS AND
              CLF-CIC-ICLF IN CLF NOT = RDC-CIC-ICLF IN RDC
              MOVE 'RDC-KEY-ICLF' TO FIO-AKEY
              MOVE FIO-END-BRW TO FIO-CMND
              PERFORM LDC-FIO-RDC
              MOVE '23' TO FIO-STAT.
           MOVE FIO-STAT TO PGM-STAT-RDC.
       FIN-GET-CUR-RDC.
           EXIT.

       GET-NXT-RDC SECTION.
       INI-GET-NXT-RDC.
           MOVE SPACES TO MSG-COD-SIST.
           MOVE SPACES TO MSG-COD-MENS.
           MOVE 'RDC-KEY-ICLF' TO FIO-AKEY.
           MOVE FIO-GET-NXT TO FIO-CMND.
           PERFORM LDC-FIO-RDC.
           IF FIO-STAT-OKS AND
              CLF-CIC-ICLF IN CLF = RDC-CIC-ICLF IN RDC
              MOVE 'M' TO SCR-IND-MCLI
           ELSE
              MOVE SPACES TO SCR-IND-MCLI
              IF FIO-STAT-OKS
                 MOVE FIO-END-BRW TO FIO-CMND
                 MOVE 'RDC-KEY-ICLF' TO FIO-AKEY
                 PERFORM LDC-FIO-RDC.
       FIN-GET-NXT-RDC.
           EXIT.

       COPY LDCBGCCU.
       COPY LDCBGCEG.
       COPY LDCBKCCU.
       COPY LDCBKCEG.

       BUS-EST-FIA SECTION.
       INI-BUS-EST-FIA.
           MOVE ARG-CIC-IGAR IN ARG TO FIA-CIC-IESC IN FIA.
           MOVE ZEROES              TO FIA-NUM-IFIA IN FIA.
           MOVE FIO-GET-NLS TO FIO-CMND.
           PERFORM DEU-FIO-FIA.
           IF NOT FIO-STAT-OKS OR
              FIA-CIC-IESC IN FIA NOT = ARG-CIC-IGAR IN ARG
              MOVE 'P' TO WSS-COD-SGAR
              GO TO BRW-BUS-EST-FIA.
           MOVE 'L' TO WSS-COD-SGAR.

       LUP-BUS-EST-FIA.
           IF FIA-MSC-STAT IN FIA NOT = 'S'
              MOVE 'P' TO WSS-COD-SGAR
              GO TO BRW-BUS-EST-FIA.

           IF FIA-FEC-FVEN IN FIA < HOY-FHOY AND
              FIA-FEC-FVEN IN FIA > ZEROES AND
              FIA-FEC-FALZ IN FIA NOT > ZEROES AND
              FIA-MSC-STAT IN FIA NOT = 'M' AND
              WSS-COD-SGAR = 'L'
              MOVE 'V' TO WSS-COD-SGAR
           ELSE
           IF FIA-FEC-FALZ IN FIA NOT > ZEROES AND
              FIA-MSC-STAT IN FIA NOT = 'M'
              MOVE 'C' TO WSS-COD-SGAR.

           MOVE FIO-GET-NXT TO FIO-CMND.
           PERFORM DEU-FIO-FIA.
           IF FIO-STAT-OKS AND
              FIA-CIC-IESC IN FIA = ARG-CIC-IGAR IN ARG
              GO TO LUP-BUS-EST-FIA.
       BRW-BUS-EST-FIA.
           IF FIO-STAT-OKS
              MOVE FIO-END-BRW TO FIO-CMND
              PERFORM DEU-FIO-FIA.
       FIN-BUS-EST-FIA.
           EXIT.

      *Transforma valor de una moneda a otra
      *INPUT  : TVC-VALO, TVC-MON1, TVC-MON2, TVC-FCAM
      *OUTPUT : TVC-VALO, TVC-CMSG
       TAB-PRO-TVC SECTION.
       INI-TAB-PRO-TVC.
           MOVE SPACES TO TVC-CMSG.
           IF TVC-MON2 = TVC-MON1
              GO TO FIN-TAB-PRO-TVC.
           IF TVC-MNAC NOT > SPACES
              MOVE 'TAB'  TO FIO-SIST
              MOVE 'VLR'  TO TAB-CIC-TTAB IN TAB
              MOVE '0999' TO TAB-CIC-CTAB IN TAB
              MOVE 'TAB-CIC-TABL' TO FIO-AKEY
              MOVE FIO-GET-KEY    TO FIO-CMND
              PERFORM GNS-FIO-TAB
              IF NOT FIO-STAT-OKS
                 MOVE SPACES TO TVC-MNAC
              ELSE
                 MOVE TAB-COD-CTAB IN TAB TO TVC-MNAC.

      *Convertir TVC-VALO de TVC-MON1 a TVC-MON2
      *a) Convertir monto en TVC-MON1 a Moneda Nacional
           IF TVC-MON1 = TVC-MNAC
              NEXT SENTENCE
           ELSE
              MOVE TVC-DCAM IN TVC-VARI   TO CAM-NUM-DCAM IN CAM(1)
              MOVE TVC-MCAM IN TVC-VARI   TO CAM-NUM-MCAM IN CAM(1)
              MOVE TVC-SCAM IN TVC-VARI   TO CAM-NUM-SCAM IN CAM(1)
              MOVE TVC-ACAM IN TVC-VARI   TO CAM-NUM-ACAM IN CAM(1)
              MOVE CAM-FEC-FCAM IN CAM(1) TO CAM-FEC-FCAM IN CAM(2)
              MOVE TVC-MON1 IN TVC-VARI   TO CAM-COD-VCAM IN CAM(1)
              MOVE TVC-MNAC IN TVC-VARI   TO CAM-COD-VCAM IN CAM(2)
              MOVE FIO-GET-KEY TO FIO-CMND
              PERFORM TAB-FIO-CAM
              IF NOT (FIO-STAT-OKS AND CAM-MSC-STAT IN CAM = 'S')
                 MOVE 'TVCCAMBNXNV' TO TVC-CMSG
                 GO TO FIN-TAB-PRO-TVC
              ELSE
                 MULTIPLY CAM-SGV-VCAM IN CAM BY TVC-VALO IN TVC-VARI
                   GIVING TVC-VALO IN TVC-VARI
                 MOVE TVC-VALO IN TVC-VARI TO PES-SGV-DECI
                 MOVE TVC-MNAC IN TVC-VARI TO PES-CIC-VCAM
                 PERFORM PES-SCTV
                 MOVE PES-SGV-ENTE TO TVC-VALO IN TVC-VARI.
      *b) TVC-VALO en Moneda Nacional (TVC-MNAC) convertir a TVC-MON2
           IF TVC-MNAC = TVC-MON2
              NEXT SENTENCE
           ELSE
              MOVE TVC-DCAM IN TVC-VARI   TO CAM-NUM-DCAM IN CAM(1)
              MOVE TVC-MCAM IN TVC-VARI   TO CAM-NUM-MCAM IN CAM(1)
              MOVE TVC-SCAM IN TVC-VARI   TO CAM-NUM-SCAM IN CAM(1)
              MOVE TVC-ACAM IN TVC-VARI   TO CAM-NUM-ACAM IN CAM(1)
              MOVE CAM-FEC-FCAM IN CAM(1) TO CAM-FEC-FCAM IN CAM(2)
              MOVE TVC-MON2 IN TVC-VARI   TO CAM-COD-VCAM IN CAM(1)
              MOVE TVC-MNAC IN TVC-VARI   TO CAM-COD-VCAM IN CAM(2)
              MOVE FIO-GET-KEY TO FIO-CMND
              PERFORM TAB-FIO-CAM
              IF NOT (FIO-STAT-OKS AND CAM-MSC-STAT IN CAM = 'S' AND
                      CAM-SGV-VCAM IN CAM > 0)
                 MOVE 'TVCCAMBNXNV0' TO TVC-CMSG
                 GO TO FIN-TAB-PRO-TVC
              ELSE
                 DIVIDE TVC-VALO IN TVC-VARI BY CAM-SGV-VCAM IN CAM
                 GIVING TVC-VALO IN TVC-VARI ROUNDED
                 MOVE TVC-VALO   IN TVC-VARI TO PES-SGV-DECI
                 MOVE TVC-MON2   IN TVC-VARI TO PES-CIC-VCAM
                 PERFORM PES-SCTV
                 MOVE PES-SGV-ENTE TO TVC-VALO IN TVC-VARI.
       FIN-TAB-PRO-TVC.
           EXIT.

       COPY TABBFCAM.
       COPY GNSBGPES.

       WRT-TS-LDC SECTION.
       INI-WRT-TS-LDC.
           MOVE 'L'                 TO CLN-COD-TINF.
           MOVE SPACES              TO CLN-COD-TIPO.
           MOVE LDC-NUM-ILDC IN LDC TO CLN-NUM-ILDC.
           MOVE LDC-COD-TIPO IN LDC TO CLN-COD-TIPO.
           MOVE ZEROES              TO CLN-NUM-CORR.
           MOVE LDC-IND-VIGE IN LDC TO CLN-IND-VIGE.
           MOVE SPACES              TO CLN-GLS-TIPO.
           MOVE SPACES              TO CLN-COD-MLDC.
           MOVE SPACES              TO CLN-GLS-MLDC.
           MULTIPLY CTOT-LCR IN CCU-VARI(LDC-NUM-ILDC)
                    BY 1 GIVING CLN-VAL-CMLC-NUM ROUNDED.
           MULTIPLY CDIS-LCR IN CCU-VARI(LDC-NUM-ILDC)
                    BY 1 GIVING CLN-VAL-CDLC-NUM ROUNDED.
           IF SCR-OFRM-SRV
              MOVE CLN-VAL-CMLC-NUM TO FRM-VAL-CMLC-EDT IN CLN-EDT
              MOVE FRM-VAL-CMLC-EDT IN CLN-EDT
                   TO CLN-VAL-CMLC-ALF
              MOVE CLN-VAL-CDLC-NUM TO FRM-VAL-CDLC-EDT IN CLN-EDT
              MOVE FRM-VAL-CDLC-EDT IN CLN-EDT
                   TO CLN-VAL-CDLC-ALF.
           IF LDC-FEC-FVEN IN LDC NOT > ZEROES
              MOVE CLF-NUM-DVEN IN CLF TO CLN-NUM-DVEN
              MOVE CLF-NUM-MVEN IN CLF TO CLN-NUM-MVEN
              MOVE CLF-NUM-SVEN IN CLF TO CLN-NUM-SVEN
              MOVE CLF-NUM-AVEN IN CLF TO CLN-NUM-AVEN
           ELSE
              MOVE LDC-NUM-DVEN IN LDC TO CLN-NUM-DVEN
              MOVE LDC-NUM-MVEN IN LDC TO CLN-NUM-MVEN
              MOVE LDC-NUM-SVEN IN LDC TO CLN-NUM-SVEN
              MOVE LDC-NUM-AVEN IN LDC TO CLN-NUM-AVEN.
           MOVE LDC-IND-MGAR IN LDC TO CLN-IND-MGAR.
           MOVE SPACES              TO CLN-COD-SGAR.
           MOVE SPACES              TO CLN-COD-TOOP.
           MOVE SPACES              TO CLN-COD-AOOP.
           MOVE SPACES              TO CLN-GLS-TOOP.
           MOVE SPACES              TO CLN-GLS-AOOP.
           MOVE SPACES              TO CLN-CAI-IOPR.
           MOVE SPACES              TO CLN-IIC-IOPR.
           MOVE SPACES              TO CLN-COD-VARC.
           MOVE SPACES              TO CLN-GLS-VARC.
           MOVE ZEROES              TO CLN-NUM-PORG.
           MOVE WSS-COD-SGAR        TO CLN-COD-SGAR.
           MOVE 'TAB' TO TAB-COD-SIST.
           MOVE 'VLR' TO TAB-COD-TTAB.
           MOVE LDC-COD-VCLC IN LDC TO TAB-COD-CTAB IN TAB.
           PERFORM BUS-TAB.
           MOVE LDC-COD-VCLC IN LDC TO CLN-COD-MLDC.
           MOVE TAB-GLS-ABRV IN TAB TO CLN-GLS-MLDC.
           MOVE 'LDC'               TO FIO-SIST.
           MOVE 'TLC'               TO TAB-COD-TTAB IN TAB.
           MOVE LDC-COD-TIPO IN LDC TO TAB-COD-CTAB IN TAB.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM GNS-FIO-TAB.
           IF FIO-STAT-OKS
              MOVE TAB-GLS-DCOR IN TAB TO CLN-GLS-TIPO.
      *PVG INI 01-AGO-2005
           IF LDC-VAL-CACT IN LDC = ZEROES
              MOVE CLN-GLS-TIPO TO WSS-GLS-TIPO-1
              MOVE '(DES)'      TO WSS-GLS-TIPO-3
              MOVE WSS-GLS-TIPO TO CLN-GLS-TIPO.
      *PVG FIN 01-AGO-2005
      *    IF SCR-OFRM-SRV
      *       MOVE LDC-VAL-CMAX IN LDC TO FRM-VAL-GNX-PRO-QUE-EDT
      *       MOVE FRM-VAL-CACT-ALF    TO CLN-VAL-CACT-ALF
      *    ELSE
           MOVE LDC-VAL-CMAX IN LDC TO CLN-VAL-CACT-NUM.
      *    IF CLF-COD-VCCF IN CLF = LDC-COD-VCLC IN LDC
      *        GO TO FIN-WRT-TS-LDC.
           MOVE LDC-VAL-CMAX IN LDC TO TVC-VALO.
           MOVE LDC-COD-VCLC IN LDC TO TVC-MON1 IN TVC-VARI.
           MOVE CLF-COD-VCCF IN CLF TO TVC-MON2 IN TVC-VARI.
           MOVE HOY-FHOY(1:4)       TO TVC-FCAM(5:4).
           MOVE HOY-FHOY(5:2)       TO TVC-FCAM(3:2).
           MOVE HOY-FHOY(7:2)       TO TVC-FCAM(1:2).
           PERFORM TAB-PRO-TVC.
           IF TVC-CMSG NOT > SPACES
              IF SCR-OFRM-SRV
                 MOVE TVC-VALO         TO FRM-VAL-CACT-EDT
                 MOVE FRM-VAL-CACT-EDT TO CLN-VAL-CACT-ALF
              ELSE
                 MOVE TVC-VALO TO CLN-VAL-CACT-NUM.
           MOVE SPACES         TO WSS-COD-SGAR.
           MOVE CLN-NOM-TSCLN  TO QUE-COLA.
           MOVE CLN-LEN-TSCLN  TO QUE-LITM.
           MOVE CLN-TS         TO QUE-ITEM.
           PERFORM PUT-QUE-CLN.
       FIN-WRT-TS-LDC.
           EXIT.

       WRT-TS-ARC SECTION.
       INI-WRT-TS-ARC.
      *     MULTIPLY CTOT-LCR IN CCU-VARI(LDC-NUM-ILDC)
      *              BY 1 GIVING CLN-VAL-CMLC-NUM ROUNDED.
      *     MULTIPLY CDIS-LCR IN CCU-VARI(LDC-NUM-ILDC)
      *              BY 1 GIVING CLN-VAL-CDLC-NUM ROUNDED.
      *     IF SCR-OFRM-SRV
      *        MOVE CLN-VAL-CMLC-NUM TO FRM-VAL-CMLC-EDT IN CLN-EDT
      *        MOVE FRM-VAL-CMLC-EDT IN CLN-EDT
      *             TO CLN-VAL-CMLC-ALF
      *        MOVE CLN-VAL-CDLC-NUM TO FRM-VAL-CDLC-EDT IN CLN-EDT
      *        MOVE FRM-VAL-CDLC-EDT IN CLN-EDT
      *             TO CLN-VAL-CDLC-ALF.
           MOVE SPACES              TO CLN-COD-SGAR.
           MOVE SPACES              TO CLN-COD-TOOP.
           MOVE SPACES              TO CLN-COD-AOOP.
           MOVE SPACES              TO CLN-GLS-TOOP.
           MOVE SPACES              TO CLN-GLS-AOOP.
           MOVE SPACES              TO CLN-CAI-IOPR.
           MOVE SPACES              TO CLN-IIC-IOPR.
           MOVE SPACES              TO CLN-COD-VARC.
           MOVE SPACES              TO CLN-GLS-VARC.
           MOVE ZEROES              TO CLN-VAL-CMLC.
           MOVE ZEROES              TO CLN-VAL-CDLC.
           MOVE ZEROES              TO CLN-VAL-CACT.
           MOVE 'C'                 TO CLN-COD-TINF.
           MOVE ARC-NUM-IARC IN ARC TO CLN-NUM-CORR.
           MOVE ARC-COD-TOOC IN ARC TO CLN-COD-TOOP.
           MOVE ARC-COD-AOOC IN ARC TO CLN-COD-AOOP.
           IF   LDC-VAL-CACT IN LDC = ZEROES
              MOVE CLN-GLS-TIPO TO WSS-GLS-TIPO-1
              MOVE '(DES)'      TO WSS-GLS-TIPO-3
              MOVE WSS-GLS-TIPO TO CLN-GLS-TIPO.

           IF ARC-IIC-IOPC IN ARC > ZEROES
              MOVE ARC-CAI-IOPC IN ARC TO CLN-CAI-IOPR
              MOVE ARC-IIC-IOPC IN ARC TO CLN-IIC-IOPR.

      *BUS-TAB Busca Glosa Moneda de Tabla
           IF ARC-COD-VCOC IN ARC > SPACES
              MOVE 'TAB' TO TAB-COD-SIST
              MOVE 'VLR' TO TAB-COD-TTAB IN TAB
              MOVE ARC-COD-VCOC IN ARC TO TAB-COD-CTAB IN TAB
              PERFORM BUS-TAB
              MOVE ARC-COD-VCOC IN ARC TO CLN-COD-VARC
              MOVE TAB-GLS-ABRV IN TAB TO CLN-GLS-VARC.

      *BUS-TAB Busca Glosa Tipo Operacion de Tabla
           IF ARC-COD-TOOC IN ARC > SPACES
              MOVE 'TAB'               TO TAB-COD-SIST
              MOVE 'TIO'               TO TAB-COD-TTAB IN TAB
              MOVE ARC-COD-TOOC IN ARC TO TAB-COD-CTAB IN TAB
              PERFORM BUS-TAB
              MOVE ARC-COD-TOOC IN ARC TO CLN-COD-TOOP
              MOVE TAB-GLS-ABRV IN TAB TO CLN-GLS-TOOP.

      *BUS-TAB Busca Glosa Cod. Auxiliar de Tabla
           IF ARC-COD-AOOC IN ARC > SPACES
              MOVE 'TAB'               TO TAB-COD-SIST
              MOVE 'AUX'               TO TAB-COD-TTAB IN TAB
              MOVE ARC-COD-COOC IN ARC TO TAB-COD-CTAB IN TAB
              PERFORM BUS-TAB
              MOVE ARC-COD-AOOC IN ARC TO CLN-COD-AOOP
              MOVE TAB-GLS-ABRV IN TAB TO CLN-GLS-AOOP.

           MOVE CLN-NOM-TSCLN  TO QUE-COLA.
           MOVE CLN-LEN-TSCLN  TO QUE-LITM.
           MOVE CLN-TS         TO QUE-ITEM.
           PERFORM PUT-QUE-CLN.
       FIN-WRT-TS-ARC.
           EXIT.

       WRT-TS-ARG SECTION.
       INI-WRT-TS-ARG.
      *     MULTIPLY CTOT-LCR IN CCU-VARI(LDC-NUM-ILDC)
      *              BY 1 GIVING CLN-VAL-CMLC-NUM ROUNDED.
      *     MULTIPLY CDIS-LCR IN CCU-VARI(LDC-NUM-ILDC)
      *              BY 1 GIVING CLN-VAL-CDLC-NUM ROUNDED.
      *     IF SCR-OFRM-SRV
      *        MOVE CLN-VAL-CMLC-NUM TO FRM-VAL-CMLC-EDT IN CLN-EDT
      *        MOVE FRM-VAL-CMLC-EDT IN CLN-EDT
      *             TO CLN-VAL-CMLC-ALF
      *        MOVE CLN-VAL-CDLC-NUM TO FRM-VAL-CDLC-EDT IN CLN-EDT
      *        MOVE FRM-VAL-CDLC-EDT IN CLN-EDT
      *             TO CLN-VAL-CDLC-ALF.
           MOVE SPACES              TO CLN-COD-SGAR.
           MOVE SPACES              TO CLN-COD-TOOP.
           MOVE SPACES              TO CLN-COD-AOOP.
           MOVE SPACES              TO CLN-GLS-TOOP.
           MOVE SPACES              TO CLN-GLS-AOOP.
           MOVE SPACES              TO CLN-CAI-IOPR.
           MOVE SPACES              TO CLN-IIC-IOPR.
           MOVE SPACES              TO CLN-COD-VARC.
           MOVE SPACES              TO CLN-GLS-VARC.
           MOVE ZEROES              TO CLN-VAL-CMLC.
           MOVE ZEROES              TO CLN-VAL-CDLC.
           MOVE ZEROES              TO CLN-VAL-CACT.
           MOVE 'G'                 TO CLN-COD-TINF.
           MOVE ARG-NUM-IARG IN ARG TO CLN-NUM-CORR.
           IF ARG-IIC-IGAR IN ARG > ZEROES
               MOVE ARG-CAI-IGAR IN ARG TO CLN-CAI-IOPR
               MOVE ARG-IIC-IGAR IN ARG TO CLN-IIC-IOPR
               MOVE ARG-NUM-PORG IN ARG TO CLN-NUM-PORG
               MOVE 'TAB' TO FIO-SIST
               MOVE 'TIO ' TO TAB-COD-TTAB IN TAB
               MOVE ARG-COD-TOGA IN ARG TO TAB-COD-CTAB IN TAB
               MOVE FIO-GET-KEY TO FIO-CMND
               PERFORM GNS-FIO-TAB

      * Esta en sistema GAR
               IF NOT (TAB-CIC-CTAB IN TAB = 'AVL' OR 'FIA')
                  MOVE ARG-CIC-IGAR IN ARG TO GAR-CLV-GDG-1 IN GDG
      *            MOVE ARG-CIC-IGAR IN ARG TO GDG-KEY-IGDG IN GDG
                  MOVE FIO-GET-KEY TO FIO-CMND
                  PERFORM GAR-FIO-GDG
      *            PERFORM BGL-FIO-GDG
                  IF NOT FIO-STAT-OKS OR GAR-IND-CPL IN GDG NOT = 'S'
      *            IF NOT FIO-STAT-OKS OR GDG-IND-GTAC IN GDG NOT = 'S'
                     MOVE 'P' TO WSS-COD-SGAR
                  ELSE
                  IF GAR-FEC-ALZ  IN GDG > ZEROES
      *            IF GDG-FEC-FALZ  IN GDG > ZEROES
                     MOVE 'L' TO WSS-COD-SGAR
                  ELSE
                     MOVE 'C' TO WSS-COD-SGAR
               ELSE

      * Esta en sistema DEU
                  PERFORM BUS-EST-FIA.
           IF ARG-IIC-IGAR IN ARG > ZEROES
              IF CLN-IND-MGAR = 'U'
                 MOVE 'E'   TO CLN-IND-MGAR.
      *           GO TO FIN-WRT-TS-ARG.
      *BUS-TAB Busca Glosa Moneda de Tabla
           IF ARG-COD-TOGA IN ARG > SPACES
              MOVE 'TAB'               TO TAB-COD-SIST
              MOVE 'TIO'               TO TAB-COD-TTAB IN TAB
              MOVE ARG-COD-TOGA IN ARG TO TAB-COD-CTAB IN TAB
              PERFORM BUS-TAB
              MOVE ARG-COD-TOGA IN ARG TO CLN-COD-TOOP
              MOVE TAB-GLS-ABRV IN TAB TO CLN-GLS-TOOP.

      *BUS-TAB Busca Glosa Cod. Auxiliar de Tabla
           IF ARG-COD-AOGA IN ARG > SPACES
              MOVE 'TAB'               TO TAB-COD-SIST
              MOVE 'AUX'               TO TAB-COD-TTAB IN TAB
              MOVE ARG-COD-COGA IN ARG TO TAB-COD-CTAB IN TAB
              PERFORM BUS-TAB
              MOVE ARG-COD-AOGA IN ARG TO CLN-COD-AOOP
              MOVE TAB-GLS-ABRV IN TAB TO CLN-GLS-AOOP.
           MOVE ARG-NUM-PORG IN ARG TO CLN-NUM-PORG.
           MOVE WSS-COD-SGAR TO CLN-COD-SGAR.
           MOVE SPACES       TO WSS-COD-SGAR.

           MOVE CLN-NOM-TSCLN  TO QUE-COLA.
           MOVE CLN-LEN-TSCLN  TO QUE-LITM.
           MOVE CLN-TS         TO QUE-ITEM.
           PERFORM PUT-QUE-CLN.
       FIN-WRT-TS-ARG.
           EXIT.

       CLN-MOV-TS-FRM-ELM SECTION.
       INI-CLN-MOV-TS-FRM-ELM.
           MOVE CLN-COD-TINF TO FRM-COD-TINF IN CLN-FLD(WSS-IND-PANT).
           MOVE CLN-NUM-ILDC TO FRM-NUM-ILDC IN CLN-FLD(WSS-IND-PANT).
           MOVE CLN-NUM-CORR TO FRM-NUM-CORR IN CLN-FLD(WSS-IND-PANT).
           MOVE CLN-IND-VIGE TO FRM-IND-VIGE IN CLN-FLD(WSS-IND-PANT).
           MOVE CLN-COD-TIPO TO FRM-COD-TIPO IN CLN-FLD(WSS-IND-PANT).
           MOVE CLN-GLS-TIPO TO FRM-GLS-TIPO IN CLN-FLD(WSS-IND-PANT).
           MOVE CLN-COD-MLDC TO FRM-COD-MLDC IN CLN-FLD(WSS-IND-PANT).
           MOVE CLN-GLS-MLDC TO FRM-GLS-MLDC IN CLN-FLD(WSS-IND-PANT).
           MOVE CLN-FEC-FVEN TO FRM-FEC-FVEN IN CLN-FLD(WSS-IND-PANT).
           MOVE CLN-VAL-CMLC-NUM TO
                FRM-VAL-CMLC IN CLN-FLD(WSS-IND-PANT).
           MOVE CLN-VAL-CDLC-NUM TO
                FRM-VAL-CDLC IN CLN-FLD(WSS-IND-PANT).
           MOVE CLN-IND-MGAR TO FRM-IND-MGAR IN CLN-FLD(WSS-IND-PANT).
           MOVE CLN-COD-SGAR TO FRM-COD-SGAR IN CLN-FLD(WSS-IND-PANT).
           MOVE CLN-COD-TOOP TO FRM-COD-TOOP IN CLN-FLD(WSS-IND-PANT).
           MOVE CLN-COD-AOOP TO FRM-COD-AOOP IN CLN-FLD(WSS-IND-PANT).
      *INI-CAF
           MOVE CLN-GLS-TOOP TO FRM-GLS-TOOP IN CLN-FLD(WSS-IND-PANT).
           MOVE CLN-GLS-AOOP TO FRM-GLS-AOOP IN CLN-FLD(WSS-IND-PANT).
      *FIN-CAF
           MOVE CLN-CAI-IOPR TO FRM-CAI-IOPR IN CLN-FLD(WSS-IND-PANT).
           MOVE CLN-IIC-IOPR TO FRM-IIC-IOPR IN CLN-FLD(WSS-IND-PANT).
           MOVE CLN-COD-VARC TO FRM-COD-VARC IN CLN-FLD(WSS-IND-PANT).
           MOVE CLN-GLS-VARC TO FRM-GLS-VARC IN CLN-FLD(WSS-IND-PANT).
           MOVE CLN-NUM-PORG TO FRM-NUM-PORG IN CLN-FLD(WSS-IND-PANT).
           MOVE CLN-VAL-CACT-NUM TO
                FRM-VAL-CACT IN CLN-FLD(WSS-IND-PANT).
       FIN-CLN-MOV-TS-FRM-ELM.
           EXIT.
      *>>>>
       PUT-QUE-CLN SECTION.
       INI-PUT-QUE-CLN.
           ADD 1 TO SCR-TOT-OCCU.
           MOVE QUE-PUT TO QUE-CMND.
           PERFORM GNS-PRO-QUE.
       FIN-PUT-QUE-CLN.
           EXIT.
       GNX-PRO-QUE SECTION.
       INI-GNX-PRO-QUE.
           PERFORM GNS-PRO-QUE.
       FIN-GNX-PRO-QUE.
           EXIT.

       PGM-EBR-ALL SECTION.
       INI-PGM-EBR-ALL.
           MOVE FIO-EBR-ALL TO FIO-CMND.
           PERFORM LDC-FIO-LDC.
       FIN-PGM-EBR-ALL.
           EXIT.
      *
      *PVG INI 01-AGO-2005 (CONSULTA CLN)
       CON-VSN-SBGL SECTION.
       INI-CON-VSN-SBGL.
           MOVE 'DEU'           TO FIO-SIST.
           MOVE 'VSN'           TO TAB-COD-TTAB.
           MOVE 'CONCLNSINBGL'  TO TAB-COD-CTAB.
           MOVE FIO-GET-KEY     TO FIO-CMND.
           PERFORM GNS-FIO-TAB.
           IF FIO-STAT-OKS AND TAB-IND-VIGE IN TAB = 'S'
              MOVE 'M'    TO CCU-IND-PMEC IN CCU-VARI
           ELSE
              MOVE SPACES TO CCU-IND-PMEC IN CCU-VARI.
       FIN-CON-VSN-SBGL.
           EXIT.
      *PVG FIN 01-AGO-2005
      *>>>>
