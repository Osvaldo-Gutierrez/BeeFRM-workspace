       IDENTIFICATION DIVISION.
      *=======================
       PROGRAM-ID.      LDCPLLAV.
       AUTHOR.          CONSIST.
       DATE-WRITTEN.    05-Sep-96 11:34 AM.

      * Programa Listador de Reporte LAV con Sort.
000000*COMPILED SITE 2000          02.09.98

      ******************************************************************
      *  INTERSOFT                                                     *
      *  MODIFICACION: CONVERTIR REPORT-WRITER A LISTADO, MIGRAR A     *
      *                A COBOL FOR MVS Y CONVERSION 2000               *
      *  FECHA: ABRIL 1998                                             *
      ******************************************************************

       ENVIRONMENT DIVISION.
      *====================
       CONFIGURATION SECTION.
      *---------------------
       SPECIAL-NAMES.
            DECIMAL-POINT IS COMMA.
       INPUT-OUTPUT SECTION.
      *--------------------
       FILE-CONTROL.
      *DOS SELECT GNSSRT         ASSIGN TO SYS001-DA-3330-S-SORTWK1.
      *MVS SELECT GNSSRT         ASSIGN TO        DA-S-SORTWK1.
      *DOS SELECT RPTLAV         ASSIGN TO SYS011-UR-1403-S.
      *MVS SELECT RPTLAV         ASSIGN TO        UT-S-RPTLAV.
           SELECT GNSSRT         ASSIGN TO        DA-S-SORTWK1.

      ***** CRW-COMIENZO
      *    SELECT RPTLAV         ASSIGN TO        UT-S-RPTLAV.
           SELECT RPTLAV         ASSIGN TO             RPTLAV.
      *<<<< IOS
      *    SELECT RPTLAR       ASSIGN TO UT-S-RPTLAR.
           SELECT RPTLAR       ASSIGN TO      RPTLAR.
      *>>>>
      ***** CRW-FINAL

       DATA DIVISION.
      *=============
       FILE SECTION.
      *------------
       SD  GNSSRT.

      ***** CRW-COMIENZO
      *COPY LDCRRLAV.
      *    09-NOV-95 07:11 PM
       01  SRT.
           03 CLF-COD-OFIC PIC X(3).
           03 DBC-IND-ICLI PIC X.
           03 CLF-CAI-ICLF PIC X(4).
           03 CLF-IIC-ICLF PIC 9(8).
           03 LDC-NUM-ILDC PIC 9(2).
           03 LDC-VAL-CMAX PIC 99999999999.
           03 LDC-NUM-DVEN PIC X(2).
           03 LDC-NUM-MVEN PIC X(2).
           03 LDC-NUM-SVEN PIC X(2).
           03 LDC-NUM-AVEN PIC X(2).
           03 WSS-IND-MON PIC X(3).
           03 CLF-COD-EJEC PIC X(12).
           03 CLF-COD-TOCF PIC X(3).
           03 CLF-COD-VCCF PIC X(6).
           03 LDC-COD-VCLC PIC X(6).
           03 LDC-FEC-FVEN PIC X(8).

      *FD  RPTLAV LABEL RECORDS OMITTED
      *    REPORT IS RPT-LAV
      *    .
       FD  RPTLAV
           RECORD CONTAINS 133 CHARACTERS
           BLOCK CONTAINS 0 RECORDS
           LABEL RECORD STANDARD.

       01  RPTLAV-REG           PIC X(133).

      *<<<< FLS
      *FD  RPTLAR LABEL RECORDS OMITTED
      *    REPORT IS RPT-LAR.

       FD  RPTLAR
           RECORD CONTAINS 133 CHARACTERS
           BLOCK CONTAINS 0 RECORDS
           LABEL RECORD STANDARD.

       01  RPTLAR-REG           PIC X(133).
      ***** CRW-FINAL

       01  PASO.
           03 FILLER                              PIC X(01).
      *>>>>

       WORKING-STORAGE SECTION.
      *-----------------------
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-LDC-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-TAB-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-MSG-REQA==.
       COPY LDCBRLDC.
       COPY GNSWGRQA.
       COPY GNSWGUIB.
       COPY GNSWGELS.
       COPY GNSWVIDD.
       COPY GNSWCFIO.
       COPY GNSWVFIO.
       COPY GNSWGRPT.
       COPY GNSBRTAB.
       COPY GNSBRMSG.
       COPY LDCRWLAV.
      *<<<< RW
       COPY LDCRWLAR.
      *>>>>
       COPY GNSWGSYS.
       01  PGM-STAT.
           03 PGM-STAT-SRT            VALUE ' ' PIC X(01).
              88 PGM-STAT-SRT-OKS     VALUE ' '.
              88 PGM-STAT-SRT-MAL     VALUE 'M'.
           03 PGM-SOKS                VALUE ' ' PIC X(01).
           03 PGM-SMAL                VALUE 'M' PIC X(01).
      *<<<< WSS
      *Entidades de GNS
       COPY GNSBRMSC.
       COPY GNSWGHOY.
       COPY GNSWGFEC.
       COPY GNSWGCPT.
       COPY GNSWGIDC.
      *Entidades de TAB
       COPY TABBROFI.
       COPY TABBRUSR.
      *Entidades de LDC
      *<<<< NOT PGM_DB2
       COPY LDCBRCLF.
       COPY LDCBRARC.
       COPY LDCBRARG.
       COPY LDCBRRDC REPLACING RDC BY RDL.
       COPY SGCBRDBC.
      *
       COPY SGCBROPE.
       COPY SGCBRRCO.
       COPY COLBRRDC.
       COPY COLBROPC.
       COPY COLBRDLC.
      *>>>>
       COPY TABBRCAM.
       01  WSS-VARI.
      *RVM-CST-INI 10-NOV-1995
      *     03  WSS-FEC-FPRO.
      *         05  WSS-NUM-DPRO                      PIC 9(02).
      *         05  WSS-NUM-MPRO                      PIC 9(02).
      *         05  WSS-NUM-SPRO                      PIC 9(02).
      *         05  WSS-NUM-APRO                      PIC 9(02).
      *     03  WSS-FEC-FTER.
      *         05  WSS-NUM-STER                      PIC 9(02).
      *         05  WSS-NUM-ATER                      PIC 9(02).
      *         05  WSS-NUM-MTER                      PIC 9(02).
      *         05  WSS-NUM-DTER                      PIC 9(02).
      *     03  WSS-FEC-FPAS.
      *         05  WSS-NUM-SPAS                      PIC Z(02).
      *         05  WSS-NUM-APAS                      PIC Z(02).
      *         05  WSS-NUM-MPAS                      PIC Z(02).
      *         05  WSS-NUM-DPAS                      PIC Z(02).
      *RVM-CST-FIN 10-NOV-1995
      *RVM-CST-INI 5-JUL-1996
           03  WSS-COD-OFIC-ANT       VALUE SPACES   PIC X(03).
      *RVM-CST-FIN 5-JUL-1996
           03  WSS-COD-OFIC                          PIC X(03).
           03  WSS-COD-EJEC                          PIC X(12).
           03  WSS-COD-STAT                          PIC X(01).
           03  WSS-SGV-VCAM-UF                       PIC S9(11)V9(4).
           03  WSS-COD-PESO                          PIC X(06).
           03  WSS-COD-UF                            PIC X(06).
           03  WSS-CLA-OPE.
               05  WSS-TIP-OPE                       PIC X(03).
               05  WSS-STP-OPE                       PIC X(03).
           03  ARC-KEY-IARC.
               05  ARC-KEY-ILDC.
                   07  ARC-CAI-ICLF               PIC X(04).
                   07  ARC-IIC-ICLF               PIC 9(08).
                   07  ARC-NUM-ILDC               PIC 9(02).
               05  ARC-NUM-IARC                   PIC 9(01).
           03  ARG-KEY-IARG.
               05  ARG-KEY-ILDC.
                   07  ARG-CAI-ICLF               PIC X(04).
                   07  ARG-IIC-ICLF               PIC 9(08).
                   07  ARG-NUM-ILDC               PIC 9(02).
               05  ARG-NUM-IARG                   PIC 9(01).
           03  WSS-IARC       VALUE ZEROES        PIC 9(02).
           03  WSS-IARG       VALUE ZEROES        PIC 9(02).
           03  WSS-IFLD       VALUE ZEROES        PIC 9(02).
           03  WSS-MOV        VALUE ZEROES        PIC 9(02).
           03  WSS-FIN        VALUE ZEROES        PIC 9(01).

           03  WSS-TAB-ARC   OCCURS 9 TIMES.
               05  WSS-COD-TOOC                   PIC X(05).
               05  WSS-COD-AOOC                   PIC X(08).
               05  WSS-COD-VCOC                   PIC X(05).

           03  WSS-TAB-ARG   OCCURS 9 TIMES.
      *DAD ini  15-SEP-1992
               05  WSS-COD-TGAR                   PIC X(03).
      *DAD fin  15-SEP-1992
               05  WSS-COD-TOGA                   PIC X(05).
               05  WSS-COD-AOGA                   PIC X(08).
               05  WSS-NUM-PORG                   PIC 9(03).

           03 WSS-FEC-FHOY.
              05 WSS-NUM-SHOY                      PIC 9(02).
              05 WSS-NUM-AHOY                      PIC 9(02).
              05 WSS-NUM-MHOY                      PIC 9(02).
              05 WSS-NUM-DHOY                      PIC 9(02).
           03  WSS-STAT-RDC          VALUE ZEROES  PIC 9(01).
           03  WSS-IND-MCLI          VALUE SPACES  PIC X(01).
      *FLB CST  24-JAN-1994
           03  WSS-CIC-TOCF                        PIC X(03).
           03  WSS-AUX-CUTI          VALUE ZEROES  PIC 9(11).
           03  WSS-AUX-CDIS          VALUE ZEROES  PIC S9(11).
           03  WSS-VAL-PES           VALUE ZEROES  PIC 9(15).
           03  WSS-VAL-UF            VALUE ZEROES  PIC 9(12)V9(04).
           03  WSS-AUX-EJEC          VALUE SPACES  PIC X(12).
       COPY LDCWGCCU.
      *>>>>
      *<<<< WSS_DTC
      * Entidades de TAB
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-CAM-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-OFI-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-USR-REQA==.
      * Entidades de GNS
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-MSC-REQA==.
      * Entidades de COL
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-OPC-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-DLC-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-RDC-REQA==.
      * Entidades de LDC
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-CLF-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-ARC-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-ARG-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-RDL-REQA==.
      * Entidades de SGC
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-DBC-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-OPE-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-RCO-REQA==.
      *>>>>

      ***** CRW-COMIENZO

      *REPORT SECTION.
      *--------------
      *COPY LDCRFLAV.
      *<<<< RF
      *>>>>
      *    .
      *COPY LDCRTLAV.
      *<<<< RT
      *COPY LDCRFLAR.
      *    .
      *COPY LDCRTLAR.

       01  RPT-VARIABLES.
           02 RPT-VARIABLES-VARIAS.
               03 RPT-VARI-LINEA-V            PIC 9(03) VALUE 60.
               03 RPT-VARI-PAGE-COUNTER-V     PIC 9(03) VALUE 0.
               03 RPT-VARI-LINEA-R            PIC 9(03) VALUE 60.
               03 RPT-VARI-PAGE-COUNTER-R     PIC 9(03) VALUE 0.
               03 RPT-VARI-TIT                PIC X(02) VALUE 'NO'.
           02 RPT-VARIABLES-CONTROL.
               03 RPT-CTRL-COD-EJEC           PIC X(12).
               03 RPT-CTRL-COD-OFIC           PIC X(03).
           02 RPT-VARIABLES-TOTALES.
               03 RPT-TOTA-NUM-LINUF          PIC 9(03) VALUE 0.
               03 RPT-TOTA-VAL-TUFUF          PIC 9(12) VALUE 0.
               03 RPT-TOTA-NUM-LINPES         PIC 9(03) VALUE 0.
               03 RPT-TOTA-VAL-TPEPES         PIC 9(15) VALUE 0.
               03 RPT-TOTA-NUM-TLIN           PIC 9(06) VALUE 0.
               03 RPT-TOTA-VAL-ATRZ           PIC 9(15) VALUE 0.
               03 RPT-TOTA-VAL-UTIL           PIC 9(15) VALUE 0.

       01  PH-LAV.

           03  PH-LAV-01.
               05  RPT-HEAD-DUSU-V            PIC X(30).
               05  FILLER                     PIC X(019) VALUE SPACES.
               05  FILLER                     PIC X(36)
                   VALUE 'M U L T I L I N E A S   B C I    A L'.
               05  FILLER                     PIC X(003) VALUE SPACES.
               05  RPT-HEAD-NUM-DHAS-V        PIC X(2).
               05  FILLER                     PIC X(1)
                   VALUE ALL '-'.
               05  RPT-HEAD-NUM-MHAS-V        PIC X(2).
               05  FILLER                     PIC X(1)
                   VALUE ALL '-'.
               05  RPT-HEAD-NUM-SHAS-V        PIC X(2).
               05  RPT-HEAD-NUM-AHAS-V        PIC X(2).
               05  FILLER                     PIC X(024) VALUE SPACES.
               05  RPT-HEAD-FDMA-V            PIC 99B99B9999.

           03  PH-LAV-02.
               05  RPT-HEAD-DSIS-V            PIC X(30).
               05  FILLER                     PIC X(092) VALUE SPACES.
               05  FILLER                     PIC X(6)
                   VALUE 'PAGINA'.
               05  FILLER                     PIC X(001) VALUE SPACES.
               05  RPT-HEAD-PAGE-COUNTER-V    PIC 9(3).

           03  PH-LAV-03.
               05  FILLER                     PIC X(123) VALUE SPACES.
               05  FILLER                     PIC X(8)
                   VALUE 'LDCPLLAV'.

           03  PH-LAV-04.
               05  FILLER                     PIC X(9)
                   VALUE 'OFICINA :'.
               05  FILLER                     PIC X(001) VALUE SPACES.
               05  RPT-HEAD-COD-OFIC-V        PIC X(3).
               05  FILLER                     PIC X(002) VALUE SPACES.
               05  RPT-HEAD-GLS-OFIC-V        PIC X(40).
               05  FILLER                     PIC X(007) VALUE SPACES.
               05  FILLER                     PIC X(11)
                   VALUE 'EJECUTIVO :'.
               05  FILLER                     PIC X(001) VALUE SPACES.
               05  RPT-HEAD-GLS-EJEC-V        PIC X(40).

           03  PH-LAV-05.
               05  FILLER                     PIC X(132)
                   VALUE ALL '-'.

           03  PH-LAV-06.
               05  FILLER                     PIC X(39)
                   VALUE 'NOMBRE DEUDOR                         I'.
               05  FILLER                     PIC X(39)
                   VALUE 'dC DEUDOR     IDENTIFICACION     MONEDA'.
               05  FILLER                     PIC X(39)
                   VALUE ' LDC    CUPO  MAXIMO   CUPO DISPONIBLE '.
               05  FILLER                     PIC X(14)
                   VALUE '   VENCIMIENTO'.

           03  PH-LAV-07.
               05  FILLER                     PIC X(132)
                   VALUE ALL '-'.

       01  DL-LAV.

           03  DL-LAV-08.
               05  RPT-DETA-GLS-NOMC-V        PIC X(33).
               05  FILLER                     PIC X(002) VALUE SPACES.
               05  RPT-DETA-NUM-ICLI-V        PIC X(8).
               05  FILLER                     PIC X(1)
                   VALUE ALL '-'.
               05  RPT-DETA-VRF-ICLI-V        PIC X.
               05  FILLER                     PIC X(001) VALUE SPACES.
               05  RPT-DETA-IND-ICLI-V        PIC X.
               05  FILLER                     PIC X(001) VALUE SPACES.
               05  RPT-DETA-GLS-ICLI-V        PIC X(3).
               05  FILLER                     PIC X(002) VALUE SPACES.
               05  RPT-DETA-CAI-ICLF-V        PIC X(4).
               05  FILLER                     PIC X(001) VALUE SPACES.
               05  RPT-DETA-IIC-ICLF-V        PIC 9(8).
               05  FILLER                     PIC X(001) VALUE SPACES.
               05  RPT-DETA-NUM-ILDC-V        PIC 9(2).
               05  FILLER                     PIC X(002) VALUE SPACES.
               05  RPT-DETA-GLS-VCLC-V        PIC X(12).
               05  FILLER                     PIC X(002) VALUE SPACES.
               05  RPT-DETA-VAL-CMAX-V        PIC ZZ.ZZZ.ZZZ.ZZZ.
               05  FILLER                     PIC X(002) VALUE SPACES.
               05  RPT-DETA-VAL-CDLC-V        PIC ---.---.---.---.
               05  FILLER                     PIC X(005) VALUE SPACES.
               05  RPT-DETA-NUM-DVEN-V        PIC X(2).
               05  FILLER                     PIC X(1)
                   VALUE ALL '-'.
               05  RPT-DETA-NUM-MVEN-V        PIC X(2).
               05  FILLER                     PIC X(1)
                   VALUE ALL '-'.
               05  RPT-DETA-NUM-SVEN-V        PIC X(2).
               05  RPT-DETA-NUM-AVEN-V        PIC X(2).

           03  DL-LAV-09.
               05  RPT-DETA-NUM-LINUF-V       PIC 9(3).
               05  RPT-DETA-VAL-TUF-V         PIC ZZZ.ZZZ.ZZZ.ZZZ.
               05  RPT-DETA-NUM-LINPES-V      PIC 9(3).
               05  RPT-DETA-VAL-TPE-V         PIC ZZZ.ZZZ.ZZZ.ZZZ.ZZZ.

       01  CF-LAV-CLF-COD-EJEC.

           03  CF-LAV-10.
               05  FILLER                     PIC X(19)
                   VALUE 'TOTAL   EJECUTIVO :'.
               05  FILLER                     PIC X(001) VALUE SPACES.
               05  RPT-CTRL-GLS-EJE-V         PIC X(40).
               05  FILLER                     PIC X(002) VALUE SPACES.
               05  FILLER                     PIC X(11)
                   VALUE 'LINEAS UF :'.
               05  FILLER                     PIC X(001) VALUE SPACES.
               05  RPT-CTRL-NUM-LINUF-V       PIC ZZZ.
               05  FILLER                     PIC X(002) VALUE SPACES.
               05  RPT-CTRL-VAL-TUFUF-V       PIC ZZZ.ZZZ.ZZZ.ZZZ.
               05  FILLER                     PIC X(002) VALUE SPACES.
               05  FILLER                     PIC X(10)
                   VALUE 'LINEAS $ :'.
               05  FILLER                     PIC X(001) VALUE SPACES.
               05  RPT-CTRL-NUM-LINPES-V      PIC ZZZ.
               05  FILLER                     PIC X(002) VALUE SPACES.
               05  RPT-CTRL-VAL-TPEPES-V      PIC ZZZ.ZZZ.ZZZ.ZZZ.ZZZ.
               05  RPT-CTRL-IND-MON-V         PIC X(3).

       01  PH-LAR.

           03  PH-LAR-01.
               05  RPT-HEAD-DUSU-R            PIC X(30).
               05  FILLER                     PIC X(019) VALUE SPACES.
               05  FILLER                     PIC X(36)
                   VALUE 'M U L T I L I N E A S   B C I    A L'.
               05  FILLER                     PIC X(003) VALUE SPACES.
               05  RPT-HEAD-NUM-DHAS-R        PIC X(2).
               05  FILLER                     PIC X(1)
                   VALUE ALL '-'.
               05  RPT-HEAD-NUM-MHAS-R        PIC X(2).
               05  FILLER                     PIC X(1)
                   VALUE ALL '-'.
               05  RPT-HEAD-NUM-SHAS-R        PIC X(2).
               05  RPT-HEAD-NUM-AHAS-R        PIC X(2).
               05  FILLER                     PIC X(024) VALUE SPACES.
               05  RPT-HEAD-FDMA-R            PIC 99B99B9999.

           03  PH-LAR-02.
               05  RPT-HEAD-DSIS-R            PIC X(30).
               05  FILLER                     PIC X(033) VALUE SPACES.
               05  FILLER                     PIC X(39)
                   VALUE 'R E S U M E N                          '.
               05  FILLER                     PIC X(26)
                   VALUE '                    PAGINA'.
               05  FILLER                     PIC X(001) VALUE SPACES.
               05  RPT-HEAD-PAGE-COUNTER-R    PIC 9(3).

           03  PH-LAR-03.
               05  FILLER                     PIC X(123) VALUE SPACES.
               05  FILLER                     PIC X(8)
                   VALUE 'LDCPLLAV'.

           03  PH-LAR-04.
               05  FILLER                     PIC X(132)
                   VALUE ALL '-'.

           03  PH-LAR-05.
               05  FILLER                     PIC X(015) VALUE SPACES.
               05  FILLER                     PIC X(39)
                   VALUE 'OFICINA                  CANTIDAD DE LI'.
               05  FILLER                     PIC X(39)
                   VALUE 'NEAS             MONTO AUTORIZADO      '.
               05  FILLER                     PIC X(27)
                   VALUE '            MONTO UTILIZADO'.

           03  PH-LAR-06.
               05  FILLER                     PIC X(132)
                   VALUE ALL '-'.

       01  DL-LAR.

           03  DL-LAR-07.
               05  FILLER                     PIC X(003) VALUE SPACES.
               05  RPT-DETA-COD-OFIC-R        PIC X(3).
               05  FILLER                     PIC X(003) VALUE SPACES.
               05  RPT-DETA-GLS-OFIC-R        PIC X(25).
               05  FILLER                     PIC X(012) VALUE SPACES.
               05  RPT-DETA-NUM-TLIN-R        PIC ZZZZZZ.
               05  FILLER                     PIC X(013) VALUE SPACES.
               05  FILLER                     PIC X(2)
                   VALUE 'UF'.
               05  FILLER                     PIC X(003) VALUE SPACES.
               05  RPT-DETA-VAL-ATRZ-R        PIC ZZ.ZZZ.ZZZ.ZZZ.ZZZ.
               05  FILLER                     PIC X(011) VALUE SPACES.
               05  FILLER                     PIC X(2)
                   VALUE 'UF'.
               05  FILLER                     PIC X(003) VALUE SPACES.
               05  RPT-DETA-VAL-UTIL-R        PIC ZZ.ZZZ.ZZZ.ZZZ.ZZZ.

       01  FF-LAR.

           03  FF-LAR-08.
               05  RPT-CTRL-GLS-LIN-R         PIC X.

           03  FF-LAR-09.
               05  FILLER                     PIC X(132)
                   VALUE ALL '-'.

           03  FF-LAR-10.
               05  FILLER                     PIC X(11)
                   VALUE 'TOTAL BANCO'.
               05  FILLER                     PIC X(035) VALUE SPACES.
               05  RPT-CTRL-NUM-TLIN-R        PIC ZZZZZZ.
               05  FILLER                     PIC X(013) VALUE SPACES.
               05  FILLER                     PIC X(2)
                   VALUE 'UF'.
               05  FILLER                     PIC X(002) VALUE SPACES.
               05  RPT-CTRL-VAL-ATRZ-R        PIC ZZZ.ZZZ.ZZZ.ZZZ.ZZZ.
               05  FILLER                     PIC X(011) VALUE SPACES.
               05  FILLER                     PIC X(2)
                   VALUE 'UF'.
               05  FILLER                     PIC X(002) VALUE SPACES.
               05  RPT-CTRL-VAL-UTIL-R        PIC ZZZ.ZZZ.ZZZ.ZZZ.ZZZ.

      ***** CRW-FINAL
      *>>>>

       PROCEDURE DIVISION.
      *==================

      ***** CRW-COMIENZO
      *DECLARATIVES.
      ***** CRW-FINAL

       DEC-CF-LAV-CLF-COD-OFIC SECTION.

      ***** CRW-COMIENZO
      *    USE BEFORE REPORTING CF-LAV-CLF-COD-OFIC.
      ***** CRW-FINAL

       INI-CF-LAV-CLF-COD-OFIC.
      *<<<< CF_CLF_CLF_COD_OFIC
      *    MOVE ZEROES TO PAGE-COUNTER IN RPT-LAV.
      *>>>>
       FIN-CF-LAV-CLF-COD-OFIC.
           EXIT.
       DEC-CF-LAV-CLF-COD-EJEC SECTION.

      ***** CRW-COMIENZO
      *    USE BEFORE REPORTING CF-LAV-CLF-COD-EJEC.
      ***** CRW-FINAL

       INI-CF-LAV-CLF-COD-EJEC.
      *<<<< CF_CLF_CLF_COD_EJEC
           MOVE SPACES TO WSS-GLS-EJE IN WSS-LAV.
           IF CLF-COD-EJEC IN SRT > SPACES
               MOVE CLF-COD-EJEC IN SRT TO USR-COD-USER IN USR
               PERFORM BUS-USR
               MOVE USR-GLS-DESC IN USR TO WSS-GLS-EJE IN WSS-LAV.
      *>>>>
       FIN-CF-LAV-CLF-COD-EJEC.
           EXIT.
       DEC-PH-LAV SECTION.

      ***** CRW-COMIENZO
      *    USE BEFORE REPORTING PH-LAV.
      ***** CRW-FINAL

       INI-PH-LAV.
      *<<<< PH_LAV
           MOVE SPACES TO WSS-GLS-OFIC IN WSS-LAV.
           IF CLF-COD-OFIC IN SRT > SPACES
               MOVE CLF-COD-OFIC IN SRT TO OFI-COD-OFIC IN OFI
               PERFORM BUS-OFI
               MOVE OFI-GLS-DESC IN OFI TO WSS-GLS-OFIC IN WSS-LAV.

           MOVE SPACES TO WSS-GLS-EJEC IN WSS-LAV.
           IF CLF-COD-EJEC IN SRT > SPACES
               MOVE CLF-COD-EJEC IN SRT TO USR-COD-USER IN USR
               PERFORM BUS-USR
               MOVE USR-GLS-DESC IN USR TO WSS-GLS-EJEC IN WSS-LAV.
      *>>>>
       FIN-PH-LAV.
           EXIT.
      *<<<< FIN_DEC
       DEC-PH-LAR SECTION.

      ***** CRW-COMIENZO
      *    USE BEFORE REPORTING PH-LAR.
      ***** CRW-FINAL

       INI-PH-LAR.
       FIN-PH-LAR.
           EXIT.
       DEC-FF-LAR SECTION.

      ***** CRW-COMIENZO
      *    USE BEFORE REPORTING FF-LAR.
      ***** CRW-FINAL

       INI-FF-LAR.
       FIN-FF-LAR.
           EXIT.
      *>>>>

      ***** CRW-COMIENZO
      *END DECLARATIVES.
      ***** CRW-FINAL


       MAIN SECTION.
      *------------
       INI-MAIN.
       COPY GNSBGEDB.
           MOVE 'LDCPLLAV' TO FIO-PROG.
           PERFORM GNS-BUS-IDD.

           MOVE FIO-INP      TO FIO-CMND.
           MOVE 'GNS'        TO FIO-SIST.
           PERFORM GNS-FIO-TAB.
      *<<<< INI
           MOVE 'LDC'        TO FIO-SIST.
           MOVE FIO-ACCS-UPD TO FIO-ACCS.
           MOVE FIO-ACC      TO FIO-CMND.
           PERFORM LDC-FIO-CLF.
           MOVE FIO-INP TO FIO-CMND.
           PERFORM LDC-FIO-CLF.

           MOVE 'LDC'        TO FIO-SIST.
           MOVE FIO-ACCS-UPD TO FIO-ACCS.
           MOVE FIO-ACC      TO FIO-CMND.
           PERFORM LDC-FIO-ARC.
           MOVE FIO-INP TO FIO-CMND.
           PERFORM LDC-FIO-ARC.

           MOVE 'LDC'        TO FIO-SIST.
           MOVE FIO-ACCS-UPD TO FIO-ACCS.
           MOVE FIO-ACC      TO FIO-CMND.
           PERFORM LDC-FIO-ARG.
           MOVE FIO-INP TO FIO-CMND.
           PERFORM LDC-FIO-ARG.

           MOVE 'LDC'        TO FIO-SIST.
           MOVE FIO-ACCS-UPD TO FIO-ACCS.
           MOVE FIO-ACC      TO FIO-CMND.
           PERFORM LDC-FIO-RDC.
           MOVE FIO-INP TO FIO-CMND.
           PERFORM LDC-FIO-RDC.

           MOVE 'TAB'        TO FIO-SIST.
           MOVE FIO-ACCS-UPD TO FIO-ACCS.
           MOVE FIO-ACC      TO FIO-CMND.
           PERFORM GNS-FIO-TAB.
           MOVE FIO-INP TO FIO-CMND.
           PERFORM GNS-FIO-TAB.

           MOVE 'DEU'        TO FIO-SIST.
           MOVE FIO-ACCS-UPD TO FIO-ACCS.
           MOVE FIO-ACC      TO FIO-CMND.
           PERFORM GNS-FIO-TAB.
           MOVE FIO-INP TO FIO-CMND.
           PERFORM GNS-FIO-TAB.

           MOVE 'TAB'        TO FIO-SIST.
           MOVE FIO-ACCS-UPD TO FIO-ACCS.
           MOVE FIO-ACC      TO FIO-CMND.
           PERFORM TAB-FIO-OFI.
           MOVE FIO-INP TO FIO-CMND.
           PERFORM TAB-FIO-OFI.

           MOVE 'TAB'        TO FIO-SIST.
           MOVE FIO-ACCS-UPD TO FIO-ACCS.
           MOVE FIO-ACC      TO FIO-CMND.
           PERFORM TAB-FIO-USR.
           MOVE FIO-INP TO FIO-CMND.
           PERFORM TAB-FIO-USR.

           MOVE 'SGC'        TO FIO-SIST.
           MOVE FIO-ACCS-UPD TO FIO-ACCS.
           MOVE FIO-ACC      TO FIO-CMND.
           PERFORM SGC-FIO-DBC.
           MOVE FIO-INP TO FIO-CMND.
           PERFORM SGC-FIO-DBC.

           MOVE 'COL'   TO FIO-SIST.
           MOVE FIO-ACCS-UPD TO FIO-ACCS.
           MOVE FIO-ACC      TO FIO-CMND.
           PERFORM COL-FIO-RDC.
           MOVE FIO-INP TO FIO-CMND.
           PERFORM COL-FIO-RDC.

           MOVE 'COL'   TO FIO-SIST.
           MOVE FIO-ACCS-UPD TO FIO-ACCS.
           MOVE FIO-ACC      TO FIO-CMND.
           PERFORM COL-FIO-DLC.
           MOVE FIO-INP TO FIO-CMND.
           PERFORM COL-FIO-DLC.

           MOVE 'COL'   TO FIO-SIST.
           MOVE FIO-ACCS-UPD TO FIO-ACCS.
           MOVE FIO-ACC      TO FIO-CMND.
           PERFORM COL-FIO-OPC.
           MOVE FIO-INP TO FIO-CMND.
           PERFORM COL-FIO-OPC.

      *>>>>
      *<<<< INI
           DISPLAY ' '.
           DISPLAY 'INICIO CAPTURA PARAMETROS'.
           DISPLAY ' '.
      * Captura codigo de oficina,ejecutivo,estado,fecha parametro
      *RVM-CST-INI 10-NOV-1995
      *     DISPLAY 'INGRESE FECHA VENCIMIENTO (ddmmssaa) : '.
      *     ACCEPT WSS-FEC-FPRO IN WSS-VARI.
      *     DISPLAY WSS-FEC-FPRO IN WSS-VARI.
      *RVM-CST-FIN 10-NOV-1995

           DISPLAY 'INGRESE COD. OFICINA  (XXX/*)    : '.
           ACCEPT WSS-COD-OFIC IN WSS-VARI.
           DISPLAY WSS-COD-OFIC IN WSS-VARI.

           DISPLAY 'INGRESE COD. EJECUTIVO (X(12)/*) : '.
           ACCEPT WSS-COD-EJEC IN WSS-VARI.
           DISPLAY WSS-COD-EJEC IN WSS-VARI.

           DISPLAY 'INGRESE COD. ESTADO    (X/*)     : '.
           ACCEPT WSS-COD-STAT IN WSS-VARI.
           DISPLAY WSS-COD-STAT IN WSS-VARI.

           DISPLAY 'FIN CAPTURA PARAMETROS'.
           DISPLAY ' '.
           DISPLAY 'INICIO VALIDACION PARAMETROS'.

      *RVM-CST-INI 10-NOV-1995
      *VAL-FEC Valida fecha proceso
      *     MOVE WSS-FEC-FPRO IN WSS-VARI TO FEC-FECH.
      *     MOVE FEC-FORM-FEC             TO FEC-FORM.
      *     MOVE FEC-FBLK-N               TO FEC-FBLK.
      *     MOVE FEC-CHOY-N               TO FEC-CHOY.
      *     MOVE FEC-VHBL-N               TO FEC-VHBL.
      *     MOVE FEC-VAL-FEC              TO FEC-CMND.
      *     PERFORM PRO-FEC.
      *     IF NOT FEC-STAT-OKS
      *        DISPLAY ' '
      *        DISPLAY ' PROCESO CANCELADO '
      *        DISPLAY ' ERROR EN VALIDACION F. DE PROCESO : '
      *                  WSS-FEC-FPRO IN WSS-VARI '  ' FEC-MENS
      *<<<< NOT PGM_ARG
      *        PERFORM GNS-PRO-ABT.
      *>>>>
      *RVM-CST-FIN 10-NOV-1995

      *VAL-OFI Valida codigo de oficina
           IF WSS-COD-OFIC IN WSS-VARI > SPACES AND
              WSS-COD-OFIC IN WSS-VARI NOT = '*'
              MOVE WSS-COD-OFIC IN WSS-VARI TO OFI-COD-OFIC IN OFI
              PERFORM VAL-OFI
              IF MSG-GLS-MENS = 'COD    NEX'
                 DISPLAY ' '
                 DISPLAY ' PROCESO CANCELADO '
                 DISPLAY ' ERROR EN VALIDACION COD. OFICINA : '
                           WSS-COD-OFIC IN WSS-VARI
      *<<<< NOT PGM_ARG
                 PERFORM GNS-PRO-ABT.
      *>>>>

      *VAL-USR Valida codigo de ejecutivo
           IF WSS-COD-EJEC IN WSS-VARI > SPACES AND
              WSS-COD-EJEC IN WSS-VARI NOT = '*'
              MOVE WSS-COD-EJEC IN WSS-VARI TO USR-COD-USER IN USR
              PERFORM VAL-USR
              IF MSG-GLS-MENS = 'COD    NEX'
                 DISPLAY ' '
                 DISPLAY ' PROCESO CANCELADO '
                 DISPLAY ' ERROR EN VALIDACION COD. EJECUTIVO : '
                           WSS-COD-EJEC IN WSS-VARI
      *<<<< NOT PGM_ARG
                 PERFORM GNS-PRO-ABT.
      *>>>>

      *VAL-MSC Valida codigo de estado
           IF WSS-COD-STAT IN WSS-VARI > SPACES AND
              WSS-COD-STAT IN WSS-VARI NOT = '*'
              MOVE 'DEU'  TO MSC-COD-SIST
              MOVE 'STA ' TO MSC-COD-TMSC IN MSC
              MOVE WSS-COD-STAT IN WSS-VARI TO MSC-COD-CMSC IN MSC
              PERFORM VAL-MSC
              IF MSG-GLS-MENS = 'COD    NEX'
                 DISPLAY ' '
                 DISPLAY ' PROCESO CANCELADO '
                 DISPLAY ' ERROR EN VALIDACION COD. DE ESTADO : '
                           WSS-COD-STAT IN WSS-VARI
      *<<<< NOT PGM_ARG
                 PERFORM GNS-PRO-ABT.
      *>>>>

           IF WSS-COD-STAT IN WSS-VARI = 'C' OR 'R'
                 DISPLAY ' '
                 DISPLAY ' PROCESO CANCELADO '
                 DISPLAY ' ESTADO DEBE SER ING, VER O ACT : '
      *<<<< NOT PGM_ARG
                 PERFORM GNS-PRO-ABT.
      *>>>>
      *RVM-CST-INI 10-NOV-1995
      *     MOVE WSS-NUM-DPRO IN WSS-VARI TO WSS-NUM-DHAS IN WSS-LAV
      *                                      WSS-NUM-DTER IN WSS-VARI.
      *     MOVE WSS-NUM-MPRO IN WSS-VARI TO WSS-NUM-MHAS IN WSS-LAV
      *                                      WSS-NUM-MTER IN WSS-VARI.
      *     MOVE WSS-NUM-SPRO IN WSS-VARI TO WSS-NUM-SHAS IN WSS-LAV
      *                                      WSS-NUM-STER IN WSS-VARI.
      *     MOVE WSS-NUM-APRO IN WSS-VARI TO WSS-NUM-AHAS IN WSS-LAV
      *                                      WSS-NUM-ATER IN WSS-VARI.
      *RVM-CST-FIN 10-NOV-1995

           DISPLAY ' '.
           DISPLAY 'FIN VALIDACION PARAMETROS'.
           DISPLAY ' '.

           MOVE SPACES TO CCU-CMMA.

      * OBTIENE COD. VALOR DE CAMBIO UF CON CIC DE LA MONEDA '0998'
           MOVE 'TAB'          TO FIO-SIST.
           MOVE 'VLR'          TO TAB-CIC-TTAB IN TAB.
           MOVE '0998  '       TO TAB-CIC-CTAB IN TAB.
           MOVE 'TAB-CIC-TABL' TO FIO-AKEY.
           MOVE FIO-GET-KEY    TO FIO-CMND.
           PERFORM GNS-FIO-TAB.
           IF NOT FIO-STAT-OKS
              DISPLAY ' '
              DISPLAY ' PROCESO CANCELADO '
              DISPLAY ' ERROR EN OBTENCION CIC MONEDA 0998 : '
                        TAB-COD-CTAB IN TAB ' FS: ' FIO-STAT
      *<<<< NOT PGM_ARG
              PERFORM GNS-PRO-ABT.
      *>>>>
           MOVE TAB-COD-CTAB IN TAB TO WSS-COD-UF IN WSS-VARI.

      * OBTIENE COD. VALOR DE CAMBIO DE PESOS CON CIC DE LA MONEDA '0999
           MOVE 'TAB'          TO FIO-SIST.
           MOVE 'VLR'          TO TAB-CIC-TTAB IN TAB.
           MOVE '0999  '       TO TAB-CIC-CTAB IN TAB.
           MOVE 'TAB-CIC-TABL' TO FIO-AKEY.
           MOVE FIO-GET-KEY    TO FIO-CMND.
           PERFORM GNS-FIO-TAB.
           IF NOT FIO-STAT-OKS
              DISPLAY ' '
              DISPLAY ' PROCESO CANCELADO '
              DISPLAY ' ERROR EN OBTENCION CIC MONEDA 0999 : '
                        TAB-COD-CTAB IN TAB ' FS: ' FIO-STAT
      *<<<< NOT PGM_ARG
              PERFORM GNS-PRO-ABT.
      *>>>>
           MOVE TAB-COD-CTAB IN TAB TO WSS-COD-PESO IN WSS-VARI.
           MOVE TAB-COD-CTAB IN TAB TO CCU-COD-PESO IN CCU-VARI.

           PERFORM GET-FHOY.
           MOVE HOY-SHOY           TO WSS-NUM-SHOY IN WSS-VARI.
           MOVE HOY-AHOY           TO WSS-NUM-AHOY IN WSS-VARI.
           MOVE HOY-MHOY           TO WSS-NUM-MHOY IN WSS-VARI.
           MOVE HOY-DHOY           TO WSS-NUM-DHOY IN WSS-VARI.
      *RVM-CST-INI 10-NOV-1995
           MOVE HOY-DHOY           TO WSS-NUM-DHAS IN WSS-LAV.
           MOVE HOY-MHOY           TO WSS-NUM-MHAS IN WSS-LAV.
           MOVE HOY-SHOY           TO WSS-NUM-SHAS IN WSS-LAV.
           MOVE HOY-AHOY           TO WSS-NUM-AHAS IN WSS-LAV.
      *RVM-CST-FIN 10-NOV-1995
      *RVM-CST-INI  8-JUL-1996
           MOVE HOY-DHOY           TO WSS-NUM-DHAS IN WSS-LAR.
           MOVE HOY-MHOY           TO WSS-NUM-MHAS IN WSS-LAR.
           MOVE HOY-SHOY           TO WSS-NUM-SHAS IN WSS-LAR.
           MOVE HOY-AHOY           TO WSS-NUM-AHAS IN WSS-LAR.
      *RVM-CST-FIN  8-JUL-1996

           MOVE WSS-NUM-DHOY IN WSS-VARI TO CAM-NUM-DCAM IN CAM(1).
           MOVE WSS-NUM-MHOY IN WSS-VARI TO CAM-NUM-MCAM IN CAM(1).
           MOVE WSS-NUM-SHOY IN WSS-VARI TO CAM-NUM-SCAM IN CAM(1).
           MOVE WSS-NUM-AHOY IN WSS-VARI TO CAM-NUM-ACAM IN CAM(1).
           MOVE CAM-FEC-FCAM IN CAM(1) TO CAM-FEC-FCAM IN CAM(2).
      *BUSCA VALOR DE CAMBIO DE UF A PESO
           MOVE WSS-COD-UF   IN WSS-VARI TO CAM-COD-VCAM IN CAM(1).
           MOVE WSS-COD-PESO IN WSS-VARI TO CAM-COD-VCAM IN CAM(2).
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM TAB-FIO-CAM.
           IF NOT ( FIO-STAT-OKS AND CAM-MSC-STAT IN CAM = 'S' AND
                    CAM-SGV-VCAM IN CAM > 0 )
               DISPLAY 'ERROR: NO EXISTE VALOR DE CAMBIO DE : '
                 CAM-COD-VCAM IN CAM(1) ' A : '
                 CAM-COD-VCAM IN CAM(2) ' AL : '
                 CAM-FEC-FCAM IN CAM(1)
           ELSE
               MOVE CAM-SGV-VCAM IN CAM TO WSS-SGV-VCAM-UF IN WSS-VARI.
      *>>>>
           SORT GNSSRT

      **** CRW-COMIENZO
      *COPY LDCRSLAV.
      *    09-NOV-95 07:11 PM
              ON ASCENDING KEY CLF-COD-OFIC IN SRT
              ON ASCENDING KEY CLF-COD-EJEC IN SRT
      **** CRW-FINAL

           INPUT  PROCEDURE IS INP-SRT
           OUTPUT PROCEDURE IS OUT-SRT.
       FIN-MAIN.
           IF PGM-STAT-SRT-MAL OR SORT-RETURN > 0
               PERFORM GNS-PRO-ABT
           ELSE
               PERFORM GNS-PRO-END.

       INP-SRT SECTION.
      *---------------
       INI-INP-SRT.
           MOVE FIO-INP TO FIO-CMND.
           PERFORM LDC-FIO-LDC.
       FST-INP-SRT.
           MOVE FIO-GET-FST TO FIO-CMND.
           PERFORM LDC-FIO-LDC.
       LUP-INP-SRT.
           IF NOT FIO-STAT-OKS
              GO TO FIN-INP-SRT.
      *<<<< LUP_INP

           MOVE 'DEU'               TO TAB-COD-SIST.
           MOVE 'TLC'               TO TAB-COD-TTAB IN TAB.
           MOVE LDC-COD-TIPO IN LDC TO TAB-COD-CTAB IN TAB.
           PERFORM BUS-TAB.
           IF MSG-COD-MENS > SPACES
               DISPLAY 'CODIGO INEXISTENTE TABLA TLC '
                       LDC-COD-TIPO IN LDC
               GO TO NXT-INP-SRT.
           IF TAB-CIC-CTAB IN TAB NOT = 'MLT' OR
               LDC-IND-VIGE IN LDC NOT = 'S'
               GO TO NXT-INP-SRT.
           MOVE LDC-CIC-ICLF IN LDC TO CLF-KEY-ICLF IN CLF.
           MOVE FIO-GET-KEY  TO FIO-CMND.
           PERFORM LDC-FIO-CLF.
           IF NOT FIO-STAT-OKS
               MOVE 'DEU' TO MSG-COD-SIST
               MOVE 'CLF    NEX' TO MSG-COD-MENS
               PERFORM GET-MSG
               DISPLAY CLF-KEY-ICLF IN CLF ' ' MSG-GLS-DESC
               GO TO NXT-INP-SRT.
           IF CLF-MSC-STAT IN CLF NOT = 'A'
               GO TO NXT-INP-SRT.

           IF WSS-COD-OFIC IN WSS-VARI > SPACES AND
              WSS-COD-OFIC IN WSS-VARI NOT = '*' AND
              WSS-COD-OFIC IN WSS-VARI NOT = CLF-COD-OFIC IN CLF
               GO TO NXT-INP-SRT.

           IF WSS-COD-EJEC IN WSS-VARI > SPACES AND
              WSS-COD-EJEC IN WSS-VARI NOT = '*' AND
              WSS-COD-EJEC IN WSS-VARI NOT = CLF-COD-EJEC IN CLF
               GO TO NXT-INP-SRT.

           IF WSS-COD-STAT IN WSS-VARI > SPACES AND
              WSS-COD-STAT IN WSS-VARI NOT = '*' AND
              WSS-COD-STAT IN WSS-VARI NOT = CLF-MSC-STAT IN CLF
               GO TO NXT-INP-SRT.
      *>>>>
       MOV-INP-SRT.

      **** CRW-COMIENZO
      *COPY LDCRMLAV.
      *    09-NOV-95 07:11 PM
           MOVE CLF-COD-OFIC IN CLF TO CLF-COD-OFIC IN SRT.
           MOVE DBC-IND-ICLI IN DBC TO DBC-IND-ICLI IN SRT.
           MOVE CLF-CAI-ICLF IN CLF TO CLF-CAI-ICLF IN SRT.
           MOVE CLF-IIC-ICLF IN CLF TO CLF-IIC-ICLF IN SRT.
           MOVE LDC-NUM-ILDC IN LDC TO LDC-NUM-ILDC IN SRT.
           MOVE LDC-VAL-CMAX IN LDC TO LDC-VAL-CMAX IN SRT.
           MOVE LDC-NUM-DVEN IN LDC TO LDC-NUM-DVEN IN SRT.
           MOVE LDC-NUM-MVEN IN LDC TO LDC-NUM-MVEN IN SRT.
           MOVE LDC-NUM-SVEN IN LDC TO LDC-NUM-SVEN IN SRT.
           MOVE LDC-NUM-AVEN IN LDC TO LDC-NUM-AVEN IN SRT.
           MOVE WSS-IND-MON IN WSS-LAV TO WSS-IND-MON IN SRT.
           MOVE CLF-COD-EJEC IN CLF TO CLF-COD-EJEC IN SRT.
           MOVE CLF-COD-TOCF IN CLF TO CLF-COD-TOCF IN SRT.
           MOVE CLF-COD-VCCF IN CLF TO CLF-COD-VCCF IN SRT.
           MOVE LDC-COD-VCLC IN LDC TO LDC-COD-VCLC IN SRT.
           MOVE LDC-FEC-FVEN IN LDC TO LDC-FEC-FVEN IN SRT.
      **** CRW-FINAL

           RELEASE SRT.
       NXT-INP-SRT.
           MOVE FIO-GET-NXT TO FIO-CMND.
           PERFORM LDC-FIO-LDC.
           GO TO LUP-INP-SRT.
       FIN-INP-SRT.
           MOVE FIO-CLO TO FIO-CMND.
           PERFORM LDC-FIO-LDC.

       OUT-SRT SECTION.
      *---------------
       INI-OUT-SRT.
           IF PGM-STAT-SRT-MAL
               GO TO EXT-OUT-SRT.
      *<<<< INI_OUT
           MOVE FIO-INP TO FIO-CMND.
           PERFORM LDC-FIO-CLF.

           OPEN OUTPUT RPTLAR.

      ***** CRW-COMIENZO
      *    INITIATE RPT-LAR.
      ***** CRW-FINAL

      *>>>>
           OPEN OUTPUT RPTLAV.
      *     MOVE 'LDCPLLAV' TO RPT-NPGM.
           CALL 'GNSPLHDR' USING RPT-VARI.

      ***** CRW-COMIENZO
      *    INITIATE RPT-LAV.
           MOVE CLF-COD-OFIC IN SRT TO RPT-CTRL-COD-OFIC.
           MOVE CLF-COD-EJEC IN SRT TO RPT-CTRL-COD-EJEC.
      ***** CRW-FINAL

           RETURN GNSSRT AT END
                GO TO FIN-OUT-SRT.
      *<<<< FST_OUT
           MOVE CLF-COD-OFIC IN SRT TO WSS-COD-OFIC IN WSS-LAR.
           MOVE CLF-COD-OFIC IN SRT TO WSS-COD-OFIC-ANT IN WSS-VARI.
           MOVE ZEROES TO WSS-VAL-ATRZ IN WSS-LAR.
           MOVE ZEROES TO WSS-VAL-UTIL IN WSS-LAR.
           MOVE ZEROES TO WSS-NUM-TLIN IN WSS-LAR.
      *>>>>
       LUP-OUT-SRT.
      *<<<< LUP_OUT
           IF LDC-COD-VCLC IN SRT = WSS-COD-PESO IN WSS-VARI
               MOVE 1 TO WSS-NUM-LINPES IN WSS-LAV
               MOVE LDC-VAL-CMAX IN SRT TO WSS-VAL-TPE IN WSS-LAV
               MOVE ZEROES TO WSS-NUM-LINUF IN WSS-LAV
               MOVE ZEROES TO WSS-VAL-TUF   IN WSS-LAV
           ELSE
               IF LDC-COD-VCLC IN SRT = WSS-COD-UF IN WSS-VARI
                   MOVE 1 TO WSS-NUM-LINUF  IN WSS-LAV
                   MOVE LDC-VAL-CMAX IN SRT TO WSS-VAL-TUF IN WSS-LAV
                   MOVE ZEROES TO WSS-NUM-LINPES IN WSS-LAV
                   MOVE ZEROES TO WSS-VAL-TPE    IN WSS-LAV
               ELSE
                   MOVE ZEROES TO WSS-NUM-LINUF  IN WSS-LAV
                   MOVE ZEROES TO WSS-VAL-TUF    IN WSS-LAV
                   MOVE ZEROES TO WSS-NUM-LINPES IN WSS-LAV
                   MOVE ZEROES TO WSS-VAL-TPE    IN WSS-LAV
                   DISPLAY 'COD-MONEDA NO SUMABLE A TOTALES '
                            LDC-COD-VCLC IN SRT.

      *RVM-CST-INI 11-OCT-1995
      *BUS-OFI  oficina en tablas
      *     MOVE SPACES TO WSS-GLS-OFIC IN WSS-LAV.
      *     IF CLF-COD-OFIC IN SRT > SPACES
      *         MOVE CLF-COD-OFIC IN SRT TO OFI-COD-OFIC IN OFI
      *         PERFORM BUS-OFI
      *         MOVE OFI-GLS-DESC IN OFI TO WSS-GLS-OFIC IN WSS-LAV.
      *BUS-USR busca usuario en tablas
      *     MOVE SPACES TO WSS-GLS-EJEC IN WSS-LAV.
      *     IF CLF-COD-EJEC IN SRT > SPACES
      *         MOVE CLF-COD-EJEC IN SRT TO USR-COD-USER IN USR
      *         PERFORM BUS-USR
      *         MOVE USR-GLS-DESC IN USR TO WSS-GLS-EJEC IN WSS-LAV.
      *RVM-CST-FIN 11-OCT-1995

      * Obtiene Datos desde RDC para datos clientes
           PERFORM GET-CUR-RDC.
           IF WSS-STAT-RDC IN WSS-VARI = 1
              PERFORM RST-DBC
           ELSE
              PERFORM GET-RDC-DBC
              PERFORM GET-NXT-RDC

      *BUS-TAB busca glosa de codigo en tabla
           MOVE SPACES TO WSS-GLS-VCLC IN WSS-LAV.
           IF LDC-COD-VCLC IN SRT > SPACES
               MOVE 'TAB'               TO TAB-COD-SIST
               MOVE 'VLR'               TO TAB-COD-TTAB IN TAB
               MOVE LDC-COD-VCLC IN SRT TO TAB-COD-CTAB IN TAB
               PERFORM BUS-TAB
               MOVE TAB-GLS-DCOR IN TAB TO WSS-GLS-VCLC IN WSS-LAV.

      *BUS-TAB busca CIC de codigo en tabla
           IF CLF-COD-TOCF IN SRT > SPACES
               MOVE 'TAB'               TO TAB-COD-SIST
               MOVE 'TIO'               TO TAB-COD-TTAB IN TAB
               MOVE CLF-COD-TOCF IN SRT TO TAB-COD-CTAB IN TAB
               PERFORM BUS-TAB
      *FLB CST  24-JAN-1994
               MOVE TAB-CIC-CTAB IN TAB TO WSS-CIC-TOCF
           ELSE
               MOVE 'CGE' TO WSS-CIC-TOCF
               DISPLAY 'CLF SIN TIPO OPERACION '
                                         CLF-CAI-ICLF IN SRT ' '
                                         CLF-IIC-ICLF IN SRT.
      *FLB CST  24-JAN-1994

      *RVM-CST-INI 30-OCT-1995
      *AHORA MUESTRA LA FECHA DE VENCIMIENTO DE LDC
      *     MOVE CLF-FEC-FVEN IN CLF      TO WSS-FEC-FPAS IN WSS-VARI.
      *     MOVE WSS-NUM-DPAS IN WSS-VARI TO WSS-NUM-DVEN IN WSS-LAV.
      *     MOVE WSS-NUM-MPAS IN WSS-VARI TO WSS-NUM-MVEN IN WSS-LAV.
      *     MOVE WSS-NUM-SPAS IN WSS-VARI TO WSS-NUM-SVEN IN WSS-LAV.
      *     MOVE WSS-NUM-APAS IN WSS-VARI TO WSS-NUM-AVEN IN WSS-LAV.
      *RVM-CST-FIN 30-OCT-1995

           IF WSS-CIC-TOCF = 'CGE'
               MOVE ZEROES TO WSS-VAL-CDLC   IN WSS-LAV
               MOVE ZEROES TO WSS-NUM-LINUF  IN WSS-LAV
               MOVE ZEROES TO WSS-VAL-TUF    IN WSS-LAV
               MOVE ZEROES TO WSS-NUM-LINPES IN WSS-LAV
               MOVE ZEROES TO WSS-VAL-TPE    IN WSS-LAV
               GO TO FIN-CCU.

           MOVE CLF-CAI-ICLF IN SRT TO CCU-CAI-ICLF.
           MOVE CLF-IIC-ICLF IN SRT TO CCU-IIC-ICLF.
           MOVE SPACES TO CCU-CAI-IOPC(1).
           MOVE ZEROES TO CCU-IIC-IOPC(1).
           MOVE SPACES TO CCU-CAI-DCAN(1).
           MOVE ZEROES TO CCU-IIC-DCAN(1).
           MOVE ZEROES TO CCU-NUM-DCAN(1).
           MOVE SPACES TO CCU-OPE-INDS.
           MOVE SPACES TO CCU-CAI-ICLI.
           MOVE ZEROES TO CCU-IIC-ICLI.
           MOVE ZEROES TO CCU-VAL-CUTI.
           CALL 'LDCSBCCU' USING CCU-CMMA .
           IF CCU-NUM-MENS < CCU-NUM-CALC AND
              CCU-NUM-MENS > ZEROES
               MOVE ZEROES TO WSS-VAL-CDLC IN WSS-LAV
               MOVE CCU-COD-SIST IN CCU-VARI TO MSG-COD-SIST
               MOVE CCU-COD-MENS IN CCU-VARI TO MSG-COD-MENS
               PERFORM GET-MSG
               IF CCU-CAMB > SPACES
                   MOVE CCU-CAMB TO CCU-MEN2
                   MOVE MSG-GLS-DESC TO CCU-MEN1
                   DISPLAY 'CALIFICACION ' CCU-CAI-ICLF CCU-IIC-ICLF
                   DISPLAY 'ERROR CALCULO CUPOS ' CCU-MENS
                   DISPLAY ' '
               ELSE
                   MOVE MSG-GLS-DESC TO CCU-MENS
                   DISPLAY 'CALIFICACION ' CCU-CAI-ICLF CCU-IIC-ICLF
                   DISPLAY 'ERROR CALCULO CUPOS ' CCU-MENS
                   DISPLAY ' '
           ELSE
      *CUPO UTILIZADO POR LA LINEA
               IF CLF-COD-VCCF IN SRT = LDC-COD-VCLC IN SRT
      *REDONDEA
                   MULTIPLY CDIS-LCR IN CCU-VARI(LDC-NUM-ILDC IN SRT)
                        BY 1 GIVING WSS-AUX-CDIS IN WSS-VARI ROUNDED
                   MOVE WSS-AUX-CDIS IN WSS-VARI TO
                        WSS-VAL-CDLC IN WSS-LAV
               ELSE
                   IF CLF-COD-VCCF IN SRT = WSS-COD-PESO IN WSS-VARI AND
                       LDC-COD-VCLC IN SRT = WSS-COD-UF IN WSS-VARI
      *CONVIERTE DE PESOS A UF
                       COMPUTE WSS-VAL-CDLC IN WSS-LAV =
                         CDIS-LCR IN CCU-VARI(LDC-NUM-ILDC IN SRT) /
                         WSS-SGV-VCAM-UF IN WSS-VARI
                   ELSE
      *CONVIERTE DE UF A PESOS
                       COMPUTE WSS-VAL-CDLC IN WSS-LAV =
                         CDIS-LCR IN CCU-VARI(LDC-NUM-ILDC IN SRT) *
                         WSS-SGV-VCAM-UF IN WSS-VARI.


      *RVM-CST-INI 4-JUL-1996
           IF CLF-COD-OFIC IN SRT = WSS-COD-OFIC-ANT IN WSS-VARI
      *ACUMULA TOTALIZADORES
            ADD 1 TO WSS-NUM-TLIN IN WSS-LAR
            IF LDC-COD-VCLC IN SRT = WSS-COD-UF IN WSS-VARI
      *MOVER VALORES EN UF
               ADD LDC-VAL-CMAX IN SRT TO WSS-VAL-ATRZ IN WSS-LAR
               IF CCU-NUM-MENS < CCU-NUM-CALC AND
                  CCU-NUM-MENS > ZEROES
                   NEXT SENTENCE
               ELSE
                   ADD CUTI-LCR IN CCU-VARI(LDC-NUM-ILDC IN SRT) TO
                       WSS-VAL-UTIL IN WSS-LAR
            ELSE
      *CONVERTIR A UF
               COMPUTE WSS-VAL-ATRZ IN WSS-LAR ROUNDED =
                   WSS-VAL-ATRZ IN WSS-LAR  +
                  ( LDC-VAL-CMAX IN SRT / WSS-SGV-VCAM-UF IN WSS-VARI )
               IF CCU-NUM-MENS < CCU-NUM-CALC AND
                  CCU-NUM-MENS > ZEROES
                   NEXT SENTENCE
               ELSE
                   COMPUTE WSS-VAL-UTIL IN WSS-LAR ROUNDED =
                       WSS-VAL-UTIL IN WSS-LAR      +
                      ( CUTI-LCR IN CCU-VARI(LDC-NUM-ILDC IN SRT) /
                              WSS-SGV-VCAM-UF IN WSS-VARI )
           ELSE
            MOVE CLF-COD-OFIC IN SRT TO WSS-COD-OFIC-ANT IN WSS-VARI
            MOVE WSS-COD-OFIC IN WSS-LAR TO OFI-COD-OFIC IN OFI
            PERFORM BUS-OFI
            MOVE OFI-GLS-DESC IN OFI TO WSS-GLS-OFIC IN WSS-LAR

      ***** CRW-COMIENZO
      *     GENERATE DL-LAR
            PERFORM GENERAR-DL-LAR
      ***** CRW-FINAL

            MOVE CLF-COD-OFIC IN SRT TO WSS-COD-OFIC IN WSS-LAR
            MOVE 1      TO WSS-NUM-TLIN IN WSS-LAR
            MOVE ZEROES TO WSS-VAL-ATRZ IN WSS-LAR
            MOVE ZEROES TO WSS-VAL-UTIL IN WSS-LAR
            IF LDC-COD-VCLC IN SRT = WSS-COD-UF IN WSS-VARI
      *MOVER VALORES EN UF
               ADD LDC-VAL-CMAX IN SRT TO WSS-VAL-ATRZ IN WSS-LAR
               IF CCU-NUM-MENS < CCU-NUM-CALC AND
                  CCU-NUM-MENS > ZEROES
                   NEXT SENTENCE
               ELSE
                   ADD CUTI-LCR IN CCU-VARI(LDC-NUM-ILDC IN SRT) TO
                       WSS-VAL-UTIL IN WSS-LAR
            ELSE
      *CONVERTIR A UF
               COMPUTE WSS-VAL-ATRZ IN WSS-LAR ROUNDED =
                   WSS-VAL-ATRZ IN WSS-LAR  +
                  ( LDC-VAL-CMAX IN SRT / WSS-SGV-VCAM-UF IN WSS-VARI )
               IF CCU-NUM-MENS < CCU-NUM-CALC AND
                  CCU-NUM-MENS > ZEROES
                   NEXT SENTENCE
               ELSE
                   COMPUTE WSS-VAL-UTIL IN WSS-LAR ROUNDED =
                       WSS-VAL-UTIL IN WSS-LAR      +
                      ( CUTI-LCR IN CCU-VARI(LDC-NUM-ILDC IN SRT) /
                              WSS-SGV-VCAM-UF IN WSS-VARI ).
      *RVM-CST-FIN 4-JUL-1996

           GO TO FIN-CCU.

       GENERAR-DL-LAR.
      ****************
           MOVE WSS-COD-OFIC IN WSS-LAR        TO RPT-DETA-COD-OFIC-R
           MOVE WSS-GLS-OFIC IN WSS-LAR        TO RPT-DETA-GLS-OFIC-R
           MOVE WSS-NUM-TLIN IN WSS-LAR        TO RPT-DETA-NUM-TLIN-R
           MOVE WSS-VAL-ATRZ IN WSS-LAR        TO RPT-DETA-VAL-ATRZ-R
           MOVE WSS-VAL-UTIL IN WSS-LAR        TO RPT-DETA-VAL-UTIL-R
           ADD  WSS-NUM-TLIN IN WSS-LAR        TO RPT-TOTA-NUM-TLIN
           ADD  WSS-VAL-ATRZ IN WSS-LAR        TO RPT-TOTA-VAL-ATRZ
           ADD  WSS-VAL-UTIL IN WSS-LAR        TO RPT-TOTA-VAL-UTIL

           IF RPT-VARI-LINEA-R > 59 OR RPT-VARI-PAGE-COUNTER-R = 0
              MOVE 'SI' TO RPT-VARI-TIT
              PERFORM TITULOS-R
           END-IF.
           WRITE RPTLAR-REG FROM  DL-LAR-07.
           ADD 01 TO RPT-VARI-LINEA-R.

       TITULOS-R.
      ***********
           MOVE RPT-DUSU                       TO RPT-HEAD-DUSU-R
           MOVE WSS-NUM-DHAS IN WSS-LAR        TO RPT-HEAD-NUM-DHAS-R
           MOVE WSS-NUM-MHAS IN WSS-LAR        TO RPT-HEAD-NUM-MHAS-R
           MOVE WSS-NUM-SHAS IN WSS-LAR        TO RPT-HEAD-NUM-SHAS-R
           MOVE WSS-NUM-AHAS IN WSS-LAR        TO RPT-HEAD-NUM-AHAS-R
           MOVE RPT-FDMA                       TO RPT-HEAD-FDMA-R
           MOVE RPT-DSIS                       TO RPT-HEAD-DSIS-R
           ADD 1 TO RPT-VARI-PAGE-COUNTER-R
           MOVE RPT-VARI-PAGE-COUNTER-R TO RPT-HEAD-PAGE-COUNTER-R
           MOVE SPACES TO RPTLAR-REG.
           WRITE RPTLAR-REG AFTER PAGE
           WRITE RPTLAR-REG FROM  PH-LAR-01
           WRITE RPTLAR-REG FROM  PH-LAR-02
           WRITE RPTLAR-REG FROM  PH-LAR-03
           WRITE RPTLAR-REG FROM  PH-LAR-04
           WRITE RPTLAR-REG FROM  PH-LAR-05
           WRITE RPTLAR-REG FROM  PH-LAR-06
           MOVE 08 TO RPT-VARI-LINEA-R.

       FIN-CCU.
      *>>>>
       GEN-OUT-SRT.

      ***** CRW-COMIENZO
      *    GENERATE DL-LAV.
           PERFORM GENERAR-DL-LAV.
           GO TO NXT-OUT-SRT.

       GENERAR-DL-LAV.
      ****************
           PERFORM DEC-CF-LAV-CLF-COD-EJEC.
           PERFORM DEC-PH-LAV.
           MOVE RPT-DUSU                       TO RPT-HEAD-DUSU-V
           MOVE WSS-NUM-DHAS IN WSS-LAV        TO RPT-HEAD-NUM-DHAS-V
           MOVE WSS-NUM-MHAS IN WSS-LAV        TO RPT-HEAD-NUM-MHAS-V
           MOVE WSS-NUM-SHAS IN WSS-LAV        TO RPT-HEAD-NUM-SHAS-V
           MOVE WSS-NUM-AHAS IN WSS-LAV        TO RPT-HEAD-NUM-AHAS-V
           MOVE RPT-FDMA                       TO RPT-HEAD-FDMA-V
           MOVE RPT-DSIS                       TO RPT-HEAD-DSIS-V
           MOVE CLF-COD-OFIC IN SRT            TO RPT-HEAD-COD-OFIC-V
           MOVE WSS-GLS-OFIC IN WSS-LAV        TO RPT-HEAD-GLS-OFIC-V
           MOVE WSS-GLS-EJEC IN WSS-LAV        TO RPT-HEAD-GLS-EJEC-V
           MOVE DBC-GLS-NOMC IN DBC            TO RPT-DETA-GLS-NOMC-V
           MOVE DBC-NUM-ICLI IN DBC            TO RPT-DETA-NUM-ICLI-V
           MOVE DBC-VRF-ICLI IN DBC            TO RPT-DETA-VRF-ICLI-V
           MOVE DBC-IND-ICLI IN SRT            TO RPT-DETA-IND-ICLI-V
           MOVE DBC-GLS-ICLI IN DBC            TO RPT-DETA-GLS-ICLI-V
           MOVE CLF-CAI-ICLF IN SRT            TO RPT-DETA-CAI-ICLF-V
           MOVE CLF-IIC-ICLF IN SRT            TO RPT-DETA-IIC-ICLF-V
           MOVE LDC-NUM-ILDC IN SRT            TO RPT-DETA-NUM-ILDC-V
           MOVE WSS-GLS-VCLC IN WSS-LAV        TO RPT-DETA-GLS-VCLC-V
           MOVE LDC-VAL-CMAX IN SRT            TO RPT-DETA-VAL-CMAX-V
           MOVE WSS-VAL-CDLC IN WSS-LAV        TO RPT-DETA-VAL-CDLC-V
           MOVE LDC-NUM-DVEN IN SRT            TO RPT-DETA-NUM-DVEN-V
           MOVE LDC-NUM-MVEN IN SRT            TO RPT-DETA-NUM-MVEN-V
           MOVE LDC-NUM-SVEN IN SRT            TO RPT-DETA-NUM-SVEN-V
           MOVE LDC-NUM-AVEN IN SRT            TO RPT-DETA-NUM-AVEN-V
           MOVE WSS-NUM-LINUF IN WSS-LAV       TO RPT-DETA-NUM-LINUF-V
           MOVE WSS-VAL-TUF IN WSS-LAV         TO RPT-DETA-VAL-TUF-V
           MOVE WSS-NUM-LINPES IN WSS-LAV      TO RPT-DETA-NUM-LINPES-V
           MOVE WSS-VAL-TPE IN WSS-LAV         TO RPT-DETA-VAL-TPE-V
           MOVE WSS-GLS-EJE IN WSS-LAV         TO RPT-CTRL-GLS-EJE-V
           MOVE WSS-IND-MON IN SRT             TO RPT-CTRL-IND-MON-V
           IF CLF-COD-EJEC IN SRT = RPT-CTRL-COD-EJEC AND
              CLF-COD-OFIC IN SRT = RPT-CTRL-COD-OFIC
              ADD WSS-NUM-LINPES IN WSS-LAV TO RPT-TOTA-NUM-LINPES
              ADD WSS-NUM-LINUF IN WSS-LAV  TO RPT-TOTA-NUM-LINUF
              ADD  WSS-VAL-TPE IN WSS-LAV   TO RPT-TOTA-VAL-TPEPES
              ADD  WSS-VAL-TUF IN WSS-LAV   TO RPT-TOTA-VAL-TUFUF
           END-IF.

           IF RPT-VARI-LINEA-V > 59 OR RPT-VARI-PAGE-COUNTER-V = 0 OR
              CLF-COD-OFIC IN SRT NOT = RPT-CTRL-COD-OFIC          OR
              CLF-COD-EJEC IN SRT NOT = RPT-CTRL-COD-EJEC
              IF CLF-COD-OFIC IN SRT NOT = RPT-CTRL-COD-OFIC       OR
                 CLF-COD-EJEC IN SRT NOT = RPT-CTRL-COD-EJEC
                 MOVE RPT-TOTA-NUM-LINUF  TO RPT-CTRL-NUM-LINUF-V
                 MOVE RPT-TOTA-VAL-TUFUF TO RPT-CTRL-VAL-TUFUF-V
                 MOVE RPT-TOTA-NUM-LINPES TO RPT-CTRL-NUM-LINPES-V
                 MOVE RPT-TOTA-VAL-TPEPES TO RPT-CTRL-VAL-TPEPES-V
                 MOVE SPACES TO RPTLAV-REG
                 WRITE RPTLAV-REG
                 WRITE RPTLAV-REG FROM  CF-LAV-10
                 ADD 02 TO RPT-VARI-LINEA-V
                 MOVE WSS-NUM-LINUF IN WSS-LAV  TO RPT-TOTA-NUM-LINUF
                 MOVE WSS-VAL-TUF IN WSS-LAV    TO RPT-TOTA-VAL-TUFUF
                 MOVE WSS-NUM-LINPES IN WSS-LAV TO RPT-TOTA-NUM-LINPES
                 MOVE WSS-VAL-TPE IN WSS-LAV    TO RPT-TOTA-VAL-TPEPES
                 MOVE CLF-COD-OFIC IN SRT TO RPT-CTRL-COD-OFIC
                 MOVE CLF-COD-EJEC IN SRT TO RPT-CTRL-COD-EJEC
              END-IF
              PERFORM TITULOS-V
           END-IF.
           IF RPT-VARI-LINEA-V = 08
              WRITE RPTLAV-REG FROM  DL-LAV-08
              ADD 01 TO RPT-VARI-LINEA-V
           ELSE
              WRITE RPTLAV-REG FROM  DL-LAV-08
              MOVE SPACES TO RPTLAV-REG
              WRITE RPTLAV-REG
              ADD 02 TO RPT-VARI-LINEA-V
           END-IF.

       TITULOS-V.
      ***********
           ADD 1 TO RPT-VARI-PAGE-COUNTER-V
           MOVE RPT-VARI-PAGE-COUNTER-V TO RPT-HEAD-PAGE-COUNTER-V
           MOVE SPACES TO RPTLAV-REG
           WRITE RPTLAV-REG AFTER PAGE
           WRITE RPTLAV-REG FROM  PH-LAV-01
           WRITE RPTLAV-REG FROM  PH-LAV-02
           WRITE RPTLAV-REG FROM  PH-LAV-03
           WRITE RPTLAV-REG FROM  PH-LAV-04
           WRITE RPTLAV-REG FROM  PH-LAV-05
           WRITE RPTLAV-REG FROM  PH-LAV-06
           WRITE RPTLAV-REG FROM  PH-LAV-07
           MOVE 09 TO RPT-VARI-LINEA-V.
      ***** CRW-FINAL

       NXT-OUT-SRT.
           RETURN GNSSRT AT END
                GO TO FIN-OUT-SRT.
           GO TO LUP-OUT-SRT.
       FIN-OUT-SRT.

      ***** CRW-COMIENZO
      *    TERMINATE RPT-LAV.

           MOVE RPT-TOTA-NUM-LINUF  TO RPT-CTRL-NUM-LINUF-V.
           MOVE RPT-TOTA-VAL-TUFUF TO RPT-CTRL-VAL-TUFUF-V.
           MOVE RPT-TOTA-NUM-LINPES TO RPT-CTRL-NUM-LINPES-V.
           MOVE RPT-TOTA-VAL-TPEPES TO RPT-CTRL-VAL-TPEPES-V.
           WRITE RPTLAV-REG FROM  CF-LAV-10.
      ***** CRW-FINAL

      *<<<< FIN_TMT
           MOVE WSS-COD-OFIC IN WSS-LAR TO OFI-COD-OFIC IN OFI.
           PERFORM BUS-OFI.
           MOVE OFI-GLS-DESC IN OFI TO WSS-GLS-OFIC IN WSS-LAR.

      ***** CRW-COMIENZO
      *    TERMINATE RPT-LAR.

           IF RPT-VARI-TIT = 'NO'
              MOVE 'SI' TO RPT-VARI-TIT
              PERFORM TITULOS-R
           END-IF.
           MOVE WSS-COD-OFIC IN WSS-LAR        TO RPT-DETA-COD-OFIC-R
           MOVE WSS-GLS-OFIC IN WSS-LAR        TO RPT-DETA-GLS-OFIC-R
           MOVE WSS-NUM-TLIN IN WSS-LAR        TO RPT-DETA-NUM-TLIN-R
           MOVE WSS-VAL-ATRZ IN WSS-LAR        TO RPT-DETA-VAL-ATRZ-R
           MOVE WSS-VAL-UTIL IN WSS-LAR        TO RPT-DETA-VAL-UTIL-R
           ADD  WSS-NUM-TLIN IN WSS-LAR        TO RPT-TOTA-NUM-TLIN
           ADD  WSS-VAL-ATRZ IN WSS-LAR        TO RPT-TOTA-VAL-ATRZ
           ADD  WSS-VAL-UTIL IN WSS-LAR        TO RPT-TOTA-VAL-UTIL
           WRITE RPTLAR-REG FROM  DL-LAR-07.
           MOVE RPT-TOTA-NUM-TLIN TO RPT-CTRL-NUM-TLIN-R
           MOVE RPT-TOTA-VAL-ATRZ TO RPT-CTRL-VAL-ATRZ-R
           MOVE RPT-TOTA-VAL-UTIL TO RPT-CTRL-VAL-UTIL-R
           WRITE RPTLAR-REG FROM  FF-LAR-09
           WRITE RPTLAR-REG FROM  FF-LAR-10

      ***** CRW-FINAL

           CLOSE RPTLAR.

           MOVE FIO-CLO TO FIO-CMND.
           PERFORM LDC-FIO-CLF.

           MOVE FIO-CLO TO FIO-CMND.
           PERFORM SGC-FIO-DBC.

           MOVE FIO-CLO TO FIO-CMND.
           PERFORM LDC-FIO-RDC.

           MOVE 'TAB' TO FIO-SIST.

           MOVE FIO-CLO TO FIO-CMND.
           PERFORM GNS-FIO-TAB.

           MOVE FIO-CLO TO FIO-CMND.
           PERFORM TAB-FIO-OFI.

           MOVE FIO-CLO TO FIO-CMND.
           PERFORM TAB-FIO-USR.

      *>>>>
           CLOSE RPTLAV.
       EXT-OUT-SRT.
           EXIT.
       COPY LDCBFLDC.
       COPY GNSBGDTC.
       COPY GNSBGIDD.
       COPY GNSBTABT.
       COPY GNSBBSYS.
       COPY GNSBFTAB.
       COPY GNSBFMSG.
       COPY GNSBGEND.
       COPY GNSBGABT.

      *<<<< EOF
       GET-CUR-RDC SECTION.
       INI-GET-CUR-RDC.
           MOVE 0 TO WSS-STAT-RDC IN WSS-VARI.
           MOVE CLF-CAI-ICLF IN SRT TO RDC-CAI-ICLF IN RDL.
           MOVE CLF-IIC-ICLF IN SRT TO RDC-IIC-ICLF IN RDL.
           MOVE 'RDC-KEY-ICLF' TO FIO-AKEY.
           MOVE FIO-GET-NLS    TO FIO-CMND.
           PERFORM LDC-FIO-RDC.
           IF NOT ( FIO-STAT-OKS AND
                    CLF-CAI-ICLF IN SRT = RDC-CAI-ICLF IN RDL AND
                    CLF-IIC-ICLF IN SRT = RDC-IIC-ICLF IN RDL )
              MOVE 1 TO WSS-STAT-RDC IN WSS-VARI.
       FIN-GET-CUR-RDC.
           EXIT.

       GET-NXT-RDC SECTION.
       INI-GET-NXT-RDC.
           MOVE 'RDC-KEY-ICLF' TO FIO-AKEY.
           MOVE FIO-GET-NXT TO FIO-CMND.
           PERFORM LDC-FIO-RDC.
           IF FIO-STAT-OKS AND
              CLF-CAI-ICLF IN SRT = RDC-CAI-ICLF IN RDL AND
              CLF-IIC-ICLF IN SRT = RDC-IIC-ICLF IN RDL
                MOVE 'M'    TO WSS-IND-MCLI IN WSS-VARI
           ELSE
                MOVE SPACES TO WSS-IND-MCLI IN WSS-VARI.
       FIN-GET-NXT-RDC.
           EXIT.

      * Lee con CIC CLIENTE archivo DBC
       GET-RDC-DBC SECTION.
       INI-GET-RDC-DBC.
           MOVE RDC-CIC-ICLI IN RDL TO DBC-CIC-ICLI IN DBC.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM SGC-FIO-DBC.
           IF NOT FIO-STAT-OKS
              PERFORM RST-DBC
           ELSE
              MOVE DBC-GLS-NOMC IN DBC TO CPT-STRN
              PERFORM CPT-BLKS
              MOVE CPT-STRN TO DBC-GLS-NOMC IN DBC.
       FIN-GET-RDC-DBC.
           EXIT.

       RST-DBC SECTION.
       INI-RST-DBC.
           MOVE 'CLIENTE INEXISTENTE' TO DBC-GLS-NOMC IN DBC.
           MOVE ZEROES TO DBC-NUM-ICLI IN DBC.
           MOVE SPACES TO DBC-VRF-ICLI IN DBC.
           MOVE SPACES TO DBC-IND-ICLI IN DBC.
           MOVE IDC-INIC-GLS TO DBC-GLS-ICLI IN DBC.
       FIN-RST-DBC.
           EXIT.

      *Entidades de GNS
       COPY GNSBFMSC.
       COPY GNSBGFEC.
       COPY GNSBGHOY.
       COPY GNSBBMSG.
       COPY GNSBBTAB.
       COPY GNSBVTAB.
       COPY GNSBBMSC.
       COPY GNSBVMSC.
       COPY GNSBGCPT.
      *Entidades de TAB
       COPY TABBFCAM.
       COPY TABBFOFI.
       COPY TABBFUSR.
       COPY TABBVOFI.
       COPY TABBBOFI.
       COPY TABBBUSR.
       COPY TABBVUSR.
      *Entidades de LDC
      *<<<< NOT PGM_DB2
       COPY LDCBFCLF.
       COPY LDCBFARC.
       COPY LDCBFARG.
       COPY LDCBFRDC REPLACING RDC BY RDL
                  ==ADR-RDC-REQA== BY ==ADR-RDL-REQA==.
       COPY SGCBFDBC.
      *
       COPY SGCBFOPE.
       COPY SGCBFRCO.
       COPY COLBFRDC.
       COPY COLBFOPC.
       COPY COLBFDLC.
      *>>>>
      *>>>>

