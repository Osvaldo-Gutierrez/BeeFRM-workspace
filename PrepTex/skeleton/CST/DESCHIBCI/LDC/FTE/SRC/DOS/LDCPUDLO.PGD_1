       IDENTIFICATION DIVISION.
      *========================
       PROGRAM-ID.   LDCPUDLO.
       AUTHOR.       BEE-AFRI.
       DATE-WRITTEN. 08-May-19 04:06 PM.

      * NOMBRE PROGRAMA                   LDCPUDLO
      * VERSION PGM                       3.1
      * VERSION SKL                       08.07.21
      * OPCION                            UPD
      * ARCHIVO BASE                      LDCLDC
      * PANTALLA                          LDCDLO
      * INP/OUT                           DATACOM
      * TAMANO COMMAREA                   250

      *<<<<
      * Nuevo Requerimiento
      * Objetivo:
      * Incorporar generacion de movimientos contables en entidad LMO
      * Nombre Proyecto: Contabilidad Inmobiliaria
      * Fecha: Noviembre 2008
      * Programador: EVA-AFRI

      * Mantencion
      * Objetivo
      * Corregir Observaciones QA Certificacion
      * Nombre Proyecto: Contabilidad Inmobiliaria
      * Fecha: Marzo 2009
      * Programador: EVA-AFRI / MAE-AFRI

      *-------------------------------------------------------------
      *MODIFICACIONES:
      *--------------
      *OBJETIVO: SE MUEVEN ESPACIOS Y CEROS SEGUN CORRESPONDA A NUEVOS
      *          CAMPOS DEFINIDOS EN LA ENTIDAD LCC.
      *PROYECTO: RANGO DE VENTAS
      *FECHA   : MAYO DE 2009
      *AUTOR   : CHC
      *ETIQUETA: *AFRI-INI/CHC/MAY-2009/CANAL DE VENTAS
      *-------------------------------------------------------------

      * NOMBRE PROGRAMA                   LDCPUDLO
      * VERSION PGM                       3.1
      * VERSION SKL                       08.07.21
      * OPCION                            UPD
      * ARCHIVO BASE                      LDCLDC
      * PANTALLA                          LDCDLO
      * INP/OUT                           DATACOM
      * TAMANO COMMAREA                   250
      *>>>>

       ENVIRONMENT DIVISION.
      *=====================
       CONFIGURATION SECTION.
      *----------------------
       SPECIAL-NAMES.
               DECIMAL-POINT IS COMMA.

       DATA DIVISION.
      *==============

       WORKING-STORAGE SECTION.
      *------------------------
      * COPY GNSWGSCR.
       COPY GNSWGCVT.
       77  WSS-TAG-LDCPUDLO-INI PIC X(125) VALUE                        
           '<IDNPGM NOM=$LDCPUDLO$ SKL=$08.07.21$ VSN=$ $        
      -    'GEN=$08-May-19 04:06 PM$ FNC=$ $/>'.    
       COPY GNSWCSCR.
      *PTC-INI
      *PTC-SUB
      * ISP  10-MAY-2001 13:46:35 
      * COPY GNSWVSCR.
       COPY GNSWV3CR.
      *PTC-FIN
      *<<<< MI_COMMAREA
      *>>>>
       COPY LDCWIDLO.
       COPY LDCBRLDC.


       COPY GNSWVIDD.
       COPY GNSWGRQA.
       COPY GNSWGUIB.
       COPY GNSWGELS.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-LDC-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-TAB-REQA==.
       COPY GNSBRTAB.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-MSC-REQA==.
       COPY GNSBRMSC.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-MSG-REQA==.
       COPY GNSBRMSG.
       COPY GNSWCFIO.
       COPY GNSWVFIO.
      *PTC-INI
      *PTC-SUB
      * ISP  10-MAY-2001 13:46:35 
      * COPY GNSWGFRM.
       COPY GNSWG3CF.
       COPY GNSWGTSK.
       COPY GNSWGQUE.
      *PTC-FIN
       COPY GNSWVNUM.
       COPY GNSWCNUM.
       COPY GNSWGFEC.
       COPY GNSWGHOY.
       COPY GNSWCVRF.
       COPY GNSWVVRF.
       COPY GNSWGIDC.
       COPY GNSWGSYS.

      *<<<< WSS
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-CLF-REQA==.
      * EVA-INI  NOV-2008    CONTABILIDAD INMOBILIARIA
       01  WSS-VARI.
           03 WSS-CAI-ICLF        VALUE ZEROES           PIC X(04).
           03 WSS-IIC-ICLF        VALUE ZEROES           PIC X(08).
           03 WSS-NUM-ILDC        VALUE ZEROES           PIC 9(02).
           03 WSS-IND-CMAX        VALUE SPACES           PIC X(01).
           03 WSS-IND-MUTI        VALUE SPACES           PIC X(01).
           03 WSS-IND-CMCA        VALUE SPACES           PIC X(01).
           03 WSS-IND-RREC        VALUE SPACES           PIC X(01).
           03 WSS-IND-EDES        VALUE SPACES           PIC X(01).
           03 WSS-IND-FACV        VALUE SPACES           PIC X(01).
           03 WSS-COD-OFIC        VALUE SPACES           PIC X(03).
           03 WSS-COD-TIPO        VALUE SPACES           PIC X(03).
           03 WSS-COD-TOOC        VALUE SPACES           PIC X(03).
           03 WSS-COD-AOOC        VALUE SPACES           PIC X(03).
           03 WSS-COD-UEFE        VALUE SPACES           PIC X(06).
           03 WSS-COD-VCAM        VALUE SPACES           PIC X(06).
           03 WSS-COD-VCLC        VALUE SPACES           PIC X(06).
           03 WSS-MSC-STAT        VALUE SPACES           PIC X(01).
           03 WSS-LCC-VAL-MTO2    VALUE ZEROES     PIC 9(11)V9(04).
           03 WSS-VAL-MTO2        VALUE ZEROES     PIC 9(11)V9(04).
           03 WSS-VAL-MORI        VALUE ZEROES     PIC 9(11)V9(04).
           03 WSS-SGV-CMAX        VALUE ZEROES     PIC 9(11)V9(04).
           03 WSS-VAL-MUTI        VALUE ZEROES     PIC 9(11)V9(04).
           03 WSS-VAL-MPES        VALUE ZEROES     PIC 9(11)V9(04).
           03 WSS-FLD-VAL-CMAX    VALUE ZEROES     PIC 9(11)V9(04).
           03 WSS-FLD-MAX-PESO    VALUE ZEROES     PIC 9(11)V9(04).
           03 WSS-FLD-VAL-MUTI    VALUE ZEROES     PIC 9(11)V9(04).
           03 WSS-LDC-VAL-CMAX    VALUE ZEROES     PIC 9(11)V9(04).
           03 WSS-FEC-FACV.
              05 WSS-NUM-DACV                      PIC 9(02).
              05 WSS-NUM-MACV                      PIC 9(02).
              05 WSS-NUM-SACV                      PIC 9(02).
              05 WSS-NUM-AACV                      PIC 9(02).
           03 WSS-FEC-FACT.
              05 WSS-NUM-DACT                      PIC 9(02).
              05 WSS-NUM-MACT                      PIC 9(02).
              05 WSS-NUM-SACT                      PIC 9(02).
              05 WSS-NUM-AACT                      PIC 9(02).
           03 WSS-FEC-FDES.
              05 WSS-NUM-DDES                      PIC 9(02).
              05 WSS-NUM-MDES                      PIC 9(02).
              05 WSS-NUM-SDES                      PIC 9(02).
              05 WSS-NUM-ADES                      PIC 9(02).
           03 WSS-FEC-FREC.
              05 WSS-NUM-DREC                      PIC 9(02).
              05 WSS-NUM-MREC                      PIC 9(02).
              05 WSS-NUM-SREC                      PIC 9(02).
              05 WSS-NUM-AREC                      PIC 9(02).
           03 WSS-FEC-FCTB.
              05 WSS-NUM-DCTB                      PIC 9(02).
              05 WSS-NUM-MCTB                      PIC 9(02).
              05 WSS-NUM-SCTB                      PIC 9(02).
              05 WSS-NUM-ACTB                      PIC 9(02).

       COPY LDCBRLMO.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-LMO-REQA==.
      * EVA-INI  NOV-2008    CONTABILIDAD INMOBILIARIA
       COPY LDCBRACL.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-ACL-REQA==.
       COPY LDCBRRDC.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-RDC-REQA==.
       COPY LDCBRLCC.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-LCC-REQA==.
       COPY LDCBRICG.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-ICG-REQA==.
       COPY LDCBRCLF.
       COPY SGCBRDBC.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-DBC-REQA==.
       COPY TABBRCAM.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-CAM-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-AUX-REQA==.
       COPY LDCWGPRY.
       COPY GNSWGPES.
      *>>>>
       01  PGM-VARI.
           03 PGM-ICLR                  VALUE ' '       PIC X(01).
           03 PGM-LIMPIAR-TODO          VALUE ' '       PIC X(01).
           03 PGM-LIMPIAR-LLAVES        VALUE 'K'       PIC X(01).
           03 PGM-LIMPIAR-CAMPOS        VALUE 'F'       PIC X(01).
           03 PGM-NO-LIMPIAR-NADA       VALUE 'N'       PIC X(01).
           03 PGM-PROG                                  PIC X(08).
           03 PGM-NTRN                                  PIC X(04).
           03 PGM-STAT.
              05 PGM-STAT-CLF.
                 88 PGM-STAT-CLF-NUL    VALUE '  '.
                 07 PGM-STT1-CLF        VALUE '2' PIC X(01).
                    88 PGM-STAT-CLF-OKS VALUE '0'.
                 07 PGM-STT2-CLF        VALUE '3' PIC X(01).
              05 PGM-STAT-LDC.
                 88 PGM-STAT-LDC-NUL    VALUE '  '.
                 07 PGM-STT1-LDC        VALUE '2' PIC X(01).
                    88 PGM-STAT-LDC-OKS VALUE '0'.
                 07 PGM-STT2-LDC        VALUE '3' PIC X(01).
              05 PGM-STAT-DBC.
                 88 PGM-STAT-DBC-NUL    VALUE '  '.
                 07 PGM-STT1-DBC        VALUE '2' PIC X(01).
                    88 PGM-STAT-DBC-OKS VALUE '0'.
                 07 PGM-STT2-DBC        VALUE '3' PIC X(01).
              05 PGM-STAT-LCC.
                 88 PGM-STAT-LCC-NUL    VALUE '  '.
                 07 PGM-STT1-LCC        VALUE '2' PIC X(01).
                    88 PGM-STAT-LCC-OKS VALUE '0'.
                 07 PGM-STT2-LCC        VALUE '3' PIC X(01).
              05 PGM-STAT-ICG.
                 88 PGM-STAT-ICG-NUL    VALUE '  '.
                 07 PGM-STT1-ICG        VALUE '2' PIC X(01).
                    88 PGM-STAT-ICG-OKS VALUE '0'.
                 07 PGM-STT2-ICG        VALUE '3' PIC X(01).
           03 PGM-SRNF                  VALUE '23'      PIC X(02).
           03 PGM-SOKS                  VALUE '00'      PIC X(02).
           03 PGM-SNUL                  VALUE '  '      PIC X(02).
           03 PGM-SUAR                  VALUE SPACES    PIC X(15).

       LINKAGE SECTION.
      *----------------
       01  DFHCOMMAREA.
           02 FILLER                    PIC X(270).
       COPY GNSLGFIO.

       PROCEDURE DIVISION.
      *===================

       MAIN SECTION.
       INI-MAIN.
           PERFORM INI.
       LUP-MAIN.
           IF SCR-INST = SCR-INST-HCM
                 PERFORM SCR-COM.
           IF SCR-CCPP = 'MOD'
                 PERFORM SCR-MOD
           ELSE
           IF SCR-CCPP = 'ING'
                 PERFORM SCR-ING
           ELSE
           IF SCR-CCPP = 'ACC'
                 PERFORM SCR-ACC
           ELSE
           IF SCR-CCPP = 'ELI'
                 PERFORM SCR-ELI
           ELSE
           IF SCR-CCPP = 'ACT'
                 PERFORM SCR-ACT
           ELSE
           IF SCR-CCPP = 'PGM'
                 PERFORM SCR-PGM
           ELSE
                 MOVE SCR-INST-HCM TO SCR-INST.
           GO TO LUP-MAIN.
       FIN-MAIN.
           EXIT.

       INI SECTION.
       INI-INI.
       COPY GNSBGEIB.
       COPY GNSBGEDB.
           MOVE LOW-VALUES TO DLO-FLD.
           MOVE LOW-VALUES TO DLO-EDT.
           PERFORM GNS-PRO-RCK.
           PERFORM GNS-BUS-VCA.
           MOVE +270 TO SCR-TCMA.
           PERFORM GNS-HDL-SYS.
           PERFORM GNS-HDL-FRM.
           MOVE 'LDCPUDLO' TO FIO-PROG.
           PERFORM GNS-BUS-IDD.
      *PTC-INI
           PERFORM GNS-ERR-QUE.
           PERFORM GET-TSK-TERM.
      *PTC-FIN
       FIN-INI.
           EXIT.

       COPY GNSBHSYS.
       COPY GNSBHFRM.
       COPY GNSBPRCK.
       COPY GNSBBVCA.
       COPY GNSBBIDD.

       SCR-COM SECTION.
       INI-SCR-COM.
           PERFORM STP-EXIT.
           MOVE FRM-CPSF-AEY TO FRM-CPIM-AEY.
           PERFORM PRO-ALL.
           PERFORM SCR-CLRA-DLO.
           PERFORM EDT-KEY-DLO.
           PERFORM EDT-FLD-DLO.
           PERFORM SCR-PUTA.
           MOVE SCR-INST-HCM TO SCR-INST.
           MOVE SCR-CMNP     TO SYS-PROG.
           MOVE SCR-VARI     TO SYS-CMMA.
           MOVE SCR-TCMA     TO SYS-TCMA.
           MOVE SYS-XCTL     TO SYS-CMND.
      *PTC-INI
           IF NOT SCR-OFRM-SRV
      *PTC-FIN
           PERFORM GNS-PRO-SYS.
       XCT-ERR.
           MOVE 'XCTERR    ' TO MSG-COD-MENS.
           MOVE 'GNS'        TO MSG-COD-SIST.
           PERFORM GET-MSG.
           MOVE MSG-GLS-DESC TO SYS-MEN1.
           MOVE SYS-PROG     TO SYS-MEN2.
           MOVE SYS-ABOR     TO SYS-CMND.
      *PTC-INI
           IF NOT SCR-OFRM-SRV
      *PTC-FIN
           PERFORM GNS-PRO-SYS.
       COPY GNSBGGBK.
       FIN-SCR-COM.
           EXIT.

       SCR-MOD SECTION.
       INI-SCR-MOD.
           IF SCR-INST = SCR-INST-HKY
               PERFORM HBL-KEY
               MOVE SCR-INST-GKY TO SCR-INST
               PERFORM SCR-DMSG
           ELSE
           IF SCR-INST = SCR-INST-GFL
               PERFORM GET-FLD
           ELSE
           IF SCR-INST = SCR-INST-GCS
               PERFORM GET-ACC.
           PERFORM DESSCRTRL.
           IF FRM-FFLD = FRM-FFLD-PF7 OR FRM-FFLD-PF8
               PERFORM XCT-PRGP.
           IF NOT ( FRM-FFLD = FRM-FFLD-PF5 OR FRM-FFLD-PF6 )
               GO TO MSG-SCR-MOD.
       MSG-SCR-MOD.
           IF SCR-STAT = SCR-STAT-CON
               MOVE SPACES TO FRM-MENS
           ELSE
           IF SCR-STAT = SCR-STAT-ABT OR SCR-VFLD = SCR-VFLD-NOT
               MOVE 'MODNOT    ' TO MSG-COD-MENS
               MOVE 'GNS' TO MSG-COD-SIST
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS
           ELSE
               MOVE SPACES TO FRM-MENS
               PERFORM CMN-MOD
               IF FIO-STAT-OKS
                   IF FRM-MEN1 NOT > SPACES
                       MOVE 'MODYES    ' TO MSG-COD-MENS
                       MOVE 'GNS' TO MSG-COD-SIST
                       PERFORM GET-MSG
                       MOVE MSG-GLS-DESC TO FRM-MEN1
                   ELSE
                       NEXT SENTENCE
               ELSE
               IF FRM-MENS NOT > SPACES
                   MOVE 'FIOSTAT' TO MSG-COD-TMSG
                   MOVE FIO-STAT  TO MSG-COD-CMSG
                   MOVE 'GNS'     TO MSG-COD-SIST
                   PERFORM GET-MSG
                   MOVE MSG-GLS-DESC TO FRM-MENS.
           PERFORM SCR-MSSG.
       FIN-SCR-MOD.
           EXIT.

       SCR-ING SECTION.
       INI-SCR-ING.
           IF SCR-INST = SCR-INST-HKY
               PERFORM HBL-IKY
               MOVE SCR-INST-GKY TO SCR-INST
      *PTC-INI
               IF NOT SCR-OFRM-SRV
                   PERFORM SCR-DMSG
               ELSE
                   PERFORM SCR-PUTA
      *PTC-FIN
           ELSE
           IF SCR-INST = SCR-INST-GFL
                PERFORM GET-FLD
           ELSE
           IF SCR-INST = SCR-INST-GCS
                PERFORM GET-ACC.
           PERFORM DESSCRTRL.
       MSG-SCR-ING.
           IF SCR-STAT = SCR-STAT-CON
               MOVE SPACES TO FRM-MENS
           ELSE
           IF SCR-STAT = SCR-STAT-ABT OR SCR-VFLD = SCR-VFLD-NOT
               MOVE 'INGNOT    ' TO MSG-COD-MENS
               MOVE 'GNS' TO MSG-COD-SIST
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS
           ELSE
               MOVE SPACES TO FRM-MENS
               PERFORM CMN-ING
               IF FIO-STAT-OKS
                   IF FRM-MEN1 NOT > SPACES
                       MOVE 'INGYES    ' TO MSG-COD-MENS
                       MOVE 'GNS' TO MSG-COD-SIST
                       PERFORM GET-MSG
                       MOVE MSG-GLS-DESC TO FRM-MEN1
                   ELSE
                       NEXT SENTENCE
               ELSE
               IF FRM-MENS NOT > SPACES
                   MOVE 'FIOSTAT' TO MSG-COD-TMSG
                   MOVE FIO-STAT  TO MSG-COD-CMSG
                   MOVE 'GNS'     TO MSG-COD-SIST
                   PERFORM GET-MSG
                   MOVE MSG-GLS-DESC TO FRM-MENS.
           PERFORM SCR-MSSG.
       FIN-SCR-ING.
           EXIT.

       SCR-ACC SECTION.
       INI-SCR-ACC.
           IF SCR-INST = SCR-INST-HKY
               PERFORM HBL-KEY
               MOVE SCR-INST-GKY TO SCR-INST
               PERFORM SCR-DMSG
           ELSE
           IF SCR-INST = SCR-INST-GFL
                PERFORM GET-FLD
           ELSE
           IF SCR-INST = SCR-INST-GCS
                PERFORM GET-ACC.
           PERFORM DESSCRTRL.
           IF FRM-FFLD = FRM-FFLD-PF7 OR FRM-FFLD-PF8 OR
                         FRM-FFLD-PF5 OR FRM-FFLD-PF6
               PERFORM XCT-PRGP.
           MOVE SPACES TO FRM-MENS.
           IF SCR-STAT NOT = SCR-STAT-CON
               PERFORM CMN-ACC.
           PERFORM SCR-MSSG.
       FIN-SCR-ACC.
           EXIT.

       SCR-ELI SECTION.
       INI-SCR-ELI.
           IF SCR-INST = SCR-INST-HKY
               PERFORM HBL-KEY
               MOVE SCR-INST-GKY TO SCR-INST
               PERFORM SCR-DMSG
           ELSE
           IF SCR-INST = SCR-INST-GCS
                PERFORM GET-ACC.
           PERFORM DESSCRTRL.
           IF FRM-FFLD = FRM-FFLD-PF7 OR FRM-FFLD-PF8 OR
                         FRM-FFLD-PF5 OR FRM-FFLD-PF6
               PERFORM XCT-PRGP.
           IF SCR-STAT = SCR-STAT-CON
               MOVE SPACES TO FRM-MENS
           ELSE
           IF SCR-STAT = SCR-STAT-ABT OR SCR-VFLD = SCR-VFLD-NOT
               MOVE 'ELINOT    ' TO MSG-COD-MENS
               MOVE 'GNS' TO MSG-COD-SIST
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS
           ELSE
               MOVE SPACES TO FRM-MENS
               PERFORM CMN-ELI
               IF FIO-STAT-OKS
                   IF FRM-MEN1 NOT > SPACES
                       MOVE 'ELIYES    ' TO MSG-COD-MENS
                       MOVE 'GNS' TO MSG-COD-SIST
                       PERFORM GET-MSG
                       MOVE MSG-GLS-DESC TO FRM-MEN1
                   ELSE
                       NEXT SENTENCE
               ELSE
               IF FRM-MENS NOT > SPACES
                   MOVE 'FIOSTAT' TO MSG-COD-TMSG
                   MOVE FIO-STAT  TO MSG-COD-CMSG
                   MOVE 'GNS'     TO MSG-COD-SIST
                   PERFORM GET-MSG
                   MOVE MSG-GLS-DESC TO FRM-MENS.
           PERFORM SCR-MSSG.
       FIN-SCR-ELI.
           EXIT.

       SCR-ACT SECTION.
       INI-SCR-ACT.
           IF SCR-INST = SCR-INST-HKY
               PERFORM HBL-KEY
               MOVE SCR-INST-GKY TO SCR-INST
               PERFORM SCR-DMSG
           ELSE
           IF SCR-INST = SCR-INST-GFL
                PERFORM GET-FLD
           ELSE
           IF SCR-INST = SCR-INST-GCS
                PERFORM GET-ACC.
           PERFORM DESSCRTRL.
           IF ( FRM-FFLD = FRM-FFLD-PF7 OR FRM-FFLD-PF8  OR
                           FRM-FFLD-PF5 OR FRM-FFLD-PF6 ) AND
              SCR-ACTU = SCR-ACTU-MOD
               PERFORM XCT-PRGP.
           IF SCR-ACTU = SCR-ACTU-MOD
                  PERFORM MSG-SCR-MOD
           ELSE
                  PERFORM MSG-SCR-ING.
       FIN-SCR-ACT.
           EXIT.

       SCR-PGM SECTION.
       INI-SCR-PGM.
           IF SCR-INST = SCR-INST-HKY
               PERFORM HBL-KEY
               MOVE SCR-INST-GKY TO SCR-INST
               PERFORM SCR-DMSG
           ELSE
           IF SCR-INST = SCR-INST-GFL
                PERFORM GET-FLD
           ELSE
           IF SCR-INST = SCR-INST-GCS
                PERFORM GET-ACC.
       TRL-SCR-PGM.
           PERFORM DESSCRTRL.
           IF FRM-FFLD = FRM-FFLD-PF7 OR FRM-FFLD-PF8 OR
                         FRM-FFLD-PF5 OR FRM-FFLD-PF6
               PERFORM XCT-PRGP.
           MOVE SPACES TO FRM-MENS.
           IF SCR-STAT NOT = SCR-STAT-CON
               PERFORM CMN-PGM.
           PERFORM SCR-MSSG.
       FIN-SCR-PGM.
           EXIT.

       SCR-DMSG SECTION.
       INI-SCR-DMSG.
           IF PGM-ICLR = PGM-NO-LIMPIAR-NADA
               NEXT SENTENCE
           ELSE
           IF PGM-ICLR = PGM-LIMPIAR-TODO
               PERFORM SCR-CLRA-DLO
               PERFORM EDT-KEY-DLO
               PERFORM EDT-FLD-DLO
           ELSE
           IF PGM-ICLR = PGM-LIMPIAR-LLAVES
               PERFORM CLR-KEY-DLO
               PERFORM EDT-KEY-DLO
           ELSE
               PERFORM CLR-FLD-DLO
               PERFORM EDT-FLD-DLO.
           PERFORM STP-EXIT.
           PERFORM SCR-PUTA.
           PERFORM SCR-EXIT.
       FIN-SCR-DMSG.
           EXIT.

       XCT-PRGP SECTION.
       INI-XCT-PRGP.
           MOVE SCR-INST-BRW TO SCR-INST.
           PERFORM STP-EXIT.
           MOVE FRM-FFLD   TO SCR-FFLD.
      *
           MOVE SCR-PROG     TO SYS-PROG.
           MOVE SCR-VARI     TO SYS-CMMA.
           MOVE SCR-TCMA     TO SYS-TCMA.
           MOVE SYS-XCTL     TO SYS-CMND.
      *PTC-INI
           IF NOT SCR-OFRM-SRV
      *PTC-FIN
           PERFORM GNS-PRO-SYS.
           PERFORM XCT-ERR.
       FIN-XCT-PRGP.
           EXIT.

       SCR-RST SECTION.
       INI-SCR-RST.
           MOVE SPACES       TO PGM-ICLR.
           MOVE SPACES       TO SCR-ACTU.
           MOVE SCR-STPP     TO SCR-STAT.
           MOVE SCR-MFLD-NOT TO SCR-MFLD.
           MOVE LOW-VALUES   TO DLO-FLD.
           MOVE LOW-VALUES TO DLO-EDT.
       FIN-SCR-RST.
           EXIT.

       GET-FLD SECTION.
       INI-GET-FLD.
           PERFORM SCR-GFLD.
           IF FRM-STAT-ABT
               MOVE SCR-STAT-ABT TO SCR-STAT.
       FIN-GET-FLD.
           EXIT.

       CMN-MOD SECTION.
       INI-CMN-MOD.
      *<<<<
      * EVA-INI  NOV-2008    CONTABILIDAD INMOBILIARIA
           PERFORM LEE-CLF.

      * Inicializa Variables
           MOVE ZEROES TO WSS-FLD-VAL-CMAX IN WSS-VARI.
           MOVE ZEROES TO WSS-FLD-VAL-MUTI IN WSS-VARI.
           MOVE ZEROES TO WSS-LDC-VAL-CMAX IN WSS-VARI.
           MOVE ZEROES TO WSS-LCC-VAL-MTO2 IN WSS-VARI.
           MOVE ZEROES TO WSS-VAL-MPES IN WSS-VARI.
           MOVE ZEROES TO WSS-VAL-MUTI IN WSS-VARI.
           MOVE ZEROES TO WSS-VAL-MTO2 IN WSS-VARI.
           MOVE ZEROES TO WSS-SGV-CMAX IN WSS-VARI.
           MOVE ZEROES TO WSS-NUM-ILDC IN WSS-VARI.
           MOVE SPACES TO WSS-CAI-ICLF IN WSS-VARI.
           MOVE SPACES TO WSS-IIC-ICLF IN WSS-VARI.
           MOVE SPACES TO WSS-MSC-STAT IN WSS-VARI.
           MOVE SPACES TO WSS-COD-VCLC IN WSS-VARI.

      * Indicador tipo de cambio
           MOVE 'N' TO WSS-IND-CMAX IN WSS-VARI.
           MOVE 'N' TO WSS-IND-MUTI IN WSS-VARI.

      * Inicializa indicadores
           MOVE SPACES TO WSS-IND-EDES IN WSS-VARI.
           MOVE SPACES TO WSS-IND-CMCA IN WSS-VARI.
      * EVA-FIN  NOV-2008    CONTABILIDAD INMOBILIARIA

      *>>>>
           PERFORM KEY-ALL-DLO.
           MOVE FIO-GET-KEY-UPD TO FIO-CMND.
           PERFORM LDC-FIO-LDC.
           IF FIO-STAT-OKS AND
              LDC-STP-ITRN IN LDC NOT = SCR-UMOD
               MOVE FIO-ULK-REC TO FIO-CMND
               PERFORM LDC-FIO-LDC
               MOVE FIO-BCK-OUT TO FIO-CMND
               PERFORM LDC-FIO-LDC
               MOVE 'GNS' TO MSG-COD-SIST
               MOVE 'GNSACCSSIMUL' TO MSG-COD-MENS
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS
      *PTC-INI
               MOVE 'S' TO SCR-IERR
      *PTC-FIN
               GO TO FIN-CMN-MOD.
           IF NOT FIO-STAT-OKS
               GO TO FIN-CMN-MOD.
           PERFORM RET-STT-LDC.
           PERFORM RET-ALL-DLO.
           PERFORM RET-HDR-LDC.
      *<<<<
      * EVA-INI  NOV-2008    CONTABILIDAD INMOBILIARIA
      * Mueve datos de la entidad LDC
           MOVE LDC-MSC-STAT IN LDC TO WSS-MSC-STAT IN WSS-VARI.
           MOVE LDC-VAL-CMAX IN LDC TO WSS-SGV-CMAX IN WSS-VARI.
           MOVE LDC-COD-TIPO IN LDC TO WSS-COD-TIPO IN WSS-VARI.
           MOVE LDC-COD-VCLC IN LDC TO WSS-COD-VCLC IN WSS-VARI.
           MOVE LDC-VAL-CMAX IN LDC TO WSS-LDC-VAL-CMAX IN WSS-VARI.

      * Mueve datos de la Pantalla
           MOVE LDC-NUM-ILDC IN DLO-FLD TO WSS-NUM-ILDC IN WSS-VARI.
           MOVE LDC-CAI-ICLF IN DLO-FLD TO WSS-CAI-ICLF IN WSS-VARI.
           MOVE LDC-IIC-ICLF IN DLO-FLD TO WSS-IIC-ICLF IN WSS-VARI.
           MOVE LDC-VAL-CMAX IN DLO-FLD TO
                WSS-FLD-VAL-CMAX IN WSS-VARI.
           MOVE LCC-VAL-MUTI IN DLO-FLD TO
                WSS-FLD-VAL-MUTI IN WSS-VARI.
      * EVA-FIN  NOV-2008    CONTABILIDAD INMOBILIARIA
           IF SCR-CMND = 'MCA'
              MOVE LDC-VAL-CMAX IN LDC TO LDC-VAL-CMAX IN PRY-VARI.
      * EVA-INI  NOV-2008    CONTABILIDAD INMOBILIARIA
           MOVE 'S' TO WSS-IND-CMAX IN WSS-VARI.
           PERFORM VALOR-CAM.
           IF MSG-COD-MENS > SPACES
              GO TO FIN-CMN-MOD.
      * EVA-FIN  NOV-2008    CONTABILIDAD INMOBILIARIA
           GO TO CNT-CMN-MOD.
      *>>>>
           MOVE FIO-MOD TO FIO-CMND.
           PERFORM LDC-FIO-LDC.
      *<<<<
       CNT-CMN-MOD.
           PERFORM RET-STT-LDC.
           PERFORM RET-ALL-DLO.
           PERFORM RET-HDR-LDC.
      *<<<<
      * EVA-INI  NOV-2008    CONTABILIDAD INMOBILIARIA
      *    IF SCR-CMND = 'ACA'
      *          MOVE 'A' TO LDC-MSC-STAT IN LDC.
      * EVA-FIN  NOV-2008    CONTABILIDAD INMOBILIARIA
      *<<<<
      *<<<< FIN_CMN_MOD
           MOVE FIO-MOD TO FIO-CMND.
           PERFORM LDC-FIO-LDC.
           IF NOT FIO-STAT-OKS
               MOVE FIO-MENS TO FRM-MENS
               GO TO FIN-CMN-MOD.
           MOVE LDC-CIC-ICLF IN LDC TO LCC-CIC-ICLF IN LCC.
           MOVE LDC-NUM-ILDC IN LDC TO LCC-NUM-ILCC IN LCC.
           MOVE FIO-GET-KEY-UPD TO FIO-CMND.
           PERFORM LDC-FIO-LCC.
           IF NOT FIO-STAT-OKS
               MOVE FIO-MENS TO FRM-MENS
               GO TO FIN-CMN-MOD.
      * EVA-INI  NOV-2008    CONTABILIDAD INMOBILIARIA
           MOVE LCC-VAL-MUTI IN LCC TO WSS-VAL-MUTI IN WSS-VARI.
      * EVA-FIN  NOV-2008    CONTABILIDAD INMOBILIARIA
           PERFORM RET-LCC-DLO.
      * EVA-INI  NOV-2008    CONTABILIDAD INMOBILIARIA
           IF SCR-CMND = 'MCA'
              MOVE LCC-VAL-MTO2 IN LCC TO
                   WSS-LCC-VAL-MTO2 IN WSS-VARI.

      * Obtiene valor cambio mto acumulado
           MOVE 'S' TO WSS-IND-MUTI IN WSS-VARI.
           PERFORM VALOR-CAM.
           IF MSG-COD-MENS > SPACES
              GO TO FIN-CMN-MOD.

           COMPUTE WSS-VAL-MTO2 = WSS-FLD-MAX-PESO IN WSS-VARI -
                                  WSS-VAL-MUTI IN WSS-VARI.
      * EVA-FIN  NOV-2008    CONTABILIDAD INMOBILIARIA
           MOVE FIO-MOD TO FIO-CMND.
           PERFORM LDC-FIO-LCC.
           IF NOT FIO-STAT-OKS
               MOVE FIO-MENS TO FRM-MENS
               GO TO FIN-CMN-MOD.
      *<<<<
      * EVA-INI  NOV-2008    CONTABILIDAD INMOBILIARIA
           IF SCR-CMND = 'REC'
              PERFORM INI-LMO.

           IF SCR-CMND = 'MCA' AND LDC-MSC-STAT IN LDC = 'D'
              IF NOT  (WSS-LDC-VAL-CMAX IN WSS-VARI =
                       WSS-FLD-VAL-CMAX IN WSS-VARI)
                 MOVE 'N'    TO WSS-IND-CMCA IN WSS-VARI
                 PERFORM INI-LMO.
      * EVA-FIN  NOV-2008    CONTABILIDAD INMOBILIARIA
           IF SCR-CMND = 'MCA'
                MOVE LDC-COD-VCLC IN LDC TO LDC-COD-VCLC IN PRY-VARI
                MOVE LDC-FEC-FINI IN LDC TO WSS-FEC-FAPE IN PRY-VARI
                MOVE LDC-CIC-ICLF IN LDC TO CLF-CIC-ICLF IN PRY-VARI
                COMPUTE LDC-VAL-CMAX IN PRY-VARI =
                        LDC-VAL-CMAX IN LDC      -
                        LDC-VAL-CMAX IN PRY-VARI
      *AFRI-INI/MARZO2009 MAE
      *        PERFORM UPD-CMAX.
               PERFORM UPD-CMAX-MCA.
      *AFRI-INI/MARZO2009 MAE
      *>>>>
           MOVE LDC-CAI-ICLF IN DLO-FLD TO ICG-CAI-ICLF IN ICG.
           MOVE LDC-IIC-ICLF IN DLO-FLD TO ICG-IIC-ICLF IN ICG.
           MOVE LDC-NUM-ILDC IN DLO-FLD TO ICG-NUM-ILDC IN ICG.
           MOVE SPACES              TO ICG-IND-TTAS IN ICG.
           MOVE ZEROES              TO ICG-FEC-FINI IN ICG.
           MOVE FIO-GET-KEY-UPD TO FIO-CMND.
           PERFORM LDC-FIO-ICG.
           IF NOT FIO-STAT-OKS
               MOVE FIO-MENS TO FRM-MENS
               GO TO FIN-CMN-MOD.
           PERFORM RET-ICG-DLO.
           MOVE FIO-MOD TO FIO-CMND.
           PERFORM LDC-FIO-ICG.
           IF NOT FIO-STAT-OKS
               MOVE FIO-MENS TO FRM-MENS
               GO TO FIN-CMN-MOD.

      *>>>>
      *<<<<
           IF SCR-CMND = 'ACA'
      * EVA-INI  MAR-2009    CONTABILIDAD INMOBILIARIA
      *         MOVE LDC-CIC-ICLF IN LDC TO LDC-CIC-ICLF IN PRY-VARI
      *         MOVE LDC-NUM-ILDC IN LDC TO LDC-NUM-ILDC IN PRY-VARI
      *         PERFORM UPD-EDES.

      *     IF SCR-CMND = 'ACA'
      * EVA-FIN  MAR-2009    CONTABILIDAD INMOBILIARIA
               MOVE LDC-CIC-ICLF IN LDC TO CLF-CIC-ICLF IN PRY-VARI
               MOVE LDC-COD-VCLC IN LDC TO LDC-COD-VCLC IN PRY-VARI
               MOVE LDC-VAL-CMAX IN LDC TO LDC-VAL-CMAX IN PRY-VARI
               MOVE LDC-FEC-FINI IN LDC TO WSS-FEC-FAPE IN PRY-VARI
      * EVA-INI  MAR-2009    CONTABILIDAD INMOBILIARIA
      *        PERFORM UPD-CMAX.
               PERFORM UPD-CMAX
               IF (PRY-IND-ERRO IN PRY-VARI = 'S')
                   MOVE 'DEU' TO MSG-COD-SIST
                   MOVE PRY-COD-MENS IN PRY-VARI TO MSG-COD-MENS
                   PERFORM GET-MSG
                   MOVE MSG-GLS-DESC  TO FRM-MENS
                   MOVE '00'          TO FIO-STAT
                   MOVE SCR-STAT-CON  TO SCR-STAT
                   GO TO FIN-CMN-MOD
               ELSE
                   MOVE LDC-CAI-ICLF IN DLO-FLD TO
                        LDC-CAI-ICLF IN PRY-VARI
                   MOVE LDC-IIC-ICLF IN DLO-FLD TO
                        LDC-IIC-ICLF IN PRY-VARI
                   MOVE LDC-NUM-ILDC IN DLO-FLD TO
                        LDC-NUM-ILDC IN PRY-VARI
                   PERFORM UPD-EDES
                   PERFORM LEE-ANT-DLO
                   IF WSS-IND-EDES IN WSS-VARI = 'S'
                      PERFORM INI-LMO.
      * EVA-FIN  MAR-2009    CONTABILIDAD INMOBILIARIA
      *>>>>
       FIN-CMN-MOD.
           EXIT.

       CMN-ING SECTION.
       INI-CMN-ING.
           MOVE SPACES TO LDC.
      *<<<< INI_CMN_ING
           MOVE ZEROES              TO LDC-VAL-RSG1 IN LDC.
           MOVE ZEROES              TO LDC-VAL-RSG2 IN LDC.
           MOVE ZEROES              TO LDC-VAL-CACT IN LDC.
      *>>>>
           PERFORM RET-STT-LDC.
           PERFORM RET-ALL-DLO.
           PERFORM RET-HDR-LDC.
           MOVE FIO-PUT TO FIO-CMND.
           PERFORM LDC-FIO-LDC.
      *<<<< FIN_CMN_ING
           IF NOT FIO-STAT-OKS
               MOVE FIO-MENS TO FRM-MENS
               GO TO FIN-CMN-ING.
           PERFORM PUT-LCC.
           IF NOT FIO-STAT-OKS
               MOVE FIO-MENS TO FRM-MENS
               GO TO FIN-CMN-ING.
           PERFORM PUT-ICG.
           IF NOT FIO-STAT-OKS
               MOVE FIO-MENS TO FRM-MENS
               GO TO FIN-CMN-ING.
      *>>>>
       FIN-CMN-ING.
           EXIT.

       CMN-ACC SECTION.
       INI-CMN-ACC.
           IF SCR-STAT = SCR-STAT-ABT OR SCR-VFLD = SCR-VFLD-NOT
               MOVE 'ACCION NO REALIZADA' TO FRM-MENS
               GO TO FIN-CMN-ACC.
           PERFORM KEY-ALL-DLO.
           MOVE FIO-GET-KEY-UPD TO FIO-CMND.
           PERFORM LDC-FIO-LDC.
           IF FIO-STAT-OKS AND
              LDC-STP-ITRN IN LDC NOT = SCR-UMOD
               MOVE FIO-ULK-REC TO FIO-CMND
               PERFORM LDC-FIO-LDC
               MOVE FIO-BCK-OUT TO FIO-CMND
               PERFORM LDC-FIO-LDC
               MOVE 'GNS' TO MSG-COD-SIST
               MOVE 'GNSACCSSIMUL' TO MSG-COD-MENS
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS
               GO TO FIN-CMN-ACC.
           IF NOT FIO-STAT-OKS
               GO TO FIN-CMN-ACC.
           PERFORM RET-ALL-DLO.
       FIN-CMN-ACC.
           EXIT.

       CMN-ELI SECTION.
       INI-CMN-ELI.
           PERFORM KEY-ALL-DLO.
      *AFRI-INI/MAYO-2009  CTBL INMOB
           PERFORM VAL-TAB-CNT.
           IF PRY-IND-ERRO IN PRY-VARI = 'S'
               MOVE 'DEU' TO MSG-COD-SIST
               MOVE PRY-COD-MENS IN PRY-VARI TO MSG-COD-MENS
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC  TO FRM-MENS
               MOVE '00'          TO FIO-STAT
               MOVE SCR-STAT-CON  TO SCR-STAT
               GO TO FIN-CMN-ELI.
           PERFORM KEY-ALL-DLO.
      *AFRI-FIN/MAYO-2009  CTBL INMOB
      *>>>>
           PERFORM KEY-ALL-DLO.
           MOVE FIO-GET-KEY-UPD TO FIO-CMND.
           PERFORM LDC-FIO-LDC.
           IF FIO-STAT-OKS AND
              LDC-STP-ITRN IN LDC NOT = SCR-UMOD
               MOVE FIO-ULK-REC TO FIO-CMND
               PERFORM LDC-FIO-LDC
               MOVE FIO-BCK-OUT TO FIO-CMND
               PERFORM LDC-FIO-LDC
               MOVE 'GNS' TO MSG-COD-SIST
               MOVE 'GNSACCSSIMUL' TO MSG-COD-MENS
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS
               GO TO FIN-CMN-ELI.
           IF NOT FIO-STAT-OKS
               GO TO FIN-CMN-ELI.
           MOVE FIO-DEL TO FIO-CMND.
           PERFORM LDC-FIO-LDC.
      *<<<< FIN_CMN_ELI
           IF NOT FIO-STAT-OKS
               MOVE FIO-MENS TO FRM-MENS
               GO TO FIN-CMN-ELI.
           MOVE LDC-CIC-ICLF IN LDC TO LCC-CIC-ICLF IN LCC.
           MOVE LDC-NUM-ILDC IN LDC TO LCC-NUM-ILCC IN LCC.
           MOVE FIO-GET-KEY-UPD TO FIO-CMND.
           PERFORM LDC-FIO-LCC.
           IF NOT FIO-STAT-OKS
               MOVE FIO-MENS TO FRM-MENS
               GO TO FIN-CMN-ELI.
           MOVE FIO-DEL TO FIO-CMND.
           PERFORM LDC-FIO-LCC.
           IF NOT FIO-STAT-OKS
               MOVE FIO-MENS TO FRM-MENS
               GO TO FIN-CMN-ELI.
           MOVE LDC-CAI-ICLF IN DLO-FLD TO ICG-CAI-ICLF IN ICG.
           MOVE LDC-IIC-ICLF IN DLO-FLD TO ICG-IIC-ICLF IN ICG.
           MOVE LDC-NUM-ILDC IN LDC TO ICG-NUM-ILDC IN ICG.
           MOVE SPACES              TO ICG-IND-TTAS IN ICG.
           MOVE ZEROES              TO ICG-FEC-FINI IN ICG.
           MOVE FIO-GET-KEY-UPD TO FIO-CMND.
           PERFORM LDC-FIO-ICG.
           IF NOT FIO-STAT-OKS
               MOVE FIO-MENS TO FRM-MENS
               GO TO FIN-CMN-ELI.
           MOVE FIO-DEL TO FIO-CMND.
           PERFORM LDC-FIO-ICG.
           IF NOT FIO-STAT-OKS
               MOVE FIO-MENS TO FRM-MENS
               GO TO FIN-CMN-ELI.
      *>>>>
       FIN-CMN-ELI.
           EXIT.

       CMN-PGM SECTION.
       INI-CMN-PGM.
           PERFORM RET-ALL-DLO.
       FIN-CMN-PGM.
           EXIT.

       STP-EXIT SECTION.
       INI-STP-EXIT.
           MOVE SCR-PROG TO PGM-PROG.
           MOVE SCR-NTRN TO PGM-NTRN.

           MOVE SCR-PROV TO SCR-PROG.
           MOVE SCR-NTRV TO SCR-NTRN.

           MOVE PGM-PROG TO SCR-PROV
           MOVE PGM-NTRN TO SCR-NTRV.
       FIN-STP-EXIT.
           EXIT.

       SCR-EXIT SECTION.
       INI-SCR-EXIT.
           MOVE 'P'      TO SCR-ICMN.
           MOVE SCR-NTRN TO SYS-NTRN.
           MOVE SCR-VARI TO SYS-CMMA.
           MOVE SCR-TCMA TO SYS-TCMA.
           MOVE SYS-RTRN TO SYS-CMND.
      *PTC-INI
           IF NOT SCR-OFRM-SRV
      *PTC-FIN
           PERFORM GNS-PRO-SYS.
       FIN-SCR-EXIT.
           EXIT.

       SCR-PUTA SECTION.
       INI-SCR-PUTA.
      *PTC-INI
           IF FRM-SUAR EQUAL FRM-SUAR-MAL OR FRM-SUAR-CLR
               MOVE 'S' TO SCR-IERR.
      *PTC-FIN
           MOVE SCR-NMAP TO FRM-NAME.
           MOVE SCR-NLIB TO FRM-NLIB.
           MOVE DLO-FLD TO FRM-DFLD.
           MOVE FRM-PUT-ALL TO FRM-CMND.
           PERFORM GNS-PRO-FRM.
       FIN-SCR-PUTA.
           EXIT.

       SCR-MSSG SECTION.
       INI-SCR-MSSG.
           IF FRM-MEN1 NOT > SPACES
               MOVE SPACES TO FRM-MEN1.
           IF FRM-MEN2 NOT > SPACES
               MOVE SPACES TO FRM-MEN2.
           MOVE FRM-MENS TO DLO-GLS-MENS.
       FIN-SCR-MSSG.
           EXIT.

       SCR-GFLD SECTION.
       INI-SCR-GFLD.
           MOVE SCR-NMAP TO FRM-NAME.
           MOVE SCR-NLIB TO FRM-NLIB.
           MOVE FRM-GET-ALL TO FRM-CMND.
           PERFORM GNS-PRO-FRM.
           MOVE SPACES TO FRM-MENS.
           IF NOT ( FRM-FFLD = FRM-FFLD-RET  OR FRM-FFLD-PF10 OR
                               FRM-FFLD-PF12 OR FRM-FFLD-PF3 )
               MOVE 'PFSINV    ' TO MSG-COD-MENS
               MOVE 'GNS' TO MSG-COD-SIST
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS
               PERFORM FST-FLD-DLO
               PERFORM SCR-MSSG
               PERFORM SCR-PUTA
               PERFORM SCR-EXIT.
           MOVE FRM-DFLD TO DLO-FLD.
           IF FRM-STAT-ABT
               GO TO FIN-SCR-GFLD.
           MOVE FRM-SUAR-OKS TO FRM-SUAR.
           PERFORM VAL-NUM-KEY-DLO.
           IF FRM-SUAR EQUAL FRM-SUAR-MAL OR FRM-SUAR-CLR
      *PTC-INI
               MOVE 'S' TO SCR-IERR
      *PTC-FIN
               PERFORM SCR-MSSG
               PERFORM EDT-KEY-DLO
               PERFORM SCR-PUTA
               PERFORM SCR-EXIT.
           PERFORM VAL-NUM-FLD-DLO.
           IF FRM-SUAR EQUAL FRM-SUAR-MAL OR FRM-SUAR-CLR
      *PTC-INI
               MOVE 'S' TO SCR-IERR
      *PTC-FIN
               PERFORM SCR-MSSG
               PERFORM EDT-KEY-DLO
               PERFORM EDT-FLD-DLO
               PERFORM SCR-PUTA
               PERFORM SCR-EXIT.
           PERFORM VAL-MKY-DLO.
           IF FRM-SUAR EQUAL FRM-SUAR-MAL OR FRM-SUAR-CLR
      *PTC-INI
               MOVE 'S' TO SCR-IERR
      *PTC-FIN
               GO TO ERR-SCR-GFLD.
           PERFORM VAL-FLD-DLO.
           IF FRM-SUAR EQUAL FRM-SUAR-MAL OR FRM-SUAR-CLR
               GO TO ERR-SCR-GFLD.
           PERFORM VAL-CON-FLD-DLO.
           IF NOT ( FRM-SUAR EQUAL FRM-SUAR-MAL OR FRM-SUAR-CLR )
               GO TO FIN-SCR-GFLD.
           IF FRM-UCUR NOT > SPACES
               PERFORM FST-FLD-DLO.
       ERR-SCR-GFLD.
      *PTC-INI
           MOVE 'S' TO SCR-IERR.
      *PTC-FIN
           PERFORM SCR-MSSG.
           PERFORM EDT-KEY-DLO.
           PERFORM EDT-FLD-DLO.
           PERFORM SCR-PUTA.
           PERFORM SCR-EXIT.
       FIN-SCR-GFLD.
           MOVE SCR-STAT-MOD TO SCR-STAT.

       GET-ACC SECTION.
       INI-GET-ACC.
           MOVE SCR-NMAP TO FRM-NAME.
           MOVE SCR-NLIB TO FRM-NLIB.
           MOVE FRM-GET-ALL TO FRM-CMND.
           PERFORM GNS-PRO-FRM.
           IF NOT ( FRM-FFLD = FRM-FFLD-RET  OR FRM-FFLD-PF10 OR
                               FRM-FFLD-PF12 OR FRM-FFLD-PF3 )
               MOVE 'PFSINV    ' TO MSG-COD-MENS
               MOVE 'GNS' TO MSG-COD-SIST
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO DLO-GLS-MEN2
               MOVE SCR-PRMT     TO DLO-GLS-MEN1
               PERFORM FST-MSG
               PERFORM SCR-PUTA
               PERFORM SCR-EXIT.
           MOVE FRM-DFLD TO DLO-FLD.
           IF NOT ( ( FRM-FFLD = FRM-FFLD-PF12 OR FRM-FFLD-PF3 ) OR
                      SCR-CONF > SPACES )
               PERFORM VAL-NUM-KEY-DLO
               PERFORM VAL-NUM-FLD-DLO.
       FIN-GET-ACC.
           MOVE SCR-STAT-SON TO SCR-STAT.

       GET-CON SECTION.
       INI-GET-CON.
           MOVE SCR-NMAP TO FRM-NAME.
           MOVE SCR-NLIB TO FRM-NLIB.
           MOVE FRM-GET-ALL TO FRM-CMND.
           PERFORM GNS-PRO-FRM.
           IF NOT ( FRM-FFLD = FRM-FFLD-RET  OR FRM-FFLD-PF10 OR
                               FRM-FFLD-PF12 OR FRM-FFLD-PF3 )
               MOVE 'PFSINV    ' TO MSG-COD-MENS
               MOVE 'GNS' TO MSG-COD-SIST
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO DLO-GLS-MEN2
               MOVE SCR-PRMT     TO DLO-GLS-MEN1
               PERFORM FST-MSG
               PERFORM SCR-PUTA
               PERFORM SCR-EXIT.
           MOVE FRM-DFLD TO DLO-FLD.
       FIN-GET-CON.
           MOVE SCR-STAT-CON TO SCR-STAT.

       CLR-MSG SECTION.
       INI-CLR-MSG.
           MOVE SPACES TO DLO-GLS-MENS.
       FIN-CLR-MSG.
           EXIT.

       HBL-IKY SECTION.
       INI-HBL-IKY.
      *PTC-INI
           IF NOT SCR-OFRM-SRV
      *PTC-FIN
           IF SCR-DESDE-CMN
               MOVE DLO-GLS-MENS TO FRM-MENS
               MOVE LOW-VALUES TO DLO-FLD
      * FLB  7-NOV-1994
               PERFORM CLR-KEY-DLO

               IF FRM-MENS < SPACES
                   MOVE LOW-VALUES TO DLO-GLS-MENS
               ELSE
                   MOVE FRM-MENS TO DLO-GLS-MENS.
           PERFORM PRO-FLD-DLO.
           PERFORM PRO-MKY-DLO.
           PERFORM UNP-IKY-DLO.
           PERFORM FST-KEY-DLO.
      *<<<<
           IF SCR-CMND  = 'ING'
              MOVE FRM-CPIM-AEY TO LDC-NUM-ILDC-ATR IN DLO-FLD.
      *>>>>
       FIN-HBL-IKY.
           EXIT.

       HBL-KEY SECTION.
       INI-HBL-KEY.
      *PTC-INI
           IF NOT SCR-OFRM-SRV
      *PTC-FIN
           IF SCR-DESDE-CMN
               MOVE DLO-GLS-MENS TO FRM-MENS
               MOVE LOW-VALUES TO DLO-FLD
               IF FRM-MENS < SPACES
                   MOVE LOW-VALUES TO DLO-GLS-MENS
               ELSE
                   MOVE FRM-MENS TO DLO-GLS-MENS.
           MOVE FRM-CPSF-AEY TO FRM-CPIM-AEY.
           PERFORM PRO-FLD-DLO.
           MOVE '1' TO FRM-CPIM-AEY.
           PERFORM UNP-KEY-DLO.
           PERFORM FST-KEY-DLO.
      *<<<<
           IF SCR-CMND  = 'ING'
              MOVE FRM-CPIM-AEY TO LDC-NUM-ILDC-ATR IN DLO-FLD.
      *>>>>
       FIN-HBL-KEY.
           EXIT.

       HBL-FLD SECTION.
       INI-HBL-FLD.
           PERFORM UNP-MKY-DLO.
           PERFORM UNP-FLD-DLO.
           PERFORM FST-FLD-DLO.
      *<<<<
           MOVE FRM-CPIM-AEY TO LCC-VAL-MADJ-ATR IN DLO-FLD.
           IF SCR-CMND  = 'ING'
              MOVE 'I' TO LDC-MSC-STAT IN DLO-FLD
              MOVE FRM-CPIM-AEY TO LDC-MSC-STAT-ATR IN DLO-FLD.

           IF SCR-CMND  = 'MOD'
              MOVE FRM-CPIM-AEY TO LDC-MSC-STAT-ATR IN DLO-FLD
              MOVE FRM-CPIM-AEY TO LDC-NUM-ILDC-ATR IN DLO-FLD.


           MOVE FRM-CPIM-AEY TO LCC-VAL-MUTI-ATR IN DLO-FLD.

           IF SCR-CMND  = 'ACU'
              PERFORM PRO-FLD-DLO
              MOVE FRM-CPIM-UBY TO LCC-VAL-MUTI-ATR IN DLO-FLD
              MOVE 0            TO LDC-COD-TIPO-LEN IN DLO-FLD
              MOVE -1           TO LCC-VAL-MUTI-LEN IN DLO-FLD.

           IF SCR-CMND  = 'REC'
              PERFORM PRO-FLD-DLO
              MOVE FRM-CPIM-UBY TO LDC-MSC-STAT-ATR IN DLO-FLD
              MOVE 0            TO LDC-COD-TIPO-LEN IN DLO-FLD
              MOVE -1           TO LDC-MSC-STAT-LEN IN DLO-FLD.

           IF SCR-CMND  = 'MCA'
              PERFORM PRO-FLD-DLO
              MOVE FRM-CPIM-UBY TO LDC-VAL-CMAX-ATR IN DLO-FLD
              MOVE 0            TO LDC-COD-TIPO-LEN IN DLO-FLD
              MOVE -1           TO LDC-VAL-CMAX-LEN IN DLO-FLD.

           IF SCR-CMND  = 'MLI'
              PERFORM PRO-FLD-DLO
              MOVE FRM-CPIM-UBY TO LCC-VAL-MADJ-ATR IN DLO-FLD
              MOVE 0            TO LDC-COD-TIPO-LEN IN DLO-FLD
              MOVE -1           TO LCC-VAL-MADJ-LEN IN DLO-FLD.

           IF SCR-CMND  = 'ACA'
              PERFORM PRO-FLD-DLO.
      *>>>>
       FIN-HBL-FLD.
           EXIT.

       FST-MSG SECTION.
       INI-FST-MSG.
           MOVE -1 TO DLO-GLS-MENS-LEN.
       FIN-FST-MSG.
           EXIT.

       PRO-ALL SECTION.
       INI-PRO-ALL.
           PERFORM PRO-KEY-DLO.
           PERFORM PRO-FLD-DLO.
           PERFORM FST-MSG.
       FIN-PRO-ALL.
           EXIT.

       SCR-TRL SECTION.
       INI-SCR-TRL.
      * PTC-INI
           IF SCR-STAT NOT = SCR-STPP
               MOVE FRM-SUAR-MAL TO FRM-SUAR.
      * PTC-FIN
           IF FRM-MEN1 NOT > SPACES
               MOVE SCR-PRMT TO FRM-MEN1.
           IF SCR-STAT = SCR-STAT-MOD
               PERFORM HBL-FLD
               PERFORM SCR-MSSG
               PERFORM EDT-KEY-DLO
               PERFORM EDT-FLD-DLO
               PERFORM SCR-PUTA
               MOVE SCR-INST-GFL TO SCR-INST
               PERFORM SCR-EXIT.
           IF SCR-STAT = SCR-STAT-SON
               PERFORM PRO-ALL
               PERFORM SCR-MSSG
               PERFORM EDT-KEY-DLO
               PERFORM EDT-FLD-DLO
               PERFORM SCR-PUTA
               MOVE SCR-INST-GCS TO SCR-INST
               PERFORM SCR-EXIT.
      *ASUME SCR-STAT-CON.
           MOVE SCR-STAT-CON TO SCR-STAT.
      *    MOVE FRM-CPSF-AEY TO FRM-CPIM-AEY.
           PERFORM PRO-ALL.
           PERFORM SCR-MSSG.
           PERFORM EDT-KEY-DLO.
           PERFORM EDT-FLD-DLO.
           PERFORM SCR-PUTA.
           MOVE SCR-INST-GAB TO SCR-INST.
           PERFORM SCR-EXIT.
       FIN-SCR-TRL.
           EXIT.

       DESSCRTRL SECTION.
       INI-DESSCRTRL.
           IF SCR-INST = SCR-INST-GCF
                  PERFORM SCR-GCNF
                  GO TO FIN-DESSCRTRL.
           MOVE SCR-VFLD-NOT TO SCR-VFLD.
           MOVE FRM-FFLD TO SCR-FFLD.
           IF SCR-STAT = SCR-STAT-ABT OR SCR-STAT-CON
                  GO TO FIN-DESSCRTRL.
           IF SCR-FFLD-RET OR SCR-FFLD-PF10
                  MOVE SCR-VFLD-YES TO SCR-VFLD
                  PERFORM PRO-CONF.
       FIN-DESSCRTRL.
           IF SCR-FFLD-PF10 OR SCR-FFLD-PF3
                 MOVE SCR-INST-HCM TO SCR-INST
           ELSE
                 MOVE SCR-INST-HKY TO SCR-INST.
       EXT-DESSCRTRL.
           EXIT.

       PRO-CONF SECTION.
       INI-PRO-CONF.
      *PTC-INI
           IF SCR-OFRM-SRV AND
              SCR-CONF NOT > SPACES
                MOVE SPACES TO FRM-MENS.
      *PTC-FIN
           IF FRM-MENS NOT > SPACES
               IF SCR-CONF NOT > SPACES
                   GO TO FIN-PRO-CONF
               ELSE
                   MOVE SCR-CONF TO FRM-MENS
           ELSE
               IF FRM-MEN1 NOT > SPACES
                   MOVE SCR-CONF TO FRM-MEN1.
           PERFORM PRO-KEY-DLO.
           PERFORM PRO-FLD-DLO.
           PERFORM FST-MSG.
           PERFORM SCR-MSSG.
           IF SCR-STAT = SCR-STAT-MOD
               PERFORM EDT-KEY-DLO
               PERFORM EDT-FLD-DLO.
           PERFORM SCR-PUTA.
           MOVE SCR-INST-GCF TO SCR-INST.
           PERFORM SCR-EXIT.
       FIN-PRO-CONF.
           EXIT.

       SCR-GCNF SECTION.
       INI-SCR-GCNF.
           MOVE SCR-NMAP TO FRM-NAME.
           MOVE SCR-NLIB TO FRM-NLIB.
           MOVE FRM-GET-ALL TO FRM-CMND.
           PERFORM GNS-PRO-FRM.
           IF NOT ( FRM-FFLD = FRM-FFLD-RET  OR FRM-FFLD-PF10 OR
                               FRM-FFLD-PF12 OR FRM-FFLD-PF3  OR
                               FRM-FFLD-PF4 )
               MOVE 'PFSINV    ' TO MSG-COD-MENS
               MOVE 'GNS' TO MSG-COD-SIST
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO DLO-GLS-MEN2
               MOVE SCR-CONF     TO DLO-GLS-MEN1
               PERFORM FST-MSG
               PERFORM SCR-PUTA
               PERFORM SCR-EXIT.
           MOVE FRM-DFLD TO DLO-FLD.
           MOVE FRM-FFLD TO SCR-FFLD.
           IF FRM-FFLD = FRM-FFLD-PF3
               MOVE SCR-VFLD-NOT TO SCR-VFLD
           ELSE
           IF FRM-FFLD = FRM-FFLD-RET OR FRM-FFLD-PF10 OR FRM-FFLD-PF4
               MOVE SCR-VFLD-YES TO SCR-VFLD
               PERFORM VAL-NUM-KEY-DLO
               PERFORM VAL-NUM-FLD-DLO
           ELSE
           IF FRM-FFLD = FRM-FFLD-PF12
               MOVE SCR-STPP TO SCR-STAT
               IF SCR-STAT = SCR-STAT-MOD
                   PERFORM VAL-NUM-KEY-DLO
                   PERFORM VAL-NUM-FLD-DLO
                   PERFORM SCR-TRL
               ELSE
                   MOVE SCR-VFLD-NOT TO SCR-VFLD.
       FIN-SCR-GCNF.
           EXIT.

      * PGM-EBR-ALL SECTION.
      * INI-PGM-EBR-ALL.
      *     MOVE 'GNS' TO FIO-SIST.
      *     MOVE FIO-EBR-ALL TO FIO-CMND.
      *     PERFORM GNS-FIO-TAB.
      * FIN-PGM-EBR-ALL.
      *     EXIT.

       RET-STT-LDC SECTION.
       INI-RET-STT-LDC.
           IF SCR-CCPP = 'ING'
               MOVE 'I' TO LDC-MSC-TACC IN LDC
               MOVE 'I' TO LDC-MSC-STAT IN LDC
           ELSE
           IF SCR-CCPP = 'MOD'
               MOVE 'M' TO LDC-MSC-TACC IN LDC
               MOVE 'M' TO LDC-MSC-STAT IN LDC.
       FIN-RET-STT-LDC.
           EXIT.

       RET-HDR-LDC SECTION.
       INI-RET-HDR-LDC.
           PERFORM GET-FHOY.
      *    Fecha Transaccion
           MOVE HOY-FHOY TO LDC-FEC-FTRN IN LDC.
      *    Hora Transaccion
           MOVE HOY-HHOY TO LDC-HRA-HRTR IN LDC.
      *    Codigo Origen transaccion
      *<<<< NOT PGM_VMS
           MOVE SCR-OTRN TO LDC-COD-OTRN IN LDC.
      *    Autor Transaccion
           MOVE SCR-USER TO LDC-COD-ATRN IN LDC.
      *>>>>
       FIN-RET-HDR-LDC.
           EXIT.

       COPY LDCBUDLO.
       COPY GNSBVNUM.
       COPY LDCBFLDC.
       COPY GNSBFMSG.
       COPY GNSBGSYS.
       COPY GNSBGDTC.
      *PTC-INI
      *PTC-SUB
      * ISP  10-MAY-2001 13:46:35 
      * COPY GNSBGFRM.
       COPY GNSBG3CF.
      *PTC-FIN
       COPY GNSBGMSG.
       COPY GNSBEKEY.
       COPY GNSBIABT.
       COPY GNSBBTAB.
       COPY GNSBVCOD.
       COPY GNSBVTAB.
       COPY GNSBFTAB.
       COPY GNSBBMSC.
       COPY GNSBVIND.
       COPY GNSBVMSC.
       COPY GNSBFMSC.
       COPY GNSBVIDC.
       COPY GNSBPVRF.
       COPY GNSBEGLS.
       COPY GNSBGFEC.
       COPY GNSBGHOY.
      *PTC-INI
       COPY GNSBGQUE.
       COPY GNSBGTSK.
      *PTC-FIN

      *>>>>
      *AFRI-INI/AGO2008 (MAE)
       PUT-LCC SECTION.
       INI-PUT-LCC.
           MOVE LDC-IIC-ICLF IN DLO-FLD  TO LCC-IIC-ICLF IN LCC.
           MOVE LDC-CAI-ICLF IN DLO-FLD  TO LCC-CAI-ICLF IN LCC.
           MOVE LDC-NUM-ILDC IN DLO-FLD  TO LCC-NUM-ILCC IN LCC.
           MOVE 'L0'                     TO LCC-GLS-ILCC IN PRY-VARI.
           MOVE LDC-NUM-ILDC IN DLO-FLD  TO LCC-NUM-ILCC IN PRY-VARI.
           MOVE LCC-CAI-ILCC IN PRY-VARI TO LCC-CAI-ILIC IN LCC.
           MOVE LDC-IIC-ICLF IN DLO-FLD  TO LCC-IIC-ILIC IN LCC.
           MOVE LCC-VAL-MADJ IN DLO-FLD  TO LCC-VAL-MADJ IN LCC.
           MOVE LCC-VAL-MTOS IN DLO-FLD  TO LCC-VAL-MTOS IN LCC.
           IF (LCC-VAL-MTOS IN DLO-FLD NOT > ZEROES)
                MOVE ZEROES TO LCC-VAL-MTOS IN LCC
                MOVE ZEROES TO LCC-VAL-MADJ IN LCC.
           MOVE LDC-STP-ITRN IN LDC TO LCC-STP-ITRN IN LCC.
           MOVE SPACES              TO LCC-MSC-TACC IN LCC.
           MOVE SPACES              TO LCC-MSC-STAT IN LCC.
           MOVE LDC-COD-OTRN IN LDC TO LCC-COD-OTRN IN LCC.
           MOVE LDC-COD-ATRN IN LDC TO LCC-COD-ATRN IN LCC.
           MOVE SPACES              TO LCC-COD-CRIE IN LCC.
           MOVE ZEROES              TO LCC-FEC-FREN IN LCC.
           MOVE ZEROES              TO LCC-FEC-FRNC IN LCC.
           MOVE ZEROES              TO LCC-VAL-PREN IN LCC.
           MOVE ZEROES              TO LCC-VAL-UTIL IN LCC.
           MOVE ZEROES              TO LCC-SGV-CORI IN LCC.
           MOVE ZEROES              TO LCC-SGV-CBCO IN LCC.
           MOVE ZEROES              TO LCC-VAL-MNTO IN LCC.
           MOVE ZEROES              TO LCC-VAL-EXPE IN LCC.
           MOVE ZEROES              TO LCC-VAL-RENU IN LCC.
           MOVE ZEROES              TO LCC-VAL-MSEC IN LCC.
           MOVE ZEROES              TO LCC-VAL-MTO1 IN LCC.
           MOVE ZEROES              TO LCC-VAL-MTO2 IN LCC.
           MOVE ZEROES              TO LCC-NUM-PCAP IN LCC.
           MOVE SPACES              TO LCC-IND-PCAP IN LCC.
           MOVE ZEROES              TO LCC-NUM-PPIN IN LCC.
           MOVE SPACES              TO LCC-IND-PPIN IN LCC.
           MOVE ZEROES              TO LCC-NUM-PUGI IN LCC.
           MOVE SPACES              TO LCC-IND-PUGI IN LCC.
           MOVE ZEROES              TO LCC-NUM-PPGI IN LCC.
           MOVE SPACES              TO LCC-IND-PPGI IN LCC.
           MOVE ZEROES              TO LCC-NUM-PPUG IN LCC.
           MOVE SPACES              TO LCC-IND-PPUG IN LCC.
           MOVE ZEROES              TO LCC-NUM-PPCR IN LCC.
           MOVE SPACES              TO LCC-IND-PPCR IN LCC.
           MOVE LDC-COD-VCLC IN LDC TO LCC-COD-VCOC IN LCC.
      *AFRI-INI/CHC/MAY-2009/CANAL DE VENTAS
           MOVE ZEROES              TO LCC-FEC-FACT IN LCC.
           MOVE ZEROES              TO LCC-FEC-FACV IN LCC.
           MOVE ZEROES              TO LCC-FEC-FDES IN LCC.
           MOVE ZEROES              TO LCC-FEC-FREC IN LCC.
           MOVE ZEROES              TO LCC-FEC-FCTB IN LCC.
           MOVE ZEROES              TO LCC-VAL-MIVE IN LCC.
           MOVE ZEROES              TO LCC-VAL-MFVE IN LCC.
           MOVE SPACES              TO LCC-COD-MVEN IN LCC.
      *AFRI-FIN/CHC/MAY-2009/CANAL DE VENTAS
           MOVE SPACES              TO LCC-GLS-DISP IN LCC.

           MOVE FIO-PUT TO FIO-CMND.
           PERFORM LDC-FIO-LCC.

       FIN-PUT-LCC.
           EXIT.

       PUT-ICG SECTION.
       INI-PUT-ICG.
           MOVE LDC-CAI-ICLF IN LDC TO ICG-CAI-ICLF IN ICG.
           MOVE LDC-IIC-ICLF IN LDC TO ICG-IIC-ICLF IN ICG.
           MOVE LDC-NUM-ILDC IN LDC TO ICG-NUM-ILDC IN ICG.
           MOVE SPACES              TO ICG-IND-TTAS IN ICG.
           MOVE ZEROES              TO ICG-FEC-FINI IN ICG.
           MOVE ZEROES              TO ICG-SGV-SPRD IN ICG.
           MOVE LDC-STP-ITRN IN LDC TO ICG-STP-ITRN IN ICG.
           MOVE SPACES              TO ICG-MSC-TACC IN ICG.
           MOVE SPACES              TO ICG-MSC-STAT IN ICG.
           MOVE LDC-COD-OTRN IN LDC TO ICG-COD-OTRN IN ICG.
           MOVE LDC-COD-ATRN IN LDC TO ICG-COD-ATRN IN ICG.
           MOVE ZEROES              TO ICG-FEC-FTER IN ICG.
           MOVE ZEROES              TO ICG-SGV-MNTO IN ICG.
           MOVE SPACES              TO ICG-GLS-DISP IN ICG.
           IF(ICG-COD-CVTI IN ICG > SPACES)
              MOVE ICG-SGV-TINT IN DLO-FLD TO ICG-SGV-SPRD IN ICG
              MOVE ZEROES                  TO ICG-SGV-TINT IN ICG.

           MOVE FIO-PUT TO FIO-CMND.
           PERFORM LDC-FIO-ICG.

       FIN-PUT-ICG.
           EXIT.


      *AFRI-FIN/AGO2008 (MAE)
       COPY LDCBGPRY.
       COPY GNSBGPES.

      * EVA-INI  NOV-2008    CONTABILIDAD INMOBILIARIA
       COPY LDCBFLMO.

       INI-LMO SECTION.
       INI-INI-LMO.
           MOVE SPACES TO LMO-GLS-FLAG IN LMO.
           MOVE SPACES TO LMO-FEC-FMOV IN LMO.
           MOVE SPACES TO LMO-HRA-HMOV IN LMO.
           MOVE SPACES TO LMO-CAI-ICLF IN LMO.
           MOVE SPACES TO LMO-IIC-ICLF IN LMO.
           MOVE ZEROES TO LMO-NUM-ILDC IN LMO.
           MOVE ZEROES TO LMO-STP-ITRN IN LMO.
           MOVE SPACES TO LMO-MSC-TACC IN LMO.
           MOVE SPACES TO LMO-MSC-STAT IN LMO.
           MOVE SPACES TO LMO-COD-OTRN IN LMO.
           MOVE SPACES TO LMO-COD-TIPO IN LMO.
           MOVE SPACES TO LMO-COD-VCLC IN LMO.
           MOVE ZEROES TO LMO-VAL-MORI IN LMO.
           MOVE ZEROES TO LMO-VAL-MPES IN LMO.
           MOVE SPACES TO LMO-CAI-IOPC IN LMO.
           MOVE SPACES TO LMO-IIC-IOPC IN LMO.
           MOVE SPACES TO LMO-COD-CLVA IN LMO.
           MOVE SPACES TO LMO-GLS-CMPA IN LMO.
           MOVE ZEROES TO LMO-SGV-CMPA IN LMO.
           MOVE SPACES TO LMO-COD-NCLV IN LMO.
           MOVE SPACES TO LMO-GLS-NCMP IN LMO.
           MOVE ZEROES TO LMO-SGV-NCMP IN LMO.
           MOVE SPACES TO LMO-COD-OFMV IN LMO.
           MOVE ZEROES TO LMO-FEC-FING IN LMO.
           MOVE SPACES TO LMO-GLS-DISP IN LMO.

           PERFORM GET-FHOY.
           MOVE HOY-FHOY                 TO LMO-FEC-FMOV IN LMO.
           MOVE HOY-HHOY                 TO LMO-HRA-HMOV IN LMO.
           MOVE HOY-FHOY                 TO LMO-FEC-FING IN LMO.
           MOVE WSS-CAI-ICLF IN WSS-VARI TO LMO-CAI-ICLF IN LMO.
           MOVE WSS-IIC-ICLF IN WSS-VARI TO LMO-IIC-ICLF IN LMO.
           MOVE WSS-NUM-ILDC IN WSS-VARI TO LMO-NUM-ILDC IN LMO.
           MOVE HOY-FHOY                 TO LMO-FEC-FTRN IN LMO.
           MOVE HOY-HHOY                 TO LMO-HRA-HRTR IN LMO.
           MOVE 'LDCPUDLO'               TO LMO-COD-ATRN IN LMO.
           MOVE SCR-USER                 TO LMO-CIC-UING IN LMO.
           MOVE SCR-OTRN                 TO LMO-COD-OTRN IN LMO.
           MOVE WSS-COD-OFIC IN WSS-VARI TO LMO-COD-OFMV IN LMO.
           MOVE WSS-COD-TIPO IN WSS-VARI TO LMO-COD-TIPO IN LMO.
           MOVE WSS-COD-VCLC IN WSS-VARI TO LMO-COD-VCLC IN LMO.
           MOVE WSS-COD-TOOC IN WSS-VARI TO LMO-COD-TOOC IN LMO.
           MOVE WSS-COD-AOOC IN WSS-VARI TO LMO-COD-AOOC IN LMO.

           IF SCR-CMND = 'REC'

      * Mto Origen =  Mto Aprobado - Mto Acumulado
              COMPUTE WSS-VAL-MORI = WSS-FLD-VAL-CMAX IN WSS-VARI -
                                     WSS-FLD-VAL-MUTI IN WSS-VARI
              MOVE WSS-VAL-MORI IN WSS-VARI TO LMO-VAL-MORI IN LMO
              MOVE WSS-VAL-MTO2 IN WSS-VARI TO LMO-VAL-MPES IN LMO
              MOVE 1                        TO LMO-NUM-IMOV IN LMO
              MOVE 'LER'                    TO LMO-COD-ECTB IN LMO.

      * Graba segundo evento AMA - Mto Aprobado anterior campo CMPA
           IF SCR-CMND = 'MCA' AND WSS-IND-CMCA IN WSS-VARI = 'S'
                MOVE 2                      TO LMO-NUM-IMOV IN LMO

      * Mueve Mto Aprobado a Mto Origen
                MOVE WSS-FLD-VAL-CMAX IN WSS-VARI TO
                     LMO-VAL-MORI IN LMO

      * Mueve Mto Aprobado anterior a Monto LMO anterior
                MOVE WSS-LDC-VAL-CMAX IN WSS-VARI TO
                     LMO-SGV-CMPA IN LMO

                MOVE ZEROES                   TO LMO-SGV-NCMP IN LMO

      * Mto pesos = Mto Aprobado - Mto Acumulado
                COMPUTE WSS-VAL-MPES = WSS-FLD-MAX-PESO IN WSS-VARI -
                                       WSS-VAL-MUTI IN WSS-VARI
                MOVE WSS-VAL-MPES IN WSS-VARI TO
                     LMO-VAL-MPES IN LMO

                MOVE 'AMA'  TO LMO-COD-ECTB IN LMO
                MOVE SPACES TO WSS-IND-CMCA IN WSS-VARI.



      * Graba primer evento AMA - Nuevo Mto Aprobado campo NCMP
           IF SCR-CMND = 'MCA' AND WSS-IND-CMCA IN WSS-VARI = 'N'
                MOVE 1                        TO LMO-NUM-IMOV IN LMO

      * Mueve Mto Aprobado Pantalla a Mto Origen
                MOVE WSS-FLD-VAL-CMAX IN WSS-VARI TO
                     LMO-VAL-MORI IN LMO

                MOVE ZEROES                   TO LMO-SGV-CMPA IN LMO

      * Mueve Mto Aprobado Pantalla a Nuevo Monto LMO
                MOVE WSS-FLD-VAL-CMAX IN WSS-VARI TO
                     LMO-SGV-NCMP IN LMO

                MOVE WSS-LCC-VAL-MTO2 IN WSS-VARI TO
                     LMO-VAL-MPES IN LMO
                MOVE 'AMA'  TO LMO-COD-ECTB IN LMO
                MOVE 'S'    TO WSS-IND-CMCA IN WSS-VARI.



           IF SCR-CMND = 'ACA' AND WSS-IND-EDES IN WSS-VARI = 'S'
                MOVE 2                       TO LMO-NUM-IMOV IN LMO
                MOVE WSS-FLD-VAL-CMAX IN WSS-VARI TO
                   LMO-VAL-MORI IN LMO

               MOVE WSS-VAL-MTO2 IN WSS-VARI TO LMO-VAL-MPES IN LMO
               MOVE 'ILN'  TO LMO-COD-ECTB IN LMO.

           IF HOY-HHOY > 075959 AND HOY-HHOY < 140000
               MOVE 'M'                   TO LMO-IND-MODO IN LMO
           ELSE
               MOVE 'T'                   TO LMO-IND-MODO IN LMO.

           MOVE FIO-PUT TO FIO-CMND.
           PERFORM LDC-FIO-LMO.
           IF NOT FIO-STAT-OKS
              GO TO FIN-INI-LMO.

      * Valida la existencia del primer movimiento AMA
      * Indicador en 'S' graba segundo movimiento

           IF WSS-IND-CMCA IN WSS-VARI = 'S'
              GO TO INI-INI-LMO.

           MOVE WSS-CAI-ICLF IN WSS-VARI TO LCC-CAI-ICLF IN LCC.
           MOVE WSS-IIC-ICLF IN WSS-VARI TO LCC-IIC-ICLF IN LCC.
           MOVE WSS-NUM-ILDC IN WSS-VARI TO LCC-NUM-ILCC IN LCC.
           MOVE FIO-GET-KEY-UPD TO FIO-CMND.
           PERFORM LDC-FIO-LCC.
           IF NOT FIO-STAT-OKS
               MOVE FIO-MENS TO FRM-MENS
               GO TO FIN-INI-LMO.

           IF SCR-CMND = 'ACA' AND
              WSS-IND-EDES IN WSS-VARI = 'S'
                 MOVE HOY-SHOY TO LCC-NUM-SDES IN LCC
                 MOVE HOY-AHOY TO LCC-NUM-ADES IN LCC
                 MOVE HOY-MHOY TO LCC-NUM-MDES IN LCC
                 MOVE HOY-DHOY TO LCC-NUM-DDES IN LCC
                 MOVE HOY-SHOY TO LCC-NUM-SCTB IN LCC
                 MOVE HOY-AHOY TO LCC-NUM-ACTB IN LCC
                 MOVE HOY-MHOY TO LCC-NUM-MCTB IN LCC
                 MOVE HOY-DHOY TO LCC-NUM-DCTB IN LCC
           ELSE
           IF SCR-CMND = 'ACA'
                 MOVE HOY-SHOY TO LCC-NUM-SACV IN LCC
                 MOVE HOY-AHOY TO LCC-NUM-AACV IN LCC
                 MOVE HOY-MHOY TO LCC-NUM-MACV IN LCC
                 MOVE HOY-DHOY TO LCC-NUM-DACV IN LCC
           ELSE
           IF SCR-CMND = 'REC'
                 MOVE HOY-SHOY TO LCC-NUM-SREC IN LCC
                 MOVE HOY-AHOY TO LCC-NUM-AREC IN LCC
                 MOVE HOY-MHOY TO LCC-NUM-MREC IN LCC
                 MOVE HOY-DHOY TO LCC-NUM-DREC IN LCC
                 MOVE LCC-VAL-MUTI IN LCC TO LCC-VAL-MUTI IN DLO-FLD
                 MOVE LCC-VAL-MADJ IN LCC TO LCC-VAL-MADJ IN DLO-FLD
                 MOVE LCC-VAL-MTO2 IN LCC TO
                      LCC-VAL-MTO1 IN LCC
                 MOVE ZEROES              TO
                      LCC-VAL-MTO2 IN LCC
           ELSE
           IF SCR-CMND = 'MCA'
                 MOVE HOY-SHOY TO LCC-NUM-SACT IN LCC
                 MOVE HOY-AHOY TO LCC-NUM-AACT IN LCC
                 MOVE HOY-MHOY TO LCC-NUM-MACT IN LCC
                 MOVE HOY-DHOY TO LCC-NUM-DACT IN LCC
                 MOVE LCC-VAL-MTO2 IN LCC TO
                      LCC-VAL-MTO1 IN LCC
                 MOVE WSS-VAL-MTO2 IN WSS-VARI TO
                      LCC-VAL-MTO2 IN LCC
           ELSE
           IF SCR-CMND = 'ACA' AND WSS-IND-EDES IN WSS-VARI = 'S'
                 MOVE WSS-VAL-MTO2 IN WSS-VARI TO
                      LCC-VAL-MTO2 IN LCC.
           MOVE FIO-MOD TO FIO-CMND.
           PERFORM LDC-FIO-LCC.
       FIN-INI-LMO.
           EXIT.

       LEE-CLF SECTION.
       INI-LEE-CLF.

           MOVE SPACES TO WSS-COD-OFIC IN WSS-VARI.
           MOVE SPACES TO WSS-COD-TOOC IN WSS-VARI.
           MOVE SPACES TO WSS-COD-AOOC IN WSS-VARI.

           MOVE LDC-CAI-ICLF IN DLO-FLD TO CLF-CAI-ICLF IN CLF.
           MOVE LDC-IIC-ICLF IN DLO-FLD TO CLF-IIC-ICLF IN CLF.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM LDC-FIO-CLF.
           IF FIO-STAT-OKS
              MOVE CLF-COD-OFIC IN CLF TO WSS-COD-OFIC IN WSS-VARI
              MOVE CLF-COD-TOCF IN CLF TO WSS-COD-TOOC IN WSS-VARI
              MOVE CLF-COD-AOCF IN CLF TO WSS-COD-AOOC IN WSS-VARI.
       FIN-LEE-CLF.
           EXIT.

       LEE-ANT-DLO SECTION.
       INI-LEE-ANT-DLO.

      *    IF LDC-MSC-STAT IN LDC NOT = 'I'
      *       MOVE LDC-CIC-ICLF IN PRY-VARI TO LDC-CIC-ICLF IN LDC
      *       MOVE LDC-NUM-ILDC IN PRY-VARI TO LDC-NUM-ILDC IN LDC
      *       GO TO FIN-LEE-ANT-DLO.

      * Busca la DLO anterior
           COMPUTE WSS-NUM-ILDC = LDC-NUM-ILDC IN DLO-FLD - 1.
           MOVE LDC-CAI-ICLF IN DLO-FLD  TO LDC-CAI-ICLF IN LDC.
           MOVE LDC-IIC-ICLF IN DLO-FLD  TO LDC-IIC-ICLF IN LDC.
           MOVE WSS-NUM-ILDC IN WSS-VARI TO LDC-NUM-ILDC IN LDC.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM LDC-FIO-LDC.
           IF FIO-STAT-OKS AND
              LDC-MSC-STAT IN LDC = 'D'
              MOVE 'S' TO WSS-IND-EDES IN WSS-VARI.

           MOVE LDC-CAI-ICLF IN DLO-FLD  TO LDC-CAI-ICLF IN LDC.
           MOVE LDC-IIC-ICLF IN DLO-FLD  TO LDC-IIC-ICLF IN LDC.
           MOVE LDC-NUM-ILDC IN DLO-FLD  TO LDC-NUM-ILDC IN LDC.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM LDC-FIO-LDC.
           IF FIO-STAT-OKS
              MOVE LDC-CAI-ICLF IN LDC TO WSS-CAI-ICLF IN WSS-VARI
              MOVE LDC-IIC-ICLF IN LDC TO WSS-IIC-ICLF IN WSS-VARI
              MOVE LDC-NUM-ILDC IN LDC TO WSS-NUM-ILDC IN WSS-VARI.
       FIN-LEE-ANT-DLO.
           EXIT.

       VALOR-CAM SECTION.
       INI-VALOR-CAM.
           MOVE SPACES TO WSS-COD-VCAM IN WSS-VARI.
           MOVE SPACES TO WSS-COD-UEFE IN WSS-VARI.
           MOVE SPACES TO MSG-COD-MENS.

           PERFORM GET-FHOY.

           MOVE 'TAB'          TO FIO-SIST.
           MOVE 'VLR'          TO TAB-CIC-TTAB IN TAB.
           MOVE '0999  '       TO TAB-CIC-CTAB IN TAB.
           MOVE 'TAB-CIC-TABL' TO FIO-AKEY.
           MOVE FIO-GET-KEY    TO FIO-CMND.
           PERFORM GNS-FIO-TAB.
           IF NOT FIO-STAT-OKS
               MOVE 'TAB'          TO MSG-COD-SIST
               MOVE 'CIC0999  NEX' TO MSG-COD-MENS
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC  TO FRM-MENS
               MOVE '00'          TO FIO-STAT
               MOVE SCR-STAT-CON  TO SCR-STAT
               GO TO FIN-VALOR-CAM.

           MOVE TAB-COD-CTAB IN TAB TO WSS-COD-VCAM IN WSS-VARI.

           MOVE 'TAB'          TO FIO-SIST.
           MOVE 'VLR'          TO TAB-CIC-TTAB IN TAB.
           MOVE '0998  '       TO TAB-CIC-CTAB IN TAB.
           MOVE 'TAB-CIC-TABL' TO FIO-AKEY.
           MOVE FIO-GET-KEY    TO FIO-CMND.
           PERFORM GNS-FIO-TAB.
           IF NOT FIO-STAT-OKS
               MOVE 'TAB'          TO MSG-COD-SIST
               MOVE 'CIC0998  NEX' TO MSG-COD-MENS
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC  TO FRM-MENS
               MOVE '00'          TO FIO-STAT
               MOVE SCR-STAT-CON  TO SCR-STAT
               GO TO FIN-VALOR-CAM.

           MOVE TAB-COD-CTAB IN TAB TO WSS-COD-UEFE IN WSS-VARI.

           IF WSS-IND-CMAX IN WSS-VARI = 'S'

      * Valor cambio Mto Aprobado

              IF LDC-COD-VCLC IN LDC = WSS-COD-VCAM IN WSS-VARI
                 MOVE 'N' TO WSS-IND-CMAX IN WSS-VARI
                 MOVE WSS-FLD-VAL-CMAX IN WSS-VARI TO
                      WSS-FLD-MAX-PESO IN WSS-VARI
                 GO TO FIN-VALOR-CAM
              ELSE
                 MOVE LDC-COD-VCLC IN LDC TO
                      CAM-COD-VCAM IN CAM(1).

           IF WSS-IND-MUTI IN WSS-VARI = 'S'

      * Valor cambio Mto Acumulado

              IF LCC-COD-VCOC IN LCC = WSS-COD-VCAM IN WSS-VARI
                 MOVE 'N' TO WSS-IND-MUTI IN WSS-VARI
                 GO TO FIN-VALOR-CAM
              ELSE
                 MOVE LCC-COD-VCOC IN LCC TO
                      CAM-COD-VCAM IN CAM(1).

           MOVE WSS-COD-VCAM IN WSS-VARI TO CAM-COD-VCAM IN CAM(2).
           MOVE HOY-SHOY                 TO CAM-NUM-SCAM IN CAM(1).
           MOVE HOY-AHOY                 TO CAM-NUM-ACAM IN CAM(1).
           MOVE HOY-MHOY                 TO CAM-NUM-MCAM IN CAM(1).
           MOVE HOY-DHOY                 TO CAM-NUM-DCAM IN CAM(1).
           MOVE CAM-FEC-FCAM IN CAM(1)   TO CAM-FEC-FCAM IN CAM(2).
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM TAB-FIO-CAM.
           IF (NOT FIO-STAT-OKS OR CAM-IND-VIGE IN CAM NOT = 'S')
               MOVE 'DEU' TO MSG-COD-SIST
               MOVE 'CAM    NEX' TO MSG-COD-MENS
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC  TO FRM-MENS
               MOVE '00'          TO FIO-STAT
               MOVE SCR-STAT-CON  TO SCR-STAT
               GO TO FIN-VALOR-CAM
           ELSE
               MOVE SPACES TO MSG-COD-MENS.


      * Convierte monto aprobado de UF a Pesos

           IF WSS-IND-CMAX IN WSS-VARI = 'S'
               MOVE 'N' TO WSS-IND-CMAX IN WSS-VARI

               COMPUTE WSS-SGV-CMAX IN WSS-VARI ROUNDED =
                       LDC-VAL-CMAX IN LDC * CAM-SGV-VCAM IN CAM
               MOVE WSS-SGV-CMAX IN WSS-VARI TO
                         PES-SGV-DECI IN PES-VARI
               PERFORM PES-SCTV
               MOVE PES-SGV-ENTE IN PES-VARI TO
                         WSS-SGV-CMAX IN WSS-VARI

               COMPUTE WSS-FLD-MAX-PESO IN WSS-VARI ROUNDED =
                       WSS-FLD-VAL-CMAX  * CAM-SGV-VCAM IN CAM
               MOVE WSS-FLD-MAX-PESO IN WSS-VARI TO
                         PES-SGV-DECI IN PES-VARI
               PERFORM PES-SCTV
               MOVE PES-SGV-ENTE IN PES-VARI TO
                         WSS-FLD-MAX-PESO IN WSS-VARI.


      * Convierte monto acumulado de UF a Pesos

           IF WSS-IND-MUTI IN WSS-VARI = 'S'
               MOVE 'N' TO WSS-IND-MUTI IN WSS-VARI

               COMPUTE WSS-VAL-MUTI IN WSS-VARI ROUNDED =
                    LCC-VAL-MUTI IN LCC * CAM-SGV-VCAM IN CAM
               MOVE WSS-VAL-MUTI IN WSS-VARI TO
                         PES-SGV-DECI IN PES-VARI
               PERFORM PES-SCTV
               MOVE PES-SGV-ENTE IN PES-VARI TO
                         WSS-VAL-MUTI IN WSS-VARI.
       FIN-VALOR-CAM.
           EXIT.


      * EVA-FIN  NOV-2008    CONTABILIDAD INMOBILIARIA
      *AFRI-INI/MAYO-2009  CTBL INMOB
       VAL-TAB-CNT SECTION.
       INI-VAL-TAB-CNT.

           MOVE SPACES      TO PRY-COD-MENS IN PRY-VARI.
           MOVE SPACES      TO PRY-IND-ERRO IN PRY-VARI.

      *    BUSCA MARGEN EN LOM
           MOVE LDC-CAI-ICLF IN DLO-FLD TO CLF-CAI-ICLF IN CLF.
           MOVE LDC-IIC-ICLF IN DLO-FLD TO CLF-IIC-ICLF IN CLF.
           MOVE FIO-GET-KEY             TO FIO-CMND.
           PERFORM LDC-FIO-CLF.
           IF (NOT FIO-STAT-OKS)
                MOVE 'LOMNOEXIS' TO PRY-COD-MENS IN PRY-VARI
                MOVE 'S'         TO PRY-IND-ERRO IN PRY-VARI
                GO TO FIN-VAL-TAB-CNT.

      *    VALIDA POR TABLA CLF 'PRY' (DEU-CNT)
           MOVE 'DEU'                 TO FIO-SIST.
           MOVE 'CNT'                 TO TAB-COD-TTAB IN TAB.
           MOVE CLF-COD-TOCF IN CLF   TO TAB-COD-CTAB IN TAB.
           MOVE FIO-GET-KEY     TO FIO-CMND.
           PERFORM GNS-FIO-TAB.
           IF (NOT FIO-STAT-OKS OR TAB-IND-VIGE IN TAB NOT = 'S' )
                MOVE 'TIONOCONST'  TO PRY-COD-MENS IN PRY-VARI
                MOVE 'S'           TO PRY-IND-ERRO IN PRY-VARI
                GO TO FIN-VAL-TAB-CNT.


       FIN-VAL-TAB-CNT.
           EXIT.
      *AFRI-FIN/MAYO-2009  CTBL INMOB
      *>>>>
