       IDENTIFICATION DIVISION.
      *========================
       PROGRAM-ID.   LDCPUCLF.
       AUTHOR.       CONSIST.
       DATE-WRITTEN. 08-May-19 11:45 AM.

      * NOMBRE PROGRAMA                   LDCPUCLF
      * VERSION PGM                       3.1
      * VERSION SKL                       08.07.21
      * OPCION                            UPD
      * ARCHIVO BASE                      LDCCLF
      * PANTALLA                          LDCCLF
      * INP/OUT                           DATACOM
      * TAMANO COMMAREA                   250


       ENVIRONMENT DIVISION.
      *=====================
       CONFIGURATION SECTION.
      *----------------------
       SPECIAL-NAMES.
               DECIMAL-POINT IS COMMA.

       DATA DIVISION.
      *==============

       WORKING-STORAGE SECTION.
      *------------------------
      * COPY GNSWGSCR.
       COPY GNSWGCVT.
       77  WSS-TAG-LDCPUCLF-INI PIC X(125) VALUE                        
           '<IDNPGM NOM=$LDCPUCLF$ SKL=$08.07.21$ VSN=${vsnpu}$        
      -    'GEN=$08-May-19 11:45 AM$ FNC=${fncpu}$/>'.    
       COPY GNSWCSCR.
      *PTC-INI
      *PTC-SUB
      * ISP  10-MAY-2001 13:46:35 
      * COPY GNSWVSCR.
       COPY GNSWV3CR.
      *PTC-FIN
      *<<<< PGM_BMS AND FIN_SCR_VARI
      * ISP: VARIABLES EN CMMA, COMUNES PARA ENGANCHE PROGRAMAS CLF-LDC
       COPY LDCWGENG.
           03 SCR-IND-MCLI  VALUE SPACES          PIC X(01).
           03 SCR-IND-OCIC  VALUE SPACES          PIC X(01).
      *FLB CST  9-JAN-1995 debia ser X(62)
      *    03 SCR-CLF-DISP  VALUE SPACES          PIC X(58).
           03 SCR-COD-STAT  VALUE SPACES          PIC X(01).

      *<<<< NOT PGM_ARG
           03 SCR-CLF-DIS1          VALUE SPACES  PIC X(30).
      *>>>>
           03 SCR-VAL-CMAX  COMP-3  VALUE ZEROES  PIC 9(11).
      *<<<< NOT PGM_ARG
           03 SCR-CLF-DISP  VALUE SPACES          PIC X(20).
      *>>>>
      *>>>>
       COPY LDCWICLF.
       COPY LDCBRCLF.


       COPY GNSWVIDD.
       COPY GNSWGRQA.
       COPY GNSWGUIB.
       COPY GNSWGELS.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-CLF-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-TAB-REQA==.
       COPY GNSBRTAB.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-MSC-REQA==.
       COPY GNSBRMSC.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-MSG-REQA==.
       COPY GNSBRMSG.
       COPY GNSWCFIO.
       COPY GNSWVFIO.
      *PTC-INI
      *PTC-SUB
      * ISP  10-MAY-2001 13:46:35 
      * COPY GNSWGFRM.
       COPY GNSWG3CF.
       COPY GNSWGTSK.
       COPY GNSWGQUE.
      *PTC-FIN
       COPY GNSWVNUM.
       COPY GNSWCNUM.
       COPY GNSWGFEC.
       COPY GNSWGHOY.
       COPY GNSWCVRF.
       COPY GNSWVVRF.
       COPY GNSWGIDC.
       COPY GNSWGSYS.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-OFI-REQA==.
       COPY TABBROFI.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-USR-REQA==.
       COPY TABBRUSR.

      *PTC ini
       COPY GNSWGQUE.
      *PTC fin
      *<<<< WSS
       COPY LDCMXW01.
      *<<<< PGM_PU
      *ISP-ANL-INI 2-MAR-1998 11:21:47
       01 WSS-ERR.
              03 WSS-ERR-FPR1                  PIC X(08).
              03 WSS-ERR-SLH1     VALUE '-'    PIC X(01).
              03 WSS-ERR-FVE1                  PIC X(08).
              03 WSS-ERR-DESC                  PIC X(62).
      *ISP-ANL-FIN 2-MAR-1998 11:21:47

      *PTC-INI JUS 06-MAY-1997 (CMND MCA PARA INTERFAZ GRAFICA)
       COPY LDCWGQCF.
      *JUS-INI 1-SEP-1997 15:17:19
       COPY GNSWGTSK.
      *JUS-FIN 1-SEP-1997 15:17:19
      *PTC-FIN JUS 06-MAY-1997
      *>>>>
      * Modulo variables de trabajo para ENGANCHE
       COPY LDCWGPMP.
      * Modulo variables de trabajo para LDCPSVCL
       COPY LDCWGVCL.
      * Modulo variables de trabajo para LDCPSMCA
       COPY LDCWGMCA.

       01  PGM-VAR-ADIC.
           03 PGM-STAT-ADIC.
              05 PGM-STAT-LDC        VALUE '23'   PIC X(02).
                 88 PGM-STAT-LDC-OKS VALUE '00'.
                 88 PGM-STAT-LDC-NUL VALUE '  '.
              05 PGM-STAT-ARC        VALUE '23'   PIC X(02).
                 88 PGM-STAT-ARC-OKS VALUE '00'.
                 88 PGM-STAT-ARC-NUL VALUE '  '.
              05 PGM-STAT-ARG        VALUE '23'   PIC X(02).
                 88 PGM-STAT-ARG-OKS VALUE '00'.
                 88 PGM-STAT-ARG-NUL VALUE '  '.
              05 PGM-STAT-RDC        VALUE '23'   PIC X(02).
                 88 PGM-STAT-RDC-OKS VALUE '00'.
                 88 PGM-STAT-RDC-NUL VALUE '  '.

       01  WSS-VARI.
      *<<<< PGM_PU
      *AFRI-INI/CHC/OCT-2007/LOF
           03 WSS-CIC-ILIC                        PIC X(12).
      *AFRI-FIN/CHC/OCT-2007/LOF
      *AFRI-INI-SEP-2005
           03 WSS-DBC-GLS-DATA.
              05 WSS-GLS-FIL1                     PIC X(01).
              05 WSS-DBC-NUM-ICLI                 PIC X(08).
              05 WSS-DBC-VRF-ICLI                 PIC X(01).
              05 WSS-DBC-IND-ICLI                 PIC X(01).
              05 WSS-DBC-GLS-ICLI                 PIC X(03).
      *AFRI-FIN-SEP-2005
      *LTM-INI 30-04-1994
           03 WSS-TRMO         VALUE 0            PIC 9(03).
      *LTM-FIN 30-04-1994
      *SMC-INI 26-10-1993
           03 WSS-VSN-VCTG                        PIC X(01).
               88  USA-CTG     VALUE 'N'.
      *SMC-FIN 26-10-1993
      *>>>>
           03 WSS-FEC-FCIE     VALUE 0            PIC 9(08).
           03 WSS-CIC-ICLF                        PIC X(12).
           03 WSS-CLA-OPE.
               05 WSS-TIP-OPE                     PIC X(03).
               05 WSS-STP-OPE                     PIC X(03).
           03 WSS-IND-PER                         PIC X(01).
           03 WSS-NUM-PER                         PIC 9(03).
           03 WSS-NDIA                            PIC 9(05).
           03 WSS-TOT-CLI      VALUE ZEROES       PIC 9(02).
           03 WSS-TOT-ARC                         PIC 9(02).
           03 WSS-TOT-ARG                         PIC 9(02).
           03 WSS-CPT-NOMB VALUE SPACES.
              05  WSS-CPT-DESC                    PIC X(27).
              05  WSS-CPT-CAI                     PIC X(04).
              05  WSS-CPT-IIC                     PIC X(08).
           03  WSS-CPT-NOMB-R  REDEFINES  WSS-CPT-NOMB PIC X(39).
      * COMPONE MENSAJE DE ACUERDO A :
      *    ENTIDA A PROCESAR                 ( CLF )
      *    COMANDO QUE SE PROCESA            ( ING O MOD )
      *    ESTADO DESPUES DE APLICAR COMANDO ( I O V )
      *    ASIGNACION O NO DE CIC            ( S O N )
      *    DEBEN EXISTIR LAS COMBINACIONES DE MENSAJES RESPECTIVAS
           03  WSS-MSG-CLF.
               05 WSS-MSG-CLF-CLF                 PIC X(03).
               05 WSS-MSG-CLF-CMD                 PIC X(03).
               05 WSS-MSG-CLF-STS                 PIC X(01).
               05 WSS-MSG-CLF-CIC                 PIC X(01).
           03  LDC-KEY-ILDC.
               05 LDC-KEY-ICLF.
                  07 LDC-CAI-ICLF                 PIC X(04).
                  07 LDC-IIC-ICLF                 PIC X(08).
               05 LDC-NUM-ILDC         COMP       PIC S9(04).
           03  ARC-KEY-IARC.
               05  ARC-KEY-ILDC.
                   07  ARC-CAI-ICLF               PIC X(04).
                   07  ARC-IIC-ICLF               PIC X(08).
                   07  ARC-NUM-ILDC               PIC 9(02).
               05  ARC-NUM-IARC                   PIC 9(01).
           03  ARG-KEY-IARG.
               05  ARG-KEY-ILDC.
                   07  ARG-CAI-ICLF               PIC X(04).
                   07  ARG-IIC-ICLF               PIC X(08).
                   07  ARG-NUM-ILDC               PIC 9(02).
               05  ARG-NUM-IARG                   PIC 9(01).
           03  WSS-FEC-FVEN.
               05 WSS-NUM-SVEN                    PIC 9(02).
               05 WSS-NUM-AVEN                    PIC 9(02).
               05 WSS-NUM-MVEN                    PIC 9(02).
               05 WSS-NUM-DVEN                    PIC 9(02).
           03  WSS-FEC-FPRV.
               05  WSS-NUM-SPRV                   PIC 9(02).
               05  WSS-NUM-APRV                   PIC 9(02).
               05  WSS-NUM-MPRV                   PIC 9(02).
               05  WSS-NUM-DPRV                   PIC 9(02).
           03  WSS-FEC-FVE1.
               05 WSS-NUM-SVE1                    PIC 9(02).
               05 WSS-NUM-AVE1                    PIC 9(02).
               05 WSS-NUM-MVE1                    PIC 9(02).
               05 WSS-NUM-DVE1                    PIC 9(02).
           03  WSS-FEC-FVE2.
               05 WSS-NUM-SVE2                    PIC 9(02).
               05 WSS-NUM-AVE2                    PIC 9(02).
               05 WSS-NUM-MVE2                    PIC 9(02).
               05 WSS-NUM-DVE2                    PIC 9(02).
           03  WSS-FHOY.
               05 WSS-SHOY                        PIC 9(02).
               05 WSS-AHOY                        PIC 9(02).
               05 WSS-MHOY                        PIC 9(02).
               05 WSS-DHOY                        PIC 9(02).
           03  WSS-FEC-FPR1.
               05  WSS-NUM-SPR1                   PIC 9(02).
               05  WSS-NUM-APR1                   PIC 9(02).
               05  WSS-NUM-MPR1                   PIC 9(02).
               05  WSS-NUM-DPR1                   PIC 9(02).
      *<<<< PGM_PU
           03 WSS-VAL-RSG1        COMP-3          PIC S9(11)V9(4).
           03 WSS-VAL-RSG2        COMP-3          PIC S9(11)V9(4).
      *HPM ini 9-FEB-1994
           03 WSS-VAL-CMP-USD     COMP-3          PIC S9(11)V9(4).
      *HPM fin 9-FEB-1994
           03 WSS-VAL-CMAX-USD    COMP-3          PIC S9(11)V9(4).
           03 WSS-VAL-RSG1-USD    COMP-3          PIC S9(11)V9(4).
           03 WSS-VAL-RSG2-USD    COMP-3          PIC S9(11)V9(4).
           03 WSS-COD-USD                         PIC X(06).
           03 WSS-SGV-VCAM        COMP-3          PIC S9(11)V9(4).
           03 WSS-CIC-TOCF                        PIC X(06).
           03 WSS-EXISTE-GRUPO                    PIC 9(02).
      *AMP-INI 24-NOV-1993
           03 WSS-COD1                            PIC X(06).
           03 WSS-COD2                            PIC X(06).
           03 WSS-COD-MNAC                        PIC X(06).
           03 WSS-SAL1           COMP-3           PIC S9(11)V9(4).
      *AMP-INI 24-NOV-1993
      *>>>>
      *FLB CST  13-DEC-1993
           03 WSS-VSN-OCAI                        PIC X(01).
      *FLB CST  13-JAN-1995
           03 VEC-CMND.
              05 CMND-ING       VALUE 'ING'       PIC X(03).
              05 CMND-MOD       VALUE 'MOD'       PIC X(03).
              05 CMND-ELI       VALUE 'ELI'       PIC X(03).
              05 CMND-CON       VALUE 'CON'       PIC X(03).
              05 CMND-VRF       VALUE 'VRF'       PIC X(03).
              05 CMND-ACA       VALUE 'ACA'       PIC X(03).
              05 CMND-CIE       VALUE 'CIE'       PIC X(03).
              05 CMND-REV       VALUE 'REV'       PIC X(03).
              05 CMND-MCA       VALUE 'MCA'       PIC X(03).
              05 CMND-MSI       VALUE 'MSI'       PIC X(03).
              05 CMND-CMX       VALUE 'CMX'       PIC X(03).
              05 CMND-REA       VALUE 'REA'       PIC X(03).
      *AFRI-INI-SEP2005
              05 CMND-ALF       VALUE 'ALF'       PIC X(03).
              05 CMND-REN       VALUE 'REN'       PIC X(03).
              05 CMND-CLC       VALUE 'CLC'       PIC X(03).
              05 CMND-VRL       VALUE 'VRL'       PIC X(03).
      *AFRI-FIN-SEP2005
      *PVG INI 03-AGO-2005
           03 WSS-MLT.
              05 WSS-NUM-PMAX-ALF  VALUE SPACES   PIC X(03).
              05 WSS-NUM-PMAX REDEFINES
                 WSS-NUM-PMAX-ALF                 PIC 9(03).
           03 WSS-IND-CGAR        VALUE SPACES    PIC X(01).
           03 WSS-VAL-CMAX-NEW                    PIC S9(11)V9(4).
           03 WSS-VAL-CMAX-ANT                    PIC S9(11)V9(4).
           03 WSS-VAL-DIFF                        PIC  9(11)V9(4).
           03 WSS-KEY-ILDC-NEW.
              05 WSS-CIC-ILDC-NEW VALUE SPACES    PIC X(12).
              05 WSS-NUM-ILDC-NEW VALUE ZEROES    PIC 9(02).
           03 WSS-KEY-ILDC-ANT.
              05 WSS-CIC-ILDC-ANT VALUE SPACES    PIC X(12).
              05 WSS-NUM-ILDC-ANT VALUE ZEROES    PIC 9(02).
           03  WSS-COD-VCLC-NEW                   PIC X(06).
           03  WSS-COD-VCLC-ANT                   PIC X(06).
           03  WSS-IND-MGAR-NEW                   PIC X(01).
           03  WSS-IND-MGAR-ANT                   PIC X(01).
           03  WSS-FEC-FINI-ANT    VALUE ZEROES   PIC 9(08).
           03  WSS-FEC-FINI-NEW    VALUE ZEROES   PIC 9(08).
           03  WSS-FEC-FVEN-ANT    VALUE ZEROES   PIC 9(08).
           03  WSS-FEC-FVEN-NEW    VALUE ZEROES   PIC 9(08).
           03  WSS-IND-VIGE-ANT    VALUE SPACES   PIC X(01).
           03  WSS-IND-VIGE-NEW    VALUE SPACES   PIC X(01).
           03  WSS-ARG-NEW.
               05  WSS-CIC-IGAR-NEW.
                   07  WSS-CAI-IGAR-NEW                 PIC X(04).
                   07  WSS-IIC-IGAR-NEW                 PIC X(08).
               05  WSS-COD-COGA-NEW.
                   07  WSS-COD-TOGA-NEW                 PIC X(03).
                   07  WSS-COD-AOGA-NEW                 PIC X(03).
               05  WSS-NUM-PORG-NEW                     PIC 9(03).
           03  WSS-ARG-ANT.
               05  WSS-CIC-IGAR-ANT.
                   07  WSS-CAI-IGAR-ANT                 PIC X(04).
                   07  WSS-IIC-IGAR-ANT                 PIC X(08).
               05  WSS-COD-COGA-ANT.
                   07  WSS-COD-TOGA-ANT                 PIC X(03).
                   07  WSS-COD-AOGA-ANT                 PIC X(03).
               05  WSS-NUM-PORG-ANT                     PIC 9(03).
           03  WSS-NUM-IARG  VALUE ZEROES               PIC 9(02).
      *PVG FIN 03-AGO-2005
      *RGD-INI 30-08-2010 MEJORAS MLT
           03  WSS-VAL-PAR-GLS-MLT.
               05  WSS-VAL-PAR-COD-MLT    OCCURS 10     PIC X(01).
           03  WSS-VAL-CACT-ANT           COMP-3        PIC 9(11)V9(04).
           03  WSS-CIC-CREN-ANT                         PIC X(12).
           03 WSS-IND-SMAR-ANT                          PIC X(01).
           03 WSS-VAL-CMAX-RES                          PIC S9(11)V9(4).
           03 WSS-KEY-ILDC-RES.
              05 WSS-CIC-ILDC-RES VALUE SPACES          PIC X(12).
              05 WSS-NUM-ILDC-RES VALUE ZEROES          PIC 9(02).
           03  WSS-COD-VCLC-RES                         PIC X(06).
           03  WSS-IND-MGAR-RES                         PIC X(01).
           03  WSS-FEC-FINI-RES    VALUE ZEROES         PIC 9(08).
           03  WSS-FEC-FVEN-RES    VALUE ZEROES         PIC 9(08).
           03  WSS-IND-VIGE-RES    VALUE SPACES         PIC X(01).
           03  WSS-VAL-CACT-RES           COMP-3        PIC 9(11)V9(04).
           03  WSS-IIC-ICAC                             PIC X(08).
           03  WSS-COD-TIPO                             PIC X(03).
           03  WSS-IND-DESA-CLF    VALUE SPACES         PIC X(01).
           03  WSS-IND-DESA-CLFF   VALUE SPACES         PIC X(01).
      *RGD-FIN 30-08-2010
      *RGD-INI 02-08-2011 DINERO INSTANTANEO
           03  WSS-GLS-LDIN.
               05  WSS-LDIN-PORC                      PIC 9(03)V9(04).
               05  FILLER                             PIC X(03).
               05  WSS-GLS-LCAPR.
                   07  WSS-COD-LCAPR    OCCURS 25     PIC X(02).
           03  WSS-GLS-CDIN.
               05  WSS-CDIN-CANT                      PIC 9(03).
               05  FILLER                             PIC X(07).
               05  WSS-CDIN-PLZ                       PIC 9(03).
               05  WSS-CDIN-TPLZ                      PIC X(01).
               05  FILLER                             PIC X(06).
               05  WSS-GLS-CCAPR.
                   07  WSS-COD-CCAPR    OCCURS 20     PIC X(02).
           03  WSS-CONT-RENOV                         PIC 9(02).
           03  WSS-I                                  PIC 9(02).
           03  WSS-IND-CAPR                           PIC X(01).
           03  WSS-COD-LCAPRR                         PIC X(02).
           03  WSS-COD-CCAPRR                         PIC X(02).
           03  WSS-IND-ECAPR                          PIC X(02).
           03  WSS-GLS-ELDI.
               05 WSS-GLS-ELDIX                       PIC X(38).
               05 WSS-COD-ETIPO                       PIC X(03).
           03  WSS-GLS-EDIN.
               05 WSS-GLS-EDINX                       PIC X(14).
               05 FILLER          VALUE SPACES        PIC X(01).
               05 WSS-COD-ETABL                       PIC X(03).
               05 FILLER          VALUE SPACES        PIC X(01).
               05 WSS-COD-ETIPX                       PIC X(03).
           03  WSS-FEC-TOPE-LDI.
               05 WSS-NUM-SLDI                        PIC 9(02).
               05 WSS-NUM-ALDI                        PIC 9(02).
               05 WSS-NUM-MLDI                        PIC 9(02).
               05 WSS-NUM-DLDI                        PIC 9(02).
           03 WSS-CONT-LDCS                           PIC 9(02).
           03 WSS-NUM-LDCS                            PIC 9(02).
           03 WSS-CLF-ORI.
              05  WSS-VEC-LDC-ORI  OCCURS 20.
                  07 WSS-CIC-ICLFL                    PIC X(12).
                  07 WSS-COD-TIPO-LDC                 PIC X(03).
                  07 WSS-COD-VCLC-ANTL                PIC X(06).
                  07 WSS-VAL-CMAX-ANTL                PIC S9(11)V9(4).
                  07 WSS-LDIN-PORCL                   PIC 9(03)V9(04).
      *RGD-FIN 02-08-2011
      *RRM-INI abril-2018 / control LDC duplicadas
           03 WSS-VEC-DUPL.
              05 VEC-DUPL OCCURS 99.
                 07  LDC-COD-TIPO                   PIC X(03).
           03 WSS-CTRL                              PIC 9(02).
           03 WSS-LDC                               PIC 9(02).
           03 WSS-DPL-COD-MENS                      PIC X(12).
       01 WSS-CONSTANTES.
           03 WSS-1           VALUE 1               PIC 9(01).
           03 WSS-D           VALUE 'D'             PIC X(01).
           03 WSS-S           VALUE 'S'             PIC X(01).
           03 WSS-CT-MSG-DPLC VALUE 'LDC   DPLC  '  PIC X(12).
      *RRM-FIN abril-2018 / control LDC duplicadas
      *<<<< NOT PGM_DB2
       COPY LDCBRLDC.
       COPY LDCBRARC.
       COPY LDCBRARG.
       COPY LDCBRRDC.
       COPY LDCBRLAC.
      *>>>>

       COPY TABBRCAM.
      *RVM-BCI-INI 19-MAR-1998
       COPY SGCBROPE.
       COPY SGCBRRCO.
      *RVM-BCI-FIN 19-MAR-1998

       COPY GNSBRCIC.
       COPY GNSWGCIC.

       COPY TABBRTIO.

       COPY SGCBRREC.
       COPY SGCBRDBC.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-CIC-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-DBC-REQA==.

       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-ARC-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-ARG-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-CAM-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-LAC-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-LDC-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-RDC-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-REC-REQA==.
      *RVM-BCI-INI 19-MAR-1998
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-OPE-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-RCO-REQA==.
      *RVM-BCI-FIN 19-MAR-1998
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-TIO-REQA==.
       COPY GNSWGCPT.
       COPY GNSWGSTR.
       COPY LDCWGLIC.
       COPY LDCBRLCC.
       COPY LDCBRACG.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-LCC-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-ACG-REQA==.
      *AFRI-FIN-SEP-2005
      *>>>>
       01  PGM-VARI.
           03 PGM-ICLR                  VALUE ' '       PIC X(01).
           03 PGM-LIMPIAR-TODO          VALUE ' '       PIC X(01).
           03 PGM-LIMPIAR-LLAVES        VALUE 'K'       PIC X(01).
           03 PGM-LIMPIAR-CAMPOS        VALUE 'F'       PIC X(01).
           03 PGM-NO-LIMPIAR-NADA       VALUE 'N'       PIC X(01).
           03 PGM-PROG                                  PIC X(08).
           03 PGM-NTRN                                  PIC X(04).
           03 PGM-STAT.
              05 PGM-STAT-CLF.
                 88 PGM-STAT-CLF-NUL    VALUE '  '.
                 07 PGM-STT1-CLF        VALUE '2' PIC X(01).
                    88 PGM-STAT-CLF-OKS VALUE '0'.
                 07 PGM-STT2-CLF        VALUE '3' PIC X(01).
              05 PGM-STAT-DBC.
                 88 PGM-STAT-DBC-NUL    VALUE '  '.
                 07 PGM-STT1-DBC        VALUE '2' PIC X(01).
                    88 PGM-STAT-DBC-OKS VALUE '0'.
                 07 PGM-STT2-DBC        VALUE '3' PIC X(01).
           03 PGM-SRNF                  VALUE '23'      PIC X(02).
           03 PGM-SOKS                  VALUE '00'      PIC X(02).
           03 PGM-SNUL                  VALUE '  '      PIC X(02).
           03 PGM-SUAR                  VALUE SPACES    PIC X(15).

       LINKAGE SECTION.
      *----------------
       01  DFHCOMMAREA.
           02 FILLER                    PIC X(450).
       COPY COLLGCCT.

       PROCEDURE DIVISION.
      *===================

       MAIN SECTION.
       INI-MAIN.
           PERFORM INI.
       LUP-MAIN.
           IF SCR-INST = SCR-INST-HCM
                 PERFORM SCR-COM.
           IF SCR-CCPP = 'MOD'
                 PERFORM SCR-MOD
           ELSE
           IF SCR-CCPP = 'ING'
                 PERFORM SCR-ING
           ELSE
           IF SCR-CCPP = 'ACC'
                 PERFORM SCR-ACC
           ELSE
           IF SCR-CCPP = 'ELI'
                 PERFORM SCR-ELI
           ELSE
                 MOVE SCR-INST-HCM TO SCR-INST.
           GO TO LUP-MAIN.
       FIN-MAIN.
           EXIT.

       INI SECTION.
       INI-INI.
       COPY GNSBGEIB.
       COPY GNSBGEDB.
           MOVE LOW-VALUES TO CLF-FLD.
           MOVE LOW-VALUES TO CLF-EDT.
           PERFORM GNS-PRO-RCK.
           PERFORM GNS-BUS-VCA.
           MOVE +450 TO SCR-TCMA.
           PERFORM GNS-HDL-SYS.
           PERFORM GNS-HDL-FRM.
           MOVE 'LDCPUCLF' TO FIO-PROG.
           PERFORM GNS-BUS-IDD.
      *PTC-INI
           PERFORM GNS-ERR-QUE.
           PERFORM GET-TSK-TERM.
      *PTC-FIN
      *<<<< INI_FIO
      *PTC ini
           PERFORM GNS-ERR-QUE.
      *PTC fin
      *<<<< ( INI_FIO ) AND ( NOT PGM_VSI )
           PERFORM GNS-HDL-VSM.
      *>>>>
      *<<<< INI_FIO
           MOVE TSK-TERM-ALF TO PTC-BCLF-TERM.
           MOVE PTC-BCLF TO QUE-COLA.
           MOVE QUE-GET TO QUE-CMND.
           MOVE 1 TO QUE-NITM.
           MOVE PTC-BCLF-LENG TO QUE-LITM.
           PERFORM GNS-PRO-QUE.
           IF QUE-STAT = QUE-STAT-OKS
               MOVE 'N' TO PTC-IND-BCLF
               MOVE QUE-DEL TO QUE-CMND
               PERFORM GNS-PRO-QUE.
      *FLB CST  13-JAN-1995
           MOVE 'DEU'           TO FIO-SIST.
           MOVE 'PRM'           TO TAB-COD-TTAB IN TAB.
           MOVE 'CMNDCLF'       TO TAB-COD-CTAB IN TAB.
           MOVE FIO-GET-KEY     TO FIO-CMND.
           PERFORM GNS-FIO-TAB.
           IF FIO-STAT-OKS AND TAB-IND-VIGE IN TAB = 'S'
               MOVE TAB-GLS-DATA IN TAB TO VEC-CMND.

      *>>>>
       FIN-INI.
           EXIT.

       COPY GNSBHSYS.
       COPY GNSBHFRM.
       COPY GNSBPRCK.
       COPY GNSBBVCA.
       COPY GNSBBIDD.

       SCR-COM SECTION.
       INI-SCR-COM.
           PERFORM STP-EXIT.
           MOVE FRM-CPSF-AEY TO FRM-CPIM-AEY.
           PERFORM PRO-ALL.
           PERFORM SCR-CLRA-CLF.
           PERFORM EDT-KEY-CLF.
           PERFORM EDT-FLD-CLF.
           PERFORM SCR-PUTA.
           MOVE SCR-INST-HCM TO SCR-INST.
           MOVE SCR-CMNP     TO SYS-PROG.
           MOVE SCR-VARI     TO SYS-CMMA.
           MOVE SCR-TCMA     TO SYS-TCMA.
           MOVE SYS-XCTL     TO SYS-CMND.
      *PTC-INI
           IF NOT SCR-OFRM-SRV
      *PTC-FIN
           PERFORM GNS-PRO-SYS.
       XCT-ERR.
           MOVE 'XCTERR    ' TO MSG-COD-MENS.
           MOVE 'GNS'        TO MSG-COD-SIST.
           PERFORM GET-MSG.
           MOVE MSG-GLS-DESC TO SYS-MEN1.
           MOVE SYS-PROG     TO SYS-MEN2.
           MOVE SYS-ABOR     TO SYS-CMND.
      *PTC-INI
           IF NOT SCR-OFRM-SRV
      *PTC-FIN
           PERFORM GNS-PRO-SYS.
       COPY GNSBGGBK.
       FIN-SCR-COM.
           EXIT.

       SCR-MOD SECTION.
       INI-SCR-MOD.
           IF SCR-INST = SCR-INST-HKY
               PERFORM HBL-KEY
               MOVE SCR-INST-GKY TO SCR-INST
               PERFORM SCR-DMSG
           ELSE
           IF SCR-INST = SCR-INST-GFL
               PERFORM GET-FLD
           ELSE
           IF SCR-INST = SCR-INST-GCS
               PERFORM GET-ACC.
           PERFORM DESSCRTRL.
           IF FRM-FFLD = FRM-FFLD-PF7 OR FRM-FFLD-PF8
               PERFORM XCT-PRGP.
           IF NOT ( FRM-FFLD = FRM-FFLD-PF5 OR FRM-FFLD-PF6 )
               GO TO MSG-SCR-MOD.
       MSG-SCR-MOD.
           IF SCR-STAT = SCR-STAT-CON
               MOVE SPACES TO FRM-MENS
           ELSE
           IF SCR-STAT = SCR-STAT-ABT OR SCR-VFLD = SCR-VFLD-NOT
               MOVE 'MODNOT    ' TO MSG-COD-MENS
               MOVE 'GNS' TO MSG-COD-SIST
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS
           ELSE
               MOVE SPACES TO FRM-MENS
               PERFORM CMN-MOD
               IF FIO-STAT-OKS
                   IF FRM-MEN1 NOT > SPACES
                       MOVE 'MODYES    ' TO MSG-COD-MENS
                       MOVE 'GNS' TO MSG-COD-SIST
                       PERFORM GET-MSG
                       MOVE MSG-GLS-DESC TO FRM-MEN1
                   ELSE
                       NEXT SENTENCE
               ELSE
               IF FRM-MENS NOT > SPACES
                   MOVE 'FIOSTAT' TO MSG-COD-TMSG
                   MOVE FIO-STAT  TO MSG-COD-CMSG
                   MOVE 'GNS'     TO MSG-COD-SIST
                   PERFORM GET-MSG
                   MOVE MSG-GLS-DESC TO FRM-MENS.
           PERFORM SCR-MSSG.
       FIN-SCR-MOD.
           EXIT.

       SCR-ING SECTION.
       INI-SCR-ING.
           IF SCR-INST = SCR-INST-HKY
               PERFORM HBL-IKY
               MOVE SCR-INST-GKY TO SCR-INST
      *PTC-INI
               IF NOT SCR-OFRM-SRV
                   PERFORM SCR-DMSG
               ELSE
                   PERFORM SCR-PUTA
      *PTC-FIN
           ELSE
           IF SCR-INST = SCR-INST-GFL
                PERFORM GET-FLD
           ELSE
           IF SCR-INST = SCR-INST-GCS
                PERFORM GET-ACC.
           PERFORM DESSCRTRL.
       MSG-SCR-ING.
           IF SCR-STAT = SCR-STAT-CON
               MOVE SPACES TO FRM-MENS
           ELSE
           IF SCR-STAT = SCR-STAT-ABT OR SCR-VFLD = SCR-VFLD-NOT
               MOVE 'INGNOT    ' TO MSG-COD-MENS
               MOVE 'GNS' TO MSG-COD-SIST
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS
           ELSE
               MOVE SPACES TO FRM-MENS
               PERFORM CMN-ING
               IF FIO-STAT-OKS
                   IF FRM-MEN1 NOT > SPACES
                       MOVE 'INGYES    ' TO MSG-COD-MENS
                       MOVE 'GNS' TO MSG-COD-SIST
                       PERFORM GET-MSG
                       MOVE MSG-GLS-DESC TO FRM-MEN1
                   ELSE
                       NEXT SENTENCE
               ELSE
               IF FRM-MENS NOT > SPACES
                   MOVE 'FIOSTAT' TO MSG-COD-TMSG
                   MOVE FIO-STAT  TO MSG-COD-CMSG
                   MOVE 'GNS'     TO MSG-COD-SIST
                   PERFORM GET-MSG
                   MOVE MSG-GLS-DESC TO FRM-MENS.
           PERFORM SCR-MSSG.
       FIN-SCR-ING.
           EXIT.

       SCR-ACC SECTION.
       INI-SCR-ACC.
           IF SCR-INST = SCR-INST-HKY
               PERFORM HBL-KEY
               MOVE SCR-INST-GKY TO SCR-INST
               PERFORM SCR-DMSG
           ELSE
           IF SCR-INST = SCR-INST-GFL
                PERFORM GET-FLD
           ELSE
           IF SCR-INST = SCR-INST-GCS
                PERFORM GET-ACC.
           PERFORM DESSCRTRL.
           IF FRM-FFLD = FRM-FFLD-PF7 OR FRM-FFLD-PF8 OR
                         FRM-FFLD-PF5 OR FRM-FFLD-PF6
               PERFORM XCT-PRGP.
           MOVE SPACES TO FRM-MENS.
           IF SCR-STAT NOT = SCR-STAT-CON
               PERFORM CMN-ACC.
           PERFORM SCR-MSSG.
       FIN-SCR-ACC.
           EXIT.

       SCR-ELI SECTION.
       INI-SCR-ELI.
           IF SCR-INST = SCR-INST-HKY
               PERFORM HBL-KEY
               MOVE SCR-INST-GKY TO SCR-INST
               PERFORM SCR-DMSG
           ELSE
           IF SCR-INST = SCR-INST-GCS
                PERFORM GET-ACC.
           PERFORM DESSCRTRL.
           IF FRM-FFLD = FRM-FFLD-PF7 OR FRM-FFLD-PF8 OR
                         FRM-FFLD-PF5 OR FRM-FFLD-PF6
               PERFORM XCT-PRGP.
           IF SCR-STAT = SCR-STAT-CON
               MOVE SPACES TO FRM-MENS
           ELSE
           IF SCR-STAT = SCR-STAT-ABT OR SCR-VFLD = SCR-VFLD-NOT
               MOVE 'ELINOT    ' TO MSG-COD-MENS
               MOVE 'GNS' TO MSG-COD-SIST
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS
           ELSE
               MOVE SPACES TO FRM-MENS
               PERFORM CMN-ELI
               IF FIO-STAT-OKS
                   IF FRM-MEN1 NOT > SPACES
                       MOVE 'ELIYES    ' TO MSG-COD-MENS
                       MOVE 'GNS' TO MSG-COD-SIST
                       PERFORM GET-MSG
                       MOVE MSG-GLS-DESC TO FRM-MEN1
                   ELSE
                       NEXT SENTENCE
               ELSE
               IF FRM-MENS NOT > SPACES
                   MOVE 'FIOSTAT' TO MSG-COD-TMSG
                   MOVE FIO-STAT  TO MSG-COD-CMSG
                   MOVE 'GNS'     TO MSG-COD-SIST
                   PERFORM GET-MSG
                   MOVE MSG-GLS-DESC TO FRM-MENS.
           PERFORM SCR-MSSG.
       FIN-SCR-ELI.
           EXIT.



       SCR-DMSG SECTION.
       INI-SCR-DMSG.
           IF PGM-ICLR = PGM-NO-LIMPIAR-NADA
               NEXT SENTENCE
           ELSE
           IF PGM-ICLR = PGM-LIMPIAR-TODO
               PERFORM SCR-CLRA-CLF
               PERFORM EDT-KEY-CLF
               PERFORM EDT-FLD-CLF
           ELSE
           IF PGM-ICLR = PGM-LIMPIAR-LLAVES
               PERFORM CLR-KEY-CLF
               PERFORM EDT-KEY-CLF
           ELSE
               PERFORM CLR-FLD-CLF
               PERFORM EDT-FLD-CLF.
           PERFORM STP-EXIT.
           PERFORM SCR-PUTA.
           PERFORM SCR-EXIT.
       FIN-SCR-DMSG.
           EXIT.

       XCT-PRGP SECTION.
       INI-XCT-PRGP.
           MOVE SCR-INST-BRW TO SCR-INST.
           PERFORM STP-EXIT.
           MOVE FRM-FFLD   TO SCR-FFLD.
      *
           MOVE SCR-PROG     TO SYS-PROG.
           MOVE SCR-VARI     TO SYS-CMMA.
           MOVE SCR-TCMA     TO SYS-TCMA.
           MOVE SYS-XCTL     TO SYS-CMND.
      *PTC-INI
           IF NOT SCR-OFRM-SRV
      *PTC-FIN
           PERFORM GNS-PRO-SYS.
           PERFORM XCT-ERR.
       FIN-XCT-PRGP.
           EXIT.

       SCR-RST SECTION.
       INI-SCR-RST.
           MOVE SPACES       TO PGM-ICLR.
           MOVE SPACES       TO SCR-ACTU.
           MOVE SCR-STPP     TO SCR-STAT.
           MOVE SCR-MFLD-NOT TO SCR-MFLD.
           MOVE LOW-VALUES   TO CLF-FLD.
           MOVE LOW-VALUES TO CLF-EDT.
       FIN-SCR-RST.
           EXIT.

       GET-FLD SECTION.
       INI-GET-FLD.
           PERFORM SCR-GFLD.
           IF FRM-STAT-ABT
               MOVE SCR-STAT-ABT TO SCR-STAT.
       FIN-GET-FLD.
           EXIT.

       CMN-MOD SECTION.
       INI-CMN-MOD.
      *<<<< INI_CMN_MOD
      *AFRI-INI/SEP2005
      *    IF SCR-CMND = CMND-MCA OR CMND-MSI
           IF SCR-CMND = CMND-MCA OR CMND-MSI OR CMND-REN
      *AFRI-FIN7SEP2005
               PERFORM LDC-PRO-MCA
               IF MSG-COD-MENS > SPACES AND
                  MSG-COD-MENS NOT = 'MCAOK' AND
                  MSG-COD-MENS NOT = 'MSIOK' AND
      *AFRI-INI/SEP2005
                  MSG-COD-MENS NOT = 'RENOK'
      *AFRI-FIN/SEP2005
                   MOVE 'S' TO SCR-IERR
                   GO TO FIN-CMN-MOD.
      *>>>>
           PERFORM KEY-ALL-CLF.
           MOVE FIO-GET-KEY-UPD TO FIO-CMND.
           PERFORM LDC-FIO-CLF.
           IF FIO-STAT-OKS AND
              CLF-STP-ITRN IN CLF NOT = SCR-UMOD
               MOVE FIO-ULK-REC TO FIO-CMND
               PERFORM LDC-FIO-CLF
               MOVE FIO-BCK-OUT TO FIO-CMND
               PERFORM LDC-FIO-CLF
               MOVE 'GNS' TO MSG-COD-SIST
               MOVE 'GNSACCSSIMUL' TO MSG-COD-MENS
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS
      *PTC-INI
               MOVE 'S' TO SCR-IERR
      *PTC-FIN
               GO TO FIN-CMN-MOD.
           IF NOT FIO-STAT-OKS
               GO TO FIN-CMN-MOD.
      *<<<< CMN_MOD_RET
      *AFRI-INI-SEP2005
           IF SCR-CMND = CMND-ALF
               MOVE 'F' TO CLF-MSC-STAT IN CLF-FLD
           ELSE
           IF SCR-CMND = CMND-CLC
               MOVE 'N' TO CLF-MSC-STAT IN CLF-FLD
           ELSE
      *AFRI-FIN-SEP2005
      *FLB BCP  13-JAN-1995
           IF SCR-CMND = CMND-ACA OR CMND-REV OR CMND-CMX
               MOVE 'A' TO CLF-MSC-STAT IN CLF-FLD
           ELSE
           IF SCR-CMND = CMND-CIE
               MOVE 'C' TO CLF-MSC-STAT IN CLF-FLD
           ELSE
      *AFRI-INI/SEP2005
      *    IF SCR-CMND = CMND-MCA OR CMND-MSI
           IF SCR-CMND = CMND-MCA OR CMND-MSI OR CMND-REN
      *AFRI-FIN/SEP2005
               MOVE CLF-CAI-CREN IN CLF TO CLF-CAI-CREN IN CLF-FLD
               MOVE CLF-IIC-CREN IN CLF TO CLF-IIC-CREN IN CLF-FLD
               MOVE 'I' TO CLF-MSC-STAT IN CLF-FLD
           ELSE
               MOVE 'I' TO CLF-MSC-STAT IN CLF-FLD.
      *>>>>
           PERFORM RET-STT-CLF.
           PERFORM RET-ALL-CLF.
           PERFORM RET-HDR-CLF.
      *<<<< CMN_MOD
      *FLB CST  9-JAN-1995 REVISADO PARA MSI
      *FLB CST  21-SEP-1994 CCU FUNCIONE LUEGO MCA/MSI Y ANTES ACA
           IF SCR-CMND = CMND-ACA
               MOVE SPACES TO CLF-COD-STAT IN CLF
           ELSE
      *AFRI-INI/SEP2005
      *    IF SCR-CMND = CMND-MCA
           IF SCR-CMND = CMND-MCA OR CMND-REN
      *AFRI-FIN/SEP2005
               MOVE 'M' TO CLF-COD-STAT IN CLF
               MOVE SCR-INST-HCM TO SCR-INST
           ELSE
           IF SCR-CMND = CMND-MSI
               MOVE SCR-INST-HCM TO SCR-INST
               MOVE 'X' TO CLF-COD-STAT IN CLF.
      *FLB CST  21-SEP-1994

           MOVE 'M'      TO CLF-MSC-TACC IN CLF.
      *>>>>
           MOVE FIO-MOD TO FIO-CMND.
           PERFORM LDC-FIO-CLF.
      *<<<< FIN_CMN_MOD
      *FLB CST  19-JAN-1995
           IF NOT FIO-STAT-OKS
               MOVE FIO-MENS TO FRM-MENS
               MOVE FIO-BCK-OUT  TO FIO-CMND
               PERFORM LDC-FIO-CLF
               GO TO FIN-CMN-MOD.
      *
      *PVG INI 03-AGO-2005
           IF SCR-CMND = CMND-ACA
              MOVE FIO-STAT TO PGM-STAT-CLF
              PERFORM VAL-ACT-LMLT
              MOVE PGM-STAT-CLF TO FIO-STAT.
      *PVG FIN 03-AGO-2005

      *RGD-INI 30-08-2010
           IF WSS-IND-DESA-CLF = 'S'
              MOVE 'DEU'          TO MSG-COD-SIST
              MOVE 'CLFICACOBLIA' TO MSG-COD-MENS
              PERFORM GET-MSG
              MOVE MSG-GLS-DESC   TO FRM-MENS
              MOVE FIO-BCK-OUT  TO FIO-CMND
              PERFORM LDC-FIO-CLF
              MOVE 'S' TO SCR-IERR
              GO TO FIN-CMN-MOD.
      *RGD-FIN 30-08-2010

      *PTC-INI JUS 1-SEP-1997 (CMND MCA PARA INTERFAZ GRAFICA)
           IF SCR-OFRM-SRV AND SCR-CMND = CMND-MCA
              MOVE 'CREN'              TO QUE-TYPE
              MOVE TSK-TERM-ALF        TO QUE-TERM
              MOVE +12                 TO QUE-LITM
              MOVE QUE-PUT             TO QUE-CMND
              MOVE CLF-CIC-CREN IN CLF TO QUE-ITEM
              PERFORM GNS-PRO-QUE
              IF PTC-IND-BCLF = 'S'
                   MOVE 'ELI' TO QCF-COD-CMND
                   MOVE CLF-CAI-ICLF IN CLF-FLD TO QCF-CAI-ICLF
                   MOVE CLF-IIC-ICLF IN CLF-FLD TO QCF-IIC-ICLF
                   PERFORM LNK-PPQCF.
      *PTC-FIN JUS 1-SEP-1997

      *AFRI-INI-SEP-2005
           IF SCR-CMND NOT = CMND-ACA
               GO TO FIN-CMN-MOD.

      *RRM-INI abril-2018 / control LDC duplicadas
           PERFORM REV-LDC-DUPL.
           IF WSS-DPL-COD-MENS > SPACES
               MOVE 'DEU'            TO MSG-COD-SIST
               MOVE WSS-DPL-COD-MENS TO MSG-COD-MENS
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC   TO FRM-MENS
               MOVE FIO-BCK-OUT    TO FIO-CMND
               PERFORM LDC-FIO-CLF
               MOVE 'S' TO SCR-IERR
               GO TO FIN-CMN-MOD.
      *RRM-FIN abril-2018 / control LDC duplicadas

           MOVE CLF-CAI-ICLF IN CLF-FLD TO VLI-OPC-CAI-IOPC.
           MOVE CLF-IIC-ICLF IN CLF-FLD TO VLI-OPC-IIC-IOPC.
           MOVE 'ACN'                     TO VLI-CMND.
           IF SCR-HDR-MRCA = 'BCS'
               MOVE 'NOVA'                TO VLI-COD-ENTI
           ELSE
               MOVE 'BCI'                 TO VLI-COD-ENTI.
           MOVE 'LDC'                TO VLI-COD-SIST.
           MOVE IDD-FSIS IN IDD-VARI TO VLI-VIDD.
           MOVE FIO-MSFL IN FIO-CTTS TO VLI-MSFL.
           MOVE VLI-CMMA   TO SYS-CMMA.
           MOVE 'LDCPPLIC' TO SYS-PROG.
           MOVE VLI-TCMA   TO SYS-TCMA.
           MOVE SYS-LINK   TO SYS-CMND.
           PERFORM GNS-PRO-SYS.
           MOVE SYS-CMMA TO VLI-CMMA.
           MOVE VLI-MSFL TO FIO-MSFL.
           IF VLI-COD-MENS > SPACES
               MOVE 'DEU'                TO MSG-COD-SIST
               MOVE VLI-COD-MENS         TO MSG-COD-MENS
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC         TO FRM-MENS
               MOVE FIO-BCK-OUT          TO FIO-CMND
               PERFORM LDC-FIO-CLF
               MOVE 'S' TO SCR-IERR
               GO TO FIN-CMN-MOD.
      *AFRI-FIN-SEP-2005
      *>>>>
       FIN-CMN-MOD.
           EXIT.

       CMN-ING SECTION.
       INI-CMN-ING.
           MOVE SPACES TO CLF.
      *<<<< INI_CMN_ING
      *GET-CIC Obtener CIC
       CIC-GET-CIC-ING.
           IF CLF-IIC-ICLF IN CLF-FLD > ZEROES
      *        INDICA QUE NO INVOCO A RUTINA OBTENCION CIC
               MOVE 'N' TO SCR-IND-OCIC
           ELSE
      *        INDICA QUE SI INVOCO A RUTINA OBTENCION CIC
               MOVE 'S' TO SCR-IND-OCIC
      *FLB CST  22-DEC-1993
      *        MOVE 'L' TO CIC-COD-TCIC IN CIC
      *        MOVE CLF-COD-OFIC IN CLF-FLD TO CIC-COD-CCIC IN CIC
               MOVE CLF-CAI-ICLF IN CLF-FLD TO CIC-CAI-ICIC IN CIC

               MOVE CIC-GET TO CIC-CMND
               PERFORM PRO-CIC
               IF CIC-STAT NOT = CIC-STAT-OKS
                   MOVE CIC-MENS TO FRM-MENS
                   MOVE FIO-STAT-NEX TO FIO-STAT
                   GO TO FIN-CMN-ING
               ELSE
                   MOVE CIC-CIC-ICIC TO CLF-CIC-ICLF IN CLF
                   MOVE FIO-GET-KEY TO FIO-CMND
                   PERFORM LDC-FIO-CLF
                   IF FIO-STAT-OKS
                       GO TO CIC-GET-CIC-ING
                   ELSE
                       MOVE CIC-CAI-ICIC TO CLF-CAI-ICLF IN CLF-FLD
                       MOVE CIC-IIC-ICIC TO CLF-IIC-ICLF IN CLF-FLD.
      *PTC-INI-MAN
           IF SCR-OFRM-SRV AND
              SCR-IND-OCIC NOT = 'N'
               MOVE PTC-CLF-TYPE TO QUE-TYPE
               MOVE TSK-TERM-ALF TO QUE-TERM
               MOVE QUE-DEL      TO QUE-CMND
               PERFORM GNS-PRO-QUE
               MOVE PTC-CLF-TYPE TO QUE-TYPE
               MOVE TSK-TERM-ALF TO QUE-TERM
               MOVE PTC-CLF-LENG TO QUE-LITM
               MOVE CIC-CAI-ICIC TO PTC-CLF-CLF-CAI-ICLF
               MOVE CIC-IIC-ICIC TO PTC-CLF-CLF-IIC-ICLF
               MOVE PTC-CLF-ITEM TO QUE-ITEM
               MOVE QUE-PUT      TO QUE-CMND
               PERFORM GNS-PRO-QUE.
      *PTC-FIN-MAN

           MOVE SPACES TO CLF-GLS-FLAG IN CLF.
           MOVE SPACES TO CLF-CAI-CREN IN CLF.
           MOVE ZEROES TO CLF-IIC-CREN IN CLF.
      *ADA-INI 15-NOV-2002
      *    MOVE ZEROES TO CLF-GLS-DISP IN CLF.
      *ADA-FIN 15-NOV-2002

           MOVE 'I'      TO CLF-MSC-TACC IN CLF.
      *>>>>
           PERFORM RET-STT-CLF.
           PERFORM RET-ALL-CLF.
           PERFORM RET-HDR-CLF.
      *<<<< CMN_ING
      *PTC-INI JUS 1-SEP-1997 (CMND MCA VIA ING PARA INTERFAZ GRAFICA)
           IF SCR-OFRM-SRV
              MOVE 'CREN'              TO QUE-TYPE
              MOVE TSK-TERM-ALF        TO QUE-TERM
              MOVE QUE-GET             TO QUE-CMND
              PERFORM GNS-PRO-QUE
              IF QUE-STAT = QUE-STAT-OKS
      *ALD-BCI-INI/01.12.1998
                 MOVE 'M'              TO CLF-COD-STAT IN CLF
      *ALD-BCI-FIN/01.12.1998
                 MOVE QUE-ITEM         TO CLF-CIC-CREN IN CLF
                 MOVE QUE-DEL          TO QUE-CMND
                 PERFORM GNS-PRO-QUE.
      *PTC-FIN JUS 1-SEP-1997

      *PTC-INI ISP 08-03-1999 CUANDO ES INGRESO POR
      * MOD EL STATUS DEBE SER 'M'
           IF SCR-OFRM-SRV
              MOVE 'CMOD'              TO QUE-TYPE
              MOVE TSK-TERM-ALF        TO QUE-TERM
              MOVE QUE-GET             TO QUE-CMND
              PERFORM GNS-PRO-QUE
              IF QUE-STAT = QUE-STAT-OKS
                 IF CLF-IIC-CREN IN CLF > SPACES
                     MOVE 'M'              TO CLF-COD-STAT IN CLF
                     MOVE QUE-DEL          TO QUE-CMND
                     PERFORM GNS-PRO-QUE
                 ELSE
                     MOVE QUE-DEL          TO QUE-CMND
                     PERFORM GNS-PRO-QUE.
      *PTC-FIN ISP 08-03-1999 CUANDO ES INGRESO POR
      * MOD EL STATUS DEBE SER 'M'

           IF DBC-IND-ICLI IN CLF-FLD NOT = 'M'
              PERFORM PUT-RDC
              IF NOT FIO-STAT-OKS
                 MOVE 'DEU'        TO MSG-COD-SIST
                 MOVE 'RDC    PUT' TO MSG-COD-MENS
                 PERFORM GET-MSG
                 MOVE MSG-GLS-DESC TO FRM-MENS
                 GO TO FIN-CMN-ING.
      *>>>>
           MOVE FIO-PUT TO FIO-CMND.
           PERFORM LDC-FIO-CLF.
      *<<<< FIN_CMN_ING
           MOVE FIO-STAT TO PGM-STAT-CLF.
           IF NOT FIO-STAT-OKS
      *        ERROR INCONSISTENCIA EN EL INGRESO : INFORMAR
               MOVE FIO-MENS TO FRM-MENS
               GO TO FIN-CMN-ING.

      * LTM-INI 22-04-1994
           MOVE 'TAB'     TO TAB-COD-SIST.
           MOVE 'TIO'     TO TAB-COD-TTAB IN TAB.
           MOVE CLF-COD-TOCF IN CLF-FLD TO TAB-COD-CTAB IN TAB.
           PERFORM VAL-COD.
           IF TAB-CIC-CTAB IN TAB = 'CGE'
      *INI-JGM 29-07-1998.
               MOVE SPACES TO LDC
      *FIN-JGM 29-07-1998.
               MOVE CLF-CAI-ICLF IN CLF-FLD TO LDC-CAI-ICLF IN LDC
               MOVE CLF-IIC-ICLF IN CLF-FLD TO LDC-IIC-ICLF IN LDC
               MOVE 01        TO LDC-NUM-ILDC IN LDC
               MOVE HOY-FHOY  TO LDC-FEC-FTRN IN LDC
               MOVE HOY-HHOY  TO LDC-HRA-HRTR IN LDC
               MOVE 'I'       TO LDC-MSC-TACC IN LDC
               MOVE 'I'       TO LDC-MSC-STAT IN LDC
               MOVE SCR-OTRN  TO LDC-COD-OTRN IN LDC
               MOVE SCR-USER  TO LDC-COD-ATRN IN LDC
               MOVE 'CODIGO DE GRUPO' TO LDC-GLS-DESC IN LDC
               MOVE 'COD.GRU' TO LDC-GLS-DCOR IN LDC
               MOVE CLF-VAL-CMAX IN CLF-FLD TO LDC-VAL-CMAX IN LDC
      *<<<< MON_LDC
               MOVE CLF-COD-VCCF IN CLF-FLD TO LDC-COD-VCLC IN LDC
      *>>>>
               MOVE 'S'       TO LDC-IND-MGAR IN LDC
               MOVE CLF-NUM-PVIG IN CLF-FLD TO LDC-NUM-PVIG IN LDC
               MOVE CLF-IND-PVIG IN CLF-FLD TO LDC-IND-PVIG IN LDC
               MOVE 'S'       TO LDC-IND-VIGE IN LDC
               MOVE CLF-NUM-DVEN IN CLF-FLD TO LDC-NUM-DVEN IN LDC
               MOVE CLF-NUM-MVEN IN CLF-FLD TO LDC-NUM-MVEN IN LDC
               MOVE CLF-NUM-SVEN IN CLF-FLD TO LDC-NUM-SVEN IN LDC
               MOVE CLF-NUM-AVEN IN CLF-FLD TO LDC-NUM-AVEN IN LDC
               MOVE 0         TO LDC-VAL-RSG1 IN LDC
               MOVE 0         TO LDC-VAL-RSG2 IN LDC
               MOVE SPACES    TO LDC-GLS-DISP IN LDC
      *RGD-INI 30-08-2010 MEJORAS MLT
               MOVE SPACES    TO LDC-IND-SMAR IN LDC
      *RGD-FIN 30-08-2010
      *FLB CST  14-MAR-1995 10-OCT-1994 Linea de Libre Disponibilidad
               MOVE 'DEU' TO FIO-SIST
               MOVE 'VSN'       TO TAB-COD-TTAB IN TAB
               MOVE 'CODTIPLDC' TO TAB-COD-CTAB IN TAB
               MOVE FIO-GET-KEY TO FIO-CMND
               PERFORM GNS-FIO-TAB
               IF NOT ( FIO-STAT-OKS AND TAB-IND-VIGE IN TAB = 'S' )
                   MOVE SPACES TO LDC-COD-TIPO IN LDC
                   MOVE FIO-PUT TO FIO-CMND
                   PERFORM LDC-FIO-LDC
                   IF NOT FIO-STAT-OKS
      *        Error inconsistencia en el ingreso : hacer LOGTB e inform
                       MOVE FIO-MENS TO FRM-MENS
                       PERFORM BCK-OUT
                       GO TO FIN-CMN-ING
                   ELSE
                       GO TO NO-ENGANCHA
               ELSE
                   MOVE 'DEU' TO FIO-SIST
                   MOVE 'TLC'   TO TAB-CIC-TTAB IN TAB
                   MOVE 'LIBRE' TO TAB-CIC-CTAB IN TAB
                   MOVE 'TAB-CIC-TABL' TO FIO-AKEY
                   MOVE FIO-GET-KEY TO FIO-CMND
                   PERFORM GNS-FIO-TAB
                   IF NOT FIO-STAT-OKS
                       MOVE 'DEU' TO MSG-COD-SIST
                       MOVE 'CICLIBRENEX' TO MSG-COD-MENS
                       PERFORM GET-MSG
                       MOVE MSG-GLS-DESC TO FRM-MENS
                       PERFORM BCK-OUT
                       GO TO FIN-CMN-ING
                   ELSE
                       MOVE TAB-COD-CTAB IN TAB TO LDC-COD-TIPO IN LDC
                       MOVE FIO-PUT TO FIO-CMND
                       PERFORM LDC-FIO-LDC
                       IF NOT FIO-STAT-OKS
      *        Error inconsistencia en el ingreso : hacer LOGTB e inform
                           MOVE FIO-MENS TO FRM-MENS
                           PERFORM BCK-OUT
                           GO TO FIN-CMN-ING
                       ELSE
                           GO TO NO-ENGANCHA.
      *FLB CST  14-MAR-1995 FIN
      * LTM-FIN 22-04-1994

           IF DBC-IND-ICLI IN CLF-FLD = 'M'
              MOVE 'S'    TO SCR-IND-ENG IN SCR-VEC-ENG(WSS-IDX-IRDC)
              MOVE 'S'    TO SCR-IND-FST IN SCR-VEC-FST(WSS-IDX-IRDC)
           ELSE
              MOVE SPACES TO SCR-IND-ENG IN SCR-VEC-ENG(WSS-IDX-IRDC)
              MOVE SPACES TO SCR-IND-FST IN SCR-VEC-FST(WSS-IDX-IRDC).

           MOVE 'S'    TO SCR-IND-ENG IN SCR-VEC-ENG(WSS-IDX-ILDC).
           MOVE 'S'    TO SCR-IND-FST IN SCR-VEC-FST(WSS-IDX-ILDC).
           PERFORM EGR-FPEN-CIC.

       NO-ENGANCHA.
      *-------------
           IF PGM-STAT-CLF-OKS
               MOVE 'CLF'               TO WSS-MSG-CLF-CLF
               MOVE SCR-CCPP            TO WSS-MSG-CLF-CMD
               MOVE CLF-MSC-STAT IN CLF TO WSS-MSG-CLF-STS
               MOVE SCR-IND-OCIC        TO WSS-MSG-CLF-CIC
               MOVE 'DEU'       TO MSG-COD-SIST
               MOVE WSS-MSG-CLF TO MSG-COD-MENS
               PERFORM GET-MSG
               IF SCR-IND-OCIC = 'S'
                   MOVE CLF-CAI-ICLF IN CLF-FLD TO WSS-CPT-CAI
                   MOVE CLF-IIC-ICLF IN CLF-FLD TO WSS-CPT-IIC
                   PERFORM MSG-CLF
               ELSE
                   PERFORM MSG-CLF.
      *>>>>
       FIN-CMN-ING.
           EXIT.

       CMN-ACC SECTION.
       INI-CMN-ACC.
           IF SCR-STAT = SCR-STAT-ABT OR SCR-VFLD = SCR-VFLD-NOT
               MOVE 'ACCION NO REALIZADA' TO FRM-MENS
               GO TO FIN-CMN-ACC.
      *<<<< INI_CMN_ACC
      *FLB CST  10-FEB-1995
           IF SCR-CMND = CMND-VRF
               MOVE SPACES TO MSG-COD-MENS
               MOVE ZEROES TO WSS-TOT-CLI
                              WSS-TOT-ARC
                              WSS-TOT-ARG
               PERFORM LDC-PRO-VCL
               IF MSG-COD-MENS > SPACES
                   MOVE 'S' TO SCR-IERR
                   GO TO ERR-ACC.
      *AFRI-INI-SEP-2005
           IF SCR-CMND NOT = CMND-VRF
               GO TO CON-CON-CLF.
           MOVE CLF-CAI-ICLF IN CLF-FLD TO VLI-OPC-CAI-IOPC.
           MOVE CLF-IIC-ICLF IN CLF-FLD TO VLI-OPC-IIC-IOPC.
           MOVE 'VRF'                     TO VLI-CMND.
           IF SCR-HDR-MRCA = 'BCS'
               MOVE 'NOVA'                TO VLI-COD-ENTI
           ELSE
               MOVE 'BCI'                 TO VLI-COD-ENTI.
           MOVE 'LDC'                TO VLI-COD-SIST.
           MOVE IDD-FSIS IN IDD-VARI TO VLI-VIDD.
           MOVE FIO-MSFL IN FIO-CTTS TO VLI-MSFL.
           MOVE VLI-CMMA   TO SYS-CMMA.
           MOVE 'LDCPPLIC' TO SYS-PROG.
           MOVE VLI-TCMA   TO SYS-TCMA.
           MOVE SYS-LINK   TO SYS-CMND.
           PERFORM GNS-PRO-SYS.
           MOVE SYS-CMMA TO VLI-CMMA.
           MOVE VLI-MSFL TO FIO-MSFL.
           IF VLI-COD-MENS > SPACES
               MOVE VLI-COD-MENS         TO MSG-COD-MENS
               MOVE 'S' TO SCR-IERR
               GO TO ERR-ACC.
       CON-CON-CLF.
      *AFRI-FIN-SEP-2005
      *AFRI-INI-OCT2005
      *     IF SCR-CMND = CMND-VRL
      *         PERFORM KEY-ALL-CLF

      *AFRI-INI/CHC/OCT-2007/LOF
           IF SCR-CMND NOT = CMND-VRL
               GO TO SIG-VAL-VLR.
           PERFORM KEY-ALL-CLF.
           MOVE CLF-CIC-ICLF IN CLF TO LDC-CIC-ICLF IN LDC.
           MOVE ZEROES              TO LDC-NUM-ILDC IN LDC.
           MOVE FIO-GET-NLS TO FIO-CMND.
       LUP-LEE-LDC.
           PERFORM LDC-FIO-LDC.
           IF NOT ( FIO-STAT-OKS AND
            CLF-CIC-ICLF IN CLF = LDC-CIC-ICLF IN LDC )
               GO TO CON-VAL-VLR.
           MOVE LDC-CIC-ICLF IN LDC TO LCC-CIC-ICLF IN LCC.
           MOVE LDC-NUM-ILDC IN LDC TO LCC-NUM-ILCC IN LCC.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM LDC-FIO-LCC.
           IF NOT FIO-STAT-OKS
               GO TO CON-VAL-VLR.
           MOVE LCC-CIC-ILIC IN LCC TO WSS-CIC-ILIC IN WSS-VARI.
           MOVE LCC-CIC-ILIC IN LCC TO LCC-CIC-ILIC IN LCC.
           MOVE 'LCC-KEY-ILIC' TO FIO-AKEY.
           MOVE FIO-GET-NLS TO FIO-CMND.
       LUP-LEE-LCC.
           PERFORM LDC-FIO-LCC.
           IF NOT ( FIO-STAT-OKS AND
            LCC-CIC-ILIC IN LCC = WSS-CIC-ILIC IN WSS-VARI )
               MOVE FIO-GET-NXT TO FIO-CMND
               GO TO LUP-LEE-LDC.
           IF (LCC-CAI-ICLF IN LCC = CLF-CAI-ICLF IN CLF-FLD AND
            LCC-IIC-ICLF IN LCC = CLF-IIC-ICLF IN CLF-FLD)
               MOVE 'LCC-KEY-ILIC' TO FIO-AKEY
               MOVE FIO-GET-NXT TO FIO-CMND
               GO TO LUP-LEE-LCC
           ELSE
               MOVE 'YA EXI LCC' TO MSG-COD-MENS
               MOVE 'DEU' TO MSG-COD-SIST
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS
               GO TO FIN-CMN-ACC.
       CON-VAL-VLR.
      *AFRI-FIN/CHC/OCT-2007/LOF

               MOVE FIO-GET-KEY-UPD TO FIO-CMND
               PERFORM LDC-FIO-CLF
               IF FIO-STAT-OKS AND
                  CLF-STP-ITRN IN CLF NOT = SCR-UMOD
                   MOVE FIO-ULK-REC TO FIO-CMND
                   PERFORM LDC-FIO-CLF
                   MOVE FIO-BCK-OUT TO FIO-CMND
                   PERFORM LDC-FIO-CLF
                   MOVE 'GNS' TO MSG-COD-SIST
                   MOVE 'GNSACCSSIMUL' TO MSG-COD-MENS
                   PERFORM GET-MSG
                   MOVE MSG-GLS-DESC TO FRM-MENS
                   GO TO FIN-CMN-ACC
               ELSE
                   GO TO CMN-ACC-VRL.
      *AFRI-FIN-OCT2005
      *AFRI-INI/CHC/OCT-2007/LOF
       SIG-VAL-VLR.
      *AFRI-FIN/CHC/OCT-2007/LOF
      *>>>>
           PERFORM KEY-ALL-CLF.
           MOVE FIO-GET-KEY-UPD TO FIO-CMND.
           PERFORM LDC-FIO-CLF.
           IF FIO-STAT-OKS AND
              CLF-STP-ITRN IN CLF NOT = SCR-UMOD
               MOVE FIO-ULK-REC TO FIO-CMND
               PERFORM LDC-FIO-CLF
               MOVE FIO-BCK-OUT TO FIO-CMND
               PERFORM LDC-FIO-CLF
               MOVE 'GNS' TO MSG-COD-SIST
               MOVE 'GNSACCSSIMUL' TO MSG-COD-MENS
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS
               GO TO FIN-CMN-ACC.
           IF NOT FIO-STAT-OKS
               GO TO FIN-CMN-ACC.
           PERFORM RET-ALL-CLF.
      *<<<< CMN_ACC
      *AFRI-INI-OCT2005
       CMN-ACC-VRL.
      *AFRI-FIN-OCT2005
      *FLB CST  21-SEP-1994 CCU FUNCIONE LUEGO MCA/CMX Y ANTES ACA
      *    MOVE 'I' TO CLF-COD-STAT IN CLF.

      *RGD-INI 02-08-2011 DINERO INSTANTANEO
           IF SCR-CMND = CMND-VRF
              PERFORM VAL-VRF-LDIN
              IF WSS-IND-ECAPR NOT = SPACES
                 PERFORM BUSCA-MSG-RECHAZO-LDI
                 MOVE 'S' TO SCR-IERR
                 GO TO FIN-CMN-ACC.
      *RGD-FIN 02-08-2011
      *FLB CST  10-FEB-1995
           IF SCR-CMND = CMND-VRF
      *AFRI-INI-OCT2005
           OR SCR-CMND = CMND-VRL
      *AFRI-INI-OCT2005
               MOVE SCR-INST-HCM TO SCR-INST
      *FLB CST  13-JAN-1995
               IF SCR-COD-STAT IN SCR-VARI = 'X'
                   MOVE ' ' TO CLF-COD-STAT IN CLF
                   MOVE 'A' TO CLF-MSC-STAT IN CLF
               ELSE
                   MOVE 'V' TO CLF-MSC-STAT IN CLF.

FM0194     PERFORM GET-FHOY.
FM0194*    Fecha Transaccion
FM0194     MOVE HOY-FHOY TO CLF-FEC-FTRN IN CLF.
FM0194*    Hora Transaccion
FM0194     MOVE HOY-HHOY TO CLF-HRA-HRTR IN CLF.
FM0194*    Codigo Origen transaccion
FM0194     MOVE SCR-OTRN TO CLF-COD-OTRN IN CLF.
FM0194*    Autor Transaccion
FM0194     MOVE SCR-USER TO CLF-COD-ATRN IN CLF.

           MOVE FIO-MOD TO FIO-CMND.
           PERFORM LDC-FIO-CLF.
           MOVE FIO-STAT TO PGM-STAT-CLF.
           IF FIO-STAT-OKS
               MOVE 'ACCLFOK' TO MSG-COD-TMSG
               MOVE CLF-MSC-STAT IN CLF TO MSG-COD-CMSG
           ELSE
               MOVE 'ACCLFER' TO MSG-COD-TMSG
               MOVE CLF-MSC-STAT IN CLF TO MSG-COD-CMSG.

       ERR-ACC.
      *GET-MSG Busca mensaje en tabla
           MOVE 'DEU' TO MSG-COD-SIST.
           PERFORM GET-MSG.
           PERFORM MSG-CLF.
      *>>>>
       FIN-CMN-ACC.
           EXIT.

       CMN-ELI SECTION.
       INI-CMN-ELI.
           PERFORM KEY-ALL-CLF.
           MOVE FIO-GET-KEY-UPD TO FIO-CMND.
           PERFORM LDC-FIO-CLF.
           IF FIO-STAT-OKS AND
              CLF-STP-ITRN IN CLF NOT = SCR-UMOD
               MOVE FIO-ULK-REC TO FIO-CMND
               PERFORM LDC-FIO-CLF
               MOVE FIO-BCK-OUT TO FIO-CMND
               PERFORM LDC-FIO-CLF
               MOVE 'GNS' TO MSG-COD-SIST
               MOVE 'GNSACCSSIMUL' TO MSG-COD-MENS
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS
               GO TO FIN-CMN-ELI.
           IF NOT FIO-STAT-OKS
               GO TO FIN-CMN-ELI.
      *<<<< CMN_ELI
           PERFORM DEL-ARC.
           IF MSG-COD-MENS > SPACES
      *        ERROR INCONSISTENCIA EN LA ELIMINACION : INFORMAR
               GO TO FIN-CMN-ELI.

           PERFORM DEL-ARG.
           IF MSG-COD-MENS > SPACES
      *        ERROR INCONSISTENCIA EN LA ELIMINACION : INFORMAR
               GO TO FIN-CMN-ELI.

           PERFORM DEL-LDC.
           IF MSG-COD-MENS > SPACES
      *        ERROR INCONSISTENCIA EN LA ELIMINACION : INFORMAR
               GO TO FIN-CMN-ELI.

           PERFORM DEL-RDC.
           IF MSG-COD-MENS > SPACES
      *       ERROR INCONSISTENCIA EN LA ELIMINACION : INFORMAR
              GO TO FIN-CMN-ELI.
      *AFRI-INI-SEP2005
           PERFORM DEL-LCC.
           IF MSG-COD-MENS > SPACES
      *       ERROR INCONSISTENCIA EN LA ELIMINACION : INFORMAR
              GO TO FIN-CMN-ELI.
           PERFORM DEL-ACG.
           IF MSG-COD-MENS > SPACES
      *       ERROR INCONSISTENCIA EN LA ELIMINACION : INFORMAR
              GO TO FIN-CMN-ELI.
      *AFRI-FIN-SEP2005
      *>>>>
           MOVE FIO-DEL TO FIO-CMND.
           PERFORM LDC-FIO-CLF.
       FIN-CMN-ELI.
           EXIT.


       STP-EXIT SECTION.
       INI-STP-EXIT.
           MOVE SCR-PROG TO PGM-PROG.
           MOVE SCR-NTRN TO PGM-NTRN.

           MOVE SCR-PROV TO SCR-PROG.
           MOVE SCR-NTRV TO SCR-NTRN.

           MOVE PGM-PROG TO SCR-PROV
           MOVE PGM-NTRN TO SCR-NTRV.
       FIN-STP-EXIT.
           EXIT.

       SCR-EXIT SECTION.
       INI-SCR-EXIT.
           MOVE 'P'      TO SCR-ICMN.
           MOVE SCR-NTRN TO SYS-NTRN.
           MOVE SCR-VARI TO SYS-CMMA.
           MOVE SCR-TCMA TO SYS-TCMA.
           MOVE SYS-RTRN TO SYS-CMND.
      *PTC-INI
           IF NOT SCR-OFRM-SRV
      *PTC-FIN
           PERFORM GNS-PRO-SYS.
       FIN-SCR-EXIT.
           EXIT.

       SCR-PUTA SECTION.
       INI-SCR-PUTA.
      *PTC-INI
           IF FRM-SUAR EQUAL FRM-SUAR-MAL OR FRM-SUAR-CLR
               MOVE 'S' TO SCR-IERR.
      *PTC-FIN
           MOVE SCR-NMAP TO FRM-NAME.
           MOVE SCR-NLIB TO FRM-NLIB.
           MOVE CLF-FLD TO FRM-DFLD.
           MOVE FRM-PUT-ALL TO FRM-CMND.
           PERFORM GNS-PRO-FRM.
       FIN-SCR-PUTA.
           EXIT.

       SCR-MSSG SECTION.
       INI-SCR-MSSG.
           IF FRM-MEN1 NOT > SPACES
               MOVE SPACES TO FRM-MEN1.
           IF FRM-MEN2 NOT > SPACES
               MOVE SPACES TO FRM-MEN2.
           MOVE FRM-MENS TO CLF-GLS-MENS.
       FIN-SCR-MSSG.
           EXIT.

       SCR-GFLD SECTION.
       INI-SCR-GFLD.
           MOVE SCR-NMAP TO FRM-NAME.
           MOVE SCR-NLIB TO FRM-NLIB.
           MOVE FRM-GET-ALL TO FRM-CMND.
           PERFORM GNS-PRO-FRM.
           MOVE SPACES TO FRM-MENS.
           IF NOT ( FRM-FFLD = FRM-FFLD-RET  OR FRM-FFLD-PF10 OR
                               FRM-FFLD-PF12 OR FRM-FFLD-PF3 )
               MOVE 'PFSINV    ' TO MSG-COD-MENS
               MOVE 'GNS' TO MSG-COD-SIST
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS
               PERFORM FST-FLD-CLF
               PERFORM SCR-MSSG
               PERFORM SCR-PUTA
               PERFORM SCR-EXIT.
           MOVE FRM-DFLD TO CLF-FLD.
           IF FRM-STAT-ABT
               GO TO FIN-SCR-GFLD.
           MOVE FRM-SUAR-OKS TO FRM-SUAR.
           PERFORM VAL-NUM-KEY-CLF.
           IF FRM-SUAR EQUAL FRM-SUAR-MAL OR FRM-SUAR-CLR
      *PTC-INI
               MOVE 'S' TO SCR-IERR
      *PTC-FIN
               PERFORM SCR-MSSG
               PERFORM EDT-KEY-CLF
               PERFORM SCR-PUTA
               PERFORM SCR-EXIT.
           PERFORM VAL-NUM-FLD-CLF.
           IF FRM-SUAR EQUAL FRM-SUAR-MAL OR FRM-SUAR-CLR
      *PTC-INI
               MOVE 'S' TO SCR-IERR
      *PTC-FIN
               PERFORM SCR-MSSG
               PERFORM EDT-KEY-CLF
               PERFORM EDT-FLD-CLF
               PERFORM SCR-PUTA
               PERFORM SCR-EXIT.
           PERFORM VAL-MKY-CLF.
           IF FRM-SUAR EQUAL FRM-SUAR-MAL OR FRM-SUAR-CLR
      *PTC-INI
               MOVE 'S' TO SCR-IERR
      *PTC-FIN
               GO TO ERR-SCR-GFLD.
           PERFORM VAL-FLD-CLF.
           IF FRM-SUAR EQUAL FRM-SUAR-MAL OR FRM-SUAR-CLR
               GO TO ERR-SCR-GFLD.
           PERFORM VAL-CON-FLD-CLF.
           IF NOT ( FRM-SUAR EQUAL FRM-SUAR-MAL OR FRM-SUAR-CLR )
               GO TO FIN-SCR-GFLD.
           IF FRM-UCUR NOT > SPACES
               PERFORM FST-FLD-CLF.
       ERR-SCR-GFLD.
      *PTC-INI
           MOVE 'S' TO SCR-IERR.
      *PTC-FIN
           PERFORM SCR-MSSG.
           PERFORM EDT-KEY-CLF.
           PERFORM EDT-FLD-CLF.
           PERFORM SCR-PUTA.
           PERFORM SCR-EXIT.
       FIN-SCR-GFLD.
           MOVE SCR-STAT-MOD TO SCR-STAT.

       GET-ACC SECTION.
       INI-GET-ACC.
           MOVE SCR-NMAP TO FRM-NAME.
           MOVE SCR-NLIB TO FRM-NLIB.
           MOVE FRM-GET-ALL TO FRM-CMND.
           PERFORM GNS-PRO-FRM.
           IF NOT ( FRM-FFLD = FRM-FFLD-RET  OR FRM-FFLD-PF10 OR
                               FRM-FFLD-PF12 OR FRM-FFLD-PF3 )
               MOVE 'PFSINV    ' TO MSG-COD-MENS
               MOVE 'GNS' TO MSG-COD-SIST
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO CLF-GLS-MEN2
               MOVE SCR-PRMT     TO CLF-GLS-MEN1
               PERFORM FST-MSG
               PERFORM SCR-PUTA
               PERFORM SCR-EXIT.
           MOVE FRM-DFLD TO CLF-FLD.
           IF NOT ( ( FRM-FFLD = FRM-FFLD-PF12 OR FRM-FFLD-PF3 ) OR
                      SCR-CONF > SPACES )
               PERFORM VAL-NUM-KEY-CLF
               PERFORM VAL-NUM-FLD-CLF.
       FIN-GET-ACC.
           MOVE SCR-STAT-SON TO SCR-STAT.

       GET-CON SECTION.
       INI-GET-CON.
           MOVE SCR-NMAP TO FRM-NAME.
           MOVE SCR-NLIB TO FRM-NLIB.
           MOVE FRM-GET-ALL TO FRM-CMND.
           PERFORM GNS-PRO-FRM.
           IF NOT ( FRM-FFLD = FRM-FFLD-RET  OR FRM-FFLD-PF10 OR
                               FRM-FFLD-PF12 OR FRM-FFLD-PF3 )
               MOVE 'PFSINV    ' TO MSG-COD-MENS
               MOVE 'GNS' TO MSG-COD-SIST
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO CLF-GLS-MEN2
               MOVE SCR-PRMT     TO CLF-GLS-MEN1
               PERFORM FST-MSG
               PERFORM SCR-PUTA
               PERFORM SCR-EXIT.
           MOVE FRM-DFLD TO CLF-FLD.
       FIN-GET-CON.
           MOVE SCR-STAT-CON TO SCR-STAT.

       CLR-MSG SECTION.
       INI-CLR-MSG.
           MOVE SPACES TO CLF-GLS-MENS.
       FIN-CLR-MSG.
           EXIT.

       HBL-IKY SECTION.
       INI-HBL-IKY.
      *PTC-INI
           IF NOT SCR-OFRM-SRV
      *PTC-FIN
           IF SCR-DESDE-CMN
               MOVE CLF-GLS-MENS TO FRM-MENS
               MOVE LOW-VALUES TO CLF-FLD
      * FLB  7-NOV-1994
               PERFORM CLR-KEY-CLF

               IF FRM-MENS < SPACES
                   MOVE LOW-VALUES TO CLF-GLS-MENS
               ELSE
                   MOVE FRM-MENS TO CLF-GLS-MENS.
           PERFORM PRO-FLD-CLF.
           PERFORM PRO-MKY-CLF.
           PERFORM UNP-IKY-CLF.
           PERFORM FST-KEY-CLF.
       FIN-HBL-IKY.
           EXIT.

       HBL-KEY SECTION.
       INI-HBL-KEY.
      *PTC-INI
           IF NOT SCR-OFRM-SRV
      *PTC-FIN
           IF SCR-DESDE-CMN
               MOVE CLF-GLS-MENS TO FRM-MENS
               MOVE LOW-VALUES TO CLF-FLD
               IF FRM-MENS < SPACES
                   MOVE LOW-VALUES TO CLF-GLS-MENS
               ELSE
                   MOVE FRM-MENS TO CLF-GLS-MENS.
           MOVE FRM-CPSF-AEY TO FRM-CPIM-AEY.
           PERFORM PRO-FLD-CLF.
           MOVE '1' TO FRM-CPIM-AEY.
           PERFORM UNP-KEY-CLF.
           PERFORM FST-KEY-CLF.
      *<<<< FIN_HBL_KEY
      *>>>>
       FIN-HBL-KEY.
           EXIT.

       HBL-FLD SECTION.
       INI-HBL-FLD.
           PERFORM UNP-MKY-CLF.
           PERFORM UNP-FLD-CLF.
           PERFORM FST-FLD-CLF.
      *ADA-INI 15-NOV-2002
      *<<<< FIN_HBL_FLD
      *RVM-ADA-INI 10.08.2004
      *Protege el campo en caso de que el programa se ejecuta desde CICS
      *    IF NOT SCR-OFRM-SRV
      *        MOVE FRM-CPIM-AEY TO CLF-COD-CAPR-ATR IN CLF-FLD.
      *RVM-ADA-FIN 10.08.2004
      *>>>>
      *ADA-FIN 15-NOV-2002
       FIN-HBL-FLD.
           EXIT.

       FST-MSG SECTION.
       INI-FST-MSG.
           MOVE -1 TO CLF-GLS-MENS-LEN.
       FIN-FST-MSG.
           EXIT.

       PRO-ALL SECTION.
       INI-PRO-ALL.
           PERFORM PRO-KEY-CLF.
           PERFORM PRO-FLD-CLF.
           PERFORM FST-MSG.
       FIN-PRO-ALL.
           EXIT.

       SCR-TRL SECTION.
       INI-SCR-TRL.
      * PTC-INI
           IF SCR-STAT NOT = SCR-STPP
               MOVE FRM-SUAR-MAL TO FRM-SUAR.
      * PTC-FIN
           IF FRM-MEN1 NOT > SPACES
               MOVE SCR-PRMT TO FRM-MEN1.
           IF SCR-STAT = SCR-STAT-MOD
               PERFORM HBL-FLD
               PERFORM SCR-MSSG
               PERFORM EDT-KEY-CLF
               PERFORM EDT-FLD-CLF
               PERFORM SCR-PUTA
               MOVE SCR-INST-GFL TO SCR-INST
               PERFORM SCR-EXIT.
           IF SCR-STAT = SCR-STAT-SON
               PERFORM PRO-ALL
               PERFORM SCR-MSSG
               PERFORM EDT-KEY-CLF
               PERFORM EDT-FLD-CLF
               PERFORM SCR-PUTA
               MOVE SCR-INST-GCS TO SCR-INST
               PERFORM SCR-EXIT.
      *ASUME SCR-STAT-CON.
           MOVE SCR-STAT-CON TO SCR-STAT.
      *    MOVE FRM-CPSF-AEY TO FRM-CPIM-AEY.
           PERFORM PRO-ALL.
           PERFORM SCR-MSSG.
           PERFORM EDT-KEY-CLF.
           PERFORM EDT-FLD-CLF.
           PERFORM SCR-PUTA.
           MOVE SCR-INST-GAB TO SCR-INST.
           PERFORM SCR-EXIT.
       FIN-SCR-TRL.
           EXIT.

       DESSCRTRL SECTION.
       INI-DESSCRTRL.
           IF SCR-INST = SCR-INST-GCF
                  PERFORM SCR-GCNF
                  GO TO FIN-DESSCRTRL.
           MOVE SCR-VFLD-NOT TO SCR-VFLD.
           MOVE FRM-FFLD TO SCR-FFLD.
           IF SCR-STAT = SCR-STAT-ABT OR SCR-STAT-CON
                  GO TO FIN-DESSCRTRL.
           IF SCR-FFLD-RET OR SCR-FFLD-PF10
                  MOVE SCR-VFLD-YES TO SCR-VFLD
                  PERFORM PRO-CONF.
       FIN-DESSCRTRL.
           IF SCR-FFLD-PF10 OR SCR-FFLD-PF3
                 MOVE SCR-INST-HCM TO SCR-INST
           ELSE
                 MOVE SCR-INST-HKY TO SCR-INST.
       EXT-DESSCRTRL.
           EXIT.

       PRO-CONF SECTION.
       INI-PRO-CONF.
      *<<<< INI_PRO_CONF AND PGM_PU
      *AFRI-INI-SEP2005
           IF SCR-CMND = CMND-ALF
               MOVE 'F' TO CLF-MSC-STAT IN CLF-FLD
               PERFORM GET-FHOY
               MOVE HOY-DHOY  TO CLF-NUM-DING IN CLF-FLD
               MOVE HOY-MHOY  TO CLF-NUM-MING IN CLF-FLD
               MOVE HOY-SHOY  TO CLF-NUM-SING IN CLF-FLD
               MOVE HOY-AHOY  TO CLF-NUM-AING IN CLF-FLD
           ELSE
           IF SCR-CMND = CMND-CLC
               MOVE 'N' TO CLF-MSC-STAT IN CLF-FLD
           ELSE
      *AFRI-FIN-SEP2005
           IF SCR-CMND = CMND-ACA OR CMND-REV
               MOVE 'A' TO CLF-MSC-STAT IN CLF-FLD
           ELSE
           IF SCR-CMND = CMND-CIE
               MOVE 'C' TO CLF-MSC-STAT IN CLF-FLD
           ELSE
           IF SCR-CMND = CMND-REA
               MOVE SPACES TO CLF-COD-RAZC IN CLF-FLD
               MOVE SPACES TO FRM-GLS-RAZC IN CLF-FLD
               MOVE 'I' TO CLF-MSC-STAT    IN CLF-FLD
               MOVE ZEROES TO CLF-FEC-FCIE IN CLF-FLD
           ELSE
      *FLB CST  13-JAN-1995
      *AFRI-INI-SEP-2005
           IF SCR-CMND = CMND-VRL AND SCR-COD-STAT = 'M'
               MOVE 'V' TO CLF-MSC-STAT IN CLF-FLD
           ELSE
           IF SCR-CMND = CMND-VRL AND SCR-COD-STAT = 'X'
               MOVE 'A' TO CLF-MSC-STAT IN CLF-FLD
           ELSE
      *AFRI-FIN-SEP-2005
           IF SCR-CMND = CMND-VRF AND SCR-COD-STAT = 'M'
               MOVE 'V' TO CLF-MSC-STAT IN CLF-FLD
           ELSE
           IF SCR-CMND = CMND-VRF AND SCR-COD-STAT = 'X'
               MOVE 'A' TO CLF-MSC-STAT IN CLF-FLD
           ELSE
               MOVE 'I' TO CLF-MSC-STAT IN CLF-FLD.

           MOVE 'DEU'  TO MSC-COD-SIST.
           MOVE 'STA ' TO MSC-COD-TMSC IN MSC.
           MOVE CLF-MSC-STAT IN CLF-FLD TO MSC-COD-CMSC IN MSC.
           PERFORM BUS-MSC.
           IF NOT MSG-COD-MENS > SPACES
               MOVE MSC-GLS-DESC IN MSC TO
                    FRM-GLS-STAT IN CLF-FLD
           ELSE
               MOVE SPACES TO FRM-GLS-STAT IN CLF-FLD.

      *>>>>
      *PTC-INI
           IF SCR-OFRM-SRV AND
              SCR-CONF NOT > SPACES
                MOVE SPACES TO FRM-MENS.
      *PTC-FIN
           IF FRM-MENS NOT > SPACES
               IF SCR-CONF NOT > SPACES
                   GO TO FIN-PRO-CONF
               ELSE
                   MOVE SCR-CONF TO FRM-MENS
           ELSE
               IF FRM-MEN1 NOT > SPACES
                   MOVE SCR-CONF TO FRM-MEN1.
           PERFORM PRO-KEY-CLF.
           PERFORM PRO-FLD-CLF.
           PERFORM FST-MSG.
           PERFORM SCR-MSSG.
           IF SCR-STAT = SCR-STAT-MOD
               PERFORM EDT-KEY-CLF
               PERFORM EDT-FLD-CLF.
           PERFORM SCR-PUTA.
           MOVE SCR-INST-GCF TO SCR-INST.
           PERFORM SCR-EXIT.
       FIN-PRO-CONF.
           EXIT.

       SCR-GCNF SECTION.
       INI-SCR-GCNF.
           MOVE SCR-NMAP TO FRM-NAME.
           MOVE SCR-NLIB TO FRM-NLIB.
           MOVE FRM-GET-ALL TO FRM-CMND.
           PERFORM GNS-PRO-FRM.
           IF NOT ( FRM-FFLD = FRM-FFLD-RET  OR FRM-FFLD-PF10 OR
                               FRM-FFLD-PF12 OR FRM-FFLD-PF3  OR
                               FRM-FFLD-PF4 )
               MOVE 'PFSINV    ' TO MSG-COD-MENS
               MOVE 'GNS' TO MSG-COD-SIST
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO CLF-GLS-MEN2
               MOVE SCR-CONF     TO CLF-GLS-MEN1
               PERFORM FST-MSG
               PERFORM SCR-PUTA
               PERFORM SCR-EXIT.
           MOVE FRM-DFLD TO CLF-FLD.
           MOVE FRM-FFLD TO SCR-FFLD.
           IF FRM-FFLD = FRM-FFLD-PF3
               MOVE SCR-VFLD-NOT TO SCR-VFLD
           ELSE
           IF FRM-FFLD = FRM-FFLD-RET OR FRM-FFLD-PF10 OR FRM-FFLD-PF4
               MOVE SCR-VFLD-YES TO SCR-VFLD
               PERFORM VAL-NUM-KEY-CLF
               PERFORM VAL-NUM-FLD-CLF
           ELSE
           IF FRM-FFLD = FRM-FFLD-PF12
               MOVE SCR-STPP TO SCR-STAT
               IF SCR-STAT = SCR-STAT-MOD
                   PERFORM VAL-NUM-KEY-CLF
                   PERFORM VAL-NUM-FLD-CLF
                   PERFORM SCR-TRL
               ELSE
                   MOVE SCR-VFLD-NOT TO SCR-VFLD.
       FIN-SCR-GCNF.
           EXIT.

      * PGM-EBR-ALL SECTION.
      * INI-PGM-EBR-ALL.
      *     MOVE 'GNS' TO FIO-SIST.
      *     MOVE FIO-EBR-ALL TO FIO-CMND.
      *     PERFORM GNS-FIO-TAB.
      * FIN-PGM-EBR-ALL.
      *     EXIT.

       RET-STT-CLF SECTION.
       INI-RET-STT-CLF.
           IF SCR-CCPP = 'ING'
               MOVE 'I' TO CLF-MSC-TACC IN CLF
               MOVE 'I' TO CLF-MSC-STAT IN CLF
           ELSE
           IF SCR-CCPP = 'MOD'
               MOVE 'M' TO CLF-MSC-TACC IN CLF
               MOVE 'M' TO CLF-MSC-STAT IN CLF.
       FIN-RET-STT-CLF.
           EXIT.

       RET-HDR-CLF SECTION.
       INI-RET-HDR-CLF.
           PERFORM GET-FHOY.
      *    Fecha Transaccion
           MOVE HOY-FHOY TO CLF-FEC-FTRN IN CLF.
      *    Hora Transaccion
           MOVE HOY-HHOY TO CLF-HRA-HRTR IN CLF.
      *    Codigo Origen transaccion
      *<<<< NOT PGM_VMS
           MOVE SCR-OTRN TO CLF-COD-OTRN IN CLF.
      *    Autor Transaccion
           MOVE SCR-USER TO CLF-COD-ATRN IN CLF.
      *>>>>
       FIN-RET-HDR-CLF.
           EXIT.

       COPY LDCBUCLF.
       COPY GNSBVNUM.
       COPY LDCBFCLF.
       COPY GNSBFMSG.
       COPY GNSBGSYS.
       COPY GNSBGDTC.
      *PTC-INI
      *PTC-SUB
      * ISP  10-MAY-2001 13:46:35 
      * COPY GNSBGFRM.
       COPY GNSBG3CF.
      *PTC-FIN
       COPY GNSBGMSG.
       COPY GNSBEKEY.
       COPY GNSBIABT.
       COPY GNSBBTAB.
       COPY GNSBVCOD.
       COPY GNSBVTAB.
       COPY GNSBFTAB.
       COPY GNSBBMSC.
       COPY GNSBVIND.
       COPY GNSBVMSC.
       COPY GNSBFMSC.
       COPY GNSBVIDC.
       COPY GNSBPVRF.
       COPY GNSBEGLS.
       COPY GNSBGFEC.
       COPY GNSBGHOY.
       COPY TABBBOFI.
       COPY TABBVOFI.
       COPY TABBFOFI.
       COPY TABBBUSR.
       COPY TABBVTDU.
       COPY TABBFUSR.
      *PTC-INI
       COPY GNSBGQUE.
       COPY GNSBGTSK.
      *PTC-FIN

      *PTC ini
       COPY GNSBGQUE.
      *PTC fin
      *<<<< ( EOF ) AND ( NOT PGM_VSI )
       COPY GNSBGVSM.
       COPY GNSBHVSM.
      *>>>>
      *<<<< EOF
      *  Codigo adicional para rutina LDCPSVCL
       COPY LDCBGVCL.
       COPY LDCBKVCL.
      *  Codigo adicional para rutina LDCPSMCA
       COPY LDCBGMCA.
       COPY LDCBKMCA.

      *  CODIGO ADICIONAL PARA ENGANCHE PROGRAMAS
       COPY LDCBGMPT.

      *<<<< PGM_PU
       EGR-FPEN-CIC SECTION.
       INI-EGR-FPEN-CIC.
           MOVE CLF-CAI-ICLF IN CLF-FLD TO SCR-CAI-ICLF.
           MOVE CLF-IIC-ICLF IN CLF-FLD TO SCR-IIC-ICLF.
           PERFORM CRG-TBL-ENG.
           ADD 1 TO SCR-IPRO.
           IF SCR-IND-ENG IN SCR-VEC-ENG(SCR-IPRO) = SPACES
               GO TO INI-EGR-FPEN-CIC.
           MOVE WSS-INST-FPEN-CIC TO SCR-INST-EXT.
           MOVE WSS-PROG(SCR-IPRO) TO SYS-PROG.
           MOVE SCR-VARI TO SYS-CMMA.
      *<<<< NOT PGM_DB2
           MOVE SCR-TCMA TO SYS-TCMA.
           MOVE SYS-XCTL TO SYS-CMND.
           IF NOT SCR-OFRM-SRV
               PERFORM GNS-PRO-SYS.
       FIN-EGR-FPEN-CIC.
           EXIT.
      *>>>>
      *<<<< PGM_PU
       MSG-CLF SECTION.
       INI-MSG-CLF.
           MOVE MSG-GLS-DESC   TO WSS-CPT-DESC.
           MOVE WSS-CPT-NOMB-R TO CPT-STRN.
           PERFORM CPT-BLKS.
           MOVE CPT-STRN       TO FRM-MENS.
       FIN-MSG-CLF.
           EXIT.

       BCK-OUT SECTION.
       INI-BCK-OUT.
       FIN-BCK-OUT.
           EXIT.

       DEL-LDC SECTION.
       INI-DEL-LDC.
           MOVE SPACES TO LDC-KEY-ILDC IN LDC.
           MOVE CLF-KEY-ICLF IN CLF TO LDC-CIC-ICLF IN LDC.
           MOVE FIO-GET-NLS TO FIO-CMND.
       LUP-DEL-LDC.
           PERFORM LDC-FIO-LDC.
           IF FIO-STAT-OKS
               MOVE FIO-END-BRW TO FIO-CMND
               PERFORM LDC-FIO-LDC.

           IF NOT ( FIO-STAT-OKS AND
              CLF-KEY-ICLF IN CLF = LDC-CIC-ICLF IN LDC )
               GO TO FIN-DEL-LDC.

           MOVE FIO-GET-KEY-UPD TO FIO-CMND.
           PERFORM LDC-FIO-LDC.
           IF NOT FIO-STAT-OKS
               GO TO FIN-DEL-LDC.

           MOVE FIO-DEL TO FIO-CMND.
           PERFORM LDC-FIO-LDC.
           IF NOT FIO-STAT-OKS
               MOVE 'DEU'        TO MSG-COD-SIST
               MOVE 'LDC    DEL' TO MSG-COD-MENS
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS
               GO TO FIN-DEL-LDC.

           MOVE CLF-KEY-ICLF IN CLF TO LDC-CIC-ICLF IN LDC.
           MOVE FIO-GET-NLS TO FIO-CMND.
           GO TO LUP-DEL-LDC.
       FIN-DEL-LDC.
           EXIT.

       DEL-ARC SECTION.
       INI-DEL-ARC.
           MOVE SPACES TO ARC-KEY-IARC IN ARC.
           MOVE CLF-KEY-ICLF IN CLF TO ARC-CIC-ICLF IN ARC.
           MOVE FIO-GET-NLS TO FIO-CMND.
       LUP-DEL-ARC.
           PERFORM LDC-FIO-ARC.
           IF FIO-STAT-OKS
               MOVE FIO-END-BRW TO FIO-CMND
               PERFORM LDC-FIO-ARC.

           IF NOT ( FIO-STAT-OKS AND
              ARC-CIC-ICLF IN ARC = CLF-KEY-ICLF IN CLF )
               GO TO FIN-DEL-ARC.

           MOVE FIO-GET-KEY-UPD TO FIO-CMND.
           PERFORM LDC-FIO-ARC.
           IF NOT FIO-STAT-OKS
               GO TO FIN-DEL-ARC.

           MOVE FIO-DEL TO FIO-CMND.
           PERFORM LDC-FIO-ARC.
           IF NOT FIO-STAT-OKS
               MOVE 'DEU'        TO MSG-COD-SIST
               MOVE 'ARC    DEL' TO MSG-COD-MENS
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS
               GO TO FIN-DEL-ARC.

           MOVE CLF-KEY-ICLF IN CLF TO ARC-CIC-ICLF IN ARC.
           MOVE FIO-GET-NLS TO FIO-CMND.
           GO TO LUP-DEL-ARC.
       FIN-DEL-ARC.
           EXIT.

       DEL-ARG SECTION.
       INI-DEL-ARG.
           MOVE SPACES TO ARG-KEY-IARG IN ARG.
           MOVE CLF-KEY-ICLF IN CLF TO ARG-CIC-ICLF IN ARG.
           MOVE FIO-GET-NLS TO FIO-CMND.
       LUP-DEL-ARG.
           PERFORM LDC-FIO-ARG.
           IF FIO-STAT-OKS
               MOVE FIO-END-BRW TO FIO-CMND
               PERFORM LDC-FIO-ARG.

           IF NOT ( FIO-STAT-OKS AND
              ARG-CIC-ICLF IN ARG = CLF-KEY-ICLF IN CLF )
               GO TO FIN-DEL-ARG.

           MOVE FIO-GET-KEY-UPD TO FIO-CMND.
           PERFORM LDC-FIO-ARG.
           IF NOT FIO-STAT-OKS
               GO TO FIN-DEL-ARG.

           MOVE FIO-DEL TO FIO-CMND.
           PERFORM LDC-FIO-ARG.
           IF NOT FIO-STAT-OKS
               MOVE 'DEU'        TO MSG-COD-SIST
               MOVE 'ARG    DEL' TO MSG-COD-MENS
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS
               GO TO FIN-DEL-ARG.

           MOVE CLF-KEY-ICLF IN CLF TO ARG-CIC-ICLF IN ARG.
           MOVE FIO-GET-NLS TO FIO-CMND.
           GO TO LUP-DEL-ARG.
       FIN-DEL-ARG.
           EXIT.

       DEL-RDC SECTION.
       INI-DEL-RDC.
           MOVE SPACES                TO RDC-CIC-ICLI IN RDC.
           MOVE CLF-KEY-ICLF IN CLF   TO RDC-KEY-ICLF IN RDC.
           MOVE 'RDC-KEY-ICLF' TO FIO-AKEY.
           MOVE FIO-GET-NLS TO FIO-CMND.
       LUP-DEL-RDC.
           PERFORM LDC-FIO-RDC.
           IF FIO-STAT-OKS
               MOVE 'RDC-KEY-ICLF' TO FIO-AKEY
               MOVE FIO-END-BRW TO FIO-CMND
               PERFORM LDC-FIO-RDC.

           IF NOT ( FIO-STAT-OKS AND
              RDC-KEY-ICLF IN RDC = CLF-KEY-ICLF IN CLF )
               GO TO FIN-DEL-RDC.

           MOVE FIO-GET-KEY-UPD TO FIO-CMND.
           PERFORM LDC-FIO-RDC.
           IF NOT FIO-STAT-OKS
              GO TO FIN-DEL-RDC.

           MOVE FIO-DEL TO FIO-CMND.
           PERFORM LDC-FIO-RDC.
           IF NOT FIO-STAT-OKS
               MOVE 'DEU'        TO MSG-COD-SIST
               MOVE 'RDC    DEL' TO MSG-COD-MENS
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS
               GO TO FIN-DEL-RDC.

           MOVE 'RDC-KEY-ICLF' TO FIO-AKEY.
           MOVE CLF-KEY-ICLF IN CLF TO RDC-KEY-ICLF IN RDC.
           MOVE FIO-GET-NLS TO FIO-CMND.
           GO TO LUP-DEL-RDC.
       FIN-DEL-RDC.
           EXIT.

       PUT-RDC SECTION.
       INI-PUT-RDC.
           IF DBC-IND-ICLI IN CLF-FLD = 'M'
               GO TO FIN-PUT-RDC.
      *INI-JGM 29-07-1998.
           MOVE SPACES TO  RDC.
           MOVE ZEROES TO  RDC-VAL-PRDC IN RDC.
      *FIN-JGM 29-07-1998.
           MOVE SPACES TO  RDC-GLS-FLAG IN RDC.
           MOVE 100                     TO RDC-VAL-PRDC IN RDC.
           MOVE SPACES                  TO RDC-COD-RDCF IN RDC.
           MOVE ZEROES                  TO RDC-GLS-DISP IN RDC.
      *INI-JGM 29-07-1998.
           PERFORM GET-FHOY.
      *    Fecha Transaccion
           MOVE HOY-FHOY TO RDC-FEC-FTRN IN RDC.
      *    Hora Transaccion
           MOVE HOY-HHOY TO RDC-HRA-HRTR IN RDC.
      *FIN-JGM 29-07-1998.

           MOVE DBC-CAI-ICLI IN CLF-FLD TO RDC-CAI-ICLI IN RDC.
           MOVE DBC-IIC-ICLI IN CLF-FLD TO RDC-IIC-ICLI IN RDC.
           MOVE CLF-CAI-ICLF IN CLF-FLD TO RDC-CAI-ICLF IN RDC.
           MOVE CLF-IIC-ICLF IN CLF-FLD TO RDC-IIC-ICLF IN RDC.

           MOVE FIO-PUT TO FIO-CMND.
           PERFORM LDC-FIO-RDC.
           IF NOT FIO-STAT-OKS
      *        Error inconsistencia en el ingreso : hacer LOGTB e inform
               MOVE FIO-MENS TO FRM-MENS
               PERFORM BCK-OUT.
       FIN-PUT-RDC.
           EXIT.

      *>>>>
       COPY LDCBFLDC.
       COPY LDCBFARC.
       COPY LDCBFARG.
       COPY LDCBFRDC.
       COPY SGCBFREC.
       COPY LDCBFLAC.

       COPY TABBFCAM.
      *RVM-BCI-INI 19-MAR-1998
       COPY SGCBFOPE.
       COPY SGCBFRCO.
      *RVM-BCI-FIN 19-MAR-1998

       COPY GNSBFCIC.
       COPY GNSBGCIC.

       COPY SGCBFDBC.
       COPY GNSBGCPT.
       COPY GNSBGSTR.
       COPY SGCBGCLI.
       COPY GNSBPFEC.

      *<<<< PGM_PU
        COPY LDCBGLAC.
      *PTC-INI JUS 06-MAY-1997 (CMND MCA PARA INTERFAZ GRAFICA)
       LNK-PPQCF SECTION.
       INI-LNK-PPQCF.
           PERFORM GET-FHOY.
           MOVE HOY-FHOY   TO QCF-FEC-FCON.
           MOVE SYS-LINK   TO SYS-CMND.
           MOVE QCF-TCMA   TO SYS-TCMA.
           MOVE QCF-CMMA   TO SYS-CMMA.
           MOVE 'LDCPPQCF' TO SYS-PROG.
           PERFORM GNS-PRO-SYS.
       FIN-LNK-PPQCF.
           EXIT.
      *PTC-JUS JUS 06-MAY-1997
      *JUS-INI 1-SEP-1997 15:17:19
       COPY GNSBGTSK.
      *JUS-FIN 1-SEP-1997 15:17:19
      *


      *RRM-INI abril-2018 / control LDC duplicadas
       REV-LDC-DUPL SECTION.
       INI-REV-LDC-DUPL.
           MOVE SPACES TO WSS-DPL-COD-MENS.
           MOVE SPACES                  TO LDC-KEY-ILDC IN LDC.
           MOVE CLF-CAI-ICLF IN CLF-FLD TO LDC-CAI-ICLF IN LDC.
           MOVE CLF-IIC-ICLF IN CLF-FLD TO LDC-IIC-ICLF IN LDC.
           MOVE ZEROES                  TO LDC-NUM-ILDC IN LDC.
           MOVE FIO-GET-NLS TO FIO-CMND.
           PERFORM LDC-FIO-LDC.
           IF NOT ( FIO-STAT-OKS AND
              CLF-CAI-ICLF IN CLF-FLD = LDC-CAI-ICLF IN LDC AND
              CLF-IIC-ICLF IN CLF-FLD = LDC-IIC-ICLF IN LDC )
                GO TO FIN-REV-LDC-DUPL.
           MOVE ZEROES TO WSS-LDC.
           MOVE SPACES TO WSS-VEC-DUPL.

       LUP-VAL-LDC.
           ADD 1 TO WSS-LDC.
           MOVE LDC-COD-TIPO IN LDC TO LDC-COD-TIPO IN
                                                    VEC-DUPL(WSS-LDC).
           PERFORM CTRL-LDC-DUPL.
           IF WSS-DPL-COD-MENS > SPACES
               GO TO FIN-REV-LDC-DUPL.

           MOVE FIO-GET-NXT    TO FIO-CMND.
           PERFORM LDC-FIO-LDC.
           IF FIO-STAT-OKS AND
              CLF-CAI-ICLF IN CLF-FLD = LDC-CAI-ICLF IN LDC AND
              CLF-IIC-ICLF IN CLF-FLD = LDC-IIC-ICLF IN LDC
               GO TO LUP-VAL-LDC.
       FIN-REV-LDC-DUPL.
           EXIT.

       CTRL-LDC-DUPL SECTION.
       INI-CTRL-LDC-DUPL.
           MOVE 'DEU' TO FIO-SIST.
           MOVE 'TLC'               TO TAB-COD-TTAB IN TAB.
           MOVE LDC-COD-TIPO IN LDC TO TAB-COD-CTAB IN TAB.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM GNS-FIO-TAB.
           IF NOT ( FIO-STAT-OKS AND TAB-IND-VIGE IN TAB = WSS-S )
               MOVE SPACES TO TAB-GLS-DATA IN TAB.

           MOVE ZEROES TO WSS-CTRL.
       LUP-CTRL-LDC-DUPL.
           ADD WSS-1 TO WSS-CTRL.
           IF LDC-COD-TIPO IN LDC = LDC-COD-TIPO IN VEC-DUPL(WSS-CTRL)
              AND WSS-LDC     NOT = WSS-CTRL
              AND TAB-GLS-DATA IN TAB(7:1) NOT = WSS-D
                   MOVE WSS-CT-MSG-DPLC TO WSS-DPL-COD-MENS
           ELSE
                 IF WSS-LDC = WSS-CTRL
                     GO TO FIN-CTRL-LDC-DUPL
                 ELSE
                     GO TO LUP-CTRL-LDC-DUPL.
       FIN-CTRL-LDC-DUPL.
           EXIT.
      *RRM-FIN abril-2018 / control LDC duplicadas

      *PVG INI 03-AGO-2005
       VAL-ACT-LMLT SECTION.
       INI-VAL-ACT-LMLT.
           IF CLF-IIC-CREN IN CLF NOT > SPACES
              GO TO FIN-VAL-ACT-LMLT.
      *RGD-INI 30-08-2010 MEJORAS MLT
           MOVE CLF-IIC-ICAC IN CLF TO WSS-IIC-ICAC IN WSS-VARI.

           MOVE 'DEU'          TO FIO-SIST.
           MOVE 'VSN'          TO TAB-COD-TTAB IN TAB.
           MOVE 'VALPARMLT'    TO TAB-COD-CTAB IN TAB.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM GNS-FIO-TAB.
           IF NOT (FIO-STAT-OKS AND TAB-IND-VIGE IN TAB = 'S')
              GO TO FIN-VAL-ACT-LMLT.
           MOVE TAB-GLS-DAT1 IN TAB TO WSS-VAL-PAR-GLS-MLT.
      *RGD-FIN 30-08-2010
           MOVE 'DEU'          TO FIO-SIST.
           MOVE 'VSN'          TO TAB-COD-TTAB IN TAB.
           MOVE 'VALMNTMLTBGL' TO TAB-COD-CTAB IN TAB.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM GNS-FIO-TAB.
           IF NOT (FIO-STAT-OKS AND TAB-IND-VIGE IN TAB = 'S')
              GO TO FIN-VAL-ACT-LMLT.
           MOVE TAB-COD-DAT3 IN TAB(1) TO WSS-NUM-PMAX-ALF IN WSS-VARI.
           IF WSS-NUM-PMAX-ALF IN WSS-VARI NOT NUMERIC
              GO TO FIN-VAL-ACT-LMLT.
           IF WSS-NUM-PMAX IN WSS-VARI NOT > ZEROES
              GO TO FIN-VAL-ACT-LMLT.
           MOVE SPACES              TO LDC-KEY-ILDC IN LDC.
           MOVE CLF-CIC-ICLF IN CLF TO LDC-CIC-ICLF IN LDC.
           MOVE ZEROES              TO LDC-NUM-ILDC IN LDC.
           MOVE FIO-GET-NLS TO FIO-CMND.
       LUP-LDC-MLT-NEW.
           PERFORM LDC-FIO-LDC.
           IF NOT FIO-STAT-OKS
              GO TO FIN-VAL-ACT-LMLT.
      *PVG INI 26-SEP-2005
      *    IF NOT (LDC-CIC-ICLF IN LDC = CLF-CIC-ICLF IN CLF AND
      *            LDC-COD-TIPO IN LDC = 'MLT')
      *       MOVE FIO-GET-NXT TO FIO-CMND
      *       GO TO LUP-LDC-MLT-NEW.
           IF LDC-CIC-ICLF IN LDC NOT = CLF-CIC-ICLF IN CLF
              GO TO FIN-VAL-ACT-LMLT.
           IF LDC-COD-TIPO IN LDC NOT = 'MLT'
              MOVE FIO-GET-NXT TO FIO-CMND
              GO TO LUP-LDC-MLT-NEW.
      *PVG FIN 26-SEP-2005

      *RGD-INI 30-08-2010 MEJORAS MLT
           MOVE LDC-VAL-CMAX IN LDC TO WSS-VAL-CMAX-NEW IN WSS-VARI.
           MOVE LDC-COD-VCLC IN LDC TO WSS-COD-VCLC-NEW IN WSS-VARI.
           MOVE LDC-IND-MGAR IN LDC TO WSS-IND-MGAR-NEW IN WSS-VARI.
           MOVE LDC-FEC-FINI IN LDC TO WSS-FEC-FINI-NEW IN WSS-VARI.
           MOVE LDC-FEC-FVEN IN LDC TO WSS-FEC-FVEN-NEW IN WSS-VARI.
           MOVE LDC-IND-VIGE IN LDC TO WSS-IND-VIGE-NEW IN WSS-VARI.
           MOVE LDC-KEY-ILDC IN LDC TO WSS-KEY-ILDC-NEW IN WSS-VARI.
           MOVE LDC-COD-TIPO IN LDC TO WSS-COD-TIPO     IN WSS-VARI.

           PERFORM GET-FHOY.
           MOVE SPACES TO WSS-IND-DESA-CLFF
           IF WSS-VAL-PAR-COD-MLT(3) = 'S'
      *       IF WSS-FEC-FVEN-ANT IN WSS-VARI < HOY-FHOY
              IF LDC-FEC-FVEN IN LDC < HOY-FHOY
                 MOVE 'S'  TO WSS-IND-DESA-CLFF
                 GO TO CONT-VAL-ACT-LMLT.

           PERFORM VALIDA-CTACTE-MLT.
           IF MSG-COD-MENS > SPACES
              MOVE 'S'  TO WSS-IND-DESA-CLFF
              GO TO CONT-VAL-ACT-LMLT.

      *RGD-FIN 30-08-2010 MLT

           IF LDC-VAL-CACT IN LDC > ZEROES
              MOVE 'DEU'          TO MSG-COD-SIST
              MOVE 'LDCMLTACTANT' TO MSG-COD-MENS
              PERFORM GET-MSG
              MOVE MSG-GLS-DESC TO FRM-MEN2
              GO TO FIN-VAL-ACT-LMLT.
           MOVE FIO-END-BRW TO FIO-CMND.
           PERFORM LDC-FIO-LDC.
           MOVE SPACES              TO LDC-KEY-ILDC IN LDC.
           MOVE CLF-CIC-CREN IN CLF TO LDC-CIC-ICLF IN LDC.
           MOVE ZEROES              TO LDC-NUM-ILDC IN LDC.
           MOVE FIO-GET-NLS TO FIO-CMND.
       LUP-LDC-MLT-ANT.
           PERFORM LDC-FIO-LDC.
           IF NOT FIO-STAT-OKS
              GO TO FIN-VAL-ACT-LMLT.
      *PVG INI 26-SEP-2005
      *    IF NOT (LDC-CIC-ICLF IN LDC = CLF-CIC-CREN IN CLF AND
      *            LDC-COD-TIPO IN LDC = 'MLT')
      *       MOVE FIO-GET-NXT TO FIO-CMND
      *       GO TO LUP-LDC-MLT-ANT.
           IF LDC-CIC-ICLF IN LDC NOT = CLF-CIC-CREN IN CLF
              GO TO FIN-VAL-ACT-LMLT.
           IF LDC-COD-TIPO IN LDC NOT = 'MLT'
              MOVE FIO-GET-NXT TO FIO-CMND
              GO TO LUP-LDC-MLT-ANT.
      *PVG FIN 26-SEP-2005
      *RGD-INI 30-08-2010 MEJORAS MLT
           MOVE LDC-VAL-CMAX IN LDC TO WSS-VAL-CMAX-ANT IN WSS-VARI.
           MOVE LDC-COD-VCLC IN LDC TO WSS-COD-VCLC-ANT IN WSS-VARI.
           MOVE LDC-IND-MGAR IN LDC TO WSS-IND-MGAR-ANT IN WSS-VARI.
           MOVE LDC-FEC-FINI IN LDC TO WSS-FEC-FINI-ANT IN WSS-VARI.
           MOVE LDC-FEC-FVEN IN LDC TO WSS-FEC-FVEN-ANT IN WSS-VARI.
           MOVE LDC-IND-VIGE IN LDC TO WSS-IND-VIGE-ANT IN WSS-VARI.
           MOVE LDC-KEY-ILDC IN LDC TO WSS-KEY-ILDC-ANT IN WSS-VARI.
           MOVE LDC-VAL-CACT IN LDC TO WSS-VAL-CACT-ANT IN WSS-VARI.
           MOVE LDC-IND-SMAR IN LDC TO WSS-IND-SMAR-ANT IN WSS-VARI.
           MOVE CLF-CIC-CREN IN CLF TO WSS-CIC-CREN-ANT IN WSS-VARI.
           MOVE LDC-VAL-CMAX IN LDC TO WSS-VAL-CMAX-RES IN WSS-VARI.
           MOVE LDC-COD-VCLC IN LDC TO WSS-COD-VCLC-RES IN WSS-VARI.
           MOVE LDC-IND-MGAR IN LDC TO WSS-IND-MGAR-RES IN WSS-VARI.
           MOVE LDC-FEC-FINI IN LDC TO WSS-FEC-FINI-RES IN WSS-VARI.
           MOVE LDC-FEC-FVEN IN LDC TO WSS-FEC-FVEN-RES IN WSS-VARI.
           MOVE LDC-IND-VIGE IN LDC TO WSS-IND-VIGE-RES IN WSS-VARI.
           MOVE LDC-KEY-ILDC IN LDC TO WSS-KEY-ILDC-RES IN WSS-VARI.
           MOVE LDC-VAL-CACT IN LDC TO WSS-VAL-CACT-RES IN WSS-VARI.
           MOVE FIO-END-BRW TO FIO-CMND.
           PERFORM LDC-FIO-LDC.
           IF WSS-VAL-PAR-COD-MLT(1) = 'S'
              PERFORM VALIDA-MARGEN-MLT
              IF WSS-IND-SMAR-ANT IN WSS-VARI = 'S'
                 GO TO CONT-VAL-ACT-LMLT.

           IF WSS-VAL-PAR-COD-MLT(1) = 'S'
              MOVE WSS-VAL-CMAX-RES TO WSS-VAL-CMAX-ANT
              MOVE WSS-COD-VCLC-RES TO WSS-COD-VCLC-ANT
              MOVE WSS-IND-MGAR-RES TO WSS-IND-MGAR-ANT
              MOVE WSS-FEC-FINI-RES TO WSS-FEC-FINI-ANT
              MOVE WSS-FEC-FVEN-RES TO WSS-FEC-FVEN-ANT
              MOVE WSS-IND-VIGE-RES TO WSS-IND-VIGE-ANT
              MOVE WSS-KEY-ILDC-RES TO WSS-KEY-ILDC-ANT
              MOVE WSS-VAL-CACT-RES TO WSS-VAL-CACT-ANT.

           IF WSS-VAL-PAR-COD-MLT(2) = 'S'
              IF WSS-VAL-CACT-ANT IN WSS-VARI NOT > ZEROES
                 GO TO FIN-VAL-ACT-LMLT.
           IF WSS-VAL-PAR-COD-MLT(8) = 'S'
              IF WSS-IND-VIGE-ANT IN WSS-VARI NOT = 'S'
                 GO TO FIN-VAL-ACT-LMLT.

      *    IF LDC-VAL-CACT IN LDC NOT > ZEROES
      *       GO TO FIN-VAL-ACT-LMLT.
      *    IF LDC-IND-VIGE IN LDC NOT = 'S'
      *       GO TO FIN-VAL-ACT-LMLT.
      *    PERFORM GET-FHOY.
      *    IF LDC-FEC-FVEN IN LDC < HOY-FHOY
      *       GO TO FIN-VAL-ACT-LMLT.
      *    MOVE LDC-VAL-CMAX IN LDC TO WSS-VAL-CMAX-ANT IN WSS-VARI.
      *    MOVE LDC-COD-VCLC IN LDC TO WSS-COD-VCLC-ANT IN WSS-VARI.
      *    MOVE LDC-IND-MGAR IN LDC TO WSS-IND-MGAR-ANT IN WSS-VARI.
      *    MOVE LDC-FEC-FINI IN LDC TO WSS-FEC-FINI-ANT IN WSS-VARI.
      *    MOVE LDC-FEC-FVEN IN LDC TO WSS-FEC-FVEN-ANT IN WSS-VARI.
      *    MOVE LDC-IND-VIGE IN LDC TO WSS-IND-VIGE-ANT IN WSS-VARI.
      *    MOVE LDC-KEY-ILDC IN LDC TO WSS-KEY-ILDC-ANT IN WSS-VARI.
      *    MOVE FIO-END-BRW TO FIO-CMND.
      *    PERFORM LDC-FIO-LDC.
           IF WSS-VAL-PAR-COD-MLT(4) = 'S'
      *RGD-FIN 30-08-2010
           IF WSS-COD-VCLC-ANT IN WSS-VARI NOT =
              WSS-COD-VCLC-NEW IN WSS-VARI
              GO TO FIN-VAL-ACT-LMLT.
      *RGD-INI 30-08-2010 MEJORAS MLT
           IF WSS-VAL-PAR-COD-MLT(5) = 'S'
      *RGD-FIN 30-08-2010
           IF WSS-IND-MGAR-ANT IN WSS-VARI NOT =
              WSS-IND-MGAR-NEW IN WSS-VARI
              GO TO FIN-VAL-ACT-LMLT.
      *RGD-INI 30-08-2010 MEJORAS MLT
           IF WSS-VAL-PAR-COD-MLT(6) = 'S'
      *RGD-FIN 30-08-2010
           IF WSS-FEC-FINI-ANT IN WSS-VARI NOT =
              WSS-FEC-FINI-NEW IN WSS-VARI
              GO TO FIN-VAL-ACT-LMLT.
      *RGD-INI 30-08-2010 MEJORAS MLT
           IF WSS-VAL-PAR-COD-MLT(7) = 'S'
      *RGD-FIN 30-08-2010
              IF WSS-FEC-FVEN-ANT IN WSS-VARI NOT =
                 WSS-FEC-FVEN-NEW IN WSS-VARI
                 GO TO FIN-VAL-ACT-LMLT.
      *RGD-INI 30-08-2010 MEJORAS MLT
           IF WSS-VAL-PAR-COD-MLT(8) = 'S'
      *RGD-FIN 30-08-2010
           IF WSS-IND-VIGE-ANT IN WSS-VARI NOT =
              WSS-IND-VIGE-NEW IN WSS-VARI
              GO TO FIN-VAL-ACT-LMLT.
      *RGD-INI 30-08-2010 MEJORAS MLT
           IF WSS-VAL-PAR-COD-MLT(9) = 'S'
      *RGD-FIN 30-08-2010
              MOVE 'N' TO WSS-IND-CGAR IN WSS-VARI
              PERFORM VAL-CGAR
           IF WSS-IND-CGAR IN WSS-VARI = 'N'
              GO TO FIN-VAL-ACT-LMLT.

      *RGD-INI 30-08-2010 MEJORAS MLT
      *    SUBTRACT WSS-VAL-CMAX-NEW IN WSS-VARI FROM
      *             WSS-VAL-CMAX-ANT IN WSS-VARI
      *      GIVING WSS-VAL-DIFF IN WSS-VARI.
      *    MULTIPLY WSS-VAL-DIFF IN WSS-VARI BY 100
      *      GIVING WSS-VAL-DIFF IN WSS-VARI.
      *    DIVIDE WSS-VAL-DIFF IN WSS-VARI BY
      *           WSS-VAL-CMAX-ANT IN WSS-VARI
      *           GIVING WSS-VAL-DIFF IN WSS-VARI.
      *    IF WSS-VAL-DIFF IN WSS-VARI > WSS-NUM-PMAX IN WSS-VARI
      *       GO TO FIN-VAL-ACT-LMLT.
       CONT-VAL-ACT-LMLT.
      *RGD-FIN 30-08-2010
           MOVE WSS-KEY-ILDC-NEW IN WSS-VARI TO LDC-KEY-ILDC IN LDC.
           MOVE FIO-GET-KEY-UPD TO FIO-CMND.
           PERFORM LDC-FIO-LDC.
           IF FIO-STAT-OKS
              MOVE HOY-FHOY            TO LDC-FEC-FTRN IN LDC
              MOVE HOY-HHOY            TO LDC-HRA-HRTR IN LDC
              MOVE SCR-OTRN            TO LDC-COD-OTRN IN LDC
              MOVE SCR-USER            TO LDC-COD-ATRN IN LDC
      *RGD-INI 30-08-2010 MEJORAS MLT
      *       MOVE LDC-VAL-CMAX IN LDC TO LDC-VAL-CACT IN LDC
              PERFORM VER-ACTIVACION-MLT
      *RGD-FIN 30-08-2010
              MOVE FIO-MOD TO FIO-CMND
              PERFORM LDC-FIO-LDC
              IF FIO-STAT-OKS
      *RGD-INI 30-08-2010 MEJORAS MLT
                 IF WSS-IND-SMAR-ANT IN WSS-VARI NOT = 'S' AND
                    WSS-IND-DESA-CLFF IN WSS-VARI NOT = 'S'
      *RGD-FIN 30-08-2010
                    MOVE 'DEU'          TO MSG-COD-SIST
                    MOVE 'LDCMLTACTOK ' TO MSG-COD-MENS
                    PERFORM GET-MSG
                    MOVE MSG-GLS-DESC TO FRM-MEN2
      *RGD-INI 30-08-2010 MEJORAS MLT
                 ELSE
                    NEXT SENTENCE
      *RGD-FIN 30-08-2010
              ELSE
                 MOVE 'DEU'          TO MSG-COD-SIST
                 MOVE 'LDCMLTACTERR' TO MSG-COD-MENS
                 PERFORM GET-MSG
                 MOVE MSG-GLS-DESC TO FRM-MEN2
           ELSE
                 MOVE 'DEU'          TO MSG-COD-SIST
                 MOVE 'LDCMLTACTERR' TO MSG-COD-MENS
                 PERFORM GET-MSG
                 MOVE MSG-GLS-DESC TO FRM-MEN2.
       FIN-VAL-ACT-LMLT.
           EXIT.

      *RGD-INI 02-08-2011 DINERO INSTANTANEO
       VAL-VRF-LDIN SECTION.
       INI-VAL-VRF-LDIN.
           MOVE ZEROES              TO WSS-CONT-RENOV.
           MOVE SPACES              TO WSS-IND-ECAPR IN WSS-VARI.
           IF CLF-CIC-CREN IN CLF NOT > SPACES
              GO TO FIN-VAL-VRF-LDIN.
           MOVE CLF-IIC-ICAC IN CLF TO WSS-IIC-ICAC IN WSS-VARI.
           MOVE CLF-CIC-ICLF IN CLF TO WSS-CIC-ILDC-NEW.

           PERFORM GET-FHOY.
           MOVE FIO-END-BRW TO FIO-CMND.

      *     PARA VALIDAR NUMERO DE RENOVACIONES EN UN PERIODO
           MOVE 'DEU'               TO FIO-SIST.
           MOVE 'RDI'               TO TAB-COD-TTAB IN TAB.
           MOVE 'CLF'               TO TAB-COD-CTAB IN TAB.
           MOVE FIO-GET-KEY         TO FIO-CMND.
           PERFORM GNS-FIO-TAB.
           IF NOT (FIO-STAT-OKS AND TAB-IND-VIGE IN TAB = 'S')
              GO TO FIN-VAL-VRF-LDIN.

           MOVE TAB-GLS-DATA IN TAB TO WSS-GLS-CDIN.

           IF WSS-CDIN-TPLZ NOT = 'D' AND
                 WSS-CDIN-TPLZ NOT = 'M' AND
                 WSS-CDIN-TPLZ NOT = 'A'
              MOVE '04'         TO WSS-IND-ECAPR
              GO TO FIN-VAL-VRF-LDIN.

           IF WSS-CDIN-PLZ IS NOT NUMERIC
              MOVE '04'         TO WSS-IND-ECAPR
              GO TO FIN-VAL-VRF-LDIN.

           IF WSS-CDIN-CANT IS NOT NUMERIC
              MOVE '04'         TO WSS-IND-ECAPR
              GO TO FIN-VAL-VRF-LDIN.

           PERFORM BUSCA-CANAL-APRO-CLDI.
           IF WSS-IND-CAPR NOT = 'S'
              GO TO FIN-VAL-VRF-LDIN.
           IF CLF-COD-CAPR IN CLF = WSS-COD-CCAPRR
              PERFORM CALCULA-FECHA-LDI
              ADD 1    TO WSS-CONT-RENOV.

       LUP-VRF-LDI-CLFANT.
           MOVE CLF-CIC-CREN IN CLF TO CLF-CIC-ICLF IN CLF.
           MOVE FIO-GET-KEY         TO FIO-CMND.
           PERFORM LDC-FIO-CLF.
           IF NOT FIO-STAT-OKS
              PERFORM CARGA-CLF-ORIGINAL-LDI
              GO TO FIN-VAL-VRF-LDIN.

           IF CLF-FEC-FING IN CLF < WSS-FEC-TOPE-LDI
              GO TO LUP-VRF-LDI-CLFLDC
           ELSE
              IF CLF-COD-CAPR IN CLF = WSS-COD-CCAPRR
                 ADD 1    TO WSS-CONT-RENOV
                 IF WSS-CONT-RENOV > WSS-CDIN-CANT
                    MOVE '01' TO WSS-IND-ECAPR
                    PERFORM CARGA-CLF-ORIGINAL-LDI
                    GO TO FIN-VAL-VRF-LDIN.

           IF CLF-CIC-CREN IN CLF > SPACES
              GO TO LUP-VRF-LDI-CLFANT.

       LUP-VRF-LDI-CLFLDC.
           PERFORM CARGA-CLF-ORIGINAL-LDI.

      * COMIENZO VALIDACION DE MARGEN
           MOVE ZEROES              TO WSS-CONT-LDCS WSS-NUM-LDCS.
           MOVE SPACES              TO LDC-KEY-ILDC IN LDC.
           MOVE CLF-CIC-ICLF IN CLF TO LDC-CIC-ICLF IN LDC.
           MOVE ZEROES              TO LDC-NUM-ILDC IN LDC.
           MOVE FIO-GET-NLS         TO FIO-CMND.
       LUP-VAL-VRF-LDIN-NEW.
           PERFORM LDC-FIO-LDC.
           IF NOT FIO-STAT-OKS
              IF WSS-NUM-LDCS > 0
                 MOVE 0 TO WSS-CONT-LDCS
                 GO TO CON-VAL-MAR-LDI
              ELSE
                 GO TO FIN-VAL-VRF-LDIN.

           IF LDC-CIC-ICLF IN LDC NOT = CLF-CIC-ICLF IN CLF
              IF WSS-NUM-LDCS > 0
                 MOVE 0 TO WSS-CONT-LDCS
                 GO TO CON-VAL-MAR-LDI
              ELSE
                 GO TO FIN-VAL-VRF-LDIN.

      *    PARA VALIDAR % INCREMENTO MARGEN
           MOVE 'DEU'               TO FIO-SIST.
           MOVE 'LDI'               TO TAB-COD-TTAB IN TAB.
           MOVE LDC-COD-TIPO IN LDC TO TAB-COD-CTAB IN TAB.
           MOVE FIO-GET-KEY         TO FIO-CMND.
           PERFORM GNS-FIO-TAB.
           IF NOT (FIO-STAT-OKS AND TAB-IND-VIGE IN TAB = 'S')
              MOVE FIO-GET-NXT TO FIO-CMND
              GO TO LUP-VAL-VRF-LDIN-NEW.

           MOVE TAB-GLS-DATA IN TAB TO WSS-GLS-LDIN.

           IF WSS-LDIN-PORC IS NOT NUMERIC
              MOVE '05'         TO WSS-IND-ECAPR
              GO TO FIN-VAL-VRF-LDIN.

           PERFORM BUSCA-CANAL-APRO-LLDI.
           IF WSS-IND-CAPR NOT = 'S'
              MOVE FIO-GET-NXT TO FIO-CMND
              GO TO LUP-VAL-VRF-LDIN-NEW.

           ADD 1 TO  WSS-NUM-LDCS WSS-CONT-LDCS.
           MOVE LDC-CIC-ICLF IN LDC TO WSS-CIC-ICLFL(WSS-NUM-LDCS).
           MOVE LDC-COD-TIPO IN LDC TO WSS-COD-TIPO-LDC(WSS-NUM-LDCS).
           MOVE LDC-VAL-CMAX IN LDC TO WSS-VAL-CMAX-ANTL(WSS-NUM-LDCS).
           MOVE LDC-COD-VCLC IN LDC TO WSS-COD-VCLC-ANTL(WSS-NUM-LDCS).
           MOVE WSS-LDIN-PORC       TO WSS-LDIN-PORCL(WSS-NUM-LDCS).

           MOVE FIO-GET-NXT TO FIO-CMND.
           GO TO LUP-VAL-VRF-LDIN-NEW.

       CON-VAL-MAR-LDI.
           ADD 1                    TO WSS-CONT-LDCS.
           IF WSS-CONT-LDCS > WSS-NUM-LDCS
                 GO TO FIN-VAL-VRF-LDIN.
           MOVE SPACES              TO LDC-KEY-ILDC IN LDC.
           MOVE CLF-CIC-CREN IN CLF TO LDC-CIC-ICLF IN LDC.
           MOVE ZEROES              TO LDC-NUM-ILDC IN LDC.
           MOVE FIO-GET-NLS TO FIO-CMND.
           PERFORM LDC-FIO-LDC.
       LUP-VAL-VRF-LDIN-ANT.
           PERFORM LDC-FIO-LDC.
           IF NOT FIO-STAT-OKS
              IF WSS-CONT-LDCS = WSS-NUM-LDCS
                 GO TO FIN-VAL-VRF-LDIN
              ELSE
                 GO TO CON-VAL-MAR-LDI.
           IF LDC-CIC-ICLF IN LDC NOT = CLF-CIC-CREN IN CLF
              IF WSS-CONT-LDCS = WSS-NUM-LDCS
                 GO TO FIN-VAL-VRF-LDIN
              ELSE
                 GO TO CON-VAL-MAR-LDI.

           IF LDC-COD-TIPO IN LDC NOT = WSS-COD-TIPO-LDC(WSS-CONT-LDCS)
              MOVE FIO-GET-NXT TO FIO-CMND
              GO TO LUP-VAL-VRF-LDIN-ANT.

           MOVE WSS-VAL-CMAX-ANTL(WSS-CONT-LDCS) TO WSS-VAL-CMAX-NEW.
           MOVE WSS-COD-VCLC-ANTL(WSS-CONT-LDCS) TO WSS-COD-VCLC-NEW.
           MOVE WSS-LDIN-PORCL(WSS-CONT-LDCS)    TO WSS-LDIN-PORC.

           MOVE LDC-VAL-CMAX IN LDC TO WSS-VAL-CMAX-ANT IN WSS-VARI.
           MOVE LDC-COD-VCLC IN LDC TO WSS-COD-VCLC-ANT IN WSS-VARI.
           MOVE LDC-IND-MGAR IN LDC TO WSS-IND-MGAR-ANT IN WSS-VARI.
           MOVE LDC-FEC-FINI IN LDC TO WSS-FEC-FINI-ANT IN WSS-VARI.
           MOVE LDC-FEC-FVEN IN LDC TO WSS-FEC-FVEN-ANT IN WSS-VARI.
           MOVE LDC-IND-VIGE IN LDC TO WSS-IND-VIGE-ANT IN WSS-VARI.
           MOVE LDC-KEY-ILDC IN LDC TO WSS-KEY-ILDC-ANT IN WSS-VARI.
           MOVE LDC-VAL-CACT IN LDC TO WSS-VAL-CACT-ANT IN WSS-VARI.
           MOVE LDC-IND-SMAR IN LDC TO WSS-IND-SMAR-ANT IN WSS-VARI.
           MOVE CLF-CIC-CREN IN CLF TO WSS-CIC-CREN-ANT IN WSS-VARI.
       CONT-VAL-VRF-LDIN.
           IF WSS-VAL-CMAX-NEW NOT > WSS-VAL-CMAX-ANT
              GO TO CON-VAL-MAR-LDI.

           PERFORM BUSCA-MONEDA-NAC.
      * VALIDO MONEDA DE LDC RENOVADA
           IF WSS-COD-VCLC-NEW NOT = WSS-COD-MNAC IN WSS-VARI
              MOVE WSS-COD-VCLC-NEW         TO WSS-COD1 IN WSS-VARI
              MOVE WSS-COD-MNAC IN WSS-VARI TO WSS-COD2 IN WSS-VARI
              PERFORM GET-FHOY
              MOVE HOY-SHOY                 TO CAM-NUM-SCAM IN CAM(1)
              MOVE HOY-AHOY                 TO CAM-NUM-ACAM IN CAM(1)
              MOVE HOY-MHOY                 TO CAM-NUM-MCAM IN CAM(1)
              MOVE HOY-DHOY                 TO CAM-NUM-DCAM IN CAM(1)
              MOVE CAM-FEC-FCAM IN CAM(1)   TO CAM-FEC-FCAM IN CAM(2)
              MOVE WSS-COD1 IN WSS-VARI     TO CAM-COD-VCAM IN CAM(1)
              MOVE WSS-COD2 IN WSS-VARI     TO CAM-COD-VCAM IN CAM(2)
              MOVE FIO-GET-KEY              TO FIO-CMND
              PERFORM TAB-FIO-CAM
              IF NOT ( FIO-STAT-OKS AND CAM-IND-VIGE IN CAM = 'S' )
                 MOVE '03'         TO WSS-IND-ECAPR
                 GO TO FIN-VAL-VRF-LDIN.

           IF WSS-COD-VCLC-NEW NOT = WSS-COD-MNAC IN WSS-VARI
              COMPUTE WSS-VAL-CMAX-NEW ROUNDED = WSS-VAL-CMAX-NEW *
                              CAM-SGV-VCAM IN CAM.

      * VALIDO MONEDA DE LDC ANTERIOR
           IF WSS-COD-VCLC-ANT NOT = WSS-COD-MNAC IN WSS-VARI
              MOVE WSS-COD-VCLC-ANT         TO WSS-COD1 IN WSS-VARI
              MOVE WSS-COD-MNAC IN WSS-VARI TO WSS-COD2 IN WSS-VARI
              PERFORM GET-FHOY
              MOVE HOY-SHOY                 TO CAM-NUM-SCAM IN CAM(1)
              MOVE HOY-AHOY                 TO CAM-NUM-ACAM IN CAM(1)
              MOVE HOY-MHOY                 TO CAM-NUM-MCAM IN CAM(1)
              MOVE HOY-DHOY                 TO CAM-NUM-DCAM IN CAM(1)
              MOVE CAM-FEC-FCAM IN CAM(1)   TO CAM-FEC-FCAM IN CAM(2)
              MOVE WSS-COD1 IN WSS-VARI     TO CAM-COD-VCAM IN CAM(1)
              MOVE WSS-COD2 IN WSS-VARI     TO CAM-COD-VCAM IN CAM(2)
              MOVE FIO-GET-KEY              TO FIO-CMND
              PERFORM TAB-FIO-CAM
              IF NOT ( FIO-STAT-OKS AND CAM-IND-VIGE IN CAM = 'S' )
                 MOVE '03'         TO WSS-IND-ECAPR
                 GO TO FIN-VAL-VRF-LDIN.

           IF WSS-COD-VCLC-ANT NOT = WSS-COD-MNAC IN WSS-VARI
              COMPUTE WSS-VAL-CMAX-ANT ROUNDED = WSS-VAL-CMAX-ANT *
                              CAM-SGV-VCAM IN CAM.

           SUBTRACT WSS-VAL-CMAX-NEW IN WSS-VARI FROM
                    WSS-VAL-CMAX-ANT IN WSS-VARI
             GIVING WSS-VAL-DIFF IN WSS-VARI.
           MULTIPLY WSS-VAL-DIFF IN WSS-VARI BY 100
             GIVING WSS-VAL-DIFF IN WSS-VARI.
           DIVIDE WSS-VAL-DIFF IN WSS-VARI BY
                  WSS-VAL-CMAX-ANT IN WSS-VARI
                  GIVING WSS-VAL-DIFF IN WSS-VARI.
           IF WSS-VAL-DIFF IN WSS-VARI > WSS-LDIN-PORC IN WSS-VARI
              MOVE '02'    TO WSS-IND-ECAPR IN WSS-VARI
              GO TO FIN-VAL-VRF-LDIN.

           GO TO CON-VAL-MAR-LDI.
       FIN-VAL-VRF-LDIN.
           EXIT.

       CARGA-CLF-ORIGINAL-LDI SECTION.
       INI-CARGA-CLF-ORIGINAL-LDI.
           MOVE WSS-CIC-ILDC-NEW    TO CLF-CIC-ICLF IN CLF.
           MOVE FIO-GET-KEY         TO FIO-CMND.
           PERFORM LDC-FIO-CLF.
       FIN-CARGA-CLF-ORIGINAL-LDI.
           EXIT.

       BUSCA-MSG-RECHAZO-LDI SECTION.
       INI-BUSCA-MSG-RECHAZO-LDI.
           MOVE 'DEU'        TO MSG-COD-SIST.
           IF WSS-IND-ECAPR IN WSS-VARI = '01'
              MOVE 'LDINUMCLF   ' TO MSG-COD-MENS
           ELSE
              IF WSS-IND-ECAPR IN WSS-VARI = '02'
                 MOVE 'LDIPORCLDC  ' TO MSG-COD-MENS
              ELSE
                 IF WSS-IND-ECAPR IN WSS-VARI = '03'
                    MOVE 'TAB'        TO MSG-COD-SIST
                    MOVE 'CAM    NEX' TO MSG-COD-MENS
                 ELSE
                    MOVE 'ERRSUMDIA' TO MSG-COD-MENS.

           PERFORM GET-MSG.
           IF WSS-IND-ECAPR IN WSS-VARI = '01'  OR
                WSS-IND-ECAPR IN WSS-VARI = '03'
              MOVE MSG-GLS-DESC TO FRM-MENS
           ELSE
           IF WSS-IND-ECAPR IN WSS-VARI = '02'
              MOVE MSG-GLS-DESC  TO WSS-GLS-ELDIX  IN WSS-VARI
              MOVE LDC-COD-TIPO  IN LDC TO WSS-COD-ETIPO IN WSS-VARI
              MOVE WSS-GLS-ELDI  IN WSS-VARI TO FRM-MENS
           ELSE
           IF WSS-IND-ECAPR IN WSS-VARI = '04'
              MOVE SPACES        TO WSS-GLS-EDIN IN WSS-VARI
              MOVE MSG-GLS-DESC  TO WSS-GLS-EDINX IN WSS-VARI
              MOVE 'RDI'         TO WSS-COD-ETABL IN WSS-VARI
              MOVE WSS-GLS-EDIN  IN WSS-VARI TO FRM-MENS
           ELSE
           IF WSS-IND-ECAPR IN WSS-VARI = '05'
              MOVE SPACES        TO WSS-GLS-EDIN IN WSS-VARI
              MOVE MSG-GLS-DESC  TO WSS-GLS-EDINX IN WSS-VARI
              MOVE 'LDI'         TO WSS-COD-ETABL IN WSS-VARI
              MOVE LDC-COD-TIPO  IN LDC TO WSS-COD-ETIPX IN WSS-VARI
              MOVE WSS-GLS-EDIN  IN WSS-VARI TO FRM-MENS.
           MOVE FRM-SUAR-MAL TO FRM-SUAR.
       FIN-BUSCA-MSG-RECHAZO-LDI.
           EXIT.

       CALCULA-FECHA-LDI SECTION.
       INI-CALCULA-FECHA-LDI.
           MOVE HOY-DHOY  TO FEC-ITM1.
           MOVE HOY-MHOY  TO FEC-ITM2.
           MOVE HOY-SHOY  TO FEC-ITM3.
           MOVE HOY-AHOY  TO FEC-ITM4.

           IF WSS-CDIN-TPLZ = 'D'
              MOVE WSS-CDIN-PLZ TO FEC-NDIA
              MOVE FEC-RST-DIA  TO FEC-CMND
           ELSE
              IF WSS-CDIN-TPLZ = 'M'
                 MOVE WSS-CDIN-PLZ TO FEC-NMES
                 MOVE FEC-RST-MES  TO FEC-CMND
              ELSE
      *          ASUME ANO
                 MOVE WSS-CDIN-PLZ TO FEC-NANO
                 MOVE FEC-RST-ANO  TO FEC-CMND.

           MOVE FEC-FORM-FEC TO FEC-FORM.
           PERFORM CAL-FEC.
           MOVE FEC-ITM1 TO WSS-NUM-DLDI.
           MOVE FEC-ITM2 TO WSS-NUM-MLDI.
           MOVE FEC-ITM3 TO WSS-NUM-SLDI.
           MOVE FEC-ITM4 TO WSS-NUM-ALDI.
       FIN-CALCULA-FECHA-LDI.
           EXIT.

       BUSCA-CANAL-APRO-LLDI SECTION.
       INI-BUSCA-CANAL-APRO-LLDI.
           MOVE 'N'            TO WSS-IND-CAPR.
           MOVE SPACES         TO WSS-COD-LCAPRR.
           MOVE ZEROES         TO WSS-I.
       LUP-BUSCA-CANAL-APRO-LLDI.
           ADD 1 TO WSS-I.
           IF CLF-COD-CAPR IN CLF NOT = SPACES AND
                  WSS-COD-LCAPR(WSS-I) = CLF-COD-CAPR IN CLF
              MOVE 'S' TO WSS-IND-CAPR
              MOVE WSS-COD-LCAPR(WSS-I) TO WSS-COD-LCAPRR
              GO TO FIN-BUSCA-CANAL-APRO-LLDI.
           IF WSS-I < 25
              GO TO LUP-BUSCA-CANAL-APRO-LLDI.
       FIN-BUSCA-CANAL-APRO-LLDI.
           EXIT.

       BUSCA-CANAL-APRO-CLDI SECTION.
       INI-BUSCA-CANAL-APRO-CLDI.
           MOVE 'N'            TO WSS-IND-CAPR.
           MOVE SPACES         TO WSS-COD-CCAPRR.
           MOVE ZEROES         TO WSS-I.
       LUP-BUSCA-CANAL-APRO-CLDI.
           ADD 1 TO WSS-I.
           IF CLF-COD-CAPR IN CLF NOT = SPACES AND
                  WSS-COD-CCAPR(WSS-I) = CLF-COD-CAPR IN CLF
              MOVE 'S' TO WSS-IND-CAPR
              MOVE WSS-COD-CCAPR(WSS-I) TO WSS-COD-CCAPRR
              GO TO FIN-BUSCA-CANAL-APRO-CLDI.
           IF WSS-I < 20
              GO TO LUP-BUSCA-CANAL-APRO-CLDI.
       FIN-BUSCA-CANAL-APRO-CLDI.
           EXIT.
      *RGD-FIN 02-08-2011

       VAL-CGAR SECTION.
       INI-VAL-CGAR.
      *    S ===> SE MANTIENEN LAS CONDICIONES DE GARANTIA
           MOVE 'S' TO WSS-IND-CGAR IN WSS-VARI.
           MOVE ZEROES TO WSS-NUM-IARG IN WSS-VARI.
       LUP-LEE-CGAR.
           ADD 1 TO WSS-NUM-IARG IN WSS-VARI.
           IF WSS-NUM-IARG IN WSS-VARI > 9
              GO TO FIN-VAL-CGAR.

           MOVE WSS-KEY-ILDC-NEW IN WSS-VARI TO ARG-KEY-ILDC IN ARG.
           MOVE WSS-NUM-IARG IN WSS-VARI     TO ARG-NUM-IARG IN ARG.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM LDC-FIO-ARG.
           IF NOT FIO-STAT-OKS
              MOVE SPACES TO WSS-CIC-IGAR-NEW
              MOVE SPACES TO WSS-COD-COGA-NEW
              MOVE ZEROES TO WSS-NUM-PORG-NEW.
           MOVE ARG-CIC-IGAR IN ARG TO WSS-CIC-IGAR-NEW IN WSS-VARI.
           MOVE ARG-COD-COGA IN ARG TO WSS-COD-COGA-NEW IN WSS-VARI.
           MOVE ARG-NUM-PORG IN ARG TO WSS-NUM-PORG-NEW IN WSS-VARI.

           MOVE WSS-KEY-ILDC-ANT IN WSS-VARI TO ARG-KEY-ILDC IN ARG.
           MOVE WSS-NUM-IARG IN WSS-VARI     TO ARG-NUM-IARG IN ARG.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM LDC-FIO-ARG.
           IF NOT FIO-STAT-OKS
              MOVE SPACES TO WSS-CIC-IGAR-ANT
              MOVE SPACES TO WSS-COD-COGA-ANT
              MOVE ZEROES TO WSS-NUM-PORG-ANT.
           MOVE ARG-CIC-IGAR IN ARG TO WSS-CIC-IGAR-ANT IN WSS-VARI.
           MOVE ARG-COD-COGA IN ARG TO WSS-COD-COGA-ANT IN WSS-VARI.
           MOVE ARG-NUM-PORG IN ARG TO WSS-NUM-PORG-ANT IN WSS-VARI.

           IF WSS-CIC-IGAR-NEW IN WSS-VARI NOT > SPACES AND
              WSS-COD-COGA-NEW IN WSS-VARI NOT > SPACES AND
              WSS-NUM-PORG-NEW IN WSS-VARI NOT > ZEROES AND
              WSS-CIC-IGAR-ANT IN WSS-VARI NOT > SPACES AND
              WSS-COD-COGA-ANT IN WSS-VARI NOT > SPACES AND
              WSS-NUM-PORG-ANT IN WSS-VARI NOT > ZEROES
              GO TO FIN-VAL-CGAR.

      *RGD-INI 30-08-2010 MEJORAS MLT
           IF WSS-VAL-PAR-COD-MLT(10) = 'S'
      *RGD-FIN 30-08-2010
           IF WSS-COD-TOGA-NEW IN WSS-VARI = '952' AND
              WSS-COD-AOGA-NEW IN WSS-VARI = '101'
              MOVE 'N' TO WSS-IND-CGAR IN WSS-VARI
              GO TO FIN-VAL-CGAR.

           IF WSS-CIC-IGAR-NEW IN WSS-VARI NOT =
              WSS-CIC-IGAR-ANT IN WSS-VARI
              MOVE 'N' TO WSS-IND-CGAR IN WSS-VARI
              GO TO FIN-VAL-CGAR.
           IF WSS-COD-TOGA-NEW IN WSS-VARI NOT =
              WSS-COD-TOGA-ANT IN WSS-VARI
              MOVE 'N' TO WSS-IND-CGAR IN WSS-VARI
              GO TO FIN-VAL-CGAR.
           IF WSS-COD-AOGA-NEW IN WSS-VARI NOT =
              WSS-COD-AOGA-ANT IN WSS-VARI
              MOVE 'N' TO WSS-IND-CGAR IN WSS-VARI
              GO TO FIN-VAL-CGAR.
           IF WSS-NUM-PORG-NEW IN WSS-VARI NOT =
              WSS-NUM-PORG-ANT IN WSS-VARI
              MOVE 'N' TO WSS-IND-CGAR IN WSS-VARI
              GO TO FIN-VAL-CGAR.
           GO TO LUP-LEE-CGAR.
       FIN-VAL-CGAR.
           EXIT.
      *PVG FIN 03-AGO-2005
      *RGD-INI 30-08-2010 MEJORAS MLT
       VER-ACTIVACION-MLT SECTION.
       INI-VER-ACTIVACION-MLT.
           IF WSS-IND-DESA-CLFF IN WSS-VARI = 'S'
              MOVE ZEROES   TO LDC-VAL-CACT IN LDC
              GO TO FIN-VER-ACTIVACION-MLT.

           IF WSS-IND-SMAR-ANT IN WSS-VARI = 'S'
              MOVE 'S'             TO LDC-IND-SMAR IN LDC
           ELSE
              MOVE SPACES          TO LDC-IND-SMAR IN LDC
              MOVE LDC-VAL-CMAX IN LDC TO LDC-VAL-CACT IN LDC.
       FIN-VER-ACTIVACION-MLT.
           EXIT.

       VALIDA-MARGEN-MLT SECTION.
       INI-VALIDA-MARGEN-MLT.
           PERFORM BUSCA-MONEDA-NAC.
           IF WSS-COD-VCLC-NEW NOT = WSS-COD-MNAC IN WSS-VARI
              MOVE WSS-COD-VCLC-NEW         TO WSS-COD1 IN WSS-VARI
              MOVE WSS-COD-MNAC IN WSS-VARI TO WSS-COD2 IN WSS-VARI
              PERFORM GET-FHOY
              MOVE HOY-SHOY                 TO CAM-NUM-SCAM IN CAM(1)
              MOVE HOY-AHOY                 TO CAM-NUM-ACAM IN CAM(1)
              MOVE HOY-MHOY                 TO CAM-NUM-MCAM IN CAM(1)
              MOVE HOY-DHOY                 TO CAM-NUM-DCAM IN CAM(1)
              MOVE CAM-FEC-FCAM IN CAM(1)   TO CAM-FEC-FCAM IN CAM(2)
              MOVE WSS-COD1 IN WSS-VARI     TO CAM-COD-VCAM IN CAM(1)
              MOVE WSS-COD2 IN WSS-VARI     TO CAM-COD-VCAM IN CAM(2)
              MOVE FIO-GET-KEY              TO FIO-CMND
              PERFORM TAB-FIO-CAM
              IF NOT ( FIO-STAT-OKS AND CAM-IND-VIGE IN CAM = 'S' )
                 MOVE 'TAB'        TO MSG-COD-SIST
                 MOVE 'CAM    NEX' TO MSG-COD-MENS
                 PERFORM GET-MSG
                 MOVE MSG-GLS-DESC TO FRM-MENS
                 MOVE FRM-SUAR-MAL TO FRM-SUAR
                 GO TO FIN-VALIDA-MARGEN-MLT.

           IF WSS-COD-VCLC-NEW NOT = WSS-COD-MNAC IN WSS-VARI
              COMPUTE WSS-VAL-CMAX-NEW ROUNDED = WSS-VAL-CMAX-NEW *
                              CAM-SGV-VCAM IN CAM.

           IF WSS-IND-SMAR-ANT IN WSS-VARI = 'S' OR
                 WSS-CIC-CREN-ANT IN WSS-VARI NOT > SPACES
              PERFORM CALCULA-MARGEN-MLT
              GO TO FIN-VALIDA-MARGEN-MLT.
       LOOP-VALIDA-MARGEN-MLT.

           MOVE WSS-CIC-CREN-ANT TO CLF-CIC-ICLF IN CLF
           MOVE FIO-GET-KEY      TO FIO-CMND
           PERFORM LDC-FIO-CLF
           IF FIO-STAT-OKS
               MOVE CLF-CIC-CREN IN CLF TO WSS-CIC-CREN-ANT IN WSS-VARI
           ELSE
               MOVE SPACES              TO WSS-CIC-CREN-ANT IN WSS-VARI.

           IF WSS-CIC-CREN-ANT IN WSS-VARI NOT > SPACES
              GO TO CONT-LOOP-VALIDA-MARGEN-MLT.

           MOVE SPACES              TO LDC-KEY-ILDC IN LDC.
           MOVE WSS-CIC-CREN-ANT    TO LDC-CIC-ICLF IN LDC.
           MOVE ZEROES              TO LDC-NUM-ILDC IN LDC.
           MOVE FIO-GET-NLS         TO FIO-CMND.
       LUP-LDC-MLT-MARGEN.
           PERFORM LDC-FIO-LDC.
           IF NOT FIO-STAT-OKS
              GO TO LOOP-VALIDA-MARGEN-MLT.
           IF LDC-CIC-ICLF IN LDC NOT = WSS-CIC-CREN-ANT
              GO TO LOOP-VALIDA-MARGEN-MLT.
           IF LDC-COD-TIPO IN LDC NOT = 'MLT'
              MOVE FIO-GET-NXT TO FIO-CMND
              GO TO LUP-LDC-MLT-MARGEN.

           MOVE LDC-VAL-CMAX IN LDC TO WSS-VAL-CMAX-ANT IN WSS-VARI.
           MOVE LDC-COD-VCLC IN LDC TO WSS-COD-VCLC-ANT IN WSS-VARI.
           MOVE LDC-VAL-CACT IN LDC TO WSS-VAL-CACT-ANT IN WSS-VARI.
           MOVE LDC-IND-SMAR IN LDC TO WSS-IND-SMAR-ANT IN WSS-VARI.

           IF LDC-IND-SMAR IN LDC = 'S'
              GO TO CONT-LOOP-VALIDA-MARGEN-MLT.

           GO TO LOOP-VALIDA-MARGEN-MLT.

       CONT-LOOP-VALIDA-MARGEN-MLT.
           PERFORM CALCULA-MARGEN-MLT.
       FIN-VALIDA-MARGEN-MLT.
           EXIT.

       CALCULA-MARGEN-MLT SECTION.
       INI-CALCULA-MARGEN-MLT.
           IF WSS-COD-VCLC-ANT NOT = WSS-COD-MNAC IN WSS-VARI
              MOVE WSS-COD-VCLC-ANT         TO WSS-COD1 IN WSS-VARI
              MOVE WSS-COD-MNAC IN WSS-VARI TO WSS-COD2 IN WSS-VARI
              PERFORM GET-FHOY
              MOVE HOY-SHOY                 TO CAM-NUM-SCAM IN CAM(1)
              MOVE HOY-AHOY                 TO CAM-NUM-ACAM IN CAM(1)
              MOVE HOY-MHOY                 TO CAM-NUM-MCAM IN CAM(1)
              MOVE HOY-DHOY                 TO CAM-NUM-DCAM IN CAM(1)
              MOVE CAM-FEC-FCAM IN CAM(1)   TO CAM-FEC-FCAM IN CAM(2)
              MOVE WSS-COD1 IN WSS-VARI     TO CAM-COD-VCAM IN CAM(1)
              MOVE WSS-COD2 IN WSS-VARI     TO CAM-COD-VCAM IN CAM(2)
              MOVE FIO-GET-KEY              TO FIO-CMND
              PERFORM TAB-FIO-CAM
              IF NOT ( FIO-STAT-OKS AND CAM-IND-VIGE IN CAM = 'S' )
                 MOVE 'TAB'        TO MSG-COD-SIST
                 MOVE 'CAM    NEX' TO MSG-COD-MENS
                 PERFORM GET-MSG
                 MOVE MSG-GLS-DESC TO FRM-MENS
                 MOVE FRM-SUAR-MAL TO FRM-SUAR
                 GO TO FIN-VALIDA-MARGEN-MLT.

           IF WSS-COD-VCLC-ANT NOT = WSS-COD-MNAC IN WSS-VARI
              COMPUTE WSS-VAL-CMAX-ANT ROUNDED = WSS-VAL-CMAX-ANT *
                              CAM-SGV-VCAM IN CAM.

           SUBTRACT WSS-VAL-CMAX-NEW IN WSS-VARI FROM
                    WSS-VAL-CMAX-ANT IN WSS-VARI
             GIVING WSS-VAL-DIFF IN WSS-VARI.
           MULTIPLY WSS-VAL-DIFF IN WSS-VARI BY 100
             GIVING WSS-VAL-DIFF IN WSS-VARI.
           DIVIDE WSS-VAL-DIFF IN WSS-VARI BY
                  WSS-VAL-CMAX-ANT IN WSS-VARI
                  GIVING WSS-VAL-DIFF IN WSS-VARI.
           IF WSS-VAL-DIFF IN WSS-VARI > WSS-NUM-PMAX IN WSS-VARI
              MOVE 'S' TO WSS-IND-SMAR-ANT IN WSS-VARI
           ELSE
              MOVE SPACES TO WSS-IND-SMAR-ANT IN WSS-VARI.
       FIN-CALCULA-MARGEN-MLT.
           EXIT.

       BUSCA-MONEDA-NAC SECTION.
       INI-BUSCA-MONEDA-NAC.
      * OBTENGO CODIGO MONEDA NACIONAL
           MOVE 'TAB'               TO FIO-SIST.
           MOVE 'VLR'               TO TAB-CIC-TTAB IN TAB.
           MOVE '0999'              TO TAB-CIC-CTAB IN TAB.
           MOVE 'TAB-CIC-TABL'      TO FIO-AKEY.
           MOVE FIO-GET-KEY         TO FIO-CMND.
           PERFORM GNS-FIO-TAB.
           IF NOT FIO-STAT-OKS
               MOVE 'TAB'           TO MSG-COD-SIST
               MOVE 'CIC0999NEX'    TO MSG-COD-MENS
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC    TO FRM-MENS
               MOVE FRM-SUAR-MAL    TO FRM-SUAR
               GO TO FIN-BUSCA-MONEDA-NAC.
           MOVE TAB-COD-CTAB IN TAB TO WSS-COD-MNAC IN WSS-VARI.
       FIN-BUSCA-MONEDA-NAC.
           EXIT.

       VALIDA-CTACTE-MLT SECTION.
       INI-VALIDA-CTACTE-MLT.
           MOVE 'DEU'               TO FIO-SIST
           MOVE 'TLC'               TO TAB-COD-TTAB IN TAB
           MOVE LDC-COD-TIPO IN LDC TO TAB-COD-CTAB IN TAB
           MOVE FIO-GET-KEY         TO FIO-CMND
           PERFORM GNS-FIO-TAB
           IF NOT FIO-STAT-OKS
              MOVE SPACES  TO TAB-COD-DAT1 IN TAB(9).

           IF TAB-IND-VIGE IN TAB NOT = 'S'
              MOVE SPACES  TO TAB-COD-DAT1 IN TAB(9).

           MOVE SPACES     TO MSG-COD-MENS.

           IF WSS-IIC-ICAC IS NOT NUMERIC
              MOVE ZEROES TO WSS-IIC-ICAC.

           IF WSS-IIC-ICAC > ZEROES
              GO TO FIN-VALIDA-CTACTE-MLT.

           IF TAB-COD-DAT1 IN TAB(9) = 'S'
              MOVE 'DEU'          TO MSG-COD-SIST
              MOVE 'CLFICACOBLIG' TO MSG-COD-MENS
              GO TO FIN-VALIDA-CTACTE-MLT.

           MOVE 'N'            TO WSS-IND-DESA-CLF.
           IF TAB-COD-DAT1 IN TAB(9) = 'D'
              MOVE 'S'            TO WSS-IND-DESA-CLF
              MOVE 'DEU'          TO MSG-COD-SIST
              MOVE 'CLFICACOBLIG' TO MSG-COD-MENS
              GO TO FIN-VALIDA-CTACTE-MLT.

       FIN-VALIDA-CTACTE-MLT.
           EXIT.
      *RGD-FIN 30-08-2010
      *AFRI-INI-SEP-2005
       DEL-ACG SECTION.
       INI-DEL-ACG.
           MOVE SPACES TO ACG-KEY-IACG IN ACG.
           MOVE CLF-KEY-ICLF IN CLF TO ACG-CIC-ICLF IN ACG.
           MOVE FIO-GET-NLS TO FIO-CMND.
       LUP-DEL-ACG.
           PERFORM LDC-FIO-ACG.
           IF FIO-STAT-OKS
               MOVE FIO-END-BRW TO FIO-CMND
               PERFORM LDC-FIO-ACG.

           IF NOT ( FIO-STAT-OKS AND
              ACG-CIC-ICLF IN ACG = CLF-KEY-ICLF IN CLF )
               GO TO FIN-DEL-ACG.

           MOVE FIO-GET-KEY-UPD TO FIO-CMND.
           PERFORM LDC-FIO-ACG.
           IF NOT FIO-STAT-OKS
               GO TO FIN-DEL-ACG.

           MOVE FIO-DEL TO FIO-CMND.
           PERFORM LDC-FIO-ACG.
           IF NOT FIO-STAT-OKS
               MOVE 'DEU'        TO MSG-COD-SIST
               MOVE 'ACG    DEL' TO MSG-COD-MENS
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS
               GO TO FIN-DEL-ACG.

           MOVE CLF-KEY-ICLF IN CLF TO ACG-CIC-ICLF IN ACG.
           MOVE FIO-GET-NLS TO FIO-CMND.
           GO TO LUP-DEL-ACG.
       FIN-DEL-ACG.
           EXIT.
       DEL-LCC SECTION.
       INI-DEL-LCC.
           MOVE SPACES              TO LCC-KEY-ILCC IN LCC.
           MOVE CLF-KEY-ICLF IN CLF TO LCC-CIC-ICLF IN LCC.
           MOVE FIO-GET-NLS TO FIO-CMND.
       LUP-DEL-LCC.
           PERFORM LDC-FIO-LCC.
           IF FIO-STAT-OKS
               MOVE FIO-END-BRW TO FIO-CMND
               PERFORM LDC-FIO-LCC.

           IF NOT ( FIO-STAT-OKS AND
              CLF-KEY-ICLF IN CLF = LCC-CIC-ICLF IN LCC )
               GO TO FIN-DEL-LCC.

           MOVE FIO-GET-KEY-UPD TO FIO-CMND.
           PERFORM LDC-FIO-LCC.
           IF NOT FIO-STAT-OKS
               GO TO FIN-DEL-LCC.

           MOVE FIO-DEL TO FIO-CMND.
           PERFORM LDC-FIO-LCC.
           IF NOT FIO-STAT-OKS
               MOVE 'DEU'        TO MSG-COD-SIST
               MOVE 'LCC    DEL' TO MSG-COD-MENS
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS
               GO TO FIN-DEL-LCC.

           MOVE CLF-KEY-ICLF IN CLF TO LCC-CIC-ICLF IN LCC.
           MOVE FIO-GET-NLS TO FIO-CMND.
           GO TO LUP-DEL-LCC.
       FIN-DEL-LCC.
           EXIT.
       COPY LDCBFLCC.
       COPY LDCBFACG.
      *AFRI-FIN-SEP-2005
      *>>>>
      *>>>>
