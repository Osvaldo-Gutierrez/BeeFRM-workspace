       IDENTIFICATION DIVISION.
      *========================
       PROGRAM-ID.   LDCPQCLC.
       AUTHOR.       CONSIST.
       DATE-WRITTEN. 08-May-19 11:45 AM.

      * NOMBRE PROGRAMA                   LDCPQCLC
      * VERSION PGM                       3.1
      * VERSION SKL                       19.04.15
      * OPCION                            CON
      * ARCHIVO BASE                      LDCCLF
      * PANTALLA                          LDCCLC
      * INP/OUT                           DATACOM
      * TAMANO COMMAREA                   250

      *<<<< CMT_ID
      *---------------------------------------------------------
      *
      * MODIFICACIONES
      * AUTOR:    MAURICIO A. BRAVO M.
      * FECHA:    29-07-2009
      * PROYECTO    : LEM EMPRESAS
      * MODIFICACION:
      *      - SE DESACTIVA SUMA A CONTADOR CLC-ITEM-TLDC
      *      - SE AGREGA SUMA A CONTADOR DE ITERACION CLC-ITEM-TLDC
      *        PARA CONSIDERAR LINEAS CON ARC Y ARG.
      *---------------------------------------------------------
      * MODIFICACIONES
      * AUTOR:    MARCELO HERRERA M.
      * FECHA:    08-OCT-2009
      * PROYECTO    : MULTILINEA INMOBILIARIA
      * MODIFICACION:
      *      - SOLO SE CONSIDERAN CLF TIPO CLF
      *---------------------------------------------------------
      * ETIQUETA   :*AFRI-INI 01-AGO-2012 CALCULO DISPONIBLE MARGEN
      * OBJETIVO   : - ELIMINAR GLOSA DES PARA LINEAS MARCADAS CON NR
      *                EN TABLA TLC DE DEU
      * FECHA      : AGOSTO-2012
      * RESPONSABLE: AFRI-CGC
      * MANTENCION : CALCULO DISPONIBLE MARGEN Y DETALLE DE LINEA
      *-----------------------------------------------------------------
      *>>>>

       ENVIRONMENT DIVISION.
      *=====================
       CONFIGURATION SECTION.
      *----------------------
       SPECIAL-NAMES.
               DECIMAL-POINT IS COMMA.
       DATA DIVISION.
      *==============

       WORKING-STORAGE SECTION.
      *------------------------
      * COPY GNSWGSCR.
       COPY GNSWGCVT.
       77  WSS-TAG-LDCPQCLC-INI PIC X(125) VALUE                        
           '<IDNPGM NOM=$LDCPQCLC$ SKL=$19.04.15$ VSN=${vsnpq}$        
      -    'GEN=$08-May-19 11:45 AM$ FNC=${fncpq}$/>'.    

       COPY GNSWCSCR.
      *PTC-INI
      *PTC-SUB
      * COPY GNSWVSCR.
       COPY GNSWV3CR.
      *PTC-FIN
      *<<<< MI_COMMAREA
           03 CMA-VARI.
              05  WSS-IND-ACUM          VALUE 0       PIC 9(01).
                 88 DESPLIEGA           VALUE 0.
                 88 ACUMULA             VALUE 0.
                 88 SOLO-ACUMULA        VALUE 1.
                 88 YA-ACUMULO          VALUE 1.
              05 WSS-VAL-CDIS      COMP-3             PIC S9(11).
              05 WSS-VAL-CUTI      COMP-3             PIC S9(11).
              05 SCR-IND-MCLI                         PIC X(01).
      *ALD-BNL
              05 SCR-IMAX          COMP               PIC S9(04).
              05 SCR-I             COMP               PIC S9(04).
              05 SCR-IND-OCIC                         PIC X(01).
      *>>>>
       COPY LDCWICLC.

       COPY LDCBRCLF.


       COPY GNSWVIDD.
       COPY GNSWGRQA.
       COPY GNSWGUIB.
       COPY GNSWGELS.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-CLF-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-TAB-REQA==.
       COPY GNSBRTAB.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-MSC-REQA==.
       COPY GNSBRMSC.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-MSG-REQA==.
       COPY GNSBRMSG.
       COPY GNSWCFIO.
       COPY GNSWVFIO.
      *PTC-INI
      *PTC-SUB
      * ISP  10-MAY-2001 13:46:35 
      * COPY GNSWGFRM.
       COPY GNSWG3CF.
       COPY GNSWGTSK.
       COPY GNSWGQUE.
      *PTC-FIN
       COPY GNSWVNUM.
       COPY GNSWCNUM.
       COPY GNSWGFEC.
       COPY GNSWGHOY.
       COPY GNSWCVRF.
       COPY GNSWVVRF.
       COPY GNSWGIDC.
       COPY GNSWGSYS.

      *<<<< WSS
       COPY TABWGTVC.
      *<<<< PGM_DTC
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-CRI-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-FIA-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-REC-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-RCE-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-CIC-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-DBC-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-DCP-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-DCE-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-OFI-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-USR-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-CAM-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-GDG-REQA==.

       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-ARC-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-ARG-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-LDC-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-RDC-REQA==.
      *>>>>
      * Entidades de LDC
       COPY LDCBRLDC.
       COPY LDCBRARC.
       COPY LDCBRARG.
       COPY LDCBRRDC.
      * Entidades de SGC
       COPY SGCBRDBC.
       COPY SGCBRREC.
      * Entidades de DEU
       COPY DEUBRCRI.
       COPY DEUBRFIA.
      * Entidades de GAR
       COPY BGLBRGDG.
       COPY TABBRCAM.
       COPY GNSWGPES.

      * MHM ini 31-JAN-1996
       COPY LDCWGCLC.
      * MHM fin 31-JAN-1996
      * Entidades de GNS
       COPY GNSBRRCE.
       COPY GNSWGCPT.
       COPY GNSWGSTR.
       COPY GNSWGFEC.
       COPY GNSWGHOY.
      * Entidades de TAB
       COPY TABBROFI.
       COPY TABBRUSR.
       COPY LDCWGCCU.
       COPY LDCWGCEG.
      *CONTINGENCIA LECTURA TABLA ARC
       01  WSS-ITEM-CLX.
           03  FILLER        VALUE 'T:'               PIC X(02).
           03  WSS-NUM-TASK  VALUE ZEROES             PIC 9(05).

           03  FILLER        VALUE ' C:'              PIC X(03).
           03  WSS-NUM-CONT  VALUE ZEROES             PIC 9(05).
           03  FILLER        VALUE ' TBL: '           PIC X(06).
           03  WSS-TABL      VALUE SPACES             PIC X(03).
           03  FILLER        VALUE ' CMD: '           PIC X(06).
           03  WSS-CMND      VALUE ZEROES             PIC 9(05).

           03  FILLER        VALUE ' S: '             PIC X(04).
           03  WSS-STAT      VALUE SPACES             PIC X(02).

           03  FILLER        VALUE ' K:'              PIC X(03).
           03  WSS-VKEY      VALUE SPACES             PIC X(100).
      *CONTINGENCIA LECTURA TABLA ARC
      *<<<< INI ISP 14-MAY-1996
       01  WSS-CLC-EDT.
           03 WSS-CLC-EDT-CDIS-EDT    PIC ---.---.---.--9.
           03 WSS-CLC-EDT-CDIS-ALF    PIC X(15).
      *<<<< FIN ISP 14-MAY-1996
       01  CLC-VARI.
           03 CLF-VEZ-ARC                            PIC X(01).
           03 CLF-PRM-VEZ-ARC      VALUE 'P'         PIC X(01).
           03 CLF-OTR-VEZ-ARC      VALUE 'O'         PIC X(01).
           03 CLF-VEZ-ARG                            PIC X(01).
           03 CLF-PRM-VEZ-ARG      VALUE 'P'         PIC X(01).
           03 CLF-OTR-VEZ-ARG      VALUE 'O'         PIC X(01).
           03 CLC-I                COMP              PIC S9(04).
           03 CLC-EXI-ARC                            PIC X(01).
           03 CLC-EXI-ARG                            PIC X(01).
           03 CLC-IMP                                PIC X(01).
           03 CLC-SI-IMP    VALUE 'S'                PIC X(01).
           03 CLC-NO-IMP    VALUE 'S'                PIC X(01).
      * MHM ini 31-JAN-1996
      *     03 CLC-NAME-QUE.
      *        05 CLC-TERM                            PIC X(04).
      *        05 CLC-TYPE      VALUE 'CLC'           PIC X(04).
      *<<<<
      *     03 CLC-LONG-TS   COMP VALUE +608          PIC S9(04).
      *>>>>
      *     03 CLC-TS.
      *        05 CLC-VEC-TS OCCURS 8.
      *          07 CLC-NUM-ILDC                     PIC 9(02).
      *           07 CLC-IND-VIGE                     PIC X(01).
      *           07 CLC-COD-VCLC                     PIC X(04).
      *           07 CLC-COD-TOOC                     PIC X(05).
      *           07 CLC-COD-AOOC                     PIC X(08).
      *           07 CLC-COD-TOGA                     PIC X(05).
      *           07 CLC-COD-AOGA                     PIC X(08).
      *           07 CLC-NUM-PORG                     PIC 9(03).
      *           07 CLC-IND-MGAR                     PIC X(01).
      *<<<<
      *           07 CLC-COD-SGAR                     PIC X(01).
      *>>>>
      *           07 CLC-FEC-FVEN.
      *              09 CLC-NUM-DVEN                  PIC 9(02).
      *              09 CLC-NUM-MVEN                  PIC 9(02).
      *              09 CLC-NUM-SVEN                  PIC 9(02).
      *              09 CLC-NUM-AVEN                  PIC 9(02).
      *           07 CLC-VAL-CMLC                     PIC S9(11)V9(4).
      *           07 CLC-VAL-CDLC                     PIC S9(11)V9(4).
      * MHM fin 31-JAN-1996

       01  WSS-MONE.
           03  WSS-COD-UEFES VALUE SPACES            PIC X(06).
           03  WSS-COD-PESOS VALUE SPACES            PIC X(06).

      * DEFINE 01  WSS-VARI DE PGM1ANIDX
       01  WSS-VARI.
      *CONTINGENCIA LECTURA TABLA ARC
           03 WSS-VSN-LARC                        PIC X(01).
      *CONTINGENCIA LECTURA TABLA ARC
      *RVM-CST-INI 25-APR-1996
           03 WSS-CLC-DCOR.
              05 WSS-GLS-TOOC                     PIC X(05).
      *ADA-INI 7-DEC-1999
      *       05 WSS-GLS-AOOC                     PIC X(08).
              05 WSS-GLS-AOOC.
                 07 FILLER                        PIC X(03).
                 07 WSS-GLS-AOOC-EXT              PIC X(05).
      *ADA-FIN 7-DEC-1999
      *RVM-CST-FIN 25-APR-1996
      * SMC-INI 23-11-1993
           03 WSS-FEC-FCIE     VALUE 0            PIC 9(08).
           03 WSS-CIC-ICLF                        PIC X(12).
      * SMC-FIN 23-11-1993
           03 WSS-IMAX                  VALUE 8    PIC 9(02).
      * PARA USAR GARSRC:ERRFNDKEY.SRC
           03 WSS-IBUS                             PIC 9(01).
           03 WSS-IBUS-LDC                         PIC 9(01).
           03 WSS-YA-ACUMULO            VALUE 1    PIC 9(01).

           03 WSS-I                 VALUE ZEROES   PIC 9(02).

           03 WSS-IND-LDC               VALUE 'N'  PIC X(01).
           03 PGM-STAT-ADI.
              05 PGM-STAT-RDC           VALUE '23' PIC X(02).
                   88 PGM-STAT-RDC-OKS  VALUE '00'.
                   88 PGM-STAT-RDC-NUL  VALUE '  '.
           03 WSS-FEC-FHOY.
              05 WSS-NUM-SHOY                      PIC 9(02).
              05 WSS-NUM-AHOY                      PIC 9(02).
              05 WSS-NUM-MHOY                      PIC 9(02).
              05 WSS-NUM-DHOY                      PIC 9(02).
              05  WSS-COD-PESO                           PIC X(06).
           03  ARC-KEY-IARC.
               05  ARC-KEY-ILDC.
                   07 ARC-CAI-ICLF                       PIC X(04).
                   07 ARC-IIC-ICLF                       PIC 9(08).
                   07 ARC-NUM-ILDC                       PIC 9(02).
               05 ARC-NUM-IARC                           PIC 9(01).
           03  ARG-KEY-IARG.
               05 ARG-KEY-ILDC.
                   07 ARG-CAI-ICLF                       PIC X(04).
                   07 ARG-IIC-ICLF                       PIC 9(08).
                   07 ARG-NUM-ILDC                       PIC 9(02).
               05 ARG-NUM-IARG                           PIC 9(01).
           03  WSS-FIN        VALUE ZEROES               PIC 9(01).
           03  WSS-IARC       VALUE ZEROES               PIC 9(02).
           03  WSS-IARG       VALUE ZEROES               PIC 9(02).
           03  WSS-IFLD       VALUE ZEROES               PIC 9(02).
           03  WSS-J          VALUE ZEROES               PIC 9(02).
           03  WSS-FS-ARC     VALUE ZEROES               PIC 9(02).
           03  WSS-FS-ARG     VALUE ZEROES               PIC 9(02).
      *JSS-INI 8-OCT-1993 INDICADOR PARA SABER SI EXISTE
      *               POR LO MENOS UN ARC O ARG
           03  WSS-IND-ACAG   VALUE 'N'                  PIC X(01).
      *JSS-FIN
      *>>>>
       01  PGM-VARI.
           03 PGM-ICLR                  VALUE ' '       PIC X(01).
           03 PGM-LIMPIAR-TODO          VALUE ' '       PIC X(01).
           03 PGM-LIMPIAR-LLAVES        VALUE 'K'       PIC X(01).
           03 PGM-LIMPIAR-CAMPOS        VALUE 'F'       PIC X(01).
           03 PGM-NO-LIMPIAR-NADA       VALUE 'N'       PIC X(01).
           03 PGM-PROG                                  PIC X(08).
           03 PGM-NTRN                                  PIC X(04).
           03 PGM-STAT.
              05 PGM-STAT-DBC.
                 88 PGM-STAT-DBC-NUL    VALUE '  '.
                 07 PGM-STT1-DBC        VALUE '2' PIC X(01).
                    88 PGM-STAT-DBC-OKS VALUE '0'.
                 07 PGM-STT2-DBC        VALUE '3' PIC X(01).
              05 PGM-STAT-CLF.
                 88 PGM-STAT-CLF-NUL    VALUE '  '.
                 07 PGM-STT1-CLF        VALUE '2' PIC X(01).
                    88 PGM-STAT-CLF-OKS VALUE '0'.
                 07 PGM-STT2-CLF        VALUE '3' PIC X(01).
              05 PGM-STAT-USR.
                 88 PGM-STAT-USR-NUL    VALUE '  '.
                 07 PGM-STT1-USR        VALUE '2' PIC X(01).
                    88 PGM-STAT-USR-OKS VALUE '0'.
                 07 PGM-STT2-USR        VALUE '3' PIC X(01).
              05 PGM-STAT-CRI.
                 88 PGM-STAT-CRI-NUL    VALUE '  '.
                 07 PGM-STT1-CRI        VALUE '2' PIC X(01).
                    88 PGM-STAT-CRI-OKS VALUE '0'.
                 07 PGM-STT2-CRI        VALUE '3' PIC X(01).
           03 PGM-SRNF                  VALUE '23'      PIC X(02).
           03 PGM-SOKS                  VALUE '00'      PIC X(02).
           03 PGM-SNUL                  VALUE '  '      PIC X(02).
           03 PGM-SUAR                  VALUE SPACES    PIC X(15).
           03 PGM-CMMA.
              05 PGM-CMMA-CHR OCCURS 269 PIC X(01).
       LINKAGE SECTION.
      *----------------
       01  DFHCOMMAREA.
           02 DFH-CMMA OCCURS 269 PIC X(01).
       COPY GNSLGFIO.

       PROCEDURE DIVISION.
      *===================

       MAIN SECTION.
       INI-MAIN.
           PERFORM INI.
       LUP-MAIN.
           IF SCR-INST = SCR-INST-HCM
                 PERFORM SCR-COM.
           IF SCR-CCPP = 'ACC'
                 PERFORM SCR-ACC
           ELSE
                 MOVE SCR-INST-HCM TO SCR-INST.
           GO TO LUP-MAIN.
       FIN-MAIN.
           EXIT.

       INI SECTION.
       INI-INI.
       COPY GNSBGEIB.
       COPY GNSBGEDB.
           MOVE LOW-VALUES TO CLC-FLD.
           MOVE LOW-VALUES TO CLC-EDT.
           PERFORM GNS-PRO-RCK.
           PERFORM GNS-BUS-VCA.
           MOVE +269 TO SCR-TCMA.
           PERFORM GNS-HDL-SYS.
           PERFORM GNS-HDL-FRM.
           MOVE 'LDCPQCLC' TO FIO-PROG.
           PERFORM GNS-BUS-IDD.
      *PTC-INI
           PERFORM GNS-ERR-QUE.
           PERFORM GET-TSK-TERM.
      *PTC-FIN
      *<<<< INI_FIO
      *PTC ini
           PERFORM GNS-ERR-QUE.
      *CONTINGENCIA LECTURA TABLA ARC
           MOVE 'ERRGSGI' TO QUE-COLA.
           MOVE QUE-DEL TO QUE-CMND.
           PERFORM GNS-PRO-QUE.
      *CONTINGENCIA LECTURA TABLA ARC
      *PTC fin
      *<<<< INI_FIO
           PERFORM GET-FHOY.
      * OBTIENE CODIGO VALOR DE CAMBIO DE PESOS MEDIANTE CIC DE LA MONED
           MOVE 'TAB'          TO FIO-SIST.
           MOVE 'VLR'          TO TAB-CIC-TTAB IN TAB.
           MOVE '0999  '       TO TAB-CIC-CTAB IN TAB.
           MOVE 'TAB-CIC-TABL' TO FIO-AKEY.
           MOVE FIO-GET-KEY    TO FIO-CMND.
           PERFORM GNS-FIO-TAB.
           IF NOT FIO-STAT-OKS
               MOVE 'TAB'          TO MSG-COD-SIST
               MOVE 'CIC0999  NEX' TO MSG-COD-MENS
               PERFORM GET-MSG
               PERFORM PRG-ABT.

           MOVE TAB-COD-CTAB IN TAB TO CCU-COD-PESO IN CCU-VARI.

           MOVE TAB-COD-CTAB IN TAB TO WSS-COD-PESOS TVC-MNAC.

           MOVE 'TAB'          TO FIO-SIST.
           MOVE 'VLR'          TO TAB-CIC-TTAB.
           MOVE '0998'         TO TAB-CIC-CTAB.
           MOVE FIO-GET-KEY    TO FIO-CMND.
           MOVE 'TAB-CIC-TABL' TO FIO-AKEY.
           PERFORM GNS-FIO-TAB.
           IF NOT FIO-STAT-OKS
               GO TO FIN-INI.
           MOVE TAB-COD-CTAB IN TAB TO WSS-COD-UEFES.

      *PVG INI 24-JUN-2009
           MOVE ZEROES TO CLC-ITEM-TLDC.
      *PVG FIN 24-JUN-2009
      *>>>>
       FIN-INI.
           EXIT.

       COPY GNSBHSYS.
       COPY GNSBHFRM.
       COPY GNSBPRCK.
       GNS-BUS-VCA SECTION.
       INI-GNS-BUS-VCA.
           MOVE 0 TO FRM-IFLD.
       LUP-GNS-BUS-VCA.
           ADD 1 TO FRM-IFLD.
           IF FRM-IFLD NOT > EIBCALEN AND
              FRM-IFLD NOT > 269
                MOVE DFH-CMMA(FRM-IFLD) TO PGM-CMMA-CHR(FRM-IFLD)
                GO TO LUP-GNS-BUS-VCA.
           MOVE PGM-CMMA TO SCR-VARI.
       FIN-GNS-BUS-VCA.
           EXIT.
       COPY GNSBBIDD.

       SCR-COM SECTION.
       INI-SCR-COM.
           MOVE FRM-CPSF-AEY TO FRM-CPIM-AEY.
           PERFORM PRO-ALL.
           PERFORM SCR-CLRA-CLC.
           PERFORM EDT-KEY-CLC.
           PERFORM EDT-FLD-CLC.
           PERFORM SCR-PUTA.
           MOVE SCR-INST-HCM TO SCR-INST.
           MOVE SCR-CMNP     TO SYS-PROG.
           MOVE SCR-VARI     TO SYS-CMMA.
           MOVE SCR-TCMA     TO SYS-TCMA.
           MOVE SYS-XCTL     TO SYS-CMND.
      *PTC-INI
           IF NOT SCR-OFRM-SRV
      *PTC-FIN
           PERFORM GNS-PRO-SYS.
       XCT-ERR.
           MOVE 'XCTERR    ' TO MSG-COD-MENS.
           MOVE 'GNS'        TO MSG-COD-SIST.
           PERFORM GET-MSG.
           MOVE MSG-GLS-DESC TO SYS-MEN1.
           MOVE SYS-PROG     TO SYS-MEN2.
           MOVE SYS-ABOR     TO SYS-CMND.
      *PTC-INI
           IF NOT SCR-OFRM-SRV
      *PTC-FIN
           PERFORM GNS-PRO-SYS.
       COPY GNSBGGBK.
       FIN-SCR-COM.
           EXIT.



       SCR-ACC SECTION.
       INI-SCR-ACC.
           IF SCR-INST = SCR-INST-HKY
               PERFORM HBL-KEY
               MOVE SCR-INST-GKY TO SCR-INST
               PERFORM SCR-DMSG
           ELSE
           IF SCR-INST = SCR-INST-GKY
                PERFORM SCR-KEY
                IF SCR-STAT NOT = SCR-STAT-ABT
                        PERFORM SCR-TRL
                ELSE
                        PERFORM DESSCRTRL
                        GO TO FIN-SCR-ACC
           ELSE
           IF SCR-INST = SCR-INST-GAB
                PERFORM GET-CON
           ELSE
           IF SCR-INST = SCR-INST-BRW
               MOVE SCR-FFLD TO FRM-FFLD
               PERFORM BRW-SCR-ACC.
           PERFORM DESSCRTRL.
      *<<<< PFS_SCR_ACC
           IF FRM-FFLD = FRM-FFLD-PF6
                    OR   FRM-FFLD-PF5
               PERFORM VAL-NUM-KEY-CLC
               PERFORM VAL-NUM-FLD-CLC
               PERFORM RST-STAT
               PERFORM FND-SCR-KEY THRU FIN-SCR-KEY
               IF SCR-STAT NOT = SCR-STAT-ABT
                   PERFORM SCR-TRL
               ELSE
                   PERFORM DESSCRTRL
                   GO TO FIN-SCR-ACC.
      *>>>>
           MOVE SPACES TO FRM-MENS.
           PERFORM SCR-MSSG.
       FIN-SCR-ACC.
           EXIT.

       BRW-SCR-ACC SECTION.
       INI-BRW-SCR-ACC.
       FIN-BRW-SCR-ACC.
           EXIT.




       SCR-DMSG SECTION.
       INI-SCR-DMSG.
           IF PGM-ICLR = PGM-NO-LIMPIAR-NADA
               NEXT SENTENCE
           ELSE
           IF PGM-ICLR = PGM-LIMPIAR-TODO
               PERFORM SCR-CLRA-CLC
               PERFORM EDT-KEY-CLC
               PERFORM EDT-FLD-CLC
           ELSE
           IF PGM-ICLR = PGM-LIMPIAR-LLAVES
               PERFORM CLR-KEY-CLC
               PERFORM EDT-KEY-CLC
           ELSE
               PERFORM CLR-FLD-CLC
               PERFORM EDT-FLD-CLC.
           PERFORM SCR-PUTA.
           PERFORM SCR-EXIT.
       FIN-SCR-DMSG.
           EXIT.

       SCR-KEY SECTION.
       INI-SCR-KEY.
           PERFORM SCR-RST.
           PERFORM GET-KEY.
           IF FRM-STAT-ABT
                   MOVE SPACES TO FRM-MENS
                   PERFORM SCR-MSSG
                   GO TO FIN-SCR-KEY.
       FND-SCR-KEY.
           MOVE SPACES TO FRM-MENS.
           PERFORM FND-KEY.
           IF FIO-STAT-OKS
               PERFORM PUT-SCR
               MOVE PGM-LIMPIAR-TODO TO PGM-ICLR
               GO TO FIN-SCR-KEY.
      *JSS ELSE
      *        PERFORM CLR-FLD-CLC.
       ERR-SCR-KEY.
      *PTC-INI
           MOVE 'S' TO SCR-IERR.
      *PTC-FIN
           MOVE PGM-LIMPIAR-CAMPOS TO PGM-ICLR.
           IF FRM-MENS NOT > SPACES
               IF FIO-STAT-EOF
                   MOVE 'REGEOF    ' TO MSG-COD-MENS
                   MOVE 'GNS' TO MSG-COD-SIST
                   PERFORM GET-MSG
                   MOVE MSG-GLS-DESC TO FRM-MENS
               ELSE
               IF FIO-STAT = FIO-STAT-NEX
                   MOVE 'REGNEX    ' TO MSG-COD-MENS
                   MOVE 'GNS' TO MSG-COD-SIST
                   PERFORM GET-MSG
                   MOVE MSG-GLS-DESC TO FRM-MENS
               ELSE
                   MOVE 'FIOSTAT' TO MSG-COD-TMSG
                   MOVE FIO-STAT  TO MSG-COD-CMSG
                   MOVE 'GNS'     TO MSG-COD-SIST
                   PERFORM GET-MSG
                   MOVE MSG-GLS-DESC TO FRM-MENS.
           PERFORM SCR-MSSG.
           MOVE SCR-STAT-ABT TO SCR-STAT.
       FIN-SCR-KEY.
           EXIT.

       SCR-RST SECTION.
       INI-SCR-RST.
           MOVE SPACES       TO PGM-ICLR.
           MOVE SPACES       TO SCR-ACTU.
           MOVE SCR-STPP     TO SCR-STAT.
           MOVE SCR-MFLD-NOT TO SCR-MFLD.
           MOVE LOW-VALUES   TO CLC-FLD.
           MOVE LOW-VALUES TO CLC-EDT.
       FIN-SCR-RST.
           EXIT.

       GET-KEY SECTION.
       INI-GET-KEY.
           PERFORM SCR-GKEY.
           IF FRM-STAT-ABT
               MOVE SCR-STAT-ABT TO SCR-STAT.
       FIN-GET-KEY.
           EXIT.

       GET-IKY SECTION.
       INI-GET-IKY.
           PERFORM SCR-GIKY.
           IF FRM-STAT-ABT
               MOVE SCR-STAT-ABT TO SCR-STAT.
       FIN-GET-IKY.
           EXIT.

       FND-KEY SECTION.
       INI-FND-KEY.
      *<<<< INI_FND_KEY

      * ASUME MENSAJE DEL SISTEMA DEL HIJO EN ERRFNDKEY.SRC
           MOVE 1 TO WSS-IBUS, WSS-IBUS-LDC.
           MOVE SPACES TO FRM-MENS.

           IF FRM-FFLD = FRM-FFLD-PF5
               MOVE PGM-SNUL TO PGM-STAT-CLF
               MOVE PGM-SNUL TO PGM-STAT-DBC
               SUBTRACT 1 FROM SCR-I GIVING CLC-I
               IF CLC-I NOT > ZEROES
                   MOVE 'CLF LDCPRV' TO MSG-COD-MENS
                   GO TO ERR-FND-KEY
               ELSE
                   GO TO CARGA-LDC
           ELSE
           IF FRM-FFLD = FRM-FFLD-PF6
               MOVE PGM-SNUL TO PGM-STAT-CLF
               MOVE PGM-SNUL TO PGM-STAT-DBC
               ADD 1 SCR-I GIVING CLC-I
               IF CLC-I > SCR-IMAX
                   MOVE 'CLF LDCNXT' TO MSG-COD-MENS
                   GO TO ERR-FND-KEY
               ELSE
                   GO TO CARGA-LDC.

           GO TO LEE-PAD-CLF.
      *>>>>
           PERFORM KEY-ALL-CLC.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM LDC-FIO-CLF.
           IF FIO-STAT-OKS
               MOVE CLF-STP-ITRN IN CLF TO SCR-UMOD.
           MOVE FIO-STAT TO PGM-STAT-CLF.
      *<<<< FIN_FND_KEY
       LEE-PAD-CLF.
      * Lee por Capacidad de Credito y luego busca Cliente
           IF CLF-IIC-ICLF IN CLC-FLD > ZEROES
               PERFORM KEY-ALL-CLC
               MOVE FIO-GET-KEY TO FIO-CMND
               PERFORM LDC-FIO-CLF
               MOVE FIO-STAT TO PGM-STAT-CLF
               IF FIO-STAT-OKS
                  PERFORM GET-CUR-RDC
                  IF NOT PGM-STAT-RDC-OKS
                     MOVE 'DEU'          TO MSG-COD-SIST
                     MOVE 'CLF    NORDC' TO MSG-COD-MENS
                     MOVE SCR-STAT-CON TO SCR-STAT
                     GO TO ERR-FND-KEY
                  ELSE
      *MHM-INI 08-OCT-2009 MULTILINEA INMOBILIARIA
                  IF CLF-COD-TOCF IN CLF NOT = 'CLF'
                     MOVE 'DEU'          TO MSG-COD-SIST
                     MOVE 'TIO    NOCLF' TO MSG-COD-MENS
                     MOVE SCR-STAT-CON TO SCR-STAT
                     PERFORM GET-MSG
                     MOVE MSG-GLS-DESC TO FRM-MENS
                     MOVE 'S' TO SCR-IERR
                     GO TO ERR-FND-KEY
                  ELSE
      *MHM-FIN 08-OCT-2009 MULTILINEA INMOBILIARIA
                     MOVE RDC-CIC-ICLI IN RDC TO DBC-CIC-ICLI IN DBC
                     MOVE FIO-GET-KEY    TO FIO-CMND
                     PERFORM SGC-FIO-DBC
                     MOVE FIO-STAT TO PGM-STAT-DBC
                     IF NOT FIO-STAT-OKS
                        MOVE 'TAB'        TO MSG-COD-SIST
                        MOVE 'CLI    NEX' TO MSG-COD-MENS
                        PERFORM GET-MSG
                        MOVE MSG-GLS-DESC TO FRM-MENS
                        MOVE FIO-STAT-NEX TO PGM-STAT-DBC
                        MOVE SCR-STAT-CON TO SCR-STAT
                        GO TO ERR-FND-KEY
                     ELSE
                        PERFORM GET-NXT-RDC
                        MOVE '00' TO PGM-STAT-DBC
                        MOVE '00' TO FIO-STAT
                        GO TO FIN-BUS-PAD
           ELSE
              MOVE 'CLF    NEX' TO MSG-COD-MENS
              GO TO ERR-FND-KEY.

      * Lee Cliente y luego busca Capacidad de Credito
      *    busca el padre por alguna de las llaves (la digitada)
           IF DBC-NUM-ICLI IN CLC-FLD NOT = ZEROES
      *IDC-CLI Busca Cliente por medio de IdC
               MOVE DBC-NUM-ICLI IN CLC-FLD TO DBC-NUM-ICLI IN DBC
               MOVE DBC-IND-ICLI IN CLC-FLD TO DBC-IND-ICLI IN DBC
               MOVE DBC-GLS-ICLI IN CLC-FLD TO DBC-GLS-ICLI IN DBC
               MOVE 'DBC-IDC-ICLI' TO FIO-AKEY
               MOVE FIO-GET-KEY    TO FIO-CMND
               PERFORM GET-CLI
               IF MSG-COD-MENS NOT > SPACES
                   MOVE DBC-GLS-NOMC IN DBC TO CPT-STRN
                   PERFORM CPT-BLKS
                   MOVE CPT-STRN TO DBC-GLS-NOMC IN CLC-FLD
                   MOVE DBC-CAI-ICLI IN DBC TO
                        DBC-CAI-ICLI IN CLC-FLD
                   MOVE DBC-IIC-ICLI IN DBC TO
                        DBC-IIC-ICLI IN CLC-FLD
                   MOVE '00' TO PGM-STAT-DBC
      *ISP-INI 01-03-1996
      *            GO TO FIN-BUS-CLI-KEY.
                   GO TO FIN-BUS-CLI-KEY
               ELSE
                   MOVE MSG-GLS-DESC TO FRM-MENS
                                        CLC-GLS-MENS
                   MOVE 'S' TO SCR-IERR.
      *ISP-FIN 01-03-1996
           IF DBC-GLS-NOMC IN CLC-FLD > SPACES
      *NOM-CLI Busca Cliente por medio del Nombre
               MOVE DBC-GLS-NOMC IN CLC-FLD TO STR-GLS-GSTR
               PERFORM STR-UNS
               MOVE STR-GLS-FUNS IN STR-VARI(1) TO
                    DBC-GLS-APAT IN DBC
               MOVE STR-GLS-FUNS IN STR-VARI(2) TO
                    DBC-GLS-AMAT IN DBC
               MOVE STR-GLS-FUNS IN STR-VARI(3) TO
                    DBC-GLS-NOMB IN DBC
               MOVE 'DBC-GLS-NOMC' TO FIO-AKEY
               MOVE FIO-GET-NLS    TO FIO-CMND
               PERFORM GET-CLI
               IF MSG-COD-MENS NOT > SPACES
                   MOVE DBC-NUM-ICLI IN DBC TO
                        DBC-NUM-ICLI IN CLC-FLD
                   MOVE DBC-VRF-ICLI IN DBC TO
                        DBC-VRF-ICLI IN CLC-FLD
                   MOVE DBC-IND-ICLI IN DBC TO
                        DBC-IND-ICLI IN CLC-FLD
                   MOVE DBC-GLS-ICLI IN DBC TO
                        DBC-GLS-ICLI IN CLC-FLD
                   MOVE DBC-GLS-NOMC IN DBC TO CPT-STRN
                   PERFORM CPT-BLKS
                   MOVE CPT-STRN TO DBC-GLS-NOMC IN CLC-FLD
                   MOVE DBC-CAI-ICLI IN DBC TO
                        DBC-CAI-ICLI IN CLC-FLD
                   MOVE DBC-IIC-ICLI IN DBC TO
                        DBC-IIC-ICLI IN CLC-FLD
                   MOVE '00' TO PGM-STAT-DBC
      *ISP-INI 01-03-1996
      *            GO TO FIN-BUS-CLI-KEY.
                   GO TO FIN-BUS-CLI-KEY
               ELSE
                   MOVE MSG-GLS-DESC TO FRM-MENS
                                        CLC-GLS-MENS
                   MOVE 'S' TO SCR-IERR.
      *ISP-FIN 01-03-1996

       FIN-BUS-CLI-KEY.
            IF MSG-COD-MENS > SPACES
                GO TO ERR-FND-KEY.

           MOVE '00' TO PGM-STAT-DBC.

      *SMC-INI 23-11-1993
           MOVE SPACES TO MSG-COD-MENS
           PERFORM BUS-CLF.
           IF MSG-COD-MENS > SPACES
              PERFORM GET-MSG
              MOVE MSG-GLS-DESC TO FRM-MENS
              GO TO ERR-FND-KEY.
      *SMC-FIN 23-11-1993

       FIN-BUS-PAD.

           IF NOT FIO-STAT-OKS
               MOVE 'CLF    NEX' TO MSG-COD-MENS
               GO TO ERR-FND-KEY.

      * NO ESTA EN BNL, A LO MEJOR SIGNIFICA OTRA LLAVE
           MOVE CLF-KEY-ICLF IN CLF TO LDC-CIC-ICLF IN LDC.
           MOVE ZEROES TO LDC-NUM-ILDC IN LDC.
           MOVE FIO-GET-NLS TO FIO-CMND.
           PERFORM LDC-FIO-LDC.
           IF NOT FIO-STAT-OKS OR
              LDC-CIC-ICLF IN LDC NOT = CLF-KEY-ICLF IN CLF
               MOVE 'LDC    NEX' TO MSG-COD-MENS
               GO TO ERR-FND-KEY.
           IF FIO-STAT-OKS
               MOVE FIO-END-BRW TO FIO-CMND
               PERFORM LDC-FIO-LDC.

           PERFORM GET-FHOY.
           MOVE HOY-SHOY           TO WSS-NUM-SHOY IN WSS-VARI.
           MOVE HOY-AHOY           TO WSS-NUM-AHOY IN WSS-VARI.
           MOVE HOY-MHOY           TO WSS-NUM-MHOY IN WSS-VARI.
           MOVE HOY-DHOY           TO WSS-NUM-DHOY IN WSS-VARI.

      *FLB CST  21-SEP-1994 CCU FUNCIONE LUEGO MCA/CMX Y ANTES ACA

      *    IF ( CLF-MSC-STAT IN CLF = 'A' OR 'V' ) AND
           IF ( CLF-MSC-STAT IN CLF = 'A' OR
                CLF-MSC-STAT IN CLF = 'V' OR
                CLF-COD-STAT IN CLF = 'M' AND
                CLF-MSC-STAT IN CLF NOT = 'V' OR
                CLF-COD-STAT IN CLF = 'X' ) AND
      *FLB CST  21-SEP-1994
              ( CLF-FEC-FVEN IN CLF NOT < WSS-FEC-FHOY IN WSS-VARI )

               MOVE CLF-KEY-ICLF IN CLF TO CCU-CIC-ICLF
               MOVE SPACES TO CCU-CAI-IOPC(1)
               MOVE ZEROES TO CCU-IIC-IOPC(1)
               MOVE SPACES TO CCU-CAI-DCAN(1)
               MOVE ZEROES TO CCU-IIC-DCAN(1)
               MOVE ZEROES TO CCU-NUM-DCAN(1)
               MOVE SPACES TO CCU-OPE-INDS
               PERFORM LDC-PRO-CCU
               IF CCU-NUM-MENS < CCU-NUM-CALC AND
                  CCU-NUM-MENS > ZEROES
                   IF CCU-MEN1 > SPACES AND CCU-MEN2 > SPACES
                       MOVE CCU-MENS TO FRM-MENS
                       GO TO ERR-FND-KEY
                   ELSE
                   IF CCU-MEN1 > SPACES
                       MOVE CCU-MEN1 TO FRM-MEN1
                       GO TO ERR-FND-KEY
                   ELSE
                   IF CCU-MEN2 > SPACES
                       MOVE CCU-MEN2 TO FRM-MEN2
                       GO TO ERR-FND-KEY
                   ELSE
                       GO TO ERR-FND-KEY
               ELSE
      * LTM-INI 29-04-1994
      * JPA ini  7-APR-1995
                    MULTIPLY CCU-VAL-CUTI IN CCU-VARI BY 1
                             GIVING WSS-VAL-CUTI ROUNDED
      *             MOVE CCU-VAL-CUTI IN CCU-VARI TO WSS-VAL-CUTI
      * JPA fin  7-APR-1995
                    MOVE WSS-VAL-CUTI TO FRM-VAL-CUTI IN CLC-FLD
                   SUBTRACT    WSS-VAL-CUTI FROM
                               CLF-VAL-CMAX IN CLF GIVING
                               FRM-VAL-CDIS IN CLC-FLD
      * LTM-FIN 29-04-1994
           ELSE
               MOVE 'CLF    NOVIG' TO MSG-COD-MENS
               GO TO ERR-FND-KEY.

      *JSS-INI 27-FEB-1996
           MOVE 'TAB' TO FIO-SIST.
           MOVE 'TIO ' TO TAB-COD-TTAB IN TAB.
           MOVE CLF-COD-TOCF IN CLF TO TAB-COD-CTAB IN TAB.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM GNS-FIO-TAB.
           IF FIO-STAT-OKS AND TAB-CIC-CTAB IN TAB = 'CGE'
               GO TO FIN-FND-KEY.
      *JSS-FIN 27-FEB-1996

      *ALD-BNL
           MOVE CCU-CIC-ICLF TO CLF-CIC-ICLF IN CLF.
           MOVE ZEROES TO SCR-IMAX.
           MOVE 1 TO SCR-I.
           PERFORM OBT-DAT-TS.
           MOVE 1 TO SCR-I.
           MOVE SCR-I TO CLC-I.

       CARGA-LDC.
           MOVE SPACES TO MSG-COD-MENS.
           PERFORM PUT-TAB-LDC.
      *FLB CST  21-SEP-1994 CCU FUNCIONE LUEGO MCA/CMX Y ANTES ACA
           IF MSG-COD-MENS > SPACES
               MOVE 'DEU' TO MSG-COD-SIST
               PERFORM GET-MSG.

           IF MSG-COD-MENS > SPACES AND
              CCU-MENS NOT > SPACES AND
              ( NOT ( CLF-COD-STAT IN CLF = 'M' OR 'X' ) OR
                CLF-MSC-STAT = 'V' )
               MOVE MSG-GLS-DESC TO FRM-MENS
           ELSE
           IF MSG-COD-MENS > SPACES AND
              CCU-MENS NOT > SPACES AND
              ( CLF-COD-STAT IN CLF = 'M' OR 'X' )
               MOVE MSG-GLS-DESC TO FRM-MEN1
               MOVE 'DEU' TO MSG-COD-SIST
               MOVE 'CLFREN-' TO MSG-COD-TMSG
               MOVE CLF-COD-STAT IN CLF TO MSG-COD-CMSG
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MEN2
           ELSE
           IF MSG-COD-MENS > SPACES
               IF CCU-MEN1 > SPACES
                   MOVE CCU-MEN1 TO FRM-MEN2
               ELSE
                   MOVE CCU-MEN2 TO FRM-MEN2
           ELSE
           IF ( CLF-COD-STAT IN CLF = 'M' OR 'X' ) AND
              CLF-MSC-STAT NOT = 'V'
               MOVE 'DEU' TO MSG-COD-SIST
               MOVE 'CLFREN-' TO MSG-COD-TMSG
               MOVE CLF-COD-STAT IN CLF TO MSG-COD-CMSG
               PERFORM GET-MSG
               IF CCU-MENS NOT > SPACES
                   MOVE MSG-GLS-DESC TO FRM-MENS
               ELSE
                   IF CCU-MEN1 > SPACES
                       MOVE MSG-GLS-DESC TO FRM-MEN2
                   ELSE
                       MOVE CCU-MEN2 TO FRM-MEN1
                       MOVE MSG-GLS-DESC TO FRM-MEN2
           ELSE
               MOVE CCU-MENS TO FRM-MENS.
      *FLB CST  21-SEP-1994

      * FMR: CMT verificar si existen
           IF FRM-MEN2 NOT > SPACES
               MOVE CLF-CIC-ICLF IN CLF TO RCE-GLS-IENT IN RCE
      *<<<< NOT PGM_PER
               MOVE 'DEU'               TO RCE-COD-SIST IN RCE
               MOVE 'CLF'               TO RCE-COD-ENTI IN RCE
      *>>>>
               MOVE SPACES              TO RCE-COD-SENT IN RCE
               MOVE 'RCE-KEY-IENT' TO FIO-AKEY
               MOVE FIO-GET-KEY    TO FIO-CMND
               PERFORM GNS-FIO-RCE
               IF FIO-STAT-OKS
                   MOVE 'DEU'          TO MSG-COD-SIST
                   MOVE 'CLFEXTCMT'    TO MSG-COD-MENS
                   PERFORM GET-MSG
                   MOVE MSG-GLS-DESC   TO FRM-MEN2
               ELSE
                   MOVE SPACES         TO FRM-MEN2.

           MOVE '00' TO FIO-STAT.
           GO TO FIN-FND-KEY.


           MOVE '00' TO FIO-STAT.
           GO TO FIN-FND-KEY.

       ERR-FND-KEY.
      * ISP-INI 01-03-1996
      *    MOVE 'S' TO SCR-IERR.
      * ISP-INI 01-03-1996
           MOVE SCR-STAT-CON TO SCR-STAT.
           IF FRM-MENS > SPACES
               MOVE '00' TO FIO-STAT.
               GO TO FIN-FND-KEY.

      *    Busca mensaje error en Sistema LDC
           IF WSS-IBUS = 0 AND WSS-IBUS-LDC = 0
      *        busco por padre y no encontro padre
               MOVE SPACES TO PGM-STAT
               MOVE 'DEU' TO MSG-COD-SIST
               MOVE FIO-STAT-NEX TO PGM-STAT-CLF
           ELSE
      *        todos otros casos: el error pertenece al sistema LDC
               MOVE 'DEU' TO MSG-COD-SIST.
           PERFORM GET-MSG.
           MOVE MSG-GLS-DESC TO FRM-MENS.
           MOVE '00' TO FIO-STAT.
           GO TO FIN-FND-KEY.
      *>>>>
       FIN-FND-KEY.
           IF FIO-STAT = FIO-STAT-NEX
               MOVE 'S' TO SCR-IERR.
       EXT-FND-KEY.
           EXIT.
 
       PUT-SCR SECTION.
       INI-PUT-SCR.
           IF PGM-STAT-CLF-OKS
               MOVE CLF-STP-ITRN IN CLF TO SCR-UMOD.
           PERFORM PUT-ALL-CLC.
      *<<<< FIN_PUT_SCR
      * MHM ini 1-FEB-1996
           PERFORM GNS-ERR-QUE.
           MOVE SCR-OTRN        TO CLC-TERM-H.
           MOVE CLC-NAME-QUE-H  TO QUE-COLA.
           MOVE QUE-DEL         TO QUE-CMND.
           PERFORM GNS-PRO-QUE.

           MOVE CLF-CAI-ICLF IN CLC-FLD TO CLC-CLF-CAI-ICLF.
           MOVE CLF-IIC-ICLF IN CLC-FLD TO CLC-CLF-IIC-ICLF.
           MOVE DBC-NUM-ICLI IN CLC-FLD TO CLC-DBC-NUM-ICLI.
           MOVE DBC-VRF-ICLI IN CLC-FLD TO CLC-DBC-VRF-ICLI.
           MOVE DBC-IND-ICLI IN CLC-FLD TO CLC-DBC-IND-ICLI.
           MOVE DBC-GLS-ICLI IN CLC-FLD TO CLC-DBC-GLS-ICLI.
           MOVE DBC-GLS-NOMC IN CLC-FLD TO CLC-DBC-GLS-NOMC.
           MOVE FRM-GLS-NOMC IN CLC-FLD TO CLC-FRM-GLS-NOMC.
           MOVE DBC-COD-ACTI IN CLC-FLD TO CLC-DBC-COD-ACTI.
           MOVE CLF-CAI-CREN IN CLC-FLD TO CLC-CLF-CAI-CREN.
           MOVE CLF-IIC-CREN IN CLC-FLD TO CLC-CLF-IIC-CREN.
           MOVE CLF-FEC-FPRV IN CLC-FLD TO CLC-CLF-FEC-FPRV.
           MOVE FRM-GLS-TOCF IN CLC-FLD TO CLC-FRM-GLS-TOCF.
           MOVE FRM-GLS-CRSB IN CLC-FLD TO CLC-FRM-GLS-CRSB.
           MOVE CLF-NUM-PREV IN CLC-FLD TO CLC-CLF-NUM-PREV.
           MOVE FRM-GLS-AOCF IN CLC-FLD TO CLC-FRM-GLS-AOCF.
           MOVE DBC-FEC-FINP IN CLC-FLD TO CLC-DBC-FEC-FINP.
           MOVE FRM-GLS-OFIC IN CLC-FLD TO CLC-FRM-GLS-OFIC.
           MOVE CLF-FEC-FURV IN CLC-FLD TO CLC-CLF-FEC-FURV.
           MOVE FRM-GLS-VCCF IN CLC-FLD TO CLC-FRM-GLS-VCCF.
           MOVE CLF-FEC-FAPE IN CLC-FLD TO CLC-CLF-FEC-FAPE.
           MOVE FRM-GLS-EJEC IN CLC-FLD TO CLC-FRM-GLS-EJEC.
           MOVE CLF-FEC-FCIE IN CLC-FLD TO CLC-CLF-FEC-FCIE.
           MOVE FRM-GLS-STAT IN CLC-FLD TO CLC-FRM-GLS-STAT.
           MOVE CLF-FEC-FVEN IN CLC-FLD TO CLC-CLF-FEC-FVEN.
           MOVE FRM-GLS-AGES IN CLC-FLD TO CLC-FRM-GLS-AGES.
           MOVE FRM-GLS-RAZC IN CLC-FLD TO CLC-FRM-GLS-RAZC.
           MOVE CLF-VAL-CMAX IN CLC-FLD TO CLC-CLF-VAL-CMAX.
           MOVE FRM-VAL-CUTI IN CLC-FLD TO CLC-FRM-VAL-CUTI.
      *<<<< INI ISP 14-MAY-1996
      *     MOVE FRM-VAL-CDIS IN CLC-FLD TO CLC-FRM-VAL-CDIS.
           MOVE FRM-VAL-CDIS IN CLC-FLD TO
                WSS-CLC-EDT-CDIS-EDT.
           MOVE WSS-CLC-EDT-CDIS-EDT TO WSS-CLC-EDT-CDIS-ALF.
           MOVE WSS-CLC-EDT-CDIS-ALF TO     CLC-FRM-VAL-CDIS.
      *<<<< FIN ISP 14-MAY-1996
           MOVE USR-COD-AGES IN CLC-FLD TO CLC-USR-COD-AGES.
           MOVE CRI-IND-CRSB IN CLC-FLD TO CLC-CRI-IND-CRSB.
           MOVE DBC-COD-OFIC IN CLC-FLD TO CLC-DBC-COD-OFIC.

           MOVE FRM-GLS-PREV IN CLC-FLD TO CLC-FRM-GLS-PREV.

      *CGL-INI
           MOVE SCR-OTRN     TO CLX-TERM.
           MOVE CLX-NAME-QUE TO QUE-COLA
           MOVE CLX-LONG-TX  TO QUE-LITM.
           MOVE 1 TO QUE-LITM.
           MOVE QUE-GET TO QUE-CMND.
           PERFORM GNS-PRO-QUE.
           IF QUE-STAT = QUE-STAT-OKS
               MOVE QUE-DEL TO QUE-CMND
               PERFORM GNS-PRO-QUE
           ELSE
               MOVE CLC-FIL-TS TO CLX-VARI
               MOVE CLX-VARI-01 TO CLY-VARI-01
               MOVE CLX-VARI-03 TO CLY-VARI-03
               MOVE CLY-VARI TO CLC-FIL-TS.
      *CGL-FIN
           MOVE CLC-FIL-TS     TO QUE-ITEM.
           MOVE CLC-LONG-TS-H  TO QUE-LITM.
           MOVE SCR-OTRN       TO CLC-TERM-H.
           MOVE CLC-NAME-QUE-H TO QUE-COLA.
           MOVE QUE-PUT        TO QUE-CMND.
           PERFORM GNS-PRO-QUE.

           MOVE SCR-OTRN       TO CLC-TLDC-TERM.
           MOVE CLC-TLDC-COLA TO QUE-COLA.
           MOVE 1 TO QUE-NITM.
           MOVE CLC-TLDC-LITM  TO QUE-LITM.
           MOVE QUE-GET TO QUE-CMND.
           PERFORM GNS-PRO-QUE.

           IF QUE-STAT = QUE-STAT-OKS
                MOVE QUE-DEL TO QUE-CMND
                PERFORM GNS-PRO-QUE
                MOVE CLC-TLDC-ITEM  TO QUE-ITEM
                MOVE QUE-PUT TO QUE-CMND
                PERFORM GNS-PRO-QUE.

      * MHM fin 1-FEB-1996
      *>>>>
       FIN-PUT-SCR.
           EXIT.

       STP-EXIT SECTION.
       INI-STP-EXIT.
           MOVE SCR-PROG TO PGM-PROG.
           MOVE SCR-NTRN TO PGM-NTRN.

           MOVE SCR-PROV TO SCR-PROG.
           MOVE SCR-NTRV TO SCR-NTRN.

           MOVE PGM-PROG TO SCR-PROV
           MOVE PGM-NTRN TO SCR-NTRV.
       FIN-STP-EXIT.
           EXIT.

       SCR-EXIT SECTION.
       INI-SCR-EXIT.
           MOVE 'P'      TO SCR-ICMN.
           MOVE SCR-NTRN TO SYS-NTRN.
           MOVE SCR-VARI TO SYS-CMMA.
           MOVE SCR-TCMA TO SYS-TCMA.
           MOVE SYS-RTRN TO SYS-CMND.
      *PTC-INI
           IF NOT SCR-OFRM-SRV
      *PTC-FIN
           PERFORM GNS-PRO-SYS.
       FIN-SCR-EXIT.
           EXIT.

       SCR-PUTA SECTION.
       INI-SCR-PUTA.
      *PTC-INI
           IF FRM-SUAR EQUAL FRM-SUAR-MAL OR FRM-SUAR-CLR
               MOVE 'S' TO SCR-IERR.
      *PTC-FIN
           MOVE SCR-NMAP TO FRM-NAME.
           MOVE SCR-NLIB TO FRM-NLIB.
           MOVE CLC-FLD TO FRM-DFLD.
           MOVE FRM-PUT-ALL TO FRM-CMND.
           PERFORM GNS-PRO-FRM.
       FIN-SCR-PUTA.
           EXIT.

       SCR-MSSG SECTION.
       INI-SCR-MSSG.
           IF FRM-MEN1 NOT > SPACES
               MOVE SPACES TO FRM-MEN1.
           IF FRM-MEN2 NOT > SPACES
               MOVE SPACES TO FRM-MEN2.
           MOVE FRM-MENS TO CLC-GLS-MENS.
       FIN-SCR-MSSG.
           EXIT.

       SCR-GKEY SECTION.
       INI-SCR-GKEY.
           MOVE SCR-NMAP TO FRM-NAME.
           MOVE SCR-NLIB TO FRM-NLIB.
           MOVE FRM-GET-ALL TO FRM-CMND.
           PERFORM GNS-PRO-FRM.
           MOVE SPACES TO FRM-MENS.
           IF NOT ( FRM-FFLD = FRM-FFLD-RET  OR FRM-FFLD-PF10 OR
                               FRM-FFLD-PF12 OR FRM-FFLD-PF3 )
               MOVE 'PFSINV    ' TO MSG-COD-MENS
               MOVE 'GNS' TO MSG-COD-SIST
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS
               PERFORM FST-KEY-CLC
               PERFORM SCR-MSSG
               PERFORM SCR-PUTA
               PERFORM SCR-EXIT.
           MOVE FRM-DFLD TO CLC-FLD.
           IF FRM-STAT-ABT
               GO TO FIN-SCR-GKEY.
           MOVE FRM-SUAR-OKS TO FRM-SUAR.
           PERFORM VAL-NUM-KEY-CLC.
           IF FRM-SUAR EQUAL FRM-SUAR-MAL OR FRM-SUAR-CLR
      *PTC-INI
               MOVE 'S' TO SCR-IERR
      *PTC-FIN
               PERFORM SCR-MSSG
               PERFORM EDT-KEY-CLC
               PERFORM SCR-PUTA
               PERFORM SCR-EXIT.
      *JSS
           PERFORM CLR-FLD-CLC.
           PERFORM VAL-IKY-CLC.
           IF FRM-SUAR EQUAL FRM-SUAR-MAL OR FRM-SUAR-CLR
               GO TO ERR-SCR-GKEY.
           PERFORM VAL-MKY-CLC.
           IF FRM-SUAR EQUAL FRM-SUAR-MAL OR FRM-SUAR-CLR
               GO TO ERR-SCR-GKEY.
           PERFORM VAL-AKY-CLC.
           IF FRM-SUAR EQUAL FRM-SUAR-MAL OR FRM-SUAR-CLR
               GO TO ERR-SCR-GKEY.
           PERFORM VAL-CON-KEY-CLC.
           IF NOT ( FRM-SUAR EQUAL FRM-SUAR-MAL OR FRM-SUAR-CLR )
               GO TO FIN-SCR-GKEY.
           IF FRM-UCUR NOT > SPACES
               PERFORM FST-KEY-CLC.
       ERR-SCR-GKEY.
      *PTC-INI
           MOVE 'S' TO SCR-IERR.
      *PTC-FIN
           PERFORM SCR-MSSG.
           PERFORM EDT-KEY-CLC.
           PERFORM SCR-PUTA.
           PERFORM SCR-EXIT.
       FIN-SCR-GKEY.
           PERFORM SCR-MSSG.

       SCR-GIKY SECTION.
       INI-SCR-GIKY.
           MOVE SCR-NMAP TO FRM-NAME.
           MOVE SCR-NLIB TO FRM-NLIB.
           MOVE FRM-GET-ALL TO FRM-CMND.
           PERFORM GNS-PRO-FRM.
           MOVE SPACES TO FRM-MENS.
           IF NOT ( FRM-FFLD = FRM-FFLD-RET  OR FRM-FFLD-PF10 OR
                               FRM-FFLD-PF12 OR FRM-FFLD-PF3 )
               MOVE 'PFSINV    ' TO MSG-COD-MENS
               MOVE 'GNS' TO MSG-COD-SIST
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS
               PERFORM FST-KEY-CLC
               PERFORM SCR-MSSG
               PERFORM SCR-PUTA
               PERFORM SCR-EXIT.
           MOVE FRM-DFLD TO CLC-FLD.
           IF FRM-STAT-ABT
               GO TO FIN-SCR-GIKY.
           MOVE FRM-SUAR-OKS TO FRM-SUAR.
           PERFORM VAL-NUM-KEY-CLC.
           IF FRM-SUAR EQUAL FRM-SUAR-MAL OR FRM-SUAR-CLR
      *PTC-INI
               MOVE 'S' TO SCR-IERR
      *PTC-FIN
               PERFORM SCR-MSSG
               PERFORM EDT-IKY-CLC
               PERFORM SCR-PUTA
               PERFORM SCR-EXIT.
      *JSS
           PERFORM CLR-FLD-CLC.
           PERFORM VAL-IKY-CLC.
           IF FRM-SUAR EQUAL FRM-SUAR-MAL OR FRM-SUAR-CLR
               GO TO ERR-SCR-GIKY.
           PERFORM VAL-CON-IKY-CLC.
           IF NOT ( FRM-SUAR EQUAL FRM-SUAR-MAL OR FRM-SUAR-CLR )
               GO TO FIN-SCR-GIKY.
           IF FRM-UCUR NOT > SPACES
               PERFORM FST-KEY-CLC.
       ERR-SCR-GIKY.
      *PTC-INI
           MOVE 'S' TO SCR-IERR.
      *PTC-FIN
           PERFORM SCR-MSSG.
           PERFORM EDT-IKY-CLC.
           PERFORM SCR-PUTA.
           PERFORM SCR-EXIT.
       FIN-SCR-GIKY.
           PERFORM SCR-MSSG.

       GET-CON SECTION.
       INI-GET-CON.
           MOVE SCR-NMAP TO FRM-NAME.
           MOVE SCR-NLIB TO FRM-NLIB.
           MOVE FRM-GET-ALL TO FRM-CMND.
           PERFORM GNS-PRO-FRM.
           IF NOT ( FRM-FFLD = FRM-FFLD-RET  OR FRM-FFLD-PF10 OR
                               FRM-FFLD-PF12 OR FRM-FFLD-PF3 )
      *<<<< PFS_GET_CON OR PFS_GET_ACC
           IF NOT ( FRM-FFLD = FRM-FFLD-PF6
                          OR   FRM-FFLD-PF5
                  )
      *>>>>
               MOVE 'PFSINV    ' TO MSG-COD-MENS
               MOVE 'GNS' TO MSG-COD-SIST
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO CLC-GLS-MEN2
               MOVE SCR-PRMT     TO CLC-GLS-MEN1
               PERFORM FST-MSG
               PERFORM SCR-PUTA
               PERFORM SCR-EXIT.
           MOVE FRM-DFLD TO CLC-FLD.
       FIN-GET-CON.
           MOVE SCR-STAT-CON TO SCR-STAT.

       CLR-MSG SECTION.
       INI-CLR-MSG.
           MOVE SPACES TO CLC-GLS-MENS.
       FIN-CLR-MSG.
           EXIT.

       HBL-IKY SECTION.
       INI-HBL-IKY.
      *<<<< INI_HBL_IKY
           IF SCR-DESDE-CMN
               MOVE SPACES TO SCR-IND-MCLI.
      *>>>>
      *PTC-INI
           IF NOT SCR-OFRM-SRV
      *PTC-FIN
           IF SCR-DESDE-CMN
               MOVE CLC-GLS-MENS TO FRM-MENS
               MOVE LOW-VALUES TO CLC-FLD
      * FLB  7-NOV-1994
               PERFORM CLR-KEY-CLC

               IF FRM-MENS < SPACES
                   MOVE LOW-VALUES TO CLC-GLS-MENS
               ELSE
                   MOVE FRM-MENS TO CLC-GLS-MENS.
           PERFORM PRO-MKY-CLC.
           PERFORM PRO-AKY-CLC.
           PERFORM UNP-IKY-CLC.
           PERFORM FST-KEY-CLC.
       FIN-HBL-IKY.
           EXIT.

       HBL-KEY SECTION.
       INI-HBL-KEY.
      *PTC-INI
           IF NOT SCR-OFRM-SRV
      *PTC-FIN
           IF SCR-DESDE-CMN
               MOVE CLC-GLS-MENS TO FRM-MENS
               MOVE LOW-VALUES TO CLC-FLD
               IF FRM-MENS < SPACES
                   MOVE LOW-VALUES TO CLC-GLS-MENS
               ELSE
                   MOVE FRM-MENS TO CLC-GLS-MENS.
           PERFORM UNP-KEY-CLC.
           PERFORM FST-KEY-CLC.
       FIN-HBL-KEY.
           EXIT.

       HBL-FLD SECTION.
       INI-HBL-FLD.
           PERFORM PRO-IKY-CLC.
           PERFORM PRO-AKY-CLC.
           PERFORM UNP-MKY-CLC.
           PERFORM UNP-FLD-CLC.
           PERFORM FST-FLD-CLC.
       FIN-HBL-FLD.
           EXIT.

       FST-MSG SECTION.
       INI-FST-MSG.
           MOVE -1 TO CLC-GLS-MENS-LEN.
       FIN-FST-MSG.
           EXIT.

       PRO-ALL SECTION.
       INI-PRO-ALL.
           PERFORM PRO-KEY-CLC.
           PERFORM FST-MSG.
       FIN-PRO-ALL.
           EXIT.

       SCR-TRL SECTION.
       INI-SCR-TRL.
      *PTC-INI
           IF SCR-STAT NOT = SCR-STPP
               MOVE 'S' TO SCR-IERR.
      *PTC-FIN
           IF FRM-MEN1 NOT > SPACES
               MOVE SCR-PRMT TO FRM-MEN1.
           IF SCR-STAT = SCR-STAT-MOD
               PERFORM HBL-FLD
               PERFORM SCR-MSSG
               PERFORM EDT-KEY-CLC
               PERFORM EDT-FLD-CLC
               PERFORM SCR-PUTA
               PERFORM STP-EXIT
               MOVE SCR-INST-GFL TO SCR-INST
               PERFORM SCR-EXIT.
           IF SCR-STAT = SCR-STAT-SON
               PERFORM PRO-ALL
               PERFORM SCR-MSSG
               PERFORM EDT-KEY-CLC
               PERFORM EDT-FLD-CLC
               PERFORM SCR-PUTA
               PERFORM STP-EXIT
               MOVE SCR-INST-GCS TO SCR-INST
               PERFORM SCR-EXIT.
      *ASUME SCR-STAT-CON.
           MOVE SCR-STAT-CON TO SCR-STAT.
      *    MOVE FRM-CPSF-AEY TO FRM-CPIM-AEY.
           PERFORM PRO-ALL.
           PERFORM SCR-MSSG.
           PERFORM EDT-KEY-CLC.
           PERFORM EDT-FLD-CLC.
           PERFORM SCR-PUTA.
           MOVE SCR-INST-GAB TO SCR-INST.
           PERFORM SCR-EXIT.
       FIN-SCR-TRL.
           EXIT.

       DESSCRTRL SECTION.
       INI-DESSCRTRL.
           MOVE SCR-VFLD-NOT TO SCR-VFLD.
           MOVE FRM-FFLD TO SCR-FFLD.
       FIN-DESSCRTRL.
           IF SCR-FFLD-PF10 OR SCR-FFLD-PF3
                 MOVE SCR-INST-HCM TO SCR-INST
           ELSE
                 MOVE SCR-INST-HKY TO SCR-INST.
       EXT-DESSCRTRL.
           EXIT.

      * PGM-EBR-ALL SECTION.
      * INI-PGM-EBR-ALL.
      *     MOVE 'GNS' TO FIO-SIST.
      *     MOVE FIO-EBR-ALL TO FIO-CMND.
      *     PERFORM GNS-FIO-TAB.
      * FIN-PGM-EBR-ALL.
      *     EXIT.

       COPY LDCBQCLC.
       COPY GNSBVNUM.
       COPY LDCBFCLF.
       COPY GNSBFMSG.
       COPY GNSBGSYS.
       COPY GNSBGDTC.
      *PTC-INI
      *PTC-SUB
      * ISP  10-MAY-2001 13:46:35 
      * COPY GNSBGFRM.
       COPY GNSBG3CF.
      *PTC-FIN
       COPY GNSBGMSG.
       COPY GNSBEKEY.
       COPY GNSBIABT.
       COPY GNSBBTAB.
       COPY GNSBFTAB.
       COPY GNSBBMSC.
       COPY GNSBVIND.
       COPY GNSBVMSC.
       COPY GNSBFMSC.
       COPY GNSBVIDC.
       COPY GNSBPVRF.
       COPY GNSBGFEC.
       COPY GNSBGHOY.
      *PTC-INI
       COPY GNSBGQUE.
       COPY GNSBGTSK.
      *PTC-FIN

      *<<<< EOF
      *SMC-INI 23-11-1993
       BUS-CLF SECTION.
       INI-BUS-CLF.
           MOVE DBC-CIC-ICLI IN DBC TO RDC-CIC-ICLI IN RDC.
           MOVE SPACES              TO RDC-CIC-ICLF IN RDC.

           MOVE FIO-GET-NLS TO FIO-CMND.
           PERFORM LDC-FIO-RDC.
           MOVE FIO-STAT TO PGM-STAT-RDC.
           IF NOT ( FIO-STAT-OKS AND
                    DBC-CIC-ICLI IN DBC = RDC-CIC-ICLI IN RDC )
               MOVE 'DEU'          TO MSG-COD-SIST
               MOVE 'CLF    NORDC' TO MSG-COD-MENS
               GO TO BRW-BUS-CLF.

           MOVE ZEROES TO WSS-FEC-FCIE.
           MOVE RDC-CIC-ICLF IN RDC TO WSS-CIC-ICLF.
       LUP-BUS-CLF.
           MOVE RDC-CIC-ICLF IN RDC TO CLF-CIC-ICLF IN CLF.
           MOVE CLF-CAI-ICLF IN CLF TO CLF-CAI-ICLF IN CLC-FLD.
           MOVE CLF-IIC-ICLF IN CLF TO CLF-IIC-ICLF IN CLC-FLD.
           MOVE FIO-GET-KEY TO FIO-CMND.
           MOVE FIO-STAT TO PGM-STAT-CLF.
           PERFORM LDC-FIO-CLF.
           IF NOT FIO-STAT-OKS
               MOVE 'CLF    NEX' TO MSG-COD-MENS
               GO TO BRW-BUS-CLF.

      *MHM-INI 08-OCT-2009 MULTILINEA INMOBILIARIA
           IF CLF-COD-TOCF IN CLF NOT = 'CLF'
               GO TO NXT-BUS-CLF.
      *MHM-FIN 08-OCT-2009
           IF NOT ( CLF-MSC-STAT IN CLF = 'C' OR 'R' )
               GO TO BRW-BUS-CLF.

           IF CLF-FEC-FCIE IN CLF > WSS-FEC-FCIE
               MOVE CLF-CIC-ICLF IN CLF TO WSS-CIC-ICLF
               MOVE CLF-FEC-FCIE IN CLF TO WSS-FEC-FCIE.

       NXT-BUS-CLF.
           MOVE FIO-GET-NXT TO FIO-CMND.
           PERFORM LDC-FIO-RDC.
           MOVE FIO-STAT TO PGM-STAT-RDC.
           IF FIO-STAT-OKS AND
              DBC-CIC-ICLI IN DBC = RDC-CIC-ICLI IN RDC
               GO TO LUP-BUS-CLF.

           MOVE WSS-CIC-ICLF TO CLF-CIC-ICLF IN CLF.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM LDC-FIO-CLF.
           MOVE FIO-STAT TO PGM-STAT-CLF.
           MOVE CLF-CAI-ICLF IN CLF TO CLF-CAI-ICLF IN CLC-FLD.
           MOVE CLF-IIC-ICLF IN CLF TO CLF-IIC-ICLF IN CLC-FLD.
       BRW-BUS-CLF.
           IF PGM-STAT-RDC-OKS
               MOVE FIO-END-BRW TO FIO-CMND
               PERFORM LDC-FIO-RDC.
       FIN-BUS-CLF.
           EXIT.

      *SMC-FIN 23-11-1993
       RST-STAT SECTION.
       INI-RST-STAT.
           MOVE SCR-STPP     TO SCR-STAT.
           MOVE SCR-MFLD-NOT TO SCR-MFLD.
       FIN-RST-STAT.
           EXIT.

       PUT-TAB-LDC SECTION.
       INI-PUT-TAB-LDC.
           PERFORM RED-TS.
           PERFORM LLE-DAT-PNT VARYING CLC-I FROM 1 BY 1
                   UNTIL CLC-I > WSS-IMAX.
       FIN-PUT-TAB-LDC.
           EXIT.

       LLE-DAT-PNT SECTION.
       INI-LLE-DAT-PNT.
           MOVE CLC-NUM-ILDC(CLC-I) TO FRM-NUM-ILDC IN CLC-FLD(CLC-I).
           MOVE CLC-IND-VIGE(CLC-I) TO FRM-IND-VIGE IN CLC-FLD(CLC-I).
           MOVE CLC-COD-TOOC(CLC-I) TO FRM-COD-TOOC IN CLC-FLD(CLC-I).
           MOVE CLC-COD-AOOC(CLC-I) TO FRM-COD-AOOC IN CLC-FLD(CLC-I).
           MOVE CLC-COD-TOGA(CLC-I) TO FRM-COD-TOGA IN CLC-FLD(CLC-I).
           MOVE CLC-COD-AOGA(CLC-I) TO FRM-COD-AOGA IN CLC-FLD(CLC-I).
           MOVE CLC-NUM-PORG(CLC-I) TO FRM-NUM-PORG IN CLC-FLD(CLC-I).
           MOVE CLC-IND-MGAR(CLC-I) TO FRM-IND-MGAR IN CLC-FLD(CLC-I).
           MOVE CLC-COD-SGAR(CLC-I) TO FRM-COD-SGAR IN CLC-FLD(CLC-I).
           MOVE CLC-COD-VCLC(CLC-I) TO FRM-COD-VCLC IN CLC-FLD(CLC-I).
           MOVE CLC-FEC-FVEN(CLC-I) TO FRM-FEC-FVEN IN CLC-FLD(CLC-I).
           MOVE CLC-VAL-CMLC(CLC-I) TO FRM-VAL-CMLC IN CLC-FLD(CLC-I).
      *RVM-CST-INI 14-JAN-1997
      *AQUI YA NO CORRESPONDE REDONDEAR, YA QUE CLC-VAL-CDLC NO POSEE
      *DECIMALES.
      *JPA ini  7-APR-1995
      **    MOVE CLC-VAL-CDLC(CLC-I) TO FRM-VAL-CDLC IN CLC-FLD(CLC-I).
      *     MULTIPLY CLC-VAL-CDLC(CLC-I) BY 1 GIVING
      *              FRM-VAL-CDLC IN CLC-FLD(CLC-I) ROUNDED.
      *JPA fin  7-APR-1995
           IF NOT SCR-OFRM-SRV
           MOVE CLC-VAL-CDLC(CLC-I) TO FRM-VAL-CDLC IN CLC-FLD(CLC-I).
      *RVM-CST-FIN 14-JAN-1997
       FIN-LLE-DAT-PNT.
           EXIT.

      * Entidades de LDC
       COPY LDCBFLDC.
      * COPY LDCBFARC.
      * Modulo FIO para registro ARC en DATACOM, 16-APR-1992 04:05:15.51
       LDC-FIO-ARC SECTION.
       INI-LDC-FIO-ARC.
           MOVE ADR-ARC-REQA TO ADR-REQA.
           MOVE 'ARC' TO ADR-TABL IN ADR-REQA.
      *
           MOVE 'LDC'  TO IDD-SAUX.
           MOVE 'M'    TO IDD-GAUX.
           MOVE SPACES TO IDD-RAUX.
           MOVE 1 TO IDD-IAUX.
           SET IDD-ITBL TO 1.
           SEARCH IDD-VSIS VARYING IDD-IAUX
             AT END
               GO TO GRP-LDC-FIO-ARC
             WHEN IDD-DENT( IDD-ITBL ) = IDD-DAUX
               MOVE IDD-IENT( IDD-ITBL) TO ADR-DBID IN ADR-REQA
               GO TO FSR-LDC-FIO-ARC.
       GRP-LDC-FIO-ARC.
           MOVE SPACES TO IDD-GAUX.
           MOVE 1      TO IDD-IAUX.
           SET IDD-ITBL TO 1.
           SEARCH IDD-VSIS VARYING IDD-IAUX
             AT END
               MOVE 'En LDC-FIO-ARC, NO existe en IDD:' TO FIO-MEN1
               MOVE IDD-DAUX                            TO FIO-MEN2
               PERFORM PRG-ABT
             WHEN IDD-DENT( IDD-ITBL ) = IDD-DAUX
               MOVE IDD-IENT( IDD-ITBL) TO ADR-DBID IN ADR-REQA.
       FSR-LDC-FIO-ARC.
      *
           MOVE 'ARC00' TO ADR-ELM1.
           MOVE FIO-PROG TO ADR-PROG.
           IF FIO-KDEF = FIO-KDEF-S
               GO TO CON-LDC-FIO-ARC.
           MOVE FIO-CMND TO FIO-IAKY.
           IF NOT FIO-IAKY-CON AND
              ( FIO-AKEY = 'ARC-KEY-IARC' OR FIO-AKEY NOT > SPACES )
               MOVE ARC-KEY-IARC IN ARC TO ADR-VKEY IN ADR-REQA
               MOVE 'ARC00' TO ADR-DKEY IN ADR-REQA
           ELSE
               MOVE 'En LDC-FIO-ARC, key' TO FIO-MENS
               MOVE FIO-AKEY   TO FIO-MENS-KEY
               MOVE 'Invalida' TO FIO-MENS-FIL
               PERFORM PRG-ABT.
       CON-LDC-FIO-ARC.
           MOVE ARC TO FIO-DFLD.
      *CONTINGENCIA LECTURA TABLA ARC
           IF WSS-VSN-LARC = 'S'
                PERFORM GNS-FIO-DTC
           ELSE
                MOVE '23' TO FIO-STAT.

      *CONTINGENCIA LECTURA TABLA ARC

           IF FIO-STAT-OKS
               MOVE FIO-DFLD TO ARC
           ELSE
               MOVE 'ARCARC' TO FIO-MEN2
               IF FIO-STAT-FTL
                   PERFORM PRG-ABT.
           MOVE SPACES   TO FIO-AKEY.
           MOVE FIO-KDEF-N TO FIO-KDEF.
           MOVE ADR-REQA TO ADR-ARC-REQA.
       FIN-LDC-FIO-ARC.
           EXIT.


       COPY LDCBFARG.
       COPY LDCBFRDC.
      * Entidades de SGC
       COPY SGCBFDBC.
       COPY SGCBFREC.
      * Entidades de DEU
       COPY DEUBFCRI.
       COPY DEUBFFIA.
       COPY BGLBFGDG.
       COPY SGCBGCLI.
       COPY TABBFOFI.
       COPY TABBBOFI.
       COPY TABBFUSR.
       COPY TABBBUSR.
       COPY GNSBFRCE.
       COPY GNSBVCOD.
       COPY GNSBVTAB.
       COPY GNSBGCPT.
       COPY GNSBGSTR.
       COPY GNSBGHOY.

       OBT-DAT-TS SECTION.
       INI-OBT-DAT-TS.
      *CONTINGENCIA LECTURA TABLA ARC

           MOVE 'N' TO WSS-VSN-LARC.
           MOVE 'DEU' TO FIO-SIST.
           MOVE 'VSN'       TO TAB-COD-TTAB IN TAB.
           MOVE 'ACCESAARC' TO TAB-COD-CTAB IN TAB.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM GNS-FIO-TAB.
           IF FIO-STAT-OKS AND
              TAB-IND-VIGE IN TAB = 'S'
               IF TAB-GLS-DCOR IN TAB = CLF-CIC-ICLF IN CLF
                   MOVE 'S' TO WSS-VSN-LARC.

      *CONTINGENCIA LECTURA TABLA ARC

      *     MOVE EIBTRMID TO CLC-TERM-A.
           MOVE SCR-OTRN TO CLC-TERM-A.
           EXEC CICS HANDLE CONDITION QIDERR(CON-OBT-DAT-TS)
                                     ITEMERR(CON-OBT-DAT-TS)
           END-EXEC.
      * MHM ini 1-FEB-1996
      *     EXEC CICS DELETEQ TS QUEUE(CLC-NAME-QUE)
           EXEC CICS DELETEQ TS QUEUE(CLC-NAME-QUE-A)
      * MHM fin 1-FEB-1996
           END-EXEC.
       CON-OBT-DAT-TS.
           MOVE CLC-SI-IMP TO CLC-IMP.
           PERFORM CLR-VEC-TS VARYING CLC-I FROM 1 BY 1 UNTIL
                   CLC-I > WSS-IMAX.
           MOVE                   1 TO CLC-I IN CLC-VARI.
           MOVE CLF-CIC-ICLF IN CLF TO LDC-CIC-ICLF IN LDC.
           MOVE ZEROES              TO LDC-NUM-ILDC IN LDC.
           MOVE FIO-GET-NLS TO FIO-CMND.
       LUP-LEE-LDC.
           PERFORM LDC-FIO-LDC.
           IF NOT (FIO-STAT-OKS AND
              CLF-CIC-ICLF IN CLF = LDC-CIC-ICLF IN LDC)
              IF CLC-IMP = CLC-SI-IMP
                   PERFORM WRT-TS
                   GO TO FIN-OBT-DAT-TS
               ELSE
                   GO TO FIN-OBT-DAT-TS.
           PERFORM MOV-DAT-LDC.
           MOVE LDC-KEY-ILDC IN LDC TO ARC-KEY-ILDC IN ARC.
           MOVE ZEROES              TO ARC-NUM-IARC IN ARC.
      *FLB 15/DIC/92 TRASLADADAS AQUI
           MOVE LDC-KEY-ILDC IN LDC TO ARG-KEY-ILDC IN ARG.
           MOVE ZEROES              TO ARG-NUM-IARG IN ARG.
      *FLB
           MOVE CLF-PRM-VEZ-ARC TO CLF-VEZ-ARC.
           MOVE CLF-PRM-VEZ-ARG TO CLF-VEZ-ARG.
           MOVE 'S' TO CLC-EXI-ARC IN CLC-VARI.
           MOVE 'S' TO CLC-EXI-ARG IN CLC-VARI.
      *JSS-INI 8-OCT-1993
           MOVE 'N' TO WSS-IND-ACAG.
      *JSS-FIN
      *CONTINGENCIA ARC
           MOVE 'N' TO CLC-EXI-ARC IN CLC-VARI.
      *CONTINGENCIA ARC
       LUP-ARC-ARG.
           IF CLC-EXI-ARC = 'N'
               GO TO CHK-EXI-ARG.
           IF CLF-VEZ-ARC = CLF-PRM-VEZ-ARC
               MOVE FIO-GET-NLS TO FIO-CMND
               MOVE CLF-OTR-VEZ-ARC TO CLF-VEZ-ARC
           ELSE
               MOVE FIO-GET-NXT TO FIO-CMND.
           MOVE 'S' TO CLC-EXI-ARC IN CLC-VARI.
           PERFORM LDC-FIO-ARC.
           IF NOT (FIO-STAT-OKS AND
              LDC-KEY-ILDC IN LDC = ARC-KEY-ILDC IN ARC )
               MOVE 'N' TO CLC-EXI-ARC IN CLC-VARI
               IF FIO-STAT-OKS
                   MOVE FIO-END-BRW TO FIO-CMND
      *JSS-INI 8-OCT-1993
                   PERFORM LDC-FIO-ARC
               ELSE
                   NEXT SENTENCE
           ELSE
               MOVE 'S' TO WSS-IND-ACAG.
      *JSS-FIN
       CHK-EXI-ARG.
           IF CLC-EXI-ARG = 'N'
               GO TO CHK-EXI-ARC-ARG.
           IF CLF-VEZ-ARG = CLF-PRM-VEZ-ARG
               MOVE FIO-GET-NLS TO FIO-CMND
               MOVE CLF-OTR-VEZ-ARG TO CLF-VEZ-ARG
           ELSE
               MOVE FIO-GET-NXT TO FIO-CMND.
           MOVE 'S' TO CLC-EXI-ARG IN CLC-VARI.
           PERFORM LDC-FIO-ARG.
           IF NOT (FIO-STAT-OKS AND
              LDC-KEY-ILDC IN LDC = ARG-KEY-ILDC IN ARG )
               MOVE 'N' TO CLC-EXI-ARG IN CLC-VARI
               IF FIO-STAT-OKS
                   MOVE FIO-END-BRW TO FIO-CMND
      *JSS-INI 8-OCT-1993
                   PERFORM LDC-FIO-ARG
               ELSE
                   NEXT SENTENCE
           ELSE
               MOVE 'S' TO WSS-IND-ACAG.
      *JSS-FIN
       CHK-EXI-ARC-ARG.
           IF CLC-EXI-ARG = 'N' AND
              CLC-EXI-ARC = 'N'
      *JSS-INI 8-OCT-1993 INDICA QUE NO EXISTE NI ARC NI ARG PARA LDC
               IF WSS-IND-ACAG = 'N'
                   ADD 1 TO CLC-I
      *MBM INI 29-JUL-2009 LEM EMPRESAS
                   ADD 1      TO CLC-ITEM-TLDC
      *MBM FIN 29-JUL-2009
                   IF CLC-I > WSS-IMAX
                       PERFORM WRT-TS
                       PERFORM CLR-VEC-TS VARYING CLC-I FROM 1 BY 1
                                          UNTIL CLC-I > WSS-IMAX
                       MOVE 1 TO CLC-I
                       MOVE CLC-NO-IMP TO CLC-IMP
                       MOVE FIO-GET-NXT TO FIO-CMND
                       GO TO LUP-LEE-LDC
                   ELSE
                       MOVE FIO-GET-NXT TO FIO-CMND
                       GO TO LUP-LEE-LDC
               ELSE
      *JSS-FIN
                   MOVE FIO-GET-NXT TO FIO-CMND
                   GO TO LUP-LEE-LDC.
           PERFORM MOV-ARC-ARG.
           GO TO LUP-ARC-ARG.
       FIN-OBT-DAT-TS.
           EXIT.

       MOV-DAT-LDC SECTION.
       INI-MOV-DAT-LDC.
      *PVG INI 24-JUN-2009
      *    MOVE CLC-I TO CLC-ITEM-TLDC.
      *MBM INI 29-JUL-2009 LEM EMPRESAS
      *    ADD 1      TO CLC-ITEM-TLDC.
      *MBM FIN 29-JUL-2009
      *PVG FIN 24-JUN-2009

           MOVE LDC-NUM-ILDC IN LDC TO CLC-NUM-ILDC(CLC-I).
           MOVE LDC-IND-VIGE IN LDC TO CLC-IND-VIGE(CLC-I).
           MOVE SPACES              TO CLC-COD-TOOC(CLC-I).
           MOVE SPACES              TO CLC-COD-AOOC(CLC-I).
           MOVE SPACES              TO CLC-COD-TOGA(CLC-I).
           MOVE SPACES              TO CLC-COD-AOGA(CLC-I).
           MOVE ZEROES              TO CLC-NUM-PORG(CLC-I).
           MOVE LDC-IND-MGAR IN LDC TO CLC-IND-MGAR(CLC-I).
           MOVE SPACES              TO CLC-COD-SGAR(CLC-I).

           IF LDC-FEC-FVEN IN LDC NOT > ZEROES
              MOVE CLF-NUM-DVEN IN CLF TO CLC-NUM-DVEN(CLC-I)
              MOVE CLF-NUM-MVEN IN CLF TO CLC-NUM-MVEN(CLC-I)
              MOVE CLF-NUM-SVEN IN CLF TO CLC-NUM-SVEN(CLC-I)
              MOVE CLF-NUM-AVEN IN CLF TO CLC-NUM-AVEN(CLC-I)
           ELSE
              MOVE LDC-NUM-DVEN IN LDC TO CLC-NUM-DVEN(CLC-I)
              MOVE LDC-NUM-MVEN IN LDC TO CLC-NUM-MVEN(CLC-I)
              MOVE LDC-NUM-SVEN IN LDC TO CLC-NUM-SVEN(CLC-I)
              MOVE LDC-NUM-AVEN IN LDC TO CLC-NUM-AVEN(CLC-I).

      *RVM-CST-INI 14-JAN-1997
      *SE REDONDEAN VALORES AQUI, YA QUE CLC-VAL-CMLC Y CLC-VAL-CDLC
      *YA NO TIENEN DECIMALES
      *     MOVE CTOT-LCR IN CCU-VARI(LDC-NUM-ILDC IN LDC) TO
      *                   CLC-VAL-CMLC(CLC-I).
      *     MOVE CDIS-LCR IN CCU-VARI(LDC-NUM-ILDC IN LDC) TO
      *                   CLC-VAL-CDLC(CLC-I).
           MULTIPLY CTOT-LCR IN CCU-VARI(LDC-NUM-ILDC) BY 1 GIVING
                    CLC-VAL-CMLC(CLC-I) ROUNDED.

      * ISP-INI 23-ABR-2004
      *    MULTIPLY CDIS-LCR IN CCU-VARI(LDC-NUM-ILDC) BY 1 GIVING
      *             CLC-VAL-CDLC(CLC-I) ROUNDED.
           MULTIPLY CDIS-LCR IN CCU-VARI(LDC-NUM-ILDC) BY 1 GIVING
                    CLC-VAL-CDLC(CLC-I) ROUNDED.
           IF SCR-OFRM-SRV
              AND SCR-NEMO = 'LDXCLCCONGKY'
           MOVE  CLC-VAL-CDLC(CLC-I) TO CLC-VAL-CDLC-EDT
           MOVE  CLC-VAL-CDLC-EDT TO CLC-VAL-CDLC-ALF(CLC-I).
      * ISP-FIN 23-ABR-2004
      *RVM-CST-FIN 14-JAN-1997

      * ISP-INI  14-APR-2003
      *    MOVE LDC-VAL-CACT IN LDC TO CLC-VAL-CACT(CLC-I).

           MOVE 'TAB' TO TAB-COD-SIST.
           MOVE 'VLR' TO TAB-COD-TTAB.
           MOVE LDC-COD-VCLC IN LDC TO TAB-COD-CTAB IN TAB.
           PERFORM BUS-TAB.
           MOVE TAB-GLS-ABRV IN TAB TO CLC-COD-VCLC(CLC-I).

      * ISP-INI  14-APR-2003
           MOVE LDC-VAL-CMAX IN LDC TO  CLC-VAL-CACT-EDT.
           MOVE CLC-VAL-CACT-EDT    TO  CLC-VAL-CACT-ALF(CLC-I).
      *    MOVE LDC-VAL-CMAX IN LDC TO CLC-VAL-CACT(CLC-I).
      * ISP-FIN  14-APR-2003

           IF CLF-COD-VCCF IN CLF = LDC-COD-VCLC IN LDC
               GO TO CIC-PRO-CMAX.

           MOVE LDC-VAL-CMAX IN LDC TO TVC-VALO.

           MOVE LDC-COD-VCLC IN LDC TO TVC-MON1 IN TVC-VARI.
           MOVE CLF-COD-VCCF IN CLF TO TVC-MON2 IN TVC-VARI.

           MOVE HOY-FHOY(1:4)     TO TVC-FCAM(5:4).
           MOVE HOY-FHOY(5:2)     TO TVC-FCAM(3:2).
           MOVE HOY-FHOY(7:2)     TO TVC-FCAM(1:2).
           PERFORM TAB-PRO-TVC.
           IF TVC-CMSG NOT > SPACES
      * ISP-INI  14-APR-2003
           MOVE TVC-VALO         TO CLC-VAL-CACT-EDT
           MOVE CLC-VAL-CACT-EDT TO CLC-VAL-CACT-ALF(CLC-I).
      *        MOVE TVC-VALO          TO CLC-VAL-CACT(CLC-I).
      * ISP-FIN  14-APR-2003


       CIC-PRO-CMAX.

           MOVE LDC-COD-TIPO IN LDC TO CLC-COD-TIPO(CLC-I).
           MOVE LDC-COD-VCLC IN LDC TO CLC-COD-MONE(CLC-I).

      * ISP-FIN  14-APR-2003


      *CONTINGENCIA ARC
           MOVE 'LDC'                TO FIO-SIST.
           MOVE 'TLC'                TO TAB-COD-TTAB IN TAB.
           MOVE LDC-COD-TIPO IN LDC  TO TAB-COD-CTAB IN TAB.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM GNS-FIO-TAB.
           IF FIO-STAT-OKS
               MOVE TAB-GLS-DCOR IN TAB TO WSS-CLC-DCOR IN WSS-VARI
               MOVE WSS-GLS-TOOC IN WSS-VARI TO CLC-COD-TOOC(CLC-I)
               IF LDC-VAL-CACT IN LDC = ZEROES
                  AND TAB-GLS-DATA IN TAB(13:2) NOT = 'NR'
                   MOVE '(DES)' TO WSS-GLS-AOOC-EXT
                   MOVE WSS-GLS-AOOC IN WSS-VARI
                                               TO CLC-COD-AOOC(CLC-I)
               ELSE
                   MOVE WSS-GLS-AOOC IN WSS-VARI TO CLC-COD-AOOC(CLC-I)
           ELSE
               MOVE SPACES TO WSS-CLC-DCOR IN WSS-VARI.
           GO TO FIN-MOV-DAT-LDC.
      *CONTINGENCIA ARC
      *RVM-CST-INI 25-APR-1996
           MOVE LDC-KEY-ILDC IN LDC TO ARC-KEY-ILDC IN ARC.
           MOVE ZEROES              TO ARC-NUM-IARC IN ARC.
           MOVE FIO-GET-NLS TO FIO-CMND.
           PERFORM LDC-FIO-ARC.
           IF NOT ( FIO-STAT-OKS AND
              LDC-KEY-ILDC IN LDC = ARC-KEY-ILDC IN ARC )
               MOVE 'LDC'                TO FIO-SIST
               MOVE 'TLC'                TO TAB-COD-TTAB IN TAB
               MOVE LDC-COD-TIPO IN LDC  TO TAB-COD-CTAB IN TAB
               MOVE FIO-GET-KEY TO FIO-CMND
               PERFORM GNS-FIO-TAB
               IF FIO-STAT-OKS
                   MOVE TAB-GLS-DCOR IN TAB TO WSS-CLC-DCOR IN WSS-VARI
                   MOVE WSS-GLS-TOOC IN WSS-VARI TO CLC-COD-TOOC(CLC-I)
      *ADA-INI 7-DEC-1999
      *Si es una linea del tipo multilinea, y no esta activada,
      *debe indicarse en la glosa del codigo
      *ALD-ADA-INI/17072001
      *            IF TAB-CIC-CTAB IN TAB = 'MLT' AND
      *               LDC-MSC-STAT IN LDC NOT = 'A'
                   IF LDC-VAL-CACT IN LDC = ZEROES
      *ALD-ADA-FIN/17072001
      *AFRI-INI 01-AGO-2012 CALCULO DISPONIBLE MARGEN
                      AND TAB-GLS-DATA IN TAB(13:2) NOT = 'NR'
      *AFRI-FIN 01-AGO-2012 CALCULO DISPONIBLE MARGEN
                       MOVE '(DES)' TO WSS-GLS-AOOC-EXT
                       MOVE WSS-GLS-AOOC IN WSS-VARI
                                                 TO CLC-COD-AOOC(CLC-I)
                   ELSE
      *ADA-FIN 7-DEC-1999
                   MOVE WSS-GLS-AOOC IN WSS-VARI TO CLC-COD-AOOC(CLC-I)
               ELSE
                   MOVE SPACES TO WSS-CLC-DCOR IN WSS-VARI
           ELSE
               MOVE SPACES TO WSS-CLC-DCOR IN WSS-VARI.
      *RVM-CST-FIN 25-APR-1996
       FIN-MOV-DAT-LDC.
           EXIT.

       MOV-ARC-ARG SECTION.
       INI-MOV-ARC-ARG.
      *RVM-CST-INI 25-APR-1996
      *    IF CLC-EXI-ARC = 'N'
      *        MOVE SPACES              TO CLC-COD-TOOC(CLC-I)
      *        MOVE SPACES              TO CLC-COD-AOOC(CLC-I)
      *        MOVE SPACES              TO CLC-COD-VCLC(CLC-I)
      *    ELSE
      *        PERFORM PUT-TAB-ARC.
           IF CLC-EXI-ARC = 'N'
               IF WSS-CLC-DCOR IN WSS-VARI NOT > SPACES
                   MOVE SPACES              TO CLC-COD-TOOC(CLC-I)
                   MOVE SPACES              TO CLC-COD-AOOC(CLC-I)
                   MOVE SPACES              TO CLC-COD-VCLC(CLC-I)
               ELSE
                   NEXT SENTENCE
           ELSE
               PERFORM PUT-TAB-ARC.
      *RVM-CST-FIN 25-APR-1996

           IF CLC-EXI-ARG = 'N'
               MOVE SPACES              TO CLC-COD-TOGA(CLC-I)
               MOVE SPACES              TO CLC-COD-AOGA(CLC-I)
               MOVE ZEROES              TO CLC-NUM-PORG(CLC-I)
               MOVE SPACES              TO CLC-COD-SGAR(CLC-I)
           ELSE
               PERFORM PUT-TAB-ARG.
           MOVE CLC-SI-IMP TO CLC-IMP.
           ADD 1 TO CLC-I.
      *MBM INI 29-JUL-2009 LEM EMPRESAS
           ADD 1 TO CLC-ITEM-TLDC.
      *MBM FIN 29-JUL-2009
           IF CLC-I > WSS-IMAX
               PERFORM WRT-TS
               PERFORM CLR-VEC-TS VARYING CLC-I FROM 1 BY 1 UNTIL
                                  CLC-I > WSS-IMAX
               MOVE 1 TO CLC-I
               MOVE CLC-NO-IMP TO CLC-IMP.
       FIN-MOV-ARC-ARG.
           EXIT.

       PUT-TAB-ARC SECTION.
       INI-PUT-TAB-ARC.
           IF ARC-IIC-IOPC IN ARC > ZEROES
               MOVE ARC-CAI-IOPC IN ARC TO CLC-COD-TOOC(CLC-I)
               MOVE ARC-IIC-IOPC IN ARC TO CLC-COD-AOOC(CLC-I)
               GO TO FIN-PUT-TAB-ARC.

      *BUS-TAB Busca Glosa Moneda de Tabla
           IF ARC-COD-VCOC IN ARC > SPACES
              MOVE 'TAB' TO TAB-COD-SIST
              MOVE 'VLR' TO TAB-COD-TTAB IN TAB
              MOVE ARC-COD-VCOC IN ARC TO TAB-COD-CTAB IN TAB
              PERFORM BUS-TAB
              MOVE TAB-GLS-ABRV IN TAB TO CLC-COD-VCLC(CLC-I).

      *BUS-TAB Busca Glosa Tipo Operacion de Tabla
           IF ARC-COD-TOOC IN ARC > SPACES
              MOVE 'TAB'               TO TAB-COD-SIST
              MOVE 'TIO'               TO TAB-COD-TTAB IN TAB
              MOVE ARC-COD-TOOC IN ARC TO TAB-COD-CTAB IN TAB
              PERFORM BUS-TAB
              MOVE TAB-GLS-ABRV IN TAB TO CLC-COD-TOOC(CLC-I).

      *BUS-TAB Busca Glosa Cod. Auxiliar de Tabla
           IF ARC-COD-AOOC IN ARC > SPACES
              MOVE 'TAB'               TO TAB-COD-SIST
              MOVE 'AUX'               TO TAB-COD-TTAB IN TAB
              MOVE ARC-COD-COOC IN ARC TO TAB-COD-CTAB IN TAB
              PERFORM BUS-TAB
              MOVE TAB-GLS-ABRV IN TAB TO CLC-COD-AOOC(CLC-I).
       FIN-PUT-TAB-ARC.
           EXIT.

       PUT-TAB-ARG SECTION.
       INI-PUT-TAB-ARG.
           IF ARG-IIC-IGAR IN ARG > ZEROES
               MOVE ARG-CAI-IGAR IN ARG TO CLC-COD-TOGA(CLC-I)
               MOVE ARG-IIC-IGAR IN ARG TO CLC-COD-AOGA(CLC-I)
               MOVE ARG-NUM-PORG IN ARG TO CLC-NUM-PORG(CLC-I)
      *FLB CST  13-FEB-1995
               MOVE 'TAB' TO FIO-SIST
               MOVE 'TIO ' TO TAB-COD-TTAB IN TAB
               MOVE ARG-COD-TOGA IN ARG TO TAB-COD-CTAB IN TAB
               MOVE FIO-GET-KEY TO FIO-CMND
               PERFORM GNS-FIO-TAB
      * Esta en sistema GAR
               IF NOT ( TAB-CIC-CTAB IN TAB = 'AVL' OR 'FIA' )
      * INI =======================================================
      *            MOVE ARG-CIC-IGAR IN ARG TO GAR-CLV-GDG-1 IN GDG
                   MOVE ARG-CIC-IGAR IN ARG TO GDG-KEY-IGDG  IN GDG
      * FIN =======================================================
                   MOVE FIO-GET-KEY TO FIO-CMND
                   PERFORM BGL-FIO-GDG
                   IF NOT FIO-STAT-OKS OR
      * INI =======================================================
      *               GAR-IND-CPL  IN GDG NOT = 'S'
                      GDG-IND-GTAC IN GDG NOT = 'S'
                       MOVE 'P' TO CLC-COD-SGAR(CLC-I)
      * FIN =======================================================
                   ELSE
      * INI =======================================================
      *            IF GAR-FEC-ALZ  IN GDG > ZEROES
                   IF GDG-FEC-FALZ IN GDG > ZEROES
      * FIN =======================================================
                       MOVE 'L' TO CLC-COD-SGAR(CLC-I)
                   ELSE
                       MOVE 'C' TO CLC-COD-SGAR(CLC-I)
               ELSE
      * Esta en sistema DEU
      *FLB CST  17-MAR-1995
                   PERFORM BUS-EST-FIA.
      *FLB CST  13-FEB-1995 FIN

           IF ARG-IIC-IGAR IN ARG > ZEROES
      *SMC-INI 22-11-1993
               IF CLC-IND-MGAR(CLC-I) = 'U'
                  MOVE 'E'   TO CLC-IND-MGAR(CLC-I)
                  GO TO FIN-PUT-TAB-ARG
               ELSE
      *SMC-FIN 22-11-1993
                  GO TO FIN-PUT-TAB-ARG.

      *BUS-TAB Busca Glosa Moneda de Tabla
           IF ARG-COD-TOGA IN ARG > SPACES
              MOVE 'TAB'               TO TAB-COD-SIST
              MOVE 'TIO'               TO TAB-COD-TTAB IN TAB
              MOVE ARG-COD-TOGA IN ARG TO TAB-COD-CTAB IN TAB
              PERFORM BUS-TAB
              MOVE TAB-GLS-ABRV IN TAB TO CLC-COD-TOGA(CLC-I).

      *BUS-TAB Busca Glosa Cod. Auxiliar de Tabla
           IF ARG-COD-AOGA IN ARG > SPACES
              MOVE 'TAB'               TO TAB-COD-SIST
              MOVE 'AUX'               TO TAB-COD-TTAB IN TAB
              MOVE ARG-COD-COGA IN ARG TO TAB-COD-CTAB IN TAB
              PERFORM BUS-TAB
              MOVE TAB-GLS-ABRV IN TAB TO CLC-COD-AOGA(CLC-I).

           MOVE ARG-NUM-PORG IN ARG TO CLC-NUM-PORG(CLC-I).

           MOVE SPACES TO CLC-COD-SGAR(CLC-I).
       FIN-PUT-TAB-ARG.
           EXIT.

       WRT-TS SECTION.
       INI-WRT-TS.
           ADD 1 TO SCR-IMAX.
      * MHM ini 1-FEB-1996
      *     EXEC CICS WRITEQ TS QUEUE(CLC-NAME-QUE)
           EXEC CICS WRITEQ TS QUEUE(CLC-NAME-QUE-A)
                               FROM(CLC-TS)
      *                         LENGTH(CLC-LONG-TS)
                               LENGTH(CLC-LONG-TS-A)
      * MHM fin 1-FEB-1996
           END-EXEC.
       FIN-WRT-TS.
           EXIT.

       RED-TS SECTION.
       INI-RED-TS.
      *     MOVE EIBTRMID TO CLC-TERM-A.
           MOVE SCR-OTRN TO CLC-TERM-A.
           MOVE CLC-I TO SCR-I.
           EXEC CICS HANDLE CONDITION QIDERR(FIN-RED-TS)
                                     ITEMERR(FIN-RED-TS)
           END-EXEC.
      * MHM ini 1-FEB-1996
      *     EXEC CICS READQ TS QUEUE(CLC-NAME-QUE)
           EXEC CICS READQ TS QUEUE(CLC-NAME-QUE-A)
                               INTO(CLC-TS)
      *                         LENGTH(CLC-LONG-TS)
                               LENGTH(CLC-LONG-TS-A)
                               ITEM(CLC-I)
      * MHM fin 1-FEB-1996
           END-EXEC.
       FIN-RED-TS.
           EXIT.

       CLR-VEC-TS SECTION.
       INI-CLR-VEC-TS.
           MOVE ZEROES              TO CLC-NUM-ILDC(CLC-I).
           MOVE SPACES              TO CLC-IND-VIGE(CLC-I).
           MOVE SPACES              TO CLC-COD-TOOC(CLC-I).
           MOVE SPACES              TO CLC-COD-AOOC(CLC-I).
           MOVE SPACES              TO CLC-COD-TOGA(CLC-I).
           MOVE SPACES              TO CLC-COD-AOGA(CLC-I).
           MOVE ZEROES              TO CLC-NUM-PORG(CLC-I).
           MOVE SPACES              TO CLC-IND-MGAR(CLC-I).
           MOVE SPACES              TO CLC-COD-SGAR(CLC-I).
           MOVE SPACES              TO CLC-COD-VCLC(CLC-I).
           MOVE SPACES              TO CLC-FEC-FVEN(CLC-I).
           MOVE ZEROES              TO CLC-VAL-CMLC(CLC-I).
           MOVE ZEROES              TO CLC-VAL-CDLC(CLC-I).
      * ISP-INI  14-APR-2003
      * ISP-INI  14-APR-2003
      *    MOVE ZEROES              TO CLC-VAL-CACT(CLC-I).
           MOVE SPACES              TO CLC-VAL-CACT-ALF(CLC-I).
      * ISP-FIN  14-APR-2003
      * ISP-FIN  14-APR-2003
           MOVE SPACES              TO CLC-COD-TIPO(CLC-I).
       FIN-CLR-VEC-TS.
           EXIT.

       GET-CUR-RDC SECTION.
       INI-GET-CUR-RDC.
           MOVE CLF-CIC-ICLF IN CLF TO RDC-CIC-ICLF IN RDC.
           MOVE 'RDC-KEY-ICLF' TO FIO-AKEY.
           MOVE FIO-GET-NLS    TO FIO-CMND.
           PERFORM LDC-FIO-RDC.
           IF FIO-STAT-CDK
               MOVE '00' TO FIO-STAT.
      *FLB CST  21-JAN-1994
           IF FIO-STAT-OKS AND
              CLF-CIC-ICLF IN CLF NOT = RDC-CIC-ICLF IN RDC
               MOVE 'RDC-KEY-ICLF' TO FIO-AKEY
               MOVE FIO-END-BRW TO FIO-CMND
               PERFORM LDC-FIO-RDC
               MOVE '23' TO FIO-STAT.

           MOVE FIO-STAT TO PGM-STAT-RDC.
       FIN-GET-CUR-RDC.
           EXIT.

       GET-NXT-RDC SECTION.
       INI-GET-NXT-RDC.
           MOVE SPACES TO MSG-COD-SIST.
           MOVE SPACES TO MSG-COD-MENS.
           MOVE 'RDC-KEY-ICLF' TO FIO-AKEY.
           MOVE FIO-GET-NXT TO FIO-CMND.
           PERFORM LDC-FIO-RDC.
           IF FIO-STAT-OKS AND
              CLF-CIC-ICLF IN CLF = RDC-CIC-ICLF IN RDC
                MOVE 'M' TO SCR-IND-MCLI
           ELSE
                MOVE SPACES TO SCR-IND-MCLI
                IF FIO-STAT-OKS
                    MOVE FIO-END-BRW TO FIO-CMND
                    MOVE 'RDC-KEY-ICLF' TO FIO-AKEY
                    PERFORM LDC-FIO-RDC.
       FIN-GET-NXT-RDC.
           EXIT.

       COPY LDCBGCCU.
       COPY LDCBGCEG.
       COPY LDCBKCCU.
       COPY LDCBKCEG.

       BUS-EST-FIA SECTION.
       INI-BUS-EST-FIA.
           MOVE ARG-CIC-IGAR IN ARG TO FIA-CIC-IESC IN FIA.
           MOVE ZEROES              TO FIA-NUM-IFIA IN FIA.
           MOVE FIO-GET-NLS TO FIO-CMND.
           PERFORM DEU-FIO-FIA.
           IF NOT FIO-STAT-OKS OR
              FIA-CIC-IESC IN FIA NOT = ARG-CIC-IGAR IN ARG
               MOVE 'P' TO CLC-COD-SGAR(CLC-I)
               GO TO BRW-BUS-EST-FIA.
           MOVE 'L' TO CLC-COD-SGAR(CLC-I).
       LUP-BUS-EST-FIA.
           IF FIA-MSC-STAT IN FIA NOT = 'S'
               MOVE 'P' TO CLC-COD-SGAR(CLC-I)
               GO TO BRW-BUS-EST-FIA.

           IF FIA-FEC-FVEN IN FIA < HOY-FHOY AND
              FIA-FEC-FVEN IN FIA > ZEROES AND
              FIA-FEC-FALZ IN FIA NOT > ZEROES AND
              FIA-MSC-STAT IN FIA NOT = 'M' AND
              CLC-COD-SGAR(CLC-I) = 'L'
               MOVE 'V' TO CLC-COD-SGAR(CLC-I)
           ELSE
           IF FIA-FEC-FALZ IN FIA NOT > ZEROES AND
              FIA-MSC-STAT IN FIA NOT = 'M'
               MOVE 'C' TO CLC-COD-SGAR(CLC-I).

           MOVE FIO-GET-NXT TO FIO-CMND.
           PERFORM DEU-FIO-FIA.
           IF FIO-STAT-OKS AND
              FIA-CIC-IESC IN FIA = ARG-CIC-IGAR IN ARG
               GO TO LUP-BUS-EST-FIA.
       BRW-BUS-EST-FIA.
           IF FIO-STAT-OKS
               MOVE FIO-END-BRW TO FIO-CMND
               PERFORM DEU-FIO-FIA.
       FIN-BUS-EST-FIA.
           EXIT.

      *>>>>
      *TABBGTVC
      *Transforma valor de una moneda a otra
      *INPUT  : TVC-VALO, TVC-MON1, TVC-MON2, TVC-FCAM
      *OUTPUT : TVC-VALO, TVC-CMSG
       TAB-PRO-TVC SECTION.
       INI-TAB-PRO-TVC.
           MOVE SPACES TO TVC-CMSG.
           IF TVC-MON2 = TVC-MON1
               GO TO FIN-TAB-PRO-TVC.
           IF TVC-MNAC NOT > SPACES
               MOVE 'TAB'  TO FIO-SIST
               MOVE 'VLR'  TO TAB-CIC-TTAB IN TAB
               MOVE '0999' TO TAB-CIC-CTAB IN TAB
               MOVE 'TAB-CIC-TABL' TO FIO-AKEY
               MOVE FIO-GET-KEY    TO FIO-CMND
               PERFORM GNS-FIO-TAB
               IF NOT FIO-STAT-OKS
                   MOVE SPACES TO TVC-MNAC
               ELSE
                   MOVE TAB-COD-CTAB IN TAB TO TVC-MNAC.

      *Convertir TVC-VALO de TVC-MON1 a TVC-MON2
      *a) Convertir monto en TVC-MON1 a Moneda Nacional
           IF TVC-MON1 = TVC-MNAC
               NEXT SENTENCE
           ELSE
               MOVE TVC-DCAM IN TVC-VARI   TO CAM-NUM-DCAM IN CAM(1)
               MOVE TVC-MCAM IN TVC-VARI   TO CAM-NUM-MCAM IN CAM(1)
               MOVE TVC-SCAM IN TVC-VARI   TO CAM-NUM-SCAM IN CAM(1)
               MOVE TVC-ACAM IN TVC-VARI   TO CAM-NUM-ACAM IN CAM(1)
               MOVE CAM-FEC-FCAM IN CAM(1) TO CAM-FEC-FCAM IN CAM(2)
               MOVE TVC-MON1 IN TVC-VARI   TO CAM-COD-VCAM IN CAM(1)
               MOVE TVC-MNAC IN TVC-VARI   TO CAM-COD-VCAM IN CAM(2)
               MOVE FIO-GET-KEY TO FIO-CMND
               PERFORM TAB-FIO-CAM
               IF NOT ( FIO-STAT-OKS AND CAM-MSC-STAT IN CAM = 'S' )
                   MOVE 'TVCCAMBNXNV' TO TVC-CMSG
                   GO TO FIN-TAB-PRO-TVC
               ELSE
                   MULTIPLY CAM-SGV-VCAM IN CAM BY TVC-VALO IN TVC-VARI
                            GIVING TVC-VALO IN TVC-VARI
                   MOVE TVC-VALO IN TVC-VARI TO PES-SGV-DECI
                   MOVE TVC-MNAC IN TVC-VARI TO PES-CIC-VCAM
                   PERFORM PES-SCTV
                   MOVE PES-SGV-ENTE TO TVC-VALO IN TVC-VARI.
      *b) TVC-VALO en Moneda Nacional (TVC-MNAC) convertir a TVC-MON2
           IF TVC-MNAC = TVC-MON2
               NEXT SENTENCE
           ELSE
               MOVE TVC-DCAM IN TVC-VARI   TO CAM-NUM-DCAM IN CAM(1)
               MOVE TVC-MCAM IN TVC-VARI   TO CAM-NUM-MCAM IN CAM(1)
               MOVE TVC-SCAM IN TVC-VARI   TO CAM-NUM-SCAM IN CAM(1)
               MOVE TVC-ACAM IN TVC-VARI   TO CAM-NUM-ACAM IN CAM(1)
               MOVE CAM-FEC-FCAM IN CAM(1) TO CAM-FEC-FCAM IN CAM(2)
               MOVE TVC-MON2 IN TVC-VARI   TO CAM-COD-VCAM IN CAM(1)
               MOVE TVC-MNAC IN TVC-VARI   TO CAM-COD-VCAM IN CAM(2)
               MOVE FIO-GET-KEY TO FIO-CMND
               PERFORM TAB-FIO-CAM
               IF NOT ( FIO-STAT-OKS AND CAM-MSC-STAT IN CAM = 'S' AND
                        CAM-SGV-VCAM IN CAM > 0 )
                   MOVE 'TVCCAMBNXNV0' TO TVC-CMSG
                   GO TO FIN-TAB-PRO-TVC
               ELSE
                   DIVIDE TVC-VALO IN TVC-VARI BY CAM-SGV-VCAM IN CAM
                          GIVING TVC-VALO IN TVC-VARI ROUNDED
                   MOVE TVC-VALO IN TVC-VARI TO PES-SGV-DECI
                   MOVE TVC-MON2 IN TVC-VARI TO PES-CIC-VCAM
                   PERFORM PES-SCTV
                   MOVE PES-SGV-ENTE TO TVC-VALO IN TVC-VARI.
       FIN-TAB-PRO-TVC.
           EXIT.
       COPY TABBFCAM.
       COPY GNSBGPES.
