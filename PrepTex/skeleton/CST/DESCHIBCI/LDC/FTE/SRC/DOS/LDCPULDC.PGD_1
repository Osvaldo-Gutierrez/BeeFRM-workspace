       IDENTIFICATION DIVISION.
      *========================
       PROGRAM-ID.   LDCPULDC.
       AUTHOR.       CONSIST.
       DATE-WRITTEN. 08-May-19 11:45 AM.

      * NOMBRE PROGRAMA                   LDCPULDC
      * VERSION PGM                       3.1
      * VERSION SKL                       08.07.21
      * OPCION                            UPD
      * ARCHIVO BASE                      LDCLDC
      * PANTALLA                          LDCLDC
      * INP/OUT                           DATACOM
      * TAMANO COMMAREA                   250

      *<<<<
      *-------------------------------------------------------------
      *MODIFICACIONES:
      *-------------------------------------------------------------
      *OBJETIVO: SE MODIFICA LA FORMA VALIDAR EL CAMPO LDC-COD-TIPO
      *          PARA CREDITOS FOGAPE
      *PROYECTO: RANGO DE VENTAS
      *FECHA   : MAYO DE 2009
      *AUTOR   : CHC
      *ETIQUETA: *AFRI-INI/CHC/MAY-2009/CANAL DE VENTAS
      *-------------------------------------------------------------
      *OBJETIVO: Se debe validar en tabla DEU TLC si se permite
      *          duplicidad de lineas. Solo si en posicion 7 de
      *          Datos Adicionales existe una "D" se permitira
      *          duplicidad.
      *PROYECTO: Control detalle de Lineas duplicadas
      *FECHA   : 16-04-2018
      *AUTOR   : BEE (RRM)
      *ETIQUETA: RRM-INI abril-2018 / control LDC duplicadas
      *-------------------------------------------------------------
      * NOMBRE PROGRAMA                   LDCPULDC
      * VERSION                           3.1
      * OPCION                            UPD
      * ARCHIVO BASE                      LDCLDC
      * PANTALLA                          LDCLDC
      * INP/OUT                           DATACOM
      * TAMANO COMMAREA                   250
      *>>>>

       ENVIRONMENT DIVISION.
      *=====================
       CONFIGURATION SECTION.
      *----------------------
       SPECIAL-NAMES.
               DECIMAL-POINT IS COMMA.

       DATA DIVISION.
      *==============

       WORKING-STORAGE SECTION.
      *------------------------
      * COPY GNSWGSCR.
       COPY GNSWGCVT.
       77  WSS-TAG-LDCPULDC-INI PIC X(125) VALUE                        
           '<IDNPGM NOM=$LDCPULDC$ SKL=$08.07.21$ VSN=${vsnpu}$        
      -    'GEN=$08-May-19 11:45 AM$ FNC=${fncpu}$/>'.    
       COPY GNSWCSCR.
      *PTC-INI
      *PTC-SUB
      * ISP  10-MAY-2001 13:46:35 
      * COPY GNSWVSCR.
       COPY GNSWV3CR.
      *PTC-FIN
      *<<<< PGM_BMS AND FIN_SCR_VARI
       COPY LDCWGENG.
           03 SCR-IND-MCLI  VALUE SPACES            PIC X(01).
           03 SCR-IND-OCIC  VALUE SPACES            PIC X(01).
      *JSS-INI 21-MAR-1994
      *    03 SCR-CLF-DISP  VALUE SPACES            PIC X(62).
           03 SCR-COD-TOGA  VALUE SPACES            PIC X(03).
           03 SCR-COD-OFIC  VALUE SPACES            PIC X(03).
           03 SCR-COD-EJEC  VALUE SPACES            PIC X(12).
      *<<<< NOT PGM_ARG
           03 SCR-NUM-ICLI  VALUE SPACES            PIC X(08).
      *>>>>
           03 SCR-VRF-ICLI  VALUE SPACES            PIC X(01).
           03 SCR-IND-ICLI  VALUE SPACES            PIC X(01).
      *<<<< NOT PGM_ARG
           03 SCR-GLS-ICLI  VALUE SPACES            PIC X(03).
      *>>>>
           03 SCR-VAL-CMAX  VALUE ZEROES            PIC 9(11).
           03 SCR-COD-VCCF  VALUE SPACES            PIC X(06).
           03 SCR-COD-TOOC  VALUE SPACES            PIC X(03).
           03 SCR-COD-AOOC  VALUE SPACES            PIC X(03).
      *    03 SCR-CLF-DISP  VALUE SPACES            PIC X(08).
           03 SCR-COD-VCOC  VALUE SPACES            PIC X(06).
      *<<<< NOT PGM_ARG
           03 SCR-CLF-DISP  VALUE SPACES            PIC X(02).
      *>>>>
      *JSS-FIN 21-MAR-1994
      *FLB CST  11-MAY-1994 FIN

           03 CMA-VARI.
              05 ARG-CAI-IGAR                       PIC X(04).
      * Si > zeroes, en CMN-ING enganchar a GAR y/o FIA
              05 ARG-IIC-IGAR                       PIC 9(08).
      * Si > zeroes, en CMN-ING enganchar a GAR y/o FIA
              05 ARC-CAI-IOPC                       PIC X(04).
              05 ARC-IIC-IOPC                       PIC 9(08).
              05 CMA-NUM-ARC                        PIC 9(01).
              05 CMA-NUM-ARG                        PIC 9(01).
              05 CLF-FEC-FAPE.
                 07 CLF-NUM-DAPE                    PIC 9(02).
                 07 CLF-NUM-MAPE                    PIC 9(02).
                 07 CLF-NUM-SAPE                    PIC 9(02).
                 07 CLF-NUM-AAPE                    PIC 9(02).
              05 CLF-FEC-FVEN.
                 07 CLF-NUM-SVEN                    PIC 9(02).
                 07 CLF-NUM-AVEN                    PIC 9(02).
                 07 CLF-NUM-MVEN                    PIC 9(02).
                 07 CLF-NUM-DVEN                    PIC 9(02).
              05 CLF-NUM-PVIG                       PIC 9(03).
              05 CLF-IND-PVIG                       PIC X(01).
      *<<<< NOT PGM_ARG
              05 CLF-VAL-CMAX    COMP-3             PIC S9(11)V9(4).
      *>>>>
              05 CMA-IND-IOPC                       PIC X(01).
      *FLB CST  23-JUN-1994
              05 CMA-IND-IGAR                       PIC X(01).
              05 SCR-LDC-DISP  VALUE SPACES         PIC X(34).
      *FLB CST  23-JUN-1994 FIN
      *>>>>
       COPY LDCWILDC.
       COPY LDCBRLDC.


       COPY GNSWVIDD.
       COPY GNSWGRQA.
       COPY GNSWGUIB.
       COPY GNSWGELS.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-LDC-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-TAB-REQA==.
       COPY GNSBRTAB.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-MSC-REQA==.
       COPY GNSBRMSC.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-MSG-REQA==.
       COPY GNSBRMSG.
       COPY GNSWCFIO.
       COPY GNSWVFIO.
      *PTC-INI
      *PTC-SUB
      * ISP  10-MAY-2001 13:46:35 
      * COPY GNSWGFRM.
       COPY GNSWG3CF.
       COPY GNSWGTSK.
       COPY GNSWGQUE.
      *PTC-FIN
       COPY GNSWVNUM.
       COPY GNSWCNUM.
       COPY GNSWGFEC.
       COPY GNSWGHOY.
       COPY GNSWCVRF.
       COPY GNSWVVRF.
       COPY GNSWGIDC.
       COPY GNSWGSYS.

      *<<<< WSS
      *<<<< PGM_BMS
       COPY LDCMXW01.
       COPY LDCWGPMP.
      *>>>>
      *<<<< PGM_PU
       01  PGM-STAT-ADIC.
           05 PGM-STAT-GDG           VALUE '23'      PIC X(02).
              88 PGM-STAT-GDG-OKS    VALUE '00'.
              88 PGM-STAT-GDG-NUL    VALUE '  '.
           05 PGM-STAT-FIA           VALUE '23'      PIC X(02).
              88 PGM-STAT-FIA-OKS    VALUE '00'.
              88 PGM-STAT-FIA-NUL    VALUE '  '.
      *>>>>
       01  WSS-VARI.
      *<<<< PGM_PU
      *RRM-INI abril-2018 / control LDC duplicadas
           03 WSS-1            VALUE 1            PIC 9(01).
           03 WSS-D            VALUE 'D'          PIC X(01).
           03 WSS-CT-MLT       VALUE 'MLT'        PIC X(03).
      *RRM-INI abril-2018 / control LDC duplicadas
      *AFRI-INI-SEP2005
          03 WSS-CIC-IFGL                              PIC X(12).
          03 WSS-VEC-DATA.
             05 WSS-VEC-CLI OCCURS 4 TIMES.
                07 WSS-FILL-1                           PIC X(01).
                07 WSS-DBC-NUM-ICLI                     PIC X(08).
                07 WSS-DBC-VRF-ICLI                     PIC X(01).
                07 WSS-DBC-IND-ICLI                     PIC X(01).
                07 WSS-DBC-GLS-ICLI                     PIC X(03).
                07 WSS-FILL-2                           PIC X(01).
      *AFRI-FIN-SEP2005
      *ALD-ADA-INI/08082001
           03  WSS-IND-BANT          VALUE 'N'    PIC X(01).
           03  WSS-VAL-CACT    COMP-3             PIC S9(11)V9(4).
           03  WSS-IND-IGUA          VALUE SPACES    PIC X(01).
           03  WSS-IND-LCP           VALUE 'N'       PIC X(01).
           03  WSS-IND-LCE           VALUE 'N'       PIC X(01).
           03  WSS-IND-LDCA          VALUE 'N'       PIC X(01).
           03  WSS-IND-CLDC          VALUE 'N'       PIC X(01).
           03  LDC-BKP               VALUE SPACES    PIC X(200).
      *ALD-ADA-FIN/08082001
      *SMC-INI 26-10-1993
           03  WSS-VSN-VCTE                       PIC X(01).
               88  USA-CTE       VALUE 'N'.
           03  WSS-VSN-VCEX                       PIC X(01).
               88  USA-CEX       VALUE 'N'.
           03  WSS-VSN-VTCR                       PIC X(01).
               88  USA-TCR       VALUE 'N'.
           03  WSS-VSN-VLEA                       PIC X(01).
               88  USA-LEA       VALUE 'N'.
      *SMC-FIN 26-10-1993

      *FLB CST   21-FEB-1995 PARAMETROS LINEA AVANCE
           03  WSS-GLS-DATA.
               05 WSS-NUM-PLAV                    PIC 9(03).
               05 WSS-COD-PLAV                    PIC X(01).
               05 FILLER                          PIC X(01).
               05 WSS-IND-VTOL                    PIC X(01).
               05 FILLER                          PIC X(14).
               05 WSS-COD-MLAV                    PIC X(06).
               05 WSS-VAL-MMLA                    PIC 9(09).
           03  WSS-VAL-CMAX   VALUE ZEROES        PIC 9(15).
           03  WSS-PES-MMLA   VALUE ZEROES        PIC 9(15).
           03  WSS-CLF-CMAX   VALUE ZEROES        PIC 9(15).
           03  WSS-VSN-MLMC   VALUE SPACES        PIC X(01).
               88 PERMITE-MON-LDC-DIF-A-MON-CLF VALUE 'S'.
           03  WSS-FEC-FMAX.
               05  WSS-NUM-SMAX                   PIC 9(02).
               05  WSS-NUM-AMAX                   PIC 9(02).
               05  WSS-NUM-MMAX                   PIC 9(02).
               05  WSS-NUM-DMAX                   PIC 9(02).
      *FLB CST   9-MAR-1995
           03  WSS-SIS-DATA.
               05 WSS-IND-DEUD                    PIC X(01).
                  88 TIO-DE-DEUDA VALUE 'D'.

           03  WSS-FEC-FINI.
               05  WSS-NUM-SINI                   PIC 9(02).
               05  WSS-NUM-AINI                   PIC 9(02).
               05  WSS-NUM-MINI                   PIC 9(02).
               05  WSS-NUM-DINI                   PIC 9(02).

           03  WSS-FEC-FAPE.
               05  WSS-NUM-SAPE                   PIC 9(02).
               05  WSS-NUM-AAPE                   PIC 9(02).
               05  WSS-NUM-MAPE                   PIC 9(02).
               05  WSS-NUM-DAPE                   PIC 9(02).
      *>>>>
      *LTM-INI 13.04.1994
           03  WSS-IFIN          VALUE SPACES     PIC X(01).
      *LTM-FIN 13.04.1994
           03  WSS-CIC-ICLI                       PIC X(12).
           03  WSS-COD-COPE.
               05  WSS-COD-TOPE                   PIC X(03).
               05  WSS-COD-AOPE                   PIC X(03).
           03  WSS-NUM-PER                        PIC 9(03).
           03  WSS-IND-PER                        PIC X(01).
           03  ARC-KEY-IARC.
               05  ARC-KEY-ILDC.
                   07  ARC-CAI-ICLF               PIC X(04).
                   07  ARC-IIC-ICLF               PIC 9(08).
      *<<<< NOT PGM_DB2
                   07  ARC-NUM-ILDC               PIC 9(02).
               05  ARC-NUM-IARC                   PIC 9(01).
      *>>>>
           03  ARG-KEY-IARG.
               05  ARG-KEY-ILDC.
                   07  ARG-CAI-ICLF               PIC X(04).
                   07  ARG-IIC-ICLF               PIC 9(08).
      *<<<< NOT PGM_DB2
                   07  ARG-NUM-ILDC               PIC 9(02).
               05  ARG-NUM-IARG                   PIC 9(01).
      *>>>>
           03  WSS-NDIA       VALUE ZEROES        PIC 9(04).
           03  WSS-NANO       VALUE ZEROES        PIC 9(06).
           03  WSS-MOV        VALUE ZEROES        PIC 9(02).
           03  WSS-FS-ARC     VALUE ZEROES        PIC 9(02).

           03  WSS-FEC-FVEN.
               05  WSS-NUM-SVEN                   PIC 9(02).
               05  WSS-NUM-AVEN                   PIC 9(02).
               05  WSS-NUM-MVEN                   PIC 9(02).
               05  WSS-NUM-DVEN                   PIC 9(02).
           03  WSS-FEC-FVE1.
               05  WSS-NUM-SVE1                   PIC 9(02).
               05  WSS-NUM-AVE1                   PIC 9(02).
               05  WSS-NUM-MVE1                   PIC 9(02).
               05  WSS-NUM-DVE1                   PIC 9(02).
           03  WSS-CIC-TOCF   VALUE SPACES        PIC X(12).
      *<<<< PGM_PU
           03  WSS-CIC-TOOC   VALUE SPACES        PIC X(12).
           03  WSS-CTA-CTE    VALUE ZEROES        PIC 9(02).
           03  WSS-VSN-OCAI                       PIC X(01).
      *FLB CST  10-OCT-1994 ASIGNA EL IIC DE LA OPC
           03  WSS-VSN-AOPC                       PIC X(01).
      *FLB CST  17-OCT-1994 PERMITE O NO TIO SIN AUX
           03  WSS-VSN-AXOB                       PIC X(01).

      *>>>>
      *<<<< NOT PGM_DB2
       COPY LDCBRCLF.
       COPY LDCBRARC.
       COPY LDCBRARG.
       COPY LDCBRRDC.
      *<<<< PGM_PU
       COPY DEUBRFIA.
       COPY COLBROPC.
      *>>>>
      *<<<< NOT PGM_PQ
       COPY BGLBRGDG.
       COPY BGLBRTAG.

       COPY SGCBRDBC.

       COPY GNSBRCIC.
       COPY GNSWGCIC.
       COPY GNSWGCPT.
       COPY TABBRTIO.
       COPY GNSWGTSK.
      *<<<< PGM_PU
      *FLB CST  22-FEB-1995
       COPY TABBRCAM.
      *FLB CST  14-OCT-1993
       COPY TABWGCTE.
       COPY SGCBROPE.
       COPY SGCBRRCO.
      *FLB CST  14-OCT-1993

      *FLB CST  10-OCT-1994 VALIDA TIPO DE LINEA
       COPY LDCWGTLC.
      *>>>>
      *<<<< PGM_DTC

       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-CIC-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-CLF-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-ARC-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-ARG-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-RDC-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-DBC-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-TIO-REQA==.
      *<<<< PGM_PU
      *FLB CST  27-FEB-1995
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-CAM-REQA==.

       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-TAG-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-GDG-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-FIA-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-OPC-REQA==.

      *FLB CST  14-OCT-1993 1
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-OPE-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-RCO-REQA==.
      *>>>>
      *>>>>
       01  PGM-VARI.
           03 PGM-ICLR                  VALUE ' '       PIC X(01).
           03 PGM-LIMPIAR-TODO          VALUE ' '       PIC X(01).
           03 PGM-LIMPIAR-LLAVES        VALUE 'K'       PIC X(01).
           03 PGM-LIMPIAR-CAMPOS        VALUE 'F'       PIC X(01).
           03 PGM-NO-LIMPIAR-NADA       VALUE 'N'       PIC X(01).
           03 PGM-PROG                                  PIC X(08).
           03 PGM-NTRN                                  PIC X(04).
           03 PGM-STAT.
              05 PGM-STAT-CLF.
                 88 PGM-STAT-CLF-NUL    VALUE '  '.
                 07 PGM-STT1-CLF        VALUE '2' PIC X(01).
                    88 PGM-STAT-CLF-OKS VALUE '0'.
                 07 PGM-STT2-CLF        VALUE '3' PIC X(01).
              05 PGM-STAT-LDC.
                 88 PGM-STAT-LDC-NUL    VALUE '  '.
                 07 PGM-STT1-LDC        VALUE '2' PIC X(01).
                    88 PGM-STAT-LDC-OKS VALUE '0'.
                 07 PGM-STT2-LDC        VALUE '3' PIC X(01).
              05 PGM-STAT-DBC.
                 88 PGM-STAT-DBC-NUL    VALUE '  '.
                 07 PGM-STT1-DBC        VALUE '2' PIC X(01).
                    88 PGM-STAT-DBC-OKS VALUE '0'.
                 07 PGM-STT2-DBC        VALUE '3' PIC X(01).
              05 PGM-STAT-ARC.
                 88 PGM-STAT-ARC-NUL    VALUE '  '.
                 07 PGM-STT1-ARC        VALUE '2' PIC X(01).
                    88 PGM-STAT-ARC-OKS VALUE '0'.
                 07 PGM-STT2-ARC        VALUE '3' PIC X(01).
              05 PGM-STAT-ARG.
                 88 PGM-STAT-ARG-NUL    VALUE '  '.
                 07 PGM-STT1-ARG        VALUE '2' PIC X(01).
                    88 PGM-STAT-ARG-OKS VALUE '0'.
                 07 PGM-STT2-ARG        VALUE '3' PIC X(01).
      *<<<< FIN_PGM_STAT AND PGM_CHI
      *>>>>
           03 PGM-SRNF                  VALUE '23'      PIC X(02).
           03 PGM-SOKS                  VALUE '00'      PIC X(02).
           03 PGM-SNUL                  VALUE '  '      PIC X(02).
           03 PGM-SUAR                  VALUE SPACES    PIC X(15).

       LINKAGE SECTION.
      *----------------
       01  DFHCOMMAREA.
           02 DFH-CMMA OCCURS 570 PIC X(01).
       COPY GNSLGFIO.

       PROCEDURE DIVISION.
      *===================

       MAIN SECTION.
       INI-MAIN.
           PERFORM INI.
       LUP-MAIN.
           IF SCR-INST = SCR-INST-HCM
                 PERFORM SCR-COM.
           IF SCR-CCPP = 'MOD'
                 PERFORM SCR-MOD
           ELSE
           IF SCR-CCPP = 'ING'
                 PERFORM SCR-ING
           ELSE
           IF SCR-CCPP = 'ACC'
                 PERFORM SCR-ACC
           ELSE
           IF SCR-CCPP = 'ELI'
                 PERFORM SCR-ELI
           ELSE
                 MOVE SCR-INST-HCM TO SCR-INST.
           GO TO LUP-MAIN.
       FIN-MAIN.
           EXIT.

       INI SECTION.
       INI-INI.
       COPY GNSBGEIB.
       COPY GNSBGEDB.
           MOVE LOW-VALUES TO LDC-FLD.
           MOVE LOW-VALUES TO LDC-EDT.
           PERFORM GNS-PRO-RCK.
           PERFORM GNS-BUS-VCA.
           MOVE +570 TO SCR-TCMA.
           PERFORM GNS-HDL-SYS.
           PERFORM GNS-HDL-FRM.
           MOVE 'LDCPULDC' TO FIO-PROG.
           PERFORM GNS-BUS-IDD.
      *PTC-INI
           PERFORM GNS-ERR-QUE.
           PERFORM GET-TSK-TERM.
      *PTC-FIN
      *<<<< INI_FIO
      *PTC ini
           PERFORM GNS-ERR-QUE.
           PERFORM GET-TSK-TERM.
      *PTC fin
      *<<<< ( INI_FIO ) AND ( NOT PGM_VSI )
           PERFORM GNS-HDL-VSM.
      *>>>>
      *<<<< INI_FIO
      *>>>>
       FIN-INI.
           EXIT.

       COPY GNSBHSYS.
       COPY GNSBHFRM.
       COPY GNSBPRCK.
       COPY GNSBBVCA.
       COPY GNSBBIDD.

       SCR-COM SECTION.
       INI-SCR-COM.
           PERFORM STP-EXIT.
           MOVE FRM-CPSF-AEY TO FRM-CPIM-AEY.
           PERFORM PRO-ALL.
           PERFORM SCR-CLRA-LDC.
           PERFORM EDT-KEY-LDC.
           PERFORM EDT-FLD-LDC.
           PERFORM SCR-PUTA.
           MOVE SCR-INST-HCM TO SCR-INST.
           MOVE SCR-CMNP     TO SYS-PROG.
           MOVE SCR-VARI     TO SYS-CMMA.
           MOVE SCR-TCMA     TO SYS-TCMA.
           MOVE SYS-XCTL     TO SYS-CMND.
      *PTC-INI
           IF NOT SCR-OFRM-SRV
      *PTC-FIN
           PERFORM GNS-PRO-SYS.
       XCT-ERR.
           MOVE 'XCTERR    ' TO MSG-COD-MENS.
           MOVE 'GNS'        TO MSG-COD-SIST.
           PERFORM GET-MSG.
           MOVE MSG-GLS-DESC TO SYS-MEN1.
           MOVE SYS-PROG     TO SYS-MEN2.
           MOVE SYS-ABOR     TO SYS-CMND.
      *PTC-INI
           IF NOT SCR-OFRM-SRV
      *PTC-FIN
           PERFORM GNS-PRO-SYS.
       COPY GNSBGGBK.
       FIN-SCR-COM.
           EXIT.

       SCR-MOD SECTION.
       INI-SCR-MOD.
           IF SCR-INST = SCR-INST-HKY
               PERFORM HBL-KEY
               MOVE SCR-INST-GKY TO SCR-INST
               PERFORM SCR-DMSG
           ELSE
           IF SCR-INST = SCR-INST-GFL
               PERFORM GET-FLD
           ELSE
           IF SCR-INST = SCR-INST-GCS
               PERFORM GET-ACC.
           PERFORM DESSCRTRL.
           IF FRM-FFLD = FRM-FFLD-PF7 OR FRM-FFLD-PF8
               PERFORM XCT-PRGP.
           IF NOT ( FRM-FFLD = FRM-FFLD-PF5 OR FRM-FFLD-PF6 )
               GO TO MSG-SCR-MOD.
       MSG-SCR-MOD.
           IF SCR-STAT = SCR-STAT-CON
               MOVE SPACES TO FRM-MENS
           ELSE
           IF SCR-STAT = SCR-STAT-ABT OR SCR-VFLD = SCR-VFLD-NOT
               MOVE 'MODNOT    ' TO MSG-COD-MENS
               MOVE 'GNS' TO MSG-COD-SIST
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS
           ELSE
               MOVE SPACES TO FRM-MENS
               PERFORM CMN-MOD
               IF FIO-STAT-OKS
                   IF FRM-MEN1 NOT > SPACES
                       MOVE 'MODYES    ' TO MSG-COD-MENS
                       MOVE 'GNS' TO MSG-COD-SIST
                       PERFORM GET-MSG
                       MOVE MSG-GLS-DESC TO FRM-MEN1
                   ELSE
                       NEXT SENTENCE
               ELSE
               IF FRM-MENS NOT > SPACES
                   MOVE 'FIOSTAT' TO MSG-COD-TMSG
                   MOVE FIO-STAT  TO MSG-COD-CMSG
                   MOVE 'GNS'     TO MSG-COD-SIST
                   PERFORM GET-MSG
                   MOVE MSG-GLS-DESC TO FRM-MENS.
           PERFORM SCR-MSSG.
       FIN-SCR-MOD.
           EXIT.

       SCR-ING SECTION.
       INI-SCR-ING.
           IF SCR-INST = SCR-INST-HKY
               PERFORM HBL-IKY
               MOVE SCR-INST-GKY TO SCR-INST
      *PTC-INI
               IF NOT SCR-OFRM-SRV
                   PERFORM SCR-DMSG
               ELSE
                   PERFORM SCR-PUTA
      *PTC-FIN
           ELSE
           IF SCR-INST = SCR-INST-GFL
                PERFORM GET-FLD
           ELSE
           IF SCR-INST = SCR-INST-GCS
                PERFORM GET-ACC.
           PERFORM DESSCRTRL.
       MSG-SCR-ING.
           IF SCR-STAT = SCR-STAT-CON
               MOVE SPACES TO FRM-MENS
           ELSE
           IF SCR-STAT = SCR-STAT-ABT OR SCR-VFLD = SCR-VFLD-NOT
               MOVE 'INGNOT    ' TO MSG-COD-MENS
               MOVE 'GNS' TO MSG-COD-SIST
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS
           ELSE
               MOVE SPACES TO FRM-MENS
               PERFORM CMN-ING
               IF FIO-STAT-OKS
                   IF FRM-MEN1 NOT > SPACES
                       MOVE 'INGYES    ' TO MSG-COD-MENS
                       MOVE 'GNS' TO MSG-COD-SIST
                       PERFORM GET-MSG
                       MOVE MSG-GLS-DESC TO FRM-MEN1
                   ELSE
                       NEXT SENTENCE
               ELSE
               IF FRM-MENS NOT > SPACES
                   MOVE 'FIOSTAT' TO MSG-COD-TMSG
                   MOVE FIO-STAT  TO MSG-COD-CMSG
                   MOVE 'GNS'     TO MSG-COD-SIST
                   PERFORM GET-MSG
                   MOVE MSG-GLS-DESC TO FRM-MENS.
           PERFORM SCR-MSSG.
       FIN-SCR-ING.
           EXIT.

       SCR-ACC SECTION.
       INI-SCR-ACC.
           IF SCR-INST = SCR-INST-HKY
               PERFORM HBL-KEY
               MOVE SCR-INST-GKY TO SCR-INST
               PERFORM SCR-DMSG
           ELSE
           IF SCR-INST = SCR-INST-GFL
                PERFORM GET-FLD
           ELSE
           IF SCR-INST = SCR-INST-GCS
                PERFORM GET-ACC.
           PERFORM DESSCRTRL.
           IF FRM-FFLD = FRM-FFLD-PF7 OR FRM-FFLD-PF8 OR
                         FRM-FFLD-PF5 OR FRM-FFLD-PF6
               PERFORM XCT-PRGP.
           MOVE SPACES TO FRM-MENS.
           IF SCR-STAT NOT = SCR-STAT-CON
               PERFORM CMN-ACC.
           PERFORM SCR-MSSG.
       FIN-SCR-ACC.
           EXIT.

       SCR-ELI SECTION.
       INI-SCR-ELI.
           IF SCR-INST = SCR-INST-HKY
               PERFORM HBL-KEY
               MOVE SCR-INST-GKY TO SCR-INST
               PERFORM SCR-DMSG
           ELSE
           IF SCR-INST = SCR-INST-GCS
                PERFORM GET-ACC.
           PERFORM DESSCRTRL.
           IF FRM-FFLD = FRM-FFLD-PF7 OR FRM-FFLD-PF8 OR
                         FRM-FFLD-PF5 OR FRM-FFLD-PF6
               PERFORM XCT-PRGP.
           IF SCR-STAT = SCR-STAT-CON
               MOVE SPACES TO FRM-MENS
           ELSE
           IF SCR-STAT = SCR-STAT-ABT OR SCR-VFLD = SCR-VFLD-NOT
               MOVE 'ELINOT    ' TO MSG-COD-MENS
               MOVE 'GNS' TO MSG-COD-SIST
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS
           ELSE
               MOVE SPACES TO FRM-MENS
               PERFORM CMN-ELI
               IF FIO-STAT-OKS
                   IF FRM-MEN1 NOT > SPACES
                       MOVE 'ELIYES    ' TO MSG-COD-MENS
                       MOVE 'GNS' TO MSG-COD-SIST
                       PERFORM GET-MSG
                       MOVE MSG-GLS-DESC TO FRM-MEN1
                   ELSE
                       NEXT SENTENCE
               ELSE
               IF FRM-MENS NOT > SPACES
                   MOVE 'FIOSTAT' TO MSG-COD-TMSG
                   MOVE FIO-STAT  TO MSG-COD-CMSG
                   MOVE 'GNS'     TO MSG-COD-SIST
                   PERFORM GET-MSG
                   MOVE MSG-GLS-DESC TO FRM-MENS.
           PERFORM SCR-MSSG.
       FIN-SCR-ELI.
           EXIT.



       SCR-DMSG SECTION.
       INI-SCR-DMSG.
           IF PGM-ICLR = PGM-NO-LIMPIAR-NADA
               NEXT SENTENCE
           ELSE
           IF PGM-ICLR = PGM-LIMPIAR-TODO
               PERFORM SCR-CLRA-LDC
               PERFORM EDT-KEY-LDC
               PERFORM EDT-FLD-LDC
           ELSE
           IF PGM-ICLR = PGM-LIMPIAR-LLAVES
               PERFORM CLR-KEY-LDC
               PERFORM EDT-KEY-LDC
           ELSE
               PERFORM CLR-FLD-LDC
               PERFORM EDT-FLD-LDC.
           PERFORM STP-EXIT.
           PERFORM SCR-PUTA.
           PERFORM SCR-EXIT.
       FIN-SCR-DMSG.
           EXIT.

       XCT-PRGP SECTION.
       INI-XCT-PRGP.
           MOVE SCR-INST-BRW TO SCR-INST.
           PERFORM STP-EXIT.
           MOVE FRM-FFLD   TO SCR-FFLD.
      *
           MOVE SCR-PROG     TO SYS-PROG.
           MOVE SCR-VARI     TO SYS-CMMA.
           MOVE SCR-TCMA     TO SYS-TCMA.
           MOVE SYS-XCTL     TO SYS-CMND.
      *PTC-INI
           IF NOT SCR-OFRM-SRV
      *PTC-FIN
           PERFORM GNS-PRO-SYS.
           PERFORM XCT-ERR.
       FIN-XCT-PRGP.
           EXIT.

       SCR-RST SECTION.
       INI-SCR-RST.
           MOVE SPACES       TO PGM-ICLR.
           MOVE SPACES       TO SCR-ACTU.
           MOVE SCR-STPP     TO SCR-STAT.
           MOVE SCR-MFLD-NOT TO SCR-MFLD.
           MOVE LOW-VALUES   TO LDC-FLD.
           MOVE LOW-VALUES TO LDC-EDT.
       FIN-SCR-RST.
           EXIT.

       GET-FLD SECTION.
       INI-GET-FLD.
      *<<<< PGM_BMS AND GET_FLD
           IF FRM-FFLD = FRM-FFLD-PF10 AND
              SCR-IND-ENG IN SCR-VEC-ENG(SCR-IPRO) = 'S'
              MOVE SCR-STAT-ABT TO SCR-STAT
               IF SCR-IND-COL = 'C'
                   MOVE WSS-TOT-IIDX TO SCR-IPRO
                   PERFORM EGR-FTER-CIC
               ELSE
                   SUBTRACT 1 FROM WSS-IDX-ILDC GIVING SCR-IPRO
                   GO TO FIN-GET-FLD.
      *>>>>
           PERFORM SCR-GFLD.
           IF FRM-STAT-ABT
               MOVE SCR-STAT-ABT TO SCR-STAT.
       FIN-GET-FLD.
           EXIT.

       CMN-MOD SECTION.
       INI-CMN-MOD.
           PERFORM KEY-ALL-LDC.
           MOVE FIO-GET-KEY-UPD TO FIO-CMND.
           PERFORM LDC-FIO-LDC.
           IF NOT FIO-STAT-OKS
               GO TO FIN-CMN-MOD.
           PERFORM RET-STT-LDC.
           PERFORM RET-ALL-LDC.
           PERFORM RET-HDR-LDC.
      *<<<< CMN_ING OR CMN_MOD
           IF LDC-IND-MGAR IN LDC-FLD = 'E'
               MOVE 'U' TO LDC-IND-MGAR IN LDC.
      *ALD-ADA-INI/18072001
           PERFORM ACT-CAMPO-CACT.
      *ALD-ADA-FIN/18072001
      *>>>>
           MOVE FIO-MOD TO FIO-CMND.
           PERFORM LDC-FIO-LDC.
      *<<<< FIN_CMN_MOD
      *JVM: Modifica ARC sin Multiples
       MOD-ARC.
           IF CMA-NUM-ARC IN CMA-VARI > 1
               GO TO MOD-ARG.

           IF CMA-NUM-ARC IN CMA-VARI = 0
               GO TO EXA-CERO-ARC.

           MOVE LDC-CAI-ICLF IN LDC-FLD TO ARC-CAI-ICLF IN ARC.
           MOVE LDC-IIC-ICLF IN LDC-FLD TO ARC-IIC-ICLF IN ARC.
           MOVE LDC-NUM-ILDC IN LDC-FLD TO ARC-NUM-ILDC IN ARC.
           MOVE 1                       TO ARC-NUM-IARC IN ARC.
           MOVE FIO-GET-KEY-UPD TO FIO-CMND.
           PERFORM LDC-FIO-ARC.
           IF NOT FIO-STAT-OKS
               GO TO FIN-CMN-MOD.

           IF ARC-COD-VCOC IN LDC-FLD = SPACES AND
              ARC-COD-TOOC IN LDC-FLD = SPACES AND
              ARC-COD-AOOC IN LDC-FLD = SPACES AND
              ARC-IIC-IOPC IN LDC-FLD = ZEROES
               MOVE FIO-DEL TO FIO-CMND
           ELSE
               PERFORM RET-ARC-LDC
               MOVE CMA-IND-IOPC IN CMA-VARI TO ARC-IND-IOPC IN ARC
               MOVE FIO-MOD TO FIO-CMND.
           PERFORM LDC-FIO-ARC.

           GO TO MOD-ARG.

       EXA-CERO-ARC.
           IF ARC-COD-VCOC IN LDC-FLD = SPACES AND
              ARC-COD-TOOC IN LDC-FLD = SPACES AND
              ARC-COD-AOOC IN LDC-FLD = SPACES AND
              ARC-IIC-IOPC IN LDC-FLD = ZEROES
               GO TO MOD-ARG.

           MOVE LDC-CAI-ICLF IN LDC-FLD TO ARC-CAI-ICLF IN ARC.
           MOVE LDC-IIC-ICLF IN LDC-FLD TO ARC-IIC-ICLF IN ARC.
           MOVE LDC-NUM-ILDC IN LDC-FLD TO ARC-NUM-ILDC IN ARC.
           MOVE 1                       TO ARC-NUM-IARC IN ARC.
           PERFORM RET-ARC-LDC.
           MOVE FIO-PUT TO FIO-CMND.
           PERFORM LDC-FIO-ARC.
           IF NOT FIO-STAT-OKS
               MOVE FIO-MENS TO FRM-MENS
               GO TO FIN-CMN-MOD
           ELSE
               GO TO MOD-ARG.

      *JVM: Modifica ARG sin Multiples
       MOD-ARG.
           IF CMA-NUM-ARG IN CMA-VARI > 1
               GO TO MOD-CLF.

           IF CMA-NUM-ARG IN CMA-VARI = 0
               GO TO EXA-CERO-ARG.

           IF LDC-IND-MGAR IN LDC-FLD = 'Y' OR 'O'
               GO TO MOD-CLF.

           MOVE LDC-CAI-ICLF IN LDC-FLD TO ARG-CAI-ICLF IN ARG.
           MOVE LDC-IIC-ICLF IN LDC-FLD TO ARG-IIC-ICLF IN ARG.
           MOVE LDC-NUM-ILDC IN LDC-FLD TO ARG-NUM-ILDC IN ARG.
           MOVE 1                       TO ARG-NUM-IARG IN ARG.
           MOVE FIO-GET-KEY-UPD TO FIO-CMND.
           PERFORM LDC-FIO-ARG.
           IF NOT FIO-STAT-OKS
               GO TO FIN-CMN-MOD.

           IF LDC-IND-MGAR IN LDC-FLD = 'S'
               MOVE FIO-DEL TO FIO-CMND
           ELSE
      * LDC-IND-MGAR IN LDC-FLD = 'U' OR 'E'
               PERFORM RET-ARG-LDC
               MOVE FIO-MOD TO FIO-CMND.
           PERFORM LDC-FIO-ARG.

           GO TO MOD-CLF.

       EXA-CERO-ARG.
           IF LDC-IND-MGAR IN LDC-FLD = 'S' OR 'Y' OR 'O'
               GO TO MOD-CLF.

           MOVE LDC-CAI-ICLF IN LDC-FLD TO ARG-CAI-ICLF IN ARG.
           MOVE LDC-IIC-ICLF IN LDC-FLD TO ARG-IIC-ICLF IN ARG.
           MOVE LDC-NUM-ILDC IN LDC-FLD TO ARG-NUM-ILDC IN ARG.
           MOVE 1                       TO ARG-NUM-IARG IN ARG.
           PERFORM RET-ARG-LDC.
           MOVE FIO-PUT TO FIO-CMND.
           PERFORM LDC-FIO-ARG.
           IF NOT FIO-STAT-OKS
               MOVE FIO-MENS TO FRM-MENS
               GO TO FIN-CMN-MOD
           ELSE
               GO TO MOD-CLF.

       MOD-CLF.
           MOVE LDC-CAI-ICLF IN LDC-FLD TO CLF-CAI-ICLF IN CLF.
           MOVE LDC-IIC-ICLF IN LDC-FLD TO CLF-IIC-ICLF IN CLF.
           MOVE FIO-GET-KEY-UPD TO FIO-CMND.
           PERFORM LDC-FIO-CLF.
           IF NOT FIO-STAT-OKS
               GO TO FIN-CMN-MOD.
      * AMP 19-OCT-1993 (DECIA FIN-CMN-ELI)
           MOVE 'I' TO CLF-MSC-STAT IN CLF.
           MOVE FIO-MOD TO FIO-CMND.
           PERFORM LDC-FIO-CLF.
      *>>>>
       FIN-CMN-MOD.
           EXIT.

       CMN-ING SECTION.
       INI-CMN-ING.
           MOVE SPACES TO LDC.
           PERFORM RET-STT-LDC.
           PERFORM RET-ALL-LDC.
           PERFORM RET-HDR-LDC.
      *<<<< CMN_ING OR CMN_MOD
           IF LDC-IND-MGAR IN LDC-FLD = 'E'
               MOVE 'U' TO LDC-IND-MGAR IN LDC.
      *ALD-BCI-INI/06-JUL-1999
           MOVE SPACES TO LDC-COD-APFA IN LDC.
           IF SCR-OFRM-SRV
              MOVE 'APFA'              TO QUE-TYPE
              MOVE TSK-TERM-ALF        TO QUE-TERM
              MOVE LDC-NUM-ILDC IN LDC TO QUE-NITM
              MOVE +02                 TO QUE-LITM
              MOVE QUE-GET             TO QUE-CMND
              PERFORM GNS-PRO-QUE
              IF QUE-STAT = QUE-STAT-OKS
                  MOVE QUE-ITEM         TO LDC-COD-APFA IN LDC.
      *ALD-BCI-FIN/06-JUL-1999
      *ALD-ADA-INI/18072001
           PERFORM ACT-CAMPO-CACT.
      *ALD-ADA-FIN/18072001

      *>>>>
           MOVE FIO-PUT TO FIO-CMND.
           PERFORM LDC-FIO-LDC.
      *<<<< FIN_CMN_ING
      *PTC-INI-MAN
           IF SCR-OFRM-SRV
               MOVE PTC-LDC-TYPE TO QUE-TYPE
               MOVE TSK-TERM-ALF TO QUE-TERM
               MOVE QUE-DEL      TO QUE-CMND
               PERFORM GNS-PRO-QUE
               MOVE PTC-LDC-TYPE TO QUE-TYPE
               MOVE TSK-TERM-ALF TO QUE-TERM
               MOVE PTC-LDC-LENG TO QUE-LITM
               MOVE LDC-CAI-ICLF IN LDC-FLD TO PTC-LDC-LDC-CAI-ICLF
               MOVE LDC-IIC-ICLF IN LDC-FLD TO PTC-LDC-LDC-IIC-ICLF
               MOVE LDC-NUM-ILDC IN LDC-FLD TO PTC-LDC-LDC-NUM-ILDC
               MOVE PTC-LDC-ITEM TO QUE-ITEM
               MOVE QUE-PUT      TO QUE-CMND
               PERFORM GNS-PRO-QUE.
      *PTC-FIN-MAN

      *SMC-INI 23-11-1993, CUANDO SE INGRESA UNA LDC, LA CLF
      *                    QUEDA EN ESTADO DE INGRESADA.

           MOVE LDC-CAI-ICLF IN LDC-FLD TO CLF-CAI-ICLF IN CLF.
           MOVE LDC-IIC-ICLF IN LDC-FLD TO CLF-IIC-ICLF IN CLF.
           MOVE FIO-GET-KEY-UPD TO FIO-CMND.
           PERFORM LDC-FIO-CLF.
           IF NOT FIO-STAT-OKS
              MOVE FIO-MENS TO FRM-MENS
              GO TO FIN-CMN-ING.

           MOVE 'I' TO CLF-MSC-STAT IN CLF.
           MOVE FIO-MOD TO FIO-CMND.
           PERFORM LDC-FIO-CLF.
           IF NOT FIO-STAT-OKS
              MOVE FIO-MENS TO FRM-MENS
              GO TO FIN-CMN-ING.

      *SMC-FIN 23-11-1993

      *FLB CST  10-JUN-1994 CAMBIADO AL ELIMINAR 'M' DE VCOC
           IF ARC-COD-VCOC IN LDC-FLD > SPACES OR
              ARC-COD-TOOC IN LDC-FLD > SPACES OR
              ARC-COD-AOOC IN LDC-FLD > SPACES OR
              ARC-IIC-IOPC IN LDC-FLD > ZEROES
               PERFORM PUT-ARC
               IF NOT FIO-STAT-OKS
                   MOVE FIO-MENS TO FRM-MENS
                   GO TO FIN-CMN-ING.

           IF LDC-IND-MGAR IN LDC-FLD = 'U' OR 'E'
               PERFORM PUT-ARG
               IF NOT FIO-STAT-OKS
                   MOVE FIO-MENS TO FRM-MENS
                   GO TO FIN-CMN-ING.

      *ALD-BNL ELIMINADO 22/JUL/92
      *<<<< PGM_BMS
      *FLB 22/JUL/92
               PERFORM ENG-PGM.
               IF SCR-IND-COL = 'C'
                   PERFORM EGR-FPEN-CIC
               ELSE
                   IF WSS-IENG = 'S'
                       PERFORM EGR-FPEN-CIC.
      *>>>>
      *>>>>
       FIN-CMN-ING.
           EXIT.

       CMN-ACC SECTION.
       INI-CMN-ACC.
           IF SCR-STAT = SCR-STAT-ABT OR SCR-VFLD = SCR-VFLD-NOT
               MOVE 'ACCION NO REALIZADA' TO FRM-MENS
               GO TO FIN-CMN-ACC.
           PERFORM KEY-ALL-LDC.
           MOVE FIO-GET-KEY-UPD TO FIO-CMND.
           PERFORM LDC-FIO-LDC.
           IF NOT FIO-STAT-OKS
               GO TO FIN-CMN-ACC.
           PERFORM RET-ALL-LDC.
       FIN-CMN-ACC.
           EXIT.

       CMN-ELI SECTION.
       INI-CMN-ELI.
           PERFORM KEY-ALL-LDC.
           MOVE FIO-GET-KEY-UPD TO FIO-CMND.
           PERFORM LDC-FIO-LDC.
           IF NOT FIO-STAT-OKS
               GO TO FIN-CMN-ELI.
           MOVE FIO-DEL TO FIO-CMND.
           PERFORM LDC-FIO-LDC.
      *<<<< FIN_CMN_ELI
           PERFORM DEL-ARC.
           PERFORM DEL-ARG.
           MOVE LDC-CAI-ICLF IN LDC-FLD TO CLF-CAI-ICLF IN CLF.
           MOVE LDC-IIC-ICLF IN LDC-FLD TO CLF-IIC-ICLF IN CLF.
           MOVE FIO-GET-KEY-UPD TO FIO-CMND.
           PERFORM LDC-FIO-CLF.
           IF NOT FIO-STAT-OKS
               GO TO FIN-CMN-ELI.
           MOVE 'I' TO CLF-MSC-STAT IN CLF.
           MOVE FIO-MOD TO FIO-CMND.
           PERFORM LDC-FIO-CLF.
      *>>>>
       FIN-CMN-ELI.
           EXIT.


       STP-EXIT SECTION.
       INI-STP-EXIT.
           MOVE SCR-PROG TO PGM-PROG.
           MOVE SCR-NTRN TO PGM-NTRN.

           MOVE SCR-PROV TO SCR-PROG.
           MOVE SCR-NTRV TO SCR-NTRN.

           MOVE PGM-PROG TO SCR-PROV
           MOVE PGM-NTRN TO SCR-NTRV.
       FIN-STP-EXIT.
           EXIT.

       SCR-EXIT SECTION.
       INI-SCR-EXIT.
           MOVE 'P'      TO SCR-ICMN.
           MOVE SCR-NTRN TO SYS-NTRN.
           MOVE SCR-VARI TO SYS-CMMA.
           MOVE SCR-TCMA TO SYS-TCMA.
           MOVE SYS-RTRN TO SYS-CMND.
      *PTC-INI
           IF NOT SCR-OFRM-SRV
      *PTC-FIN
           PERFORM GNS-PRO-SYS.
       FIN-SCR-EXIT.
           EXIT.

       SCR-PUTA SECTION.
       INI-SCR-PUTA.
      *PTC-INI
           IF FRM-SUAR EQUAL FRM-SUAR-MAL OR FRM-SUAR-CLR
               MOVE 'S' TO SCR-IERR.
      *PTC-FIN
           MOVE SCR-NMAP TO FRM-NAME.
           MOVE SCR-NLIB TO FRM-NLIB.
           MOVE LDC-FLD TO FRM-DFLD.
           MOVE FRM-PUT-ALL TO FRM-CMND.
           PERFORM GNS-PRO-FRM.
       FIN-SCR-PUTA.
           EXIT.

       SCR-MSSG SECTION.
       INI-SCR-MSSG.
           IF FRM-MEN1 NOT > SPACES
               MOVE SPACES TO FRM-MEN1.
           IF FRM-MEN2 NOT > SPACES
               MOVE SPACES TO FRM-MEN2.
           MOVE FRM-MENS TO LDC-GLS-MENS.
       FIN-SCR-MSSG.
           EXIT.

       SCR-GFLD SECTION.
       INI-SCR-GFLD.
           MOVE SCR-NMAP TO FRM-NAME.
           MOVE SCR-NLIB TO FRM-NLIB.
           MOVE FRM-GET-ALL TO FRM-CMND.
           PERFORM GNS-PRO-FRM.
           MOVE SPACES TO FRM-MENS.
           IF NOT ( FRM-FFLD = FRM-FFLD-RET  OR FRM-FFLD-PF10 OR
                               FRM-FFLD-PF12 OR FRM-FFLD-PF3 )
               MOVE 'PFSINV    ' TO MSG-COD-MENS
               MOVE 'GNS' TO MSG-COD-SIST
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS
               PERFORM FST-FLD-LDC
               PERFORM SCR-MSSG
               PERFORM SCR-PUTA
               PERFORM SCR-EXIT.
           MOVE FRM-DFLD TO LDC-FLD.
           IF FRM-STAT-ABT
               GO TO FIN-SCR-GFLD.
           MOVE FRM-SUAR-OKS TO FRM-SUAR.
           PERFORM VAL-NUM-KEY-LDC.
           IF FRM-SUAR EQUAL FRM-SUAR-MAL OR FRM-SUAR-CLR
      *PTC-INI
               MOVE 'S' TO SCR-IERR
      *PTC-FIN
               PERFORM SCR-MSSG
               PERFORM EDT-KEY-LDC
               PERFORM SCR-PUTA
               PERFORM SCR-EXIT.
           PERFORM VAL-NUM-FLD-LDC.
           IF FRM-SUAR EQUAL FRM-SUAR-MAL OR FRM-SUAR-CLR
      *PTC-INI
               MOVE 'S' TO SCR-IERR
      *PTC-FIN
               PERFORM SCR-MSSG
               PERFORM EDT-KEY-LDC
               PERFORM EDT-FLD-LDC
               PERFORM SCR-PUTA
               PERFORM SCR-EXIT.
           PERFORM VAL-MKY-LDC.
           IF FRM-SUAR EQUAL FRM-SUAR-MAL OR FRM-SUAR-CLR
      *PTC-INI
               MOVE 'S' TO SCR-IERR
      *PTC-FIN
               GO TO ERR-SCR-GFLD.
           PERFORM VAL-FLD-LDC.
           IF FRM-SUAR EQUAL FRM-SUAR-MAL OR FRM-SUAR-CLR
               GO TO ERR-SCR-GFLD.
           PERFORM VAL-CON-FLD-LDC.
           IF NOT ( FRM-SUAR EQUAL FRM-SUAR-MAL OR FRM-SUAR-CLR )
               GO TO FIN-SCR-GFLD.
           IF FRM-UCUR NOT > SPACES
               PERFORM FST-FLD-LDC.
       ERR-SCR-GFLD.
      *PTC-INI
           MOVE 'S' TO SCR-IERR.
      *PTC-FIN
           PERFORM SCR-MSSG.
           PERFORM EDT-KEY-LDC.
           PERFORM EDT-FLD-LDC.
           PERFORM SCR-PUTA.
           PERFORM SCR-EXIT.
       FIN-SCR-GFLD.
      *<<<< PGM_BMS AND (FIN_SCR_GIKY OR FIN_SCR_GCNF OR FIN_SCR_GFLD)
           IF FRM-FFLD = FRM-FFLD-PF3 AND
              SCR-IND-ENG IN SCR-VEC-ENG(SCR-IPRO) = 'S' AND
              SCR-IND-COL = 'C'
               PERFORM EGR-FTER-CIC.
      *>>>>
           MOVE SCR-STAT-MOD TO SCR-STAT.

       GET-ACC SECTION.
       INI-GET-ACC.
           MOVE SCR-NMAP TO FRM-NAME.
           MOVE SCR-NLIB TO FRM-NLIB.
           MOVE FRM-GET-ALL TO FRM-CMND.
           PERFORM GNS-PRO-FRM.
           IF NOT ( FRM-FFLD = FRM-FFLD-RET  OR FRM-FFLD-PF10 OR
                               FRM-FFLD-PF12 OR FRM-FFLD-PF3 )
               MOVE 'PFSINV    ' TO MSG-COD-MENS
               MOVE 'GNS' TO MSG-COD-SIST
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO LDC-GLS-MEN2
               MOVE SCR-PRMT     TO LDC-GLS-MEN1
               PERFORM FST-MSG
               PERFORM SCR-PUTA
               PERFORM SCR-EXIT.
           MOVE FRM-DFLD TO LDC-FLD.
           IF NOT ( ( FRM-FFLD = FRM-FFLD-PF12 OR FRM-FFLD-PF3 ) OR
                      SCR-CONF > SPACES )
               PERFORM VAL-NUM-KEY-LDC
               PERFORM VAL-NUM-FLD-LDC.
       FIN-GET-ACC.
           MOVE SCR-STAT-SON TO SCR-STAT.

       GET-CON SECTION.
       INI-GET-CON.
           MOVE SCR-NMAP TO FRM-NAME.
           MOVE SCR-NLIB TO FRM-NLIB.
           MOVE FRM-GET-ALL TO FRM-CMND.
           PERFORM GNS-PRO-FRM.
           IF NOT ( FRM-FFLD = FRM-FFLD-RET  OR FRM-FFLD-PF10 OR
                               FRM-FFLD-PF12 OR FRM-FFLD-PF3 )
      *<<<< PFS_GET_CON
           IF NOT ( FRM-FFLD = FRM-FFLD-PF5 )
           IF NOT ( FRM-FFLD = FRM-FFLD-PF6 )
      *>>>>
               MOVE 'PFSINV    ' TO MSG-COD-MENS
               MOVE 'GNS' TO MSG-COD-SIST
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO LDC-GLS-MEN2
               MOVE SCR-PRMT     TO LDC-GLS-MEN1
               PERFORM FST-MSG
               PERFORM SCR-PUTA
               PERFORM SCR-EXIT.
           MOVE FRM-DFLD TO LDC-FLD.
       FIN-GET-CON.
           MOVE SCR-STAT-CON TO SCR-STAT.

       CLR-MSG SECTION.
       INI-CLR-MSG.
           MOVE SPACES TO LDC-GLS-MENS.
       FIN-CLR-MSG.
           EXIT.

       HBL-IKY SECTION.
       INI-HBL-IKY.
      *<<<<
           GO TO NXT-HBL-IKY.
      *>>>>
      *PTC-INI
           IF NOT SCR-OFRM-SRV
      *PTC-FIN
           IF SCR-DESDE-CMN
               MOVE LDC-GLS-MENS TO FRM-MENS
               MOVE LOW-VALUES TO LDC-FLD
      * FLB  7-NOV-1994
               PERFORM CLR-KEY-LDC

               IF FRM-MENS < SPACES
                   MOVE LOW-VALUES TO LDC-GLS-MENS
               ELSE
                   MOVE FRM-MENS TO LDC-GLS-MENS.
           PERFORM PRO-FLD-LDC.
           PERFORM PRO-MKY-LDC.
           PERFORM UNP-IKY-LDC.
           PERFORM FST-KEY-LDC.
      *<<<<
       NXT-HBL-IKY.
      *PTC-INI
           IF NOT SCR-OFRM-SRV
      *PTC-FIN
           IF SCR-DESDE-CMN
               MOVE LDC-GLS-MENS TO FRM-MENS
               MOVE LOW-VALUES TO LDC-FLD
      * FLB  7-NOV-1994
               PERFORM CLR-KEY-LDC

               IF FRM-MENS < SPACES
                   MOVE LOW-VALUES TO LDC-GLS-MENS
               ELSE
                   MOVE FRM-MENS TO LDC-GLS-MENS.
           MOVE FRM-CPSF-AEY TO FRM-CPIM-AEY.
           PERFORM PRO-FLD-LDC.
           PERFORM PRO-MKY-LDC.
           MOVE '1' TO FRM-CPIM-AEY.
           PERFORM UNP-IKY-LDC.
           PERFORM FST-KEY-LDC.
      *>>>>
       FIN-HBL-IKY.
           EXIT.

       HBL-KEY SECTION.
       INI-HBL-KEY.
      *PTC-INI
           IF NOT SCR-OFRM-SRV
      *PTC-FIN
           IF SCR-DESDE-CMN
               MOVE LDC-GLS-MENS TO FRM-MENS
               MOVE LOW-VALUES TO LDC-FLD
               IF FRM-MENS < SPACES
                   MOVE LOW-VALUES TO LDC-GLS-MENS
               ELSE
                   MOVE FRM-MENS TO LDC-GLS-MENS.
           MOVE FRM-CPSF-AEY TO FRM-CPIM-AEY.
           PERFORM PRO-FLD-LDC.
           MOVE '1' TO FRM-CPIM-AEY.
           PERFORM UNP-KEY-LDC.
           PERFORM FST-KEY-LDC.
       FIN-HBL-KEY.
           EXIT.

       HBL-FLD SECTION.
       INI-HBL-FLD.
           PERFORM UNP-MKY-LDC.
           PERFORM UNP-FLD-LDC.
           PERFORM FST-FLD-LDC.
       FIN-HBL-FLD.
           EXIT.

       FST-MSG SECTION.
       INI-FST-MSG.
           MOVE -1 TO LDC-GLS-MENS-LEN.
       FIN-FST-MSG.
           EXIT.

       PRO-ALL SECTION.
       INI-PRO-ALL.
           PERFORM PRO-KEY-LDC.
           PERFORM PRO-FLD-LDC.
           PERFORM FST-MSG.
       FIN-PRO-ALL.
           EXIT.

       SCR-TRL SECTION.
       INI-SCR-TRL.
      * PTC-INI
           IF SCR-STAT NOT = SCR-STPP
               MOVE FRM-SUAR-MAL TO FRM-SUAR.
      * PTC-FIN
           IF FRM-MEN1 NOT > SPACES
               MOVE SCR-PRMT TO FRM-MEN1.
           IF SCR-STAT = SCR-STAT-MOD
               PERFORM HBL-FLD
               PERFORM SCR-MSSG
               PERFORM EDT-KEY-LDC
               PERFORM EDT-FLD-LDC
               PERFORM SCR-PUTA
               MOVE SCR-INST-GFL TO SCR-INST
               PERFORM SCR-EXIT.
           IF SCR-STAT = SCR-STAT-SON
               PERFORM PRO-ALL
               PERFORM SCR-MSSG
               PERFORM EDT-KEY-LDC
               PERFORM EDT-FLD-LDC
               PERFORM SCR-PUTA
               MOVE SCR-INST-GCS TO SCR-INST
               PERFORM SCR-EXIT.
      *ASUME SCR-STAT-CON.
           MOVE SCR-STAT-CON TO SCR-STAT.
      *    MOVE FRM-CPSF-AEY TO FRM-CPIM-AEY.
           PERFORM PRO-ALL.
           PERFORM SCR-MSSG.
           PERFORM EDT-KEY-LDC.
           PERFORM EDT-FLD-LDC.
           PERFORM SCR-PUTA.
           MOVE SCR-INST-GAB TO SCR-INST.
           PERFORM SCR-EXIT.
       FIN-SCR-TRL.
           EXIT.

       DESSCRTRL SECTION.
       INI-DESSCRTRL.
           IF SCR-INST = SCR-INST-GCF
                  PERFORM SCR-GCNF
                  GO TO FIN-DESSCRTRL.
           MOVE SCR-VFLD-NOT TO SCR-VFLD.
           MOVE FRM-FFLD TO SCR-FFLD.
           IF SCR-STAT = SCR-STAT-ABT OR SCR-STAT-CON
                  GO TO FIN-DESSCRTRL.
           IF SCR-FFLD-RET OR SCR-FFLD-PF10
                  MOVE SCR-VFLD-YES TO SCR-VFLD
                  PERFORM PRO-CONF.
       FIN-DESSCRTRL.
           IF SCR-FFLD-PF10 OR SCR-FFLD-PF3
                 MOVE SCR-INST-HCM TO SCR-INST
           ELSE
                 MOVE SCR-INST-HKY TO SCR-INST.
       EXT-DESSCRTRL.
           EXIT.

       PRO-CONF SECTION.
       INI-PRO-CONF.
      *PTC-INI
           IF SCR-OFRM-SRV AND
              SCR-CONF NOT > SPACES
                MOVE SPACES TO FRM-MENS.
      *PTC-FIN
           IF FRM-MENS NOT > SPACES
               IF SCR-CONF NOT > SPACES
                   GO TO FIN-PRO-CONF
               ELSE
                   MOVE SCR-CONF TO FRM-MENS
           ELSE
               IF FRM-MEN1 NOT > SPACES
                   MOVE SCR-CONF TO FRM-MEN1.
           PERFORM PRO-KEY-LDC.
           PERFORM PRO-FLD-LDC.
           PERFORM FST-MSG.
           PERFORM SCR-MSSG.
           IF SCR-STAT = SCR-STAT-MOD
               PERFORM EDT-KEY-LDC
               PERFORM EDT-FLD-LDC.
           PERFORM SCR-PUTA.
           MOVE SCR-INST-GCF TO SCR-INST.
           PERFORM SCR-EXIT.
       FIN-PRO-CONF.
           EXIT.

       SCR-GCNF SECTION.
       INI-SCR-GCNF.
           MOVE SCR-NMAP TO FRM-NAME.
           MOVE SCR-NLIB TO FRM-NLIB.
           MOVE FRM-GET-ALL TO FRM-CMND.
           PERFORM GNS-PRO-FRM.
           IF NOT ( FRM-FFLD = FRM-FFLD-RET  OR FRM-FFLD-PF10 OR
                               FRM-FFLD-PF12 OR FRM-FFLD-PF3  OR
                               FRM-FFLD-PF4 )
               MOVE 'PFSINV    ' TO MSG-COD-MENS
               MOVE 'GNS' TO MSG-COD-SIST
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO LDC-GLS-MEN2
               MOVE SCR-CONF     TO LDC-GLS-MEN1
               PERFORM FST-MSG
               PERFORM SCR-PUTA
               PERFORM SCR-EXIT.
           MOVE FRM-DFLD TO LDC-FLD.
           MOVE FRM-FFLD TO SCR-FFLD.
           IF FRM-FFLD = FRM-FFLD-PF3
               MOVE SCR-VFLD-NOT TO SCR-VFLD
           ELSE
           IF FRM-FFLD = FRM-FFLD-RET OR FRM-FFLD-PF10 OR FRM-FFLD-PF4
               MOVE SCR-VFLD-YES TO SCR-VFLD
               PERFORM VAL-NUM-KEY-LDC
               PERFORM VAL-NUM-FLD-LDC
           ELSE
           IF FRM-FFLD = FRM-FFLD-PF12
               MOVE SCR-STPP TO SCR-STAT
               IF SCR-STAT = SCR-STAT-MOD
                   PERFORM VAL-NUM-KEY-LDC
                   PERFORM VAL-NUM-FLD-LDC
                   PERFORM SCR-TRL
               ELSE
                   MOVE SCR-VFLD-NOT TO SCR-VFLD.
      *<<<< PGM_BMS AND (FIN_SCR_GIKY OR FIN_SCR_GCNF OR FIN_SCR_GFLD)
           IF FRM-FFLD = FRM-FFLD-PF3 AND
              SCR-IND-ENG IN SCR-VEC-ENG(SCR-IPRO) = 'S' AND
              SCR-IND-COL = 'C'
               PERFORM EGR-FTER-CIC.
      *>>>>
       FIN-SCR-GCNF.
           EXIT.

      * PGM-EBR-ALL SECTION.
      * INI-PGM-EBR-ALL.
      *     MOVE 'GNS' TO FIO-SIST.
      *     MOVE FIO-EBR-ALL TO FIO-CMND.
      *     PERFORM GNS-FIO-TAB.
      * FIN-PGM-EBR-ALL.
      *     EXIT.

       RET-STT-LDC SECTION.
       INI-RET-STT-LDC.
           IF SCR-CCPP = 'ING'
               MOVE 'I' TO LDC-MSC-TACC IN LDC
               MOVE 'I' TO LDC-MSC-STAT IN LDC
           ELSE
           IF SCR-CCPP = 'MOD'
               MOVE 'M' TO LDC-MSC-TACC IN LDC
               MOVE 'M' TO LDC-MSC-STAT IN LDC.
       FIN-RET-STT-LDC.
           EXIT.

       RET-HDR-LDC SECTION.
       INI-RET-HDR-LDC.
           PERFORM GET-FHOY.
      *    Fecha Transaccion
           MOVE HOY-FHOY TO LDC-FEC-FTRN IN LDC.
      *    Hora Transaccion
           MOVE HOY-HHOY TO LDC-HRA-HRTR IN LDC.
      *    Codigo Origen transaccion
      *<<<< NOT PGM_VMS
           MOVE SCR-OTRN TO LDC-COD-OTRN IN LDC.
      *    Autor Transaccion
           MOVE SCR-USER TO LDC-COD-ATRN IN LDC.
      *>>>>
       FIN-RET-HDR-LDC.
           EXIT.

       COPY LDCBULDC.
       COPY GNSBVNUM.
       COPY LDCBFLDC.
       COPY GNSBFMSG.
       COPY GNSBGSYS.
       COPY GNSBGDTC.
      *PTC-INI
      *PTC-SUB
      * ISP  10-MAY-2001 13:46:35 
      * COPY GNSBGFRM.
       COPY GNSBG3CF.
      *PTC-FIN
       COPY GNSBGMSG.
       COPY GNSBEKEY.
       COPY GNSBIABT.
       COPY GNSBBTAB.
       COPY GNSBVCOD.
       COPY GNSBVTAB.
       COPY GNSBFTAB.
       COPY GNSBBMSC.
       COPY GNSBVIND.
       COPY GNSBVMSC.
       COPY GNSBFMSC.
       COPY GNSBVIDC.
       COPY GNSBPVRF.
       COPY GNSBEGLS.
       COPY GNSBGFEC.
       COPY GNSBGHOY.
      *PTC-INI
       COPY GNSBGQUE.
       COPY GNSBGTSK.
      *PTC-FIN

      *<<<< ( EOF ) AND ( NOT PGM_VSI )
       COPY GNSBGVSM.
       COPY GNSBHVSM.
      *>>>>
      *<<<< EOF
       COPY GNSBPFEC.
      *<<<< NOT PGM_DB2
       COPY LDCBFCLF.
       COPY LDCBFARC.
       COPY LDCBFARG.
       COPY LDCBFRDC.

      *<<<< PGM_PU
       COPY DEUBFFIA.
       COPY COLBFOPC.
      *>>>>
      *>>>>

       COPY BGLBFGDG.

       COPY BGLBFTAG.

       COPY SGCBFDBC.

       COPY GNSBFCIC.
      *<<<< NOT PGM_PQ
       COPY GNSBGCIC.
      *FLB CST  14-OCT-1993
       COPY SGCBFOPE.
       COPY SGCBFRCO.

      *FLB CST  10-OCT-1994 VALIDA TIPO DE LINEA
       COPY LDCBVTLC.
      *FLB CST  13-MAR-1995 VALIDA MONEDA LDC VS. CLF
       COPY LDCBVMLC.
      *>>>>

       COPY GNSBGCPT.
       COPY GNSBGTSK.
      *<<<< PGM_PU
       PUT-ARC SECTION.
       INI-PUT-ARC.
           MOVE '00' TO FIO-STAT.
           MOVE LDC-CAI-ICLF IN LDC-FLD TO ARC-CAI-ICLF IN WSS-VARI.
           MOVE LDC-IIC-ICLF IN LDC-FLD TO ARC-IIC-ICLF IN WSS-VARI.
           MOVE LDC-NUM-ILDC IN LDC-FLD TO ARC-NUM-ILDC IN WSS-VARI.
           MOVE 9                       TO ARC-NUM-IARC IN WSS-VARI.
           MOVE ARC-KEY-IARC IN WSS-VARI TO ARC-KEY-IARC IN ARC.

           MOVE FIO-GET-LEQ TO FIO-CMND.
           PERFORM LDC-FIO-ARC.
           IF NOT ( FIO-STAT-OKS AND
                    ARC-KEY-ILDC IN WSS-VARI = ARC-KEY-ILDC IN ARC )
      *INI-JGM 29-07-1998.
              PERFORM GET-FHOY
              MOVE HOY-FHOY TO ARC-FEC-FTRN IN ARC
              MOVE HOY-HHOY TO ARC-HRA-HRTR IN ARC
              MOVE SCR-OTRN TO ARC-COD-OTRN IN ARC
              MOVE SCR-USER TO ARC-COD-ATRN IN ARC
              MOVE 'I'      TO ARC-MSC-TACC IN ARC
              MOVE 'I'      TO ARC-MSC-STAT IN ARC
      *FIN-JGM 29-07-1998.
               MOVE ZEROES TO ARC-NUM-IARC IN ARC.

           IF FIO-STAT-OKS
               MOVE FIO-END-BRW TO FIO-CMND
               PERFORM LDC-FIO-ARC.

           IF ARC-NUM-IARC IN ARC = 9
              GO TO FIN-PUT-ARC.

       GEN-ARC.
           ADD 1                        TO ARC-NUM-IARC IN ARC.
           MOVE LDC-CAI-ICLF IN LDC-FLD TO ARC-CAI-ICLF IN ARC.
           MOVE LDC-IIC-ICLF IN LDC-FLD TO ARC-IIC-ICLF IN ARC.
           MOVE LDC-NUM-ILDC IN LDC-FLD TO ARC-NUM-ILDC IN ARC.
           MOVE ARC-COD-VCOC IN LDC-FLD TO ARC-COD-VCOC IN ARC.
           MOVE ARC-COD-TOOC IN LDC-FLD TO ARC-COD-TOOC IN ARC.
           MOVE ARC-COD-AOOC IN LDC-FLD TO ARC-COD-AOOC IN ARC.
           MOVE ARC-CAI-IOPC IN LDC-FLD TO ARC-CAI-IOPC IN ARC.
           MOVE ARC-IIC-IOPC IN LDC-FLD TO ARC-IIC-IOPC IN ARC.
           MOVE SPACES                  TO ARC-GLS-DISP IN ARC.

           MOVE FIO-PUT TO FIO-CMND.
           PERFORM LDC-FIO-ARC.
           IF NOT FIO-STAT-OKS
              MOVE FIO-MENS TO FRM-MENS.
       FIN-PUT-ARC.
           EXIT.

       PUT-ARG SECTION.
       INI-PUT-ARG.
           MOVE '00' TO FIO-STAT.
           MOVE LDC-CAI-ICLF IN LDC-FLD  TO ARG-CAI-ICLF IN WSS-VARI.
           MOVE LDC-IIC-ICLF IN LDC-FLD  TO ARG-IIC-ICLF IN WSS-VARI.
           MOVE LDC-NUM-ILDC IN LDC-FLD  TO ARG-NUM-ILDC IN WSS-VARI.
           MOVE 9                        TO ARG-NUM-IARG IN WSS-VARI.
           MOVE ARG-KEY-IARG IN WSS-VARI TO ARG-KEY-IARG IN ARG.

           MOVE FIO-GET-LEQ TO FIO-CMND.
           PERFORM LDC-FIO-ARG.
           IF NOT ( FIO-STAT-OKS AND
                    ARG-KEY-ILDC IN WSS-VARI = ARG-KEY-ILDC IN ARG )
      *INI-JGM 29-07-1998.
              PERFORM GET-FHOY
              MOVE HOY-FHOY TO ARG-FEC-FTRN IN ARG
              MOVE HOY-HHOY TO ARG-HRA-HRTR IN ARG
              MOVE SCR-OTRN TO ARG-COD-OTRN IN ARG
              MOVE SCR-USER TO ARG-COD-ATRN IN ARG
              MOVE 'I'      TO ARG-MSC-TACC IN ARG
              MOVE 'I'      TO ARG-MSC-STAT IN ARG
      *FIN-JGM 29-07-1998.
               MOVE ZEROES TO ARG-NUM-IARG IN ARG.

           IF FIO-STAT-OKS
               MOVE FIO-END-BRW TO FIO-CMND
               PERFORM LDC-FIO-ARG.

           IF ARG-NUM-IARG IN ARG = 9
              GO TO FIN-PUT-ARG.

       GEN-ARG.
           ADD 1                        TO ARG-NUM-IARG IN ARG.
           MOVE LDC-CAI-ICLF IN LDC-FLD TO ARG-CAI-ICLF IN ARG.
           MOVE LDC-IIC-ICLF IN LDC-FLD TO ARG-IIC-ICLF IN ARG.
           MOVE LDC-NUM-ILDC IN LDC-FLD TO ARG-NUM-ILDC IN ARG.
           MOVE ARG-COD-TOGA IN LDC-FLD TO ARG-COD-TOGA IN ARG.
           MOVE ARG-COD-AOGA IN LDC-FLD TO ARG-COD-AOGA IN ARG.
           MOVE ARG-NUM-PORG IN LDC-FLD TO ARG-NUM-PORG IN ARG.
           MOVE ARG-CAI-IGAR IN LDC-FLD TO ARG-CAI-IGAR IN ARG.
           MOVE ARG-IIC-IGAR IN LDC-FLD TO ARG-IIC-IGAR IN ARG.
           MOVE SPACES                  TO ARG-GLS-DISP IN ARG.

           MOVE FIO-PUT TO FIO-CMND.
           PERFORM LDC-FIO-ARG.
           IF NOT FIO-STAT-OKS
              MOVE FIO-MENS TO FRM-MENS.
       FIN-PUT-ARG.
           EXIT.

       DEL-ARC SECTION.
       INI-DEL-ARC.
           MOVE LDC-CAI-ICLF IN LDC-FLD  TO ARC-CAI-ICLF IN WSS-VARI.
           MOVE LDC-IIC-ICLF IN LDC-FLD  TO ARC-IIC-ICLF IN WSS-VARI.
           MOVE LDC-NUM-ILDC IN LDC-FLD  TO ARC-NUM-ILDC IN WSS-VARI.
           MOVE ZEROES                   TO ARC-NUM-IARC IN ARC.
           MOVE ARC-KEY-IARC IN WSS-VARI TO ARC-KEY-IARC IN ARC.
           MOVE FIO-GET-NLS TO FIO-CMND.
       LUP-DEL-ARC.
           PERFORM LDC-FIO-ARC.
           IF FIO-STAT-OKS
               MOVE FIO-END-BRW TO FIO-CMND
               PERFORM LDC-FIO-ARC.

           IF NOT ( FIO-STAT-OKS AND
              ARC-KEY-ILDC IN WSS-VARI = ARC-KEY-ILDC IN ARC )
               GO TO FIN-DEL-ARC.

           MOVE FIO-GET-KEY-UPD TO FIO-CMND.
           PERFORM LDC-FIO-ARC.
           IF NOT FIO-STAT-OKS
              GO TO FIN-DEL-ARC.

           MOVE FIO-DEL TO FIO-CMND.
           PERFORM LDC-FIO-ARC.
           IF NOT FIO-STAT-OKS
               MOVE 'DEU' TO MSG-COD-SIST
               MOVE 'ARC    DEL' TO MSG-COD-MENS
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS
               GO TO FIN-DEL-ARC.

           MOVE ARC-KEY-ILDC IN WSS-VARI TO ARC-KEY-ILDC IN ARC.
      *<<<< NOT PGM_DB2
           MOVE FIO-GET-NLS TO FIO-CMND.
      *>>>>
           GO TO LUP-DEL-ARC.
       FIN-DEL-ARC.
           EXIT.

       DEL-ARG SECTION.
       INI-DEL-ARG.
           MOVE LDC-CAI-ICLF IN LDC-FLD  TO ARG-CAI-ICLF IN WSS-VARI.
           MOVE LDC-IIC-ICLF IN LDC-FLD  TO ARG-IIC-ICLF IN WSS-VARI.
           MOVE LDC-NUM-ILDC IN LDC-FLD  TO ARG-NUM-ILDC IN WSS-VARI.
           MOVE ZEROS                    TO ARG-NUM-IARG IN WSS-VARI.
           MOVE ARG-KEY-IARG IN WSS-VARI TO ARG-KEY-IARG IN ARG.
           MOVE FIO-GET-NLS TO FIO-CMND.
       LUP-DEL-ARG.
           PERFORM LDC-FIO-ARG.
           IF FIO-STAT-OKS
               MOVE FIO-END-BRW TO FIO-CMND
               PERFORM LDC-FIO-ARG.

           IF NOT ( FIO-STAT-OKS AND
              ARG-KEY-ILDC IN WSS-VARI = ARG-KEY-ILDC IN ARG )
               GO TO FIN-DEL-ARG.

           MOVE FIO-GET-KEY-UPD TO FIO-CMND.
           PERFORM LDC-FIO-ARG.
           IF NOT FIO-STAT-OKS
              GO TO FIN-DEL-ARG.

           MOVE FIO-DEL TO FIO-CMND.
           PERFORM LDC-FIO-ARG.
           IF NOT FIO-STAT-OKS
               MOVE 'DEU' TO MSG-COD-SIST
               MOVE 'ARG    DEL' TO MSG-COD-MENS
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS
               GO TO FIN-DEL-ARG.

           MOVE ARG-KEY-ILDC IN WSS-VARI TO ARG-KEY-ILDC IN ARG.
      *<<<< NOT PGM_DB2
           MOVE FIO-GET-NLS TO FIO-CMND.
      *>>>>
           GO TO LUP-DEL-ARG.
       FIN-DEL-ARG.
           EXIT.

      *FLB CST  22-FEB-1995
       COPY TABBFCAM.
      *>>>>
      *<<<< EOF AND PGM_BMS
      *  CODIGO ADICIONAL PARA ENGANCHE PROGRAMAS

       EGR-FPEN-CIC SECTION.
       INI-EGR-FPEN-CIC.
           PERFORM CRG-TBL-ENG.
           ADD 1 TO SCR-IPRO.
           IF SCR-IPRO > WSS-TOT-IIDX
                  PERFORM EGR-FTER-CIC
                  GO TO FIN-EGR-FPEN-CIC.
           IF SCR-IND-ENG IN SCR-VEC-ENG(SCR-IPRO) = SPACES
               GO TO INI-EGR-FPEN-CIC.
           MOVE WSS-INST-FPEN-CIC TO SCR-INST-EXT.
           MOVE WSS-PROG(SCR-IPRO) TO SYS-PROG.
           MOVE SCR-VARI TO SYS-CMMA.
      *<<<< PGM_PQ OR (PGM_PU AND NOT PGM_DB2)
           MOVE SCR-TCMA TO SYS-TCMA.
           MOVE SYS-XCTL TO SYS-CMND.
      *<<<< ISP-INI  24-JAN-1996 11:35:48
           IF SCR-OFRM-SRV
               MOVE WSS-IDX-ILDC TO SCR-IPRO
           ELSE
      *<<<< ISP-FIN  24-JAN-1996 11:35:48
           PERFORM GNS-PRO-SYS.
      *>>>>
       FIN-EGR-FPEN-CIC.
           EXIT.

       EGR-FTER-CIC SECTION.
       INI-EGR-FTER-CIC.
           PERFORM CRG-TBL-ENG.
           MOVE WSS-IDX-ICLF TO SCR-IPRO.
           MOVE WSS-INST-FTER-CIC TO SCR-INST-EXT.
           MOVE WSS-PROG(SCR-IPRO) TO SYS-PROG.
           MOVE SCR-VARI TO SYS-CMMA.
      *<<<< PGM_PQ OR (PGM_PU AND NOT PGM_DB2)
           MOVE SCR-TCMA TO SYS-TCMA.
           MOVE SYS-XCTL TO SYS-CMND.
      *<<<< ISP-INI  24-JAN-1996 11:35:48
           IF SCR-OFRM-SRV
               MOVE WSS-IDX-ILDC TO SCR-IPRO
           ELSE
      *<<<< ISP-FIN  24-JAN-1996 11:35:48
           PERFORM GNS-PRO-SYS.
      *>>>>
       FIN-EGR-FTER-CIC.
           EXIT.

       SCR-INIT SECTION.
       INI-SCR-INIT.
           MOVE 3  TO FRM-PLIN.
           MOVE 19 TO FRM-NLIN.
           MOVE FRM-CLR-FRM TO FRM-CMND.
           PERFORM GNS-PRO-FRM.
           MOVE FRM-SINI-DBNF TO FRM-SINI.
           MOVE SCR-NMAP TO FRM-NAME.
           MOVE SCR-NLIB TO FRM-NLIB.
           MOVE LDC-FLD TO FRM-DFLD.
           MOVE FRM-INI TO FRM-CMND.
           PERFORM GNS-PRO-FRM.
       FIN-SCR-INIT.
           EXIT.

      *<<<< PGM_PU
       ENG-PGM SECTION.
       INI-ENG-PGM.

           MOVE WSS-IDX-ILDC TO SCR-IPRO.
           MOVE LDC-CAI-ICLF IN LDC-FLD TO SCR-CAI-ICLF.
           MOVE LDC-IIC-ICLF IN LDC-FLD TO SCR-IIC-ICLF.
           MOVE LDC-NUM-ILDC IN LDC-FLD TO SCR-NUM-ILDC.

      * ENGANCHE A ARC
      *AFRI-INI-SEP-2005
           MOVE 'DEU' TO FIO-SIST.
           MOVE 'TLC'       TO TAB-COD-TTAB IN TAB.
           MOVE LDC-COD-TIPO IN LDC TO TAB-COD-CTAB IN TAB.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM GNS-FIO-TAB.
      *AFRI-INI/CHC/MAY-2009/CANAL DE VENTAS
           MOVE 'DEU'                 TO TAB-COD-SIST FIO-SIST
           MOVE 'TLL'                 TO TAB-COD-TTAB IN TAB
           MOVE TAB-CIC-CTAB IN TAB   TO TAB-COD-CTAB IN TAB
           MOVE FIO-GET-KEY TO FIO-CMND
           PERFORM GNS-FIO-TAB
           IF TAB-IND-VIGE IN TAB NOT = 'S'
               MOVE 'DEU' TO MSG-COD-SIST
               MOVE 'TLL    NEX' TO MSG-COD-MENS
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS
               MOVE FRM-SUAR-MAL TO FRM-SUAR
               GO TO FIN-ENG-PGM.
           IF FIO-STAT-OKS
      *    IF TAB-CIC-CTAB IN TAB = 'LEC' OR
      *       TAB-CIC-CTAB IN TAB = 'LEL' OR
      *       TAB-CIC-CTAB IN TAB = 'LCF'
      *AFRI-FIN/CHC/MAY-2009/CANAL DE VENTAS
               MOVE 'S' TO WSS-IENG
               MOVE 'S'    TO SCR-IND-ENG IN SCR-VEC-ENG(WSS-IDX-ILCC)
               MOVE 'S'    TO SCR-IND-FST IN SCR-VEC-FST(WSS-IDX-ILCC)
               MOVE 'S'    TO SCR-IND-ENG IN SCR-VEC-ENG(WSS-IDX-IACG)
               MOVE 'S'    TO SCR-IND-FST IN SCR-VEC-FST(WSS-IDX-IACG)
           ELSE
               MOVE SPACES TO SCR-IND-ENG IN SCR-VEC-ENG(WSS-IDX-ILCC)
               MOVE SPACES TO SCR-IND-FST IN SCR-VEC-FST(WSS-IDX-ILCC)
               MOVE SPACES TO SCR-IND-ENG IN SCR-VEC-ENG(WSS-IDX-IACG)
               MOVE SPACES TO SCR-IND-FST IN SCR-VEC-FST(WSS-IDX-IACG).
      *AFRI-FIN-SEP-2005
      *FLB CST  10-JUN-1994
           IF FRM-IND-MARC IN LDC-FLD = 'S'
               MOVE 'S' TO WSS-IENG
               MOVE 'S'    TO SCR-IND-ENG IN SCR-VEC-ENG(WSS-IDX-IARC)
               MOVE 'S'    TO SCR-IND-FST IN SCR-VEC-FST(WSS-IDX-IARC)
           ELSE
               MOVE SPACES TO SCR-IND-ENG IN SCR-VEC-ENG(WSS-IDX-IARC)
               MOVE SPACES TO SCR-IND-FST IN SCR-VEC-FST(WSS-IDX-IARC).

      * ENGANCHE A ARG
           IF LDC-IND-MGAR IN LDC-FLD = 'Y' OR 'O'
               MOVE 'S' TO WSS-IENG
               MOVE 'S'    TO SCR-IND-ENG IN SCR-VEC-ENG(WSS-IDX-IARG)
               MOVE 'S'    TO SCR-IND-FST IN SCR-VEC-FST(WSS-IDX-IARG)
           ELSE
               MOVE SPACES TO SCR-IND-ENG IN SCR-VEC-ENG(WSS-IDX-IARG)
               MOVE SPACES TO SCR-IND-FST IN SCR-VEC-FST(WSS-IDX-IARG).

           IF LDC-IND-MGAR IN LDC-FLD = 'E' AND
              ARG-IIC-IGAR IN CMA-VARI > ZEROES
               MOVE ARG-CAI-IGAR IN LDC-FLD TO SCR-CAI-IGAR
               MOVE ARG-IIC-IGAR IN LDC-FLD TO SCR-IIC-IGAR
               MOVE ARG-CAI-IGAR IN LDC-FLD TO SCR-CAI-IFIA
               MOVE ARG-IIC-IGAR IN LDC-FLD TO SCR-IIC-IFIA
               IF ARG-COD-TOGA IN LDC-FLD NOT > SPACES
      * ENGANCHE A GAR
                   MOVE 'S' TO WSS-IENG
                   MOVE 'S' TO SCR-IND-ENG IN SCR-VEC-ENG(WSS-IDX-IGDG)
                   MOVE 'S' TO SCR-IND-FST IN SCR-VEC-FST(WSS-IDX-IGDG)
                   MOVE ' ' TO SCR-IND-ENG IN SCR-VEC-ENG(WSS-IDX-IFIA)
                   MOVE ' ' TO SCR-IND-FST IN SCR-VEC-FST(WSS-IDX-IFIA)
               ELSE
      * ENGANCHE A FIA
                  MOVE 'S' TO WSS-IENG
                  MOVE 'S' TO SCR-IND-ENG IN SCR-VEC-ENG(WSS-IDX-IFIA)
                  MOVE 'S' TO SCR-IND-FST IN SCR-VEC-FST(WSS-IDX-IFIA)
                  MOVE ' ' TO SCR-IND-ENG IN SCR-VEC-ENG(WSS-IDX-IGDG)
                  MOVE ' ' TO SCR-IND-FST IN SCR-VEC-FST(WSS-IDX-IGDG)
      *JSS-INI 21-MAR-1994
                  MOVE ARG-COD-TOGA IN LDC-FLD TO SCR-COD-TOGA
                  MOVE DBC-NUM-ICLI IN LDC-FLD TO SCR-NUM-ICLI
                  MOVE DBC-VRF-ICLI IN LDC-FLD TO SCR-VRF-ICLI
                  MOVE DBC-IND-ICLI IN LDC-FLD TO SCR-IND-ICLI
                  MOVE DBC-GLS-ICLI IN LDC-FLD TO SCR-GLS-ICLI
                  COMPUTE  SCR-VAL-CMAX = ARG-NUM-PORG IN LDC-FLD *
                                          LDC-VAL-CMAX IN LDC-FLD / 100
                  MOVE ARC-COD-TOOC IN LDC-FLD TO SCR-COD-TOOC
                  MOVE ARC-COD-AOOC IN LDC-FLD TO SCR-COD-AOOC
      *AMP     23-MAR-1994 DEBE PASAR MONEDA DEL CREDITO
                  MOVE ARC-COD-VCOC IN LDC-FLD TO SCR-COD-VCOC
                  MOVE LDC-CAI-ICLF IN LDC-FLD TO CLF-CAI-ICLF IN CLF
                  MOVE LDC-IIC-ICLF IN LDC-FLD TO CLF-IIC-ICLF IN CLF
                  MOVE FIO-GET-KEY TO FIO-CMND
                  PERFORM LDC-FIO-CLF
                  IF FIO-STAT-OKS
                      MOVE CLF-COD-OFIC IN CLF TO SCR-COD-OFIC
                      MOVE CLF-COD-EJEC IN CLF TO SCR-COD-EJEC
                      MOVE CLF-COD-VCCF IN CLF TO SCR-COD-VCCF
                  ELSE
                      MOVE SPACES TO SCR-COD-OFIC
                      MOVE SPACES TO SCR-COD-EJEC
                      MOVE SPACES TO SCR-COD-VCCF
      *JSS-FIN 21-MAR-1994
           ELSE
               MOVE ' ' TO SCR-IND-ENG IN SCR-VEC-ENG(WSS-IDX-IGDG)
               MOVE ' ' TO SCR-IND-FST IN SCR-VEC-FST(WSS-IDX-IGDG)
               MOVE ' ' TO SCR-IND-ENG IN SCR-VEC-ENG(WSS-IDX-IFIA)
               MOVE ' ' TO SCR-IND-FST IN SCR-VEC-FST(WSS-IDX-IFIA).

           IF SCR-IND-COL = 'C' AND
              SCR-IND-ENG IN SCR-VEC-ENG(WSS-IDX-IARC) NOT > SPACES AND
              SCR-IND-ENG IN SCR-VEC-ENG(WSS-IDX-IARG) NOT > SPACES AND
              SCR-IND-ENG IN SCR-VEC-ENG(WSS-IDX-IGDG) NOT > SPACES AND
              SCR-IND-ENG IN SCR-VEC-ENG(WSS-IDX-ILCC) NOT > SPACES AND
              SCR-IND-ENG IN SCR-VEC-ENG(WSS-IDX-IACG) NOT > SPACES AND
              SCR-IND-ENG IN SCR-VEC-ENG(WSS-IDX-IFIA) NOT > SPACES
               SUBTRACT 1 FROM WSS-IDX-ILDC GIVING SCR-IPRO
               MOVE 'S' TO SCR-IND-ENG IN SCR-VEC-ENG(WSS-IDX-ILDC)
               MOVE 'S' TO SCR-IND-FST IN SCR-VEC-FST(WSS-IDX-ILDC).
       FIN-ENG-PGM.
           EXIT.

       PGM-EBR-ALL SECTION.
       INI-PGM-EBR-ALL.
           MOVE FIO-EBR-ALL TO FIO-CMND.
           PERFORM LDC-FIO-LDC.
       FIN-PGM-EBR-ALL.
           EXIT.


      *ALD-ADA-INI/18072001
       ACT-CAMPO-CACT SECTION.
       INI-ACT-CAMPO-CACT.

           MOVE LDC TO LDC-BKP.


           MOVE LDC-CAI-ICLF IN LDC TO CLF-CAI-ICLF IN CLF.
           MOVE LDC-IIC-ICLF IN LDC TO CLF-IIC-ICLF IN CLF.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM LDC-FIO-CLF.
           IF NOT FIO-STAT-OKS
               MOVE LDC-VAL-CMAX IN LDC TO WSS-VAL-CACT IN WSS-VARI
               GO TO EXT-ACT-CAMPO-CACT.

           MOVE 'N' TO WSS-IND-BANT.
           IF CLF-IIC-CREN IN CLF NOT > SPACES
               PERFORM BUS-TABLA-LCP-LCE
               IF WSS-IND-LCP IN WSS-VARI = 'S' OR
                  WSS-IND-LCE IN WSS-VARI = 'S'
                   MOVE ZEROES TO WSS-VAL-CACT IN WSS-VARI
               ELSE
                   MOVE LDC-VAL-CMAX IN LDC-FLD TO
                        WSS-VAL-CACT IN WSS-VARI
           ELSE
               PERFORM BUS-TABLA-LCP-LCE
               IF WSS-IND-LCP IN WSS-VARI = 'S' OR
                  WSS-IND-LCE IN WSS-VARI = 'S'
                   MOVE 'S' TO WSS-IND-BANT
                   PERFORM BUSCAR-LDC-ANT
                   IF WSS-IND-LDCA IN WSS-VARI = 'S'
                       PERFORM VAL-CAMB-LDC
                       IF WSS-IND-CLDC = 'S'
                           IF WSS-IND-IGUA = '0'
                               MOVE ZEROES TO WSS-VAL-CACT IN WSS-VARI
                           ELSE
      *ADA-INI 30-NOV-2001
      *'A' Indica: el valor contratado debe ser igual al nuevo aprobado
      *salvo cuando no se haya activado nunca el contratado (esto se
      *sabe porque el antiguo contratado es 0) en cuyo caso el nuevo
      *contratado sigue en 0
                           IF WSS-IND-IGUA = 'A'
                               IF LDC-VAL-CACT IN LDC > 0
                                   MOVE LDC-VAL-CMAX IN LDC-FLD TO
                                             WSS-VAL-CACT IN WSS-VARI
                               ELSE
                                   MOVE 0 TO WSS-VAL-CACT IN WSS-VARI
                           ELSE
      *ADA-FIN 30-NOV-2001
                               MOVE LDC-VAL-CACT IN LDC TO
                                    WSS-VAL-CACT IN WSS-VARI
                       ELSE
                           MOVE LDC-VAL-CACT IN LDC TO
                                WSS-VAL-CACT IN WSS-VARI
                   ELSE
                       MOVE ZEROES TO WSS-VAL-CACT IN WSS-VARI
                ELSE
                    MOVE LDC-VAL-CMAX IN LDC-FLD TO
                         WSS-VAL-CACT IN WSS-VARI.

       EXT-ACT-CAMPO-CACT.

           IF WSS-IND-BANT = 'S'
               PERFORM KEY-ALL-LDC
               MOVE FIO-GET-KEY-UPD TO FIO-CMND
               PERFORM LDC-FIO-LDC.
           MOVE LDC-BKP TO LDC.
           MOVE WSS-VAL-CACT IN WSS-VARI TO LDC-VAL-CACT IN LDC.

       FIN-ACT-CAMPO-CACT.
           EXIT.

       BUS-TABLA-LCP-LCE SECTION.
       INI-BUS-TABLA-LCP-LCE.

           MOVE 'N' TO WSS-IND-LCP IN WSS-VARI.
           MOVE 'N' TO WSS-IND-LCE IN WSS-VARI.

           MOVE SPACES                  TO RDC-CIC-ICLI IN RDC.
           MOVE LDC-CAI-ICLF IN LDC-FLD TO RDC-CAI-ICLF IN RDC.
           MOVE LDC-IIC-ICLF IN LDC-FLD TO RDC-IIC-ICLF IN RDC.
           MOVE 'RDC-KEY-ICLF' TO FIO-AKEY.
           MOVE FIO-GET-NLS TO FIO-CMND.
           PERFORM LDC-FIO-RDC.
           IF NOT ( FIO-STAT-OKS AND
              RDC-CAI-ICLF IN RDC = LDC-CAI-ICLF IN LDC-FLD AND
              RDC-IIC-ICLF IN RDC = LDC-IIC-ICLF IN LDC-FLD )
               GO TO FIN-BUS-TABLA-LCP-LCE.
           MOVE RDC-CIC-ICLI IN RDC TO DBC-CIC-ICLI IN DBC.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM SGC-FIO-DBC.
           IF NOT FIO-STAT-OKS
               GO TO FIN-BUS-TABLA-LCP-LCE.
           IF DBC-IND-TICL IN DBC = 'P'
               MOVE 'DEU' TO FIO-SIST
               MOVE 'LCP'       TO TAB-COD-TTAB IN TAB
               MOVE LDC-COD-TIPO IN LDC-FLD TO TAB-COD-CTAB IN TAB
               MOVE FIO-GET-KEY TO FIO-CMND
               PERFORM GNS-FIO-TAB
               IF FIO-STAT-OKS AND
                  TAB-IND-VIGE = 'S'
                   MOVE 'S' TO WSS-IND-LCP
                   MOVE TAB-GLS-DATA IN TAB TO WSS-IND-IGUA
                   GO TO FIN-BUS-TABLA-LCP-LCE
               ELSE
                   GO TO FIN-BUS-TABLA-LCP-LCE
           ELSE
               MOVE 'DEU' TO FIO-SIST
               MOVE 'LCE'       TO TAB-COD-TTAB IN TAB
               MOVE LDC-COD-TIPO IN LDC-FLD TO TAB-COD-CTAB IN TAB
               MOVE FIO-GET-KEY TO FIO-CMND
               PERFORM GNS-FIO-TAB
               IF FIO-STAT-OKS AND
                  TAB-IND-VIGE = 'S'
                   MOVE 'S' TO WSS-IND-LCE
                   MOVE TAB-GLS-DATA IN TAB TO WSS-IND-IGUA
                   GO TO FIN-BUS-TABLA-LCP-LCE.
       FIN-BUS-TABLA-LCP-LCE.
           EXIT.

       BUSCAR-LDC-ANT SECTION.
       INI-BUSCAR-LDC-ANT.
           MOVE 'N' TO WSS-IND-LDCA IN WSS-VARI.

           MOVE CLF-CAI-CREN IN CLF TO LDC-CAI-ICLF IN LDC.
           MOVE CLF-IIC-CREN IN CLF TO LDC-IIC-ICLF IN LDC.
           MOVE ZEROES              TO LDC-NUM-ILDC IN LDC.
           MOVE FIO-GET-NLS TO FIO-CMND.
       LOOP-BUSCAR-LDC-ANT.

           PERFORM LDC-FIO-LDC.
           IF NOT ( FIO-STAT-OKS AND
              CLF-CAI-CREN IN CLF = LDC-CAI-ICLF IN LDC AND
              CLF-IIC-CREN IN CLF = LDC-IIC-ICLF IN LDC )
               GO TO FIN-BUSCAR-LDC-ANT.

           IF LDC-COD-TIPO IN LDC NOT = LDC-COD-TIPO IN LDC-FLD
               MOVE FIO-GET-NXT TO FIO-CMND
               GO TO LOOP-BUSCAR-LDC-ANT.

           MOVE 'S' TO WSS-IND-LDCA IN WSS-VARI.


       FIN-BUSCAR-LDC-ANT.
           EXIT.

       VAL-CAMB-LDC SECTION.
       INI-VAL-CAMB-LDC.

           MOVE 'N' TO WSS-IND-CLDC.
                 IF LDC-VAL-CMAX IN LDC NOT = LDC-VAL-CMAX IN LDC-FLD
               MOVE 'S' TO WSS-IND-CLDC
               GO TO FIN-VAL-CAMB-LDC.

           IF LDC-COD-VCLC IN LDC NOT = LDC-COD-VCLC IN LDC-FLD
               MOVE 'S' TO WSS-IND-CLDC
               GO TO FIN-VAL-CAMB-LDC.

           IF LDC-IND-MGAR IN LDC NOT = LDC-IND-MGAR IN LDC-FLD
               MOVE 'S' TO WSS-IND-CLDC
               GO TO FIN-VAL-CAMB-LDC.

           IF LDC-NUM-DINI IN LDC NOT = LDC-NUM-DINI IN LDC-FLD
               MOVE 'S' TO WSS-IND-CLDC
               GO TO FIN-VAL-CAMB-LDC.

           IF LDC-NUM-MINI IN LDC NOT = LDC-NUM-MINI IN LDC-FLD
               MOVE 'S' TO WSS-IND-CLDC
               GO TO FIN-VAL-CAMB-LDC.

           IF LDC-NUM-SINI IN LDC NOT = LDC-NUM-SINI IN LDC-FLD
               MOVE 'S' TO WSS-IND-CLDC
               GO TO FIN-VAL-CAMB-LDC.

           IF LDC-NUM-AINI IN LDC NOT = LDC-NUM-AINI IN LDC-FLD
               MOVE 'S' TO WSS-IND-CLDC
               GO TO FIN-VAL-CAMB-LDC.

           IF LDC-NUM-PVIG IN LDC NOT = LDC-NUM-PVIG IN LDC-FLD
               MOVE 'S' TO WSS-IND-CLDC
               GO TO FIN-VAL-CAMB-LDC.

           IF LDC-IND-PVIG IN LDC NOT = LDC-IND-PVIG IN LDC-FLD
               MOVE 'S' TO WSS-IND-CLDC
               GO TO FIN-VAL-CAMB-LDC.

           IF LDC-NUM-DVEN IN LDC NOT = LDC-NUM-DVEN IN LDC-FLD
               MOVE 'S' TO WSS-IND-CLDC
               GO TO FIN-VAL-CAMB-LDC.

           IF LDC-NUM-MVEN IN LDC NOT = LDC-NUM-MVEN IN LDC-FLD
               MOVE 'S' TO WSS-IND-CLDC
               GO TO FIN-VAL-CAMB-LDC.

           IF LDC-NUM-SVEN IN LDC NOT = LDC-NUM-SVEN IN LDC-FLD
               MOVE 'S' TO WSS-IND-CLDC
               GO TO FIN-VAL-CAMB-LDC.

           IF LDC-NUM-AVEN IN LDC NOT = LDC-NUM-AVEN IN LDC-FLD
               MOVE 'S' TO WSS-IND-CLDC
               GO TO FIN-VAL-CAMB-LDC.

           IF LDC-IND-VIGE IN LDC NOT = LDC-IND-VIGE IN LDC-FLD
               MOVE 'S' TO WSS-IND-CLDC
               GO TO FIN-VAL-CAMB-LDC.

       FIN-VAL-CAMB-LDC.
           EXIT.

      *ALD-ADA-FIN/18072001
      *>>>>

       COPY LDCBGMPT.

      *>>>>
      *>>>>
