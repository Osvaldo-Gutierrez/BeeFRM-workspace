       IDENTIFICATION DIVISION.
      *========================
       PROGRAM-ID. LDCPPTRO.
       AUTHOR. CONSIST.
       DATE-WRITTEN. 28-AGO-1996
      *
      * PROGRAMA TRADUCTOR PARA LINEAS DE CREDITO LDC
      * TRADUCE MENSAJES GENERADOS POR EL MONITOR (TDO)
      * Y LO ENVIA AL PC.
      *
       ENVIRONMENT DIVISION.
      *----------------------
       CONFIGURATION SECTION.
      *----------------------
       SPECIAL-NAMES.
               DECIMAL-POINT IS COMMA.

       DATA DIVISION.
      *----------------------
       WORKING-STORAGE SECTION.
      *------------------------
      * DIFF REALIA-HOST VARIABLE CON VALORES DISTINTOS SEGUN EL
      * AMBIENTE
       COPY LDCWGMTX.
       COPY LDCWGTRO.
       COPY GNSWGHOY.
       01  WSS-IND-QUE            VALUE SPACES PIC X(03).
       COPY GNSWGTSK.
      *COPY GNSWGSYS.
      *    Variables para Rutinas del Sistema. GNSWGSYS V-3.1
       01  SYS-VARI.
      *    Variables para Current-Date
           03 SYS-FHOY-2B.
              05 SYS-AHOY-2B                   PIC 9(02).
              05 SYS-MHOY-2B                   PIC 9(02).
              05 SYS-DHOY-2B                   PIC 9(02).
           03 SYS-SHOY                         PIC 9(02).
           03 SYS-FHOY.
              05 SYS-DHOY                      PIC 9(02).
              05 SYS-SLH1                      PIC X(01).
              05 SYS-MHOY                      PIC 9(02).
              05 SYS-SLH2                      PIC X(01).
              05 SYS-AHOY                      PIC 9(02).
           03 SYS-HHOY-2B  VALUE ZEROES        PIC 9(08).
           03 SYS-HHOY-2B-RED REDEFINES SYS-HHOY-2B.
              05 SYS-HHHY-2B                   PIC 9(02).
              05 SYS-MMHY-2B                   PIC 9(02).
              05 SYS-SSHY-2B                   PIC 9(02).
              05 SYS-CCHY-2B                   PIC 9(02).
           03 SYS-HHOY  VALUE ZEROES           PIC 9(06).
           03 SYS-HHOY-RED REDEFINES SYS-HHOY.
              05 SYS-HHHY                      PIC 9(02).
              05 SYS-MMHY                      PIC 9(02).
              05 SYS-SSHY                      PIC 9(02).
           03 SYS-JHOY                         PIC 9(05).
           03 SYS-JHOY-RED REDEFINES SYS-JHOY.
              05 SYS-AAHY                      PIC 9(02).
              05 SYS-DDHY                      PIC 9(03).
           03 SYS-TSTP.
              05 SYS-SSTP                      PIC 9(02).
              05 SYS-FSTP.
                 07 SYS-AATS                   PIC 9(02).
                 07 SYS-MMTS                   PIC 9(02).
                 07 SYS-DDTS                   PIC 9(02).
              05 SYS-HSTP                      PIC 9(06).
              05 SYS-HSTP-RED REDEFINES SYS-HSTP.
                 07 SYS-HHTS                   PIC 9(02).
                 07 SYS-MMTS                   PIC 9(02).
                 07 SYS-SSTS                   PIC 9(02).
      *    Tamano de Communication Area
           03 SYS-TCMA  COMP                   PIC S9(4).
      *    Communication Area
           03 SYS-CMMA.
              05 SYS-SCR-MENS                  PIC X(79).
      *        05 SYS-SCR-VARI                  PIC X(3421).
              05 SYS-SCR-VARI                  PIC X(300).
      *    Transaccion
           03 SYS-NTRN                         PIC X(04).
      *    Programa
           03 SYS-PROG                         PIC X(08).
           03 SYS-PROG-RED REDEFINES SYS-PROG
                                      OCCURS 8 PIC X(01).
      *    Programa a ABorTo
           03 SYS-PABT  VALUE 'GNSPPABT'       PIC X(08).
      *    Comando
           03 SYS-CMND                 VALUE 0 PIC 9(02).
      *    Mensaje
           03 SYS-MENS.
              05 SYS-MEN1                      PIC X(40).
              05 SYS-MEN2                      PIC X(40).
      *    Resto
           03 SYS-REST                         PIC 9(01).
      *    Indice
           03 SYS-SIND                         PIC 9(02).
      *    Status
           03 SYS-STAT                         PIC X(02).
           03 SYS-STAT-OKS        VALUE '00'   PIC X(02).
      *    Indicador de Handler
           03 SYS-IHDL            VALUE SPACES PIC X(01).
      *    Start Code
           03 SYS-SCOD                         PIC X(02).
      *    Indicador de Abend
           03 SYS-ABND               VALUE ' ' PIC X(01).
              88 SYS-ABND-YES        VALUE 'S'.
      *
      *    Constantes para Rutinas del Sistema.
       01  SYS-CTTS.
      *    Comandos
           03 SYS-GET-DATE             VALUE 1 PIC 9(01).
           03 SYS-GET-TIME             VALUE 2 PIC 9(01).
           03 SYS-RTRN                 VALUE 3 PIC 9(01).
           03 SYS-XCTL                 VALUE 4 PIC 9(01).
           03 SYS-LINK                 VALUE 5 PIC 9(01).
           03 SYS-ABOR                 VALUE 6 PIC 9(01).
      *    Cantidad de Dias Acumulados en cada Mes
           03 SYS-VACU VALUE '000031060091121152182213244274305335'.
              05 SYS-DACU       OCCURS 12      PIC 9(03).
      *
      *COPY LDCBRTDS.
      * COPY LDCBRTDI.
       COPY LDCBRTDO.

      * COPY GNSWGTDI.
       COPY GNSWGTDO.
      *JUS-INI 28-FEB-1996
       COPY GNSWCFIO.
      * COPY GNSWXFIO.
      *JUS-FIN 28-FEB-1996
       COPY GNSWVFIO.
       COPY GNSWGQUE.
       COPY GNSWGFRM.
       COPY GNSBRCCS.
       COPY GNSWVSCR.
      *
       COPY LDCBRCLF.
       COPY LDCBRLDC.
       COPY LDCBRRDC.
       COPY LDCBRARC.
       COPY LDCBRARG.
       COPY SGCBRDBC.
       COPY LDCWGQCF.
       COPY LDCWGCLC.
      *
       01  VARIABLES.
           05 TERM                                    PIC X(04).
           05 WS-LARGO        COMP-4 VALUE +0         PIC S9(04).
      *
       01  WSS-VARI.
           03 WSS-DBC-IDX    VALUE ZEROES             PIC 9(02).
           03 WSS-NITM-QCF   VALUE ZEROES             PIC 9(05).
           03 WSS-NITM-CLC   VALUE ZEROES             PIC 9(05).
           03  WSS-ITEM.
               05  WSS-NOMB                           PIC X(06).
               05  WSS-DATA                           PIC X(241).
           03  WSS-KEY-ICLF.
               05 WSS-CAI-ICLF                        PIC X(04).
               05 WSS-IIC-ICLF                        PIC X(08).
           03  WSS-CIC-IGAR.
               05 WSS-CAI-IGAR                        PIC X(04).
               05 WSS-IIC-IGAR                        PIC X(08).
           03  WSS-IDC-ICLI.
               05 WSS-NUM-ICLI                        PIC X(08).
               05 WSS-IND-ICLI                        PIC X(01).
               05 WSS-GLS-ICLI                        PIC X(03).
      *
           03 WSS-IDX       VALUE ZEROES              PIC 9(02).
           03 WSS-IDX-MAX   VALUE ZEROES              PIC 9(02).
           03 I             VALUE ZEROES              PIC 9(03).
           03 J             VALUE ZEROES              PIC 9(03).
           03 K             VALUE ZEROES              PIC 9(03).
           03 WSS-TOPE      VALUE 1000                PIC 9(05).
           03 WSS-LEN-REG   VALUE ZEROES              PIC 9(05).
           03 WSS-CMSG VALUE SPACES                   PIC X(12).
           03 WSS-LENG VALUE +1500  COMP              PIC S9(04).
           03 WSS-CONTADOR                            PIC 9(05).
           03 WSS-VAL-AUXI                            PIC Z(14).
      *JUS-INI 24.04.1998
           03 WSS-VAL-CMLC             PIC  ZZ.ZZZ.ZZ9.
           03 WSS-VAL-CDLC             PIC ---.---.--9.
      *JUS-FIN 24.04.1998
      *
       01  WSS-ARR.
      *          LARGOS = LENREG + LENHEADER= 42 - HEADER-OLD = 12
           03 WSS-LEN-RCLF    VALUE 204               PIC 9(03).
           03 WSS-LEN-RRDC    VALUE 210               PIC 9(03).
           03 WSS-LEN-RLDC    VALUE 147               PIC 9(03).
           03 WSS-LEN-RFIA    VALUE 219               PIC 9(03).
           03 WSS-LEN-RGDG    VALUE 255               PIC 9(03).
           03 WSS-LEN-RARG    VALUE 245               PIC 9(03).
           03 WSS-LEN-RARC    VALUE 275               PIC 9(03).
      *
           03 WSS-TAB-LDCS.
              05 WSS-ARR-LDCS    OCCURS 275 TIMES.
                 07 WSS-CAR-LDCS                      PIC X(01).
           03 WSS-IDX-LDCS     VALUE ZEROES           PIC 9(05).
      *
      *     03 WSS-TAB-AMTD.
      *JUS-INI     Este OCCURS debe tener el valor de:
      *             354 + N*(991) , donde N = No.de LDCs
      *                   para N = 3, largo = 3.327
      *       05 WSS-ARR-AMTD    OCCURS 18000 TIMES.
      *           07 WSS-CAR-AMTD                      PIC X(01).
      *JUS-FIN
      *     03 WSS-IDX-AMTD     VALUE ZEROES           PIC 9(05).
      *
       01  WSS-QCF-GLS-COLA.
           03  WSS-QCF-COD-TYPE    VALUE 'GQCF'       PIC X(04).
           03  WSS-QCF-COD-TERM    VALUE SPACES       PIC X(04).
      *
       01  TSPT-VARI.
           03 WSS-PTR-GLS-COLA.
              05  WSS-PTR-COD-TERM    VALUE 'TR'      PIC X(02).
              05  WSS-PTR-COD-TYPE    VALUE SPACES    PIC X(06).
           03 WSS-LEN-TSPT VALUE    +1025  COMP       PIC S9(04).
           03 WSS-ITEM-TSPT.
              05 WSS-INDICA-TSPT                      PIC X(0001).
              05 WSS-DATA-TSPT                        PIC X(1024).
           03 WSS-NITM-TSPT    VALUE ZEROES           PIC 9(05).
      *
      *
       LINKAGE SECTION.
      *----------------
       01  DFHCOMMAREA.
           02 FILLER                                  PIC X(18).
       COPY GNSLGFIO.
      * COPY GNSLXFIO.

       PROCEDURE DIVISION.
      *===================
       MAIN SECTION.
       INI-MAIN.
           MOVE DFHCOMMAREA(1:EIBCALEN) TO CTM-VARI.
      * DIFF REALIA-HOST EN REALIA NO TIENE ESTE COPY
      *
      * COPY GNSBGEDB.

           MOVE +4000 TO TDO-LTDO.
           PERFORM GET-TSK-TERM.

           MOVE TSK-TERM-ALF TO WSS-QCF-COD-TERM.
           MOVE TSK-TERM-ALF TO CLC-TERM-H.
           MOVE TSK-TERM-ALF TO CLC-TERM-A.

           MOVE SPACES TO WSS-PTAPC TDO.
           MOVE WSS-QCF-GLS-COLA TO QCF-GLS-COLA.
           PERFORM GNS-ERR-QUE.
           PERFORM GNS-HDL-VSM.

           PERFORM PRO-REQS.

           IF WSS-IND-AMB = 'REA'
               PERFORM ENV-MSG-OUT-REA
           ELSE
               PERFORM PUT-QUE-TCPIP.
           PERFORM ELI-TSS.
           PERFORM BORRA-TS-CLC.
       FIN-MAIN.
           MOVE CTM-COD-TCPIP TO SYS-CMMA.
           MOVE +6 TO SYS-TCMA.
           MOVE SYS-XCTL TO SYS-CMND.
           MOVE 'GNSPPSGO' TO SYS-PROG.
           PERFORM GNS-PRO-SYS.
       EXT-MAIN.
           EXIT.

       PRO-REQS SECTION.
       INI-PRO-REQS.

           PERFORM GET-TDO.

           IF CTM-COD-TRAN  = 'LDCCLFINGINP' OR
              CTM-COD-TRAN  = 'LDCQCFMODINP' OR
              CTM-COD-TRAN  = 'LDCCLFMODINP'
               PERFORM MOV-MXAPT-TO-PTAPC.

           IF CTM-COD-TRAN  = 'LDCCLCCONINP' OR
              CTM-COD-TRAN  = 'LDCQCFCONINP'
               PERFORM REV-TS
               IF QUE-STAT = QUE-STAT-OKS
                    PERFORM GET-GCLC.

           IF CTM-COD-TRAN  = 'LDCQCFCONINP'
               MOVE 'CON' TO QCF-COD-CMND
               MOVE PTAPC-B-CLF-CAI-ICLF TO QCF-CAI-ICLF
               MOVE PTAPC-B-CLF-IIC-ICLF TO QCF-IIC-ICLF
               PERFORM LNK-PPQCF
               PERFORM GET-GQCF.

       FIN-PRO-REQS.
           EXIT.

       REV-TS SECTION.
       INI-REV-TS.

           MOVE 1 TO WSS-NITM-CLC.
           MOVE WSS-NITM-CLC  TO QUE-NITM.
           MOVE CLC-LONG-TS-H TO QUE-LITM.
           MOVE CLC-NAME-QUE-H TO QUE-COLA.
           MOVE QUE-GET   TO QUE-CMND.
           PERFORM GNS-PRO-QUE.
           MOVE ZEROES TO WSS-NITM-CLC.

       FIN-REV-TS.
           EXIT.

       BORRA-TS-CLC SECTION.
       INI-BORRA-TS-CLC.

           MOVE CLC-NAME-QUE-H TO QUE-COLA.
           MOVE QUE-DEL      TO QUE-CMND.
           PERFORM GNS-PRO-QUE.

           MOVE CLC-NAME-QUE-A TO QUE-COLA.
           MOVE QUE-DEL      TO QUE-CMND.
           PERFORM GNS-PRO-QUE.

        FIN-BORRA-TS-CLC.
            EXIT.

       GET-TDO SECTION.
       INI-GET-TDO.
      *
           MOVE 1                       TO TDO-NUM-RECO.
           MOVE FIO-GET-KEY             TO FIO-CMND.
           PERFORM GNS-FIO-TDO.
           IF QUE-STAT = QUE-STAT-OKS
               MOVE TDO-COD-STAT TO WSS-PTAPC-STAT
               MOVE TDO-GLS-MENS TO WSS-PTAPC-MENS.

       FIN-GET-TDO.
           EXIT.

       LNK-PPQCF SECTION.
       INI-LNK-PPQCF.
           PERFORM GET-FHOY.
           MOVE HOY-FHOY TO QCF-FEC-FCON.
           MOVE SYS-LINK               TO SYS-CMND.
           MOVE QCF-TCMA               TO SYS-TCMA.
           MOVE QCF-CMMA               TO SYS-CMMA.
           MOVE 'LDCPPQCF'             TO SYS-PROG.
           PERFORM GNS-PRO-SYS.
       FIN-LNK-PPQCF.
           EXIT.

       MOV-MXAPT-TO-PTAPC SECTION.
       INI-MOV-MXAPT-TO-PTAPC.
      *
           IF CTM-COD-TRAN  = 'LDCCLFINGINP' OR
              CTM-COD-TRAN  = 'LDCQCFMODINP' OR
              CTM-COD-TRAN  = 'LDCCLFMODINP'
               PERFORM  MOV-MXAPT-TO-PTAPC-A.

       FIN-MOV-MXAPT-TO-PTAPC.
           EXIT.

       MOV-MXAPT-TO-PTAPC-A SECTION.
       INI-MOV-MXAPT-TO-PTAPC-A.
           MOVE MXAPT-A-CLF-GLS-MENS TO PTAPC-A-CLF-GLS-MENS.
           MOVE MXAPT-A-CLF-CAI-ICLF TO PTAPC-A-CLF-CAI-ICLF.
           MOVE MXAPT-A-CLF-IIC-ICLF TO PTAPC-A-CLF-IIC-ICLF.
           MOVE MXAPT-A-HST-MSC-STAT TO PTAPC-A-HST-MSC-STAT.
      *JUS-INI 24-OCT-1997 (POR FAST TRACK)
           MOVE MXAPT-A-CLF-FEC-FVEN TO PTAPC-A-CLF-FEC-FVEN.
      *JUS-FIN 24-OCT-1997 (POR FAST TRACK)
       FIN-MOV-MXAPT-TO-PTAPC-A.
           EXIT.

       GET-GQCF SECTION.
       INI-GET-GQCF.
           MOVE ZEROES TO WSS-DBC-IDX.
       LUP-GET-GQCF.
           ADD 1 TO WSS-NITM-QCF.
           MOVE WSS-NITM-QCF     TO QUE-NITM.
           MOVE +9999            TO QUE-LITM.
           MOVE WSS-QCF-GLS-COLA TO QUE-COLA.
           MOVE QUE-GET          TO QUE-CMND.
           PERFORM GNS-PRO-QUE.
           IF QUE-STAT = QUE-STAT-OKS
               MOVE QUE-ITEM TO WSS-ITEM
               PERFORM RET-GQCF
               GO TO LUP-GET-GQCF.
       FIN-GET-GQCF.
           EXIT.

       GET-GCLC SECTION.
       INI-GET-GCLC.
           ADD 1 TO WSS-NITM-CLC.
           MOVE WSS-NITM-CLC  TO QUE-NITM.
           MOVE CLC-LONG-TS-H TO QUE-LITM.
           MOVE CLC-NAME-QUE-H TO QUE-COLA.
           MOVE QUE-GET   TO QUE-CMND.
           PERFORM GNS-PRO-QUE.
           IF QUE-STAT = QUE-STAT-OKS
               MOVE QUE-ITEM TO CLC-FIL-TS.

      * EL MANEJO DE LA GLOSA SE HACE TEMPORALMENTE EN
      * EL CAMPO CODIGO, ESTO DEBE ADAPTARSE UNA VEZ
      * QUE LA PLATAFORMA PC SE ADAPTE OK
      *    MOVE CLC-FIL-TS TO PTAPC-B-CAMPOS.
           MOVE CLC-FIL-TS TO PTAPC-B-CAMPOS.

           MOVE 1      TO K.
           MOVE ZEROES TO WSS-NITM-CLC.
           IF CTM-COD-TRAN = 'LDCQCFCONINP'
              GO TO FIN-GET-GCLC.
       LUP-GET-GCLC.
           ADD 1 TO WSS-NITM-CLC.
           MOVE WSS-NITM-CLC  TO QUE-NITM.
           MOVE CLC-LONG-TS-A TO QUE-LITM.
           MOVE CLC-NAME-QUE-A TO QUE-COLA.
           MOVE QUE-GET   TO QUE-CMND.
           PERFORM GNS-PRO-QUE.
           IF QUE-STAT = QUE-STAT-OKS AND K NOT > 40
               MOVE QUE-ITEM TO CLC-ARRE-TS
               PERFORM MOV-CLC
               GO TO LUP-GET-GCLC.
       FIN-GET-GCLC.
           EXIT.

       RET-GQCF SECTION.
       INI-RET-GQCF.
           IF WSS-NOMB = 'LDCCLF'
               MOVE WSS-DATA TO CLF
               PERFORM MOV-CLF
           ELSE
           IF WSS-NOMB = 'LDCLDC'
               MOVE WSS-DATA TO LDC
               PERFORM MOV-LDC
           ELSE
           IF WSS-NOMB = 'LDCARG'
               MOVE WSS-DATA TO ARG
               PERFORM MOV-ARG
           ELSE
           IF WSS-NOMB = 'LDCARC'
               MOVE WSS-DATA TO ARC
               PERFORM MOV-ARC
           ELSE
           IF WSS-NOMB = 'SGCDBC'
               ADD 1 TO WSS-DBC-IDX
               IF WSS-DBC-IDX NOT > 12
                  MOVE WSS-DATA TO DBC
                  PERFORM MOV-DBC.
       FIN-RET-GQCF.
           EXIT.
      *
       MOV-DBC SECTION.
       INI-MOV-DBC.
      *
           MOVE DBC-NUM-ICLI TO PTAPC-C-DBC-NUM-ICLI2(WSS-DBC-IDX).
           MOVE DBC-IND-ICLI TO PTAPC-C-DBC-IND-ICLI2(WSS-DBC-IDX).
           MOVE DBC-GLS-ICLI TO PTAPC-C-DBC-GLS-ICLI2(WSS-DBC-IDX).
           MOVE DBC-VRF-ICLI TO PTAPC-C-DBC-VRF-ICLI2(WSS-DBC-IDX).
      *
       FIN-MOV-DBC.
           EXIT.

       MOV-CLF SECTION.
       INI-MOV-CLF.
      *
           MOVE CLF-COD-VCCF TO PTAPC-C-CLF-COD-VCCF.
           MOVE CLF-COD-TOCF TO PTAPC-C-CLF-COD-TOCF.
           MOVE CLF-COD-AOCF TO PTAPC-C-CLF-COD-AOCF.
           MOVE CLF-COD-OFIC TO PTAPC-C-CLF-COD-OFIC.
           MOVE CLF-COD-EJEC TO PTAPC-C-CLF-COD-EJEC.
           MOVE CLF-IND-RSTR TO PTAPC-C-CLF-IND-RSTR.
           MOVE CLF-IND-UCAP TO PTAPC-C-CLF-IND-UCAP.
      *    MOVE CLF-FEC-FING TO PTAPC-C-CLF-FEC-FING.
           MOVE CLF-FEC-FAPE TO PTAPC-C-CLF-FEC-FING.
           MOVE CLF-IND-PREV TO PTAPC-C-CLF-IND-PREV.
           MOVE CLF-NUM-PVIG TO PTAPC-C-CLF-NUM-PVIG.
           MOVE CLF-IND-PVIG TO PTAPC-C-CLF-IND-PVIG.

           MOVE CLF-VAL-COMI TO WSS-VAL-AUXI.
           MOVE WSS-VAL-AUXI TO  PTAPC-C-CLF-VAL-COMI.

           MOVE CLF-IND-COMI TO PTAPC-C-CLF-IND-COMI.
           MOVE CLF-CAI-ICAC TO PTAPC-C-CLF-CAI-ICAC.
           MOVE CLF-IIC-ICAC TO PTAPC-C-CLF-IIC-ICAC.
           MOVE CLF-COD-RAZC TO PTAPC-C-CLF-COD-RAZC.
      *
       FIN-MOV-CLF.
           EXIT.

       MOV-LDC SECTION.
       INI-MOV-LDC.
      *
           MOVE LDC-COD-TIPO TO PTAPC-C-LDC-COD-TIPO(LDC-NUM-ILDC).

           MOVE LDC-VAL-CMAX TO WSS-VAL-AUXI.
           MOVE WSS-VAL-AUXI TO PTAPC-C-LDC-VAL-CMAX(LDC-NUM-ILDC).

           MOVE LDC-COD-VCLC TO PTAPC-C-LDC-COD-VCLC(LDC-NUM-ILDC).
           MOVE LDC-IND-MGAR TO PTAPC-C-LDC-IND-MGAR(LDC-NUM-ILDC).
           MOVE LDC-FEC-FINI TO PTAPC-C-LDC-FEC-FINI(LDC-NUM-ILDC).
           MOVE LDC-NUM-PVIG TO PTAPC-C-LDC-NUM-PVIG(LDC-NUM-ILDC).
           MOVE LDC-IND-PVIG TO PTAPC-C-LDC-IND-PVIG(LDC-NUM-ILDC).
           MOVE LDC-FEC-FVEN TO PTAPC-C-LDC-FEC-FVEN(LDC-NUM-ILDC).
           MOVE LDC-IND-VIGE TO PTAPC-C-LDC-IND-VIGE(LDC-NUM-ILDC).
      *
       FIN-MOV-LDC.
           EXIT.

       MOV-ARG SECTION.
       INI-MOV-ARG.
           MOVE ARG-COD-TOGA
                     TO PTAPC-C-ARG-COD-TOGA(ARG-NUM-ILDC,ARG-NUM-IARG).
           MOVE ARG-COD-AOGA
                     TO PTAPC-C-ARG-COD-AOGA(ARG-NUM-ILDC,ARG-NUM-IARG).
           MOVE ARG-CAI-IGAR
                     TO PTAPC-C-ARG-CAI-IGAR(ARG-NUM-ILDC,ARG-NUM-IARG).
           MOVE ARG-IIC-IGAR
                     TO PTAPC-C-ARG-IIC-IGAR(ARG-NUM-ILDC,ARG-NUM-IARG).
           MOVE ARG-NUM-PORG
                     TO PTAPC-C-ARG-NUM-PORG(ARG-NUM-ILDC,ARG-NUM-IARG).
       FIN-MOV-ARG.
           EXIT.

       MOV-ARC SECTION.
       INI-MOV-ARC.
           MOVE ARC-COD-VCOC
                     TO PTAPC-C-ARC-COD-VCOC(ARC-NUM-ILDC,ARC-NUM-IARC).
           MOVE ARC-COD-TOOC
                     TO PTAPC-C-ARC-COD-TOOC(ARC-NUM-ILDC,ARC-NUM-IARC).
           MOVE ARC-COD-AOOC
                     TO PTAPC-C-ARC-COD-AOOC(ARC-NUM-ILDC,ARC-NUM-IARC).
           MOVE ARC-CAI-IOPC
                     TO PTAPC-C-ARC-CAI-IOPC(ARC-NUM-ILDC,ARC-NUM-IARC).
           MOVE ARC-IIC-IOPC
                     TO PTAPC-C-ARC-IIC-IOPC(ARC-NUM-ILDC,ARC-NUM-IARC).
       FIN-MOV-ARC.
           EXIT.

       MOV-CLC SECTION.
       INI-MOV-CLC.
      *
           PERFORM LEE-TS-CLC-C VARYING J FROM 1 BY 1 UNTIL (J > 8).
      *
       FIN-MOV-CLC.
           EXIT.
      *
       PUT-QUE-TCPIP SECTION.
       INI-PUT-QUE-TCPIP.
           PERFORM CAL-ULT-ELEM.
           MOVE ZEROES           TO WSS-IDX.
           MOVE CTM-COD-TCPIP    TO WSS-PTR-COD-TYPE.
           MOVE WSS-PTR-GLS-COLA TO QUE-COLA.
           MOVE WSS-LEN-TSPT     TO QUE-LITM.
           MOVE QUE-DEL TO QUE-CMND.
           PERFORM GNS-PRO-QUE.
       LUP-PUT-QUE-TCPIP.
           ADD 1 TO WSS-IDX.
           IF (WSS-IDX > WSS-MAX-NELE) OR (WSS-IDX > WSS-IDX-MAX)
              GO TO FIN-PUT-QUE-TCPIP.

           IF WSS-IDX < WSS-IDX-MAX
              MOVE '0'                    TO WSS-INDICA-TSPT
           ELSE
              MOVE '1'                    TO WSS-INDICA-TSPT.

           MOVE WSS-PTAPC-ELE(WSS-IDX) TO WSS-DATA-TSPT.
           MOVE WSS-ITEM-TSPT          TO QUE-ITEM.
           MOVE QUE-PUT                TO QUE-CMND.
           PERFORM GNS-PRO-QUE.
           GO TO LUP-PUT-QUE-TCPIP.

       FIN-PUT-QUE-TCPIP.
           EXIT.

       CAL-ULT-ELEM SECTION.
       INI-CAL-ULT-ELEM.
           MOVE WSS-MAX-NELE TO WSS-IDX.
       LUP-CAL-ULT-ELEM.
           IF WSS-PTAPC-ELE(WSS-IDX) > SPACES
              MOVE WSS-IDX TO WSS-IDX-MAX
           ELSE
              SUBTRACT 1 FROM WSS-IDX
              IF WSS-IDX > ZEROES
                 GO TO LUP-CAL-ULT-ELEM
              ELSE
                 MOVE 1 TO WSS-IDX-MAX.
       FIN-CAL-ULT-ELEM.
           EXIT.

       ENV-MSG-OUT-REA SECTION.
       INI-ENV-MSG-OUT-REA.
           MOVE FIO-GET-KEY-UPD TO FIO-CMND.
           PERFORM GNS-FIO-CCS.
           IF NOT FIO-STAT-OKS
              GO TO INI-ENV-MSG-OUT-REA.
           MOVE '0'                 TO CCS-IND-COMU IN CCS.
           MOVE WSS-PTAPC           TO CCS-GLS-MENS IN CCS.
           MOVE FIO-MOD TO FIO-CMND.
           PERFORM GNS-FIO-CCS.
           IF NOT FIO-STAT-OKS
              MOVE FIO-ULK-REC TO FIO-CMND
              PERFORM GNS-FIO-CCS
              GO TO INI-ENV-MSG-OUT-REA.
       FIN-ENV-MSG-OUT-REA.
           EXIT.

       ELI-TSS SECTION.
       INI-ELI-TSS.
           MOVE TSK-TERM-ALF TO QUE-TERM.
           MOVE 'PL01'       TO QUE-TYPE.
           MOVE QUE-DEL      TO QUE-CMND.
           PERFORM GNS-PRO-QUE.

           MOVE 'PL02'       TO QUE-TYPE.
           MOVE QUE-DEL      TO QUE-CMND.
           PERFORM GNS-PRO-QUE.

           MOVE 'TSI '       TO QUE-TYPE.
           MOVE QUE-DEL      TO QUE-CMND.
           PERFORM GNS-PRO-QUE.

           MOVE 'TSO '       TO QUE-TYPE.
           MOVE QUE-DEL      TO QUE-CMND.
           PERFORM GNS-PRO-QUE.

           MOVE WSS-QCF-GLS-COLA TO QUE-COLA.
           MOVE QUE-DEL      TO QUE-CMND.
           PERFORM GNS-PRO-QUE.
       FIN-ELI-TSS.
           EXIT.

       PRO-WAIT SECTION.
       INI-PRO-WAIT.
           MOVE ZEROES TO WSS-CONTADOR.
       CON-PRO-WAIT.
           ADD 1 TO WSS-CONTADOR
           IF WSS-CONTADOR < WSS-TOPE
              GO TO CON-PRO-WAIT.
       FIN-PRO-WAIT.
           EXIT.

       LEE-TS-CLC-C SECTION.
       INI-LEE-TS-CLC-C.
           MOVE CLC-NUM-ILDC(J) TO PTAPC-B-FRM-NUM-ILDC(K).

           MOVE CLC-IND-VIGE(J) TO PTAPC-B-FRM-IND-VIGE(K).

           MOVE CLC-COD-VCLC(J) TO PTAPC-B-FRM-COD-VCLC(K).

           MOVE CLC-COD-TOOC(J) TO PTAPC-B-FRM-COD-TOOC(K).

           MOVE CLC-COD-AOOC(J) TO PTAPC-B-FRM-COD-AOOC(K).

           MOVE CLC-COD-TOGA(J) TO PTAPC-B-FRM-COD-TOGA(K).

           MOVE CLC-COD-AOGA(J) TO PTAPC-B-FRM-COD-AOGA(K).

           MOVE CLC-NUM-PORG(J) TO PTAPC-B-FRM-NUM-PORG(K).

           MOVE CLC-IND-MGAR(J) TO PTAPC-B-FRM-IND-MGAR(K).

           MOVE CLC-COD-SGAR(J) TO PTAPC-B-FRM-COD-SGAR(K).

           MOVE CLC-FEC-FVEN(J) TO PTAPC-B-FRM-FEC-FVEN(K).

      *    MOVE CLC-VAL-CMLC-EDT(J) TO PTAPC-B-FRM-VAL-CMLC(K).
      *JUS-INI 24.04.1998
      *    MOVE CLC-VAL-CMLC-EDT(J) TO PTAPC-B-FRM-VAL-CMLC(K).
           MOVE CLC-VAL-CMLC(J) TO WSS-VAL-CMLC IN WSS-VARI.
           MOVE WSS-VAL-CMLC IN WSS-VARI TO PTAPC-B-FRM-VAL-CMLC(K).

      *    MOVE CLC-VAL-CDLC-EDT(J) TO PTAPC-B-FRM-VAL-CDLC(K).
           MOVE CLC-VAL-CDLC(J) TO WSS-VAL-CDLC IN WSS-VARI.
           MOVE WSS-VAL-CDLC IN WSS-VARI TO PTAPC-B-FRM-VAL-CDLC(K).
      *JUS-FIN 24.04.1998
           ADD 1 TO K.
       FIN-LEE-TS-CLC-C.
           EXIT.

       COPY GNSBFCCS.
       COPY GNSBGEND.
       COPY GNSBGHOY.
       COPY GNSBHSYS.
       COPY GNSBGSYS.
       COPY GNSBIABT.
       COPY GNSBHVSM.
      * DIFF REALIA-HOST EN REALIA SE USA GNSBXVSM
      * HOST
      *COPY GNSBGVSM.
       FIO SECTION.
       INI-FIO.
       FIN-FIO.
           EXIT.
      * COPY GNSBXVSM.
      *JUS-FIN
      *
      * COPY LDCBFTDI.
       COPY LDCBFTDO.
      *COPY LDCBGQUE.

      *Modulo Generico Manejo de Colas
       GNS-CHK-QUEU SECTION.
       INI-GNS-CHK-QUEU.
           MOVE 1 TO QUE-NITM.
           MOVE QUE-GET TO QUE-CMND.
           PERFORM GNS-PRO-QUE.
       FIN-GNS-CHK-QUEU.
           EXIT.

       GNS-QUE-EOQ SECTION.
       INI-GNS-QUE-EOQ.
           MOVE QUE-STAT-EOQ TO QUE-STAT.
           GO TO FIN-GNS-PRO-QUE.
       FIN-GNS-QUE-EOQ.
           EXIT.

       GNS-QUE-NEX SECTION.
       INI-GNS-QUE-NEX.
           MOVE QUE-STAT-NEX TO QUE-STAT.
           GO TO FIN-GNS-PRO-QUE.
       FIN-GNS-QUE-NEX.
           EXIT.

      **************************************************************
       GNS-ERR-QUE SECTION.
       INI-GNS-ERR-QUE.
           EXEC CICS HANDLE CONDITION
                     QIDERR (GNS-QUE-NEX)
                     ITEMERR(GNS-QUE-EOQ)
                     LENGERR(GNS-QUE-NEX)
           END-EXEC.
       FIN-GNS-ERR-QUE.
           EXIT.

       GNS-PRO-QUE SECTION.
       INI-GNS-PRO-QUE.
           MOVE QUE-STAT-OKS TO QUE-STAT.
           IF QUE-CMND = QUE-PUT
               GO TO GNS-PUT-QUE
           ELSE
           IF QUE-CMND = QUE-GET
               GO TO GNS-GET-QUE
           ELSE
           IF QUE-CMND = QUE-MOD
               GO TO GNS-MOD-QUE
           ELSE
           IF QUE-CMND = QUE-DEL
               GO TO GNS-DEL-QUE.
           MOVE 'Comando invalido :' TO QUE-MEN1.
           MOVE QUE-CMND             TO QUE-MEN2.
           EXEC CICS XCTL
                     PROGRAM('GNSPPABT')
                     COMMAREA(QUE-MENS)
                     LENGTH(+79)
           END-EXEC.

       GNS-PUT-QUE.
           IF WSS-IND-QUE = '   '
               EXEC CICS WRITEQ TS
                     QUEUE(QUE-COLA)
                     FROM(QUE-ITEM)
                     LENGTH(QUE-LITM)
                     AUXILIARY
              END-EXEC
           ELSE
           IF WSS-IND-QUE = 'TDO'
               EXEC CICS WRITEQ TS
                     QUEUE(QUE-COLA)
                     FROM(TDO-GLS-DESC-1)
                     LENGTH(QUE-LITM)
                     AUXILIARY
               END-EXEC.
       FIN-GNS-PUT-QUE.
           GO TO FIN-GNS-PRO-QUE.

       GNS-GET-QUE.
           IF WSS-IND-QUE = '   '
               EXEC CICS READQ TS
                     QUEUE(QUE-COLA)
                     INTO(QUE-ITEM)
                     LENGTH(QUE-LITM)
                     ITEM(QUE-NITM)
              END-EXEC
           ELSE
           IF WSS-IND-QUE = 'TDO'
               EXEC CICS READQ TS
                     QUEUE(QUE-COLA)
                     INTO(TDO-GLS-DESC-1)
                     LENGTH(QUE-LITM)
                     ITEM(QUE-NITM)
                END-EXEC.
       FIN-GNS-GET-QUE.
           GO TO FIN-GNS-PRO-QUE.

       GNS-MOD-QUE.
           IF WSS-IND-QUE = SPACES
               EXEC CICS WRITEQ TS
                     QUEUE(QUE-COLA)
                     FROM(QUE-ITEM)
                     LENGTH(QUE-LITM)
                     ITEM(QUE-NITM)
                     REWRITE
               END-EXEC
           ELSE
           IF WSS-IND-QUE = 'TDO'
               EXEC CICS WRITEQ TS
                     QUEUE(QUE-COLA)
                     FROM(TDO-GLS-DESC)
                     LENGTH(QUE-LITM)
                     ITEM(QUE-NITM)
                     REWRITE
               END-EXEC.
       FIN-GNS-MOD-QUE.
           GO TO FIN-GNS-PRO-QUE.

       GNS-DEL-QUE.
           EXEC CICS DELETEQ TS
                     QUEUE(QUE-COLA)
           END-EXEC.
       FIN-GNS-DEL-QUE.
           GO TO FIN-GNS-PRO-QUE.

       FIN-GNS-PRO-QUE.
           EXIT.

       COPY GNSBGTSK.
