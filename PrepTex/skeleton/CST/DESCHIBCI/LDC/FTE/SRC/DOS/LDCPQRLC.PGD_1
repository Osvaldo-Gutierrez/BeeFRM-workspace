       IDENTIFICATION DIVISION.
      *========================
       PROGRAM-ID.   LDCPQRLC.
       AUTHOR.       BEE.
       DATE-WRITTEN. 08-May-19 12:10 PM.

      * NOMBRE PROGRAMA                   LDCPQRLC
      * VERSION PGM                       3.1
      * VERSION SKL                       19.04.15
      * OPCION                            CON
      * ARCHIVO BASE                      LDCRLC
      * PANTALLA                          LDCRLC
      * INP/OUT                           DATACOM
      * TAMANO COMMAREA                   250


       ENVIRONMENT DIVISION.
      *=====================
       CONFIGURATION SECTION.
      *----------------------
       SPECIAL-NAMES.
               DECIMAL-POINT IS COMMA.
       DATA DIVISION.
      *==============

       WORKING-STORAGE SECTION.
      *------------------------
      * COPY GNSWGSCR.
       COPY GNSWGCVT.
       77  WSS-TAG-LDCPQRLC-INI PIC X(125) VALUE                        
           '<IDNPGM NOM=$LDCPQRLC$ SKL=$19.04.15$ VSN=$ $        
      -    'GEN=$08-May-19 12:10 PM$ FNC=$ $/>'.    

       COPY GNSWCSCR.
      *PTC-INI
      *PTC-SUB
      * COPY GNSWVSCR.
       COPY GNSWV3CR.
      *PTC-FIN
      *<<<< MI_COMMAREA                                                 
           03 CMA-VARI.
              05 WSS-FEC-FOPE.
                 07  WSS-NUM-SOPE                       PIC 9(02).
                 07  WSS-NUM-AOPE                       PIC 9(02).
                 07  WSS-NUM-MOPE                       PIC 9(02).
                 07  WSS-NUM-DOPE                       PIC 9(02).

              05 WSS-FEC-FIDE.
                 07  WSS-NUM-DIDE                       PIC 9(02).
                 07  WSS-NUM-MIDE                       PIC 9(02).
                 07  WSS-NUM-SIDE                       PIC 9(02).
                 07  WSS-NUM-AIDE                       PIC 9(02).

              05 WSS-FEC-FRLC.
                 07  WSS-NUM-SRLC                       PIC 9(02).
                 07  WSS-NUM-ARLC                       PIC 9(02).
                 07  WSS-NUM-MRLC                       PIC 9(02).
                 07  WSS-NUM-DRLC                       PIC 9(02).

              05 WSS-COD-VCOC                           PIC X(06).
              05 WSS-COD-VCAM                           PIC X(06).
      *>>>>
       COPY LDCWIRLC.

       COPY LDCBRRLC.


       COPY GNSWVIDD.
       COPY GNSWGRQA.
       COPY GNSWGUIB.
       COPY GNSWGELS.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-RLC-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-TAB-REQA==.
       COPY GNSBRTAB.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-MSC-REQA==.
       COPY GNSBRMSC.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-MSG-REQA==.
       COPY GNSBRMSG.
       COPY GNSWCFIO.
       COPY GNSWVFIO.
      *PTC-INI
      *PTC-SUB
      * ISP  10-MAY-2001 13:46:35 
      * COPY GNSWGFRM.
       COPY GNSWG3CF.
       COPY GNSWGTSK.
       COPY GNSWGQUE.
      *PTC-FIN
       COPY GNSWVNUM.
       COPY GNSWCNUM.
       COPY GNSWGFEC.
       COPY GNSWGHOY.
       COPY GNSWCVRF.
       COPY GNSWVVRF.
       COPY GNSWGIDC.
       COPY GNSWGSYS.

      *<<<< WSS                                                         
       COPY GNSWGPES.
       COPY GNSWGCPT.
       COPY TABBRCAM.
       COPY LDCBRRDC REPLACING RDC BY RDL.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-RDL-REQA==.
       COPY COLBROPC.
       COPY COLBRRDC.
       COPY LDCBRCLF.
       COPY LDCBRLDC.
       COPY LDCBRLCC.
       COPY LDCBRACG.
       COPY LDCBRACL.
       COPY SGCBRDBC.
       COPY LDCWGLIC.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-CAM-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-OPC-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-DBC-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-RDC-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-CLF-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-LDC-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-LCC-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-ACG-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-ACL-REQA==.
       01 WSS.
          03  WSS-IFIN      VALUE SPACES   PIC X(01).
          03  WSS-IFLD       VALUE ZEROES        PIC 9(02).
          03  WSS-IMAX       VALUE ZEROES        PIC 9(02).
          03  WSS-MOV        VALUE ZEROES        PIC 9(02).
          03  ACG-KEY-IACG.
               05  ACG-KEY-ILDC.
                   07  ACG-CAI-ICLF               PIC X(04).
                   07  ACG-IIC-ICLF               PIC X(08).
                   07  ACG-NUM-ILDC               PIC 9(02).
          03  WSS-GLS-DATA.
               05  WSS-GLS-FIL1                   PIC X(03).
               05  WSS-GLS-ENTI                   PIC X(05).
               05  WSS-GLS-FIL2                   PIC X(52).

       01 WSS-VARI.
          03  WSS-IND-RLDC                        PIC X(01).
          03  WSS-IND-ROPC                        PIC X(01).
          03  WSS-VAL-DISP                        PIC S9(11)V9(04).
          03  WSS-VAL-MACU                        PIC S9(11)V9(04).
          03  WSS-VAL-SOPC                        PIC  9(11)V9(04).
          03  WSS-COD-PESO                        PIC X(06).
          03  WSS-COD-UEFE                        PIC X(06).

          03  WSS-IND-TIPO                        PIC X(03).
          03  WSS-COD-TIPO                        PIC X(03).
          03  WSS-COD-LTIP                        PIC X(03).

          03  WSS-CIC-ICLI                        PIC X(12).

          03  WSS-GLS-DAT1.
              05  WSS-COD-DAT1                          PIC X(51).
              05  WSS-COD-DATA                          PIC X(03).
              05  WSS-COD-DAT5                          PIC X(06).
      *>>>>
       01  PGM-VARI.
           03 PGM-ICLR                  VALUE ' '       PIC X(01).
           03 PGM-LIMPIAR-TODO          VALUE ' '       PIC X(01).
           03 PGM-LIMPIAR-LLAVES        VALUE 'K'       PIC X(01).
           03 PGM-LIMPIAR-CAMPOS        VALUE 'F'       PIC X(01).
           03 PGM-NO-LIMPIAR-NADA       VALUE 'N'       PIC X(01).
           03 PGM-PROG                                  PIC X(08).
           03 PGM-NTRN                                  PIC X(04).
           03 PGM-STAT.
              05 PGM-STAT-RLC.
                 88 PGM-STAT-RLC-NUL    VALUE '  '.
                 07 PGM-STT1-RLC        VALUE '2' PIC X(01).
                    88 PGM-STAT-RLC-OKS VALUE '0'.
                 07 PGM-STT2-RLC        VALUE '3' PIC X(01).
           03 PGM-SRNF                  VALUE '23'      PIC X(02).
           03 PGM-SOKS                  VALUE '00'      PIC X(02).
           03 PGM-SNUL                  VALUE '  '      PIC X(02).
           03 PGM-SUAR                  VALUE SPACES    PIC X(15).
       LINKAGE SECTION.
      *----------------
       01  DFHCOMMAREA.
           02 FILLER                    PIC X(306).
       COPY GNSLGFIO.

       PROCEDURE DIVISION.
      *===================

       MAIN SECTION.
       INI-MAIN.
           PERFORM INI.
       LUP-MAIN.
           IF SCR-INST = SCR-INST-HCM
                 PERFORM SCR-COM.
           IF SCR-CCPP = 'MOD'
                 PERFORM SCR-MOD
           ELSE
           IF SCR-CCPP = 'ING'
                 PERFORM SCR-ING
           ELSE
           IF SCR-CCPP = 'ACC'
                 PERFORM SCR-ACC
           ELSE
           IF SCR-CCPP = 'ELI'
                 PERFORM SCR-ELI
           ELSE
           IF SCR-CCPP = 'ACT'
                 PERFORM SCR-ACT
           ELSE
           IF SCR-CCPP = 'PGM'
                 PERFORM SCR-PGM
           ELSE
                 MOVE SCR-INST-HCM TO SCR-INST.
           GO TO LUP-MAIN.
       FIN-MAIN.
           EXIT.

       INI SECTION.
       INI-INI.
       COPY GNSBGEIB.
       COPY GNSBGEDB.
           MOVE LOW-VALUES TO RLC-FLD.
           MOVE LOW-VALUES TO RLC-EDT.
           PERFORM GNS-PRO-RCK.
           PERFORM GNS-BUS-VCA.
           MOVE +306 TO SCR-TCMA.
           PERFORM GNS-HDL-SYS.
           PERFORM GNS-HDL-FRM.
           MOVE 'LDCPQRLC' TO FIO-PROG.
           PERFORM GNS-BUS-IDD.
      *PTC-INI
           PERFORM GNS-ERR-QUE.
           PERFORM GET-TSK-TERM.
      *PTC-FIN
       FIN-INI.
           EXIT.

       COPY GNSBHSYS.
       COPY GNSBHFRM.
       COPY GNSBPRCK.
       COPY GNSBBVCA.
       COPY GNSBBIDD.

       SCR-COM SECTION.
       INI-SCR-COM.
           MOVE FRM-CPSF-AEY TO FRM-CPIM-AEY.
           PERFORM PRO-ALL.
           PERFORM SCR-CLRA-RLC.
           PERFORM EDT-KEY-RLC.
           PERFORM EDT-FLD-RLC.
           PERFORM SCR-PUTA.
           MOVE SCR-INST-HCM TO SCR-INST.
           MOVE SCR-CMNP     TO SYS-PROG.
           MOVE SCR-VARI     TO SYS-CMMA.
           MOVE SCR-TCMA     TO SYS-TCMA.
           MOVE SYS-XCTL     TO SYS-CMND.
      *PTC-INI
           IF NOT SCR-OFRM-SRV
      *PTC-FIN
           PERFORM GNS-PRO-SYS.
       XCT-ERR.
           MOVE 'XCTERR    ' TO MSG-COD-MENS.
           MOVE 'GNS'        TO MSG-COD-SIST.
           PERFORM GET-MSG.
           MOVE MSG-GLS-DESC TO SYS-MEN1.
           MOVE SYS-PROG     TO SYS-MEN2.
           MOVE SYS-ABOR     TO SYS-CMND.
      *PTC-INI
           IF NOT SCR-OFRM-SRV
      *PTC-FIN
           PERFORM GNS-PRO-SYS.
       COPY GNSBGGBK.
       FIN-SCR-COM.
           EXIT.

       SCR-MOD SECTION.
       INI-SCR-MOD.
           IF SCR-INST = SCR-INST-HKY
               PERFORM HBL-KEY
               MOVE SCR-INST-GKY TO SCR-INST
               PERFORM SCR-DMSG
           ELSE
           IF SCR-INST = SCR-INST-GKY
                PERFORM SCR-KEY
                IF SCR-STAT NOT = SCR-STAT-ABT
                        PERFORM SCR-TRL
                ELSE
                        PERFORM DESSCRTRL
                        GO TO FIN-SCR-MOD
           ELSE
           IF SCR-INST = SCR-INST-GAB
                PERFORM GET-CON
           ELSE
           IF SCR-INST = SCR-INST-BRW
               MOVE SCR-FFLD TO FRM-FFLD
               PERFORM BRW-SCR-MOD.
           PERFORM DESSCRTRL.
       MSG-SCR-MOD.
           MOVE SPACES TO FRM-MENS.
           PERFORM SCR-MSSG.
       FIN-SCR-MOD.
           EXIT.

       BRW-SCR-MOD SECTION.
       INI-BRW-SCR-MOD.
       FIN-BRW-SCR-MOD.
           EXIT.

       SCR-ING SECTION.
       INI-SCR-ING.
           IF SCR-INST = SCR-INST-HKY
               PERFORM HBL-IKY
               MOVE SCR-INST-GKY TO SCR-INST
      *PTC-INI
               IF NOT SCR-OFRM-SRV
                   PERFORM SCR-DMSG
               ELSE
                   PERFORM SCR-PUTA
      *PTC-FIN
           ELSE
           IF SCR-INST = SCR-INST-GKY
                PERFORM SCR-RST
                PERFORM GET-IKY
                IF NOT FRM-STAT-ABT
                        MOVE SPACES TO FRM-MENS
                        PERFORM FND-KEY
                        IF NOT FIO-STAT-OKS AND
                           FIO-STAT NOT = FIO-STAT-NEX
      *JSS                  PERFORM CLR-FLD-RLC
                            MOVE PGM-LIMPIAR-TODO TO PGM-ICLR
                            PERFORM SCR-TRL
                        ELSE
      *PTC-INI
                        MOVE 'S' TO SCR-IERR
      *PTC-FIN
                        MOVE PGM-LIMPIAR-CAMPOS TO PGM-ICLR
                        IF FRM-MENS NOT > SPACES
                            MOVE 'REGEXI    ' TO MSG-COD-MENS
                            MOVE 'GNS' TO MSG-COD-SIST
                            PERFORM GET-MSG
                            MOVE MSG-GLS-DESC TO FRM-MENS
                            PERFORM SCR-MSSG
                            MOVE SCR-STAT-ABT TO SCR-STAT
                            PERFORM DESSCRTRL
                            GO TO FIN-SCR-ING
                        ELSE
                            PERFORM SCR-MSSG
                            MOVE SCR-STAT-ABT TO SCR-STAT
                            PERFORM DESSCRTRL
                            GO TO FIN-SCR-ING
                ELSE
                        MOVE SPACES TO FRM-MENS
                        PERFORM SCR-MSSG
                        PERFORM DESSCRTRL
                        GO TO FIN-SCR-ING
           ELSE
           IF SCR-INST = SCR-INST-GAB
                PERFORM GET-CON.
           PERFORM DESSCRTRL.
       MSG-SCR-ING.
           MOVE SPACES TO FRM-MENS.
           PERFORM SCR-MSSG.
       FIN-SCR-ING.
           EXIT.

       SCR-ACC SECTION.
       INI-SCR-ACC.
           IF SCR-INST = SCR-INST-HKY
               PERFORM HBL-KEY
               MOVE SCR-INST-GKY TO SCR-INST
               PERFORM SCR-DMSG
           ELSE
           IF SCR-INST = SCR-INST-GKY
                PERFORM SCR-KEY
                IF SCR-STAT NOT = SCR-STAT-ABT
                        PERFORM SCR-TRL
                ELSE
                        PERFORM DESSCRTRL
                        GO TO FIN-SCR-ACC
           ELSE
           IF SCR-INST = SCR-INST-GAB
                PERFORM GET-CON
           ELSE
           IF SCR-INST = SCR-INST-BRW
               MOVE SCR-FFLD TO FRM-FFLD
               PERFORM BRW-SCR-ACC.
           PERFORM DESSCRTRL.
           MOVE SPACES TO FRM-MENS.
           PERFORM SCR-MSSG.
       FIN-SCR-ACC.
           EXIT.

       BRW-SCR-ACC SECTION.
       INI-BRW-SCR-ACC.
       FIN-BRW-SCR-ACC.
           EXIT.

       SCR-ELI SECTION.
       INI-SCR-ELI.
           IF SCR-INST = SCR-INST-HKY
               PERFORM HBL-KEY
               MOVE SCR-INST-GKY TO SCR-INST
               PERFORM SCR-DMSG
           ELSE
           IF SCR-INST = SCR-INST-GKY
                PERFORM SCR-KEY
                IF SCR-STAT NOT = SCR-STAT-ABT
                        PERFORM SCR-TRL
                ELSE
                        PERFORM DESSCRTRL
                        GO TO FIN-SCR-ELI
           ELSE
           IF SCR-INST = SCR-INST-GAB
                PERFORM GET-CON
           ELSE
           IF SCR-INST = SCR-INST-BRW
               MOVE SCR-FFLD TO FRM-FFLD
               PERFORM BRW-SCR-ELI.
           PERFORM DESSCRTRL.
           MOVE SPACES TO FRM-MENS.
           PERFORM SCR-MSSG.
       FIN-SCR-ELI.
           EXIT.

       BRW-SCR-ELI SECTION.
       INI-BRW-SCR-ELI.
       FIN-BRW-SCR-ELI.
           EXIT.

       SCR-ACT SECTION.
       INI-SCR-ACT.
           IF SCR-INST = SCR-INST-HKY
               PERFORM HBL-KEY
               MOVE SCR-INST-GKY TO SCR-INST
               PERFORM SCR-DMSG
           ELSE
           IF SCR-INST = SCR-INST-GKY
                PERFORM SCR-RST
                PERFORM GET-KEY
                IF NOT FRM-STAT-ABT
                        MOVE SPACES TO FRM-MENS
                        PERFORM FND-KEY
                        IF FIO-STAT-OKS
                            MOVE SCR-ACTU-MOD TO SCR-ACTU
                            PERFORM PUT-SCR
                            MOVE PGM-LIMPIAR-TODO TO PGM-ICLR
                            PERFORM SCR-TRL
                        ELSE
                        MOVE PGM-LIMPIAR-CAMPOS TO PGM-ICLR
                        IF FIO-STAT-EOF
                            IF FRM-MENS NOT > SPACES
                                MOVE 'REGEOF    ' TO MSG-COD-MENS
                                MOVE 'GNS' TO MSG-COD-SIST
                                PERFORM GET-MSG
                                MOVE MSG-GLS-DESC TO FRM-MENS
                                PERFORM SCR-MSSG
                                MOVE SCR-STAT-ABT TO SCR-STAT
                                PERFORM DESSCRTRL
                                GO TO FIN-SCR-ACT
                            ELSE
                                PERFORM SCR-MSSG
                                MOVE SCR-STAT-ABT TO SCR-STAT
                                PERFORM DESSCRTRL
                                GO TO FIN-SCR-ACT
                        ELSE
                        IF FIO-STAT = FIO-STAT-NEX
                            IF FRM-MENS NOT > SPACES
                                MOVE 'REGNEX    ' TO MSG-COD-MENS
                                MOVE 'GNS' TO MSG-COD-SIST
                                PERFORM GET-MSG
                                MOVE MSG-GLS-DESC TO FRM-MENS
                                PERFORM SCR-MSSG
                                MOVE SCR-STAT-ABT TO SCR-STAT
                                PERFORM DESSCRTRL
                                GO TO FIN-SCR-ACT
                            ELSE
                                PERFORM SCR-MSSG
                                MOVE SCR-STAT-ABT TO SCR-STAT
                                PERFORM DESSCRTRL
                                GO TO FIN-SCR-ACT
                        ELSE
                            MOVE SCR-ACTU-ING TO SCR-ACTU
      *JSS                  PERFORM CLR-FLD-RLC
                            MOVE PGM-LIMPIAR-TODO TO PGM-ICLR
                            PERFORM SCR-TRL
                ELSE
                        MOVE SPACES TO FRM-MENS
                        PERFORM SCR-MSSG
                        PERFORM DESSCRTRL
                        GO TO FIN-SCR-ACT
           ELSE
           IF SCR-INST = SCR-INST-GAB
                PERFORM GET-CON
           ELSE
           IF SCR-INST = SCR-INST-BRW
               MOVE SCR-FFLD TO FRM-FFLD
               PERFORM BRW-SCR-ACT.
           PERFORM DESSCRTRL.
           MOVE SPACES TO FRM-MENS.
           PERFORM SCR-MSSG.
       FIN-SCR-ACT.
           EXIT.

       BRW-SCR-ACT SECTION.
       INI-BRW-SCR-ACT.
       FIN-BRW-SCR-ACT.
           EXIT.

       SCR-PGM SECTION.
       INI-SCR-PGM.
           IF SCR-INST = SCR-INST-HKY
               PERFORM HBL-KEY
               MOVE SCR-INST-GKY TO SCR-INST
               PERFORM SCR-DMSG
           ELSE
           IF SCR-INST = SCR-INST-GKY
                PERFORM SCR-RST
                PERFORM GET-KEY
                IF FRM-STAT-ABT
                    MOVE SPACES TO FRM-MENS
                    PERFORM SCR-MSSG
                    PERFORM DESSCRTRL
                    GO TO FIN-SCR-PGM
                ELSE
                    MOVE SPACES TO FRM-MENS
                    PERFORM FND-KEY
                    IF FIO-STAT = FIO-STAT-NEX
                        IF FRM-MENS NOT > SPACES
                            MOVE 'REGNEX    ' TO MSG-COD-MENS
                            MOVE 'GNS' TO MSG-COD-SIST
                            PERFORM GET-MSG
                            MOVE MSG-GLS-DESC TO FRM-MENS
                            PERFORM SCR-MSSG
                            MOVE SCR-STAT-ABT TO SCR-STAT
                            PERFORM DESSCRTRL
                            GO TO FIN-SCR-PGM
                        ELSE
                            PERFORM SCR-MSSG
                            MOVE SCR-STAT-ABT TO SCR-STAT
                            PERFORM DESSCRTRL
                            GO TO FIN-SCR-PGM
                    ELSE
                        MOVE PGM-LIMPIAR-TODO TO PGM-ICLR
                        PERFORM SCR-TRL
           ELSE
           IF SCR-INST = SCR-INST-GAB
                PERFORM GET-CON
           ELSE
           IF SCR-INST = SCR-INST-BRW
               MOVE SCR-FFLD TO FRM-FFLD
               PERFORM BRW-SCR-PGM.
       TRL-SCR-PGM.
           PERFORM DESSCRTRL.
           MOVE SPACES TO FRM-MENS.
           PERFORM SCR-MSSG.
       FIN-SCR-PGM.
           EXIT.

       BRW-SCR-PGM SECTION.
       INI-BRW-SCR-PGM.
       FIN-BRW-SCR-PGM.
           EXIT.

       SCR-DMSG SECTION.
       INI-SCR-DMSG.
           IF PGM-ICLR = PGM-NO-LIMPIAR-NADA
               NEXT SENTENCE
           ELSE
           IF PGM-ICLR = PGM-LIMPIAR-TODO
               PERFORM SCR-CLRA-RLC
               PERFORM EDT-KEY-RLC
               PERFORM EDT-FLD-RLC
           ELSE
           IF PGM-ICLR = PGM-LIMPIAR-LLAVES
               PERFORM CLR-KEY-RLC
               PERFORM EDT-KEY-RLC
           ELSE
               PERFORM CLR-FLD-RLC
               PERFORM EDT-FLD-RLC.
           PERFORM SCR-PUTA.
           PERFORM SCR-EXIT.
       FIN-SCR-DMSG.
           EXIT.

       SCR-KEY SECTION.
       INI-SCR-KEY.
           PERFORM SCR-RST.
           PERFORM GET-KEY.
           IF FRM-STAT-ABT
                   MOVE SPACES TO FRM-MENS
                   PERFORM SCR-MSSG
                   GO TO FIN-SCR-KEY.
       FND-SCR-KEY.
           MOVE SPACES TO FRM-MENS.
           PERFORM FND-KEY.
           IF FIO-STAT-OKS
               PERFORM PUT-SCR
               MOVE PGM-LIMPIAR-TODO TO PGM-ICLR
               GO TO FIN-SCR-KEY.
      *JSS ELSE
      *        PERFORM CLR-FLD-RLC.
       ERR-SCR-KEY.
      *PTC-INI
           MOVE 'S' TO SCR-IERR.
      *PTC-FIN
           MOVE PGM-LIMPIAR-CAMPOS TO PGM-ICLR.
           IF FRM-MENS NOT > SPACES
               IF FIO-STAT-EOF
                   MOVE 'REGEOF    ' TO MSG-COD-MENS
                   MOVE 'GNS' TO MSG-COD-SIST
                   PERFORM GET-MSG
                   MOVE MSG-GLS-DESC TO FRM-MENS
               ELSE
               IF FIO-STAT = FIO-STAT-NEX
                   MOVE 'REGNEX    ' TO MSG-COD-MENS
                   MOVE 'GNS' TO MSG-COD-SIST
                   PERFORM GET-MSG
                   MOVE MSG-GLS-DESC TO FRM-MENS
               ELSE
                   MOVE 'FIOSTAT' TO MSG-COD-TMSG
                   MOVE FIO-STAT  TO MSG-COD-CMSG
                   MOVE 'GNS'     TO MSG-COD-SIST
                   PERFORM GET-MSG
                   MOVE MSG-GLS-DESC TO FRM-MENS.
           PERFORM SCR-MSSG.
           MOVE SCR-STAT-ABT TO SCR-STAT.
       FIN-SCR-KEY.
           EXIT.

       SCR-RST SECTION.
       INI-SCR-RST.
           MOVE SPACES       TO PGM-ICLR.
           MOVE SPACES       TO SCR-ACTU.
           MOVE SCR-STPP     TO SCR-STAT.
           MOVE SCR-MFLD-NOT TO SCR-MFLD.
           MOVE LOW-VALUES   TO RLC-FLD.
           MOVE LOW-VALUES TO RLC-EDT.
       FIN-SCR-RST.
           EXIT.

       GET-KEY SECTION.
       INI-GET-KEY.
           PERFORM SCR-GKEY.
           IF FRM-STAT-ABT
               MOVE SCR-STAT-ABT TO SCR-STAT.
       FIN-GET-KEY.
           EXIT.

       GET-IKY SECTION.
       INI-GET-IKY.
           PERFORM SCR-GIKY.
           IF FRM-STAT-ABT
               MOVE SCR-STAT-ABT TO SCR-STAT.
       FIN-GET-IKY.
           EXIT.

       FND-KEY SECTION.
       INI-FND-KEY.
      *<<<<

           PERFORM KEY-ALL-RLC.
           IF RLC-CAI-ICLF IN RLC-FLD NOT > SPACES AND                  
              RLC-IIC-ICLF IN RLC-FLD NOT > ZEROES AND                  
              RLC-CAI-IOPC IN RLC-FLD > SPACES AND                      
              RLC-IIC-IOPC IN RLC-FLD > ZEROES                          
              MOVE 'RLC-KEY-IOPC' TO FIO-AKEY                           
           ELSE
              IF RLC-CAI-IOPC IN RLC-FLD NOT > SPACES AND               
                 RLC-IIC-IOPC IN RLC-FLD NOT > ZEROES                   
                 MOVE FIO-GET-NLS TO FIO-CMND                           
                 PERFORM LDC-FIO-RLC
                 IF FIO-STAT-OKS AND
                    RLC-CAI-ICLF IN RLC-FLD = RLC-CAI-ICLF IN RLC AND
                    RLC-IIC-ICLF IN RLC-FLD = RLC-IIC-ICLF IN RLC
                    MOVE RLC-STP-ITRN IN RLC TO SCR-UMOD
                    MOVE RLC-CAI-IOPC IN RLC TO RLC-CAI-IOPC IN RLC-FLD
                    MOVE RLC-IIC-IOPC IN RLC TO RLC-IIC-IOPC IN RLC-FLD
                    MOVE RLC-NUM-IOPC IN RLC TO RLC-NUM-IOPC IN RLC-FLD
                    GO TO RLC-FND-KEY.

      *>>>>
           PERFORM KEY-ALL-RLC.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM LDC-FIO-RLC.
           IF FIO-STAT-OKS
               MOVE RLC-STP-ITRN IN RLC TO SCR-UMOD.
           MOVE FIO-STAT TO PGM-STAT-RLC.
      *<<<< FIN_FND_KEY
       RLC-FND-KEY.
           MOVE FIO-STAT TO PGM-STAT-RLC.
           IF (SCR-CCPP = 'ING') OR (SCR-CCPP = 'ACT' AND               
               NOT PGM-STAT-RLC-OKS)                                    
               PERFORM BUS-ENT-ANEX                                     
               IF WSS-IFIN = 'S'                                        
                   GO TO FIN-FND-KEY.                                   
           IF SCR-CMND = 'ELI' AND PGM-STAT-RLC-OKS AND
               RLC-MSC-STAT IN RLC NOT = 'I'
               MOVE 'DEU' TO MSG-COD-SIST
               MOVE 'CMNDELINEX' TO MSG-COD-MENS
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS
               MOVE '00' TO FIO-STAT
               MOVE SCR-STAT-CON TO SCR-STAT
               GO TO FIN-FND-KEY.
           MOVE PGM-STAT-RLC TO FIO-STAT.
      *>>>>
       FIN-FND-KEY.
           IF FIO-STAT = FIO-STAT-NEX
               MOVE 'S' TO SCR-IERR.
       EXT-FND-KEY.
           EXIT.
 
       PUT-SCR SECTION.
       INI-PUT-SCR.
           IF PGM-STAT-RLC-OKS
               MOVE RLC-STP-ITRN IN RLC TO SCR-UMOD.
           PERFORM PUT-ALL-RLC.
      *<<<<
           PERFORM BUS-ENT-ANEX.
           PERFORM PUT-ALL-RLC.
      *>>>>
       FIN-PUT-SCR.
           EXIT.

       STP-EXIT SECTION.
       INI-STP-EXIT.
           MOVE SCR-PROG TO PGM-PROG.
           MOVE SCR-NTRN TO PGM-NTRN.

           MOVE SCR-PROV TO SCR-PROG.
           MOVE SCR-NTRV TO SCR-NTRN.

           MOVE PGM-PROG TO SCR-PROV
           MOVE PGM-NTRN TO SCR-NTRV.
       FIN-STP-EXIT.
           EXIT.

       SCR-EXIT SECTION.
       INI-SCR-EXIT.
           MOVE 'P'      TO SCR-ICMN.
           MOVE SCR-NTRN TO SYS-NTRN.
           MOVE SCR-VARI TO SYS-CMMA.
           MOVE SCR-TCMA TO SYS-TCMA.
           MOVE SYS-RTRN TO SYS-CMND.
      *PTC-INI
           IF NOT SCR-OFRM-SRV
      *PTC-FIN
           PERFORM GNS-PRO-SYS.
       FIN-SCR-EXIT.
           EXIT.

       SCR-PUTA SECTION.
       INI-SCR-PUTA.
      *PTC-INI
           IF FRM-SUAR EQUAL FRM-SUAR-MAL OR FRM-SUAR-CLR
               MOVE 'S' TO SCR-IERR.
      *PTC-FIN
           MOVE SCR-NMAP TO FRM-NAME.
           MOVE SCR-NLIB TO FRM-NLIB.
           MOVE RLC-FLD TO FRM-DFLD.
           MOVE FRM-PUT-ALL TO FRM-CMND.
           PERFORM GNS-PRO-FRM.
       FIN-SCR-PUTA.
           EXIT.

       SCR-MSSG SECTION.
       INI-SCR-MSSG.
           IF FRM-MEN1 NOT > SPACES
               MOVE SPACES TO FRM-MEN1.
           IF FRM-MEN2 NOT > SPACES
               MOVE SPACES TO FRM-MEN2.
           MOVE FRM-MENS TO RLC-GLS-MENS.
       FIN-SCR-MSSG.
           EXIT.

       SCR-GKEY SECTION.
       INI-SCR-GKEY.
           MOVE SCR-NMAP TO FRM-NAME.
           MOVE SCR-NLIB TO FRM-NLIB.
           MOVE FRM-GET-ALL TO FRM-CMND.
           PERFORM GNS-PRO-FRM.
           MOVE SPACES TO FRM-MENS.
           IF NOT ( FRM-FFLD = FRM-FFLD-RET  OR FRM-FFLD-PF10 OR
                               FRM-FFLD-PF12 OR FRM-FFLD-PF3 )
               MOVE 'PFSINV    ' TO MSG-COD-MENS
               MOVE 'GNS' TO MSG-COD-SIST
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS
               PERFORM FST-KEY-RLC
               PERFORM SCR-MSSG
               PERFORM SCR-PUTA
               PERFORM SCR-EXIT.
           MOVE FRM-DFLD TO RLC-FLD.
           IF FRM-STAT-ABT
               GO TO FIN-SCR-GKEY.
           MOVE FRM-SUAR-OKS TO FRM-SUAR.
           PERFORM VAL-NUM-KEY-RLC.
           IF FRM-SUAR EQUAL FRM-SUAR-MAL OR FRM-SUAR-CLR
      *PTC-INI
               MOVE 'S' TO SCR-IERR
      *PTC-FIN
               PERFORM SCR-MSSG
               PERFORM EDT-KEY-RLC
               PERFORM SCR-PUTA
               PERFORM SCR-EXIT.
      *JSS
           PERFORM CLR-FLD-RLC.
           PERFORM VAL-IKY-RLC.
           IF FRM-SUAR EQUAL FRM-SUAR-MAL OR FRM-SUAR-CLR
               GO TO ERR-SCR-GKEY.
           PERFORM VAL-MKY-RLC.
           IF FRM-SUAR EQUAL FRM-SUAR-MAL OR FRM-SUAR-CLR
               GO TO ERR-SCR-GKEY.
           PERFORM VAL-AKY-RLC.
           IF FRM-SUAR EQUAL FRM-SUAR-MAL OR FRM-SUAR-CLR
               GO TO ERR-SCR-GKEY.
           PERFORM VAL-CON-KEY-RLC.
           IF NOT ( FRM-SUAR EQUAL FRM-SUAR-MAL OR FRM-SUAR-CLR )
               GO TO FIN-SCR-GKEY.
           IF FRM-UCUR NOT > SPACES
               PERFORM FST-KEY-RLC.
       ERR-SCR-GKEY.
      *PTC-INI
           MOVE 'S' TO SCR-IERR.
      *PTC-FIN
           PERFORM SCR-MSSG.
           PERFORM EDT-KEY-RLC.
           PERFORM SCR-PUTA.
           PERFORM SCR-EXIT.
       FIN-SCR-GKEY.
           PERFORM SCR-MSSG.

       SCR-GIKY SECTION.
       INI-SCR-GIKY.
           MOVE SCR-NMAP TO FRM-NAME.
           MOVE SCR-NLIB TO FRM-NLIB.
           MOVE FRM-GET-ALL TO FRM-CMND.
           PERFORM GNS-PRO-FRM.
           MOVE SPACES TO FRM-MENS.
           IF NOT ( FRM-FFLD = FRM-FFLD-RET  OR FRM-FFLD-PF10 OR
                               FRM-FFLD-PF12 OR FRM-FFLD-PF3 )
               MOVE 'PFSINV    ' TO MSG-COD-MENS
               MOVE 'GNS' TO MSG-COD-SIST
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS
               PERFORM FST-KEY-RLC
               PERFORM SCR-MSSG
               PERFORM SCR-PUTA
               PERFORM SCR-EXIT.
           MOVE FRM-DFLD TO RLC-FLD.
           IF FRM-STAT-ABT
               GO TO FIN-SCR-GIKY.
           MOVE FRM-SUAR-OKS TO FRM-SUAR.
           PERFORM VAL-NUM-KEY-RLC.
           IF FRM-SUAR EQUAL FRM-SUAR-MAL OR FRM-SUAR-CLR
      *PTC-INI
               MOVE 'S' TO SCR-IERR
      *PTC-FIN
               PERFORM SCR-MSSG
               PERFORM EDT-IKY-RLC
               PERFORM SCR-PUTA
               PERFORM SCR-EXIT.
      *JSS
           PERFORM CLR-FLD-RLC.
           PERFORM VAL-IKY-RLC.
           IF FRM-SUAR EQUAL FRM-SUAR-MAL OR FRM-SUAR-CLR
               GO TO ERR-SCR-GIKY.
           PERFORM VAL-CON-IKY-RLC.
           IF NOT ( FRM-SUAR EQUAL FRM-SUAR-MAL OR FRM-SUAR-CLR )
               GO TO FIN-SCR-GIKY.
           IF FRM-UCUR NOT > SPACES
               PERFORM FST-KEY-RLC.
       ERR-SCR-GIKY.
      *PTC-INI
           MOVE 'S' TO SCR-IERR.
      *PTC-FIN
           PERFORM SCR-MSSG.
           PERFORM EDT-IKY-RLC.
           PERFORM SCR-PUTA.
           PERFORM SCR-EXIT.
       FIN-SCR-GIKY.
           PERFORM SCR-MSSG.

       GET-CON SECTION.
       INI-GET-CON.
           MOVE SCR-NMAP TO FRM-NAME.
           MOVE SCR-NLIB TO FRM-NLIB.
           MOVE FRM-GET-ALL TO FRM-CMND.
           PERFORM GNS-PRO-FRM.
           IF NOT ( FRM-FFLD = FRM-FFLD-RET  OR FRM-FFLD-PF10 OR
                               FRM-FFLD-PF12 OR FRM-FFLD-PF3 )
               MOVE 'PFSINV    ' TO MSG-COD-MENS
               MOVE 'GNS' TO MSG-COD-SIST
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO RLC-GLS-MEN2
               MOVE SCR-PRMT     TO RLC-GLS-MEN1
               PERFORM FST-MSG
               PERFORM SCR-PUTA
               PERFORM SCR-EXIT.
           MOVE FRM-DFLD TO RLC-FLD.
       FIN-GET-CON.
           MOVE SCR-STAT-CON TO SCR-STAT.

       CLR-MSG SECTION.
       INI-CLR-MSG.
           MOVE SPACES TO RLC-GLS-MENS.
       FIN-CLR-MSG.
           EXIT.

       HBL-IKY SECTION.
       INI-HBL-IKY.
      *PTC-INI
           IF NOT SCR-OFRM-SRV
      *PTC-FIN
           IF SCR-DESDE-CMN
               MOVE RLC-GLS-MENS TO FRM-MENS
               MOVE LOW-VALUES TO RLC-FLD
      * FLB  7-NOV-1994
               PERFORM CLR-KEY-RLC

               IF FRM-MENS < SPACES
                   MOVE LOW-VALUES TO RLC-GLS-MENS
               ELSE
                   MOVE FRM-MENS TO RLC-GLS-MENS.
           PERFORM PRO-MKY-RLC.
           PERFORM PRO-AKY-RLC.
           PERFORM UNP-IKY-RLC.
           PERFORM FST-KEY-RLC.
       FIN-HBL-IKY.
           EXIT.

       HBL-KEY SECTION.
       INI-HBL-KEY.
      *PTC-INI
           IF NOT SCR-OFRM-SRV
      *PTC-FIN
           IF SCR-DESDE-CMN
               MOVE RLC-GLS-MENS TO FRM-MENS
               MOVE LOW-VALUES TO RLC-FLD
               IF FRM-MENS < SPACES
                   MOVE LOW-VALUES TO RLC-GLS-MENS
               ELSE
                   MOVE FRM-MENS TO RLC-GLS-MENS.
           PERFORM UNP-KEY-RLC.
           PERFORM FST-KEY-RLC.
       FIN-HBL-KEY.
           EXIT.

       HBL-FLD SECTION.
       INI-HBL-FLD.
           PERFORM PRO-IKY-RLC.
           PERFORM PRO-AKY-RLC.
           PERFORM UNP-MKY-RLC.
           PERFORM UNP-FLD-RLC.
           PERFORM FST-FLD-RLC.
      *<<<<
           IF SCR-CMND = 'RBJ'
              MOVE FRM-CPIM-AEY TO FRM-VAL-MLIB-ATR IN RLC-FLD.
           IF SCR-CMND = 'ING'
              MOVE FRM-CPIM-AEY TO RLC-COD-CGTA-ATR IN RLC-FLD
              MOVE FRM-CPIM-AEY TO RLC-COD-DENV-ATR IN RLC-FLD
              MOVE FRM-CPIM-AEY TO FRM-VAL-MLIB-ATR IN RLC-FLD
              MOVE 0            TO RLC-COD-CGTA-LEN IN RLC-FLD
              MOVE -1           TO RLC-NUM-IOPC-LEN IN RLC-FLD.
           IF SCR-CMND = 'LIB'
              MOVE FRM-CPIM-AEY TO RLC-COD-CGTA-ATR IN RLC-FLD
              MOVE FRM-CPIM-AEY TO RLC-COD-DENV-ATR IN RLC-FLD
              MOVE FRM-CPIM-AEY TO RLC-COD-CGAR-ATR IN RLC-FLD
              MOVE FRM-CPIM-AEY TO RLC-COD-DESO-ATR IN RLC-FLD
              MOVE 0            TO RLC-COD-CGTA-LEN IN RLC-FLD
              MOVE -1           TO FRM-VAL-MLIB-LEN IN RLC-FLD
              MOVE FRM-CPIM-UBY TO FRM-VAL-MLIB-ATR IN RLC-FLD.
           IF SCR-CMND = 'ANC'
              MOVE FRM-CPIM-AEY TO RLC-COD-CGTA-ATR IN RLC-FLD
              MOVE FRM-CPIM-AEY TO RLC-COD-DENV-ATR IN RLC-FLD
              MOVE FRM-CPIM-AEY TO RLC-COD-CGAR-ATR IN RLC-FLD
              MOVE FRM-CPIM-AEY TO RLC-COD-DESO-ATR IN RLC-FLD
              MOVE 0            TO RLC-COD-CGTA-LEN IN RLC-FLD
              MOVE -1           TO FRM-VAL-MLIB-LEN IN RLC-FLD
              MOVE FRM-CPIM-UBY TO FRM-VAL-MLIB-ATR IN RLC-FLD.

      *>>>>
       FIN-HBL-FLD.
           EXIT.

       FST-MSG SECTION.
       INI-FST-MSG.
           MOVE -1 TO RLC-GLS-MENS-LEN.
       FIN-FST-MSG.
           EXIT.

       PRO-ALL SECTION.
       INI-PRO-ALL.
           PERFORM PRO-KEY-RLC.
           PERFORM FST-MSG.
       FIN-PRO-ALL.
           EXIT.

       SCR-TRL SECTION.
       INI-SCR-TRL.
      *PTC-INI
           IF SCR-STAT NOT = SCR-STPP
               MOVE 'S' TO SCR-IERR.
      *PTC-FIN
           IF FRM-MEN1 NOT > SPACES
               MOVE SCR-PRMT TO FRM-MEN1.
           IF SCR-STAT = SCR-STAT-MOD
               PERFORM HBL-FLD
               PERFORM SCR-MSSG
               PERFORM EDT-KEY-RLC
               PERFORM EDT-FLD-RLC
               PERFORM SCR-PUTA
               PERFORM STP-EXIT
               MOVE SCR-INST-GFL TO SCR-INST
               PERFORM SCR-EXIT.
           IF SCR-STAT = SCR-STAT-SON
               PERFORM PRO-ALL
               PERFORM SCR-MSSG
               PERFORM EDT-KEY-RLC
               PERFORM EDT-FLD-RLC
               PERFORM SCR-PUTA
               PERFORM STP-EXIT
               MOVE SCR-INST-GCS TO SCR-INST
               PERFORM SCR-EXIT.
      *ASUME SCR-STAT-CON.
           MOVE SCR-STAT-CON TO SCR-STAT.
      *    MOVE FRM-CPSF-AEY TO FRM-CPIM-AEY.
           PERFORM PRO-ALL.
           PERFORM SCR-MSSG.
           PERFORM EDT-KEY-RLC.
           PERFORM EDT-FLD-RLC.
           PERFORM SCR-PUTA.
           MOVE SCR-INST-GAB TO SCR-INST.
           PERFORM SCR-EXIT.
       FIN-SCR-TRL.
           EXIT.

       DESSCRTRL SECTION.
       INI-DESSCRTRL.
           MOVE SCR-VFLD-NOT TO SCR-VFLD.
           MOVE FRM-FFLD TO SCR-FFLD.
       FIN-DESSCRTRL.
           IF SCR-FFLD-PF10 OR SCR-FFLD-PF3
                 MOVE SCR-INST-HCM TO SCR-INST
           ELSE
                 MOVE SCR-INST-HKY TO SCR-INST.
       EXT-DESSCRTRL.
           EXIT.

      * PGM-EBR-ALL SECTION.
      * INI-PGM-EBR-ALL.
      *     MOVE 'GNS' TO FIO-SIST.
      *     MOVE FIO-EBR-ALL TO FIO-CMND.
      *     PERFORM GNS-FIO-TAB.
      * FIN-PGM-EBR-ALL.
      *     EXIT.

       COPY LDCBQRLC.
       COPY GNSBVNUM.
       COPY LDCBFRLC.
       COPY GNSBFMSG.
       COPY GNSBGSYS.
       COPY GNSBGDTC.
      *PTC-INI
      *PTC-SUB
      * ISP  10-MAY-2001 13:46:35 
      * COPY GNSBGFRM.
       COPY GNSBG3CF.
      *PTC-FIN
       COPY GNSBGMSG.
       COPY GNSBEKEY.
       COPY GNSBIABT.
       COPY GNSBFTAB.
       COPY GNSBVIND.
       COPY GNSBVMSC.
       COPY GNSBFMSC.
       COPY GNSBVIDC.
       COPY GNSBPVRF.
       COPY GNSBEGLS.
       COPY GNSBGFEC.
       COPY GNSBGHOY.
      *PTC-INI
       COPY GNSBGQUE.
       COPY GNSBGTSK.
      *PTC-FIN

      *<<<< EOF
       COPY GNSBBTAB.
       COPY GNSBGCPT.
       COPY SGCBFDBC.
       COPY LDCBFLDC.
       COPY COLBFOPC.
       COPY COLBFRDC.
       COPY TABBFCAM.
       COPY LDCBFLCC.
       COPY LDCBFRDC REPLACING RDC BY RDL
                    ==ADR-RDC-REQA== BY ==ADR-RDL-REQA==.
       COPY LDCBFCLF.
       COPY LDCBFACG.
       COPY LDCBFACL.
      *>>>>
      *<<<< EOF_PQ
       COPY GNSBGPES.
       BUS-ENT-ANEX SECTION.
       INI-BUS-ENT-ANEX.
           MOVE RLC-CAI-ICLF IN RLC TO CLF-CAI-ICLF IN CLF.             
           MOVE RLC-IIC-ICLF IN RLC TO CLF-IIC-ICLF IN CLF.             
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM LDC-FIO-CLF.
           IF NOT FIO-STAT-OKS
               MOVE 'DEU' TO MSG-COD-SIST                               
               MOVE 'CLF    NOEXI' TO MSG-COD-MENS                      
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS
               MOVE '00' TO FIO-STAT
               MOVE SCR-STAT-CON TO SCR-STAT
               MOVE 'S'          TO WSS-IFIN
               GO TO FIN-BUS-ENT-ANEX
           ELSE
               MOVE 'DEU'                  TO FIO-SIST
               MOVE 'CNT'                  TO TAB-COD-TTAB IN TAB
               MOVE CLF-COD-TOCF IN CLF    TO TAB-COD-CTAB IN TAB
               MOVE FIO-GET-KEY            TO FIO-CMND
               PERFORM GNS-FIO-TAB
               IF NOT (FIO-STAT-OKS AND TAB-IND-VIGE IN TAB = 'S')
                 MOVE 'DEU'             TO MSG-COD-SIST
                 MOVE 'TIONOCONST'      TO MSG-COD-MENS
                 PERFORM GET-MSG
                 MOVE MSG-GLS-DESC TO FRM-MENS
                 MOVE '00' TO FIO-STAT
                 MOVE SCR-STAT-CON TO SCR-STAT
                 MOVE 'S'          TO WSS-IFIN
                 GO TO FIN-BUS-ENT-ANEX.

           IF CLF-MSC-STAT IN CLF = 'I' OR
              CLF-MSC-STAT IN CLF = 'T' OR
              CLF-MSC-STAT IN CLF = 'R'
               MOVE 'DEU' TO MSG-COD-SIST                               
               MOVE 'CLF    NOACA' TO MSG-COD-MENS                      
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS
               MOVE '00' TO FIO-STAT
               MOVE SCR-STAT-CON TO SCR-STAT
               MOVE 'S'          TO WSS-IFIN
               GO TO FIN-BUS-ENT-ANEX.

           MOVE CLF-NUM-SAPE IN CLF TO WSS-NUM-SRLC IN CMA-VARI.
           MOVE CLF-NUM-AAPE IN CLF TO WSS-NUM-ARLC IN CMA-VARI.
           MOVE CLF-NUM-MAPE IN CLF TO WSS-NUM-MRLC IN CMA-VARI.
           MOVE CLF-NUM-DAPE IN CLF TO WSS-NUM-DRLC IN CMA-VARI.

           MOVE CLF-CIC-ICLF IN CLF TO LCC-CIC-ICLF IN LCC.
           MOVE RLC-NUM-ILDC IN RLC TO LCC-NUM-ILCC IN LCC.
           MOVE FIO-GET-KEY         TO FIO-CMND.
           PERFORM LDC-FIO-LCC.
           IF NOT FIO-STAT-OKS
      *        RLC NO TIENE LCC ASOCIADO
               MOVE 'DEU' TO MSG-COD-SIST
               MOVE 'LCC    NEX' TO MSG-COD-MENS
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS
               MOVE '00' TO FIO-STAT
               MOVE SCR-STAT-CON TO SCR-STAT
               MOVE 'S'          TO WSS-IFIN
               GO TO FIN-BUS-ENT-ANEX.

           IF LCC-VAL-MADJ IN LCC NOT > ZEROES  AND
              SCR-CMND = 'ING'
               MOVE 'DEU' TO MSG-COD-SIST
               MOVE 'MLIB NO> 0' TO MSG-COD-MENS
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS
               MOVE '00' TO FIO-STAT
               MOVE SCR-STAT-CON TO SCR-STAT
               MOVE 'S'          TO WSS-IFIN
               GO TO FIN-BUS-ENT-ANEX.

           MOVE LCC-CAI-ICLF IN LCC TO LDC-CAI-ICLF IN LDC.
           MOVE LCC-IIC-ICLF IN LCC TO LDC-IIC-ICLF IN LDC.
           MOVE RLC-NUM-ILDC IN RLC TO LDC-NUM-ILDC IN LDC.
           MOVE FIO-GET-KEY    TO FIO-CMND.
           PERFORM LDC-FIO-LDC.
           IF NOT FIO-STAT-OKS
      *        LDC no tiene CLF asociado
               MOVE 'DEU' TO MSG-COD-SIST
               MOVE 'LDC    NEX' TO MSG-COD-MENS
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS
               MOVE '00' TO FIO-STAT
               MOVE SCR-STAT-CON TO SCR-STAT
               MOVE 'S'          TO WSS-IFIN
               GO TO FIN-BUS-ENT-ANEX.

           IF LDC-MSC-STAT IN LDC = 'R'
               MOVE 'DEU' TO MSG-COD-SIST
               MOVE 'LDC    REC' TO MSG-COD-MENS
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS
               MOVE '00' TO FIO-STAT
               MOVE SCR-STAT-CON TO SCR-STAT
               MOVE 'S'          TO WSS-IFIN
               GO TO FIN-BUS-ENT-ANEX.

      * EVA-INI   ABR-2009  MANTENCION INGRESO RLC
           IF LDC-MSC-STAT IN LDC = 'I'
               MOVE 'DEU' TO MSG-COD-SIST
               MOVE 'LDC NO ACA' TO MSG-COD-MENS
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS
               MOVE '00' TO FIO-STAT
               MOVE SCR-STAT-CON TO SCR-STAT
               MOVE 'S'          TO WSS-IFIN
               GO TO FIN-BUS-ENT-ANEX.
      * EVA-FIN   ABR-2009  MANTENCION INGRESO RLC

           MOVE LDC-COD-VCLC IN LDC TO WSS-COD-VCAM IN CMA-VARI.
           MOVE LDC-NUM-SINI IN LDC TO WSS-NUM-SIDE IN CMA-VARI.
           MOVE LDC-NUM-AINI IN LDC TO WSS-NUM-AIDE IN CMA-VARI.
           MOVE LDC-NUM-MINI IN LDC TO WSS-NUM-MIDE IN CMA-VARI.
           MOVE LDC-NUM-DINI IN LDC TO WSS-NUM-DIDE IN CMA-VARI.

           COMPUTE WSS-VAL-DISP IN WSS-VARI =
                   LCC-VAL-MADJ IN LCC -
                   LCC-VAL-MUTI IN LCC.

           MOVE CLF-CAI-ICLF IN CLF TO RDC-CAI-ICLF IN RDL.
           MOVE CLF-IIC-ICLF IN CLF TO RDC-IIC-ICLF IN RDL.
           MOVE 'RDC-KEY-ICLF' TO FIO-AKEY.
           MOVE FIO-GET-NLS    TO FIO-CMND.
           PERFORM LDC-FIO-RDC.
           IF NOT FIO-STAT-OKS
      *        CLF no tiene RDC asociado
               MOVE 'DEU'         TO MSG-COD-SIST
               MOVE 'RDC    NEX'  TO MSG-COD-MENS
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC  TO FRM-MENS
               MOVE '00'          TO FIO-STAT
               MOVE SCR-STAT-CON  TO SCR-STAT
               MOVE 'S'           TO WSS-IFIN
               GO TO FIN-BUS-ENT-ANEX.

           MOVE RDC-CIC-ICLI IN RDL TO WSS-CIC-ICLI IN WSS-VARI.

           MOVE RDC-CIC-ICLI IN RDL  TO DBC-CIC-ICLI IN DBC.
           MOVE FIO-GET-KEY  TO FIO-CMND.
           PERFORM SGC-FIO-DBC.
           IF NOT FIO-STAT-OKS
      *     RDC NO TIENE DBC ASOCIADO
               MOVE 'DEU'         TO MSG-COD-SIST
               MOVE 'DBC    NEX'  TO MSG-COD-MENS
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC  TO FRM-MENS
               MOVE '00'          TO FIO-STAT
               MOVE SCR-STAT-CON  TO SCR-STAT
               MOVE 'S'           TO WSS-IFIN
               GO TO FIN-BUS-ENT-ANEX.

           MOVE DBC-GLS-NOMC IN DBC  TO CPT-STRN.
           PERFORM CPT-BLKS.
           MOVE CPT-STRN TO DBC-GLS-NOMC IN DBC.

           MOVE LDC-COD-TIPO IN LDC TO WSS-COD-LTIP IN WSS-VARI.
           MOVE LDC-COD-TIPO IN LDC TO FRM-COD-TIPO IN RLC-FLD.
           MOVE LDC-GLS-DESC IN LDC TO FRM-GLS-DESC IN RLC-FLD.
           MOVE DBC-GLS-NOMC IN DBC TO FRM-GLS-NOMB IN RLC-FLD.
           MOVE DBC-NUM-ICLI IN DBC TO FRM-NUM-CLIE IN RLC-FLD.
           MOVE DBC-IND-ICLI IN DBC TO FRM-IND-CLIE IN RLC-FLD.
           MOVE DBC-GLS-ICLI IN DBC TO FRM-GLS-CLIE IN RLC-FLD.
           MOVE DBC-VRF-ICLI IN DBC TO FRM-VRF-CLIE IN RLC-FLD.


           IF RLC-NUM-IOPC IN RLC-FLD > ZEROES
               PERFORM BUSCA-DAT-LDC
           ELSE
               PERFORM BUSCA-DAT-COL.

           IF WSS-IFIN = 'S'                                            
              GO TO FIN-BUS-ENT-ANEX.                                   

           MOVE FRM-VAL-SOPC IN RLC-FLD TO WSS-VAL-SOPC IN WSS-VARI.
           IF RLC-NUM-IOPC IN RLC NOT > ZEROES
               IF WSS-COD-VCOC IN CMA-VARI NOT = LCC-COD-VCOC IN LCC
                   PERFORM CONVIERTE-VCOC
               ELSE
                    NEXT SENTENCE
           ELSE
               IF WSS-COD-VCOC IN CMA-VARI NOT = LCC-COD-VCOC IN LCC
                   PERFORM CONVIERTE-VCOC.

           IF SCR-CMND NOT = 'ING'
              GO TO NXT-BUS-ENT.

           IF WSS-VAL-DISP IN WSS-VARI < WSS-VAL-SOPC IN WSS-VARI
              MOVE 'DEU'           TO MSG-COD-SIST
              MOVE 'VAL  DIS>MAX' TO MSG-COD-MENS
              PERFORM GET-MSG
              MOVE MSG-GLS-DESC TO FRM-MENS
              MOVE SCR-STAT-CON TO SCR-STAT
              MOVE '00' TO FIO-STAT
              MOVE 'S'          TO WSS-IFIN
              GO TO FIN-BUS-ENT-ANEX.

              COMPUTE WSS-VAL-MACU IN WSS-VARI =
                      WSS-VAL-SOPC IN WSS-VARI +
                      LCC-VAL-MUTI IN LCC.

           IF LCC-VAL-MADJ IN LCC < WSS-VAL-MACU IN WSS-VARI
              MOVE 'DEU'           TO MSG-COD-SIST
              MOVE 'LIB<ACU+OPC ' TO MSG-COD-MENS
              PERFORM GET-MSG
              MOVE MSG-GLS-DESC TO FRM-MENS
              MOVE SCR-STAT-CON TO SCR-STAT
              MOVE '00' TO FIO-STAT
              MOVE 'S'          TO WSS-IFIN
              GO TO FIN-BUS-ENT-ANEX.

           IF WSS-FEC-FOPE IN CMA-VARI NOT > ZEROES
              MOVE 'DEU'         TO MSG-COD-SIST                        
              MOVE 'FEC OPCLDC0' TO MSG-COD-MENS                        
              PERFORM GET-MSG
              MOVE MSG-GLS-DESC TO FRM-MENS
              MOVE SCR-STAT-CON TO SCR-STAT
              MOVE '00' TO FIO-STAT
              MOVE 'S'          TO WSS-IFIN
              GO TO FIN-BUS-ENT-ANEX.

           IF WSS-FEC-FOPE IN CMA-VARI < WSS-FEC-FRLC IN CMA-VARI
              MOVE 'DEU'         TO MSG-COD-SIST                        
              MOVE 'ERR  FECMEN' TO MSG-COD-MENS                        
              PERFORM GET-MSG
              MOVE MSG-GLS-DESC TO FRM-MENS
              MOVE SCR-STAT-CON TO SCR-STAT
              MOVE '00' TO FIO-STAT
              MOVE 'S'          TO WSS-IFIN
              GO TO FIN-BUS-ENT-ANEX.

           IF CLF-MSC-STAT IN CLF = 'C'
      *        LDC eliminada
              MOVE 'DEU'           TO MSG-COD-SIST
              MOVE 'CLF    EXTING' TO MSG-COD-MENS
              PERFORM GET-MSG
              MOVE MSG-GLS-DESC TO FRM-MENS
              MOVE SCR-STAT-CON TO SCR-STAT
              MOVE '00' TO FIO-STAT
              MOVE 'S'          TO WSS-IFIN
              GO TO FIN-BUS-ENT-ANEX.

       NXT-BUS-ENT.
           IF SCR-CCPP = 'ACC' AND SCR-STAT = SCR-STAT-CON
              MOVE PGM-STAT-RLC TO FIO-STAT
              MOVE 'S'          TO WSS-IFIN
              GO TO FIN-BUS-ENT-ANEX.

           IF SCR-CCPP = 'ING'
              MOVE PGM-STAT-RLC TO FIO-STAT
              MOVE 'S'          TO WSS-IFIN
              GO TO FIN-BUS-ENT-ANEX.


       FIN-BUS-ENT-ANEX.
           EXIT.

       BUSCA-DAT-COL SECTION.
       INI-BUSCA-DAT-COL.
           MOVE RLC-CAI-IOPC IN RLC-FLD TO OPC-CAI-IOPC IN OPC.
           MOVE RLC-IIC-IOPC IN RLC-FLD TO OPC-IIC-IOPC IN OPC.
           MOVE FIO-GET-KEY             TO FIO-CMND.
           PERFORM COL-FIO-OPC.
           IF NOT FIO-STAT-OKS
              MOVE 'DEU'           TO MSG-COD-SIST
              MOVE 'OPC     NEX'   TO MSG-COD-MENS
              PERFORM GET-MSG
              MOVE MSG-GLS-DESC TO FRM-MENS
              MOVE SCR-STAT-CON TO SCR-STAT
              MOVE '00' TO FIO-STAT
              MOVE 'S'          TO WSS-IFIN
              GO TO FIN-BUSCA-DAT-COL.

           IF NOT (OPC-MSC-STAT IN OPC = 'A')
              MOVE 'DEU'         TO MSG-COD-SIST                        
              MOVE 'OPC   NOACA' TO MSG-COD-MENS                        
              PERFORM GET-MSG
              MOVE MSG-GLS-DESC TO FRM-MENS
              MOVE SCR-STAT-CON TO SCR-STAT
              MOVE '00' TO FIO-STAT
              MOVE 'S'          TO WSS-IFIN
              GO TO FIN-BUSCA-DAT-COL.

           IF OPC-IND-RENO IN OPC = 'REN' OR
              OPC-IND-RENO IN OPC = 'PRO'
              MOVE 'DEU'         TO MSG-COD-SIST                        
              MOVE 'OPC  ERRREN' TO MSG-COD-MENS                        
              PERFORM GET-MSG
              MOVE MSG-GLS-DESC TO FRM-MENS
              MOVE SCR-STAT-CON TO SCR-STAT
              MOVE '00' TO FIO-STAT
              MOVE 'S'          TO WSS-IFIN
              GO TO FIN-BUSCA-DAT-COL.

           MOVE 'DEU'          TO FIO-SIST.                             
           MOVE 'VSN'          TO TAB-COD-TTAB IN TAB.                  
           MOVE 'LDC  OPC/LDC' TO TAB-COD-CTAB IN TAB.                  
           MOVE FIO-GET-KEY TO FIO-CMND.                                
           PERFORM GNS-FIO-TAB.                                         
           IF (FIO-STAT-OKS AND                                         
              TAB-IND-VIGE IN TAB = 'S')                                
              MOVE 'COL'                  TO FIO-SIST                   
              MOVE 'AUX'                  TO TAB-COD-TTAB IN TAB        
              MOVE OPC-COD-COOC IN OPC    TO TAB-COD-CTAB IN TAB        
              MOVE FIO-GET-KEY            TO FIO-CMND                   
              PERFORM GNS-FIO-TAB                                       
              IF FIO-STAT-OKS AND                                       
                 TAB-IND-VIGE IN TAB = 'S'                              
                 MOVE TAB-GLS-DATA IN TAB TO WSS-GLS-DAT1 IN WSS-VARI
                 IF NOT (WSS-COD-LTIP IN WSS-VARI =
                    WSS-COD-DATA IN WSS-VARI)
                    MOVE 'DEU'          TO MSG-COD-SIST
                    MOVE 'ERR     TIPO' TO MSG-COD-MENS
                    PERFORM GET-MSG
                    MOVE MSG-GLS-DESC TO FRM-MENS
                    MOVE SCR-STAT-CON TO SCR-STAT
                    MOVE '00' TO FIO-STAT
                    MOVE 'S'          TO WSS-IFIN
                    GO TO FIN-BUSCA-DAT-COL.

           MOVE OPC-NUM-SCOL IN OPC TO WSS-NUM-SIDE IN CMA-VARI.
           MOVE OPC-NUM-ACOL IN OPC TO WSS-NUM-AIDE IN CMA-VARI.
           MOVE OPC-NUM-MCOL IN OPC TO WSS-NUM-MIDE IN CMA-VARI.
           MOVE OPC-NUM-DCOL IN OPC TO WSS-NUM-DIDE IN CMA-VARI.

           MOVE OPC-NUM-SCOL IN OPC TO WSS-NUM-SOPE IN CMA-VARI.
           MOVE OPC-NUM-ACOL IN OPC TO WSS-NUM-AOPE IN CMA-VARI.
           MOVE OPC-NUM-MCOL IN OPC TO WSS-NUM-MOPE IN CMA-VARI.
           MOVE OPC-NUM-DCOL IN OPC TO WSS-NUM-DOPE IN CMA-VARI.

           MOVE OPC-COD-VCOC IN OPC TO WSS-COD-VCOC IN CMA-VARI.

           MOVE OPC-IND-GARA IN OPC TO RLC-COD-CGAR IN RLC-FLD.
           MOVE OPC-COD-CDOC IN OPC TO RLC-COD-DESO IN RLC-FLD.
           MOVE OPC-IND-GARA IN OPC TO RLC-COD-CGAR IN RLC-FLD.
           MOVE OPC-VAL-CRED IN OPC TO FRM-VAL-MOPC IN RLC-FLD.
           MOVE OPC-VAL-SCRE IN OPC TO FRM-VAL-SOPC IN RLC-FLD.


           MOVE OPC-CIC-IOPC IN OPC TO RDC-CIC-IOPC IN RDC.
           MOVE ZEROES              TO RDC-NUM-IDLC IN RDC.
           MOVE 'RDC-KEY-IDLC' TO FIO-AKEY.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM COL-FIO-RDC.
           IF NOT FIO-STAT-OKS
              MOVE 'DEU'           TO MSG-COD-SIST
              MOVE 'OPC SIN CLI'   TO MSG-COD-MENS
              PERFORM GET-MSG
              MOVE MSG-GLS-DESC TO FRM-MENS
              MOVE SCR-STAT-CON TO SCR-STAT
              MOVE '00' TO FIO-STAT
              MOVE 'S'          TO WSS-IFIN
              GO TO FIN-BUSCA-DAT-COL.

           IF SCR-CMND = 'ING' AND
              NOT (RDC-CIC-ICLI IN RDC = WSS-CIC-ICLI IN WSS-VARI)
              MOVE 'DEU'           TO MSG-COD-SIST
              MOVE 'DIF      CIC'  TO MSG-COD-MENS
              PERFORM GET-MSG
              MOVE MSG-GLS-DESC TO FRM-MENS
              MOVE SCR-STAT-CON TO SCR-STAT
              MOVE '00' TO FIO-STAT
              MOVE 'S'          TO WSS-IFIN
              GO TO FIN-BUSCA-DAT-COL.

           MOVE RDC-CIC-ICLI  IN RDC  TO DBC-CIC-ICLI IN DBC.
           MOVE FIO-GET-KEY  TO FIO-CMND.
           PERFORM SGC-FIO-DBC.
           IF NOT FIO-STAT-OKS
              MOVE 'DEU'         TO MSG-COD-SIST
              MOVE 'DBC    NEX'  TO MSG-COD-MENS
              PERFORM GET-MSG
              MOVE MSG-GLS-DESC  TO FRM-MENS
              MOVE '00'          TO FIO-STAT
              MOVE SCR-STAT-CON  TO SCR-STAT
              MOVE 'S'           TO WSS-IFIN
              GO TO FIN-BUSCA-DAT-COL.

           MOVE DBC-GLS-NOMC IN DBC  TO CPT-STRN.
           PERFORM CPT-BLKS.
           MOVE CPT-STRN TO FRM-GLS-NOMC IN RLC-FLD.

           MOVE DBC-NUM-ICLI IN DBC TO FRM-NUM-ICLI IN RLC-FLD.
           MOVE DBC-IND-ICLI IN DBC TO FRM-IND-ICLI IN RLC-FLD.
           MOVE DBC-GLS-ICLI IN DBC TO FRM-GLS-ICLI IN RLC-FLD.
           MOVE DBC-VRF-ICLI IN DBC TO FRM-VRF-ICLI IN RLC-FLD.

           IF SCR-CMND = 'ING'
              MOVE DBC-COD-ACTI IN DBC TO RLC-COD-ACTI IN RLC-FLD.

       FIN-BUSCA-DAT-COL.
           EXIT.

       BUSCA-DAT-LDC SECTION.
       INI-BUSCA-DAT-LDC.
           MOVE RLC-CAI-IOPC IN RLC-FLD TO LDC-CAI-ICLF IN LDC.
           MOVE RLC-IIC-IOPC IN RLC-FLD TO LDC-IIC-ICLF IN LDC.
           MOVE RLC-NUM-IOPC IN RLC-FLD TO LDC-NUM-ILDC IN LDC.
           MOVE FIO-GET-KEY             TO FIO-CMND.
           PERFORM LDC-FIO-LDC.
           IF NOT FIO-STAT-OKS
               MOVE 'DEU'           TO MSG-COD-SIST
               MOVE 'LDC SIN LIC'   TO MSG-COD-MENS
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS
               MOVE SCR-STAT-CON TO SCR-STAT
               MOVE '00' TO FIO-STAT
               MOVE 'S'          TO WSS-IFIN
               GO TO FIN-BUSCA-DAT-LDC.

           MOVE 'DEU'          TO FIO-SIST.                             
           MOVE 'VSN'          TO TAB-COD-TTAB IN TAB.                  
           MOVE 'LDC  OPC/LDC' TO TAB-COD-CTAB IN TAB.                  
           MOVE FIO-GET-KEY TO FIO-CMND.                                
           PERFORM GNS-FIO-TAB.                                         
           IF (FIO-STAT-OKS AND                                         
              TAB-IND-VIGE IN TAB = 'S')                                
              IF NOT (LDC-COD-TIPO IN LDC =
                 WSS-COD-LTIP IN WSS-VARI)
                 MOVE 'DEU'          TO MSG-COD-SIST
                 MOVE 'ERR     TIPO' TO MSG-COD-MENS
                 PERFORM GET-MSG
                 MOVE MSG-GLS-DESC TO FRM-MENS
                 MOVE SCR-STAT-CON TO SCR-STAT
                 MOVE '00' TO FIO-STAT
                 MOVE 'S'          TO WSS-IFIN
                 GO TO FIN-BUSCA-DAT-LDC.

           MOVE SPACES              TO RLC-COD-DESO IN RLC-FLD.
           MOVE SPACES              TO RLC-COD-CGAR IN RLC-FLD.
           MOVE LDC-VAL-CMAX IN LDC TO FRM-VAL-MOPC IN RLC-FLD.
           MOVE LDC-VAL-CMAX IN LDC TO FRM-VAL-SOPC IN RLC-FLD.

           MOVE LDC-NUM-SINI IN LDC TO WSS-NUM-SIDE IN CMA-VARI.
           MOVE LDC-NUM-AINI IN LDC TO WSS-NUM-AIDE IN CMA-VARI.
           MOVE LDC-NUM-MINI IN LDC TO WSS-NUM-MIDE IN CMA-VARI.
           MOVE LDC-NUM-DINI IN LDC TO WSS-NUM-DIDE IN CMA-VARI.

           MOVE LDC-NUM-SINI IN LDC TO WSS-NUM-SOPE IN CMA-VARI.
           MOVE LDC-NUM-AINI IN LDC TO WSS-NUM-AOPE IN CMA-VARI.
           MOVE LDC-NUM-MINI IN LDC TO WSS-NUM-MOPE IN CMA-VARI.
           MOVE LDC-NUM-DINI IN LDC TO WSS-NUM-DOPE IN CMA-VARI.

           MOVE LDC-COD-VCLC IN LDC TO WSS-COD-VCOC IN CMA-VARI.
           MOVE LDC-COD-TIPO IN LDC TO WSS-IND-TIPO IN WSS-VARI.

           MOVE LDC-CAI-ICLF IN LDC TO CLF-CAI-ICLF IN CLF.
           MOVE LDC-IIC-ICLF IN LDC TO CLF-IIC-ICLF IN CLF.
           MOVE FIO-GET-KEY         TO FIO-CMND.
           PERFORM LDC-FIO-CLF.
           IF NOT FIO-STAT-OKS
              MOVE 'DEU' TO MSG-COD-SIST
              MOVE 'CLF    NEX' TO MSG-COD-MENS
              PERFORM GET-MSG
              MOVE MSG-GLS-DESC TO FRM-MENS
              MOVE '00' TO FIO-STAT
              MOVE SCR-STAT-CON TO SCR-STAT
              MOVE 'S'          TO WSS-IFIN
              GO TO FIN-BUSCA-DAT-LDC.

           IF CLF-MSC-STAT IN CLF = 'I' OR
              CLF-MSC-STAT IN CLF = 'T' OR
              CLF-MSC-STAT IN CLF = 'R'
              MOVE 'DEU' TO MSG-COD-SIST                                
              MOVE 'CLF    NOACA' TO MSG-COD-MENS                       
              PERFORM GET-MSG
              MOVE MSG-GLS-DESC TO FRM-MENS
              MOVE '00' TO FIO-STAT
              MOVE SCR-STAT-CON TO SCR-STAT
              MOVE 'S'          TO WSS-IFIN
              GO TO FIN-BUSCA-DAT-LDC.

           MOVE LDC-CAI-ICLF IN LDC TO RDC-CAI-ICLF IN RDL.
           MOVE LDC-IIC-ICLF IN LDC TO RDC-IIC-ICLF IN RDL.
           MOVE 'RDC-KEY-ICLF' TO FIO-AKEY.
           MOVE FIO-GET-NLS    TO FIO-CMND.
           PERFORM LDC-FIO-RDC.
            IF NOT ( FIO-STAT-OKS AND
               LDC-CAI-ICLF IN LDC = RDC-CAI-ICLF IN RDL AND
               LDC-IIC-ICLF IN LDC = RDC-IIC-ICLF IN RDL )
                MOVE 'DEU'         TO MSG-COD-SIST
                MOVE 'RDC    NEX'  TO MSG-COD-MENS
                PERFORM GET-MSG
                MOVE MSG-GLS-DESC  TO FRM-MENS
                MOVE '00'          TO FIO-STAT
                MOVE SCR-STAT-CON  TO SCR-STAT
                MOVE 'S'           TO WSS-IFIN
                GO TO FIN-BUSCA-DAT-LDC.

           IF SCR-CMND = 'ING' AND
              NOT (RDC-CIC-ICLI IN RDL = WSS-CIC-ICLI IN WSS-VARI)
              MOVE 'DEU'           TO MSG-COD-SIST
              MOVE 'DIF      CIC'  TO MSG-COD-MENS
              PERFORM GET-MSG
              MOVE MSG-GLS-DESC TO FRM-MENS
              MOVE SCR-STAT-CON TO SCR-STAT
              MOVE '00' TO FIO-STAT
              MOVE 'S'          TO WSS-IFIN
              GO TO FIN-BUSCA-DAT-LDC.

           MOVE RDC-CIC-ICLI  IN RDL  TO DBC-CIC-ICLI IN DBC.
           MOVE FIO-GET-KEY  TO FIO-CMND.
           PERFORM SGC-FIO-DBC.
           IF NOT FIO-STAT-OKS
              MOVE 'DEU'         TO MSG-COD-SIST
              MOVE 'DBC    NEX'  TO MSG-COD-MENS
              PERFORM GET-MSG
              MOVE MSG-GLS-DESC  TO FRM-MENS
              MOVE '00'          TO FIO-STAT
              MOVE SCR-STAT-CON  TO SCR-STAT
              MOVE 'S'           TO WSS-IFIN
              GO TO FIN-BUSCA-DAT-LDC.

           MOVE DBC-GLS-NOMC IN DBC  TO CPT-STRN.
           PERFORM CPT-BLKS.
           MOVE CPT-STRN TO FRM-GLS-NOMC IN RLC-FLD.

           MOVE DBC-NUM-ICLI IN DBC TO FRM-NUM-ICLI IN RLC-FLD.
           MOVE DBC-IND-ICLI IN DBC TO FRM-IND-ICLI IN RLC-FLD.
           MOVE DBC-GLS-ICLI IN DBC TO FRM-GLS-ICLI IN RLC-FLD.
           MOVE DBC-VRF-ICLI IN DBC TO FRM-VRF-ICLI IN RLC-FLD.

           IF SCR-CMND = 'ING'
              MOVE DBC-COD-ACTI IN DBC TO RLC-COD-ACTI IN RLC-FLD.

       FIN-BUSCA-DAT-LDC.
           EXIT.
      *>>>>                                                             
       CONVIERTE-VCOC SECTION.
       INI-CONVIERTE-VCOC.

           IF WSS-COD-VCOC IN CMA-VARI = LCC-COD-VCOC IN LCC
              GO TO FIN-CONVIERTE-VCOC.

           MOVE 'TAB'          TO FIO-SIST.                             
           MOVE 'VLR'          TO TAB-CIC-TTAB IN TAB.                  
           MOVE '0999  '       TO TAB-CIC-CTAB IN TAB.                  
           MOVE 'TAB-CIC-TABL' TO FIO-AKEY.                             
           MOVE FIO-GET-KEY    TO FIO-CMND.                             
           PERFORM GNS-FIO-TAB.                                         
           IF NOT FIO-STAT-OKS                                          
               MOVE 'TAB'          TO MSG-COD-SIST                      
               MOVE 'CIC0999  NEX' TO MSG-COD-MENS                      
               PERFORM GET-MSG                                          
               MOVE MSG-GLS-DESC  TO FRM-MENS
               MOVE '00'          TO FIO-STAT
               MOVE SCR-STAT-CON  TO SCR-STAT
               MOVE 'S'           TO WSS-IFIN
               DISPLAY MSG-GLS-DESC   TAB-CIC-CTAB.                     
                                                                        
           MOVE TAB-COD-CTAB IN TAB TO WSS-COD-PESO IN WSS-VARI.        

           MOVE 'TAB'          TO FIO-SIST.                             
           MOVE 'VLR'          TO TAB-CIC-TTAB IN TAB.                  
           MOVE '0998  '       TO TAB-CIC-CTAB IN TAB.                  
           MOVE 'TAB-CIC-TABL' TO FIO-AKEY.                             
           MOVE FIO-GET-KEY    TO FIO-CMND.                             
           PERFORM GNS-FIO-TAB.                                         
           IF NOT FIO-STAT-OKS                                          
               MOVE 'TAB'          TO MSG-COD-SIST                      
               MOVE 'CIC0998  NEX' TO MSG-COD-MENS                      
               PERFORM GET-MSG                                          
               MOVE MSG-GLS-DESC  TO FRM-MENS
               MOVE '00'          TO FIO-STAT
               MOVE SCR-STAT-CON  TO SCR-STAT
               MOVE 'S'           TO WSS-IFIN
               DISPLAY MSG-GLS-DESC   TAB-CIC-CTAB.                     
                                                                        
           MOVE TAB-COD-CTAB IN TAB TO WSS-COD-UEFE IN WSS-VARI.        

           IF WSS-COD-VCOC IN CMA-VARI = WSS-COD-PESO IN WSS-VARI AND
              LCC-COD-VCOC IN LCC NOT  = WSS-COD-PESO IN WSS-VARI
               MOVE LCC-COD-VCOC IN LCC      TO CAM-COD-VCAM IN CAM(1)  
               MOVE WSS-COD-PESO IN WSS-VARI TO CAM-COD-VCAM IN CAM(2)  
               MOVE WSS-NUM-SIDE IN CMA-VARI TO CAM-NUM-SCAM IN CAM(1)  
               MOVE WSS-NUM-AIDE IN CMA-VARI TO CAM-NUM-ACAM IN CAM(1)  
               MOVE WSS-NUM-MIDE IN CMA-VARI TO CAM-NUM-MCAM IN CAM(1)  
               MOVE WSS-NUM-DIDE IN CMA-VARI TO CAM-NUM-DCAM IN CAM(1)  
               MOVE CAM-FEC-FCAM IN CAM(1)   TO CAM-FEC-FCAM IN CAM(2)  
               MOVE FIO-GET-KEY TO FIO-CMND                             
               PERFORM TAB-FIO-CAM                                      
               IF (NOT FIO-STAT-OKS OR CAM-IND-VIGE IN CAM NOT = 'S')   
                    MOVE 'DEU' TO MSG-COD-SIST
                    MOVE 'CAM    NEX' TO MSG-COD-MENS                   
                    PERFORM GET-MSG
                    MOVE MSG-GLS-DESC  TO FRM-MENS
                    MOVE '00'          TO FIO-STAT
                    MOVE SCR-STAT-CON  TO SCR-STAT
                    MOVE 'S'           TO WSS-IFIN
                    GO TO FIN-CONVIERTE-VCOC
               ELSE
                    COMPUTE WSS-VAL-SOPC IN WSS-VARI ROUNDED =
                    FRM-VAL-SOPC IN RLC-FLD / CAM-SGV-VCAM IN CAM
                    GO TO FIN-CONVIERTE-VCOC.

           IF LCC-COD-VCOC IN LCC      = WSS-COD-PESO IN WSS-VARI AND
              WSS-COD-VCOC IN CMA-VARI NOT = WSS-COD-PESO IN WSS-VARI
               MOVE WSS-COD-VCOC IN CMA-VARI TO CAM-COD-VCAM IN CAM(1)  
               MOVE WSS-COD-PESO IN WSS-VARI TO CAM-COD-VCAM IN CAM(2)  
               MOVE WSS-NUM-SIDE IN CMA-VARI TO CAM-NUM-SCAM IN CAM(1)  
               MOVE WSS-NUM-AIDE IN CMA-VARI TO CAM-NUM-ACAM IN CAM(1)  
               MOVE WSS-NUM-MIDE IN CMA-VARI TO CAM-NUM-MCAM IN CAM(1)  
               MOVE WSS-NUM-DIDE IN CMA-VARI TO CAM-NUM-DCAM IN CAM(1)  
               MOVE CAM-FEC-FCAM IN CAM(1)   TO CAM-FEC-FCAM IN CAM(2)  
               MOVE FIO-GET-KEY TO FIO-CMND                             
               PERFORM TAB-FIO-CAM                                      
               IF (NOT FIO-STAT-OKS OR CAM-IND-VIGE IN CAM NOT = 'S')   
                    MOVE 'DEU' TO MSG-COD-SIST
                    MOVE 'CAM    NEX' TO MSG-COD-MENS                   
                    PERFORM GET-MSG
                    MOVE MSG-GLS-DESC  TO FRM-MENS
                    MOVE '00'          TO FIO-STAT
                    MOVE SCR-STAT-CON  TO SCR-STAT
                    MOVE 'S'           TO WSS-IFIN
                    GO TO FIN-CONVIERTE-VCOC
               ELSE
                    COMPUTE WSS-VAL-SOPC IN WSS-VARI ROUNDED =
                    FRM-VAL-SOPC IN RLC-FLD * CAM-SGV-VCAM IN CAM
                    MOVE WSS-VAL-SOPC IN WSS-VARI TO
                         PES-SGV-DECI IN PES-VARI
                    PERFORM PES-SCTV
                    MOVE PES-SGV-ENTE IN PES-VARI TO
                         WSS-VAL-SOPC IN WSS-VARI
                    GO TO FIN-CONVIERTE-VCOC.

           MOVE WSS-COD-VCOC IN CMA-VARI TO CAM-COD-VCAM IN CAM(1).     
           MOVE WSS-COD-PESO IN WSS-VARI TO CAM-COD-VCAM IN CAM(2).     
           MOVE WSS-NUM-SIDE IN CMA-VARI TO CAM-NUM-SCAM IN CAM(1).     
           MOVE WSS-NUM-AIDE IN CMA-VARI TO CAM-NUM-ACAM IN CAM(1).     
           MOVE WSS-NUM-MIDE IN CMA-VARI TO CAM-NUM-MCAM IN CAM(1).     
           MOVE WSS-NUM-DIDE IN CMA-VARI TO CAM-NUM-DCAM IN CAM(1).     
           MOVE CAM-FEC-FCAM IN CAM(1)   TO CAM-FEC-FCAM IN CAM(2).     
           MOVE FIO-GET-KEY TO FIO-CMND.                                
           PERFORM TAB-FIO-CAM.                                         
           IF (NOT FIO-STAT-OKS OR CAM-IND-VIGE IN CAM NOT = 'S')       
               MOVE 'DEU' TO MSG-COD-SIST
               MOVE 'CAM    NEX' TO MSG-COD-MENS                        
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC  TO FRM-MENS
               MOVE '00'          TO FIO-STAT
               MOVE SCR-STAT-CON  TO SCR-STAT
               MOVE 'S'           TO WSS-IFIN
               GO TO FIN-CONVIERTE-VCOC.

              COMPUTE WSS-VAL-SOPC IN WSS-VARI ROUNDED =
              FRM-VAL-SOPC IN RLC-FLD * CAM-SGV-VCAM IN CAM.

           MOVE LCC-COD-VCOC IN LCC      TO CAM-COD-VCAM IN CAM(1).     
           MOVE WSS-COD-PESO IN WSS-VARI TO CAM-COD-VCAM IN CAM(2).     
           MOVE WSS-NUM-SIDE IN CMA-VARI TO CAM-NUM-SCAM IN CAM(1).     
           MOVE WSS-NUM-AIDE IN CMA-VARI TO CAM-NUM-ACAM IN CAM(1).     
           MOVE WSS-NUM-MIDE IN CMA-VARI TO CAM-NUM-MCAM IN CAM(1).     
           MOVE WSS-NUM-DIDE IN CMA-VARI TO CAM-NUM-DCAM IN CAM(1).     
           MOVE CAM-FEC-FCAM IN CAM(1)   TO CAM-FEC-FCAM IN CAM(2).     
           MOVE FIO-GET-KEY TO FIO-CMND.                                
           PERFORM TAB-FIO-CAM.                                         
           IF (NOT FIO-STAT-OKS OR CAM-IND-VIGE IN CAM NOT = 'S')       
               MOVE 'DEU' TO MSG-COD-SIST
               MOVE 'CAM    NEX' TO MSG-COD-MENS                        
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC  TO FRM-MENS
               MOVE '00'          TO FIO-STAT
               MOVE SCR-STAT-CON  TO SCR-STAT
               MOVE 'S'           TO WSS-IFIN
               GO TO FIN-CONVIERTE-VCOC.

              COMPUTE WSS-VAL-SOPC IN WSS-VARI ROUNDED =
              WSS-VAL-SOPC IN WSS-VARI / CAM-SGV-VCAM IN CAM.

      *    IF LCC-COD-VCOC IN LCC = WSS-COD-UEFE IN WSS-VARI
      *       COMPUTE WSS-VAL-SOPC IN WSS-VARI ROUNDED =
      *       FRM-VAL-SOPC IN RLC-FLD / CAM-SGV-VCAM IN CAM
      *    ELSE
      *       COMPUTE WSS-VAL-SOPC IN WSS-VARI ROUNDED =
      *       FRM-VAL-SOPC IN RLC-FLD * CAM-SGV-VCAM IN CAM
      *       MOVE WSS-VAL-SOPC IN WSS-VARI TO
      *            PES-SGV-DECI IN PES-VARI
      *       PERFORM PES-SCTV
      *       MOVE PES-SGV-ENTE IN PES-VARI TO
      *            WSS-VAL-SOPC IN WSS-VARI.

       FIN-CONVIERTE-VCOC.
           EXIT.
      *>>>>
