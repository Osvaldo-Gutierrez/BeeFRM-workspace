       IDENTIFICATION DIVISION.
      *========================
       PROGRAM-ID.   LDCPQARC.
       AUTHOR.       CONSIST.
       DATE-WRITTEN. 08-May-19 11:44 AM.

      * NOMBRE PROGRAMA                   LDCPQARC
      * VERSION PGM                       3.1
      * VERSION SKL                       19.04.15
      * OPCION                            CON
      * ARCHIVO BASE                      LDCLDC
      * PANTALLA                          LDCARC
      * INP/OUT                           DATACOM
      * TAMANO COMMAREA                   250

      *-------------------------------------------------------------
      *MODIFICACIONES:
      *--------------
      *OBJETIVO: SE INHIBE LECTURA ARC
      *PROYECTO: OPTIMIZACION L011
      *FECHA   : JUNIO DE 2016
      *AUTOR   : BEENGA
      *ETIQUETA: * NGA INI OPTIMIZACION L011 15-06-2016
      *-------------------------------------------------------------

       ENVIRONMENT DIVISION.
      *=====================
       CONFIGURATION SECTION.
      *----------------------
       SPECIAL-NAMES.
               DECIMAL-POINT IS COMMA.
       DATA DIVISION.
      *==============

       WORKING-STORAGE SECTION.
      *------------------------
      * COPY GNSWGSCR.
       COPY GNSWGCVT.
       77  WSS-TAG-LDCPQARC-INI PIC X(125) VALUE                        
           '<IDNPGM NOM=$LDCPQARC$ SKL=$19.04.15$ VSN=${vsnpq}$        
      -    'GEN=$08-May-19 11:44 AM$ FNC=${fncpq}$/>'.    

       COPY GNSWCSCR.
      *PTC-INI
      *PTC-SUB
      * COPY GNSWVSCR.
       COPY GNSWV3CR.
      *PTC-FIN
      *<<<< PGM_BMS AND FIN_SCR_VARI
       COPY LDCWGENG.
           03 SCR-CLF     VALUE SPACES            PIC X(64).
           03 SCR-LDC     VALUE SPACES            PIC X(100).
      *>>>>
      *<<<< FIN_SCR_VARI
      *FLB CST  13-JAN-1995 AHORA, ADEMAS CUENTA CUANTOS ARC
           03 SCR-FS-ARC                          PIC 9(02).
           03 SCR-ARC-DISP    VALUE SPACES        PIC X(48).
      *>>>>
       COPY LDCWIARC.

       COPY LDCBRLDC.


       COPY GNSWVIDD.
       COPY GNSWGRQA.
       COPY GNSWGUIB.
       COPY GNSWGELS.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-LDC-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-TAB-REQA==.
       COPY GNSBRTAB.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-MSC-REQA==.
       COPY GNSBRMSC.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-MSG-REQA==.
       COPY GNSBRMSG.
       COPY GNSWCFIO.
       COPY GNSWVFIO.
      *PTC-INI
      *PTC-SUB
      * ISP  10-MAY-2001 13:46:35 
      * COPY GNSWGFRM.
       COPY GNSWG3CF.
       COPY GNSWGTSK.
       COPY GNSWGQUE.
      *PTC-FIN
       COPY GNSWVNUM.
       COPY GNSWCNUM.
       COPY GNSWCVRF.
       COPY GNSWVVRF.
       COPY GNSWGIDC.
       COPY GNSWGSYS.

      *PTC ini
       COPY GNSWGQUE.
      *PTC fin
      *<<<< WSS
       COPY LDCMXW01.
       COPY LDCWGPMP.
      *INI IAS 23/11/92
       01 QUE-ARC-VARI.
           03 QUE-OCC             OCCURS 9.
              05 QUE-ARC-CAI-IOPC                  PIC X(04).
              05 QUE-ARC-IIC-IOPC                  PIC 9(08).
              05 QUE-ARC-IND-IOPC                  PIC X(01).
      *FIN IAS
       01  WSS-VARI.
           03  WSS-CIC-ICLI                       PIC X(12).
           03  WSS-COD-COPE.
               05  WSS-COD-TOPE                   PIC X(03).
               05  WSS-COD-AOPE                   PIC X(03).
           03  WSS-NUM-PER                        PIC 9(03).
           03  WSS-IND-PER                        PIC X(01).
           03  ARC-KEY-IARC.
               05  ARC-KEY-ILDC.
                   07  ARC-CAI-ICLF               PIC X(04).
                   07  ARC-IIC-ICLF               PIC X(08).
                   07  ARC-NUM-ILDC               PIC 9(02).
               05  ARC-NUM-IARC                   PIC 9(01).
           03  WSS-MOV        VALUE ZEROES        PIC 9(02).
           03  WSS-IFLD       VALUE ZEROES        PIC 9(02).
           03  WSS-IMAX       VALUE 9             PIC 9(02).
      *<<<< PGM_DTC
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-CLF-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-ARC-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-RDC-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-DBC-REQA==.
      *>>>>
       COPY LDCBRCLF.
       COPY LDCBRARC.
       COPY LDCBRRDC.
       COPY SGCBRDBC.

       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-TIO-REQA==.
       COPY TABBRTIO.
       COPY GNSWGCPT.
      *>>>>
       01  PGM-VARI.
           03 PGM-ICLR                  VALUE ' '       PIC X(01).
           03 PGM-LIMPIAR-TODO          VALUE ' '       PIC X(01).
           03 PGM-LIMPIAR-LLAVES        VALUE 'K'       PIC X(01).
           03 PGM-LIMPIAR-CAMPOS        VALUE 'F'       PIC X(01).
           03 PGM-NO-LIMPIAR-NADA       VALUE 'N'       PIC X(01).
           03 PGM-PROG                                  PIC X(08).
           03 PGM-NTRN                                  PIC X(04).
           03 PGM-STAT.
              05 PGM-STAT-CLF.
                 88 PGM-STAT-CLF-NUL    VALUE '  '.
                 07 PGM-STT1-CLF        VALUE '2' PIC X(01).
                    88 PGM-STAT-CLF-OKS VALUE '0'.
                 07 PGM-STT2-CLF        VALUE '3' PIC X(01).
              05 PGM-STAT-LDC.
                 88 PGM-STAT-LDC-NUL    VALUE '  '.
                 07 PGM-STT1-LDC        VALUE '2' PIC X(01).
                    88 PGM-STAT-LDC-OKS VALUE '0'.
                 07 PGM-STT2-LDC        VALUE '3' PIC X(01).
              05 PGM-STAT-DBC.
                 88 PGM-STAT-DBC-NUL    VALUE '  '.
                 07 PGM-STT1-DBC        VALUE '2' PIC X(01).
                    88 PGM-STAT-DBC-OKS VALUE '0'.
                 07 PGM-STT2-DBC        VALUE '3' PIC X(01).
           03 PGM-SRNF                  VALUE '23'      PIC X(02).
           03 PGM-SOKS                  VALUE '00'      PIC X(02).
           03 PGM-SNUL                  VALUE '  '      PIC X(02).
           03 PGM-SUAR                  VALUE SPACES    PIC X(15).
           03 PGM-CMMA.
              05 PGM-CMMA-CHR OCCURS 600 PIC X(01).
       LINKAGE SECTION.
      *----------------
       01  DFHCOMMAREA.
           02 DFH-CMMA OCCURS 600 PIC X(01).
       COPY GNSLGFIO.

       PROCEDURE DIVISION.
      *===================

       MAIN SECTION.
       INI-MAIN.
           PERFORM INI.
       LUP-MAIN.
           IF SCR-INST = SCR-INST-HCM
                 PERFORM SCR-COM.
           IF SCR-CCPP = 'MOD'
                 PERFORM SCR-MOD
           ELSE
           IF SCR-CCPP = 'ACC'
                 PERFORM SCR-ACC
           ELSE
                 MOVE SCR-INST-HCM TO SCR-INST.
           GO TO LUP-MAIN.
       FIN-MAIN.
           EXIT.

       INI SECTION.
       INI-INI.
       COPY GNSBGEIB.
       COPY GNSBGEDB.
           MOVE LOW-VALUES TO ARC-FLD.
           MOVE LOW-VALUES TO ARC-EDT.
           PERFORM GNS-PRO-RCK.
           PERFORM GNS-BUS-VCA.
           MOVE +600 TO SCR-TCMA.
           PERFORM GNS-HDL-SYS.
           PERFORM GNS-HDL-FRM.
           MOVE 'LDCPQARC' TO FIO-PROG.
           PERFORM GNS-BUS-IDD.
      *PTC-INI
           PERFORM GNS-ERR-QUE.
           PERFORM GET-TSK-TERM.
      *PTC-FIN
      *<<<< INI_FIO
      *PTC ini
           PERFORM GNS-ERR-QUE.
      *PTC fin
      *<<<< ( INI_FIO ) AND ( NOT PGM_VSI )
           PERFORM GNS-HDL-VSM.
      *>>>>
      *<<<< INI_FIO
      *INI IAS 23/11/92
           PERFORM GNS-ERR-QUE.
      *FIN IAS
      *>>>>
      *<<<< PGM_PQ AND INI_FIO
      *<<<< ISP-INI  24-JAN-1996 11:35:48 
           IF SCR-OFRM-SRV
              MOVE WSS-IDX-IARC TO SCR-IPRO
           ELSE
      *<<<< ISP-FIN  24-JAN-1996 11:35:48 
           IF SCR-DESDE-CMN
               MOVE SPACES TO SCR-VEC-ENG
               MOVE 1 TO SCR-IPRO
               GO TO FIN-INI-FIO.
           IF SCR-INST-EXT = WSS-INST-FPEN-CIC
               MOVE WSS-INST-NULL TO SCR-INST-EXT
               PERFORM ING-FPEN-CIC.
       FIN-INI-FIO.
      *>>>>
       FIN-INI.
           EXIT.

       COPY GNSBHSYS.
       COPY GNSBHFRM.
       COPY GNSBPRCK.
       GNS-BUS-VCA SECTION.
       INI-GNS-BUS-VCA.
           MOVE 0 TO FRM-IFLD.
       LUP-GNS-BUS-VCA.
           ADD 1 TO FRM-IFLD.
           IF FRM-IFLD NOT > EIBCALEN AND
              FRM-IFLD NOT > 600
                MOVE DFH-CMMA(FRM-IFLD) TO PGM-CMMA-CHR(FRM-IFLD)
                GO TO LUP-GNS-BUS-VCA.
           MOVE PGM-CMMA TO SCR-VARI.
       FIN-GNS-BUS-VCA.
           EXIT.
       COPY GNSBBIDD.

       SCR-COM SECTION.
       INI-SCR-COM.
           MOVE FRM-CPSF-AEY TO FRM-CPIM-AEY.
           PERFORM PRO-ALL.
           PERFORM SCR-CLRA-ARC.
           PERFORM EDT-KEY-ARC.
           PERFORM EDT-FLD-ARC.
           PERFORM SCR-PUTA.
           MOVE SCR-INST-HCM TO SCR-INST.
           MOVE SCR-CMNP     TO SYS-PROG.
           MOVE SCR-VARI     TO SYS-CMMA.
           MOVE SCR-TCMA     TO SYS-TCMA.
           MOVE SYS-XCTL     TO SYS-CMND.
      *PTC-INI
           IF NOT SCR-OFRM-SRV
      *PTC-FIN
           PERFORM GNS-PRO-SYS.
       XCT-ERR.
           MOVE 'XCTERR    ' TO MSG-COD-MENS.
           MOVE 'GNS'        TO MSG-COD-SIST.
           PERFORM GET-MSG.
           MOVE MSG-GLS-DESC TO SYS-MEN1.
           MOVE SYS-PROG     TO SYS-MEN2.
           MOVE SYS-ABOR     TO SYS-CMND.
      *PTC-INI
           IF NOT SCR-OFRM-SRV
      *PTC-FIN
           PERFORM GNS-PRO-SYS.
       COPY GNSBGGBK.
       FIN-SCR-COM.
           EXIT.

       SCR-MOD SECTION.
       INI-SCR-MOD.
           IF SCR-INST = SCR-INST-HKY
               PERFORM HBL-KEY
               MOVE SCR-INST-GKY TO SCR-INST
               PERFORM SCR-DMSG
           ELSE
           IF SCR-INST = SCR-INST-GKY
                PERFORM SCR-KEY
                IF SCR-STAT NOT = SCR-STAT-ABT
                        PERFORM SCR-TRL
                ELSE
                        PERFORM DESSCRTRL
                        GO TO FIN-SCR-MOD
           ELSE
           IF SCR-INST = SCR-INST-GAB
                PERFORM GET-CON
           ELSE
           IF SCR-INST = SCR-INST-BRW
               MOVE SCR-FFLD TO FRM-FFLD
               PERFORM BRW-SCR-MOD.
           PERFORM DESSCRTRL.
       MSG-SCR-MOD.
           MOVE SPACES TO FRM-MENS.
           PERFORM SCR-MSSG.
       FIN-SCR-MOD.
           EXIT.

       BRW-SCR-MOD SECTION.
       INI-BRW-SCR-MOD.
       FIN-BRW-SCR-MOD.
           EXIT.


       SCR-ACC SECTION.
       INI-SCR-ACC.
           IF SCR-INST = SCR-INST-HKY
               PERFORM HBL-KEY
               MOVE SCR-INST-GKY TO SCR-INST
               PERFORM SCR-DMSG
           ELSE
           IF SCR-INST = SCR-INST-GKY
                PERFORM SCR-KEY
                IF SCR-STAT NOT = SCR-STAT-ABT
                        PERFORM SCR-TRL
                ELSE
                        PERFORM DESSCRTRL
                        GO TO FIN-SCR-ACC
           ELSE
           IF SCR-INST = SCR-INST-GAB
                PERFORM GET-CON
           ELSE
           IF SCR-INST = SCR-INST-BRW
               MOVE SCR-FFLD TO FRM-FFLD
               PERFORM BRW-SCR-ACC.
           PERFORM DESSCRTRL.
           MOVE SPACES TO FRM-MENS.
           PERFORM SCR-MSSG.
       FIN-SCR-ACC.
           EXIT.

       BRW-SCR-ACC SECTION.
       INI-BRW-SCR-ACC.
       FIN-BRW-SCR-ACC.
           EXIT.




       SCR-DMSG SECTION.
       INI-SCR-DMSG.
           IF PGM-ICLR = PGM-NO-LIMPIAR-NADA
               NEXT SENTENCE
           ELSE
           IF PGM-ICLR = PGM-LIMPIAR-TODO
               PERFORM SCR-CLRA-ARC
               PERFORM EDT-KEY-ARC
               PERFORM EDT-FLD-ARC
           ELSE
           IF PGM-ICLR = PGM-LIMPIAR-LLAVES
               PERFORM CLR-KEY-ARC
               PERFORM EDT-KEY-ARC
           ELSE
               PERFORM CLR-FLD-ARC
               PERFORM EDT-FLD-ARC.
           PERFORM SCR-PUTA.
           PERFORM SCR-EXIT.
       FIN-SCR-DMSG.
           EXIT.

       SCR-KEY SECTION.
       INI-SCR-KEY.
           PERFORM SCR-RST.
           PERFORM GET-KEY.
           IF FRM-STAT-ABT
                   MOVE SPACES TO FRM-MENS
                   PERFORM SCR-MSSG
                   GO TO FIN-SCR-KEY.
       FND-SCR-KEY.
           MOVE SPACES TO FRM-MENS.
           PERFORM FND-KEY.
           IF FIO-STAT-OKS
               PERFORM PUT-SCR
               MOVE PGM-LIMPIAR-TODO TO PGM-ICLR
               GO TO FIN-SCR-KEY.
      *JSS ELSE
      *        PERFORM CLR-FLD-ARC.
       ERR-SCR-KEY.
      *PTC-INI
           MOVE 'S' TO SCR-IERR.
      *PTC-FIN
           MOVE PGM-LIMPIAR-CAMPOS TO PGM-ICLR.
           IF FRM-MENS NOT > SPACES
               IF FIO-STAT-EOF
                   MOVE 'REGEOF    ' TO MSG-COD-MENS
                   MOVE 'GNS' TO MSG-COD-SIST
                   PERFORM GET-MSG
                   MOVE MSG-GLS-DESC TO FRM-MENS
               ELSE
               IF FIO-STAT = FIO-STAT-NEX
                   MOVE 'REGNEX    ' TO MSG-COD-MENS
                   MOVE 'GNS' TO MSG-COD-SIST
                   PERFORM GET-MSG
                   MOVE MSG-GLS-DESC TO FRM-MENS
               ELSE
                   MOVE 'FIOSTAT' TO MSG-COD-TMSG
                   MOVE FIO-STAT  TO MSG-COD-CMSG
                   MOVE 'GNS'     TO MSG-COD-SIST
                   PERFORM GET-MSG
                   MOVE MSG-GLS-DESC TO FRM-MENS.
           PERFORM SCR-MSSG.
           MOVE SCR-STAT-ABT TO SCR-STAT.
       FIN-SCR-KEY.
           EXIT.

       SCR-RST SECTION.
       INI-SCR-RST.
           MOVE SPACES       TO PGM-ICLR.
           MOVE SPACES       TO SCR-ACTU.
           MOVE SCR-STPP     TO SCR-STAT.
           MOVE SCR-MFLD-NOT TO SCR-MFLD.
           MOVE LOW-VALUES   TO ARC-FLD.
           MOVE LOW-VALUES TO ARC-EDT.
       FIN-SCR-RST.
           EXIT.

       GET-KEY SECTION.
       INI-GET-KEY.
           PERFORM SCR-GKEY.
           IF FRM-STAT-ABT
               MOVE SCR-STAT-ABT TO SCR-STAT.
       FIN-GET-KEY.
           EXIT.

       GET-IKY SECTION.
       INI-GET-IKY.
           PERFORM SCR-GIKY.
           IF FRM-STAT-ABT
               MOVE SCR-STAT-ABT TO SCR-STAT.
       FIN-GET-IKY.
           EXIT.

       FND-KEY SECTION.
       INI-FND-KEY.
           PERFORM KEY-ALL-ARC.
      *<<<< FND_KEY
           MOVE SPACES TO MSG-COD-MENS.
           IF SCR-CCPP = 'ACC' AND SCR-STAT = SCR-STAT-CON AND
              LDC-NUM-ILDC IN ARC-FLD = ZEROES
                MOVE 1 TO LDC-NUM-ILDC IN LDC.
      *>>>>
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM LDC-FIO-LDC.
           MOVE FIO-STAT TO PGM-STAT-LDC.
      *<<<< FIN_FND_KEY
           IF NOT FIO-STAT-OKS
               MOVE 'DEU'        TO MSG-COD-SIST
               MOVE 'LDC    NEX' TO MSG-COD-MENS
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS
               MOVE FIO-STAT-NEX TO FIO-STAT
               MOVE SCR-STAT-CON TO SCR-STAT
               GO TO FIN-FND-KEY.

      *LTM-INI
           MOVE 'RDC-KEY-ICLF' TO FIO-AKEY.
           MOVE LDC-CAI-ICLF IN ARC-FLD TO RDC-CAI-ICLF IN RDC.
           MOVE LDC-IIC-ICLF IN ARC-FLD TO RDC-IIC-ICLF IN RDC.
           MOVE FIO-GET-NLS TO FIO-CMND.
           PERFORM LDC-FIO-RDC.
           IF (NOT FIO-STAT-OKS) OR
              (RDC-CAI-ICLF IN RDC NOT = LDC-CAI-ICLF IN ARC-FLD) OR
              (RDC-IIC-ICLF IN RDC NOT = LDC-IIC-ICLF IN ARC-FLD)
      *        CLF no tiene RDC asociado
               MOVE 'DEU'         TO MSG-COD-SIST
               MOVE 'RDC    NEX'  TO MSG-COD-MENS
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC  TO FRM-MENS
               MOVE '00'          TO FIO-STAT
               MOVE SCR-STAT-CON  TO SCR-STAT
               GO TO FIN-FND-KEY
           ELSE
               MOVE RDC-CIC-ICLI   TO WSS-CIC-ICLI IN WSS-VARI
               MOVE 'RDC-KEY-ICLF' TO FIO-AKEY
               MOVE FIO-GET-NXT    TO FIO-CMND
               PERFORM LDC-FIO-RDC
               IF FIO-STAT-OKS AND
                  RDC-CAI-ICLF IN RDC = LDC-CAI-ICLF IN ARC-FLD AND
                  RDC-IIC-ICLF IN RDC = LDC-IIC-ICLF IN ARC-FLD
                   MOVE 'MULTIPLES CLIENTES' TO DBC-GLS-NOMC IN DBC
                   MOVE ZEROES               TO DBC-NUM-ICLI IN DBC
                   MOVE SPACES               TO DBC-VRF-ICLI IN DBC
                                                DBC-IND-ICLI IN DBC
                   MOVE IDC-INIC-GLS         TO DBC-GLS-ICLI IN DBC
                   MOVE PGM-SOKS             TO PGM-STAT-DBC
                   IF SCR-CCPP = 'MOD' 
                       PERFORM PUT-LDC-ARC
                       PERFORM PUT-DBC-ARC
                   ELSE
                       NEXT SENTENCE
               ELSE
                   MOVE WSS-CIC-ICLI IN WSS-VARI
                                     TO DBC-CIC-ICLI IN DBC
                   MOVE FIO-GET-KEY  TO FIO-CMND
                   PERFORM SGC-FIO-DBC
                   MOVE FIO-STAT     TO PGM-STAT-DBC       
                   IF NOT FIO-STAT-OKS
      *                RDC no tiene DBC asociado
                       MOVE 'TAB'         TO MSG-COD-SIST
                       MOVE 'CLI    NEX'  TO MSG-COD-MENS
                       PERFORM GET-MSG
                       MOVE MSG-GLS-DESC  TO FRM-MENS
                       MOVE '00'          TO FIO-STAT
                       MOVE SCR-STAT-CON  TO SCR-STAT
                       GO TO FIN-FND-KEY
                   ELSE
                       MOVE DBC-GLS-NOMC IN DBC  TO CPT-STRN
                       PERFORM CPT-BLKS
                       MOVE CPT-STRN TO DBC-GLS-NOMC IN DBC
                       IF SCR-CCPP = 'MOD' 
                           PERFORM PUT-LDC-ARC
                           PERFORM PUT-DBC-ARC.
      *LTM-FIN

           MOVE LDC-CAI-ICLF IN LDC TO CLF-CAI-ICLF IN CLF.
           MOVE LDC-IIC-ICLF IN LDC TO CLF-IIC-ICLF IN CLF.
           MOVE FIO-GET-KEY    TO FIO-CMND.
           PERFORM LDC-FIO-CLF.
           MOVE FIO-STAT TO PGM-STAT-CLF.
           IF NOT FIO-STAT-OKS
      *        LDC no tiene CLF asociado
               MOVE 'DEU' TO MSG-COD-SIST
               MOVE 'CLF    NEX' TO MSG-COD-MENS
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS
               MOVE FIO-STAT-NEX TO FIO-STAT
               MOVE SCR-STAT-CON TO SCR-STAT
               GO TO FIN-FND-KEY.
      *AFRI-INI/15-10-200 TEMA INMOBILIARIO TIPO CLF
           MOVE 'DEU'                  TO FIO-SIST.
           MOVE 'CNT'                  TO TAB-COD-TTAB IN TAB.
           MOVE CLF-COD-TOCF IN CLF    TO TAB-COD-CTAB IN TAB.
           MOVE FIO-GET-KEY            TO FIO-CMND.
           PERFORM GNS-FIO-TAB.
           IF FIO-STAT-OKS AND TAB-IND-VIGE IN TAB = 'S'
                MOVE 'DEU'             TO MSG-COD-SIST
                MOVE 'TIO    NOCLF'     TO MSG-COD-MENS
                PERFORM GET-MSG
                MOVE MSG-GLS-DESC TO FRM-MENS                           
                MOVE FIO-STAT-NEX TO FIO-STAT                           
                MOVE SCR-STAT-CON TO SCR-STAT                           
                GO TO FIN-FND-KEY.                                      
      *AFRI-FIN/15-10-200

      *FLB CST  13-JAN-1995 
      *    IF SCR-CMND = 'ACT'
           IF SCR-CMND = 'ACT' OR 'MSI'
              IF CLF-MSC-STAT IN CLF = 'C'
      *        LDC eliminada o cerrada
                  MOVE 'DEU'           TO MSG-COD-SIST
                  MOVE 'CLF    EXTING' TO MSG-COD-MENS
                  PERFORM GET-MSG
                  MOVE MSG-GLS-DESC TO FRM-MENS
                  MOVE SCR-STAT-CON TO SCR-STAT
                  MOVE '00' TO FIO-STAT
                  GO TO FIN-FND-KEY
              ELSE
              IF CLF-MSC-STAT IN CLF = 'R'
      *        CLF fue renovada
                  MOVE 'DEU'           TO MSG-COD-SIST
                  MOVE 'CLF    MCAYA' TO MSG-COD-MENS
                  PERFORM GET-MSG
                  MOVE MSG-GLS-DESC TO FRM-MENS
                  MOVE SCR-STAT-CON TO SCR-STAT
                  MOVE '00' TO FIO-STAT
                  GO TO FIN-FND-KEY
              ELSE
              IF CLF-MSC-STAT IN CLF = 'A'
      *        LDC activada 
                  MOVE 'DEU'          TO MSG-COD-SIST
                  MOVE 'CLF    ACAYA' TO MSG-COD-MENS
                  PERFORM GET-MSG
                  MOVE MSG-GLS-DESC TO FRM-MENS
                  MOVE SCR-STAT-CON TO SCR-STAT
                  MOVE '00' TO FIO-STAT
                  GO TO FIN-FND-KEY
              ELSE
      *FLB CST  13-JAN-1995 
              IF SCR-CMND = 'ACT' AND
                 CLF-COD-STAT IN CLF = 'X'
      *        LDC activada 
                  MOVE 'DEU'          TO MSG-COD-SIST
                  MOVE 'CLFSTATMSI'   TO MSG-COD-MENS
                  PERFORM GET-MSG
                  MOVE MSG-GLS-DESC TO FRM-MENS
                  MOVE SCR-STAT-CON TO SCR-STAT
                  MOVE '00' TO FIO-STAT
                  GO TO FIN-FND-KEY
              ELSE
              IF SCR-CMND = 'MSI' AND
                 CLF-COD-STAT IN CLF NOT = 'X' AND
                 CLF-COD-STAT IN CLF NOT = 'M' 
                  MOVE 'DEU'          TO MSG-COD-SIST
                  MOVE 'CLFSTATNOMSI' TO MSG-COD-MENS
                  PERFORM GET-MSG
                  MOVE MSG-GLS-DESC TO FRM-MENS
                  MOVE SCR-STAT-CON TO SCR-STAT
                  MOVE '00' TO FIO-STAT
                  GO TO FIN-FND-KEY.

           MOVE ZEROES TO SCR-FS-ARC.
           MOVE LDC-KEY-ILDC IN LDC TO ARC-KEY-ILDC IN WSS-VARI.
           MOVE ZEROES              TO ARC-NUM-IARC IN WSS-VARI.
           MOVE ARC-KEY-IARC IN WSS-VARI TO ARC-KEY-IARC IN ARC.
           MOVE FIO-GET-NLS TO FIO-CMND.
       LEE-ARC.
      * NGA INI OPTIMIZACION L011 15-06-2016
           MOVE SPACES              TO ARC-KEY-ILDC IN ARC.
           IF SCR-CMND = 'ACT'
              MOVE '23'                TO FIO-STAT
           ELSE
              MOVE '00'                TO FIO-STAT.
           GO TO FIN-FND-KEY.
      *    PERFORM LDC-FIO-ARC.                                         
      * NGA FIN OPTIMIZACION L011 15-06-2016
           IF NOT FIO-STAT-OKS OR
              ARC-KEY-ILDC IN WSS-VARI NOT = ARC-KEY-ILDC IN ARC

              IF FIO-STAT-OKS
                  MOVE FIO-END-BRW TO FIO-CMND
                  PERFORM LDC-FIO-ARC
                  MOVE '00' TO FIO-STAT
                  IF SCR-CMND = 'ACT' 
                      GO TO FIN-FND-KEY
                  ELSE
                      MOVE 'DEU'        TO MSG-COD-SIST
                      MOVE 'LDCSINARC'   TO MSG-COD-MENS
                      PERFORM GET-MSG
                      MOVE MSG-GLS-DESC TO FRM-MENS
                      MOVE SCR-STAT-CON TO SCR-STAT
                      GO TO FIN-FND-KEY
              ELSE 
                  MOVE '00' TO FIO-STAT
                  IF SCR-CMND = 'ACT' 
                      GO TO FIN-FND-KEY
                  ELSE
                      MOVE 'DEU'        TO MSG-COD-SIST
                      MOVE 'LDCSINARC'  TO MSG-COD-MENS
                      PERFORM GET-MSG
                      MOVE MSG-GLS-DESC TO FRM-MENS
                      MOVE SCR-STAT-CON TO SCR-STAT
                      GO TO FIN-FND-KEY.

       CARGA-ARC.
           MOVE SPACES TO MSG-COD-MENS.
           MOVE ZEROES TO WSS-IFLD.
           MOVE 9      TO WSS-IMAX.
      *INI IAS
           IF SCR-CMND = 'ACT'
               MOVE EIBTRMID     TO QUE-TERM
               MOVE 'ARC'        TO QUE-TYPE
               MOVE 1            TO QUE-NITM
               MOVE QUE-DEL TO QUE-CMND
               PERFORM GNS-PRO-QUE.
      *FIN IAS
           PERFORM PUT-TAB-ARC.
      *INI IAS
           IF SCR-CMND = 'ACT'
               MOVE QUE-ARC-VARI TO QUE-ITEM
               MOVE 500 TO QUE-LITM
               MOVE QUE-PUT TO QUE-CMND
               PERFORM GNS-PRO-QUE.
      *FIN IAS

           IF WSS-IFLD < WSS-IMAX
              ADD 1 TO WSS-IFLD
              PERFORM LIM-RES-LIN UNTIL WSS-IFLD > WSS-IMAX.

           IF MSG-COD-MENS > SPACES
               MOVE 'DEU' TO MSG-COD-SIST
               MOVE SPACES TO FIO-AKEY
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS.

           MOVE '00' TO FIO-STAT.
           GO TO FIN-FND-KEY.
      *>>>>
       FIN-FND-KEY.
           IF FIO-STAT = FIO-STAT-NEX
               MOVE 'S' TO SCR-IERR.
       EXT-FND-KEY.
           EXIT.
 
       PUT-SCR SECTION.
       INI-PUT-SCR.
           PERFORM PUT-ALL-ARC.
       FIN-PUT-SCR.
           EXIT.

       STP-EXIT SECTION.
       INI-STP-EXIT.
           MOVE SCR-PROG TO PGM-PROG.
           MOVE SCR-NTRN TO PGM-NTRN.

           MOVE SCR-PROV TO SCR-PROG.
           MOVE SCR-NTRV TO SCR-NTRN.

           MOVE PGM-PROG TO SCR-PROV
           MOVE PGM-NTRN TO SCR-NTRV.
       FIN-STP-EXIT.
           EXIT.

       SCR-EXIT SECTION.
       INI-SCR-EXIT.
           MOVE 'P'      TO SCR-ICMN.
           MOVE SCR-NTRN TO SYS-NTRN.
           MOVE SCR-VARI TO SYS-CMMA.
           MOVE SCR-TCMA TO SYS-TCMA.
           MOVE SYS-RTRN TO SYS-CMND.
      *PTC-INI
           IF NOT SCR-OFRM-SRV
      *PTC-FIN
           PERFORM GNS-PRO-SYS.
       FIN-SCR-EXIT.
           EXIT.

       SCR-PUTA SECTION.
       INI-SCR-PUTA.
      *PTC-INI
           IF FRM-SUAR EQUAL FRM-SUAR-MAL OR FRM-SUAR-CLR
               MOVE 'S' TO SCR-IERR.
      *PTC-FIN
           MOVE SCR-NMAP TO FRM-NAME.
           MOVE SCR-NLIB TO FRM-NLIB.
           MOVE ARC-FLD TO FRM-DFLD.
           MOVE FRM-PUT-ALL TO FRM-CMND.
           PERFORM GNS-PRO-FRM.
       FIN-SCR-PUTA.
           EXIT.

       SCR-MSSG SECTION.
       INI-SCR-MSSG.
           IF FRM-MEN1 NOT > SPACES
               MOVE SPACES TO FRM-MEN1.
           IF FRM-MEN2 NOT > SPACES
               MOVE SPACES TO FRM-MEN2.
           MOVE FRM-MENS TO ARC-GLS-MENS.
       FIN-SCR-MSSG.
           EXIT.

       SCR-GKEY SECTION.
       INI-SCR-GKEY.
           MOVE SCR-NMAP TO FRM-NAME.
           MOVE SCR-NLIB TO FRM-NLIB.
           MOVE FRM-GET-ALL TO FRM-CMND.
           PERFORM GNS-PRO-FRM.
           MOVE SPACES TO FRM-MENS.
           IF NOT ( FRM-FFLD = FRM-FFLD-RET  OR FRM-FFLD-PF10 OR
                               FRM-FFLD-PF12 OR FRM-FFLD-PF3 )
               MOVE 'PFSINV    ' TO MSG-COD-MENS
               MOVE 'GNS' TO MSG-COD-SIST
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS
               PERFORM FST-KEY-ARC
               PERFORM SCR-MSSG
               PERFORM SCR-PUTA
               PERFORM SCR-EXIT.
           MOVE FRM-DFLD TO ARC-FLD.
           IF FRM-STAT-ABT
               GO TO FIN-SCR-GKEY.
           MOVE FRM-SUAR-OKS TO FRM-SUAR.
           PERFORM VAL-NUM-KEY-ARC.
           IF FRM-SUAR EQUAL FRM-SUAR-MAL OR FRM-SUAR-CLR
      *PTC-INI
               MOVE 'S' TO SCR-IERR
      *PTC-FIN
               PERFORM SCR-MSSG
               PERFORM EDT-KEY-ARC
               PERFORM SCR-PUTA
               PERFORM SCR-EXIT.
      *JSS
           PERFORM CLR-FLD-ARC.
      *<<<<  SCR_GKEY_VAL_IKY                                           
      *PTC-INI (RRM) 22-NOV-2002                                        
           IF SCR-OFRM-SRV AND                                          
              SCR-CMND = 'ACT'                                          
                                                                        
               MOVE PTC-LDC-TYPE TO QUE-TYPE                            
               MOVE TSK-TERM-ALF TO QUE-TERM                            
               MOVE PTC-LDC-LENG TO QUE-LITM                            
               MOVE 1            TO QUE-NITM                            
               MOVE QUE-GET      TO QUE-CMND                            
               PERFORM GNS-PRO-QUE                                      
               IF QUE-STAT = QUE-STAT-OKS                               
                   MOVE QUE-ITEM TO PTC-LDC-ITEM                        
                   MOVE PTC-LDC-LDC-CAI-ICLF TO LDC-CAI-ICLF IN ARC-FLD 
                   MOVE PTC-LDC-LDC-IIC-ICLF TO LDC-IIC-ICLF IN ARC-FLD 
                   MOVE PTC-LDC-LDC-NUM-ILDC TO LDC-NUM-ILDC IN ARC-FLD.
                                                                        
      *PTC-FIN (RRM) 22-NOV-2002                                        
           PERFORM VAL-IKY-ARC.
           IF FRM-SUAR EQUAL FRM-SUAR-MAL OR FRM-SUAR-CLR
               GO TO ERR-SCR-GKEY.
           PERFORM VAL-MKY-ARC.
           IF FRM-SUAR EQUAL FRM-SUAR-MAL OR FRM-SUAR-CLR
               GO TO ERR-SCR-GKEY.
           PERFORM VAL-AKY-ARC.
           IF FRM-SUAR EQUAL FRM-SUAR-MAL OR FRM-SUAR-CLR
               GO TO ERR-SCR-GKEY.
           PERFORM VAL-CON-KEY-ARC.
           IF NOT ( FRM-SUAR EQUAL FRM-SUAR-MAL OR FRM-SUAR-CLR )
               GO TO FIN-SCR-GKEY.
           IF FRM-UCUR NOT > SPACES
               PERFORM FST-KEY-ARC.
       ERR-SCR-GKEY.
      *PTC-INI
           MOVE 'S' TO SCR-IERR.
      *PTC-FIN
           PERFORM SCR-MSSG.
           PERFORM EDT-KEY-ARC.
           PERFORM SCR-PUTA.
           PERFORM SCR-EXIT.
       FIN-SCR-GKEY.
           PERFORM SCR-MSSG.

       SCR-GIKY SECTION.
       INI-SCR-GIKY.
           MOVE SCR-NMAP TO FRM-NAME.
           MOVE SCR-NLIB TO FRM-NLIB.
           MOVE FRM-GET-ALL TO FRM-CMND.
           PERFORM GNS-PRO-FRM.
           MOVE SPACES TO FRM-MENS.
           IF NOT ( FRM-FFLD = FRM-FFLD-RET  OR FRM-FFLD-PF10 OR
                               FRM-FFLD-PF12 OR FRM-FFLD-PF3 )
               MOVE 'PFSINV    ' TO MSG-COD-MENS
               MOVE 'GNS' TO MSG-COD-SIST
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS
               PERFORM FST-KEY-ARC
               PERFORM SCR-MSSG
               PERFORM SCR-PUTA
               PERFORM SCR-EXIT.
           MOVE FRM-DFLD TO ARC-FLD.
           IF FRM-STAT-ABT
               GO TO FIN-SCR-GIKY.
           MOVE FRM-SUAR-OKS TO FRM-SUAR.
           PERFORM VAL-NUM-KEY-ARC.
           IF FRM-SUAR EQUAL FRM-SUAR-MAL OR FRM-SUAR-CLR
      *PTC-INI
               MOVE 'S' TO SCR-IERR
      *PTC-FIN
               PERFORM SCR-MSSG
               PERFORM EDT-IKY-ARC
               PERFORM SCR-PUTA
               PERFORM SCR-EXIT.
      *JSS
           PERFORM CLR-FLD-ARC.
           PERFORM VAL-IKY-ARC.
           IF FRM-SUAR EQUAL FRM-SUAR-MAL OR FRM-SUAR-CLR
               GO TO ERR-SCR-GIKY.
           PERFORM VAL-CON-IKY-ARC.
           IF NOT ( FRM-SUAR EQUAL FRM-SUAR-MAL OR FRM-SUAR-CLR )
               GO TO FIN-SCR-GIKY.
           IF FRM-UCUR NOT > SPACES
               PERFORM FST-KEY-ARC.
       ERR-SCR-GIKY.
      *PTC-INI
           MOVE 'S' TO SCR-IERR.
      *PTC-FIN
           PERFORM SCR-MSSG.
           PERFORM EDT-IKY-ARC.
           PERFORM SCR-PUTA.
           PERFORM SCR-EXIT.
       FIN-SCR-GIKY.
      *<<<< PGM_BMS AND FIN_SCR_GIKY OR FIN_SCR_GCNF OR FIN_SCR_GFLD
           IF FRM-FFLD = FRM-FFLD-PF3 AND
              SCR-IND-ENG IN SCR-VEC-ENG(SCR-IPRO) = 'S'
                   PERFORM EGR-FTER-CIC.
      *>>>>
           PERFORM SCR-MSSG.

       GET-CON SECTION.
       INI-GET-CON.
           MOVE SCR-NMAP TO FRM-NAME.
           MOVE SCR-NLIB TO FRM-NLIB.
           MOVE FRM-GET-ALL TO FRM-CMND.
           PERFORM GNS-PRO-FRM.
           IF NOT ( FRM-FFLD = FRM-FFLD-RET  OR FRM-FFLD-PF10 OR
                               FRM-FFLD-PF12 OR FRM-FFLD-PF3 )
               MOVE 'PFSINV    ' TO MSG-COD-MENS
               MOVE 'GNS' TO MSG-COD-SIST
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO ARC-GLS-MEN2
               MOVE SCR-PRMT     TO ARC-GLS-MEN1
               PERFORM FST-MSG
               PERFORM SCR-PUTA
               PERFORM SCR-EXIT.
           MOVE FRM-DFLD TO ARC-FLD.
       FIN-GET-CON.
           MOVE SCR-STAT-CON TO SCR-STAT.

       CLR-MSG SECTION.
       INI-CLR-MSG.
           MOVE SPACES TO ARC-GLS-MENS.
       FIN-CLR-MSG.
           EXIT.

       HBL-IKY SECTION.
       INI-HBL-IKY.
      *PTC-INI
           IF NOT SCR-OFRM-SRV
      *PTC-FIN
           IF SCR-DESDE-CMN
               MOVE ARC-GLS-MENS TO FRM-MENS
               MOVE LOW-VALUES TO ARC-FLD
      * FLB  7-NOV-1994
               PERFORM CLR-KEY-ARC

               IF FRM-MENS < SPACES
                   MOVE LOW-VALUES TO ARC-GLS-MENS
               ELSE
                   MOVE FRM-MENS TO ARC-GLS-MENS.
           PERFORM PRO-MKY-ARC.
           PERFORM PRO-AKY-ARC.
           PERFORM UNP-IKY-ARC.
           PERFORM FST-KEY-ARC.
       FIN-HBL-IKY.
           EXIT.

       HBL-KEY SECTION.
       INI-HBL-KEY.
      *PTC-INI
           IF NOT SCR-OFRM-SRV
      *PTC-FIN
           IF SCR-DESDE-CMN
               MOVE ARC-GLS-MENS TO FRM-MENS
               MOVE LOW-VALUES TO ARC-FLD
               IF FRM-MENS < SPACES
                   MOVE LOW-VALUES TO ARC-GLS-MENS
               ELSE
                   MOVE FRM-MENS TO ARC-GLS-MENS.
           PERFORM UNP-KEY-ARC.
           PERFORM FST-KEY-ARC.
       FIN-HBL-KEY.
           EXIT.

       HBL-FLD SECTION.
       INI-HBL-FLD.
           PERFORM PRO-IKY-ARC.
           PERFORM PRO-AKY-ARC.
           PERFORM UNP-MKY-ARC.
           PERFORM UNP-FLD-ARC.
           PERFORM FST-FLD-ARC.
       FIN-HBL-FLD.
           EXIT.

       FST-MSG SECTION.
       INI-FST-MSG.
           MOVE -1 TO ARC-GLS-MENS-LEN.
       FIN-FST-MSG.
           EXIT.

       PRO-ALL SECTION.
       INI-PRO-ALL.
           PERFORM PRO-KEY-ARC.
           PERFORM FST-MSG.
       FIN-PRO-ALL.
           EXIT.

       SCR-TRL SECTION.
       INI-SCR-TRL.
      *PTC-INI
           IF SCR-STAT NOT = SCR-STPP
               MOVE 'S' TO SCR-IERR.
      *PTC-FIN
           IF FRM-MEN1 NOT > SPACES
               MOVE SCR-PRMT TO FRM-MEN1.
           IF SCR-STAT = SCR-STAT-MOD
               PERFORM HBL-FLD
               PERFORM SCR-MSSG
               PERFORM EDT-KEY-ARC
               PERFORM EDT-FLD-ARC
               PERFORM SCR-PUTA
               PERFORM STP-EXIT
               MOVE SCR-INST-GFL TO SCR-INST
               PERFORM SCR-EXIT.
           IF SCR-STAT = SCR-STAT-SON
               PERFORM PRO-ALL
               PERFORM SCR-MSSG
               PERFORM EDT-KEY-ARC
               PERFORM EDT-FLD-ARC
               PERFORM SCR-PUTA
               PERFORM STP-EXIT
               MOVE SCR-INST-GCS TO SCR-INST
               PERFORM SCR-EXIT.
      *ASUME SCR-STAT-CON.
           MOVE SCR-STAT-CON TO SCR-STAT.
      *    MOVE FRM-CPSF-AEY TO FRM-CPIM-AEY.
           PERFORM PRO-ALL.
           PERFORM SCR-MSSG.
           PERFORM EDT-KEY-ARC.
           PERFORM EDT-FLD-ARC.
           PERFORM SCR-PUTA.
           MOVE SCR-INST-GAB TO SCR-INST.
           PERFORM SCR-EXIT.
       FIN-SCR-TRL.
           EXIT.

       DESSCRTRL SECTION.
       INI-DESSCRTRL.
           MOVE SCR-VFLD-NOT TO SCR-VFLD.
           MOVE FRM-FFLD TO SCR-FFLD.
       FIN-DESSCRTRL.
           IF SCR-FFLD-PF10 OR SCR-FFLD-PF3
                 MOVE SCR-INST-HCM TO SCR-INST
           ELSE
                 MOVE SCR-INST-HKY TO SCR-INST.
       EXT-DESSCRTRL.
           EXIT.

      * PGM-EBR-ALL SECTION.
      * INI-PGM-EBR-ALL.
      *     MOVE 'GNS' TO FIO-SIST.
      *     MOVE FIO-EBR-ALL TO FIO-CMND.
      *     PERFORM GNS-FIO-TAB.
      * FIN-PGM-EBR-ALL.
      *     EXIT.

       COPY LDCBQARC.
       COPY GNSBVNUM.
       COPY LDCBFLDC.
       COPY GNSBFMSG.
       COPY GNSBGSYS.
       COPY GNSBGDTC.
      *PTC-INI
      *PTC-SUB
      * ISP  10-MAY-2001 13:46:35 
      * COPY GNSBGFRM.
       COPY GNSBG3CF.
      *PTC-FIN
       COPY GNSBGMSG.
       COPY GNSBEKEY.
       COPY GNSBIABT.
       COPY GNSBBTAB.
       COPY GNSBFTAB.
       COPY GNSBVIND.
       COPY GNSBVMSC.
       COPY GNSBFMSC.
       COPY GNSBVIDC.
       COPY GNSBPVRF.
      *PTC-INI
       COPY GNSBGQUE.
       COPY GNSBGTSK.
      *PTC-FIN

      *PTC ini
       COPY GNSBGQUE.
      *PTC fin
      *<<<< ( EOF ) AND ( NOT PGM_VSI )
       COPY GNSBGVSM.
       COPY GNSBHVSM.
      *>>>>
      *<<<< PGM_BMS AND EOF

      *<<<< PGM_PQ
      *  CODIGO ADICIONAL PARA ENGANCHE PROGRAMAS
       ING-FPEN-CIC SECTION.
       INI-ING-FPEN-CIC.
           MOVE LOW-VALUES TO ARC-FLD.
           PERFORM ING-SETE.
           PERFORM SCR-CLRA-ARC.
           PERFORM HBL-IKY.
           PERFORM HBL-KEY-ARC.
       FIN-ING-FPEN-CIC.
           EXIT.

       HBL-KEY-ARC SECTION.
       INI-HBL-KEY-ARC.
           MOVE SPACES TO MSG-COD-MENS.
           MOVE LOW-VALUES TO ARC-FLD.
           PERFORM SCR-CLRA-ARC.
           MOVE SCR-CAI-ICLF IN SCR-VARI TO LDC-CAI-ICLF IN ARC-FLD.
           MOVE SCR-IIC-ICLF IN SCR-VARI TO LDC-IIC-ICLF IN ARC-FLD.
           MOVE SCR-NUM-ILDC IN SCR-VARI TO LDC-NUM-ILDC IN ARC-FLD.

           MOVE 'MOD'        TO SCR-CCPP.
           MOVE 'ACT'        TO SCR-CMND.
           PERFORM FND-KEY.

      * FLB 24/JUL/92 DIO ALGO MALO 
      * FLB 24/JUL/92 LE AGREGUE QUE SE VAYA Y NO HABILITE LOS CAMPOS
           IF MSG-COD-MENS > SPACES
               MOVE SCR-INST-GKY TO SCR-INST
      *    MOVE FRM-CPSF-AEY TO FRM-CPIM-AEY
               PERFORM PRO-ALL
               PERFORM UNP-IKY-ARC
               PERFORM EDT-KEY-ARC

               PERFORM SCR-MSSG
               IF SCR-IND-FST IN SCR-VEC-FST(SCR-IPRO) = 'S'
                   MOVE SPACES TO SCR-IND-FST IN SCR-VEC-FST(SCR-IPRO)
                   PERFORM SCR-INIT
                   PERFORM SCR-EXIT
                   GO TO FIN-HBL-KEY-ARC
               ELSE
                   PERFORM SCR-PUTA
                   PERFORM SCR-EXIT
                   GO TO FIN-HBL-KEY-ARC.

      * Despliega glosas de registros padres o asociados
           PERFORM PUT-CLF-ARC.

           MOVE +4 TO LDC-CAI-ICLF-LEN IN ARC-FLD.
      *ISP   25-JUL-1990 DEBE SER REEMPLAZADO POR VARIABLE
      *     INHIBE MOVE FRM-CPSF TO FRM-CPIM-AEY
           MOVE '1' TO FRM-CPIM-AEY.
           PERFORM HBL-FLD.
      *ALD-BNL.
           MOVE FRM-CPIM-AEY TO LDC-CAI-ICLF-ATR.
           MOVE FRM-CPIM-AEY TO LDC-IIC-ICLF-ATR.
           MOVE FRM-CPIM-AEY TO LDC-NUM-ILDC-ATR.
      *
           MOVE SCR-INST-GFL TO SCR-INST.

       CIC-HBL-KEY-ARC.
      *
           PERFORM EDT-KEY-ARC.
           PERFORM EDT-FLD-ARC.

           MOVE 'GNS' TO MSG-COD-SIST.
           MOVE 'FLDING' TO MSG-COD-MENS.
           PERFORM GET-MSG.
           MOVE MSG-GLS-DESC TO FRM-MENS.
           PERFORM SCR-MSSG.

           IF SCR-IND-FST IN SCR-VEC-FST(SCR-IPRO) = 'S'
               MOVE SPACES TO SCR-IND-FST IN SCR-VEC-FST(SCR-IPRO)
               PERFORM SCR-INIT
               PERFORM STP-EXIT
           ELSE
               PERFORM SCR-PUTA.
      *<<<< ISP-INI  24-JAN-1996 11:35:48 
           IF SCR-OFRM-SRV
                EXEC CICS
                 RETURN
                END-EXEC.
      *<<<< ISP-FIN  24-JAN-1996 11:35:48 
           PERFORM SCR-EXIT.
       FIN-HBL-KEY-ARC.
           EXIT.

       ING-SETE SECTION.
       INI-ING-SETE.
           PERFORM CRG-TBL-ENG.
           MOVE WSS-NTRN(SCR-IPRO)     TO SCR-NTRN.
           MOVE WSS-PROG(SCR-IPRO)     TO SCR-PROG.
           MOVE WSS-NMAP(SCR-IPRO)     TO SCR-NMAP.
           MOVE WSS-NLIB(SCR-IPRO)     TO SCR-NLIB.
      *     MOVE WSS-NEMO(WSS-IDX-IARC) TO SCR-NEMO.

           MOVE WSS-NTRV(SCR-IPRO)     TO SCR-NTRV.
           MOVE WSS-PROV(SCR-IPRO)     TO SCR-PROV.
       FIN-ING-SETE.
           EXIT.

       EGR-FTER-CIC SECTION.
       INI-EGR-FTER-CIC.
      *<<<< PGM_PQ
           MOVE 'S' TO SCR-IND-ENG IN SCR-VEC-ENG(WSS-IDX-ILDC).
           MOVE 'S' TO SCR-IND-FST IN SCR-VEC-FST(WSS-IDX-ILDC).
           SUBTRACT 1 FROM WSS-IDX-ILDC GIVING SCR-IPRO.
           MOVE 'ING'        TO SCR-CMND.
           MOVE 'ING'        TO SCR-CCPP.
           PERFORM EGR-FPEN-CIC.
       FIN-EGR-FTER-CIC.
           EXIT.

       EGR-FPEN-CIC SECTION.
       INI-EGR-FPEN-CIC.
           PERFORM CRG-TBL-ENG.
           ADD 1 TO SCR-IPRO.
           IF SCR-IPRO > WSS-TOT-IIDX
                  PERFORM EGR-FTER-CIC
                  GO TO FIN-EGR-FPEN-CIC.
           IF SCR-IND-ENG IN SCR-VEC-ENG(SCR-IPRO) = SPACES
               GO TO INI-EGR-FPEN-CIC.
           MOVE WSS-INST-FPEN-CIC TO SCR-INST-EXT.
           MOVE WSS-PROG(SCR-IPRO) TO SYS-PROG.
           MOVE 'ING'    TO SCR-CMND.
           MOVE 'ING'    TO SCR-CCPP.
           MOVE SCR-VARI TO SYS-CMMA.
      *<<<< NOT PGM_DB2
           MOVE SCR-TCMA TO SYS-TCMA.
           MOVE SYS-XCTL TO SYS-CMND.
           PERFORM GNS-PRO-SYS.
       FIN-EGR-FPEN-CIC.
           EXIT.

       SCR-INIT SECTION.
       INI-SCR-INIT.
           MOVE 3  TO FRM-PLIN.
           MOVE 19 TO FRM-NLIN.
           MOVE FRM-CLR-FRM TO FRM-CMND.
           PERFORM GNS-PRO-FRM.
           MOVE FRM-SINI-DBNF TO FRM-SINI.
           MOVE SCR-NMAP TO FRM-NAME.
           MOVE SCR-NLIB TO FRM-NLIB.
           MOVE ARC-FLD TO FRM-DFLD.
           MOVE FRM-INI TO FRM-CMND.
           PERFORM GNS-PRO-FRM.
       FIN-SCR-INIT.
           EXIT.

       COPY LDCBGMPT.
      *>>>>
      *<<<< EOF
       COPY GNSBVCOD.
       COPY GNSBVTAB.
       COPY LDCBFCLF.
       COPY LDCBFARC.
       COPY LDCBFRDC.
       COPY SGCBFDBC.
       COPY GNSBGCPT.
      *FIN IAS
      *>>>>
      *INI IAS
       LEE-QUE SECTION.
       INI-LEE-QUE.
           MOVE EIBTRMID     TO QUE-TERM.
           MOVE 'ARC'        TO QUE-TYPE.
           MOVE 1            TO QUE-NITM.
           MOVE 500          TO QUE-LITM.
           MOVE QUE-GET      TO QUE-CMND.
           PERFORM GNS-PRO-QUE.
           MOVE QUE-ITEM TO QUE-ARC-VARI.
       FIN-LEE-QUE.
           EXIT.
      *FIN IAS

      *<<<< PGM_PQ
       PUT-TAB-ARC SECTION.
       INI-PUT-TAB-ARC.
           ADD 1 TO WSS-IFLD.
           IF WSS-IFLD > WSS-IMAX
              GO TO FIN-PUT-TAB-ARC.

           ADD 1 TO SCR-FS-ARC.
      *INI IAS
           IF SCR-CMND = 'ACT'
               MOVE ARC-CAI-IOPC IN ARC TO QUE-ARC-CAI-IOPC IN
                                           QUE-ARC-VARI(WSS-IFLD)
               MOVE ARC-IIC-IOPC IN ARC TO QUE-ARC-IIC-IOPC IN
                                           QUE-ARC-VARI(WSS-IFLD)
               MOVE ARC-IND-IOPC IN ARC TO QUE-ARC-IND-IOPC IN
                                           QUE-ARC-VARI(WSS-IFLD).
      *FIN IAS

           MOVE ARC-COD-VCOC IN ARC TO FRM-COD-VCOC
                                             IN ARC-FLD(WSS-IFLD).
           MOVE ARC-COD-TOOC IN ARC TO FRM-COD-TOOC
                                             IN ARC-FLD(WSS-IFLD).
           MOVE ARC-COD-AOOC IN ARC TO FRM-COD-AOOC
                                             IN ARC-FLD(WSS-IFLD).
           MOVE ARC-CAI-IOPC IN ARC TO FRM-CAI-IOPC
                                             IN ARC-FLD(WSS-IFLD).
           MOVE ARC-IIC-IOPC IN ARC TO FRM-IIC-IOPC
                                             IN ARC-FLD(WSS-IFLD).

           MOVE SPACES TO FRM-GLS-VCOC IN ARC-FLD(WSS-IFLD).
      *BUS-TAB Busca Glosa Moneda de Tabla
           IF ARC-COD-VCOC IN ARC > SPACES
              MOVE 'TAB'               TO TAB-COD-SIST
              MOVE 'VLR'               TO TAB-COD-TTAB IN TAB
              MOVE ARC-COD-VCOC IN ARC TO TAB-COD-CTAB IN TAB
              PERFORM BUS-TAB
              MOVE TAB-GLS-ABRV IN TAB TO
                              FRM-GLS-VCOC IN ARC-FLD(WSS-IFLD).

           MOVE SPACES TO FRM-GLS-TOOC IN ARC-FLD(WSS-IFLD).
      *BUS-TAB Busca Glosa Moneda de Tabla
           IF ARC-COD-TOOC IN ARC > SPACES
              MOVE 'TAB'               TO TAB-COD-SIST
              MOVE 'TIO'               TO TAB-COD-TTAB IN TAB
              MOVE ARC-COD-TOOC IN ARC TO TAB-COD-CTAB IN TAB
              PERFORM BUS-TAB
              MOVE TAB-GLS-ABRV IN TAB TO
                              FRM-GLS-TOOC IN ARC-FLD(WSS-IFLD).

           MOVE SPACES TO FRM-GLS-AOOC IN ARC-FLD(WSS-IFLD).
      *BUS-TAB Busca Glosa Cod. Auxiliar de Tabla
           IF ARC-COD-AOOC IN ARC NOT > SPACES
               GO TO FIN-PUT-AOOC.

      * BUSCA C. AUX CONTRA COL/AUX, CUANDO TIPO DE OPERACION SEA
      * DE 'COL' ( TIO-GLS-SIST = 'COL') SI NO CONTRA TAB/AUX.

           MOVE 'TAB' TO FIO-SIST.
           MOVE 'TIO' TO TAB-COD-TTAB IN TAB
           MOVE ARC-COD-TOOC IN ARC TO TAB-COD-CTAB IN TAB.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM GNS-FIO-TAB.

           MOVE TAB  TO TIO.

           IF TIO-GLS-SIST IN TIO = 'COL'
              MOVE 'COL'               TO TAB-COD-SIST
           ELSE
              MOVE 'TAB'               TO TAB-COD-SIST.

           MOVE 'AUX'               TO TAB-COD-TTAB IN TAB.
           MOVE ARC-COD-TOOC IN ARC TO WSS-COD-TOPE.
           MOVE ARC-COD-AOOC IN ARC TO WSS-COD-AOPE.
           MOVE WSS-COD-COPE        TO TAB-COD-CTAB IN TAB.
           PERFORM BUS-TAB.
           MOVE TAB-GLS-ABRV IN TAB TO
                              FRM-GLS-AOOC IN ARC-FLD(WSS-IFLD).
       FIN-PUT-AOOC.

       NXT-PUT-TAB-ARC.
           MOVE FIO-GET-NXT    TO FIO-CMND.
           PERFORM LDC-FIO-ARC.
           IF FIO-STAT-OKS AND
              ARC-KEY-ILDC IN WSS-VARI = ARC-KEY-ILDC IN ARC
              GO TO INI-PUT-TAB-ARC.

           IF FIO-STAT-OKS
               MOVE FIO-END-BRW TO FIO-CMND
               PERFORM LDC-FIO-ARC.
       FIN-PUT-TAB-ARC.
           EXIT.

       LIM-RES-LIN SECTION.
       INI-LIM-RES-LIN.
           MOVE SPACES TO FRM-COD-VCOC   IN ARC-FLD(WSS-IFLD),
                          FRM-GLS-VCOC   IN ARC-FLD(WSS-IFLD),
                          FRM-COD-TOOC   IN ARC-FLD(WSS-IFLD),
                          FRM-GLS-TOOC   IN ARC-FLD(WSS-IFLD),
                          FRM-COD-AOOC   IN ARC-FLD(WSS-IFLD),
                          FRM-GLS-AOOC   IN ARC-FLD(WSS-IFLD),
                          FRM-CAI-IOPC   IN ARC-FLD(WSS-IFLD).

           MOVE ZEROES TO FRM-IIC-IOPC   IN ARC-FLD(WSS-IFLD).
           ADD 1 TO WSS-IFLD.
       FIN-PUT-TAB-ARC.
           EXIT.

       PGM-EBR-ALL SECTION.                                             
       INI-PGM-EBR-ALL.                                                 
           MOVE FIO-EBR-ALL TO FIO-CMND.                                
           PERFORM LDC-FIO-ARC.                                         
       FIN-PGM-EBR-ALL.                                                 
           EXIT.                                                        

      *>>>>

      *>>>>
