       IDENTIFICATION DIVISION.
      *========================
       PROGRAM-ID.   LDCPQCLL.
       AUTHOR.       BEE.
       DATE-WRITTEN. 08-May-19 12:09 PM.

      * NOMBRE PROGRAMA                   LDCPQCLL
      * VERSION PGM                       3.1
      * VERSION SKL                       19.04.15
      * OPCION                            CON
      * ARCHIVO BASE                      LDCLCC
      * PANTALLA                          LDCCLL
      * INP/OUT                           DATACOM
      * TAMANO COMMAREA                   250


       ENVIRONMENT DIVISION.
      *=====================
       CONFIGURATION SECTION.
      *----------------------
       SPECIAL-NAMES.
               DECIMAL-POINT IS COMMA.
       DATA DIVISION.
      *==============

       WORKING-STORAGE SECTION.
      *------------------------
      * COPY GNSWGSCR.
       COPY GNSWGCVT.
       77  WSS-TAG-LDCPQCLL-INI PIC X(125) VALUE                        
           '<IDNPGM NOM=$LDCPQCLL$ SKL=$19.04.15$ VSN=${vsnpq}$        
      -    'GEN=$08-May-19 12:09 PM$ FNC=${fncpq}$/>'.    

       COPY GNSWCSCR.
      *PTC-INI
      *PTC-SUB
      * COPY GNSWVSCR.
       COPY GNSWV3CR.
      *PTC-FIN
      *<<<< MI_COMMAREA
           03 CMA-VARI.
              05 SCR-IMAX      COMP                   PIC S9(04).
              05 SCR-I         COMP                   PIC S9(04).
      *>>>>
       COPY LDCWICLL.

       COPY LDCBRLCC.


       COPY GNSWVIDD.
       COPY GNSWGRQA.
       COPY GNSWGUIB.
       COPY GNSWGELS.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-LCC-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-TAB-REQA==.
       COPY GNSBRTAB.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-MSC-REQA==.
       COPY GNSBRMSC.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-MSG-REQA==.
       COPY GNSBRMSG.
       COPY GNSWCFIO.
       COPY GNSWVFIO.
      *PTC-INI
      *PTC-SUB
      * ISP  10-MAY-2001 13:46:35 
      * COPY GNSWGFRM.
       COPY GNSWG3CF.
       COPY GNSWGTSK.
       COPY GNSWGQUE.
      *PTC-FIN
       COPY GNSWVNUM.
       COPY GNSWCNUM.
       COPY GNSWGFEC.
       COPY GNSWGHOY.
       COPY GNSWCVRF.
       COPY GNSWVVRF.
       COPY GNSWGIDC.
       COPY GNSWGSYS.

      *<<<< WSS
       COPY LDCWGCLL.
       COPY SGCBRDBC.
       COPY LDCBRRDC.
       COPY LDCBRCLF.
       COPY LDCBRLDC.
       COPY GNSWGCPT.
       COPY GNSWGPES.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-LDC-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-RDC-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-DBC-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-CLF-REQA==.
       COPY GNSBBTAB.

       01  WSS-VARI.
           03  WSS-COD-MENS                      PIC X(12).
           03  WSS-LINE   VALUE ALL '-'          PIC X(79).
           03  WSS-CLL-IMAX    VALUE ZEROES      PIC 9(03).
           03  WSS-I                              PIC 9(02).
           03  WSS-COD-PESO                       PIC X(06).
           03  WSS-FEC-FCP1.
               05  WSS-NUM-SCP1                   PIC 9(02).
               05  WSS-NUM-ACP1                   PIC 9(02).
               05  WSS-NUM-MCP1                   PIC 9(02).
               05  WSS-NUM-DCP1                   PIC 9(02).
           03  WSS-FEC-FCP2.
               05  WSS-NUM-SCP2                   PIC 9(02).
               05  WSS-NUM-ACP2                   PIC 9(02).
               05  WSS-NUM-MCP2                   PIC 9(02).
               05  WSS-NUM-DCP2                   PIC 9(02).
           03  WSS-GLS-DATA.
               05 WSS-GLS-FIL1            PIC X(03).
               05 WSS-GLS-ENTI            PIC X(05).
               05 WSS-GLS-FIL2            PIC X(52).
      *>>>>
       01  PGM-VARI.
           03 PGM-ICLR                  VALUE ' '       PIC X(01).
           03 PGM-LIMPIAR-TODO          VALUE ' '       PIC X(01).
           03 PGM-LIMPIAR-LLAVES        VALUE 'K'       PIC X(01).
           03 PGM-LIMPIAR-CAMPOS        VALUE 'F'       PIC X(01).
           03 PGM-NO-LIMPIAR-NADA       VALUE 'N'       PIC X(01).
           03 PGM-PROG                                  PIC X(08).
           03 PGM-NTRN                                  PIC X(04).
           03 PGM-STAT.
              05 PGM-STAT-CLF.
                 88 PGM-STAT-CLF-NUL    VALUE '  '.
                 07 PGM-STT1-CLF        VALUE '2' PIC X(01).
                    88 PGM-STAT-CLF-OKS VALUE '0'.
                 07 PGM-STT2-CLF        VALUE '3' PIC X(01).
              05 PGM-STAT-LDC.
                 88 PGM-STAT-LDC-NUL    VALUE '  '.
                 07 PGM-STT1-LDC        VALUE '2' PIC X(01).
                    88 PGM-STAT-LDC-OKS VALUE '0'.
                 07 PGM-STT2-LDC        VALUE '3' PIC X(01).
              05 PGM-STAT-LCC.
                 88 PGM-STAT-LCC-NUL    VALUE '  '.
                 07 PGM-STT1-LCC        VALUE '2' PIC X(01).
                    88 PGM-STAT-LCC-OKS VALUE '0'.
                 07 PGM-STT2-LCC        VALUE '3' PIC X(01).
           03 PGM-SRNF                  VALUE '23'      PIC X(02).
           03 PGM-SOKS                  VALUE '00'      PIC X(02).
           03 PGM-SNUL                  VALUE '  '      PIC X(02).
           03 PGM-SUAR                  VALUE SPACES    PIC X(15).
       LINKAGE SECTION.
      *----------------
       01  DFHCOMMAREA.
           02 FILLER                    PIC X(270).
       COPY GNSLGFIO.

       PROCEDURE DIVISION.
      *===================

       MAIN SECTION.
       INI-MAIN.
           PERFORM INI.
       LUP-MAIN.
           IF SCR-INST = SCR-INST-HCM
                 PERFORM SCR-COM.
           IF SCR-CCPP = 'ACC'
                 PERFORM SCR-ACC
           ELSE
                 MOVE SCR-INST-HCM TO SCR-INST.
           GO TO LUP-MAIN.
       FIN-MAIN.
           EXIT.

       INI SECTION.
       INI-INI.
       COPY GNSBGEIB.
       COPY GNSBGEDB.
           MOVE LOW-VALUES TO CLL-FLD.
           MOVE LOW-VALUES TO CLL-EDT.
           PERFORM GNS-PRO-RCK.
           PERFORM GNS-BUS-VCA.
           MOVE +270 TO SCR-TCMA.
           PERFORM GNS-HDL-SYS.
           PERFORM GNS-HDL-FRM.
           MOVE 'LDCPQCLL' TO FIO-PROG.
           PERFORM GNS-BUS-IDD.
      *PTC-INI
           PERFORM GNS-ERR-QUE.
           PERFORM GET-TSK-TERM.
      *PTC-FIN
       FIN-INI.
           EXIT.

       COPY GNSBHSYS.
       COPY GNSBHFRM.
       COPY GNSBPRCK.
       COPY GNSBBVCA.
       COPY GNSBBIDD.

       SCR-COM SECTION.
       INI-SCR-COM.
           MOVE FRM-CPSF-AEY TO FRM-CPIM-AEY.
           PERFORM PRO-ALL.
           PERFORM SCR-CLRA-CLL.
           PERFORM EDT-KEY-CLL.
           PERFORM EDT-FLD-CLL.
           PERFORM SCR-PUTA.
           MOVE SCR-INST-HCM TO SCR-INST.
           MOVE SCR-CMNP     TO SYS-PROG.
           MOVE SCR-VARI     TO SYS-CMMA.
           MOVE SCR-TCMA     TO SYS-TCMA.
           MOVE SYS-XCTL     TO SYS-CMND.
      *PTC-INI
           IF NOT SCR-OFRM-SRV
      *PTC-FIN
           PERFORM GNS-PRO-SYS.
       XCT-ERR.
           MOVE 'XCTERR    ' TO MSG-COD-MENS.
           MOVE 'GNS'        TO MSG-COD-SIST.
           PERFORM GET-MSG.
           MOVE MSG-GLS-DESC TO SYS-MEN1.
           MOVE SYS-PROG     TO SYS-MEN2.
           MOVE SYS-ABOR     TO SYS-CMND.
      *PTC-INI
           IF NOT SCR-OFRM-SRV
      *PTC-FIN
           PERFORM GNS-PRO-SYS.
       COPY GNSBGGBK.
       FIN-SCR-COM.
           EXIT.



       SCR-ACC SECTION.
       INI-SCR-ACC.
           IF SCR-INST = SCR-INST-HKY
               PERFORM HBL-KEY
               MOVE SCR-INST-GKY TO SCR-INST
               PERFORM SCR-DMSG
           ELSE
           IF SCR-INST = SCR-INST-GKY
                PERFORM SCR-KEY
                IF SCR-STAT NOT = SCR-STAT-ABT
                        PERFORM SCR-TRL
                ELSE
                        PERFORM DESSCRTRL
                        GO TO FIN-SCR-ACC
           ELSE
           IF SCR-INST = SCR-INST-GAB
                PERFORM GET-CON
           ELSE
           IF SCR-INST = SCR-INST-BRW
               MOVE SCR-FFLD TO FRM-FFLD
               PERFORM BRW-SCR-ACC.
           PERFORM DESSCRTRL.
      *<<<< PFS_SCR_ACC
           IF FRM-FFLD = FRM-FFLD-PF6
                    OR   FRM-FFLD-PF5
               PERFORM VAL-NUM-KEY-CLL
               PERFORM VAL-NUM-FLD-CLL
               PERFORM RST-STAT
               PERFORM FND-SCR-KEY THRU FIN-SCR-KEY
               IF SCR-STAT NOT = SCR-STAT-ABT
                   PERFORM SCR-TRL
               ELSE
                   PERFORM DESSCRTRL
                   GO TO FIN-SCR-ACC.
      *>>>>
           MOVE SPACES TO FRM-MENS.
           PERFORM SCR-MSSG.
       FIN-SCR-ACC.
           EXIT.

       BRW-SCR-ACC SECTION.
       INI-BRW-SCR-ACC.
       FIN-BRW-SCR-ACC.
           EXIT.




       SCR-DMSG SECTION.
       INI-SCR-DMSG.
           IF PGM-ICLR = PGM-NO-LIMPIAR-NADA
               NEXT SENTENCE
           ELSE
           IF PGM-ICLR = PGM-LIMPIAR-TODO
               PERFORM SCR-CLRA-CLL
               PERFORM EDT-KEY-CLL
               PERFORM EDT-FLD-CLL
           ELSE
           IF PGM-ICLR = PGM-LIMPIAR-LLAVES
               PERFORM CLR-KEY-CLL
               PERFORM EDT-KEY-CLL
           ELSE
               PERFORM CLR-FLD-CLL
               PERFORM EDT-FLD-CLL.
           PERFORM SCR-PUTA.
           PERFORM SCR-EXIT.
       FIN-SCR-DMSG.
           EXIT.

       SCR-KEY SECTION.
       INI-SCR-KEY.
           PERFORM SCR-RST.
           PERFORM GET-KEY.
           IF FRM-STAT-ABT
                   MOVE SPACES TO FRM-MENS
                   PERFORM SCR-MSSG
                   GO TO FIN-SCR-KEY.
       FND-SCR-KEY.
           MOVE SPACES TO FRM-MENS.
           PERFORM FND-KEY.
           IF FIO-STAT-OKS
               PERFORM PUT-SCR
               MOVE PGM-LIMPIAR-TODO TO PGM-ICLR
               GO TO FIN-SCR-KEY.
      *JSS ELSE
      *        PERFORM CLR-FLD-CLL.
       ERR-SCR-KEY.
      *PTC-INI
           MOVE 'S' TO SCR-IERR.
      *PTC-FIN
           MOVE PGM-LIMPIAR-CAMPOS TO PGM-ICLR.
           IF FRM-MENS NOT > SPACES
               IF FIO-STAT-EOF
                   MOVE 'REGEOF    ' TO MSG-COD-MENS
                   MOVE 'GNS' TO MSG-COD-SIST
                   PERFORM GET-MSG
                   MOVE MSG-GLS-DESC TO FRM-MENS
               ELSE
               IF FIO-STAT = FIO-STAT-NEX
                   MOVE 'REGNEX    ' TO MSG-COD-MENS
                   MOVE 'GNS' TO MSG-COD-SIST
                   PERFORM GET-MSG
                   MOVE MSG-GLS-DESC TO FRM-MENS
               ELSE
                   MOVE 'FIOSTAT' TO MSG-COD-TMSG
                   MOVE FIO-STAT  TO MSG-COD-CMSG
                   MOVE 'GNS'     TO MSG-COD-SIST
                   PERFORM GET-MSG
                   MOVE MSG-GLS-DESC TO FRM-MENS.
           PERFORM SCR-MSSG.
           MOVE SCR-STAT-ABT TO SCR-STAT.
       FIN-SCR-KEY.
           EXIT.

       SCR-RST SECTION.
       INI-SCR-RST.
           MOVE SPACES       TO PGM-ICLR.
           MOVE SPACES       TO SCR-ACTU.
           MOVE SCR-STPP     TO SCR-STAT.
           MOVE SCR-MFLD-NOT TO SCR-MFLD.
           MOVE LOW-VALUES   TO CLL-FLD.
           MOVE LOW-VALUES TO CLL-EDT.
       FIN-SCR-RST.
           EXIT.

       GET-KEY SECTION.
       INI-GET-KEY.
           PERFORM SCR-GKEY.
           IF FRM-STAT-ABT
               MOVE SCR-STAT-ABT TO SCR-STAT.
       FIN-GET-KEY.
           EXIT.

       GET-IKY SECTION.
       INI-GET-IKY.
           PERFORM SCR-GIKY.
           IF FRM-STAT-ABT
               MOVE SCR-STAT-ABT TO SCR-STAT.
       FIN-GET-IKY.
           EXIT.

       FND-KEY SECTION.
       INI-FND-KEY.
      *<<<< INI_FND_KEY
           MOVE SPACES TO FRM-MEN1.
           IF FRM-FFLD = FRM-FFLD-PF5
               MOVE PGM-SNUL TO PGM-STAT-LCC
               MOVE PGM-SNUL TO PGM-STAT-LCC
               SUBTRACT 1 FROM SCR-I GIVING CLL-I
               IF CLL-I NOT > ZEROES
                   MOVE 'LCC  PROPRV' TO MSG-COD-MENS
                   GO TO ERR-FND-KEY
               ELSE
                   GO TO CARGA-CLL
           ELSE
           IF FRM-FFLD = FRM-FFLD-PF6
               MOVE PGM-SNUL TO PGM-STAT-LCC
               MOVE PGM-SNUL TO PGM-STAT-LCC
               ADD 1 SCR-I GIVING CLL-I
               IF CLL-I > SCR-IMAX
                   MOVE 'RLO PRONXT' TO MSG-COD-MENS
                   GO TO ERR-FND-KEY
               ELSE
                   GO TO CARGA-CLL.
           GO TO CON-FND-KEY.
      *>>>>
           PERFORM KEY-ALL-CLL.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM LDC-FIO-LCC.
           IF FIO-STAT-OKS
               MOVE LCC-STP-ITRN IN LCC TO SCR-UMOD.
           MOVE FIO-STAT TO PGM-STAT-LCC.
      *<<<< FIN_FND_KEY
           IF NOT FIO-STAT-OKS
               GO TO FIN-FND-KEY.
       CON-FND-KEY.

           MOVE ZEROES TO SCR-IMAX.
           MOVE 1 TO SCR-I.
           MOVE '00' TO FIO-STAT.
           MOVE SPACES TO WSS-COD-MENS.
           PERFORM OBT-DAT-TS.
           IF WSS-COD-MENS > SPACES
               MOVE WSS-COD-MENS TO MSG-COD-MENS IN MSG
               GO TO ERR-FND-KEY.
           MOVE 1 TO SCR-I.
           MOVE SCR-I TO CLL-I.
       CARGA-CLL.
           MOVE SPACES TO MSG-COD-MENS.
           IF NOT SCR-OFRM-SRV
           PERFORM PUT-TAB-CLL.
           MOVE '00' TO FIO-STAT.
           GO TO FIN-FND-KEY.
      *
       ERR-FND-KEY.
           MOVE SCR-STAT-CON TO SCR-STAT.

           MOVE 'LDC'  TO MSG-COD-SIST.
           PERFORM GET-MSG.
           MOVE MSG-GLS-DESC TO FRM-MEN1.
           MOVE '00' TO FIO-STAT.
           GO TO FIN-FND-KEY.
      *>>>>
       FIN-FND-KEY.
           IF FIO-STAT = FIO-STAT-NEX
               MOVE 'S' TO SCR-IERR.
       EXT-FND-KEY.
           EXIT.
 
       PUT-SCR SECTION.
       INI-PUT-SCR.
           IF PGM-STAT-LCC-OKS
               MOVE LCC-STP-ITRN IN LCC TO SCR-UMOD.
           PERFORM PUT-ALL-CLL.
       FIN-PUT-SCR.
           EXIT.

       STP-EXIT SECTION.
       INI-STP-EXIT.
           MOVE SCR-PROG TO PGM-PROG.
           MOVE SCR-NTRN TO PGM-NTRN.

           MOVE SCR-PROV TO SCR-PROG.
           MOVE SCR-NTRV TO SCR-NTRN.

           MOVE PGM-PROG TO SCR-PROV
           MOVE PGM-NTRN TO SCR-NTRV.
       FIN-STP-EXIT.
           EXIT.

       SCR-EXIT SECTION.
       INI-SCR-EXIT.
           MOVE 'P'      TO SCR-ICMN.
           MOVE SCR-NTRN TO SYS-NTRN.
           MOVE SCR-VARI TO SYS-CMMA.
           MOVE SCR-TCMA TO SYS-TCMA.
           MOVE SYS-RTRN TO SYS-CMND.
      *PTC-INI
           IF NOT SCR-OFRM-SRV
      *PTC-FIN
           PERFORM GNS-PRO-SYS.
       FIN-SCR-EXIT.
           EXIT.

       SCR-PUTA SECTION.
       INI-SCR-PUTA.
      *PTC-INI
           IF FRM-SUAR EQUAL FRM-SUAR-MAL OR FRM-SUAR-CLR
               MOVE 'S' TO SCR-IERR.
      *PTC-FIN
           MOVE SCR-NMAP TO FRM-NAME.
           MOVE SCR-NLIB TO FRM-NLIB.
           MOVE CLL-FLD TO FRM-DFLD.
           MOVE FRM-PUT-ALL TO FRM-CMND.
           PERFORM GNS-PRO-FRM.
       FIN-SCR-PUTA.
           EXIT.

       SCR-MSSG SECTION.
       INI-SCR-MSSG.
           IF FRM-MEN1 NOT > SPACES
               MOVE SPACES TO FRM-MEN1.
           IF FRM-MEN2 NOT > SPACES
               MOVE SPACES TO FRM-MEN2.
           MOVE FRM-MENS TO CLL-GLS-MENS.
       FIN-SCR-MSSG.
           EXIT.

       SCR-GKEY SECTION.
       INI-SCR-GKEY.
           MOVE SCR-NMAP TO FRM-NAME.
           MOVE SCR-NLIB TO FRM-NLIB.
           MOVE FRM-GET-ALL TO FRM-CMND.
           PERFORM GNS-PRO-FRM.
           MOVE SPACES TO FRM-MENS.
           IF NOT ( FRM-FFLD = FRM-FFLD-RET  OR FRM-FFLD-PF10 OR
                               FRM-FFLD-PF12 OR FRM-FFLD-PF3 )
               MOVE 'PFSINV    ' TO MSG-COD-MENS
               MOVE 'GNS' TO MSG-COD-SIST
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS
               PERFORM FST-KEY-CLL
               PERFORM SCR-MSSG
               PERFORM SCR-PUTA
               PERFORM SCR-EXIT.
           MOVE FRM-DFLD TO CLL-FLD.
           IF FRM-STAT-ABT
               GO TO FIN-SCR-GKEY.
           MOVE FRM-SUAR-OKS TO FRM-SUAR.
           PERFORM VAL-NUM-KEY-CLL.
           IF FRM-SUAR EQUAL FRM-SUAR-MAL OR FRM-SUAR-CLR
      *PTC-INI
               MOVE 'S' TO SCR-IERR
      *PTC-FIN
               PERFORM SCR-MSSG
               PERFORM EDT-KEY-CLL
               PERFORM SCR-PUTA
               PERFORM SCR-EXIT.
      *JSS
           PERFORM CLR-FLD-CLL.
           PERFORM VAL-IKY-CLL.
           IF FRM-SUAR EQUAL FRM-SUAR-MAL OR FRM-SUAR-CLR
               GO TO ERR-SCR-GKEY.
           PERFORM VAL-MKY-CLL.
           IF FRM-SUAR EQUAL FRM-SUAR-MAL OR FRM-SUAR-CLR
               GO TO ERR-SCR-GKEY.
           PERFORM VAL-AKY-CLL.
           IF FRM-SUAR EQUAL FRM-SUAR-MAL OR FRM-SUAR-CLR
               GO TO ERR-SCR-GKEY.
           PERFORM VAL-CON-KEY-CLL.
           IF NOT ( FRM-SUAR EQUAL FRM-SUAR-MAL OR FRM-SUAR-CLR )
               GO TO FIN-SCR-GKEY.
           IF FRM-UCUR NOT > SPACES
               PERFORM FST-KEY-CLL.
       ERR-SCR-GKEY.
      *PTC-INI
           MOVE 'S' TO SCR-IERR.
      *PTC-FIN
           PERFORM SCR-MSSG.
           PERFORM EDT-KEY-CLL.
           PERFORM SCR-PUTA.
           PERFORM SCR-EXIT.
       FIN-SCR-GKEY.
           PERFORM SCR-MSSG.

       SCR-GIKY SECTION.
       INI-SCR-GIKY.
           MOVE SCR-NMAP TO FRM-NAME.
           MOVE SCR-NLIB TO FRM-NLIB.
           MOVE FRM-GET-ALL TO FRM-CMND.
           PERFORM GNS-PRO-FRM.
           MOVE SPACES TO FRM-MENS.
           IF NOT ( FRM-FFLD = FRM-FFLD-RET  OR FRM-FFLD-PF10 OR
                               FRM-FFLD-PF12 OR FRM-FFLD-PF3 )
               MOVE 'PFSINV    ' TO MSG-COD-MENS
               MOVE 'GNS' TO MSG-COD-SIST
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS
               PERFORM FST-KEY-CLL
               PERFORM SCR-MSSG
               PERFORM SCR-PUTA
               PERFORM SCR-EXIT.
           MOVE FRM-DFLD TO CLL-FLD.
           IF FRM-STAT-ABT
               GO TO FIN-SCR-GIKY.
           MOVE FRM-SUAR-OKS TO FRM-SUAR.
           PERFORM VAL-NUM-KEY-CLL.
           IF FRM-SUAR EQUAL FRM-SUAR-MAL OR FRM-SUAR-CLR
      *PTC-INI
               MOVE 'S' TO SCR-IERR
      *PTC-FIN
               PERFORM SCR-MSSG
               PERFORM EDT-IKY-CLL
               PERFORM SCR-PUTA
               PERFORM SCR-EXIT.
      *JSS
           PERFORM CLR-FLD-CLL.
           PERFORM VAL-IKY-CLL.
           IF FRM-SUAR EQUAL FRM-SUAR-MAL OR FRM-SUAR-CLR
               GO TO ERR-SCR-GIKY.
           PERFORM VAL-CON-IKY-CLL.
           IF NOT ( FRM-SUAR EQUAL FRM-SUAR-MAL OR FRM-SUAR-CLR )
               GO TO FIN-SCR-GIKY.
           IF FRM-UCUR NOT > SPACES
               PERFORM FST-KEY-CLL.
       ERR-SCR-GIKY.
      *PTC-INI
           MOVE 'S' TO SCR-IERR.
      *PTC-FIN
           PERFORM SCR-MSSG.
           PERFORM EDT-IKY-CLL.
           PERFORM SCR-PUTA.
           PERFORM SCR-EXIT.
       FIN-SCR-GIKY.
           PERFORM SCR-MSSG.

       GET-CON SECTION.
       INI-GET-CON.
           MOVE SCR-NMAP TO FRM-NAME.
           MOVE SCR-NLIB TO FRM-NLIB.
           MOVE FRM-GET-ALL TO FRM-CMND.
           PERFORM GNS-PRO-FRM.
           IF NOT ( FRM-FFLD = FRM-FFLD-RET  OR FRM-FFLD-PF10 OR
                               FRM-FFLD-PF12 OR FRM-FFLD-PF3 )
      *<<<< PFS_GET_CON OR PFS_GET_ACC
           IF NOT (FRM-FFLD = FRM-FFLD-PF6
                         OR   FRM-FFLD-PF5)
      *>>>>
               MOVE 'PFSINV    ' TO MSG-COD-MENS
               MOVE 'GNS' TO MSG-COD-SIST
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO CLL-GLS-MEN2
               MOVE SCR-PRMT     TO CLL-GLS-MEN1
               PERFORM FST-MSG
               PERFORM SCR-PUTA
               PERFORM SCR-EXIT.
           MOVE FRM-DFLD TO CLL-FLD.
       FIN-GET-CON.
           MOVE SCR-STAT-CON TO SCR-STAT.

       CLR-MSG SECTION.
       INI-CLR-MSG.
           MOVE SPACES TO CLL-GLS-MENS.
       FIN-CLR-MSG.
           EXIT.

       HBL-IKY SECTION.
       INI-HBL-IKY.
      *PTC-INI
           IF NOT SCR-OFRM-SRV
      *PTC-FIN
           IF SCR-DESDE-CMN
               MOVE CLL-GLS-MENS TO FRM-MENS
               MOVE LOW-VALUES TO CLL-FLD
      * FLB  7-NOV-1994
               PERFORM CLR-KEY-CLL

               IF FRM-MENS < SPACES
                   MOVE LOW-VALUES TO CLL-GLS-MENS
               ELSE
                   MOVE FRM-MENS TO CLL-GLS-MENS.
           PERFORM PRO-MKY-CLL.
           PERFORM PRO-AKY-CLL.
           PERFORM UNP-IKY-CLL.
           PERFORM FST-KEY-CLL.
       FIN-HBL-IKY.
           EXIT.

       HBL-KEY SECTION.
       INI-HBL-KEY.
      *PTC-INI
           IF NOT SCR-OFRM-SRV
      *PTC-FIN
           IF SCR-DESDE-CMN
               MOVE CLL-GLS-MENS TO FRM-MENS
               MOVE LOW-VALUES TO CLL-FLD
               IF FRM-MENS < SPACES
                   MOVE LOW-VALUES TO CLL-GLS-MENS
               ELSE
                   MOVE FRM-MENS TO CLL-GLS-MENS.
           PERFORM UNP-KEY-CLL.
           PERFORM FST-KEY-CLL.
       FIN-HBL-KEY.
           EXIT.

       HBL-FLD SECTION.
       INI-HBL-FLD.
           PERFORM PRO-IKY-CLL.
           PERFORM PRO-AKY-CLL.
           PERFORM UNP-MKY-CLL.
           PERFORM UNP-FLD-CLL.
           PERFORM FST-FLD-CLL.
       FIN-HBL-FLD.
           EXIT.

       FST-MSG SECTION.
       INI-FST-MSG.
           MOVE -1 TO CLL-GLS-MENS-LEN.
       FIN-FST-MSG.
           EXIT.

       PRO-ALL SECTION.
       INI-PRO-ALL.
           PERFORM PRO-KEY-CLL.
           PERFORM FST-MSG.
       FIN-PRO-ALL.
           EXIT.

       SCR-TRL SECTION.
       INI-SCR-TRL.
      *PTC-INI
           IF SCR-STAT NOT = SCR-STPP
               MOVE 'S' TO SCR-IERR.
      *PTC-FIN
           IF FRM-MEN1 NOT > SPACES
               MOVE SCR-PRMT TO FRM-MEN1.
           IF SCR-STAT = SCR-STAT-MOD
               PERFORM HBL-FLD
               PERFORM SCR-MSSG
               PERFORM EDT-KEY-CLL
               PERFORM EDT-FLD-CLL
               PERFORM SCR-PUTA
               PERFORM STP-EXIT
               MOVE SCR-INST-GFL TO SCR-INST
               PERFORM SCR-EXIT.
           IF SCR-STAT = SCR-STAT-SON
               PERFORM PRO-ALL
               PERFORM SCR-MSSG
               PERFORM EDT-KEY-CLL
               PERFORM EDT-FLD-CLL
               PERFORM SCR-PUTA
               PERFORM STP-EXIT
               MOVE SCR-INST-GCS TO SCR-INST
               PERFORM SCR-EXIT.
      *ASUME SCR-STAT-CON.
           MOVE SCR-STAT-CON TO SCR-STAT.
      *    MOVE FRM-CPSF-AEY TO FRM-CPIM-AEY.
           PERFORM PRO-ALL.
           PERFORM SCR-MSSG.
           PERFORM EDT-KEY-CLL.
           PERFORM EDT-FLD-CLL.
           PERFORM SCR-PUTA.
           MOVE SCR-INST-GAB TO SCR-INST.
           PERFORM SCR-EXIT.
       FIN-SCR-TRL.
           EXIT.

       DESSCRTRL SECTION.
       INI-DESSCRTRL.
           MOVE SCR-VFLD-NOT TO SCR-VFLD.
           MOVE FRM-FFLD TO SCR-FFLD.
       FIN-DESSCRTRL.
           IF SCR-FFLD-PF10 OR SCR-FFLD-PF3
                 MOVE SCR-INST-HCM TO SCR-INST
           ELSE
                 MOVE SCR-INST-HKY TO SCR-INST.
       EXT-DESSCRTRL.
           EXIT.

      * PGM-EBR-ALL SECTION.
      * INI-PGM-EBR-ALL.
      *     MOVE 'GNS' TO FIO-SIST.
      *     MOVE FIO-EBR-ALL TO FIO-CMND.
      *     PERFORM GNS-FIO-TAB.
      * FIN-PGM-EBR-ALL.
      *     EXIT.

       COPY LDCBQCLL.
       COPY GNSBVNUM.
       COPY LDCBFLCC.
       COPY GNSBFMSG.
       COPY GNSBGSYS.
       COPY GNSBGDTC.
      *PTC-INI
      *PTC-SUB
      * ISP  10-MAY-2001 13:46:35 
      * COPY GNSBGFRM.
       COPY GNSBG3CF.
      *PTC-FIN
       COPY GNSBGMSG.
       COPY GNSBEKEY.
       COPY GNSBIABT.
       COPY GNSBFTAB.
       COPY GNSBVIND.
       COPY GNSBVMSC.
       COPY GNSBFMSC.
       COPY GNSBVIDC.
       COPY GNSBPVRF.
       COPY GNSBGFEC.
       COPY GNSBGHOY.
      *PTC-INI
       COPY GNSBGQUE.
       COPY GNSBGTSK.
      *PTC-FIN

      *<<<< EOF
       COPY GNSBGCPT.
       COPY SGCBFDBC.
       COPY LDCBFLDC.
       COPY LDCBFRDC.
       COPY LDCBFCLF.
       COPY GNSBFMSG.

       COPY GNSBEGLS.

       CAR-MOV-CLL SECTION.
       INI-CAR-MOV-CLL.
           IF LCC-CAI-ILIC IN CLL-FLD > SPACES OR
              LCC-IIC-ILIC IN CLL-FLD > SPACES
               PERFORM CAR-MOV-CLL-LCC
           ELSE
               PERFORM CAR-MOV-CLL-FEC.
       FIN-CAR-MOV-CLL.
           EXIT.


       CAR-MOV-CLL-LCC SECTION.
       INI-CAR-MOV-CLL-LCC.
              MOVE 'NOEXIS   LCC'          TO WSS-COD-MENS.
              MOVE LCC-CAI-ILIC IN CLL-FLD TO LCC-CAI-ILIC IN LCC.
              MOVE LCC-IIC-ILIC IN CLL-FLD TO LCC-IIC-ILIC IN LCC.
              MOVE FIO-GET-NLS TO FIO-CMND.
          LUP-CAR-MOV-CLL-LCC.
              MOVE 'LCC-KEY-ILIC' TO FIO-AKEY.
              PERFORM LDC-FIO-LCC.
              IF NOT (FIO-STAT-OKS AND
                      LCC-CAI-ILIC IN CLL-FLD = LCC-CAI-ILIC IN LCC AND
                      LCC-IIC-ILIC IN CLL-FLD = LCC-IIC-ILIC IN LCC)
                   GO TO FIN-CAR-MOV-CLL-LCC.
      *LEER CLF
              MOVE LCC-CAI-ICLF IN LCC TO CLF-CAI-ICLF IN CLF.
              MOVE LCC-IIC-ICLF IN LCC TO CLF-IIC-ICLF IN CLF.
              MOVE FIO-GET-KEY         TO FIO-CMND.
              PERFORM LDC-FIO-CLF.
              IF NOT FIO-STAT-OKS
                 GO TO FIN-CAR-MOV-CLL-LCC.

      *LEER LDC
              MOVE LCC-CAI-ICLF IN LCC TO LDC-CAI-ICLF IN LDC.
              MOVE LCC-IIC-ICLF IN LCC TO LDC-IIC-ICLF IN LDC.
              MOVE LCC-NUM-ILCC IN LCC TO LDC-NUM-ILDC IN LDC.
              MOVE FIO-GET-KEY         TO FIO-CMND.
              PERFORM LDC-FIO-LDC.
              IF NOT FIO-STAT-OKS
                 GO TO FIN-CAR-MOV-CLL-LCC.

              MOVE CLF-KEY-ICLF IN CLF TO RDC-CIC-ICLF IN RDC.
              MOVE 'RDC-KEY-ICLF'      TO FIO-AKEY.
              MOVE FIO-GET-KEY TO FIO-CMND.
              PERFORM LDC-FIO-RDC.
              IF NOT FIO-STAT-OKS
                  GO TO FIN-CAR-MOV-CLL-LCC.

              MOVE RDC-CIC-ICLI IN RDC TO DBC-CIC-ICLI IN DBC.
              MOVE FIO-GET-KEY TO FIO-CMND.
              PERFORM SGC-FIO-DBC.
              IF NOT FIO-STAT-OKS
                  GO TO FIN-CAR-MOV-CLL-LCC.

          VAL-CAR-MOV-CLL-LCC.
              MOVE SPACES              TO WSS-COD-MENS.
              MOVE LCC-CAI-ILIC IN LCC TO CLL-CAI-ILIC(CLL-I).
              MOVE LCC-IIC-ILIC IN LCC TO CLL-IIC-ILIC(CLL-I).
              MOVE LCC-CAI-ICLF IN LCC TO CLL-CAI-ICLF(CLL-I).
              MOVE LCC-IIC-ICLF IN LCC TO CLL-IIC-ICLF(CLL-I).
              MOVE LCC-NUM-ILCC IN LCC TO CLL-NUM-ILCC(CLL-I).
              MOVE LCC-VAL-MADJ IN LCC TO CLL-VAL-MADJ(CLL-I).
              MOVE LCC-VAL-MUTI IN LCC TO CLL-VAL-MUTI(CLL-I).
              MOVE LCC-VAL-RENU IN LCC TO CLL-VAL-RENC(CLL-I).
              MOVE LCC-VAL-UTIL IN LCC TO CLL-VAL-EUTI(CLL-I).
              MOVE LCC-FEC-FRNC IN LCC TO CLL-FEC-FRNC(CLL-I).
              COMPUTE CLL-VAL-DISP(CLL-I) = (LCC-VAL-MADJ IN LCC) -
                                            (LCC-VAL-MUTI IN LCC) -
                                            (LCC-VAL-RENU IN LCC).
              COMPUTE CLL-VAL-FUTI(CLL-I) = (CLL-VAL-DISP(CLL-I) * 100)
                                          / LCC-VAL-MADJ IN LCC.
              COMPUTE CLL-VAL-UTIL(CLL-I) = (LCC-VAL-MUTI IN LCC *100)
                                           / LCC-VAL-MADJ IN LCC.
           IF LCC-COD-VCOC IN LCC > SPACES
               MOVE 'TAB' TO TAB-COD-SIST
               MOVE 'VLR' TO TAB-COD-TTAB IN TAB
               MOVE LCC-COD-VCOC IN LCC TO TAB-COD-CTAB IN TAB
               PERFORM BUS-TAB
               MOVE TAB-GLS-ABRV IN TAB TO
                    CLL-GLS-VCOC(CLL-I).

              MOVE DBC-NUM-ICLI IN DBC TO CLL-NUM-ICLI(CLL-I).
              MOVE DBC-VRF-ICLI IN DBC TO CLL-VRF-ICLI(CLL-I).
              MOVE DBC-IND-ICLI IN DBC TO CLL-IND-ICLI(CLL-I).
              MOVE DBC-GLS-ICLI IN DBC TO CLL-GLS-ICLI(CLL-I).
              MOVE DBC-GLS-NOMC IN DBC TO CPT-STRN.
              PERFORM CPT-BLKS.
              MOVE CPT-STRN            TO CLL-GLS-NOMC(CLL-I).
      *LEER LDC PARA OBTENER DATOS
              MOVE LDC-COD-TIPO IN LDC TO CLL-COD-TIPO(CLL-I).

              MOVE CLF-NUM-PVIG IN CLF TO CLL-NUM-PVIG(CLL-I).
              MOVE CLF-IND-PVIG IN CLF TO CLL-IND-PVIG(CLL-I).
              MOVE CLF-FEC-FAPE IN CLF TO CLL-FEC-FINI(CLL-I).
              MOVE CLF-FEC-FVEN IN CLF TO CLL-FEC-FVEN(CLL-I).

          NXT-CAR-MOV-CLL-LCC.
              PERFORM INC-REG-TS.
          SIG-CAR-MOV-CLL-LCC.
              MOVE FIO-GET-NXT TO FIO-CMND.
              GO TO LUP-CAR-MOV-CLL-LCC.

       FIN-CAR-MOV-CLL-LCC.
           EXIT.

       CAR-MOV-CLL-FEC SECTION.
       INI-CAR-MOV-CLL-FEC.
              MOVE 'NOEXIS   LCC'          TO WSS-COD-MENS.
              MOVE LOW-VALUES                     TO LCC-KEY-ILCC IN LCC
              MOVE FIO-GET-NLS TO FIO-CMND.
          LUP-CAR-MOV-CLL-FEC.
              PERFORM LDC-FIO-LCC.
              IF NOT FIO-STAT-OKS
                  GO TO FIN-CAR-MOV-CLL-FEC.
      *LEER CLF
              MOVE LCC-CAI-ICLF IN LCC TO CLF-CAI-ICLF IN CLF.
              MOVE LCC-IIC-ICLF IN LCC TO CLF-IIC-ICLF IN CLF.
              MOVE FIO-GET-KEY         TO FIO-CMND.
              PERFORM LDC-FIO-CLF.
              IF NOT FIO-STAT-OKS
                 GO TO SIG-CAR-MOV-CLL-FEC.

      *LEER LDC
              MOVE LCC-CAI-ICLF IN LCC TO LDC-CAI-ICLF IN LDC.
              MOVE LCC-IIC-ICLF IN LCC TO LDC-IIC-ICLF IN LDC.
              MOVE LCC-NUM-ILCC IN LCC TO LDC-NUM-ILDC IN LDC.
              MOVE FIO-GET-KEY         TO FIO-CMND.
              PERFORM LDC-FIO-LDC.
              IF NOT FIO-STAT-OKS
                 GO TO SIG-CAR-MOV-CLL-FEC.


              MOVE CLF-KEY-ICLF IN CLF TO RDC-CIC-ICLF IN RDC.
              MOVE 'RDC-KEY-ICLF'      TO FIO-AKEY.
              MOVE FIO-GET-KEY TO FIO-CMND.
              PERFORM LDC-FIO-RDC.
              IF NOT FIO-STAT-OKS
                  GO TO SIG-CAR-MOV-CLL-FEC.

              MOVE RDC-CIC-ICLI IN RDC TO DBC-CIC-ICLI IN DBC.
              MOVE FIO-GET-KEY TO FIO-CMND.
              PERFORM SGC-FIO-DBC.
              IF NOT FIO-STAT-OKS
                  GO TO SIG-CAR-MOV-CLL-FEC.

              MOVE CLF-NUM-SAPE IN CLL-FLD TO WSS-NUM-SCP1 IN WSS-VARI.
              MOVE CLF-NUM-AAPE IN CLL-FLD TO WSS-NUM-ACP1 IN WSS-VARI.
              MOVE CLF-NUM-MAPE IN CLL-FLD TO WSS-NUM-MCP1 IN WSS-VARI.
              MOVE CLF-NUM-DAPE IN CLL-FLD TO WSS-NUM-DCP1 IN WSS-VARI.

              MOVE CLF-NUM-SCIE IN CLL-FLD TO WSS-NUM-SCP2 IN WSS-VARI.
              MOVE CLF-NUM-ACIE IN CLL-FLD TO WSS-NUM-ACP2 IN WSS-VARI.
              MOVE CLF-NUM-MCIE IN CLL-FLD TO WSS-NUM-MCP2 IN WSS-VARI.
              MOVE CLF-NUM-DCIE IN CLL-FLD TO WSS-NUM-DCP2 IN WSS-VARI.

              IF CLF-FEC-FAPE IN CLF < WSS-FEC-FCP1 OR
                 CLF-FEC-FAPE IN CLF > WSS-FEC-FCP2
                    GO TO SIG-CAR-MOV-CLL-FEC.
              IF LDC-MSC-STAT IN CLL-FLD > SPACES
                  IF CLF-MSC-STAT IN CLF NOT = LDC-MSC-STAT IN CLL-FLD
                    GO TO SIG-CAR-MOV-CLL-FEC.

          VAL-CAR-MOV-CLL-FEC.
              MOVE SPACES                  TO WSS-COD-MENS.
              MOVE LCC-CAI-ILIC IN LCC TO CLL-CAI-ILIC(CLL-I).
              MOVE LCC-IIC-ILIC IN LCC TO CLL-IIC-ILIC(CLL-I).

              MOVE 'DEU'   TO TAB-COD-SIST FIO-SIST.
              MOVE 'OAL'   TO TAB-COD-TTAB IN TAB.
              MOVE CLL-CAI-ILIC(CLL-I) TO TAB-COD-CTAB IN TAB.
              MOVE FIO-GET-KEY TO FIO-CMND.
              PERFORM GNS-FIO-TAB.
              IF FIO-STAT-OKS
                 MOVE TAB-GLS-DATA IN TAB TO WSS-GLS-DATA IN WSS-VARI
                 MOVE WSS-GLS-ENTI IN WSS-VARI TO CLL-GLS-ENTD(CLL-I)
              ELSE
                 MOVE SPACES        TO CLL-GLS-ENTD(CLL-I).

              MOVE LCC-CAI-ICLF IN LCC TO CLL-CAI-ICLF(CLL-I).
              MOVE LCC-IIC-ICLF IN LCC TO CLL-IIC-ICLF(CLL-I).
              MOVE LCC-NUM-ILCC IN LCC TO CLL-NUM-ILCC(CLL-I).
              MOVE LCC-VAL-MADJ IN LCC TO CLL-VAL-MADJ(CLL-I).
              MOVE LCC-VAL-MUTI IN LCC TO CLL-VAL-MUTI(CLL-I).
              MOVE LCC-VAL-RENU IN LCC TO CLL-VAL-RENC(CLL-I).
              MOVE LCC-VAL-UTIL IN LCC TO CLL-VAL-EUTI(CLL-I).
              MOVE LCC-FEC-FRNC IN LCC TO CLL-FEC-FRNC(CLL-I).
              COMPUTE CLL-VAL-DISP(CLL-I) = LCC-VAL-MADJ IN LCC -
                                            LCC-VAL-MUTI IN LCC -
                                            LCC-VAL-RENU IN LCC.
              COMPUTE CLL-VAL-FUTI(CLL-I) = (CLL-VAL-DISP(CLL-I) * 100)
                                          / LCC-VAL-MADJ IN LCC.
              COMPUTE CLL-VAL-UTIL(CLL-I) = (LCC-VAL-MUTI IN LCC *100)
                                          /  LCC-VAL-MADJ IN LCC.
              MOVE DBC-NUM-ICLI IN DBC TO CLL-NUM-ICLI(CLL-I).
              MOVE DBC-VRF-ICLI IN DBC TO CLL-VRF-ICLI(CLL-I).
              MOVE DBC-IND-ICLI IN DBC TO CLL-IND-ICLI(CLL-I).
              MOVE DBC-GLS-ICLI IN DBC TO CLL-GLS-ICLI(CLL-I).
              MOVE DBC-GLS-NOMC IN DBC TO CPT-STRN.
              PERFORM CPT-BLKS.
              MOVE CPT-STRN            TO CLL-GLS-NOMC(CLL-I).
      *LEER LDC PARA OBTENER DATOS

              MOVE LDC-COD-TIPO IN LDC TO CLL-COD-TIPO(CLL-I).
              MOVE CLF-NUM-PVIG IN CLF TO CLL-NUM-PVIG(CLL-I).
              MOVE CLF-IND-PVIG IN CLF TO CLL-IND-PVIG(CLL-I).
              MOVE CLF-FEC-FAPE IN CLF TO CLL-FEC-FINI(CLL-I).
              MOVE CLF-FEC-FVEN IN CLF TO CLL-FEC-FVEN(CLL-I).

          NXT-CAR-MOV-CLL-FEC.
              PERFORM INC-REG-TS.
          SIG-CAR-MOV-CLL-FEC.
              MOVE FIO-GET-NXT TO FIO-CMND.
              GO TO LUP-CAR-MOV-CLL-FEC.

       FIN-CAR-MOV-CLL-FEC.
           EXIT.

       OBT-PARAM SECTION.
       INI-OBT-PARAM.
       FIN-OBT-PARAM.
           EXIT.

       OBT-DAT-TS SECTION.
       INI-OBT-DAT-TS.
           EXEC CICS HANDLE CONDITION QIDERR(CON-OBT-DAT-TS)
                                     ITEMERR(CON-OBT-DAT-TS)
           END-EXEC.

      *     EXEC CICS DELETEQ TS QUEUE(CLL-NAME-QUE)
      *     END-EXEC.
      *<<<<
      *    MOVE EIBTRMID      TO CLL-TERM.
           MOVE CLL-NAME-QUE   TO QUE-COLA.
           MOVE QUE-DEL           TO QUE-CMND.
           PERFORM GNS-PRO-QUE.
      *>>>>
       CON-OBT-DAT-TS.
           MOVE CLL-SI-IMP TO CLL-IMP.
           PERFORM CLR-VEC-TS VARYING CLL-I FROM 1 BY 1 UNTIL
                   CLL-I > CLL-IMAX.
           MOVE 1 TO CLL-I.
           PERFORM CAR-MOV-CLL.

       NXT-OBT-DAT-TS.
           IF CLL-IMP = CLL-SI-IMP
               PERFORM WRT-TS.
       FIN-OBT-DAT-TS.
           EXIT.

       PUT-TAB-CLL SECTION.
       INI-PUT-TAB-CLL.

           PERFORM RED-TS.
           MOVE CLL-IMAX TO WSS-CLL-IMAX.
           PERFORM LLE-DAT-PNT VARYING CLL-I FROM 1 BY 1
                   UNTIL CLL-I > CLL-IMAX.
       FIN-PUT-TAB-CLL.
           EXIT.

       LLE-DAT-PNT SECTION.
       INI-LLE-DAT-PNT.
           MOVE CLL-NUM-ICLI(CLL-I) TO FRM-NUM-ICLI IN CLL-FLD(CLL-I).
           MOVE CLL-VRF-ICLI(CLL-I) TO FRM-VRF-ICLI IN CLL-FLD(CLL-I).
           MOVE CLL-GLS-ICLI(CLL-I) TO FRM-GLS-ICLI IN CLL-FLD(CLL-I).
           MOVE CLL-IND-ICLI(CLL-I) TO FRM-IND-ICLI IN CLL-FLD(CLL-I).
           MOVE CLL-GLS-NOMC(CLL-I) TO FRM-GLS-NOMC IN CLL-FLD(CLL-I).
           MOVE CLL-GLS-ENTD(CLL-I) TO FRM-GLS-ENTD IN CLL-FLD(CLL-I).
           MOVE CLL-CAI-ILIC(CLL-I) TO FRM-CAI-ILIC IN CLL-FLD(CLL-I).
           MOVE CLL-IIC-ILIC(CLL-I) TO FRM-IIC-ILIC IN CLL-FLD(CLL-I).
           MOVE CLL-CAI-ICLF(CLL-I) TO FRM-CAI-ICLF IN CLL-FLD(CLL-I).
           MOVE CLL-IIC-ICLF(CLL-I) TO FRM-IIC-ICLF IN CLL-FLD(CLL-I).
           MOVE CLL-NUM-ILCC(CLL-I) TO FRM-NUM-ILCC IN CLL-FLD(CLL-I).
           MOVE CLL-COD-TIPO(CLL-I) TO FRM-COD-TIPO IN CLL-FLD(CLL-I).
           MOVE CLL-FEC-FINI(CLL-I) TO FRM-FEC-FINI IN CLL-FLD(CLL-I).
           MOVE CLL-FEC-FVEN(CLL-I) TO FRM-FEC-FVEN IN CLL-FLD(CLL-I).
           MOVE CLL-NUM-PVIG(CLL-I) TO FRM-NUM-PVIG IN CLL-FLD(CLL-I).
           MOVE CLL-IND-PVIG(CLL-I) TO FRM-IND-PVIG IN CLL-FLD(CLL-I).
           MOVE CLL-GLS-VCOC(CLL-I) TO FRM-GLS-VCOC IN CLL-FLD(CLL-I).
           MOVE CLL-VAL-MADJ(CLL-I) TO FRM-VAL-MADJ IN CLL-FLD(CLL-I).
           MOVE CLL-VAL-MUTI(CLL-I) TO FRM-VAL-MUTI IN CLL-FLD(CLL-I).
           MOVE CLL-VAL-DISP(CLL-I) TO FRM-VAL-DISP IN CLL-FLD(CLL-I).
           MOVE CLL-VAL-RENC(CLL-I) TO FRM-VAL-RENC IN CLL-FLD(CLL-I).
           MOVE CLL-FEC-FRNC(CLL-I) TO FRM-FEC-FRNC IN CLL-FLD(CLL-I).
           MOVE CLL-VAL-UTIL(CLL-I) TO FRM-VAL-UTIL IN CLL-FLD(CLL-I).
           MOVE CLL-VAL-EUTI(CLL-I) TO FRM-VAL-EUTI IN CLL-FLD(CLL-I).
           MOVE CLL-VAL-FUTI(CLL-I) TO FRM-VAL-FUTI IN CLL-FLD(CLL-I).
           MOVE CLL-GLS-LINE(CLL-I) TO FRM-GLS-LINE IN CLL-FLD(CLL-I).
           MOVE WSS-LINE            TO FRM-GLS-LINE IN CLL-FLD(CLL-I).
           SUBTRACT 1 FROM WSS-CLL-IMAX.
       FIN-LLE-DAT-PNT.
           EXIT.

       INC-REG-TS SECTION.
       INI-INC-REG-TS.
            MOVE CLL-SI-IMP TO CLL-IMP.
      *     IF SCR-OFRM-SRV
      *       MOVE CLL-VAL-CPTO(CLL-I) TO CLL-VAL-CPTO-EDT
      *       MOVE CLL-VAL-CPTO-EDT TO CLL-VAL-CPTO-ALF(CLL-I).
           ADD 1 TO CLL-I.
           IF CLL-I > CLL-IMAX
               PERFORM WRT-TS
               PERFORM CLR-VEC-TS VARYING CLL-I FROM 1 BY 1
                                     UNTIL CLL-I > CLL-IMAX
               MOVE 1 TO CLL-I
               MOVE CLL-NO-IMP TO CLL-IMP.
       FIN-INC-REG-TS.
           EXIT.

      *<<<<
      *>>>>

       WRT-TS SECTION.
       INI-WRT-TS.
           ADD 1 TO SCR-IMAX.
      *     EXEC CICS WRITEQ TS QUEUE(CLL-NAME-QUE)
      *                         FROM(CLL-TS)
      *                         LENGTH(CLL-LONG-TS)
      *     END-EXEC.
      *<<<<
      *    MOVE EIBTRMID      TO CLL-TERM.
           MOVE CLL-NAME-QUE   TO QUE-COLA.
           MOVE CLL-TS         TO QUE-ITEM.
           MOVE CLL-LONG-TS    TO QUE-LITM.
           MOVE QUE-PUT        TO QUE-CMND.
           PERFORM GNS-PRO-QUE.
      *>>>>
       FIN-WRT-TS.
           EXIT.

       RED-TS SECTION.
       INI-RED-TS.
           MOVE CLL-I TO SCR-I.
           EXEC CICS HANDLE CONDITION QIDERR(FIN-RED-TS)
                                     ITEMERR(FIN-RED-TS)
           END-EXEC.
      *     EXEC CICS READQ TS QUEUE(CLL-NAME-QUE)
      *                         INTO(CLL-TS)
      *                          LENGTH(CLL-LONG-TS)
      *                         ITEM(CLL-I)
      *     END-EXEC.
      *<<<<

      *    MOVE EIBTRMID      TO CLL-TERM.
           MOVE CLL-NAME-QUE   TO QUE-COLA.
           MOVE CLL-TS         TO QUE-ITEM.
           MOVE CLL-LONG-TS    TO QUE-LITM.
           MOVE CLL-I              TO QUE-NITM.
           MOVE QUE-GET            TO QUE-CMND.
           PERFORM GNS-PRO-QUE.
           MOVE QUE-ITEM       TO CLL-TS.
      *>>>>
       FIN-RED-TS.
           EXIT.

       CLR-VEC-TS SECTION.
       INI-CLR-VEC-TS.
           MOVE ZEROES TO CLL-NUM-ICLI(CLL-I).
           MOVE SPACES TO CLL-VRF-ICLI(CLL-I).
           MOVE SPACES TO CLL-GLS-ICLI(CLL-I).
           MOVE ZEROES TO CLL-IND-ICLI(CLL-I).
           MOVE SPACES TO CLL-GLS-NOMC(CLL-I).
           MOVE SPACES TO CLL-GLS-ENTD(CLL-I).
           MOVE SPACES TO CLL-CAI-ILIC(CLL-I).
           MOVE SPACES TO CLL-IIC-ILIC(CLL-I).
           MOVE SPACES TO CLL-CAI-ICLF(CLL-I).
           MOVE SPACES TO CLL-IIC-ICLF(CLL-I).
           MOVE ZEROES TO CLL-NUM-ILCC(CLL-I).
           MOVE SPACES TO CLL-COD-TIPO(CLL-I).
           MOVE ZEROES TO CLL-FEC-FINI(CLL-I).
           MOVE ZEROES TO CLL-FEC-FVEN(CLL-I).
           MOVE ZEROES TO CLL-NUM-PVIG(CLL-I).
           MOVE SPACES TO CLL-IND-PVIG(CLL-I).
           MOVE SPACES TO CLL-GLS-VCOC(CLL-I).
           MOVE ZEROES TO CLL-VAL-MADJ(CLL-I).
           MOVE ZEROES TO CLL-VAL-MUTI(CLL-I).
           MOVE ZEROES TO CLL-VAL-DISP(CLL-I).
           MOVE ZEROES TO CLL-VAL-RENC(CLL-I).
           MOVE ZEROES TO CLL-FEC-FRNC(CLL-I).
           MOVE ZEROES TO CLL-VAL-UTIL(CLL-I).
           MOVE ZEROES TO CLL-VAL-EUTI(CLL-I).
           MOVE ZEROES TO CLL-VAL-FUTI(CLL-I).
           MOVE SPACES TO CLL-GLS-LINE(CLL-I).
       FIN-CLR-VEC-TS.
           EXIT.

       RST-STAT SECTION.
       INI-RST-STAT.
           MOVE SCR-STPP     TO SCR-STAT.
           MOVE SCR-MFLD-NOT TO SCR-MFLD.
       FIN-RST-STAT.
           EXIT.
      *>>>> EOF
