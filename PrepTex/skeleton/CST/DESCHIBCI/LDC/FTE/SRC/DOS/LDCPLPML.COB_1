       IDENTIFICATION DIVISION.
      *=======================
       PROGRAM-ID.      LDCPLPML.
       AUTHOR.          CONSIST (RVM).
       DATE-WRITTEN.    30-Oct-96 03:37 PM.

      * Programa Listador de Reporte PML con Sort.

      *<<<< CMT_ID
      *>>>>

       ENVIRONMENT DIVISION.
      *====================
       CONFIGURATION SECTION.
      *---------------------
       SPECIAL-NAMES.
            DECIMAL-POINT IS COMMA.
       INPUT-OUTPUT SECTION.
      *--------------------
       FILE-CONTROL.
      *DOS SELECT GNSSRT         ASSIGN TO SYS001-DA-3330-S-SORTWK1.
      *MVS SELECT GNSSRT         ASSIGN TO        DA-S-SORTWK1.
      *DOS SELECT RPTPML         ASSIGN TO SYS011-UR-1403-S.
      *MVS SELECT RPTPML         ASSIGN TO        UT-S-RPTPML.
           SELECT GNSSRT         ASSIGN TO        DA-S-SORTWK1.
           SELECT RPTPML         ASSIGN TO        UT-S-RPTPML.
      *<<<< IOS
      *>>>>

       DATA DIVISION.
      *=============
       FILE SECTION.
      *------------
       SD  GNSSRT.
       COPY LDCRRPML.
      *<<<< RR
      *>>>>
       FD  RPTPML LABEL RECORDS OMITTED
           REPORT IS RPT-PML
      *<<<< FD_RPT
      *>>>>
           .
      *<<<< FLS
      *>>>>

       WORKING-STORAGE SECTION.
      *-----------------------
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-CLF-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-TAB-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-MSG-REQA==.
       COPY LDCBRCLF.
       COPY GNSWGRQA.
       COPY GNSWGUIB.
       COPY GNSWGELS.
       COPY GNSWVIDD.
       COPY GNSWCFIO.
       COPY GNSWVFIO.
       COPY GNSWGRPT.
       COPY GNSBRTAB.
       COPY GNSBRMSG.
       COPY LDCRWPML.
      *<<<< RW
      *>>>>
       COPY GNSWGSYS.
       01  PGM-STAT.
           03 PGM-STAT-SRT            VALUE ' ' PIC X(01).
              88 PGM-STAT-SRT-OKS     VALUE ' '.
              88 PGM-STAT-SRT-MAL     VALUE 'M'.
           03 PGM-SOKS                VALUE ' ' PIC X(01).
           03 PGM-SMAL                VALUE 'M' PIC X(01).
      *<<<< WSS
       COPY LDCBRRDC REPLACING RDC BY RDL.
       COPY LDCBRLDC.

       COPY COLBROPC.
       COPY COLBRRDC.
       COPY COLBRCAN.
       COPY COLBRRCV.
       COPY COLBRVEN.
       COPY COLBRDLC.

       COPY COLWGVEN.
       COPY COLWGINT.
       COPY COLBREVC.
       COPY COLBRICG.
       COPY COLBRCCT.
       COPY COLBRTOC.
       COPY COLBRROV.

       COPY TABBRTIO.
       COPY TABBROFI.
       COPY TABBRUSR.
       COPY TABBRCAM.
       COPY TABWGTVC.

       COPY SGCBRDBC.

       COPY GNSBRMSC.
       COPY GNSWGPES.
       COPY GNSWGFEC.
       COPY GNSWGHOY.
       COPY GNSWGCPT.

       01  WSS-VARI.
      *RVM-CST-INI 30-SEP-1996
           03  WSS-COD-TIPO                           PIC X(03).
      *RVM-CST-FIN 30-SEP-1996
           03  WSS-CIC-ICLF          VALUE SPACES     PIC X(12).
           03  WSS-NUM-IDLC          VALUE ZEROES     PIC 9(03).
           03  WSS-COD-TMLT          VALUE SPACES     PIC X(12).
           03  WSS-FEC-MINI.
               05  WSS-NUM-SMIN      VALUE '99'       PIC X(02).
               05  WSS-NUM-AMIN      VALUE '99'       PIC X(02).
               05  WSS-NUM-MMIN      VALUE '99'       PIC X(02).
               05  WSS-NUM-DMIN      VALUE '99'       PIC X(02).
           03  WSS-FEC-MAXI          VALUE '00000000' PIC X(08).
           03  WSS-FEC-FHOY.
               05  WSS-NUM-SHOY      VALUE ZEROES     PIC 9(02).
               05  WSS-NUM-AHOY      VALUE ZEROES     PIC 9(02).
               05  WSS-NUM-MHOY      VALUE ZEROES     PIC 9(02).
               05  WSS-NUM-DHOY      VALUE ZEROES     PIC 9(02).
           03  WSS-FEC-FDEV.
               05  WSS-NUM-SDEV      VALUE ZEROES     PIC 9(02).
               05  WSS-NUM-ADEV      VALUE ZEROES     PIC 9(02).
               05  WSS-NUM-MDEV      VALUE ZEROES     PIC 9(02).
               05  WSS-NUM-DDEV      VALUE ZEROES     PIC 9(02).
           03  WSS-VAL-CAPI          VALUE ZEROES     PIC 9(11)V9(04).
           03  WSS-VAL-INTE          VALUE ZEROES     PIC 9(11)V9(04).
           03  WSS-VAL-SCRE          VALUE ZEROES     PIC 9(11)V9(04).
           03  WSS-PROCESO-OPC       VALUE ' '        PIC X(01).
               88 PROCESO-OPC-OKS    VALUE 'S'.
           03  WSS-PRIMERA-CAN       VALUE ' '        PIC X(01).
               88 PRIMERA-CAN        VALUE 'S'.
           03  WSS-NUM-RBAD          VALUE ZEROES     PIC 9(01).
           03  WSS-SW-PXV            VALUE SPACES     PIC X(01).
           03  WSS-SW-DISPLAY        VALUE 'S'        PIC X(01).
      *>>>>
      *<<<< WSS_DTC
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-TIO-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-OFI-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-USR-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-CAM-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-LDC-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-RDC-REQA==.

       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-RDL-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-OPC-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-CAN-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-RCV-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-VEN-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-DLC-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-EVC-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-ICG-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-CCT-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-TOC-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-ROV-REQA==.

       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-DBC-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-MSC-REQA==.
      *>>>>

       REPORT SECTION.
      *--------------
       COPY LDCRFPML.
      *<<<< RF
      *>>>>
           .
       COPY LDCRTPML.
      *<<<< RT
      *>>>>

       PROCEDURE DIVISION.
      *==================
       DECLARATIVES.
       DEC-CF-PML-OPC-COD-VCOC SECTION.
           USE BEFORE REPORTING CF-PML-OPC-COD-VCOC.
       INI-CF-PML-OPC-COD-VCOC.
      *<<<< CF_PML_OPC_COD_VCOC
           MOVE 'TAB'               TO TAB-COD-SIST.
           MOVE 'VLR'               TO TAB-COD-TTAB IN TAB.
           MOVE OPC-COD-VCOC IN SRT TO TAB-COD-CTAB IN TAB.
           PERFORM BUS-TAB.
           IF MSG-COD-MENS NOT = SPACES
              MOVE MSG-GLS-DCOR TO WSS-GLS-MONE IN WSS-PML
           ELSE
              MOVE TAB-GLS-ABRV TO WSS-GLS-MONE IN WSS-PML.
      *>>>>
       FIN-CF-PML-OPC-COD-VCOC.
           EXIT.
       DEC-PH-PML SECTION.
           USE BEFORE REPORTING PH-PML.
       INI-PH-PML.
      *<<<< PH_PML
           IF CLF-COD-OFIC IN SRT > SPACES
               MOVE CLF-COD-OFIC IN SRT TO OFI-COD-OFIC IN OFI
               PERFORM BUS-OFI
               MOVE OFI-GLS-DESC IN OFI TO WSS-GLS-OFIC IN WSS-PML
           ELSE
               MOVE SPACES TO WSS-GLS-OFIC IN WSS-PML.

           IF CLF-COD-EJEC IN SRT > SPACES
               MOVE 'EJC'               TO USR-COD-TTAB IN USR
               MOVE CLF-COD-EJEC IN SRT TO USR-COD-USER IN USR
               PERFORM BUS-USR
               MOVE USR-GLS-DESC        TO WSS-GLS-EJEC IN WSS-PML
           ELSE
               MOVE SPACES TO WSS-GLS-EJEC IN WSS-PML.

           IF DBC-CIC-ICLI IN SRT > SPACES
               MOVE DBC-CIC-ICLI IN SRT TO DBC-CIC-ICLI IN DBC
               MOVE FIO-GET-KEY TO FIO-CMND
               PERFORM SGC-FIO-DBC
               IF NOT FIO-STAT-OKS
                   DISPLAY 'ERROR: NO EXISTE CLIENTE CON CIC '
                       DBC-CIC-ICLI IN DBC
                   MOVE SPACES TO DBC-GLS-NOMC IN DBC
                   MOVE ZEROES TO DBC-IDC-ICLI IN DBC
                   MOVE ZEROES TO DBC-VRF-ICLI IN DBC
               ELSE
      *COMPACTA EL NOMBRE
                   MOVE DBC-GLS-NOMC IN DBC TO CPT-STRN
                   PERFORM CPT-BLKS
                   MOVE CPT-STRN TO DBC-GLS-NOMC IN DBC.
      *>>>>
       FIN-PH-PML.
           EXIT.
      *<<<< FIN_DEC
      *>>>>
       END DECLARATIVES.

       MAIN SECTION.
      *------------
       INI-MAIN.
       COPY GNSBGEDB.
           MOVE 'LDCPLPML' TO FIO-PROG.
           PERFORM GNS-BUS-IDD.

           MOVE FIO-INP      TO FIO-CMND.
           MOVE 'GNS'        TO FIO-SIST.
           PERFORM GNS-FIO-TAB.
      *<<<< INI
      * Obtiene Codigo MLT Mediante CIC
           MOVE 'DEU'          TO FIO-SIST.
           MOVE 'TLC'          TO TAB-CIC-TTAB IN TAB.
           MOVE 'MLT'          TO TAB-CIC-CTAB IN TAB.
           MOVE 'TAB-CIC-TABL' TO FIO-AKEY.
           MOVE FIO-GET-KEY    TO FIO-CMND.
           PERFORM GNS-FIO-TAB.
           IF NOT FIO-STAT-OKS
               DISPLAY 'ERROR: NO EXISTE CIC MLT : ' FIO-STAT
               MOVE 1 TO WSS-NUM-RBAD IN WSS-VARI
               GO TO FIN-MAIN.

           MOVE TAB-COD-CTAB IN TAB TO WSS-COD-TMLT IN WSS-VARI.

           PERFORM GET-FHOY.
           MOVE HOY-FHOY TO WSS-FEC-FHOY IN WSS-VARI.

           MOVE SPACES TO WSS-LIN1 IN WSS-PML.
      *>>>>
           SORT GNSSRT
       COPY LDCRSPML.
      *<<<< RS
      *>>>>
           INPUT  PROCEDURE IS INP-SRT
           OUTPUT PROCEDURE IS OUT-SRT.
       FIN-MAIN.
      *<<<< FIN
           IF WSS-NUM-RBAD IN WSS-VARI > ZEROES
      *        PERFORM GNS-PRG-ABT
               MOVE 99 TO RETURN-CODE
               PERFORM GNS-PRO-END
           ELSE
               PERFORM GNS-PRO-END.
      *>>>>
           IF PGM-STAT-SRT-MAL OR SORT-RETURN > 0
               PERFORM GNS-PRO-ABT
           ELSE
               PERFORM GNS-PRO-END.

       INP-SRT SECTION.
      *---------------
       INI-INP-SRT.
      *<<<< INI_INP
      *>>>>
           MOVE FIO-INP TO FIO-CMND.
           PERFORM LDC-FIO-CLF.
       FST-INP-SRT.
      *<<<< INI_FST_INP
           DISPLAY ' '.
           DISPLAY 'INGRESE CALIFICACION : '.
           ACCEPT WSS-CIC-ICLF IN WSS-VARI.
           DISPLAY WSS-CIC-ICLF IN WSS-VARI.

      *RVM-CST-INI 30-SEP-1996
           DISPLAY 'TIPO DE LINEA                 : '.
           ACCEPT  WSS-COD-TIPO IN WSS-VARI.
           DISPLAY WSS-COD-TIPO IN WSS-VARI.

      *VALIDA TIPO DE LINEA
           IF WSS-COD-TIPO IN WSS-VARI NOT > SPACES
               DISPLAY 'ERROR: PARAMETRO TIPO DE LINEA OBLIGATORIO '
               PERFORM GNS-PRO-ABT.

           MOVE 'DEU'                    TO TAB-COD-SIST.
           MOVE 'TLC'                    TO TAB-COD-TTAB IN TAB.
           MOVE WSS-COD-TIPO IN WSS-VARI TO TAB-COD-CTAB IN TAB.
           PERFORM BUS-TAB.
           IF MSG-COD-MENS > SPACES
               DISPLAY 'ERROR: PARAMETRO TIPO DE LINEA NO '
                       'EXISTE EN TLC   : '
               WSS-COD-TIPO IN WSS-VARI
               PERFORM GNS-PRO-ABT.
      *RVM-CST-FIN 30-SEP-1996

           IF WSS-CIC-ICLF IN WSS-VARI NOT > SPACES
               DISPLAY 'ERROR: DEBE INGRESAR CLF A PROCESAR'
               MOVE 1 TO WSS-NUM-RBAD IN WSS-VARI
               MOVE PGM-SMAL TO PGM-STAT-SRT
               GO TO FIN-INP-SRT
           ELSE
               MOVE WSS-CIC-ICLF IN WSS-VARI TO CLF-CIC-ICLF IN CLF
               MOVE FIO-GET-KEY TO FIO-CMND
               PERFORM LDC-FIO-CLF
               IF NOT FIO-STAT-OKS
                   DISPLAY 'ERROR: NO EXISTE CALIFICACION : '
                       CLF-CIC-ICLF IN CLF
                   MOVE PGM-SMAL TO PGM-STAT-SRT
                   GO TO FIN-INP-SRT
               ELSE
                   GO TO LUP-INP-SRT.

      *>>>>
           MOVE FIO-GET-FST TO FIO-CMND.
           PERFORM LDC-FIO-CLF.
      *<<<< FIN_FST_INP
      *LEE A PARTIR DESDE LA PRIMERA CLF
           IF NOT FIO-STAT-OKS
               DISPLAY 'ERROR: NO EXISTEN DATOS EN LDCCLF '
               DISPLAY 'PROCESO CANCELADO...'
               DISPLAY ' '
               MOVE 1 TO WSS-NUM-RBAD IN WSS-VARI
               MOVE PGM-SMAL TO PGM-STAT-SRT
               GO TO FIN-INP-SRT.
      *>>>>
       LUP-INP-SRT.
           IF NOT FIO-STAT-OKS
              GO TO FIN-INP-SRT.
      *<<<< LUP_INP
           IF WSS-NUM-RBAD IN WSS-VARI > ZEROES
               MOVE PGM-SMAL TO PGM-STAT-SRT
               GO TO FIN-INP-SRT.

      *CHEQUEA QUE CLF ESTE VIGENTE
           IF CLF-MSC-STAT IN CLF NOT = 'A'
               DISPLAY 'ERROR: CLF NO VIGENTE : '
                    CLF-CIC-ICLF IN CLF
               MOVE PGM-SMAL TO PGM-STAT-SRT
               MOVE 1 TO WSS-NUM-RBAD IN WSS-VARI
               GO TO FIN-INP-SRT.

           MOVE CLF-CIC-ICLF IN CLF TO LDC-CIC-ICLF IN LDC.
           MOVE ZEROES              TO LDC-NUM-ILDC IN LDC.
           MOVE FIO-GET-NLS TO FIO-CMND.
       LUP-LEE-LDC.
           PERFORM LDC-FIO-LDC.
           IF NOT ( FIO-STAT-OKS AND
                    CLF-CIC-ICLF IN CLF = LDC-CIC-ICLF IN LDC AND
                    LDC-IND-VIGE IN LDC = 'S' )
                 DISPLAY 'ERROR: CLF NO TIENE LDC ASOCIADAS'
                 GO TO FIN-INP-SRT.

      *RVM-CST-INI 30-SEP-1996
      *     IF LDC-COD-TIPO IN LDC NOT = WSS-COD-TMLT IN WSS-VARI
      *         MOVE FIO-GET-NXT TO FIO-CMND
      *         GO TO LUP-LEE-LDC.

           MOVE 'DEU'               TO TAB-COD-SIST.
           MOVE 'TLC'               TO TAB-COD-TTAB IN TAB.
           MOVE LDC-COD-TIPO IN LDC TO TAB-COD-CTAB IN TAB.
           PERFORM BUS-TAB.
           IF MSG-COD-MENS > SPACES
               DISPLAY 'ERROR: NO EXISTE TIPO DE LINEA EN TLC : '
                         LDC-COD-TIPO IN LDC
               MOVE FIO-GET-NXT TO FIO-CMND
               GO TO LUP-LEE-LDC.

           IF WSS-COD-TIPO IN WSS-VARI = LDC-COD-TIPO IN LDC AND
              TAB-CIC-CTAB IN TAB      = 'MLT'
                  NEXT SENTENCE
              ELSE
                  MOVE FIO-GET-NXT TO FIO-CMND
                  GO TO LUP-LEE-LDC.
      *RVM-CST-FIN 30-SEP-1996

      *LEE LDCRDL (RDC)
           MOVE CLF-CIC-ICLF IN CLF TO RDC-CIC-ICLF IN RDL.
           MOVE 'RDC-KEY-ICLF' TO FIO-AKEY.
           MOVE FIO-GET-KEY    TO FIO-CMND.
           PERFORM LDC-FIO-RDC.
           IF NOT FIO-STAT-OKS
               DISPLAY 'ERROR: NO EXISTE LDCRDC ' RDC-CIC-ICLF IN RDL
               GO TO FIN-INP-SRT.

      *INICIALIZA DATOS
           MOVE ZEROES TO WSS-VAL-CAPI IN WSS-VARI.
           MOVE ZEROES TO WSS-VAL-INTE IN WSS-VARI.
           MOVE ZEROES TO WSS-VAL-SCRE IN WSS-VARI.
           MOVE ZEROES TO DBC-CIC-ICLI IN DBC.

      *LEE COLRDC
           MOVE RDC-CIC-ICLI IN RDL TO RDC-CIC-ICLI IN RDC.
           MOVE SPACES              TO RDC-CIC-IOPC IN RDC.
           MOVE ZEROES              TO RDC-NUM-IDLC IN RDC.
           MOVE FIO-GET-NLS TO FIO-CMND.
           MOVE 'N' TO WSS-PROCESO-OPC IN WSS-VARI.
       LUP-PROCESO-RDC.
           PERFORM COL-FIO-RDC.
           IF FIO-STAT-OKS AND
              RDC-CIC-ICLI IN RDL = RDC-CIC-ICLI IN RDC
               IF RDC-NUM-IDLC IN RDC = ZEROES
                   MOVE RDC-CIC-IOPC IN RDC TO OPC-CIC-IOPC IN OPC
                   MOVE FIO-GET-KEY TO FIO-CMND
                   PERFORM COL-FIO-OPC
                   IF FIO-STAT-OKS AND
                      ( WSS-COD-TIPO IN WSS-VARI = 'MLT'   AND
                        OPC-COD-TOOC IN OPC = 'AVC' ) OR
                      ( WSS-COD-TIPO IN WSS-VARI = 'LCR'   AND
                        OPC-COD-TOOC IN OPC = 'ALR' )      AND
                      OPC-MSC-STAT IN OPC = 'A'            AND
                      OPC-VAL-SCRE IN OPC > ZEROES

                       MOVE 'S' TO WSS-PROCESO-OPC IN WSS-VARI
      *
                       PERFORM PROCESO-OPC
      *
                       MOVE FIO-GET-NXT TO FIO-CMND
                       GO TO LUP-PROCESO-RDC
                   ELSE
                       IF FIO-STAT-OKS
                           MOVE FIO-GET-NXT TO FIO-CMND
                           GO TO LUP-PROCESO-RDC
                       ELSE
                           DISPLAY 'ERROR: NO EXISTE REGISTRO COLOPC '
                                       OPC-CIC-IOPC IN OPC
                           DISPLAY '.....: AL PROCESAR CLF : '
                                 CLF-CIC-ICLF IN CLF
                           MOVE FIO-GET-NXT TO FIO-CMND
                           GO TO LUP-PROCESO-RDC
               ELSE
                   MOVE FIO-GET-NXT TO FIO-CMND
                   GO TO LUP-PROCESO-RDC
           ELSE
               IF FIO-CMND = FIO-GET-NLS
                   GO TO FIN-INP-SRT.

           IF PROCESO-OPC-OKS
               PERFORM GRABA-SRT-CABE.

      *SE DEBE SALTAR LOS MOVES Y EL RELEASE NATURALES DEL PROGRAMA
           GO TO FIN-INP-SRT.
      *>>>>
       MOV-INP-SRT.
       COPY LDCRMPML.
      *<<<< RM
      *>>>>
           RELEASE SRT.
       NXT-INP-SRT.
      *<<<< INI_NXT_INP
      *>>>>
           MOVE FIO-GET-NXT TO FIO-CMND.
           PERFORM LDC-FIO-CLF.
      *<<<< FIN_NXT_INP
      *>>>>
           GO TO LUP-INP-SRT.
       FIN-INP-SRT.
      *<<<< FIN_INP
           GO TO EXT-INP-SRT.
       ERR-INP-SRT.
           DISPLAY '.....: AL PROCESAR CLF : ' CLF-CIC-ICLF IN CLF.
           MOVE 1 TO WSS-NUM-RBAD IN WSS-VARI.
       EXT-INP-SRT.
      *>>>>
           MOVE FIO-CLO TO FIO-CMND.
           PERFORM LDC-FIO-CLF.

       OUT-SRT SECTION.
      *---------------
       INI-OUT-SRT.
           IF PGM-STAT-SRT-MAL
               GO TO EXT-OUT-SRT.
      *<<<< INI_OUT
      *>>>>
           OPEN OUTPUT RPTPML.
      *     MOVE 'LDCPLPML' TO RPT-NPGM.
           CALL 'GNSPLHDR' USING RPT-VARI.
           INITIATE RPT-PML.
           RETURN GNSSRT AT END
                GO TO FIN-OUT-SRT.
      *<<<< FST_OUT
      *>>>>
       LUP-OUT-SRT.
      *<<<< LUP_OUT
           IF WSS-NUM-RBAD IN WSS-VARI > ZEROES
               GO TO FIN-OUT-SRT.

      *VERIFICA SI ES REGISTRO CABECERA
           IF SRT-TIP-DATA IN SRT = '1'
      *VALIDACIONES
              IF SRT-FEC-MINI IN SRT = '99999999'
                  DISPLAY ' '
                  DISPLAY 'ATENCION : NO EXISTEN OPERACIONES CON '
                          'VENCIMIENTOS MOROSOS '
                          'PARA LA CLF : ' CLF-CIC-ICLF IN SRT
                  DISPLAY ' '
                  PERFORM LEE-SIG-DATA1
                  GO TO LUP-OUT-SRT
              ELSE
                  MOVE SRT-FEC-MINI IN SRT TO WSS-FEC-MINI IN WSS-VARI
                  MOVE SRT-FEC-MAXI IN SRT TO WSS-FEC-MAXI IN WSS-VARI.

           IF SRT-TIP-DATA IN SRT = '1'
               IF SRT-FEC-MAXI IN SRT > SRT-FEC-MINI IN SRT
                   DISPLAY ' '
                   DISPLAY 'ATENCION : EXISTEN OPERACIONES CON '
                           'POSTERIORIDAD AL PRIMER VCTO MOROSO DEL : '
                           SRT-FEC-MINI IN SRT 'DE LA CLF : '
                           CLF-CIC-ICLF IN SRT
                   DISPLAY ' '
      *LEE SIGUIENTE CONJUNTO DE DATOS
                   PERFORM LEE-SIG-DATA1
                   GO TO LUP-OUT-SRT.

           IF SRT-TIP-DATA IN SRT = '1'
               RETURN GNSSRT AT END
                   GO TO FIN-OUT-SRT.

           IF SRT-TIP-DATA IN SRT = '1'
      *        DISPLAY 'ATENCION : QUEDO UN REGISTRO SRT SIN DATOS'
               GO TO LUP-OUT-SRT.
      *********************************************************
      *       AL LLEGAR HASTA AQUI ES REGISTRO TIPO '2'       *
      *********************************************************

           PERFORM PROCESO-CAN.

           IF WSS-FEC-FDEV IN WSS-VARI NOT > ZEROES
      *LEO DLC
               MOVE OPC-CIC-IOPC IN SRT TO DLC-CIC-IOPC IN DLC
               MOVE ZEROES              TO DLC-NUM-IDLC IN DLC
               MOVE FIO-GET-NLS TO FIO-CMND
               PERFORM COL-FIO-DLC
               IF NOT (FIO-STAT-OKS AND
                        OPC-CIC-IOPC IN SRT = DLC-CIC-IOPC IN DLC)
                        DISPLAY 'ERROR: NO EXISTE COLDLC : '
                            OPC-CIC-IOPC IN SRT
                        GO TO FIN-OUT-SRT
               ELSE
                  MOVE DLC-FEC-FDEV IN DLC TO WSS-FEC-FDEV IN WSS-VARI.

      *     DISPLAY 'CAL-INT : '
      *     DISPLAY 'OPC-NUM-DCOL : ' OPC-NUM-DCOL IN SRT.
      *     DISPLAY 'OPC-NUM-MCOL : ' OPC-NUM-MCOL IN SRT.
      *     DISPLAY 'OPC-NUM-SCOL : ' OPC-NUM-SCOL IN SRT.
      *     DISPLAY 'OPC-NUM-ACOL : ' OPC-NUM-ACOL IN SRT.
      *     DISPLAY 'WSS-FEC-FDEV : ' WSS-FEC-FDEV IN WSS-VARI.
      *     DISPLAY 'WSS-FEC-MINI : ' WSS-FEC-MINI IN WSS-VARI.
      *     DISPLAY 'WSS-FEC-FHOY : ' WSS-FEC-FHOY IN WSS-VARI.

      *CALCULO DE INTERES
           MOVE OPC-NUM-DCOL IN SRT      TO INT-DCOL.
           MOVE OPC-NUM-MCOL IN SRT      TO INT-MCOL.
           MOVE OPC-NUM-SCOL IN SRT      TO INT-SCOL.
           MOVE OPC-NUM-ACOL IN SRT      TO INT-ACOL.
           MOVE OPC-COD-VCOC IN SRT      TO INT-VCAM.
           MOVE WSS-NUM-DDEV IN WSS-VARI TO INT-DUNO.
           MOVE WSS-NUM-MDEV IN WSS-VARI TO INT-MUNO.
           MOVE WSS-NUM-SDEV IN WSS-VARI TO INT-SUNO.
           MOVE WSS-NUM-ADEV IN WSS-VARI TO INT-AUNO.
           MOVE WSS-NUM-DMIN IN WSS-VARI TO INT-DDOS.
           MOVE WSS-NUM-MMIN IN WSS-VARI TO INT-MDOS.
           MOVE WSS-NUM-SMIN IN WSS-VARI TO INT-SDOS.
           MOVE WSS-NUM-AMIN IN WSS-VARI TO INT-ADOS.
           MOVE WSS-NUM-DHOY IN WSS-VARI TO INT-DBTV.
           MOVE WSS-NUM-MHOY IN WSS-VARI TO INT-MBTV.
           MOVE WSS-NUM-SHOY IN WSS-VARI TO INT-SBTV.
           MOVE WSS-NUM-AHOY IN WSS-VARI TO INT-ABTV.
           MOVE OPC-CIC-IOPC IN SRT TO INT-IOPC.
           MOVE VEN-NUM-IDLC IN SRT TO INT-IDLC.
           PERFORM COL-CAL-INT.
           IF INT-CMSG > SPACES
               DISPLAY 'ERROR: EN COL-CAL-INT ' INT-MENS
               GO TO NXT-OUT-SRT
           ELSE
               COMPUTE WSS-VAL-INTE IN WSS-VARI = INT-TIPE *
                        WSS-VAL-CAPI IN WSS-VARI
               IF OPC-COD-VCOC IN SRT = '0999'
                   MOVE WSS-VAL-INTE IN WSS-VARI TO
                        PES-SGV-DECI IN PES-VARI
                   PERFORM PES-SCTV
                   MOVE PES-SGV-ENTE IN PES-VARI TO
                        WSS-VAL-INTE IN WSS-VARI.

      *FECHA DE CURSE
      *ES OPC-FEC-FCOL

      *FECHA DE PROXIMO VENCIMIENTO IMPAGO
           IF WSS-SW-PXV IN WSS-VARI NOT = 'S'
               IF OPC-IND-VSTR IN OPC = 'S'
                   MOVE 1 TO VEN-NUM-IVEN IN VEN
               ELSE
                   MOVE OPC-NUM-IVEN IN SRT TO VEN-NUM-IVEN IN VEN.

           IF WSS-SW-PXV IN WSS-VARI NOT = 'S'
               MOVE OPC-CIC-IOPC IN SRT TO VEN-CIC-IOPC IN VEN
               MOVE FIO-GET-KEY TO FIO-CMND
               PERFORM COL-FIO-VEN
               IF FIO-STAT-OKS
                   MOVE VEN-NUM-DVEN IN VEN TO SRT-NUM-DPXV IN SRT
                   MOVE VEN-NUM-MVEN IN VEN TO SRT-NUM-MPXV IN SRT
                   MOVE VEN-NUM-SVEN IN VEN TO SRT-NUM-SPXV IN SRT
                   MOVE VEN-NUM-AVEN IN VEN TO SRT-NUM-APXV IN SRT
               ELSE
                   MOVE ZEROES TO SRT-NUM-DPXV IN SRT
                   MOVE ZEROES TO SRT-NUM-MPXV IN SRT
                   MOVE ZEROES TO SRT-NUM-SPXV IN SRT
                   MOVE ZEROES TO SRT-NUM-APXV IN SRT.

           MOVE 'N' TO WSS-SW-PXV IN WSS-VARI.

      *CAPITAL
           MOVE WSS-VAL-CAPI IN WSS-VARI TO WSS-VAL-CAPI IN WSS-PML.

      *INTERES
           MOVE WSS-VAL-INTE IN WSS-VARI TO WSS-VAL-INTE IN WSS-PML.

      *TOTAL
           ADD WSS-VAL-CAPI IN WSS-PML TO WSS-VAL-INTE IN WSS-PML
                GIVING WSS-VAL-TOTA IN WSS-PML.

      *FECHA CALCULOS AL... SE TOMA DEL VENCIMIENTO MAS ANTIGUO
           MOVE WSS-NUM-DMIN IN WSS-VARI TO SRT-NUM-DPRO IN SRT.
           MOVE WSS-NUM-MMIN IN WSS-VARI TO SRT-NUM-MPRO IN SRT.
           MOVE WSS-NUM-SMIN IN WSS-VARI TO SRT-NUM-SPRO IN SRT.
           MOVE WSS-NUM-AMIN IN WSS-VARI TO SRT-NUM-APRO IN SRT.
      *>>>>
       GEN-OUT-SRT.
           GENERATE DL-PML.
      *<<<< FIN_GEN_OUT
      *>>>>
       NXT-OUT-SRT.
           RETURN GNSSRT AT END
                GO TO FIN-OUT-SRT.
           GO TO LUP-OUT-SRT.
       FIN-OUT-SRT.
      *<<<< FIN_OUT
      *>>>>
           TERMINATE RPT-PML.
      *<<<< FIN_TMT
      *>>>>
           CLOSE RPTPML.
       EXT-OUT-SRT.
           EXIT.
       COPY LDCBFCLF.
       COPY GNSBGDTC.
       COPY GNSBGIDD.
       COPY GNSBTABT.
       COPY GNSBBSYS.
       COPY GNSBFTAB.
       COPY GNSBFMSG.
       COPY GNSBGEND.
       COPY GNSBGABT.

      *<<<< EOF
       LEE-SIG-DATA1 SECTION.
       INI-LEE-SIG-DATA1.
           RETURN GNSSRT AT END
                MOVE 1 TO WSS-NUM-RBAD IN WSS-VARI
                GO TO FIN-LEE-SIG-DATA1.

           IF SRT-TIP-DATA IN SRT = '1'
               GO TO FIN-LEE-SIG-DATA1
           ELSE
               GO TO INI-LEE-SIG-DATA1.

       FIN-LEE-SIG-DATA1.
           EXIT.

       PROCESO-OPC SECTION.
       INI-PROCESO-OPC.

           IF WSS-SW-DISPLAY IN WSS-VARI = 'S'
               DISPLAY 'PROCESANDO OPC : ' OPC-CIC-IOPC IN OPC.

           MOVE OPC-CIC-IOPC IN OPC TO VEN-CIC-IOPC IN VEN.
           IF OPC-IND-VSTR IN OPC = 'S'
               MOVE 1 TO VEN-NUM-IVEN IN VEN
           ELSE
               MOVE OPC-NUM-IVEN IN OPC TO VEN-NUM-IVEN IN VEN.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM COL-FIO-VEN.
           IF FIO-STAT-OKS
               IF VEN-FEC-FVEN IN VEN < WSS-FEC-FHOY IN WSS-VARI AND
                  VEN-FEC-FVEN IN VEN < WSS-FEC-MINI IN WSS-VARI
                   MOVE VEN-FEC-FVEN IN VEN TO
                        WSS-FEC-MINI IN WSS-VARI
                   IF WSS-SW-DISPLAY IN WSS-VARI = 'S'
                       DISPLAY 'VEN LEIDA : ' VEN-CIC-IOPC IN VEN
                        VEN-NUM-IVEN IN VEN ' CON FECHA : '
                        VEN-FEC-FVEN IN VEN
                   ELSE
                       NEXT SENTENCE
               ELSE
                   NEXT SENTENCE           
           ELSE
               DISPLAY 'ERROR: NO EXISTE COLVEN : ' 
                        VEN-KEY-IVEN IN VEN
               MOVE 1 TO WSS-NUM-RBAD IN WSS-VARI
               GO TO FIN-PROCESO-OPC.

           IF OPC-FEC-FCOL IN OPC > WSS-FEC-MAXI IN WSS-VARI
               MOVE OPC-FEC-FCOL IN OPC TO WSS-FEC-MAXI IN WSS-VARI.
    
           PERFORM GRABA-SRT-DETA.
       FIN-PROCESO-OPC.
           EXIT.

       GRABA-SRT-CABE SECTION.
       INI-GRABA-SRT-CABE.
      * '1' = DATOS CABECERA
           MOVE '1'                      TO SRT-TIP-DATA IN SRT.
           MOVE WSS-FEC-MINI IN WSS-VARI TO SRT-FEC-MINI IN SRT.
           MOVE WSS-FEC-MAXI IN WSS-VARI TO SRT-FEC-MAXI IN SRT.

           MOVE WSS-NUM-DMIN IN WSS-VARI TO SRT-NUM-DPRO IN SRT.
           MOVE WSS-NUM-MMIN IN WSS-VARI TO SRT-NUM-MPRO IN SRT.
           MOVE WSS-NUM-SMIN IN WSS-VARI TO SRT-NUM-SPRO IN SRT.
           MOVE WSS-NUM-AMIN IN WSS-VARI TO SRT-NUM-APRO IN SRT.
      *     PERFORM MOVE-SRT-COMUN.
           MOVE CLF-CIC-ICLF IN CLF TO CLF-CIC-ICLF IN SRT.
           MOVE SPACES TO OPC-COD-VCOC IN SRT
                          CLF-COD-OFIC IN SRT
                          OPC-CIC-IOPC IN SRT
                          DBC-CIC-ICLI IN SRT
                          CLF-COD-EJEC IN SRT.
           MOVE ZEROES TO OPC-NUM-DCOL IN SRT
                          OPC-NUM-MCOL IN SRT
                          OPC-NUM-SCOL IN SRT
                          OPC-NUM-ACOL IN SRT
                          OPC-VAL-SCRE IN SRT
                          VEN-NUM-IDLC IN SRT.

           RELEASE SRT.
           IF WSS-SW-DISPLAY IN WSS-VARI = 'S'
               DISPLAY ' '
               DISPLAY 'CLF AL SORT    : ' CLF-CIC-ICLF IN CLF
               DISPLAY 'FECHA DE CORTE : ' WSS-FEC-MINI IN WSS-VARI
               DISPLAY ' '.

       FIN-GRABA-SRT-CABE.
           EXIT.

       GRABA-SRT-DETA SECTION.
       INI-GRABA-SRT-DETA.
      * '2' = DATOS DEL DETALLE

           MOVE '2'                 TO SRT-TIP-DATA IN SRT.

           PERFORM MOVE-SRT-COMUN.

      *PARA QUE NO QUEDEN CON BASURA CUANDO EL REGISTRO ES DE DETALLE
           MOVE ZEROES TO SRT-FEC-MINI IN SRT.
           MOVE ZEROES TO SRT-FEC-MAXI IN SRT.

           RELEASE SRT.
           IF WSS-SW-DISPLAY IN WSS-VARI = 'S'
               DISPLAY ' '
               DISPLAY 'OPC AL SORT    : ' OPC-CIC-IOPC IN OPC
               DISPLAY ' '.

       FIN-GRABA-SRT-DETA.
           EXIT.

       MOVE-SRT-COMUN SECTION.
       INI-MOVE-SRT-COMUN.
           MOVE CLF-COD-OFIC IN CLF TO CLF-COD-OFIC IN SRT.
           MOVE CLF-CIC-ICLF IN CLF TO CLF-CIC-ICLF IN SRT.
           MOVE OPC-CIC-IOPC IN OPC TO OPC-CIC-IOPC IN SRT.
           MOVE OPC-NUM-DCOL IN OPC TO OPC-NUM-DCOL IN SRT.
           MOVE OPC-NUM-MCOL IN OPC TO OPC-NUM-MCOL IN SRT.
           MOVE OPC-NUM-SCOL IN OPC TO OPC-NUM-SCOL IN SRT.
           MOVE OPC-NUM-ACOL IN OPC TO OPC-NUM-ACOL IN SRT.
           MOVE OPC-COD-VCOC IN OPC TO OPC-COD-VCOC IN SRT.
           MOVE RDC-CIC-ICLI IN RDC TO DBC-CIC-ICLI IN SRT.
           MOVE OPC-VAL-SCRE IN OPC TO OPC-VAL-SCRE IN SRT.
           MOVE VEN-NUM-IDLC IN VEN TO VEN-NUM-IDLC IN SRT.
           MOVE CLF-COD-EJEC IN CLF TO CLF-COD-EJEC IN SRT.
           MOVE OPC-NUM-IVEN IN OPC TO OPC-NUM-IVEN IN SRT.
       FIN-MOVE-SRT-COMUN.
           EXIT.

       PROCESO-CAN SECTION.
       INI-PROCESO-CAN.
      *INICIALIZA VARIABLES
           MOVE 'S'                 TO WSS-PRIMERA-CAN IN WSS-VARI.
           MOVE OPC-VAL-SCRE IN SRT TO WSS-VAL-CAPI    IN WSS-VARI.
           MOVE ZEROES              TO WSS-FEC-FDEV    IN WSS-VARI.

      *LEE CAN
           MOVE OPC-CIC-IOPC IN SRT TO CAN-CIC-IOPC IN CAN.
           MOVE 1                   TO CAN-NUM-ICAN IN CAN.
           MOVE FIO-GET-NLS TO FIO-CMND.
       LUP-PROCESO-CAN.
           PERFORM COL-FIO-CAN.
           IF NOT (FIO-STAT-OKS AND
                   OPC-CIC-IOPC IN SRT = CAN-CIC-IOPC IN CAN)
                    GO TO FIN-PROCESO-CAN.

           IF CAN-MSC-STAT IN CAN NOT = 'A'
               GO TO NXT-PROCESO-CAN.

           IF CAN-FEC-FOUT IN CAN NOT > WSS-FEC-MINI IN WSS-VARI
               GO TO NXT-PROCESO-CAN.

      *SE CHEQUEA QUE LOS VALORES SEAN POSITIVOS PARA SABER QUE NO SEA
      *UNA REVERSA
           IF CAN-SGV-TPAG IN CAN < ZEROES OR
              CAN-SGV-TREN IN CAN < ZEROES
               GO TO NXT-PROCESO-CAN.

           MOVE CAN-CIC-IOPC IN CAN TO RCV-CIC-IOPC IN RCV.
           MOVE CAN-NUM-ICAN IN CAN TO RCV-NUM-ICAN IN RCV.
           MOVE SPACES              TO RCV-CIC-IOPV IN RCV.
           MOVE ZEROES              TO RCV-NUM-IVCT IN RCV.
           MOVE FIO-GET-NLS TO FIO-CMND.
       LUP-PROCESO-RCV.
           PERFORM COL-FIO-RCV.
           IF NOT (FIO-STAT-OKS AND
                   CAN-CIC-IOPC IN CAN = RCV-CIC-IOPC IN RCV AND
                   CAN-NUM-ICAN IN CAN = RCV-NUM-ICAN IN RCV)
               GO TO NXT-PROCESO-CAN
           ELSE
               COMPUTE WSS-VAL-CAPI IN WSS-VARI =
                   WSS-VAL-CAPI IN WSS-VARI + RCV-SGV-CAPI IN RCV.

           IF PRIMERA-CAN
               MOVE CAN-FEC-FDVA TO WSS-FEC-FDEV IN WSS-VARI
               MOVE 'N' TO WSS-PRIMERA-CAN IN WSS-VARI
      *OBTIENE FECHA DE VCTO DEL PROXIMO VEN
               PERFORM OBT-FEC-PXV.

       NXT-PROCESO-CAN.
           MOVE FIO-GET-NXT TO FIO-CMND.
           GO TO LUP-PROCESO-CAN.

       FIN-PROCESO-CAN.
           EXIT.

       OBT-FEC-PXV SECTION.
       INI-OBT-FEC-PXV.
      *SW PARA INDICAR QUE PASO POR AQUI
           MOVE 'S' TO WSS-SW-PXV IN WSS-VARI.
           MOVE OPC-CIC-IOPC IN SRT TO OPC-CIC-IOPC IN OPC.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM COL-FIO-OPC.
           MOVE OPC-CIC-IOPC IN OPC TO VEN-CIC-IOPC IN VEN.
           IF RCV-NUM-IVCT IN RCV = ZEROES
               MOVE OPC-NUM-IVEN IN OPC TO VEN-NUM-IVEN IN VEN
           ELSE
               MOVE RCV-NUM-IVCT IN RCV TO VEN-NUM-IVEN IN VEN.
           MOVE FIO-GET-KEY TO FIO-CMND.
           IF OPC-IND-VSTR IN OPC = 'S'
               PERFORM COL-OBT-VEN
               IF VEN-STAT-OKS
                   MOVE VEN-NUM-DVEN IN VEN TO SRT-NUM-DPXV IN SRT
                   MOVE VEN-NUM-MVEN IN VEN TO SRT-NUM-MPXV IN SRT
                   MOVE VEN-NUM-SVEN IN VEN TO SRT-NUM-SPXV IN SRT
                   MOVE VEN-NUM-AVEN IN VEN TO SRT-NUM-APXV IN SRT
               ELSE
                   MOVE ZEROES TO SRT-NUM-DPXV IN SRT
                   MOVE ZEROES TO SRT-NUM-MPXV IN SRT
                   MOVE ZEROES TO SRT-NUM-SPXV IN SRT
                   MOVE ZEROES TO SRT-NUM-APXV IN SRT
           ELSE
               PERFORM COL-FIO-VEN
               IF FIO-STAT-OKS
                   MOVE VEN-NUM-DVEN IN VEN TO SRT-NUM-DPXV IN SRT
                   MOVE VEN-NUM-MVEN IN VEN TO SRT-NUM-MPXV IN SRT
                   MOVE VEN-NUM-SVEN IN VEN TO SRT-NUM-SPXV IN SRT
                   MOVE VEN-NUM-AVEN IN VEN TO SRT-NUM-APXV IN SRT
               ELSE
                   MOVE ZEROES TO SRT-NUM-DPXV IN SRT
                   MOVE ZEROES TO SRT-NUM-MPXV IN SRT
                   MOVE ZEROES TO SRT-NUM-SPXV IN SRT
                   MOVE ZEROES TO SRT-NUM-APXV IN SRT.
       FIN-OBT-FEC-PXV.
           EXIT.

       COPY LDCBFLDC.
       COPY LDCBFRDC REPLACING RDC BY RDL
                   ==ADR-RDC-REQA== BY ==ADR-RDL-REQA==.
       COPY COLBFOPC.
       COPY COLBFCAN.
       COPY COLBFRCV.
       COPY COLBFVEN.
       COPY COLBFDLC.
       COPY COLBFRDC.
       COPY COLBFEVC.
       COPY COLBFICG.

       COPY COLBGVEN.
       COPY COLBGINT.
       COPY COLBFCCT.
       COPY COLBFTOC.
       COPY COLBFROV.

       COPY TABBFTIO.
       COPY TABBFOFI.
       COPY TABBFUSR.
       COPY TABBFCAM.
       COPY TABBVOFI.
       COPY TABBVUSR.
       COPY TABBBOFI.
       COPY TABBBUSR.

       COPY SGCBFDBC.

       COPY GNSBGHOY.
       COPY GNSBPFEC.
       COPY GNSBGFEC.
       COPY GNSBFMSC.
       COPY GNSBBTAB.
       COPY GNSBBMSG.
       COPY GNSBGPES.
       COPY GNSBGCPT.
      *>>>>
