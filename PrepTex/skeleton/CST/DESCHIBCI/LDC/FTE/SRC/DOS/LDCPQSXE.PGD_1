       IDENTIFICATION DIVISION.
      *========================
       PROGRAM-ID.   LDCPQSXE.
       AUTHOR.       BEE.
       DATE-WRITTEN. 08-May-19 12:08 PM.

      * NOMBRE PROGRAMA                   LDCPQSXE
      * VERSION PGM                       3.1
      * VERSION SKL                       19.04.15
      * OPCION                            CON
      * ARCHIVO BASE                      SGCREC
      * PANTALLA                          LDCSXE
      * INP/OUT                           DATACOM
      * TAMANO COMMAREA                   250

      *<<<<
      *===============================================================
      * LFZ 15-MAY-2007 : SE AGREGA FILTRO DE NIVELES, PARA QUE LA SXE
      *                   DESPLIEGUE EL MAXIMO NUMERO DE NIVELES DE
      *                   ACUERDO A LA TABLA NMAXSXEMEC.
      *===============================================================
      *>>>>

       ENVIRONMENT DIVISION.
      *=====================
       CONFIGURATION SECTION.
      *----------------------
       SPECIAL-NAMES.
               DECIMAL-POINT IS COMMA.
       DATA DIVISION.
      *==============

       WORKING-STORAGE SECTION.
      *------------------------
      * COPY GNSWGSCR.
       COPY GNSWGCVT.
       77  WSS-TAG-LDCPQSXE-INI PIC X(125) VALUE                        
           '<IDNPGM NOM=$LDCPQSXE$ SKL=$19.04.15$ VSN=${vsnpq}$        
      -    'GEN=$08-May-19 12:08 PM$ FNC=${fncpq}$/>'.    

       COPY GNSWCSCR.
      *PTC-INI
      *PTC-SUB
      * COPY GNSWVSCR.
       COPY GNSWV3CR.
      *PTC-FIN
           03 SCR-NUM-PANT               PIC 9(02).
           03 SCR-SXE-FLD                PIC X(1055).
       COPY LDCWISXE.

       COPY SGCBRREC.


       COPY GNSWVIDD.
       COPY GNSWGRQA.
       COPY GNSWGUIB.
       COPY GNSWGELS.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-REC-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-TAB-REQA==.
       COPY GNSBRTAB.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-MSC-REQA==.
       COPY GNSBRMSC.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-MSG-REQA==.
       COPY GNSBRMSG.
       COPY GNSWCFIO.
       COPY GNSWVFIO.
      *PTC-INI
      *PTC-SUB
      * ISP  10-MAY-2001 13:46:35 
      * COPY GNSWGFRM.
       COPY GNSWG3CF.
       COPY GNSWGTSK.
       COPY GNSWGQUE.
      *PTC-FIN
       COPY GNSWVNUM.
       COPY GNSWCNUM.
       COPY GNSWCVRF.
       COPY GNSWVVRF.
       COPY GNSWGIDC.
       COPY GNSWGSYS.

      *<<<< WSS
       COPY LDCBRRDC.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-RDC-REQA==.
       COPY LDCBRCLF.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-CLF-REQA==.

       COPY SGCBRDBC.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-DBC-REQA==.

       COPY GNSWGCPT.
       COPY GNSWGSTR.
       COPY GNSWGFEC.
       COPY GNSWGHOY.
       COPY LDCWXSXE.
      *>>>>
      *<<<< WSS_DTC
      *>>>>
       01 WSS-NUM-CCUR.
           03 WSS-NUM-ICUR-EDT  PIC  ZZ9.
           03 WSS-NUM-ICUR-ALF       PIC X(03).
           03 WSS-NUM-ICUR      REDEFINES
              WSS-NUM-ICUR-ALF       PIC 9(03).
       01  PGM-VARI.
           03 PGM-ICLR                  VALUE ' '       PIC X(01).
           03 PGM-LIMPIAR-TODO          VALUE ' '       PIC X(01).
           03 PGM-LIMPIAR-LLAVES        VALUE 'K'       PIC X(01).
           03 PGM-LIMPIAR-CAMPOS        VALUE 'F'       PIC X(01).
           03 PGM-NO-LIMPIAR-NADA       VALUE 'N'       PIC X(01).
           03 PGM-PROG                                  PIC X(08).
           03 PGM-NTRN                                  PIC X(04).
           03 PGM-STAT.
              05 PGM-STAT-DBC.
                 88 PGM-STAT-DBC-NUL    VALUE '  '.
                 07 PGM-STT1-DBC        VALUE '2' PIC X(01).
                    88 PGM-STAT-DBC-OKS VALUE '0'.
                 07 PGM-STT2-DBC        VALUE '3' PIC X(01).
      *<<<<
              05 PGM-STAT-REC.
                 88 PGM-STAT-REC-NUL    VALUE '  '.
                 07 PGM-STT1-REC        VALUE '2' PIC X(01).
                    88 PGM-STAT-REC-OKS VALUE '0'.
                 07 PGM-STT2-REC        VALUE '3' PIC X(01).
              05 PGM-STAT-CLF.
                 88 PGM-STAT-CLF-NUL    VALUE '  '.
                 07 PGM-STT1-CLF        VALUE '2' PIC X(01).
                    88 PGM-STAT-CLF-OKS VALUE '0'.
                 07 PGM-STT2-CLF        VALUE '3' PIC X(01).
              05 PGM-STAT-RDC.
                 88 PGM-STAT-RDC-NUL    VALUE '  '.
                 07 PGM-STT1-RDC        VALUE '2' PIC X(01).
                    88 PGM-STAT-RDC-OKS VALUE '0'.
                 07 PGM-STT2-RDC        VALUE '3' PIC X(01).
      *>>>>
           03 PGM-SRNF                  VALUE '23'      PIC X(02).
           03 PGM-SOKS                  VALUE '00'      PIC X(02).
           03 PGM-SNUL                  VALUE '  '      PIC X(02).
           03 PGM-SUAR                  VALUE SPACES    PIC X(15).
           03 PGM-CMMA.
              05 PGM-CMMA-CHR OCCURS 3000 PIC X(01).
       LINKAGE SECTION.
      *----------------
       01  DFHCOMMAREA.
           02 DFH-CMMA OCCURS 3000 PIC X(01).
       COPY GNSLGFIO.

       PROCEDURE DIVISION.
      *===================

       MAIN SECTION.
       INI-MAIN.
           PERFORM INI.
       LUP-MAIN.
           IF SCR-INST = SCR-INST-HCM
                 PERFORM SCR-COM.
           IF SCR-CCPP = 'ACC'
                 PERFORM SCR-ACC
           ELSE
                 MOVE SCR-INST-HCM TO SCR-INST.
           GO TO LUP-MAIN.
       FIN-MAIN.
           EXIT.

       INI SECTION.
       INI-INI.
       COPY GNSBGEIB.
       COPY GNSBGEDB.
           MOVE LOW-VALUES TO SXE-FLD.
           MOVE LOW-VALUES TO SXE-EDT.
           PERFORM GNS-PRO-RCK.
           PERFORM GNS-BUS-VCA.
           MOVE +3000 TO SCR-TCMA.
           PERFORM GNS-HDL-SYS.
           PERFORM GNS-HDL-FRM.
           MOVE 'LDCPQSXE' TO FIO-PROG.
           PERFORM GNS-BUS-IDD.
      *PTC-INI
           PERFORM GNS-ERR-QUE.
           PERFORM GET-TSK-TERM.
      *PTC-FIN
      *<<<< INI_FIO
           IF SCR-OFRM-SRV
                MOVE TSK-TERM-ALF TO SXE-COD-TERM
                MOVE TSK-TERM-ALF TO SXE-COD-TERM-MAS
           ELSE
                MOVE EIBTRMID     TO SXE-COD-TERM
                MOVE EIBTRMID     TO SXE-COD-TERM-MAS.
           MOVE +3859 TO SCR-TCMA.
           PERFORM GNS-ERR-QUE.
           IF ( FRM-FFLD = FRM-FFLD-PF5 ) AND ( SCR-NUM-PANT = 1 )
               MOVE SCR-SXE-FLD TO SXE-FLD
               GO TO FIN-INI.

           IF ( FRM-FFLD = FRM-FFLD-PF6 )
               MULTIPLY SCR-NUM-PANT BY WSS-IMAX GIVING QUE-NITM
               ADD 1              TO QUE-NITM
               MOVE SXE-NOM-TSSXE TO QUE-COLA
               MOVE SXE-LEN-TSSXE TO QUE-LITM
               MOVE QUE-GET       TO QUE-CMND
               PERFORM GNS-PRO-QUE
               IF QUE-STAT NOT = QUE-STAT-OKS
                  MOVE SCR-SXE-FLD TO SXE-FLD
                  GO TO FIN-INI.

      * Obtiene Tipo de Realacion valida proyecto MEC
           MOVE 'DEU'          TO FIO-SIST.
           MOVE 'VSN'          TO TAB-COD-TTAB IN TAB.
           MOVE 'TRECMEC     ' TO TAB-COD-CTAB IN TAB.
           MOVE FIO-GET-KEY    TO FIO-CMND.
           PERFORM GNS-FIO-TAB.
           IF FIO-STAT-OKS AND TAB-MSC-STAT = 'S'
              MOVE TAB-COD-DAT2(1) TO WSS-COD-TREC IN WSS-VARI
              MOVE TAB-COD-DAT2(2) TO WSS-COD-RELI IN WSS-VARI
           ELSE
              MOVE 'CD'            TO WSS-COD-TREC IN WSS-VARI
              MOVE 'DC'            TO WSS-COD-RELI IN WSS-VARI.
      *>>>>
       FIN-INI.
           EXIT.

       COPY GNSBHSYS.
       COPY GNSBHFRM.
       COPY GNSBPRCK.
       GNS-BUS-VCA SECTION.
       INI-GNS-BUS-VCA.
           MOVE 0 TO FRM-IFLD.
       LUP-GNS-BUS-VCA.
           ADD 1 TO FRM-IFLD.
           IF FRM-IFLD NOT > EIBCALEN AND
              FRM-IFLD NOT > 3000
                MOVE DFH-CMMA(FRM-IFLD) TO PGM-CMMA-CHR(FRM-IFLD)
                GO TO LUP-GNS-BUS-VCA.
           MOVE PGM-CMMA TO SCR-VARI.
       FIN-GNS-BUS-VCA.
           EXIT.
       COPY GNSBBIDD.

       SCR-COM SECTION.
       INI-SCR-COM.
           MOVE FRM-CPSF-AEY TO FRM-CPIM-AEY.
           PERFORM PRO-ALL.
           PERFORM SCR-CLRA-SXE.
           PERFORM EDT-KEY-SXE.
           PERFORM EDT-FLD-SXE.
           PERFORM SCR-PUTA.
           MOVE SCR-INST-HCM TO SCR-INST.
           MOVE SCR-CMNP     TO SYS-PROG.
           MOVE SCR-VARI     TO SYS-CMMA.
           MOVE SCR-TCMA     TO SYS-TCMA.
           MOVE SYS-XCTL     TO SYS-CMND.
      *PTC-INI
           IF NOT SCR-OFRM-SRV
      *PTC-FIN
           PERFORM GNS-PRO-SYS.
       XCT-ERR.
           MOVE 'XCTERR    ' TO MSG-COD-MENS.
           MOVE 'GNS'        TO MSG-COD-SIST.
           PERFORM GET-MSG.
           MOVE MSG-GLS-DESC TO SYS-MEN1.
           MOVE SYS-PROG     TO SYS-MEN2.
           MOVE SYS-ABOR     TO SYS-CMND.
      *PTC-INI
           IF NOT SCR-OFRM-SRV
      *PTC-FIN
           PERFORM GNS-PRO-SYS.
       COPY GNSBGGBK.
       FIN-SCR-COM.
           EXIT.



       SCR-ACC SECTION.
       INI-SCR-ACC.
           IF SCR-INST = SCR-INST-HKY
               PERFORM HBL-KEY
               MOVE SCR-INST-GKY TO SCR-INST
               PERFORM SCR-DMSG
           ELSE
           IF SCR-INST = SCR-INST-GKY
                PERFORM SCR-KEY
                IF SCR-STAT NOT = SCR-STAT-ABT
                        PERFORM SCR-TRL
                ELSE
                        PERFORM DESSCRTRL
                        GO TO FIN-SCR-ACC
           ELSE
           IF SCR-INST = SCR-INST-GAB
                PERFORM GET-CON
           ELSE
           IF SCR-INST = SCR-INST-BRW
               MOVE SCR-FFLD TO FRM-FFLD
               PERFORM BRW-SCR-ACC.
           PERFORM DESSCRTRL.
      *<<<< PFS_SCR_ACC
           IF FRM-FFLD = FRM-FFLD-PF5 OR FRM-FFLD-PF6
               PERFORM VAL-NUM-KEY-SXE
               PERFORM VAL-NUM-FLD-SXE
               PERFORM SCRL-TAB-SXE
               PERFORM SCR-TRL.
      *>>>>
           MOVE SPACES TO FRM-MENS.
           PERFORM SCR-MSSG.
       FIN-SCR-ACC.
           EXIT.

       BRW-SCR-ACC SECTION.
       INI-BRW-SCR-ACC.
       FIN-BRW-SCR-ACC.
           EXIT.




       SCR-DMSG SECTION.
       INI-SCR-DMSG.
           IF PGM-ICLR = PGM-NO-LIMPIAR-NADA
               NEXT SENTENCE
           ELSE
           IF PGM-ICLR = PGM-LIMPIAR-TODO
               PERFORM SCR-CLRA-SXE
               PERFORM EDT-KEY-SXE
               PERFORM EDT-FLD-SXE
           ELSE
           IF PGM-ICLR = PGM-LIMPIAR-LLAVES
               PERFORM CLR-KEY-SXE
               PERFORM EDT-KEY-SXE
           ELSE
               PERFORM CLR-FLD-SXE
               PERFORM EDT-FLD-SXE.
           PERFORM SCR-PUTA.
           PERFORM SCR-EXIT.
       FIN-SCR-DMSG.
           EXIT.

       SCR-KEY SECTION.
       INI-SCR-KEY.
           PERFORM SCR-RST.
           PERFORM GET-KEY.
           IF FRM-STAT-ABT
                   MOVE SPACES TO FRM-MENS
                   PERFORM SCR-MSSG
                   GO TO FIN-SCR-KEY.
       FND-SCR-KEY.
           MOVE SPACES TO FRM-MENS.
           PERFORM FND-KEY.
           IF FIO-STAT-OKS
               PERFORM PUT-SCR
               MOVE PGM-LIMPIAR-TODO TO PGM-ICLR
               GO TO FIN-SCR-KEY.
      *JSS ELSE
      *        PERFORM CLR-FLD-SXE.
       ERR-SCR-KEY.
      *PTC-INI
           MOVE 'S' TO SCR-IERR.
      *PTC-FIN
           MOVE PGM-LIMPIAR-CAMPOS TO PGM-ICLR.
           IF FRM-MENS NOT > SPACES
               IF FIO-STAT-EOF
                   MOVE 'REGEOF    ' TO MSG-COD-MENS
                   MOVE 'GNS' TO MSG-COD-SIST
                   PERFORM GET-MSG
                   MOVE MSG-GLS-DESC TO FRM-MENS
               ELSE
               IF FIO-STAT = FIO-STAT-NEX
                   MOVE 'REGNEX    ' TO MSG-COD-MENS
                   MOVE 'GNS' TO MSG-COD-SIST
                   PERFORM GET-MSG
                   MOVE MSG-GLS-DESC TO FRM-MENS
               ELSE
                   MOVE 'FIOSTAT' TO MSG-COD-TMSG
                   MOVE FIO-STAT  TO MSG-COD-CMSG
                   MOVE 'GNS'     TO MSG-COD-SIST
                   PERFORM GET-MSG
                   MOVE MSG-GLS-DESC TO FRM-MENS.
           PERFORM SCR-MSSG.
           MOVE SCR-STAT-ABT TO SCR-STAT.
       FIN-SCR-KEY.
           EXIT.

       SCR-RST SECTION.
       INI-SCR-RST.
           MOVE SPACES       TO PGM-ICLR.
           MOVE SPACES       TO SCR-ACTU.
           MOVE SCR-STPP     TO SCR-STAT.
           MOVE SCR-MFLD-NOT TO SCR-MFLD.
           MOVE LOW-VALUES   TO SXE-FLD.
           MOVE LOW-VALUES TO SXE-EDT.
       FIN-SCR-RST.
           EXIT.

       GET-KEY SECTION.
       INI-GET-KEY.
           PERFORM SCR-GKEY.
           IF FRM-STAT-ABT
               MOVE SCR-STAT-ABT TO SCR-STAT.
       FIN-GET-KEY.
           EXIT.

       GET-IKY SECTION.
       INI-GET-IKY.
           PERFORM SCR-GIKY.
           IF FRM-STAT-ABT
               MOVE SCR-STAT-ABT TO SCR-STAT.
       FIN-GET-IKY.
           EXIT.

       FND-KEY SECTION.
       INI-FND-KEY.
      *<<<< INI_FND_KEY
           IF DBC-NUM-ICLI IN SXE-FLD NOT = ZEROES
      *IDC-CLI Busca Cliente por medio de IdC
               MOVE DBC-NUM-ICLI IN SXE-FLD TO DBC-NUM-ICLI IN DBC
               MOVE DBC-IND-ICLI IN SXE-FLD TO DBC-IND-ICLI IN DBC
               MOVE DBC-GLS-ICLI IN SXE-FLD TO DBC-GLS-ICLI IN DBC
               MOVE 'DBC-IDC-ICLI' TO FIO-AKEY
               MOVE FIO-GET-KEY    TO FIO-CMND
               PERFORM GET-CLI
               IF MSG-COD-MENS NOT > SPACES
                   MOVE DBC-GLS-NOMC IN DBC TO CPT-STRN
                   PERFORM CPT-BLKS
                   MOVE CPT-STRN            TO DBC-GLS-NOMC IN SXE-FLD
                   MOVE DBC-CAI-ICLI IN DBC TO DBC-CAI-ICLI IN SXE-FLD
                   MOVE DBC-IIC-ICLI IN DBC TO DBC-IIC-ICLI IN SXE-FLD
                   MOVE '00' TO PGM-STAT-DBC
                   GO TO FIN-BUS-CLI-KEY
               ELSE
                   MOVE MSG-GLS-DESC TO FRM-MENS SXE-GLS-MENS
                   MOVE 'S' TO SCR-IERR.

           IF DBC-GLS-NOMC IN SXE-FLD > SPACES
      *NOM-CLI Busca Cliente por medio del Nombre
               MOVE DBC-GLS-NOMC IN SXE-FLD TO STR-GLS-GSTR
               PERFORM STR-UNS
               MOVE STR-GLS-FUNS IN STR-VARI(1) TO DBC-GLS-APAT IN DBC
               MOVE STR-GLS-FUNS IN STR-VARI(2) TO DBC-GLS-AMAT IN DBC
               MOVE STR-GLS-FUNS IN STR-VARI(3) TO DBC-GLS-NOMB IN DBC
               MOVE 'DBC-GLS-NOMC' TO FIO-AKEY
               MOVE FIO-GET-NLS    TO FIO-CMND
               PERFORM GET-CLI
               IF MSG-COD-MENS NOT > SPACES
                   MOVE DBC-NUM-ICLI IN DBC TO DBC-NUM-ICLI IN SXE-FLD
                   MOVE DBC-VRF-ICLI IN DBC TO DBC-VRF-ICLI IN SXE-FLD
                   MOVE DBC-IND-ICLI IN DBC TO DBC-IND-ICLI IN SXE-FLD
                   MOVE DBC-GLS-ICLI IN DBC TO DBC-GLS-ICLI IN SXE-FLD
                   MOVE DBC-GLS-NOMC IN DBC TO CPT-STRN
                   PERFORM CPT-BLKS
                   MOVE CPT-STRN            TO DBC-GLS-NOMC IN SXE-FLD
                   MOVE DBC-CAI-ICLI IN DBC TO DBC-CAI-ICLI IN SXE-FLD
                   MOVE DBC-IIC-ICLI IN DBC TO DBC-IIC-ICLI IN SXE-FLD
                   MOVE '00' TO PGM-STAT-DBC
                   GO TO FIN-BUS-CLI-KEY
               ELSE
                   MOVE MSG-GLS-DESC TO FRM-MENS SXE-GLS-MENS
                   MOVE 'S' TO SCR-IERR.

           IF DBC-CAI-ICLI IN SXE-FLD > SPACES OR
              DBC-IIC-ICLI IN SXE-FLD > SPACES
              MOVE DBC-CAI-ICLI IN SXE-FLD TO DBC-CAI-ICLI IN DBC
              MOVE DBC-IIC-ICLI IN SXE-FLD TO DBC-IIC-ICLI IN DBC
              MOVE FIO-GET-KEY    TO FIO-CMND
              PERFORM SGC-FIO-DBC
              IF FIO-STAT-OKS
                 MOVE DBC-NUM-ICLI IN DBC TO DBC-NUM-ICLI IN SXE-FLD
                 MOVE DBC-VRF-ICLI IN DBC TO DBC-VRF-ICLI IN SXE-FLD
                 MOVE DBC-IND-ICLI IN DBC TO DBC-IND-ICLI IN SXE-FLD
                 MOVE DBC-GLS-ICLI IN DBC TO DBC-GLS-ICLI IN SXE-FLD
                 MOVE DBC-GLS-NOMC IN DBC TO CPT-STRN
                 PERFORM CPT-BLKS
                 MOVE CPT-STRN            TO DBC-GLS-NOMC IN SXE-FLD
                 MOVE '00' TO PGM-STAT-DBC
                 GO TO FIN-BUS-CLI-KEY
              ELSE
                 MOVE MSG-GLS-DESC TO FRM-MENS SXE-GLS-MENS
                 MOVE 'S' TO SCR-IERR.

       FIN-BUS-CLI-KEY.
           IF MSG-COD-MENS > SPACES
              GO TO MSG-FND-KEY.

           MOVE '00' TO PGM-STAT-DBC.
           GO TO CON-FND-KEY.
      *>>>>
           PERFORM KEY-ALL-SXE.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM SGC-FIO-REC.
           MOVE FIO-STAT TO PGM-STAT-REC.
      *<<<< FIN_FND_KEY
       CON-FND-KEY.
           MOVE SXE-NOM-TSSXE TO QUE-COLA.
           MOVE SXE-LEN-TSSXE TO QUE-LITM.
           MOVE QUE-DEL       TO QUE-CMND.
           PERFORM GNS-PRO-QUE.
           MOVE SXE-NOM-TSSXE-MAS TO QUE-COLA.
           MOVE SXE-LEN-TSSXE-MAS TO QUE-LITM.
           MOVE QUE-DEL           TO QUE-CMND.
           PERFORM GNS-PRO-QUE.

           PERFORM GET-FHOY.
           MOVE DBC-CAI-ICLI IN DBC TO WSS-CAI-ICLI-SXE.
           MOVE DBC-IIC-ICLI IN DBC TO WSS-IIC-ICLI-SXE.
      *LFZ-INI 15-MAY-2007
           PERFORM OBT-NUM-NMAX.
      *LFZ-FIN 15-MAY-2007
           PERFORM CRG-CIC-NIVEL.
           IF MSG-COD-MENS > SPACES
              MOVE 'S' TO SCR-IERR
              GO TO MSG-FND-KEY.
           PERFORM PUT-TAB.

           MOVE '00' TO FIO-STAT.
           MOVE FIO-STAT TO PGM-STAT-REC.
           MOVE SCR-STAT-CON TO SCR-STAT.
           GO TO FIN-FND-KEY.
      *----------------------------------------------------------
       MSG-FND-KEY.
           MOVE 'DEU' TO MSG-COD-SIST.
           PERFORM GET-MSG.
           MOVE MSG-GLS-DESC TO FRM-MENS.
           MOVE '00' TO FIO-STAT.
           MOVE SCR-STAT-CON TO SCR-STAT.
           GO TO FIN-FND-KEY.
      *>>>>
       FIN-FND-KEY.
           IF FIO-STAT = FIO-STAT-NEX
               MOVE 'S' TO SCR-IERR.
       EXT-FND-KEY.
           EXIT.
 
       PUT-SCR SECTION.
       INI-PUT-SCR.
           PERFORM PUT-ALL-SXE.
       FIN-PUT-SCR.
           EXIT.

       STP-EXIT SECTION.
       INI-STP-EXIT.
           MOVE SCR-PROG TO PGM-PROG.
           MOVE SCR-NTRN TO PGM-NTRN.

           MOVE SCR-PROV TO SCR-PROG.
           MOVE SCR-NTRV TO SCR-NTRN.

           MOVE PGM-PROG TO SCR-PROV
           MOVE PGM-NTRN TO SCR-NTRV.
       FIN-STP-EXIT.
           EXIT.

       SCR-EXIT SECTION.
       INI-SCR-EXIT.
           MOVE 'P'      TO SCR-ICMN.
           MOVE SCR-NTRN TO SYS-NTRN.
           MOVE SCR-VARI TO SYS-CMMA.
           MOVE SCR-TCMA TO SYS-TCMA.
           MOVE SYS-RTRN TO SYS-CMND.
      *PTC-INI
           IF NOT SCR-OFRM-SRV
      *PTC-FIN
           PERFORM GNS-PRO-SYS.
       FIN-SCR-EXIT.
           EXIT.

       SCR-PUTA SECTION.
       INI-SCR-PUTA.
      *PTC-INI
           IF FRM-SUAR EQUAL FRM-SUAR-MAL OR FRM-SUAR-CLR
               MOVE 'S' TO SCR-IERR.
      *PTC-FIN
           MOVE SCR-NMAP TO FRM-NAME.
           MOVE SCR-NLIB TO FRM-NLIB.
           MOVE SXE-FLD TO FRM-DFLD.
           MOVE FRM-PUT-ALL TO FRM-CMND.
           PERFORM GNS-PRO-FRM.
       FIN-SCR-PUTA.
           EXIT.

       SCR-MSSG SECTION.
       INI-SCR-MSSG.
           IF FRM-MEN1 NOT > SPACES
               MOVE SPACES TO FRM-MEN1.
           IF FRM-MEN2 NOT > SPACES
               MOVE SPACES TO FRM-MEN2.
           MOVE FRM-MENS TO SXE-GLS-MENS.
       FIN-SCR-MSSG.
           EXIT.

       SCR-GKEY SECTION.
       INI-SCR-GKEY.
           MOVE SCR-NMAP TO FRM-NAME.
           MOVE SCR-NLIB TO FRM-NLIB.
           MOVE FRM-GET-ALL TO FRM-CMND.
           PERFORM GNS-PRO-FRM.
           MOVE SPACES TO FRM-MENS.
           IF NOT ( FRM-FFLD = FRM-FFLD-RET  OR FRM-FFLD-PF10 OR
                               FRM-FFLD-PF12 OR FRM-FFLD-PF3 )
               MOVE 'PFSINV    ' TO MSG-COD-MENS
               MOVE 'GNS' TO MSG-COD-SIST
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS
               PERFORM FST-KEY-SXE
               PERFORM SCR-MSSG
               PERFORM SCR-PUTA
               PERFORM SCR-EXIT.
           MOVE FRM-DFLD TO SXE-FLD.
           IF FRM-STAT-ABT
               GO TO FIN-SCR-GKEY.
           MOVE FRM-SUAR-OKS TO FRM-SUAR.
           PERFORM VAL-NUM-KEY-SXE.
           IF FRM-SUAR EQUAL FRM-SUAR-MAL OR FRM-SUAR-CLR
      *PTC-INI
               MOVE 'S' TO SCR-IERR
      *PTC-FIN
               PERFORM SCR-MSSG
               PERFORM EDT-KEY-SXE
               PERFORM SCR-PUTA
               PERFORM SCR-EXIT.
      *JSS
           PERFORM CLR-FLD-SXE.
           PERFORM VAL-IKY-SXE.
           IF FRM-SUAR EQUAL FRM-SUAR-MAL OR FRM-SUAR-CLR
               GO TO ERR-SCR-GKEY.
           PERFORM VAL-MKY-SXE.
           IF FRM-SUAR EQUAL FRM-SUAR-MAL OR FRM-SUAR-CLR
               GO TO ERR-SCR-GKEY.
           PERFORM VAL-AKY-SXE.
           IF FRM-SUAR EQUAL FRM-SUAR-MAL OR FRM-SUAR-CLR
               GO TO ERR-SCR-GKEY.
           PERFORM VAL-CON-KEY-SXE.
           IF NOT ( FRM-SUAR EQUAL FRM-SUAR-MAL OR FRM-SUAR-CLR )
               GO TO FIN-SCR-GKEY.
           IF FRM-UCUR NOT > SPACES
               PERFORM FST-KEY-SXE.
       ERR-SCR-GKEY.
      *PTC-INI
           MOVE 'S' TO SCR-IERR.
      *PTC-FIN
           PERFORM SCR-MSSG.
           PERFORM EDT-KEY-SXE.
           PERFORM SCR-PUTA.
           PERFORM SCR-EXIT.
       FIN-SCR-GKEY.
           PERFORM SCR-MSSG.

       SCR-GIKY SECTION.
       INI-SCR-GIKY.
           MOVE SCR-NMAP TO FRM-NAME.
           MOVE SCR-NLIB TO FRM-NLIB.
           MOVE FRM-GET-ALL TO FRM-CMND.
           PERFORM GNS-PRO-FRM.
           MOVE SPACES TO FRM-MENS.
           IF NOT ( FRM-FFLD = FRM-FFLD-RET  OR FRM-FFLD-PF10 OR
                               FRM-FFLD-PF12 OR FRM-FFLD-PF3 )
               MOVE 'PFSINV    ' TO MSG-COD-MENS
               MOVE 'GNS' TO MSG-COD-SIST
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS
               PERFORM FST-KEY-SXE
               PERFORM SCR-MSSG
               PERFORM SCR-PUTA
               PERFORM SCR-EXIT.
           MOVE FRM-DFLD TO SXE-FLD.
           IF FRM-STAT-ABT
               GO TO FIN-SCR-GIKY.
           MOVE FRM-SUAR-OKS TO FRM-SUAR.
           PERFORM VAL-NUM-KEY-SXE.
           IF FRM-SUAR EQUAL FRM-SUAR-MAL OR FRM-SUAR-CLR
      *PTC-INI
               MOVE 'S' TO SCR-IERR
      *PTC-FIN
               PERFORM SCR-MSSG
               PERFORM EDT-IKY-SXE
               PERFORM SCR-PUTA
               PERFORM SCR-EXIT.
      *JSS
           PERFORM CLR-FLD-SXE.
           PERFORM VAL-IKY-SXE.
           IF FRM-SUAR EQUAL FRM-SUAR-MAL OR FRM-SUAR-CLR
               GO TO ERR-SCR-GIKY.
           PERFORM VAL-CON-IKY-SXE.
           IF NOT ( FRM-SUAR EQUAL FRM-SUAR-MAL OR FRM-SUAR-CLR )
               GO TO FIN-SCR-GIKY.
           IF FRM-UCUR NOT > SPACES
               PERFORM FST-KEY-SXE.
       ERR-SCR-GIKY.
      *PTC-INI
           MOVE 'S' TO SCR-IERR.
      *PTC-FIN
           PERFORM SCR-MSSG.
           PERFORM EDT-IKY-SXE.
           PERFORM SCR-PUTA.
           PERFORM SCR-EXIT.
       FIN-SCR-GIKY.
           PERFORM SCR-MSSG.

       GET-CON SECTION.
       INI-GET-CON.
           MOVE SCR-NMAP TO FRM-NAME.
           MOVE SCR-NLIB TO FRM-NLIB.
           MOVE FRM-GET-ALL TO FRM-CMND.
           PERFORM GNS-PRO-FRM.
           IF NOT ( FRM-FFLD = FRM-FFLD-RET  OR FRM-FFLD-PF10 OR
                               FRM-FFLD-PF12 OR FRM-FFLD-PF3 )
      *<<<< PFS_GET_CON
           IF NOT ( FRM-FFLD = FRM-FFLD-PF5 OR FRM-FFLD-PF6 )
      *>>>>
               MOVE 'PFSINV    ' TO MSG-COD-MENS
               MOVE 'GNS' TO MSG-COD-SIST
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO SXE-GLS-MEN2
               MOVE SCR-PRMT     TO SXE-GLS-MEN1
               PERFORM FST-MSG
               PERFORM SCR-PUTA
               PERFORM SCR-EXIT.
           MOVE FRM-DFLD TO SXE-FLD.
       FIN-GET-CON.
           MOVE SCR-STAT-CON TO SCR-STAT.

       CLR-MSG SECTION.
       INI-CLR-MSG.
           MOVE SPACES TO SXE-GLS-MENS.
       FIN-CLR-MSG.
           EXIT.

       HBL-IKY SECTION.
       INI-HBL-IKY.
      *PTC-INI
           IF NOT SCR-OFRM-SRV
      *PTC-FIN
           IF SCR-DESDE-CMN
               MOVE SXE-GLS-MENS TO FRM-MENS
               MOVE LOW-VALUES TO SXE-FLD
      * FLB  7-NOV-1994
               PERFORM CLR-KEY-SXE

               IF FRM-MENS < SPACES
                   MOVE LOW-VALUES TO SXE-GLS-MENS
               ELSE
                   MOVE FRM-MENS TO SXE-GLS-MENS.
           PERFORM PRO-MKY-SXE.
           PERFORM PRO-AKY-SXE.
           PERFORM UNP-IKY-SXE.
           PERFORM FST-KEY-SXE.
       FIN-HBL-IKY.
           EXIT.

       HBL-KEY SECTION.
       INI-HBL-KEY.
      *PTC-INI
           IF NOT SCR-OFRM-SRV
      *PTC-FIN
           IF SCR-DESDE-CMN
               MOVE SXE-GLS-MENS TO FRM-MENS
               MOVE LOW-VALUES TO SXE-FLD
               IF FRM-MENS < SPACES
                   MOVE LOW-VALUES TO SXE-GLS-MENS
               ELSE
                   MOVE FRM-MENS TO SXE-GLS-MENS.
           PERFORM UNP-KEY-SXE.
           PERFORM FST-KEY-SXE.
       FIN-HBL-KEY.
           EXIT.

       HBL-FLD SECTION.
       INI-HBL-FLD.
           PERFORM PRO-IKY-SXE.
           PERFORM PRO-AKY-SXE.
           PERFORM UNP-MKY-SXE.
           PERFORM UNP-FLD-SXE.
           PERFORM FST-FLD-SXE.
       FIN-HBL-FLD.
           EXIT.

       FST-MSG SECTION.
       INI-FST-MSG.
           MOVE -1 TO SXE-GLS-MENS-LEN.
       FIN-FST-MSG.
           EXIT.

       PRO-ALL SECTION.
       INI-PRO-ALL.
           PERFORM PRO-KEY-SXE.
           PERFORM FST-MSG.
       FIN-PRO-ALL.
           EXIT.

       SCR-TRL SECTION.
       INI-SCR-TRL.
      *PTC-INI
           IF SCR-STAT NOT = SCR-STPP
               MOVE 'S' TO SCR-IERR.
      *PTC-FIN
           IF FRM-MEN1 NOT > SPACES
               MOVE SCR-PRMT TO FRM-MEN1.
           IF SCR-STAT = SCR-STAT-MOD
               PERFORM HBL-FLD
               PERFORM SCR-MSSG
               PERFORM EDT-KEY-SXE
               PERFORM EDT-FLD-SXE
               PERFORM SCR-PUTA
               PERFORM STP-EXIT
               MOVE SCR-INST-GFL TO SCR-INST
               PERFORM SCR-EXIT.
           IF SCR-STAT = SCR-STAT-SON
               PERFORM PRO-ALL
               PERFORM SCR-MSSG
               PERFORM EDT-KEY-SXE
               PERFORM EDT-FLD-SXE
               PERFORM SCR-PUTA
               PERFORM STP-EXIT
               MOVE SCR-INST-GCS TO SCR-INST
               PERFORM SCR-EXIT.
      *ASUME SCR-STAT-CON.
           MOVE SCR-STAT-CON TO SCR-STAT.
      *    MOVE FRM-CPSF-AEY TO FRM-CPIM-AEY.
           PERFORM PRO-ALL.
           PERFORM SCR-MSSG.
           PERFORM EDT-KEY-SXE.
           PERFORM EDT-FLD-SXE.
           PERFORM SCR-PUTA.
           MOVE SCR-INST-GAB TO SCR-INST.
           PERFORM SCR-EXIT.
       FIN-SCR-TRL.
           EXIT.

       DESSCRTRL SECTION.
       INI-DESSCRTRL.
           MOVE SCR-VFLD-NOT TO SCR-VFLD.
           MOVE FRM-FFLD TO SCR-FFLD.
       FIN-DESSCRTRL.
           IF SCR-FFLD-PF10 OR SCR-FFLD-PF3
                 MOVE SCR-INST-HCM TO SCR-INST
           ELSE
                 MOVE SCR-INST-HKY TO SCR-INST.
       EXT-DESSCRTRL.
           EXIT.

      * PGM-EBR-ALL SECTION.
      * INI-PGM-EBR-ALL.
      *     MOVE 'GNS' TO FIO-SIST.
      *     MOVE FIO-EBR-ALL TO FIO-CMND.
      *     PERFORM GNS-FIO-TAB.
      * FIN-PGM-EBR-ALL.
      *     EXIT.

       COPY LDCBQSXE.
       COPY GNSBVNUM.
       COPY SGCBFREC.
       COPY GNSBFMSG.
       COPY GNSBGSYS.
       COPY GNSBGDTC.
      *PTC-INI
      *PTC-SUB
      * ISP  10-MAY-2001 13:46:35 
      * COPY GNSBGFRM.
       COPY GNSBG3CF.
      *PTC-FIN
       COPY GNSBGMSG.
       COPY GNSBEKEY.
       COPY GNSBIABT.
       COPY GNSBFTAB.
       COPY GNSBVIND.
       COPY GNSBVMSC.
       COPY GNSBFMSC.
       COPY GNSBVIDC.
       COPY GNSBPVRF.
      *PTC-INI
       COPY GNSBGQUE.
       COPY GNSBGTSK.
      *PTC-FIN

      *<<<< PGM_DTC AND EOF
      *CGL-INI 02-03-2004 VERSION BCI
      *COPY GNSBGVSM.
      *CGL-FIN 02-03-2004 VERSION BCI
       COPY GNSBHVSM.
      *>>>>
      *<<<< EOF
       PUT-TAB SECTION.
       INI-PUT-TAB.
           MOVE SXE-NOM-TSSXE TO QUE-COLA.
           MOVE SXE-LEN-TSSXE TO QUE-LITM.
           MOVE QUE-DEL       TO QUE-CMND.
           PERFORM GNS-PRO-QUE.

           MOVE 1 TO SCR-NUM-PANT.
           MOVE LOW-VALUES TO WSS-IND-NVEL-IDX.
      *
           MOVE 1 TO FRM-IFLD.
           MOVE ZEROES  TO WSS-NITM IN WSS-VARI.

           MOVE 1 TO WSS-J IN WSS-VARI.
       LUP-PUT-TAB.
           IF WSS-J IN WSS-VARI > WSS-JMAX IN WSS-VARI
              GO TO FIN-PUT-TAB.
           IF WSS-CIC-SGRP(WSS-J) > SPACES
              PERFORM PUT-TAB-SXE
              PERFORM PUT-SXE-QUE
              PERFORM SET-FRM-IFLD
           ELSE
           IF FRM-IFLD = 1 AND
              FRM-IIC-SCLI(FRM-IFLD) NOT > SPACES
              MOVE 'DEU' TO MSG-COD-SIST
              MOVE 'SXE    NEX' TO MSG-COD-MENS
              PERFORM GET-MSG
              MOVE MSG-GLS-DESC TO FRM-MENS
              MOVE '00' TO FIO-STAT
              MOVE 'S' TO SCR-IERR
              GO TO FIN-PUT-TAB
           ELSE
              MOVE '00' TO FIO-STAT
              GO TO FIN-PUT-TAB.

           ADD 1 TO WSS-J IN WSS-VARI.
           GO TO LUP-PUT-TAB.
       FIN-PUT-TAB.
           IF WSS-CIC-LCLG IN WSS-VARI NOT = 'XXXXXXXXXXXX'
              MOVE 'XXXX' TO DBC-CAI-ICLI IN SXE-FLD
      *MHM-INI 09-MAY-2007
              MOVE 'XXXXXXXX' TO DBC-IIC-ICLI IN SXE-FLD.
      *       MOVE 'XXXXXXXX' TO DBC-IIC-ICLI IN SXE-FLD
      *       MOVE 'REALIZAR FORWARD A CLG' TO
      *                          DBC-GLS-NOMC IN SXE-FLD.
      *MHM-FIN 09-MAY-2007

           MOVE DBC-CAI-ICLI IN SXE-FLD TO DBC-CAI-ICLI IN DBC.
           MOVE DBC-IIC-ICLI IN SXE-FLD TO DBC-IIC-ICLI IN DBC.
           MOVE FIO-GET-KEY    TO FIO-CMND.
           PERFORM SGC-FIO-DBC.
           MOVE DBC-GLS-NOMC IN DBC TO CPT-STRN.
           PERFORM CPT-BLKS.
           MOVE CPT-STRN            TO DBC-GLS-NOMC IN DBC.
           MOVE FIO-STAT TO PGM-STAT-DBC.

           MOVE 1                  TO QUE-NITM.
           MOVE SXE-LEN-TSSXE-MAS  TO QUE-LITM.
           MOVE SXE-TSSXE-MAS      TO QUE-COLA.

           IF WSS-NITM > SXE-TOT-OCC-SXE
              MOVE 'S'           TO SXE-MAS-IND-HMAS
           ELSE
              MOVE 'N'           TO SXE-MAS-IND-HMAS.

           MOVE WSS-NITM         TO WSS-NUM-ICUR.
           MOVE WSS-NUM-ICUR     TO WSS-NUM-ICUR-EDT.
           MOVE WSS-NUM-ICUR-EDT TO WSS-NUM-ICUR-ALF.
           MOVE WSS-NUM-ICUR-ALF TO SXE-MAS-NUM-TOCC.
           MOVE SXE-MAS-ITEM     TO QUE-ITEM.
           MOVE QUE-PUT          TO QUE-CMND.
           PERFORM GNS-PRO-QUE.
      *    IF QUE-STAT NOT = QUE-STAT-OKS
      *       DISPLAY 'ERROR AL GRABAR TS HMAS'
      *    ELSE
      *       DISPLAY 'COLA HMAS=' QUE-ITEM.

           IF WSS-NITM > WSS-IMAX
               MOVE 'DEU' TO MSG-COD-SIST
               MOVE 'SXEGSIDMAS' TO MSG-COD-MENS
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MEN2.
       EXT-PUT-TAB.
           EXIT.

       SET-FRM-IFLD SECTION.
       INI-SET-FRM-IFLD.
           IF SCR-OFRM-SRV
                MOVE 1 TO FRM-IFLD
           ELSE
                ADD 1 TO FRM-IFLD.
       FIN-SET-FRM-IFLD.
           EXIT.
      *--------------------------------------------
       SCRL-TAB-SXE SECTION.
       INI-SCRL-TAB-SXE.
           MOVE SPACES TO MSG-COD-MENS.

           IF FRM-FFLD = FRM-FFLD-PF6
               PERFORM PUT-TAB-ASC
           ELSE
               PERFORM PUT-TAB-DSC.
           IF MSG-COD-MENS > SPACES
               MOVE 'DEU' TO MSG-COD-SIST
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MEN2.
       FIN-SCRL-TAB-SXE.
           EXIT.

       PUT-TAB-ASC SECTION.
       INI-PUT-TAB-ASC.
           MOVE SPACES TO MSG-COD-MENS.
           MULTIPLY SCR-NUM-PANT BY WSS-IMAX GIVING QUE-NITM.
           MOVE 0 TO FRM-IFLD.
       LUP-PUT-TAB-ASC.
           ADD 1              TO QUE-NITM.
           MOVE SXE-NOM-TSSXE TO QUE-COLA.
           MOVE SXE-LEN-TSSXE TO QUE-LITM.
           MOVE QUE-GET       TO QUE-CMND.
           PERFORM GNS-PRO-QUE.
           IF QUE-STAT NOT = QUE-STAT-OKS
               IF FRM-IFLD = 0
                   MOVE 'SXEMECNONXT' TO MSG-COD-MENS
                   GO TO FIN-PUT-TAB-ASC
               ELSE
                   GO TO FIN-PUT-TAB-ASC.
           ADD 1 TO FRM-IFLD.
           MOVE QUE-ITEM TO FRM-IND-NVEL-IDX(FRM-IFLD).
      *    PERFORM EDT-VAL-SXE.
           IF FRM-IFLD < WSS-IMAX
               GO TO LUP-PUT-TAB-ASC.
       FIN-PUT-TAB-ASC.
           IF FRM-IFLD > 0 AND FRM-IFLD < WSS-IMAX
               ADD 1 FRM-IFLD GIVING WSS-I
               PERFORM CLR-FRM VARYING WSS-I FROM WSS-I BY 1
                                 UNTIL WSS-I > WSS-IMAX.
           IF FRM-IFLD > 0
               ADD 1 TO SCR-NUM-PANT.
           IF FRM-IFLD = WSS-IMAX
               ADD 1              TO QUE-NITM
               MOVE SXE-NOM-TSSXE TO QUE-COLA
               MOVE SXE-LEN-TSSXE TO QUE-LITM
               MOVE QUE-GET       TO QUE-CMND
               PERFORM GNS-PRO-QUE
               IF QUE-STAT = QUE-STAT-OKS
                   MOVE 'SXEMECDMAS' TO MSG-COD-MENS.
       EXT-PUT-TAB-ASC.
           EXIT.

       PUT-TAB-DSC SECTION.
       INI-PUT-TAB-DSC.
           MOVE SPACES TO MSG-COD-MENS.
           IF SCR-NUM-PANT = 1
               MOVE 'SXEMECNOPRV' TO MSG-COD-MENS
               GO TO EXT-PUT-TAB-DSC.

           SUBTRACT 1 FROM SCR-NUM-PANT GIVING QUE-NITM.
           MULTIPLY QUE-NITM BY WSS-IMAX GIVING QUE-NITM.
           ADD 1 TO QUE-NITM.
           ADD 1 WSS-IMAX GIVING FRM-IFLD.
       LUP-PUT-TAB-DSC.
           SUBTRACT  1 FROM QUE-NITM.
           MOVE SXE-NOM-TSSXE TO QUE-COLA
           MOVE SXE-LEN-TSSXE TO QUE-LITM
           MOVE QUE-GET       TO QUE-CMND.
           PERFORM GNS-PRO-QUE.
           IF QUE-STAT NOT = QUE-STAT-OKS
               IF FRM-IFLD > WSS-IMAX
                   MOVE 'SXEMECNOPRV' TO MSG-COD-MENS
                   GO TO FIN-PUT-TAB-DSC
               ELSE
                   GO TO FIN-PUT-TAB-DSC.
           SUBTRACT 1 FROM FRM-IFLD.
           MOVE QUE-ITEM TO FRM-IND-NVEL-IDX(FRM-IFLD).
      *    PERFORM EDT-VAL-SXE.
           IF FRM-IFLD > 1
               GO TO LUP-PUT-TAB-DSC.
       FIN-PUT-TAB-DSC.

           IF FRM-IFLD NOT > WSS-IMAX AND FRM-IFLD > 1
               SUBTRACT 1 FROM FRM-IFLD GIVING WSS-I
               PERFORM CLR-FRM VARYING WSS-I FROM WSS-I BY -1
                                 UNTIL WSS-I < 1.

           IF FRM-IFLD NOT > WSS-IMAX
               SUBTRACT 1 FROM SCR-NUM-PANT
               MOVE 'SXEMECDMAS' TO MSG-COD-MENS.
       EXT-PUT-TAB-DSC.
           EXIT.


       PUT-TAB-SXE SECTION.
       INI-PUT-TAB-SXE.
      *ISP
           PERFORM CLR-WSS.

           IF FRM-IFLD NOT > WSS-IMAX
               MOVE FRM-IND-NVEL-IDX(FRM-IFLD) TO WSS-IND-NVEL-IDX.

           MOVE WSS-IND-NVEL(WSS-J) TO
                WSS-IND-NVEL-FRM IN WSS-VARI.
           MOVE WSS-IND-NVEL-ALF IN WSS-VARI TO NUM-NUME.
           MOVE NUM-ZERO-S TO NUM-ZERO.
           MOVE NUM-SGNO-N TO NUM-SGNO.
           MOVE 2 TO NUM-NENT.
           MOVE 0 TO NUM-NDCM.
           PERFORM VAL-NUM.
           MOVE NUM-NN9N TO WSS-IND-NVEL-FRM IN WSS-VARI.

           MOVE WSS-CIC-SGRP(WSS-J) TO DBC-CIC-ICLI IN DBC.
           MOVE FIO-GET-KEY    TO FIO-CMND.
           PERFORM SGC-FIO-DBC.
           MOVE DBC-NUM-ICLI IN DBC TO WSS-NUM-SCLI IN WSS-VARI
           MOVE DBC-VRF-ICLI IN DBC TO WSS-VRF-SCLI IN WSS-VARI
           MOVE DBC-IND-ICLI IN DBC TO WSS-IND-SCLI IN WSS-VARI
           MOVE DBC-GLS-ICLI IN DBC TO WSS-GLS-SCLI IN WSS-VARI
           MOVE DBC-CAI-ICLI IN DBC TO WSS-CAI-SCLI IN WSS-VARI.
           MOVE DBC-IIC-ICLI IN DBC TO WSS-IIC-SCLI IN WSS-VARI.
           MOVE DBC-GLS-NOMC IN DBC TO CPT-STRN
           PERFORM CPT-BLKS
           MOVE CPT-STRN            TO WSS-GLS-NOMS-SXE IN WSS-VARI.

           IF WSS-CIC-GRPO(WSS-J) NOT > SPACES
              MOVE WSS-CIC-SGRP(WSS-J) TO WSS-CIC-GRPO(WSS-J).

           IF WSS-J = 1
              IF WSS-CIC-GRPO(WSS-J) = 'MULTIPLES   '
                 MOVE 'XXXXXXXXXXXX' TO WSS-CIC-LCLG IN WSS-VARI
              ELSE
                 MOVE WSS-CIC-GRPO(WSS-J) TO WSS-CIC-LCLG IN WSS-VARI
           ELSE
           IF WSS-CIC-GRPO(WSS-J) NOT = WSS-CIC-LCLG IN WSS-VARI
              MOVE 'XXXXXXXXXXXX' TO WSS-CIC-LCLG IN WSS-VARI.

           IF WSS-CIC-GRPO(WSS-J) = 'MULTIPLES   '
              MOVE SPACES              TO WSS-CAI-GCLI-SXE IN WSS-VARI
              MOVE SPACES              TO WSS-IIC-GCLI-SXE IN WSS-VARI
              MOVE WSS-CIC-GRPO(WSS-J) TO
                   WSS-GLS-NOMG-SXE IN WSS-VARI
              MOVE ZEROES              TO WSS-NUM-GCLI IN WSS-VARI
              MOVE SPACES              TO WSS-VRF-GCLI-SXE IN WSS-VARI
              MOVE SPACES              TO WSS-IND-GCLI-SXE IN WSS-VARI
              MOVE SPACES              TO WSS-GLS-GCLI-SXE IN WSS-VARI
           ELSE
           IF WSS-CIC-GRPO(WSS-J) > SPACES
              MOVE WSS-CIC-GRPO(WSS-J) TO DBC-CIC-ICLI IN DBC
              MOVE FIO-GET-KEY    TO FIO-CMND
              PERFORM SGC-FIO-DBC
              MOVE DBC-CAI-ICLI IN DBC TO WSS-CAI-GCLI-SXE IN WSS-VARI
              MOVE DBC-IIC-ICLI IN DBC TO WSS-IIC-GCLI-SXE IN WSS-VARI
              MOVE DBC-GLS-NOMC IN DBC TO CPT-STRN
              PERFORM CPT-BLKS
              MOVE CPT-STRN            TO WSS-GLS-NOMG-SXE IN WSS-VARI
              MOVE DBC-NUM-ICLI IN DBC TO WSS-NUM-GCLI IN WSS-VARI
              MOVE DBC-VRF-ICLI IN DBC TO WSS-VRF-GCLI-SXE IN WSS-VARI
              MOVE DBC-IND-ICLI IN DBC TO WSS-IND-GCLI-SXE IN WSS-VARI
              MOVE DBC-GLS-ICLI IN DBC TO WSS-GLS-GCLI-SXE IN WSS-VARI
           ELSE
              MOVE DBC-CAI-ICLI IN DBC TO WSS-CAI-GCLI-SXE IN WSS-VARI
              MOVE DBC-IIC-ICLI IN DBC TO WSS-IIC-GCLI-SXE IN WSS-VARI
              MOVE DBC-GLS-NOMC IN DBC TO CPT-STRN
              PERFORM CPT-BLKS
              MOVE CPT-STRN            TO WSS-GLS-NOMG-SXE IN WSS-VARI
              MOVE DBC-NUM-ICLI IN DBC TO WSS-NUM-GCLI IN WSS-VARI
              MOVE DBC-VRF-ICLI IN DBC TO WSS-VRF-GCLI-SXE IN WSS-VARI
              MOVE DBC-IND-ICLI IN DBC TO WSS-IND-GCLI-SXE IN WSS-VARI
              MOVE DBC-GLS-ICLI IN DBC TO WSS-GLS-GCLI-SXE IN WSS-VARI.
           IF FRM-IFLD NOT > WSS-IMAX
               MOVE WSS-IND-NVEL-IDX TO FRM-IND-NVEL-IDX(FRM-IFLD).
       FIN-PUT-TAB-SXE.
           EXIT.

      *----------------------------------------------------
       PUT-SXE-QUE SECTION.
       INI-PUT-SXE-QUE.
           ADD 1 TO WSS-NITM.
           MOVE SXE-NOM-TSSXE    TO QUE-COLA.
           MOVE SXE-LEN-TSSXE    TO QUE-LITM.
           MOVE WSS-NITM         TO QUE-NITM.
           MOVE SPACES           TO QUE-ITEM.
           MOVE WSS-IND-NVEL-IDX TO QUE-ITEM.
           MOVE QUE-PUT  TO QUE-CMND.
           PERFORM GNS-PRO-QUE.
      *    IF QUE-STAT NOT = QUE-STAT-OKS
      *       DISPLAY 'ERROR AL GRABAR TS DATA'
      *    ELSE
      *       DISPLAY 'COLA DATA=' QUE-ITEM.
      *Esta cola se graba solo una vez al principio.
       FIN-PUT-SXE-QUE.
           EXIT.
      *----------------------------------------------------
       CLR-FRM SECTION.
       INI-CLR-FRM.
           MOVE SPACES TO FRM-GLS-NOMS IN SXE-FLD(WSS-I).
           MOVE ZEROES TO FRM-NUM-SCLI IN SXE-FLD(WSS-I).
           MOVE SPACES TO FRM-VRF-SCLI IN SXE-FLD(WSS-I).
           MOVE SPACES TO FRM-IND-SCLI IN SXE-FLD(WSS-I).
           MOVE SPACES TO FRM-GLS-SCLI IN SXE-FLD(WSS-I).
           MOVE SPACES TO FRM-CAI-SCLI IN SXE-FLD(WSS-I).
           MOVE SPACES TO FRM-IIC-SCLI IN SXE-FLD(WSS-I).
           MOVE SPACES TO FRM-CAI-GCLI IN SXE-FLD(WSS-I).
           MOVE SPACES TO FRM-IIC-GCLI IN SXE-FLD(WSS-I).
           MOVE SPACES TO FRM-GLS-NOMG IN SXE-FLD(WSS-I).
           MOVE ZEROES TO FRM-NUM-GCLI IN SXE-FLD(WSS-I).
           MOVE SPACES TO FRM-VRF-GCLI IN SXE-FLD(WSS-I).
           MOVE SPACES TO FRM-IND-GCLI IN SXE-FLD(WSS-I).
           MOVE SPACES TO FRM-GLS-GCLI IN SXE-FLD(WSS-I).
       FIN-CLR-FRM.
           EXIT.

       CLR-WSS SECTION.
       INI-CLR-WSS.

           MOVE LOW-VALUES TO WSS-IND-NVEL-IDX.
           MOVE SPACES TO WSS-IND-NVEL-IDX.
           MOVE SPACES TO WSS-GLS-NOMS-SXE IN WSS-VARI.
           MOVE ZEROES TO WSS-NUM-SCLI IN WSS-VARI.
           MOVE SPACES TO WSS-VRF-SCLI IN WSS-VARI.
           MOVE SPACES TO WSS-IND-SCLI IN WSS-VARI.
           MOVE SPACES TO WSS-GLS-SCLI IN WSS-VARI.
           MOVE SPACES TO WSS-CAI-SCLI IN WSS-VARI.
           MOVE SPACES TO WSS-IIC-SCLI IN WSS-VARI.
           MOVE SPACES TO WSS-CAI-GCLI-SXE IN WSS-VARI.
           MOVE SPACES TO WSS-IIC-GCLI-SXE IN WSS-VARI.
           MOVE SPACES TO WSS-GLS-NOMG-SXE IN WSS-VARI.
           MOVE ZEROES TO WSS-NUM-GCLI IN WSS-VARI.
           MOVE SPACES TO WSS-VRF-GCLI-SXE IN WSS-VARI.
           MOVE SPACES TO WSS-IND-GCLI-SXE IN WSS-VARI.
           MOVE SPACES TO WSS-GLS-GCLI-SXE IN WSS-VARI.
           IF SCR-OFRM-SRV
               PERFORM CLR-FRM-MTX.
       FIN-CLR-WSS.
           EXIT.

       CLR-FRM-MTX SECTION.
       INI-CLR-FRM-MTX.
           MOVE LOW-VALUES TO FRM-IND-NVEL-IDX(1).
           MOVE SPACES TO FRM-GLS-NOMS IN SXE-FLD(1).
           MOVE ZEROES TO FRM-NUM-SCLI IN SXE-FLD(1).
           MOVE SPACES TO FRM-VRF-SCLI IN SXE-FLD(1).
           MOVE SPACES TO FRM-IND-SCLI IN SXE-FLD(1).
           MOVE SPACES TO FRM-GLS-SCLI IN SXE-FLD(1).
           MOVE SPACES TO FRM-CAI-SCLI IN SXE-FLD(1).
           MOVE SPACES TO FRM-IIC-SCLI IN SXE-FLD(1).
           MOVE SPACES TO FRM-CAI-GCLI IN SXE-FLD(1).
           MOVE SPACES TO FRM-IIC-GCLI IN SXE-FLD(1).
           MOVE SPACES TO FRM-GLS-NOMG IN SXE-FLD(1).
           MOVE ZEROES TO FRM-NUM-GCLI IN SXE-FLD(1).
           MOVE SPACES TO FRM-VRF-GCLI IN SXE-FLD(1).
           MOVE SPACES TO FRM-IND-GCLI IN SXE-FLD(1).
           MOVE SPACES TO FRM-GLS-GCLI IN SXE-FLD(1).
       FIN-CLR-FRM-MTX.
           EXIT.
      *------------------------------------------------------
       COPY SGCBFDBC.
       COPY SGCBGCLI.
       COPY LDCBFCLF.
       COPY LDCBFRDC.

       COPY GNSBGCPT.
       COPY GNSBGSTR.
       COPY GNSBPFEC.
       COPY GNSBGFEC.
       COPY GNSBGHOY.
      *>>>> EOF
      *LFZ-INI 15-MAY-2007.
       OBT-NUM-NMAX SECTION.
       INI-OBT-NUM-NMAX.
           MOVE WSS-CMAX IN WSS-VARI TO WSS-NUM-NMAX IN WSS-VARI.
      * Obtiene el Maximo numero de niveles a desplegar en pantalla SXE
           MOVE 'DEU'          TO FIO-SIST.
           MOVE 'VSN'          TO TAB-COD-TTAB IN TAB.
           MOVE 'NMAXSXEMEC  ' TO TAB-COD-CTAB IN TAB.
           MOVE FIO-GET-KEY    TO FIO-CMND.
           PERFORM GNS-FIO-TAB.
           IF NOT (FIO-STAT-OKS AND TAB-MSC-STAT = 'S')
              GO TO FIN-OBT-NUM-NMAX.
           IF TAB-COD-DAT2(1) NOT NUMERIC
              GO TO FIN-OBT-NUM-NMAX.
           MOVE TAB-COD-DAT2(1) TO WSS-NUM-NMAX IN WSS-VARI.
           IF WSS-NUM-NMAX IN WSS-VARI > WSS-CMAX IN WSS-VARI
              MOVE WSS-CMAX IN WSS-VARI TO WSS-NUM-NMAX IN WSS-VARI.
       FIN-OBT-NUM-NMAX.
           EXIT.
      *LFZ-FIN 15-MAY-2007.

       CRG-CIC-NIVEL SECTION.
       INI-CRG-CIC-NIVEL.
           MOVE ZEROES TO WSS-ACT.
           MOVE 1      TO WSS-C.
           MOVE ZEROES TO WSS-F IN WSS-VARI.
           PERFORM CRG-CIC-NVLA.
           IF WSS-F IN WSS-VARI NOT > ZEROES
              MOVE 'REC    NEX' TO MSG-COD-MENS
              GO TO FIN-CRG-CIC-NIVEL.
       LUP-CRG-CIC-NIVEL.
           IF WSS-C IN WSS-VARI > WSS-CMAX IN WSS-VARI
              GO TO CON-CRG-CIC-NIVEL.

           ADD 1 TO WSS-ACT IN WSS-VARI.
           ADD 1 TO WSS-C   IN WSS-VARI.
           PERFORM CRG-CIC-NVLN.
           GO TO LUP-CRG-CIC-NIVEL.
       CON-CRG-CIC-NIVEL.
           PERFORM BUS-CIC-SGRP.
           IF WSS-I NOT > ZEROES
              MOVE 'REC   NEX' TO MSG-COD-MENS
              GO TO FIN-CRG-CIC-NIVEL.
       FIN-CRG-CIC-NIVEL.
           EXIT.

       CRG-CIC-NVLA SECTION.
       INI-CRG-CIC-NVLA.
           MOVE ZEROES                   TO WSS-F IN WSS-VARI.
      *PVG INI 17-AGO-2007 (NO APLICA CONSULTA INVERSA DE CLIENTE)
      *    PERFORM CRG-CIC-NVLA-IDC.
      *PVG FIN 17-AGO-2007
           MOVE WSS-CIC-ICLI-SXE IN WSS-VARI TO REC-CIC-ICLI IN REC.
           MOVE WSS-COD-RELI IN WSS-VARI TO REC-COD-TREC IN REC.
           MOVE SPACES                   TO REC-CIC-IREL IN REC.
           MOVE ZEROES                   TO REC-NUM-TREC IN REC.
           MOVE FIO-GET-NLS TO FIO-CMND.
       LUP-CRG-CIC-NVLA.
           PERFORM SGC-FIO-REC.
           MOVE FIO-STAT TO PGM-STAT-REC.
           IF NOT ( FIO-STAT-OKS AND
              REC-CIC-ICLI IN REC = WSS-CIC-ICLI-SXE IN WSS-VARI AND
              REC-COD-TREC IN REC = WSS-COD-RELI IN WSS-VARI )
              GO TO EXT-CRG-CIC-NVLA.

           PERFORM VAL-REC.
           IF WSS-IND-STAT IN WSS-VARI = 'N'
              GO TO NXT-CRG-CIC-NVLA.

      *CARGA CIC SUBGRUPO/GRUPO/EMPRESA
           ADD 1 TO WSS-F IN WSS-VARI.
           IF WSS-F IN WSS-VARI > WSS-FMAX IN WSS-VARI
              GO TO EXT-CRG-CIC-NVLA.

           MOVE WSS-C                    TO WSS-IND-NVLN(WSS-C,WSS-F).
           MOVE 'S'                      TO WSS-IND-TCLI(WSS-C,WSS-F).
           MOVE WSS-CIC-ICLI-SXE IN WSS-VARI TO
                WSS-CIC-PDRE(WSS-C,WSS-F).
           MOVE REC-CIC-IREL IN REC      TO WSS-CIC-NODO(WSS-C,WSS-F).
       NXT-CRG-CIC-NVLA.
           MOVE FIO-GET-NXT TO FIO-CMND.
           GO TO LUP-CRG-CIC-NVLA.
       EXT-CRG-CIC-NVLA.
           IF PGM-STAT-REC-OKS
              MOVE FIO-END-BRW TO FIO-CMND
              PERFORM SGC-FIO-REC.
       FIN-CRG-CIC-NVLA.
           EXIT.

       CRG-CIC-NVLN SECTION.
       INI-CRG-CIC-NVLN.
           MOVE ZEROES TO WSS-F IN WSS-VARI.
           MOVE ZEROES TO WSS-D IN WSS-VARI.
       LUP-CRG-CIC-NVLN.
           ADD 1 TO WSS-D IN WSS-VARI.
           IF WSS-CIC-NODO(WSS-ACT, WSS-D) NOT > SPACES
              GO TO FIN-CRG-CIC-NVLN.

      *LFZ-INI 15-MAY-2007
           IF WSS-CIC-ICLI-SXE = WSS-CIC-NODO(WSS-ACT, WSS-D)
           AND WSS-ACT > 1
              GO TO LUP-CRG-CIC-NVLN.
      *LFZ-FIN 15-MAY-2007

           MOVE WSS-CIC-NODO(WSS-ACT, WSS-D) TO
                WSS-CIC-ICLI-SXE IN WSS-VARI.
           MOVE WSS-CIC-ICLI-SXE IN WSS-VARI TO REC-CIC-ICLI IN REC.
           MOVE WSS-COD-RELI IN WSS-VARI TO REC-COD-TREC IN REC.
           MOVE SPACES                   TO REC-CIC-IREL IN REC.
           MOVE ZEROES                   TO REC-NUM-TREC IN REC.
           MOVE FIO-GET-NLS  TO FIO-CMND.
       LUP-CRG-CIC-ICLI.
           PERFORM SGC-FIO-REC.
           MOVE FIO-STAT TO PGM-STAT-REC.
           IF NOT ( FIO-STAT-OKS AND
              REC-CIC-ICLI IN REC = WSS-CIC-ICLI-SXE IN WSS-VARI AND
              REC-COD-TREC IN REC = WSS-COD-RELI IN WSS-VARI )
              GO TO EXT-CRG-CIC-ICLI.

           PERFORM VAL-REC.
           IF WSS-IND-STAT IN WSS-VARI = 'N'
              GO TO NXT-CRG-CIC-ICLI.

           ADD 1 TO WSS-F IN WSS-VARI.
           IF WSS-F IN WSS-VARI > WSS-FMAX IN WSS-VARI
              GO TO EXT-CRG-CIC-NVLN.

           MOVE WSS-C                    TO WSS-IND-NVLN(WSS-C,WSS-F).
           MOVE 'G'                      TO WSS-IND-TCLI(WSS-C,WSS-F).
           MOVE WSS-CIC-ICLI-SXE      TO WSS-CIC-PDRE(WSS-C,WSS-F).
           MOVE REC-CIC-IREL IN REC      TO WSS-CIC-NODO(WSS-C,WSS-F).
           MOVE 'S'                      TO WSS-IND-TCLI(WSS-ACT,WSS-D).
       NXT-CRG-CIC-ICLI.
           MOVE FIO-GET-NXT TO FIO-CMND.
           GO TO LUP-CRG-CIC-ICLI.
       EXT-CRG-CIC-ICLI.
           IF PGM-STAT-REC-OKS
              MOVE FIO-END-BRW TO FIO-CMND
              PERFORM SGC-FIO-REC.
       NXT-CRG-CIC-NVLN.
           GO TO LUP-CRG-CIC-NVLN.
       EXT-CRG-CIC-NVLN.
           IF PGM-STAT-REC-OKS
              MOVE FIO-END-BRW TO FIO-CMND
              PERFORM SGC-FIO-REC.
       FIN-CRG-CIC-NVLN.
           EXIT.

      *PVG INI 25-MAY-2004
       CRG-CIC-NVLA-IDC SECTION.
       INI-CRG-CIC-NVLA-IDC.
           PERFORM VAL-CLF-IDC.
           IF WSS-IND-STAT IN WSS-VARI = 'N'
              GO TO FIN-CRG-CIC-NVLA-IDC.

           MOVE WSS-CIC-ICLI-SXE IN WSS-VARI TO REC-CIC-ICLI IN REC.
           MOVE WSS-COD-TREC IN WSS-VARI     TO REC-COD-TREC IN REC.
           MOVE SPACES                       TO REC-CIC-IREL IN REC.
           MOVE ZEROES                       TO REC-NUM-TREC IN REC.
           MOVE FIO-GET-NLS TO FIO-CMND.
       LUP-CRG-CIC-NVLA-IDC.
           PERFORM SGC-FIO-REC.
           MOVE FIO-STAT TO PGM-STAT-REC.
           IF NOT ( FIO-STAT-OKS AND
              REC-CIC-ICLI IN REC = WSS-CIC-ICLI-SXE IN WSS-VARI AND
              REC-COD-TREC IN REC = WSS-COD-TREC IN WSS-VARI )
              GO TO EXT-CRG-CIC-NVLA-IDC.

           PERFORM VAL-REC.
           IF WSS-IND-STAT IN WSS-VARI = 'N'
              GO TO NXT-CRG-CIC-NVLA-IDC.

           ADD 1 TO WSS-F IN WSS-VARI.
           IF WSS-F IN WSS-VARI > WSS-FMAX IN WSS-VARI
              GO TO EXT-CRG-CIC-NVLA-IDC.
           MOVE WSS-C             TO WSS-IND-NVLN(WSS-C,WSS-F).
           MOVE 'S'               TO WSS-IND-TCLI(WSS-C,WSS-F).
           MOVE WSS-CIC-ICLI-SXE  TO WSS-CIC-PDRE(WSS-C,WSS-F).
           MOVE WSS-CIC-ICLI-SXE  TO WSS-CIC-NODO(WSS-C,WSS-F).
           GO TO EXT-CRG-CIC-NVLA-IDC.
       NXT-CRG-CIC-NVLA-IDC.
           MOVE FIO-GET-NXT TO FIO-CMND.
           GO TO LUP-CRG-CIC-NVLA-IDC.
       EXT-CRG-CIC-NVLA-IDC.
           IF PGM-STAT-REC-OKS
              MOVE FIO-END-BRW TO FIO-CMND
              PERFORM SGC-FIO-REC.
       FIN-CRG-CIC-NVLA-IDC.
           EXIT.
      *PVG FIN 25-MAY-2004

       BUS-CIC-SGRP SECTION.
       INI-BUS-CIC-SGRP.
           MOVE WSS-IND-NVEL-SXE IN WSS-VARI TO WSS-C.
           MOVE ZEROES TO WSS-I.
       LUP-BUS-CIC-NVLN.
           IF WSS-C > WSS-CMAX
      *LFZ-INI 15-MAY-2007
           OR WSS-C IN WSS-VARI > WSS-NUM-NMAX IN WSS-VARI
      *LFZ-FIN 15-MAY-2007
              GO TO FIN-BUS-CIC-NVLN.
           MOVE ZEROES TO WSS-F.
           MOVE WSS-C  TO WSS-ACT.
       LUP-BUS-CIC-SGRP.
           ADD 1 TO WSS-F.
           IF WSS-CIC-NODO(WSS-C, WSS-F) NOT > SPACES
              GO TO FIN-BUS-CIC-SGRP.

           IF WSS-IND-TCLI(WSS-C,WSS-F) = 'G'
      *LFZ-INI 15-MAY-2007
           OR WSS-CIC-NODO(WSS-C,WSS-F) = WSS-CIC-PDRE(WSS-C,WSS-F)
      *LFZ-FIN 15-MAY-2007
              GO TO NXT-BUS-CIC-SGRP.

           ADD 1 TO WSS-I.
           IF WSS-I > WSS-FMAX
              GO TO FIN-BUS-CIC-NVLN.

           MOVE WSS-C                     TO WSS-IND-NVEL(WSS-I).
           MOVE WSS-CIC-NODO(WSS-C,WSS-F) TO WSS-CIC-SGRP(WSS-I).
           PERFORM BUS-GRPO.
           IF WSS-NG = ZEROES AND WSS-NS = ZEROES
              MOVE SPACES TO WSS-CIC-GRPO(WSS-I)
              GO TO NXT-BUS-CIC-SGRP.
           IF WSS-NG = 1
              IF WSS-NS > ZEROES
                 MOVE 'MULTIPLES   ' TO WSS-CIC-GRPO(WSS-I)
              ELSE
                 NEXT SENTENCE
           ELSE
           IF WSS-NG > 1
                 MOVE 'MULTIPLES   ' TO WSS-CIC-GRPO(WSS-I)
           ELSE
           IF WSS-NS = 1
              PERFORM BUS-GRPO-SUB
              MOVE WSS-CIC-TEMP      TO WSS-CIC-GRPO(WSS-I)
           ELSE
              MOVE 'MULTIPLES   '    TO WSS-CIC-GRPO(WSS-I).
       NXT-BUS-CIC-SGRP.
           GO TO LUP-BUS-CIC-SGRP.
       FIN-BUS-CIC-SGRP.
           ADD 1 TO WSS-C.
           GO TO LUP-BUS-CIC-NVLN.
       FIN-BUS-CIC-NVLN.
           EXIT.

        BUS-GRPO SECTION.
        INI-BUS-GRPO.
            MOVE ZEROES TO WSS-NG,
                           WSS-NS,
                           WSS-D.
            MOVE WSS-C TO WSS-ACT.
            ADD 1      TO WSS-ACT.
        LUP-BUS-GRPO.
            ADD 1 TO WSS-D.
            IF WSS-ACT > WSS-CMAX OR
               WSS-D   > WSS-FMAX OR
               WSS-CIC-NODO(WSS-ACT,WSS-D) NOT > SPACES
               GO TO FIN-BUS-GRPO.

            IF WSS-CIC-PDRE(WSS-ACT,WSS-D) = WSS-CIC-NODO(WSS-C,WSS-F)
               MOVE WSS-CIC-NODO(WSS-ACT,WSS-D) TO
                    WSS-CIC-GRPO(WSS-I)
               IF WSS-IND-TCLI(WSS-ACT,WSS-D) = 'G'
                  ADD 1 TO WSS-NG
               ELSE
               IF WSS-IND-TCLI(WSS-ACT,WSS-D) = 'S'
                  ADD 1 TO WSS-NS.
        NXT-BUS-GRPO.
            GO TO LUP-BUS-GRPO.
        FIN-BUS-GRPO.
            EXIT.

        BUS-GRPO-SUB SECTION.
        INI-BUS-GRPO-SUB.
            MOVE SPACES TO WSS-CIC-TEMP.
            MOVE ZEROES TO WSS-NG,
                           WSS-NS,
                           WSS-D.
            ADD 1      TO WSS-ACT.
        LUP-BUS-GRPO-SUB.
            ADD 1 TO WSS-D.
            IF WSS-ACT > WSS-CMAX OR
               WSS-D   > WSS-FMAX OR
               WSS-CIC-NODO(WSS-ACT,WSS-D) NOT > SPACES
               GO TO FIN-BUS-GRPO-SUB.

            IF WSS-CIC-PDRE(WSS-ACT,WSS-D) = WSS-CIC-GRPO(WSS-I)
               IF WSS-IND-TCLI(WSS-ACT,WSS-D) = 'G'
                  ADD 1 TO WSS-NG
                  IF WSS-NG = 1
                     MOVE WSS-CIC-NODO(WSS-ACT,WSS-D) TO WSS-CIC-TEMP
                  ELSE
                     MOVE 'MULTIPLES   ' TO WSS-CIC-TEMP
                     GO TO FIN-BUS-GRPO-SUB
               ELSE
               IF WSS-IND-TCLI(WSS-ACT,WSS-D) = 'S'
      *LFZ-INI 15-MAY-2007
                COMPUTE WSS-SIG-NIVEL = WSS-ACT + 1
                IF WSS-CIC-NODO(WSS-SIG-NIVEL,WSS-NUM-UNO) > SPACES
                   MOVE WSS-CIC-NODO(WSS-ACT,WSS-D) TO
                        WSS-CIC-GRPO(WSS-I)
                   MOVE ZEROS TO WSS-D
                   ADD  1     TO WSS-ACT
                ELSE
      *LFZ-FIN 15-MAY-2007
                  MOVE 'MULTIPLES   ' TO WSS-CIC-TEMP
                  GO TO FIN-BUS-GRPO-SUB.
        NXT-BUS-GRPO-SUB.
            GO TO LUP-BUS-GRPO-SUB.
        FIN-BUS-GRPO-SUB.
            EXIT.

       VAL-REC SECTION.
       INI-VAL-REC.
           MOVE 'N' TO WSS-IND-STAT IN WSS-VARI.
           IF ( REC-IND-VIGE IN REC = 'S' AND
               (REC-FEC-FINI IN REC < HOY-FHOY OR
                REC-FEC-FINI IN REC = HOY-FHOY OR
                REC-FEC-FINI IN REC NOT > ZEROES ) AND
               (REC-FEC-FTER IN REC > HOY-FHOY OR
                REC-FEC-FTER IN REC = HOY-FHOY OR
                REC-FEC-FTER IN REC NOT > ZEROES ) )
                MOVE 'S' TO WSS-IND-STAT IN WSS-VARI.
       FIN-VAL-REC.
           EXIT.

       VAL-CLF-IDC SECTION.
       INI-VAL-CLF-IDC.
           MOVE 'N' TO WSS-IND-STAT IN WSS-VARI.
           MOVE WSS-CIC-ICLI-SXE IN WSS-VARI TO RDC-CIC-ICLI IN RDC.
           MOVE SPACES              TO RDC-CIC-ICLF IN RDC.
           MOVE FIO-GET-NLS TO FIO-CMND.
           PERFORM LDC-FIO-RDC.
           MOVE FIO-STAT TO PGM-STAT-RDC.
           IF NOT ( FIO-STAT-OKS AND
                    WSS-CIC-ICLI-SXE IN WSS-VARI = RDC-CIC-ICLI IN RDC)
               MOVE 'N' TO WSS-IND-STAT IN WSS-VARI
               GO TO BRW-VAL-CLF-IDC.
       LUP-VAL-CLF-IDC.
           MOVE RDC-CIC-ICLF IN RDC TO CLF-CIC-ICLF IN CLF.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM LDC-FIO-CLF.
           IF NOT FIO-STAT-OKS
               GO TO NXT-VAL-CLF-IDC.

      *CLF ACTIVADA-VIGENTE-CODIGO=CLF
           IF (CLF-MSC-STAT IN CLF = 'A' AND
              (CLF-FEC-FCIE IN CLF < HOY-FHOY OR
               CLF-FEC-FCIE IN CLF = HOY-FHOY OR
               CLF-FEC-FCIE IN CLF NOT > ZEROES ) AND
               CLF-COD-TOCF = 'CLF')
               MOVE 'S' TO WSS-IND-STAT IN WSS-VARI
               GO TO BRW-VAL-CLF-IDC.

       NXT-VAL-CLF-IDC.
           MOVE FIO-GET-NXT TO FIO-CMND.
           PERFORM LDC-FIO-RDC.
           MOVE FIO-STAT TO PGM-STAT-RDC.
           IF FIO-STAT-OKS AND
              WSS-CIC-ICLI-SXE IN WSS-VARI = RDC-CIC-ICLI IN RDC
              GO TO LUP-VAL-CLF-IDC.
       BRW-VAL-CLF-IDC.
           IF PGM-STAT-RDC-OKS
               MOVE FIO-END-BRW TO FIO-CMND
               PERFORM LDC-FIO-RDC.
       FIN-VAL-CLF-IDC.
           EXIT.
      *>>>>
