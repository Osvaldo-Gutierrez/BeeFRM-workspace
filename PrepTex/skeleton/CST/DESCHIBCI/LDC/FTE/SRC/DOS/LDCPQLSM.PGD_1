       IDENTIFICATION DIVISION.
      *========================
       PROGRAM-ID.   LDCPQLSM.
       AUTHOR.       BEE.
       DATE-WRITTEN. 28-Mar-19 07:07 PM.

      * NOMBRE PROGRAMA                   LDCPQLSM
      * VERSION PGM                       3.1
      * VERSION SKL                       07.08.21
      * OPCION                            CON
      * ARCHIVO BASE                      COLOPC
      * PANTALLA                          LDCLSM
      * INP/OUT                           DATACOM
      * TAMANO COMMAREA                   250


       ENVIRONMENT DIVISION.
      *=====================
       CONFIGURATION SECTION.
      *----------------------
       SPECIAL-NAMES.
               DECIMAL-POINT IS COMMA.
       DATA DIVISION.
      *==============

       WORKING-STORAGE SECTION.
      *------------------------
      * COPY GNSWGSCR.
       COPY GNSWGCVT.
       77  WSS-TAG-LDCPQLSM-INI PIC X(125) VALUE                        
           '<IDNPGM NOM=$LDCPQLSM$ SKL=$07.08.21$ VSN=${vsnpq}$        
      -    'GEN=$28-Mar-19 07:07 PM$ FNC=${fncpq}$/>'.    

       COPY GNSWCSCR.
      *PTC-INI
      *PTC-SUB
      * COPY GNSWVSCR.
       COPY GNSWV3CR.
      *PTC-FIN
      *<<<< FIN_SCR_VARI
           03 SCR-DISP-RED REDEFINES
              SCR-DISP.
              05 SCR-IMAX   COMP     PIC S9(04).
              05 SCR-I      COMP     PIC S9(04).
              05 SCR-FRM-GLS-DISP    PIC X(15).

      *>>>> FIN_SCR_VARI
       COPY LDCWILSM.

       COPY COLBROPC.


       COPY GNSWVIDD.
       COPY GNSWGRQA.
       COPY GNSWGUIB.
       COPY GNSWGELS.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-OPC-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-TAB-REQA==.
       COPY GNSBRTAB.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-MSC-REQA==.
       COPY GNSBRMSC.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-MSG-REQA==.
       COPY GNSBRMSG.
       COPY GNSWCFIO.
       COPY GNSWVFIO.
      *PTC-INI
      *PTC-SUB
      * ISP  10-MAY-2001 13:46:35 
      * COPY GNSWGFRM.
       COPY GNSWG3CF.
       COPY GNSWGTSK.
       COPY GNSWGQUE.
      *PTC-FIN
       COPY GNSWVNUM.
       COPY GNSWCNUM.
       COPY GNSWCVRF.
       COPY GNSWVVRF.
       COPY GNSWGIDC.
       COPY GNSWGSYS.

      *<<<< WSS
       COPY GNSWGHOY.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-RDC-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-DBC-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-CLF-REQA==.
       COPY SGCBRDBC.
       COPY COLBRRDC.
       COPY LDCBRCLF. 
       COPY GNSWGCPT.
       COPY LDCWGCCU.
       COPY LDCWGCEG.
       COPY LDCWGMSG.
       COPY LDCWXLSM.
       COPY SGCBRDCP.
       COPY SGCBRDCE.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-DCE-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-DCP-REQA==.
      * CLAVE EMULACION
       01  WSS-KEY-EMUL.
      * IDENTIFICACION DE OPERACION
           03  WSS-KEY-EM01                        PIC 9(08).
      * CORRELATIVO ERROR
           03  WSS-KEY-EM02                        PIC 9(02).
      * CORRELATIVO DENTRO DEL ERROR ( LINEA OCURRENCIA )
           03  WSS-KEY-EM03                        PIC 9(02).

      * CLAVE EMULACION
       01  CMP-WSS-KEY-EMUL.
      * IDENTIFICACION DE OPERACION
           03  CMP-WSS-KEY-EM01                        PIC 9(08).
      * CORRELATIVO ERROR
           03  CMP-WSS-KEY-EM02                        PIC 9(02).
      * CORRELATIVO DENTRO DEL ERROR ( LINEA OCURRENCIA )
           03  CMP-WSS-KEY-EM03                        PIC 9(02).


       77  WSS-NUM-INDX    VALUE  ZEROES           PIC 9(03).

       01  WSS-TAB.
           03 WSS-TAB-GLS-DESC                     PIC X(40).
           03 WSS-TAB-GLS-DATA                     PIC X(60).

       01  WSS-LOG-QUE  VALUE 'N'                  PIC X(01).
       01  WSS-CTE-SI   VALUE 'S'                  PIC X(01).

       01  WSS-TMP.
           03 WSS-CIC-IOPC                         PIC X(12).
           03 WSS-GLS-DMSG                         PIC X(61).

      *>>>> WSS
       01  PGM-VARI.
           03 PGM-ICLR                  VALUE ' '       PIC X(01).
           03 PGM-LIMPIAR-TODO          VALUE ' '       PIC X(01).
           03 PGM-LIMPIAR-LLAVES        VALUE 'K'       PIC X(01).
           03 PGM-LIMPIAR-CAMPOS        VALUE 'F'       PIC X(01).
           03 PGM-NO-LIMPIAR-NADA       VALUE 'N'       PIC X(01).
           03 PGM-PROG                                  PIC X(08).
           03 PGM-NTRN                                  PIC X(04).
           03 PGM-STAT.
              05 PGM-STAT-DBC.
                 88 PGM-STAT-DBC-NUL    VALUE '  '.
                 07 PGM-STT1-DBC        VALUE '2' PIC X(01).
                    88 PGM-STAT-DBC-OKS VALUE '0'.
                 07 PGM-STT2-DBC        VALUE '3' PIC X(01).
              05 PGM-STAT-OPC.
                 88 PGM-STAT-OPC-NUL    VALUE '  '.
                 07 PGM-STT1-OPC        VALUE '2' PIC X(01).
                    88 PGM-STAT-OPC-OKS VALUE '0'.
                 07 PGM-STT2-OPC        VALUE '3' PIC X(01).
           03 PGM-SRNF                  VALUE '23'      PIC X(02).
           03 PGM-SOKS                  VALUE '00'      PIC X(02).
           03 PGM-SNUL                  VALUE '  '      PIC X(02).
           03 PGM-SUAR                  VALUE SPACES    PIC X(15).

       LINKAGE SECTION.
      *----------------
       01  DFHCOMMAREA.
           02 FILLER                    PIC X(283).
       COPY GNSLGFIO.

       PROCEDURE DIVISION.
      *===================

       MAIN SECTION.
       INI-MAIN.
           PERFORM INI.
       LUP-MAIN.
           IF SCR-INST = SCR-INST-HCM
                 PERFORM SCR-COM.
           IF SCR-CCPP = 'ACC'
                 PERFORM SCR-ACC
           ELSE
                 MOVE SCR-INST-HCM TO SCR-INST.
           GO TO LUP-MAIN.
       FIN-MAIN.
           EXIT.

       INI SECTION.
       INI-INI.
       COPY GNSBGEIB.
       COPY GNSBGEDB.
           MOVE LOW-VALUES TO LSM-FLD.
           MOVE LOW-VALUES TO LSM-EDT.
           PERFORM GNS-PRO-RCK.
           PERFORM GNS-BUS-VCA.
           MOVE +283 TO SCR-TCMA.
           PERFORM GNS-HDL-SYS.
           PERFORM GNS-HDL-FRM.
           MOVE 'LDCPQLSM' TO FIO-PROG.
           PERFORM GNS-BUS-IDD.
      *PTC-INI
           PERFORM GNS-ERR-QUE.
           PERFORM GET-TSK-TERM.
      *PTC-FIN
      *<<<< INI_FIO

           IF SCR-OFRM-SRV
              MOVE TSK-TERM-ALF TO LSM-COD-TERM
              MOVE TSK-TERM-ALF TO LSM-COD-TERM-MAS
           ELSE
              MOVE EIBTRMID     TO LSM-COD-TERM
              MOVE EIBTRMID     TO LSM-COD-TERM-MAS.

           MOVE TSK-TERM-ALF TO RUTMEN-COD-TERM.


      *>>>> INI_FIO
       FIN-INI.
           EXIT.

       COPY GNSBHSYS.
       COPY GNSBHFRM.
       COPY GNSBPRCK.
       COPY GNSBBVCA.
       COPY GNSBBIDD.

       SCR-COM SECTION.
       INI-SCR-COM.
           MOVE FRM-CPSF-AEY TO FRM-CPIM-AEY.
           PERFORM PRO-ALL.
           PERFORM SCR-CLRA-LSM.
           PERFORM EDT-KEY-LSM.
           PERFORM EDT-FLD-LSM.
           PERFORM SCR-PUTA.
           MOVE SCR-INST-HCM TO SCR-INST.
           MOVE SCR-CMNP     TO SYS-PROG.
           MOVE SCR-VARI     TO SYS-CMMA.
           MOVE SCR-TCMA     TO SYS-TCMA.
           MOVE SYS-XCTL     TO SYS-CMND.
      *PTC-INI
           IF NOT SCR-OFRM-SRV
      *PTC-FIN
           PERFORM GNS-PRO-SYS.
       XCT-ERR.
           MOVE 'XCTERR    ' TO MSG-COD-MENS.
           MOVE 'GNS'        TO MSG-COD-SIST.
           PERFORM GET-MSG.
           MOVE MSG-GLS-DESC TO SYS-MEN1.
           MOVE SYS-PROG     TO SYS-MEN2.
           MOVE SYS-ABOR     TO SYS-CMND.
      *PTC-INI
           IF NOT SCR-OFRM-SRV
      *PTC-FIN
           PERFORM GNS-PRO-SYS.
       COPY GNSBGGBK.
       FIN-SCR-COM.
           EXIT.



       SCR-ACC SECTION.
       INI-SCR-ACC.
           IF SCR-INST = SCR-INST-HKY
               PERFORM HBL-KEY
               MOVE SCR-INST-GKY TO SCR-INST
               PERFORM SCR-DMSG
           ELSE
           IF SCR-INST = SCR-INST-GKY
                PERFORM SCR-KEY
                IF SCR-STAT NOT = SCR-STAT-ABT
                        PERFORM SCR-TRL
                ELSE
                        PERFORM DESSCRTRL
                        GO TO FIN-SCR-ACC
           ELSE
           IF SCR-INST = SCR-INST-GAB
                PERFORM GET-CON
           ELSE
           IF SCR-INST = SCR-INST-BRW
               MOVE SCR-FFLD TO FRM-FFLD
               PERFORM BRW-SCR-ACC.
           PERFORM DESSCRTRL.
      *<<<< PFS_SCR_ACC
           IF FRM-FFLD = FRM-FFLD-PF8 OR FRM-FFLD-PF7
               NEXT SENTENCE.
      *>>>>
           MOVE SPACES TO FRM-MENS.
           PERFORM SCR-MSSG.
       FIN-SCR-ACC.
           EXIT.

       BRW-SCR-ACC SECTION.
       INI-BRW-SCR-ACC.
       FIN-BRW-SCR-ACC.
           EXIT.




       SCR-DMSG SECTION.
       INI-SCR-DMSG.
      *<<<< INI_SCR_DMSG
      * Con este codigo logramos que una vez terminada la consulta
      * las claves no se borren de la pantalla
           IF SCR-CMND = 'CON' AND
              SCR-INST = SCR-INST-GKY AND
              FRM-FFLD NOT = FRM-FFLD-RET
                  MOVE PGM-NO-LIMPIAR-NADA TO PGM-ICLR.

      *>>>> INI_SCR_DMSG
           IF PGM-ICLR = PGM-NO-LIMPIAR-NADA
               NEXT SENTENCE
           ELSE
           IF PGM-ICLR = PGM-LIMPIAR-TODO
               PERFORM SCR-CLRA-LSM
               PERFORM EDT-KEY-LSM
               PERFORM EDT-FLD-LSM
           ELSE
           IF PGM-ICLR = PGM-LIMPIAR-LLAVES
               PERFORM CLR-KEY-LSM
               PERFORM EDT-KEY-LSM
           ELSE
               PERFORM CLR-FLD-LSM
               PERFORM EDT-FLD-LSM.
           PERFORM SCR-PUTA.
           PERFORM SCR-EXIT.
       FIN-SCR-DMSG.
           EXIT.

       SCR-KEY SECTION.
       INI-SCR-KEY.
           PERFORM SCR-RST.
           PERFORM GET-KEY.
           IF FRM-STAT-ABT
                   MOVE SPACES TO FRM-MENS
                   PERFORM SCR-MSSG
                   GO TO FIN-SCR-KEY.
       FND-SCR-KEY.
           MOVE SPACES TO FRM-MENS.
           PERFORM FND-KEY.
           IF FIO-STAT-OKS
               PERFORM PUT-SCR
               MOVE PGM-LIMPIAR-TODO TO PGM-ICLR
               GO TO FIN-SCR-KEY.
      *JSS ELSE
      *        PERFORM CLR-FLD-LSM.
       ERR-SCR-KEY.
      *PTC-INI
           MOVE 'S' TO SCR-IERR.
      *PTC-FIN
           MOVE PGM-LIMPIAR-CAMPOS TO PGM-ICLR.
           IF FRM-MENS NOT > SPACES
               IF FIO-STAT-EOF
                   MOVE 'REGEOF    ' TO MSG-COD-MENS
                   MOVE 'GNS' TO MSG-COD-SIST
                   PERFORM GET-MSG
                   MOVE MSG-GLS-DESC TO FRM-MENS
               ELSE
               IF FIO-STAT = FIO-STAT-NEX
                   MOVE 'REGNEX    ' TO MSG-COD-MENS
                   MOVE 'GNS' TO MSG-COD-SIST
                   PERFORM GET-MSG
                   MOVE MSG-GLS-DESC TO FRM-MENS
               ELSE
                   MOVE 'FIOSTAT' TO MSG-COD-TMSG
                   MOVE FIO-STAT  TO MSG-COD-CMSG
                   MOVE 'GNS'     TO MSG-COD-SIST
                   PERFORM GET-MSG
                   MOVE MSG-GLS-DESC TO FRM-MENS.
           PERFORM SCR-MSSG.
           MOVE SCR-STAT-ABT TO SCR-STAT.
       FIN-SCR-KEY.
           EXIT.

       SCR-RST SECTION.
       INI-SCR-RST.
           MOVE SPACES       TO PGM-ICLR.
           MOVE SPACES       TO SCR-ACTU.
           MOVE SCR-STPP     TO SCR-STAT.
           MOVE SCR-MFLD-NOT TO SCR-MFLD.
           MOVE LOW-VALUES   TO LSM-FLD.
           MOVE LOW-VALUES TO LSM-EDT.
       FIN-SCR-RST.
           EXIT.

       GET-KEY SECTION.
       INI-GET-KEY.
           PERFORM SCR-GKEY.
           IF FRM-STAT-ABT
               MOVE SCR-STAT-ABT TO SCR-STAT.
       FIN-GET-KEY.
           EXIT.

       GET-IKY SECTION.
       INI-GET-IKY.
           PERFORM SCR-GIKY.
           IF FRM-STAT-ABT
               MOVE SCR-STAT-ABT TO SCR-STAT.
       FIN-GET-IKY.
           EXIT.

       FND-KEY SECTION.
       INI-FND-KEY.
      *<<<< INI_FND_KEY

           MOVE SPACES TO FRM-MEN1.
           IF FRM-FFLD = FRM-FFLD-PF7
               MOVE PGM-SNUL TO PGM-STAT-DBC
               SUBTRACT 1 FROM SCR-I GIVING SCR-I
               IF SCR-I NOT > ZEROES
                   MOVE 'LSM RROPRV' TO MSG-COD-MENS
                   GO TO ERR-FND-KEY
               ELSE
                   GO TO CARGA-LSM
           ELSE
           IF FRM-FFLD = FRM-FFLD-PF8
               MOVE PGM-SNUL TO PGM-STAT-DBC
               ADD 1 SCR-I GIVING SCR-I
               IF SCR-I > SCR-IMAX
                   MOVE 'LSM RRONXT' TO MSG-COD-MENS
                   GO TO ERR-FND-KEY
               ELSE
                   GO TO CARGA-LSM.

           GO TO CON-FND-KEY.

      *>>>> INI_FND_KEY
           PERFORM KEY-ALL-LSM.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM COL-FIO-OPC.
           IF FIO-STAT-OKS
               MOVE OPC-STP-ITRN IN OPC TO SCR-UMOD.
           MOVE FIO-STAT TO PGM-STAT-OPC.
      *>>>> FIN_FND_KEY

       CON-FND-KEY.
      *
           MOVE ZEROES TO SCR-IMAX.
           MOVE 1      TO SCR-I.

           MOVE '00' TO FIO-STAT.

           PERFORM OBT-DAT-TS.
           IF MSG-COD-MENS > SPACES
              GO TO FIN-FND-KEY.

           MOVE 1 TO SCR-I.

       CARGA-LSM.

           MOVE SPACES TO MSG-COD-MENS.

           IF NOT SCR-OFRM-SRV
              PERFORM PUT-TAB-LSM.

           MOVE '00' TO FIO-STAT.
           GO TO FIN-FND-KEY.
      *
       ERR-FND-KEY.
           MOVE SCR-STAT-CON TO SCR-STAT.

           MOVE 'COL' TO MSG-COD-SIST.
           PERFORM GET-MSG.
           MOVE MSG-GLS-DESC TO FRM-MEN1.
           MOVE '00' TO FIO-STAT.
           GO TO FIN-FND-KEY.

      *>>>> FIN_FND_KEY
       FIN-FND-KEY.
           IF FIO-STAT = FIO-STAT-NEX
               MOVE 'S' TO SCR-IERR.
       EXT-FND-KEY.
           EXIT.
 
       PUT-SCR SECTION.
       INI-PUT-SCR.
           IF PGM-STAT-OPC-OKS
               MOVE OPC-STP-ITRN IN OPC TO SCR-UMOD.
           PERFORM PUT-ALL-LSM.
       FIN-PUT-SCR.
           EXIT.

       STP-EXIT SECTION.
       INI-STP-EXIT.
           MOVE SCR-PROG TO PGM-PROG.
           MOVE SCR-NTRN TO PGM-NTRN.

           MOVE SCR-PROV TO SCR-PROG.
           MOVE SCR-NTRV TO SCR-NTRN.

           MOVE PGM-PROG TO SCR-PROV
           MOVE PGM-NTRN TO SCR-NTRV.
       FIN-STP-EXIT.
           EXIT.

       SCR-EXIT SECTION.
       INI-SCR-EXIT.
           MOVE 'P'      TO SCR-ICMN.
           MOVE SCR-NTRN TO SYS-NTRN.
           MOVE SCR-VARI TO SYS-CMMA.
           MOVE SCR-TCMA TO SYS-TCMA.
           MOVE SYS-RTRN TO SYS-CMND.
      *PTC-INI
           IF NOT SCR-OFRM-SRV
      *PTC-FIN
           PERFORM GNS-PRO-SYS.
       FIN-SCR-EXIT.
           EXIT.

       SCR-PUTA SECTION.
       INI-SCR-PUTA.
      *PTC-INI
           IF FRM-SUAR EQUAL FRM-SUAR-MAL OR FRM-SUAR-CLR
               MOVE 'S' TO SCR-IERR.
      *PTC-FIN
           MOVE SCR-NMAP TO FRM-NAME.
           MOVE SCR-NLIB TO FRM-NLIB.
           MOVE LSM-FLD TO FRM-DFLD.
           MOVE FRM-PUT-ALL TO FRM-CMND.
           PERFORM GNS-PRO-FRM.
       FIN-SCR-PUTA.
           EXIT.

       SCR-MSSG SECTION.
       INI-SCR-MSSG.
           IF FRM-MEN1 NOT > SPACES
               MOVE SPACES TO FRM-MEN1.
           IF FRM-MEN2 NOT > SPACES
               MOVE SPACES TO FRM-MEN2.
           MOVE FRM-MENS TO LSM-GLS-MENS.
       FIN-SCR-MSSG.
           EXIT.

       SCR-GKEY SECTION.
       INI-SCR-GKEY.
           MOVE SCR-NMAP TO FRM-NAME.
           MOVE SCR-NLIB TO FRM-NLIB.
           MOVE FRM-GET-ALL TO FRM-CMND.
           PERFORM GNS-PRO-FRM.
           MOVE SPACES TO FRM-MENS.
           IF NOT ( FRM-FFLD = FRM-FFLD-RET  OR FRM-FFLD-PF10 OR
                               FRM-FFLD-PF12 OR FRM-FFLD-PF3 )
      *<<<< PFS_GET_CON OR PFS_GET_ACC OR PFS_SCR_GKEY
           IF NOT ( FRM-FFLD = FRM-FFLD-PF8 OR FRM-FFLD = FRM-FFLD-PF7 )
      *>>>>
               MOVE 'PFSINV    ' TO MSG-COD-MENS
               MOVE 'GNS' TO MSG-COD-SIST
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS
               PERFORM FST-KEY-LSM
               PERFORM SCR-MSSG
               PERFORM SCR-PUTA
               PERFORM SCR-EXIT.
           MOVE FRM-DFLD TO LSM-FLD.
           IF FRM-STAT-ABT
               GO TO FIN-SCR-GKEY.
           MOVE FRM-SUAR-OKS TO FRM-SUAR.
           PERFORM VAL-NUM-KEY-LSM.
           IF FRM-SUAR EQUAL FRM-SUAR-MAL OR FRM-SUAR-CLR
      *PTC-INI
               MOVE 'S' TO SCR-IERR
      *PTC-FIN
               PERFORM SCR-MSSG
               PERFORM EDT-KEY-LSM
               PERFORM SCR-PUTA
               PERFORM SCR-EXIT.
      *JSS
           PERFORM CLR-FLD-LSM.
           PERFORM VAL-IKY-LSM.
           IF FRM-SUAR EQUAL FRM-SUAR-MAL OR FRM-SUAR-CLR
               GO TO ERR-SCR-GKEY.
           PERFORM VAL-MKY-LSM.
           IF FRM-SUAR EQUAL FRM-SUAR-MAL OR FRM-SUAR-CLR
               GO TO ERR-SCR-GKEY.
           PERFORM VAL-AKY-LSM.
           IF FRM-SUAR EQUAL FRM-SUAR-MAL OR FRM-SUAR-CLR
               GO TO ERR-SCR-GKEY.
           PERFORM VAL-CON-KEY-LSM.
           IF NOT ( FRM-SUAR EQUAL FRM-SUAR-MAL OR FRM-SUAR-CLR )
               GO TO FIN-SCR-GKEY.
           IF FRM-UCUR NOT > SPACES
               PERFORM FST-KEY-LSM.
       ERR-SCR-GKEY.
      *PTC-INI
           MOVE 'S' TO SCR-IERR.
      *PTC-FIN
           PERFORM SCR-MSSG.
           PERFORM EDT-KEY-LSM.
           PERFORM SCR-PUTA.
           PERFORM SCR-EXIT.
       FIN-SCR-GKEY.
           PERFORM SCR-MSSG.

       SCR-GIKY SECTION.
       INI-SCR-GIKY.
           MOVE SCR-NMAP TO FRM-NAME.
           MOVE SCR-NLIB TO FRM-NLIB.
           MOVE FRM-GET-ALL TO FRM-CMND.
           PERFORM GNS-PRO-FRM.
           MOVE SPACES TO FRM-MENS.
           IF NOT ( FRM-FFLD = FRM-FFLD-RET  OR FRM-FFLD-PF10 OR
                               FRM-FFLD-PF12 OR FRM-FFLD-PF3 )
               MOVE 'PFSINV    ' TO MSG-COD-MENS
               MOVE 'GNS' TO MSG-COD-SIST
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS
               PERFORM FST-KEY-LSM
               PERFORM SCR-MSSG
               PERFORM SCR-PUTA
               PERFORM SCR-EXIT.
           MOVE FRM-DFLD TO LSM-FLD.
           IF FRM-STAT-ABT
               GO TO FIN-SCR-GIKY.
           MOVE FRM-SUAR-OKS TO FRM-SUAR.
           PERFORM VAL-NUM-KEY-LSM.
           IF FRM-SUAR EQUAL FRM-SUAR-MAL OR FRM-SUAR-CLR
      *PTC-INI
               MOVE 'S' TO SCR-IERR
      *PTC-FIN
               PERFORM SCR-MSSG
               PERFORM EDT-IKY-LSM
               PERFORM SCR-PUTA
               PERFORM SCR-EXIT.
      *JSS
           PERFORM CLR-FLD-LSM.
           PERFORM VAL-IKY-LSM.
           IF FRM-SUAR EQUAL FRM-SUAR-MAL OR FRM-SUAR-CLR
               GO TO ERR-SCR-GIKY.
           PERFORM VAL-CON-IKY-LSM.
           IF NOT ( FRM-SUAR EQUAL FRM-SUAR-MAL OR FRM-SUAR-CLR )
               GO TO FIN-SCR-GIKY.
           IF FRM-UCUR NOT > SPACES
               PERFORM FST-KEY-LSM.
       ERR-SCR-GIKY.
      *PTC-INI
           MOVE 'S' TO SCR-IERR.
      *PTC-FIN
           PERFORM SCR-MSSG.
           PERFORM EDT-IKY-LSM.
           PERFORM SCR-PUTA.
           PERFORM SCR-EXIT.
       FIN-SCR-GIKY.
           PERFORM SCR-MSSG.

       GET-CON SECTION.
       INI-GET-CON.
           MOVE SCR-NMAP TO FRM-NAME.
           MOVE SCR-NLIB TO FRM-NLIB.
           MOVE FRM-GET-ALL TO FRM-CMND.
           PERFORM GNS-PRO-FRM.
           IF NOT ( FRM-FFLD = FRM-FFLD-RET  OR FRM-FFLD-PF10 OR
                               FRM-FFLD-PF12 OR FRM-FFLD-PF3 )
      *<<<< PFS_GET_CON OR PFS_GET_ACC OR PFS_SCR_GKEY
           IF NOT ( FRM-FFLD = FRM-FFLD-PF8 OR FRM-FFLD = FRM-FFLD-PF7 )
      *>>>>
               MOVE 'PFSINV    ' TO MSG-COD-MENS
               MOVE 'GNS' TO MSG-COD-SIST
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO LSM-GLS-MEN2
               MOVE SCR-PRMT     TO LSM-GLS-MEN1
               PERFORM FST-MSG
               PERFORM SCR-PUTA
               PERFORM SCR-EXIT.
           MOVE FRM-DFLD TO LSM-FLD.
       FIN-GET-CON.
           MOVE SCR-STAT-CON TO SCR-STAT.

       CLR-MSG SECTION.
       INI-CLR-MSG.
           MOVE SPACES TO LSM-GLS-MENS.
       FIN-CLR-MSG.
           EXIT.

       HBL-IKY SECTION.
       INI-HBL-IKY.
      *PTC-INI
           IF NOT SCR-OFRM-SRV
      *PTC-FIN
           IF SCR-DESDE-CMN
               MOVE LSM-GLS-MENS TO FRM-MENS
               MOVE LOW-VALUES TO LSM-FLD
      * FLB  7-NOV-1994
               PERFORM CLR-KEY-LSM

               IF FRM-MENS < SPACES
                   MOVE LOW-VALUES TO LSM-GLS-MENS
               ELSE
                   MOVE FRM-MENS TO LSM-GLS-MENS.
           PERFORM PRO-MKY-LSM.
           PERFORM PRO-AKY-LSM.
           PERFORM UNP-IKY-LSM.
           PERFORM FST-KEY-LSM.
       FIN-HBL-IKY.
           EXIT.

       HBL-KEY SECTION.
       INI-HBL-KEY.
      *PTC-INI
           IF NOT SCR-OFRM-SRV
      *PTC-FIN
           IF SCR-DESDE-CMN
               MOVE LSM-GLS-MENS TO FRM-MENS
               MOVE LOW-VALUES TO LSM-FLD
               IF FRM-MENS < SPACES
                   MOVE LOW-VALUES TO LSM-GLS-MENS
               ELSE
                   MOVE FRM-MENS TO LSM-GLS-MENS.
           PERFORM UNP-KEY-LSM.
           PERFORM FST-KEY-LSM.
       FIN-HBL-KEY.
           EXIT.

       HBL-FLD SECTION.
       INI-HBL-FLD.
           PERFORM PRO-IKY-LSM.
           PERFORM PRO-AKY-LSM.
           PERFORM UNP-MKY-LSM.
           PERFORM UNP-FLD-LSM.
           PERFORM FST-FLD-LSM.
       FIN-HBL-FLD.
           EXIT.

       FST-MSG SECTION.
       INI-FST-MSG.
           MOVE -1 TO LSM-GLS-MENS-LEN.
       FIN-FST-MSG.
           EXIT.

       PRO-ALL SECTION.
       INI-PRO-ALL.
           PERFORM PRO-KEY-LSM.
           PERFORM FST-MSG.
       FIN-PRO-ALL.
           EXIT.

       SCR-TRL SECTION.
       INI-SCR-TRL.
      *PTC-INI
           IF SCR-STAT NOT = SCR-STPP
               MOVE 'S' TO SCR-IERR.
      *PTC-FIN
           IF FRM-MEN1 NOT > SPACES
               MOVE SCR-PRMT TO FRM-MEN1.
           IF SCR-STAT = SCR-STAT-MOD
               PERFORM HBL-FLD
               PERFORM SCR-MSSG
               PERFORM EDT-KEY-LSM
               PERFORM EDT-FLD-LSM
               PERFORM SCR-PUTA
               PERFORM STP-EXIT
               MOVE SCR-INST-GFL TO SCR-INST
               PERFORM SCR-EXIT.
           IF SCR-STAT = SCR-STAT-SON
               PERFORM PRO-ALL
               PERFORM SCR-MSSG
               PERFORM EDT-KEY-LSM
               PERFORM EDT-FLD-LSM
               PERFORM SCR-PUTA
               PERFORM STP-EXIT
               MOVE SCR-INST-GCS TO SCR-INST
               PERFORM SCR-EXIT.
      *ASUME SCR-STAT-CON.
           MOVE SCR-STAT-CON TO SCR-STAT.
      *    MOVE FRM-CPSF-AEY TO FRM-CPIM-AEY.
           PERFORM PRO-ALL.
           PERFORM SCR-MSSG.
           PERFORM EDT-KEY-LSM.
           PERFORM EDT-FLD-LSM.
           PERFORM SCR-PUTA.
           MOVE SCR-INST-GAB TO SCR-INST.
           PERFORM SCR-EXIT.
       FIN-SCR-TRL.
           EXIT.

       DESSCRTRL SECTION.
       INI-DESSCRTRL.
           MOVE SCR-VFLD-NOT TO SCR-VFLD.
           MOVE FRM-FFLD TO SCR-FFLD.
       FIN-DESSCRTRL.
           IF SCR-FFLD-PF10 OR SCR-FFLD-PF3
                 MOVE SCR-INST-HCM TO SCR-INST
           ELSE
                 MOVE SCR-INST-HKY TO SCR-INST.
       EXT-DESSCRTRL.
           EXIT.

      * PGM-EBR-ALL SECTION.
      * INI-PGM-EBR-ALL.
      *     MOVE 'GNS' TO FIO-SIST.
      *     MOVE FIO-EBR-ALL TO FIO-CMND.
      *     PERFORM GNS-FIO-TAB.
      * FIN-PGM-EBR-ALL.
      *     EXIT.

       COPY LDCBQLSM.
       COPY GNSBVNUM.
       COPY COLBFOPC.
       COPY GNSBFMSG.
       COPY GNSBGSYS.
       COPY GNSBGDTC.
      *PTC-INI
      *PTC-SUB
      * ISP  10-MAY-2001 13:46:35 
      * COPY GNSBGFRM.
       COPY GNSBG3CF.
      *PTC-FIN
       COPY GNSBGMSG.
       COPY GNSBEKEY.
       COPY GNSBIABT.
       COPY GNSBFTAB.
       COPY GNSBVIND.
       COPY GNSBVMSC.
       COPY GNSBFMSC.
       COPY GNSBVIDC.
       COPY GNSBPVRF.
      *PTC-INI
       COPY GNSBGQUE.
       COPY GNSBGTSK.
      *PTC-FIN

      *<<<< EOF
       COPY GNSBGHOY.
       COPY SGCBFDBC.
       COPY SGCBFDCP.
       COPY SGCBFDCE.
       COPY SGCBGCLI.
       COPY COLBFRDC.
       COPY GNSBGCPT.
       COPY LDCBGCCU.
       COPY LDCBGMMS.
       COPY LDCBFCLF.
       COPY LDCBKCCU.
       COPY LDCBKCEG.


       CAR-MOV-LSM SECTION.
       INI-CAR-MOV-LSM.
           PERFORM GET-FHOY.

           MOVE SPACES          TO MSG-COD-MENS.

           MOVE 'TAB'           TO FIO-SIST.
           MOVE 'VLR'           TO TAB-CIC-TTAB IN TAB.
           MOVE '0999  '        TO TAB-CIC-CTAB IN TAB.
           MOVE 'TAB-CIC-TABL'  TO FIO-AKEY.
           MOVE FIO-GET-KEY     TO FIO-CMND.
           PERFORM GNS-FIO-TAB.
           IF NOT FIO-STAT-OKS
              MOVE 'TAB'          TO MSG-COD-SIST
              MOVE 'CIC0999  NEX' TO MSG-COD-MENS
              PERFORM GET-MSG
                 MOVE MSG-GLS-DESC TO FRM-MENS
                 MOVE 'S' TO SCR-IERR
                 GO TO FIN-CAR-MOV-LSM.

           MOVE TAB-COD-CTAB IN TAB TO CCU-COD-PESO IN CCU-VARI.

           MOVE DBC-NUM-ICLI IN LSM-FLD TO DBC-NUM-ICLI IN DBC
           MOVE DBC-IND-ICLI IN LSM-FLD TO DBC-IND-ICLI IN DBC
           MOVE DBC-GLS-ICLI IN LSM-FLD TO DBC-GLS-ICLI IN DBC
           MOVE 'DBC-IDC-ICLI' TO FIO-AKEY
           MOVE FIO-GET-KEY    TO FIO-CMND
           PERFORM GET-CLI
           IF MSG-COD-MENS > SPACES
              MOVE MSG-GLS-DESC TO FRM-MENS
              MOVE 'S' TO SCR-IERR
              GO TO FIN-CAR-MOV-LSM.

           MOVE DBC-CAI-ICLI IN DBC     TO CCU-CAI-ICLI.
           MOVE DBC-IIC-ICLI IN DBC     TO CCU-IIC-ICLI.

           IF DBC-IND-TICL IN DBC = 'P'
              MOVE DBC-KEY-IDBC IN DBC TO DCP-KEY-IDCP IN DCP
              MOVE FIO-GET-KEY TO FIO-CMND
              PERFORM SGC-FIO-DCP
              MOVE DCP-COD-TBAN IN DCP TO
                   CCU-COD-TBAN IN CCU-VARI
           ELSE
           IF DBC-IND-TICL IN DBC = 'E'
              MOVE DBC-KEY-IDBC IN DBC TO DCE-KEY-IDCE IN DCE
              MOVE FIO-GET-KEY TO FIO-CMND
              PERFORM SGC-FIO-DCE
              MOVE DCE-COD-TBAN IN DCE TO
                   CCU-COD-TBAN IN CCU-VARI.

           IF OPC-IIC-IOPC IN LSM-FLD > ZEROES AND
              OPC-CAI-IOPC IN LSM-FLD > SPACES
              MOVE OPC-CAI-IOPC IN LSM-FLD TO OPC-CAI-IOPC IN OPC
              MOVE OPC-IIC-IOPC IN LSM-FLD TO OPC-IIC-IOPC IN OPC
              MOVE FIO-GET-KEY TO FIO-CMND
              PERFORM COL-FIO-OPC
              IF NOT FIO-STAT-OKS
                 MOVE FIO-STAT     TO PGM-STAT-OPC
                 MOVE 'COL'        TO MSG-COD-SIST
                 MOVE 'OPC    NEX' TO MSG-COD-MENS
                 PERFORM GET-MSG
                 MOVE MSG-GLS-DESC TO FRM-MENS
                 MOVE 'S' TO SCR-IERR
                 GO TO FIN-CAR-MOV-LSM
              ELSE
              IF OPC-MSC-STAT IN OPC = 'A'
                 MOVE FIO-STAT       TO PGM-STAT-OPC
                 MOVE 'COL'          TO MSG-COD-SIST
                 MOVE 'OPC    ACAYA' TO MSG-COD-MENS
                 PERFORM GET-MSG
                 MOVE MSG-GLS-DESC TO FRM-MENS
                 MOVE 'S' TO SCR-IERR
                 GO TO FIN-CAR-MOV-LSM
              ELSE
                MOVE OPC-CAI-IOPC IN LSM-FLD TO CCU-CAI-IOPC(1)
                MOVE OPC-IIC-IOPC IN LSM-FLD TO CCU-IIC-IOPC(1)
                MOVE OPC-VAL-SCRE IN OPC     TO CCU-VAL-SCRE(1)
                MOVE SPACES                  TO CCU-OPC-ICRG(1)
           ELSE
              MOVE SPACES                  TO CCU-CAI-IOPC(1)
              MOVE ZEROES                  TO CCU-IIC-IOPC(1)
              MOVE ZEROES                  TO CCU-VAL-SCRE(1)
              MOVE SPACES                  TO CCU-OPC-ICRG(1).


           MOVE FIO-MSFL   TO CCU-MSFL.
           MOVE SCR-QIDD   TO CCU-QIDD.
           MOVE SCR-LIDD   TO CCU-LIDD.
           MOVE CCU-CMMA   TO SYS-CMMA.
           MOVE SYS-LINK   TO SYS-CMND.
           MOVE 'LDCPSCCM' TO SYS-PROG.
           MOVE CCU-TCMA   TO SYS-TCMA.
           PERFORM GNS-PRO-SYS.
           MOVE SYS-CMMA TO CCU-CMMA.
           MOVE CCU-MSFL TO FIO-MSFL.

      *    IF CCU-NUM-MENS < 99
      *       MOVE '1'          TO FRM-COD-RESP IN LSM-FLD
      *       MOVE CCU-COD-MENS TO FRM-CIC-RESP IN LSM-FLD
      *    ELSE
      *       MOVE '0'          TO FRM-COD-RESP IN LSM-FLD
      *       MOVE SPACES       TO FRM-CIC-RESP IN LSM-FLD.
           PERFORM RED-TS-RUTMEN.

       FIN-CAR-MOV-LSM.
           EXIT.

       OBT-DAT-TS SECTION.
       INI-OBT-DAT-TS.
      *    EXEC CICS HANDLE CONDITION QIDERR(CON-OBT-DAT-TS)
      *                              ITEMERR(CON-OBT-DAT-TS)
      *    END-EXEC.
      *<<<<
           MOVE LSM-NOM-TSLSM       TO QUE-COLA.
           MOVE QUE-DEL             TO QUE-CMND.
           PERFORM GNS-PRO-QUE.

           MOVE RUTMEN-NOM-TSRUTMEN TO QUE-COLA.
           PERFORM GNS-PRO-QUE.


      *>>>>
       CON-OBT-DAT-TS.

           PERFORM CAR-MOV-LSM.
       FIN-OBT-DAT-TS.
           EXIT.

       PUT-TAB-LSM SECTION.
       INI-PUT-TAB-LSM.
           PERFORM RED-TS.
           PERFORM LLE-DAT-PNT VARYING LSM-I FROM 1 BY 1
                   UNTIL LSM-I > LSM-IMAX.

           MOVE LSM-GLS-TOTA(1) TO LSM-LINEA.



           MOVE LSM-LINEA(4:3) TO LSM-VAR-FORM.

           MOVE SPACES TO LSM-LINEA.
           PERFORM CARGAR-FORMULARIO.
           PERFORM LLE-DAT-FOR VARYING LSM-I FROM 1 BY 1
                   UNTIL LSM-I > LSM-IMAX.
       FIN-PUT-TAB-SCL.
           EXIT.


       LLE-DAT-FOR SECTION.
       INI-LLE-DAT-FOR.
           MOVE LSM-NUM-NLIN(LSM-I) TO FRM-NUM-NLIN IN LSM-FLD(LSM-I).
           MOVE LSM-GLS-DMSG(LSM-I) TO FRM-GLS-DMSG(LSM-I).
       FIN-LLE-DAT-FOR.
           EXIT.

       LLE-DAT-PNT SECTION.
       INI-LLE-DAT-PNT.

      *    MOVE LSM-CIC-IOPC(LSM-I) TO WSS-CIC-IOPC.
      *    MOVE LSM-GLS-DMSG(LSM-I) TO WSS-GLS-DMSG.
      *    MOVE WSS-TMP             TO FRM-GLS-DMSG(LSM-I).

           MOVE LSM-GLS-TOTA(LSM-I) TO LSM-VAR-IN-DATA(LSM-I).

      *    IF LSM-LINEA(4:3) NOT = '006'
      *       MOVE LSM-GLS-TOTA(LSM-I) TO FRM-GLS-DMSG(LSM-I)
      *       MOVE LSM-NUM-NLIN(LSM-I) TO FRM-NUM-NLIN IN LSM-FLD(LSM-I)
      *       GO TO FIN-LLE-DAT-PNT.




       FIN-LLE-DAT-PNT.
           EXIT.

       RED-TS SECTION.
       INI-RED-TS.

      *    EXEC CICS HANDLE CONDITION QIDERR(FIN-RED-TS)
      *                              ITEMERR(FIN-RED-TS)
      *    END-EXEC.
      *<<<<
           MOVE LSM-NOM-TSLSM      TO QUE-COLA.
           MOVE LSM-TS             TO QUE-ITEM.
           MOVE LSM-LEN-TSLSM      TO QUE-LITM.
           MOVE SCR-I              TO QUE-NITM.
           MOVE QUE-GET            TO QUE-CMND.
           PERFORM GNS-PRO-QUE.
           IF QUE-STAT = QUE-STAT-OKS
              MOVE QUE-ITEM          TO LSM-TS.

      *>>>>
       FIN-RED-TS.
           EXIT.

       RED-TS-RUTMEN SECTION.
       INI-RED-TS-RUTMEN.
      *    EXEC CICS HANDLE CONDITION QIDERR(FIN-RED-TS-RUTMEN)
      *                              ITEMERR(FIN-RED-TS-RUTMEN)
      *    END-EXEC.
      *<<<<
           MOVE ZEROES TO QUE-NITM.
       LUP-RED-TS-RUTMEN.
           ADD 1 TO QUE-NITM.
           PERFORM LEE-TS-MMS.

           IF QUE-STAT = QUE-STAT-OKS
              MOVE QUE-ITEM TO RUTMEN-TS
              PERFORM WRT-TS
              GO TO LUP-RED-TS-RUTMEN.

      *>>>>
       FIN-RED-TS-RUTMEN.
           EXIT.


       WRT-TS SECTION.
       INI-WRT-TS.
           ADD 1 TO SCR-IMAX.

           IF NOT SCR-OFRM-SRV
           MOVE RUTMEN-TS TO RUTMEN-ARRE-TS
           PERFORM CLR-VEC-TS VARYING LSM-I FROM 1 BY 1 UNTIL
                   LSM-I > LSM-IMAX.


           IF SCR-OFRM-SRV
              PERFORM PUT-TAB-LSM-2.


           MOVE LSM-NOM-TSLSM  TO QUE-COLA.
           MOVE LSM-TS         TO QUE-ITEM.
           MOVE LSM-LEN-TSLSM  TO QUE-LITM.
           MOVE QUE-PUT        TO QUE-CMND.
           PERFORM GNS-PRO-QUE.

       FIN-WRT-TS.
           EXIT.

       CLR-VEC-TS SECTION.
       INI-CLR-VEC-TS.

           MOVE LSM-I                   TO LSM-NUM-NLIN(LSM-I).
           MOVE RUTMEN-GLS-DMSG(LSM-I)  TO LSM-GLS-TOTA(LSM-I).

       FIN-CLR-VEC-TS.
           EXIT.



      *>>>> EOF






       CARGAR-FORMULARIO SECTION.
       INI-CARGAR-FORMULARIO.
           PERFORM LIMPIA-FORM.
           MOVE 1 TO LSM-I-LINEA.
           MOVE 1 TO LSM-POS-GLS.

           PERFORM CARGA-DATOS.
           IF 'N' = LSM-FLG-EXIT
              PERFORM SIN-FORMATO.

           MOVE LSM-VAR-FORM TO LSM-FOR-NFO.
           MOVE '000'        TO LSM-FOR-NCA.
           MOVE '00'         TO LSM-FOR-COP.

           PERFORM CARGA-NXT-COMPONENTE.
           IF 'E' = LSM-FLG-EXIT
              PERFORM SIN-FORMATO
           ELSE
              MOVE LSM-LINEA TO LSM-GLS-DMSG(LSM-I-LINEA).

       FIN-CARGAR-FORMULARIO.
           EXIT.
      *-----------------------------------------------------------------
      *-----------------------------------------------------------------
      *-----------------------------------------------------------------
       CARGA-DATOS SECTION.
       INI-CARGA-DATOS.
           MOVE 100          TO LSM-I-MAX-DAT.
           MOVE 'S'          TO LSM-FLG-EXIT
           MOVE LSM-VAR-FORM TO LSM-FOR-NFO.
           MOVE '001'        TO LSM-FOR-NCA.
           MOVE '00'         TO LSM-FOR-COP.
           MOVE 1            TO LSM-I.
           MOVE 73           TO LSM-POS-DATA.

           MOVE 'DEU'        TO TAB-COD-SIST.
           MOVE 'DEU'        TO FIO-SIST.
           MOVE 'FVI'        TO TAB-COD-TTAB.
           MOVE LSM-FOR-CTAB TO TAB-COD-CTAB.
           MOVE FIO-GET-NLS  TO FIO-CMND.
       LUP-CARGA-DATOS.
           PERFORM GNS-FIO-TAB.
           MOVE TAB-COD-CTAB TO LSM-FOR-CTAB.
           IF NOT FIO-STAT-OKS OR
              LSM-VAR-FORM NOT = LSM-FOR-NFO
              MOVE LSM-I TO LSM-I-MAX-DAT
              SUBTRACT 1 FROM LSM-I-MAX-DAT
              GO TO FIN-CARGA-DATOS.

           IF TAB-IND-VIGE IN TAB NOT = 'S'
              GO TO NXT-CARGA-DATOS.

           MOVE TAB-GLS-ABRV IN TAB TO LSM-VAR-LEN(LSM-I).
           MOVE TAB-GLS-DCOR IN TAB TO LSM-VAR-ETQ(LSM-I).
           MOVE SPACES              TO LSM-VAR-GLS(LSM-I).

           MOVE TAB-GLS-ABRV IN TAB TO LSM-TMP-LEN.

           MOVE LSM-VARI-IN(LSM-POS-DATA:LSM-TMP-LIN) TO
                LSM-VAR-GLS(LSM-I).

           ADD LSM-TMP-LIN TO LSM-POS-DATA.

           ADD 1 TO LSM-I.
           IF LSM-I > LSM-I-MAX-DAT
DEBUG * MENSAJE DE ERROR DE LARGO MAXIMO DE DATOS.

              MOVE 'N'       TO LSM-FLG-EXIT
              GO TO FIN-CARGA-DATOS.

       NXT-CARGA-DATOS.
           MOVE FIO-GET-NXT  TO FIO-CMND.
           GO TO LUP-CARGA-DATOS.

       FIN-CARGA-DATOS.
           EXIT.
      *-----------------------------------------------------------------
      *-----------------------------------------------------------------
      *-----------------------------------------------------------------
       CARGA-NXT-COMPONENTE SECTION.
       INI-CARGA-NXT-COMPONENTE.
           MOVE 'S'          TO LSM-FLG-EXIT


           MOVE 'DEU'           TO TAB-COD-SIST FIO-SIST
           MOVE 'VSN'           TO TAB-COD-TTAB IN TAB
           MOVE 'LSMSERVICIO '  TO TAB-COD-CTAB IN TAB
           MOVE FIO-GET-KEY TO FIO-CMND
           PERFORM GNS-FIO-TAB
           IF FIO-STAT-OKS AND TAB-IND-VIGE IN TAB = 'S'
              IF SCR-OFRM-SRV
                 MOVE 'E'    TO LSM-FLG-EXIT
                 GO TO FIN-CARGA-NXT-COMPONENTE.


           MOVE 'DEU'        TO TAB-COD-SIST.
           MOVE 'DEU'        TO FIO-SIST.
           MOVE 'LSM'        TO TAB-COD-TTAB.
           MOVE LSM-FOR-CTAB TO TAB-COD-CTAB.
           MOVE FIO-GET-NLS  TO FIO-CMND.

       LUP-CARGA-NXT-COMPONENTE.
           PERFORM GNS-FIO-TAB.
           MOVE TAB-COD-CTAB TO LSM-FOR-CTAB.
           IF NOT FIO-STAT-OKS OR
              LSM-VAR-FORM  NOT = LSM-FOR-NFO
              IF LSM-FOR-NCA   = '000' AND
                 LSM-VAR-FORM  = LSM-FOR-NFO
                 MOVE 'E'    TO LSM-FLG-EXIT
                 GO TO FIN-CARGA-NXT-COMPONENTE
              ELSE
                 MOVE 'S'    TO LSM-FLG-EXIT
                 GO TO FIN-CARGA-NXT-COMPONENTE.

           IF TAB-IND-VIGE IN TAB NOT = 'S'
              IF LSM-FOR-NCA = '000'
                 MOVE 'E'    TO LSM-FLG-EXIT
                 GO TO FIN-CARGA-NXT-COMPONENTE
              ELSE
                 GO TO NXT-CARGA-NXT-COMPONENTE.


           MOVE TAB-GLS-ABRV IN TAB TO LSM-LEN-MSG.
           MOVE TAB-GLS-DCOR IN TAB TO LSM-ETQ-MSG.
           MOVE TAB-GLS-DATA IN TAB TO LSM-GLS-MSG.

           IF LSM-FOR-NCA = '000' AND
              LSM-LEN-MSG = '00073'
             MOVE LSM-VAR-IN-DATA(LSM-I-LINEA) TO
                  LSM-GLS-DMSG(LSM-I-LINEA)
             ADD 1 TO LSM-I-LINEA
             GO TO NXT-CARGA-NXT-COMPONENTE.

           IF LSM-ETQ-MSG NOT = 'MSG         '
              PERFORM RCP-VALOR-VARIABLE.

           PERFORM CONCATENA-MENSAJE.
       NXT-CARGA-NXT-COMPONENTE.
           MOVE FIO-GET-NXT TO FIO-CMND.
           GO TO LUP-CARGA-NXT-COMPONENTE.


       FIN-CARGA-NXT-COMPONENTE.
           EXIT.

       RCP-VALOR-VARIABLE SECTION.
       INI-RCP-VALOR-VARIABLE.
           MOVE 1            TO LSM-I.

       LUP-RCP-VALOR-VARIABLE.
           IF LSM-VAR-ETQ(LSM-I) NOT = LSM-ETQ-MSG
              GO TO NXT-RCP-VALOR-VARIABLE.

           MOVE LSM-VAR-GLS(LSM-I) TO LSM-GLS-MSG.
           GO TO FIN-RCP-VALOR-VARIABLE.

       NXT-RCP-VALOR-VARIABLE.
           ADD 1 TO LSM-I.
           IF LSM-I > LSM-I-MAX-DAT
              MOVE 'XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX'
              TO LSM-GLS-MSG
              GO TO FIN-RCP-VALOR-VARIABLE.

           GO TO LUP-RCP-VALOR-VARIABLE.

       FIN-RCP-VALOR-VARIABLE.
           EXIT.


       CONCATENA-MENSAJE SECTION.
       INI-CONCATENA-MENSAJE.

           MOVE LSM-GLS-MSG(1:LSM-LIN-MSG) TO
                LSM-LINEA(LSM-POS-GLS:LSM-LIN-MSG).

           ADD LSM-LIN-MSG TO LSM-POS-GLS.
           IF LSM-POS-GLS > 73
              MOVE LSM-LINEA TO LSM-GLS-DMSG(LSM-I-LINEA)
              MOVE SPACES TO LSM-LINEA
              MOVE 1      TO LSM-POS-GLS
              ADD  1      TO LSM-I-LINEA.

           IF LSM-I-LINEA > LSM-I-MAX-LINEA
DEBUG * MENSAJE LA CANTIDAD DE LINEAS DEL MENSAJE SUPERA LAS 16 LINEAS
              GO TO FIN-CARGAR-FORMULARIO.

       FIN-CONCATENA-MENSAJE.
           EXIT.


       SIN-FORMATO SECTION.
       INI-SIN-FORMATO.
           MOVE 1 TO LSM-I.
       LUP-SIN-FORMATO.
           MOVE LSM-VAR-IN-DATA(LSM-I) TO LSM-GLS-DMSG(LSM-I)

           ADD 1 TO LSM-I.
           IF LSM-I > LSM-I-MAX-LINEA
              GO TO FIN-SIN-FORMATO.

           GO TO LUP-SIN-FORMATO.

       FIN-SIN-FORMATO.
           EXIT.

       LIMPIA-FORM SECTION.
       INI-LIMPIA-FORM.
           MOVE 1 TO LSM-I.
       LUP-LIMPIA-FORM.
           MOVE SPACES TO LSM-GLS-DMSG(LSM-I).

           ADD 1 TO LSM-I.
           IF LSM-I > LSM-I-MAX-LINEA
              GO TO FIN-LIMPIA-FORM.

           GO TO LUP-LIMPIA-FORM.
       FIN-LIMPIA-FORM.
           EXIT.


       PUT-TAB-LSM-2 SECTION.
       INI-PUT-TAB-LSM-2.

           MOVE RUTMEN-TS          TO LSM-VARI-IN
           MOVE LSM-VAR-IN-DATA(1) TO LSM-LINEA.
           MOVE LSM-LINEA(4:3)     TO LSM-VAR-FORM.
           MOVE SPACES             TO LSM-LINEA.

           PERFORM CARGAR-FORMULARIO.

           PERFORM LLE-DAT-FOR-2 VARYING LSM-I FROM 1 BY 1
                   UNTIL LSM-I > LSM-IMAX.


       FIN-PUT-TAB-SCL-2.
           EXIT.


       LLE-DAT-FOR-2 SECTION.
       INI-LLE-DAT-FOR.

           MOVE LSM-I                   TO LSM-NUM-NLIN(LSM-I).
           MOVE LSM-GLS-DMSG(LSM-I)     TO LSM-GLS-TOTA(LSM-I).

       FIN-LLE-DAT-FOR-2.
           EXIT.
