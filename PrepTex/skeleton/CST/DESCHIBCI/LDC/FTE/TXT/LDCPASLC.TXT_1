*%! Codigo adicional
*% NO_TIENE_TIMESTAMP = TRUE
*% NO_HDR_CST = TRUE
*% LARGO_TOTAL_COMMAREA = 3000
*% FMT_CHI = TRUE
*% GEN_BCI = TRUE
*% PGM_PTC = TRUE
*% PGM_STAT_CLF = TRUE
*% PGM_STAT_LDC = TRUE
*% PFSQUECOPY = "LDCWXSLC"
*% LARGO_MI_COMMAREA = 0
*% PFSQUEMAXPAN= "10"
*% PFSQUEENT = "SLC"
*% PFSQUEPRV = "PF5"
*% PFSQUENXT = "PF6"
*% PFSQUESIS = "LDC"
*% IF WSS
      *<<<< WSS
       COPY LDCWXSLC.
       01  WSS-VARI-PFS-QUE.
*% IF PGM_PU
           03 WSS-HAY-ERRO     VALUE 'N'            PIC X(01).
*% END
           03 WSS-FRM-FFLD     VALUE SPACES         PIC X(01).
           03 WSS-MAX-PANT     VALUE 10 PIC 9(05).
           03 WSS-IND-PANT     VALUE 1              PIC 9(05).
           03 WSS-IND-HMAS     VALUE 'N'            PIC X(01).
*% IF PGM_PU
       77  WSS-ISLC            VALUE ZEROES         PIC 9(05).
       77  WSS-ISLC-AUX        VALUE ZEROES         PIC 9(05).
      * ISP-INI 04-03-2004 SOLO PARA DESPLEGAR SCR-VARI
       77  WSS-DESPL            VALUE SPACES PIC X(156).
      * ISP-FIN 04-03-2004 SOLO PARA DESPLEGAR SCR-VARI

*% END
      *>>>> WSS
      *<<<< WSS
       COPY GNSWGHOY.

       01 WSS-VARI.
*% IF PGM_PU
      *AFRI-INI/MAYO-2007  (MAE -ALD)
           03 WSS-J                                PIC 9(02).
      *AFRI-FIN/MAYO-2007  (MAE -ALD)
*% END
           03 WSS-N                                PIC 9(02).
           03 WSS-N-MAX         VALUE 30           PIC 9(02).
           03  WSS-CPT-NOMB.
               05  WSS-CPT-DESC                    PIC X(40).
               05  WSS-CPT-CAI                     PIC X(04).
               05  WSS-CPT-IIC                     PIC X(08).
               05  WSS-GLS-DATA                    PIC X(40).
           03  WSS-CPT-NOMB-R  REDEFINES  WSS-CPT-NOMB PIC X(92).

           03 WSS-COD-PESO      VALUE SPACES       PIC X(06).
           03 WSS-VAL-MNTO      VALUE ZEROES       PIC 9(13).
*% IF PGM_PU
           03 WSS-COD-MONE      VALUE SPACES       PIC X(06).

           03 WSS-VEC-CCU OCCURS 30.
               05 WSS-VAL-MTSI   VALUE ZEROES      PIC 9(11).
           03 WSS-IND-STAT       VALUE SPACES      PIC X(01).
           03 WSS-CIC-ICLI-RDC.
              05 WSS-CAI-ICLI-RDC                  PIC X(04).
              05 WSS-IIC-ICLI-RDC                  PIC 9(08).
      *GVI-INI/JULIO-2007
           03 WSS-VAL-MNTL      VALUE ZEROES       PIC 9(13).
      *GVI-FIN/JULIO-2007
*% END

       COPY GNSBRCIC.
       COPY GNSWGCIC.
       COPY SGCBRDBC.
       COPY LDCBRRDC.
       COPY LDCBRCLF.
       COPY TABBRCAM.
       COPY LDCBRSLC.

       COPY LDCWGCCU.
       COPY GNSWGCPT.
       COPY GNSWGSTR.
      * COPY LDCWXSLC.
*% IF NOT PGM_MCP AND NOT PGM_PTC
       COPY GNSWGQUE.
*% END
      *>>>>
*% END
*% IF FIN_PGM_STAT AND PGM_PU
      *<<<< FIN_PGM_STAT AND PGM_PU
              05 PGM-STAT-RDC.
                 88 PGM-STAT-RDC-NUL    VALUE '  '.
                 07 PGM-STT1-RDC        VALUE '2' PIC X(01).
                    88 PGM-STAT-RDC-OKS VALUE '0'.
                 07 PGM-STT2-RDC        VALUE '3' PIC X(01).
      *>>>>
*% END
*% IF WSS_DTC
      *<<<< WSS_DTC
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-DBC-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-RDC-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-CLF-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-CAM-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-CIC-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-SLC-REQA==.
      *>>>>
       77  WSS-IND-SIMU PIC X(06)         VALUE SPACES.
       01 WSS-NUM-VALOR VALUE ZEROES PIC 9(03).
       01 WSS-NUM-CCUR.
           03 WSS-NUM-ICUR-EDT  PIC  ZZ9.
           03 WSS-NUM-ICUR-ALF       PIC X(03).
           03 WSS-NUM-ICUR      REDEFINES
              WSS-NUM-ICUR-ALF       PIC 9(03).
*% END
*% IF FIN_SCR_VARI
      *     03 SCR-NUM-PANT               PIC 9(02).
           03 SCR-SLC-FLD                PIC X(1055).
*% END
*% IF INI_SCR_COM
      *<<<< INI_SCR_COM
           PERFORM DEL-QUE-SLC.
      *>>>>
      *<<<< INI_SCR_COM
      *     MOVE CLG-NOM-TSCLG TO QUE-COLA.
      *     MOVE CLG-LEN-TSCLG TO QUE-LITM.
      *     MOVE QUE-DEL       TO QUE-CMND.
      *     PERFORM GNS-PRO-QUE.
      *>>>>
*% END
*% IF INI_FIO AND PGM_PU
      *<<<< INI_FIO AND PGM_PU
           IF SCR-OFRM-SRV
                MOVE TSK-TERM-ALF TO SLC-COD-TERM
                MOVE TSK-TERM-ALF TO SLC-COD-TERM-KEY
                MOVE TSK-TERM-ALF TO SLC-COD-TERM-MAS
           ELSE
                MOVE EIBTRMID     TO SLC-COD-TERM
                MOVE EIBTRMID     TO SLC-COD-TERM-KEY
                MOVE EIBTRMID     TO SLC-COD-TERM-MAS.

           MOVE SCR-VARI TO WSS-DESPL.

           IF FRM-FFLD = FRM-FFLD-PF5 AND
                SCR-INST = SCR-INST-GFL
                MOVE FRM-FFLD-PF5 TO WSS-FRM-FFLD
                MOVE FRM-FFLD-RET TO FRM-FFLD
           ELSE
           IF FRM-FFLD = FRM-FFLD-PF6 AND
                SCR-INST = SCR-INST-GFL
                MOVE FRM-FFLD-PF6 TO WSS-FRM-FFLD
                MOVE FRM-FFLD-RET TO FRM-FFLD
           ELSE
                MOVE FRM-FFLD-RET TO WSS-FRM-FFLD.
           MOVE SCR-VARI TO WSS-DESPL.

      *>>>>
      *<<<< INI_FIO
           MOVE 'DEU'         TO FIO-SIST.
           MOVE 'VSN'         TO TAB-COD-TTAB IN TAB.
           MOVE 'TLCMECD0'    TO TAB-COD-CTAB IN TAB.
           MOVE FIO-GET-KEY   TO FIO-CMND.
           PERFORM GNS-FIO-TAB.
           IF FIO-STAT-OKS AND TAB-IND-VIGE IN TAB = 'S'
              MOVE 'S' TO CCU-IND-MCD0
           ELSE
              MOVE 'N' TO CCU-IND-MCD0.
      *>>>>
*% END
*% IF INI_FIO AND PGM_PQ
      *<<<< INI_FIO AND PGM_PQ
           IF SCR-OFRM-SRV
                MOVE TSK-TERM-ALF TO SLC-COD-TERM
                MOVE TSK-TERM-ALF TO SLC-COD-TERM-MAS
           ELSE
                MOVE EIBTRMID     TO SLC-COD-TERM
                MOVE EIBTRMID     TO SLC-COD-TERM-MAS.

           MOVE SPACES TO WSS-IND-SIMU.
           IF SCR-OFRM-SRV
               MOVE SLC-NOM-TSSLC  TO QUE-COLA
               MOVE SLC-LEN-TSSLC  TO QUE-LITM
               MOVE 1 TO QUE-NITM
               MOVE QUE-GET TO QUE-CMND
               PERFORM GNS-PRO-QUE
               IF QUE-STAT = QUE-STAT-OKS
                   MOVE 'OCCURS' TO WSS-IND-SIMU.

           IF FRM-FFLD = FRM-FFLD-PF5 AND
              SCR-INST = SCR-INST-GAB
                MOVE FRM-FFLD-PF5 TO WSS-FRM-FFLD
                MOVE FRM-FFLD-RET TO FRM-FFLD
                MOVE SCR-INST-GKY TO SCR-INST
           ELSE
           IF FRM-FFLD = FRM-FFLD-PF6 AND
              SCR-INST = SCR-INST-GAB
                MOVE FRM-FFLD-PF6 TO WSS-FRM-FFLD
                MOVE FRM-FFLD-RET TO FRM-FFLD
                MOVE SCR-INST-GKY TO SCR-INST
           ELSE
                MOVE FRM-FFLD-RET TO WSS-FRM-FFLD.
      *>>>>
*% END
*% IF INI_FND_KEY
      *<<<< INI_FND_KEY

           IF WSS-FRM-FFLD = FRM-FFLD-PF5 OR
              WSS-FRM-FFLD = FRM-FFLD-PF6
              GO TO FIN-FND-KEY.

           IF WSS-IND-SIMU NOT = 'OCCURS'
               PERFORM DEL-QUE-SLC.

           PERFORM SLC-ANL-KEY.

           MOVE 1 TO SCR-NUM-PANT.
           GO TO FIN-FND-KEY.

      *>>>>
      *<<<< INI_FND_KEY
      *>>>>
*% END
*% IF PFS_SCR_ACC
      *<<<< PFS_SCR_ACC
      *>>>>
*% END
*% IF FIN_FND_KEY
      *<<<< FIN_FND_KEY
      *>>>>
*% END
*% IF PFS_GET_CON
      *<<<< PFS_GET_CON
      *>>>>
*% END
*% IF EOF
      *<<<< EOF

       DEL-QUE-SLC SECTION.
       INI-DEL-QUE-SLC.
           MOVE SLC-NOM-TSSLC TO QUE-COLA.
           MOVE QUE-DEL TO QUE-CMND.
           PERFORM GNS-PRO-QUE.
       FIN-DEL-QUE-SLC.
           EXIT.

       SLC-MOV-TS-FRM SECTION.
       INI-SLC-MOV-TS-FRM.
*% IF PGM_PQ
           IF WSS-IND-SIMU NOT = 'OCCURS' AND
              SCR-OFRM-SRV
*% END
*% IF PGM_PU
           IF SCR-OFRM-SRV
*% END
               GO TO FIN-SLC-MOV-TS-FRM
           ELSE
               IF WSS-IND-PANT > WSS-MAX-PANT
                   GO TO FIN-SLC-MOV-TS-FRM.

           PERFORM SLC-MOV-TS-FRM-ELM.
      *     MOVE SLC-FLD01 TO
      *                FLD01 IN SLC-FLD(WSS-IND-PANT).

           ADD 1 TO WSS-IND-PANT.

       FIN-SLC-MOV-TS-FRM.
           EXIT.
      *<<<< PGM_DTC AND EOF
      * COPY GNSBGVSM.
      * COPY GNSBHVSM.
      *>>>>
      *<<<< EOF
       PUT-TAB SECTION.
       INI-PUT-TAB.
       EXT-PUT-TAB.
           EXIT.

       SET-FRM-IFLD SECTION.
       INI-SET-FRM-IFLD.
           IF SCR-OFRM-SRV
                MOVE 1 TO FRM-IFLD
           ELSE
                ADD 1 TO FRM-IFLD.
       FIN-SET-FRM-IFLD.
           EXIT.

      *--------------------------------------------
       PUT-TAB-CLG SECTION.
       INI-PUT-TAB-CLG.
       FIN-PUT-TAB-CLG.
           EXIT.
      *----------------------------------------------------
       PUT-CLG-QUE SECTION.
       INI-PUT-CLG-QUE.
       FIN-PUT-CLG-QUE.
           EXIT.
      *----------------------------------------------------
       CLR-FRM SECTION.
       INI-CLR-FRM.
       FIN-CLR-FRM.
           EXIT.

       CLR-WSS SECTION.
       INI-CLR-WSS.
       FIN-CLR-WSS.
           EXIT.

       CLR-FRM-MTX SECTION.
       INI-CLR-FRM-MTX.
       FIN-CLR-FRM-MTX.
           EXIT.
      *--------------------------------------------------
       COPY SGCBFDBC.
       COPY LDCBFRDC.
       COPY LDCBFCLF.
       COPY LDCBFSLC.
       COPY SGCBGCLI.
       COPY LDCBKCCU.

       COPY GNSBGCIC.
       COPY GNSBFCIC.
       COPY GNSBGCPT.
       COPY GNSBGSTR.
       COPY GNSBBTAB.
      *>>>> EOF
       EDT-VAL-CLG SECTION.
       INI-EDT-VAL-CLG.
       FIN-EDT-VAL-CLG.
           EXIT.

*% IF PGM_PU
       SLC-MOD-TS SECTION.
       INI-SLC-MOD-TS.
           MOVE SLC-NOM-TSSLC  TO QUE-COLA.
           MOVE SLC-LEN-TSSLC  TO QUE-LITM.
           MOVE QUE-GET        TO QUE-CMND.
           PERFORM GNS-PRO-QUE.
           IF QUE-STAT = QUE-STAT-OKS
               MOVE QUE-ITEM TO SLC-ITEM
               MOVE     FRM-VAL-MNTO IN SLC-FLD(WSS-ISLC) TO
                    SLC-FRM-VAL-MNTO
               MOVE     FRM-COD-VCMO IN SLC-FLD(WSS-ISLC) TO
                    SLC-FRM-COD-VCMO
               MOVE     FRM-GLS-VCMO IN SLC-FLD(WSS-ISLC) TO
                    SLC-FRM-GLS-VCMO
               MOVE SLC-ITEM TO QUE-ITEM
               MOVE QUE-MOD TO QUE-CMND
               PERFORM GNS-PRO-QUE
               MOVE QUE-NITM TO WSS-ISLC-AUX
               ADD 1 TO QUE-NITM
           ELSE
               ADD 1 TO WSS-MAX-PANT GIVING WSS-ISLC.
       FIN-SLC-MOD-TS.
           EXIT.

       SLC-PROC-ITEM SECTION.
       INI-SLC-PROC-ITEM.

           COMPUTE QUE-NITM = ( SCR-NUM-PANT - 1 ) * WSS-MAX-PANT + 1.

           MOVE QUE-NITM TO WSS-ISLC.
           PERFORM SLC-MOD-TS VARYING WSS-ISLC FROM 1 BY 1
               UNTIL WSS-ISLC > WSS-MAX-PANT.

       FIN-SLC-PROC-ITEM.
           EXIT.


*% END
       SLC-ANL-KEY SECTION.
       INI-SLC-ANL-KEY.
*% IF PGM_PQ
           IF WSS-IND-SIMU NOT = 'OCCURS'
               MOVE SLC-NOM-TSSLC TO QUE-COLA
               MOVE QUE-DEL TO QUE-CMND
               PERFORM GNS-PRO-QUE.
*% END
*% IF PGM_PU
           MOVE SLC-NOM-TSSLC TO QUE-COLA.
           MOVE QUE-DEL TO QUE-CMND.
           PERFORM GNS-PRO-QUE.
*% END

           IF DBC-NUM-ICLI IN SLC-FLD NOT = ZEROES
      *IDC-CLI Busca Cliente por medio de IdC
               MOVE DBC-NUM-ICLI IN SLC-FLD TO DBC-NUM-ICLI IN DBC
               MOVE DBC-IND-ICLI IN SLC-FLD TO DBC-IND-ICLI IN DBC
               MOVE DBC-GLS-ICLI IN SLC-FLD TO DBC-GLS-ICLI IN DBC
               MOVE 'DBC-IDC-ICLI' TO FIO-AKEY
               MOVE FIO-GET-KEY    TO FIO-CMND
               PERFORM GET-CLI
               IF MSG-COD-MENS NOT > SPACES
                   MOVE DBC-GLS-NOMC IN DBC TO CPT-STRN
                   PERFORM CPT-BLKS
                   MOVE CPT-STRN            TO DBC-GLS-NOMC IN SLC-FLD
                   MOVE DBC-CAI-ICLI IN DBC TO DBC-CAI-ICLI IN SLC-FLD
                   MOVE DBC-IIC-ICLI IN DBC TO DBC-IIC-ICLI IN SLC-FLD
                   MOVE '00' TO PGM-STAT-DBC
                   GO TO FIN-BUS-CLI-KEY
               ELSE
                   MOVE MSG-GLS-DESC TO FRM-MENS SLC-GLS-MENS
                   MOVE 'S' TO SCR-IERR.

           IF DBC-GLS-NOMC IN SLC-FLD > SPACES
      *NOM-CLI Busca Cliente por medio del Nombre
               MOVE DBC-GLS-NOMC IN SLC-FLD TO STR-GLS-GSTR
               PERFORM STR-UNS
               MOVE STR-GLS-FUNS IN STR-VARI(1) TO DBC-GLS-APAT IN DBC
               MOVE STR-GLS-FUNS IN STR-VARI(2) TO DBC-GLS-AMAT IN DBC
               MOVE STR-GLS-FUNS IN STR-VARI(3) TO DBC-GLS-NOMB IN DBC
               MOVE 'DBC-GLS-NOMC' TO FIO-AKEY
               MOVE FIO-GET-NLS    TO FIO-CMND
               PERFORM GET-CLI
               IF MSG-COD-MENS NOT > SPACES
                   MOVE DBC-NUM-ICLI IN DBC TO DBC-NUM-ICLI IN SLC-FLD
                   MOVE DBC-VRF-ICLI IN DBC TO DBC-VRF-ICLI IN SLC-FLD
                   MOVE DBC-IND-ICLI IN DBC TO DBC-IND-ICLI IN SLC-FLD
                   MOVE DBC-GLS-ICLI IN DBC TO DBC-GLS-ICLI IN SLC-FLD
                   MOVE DBC-GLS-NOMC IN DBC TO CPT-STRN
                   PERFORM CPT-BLKS
                   MOVE CPT-STRN            TO DBC-GLS-NOMC IN SLC-FLD
                   MOVE DBC-CAI-ICLI IN DBC TO DBC-CAI-ICLI IN SLC-FLD
                   MOVE DBC-IIC-ICLI IN DBC TO DBC-IIC-ICLI IN SLC-FLD
                   MOVE '00' TO PGM-STAT-DBC
                   GO TO FIN-BUS-CLI-KEY
               ELSE
                   MOVE MSG-GLS-DESC TO FRM-MENS SLC-GLS-MENS
                   MOVE 'S' TO SCR-IERR.

           IF DBC-CAI-ICLI IN SLC-FLD > SPACES OR
              DBC-IIC-ICLI IN SLC-FLD > SPACES
              MOVE DBC-CAI-ICLI IN SLC-FLD TO DBC-CAI-ICLI IN DBC
              MOVE DBC-IIC-ICLI IN SLC-FLD TO DBC-IIC-ICLI IN DBC
              MOVE FIO-GET-KEY    TO FIO-CMND
              PERFORM SGC-FIO-DBC
              IF FIO-STAT-OKS
                 MOVE DBC-NUM-ICLI IN DBC TO DBC-NUM-ICLI IN SLC-FLD
                 MOVE DBC-VRF-ICLI IN DBC TO DBC-VRF-ICLI IN SLC-FLD
                 MOVE DBC-IND-ICLI IN DBC TO DBC-IND-ICLI IN SLC-FLD
                 MOVE DBC-GLS-ICLI IN DBC TO DBC-GLS-ICLI IN SLC-FLD
                 MOVE DBC-GLS-NOMC IN DBC TO CPT-STRN
                 PERFORM CPT-BLKS
                 MOVE CPT-STRN            TO DBC-GLS-NOMC IN SLC-FLD
                 MOVE '00' TO PGM-STAT-DBC
                 GO TO FIN-BUS-CLI-KEY
              ELSE
                 MOVE MSG-GLS-DESC TO FRM-MENS SLC-GLS-MENS
                 MOVE 'S' TO SCR-IERR.

       FIN-BUS-CLI-KEY.
           IF MSG-COD-MENS > SPACES
              GO TO MSG-SLC-ANL-KEY.

           MOVE '00' TO PGM-STAT-DBC.

           MOVE ZEROES TO FRM-IFLD.
*% IF PGM_PQ


           MOVE DBC-CAI-ICLI IN SLC-FLD TO CCU-CAI-ICLI IN CCU-VARI.
           MOVE DBC-IIC-ICLI IN SLC-FLD TO CCU-IIC-ICLI IN CCU-VARI.
           PERFORM BUS-CLI-CLF.
           IF CCU-COD-MENS > SPACES
                GO TO CNT-SLC-ANL-KEY.

           IF CLF-COD-TOCF IN CLF = 'CGE'
               MOVE 'CLI    ESGRP' TO MSG-COD-MENS
               GO TO MSG-SLC-ANL-KEY.

           MOVE CLF-CAI-ICLF IN CLF TO LDC-CAI-ICLF IN LDC.
           MOVE CLF-IIC-ICLF IN CLF TO LDC-IIC-ICLF IN LDC.

*% END
*% IF PGM_PU
           MOVE DBC-CAI-ICLI IN SLC-FLD TO RDC-CAI-ICLI IN RDC.
           MOVE DBC-IIC-ICLI IN SLC-FLD TO RDC-IIC-ICLI IN RDC.
           MOVE SPACES                  TO RDC-CAI-ICLF IN RDC.
           MOVE SPACES                  TO RDC-IIC-ICLF IN RDC.
           MOVE FIO-GET-NLS TO FIO-CMND.
       LUP-LEE-RDC.
           PERFORM LDC-FIO-RDC.
           IF NOT ( FIO-STAT-OKS AND
               RDC-CAI-ICLI IN RDC = DBC-CAI-ICLI IN SLC-FLD AND
               RDC-IIC-ICLI IN RDC = DBC-IIC-ICLI IN SLC-FLD )
                GO TO CNT-SLC-ANL-KEY.

           MOVE RDC-CAI-ICLF IN RDC TO LDC-CAI-ICLF IN LDC.
           MOVE RDC-IIC-ICLF IN RDC TO LDC-IIC-ICLF IN LDC.
*% END
           MOVE ZEROES              TO LDC-NUM-ILDC IN LDC.
           MOVE FIO-GET-NLS TO FIO-CMND.
       LUP-LEE-LDC.
           PERFORM LDC-FIO-LDC.
           IF NOT ( FIO-STAT-OKS AND
               LDC-CAI-ICLF IN LDC = RDC-CAI-ICLF IN RDC AND
               LDC-IIC-ICLF IN LDC = RDC-IIC-ICLF IN RDC )
*% IF PGM_PQ
      *          GO TO CNT-LEE-RDC.
                GO TO CNT-SLC-ANL-KEY.

      *AFRI-INI
           IF LDC-VAL-CACT IN LDC NOT > ZEROES
               MOVE FIO-GET-NXT TO FIO-CMND
               GO TO LUP-LEE-LDC.
      *AFRI-FIN
*% END
*% IF PGM_PU
                GO TO CNT-LEE-RDC.

*% END
           PERFORM SET-FRM-IFLD.
           PERFORM PUT-TS-SLC.

           MOVE FIO-GET-NXT TO FIO-CMND.
           GO TO LUP-LEE-LDC.

*% IF PGM_PQ
      *CNT-LEE-RDC.
      *    MOVE FIO-GET-NXT TO FIO-CMND.
      *    GO TO LUP-LEE-RDC.

       CNT-SLC-ANL-KEY.
      *     IF FRM-IFLD NOT > ZEROES
      *         MOVE 'CLI    NOLDC' TO MSG-COD-MENS
      *         GO TO MSG-SLC-ANL-KEY.
*% END
*% IF PGM_PU
       CNT-LEE-RDC.
           MOVE FIO-GET-NXT TO FIO-CMND.
           GO TO LUP-LEE-RDC.

       CNT-SLC-ANL-KEY.
           IF FRM-IFLD NOT > ZEROES
               MOVE 'CLI    NOLDC' TO MSG-COD-MENS
               GO TO MSG-SLC-ANL-KEY.
*% END

           MOVE '00' TO FIO-STAT.
      *     MOVE SCR-STAT-CON TO SCR-STAT.
           GO TO FIN-SLC-ANL-KEY.
      *----------------------------------------------------------
       MSG-SLC-ANL-KEY.
           MOVE 'DEU' TO MSG-COD-SIST.
           PERFORM GET-MSG.
           MOVE MSG-GLS-DESC TO FRM-MENS.
*% IF PGM_PQ
           MOVE FIO-STAT-NEX TO FIO-STAT.
      *     MOVE '00' TO FIO-STAT.
      *     MOVE SCR-STAT-CON TO SCR-STAT.
      *     GO TO FIN-SLC-ANL-KEY.

*% END
*% IF PGM_PU
           MOVE '00' TO FIO-STAT.
      *     MOVE SCR-STAT-CON TO SCR-STAT.
           GO TO FIN-SLC-ANL-KEY.
*% END
       FIN-SLC-ANL-KEY.
           EXIT.

       SLC-PUT-SCR SECTION.
       INI-SLC-PUT-SCR.
       FIN-SLC-PUT-SCR.
           EXIT.

       SLC-MOV-TS-FRM-ELM SECTION.
       INI-SLC-MOV-TS-FRM-ELM.
*% IF PGM_PU
      *ISP-INI
           IF WSS-IND-PANT = 1
               PERFORM CLR-PANT-SLC
               PERFORM HBL-FLD.
      *ISP-FIN
*% END
           MOVE SLC-FRM-COD-TIPO TO
                    FRM-COD-TIPO IN SLC-FLD(WSS-IND-PANT).
           MOVE SLC-FRM-GLS-TLDC TO
                    FRM-GLS-TLDC IN SLC-FLD(WSS-IND-PANT).
           MOVE SLC-FRM-VAL-CMAX TO
                    FRM-VAL-CMAX IN SLC-FLD(WSS-IND-PANT).
           MOVE SLC-FRM-GLS-VCCM TO
                    FRM-GLS-VCCM IN SLC-FLD(WSS-IND-PANT).
           MOVE SLC-FRM-VAL-MNTO TO
                    FRM-VAL-MNTO IN SLC-FLD(WSS-IND-PANT).
           MOVE SLC-FRM-COD-VCMO TO
                    FRM-COD-VCMO IN SLC-FLD(WSS-IND-PANT).
           IF FRM-COD-VCMO IN SLC-FLD(WSS-IND-PANT) > SPACES
               MOVE 'TAB' TO TAB-COD-SIST
               MOVE 'VLR' TO TAB-COD-TTAB IN TAB
               MOVE FRM-COD-VCMO IN SLC-FLD(WSS-IND-PANT) TO
                      TAB-COD-CTAB IN TAB
               PERFORM BUS-TAB
               MOVE TAB-GLS-ABRV IN TAB TO
                              FRM-GLS-VCMO IN SLC-FLD(WSS-IND-PANT)
           ELSE
               MOVE SPACES TO FRM-GLS-VCMO IN SLC-FLD(WSS-IND-PANT).

       FIN-SLC-MOV-TS-FRM-ELM.
           EXIT.

       PUT-TS-SLC SECTION.
       INI-PUT-TS-SLC.
*% IF PGM_PQ
           IF SCR-OFRM-SRV AND
              WSS-IND-SIMU = 'OCCURS'
                GO TO  FIN-PUT-TS-SLC.



           MOVE SPACES TO SLC-ITEM.
           MOVE ZEROES TO SLC-FRM-VAL-MNTO.
*% END
           IF SCR-OFRM-SRV
               MOVE LDC-VAL-CMAX IN LDC TO FRM-VAL-CMAX-EDT
               MOVE FRM-VAL-CMAX-EDT TO SLC-FRM-VAL-CMAX-ALF
           ELSE
               MOVE LDC-VAL-CMAX IN LDC TO SLC-FRM-VAL-CMAX.

           MOVE LDC-COD-TIPO IN LDC TO SLC-FRM-COD-TIPO.
           MOVE LDC-GLS-DCOR IN LDC TO SLC-FRM-GLS-TLDC.

           IF LDC-COD-VCLC IN LDC > SPACES
               MOVE 'TAB' TO TAB-COD-SIST
               MOVE 'VLR' TO TAB-COD-TTAB IN TAB
               MOVE LDC-COD-VCLC IN LDC TO TAB-COD-CTAB IN TAB
               PERFORM BUS-TAB
               MOVE TAB-GLS-ABRV IN TAB TO SLC-FRM-GLS-VCCM
           ELSE
               MOVE SPACES   TO SLC-FRM-GLS-VCCM.

           MOVE SLC-NOM-TSSLC  TO QUE-COLA.
           MOVE SLC-LEN-TSSLC  TO QUE-LITM.
           MOVE SLC-ITEM       TO QUE-ITEM.
           MOVE QUE-PUT        TO QUE-CMND.
           PERFORM GNS-PRO-QUE.
*% IF PGM_PQ
           ADD 1 TO SCR-TOT-OCCU.



       FIN-PUT-TS-SLC.
           EXIT.
*% END
*% IF PGM_PU
       FIN-PUT-TS-SLC.
           EXIT.

       MOD-VEC-CCU SECTION.
       INI-MOD-VEC-CCU.
           PERFORM CLR-VEC-SIM.
           PERFORM PRO-SIM-LIB.
           IF MSG-COD-MENS > SPACES
               GO TO FIN-MOD-VEC-CCU.

           MOVE 1 TO QUE-NITM.

           MOVE SLC-NOM-TSSLC  TO QUE-COLA.
           MOVE SLC-LEN-TSSLC  TO QUE-LITM.
       LUP-LEE-TS-SLC.
           ADD 1 TO QUE-NITM.
           MOVE QUE-GET TO QUE-CMND.
           PERFORM GNS-PRO-QUE.
           IF QUE-STAT = QUE-STAT-OKS
               MOVE QUE-ITEM TO SLC-ITEM
               IF SLC-FRM-COD-TIPO > SPACES
                  IF SLC-FRM-VAL-MNTO > ZEROES
                     PERFORM MOD-VAL
                     IF MSG-COD-MENS > SPACES
                         GO TO FIN-MOD-VEC-CCU
                     ELSE
                         GO TO LUP-LEE-TS-SLC
                  ELSE
                   GO TO LUP-LEE-TS-SLC
               ELSE
                   GO TO FIN-MOD-VEC-CCU
           ELSE
               GO TO FIN-MOD-VEC-CCU.

       FIN-MOD-VEC-CCU.
           EXIT.

       MOD-VAL SECTION.
       INI-MOD-VAL.
           MOVE 0 TO WSS-N IN WSS-VARI.
       LUP-MOD-VAL.
           ADD 1 TO WSS-N IN WSS-VARI.
           IF CTOT-LCR(WSS-N) NOT > ZEROES OR
              WSS-N > WSS-N-MAX
               GO TO FIN-MOD-VAL.

           IF TIPO-LCR(WSS-N) NOT = SLC-FRM-COD-TIPO
              GO TO LUP-MOD-VAL.
           IF SLC-FRM-VAL-MNTO NOT > ZEROES
              GO TO LUP-MOD-VAL.
           MOVE SLC-FRM-VAL-MNTO TO WSS-VAL-MNTO IN WSS-VARI.
           MOVE SLC-FRM-COD-VCMO TO WSS-COD-MONE IN WSS-VARI.
           PERFORM CONV-MON-NAC.
           IF MSG-COD-MENS > SPACES
               GO TO FIN-MOD-VAL.

      *     ADD WSS-VAL-MNTO TO CUTI-LCR(WSS-N).
      *     SUBTRACT WSS-VAL-MNTO FROM CDIS-LCR(WSS-N).
      *AFRI-INI/MAYO-2007  (MAE -ALD)
      *    ADD WSS-VAL-MNTO TO WSS-VAL-MTSI IN WSS-VARI(WSS-N).
           MOVE WSS-VAL-MNTO TO WSS-VAL-MTSI IN WSS-VARI(WSS-N).
      *AFRI-FIN/MAYO-2007  (MAE -ALD)
       FIN-MOD-VAL.
           EXIT.

       GRA-CCU-SLC SECTION.
       INI-GRA-CCU-SLC.
           PERFORM OBT-CIC-SLC.
           IF CIC-STAT NOT = CIC-STAT-OKS
               GO TO FIN-GRA-CCU-SLC.

           MOVE CIC-CAI-ICIC IN CIC TO SLC-CAI-ISLC IN SLC.
           MOVE CIC-IIC-ICIC IN CIC TO SLC-IIC-ISLC IN SLC.
           MOVE DBC-CAI-ICLI IN SLC-FLD TO SLC-CAI-ICLI IN SLC.
           MOVE DBC-IIC-ICLI IN SLC-FLD TO SLC-IIC-ICLI IN SLC.
           MOVE ZEROES                  TO SLC-NUM-ISLC IN SLC.
           MOVE ZEROES                  TO WSS-N.


       LUP-GRA-CCU-SLC.
           ADD 1 TO WSS-N.
           IF ( CTOT-LCR(WSS-N) NOT > ZEROES AND
                WSS-VAL-MTSI IN WSS-VARI(WSS-N) NOT > ZEROES ) OR
              WSS-N > WSS-N-MAX
               GO TO CNT-GRA-CCU-SLC.

           ADD 1 TO SLC-NUM-ISLC IN SLC.
           MOVE TIPO-LCR(WSS-N) TO SLC-TIPO-LCR IN SLC.
           IF TIPO-LCR(WSS-N) NOT > SPACES
              MOVE 'LBR' TO TIPO-LCR(WSS-N).
           MOVE 'LDC'           TO FIO-SIST.
           MOVE 'TLC'           TO TAB-COD-TTAB IN TAB.
           MOVE TIPO-LCR(WSS-N) TO TAB-COD-CTAB IN TAB.
           MOVE FIO-GET-KEY     TO FIO-CMND.
           PERFORM GNS-FIO-TAB.
           MOVE TAB-COD-DAT3(10) TO TIPO-LCR(WSS-N).

           MOVE CTOT-LCR(WSS-N) TO SLC-CAPR-LCR IN SLC.
           MOVE CTOT-LCR(WSS-N) TO SLC-CTOT-LCR IN SLC.
           MOVE CUTI-LCR(WSS-N) TO SLC-CUTI-LCR IN SLC.
           MOVE CDIS-LCR(WSS-N) TO SLC-CDIS-LCR IN SLC.

           MOVE ZEROES          TO SLC-CMAJ-LCR IN SLC.
           MOVE SPACES          TO SLC-MENS-LCR IN SLC.
           MOVE SPACES          TO SLC-MEN2-LCR IN SLC.
           MOVE ZEROES          TO SLC-NMSG-LCR IN SLC.
           MOVE ZEROES          TO SLC-NMS2-LCR IN SLC.
           MOVE WSS-VAL-MTSI IN WSS-VARI(WSS-N)
                                TO SLC-VAL-MNTO IN SLC.
GGG   *    DISPLAY '*LUP-GRA-CCU-SLC* SLC-VAL-MNTO' SLC-VAL-MNTO IN SLC
      *AFRI-INI/MAYO-2007  (MAE -ALD)
           IF (FRM-VAL-MNTL IN SLC-FLD > ZEROES)
                MOVE ZEROES     TO SLC-VAL-MNTO IN SLC.
      *AFRI-FIN/MAYO-2007  (MAE -ALD)
           MOVE FIO-PUT TO FIO-CMND.
           PERFORM LDC-FIO-SLC.
           IF NOT FIO-STAT-OKS
               MOVE 'SLC    NOGRB' TO MSG-COD-MENS
               GO TO FIN-GRA-CCU-SLC.

           GO TO LUP-GRA-CCU-SLC.

       CNT-GRA-CCU-SLC.
           MOVE SLC-CAI-ISLC IN SLC TO SLC-CAI-ISLC-TS.
           MOVE SLC-IIC-ISLC IN SLC TO SLC-IIC-ISLC-TS.

           MOVE SLC-NOM-TS-KEYSLC   TO QUE-COLA.
           MOVE SLC-LEN-TS-KEYSLC   TO QUE-LITM.
           MOVE SLC-ITEM-KEYSLC     TO QUE-ITEM.
           MOVE QUE-PUT        TO QUE-CMND.
           PERFORM GNS-PRO-QUE.
      *    IF QUE-STAT = QUE-STAT-OKS
      *        DISPLAY 'LDCPUSLC COLA KEY GRABADA OK'.

      *AFRI-INI/MAYO-2007  (MAE -ALD)
           ADD 1 TO WSS-N.
           ADD 1 TO SLC-NUM-ISLC IN SLC.
           MOVE 'GLB'           TO SLC-TIPO-LCR IN SLC.
           MOVE 'GLB'           TO TIPO-LCR(WSS-N).

           MOVE CTOT-LCR(WSS-N) TO SLC-CAPR-LCR IN SLC.
           MOVE CTOT-LCR(WSS-N) TO SLC-CTOT-LCR IN SLC.
           MOVE CUTI-LCR(WSS-N) TO SLC-CUTI-LCR IN SLC.
           MOVE CDIS-LCR(WSS-N) TO SLC-CDIS-LCR IN SLC.

           MOVE ZEROES          TO SLC-CMAJ-LCR IN SLC.
           MOVE SPACES          TO SLC-MENS-LCR IN SLC.
           MOVE SPACES          TO SLC-MEN2-LCR IN SLC.
           MOVE ZEROES          TO SLC-NMSG-LCR IN SLC.
           MOVE ZEROES          TO SLC-NMS2-LCR IN SLC.
      *GVI-INI/JULIO-2007
      *    MOVE FRM-VAL-MNTL IN SLC-FLD   TO SLC-VAL-MNTO IN SLC.
           MOVE WSS-VAL-MNTL IN WSS-VARI  TO SLC-VAL-MNTO IN SLC.
GGG   *    DISPLAY '*CNT-GRA-CCU-SLC* SLC-VAL-MNTO' SLC-VAL-MNTO IN SLC
      *GVI-FIN/JULIO-2007

           MOVE FIO-PUT TO FIO-CMND.
           PERFORM LDC-FIO-SLC.
           IF NOT FIO-STAT-OKS
               MOVE 'SLC    NOGRB' TO MSG-COD-MENS
               GO TO FIN-GRA-CCU-SLC.
      *AFRI-FIN/MAYO-2007  (MAE -ALD)


       FIN-GRA-CCU-SLC.
           EXIT.

       OBT-CIC-SLC SECTION.
       INI-OBT-CIC-SLC.
           MOVE 'SSLC' TO CIC-CAI-ICIC IN CIC.
           MOVE CIC-GET TO CIC-CMND.
           PERFORM PRO-CIC.
           IF CIC-STAT NOT = CIC-STAT-OKS
               MOVE CIC-MENS TO FRM-MENS
               MOVE FIO-STAT-NEX TO FIO-STAT
           ELSE
               MOVE 'GNS' TO MSG-COD-SIST
               MOVE 'MSGKEY' TO MSG-COD-MENS
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC            TO WSS-CPT-DESC
               MOVE CIC-CAI-ICIC            TO WSS-CPT-CAI
               MOVE CIC-IIC-ICIC            TO WSS-CPT-IIC
               MOVE MSG-GLS-DATA            TO WSS-GLS-DATA
               MOVE WSS-CPT-NOMB-R          TO CPT-STRN
               PERFORM CPT-BLKS
               MOVE CPT-STRN                TO FRM-MENS.
       FIN-OBT-CIC-SLC.
           EXIT.

*% END

       CONV-MON-NAC SECTION.
       INI-CONV-MON-NAC.
*% IF PGM_PU
GGG   *    DISPLAY ' ---- LDCPUSLC      CONV-MON-NAC -----'
GGG   *    DISPLAY 'WSS-COD-MONE' WSS-COD-MONE IN WSS-VARI
GGG   *    DISPLAY 'WSS-VAL-MNTO PRIMA: ' WSS-VAL-MNTO IN WSS-VARI
*% END
           PERFORM OBT-COD-PESO.
           IF MSG-COD-MENS > SPACES
               GO TO FIN-CONV-MON-NAC.

*% IF PGM_PQ
           IF SLC-FRM-COD-VCMO = WSS-COD-PESO IN WSS-VARI
               MOVE SLC-FRM-VAL-MNTO TO WSS-VAL-MNTO IN WSS-VARI
*% END
*% IF PGM_PU
           IF WSS-COD-MONE IN WSS-VARI = WSS-COD-PESO IN WSS-VARI
*% END
               GO TO FIN-CONV-MON-NAC.

           PERFORM GET-FHOY.

*% IF PGM_PQ
           MOVE SLC-FRM-COD-VCMO         TO CAM-COD-VCAM IN CAM(1).
*% END
*% IF PGM_PU
           MOVE WSS-COD-MONE IN WSS-VARI TO CAM-COD-VCAM IN CAM(1).
*% END
           MOVE WSS-COD-PESO IN WSS-VARI TO CAM-COD-VCAM IN CAM(2).
           MOVE HOY-FHOY                 TO CAM-FEC-FCAM IN CAM(1)
                                            CAM-FEC-FCAM IN CAM(2).
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM TAB-FIO-CAM.
           IF NOT FIO-STAT-OKS OR
              CAM-MSC-STAT IN CAM NOT = 'S'
               MOVE 'CAM    NEX' TO MSG-COD-MENS
               GO TO FIN-CONV-MON-NAC.

*% IF PGM_PQ
           MULTIPLY CAM-SGV-VCAM IN CAM BY SLC-FRM-VAL-MNTO
                   GIVING WSS-VAL-MNTO IN WSS-VARI.
*% END
*% IF PGM_PU
           MULTIPLY CAM-SGV-VCAM IN CAM BY WSS-VAL-MNTO IN WSS-VARI
                   GIVING WSS-VAL-MNTO IN WSS-VARI.
GGG   *    DISPLAY 'WSS-VAL-MNTO DOPO : ' WSS-VAL-MNTO IN WSS-VARI.
*% END

       FIN-CONV-MON-NAC.
           EXIT.

       OBT-COD-PESO SECTION.
       INI-OBT-COD-PESO.
      * OBTIENE CODIGO VALOR DE CAMBIO DE PESOS MEDIANTE CIC DE LA MONED
           MOVE 'TAB'          TO FIO-SIST.
           MOVE 'VLR'          TO TAB-CIC-TTAB IN TAB.
           MOVE '0999  '       TO TAB-CIC-CTAB IN TAB.
           MOVE 'TAB-CIC-TABL' TO FIO-AKEY.
           MOVE FIO-GET-KEY    TO FIO-CMND.
           PERFORM GNS-FIO-TAB.
           IF NOT FIO-STAT-OKS
               MOVE 'TAB'          TO MSG-COD-SIST
               MOVE 'CIC0999  NEX' TO MSG-COD-MENS.

           MOVE TAB-COD-CTAB IN TAB TO WSS-COD-PESO IN WSS-VARI.
       FIN-OBT-COD-PESO.
           EXIT.

*% IF PGM_PQ
       BUS-CLI-CLF SECTION.
       INI-BUS-CLI-CLF.
           MOVE 99      TO CCU-NUM-MENS.
           MOVE 99      TO CCU-NUM-MEN2.

           MOVE SPACES  TO CCU-COD-MENS
                           CCU-COD-MEN2
                           CCU-COD-SIST.

           MOVE CCU-CIC-ICLI IN CCU-VARI TO RDC-CIC-ICLI IN RDC.
           MOVE LOW-VALUES               TO RDC-KEY-ICLF IN RDC.
           MOVE FIO-GET-NLS TO FIO-CMND.
           PERFORM LDC-FIO-RDC.
           IF NOT ( FIO-STAT-OKS AND
                    RDC-CIC-ICLI IN RDC = CCU-CIC-ICLI IN CCU-VARI )
              MOVE 'RDC    NEX' TO CCU-COD-MENS
              MOVE 20           TO CCU-NUM-MENS
              IF FIO-STAT-OKS
                 MOVE FIO-END-BRW TO FIO-CMND
                 PERFORM LDC-FIO-RDC.

           IF CCU-COD-MENS NOT = 'RDC    NEX'
              GO TO LUP-BUS-CLI-CLF.
           IF CCU-CAI-IOPC IN CCU-VARI(1) NOT > SPACES OR
              CCU-IIC-IOPC IN CCU-VARI(1) = ZEROES
              GO TO FIN-BUS-CLI-CLF.
       NO-ERROR-CLF-NEX.
           MOVE 51 TO CCU-NUM-MENS.
           GO TO FIN-BUS-CLI-CLF.
       LUP-BUS-CLI-CLF.
           MOVE RDC-KEY-ICLF IN RDC TO CCU-CIC-ICLF IN CCU-VARI.
           PERFORM BUS-CLF.
           IF NOT FIO-STAT-OKS OR
              FIO-STAT-OKS AND CCU-NUM-MENS = 99
               GO TO FIN-BUS-CLI-CLF.
           MOVE FIO-GET-NXT TO FIO-CMND.
           PERFORM LDC-FIO-RDC.
           IF FIO-STAT-OKS AND
              RDC-CIC-ICLI IN RDC = CCU-CIC-ICLI IN CCU-VARI
               GO TO LUP-BUS-CLI-CLF.
       FIN-BUS-CLI-CLF.
           EXIT.

       BUS-CLF SECTION.
       INI-BUS-CLF.
           MOVE CCU-CIC-ICLF IN CCU-VARI TO CLF-KEY-ICLF IN CLF.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM LDC-FIO-CLF.
           IF NOT FIO-STAT-OKS
               MOVE 'CLF    NEX' TO CCU-COD-MENS
               MOVE 1            TO CCU-NUM-MENS
               GO TO FIN-BUS-CLF.

           IF ( CLF-COD-STAT IN CLF = 'M' OR 'X' )
              AND CCU-IIC-IOPC(1) > ZEROES
                   OR
              ( CLF-COD-STAT IN CLF = 'M' OR 'X' ) AND
              CCU-IIC-IOPC(1) NOT > ZEROES AND CLF-MSC-STAT NOT = 'V'
               MOVE CLF-CIC-CREN IN CLF TO CLF-KEY-ICLF IN CLF
               MOVE FIO-GET-KEY TO FIO-CMND
               PERFORM LDC-FIO-CLF
               IF NOT FIO-STAT-OKS
                   MOVE 'CLF    NEX' TO CCU-COD-MENS
                   MOVE 1            TO CCU-NUM-MENS
                   GO TO FIN-BUS-CLF
               ELSE
                   MOVE 'A' TO CLF-MSC-STAT IN CLF
                   MOVE 'CLFREN-' TO CCU-COD-TMSG
                   MOVE 'M'       TO CCU-COD-CMSG
                   MOVE 51        TO CCU-NUM-MENS.

           IF CLF-COD-TOCF IN CLF NOT = 'CLF'
              MOVE 'CLF    NOVIG' TO CCU-COD-MENS
              MOVE 2              TO CCU-NUM-MENS
              GO TO FIN-BUS-CLF.

           IF CLF-FEC-FVEN IN CLF NOT > HOY-FHOY
               MOVE 'CLF    NOVIG' TO CCU-COD-MENS
               MOVE 2              TO CCU-NUM-MENS
               GO TO FIN-BUS-CLF.

           IF CLF-MSC-STAT IN CLF = 'V' AND
              CCU-IIC-IOPC(1) NOT > ZEROES
               MOVE 'CLF    NOACA' TO CCU-COD-MENS
               MOVE 51             TO CCU-NUM-MENS
               GO TO FIN-BUS-CLF.

           IF CLF-MSC-STAT IN CLF NOT = 'A'
               AND CCU-ESTA NOT > SPACES
               MOVE 'CLF    NOVIG' TO CCU-COD-MENS
               MOVE 2              TO CCU-NUM-MENS
               GO TO FIN-BUS-CLF.

           IF CCU-ESTA > SPACES AND
              CLF-MSC-STAT IN CLF NOT = CCU-ESTA
               MOVE 'CLFSTATNOVAL' TO CCU-COD-MENS
               MOVE 2              TO CCU-NUM-MENS
               GO TO FIN-BUS-CLF.

           MOVE 99     TO CCU-NUM-MENS.
           MOVE SPACES TO CCU-COD-MENS.
       FIN-BUS-CLF.
           EXIT.

       COPY GNSBVCOD.
       COPY GNSBVTAB.
       COPY GNSBGHOY.
       COPY TABBFCAM.
*% END
*% IF PGM_PU
       CLR-PANT-SLC SECTION.
       INI-CLR-PANT-SLC.
           MOVE SPACES TO FRM-COD-TIPO IN SLC-FLD(1).
           MOVE SPACES TO FRM-COD-TIPO IN SLC-FLD(2).
           MOVE SPACES TO FRM-COD-TIPO IN SLC-FLD(3).
           MOVE SPACES TO FRM-COD-TIPO IN SLC-FLD(4).
           MOVE SPACES TO FRM-COD-TIPO IN SLC-FLD(5).
           MOVE SPACES TO FRM-COD-TIPO IN SLC-FLD(6).
           MOVE SPACES TO FRM-COD-TIPO IN SLC-FLD(7).
           MOVE SPACES TO FRM-COD-TIPO IN SLC-FLD(8).
           MOVE SPACES TO FRM-COD-TIPO IN SLC-FLD(9).
           MOVE SPACES TO FRM-COD-TIPO IN SLC-FLD(10).
           MOVE SPACES TO FRM-GLS-TLDC IN SLC-FLD(1).
           MOVE SPACES TO FRM-GLS-TLDC IN SLC-FLD(2).
           MOVE SPACES TO FRM-GLS-TLDC IN SLC-FLD(3).
           MOVE SPACES TO FRM-GLS-TLDC IN SLC-FLD(4).
           MOVE SPACES TO FRM-GLS-TLDC IN SLC-FLD(5).
           MOVE SPACES TO FRM-GLS-TLDC IN SLC-FLD(6).
           MOVE SPACES TO FRM-GLS-TLDC IN SLC-FLD(7).
           MOVE SPACES TO FRM-GLS-TLDC IN SLC-FLD(8).
           MOVE SPACES TO FRM-GLS-TLDC IN SLC-FLD(9).
           MOVE SPACES TO FRM-GLS-TLDC IN SLC-FLD(10).
           MOVE ZEROES TO FRM-VAL-CMAX IN SLC-FLD(1).
           MOVE ZEROES TO FRM-VAL-CMAX IN SLC-FLD(2).
           MOVE ZEROES TO FRM-VAL-CMAX IN SLC-FLD(3).
           MOVE ZEROES TO FRM-VAL-CMAX IN SLC-FLD(4).
           MOVE ZEROES TO FRM-VAL-CMAX IN SLC-FLD(5).
           MOVE ZEROES TO FRM-VAL-CMAX IN SLC-FLD(6).
           MOVE ZEROES TO FRM-VAL-CMAX IN SLC-FLD(7).
           MOVE ZEROES TO FRM-VAL-CMAX IN SLC-FLD(8).
           MOVE ZEROES TO FRM-VAL-CMAX IN SLC-FLD(9).
           MOVE ZEROES TO FRM-VAL-CMAX IN SLC-FLD(10).
           MOVE SPACES TO FRM-GLS-VCCM IN SLC-FLD(1).
           MOVE SPACES TO FRM-GLS-VCCM IN SLC-FLD(2).
           MOVE SPACES TO FRM-GLS-VCCM IN SLC-FLD(3).
           MOVE SPACES TO FRM-GLS-VCCM IN SLC-FLD(4).
           MOVE SPACES TO FRM-GLS-VCCM IN SLC-FLD(5).
           MOVE SPACES TO FRM-GLS-VCCM IN SLC-FLD(6).
           MOVE SPACES TO FRM-GLS-VCCM IN SLC-FLD(7).
           MOVE SPACES TO FRM-GLS-VCCM IN SLC-FLD(8).
           MOVE SPACES TO FRM-GLS-VCCM IN SLC-FLD(9).
           MOVE SPACES TO FRM-GLS-VCCM IN SLC-FLD(10).
           MOVE ZEROES TO FRM-VAL-MNTO IN SLC-FLD(1).
           MOVE ZEROES TO FRM-VAL-MNTO IN SLC-FLD(2).
           MOVE ZEROES TO FRM-VAL-MNTO IN SLC-FLD(3).
           MOVE ZEROES TO FRM-VAL-MNTO IN SLC-FLD(4).
           MOVE ZEROES TO FRM-VAL-MNTO IN SLC-FLD(5).
           MOVE ZEROES TO FRM-VAL-MNTO IN SLC-FLD(6).
           MOVE ZEROES TO FRM-VAL-MNTO IN SLC-FLD(7).
           MOVE ZEROES TO FRM-VAL-MNTO IN SLC-FLD(8).
           MOVE ZEROES TO FRM-VAL-MNTO IN SLC-FLD(9).
           MOVE ZEROES TO FRM-VAL-MNTO IN SLC-FLD(10).
           MOVE SPACES TO FRM-COD-VCMO IN SLC-FLD(1).
           MOVE SPACES TO FRM-COD-VCMO IN SLC-FLD(2).
           MOVE SPACES TO FRM-COD-VCMO IN SLC-FLD(3).
           MOVE SPACES TO FRM-COD-VCMO IN SLC-FLD(4).
           MOVE SPACES TO FRM-COD-VCMO IN SLC-FLD(5).
           MOVE SPACES TO FRM-COD-VCMO IN SLC-FLD(6).
           MOVE SPACES TO FRM-COD-VCMO IN SLC-FLD(7).
           MOVE SPACES TO FRM-COD-VCMO IN SLC-FLD(8).
           MOVE SPACES TO FRM-COD-VCMO IN SLC-FLD(9).
           MOVE SPACES TO FRM-COD-VCMO IN SLC-FLD(10).
           MOVE SPACES TO FRM-GLS-VCMO IN SLC-FLD(1).
           MOVE SPACES TO FRM-GLS-VCMO IN SLC-FLD(2).
           MOVE SPACES TO FRM-GLS-VCMO IN SLC-FLD(3).
           MOVE SPACES TO FRM-GLS-VCMO IN SLC-FLD(4).
           MOVE SPACES TO FRM-GLS-VCMO IN SLC-FLD(5).
           MOVE SPACES TO FRM-GLS-VCMO IN SLC-FLD(6).
           MOVE SPACES TO FRM-GLS-VCMO IN SLC-FLD(7).
           MOVE SPACES TO FRM-GLS-VCMO IN SLC-FLD(8).
           MOVE SPACES TO FRM-GLS-VCMO IN SLC-FLD(9).
           MOVE SPACES TO FRM-GLS-VCMO IN SLC-FLD(10).
       FIN-CLR-PANT-SLC.
           EXIT.

       PRO-SIM-LIB SECTION.
       INI-PRO-SIM-LIB.

           MOVE 1 TO WSS-N.
           IF FRM-VAL-MNTL IN SLC-FLD NOT > ZEROES
               MOVE ZEROES TO WSS-VAL-MTSI IN WSS-VARI(WSS-N)
      *AFRI-INI/MAYO-2007  (MAE -ALD)
               PERFORM MOV-SIM-PAR
      *AFRI-FIN/MAYO-2007  (MAE -ALD)
               GO TO FIN-PRO-SIM-LIB.
           MOVE FRM-VAL-MNTL IN SLC-FLD TO WSS-VAL-MNTO IN WSS-VARI.
           MOVE FRM-COD-VCML IN SLC-FLD TO WSS-COD-MONE IN WSS-VARI.
           PERFORM CONV-MON-NAC.
           IF MSG-COD-MENS > SPACES
               GO TO FIN-PRO-SIM-LIB.

           MOVE WSS-VAL-MNTO TO WSS-VAL-MTSI IN WSS-VARI(WSS-N).
      *GVI-INI/JULIO-2007
           MOVE WSS-VAL-MNTO TO WSS-VAL-MNTL IN WSS-VARI.
      *GVI-FIN/JULIO-2007
       FIN-PRO-SIM-LIB.
           EXIT.

      *AFRI-INI/MAYO-2007  (MAE -ALD)
       MOV-SIM-PAR SECTION.
       INI-MOV-SIM-PAR.

           MOVE 1 TO WSS-J.
       LUP-VECTOR.
           IF (WSS-J > 10)
               GO TO FIN-MOV-SIM-PAR.

           IF (FRM-VAL-MNTO(WSS-J)  NOT > ZEROES)
               MOVE ZEROES TO WSS-VAL-MTSI IN WSS-VARI(WSS-J)
               GO TO NXT-VECTOR.

           MOVE FRM-VAL-MNTO(WSS-J) TO
                                WSS-VAL-MNTO IN WSS-VARI.
           MOVE FRM-COD-VCMO(WSS-J) TO
                                WSS-COD-MONE IN WSS-VARI.
           PERFORM CONV-MON-NAC.
           IF MSG-COD-MENS > SPACES
               GO TO FIN-MOV-SIM-PAR.

           MOVE WSS-VAL-MNTO TO WSS-VAL-MTSI IN WSS-VARI(WSS-J).

       NXT-VECTOR.
           ADD 1 TO WSS-J.
           GO TO LUP-VECTOR.

       FIN-MOV-SIM-PAR.
      *AFRI-FIN/MAYO-2007  (MAE -ALD)
           EXIT.


       CLR-VEC-SIM SECTION.
       INI-CLR-VEC-SIM.
           MOVE ZEROES TO WSS-N.
       LUP-CLR-VEC-SIM.
           ADD 1 TO WSS-N.
           IF WSS-N > WSS-N-MAX
               GO TO FIN-CLR-VEC-SIM.

           MOVE ZEROES TO WSS-VAL-MTSI IN WSS-VARI(WSS-N).
           GO TO LUP-CLR-VEC-SIM.
       FIN-CLR-VEC-SIM.
           EXIT.

       COPY GNSBVCOD.
       COPY GNSBVTAB.
       COPY GNSBEGLS.
       COPY GNSBGHOY.
       COPY TABBFCAM.

       VAL-CLF-IDC SECTION.
       INI-VAL-CLF-IDC.
           MOVE 'N'              TO WSS-IND-STAT IN WSS-VARI.
           MOVE WSS-CIC-ICLI-RDC TO RDC-CIC-ICLI IN RDC.
           MOVE SPACES           TO RDC-CIC-ICLF IN RDC.
           MOVE FIO-GET-NLS TO FIO-CMND.
           PERFORM LDC-FIO-RDC.
           MOVE FIO-STAT TO PGM-STAT-RDC.
           IF NOT ( FIO-STAT-OKS AND
                    WSS-CIC-ICLI-RDC = RDC-CIC-ICLI IN RDC)
               MOVE 'N' TO WSS-IND-STAT IN WSS-VARI
               GO TO BRW-VAL-CLF-IDC.
       LUP-VAL-CLF-IDC.
           MOVE RDC-CIC-ICLF IN RDC TO CLF-CIC-ICLF IN CLF.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM LDC-FIO-CLF.
           IF NOT FIO-STAT-OKS
               GO TO NXT-VAL-CLF-IDC.

      *CLF ACTIVADA-VIGENTE-CODIGO=CLF
           IF (CLF-MSC-STAT IN CLF = 'A' AND
              (CLF-FEC-FCIE IN CLF < HOY-FHOY OR
               CLF-FEC-FCIE IN CLF = HOY-FHOY OR
               CLF-FEC-FCIE IN CLF NOT > ZEROES ) AND
               CLF-COD-TOCF = 'CLF' )
               MOVE 'S' TO WSS-IND-STAT IN WSS-VARI
               GO TO BRW-VAL-CLF-IDC.

       NXT-VAL-CLF-IDC.
           MOVE FIO-GET-NXT TO FIO-CMND.
           PERFORM LDC-FIO-RDC.
           MOVE FIO-STAT TO PGM-STAT-RDC.
           IF FIO-STAT-OKS AND WSS-CIC-ICLI-RDC = RDC-CIC-ICLI IN RDC
              GO TO LUP-VAL-CLF-IDC.
       BRW-VAL-CLF-IDC.
           IF PGM-STAT-RDC-OKS
               MOVE FIO-END-BRW TO FIO-CMND
               PERFORM LDC-FIO-RDC.
       FIN-VAL-CLF-IDC.
           EXIT.

       LIMPIA-VEC-CCU SECTION.
       INI-LIMPIA-VEC-CCU.
           MOVE ZEROES TO WSS-N.
       LUP-LIMPIA-VEC-CCU.
           ADD 1 TO WSS-N.
           IF WSS-N > 30
               GO TO FIN-LIMPIA-VEC-CCU.

           MOVE ZEROES TO CMAJ-LCR(WSS-N).
           MOVE ZEROES TO CTOT-LCR(WSS-N).
           MOVE ZEROES TO CUTI-LCR(WSS-N).
           MOVE ZEROES TO CDIS-LCR(WSS-N).
           MOVE SPACES TO MENS-LCR(WSS-N).
           MOVE SPACES TO MEN2-LCR(WSS-N).
           MOVE ZEROES TO NMSG-LCR(WSS-N).
           MOVE ZEROES TO NMS2-LCR(WSS-N).

           GO TO LUP-LIMPIA-VEC-CCU.
       FIN-LIMPIA-VEC-CCU.
           EXIT.
*% END
*% END
*% IF INI_CMN_ACC
      *<<<< INI_CMN_ACC
      * OBTIENE CODIGO VALOR DE CAMBIO DE PESOS MEDIANTE CIC DE LA MONED
           MOVE 'TAB'          TO FIO-SIST.
           MOVE 'VLR'          TO TAB-CIC-TTAB IN TAB.
           MOVE '0999  '       TO TAB-CIC-CTAB IN TAB.
           MOVE 'TAB-CIC-TABL' TO FIO-AKEY.
           MOVE FIO-GET-KEY    TO FIO-CMND.
           PERFORM GNS-FIO-TAB.
           IF NOT FIO-STAT-OKS
               MOVE 'TAB'          TO MSG-COD-SIST
               MOVE 'CIC0999  NEX' TO MSG-COD-MENS
               PERFORM GET-MSG
               PERFORM PRG-ABT.
           MOVE TAB-COD-CTAB IN TAB TO CCU-COD-PESO IN CCU-VARI.

           MOVE DBC-CAI-ICLI IN SLC-FLD TO WSS-CAI-ICLI-RDC.
           MOVE DBC-IIC-ICLI IN SLC-FLD TO WSS-IIC-ICLI-RDC.
           PERFORM VAL-CLF-IDC.
           IF WSS-IND-STAT IN WSS-VARI = 'N'
               MOVE 'LDC'          TO MSG-COD-SIST
               MOVE 'CLI    NOCLF' TO MSG-COD-MENS
               PERFORM GET-MSG
               GO TO FIN-CMN-ACC.

           MOVE ZEROES              TO CCU-VAL-CTOT IN CCU-VARI.
           MOVE ZEROES              TO CCU-VAL-CUTI IN CCU-VARI.
           MOVE ZEROES              TO CCU-VAL-CDIS IN CCU-VARI.
           MOVE SPACES              TO CCU-CAI-ICLI.
           MOVE ZEROES              TO CCU-IIC-ICLI.
           MOVE CLF-CIC-ICLF IN CLF TO CCU-CIC-ICLF.
           MOVE SPACES              TO CCU-CAI-IOPC(1).
           MOVE ZEROES              TO CCU-IIC-IOPC(1).
           MOVE SPACES              TO CCU-CAI-DCAN(1).
           MOVE ZEROES              TO CCU-IIC-DCAN(1).
           MOVE ZEROES              TO CCU-NUM-DCAN(1).
           MOVE SPACES              TO CCU-OPE-INDS.
           MOVE 'S'                 TO CCU-IND-PMEC IN CCU-VARI.
           MOVE SPACES TO CCU-MENS.
           MOVE ZEROES TO CCU-NUM-MENS.
           MOVE ZEROES TO CCU-NUM-MEN2.

           PERFORM LIMPIA-VEC-CCU.
           PERFORM LDC-LNK-CCU.
           IF CCU-COD-MENS = 'CLF    NOACA' OR 'CLF    NOVIG'
              MOVE ZEROES TO CTOT-LCR(1).

            MOVE SPACES TO MSG-COD-MENS.
            PERFORM MOD-VEC-CCU.
              IF MSG-COD-MENS NOT > SPACES
                  PERFORM GRA-CCU-SLC
              ELSE
      *AFRI-PRUEBA-INI
                  MOVE 'LDC'          TO MSG-COD-SIST
                  PERFORM GET-MSG
                  MOVE '00' TO FIO-STAT
      *AFRI-PRUEBA-FIN
                  GO TO FIN-CMN-ACC.

       CNT-CMN-ACC.
      *>>>>
*% END
*% IF INI_SCR_EXIT AND PGM_PU
      *<<<< INI_SCR_EXIT AND PGM_PU
           IF WSS-FRM-FFLD = FRM-FFLD-PF5 OR
              WSS-FRM-FFLD = FRM-FFLD-PF6
               MOVE SCR-INST-GFL TO SCR-INST.

           MOVE SCR-VARI TO WSS-DESPL.

      *>>>>
*% END
*% IF INI_SCR_PUTA AND PGM_PU
      *<<<< INI_SCR_PUTA AND PGM_PU
      *PTC-INI
           IF FRM-SUAR EQUAL FRM-SUAR-MAL OR FRM-SUAR-CLR
               MOVE 'S' TO SCR-IERR.
      *PTC-FIN
           IF ( WSS-FRM-FFLD = FRM-FFLD-PF5 OR
                WSS-FRM-FFLD = FRM-FFLD-PF6 ) AND
                WSS-HAY-ERRO = 'N' AND
                FRM-SUAR NOT = FRM-SUAR-MAL
               MOVE SPACES TO SLC-GLS-MENS IN SLC-FLD.

           MOVE SCR-NMAP TO FRM-NAME.
           MOVE SCR-NLIB TO FRM-NLIB.
           MOVE SLC-FLD TO FRM-DFLD.
           MOVE FRM-PUT-ALL TO FRM-CMND.
           PERFORM GNS-PRO-FRM.
           GO TO FIN-SCR-PUTA.
      *>>>>
*% END
*% IF INI_SCR_GFLD AND PGM_PU
      *<<<< INI_SCR_GFLD AND PGM_PU
      *ISP-INI
           IF FRM-FFLD = FRM-FFLD-PF5
                MOVE FRM-FFLD-RET TO FRM-FFLD
           ELSE
           IF FRM-FFLD = FRM-FFLD-PF6
                MOVE FRM-FFLD-RET TO FRM-FFLD.

      *ISP-FIN
           IF NOT ( FRM-FFLD = FRM-FFLD-RET  OR FRM-FFLD-PF10 OR
                               FRM-FFLD-PF12 OR FRM-FFLD-PF3 )
               MOVE 'PFSINV    ' TO MSG-COD-MENS
               MOVE 'GNS' TO MSG-COD-SIST
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS
               PERFORM FST-FLD-SLC
               PERFORM SCR-MSSG
               PERFORM SCR-PUTA
               PERFORM SCR-EXIT.
           MOVE FRM-DFLD TO SLC-FLD.
           IF FRM-STAT-ABT
               GO TO FIN-SCR-GFLD.
           MOVE FRM-SUAR-OKS TO FRM-SUAR.
           PERFORM VAL-NUM-KEY-SLC.
           IF FRM-SUAR EQUAL FRM-SUAR-MAL OR FRM-SUAR-CLR
      *PTC-INI
               MOVE 'S' TO SCR-IERR
      *PTC-FIN
               PERFORM SCR-MSSG
               PERFORM EDT-KEY-SLC
               PERFORM SCR-PUTA
               PERFORM SCR-EXIT.
           PERFORM VAL-NUM-FLD-SLC.
           IF FRM-SUAR EQUAL FRM-SUAR-MAL OR FRM-SUAR-CLR
      *PTC-INI
               MOVE 'S' TO SCR-IERR
      *PTC-FIN
               PERFORM SCR-MSSG
               PERFORM EDT-KEY-SLC
               PERFORM EDT-FLD-SLC
               PERFORM SCR-PUTA
               PERFORM SCR-EXIT.
           PERFORM VAL-MKY-SLC.
           IF FRM-SUAR EQUAL FRM-SUAR-MAL OR FRM-SUAR-CLR
      *PTC-INI
               MOVE 'S' TO SCR-IERR
      *PTC-FIN
               GO TO ERR-SCR-GFLD.
           PERFORM VAL-FLD-SLC.
           IF FRM-SUAR EQUAL FRM-SUAR-MAL OR FRM-SUAR-CLR
               GO TO ERR-SCR-GFLD.
           PERFORM VAL-CON-FLD-SLC.
           IF NOT ( FRM-SUAR EQUAL FRM-SUAR-MAL OR FRM-SUAR-CLR )
               GO TO FIN-SCR-GFLD.
           IF FRM-UCUR NOT > SPACES
               PERFORM FST-FLD-SLC.
       ERR-SCR-GFLD.
      *PTC-INI
           MOVE 'S' TO SCR-IERR.
      *PTC-FIN
           PERFORM SCR-MSSG.
           PERFORM EDT-KEY-SLC.
           PERFORM EDT-FLD-SLC.
           PERFORM SCR-PUTA.
           PERFORM SCR-EXIT.
           GO TO FIN-SCR-GFLD.
      *>>>>
*% END
*% IF FIN_PRO_CONF
      *<<<< FIN_PRO_CONF

      *ISP-INI

           PERFORM SLC-PROC-ITEM.

           IF WSS-FRM-FFLD = FRM-FFLD-RET
                 MOVE ZEROES TO QUE-NITM
           ELSE
           IF WSS-FRM-FFLD = FRM-FFLD-PF6
                 COMPUTE QUE-NITM = (SCR-NUM-PANT * WSS-MAX-PANT)
                 IF QUE-NITM NOT < SCR-TOT-OCCU
                     MOVE 'S' TO WSS-HAY-ERRO
                     MOVE 'LDC' TO MSG-COD-SIST
                     MOVE 'SLCPF6 NEX' TO MSG-COD-MENS
                     PERFORM GET-MSG
                     MOVE MSG-GLS-DESC TO FRM-MENS
                     COMPUTE QUE-NITM =
                       (SCR-NUM-PANT * WSS-MAX-PANT) - WSS-MAX-PANT
                 ELSE
                     ADD 1 TO SCR-NUM-PANT
           ELSE
           IF WSS-FRM-FFLD = FRM-FFLD-PF5
                 COMPUTE QUE-NITM =
                    (SCR-NUM-PANT * WSS-MAX-PANT ) -
                    ( 2 * WSS-MAX-PANT - 1 )
                 IF QUE-NITM < 1
                    MOVE 'S' TO WSS-HAY-ERRO
                    MOVE 'LDC' TO MSG-COD-SIST
                    MOVE 'SLCPF5 NEX' TO MSG-COD-MENS
                    PERFORM GET-MSG
                    MOVE MSG-GLS-DESC TO FRM-MENS
                    COMPUTE QUE-NITM =
                     (SCR-NUM-PANT * WSS-MAX-PANT ) - WSS-MAX-PANT
                 ELSE
                    SUBTRACT 1 FROM QUE-NITM
                    SUBTRACT 1 FROM SCR-NUM-PANT.

           MOVE SLC-NOM-TSSLC  TO QUE-COLA.
           MOVE SLC-LEN-TSSLC  TO QUE-LITM.
       SLC-CIC-LEE-TS.
           ADD 1 TO QUE-NITM.
           MOVE QUE-NITM TO WSS-ISLC-AUX.
           MOVE QUE-GET TO QUE-CMND.
           PERFORM GNS-PRO-QUE.
           IF QUE-STAT = QUE-STAT-OKS
               MOVE QUE-ITEM TO SLC-ITEM
               PERFORM SLC-MOV-TS-FRM
               GO TO SLC-CIC-LEE-TS.

      *>>>>
*% END
*% IF PFS_SCR_GKEY_PREV
      *<<<< PFS_SCR_GKEY_PREV
           IF WSS-FRM-FFLD = FRM-FFLD-PF5 OR
              WSS-FRM-FFLD = FRM-FFLD-PF6
                 IF FRM-FFLD = FRM-FFLD-PF5
                     MOVE FRM-FFLD-RET TO FRM-FFLD
              ELSE
                 IF FRM-FFLD = FRM-FFLD-PF6
                     MOVE FRM-FFLD-RET TO FRM-FFLD.
      *>>>>
*% END
*% IF FIN_PUT_SCR
      *<<<< FIN_PUT_SCR

      * AQUI MOVER LOS DATOS DE TS-SLC A PANTALLA
           MOVE SCR-TOT-OCCU TO SLC-MAS-NUM-TOCC.
           MOVE WSS-IND-HMAS TO SLC-MAS-IND-HMAS.

           IF WSS-FRM-FFLD = FRM-FFLD-RET
                 MOVE ZEROES TO QUE-NITM
           ELSE
           IF WSS-FRM-FFLD = FRM-FFLD-PF6
                 COMPUTE QUE-NITM = (SCR-NUM-PANT * WSS-MAX-PANT)
                 IF QUE-NITM NOT < SCR-TOT-OCCU
                     MOVE 'LDC' TO MSG-COD-SIST
                     MOVE 'SLCPF6 NEX' TO MSG-COD-MENS
                     PERFORM GET-MSG
                     MOVE MSG-GLS-DESC TO FRM-MENS
                     COMPUTE QUE-NITM =
                       (SCR-NUM-PANT * WSS-MAX-PANT) - WSS-MAX-PANT
                 ELSE
                     ADD 1 TO SCR-NUM-PANT
           ELSE
           IF WSS-FRM-FFLD = FRM-FFLD-PF5
                 COMPUTE QUE-NITM =
                    (SCR-NUM-PANT * WSS-MAX-PANT ) -
                    ( 2 * WSS-MAX-PANT - 1 )
                 IF QUE-NITM < 1
                    MOVE 'LDC' TO MSG-COD-SIST
                    MOVE 'SLCPF5 NEX' TO MSG-COD-MENS
                    PERFORM GET-MSG
                    MOVE MSG-GLS-DESC TO FRM-MENS
                    COMPUTE QUE-NITM =
                     (SCR-NUM-PANT * WSS-MAX-PANT ) - WSS-MAX-PANT
                 ELSE
                    SUBTRACT 1 FROM QUE-NITM
                    SUBTRACT 1 FROM SCR-NUM-PANT.

           MOVE SLC-NOM-TSSLC  TO QUE-COLA.
           MOVE SLC-LEN-TSSLC  TO QUE-LITM.
       SLC-CIC-LEE-TS.
           ADD 1 TO QUE-NITM.
           MOVE QUE-GET TO QUE-CMND.
           PERFORM GNS-PRO-QUE.
           IF QUE-STAT = QUE-STAT-OKS
               MOVE QUE-ITEM TO SLC-ITEM
               PERFORM SLC-MOV-TS-FRM
               GO TO SLC-CIC-LEE-TS
           ELSE
           IF QUE-NITM = 1
               MOVE 'LDC' TO MSG-COD-SIST
               MOVE 'SLC    NEX' TO MSG-COD-MENS
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS.

      *>>>>
*% END
*% IF PUT_SCR
      *<<<< PUT_SCR
           IF WSS-FRM-FFLD = FRM-FFLD-PF5 OR
              WSS-FRM-FFLD = FRM-FFLD-PF6
              GO TO EXT-PUT-SCR.

           PERFORM SLC-PUT-SCR.

       EXT-PUT-SCR.
      *>>>>
*% END
*% IF FIN_SCR_VARI
      *<<<< FIN-SCR-VARI
           03  SCR-NUM-PANT                         PIC 9(03).
           03  SCR-TOT-OCCU                         PIC 9(03).
      *>>>>
*% END
