*%! Codigo adicional para archivo LDCPAARC
*%! INCLUDE DE ELEMENTOS DE C.A. PARA PLATAFORMA COMERCIAL
*% IF PGM_CHI AND PGM_BCI
*%     INCLUDE 'GNSTXT:GNSPPPTC.TXT'
*% END
*% LARGO_TOTAL_COMMAREA = 600
*%! LARGO_MI_COMMAREA = 350
*% IF PGM_CHI AND PGM_DTC
*% INCLUDE 'GNSSRC:MANEJO_VSI.SRC'
*% END
*% NO_TIENE_TIMESTAMP = TRUE
*% IF CMT_ID
      *-------------------------------------------------------------
      *MODIFICACIONES:
      *--------------
      *OBJETIVO: SE INHIBE LECTURA ARC
      *PROYECTO: OPTIMIZACION L011
      *FECHA   : JUNIO DE 2016
      *AUTOR   : BEENGA
      *ETIQUETA: * NGA INI OPTIMIZACION L011 15-06-2016
      *-------------------------------------------------------------
*% END
*% IF PGM_BMS AND FIN_SCR_VARI
      *<<<< PGM_BMS AND FIN_SCR_VARI
       COPY LDCWGENG.
           03 SCR-CLF     VALUE SPACES            PIC X(64).
           03 SCR-LDC     VALUE SPACES            PIC X(100).
      *>>>>
      *<<<< FIN_SCR_VARI
      *FLB CST  13-JAN-1995 AHORA, ADEMAS CUENTA CUANTOS ARC
           03 SCR-FS-ARC                          PIC 9(02).
           03 SCR-ARC-DISP    VALUE SPACES        PIC X(48).
      *>>>>
*% END
*% IF WSS
      *<<<< WSS
*% IF PGM_PQ
       COPY LDCMXW01.
*% END
       COPY LDCWGPMP.
      *INI IAS 23/11/92
*% IF NOT PGM_PTC
      *<<<< NOT PGM_PTC
       COPY GNSWGQUE.
      *>>>>
*% END
       01 QUE-ARC-VARI.
           03 QUE-OCC             OCCURS 9.
              05 QUE-ARC-CAI-IOPC                  PIC X(04).
              05 QUE-ARC-IIC-IOPC                  PIC 9(08).
              05 QUE-ARC-IND-IOPC                  PIC X(01).
      *FIN IAS
       01  WSS-VARI.
*% IF PGM_PU
      *<<<< PGM_PU
      *SMC-INI 26-10-1993
           03  WSS-VSN-VCTE                        PIC X(01).
               88  USA-CTE       VALUE 'N'.
           03  WSS-VSN-VCEX                        PIC X(01).
               88  USA-CEX       VALUE 'N'.
           03  WSS-VSN-VTCR                        PIC X(01).
               88  USA-TCR       VALUE 'N'.
           03  WSS-VSN-VLEA                        PIC X(01).
               88  USA-LEA       VALUE 'N'.
      *SMC-FIN 26-10-1993
      *>>>>
*% END
           03  WSS-CIC-ICLI                       PIC X(12).
           03  WSS-COD-COPE.
               05  WSS-COD-TOPE                   PIC X(03).
               05  WSS-COD-AOPE                   PIC X(03).
           03  WSS-NUM-PER                        PIC 9(03).
           03  WSS-IND-PER                        PIC X(01).
           03  ARC-KEY-IARC.
               05  ARC-KEY-ILDC.
                   07  ARC-CAI-ICLF               PIC X(04).
                   07  ARC-IIC-ICLF               PIC X(08).
*% IF PGM_DB2
                   07  ARC-NUM-ILDC   COMP        PIC S9(04).
               05  ARC-NUM-IARC       COMP        PIC S9(04).
           03  WSS-MOV     COMP VALUE ZEROES      PIC S9(04).
*% ELSE
                   07  ARC-NUM-ILDC               PIC 9(02).
               05  ARC-NUM-IARC                   PIC 9(01).
           03  WSS-MOV        VALUE ZEROES        PIC 9(02).
*% END
           03  WSS-IFLD       VALUE ZEROES        PIC 9(02).
           03  WSS-IMAX       VALUE 9             PIC 9(02).
*% IF PGM_PU
      *<<<< PGM_PU
           03  WSS-CIC-TOOC   VALUE ZEROES        PIC X(12).
           03  WSS-CTA-CTE    VALUE ZEROES        PIC 9(02).
           03  WSS-VSN-OCAI                       PIC X(01).
      *FLB CST  10-OCT-1994 ASIGNA EL IIC DE LA OPC
           03  WSS-VSN-AOPC                       PIC X(01).
      *FLB CST  17-OCT-1994 PERMITE O NO TIO SIN AUX
           03  WSS-VSN-AXOB                       PIC X(01).
      *FLB CST  28-NOV-1994 POR LINEA LIBRE DISPONIBILIDAD
           03  WSS-EXI-ARC                        PIC X(01).
      *>>>>
*% END
*% IF PGM_DTC
      *<<<< PGM_DTC
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-CLF-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-ARC-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-RDC-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-DBC-REQA==.
      *>>>>
*% END
*% IF PGM_DB2
           EXEC SQL INCLUDE LDCBRCLF END-EXEC.
       COPY GNSWGRQS REPLACING ==SQL-REQA== BY ==SQL-CLF-REQA==.
           EXEC SQL INCLUDE LDCBRARC END-EXEC.
       COPY GNSWGRQS REPLACING ==SQL-REQA== BY ==SQL-ARC-REQA==.
           EXEC SQL INCLUDE LDCBRRDC END-EXEC.
       COPY GNSWGRQS REPLACING ==SQL-REQA== BY ==SQL-RDC-REQA==.
           EXEC SQL INCLUDE SGCBRDBC END-EXEC.
       COPY GNSWGRQS REPLACING ==SQL-REQA== BY ==SQL-DBC-REQA==.
*% IF PGM_PU
      *<<<< PGM_PU
      *INI IAS
           EXEC SQL INCLUDE COLBROPC END-EXEC.
       COPY GNSWGRQS REPLACING ==SQL-REQA== BY ==SQL-OPC-REQA==.
      *FIN IAS
           EXEC SQL INCLUDE SGCBROPE END-EXEC.
       COPY GNSWGRQS REPLACING ==SQL-REQA== BY ==SQL-OPE-REQA==.
           EXEC SQL INCLUDE SGCBRRCO END-EXEC.
       COPY GNSWGRQS REPLACING ==SQL-REQA== BY ==SQL-RCO-REQA==.
      *>>>>
*% END           
*% ELSE
       COPY LDCBRCLF.
       COPY LDCBRARC.
       COPY LDCBRRDC.
       COPY SGCBRDBC.

*% IF PGM_DTC
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-TIO-REQA==.
*% END
*% IF PGM_PU
      *<<<< PGM_PU
      *INI IAS
       COPY COLBROPC.
*% IF PGM_DTC
      *<<<< PGM_DTC
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-CIC-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-OPC-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-OPE-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-RCO-REQA==.
      *>>>>
*% END
      *FIN IAS
      *AMP-INI  9-OCT-1993  
       COPY SGCBROPE.
       COPY SGCBRRCO.
      *AMP-FIN  9-OCT-1993  

      *FLB CST  10-OCT-1994 VALIDA TIPO DE LINEA
       COPY LDCWGTLC.
      *>>>>
*% END
*% END
       COPY TABBRTIO.
*% IF PGM_PU
      *<<<< PGM_PU
      *AMP-INI  9-OCT-1993  
       COPY TABWGCTE.
      *AMP-FIN  9-OCT-1993  
       COPY GNSBRCIC.
       COPY GNSWGCIC.
       COPY GNSWGHOY.
      *>>>>
*% ELSE
       COPY GNSWGCPT.
*% END
      *>>>>
*% END
*% IF SYS_SCOD AND PGM_DB2 AND PGM_PQ
      *<<<< SYS_SCOD AND PGM_DB2 AND PGM_PQ
      *JSS-IBM
           IF SYS-SCOD = 'SD'
*%!            MOVE +{gnstca} TO SYS-TCMA
               MOVE +9000 TO SYS-TCMA
               EXEC CICS RETRIEVE
                 INTO(SCR-VARI) LENGTH(SYS-TCMA)
               END-EXEC.
      *>>>>
*% END
*% IF INI_FIO
      *<<<< INI_FIO
      *INI IAS 23/11/92
           PERFORM GNS-ERR-QUE.
      *FIN IAS
      *>>>>
*% END
*% IF PGM_PQ AND INI_FIO
      *<<<< PGM_PQ AND INI_FIO
*% IF PGM_CHI AND PGM_BCI
      *<<<< ISP-INI  24-JAN-1996 11:35:48 
           IF SCR-OFRM-SRV
              MOVE WSS-IDX-IARC TO SCR-IPRO
           ELSE
      *<<<< ISP-FIN  24-JAN-1996 11:35:48 
*% END
           IF SCR-DESDE-CMN
               MOVE SPACES TO SCR-VEC-ENG
               MOVE 1 TO SCR-IPRO
               GO TO FIN-INI-FIO.
           IF SCR-INST-EXT = WSS-INST-FPEN-CIC
               MOVE WSS-INST-NULL TO SCR-INST-EXT
               PERFORM ING-FPEN-CIC.
       FIN-INI-FIO.
      *>>>>
*% END
*% IF PGM_VMS AND INI_FIO
      *<<<< PGM_VMS AND INI_FIO
           MOVE FIO-ACCS-UPD TO FIO-ACCS.
           MOVE FIO-ACC      TO FIO-CMND.
           MOVE 'TAB'        TO FIO-SIST.
           PERFORM GNS-FIO-TAB.
           MOVE FIO-INP TO FIO-CMND.
           PERFORM GNS-FIO-TAB.

           MOVE FIO-ACCS-UPD TO FIO-ACCS.
           MOVE FIO-ACC      TO FIO-CMND.
           MOVE 'DEU'        TO FIO-SIST.
           PERFORM GNS-FIO-TAB.
           MOVE FIO-INP TO FIO-CMND.
           PERFORM GNS-FIO-TAB.

           MOVE FIO-ACCS-UPD TO FIO-ACCS.
           MOVE FIO-ACC      TO FIO-CMND.
           MOVE 'LDC'        TO FIO-SIST.
           PERFORM LDC-FIO-CLF.
           MOVE FIO-UPD TO FIO-CMND.
           PERFORM LDC-FIO-CLF.

           MOVE FIO-ACCS-UPD TO FIO-ACCS.
           MOVE FIO-ACC      TO FIO-CMND.
           MOVE 'LDC'        TO FIO-SIST.
           PERFORM LDC-FIO-ARC.
           MOVE FIO-UPD TO FIO-CMND.
           PERFORM LDC-FIO-ARC.

      *>>>>
*% END
*% IF FND_KEY
      *<<<< FND_KEY
           MOVE SPACES TO MSG-COD-MENS.
           IF SCR-CCPP = 'ACC' AND SCR-STAT = SCR-STAT-CON AND
              LDC-NUM-ILDC IN ARC-FLD = ZEROES
                MOVE 1 TO LDC-NUM-ILDC IN LDC.
      *>>>>
*% END
*% IF FIN_FND_KEY
      *<<<< FIN_FND_KEY
           IF NOT FIO-STAT-OKS
               MOVE 'DEU'        TO MSG-COD-SIST
               MOVE 'LDC    NEX' TO MSG-COD-MENS
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS
               MOVE FIO-STAT-NEX TO FIO-STAT
               MOVE SCR-STAT-CON TO SCR-STAT
               GO TO FIN-FND-KEY.

      *LTM-INI
           MOVE 'RDC-KEY-ICLF' TO FIO-AKEY.
           MOVE LDC-CAI-ICLF IN ARC-FLD TO RDC-CAI-ICLF IN RDC.
           MOVE LDC-IIC-ICLF IN ARC-FLD TO RDC-IIC-ICLF IN RDC.
           MOVE FIO-GET-NLS TO FIO-CMND.
           PERFORM LDC-FIO-RDC.
           IF (NOT FIO-STAT-OKS) OR
              (RDC-CAI-ICLF IN RDC NOT = LDC-CAI-ICLF IN ARC-FLD) OR
              (RDC-IIC-ICLF IN RDC NOT = LDC-IIC-ICLF IN ARC-FLD)
      *        CLF no tiene RDC asociado
               MOVE 'DEU'         TO MSG-COD-SIST
               MOVE 'RDC    NEX'  TO MSG-COD-MENS
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC  TO FRM-MENS
               MOVE '00'          TO FIO-STAT
               MOVE SCR-STAT-CON  TO SCR-STAT
               GO TO FIN-FND-KEY
           ELSE
               MOVE RDC-CIC-ICLI   TO WSS-CIC-ICLI IN WSS-VARI
               MOVE 'RDC-KEY-ICLF' TO FIO-AKEY
               MOVE FIO-GET-NXT    TO FIO-CMND
               PERFORM LDC-FIO-RDC
               IF FIO-STAT-OKS AND
                  RDC-CAI-ICLF IN RDC = LDC-CAI-ICLF IN ARC-FLD AND
                  RDC-IIC-ICLF IN RDC = LDC-IIC-ICLF IN ARC-FLD
                   MOVE 'MULTIPLES CLIENTES' TO DBC-GLS-NOMC IN DBC
                   MOVE ZEROES               TO DBC-NUM-ICLI IN DBC
                   MOVE SPACES               TO DBC-VRF-ICLI IN DBC
                                                DBC-IND-ICLI IN DBC
                   MOVE IDC-INIC-GLS         TO DBC-GLS-ICLI IN DBC
                   MOVE PGM-SOKS             TO PGM-STAT-DBC
                   IF SCR-CCPP = 'MOD' 
                       PERFORM PUT-LDC-ARC
                       PERFORM PUT-DBC-ARC
                   ELSE
                       NEXT SENTENCE
               ELSE
                   MOVE WSS-CIC-ICLI IN WSS-VARI
                                     TO DBC-CIC-ICLI IN DBC
                   MOVE FIO-GET-KEY  TO FIO-CMND
                   PERFORM SGC-FIO-DBC
                   MOVE FIO-STAT     TO PGM-STAT-DBC       
                   IF NOT FIO-STAT-OKS
      *                RDC no tiene DBC asociado
                       MOVE 'TAB'         TO MSG-COD-SIST
                       MOVE 'CLI    NEX'  TO MSG-COD-MENS
                       PERFORM GET-MSG
                       MOVE MSG-GLS-DESC  TO FRM-MENS
                       MOVE '00'          TO FIO-STAT
                       MOVE SCR-STAT-CON  TO SCR-STAT
                       GO TO FIN-FND-KEY
                   ELSE
                       MOVE DBC-GLS-NOMC IN DBC  TO CPT-STRN
                       PERFORM CPT-BLKS
                       MOVE CPT-STRN TO DBC-GLS-NOMC IN DBC
                       IF SCR-CCPP = 'MOD' 
                           PERFORM PUT-LDC-ARC
                           PERFORM PUT-DBC-ARC.
      *LTM-FIN

           MOVE LDC-CAI-ICLF IN LDC TO CLF-CAI-ICLF IN CLF.
           MOVE LDC-IIC-ICLF IN LDC TO CLF-IIC-ICLF IN CLF.
           MOVE FIO-GET-KEY    TO FIO-CMND.
           PERFORM LDC-FIO-CLF.
           MOVE FIO-STAT TO PGM-STAT-CLF.
           IF NOT FIO-STAT-OKS
      *        LDC no tiene CLF asociado
               MOVE 'DEU' TO MSG-COD-SIST
               MOVE 'CLF    NEX' TO MSG-COD-MENS
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS
               MOVE FIO-STAT-NEX TO FIO-STAT
               MOVE SCR-STAT-CON TO SCR-STAT
               GO TO FIN-FND-KEY.
      *AFRI-INI/15-10-200 TEMA INMOBILIARIO TIPO CLF
           MOVE 'DEU'                  TO FIO-SIST.
           MOVE 'CNT'                  TO TAB-COD-TTAB IN TAB.
           MOVE CLF-COD-TOCF IN CLF    TO TAB-COD-CTAB IN TAB.
           MOVE FIO-GET-KEY            TO FIO-CMND.
           PERFORM GNS-FIO-TAB.
           IF FIO-STAT-OKS AND TAB-IND-VIGE IN TAB = 'S'
                MOVE 'DEU'             TO MSG-COD-SIST
                MOVE 'TIO    NOCLF'     TO MSG-COD-MENS
                PERFORM GET-MSG
                MOVE MSG-GLS-DESC TO FRM-MENS                           
                MOVE FIO-STAT-NEX TO FIO-STAT                           
                MOVE SCR-STAT-CON TO SCR-STAT                           
                GO TO FIN-FND-KEY.                                      
      *AFRI-FIN/15-10-200

      *FLB CST  13-JAN-1995 
      *    IF SCR-CMND = 'ACT'
           IF SCR-CMND = 'ACT' OR 'MSI'
              IF CLF-MSC-STAT IN CLF = 'C'
      *        LDC eliminada o cerrada
                  MOVE 'DEU'           TO MSG-COD-SIST
                  MOVE 'CLF    EXTING' TO MSG-COD-MENS
                  PERFORM GET-MSG
                  MOVE MSG-GLS-DESC TO FRM-MENS
                  MOVE SCR-STAT-CON TO SCR-STAT
                  MOVE '00' TO FIO-STAT
                  GO TO FIN-FND-KEY
              ELSE
              IF CLF-MSC-STAT IN CLF = 'R'
      *        CLF fue renovada
                  MOVE 'DEU'           TO MSG-COD-SIST
                  MOVE 'CLF    MCAYA' TO MSG-COD-MENS
                  PERFORM GET-MSG
                  MOVE MSG-GLS-DESC TO FRM-MENS
                  MOVE SCR-STAT-CON TO SCR-STAT
                  MOVE '00' TO FIO-STAT
                  GO TO FIN-FND-KEY
              ELSE
              IF CLF-MSC-STAT IN CLF = 'A'
      *        LDC activada 
                  MOVE 'DEU'          TO MSG-COD-SIST
                  MOVE 'CLF    ACAYA' TO MSG-COD-MENS
                  PERFORM GET-MSG
                  MOVE MSG-GLS-DESC TO FRM-MENS
                  MOVE SCR-STAT-CON TO SCR-STAT
                  MOVE '00' TO FIO-STAT
                  GO TO FIN-FND-KEY
              ELSE
      *FLB CST  13-JAN-1995 
              IF SCR-CMND = 'ACT' AND
                 CLF-COD-STAT IN CLF = 'X'
      *        LDC activada 
                  MOVE 'DEU'          TO MSG-COD-SIST
                  MOVE 'CLFSTATMSI'   TO MSG-COD-MENS
                  PERFORM GET-MSG
                  MOVE MSG-GLS-DESC TO FRM-MENS
                  MOVE SCR-STAT-CON TO SCR-STAT
                  MOVE '00' TO FIO-STAT
                  GO TO FIN-FND-KEY
              ELSE
              IF SCR-CMND = 'MSI' AND
                 CLF-COD-STAT IN CLF NOT = 'X' AND
                 CLF-COD-STAT IN CLF NOT = 'M' 
                  MOVE 'DEU'          TO MSG-COD-SIST
                  MOVE 'CLFSTATNOMSI' TO MSG-COD-MENS
                  PERFORM GET-MSG
                  MOVE MSG-GLS-DESC TO FRM-MENS
                  MOVE SCR-STAT-CON TO SCR-STAT
                  MOVE '00' TO FIO-STAT
                  GO TO FIN-FND-KEY.

           MOVE ZEROES TO SCR-FS-ARC.
           MOVE LDC-KEY-ILDC IN LDC TO ARC-KEY-ILDC IN WSS-VARI.
           MOVE ZEROES              TO ARC-NUM-IARC IN WSS-VARI.
           MOVE ARC-KEY-IARC IN WSS-VARI TO ARC-KEY-IARC IN ARC.
           MOVE FIO-GET-NLS TO FIO-CMND.
       LEE-ARC.
      * NGA INI OPTIMIZACION L011 15-06-2016
           MOVE SPACES              TO ARC-KEY-ILDC IN ARC.
           IF SCR-CMND = 'ACT'
              MOVE '23'                TO FIO-STAT
           ELSE
              MOVE '00'                TO FIO-STAT.
           GO TO FIN-FND-KEY.
      *    PERFORM LDC-FIO-ARC.                                         
      * NGA FIN OPTIMIZACION L011 15-06-2016
           IF NOT FIO-STAT-OKS OR
              ARC-KEY-ILDC IN WSS-VARI NOT = ARC-KEY-ILDC IN ARC

              IF FIO-STAT-OKS
                  MOVE FIO-END-BRW TO FIO-CMND
                  PERFORM LDC-FIO-ARC
                  MOVE '00' TO FIO-STAT
                  IF SCR-CMND = 'ACT' 
                      GO TO FIN-FND-KEY
                  ELSE
                      MOVE 'DEU'        TO MSG-COD-SIST
                      MOVE 'LDCSINARC'   TO MSG-COD-MENS
                      PERFORM GET-MSG
                      MOVE MSG-GLS-DESC TO FRM-MENS
                      MOVE SCR-STAT-CON TO SCR-STAT
                      GO TO FIN-FND-KEY
              ELSE 
                  MOVE '00' TO FIO-STAT
                  IF SCR-CMND = 'ACT' 
                      GO TO FIN-FND-KEY
                  ELSE
                      MOVE 'DEU'        TO MSG-COD-SIST
                      MOVE 'LDCSINARC'  TO MSG-COD-MENS
                      PERFORM GET-MSG
                      MOVE MSG-GLS-DESC TO FRM-MENS
                      MOVE SCR-STAT-CON TO SCR-STAT
                      GO TO FIN-FND-KEY.

       CARGA-ARC.
           MOVE SPACES TO MSG-COD-MENS.
           MOVE ZEROES TO WSS-IFLD.
           MOVE 9      TO WSS-IMAX.
      *INI IAS
           IF SCR-CMND = 'ACT'
               MOVE EIBTRMID     TO QUE-TERM
               MOVE 'ARC'        TO QUE-TYPE
               MOVE 1            TO QUE-NITM
               MOVE QUE-DEL TO QUE-CMND
               PERFORM GNS-PRO-QUE.
      *FIN IAS
           PERFORM PUT-TAB-ARC.
      *INI IAS
           IF SCR-CMND = 'ACT'
               MOVE QUE-ARC-VARI TO QUE-ITEM
               MOVE 500 TO QUE-LITM
               MOVE QUE-PUT TO QUE-CMND
               PERFORM GNS-PRO-QUE.
      *FIN IAS

           IF WSS-IFLD < WSS-IMAX
              ADD 1 TO WSS-IFLD
              PERFORM LIM-RES-LIN UNTIL WSS-IFLD > WSS-IMAX.

           IF MSG-COD-MENS > SPACES
               MOVE 'DEU' TO MSG-COD-SIST
               MOVE SPACES TO FIO-AKEY
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS.

           MOVE '00' TO FIO-STAT.
           GO TO FIN-FND-KEY.
      *>>>>
*% END
*% IF SCR_GKEY_VAL_IKY
      *<<<<  SCR_GKEY_VAL_IKY                                           
      *PTC-INI (RRM) 22-NOV-2002                                        
           IF SCR-OFRM-SRV AND                                          
              SCR-CMND = 'ACT'                                          
                                                                        
               MOVE PTC-LDC-TYPE TO QUE-TYPE                            
               MOVE TSK-TERM-ALF TO QUE-TERM                            
               MOVE PTC-LDC-LENG TO QUE-LITM                            
               MOVE 1            TO QUE-NITM                            
               MOVE QUE-GET      TO QUE-CMND                            
               PERFORM GNS-PRO-QUE                                      
               IF QUE-STAT = QUE-STAT-OKS                               
                   MOVE QUE-ITEM TO PTC-LDC-ITEM                        
                   MOVE PTC-LDC-LDC-CAI-ICLF TO LDC-CAI-ICLF IN ARC-FLD 
                   MOVE PTC-LDC-LDC-IIC-ICLF TO LDC-IIC-ICLF IN ARC-FLD 
                   MOVE PTC-LDC-LDC-NUM-ILDC TO LDC-NUM-ILDC IN ARC-FLD.
                                                                        
      *PTC-FIN (RRM) 22-NOV-2002                                        
*% END
*% IF INI_CMN_MOD
      *<<<< INI_CMN_MOD
           MOVE LDC-CAI-ICLF IN ARC-FLD TO ARC-CAI-ICLF IN WSS-VARI.
           MOVE LDC-IIC-ICLF IN ARC-FLD TO ARC-IIC-ICLF IN WSS-VARI.
           MOVE LDC-NUM-ILDC IN ARC-FLD TO ARC-NUM-ILDC IN WSS-VARI.
           IF SCR-FS-ARC > ZEROES
              PERFORM DEL-ARC
              IF MSG-COD-MENS > SPACES
      *          ERROR INCONSISTENCIA EN LA ELIMINACION : INFORMAR
                 GO TO FIN-CMN-MOD.
           GO TO GEN-ARC.
      *>>>>
*% END
*% IF FIN_CMN_MOD
      *<<<< FIN_CMN_MOD
       GEN-ARC.
           MOVE ZEROS TO WSS-IFLD  WSS-MOV.
      *INI IAS
           PERFORM LEE-QUE.
      *FIN IAS
           PERFORM PUT-ARC  VARYING WSS-IFLD FROM 1 BY 1 UNTIL
                                                      WSS-IFLD > 9.

       MOD-CLF.
           MOVE LDC-CAI-ICLF IN ARC-FLD TO CLF-CAI-ICLF IN CLF.
           MOVE LDC-IIC-ICLF IN ARC-FLD TO CLF-IIC-ICLF IN CLF.
           MOVE FIO-GET-KEY-UPD TO FIO-CMND.
           PERFORM LDC-FIO-CLF.
           IF NOT FIO-STAT-OKS
               GO TO FIN-CMN-MOD.
           MOVE 'I' TO CLF-MSC-STAT IN CLF.
           MOVE FIO-MOD TO FIO-CMND.
           PERFORM LDC-FIO-CLF.

*% IF PGM_BMS
      *<<<< PGM_BMS
           IF SCR-IND-ENG IN SCR-VEC-ENG(SCR-IPRO) = 'S'
               PERFORM EGR-FPEN-CIC.
      *>>>>
*% END
      *>>>>
*% END
*% IF PGM_BMS AND FIN_CMN_ING OR SCR_GFLD_VAL_MKY
      *<<<< PGM_BMS AND FIN_CMN_ING OR SCR_GFLD_VAL_MKY
           IF FRM-FFLD = FRM-FFLD-PF10 AND
              SCR-IND-ENG IN SCR-VEC-ENG(SCR-IPRO) = 'S'
               PERFORM EGR-FPEN-CIC.
      *>>>>
*% END
*% IF PGM_BMS AND FIN_SCR_GIKY OR FIN_SCR_GCNF OR FIN_SCR_GFLD
      *<<<< PGM_BMS AND FIN_SCR_GIKY OR FIN_SCR_GCNF OR FIN_SCR_GFLD
           IF FRM-FFLD = FRM-FFLD-PF3 AND
              SCR-IND-ENG IN SCR-VEC-ENG(SCR-IPRO) = 'S'
                   PERFORM EGR-FTER-CIC.
      *>>>>
*% END
*% IF INI_SCR_COM AND PGM_PU
      *<<<< INI_SCR_COM AND PGM_PU
      *INI IAS
           MOVE EIBTRMID     TO QUE-TERM.
           MOVE 'ARC'        TO QUE-TYPE.
           MOVE 1            TO QUE-NITM.
           MOVE QUE-DEL TO QUE-CMND.
           PERFORM GNS-PRO-QUE.
      *FIN IAS
      *>>>>
*% END
*% IF PGM_BMS AND EOF
      *<<<< PGM_BMS AND EOF

*% IF PGM_PQ
      *<<<< PGM_PQ
      *  CODIGO ADICIONAL PARA ENGANCHE PROGRAMAS
       ING-FPEN-CIC SECTION.
       INI-ING-FPEN-CIC.
           MOVE LOW-VALUES TO ARC-FLD.
           PERFORM ING-SETE.
           PERFORM SCR-CLRA-ARC.
           PERFORM HBL-IKY.
           PERFORM HBL-KEY-ARC.
       FIN-ING-FPEN-CIC.
           EXIT.

       HBL-KEY-ARC SECTION.
       INI-HBL-KEY-ARC.
           MOVE SPACES TO MSG-COD-MENS.
           MOVE LOW-VALUES TO ARC-FLD.
           PERFORM SCR-CLRA-ARC.
           MOVE SCR-CAI-ICLF IN SCR-VARI TO LDC-CAI-ICLF IN ARC-FLD.
           MOVE SCR-IIC-ICLF IN SCR-VARI TO LDC-IIC-ICLF IN ARC-FLD.
           MOVE SCR-NUM-ILDC IN SCR-VARI TO LDC-NUM-ILDC IN ARC-FLD.

           MOVE 'MOD'        TO SCR-CCPP.
           MOVE 'ACT'        TO SCR-CMND.
           PERFORM FND-KEY.

      * FLB 24/JUL/92 DIO ALGO MALO 
      * FLB 24/JUL/92 LE AGREGUE QUE SE VAYA Y NO HABILITE LOS CAMPOS
           IF MSG-COD-MENS > SPACES
               MOVE SCR-INST-GKY TO SCR-INST
      *    MOVE FRM-CPSF-AEY TO FRM-CPIM-AEY
               PERFORM PRO-ALL
               PERFORM UNP-IKY-ARC
               PERFORM EDT-KEY-ARC

               PERFORM SCR-MSSG
               IF SCR-IND-FST IN SCR-VEC-FST(SCR-IPRO) = 'S'
                   MOVE SPACES TO SCR-IND-FST IN SCR-VEC-FST(SCR-IPRO)
                   PERFORM SCR-INIT
                   PERFORM SCR-EXIT
                   GO TO FIN-HBL-KEY-ARC
               ELSE
                   PERFORM SCR-PUTA
                   PERFORM SCR-EXIT
                   GO TO FIN-HBL-KEY-ARC.

      * Despliega glosas de registros padres o asociados
           PERFORM PUT-CLF-ARC.

           MOVE +4 TO LDC-CAI-ICLF-LEN IN ARC-FLD.
      *ISP   25-JUL-1990 DEBE SER REEMPLAZADO POR VARIABLE
      *     INHIBE MOVE FRM-CPSF TO FRM-CPIM-AEY
           MOVE '1' TO FRM-CPIM-AEY.
           PERFORM HBL-FLD.
      *ALD-BNL.
           MOVE FRM-CPIM-AEY TO LDC-CAI-ICLF-ATR.
           MOVE FRM-CPIM-AEY TO LDC-IIC-ICLF-ATR.
           MOVE FRM-CPIM-AEY TO LDC-NUM-ILDC-ATR.
      *
           MOVE SCR-INST-GFL TO SCR-INST.

       CIC-HBL-KEY-ARC.
      *
           PERFORM EDT-KEY-ARC.
           PERFORM EDT-FLD-ARC.

           MOVE 'GNS' TO MSG-COD-SIST.
           MOVE 'FLDING' TO MSG-COD-MENS.
           PERFORM GET-MSG.
           MOVE MSG-GLS-DESC TO FRM-MENS.
           PERFORM SCR-MSSG.

           IF SCR-IND-FST IN SCR-VEC-FST(SCR-IPRO) = 'S'
               MOVE SPACES TO SCR-IND-FST IN SCR-VEC-FST(SCR-IPRO)
               PERFORM SCR-INIT
               PERFORM STP-EXIT
           ELSE
               PERFORM SCR-PUTA.
*% IF PGM_CHI AND PGM_BCI
      *<<<< ISP-INI  24-JAN-1996 11:35:48 
           IF SCR-OFRM-SRV
                EXEC CICS
                 RETURN
                END-EXEC.
      *<<<< ISP-FIN  24-JAN-1996 11:35:48 
*% END
           PERFORM SCR-EXIT.
       FIN-HBL-KEY-ARC.
           EXIT.

       ING-SETE SECTION.
       INI-ING-SETE.
           PERFORM CRG-TBL-ENG.
           MOVE WSS-NTRN(SCR-IPRO)     TO SCR-NTRN.
           MOVE WSS-PROG(SCR-IPRO)     TO SCR-PROG.
           MOVE WSS-NMAP(SCR-IPRO)     TO SCR-NMAP.
           MOVE WSS-NLIB(SCR-IPRO)     TO SCR-NLIB.
      *     MOVE WSS-NEMO(WSS-IDX-IARC) TO SCR-NEMO.

           MOVE WSS-NTRV(SCR-IPRO)     TO SCR-NTRV.
           MOVE WSS-PROV(SCR-IPRO)     TO SCR-PROV.
       FIN-ING-SETE.
           EXIT.

*% END
       EGR-FTER-CIC SECTION.
       INI-EGR-FTER-CIC.
*% IF PGM_PQ
      *<<<< PGM_PQ
           MOVE 'S' TO SCR-IND-ENG IN SCR-VEC-ENG(WSS-IDX-ILDC).
           MOVE 'S' TO SCR-IND-FST IN SCR-VEC-FST(WSS-IDX-ILDC).
           SUBTRACT 1 FROM WSS-IDX-ILDC GIVING SCR-IPRO.
           MOVE 'ING'        TO SCR-CMND.
           MOVE 'ING'        TO SCR-CCPP.
           PERFORM EGR-FPEN-CIC.
*% ELSE
           PERFORM CRG-TBL-ENG.
           MOVE WSS-IDX-ILDC TO SCR-IPRO.
           MOVE 'S' TO SCR-IND-ENG IN SCR-VEC-ENG(SCR-IPRO).
           MOVE 'S' TO SCR-IND-FST IN SCR-VEC-FST(SCR-IPRO).
           MOVE WSS-INST-FPEN-CIC TO SCR-INST-EXT.
           MOVE WSS-PROG(SCR-IPRO) TO SYS-PROG.
           MOVE 'ING'    TO SCR-CMND.
           MOVE 'ING'    TO SCR-CCPP.
           MOVE SCR-VARI TO SYS-CMMA.
*% IF NOT PGM_DB2
      *<<<< NOT PGM_DB2
           MOVE SCR-TCMA TO SYS-TCMA.
           MOVE SYS-XCTL TO SYS-CMND.
*% IF PGM_CHI AND PGM_BCI
      *<<<< ISP-INI  24-JAN-1996 11:35:48 
           IF SCR-OFRM-SRV
               MOVE WSS-IDX-ILDC TO SCR-IPRO
           ELSE
      *<<<< ISP-FIN  24-JAN-1996 11:35:48 
*% END
           PERFORM GNS-PRO-SYS.
*% ELSE
      *<<<< PGM_DB2
*%!        MOVE +{gnstca} TO SYS-TCMA.
           MOVE SCR-TCMA  TO SYS-TCMA.
           EXEC CICS START
                TRANSID( WSS-NTRN IN WSS-PPRO(SCR-IPRO) )
                TERMID ( EIBTRMID )
                FROM   ( SYS-CMMA )
                LENGTH ( SYS-TCMA )
           END-EXEC.
           EXEC CICS RETURN
           END-EXEC.
      *>>>>
*% END
*% END
       FIN-EGR-FTER-CIC.
           EXIT.

       EGR-FPEN-CIC SECTION.
       INI-EGR-FPEN-CIC.
           PERFORM CRG-TBL-ENG.
           ADD 1 TO SCR-IPRO.
           IF SCR-IPRO > WSS-TOT-IIDX
                  PERFORM EGR-FTER-CIC
                  GO TO FIN-EGR-FPEN-CIC.
           IF SCR-IND-ENG IN SCR-VEC-ENG(SCR-IPRO) = SPACES
               GO TO INI-EGR-FPEN-CIC.
           MOVE WSS-INST-FPEN-CIC TO SCR-INST-EXT.
           MOVE WSS-PROG(SCR-IPRO) TO SYS-PROG.
           MOVE 'ING'    TO SCR-CMND.
           MOVE 'ING'    TO SCR-CCPP.
           MOVE SCR-VARI TO SYS-CMMA.
*% IF NOT PGM_DB2
      *<<<< NOT PGM_DB2
           MOVE SCR-TCMA TO SYS-TCMA.
           MOVE SYS-XCTL TO SYS-CMND.
*% IF PGM_CHI AND PGM_BCI AND PGM_PU
      *<<<< ISP-INI  24-JAN-1996 11:35:48 
           IF SCR-OFRM-SRV
               MOVE WSS-IDX-IARC TO SCR-IPRO
           ELSE
      *<<<< ISP-FIN  24-JAN-1996 11:35:48 
*% END
           PERFORM GNS-PRO-SYS.
*% ELSE
      *<<<< PGM_DB2
*%!        MOVE +{gnstca} TO SYS-TCMA.
           MOVE SCR-TCMA  TO SYS-TCMA.
           EXEC CICS START
                TRANSID( WSS-NTRN IN WSS-PPRO(SCR-IPRO) )
                TERMID ( EIBTRMID )
                FROM   ( SYS-CMMA )
                LENGTH ( SYS-TCMA )
           END-EXEC.
           EXEC CICS RETURN
           END-EXEC.
      *>>>>
*% END
       FIN-EGR-FPEN-CIC.
           EXIT.

       SCR-INIT SECTION.
       INI-SCR-INIT.
           MOVE 3  TO FRM-PLIN.
           MOVE 19 TO FRM-NLIN.
           MOVE FRM-CLR-FRM TO FRM-CMND.
           PERFORM GNS-PRO-FRM.
           MOVE FRM-SINI-DBNF TO FRM-SINI.
           MOVE SCR-NMAP TO FRM-NAME.
           MOVE SCR-NLIB TO FRM-NLIB.
           MOVE ARC-FLD TO FRM-DFLD.
           MOVE FRM-INI TO FRM-CMND.
           PERFORM GNS-PRO-FRM.
       FIN-SCR-INIT.
           EXIT.

       COPY LDCBGMPT.
      *>>>>
*% END
*% IF EOF
      *<<<< EOF
       COPY GNSBVCOD.
       COPY GNSBVTAB.
*% IF PGM_DB2 
           EXEC SQL INCLUDE LDCBFCLF END-EXEC.
           EXEC SQL INCLUDE LDCBFARC END-EXEC.
           EXEC SQL INCLUDE LDCBFRDC END-EXEC.
           EXEC SQL INCLUDE SGCBFDBC END-EXEC.
      *INI IAS
           EXEC SQL INCLUDE COLBFOPC END-EXEC.
      *FIN IAS
           EXEC SQL INCLUDE SGCBFOPE END-EXEC.
           EXEC SQL INCLUDE SGCBFRCO END-EXEC.
*% ELSE
       COPY LDCBFCLF.
       COPY LDCBFARC.
       COPY LDCBFRDC.
       COPY SGCBFDBC.
*% IF PGM_PU
      *<<<< PGM_PU
      *INI IAS
       COPY COLBFOPC.
      *FIN IAS
      *AMP-INI  9-OCT-1993
       COPY SGCBFOPE.
       COPY SGCBFRCO.
      *AMP-FIN  9-OCT-1993

      *FLB CST  10-OCT-1994 VALIDA TIPO DE LINEA
       COPY LDCBVTLC.
      *>>>>
*% END           
*% END
*% IF PGM_PU
      *<<<< PGM_PU
      *INI IAS
       COPY GNSBFCIC.
       COPY GNSBGCIC.
*% ELSE
       COPY GNSBGCPT.
      *FIN IAS
      *>>>>
*% END          
*% IF PGM_PER 
      *<<<< PGM_PER
      *SMC-INI  3-DEC-1993 
        COPY GNSBEGLS.
      *SMC-FIN  3-DEC-1993 
      *>>>>
*% END          
      *INI IAS
*% IF NOT PGM_PTC
      *<<<< NOT PGM_PTC
      * COPY GNSBGQUE.
      *>>>>
*% END
       LEE-QUE SECTION.
       INI-LEE-QUE.
           MOVE EIBTRMID     TO QUE-TERM.
           MOVE 'ARC'        TO QUE-TYPE.
           MOVE 1            TO QUE-NITM.
           MOVE 500          TO QUE-LITM.
           MOVE QUE-GET      TO QUE-CMND.
           PERFORM GNS-PRO-QUE.
           MOVE QUE-ITEM TO QUE-ARC-VARI.
       FIN-LEE-QUE.
           EXIT.
      *FIN IAS

*% IF PGM_PQ
      *<<<< PGM_PQ
       PUT-TAB-ARC SECTION.
       INI-PUT-TAB-ARC.
           ADD 1 TO WSS-IFLD.
           IF WSS-IFLD > WSS-IMAX
              GO TO FIN-PUT-TAB-ARC.

           ADD 1 TO SCR-FS-ARC.
      *INI IAS
           IF SCR-CMND = 'ACT'
               MOVE ARC-CAI-IOPC IN ARC TO QUE-ARC-CAI-IOPC IN
                                           QUE-ARC-VARI(WSS-IFLD)
               MOVE ARC-IIC-IOPC IN ARC TO QUE-ARC-IIC-IOPC IN
                                           QUE-ARC-VARI(WSS-IFLD)
               MOVE ARC-IND-IOPC IN ARC TO QUE-ARC-IND-IOPC IN
                                           QUE-ARC-VARI(WSS-IFLD).
      *FIN IAS

           MOVE ARC-COD-VCOC IN ARC TO FRM-COD-VCOC
                                             IN ARC-FLD(WSS-IFLD).
           MOVE ARC-COD-TOOC IN ARC TO FRM-COD-TOOC
                                             IN ARC-FLD(WSS-IFLD).
           MOVE ARC-COD-AOOC IN ARC TO FRM-COD-AOOC
                                             IN ARC-FLD(WSS-IFLD).
           MOVE ARC-CAI-IOPC IN ARC TO FRM-CAI-IOPC
                                             IN ARC-FLD(WSS-IFLD).
           MOVE ARC-IIC-IOPC IN ARC TO FRM-IIC-IOPC
                                             IN ARC-FLD(WSS-IFLD).

           MOVE SPACES TO FRM-GLS-VCOC IN ARC-FLD(WSS-IFLD).
      *BUS-TAB Busca Glosa Moneda de Tabla
           IF ARC-COD-VCOC IN ARC > SPACES
              MOVE 'TAB'               TO TAB-COD-SIST
              MOVE 'VLR'               TO TAB-COD-TTAB IN TAB
              MOVE ARC-COD-VCOC IN ARC TO TAB-COD-CTAB IN TAB
              PERFORM BUS-TAB
              MOVE TAB-GLS-ABRV IN TAB TO
                              FRM-GLS-VCOC IN ARC-FLD(WSS-IFLD).

           MOVE SPACES TO FRM-GLS-TOOC IN ARC-FLD(WSS-IFLD).
      *BUS-TAB Busca Glosa Moneda de Tabla
           IF ARC-COD-TOOC IN ARC > SPACES
              MOVE 'TAB'               TO TAB-COD-SIST
              MOVE 'TIO'               TO TAB-COD-TTAB IN TAB
              MOVE ARC-COD-TOOC IN ARC TO TAB-COD-CTAB IN TAB
              PERFORM BUS-TAB
              MOVE TAB-GLS-ABRV IN TAB TO
                              FRM-GLS-TOOC IN ARC-FLD(WSS-IFLD).

           MOVE SPACES TO FRM-GLS-AOOC IN ARC-FLD(WSS-IFLD).
      *BUS-TAB Busca Glosa Cod. Auxiliar de Tabla
           IF ARC-COD-AOOC IN ARC NOT > SPACES
               GO TO FIN-PUT-AOOC.

      * BUSCA C. AUX CONTRA COL/AUX, CUANDO TIPO DE OPERACION SEA
      * DE 'COL' ( TIO-GLS-SIST = 'COL') SI NO CONTRA TAB/AUX.

           MOVE 'TAB' TO FIO-SIST.
           MOVE 'TIO' TO TAB-COD-TTAB IN TAB
           MOVE ARC-COD-TOOC IN ARC TO TAB-COD-CTAB IN TAB.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM GNS-FIO-TAB.

           MOVE TAB  TO TIO.

           IF TIO-GLS-SIST IN TIO = 'COL'
              MOVE 'COL'               TO TAB-COD-SIST
           ELSE
              MOVE 'TAB'               TO TAB-COD-SIST.

           MOVE 'AUX'               TO TAB-COD-TTAB IN TAB.
           MOVE ARC-COD-TOOC IN ARC TO WSS-COD-TOPE.
           MOVE ARC-COD-AOOC IN ARC TO WSS-COD-AOPE.
           MOVE WSS-COD-COPE        TO TAB-COD-CTAB IN TAB.
           PERFORM BUS-TAB.
           MOVE TAB-GLS-ABRV IN TAB TO
                              FRM-GLS-AOOC IN ARC-FLD(WSS-IFLD).
       FIN-PUT-AOOC.

       NXT-PUT-TAB-ARC.
           MOVE FIO-GET-NXT    TO FIO-CMND.
           PERFORM LDC-FIO-ARC.
           IF FIO-STAT-OKS AND
              ARC-KEY-ILDC IN WSS-VARI = ARC-KEY-ILDC IN ARC
              GO TO INI-PUT-TAB-ARC.

           IF FIO-STAT-OKS
               MOVE FIO-END-BRW TO FIO-CMND
               PERFORM LDC-FIO-ARC.
       FIN-PUT-TAB-ARC.
           EXIT.

       LIM-RES-LIN SECTION.
       INI-LIM-RES-LIN.
           MOVE SPACES TO FRM-COD-VCOC   IN ARC-FLD(WSS-IFLD),
                          FRM-GLS-VCOC   IN ARC-FLD(WSS-IFLD),
                          FRM-COD-TOOC   IN ARC-FLD(WSS-IFLD),
                          FRM-GLS-TOOC   IN ARC-FLD(WSS-IFLD),
                          FRM-COD-AOOC   IN ARC-FLD(WSS-IFLD),
                          FRM-GLS-AOOC   IN ARC-FLD(WSS-IFLD),
                          FRM-CAI-IOPC   IN ARC-FLD(WSS-IFLD).

           MOVE ZEROES TO FRM-IIC-IOPC   IN ARC-FLD(WSS-IFLD).
           ADD 1 TO WSS-IFLD.
       FIN-PUT-TAB-ARC.
           EXIT.

       PGM-EBR-ALL SECTION.                                             
       INI-PGM-EBR-ALL.                                                 
           MOVE FIO-EBR-ALL TO FIO-CMND.                                
           PERFORM LDC-FIO-ARC.                                         
       FIN-PGM-EBR-ALL.                                                 
           EXIT.                                                        

      *>>>>
*% END          
*% IF PGM_PU
      *<<<< PGM_PU
       PUT-ARC SECTION.
       INI-PUT-ARC.
      *
           IF FRM-COD-VCOC IN ARC-FLD(WSS-IFLD) NOT > SPACES AND
              FRM-COD-TOOC IN ARC-FLD(WSS-IFLD) NOT > SPACES AND
              FRM-COD-AOOC IN ARC-FLD(WSS-IFLD) NOT > SPACES AND
              FRM-CAI-IOPC IN ARC-FLD(WSS-IFLD) NOT > SPACES AND
              FRM-IIC-IOPC IN ARC-FLD(WSS-IFLD) = ZEROES
              GO TO FIN-PUT-ARC.
      *INI-JGM 29-07-1998.                                              
           MOVE SPACES TO ARC.                                          
           MOVE ZEROES TO ARC-NUM-ILDC IN ARC.                          
           MOVE ZEROES TO ARC-NUM-IARC IN ARC.                          
      *FIN-JGM 29-07-1998.                                              
      *                                                                 

           ADD 1 TO WSS-MOV.
      *FLB CST  29-MAR-1995 
           MOVE SPACES                  TO ARC-GLS-FLAG IN ARC.
           IF SCR-CCPP = 'ING'
               MOVE 'I' TO ARC-MSC-TACC IN ARC
               MOVE 'I' TO ARC-MSC-STAT IN ARC
           ELSE
           IF SCR-CCPP = 'MOD'
               MOVE 'M' TO ARC-MSC-TACC IN ARC
               MOVE 'M' TO ARC-MSC-STAT IN ARC.

           PERFORM GET-FHOY.
      *    Fecha Transaccion
           MOVE HOY-FHOY TO ARC-FEC-FTRN IN ARC.
      *    Hora Transaccion
           MOVE HOY-HHOY TO ARC-HRA-HRTR IN ARC.
      *    Codigo Origen transaccion
           MOVE SCR-OTRN TO ARC-COD-OTRN IN ARC.
      *    Autor Transaccion
           MOVE SCR-USER TO ARC-COD-ATRN IN ARC.
      *FLB CST  29-MAR-1995 FIN
           MOVE LDC-CAI-ICLF IN ARC-FLD TO ARC-CAI-ICLF IN ARC.
           MOVE LDC-IIC-ICLF IN ARC-FLD TO ARC-IIC-ICLF IN ARC.
           MOVE LDC-NUM-ILDC IN ARC-FLD TO ARC-NUM-ILDC IN ARC.
           MOVE WSS-MOV                 TO ARC-NUM-IARC IN ARC.
           MOVE FRM-CAI-IOPC IN ARC-FLD(WSS-IFLD) TO
                                           ARC-CAI-IOPC IN ARC.
           MOVE FRM-IIC-IOPC IN ARC-FLD(WSS-IFLD) TO
                                           ARC-IIC-IOPC IN ARC.
           MOVE FRM-COD-VCOC IN ARC-FLD(WSS-IFLD) TO
                                           ARC-COD-VCOC IN ARC.
           MOVE FRM-COD-TOOC IN ARC-FLD(WSS-IFLD) TO
                                           ARC-COD-TOOC IN ARC.
           MOVE FRM-COD-AOOC IN ARC-FLD(WSS-IFLD) TO
                                           ARC-COD-AOOC IN ARC.
           MOVE SPACES                  TO ARC-GLS-DISP IN ARC.
      *INI IAS
           MOVE QUE-ARC-IND-IOPC IN QUE-ARC-VARI(WSS-IFLD) TO 
                ARC-IND-IOPC IN ARC.
      *FLB CST  1-MAR-1995 
           IF ARC-IND-IOPC IN ARC NOT > SPACES
                MOVE SPACES TO ARC-IND-IOPC IN ARC.
      *FLB CST  1-MAR-1995 FIN
      *FIN IAS

      * NGA INI OPTIMIZACION L011 15-06-2016
           MOVE '00'    TO FIO-STAT.
      *    MOVE FIO-PUT TO FIO-CMND.                                    
      *    PERFORM LDC-FIO-ARC.                                         
      *    IF NOT FIO-STAT-OKS                                          
      *          ERROR INCONSISTENCIA EN LA ELIMINACION : INFORMAR      
      *       MOVE FIO-MENS TO FRM-MENS                                 
      *       MOVE 10 TO WSS-IFLD.                                      
      * NGA FIN OPTIMIZACION L011 15-06-2016
       FIN-PUT-ARC.
           EXIT.

       VAL-ARC-IGUA SECTION.
       INI-VAL-ARC-IGUA.
           IF NOT (
              FRM-COD-VCOC IN ARC-FLD(WSS-IFLD) > SPACES OR
              FRM-COD-TOOC IN ARC-FLD(WSS-IFLD) > SPACES OR
              FRM-COD-AOOC IN ARC-FLD(WSS-IFLD) > SPACES OR
              FRM-CAI-IOPC IN ARC-FLD(WSS-IFLD) > SPACES OR
              FRM-IIC-IOPC IN ARC-FLD(WSS-IFLD) > ZEROES 
                   ) OR
              WSS-IFLD = FRM-IFLD
                GO TO FIN-VAL-ARC-IGUA.

           IF FRM-COD-VCOC IN ARC-FLD(FRM-IFLD) =
                       FRM-COD-VCOC IN ARC-FLD(WSS-IFLD) AND 

              FRM-COD-TOOC IN ARC-FLD(FRM-IFLD) =
                       FRM-COD-TOOC IN ARC-FLD(WSS-IFLD) AND 

              FRM-COD-AOOC IN ARC-FLD(FRM-IFLD) =
                       FRM-COD-AOOC IN ARC-FLD(WSS-IFLD) AND

              FRM-CAI-IOPC IN ARC-FLD(FRM-IFLD) = 
                       FRM-CAI-IOPC IN ARC-FLD(WSS-IFLD) AND

              FRM-IIC-IOPC IN ARC-FLD(FRM-IFLD) = 
                       FRM-IIC-IOPC IN ARC-FLD(WSS-IFLD) 

               MOVE 'ARC=S' TO MSG-COD-MENS.

       FIN-VAL-ARC-IGUA.
           EXIT.

       DEL-ARC SECTION.
       INI-DEL-ARC.
           MOVE ARC-KEY-ILDC IN WSS-VARI TO ARC-KEY-ILDC IN ARC.
           MOVE ZEROES              TO ARC-NUM-IARC IN ARC.
           MOVE FIO-GET-NLS TO FIO-CMND.
       LUP-DEL-ARC.
      * NGA INI OPTIMIZACION L011 15-06-2016
           MOVE '00'  TO FIO-STAT.
           GO TO FIN-DEL-ARC.
      * NGA FIN OPTIMIZACION L011 15-06-2016
           PERFORM LDC-FIO-ARC.
           IF FIO-STAT-OKS
              MOVE FIO-END-BRW TO FIO-CMND
              PERFORM LDC-FIO-ARC.

           IF NOT ( FIO-STAT-OKS AND
              ARC-KEY-ILDC IN WSS-VARI = ARC-KEY-ILDC IN ARC )
              MOVE '00' TO FIO-STAT
              GO TO FIN-DEL-ARC.

           MOVE FIO-GET-KEY-UPD TO FIO-CMND.
           PERFORM LDC-FIO-ARC.
           IF NOT FIO-STAT-OKS
              GO TO FIN-DEL-ARC.

           MOVE FIO-DEL TO FIO-CMND.
           PERFORM LDC-FIO-ARC.
           IF NOT FIO-STAT-OKS
               MOVE 'DEU'        TO MSG-COD-SIST
               MOVE 'ARC    DEL' TO MSG-COD-MENS
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS
               GO TO FIN-DEL-ARC.

           MOVE ARC-KEY-ILDC IN WSS-VARI TO ARC-KEY-ILDC IN ARC.
*% IF PGM_DB2 
           MOVE FIO-GET-NXT TO FIO-CMND.
*% ELSE
           MOVE FIO-GET-NLS TO FIO-CMND.
*% END
           GO TO LUP-DEL-ARC.
       FIN-DEL-ARC.
           EXIT.

       PGM-EBR-ALL SECTION.                                             
       INI-PGM-EBR-ALL.                                                 
           MOVE FIO-EBR-ALL TO FIO-CMND.                                
           PERFORM LDC-FIO-ARC.                                         
       FIN-PGM-EBR-ALL.                                                 
           EXIT.                                                        
                                                                        
       COPY GNSBGHOY.
*% IF NOT PGM_ARG AND NOT ERRGLS
       COPY GNSBEGLS.
*% END
      *>>>>
*% END

      *>>>>
*% END
