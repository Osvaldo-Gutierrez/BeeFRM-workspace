*%! Codigo adicional para archivo LDCPQCLL
*% LARGO_MI_COMMAREA = 20
*% PGM_PTC = TRUE
*% IF MI_COMMAREA                                                 
      *<<<< MI_COMMAREA                                                 
           03 CMA-VARI.                                                 
              05 SCR-IMAX      COMP                   PIC S9(04).       
              05 SCR-I         COMP                   PIC S9(04).       
      *>>>>
*% END
*% IF WSS                                                         
      *<<<< WSS                                                         
       COPY LDCWGCLL.
       COPY SGCBRDBC.
       COPY LDCBRRDC.
       COPY LDCBRCLF.
       COPY LDCBRLDC.
       COPY GNSWGCPT.
       COPY GNSWGPES.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-LDC-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-RDC-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-DBC-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-CLF-REQA==.
                                                          
       01  WSS-VARI.                                                    
           03  WSS-COD-MENS                      PIC X(12).             
           03  WSS-LINE   VALUE ALL '-'          PIC X(79).             
           03  WSS-CLL-IMAX    VALUE ZEROES      PIC 9(03).
           03  WSS-I                              PIC 9(02).            
           03  WSS-COD-PESO                       PIC X(06).
           03  WSS-FEC-FCP1.
               05  WSS-NUM-SCP1                   PIC 9(02).
               05  WSS-NUM-ACP1                   PIC 9(02).
               05  WSS-NUM-MCP1                   PIC 9(02).
               05  WSS-NUM-DCP1                   PIC 9(02).
           03  WSS-FEC-FCP2.
               05  WSS-NUM-SCP2                   PIC 9(02).
               05  WSS-NUM-ACP2                   PIC 9(02).
               05  WSS-NUM-MCP2                   PIC 9(02).
               05  WSS-NUM-DCP2                   PIC 9(02).
           03  WSS-GLS-DATA.                                            
               05 WSS-GLS-FIL1            PIC X(03).                    
               05 WSS-GLS-ENTI            PIC X(05).                    
               05 WSS-GLS-FIL2            PIC X(52).                    
      *>>>>
*% END
*% IF PFS_SCR_ACC                                                 
      *<<<< PFS_SCR_ACC                                                 
           IF FRM-FFLD = FRM-FFLD-PF6                                   
                    OR   FRM-FFLD-PF5                                   
               PERFORM VAL-NUM-KEY-CLL                                  
               PERFORM VAL-NUM-FLD-CLL                                  
               PERFORM RST-STAT                                         
               PERFORM FND-SCR-KEY THRU FIN-SCR-KEY                     
               IF SCR-STAT NOT = SCR-STAT-ABT                           
                   PERFORM SCR-TRL                                      
               ELSE                                                     
                   PERFORM DESSCRTRL                                    
                   GO TO FIN-SCR-ACC.                                   
      *>>>>
*% END
*% IF INI_FND_KEY                                                 
      *<<<< INI_FND_KEY                                                 
           MOVE SPACES TO FRM-MEN1.                                     
           IF FRM-FFLD = FRM-FFLD-PF5                                   
               MOVE PGM-SNUL TO PGM-STAT-LCC                            
               MOVE PGM-SNUL TO PGM-STAT-LCC                            
               SUBTRACT 1 FROM SCR-I GIVING CLL-I                       
               IF CLL-I NOT > ZEROES                                    
                   MOVE 'LCC  PROPRV' TO MSG-COD-MENS                    
                   GO TO ERR-FND-KEY                                    
               ELSE                                                     
                   GO TO CARGA-CLL                                      
           ELSE                                                         
           IF FRM-FFLD = FRM-FFLD-PF6                                   
               MOVE PGM-SNUL TO PGM-STAT-LCC                           
               MOVE PGM-SNUL TO PGM-STAT-LCC                            
               ADD 1 SCR-I GIVING CLL-I                                 
               IF CLL-I > SCR-IMAX                                      
                   MOVE 'RLO PRONXT' TO MSG-COD-MENS                    
                   GO TO ERR-FND-KEY                                    
               ELSE                                                     
                   GO TO CARGA-CLL.                                     
           GO TO CON-FND-KEY.                                           
      *>>>>
*% END
*% IF FIN_FND_KEY                                                 
      *<<<< FIN_FND_KEY                                                 
           IF NOT FIO-STAT-OKS                                          
               GO TO FIN-FND-KEY.                                       
       CON-FND-KEY.                                                     
              
           MOVE ZEROES TO SCR-IMAX.                                     
           MOVE 1 TO SCR-I.                                             
           MOVE '00' TO FIO-STAT.                                       
           MOVE SPACES TO WSS-COD-MENS.                                 
           PERFORM OBT-DAT-TS.                                          
           IF WSS-COD-MENS > SPACES                                     
               MOVE WSS-COD-MENS TO MSG-COD-MENS IN MSG                 
               GO TO ERR-FND-KEY.                                       
           MOVE 1 TO SCR-I.                                             
           MOVE SCR-I TO CLL-I.                                         
       CARGA-CLL.                                                       
           MOVE SPACES TO MSG-COD-MENS.                                 
           IF NOT SCR-OFRM-SRV                                          
           PERFORM PUT-TAB-CLL.                                         
           MOVE '00' TO FIO-STAT.                                       
           GO TO FIN-FND-KEY.                                           
      *                                                                 
       ERR-FND-KEY.                                                     
           MOVE SCR-STAT-CON TO SCR-STAT.                               
                                                                        
           MOVE 'LDC'  TO MSG-COD-SIST.                                 
           PERFORM GET-MSG.                                             
           MOVE MSG-GLS-DESC TO FRM-MEN1.                               
           MOVE '00' TO FIO-STAT.                                       
           GO TO FIN-FND-KEY.                                           
      *>>>>
*% END
*% IF PFS_GET_CON OR PFS_GET_ACC                                  
      *<<<< PFS_GET_CON OR PFS_GET_ACC                                  
           IF NOT (FRM-FFLD = FRM-FFLD-PF6                              
                         OR   FRM-FFLD-PF5)                             
      *>>>>
*% END
*% IF EOF                                                         
      *<<<< EOF                                                         
       COPY GNSBGCPT.
       COPY SGCBFDBC.
       COPY LDCBFLDC.
       COPY LDCBFRDC.
       COPY LDCBFCLF.
       COPY GNSBFMSG.                                                   
                                             
       CAR-MOV-CLL SECTION.                                             
       INI-CAR-MOV-CLL.
           IF LCC-CAI-ILIC IN CLL-FLD > SPACES OR
              LCC-IIC-ILIC IN CLL-FLD > SPACES 
               PERFORM CAR-MOV-CLL-LCC
           ELSE
               PERFORM CAR-MOV-CLL-FEC.
       FIN-CAR-MOV-CLL.
           EXIT.


       CAR-MOV-CLL-LCC SECTION.                                             
       INI-CAR-MOV-CLL-LCC.
              MOVE 'NOEXIS   LCC'          TO WSS-COD-MENS.             
              MOVE LCC-CAI-ILIC IN CLL-FLD TO LCC-CAI-ILIC IN LCC.
              MOVE LCC-IIC-ILIC IN CLL-FLD TO LCC-IIC-ILIC IN LCC.
              MOVE FIO-GET-NLS TO FIO-CMND.
          LUP-CAR-MOV-CLL-LCC.     
              MOVE 'LCC-KEY-ILIC' TO FIO-AKEY.
              PERFORM LDC-FIO-LCC.
              IF NOT (FIO-STAT-OKS AND
                      LCC-CAI-ILIC IN CLL-FLD = LCC-CAI-ILIC IN LCC AND
                      LCC-IIC-ILIC IN CLL-FLD = LCC-IIC-ILIC IN LCC)
                   GO TO FIN-CAR-MOV-CLL-LCC.
      *LEER CLF
              MOVE LCC-CAI-ICLF IN LCC TO CLF-CAI-ICLF IN CLF.
              MOVE LCC-IIC-ICLF IN LCC TO CLF-IIC-ICLF IN CLF.
              MOVE FIO-GET-KEY         TO FIO-CMND.
              PERFORM LDC-FIO-CLF.
              IF NOT FIO-STAT-OKS
                 GO TO FIN-CAR-MOV-CLL-LCC.
              
      *LEER LDC        
              MOVE LCC-CAI-ICLF IN LCC TO LDC-CAI-ICLF IN LDC.
              MOVE LCC-IIC-ICLF IN LCC TO LDC-IIC-ICLF IN LDC.
              MOVE LCC-NUM-ILCC IN LCC TO LDC-NUM-ILDC IN LDC.
              MOVE FIO-GET-KEY         TO FIO-CMND.
              PERFORM LDC-FIO-LDC.
              IF NOT FIO-STAT-OKS
                 GO TO FIN-CAR-MOV-CLL-LCC.

              MOVE CLF-KEY-ICLF IN CLF TO RDC-CIC-ICLF IN RDC.
              MOVE 'RDC-KEY-ICLF'      TO FIO-AKEY.
              MOVE FIO-GET-KEY TO FIO-CMND.
              PERFORM LDC-FIO-RDC.
              IF NOT FIO-STAT-OKS
                  GO TO FIN-CAR-MOV-CLL-LCC.

              MOVE RDC-CIC-ICLI IN RDC TO DBC-CIC-ICLI IN DBC.
              MOVE FIO-GET-KEY TO FIO-CMND.
              PERFORM SGC-FIO-DBC.
              IF NOT FIO-STAT-OKS
                  GO TO FIN-CAR-MOV-CLL-LCC.

          VAL-CAR-MOV-CLL-LCC.  
              MOVE SPACES              TO WSS-COD-MENS.                 
              MOVE LCC-CAI-ILIC IN LCC TO CLL-CAI-ILIC(CLL-I).          
              MOVE LCC-IIC-ILIC IN LCC TO CLL-IIC-ILIC(CLL-I).          
              MOVE LCC-CAI-ICLF IN LCC TO CLL-CAI-ICLF(CLL-I).
              MOVE LCC-IIC-ICLF IN LCC TO CLL-IIC-ICLF(CLL-I).
              MOVE LCC-NUM-ILCC IN LCC TO CLL-NUM-ILCC(CLL-I).          
              MOVE LCC-VAL-MADJ IN LCC TO CLL-VAL-MADJ(CLL-I).
              MOVE LCC-VAL-MUTI IN LCC TO CLL-VAL-MUTI(CLL-I).
              MOVE LCC-VAL-RENU IN LCC TO CLL-VAL-RENC(CLL-I).
              MOVE LCC-VAL-UTIL IN LCC TO CLL-VAL-EUTI(CLL-I).
              MOVE LCC-FEC-FRNC IN LCC TO CLL-FEC-FRNC(CLL-I).
              COMPUTE CLL-VAL-DISP(CLL-I) = (LCC-VAL-MADJ IN LCC) -     
                                            (LCC-VAL-MUTI IN LCC) -     
                                            (LCC-VAL-RENU IN LCC).      
              COMPUTE CLL-VAL-FUTI(CLL-I) = (CLL-VAL-DISP(CLL-I) * 100) 
                                          / LCC-VAL-MADJ IN LCC.        
              COMPUTE CLL-VAL-UTIL(CLL-I) = (LCC-VAL-MUTI IN LCC *100)  
                                           / LCC-VAL-MADJ IN LCC.
           IF LCC-COD-VCOC IN LCC > SPACES                              
               MOVE 'TAB' TO TAB-COD-SIST                               
               MOVE 'VLR' TO TAB-COD-TTAB IN TAB                        
               MOVE LCC-COD-VCOC IN LCC TO TAB-COD-CTAB IN TAB          
               PERFORM BUS-TAB                                          
               MOVE TAB-GLS-ABRV IN TAB TO                              
                    CLL-GLS-VCOC(CLL-I).                                
  
              MOVE DBC-NUM-ICLI IN DBC TO CLL-NUM-ICLI(CLL-I).             
              MOVE DBC-VRF-ICLI IN DBC TO CLL-VRF-ICLI(CLL-I).             
              MOVE DBC-IND-ICLI IN DBC TO CLL-IND-ICLI(CLL-I).             
              MOVE DBC-GLS-ICLI IN DBC TO CLL-GLS-ICLI(CLL-I).             
              MOVE DBC-GLS-NOMC IN DBC TO CPT-STRN.
              PERFORM CPT-BLKS.
              MOVE CPT-STRN            TO CLL-GLS-NOMC(CLL-I).
      *LEER LDC PARA OBTENER DATOS
              MOVE LDC-COD-TIPO IN LDC TO CLL-COD-TIPO(CLL-I).          
                                                                        
              MOVE CLF-NUM-PVIG IN CLF TO CLL-NUM-PVIG(CLL-I).          
              MOVE CLF-IND-PVIG IN CLF TO CLL-IND-PVIG(CLL-I).          
              MOVE CLF-FEC-FAPE IN CLF TO CLL-FEC-FINI(CLL-I).          
              MOVE CLF-FEC-FVEN IN CLF TO CLL-FEC-FVEN(CLL-I).          
  
          NXT-CAR-MOV-CLL-LCC.
              PERFORM INC-REG-TS.                                       
          SIG-CAR-MOV-CLL-LCC.
              MOVE FIO-GET-NXT TO FIO-CMND.
              GO TO LUP-CAR-MOV-CLL-LCC.
            
       FIN-CAR-MOV-CLL-LCC.                                                 
           EXIT.                                                        
 
       CAR-MOV-CLL-FEC SECTION.                                             
       INI-CAR-MOV-CLL-FEC.
              MOVE 'NOEXIS   LCC'          TO WSS-COD-MENS.             
              MOVE LOW-VALUES                     TO LCC-KEY-ILCC IN LCC.
              MOVE FIO-GET-NLS TO FIO-CMND.                             
          LUP-CAR-MOV-CLL-FEC.     
              PERFORM LDC-FIO-LCC.
              IF NOT FIO-STAT-OKS
                  GO TO FIN-CAR-MOV-CLL-FEC.
      *LEER CLF
              MOVE LCC-CAI-ICLF IN LCC TO CLF-CAI-ICLF IN CLF.
              MOVE LCC-IIC-ICLF IN LCC TO CLF-IIC-ICLF IN CLF.
              MOVE FIO-GET-KEY         TO FIO-CMND.
              PERFORM LDC-FIO-CLF.
              IF NOT FIO-STAT-OKS
                 GO TO SIG-CAR-MOV-CLL-FEC.                             
              
      *LEER LDC        
              MOVE LCC-CAI-ICLF IN LCC TO LDC-CAI-ICLF IN LDC.
              MOVE LCC-IIC-ICLF IN LCC TO LDC-IIC-ICLF IN LDC.
              MOVE LCC-NUM-ILCC IN LCC TO LDC-NUM-ILDC IN LDC.
              MOVE FIO-GET-KEY         TO FIO-CMND.
              PERFORM LDC-FIO-LDC.
              IF NOT FIO-STAT-OKS
                 GO TO SIG-CAR-MOV-CLL-FEC.                             


              MOVE CLF-KEY-ICLF IN CLF TO RDC-CIC-ICLF IN RDC.
              MOVE 'RDC-KEY-ICLF'      TO FIO-AKEY.
              MOVE FIO-GET-KEY TO FIO-CMND.
              PERFORM LDC-FIO-RDC.
              IF NOT FIO-STAT-OKS
                  GO TO SIG-CAR-MOV-CLL-FEC.                            

              MOVE RDC-CIC-ICLI IN RDC TO DBC-CIC-ICLI IN DBC.
              MOVE FIO-GET-KEY TO FIO-CMND.
              PERFORM SGC-FIO-DBC.
              IF NOT FIO-STAT-OKS
                  GO TO SIG-CAR-MOV-CLL-FEC.                            

              MOVE CLF-NUM-SAPE IN CLL-FLD TO WSS-NUM-SCP1 IN WSS-VARI. 
              MOVE CLF-NUM-AAPE IN CLL-FLD TO WSS-NUM-ACP1 IN WSS-VARI. 
              MOVE CLF-NUM-MAPE IN CLL-FLD TO WSS-NUM-MCP1 IN WSS-VARI. 
              MOVE CLF-NUM-DAPE IN CLL-FLD TO WSS-NUM-DCP1 IN WSS-VARI.
 
              MOVE CLF-NUM-SCIE IN CLL-FLD TO WSS-NUM-SCP2 IN WSS-VARI. 
              MOVE CLF-NUM-ACIE IN CLL-FLD TO WSS-NUM-ACP2 IN WSS-VARI. 
              MOVE CLF-NUM-MCIE IN CLL-FLD TO WSS-NUM-MCP2 IN WSS-VARI. 
              MOVE CLF-NUM-DCIE IN CLL-FLD TO WSS-NUM-DCP2 IN WSS-VARI.
              
              IF CLF-FEC-FAPE IN CLF < WSS-FEC-FCP1 OR                  
                 CLF-FEC-FAPE IN CLF > WSS-FEC-FCP2                     
                    GO TO SIG-CAR-MOV-CLL-FEC.                          
              IF LDC-MSC-STAT IN CLL-FLD > SPACES                       
                  IF CLF-MSC-STAT IN CLF NOT = LDC-MSC-STAT IN CLL-FLD  
                    GO TO SIG-CAR-MOV-CLL-FEC.              
  
          VAL-CAR-MOV-CLL-FEC.  
              MOVE SPACES                  TO WSS-COD-MENS.             
              MOVE LCC-CAI-ILIC IN LCC TO CLL-CAI-ILIC(CLL-I).          
              MOVE LCC-IIC-ILIC IN LCC TO CLL-IIC-ILIC(CLL-I).

              MOVE 'DEU'   TO TAB-COD-SIST FIO-SIST.
              MOVE 'OAL'   TO TAB-COD-TTAB IN TAB.
              MOVE CLL-CAI-ILIC(CLL-I) TO TAB-COD-CTAB IN TAB.
              MOVE FIO-GET-KEY TO FIO-CMND.
              PERFORM GNS-FIO-TAB.
              IF FIO-STAT-OKS
                 MOVE TAB-GLS-DATA IN TAB TO WSS-GLS-DATA IN WSS-VARI
                 MOVE WSS-GLS-ENTI IN WSS-VARI TO CLL-GLS-ENTD(CLL-I)
              ELSE
                 MOVE SPACES        TO CLL-GLS-ENTD(CLL-I).
                                                                          
              MOVE LCC-CAI-ICLF IN LCC TO CLL-CAI-ICLF(CLL-I).
              MOVE LCC-IIC-ICLF IN LCC TO CLL-IIC-ICLF(CLL-I).
              MOVE LCC-NUM-ILCC IN LCC TO CLL-NUM-ILCC(CLL-I).          
              MOVE LCC-VAL-MADJ IN LCC TO CLL-VAL-MADJ(CLL-I).
              MOVE LCC-VAL-MUTI IN LCC TO CLL-VAL-MUTI(CLL-I).
              MOVE LCC-VAL-RENU IN LCC TO CLL-VAL-RENC(CLL-I).
              MOVE LCC-VAL-UTIL IN LCC TO CLL-VAL-EUTI(CLL-I).
              MOVE LCC-FEC-FRNC IN LCC TO CLL-FEC-FRNC(CLL-I).
              COMPUTE CLL-VAL-DISP(CLL-I) = LCC-VAL-MADJ IN LCC -
                                            LCC-VAL-MUTI IN LCC -
                                            LCC-VAL-RENU IN LCC. 
              COMPUTE CLL-VAL-FUTI(CLL-I) = (CLL-VAL-DISP(CLL-I) * 100) 
                                          / LCC-VAL-MADJ IN LCC.        
              COMPUTE CLL-VAL-UTIL(CLL-I) = (LCC-VAL-MUTI IN LCC *100)  
                                          /  LCC-VAL-MADJ IN LCC.
              MOVE DBC-NUM-ICLI IN DBC TO CLL-NUM-ICLI(CLL-I).             
              MOVE DBC-VRF-ICLI IN DBC TO CLL-VRF-ICLI(CLL-I).             
              MOVE DBC-IND-ICLI IN DBC TO CLL-IND-ICLI(CLL-I).             
              MOVE DBC-GLS-ICLI IN DBC TO CLL-GLS-ICLI(CLL-I).             
              MOVE DBC-GLS-NOMC IN DBC TO CPT-STRN.
              PERFORM CPT-BLKS.
              MOVE CPT-STRN            TO CLL-GLS-NOMC(CLL-I). 
      *LEER LDC PARA OBTENER DATOS
             
              MOVE LDC-COD-TIPO IN LDC TO CLL-COD-TIPO(CLL-I).          
              MOVE CLF-NUM-PVIG IN CLF TO CLL-NUM-PVIG(CLL-I).          
              MOVE CLF-IND-PVIG IN CLF TO CLL-IND-PVIG(CLL-I).          
              MOVE CLF-FEC-FAPE IN CLF TO CLL-FEC-FINI(CLL-I).          
              MOVE CLF-FEC-FVEN IN CLF TO CLL-FEC-FVEN(CLL-I).          
  
          NXT-CAR-MOV-CLL-FEC.
              PERFORM INC-REG-TS.                                       
          SIG-CAR-MOV-CLL-FEC.
              MOVE FIO-GET-NXT TO FIO-CMND.
              GO TO LUP-CAR-MOV-CLL-FEC.
            
       FIN-CAR-MOV-CLL-FEC.                                                 
           EXIT.                                                        

       OBT-PARAM SECTION.                                               
       INI-OBT-PARAM.                                                   
       FIN-OBT-PARAM.                                                   
           EXIT.                                                        
                                                                        
       OBT-DAT-TS SECTION.                                              
       INI-OBT-DAT-TS.                                                  
           EXEC CICS HANDLE CONDITION QIDERR(CON-OBT-DAT-TS)            
                                     ITEMERR(CON-OBT-DAT-TS)            
           END-EXEC.                                                    
                                                                        
      *     EXEC CICS DELETEQ TS QUEUE(CLL-NAME-QUE)                    
      *     END-EXEC.                                                   
      *<<<<                                                             
      *    MOVE EIBTRMID      TO CLL-TERM.                              
           MOVE CLL-NAME-QUE   TO QUE-COLA.                             
           MOVE QUE-DEL           TO QUE-CMND.                          
           PERFORM GNS-PRO-QUE.                                         
      *>>>>                                                             
       CON-OBT-DAT-TS.                                                  
           MOVE CLL-SI-IMP TO CLL-IMP.                                  
           PERFORM CLR-VEC-TS VARYING CLL-I FROM 1 BY 1 UNTIL           
                   CLL-I > CLL-IMAX.                                    
           MOVE 1 TO CLL-I.                                             
           PERFORM CAR-MOV-CLL.
               
       NXT-OBT-DAT-TS.                                                  
           IF CLL-IMP = CLL-SI-IMP                                      
               PERFORM WRT-TS.                                          
       FIN-OBT-DAT-TS.                                                  
           EXIT.                                                        
                                                                        
       PUT-TAB-CLL SECTION.                                             
       INI-PUT-TAB-CLL.                                                 

           PERFORM RED-TS.                                              
           MOVE CLL-IMAX TO WSS-CLL-IMAX.
           PERFORM LLE-DAT-PNT VARYING CLL-I FROM 1 BY 1                
                   UNTIL CLL-I > CLL-IMAX.                              
       FIN-PUT-TAB-CLL.                                                 
           EXIT.                                                        
                                                                        
       LLE-DAT-PNT SECTION.                                             
       INI-LLE-DAT-PNT.           
           MOVE CLL-NUM-ICLI(CLL-I) TO FRM-NUM-ICLI IN CLL-FLD(CLL-I).
           MOVE CLL-VRF-ICLI(CLL-I) TO FRM-VRF-ICLI IN CLL-FLD(CLL-I).
           MOVE CLL-GLS-ICLI(CLL-I) TO FRM-GLS-ICLI IN CLL-FLD(CLL-I).
           MOVE CLL-IND-ICLI(CLL-I) TO FRM-IND-ICLI IN CLL-FLD(CLL-I).
           MOVE CLL-GLS-NOMC(CLL-I) TO FRM-GLS-NOMC IN CLL-FLD(CLL-I).
           MOVE CLL-GLS-ENTD(CLL-I) TO FRM-GLS-ENTD IN CLL-FLD(CLL-I).
           MOVE CLL-CAI-ILIC(CLL-I) TO FRM-CAI-ILIC IN CLL-FLD(CLL-I).
           MOVE CLL-IIC-ILIC(CLL-I) TO FRM-IIC-ILIC IN CLL-FLD(CLL-I).
           MOVE CLL-CAI-ICLF(CLL-I) TO FRM-CAI-ICLF IN CLL-FLD(CLL-I).
           MOVE CLL-IIC-ICLF(CLL-I) TO FRM-IIC-ICLF IN CLL-FLD(CLL-I).
           MOVE CLL-NUM-ILCC(CLL-I) TO FRM-NUM-ILCC IN CLL-FLD(CLL-I).
           MOVE CLL-COD-TIPO(CLL-I) TO FRM-COD-TIPO IN CLL-FLD(CLL-I).
           MOVE CLL-FEC-FINI(CLL-I) TO FRM-FEC-FINI IN CLL-FLD(CLL-I).
           MOVE CLL-FEC-FVEN(CLL-I) TO FRM-FEC-FVEN IN CLL-FLD(CLL-I).
           MOVE CLL-NUM-PVIG(CLL-I) TO FRM-NUM-PVIG IN CLL-FLD(CLL-I).
           MOVE CLL-IND-PVIG(CLL-I) TO FRM-IND-PVIG IN CLL-FLD(CLL-I).
           MOVE CLL-GLS-VCOC(CLL-I) TO FRM-GLS-VCOC IN CLL-FLD(CLL-I).
           MOVE CLL-VAL-MADJ(CLL-I) TO FRM-VAL-MADJ IN CLL-FLD(CLL-I).
           MOVE CLL-VAL-MUTI(CLL-I) TO FRM-VAL-MUTI IN CLL-FLD(CLL-I).
           MOVE CLL-VAL-DISP(CLL-I) TO FRM-VAL-DISP IN CLL-FLD(CLL-I).
           MOVE CLL-VAL-RENC(CLL-I) TO FRM-VAL-RENC IN CLL-FLD(CLL-I).
           MOVE CLL-FEC-FRNC(CLL-I) TO FRM-FEC-FRNC IN CLL-FLD(CLL-I).
           MOVE CLL-VAL-UTIL(CLL-I) TO FRM-VAL-UTIL IN CLL-FLD(CLL-I).
           MOVE CLL-VAL-EUTI(CLL-I) TO FRM-VAL-EUTI IN CLL-FLD(CLL-I).
           MOVE CLL-VAL-FUTI(CLL-I) TO FRM-VAL-FUTI IN CLL-FLD(CLL-I).
           MOVE CLL-GLS-LINE(CLL-I) TO FRM-GLS-LINE IN CLL-FLD(CLL-I).
           MOVE WSS-LINE            TO FRM-GLS-LINE IN CLL-FLD(CLL-I).  
           SUBTRACT 1 FROM WSS-CLL-IMAX.
       FIN-LLE-DAT-PNT.                                                 
           EXIT.                                                        
                                                                        
       INC-REG-TS SECTION.                                              
       INI-INC-REG-TS.                                                  
            MOVE CLL-SI-IMP TO CLL-IMP.                                 
      *     IF SCR-OFRM-SRV                                             
      *       MOVE CLL-VAL-CPTO(CLL-I) TO CLL-VAL-CPTO-EDT              
      *       MOVE CLL-VAL-CPTO-EDT TO CLL-VAL-CPTO-ALF(CLL-I).         
           ADD 1 TO CLL-I.                                              
           IF CLL-I > CLL-IMAX                                          
               PERFORM WRT-TS                                           
               PERFORM CLR-VEC-TS VARYING CLL-I FROM 1 BY 1             
                                     UNTIL CLL-I > CLL-IMAX             
               MOVE 1 TO CLL-I                                          
               MOVE CLL-NO-IMP TO CLL-IMP.                              
       FIN-INC-REG-TS.                                                  
           EXIT.                                                        
                                                                        
      *<<<<                                                             
      *>>>>                                                             
                                                                        
       WRT-TS SECTION.                                                  
       INI-WRT-TS.                                                      
           ADD 1 TO SCR-IMAX.                                           
      *     EXEC CICS WRITEQ TS QUEUE(CLL-NAME-QUE)                     
      *                         FROM(CLL-TS)                            
      *                         LENGTH(CLL-LONG-TS)                     
      *     END-EXEC.                                                   
      *<<<<                                                             
      *    MOVE EIBTRMID      TO CLL-TERM.                              
           MOVE CLL-NAME-QUE   TO QUE-COLA.                             
           MOVE CLL-TS         TO QUE-ITEM.                             
           MOVE CLL-LONG-TS    TO QUE-LITM.                             
           MOVE QUE-PUT        TO QUE-CMND.                             
           PERFORM GNS-PRO-QUE.                                         
      *>>>>                                                             
       FIN-WRT-TS.                                                      
           EXIT.                                                        
                                                                        
       RED-TS SECTION.                                                  
       INI-RED-TS.                                                      
           MOVE CLL-I TO SCR-I.                                         
           EXEC CICS HANDLE CONDITION QIDERR(FIN-RED-TS)                
                                     ITEMERR(FIN-RED-TS)                
           END-EXEC.                                                    
      *     EXEC CICS READQ TS QUEUE(CLL-NAME-QUE)                      
      *                         INTO(CLL-TS)                            
      *                          LENGTH(CLL-LONG-TS)                    
      *                         ITEM(CLL-I)                             
      *     END-EXEC.                                                   
      *<<<<                         
                                    
      *    MOVE EIBTRMID      TO CLL-TERM.                              
           MOVE CLL-NAME-QUE   TO QUE-COLA.                             
           MOVE CLL-TS         TO QUE-ITEM.                             
           MOVE CLL-LONG-TS    TO QUE-LITM.                             
           MOVE CLL-I              TO QUE-NITM.                         
           MOVE QUE-GET            TO QUE-CMND.                         
           PERFORM GNS-PRO-QUE.                                         
           MOVE QUE-ITEM       TO CLL-TS.                               
      *>>>>                                                             
       FIN-RED-TS.                                                      
           EXIT.                                                        
                                                                        
       CLR-VEC-TS SECTION.                                              
       INI-CLR-VEC-TS.                                                  
           MOVE ZEROES TO CLL-NUM-ICLI(CLL-I).                    
           MOVE SPACES TO CLL-VRF-ICLI(CLL-I).                    
           MOVE SPACES TO CLL-GLS-ICLI(CLL-I).                    
           MOVE ZEROES TO CLL-IND-ICLI(CLL-I).                    
           MOVE SPACES TO CLL-GLS-NOMC(CLL-I).
           MOVE SPACES TO CLL-GLS-ENTD(CLL-I).                    
           MOVE SPACES TO CLL-CAI-ILIC(CLL-I).                    
           MOVE SPACES TO CLL-IIC-ILIC(CLL-I).                          
           MOVE SPACES TO CLL-CAI-ICLF(CLL-I).                    
           MOVE SPACES TO CLL-IIC-ICLF(CLL-I).                    
           MOVE ZEROES TO CLL-NUM-ILCC(CLL-I).                    
           MOVE SPACES TO CLL-COD-TIPO(CLL-I).                    
           MOVE ZEROES TO CLL-FEC-FINI(CLL-I).                    
           MOVE ZEROES TO CLL-FEC-FVEN(CLL-I).                    
           MOVE ZEROES TO CLL-NUM-PVIG(CLL-I).                    
           MOVE SPACES TO CLL-IND-PVIG(CLL-I).                    
           MOVE SPACES TO CLL-GLS-VCOC(CLL-I).                    
           MOVE ZEROES TO CLL-VAL-MADJ(CLL-I).                    
           MOVE ZEROES TO CLL-VAL-MUTI(CLL-I).                    
           MOVE ZEROES TO CLL-VAL-DISP(CLL-I).                    
           MOVE ZEROES TO CLL-VAL-RENC(CLL-I).                    
           MOVE ZEROES TO CLL-FEC-FRNC(CLL-I).                    
           MOVE ZEROES TO CLL-VAL-UTIL(CLL-I).        
           MOVE ZEROES TO CLL-VAL-EUTI(CLL-I).
           MOVE ZEROES TO CLL-VAL-FUTI(CLL-I).
           MOVE SPACES TO CLL-GLS-LINE(CLL-I).
       FIN-CLR-VEC-TS.                                                  
           EXIT.                                                        
                                                                        
       RST-STAT SECTION.                                                
       INI-RST-STAT.                                                    
           MOVE SCR-STPP     TO SCR-STAT.                               
           MOVE SCR-MFLD-NOT TO SCR-MFLD.                               
       FIN-RST-STAT.                                                    
           EXIT.                                                        

      *>>>>                                                             
*% END
