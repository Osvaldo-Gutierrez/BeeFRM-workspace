*%! Codigo adicional para archivo LDCPALDC
*%! INCLUDE DE ELEMENTOS DE C.A. PARA PLATAFORMA COMERCIAL
*%! INCLUDE 'GNSTXT:GNSPPPTC.TXT'
*% LARGO_TOTAL_COMMAREA = 570
*% PGM_PTC = TRUE
*% NO_TIENE_TIMESTAMP = TRUE
*%! IF PGM_DTC
*%! INCLUDE 'GNSSRC:MANEJO_VSI.SRC'
*%! END
*% IF PGM_PQ
*% IF CMT_ID
      *<<<<
      *------------------------------------------------------------*
      *  MODIFICA   : SE MODIFICA VALORES EN MODULO BUS-ENT-ANEX   *
      *               SE CAMBIA 'C' POR 'N' Y 'A' POR 'F'          *
      *                                                            *
      *  PROGRAMADOR: SMM AFRI LTDA.                               *
      *                                                            *
      *  FECHA      : DICIEMBRE 2005.                              *
      *------------------------------------------------------------*
      ***************************************************************
      * MODIFICACIONES:
      * 1.-DESCRIPCION:
      *    A) MODIFICACIONES AL PROCESO DE RENOVACION DE MULTILINEAS
      *
      *    FECHA       : 30-08-2010
      *    RESPONSABLE : RGD (BEE-TEAM)
      *    MARCA       : RGD-INI 30-08-2010 MEJORAS MLT
      ***************************************************************
      *>>>>
*% END
*% END
*% IF PGM_PU
*% IF CMT_ID
      *<<<<
      *-------------------------------------------------------------
      *MODIFICACIONES:
      *-------------------------------------------------------------
      *OBJETIVO: SE MODIFICA LA FORMA VALIDAR EL CAMPO LDC-COD-TIPO
      *          PARA CREDITOS FOGAPE
      *PROYECTO: RANGO DE VENTAS
      *FECHA   : MAYO DE 2009
      *AUTOR   : CHC
      *ETIQUETA: *AFRI-INI/CHC/MAY-2009/CANAL DE VENTAS
      *-------------------------------------------------------------
      *OBJETIVO: Se debe validar en tabla DEU TLC si se permite
      *          duplicidad de lineas. Solo si en posicion 7 de
      *          Datos Adicionales existe una "D" se permitira
      *          duplicidad.
      *PROYECTO: Control detalle de Lineas duplicadas
      *FECHA   : 16-04-2018
      *AUTOR   : BEE (RRM)
      *ETIQUETA: RRM-INI abril-2018 / control LDC duplicadas
      *-------------------------------------------------------------
      * NOMBRE PROGRAMA                   LDCPULDC
      * VERSION                           3.1
      * OPCION                            UPD
      * ARCHIVO BASE                      LDCLDC
      * PANTALLA                          LDCLDC
      * INP/OUT                           DATACOM
      * TAMANO COMMAREA                   250
      *>>>>
*% END
*% END
*% IF PGM_BMS AND FIN_SCR_VARI
      *<<<< PGM_BMS AND FIN_SCR_VARI
       COPY LDCWGENG.
           03 SCR-IND-MCLI  VALUE SPACES            PIC X(01).
           03 SCR-IND-OCIC  VALUE SPACES            PIC X(01).
      *JSS-INI 21-MAR-1994
      *    03 SCR-CLF-DISP  VALUE SPACES            PIC X(62).
           03 SCR-COD-TOGA  VALUE SPACES            PIC X(03).
           03 SCR-COD-OFIC  VALUE SPACES            PIC X(03).
           03 SCR-COD-EJEC  VALUE SPACES            PIC X(12).
      *<<<< NOT PGM_ARG
           03 SCR-NUM-ICLI  VALUE SPACES            PIC X(08).
      *>>>>
           03 SCR-VRF-ICLI  VALUE SPACES            PIC X(01).
           03 SCR-IND-ICLI  VALUE SPACES            PIC X(01).
      *<<<< NOT PGM_ARG
           03 SCR-GLS-ICLI  VALUE SPACES            PIC X(03).
      *>>>>
           03 SCR-VAL-CMAX  VALUE ZEROES            PIC 9(11).
           03 SCR-COD-VCCF  VALUE SPACES            PIC X(06).
           03 SCR-COD-TOOC  VALUE SPACES            PIC X(03).
           03 SCR-COD-AOOC  VALUE SPACES            PIC X(03).
      *    03 SCR-CLF-DISP  VALUE SPACES            PIC X(08).
           03 SCR-COD-VCOC  VALUE SPACES            PIC X(06).
      *<<<< NOT PGM_ARG
           03 SCR-CLF-DISP  VALUE SPACES            PIC X(02).
      *>>>>
      *JSS-FIN 21-MAR-1994
      *FLB CST  11-MAY-1994 FIN

           03 CMA-VARI.
              05 ARG-CAI-IGAR                       PIC X(04).
      * Si > zeroes, en CMN-ING enganchar a GAR y/o FIA
              05 ARG-IIC-IGAR                       PIC 9(08).
      * Si > zeroes, en CMN-ING enganchar a GAR y/o FIA
              05 ARC-CAI-IOPC                       PIC X(04).
              05 ARC-IIC-IOPC                       PIC 9(08).
              05 CMA-NUM-ARC                        PIC 9(01).
              05 CMA-NUM-ARG                        PIC 9(01).
              05 CLF-FEC-FAPE.
                 07 CLF-NUM-DAPE                    PIC 9(02).
                 07 CLF-NUM-MAPE                    PIC 9(02).
                 07 CLF-NUM-SAPE                    PIC 9(02).
                 07 CLF-NUM-AAPE                    PIC 9(02).
              05 CLF-FEC-FVEN.
                 07 CLF-NUM-SVEN                    PIC 9(02).
                 07 CLF-NUM-AVEN                    PIC 9(02).
                 07 CLF-NUM-MVEN                    PIC 9(02).
                 07 CLF-NUM-DVEN                    PIC 9(02).
              05 CLF-NUM-PVIG                       PIC 9(03).
              05 CLF-IND-PVIG                       PIC X(01).
      *<<<< NOT PGM_ARG
              05 CLF-VAL-CMAX    COMP-3             PIC S9(11)V9(4).
      *>>>>
              05 CMA-IND-IOPC                       PIC X(01).
      *FLB CST  23-JUN-1994
              05 CMA-IND-IGAR                       PIC X(01).
              05 SCR-LDC-DISP  VALUE SPACES         PIC X(34).
      *FLB CST  23-JUN-1994 FIN
      *>>>>
*% IF PGM_PQ
      *<<<< FIN_SCR_VARI
           03  SCR-VARI-PFS.
               05  SCR-KEY-ILDC-ACTU      PIC X(14).
               05  SCR-KEY-ILDC-RAIZ      PIC X(12).
      *>>>>
*% END
*% END
*% IF WSS
      *<<<< WSS
      *<<<< PGM_BMS
       COPY LDCMXW01.
       COPY LDCWGPMP.
      *>>>>
*% IF PGM_PQ
      *<<<< PGM_PQ
       COPY LDCWGVCL.
      *>>>>
*% END
*% IF PGM_PU
      *<<<< PGM_PU
       01  PGM-STAT-ADIC.
           05 PGM-STAT-GDG           VALUE '23'      PIC X(02).
              88 PGM-STAT-GDG-OKS    VALUE '00'.
              88 PGM-STAT-GDG-NUL    VALUE '  '.
           05 PGM-STAT-FIA           VALUE '23'      PIC X(02).
              88 PGM-STAT-FIA-OKS    VALUE '00'.
              88 PGM-STAT-FIA-NUL    VALUE '  '.
      *>>>>
*% END
       01  WSS-VARI.
*% IF PGM_PU
      *<<<< PGM_PU
      *RRM-INI abril-2018 / control LDC duplicadas
           03 WSS-1            VALUE 1            PIC 9(01).
           03 WSS-D            VALUE 'D'          PIC X(01).
           03 WSS-CT-MLT       VALUE 'MLT'        PIC X(03).
      *RRM-INI abril-2018 / control LDC duplicadas
      *AFRI-INI-SEP2005
          03 WSS-CIC-IFGL                              PIC X(12).
          03 WSS-VEC-DATA.
             05 WSS-VEC-CLI OCCURS 4 TIMES.
                07 WSS-FILL-1                           PIC X(01).
                07 WSS-DBC-NUM-ICLI                     PIC X(08).
                07 WSS-DBC-VRF-ICLI                     PIC X(01).
                07 WSS-DBC-IND-ICLI                     PIC X(01).
                07 WSS-DBC-GLS-ICLI                     PIC X(03).
                07 WSS-FILL-2                           PIC X(01).
      *AFRI-FIN-SEP2005
      *ALD-ADA-INI/08082001
           03  WSS-IND-BANT          VALUE 'N'    PIC X(01).
           03  WSS-VAL-CACT    COMP-3             PIC S9(11)V9(4).
           03  WSS-IND-IGUA          VALUE SPACES    PIC X(01).
           03  WSS-IND-LCP           VALUE 'N'       PIC X(01).
           03  WSS-IND-LCE           VALUE 'N'       PIC X(01).
           03  WSS-IND-LDCA          VALUE 'N'       PIC X(01).
           03  WSS-IND-CLDC          VALUE 'N'       PIC X(01).
           03  LDC-BKP               VALUE SPACES    PIC X(200).
      *ALD-ADA-FIN/08082001
      *SMC-INI 26-10-1993
           03  WSS-VSN-VCTE                       PIC X(01).
               88  USA-CTE       VALUE 'N'.
           03  WSS-VSN-VCEX                       PIC X(01).
               88  USA-CEX       VALUE 'N'.
           03  WSS-VSN-VTCR                       PIC X(01).
               88  USA-TCR       VALUE 'N'.
           03  WSS-VSN-VLEA                       PIC X(01).
               88  USA-LEA       VALUE 'N'.
      *SMC-FIN 26-10-1993

      *FLB CST   21-FEB-1995 PARAMETROS LINEA AVANCE
           03  WSS-GLS-DATA.
               05 WSS-NUM-PLAV                    PIC 9(03).
               05 WSS-COD-PLAV                    PIC X(01).
               05 FILLER                          PIC X(01).
               05 WSS-IND-VTOL                    PIC X(01).
               05 FILLER                          PIC X(14).
               05 WSS-COD-MLAV                    PIC X(06).
               05 WSS-VAL-MMLA                    PIC 9(09).
           03  WSS-VAL-CMAX   VALUE ZEROES        PIC 9(15).
           03  WSS-PES-MMLA   VALUE ZEROES        PIC 9(15).
           03  WSS-CLF-CMAX   VALUE ZEROES        PIC 9(15).
           03  WSS-VSN-MLMC   VALUE SPACES        PIC X(01).
               88 PERMITE-MON-LDC-DIF-A-MON-CLF VALUE 'S'.
           03  WSS-FEC-FMAX.
               05  WSS-NUM-SMAX                   PIC 9(02).
               05  WSS-NUM-AMAX                   PIC 9(02).
               05  WSS-NUM-MMAX                   PIC 9(02).
               05  WSS-NUM-DMAX                   PIC 9(02).
      *FLB CST   9-MAR-1995
           03  WSS-SIS-DATA.
               05 WSS-IND-DEUD                    PIC X(01).
                  88 TIO-DE-DEUDA VALUE 'D'.

           03  WSS-FEC-FINI.
               05  WSS-NUM-SINI                   PIC 9(02).
               05  WSS-NUM-AINI                   PIC 9(02).
               05  WSS-NUM-MINI                   PIC 9(02).
               05  WSS-NUM-DINI                   PIC 9(02).

           03  WSS-FEC-FAPE.
               05  WSS-NUM-SAPE                   PIC 9(02).
               05  WSS-NUM-AAPE                   PIC 9(02).
               05  WSS-NUM-MAPE                   PIC 9(02).
               05  WSS-NUM-DAPE                   PIC 9(02).
      *>>>>
*% END
      *LTM-INI 13.04.1994
           03  WSS-IFIN          VALUE SPACES     PIC X(01).
      *LTM-FIN 13.04.1994
           03  WSS-CIC-ICLI                       PIC X(12).
           03  WSS-COD-COPE.
               05  WSS-COD-TOPE                   PIC X(03).
               05  WSS-COD-AOPE                   PIC X(03).
           03  WSS-NUM-PER                        PIC 9(03).
           03  WSS-IND-PER                        PIC X(01).
           03  ARC-KEY-IARC.
               05  ARC-KEY-ILDC.
                   07  ARC-CAI-ICLF               PIC X(04).
                   07  ARC-IIC-ICLF               PIC 9(08).
      *<<<< NOT PGM_DB2
                   07  ARC-NUM-ILDC               PIC 9(02).
               05  ARC-NUM-IARC                   PIC 9(01).
      *>>>>
           03  ARG-KEY-IARG.
               05  ARG-KEY-ILDC.
                   07  ARG-CAI-ICLF               PIC X(04).
                   07  ARG-IIC-ICLF               PIC 9(08).
      *<<<< NOT PGM_DB2
                   07  ARG-NUM-ILDC               PIC 9(02).
               05  ARG-NUM-IARG                   PIC 9(01).
      *>>>>
           03  WSS-NDIA       VALUE ZEROES        PIC 9(04).
           03  WSS-NANO       VALUE ZEROES        PIC 9(06).
           03  WSS-MOV        VALUE ZEROES        PIC 9(02).
           03  WSS-FS-ARC     VALUE ZEROES        PIC 9(02).

           03  WSS-FEC-FVEN.
               05  WSS-NUM-SVEN                   PIC 9(02).
               05  WSS-NUM-AVEN                   PIC 9(02).
               05  WSS-NUM-MVEN                   PIC 9(02).
               05  WSS-NUM-DVEN                   PIC 9(02).
           03  WSS-FEC-FVE1.
               05  WSS-NUM-SVE1                   PIC 9(02).
               05  WSS-NUM-AVE1                   PIC 9(02).
               05  WSS-NUM-MVE1                   PIC 9(02).
               05  WSS-NUM-DVE1                   PIC 9(02).
           03  WSS-CIC-TOCF   VALUE SPACES        PIC X(12).
*% IF PGM_PU
      *<<<< PGM_PU
           03  WSS-CIC-TOOC   VALUE SPACES        PIC X(12).
           03  WSS-CTA-CTE    VALUE ZEROES        PIC 9(02).
           03  WSS-VSN-OCAI                       PIC X(01).
      *FLB CST  10-OCT-1994 ASIGNA EL IIC DE LA OPC
           03  WSS-VSN-AOPC                       PIC X(01).
      *FLB CST  17-OCT-1994 PERMITE O NO TIO SIN AUX
           03  WSS-VSN-AXOB                       PIC X(01).

      *>>>>
*% END
      *<<<< NOT PGM_DB2
       COPY LDCBRCLF.
       COPY LDCBRARC.
       COPY LDCBRARG.
       COPY LDCBRRDC.
*% IF PGM_PU
      *<<<< PGM_PU
       COPY DEUBRFIA.
       COPY COLBROPC.
      *>>>>
      *<<<< NOT PGM_PQ
       COPY BGLBRGDG.
       COPY BGLBRTAG.
*% END
*% IF PGM_PQ
      *COPY BGLBRTAG
*% END

       COPY SGCBRDBC.

       COPY GNSBRCIC.
       COPY GNSWGCIC.
       COPY GNSWGCPT.
       COPY TABBRTIO.
*% IF PGM_PQ
      *COPY GNSWGTSK.
*% END
*% IF PGM_PU
       COPY GNSWGTSK.
*% END
*% IF PGM_PU
      *<<<< PGM_PU
      *FLB CST  22-FEB-1995
       COPY TABBRCAM.
      *FLB CST  14-OCT-1993
       COPY TABWGCTE.
       COPY SGCBROPE.
       COPY SGCBRRCO.
      *FLB CST  14-OCT-1993

      *FLB CST  10-OCT-1994 VALIDA TIPO DE LINEA
       COPY LDCWGTLC.
      *>>>>
*% END
      *<<<< PGM_DTC

       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-CIC-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-CLF-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-ARC-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-ARG-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-RDC-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-DBC-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-TIO-REQA==.
*% IF PGM_PU
      *<<<< PGM_PU
      *FLB CST  27-FEB-1995
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-CAM-REQA==.

*% END
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-TAG-REQA==.
*% IF PGM_PU
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-GDG-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-FIA-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-OPC-REQA==.

      *FLB CST  14-OCT-1993 1
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-OPE-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-RCO-REQA==.
      *>>>>
      *>>>>
*% END
*% END
*% IF FIN_PGM_STAT AND PGM_CHI
      *<<<< FIN_PGM_STAT AND PGM_CHI
*% IF PGM_PQ
      *<<<< PGM_PQ
              05 PGM-STAT-WSS.
                 88 PGM-STAT-WSS-NUL    VALUE '  '.
                 07 PGM-STT1-WSS        VALUE '2' PIC X(01).
                    88 PGM-STAT-WSS-OKS VALUE '0'.
                 07 PGM-STT2-WSS        VALUE '3' PIC X(01).
      *>>>>
*% END
      *>>>>
*% END
*% IF INI_FIO
      *<<<< INI_FIO
      *PTC ini
           PERFORM GNS-ERR-QUE.
           PERFORM GET-TSK-TERM.
      *PTC fin
      *<<<< ( INI_FIO ) AND ( NOT PGM_VSI )
           PERFORM GNS-HDL-VSM.
      *>>>>
      *<<<< INI_FIO
*% IF PGM_PQ
      *<<<< PGM_PQ
           MOVE SPACES TO ARG-CAI-IGAR IN CMA-VARI.
           MOVE ZEROES TO ARG-IIC-IGAR IN CMA-VARI.
           IF SCR-OFRM-SRV
                PERFORM VRF-LEE-FRM
                IF WSS-LEE-FRM-LDC = 'S'
                    GO TO FIN-INI-FIO.
      *<<<< ISP-INI  24-JAN-1996 11:35:48
           IF SCR-OFRM-SRV
              MOVE WSS-IDX-ILDC TO SCR-IPRO
           ELSE
      *<<<< ISP-FIN  24-JAN-1996 11:35:48
           IF SCR-DESDE-CMN
               MOVE SPACES TO SCR-VEC-ENG
               MOVE WSS-IDX-ILDC TO SCR-IPRO
      *<<<< ISP-INI  24-JAN-1996 11:35:48
      * ISP ( REVERTIR LINES COMENTARIADAS Y COMENTARIAR LAS OTRAS )
               MOVE 'L' TO SCR-IND-COL.
      *         MOVE 'L' TO SCR-IND-COL
      *    ELSE
      *<<<< ISP-FIN  24-JAN-1996 11:35:48
           IF SCR-INST-EXT = WSS-INST-FPEN-CIC AND
              SCR-IND-COL = 'C'
               MOVE WSS-INST-NULL TO SCR-INST-EXT
               MOVE SPACES TO MSG-COD-MENS
               PERFORM ING-FPEN-CIC
           ELSE
           IF SCR-INST-EXT = WSS-INST-FPEN-CIC
               MOVE SPACES TO SCR-VEC-ENG
               MOVE WSS-IDX-ILDC TO SCR-IPRO
               MOVE 'L' TO SCR-IND-COL
               MOVE LOW-VALUES TO LDC-FLD
               MOVE 'ING' TO SCR-CCPP SCR-CMND
               MOVE SCR-INST-HKY TO SCR-INST
               MOVE SPACES TO SCR-IND-FST IN SCR-VEC-FST(SCR-IPRO)
               PERFORM ING-SETE
               PERFORM SCR-INIT
               MOVE 'C' TO SCR-ICMN
               MOVE ZEROES TO SCR-INST-EXT.
      *>>>>
       FIN-INI-FIO.
*% END
      *>>>>
*% END
*% IF PFS_SCR_ACC
      *<<<< PFS_SCR_ACC
           IF FRM-FFLD = FRM-FFLD-PF5 OR FRM-FFLD-PF6 OR
                         FRM-FFLD-PF7 OR FRM-FFLD-PF8
               PERFORM VAL-NUM-KEY-LDC
               PERFORM VAL-NUM-FLD-LDC
               PERFORM SCRL-TAB-LDC
               PERFORM SCR-TRL.
      *>>>>
*% END
*% IF FND_KEY
      *<<<< FND_KEY
           MOVE ZEROES TO CMA-NUM-ARC IN CMA-VARI.
           MOVE ZEROES TO CMA-NUM-ARG IN CMA-VARI.
      *FLB CST  23-JUN-1994
           MOVE SPACES TO CMA-IND-IGAR IN CMA-VARI.
           MOVE SPACES TO CMA-IND-IOPC IN CMA-VARI.
           MOVE SPACES TO ARC-CAI-IOPC IN CMA-VARI.
           MOVE ZEROES TO ARC-IIC-IOPC IN CMA-VARI.
      *>>>>
*% END
*% IF FIN_FND_KEY
      *<<<< FIN_FND_KEY
           IF FIO-STAT-OKS
               MOVE LDC-STP-ITRN IN LDC TO SCR-UMOD.
           IF SCR-CCPP = 'ING' AND PGM-STAT-LDC-OKS OR
              SCR-CCPP NOT = 'ING' AND NOT PGM-STAT-LDC-OKS
               GO TO FIN-FND-KEY.
      *LTM-INI 13.04.1994
           IF (SCR-CCPP = 'ING') OR (SCR-CCPP = 'ACT' AND
               NOT PGM-STAT-LDC-OKS)
               PERFORM BUS-ENT-ANEX
               IF WSS-IFIN = 'S'
                   GO TO FIN-FND-KEY.
      *LTM-FIN 13.04.1994
           MOVE PGM-STAT-LDC TO FIO-STAT.

      *>>>>
*% END
*% IF PGM_BMS AND (FIN_SCR_GIKY OR FIN_SCR_GCNF OR FIN_SCR_GFLD)
      *<<<< PGM_BMS AND (FIN_SCR_GIKY OR FIN_SCR_GCNF OR FIN_SCR_GFLD)
           IF FRM-FFLD = FRM-FFLD-PF3 AND
              SCR-IND-ENG IN SCR-VEC-ENG(SCR-IPRO) = 'S' AND
              SCR-IND-COL = 'C'
               PERFORM EGR-FTER-CIC.
      *>>>>
*% END
*% IF EOF_PQ
      *<<<< ( EOF ) AND ( NOT PGM_VSI )
       COPY GNSBGVSM.
       COPY GNSBHVSM.
      *>>>>
      *<<<< EOF
       SCRL-TAB-LDC SECTION.
       INI-SCRL-TAB-LDC.
           IF FRM-FFLD = FRM-FFLD-PF7 OR FRM-FFLD-PF5
               PERFORM SCRL-TAB-LDC-PF7
               GO TO FIN-SCRL-TAB-LDC.
           IF FRM-FFLD = FRM-FFLD-PF8  OR FRM-FFLD-PF6
               PERFORM SCRL-TAB-LDC-PF8
               GO TO FIN-SCRL-TAB-LDC.
       FIN-SCRL-TAB-LDC.
           EXIT.

       SCRL-TAB-LDC-PF7 SECTION.
       INI-SCRL-TAB-LDC-PF7.
           MOVE SCR-KEY-ILDC-ACTU TO LDC-KEY-ILDC IN LDC.
           MOVE 'LDC-KEY-ILDC' TO FIO-AKEY.
           MOVE FIO-GET-LEQ TO FIO-CMND.
           PERFORM LDC-FIO-LDC.
           IF NOT ( FIO-STAT-OKS AND
               LDC-KEY-ILDC IN LDC = SCR-KEY-ILDC-ACTU )
               MOVE 'LDCCURRNEX' TO MSG-COD-MENS
               GO TO MSG-SCRL-TAB-LDC-PF7.
       PRV-SCRL-TAB-LDC-PF8.
           MOVE 'LDC-KEY-ILDC' TO FIO-AKEY.
           MOVE FIO-GET-PRV TO FIO-CMND.
           PERFORM LDC-FIO-LDC.
           IF NOT ( FIO-STAT-OKS
              AND
              LDC-CIC-ICLF IN LDC = SCR-KEY-ILDC-RAIZ )
               MOVE 'LDC    NOPRV' TO MSG-COD-MENS
               GO TO MSG-SCRL-TAB-LDC-PF7.
           MOVE FIO-STAT TO PGM-STAT-LDC.
           PERFORM SCR-CLRA-LDC.
           PERFORM PUT-SCR.
           GO TO FIN-SCRL-TAB-LDC-PF7.
       MSG-SCRL-TAB-LDC-PF7.
           MOVE 'LDC' TO MSG-COD-SIST.
           PERFORM GET-MSG.
           MOVE MSG-GLS-DESC TO FRM-MEN2.
       FIN-SCRL-TAB-LDC-PF7.
           EXIT.

       SCRL-TAB-LDC-PF8 SECTION.
       INI-SCRL-TAB-LDC-PF8.
           MOVE SCR-KEY-ILDC-ACTU TO LDC-KEY-ILDC IN LDC.
           MOVE 'LDC-KEY-ILDC' TO FIO-AKEY.
           MOVE FIO-GET-NLS TO FIO-CMND.
           PERFORM LDC-FIO-LDC.
           IF NOT ( FIO-STAT-OKS AND
               LDC-KEY-ILDC IN LDC = SCR-KEY-ILDC-ACTU )
               MOVE 'LDCCURRNEX' TO MSG-COD-MENS
               GO TO MSG-SCRL-TAB-LDC-PF8.
       NXT-SCRL-TAB-LDC-PF8.
           MOVE 'LDC-KEY-ILDC' TO FIO-AKEY.
           MOVE FIO-GET-NXT TO FIO-CMND.
           PERFORM LDC-FIO-LDC.
           IF NOT ( FIO-STAT-OKS
              AND
              LDC-CIC-ICLF IN LDC = SCR-KEY-ILDC-RAIZ )
               MOVE 'LDC    NONXT' TO MSG-COD-MENS
               GO TO MSG-SCRL-TAB-LDC-PF8.
           MOVE FIO-STAT TO PGM-STAT-LDC.
           PERFORM SCR-CLRA-LDC.
           PERFORM PUT-SCR.
           GO TO FIN-SCRL-TAB-LDC-PF8.
       MSG-SCRL-TAB-LDC-PF8.
           MOVE 'LDC' TO MSG-COD-SIST.
           PERFORM GET-MSG.
           MOVE MSG-GLS-DESC TO FRM-MEN2.
       FIN-SCRL-TAB-LDC-PF8.
           EXIT.
      *>>>>
      *<<<< EOF
       COPY GNSBPFEC.
      *<<<< NOT PGM_DB2
       COPY LDCBFCLF.
       COPY LDCBFARC.
       COPY LDCBFARG.
       COPY LDCBFRDC.

      *>>>>


      *COPY BGLBFTAG.

       COPY SGCBFDBC.

       COPY GNSBFCIC.

       COPY GNSBGCPT.
      *<<<< PGM_PQ
       GET-ARC SECTION.
       INI-GET-ARC.
           MOVE '00' TO FIO-STAT.
           MOVE LDC-CAI-ICLF IN LDC TO ARC-CAI-ICLF IN WSS-VARI.
           MOVE LDC-IIC-ICLF IN LDC TO ARC-IIC-ICLF IN WSS-VARI.
           MOVE LDC-NUM-ILDC IN LDC TO ARC-NUM-ILDC IN WSS-VARI.
           MOVE ZEROES              TO ARC-NUM-IARC IN WSS-VARI.
           MOVE ARC-KEY-IARC IN WSS-VARI TO ARC-KEY-IARC IN ARC.

           MOVE FIO-GET-NLS TO FIO-CMND.
           PERFORM LDC-FIO-ARC.
           IF NOT ( FIO-STAT-OKS AND
                    ARC-KEY-ILDC IN WSS-VARI = ARC-KEY-ILDC IN ARC )
               MOVE '23' TO PGM-STAT-ARC
               IF FIO-STAT-OKS
                   MOVE FIO-END-BRW TO FIO-CMND
                   PERFORM LDC-FIO-ARC
                   GO TO FIN-GET-ARC
               ELSE
                   GO TO FIN-GET-ARC.

           MOVE ARC-KEY-IARC IN ARC TO ARC-KEY-IARC IN WSS-VARI.
       LUP-ARC.
           ADD 1 TO CMA-NUM-ARC IN CMA-VARI.
           IF CMA-NUM-ARC IN CMA-VARI > 1
               MOVE '00' TO PGM-STAT-ARC
      *Existen multiples ARC
               MOVE FIO-END-BRW TO FIO-CMND
               PERFORM LDC-FIO-ARC
               GO TO FIN-GET-ARC.

       NXT-LUP-ARC.
           MOVE FIO-GET-NXT    TO FIO-CMND.
           PERFORM LDC-FIO-ARC.
           IF FIO-STAT-OKS AND
              ARC-KEY-ILDC IN WSS-VARI = ARC-KEY-ILDC IN ARC
               GO TO LUP-ARC.

       END-LUP-ARC.
      *Existe 1 unico ARC
           IF FIO-STAT-OKS
               MOVE FIO-END-BRW TO FIO-CMND
               PERFORM LDC-FIO-ARC.

           MOVE ARC-KEY-IARC IN WSS-VARI TO ARC-KEY-IARC IN ARC.
           MOVE FIO-GET-KEY    TO FIO-CMND.
           PERFORM LDC-FIO-ARC.
           IF FIO-STAT-OKS
               MOVE '00' TO PGM-STAT-ARC.
           IF ARC-IIC-IOPC IN ARC > ZEROES
               MOVE ARC-CAI-IOPC IN ARC TO ARC-CAI-IOPC IN CMA-VARI
               MOVE ARC-IIC-IOPC IN ARC TO ARC-IIC-IOPC IN CMA-VARI
               MOVE ARC-IND-IOPC IN ARC TO CMA-IND-IOPC IN CMA-VARI.
       FIN-GET-ARC.
           EXIT.

       GET-ARG SECTION.
       INI-GET-ARG.
           MOVE '00' TO FIO-STAT.
           MOVE LDC-CAI-ICLF IN LDC TO ARG-CAI-ICLF IN WSS-VARI.
           MOVE LDC-IIC-ICLF IN LDC TO ARG-IIC-ICLF IN WSS-VARI.
           MOVE LDC-NUM-ILDC IN LDC TO ARG-NUM-ILDC IN WSS-VARI.
           MOVE ZEROES              TO ARG-NUM-IARG IN WSS-VARI.
           MOVE ARG-KEY-IARG IN WSS-VARI TO ARG-KEY-IARG IN ARG.

           MOVE FIO-GET-NLS TO FIO-CMND.
           PERFORM LDC-FIO-ARG.
           IF NOT ( FIO-STAT-OKS AND
                    ARG-KEY-ILDC IN WSS-VARI = ARG-KEY-ILDC IN ARG )
               MOVE '23' TO PGM-STAT-ARG
               IF FIO-STAT-OKS
                   MOVE FIO-END-BRW TO FIO-CMND
                   PERFORM LDC-FIO-ARG
                   GO TO FIN-GET-ARG
               ELSE
                   GO TO FIN-GET-ARG.

           MOVE ARG-KEY-IARG IN ARG TO ARG-KEY-IARG IN WSS-VARI.
       LUP-ARG.
           ADD 1 TO CMA-NUM-ARG IN CMA-VARI.
           IF CMA-NUM-ARG IN CMA-VARI > 1
               MOVE '00' TO PGM-STAT-ARG
      *Existen multiples ARG
               MOVE FIO-END-BRW TO FIO-CMND
               PERFORM LDC-FIO-ARG
               GO TO FIN-GET-ARG.

       NXT-LUP-ARG.
           MOVE FIO-GET-NXT    TO FIO-CMND.
           PERFORM LDC-FIO-ARG.
           IF FIO-STAT-OKS AND
              ARG-KEY-ILDC IN WSS-VARI = ARG-KEY-ILDC IN ARG
               GO TO LUP-ARG.

       END-LUP-ARG.
      *Existe 1 unico ARG
           IF FIO-STAT-OKS
               MOVE FIO-END-BRW TO FIO-CMND
               PERFORM LDC-FIO-ARG.

           MOVE ARG-KEY-IARG IN WSS-VARI TO ARG-KEY-IARG IN ARG.
           MOVE FIO-GET-KEY    TO FIO-CMND.
           PERFORM LDC-FIO-ARG.
           IF FIO-STAT-OKS
               MOVE '00' TO PGM-STAT-ARG.
       FIN-GET-ARG.
           EXIT.
      *>>>>
      *<<<< EOF AND PGM_BMS
      *  CODIGO ADICIONAL PARA ENGANCHE PROGRAMAS

      *<<<< PGM_PQ
       ING-FPEN-CIC SECTION.
       INI-ING-FPEN-CIC.
           MOVE LOW-VALUES TO LDC-FLD.
           PERFORM ING-SETE.
           PERFORM SCR-CLRA-LDC.
           PERFORM HBL-IKY.
           PERFORM HBL-KEY-LDC.
       FIN-ING-FPEN-CIC.
           EXIT.

       ING-SETE SECTION.
       INI-ING-SETE.
           PERFORM CRG-TBL-ENG.
           MOVE WSS-NTRN(SCR-IPRO)     TO SCR-NTRN.
           MOVE WSS-PROG(SCR-IPRO)     TO SCR-PROG.
           MOVE WSS-NMAP(SCR-IPRO)     TO SCR-NMAP.
           MOVE WSS-NLIB(SCR-IPRO)     TO SCR-NLIB.
      *     MOVE WSS-NEMO(WSS-IDX-ICAD) TO SCR-NEMO.

           MOVE WSS-NTRV(SCR-IPRO)     TO SCR-NTRV.
           MOVE WSS-PROV(SCR-IPRO)     TO SCR-PROV.
       FIN-ING-SETE.
           EXIT.

       HBL-KEY-LDC SECTION.
       INI-HBL-KEY-LDC.
           MOVE LOW-VALUES TO LDC-FLD.
           PERFORM SCR-CLRA-LDC.
           MOVE SCR-CAI-ICLF IN SCR-VARI TO LDC-CAI-ICLF IN LDC-FLD.
           MOVE SCR-IIC-ICLF IN SCR-VARI TO LDC-IIC-ICLF IN LDC-FLD.

           MOVE 'ING'                  TO SCR-CCPP.
           MOVE 'ING'                  TO SCR-CMND.
           PERFORM VAL-LDC-NUM-ILDC.

           IF MSG-COD-MENS NOT > SPACES
               PERFORM FND-KEY
               IF MSG-COD-MENS > SPACES
                   MOVE MSG-GLS-DESC TO FRM-MENS.

      * FLB 24/JUL/92 DIO ALGO MALO
      * FLB 24/JUL/92 LE AGREGUE QUE SE VAYA Y NO HABILITE LOS CAMPOS
           IF MSG-COD-MENS > SPACES
               PERFORM CLR-CLF-LDC
      *         MOVE SCR-STAT-CON TO SCR-STAT
      *         MOVE SCR-INST-GAB TO SCR-INST
                MOVE SCR-INST-GKY TO SCR-INST

      *    MOVE FRM-CPSF-AEY TO FRM-CPIM-AEY
               PERFORM PRO-ALL
               PERFORM UNP-IKY-LDC

               PERFORM SCR-MSSG
               PERFORM EDT-KEY-LDC
      *         PERFORM EDT-FLD-LDC
               IF SCR-IND-FST IN SCR-VEC-FST(SCR-IPRO) = 'S'
                   MOVE SPACES TO SCR-IND-FST IN SCR-VEC-FST(SCR-IPRO)
                   PERFORM SCR-INIT
                   PERFORM SCR-EXIT
                   GO TO FIN-HBL-KEY-LDC
               ELSE
                   PERFORM SCR-PUTA
                   PERFORM SCR-EXIT
                   GO TO FIN-HBL-KEY-LDC.

           MOVE +4 TO LDC-CAI-ICLF-LEN IN LDC-FLD.
      *ISP   25-JUL-1990 DEBE SER REEMPLAZADO POR VARIABLE
      *     INHIBE MOVE FRM-CPSF TO FRM-CPIM-AEY
           MOVE '1' TO FRM-CPIM-AEY.
           PERFORM HBL-FLD.
      *ALD-BNL.
           MOVE FRM-CPIM-AEY TO LDC-CAI-ICLF-ATR.
           MOVE FRM-CPIM-AEY TO LDC-IIC-ICLF-ATR.
           MOVE FRM-CPIM-AEY TO LDC-NUM-ILDC-ATR.
      *
           MOVE SCR-INST-GFL TO SCR-INST.

       CIC-HBL-KEY-CLF.
      *
           PERFORM EDT-KEY-LDC.
           PERFORM EDT-FLD-LDC.

           MOVE 'GNS' TO MSG-COD-SIST.
           MOVE 'FLDING' TO MSG-COD-MENS.
           PERFORM GET-MSG.
           MOVE MSG-GLS-DESC TO FRM-MEN1.
           MOVE FRM-MEN1     TO LDC-GLS-MEN1 IN LDC-FLD.

           MOVE 'F10LDCNINCLF' TO MSG-COD-MENS.
           PERFORM MSG-PF10.

           PERFORM SCR-MSSG.

           IF SCR-IND-FST IN SCR-VEC-FST(SCR-IPRO) = 'S'
               MOVE SPACES TO SCR-IND-FST IN SCR-VEC-FST(SCR-IPRO)
               PERFORM SCR-INIT
               PERFORM STP-EXIT
           ELSE
               PERFORM SCR-PUTA.
      *<<<< ISP-INI  24-JAN-1996 11:35:48
           IF SCR-OFRM-SRV
                EXEC CICS
                 RETURN
                END-EXEC.
      *<<<< ISP-FIN  24-JAN-1996 11:35:48
           PERFORM SCR-EXIT.
       FIN-HBL-KEY-LDC.
           EXIT.

       MSG-PF10 SECTION.
       INI-MSG-PF10.
      *GET-MSG Busca mensaje en tabla
           MOVE 'DEU' TO MSG-COD-SIST.
           PERFORM GET-MSG.
           MOVE MSG-GLS-DESC TO FRM-MEN2.
           MOVE FRM-MEN2     TO LDC-GLS-MEN2 IN LDC-FLD.
       FIN-MSG-PF10.
           EXIT.

      *>>>>
       EGR-FPEN-CIC SECTION.
       INI-EGR-FPEN-CIC.
           PERFORM CRG-TBL-ENG.
           ADD 1 TO SCR-IPRO.
           IF SCR-IPRO > WSS-TOT-IIDX
                  PERFORM EGR-FTER-CIC
                  GO TO FIN-EGR-FPEN-CIC.
           IF SCR-IND-ENG IN SCR-VEC-ENG(SCR-IPRO) = SPACES
               GO TO INI-EGR-FPEN-CIC.
           MOVE WSS-INST-FPEN-CIC TO SCR-INST-EXT.
           MOVE WSS-PROG(SCR-IPRO) TO SYS-PROG.
           MOVE SCR-VARI TO SYS-CMMA.
      *<<<< PGM_PQ OR (PGM_PU AND NOT PGM_DB2)
           MOVE SCR-TCMA TO SYS-TCMA.
           MOVE SYS-XCTL TO SYS-CMND.
           PERFORM GNS-PRO-SYS.
      *>>>>
       FIN-EGR-FPEN-CIC.
           EXIT.

       EGR-FTER-CIC SECTION.
       INI-EGR-FTER-CIC.
           PERFORM CRG-TBL-ENG.
           MOVE WSS-IDX-ICLF TO SCR-IPRO.
           MOVE WSS-INST-FTER-CIC TO SCR-INST-EXT.
           MOVE WSS-PROG(SCR-IPRO) TO SYS-PROG.
           MOVE SCR-VARI TO SYS-CMMA.
      *<<<< PGM_PQ OR (PGM_PU AND NOT PGM_DB2)
           MOVE SCR-TCMA TO SYS-TCMA.
           MOVE SYS-XCTL TO SYS-CMND.
           PERFORM GNS-PRO-SYS.
      *>>>>
       FIN-EGR-FTER-CIC.
           EXIT.

       SCR-INIT SECTION.
       INI-SCR-INIT.
           MOVE 3  TO FRM-PLIN.
           MOVE 19 TO FRM-NLIN.
           MOVE FRM-CLR-FRM TO FRM-CMND.
           PERFORM GNS-PRO-FRM.
           MOVE FRM-SINI-DBNF TO FRM-SINI.
           MOVE SCR-NMAP TO FRM-NAME.
           MOVE SCR-NLIB TO FRM-NLIB.
           MOVE LDC-FLD TO FRM-DFLD.
           MOVE FRM-INI TO FRM-CMND.
           PERFORM GNS-PRO-FRM.
       FIN-SCR-INIT.
           EXIT.


       COPY LDCBGMPT.

      *>>>>
      *>>>>
      *<<<< EOF
      *LTM-INI 13.04.1994
       BUS-ENT-ANEX SECTION.
       INI-BUS-ENT-ANEX.
           MOVE ZEROES TO CMA-NUM-ARC IN CMA-VARI.
           MOVE ZEROES TO CMA-NUM-ARG IN CMA-VARI.
           MOVE SPACES TO CMA-IND-IOPC IN CMA-VARI.
           MOVE SPACES TO ARC-CAI-IOPC IN CMA-VARI.
           MOVE ZEROES TO ARC-IIC-IOPC IN CMA-VARI.
           MOVE SPACES              TO WSS-IFIN.
           MOVE LDC-CAI-ICLF IN LDC TO CLF-CAI-ICLF IN CLF.
           MOVE LDC-IIC-ICLF IN LDC TO CLF-IIC-ICLF IN CLF.
           MOVE FIO-GET-KEY    TO FIO-CMND.
           PERFORM LDC-FIO-CLF.
           MOVE FIO-STAT TO PGM-STAT-CLF
           IF NOT FIO-STAT-OKS
      *        LDC no tiene CLF asociado
               MOVE 'DEU' TO MSG-COD-SIST
               MOVE 'LIC    NEX' TO MSG-COD-MENS
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS
               MOVE '00' TO FIO-STAT
               MOVE SCR-STAT-CON TO SCR-STAT
               MOVE 'S'          TO WSS-IFIN
               GO TO FIN-BUS-ENT-ANEX.

      * RGD-INI 13-10-2010 Regularizacion de codigo
      *AFRI-INI/15-10-200 TEMA INMOBILIARIO TIPO CLF
           MOVE 'DEU'                  TO FIO-SIST.
           MOVE 'CNT'                  TO TAB-COD-TTAB IN TAB.
           MOVE CLF-COD-TOCF IN CLF    TO TAB-COD-CTAB IN TAB.
           MOVE FIO-GET-KEY            TO FIO-CMND.
           PERFORM GNS-FIO-TAB.
           IF FIO-STAT-OKS AND TAB-IND-VIGE IN TAB = 'S'
                MOVE 'DEU'             TO MSG-COD-SIST
                MOVE 'TIO    NOCLF'     TO MSG-COD-MENS
                PERFORM GET-MSG
                MOVE MSG-GLS-DESC TO FRM-MENS
                MOVE '00' TO FIO-STAT
                MOVE SCR-STAT-CON TO SCR-STAT
                MOVE 'S'          TO WSS-IFIN
                GO TO FIN-BUS-ENT-ANEX.
      *AFRI-FIN/15-10-200
      * RGD-FIN 13-10-2010
      *    >>>>

           MOVE 'RDC-KEY-ICLF' TO FIO-AKEY.
           MOVE CLF-CAI-ICLF   TO RDC-CAI-ICLF.
           MOVE CLF-IIC-ICLF   TO RDC-IIC-ICLF.
           MOVE FIO-GET-NLS    TO FIO-CMND.
           PERFORM LDC-FIO-RDC.
           IF (NOT FIO-STAT-OKS) OR
              (RDC-CIC-ICLF IN RDC NOT = CLF-CIC-ICLF IN CLF)
      *        CLF no tiene RDC asociado
               MOVE 'DEU'         TO MSG-COD-SIST
               MOVE 'RDC    NEX'  TO MSG-COD-MENS
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC  TO FRM-MENS
               MOVE '00'          TO FIO-STAT
               MOVE SCR-STAT-CON  TO SCR-STAT
               MOVE 'S'           TO WSS-IFIN
               GO TO FIN-BUS-ENT-ANEX
           ELSE
               MOVE RDC-CIC-ICLI   TO WSS-CIC-ICLI IN WSS-VARI
               MOVE 'RDC-KEY-ICLF' TO FIO-AKEY
               MOVE FIO-GET-NXT    TO FIO-CMND
               PERFORM LDC-FIO-RDC
               IF FIO-STAT-OKS AND
                  RDC-CIC-ICLF IN RDC = CLF-CIC-ICLF IN CLF
                   MOVE 'MULTIPLES CLIENTES' TO DBC-GLS-NOMC IN DBC
                   MOVE ZEROES               TO DBC-NUM-ICLI IN DBC
                   MOVE SPACES               TO DBC-VRF-ICLI IN DBC
                                                DBC-IND-ICLI IN DBC
      *FLB CST  11-MAY-1994
                   MOVE IDC-INIC-GLS         TO DBC-GLS-ICLI IN DBC
                   MOVE PGM-SOKS             TO PGM-STAT-DBC
               ELSE
                   MOVE WSS-CIC-ICLI IN WSS-VARI
                                     TO DBC-CIC-ICLI IN DBC
                   MOVE FIO-GET-KEY  TO FIO-CMND
                   PERFORM SGC-FIO-DBC
                   MOVE FIO-STAT     TO PGM-STAT-DBC
                   IF NOT FIO-STAT-OKS
      *                RDC no tiene DBC asociado
                       MOVE 'DEU'         TO MSG-COD-SIST
                       MOVE 'DBC    NEX'  TO MSG-COD-MENS
                       PERFORM GET-MSG
                       MOVE MSG-GLS-DESC  TO FRM-MENS
                       MOVE '00'          TO FIO-STAT
                       MOVE SCR-STAT-CON  TO SCR-STAT
                       MOVE 'S'           TO WSS-IFIN
                       GO TO FIN-BUS-ENT-ANEX
                   ELSE
                       MOVE DBC-GLS-NOMC IN DBC  TO CPT-STRN
                       PERFORM CPT-BLKS
                       MOVE CPT-STRN TO DBC-GLS-NOMC IN DBC.

      *    <<<<

           IF SCR-CCPP = 'ACC' AND SCR-STAT = SCR-STAT-CON
               PERFORM GET-ARC
               PERFORM GET-ARG
               MOVE PGM-STAT-LDC TO FIO-STAT
               MOVE 'S'          TO WSS-IFIN
               GO TO FIN-BUS-ENT-ANEX.

           IF CLF-MSC-STAT IN CLF = 'N'
      *        LDC eliminada
               MOVE 'DEU'           TO MSG-COD-SIST
               MOVE 'LIC    EXTING' TO MSG-COD-MENS
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS
               MOVE SCR-STAT-CON TO SCR-STAT
               MOVE '00' TO FIO-STAT
               MOVE 'S'          TO WSS-IFIN
               GO TO FIN-BUS-ENT-ANEX.

           IF CLF-MSC-STAT IN CLF = 'R'
      *        CLF fue renovada
               MOVE 'DEU'           TO MSG-COD-SIST
               MOVE 'LIC    MCAYA' TO MSG-COD-MENS
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS
               MOVE SCR-STAT-CON TO SCR-STAT
               MOVE '00' TO FIO-STAT
               MOVE 'S'          TO WSS-IFIN
               GO TO FIN-BUS-ENT-ANEX.

           IF CLF-MSC-STAT IN CLF = 'F'
      *        LDC activada
               MOVE 'DEU'          TO MSG-COD-SIST
               MOVE 'LIC    ACAYA' TO MSG-COD-MENS
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS
               MOVE SCR-STAT-CON TO SCR-STAT
               MOVE '00' TO FIO-STAT
               MOVE 'S'          TO WSS-IFIN
               GO TO FIN-BUS-ENT-ANEX.

      *RGD-INI 30-08-2010 MEJORAS MLT
           IF CLF-MSC-STAT IN CLF = 'A'
      *        LDC activada
               MOVE 'DEU'          TO MSG-COD-SIST
               MOVE 'CLF    ACAYA' TO MSG-COD-MENS
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS
               MOVE SCR-STAT-CON TO SCR-STAT
               MOVE '00' TO FIO-STAT
               MOVE 'S'          TO WSS-IFIN
               GO TO FIN-BUS-ENT-ANEX.
      *RGD-FIN 30-08-2010

           MOVE CLF-NUM-DAPE IN CLF TO CLF-NUM-DAPE IN CMA-VARI.
           MOVE CLF-NUM-MAPE IN CLF TO CLF-NUM-MAPE IN CMA-VARI.
           MOVE CLF-NUM-SAPE IN CLF TO CLF-NUM-SAPE IN CMA-VARI.
           MOVE CLF-NUM-AAPE IN CLF TO CLF-NUM-AAPE IN CMA-VARI.
           MOVE CLF-NUM-DVEN IN CLF TO CLF-NUM-DVEN IN CMA-VARI.
           MOVE CLF-NUM-MVEN IN CLF TO CLF-NUM-MVEN IN CMA-VARI.
           MOVE CLF-NUM-SVEN IN CLF TO CLF-NUM-SVEN IN CMA-VARI.
           MOVE CLF-NUM-AVEN IN CLF TO CLF-NUM-AVEN IN CMA-VARI.
           MOVE CLF-NUM-PVIG IN CLF TO CLF-NUM-PVIG IN CMA-VARI.
           MOVE CLF-IND-PVIG IN CLF TO CLF-IND-PVIG IN CMA-VARI.
           MOVE CLF-VAL-CMAX IN CLF TO CLF-VAL-CMAX IN CMA-VARI.

           IF SCR-CCPP = 'ING'
               PERFORM PUT-CLF-LDC
               PERFORM PUT-DBC-LDC
               MOVE PGM-STAT-LDC TO FIO-STAT
               MOVE 'S'          TO WSS-IFIN
               GO TO FIN-BUS-ENT-ANEX.

           PERFORM GET-ARC.
           PERFORM GET-ARG.
       FIN-BUS-ENT-ANEX.
           EXIT.
      *LTM-FIN 13.04.1994

       PGM-EBR-ALL SECTION.
       INI-PGM-EBR-ALL.
           MOVE FIO-EBR-ALL TO FIO-CMND.
           PERFORM LDC-FIO-LDC.
       FIN-PGM-EBR-ALL.
           EXIT.

      *>>>>
       VRF-LEE-FRM SECTION.
       INI-VRF-LEE-FRM.
           MOVE TSK-TERM-ALF TO QUE-TERM.
           MOVE PTC-LDC-TYPE-LFRM TO QUE-TYPE.
           MOVE PTC-LDC-LENG-LFRM TO QUE-LITM.
           MOVE 1 TO QUE-NITM.
           MOVE QUE-GET TO QUE-CMND.
           PERFORM GNS-PRO-QUE.
           IF QUE-STAT = QUE-STAT-OKS
              MOVE 'S' TO WSS-LEE-FRM-LDC.
       FIN-VRF-LEE-FRM.
           EXIT.
      *>>>>
*% END
*% IF PUT_SCR
      *<<<< PUT_SCR
           IF PGM-STAT-LDC-OKS
               MOVE LDC-STP-ITRN IN LDC TO SCR-UMOD.
           IF PGM-STAT-LDC-OKS
               MOVE LDC-CIC-ICLF IN LDC TO SCR-KEY-ILDC-RAIZ
               MOVE LDC-KEY-ILDC IN LDC TO SCR-KEY-ILDC-ACTU.
      *>>>>
      *<<<< PUT_SCR
      *LTM-INI 13.04.1994
           PERFORM BUS-ENT-ANEX.
      *LTM-FIN 13.04.1994
      *>>>>
*% END
*% IF PFS_GET_CON
      *<<<< PFS_GET_CON
           IF NOT ( FRM-FFLD = FRM-FFLD-PF5 )
           IF NOT ( FRM-FFLD = FRM-FFLD-PF6 )
      *>>>>
*% END
*% IF INI_HBL_IKY
      *<<<<
           GO TO NXT-HBL-IKY.
      *>>>>
*% END
*% IF FIN_HBL_IKY
      *<<<<
       NXT-HBL-IKY.
      *PTC-INI
           IF NOT SCR-OFRM-SRV
      *PTC-FIN
           IF SCR-DESDE-CMN
               MOVE LDC-GLS-MENS TO FRM-MENS
               MOVE LOW-VALUES TO LDC-FLD
      * FLB  7-NOV-1994
               PERFORM CLR-KEY-LDC

               IF FRM-MENS < SPACES
                   MOVE LOW-VALUES TO LDC-GLS-MENS
               ELSE
                   MOVE FRM-MENS TO LDC-GLS-MENS.
           MOVE FRM-CPSF-AEY TO FRM-CPIM-AEY.
           PERFORM PRO-FLD-LDC.
           PERFORM PRO-MKY-LDC.
           MOVE '1' TO FRM-CPIM-AEY.
           PERFORM UNP-IKY-LDC.
           PERFORM FST-KEY-LDC.
      *>>>>
*% END
*% IF PGM_BMS AND GET_FLD
      *<<<< PGM_BMS AND GET_FLD
           IF FRM-FFLD = FRM-FFLD-PF10 AND
              SCR-IND-ENG IN SCR-VEC-ENG(SCR-IPRO) = 'S'
              MOVE SCR-STAT-ABT TO SCR-STAT
               IF SCR-IND-COL = 'C'
                   MOVE WSS-TOT-IIDX TO SCR-IPRO
                   PERFORM EGR-FTER-CIC
               ELSE
                   SUBTRACT 1 FROM WSS-IDX-ILDC GIVING SCR-IPRO
                   GO TO FIN-GET-FLD.
      *>>>>
*% END
*% IF CMN_ING
      *<<<< CMN_ING OR CMN_MOD
           IF LDC-IND-MGAR IN LDC-FLD = 'E'
               MOVE 'U' TO LDC-IND-MGAR IN LDC.
      *ALD-BCI-INI/06-JUL-1999
           MOVE SPACES TO LDC-COD-APFA IN LDC.
           IF SCR-OFRM-SRV
              MOVE 'APFA'              TO QUE-TYPE
              MOVE TSK-TERM-ALF        TO QUE-TERM
              MOVE LDC-NUM-ILDC IN LDC TO QUE-NITM
              MOVE +02                 TO QUE-LITM
              MOVE QUE-GET             TO QUE-CMND
              PERFORM GNS-PRO-QUE
              IF QUE-STAT = QUE-STAT-OKS
                  MOVE QUE-ITEM         TO LDC-COD-APFA IN LDC.
      *ALD-BCI-FIN/06-JUL-1999
      *ALD-ADA-INI/18072001
           PERFORM ACT-CAMPO-CACT.
      *ALD-ADA-FIN/18072001

      *>>>>
*% END
*% IF CMN_MOD
      *<<<< CMN_ING OR CMN_MOD
           IF LDC-IND-MGAR IN LDC-FLD = 'E'
               MOVE 'U' TO LDC-IND-MGAR IN LDC.
      *ALD-ADA-INI/18072001
           PERFORM ACT-CAMPO-CACT.
      *ALD-ADA-FIN/18072001
      *>>>>
*% END
*% IF FIN_CMN_MOD
      *<<<< FIN_CMN_MOD
      *JVM: Modifica ARC sin Multiples
       MOD-ARC.
           IF CMA-NUM-ARC IN CMA-VARI > 1
               GO TO MOD-ARG.

           IF CMA-NUM-ARC IN CMA-VARI = 0
               GO TO EXA-CERO-ARC.

           MOVE LDC-CAI-ICLF IN LDC-FLD TO ARC-CAI-ICLF IN ARC.
           MOVE LDC-IIC-ICLF IN LDC-FLD TO ARC-IIC-ICLF IN ARC.
           MOVE LDC-NUM-ILDC IN LDC-FLD TO ARC-NUM-ILDC IN ARC.
           MOVE 1                       TO ARC-NUM-IARC IN ARC.
           MOVE FIO-GET-KEY-UPD TO FIO-CMND.
           PERFORM LDC-FIO-ARC.
           IF NOT FIO-STAT-OKS
               GO TO FIN-CMN-MOD.

           IF ARC-COD-VCOC IN LDC-FLD = SPACES AND
              ARC-COD-TOOC IN LDC-FLD = SPACES AND
              ARC-COD-AOOC IN LDC-FLD = SPACES AND
              ARC-IIC-IOPC IN LDC-FLD = ZEROES
               MOVE FIO-DEL TO FIO-CMND
           ELSE
               PERFORM RET-ARC-LDC
               MOVE CMA-IND-IOPC IN CMA-VARI TO ARC-IND-IOPC IN ARC
               MOVE FIO-MOD TO FIO-CMND.
           PERFORM LDC-FIO-ARC.

           GO TO MOD-ARG.

       EXA-CERO-ARC.
           IF ARC-COD-VCOC IN LDC-FLD = SPACES AND
              ARC-COD-TOOC IN LDC-FLD = SPACES AND
              ARC-COD-AOOC IN LDC-FLD = SPACES AND
              ARC-IIC-IOPC IN LDC-FLD = ZEROES
               GO TO MOD-ARG.

           MOVE LDC-CAI-ICLF IN LDC-FLD TO ARC-CAI-ICLF IN ARC.
           MOVE LDC-IIC-ICLF IN LDC-FLD TO ARC-IIC-ICLF IN ARC.
           MOVE LDC-NUM-ILDC IN LDC-FLD TO ARC-NUM-ILDC IN ARC.
           MOVE 1                       TO ARC-NUM-IARC IN ARC.
           PERFORM RET-ARC-LDC.
           MOVE FIO-PUT TO FIO-CMND.
           PERFORM LDC-FIO-ARC.
           IF NOT FIO-STAT-OKS
               MOVE FIO-MENS TO FRM-MENS
               GO TO FIN-CMN-MOD
           ELSE
               GO TO MOD-ARG.

      *JVM: Modifica ARG sin Multiples
       MOD-ARG.
           IF CMA-NUM-ARG IN CMA-VARI > 1
               GO TO MOD-CLF.

           IF CMA-NUM-ARG IN CMA-VARI = 0
               GO TO EXA-CERO-ARG.

           IF LDC-IND-MGAR IN LDC-FLD = 'Y' OR 'O'
               GO TO MOD-CLF.

           MOVE LDC-CAI-ICLF IN LDC-FLD TO ARG-CAI-ICLF IN ARG.
           MOVE LDC-IIC-ICLF IN LDC-FLD TO ARG-IIC-ICLF IN ARG.
           MOVE LDC-NUM-ILDC IN LDC-FLD TO ARG-NUM-ILDC IN ARG.
           MOVE 1                       TO ARG-NUM-IARG IN ARG.
           MOVE FIO-GET-KEY-UPD TO FIO-CMND.
           PERFORM LDC-FIO-ARG.
           IF NOT FIO-STAT-OKS
               GO TO FIN-CMN-MOD.

           IF LDC-IND-MGAR IN LDC-FLD = 'S'
               MOVE FIO-DEL TO FIO-CMND
           ELSE
      * LDC-IND-MGAR IN LDC-FLD = 'U' OR 'E'
               PERFORM RET-ARG-LDC
               MOVE FIO-MOD TO FIO-CMND.
           PERFORM LDC-FIO-ARG.

           GO TO MOD-CLF.

       EXA-CERO-ARG.
           IF LDC-IND-MGAR IN LDC-FLD = 'S' OR 'Y' OR 'O'
               GO TO MOD-CLF.

           MOVE LDC-CAI-ICLF IN LDC-FLD TO ARG-CAI-ICLF IN ARG.
           MOVE LDC-IIC-ICLF IN LDC-FLD TO ARG-IIC-ICLF IN ARG.
           MOVE LDC-NUM-ILDC IN LDC-FLD TO ARG-NUM-ILDC IN ARG.
           MOVE 1                       TO ARG-NUM-IARG IN ARG.
           PERFORM RET-ARG-LDC.
           MOVE FIO-PUT TO FIO-CMND.
           PERFORM LDC-FIO-ARG.
           IF NOT FIO-STAT-OKS
               MOVE FIO-MENS TO FRM-MENS
               GO TO FIN-CMN-MOD
           ELSE
               GO TO MOD-CLF.

       MOD-CLF.
           MOVE LDC-CAI-ICLF IN LDC-FLD TO CLF-CAI-ICLF IN CLF.
           MOVE LDC-IIC-ICLF IN LDC-FLD TO CLF-IIC-ICLF IN CLF.
           MOVE FIO-GET-KEY-UPD TO FIO-CMND.
           PERFORM LDC-FIO-CLF.
           IF NOT FIO-STAT-OKS
               GO TO FIN-CMN-MOD.
      * AMP 19-OCT-1993 (DECIA FIN-CMN-ELI)
           MOVE 'I' TO CLF-MSC-STAT IN CLF.
           MOVE FIO-MOD TO FIO-CMND.
           PERFORM LDC-FIO-CLF.
      *>>>>
*% END
*% IF FIN_CMN_ING
      *<<<< FIN_CMN_ING
      *PTC-INI-MAN
           IF SCR-OFRM-SRV
               MOVE PTC-LDC-TYPE TO QUE-TYPE
               MOVE TSK-TERM-ALF TO QUE-TERM
               MOVE QUE-DEL      TO QUE-CMND
               PERFORM GNS-PRO-QUE
               MOVE PTC-LDC-TYPE TO QUE-TYPE
               MOVE TSK-TERM-ALF TO QUE-TERM
               MOVE PTC-LDC-LENG TO QUE-LITM
               MOVE LDC-CAI-ICLF IN LDC-FLD TO PTC-LDC-LDC-CAI-ICLF
               MOVE LDC-IIC-ICLF IN LDC-FLD TO PTC-LDC-LDC-IIC-ICLF
               MOVE LDC-NUM-ILDC IN LDC-FLD TO PTC-LDC-LDC-NUM-ILDC
               MOVE PTC-LDC-ITEM TO QUE-ITEM
               MOVE QUE-PUT      TO QUE-CMND
               PERFORM GNS-PRO-QUE.
      *PTC-FIN-MAN

      *SMC-INI 23-11-1993, CUANDO SE INGRESA UNA LDC, LA CLF
      *                    QUEDA EN ESTADO DE INGRESADA.

           MOVE LDC-CAI-ICLF IN LDC-FLD TO CLF-CAI-ICLF IN CLF.
           MOVE LDC-IIC-ICLF IN LDC-FLD TO CLF-IIC-ICLF IN CLF.
           MOVE FIO-GET-KEY-UPD TO FIO-CMND.
           PERFORM LDC-FIO-CLF.
           IF NOT FIO-STAT-OKS
              MOVE FIO-MENS TO FRM-MENS
              GO TO FIN-CMN-ING.

           MOVE 'I' TO CLF-MSC-STAT IN CLF.
           MOVE FIO-MOD TO FIO-CMND.
           PERFORM LDC-FIO-CLF.
           IF NOT FIO-STAT-OKS
              MOVE FIO-MENS TO FRM-MENS
              GO TO FIN-CMN-ING.

      *SMC-FIN 23-11-1993

      *FLB CST  10-JUN-1994 CAMBIADO AL ELIMINAR 'M' DE VCOC
           IF ARC-COD-VCOC IN LDC-FLD > SPACES OR
              ARC-COD-TOOC IN LDC-FLD > SPACES OR
              ARC-COD-AOOC IN LDC-FLD > SPACES OR
              ARC-IIC-IOPC IN LDC-FLD > ZEROES
               PERFORM PUT-ARC
               IF NOT FIO-STAT-OKS
                   MOVE FIO-MENS TO FRM-MENS
                   GO TO FIN-CMN-ING.

           IF LDC-IND-MGAR IN LDC-FLD = 'U' OR 'E'
               PERFORM PUT-ARG
               IF NOT FIO-STAT-OKS
                   MOVE FIO-MENS TO FRM-MENS
                   GO TO FIN-CMN-ING.

      *ALD-BNL ELIMINADO 22/JUL/92
      *<<<< PGM_BMS
      *FLB 22/JUL/92
               PERFORM ENG-PGM.
               IF SCR-IND-COL = 'C'
                   PERFORM EGR-FPEN-CIC
               ELSE
                   IF WSS-IENG = 'S'
                       PERFORM EGR-FPEN-CIC.
      *>>>>
      *>>>>
*% END
*% IF FIN_CMD_ELI
      *<<<< FIN_CMN_ELI
           PERFORM DEL-ARC.
           PERFORM DEL-ARG.
           MOVE LDC-CAI-ICLF IN LDC-FLD TO CLF-CAI-ICLF IN CLF.
           MOVE LDC-IIC-ICLF IN LDC-FLD TO CLF-IIC-ICLF IN CLF.
           MOVE FIO-GET-KEY-UPD TO FIO-CMND.
           PERFORM LDC-FIO-CLF.
           IF NOT FIO-STAT-OKS
               GO TO FIN-CMN-ELI.
           MOVE 'I' TO CLF-MSC-STAT IN CLF.
           MOVE FIO-MOD TO FIO-CMND.
           PERFORM LDC-FIO-CLF.
      *>>>>
*% END
*% IF EOF_PU
      *<<<< ( EOF ) AND ( NOT PGM_VSI )
       COPY GNSBGVSM.
       COPY GNSBHVSM.
      *>>>>
      *<<<< EOF
       COPY GNSBPFEC.
      *<<<< NOT PGM_DB2
       COPY LDCBFCLF.
       COPY LDCBFARC.
       COPY LDCBFARG.
       COPY LDCBFRDC.

      *<<<< PGM_PU
       COPY DEUBFFIA.
       COPY COLBFOPC.
      *>>>>
      *>>>>

       COPY BGLBFGDG.

       COPY BGLBFTAG.

       COPY SGCBFDBC.

       COPY GNSBFCIC.
      *<<<< NOT PGM_PQ
       COPY GNSBGCIC.
      *FLB CST  14-OCT-1993
       COPY SGCBFOPE.
       COPY SGCBFRCO.

      *FLB CST  10-OCT-1994 VALIDA TIPO DE LINEA
       COPY LDCBVTLC.
      *FLB CST  13-MAR-1995 VALIDA MONEDA LDC VS. CLF
       COPY LDCBVMLC.
      *>>>>

       COPY GNSBGCPT.
       COPY GNSBGTSK.
      *<<<< PGM_PU
       PUT-ARC SECTION.
       INI-PUT-ARC.
           MOVE '00' TO FIO-STAT.
           MOVE LDC-CAI-ICLF IN LDC-FLD TO ARC-CAI-ICLF IN WSS-VARI.
           MOVE LDC-IIC-ICLF IN LDC-FLD TO ARC-IIC-ICLF IN WSS-VARI.
           MOVE LDC-NUM-ILDC IN LDC-FLD TO ARC-NUM-ILDC IN WSS-VARI.
           MOVE 9                       TO ARC-NUM-IARC IN WSS-VARI.
           MOVE ARC-KEY-IARC IN WSS-VARI TO ARC-KEY-IARC IN ARC.

           MOVE FIO-GET-LEQ TO FIO-CMND.
           PERFORM LDC-FIO-ARC.
           IF NOT ( FIO-STAT-OKS AND
                    ARC-KEY-ILDC IN WSS-VARI = ARC-KEY-ILDC IN ARC )
      *INI-JGM 29-07-1998.
              PERFORM GET-FHOY
              MOVE HOY-FHOY TO ARC-FEC-FTRN IN ARC
              MOVE HOY-HHOY TO ARC-HRA-HRTR IN ARC
              MOVE SCR-OTRN TO ARC-COD-OTRN IN ARC
              MOVE SCR-USER TO ARC-COD-ATRN IN ARC
              MOVE 'I'      TO ARC-MSC-TACC IN ARC
              MOVE 'I'      TO ARC-MSC-STAT IN ARC
      *FIN-JGM 29-07-1998.
               MOVE ZEROES TO ARC-NUM-IARC IN ARC.

           IF FIO-STAT-OKS
               MOVE FIO-END-BRW TO FIO-CMND
               PERFORM LDC-FIO-ARC.

           IF ARC-NUM-IARC IN ARC = 9
              GO TO FIN-PUT-ARC.

       GEN-ARC.
           ADD 1                        TO ARC-NUM-IARC IN ARC.
           MOVE LDC-CAI-ICLF IN LDC-FLD TO ARC-CAI-ICLF IN ARC.
           MOVE LDC-IIC-ICLF IN LDC-FLD TO ARC-IIC-ICLF IN ARC.
           MOVE LDC-NUM-ILDC IN LDC-FLD TO ARC-NUM-ILDC IN ARC.
           MOVE ARC-COD-VCOC IN LDC-FLD TO ARC-COD-VCOC IN ARC.
           MOVE ARC-COD-TOOC IN LDC-FLD TO ARC-COD-TOOC IN ARC.
           MOVE ARC-COD-AOOC IN LDC-FLD TO ARC-COD-AOOC IN ARC.
           MOVE ARC-CAI-IOPC IN LDC-FLD TO ARC-CAI-IOPC IN ARC.
           MOVE ARC-IIC-IOPC IN LDC-FLD TO ARC-IIC-IOPC IN ARC.
           MOVE SPACES                  TO ARC-GLS-DISP IN ARC.

           MOVE FIO-PUT TO FIO-CMND.
           PERFORM LDC-FIO-ARC.
           IF NOT FIO-STAT-OKS
              MOVE FIO-MENS TO FRM-MENS.
       FIN-PUT-ARC.
           EXIT.

       PUT-ARG SECTION.
       INI-PUT-ARG.
           MOVE '00' TO FIO-STAT.
           MOVE LDC-CAI-ICLF IN LDC-FLD  TO ARG-CAI-ICLF IN WSS-VARI.
           MOVE LDC-IIC-ICLF IN LDC-FLD  TO ARG-IIC-ICLF IN WSS-VARI.
           MOVE LDC-NUM-ILDC IN LDC-FLD  TO ARG-NUM-ILDC IN WSS-VARI.
           MOVE 9                        TO ARG-NUM-IARG IN WSS-VARI.
           MOVE ARG-KEY-IARG IN WSS-VARI TO ARG-KEY-IARG IN ARG.

           MOVE FIO-GET-LEQ TO FIO-CMND.
           PERFORM LDC-FIO-ARG.
           IF NOT ( FIO-STAT-OKS AND
                    ARG-KEY-ILDC IN WSS-VARI = ARG-KEY-ILDC IN ARG )
      *INI-JGM 29-07-1998.
              PERFORM GET-FHOY
              MOVE HOY-FHOY TO ARG-FEC-FTRN IN ARG
              MOVE HOY-HHOY TO ARG-HRA-HRTR IN ARG
              MOVE SCR-OTRN TO ARG-COD-OTRN IN ARG
              MOVE SCR-USER TO ARG-COD-ATRN IN ARG
              MOVE 'I'      TO ARG-MSC-TACC IN ARG
              MOVE 'I'      TO ARG-MSC-STAT IN ARG
      *FIN-JGM 29-07-1998.
               MOVE ZEROES TO ARG-NUM-IARG IN ARG.

           IF FIO-STAT-OKS
               MOVE FIO-END-BRW TO FIO-CMND
               PERFORM LDC-FIO-ARG.

           IF ARG-NUM-IARG IN ARG = 9
              GO TO FIN-PUT-ARG.

       GEN-ARG.
           ADD 1                        TO ARG-NUM-IARG IN ARG.
           MOVE LDC-CAI-ICLF IN LDC-FLD TO ARG-CAI-ICLF IN ARG.
           MOVE LDC-IIC-ICLF IN LDC-FLD TO ARG-IIC-ICLF IN ARG.
           MOVE LDC-NUM-ILDC IN LDC-FLD TO ARG-NUM-ILDC IN ARG.
           MOVE ARG-COD-TOGA IN LDC-FLD TO ARG-COD-TOGA IN ARG.
           MOVE ARG-COD-AOGA IN LDC-FLD TO ARG-COD-AOGA IN ARG.
           MOVE ARG-NUM-PORG IN LDC-FLD TO ARG-NUM-PORG IN ARG.
           MOVE ARG-CAI-IGAR IN LDC-FLD TO ARG-CAI-IGAR IN ARG.
           MOVE ARG-IIC-IGAR IN LDC-FLD TO ARG-IIC-IGAR IN ARG.
           MOVE SPACES                  TO ARG-GLS-DISP IN ARG.

           MOVE FIO-PUT TO FIO-CMND.
           PERFORM LDC-FIO-ARG.
           IF NOT FIO-STAT-OKS
              MOVE FIO-MENS TO FRM-MENS.
       FIN-PUT-ARG.
           EXIT.

       DEL-ARC SECTION.
       INI-DEL-ARC.
           MOVE LDC-CAI-ICLF IN LDC-FLD  TO ARC-CAI-ICLF IN WSS-VARI.
           MOVE LDC-IIC-ICLF IN LDC-FLD  TO ARC-IIC-ICLF IN WSS-VARI.
           MOVE LDC-NUM-ILDC IN LDC-FLD  TO ARC-NUM-ILDC IN WSS-VARI.
           MOVE ZEROES                   TO ARC-NUM-IARC IN ARC.
           MOVE ARC-KEY-IARC IN WSS-VARI TO ARC-KEY-IARC IN ARC.
           MOVE FIO-GET-NLS TO FIO-CMND.
       LUP-DEL-ARC.
           PERFORM LDC-FIO-ARC.
           IF FIO-STAT-OKS
               MOVE FIO-END-BRW TO FIO-CMND
               PERFORM LDC-FIO-ARC.

           IF NOT ( FIO-STAT-OKS AND
              ARC-KEY-ILDC IN WSS-VARI = ARC-KEY-ILDC IN ARC )
               GO TO FIN-DEL-ARC.

           MOVE FIO-GET-KEY-UPD TO FIO-CMND.
           PERFORM LDC-FIO-ARC.
           IF NOT FIO-STAT-OKS
              GO TO FIN-DEL-ARC.

           MOVE FIO-DEL TO FIO-CMND.
           PERFORM LDC-FIO-ARC.
           IF NOT FIO-STAT-OKS
               MOVE 'DEU' TO MSG-COD-SIST
               MOVE 'ARC    DEL' TO MSG-COD-MENS
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS
               GO TO FIN-DEL-ARC.

           MOVE ARC-KEY-ILDC IN WSS-VARI TO ARC-KEY-ILDC IN ARC.
      *<<<< NOT PGM_DB2
           MOVE FIO-GET-NLS TO FIO-CMND.
      *>>>>
           GO TO LUP-DEL-ARC.
       FIN-DEL-ARC.
           EXIT.

       DEL-ARG SECTION.
       INI-DEL-ARG.
           MOVE LDC-CAI-ICLF IN LDC-FLD  TO ARG-CAI-ICLF IN WSS-VARI.
           MOVE LDC-IIC-ICLF IN LDC-FLD  TO ARG-IIC-ICLF IN WSS-VARI.
           MOVE LDC-NUM-ILDC IN LDC-FLD  TO ARG-NUM-ILDC IN WSS-VARI.
           MOVE ZEROS                    TO ARG-NUM-IARG IN WSS-VARI.
           MOVE ARG-KEY-IARG IN WSS-VARI TO ARG-KEY-IARG IN ARG.
           MOVE FIO-GET-NLS TO FIO-CMND.
       LUP-DEL-ARG.
           PERFORM LDC-FIO-ARG.
           IF FIO-STAT-OKS
               MOVE FIO-END-BRW TO FIO-CMND
               PERFORM LDC-FIO-ARG.

           IF NOT ( FIO-STAT-OKS AND
              ARG-KEY-ILDC IN WSS-VARI = ARG-KEY-ILDC IN ARG )
               GO TO FIN-DEL-ARG.

           MOVE FIO-GET-KEY-UPD TO FIO-CMND.
           PERFORM LDC-FIO-ARG.
           IF NOT FIO-STAT-OKS
              GO TO FIN-DEL-ARG.

           MOVE FIO-DEL TO FIO-CMND.
           PERFORM LDC-FIO-ARG.
           IF NOT FIO-STAT-OKS
               MOVE 'DEU' TO MSG-COD-SIST
               MOVE 'ARG    DEL' TO MSG-COD-MENS
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS
               GO TO FIN-DEL-ARG.

           MOVE ARG-KEY-ILDC IN WSS-VARI TO ARG-KEY-ILDC IN ARG.
      *<<<< NOT PGM_DB2
           MOVE FIO-GET-NLS TO FIO-CMND.
      *>>>>
           GO TO LUP-DEL-ARG.
       FIN-DEL-ARG.
           EXIT.

      *FLB CST  22-FEB-1995
       COPY TABBFCAM.
      *>>>>
      *<<<< EOF AND PGM_BMS
      *  CODIGO ADICIONAL PARA ENGANCHE PROGRAMAS

       EGR-FPEN-CIC SECTION.
       INI-EGR-FPEN-CIC.
           PERFORM CRG-TBL-ENG.
           ADD 1 TO SCR-IPRO.
           IF SCR-IPRO > WSS-TOT-IIDX
                  PERFORM EGR-FTER-CIC
                  GO TO FIN-EGR-FPEN-CIC.
           IF SCR-IND-ENG IN SCR-VEC-ENG(SCR-IPRO) = SPACES
               GO TO INI-EGR-FPEN-CIC.
           MOVE WSS-INST-FPEN-CIC TO SCR-INST-EXT.
           MOVE WSS-PROG(SCR-IPRO) TO SYS-PROG.
           MOVE SCR-VARI TO SYS-CMMA.
      *<<<< PGM_PQ OR (PGM_PU AND NOT PGM_DB2)
           MOVE SCR-TCMA TO SYS-TCMA.
           MOVE SYS-XCTL TO SYS-CMND.
      *<<<< ISP-INI  24-JAN-1996 11:35:48
           IF SCR-OFRM-SRV
               MOVE WSS-IDX-ILDC TO SCR-IPRO
           ELSE
      *<<<< ISP-FIN  24-JAN-1996 11:35:48
           PERFORM GNS-PRO-SYS.
      *>>>>
       FIN-EGR-FPEN-CIC.
           EXIT.

       EGR-FTER-CIC SECTION.
       INI-EGR-FTER-CIC.
           PERFORM CRG-TBL-ENG.
           MOVE WSS-IDX-ICLF TO SCR-IPRO.
           MOVE WSS-INST-FTER-CIC TO SCR-INST-EXT.
           MOVE WSS-PROG(SCR-IPRO) TO SYS-PROG.
           MOVE SCR-VARI TO SYS-CMMA.
      *<<<< PGM_PQ OR (PGM_PU AND NOT PGM_DB2)
           MOVE SCR-TCMA TO SYS-TCMA.
           MOVE SYS-XCTL TO SYS-CMND.
      *<<<< ISP-INI  24-JAN-1996 11:35:48
           IF SCR-OFRM-SRV
               MOVE WSS-IDX-ILDC TO SCR-IPRO
           ELSE
      *<<<< ISP-FIN  24-JAN-1996 11:35:48
           PERFORM GNS-PRO-SYS.
      *>>>>
       FIN-EGR-FTER-CIC.
           EXIT.

       SCR-INIT SECTION.
       INI-SCR-INIT.
           MOVE 3  TO FRM-PLIN.
           MOVE 19 TO FRM-NLIN.
           MOVE FRM-CLR-FRM TO FRM-CMND.
           PERFORM GNS-PRO-FRM.
           MOVE FRM-SINI-DBNF TO FRM-SINI.
           MOVE SCR-NMAP TO FRM-NAME.
           MOVE SCR-NLIB TO FRM-NLIB.
           MOVE LDC-FLD TO FRM-DFLD.
           MOVE FRM-INI TO FRM-CMND.
           PERFORM GNS-PRO-FRM.
       FIN-SCR-INIT.
           EXIT.

      *<<<< PGM_PU
       ENG-PGM SECTION.
       INI-ENG-PGM.

           MOVE WSS-IDX-ILDC TO SCR-IPRO.
           MOVE LDC-CAI-ICLF IN LDC-FLD TO SCR-CAI-ICLF.
           MOVE LDC-IIC-ICLF IN LDC-FLD TO SCR-IIC-ICLF.
           MOVE LDC-NUM-ILDC IN LDC-FLD TO SCR-NUM-ILDC.

      * ENGANCHE A ARC
      *AFRI-INI-SEP-2005
           MOVE 'DEU' TO FIO-SIST.
           MOVE 'TLC'       TO TAB-COD-TTAB IN TAB.
           MOVE LDC-COD-TIPO IN LDC TO TAB-COD-CTAB IN TAB.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM GNS-FIO-TAB.
      *AFRI-INI/CHC/MAY-2009/CANAL DE VENTAS
           MOVE 'DEU'                 TO TAB-COD-SIST FIO-SIST
           MOVE 'TLL'                 TO TAB-COD-TTAB IN TAB
           MOVE TAB-CIC-CTAB IN TAB   TO TAB-COD-CTAB IN TAB
           MOVE FIO-GET-KEY TO FIO-CMND
           PERFORM GNS-FIO-TAB
           IF TAB-IND-VIGE IN TAB NOT = 'S'
               MOVE 'DEU' TO MSG-COD-SIST
               MOVE 'TLL    NEX' TO MSG-COD-MENS
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS
               MOVE FRM-SUAR-MAL TO FRM-SUAR
               GO TO FIN-ENG-PGM.
           IF FIO-STAT-OKS
      *    IF TAB-CIC-CTAB IN TAB = 'LEC' OR
      *       TAB-CIC-CTAB IN TAB = 'LEL' OR
      *       TAB-CIC-CTAB IN TAB = 'LCF'
      *AFRI-FIN/CHC/MAY-2009/CANAL DE VENTAS
               MOVE 'S' TO WSS-IENG
               MOVE 'S'    TO SCR-IND-ENG IN SCR-VEC-ENG(WSS-IDX-ILCC)
               MOVE 'S'    TO SCR-IND-FST IN SCR-VEC-FST(WSS-IDX-ILCC)
               MOVE 'S'    TO SCR-IND-ENG IN SCR-VEC-ENG(WSS-IDX-IACG)
               MOVE 'S'    TO SCR-IND-FST IN SCR-VEC-FST(WSS-IDX-IACG)
           ELSE
               MOVE SPACES TO SCR-IND-ENG IN SCR-VEC-ENG(WSS-IDX-ILCC)
               MOVE SPACES TO SCR-IND-FST IN SCR-VEC-FST(WSS-IDX-ILCC)
               MOVE SPACES TO SCR-IND-ENG IN SCR-VEC-ENG(WSS-IDX-IACG)
               MOVE SPACES TO SCR-IND-FST IN SCR-VEC-FST(WSS-IDX-IACG).
      *AFRI-FIN-SEP-2005
      *FLB CST  10-JUN-1994
           IF FRM-IND-MARC IN LDC-FLD = 'S'
               MOVE 'S' TO WSS-IENG
               MOVE 'S'    TO SCR-IND-ENG IN SCR-VEC-ENG(WSS-IDX-IARC)
               MOVE 'S'    TO SCR-IND-FST IN SCR-VEC-FST(WSS-IDX-IARC)
           ELSE
               MOVE SPACES TO SCR-IND-ENG IN SCR-VEC-ENG(WSS-IDX-IARC)
               MOVE SPACES TO SCR-IND-FST IN SCR-VEC-FST(WSS-IDX-IARC).

      * ENGANCHE A ARG
           IF LDC-IND-MGAR IN LDC-FLD = 'Y' OR 'O'
               MOVE 'S' TO WSS-IENG
               MOVE 'S'    TO SCR-IND-ENG IN SCR-VEC-ENG(WSS-IDX-IARG)
               MOVE 'S'    TO SCR-IND-FST IN SCR-VEC-FST(WSS-IDX-IARG)
           ELSE
               MOVE SPACES TO SCR-IND-ENG IN SCR-VEC-ENG(WSS-IDX-IARG)
               MOVE SPACES TO SCR-IND-FST IN SCR-VEC-FST(WSS-IDX-IARG).

           IF LDC-IND-MGAR IN LDC-FLD = 'E' AND
              ARG-IIC-IGAR IN CMA-VARI > ZEROES
               MOVE ARG-CAI-IGAR IN LDC-FLD TO SCR-CAI-IGAR
               MOVE ARG-IIC-IGAR IN LDC-FLD TO SCR-IIC-IGAR
               MOVE ARG-CAI-IGAR IN LDC-FLD TO SCR-CAI-IFIA
               MOVE ARG-IIC-IGAR IN LDC-FLD TO SCR-IIC-IFIA
               IF ARG-COD-TOGA IN LDC-FLD NOT > SPACES
      * ENGANCHE A GAR
                   MOVE 'S' TO WSS-IENG
                   MOVE 'S' TO SCR-IND-ENG IN SCR-VEC-ENG(WSS-IDX-IGDG)
                   MOVE 'S' TO SCR-IND-FST IN SCR-VEC-FST(WSS-IDX-IGDG)
                   MOVE ' ' TO SCR-IND-ENG IN SCR-VEC-ENG(WSS-IDX-IFIA)
                   MOVE ' ' TO SCR-IND-FST IN SCR-VEC-FST(WSS-IDX-IFIA)
               ELSE
      * ENGANCHE A FIA
                  MOVE 'S' TO WSS-IENG
                  MOVE 'S' TO SCR-IND-ENG IN SCR-VEC-ENG(WSS-IDX-IFIA)
                  MOVE 'S' TO SCR-IND-FST IN SCR-VEC-FST(WSS-IDX-IFIA)
                  MOVE ' ' TO SCR-IND-ENG IN SCR-VEC-ENG(WSS-IDX-IGDG)
                  MOVE ' ' TO SCR-IND-FST IN SCR-VEC-FST(WSS-IDX-IGDG)
      *JSS-INI 21-MAR-1994
                  MOVE ARG-COD-TOGA IN LDC-FLD TO SCR-COD-TOGA
                  MOVE DBC-NUM-ICLI IN LDC-FLD TO SCR-NUM-ICLI
                  MOVE DBC-VRF-ICLI IN LDC-FLD TO SCR-VRF-ICLI
                  MOVE DBC-IND-ICLI IN LDC-FLD TO SCR-IND-ICLI
                  MOVE DBC-GLS-ICLI IN LDC-FLD TO SCR-GLS-ICLI
                  COMPUTE  SCR-VAL-CMAX = ARG-NUM-PORG IN LDC-FLD *
                                          LDC-VAL-CMAX IN LDC-FLD / 100
                  MOVE ARC-COD-TOOC IN LDC-FLD TO SCR-COD-TOOC
                  MOVE ARC-COD-AOOC IN LDC-FLD TO SCR-COD-AOOC
      *AMP     23-MAR-1994 DEBE PASAR MONEDA DEL CREDITO
                  MOVE ARC-COD-VCOC IN LDC-FLD TO SCR-COD-VCOC
                  MOVE LDC-CAI-ICLF IN LDC-FLD TO CLF-CAI-ICLF IN CLF
                  MOVE LDC-IIC-ICLF IN LDC-FLD TO CLF-IIC-ICLF IN CLF
                  MOVE FIO-GET-KEY TO FIO-CMND
                  PERFORM LDC-FIO-CLF
                  IF FIO-STAT-OKS
                      MOVE CLF-COD-OFIC IN CLF TO SCR-COD-OFIC
                      MOVE CLF-COD-EJEC IN CLF TO SCR-COD-EJEC
                      MOVE CLF-COD-VCCF IN CLF TO SCR-COD-VCCF
                  ELSE
                      MOVE SPACES TO SCR-COD-OFIC
                      MOVE SPACES TO SCR-COD-EJEC
                      MOVE SPACES TO SCR-COD-VCCF
      *JSS-FIN 21-MAR-1994
           ELSE
               MOVE ' ' TO SCR-IND-ENG IN SCR-VEC-ENG(WSS-IDX-IGDG)
               MOVE ' ' TO SCR-IND-FST IN SCR-VEC-FST(WSS-IDX-IGDG)
               MOVE ' ' TO SCR-IND-ENG IN SCR-VEC-ENG(WSS-IDX-IFIA)
               MOVE ' ' TO SCR-IND-FST IN SCR-VEC-FST(WSS-IDX-IFIA).

           IF SCR-IND-COL = 'C' AND
              SCR-IND-ENG IN SCR-VEC-ENG(WSS-IDX-IARC) NOT > SPACES AND
              SCR-IND-ENG IN SCR-VEC-ENG(WSS-IDX-IARG) NOT > SPACES AND
              SCR-IND-ENG IN SCR-VEC-ENG(WSS-IDX-IGDG) NOT > SPACES AND
              SCR-IND-ENG IN SCR-VEC-ENG(WSS-IDX-ILCC) NOT > SPACES AND
              SCR-IND-ENG IN SCR-VEC-ENG(WSS-IDX-IACG) NOT > SPACES AND
              SCR-IND-ENG IN SCR-VEC-ENG(WSS-IDX-IFIA) NOT > SPACES
               SUBTRACT 1 FROM WSS-IDX-ILDC GIVING SCR-IPRO
               MOVE 'S' TO SCR-IND-ENG IN SCR-VEC-ENG(WSS-IDX-ILDC)
               MOVE 'S' TO SCR-IND-FST IN SCR-VEC-FST(WSS-IDX-ILDC).
       FIN-ENG-PGM.
           EXIT.

       PGM-EBR-ALL SECTION.
       INI-PGM-EBR-ALL.
           MOVE FIO-EBR-ALL TO FIO-CMND.
           PERFORM LDC-FIO-LDC.
       FIN-PGM-EBR-ALL.
           EXIT.


      *ALD-ADA-INI/18072001
       ACT-CAMPO-CACT SECTION.
       INI-ACT-CAMPO-CACT.

           MOVE LDC TO LDC-BKP.


           MOVE LDC-CAI-ICLF IN LDC TO CLF-CAI-ICLF IN CLF.
           MOVE LDC-IIC-ICLF IN LDC TO CLF-IIC-ICLF IN CLF.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM LDC-FIO-CLF.
           IF NOT FIO-STAT-OKS
               MOVE LDC-VAL-CMAX IN LDC TO WSS-VAL-CACT IN WSS-VARI
               GO TO EXT-ACT-CAMPO-CACT.

           MOVE 'N' TO WSS-IND-BANT.
           IF CLF-IIC-CREN IN CLF NOT > SPACES
               PERFORM BUS-TABLA-LCP-LCE
               IF WSS-IND-LCP IN WSS-VARI = 'S' OR
                  WSS-IND-LCE IN WSS-VARI = 'S'
                   MOVE ZEROES TO WSS-VAL-CACT IN WSS-VARI
               ELSE
                   MOVE LDC-VAL-CMAX IN LDC-FLD TO
                        WSS-VAL-CACT IN WSS-VARI
           ELSE
               PERFORM BUS-TABLA-LCP-LCE
               IF WSS-IND-LCP IN WSS-VARI = 'S' OR
                  WSS-IND-LCE IN WSS-VARI = 'S'
                   MOVE 'S' TO WSS-IND-BANT
                   PERFORM BUSCAR-LDC-ANT
                   IF WSS-IND-LDCA IN WSS-VARI = 'S'
                       PERFORM VAL-CAMB-LDC
                       IF WSS-IND-CLDC = 'S'
                           IF WSS-IND-IGUA = '0'
                               MOVE ZEROES TO WSS-VAL-CACT IN WSS-VARI
                           ELSE
      *ADA-INI 30-NOV-2001
      *'A' Indica: el valor contratado debe ser igual al nuevo aprobado
      *salvo cuando no se haya activado nunca el contratado (esto se
      *sabe porque el antiguo contratado es 0) en cuyo caso el nuevo
      *contratado sigue en 0
                           IF WSS-IND-IGUA = 'A'
                               IF LDC-VAL-CACT IN LDC > 0
                                   MOVE LDC-VAL-CMAX IN LDC-FLD TO
                                             WSS-VAL-CACT IN WSS-VARI
                               ELSE
                                   MOVE 0 TO WSS-VAL-CACT IN WSS-VARI
                           ELSE
      *ADA-FIN 30-NOV-2001
                               MOVE LDC-VAL-CACT IN LDC TO
                                    WSS-VAL-CACT IN WSS-VARI
                       ELSE
                           MOVE LDC-VAL-CACT IN LDC TO
                                WSS-VAL-CACT IN WSS-VARI
                   ELSE
                       MOVE ZEROES TO WSS-VAL-CACT IN WSS-VARI
                ELSE
                    MOVE LDC-VAL-CMAX IN LDC-FLD TO
                         WSS-VAL-CACT IN WSS-VARI.

       EXT-ACT-CAMPO-CACT.

           IF WSS-IND-BANT = 'S'
               PERFORM KEY-ALL-LDC
               MOVE FIO-GET-KEY-UPD TO FIO-CMND
               PERFORM LDC-FIO-LDC.
           MOVE LDC-BKP TO LDC.
           MOVE WSS-VAL-CACT IN WSS-VARI TO LDC-VAL-CACT IN LDC.

       FIN-ACT-CAMPO-CACT.
           EXIT.

       BUS-TABLA-LCP-LCE SECTION.
       INI-BUS-TABLA-LCP-LCE.

           MOVE 'N' TO WSS-IND-LCP IN WSS-VARI.
           MOVE 'N' TO WSS-IND-LCE IN WSS-VARI.

           MOVE SPACES                  TO RDC-CIC-ICLI IN RDC.
           MOVE LDC-CAI-ICLF IN LDC-FLD TO RDC-CAI-ICLF IN RDC.
           MOVE LDC-IIC-ICLF IN LDC-FLD TO RDC-IIC-ICLF IN RDC.
           MOVE 'RDC-KEY-ICLF' TO FIO-AKEY.
           MOVE FIO-GET-NLS TO FIO-CMND.
           PERFORM LDC-FIO-RDC.
           IF NOT ( FIO-STAT-OKS AND
              RDC-CAI-ICLF IN RDC = LDC-CAI-ICLF IN LDC-FLD AND
              RDC-IIC-ICLF IN RDC = LDC-IIC-ICLF IN LDC-FLD )
               GO TO FIN-BUS-TABLA-LCP-LCE.
           MOVE RDC-CIC-ICLI IN RDC TO DBC-CIC-ICLI IN DBC.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM SGC-FIO-DBC.
           IF NOT FIO-STAT-OKS
               GO TO FIN-BUS-TABLA-LCP-LCE.
           IF DBC-IND-TICL IN DBC = 'P'
               MOVE 'DEU' TO FIO-SIST
               MOVE 'LCP'       TO TAB-COD-TTAB IN TAB
               MOVE LDC-COD-TIPO IN LDC-FLD TO TAB-COD-CTAB IN TAB
               MOVE FIO-GET-KEY TO FIO-CMND
               PERFORM GNS-FIO-TAB
               IF FIO-STAT-OKS AND
                  TAB-IND-VIGE = 'S'
                   MOVE 'S' TO WSS-IND-LCP
                   MOVE TAB-GLS-DATA IN TAB TO WSS-IND-IGUA
                   GO TO FIN-BUS-TABLA-LCP-LCE
               ELSE
                   GO TO FIN-BUS-TABLA-LCP-LCE
           ELSE
               MOVE 'DEU' TO FIO-SIST
               MOVE 'LCE'       TO TAB-COD-TTAB IN TAB
               MOVE LDC-COD-TIPO IN LDC-FLD TO TAB-COD-CTAB IN TAB
               MOVE FIO-GET-KEY TO FIO-CMND
               PERFORM GNS-FIO-TAB
               IF FIO-STAT-OKS AND
                  TAB-IND-VIGE = 'S'
                   MOVE 'S' TO WSS-IND-LCE
                   MOVE TAB-GLS-DATA IN TAB TO WSS-IND-IGUA
                   GO TO FIN-BUS-TABLA-LCP-LCE.
       FIN-BUS-TABLA-LCP-LCE.
           EXIT.

       BUSCAR-LDC-ANT SECTION.
       INI-BUSCAR-LDC-ANT.
           MOVE 'N' TO WSS-IND-LDCA IN WSS-VARI.

           MOVE CLF-CAI-CREN IN CLF TO LDC-CAI-ICLF IN LDC.
           MOVE CLF-IIC-CREN IN CLF TO LDC-IIC-ICLF IN LDC.
           MOVE ZEROES              TO LDC-NUM-ILDC IN LDC.
           MOVE FIO-GET-NLS TO FIO-CMND.
       LOOP-BUSCAR-LDC-ANT.

           PERFORM LDC-FIO-LDC.
           IF NOT ( FIO-STAT-OKS AND
              CLF-CAI-CREN IN CLF = LDC-CAI-ICLF IN LDC AND
              CLF-IIC-CREN IN CLF = LDC-IIC-ICLF IN LDC )
               GO TO FIN-BUSCAR-LDC-ANT.

           IF LDC-COD-TIPO IN LDC NOT = LDC-COD-TIPO IN LDC-FLD
               MOVE FIO-GET-NXT TO FIO-CMND
               GO TO LOOP-BUSCAR-LDC-ANT.

           MOVE 'S' TO WSS-IND-LDCA IN WSS-VARI.


       FIN-BUSCAR-LDC-ANT.
           EXIT.

       VAL-CAMB-LDC SECTION.
       INI-VAL-CAMB-LDC.

           MOVE 'N' TO WSS-IND-CLDC.
                 IF LDC-VAL-CMAX IN LDC NOT = LDC-VAL-CMAX IN LDC-FLD
               MOVE 'S' TO WSS-IND-CLDC
               GO TO FIN-VAL-CAMB-LDC.

           IF LDC-COD-VCLC IN LDC NOT = LDC-COD-VCLC IN LDC-FLD
               MOVE 'S' TO WSS-IND-CLDC
               GO TO FIN-VAL-CAMB-LDC.

           IF LDC-IND-MGAR IN LDC NOT = LDC-IND-MGAR IN LDC-FLD
               MOVE 'S' TO WSS-IND-CLDC
               GO TO FIN-VAL-CAMB-LDC.

           IF LDC-NUM-DINI IN LDC NOT = LDC-NUM-DINI IN LDC-FLD
               MOVE 'S' TO WSS-IND-CLDC
               GO TO FIN-VAL-CAMB-LDC.

           IF LDC-NUM-MINI IN LDC NOT = LDC-NUM-MINI IN LDC-FLD
               MOVE 'S' TO WSS-IND-CLDC
               GO TO FIN-VAL-CAMB-LDC.

           IF LDC-NUM-SINI IN LDC NOT = LDC-NUM-SINI IN LDC-FLD
               MOVE 'S' TO WSS-IND-CLDC
               GO TO FIN-VAL-CAMB-LDC.

           IF LDC-NUM-AINI IN LDC NOT = LDC-NUM-AINI IN LDC-FLD
               MOVE 'S' TO WSS-IND-CLDC
               GO TO FIN-VAL-CAMB-LDC.

           IF LDC-NUM-PVIG IN LDC NOT = LDC-NUM-PVIG IN LDC-FLD
               MOVE 'S' TO WSS-IND-CLDC
               GO TO FIN-VAL-CAMB-LDC.

           IF LDC-IND-PVIG IN LDC NOT = LDC-IND-PVIG IN LDC-FLD
               MOVE 'S' TO WSS-IND-CLDC
               GO TO FIN-VAL-CAMB-LDC.

           IF LDC-NUM-DVEN IN LDC NOT = LDC-NUM-DVEN IN LDC-FLD
               MOVE 'S' TO WSS-IND-CLDC
               GO TO FIN-VAL-CAMB-LDC.

           IF LDC-NUM-MVEN IN LDC NOT = LDC-NUM-MVEN IN LDC-FLD
               MOVE 'S' TO WSS-IND-CLDC
               GO TO FIN-VAL-CAMB-LDC.

           IF LDC-NUM-SVEN IN LDC NOT = LDC-NUM-SVEN IN LDC-FLD
               MOVE 'S' TO WSS-IND-CLDC
               GO TO FIN-VAL-CAMB-LDC.

           IF LDC-NUM-AVEN IN LDC NOT = LDC-NUM-AVEN IN LDC-FLD
               MOVE 'S' TO WSS-IND-CLDC
               GO TO FIN-VAL-CAMB-LDC.

           IF LDC-IND-VIGE IN LDC NOT = LDC-IND-VIGE IN LDC-FLD
               MOVE 'S' TO WSS-IND-CLDC
               GO TO FIN-VAL-CAMB-LDC.

       FIN-VAL-CAMB-LDC.
           EXIT.

      *ALD-ADA-FIN/18072001
      *>>>>

       COPY LDCBGMPT.

      *>>>>
      *>>>>
*% END
*% IF FIN_CMN_ELI
      *<<<< FIN_CMN_ELI
           PERFORM DEL-ARC.
           PERFORM DEL-ARG.
           MOVE LDC-CAI-ICLF IN LDC-FLD TO CLF-CAI-ICLF IN CLF.
           MOVE LDC-IIC-ICLF IN LDC-FLD TO CLF-IIC-ICLF IN CLF.
           MOVE FIO-GET-KEY-UPD TO FIO-CMND.
           PERFORM LDC-FIO-CLF.
           IF NOT FIO-STAT-OKS
               GO TO FIN-CMN-ELI.
           MOVE 'I' TO CLF-MSC-STAT IN CLF.
           MOVE FIO-MOD TO FIO-CMND.
           PERFORM LDC-FIO-CLF.
      *>>>>
*% END
