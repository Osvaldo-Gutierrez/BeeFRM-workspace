       IDENTIFICATION DIVISION.
      *========================
       PROGRAM-ID.   DEUPQGAR.
       AUTHOR.       CONSIST.
       DATE-WRITTEN. 10-Aug-90 09:34 PM.
      * ACTUALIZA ARCHIVO DEURGA EN FORMA INTERACTIVA.
       ENVIRONMENT DIVISION.
      *=====================
       CONFIGURATION SECTION.
      *----------------------
       SPECIAL-NAMES.
               DECIMAL-POINT IS COMMA.
       DATA DIVISION.
      *==============
       WORKING-STORAGE SECTION.
      *------------------------
      * COPY GNSWGSCR.
       COPY GNSWCSCR.
       COPY GNSWVSCR.
      *<<<< FIN_SCR_VARI
       COPY GNSWGRQA REPLACING ==01  ADR-REQA== BY ==02  SCR-DBC-REQA==.
           02  SCR-R-ASC                                PIC 9(03).
           02  SCR-R-DSC                                PIC 9(03).
           02  SCR-R-RMAX                               PIC 9(03).
           02  SCR-CIC-ICLI                             PIC X(12).
           02  SCR-TAB-IRGA.
               03  SCR-VEC-IRGA OCCURS 38.
                   05  SCR-KEY-IRGA.
                       07  SCR-IND-REAL                 PIC X(02).
                       07  SCR-COD-COGA.
                           09  SCR-COD-TOGA             PIC X(03).
                           09  SCR-COD-AOGA             PIC X(03).
                       07  SCR-IND-CGAR                 PIC X(01).
                       07  SCR-COD-VCGA.
                           09  SCR-MSC-TVGA             PIC X(01).
                           09  SCR-COD-CVGA             PIC X(03).
                           09  SCR-COD-TCGA             PIC X(02).
                       07  SCR-COD-OFGA                 PIC X(03).
                   05  SCR-VAL-COME     COMP-3          PIC 9(11)V9(04).
                   05  SCR-VAL-LIQU     COMP-3          PIC 9(11)V9(04).
                   05  SCR-VAL-POND     COMP-3          PIC 9(11)V9(04).
      *>>>>
      *<<<< FIN_SCR_VARI
      *>>>>
       COPY DEUWIGAR.
       COPY DEUBRRGA.
       COPY GNSWVIDD.
       COPY GNSWGRQA.
       COPY GNSWGUIB.
       COPY GNSWGELS.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-RGA-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-TAB-REQA==.
       COPY GNSBRTAB.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-MSC-REQA==.
       COPY GNSBRMSC.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-MSG-REQA==.
       COPY GNSBRMSG.
       COPY GNSWCFIO.
       COPY GNSWVFIO.
       COPY GNSWGFRM.
       COPY GNSWVNUM.
       COPY GNSWCNUM.
       COPY GNSWCVRF.
       COPY GNSWVVRF.
       COPY GNSWGIDC.
       COPY GNSWGSYS.
      *<<<< WSS_DTC
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-DBC-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-CAM-REQA==.
      *>>>>
      *<<<< WSS_IBM
       COPY SGCBRDBC.
       COPY TABBRCAM.
       COPY GNSWGHOY.
       COPY GNSWGFEC.
       COPY GNSWGCPT.
       COPY GNSWGSTR.
      *ALD Rutina GARPGRGA
       COPY DEUWGGAR.
      *
       01   WSS-VARI.
            03  WSS-RGA-RMAX                VALUE 38     PIC 9(02).
            03  WSS-IND-VCCR                VALUE SPACES PIC X(02).
                 88  MONEDA-NO-VIGENTE      VALUE 'N '.
                 88  MONEDA-NO-EXISTENTE    VALUE ' X'.
                 88  MONEDA-NEX-NVG         VALUE 'NX'.
            03  WSS-IND-VCCR-RED REDEFINES WSS-IND-VCCR.
                 05  WSS-IND-NVIG                        PIC X(01).
                 05  WSS-IND-NEXI                        PIC X(01).
           03  WSS-IMAX                     VALUE  10    PIC 9(02).
           03  WSS-I                                     PIC 9(03).
      *>>>>
       01  PGM-VARI.
           03 PGM-ICLR                  VALUE ' '       PIC X(01).
           03 PGM-LIMPIAR-TODO          VALUE ' '       PIC X(01).
           03 PGM-LIMPIAR-LLAVES        VALUE 'K'       PIC X(01).
           03 PGM-LIMPIAR-CAMPOS        VALUE 'F'       PIC X(01).
           03 PGM-NO-LIMPIAR-NADA       VALUE 'N'       PIC X(01).
           03 PGM-PROG                                  PIC X(08).
           03 PGM-NTRN                                  PIC X(04).
           03 PGM-STAT.
              05 PGM-STAT-DBC           VALUE '23'      PIC X(02).
                 88 PGM-STAT-DBC-OKS    VALUE '00'.
                 88 PGM-STAT-DBC-NUL    VALUE '  '.
              05 PGM-STAT-RGA           VALUE '23'      PIC X(02).
                 88 PGM-STAT-RGA-OKS    VALUE '00'.
                 88 PGM-STAT-RGA-NUL    VALUE '  '.
           03 PGM-SRNF                  VALUE '23'      PIC X(02).
           03 PGM-SOKS                  VALUE '00'      PIC X(02).
           03 PGM-SNUL                  VALUE '  '      PIC X(02).
           03 PGM-SUAR                  VALUE SPACES    PIC X(02).
              88 PGM-STRO               VALUE 'TO'.
              88 PGM-SCNC               VALUE 'CC'.
       LINKAGE SECTION.
      *----------------
       01  DFHCOMMAREA.
      *<<<< CMA
           02 FILLER                      PIC X(3000).
      *>>>>
       COPY GNSLGFIO.
       PROCEDURE DIVISION.
      *===================
       MAIN SECTION.
       INI-MAIN.
           PERFORM INI.
       LUP-MAIN.
           IF SCR-INST = SCR-INST-HCM
                 PERFORM SCR-COM.
           IF SCR-CCPP = 'ACC'
                 PERFORM SCR-ACC
           ELSE
                 MOVE SCR-INST-HCM TO SCR-INST.
           GO TO LUP-MAIN.
       FIN-MAIN.
           EXIT.
       INI SECTION.
       INI-INI.
       COPY GNSBGEIB.
       COPY GNSBGEDB.
           PERFORM GNS-PRO-RCK.
           PERFORM GNS-BUS-VCA.
           PERFORM GNS-HDL-SYS.
           PERFORM GNS-HDL-FRM.
           MOVE 'DEUPQGAR' TO FIO-PROG.
           PERFORM GNS-BUS-IDD.
      *<<<< INI_FIO
           MOVE +3000 TO SCR-TCMA.
           IF SCR-DESDE-CMN
               MOVE SPACES TO SCR-DBC-REQA.
      *>>>>
       FIN-INI.
           EXIT.
       COPY GNSBHSYS.
       COPY GNSBHFRM.
       COPY GNSBPRCK.
       COPY GNSBBVCA.
       COPY GNSBBIDD.
       SCR-COM SECTION.
       INI-SCR-COM.
           MOVE FRM-CPSF-AEY TO FRM-CPIM-AEY.
           PERFORM PRO-ALL.
           PERFORM SCR-CLRA-GAR.
           PERFORM EDT-KEY-GAR.
           PERFORM EDT-FLD-GAR.
           PERFORM SCR-PUTA.
           MOVE SCR-INST-HCM TO SCR-INST.
           MOVE SCR-CMNP     TO SYS-PROG.
           MOVE SCR-VARI     TO SYS-CMMA.
           MOVE SCR-TCMA     TO SYS-TCMA.
           MOVE SYS-XCTL     TO SYS-CMND.
           PERFORM GNS-PRO-SYS.
       XCT-ERR.
           MOVE 'XCTERR    ' TO MSG-COD-MENS.
           MOVE 'GNS'        TO MSG-COD-SIST.
           PERFORM GET-MSG.
           MOVE MSG-GLS-DESC TO SYS-MEN1.
           MOVE SYS-PROG     TO SYS-MEN2.
           MOVE SYS-ABOR     TO SYS-CMND.
           PERFORM GNS-PRO-SYS.
       COPY GNSBGGBK.
       FIN-SCR-COM.
           EXIT.
       SCR-ACC SECTION.
       INI-SCR-ACC.
           IF SCR-INST = SCR-INST-HKY
               MOVE SCR-INST-GKY TO SCR-INST
               PERFORM HBL-KEY
               PERFORM SCR-DMSG
           ELSE
           IF SCR-INST = SCR-INST-GKY
                PERFORM SCR-KEY
                IF SCR-STAT NOT = SCR-STAT-ABT
                        PERFORM SCR-TRL
                ELSE
                        PERFORM DESSCRTRL
                        GO TO FIN-SCR-ACC
           ELSE
           IF SCR-INST = SCR-INST-GAB
                PERFORM GET-CON
           ELSE
           IF SCR-INST = SCR-INST-BRW
               MOVE SCR-FFLD TO FRM-FFLD
               PERFORM BRW-SCR-ACC.
           PERFORM DESSCRTRL.
      *<<<< PFS_SCR_ACC
           IF FRM-FFLD = FRM-FFLD-PF8 OR FRM-FFLD-PF7
               PERFORM VAL-NUM-KEY-GAR
               PERFORM VAL-NUM-FLD-GAR
               PERFORM RST-STAT
               PERFORM FND-SCR-KEY THRU FIN-SCR-KEY
               IF SCR-STAT NOT = SCR-STAT-ABT
                   PERFORM SCR-TRL
               ELSE
                   MOVE SPACES TO SCR-DBC-REQA
                   PERFORM DESSCRTRL
                   GO TO FIN-SCR-ACC.
           IF FRM-FFLD = FRM-FFLD-PF5 OR FRM-FFLD-PF6
               PERFORM VAL-NUM-KEY-GAR
               PERFORM VAL-NUM-FLD-GAR
               PERFORM SCRL-TAB-RGA
               PERFORM SCR-TRL
           ELSE
               MOVE SPACES TO SCR-DBC-REQA.
      *<<<<
           MOVE SPACES TO FRM-MENS.
           PERFORM SCR-MSSG.
       FIN-SCR-ACC.
           EXIT.
       BRW-SCR-ACC SECTION.
       INI-BRW-SCR-ACC.
       FIN-BRW-SCR-ACC.
           EXIT.
       SCR-DMSG SECTION.
       INI-SCR-DMSG.
           IF PGM-ICLR = PGM-NO-LIMPIAR-NADA
               NEXT SENTENCE
           ELSE
           IF PGM-ICLR = PGM-LIMPIAR-TODO
               PERFORM SCR-CLRA-GAR
               PERFORM EDT-KEY-GAR
               PERFORM EDT-FLD-GAR
           ELSE
           IF PGM-ICLR = PGM-LIMPIAR-LLAVES
               PERFORM CLR-KEY-GAR
               PERFORM EDT-KEY-GAR
           ELSE
               PERFORM CLR-FLD-GAR
               PERFORM EDT-FLD-GAR.
           PERFORM SCR-PUTA.
           PERFORM SCR-EXIT.
       FIN-SCR-DMSG.
           EXIT.
       SCR-KEY SECTION.
       INI-SCR-KEY.
           PERFORM SCR-RST.
           PERFORM GET-KEY.
           IF FRM-STAT-ABT
                   MOVE SPACES TO FRM-MENS
                   PERFORM SCR-MSSG
                   GO TO FIN-SCR-KEY.
       FND-SCR-KEY.
           MOVE SPACES TO FRM-MENS.
           PERFORM FND-KEY.
           IF FIO-STAT-OKS
               PERFORM PUT-SCR
               MOVE PGM-LIMPIAR-TODO TO PGM-ICLR
               GO TO FIN-SCR-KEY.
      *JSS ELSE
      *        PERFORM CLR-FLD-GAR.
       ERR-SCR-KEY.
           MOVE PGM-LIMPIAR-CAMPOS TO PGM-ICLR.
           IF FRM-MENS NOT > SPACES
               IF FIO-STAT-EOF
                   MOVE 'REGEOF    ' TO MSG-COD-MENS
                   MOVE 'GNS' TO MSG-COD-SIST
                   PERFORM GET-MSG
                   MOVE MSG-GLS-DESC TO FRM-MENS
               ELSE
               IF FIO-STAT = FIO-STAT-NEX
                   MOVE 'REGNEX    ' TO MSG-COD-MENS
                   MOVE 'GNS' TO MSG-COD-SIST
                   PERFORM GET-MSG
                   MOVE MSG-GLS-DESC TO FRM-MENS
               ELSE
                   MOVE 'FIOSTAT' TO MSG-COD-TMSG
                   MOVE FIO-STAT  TO MSG-COD-CMSG
                   MOVE 'GNS'     TO MSG-COD-SIST
                   PERFORM GET-MSG
                   MOVE MSG-GLS-DESC TO FRM-MENS.
           PERFORM SCR-MSSG.
           MOVE SCR-STAT-ABT TO SCR-STAT.
       FIN-SCR-KEY.
           EXIT.
       SCR-RST SECTION.
       INI-SCR-RST.
           MOVE SPACES       TO PGM-ICLR.
           MOVE SPACES       TO SCR-ACTU.
           MOVE SCR-STPP     TO SCR-STAT.
           MOVE SCR-MFLD-NOT TO SCR-MFLD.
           MOVE LOW-VALUES   TO GAR-FLD.
       FIN-SCR-RST.
           EXIT.
       GET-KEY SECTION.
       INI-GET-KEY.
           PERFORM SCR-GKEY.
           IF FRM-STAT-ABT
               MOVE SCR-STAT-ABT TO SCR-STAT.
       FIN-GET-KEY.
           EXIT.
       GET-IKY SECTION.
       INI-GET-IKY.
           PERFORM SCR-GIKY.
           IF FRM-STAT-ABT
               MOVE SCR-STAT-ABT TO SCR-STAT.
       FIN-GET-IKY.
           EXIT.
       FND-KEY SECTION.
       INI-FND-KEY.
      *<<<< INI_FND_KEY
           PERFORM KEY-ALL-GAR.
           IF FRM-FFLD = FRM-FFLD-PF7 OR FRM-FFLD-PF8
               PERFORM LEE-NXT-PRV
               IF FIO-STAT-OKS
                   PERFORM SCR-CLRA-GAR
                   MOVE DBC-CAI-ICLI IN DBC TO RGA-CAI-ICLI IN GAR-FLD
                   MOVE DBC-IIC-ICLI IN DBC TO RGA-IIC-ICLI IN GAR-FLD
                   GO TO CON-FND-KEY
               ELSE
                   MOVE SPACES TO PGM-STAT
                   IF FRM-FFLD = FRM-FFLD-PF8
                       MOVE 'SGC' TO MSG-COD-SIST
                       MOVE 'DBC    NONXT' TO MSG-COD-MENS
                       PERFORM GET-MSG
                       MOVE MSG-GLS-DESC TO FRM-MENS
                       MOVE '00' TO FIO-STAT
                       MOVE SCR-STAT-CON TO SCR-STAT
                       GO TO FIN-FND-KEY
                   ELSE
                       MOVE 'SGC' TO MSG-COD-SIST
                       MOVE 'DBC    NOPRV' TO MSG-COD-MENS
                       PERFORM GET-MSG
                       MOVE MSG-GLS-DESC TO FRM-MENS
                       MOVE '00' TO FIO-STAT
                       MOVE SCR-STAT-CON TO SCR-STAT
                       GO TO FIN-FND-KEY.
           IF DBC-NUM-ICLI IN GAR-FLD > ZEROES
      *IDC-CLI Busca Cliente por medio de IdC
               MOVE DBC-NUM-ICLI IN GAR-FLD TO DBC-NUM-ICLI IN DBC
               MOVE DBC-IND-ICLI IN GAR-FLD TO DBC-IND-ICLI IN DBC
               MOVE DBC-GLS-ICLI IN GAR-FLD TO DBC-GLS-ICLI IN DBC
               MOVE 'DBC-IDC-ICLI'  TO FIO-AKEY
               MOVE FIO-GET-KEY-ALT TO FIO-CMND
               PERFORM SGC-FIO-DBC
               IF NOT FIO-STAT-OKS
                   MOVE 'SGC'        TO MSG-COD-SIST
                   MOVE 'CLI    NEX' TO MSG-COD-MENS
                   PERFORM GET-MSG
                   MOVE MSG-GLS-DESC TO FRM-MENS
                   MOVE '00' TO FIO-STAT
                   MOVE SCR-STAT-CON TO SCR-STAT
                   GO TO FIN-FND-KEY
               ELSE
                   MOVE ADR-DBC-REQA TO SCR-DBC-REQA
                   MOVE '00' TO PGM-STAT-DBC
                   MOVE DBC-GLS-NOMC IN DBC TO DBC-GLS-NOMC IN GAR-FLD
                   MOVE DBC-CAI-ICLI IN DBC TO RGA-CAI-ICLI IN GAR-FLD
                   MOVE DBC-IIC-ICLI IN DBC TO RGA-IIC-ICLI IN GAR-FLD
                   MOVE '00' TO FIO-STAT
           ELSE
      *NOM-CLI Busca Cliente por medio del Nombre
      *        UNSTRING DBC-GLS-NOMC IN GAR-FLD DELIMITED BY '/' INTO
      *                                 DBC-GLS-APAT IN DBC
      *                                 DBC-GLS-AMAT IN DBC
      *                                 DBC-GLS-NOMB IN DBC
               MOVE DBC-GLS-NOMC IN GAR-FLD TO STR-GLS-GSTR
               PERFORM STR-UNS
               MOVE STR-GLS-FUNS IN STR-VARI(1) TO DBC-GLS-APAT IN DBC
               MOVE STR-GLS-FUNS IN STR-VARI(2) TO DBC-GLS-AMAT IN DBC
               MOVE STR-GLS-FUNS IN STR-VARI(3) TO DBC-GLS-NOMB IN DBC
               MOVE 'DBC-GLS-NOMC'  TO FIO-AKEY
               MOVE FIO-GET-NLS-ALT TO FIO-CMND
               PERFORM SGC-FIO-DBC
               IF NOT FIO-STAT-OKS
                   MOVE 'SGC'        TO MSG-COD-SIST
                   MOVE 'CLI    NEX' TO MSG-COD-MENS
                   PERFORM GET-MSG
                   MOVE MSG-GLS-DESC TO FRM-MENS
                   MOVE '00' TO FIO-STAT
                   MOVE SCR-STAT-CON TO SCR-STAT
                   GO TO FIN-FND-KEY
               ELSE
                   MOVE ADR-DBC-REQA TO SCR-DBC-REQA
                   MOVE '00' TO PGM-STAT-DBC
                   MOVE DBC-GLS-NOMC IN DBC TO DBC-GLS-NOMC IN GAR-FLD
                   MOVE DBC-NUM-ICLI IN DBC TO DBC-NUM-ICLI IN GAR-FLD
                   MOVE DBC-VRF-ICLI IN DBC TO DBC-VRF-ICLI IN GAR-FLD
                   MOVE DBC-IND-ICLI IN DBC TO DBC-IND-ICLI IN GAR-FLD
                   MOVE DBC-GLS-ICLI IN DBC TO DBC-GLS-ICLI IN GAR-FLD
                   MOVE DBC-CAI-ICLI IN DBC TO RGA-CAI-ICLI IN GAR-FLD
                   MOVE DBC-IIC-ICLI IN DBC TO RGA-IIC-ICLI IN GAR-FLD
                   MOVE '00' TO FIO-STAT.
       CON-FND-KEY.
           PERFORM KEY-RGA-GAR.
      * Mover complemento de la llave
      *ALD
           MOVE ZEROES TO SCR-R-RMAX.
           PERFORM CLR-SCR-RGA VARYING WSS-I FROM 1 BY 1
                           UNTIL WSS-I > WSS-RGA-RMAX IN WSS-VARI.
           PERFORM CLR-RGA VARYING WSS-I FROM 1 BY 1
                           UNTIL WSS-I > 100.
      * Rutina GARPGRGA
           MOVE SPACES TO RGA-COD-STAT IN RGA-LINK.
      *ALD MOVE DBC-CIC-ICLI IN DBC TO RGA-CIC-ICLI IN RGA-LINK.
           MOVE DBC-IDC-ICLI IN DBC TO RGA-CIC-ICLI IN RGA-LINK.
      *
           PERFORM IDG-PUT-RGA.
      *
      *Determinar RMAX
           MOVE 0 TO RGA-RMAX.
           PERFORM DET-RMAX VARYING WSS-I FROM 1 BY 1 UNTIL
               WSS-I > 100.
           IF RGA-RMAX > WSS-RGA-RMAX IN WSS-VARI
               MOVE 'DEU' TO MSG-COD-SIST
               MOVE 'RGAOVFLW>38' TO MSG-COD-MENS
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MEN2
               MOVE '00' TO FIO-STAT
               MOVE SCR-STAT-CON TO SCR-STAT
               GO TO FIN-FND-KEY.
      *
           PERFORM PUT-TAB.
           IF NOT FIO-STAT-OKS
               MOVE 'DEU' TO MSG-COD-SIST
               MOVE 'RGA    NEX' TO MSG-COD-MENS
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MEN2
               MOVE '00' TO FIO-STAT
               MOVE SCR-STAT-CON TO SCR-STAT
           ELSE
               IF MONEDA-NO-VIGENTE
                   MOVE 'DEU' TO MSG-COD-SIST
                   MOVE 'VCR    N' TO MSG-COD-MENS
                   PERFORM GET-MSG
                   MOVE MSG-GLS-DESC TO FRM-MEN2
                   MOVE '00' TO FIO-STAT
               ELSE
                   IF MONEDA-NO-EXISTENTE
                       MOVE 'DEU' TO MSG-COD-SIST
                       MOVE 'VCR    X' TO MSG-COD-MENS
                       PERFORM GET-MSG
                       MOVE MSG-GLS-DESC TO FRM-MEN2
                       MOVE '00' TO FIO-STAT
                   ELSE
                       IF MONEDA-NEX-NVG
                           MOVE 'DEU' TO MSG-COD-SIST
                           MOVE 'VCR    NX' TO MSG-COD-MENS
                           PERFORM GET-MSG
                           MOVE MSG-GLS-DESC TO FRM-MEN2
                           MOVE '00' TO FIO-STAT.
           MOVE DBC-CIC-ICLI IN DBC TO SCR-CIC-ICLI.
           MOVE RGA-RMAX     TO SCR-R-RMAX.
           MOVE RGA-TAB-IRGA TO SCR-TAB-IRGA.
           GO TO FIN-FND-KEY.
      *>>>>
           PERFORM KEY-ALL-GAR.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM DEU-FIO-RGA.
           MOVE FIO-STAT TO PGM-STAT-RGA.
       FIN-FND-KEY.
           EXIT.
       PUT-SCR SECTION.
       INI-PUT-SCR.
           PERFORM PUT-ALL-GAR.
       FIN-PUT-SCR.
           EXIT.
       STP-EXIT SECTION.
       INI-STP-EXIT.
           MOVE SCR-PROG TO PGM-PROG.
           MOVE SCR-NTRN TO PGM-NTRN.
           MOVE SCR-PROV TO SCR-PROG.
           MOVE SCR-NTRV TO SCR-NTRN.
           MOVE PGM-PROG TO SCR-PROV
           MOVE PGM-NTRN TO SCR-NTRV.
       FIN-STP-EXIT.
           EXIT.
       SCR-EXIT SECTION.
       INI-SCR-EXIT.
           MOVE 'P'      TO SCR-ICMN.
           MOVE SCR-NTRN TO SYS-NTRN.
           MOVE SCR-VARI TO SYS-CMMA.
           MOVE SCR-TCMA TO SYS-TCMA.
           MOVE SYS-RTRN TO SYS-CMND.
           PERFORM GNS-PRO-SYS.
       FIN-SCR-EXIT.
           EXIT.
       SCR-PUTA SECTION.
       INI-SCR-PUTA.
           MOVE SCR-NMAP TO FRM-NAME.
           MOVE SCR-NLIB TO FRM-NLIB.
           MOVE GAR-FLD TO FRM-DFLD.
           MOVE FRM-PUT-ALL TO FRM-CMND.
           PERFORM GNS-PRO-FRM.
       FIN-SCR-PUTA.
           EXIT.
       SCR-MSSG SECTION.
       INI-SCR-MSSG.
           IF FRM-MEN1 NOT > SPACES
               MOVE SPACES TO FRM-MEN1.
           IF FRM-MEN2 NOT > SPACES
               MOVE SPACES TO FRM-MEN2.
           MOVE FRM-MENS TO GAR-GLS-MENS.
       FIN-SCR-MSSG.
           EXIT.
       SCR-GKEY SECTION.
       INI-SCR-GKEY.
           MOVE SCR-NMAP TO FRM-NAME.
           MOVE SCR-NLIB TO FRM-NLIB.
           MOVE FRM-GET-ALL TO FRM-CMND.
           PERFORM GNS-PRO-FRM.
           MOVE SPACES TO FRM-MENS.
           IF NOT ( FRM-FFLD = FRM-FFLD-RET  OR FRM-FFLD-PF10 OR
                               FRM-FFLD-PF12 OR FRM-FFLD-PF3 )
      *<<<< PFS_GET_CON OR PFS_SCR_GKEY
           IF NOT ( FRM-FFLD = FRM-FFLD-PF8 OR FRM-FFLD = FRM-FFLD-PF7 )
      *>>>>
               MOVE 'PFSINV    ' TO MSG-COD-MENS
               MOVE 'GNS' TO MSG-COD-SIST
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS
               PERFORM FST-KEY-GAR
               PERFORM SCR-MSSG
               PERFORM SCR-PUTA
               PERFORM SCR-EXIT.
           MOVE FRM-DFLD TO GAR-FLD.
           IF FRM-STAT-ABT
               GO TO FIN-SCR-GKEY.
           MOVE FRM-SUAR-OKS TO FRM-SUAR.
           PERFORM VAL-NUM-KEY-GAR.
           IF FRM-SUAR EQUAL FRM-SUAR-MAL OR FRM-SUAR-CLR
               PERFORM SCR-MSSG
               PERFORM EDT-KEY-GAR
               PERFORM SCR-PUTA
               PERFORM SCR-EXIT.
           PERFORM VAL-CON-KEY-GAR.
           IF FRM-SUAR EQUAL FRM-SUAR-MAL OR FRM-SUAR-CLR
               PERFORM FST-KEY-GAR
               GO TO ERR-SCR-GKEY.
      *JSS
           PERFORM CLR-FLD-GAR.
           PERFORM VAL-IKY-GAR.
           IF FRM-SUAR EQUAL FRM-SUAR-MAL OR FRM-SUAR-CLR
               GO TO ERR-SCR-GKEY.
           PERFORM VAL-MKY-GAR.
           IF FRM-SUAR EQUAL FRM-SUAR-MAL OR FRM-SUAR-CLR
               GO TO ERR-SCR-GKEY.
           PERFORM VAL-AKY-GAR.
           IF NOT ( FRM-SUAR EQUAL FRM-SUAR-MAL OR FRM-SUAR-CLR )
               GO TO FIN-SCR-GKEY.
       ERR-SCR-GKEY.
           PERFORM SCR-MSSG.
           PERFORM EDT-KEY-GAR.
           PERFORM SCR-PUTA.
           PERFORM SCR-EXIT.
       FIN-SCR-GKEY.
           PERFORM SCR-MSSG.
       SCR-GIKY SECTION.
       INI-SCR-GIKY.
           MOVE SCR-NMAP TO FRM-NAME.
           MOVE SCR-NLIB TO FRM-NLIB.
           MOVE FRM-GET-ALL TO FRM-CMND.
           PERFORM GNS-PRO-FRM.
           MOVE SPACES TO FRM-MENS.
           IF NOT ( FRM-FFLD = FRM-FFLD-RET  OR FRM-FFLD-PF10 OR
                               FRM-FFLD-PF12 OR FRM-FFLD-PF3 )
               MOVE 'PFSINV    ' TO MSG-COD-MENS
               MOVE 'GNS' TO MSG-COD-SIST
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS
               PERFORM FST-KEY-GAR
               PERFORM SCR-MSSG
               PERFORM SCR-PUTA
               PERFORM SCR-EXIT.
           MOVE FRM-DFLD TO GAR-FLD.
           IF FRM-STAT-ABT
               GO TO FIN-SCR-GIKY.
           MOVE FRM-SUAR-OKS TO FRM-SUAR.
           PERFORM VAL-NUM-IKY-GAR.
           IF FRM-SUAR EQUAL FRM-SUAR-MAL OR FRM-SUAR-CLR
               PERFORM SCR-MSSG
               PERFORM EDT-IKY-GAR
               PERFORM SCR-PUTA
               PERFORM SCR-EXIT.
           PERFORM VAL-CON-IKY-GAR.
           IF FRM-SUAR EQUAL FRM-SUAR-MAL OR FRM-SUAR-CLR
               PERFORM FST-KEY-GAR
               GO TO ERR-SCR-GIKY.
      *JSS
           PERFORM CLR-FLD-GAR.
           PERFORM VAL-IKY-GAR.
           IF NOT ( FRM-SUAR EQUAL FRM-SUAR-MAL OR FRM-SUAR-CLR )
               GO TO FIN-SCR-GIKY.
       ERR-SCR-GIKY.
           PERFORM SCR-MSSG.
           PERFORM EDT-IKY-GAR.
           PERFORM SCR-PUTA.
           PERFORM SCR-EXIT.
       FIN-SCR-GIKY.
           PERFORM SCR-MSSG.
       GET-CON SECTION.
       INI-GET-CON.
           MOVE SCR-NMAP TO FRM-NAME.
           MOVE SCR-NLIB TO FRM-NLIB.
           MOVE FRM-GET-ALL TO FRM-CMND.
           PERFORM GNS-PRO-FRM.
           IF NOT ( FRM-FFLD = FRM-FFLD-RET  OR FRM-FFLD-PF10 OR
                               FRM-FFLD-PF12 OR FRM-FFLD-PF3 )
      *<<<< PFS_GET_CON OR PFS_SCR_GKEY
           IF NOT ( FRM-FFLD = FRM-FFLD-PF8 OR FRM-FFLD = FRM-FFLD-PF7 )
      *>>>>
      *>>>> PFS_GET_CON
           IF NOT ( FRM-FFLD = FRM-FFLD-PF5 OR FRM-FFLD-PF6 )
      *<<<<
               MOVE 'PFSINV    ' TO MSG-COD-MENS
               MOVE 'GNS' TO MSG-COD-SIST
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO GAR-GLS-MEN2
               MOVE SCR-PRMT     TO GAR-GLS-MEN1
               PERFORM FST-MSG
               PERFORM SCR-PUTA
               PERFORM SCR-EXIT.
           MOVE FRM-DFLD TO GAR-FLD.
       FIN-GET-CON.
           MOVE SCR-STAT-CON TO SCR-STAT.
       CLR-MSG SECTION.
       INI-CLR-MSG.
           MOVE SPACES TO GAR-GLS-MENS.
       FIN-CLR-MSG.
           EXIT.
       HBL-IKY SECTION.
       INI-HBL-IKY.
           IF SCR-DESDE-CMN
               MOVE GAR-GLS-MENS TO FRM-MENS
               MOVE LOW-VALUES TO GAR-FLD
               MOVE FRM-MENS TO GAR-GLS-MENS.
           MOVE FRM-CPSF-AEY TO FRM-CPIM-AEY.
           PERFORM PRO-MKY-GAR.
           PERFORM PRO-AKY-GAR.
           PERFORM UNP-IKY-GAR.
           PERFORM FST-KEY-GAR.
       FIN-HBL-IKY.
           EXIT.
       HBL-KEY SECTION.
       INI-HBL-KEY.
           IF SCR-DESDE-CMN
               MOVE GAR-GLS-MENS TO FRM-MENS
               MOVE LOW-VALUES TO GAR-FLD
               MOVE FRM-MENS TO GAR-GLS-MENS.
           MOVE FRM-CPSF-AEY TO FRM-CPIM-AEY.
           PERFORM UNP-KEY-GAR.
           PERFORM FST-KEY-GAR.
       FIN-HBL-KEY.
           EXIT.
       HBL-FLD SECTION.
       INI-HBL-FLD.
           PERFORM PRO-IKY-GAR.
           PERFORM PRO-AKY-GAR.
           PERFORM UNP-MKY-GAR.
           PERFORM UNP-FLD-GAR.
           PERFORM FST-FLD-GAR.
       FIN-HBL-FLD.
           EXIT.
       FST-MSG SECTION.
       INI-FST-MSG.
           MOVE -1 TO GAR-GLS-MENS-LEN.
       FIN-FST-MSG.
           EXIT.
       PRO-ALL SECTION.
       INI-PRO-ALL.
           PERFORM PRO-KEY-GAR.
           PERFORM FST-MSG.
       FIN-PRO-ALL.
           EXIT.
       SCR-TRL SECTION.
       INI-SCR-TRL.
           IF FRM-MEN1 NOT > SPACES
               MOVE SCR-PRMT TO FRM-MEN1.
           IF SCR-STAT = SCR-STAT-MOD
               MOVE SCR-INST-GFL TO SCR-INST
               PERFORM HBL-FLD
               PERFORM SCR-MSSG
               PERFORM EDT-KEY-GAR
               PERFORM EDT-FLD-GAR
               PERFORM SCR-PUTA
               PERFORM STP-EXIT
               PERFORM SCR-EXIT.
           IF SCR-STAT = SCR-STAT-SON
               MOVE SCR-INST-GCS TO SCR-INST
               PERFORM PRO-ALL
               PERFORM SCR-MSSG
               PERFORM EDT-KEY-GAR
               PERFORM EDT-FLD-GAR
               PERFORM SCR-PUTA
               PERFORM STP-EXIT
               PERFORM SCR-EXIT.
      *ASUME SCR-STAT-CON.
           MOVE SCR-STAT-CON TO SCR-STAT.
           MOVE SCR-INST-GAB TO SCR-INST.
      *    MOVE FRM-CPSF-AEY TO FRM-CPIM-AEY.
           PERFORM PRO-ALL.
           PERFORM SCR-MSSG.
           PERFORM EDT-KEY-GAR.
           PERFORM EDT-FLD-GAR.
           PERFORM SCR-PUTA.
           PERFORM SCR-EXIT.
       FIN-SCR-TRL.
           EXIT.
       DESSCRTRL SECTION.
       INI-DESSCRTRL.
           MOVE SCR-VFLD-NOT TO SCR-VFLD.
           MOVE FRM-FFLD TO SCR-FFLD.
       FIN-DESSCRTRL.
           IF SCR-FFLD-PF10 OR SCR-FFLD-PF3
                 MOVE SCR-INST-HCM TO SCR-INST
           ELSE
                 MOVE SCR-INST-HKY TO SCR-INST.
       EXT-DESSCRTRL.
           EXIT.
      * COPY DEUBMGAR.
       COPY DEUBQGAR.
      *COPY DEUBFRGA.
       DEU-FIO-RGA SECTION.
       INI-DEU-FIO-RGA.
           PERFORM GET-RGA.
           MOVE FIO-STAT TO PGM-STAT-RGA.
       FIN-DEU-FIO-RGA.
           EXIT.
       COPY GNSBFMSG.
       COPY GNSBGSYS.
       COPY GNSBGDTC.
       COPY GNSBGFRM.
       COPY GNSBGMSG.
       COPY GNSBEKEY.
       COPY GNSBIABT.
       COPY GNSBFTAB.
       COPY GNSBVIND.
       COPY GNSBVMSC.
       COPY GNSBFMSC.
       COPY GNSBVIDC.
       COPY GNSBPVRF.
      *<<<< EOF
       RST-STAT SECTION.
       INI-RST-STAT.
           MOVE SCR-STPP     TO SCR-STAT.
           MOVE SCR-MFLD-NOT TO SCR-MFLD.
       FIN-RST-STAT.
           EXIT.
      *>>>>
      *<<<< EOF
       LEE-NXT-PRV SECTION.
       INI-LEE-NXT-PRV.
           MOVE SPACES TO MSG-COD-MENS.
           IF SCR-DBC-REQA > SPACES
               PERFORM LEE-NXT-PRV-DBC
           ELSE
               PERFORM LEE-NXT-PRV-NOM.
       FIN-LEE-NXT-PRV.
           EXIT.
       LEE-NXT-PRV-DBC SECTION.
       INI-LEE-NXT-PRV-DBC.
           MOVE SCR-DBC-REQA TO ADR-DBC-REQA.
           MOVE FIO-KDEF-S TO FIO-KDEF.
           IF FRM-FFLD = FRM-FFLD-PF7
               MOVE FIO-GET-PRV TO FIO-CMND
           ELSE
               MOVE FIO-GET-NXT TO FIO-CMND.
           MOVE 'DBC-GLS-NOMC' TO FIO-AKEY.
           PERFORM SGC-FIO-DBC.
           MOVE FIO-STAT TO PGM-STAT-DBC.
           IF FIO-STAT-OKS
               MOVE ADR-DBC-REQA TO SCR-DBC-REQA.
       FIN-LEE-NXT-PRV-DBC.
           EXIT.
       LEE-NXT-PRV-NOM SECTION.
       INI-LEE-NXT-PRV-NOM.
           IF DBC-GLS-NOMC IN DBC > SPACES
               MOVE FIO-GET-KEY    TO FIO-CMND
               MOVE 'DBC-GLS-NOMC' TO FIO-AKEY
               PERFORM SGC-FIO-DBC
               IF FIO-STAT-OKS
                   IF FRM-FFLD = FRM-FFLD-PF7
                       MOVE FIO-GET-PRV TO FIO-CMND
                   ELSE
                       MOVE FIO-GET-NXT TO FIO-CMND
               ELSE
                   IF FRM-FFLD = FRM-FFLD-PF7
                       MOVE FIO-GET-LEQ TO FIO-CMND
                   ELSE
                       MOVE FIO-GET-NLS TO FIO-CMND
           ELSE
               IF FRM-FFLD = FRM-FFLD-PF7
                   MOVE FIO-GET-LEQ TO FIO-CMND
               ELSE
                   MOVE FIO-GET-NLS TO FIO-CMND.
           MOVE 'DBC-GLS-NOMC' TO FIO-AKEY.
           PERFORM SGC-FIO-DBC.
           MOVE FIO-STAT TO PGM-STAT-DBC.
           IF FIO-STAT-OKS
               MOVE ADR-DBC-REQA TO SCR-DBC-REQA.
       FIN-LEE-NXT-PRV-NOM.
           EXIT.
       PUT-TAB SECTION.
       INI-PUT-TAB.
           MOVE ZEROES TO SCR-R-ASC.
           MOVE ZEROES TO SCR-R-DSC.
           MOVE 0 TO FRM-IFLD
                     RGA-R.
           MOVE FIO-GET-NLS TO FIO-CMND.
           PERFORM DEU-FIO-RGA.
           IF NOT FIO-STAT-OKS OR
              RGA-CAI-ICLI IN GAR-FLD NOT = RGA-CAI-ICLI IN RGA OR
              RGA-IIC-ICLI IN GAR-FLD NOT = RGA-IIC-ICLI IN RGA
               MOVE FIO-STAT-NEX TO FIO-STAT
               GO TO FIN-PUT-TAB.
           MOVE '00' TO PGM-STAT-RGA.
           MOVE RGA-R TO SCR-R-DSC.
       LUP-PUT-TAB.
           MOVE '00' TO FIO-STAT.
           MOVE RGA-R TO SCR-R-ASC.
           ADD 1  TO FRM-IFLD.
           PERFORM PUT-TAB-RGA.
           PERFORM ADD-TOT-GART.
           IF FRM-IFLD < WSS-IMAX
               MOVE FIO-GET-NXT TO FIO-CMND
               PERFORM DEU-FIO-RGA
               IF FIO-STAT-OKS AND
                   RGA-CAI-ICLI IN GAR-FLD = RGA-CAI-ICLI IN RGA AND
                   RGA-IIC-ICLI IN GAR-FLD = RGA-IIC-ICLI IN RGA
                   GO TO LUP-PUT-TAB
               ELSE
                   MOVE FIO-STAT-NEX TO FIO-STAT.
           IF NOT FIO-STAT-OKS
               MOVE '00' TO FIO-STAT
               GO TO FIN-PUT-TAB.
       NXT-PUT-TAB.
           MOVE FIO-GET-NXT TO FIO-CMND.
           PERFORM DEU-FIO-RGA.
           IF FIO-STAT-OKS AND
               RGA-CAI-ICLI IN GAR-FLD = RGA-CAI-ICLI IN RGA AND
               RGA-IIC-ICLI IN GAR-FLD = RGA-IIC-ICLI IN RGA
      *        PERFORM CAL-VPES
               PERFORM ADD-TOT-GART
               GO TO NXT-PUT-TAB.
           MOVE '00' TO FIO-STAT.
       FIN-PUT-TAB.
           EXIT.
       SCRL-TAB-RGA SECTION.
       INI-SCRL-TAB-RGA.
           MOVE SPACES TO MSG-COD-MENS.
           MOVE SCR-CIC-ICLI TO RGA-CIC-ICLI IN RGA-LINK.
           MOVE SCR-R-RMAX   TO RGA-RMAX.
           MOVE SCR-TAB-IRGA TO RGA-TAB-IRGA.
           IF FRM-FFLD = FRM-FFLD-PF6
               IF FRM-IND-REAL IN GAR-FLD(WSS-IMAX) > SPACES
                   PERFORM PUT-TAB-ASC
               ELSE
                   MOVE 'CLI    N+RGA' TO MSG-COD-MENS
           ELSE
               IF FRM-IND-REAL IN GAR-FLD(1) > SPACES
                   PERFORM PUT-TAB-DSC
               ELSE
                   MOVE 'CLI    N-RGA' TO MSG-COD-MENS.
           IF MSG-COD-MENS > SPACES
               MOVE 'COL'        TO MSG-COD-SIST
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MEN2.
       FIN-SCRL-TAB-RGA.
           EXIT.
       PUT-TAB-ASC SECTION.
       INI-PUT-TAB-ASC.
           MOVE SCR-R-ASC TO RGA-R.
           MOVE 0 TO FRM-IFLD.
           MOVE FIO-KDEF-S TO FIO-KDEF.
       LUP-PUT-TAB-ASC.
           MOVE FIO-GET-NXT TO FIO-CMND.
           PERFORM DEU-FIO-RGA.
           IF FIO-STAT-OKS AND
              RGA-CAI-ICLI IN GAR-FLD = RGA-CAI-ICLI IN RGA AND
              RGA-IIC-ICLI IN GAR-FLD = RGA-IIC-ICLI IN RGA
               MOVE RGA-R TO SCR-R-ASC
               IF FRM-IFLD = 0
                   MOVE RGA-R TO SCR-R-DSC
                   PERFORM CLR-TAB-RGA VARYING FRM-IFLD FROM 1 BY 1
                                       UNTIL FRM-IFLD > WSS-IMAX
                   MOVE 1 TO FRM-IFLD
                   PERFORM PUT-TAB-RGA
               ELSE
                   ADD 1 TO FRM-IFLD
                   PERFORM PUT-TAB-RGA
           ELSE
               IF FRM-IFLD = 0
                   MOVE 'COL'          TO MSG-COD-SIST
                   MOVE 'CLI    N+RGA' TO MSG-COD-MENS
                   PERFORM GET-MSG
                   MOVE MSG-GLS-DESC TO FRM-MEN2
                   GO TO FIN-PUT-TAB-ASC
               ELSE
                   GO TO FIN-PUT-TAB-ASC.
           IF FRM-IFLD < WSS-IMAX
               GO TO LUP-PUT-TAB-ASC.
       FIN-PUT-TAB-ASC.
           EXIT.
       PUT-TAB-DSC SECTION.
       INI-PUT-TAB-DSC.
           MOVE SCR-R-DSC TO RGA-R.
           MOVE FIO-KDEF-S TO FIO-KDEF.
       LUP-PUT-TAB-DSC.
           MOVE FIO-GET-PRV TO FIO-CMND.
           PERFORM DEU-FIO-RGA.
           IF FIO-STAT-OKS AND
              RGA-CAI-ICLI IN GAR-FLD = RGA-CAI-ICLI IN RGA AND
              RGA-IIC-ICLI IN GAR-FLD = RGA-IIC-ICLI IN RGA
               MOVE RGA-R TO SCR-R-DSC
               IF FRM-IFLD = 0
                   MOVE RGA-R TO SCR-R-ASC
                   PERFORM CLR-TAB-RGA VARYING FRM-IFLD FROM 1 BY 1
                                       UNTIL FRM-IFLD > WSS-IMAX
                   MOVE WSS-IMAX TO FRM-IFLD
                   PERFORM PUT-TAB-RGA
               ELSE
                   SUBTRACT 1 FROM FRM-IFLD
                   PERFORM PUT-TAB-RGA
           ELSE
               IF FRM-IFLD = 0
                   MOVE 'COL'          TO MSG-COD-SIST
                   MOVE 'CLI    N-RGA' TO MSG-COD-MENS
                   PERFORM GET-MSG
                   MOVE MSG-GLS-DESC TO FRM-MEN2
                   GO TO FIN-PUT-TAB-DSC
               ELSE
                   GO TO FIN-PUT-TAB-DSC.
           IF FRM-IFLD > 1
               GO TO LUP-PUT-TAB-DSC.
       FIN-PUT-TAB-DSC.
           EXIT.
       CLR-TAB-RGA SECTION.
       INI-CLR-TAB-RGA.
           MOVE SPACES TO FRM-IND-REAL IN GAR-FLD(FRM-IFLD).
           MOVE SPACES TO FRM-GLS-TGAR IN GAR-FLD(FRM-IFLD).
           MOVE SPACES TO FRM-IND-CGAR IN GAR-FLD(FRM-IFLD).
           MOVE SPACES TO FRM-COD-VCGA IN GAR-FLD(FRM-IFLD).
           MOVE ZEROES TO FRM-VAL-COME IN GAR-FLD(FRM-IFLD).
           MOVE ZEROES TO FRM-VAL-LIQU IN GAR-FLD(FRM-IFLD).
           MOVE ZEROES TO FRM-VAL-POND IN GAR-FLD(FRM-IFLD).
           MOVE SPACES TO FRM-IND-VCGA IN GAR-FLD(FRM-IFLD).
       FIN-CLR-TAB-RGA.
           EXIT.
       CLR-SCR-RGA SECTION.
       INI-CLR-SCR-RGA.
           MOVE SPACES TO SCR-KEY-IRGA(WSS-I).
           MOVE ZEROES TO SCR-VAL-COME(WSS-I).
           MOVE ZEROES TO SCR-VAL-LIQU(WSS-I).
           MOVE ZEROES TO SCR-VAL-POND(WSS-I).
       FIN-CLR-SCR-RGA.
           EXIT.
       CLR-RGA SECTION.
       INI-CLR-RGA.
           MOVE SPACES TO RGA-KEY-IRGA IN RGA-LINK(WSS-I).
           MOVE ZEROES TO RGA-VAL-COME IN RGA-LINK(WSS-I).
           MOVE ZEROES TO RGA-VAL-LIQU IN RGA-LINK(WSS-I).
           MOVE ZEROES TO RGA-VAL-POND IN RGA-LINK(WSS-I).
       FIN-CLR-RGA.
           EXIT.
       GET-RGA SECTION.
       INI-GET-RGA.
           MOVE '00' TO FIO-STAT.
           IF FIO-CMND = FIO-GET-PRV OR FIO-CMND = FIO-GET-LEQ
               SUBTRACT 1 FROM RGA-R
               IF RGA-R NOT > ZEROES
                   MOVE '23' TO FIO-STAT
                   GO TO FIN-GET-RGA
               ELSE
                   NEXT SENTENCE
           ELSE
               ADD 1 TO RGA-R
               IF RGA-R > RGA-RMAX
                   MOVE '23' TO FIO-STAT
                   GO TO FIN-GET-RGA.
      *ALD MOVE RGA-CIC-ICLI IN RGA-LINK        TO RGA-CIC-ICLI IN RGA.
           MOVE RGA-CAI-ICLI IN GAR-FLD         TO RGA-CAI-ICLI IN RGA.
           MOVE RGA-IIC-ICLI IN GAR-FLD         TO RGA-IIC-ICLI IN RGA.
      *
           MOVE RGA-IND-REAL IN RGA-LINK(RGA-R) TO RGA-IND-REAL IN RGA.
           MOVE RGA-COD-COGA IN RGA-LINK(RGA-R) TO RGA-COD-COGA IN RGA.
           MOVE RGA-IND-CGAR IN RGA-LINK(RGA-R) TO RGA-IND-CGAR IN RGA.
           MOVE RGA-COD-VCGA IN RGA-LINK(RGA-R) TO RGA-COD-VCGA IN RGA.
           MOVE RGA-COD-OFGA IN RGA-LINK(RGA-R) TO RGA-COD-OFGA IN RGA.
           MOVE RGA-VAL-COME IN RGA-LINK(RGA-R) TO RGA-VAL-COME IN RGA.
           MOVE RGA-VAL-LIQU IN RGA-LINK(RGA-R) TO RGA-VAL-LIQU IN RGA.
           MOVE RGA-VAL-POND IN RGA-LINK(RGA-R) TO RGA-VAL-POND IN RGA.
       FIN-GET-RGA.
           EXIT.
       PUT-TAB-RGA SECTION.
       INI-PUT-TAB-RGA.
           MOVE RGA-IND-REAL IN RGA TO FRM-IND-REAL IN
                                           GAR-FLD(FRM-IFLD).
      *BUS-TAB busca glosa de codigo en tabla
           IF RGA-COD-TOGA IN RGA > SPACES
               MOVE 'TAB' TO TAB-COD-SIST
               MOVE 'TIO' TO TAB-COD-TTAB IN TAB
               MOVE RGA-COD-TOGA IN RGA TO TAB-COD-CTAB IN TAB
               PERFORM BUS-TAB
               MOVE TAB-GLS-DESC IN TAB TO FRM-GLS-TGAR IN
                                            GAR-FLD(FRM-IFLD)
           ELSE
               MOVE SPACES TO FRM-GLS-TGAR IN GAR-FLD(FRM-IFLD).
           MOVE RGA-IND-CGAR IN RGA TO FRM-IND-CGAR IN
                                     GAR-FLD(FRM-IFLD).
      *BUS-TAB busca glosa de codigo en tabla
           IF  RGA-COD-VCGA IN RGA > SPACES
               MOVE 'TAB' TO TAB-COD-SIST
               MOVE 'VLR' TO TAB-COD-TTAB IN TAB
               MOVE RGA-COD-VCGA IN RGA TO TAB-COD-CTAB IN TAB
               PERFORM BUS-TAB
               MOVE TAB-GLS-ABRV IN TAB TO FRM-COD-VCGA IN
                                           GAR-FLD(FRM-IFLD)
           ELSE
               MOVE SPACES              TO FRM-COD-VCGA IN
                                           GAR-FLD(FRM-IFLD).
      *ALD
      *     MOVE RGA-COD-VCGA IN RGA TO FRM-COD-VCGA IN
      *                                     GAR-FLD(FRM-IFLD).
      *
      *Calcular valor de garantias en pesos
      *     PERFORM CAL-VPES.
           IF WSS-IND-NEXI = 'X'
               MOVE 'X'  TO FRM-IND-VCGA IN GAR-FLD(FRM-IFLD).
           IF WSS-IND-NVIG = 'N'
               MOVE 'N'  TO FRM-IND-VCGA IN GAR-FLD(FRM-IFLD).
           MOVE RGA-VAL-COME IN RGA TO FRM-VAL-COME IN
                                     GAR-FLD(FRM-IFLD).
           MOVE RGA-VAL-LIQU IN RGA TO FRM-VAL-LIQU IN
                                     GAR-FLD(FRM-IFLD).
           MOVE RGA-VAL-POND IN RGA TO FRM-VAL-POND IN
                                     GAR-FLD(FRM-IFLD).
       FIN-PUT-TAB-RGA.
           EXIT.
       ADD-TOT-GART SECTION.
       INI-ADD-TOT-GART.
      *JJV Acumular valores de garantias
           IF RGA-IND-CGAR IN RGA = 'G'
               ADD RGA-VAL-COME IN RGA TO FRM-VAL-TGGC IN GAR-FLD
               ADD RGA-VAL-LIQU IN RGA TO FRM-VAL-TGGL IN GAR-FLD
               ADD RGA-VAL-POND IN RGA TO FRM-VAL-TGGP IN GAR-FLD
           ELSE
               ADD RGA-VAL-COME IN RGA TO FRM-VAL-TGEC IN GAR-FLD
               ADD RGA-VAL-LIQU IN RGA TO FRM-VAL-TGEL IN GAR-FLD
               ADD RGA-VAL-POND IN RGA TO FRM-VAL-TGEP IN GAR-FLD.
       FIN-ADD-TOT-GART.
           EXIT.
       CAL-VPES SECTION.
       INI-CAL-VPES.
           IF RGA-COD-VCGA IN RGA = '0999  '
               MOVE 1 TO CAM-SGV-VCAM IN CAM
           ELSE
               PERFORM GET-FHOY
               MOVE HOY-DHOY IN HOY-VARI TO CAM-NUM-DCAM IN CAM(1)
               MOVE HOY-MHOY IN HOY-VARI TO CAM-NUM-MCAM IN CAM(1)
               MOVE HOY-AHOY IN HOY-VARI TO CAM-NUM-ACAM IN CAM(1)
               MOVE HOY-SHOY IN HOY-VARI TO CAM-NUM-SCAM IN CAM(1)
               MOVE HOY-DHOY IN HOY-VARI TO CAM-NUM-DCAM IN CAM(2)
               MOVE HOY-MHOY IN HOY-VARI TO CAM-NUM-MCAM IN CAM(2)
               MOVE HOY-AHOY IN HOY-VARI TO CAM-NUM-ACAM IN CAM(2)
               MOVE HOY-SHOY IN HOY-VARI TO CAM-NUM-SCAM IN CAM(2)
               MOVE RGA-COD-VCGA IN RGA TO CAM-COD-VCAM  IN CAM(1)
               MOVE '0999  '            TO CAM-COD-VCAM  IN CAM(2)
               MOVE FIO-GET-KEY TO FIO-CMND
               PERFORM TAB-FIO-CAM
               IF NOT FIO-STAT-OKS
                   MOVE 'X'  TO WSS-IND-NEXI
                   MOVE ZEROES TO CAM-SGV-VCAM IN CAM
               ELSE
                   IF CAM-IND-VIGE IN CAM = 'N'
                       MOVE 'N'  TO WSS-IND-NVIG
                       MOVE ZEROES TO CAM-SGV-VCAM IN CAM.
           MULTIPLY RGA-VAL-COME IN RGA BY CAM-SGV-VCAM IN CAM
                    GIVING RGA-VAL-COME IN RGA.
           MULTIPLY RGA-VAL-LIQU IN RGA BY CAM-SGV-VCAM IN CAM
                    GIVING RGA-VAL-LIQU IN RGA.
           MULTIPLY RGA-VAL-POND IN RGA BY CAM-SGV-VCAM IN CAM
                    GIVING RGA-VAL-POND IN RGA.
       FIN-CAL-VPES.
           EXIT.
       DET-RMAX SECTION.
       INI-DET-RMAX.
           IF RGA-KEY-IRGA IN RGA-LINK(WSS-I) > SPACES
               MOVE WSS-I TO RGA-RMAX
           ELSE
               MOVE 101 TO WSS-I.
       FIN-DET-RMAX.
           EXIT.
       COPY GNSBBTAB.
       COPY TABBFCAM.
       COPY SGCBFDBC.
       COPY GNSBGFEC.
       COPY GNSBGHOY.
       COPY SGCBGCLI.
       COPY GNSBGCPT.
       COPY GNSBGSTR.
      *ALD Rutina GARPGGAR
       COPY DEUBGGAR.
      *IDG-PUT-RGA SECTION.
      *INI-IDG-PUT-RGA.
      *    MOVE FIO-GET-KEY TO FIO-CMND.
      *    PERFORM DEU-FIO-RGA.
      *FIN-IDG-PUT-RGA.
      *    EXIT.
      *
      *>>>>
