       IDENTIFICATION DIVISION.
      *========================
       PROGRAM-ID.   DAPPQCPP.
       AUTHOR.       CONSIST.
       DATE-WRITTEN. 11-Jun-18 06:08 PM.

      * NOMBRE PROGRAMA                   DAPPQCPP
      * VERSION PGM                       3.1
      * VERSION SKL                       07.08.21
      * OPCION                            CON
      * ARCHIVO BASE                      DAPCPP
      * PANTALLA                          DAPCPP
      * INP/OUT                           DATACOM
      * TAMANO COMMAREA                   250

      * ACTUALIZA ARCHIVO DAPCPP EN FORMA INTERACTIVA.
      *=============================================================*
      * MANTENCION : BALANCE OPTIMO DAP
      * ETIQUETA   : *OGB-INI 13-ENE-2017 BALANCE OPTIMO DAP
      * OBJETIVO   : LEE PPD Y LA GUARDA EN REGISTRO POD
      * FECHA      : ENERO-2017
      * RESPONSABLE: CIMA-OGB
      *=============================================================*
      * PROYECTO     : ELIMINACION DEPENDENCIA PROD BATCH 
      * MODIFICACION : CONSULTA Y ELIMINACION MASIVA DE CPP
      * FECHA        : MAYO 2018
      * ETIQUETA     : 
      *        *OGB-INI 31-MAY-2018 CONSULTA Y ELIMINACION MASIVA DE CPP
      *=============================================================*  

       ENVIRONMENT DIVISION.
      *=====================
       CONFIGURATION SECTION.
      *----------------------
       SPECIAL-NAMES.
               DECIMAL-POINT IS COMMA.
       DATA DIVISION.
      *==============

       WORKING-STORAGE SECTION.
      *------------------------
      * COPY GNSWGSCR.
       COPY GNSWGCVT.
       77  WSS-TAG-DAPPQCPP-INI PIC X(125) VALUE                        
           '<IDNPGM NOM=$DAPPQCPP$ SKL=$07.08.21$ VSN=${vsnpq}$        
      -    'GEN=$11-Jun-18 06:08 PM$ FNC=${fncpq}$/>'.    

       COPY GNSWCSCR.
      *PTC-INI
      *PTC-SUB
      * COPY GNSWVSCR.
       COPY GNSWV3CR.
      *PTC-FIN
       COPY DAPWICPP.

       COPY DAPBRCPP.


       COPY GNSWVIDD.
       COPY GNSWGRQA.
       COPY GNSWGUIB.
       COPY GNSWGELS.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-CPP-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-TAB-REQA==.
       COPY GNSBRTAB.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-MSG-REQA==.
       COPY GNSBRMSG.
       COPY GNSWCFIO.
       COPY GNSWVFIO.
      *PTC-INI
      *PTC-SUB
      * ISP  10-MAY-2001 13:46:35 
      * COPY GNSWGFRM.
       COPY GNSWG3CF.
       COPY GNSWGTSK.
       COPY GNSWGQUE.
      *PTC-FIN
       COPY GNSWGFEC.
       COPY GNSWGHOY.
       COPY GNSWGSYS.

      *<<<< WSS
       COPY DAPBRPOD.
      *OGB-INI 13-ENE-2017 BALANCE OPTIMO DAP
       COPY DAPWGPPD.
       COPY MC2BRPPD.
       COPY TABWGRCC.

       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-PPD-REQA==.

       COPY DAPWG006.
       COPY DAPBRCPD.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-CPD-REQA==.
       COPY USPC117.
       COPY DAPWGPOD.
      *OGB-FIN 13-ENE-2017 BALANCE OPTIMO DAP
      *OGB-INI 31-MAY-2018 CONSULTA Y ELIMINACION MASIVA DE CPP
       COPY DAPWXCPP.
      *OGB-FIN 31-MAY-2018 CONSULTA Y ELIMINACION MASIVA DE CPP

      *>>>> END 
      *<<<< WSS_DTC
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-POD-REQA==.
      *OGB-INI 13-ENE-2017 BALANCE OPTIMO DAP
       01  WSS-RUP.
           03 WSS-RUP-PROG                            PIC X(09).
           03 WSS-RUP-PROD                            PIC X(02).
           03 WSS-RUP-FAMI                            PIC X(01).
       01  WSS-IND-BATCH  VALUE 'N'                   PIC X(01).
      *OGB-FIN 13-ENE-2017 BALANCE OPTIMO DAP
      *OGB-INI 31-MAY-2018 CONSULTA Y ELIMINACION MASIVA DE CPP
       01  WSS-VARI.
           03 WSS-X          VALUE ZEROES               PIC 9(03).
           03 WSS-Z          VALUE ZEROES               PIC 9(03).
           03 WSS-VEC-COD-MVTO.
              05 WSS-COD-MVTO   OCCURS 100              PIC X(03).
              
       01  WSS-CONSTANTES.
           03 WSS-COM         VALUE 'COM'               PIC X(03).
           03 WSS-ELM         VALUE 'ELM'               PIC X(03).
           03 WSS-MVT         VALUE 'MVT'               PIC X(03).
           03 WSS-S           VALUE 'S'                 PIC X(01).
           03 WSS-1           VALUE 1                   PIC 9(01).
      *OGB-FIN 31-MAY-2018 CONSULTA Y ELIMINACION MASIVA DE CPP
      *>>>> END 
       01  PGM-VARI.
           03 PGM-ICLR                  VALUE ' '       PIC X(01).
           03 PGM-LIMPIAR-TODO          VALUE ' '       PIC X(01).
           03 PGM-LIMPIAR-LLAVES        VALUE 'K'       PIC X(01).
           03 PGM-LIMPIAR-CAMPOS        VALUE 'F'       PIC X(01).
           03 PGM-NO-LIMPIAR-NADA       VALUE 'N'       PIC X(01).
           03 PGM-PROG                                  PIC X(08).
           03 PGM-NTRN                                  PIC X(04).
           03 PGM-STAT.
              05 PGM-STAT-CPP.
                 88 PGM-STAT-CPP-NUL    VALUE '  '.
                 07 PGM-STT1-CPP        VALUE '2' PIC X(01).
                    88 PGM-STAT-CPP-OKS VALUE '0'.
                 07 PGM-STT2-CPP        VALUE '3' PIC X(01).
           03 PGM-SRNF                  VALUE '23'      PIC X(02).
           03 PGM-SOKS                  VALUE '00'      PIC X(02).
           03 PGM-SNUL                  VALUE '  '      PIC X(02).
           03 PGM-SUAR                  VALUE SPACES    PIC X(15).

       LINKAGE SECTION.
      *----------------
       01  DFHCOMMAREA.
           02 FILLER                    PIC X(250).
       COPY GNSLGFIO.

       PROCEDURE DIVISION.
      *===================

       MAIN SECTION.
       INI-MAIN.
           PERFORM INI.
       LUP-MAIN.
           IF SCR-INST = SCR-INST-HCM
                 PERFORM SCR-COM.
           IF SCR-CCPP = 'MOD'
                 PERFORM SCR-MOD
           ELSE
           IF SCR-CCPP = 'ING'
                 PERFORM SCR-ING
           ELSE
           IF SCR-CCPP = 'ACC'
                 PERFORM SCR-ACC
           ELSE
           IF SCR-CCPP = 'ELI'
                 PERFORM SCR-ELI
           ELSE
           IF SCR-CCPP = 'ACT'
                 PERFORM SCR-ACT
           ELSE
           IF SCR-CCPP = 'PGM'
                 PERFORM SCR-PGM
           ELSE
                 MOVE SCR-INST-HCM TO SCR-INST.
           GO TO LUP-MAIN.
       FIN-MAIN.
           EXIT.

       INI SECTION.
       INI-INI.
       COPY GNSBGEIB.
       COPY GNSBGEDB.
           MOVE LOW-VALUES TO CPP-FLD.
           PERFORM GNS-PRO-RCK.
           PERFORM GNS-BUS-VCA.
           PERFORM GNS-HDL-SYS.
           PERFORM GNS-HDL-FRM.
           MOVE 'DAPPQCPP' TO FIO-PROG.
           PERFORM GNS-BUS-IDD.
      *PTC-INI
           PERFORM GNS-ERR-QUE.
           PERFORM GET-TSK-TERM.
      *PTC-FIN
      *<<<< INI_FIO
      *OGB-INI 31-MAY-2018 CONSULTA Y ELIMINACION MASIVA DE CPP
           IF SCR-OFRM-SRV
               MOVE TSK-TERM-ALF TO CPP-TS-OCC-TERM
           ELSE
               MOVE EIBTRMID     TO CPP-TS-OCC-TERM.
      *OGB-FIN 31-MAY-2018 CONSULTA Y ELIMINACION MASIVA DE CPP
      *>>>>
       FIN-INI.
           EXIT.

       COPY GNSBHSYS.
       COPY GNSBHFRM.
       COPY GNSBPRCK.
       COPY GNSBBVCA.
       COPY GNSBBIDD.

       SCR-COM SECTION.
       INI-SCR-COM.
           MOVE FRM-CPSF-AEY TO FRM-CPIM-AEY.
           PERFORM PRO-ALL.
           PERFORM SCR-CLRA-CPP.
           PERFORM EDT-KEY-CPP.
           PERFORM EDT-FLD-CPP.
           PERFORM SCR-PUTA.
           MOVE SCR-INST-HCM TO SCR-INST.
           MOVE SCR-CMNP     TO SYS-PROG.
           MOVE SCR-VARI     TO SYS-CMMA.
           MOVE SCR-TCMA     TO SYS-TCMA.
           MOVE SYS-XCTL     TO SYS-CMND.
      *PTC-INI
           IF NOT SCR-OFRM-SRV
      *PTC-FIN
           PERFORM GNS-PRO-SYS.
       XCT-ERR.
           MOVE 'XCTERR    ' TO MSG-COD-MENS.
           MOVE 'GNS'        TO MSG-COD-SIST.
           PERFORM GET-MSG.
           MOVE MSG-GLS-DESC TO SYS-MEN1.
           MOVE SYS-PROG     TO SYS-MEN2.
           MOVE SYS-ABOR     TO SYS-CMND.
      *PTC-INI
           IF NOT SCR-OFRM-SRV
      *PTC-FIN
           PERFORM GNS-PRO-SYS.
       COPY GNSBGGBK.
       FIN-SCR-COM.
           EXIT.

       SCR-MOD SECTION.
       INI-SCR-MOD.
           IF SCR-INST = SCR-INST-HKY
               PERFORM HBL-KEY
               MOVE SCR-INST-GKY TO SCR-INST
               PERFORM SCR-DMSG
           ELSE
           IF SCR-INST = SCR-INST-GKY
                PERFORM SCR-KEY
                IF SCR-STAT NOT = SCR-STAT-ABT
                        PERFORM SCR-TRL
                ELSE
                        PERFORM DESSCRTRL
                        GO TO FIN-SCR-MOD
           ELSE
           IF SCR-INST = SCR-INST-GAB
                PERFORM GET-CON
           ELSE
           IF SCR-INST = SCR-INST-BRW
               MOVE SCR-FFLD TO FRM-FFLD
               PERFORM BRW-SCR-MOD.
           PERFORM DESSCRTRL.
       MSG-SCR-MOD.
           MOVE SPACES TO FRM-MENS.
           PERFORM SCR-MSSG.
       FIN-SCR-MOD.
           EXIT.

       BRW-SCR-MOD SECTION.
       INI-BRW-SCR-MOD.
       FIN-BRW-SCR-MOD.
           EXIT.

       SCR-ING SECTION.
       INI-SCR-ING.
           IF SCR-INST = SCR-INST-HKY
               PERFORM HBL-IKY
               MOVE SCR-INST-GKY TO SCR-INST
      *PTC-INI
               IF NOT SCR-OFRM-SRV
                   PERFORM SCR-DMSG
               ELSE
                   PERFORM SCR-PUTA
      *PTC-FIN
           ELSE
           IF SCR-INST = SCR-INST-GKY
                PERFORM SCR-RST
                PERFORM GET-IKY
                IF NOT FRM-STAT-ABT
                        MOVE SPACES TO FRM-MENS
                        PERFORM FND-KEY
                        IF NOT FIO-STAT-OKS AND
                           FIO-STAT NOT = FIO-STAT-NEX
      *JSS                  PERFORM CLR-FLD-CPP
                            MOVE PGM-LIMPIAR-TODO TO PGM-ICLR
                            PERFORM SCR-TRL
                        ELSE
      *PTC-INI
                        MOVE 'S' TO SCR-IERR
      *PTC-FIN
                        MOVE PGM-LIMPIAR-CAMPOS TO PGM-ICLR
                        IF FRM-MENS NOT > SPACES
                            MOVE 'REGEXI    ' TO MSG-COD-MENS
                            MOVE 'GNS' TO MSG-COD-SIST
                            PERFORM GET-MSG
                            MOVE MSG-GLS-DESC TO FRM-MENS
                            PERFORM SCR-MSSG
                            MOVE SCR-STAT-ABT TO SCR-STAT
                            PERFORM DESSCRTRL
                            GO TO FIN-SCR-ING
                        ELSE
                            PERFORM SCR-MSSG
                            MOVE SCR-STAT-ABT TO SCR-STAT
                            PERFORM DESSCRTRL
                            GO TO FIN-SCR-ING
                ELSE
                        MOVE SPACES TO FRM-MENS
                        PERFORM SCR-MSSG
                        PERFORM DESSCRTRL
                        GO TO FIN-SCR-ING
           ELSE
           IF SCR-INST = SCR-INST-GAB
                PERFORM GET-CON.
           PERFORM DESSCRTRL.
       MSG-SCR-ING.
           MOVE SPACES TO FRM-MENS.
           PERFORM SCR-MSSG.
       FIN-SCR-ING.
           EXIT.

       SCR-ACC SECTION.
       INI-SCR-ACC.
           IF SCR-INST = SCR-INST-HKY
               PERFORM HBL-KEY
               MOVE SCR-INST-GKY TO SCR-INST
               PERFORM SCR-DMSG
           ELSE
           IF SCR-INST = SCR-INST-GKY
                PERFORM SCR-KEY
                IF SCR-STAT NOT = SCR-STAT-ABT
                        PERFORM SCR-TRL
                ELSE
                        PERFORM DESSCRTRL
                        GO TO FIN-SCR-ACC
           ELSE
           IF SCR-INST = SCR-INST-GAB
                PERFORM GET-CON
           ELSE
           IF SCR-INST = SCR-INST-BRW
               MOVE SCR-FFLD TO FRM-FFLD
               PERFORM BRW-SCR-ACC.
           PERFORM DESSCRTRL.
           MOVE SPACES TO FRM-MENS.
           PERFORM SCR-MSSG.
       FIN-SCR-ACC.
           EXIT.

       BRW-SCR-ACC SECTION.
       INI-BRW-SCR-ACC.
       FIN-BRW-SCR-ACC.
           EXIT.

       SCR-ELI SECTION.
       INI-SCR-ELI.
           IF SCR-INST = SCR-INST-HKY
               PERFORM HBL-KEY
               MOVE SCR-INST-GKY TO SCR-INST
               PERFORM SCR-DMSG
           ELSE
           IF SCR-INST = SCR-INST-GKY
                PERFORM SCR-KEY
                IF SCR-STAT NOT = SCR-STAT-ABT
                        PERFORM SCR-TRL
                ELSE
                        PERFORM DESSCRTRL
                        GO TO FIN-SCR-ELI
           ELSE
           IF SCR-INST = SCR-INST-GAB
                PERFORM GET-CON
           ELSE
           IF SCR-INST = SCR-INST-BRW
               MOVE SCR-FFLD TO FRM-FFLD
               PERFORM BRW-SCR-ELI.
           PERFORM DESSCRTRL.
           MOVE SPACES TO FRM-MENS.
           PERFORM SCR-MSSG.
       FIN-SCR-ELI.
           EXIT.

       BRW-SCR-ELI SECTION.
       INI-BRW-SCR-ELI.
       FIN-BRW-SCR-ELI.
           EXIT.

       SCR-ACT SECTION.
       INI-SCR-ACT.
           IF SCR-INST = SCR-INST-HKY
               PERFORM HBL-KEY
               MOVE SCR-INST-GKY TO SCR-INST
               PERFORM SCR-DMSG
           ELSE
           IF SCR-INST = SCR-INST-GKY
                PERFORM SCR-RST
                PERFORM GET-KEY
                IF NOT FRM-STAT-ABT
                        MOVE SPACES TO FRM-MENS
                        PERFORM FND-KEY
                        IF FIO-STAT-OKS
                            MOVE SCR-ACTU-MOD TO SCR-ACTU
                            PERFORM PUT-SCR
                            MOVE PGM-LIMPIAR-TODO TO PGM-ICLR
                            PERFORM SCR-TRL
                        ELSE
                        MOVE PGM-LIMPIAR-CAMPOS TO PGM-ICLR
                        IF FIO-STAT-EOF
                            IF FRM-MENS NOT > SPACES
                                MOVE 'REGEOF    ' TO MSG-COD-MENS
                                MOVE 'GNS' TO MSG-COD-SIST
                                PERFORM GET-MSG
                                MOVE MSG-GLS-DESC TO FRM-MENS
                                PERFORM SCR-MSSG
                                MOVE SCR-STAT-ABT TO SCR-STAT
                                PERFORM DESSCRTRL
                                GO TO FIN-SCR-ACT
                            ELSE
                                PERFORM SCR-MSSG
                                MOVE SCR-STAT-ABT TO SCR-STAT
                                PERFORM DESSCRTRL
                                GO TO FIN-SCR-ACT
                        ELSE
                        IF FIO-STAT = FIO-STAT-NEX
                            IF FRM-MENS NOT > SPACES
                                MOVE 'REGNEX    ' TO MSG-COD-MENS
                                MOVE 'GNS' TO MSG-COD-SIST
                                PERFORM GET-MSG
                                MOVE MSG-GLS-DESC TO FRM-MENS
                                PERFORM SCR-MSSG
                                MOVE SCR-STAT-ABT TO SCR-STAT
                                PERFORM DESSCRTRL
                                GO TO FIN-SCR-ACT
                            ELSE
                                PERFORM SCR-MSSG
                                MOVE SCR-STAT-ABT TO SCR-STAT
                                PERFORM DESSCRTRL
                                GO TO FIN-SCR-ACT
                        ELSE
                            MOVE SCR-ACTU-ING TO SCR-ACTU
      *JSS                  PERFORM CLR-FLD-CPP
                            MOVE PGM-LIMPIAR-TODO TO PGM-ICLR
                            PERFORM SCR-TRL
                ELSE
                        MOVE SPACES TO FRM-MENS
                        PERFORM SCR-MSSG
                        PERFORM DESSCRTRL
                        GO TO FIN-SCR-ACT
           ELSE
           IF SCR-INST = SCR-INST-GAB
                PERFORM GET-CON
           ELSE
           IF SCR-INST = SCR-INST-BRW
               MOVE SCR-FFLD TO FRM-FFLD
               PERFORM BRW-SCR-ACT.
           PERFORM DESSCRTRL.
           MOVE SPACES TO FRM-MENS.
           PERFORM SCR-MSSG.
       FIN-SCR-ACT.
           EXIT.

       BRW-SCR-ACT SECTION.
       INI-BRW-SCR-ACT.
       FIN-BRW-SCR-ACT.
           EXIT.

       SCR-PGM SECTION.
       INI-SCR-PGM.
           IF SCR-INST = SCR-INST-HKY
               PERFORM HBL-KEY
               MOVE SCR-INST-GKY TO SCR-INST
               PERFORM SCR-DMSG
           ELSE
           IF SCR-INST = SCR-INST-GKY
                PERFORM SCR-RST
                PERFORM GET-KEY
                IF FRM-STAT-ABT
                    MOVE SPACES TO FRM-MENS
                    PERFORM SCR-MSSG
                    PERFORM DESSCRTRL
                    GO TO FIN-SCR-PGM
                ELSE
                    MOVE SPACES TO FRM-MENS
                    PERFORM FND-KEY
                    IF FIO-STAT = FIO-STAT-NEX
                        IF FRM-MENS NOT > SPACES
                            MOVE 'REGNEX    ' TO MSG-COD-MENS
                            MOVE 'GNS' TO MSG-COD-SIST
                            PERFORM GET-MSG
                            MOVE MSG-GLS-DESC TO FRM-MENS
                            PERFORM SCR-MSSG
                            MOVE SCR-STAT-ABT TO SCR-STAT
                            PERFORM DESSCRTRL
                            GO TO FIN-SCR-PGM
                        ELSE
                            PERFORM SCR-MSSG
                            MOVE SCR-STAT-ABT TO SCR-STAT
                            PERFORM DESSCRTRL
                            GO TO FIN-SCR-PGM
                    ELSE
                        MOVE PGM-LIMPIAR-TODO TO PGM-ICLR
                        PERFORM SCR-TRL
           ELSE
           IF SCR-INST = SCR-INST-GAB
                PERFORM GET-CON
           ELSE
           IF SCR-INST = SCR-INST-BRW
               MOVE SCR-FFLD TO FRM-FFLD
               PERFORM BRW-SCR-PGM.
       TRL-SCR-PGM.
           PERFORM DESSCRTRL.
           MOVE SPACES TO FRM-MENS.
           PERFORM SCR-MSSG.
       FIN-SCR-PGM.
           EXIT.

       BRW-SCR-PGM SECTION.
       INI-BRW-SCR-PGM.
       FIN-BRW-SCR-PGM.
           EXIT.

       SCR-DMSG SECTION.
       INI-SCR-DMSG.
           IF PGM-ICLR = PGM-NO-LIMPIAR-NADA
               NEXT SENTENCE
           ELSE
           IF PGM-ICLR = PGM-LIMPIAR-TODO
               PERFORM SCR-CLRA-CPP
               PERFORM EDT-KEY-CPP
               PERFORM EDT-FLD-CPP
           ELSE
           IF PGM-ICLR = PGM-LIMPIAR-LLAVES
               PERFORM CLR-KEY-CPP
               PERFORM EDT-KEY-CPP
           ELSE
               PERFORM CLR-FLD-CPP
               PERFORM EDT-FLD-CPP.
           PERFORM SCR-PUTA.
           PERFORM SCR-EXIT.
       FIN-SCR-DMSG.
           EXIT.

       SCR-KEY SECTION.
       INI-SCR-KEY.
           PERFORM SCR-RST.
           PERFORM GET-KEY.
           IF FRM-STAT-ABT
                   MOVE SPACES TO FRM-MENS
                   PERFORM SCR-MSSG
                   GO TO FIN-SCR-KEY.
       FND-SCR-KEY.
           MOVE SPACES TO FRM-MENS.
           PERFORM FND-KEY.
           IF FIO-STAT-OKS
               PERFORM PUT-SCR
               MOVE PGM-LIMPIAR-TODO TO PGM-ICLR
               GO TO FIN-SCR-KEY.
      *JSS ELSE
      *        PERFORM CLR-FLD-CPP.
       ERR-SCR-KEY.
      *PTC-INI
           MOVE 'S' TO SCR-IERR.
      *PTC-FIN
           MOVE PGM-LIMPIAR-CAMPOS TO PGM-ICLR.
           IF FRM-MENS NOT > SPACES
               IF FIO-STAT-EOF
                   MOVE 'REGEOF    ' TO MSG-COD-MENS
                   MOVE 'GNS' TO MSG-COD-SIST
                   PERFORM GET-MSG
                   MOVE MSG-GLS-DESC TO FRM-MENS
               ELSE
               IF FIO-STAT = FIO-STAT-NEX
                   MOVE 'REGNEX    ' TO MSG-COD-MENS
                   MOVE 'GNS' TO MSG-COD-SIST
                   PERFORM GET-MSG
                   MOVE MSG-GLS-DESC TO FRM-MENS
               ELSE
                   MOVE 'FIOSTAT' TO MSG-COD-TMSG
                   MOVE FIO-STAT  TO MSG-COD-CMSG
                   MOVE 'GNS'     TO MSG-COD-SIST
                   PERFORM GET-MSG
                   MOVE MSG-GLS-DESC TO FRM-MENS.
           PERFORM SCR-MSSG.
           MOVE SCR-STAT-ABT TO SCR-STAT.
       FIN-SCR-KEY.
           EXIT.

       SCR-RST SECTION.
       INI-SCR-RST.
           MOVE SPACES       TO PGM-ICLR.
           MOVE SPACES       TO SCR-ACTU.
           MOVE SCR-STPP     TO SCR-STAT.
           MOVE SCR-MFLD-NOT TO SCR-MFLD.
           MOVE LOW-VALUES   TO CPP-FLD.
       FIN-SCR-RST.
           EXIT.

       GET-KEY SECTION.
       INI-GET-KEY.
           PERFORM SCR-GKEY.
           IF FRM-STAT-ABT
               MOVE SCR-STAT-ABT TO SCR-STAT.
       FIN-GET-KEY.
           EXIT.

       GET-IKY SECTION.
       INI-GET-IKY.
           PERFORM SCR-GIKY.
           IF FRM-STAT-ABT
               MOVE SCR-STAT-ABT TO SCR-STAT.
       FIN-GET-IKY.
           EXIT.

       FND-KEY SECTION.
       INI-FND-KEY.
           PERFORM KEY-ALL-CPP.
      *<<<< FND_KEY
      *     IF SCR-CMND = 'CON' OR 'COP' 
      *         PERFORM BUS-KEY-CON
      *         MOVE FIO-STAT TO PGM-STAT-CPP
      *         GO TO FIN-FND-KEY.

      *     IF SCR-CCPP = 'MOD' OR 
      *        SCR-CCPP = 'ELI' 
      *         PERFORM BUS-KEY-MOD
      *         MOVE FIO-STAT TO PGM-STAT-CPP
      *         GO TO FIN-FND-KEY.
      *>>>>
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM DAP-FIO-CPP.
           IF FIO-STAT-OKS
               MOVE CPP-STP-ITRN IN CPP TO SCR-UMOD.
           MOVE FIO-STAT TO PGM-STAT-CPP.
      *OGB-INI 31-MAY-2018 CONSULTA Y ELIMINACION MASIVA DE CPP
           IF SCR-CMND NOT = WSS-COM AND NOT = WSS-ELM
              GO TO FIN-FND-KEY.
      
           IF SCR-CMND = WSS-COM OR WSS-ELM
              PERFORM CON-MASIVA-CPP
              IF WSS-X > ZEROES
                 MOVE ZEROES       TO FIO-STAT
              ELSE
                 MOVE FIO-STAT-NEX TO FIO-STAT.

           MOVE FIO-STAT TO PGM-STAT-CPP.
      *OGB-FIN 31-MAY-2018 CONSULTA Y ELIMINACION MASIVA DE CPP
       FIN-FND-KEY.
           IF FIO-STAT = FIO-STAT-NEX
               MOVE 'S' TO SCR-IERR.
       EXT-FND-KEY.
           EXIT.
 
       PUT-SCR SECTION.
       INI-PUT-SCR.
           IF PGM-STAT-CPP-OKS
               MOVE CPP-STP-ITRN IN CPP TO SCR-UMOD.
           PERFORM PUT-ALL-CPP.
       FIN-PUT-SCR.
           EXIT.

       STP-EXIT SECTION.
       INI-STP-EXIT.
           MOVE SCR-PROG TO PGM-PROG.
           MOVE SCR-NTRN TO PGM-NTRN.

           MOVE SCR-PROV TO SCR-PROG.
           MOVE SCR-NTRV TO SCR-NTRN.

           MOVE PGM-PROG TO SCR-PROV
           MOVE PGM-NTRN TO SCR-NTRV.
       FIN-STP-EXIT.
           EXIT.

       SCR-EXIT SECTION.
       INI-SCR-EXIT.
           MOVE 'P'      TO SCR-ICMN.
           MOVE SCR-NTRN TO SYS-NTRN.
           MOVE SCR-VARI TO SYS-CMMA.
           MOVE SCR-TCMA TO SYS-TCMA.
           MOVE SYS-RTRN TO SYS-CMND.
      *PTC-INI
           IF NOT SCR-OFRM-SRV
      *PTC-FIN
           PERFORM GNS-PRO-SYS.
       FIN-SCR-EXIT.
           EXIT.

       SCR-PUTA SECTION.
       INI-SCR-PUTA.
      *PTC-INI
           IF FRM-SUAR EQUAL FRM-SUAR-MAL OR FRM-SUAR-CLR
               MOVE 'S' TO SCR-IERR.
      *PTC-FIN
           MOVE SCR-NMAP TO FRM-NAME.
           MOVE SCR-NLIB TO FRM-NLIB.
           MOVE CPP-FLD TO FRM-DFLD.
           MOVE FRM-PUT-ALL TO FRM-CMND.
           PERFORM GNS-PRO-FRM.
       FIN-SCR-PUTA.
           EXIT.

       SCR-MSSG SECTION.
       INI-SCR-MSSG.
           IF FRM-MEN1 NOT > SPACES
               MOVE SPACES TO FRM-MEN1.
           IF FRM-MEN2 NOT > SPACES
               MOVE SPACES TO FRM-MEN2.
           MOVE FRM-MENS TO CPP-GLS-MENS.
       FIN-SCR-MSSG.
           EXIT.

       SCR-GKEY SECTION.
       INI-SCR-GKEY.
           MOVE SCR-NMAP TO FRM-NAME.
           MOVE SCR-NLIB TO FRM-NLIB.
           MOVE FRM-GET-ALL TO FRM-CMND.
           PERFORM GNS-PRO-FRM.
           MOVE SPACES TO FRM-MENS.
           IF NOT ( FRM-FFLD = FRM-FFLD-RET  OR FRM-FFLD-PF10 OR
                               FRM-FFLD-PF12 OR FRM-FFLD-PF3 )
               MOVE 'PFSINV    ' TO MSG-COD-MENS
               MOVE 'GNS' TO MSG-COD-SIST
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS
               PERFORM FST-KEY-CPP
               PERFORM SCR-MSSG
               PERFORM SCR-PUTA
               PERFORM SCR-EXIT.
           MOVE FRM-DFLD TO CPP-FLD.
           IF FRM-STAT-ABT
               GO TO FIN-SCR-GKEY.
           MOVE FRM-SUAR-OKS TO FRM-SUAR.
           PERFORM VAL-NUM-KEY-CPP.
           IF FRM-SUAR EQUAL FRM-SUAR-MAL OR FRM-SUAR-CLR
      *PTC-INI
               MOVE 'S' TO SCR-IERR
      *PTC-FIN
               PERFORM SCR-MSSG
               PERFORM EDT-KEY-CPP
               PERFORM SCR-PUTA
               PERFORM SCR-EXIT.
      *JSS
           PERFORM CLR-FLD-CPP.
           PERFORM VAL-IKY-CPP.
           IF FRM-SUAR EQUAL FRM-SUAR-MAL OR FRM-SUAR-CLR
               GO TO ERR-SCR-GKEY.
           PERFORM VAL-MKY-CPP.
           IF FRM-SUAR EQUAL FRM-SUAR-MAL OR FRM-SUAR-CLR
               GO TO ERR-SCR-GKEY.
           PERFORM VAL-AKY-CPP.
           IF FRM-SUAR EQUAL FRM-SUAR-MAL OR FRM-SUAR-CLR
               GO TO ERR-SCR-GKEY.
           PERFORM VAL-CON-KEY-CPP.
           IF NOT ( FRM-SUAR EQUAL FRM-SUAR-MAL OR FRM-SUAR-CLR )
               GO TO FIN-SCR-GKEY.
           IF FRM-UCUR NOT > SPACES
               PERFORM FST-KEY-CPP.
       ERR-SCR-GKEY.
      *PTC-INI
           MOVE 'S' TO SCR-IERR.
      *PTC-FIN
           PERFORM SCR-MSSG.
           PERFORM EDT-KEY-CPP.
           PERFORM SCR-PUTA.
           PERFORM SCR-EXIT.
       FIN-SCR-GKEY.
           PERFORM SCR-MSSG.

       SCR-GIKY SECTION.
       INI-SCR-GIKY.
           MOVE SCR-NMAP TO FRM-NAME.
           MOVE SCR-NLIB TO FRM-NLIB.
           MOVE FRM-GET-ALL TO FRM-CMND.
           PERFORM GNS-PRO-FRM.
           MOVE SPACES TO FRM-MENS.
           IF NOT ( FRM-FFLD = FRM-FFLD-RET  OR FRM-FFLD-PF10 OR
                               FRM-FFLD-PF12 OR FRM-FFLD-PF3 )
      *<<<<
               MOVE 'PFSINV    ' TO MSG-COD-MENS                        
               MOVE 'GNS' TO MSG-COD-SIST                               
               PERFORM GET-MSG                                          
               MOVE MSG-GLS-DESC TO FRM-MENS                            
               PERFORM FST-KEY-CPP                                      
               PERFORM SCR-MSSG                                         
               PERFORM SCR-PUTA                                         
               PERFORM SCR-EXIT.                                        
           MOVE FRM-DFLD TO CPP-FLD.                                    
           IF FRM-STAT-ABT                                              
               GO TO FIN-SCR-GIKY.                                      
           MOVE FRM-SUAR-OKS TO FRM-SUAR.                               
           PERFORM VAL-NUM-IKY-CPP.                                     
           IF FRM-SUAR EQUAL FRM-SUAR-MAL OR FRM-SUAR-CLR               
               PERFORM SCR-MSSG                                         
               PERFORM EDT-IKY-CPP                                      
               PERFORM SCR-PUTA                                         
               PERFORM SCR-EXIT.                                        
      *JSS                                                              
           PERFORM CLR-FLD-CPP.                                         
           PERFORM VAL-IKY-CPP.                                         
           IF FRM-SUAR EQUAL FRM-SUAR-MAL OR FRM-SUAR-CLR               
               GO TO ERR-SCR-GIKZ.                                      
           PERFORM VAL-CON-IKY-CPP.                                     
           IF NOT ( FRM-SUAR EQUAL FRM-SUAR-MAL OR FRM-SUAR-CLR )       
               GO TO FIN-SCR-GIKY.                                      
           IF FRM-UCUR NOT > SPACES                                     
               PERFORM FST-KEY-CPP.                                     
       ERR-SCR-GIKZ.                                                    
           PERFORM SCR-MSSG.                                            
           PERFORM EDT-IKY-CPP.                                         
           PERFORM SCR-PUTA.                                            
           PERFORM SCR-EXIT.                                            
           GO TO FIN-SCR-GIKY.
      *>>>>
               MOVE 'PFSINV    ' TO MSG-COD-MENS
               MOVE 'GNS' TO MSG-COD-SIST
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS
               PERFORM FST-KEY-CPP
               PERFORM SCR-MSSG
               PERFORM SCR-PUTA
               PERFORM SCR-EXIT.
           MOVE FRM-DFLD TO CPP-FLD.
           IF FRM-STAT-ABT
               GO TO FIN-SCR-GIKY.
           MOVE FRM-SUAR-OKS TO FRM-SUAR.
           PERFORM VAL-NUM-KEY-CPP.
           IF FRM-SUAR EQUAL FRM-SUAR-MAL OR FRM-SUAR-CLR
      *PTC-INI
               MOVE 'S' TO SCR-IERR
      *PTC-FIN
               PERFORM SCR-MSSG
               PERFORM EDT-IKY-CPP
               PERFORM SCR-PUTA
               PERFORM SCR-EXIT.
      *JSS
           PERFORM CLR-FLD-CPP.
           PERFORM VAL-IKY-CPP.
           IF FRM-SUAR EQUAL FRM-SUAR-MAL OR FRM-SUAR-CLR
               GO TO ERR-SCR-GIKY.
           PERFORM VAL-CON-IKY-CPP.
           IF NOT ( FRM-SUAR EQUAL FRM-SUAR-MAL OR FRM-SUAR-CLR )
               GO TO FIN-SCR-GIKY.
           IF FRM-UCUR NOT > SPACES
               PERFORM FST-KEY-CPP.
       ERR-SCR-GIKY.
      *PTC-INI
           MOVE 'S' TO SCR-IERR.
      *PTC-FIN
           PERFORM SCR-MSSG.
           PERFORM EDT-IKY-CPP.
           PERFORM SCR-PUTA.
           PERFORM SCR-EXIT.
       FIN-SCR-GIKY.
           PERFORM SCR-MSSG.

       GET-CON SECTION.
       INI-GET-CON.
           MOVE SCR-NMAP TO FRM-NAME.
           MOVE SCR-NLIB TO FRM-NLIB.
           MOVE FRM-GET-ALL TO FRM-CMND.
           PERFORM GNS-PRO-FRM.
           IF NOT ( FRM-FFLD = FRM-FFLD-RET  OR FRM-FFLD-PF10 OR
                               FRM-FFLD-PF12 OR FRM-FFLD-PF3 )
               MOVE 'PFSINV    ' TO MSG-COD-MENS
               MOVE 'GNS' TO MSG-COD-SIST
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO CPP-GLS-MEN2
               MOVE SCR-PRMT     TO CPP-GLS-MEN1
               PERFORM FST-MSG
               PERFORM SCR-PUTA
               PERFORM SCR-EXIT.
           MOVE FRM-DFLD TO CPP-FLD.
       FIN-GET-CON.
           MOVE SCR-STAT-CON TO SCR-STAT.

       CLR-MSG SECTION.
       INI-CLR-MSG.
           MOVE SPACES TO CPP-GLS-MENS.
       FIN-CLR-MSG.
           EXIT.

       HBL-IKY SECTION.
       INI-HBL-IKY.
      *<<<<
           IF SCR-DESDE-CMN                                             
               MOVE CPP-GLS-MENS TO FRM-MENS                            
               MOVE LOW-VALUES TO CPP-FLD                               
               MOVE FRM-MENS TO CPP-GLS-MENS.                           
           MOVE FRM-CPSF-AEY TO FRM-CPIM-AEY.                           
           PERFORM PRO-MKY-CPP.                                         
           PERFORM PRO-AKY-CPP.                                         
           PERFORM UNP-IKY-CPP.                                         
           PERFORM FST-KEY-CPP.                                         
           MOVE '1' TO FRM-CPIM-AEY.                                    
           GO TO FIN-HBL-IKY.
      *>>>>
      *PTC-INI
           IF NOT SCR-OFRM-SRV
      *PTC-FIN
           IF SCR-DESDE-CMN
               MOVE CPP-GLS-MENS TO FRM-MENS
               MOVE LOW-VALUES TO CPP-FLD
      * FLB  7-NOV-1994
               PERFORM CLR-KEY-CPP

               IF FRM-MENS < SPACES
                   MOVE LOW-VALUES TO CPP-GLS-MENS
               ELSE
                   MOVE FRM-MENS TO CPP-GLS-MENS.
           PERFORM PRO-MKY-CPP.
           PERFORM PRO-AKY-CPP.
           PERFORM UNP-IKY-CPP.
           PERFORM FST-KEY-CPP.
       FIN-HBL-IKY.
           EXIT.

       HBL-KEY SECTION.
       INI-HBL-KEY.
      *<<<<
           IF SCR-DESDE-CMN                                             
               MOVE CPP-GLS-MENS TO FRM-MENS                            
               MOVE LOW-VALUES TO CPP-FLD                               
               MOVE FRM-MENS TO CPP-GLS-MENS.                           
           MOVE FRM-CPSF-AEY TO FRM-CPIM-AEY.                           
           PERFORM UNP-KEY-CPP.                                         
           PERFORM FST-KEY-CPP.                                         
           MOVE '1' TO FRM-CPIM-AEY.                                    
           GO TO FIN-HBL-KEY.
      *>>>>
      *PTC-INI
           IF NOT SCR-OFRM-SRV
      *PTC-FIN
           IF SCR-DESDE-CMN
               MOVE CPP-GLS-MENS TO FRM-MENS
               MOVE LOW-VALUES TO CPP-FLD
               IF FRM-MENS < SPACES
                   MOVE LOW-VALUES TO CPP-GLS-MENS
               ELSE
                   MOVE FRM-MENS TO CPP-GLS-MENS.
           PERFORM UNP-KEY-CPP.
           PERFORM FST-KEY-CPP.
       FIN-HBL-KEY.
           EXIT.

       HBL-FLD SECTION.
       INI-HBL-FLD.
           PERFORM PRO-IKY-CPP.
           PERFORM PRO-AKY-CPP.
           PERFORM UNP-MKY-CPP.
           PERFORM UNP-FLD-CPP.
           PERFORM FST-FLD-CPP.
      *<<<< FIN_HBL_FLD
           IF SCR-CMND = 'COP'
               PERFORM UNP-IKY-CPP
               PERFORM FST-KEY-CPP.
      *>>>> END 
       FIN-HBL-FLD.
           EXIT.

       FST-MSG SECTION.
       INI-FST-MSG.
           MOVE -1 TO CPP-GLS-MENS-LEN.
       FIN-FST-MSG.
           EXIT.

       PRO-ALL SECTION.
       INI-PRO-ALL.
           PERFORM PRO-KEY-CPP.
           PERFORM FST-MSG.
       FIN-PRO-ALL.
           EXIT.

       SCR-TRL SECTION.
       INI-SCR-TRL.
      *PTC-INI
           IF SCR-STAT NOT = SCR-STPP
               MOVE 'S' TO SCR-IERR.
      *PTC-FIN
           IF FRM-MEN1 NOT > SPACES
               MOVE SCR-PRMT TO FRM-MEN1.
           IF SCR-STAT = SCR-STAT-MOD
               PERFORM HBL-FLD
               PERFORM SCR-MSSG
               PERFORM EDT-KEY-CPP
               PERFORM EDT-FLD-CPP
               PERFORM SCR-PUTA
               PERFORM STP-EXIT
               MOVE SCR-INST-GFL TO SCR-INST
               PERFORM SCR-EXIT.
           IF SCR-STAT = SCR-STAT-SON
               PERFORM PRO-ALL
               PERFORM SCR-MSSG
               PERFORM EDT-KEY-CPP
               PERFORM EDT-FLD-CPP
               PERFORM SCR-PUTA
               PERFORM STP-EXIT
               MOVE SCR-INST-GCS TO SCR-INST
               PERFORM SCR-EXIT.
      *ASUME SCR-STAT-CON.
           MOVE SCR-STAT-CON TO SCR-STAT.
      *    MOVE FRM-CPSF-AEY TO FRM-CPIM-AEY.
           PERFORM PRO-ALL.
           PERFORM SCR-MSSG.
           PERFORM EDT-KEY-CPP.
           PERFORM EDT-FLD-CPP.
           PERFORM SCR-PUTA.
           MOVE SCR-INST-GAB TO SCR-INST.
           PERFORM SCR-EXIT.
       FIN-SCR-TRL.
           EXIT.

       DESSCRTRL SECTION.
       INI-DESSCRTRL.
           MOVE SCR-VFLD-NOT TO SCR-VFLD.
           MOVE FRM-FFLD TO SCR-FFLD.
       FIN-DESSCRTRL.
           IF SCR-FFLD-PF10 OR SCR-FFLD-PF3
                 MOVE SCR-INST-HCM TO SCR-INST
           ELSE
                 MOVE SCR-INST-HKY TO SCR-INST.
       EXT-DESSCRTRL.
           EXIT.

      * PGM-EBR-ALL SECTION.
      * INI-PGM-EBR-ALL.
      *     MOVE 'GNS' TO FIO-SIST.
      *     MOVE FIO-EBR-ALL TO FIO-CMND.
      *     PERFORM GNS-FIO-TAB.
      * FIN-PGM-EBR-ALL.
      *     EXIT.

       COPY DAPBQCPP.
       COPY DAPBFCPP.
       COPY GNSBFMSG.
       COPY GNSBGSYS.
       COPY GNSBGDTC.
      *PTC-INI
      *PTC-SUB
      * ISP  10-MAY-2001 13:46:35 
      * COPY GNSBGFRM.
       COPY GNSBG3CF.
      *PTC-FIN
       COPY GNSBGMSG.
       COPY GNSBEKEY.
       COPY GNSBIABT.
       COPY GNSBBTAB.
       COPY GNSBVCOD.
       COPY GNSBVTAB.
       COPY GNSBFTAB.
       COPY GNSBEGLS.
       COPY GNSBGFEC.
       COPY GNSBGHOY.
      *PTC-INI
       COPY GNSBGQUE.
       COPY GNSBGTSK.
      *PTC-FIN

      *<<<< EOF
       COPY DAPBFPOD.
       COPY DAPBG001.
      *OGB-INI 13-ENE-2017 BALANCE OPTIMO DAP
       COPY DAPBGPPD.
       COPY TABBKRCC.
       COPY MC2BFPPD.

       COPY DAPBFCPD.

       USPC107 SECTION.
       INI-USPC107.
      *    COPY USPC107.
      *********************************************
      *           MODULO   USPC107                *
      *********************************************
      *     PARRAFO DE LLAMADA RUTINA USDR107     *
      *********************************************
           EXEC CICS LINK PROGRAM('USDR107')
                          COMMAREA (USP-VARIABLES)
                          LENGTH(31)
           END-EXEC.
      *
      *********************************************
      *           FIN   MODULO   USPC107          *
      *********************************************
       FIN-USPC107.
           EXIT.
      *OGB-FIN 13-ENE-2017 BALANCE OPTIMO DAP

      * BUS-KEY-CON SECTION.
      * INI-BUS-KEY-CON.
      *     MOVE SPACES TO CPP-COD-VCAM IN CPP.
      *     MOVE SPACES TO CPP-COD-TOPD IN CPP.
      *     MOVE SPACES TO CPP-COD-AOPD IN CPP.
      *     MOVE FIO-GET-NLS TO FIO-CMND.
      * CIC-BUS-KEY-CON.
      *     PERFORM DAP-FIO-CPP.
      *     IF NOT ( FIO-STAT-OKS )
      *         MOVE '23' TO FIO-STAT
      *         GO TO FIN-BUS-KEY-CON.
           
      *     IF ( CPP-COD-VCAM IN CPP = '*' OR
      *          CPP-COD-VCAM IN CPP = CPP-COD-VCAM IN CPP-FLD ) AND
      *        ( CPP-COD-TOPD IN CPP = '*' OR 
      *          CPP-COD-TOPD IN CPP = CPP-COD-TOPD IN CPP-FLD ) AND
      *        ( CPP-COD-AOPD IN CPP = '*' OR
      *          CPP-COD-AOPD IN CPP = CPP-COD-AOPD IN CPP-FLD )
      *         MOVE '00' TO FIO-STAT
      *         GO TO FIN-BUS-KEY-CON.

      *     MOVE FIO-GET-NXT TO FIO-CMND.
      *     GO TO CIC-BUS-KEY-CON.
      * FIN-BUS-KEY-CON.
      *     EXIT.

      * BUS-KEY-MOD SECTION.
      * INI-BUS-KEY-MOD.
      *     MOVE SPACES TO CPP-COD-VCAM IN CPP.
      *     MOVE SPACES TO CPP-COD-TOPD IN CPP.
      *     MOVE SPACES TO CPP-COD-AOPD IN CPP.
      *     MOVE FIO-GET-NLS TO FIO-CMND.
      * CIC-BUS-KEY-MOD.
      *     PERFORM DAP-FIO-CPP.
      *     IF NOT ( FIO-STAT-OKS )
      *         MOVE '23' TO FIO-STAT
      *         GO TO FIN-BUS-KEY-MOD.
           
      *     IF CPP-COD-VCAM IN CPP-FLD = CPP-COD-VCAM IN CPP AND
      *        CPP-COD-TOPD IN CPP-FLD = CPP-COD-TOPD IN CPP AND
      *        CPP-COD-AOPD IN CPP-FLD = CPP-COD-AOPD IN CPP 
      *         MOVE '00' TO FIO-STAT
      *         GO TO FIN-BUS-KEY-MOD.
      *     
      *     MOVE FIO-GET-NXT TO FIO-CMND.
      *     GO TO CIC-BUS-KEY-MOD.
      * FIN-BUS-KEY-MOD.
      *     EXIT.
      *OGB-INI 31-MAY-2018 CONSULTA Y ELIMINACION MASIVA DE CPP
        
       CON-MASIVA-CPP SECTION.
       INI-CON-MASIVA-CPP.
           MOVE ZEROES TO WSS-X.
           
           PERFORM CARGA-TAB-CPP.
           
           MOVE ZEROES TO WSS-Z.
       LUP-LEE-MVT.
           ADD WSS-1 TO WSS-Z.
           IF WSS-COD-MVTO(WSS-Z) NOT > SPACES
              GO TO FIN-CON-MASIVA-CPP.
              
           
           MOVE SPACES                  TO CPP.
           MOVE WSS-COD-MVTO(WSS-Z)     TO CPP-COD-MVTO IN CPP.
           MOVE CPP-COD-VCAM IN CPP-FLD TO CPP-COD-VCAM IN CPP.
           MOVE CPP-COD-TOPD IN CPP-FLD TO CPP-COD-TOPD IN CPP.
           MOVE CPP-COD-AOPD IN CPP-FLD TO CPP-COD-AOPD IN CPP.
           MOVE SPACES                  TO CPP-COD-SCTB IN CPP.
           MOVE FIO-GET-NLS TO FIO-CMND.
       LUP-LEE-CPP.
           PERFORM DAP-FIO-CPP.
           IF NOT ( FIO-STAT-OKS                                  AND 
                    CPP-COD-MVTO IN CPP = WSS-COD-MVTO(WSS-Z)     AND
                    CPP-COD-VCAM IN CPP = CPP-COD-VCAM IN CPP-FLD AND
                    CPP-COD-TOPD IN CPP = CPP-COD-TOPD IN CPP-FLD AND
                    CPP-COD-AOPD IN CPP = CPP-COD-AOPD IN CPP-FLD )
              GO TO NXT-LEE-MVT.

           ADD WSS-1 TO WSS-X.

           IF SCR-CMND = WSS-ELM
              GO TO FIN-CON-MASIVA-CPP.

           IF WSS-X > CPP-TS-OCC-MAXO
              GO TO FIN-CON-MASIVA-CPP.
           
           PERFORM MOV-CPP-ITEM.
           PERFORM PUT-CPP-QUE.
           
       NXT-LEE-CPP.
           MOVE FIO-GET-NXT   TO FIO-CMND.
           GO TO LUP-LEE-CPP.
       
       NXT-LEE-MVT.
           MOVE FIO-GET-NXT   TO FIO-CMND.
           GO TO LUP-LEE-MVT.
           
           
       FIN-CON-MASIVA-CPP.
           EXIT.
      *----------------------------------------------------
       CARGA-TAB-CPP SECTION.
       INI-CARGA-TAB-CPP.
           MOVE ZEROES TO WSS-Z.       
      *LEE DAP-TAB-MVT
           MOVE 'DAP'                    TO TAB-COD-SIST FIO-SIST.
           MOVE 'MVT'                    TO TAB-COD-TTAB IN TAB.
           MOVE SPACES                   TO TAB-COD-CTAB IN TAB.
           MOVE FIO-GET-NLS TO FIO-CMND.
       LUP-CARGA-TAB-CPP.
           PERFORM GNS-FIO-TAB.
           IF NOT (FIO-STAT-OKS AND TAB-IND-VIGE IN TAB = WSS-S)
              GO TO NXT-CARGA-TAB-CPP.
           
           IF TAB-COD-CTAB IN TAB NOT > SPACES
              GO TO NXT-CARGA-TAB-CPP.
       
           IF TAB-COD-TTAB IN TAB NOT = WSS-MVT
              GO TO FIN-CARGA-TAB-CPP.
           
           ADD WSS-1 TO WSS-Z.
           MOVE TAB-COD-CTAB IN TAB TO WSS-COD-MVTO(WSS-Z).    
       
       
       NXT-CARGA-TAB-CPP.
           MOVE FIO-GET-NXT TO FIO-CMND.
           GO TO LUP-CARGA-TAB-CPP.
       
       FIN-CARGA-TAB-CPP.
           EXIT.
      *----------------------------------------------------
       MOV-CPP-ITEM SECTION.
       INI-MOV-CPP-ITEM.    
           MOVE CPP-COD-VCAM IN CPP TO TS-TP-872-CPP-COD-VCAM.
           MOVE CPP-COD-TOPD IN CPP TO TS-TP-872-CPP-COD-TOPD.
                                    
           IF CPP-COD-VCAM IN CPP > SPACES
               MOVE 'TAB' TO TAB-COD-SIST
               MOVE 'VLR' TO TAB-COD-TTAB IN TAB
               MOVE CPP-COD-VCAM IN CPP TO TAB-COD-CTAB IN TAB
               PERFORM BUS-TAB
               MOVE TAB-GLS-DESC IN TAB TO
                    TS-TP-872-FRM-GLS-VCAM
           ELSE
               MOVE SPACES TO TS-TP-872-FRM-GLS-VCAM.
           
           IF CPP-COD-TOPD IN CPP > SPACES
               MOVE 'TAB' TO TAB-COD-SIST
               MOVE 'TIO' TO TAB-COD-TTAB IN TAB
               MOVE CPP-COD-TOPD IN CPP TO TAB-COD-CTAB IN TAB
               PERFORM BUS-TAB
               MOVE TAB-GLS-DESC IN TAB TO
                    TS-TP-872-FRM-GLS-TOPD
           ELSE
               MOVE SPACES TO TS-TP-872-FRM-GLS-TOPD.

           MOVE CPP-COD-AOPD IN CPP TO TS-TP-872-CPP-COD-AOPD.
           MOVE CPP-COD-MVTO IN CPP TO TS-TP-872-CPP-COD-MVTO.
           MOVE CPP-COD-COPD IN CPP TO TAB-COD-CTAB IN TAB.
           MOVE 'TAB' TO TAB-COD-SIST.
           MOVE 'AUX' TO TAB-COD-TTAB IN TAB.
           PERFORM BUS-TAB.
           MOVE TAB-GLS-DESC IN TAB TO TS-TP-872-FRM-GLS-AOPD.
           
           IF CPP-COD-MVTO IN CPP > SPACES
               MOVE 'DAP' TO TAB-COD-SIST
               MOVE 'MVT' TO TAB-COD-TTAB IN TAB
               MOVE CPP-COD-MVTO IN CPP TO TAB-COD-CTAB IN TAB
               PERFORM BUS-TAB
               MOVE TAB-GLS-DESC IN TAB TO
                    TS-TP-872-FRM-GLS-MVTO
           ELSE
               MOVE SPACES TO TS-TP-872-FRM-GLS-MVTO.
           
           MOVE CPP-NUM-DTRN IN CPP TO TS-TP-872-CPP-NUM-DTRN.
           MOVE CPP-NUM-MTRN IN CPP TO TS-TP-872-CPP-NUM-MTRN.
           MOVE CPP-NUM-STRN IN CPP TO TS-TP-872-CPP-NUM-STRN.
           MOVE CPP-NUM-ATRN IN CPP TO TS-TP-872-CPP-NUM-ATRN.
           MOVE CPP-COD-SCTB IN CPP TO TS-TP-872-CPP-COD-SCTB.
           MOVE SPACES              TO TS-TP-872-FRM-GLS-SCTB.
           
           MOVE CPP-COD-TCCT IN CPP(1) TO TS-TP-872-CPP-COD-TCCT-IDX(1)
           MOVE CPP-COD-TCCT IN CPP(2) TO TS-TP-872-CPP-COD-TCCT-IDX(2)
           MOVE CPP-COD-TCCT IN CPP(3) TO TS-TP-872-CPP-COD-TCCT-IDX(3)
           MOVE CPP-COD-TCCT IN CPP(4) TO TS-TP-872-CPP-COD-TCCT-IDX(4)
           MOVE CPP-COD-TCCT IN CPP(5) TO TS-TP-872-CPP-COD-TCCT-IDX(5)
           MOVE CPP-COD-TCCT IN CPP(6) TO TS-TP-872-CPP-COD-TCCT-IDX(6)
           MOVE CPP-COD-TCCT IN CPP(7) TO TS-TP-872-CPP-COD-TCCT-IDX(7)
           MOVE CPP-COD-TCCT IN CPP(8) TO TS-TP-872-CPP-COD-TCCT-IDX(8)
           MOVE CPP-COD-TCCT IN CPP(9) TO TS-TP-872-CPP-COD-TCCT-IDX(9).
           MOVE CPP-COD-TCCT IN CPP(10) TO 
                                         TS-TP-872-CPP-COD-TCCT-IDX(10).
           MOVE CPP-COD-TCCT IN CPP(11) TO 
                                         TS-TP-872-CPP-COD-TCCT-IDX(11).
           MOVE CPP-COD-TCCT IN CPP(12) TO 
                                         TS-TP-872-CPP-COD-TCCT-IDX(12).
           MOVE CPP-COD-TCCT IN CPP(13) TO 
                                         TS-TP-872-CPP-COD-TCCT-IDX(13).
           MOVE CPP-COD-TCCT IN CPP(14) TO 
                                         TS-TP-872-CPP-COD-TCCT-IDX(14).
           MOVE CPP-COD-TCCT IN CPP(15) TO 
                                         TS-TP-872-CPP-COD-TCCT-IDX(15).
           MOVE CPP-COD-TCCT IN CPP(16) TO 
                                         TS-TP-872-CPP-COD-TCCT-IDX(16).
           MOVE CPP-COD-TCCT IN CPP(17) TO 
                                         TS-TP-872-CPP-COD-TCCT-IDX(17).
           MOVE CPP-COD-TCCT IN CPP(18) TO 
                                         TS-TP-872-CPP-COD-TCCT-IDX(18).
           MOVE CPP-COD-TCCT IN CPP(19) TO 
                                         TS-TP-872-CPP-COD-TCCT-IDX(19).
           MOVE CPP-COD-TCCT IN CPP(20) TO 
                                         TS-TP-872-CPP-COD-TCCT-IDX(20).

       FIN-MOV-CPP-ITEM.
           EXIT.
      *----------------------------------------------------
       PUT-CPP-QUE SECTION.
       INI-PUT-CPP-QUE.      
           
           MOVE CPP-TS-OCC-COLA            TO QUE-COLA.
           MOVE CPP-TS-OCC-LENG            TO QUE-LITM.
           MOVE WSS-X                      TO QUE-NITM.
           MOVE SPACES                     TO QUE-ITEM.
           MOVE CPP-TS-OCC-ITEM            TO QUE-ITEM.
           MOVE QUE-PUT                    TO QUE-CMND.
           PERFORM GNS-PRO-QUE.
           
       FIN-PUT-CPP-QUE.
           EXIT.
      *----------------------------------------------------
       ELI-MASIVA-CPP SECTION.
       INI-ELI-MASIVA-CPP.
           MOVE ZEROES TO WSS-X.
           PERFORM CARGA-TAB-CPP.
           MOVE ZEROES TO WSS-Z.
           
       LUP-ELI-LEE-MVT.
           ADD WSS-1 TO WSS-Z.
           IF WSS-COD-MVTO(WSS-Z) NOT > SPACES
              GO TO FIN-ELI-MASIVA-CPP.
                         
           MOVE SPACES                  TO CPP.
           MOVE WSS-COD-MVTO(WSS-Z)     TO CPP-COD-MVTO IN CPP.
           MOVE CPP-COD-VCAM IN CPP-FLD TO CPP-COD-VCAM IN CPP.
           MOVE CPP-COD-TOPD IN CPP-FLD TO CPP-COD-TOPD IN CPP.
           MOVE CPP-COD-AOPD IN CPP-FLD TO CPP-COD-AOPD IN CPP.
           MOVE SPACES                  TO CPP-COD-SCTB IN CPP.
           MOVE FIO-GET-NLS TO FIO-CMND.
       LUP-ELI-LEE-CPP.
           PERFORM DAP-FIO-CPP.
           IF NOT ( FIO-STAT-OKS                                  AND 
                    CPP-COD-MVTO IN CPP = WSS-COD-MVTO(WSS-Z)     AND
                    CPP-COD-VCAM IN CPP = CPP-COD-VCAM IN CPP-FLD AND
                    CPP-COD-TOPD IN CPP = CPP-COD-TOPD IN CPP-FLD AND
                    CPP-COD-AOPD IN CPP = CPP-COD-AOPD IN CPP-FLD )
              MOVE ZEROES TO FIO-STAT
              GO TO NXT-ELI-LEE-MVT.
           
           MOVE FIO-GET-KEY-UPD TO FIO-CMND.
           PERFORM DAP-FIO-CPP.
           IF FIO-STAT-OKS
              MOVE FIO-DEL TO FIO-CMND
              PERFORM DAP-FIO-CPP.
            
       NXT-ELI-LEE-CPP.
           MOVE FIO-GET-NXT   TO FIO-CMND.
           GO TO LUP-ELI-LEE-CPP.
       
       NXT-ELI-LEE-MVT.
           MOVE FIO-GET-NXT   TO FIO-CMND.
           GO TO LUP-ELI-LEE-MVT.
           
       FIN-ELI-MASIVA-CPP.
           EXIT.
      *OGB-FIN 31-MAY-2018 CONSULTA Y ELIMINACION MASIVA DE CPP
      *>>>> END EOF
