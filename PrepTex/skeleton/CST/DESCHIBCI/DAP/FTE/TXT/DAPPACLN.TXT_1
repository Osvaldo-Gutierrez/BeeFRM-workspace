*%! Codigo adicional para programa CLN
*% IF SETTAG
*% FNCPQ = "090815"
*% VSNPQ = "09.10.21"
*% FNCPU = "090815"
*% VSNPU = "09.10.21"
*% END
*% NO_HDR_CST = TRUE
*% PGM_PTC = TRUE
*%
*%! IF PGM_PQ
*%!  FRM = "CLN"
*%!  PADRE = "LND"
*%!  KEY_PADRE = "LND-KEY-FLND"
*%!  LARGO_KEY_PADRE = 20
*%!  FIO_PADRE = "DAP-FIO-LND"
*%!  SIST_PADRE = "DAP"
*%!  KEY_BROWSE_PADRE = "LND-KEY-FLND"
*%!
*%!  ACEPTE_PF7 = TRUE
*%!  ACEPTE_PF8 = TRUE
*%! INCLUDE 'GNSSRC:PFSCONENT.SRC'
*%!
*%!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
*%! END
*% IF WSS
      *<<<< WSS
       77  WSS-LEE-DBC-DESDE-LND  VALUE 'N'   PIC X(01).
       77  WSS-CIC-ICLI    VALUE SPACES PIC X(12).
       77  WSS-YA-LEI-REG-2 VALUE 'N' PIC X(01).
       77  WSS-COMPARA      VALUE 'N' PIC X(01).
      *          03 FRM-CPIM.
      * AEY = Protegido, normal
      *             05 FRM-CPIM-AEY         PIC X(01) VALUE '1'.
      * UBY = Desprotegido, brillante
      *             05 FRM-CPIM-UBY         PIC X(01) VALUE 'I'.
      * ANY = Protegido, non-display
      *             05 FRM-CPIM-ANY         PIC X(01) VALUE '_'.
      * UNY = Desprotegido, non-display
      *             05 FRM-CPIM-UNY         PIC X(01) VALUE '('.
      * ANY = Protegido, normal
      *             05 FRM-CPSF-AEY         PIC X(01) VALUE '-'.
      * ABY = Protegido, brillante
      *             05 FRM-CPIM-ABY         PIC X(01) VALUE '9'.
      * UST = Virtual para BMS, pues es campo STOPPER en UNISYS
      *             05 FRM-CPIM-UST         PIC X(01) VALUE SPACES.
       COPY DAPBROPD.
       COPY DAPBROPD REPLACING OPD BY OPD-CPR.
      *COPY DAPBROPD REPLACING ==01  OPD== BY ==01  OPD-CPR==.
       COPY DAPBRRCC.
       COPY SGCBRDBC.
       COPY GNSWGCPT.
       COPY GNSWGSTR.
       COPY DAPWXCLN.
       01 WSS-VAR-TAB.
          03 WSS-TAB-CTAB-03           VALUES SPACES  PIC X(03).
          03 WSS-COD-CTAB.
             05 WSS-TAB-CTAB           VALUE SPACES   PIC X(03).
             05 WSS-NUM-CTAB           VALUE ZEROES   PIC 9(02).
             05 WSS-FIL-CTAB           VALUE SPACES   PIC X(07).
             05 WSS-LUP-CLND           VALUE 'S'      PIC X(01).
             05 WSS-CLN-CLND           VALUE 'N'      PIC X(01).
             05 WSS-IDX                VALUE 1        PIC 9(02).
             05 WSV-COD-CMND                          PIC X(03).
             05 WSV-COD-OTRN                          PIC X(04).
             05 WSV-NUM-CORR     OCCURS 12 TIMES.
                07 WSV-GLS-CFLA                       PIC X(20).
                07 WSV-GLS-CFLD                       PIC X(20).
      
      * Variable para llenado de Log.
             05 WSS-QUE-CLND                          PIC 9(03).
      *>>>>
*% END
*% IF WSS_DTC
      *<<<< WSS_DTC
      *Entidades de SGC
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-OPD-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-RCC-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-DBC-REQA==.
      *
       01   VAR-PROGRAMA.
            03 PGM-COD-CREB              VALUE ' '       PIC X(03).
            03 PGM-STAT-RCC.
               88 PGM-STAT-RCC-NUL       VALUE '  '.
               07 PGM-STT1-RCC           VALUE '2'       PIC X(01).
                  88 PGM-STAT-RCC-OKS    VALUE '0'.
               07 PGM-STT2-RCC           VALUE '3'       PIC X(01).
      *>>>>
*% END
*% IF INI_FIO_IBM
      *<<<< INI_FIO
           MOVE TSK-TERM-ALF TO CLN-COD-TERM.
           PERFORM GET-FHOY.
           IF SCR-INST = 'GAB' AND
              ( FRM-FFLD = FRM-FFLD-PF8 OR
                FRM-FFLD = FRM-FFLD-PF7 )
                  MOVE 'GKY' TO SCR-INST.
      *>>>> INI_FIO_IBM
*% END
*% IF FND_KEY_CMND
      *<<<< FND_KEY_CMND
           IF FRM-COD-CREB IN CLN-FLD = 'OPE' OR
              FRM-COD-CREB IN CLN-FLD = 'CLI'
               MOVE 'N' TO WSS-LEE-DBC-DESDE-LND
               PERFORM OBTENER-NOMBRE-DBC.
           PERFORM SET-KEY-LND.
      
           MOVE FIO-GET-NLS TO FIO-CMND.
      *>>>> FND_KEY_CMND
*% END
*% IF FIN_SCR_ACC
      *<<<< FIN_SCR_ACC
           IF FRM-FFLD = FRM-FFLD-PF12
              PERFORM SCR-CLRA-CLN
              PERFORM EDT-KEY-CLN
              PERFORM EDT-FLD-CLN.
      *>>>> FIN_SCR_ACC
*% END
*% IF INI_SCR_DMSG
*% IF PGM_PQ
      *<<<< INI_SCR_DMSG
      * Con este codigo logramos que una vez terminada la consulta
      * las claves no se borren de la pantalla
           IF SCR-CMND = 'CON' AND
              SCR-INST = SCR-INST-GKY AND
              FRM-FFLD NOT = FRM-FFLD-RET
                  MOVE PGM-NO-LIMPIAR-NADA TO PGM-ICLR.
      *>>>> INI_SCR_DMSG
*% END
*% END
*% IF FIN_FND_KEY
      *<<<< FIN_FND_KEY
       LUP-FND-KEY.
           IF NOT FIO-STAT-OKS
              MOVE 'S' TO WSS-LUP-CLND
              GO TO FIN-FND-KEY.
      
           IF FIO-STAT-OKS
               IF LND-COD-ENTF IN LND NOT = 'OPD'
                  MOVE '23'    TO FIO-STAT
                  MOVE 'S' TO WSS-LUP-CLND
                  GO TO FIN-FND-KEY.
      
           IF NOT (FRM-COD-CREB IN CLN-FLD = 'OPE' OR
                   FRM-COD-CREB IN CLN-FLD = 'CLI')
                    MOVE 'S' TO WSS-LEE-DBC-DESDE-LND
                    PERFORM OBTENER-NOMBRE-DBC.
      
           MOVE LND-CIC-ICLI IN LND TO WSS-CIC-ICLI.
           IF FRM-COD-CREB IN CLN-FLD = 'OPE'
               IF LND-CAI-IOPD IN CLN-FLD NOT = LND-CAI-IOPD IN LND OR
                  LND-IIC-IOPD IN CLN-FLD NOT = LND-IIC-IOPD IN LND
                    MOVE PGM-NO-LIMPIAR-NADA TO PGM-ICLR
                    MOVE '23' TO FIO-STAT
                    MOVE '23' TO PGM-STAT-LND
                    MOVE 'CLNNONXTOIPE' TO MSG-COD-MENS
                    MOVE 'DAP' TO MSG-COD-SIST
                    PERFORM GET-MSG
                    MOVE MSG-GLS-DESC TO FRM-MENS
                    MOVE 'S' TO WSS-LUP-CLND
                    GO TO FIN-FND-KEY.
      
           IF FRM-COD-CREB IN CLN-FLD = 'AUT'
               IF LND-COD-AUTO IN CLN-FLD NOT = LND-COD-AUTO IN LND
                    MOVE PGM-NO-LIMPIAR-NADA TO PGM-ICLR
                    MOVE '23' TO FIO-STAT
                    MOVE '23' TO PGM-STAT-LND
                    MOVE '23' TO PGM-STAT-DBC
                    MOVE 'CLNNONXTOAUT' TO MSG-COD-MENS
                    MOVE 'DAP' TO MSG-COD-SIST
                    PERFORM GET-MSG
                    MOVE MSG-GLS-DESC TO FRM-MENS
                    MOVE 'S' TO WSS-LUP-CLND
                    GO TO FIN-FND-KEY.
      
           IF FRM-COD-CREB IN CLN-FLD = 'CLI'
               IF LND-CIC-ICLI IN LND NOT = DBC-CIC-ICLI IN DBC
                    MOVE PGM-NO-LIMPIAR-NADA TO PGM-ICLR
                    MOVE '23' TO FIO-STAT
                    MOVE '23' TO PGM-STAT-LND
                    MOVE 'CLNNONXTOCLI' TO MSG-COD-MENS
                    MOVE 'DAP' TO MSG-COD-SIST
                    PERFORM GET-MSG
                    MOVE MSG-GLS-DESC TO FRM-MENS
                    MOVE 'S' TO WSS-LUP-CLND
                    GO TO FIN-FND-KEY.
      
           IF NOT FIO-STAT-OKS
              MOVE 'S' TO WSS-LUP-CLND
              GO TO FIN-FND-KEY.
      
           PERFORM PUT-OCC-CLN.
           IF NOT (FRM-FFLD = FRM-FFLD-PF7 OR
                   FRM-FFLD = FRM-FFLD-PF8)
              PERFORM LEE-OTR-CLND.
      
           IF SCR-CMND = 'CON'
              IF FRM-FFLD = FRM-FFLD-PF8
                    PERFORM SET-KEY-LND
                    PERFORM PRO-PF8
              ELSE
                 IF FRM-FFLD = FRM-FFLD-PF7
                    PERFORM SET-KEY-LND
                    PERFORM PRO-PF7.
      
           IF FRM-FFLD = FRM-FFLD-PF7 OR
              FRM-FFLD = FRM-FFLD-PF8
               MOVE 'S' TO WSS-LEE-DBC-DESDE-LND
               PERFORM OBTENER-NOMBRE-DBC.
      
      *     IF FIO-STAT-OKS
      *         IF LND-COD-ENTF IN LND = 'OPD'
      *             MOVE '00'   TO FIO-STAT
      *             MOVE LND-COD-CONT IN LND TO OPD
      *             MOVE '00'   TO PGM-STAT-OPD.
      *>>>> FIN_FND_KEY
*% END
*% IF FIN_PUT_SCR
      *<<<< FIN_PUT_SCR
           IF PGM-STAT-LND-OKS OR
              WSS-CLN-CLND = 'S'
              PERFORM PUT-GLS-CLN
              PERFORM PUT-OCC-CLN
              PERFORM PUT-QUE-ALL-CLN
              MOVE 'N' TO WSS-CLN-CLND.
      *>>>> FIN_PUT_SCR
*% END
*% IF FIN_SCR_TRL
      *<<<< FIN_SCR_TRL
      
           IF PGM-STAT-LND-OKS
               MOVE 'CLNPF7PF8 ' TO MSG-COD-MENS
               MOVE 'GNS' TO MSG-COD-SIST
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MEN2.
      
      *>>>> FIN_SCR_TRL
*% END
*% IF PFS_SCR_GKEY_PREV
      *<<<< PFS_SCR_GKEY_PREV
           IF NOT ( FRM-FFLD = FRM-FFLD-PF7 )
           IF NOT ( FRM-FFLD = FRM-FFLD-PF8 )
      *>>>> PFS_SCR_GKEY_PREV
*% END
*% IF PFS_GET_CON
      *<<<< PFS_GET_CON
           IF NOT ( FRM-FFLD = FRM-FFLD-PF7 )
           IF NOT ( FRM-FFLD = FRM-FFLD-PF8 )
      *>>>> PFS_GET_CON
*% END
*% IF POST_SCR_PUTA
      *<<<< POST_SCR_PUTA
       FIN-AT-DES.
      
           MOVE CLN-FLD TO FRM-DFLD.
           PERFORM GET-OCC-CLN.
      
      *>>>> POST_SCR_PUTA
*% END
*% IF EOF
      *<<<< EOF
       LEE-OTR-CLND SECTION.
       INI-LEE-OTR-CLND.
           MOVE 'N' TO WSS-CLN-CLND.
           IF WSS-LUP-CLND = 'S'
              PERFORM CLN-OCC-CLN.
           PERFORM PUT-OCC-CLN.
           IF LND-COD-INST = 'ANT'
              PERFORM SET-KEY-LND
              MOVE FIO-GET-NXT TO FIO-CMND
              PERFORM DAP-FIO-LND
              IF FIO-STAT-OKS
                 PERFORM PUT-OCC-CLN
                 MOVE 'N' TO WSS-LUP-CLND
                 GO TO FIN-LEE-OTR-CLND.
      
           IF LND-COD-INST = 'DES'
              PERFORM SET-KEY-LND
              MOVE FIO-GET-PRV TO FIO-CMND
              PERFORM DAP-FIO-LND
              IF FIO-STAT-OKS
                 PERFORM PUT-OCC-CLN
                 MOVE 'N' TO WSS-LUP-CLND
                 GO TO FIN-LEE-OTR-CLND.
       FIN-LEE-OTR-CLND.
           EXIT.
      
       SET-KEY-LND SECTION.
       INI-SET-KEY-LND.
           MOVE 'OPD' TO LND-COD-ENTF IN LND
                         LND-COD-ENTC IN LND
                         LND-COD-ENTA IN LND
                         LND-COD-ENTI IN LND.
      
           IF FRM-COD-CREB IN CLN-FLD = 'OPE'
      *         MOVE 'LND-KEY-OCLN' TO FIO-AKEY
              MOVE 'LND-KEY-OLND' TO FIO-AKEY
           ELSE
           IF FRM-COD-CREB IN CLN-FLD = 'CLI'
              MOVE 'LND-KEY-CLND' TO FIO-AKEY
           ELSE
           IF FRM-COD-CREB IN CLN-FLD = 'AUT'
              MOVE 'LND-KEY-ALND' TO FIO-AKEY.
       FIN-SET-KEY-LND.
           EXIT.
      
       OBTENER-NOMBRE-DBC  SECTION.
      *----------------------------
       INI-OBTENER-NOMBRE-DBC.
      
           IF WSS-LEE-DBC-DESDE-LND = 'S'
               MOVE LND-CIC-ICLI IN LND TO DBC-CIC-ICLI IN DBC.
      
           IF FRM-COD-CREB IN CLN-FLD = 'AUT' AND
              LND-COD-AUTO IN CLN-FLD = SPACES
              GO TO FIN-OBTENER-NOMBRE-DBC.
      
           IF FRM-COD-CREB IN CLN-FLD = 'OPE' AND
              NOT PGM-STAT-DBC-OKS
                MOVE LND-CIC-IOPD IN LND TO RCC-CIC-IOPD IN RCC
                PERFORM GET-CUR-RCC
                IF PGM-STAT-RCC-OKS AND
                   LND-CIC-IOPD IN LND  =  RCC-CIC-IOPD IN RCC
                     MOVE RCC-CIC-ICLI IN RCC TO DBC-CIC-ICLI IN DBC
                ELSE
                   MOVE '23'      TO FIO-STAT
                   MOVE '23'      TO PGM-STAT-DBC
                   GO TO FIN-OBTENER-NOMBRE-DBC.
      
           IF FRM-COD-CREB IN CLN-FLD = 'CLI' AND
              NOT PGM-STAT-DBC-OKS
                MOVE 'DBC-IDC-ICLI' TO FIO-AKEY.
      
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM SGC-FIO-DBC.
           MOVE FIO-STAT TO PGM-STAT-DBC.
      
           IF FIO-STAT-OKS
      *  ISP INI 27-04-2009
                MOVE DBC-CIC-ICLI IN DBC TO
                     LND-CIC-ICLI IN LND
      *  FIN INI 27-04-2009
                PERFORM CPT-NOMB.
       FIN-OBTENER-NOMBRE-DBC.
           EXIT.
      *
       GET-CUR-RCC SECTION.
      *--------------------
       INI-GET-CUR-RCC.
           MOVE   'RCC-KEY-IOPD'           TO FIO-AKEY.
           MOVE    FIO-GET-NLS             TO FIO-CMND.
           PERFORM DAP-FIO-RCC.
           IF NOT (FIO-STAT-OKS     AND
                  LND-CIC-IOPD IN LND   = RCC-CIC-IOPD IN RCC )
                  MOVE '23' TO FIO-STAT.
           MOVE   FIO-STAT  TO PGM-STAT-RCC.
       FIN-GET-CUR-RCC.
           EXIT.
      
      
       COPY GNSBBTAB.
       COPY DAPBFOPD.
       COPY DAPBFRCC.
       COPY SGCBFDBC.
       COPY GNSBGCPT.
       COPY GNSBGSTR.
       CPT-NOMB SECTION.
       INI-CPT-NOMB.
           MOVE DBC-GLS-NOMC IN DBC TO CPT-STRN.
           PERFORM CPT-BLKS.
           MOVE CPT-STRN            TO DBC-GLS-NOMC IN DBC.
       FIN-CPT-NOMB.
           EXIT.
      
       PRO-PF7 SECTION.
       INI-PRO-PF7.
           PERFORM SET-KEY-LND.
           MOVE FIO-GET-PRV TO FIO-CMND.
           PERFORM DAP-FIO-LND.
           MOVE FIO-STAT TO PGM-STAT-LND.
           IF NOT FIO-STAT-OKS OR
             (FIO-STAT-OKS AND
             (FRM-COD-CREB IN CLN-FLD = 'OPE' AND
             (LND-CAI-IOPD IN CLN-FLD NOT = LND-CAI-IOPD IN LND OR
              LND-IIC-IOPD IN CLN-FLD NOT = LND-IIC-IOPD IN LND))) OR
             (FIO-STAT-OKS AND
             (FRM-COD-CREB IN CLN-FLD = 'AUT' AND
             (LND-COD-AUTO IN CLN-FLD NOT = LND-COD-AUTO IN LND))) OR
             (FIO-STAT-OKS AND
             (FRM-COD-CREB IN CLN-FLD = 'CLI' AND
             (LND-CIC-ICLI IN LND NOT = WSS-CIC-ICLI)))
              IF FIO-STAT-OKS
                 PERFORM SET-KEY-LND
                 MOVE FIO-GET-NXT TO FIO-CMND
                 PERFORM DAP-FIO-LND
              END-IF
              GO TO ERR-PRO-PF7.
           IF LND-COD-INST = 'ANT'
              PERFORM SET-KEY-LND
              MOVE FIO-GET-PRV TO FIO-CMND
              PERFORM DAP-FIO-LND
              MOVE FIO-STAT TO PGM-STAT-LND
              IF NOT FIO-STAT-OKS OR
                (FIO-STAT-OKS AND
                (FRM-COD-CREB IN CLN-FLD = 'OPE' AND
                (LND-CAI-IOPD IN CLN-FLD NOT = LND-CAI-IOPD IN LND OR
                 LND-IIC-IOPD IN CLN-FLD NOT = LND-IIC-IOPD IN LND))) OR
                (FIO-STAT-OKS AND
                (FRM-COD-CREB IN CLN-FLD = 'AUT' AND
                (LND-COD-AUTO IN CLN-FLD NOT = LND-COD-AUTO IN LND))) OR
                (FIO-STAT-OKS AND
                (FRM-COD-CREB IN CLN-FLD = 'CLI' AND
                (LND-CIC-ICLI IN LND NOT = WSS-CIC-ICLI)))
                 IF FIO-STAT-OKS
                    PERFORM SET-KEY-LND
                    MOVE FIO-GET-NXT TO FIO-CMND
                    PERFORM DAP-FIO-LND
                 END-IF
                 GO TO ERR-PRO-PF7
              END-IF
              IF LND-COD-INST = 'N/A'
                 PERFORM PUT-OCC-CLN
              ELSE
                 IF LND-COD-INST = 'DES'
                    PERFORM SET-KEY-LND
                    MOVE FIO-GET-PRV TO FIO-CMND
                    PERFORM DAP-FIO-LND
                    MOVE FIO-STAT TO PGM-STAT-LND
                    IF LND-COD-INST = 'ANT'
                       PERFORM PRO-CLN
                 ELSE
                    PERFORM SET-KEY-LND
                    MOVE FIO-GET-NXT TO FIO-CMND
                    PERFORM DAP-FIO-LND
                    MOVE FIO-STAT TO PGM-STAT-LND
                    GO TO FIN-PRO-PF7
           ELSE
              IF LND-COD-INST = 'N/A'
                 PERFORM PUT-OCC-CLN
              ELSE
                 IF LND-COD-INST = 'DES'
                    PERFORM SET-KEY-LND
                    MOVE FIO-GET-PRV TO FIO-CMND
                    PERFORM DAP-FIO-LND
                    MOVE FIO-STAT TO PGM-STAT-LND
                    IF LND-COD-INST = 'ANT'
                       PERFORM PRO-CLN
                 ELSE
                    PERFORM SET-KEY-LND
                    MOVE FIO-GET-NXT TO FIO-CMND
                    PERFORM DAP-FIO-LND
                    MOVE FIO-STAT TO PGM-STAT-LND
                    GO TO FIN-PRO-PF7.
           GO TO FIN-PRO-PF7.
       ERR-PRO-PF7.
           MOVE 'S' TO WSS-CLN-CLND.
           PERFORM EDT-FLD-CLN.
           MOVE 'CLNNOPRV' TO MSG-COD-MENS.
           MOVE 'DAP' TO MSG-COD-SIST.
           PERFORM GET-MSG.
           MOVE MSG-GLS-DESC TO FRM-MENS.
       FIN-PRO-PF7.
           EXIT.
      
       PRO-PF8 SECTION.
       INI-PRO-PF8.
           PERFORM SET-KEY-LND.
           MOVE FIO-GET-NXT TO FIO-CMND.
           PERFORM DAP-FIO-LND.
           MOVE FIO-STAT TO PGM-STAT-LND.
           IF NOT FIO-STAT-OKS OR
             (FIO-STAT-OKS AND
             (FRM-COD-CREB IN CLN-FLD = 'OPE' AND
             (LND-CAI-IOPD IN CLN-FLD NOT = LND-CAI-IOPD IN LND OR
              LND-IIC-IOPD IN CLN-FLD NOT = LND-IIC-IOPD IN LND))) OR
             (FIO-STAT-OKS AND
             (FRM-COD-CREB IN CLN-FLD = 'AUT' AND
             (LND-COD-AUTO IN CLN-FLD NOT = LND-COD-AUTO IN LND))) OR
             (FIO-STAT-OKS AND
             (FRM-COD-CREB IN CLN-FLD = 'CLI' AND
             (LND-CIC-ICLI IN LND NOT = WSS-CIC-ICLI)))
              IF FIO-STAT-OKS
                 PERFORM SET-KEY-LND
                 MOVE FIO-GET-PRV TO FIO-CMND
                 PERFORM DAP-FIO-LND
              END-IF
              MOVE 'S' TO WSS-CLN-CLND
              PERFORM EDT-FLD-CLN
              MOVE 'CLNNONXT' TO MSG-COD-MENS
              MOVE 'DAP' TO MSG-COD-SIST
              PERFORM GET-MSG
              MOVE MSG-GLS-DESC TO FRM-MENS
              GO TO FIN-PRO-PF8.
           IF LND-COD-INST = 'N/A'
              PERFORM PUT-OCC-CLN
           ELSE
              IF LND-COD-INST = 'ANT'
                 PERFORM PRO-CLN.
       FIN-PRO-PF8.
           EXIT.
      
       PRO-CLN SECTION.
       INI-PRO-CLN.
           PERFORM PUT-OCC-CLN.
           PERFORM SET-KEY-LND.
           MOVE FIO-GET-NXT TO FIO-CMND.
           PERFORM DAP-FIO-LND.
           IF NOT FIO-STAT-OKS
              PERFORM PUT-OCC-CLN
              MOVE 'S' TO WSS-CLN-CLND
              PERFORM EDT-FLD-CLN
              MOVE 'CLNNONXT' TO MSG-COD-MENS
              MOVE 'DAP' TO MSG-COD-SIST
              PERFORM GET-MSG
              MOVE MSG-GLS-DESC TO FRM-MENS
              GO TO FIN-PRO-CLN.
           IF LND-COD-INST = 'DES'
              PERFORM PUT-OCC-CLN
           ELSE
              PERFORM SET-KEY-LND
              MOVE FIO-GET-PRV TO FIO-CMND
              PERFORM DAP-FIO-LND.
       FIN-PRO-CLN.
           EXIT.
      
       GET-GLS-TAB SECTION.
       INI-GET-GLS-TAB.
           MOVE WSS-NUM-CTAB TO FRM-NUM-CORR IN CLN-FLD(WSS-NUM-CTAB).
           MOVE 'DAP'        TO TAB-COD-SIST FIO-SIST.
           MOVE 'LND'        TO TAB-COD-TTAB IN TAB.
           MOVE LND-COD-EVEN IN LND TO WSS-TAB-CTAB.
           MOVE WSS-COD-CTAB TO TAB-COD-CTAB IN TAB.
           MOVE FIO-GET-KEY  TO FIO-CMND.
           PERFORM GNS-FIO-TAB.
           IF FIO-STAT-OKS
              MOVE TAB-COD-CTAB IN TAB TO WSS-TAB-CTAB-03
              MOVE TAB-GLS-DESC IN TAB TO
                   FRM-GLS-TEXT IN CLN-FLD(WSS-NUM-CTAB).
       FIN-GET-GLS-TAB.
           EXIT.
      
       PUT-GLS-CLN SECTION.
       INI-PUT-GLS-CLN.
           MOVE ZEROES TO WSS-NUM-CTAB.
           PERFORM GET-GLS-TAB UNTIL
                   WSS-TAB-CTAB-03 NOT = LND-COD-EVEN IN LND.
       FIN-PUT-GLS-CLN.
           EXIT.
      
       GET-OCC-CLN SECTION.
       INI-GET-OCC-CLN.
           MOVE LND-COD-CMND IN CLN-FLD TO WSV-COD-CMND.
           MOVE LND-COD-OTRN IN CLN-FLD TO WSV-COD-OTRN.
           MOVE FRM-GLS-CFLA IN CLN-FLD(1) TO WSV-GLS-CFLA(1).
           MOVE FRM-GLS-CFLD IN CLN-FLD(1) TO WSV-GLS-CFLD(1).
           MOVE FRM-GLS-CFLA IN CLN-FLD(2) TO WSV-GLS-CFLA(2).
           MOVE FRM-GLS-CFLD IN CLN-FLD(2) TO WSV-GLS-CFLD(2).
           MOVE FRM-GLS-CFLA IN CLN-FLD(3) TO WSV-GLS-CFLA(3).
           MOVE FRM-GLS-CFLD IN CLN-FLD(3) TO WSV-GLS-CFLD(3).
           MOVE FRM-GLS-CFLA IN CLN-FLD(4) TO WSV-GLS-CFLA(4).
           MOVE FRM-GLS-CFLD IN CLN-FLD(4) TO WSV-GLS-CFLD(4).
           MOVE FRM-GLS-CFLA IN CLN-FLD(5) TO WSV-GLS-CFLA(5).
           MOVE FRM-GLS-CFLD IN CLN-FLD(5) TO WSV-GLS-CFLD(5).
           MOVE FRM-GLS-CFLA IN CLN-FLD(6) TO WSV-GLS-CFLA(6).
           MOVE FRM-GLS-CFLD IN CLN-FLD(6) TO WSV-GLS-CFLD(6).
       FIN-GET-OCC-CLN.
           EXIT.
      
       PUT-OCC-CLN SECTION.
       INI-PUT-OCC-CLN.
           IF WSS-CLN-CLND = 'S'
              MOVE WSV-COD-CMND TO LND-COD-CMND IN CLN-FLD
              MOVE WSV-COD-OTRN TO LND-COD-OTRN IN CLN-FLD
              MOVE WSV-GLS-CFLA(1) TO FRM-GLS-CFLA IN CLN-FLD(1)
              MOVE WSV-GLS-CFLD(1) TO FRM-GLS-CFLD IN CLN-FLD(1)
              MOVE WSV-GLS-CFLA(2) TO FRM-GLS-CFLA IN CLN-FLD(2)
              MOVE WSV-GLS-CFLD(2) TO FRM-GLS-CFLD IN CLN-FLD(2)
              MOVE WSV-GLS-CFLA(3) TO FRM-GLS-CFLA IN CLN-FLD(3)
              MOVE WSV-GLS-CFLD(3) TO FRM-GLS-CFLD IN CLN-FLD(3)
              MOVE WSV-GLS-CFLA(4) TO FRM-GLS-CFLA IN CLN-FLD(4)
              MOVE WSV-GLS-CFLD(4) TO FRM-GLS-CFLD IN CLN-FLD(4)
              MOVE WSV-GLS-CFLA(5) TO FRM-GLS-CFLA IN CLN-FLD(5)
              MOVE WSV-GLS-CFLD(5) TO FRM-GLS-CFLD IN CLN-FLD(5)
              MOVE WSV-GLS-CFLA(6) TO FRM-GLS-CFLA IN CLN-FLD(6)
              MOVE WSV-GLS-CFLD(6) TO FRM-GLS-CFLD IN CLN-FLD(6)
              GO TO FIN-PUT-OCC-CLN.
           IF LND-COD-INST = 'ANT'
              MOVE LND-COD-LN01 IN LND TO FRM-GLS-CFLA IN CLN-FLD(1)
              MOVE LND-COD-LN02 IN LND TO FRM-GLS-CFLA IN CLN-FLD(2)
              MOVE LND-COD-LN03 IN LND TO FRM-GLS-CFLA IN CLN-FLD(3)
              MOVE LND-COD-LN04 IN LND TO FRM-GLS-CFLA IN CLN-FLD(4)
              MOVE LND-COD-LN05 IN LND TO FRM-GLS-CFLA IN CLN-FLD(5)
              MOVE LND-COD-LN06 IN LND TO FRM-GLS-CFLA IN CLN-FLD(6).
           IF LND-COD-INST = 'DES'
              MOVE LND-COD-LN01 IN LND TO FRM-GLS-CFLD IN CLN-FLD(1)
              MOVE LND-COD-LN02 IN LND TO FRM-GLS-CFLD IN CLN-FLD(2)
              MOVE LND-COD-LN03 IN LND TO FRM-GLS-CFLD IN CLN-FLD(3)
              MOVE LND-COD-LN04 IN LND TO FRM-GLS-CFLD IN CLN-FLD(4)
              MOVE LND-COD-LN05 IN LND TO FRM-GLS-CFLD IN CLN-FLD(5)
              MOVE LND-COD-LN06 IN LND TO FRM-GLS-CFLD IN CLN-FLD(6).
       FIN-PUT-OCC-CLN.
           EXIT.
      *>>>> EOF
      
       PUT-QUE-ALL-CLN SECTION.
       INI-PUT-QUE-ALL-CLN.
           MOVE ZEROES TO WSS-J.
           PERFORM PUT-TAB-CLN VARYING WSS-J
                   FROM 1 BY 1 UNTIL WSS-J > 6.
       FIN-PUT-QUE-ALL-CLN.
           EXIT.
      
       PUT-TAB-CLN SECTION.
       INI-PUT-TAB-CLN.
           MOVE FRM-NUM-CORR IN CLN-FLD(WSS-J) TO WSS-NUM-CORR.
           MOVE FRM-GLS-TEXT IN CLN-FLD(WSS-J) TO WSS-GLS-TEXT.
           MOVE FRM-GLS-CFLA IN CLN-FLD(WSS-J) TO WSS-GLS-CFLA.
           MOVE FRM-GLS-CFLD IN CLN-FLD(WSS-J) TO WSS-GLS-CFLD.
           PERFORM PUT-QUE-CLN.
       FIN-PUT-TAB-CLN.
           EXIT.
      
       PUT-QUE-CLN SECTION.
       INI-PUT-QUE-CLN.
           MOVE CLN-LEN-TSCLN        TO QUE-LITM.
           MOVE CLN-NOM-TSCLN        TO QUE-COLA.
           MOVE WSS-GLS-NCLN-IDX-MTI TO QUE-ITEM.
           MOVE QUE-PUT              TO QUE-CMND.
           PERFORM GNS-PRO-QUE.
           MOVE SPACES TO WSS-GLS-NCLN-IDX-MTI.
           MOVE ZEROES TO FRM-IFLD.
       FIN-PUT-QUE-CLN.
           EXIT.
      
       CLN-OCC-CLN SECTION.
       INI-CLN-OCC-CLN.
              MOVE SPACES TO FRM-GLS-CFLA IN CLN-FLD(1).
              MOVE SPACES TO FRM-GLS-CFLA IN CLN-FLD(2).
              MOVE SPACES TO FRM-GLS-CFLA IN CLN-FLD(3).
              MOVE SPACES TO FRM-GLS-CFLA IN CLN-FLD(4).
              MOVE SPACES TO FRM-GLS-CFLA IN CLN-FLD(5).
              MOVE SPACES TO FRM-GLS-CFLA IN CLN-FLD(6).
              MOVE SPACES TO FRM-GLS-CFLD IN CLN-FLD(1).
              MOVE SPACES TO FRM-GLS-CFLD IN CLN-FLD(2).
              MOVE SPACES TO FRM-GLS-CFLD IN CLN-FLD(3).
              MOVE SPACES TO FRM-GLS-CFLD IN CLN-FLD(4).
              MOVE SPACES TO FRM-GLS-CFLD IN CLN-FLD(5).
              MOVE SPACES TO FRM-GLS-CFLD IN CLN-FLD(6).
       FIN-CLN-OCC-CLN.
           EXIT.
      *>>>> EOF
*% END
