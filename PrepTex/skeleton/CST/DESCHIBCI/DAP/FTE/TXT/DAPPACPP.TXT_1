*%! Codigo adicional programa DAPPACPP aceptando '*' en campos llaves
*% NO_HDR_CST = TRUE
*% PGM_PTC = TRUE
*%! INCLUDE 'GNSSRC:MANEJO_VSI.SRC'
*% IF CMT_ID_PQ
      * ACTUALIZA ARCHIVO DAPCPP EN FORMA INTERACTIVA.
      *=============================================================*
      * MANTENCION : BALANCE OPTIMO DAP
      * ETIQUETA   : *OGB-INI 13-ENE-2017 BALANCE OPTIMO DAP
      * OBJETIVO   : LEE PPD Y LA GUARDA EN REGISTRO POD
      * FECHA      : ENERO-2017
      * RESPONSABLE: CIMA-OGB
      *=============================================================*
      * PROYECTO     : ELIMINACION DEPENDENCIA PROD BATCH 
      * MODIFICACION : CONSULTA Y ELIMINACION MASIVA DE CPP
      * FECHA        : MAYO 2018
      * ETIQUETA     : 
      *        *OGB-INI 31-MAY-2018 CONSULTA Y ELIMINACION MASIVA DE CPP
      *=============================================================*  
*% END
*% IF WSS
      *<<<< WSS
       COPY DAPBRPOD.
      *OGB-INI 13-ENE-2017 BALANCE OPTIMO DAP
       COPY DAPWGPPD.
       COPY MC2BRPPD.
       COPY TABWGRCC.

       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-PPD-REQA==.

       COPY DAPWG006.
       COPY DAPBRCPD.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-CPD-REQA==.
       COPY USPC117.
       COPY DAPWGPOD.
      *OGB-FIN 13-ENE-2017 BALANCE OPTIMO DAP
      *OGB-INI 31-MAY-2018 CONSULTA Y ELIMINACION MASIVA DE CPP
       COPY DAPWXCPP.
      *OGB-FIN 31-MAY-2018 CONSULTA Y ELIMINACION MASIVA DE CPP

      *>>>> END 
*% END
*% IF WSS_DTC
      *<<<< WSS_DTC
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-POD-REQA==.
      *OGB-INI 13-ENE-2017 BALANCE OPTIMO DAP
       01  WSS-RUP.
           03 WSS-RUP-PROG                            PIC X(09).
           03 WSS-RUP-PROD                            PIC X(02).
           03 WSS-RUP-FAMI                            PIC X(01).
       01  WSS-IND-BATCH  VALUE 'N'                   PIC X(01).
      *OGB-FIN 13-ENE-2017 BALANCE OPTIMO DAP
      *OGB-INI 31-MAY-2018 CONSULTA Y ELIMINACION MASIVA DE CPP
       01  WSS-VARI.
           03 WSS-X          VALUE ZEROES               PIC 9(03).
           03 WSS-Z          VALUE ZEROES               PIC 9(03).
           03 WSS-VEC-COD-MVTO.
              05 WSS-COD-MVTO   OCCURS 100              PIC X(03).
              
       01  WSS-CONSTANTES.
           03 WSS-COM         VALUE 'COM'               PIC X(03).
           03 WSS-ELM         VALUE 'ELM'               PIC X(03).
           03 WSS-MVT         VALUE 'MVT'               PIC X(03).
           03 WSS-S           VALUE 'S'                 PIC X(01).
           03 WSS-1           VALUE 1                   PIC 9(01).
      *OGB-FIN 31-MAY-2018 CONSULTA Y ELIMINACION MASIVA DE CPP
      *>>>> END 
*% END
*% IF FND_KEY
      *<<<< FND_KEY
      *     IF SCR-CMND = 'CON' OR 'COP' 
      *         PERFORM BUS-KEY-CON
      *         MOVE FIO-STAT TO PGM-STAT-CPP
      *         GO TO FIN-FND-KEY.

      *     IF SCR-CCPP = 'MOD' OR 
      *        SCR-CCPP = 'ELI' 
      *         PERFORM BUS-KEY-MOD
      *         MOVE FIO-STAT TO PGM-STAT-CPP
      *         GO TO FIN-FND-KEY.
      *>>>>
*% END
*% IF FIN_FND_KEY
      *OGB-INI 31-MAY-2018 CONSULTA Y ELIMINACION MASIVA DE CPP
           IF SCR-CMND NOT = WSS-COM AND NOT = WSS-ELM
              GO TO FIN-FND-KEY.
      
           IF SCR-CMND = WSS-COM OR WSS-ELM
              PERFORM CON-MASIVA-CPP
              IF WSS-X > ZEROES
                 MOVE ZEROES       TO FIO-STAT
              ELSE
                 MOVE FIO-STAT-NEX TO FIO-STAT.

           MOVE FIO-STAT TO PGM-STAT-CPP.
      *OGB-FIN 31-MAY-2018 CONSULTA Y ELIMINACION MASIVA DE CPP
*% END
*% IF INI_FIO
      *<<<< INI_FIO
      *OGB-INI 31-MAY-2018 CONSULTA Y ELIMINACION MASIVA DE CPP
           IF SCR-OFRM-SRV
               MOVE TSK-TERM-ALF TO CPP-TS-OCC-TERM
           ELSE
               MOVE EIBTRMID     TO CPP-TS-OCC-TERM.
      *OGB-FIN 31-MAY-2018 CONSULTA Y ELIMINACION MASIVA DE CPP
      *>>>>
*% END
*% IF CMN_ING 
      *<<<< CMN_ING
           PERFORM GET-FHOY.
           MOVE HOY-FHOY TO CPP-FEC-FTRN IN CPP.
           MOVE HOY-HHOY TO CPP-HRA-HRTR IN CPP.

           MOVE 'I' TO CPP-COD-TACC IN CPP.
           MOVE 'I' TO CPP-COD-STAT IN CPP.
           MOVE 'I' TO CPP-COD-OTRN IN CPP.
           MOVE SCR-OTRN TO CPP-COD-OTRN IN CPP.
      *>>>> 
*% END 
*% IF CMN_MOD
      *<<<< CMN_MOD
           PERFORM GET-FHOY.
           MOVE HOY-FHOY TO CPP-FEC-FTRN IN CPP.
           MOVE HOY-HHOY TO CPP-HRA-HRTR IN CPP.
           MOVE 'M' TO CPP-COD-TACC IN CPP.
           MOVE SCR-OTRN TO CPP-COD-OTRN IN CPP.
      *>>>> 
*% END 
*% IF FIN_HBL_FLD
      *<<<< FIN_HBL_FLD
           IF SCR-CMND = 'COP'
               PERFORM UNP-IKY-CPP
               PERFORM FST-KEY-CPP.
      *>>>> END 
*% END
*% IF ABT_CMN_ACC
      *<<<< ABT_CMN_ACC
               IF SCR-CMND = 'COP'
                  MOVE 'REGISTRO NO FUE COPIADO' TO FRM-MENS
                  GO TO FIN-CMN-ACC
               ELSE
      *>>>> END 
*% END
*% IF INI_CMN_ACC
      *<<<< INI_CMN_ACC
           IF SCR-CMND = 'COP'
              PERFORM RET-ALL-CPP
              PERFORM RET-HDR
              MOVE FIO-PUT TO FIO-CMND
              PERFORM DAP-FIO-CPP
              IF FIO-STAT-OKS
                 MOVE 'REGISTRO FUE COPIADO' TO FRM-MENS
              ELSE
                 MOVE 'ERROR : REGISTRO NO COPIADO' TO FRM-MENS
            ELSE
               MOVE 'COMANDO NO IMPLEMENTADO' TO FRM-MENS.  
            GO TO FIN-CMN-ACC.
      *>>>> END 
*% END
*% IF CMN_ING OR CMN_MOD
      *<<<< CMN_ING OR CMN_MOD
           PERFORM RET-HDR.
      *>>>>
*% END
*% IF INI_CMN_ELI
      *<<<< INI_CMN_ELI
      *OGB-INI 31-MAY-2018 CONSULTA Y ELIMINACION MASIVA DE DCC
           IF SCR-CMND = WSS-ELM
              PERFORM KEY-ALL-CPP
              PERFORM ELI-MASIVA-CPP
              GO TO FIN-CMN-ELI.
      *OGB-FIN 31-MAY-2018 CONSULTA Y ELIMINACION MASIVA DE DCC
      *>>>>
*% END
*% IF EOF
      *<<<< EOF
       COPY DAPBFPOD.
       COPY DAPBG001.
      *OGB-INI 13-ENE-2017 BALANCE OPTIMO DAP
       COPY DAPBGPPD.
       COPY TABBKRCC.
       COPY MC2BFPPD.

       COPY DAPBFCPD.

       USPC107 SECTION.
       INI-USPC107.
      *    COPY USPC107.
      *********************************************
      *           MODULO   USPC107                *
      *********************************************
      *     PARRAFO DE LLAMADA RUTINA USDR107     *
      *********************************************
           EXEC CICS LINK PROGRAM('USDR107')
                          COMMAREA (USP-VARIABLES)
                          LENGTH(31)
           END-EXEC.
      *
      *********************************************
      *           FIN   MODULO   USPC107          *
      *********************************************
       FIN-USPC107.
           EXIT.
      *OGB-FIN 13-ENE-2017 BALANCE OPTIMO DAP

      * BUS-KEY-CON SECTION.
      * INI-BUS-KEY-CON.
      *     MOVE SPACES TO CPP-COD-VCAM IN CPP.
      *     MOVE SPACES TO CPP-COD-TOPD IN CPP.
      *     MOVE SPACES TO CPP-COD-AOPD IN CPP.
      *     MOVE FIO-GET-NLS TO FIO-CMND.
      * CIC-BUS-KEY-CON.
      *     PERFORM DAP-FIO-CPP.
      *     IF NOT ( FIO-STAT-OKS )
      *         MOVE '23' TO FIO-STAT
      *         GO TO FIN-BUS-KEY-CON.
           
      *     IF ( CPP-COD-VCAM IN CPP = '*' OR
      *          CPP-COD-VCAM IN CPP = CPP-COD-VCAM IN CPP-FLD ) AND
      *        ( CPP-COD-TOPD IN CPP = '*' OR 
      *          CPP-COD-TOPD IN CPP = CPP-COD-TOPD IN CPP-FLD ) AND
      *        ( CPP-COD-AOPD IN CPP = '*' OR
      *          CPP-COD-AOPD IN CPP = CPP-COD-AOPD IN CPP-FLD )
      *         MOVE '00' TO FIO-STAT
      *         GO TO FIN-BUS-KEY-CON.

      *     MOVE FIO-GET-NXT TO FIO-CMND.
      *     GO TO CIC-BUS-KEY-CON.
      * FIN-BUS-KEY-CON.
      *     EXIT.

      * BUS-KEY-MOD SECTION.
      * INI-BUS-KEY-MOD.
      *     MOVE SPACES TO CPP-COD-VCAM IN CPP.
      *     MOVE SPACES TO CPP-COD-TOPD IN CPP.
      *     MOVE SPACES TO CPP-COD-AOPD IN CPP.
      *     MOVE FIO-GET-NLS TO FIO-CMND.
      * CIC-BUS-KEY-MOD.
      *     PERFORM DAP-FIO-CPP.
      *     IF NOT ( FIO-STAT-OKS )
      *         MOVE '23' TO FIO-STAT
      *         GO TO FIN-BUS-KEY-MOD.
           
      *     IF CPP-COD-VCAM IN CPP-FLD = CPP-COD-VCAM IN CPP AND
      *        CPP-COD-TOPD IN CPP-FLD = CPP-COD-TOPD IN CPP AND
      *        CPP-COD-AOPD IN CPP-FLD = CPP-COD-AOPD IN CPP 
      *         MOVE '00' TO FIO-STAT
      *         GO TO FIN-BUS-KEY-MOD.
      *     
      *     MOVE FIO-GET-NXT TO FIO-CMND.
      *     GO TO CIC-BUS-KEY-MOD.
      * FIN-BUS-KEY-MOD.
      *     EXIT.
      *OGB-INI 31-MAY-2018 CONSULTA Y ELIMINACION MASIVA DE CPP
        
       CON-MASIVA-CPP SECTION.
       INI-CON-MASIVA-CPP.
           MOVE ZEROES TO WSS-X.
           
           PERFORM CARGA-TAB-CPP.
           
           MOVE ZEROES TO WSS-Z.
       LUP-LEE-MVT.
           ADD WSS-1 TO WSS-Z.
           IF WSS-COD-MVTO(WSS-Z) NOT > SPACES
              GO TO FIN-CON-MASIVA-CPP.
              
           
           MOVE SPACES                  TO CPP.
           MOVE WSS-COD-MVTO(WSS-Z)     TO CPP-COD-MVTO IN CPP.
           MOVE CPP-COD-VCAM IN CPP-FLD TO CPP-COD-VCAM IN CPP.
           MOVE CPP-COD-TOPD IN CPP-FLD TO CPP-COD-TOPD IN CPP.
           MOVE CPP-COD-AOPD IN CPP-FLD TO CPP-COD-AOPD IN CPP.
           MOVE SPACES                  TO CPP-COD-SCTB IN CPP.
           MOVE FIO-GET-NLS TO FIO-CMND.
       LUP-LEE-CPP.
           PERFORM DAP-FIO-CPP.
           IF NOT ( FIO-STAT-OKS                                  AND 
                    CPP-COD-MVTO IN CPP = WSS-COD-MVTO(WSS-Z)     AND
                    CPP-COD-VCAM IN CPP = CPP-COD-VCAM IN CPP-FLD AND
                    CPP-COD-TOPD IN CPP = CPP-COD-TOPD IN CPP-FLD AND
                    CPP-COD-AOPD IN CPP = CPP-COD-AOPD IN CPP-FLD )
              GO TO NXT-LEE-MVT.

           ADD WSS-1 TO WSS-X.

           IF SCR-CMND = WSS-ELM
              GO TO FIN-CON-MASIVA-CPP.

           IF WSS-X > CPP-TS-OCC-MAXO
              GO TO FIN-CON-MASIVA-CPP.
           
           PERFORM MOV-CPP-ITEM.
           PERFORM PUT-CPP-QUE.
           
       NXT-LEE-CPP.
           MOVE FIO-GET-NXT   TO FIO-CMND.
           GO TO LUP-LEE-CPP.
       
       NXT-LEE-MVT.
           MOVE FIO-GET-NXT   TO FIO-CMND.
           GO TO LUP-LEE-MVT.
           
           
       FIN-CON-MASIVA-CPP.
           EXIT.
      *----------------------------------------------------
       CARGA-TAB-CPP SECTION.
       INI-CARGA-TAB-CPP.
           MOVE ZEROES TO WSS-Z.       
      *LEE DAP-TAB-MVT
           MOVE 'DAP'                    TO TAB-COD-SIST FIO-SIST.
           MOVE 'MVT'                    TO TAB-COD-TTAB IN TAB.
           MOVE SPACES                   TO TAB-COD-CTAB IN TAB.
           MOVE FIO-GET-NLS TO FIO-CMND.
       LUP-CARGA-TAB-CPP.
           PERFORM GNS-FIO-TAB.
           IF NOT (FIO-STAT-OKS AND TAB-IND-VIGE IN TAB = WSS-S)
              GO TO NXT-CARGA-TAB-CPP.
           
           IF TAB-COD-CTAB IN TAB NOT > SPACES
              GO TO NXT-CARGA-TAB-CPP.
       
           IF TAB-COD-TTAB IN TAB NOT = WSS-MVT
              GO TO FIN-CARGA-TAB-CPP.
           
           ADD WSS-1 TO WSS-Z.
           MOVE TAB-COD-CTAB IN TAB TO WSS-COD-MVTO(WSS-Z).    
       
       
       NXT-CARGA-TAB-CPP.
           MOVE FIO-GET-NXT TO FIO-CMND.
           GO TO LUP-CARGA-TAB-CPP.
       
       FIN-CARGA-TAB-CPP.
           EXIT.
      *----------------------------------------------------
       MOV-CPP-ITEM SECTION.
       INI-MOV-CPP-ITEM.    
           MOVE CPP-COD-VCAM IN CPP TO TS-TP-872-CPP-COD-VCAM.
           MOVE CPP-COD-TOPD IN CPP TO TS-TP-872-CPP-COD-TOPD.
                                    
           IF CPP-COD-VCAM IN CPP > SPACES
               MOVE 'TAB' TO TAB-COD-SIST
               MOVE 'VLR' TO TAB-COD-TTAB IN TAB
               MOVE CPP-COD-VCAM IN CPP TO TAB-COD-CTAB IN TAB
               PERFORM BUS-TAB
               MOVE TAB-GLS-DESC IN TAB TO
                    TS-TP-872-FRM-GLS-VCAM
           ELSE
               MOVE SPACES TO TS-TP-872-FRM-GLS-VCAM.
           
           IF CPP-COD-TOPD IN CPP > SPACES
               MOVE 'TAB' TO TAB-COD-SIST
               MOVE 'TIO' TO TAB-COD-TTAB IN TAB
               MOVE CPP-COD-TOPD IN CPP TO TAB-COD-CTAB IN TAB
               PERFORM BUS-TAB
               MOVE TAB-GLS-DESC IN TAB TO
                    TS-TP-872-FRM-GLS-TOPD
           ELSE
               MOVE SPACES TO TS-TP-872-FRM-GLS-TOPD.

           MOVE CPP-COD-AOPD IN CPP TO TS-TP-872-CPP-COD-AOPD.
           MOVE CPP-COD-MVTO IN CPP TO TS-TP-872-CPP-COD-MVTO.
           MOVE CPP-COD-COPD IN CPP TO TAB-COD-CTAB IN TAB.
           MOVE 'TAB' TO TAB-COD-SIST.
           MOVE 'AUX' TO TAB-COD-TTAB IN TAB.
           PERFORM BUS-TAB.
           MOVE TAB-GLS-DESC IN TAB TO TS-TP-872-FRM-GLS-AOPD.
           
           IF CPP-COD-MVTO IN CPP > SPACES
               MOVE 'DAP' TO TAB-COD-SIST
               MOVE 'MVT' TO TAB-COD-TTAB IN TAB
               MOVE CPP-COD-MVTO IN CPP TO TAB-COD-CTAB IN TAB
               PERFORM BUS-TAB
               MOVE TAB-GLS-DESC IN TAB TO
                    TS-TP-872-FRM-GLS-MVTO
           ELSE
               MOVE SPACES TO TS-TP-872-FRM-GLS-MVTO.
           
           MOVE CPP-NUM-DTRN IN CPP TO TS-TP-872-CPP-NUM-DTRN.
           MOVE CPP-NUM-MTRN IN CPP TO TS-TP-872-CPP-NUM-MTRN.
           MOVE CPP-NUM-STRN IN CPP TO TS-TP-872-CPP-NUM-STRN.
           MOVE CPP-NUM-ATRN IN CPP TO TS-TP-872-CPP-NUM-ATRN.
           MOVE CPP-COD-SCTB IN CPP TO TS-TP-872-CPP-COD-SCTB.
           MOVE SPACES              TO TS-TP-872-FRM-GLS-SCTB.
           
           MOVE CPP-COD-TCCT IN CPP(1) TO TS-TP-872-CPP-COD-TCCT-IDX(1)
           MOVE CPP-COD-TCCT IN CPP(2) TO TS-TP-872-CPP-COD-TCCT-IDX(2)
           MOVE CPP-COD-TCCT IN CPP(3) TO TS-TP-872-CPP-COD-TCCT-IDX(3)
           MOVE CPP-COD-TCCT IN CPP(4) TO TS-TP-872-CPP-COD-TCCT-IDX(4)
           MOVE CPP-COD-TCCT IN CPP(5) TO TS-TP-872-CPP-COD-TCCT-IDX(5)
           MOVE CPP-COD-TCCT IN CPP(6) TO TS-TP-872-CPP-COD-TCCT-IDX(6)
           MOVE CPP-COD-TCCT IN CPP(7) TO TS-TP-872-CPP-COD-TCCT-IDX(7)
           MOVE CPP-COD-TCCT IN CPP(8) TO TS-TP-872-CPP-COD-TCCT-IDX(8)
           MOVE CPP-COD-TCCT IN CPP(9) TO TS-TP-872-CPP-COD-TCCT-IDX(9).
           MOVE CPP-COD-TCCT IN CPP(10) TO 
                                         TS-TP-872-CPP-COD-TCCT-IDX(10).
           MOVE CPP-COD-TCCT IN CPP(11) TO 
                                         TS-TP-872-CPP-COD-TCCT-IDX(11).
           MOVE CPP-COD-TCCT IN CPP(12) TO 
                                         TS-TP-872-CPP-COD-TCCT-IDX(12).
           MOVE CPP-COD-TCCT IN CPP(13) TO 
                                         TS-TP-872-CPP-COD-TCCT-IDX(13).
           MOVE CPP-COD-TCCT IN CPP(14) TO 
                                         TS-TP-872-CPP-COD-TCCT-IDX(14).
           MOVE CPP-COD-TCCT IN CPP(15) TO 
                                         TS-TP-872-CPP-COD-TCCT-IDX(15).
           MOVE CPP-COD-TCCT IN CPP(16) TO 
                                         TS-TP-872-CPP-COD-TCCT-IDX(16).
           MOVE CPP-COD-TCCT IN CPP(17) TO 
                                         TS-TP-872-CPP-COD-TCCT-IDX(17).
           MOVE CPP-COD-TCCT IN CPP(18) TO 
                                         TS-TP-872-CPP-COD-TCCT-IDX(18).
           MOVE CPP-COD-TCCT IN CPP(19) TO 
                                         TS-TP-872-CPP-COD-TCCT-IDX(19).
           MOVE CPP-COD-TCCT IN CPP(20) TO 
                                         TS-TP-872-CPP-COD-TCCT-IDX(20).

       FIN-MOV-CPP-ITEM.
           EXIT.
      *----------------------------------------------------
       PUT-CPP-QUE SECTION.
       INI-PUT-CPP-QUE.      
           
           MOVE CPP-TS-OCC-COLA            TO QUE-COLA.
           MOVE CPP-TS-OCC-LENG            TO QUE-LITM.
           MOVE WSS-X                      TO QUE-NITM.
           MOVE SPACES                     TO QUE-ITEM.
           MOVE CPP-TS-OCC-ITEM            TO QUE-ITEM.
           MOVE QUE-PUT                    TO QUE-CMND.
           PERFORM GNS-PRO-QUE.
           
       FIN-PUT-CPP-QUE.
           EXIT.
      *----------------------------------------------------
       ELI-MASIVA-CPP SECTION.
       INI-ELI-MASIVA-CPP.
           MOVE ZEROES TO WSS-X.
           PERFORM CARGA-TAB-CPP.
           MOVE ZEROES TO WSS-Z.
           
       LUP-ELI-LEE-MVT.
           ADD WSS-1 TO WSS-Z.
           IF WSS-COD-MVTO(WSS-Z) NOT > SPACES
              GO TO FIN-ELI-MASIVA-CPP.
                         
           MOVE SPACES                  TO CPP.
           MOVE WSS-COD-MVTO(WSS-Z)     TO CPP-COD-MVTO IN CPP.
           MOVE CPP-COD-VCAM IN CPP-FLD TO CPP-COD-VCAM IN CPP.
           MOVE CPP-COD-TOPD IN CPP-FLD TO CPP-COD-TOPD IN CPP.
           MOVE CPP-COD-AOPD IN CPP-FLD TO CPP-COD-AOPD IN CPP.
           MOVE SPACES                  TO CPP-COD-SCTB IN CPP.
           MOVE FIO-GET-NLS TO FIO-CMND.
       LUP-ELI-LEE-CPP.
           PERFORM DAP-FIO-CPP.
           IF NOT ( FIO-STAT-OKS                                  AND 
                    CPP-COD-MVTO IN CPP = WSS-COD-MVTO(WSS-Z)     AND
                    CPP-COD-VCAM IN CPP = CPP-COD-VCAM IN CPP-FLD AND
                    CPP-COD-TOPD IN CPP = CPP-COD-TOPD IN CPP-FLD AND
                    CPP-COD-AOPD IN CPP = CPP-COD-AOPD IN CPP-FLD )
              MOVE ZEROES TO FIO-STAT
              GO TO NXT-ELI-LEE-MVT.
           
           MOVE FIO-GET-KEY-UPD TO FIO-CMND.
           PERFORM DAP-FIO-CPP.
           IF FIO-STAT-OKS
              MOVE FIO-DEL TO FIO-CMND
              PERFORM DAP-FIO-CPP.
            
       NXT-ELI-LEE-CPP.
           MOVE FIO-GET-NXT   TO FIO-CMND.
           GO TO LUP-ELI-LEE-CPP.
       
       NXT-ELI-LEE-MVT.
           MOVE FIO-GET-NXT   TO FIO-CMND.
           GO TO LUP-ELI-LEE-MVT.
           
       FIN-ELI-MASIVA-CPP.
           EXIT.
      *OGB-FIN 31-MAY-2018 CONSULTA Y ELIMINACION MASIVA DE CPP
      *>>>> END EOF
*% END
*% IF EOF_PU
      *<<<< EOF_PU
       RET-HDR SECTION.
       INI-RET-HDR.
           PERFORM GET-FHOY.
      *    Fecha Transaccion
           MOVE HOY-FHOY TO CPP-FEC-FTRN IN CPP.
      *    Hora Transaccion
           MOVE HOY-HHOY TO CPP-HRA-HRTR IN CPP.
      *    Codigo Origen transaccion
           MOVE SCR-OTRN TO CPP-COD-OTRN IN CPP.
      *    Autor Transaccion
           MOVE SCR-USER TO CPP-COD-ATRN IN CPP.
           IF SCR-CCPP = 'ING'
               MOVE 'I' TO CPP-COD-TACC IN CPP
           ELSE
           IF SCR-CCPP = 'MOD'
               MOVE 'M' TO CPP-COD-TACC IN CPP
           ELSE
           IF SCR-CMND = 'COP'
               MOVE 'C' TO CPP-COD-TACC IN CPP.
       FIN-RET-HDR.
           EXIT.

      *>>>> EOF_PU
*% END
*% IF PFS_SCR_GIKY
      *<<<<
               MOVE 'PFSINV    ' TO MSG-COD-MENS                        
               MOVE 'GNS' TO MSG-COD-SIST                               
               PERFORM GET-MSG                                          
               MOVE MSG-GLS-DESC TO FRM-MENS                            
               PERFORM FST-KEY-CPP                                      
               PERFORM SCR-MSSG                                         
               PERFORM SCR-PUTA                                         
               PERFORM SCR-EXIT.                                        
           MOVE FRM-DFLD TO CPP-FLD.                                    
           IF FRM-STAT-ABT                                              
               GO TO FIN-SCR-GIKY.                                      
           MOVE FRM-SUAR-OKS TO FRM-SUAR.                               
           PERFORM VAL-NUM-IKY-CPP.                                     
           IF FRM-SUAR EQUAL FRM-SUAR-MAL OR FRM-SUAR-CLR               
               PERFORM SCR-MSSG                                         
               PERFORM EDT-IKY-CPP                                      
               PERFORM SCR-PUTA                                         
               PERFORM SCR-EXIT.                                        
      *JSS                                                              
           PERFORM CLR-FLD-CPP.                                         
           PERFORM VAL-IKY-CPP.                                         
           IF FRM-SUAR EQUAL FRM-SUAR-MAL OR FRM-SUAR-CLR               
               GO TO ERR-SCR-GIKZ.                                      
           PERFORM VAL-CON-IKY-CPP.                                     
           IF NOT ( FRM-SUAR EQUAL FRM-SUAR-MAL OR FRM-SUAR-CLR )       
               GO TO FIN-SCR-GIKY.                                      
           IF FRM-UCUR NOT > SPACES                                     
               PERFORM FST-KEY-CPP.                                     
       ERR-SCR-GIKZ.                                                    
           PERFORM SCR-MSSG.                                            
           PERFORM EDT-IKY-CPP.                                         
           PERFORM SCR-PUTA.                                            
           PERFORM SCR-EXIT.                                            
           GO TO FIN-SCR-GIKY.
      *>>>>
*% END
*% IF PGM_PQ
*% IF INI_HBL_IKY
      *<<<<
           IF SCR-DESDE-CMN                                             
               MOVE CPP-GLS-MENS TO FRM-MENS                            
               MOVE LOW-VALUES TO CPP-FLD                               
               MOVE FRM-MENS TO CPP-GLS-MENS.                           
           MOVE FRM-CPSF-AEY TO FRM-CPIM-AEY.                           
           PERFORM PRO-MKY-CPP.                                         
           PERFORM PRO-AKY-CPP.                                         
           PERFORM UNP-IKY-CPP.                                         
           PERFORM FST-KEY-CPP.                                         
           MOVE '1' TO FRM-CPIM-AEY.                                    
           GO TO FIN-HBL-IKY.
      *>>>>
*% END
*% IF INI_HBL_KEY
      *<<<<
           IF SCR-DESDE-CMN                                             
               MOVE CPP-GLS-MENS TO FRM-MENS                            
               MOVE LOW-VALUES TO CPP-FLD                               
               MOVE FRM-MENS TO CPP-GLS-MENS.                           
           MOVE FRM-CPSF-AEY TO FRM-CPIM-AEY.                           
           PERFORM UNP-KEY-CPP.                                         
           PERFORM FST-KEY-CPP.                                         
           MOVE '1' TO FRM-CPIM-AEY.                                    
           GO TO FIN-HBL-KEY.
      *>>>>
*% END
*% END
*% IF PGM_PU
*% IF INI_HBL_IKY
      *<<<<
           IF SCR-DESDE-CMN                                             
               MOVE CPP-GLS-MENS TO FRM-MENS                            
               MOVE LOW-VALUES TO CPP-FLD                               
               MOVE FRM-MENS TO CPP-GLS-MENS.                           
           MOVE FRM-CPSF-AEY TO FRM-CPIM-AEY.                           
           PERFORM PRO-FLD-CPP.                                         
           PERFORM PRO-MKY-CPP.                                         
           PERFORM UNP-IKY-CPP.                                         
           PERFORM FST-KEY-CPP.                                         
           MOVE '1' TO FRM-CPIM-AEY.                                    
           GO TO FIN-HBL-IKY.
      *>>>>
*% END
*% IF INI_HBL_KEY
      *<<<<
           IF SCR-DESDE-CMN                                             
               MOVE CPP-GLS-MENS TO FRM-MENS                            
               MOVE LOW-VALUES TO CPP-FLD                               
               MOVE FRM-MENS TO CPP-GLS-MENS.                           
           MOVE FRM-CPSF-AEY TO FRM-CPIM-AEY.                           
           PERFORM PRO-FLD-CPP.                                         
           PERFORM UNP-KEY-CPP.                                         
           PERFORM FST-KEY-CPP.                                         
           MOVE '1' TO FRM-CPIM-AEY.                                    
           GO TO FIN-HBL-KEY.
      *>>>>
*% END
*% END
