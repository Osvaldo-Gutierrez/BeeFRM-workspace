       IDENTIFICATION DIVISION.
      *************************
       PROGRAM-ID.     SUPPGP23.
      *AUTHOR.         DONOSO JARA OSVALDO.
      *                DATE-WRITTEN,  15/06/95.
      ******************************************************************
      *  INTERSOFT                                                     *
      *  MIGRACION A COBOL OS/390                                      *
      *  FECHA: 15 DE ABRIL DE 1998                                    *
      ******************************************************************
      ******************************************************************
      *  Sistema  : Sistema Super Bancos                               *
      *  Subsist. :                                                    *
      *  Analista : Donoso J. Osvaldo                                  *
      *  Objetivo : Genera archivo P23 formato Super                   *
      *                                                                *
      *  Archivos :                                                    *
      *   Entrada : SUPVD02, Archivo D02 formato banco                 *
      *             SUPVTAR, Carteras origen asociadas a Cod. Producto *
      *                                                                *
      *   Salida  : SUPVP23, Archivo P23 enviado a la Super            *
      *                                                                *
      *   Ent/Sal :                                                    *
      *                                                                *
      *   Trabajo :                                                    *
      *                                                                *
      *  Mantenciones                                                  *
      *  ============                                                  *
      *            Programador: ...........................            *
      *            Fecha      : dd/mm/aa                               *
      *            Cambio     : .....................................  *
      *                         .....................................  *
      *                         .....................................  *
      *            PROGRAMADOR: NNV                                    *
      *            FECHA      : 03/09/98                               *
      *            CAMBIO     : SE AGREGA SIGLO AL PERIODO EN CABECERA *
      ******************************************************************
           EJECT
       ENVIRONMENT DIVISION.
      **********************
       CONFIGURATION SECTION.
      *=====================
       SPECIAL-NAMES.
                      DECIMAL-POINT IS COMMA.
       INPUT-OUTPUT SECTION.
      *=====================
       FILE-CONTROL.
           SELECT SUPVD02 ASSIGN       TO SUPVD02
                  ORGANIZATION         IS INDEXED
                  ACCESS MODE          IS SEQUENTIAL
                  RECORD KEY           IS D02-COD-ID02
                  FILE STATUS          IS WR-FS-SUPVD02.
           SELECT SUPVP23 ASSIGN       TO SUPVP23
                  FILE STATUS          IS WR-FS-SUPVP23.
           SELECT SUPVTAR ASSIGN       TO SUPVTAR
                  FILE STATUS          IS WR-FS-SUPVTAR.
           EJECT
       DATA DIVISION.
      *==============
           SKIP3
       FILE SECTION.
      *=============
       FD  SUPVD02                LABEL RECORD STANDARD
                                  RECORD CONTAINS 460 CHARACTERS
                                  BLOCK  CONTAINS 0 RECORDS.
       COPY SUPBRD02.
           SKIP1
       FD  SUPVP23                LABEL RECORD STANDARD
                                  RECORD CONTAINS 18 CHARACTERS
                                  BLOCK  CONTAINS 0 RECORDS.
       COPY SUPBRP23.
           SKIP1
       FD  SUPVTAR.
       01  SUPRTAR                PIC  X(80).
           SKIP1
       WORKING-STORAGE SECTION.
      *========================
       01  W-PARAMETROS.
           05 FILLER                        PIC X(20).
           05 WP-FEC-PRO.
              10 WP-SIG-PRO                 PIC X(02).
              10 WP-ANO-PRO                 PIC X(02).
              10 WP-MES-PRO                 PIC X(02).
              10 WP-DIA-PRO                 PIC X(02).
           05 FILLER                        PIC X(52).
           SKIP1
       01  W-TABLAS.
           05 WT-PRODUCTOS OCCURS 100 TIMES INDEXED BY WI-PRO.
              10 WT-COD-TCCO                PIC  X(04).
              10 FILLER                     PIC  X(01).
              10 WT-COD-PROD                PIC  X(03).
           05 WT-ACUM-PROD OCCURS 2000 TIMES INDEXED BY WI-IND.
              10 WT-COD-PPRO                PIC  X(03).
              10 WT-COD-MONE                PIC  X(03).
              10 WT-TIP-TASA                PIC  X(03).
              10 WT-VAL-SLDO                PIC  9(14)V9(02).
              10 WT-VAL-PPON                PIC  9(14)V9(04).
           SKIP1
       01  W-SWITCHES.
           05 WS-PROCESO                    PIC 9(01) VALUE 0.
              88 WS-PROCESO-OK       VALUE 0.
              88 WS-PROCESO-ERROR    VALUE 1.
              88 WS-PROCESO-WARNING  VALUE 2.
           SKIP1
       01  W-CONTADORES-Y-ACUMULADORES.
           02 WA-L-D02                      PIC 9(06) VALUE 0.
           02 WA-G-P23                      PIC 9(06) VALUE 0.
           SKIP1
       01  W-REGISTROS-DE-TRABAJO.
           05 WR-FECHA-HOY.
              10 WR-HOY-AA                  PIC X(02).
              10 WR-HOY-MM                  PIC X(02).
              10 WR-HOY-DD                  PIC X(02).
           05 WR-MENSAJES.
              10 WR-SECCION                 PIC X(15).
              10 WR-PARRAFO                 PIC X(15).
              10 WR-ARCHIVO                 PIC X(10).
              10 WR-OPERACI                 PIC X(10).
              10 WR-FILE-ST                 PIC X(02).
              10 WR-MENSAJE                 PIC X(35).
           05 WR-FS-SUPVD02                 PIC 9(02) VALUE 0.
           05 WR-FS-SUPVP23                 PIC 9(02) VALUE 0.
           05 WR-FS-SUPVTAR                 PIC 9(02) VALUE 0.
           05 WR-COD-PROD-OK                PIC X(02).
           05 WR-COD-SIST                   PIC X(01).
      *<<<< VARIABLES PARA RUTINA DE VAL DE FECHAS
       COPY RTNWCALE.
      *
           EJECT
       PROCEDURE DIVISION.
      *===================
       A-CONTROL SECTION.
      *=================
       AA-INICIALIZACION.
           PERFORM B-INICIALIZAR.
           SKIP1
       AB-PROCESAMIENTO.
           IF WS-PROCESO-OK
              PERFORM C-PROCESAR
           END-IF.
           SKIP1
       AC-TERMINACION.
           PERFORM D-TERMINAR.
           SKIP1
       AZ-FIN-DE-SECCION.
           STOP RUN.
           EJECT
       B-INICIALIZAR SECTION.
      *======================
       BA-PROC-PPAL.
      *-------------
           PERFORM BB-ABRIR-ARCHIVOS.
           PERFORM BB-VALIDA-FECHA.
           PERFORM BB-CARGA-TABLA-PROD.
           GO BZ-FIN-DE-SECCION.
       BB-ABRIR-ARCHIVOS.
      *------------------
           OPEN OUTPUT SUPVP23
                INPUT  SUPVD02 SUPVTAR.

           IF WR-FS-SUPVP23 NOT = 0 AND NOT = 97
              MOVE 'B-INICIALIZAR'          TO WR-SECCION
              MOVE 'BB-ABRIR-ARCHIVOS'      TO WR-PARRAFO
              MOVE 'SUPVP23    '            TO WR-ARCHIVO
              MOVE 'OPEN       '            TO WR-OPERACI
              MOVE WR-FS-SUPVP23            TO WR-FILE-ST
              PERFORM BC-DISPLAY-ERROR
           END-IF.
           IF WR-FS-SUPVD02 NOT = 0 AND NOT = 97
              MOVE 'B-INICIALIZAR'          TO WR-SECCION
              MOVE 'BB-ABRIR-ARCHIVOS'      TO WR-PARRAFO
              MOVE 'SUPVD02    '            TO WR-ARCHIVO
              MOVE 'OPEN       '            TO WR-OPERACI
              MOVE WR-FS-SUPVD02            TO WR-FILE-ST
              PERFORM BC-DISPLAY-ERROR
           END-IF.
           IF WR-FS-SUPVTAR NOT = 0 AND NOT = 97
              MOVE 'B-INICIALIZAR'          TO WR-SECCION
              MOVE 'BB-ABRIR-ARCHIVOS'      TO WR-PARRAFO
              MOVE 'SUPVTAR    '            TO WR-ARCHIVO
              MOVE 'OPEN       '            TO WR-OPERACI
              MOVE WR-FS-SUPVTAR            TO WR-FILE-ST
              PERFORM BC-DISPLAY-ERROR
           END-IF.
           ACCEPT WR-FECHA-HOY FROM DATE.
           SKIP1
       BB-VALIDA-FECHA.
      *----------------
           ACCEPT W-PARAMETROS.
           MOVE 'CARGAR'                    TO CALEAREA-FUNCION.
           MOVE ZEROES                      TO CALEAREA-FECHA-1.
           MOVE ZEROES                      TO CALEAREA-FECHA-2.
           PERFORM BD-CALL-RUTUCALE.
           MOVE WP-SIG-PRO                  TO CALEAREA-FECHA-1-AM
           MOVE WP-ANO-PRO                  TO CALEAREA-FECHA-1-AA
           MOVE WP-MES-PRO                  TO CALEAREA-FECHA-1-M
           MOVE WP-DIA-PRO                  TO CALEAREA-FECHA-1-D
           MOVE ZEROES                      TO CALEAREA-FECHA-2
           MOVE 'INFO  '                    TO CALEAREA-FUNCION
           PERFORM BD-CALL-RUTUCALE
           IF (CALEAREA-COD-RET NOT = 0)
               MOVE 'B-INICIALIZAR'    TO WR-SECCION
               MOVE 'BD-CALL-RUTUCALE' TO WR-PARRAFO
               MOVE 'RUTUCALE'         TO WR-ARCHIVO
               MOVE CALEAREA-FUNCION   TO WR-OPERACI
               MOVE '*ERROR EN FECHA ' TO WR-MENSAJE
               MOVE CALEAREA-COD-RET   TO WR-FILE-ST
               DISPLAY 'CALEAREA-FECHA-1 : ' CALEAREA-FECHA-1
               DISPLAY 'CALEAREA-FECHA-2 : ' CALEAREA-FECHA-2
               PERFORM BC-DISPLAY-ERROR
           END-IF.
           SKIP1
       BD-CALL-RUTUCALE.
      *-----------------
           CALL 'RUTUCALE' USING RTNWCALE.
           IF (CALEAREA-FUNCION = 'CANCEL')
               MOVE 'B-INICIALIZAR'    TO WR-SECCION
               MOVE 'BD-CALL-RUTUCALE' TO WR-PARRAFO
               MOVE 'RUTUCALE'         TO WR-ARCHIVO
               MOVE CALEAREA-FUNCION   TO WR-OPERACI
               MOVE '*ERROR EN RUTINA' TO WR-MENSAJE
               MOVE CALEAREA-COD-RET   TO WR-FILE-ST
               DISPLAY 'CALEAREA-FECHA-1 : ' CALEAREA-FECHA-1
               DISPLAY 'CALEAREA-FECHA-2 : ' CALEAREA-FECHA-2
               PERFORM BC-DISPLAY-ERROR
           END-IF.
           SKIP1
       BB-CARGA-TABLA-PROD.
      *--------------------
           INITIALIZE W-TABLAS.
           SET WI-PRO                       TO 1
           READ SUPVTAR.
           PERFORM UNTIL (WR-FS-SUPVTAR NOT = 00 OR WS-PROCESO-ERROR OR
                          WI-PRO > 100)
              MOVE SUPRTAR                  TO WT-PRODUCTOS(WI-PRO)
              READ SUPVTAR
              SET WI-PRO                    UP BY 1
           END-PERFORM.
           IF (WI-PRO > 100)
              MOVE 'B-INICIALIZAR'          TO WR-SECCION
              MOVE 'BB-CARGA-TABLA-PROD'    TO WR-PARRAFO
              MOVE 'SUPVTAR    '            TO WR-ARCHIVO
              MOVE '           '            TO WR-OPERACI
              MOVE '  '                     TO WR-FILE-ST
              MOVE 'SE LLENO TABLA PRODUC'  TO WR-MENSAJE
              PERFORM BC-DISPLAY-ERROR
           END-IF.
           SKIP1
       BC-DISPLAY-ERROR.
      *-----------------
           SET  WS-PROCESO-ERROR            TO TRUE
           DISPLAY ' '
           DISPLAY 'ERROR EN SECCION  : ' WR-SECCION
           DISPLAY ' PARRAFO          : ' WR-PARRAFO
           DISPLAY ' ARCHIVO          : ' WR-ARCHIVO
           DISPLAY ' OPERACION        : ' WR-OPERACI
           DISPLAY ' FILE STATUS      : ' WR-FILE-ST
           DISPLAY ' MENSAJE DE ERROR : ' WR-MENSAJE
           DISPLAY ' '.
           SKIP1
       BZ-FIN-DE-SECCION.
      *------------------
           EXIT.
           EJECT
       C-PROCESAR SECTION.
      *===================
       CA-PROC-PPAL.
      *-------------
           PERFORM XX-MUEVE-REG-CABECERA
           PERFORM CB-LEER-SUPVD02
           PERFORM CC-ACUMULA-P23-SUPER
              UNTIL (WR-FS-SUPVD02 NOT = 0 OR WS-PROCESO-ERROR)
           PERFORM CC-GENERA-P23-SUPER
           GO CZ-FIN-DE-SECCION.
           SKIP1
       CB-LEER-SUPVD02.
      *----------------
           READ SUPVD02 END-READ.
           IF WR-FS-SUPVD02 = 0
              ADD 1                         TO WA-L-D02
           ELSE
           IF WR-FS-SUPVD02  NOT = 10
              MOVE 'C-PROCESAR'             TO WR-SECCION
              MOVE 'CB-LEER-SUPVD02 '       TO WR-PARRAFO
              MOVE 'SUPVD02     '           TO WR-ARCHIVO
              MOVE 'READ       '            TO WR-OPERACI
              MOVE WR-FS-SUPVD02            TO WR-FILE-ST
              PERFORM BC-DISPLAY-ERROR
           END-IF.
           SKIP1
       XX-MUEVE-REG-CABECERA.
      *----------------------
           MOVE '016'                       TO P23-COD-INS-FIN
           MOVE 'P23'                       TO P23-IDE-ARC
030998     MOVE WP-SIG-PRO                  TO P23-SIG-PER.
           MOVE WP-ANO-PRO                  TO P23-ANO-PER.
           MOVE WP-MES-PRO                  TO P23-MES-PER.
           MOVE SPACES                      TO P23-FILLER IN P23H.
           PERFORM XX-GRABA-SUPVP23.
           SKIP1
       CC-ACUMULA-P23-SUPER.
      *---------------------
           MOVE D02-COD-NIIO                TO WR-COD-SIST
           IF (D02-COD-TCCO  = '1115' AND WR-COD-SIST = '5')
               MOVE 'ESPE'                  TO D02-COD-TCCO
           END-IF.

           SET WI-PRO                       TO 1
           SEARCH WT-PRODUCTOS
             AT END MOVE 'NO'               TO WR-COD-PROD-OK
             WHEN (WT-COD-TCCO(WI-PRO) = D02-COD-TCCO)
                   MOVE 'SI'                TO WR-COD-PROD-OK
           END-SEARCH.

           IF (D02-IND-TDOP     = 'D'        AND
               D02-NUM-DDIR     =  1         AND
               D02-IND-DCAS NOT = 'C'        AND
               D02-VAL-SCON     >  0         AND
               D02-NUM-AOTO     = WP-ANO-PRO AND
               D02-NUM-MOTO     = WP-MES-PRO AND
               WR-COD-PROD-OK   = 'SI')

               SET WI-IND                   TO 1
               SEARCH WT-ACUM-PROD
                AT END  DISPLAY 'ERROR INESPERADO EN PGM...'
                        PERFORM BC-DISPLAY-ERROR
                WHEN (WT-COD-PPRO(WI-IND) = SPACES)
                      MOVE WT-COD-PROD(WI-PRO) TO WT-COD-PPRO(WI-IND)
                      MOVE D02-COD-MONE        TO WT-COD-MONE(WI-IND)
                      MOVE D02-IND-BCTI        TO WT-TIP-TASA(WI-IND)
                WHEN (WT-COD-PPRO(WI-IND) = WT-COD-PROD(WI-PRO) AND
                      WT-COD-MONE(WI-IND) = D02-COD-MONE        AND
                      WT-TIP-TASA(WI-IND) = D02-IND-BCTI)
                      CONTINUE
               END-SEARCH

               IF (WS-PROCESO-OK)
                  ADD D02-VAL-SCON          TO WT-VAL-SLDO(WI-IND)
                  COMPUTE WT-VAL-PPON(WI-IND) ROUNDED =
                          WT-VAL-PPON(WI-IND) +
                         (D02-VAL-SCON * D02-VAL-TINT)
               END-IF
           END-IF.
           PERFORM CB-LEER-SUPVD02.
           SKIP1
       CC-GENERA-P23-SUPER.
      *--------------------
           SET WI-IND                        TO 1
           PERFORM UNTIL (WI-IND > 2000 OR WT-COD-PPRO(WI-IND) = '   ')
             MOVE WT-COD-PPRO(WI-IND)        TO P23-COD-PROD
             MOVE WT-COD-MONE(WI-IND)        TO P23-COD-MONE
             MOVE WT-TIP-TASA(WI-IND)        TO P23-TIP-TASA
             IF (WT-VAL-SLDO(WI-IND) = 0)
                 MOVE 0                      TO P23-TAS-PPON
             ELSE
                 COMPUTE P23-TAS-PPON ROUNDED =
                                                WT-VAL-PPON(WI-IND) /
                                                WT-VAL-SLDO(WI-IND)
             END-IF
             MOVE SPACES                     TO P23-FILLER IN P23
             PERFORM XX-GRABA-SUPVP23
             SET WI-IND                      UP BY 1
           END-PERFORM.
           SKIP1
       XX-GRABA-SUPVP23.
      *-----------------
           WRITE P23 END-WRITE.
           IF WR-FS-SUPVP23 = 0
              ADD 1                         TO WA-G-P23
           ELSE
              MOVE 'C-PROCESAR'             TO WR-SECCION
              MOVE 'XX-GRABA-SUPVP23'       TO WR-PARRAFO
              MOVE 'SUPVP23     '           TO WR-ARCHIVO
              MOVE 'WRITE      '            TO WR-OPERACI
              MOVE WR-FS-SUPVP23            TO WR-FILE-ST
              PERFORM BC-DISPLAY-ERROR
           END-IF.
           SKIP1
       CZ-FIN-DE-SECCION.
      *------------------
           EXIT.
           EJECT
       D-TERMINAR SECTION.
      *===================
       DA-ESTADISTICAS.
      *----------------
           DISPLAY ' '
           DISPLAY ' '
           DISPLAY ' '
           DISPLAY 'INFORMES'
           DISPLAY '--------'
           DISPLAY ' '
           DISPLAY 'ESTE PROCESO NO EMITE INFORME'
           DISPLAY ' '
           DISPLAY ' '
           DISPLAY ' '
           DISPLAY 'ESTADISTICAS DE PROCESO PROGRAMA SUPPGP23 FECHA '
                    WR-FECHA-HOY
           DISPLAY '-----------------------------------------------'
           DISPLAY '    GENERA ARCHIVO D02 EN FORMATO SUPER'
           DISPLAY ' '
           DISPLAY ' '
           DISPLAY 'REG LEIDOS DE SUPVD02 : ' WA-L-D02
           DISPLAY 'REG GRABADOS  SUPVP23 : ' WA-G-P23
           DISPLAY ' '
           DISPLAY ' '
           DISPLAY 'TARJETAS DE PARAMETROS'
           DISPLAY '----------------------'
           DISPLAY ' '
           DISPLAY W-PARAMETROS
           DISPLAY ' '
           DISPLAY ' '
           DISPLAY 'MENSAJES PARA EL EXPLOTADOR'
           DISPLAY '---------------------------'
           DISPLAY ' '
           IF WS-PROCESO-OK
               DISPLAY 'NO HAY MENSAJES PARA EL EXPLOTADOR'
           ELSE
               DISPLAY 'HAY MENSAJES PARA EL EXPLOTADOR'
           END-IF.
           DISPLAY ' '
           DISPLAY ' '
           DISPLAY ' '.
           SKIP1
       DB-TERMINO.
      *-----------
           CLOSE SUPVD02 SUPVP23 SUPVTAR
           IF WS-PROCESO-ERROR
              MOVE 100                      TO RETURN-CODE
              DISPLAY ' '
              DISPLAY ' '
              DISPLAY '**********************************************'
              DISPLAY '**********************************************'
              DISPLAY '********                              ********'
              DISPLAY '******** TERMINO ERRONEO DEL PROCESO  ********'
              DISPLAY '********                              ********'
              DISPLAY '**********************************************'
              DISPLAY '**********************************************'
           ELSE
              DISPLAY ' '
              DISPLAY ' '
              DISPLAY '*****PROCESO TERMINO EN FORMA NORMAL*****'
           END-IF.
           SKIP1
       DZ-FIN-DE-SECCION.
      *------------------
           EXIT.
           EJECT
