       IDENTIFICATION DIVISION.
      *************************
       PROGRAM-ID.     SUPPGP21.
      *AUTHOR.         DONOSO JARA OSVALDO.
      *                DATE-WRITTEN,  15/05/95.
      ******************************************************************
      *  INTERSOFT                                                     *
      *  MIGRACION A COBOL OS/390                                      *
      *  FECHA: 15 DE ABRIL DE 1998                                    *
      ******************************************************************
      ******************************************************************
      *  Sistema  : Sistema Super Bancos                               *
      *  Subsist. :                                                    *
      *  Analista : Donoso J. Osvaldo                                  *
      *  Objetivo : Genera archivo P21 formato Super                   *
      *                                                                *
      *  Archivos :                                                    *
      *   Entrada : SUPVD02, Archivo D02 formato banco                 *
      *             CAM-150, Tabla de paridades de cambio (UF)         *
      *                                                                *
      *   Salida  : SUPVP21, Archivo P21 enviado a la Super            *
      *                                                                *
      *   Ent/Sal :                                                    *
      *                                                                *
      *   Trabajo :                                                    *
      *                                                                *
      *  Mantenciones                                                  *
      *  ============                                                  *
      *            Programador: ...........................            *
      *            Fecha      : dd/mm/aa                               *
      *            Cambio     : .....................................  *
      *                         .....................................  *
      *                         .....................................  *
      *            PROGRAMADOR: NNV                                    *
      *            FECHA      : 03/09/98                               *
      *            CAMBIO     : SE AGREGA SIGLO AL PERIODO EN CABECERA *
      ******************************************************************
           EJECT
       ENVIRONMENT DIVISION.
      **********************
       CONFIGURATION SECTION.
      *=====================
       SPECIAL-NAMES.
                      DECIMAL-POINT IS COMMA.
       INPUT-OUTPUT SECTION.
      *=====================
       FILE-CONTROL.
           SELECT SUPVD02 ASSIGN       TO SUPVD02
                  FILE STATUS          IS WR-FS-SUPVD02.
           SELECT SUPVP21 ASSIGN       TO SUPVP21
                  FILE STATUS          IS WR-FS-SUPVP21.
           EJECT
       DATA DIVISION.
      *==============
           SKIP3
       FILE SECTION.
      *=============
       FD  SUPVD02                LABEL RECORD STANDARD
                                  RECORD CONTAINS 460 CHARACTERS
                                  BLOCK  CONTAINS 0 RECORDS.
       COPY SUPBRD02.
           SKIP1
       FD  SUPVP21                LABEL RECORD STANDARD
                                  RECORD CONTAINS 110 CHARACTERS
                                  BLOCK  CONTAINS 0 RECORDS.
       COPY SUPBRP21.
           SKIP1
       WORKING-STORAGE SECTION.
      *========================
       01  W-PARAMETROS.
           05 FILLER                        PIC X(20).
           05 WP-FEC-PRO.
              10 WP-SIG-PRO                 PIC X(02).
              10 WP-ANO-PRO                 PIC X(02).
              10 WP-MES-PRO                 PIC X(02).
              10 WP-DIA-PRO                 PIC X(02).
           05 FILLER                        PIC X(52).
           SKIP1
       01  W-SWITCHES.
           05 WS-PROCESO                    PIC 9(01) VALUE 0.
              88 WS-PROCESO-OK       VALUE 0.
              88 WS-PROCESO-ERROR    VALUE 1.
              88 WS-PROCESO-WARNING  VALUE 2.
           SKIP1
       01  W-CONTADORES-Y-ACUMULADORES.
           02 WA-L-D02                      PIC 9(06) VALUE 0.
           02 WA-G-P21                      PIC 9(06) VALUE 0.
           SKIP1
       01  W-REGISTROS-DE-TRABAJO.
           05 WR-FECHA-HOY.
              10 WR-HOY-AA                  PIC X(02).
              10 WR-HOY-MM                  PIC X(02).
              10 WR-HOY-DD                  PIC X(02).
           05 WR-MENSAJES.
              10 WR-SECCION                 PIC X(15).
              10 WR-PARRAFO                 PIC X(15).
              10 WR-ARCHIVO                 PIC X(10).
              10 WR-OPERACI                 PIC X(10).
              10 WR-FILE-ST                 PIC X(02).
              10 WR-MENSAJE                 PIC X(35).
           05 WR-FS-SUPVD02                 PIC 9(02) VALUE 0.
           05 WR-FS-SUPVP21                 PIC 9(02) VALUE 0.
           05 WR-COD-CLIE                   PIC 9(01) VALUE 0.
           05 WR-RUT-ANT                    PIC X(09) VALUE ' '.
           05 WR-I                          PIC 9(02) VALUE 0.
           05 WR-TRAMOS.
              10 WR-VAL-TRM-01              PIC 9(12)V9(02).
              10 WR-VAL-TRM-02              PIC 9(12)V9(02).
              10 WR-VAL-TRM-03              PIC 9(12)V9(02).
              10 WR-VAL-TRM-04              PIC 9(12)V9(02).
              10 WR-VAL-TRM-05              PIC 9(12)V9(02).
           05 WR-VAL-SCON                   PIC 9(12)V9(02).
      ******************************************************************
      * Areas de uso para Datacom                                      *
      ******************************************************************
      *
       01  WB-UIB.
           05 FILLER                 PIC X(32) VALUE 'SUPPGP21'.
      *
       01  WB-REQ-CAM-AREA.
           02 WB-REQ-CAM-CMD          PIC X(5) VALUE 'REDKY'.
           02 FILLER                  PIC X(3) VALUE 'CAM'.
           02 FILLER                  PIC X(5) VALUE 'CAM00'.
           02 WB-REQ-CAM-RC           PIC X(2) VALUE SPACES.
           02 FILLER                  PIC X(1).
           02 FILLER                  PIC S9(4) COMP VALUE +150.
           02 FILLER                  PIC X(58).
           02 WB-REQ-CAM-KEY-VALUE.
              03 WB-REQ-CAM-FEC-1     PIC X(08).
              03 WB-REQ-CAM-FEC-2     PIC X(08).
              03 WB-REQ-CAM-COD-1     PIC X(06).
              03 WB-REQ-CAM-COD-2     PIC X(06).
      *
       COPY TABBRCAM.
      *
       01  WB-ELEM-LIS                PIC X(11) VALUE 'CAM00'.
      *
           EJECT
       PROCEDURE DIVISION.
      *===================
       A-CONTROL SECTION.
      *=================
       AA-INICIALIZACION.
           ENTRY 'DBMSCBL'.
      *
           PERFORM B-INICIALIZAR.
           SKIP1
       AB-PROCESAMIENTO.
           IF WS-PROCESO-OK
              PERFORM C-PROCESAR
           END-IF.
           SKIP1
       AC-TERMINACION.
           PERFORM D-TERMINAR.
           SKIP1
       AZ-FIN-DE-SECCION.
           STOP RUN.
           EJECT
       B-INICIALIZAR SECTION.
      *======================
       BA-PROC-PPAL.
      *-------------
           PERFORM BB-ABRIR-ARCHIVOS.
           PERFORM BB-CARGA-UF.
           GO BZ-FIN-DE-SECCION.
       BB-ABRIR-ARCHIVOS.
      *------------------
           OPEN OUTPUT SUPVP21
                INPUT  SUPVD02.

           IF WR-FS-SUPVP21 NOT = 0 AND NOT = 97
              MOVE 'B-INICIALIZAR'          TO WR-SECCION
              MOVE 'BB-ABRIR-ARCHIVOS'      TO WR-PARRAFO
              MOVE 'SUPVP21    '            TO WR-ARCHIVO
              MOVE 'OPEN       '            TO WR-OPERACI
              MOVE WR-FS-SUPVP21            TO WR-FILE-ST
              PERFORM BC-DISPLAY-ERROR
           END-IF.
           IF WR-FS-SUPVD02 NOT = 0 AND NOT = 97
              MOVE 'B-INICIALIZAR'          TO WR-SECCION
              MOVE 'BB-ABRIR-ARCHIVOS'      TO WR-PARRAFO
              MOVE 'SUPVD02    '            TO WR-ARCHIVO
              MOVE 'OPEN       '            TO WR-OPERACI
              MOVE WR-FS-SUPVD02            TO WR-FILE-ST
              PERFORM BC-DISPLAY-ERROR
           END-IF.
           ACCEPT WR-FECHA-HOY FROM DATE.
           SKIP1
       BB-CARGA-UF.
      *------------
           ACCEPT W-PARAMETROS.
           MOVE WP-FEC-PRO                  TO WB-REQ-CAM-FEC-1
           MOVE WP-FEC-PRO                  TO WB-REQ-CAM-FEC-2
           MOVE '0998  '                    TO WB-REQ-CAM-COD-1
           MOVE '0999  '                    TO WB-REQ-CAM-COD-2
           MOVE SPACES                   TO WB-REQ-CAM-RC
           CALL 'DBNTRY' USING WB-UIB WB-REQ-CAM-AREA CAM WB-ELEM-LIS
           IF (WB-REQ-CAM-RC NOT = '  ')
               MOVE 'B-INICIALIZAR'      TO WR-SECCION
               MOVE 'BB-CARGA-UF'        TO WR-PARRAFO
               MOVE 'CAM'                TO WR-ARCHIVO
               MOVE WB-REQ-CAM-CMD       TO WR-OPERACI
               MOVE WB-REQ-CAM-RC        TO WR-FILE-ST
               MOVE WB-REQ-CAM-KEY-VALUE TO WR-MENSAJE
               PERFORM BC-DISPLAY-ERROR
           ELSE
               COMPUTE WR-VAL-TRM-01 ROUNDED =
                                       000 * CAM-SGV-VCAM IN CAM / 1000
               COMPUTE WR-VAL-TRM-02 ROUNDED =
                                       010 * CAM-SGV-VCAM IN CAM / 1000
               COMPUTE WR-VAL-TRM-03 ROUNDED =
                                       030 * CAM-SGV-VCAM IN CAM / 1000
               COMPUTE WR-VAL-TRM-04 ROUNDED =
                                       100 * CAM-SGV-VCAM IN CAM / 1000
               COMPUTE WR-VAL-TRM-05 ROUNDED =
                                       550 * CAM-SGV-VCAM IN CAM / 1000
           END-IF.
           SKIP1
       BC-DISPLAY-ERROR.
      *-----------------
           SET  WS-PROCESO-ERROR            TO TRUE
           DISPLAY ' '
           DISPLAY 'ERROR EN SECCION  : ' WR-SECCION
           DISPLAY ' PARRAFO          : ' WR-PARRAFO
           DISPLAY ' ARCHIVO          : ' WR-ARCHIVO
           DISPLAY ' OPERACION        : ' WR-OPERACI
           DISPLAY ' FILE STATUS      : ' WR-FILE-ST
           DISPLAY ' MENSAJE DE ERROR : ' WR-MENSAJE
           DISPLAY ' '.
           SKIP1
       BZ-FIN-DE-SECCION.
      *------------------
           EXIT.
           EJECT
       C-PROCESAR SECTION.
      *===================
       CA-PROC-PPAL.
      *-------------
           PERFORM XX-MUEVE-REG-CABECERA
           PERFORM CB-LEER-SUPVD02
           PERFORM XX-INICIALIZA-REG
           PERFORM CC-GENERA-P21-SUPER
              UNTIL (WR-FS-SUPVD02 NOT = 0 OR WS-PROCESO-ERROR)
           IF (NOT WS-PROCESO-ERROR)
               PERFORM XX-SUMA-A-RANGO
               PERFORM XX-GRABA-SUPVP21
           END-IF.
           GO CZ-FIN-DE-SECCION.
           SKIP1
       CB-LEER-SUPVD02.
      *----------------
           READ SUPVD02 END-READ.
           IF WR-FS-SUPVD02 = 0
              ADD 1                         TO WA-L-D02
           ELSE
           IF WR-FS-SUPVD02  NOT = 10
              MOVE 'C-PROCESAR'             TO WR-SECCION
              MOVE 'CB-LEER-SUPVD02 '       TO WR-PARRAFO
              MOVE 'SUPVD02     '           TO WR-ARCHIVO
              MOVE 'READ       '            TO WR-OPERACI
              MOVE WR-FS-SUPVD02            TO WR-FILE-ST
              PERFORM BC-DISPLAY-ERROR
           END-IF.
           IF (D02-NUM-RUTD > '050000000')
               MOVE 2                       TO WR-COD-CLIE
           ELSE
               MOVE 1                       TO WR-COD-CLIE
           END-IF.
           SKIP1
       XX-MUEVE-REG-CABECERA.
      *----------------------
           MOVE '016'                       TO P21-COD-INS-FIN
           MOVE 'P21'                       TO P21-IDE-ARC
030998     MOVE WP-SIG-PRO                  TO P21-SIG-PER.
           MOVE WP-ANO-PRO                  TO P21-ANO-PER.
           MOVE WP-MES-PRO                  TO P21-MES-PER.
           MOVE SPACES                      TO P21-FILLER
           PERFORM XX-GRABA-SUPVP21.
           SKIP1
       CC-GENERA-P21-SUPER.
      *--------------------
           IF (D02-IND-TDOP     = 'D' AND
               D02-NUM-DDIR     =  1  AND
               D02-IND-DCAS NOT = 'C' AND
               D02-VAL-SCON     >  0  AND
               D02-COD-TCCO     = '1105')
               IF (D02-COD-LOCA NOT = P21-COD-LOCA OR
                   WR-COD-CLIE  NOT = P21-COD-CLIE)
                   PERFORM XX-GRABA-SUPVP21
                   PERFORM XX-INICIALIZA-REG
               END-IF
               ADD D02-VAL-SCON             TO WR-VAL-SCON
               IF (D02-NUM-RUTD NOT = WR-RUT-ANT)
                   MOVE D02-NUM-RUTD        TO WR-RUT-ANT
                   PERFORM XX-SUMA-A-RANGO
               END-IF
           END-IF.
           PERFORM CB-LEER-SUPVD02.
           SKIP1
       XX-INICIALIZA-REG.
      *-----------------
           INITIALIZE P21.
           MOVE  110                        TO P21-COD-PROD IN P21
           MOVE  D02-COD-LOCA               TO P21-COD-LOCA IN P21
           IF (D02-NUM-RUTD > '050000000')
               MOVE 2                       TO P21-COD-CLIE IN P21
           ELSE
               MOVE 1                       TO P21-COD-CLIE IN P21
           END-IF.
           SKIP1
       XX-SUMA-A-RANGO.
      *----------------
           EVALUATE TRUE
             WHEN (WR-VAL-SCON > WR-VAL-TRM-05)
                   MOVE 5                   TO WR-I
             WHEN (WR-VAL-SCON > WR-VAL-TRM-04)
                   MOVE 4                   TO WR-I
             WHEN (WR-VAL-SCON > WR-VAL-TRM-03)
                   MOVE 3                   TO WR-I
             WHEN (WR-VAL-SCON > WR-VAL-TRM-02)
                   MOVE 2                   TO WR-I
             WHEN (WR-VAL-SCON > WR-VAL-TRM-01)
                   MOVE 1                   TO WR-I
           END-EVALUATE
           COMPUTE P21-VAL-DEUD(WR-I) =  P21-VAL-DEUD(WR-I) +
                                         WR-VAL-SCON * 1000
           ADD  1                           TO P21-NUM-DEUD(WR-I)
           MOVE 0                           TO WR-VAL-SCON.
           SKIP1
       XX-GRABA-SUPVP21.
      *-----------------
           WRITE P21 END-WRITE.
           IF WR-FS-SUPVP21 = 0
              ADD 1                         TO WA-G-P21
           ELSE
              MOVE 'C-PROCESAR'             TO WR-SECCION
              MOVE 'XX-GRABA-SUPVP21'       TO WR-PARRAFO
              MOVE 'SUPVP21     '           TO WR-ARCHIVO
              MOVE 'WRITE      '            TO WR-OPERACI
              MOVE WR-FS-SUPVP21            TO WR-FILE-ST
              PERFORM BC-DISPLAY-ERROR
           END-IF.
           SKIP1
       CZ-FIN-DE-SECCION.
      *------------------
           EXIT.
           EJECT
       D-TERMINAR SECTION.
      *===================
       DA-ESTADISTICAS.
      *----------------
           DISPLAY ' '
           DISPLAY ' '
           DISPLAY ' '
           DISPLAY 'INFORMES'
           DISPLAY '--------'
           DISPLAY ' '
           DISPLAY 'ESTE PROCESO NO EMITE INFORME'
           DISPLAY ' '
           DISPLAY ' '
           DISPLAY ' '
           DISPLAY 'ESTADISTICAS DE PROCESO PROGRAMA SUPPGP21 FECHA '
                    WR-FECHA-HOY
           DISPLAY '-----------------------------------------------'
           DISPLAY '    GENERA ARCHIVO D02 EN FORMATO SUPER'
           DISPLAY ' '
           DISPLAY ' '
           DISPLAY 'REG LEIDOS DE SUPVD02 : ' WA-L-D02
           DISPLAY 'REG GRABADOS  SUPVP21 : ' WA-G-P21
           DISPLAY ' '
           DISPLAY ' '
           DISPLAY 'TARJETAS DE PARAMETROS'
           DISPLAY '----------------------'
           DISPLAY ' '
           DISPLAY W-PARAMETROS
           DISPLAY ' '
           DISPLAY ' '
           DISPLAY 'MENSAJES PARA EL EXPLOTADOR'
           DISPLAY '---------------------------'
           DISPLAY ' '
           IF WS-PROCESO-OK
               DISPLAY 'NO HAY MENSAJES PARA EL EXPLOTADOR'
           ELSE
               DISPLAY 'HAY MENSAJES PARA EL EXPLOTADOR'
           END-IF.
           DISPLAY ' '
           DISPLAY ' '
           DISPLAY ' '.
           SKIP1
       DB-TERMINO.
      *-----------
           CLOSE SUPVD02 SUPVP21
           IF WS-PROCESO-ERROR
              MOVE 100                      TO RETURN-CODE
              DISPLAY ' '
              DISPLAY ' '
              DISPLAY '**********************************************'
              DISPLAY '**********************************************'
              DISPLAY '********                              ********'
              DISPLAY '******** TERMINO ERRONEO DEL PROCESO  ********'
              DISPLAY '********                              ********'
              DISPLAY '**********************************************'
              DISPLAY '**********************************************'
           ELSE
              DISPLAY ' '
              DISPLAY ' '
              DISPLAY '*****PROCESO TERMINO EN FORMA NORMAL*****'
           END-IF.
           SKIP1
       DZ-FIN-DE-SECCION.
      *------------------
           EXIT.
           EJECT
