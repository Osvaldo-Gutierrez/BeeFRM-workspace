       IDENTIFICATION DIVISION.
      *************************
       PROGRAM-ID.     SUPPCRD1.
      *AUTHOR.         DONOSO JARA OSVALDO.
      *                DATE-WRITTEN,  02/07/95.
      ******************************************************************
      *  INTERSOFT                                                     *
      *  MIGRACION A COBOL OS/390                                      *
      *  FECHA: 15 DE ABRIL DE 1998                                    *
      ******************************************************************
      ******************************************************************
      *  Sistema  : Sistema Super Bancos                               *
      *  Subsist. :                                                    *
      *  Analista : Donoso J. Osvaldo                                  *
      *  Objetivo : Cambia Rut ficticios de archivo D01 a Rut dados    *
      *             por la SBIF desde tabla TAB/RSC                    *
      *  Archivos :                                                    *
      *   Entrada : TAB-230, RUT Sobre Cien Millones (rut ficticios)   *
      *                                                                *
      *   Salida  :                                                    *
      *                                                                *
      *   Ent/Sal : SUPVD01 : Archivo D01                              *
      *                                                                *
      *   Trabajo :                                                    *
      *                                                                *
      *  Mantenciones                                                  *
      *  ============                                                  *
      *            Programador: ...........................            *
      *            Fecha      : dd/mm/aa                               *
      *            Cambio     : .....................................  *
      *                         .....................................  *
      *                         .....................................  *
      ******************************************************************
           EJECT
       ENVIRONMENT DIVISION.
      **********************
       CONFIGURATION SECTION.
      *=====================
       SPECIAL-NAMES.
                      DECIMAL-POINT IS COMMA.
       INPUT-OUTPUT SECTION.
      *=====================
       FILE-CONTROL.
           SELECT SUPVD01 ASSIGN       TO SUPVD01
                  ORGANIZATION         IS INDEXED
                  ACCESS MODE          IS DYNAMIC
                  RECORD KEY           IS D01-COD-ID01
                  FILE STATUS          IS WR-FS-SUPVD01.
           EJECT
       DATA DIVISION.
      *==============
           SKIP3
       FILE SECTION.
      *=============
       FD  SUPVD01                LABEL RECORD STANDARD
                                  RECORD CONTAINS 695 CHARACTERS
                                  BLOCK  CONTAINS 0 RECORDS.
       COPY SUPBRD01.
           SKIP1
       WORKING-STORAGE SECTION.
      *========================
       01  W-SWITCHES.
           05 WS-PROCESO                    PIC 9(01) VALUE 0.
              88 WS-PROCESO-OK       VALUE 0.
              88 WS-PROCESO-ERROR    VALUE 1.
              88 WS-PROCESO-WARNING  VALUE 2.
           SKIP1
       01  W-TABLA.
           05 WT-TABLA-RUT OCCURS 1000 TIMES INDEXED BY WI-IND.
              10 WT-RUT-SUP.
                 15 WT-RUT-SUP-L09          PIC X(09).
                 15 WT-RUT-SUP-VRF          PIC X(01).
              10 WT-RUT-FIC                 PIC X(09).
           SKIP1
       01  W-CONTADORES-Y-ACUMULADORES.
           02 WA-L-D01                      PIC 9(06) VALUE 0.
           02 WA-R-D01                      PIC 9(06) VALUE 0.
           SKIP1
       01  W-REGISTROS-DE-TRABAJO.
           05 WR-FECHA-HOY.
              10 WR-HOY-AA                  PIC X(02).
              10 WR-HOY-MM                  PIC X(02).
              10 WR-HOY-DD                  PIC X(02).
           05 WR-MENSAJES.
              10 WR-SECCION                 PIC X(15).
              10 WR-PARRAFO                 PIC X(15).
              10 WR-ARCHIVO                 PIC X(10).
              10 WR-OPERACI                 PIC X(10).
              10 WR-FILE-ST                 PIC X(02).
              10 WR-MENSAJE                 PIC X(35).
           05 WR-FS-SUPVD01                 PIC 9(02) VALUE 0.
           05 WR-GRABAR-D01                 PIC X(02).
           05 WR-RUT-ORI.
              15 WR-NUM-ORI                 PIC X(09).
              15 WR-VRF-ORI                 PIC X(01).
           05 WR-RUT-D01-L09.
              15 WR-RUT-D01-L08             PIC X(08) JUST RIGHT.
              15 WR-RUT-D01-VRF             PIC X(01).
           05 WR-I                          PIC 9(02) VALUE 0.
      ******************************************************************
      * Areas de uso para Datacom                                      *
      ******************************************************************
      *
       01  WB-UIB.
           05 FILLER                 PIC X(32) VALUE 'SUPPCRD1'.
      *
       01  WB-REQ-TAB-AREA.
           02 WB-REQ-TAB-CMD          PIC X(5) VALUE 'REDKG'.
           02 FILLER                  PIC X(3) VALUE 'TAB'.
           02 FILLER                  PIC X(5) VALUE 'TAB00'.
           02 WB-REQ-TAB-RC           PIC X(2) VALUE SPACES.
           02 FILLER                  PIC X(1).
           02 FILLER                  PIC S9(4) COMP VALUE +230.
           02 FILLER                  PIC X(58).
           02 WB-REQ-TAB-KEY-VALUE    PIC X(30) VALUE 'RSC'.
      *
      *    Registro Generico de Tablas
      *    ---------------------------
      *
      *    Nombre Registro : TAB
      *    Clave(s)        : TAB-COD-TABL(UU), TAB-STP-ITRN(UU),
      *                      TAB-CIC-TABL(UU), TAB-EXT-TABL(DC)
      *    Largo           : 194
      *    Bloqueo         : 2
      *    Observaciones   :
      *
       01  TAB.
      *
      *    Filler Compatibilidad VSAM/MVS
           03  TAB-GLS-FLAG                             PIC X(01).
      *
      *    Clave Primaria Registro
           03  TAB-KEY-IREG.
      *
      *KEY     Tipo + Codigo ( LLave Primaria )
               05  TAB-COD-TABL.
      *
      *            Codigo Tipo Tabla
                   07  TAB-COD-TTAB                     PIC X(03).
      *
      *            Codigo Tabla
                   07  TAB-COD-CTAB                     PIC X(12).
      *
      *        Time Stamp Transaccion
               05  TAB-STP-ITRN.
      *
      *            Fecha Transaccion
                   07  TAB-FEC-FTRN.
                       09  TAB-NUM-STRN                 PIC 9(02).
                       09  TAB-NUM-ATRN                 PIC 9(02).
                       09  TAB-NUM-MTRN                 PIC 9(02).
                       09  TAB-NUM-DTRN                 PIC 9(02).
      *
      *            Hora Transaccion
                   07  TAB-HRA-HRTR.
                       09  TAB-NUM-HHTR                 PIC 9(02).
                       09  TAB-NUM-MMTR                 PIC 9(02).
                       09  TAB-NUM-SSTR                 PIC 9(02).
      *
      *    Indicador Tipo Accion
           03  TAB-MSC-TACC                             PIC X(01).
      *
      *    Indicador Status
           03  TAB-MSC-STAT                             PIC X(01).
      *
      *    Indicador Vigencia                           GNS VIGE
           03  TAB-IND-VIGE  REDEFINES  TAB-MSC-STAT    PIC X(01).
      *
      *    Codigo Origen Transaccion
           03  TAB-COD-OTRN.
      *
      *        Indicador Tipo Origen
               05  TAB-MSC-TTRN                         PIC X(01).
      *
      *        Codigo Tipo Origen
               05  TAB-COD-TTRN                         PIC X(03).
      *
      *    Autor Transaccion
           03  TAB-COD-ATRN                             PIC X(12).
      *
      *KEY Tipo + Codigo ( Interno Computacional )
           03  TAB-CIC-TABL.
      *
      *        Codigo Tipo Tabla
               05  TAB-CIC-TTAB                         PIC X(03).
      *
      *        Codigo Tabla
               05  TAB-CIC-CTAB                         PIC X(12).
      *
      *    Codigo Externo
           03  TAB-EXT-TABL.
      *
      *        Codigo Tipo Tabla
               05  TAB-EXT-TTAB                         PIC X(03).
      *
      *        Codigo Tabla
               05  TAB-EXT-CTAB                         PIC X(05).
      *
      *    Descripcion Corta
           03  TAB-GLS-DCOR                             PIC X(12).
      *
      *    Abreviacion Descripcion
           03  TAB-GLS-ABRV                             PIC X(05).
      *
      *    Descripcion del Codigo
           03  TAB-GLS-DESC                             PIC X(40).
      *
      *    Datos Anexos
           03  TAB-GLS-DATA.
               05  TAB-GLS-DAT1.
                   07  TAB-COD-DAT1     OCCURS 10       PIC X(01).
               05  TAB-GLS-DAT2.
                   07  TAB-COD-DAT2     OCCURS 10       PIC X(02).
               05  TAB-GLS-DAT3.
                   07  TAB-COD-DAT3     OCCURS 10       PIC X(03).
      *
      *    Clave Soundex
           03  TAB-SNX-TABL.
               05  TAB-SNX-TTAB                         PIC X(03).
               05  TAB-SNX-CTAB                         PIC X(03).
      *
      *    Variables de Tablas
       01  TAB-VARI.
      *
      *    Codigo Sistema
           03  TAB-COD-SIST                             PIC X(03).
      *
       01  WB-ELEM-LIS                PIC X(11) VALUE 'TAB00'.
      *
           EJECT
       PROCEDURE DIVISION.
      *===================
       A-CONTROL SECTION.
      *=================
       AA-INICIALIZACION.
           ENTRY 'DBMSCBL'.
      *
           PERFORM B-INICIALIZAR.
           SKIP1
       AB-PROCESAMIENTO.
           IF WS-PROCESO-OK
              PERFORM C-PROCESAR
           END-IF.
           SKIP1
       AC-TERMINACION.
           PERFORM D-TERMINAR.
           SKIP1
       AZ-FIN-DE-SECCION.
           STOP RUN.
           EJECT
       B-INICIALIZAR SECTION.
      *======================
       BA-PROC-PPAL.
      *-------------
           PERFORM BB-ABRIR-ARCHIVOS.
           PERFORM BB-CARGA-TABLA-RSC.
           GO BZ-FIN-DE-SECCION.
       BB-ABRIR-ARCHIVOS.
      *------------------
           OPEN I-O SUPVD01.

           IF WR-FS-SUPVD01 NOT = 0 AND NOT = 97
              MOVE 'B-INICIALIZAR'          TO WR-SECCION
              MOVE 'BB-ABRIR-ARCHIVOS'      TO WR-PARRAFO
              MOVE 'SUPVD01    '            TO WR-ARCHIVO
              MOVE 'OPEN       '            TO WR-OPERACI
              MOVE WR-FS-SUPVD01            TO WR-FILE-ST
              PERFORM BC-DISPLAY-ERROR
           END-IF.
           ACCEPT WR-FECHA-HOY FROM DATE.
           SKIP1
       BB-CARGA-TABLA-RSC.
      *-------------------
           INITIALIZE W-TABLA.
           PERFORM XX-LEER-TAB.
           MOVE 'REDNX'                     TO WB-REQ-TAB-CMD
           PERFORM XX-LEER-TAB.
           SET WI-IND                       TO 1
           DISPLAY 'TABLA DE RUT FICTICIOS CARGADA...'
           PERFORM UNTIL (WS-PROCESO-ERROR  OR WB-REQ-TAB-RC NOT = '  '
                       OR TAB-COD-TTAB NOT = 'RSC')
                   MOVE TAB-COD-CTAB        TO WT-RUT-SUP(WI-IND)
                   MOVE TAB-GLS-DATA        TO WT-RUT-FIC(WI-IND)
                   DISPLAY 'RUT SUPER : '      WT-RUT-SUP(WI-IND)
                       ' RUT FICTICIO : '      WT-RUT-FIC(WI-IND)
                   SET WI-IND               UP BY 1
                   PERFORM XX-LEER-TAB
                   IF (WI-IND > 1000)
                       MOVE 'B-INICIALIZAR'      TO WR-SECCION
                       MOVE 'BB-CARGA-TABLA-RSC' TO WR-PARRAFO
                       MOVE 'TAB'                TO WR-ARCHIVO
                       MOVE WB-REQ-TAB-CMD       TO WR-OPERACI
                       MOVE WB-REQ-TAB-RC        TO WR-FILE-ST
                       MOVE 'SE LLENO TABLA INT' TO WR-MENSAJE
                       PERFORM BC-DISPLAY-ERROR
                   END-IF
           END-PERFORM.
       XX-LEER-TAB.
      *------------
           MOVE SPACES                   TO WB-REQ-TAB-RC
           CALL 'DBNTRY' USING WB-UIB WB-REQ-TAB-AREA TAB WB-ELEM-LIS
           IF (WB-REQ-TAB-RC NOT = '  ' AND NOT = '14')
               MOVE 'B-INICIALIZAR'      TO WR-SECCION
               MOVE 'BB-LEER-TAB'        TO WR-PARRAFO
               MOVE 'TAB'                TO WR-ARCHIVO
               MOVE WB-REQ-TAB-CMD       TO WR-OPERACI
               MOVE WB-REQ-TAB-RC        TO WR-FILE-ST
               MOVE WB-REQ-TAB-KEY-VALUE TO WR-MENSAJE
               PERFORM BC-DISPLAY-ERROR
           END-IF.
           SKIP1
       BC-DISPLAY-ERROR.
      *-----------------
           SET  WS-PROCESO-ERROR            TO TRUE
           DISPLAY ' '
           DISPLAY 'ERROR EN SECCION  : ' WR-SECCION
           DISPLAY ' PARRAFO          : ' WR-PARRAFO
           DISPLAY ' ARCHIVO          : ' WR-ARCHIVO
           DISPLAY ' OPERACION        : ' WR-OPERACI
           DISPLAY ' FILE STATUS      : ' WR-FILE-ST
           DISPLAY ' MENSAJE DE ERROR : ' WR-MENSAJE
           DISPLAY ' '.
           SKIP1
       BZ-FIN-DE-SECCION.
      *------------------
           EXIT.
           EJECT
       C-PROCESAR SECTION.
      *===================
       CA-PROC-PPAL.
      *-------------
           PERFORM CB-LEER-SUPVD01
           PERFORM CC-MODIFICA-D01
              UNTIL (WR-FS-SUPVD01 NOT = 0 OR WS-PROCESO-ERROR)
           GO CZ-FIN-DE-SECCION.
           SKIP1
       CB-LEER-SUPVD01.
      *----------------
           READ SUPVD01 NEXT END-READ.
           IF WR-FS-SUPVD01 = 0
              ADD 1                         TO WA-L-D01
           ELSE
           IF WR-FS-SUPVD01  NOT = 10
              MOVE 'C-PROCESAR'             TO WR-SECCION
              MOVE 'CB-LEER-SUPVD01 '       TO WR-PARRAFO
              MOVE 'SUPVD01     '           TO WR-ARCHIVO
              MOVE 'READ       '            TO WR-OPERACI
              MOVE WR-FS-SUPVD01            TO WR-FILE-ST
              PERFORM BC-DISPLAY-ERROR
           END-IF.
           SKIP1
       CC-MODIFICA-D01.
      *----------------
           MOVE 'NO'                        TO WR-GRABAR-D01
           MOVE D01-COD-RUTD                TO WR-RUT-D01-L08
                                               WR-NUM-ORI
           MOVE D01-VRF-RUTD                TO WR-RUT-D01-VRF
                                               WR-VRF-ORI
           SET WI-IND                       TO 1
           SEARCH WT-TABLA-RUT
             AT END
                 CONTINUE
             WHEN (WT-RUT-SUP-L09(WI-IND) = SPACES)
                 CONTINUE
             WHEN (WT-RUT-FIC(WI-IND) = WR-RUT-D01-L09)
                 DISPLAY 'RUT FICTICIO : ' D01-COD-RUTD
                 D01-VRF-RUTD ' CAMBIADO POR RUT SUPER '
                 WT-RUT-SUP-L09(WI-IND) WT-RUT-SUP-VRF(WI-IND)
                 MOVE WT-RUT-SUP-L09(WI-IND) TO D01-COD-RUTD
                 MOVE WT-RUT-SUP-VRF(WI-IND) TO D01-VRF-RUTD
                 MOVE 'SI'                   TO WR-GRABAR-D01
           END-SEARCH.

           IF (WR-GRABAR-D01 = 'SI')
               PERFORM XX-GRABAR-SUPVD01
               MOVE WR-NUM-ORI               TO D01-COD-RUTD
               MOVE WR-VRF-ORI               TO D01-VRF-RUTD
               PERFORM XX-ELIMINAR-SUPVD01
           END-IF.
           PERFORM CB-LEER-SUPVD01.
           SKIP1
       XX-ELIMINAR-SUPVD01.
      *--------------------
           READ SUPVD01 END-READ.
           IF WR-FS-SUPVD01 = 0
              DELETE SUPVD01 END-DELETE
           END-IF.

           IF WR-FS-SUPVD01 NOT = 0
              MOVE 'C-PROCESAR'             TO WR-SECCION
              MOVE 'XX-ELIMINAR-SUPVD01'    TO WR-PARRAFO
              MOVE 'SUPVD01     '           TO WR-ARCHIVO
              MOVE 'DELETE   '              TO WR-OPERACI
              MOVE WR-FS-SUPVD01            TO WR-FILE-ST
              PERFORM BC-DISPLAY-ERROR
           END-IF.
           SKIP1
       XX-GRABAR-SUPVD01.
      *-------------------
           WRITE D01 END-WRITE.
           IF WR-FS-SUPVD01 = 0
              ADD 1                         TO WA-R-D01
           ELSE
              MOVE 'C-PROCESAR'             TO WR-SECCION
              MOVE 'XX-GRABAR-SUPVD01'      TO WR-PARRAFO
              MOVE 'SUPVD01     '           TO WR-ARCHIVO
              MOVE 'WRITE    '              TO WR-OPERACI
              MOVE WR-FS-SUPVD01            TO WR-FILE-ST
              PERFORM BC-DISPLAY-ERROR
           END-IF.
           SKIP1
       CZ-FIN-DE-SECCION.
      *------------------
           EXIT.
           EJECT
       D-TERMINAR SECTION.
      *===================
       DA-ESTADISTICAS.
      *----------------
           DISPLAY ' '
           DISPLAY ' '
           DISPLAY ' '
           DISPLAY 'INFORMES'
           DISPLAY '--------'
           DISPLAY ' '
           DISPLAY 'ESTE PROCESO NO EMITE INFORME'
           DISPLAY ' '
           DISPLAY ' '
           DISPLAY ' '
           DISPLAY 'ESTADISTICAS DE PROCESO PROGRAMA SUPPCRD1 FECHA '
                    WR-FECHA-HOY
           DISPLAY '-----------------------------------------------'
           DISPLAY '    CAMBIA RUT EN ARCHIVOS D01 '
           DISPLAY ' '
           DISPLAY ' '
           DISPLAY 'REG LEIDOS DE SUPVD01  : ' WA-L-D01
           DISPLAY 'REG REGRABADOS SUPVD01 : ' WA-R-D01
           DISPLAY ' '
           DISPLAY ' '
           DISPLAY 'TARJETAS DE PARAMETROS'
           DISPLAY '----------------------'
           DISPLAY ' '
           DISPLAY ' '
           DISPLAY ' '
           DISPLAY 'MENSAJES PARA EL EXPLOTADOR'
           DISPLAY '---------------------------'
           DISPLAY ' '
           IF WS-PROCESO-OK
               DISPLAY 'NO HAY MENSAJES PARA EL EXPLOTADOR'
           ELSE
               DISPLAY 'HAY MENSAJES PARA EL EXPLOTADOR'
           END-IF.
           DISPLAY ' '
           DISPLAY ' '
           DISPLAY ' '.
           SKIP1
       DB-TERMINO.
      *-----------
           CLOSE SUPVD01
           IF WS-PROCESO-ERROR
              MOVE 100                      TO RETURN-CODE
              DISPLAY ' '
              DISPLAY ' '
              DISPLAY '**********************************************'
              DISPLAY '**********************************************'
              DISPLAY '********                              ********'
              DISPLAY '******** TERMINO ERRONEO DEL PROCESO  ********'
              DISPLAY '********                              ********'
              DISPLAY '**********************************************'
              DISPLAY '**********************************************'
           ELSE
              DISPLAY ' '
              DISPLAY ' '
              DISPLAY '*****PROCESO TERMINO EN FORMA NORMAL*****'
           END-IF.
           SKIP1
       DZ-FIN-DE-SECCION.
      *------------------
           EXIT.
           EJECT
