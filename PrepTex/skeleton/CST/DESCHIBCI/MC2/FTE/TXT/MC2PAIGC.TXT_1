*% IF SETTAG							       
*% FNCPQ = "180122"
*% VSNPQ = "01-00"
*% FNCPU = "180122"
*% VSNPU = "01-00"
*% END
*%! Codigo adicional
*% NO_TIENE_TIMESTAMP = FALSE
*% NO_HDR_CST = TRUE
*% HDR_CST = FALSE
*% LARGO_TOTAL_COMMAREA = 3000
*% FMT_CHI = TRUE
*% GEN_BCI = TRUE
*% PGM_PTC = TRUE
*% NO_INC_TAB = TRUE
*% IF FIN_PGM_STAT 
           03 PGM-STAT.
              05 PGM-STAT-TAB.
                 88 PGM-STAT-TAB-NUL    VALUE '  '.
                 07 PGM-STT1-TAB        VALUE '2' PIC X(01).
                    88 PGM-STAT-TAB-OKS VALUE '0'.
                 07 PGM-STT2-TAB        VALUE '3' PIC X(01).
*% END
*% IF WSS
      *<<<< WSS
       COPY GNSBRMSC.
       COPY GNSWGHOY.
       01 WSS-VARI.
          03 WSS-I                                  PIC 9(02).
          03 WSS-J                                  PIC 9(02).
          03 WSS-IR-FIN                             PIC X(01).
          03 WSS-NTRA     VALUE 0                   PIC 9(02).
          03 WCC-0        VALUE 0                   PIC 9(01).
          03 WCC-1        VALUE 1                   PIC 9(01).
          03 WCC-2        VALUE 2                   PIC 9(01).
          03 WCC-3        VALUE 3                   PIC 9(01).
          03 WCC-4        VALUE 4                   PIC 9(01).
          03 WCC-5        VALUE 5                   PIC 9(01).
          03 WCC-6        VALUE 6                   PIC 9(01).
          03 WCC-7        VALUE 7                   PIC 9(01).
          03 WCC-8        VALUE 8                   PIC 9(01).
          03 WCC-9        VALUE 9                   PIC 9(01).
          03 WCC-10       VALUE 10                  PIC 9(02).
          03 WCC-11       VALUE 11                  PIC 9(02).
          03 WCC-12       VALUE 12                  PIC 9(02).
          03 WCC-13       VALUE 13                  PIC 9(02).
          03 WCC-23       VALUE 23                  PIC 9(02).
          03 WCC-S        VALUE 'S'                 PIC X(01).
          03 WCC-N        VALUE 'N'                 PIC X(01).
          03 WCC-E        VALUE 'E'                 PIC X(01).
          03 WCC-ING      VALUE 'ING'               PIC X(03).
          03 WCC-MIT      VALUE 'MIT'               PIC X(03).
          03 WCC-MOD      VALUE 'MOD'               PIC X(03).
          03 WCC-ROL      VALUE 'GNSACCSSIMUL'      PIC X(12).
          03 WCC-GNS      VALUE 'GNS'               PIC X(03).
          03 WCC-TAB      VALUE 'TAB'               PIC X(03).
          03 WCC-TIO      VALUE 'TIO'               PIC X(03).
          03 WCC-MC2      VALUE 'MC2'               PIC X(03).
          03 WCC-SGC      VALUE 'SGC'               PIC X(03).
          03 WCC-BAN      VALUE 'BAN'               PIC X(03).
          03 WCC-MSC      VALUE 'MSC'               PIC X(03).
          03 WCC-VLR      VALUE 'VLR'               PIC X(03).
          03 WCC-TDI      VALUE 'TDI'               PIC X(03).
          03 WCC-TMO      VALUE 'TMO'               PIC X(03).
          03 WCC-BGC      VALUE 'BGC'               PIC X(03).
          03 WCC-TRM      VALUE 'TRM'               PIC X(03).
          03 WCC-AST      VALUE '*  '               PIC X(03).
          03 WCC-TICL     VALUE 'TICL'              PIC X(04).
          03 WCC-VIGE     VALUE 'VIGE'              PIC X(04).
          03 WCC-CATE     VALUE 'CATE'              PIC X(04).
          03 VEC-TRM.
             05 TRM-VAL-TRAM                        OCCURS 11 .
                07 TRM-VEC-TRAM                     PIC 9(06).
                07 TRM-VEC-PORC                     PIC 9(03)V9(04).
                07 TRM-VEC-VIGE                     PIC X(01).

          03 WSS-KEY-BGC.
             05 WSS-KEY-BNCA PIC X(03).
             05 WSS-KEY-PROD PIC X(03).
             05 WSS-KEY-TCLI PIC X(01).
             05 WSS-KEY-CATE PIC X(03).
             05 WSS-KEY-FILL PIC X(02).
             
          03  MC2-DAT-BGC.
              05 BGC-MON-MMIN PIC 9(09)V9(04).
              05 BGC-MON-MMAX PIC 9(09)V9(04).
              05 BGC-VAL-NDIA PIC 9(02).
              05 BGC-VAL-TIPO PIC X(01).
              05 BGC-VAL-MONE PIC X(06).
              05 BGC-VAL-TRAM PIC X(03).
              05 BGC-VAL-FILL PIC X(22).

          03  MC2-DAT-TRM.
              05 TRM-VAL-PORC PIC 9(03)V9(04).
              05 TRM-MON-FILL PIC X(53).

          03 WCC-GLS-MS01 VALUE 'CODBANC  INV'      PIC X(12).
          03 WCC-GLS-MS02 VALUE 'CODBANC  INV'      PIC X(12).
          03 WCC-GLS-MS03 VALUE 'TIO    NEX  '      PIC X(12).
          03 WCC-GLS-MS04 VALUE 'TIO    NEX  '      PIC X(12).
          03 WCC-GLS-MS05 VALUE 'CLI    NEX  '      PIC X(12).
          03 WCC-GLS-MS06 VALUE 'CLI    NEX  '      PIC X(12).
          03 WCC-GLS-MS07 VALUE 'TCLI     NOE'      PIC X(12).
          03 WCC-GLS-MS08 VALUE 'CATE     NEX'      PIC X(12).
          03 WCC-GLS-MS09 VALUE 'CATE     NVI'      PIC X(12).
          03 WCC-GLS-MS10 VALUE 'TRM      NEX'      PIC X(12).
          03 WCC-GLS-MS12 VALUE 'MAX NOT> MIN'      PIC X(12).
          03 WCC-GLS-MS13 VALUE 'TIPO     NEX'      PIC X(12).
          03 WCC-GLS-MS14 VALUE 'TIPO     NVI'      PIC X(12).
          03 WCC-GLS-MS15 VALUE 'VCOC   INV  '      PIC X(12).
          03 WCC-GLS-MS16 VALUE 'VCOC   INV  '      PIC X(12).
          03 WCC-GLS-MS17 VALUE 'VIG    NOVLD'      PIC X(12).
          03 WCC-GLS-MS18 VALUE 'VIG    NOVLD'      PIC X(12). 
          03 WCC-GLS-MS19 VALUE 'TRAM     NIN'      PIC X(12).
          03 WCC-GLS-MS20 VALUE 'VI01     NEX'      PIC X(12).
          03 WCC-GLS-MS22 VALUE 'RE01     INC'      PIC X(12).
          03 WCC-GLS-MS23 VALUE 'VI02     NEX'      PIC X(12).
          03 WCC-GLS-MS25 VALUE 'RE02     INC'      PIC X(12).
          03 WCC-GLS-MS26 VALUE 'VI03     NEX'      PIC X(12).
          03 WCC-GLS-MS28 VALUE 'RE03     INC'      PIC X(12).
          03 WCC-GLS-MS29 VALUE 'VI04     NEX'      PIC X(12).
          03 WCC-GLS-MS31 VALUE 'RE04     INC'      PIC X(12).
          03 WCC-GLS-MS32 VALUE 'VI05     NEX'      PIC X(12).
          03 WCC-GLS-MS34 VALUE 'RE05     INC'      PIC X(12).
          03 WCC-GLS-MS35 VALUE 'VI06     NEX'      PIC X(12).
          03 WCC-GLS-MS37 VALUE 'RE06     INC'      PIC X(12).
          03 WCC-GLS-MS38 VALUE 'VI07     NEX'      PIC X(12).
          03 WCC-GLS-MS40 VALUE 'RE07     INC'      PIC X(12).
          03 WCC-GLS-MS41 VALUE 'VI08     NEX'      PIC X(12).
          03 WCC-GLS-MS43 VALUE 'RE08     INC'      PIC X(12).
          03 WCC-GLS-MS44 VALUE 'VI09     NEX'      PIC X(12).
          03 WCC-GLS-MS46 VALUE 'RE09     INC'      PIC X(12).
          03 WCC-GLS-MS47 VALUE 'VI10     NEX'      PIC X(12).
          03 WCC-GLS-MS49 VALUE 'RE10     INC'      PIC X(12).
          03 WCC-GLS-MS50 VALUE 'VI11     NEX'      PIC X(12).
          03 WCC-GLS-MS52 VALUE 'RE11     INC'      PIC X(12).
          03 WCC-GLS-MS53 VALUE 'TRA1=TRA2   '      PIC X(12).
          03 WCC-GLS-MS21 VALUE 'TMON     NVA'      PIC X(12).
          03 WCC-GLS-MS24 VALUE 'TMON     NVI'      PIC X(12).
      *>>>>
*% END

*% IF WSS_DTC
      *<<<< WSS_DTC
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-MSC-REQA==.
      *>>>>
*% END

*% IF EOF_PU
      *<<<< EOF_PU
      * SE MODIFICAN LOS TRAMOS DE LA PANTALLA (COMANDO MIT)
      
       PRO-MIT-TRA SECTION.
       INI-PRO-MIT-TRA.
           MOVE SPACES                   TO TAB.
           PERFORM GET-FHOY.
           PERFORM CAR-PAN-VEC.
           MOVE WCC-1   IN WSS-VARI      TO WSS-I IN WSS-VARI.
           MOVE WCC-MC2 IN WSS-VARI      TO FIO-SIST.
           MOVE WCC-TRM IN WSS-VARI      TO TAB-COD-TTAB IN TAB.
       LOOP-MIT.
           IF WSS-I IN WSS-VARI > WCC-11 OR
              TRM-VEC-TRAM IN WSS-VARI(WSS-I) NOT > ZEROES
              GO TO FIN-PRO-MIT-TRA.
              
           MOVE SPACES TO TAB-COD-CTAB IN TAB.
           MOVE FRM-BGC-TRAM  IN IGC-FLD TO 
           TAB-COD-CTAB IN TAB(WCC-1:WCC-3).
           MOVE TRM-VEC-TRAM  IN WSS-VARI (WSS-I) TO 
           TAB-COD-CTAB IN TAB(WCC-7:WCC-6).
           MOVE FIO-GET-KEY-UPD TO FIO-CMND.
           PERFORM GNS-FIO-TAB.
           IF FIO-STAT = WCC-23
      * HACER INSERT
              MOVE SPACES TO TAB-COD-CTAB IN TAB
              MOVE FRM-BGC-TRAM  IN IGC-FLD TO 
              TAB-COD-CTAB IN TAB(WCC-1:WCC-3)
              MOVE TRM-VEC-TRAM  IN WSS-VARI (WSS-I) TO 
              TAB-COD-CTAB IN TAB(WCC-7:WCC-6)
              MOVE TRM-VEC-VIGE IN WSS-VARI (WSS-I) 
              TO TAB-IND-VIGE IN TAB
              MOVE TRM-VEC-PORC IN WSS-VARI (WSS-I) 
              TO TRM-VAL-PORC IN MC2-DAT-TRM
              MOVE SPACES TO TRM-MON-FILL IN MC2-DAT-TRM
              MOVE MC2-DAT-TRM IN WSS-VARI TO TAB-GLS-DATA IN TAB
              MOVE HOY-STP-ITRN             TO TAB-STP-ITRN
              MOVE FIO-PUT TO FIO-CMND
              PERFORM GNS-FIO-TAB
           ELSE
              IF FIO-STAT-OKS
      * HACER UPDATE
                 MOVE TRM-VEC-VIGE IN WSS-VARI (WSS-I) 
                 TO TAB-IND-VIGE IN TAB
                 MOVE TRM-VEC-PORC IN WSS-VARI (WSS-I) 
                 TO TRM-VAL-PORC IN MC2-DAT-TRM
                 MOVE SPACES TO TRM-MON-FILL IN MC2-DAT-TRM
                 MOVE MC2-DAT-TRM IN WSS-VARI TO TAB-GLS-DATA IN TAB
                 MOVE HOY-STP-ITRN             TO TAB-STP-ITRN
                 MOVE FIO-MOD TO FIO-CMND
                 PERFORM GNS-FIO-TAB
              ELSE
      * HACER ROLLBACK
                 MOVE FIO-ULK-REC TO FIO-CMND
                 PERFORM GNS-FIO-TAB
                 MOVE FIO-BCK-OUT TO FIO-CMND
                 PERFORM GNS-FIO-TAB
                 MOVE WCC-GNS TO MSG-COD-SIST
                 MOVE WCC-ROL IN WSS-VARI TO MSG-COD-MENS
                 PERFORM GET-MSG
                 MOVE MSG-GLS-DESC TO FRM-MENS
                 MOVE WCC-2 IN WSS-VARI TO SCR-IERR
                 GO TO FIN-PRO-MIT-TRA.

           ADD WCC-1 IN WSS-VARI TO WSS-I.
           GO TO LOOP-MIT.
       FIN-PRO-MIT-TRA.
           EXIT.
      *>>>>
*% END

*% IF PGM_INI
      *<<<< PGM_INI
      * SE SETEA EN 0 EL NUMERO DE TRAMOS VALIDOS INGRESADOS 
      * EN LA PANTALLA

           MOVE WCC-0  IN WSS-VARI TO WSS-NTRA IN WSS-VARI.
      *>>>>
*% END

*% IF FIN_CMN_ING
      *<<<< FIN_CMN_ING

      * SI LOS TRAMOS YA EXISTEN EN LA TABLA TRM NO SE INGRESAN
      * SI NO EXISTEN SE INGRESAN (COMANDO ING)
           IF NOT FIO-STAT-OKS
              GO TO FIN-CMN-ING.
      * SE LEE LLAVE TABLA TRM
           MOVE WCC-1   IN WSS-VARI      TO WSS-I IN WSS-VARI.
           MOVE SPACES                   TO VEC-TRM.
           MOVE WCC-MC2 IN WSS-VARI      TO FIO-SIST.
           MOVE WCC-TRM IN WSS-VARI      TO TAB-COD-TTAB IN TAB.
           MOVE SPACES                   TO TAB-COD-CTAB IN TAB.
           MOVE FRM-BGC-TRAM  IN IGC-FLD TO 
           TAB-COD-CTAB IN TAB(WCC-1:WCC-3).
           MOVE FIO-GET-NLS TO FIO-CMND.

       LOOP-REGISTRO.
           PERFORM GNS-FIO-TAB.
           IF NOT FIO-STAT-OKS
              IF WSS-I > WCC-1
                 MOVE ZEROES TO FIO-STAT
                 GO TO FIN-CMN-ING
              ELSE
                 PERFORM CAR-PAN-VEC
                 PERFORM ING-VEC-TRM
                 GO TO FIN-CMN-ING.

      * SI EL TRAMO YA EXISTE EN LA TABLA TRM SE RELLENA EL VECTOR CON
      * LOS DATOS DE LA TABLA TRM
           IF TAB-COD-TTAB IN TAB = WCC-TRM IN WSS-VARI AND
              TAB-COD-CTAB IN TAB (WCC-1:WCC-3) = 
              FRM-BGC-TRAM IN IGC-FLD
              MOVE TAB-GLS-DATA IN TAB TO MC2-DAT-TRM IN WSS-VARI
              MOVE TAB-COD-CTAB IN TAB (WCC-7:WCC-6)  
              TO TRM-VEC-TRAM(WSS-I)
              MOVE TRM-VAL-PORC IN WSS-VARI TO TRM-VEC-PORC (WSS-I)
              MOVE TAB-IND-VIGE IN TAB TO TRM-VEC-VIGE(WSS-I)
              ADD WCC-1 IN WSS-VARI TO WSS-I
              MOVE FIO-GET-NXT TO FIO-CMND
              GO TO LOOP-REGISTRO
           ELSE
              IF WSS-I > WCC-1
                 MOVE ZEROES TO FIO-STAT
                 GO TO FIN-CMN-ING
              ELSE
                 PERFORM CAR-PAN-VEC
                 PERFORM ING-VEC-TRM
                 GO TO FIN-CMN-ING.
      *>>>>
*% END

*% IF FIN_FND_KEY
      *<<<< FIN_FND_KEY
      * SE RESPALDAN LOS DATOS DE LA BGC

           MOVE TAB-GLS-DATA IN TAB TO MC2-DAT-BGC IN WSS-VARI.
      *>>>>
*% END

*% IF EOF
      *<<<< EOF
       COPY GNSBFMSC.
       COPY GNSBGHOY.

      * SE CARGAN LOS REGISTROS DE LA TABLA TRM CON 
      * LOS DATOS DEL VECTOR
      
       ING-VEC-TRM SECTION.
       INI-ING-VEC-TRM.
           MOVE SPACES                   TO TAB.
           MOVE WCC-1   IN WSS-VARI      TO WSS-I IN WSS-VARI.
           MOVE WCC-MC2 IN WSS-VARI      TO FIO-SIST.
           MOVE WCC-TRM IN WSS-VARI      TO TAB-COD-TTAB IN TAB.
           MOVE SPACES                   TO TAB-COD-CTAB IN TAB.
       LOOP-INGRESO.
           IF TRM-VEC-TRAM (WSS-I) > ZEROES
              AND WSS-I NOT > WCC-11
              MOVE FRM-BGC-TRAM  IN IGC-FLD 
              TO TAB-COD-CTAB IN TAB(WCC-1:WCC-3)
              MOVE SPACES                   
              TO TAB-COD-CTAB IN TAB(WCC-4:WCC-3)
              MOVE TRM-VEC-TRAM IN WSS-VARI (WSS-I) 
              TO TAB-COD-CTAB IN TAB(WCC-7:WCC-6)
              MOVE TRM-VEC-VIGE IN WSS-VARI (WSS-I) 
              TO TAB-IND-VIGE IN TAB
              MOVE TRM-VEC-PORC IN WSS-VARI (WSS-I) 
              TO TRM-VAL-PORC IN MC2-DAT-TRM
              MOVE SPACES TO TRM-MON-FILL IN MC2-DAT-TRM
              MOVE MC2-DAT-TRM IN WSS-VARI TO TAB-GLS-DATA IN TAB
              PERFORM GET-FHOY
              MOVE HOY-STP-ITRN            TO TAB-STP-ITRN
              MOVE FIO-PUT TO FIO-CMND
              PERFORM GNS-FIO-TAB
              IF FIO-STAT-OKS
                 ADD WCC-1 IN WSS-VARI TO WSS-I
                 GO TO LOOP-INGRESO
              ELSE
                 GO TO FIN-ING-VEC-TRM
           ELSE
              IF WSS-I NOT > WCC-11
                 ADD WCC-1 TO WSS-I
                 GO TO LOOP-INGRESO
              ELSE
                 GO TO FIN-ING-VEC-TRM.
       FIN-ING-VEC-TRM.
           EXIT.

      * SE CARGA EL VECTOR DE LA TABLA TRM CON LOS DATOS DE LA PANTALLA
 
       CAR-PAN-VEC SECTION.
       INI-CAR-PAN-VEC.
           MOVE WCC-1 TO WSS-I
           MOVE SPACES TO VEC-TRM.
           IF FRM-TRM-TR01 IN IGC-FLD > ZEROES
               MOVE FRM-TRM-TR01 TO TRM-VEC-TRAM IN WSS-VARI (WSS-I)
               MOVE FRM-TRM-PO01 TO TRM-VEC-PORC IN WSS-VARI (WSS-I)
               MOVE FRM-TRM-VI01 TO TRM-VEC-VIGE IN WSS-VARI (WSS-I)
               ADD WCC-1 TO WSS-I.
           IF FRM-TRM-TR02 IN IGC-FLD > ZEROES
               MOVE FRM-TRM-TR02 TO TRM-VEC-TRAM IN WSS-VARI (WSS-I)
               MOVE FRM-TRM-PO02 TO TRM-VEC-PORC IN WSS-VARI (WSS-I)
               MOVE FRM-TRM-VI02 TO TRM-VEC-VIGE IN WSS-VARI (WSS-I)
               ADD WCC-1 TO WSS-I.
           IF FRM-TRM-TR03 IN IGC-FLD > ZEROES
               MOVE FRM-TRM-TR03 TO TRM-VEC-TRAM IN WSS-VARI (WSS-I)
               MOVE FRM-TRM-PO03 TO TRM-VEC-PORC IN WSS-VARI (WSS-I)
               MOVE FRM-TRM-VI03 TO TRM-VEC-VIGE IN WSS-VARI (WSS-I)
               ADD WCC-1 TO WSS-I.
            IF FRM-TRM-TR04 IN IGC-FLD > ZEROES
               MOVE FRM-TRM-TR04 TO TRM-VEC-TRAM IN WSS-VARI (WSS-I)
               MOVE FRM-TRM-PO04 TO TRM-VEC-PORC IN WSS-VARI (WSS-I)
               MOVE FRM-TRM-VI04 TO TRM-VEC-VIGE IN WSS-VARI (WSS-I)
               ADD WCC-1 TO WSS-I.
           IF FRM-TRM-TR05 IN IGC-FLD > ZEROES
               MOVE FRM-TRM-TR05 TO TRM-VEC-TRAM IN WSS-VARI (WSS-I)
               MOVE FRM-TRM-PO05 TO TRM-VEC-PORC IN WSS-VARI (WSS-I)
               MOVE FRM-TRM-VI05 TO TRM-VEC-VIGE IN WSS-VARI (WSS-I)
               ADD WCC-1 TO WSS-I.
           IF FRM-TRM-TR06 IN IGC-FLD > ZEROES
               MOVE FRM-TRM-TR06 TO TRM-VEC-TRAM IN WSS-VARI (WSS-I)
               MOVE FRM-TRM-PO06 TO TRM-VEC-PORC IN WSS-VARI (WSS-I)
               MOVE FRM-TRM-VI06 TO TRM-VEC-VIGE IN WSS-VARI (WSS-I)
               ADD WCC-1 TO WSS-I.
           IF FRM-TRM-TR07 IN IGC-FLD > ZEROES
               MOVE FRM-TRM-TR07 TO TRM-VEC-TRAM IN WSS-VARI (WSS-I)
               MOVE FRM-TRM-PO07 TO TRM-VEC-PORC IN WSS-VARI (WSS-I)
               MOVE FRM-TRM-VI07 TO TRM-VEC-VIGE IN WSS-VARI (WSS-I)
               ADD WCC-1 TO WSS-I.
           IF FRM-TRM-TR08 IN IGC-FLD > ZEROES
               MOVE FRM-TRM-TR08 TO TRM-VEC-TRAM IN WSS-VARI (WSS-I)
               MOVE FRM-TRM-PO08 TO TRM-VEC-PORC IN WSS-VARI (WSS-I)
               MOVE FRM-TRM-VI08 TO TRM-VEC-VIGE IN WSS-VARI (WSS-I)
               ADD WCC-1 TO WSS-I.
           IF FRM-TRM-TR09 IN IGC-FLD > ZEROES
               MOVE FRM-TRM-TR09 TO TRM-VEC-TRAM IN WSS-VARI (WSS-I)
               MOVE FRM-TRM-PO09 TO TRM-VEC-PORC IN WSS-VARI (WSS-I)
               MOVE FRM-TRM-VI09 TO TRM-VEC-VIGE IN WSS-VARI (WSS-I)
               ADD WCC-1 TO WSS-I.
           IF FRM-TRM-TR10 IN IGC-FLD > ZEROES
               MOVE FRM-TRM-TR10 TO TRM-VEC-TRAM IN WSS-VARI (WSS-I)
               MOVE FRM-TRM-PO10 TO TRM-VEC-PORC IN WSS-VARI (WSS-I)
               MOVE FRM-TRM-VI10 TO TRM-VEC-VIGE IN WSS-VARI (WSS-I)
               ADD WCC-1 TO WSS-I.
           IF FRM-TRM-TR11 IN IGC-FLD > ZEROES
               MOVE FRM-TRM-TR11 TO TRM-VEC-TRAM IN WSS-VARI (WSS-I)
               MOVE FRM-TRM-PO11 TO TRM-VEC-PORC IN WSS-VARI (WSS-I)
               MOVE FRM-TRM-VI11 TO TRM-VEC-VIGE IN WSS-VARI (WSS-I)
               ADD WCC-1 TO WSS-I.
       FIN-CAR-PAN-VEC.
           EXIT.
      *>>>>
*% END

*% IF INI_CMN_MOD
      *<<<< INI_CMN_MOD
      * PROCESA COMANDO MODIFICACION DE TRAMOS (MIT)

           IF SCR-CMND = WCC-MIT
              PERFORM PRO-MIT-TRA
              GO TO FIN-CMN-MOD.
      *>>>>
*% END
