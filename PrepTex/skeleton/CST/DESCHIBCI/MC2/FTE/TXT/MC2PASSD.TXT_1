*%! Codigo adicional para archivo
*% NO_TIENE_TIMESTAMP = TRUE
*% NO_HDR_CST = TRUE
*% HDR_CST = TRUE
*% LARGO_TOTAL_COMMAREA = 3000
*% FMT_CHI = TRUE
*% GEN_BCI = TRUE
*% PGM_PTC = TRUE
*% USA_PFSCONQUE = TRUE
*% LARGO_MI_COMMAREA = 0
*% IF SETTAG
*% VSNPQ = "05.11.21.1"
*% VSNPU = "05.11.21.1"
*% FNCPQ = "MC2-DEVSEG"
*% FNCPU = "MC2-DEVSEG"
*% END
*% IF WSS
*% IF PGM_PQ
      *<<<< WSS
       COPY COLBRDLC.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-DLC-REQA==.
       COPY GNSWGHOY.
       COPY GNSWGFEC.
       COPY COLWGISC.
       COPY MC2WGSSD.

       01  WSS-VARI.
           03 WSS-COD-MENS                            PIC X(12).
           03 WSS-S                                   PIC 9(02).
           03 WSS-SMAX     VALUE 10                   PIC 9(02).
           03 WSS-I                                   PIC 9(02).
           03 WSS-IMAX     VALUE 15                   PIC 9(02).
           03 WSS-GLS-LSEG.
              05 WSS-IND-SELC-IDX  OCCURS 15 TIMES.
                 07 WSS-IND-SELC                      PIC X(01).
                 07 WSS-COD-SCXE                      PIC X(06).
                 07 WSS-COD-SMC2                      PIC X(03).
                 07 WSS-GLS-DSEG                      PIC X(30).
                 07 WSS-IND-PMDV                      PIC X(01).
                 07 WSS-VAL-MNTO                      PIC 9(11)V9(04).
                 07 WSS-COD-VCOC                      PIC X(06).
                 07 WSS-SGV-VAL1                      PIC 9(11)V9(04).
                 07 WSS-SGV-VAL2                      PIC 9(11)V9(04).
                 07 WSS-SGV-VAL3                      PIC 9(11)V9(04).
                 07 WSS-SGV-VAL4                      PIC 9(11)V9(04).
                 07 WSS-SGV-VAL5                      PIC 9(11)V9(04).
                 07 WSS-SGV-VAL6                      PIC 9(11)V9(04).
                 07 WSS-SGV-VAL7                      PIC 9(11)V9(04).
                 07 WSS-SGV-VAL8                      PIC 9(11)V9(04).

           03 WSS-COD-PESO VALUE '0999  '             PIC X(06).
           03 WSS-COD-SIST VALUE 'CRE'                PIC X(03).
           03 WSS-MSC-SACA VALUE 'A'                  PIC X(01).
           03 WSS-COD-TCAE VALUE 'CAE'                PIC X(03).
           03 WSS-COD-SCOL VALUE 'COL'                PIC X(03).
           03 WSS-COD-SVSN VALUE 'VSN'                PIC X(03).
           03 WSS-COD-SPRO VALUE 'PRO'                PIC X(03).
           03 WSS-COD-AUTO VALUE 'DPSAUTOMAT  '       PIC X(12).
           03 WSS-CIC-IOPC VALUE SPACES               PIC X(12).
           03 WSS-SI       VALUE 'S'                  PIC X(01).
      *PVG INI 07-ENE-2015
           03 WSS-COD-SEGD VALUE 'PRECIO   '          PIC X(09).
      *PVG FIN 07-ENE-2015

           03 WSS-MSC-CANC VALUE 'CTT'                PIC X(03).
           03 WSS-FEC-FPRE.
              05 WSS-NUM-SPRE        VALUE ZEROES     PIC 9(02).
              05 WSS-NUM-APRE        VALUE ZEROES     PIC 9(02).
              05 WSS-NUM-MPRE        VALUE ZEROES     PIC 9(02).
              05 WSS-NUM-DPRE        VALUE ZEROES     PIC 9(02).

           03 WSS-GLS-MEN1 VALUE 'SISTEMA NO INTEGRADO' PIC X(20).
      *>>>> WSS
*% END
*% IF PGM_PU
      *<<<< WSS
       COPY COLWGGSS.
       COPY GNSWGHOY.
       COPY GNSWGFEC.

       01  WSS-VARI.
           03 WSS-I                                      PIC 9(02).
           03 WSS-IMAX     VALUE 15                      PIC 9(02).
           03 WSS-S                                      PIC 9(02).
           03 WSS-SMAX     VALUE 15                      PIC 9(02).
           03 WSS-IND-SLOK VALUE 'S'                     PIC X(01).
           03 WSS-COD-MENS                               PIC X(12).
           03 WSS-IND-SGDV                               PIC X(01).
           03 WSS-GLS-MEN2 VALUE 'FAVOR INFORMAR S O N'  PIC X(20).
           03 WSS-GLS-MEN3 VALUE 'SELECCION INVALIDA  '  PIC X(20).

           03 WSS-FEC-FPRE.
              05 WSS-NUM-SPRE        VALUE ZEROES        PIC 9(02).
              05 WSS-NUM-APRE        VALUE ZEROES        PIC 9(02).
              05 WSS-NUM-MPRE        VALUE ZEROES        PIC 9(02).
              05 WSS-NUM-DPRE        VALUE ZEROES        PIC 9(02).
      *>>>>
*% END
      *>>>>
*% END
*% IF INI_FIO
*% IF PGM_PQ
      *<<<< INI_FIO
           PERFORM PRO-CLR-VSEG.
           PERFORM GET-FHOY.
           MOVE HOY-FHOY IN HOY-VARI TO WSS-FEC-FPRE IN WSS-VARI.
      *>>>> INI_FIO
*% END
*% IF PGM_PU
      *<<<< INI_FIO
           PERFORM PRO-CLR-RSEG.
           PERFORM GET-FHOY.
           MOVE HOY-FHOY IN HOY-VARI TO WSS-FEC-FPRE IN WSS-VARI.
      *>>>> INI_FIO
*% END
      *>>>>
*% END
*% IF FIN_FND_KEY
      *<<<< FIN_FND_KEY
           IF FIO-STAT = FIO-STAT-NEX
              GO TO FIN-FND-KEY.

           PERFORM PRO-VAL-IOPE.
           IF WSS-COD-MENS IN WSS-VARI > SPACES
              GO TO MSG-FND-KEY.

           PERFORM PRO-VAL-ORIG.
           IF WSS-COD-MENS IN WSS-VARI > SPACES
              GO TO MSG-FND-KEY.

           PERFORM PRO-OBT-LSEG.
           IF WSS-COD-MENS IN WSS-VARI > SPACES
              GO TO MSG-FND-KEY.

           PERFORM PRO-PUT-VSEG.
           IF WSS-COD-MENS IN WSS-VARI > SPACES
              GO TO MSG-FND-KEY.

           GO TO FIN-FND-KEY.
       MSG-FND-KEY.
           MOVE WSS-COD-MENS IN WSS-VARI TO MSG-COD-MENS.

           MOVE 'COL'        TO MSG-COD-SIST.
           PERFORM GET-MSG.
           MOVE MSG-GLS-DESC TO FRM-MENS.
           MOVE '00'         TO FIO-STAT.
           MOVE SCR-STAT-CON TO SCR-STAT.
           MOVE SCR-STAT-CON TO SCR-STPP.
           GO TO FIN-FND-KEY.
      *>>>>
*% END
*% IF EOF_PQ
      *<<<< EOF_PQ
       COPY COLBFDLC.
       COPY GNSBGHOY.
       COPY GNSBVCOD.
       COPY GNSBVTAB.

       COPY MC2BKSSD.


       PRO-OBT-LSEG SECTION.
       INI-PRO-OBT-LSEG.
      *<<<<
           PERFORM PRO-LNK-PISC.
           IF WSS-COD-MENS IN WSS-VARI > SPACES
              GO TO FIN-PRO-OBT-LSEG.

           PERFORM PRO-OBT-VSEG.
           IF WSS-COD-MENS IN WSS-VARI > SPACES
              GO TO FIN-PRO-OBT-LSEG.

           MOVE ZEROES TO WSS-S IN WSS-VARI.
           MOVE ZEROES TO WSS-I IN WSS-VARI.
       LUP-PRO-OBT-LSEG.
           ADD 1 TO WSS-S IN WSS-VARI.
           IF WSS-S IN WSS-VARI > WSS-SMAX IN WSS-VARI
              GO TO CNT-PRO-OBT-LSEG.
           IF SSD-COD-OSGC(WSS-S) > SPACES
              ADD 1 TO WSS-I IN WSS-VARI
              MOVE SSD-COD-OSGC(WSS-S)         TO WSS-COD-SCXE(WSS-I)
              MOVE SSD-VAL-OSGC(WSS-S)         TO WSS-VAL-MNTO(WSS-I)
              IF OPC-MSC-TVOC IN OPC = '0'
                 MOVE WSS-COD-PESO IN WSS-VARI TO WSS-COD-VCOC(WSS-I)
              ELSE
                 MOVE OPC-COD-VCOC IN OPC      TO WSS-COD-VCOC(WSS-I).

           GO TO LUP-PRO-OBT-LSEG.
       CNT-PRO-OBT-LSEG.
           PERFORM PRO-IND-PMDV.
       FIN-PRO-OBT-LSEG.
           EXIT.

       PRO-CLR-VSEG SECTION.
       INI-PRO-CLR-VSEG.
           MOVE ZEROES TO WSS-I IN WSS-VARI.
       LUP-PRO-CLR-VSEG.
           ADD 1 TO WSS-I IN WSS-VARI.
           IF WSS-I IN WSS-VARI > WSS-IMAX IN WSS-VARI
              GO TO FIN-PRO-CLR-VSEG.
           MOVE SPACES TO WSS-IND-SELC(WSS-I).
           MOVE SPACES TO WSS-COD-SCXE(WSS-I).
           MOVE SPACES TO WSS-COD-SMC2(WSS-I).
           MOVE SPACES TO WSS-GLS-DSEG(WSS-I).
           MOVE SPACES TO WSS-IND-PMDV(WSS-I).
           MOVE ZEROES TO WSS-VAL-MNTO(WSS-I).
           MOVE SPACES TO WSS-COD-VCOC(WSS-I).
           MOVE ZEROES TO WSS-SGV-VAL1(WSS-I).
           MOVE ZEROES TO WSS-SGV-VAL2(WSS-I).
           MOVE ZEROES TO WSS-SGV-VAL3(WSS-I).
           MOVE ZEROES TO WSS-SGV-VAL4(WSS-I).
           MOVE ZEROES TO WSS-SGV-VAL5(WSS-I).
           MOVE ZEROES TO WSS-SGV-VAL6(WSS-I).
           MOVE ZEROES TO WSS-SGV-VAL7(WSS-I).
           MOVE ZEROES TO WSS-SGV-VAL8(WSS-I).
           GO TO LUP-PRO-CLR-VSEG.
       FIN-PRO-CLR-VSEG.
           EXIT.

       PRO-IND-PMDV SECTION.
       INI-PRO-IND-PMDV.
           MOVE ZEROES TO WSS-I IN WSS-VARI.
       LUP-PRO-IND-PMDV.
           ADD 1 TO WSS-I IN WSS-VARI.
           IF WSS-I IN WSS-VARI > WSS-IMAX IN WSS-VARI
              GO TO FIN-PRO-IND-PMDV.
           IF WSS-COD-SCXE(WSS-I) NOT > SPACES
              MOVE 'X' TO WSS-IND-SELC(WSS-I)
              GO TO NXT-PRO-IND-PMDV.

           MOVE 'COL'               TO TAB-COD-SIST FIO-SIST.
           MOVE 'PDS'               TO TAB-COD-TTAB IN TAB.
           MOVE WSS-COD-SCXE(WSS-I) TO TAB-COD-CTAB IN TAB.
           MOVE FIO-GET-KEY         TO FIO-CMND.
           PERFORM GNS-FIO-TAB.
           IF NOT FIO-STAT-OKS
              MOVE 'N' TO WSS-IND-PMDV(WSS-I)
              MOVE 'S' TO WSS-IND-SELC(WSS-I)
              GO TO NXT-PRO-IND-PMDV.

           MOVE TAB-GLS-DESC IN TAB    TO WSS-GLS-DSEG(WSS-I).
           MOVE TAB-COD-DAT3 IN TAB(1) TO WSS-COD-SMC2(WSS-I).

           IF TAB-IND-VIGE IN TAB = 'N'
              MOVE 'N' TO WSS-IND-PMDV(WSS-I)
              MOVE 'S' TO WSS-IND-SELC(WSS-I)
              GO TO NXT-PRO-IND-PMDV.

           MOVE 'S' TO WSS-IND-PMDV(WSS-I).
           IF TAB-COD-DAT1 IN TAB(1) = 'S'
              MOVE 'S' TO WSS-IND-SELC(WSS-I).
       NXT-PRO-IND-PMDV.
           GO TO LUP-PRO-IND-PMDV.
       FIN-PRO-IND-PMDV.
           EXIT.

       PRO-PUT-VSEG SECTION.
       INI-PRO-PUT-VSEG.
           MOVE ZEROES TO WSS-I IN WSS-VARI.
       LUP-PRO-PUT-VSEG.
           ADD 1 TO WSS-I IN WSS-VARI.
           IF WSS-I IN WSS-VARI > WSS-IMAX IN WSS-VARI
              GO TO FIN-PRO-PUT-VSEG.
           IF WSS-COD-SCXE(WSS-I) NOT > SPACES
              GO TO NXT-PRO-PUT-VSEG.
           MOVE WSS-IND-SELC(WSS-I) TO FRM-IND-SELC IN SSD-FLD(WSS-I).
           MOVE WSS-COD-SCXE(WSS-I) TO FRM-COD-SCXE IN SSD-FLD(WSS-I).
           MOVE WSS-COD-SMC2(WSS-I) TO FRM-COD-SMC2 IN SSD-FLD(WSS-I).
           MOVE WSS-GLS-DSEG(WSS-I) TO FRM-GLS-DSEG IN SSD-FLD(WSS-I).
           MOVE WSS-IND-PMDV(WSS-I) TO FRM-IND-PMDV IN SSD-FLD(WSS-I).
           MOVE WSS-VAL-MNTO(WSS-I) TO FRM-VAL-MNTO IN SSD-FLD(WSS-I).
           MOVE WSS-COD-VCOC(WSS-I) TO FRM-COD-VCOC IN SSD-FLD(WSS-I).
       NXT-PRO-PUT-VSEG.
           GO TO LUP-PRO-PUT-VSEG.
       FIN-PRO-PUT-VSEG.
           EXIT.

       PRO-VAL-IOPE SECTION.
       INI-PRO-VAL-IOPE.
      *PVG INI 07-ENE-2015
           IF NOT FIO-STAT-OKS
              MOVE 'OPC    NEX' TO WSS-COD-MENS IN WSS-VARI
              GO TO FIN-PRO-VAL-IOPE.
      *PVG FIN 07-ENE-2015
           IF OPC-MSC-STAT IN OPC NOT = WSS-MSC-SACA IN WSS-VARI
              MOVE 'SSDOPEESTINV' TO WSS-COD-MENS IN WSS-VARI
           ELSE
           IF OPC-COD-TOOC IN OPC = WSS-COD-TCAE IN WSS-VARI
              MOVE 'SSDOPECAEINV' TO WSS-COD-MENS IN WSS-VARI.
      *PVG INI 07-ENE-2015
           IF OPC-VAL-SCRE IN OPC NOT > ZEROES
              MOVE 'SSDOPESINSLD' TO WSS-COD-MENS IN WSS-VARI
              GO TO FIN-PRO-VAL-IOPE.
      *PVG FIN 07-ENE-2015
       FIN-PRO-VAL-IOPE.
           EXIT.

       PRO-LNK-PISC SECTION.
       INI-PRO-LNK-PISC.
           MOVE OPC-CIC-IOPC IN OPC      TO ISC-CIC-IOPC IN ISC-CMMA.
           MOVE WSS-MSC-CANC IN WSS-VARI TO ISC-MSC-CANC IN ISC-CMMA.
           MOVE WSS-FEC-FPRE IN WSS-VARI TO ISC-FEC-FPRE IN ISC-CMMA.

           MOVE ZEROES                   TO ISC-VAL-SCRE IN ISC-CMMA.
           MOVE ZEROES                   TO ISC-NUM-IVEN IN ISC-CMMA.
           MOVE ZEROES                   TO ISC-FEC-FVEN IN ISC-CMMA.
           MOVE SPACES                   TO ISC-MSC-MCAN IN ISC-CMMA.
           MOVE ZEROES                   TO ISC-SGV-PREP IN ISC-CMMA.
           MOVE SPACES                   TO ISC-SCR-CMND IN ISC-CMMA.
           MOVE ZEROES                   TO ISC-SGV-VCPR IN ISC-CMMA.

           MOVE SCR-QIDD     TO ISC-QIDD.
           MOVE SCR-LIDD     TO ISC-LIDD.
           MOVE ISC-CMMA     TO SYS-CMMA.
           MOVE SYS-LINK     TO SYS-CMND.
           MOVE ISC-COLPPISC TO SYS-PROG.
           MOVE ISC-TCMA     TO SYS-TCMA.
           PERFORM GNS-PRO-SYS.
           MOVE SYS-CMMA     TO ISC-CMMA.
           MOVE ISC-COD-MENS IN ISC-CMMA TO WSS-COD-MENS IN WSS-VARI.
       FIN-PRO-LNK-PISC.
           EXIT.

       PRO-OBT-VSEG SECTION.
       INI-PRO-OBT-VSEG.
           MOVE FRM-COD-SIST IN SSD-FLD  TO SSD-COD-SIST  IN SSD-VARI.
           MOVE WSS-FEC-FPRE IN WSS-VARI TO SSD-FEC-FPRO  IN SSD-VARI.
           MOVE OPC-COD-VCOC IN OPC      TO SSD-COD-VCOC  IN SSD-VARI.

           MOVE ISC-INF-SEG         TO SSD-INF-SEG        IN SSD-VARI.
           MOVE ISC-DAT-FORM-SALDO  TO SSD-DAT-FORM-SALDO IN SSD-VARI.
           MOVE ISC-DAT-FORM-CUOTA  TO SSD-DAT-FORM-CUOTA IN SSD-VARI.

           PERFORM MC2-LNK-PSSD.
           MOVE SSD-COD-MENS IN SSD-CMMA TO WSS-COD-MENS IN WSS-VARI.
       FIN-PRO-OBT-VSEG.
           EXIT.
       PRO-VAL-ORIG SECTION.
       INI-PRO-VAL-ORIG.

           MOVE 'SSDOPESINMC2' TO WSS-COD-MENS IN WSS-VARI.
           MOVE OPC-CIC-IOPC IN OPC TO WSS-CIC-IOPC IN WSS-VARI.
           MOVE WSS-COD-SCOL IN WSS-VARI TO TAB-COD-SIST FIO-SIST.
           MOVE WSS-COD-SVSN IN WSS-VARI TO TAB-COD-TTAB IN TAB.
           MOVE WSS-COD-AUTO IN WSS-VARI TO TAB-COD-CTAB IN TAB.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM GNS-FIO-TAB.
           IF NOT (FIO-STAT-OKS AND TAB-IND-VIGE IN TAB = WSS-SI)
               GO TO FIN-PRO-VAL-ORIG.

           IF OPC-IND-RENO IN OPC = WSS-COD-SPRO IN WSS-VARI
               PERFORM BUS-FEC-FCOL.

           IF OPC-COD-SEGD IN OPC NOT = WSS-COD-SEGD IN WSS-VARI
              GO TO FIN-PRO-VAL-ORIG.

           IF OPC-FEC-FCOL IN OPC <  TAB-GLS-DATA IN TAB(1:8)
               GO TO FIN-PRO-VAL-ORIG.

           PERFORM LEE-OPC-INI.
           MOVE SPACES TO WSS-COD-MENS IN WSS-VARI.

       FIN-PRO-VAL-ORIG.
           EXIT.
       BUS-FEC-FCOL SECTION.
       INI-BUS-FEC-FCOL.
           MOVE SPACES TO DLC.
           MOVE OPC-CIC-IOPC IN OPC TO DLC-CIC-IOPC IN DLC.
           MOVE ZEROES TO DLC-NUM-IDLC IN DLC.
           MOVE FIO-GET-NLS TO FIO-CMND.
           PERFORM COL-FIO-DLC.
           IF NOT FIO-STAT-OKS OR
              OPC-CIC-IOPC IN OPC NOT = DLC-CIC-IOPC IN DLC
               GO TO FIN-BUS-FEC-FCOL.

           MOVE OPC-CIC-IOPC IN OPC TO WSS-CIC-IOPC IN WSS-VARI.
           MOVE DLC-CIC-IOCO IN DLC TO OPC-CIC-IOPC IN OPC.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM COL-FIO-OPC.
           IF NOT FIO-STAT-OKS
               PERFORM LEE-OPC-INI.

       FIN-BUS-FEC-FCOL.
           EXIT.
       LEE-OPC-INI SECTION.
       INI-LEE-OPC-INI.
           IF WSS-CIC-IOPC IN WSS-VARI = OPC-CIC-IOPC IN OPC
               GO TO FIN-LEE-OPC-INI.

           MOVE WSS-CIC-IOPC IN WSS-VARI TO OPC-CIC-IOPC IN OPC.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM COL-FIO-OPC.
       FIN-LEE-OPC-INI.
           EXIT.
      *>>>>
*% END
*% IF INI_CMN_ACC
      *<<<< INI_CMN_ACC
           PERFORM KEY-ALL-SSD.
           PERFORM PRO-INF-SGDV.
           GO TO FIN-CMN-ACC.
      *>>>>
*% END
*% IF EOF_PU
      *<<<< EOF_PU
       COPY GNSBGHOY.

       PRO-CLR-RSEG SECTION.
       INI-PRO-CLR-RSEG.
           MOVE ZEROES TO WSS-S IN WSS-VARI.
       LUP-PRO-CLR-RSEG.
           ADD 1 TO WSS-S IN WSS-VARI.
           IF WSS-S IN WSS-VARI > WSS-SMAX IN WSS-VARI
              GO TO FIN-PRO-CLR-RSEG.
           MOVE SPACES TO GSS-COD-SEGC(WSS-S).
           GO TO LUP-PRO-CLR-RSEG.
       FIN-PRO-CLR-RSEG.
           EXIT.

       PRO-INF-SGDV SECTION.
       INI-PRO-INF-SGDV.
           MOVE SPACES TO WSS-COD-MENS.
           MOVE 'N'    TO WSS-IND-SGDV.
           MOVE ZEROES TO WSS-I IN WSS-VARI.
           MOVE ZEROES TO WSS-S IN WSS-VARI.
       LUP-PRO-INF-SGDV.
           ADD 1 TO WSS-I IN WSS-VARI.
           IF WSS-I IN WSS-VARI > WSS-IMAX IN WSS-VARI
              GO TO EXT-PRO-INF-SGDV.
           IF FRM-IND-SELC IN SSD-FLD(WSS-I) = WSS-IND-SLOK
              MOVE 'S' TO WSS-IND-SGDV
              ADD 1 TO WSS-S IN WSS-VARI
              MOVE FRM-COD-SCXE IN SSD-FLD(WSS-I) TO
                   GSS-COD-SEGC(WSS-S).
       NXT-PRO-INF-SGDV.
           GO TO LUP-PRO-INF-SGDV.
       EXT-PRO-INF-SGDV.
           PERFORM PRO-LNK-PGSS.
           IF WSS-COD-MENS IN WSS-VARI > SPACES
              MOVE 'COL'          TO MSG-COD-SIST
              MOVE 'SSDCXEERRINF' TO MSG-COD-MENS
              PERFORM GET-MSG
              MOVE MSG-GLS-DESC   TO FRM-MENS
              GO TO FIN-PRO-INF-SGDV.

           IF WSS-IND-SGDV = 'S'
              MOVE 'COL'          TO MSG-COD-SIST
              MOVE 'SSDCXE OKINF' TO MSG-COD-MENS
              PERFORM GET-MSG
              MOVE MSG-GLS-DESC   TO FRM-MENS
           ELSE
              MOVE 'COL'          TO MSG-COD-SIST
              MOVE 'SSDCXE NOINF' TO MSG-COD-MENS
              PERFORM GET-MSG
              MOVE MSG-GLS-DESC   TO FRM-MENS.
       FIN-PRO-INF-SGDV.
           EXIT.

       PRO-LNK-PGSS SECTION.
       INI-PRO-LNK-PGSS.
           MOVE OPC-CIC-IOPC IN OPC      TO GSS-CIC-IOPC IN GSS-CMMA.
           MOVE WSS-FEC-FPRE IN WSS-VARI TO GSS-FEC-FSEL IN GSS-CMMA.

           MOVE SCR-QIDD     TO GSS-QIDD.
           MOVE SCR-LIDD     TO GSS-LIDD.
           MOVE GSS-CMMA     TO SYS-CMMA.
           MOVE SYS-LINK     TO SYS-CMND.
           MOVE GSS-COLPPGSS TO SYS-PROG.
           MOVE GSS-TCMA     TO SYS-TCMA.
           PERFORM GNS-PRO-SYS.
           MOVE SYS-CMMA     TO GSS-CMMA.
           MOVE GSS-COD-MENS IN GSS-CMMA TO WSS-COD-MENS IN WSS-VARI.
       FIN-PRO-LNK-PGSS.
           EXIT.
      *>>>>
*% END
