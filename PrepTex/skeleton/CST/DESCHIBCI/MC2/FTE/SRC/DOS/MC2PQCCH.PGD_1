       IDENTIFICATION DIVISION.
      *========================
       PROGRAM-ID.   MC2PQCCH.
       AUTHOR.       BEE.
       DATE-WRITTEN. 19-Feb-19 04:36 PM.

      * NOMBRE PROGRAMA                   MC2PQCCH
      * VERSION PGM                       3.1
      * VERSION SKL                       07.08.21
      * OPCION                            CON
      * ARCHIVO BASE                      MC2RCC
      * PANTALLA                          MC2CCH
      * INP/OUT                           DATACOM
      * TAMANO COMMAREA                   250

      * 07-AGO-2015 COSTO FONDO QHP X PRODUCTO
      * 02-DIC-2015 NUMERO DE PLAZOS X PARAMETRO MC2/NPZ
      * 14-DIC-2015 NUMERO DE PLAZOS X PARAMETRO MC2/NPZ   
      *=============================================================*
      * MANTENCION : VARIABLES CHIP EN MC2
      * ETIQUETA   : *OGB-INI 16-MAR-2016 VARIABLES CHIP EN MC2
      * OBJETIVO   : AGREGAR NUEVOS CRITERIOS DE EVALUACION DE TASA
      * FECHA      : MARZO-2016
      * RESPONSABLE: CIMA-OGB
      *=============================================================*

       ENVIRONMENT DIVISION.
      *=====================
       CONFIGURATION SECTION.
      *----------------------
       SPECIAL-NAMES.
               DECIMAL-POINT IS COMMA.
       DATA DIVISION.
      *==============

       WORKING-STORAGE SECTION.
      *------------------------
      * COPY GNSWGSCR.
       COPY GNSWGCVT.
       77  WSS-TAG-MC2PQCCH-INI PIC X(125) VALUE                        
           '<IDNPGM NOM=$MC2PQCCH$ SKL=$07.08.21$ VSN=${vsnpq}$        
      -    'GEN=$19-Feb-19 04:36 PM$ FNC=${fncpq}$/>'.    

       COPY GNSWCSCR.
      *PTC-INI
      *PTC-SUB
      * COPY GNSWVSCR.
       COPY GNSWV3CR.
      *PTC-FIN
      *<<<< FIN_SCR_VARI                                                
           03 SCR-NUM-PANT               PIC 9(0003).                   
           03 SCR-CCH-FLD                PIC X(1085).                   
      *>>>>                                                             
       COPY MC2WICCH.

       COPY MC2BRRCC.


       COPY GNSWVIDD.
       COPY GNSWGRQA.
       COPY GNSWGUIB.
       COPY GNSWGELS.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-RCC-REQA==.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-TAB-REQA==.
       COPY GNSBRTAB.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-MSC-REQA==.
       COPY GNSBRMSC.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-MSG-REQA==.
       COPY GNSBRMSG.
       COPY GNSWCFIO.
       COPY GNSWVFIO.
      *PTC-INI
      *PTC-SUB
      * ISP  10-MAY-2001 13:46:35 
      * COPY GNSWGFRM.
       COPY GNSWG3CF.
       COPY GNSWGTSK.
       COPY GNSWGQUE.
      *PTC-FIN
       COPY GNSWVNUM.
       COPY GNSWCNUM.
       COPY GNSWGFEC.
       COPY GNSWGHOY.
       COPY GNSWCVRF.
       COPY GNSWVVRF.
       COPY GNSWGIDC.
       COPY GNSWGSYS.

      *<<<< WSS_DTC                                                     
       COPY TABBROFI.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-OFI-REQA==.
       COPY TABBRCAM.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-CAM-REQA==.
       COPY SGCBRDBC.                                                   
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-DBC-REQA==.        
       COPY SGCBRDCP.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-DCP-REQA==.
       COPY COLBRPOC.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-POC-REQA==.

       COPY TABBRPLN.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-PLN-REQA==.
       COPY TABBRPRD.
       COPY GNSWGRQA REPLACING ==ADR-REQA== BY ==ADR-PRD-REQA==.
                                                                        
       01  WSS-VARI.                                                    
           03  WSS-GLS-TAUX.                                             
               05 WSS-COD-TTIO                         PIC X(03).        
               05 WSS-COD-TAUX                         PIC X(03).        
               05 WSS-GLS-FIL1                         PIC X(06).        
           03  WSS-STP-FCON.
               05  WSS-FEC-FCON.
                   07  WSS-NUM-SCON                    PIC 9(02).
                   07  WSS-NUM-ACON                    PIC 9(02).
                   07  WSS-NUM-MCON                    PIC 9(02).
                   07  WSS-NUM-DCON                    PIC 9(02).
               05  WSS-HRA-HCON.
                   07  WSS-NUM-HHCN                    PIC 9(02).
                   07  WSS-NUM-MMCN                    PIC 9(02).
                   07  WSS-NUM-SSCN                    PIC 9(02).
           03  WSS-GLS-DAT1.                                             
               05 WSS-COD-SIST                         PIC X(03).        
               05 WSS-GLS-FILL                         PIC X(07).        
           03  WSS-COD-VCOC.
               05  WSS-MSC-TVOC                        PIC X(01).
               05  WSS-COD-CVOC                        PIC X(03).
               05  WSS-COD-TCOC                        PIC X(02).
           03  WSS-FEC-FNAC.
               05  WSS-NUM-SNAC                        PIC 9(02).
               05  WSS-NUM-ANAC                        PIC 9(02).
               05  WSS-NUM-MNAC                        PIC 9(02).
               05  WSS-NUM-DNAC                        PIC 9(02).
           03  WSS-FEC-FCUR.                                              
               05 WSS-NUM-SCUR                         PIC 9(02).        
               05 WSS-NUM-ACUR                         PIC 9(02).        
               05 WSS-NUM-MCUR                         PIC 9(02).        
               05 WSS-NUM-DCUR                         PIC 9(02).        
           03  WSS-FEC-FVEN.                                             
               05 WSS-NUM-SVEN                         PIC 9(02).        
               05 WSS-NUM-AVEN                         PIC 9(02).        
               05 WSS-NUM-MVEN                         PIC 9(02).        
               05 WSS-NUM-DVEN                         PIC 9(02).        
           03  WSS-FEC-FMVT.                                             
               05 WSS-NUM-SMVT                         PIC 9(02).        
               05 WSS-NUM-AMVT                         PIC 9(02).        
               05 WSS-NUM-MMVT                         PIC 9(02).        
               05 WSS-NUM-DMVT                         PIC 9(02).        
           03  WSS-IND-CORP           VALUE 'N'        PIC X(01).        

           03  WSS-IND-NCLI           VALUE 'N'        PIC X(01).
           03  WSS-IDC-ICLI.
               05  WSS-NUM-ICLI                        PIC X(08).
               05  WSS-IND-ICLI                        PIC X(01).
               05  WSS-GLS-ICLI                        PIC X(03).
               05  WSS-VRF-ICLI                        PIC X(01).
               05  WSS-GLS-FNCL                        PIC X(47).
      *----------------------------------------------------------------*
           03  WSS-NUM-PZOI VALUE ZEROES               PIC 9(03).
           03  WSS-NUM-MTOI VALUE ZEROES               PIC 9(09).
           03  WSS-NUM-MTMX VALUE  999999999           PIC 9(09).
           03  WSS-GLS-RPPH.
               05  WSS-GLS-RPPH-F1                     PIC X(03).
               05  WSS-GLS-PZO1                        PIC X(03).
               05  WSS-NUM-PZO1 REDEFINES WSS-GLS-PZO1 PIC 9(03).
               05  WSS-GLS-RPPH-F2                     PIC X(03).
               05  WSS-GLS-PZO2                        PIC X(03).
               05  WSS-NUM-PZO2 REDEFINES WSS-GLS-PZO2 PIC 9(03).
               05  WSS-GLS-RPPH-F3                     PIC X(03).
               05  WSS-GLS-PZO3                        PIC X(03).
               05  WSS-NUM-PZO3 REDEFINES WSS-GLS-PZO3 PIC 9(03).
               05  WSS-GLS-RPPH-F4                     PIC X(03).
               05  WSS-GLS-PZO4                        PIC X(03).
               05  WSS-NUM-PZO4 REDEFINES WSS-GLS-PZO4 PIC 9(03).
               05  WSS-GLS-RPPH-F5                     PIC X(03).
               05  WSS-GLS-PZO5                        PIC X(03).
               05  WSS-NUM-PZO5 REDEFINES WSS-GLS-PZO5 PIC 9(03).
               05  WSS-GLS-RPPH-F6                     PIC X(03).
               05  WSS-GLS-PZO6                        PIC X(03).
               05  WSS-NUM-PZO6 REDEFINES WSS-GLS-PZO6 PIC 9(03).
               05  WSS-GLS-RPPH-F7                     PIC X(03).
               05  WSS-GLS-PZO7                        PIC X(03).
               05  WSS-NUM-PZO7 REDEFINES WSS-GLS-PZO7 PIC 9(03).
               05  WSS-GLS-RPPH-F8                     PIC X(03).
               05  WSS-GLS-PZO8                        PIC X(03).
               05  WSS-NUM-PZO8 REDEFINES WSS-GLS-PZO8 PIC 9(03).
               05  WSS-GLS-RPPH-F9                     PIC X(03).
               05  WSS-GLS-PZO9                        PIC X(03).
               05  WSS-NUM-PZO9 REDEFINES WSS-GLS-PZO9 PIC 9(03).
               05  WSS-GLS-RPPH-F0                     PIC X(03).
               05  WSS-GLS-PZO0                        PIC X(03).
               05  WSS-NUM-PZO0 REDEFINES WSS-GLS-PZO0 PIC 9(03).

           03  WSS-GLS-RMPH.
               05  WSS-GLS-RMPH-F1                     PIC X(03).
               05  WSS-GLS-MTO1                        PIC X(09).
               05  WSS-NUM-MTO1 REDEFINES WSS-GLS-MTO1 PIC 9(09).
               05  WSS-GLS-RMPH-F2                     PIC X(03).
               05  WSS-GLS-MTO2                        PIC X(09).
               05  WSS-NUM-MTO2 REDEFINES WSS-GLS-MTO2 PIC 9(09).
               05  WSS-GLS-RMPH-F3                     PIC X(03).
               05  WSS-GLS-MTO3                        PIC X(09).
               05  WSS-NUM-MTO3 REDEFINES WSS-GLS-MTO3 PIC 9(09).
               05  WSS-GLS-RMPH-F4                     PIC X(03).
               05  WSS-GLS-MTO4                        PIC X(09).
               05  WSS-NUM-MTO4 REDEFINES WSS-GLS-MTO4 PIC 9(09).
               05  WSS-GLS-RMPH-F5                     PIC X(03).
               05  WSS-GLS-MTO5                        PIC X(09).
               05  WSS-NUM-MTO5 REDEFINES WSS-GLS-MTO5 PIC 9(09).

           03  WSS-COD-PESO                            PIC X(06).
           03  WSS-COD-UEFE                            PIC X(06).
           03  WSS-SGV-VCAM                            PIC 9(11)V9(04).
      *----------------------------------------------------------------*
           03  WSS-NUM-PFIL               VALUE ZEROES PIC 9(02).
           03  WSS-NUM-PCOL               VALUE ZEROES PIC 9(02).
           03  WSS-NUM-MFIL               VALUE 7      PIC 9(02).
           03  WSS-NUM-MCOL               VALUE 7      PIC 9(02).
           03  WSS-GLS-MTRZ.
               05  VEC-GLS-FILA OCCURS 7.
                   07  VEC-GLS-COLU OCCURS 7.
                       09  VEC-SGV-CRED               PIC  9(11)V9(04).
                       09  VEC-NUM-NVEN               PIC  9(03).
      *----------------------------------------------------------------*
           03  WSS-NUM-MMC2           VALUE 50        PIC  9(03).
           03  WSS-NUM-PMC2           VALUE ZEROES    PIC  9(03).
           03  WSS-GLS-PMC2.
               05  VEC-GLS-PMC2 OCCURS 50.
                   09  WSS-SGV-CRED                   PIC 9(11)V9(04).
                   09  WSS-NUM-NVEN                   PIC 9(03).
                   09  WSS-SGV-TASA                   PIC 9(03)V9(04).
                   09  WSS-COD-TINT.
                       11  WSS-MSC-BCTI               PIC X(01).
                       11  WSS-MSC-PBTI               PIC X(01).
                       11  WSS-MSC-BPBT               PIC X(01).
                       11  WSS-MSC-SPBT               PIC X(01).
                       11  WSS-COD-CVTI               PIC X(03).
                       11  WSS-MSC-TFPR               PIC X(01).
                       11  WSS-NUM-PREP               PIC 9(03).
                       11  WSS-MSC-UTPR               PIC X(01).
                   09  WSS-SGV-CFON                   PIC 9(03)V9(04).
                   09  WSS-COD-PCHP                   PIC X(12).
                   09  WSS-VEC-VCOC                   PIC X(06).
                   09  WSS-VEC-TOOC                   PIC X(03).
                   09  WSS-VEC-AOOC                   PIC X(03).
                   09  WSS-NUM-PZOD                   PIC 9(05).
                   09  WSS-NUM-PZOM                   PIC 9(05).
                   09  WSS-NUM-PZOA                   PIC 9(05).
                   09  WSS-NUM-EDAD                   PIC 9(05).
                   09  WSS-SGV-TFCT                   PIC 9(03)V9(12).
                   09  WSS-SGV-TMFJ                   PIC 9(11)V9(04).
                   09  WSS-VAL-MCAE                   PIC 9(11)V9(04).
      *----------------------------------------------------------------*
           03  WSS-IND-TICL                           PIC X(01).
           03  WSS-NUM-SEVE                           PIC 9(03).
           03  WSS-IND-AFER                           PIC X(01).

           03  WSS-ANT-AFER                           PIC X(01).
           03  WSS-ANT-RPOC.
               05  WSS-ANT-VCOC                       PIC X(06).
               05  WSS-ANT-TOOC                       PIC X(03).
               05  WSS-ANT-AOOC                       PIC X(03).
           03  WSS-ACT-RPOC.
               05  WSS-ACT-VCOC                       PIC X(06).
               05  WSS-ACT-TOOC                       PIC X(03).
               05  WSS-ACT-AOOC                       PIC X(03).

           03  WSS-COD-TDOC                           PIC X(03).
           03  WSS-SGV-IMPP                           PIC 9(03)V9(12).
           03  WSS-SGV-IMPM                           PIC 9(03)V9(12).
           03  WSS-SGV-IMPD                           PIC 9(03)V9(12).
      *----------------------------------------------------------------*
           03  WSS-COD-TCAR VALUE SPACES              PIC X(03).
      *PVG INI 02-DIC-2015
           03  WSS-GLS-INPZ                           PIC X(01).
           03  WSS-NUM-INPZ REDEFINES WSS-GLS-INPZ    PIC 9(01).
           03  WSS-COD-INPZ.
               05  WSS-IND-GRPR                       PIC X(01).
               05  WSS-IND-TCNL                       PIC X(03).
               05  WSS-IND-CNAL                       PIC X(03).
               05  WSS-IND-FIL1                       PIC X(05).
           03  WSS-IND-GRPO VALUE 'G'                 PIC X(01).
           03  WSS-IND-PROD VALUE 'P'                 PIC X(01).
           03  WSS-NUM-1PZO VALUE 1                   PIC 9(01).
           03  WSS-NUM-MNPZ VALUE 6                   PIC 9(01).
           03  WSS-CNT-1    VALUE 1                   PIC 9(01).
           03  WSS-CNT-2    VALUE 2                   PIC 9(01).
           03  WSS-CNT-3    VALUE 3                   PIC 9(01).
           03  WSS-CNT-4    VALUE 4                   PIC 9(01).
           03  WSS-CNT-5    VALUE 5                   PIC 9(01).
           03  WSS-CNT-6    VALUE 6                   PIC 9(01).
           03  WSS-PZO                                PIC 9(02).
           03  WSS-GLS-PMIN OCCURS 10.
               05  WSS-VEC-PMIN                       PIC 9(03).
           03  WSS-GLS-PMAX OCCURS 10.
               05  WSS-VEC-PMAX                       PIC 9(03).
      *PVG FIN 02-DIC-2015
      *OGB-INI 16-MAR-2016 VARIABLES CHIP EN MC2
           03  WSS-GLS-INMB.
               05  WSS-COD-INMB                       PIC X(04).
               05  WSS-COD-PRYC                       PIC X(04).
           03  WSS-COD-GINM                           PIC X(12).
        01 WSS-CTES.
           03  WSS-CT-SIS     VALUE 'SIS'             PIC X(03).
           03  WSS-CT-TAB     VALUE 'TAB'             PIC X(03).
           03  WSS-CT-TABL    VALUE 'TAB-CIC-TABL'    PIC X(12).
           03  WSS-CT-CNEX    VALUE 'COD    NEX'      PIC X(10).
           03  WSS-CT-CNVG    VALUE 'COD    NVG'      PIC X(10).
           03  WSS-CT-100     VALUE 100               PIC 9(03).
           03  WSS-CT-MC2     VALUE 'MC2'             PIC X(03).
           03  WSS-CT-PFIN    VALUE 'PORFIN > 100'    PIC X(12).
      *OGB-FIN 16-MAR-2016 VARIABLES CHIP EN MC2
      *----------------------------------------------------------------*
       COPY TABWGRCC.                                                   
       COPY TABWGSGS.                                                   
       COPY MC2WXCCH.                                                   
       COPY GNSWGPES.
      *----------------------------------------------------------------*
      *>>>>                                                           
       01  PGM-VARI.
           03 PGM-ICLR                  VALUE ' '       PIC X(01).
           03 PGM-LIMPIAR-TODO          VALUE ' '       PIC X(01).
           03 PGM-LIMPIAR-LLAVES        VALUE 'K'       PIC X(01).
           03 PGM-LIMPIAR-CAMPOS        VALUE 'F'       PIC X(01).
           03 PGM-NO-LIMPIAR-NADA       VALUE 'N'       PIC X(01).
           03 PGM-PROG                                  PIC X(08).
           03 PGM-NTRN                                  PIC X(04).
           03 PGM-STAT.
              05 PGM-STAT-DBC.
                 88 PGM-STAT-DBC-NUL    VALUE '  '.
                 07 PGM-STT1-DBC        VALUE '2' PIC X(01).
                    88 PGM-STAT-DBC-OKS VALUE '0'.
                 07 PGM-STT2-DBC        VALUE '3' PIC X(01).
      *<<<<
              05 PGM-STAT-RCC.                                          
                 88 PGM-STAT-RCC-NUL    VALUE '  '.                     
                 07 PGM-STT1-RCC        VALUE '2' PIC X(01).            
                    88 PGM-STAT-RCC-OKS VALUE '0'.                      
                 07 PGM-STT2-RCC        VALUE '3' PIC X(01).            
              05 PGM-STAT-PLN.
                 88 PGM-STAT-PLN-NUL    VALUE '  '.
                 07 PGM-STT1-PLN        VALUE '2' PIC X(01).
                    88 PGM-STAT-PLN-OKS VALUE '0'.
                 07 PGM-STT2-PLN        VALUE '3' PIC X(01).
              05 PGM-STAT-PRD.
                 88 PGM-STAT-PRD-NUL    VALUE '  '.
                 07 PGM-STT1-PRD        VALUE '2' PIC X(01).
                    88 PGM-STAT-PRD-OKS VALUE '0'.
                 07 PGM-STT2-PRD        VALUE '3' PIC X(01).
      *>>>>
           03 PGM-SRNF                  VALUE '23'      PIC X(02).
           03 PGM-SOKS                  VALUE '00'      PIC X(02).
           03 PGM-SNUL                  VALUE '  '      PIC X(02).
           03 PGM-SUAR                  VALUE SPACES    PIC X(15).
           03 PGM-CMMA.
              05 PGM-CMMA-CHR OCCURS 3000 PIC X(01).

       LINKAGE SECTION.
      *----------------
       01  DFHCOMMAREA.
           02 DFH-CMMA OCCURS 3000 PIC X(01).
       COPY GNSLGFIO.

       PROCEDURE DIVISION.
      *===================

       MAIN SECTION.
       INI-MAIN.
           PERFORM INI.
       LUP-MAIN.
           IF SCR-INST = SCR-INST-HCM
                 PERFORM SCR-COM.
           IF SCR-CCPP = 'ACC'
                 PERFORM SCR-ACC
           ELSE
                 MOVE SCR-INST-HCM TO SCR-INST.
           GO TO LUP-MAIN.
       FIN-MAIN.
           EXIT.

       INI SECTION.
       INI-INI.
       COPY GNSBGEIB.
       COPY GNSBGEDB.
           MOVE LOW-VALUES TO CCH-FLD.
           MOVE LOW-VALUES TO CCH-EDT.
           PERFORM GNS-PRO-RCK.
           PERFORM GNS-BUS-VCA.
           MOVE +3000 TO SCR-TCMA.
           PERFORM GNS-HDL-SYS.
           PERFORM GNS-HDL-FRM.
           MOVE 'MC2PQCCH' TO FIO-PROG.
           PERFORM GNS-BUS-IDD.
      *PTC-INI
           PERFORM GNS-ERR-QUE.
           PERFORM GET-TSK-TERM.
      *PTC-FIN
      *<<<< INI_FIO                                                     
           IF SCR-OFRM-SRV
               MOVE TSK-TERM-ALF TO RCC-COD-TERM-SGS
               MOVE TSK-TERM-ALF TO CCH-COD-TERM
               MOVE TSK-TERM-ALF TO CCH-COD-TERM-MAS
               MOVE TSK-TERM-ALF TO CCH-COD-TERM-MTZ
               MOVE 'S'          TO RCC-OFRM-SRV
           ELSE
               MOVE EIBTRMID     TO RCC-COD-TERM-SGS
               MOVE EIBTRMID     TO CCH-COD-TERM
               MOVE EIBTRMID     TO CCH-COD-TERM-MAS
               MOVE EIBTRMID     TO CCH-COD-TERM-MTZ
               MOVE 'N'          TO RCC-OFRM-SRV.
                                                                        
           MOVE TSK-TERM-ALF TO QUE-TERM.                               
           MOVE 'ICOL'       TO QUE-TYPE.                               
           MOVE +9999        TO QUE-LITM.                               
           MOVE 1            TO QUE-NITM.                               
           MOVE QUE-GET      TO QUE-CMND                                
           PERFORM GNS-PRO-QUE.                                         
           IF QUE-STAT = QUE-STAT-OKS                                   
              MOVE 'S' TO WSS-IND-CORP IN WSS-VARI                      
           ELSE                                                         
              MOVE 'N' TO WSS-IND-CORP IN WSS-VARI.                     

           MOVE +3859 TO SCR-TCMA.                                      
           PERFORM GNS-ERR-QUE.                                         
           IF ( FRM-FFLD = FRM-FFLD-PF5 ) AND ( SCR-NUM-PANT = 1 )      
               MOVE SCR-CCH-FLD TO CCH-FLD                              
               GO TO FIN-INI.                                           
                                                                        
           IF ( FRM-FFLD = FRM-FFLD-PF6 )                               
               MULTIPLY SCR-NUM-PANT BY WSS-IMAX GIVING QUE-NITM        
               ADD 1              TO QUE-NITM                           
               MOVE CCH-NOM-TSCCH TO QUE-COLA                           
               MOVE CCH-LEN-TSCCH TO QUE-LITM                           
               MOVE QUE-GET       TO QUE-CMND                           
               PERFORM GNS-PRO-QUE                                      
               IF QUE-STAT NOT = QUE-STAT-OKS                           
                  MOVE SCR-CCH-FLD TO CCH-FLD                           
                  GO TO FIN-INI.                                        
      *----------------------------------------------------------------*
           MOVE 'TAB'          TO TAB-COD-SIST FIO-SIST.
           MOVE 'VLR'          TO TAB-CIC-TTAB IN TAB.
           MOVE '0999  '       TO TAB-CIC-CTAB IN TAB.
           MOVE 'TAB-CIC-TABL' TO FIO-AKEY.
           MOVE FIO-GET-KEY    TO FIO-CMND.
           PERFORM GNS-FIO-TAB.
           MOVE TAB-COD-CTAB IN TAB TO WSS-COD-PESO IN WSS-VARI.

           MOVE 'TAB'          TO TAB-COD-SIST FIO-SIST.
           MOVE 'VLR'          TO TAB-CIC-TTAB IN TAB.
           MOVE '0998  '       TO TAB-CIC-CTAB IN TAB.
           MOVE 'TAB-CIC-TABL' TO FIO-AKEY.
           MOVE FIO-GET-KEY    TO FIO-CMND.
           PERFORM GNS-FIO-TAB.
           MOVE TAB-COD-CTAB IN TAB TO WSS-COD-UEFE IN WSS-VARI.
           
           PERFORM GET-FHOY.
      *----------------------------------------------------------------*
           MOVE 'N' TO WSS-IND-NCLI IN WSS-VARI.
           MOVE 'MC2'          TO TAB-COD-SIST FIO-SIST.
           MOVE 'VSN'          TO TAB-COD-TTAB IN TAB.
           MOVE 'CHIPNOCLTE  ' TO TAB-COD-CTAB IN TAB.
           MOVE FIO-GET-KEY    TO FIO-CMND.
           PERFORM GNS-FIO-TAB.
           IF FIO-STAT-OKS AND TAB-IND-VIGE IN TAB = 'S'
              MOVE 'S'                 TO WSS-IND-NCLI IN WSS-VARI
              MOVE TAB-GLS-DATA IN TAB TO WSS-IDC-ICLI IN WSS-VARI.
      *----------------------------------------------------------------*
           MOVE SPACES TO WSS-ACT-RPOC IN WSS-VARI.
           MOVE SPACES TO WSS-ANT-RPOC IN WSS-VARI.
           MOVE SPACES TO WSS-ANT-AFER IN WSS-VARI.
      *>>>>                                                             
       FIN-INI.
           EXIT.

       COPY GNSBHSYS.
       COPY GNSBHFRM.
       COPY GNSBPRCK.
       GNS-BUS-VCA SECTION.
       INI-GNS-BUS-VCA.
           MOVE 0 TO FRM-IFLD.
       LUP-GNS-BUS-VCA.
           ADD 1 TO FRM-IFLD.
           IF FRM-IFLD NOT > EIBCALEN AND
              FRM-IFLD NOT > 3000
                MOVE DFH-CMMA(FRM-IFLD) TO PGM-CMMA-CHR(FRM-IFLD)
                GO TO LUP-GNS-BUS-VCA.
           MOVE PGM-CMMA TO SCR-VARI.
       FIN-GNS-BUS-VCA.
           EXIT.
       COPY GNSBBIDD.

       SCR-COM SECTION.
       INI-SCR-COM.
           MOVE FRM-CPSF-AEY TO FRM-CPIM-AEY.
           PERFORM PRO-ALL.
           PERFORM SCR-CLRA-CCH.
           PERFORM EDT-KEY-CCH.
           PERFORM EDT-FLD-CCH.
           PERFORM SCR-PUTA.
           MOVE SCR-INST-HCM TO SCR-INST.
           MOVE SCR-CMNP     TO SYS-PROG.
           MOVE SCR-VARI     TO SYS-CMMA.
           MOVE SCR-TCMA     TO SYS-TCMA.
           MOVE SYS-XCTL     TO SYS-CMND.
      *PTC-INI
           IF NOT SCR-OFRM-SRV
      *PTC-FIN
           PERFORM GNS-PRO-SYS.
       XCT-ERR.
           MOVE 'XCTERR    ' TO MSG-COD-MENS.
           MOVE 'GNS'        TO MSG-COD-SIST.
           PERFORM GET-MSG.
           MOVE MSG-GLS-DESC TO SYS-MEN1.
           MOVE SYS-PROG     TO SYS-MEN2.
           MOVE SYS-ABOR     TO SYS-CMND.
      *PTC-INI
           IF NOT SCR-OFRM-SRV
      *PTC-FIN
           PERFORM GNS-PRO-SYS.
       COPY GNSBGGBK.
       FIN-SCR-COM.
           EXIT.



       SCR-ACC SECTION.
       INI-SCR-ACC.
           IF SCR-INST = SCR-INST-HKY
               PERFORM HBL-KEY
               MOVE SCR-INST-GKY TO SCR-INST
               PERFORM SCR-DMSG
           ELSE
           IF SCR-INST = SCR-INST-GKY
                PERFORM SCR-KEY
                IF SCR-STAT NOT = SCR-STAT-ABT
                        PERFORM SCR-TRL
                ELSE
                        PERFORM DESSCRTRL
                        GO TO FIN-SCR-ACC
           ELSE
           IF SCR-INST = SCR-INST-GAB
                PERFORM GET-CON
           ELSE
           IF SCR-INST = SCR-INST-BRW
               MOVE SCR-FFLD TO FRM-FFLD
               PERFORM BRW-SCR-ACC.
           PERFORM DESSCRTRL.
      *<<<< PFS_SCR_ACC                                                 
           IF FRM-FFLD = FRM-FFLD-PF5 OR FRM-FFLD-PF6                   
               PERFORM VAL-NUM-KEY-CCH                                  
               PERFORM VAL-NUM-FLD-CCH                                  
               PERFORM SCRL-TAB-CCH                                     
               PERFORM SCR-TRL.                                         
      *>>>>                                                             
           MOVE SPACES TO FRM-MENS.
           PERFORM SCR-MSSG.
       FIN-SCR-ACC.
           EXIT.

       BRW-SCR-ACC SECTION.
       INI-BRW-SCR-ACC.
       FIN-BRW-SCR-ACC.
           EXIT.




       SCR-DMSG SECTION.
       INI-SCR-DMSG.
           IF PGM-ICLR = PGM-NO-LIMPIAR-NADA
               NEXT SENTENCE
           ELSE
           IF PGM-ICLR = PGM-LIMPIAR-TODO
               PERFORM SCR-CLRA-CCH
               PERFORM EDT-KEY-CCH
               PERFORM EDT-FLD-CCH
           ELSE
           IF PGM-ICLR = PGM-LIMPIAR-LLAVES
               PERFORM CLR-KEY-CCH
               PERFORM EDT-KEY-CCH
           ELSE
               PERFORM CLR-FLD-CCH
               PERFORM EDT-FLD-CCH.
           PERFORM SCR-PUTA.
           PERFORM SCR-EXIT.
       FIN-SCR-DMSG.
           EXIT.

       SCR-KEY SECTION.
       INI-SCR-KEY.
           PERFORM SCR-RST.
           PERFORM GET-KEY.
           IF FRM-STAT-ABT
                   MOVE SPACES TO FRM-MENS
                   PERFORM SCR-MSSG
                   GO TO FIN-SCR-KEY.
       FND-SCR-KEY.
           MOVE SPACES TO FRM-MENS.
           PERFORM FND-KEY.
           IF FIO-STAT-OKS
               PERFORM PUT-SCR
               MOVE PGM-LIMPIAR-TODO TO PGM-ICLR
               GO TO FIN-SCR-KEY.
      *JSS ELSE
      *        PERFORM CLR-FLD-CCH.
       ERR-SCR-KEY.
      *PTC-INI
           MOVE 'S' TO SCR-IERR.
      *PTC-FIN
           MOVE PGM-LIMPIAR-CAMPOS TO PGM-ICLR.
           IF FRM-MENS NOT > SPACES
               IF FIO-STAT-EOF
                   MOVE 'REGEOF    ' TO MSG-COD-MENS
                   MOVE 'GNS' TO MSG-COD-SIST
                   PERFORM GET-MSG
                   MOVE MSG-GLS-DESC TO FRM-MENS
               ELSE
               IF FIO-STAT = FIO-STAT-NEX
                   MOVE 'REGNEX    ' TO MSG-COD-MENS
                   MOVE 'GNS' TO MSG-COD-SIST
                   PERFORM GET-MSG
                   MOVE MSG-GLS-DESC TO FRM-MENS
               ELSE
                   MOVE 'FIOSTAT' TO MSG-COD-TMSG
                   MOVE FIO-STAT  TO MSG-COD-CMSG
                   MOVE 'GNS'     TO MSG-COD-SIST
                   PERFORM GET-MSG
                   MOVE MSG-GLS-DESC TO FRM-MENS.
           PERFORM SCR-MSSG.
           MOVE SCR-STAT-ABT TO SCR-STAT.
       FIN-SCR-KEY.
           EXIT.

       SCR-RST SECTION.
       INI-SCR-RST.
           MOVE SPACES       TO PGM-ICLR.
           MOVE SPACES       TO SCR-ACTU.
           MOVE SCR-STPP     TO SCR-STAT.
           MOVE SCR-MFLD-NOT TO SCR-MFLD.
           MOVE LOW-VALUES   TO CCH-FLD.
           MOVE LOW-VALUES TO CCH-EDT.
       FIN-SCR-RST.
           EXIT.

       GET-KEY SECTION.
       INI-GET-KEY.
           PERFORM SCR-GKEY.
           IF FRM-STAT-ABT
               MOVE SCR-STAT-ABT TO SCR-STAT.
       FIN-GET-KEY.
           EXIT.

       GET-IKY SECTION.
       INI-GET-IKY.
           PERFORM SCR-GIKY.
           IF FRM-STAT-ABT
               MOVE SCR-STAT-ABT TO SCR-STAT.
       FIN-GET-IKY.
           EXIT.

       FND-KEY SECTION.
       INI-FND-KEY.
      *<<<< INI_FND_KEY                                                 
           GO TO CON-FND-KEY.                                           
      *>>>>                                                             
           PERFORM KEY-ALL-CCH.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM MC2-FIO-RCC.
           IF FIO-STAT-OKS
               MOVE RCC-STP-ITRN IN RCC TO SCR-UMOD.
           MOVE FIO-STAT TO PGM-STAT-RCC.
      *<<<< FIN_FND_KEY                                                 
       CON-FND-KEY.                                                     
      *--------------------------------------------------------------*  
           PERFORM PRO-CAL-COND.                                             
           IF CCH-COD-MENS IN CCH-VARI NOT > SPACES                     
              PERFORM PUT-TAB                                           
              MOVE '00'         TO FIO-STAT                             
              MOVE SCR-STAT-CON TO SCR-STAT                             
           ELSE                                                         
              MOVE 'S'          TO SCR-IERR                             
              MOVE 'MC2'        TO MSG-COD-SIST                         
              MOVE CCH-COD-MENS TO MSG-COD-MENS                         
              PERFORM GET-MSG                                           
              MOVE '00'         TO FIO-STAT                             
              IF CCH-COD-MEN2 > SPACES                                  
                 MOVE MSG-GLS-DESC TO FRM-MEN1                          
                 MOVE CCH-COD-MEN2 TO FRM-MEN2                          
              ELSE                                                      
                 MOVE MSG-GLS-DESC TO FRM-MENS.                         
      *>>>>                                                             
       FIN-FND-KEY.
           IF FIO-STAT = FIO-STAT-NEX
               MOVE 'S' TO SCR-IERR.
       EXT-FND-KEY.
           EXIT.
 
       PUT-SCR SECTION.
       INI-PUT-SCR.
           IF PGM-STAT-RCC-OKS
               MOVE RCC-STP-ITRN IN RCC TO SCR-UMOD.
           PERFORM PUT-ALL-CCH.
       FIN-PUT-SCR.
           EXIT.

       STP-EXIT SECTION.
       INI-STP-EXIT.
           MOVE SCR-PROG TO PGM-PROG.
           MOVE SCR-NTRN TO PGM-NTRN.

           MOVE SCR-PROV TO SCR-PROG.
           MOVE SCR-NTRV TO SCR-NTRN.

           MOVE PGM-PROG TO SCR-PROV
           MOVE PGM-NTRN TO SCR-NTRV.
       FIN-STP-EXIT.
           EXIT.

       SCR-EXIT SECTION.
       INI-SCR-EXIT.
           MOVE 'P'      TO SCR-ICMN.
           MOVE SCR-NTRN TO SYS-NTRN.
           MOVE SCR-VARI TO SYS-CMMA.
           MOVE SCR-TCMA TO SYS-TCMA.
           MOVE SYS-RTRN TO SYS-CMND.
      *PTC-INI
           IF NOT SCR-OFRM-SRV
      *PTC-FIN
           PERFORM GNS-PRO-SYS.
       FIN-SCR-EXIT.
           EXIT.

       SCR-PUTA SECTION.
       INI-SCR-PUTA.
      *PTC-INI
           IF FRM-SUAR EQUAL FRM-SUAR-MAL OR FRM-SUAR-CLR
               MOVE 'S' TO SCR-IERR.
      *PTC-FIN
           MOVE SCR-NMAP TO FRM-NAME.
           MOVE SCR-NLIB TO FRM-NLIB.
           MOVE CCH-FLD TO FRM-DFLD.
           MOVE FRM-PUT-ALL TO FRM-CMND.
           PERFORM GNS-PRO-FRM.
       FIN-SCR-PUTA.
           EXIT.

       SCR-MSSG SECTION.
       INI-SCR-MSSG.
           IF FRM-MEN1 NOT > SPACES
               MOVE SPACES TO FRM-MEN1.
           IF FRM-MEN2 NOT > SPACES
               MOVE SPACES TO FRM-MEN2.
           MOVE FRM-MENS TO CCH-GLS-MENS.
       FIN-SCR-MSSG.
           EXIT.

       SCR-GKEY SECTION.
       INI-SCR-GKEY.
           MOVE SCR-NMAP TO FRM-NAME.
           MOVE SCR-NLIB TO FRM-NLIB.
           MOVE FRM-GET-ALL TO FRM-CMND.
           PERFORM GNS-PRO-FRM.
           MOVE SPACES TO FRM-MENS.
           IF NOT ( FRM-FFLD = FRM-FFLD-RET  OR FRM-FFLD-PF10 OR
                               FRM-FFLD-PF12 OR FRM-FFLD-PF3 )
               MOVE 'PFSINV    ' TO MSG-COD-MENS
               MOVE 'GNS' TO MSG-COD-SIST
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS
               PERFORM FST-KEY-CCH
               PERFORM SCR-MSSG
               PERFORM SCR-PUTA
               PERFORM SCR-EXIT.
           MOVE FRM-DFLD TO CCH-FLD.
           IF FRM-STAT-ABT
               GO TO FIN-SCR-GKEY.
           MOVE FRM-SUAR-OKS TO FRM-SUAR.
           PERFORM VAL-NUM-KEY-CCH.
           IF FRM-SUAR EQUAL FRM-SUAR-MAL OR FRM-SUAR-CLR
      *PTC-INI
               MOVE 'S' TO SCR-IERR
      *PTC-FIN
               PERFORM SCR-MSSG
               PERFORM EDT-KEY-CCH
               PERFORM SCR-PUTA
               PERFORM SCR-EXIT.
      *JSS
           PERFORM CLR-FLD-CCH.
           PERFORM VAL-IKY-CCH.
           IF FRM-SUAR EQUAL FRM-SUAR-MAL OR FRM-SUAR-CLR
               GO TO ERR-SCR-GKEY.
           PERFORM VAL-MKY-CCH.
           IF FRM-SUAR EQUAL FRM-SUAR-MAL OR FRM-SUAR-CLR
               GO TO ERR-SCR-GKEY.
           PERFORM VAL-AKY-CCH.
           IF FRM-SUAR EQUAL FRM-SUAR-MAL OR FRM-SUAR-CLR
               GO TO ERR-SCR-GKEY.
           PERFORM VAL-CON-KEY-CCH.
           IF NOT ( FRM-SUAR EQUAL FRM-SUAR-MAL OR FRM-SUAR-CLR )
               GO TO FIN-SCR-GKEY.
           IF FRM-UCUR NOT > SPACES
               PERFORM FST-KEY-CCH.
       ERR-SCR-GKEY.
      *PTC-INI
           MOVE 'S' TO SCR-IERR.
      *PTC-FIN
           PERFORM SCR-MSSG.
           PERFORM EDT-KEY-CCH.
           PERFORM SCR-PUTA.
           PERFORM SCR-EXIT.
       FIN-SCR-GKEY.
           PERFORM SCR-MSSG.

       SCR-GIKY SECTION.
       INI-SCR-GIKY.
           MOVE SCR-NMAP TO FRM-NAME.
           MOVE SCR-NLIB TO FRM-NLIB.
           MOVE FRM-GET-ALL TO FRM-CMND.
           PERFORM GNS-PRO-FRM.
           MOVE SPACES TO FRM-MENS.
           IF NOT ( FRM-FFLD = FRM-FFLD-RET  OR FRM-FFLD-PF10 OR
                               FRM-FFLD-PF12 OR FRM-FFLD-PF3 )
               MOVE 'PFSINV    ' TO MSG-COD-MENS
               MOVE 'GNS' TO MSG-COD-SIST
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MENS
               PERFORM FST-KEY-CCH
               PERFORM SCR-MSSG
               PERFORM SCR-PUTA
               PERFORM SCR-EXIT.
           MOVE FRM-DFLD TO CCH-FLD.
           IF FRM-STAT-ABT
               GO TO FIN-SCR-GIKY.
           MOVE FRM-SUAR-OKS TO FRM-SUAR.
           PERFORM VAL-NUM-KEY-CCH.
           IF FRM-SUAR EQUAL FRM-SUAR-MAL OR FRM-SUAR-CLR
      *PTC-INI
               MOVE 'S' TO SCR-IERR
      *PTC-FIN
               PERFORM SCR-MSSG
               PERFORM EDT-IKY-CCH
               PERFORM SCR-PUTA
               PERFORM SCR-EXIT.
      *JSS
           PERFORM CLR-FLD-CCH.
           PERFORM VAL-IKY-CCH.
           IF FRM-SUAR EQUAL FRM-SUAR-MAL OR FRM-SUAR-CLR
               GO TO ERR-SCR-GIKY.
           PERFORM VAL-CON-IKY-CCH.
           IF NOT ( FRM-SUAR EQUAL FRM-SUAR-MAL OR FRM-SUAR-CLR )
               GO TO FIN-SCR-GIKY.
           IF FRM-UCUR NOT > SPACES
               PERFORM FST-KEY-CCH.
       ERR-SCR-GIKY.
      *PTC-INI
           MOVE 'S' TO SCR-IERR.
      *PTC-FIN
           PERFORM SCR-MSSG.
           PERFORM EDT-IKY-CCH.
           PERFORM SCR-PUTA.
           PERFORM SCR-EXIT.
       FIN-SCR-GIKY.
           PERFORM SCR-MSSG.

       GET-CON SECTION.
       INI-GET-CON.
           MOVE SCR-NMAP TO FRM-NAME.
           MOVE SCR-NLIB TO FRM-NLIB.
           MOVE FRM-GET-ALL TO FRM-CMND.
           PERFORM GNS-PRO-FRM.
           IF NOT ( FRM-FFLD = FRM-FFLD-RET  OR FRM-FFLD-PF10 OR
                               FRM-FFLD-PF12 OR FRM-FFLD-PF3 )
      *<<<< PFS_GET_CON                                                 
           IF NOT ( FRM-FFLD = FRM-FFLD-PF5 OR FRM-FFLD-PF6 )           
      *>>>>                                                             
               MOVE 'PFSINV    ' TO MSG-COD-MENS
               MOVE 'GNS' TO MSG-COD-SIST
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO CCH-GLS-MEN2
               MOVE SCR-PRMT     TO CCH-GLS-MEN1
               PERFORM FST-MSG
               PERFORM SCR-PUTA
               PERFORM SCR-EXIT.
           MOVE FRM-DFLD TO CCH-FLD.
       FIN-GET-CON.
           MOVE SCR-STAT-CON TO SCR-STAT.

       CLR-MSG SECTION.
       INI-CLR-MSG.
           MOVE SPACES TO CCH-GLS-MENS.
       FIN-CLR-MSG.
           EXIT.

       HBL-IKY SECTION.
       INI-HBL-IKY.
      *PTC-INI
           IF NOT SCR-OFRM-SRV
      *PTC-FIN
           IF SCR-DESDE-CMN
               MOVE CCH-GLS-MENS TO FRM-MENS
               MOVE LOW-VALUES TO CCH-FLD
      * FLB  7-NOV-1994
               PERFORM CLR-KEY-CCH

               IF FRM-MENS < SPACES
                   MOVE LOW-VALUES TO CCH-GLS-MENS
               ELSE
                   MOVE FRM-MENS TO CCH-GLS-MENS.
           PERFORM PRO-MKY-CCH.
           PERFORM PRO-AKY-CCH.
           PERFORM UNP-IKY-CCH.
           PERFORM FST-KEY-CCH.
       FIN-HBL-IKY.
           EXIT.

       HBL-KEY SECTION.
       INI-HBL-KEY.
      *PTC-INI
           IF NOT SCR-OFRM-SRV
      *PTC-FIN
           IF SCR-DESDE-CMN
               MOVE CCH-GLS-MENS TO FRM-MENS
               MOVE LOW-VALUES TO CCH-FLD
               IF FRM-MENS < SPACES
                   MOVE LOW-VALUES TO CCH-GLS-MENS
               ELSE
                   MOVE FRM-MENS TO CCH-GLS-MENS.
           PERFORM UNP-KEY-CCH.
           PERFORM FST-KEY-CCH.
       FIN-HBL-KEY.
           EXIT.

       HBL-FLD SECTION.
       INI-HBL-FLD.
           PERFORM PRO-IKY-CCH.
           PERFORM PRO-AKY-CCH.
           PERFORM UNP-MKY-CCH.
           PERFORM UNP-FLD-CCH.
           PERFORM FST-FLD-CCH.
       FIN-HBL-FLD.
           EXIT.

       FST-MSG SECTION.
       INI-FST-MSG.
           MOVE -1 TO CCH-GLS-MENS-LEN.
       FIN-FST-MSG.
           EXIT.

       PRO-ALL SECTION.
       INI-PRO-ALL.
           PERFORM PRO-KEY-CCH.
           PERFORM FST-MSG.
       FIN-PRO-ALL.
           EXIT.

       SCR-TRL SECTION.
       INI-SCR-TRL.
      *PTC-INI
           IF SCR-STAT NOT = SCR-STPP
               MOVE 'S' TO SCR-IERR.
      *PTC-FIN
           IF FRM-MEN1 NOT > SPACES
               MOVE SCR-PRMT TO FRM-MEN1.
           IF SCR-STAT = SCR-STAT-MOD
               PERFORM HBL-FLD
               PERFORM SCR-MSSG
               PERFORM EDT-KEY-CCH
               PERFORM EDT-FLD-CCH
               PERFORM SCR-PUTA
               PERFORM STP-EXIT
               MOVE SCR-INST-GFL TO SCR-INST
               PERFORM SCR-EXIT.
           IF SCR-STAT = SCR-STAT-SON
               PERFORM PRO-ALL
               PERFORM SCR-MSSG
               PERFORM EDT-KEY-CCH
               PERFORM EDT-FLD-CCH
               PERFORM SCR-PUTA
               PERFORM STP-EXIT
               MOVE SCR-INST-GCS TO SCR-INST
               PERFORM SCR-EXIT.
      *ASUME SCR-STAT-CON.
           MOVE SCR-STAT-CON TO SCR-STAT.
      *    MOVE FRM-CPSF-AEY TO FRM-CPIM-AEY.
           PERFORM PRO-ALL.
           PERFORM SCR-MSSG.
           PERFORM EDT-KEY-CCH.
           PERFORM EDT-FLD-CCH.
           PERFORM SCR-PUTA.
           MOVE SCR-INST-GAB TO SCR-INST.
           PERFORM SCR-EXIT.
       FIN-SCR-TRL.
           EXIT.

       DESSCRTRL SECTION.
       INI-DESSCRTRL.
           MOVE SCR-VFLD-NOT TO SCR-VFLD.
           MOVE FRM-FFLD TO SCR-FFLD.
       FIN-DESSCRTRL.
           IF SCR-FFLD-PF10 OR SCR-FFLD-PF3
                 MOVE SCR-INST-HCM TO SCR-INST
           ELSE
                 MOVE SCR-INST-HKY TO SCR-INST.
       EXT-DESSCRTRL.
           EXIT.

      * PGM-EBR-ALL SECTION.
      * INI-PGM-EBR-ALL.
      *     MOVE 'GNS' TO FIO-SIST.
      *     MOVE FIO-EBR-ALL TO FIO-CMND.
      *     PERFORM GNS-FIO-TAB.
      * FIN-PGM-EBR-ALL.
      *     EXIT.

       COPY MC2BQCCH.
       COPY GNSBVNUM.
       COPY MC2BFRCC.
       COPY GNSBFMSG.
       COPY GNSBGSYS.
       COPY GNSBGDTC.
      *PTC-INI
      *PTC-SUB
      * ISP  10-MAY-2001 13:46:35 
      * COPY GNSBGFRM.
       COPY GNSBG3CF.
      *PTC-FIN
       COPY GNSBGMSG.
       COPY GNSBEKEY.
       COPY GNSBIABT.
       COPY GNSBFTAB.
       COPY GNSBVIND.
       COPY GNSBVMSC.
       COPY GNSBFMSC.
       COPY GNSBVIDC.
       COPY GNSBPVRF.
       COPY GNSBEGLS.
       COPY GNSBGFEC.
       COPY GNSBGHOY.
      *PTC-INI
       COPY GNSBGQUE.
       COPY GNSBGTSK.
      *PTC-FIN

      *<<<< EOF                                                         
       PGM-EBR-ALL SECTION.
       INI-PGM-EBR-ALL.
           MOVE 'GNS' TO FIO-SIST.
           MOVE FIO-EBR-ALL TO FIO-CMND.
           PERFORM GNS-FIO-TAB.
       FIN-PGM-EBR-ALL.
           EXIT.

      *--------------------------------------------------------------*

       PRO-CAL-COND SECTION.
       INI-PRO-CAL-COND.
           PERFORM PRO-OBT-UEFE.
           IF CCH-COD-MENS IN CCH-VARI > SPACES
              GO TO FIN-PRO-CAL-COND.

           PERFORM PRO-CLR-RCCH.

           MOVE ZEROES TO WSS-PLN IN CCH-VARI.
           MOVE ZEROES TO WSS-RSP.
       LUP-PRO-CAL-COND.
           ADD 1 TO WSS-PLN IN CCH-VARI.
           IF WSS-PLN IN CCH-VARI > WSS-PLNMAX IN CCH-VARI
              GO TO FIN-PRO-CAL-COND.
           IF NOT (WSS-PLN-VCOC(WSS-PLN) > SPACES AND
                   WSS-PLN-TOOC(WSS-PLN) > SPACES AND
                   WSS-PLN-AOOC(WSS-PLN) > SPACES)
              GO TO NXT-PRO-CAL-COND.
           
           PERFORM PRO-CLR-PMC2.
           PERFORM PRO-CLR-MTRZ.

      *    Obtiene Plazos x Producto (Matriz)
           PERFORM PRO-OBT-RPPH.
           IF CCH-COD-MENS IN CCH-VARI > SPACES
              GO TO FIN-PRO-CAL-COND.

      *    Obtiene Montos x Producto (Matriz)
           PERFORM PRO-OBT-RMPH.
           IF CCH-COD-MENS IN CCH-VARI > SPACES
              GO TO FIN-PRO-CAL-COND.

      *    Genera Vector Principal
           PERFORM PRO-GEN-VMC2.
           IF CCH-COD-MENS IN CCH-VARI > SPACES
              GO TO FIN-PRO-CAL-COND.

      *    Calcula Plazos Totales
           PERFORM PRO-CAL-PZOT.
           IF CCH-COD-MENS IN CCH-VARI > SPACES
              GO TO FIN-PRO-CAL-COND.

           MOVE ZEROES TO WSS-SGV-IMPP IN WSS-VARI.
           MOVE ZEROES TO WSS-SGV-IMPM IN WSS-VARI.
           MOVE ZEROES TO WSS-SGV-IMPD IN WSS-VARI.

           PERFORM PRO-CAL-TASA.

       NXT-PRO-CAL-COND.
           GO TO LUP-PRO-CAL-COND.
       FIN-PRO-CAL-COND.
           EXIT.
      *----------------------------------------------------------------*
       PUT-TAB SECTION.
       INI-PUT-TAB.
           MOVE CCH-NOM-TSCCH     TO QUE-COLA.
           MOVE QUE-DEL           TO QUE-CMND.
           PERFORM GNS-PRO-QUE.
           MOVE CCH-NOM-TSCCH-MAS TO QUE-COLA.
           MOVE QUE-DEL           TO QUE-CMND.
           PERFORM GNS-PRO-QUE.

           MOVE 1          TO SCR-NUM-PANT.
           MOVE LOW-VALUES TO CCH-COD-PCHP-IDX.
      *
           MOVE 1          TO FRM-IFLD.
           MOVE ZEROES     TO WSS-NITM.
      *----------------------------------------------------------------*
           MOVE ZEROES TO WSS-NUM-PFIL IN WSS-VARI.
           MOVE 1      TO WSS-NUM-PCOL IN WSS-VARI.
      *----------------------------------------------------------------*
           MOVE 1 TO WSS-RSP.
       LUP-PUT-TAB.
           IF WSS-RSP > WSS-RSPMAX
              GO TO FIN-PUT-TAB.
           IF CCH-SGV-CRED-R(WSS-RSP) > ZEROES
              PERFORM PUT-TAB-CCH
              PERFORM PUT-CCH-QUE
              PERFORM SET-FRM-IFLD
           ELSE
           IF FRM-IFLD = 1 AND WSS-RSP = 1
              GO TO MSG-PUT-TAB
           ELSE
              MOVE '00' TO FIO-STAT
              GO TO FIN-PUT-TAB.

           ADD 1 TO WSS-RSP.
           GO TO LUP-PUT-TAB.
       MSG-PUT-TAB.
           MOVE 'MC2'          TO MSG-COD-SIST.
           MOVE 'RCCCPTCCHNEX' TO MSG-COD-MENS.
           PERFORM GET-MSG.
           MOVE MSG-GLS-DESC TO FRM-MENS.
           MOVE '00' TO FIO-STAT.
      *    MOVE 'S' TO SCR-IERR.
       FIN-PUT-TAB.
           MOVE 1                  TO QUE-NITM.
           MOVE CCH-LEN-TSCCH-MAS  TO QUE-LITM.
           MOVE CCH-NOM-TSCCH-MAS  TO QUE-COLA.

      *    IF WSS-NITM > WSS-NITMMAX
           IF WSS-NITM > WSS-FMAX
              MOVE 'S'           TO CCH-MAS-IND-HMAS
           ELSE
              MOVE 'N'           TO CCH-MAS-IND-HMAS.

           MOVE WSS-NITM         TO WSS-NUM-ICUR.
           MOVE WSS-NUM-ICUR     TO WSS-NUM-ICUR-EDT.
           MOVE WSS-NUM-ICUR-EDT TO WSS-NUM-ICUR-ALF.
           MOVE WSS-NUM-ICUR-ALF TO CCH-MAS-NUM-TOCC.
           MOVE CCH-MAS-ITEM     TO QUE-ITEM.
           MOVE QUE-PUT          TO QUE-CMND.
           PERFORM GNS-PRO-QUE.
           IF WSS-NITM > WSS-NITMMAX
               MOVE 'MC2' TO MSG-COD-SIST
               MOVE 'CCH   DMAS' TO MSG-COD-MENS
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MEN2.
       EXT-PUT-TAB.
           EXIT.

       PUT-TAB-CCH SECTION.
       INI-PUT-TAB-CCH.
           PERFORM CLR-WSS-CCH.

      *----------------------------------------------------------------*
           MOVE CCH-COD-PCHP-R(WSS-RSP) TO CCH-COD-PCHP IN CCH-VARI.
           MOVE CCH-SGV-CRED-R(WSS-RSP) TO CCH-SGV-CRED IN CCH-VARI.
           MOVE CCH-NUM-NVEN-R(WSS-RSP) TO CCH-NUM-NVEN IN CCH-VARI.
           MOVE CCH-SGV-TASA-R(WSS-RSP) TO CCH-SGV-TASA IN CCH-VARI.
           MOVE CCH-MSC-BCTI-R(WSS-RSP) TO CCH-MSC-BCTI IN CCH-VARI.
           MOVE CCH-MSC-PBTI-R(WSS-RSP) TO CCH-MSC-PBTI IN CCH-VARI.
           MOVE CCH-MSC-BPBT-R(WSS-RSP) TO CCH-MSC-BPBT IN CCH-VARI.
           MOVE CCH-MSC-SPBT-R(WSS-RSP) TO CCH-MSC-SPBT IN CCH-VARI.
           MOVE CCH-COD-CVTI-R(WSS-RSP) TO CCH-COD-CVTI IN CCH-VARI.
           MOVE CCH-MSC-TFPR-R(WSS-RSP) TO CCH-MSC-TFPR IN CCH-VARI.
           MOVE CCH-NUM-PREP-R(WSS-RSP) TO CCH-NUM-PREP IN CCH-VARI.
           MOVE CCH-MSC-UTPR-R(WSS-RSP) TO CCH-MSC-UTPR IN CCH-VARI.
           MOVE CCH-SGV-CFON-R(WSS-RSP) TO CCH-SGV-CFON IN CCH-VARI.
           MOVE CCH-VEC-VCOC-R(WSS-RSP) TO CCH-VEC-VCOC IN CCH-VARI.
           MOVE CCH-VEC-TOOC-R(WSS-RSP) TO CCH-VEC-TOOC IN CCH-VARI.
           MOVE CCH-VEC-AOOC-R(WSS-RSP) TO CCH-VEC-AOOC IN CCH-VARI.
           MOVE CCH-SGV-ADIC-R(WSS-RSP) TO CCH-SGV-ADIC IN CCH-VARI.
           MOVE CCH-COD-VCAD-R(WSS-RSP) TO CCH-COD-VCAD IN CCH-VARI.
           MOVE CCH-COD-CPTO-R(WSS-RSP) TO CCH-COD-CPTO IN CCH-VARI.
           MOVE CCH-COD-SCPT-R(WSS-RSP) TO CCH-COD-SCPT IN CCH-VARI.
      *----------------------------------------------------------------*

           IF FRM-IFLD > WSS-NITMMAX
              GO TO FIN-PUT-TAB-CCH.

           MOVE CCH-SGV-CFON TO FRM-SGV-CFON IN CCH-FLD(FRM-IFLD).
           MOVE CCH-SGV-CRED TO FRM-SGV-CRED IN CCH-FLD(FRM-IFLD).
           MOVE CCH-NUM-NVEN TO FRM-NUM-NVEN IN CCH-FLD(FRM-IFLD).
           MOVE CCH-SGV-TASA TO FRM-SGV-TASA IN CCH-FLD(FRM-IFLD).
           MOVE CCH-MSC-BCTI TO FRM-MSC-BCTI IN CCH-FLD(FRM-IFLD).
           MOVE CCH-MSC-PBTI TO FRM-MSC-PBTI IN CCH-FLD(FRM-IFLD).
           MOVE CCH-MSC-BPBT TO FRM-MSC-BPBT IN CCH-FLD(FRM-IFLD).
           MOVE CCH-MSC-SPBT TO FRM-MSC-SPBT IN CCH-FLD(FRM-IFLD).
           MOVE CCH-COD-CVTI TO FRM-COD-CVTI IN CCH-FLD(FRM-IFLD).
           MOVE CCH-MSC-TFPR TO FRM-MSC-TFPR IN CCH-FLD(FRM-IFLD).
           MOVE CCH-NUM-PREP TO FRM-NUM-PREP IN CCH-FLD(FRM-IFLD).
           MOVE CCH-MSC-UTPR TO FRM-MSC-UTPR IN CCH-FLD(FRM-IFLD).
           MOVE CCH-COD-PCHP TO FRM-COD-PCHP IN CCH-FLD(FRM-IFLD).
           MOVE CCH-VEC-VCOC TO FRM-VEC-VCOC IN CCH-FLD(FRM-IFLD).
           MOVE CCH-VEC-TOOC TO FRM-VEC-TOOC IN CCH-FLD(FRM-IFLD).
           MOVE CCH-VEC-AOOC TO FRM-VEC-AOOC IN CCH-FLD(FRM-IFLD).
           MOVE CCH-SGV-ADIC TO FRM-SGV-ADIC IN CCH-FLD(FRM-IFLD).
           MOVE CCH-COD-VCAD TO FRM-COD-VCAD IN CCH-FLD(FRM-IFLD).
           MOVE CCH-COD-CPTO TO FRM-COD-CPTO IN CCH-FLD(FRM-IFLD).
           MOVE CCH-COD-SCPT TO FRM-COD-SCPT IN CCH-FLD(FRM-IFLD).
       FIN-PUT-TAB-CCH.
           EXIT.
      *----------------------------------------------------
       PUT-CCH-QUE SECTION.
       INI-PUT-CCH-QUE.
           IF SCR-OFRM-SRV
              IF WSS-IND-CORP IN WSS-VARI = 'N'
                 PERFORM EDT-VAL-CCH.

           ADD 1                   TO WSS-NITM.
           MOVE CCH-NOM-TSCCH      TO QUE-COLA.
           MOVE CCH-LEN-TSCCH      TO QUE-LITM.
           MOVE WSS-NITM           TO QUE-NITM.
           MOVE SPACES             TO QUE-ITEM.
           MOVE CCH-COD-PCHP-IDX   TO QUE-ITEM.
           MOVE QUE-PUT            TO QUE-CMND.
           PERFORM GNS-PRO-QUE.
       FIN-PUT-CCH-QUE.
           EXIT.

       EDT-VAL-CCH SECTION.
       INI-EDT-VAL-CCH.
           MOVE CCH-SGV-CRED     TO FRM-SGV-CRED-EDT.
           MOVE CCH-NUM-NVEN     TO FRM-NUM-NVEN-EDT.
           MOVE CCH-SGV-TASA     TO FRM-SGV-TASA-EDT.
           MOVE CCH-NUM-PREP     TO FRM-NUM-PREP-EDT.

           MOVE FRM-SGV-CRED-EDT TO CCH-SGV-CRED-ALF.
           MOVE FRM-NUM-NVEN-EDT TO CCH-NUM-NVEN-ALF.
           MOVE FRM-SGV-TASA-EDT TO CCH-SGV-TASA-ALF.
           MOVE FRM-NUM-PREP-EDT TO CCH-NUM-PREP-ALF.
       FIN-EDT-VAL-CCH.
           EXIT.

       CLR-WSS-CCH SECTION.
       INI-CLR-WSS-CCH.
      *OGB-INI 16-MAR-2016 VARIABLES CHIP EN MC2
      *    MOVE 'P'    TO CCH-COD-PCHP-ATR.
      *    MOVE 'P'    TO CCH-SGV-CRED-ATR.
      *    MOVE 'P'    TO CCH-NUM-NVEN-ATR.
      *    MOVE 'P'    TO CCH-SGV-TASA-ATR.
      *    MOVE 'P'    TO CCH-MSC-BCTI-ATR.
      *    MOVE 'P'    TO CCH-MSC-PBTI-ATR.
      *    MOVE 'P'    TO CCH-MSC-BPBT-ATR.
      *    MOVE 'P'    TO CCH-MSC-SPBT-ATR.
      *    MOVE 'P'    TO CCH-COD-CVTI-ATR.
      *    MOVE 'P'    TO CCH-MSC-TFPR-ATR.
      *    MOVE 'P'    TO CCH-NUM-PREP-ATR.
      *    MOVE 'P'    TO CCH-MSC-UTPR-ATR.
      *    MOVE 'P'    TO CCH-SGV-CFON-ATR.
      *    MOVE 'P'    TO CCH-VEC-VCOC-ATR.
      *    MOVE 'P'    TO CCH-VEC-TOOC-ATR.
      *    MOVE 'P'    TO CCH-VEC-AOOC-ATR.
      *OGB-FIN 16-MAR-2016 VARIABLES CHIP EN MC2

           MOVE SPACES TO CCH-COD-PCHP.
           MOVE ZEROES TO CCH-SGV-CRED.
           MOVE ZEROES TO CCH-NUM-NVEN.
           MOVE ZEROES TO CCH-SGV-TASA.
           MOVE SPACES TO CCH-MSC-BCTI.
           MOVE SPACES TO CCH-MSC-PBTI.
           MOVE SPACES TO CCH-MSC-BPBT.
           MOVE SPACES TO CCH-MSC-SPBT.
           MOVE SPACES TO CCH-COD-CVTI.
           MOVE SPACES TO CCH-MSC-TFPR.
           MOVE ZEROES TO CCH-NUM-PREP.
           MOVE SPACES TO CCH-MSC-UTPR.
           MOVE ZEROES TO CCH-SGV-CFON.
           MOVE SPACES TO CCH-VEC-VCOC.
           MOVE SPACES TO CCH-VEC-TOOC.
           MOVE SPACES TO CCH-VEC-AOOC.

           IF SCR-OFRM-SRV
               PERFORM CLR-FRM-MTX.
       FIN-CLR-WSS-CCH.
           EXIT.

       CLR-FRM-MTX SECTION.
       INI-CLR-FRM-MTX.
           MOVE 'P'    TO FRM-COD-PCHP-ATR IN CCH-FLD(1).
           MOVE 'P'    TO FRM-SGV-CRED-ATR IN CCH-FLD(1).
           MOVE 'P'    TO FRM-NUM-NVEN-ATR IN CCH-FLD(1).
           MOVE 'P'    TO FRM-SGV-TASA-ATR IN CCH-FLD(1).
           MOVE 'P'    TO FRM-MSC-BCTI-ATR IN CCH-FLD(1).
           MOVE 'P'    TO FRM-MSC-PBTI-ATR IN CCH-FLD(1).
           MOVE 'P'    TO FRM-MSC-BPBT-ATR IN CCH-FLD(1).
           MOVE 'P'    TO FRM-MSC-SPBT-ATR IN CCH-FLD(1).
           MOVE 'P'    TO FRM-COD-CVTI-ATR IN CCH-FLD(1).
           MOVE 'P'    TO FRM-MSC-TFPR-ATR IN CCH-FLD(1).
           MOVE 'P'    TO FRM-NUM-PREP-ATR IN CCH-FLD(1).
           MOVE 'P'    TO FRM-MSC-UTPR-ATR IN CCH-FLD(1).
           MOVE 'P'    TO FRM-SGV-CFON-ATR IN CCH-FLD(1).
           MOVE 'P'    TO FRM-VEC-VCOC-ATR IN CCH-FLD(1).
           MOVE 'P'    TO FRM-VEC-TOOC-ATR IN CCH-FLD(1).
           MOVE 'P'    TO FRM-VEC-AOOC-ATR IN CCH-FLD(1).

           MOVE SPACES TO FRM-COD-PCHP     IN CCH-FLD(1).
           MOVE ZEROES TO FRM-SGV-CRED     IN CCH-FLD(1).
           MOVE ZEROES TO FRM-NUM-NVEN     IN CCH-FLD(1).
           MOVE ZEROES TO FRM-SGV-TASA     IN CCH-FLD(1).
           MOVE SPACES TO FRM-MSC-BCTI     IN CCH-FLD(1).
           MOVE SPACES TO FRM-MSC-PBTI     IN CCH-FLD(1).
           MOVE SPACES TO FRM-MSC-BPBT     IN CCH-FLD(1).
           MOVE SPACES TO FRM-MSC-SPBT     IN CCH-FLD(1).
           MOVE SPACES TO FRM-COD-CVTI     IN CCH-FLD(1).
           MOVE SPACES TO FRM-MSC-TFPR     IN CCH-FLD(1).
           MOVE ZEROES TO FRM-NUM-PREP     IN CCH-FLD(1).
           MOVE SPACES TO FRM-MSC-UTPR     IN CCH-FLD(1).
           MOVE ZEROES TO FRM-SGV-CFON     IN CCH-FLD(1).
           MOVE SPACES TO FRM-VEC-VCOC     IN CCH-FLD(1).
           MOVE SPACES TO FRM-VEC-TOOC     IN CCH-FLD(1).
           MOVE SPACES TO FRM-VEC-AOOC     IN CCH-FLD(1).
       FIN-CLR-FRM-MTX.
           EXIT.

       SET-FRM-IFLD SECTION.
       INI-SET-FRM-IFLD.
           IF SCR-OFRM-SRV
                MOVE 1 TO FRM-IFLD
           ELSE
                ADD 1 TO FRM-IFLD.
       FIN-SET-FRM-IFLD.
           EXIT.

       PUT-TAB-ASC SECTION.
       INI-PUT-TAB-ASC.
           MOVE SPACES TO MSG-COD-MENS.
           MULTIPLY SCR-NUM-PANT BY WSS-IMAX GIVING QUE-NITM.
           MOVE 0 TO FRM-IFLD.
       LUP-PUT-TAB-ASC.
           ADD 1              TO QUE-NITM.
           MOVE CCH-NOM-TSCCH TO QUE-COLA.
           MOVE CCH-LEN-TSCCH TO QUE-LITM.
           MOVE QUE-GET       TO QUE-CMND.
           PERFORM GNS-PRO-QUE.
           IF QUE-STAT NOT = QUE-STAT-OKS
               IF FRM-IFLD = 0
                   MOVE 'CCH   NONXT' TO MSG-COD-MENS
                   GO TO FIN-PUT-TAB-ASC
               ELSE
                   GO TO FIN-PUT-TAB-ASC.
           ADD 1 TO FRM-IFLD.
           MOVE QUE-ITEM TO FRM-COD-PCHP-IDX(FRM-IFLD).
           IF FRM-IFLD < WSS-IMAX
               GO TO LUP-PUT-TAB-ASC.
       FIN-PUT-TAB-ASC.
           IF FRM-IFLD > 0 AND FRM-IFLD < WSS-IMAX
               ADD 1 FRM-IFLD GIVING WSS-I
               PERFORM CLR-FRM VARYING WSS-I FROM WSS-I BY 1
                                 UNTIL WSS-I > WSS-IMAX.
           IF FRM-IFLD > 0
               ADD 1 TO SCR-NUM-PANT.
           IF FRM-IFLD = WSS-IMAX
               ADD 1              TO QUE-NITM
               MOVE CCH-NOM-TSCCH TO QUE-COLA
               MOVE CCH-LEN-TSCCH TO QUE-LITM
               MOVE QUE-GET       TO QUE-CMND
               PERFORM GNS-PRO-QUE
               IF QUE-STAT = QUE-STAT-OKS
                   MOVE 'MC2'        TO MSG-COD-SIST
                   MOVE 'CCH   DMAS' TO MSG-COD-MENS.
       EXT-PUT-TAB-ASC.
           EXIT.

       PUT-TAB-DSC SECTION.
       INI-PUT-TAB-DSC.
           MOVE SPACES TO MSG-COD-MENS.
           IF SCR-NUM-PANT = 1
               MOVE 'CCH   NOPRV' TO MSG-COD-MENS
               GO TO EXT-PUT-TAB-DSC.

           SUBTRACT 1 FROM SCR-NUM-PANT GIVING QUE-NITM.
           MULTIPLY QUE-NITM BY WSS-IMAX GIVING QUE-NITM.
           ADD 1 TO QUE-NITM.
           ADD 1 WSS-IMAX GIVING FRM-IFLD.
       LUP-PUT-TAB-DSC.
           SUBTRACT  1 FROM QUE-NITM.
           MOVE CCH-NOM-TSCCH TO QUE-COLA
           MOVE CCH-LEN-TSCCH TO QUE-LITM
           MOVE QUE-GET       TO QUE-CMND.
           PERFORM GNS-PRO-QUE.
           IF QUE-STAT NOT = QUE-STAT-OKS
               IF FRM-IFLD > WSS-IMAX
                   MOVE 'CCH   NOPRV' TO MSG-COD-MENS
                   GO TO FIN-PUT-TAB-DSC
               ELSE
                   GO TO FIN-PUT-TAB-DSC.
           SUBTRACT 1 FROM FRM-IFLD.
           MOVE QUE-ITEM TO FRM-COD-PCHP-IDX(FRM-IFLD).
           IF FRM-IFLD > 1
               GO TO LUP-PUT-TAB-DSC.
       FIN-PUT-TAB-DSC.

           IF FRM-IFLD NOT > WSS-IMAX AND FRM-IFLD > 1
               SUBTRACT 1 FROM FRM-IFLD GIVING WSS-I
               PERFORM CLR-FRM VARYING WSS-I FROM WSS-I BY -1
                                 UNTIL WSS-I < 1.

           IF FRM-IFLD NOT > WSS-IMAX
               SUBTRACT 1 FROM SCR-NUM-PANT
               MOVE 'MC2'        TO MSG-COD-SIST
               MOVE 'CCH   DMAS' TO MSG-COD-MENS.
       EXT-PUT-TAB-DSC.
           EXIT.

      *------------------------------------------------------
       CLR-FRM SECTION.
       INI-CLR-FRM.
           MOVE ZEROES TO FRM-SGV-CRED IN CCH-FLD(WSS-I).
           MOVE ZEROES TO FRM-NUM-NVEN IN CCH-FLD(WSS-I).
           MOVE ZEROES TO FRM-SGV-TASA IN CCH-FLD(WSS-I).
           MOVE SPACES TO FRM-MSC-BCTI IN CCH-FLD(WSS-I).
           MOVE SPACES TO FRM-MSC-PBTI IN CCH-FLD(WSS-I).
           MOVE SPACES TO FRM-MSC-BPBT IN CCH-FLD(WSS-I).
           MOVE SPACES TO FRM-MSC-SPBT IN CCH-FLD(WSS-I).
           MOVE SPACES TO FRM-COD-CVTI IN CCH-FLD(WSS-I).
           MOVE SPACES TO FRM-MSC-TFPR IN CCH-FLD(WSS-I).
           MOVE ZEROES TO FRM-NUM-PREP IN CCH-FLD(WSS-I).
           MOVE SPACES TO FRM-MSC-UTPR IN CCH-FLD(WSS-I).
           MOVE ZEROES TO FRM-SGV-CFON IN CCH-FLD(WSS-I).
           MOVE SPACES TO FRM-COD-PCHP IN CCH-FLD(WSS-I).
           MOVE SPACES TO FRM-VEC-VCOC IN CCH-FLD(WSS-I).
           MOVE SPACES TO FRM-VEC-TOOC IN CCH-FLD(WSS-I).
           MOVE SPACES TO FRM-VEC-AOOC IN CCH-FLD(WSS-I).
       FIN-CLR-FRM.
           EXIT.

       SCRL-TAB-CCH SECTION.
       INI-SCRL-TAB-CCH.
           MOVE SPACES TO MSG-COD-MENS.

           IF FRM-FFLD = FRM-FFLD-PF6
               PERFORM PUT-TAB-ASC
           ELSE
               PERFORM PUT-TAB-DSC.
           IF MSG-COD-MENS > SPACES
               MOVE 'MC2' TO MSG-COD-SIST
               PERFORM GET-MSG
               MOVE MSG-GLS-DESC TO FRM-MEN2.
       FIN-SCRL-TAB-CCH.
           EXIT.

       COPY TABBFOFI.
       COPY TABBVOFI.
       COPY TABBFCAM.
       COPY SGCBFDBC.
       COPY SGCBFDCP.
       COPY COLBFPOC.
       COPY TABBFPLN.
       COPY TABBFPRD.

       COPY GNSBVCOD.
       COPY GNSBVTAB.
       COPY GNSBPFEC.

       COPY TABBKRCC.

       COPY GNSBGPES.
      *----------------------------------------------------------------*
      *----------------------------------------------------------------*
       PRO-OBT-UEFE SECTION.
       INI-PRO-OBT-UEFE.
           MOVE WSS-COD-UEFE IN WSS-VARI TO CAM-COD-VCAM IN CAM(1).
           MOVE WSS-COD-PESO IN WSS-VARI TO CAM-COD-VCAM IN CAM(2).
           MOVE WSS-FEC-FCUR IN WSS-VARI TO CAM-FEC-FCAM IN CAM(1)
                                            CAM-FEC-FCAM IN CAM(2).
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM TAB-FIO-CAM.
           IF ( NOT FIO-STAT-OKS ) OR
              ( CAM-MSC-STAT IN CAM NOT = 'S' )
               MOVE 'CAM    NEX'        TO CCH-COD-MENS IN CCH-VARI
               GO TO FIN-PRO-OBT-UEFE.
           MOVE CAM-SGV-VCAM IN CAM     TO WSS-SGV-VCAM IN WSS-VARI.
       FIN-PRO-OBT-UEFE.
           EXIT.

       PRO-CLR-MTRZ SECTION.
       INI-PRO-CLR-MTRZ.
           MOVE ZEROES TO WSS-NUM-PFIL IN WSS-VARI.
       LUP-PRO-CLR-PFIL.
           ADD 1 TO WSS-NUM-PFIL IN WSS-VARI.
           IF WSS-NUM-PFIL IN WSS-VARI > WSS-NUM-MFIL IN WSS-VARI
              GO TO EXT-PRO-CLR-MTRZ.
           MOVE ZEROES TO WSS-NUM-PCOL IN WSS-VARI.
       LUP-PRO-CLR-PCOL.
           ADD 1 TO WSS-NUM-PCOL IN WSS-VARI.
           IF WSS-NUM-PCOL IN WSS-VARI > WSS-NUM-MCOL IN WSS-VARI
              GO TO LUP-PRO-CLR-PFIL.

           MOVE ZEROES TO VEC-SGV-CRED(WSS-NUM-PFIL , WSS-NUM-PCOL).
           MOVE ZEROES TO VEC-NUM-NVEN(WSS-NUM-PFIL , WSS-NUM-PCOL).

           GO TO LUP-PRO-CLR-PCOL.
       EXT-PRO-CLR-MTRZ.
           MOVE ZEROES TO WSS-NUM-PFIL IN WSS-VARI.
           MOVE ZEROES TO WSS-NUM-PCOL IN WSS-VARI.
       FIN-PRO-CLR-MTRZ.
           EXIT.

       PRO-CLR-PMC2 SECTION.
       INI-PRO-CLR-PMC2.
           MOVE ZEROES TO WSS-NUM-PMC2 IN WSS-VARI.
       LUP-PRO-CLR-PMC2.
           ADD 1 TO WSS-NUM-PMC2 IN WSS-VARI.
           IF WSS-NUM-PMC2 IN WSS-VARI > WSS-NUM-MMC2 IN WSS-VARI
              GO TO FIN-PRO-CLR-PMC2.
           MOVE ZEROES TO WSS-SGV-CRED(WSS-NUM-PMC2 IN WSS-VARI).
           MOVE ZEROES TO WSS-NUM-NVEN(WSS-NUM-PMC2 IN WSS-VARI).
           MOVE ZEROES TO WSS-SGV-TASA(WSS-NUM-PMC2 IN WSS-VARI).
           MOVE SPACES TO WSS-MSC-BCTI(WSS-NUM-PMC2 IN WSS-VARI).
           MOVE SPACES TO WSS-MSC-PBTI(WSS-NUM-PMC2 IN WSS-VARI).
           MOVE SPACES TO WSS-MSC-BPBT(WSS-NUM-PMC2 IN WSS-VARI).
           MOVE SPACES TO WSS-MSC-SPBT(WSS-NUM-PMC2 IN WSS-VARI).
           MOVE SPACES TO WSS-COD-CVTI(WSS-NUM-PMC2 IN WSS-VARI).
           MOVE SPACES TO WSS-MSC-TFPR(WSS-NUM-PMC2 IN WSS-VARI).
           MOVE ZEROES TO WSS-NUM-PREP(WSS-NUM-PMC2 IN WSS-VARI).
           MOVE SPACES TO WSS-MSC-UTPR(WSS-NUM-PMC2 IN WSS-VARI).
           MOVE ZEROES TO WSS-SGV-CFON(WSS-NUM-PMC2 IN WSS-VARI).
           MOVE SPACES TO WSS-COD-PCHP(WSS-NUM-PMC2 IN WSS-VARI).
           MOVE SPACES TO WSS-VEC-VCOC(WSS-NUM-PMC2 IN WSS-VARI).
           MOVE SPACES TO WSS-VEC-TOOC(WSS-NUM-PMC2 IN WSS-VARI).
           MOVE SPACES TO WSS-VEC-AOOC(WSS-NUM-PMC2 IN WSS-VARI).
           MOVE ZEROES TO WSS-NUM-PZOD(WSS-NUM-PMC2 IN WSS-VARI).
           MOVE ZEROES TO WSS-NUM-PZOM(WSS-NUM-PMC2 IN WSS-VARI).
           MOVE ZEROES TO WSS-NUM-PZOA(WSS-NUM-PMC2 IN WSS-VARI).
           MOVE ZEROES TO WSS-NUM-EDAD(WSS-NUM-PMC2 IN WSS-VARI).
           MOVE ZEROES TO WSS-SGV-TFCT(WSS-NUM-PMC2 IN WSS-VARI).
           MOVE ZEROES TO WSS-SGV-TMFJ(WSS-NUM-PMC2 IN WSS-VARI).
           MOVE ZEROES TO WSS-VAL-MCAE(WSS-NUM-PMC2 IN WSS-VARI).

           MOVE ZEROES TO CCH-SGV-CRED-MTZ(WSS-NUM-PMC2 IN WSS-VARI).
           MOVE ZEROES TO CCH-NUM-NVEN-MTZ(WSS-NUM-PMC2 IN WSS-VARI).
           MOVE ZEROES TO CCH-NUM-PZOD-MTZ(WSS-NUM-PMC2 IN WSS-VARI).
           MOVE ZEROES TO CCH-NUM-PZOM-MTZ(WSS-NUM-PMC2 IN WSS-VARI).
           MOVE ZEROES TO CCH-NUM-PZOA-MTZ(WSS-NUM-PMC2 IN WSS-VARI).

           GO TO LUP-PRO-CLR-PMC2.
       FIN-PRO-CLR-PMC2.
           EXIT.

       PRO-CLR-RCCH SECTION.
       INI-PRO-CLR-RCCH.
           MOVE ZEROES TO WSS-RSP.
       LUP-PRO-CLR-RCCH.
           ADD 1 TO WSS-RSP.
           IF WSS-RSP > WSS-RSPMAX
              GO TO FIN-PRO-CLR-RCCH.
           MOVE SPACES TO CCH-COD-PCHP-R(WSS-RSP).
           MOVE ZEROES TO CCH-SGV-CRED-R(WSS-RSP).
           MOVE ZEROES TO CCH-NUM-NVEN-R(WSS-RSP).
           MOVE ZEROES TO CCH-SGV-TASA-R(WSS-RSP).
           MOVE SPACES TO CCH-MSC-BCTI-R(WSS-RSP).
           MOVE SPACES TO CCH-MSC-PBTI-R(WSS-RSP).
           MOVE SPACES TO CCH-MSC-BPBT-R(WSS-RSP).
           MOVE SPACES TO CCH-MSC-SPBT-R(WSS-RSP).
           MOVE SPACES TO CCH-COD-CVTI-R(WSS-RSP).
           MOVE SPACES TO CCH-MSC-TFPR-R(WSS-RSP).
           MOVE ZEROES TO CCH-NUM-PREP-R(WSS-RSP).
           MOVE SPACES TO CCH-MSC-UTPR-R(WSS-RSP).
           MOVE ZEROES TO CCH-SGV-CFON-R(WSS-RSP).
           MOVE SPACES TO CCH-VEC-VCOC-R(WSS-RSP).
           MOVE SPACES TO CCH-VEC-TOOC-R(WSS-RSP).
           MOVE SPACES TO CCH-VEC-AOOC-R(WSS-RSP).
           MOVE ZEROES TO CCH-SGV-ADIC-R(WSS-RSP).
           MOVE SPACES TO CCH-COD-VCAD-R(WSS-RSP).
           MOVE SPACES TO CCH-COD-CPTO-R(WSS-RSP).
           MOVE SPACES TO CCH-COD-SCPT-R(WSS-RSP).
           GO TO LUP-PRO-CLR-RCCH.
       FIN-PRO-CLR-RCCH.
           EXIT.

       PRO-OBT-RPPH SECTION.
       INI-PRO-OBT-RPPH.
           MOVE 'MC2'                 TO TAB-COD-SIST FIO-SIST.
           MOVE 'PPH'                 TO TAB-COD-TTAB IN TAB.
           MOVE WSS-GLS-IPLN(WSS-PLN) TO TAB-COD-CTAB IN TAB.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM GNS-FIO-TAB.
           IF NOT (FIO-STAT-OKS AND TAB-IND-VIGE IN TAB = 'S')
              MOVE 'PPHPROD  NEX' TO CCH-COD-MENS IN CCH-VARI
              GO TO FIN-PRO-OBT-RPPH.
           MOVE TAB-GLS-DATA IN TAB TO WSS-GLS-RPPH IN WSS-VARI.

           IF (WSS-NUM-PZO1 IN WSS-VARI NOT NUMERIC OR
               WSS-NUM-PZO2 IN WSS-VARI NOT NUMERIC OR
               WSS-NUM-PZO3 IN WSS-VARI NOT NUMERIC OR
               WSS-NUM-PZO4 IN WSS-VARI NOT NUMERIC OR
               WSS-NUM-PZO5 IN WSS-VARI NOT NUMERIC OR
               WSS-NUM-PZO6 IN WSS-VARI NOT NUMERIC OR
               WSS-NUM-PZO7 IN WSS-VARI NOT NUMERIC OR
               WSS-NUM-PZO8 IN WSS-VARI NOT NUMERIC OR
               WSS-NUM-PZO9 IN WSS-VARI NOT NUMERIC OR
               WSS-NUM-PZO0 IN WSS-VARI NOT NUMERIC)
              MOVE 'ERRVALTABPPH' TO CCH-COD-MENS IN CCH-VARI
              GO TO FIN-PRO-OBT-RPPH.

           MOVE FRM-NUM-VIGU IN CCH-FLD TO WSS-NUM-PZOI IN WSS-VARI.
      *PVG INI 02-DIC-2015
           PERFORM PRO-NUM-PZOS.
      *PVG FIN 02-DIC-2015
           IF (WSS-NUM-PZOI IN WSS-VARI = WSS-NUM-PZO1 IN WSS-VARI OR
                                          WSS-NUM-PZO2 IN WSS-VARI OR
                                          WSS-NUM-PZO3 IN WSS-VARI OR
                                          WSS-NUM-PZO4 IN WSS-VARI OR
                                          WSS-NUM-PZO5 IN WSS-VARI)
              MOVE ZEROES TO WSS-NUM-PZOI IN WSS-VARI.

           MOVE WSS-NUM-PZOI IN WSS-VARI TO VEC-NUM-NVEN(1 , 1).           
           MOVE WSS-NUM-PZO1 IN WSS-VARI TO VEC-NUM-NVEN(2 , 1).
           MOVE WSS-NUM-PZO2 IN WSS-VARI TO VEC-NUM-NVEN(3 , 1).
           MOVE WSS-NUM-PZO3 IN WSS-VARI TO VEC-NUM-NVEN(4 , 1).
           MOVE WSS-NUM-PZO4 IN WSS-VARI TO VEC-NUM-NVEN(5 , 1).
           MOVE WSS-NUM-PZO5 IN WSS-VARI TO VEC-NUM-NVEN(6 , 1).

           MOVE WSS-NUM-PZOI IN WSS-VARI TO VEC-NUM-NVEN(1 , 2).
           MOVE WSS-NUM-PZO1 IN WSS-VARI TO VEC-NUM-NVEN(2 , 2).
           MOVE WSS-NUM-PZO2 IN WSS-VARI TO VEC-NUM-NVEN(3 , 2).
           MOVE WSS-NUM-PZO3 IN WSS-VARI TO VEC-NUM-NVEN(4 , 2).
           MOVE WSS-NUM-PZO4 IN WSS-VARI TO VEC-NUM-NVEN(5 , 2).
           MOVE WSS-NUM-PZO5 IN WSS-VARI TO VEC-NUM-NVEN(6 , 2).

           MOVE WSS-NUM-PZOI IN WSS-VARI TO VEC-NUM-NVEN(1 , 3).
           MOVE WSS-NUM-PZO1 IN WSS-VARI TO VEC-NUM-NVEN(2 , 3).
           MOVE WSS-NUM-PZO2 IN WSS-VARI TO VEC-NUM-NVEN(3 , 3).
           MOVE WSS-NUM-PZO3 IN WSS-VARI TO VEC-NUM-NVEN(4 , 3).
           MOVE WSS-NUM-PZO4 IN WSS-VARI TO VEC-NUM-NVEN(5 , 3).
           MOVE WSS-NUM-PZO5 IN WSS-VARI TO VEC-NUM-NVEN(6 , 3).

           MOVE WSS-NUM-PZOI IN WSS-VARI TO VEC-NUM-NVEN(1 , 4).
           MOVE WSS-NUM-PZO1 IN WSS-VARI TO VEC-NUM-NVEN(2 , 4).
           MOVE WSS-NUM-PZO2 IN WSS-VARI TO VEC-NUM-NVEN(3 , 4).
           MOVE WSS-NUM-PZO3 IN WSS-VARI TO VEC-NUM-NVEN(4 , 4).
           MOVE WSS-NUM-PZO4 IN WSS-VARI TO VEC-NUM-NVEN(5 , 4).
           MOVE WSS-NUM-PZO5 IN WSS-VARI TO VEC-NUM-NVEN(6 , 4).

           MOVE WSS-NUM-PZOI IN WSS-VARI TO VEC-NUM-NVEN(1 , 5).
           MOVE WSS-NUM-PZO1 IN WSS-VARI TO VEC-NUM-NVEN(2 , 5).
           MOVE WSS-NUM-PZO2 IN WSS-VARI TO VEC-NUM-NVEN(3 , 5).
           MOVE WSS-NUM-PZO3 IN WSS-VARI TO VEC-NUM-NVEN(4 , 5).
           MOVE WSS-NUM-PZO4 IN WSS-VARI TO VEC-NUM-NVEN(5 , 5).
           MOVE WSS-NUM-PZO5 IN WSS-VARI TO VEC-NUM-NVEN(6 , 5).

           MOVE WSS-NUM-PZOI IN WSS-VARI TO VEC-NUM-NVEN(1 , 6).
           MOVE WSS-NUM-PZO1 IN WSS-VARI TO VEC-NUM-NVEN(2 , 6).
           MOVE WSS-NUM-PZO2 IN WSS-VARI TO VEC-NUM-NVEN(3 , 6).
           MOVE WSS-NUM-PZO3 IN WSS-VARI TO VEC-NUM-NVEN(4 , 6).
           MOVE WSS-NUM-PZO4 IN WSS-VARI TO VEC-NUM-NVEN(5 , 6).
           MOVE WSS-NUM-PZO5 IN WSS-VARI TO VEC-NUM-NVEN(6 , 6).

       FIN-PRO-OBT-RPPH.
           EXIT.

       PRO-OBT-RMPH SECTION.
       INI-PRO-OBT-RMPH.
           MOVE 'MC2'                 TO TAB-COD-SIST FIO-SIST.
           MOVE 'MPH'                 TO TAB-COD-TTAB IN TAB.
           MOVE WSS-GLS-IPLN(WSS-PLN) TO TAB-COD-CTAB IN TAB.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM GNS-FIO-TAB.
           IF FIO-STAT-OKS AND TAB-IND-VIGE IN TAB = 'S'
              MOVE TAB-GLS-DATA IN TAB TO WSS-GLS-RMPH IN WSS-VARI
           ELSE
              MOVE ZEROES              TO WSS-NUM-MTO1 IN WSS-VARI
              MOVE ZEROES              TO WSS-NUM-MTO2 IN WSS-VARI
              MOVE ZEROES              TO WSS-NUM-MTO3 IN WSS-VARI
              MOVE ZEROES              TO WSS-NUM-MTO4 IN WSS-VARI
              MOVE ZEROES              TO WSS-NUM-MTO5 IN WSS-VARI.

           IF (WSS-NUM-MTO1 IN WSS-VARI NOT NUMERIC OR
               WSS-NUM-MTO2 IN WSS-VARI NOT NUMERIC OR
               WSS-NUM-MTO3 IN WSS-VARI NOT NUMERIC OR
               WSS-NUM-MTO4 IN WSS-VARI NOT NUMERIC OR
               WSS-NUM-MTO5 IN WSS-VARI NOT NUMERIC)
              MOVE 'ERRVALTABMPH' TO CCH-COD-MENS IN CCH-VARI
              GO TO FIN-PRO-OBT-RMPH.
           IF WSS-COD-VCOC IN WSS-VARI = WSS-COD-PESO IN WSS-VARI
              MULTIPLY WSS-NUM-MTO1 IN WSS-VARI BY 1000 GIVING
                       WSS-NUM-MTO1 IN WSS-VARI
              MULTIPLY WSS-NUM-MTO2 IN WSS-VARI BY 1000 GIVING
                       WSS-NUM-MTO2 IN WSS-VARI
              MULTIPLY WSS-NUM-MTO3 IN WSS-VARI BY 1000 GIVING
                       WSS-NUM-MTO3 IN WSS-VARI
              MULTIPLY WSS-NUM-MTO4 IN WSS-VARI BY 1000 GIVING
                       WSS-NUM-MTO4 IN WSS-VARI
              MULTIPLY WSS-NUM-MTO5 IN WSS-VARI BY 1000 GIVING
                       WSS-NUM-MTO5 IN WSS-VARI.

           MOVE FRM-VAL-MOPE IN CCH-FLD TO WSS-NUM-MTOI IN WSS-VARI.
           IF (WSS-NUM-MTOI IN WSS-VARI = WSS-NUM-MTO1 IN WSS-VARI OR
                                          WSS-NUM-MTO2 IN WSS-VARI OR
                                          WSS-NUM-MTO3 IN WSS-VARI OR
                                          WSS-NUM-MTO4 IN WSS-VARI OR
                                          WSS-NUM-MTO5 IN WSS-VARI)
              MOVE ZEROES TO WSS-NUM-MTOI IN WSS-VARI.

           MOVE WSS-NUM-MTOI IN WSS-VARI TO VEC-SGV-CRED(1 , 1).
           MOVE WSS-NUM-MTO1 IN WSS-VARI TO VEC-SGV-CRED(1 , 2).
           MOVE WSS-NUM-MTO2 IN WSS-VARI TO VEC-SGV-CRED(1 , 3).
           MOVE WSS-NUM-MTO3 IN WSS-VARI TO VEC-SGV-CRED(1 , 4).
           MOVE WSS-NUM-MTO4 IN WSS-VARI TO VEC-SGV-CRED(1 , 5).
           MOVE WSS-NUM-MTO5 IN WSS-VARI TO VEC-SGV-CRED(1 , 6).

           MOVE WSS-NUM-MTOI IN WSS-VARI TO VEC-SGV-CRED(2 , 1).
           MOVE WSS-NUM-MTO1 IN WSS-VARI TO VEC-SGV-CRED(2 , 2).
           MOVE WSS-NUM-MTO2 IN WSS-VARI TO VEC-SGV-CRED(2 , 3).
           MOVE WSS-NUM-MTO3 IN WSS-VARI TO VEC-SGV-CRED(2 , 4).
           MOVE WSS-NUM-MTO4 IN WSS-VARI TO VEC-SGV-CRED(2 , 5).
           MOVE WSS-NUM-MTO5 IN WSS-VARI TO VEC-SGV-CRED(2 , 6).

           MOVE WSS-NUM-MTOI IN WSS-VARI TO VEC-SGV-CRED(3 , 1).
           MOVE WSS-NUM-MTO1 IN WSS-VARI TO VEC-SGV-CRED(3 , 2).
           MOVE WSS-NUM-MTO2 IN WSS-VARI TO VEC-SGV-CRED(3 , 3).
           MOVE WSS-NUM-MTO3 IN WSS-VARI TO VEC-SGV-CRED(3 , 4).
           MOVE WSS-NUM-MTO4 IN WSS-VARI TO VEC-SGV-CRED(3 , 5).
           MOVE WSS-NUM-MTO5 IN WSS-VARI TO VEC-SGV-CRED(3 , 6).

           MOVE WSS-NUM-MTOI IN WSS-VARI TO VEC-SGV-CRED(4 , 1).
           MOVE WSS-NUM-MTO1 IN WSS-VARI TO VEC-SGV-CRED(4 , 2).
           MOVE WSS-NUM-MTO2 IN WSS-VARI TO VEC-SGV-CRED(4 , 3).
           MOVE WSS-NUM-MTO3 IN WSS-VARI TO VEC-SGV-CRED(4 , 4).
           MOVE WSS-NUM-MTO4 IN WSS-VARI TO VEC-SGV-CRED(4 , 5).
           MOVE WSS-NUM-MTO5 IN WSS-VARI TO VEC-SGV-CRED(4 , 6).

           MOVE WSS-NUM-MTOI IN WSS-VARI TO VEC-SGV-CRED(5 , 1).
           MOVE WSS-NUM-MTO1 IN WSS-VARI TO VEC-SGV-CRED(5 , 2).
           MOVE WSS-NUM-MTO2 IN WSS-VARI TO VEC-SGV-CRED(5 , 3).
           MOVE WSS-NUM-MTO3 IN WSS-VARI TO VEC-SGV-CRED(5 , 4).
           MOVE WSS-NUM-MTO4 IN WSS-VARI TO VEC-SGV-CRED(5 , 5).
           MOVE WSS-NUM-MTO5 IN WSS-VARI TO VEC-SGV-CRED(5 , 6).

           MOVE WSS-NUM-MTOI IN WSS-VARI TO VEC-SGV-CRED(6 , 1).
           MOVE WSS-NUM-MTO1 IN WSS-VARI TO VEC-SGV-CRED(6 , 2).
           MOVE WSS-NUM-MTO2 IN WSS-VARI TO VEC-SGV-CRED(6 , 3).
           MOVE WSS-NUM-MTO3 IN WSS-VARI TO VEC-SGV-CRED(6 , 4).
           MOVE WSS-NUM-MTO4 IN WSS-VARI TO VEC-SGV-CRED(6 , 5).
           MOVE WSS-NUM-MTO5 IN WSS-VARI TO VEC-SGV-CRED(6 , 6).
       FIN-PRO-OBT-RMPH.
           EXIT.

       PRO-GEN-VMC2 SECTION.
       INI-PRO-GEN-VMC2.
           MOVE ZEROES TO WSS-NUM-PFIL IN WSS-VARI.
           MOVE 1      TO WSS-NUM-PCOL IN WSS-VARI.
           MOVE ZEROES TO WSS-NUM-PMC2 IN WSS-VARI.

       LUP-PRO-GEN-VMC2-PFIL.
           ADD 1 TO WSS-NUM-PFIL IN WSS-VARI.
           IF WSS-NUM-PFIL IN WSS-VARI > WSS-NUM-MFIL IN WSS-VARI
              MOVE 1 TO WSS-NUM-PFIL IN WSS-VARI
              ADD  1 TO WSS-NUM-PCOL IN WSS-VARI
              IF WSS-NUM-PCOL IN WSS-VARI > WSS-NUM-MCOL IN WSS-VARI
                 GO TO FIN-PRO-GEN-VMC2.

           IF NOT (VEC-NUM-NVEN(WSS-NUM-PFIL , WSS-NUM-PCOL) > ZEROES 
                   AND
                   VEC-SGV-CRED(WSS-NUM-PFIL , WSS-NUM-PCOL) > ZEROES)
              GO TO NXT-PRO-GEN-VMC2.

           ADD 1 TO WSS-NUM-PMC2 IN WSS-VARI.
           IF WSS-NUM-PMC2 IN WSS-VARI > WSS-NUM-MMC2 IN WSS-VARI
              GO TO FIN-PRO-GEN-VMC2.

           MOVE VEC-NUM-NVEN(WSS-NUM-PFIL , WSS-NUM-PCOL) TO
                WSS-NUM-NVEN(WSS-NUM-PMC2 IN WSS-VARI).
           MOVE VEC-SGV-CRED(WSS-NUM-PFIL , WSS-NUM-PCOL) TO
                WSS-SGV-CRED(WSS-NUM-PMC2 IN WSS-VARI).

           MOVE CCH-COD-GRPO IN CCH-VARI TO 
                WSS-COD-PCHP(WSS-NUM-PMC2 IN WSS-VARI).
           MOVE WSS-PLN-VCOC(WSS-PLN) TO 
                WSS-VEC-VCOC(WSS-NUM-PMC2 IN WSS-VARI).
           MOVE WSS-PLN-TOOC(WSS-PLN) TO
                WSS-VEC-TOOC(WSS-NUM-PMC2 IN WSS-VARI).
           MOVE WSS-PLN-AOOC(WSS-PLN) TO 
                WSS-VEC-AOOC(WSS-NUM-PMC2 IN WSS-VARI).

       NXT-PRO-GEN-VMC2.
           GO TO LUP-PRO-GEN-VMC2-PFIL.
       FIN-PRO-GEN-VMC2.
           EXIT.

       PRO-CAL-PZOT SECTION.
       INI-PRO-CAL-PZOT.
           MOVE ZEROES TO WSS-NUM-PMC2 IN WSS-VARI.
       LUP-PRO-CAL-PZOT.
           ADD 1 TO WSS-NUM-PMC2 IN WSS-VARI.
           IF WSS-NUM-PMC2 IN WSS-VARI > WSS-NUM-MMC2 IN WSS-VARI
              GO TO FIN-PRO-CAL-PZOT.
           IF NOT (WSS-SGV-CRED(WSS-NUM-PMC2 IN WSS-VARI) > ZEROES)
              GO TO FIN-PRO-CAL-PZOT.

           PERFORM PRO-CND-RPOC.

           IF (FRM-NUM-MNP1 IN CCH-FLD > ZEROES OR
               FRM-NUM-MNP2 IN CCH-FLD > ZEROES OR
               FRM-NUM-MNP3 IN CCH-FLD > ZEROES)
               GO TO CNT-PRO-CAL-PZOT-NP.

           IF WSS-NUM-PZOD(WSS-NUM-PMC2 IN WSS-VARI) > ZEROES
              GO TO NXT-PRO-CAL-PZOT.

           IF FRM-IND-UTSV IN CCH-FLD = 'D'
           COMPUTE WSS-NUM-SEVE IN WSS-VARI ROUNDED =
                  ((FRM-NUM-SEVE IN CCH-FLD / 30) *
                  ((WSS-NUM-NVEN(WSS-NUM-PMC2) * 12) - 1)).

           IF FRM-IND-UTSV IN CCH-FLD = 'M'
           COMPUTE WSS-NUM-SEVE IN WSS-VARI ROUNDED =
                  (FRM-NUM-SEVE IN CCH-FLD *
                  ((WSS-NUM-NVEN(WSS-NUM-PMC2) * 12) - 1)).

           IF FRM-IND-UTSV IN CCH-FLD = 'A'
           COMPUTE WSS-NUM-SEVE IN WSS-VARI ROUNDED =
                  ((FRM-NUM-SEVE IN CCH-FLD * 12) *
                  ((WSS-NUM-NVEN(WSS-NUM-PMC2) * 12) - 1)).

           MOVE WSS-NUM-DVEN IN WSS-VARI    TO FEC-ITM1.
           MOVE WSS-NUM-MVEN IN WSS-VARI    TO FEC-ITM2.
           MOVE WSS-NUM-SVEN IN WSS-VARI    TO FEC-ITM3.
           MOVE WSS-NUM-AVEN IN WSS-VARI    TO FEC-ITM4.
           IF FRM-IND-UTSV IN CCH-FLD = 'D'
              MOVE WSS-NUM-SEVE IN WSS-VARI TO FEC-NDIA
              MOVE FEC-SUM-DIA              TO FEC-CMND
           ELSE
           IF FRM-IND-UTSV IN CCH-FLD = 'M'
              MOVE WSS-NUM-SEVE IN WSS-VARI TO FEC-NMES
              MOVE FEC-SUM-MES              TO FEC-CMND
           ELSE
              MOVE WSS-NUM-SEVE IN WSS-VARI TO FEC-NANO
              MOVE FEC-SUM-ANO              TO FEC-CMND.
           MOVE FEC-FORM-FEC                TO FEC-FORM.
           PERFORM CAL-FEC.

           IF WSS-IND-AFER IN WSS-VARI = 'S'
              MOVE FEC-FBLK-N      TO FEC-FBLK
              MOVE FEC-CHOY-N      TO FEC-CHOY
              MOVE FEC-VHBL-S      TO FEC-VHBL
              MOVE FEC-VAL-FEC     TO FEC-CMND
              MOVE FEC-FORM-FEC    TO FEC-FORM
              PERFORM PRO-FEC
              IF FEC-STAT-FER
                 MOVE FEC-FORM-FEC TO FEC-FORM
                 MOVE FEC-SIG-HBL  TO FEC-CMND
                 PERFORM CAL-FEC.
      *Plazo Dias
           MOVE WSS-NUM-DCUR IN WSS-VARI TO FEC-DEC1.
           MOVE WSS-NUM-MCUR IN WSS-VARI TO FEC-MEC1.
           MOVE WSS-NUM-SCUR IN WSS-VARI TO FEC-SEC1.
           MOVE WSS-NUM-ACUR IN WSS-VARI TO FEC-AEC1.
           MOVE FEC-ITM1                 TO FEC-DEC2.
           MOVE FEC-ITM2                 TO FEC-MEC2.
           MOVE FEC-ITM3                 TO FEC-SEC2.
           MOVE FEC-ITM4                 TO FEC-AEC2.
           MOVE FEC-DEC2                 TO WSS-NUM-DMVT IN WSS-VARI.
           MOVE FEC-MEC2                 TO WSS-NUM-MMVT IN WSS-VARI.
           MOVE FEC-SEC2                 TO WSS-NUM-SMVT IN WSS-VARI.
           MOVE FEC-AEC2                 TO WSS-NUM-AMVT IN WSS-VARI.
           MOVE FEC-FORM-FEC             TO FEC-FORM.
           MOVE FEC-DIF-DIA              TO FEC-CMND.
           PERFORM CAL-FEC.
           IF NOT FEC-STAT-OKS
               MOVE 'DIFDIA NOVLD' TO CCH-COD-MENS IN CCH-VARI
               GO TO FIN-PRO-CAL-PZOT.
           IF FEC-NDIA = ZEROES AND
              FEC-DEC1 = FEC-SIND AND FEC-DEC2 = FEC-REST AND
              FEC-SIND < FEC-REST
               COMPUTE FEC-NDIA = FEC-REST - FEC-SIND.
           MOVE FEC-NDIA TO WSS-NUM-PZOD(WSS-NUM-PMC2).

      *Plazo Meses
           MOVE WSS-NUM-DCUR IN WSS-VARI TO FEC-DEC1.
           MOVE WSS-NUM-MCUR IN WSS-VARI TO FEC-MEC1.
           MOVE WSS-NUM-SCUR IN WSS-VARI TO FEC-SEC1.
           MOVE WSS-NUM-ACUR IN WSS-VARI TO FEC-AEC1.
           MOVE WSS-NUM-DMVT IN WSS-VARI TO FEC-DEC2.
           MOVE WSS-NUM-MMVT IN WSS-VARI TO FEC-MEC2.
           MOVE WSS-NUM-SMVT IN WSS-VARI TO FEC-SEC2.
           MOVE WSS-NUM-AMVT IN WSS-VARI TO FEC-AEC2.
           MOVE FEC-FORM-FEC TO FEC-FORM.
           MOVE FEC-DIF-MES  TO FEC-CMND.
           PERFORM CAL-FEC.
           IF NOT FEC-STAT-OKS
              MOVE 'DIFMES NOVLD' TO CCH-COD-MENS IN CCH-VARI
              GO TO FIN-PRO-CAL-PZOT.
           IF FEC-NDIA = ZEROES AND
              FEC-DEC1 = FEC-SIND AND FEC-DEC2 = FEC-REST AND
              FEC-SIND < FEC-REST
              COMPUTE FEC-NDIA = FEC-REST - FEC-SIND.
           IF FEC-NDIA > 0
              ADD 1 TO FEC-NMES.
           MOVE FEC-NMES TO WSS-NUM-PZOM(WSS-NUM-PMC2).

      *Plazo Agnos
           MOVE WSS-NUM-DCUR IN WSS-VARI TO FEC-DEC1.
           MOVE WSS-NUM-MCUR IN WSS-VARI TO FEC-MEC1.
           MOVE WSS-NUM-SCUR IN WSS-VARI TO FEC-SEC1.
           MOVE WSS-NUM-ACUR IN WSS-VARI TO FEC-AEC1.
           MOVE WSS-NUM-DMVT IN WSS-VARI TO FEC-DEC2.
           MOVE WSS-NUM-MMVT IN WSS-VARI TO FEC-MEC2.
           MOVE WSS-NUM-SMVT IN WSS-VARI TO FEC-SEC2.
           MOVE WSS-NUM-AMVT IN WSS-VARI TO FEC-AEC2.
           MOVE FEC-FORM-FEC TO FEC-FORM.
           MOVE FEC-DIF-ANO  TO FEC-CMND.
           PERFORM CAL-FEC.
           IF NOT FEC-STAT-OKS
              MOVE 'DIFANO NOVLD' TO CCH-COD-MENS IN CCH-VARI
              GO TO FIN-PRO-CAL-PZOT.
           IF FEC-NDIA = ZEROES AND
              FEC-DEC1 = FEC-SIND AND FEC-DEC2 = FEC-REST AND
              FEC-SIND < FEC-REST
              COMPUTE FEC-NDIA = FEC-REST - FEC-SIND.
           IF FEC-NDIA > 0
              ADD 1 TO FEC-NANO.
           MOVE FEC-NANO TO WSS-NUM-PZOA(WSS-NUM-PMC2).

           MOVE ZEROES   TO WSS-NUM-EDAD(WSS-NUM-PMC2).

           MOVE WSS-NUM-PMC2 IN WSS-VARI TO WSS-P.
           PERFORM PRO-CRG-PZOI.
           GO TO NXT-PRO-CAL-PZOT.

       CNT-PRO-CAL-PZOT-NP.
           IF WSS-NUM-PZOD(WSS-NUM-PMC2 IN WSS-VARI) > ZEROES
              GO TO NXT-PRO-CAL-PZOT.

           COMPUTE WSS-NUM-SEVE IN WSS-VARI ROUNDED =
                  ((WSS-NUM-NVEN(WSS-NUM-PMC2) * 12) - 1).

           MOVE WSS-NUM-DVEN IN WSS-VARI    TO FEC-ITM1.
           MOVE WSS-NUM-MVEN IN WSS-VARI    TO FEC-ITM2.
           MOVE WSS-NUM-SVEN IN WSS-VARI    TO FEC-ITM3.
           MOVE WSS-NUM-AVEN IN WSS-VARI    TO FEC-ITM4.
       LUP-PRO-CAL-PZOT-NP.
           IF FRM-IND-UTSV IN CCH-FLD = 'D'
              MOVE FRM-NUM-SEVE IN CCH-FLD  TO FEC-NDIA
              MOVE FEC-SUM-DIA              TO FEC-CMND
           ELSE
           IF FRM-IND-UTSV IN CCH-FLD = 'M'
              MOVE FRM-NUM-SEVE IN CCH-FLD  TO FEC-NMES
              MOVE FEC-SUM-MES              TO FEC-CMND
           ELSE
              MOVE FRM-NUM-SEVE IN CCH-FLD  TO FEC-NANO
              MOVE FEC-SUM-ANO              TO FEC-CMND.
           MOVE FEC-FORM-FEC                TO FEC-FORM.
           PERFORM CAL-FEC.
           IF (FEC-ITM2 = FRM-NUM-MNP1 IN CCH-FLD OR
               FEC-ITM2 = FRM-NUM-MNP2 IN CCH-FLD OR
               FEC-ITM2 = FRM-NUM-MNP3 IN CCH-FLD )
               GO TO LUP-PRO-CAL-PZOT-NP.

           SUBTRACT 1 FROM WSS-NUM-SEVE IN WSS-VARI.
           IF WSS-NUM-SEVE IN WSS-VARI > ZEROES
              GO TO LUP-PRO-CAL-PZOT-NP.

           IF WSS-IND-AFER IN WSS-VARI = 'S'
              MOVE FEC-FBLK-N      TO FEC-FBLK
              MOVE FEC-CHOY-N      TO FEC-CHOY
              MOVE FEC-VHBL-S      TO FEC-VHBL
              MOVE FEC-VAL-FEC     TO FEC-CMND
              MOVE FEC-FORM-FEC    TO FEC-FORM
              PERFORM PRO-FEC
              IF FEC-STAT-FER
                 MOVE FEC-FORM-FEC TO FEC-FORM
                 MOVE FEC-SIG-HBL  TO FEC-CMND
                 PERFORM CAL-FEC.

           MOVE WSS-NUM-DCUR IN WSS-VARI TO FEC-DEC1.
           MOVE WSS-NUM-MCUR IN WSS-VARI TO FEC-MEC1.
           MOVE WSS-NUM-SCUR IN WSS-VARI TO FEC-SEC1.
           MOVE WSS-NUM-ACUR IN WSS-VARI TO FEC-AEC1.
           MOVE FEC-ITM1                 TO FEC-DEC2.
           MOVE FEC-ITM2                 TO FEC-MEC2.
           MOVE FEC-ITM3                 TO FEC-SEC2.
           MOVE FEC-ITM4                 TO FEC-AEC2.
           MOVE FEC-DEC2                 TO WSS-NUM-DMVT IN WSS-VARI.
           MOVE FEC-MEC2                 TO WSS-NUM-MMVT IN WSS-VARI.
           MOVE FEC-SEC2                 TO WSS-NUM-SMVT IN WSS-VARI.
           MOVE FEC-AEC2                 TO WSS-NUM-AMVT IN WSS-VARI.
           MOVE FEC-FORM-FEC             TO FEC-FORM.
           MOVE FEC-DIF-DIA              TO FEC-CMND.
           PERFORM CAL-FEC.
           IF NOT FEC-STAT-OKS
               MOVE 'DIFDIA NOVLD' TO CCH-COD-MENS IN CCH-VARI
               GO TO FIN-PRO-CAL-PZOT.
           IF FEC-NDIA = ZEROES AND
              FEC-DEC1 = FEC-SIND AND FEC-DEC2 = FEC-REST AND
              FEC-SIND < FEC-REST
               COMPUTE FEC-NDIA = FEC-REST - FEC-SIND.
           MOVE FEC-NDIA TO WSS-NUM-PZOD(WSS-NUM-PMC2).

           MOVE WSS-NUM-DCUR IN WSS-VARI TO FEC-DEC1.
           MOVE WSS-NUM-MCUR IN WSS-VARI TO FEC-MEC1.
           MOVE WSS-NUM-SCUR IN WSS-VARI TO FEC-SEC1.
           MOVE WSS-NUM-ACUR IN WSS-VARI TO FEC-AEC1.
           MOVE WSS-NUM-DMVT IN WSS-VARI TO FEC-DEC2.
           MOVE WSS-NUM-MMVT IN WSS-VARI TO FEC-MEC2.
           MOVE WSS-NUM-SMVT IN WSS-VARI TO FEC-SEC2.
           MOVE WSS-NUM-AMVT IN WSS-VARI TO FEC-AEC2.
           MOVE FEC-FORM-FEC TO FEC-FORM.
           MOVE FEC-DIF-MES  TO FEC-CMND.
           PERFORM CAL-FEC.
           IF NOT FEC-STAT-OKS
              MOVE 'DIFMES NOVLD' TO CCH-COD-MENS IN CCH-VARI
              GO TO FIN-PRO-CAL-PZOT.
           IF FEC-NDIA = ZEROES AND
              FEC-DEC1 = FEC-SIND AND FEC-DEC2 = FEC-REST AND
              FEC-SIND < FEC-REST
              COMPUTE FEC-NDIA = FEC-REST - FEC-SIND.
           IF FEC-NDIA > 0
              ADD 1 TO FEC-NMES.
           MOVE FEC-NMES TO WSS-NUM-PZOM(WSS-NUM-PMC2).

           MOVE WSS-NUM-DCUR IN WSS-VARI TO FEC-DEC1.
           MOVE WSS-NUM-MCUR IN WSS-VARI TO FEC-MEC1.
           MOVE WSS-NUM-SCUR IN WSS-VARI TO FEC-SEC1.
           MOVE WSS-NUM-ACUR IN WSS-VARI TO FEC-AEC1.
           MOVE WSS-NUM-DMVT IN WSS-VARI TO FEC-DEC2.
           MOVE WSS-NUM-MMVT IN WSS-VARI TO FEC-MEC2.
           MOVE WSS-NUM-SMVT IN WSS-VARI TO FEC-SEC2.
           MOVE WSS-NUM-AMVT IN WSS-VARI TO FEC-AEC2.
           MOVE FEC-FORM-FEC TO FEC-FORM.
           MOVE FEC-DIF-ANO  TO FEC-CMND.
           PERFORM CAL-FEC.
           IF NOT FEC-STAT-OKS
              MOVE 'DIFMES NOVLD' TO CCH-COD-MENS IN CCH-VARI
              GO TO FIN-PRO-CAL-PZOT.
           IF FEC-NDIA = ZEROES AND
              FEC-DEC1 = FEC-SIND AND FEC-DEC2 = FEC-REST AND
              FEC-SIND < FEC-REST
              COMPUTE FEC-NDIA = FEC-REST - FEC-SIND.
           IF FEC-NDIA > 0
              ADD 1 TO FEC-NANO.
           MOVE FEC-NANO TO WSS-NUM-PZOA(WSS-NUM-PMC2).

           MOVE ZEROES TO WSS-NUM-EDAD(WSS-NUM-PMC2).

           MOVE WSS-NUM-PMC2 IN WSS-VARI TO WSS-P.
           PERFORM PRO-CRG-PZOI.

       NXT-PRO-CAL-PZOT.
           GO TO LUP-PRO-CAL-PZOT.
       FIN-PRO-CAL-PZOT.
           EXIT.

       PRO-CRG-PZOI SECTION.
       INI-PRO-CRG-PZOI.
           ADD 1 TO WSS-P.
           IF WSS-P > WSS-NUM-MMC2 IN WSS-VARI
              GO TO FIN-PRO-CRG-PZOI.
           IF NOT (WSS-SGV-CRED(WSS-P) > ZEROES)
              GO TO FIN-PRO-CRG-PZOI.
           IF WSS-NUM-NVEN(WSS-P) = WSS-NUM-NVEN(WSS-NUM-PMC2)
              MOVE WSS-NUM-PZOD(WSS-NUM-PMC2) TO WSS-NUM-PZOD(WSS-P)
              MOVE WSS-NUM-PZOM(WSS-NUM-PMC2) TO WSS-NUM-PZOM(WSS-P)
              MOVE WSS-NUM-PZOA(WSS-NUM-PMC2) TO WSS-NUM-PZOA(WSS-P)
              MOVE WSS-NUM-EDAD(WSS-NUM-PMC2) TO WSS-NUM-EDAD(WSS-P).
           GO TO INI-PRO-CRG-PZOI.
       FIN-PRO-CRG-PZOI.
           EXIT.

      *----------------------------------------------------------------*
       PRO-OBT-TRFA SECTION.
       INI-PRO-OBT-TRFA.
           MOVE 'SIM'                    TO RCC-COD-EVEN IN RCC-VARI.
           MOVE WSS-NUM-DCUR IN WSS-VARI TO RCC-NUM-DCOL IN RCC-VARI.
           MOVE WSS-NUM-MCUR IN WSS-VARI TO RCC-NUM-MCOL IN RCC-VARI.
           MOVE WSS-NUM-SCUR IN WSS-VARI TO RCC-NUM-SCOL IN RCC-VARI.
           MOVE WSS-NUM-ACUR IN WSS-VARI TO RCC-NUM-ACOL IN RCC-VARI.
           MOVE 'CDC'                    TO RCC-COD-TCON IN RCC-VARI.

           MOVE SPACES                   TO RCC-CAI-IOPE IN RCC-VARI.
           MOVE SPACES                   TO RCC-IIC-IOPE IN RCC-VARI.
           MOVE SPACES                   TO RCC-EXT-IOPE IN RCC-VARI.

           MOVE WSS-NUM-ICLI IN WSS-VARI TO RCC-NUM-ICLI IN RCC-VARI.
           MOVE WSS-VRF-ICLI IN WSS-VARI TO RCC-VRF-ICLI IN RCC-VARI.
           MOVE WSS-IND-ICLI IN WSS-VARI TO RCC-IND-ICLI IN RCC-VARI.
           MOVE WSS-GLS-ICLI IN WSS-VARI TO RCC-GLS-ICLI IN RCC-VARI.

           MOVE FRM-COD-TCNL IN CCH-FLD  TO RCC-COD-TCNL IN RCC-VARI.
           MOVE FRM-COD-CNAL IN CCH-FLD  TO RCC-COD-CNAL IN RCC-VARI.

           MOVE WSS-PLN-VCOC(WSS-PLN)    TO RCC-COD-VCOC IN RCC-VARI.
           MOVE WSS-PLN-TOOC(WSS-PLN)    TO RCC-COD-TOOC IN RCC-VARI.
           MOVE WSS-PLN-AOOC(WSS-PLN)    TO RCC-COD-AOOC IN RCC-VARI.

           MOVE FRM-NUM-DVEN IN CCH-FLD  TO RCC-NUM-DVEN IN RCC-VARI.
           MOVE FRM-NUM-MVEN IN CCH-FLD  TO RCC-NUM-MVEN IN RCC-VARI.
           MOVE FRM-NUM-SVEN IN CCH-FLD  TO RCC-NUM-SVEN IN RCC-VARI.
           MOVE FRM-NUM-AVEN IN CCH-FLD  TO RCC-NUM-AVEN IN RCC-VARI.

           MOVE WSS-PLN-VCOC(WSS-PLN)    TO RCC-COD-VCMO IN RCC-VARI.
           MOVE WSS-PLN-VCOC(WSS-PLN)    TO RCC-COD-VSOP IN RCC-VARI.

           MOVE WSS-PLN-VCOC(WSS-PLN)    TO RCC-COD-VCFN IN RCC-VARI.
           MOVE ZEROES                   TO RCC-VAL-INTE IN RCC-VARI.
           MOVE WSS-PLN-VCOC(WSS-PLN)    TO RCC-COD-VCIN IN RCC-VARI.
           MOVE ZEROES                   TO RCC-VAL-VASG IN RCC-VARI.
           MOVE WSS-PLN-VCOC(WSS-PLN)    TO RCC-COD-VCVA IN RCC-VARI.

           MOVE SPACES                   TO RCC-IND-RTBL IN RCC-VARI.
           MOVE '000'                    TO RCC-IND-COMP IN RCC-VARI.
      *PVG INI 07-AGO-2015
      *    MOVE WSS-COD-TCAR IN WSS-VARI TO RCC-COD-TCAR IN RCC-VARI.
      *OGB-INI 16-MAR-2016 VARIABLES CHIP EN MC2
      *    MOVE FRM-IND-DSTN IN CCH-FLD  TO RCC-COD-TCAR IN RCC-VARI.
           MOVE WSS-COD-TCAR IN WSS-VARI TO RCC-COD-TCAR IN RCC-VARI.
      *OGB-FIN 16-MAR-2016 VARIABLES CHIP EN MC2
      *PVG FIN 07-AGO-2015
      *OGB-INI 16-MAR-2016 VARIABLES CHIP EN MC2
           MOVE FRM-NUM-PFIN IN CCH-FLD  TO RCC-NUM-PFIN IN RCC-VARI.
           MOVE FRM-COD-TFIN IN CCH-FLD  TO RCC-COD-TFIN IN RCC-VARI.
           MOVE FRM-IND-CPAC IN CCH-FLD  TO RCC-IND-CPAC IN RCC-VARI.
           MOVE FRM-NUM-CCHP IN CCH-FLD  TO RCC-NUM-CCHP IN RCC-VARI.
           MOVE FRM-COD-TPRO IN CCH-FLD  TO RCC-COD-TPRO IN RCC-VARI.
           MOVE WSS-COD-GINM IN WSS-VARI TO RCC-COD-PRYI IN RCC-VARI.
           MOVE FRM-VAL-PROP IN CCH-FLD  TO RCC-VAL-PROP IN RCC-VARI.
           MOVE FRM-IND-DSTN IN CCH-FLD  TO RCC-COD-DSTN IN RCC-VARI.
      *OGB-FIN 16-MAR-2016 VARIABLES CHIP EN MC2

           PERFORM TAB-LNK-RCC.
      *PVG INI 07-AGO-2015
           MOVE RCC-COD-MENS IN RCC-VARI TO CCH-COD-MENS IN CCH-VARI.
      *PVG FIN 07-AGO-2015
       FIN-PRO-OBT-TRFA.
           EXIT.


      *----------------------------------------------------------------*
      *>>>>
       PRO-CAL-TASA SECTION.
       INI-PRO-CAL-TASA.
           MOVE CCH-NOM-TSMTZ      TO QUE-COLA.
           MOVE CCH-LEN-TSMTZ      TO QUE-LITM.
           MOVE QUE-DEL            TO QUE-CMND.
           PERFORM GNS-PRO-QUE.

           MOVE ZEROES TO WSS-MTZ.
           MOVE 1      TO WSS-NUM-PMC2.

           MOVE 'INT'                      TO RCC-COD-CPTO IN RCC-VARI.
           MOVE WSS-NUM-PZOD(WSS-NUM-PMC2) TO RCC-NUM-PLZO IN RCC-VARI.
           MOVE 'D'                        TO RCC-MSC-UTPZ IN RCC-VARI.

           MOVE WSS-SGV-CRED(WSS-NUM-PMC2) TO RCC-VAL-MOPE IN RCC-VARI.
           MOVE WSS-SGV-CRED(WSS-NUM-PMC2) TO RCC-VAL-SOPE IN RCC-VARI.
           MULTIPLY WSS-NUM-NVEN(WSS-NUM-PMC2) BY 12
             GIVING RCC-VAL-FINA IN RCC-VARI.
pend  *    MOVE FRM-COD-ADC1 IN CCH-FLD    TO RCC-COD-TCAR IN RCC-VARI.

       LUP-PRO-CAL-TASA.
           ADD 1 TO WSS-NUM-PMC2.
           ADD 1 TO WSS-MTZ.
           IF WSS-NUM-PMC2 > WSS-NUM-MMC2
              GO TO EXT-PRO-CAL-TASA.
           IF WSS-SGV-CRED(WSS-NUM-PMC2) NOT > ZEROES
              GO TO EXT-PRO-CAL-TASA.

           MOVE WSS-SGV-CRED(WSS-NUM-PMC2) TO CCH-SGV-CRED-MTZ(WSS-MTZ).

           MULTIPLY WSS-NUM-NVEN(WSS-NUM-PMC2) BY 12
             GIVING CCH-NUM-NVEN-MTZ(WSS-MTZ).

           MOVE WSS-NUM-PZOD(WSS-NUM-PMC2) TO CCH-NUM-PZOD-MTZ(WSS-MTZ).
           MOVE WSS-NUM-PZOM(WSS-NUM-PMC2) TO CCH-NUM-PZOM-MTZ(WSS-MTZ).
           MOVE WSS-NUM-PZOA(WSS-NUM-PMC2) TO CCH-NUM-PZOA-MTZ(WSS-MTZ).

       NXT-PRO-CAL-TASA.
           GO TO LUP-PRO-CAL-TASA.
       EXT-PRO-CAL-TASA.

           MOVE 1                  TO QUE-NITM.
           MOVE CCH-NOM-TSMTZ      TO QUE-COLA.
           MOVE CCH-LEN-TSMTZ      TO QUE-LITM.
           MOVE SPACES             TO QUE-ITEM.
           MOVE CCH-GLS-DMTZ       TO QUE-ITEM.
           MOVE QUE-PUT            TO QUE-CMND.
           PERFORM GNS-PRO-QUE.
      *    IF QUE-STAT = QUE-STAT-OKS
      *       display 'CH:Carga Cola MTZ  OK=' CCH-NOM-TSMTZ
      *       ELSE
      *       display 'CH:Carga Cola MTZ ERR=' CCH-NOM-TSMTZ.
           IF NOT (QUE-STAT = QUE-STAT-OKS)
              MOVE 'ERRPUTQUEMTZ' TO CCH-COD-MENS
              GO TO FIN-PRO-CAL-TASA.

           MOVE CCH-NOM-TSMTZ TO RCC-NOM-TSMTZ IN RCC-VARI.
           PERFORM PRO-OBT-TRFA.
           IF CCH-COD-MENS IN CCH-VARI > SPACES
              GO TO FIN-PRO-CAL-TASA.
           MOVE ZEROES TO RCC-R IN RCC-VARI.
       LUP-PRO-CAL-TASA-QUE.
           ADD 1 TO RCC-R.
           
           ADD 1 TO WSS-RSP.
           IF WSS-RSP > WSS-RSPMAX
              GO TO EXT-PRO-CAL-TASA-QUE.

           MOVE RCC-R          TO QUE-NITM.
           MOVE RCC-NOM-TSSGS  TO QUE-COLA.
           MOVE RCC-LEN-TSSGS  TO QUE-LITM.
           MOVE QUE-GET        TO QUE-CMND.
           PERFORM GNS-PRO-QUE.
           IF NOT (QUE-STAT = QUE-STAT-OKS)
              SUBTRACT 1 FROM WSS-RSP.
              
           IF QUE-STAT = QUE-STAT-OKS
              MOVE '00'     TO FIO-STAT
              MOVE QUE-ITEM TO OSG-APL-VEC(1)

              MOVE WSS-COD-PCHP(RCC-R)   TO CCH-COD-PCHP-R(WSS-RSP)
              MOVE WSS-SGV-CRED(RCC-R)   TO CCH-SGV-CRED-R(WSS-RSP)
              MOVE WSS-NUM-NVEN(RCC-R)   TO CCH-NUM-NVEN-R(WSS-RSP)

              MOVE OSG-SGS-SGV-CSTF(1)   TO CCH-SGV-CFON-R(WSS-RSP)
              MOVE OSG-OCI-VAL-PPRO(1)   TO CCH-SGV-TASA-R(WSS-RSP)
              MOVE OSG-SGS-MSC-BCTI(1)   TO CCH-MSC-BCTI-R(WSS-RSP)
              MOVE OSG-SGS-MSC-PBTI(1)   TO CCH-MSC-PBTI-R(WSS-RSP)
              MOVE OSG-SGS-MSC-BPBT(1)   TO CCH-MSC-BPBT-R(WSS-RSP)
              MOVE OSG-SGS-MSC-SPBT(1)   TO CCH-MSC-SPBT-R(WSS-RSP)
              MOVE OSG-SGS-COD-CVTI(1)   TO CCH-COD-CVTI-R(WSS-RSP)
              MOVE OSG-SGS-MSC-TFPR(1)   TO CCH-MSC-TFPR-R(WSS-RSP)
              MOVE OSG-SGS-NUM-PREP(1)   TO CCH-NUM-PREP-R(WSS-RSP)
              MOVE OSG-SGS-MSC-UTPR(1)   TO CCH-MSC-UTPR-R(WSS-RSP)

              MOVE WSS-VEC-VCOC(RCC-R)   TO CCH-VEC-VCOC-R(WSS-RSP) 
              MOVE WSS-VEC-TOOC(RCC-R)   TO CCH-VEC-TOOC-R(WSS-RSP)
              MOVE WSS-VEC-AOOC(RCC-R)   TO CCH-VEC-AOOC-R(WSS-RSP)

              MOVE ZEROES                TO CCH-SGV-ADIC-R(WSS-RSP)
              MOVE SPACES                TO CCH-COD-VCAD-R(WSS-RSP)
              MOVE OSG-SGS-COD-TSEG(1)   TO CCH-COD-CPTO-R(WSS-RSP)
              MOVE OSG-SGS-COD-SEGU(1)   TO CCH-COD-SCPT-R(WSS-RSP)

              GO TO LUP-PRO-CAL-TASA-QUE.

       EXT-PRO-CAL-TASA-QUE.
           MOVE RCC-NOM-TSSGS     TO QUE-COLA.
           MOVE QUE-DEL           TO QUE-CMND.
           PERFORM GNS-PRO-QUE.
       FIN-PRO-CAL-TASA.
           EXIT.

       PRO-CND-RPOC SECTION.
       INI-PRO-CND-RPOC.
           MOVE 'S' TO WSS-IND-AFER IN WSS-VARI.
           MOVE WSS-VEC-VCOC(WSS-NUM-PMC2 IN WSS-VARI) TO
                WSS-ACT-VCOC IN WSS-VARI.
           MOVE WSS-VEC-TOOC(WSS-NUM-PMC2 IN WSS-VARI) TO
                WSS-ACT-TOOC IN WSS-VARI.
           MOVE WSS-VEC-AOOC(WSS-NUM-PMC2 IN WSS-VARI) TO
                WSS-ACT-AOOC IN WSS-VARI.

           IF WSS-ACT-RPOC IN WSS-VARI = WSS-ANT-RPOC IN WSS-VARI
              MOVE WSS-ANT-AFER IN WSS-VARI TO
                   WSS-IND-AFER IN WSS-VARI
              GO TO FIN-PRO-CND-RPOC.

           MOVE WSS-ACT-VCOC IN WSS-VARI TO POC-COD-VCOC IN POC.
           MOVE WSS-ACT-TOOC IN WSS-VARI TO POC-COD-TOOC IN POC.
           MOVE WSS-ACT-AOOC IN WSS-VARI TO POC-COD-AOOC IN POC.
           MOVE ZEROES                   TO POC-NUM-IPOC IN POC.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM COL-FIO-POC.
           IF NOT FIO-STAT-OKS
              MOVE '00' TO FIO-STAT
              GO TO FIN-PRO-CND-RPOC.
           IF POC-IND-AFER IN POC > SPACES
              MOVE POC-IND-AFER IN POC TO WSS-IND-AFER IN WSS-VARI
           ELSE
              MOVE 'N'                 TO WSS-IND-AFER IN WSS-VARI.

           MOVE WSS-IND-AFER IN WSS-VARI TO WSS-ANT-AFER IN WSS-VARI.
           MOVE WSS-ACT-RPOC IN WSS-VARI TO WSS-ANT-RPOC IN WSS-VARI.
       FIN-PRO-CND-RPOC.
           EXIT.

      *PVG INI 02-DIC-2015
       PRO-NUM-PZOS SECTION.
       INI-PRO-NUM-PZOS.
           IF FRM-COD-GRPO IN CCH-FLD > SPACES
             MOVE WSS-IND-GRPO IN WSS-VARI TO WSS-IND-GRPR IN WSS-VARI
           ELSE
             MOVE WSS-IND-PROD IN WSS-VARI TO WSS-IND-GRPR IN WSS-VARI.
           MOVE FRM-COD-TCNL IN CCH-FLD    TO WSS-IND-TCNL IN WSS-VARI.
           MOVE FRM-COD-CNAL IN CCH-FLD    TO WSS-IND-CNAL IN WSS-VARI.
           MOVE SPACES                     TO WSS-IND-FIL1 IN WSS-VARI.

           MOVE 'MC2'                    TO TAB-COD-SIST FIO-SIST.
           MOVE 'NPZ'                    TO TAB-COD-TTAB IN TAB.
           MOVE WSS-COD-INPZ IN WSS-VARI TO TAB-COD-CTAB IN TAB.
           MOVE FIO-GET-KEY TO FIO-CMND.
           PERFORM GNS-FIO-TAB.
           IF FIO-STAT-OKS AND TAB-IND-VIGE IN TAB = 'S'
              MOVE TAB-COD-DAT1 IN TAB(1) TO WSS-GLS-INPZ IN WSS-VARI
           ELSE
              MOVE SPACES    TO WSS-IND-TCNL IN WSS-VARI
              MOVE SPACES    TO WSS-IND-CNAL IN WSS-VARI
              MOVE SPACES    TO WSS-IND-FIL1 IN WSS-VARI
              MOVE 'MC2'                    TO TAB-COD-SIST FIO-SIST
              MOVE 'NPZ'                    TO TAB-COD-TTAB IN TAB
              MOVE WSS-COD-INPZ IN WSS-VARI TO TAB-COD-CTAB IN TAB
              MOVE FIO-GET-KEY TO FIO-CMND
              PERFORM GNS-FIO-TAB
              IF FIO-STAT-OKS AND TAB-IND-VIGE IN TAB = 'S'
                 MOVE TAB-COD-DAT1 IN TAB(1) TO WSS-GLS-INPZ IN WSS-VARI
              ELSE
                 MOVE WSS-NUM-1PZO IN WSS-VARI TO
                      WSS-NUM-INPZ IN WSS-VARI.

           IF WSS-NUM-INPZ IN WSS-VARI NOT NUMERIC
              MOVE WSS-NUM-1PZO IN WSS-VARI TO WSS-NUM-INPZ IN WSS-VARI.

           IF WSS-NUM-INPZ IN WSS-VARI NOT > ZEROES
              MOVE WSS-NUM-1PZO IN WSS-VARI TO WSS-NUM-INPZ IN WSS-VARI.
           IF WSS-NUM-INPZ IN WSS-VARI > WSS-NUM-MNPZ IN WSS-VARI
              MOVE WSS-NUM-MNPZ IN WSS-VARI TO WSS-NUM-INPZ IN WSS-VARI.

           IF WSS-NUM-INPZ IN WSS-VARI = WSS-CNT-1 IN WSS-VARI
              MOVE ZEROES TO WSS-NUM-PZO1 IN WSS-VARI
              MOVE ZEROES TO WSS-NUM-PZO2 IN WSS-VARI
              MOVE ZEROES TO WSS-NUM-PZO3 IN WSS-VARI
              MOVE ZEROES TO WSS-NUM-PZO4 IN WSS-VARI
              MOVE ZEROES TO WSS-NUM-PZO5 IN WSS-VARI
              MOVE ZEROES TO WSS-NUM-PZO6 IN WSS-VARI
              MOVE ZEROES TO WSS-NUM-PZO7 IN WSS-VARI
              MOVE ZEROES TO WSS-NUM-PZO8 IN WSS-VARI
              MOVE ZEROES TO WSS-NUM-PZO9 IN WSS-VARI
              MOVE ZEROES TO WSS-NUM-PZO0 IN WSS-VARI
              GO TO FIN-PRO-NUM-PZOS.

           PERFORM PRO-ORD-PZOS.
           IF WSS-NUM-INPZ IN WSS-VARI = WSS-CNT-2 IN WSS-VARI
              MOVE WSS-VEC-PMIN(1) TO WSS-NUM-PZO1 IN WSS-VARI
              MOVE ZEROES          TO WSS-NUM-PZO2 IN WSS-VARI
              MOVE ZEROES          TO WSS-NUM-PZO3 IN WSS-VARI
              MOVE ZEROES          TO WSS-NUM-PZO4 IN WSS-VARI
              MOVE ZEROES          TO WSS-NUM-PZO5 IN WSS-VARI
           ELSE
           IF WSS-NUM-INPZ IN WSS-VARI = WSS-CNT-3 IN WSS-VARI
              MOVE WSS-VEC-PMIN(1) TO WSS-NUM-PZO1 IN WSS-VARI
              MOVE WSS-VEC-PMAX(1) TO WSS-NUM-PZO2 IN WSS-VARI
              MOVE ZEROES          TO WSS-NUM-PZO3 IN WSS-VARI
              MOVE ZEROES          TO WSS-NUM-PZO4 IN WSS-VARI
              MOVE ZEROES          TO WSS-NUM-PZO5 IN WSS-VARI
           ELSE
           IF WSS-NUM-INPZ IN WSS-VARI = WSS-CNT-4 IN WSS-VARI
              MOVE WSS-VEC-PMIN(1) TO WSS-NUM-PZO1 IN WSS-VARI
              MOVE WSS-VEC-PMAX(1) TO WSS-NUM-PZO2 IN WSS-VARI
              MOVE WSS-VEC-PMAX(2) TO WSS-NUM-PZO3 IN WSS-VARI
              MOVE ZEROES          TO WSS-NUM-PZO4 IN WSS-VARI
              MOVE ZEROES          TO WSS-NUM-PZO5 IN WSS-VARI
           ELSE
           IF WSS-NUM-INPZ IN WSS-VARI = WSS-CNT-5 IN WSS-VARI
              MOVE WSS-VEC-PMIN(1) TO WSS-NUM-PZO1 IN WSS-VARI
              MOVE WSS-VEC-PMAX(1) TO WSS-NUM-PZO2 IN WSS-VARI
              MOVE WSS-VEC-PMAX(2) TO WSS-NUM-PZO3 IN WSS-VARI
              MOVE WSS-VEC-PMAX(3) TO WSS-NUM-PZO4 IN WSS-VARI
              MOVE ZEROES          TO WSS-NUM-PZO5 IN WSS-VARI
           ELSE
           IF WSS-NUM-INPZ IN WSS-VARI = WSS-CNT-6 IN WSS-VARI
              MOVE WSS-VEC-PMIN(1) TO WSS-NUM-PZO1 IN WSS-VARI
              MOVE WSS-VEC-PMAX(1) TO WSS-NUM-PZO2 IN WSS-VARI
              MOVE WSS-VEC-PMAX(2) TO WSS-NUM-PZO3 IN WSS-VARI
              MOVE WSS-VEC-PMAX(3) TO WSS-NUM-PZO4 IN WSS-VARI
              MOVE WSS-VEC-PMAX(4) TO WSS-NUM-PZO5 IN WSS-VARI.
       FIN-PRO-NUM-PZOS.
           EXIT.

       PRO-ORD-PZOS SECTION.
       INI-PRO-ORD-PZOS.
           MOVE ZEROES TO WSS-VEC-PMIN(1).
           MOVE ZEROES TO WSS-VEC-PMIN(2).
           MOVE ZEROES TO WSS-VEC-PMIN(3).
           MOVE ZEROES TO WSS-VEC-PMIN(4).
           MOVE ZEROES TO WSS-VEC-PMIN(5).
           MOVE ZEROES TO WSS-VEC-PMIN(6).
           MOVE ZEROES TO WSS-VEC-PMIN(7).
           MOVE ZEROES TO WSS-VEC-PMIN(8).
           MOVE ZEROES TO WSS-VEC-PMIN(9).
           MOVE ZEROES TO WSS-VEC-PMIN(10).
           MOVE ZEROES TO WSS-PZO.
           IF WSS-NUM-PZO0 IN WSS-VARI < WSS-NUM-PZOI IN WSS-VARI
              ADD 1 TO WSS-PZO
              MOVE WSS-NUM-PZO0 IN WSS-VARI TO WSS-VEC-PMIN(WSS-PZO).
           IF WSS-NUM-PZO9 IN WSS-VARI < WSS-NUM-PZOI IN WSS-VARI
              ADD 1 TO WSS-PZO
              MOVE WSS-NUM-PZO9 IN WSS-VARI TO WSS-VEC-PMIN(WSS-PZO).
           IF WSS-NUM-PZO8 IN WSS-VARI < WSS-NUM-PZOI IN WSS-VARI
              ADD 1 TO WSS-PZO
              MOVE WSS-NUM-PZO8 IN WSS-VARI TO WSS-VEC-PMIN(WSS-PZO).
           IF WSS-NUM-PZO7 IN WSS-VARI < WSS-NUM-PZOI IN WSS-VARI
              ADD 1 TO WSS-PZO
              MOVE WSS-NUM-PZO7 IN WSS-VARI TO WSS-VEC-PMIN(WSS-PZO).
           IF WSS-NUM-PZO6 IN WSS-VARI < WSS-NUM-PZOI IN WSS-VARI
              ADD 1 TO WSS-PZO
              MOVE WSS-NUM-PZO6 IN WSS-VARI TO WSS-VEC-PMIN(WSS-PZO).
           IF WSS-NUM-PZO5 IN WSS-VARI < WSS-NUM-PZOI IN WSS-VARI
              ADD 1 TO WSS-PZO
              MOVE WSS-NUM-PZO5 IN WSS-VARI TO WSS-VEC-PMIN(WSS-PZO).
           IF WSS-NUM-PZO4 IN WSS-VARI < WSS-NUM-PZOI IN WSS-VARI
              ADD 1 TO WSS-PZO
              MOVE WSS-NUM-PZO4 IN WSS-VARI TO WSS-VEC-PMIN(WSS-PZO).
           IF WSS-NUM-PZO3 IN WSS-VARI < WSS-NUM-PZOI IN WSS-VARI
              ADD 1 TO WSS-PZO
              MOVE WSS-NUM-PZO3 IN WSS-VARI TO WSS-VEC-PMIN(WSS-PZO).
           IF WSS-NUM-PZO2 IN WSS-VARI < WSS-NUM-PZOI IN WSS-VARI
              ADD 1 TO WSS-PZO
              MOVE WSS-NUM-PZO2 IN WSS-VARI TO WSS-VEC-PMIN(WSS-PZO).
           IF WSS-NUM-PZO1 IN WSS-VARI < WSS-NUM-PZOI IN WSS-VARI
              ADD 1 TO WSS-PZO
              MOVE WSS-NUM-PZO1 IN WSS-VARI TO WSS-VEC-PMIN(WSS-PZO).

           MOVE ZEROES TO WSS-VEC-PMAX(1).
           MOVE ZEROES TO WSS-VEC-PMAX(2).
           MOVE ZEROES TO WSS-VEC-PMAX(3).
           MOVE ZEROES TO WSS-VEC-PMAX(4).
           MOVE ZEROES TO WSS-VEC-PMAX(5).
           MOVE ZEROES TO WSS-VEC-PMAX(6).
           MOVE ZEROES TO WSS-VEC-PMAX(7).
           MOVE ZEROES TO WSS-VEC-PMAX(8).
           MOVE ZEROES TO WSS-VEC-PMAX(9).
           MOVE ZEROES TO WSS-VEC-PMAX(10).
           MOVE ZEROES TO WSS-PZO.
           IF WSS-NUM-PZO1 IN WSS-VARI > WSS-NUM-PZOI IN WSS-VARI
              ADD 1 TO WSS-PZO
              MOVE WSS-NUM-PZO1 IN WSS-VARI TO WSS-VEC-PMAX(WSS-PZO).
           IF WSS-NUM-PZO2 IN WSS-VARI > WSS-NUM-PZOI IN WSS-VARI
              ADD 1 TO WSS-PZO
              MOVE WSS-NUM-PZO2 IN WSS-VARI TO WSS-VEC-PMAX(WSS-PZO).
           IF WSS-NUM-PZO3 IN WSS-VARI > WSS-NUM-PZOI IN WSS-VARI
              ADD 1 TO WSS-PZO
              MOVE WSS-NUM-PZO3 IN WSS-VARI TO WSS-VEC-PMAX(WSS-PZO).
           IF WSS-NUM-PZO4 IN WSS-VARI > WSS-NUM-PZOI IN WSS-VARI
              ADD 1 TO WSS-PZO
              MOVE WSS-NUM-PZO4 IN WSS-VARI TO WSS-VEC-PMAX(WSS-PZO).
           IF WSS-NUM-PZO5 IN WSS-VARI > WSS-NUM-PZOI IN WSS-VARI
              ADD 1 TO WSS-PZO
              MOVE WSS-NUM-PZO5 IN WSS-VARI TO WSS-VEC-PMAX(WSS-PZO).
           IF WSS-NUM-PZO6 IN WSS-VARI > WSS-NUM-PZOI IN WSS-VARI
              ADD 1 TO WSS-PZO
              MOVE WSS-NUM-PZO6 IN WSS-VARI TO WSS-VEC-PMAX(WSS-PZO).
           IF WSS-NUM-PZO7 IN WSS-VARI > WSS-NUM-PZOI IN WSS-VARI
              ADD 1 TO WSS-PZO
              MOVE WSS-NUM-PZO7 IN WSS-VARI TO WSS-VEC-PMAX(WSS-PZO).
           IF WSS-NUM-PZO8 IN WSS-VARI > WSS-NUM-PZOI IN WSS-VARI
              ADD 1 TO WSS-PZO
              MOVE WSS-NUM-PZO8 IN WSS-VARI TO WSS-VEC-PMAX(WSS-PZO).
           IF WSS-NUM-PZO9 IN WSS-VARI > WSS-NUM-PZOI IN WSS-VARI
              ADD 1 TO WSS-PZO
              MOVE WSS-NUM-PZO9 IN WSS-VARI TO WSS-VEC-PMAX(WSS-PZO).
           IF WSS-NUM-PZO0 IN WSS-VARI > WSS-NUM-PZOI IN WSS-VARI
              ADD 1 TO WSS-PZO
              MOVE WSS-NUM-PZO0 IN WSS-VARI TO WSS-VEC-PMAX(WSS-PZO).
       FIN-PRO-ORD-PZOS.
           EXIT.
      *PVG FIN 02-DIC-2015
      *>>>>                                                             
